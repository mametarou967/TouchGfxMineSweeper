#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
{
    for (int row = 0; row < row_size; ++row) {
        for (int column = 0; column < column_size; ++column) {
        	blockInit(row,column);  // 全ての要素を0に初期化
        }
    }
}

void Model::tick()
{

}


void Model::blockInit(int row , int column)
{
	Block* block;

	if(row >= row_size) return;
	if(column >= column_size) return;

	block = &matrix[row][column];
	block->isOpen = false;
	block->hasFlag = false;
	block->hasBomb = false;
	block->number = 0;
}


void Model::saveCurrentBlockMatrix(void)
{
	memcpy(preMatrix,matrix,sizeof(preMatrix));
}

bool Model::diffPresentBlock(int row,int column)
{

}

Block Model::getBlock(int row,int column)
{
	if(row >= row_size) return NULL;
	if(column >= column_size) return NULL;
	return matrix[row][column];
}

Block Model::getPreBlock(int row,int column)
{
	if(row >= row_size) return NULL;
	if(column >= column_size) return NULL;

	return preMatrix[row][column];
}

