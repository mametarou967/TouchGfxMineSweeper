#include <gui/gamescreen1_screen/GameScreen1View.hpp>
#include <gui/gamescreen1_screen/GameScreen1Presenter.hpp>
#include <gui/model/Model.hpp>

GameScreen1Presenter::GameScreen1Presenter(GameScreen1View& v)
    : view(v)
{

}

void GameScreen1Presenter::activate()
{
	model = Model();

}

void GameScreen1Presenter::deactivate()
{

}

void GameScreen1Presenter::blockClicked(int row, int column)
{
	// 現在の状態を保存
	model.saveCurrentBlockMatrix();

	// 入力による状態の変更

	// 現在の状態と変化後の状態の比較
	for(int row=0;row<model.getRowMax();row++)
	{
		for(int column=0;row<model.getColumnMax();column++)
		{
			if(model.diffPresentBlock(row,column))
			{
				view.updateBlockImage(row, column, GameScreen1Presenter::BlockState::OpenBomb);
			}
		}
	}

}


BlockState GameScreen1Presenter::GetBlockState(Model::Block block)
{
	bool isOpen;
	bool hasFlag;
	bool hasBomb;
	int number;
	if(!block.isOpen)
	{
	}
	else
	{
		if(block.hasBomb) return OpenBomb;
	}


	return OpenNumber0;
	return OpenNumber1;
	return OpenNumber2;
	return OpenNumber3;
	return OpenNumber4;
	return OpenNumber5;
	return OpenNumber6;
	return OpenNumber7;
	return OpenNumber8;
	return OpenNumber9;



	    	Close = 0,
			CloseWithFlag,
			BlockStateMax
}
}
