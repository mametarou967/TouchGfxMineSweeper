
STM32U5G9J-DK2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000274  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000332a8  08000280  08000280  00001280  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00005138  08033528  08033528  00034528  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  08038660  08038660  00039660  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08038808  08038808  00039808  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000e  08038820  08038820  00039820  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000002  0803882e  0803882e  0003982e  2**0
                  ALLOC
  7 .ARM          00000000  08038830  08038830  000fff90  2**0
                  CONTENTS
  8 .preinit_array 00000000  08038830  08038830  000fff90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000020  08038830  08038830  00039830  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  08038850  08038850  00039850  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         000002a8  20000000  08038858  0003a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          00083438  200002a8  08038b00  0003a2a8  2**2
                  ALLOC
 13 ._user_heap_stack 00002000  200836e0  08038b00  0003a6e0  2**0
                  ALLOC
 14 .ARM.attributes 00000036  00000000  00000000  000fff90  2**0
                  CONTENTS, READONLY
 15 FramebufferSection 00177000  200856e0  200856e0  0003a6e0  2**2
                  ALLOC
 16 VideobufferSection 00000000  201fc6e0  201fc6e0  000fffc6  2**0
                  CONTENTS
 17 ExtFlashSection 000c4f90  a0000000  a0000000  0003b000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .debug_info   000aa2bd  00000000  00000000  000fffc6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00013ec0  00000000  00000000  001aa283  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_loclists 0001ee30  00000000  00000000  001be143  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_aranges 000035b8  00000000  00000000  001dcf78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_rnglists 00003405  00000000  00000000  001e0530  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0004fc55  00000000  00000000  001e3935  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_line   0005cfe1  00000000  00000000  0023358a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001c0fe2  00000000  00000000  0029056b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .comment      000000c2  00000000  00000000  0045154d  2**0
                  CONTENTS, READONLY
 27 .debug_frame  00009c74  00000000  00000000  00451610  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_line_str 0000007e  00000000  00000000  0045b284  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000280 <__do_global_dtors_aux>:
 8000280:	b510      	push	{r4, lr}
 8000282:	4c05      	ldr	r4, [pc, #20]	@ (8000298 <__do_global_dtors_aux+0x18>)
 8000284:	7823      	ldrb	r3, [r4, #0]
 8000286:	b933      	cbnz	r3, 8000296 <__do_global_dtors_aux+0x16>
 8000288:	4b04      	ldr	r3, [pc, #16]	@ (800029c <__do_global_dtors_aux+0x1c>)
 800028a:	b113      	cbz	r3, 8000292 <__do_global_dtors_aux+0x12>
 800028c:	4804      	ldr	r0, [pc, #16]	@ (80002a0 <__do_global_dtors_aux+0x20>)
 800028e:	f3af 8000 	nop.w
 8000292:	2301      	movs	r3, #1
 8000294:	7023      	strb	r3, [r4, #0]
 8000296:	bd10      	pop	{r4, pc}
 8000298:	200002a8 	.word	0x200002a8
 800029c:	00000000 	.word	0x00000000
 80002a0:	08033510 	.word	0x08033510

080002a4 <frame_dummy>:
 80002a4:	b508      	push	{r3, lr}
 80002a6:	4b03      	ldr	r3, [pc, #12]	@ (80002b4 <frame_dummy+0x10>)
 80002a8:	b11b      	cbz	r3, 80002b2 <frame_dummy+0xe>
 80002aa:	4903      	ldr	r1, [pc, #12]	@ (80002b8 <frame_dummy+0x14>)
 80002ac:	4803      	ldr	r0, [pc, #12]	@ (80002bc <frame_dummy+0x18>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	bd08      	pop	{r3, pc}
 80002b4:	00000000 	.word	0x00000000
 80002b8:	200002ac 	.word	0x200002ac
 80002bc:	08033510 	.word	0x08033510

080002c0 <StartDefaultTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80002c0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN defaultTask */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80002c2:	2001      	movs	r0, #1
 80002c4:	f008 fbdd 	bl	8008a82 <osDelay>
  for(;;)
 80002c8:	e7fb      	b.n	80002c2 <StartDefaultTask+0x2>
	...

080002cc <vApplicationIdleHook>:
   vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80002cc:	2000      	movs	r0, #0
 80002ce:	4901      	ldr	r1, [pc, #4]	@ (80002d4 <vApplicationIdleHook+0x8>)
 80002d0:	f009 be10 	b.w	8009ef4 <vTaskSetApplicationTaskTag>
 80002d4:	08001385 	.word	0x08001385

080002d8 <MX_FREERTOS_Init>:
void MX_FREERTOS_Init(void) {
 80002d8:	b508      	push	{r3, lr}
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80002da:	2100      	movs	r1, #0
 80002dc:	4a06      	ldr	r2, [pc, #24]	@ (80002f8 <MX_FREERTOS_Init+0x20>)
 80002de:	4807      	ldr	r0, [pc, #28]	@ (80002fc <MX_FREERTOS_Init+0x24>)
 80002e0:	f008 fb84 	bl	80089ec <osThreadNew>
 80002e4:	4b06      	ldr	r3, [pc, #24]	@ (8000300 <MX_FREERTOS_Init+0x28>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80002e6:	2100      	movs	r1, #0
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80002e8:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80002ea:	4a06      	ldr	r2, [pc, #24]	@ (8000304 <MX_FREERTOS_Init+0x2c>)
 80002ec:	4806      	ldr	r0, [pc, #24]	@ (8000308 <MX_FREERTOS_Init+0x30>)
 80002ee:	f008 fb7d 	bl	80089ec <osThreadNew>
 80002f2:	4b06      	ldr	r3, [pc, #24]	@ (800030c <MX_FREERTOS_Init+0x34>)
 80002f4:	6018      	str	r0, [r3, #0]
}
 80002f6:	bd08      	pop	{r3, pc}
 80002f8:	08033634 	.word	0x08033634
 80002fc:	080002c1 	.word	0x080002c1
 8000300:	200002c8 	.word	0x200002c8
 8000304:	08033610 	.word	0x08033610
 8000308:	08000fbb 	.word	0x08000fbb
 800030c:	200002c4 	.word	0x200002c4

08000310 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000310:	b530      	push	{r4, r5, lr}
 8000312:	b09f      	sub	sp, #124	@ 0x7c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000314:	2260      	movs	r2, #96	@ 0x60
 8000316:	2100      	movs	r1, #0
 8000318:	a806      	add	r0, sp, #24
 800031a:	f032 fabc 	bl	8032896 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800031e:	2218      	movs	r2, #24
 8000320:	2100      	movs	r1, #0
 8000322:	4668      	mov	r0, sp
 8000324:	f032 fab7 	bl	8032896 <memset>

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8000328:	f44f 3040 	mov.w	r0, #196608	@ 0x30000
 800032c:	f006 f8e8 	bl	8006500 <HAL_PWREx_ControlVoltageScaling>
 8000330:	b108      	cbz	r0, 8000336 <SystemClock_Config+0x26>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000332:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000334:	e7fe      	b.n	8000334 <SystemClock_Config+0x24>
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000336:	2201      	movs	r2, #1
 8000338:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800033c:	2503      	movs	r5, #3
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800033e:	e9cd 2306 	strd	r2, r3, [sp, #24]
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000342:	2404      	movs	r4, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000344:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLN = 80;
 8000346:	2250      	movs	r2, #80	@ 0x50
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8000348:	e9cd 001c 	strd	r0, r0, [sp, #112]	@ 0x70
  RCC_OscInitStruct.PLL.PLLMBOOST = RCC_PLLMBOOST_DIV1;
 800034c:	9017      	str	r0, [sp, #92]	@ 0x5c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800034e:	a806      	add	r0, sp, #24
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000350:	e9cd 3514 	strd	r3, r5, [sp, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLP = 2;
 8000354:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000358:	e9cd 331a 	strd	r3, r3, [sp, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLM = 4;
 800035c:	9416      	str	r4, [sp, #88]	@ 0x58
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800035e:	f006 fb95 	bl	8006a8c <HAL_RCC_OscConfig>
 8000362:	b108      	cbz	r0, 8000368 <SystemClock_Config+0x58>
 8000364:	b672      	cpsid	i
  while (1)
 8000366:	e7fe      	b.n	8000366 <SystemClock_Config+0x56>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000368:	231f      	movs	r3, #31
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800036a:	e9cd 0002 	strd	r0, r0, [sp, #8]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 800036e:	e9cd 0004 	strd	r0, r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8000372:	4621      	mov	r1, r4
 8000374:	4668      	mov	r0, sp
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000376:	e9cd 3500 	strd	r3, r5, [sp]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800037a:	f006 fa25 	bl	80067c8 <HAL_RCC_ClockConfig>
 800037e:	b108      	cbz	r0, 8000384 <SystemClock_Config+0x74>
 8000380:	b672      	cpsid	i
  while (1)
 8000382:	e7fe      	b.n	8000382 <SystemClock_Config+0x72>
}
 8000384:	b01f      	add	sp, #124	@ 0x7c
 8000386:	bd30      	pop	{r4, r5, pc}

08000388 <main>:
{
 8000388:	b580      	push	{r7, lr}
 800038a:	b098      	sub	sp, #96	@ 0x60
  HAL_Init();
 800038c:	f003 fc3c 	bl	8003c08 <HAL_Init>
  SystemClock_Config();
 8000390:	f7ff ffbe 	bl	8000310 <SystemClock_Config>
  HAL_PWREx_DisableUCPDDeadBattery();
 8000394:	f006 f928 	bl	80065e8 <HAL_PWREx_DisableUCPDDeadBattery>
  if (HAL_PWREx_ConfigSupply(PWR_SMPS_SUPPLY) != HAL_OK)
 8000398:	2002      	movs	r0, #2
 800039a:	f006 f8f9 	bl	8006590 <HAL_PWREx_ConfigSupply>
 800039e:	4605      	mov	r5, r0
 80003a0:	b108      	cbz	r0, 80003a6 <main+0x1e>
 80003a2:	b672      	cpsid	i
  while (1)
 80003a4:	e7fe      	b.n	80003a4 <main+0x1c>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80003a6:	f04f 0914 	mov.w	r9, #20
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003aa:	4cc0      	ldr	r4, [pc, #768]	@ (80006ac <main+0x324>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80003ac:	4601      	mov	r1, r0
 80003ae:	464a      	mov	r2, r9
 80003b0:	a80b      	add	r0, sp, #44	@ 0x2c
 80003b2:	f032 fa70 	bl	8032896 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003b6:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80003ba:	2601      	movs	r6, #1
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003bc:	f043 0310 	orr.w	r3, r3, #16
 80003c0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 80003c4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80003c8:	f04f 0810 	mov.w	r8, #16
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003cc:	f003 0310 	and.w	r3, r3, #16
 80003d0:	9304      	str	r3, [sp, #16]
 80003d2:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003d4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80003d8:	f04f 0a20 	mov.w	sl, #32
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003dc:	f043 0304 	orr.w	r3, r3, #4
 80003e0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 80003e4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80003e8:	2201      	movs	r2, #1
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003ea:	f003 0304 	and.w	r3, r3, #4
 80003ee:	9305      	str	r3, [sp, #20]
 80003f0:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80003f2:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80003f6:	2150      	movs	r1, #80	@ 0x50
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80003f8:	f043 0320 	orr.w	r3, r3, #32
 80003fc:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000400:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000404:	48aa      	ldr	r0, [pc, #680]	@ (80006b0 <main+0x328>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000406:	f003 0320 	and.w	r3, r3, #32
 800040a:	9306      	str	r3, [sp, #24]
 800040c:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800040e:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000412:	2702      	movs	r7, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000414:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000418:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800041c:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000420:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000424:	9307      	str	r3, [sp, #28]
 8000426:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000428:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 800042c:	f043 0302 	orr.w	r3, r3, #2
 8000430:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000434:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000438:	f003 0302 	and.w	r3, r3, #2
 800043c:	9308      	str	r3, [sp, #32]
 800043e:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000440:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000444:	f043 0308 	orr.w	r3, r3, #8
 8000448:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800044c:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000450:	f003 0308 	and.w	r3, r3, #8
 8000454:	9309      	str	r3, [sp, #36]	@ 0x24
 8000456:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000458:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 800045c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000460:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000464:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000468:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800046c:	930a      	str	r3, [sp, #40]	@ 0x28
 800046e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000470:	f004 faea 	bl	8004a48 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000474:	462a      	mov	r2, r5
 8000476:	f641 4101 	movw	r1, #7169	@ 0x1c01
 800047a:	488e      	ldr	r0, [pc, #568]	@ (80006b4 <main+0x32c>)
 800047c:	f004 fae4 	bl	8004a48 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, USER_LD2_RED_Pin|USER_LD3_GREEN_Pin, GPIO_PIN_SET);
 8000480:	2201      	movs	r2, #1
 8000482:	4649      	mov	r1, r9
 8000484:	488c      	ldr	r0, [pc, #560]	@ (80006b8 <main+0x330>)
 8000486:	f004 fadf 	bl	8004a48 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(LCD_DISP_EN_GPIO_Port, &GPIO_InitStruct);
 800048a:	4889      	ldr	r0, [pc, #548]	@ (80006b0 <main+0x328>)
 800048c:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800048e:	e9cd 860b 	strd	r8, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000492:	e9cd 550d 	strd	r5, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_DISP_EN_GPIO_Port, &GPIO_InitStruct);
 8000496:	f004 f9c3 	bl	8004820 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800049a:	4b88      	ldr	r3, [pc, #544]	@ (80006bc <main+0x334>)
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 800049c:	4884      	ldr	r0, [pc, #528]	@ (80006b0 <main+0x328>)
 800049e:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80004a0:	e9cd a30b 	strd	sl, r3, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80004a4:	960d      	str	r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004a6:	f04f 0a11 	mov.w	sl, #17
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 80004aa:	f004 f9b9 	bl	8004820 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004ae:	2340      	movs	r3, #64	@ 0x40
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80004b0:	487f      	ldr	r0, [pc, #508]	@ (80006b0 <main+0x328>)
 80004b2:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004b4:	e9cd 3a0b 	strd	r3, sl, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80004b8:	e9cd 550d 	strd	r5, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80004bc:	f004 f9b0 	bl	8004820 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = USER_BUTTON_Pin;
 80004c0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 80004c4:	487b      	ldr	r0, [pc, #492]	@ (80006b4 <main+0x32c>)
 80004c6:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80004c8:	e9cd 350b 	strd	r3, r5, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80004cc:	970d      	str	r7, [sp, #52]	@ 0x34
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 80004ce:	f004 f9a7 	bl	8004820 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin;
 80004d2:	f641 4301 	movw	r3, #7169	@ 0x1c01
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80004d6:	4877      	ldr	r0, [pc, #476]	@ (80006b4 <main+0x32c>)
 80004d8:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80004da:	e9cd 360b 	strd	r3, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80004de:	e9cd 560d 	strd	r5, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80004e2:	f004 f99d 	bl	8004820 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80004e6:	4874      	ldr	r0, [pc, #464]	@ (80006b8 <main+0x330>)
 80004e8:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004ea:	e9cd 9a0b 	strd	r9, sl, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80004ee:	e9cd 560d 	strd	r5, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80004f2:	f004 f995 	bl	8004820 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI5_IRQn, 5, 0);
 80004f6:	462a      	mov	r2, r5
 80004f8:	2105      	movs	r1, #5
 80004fa:	4640      	mov	r0, r8
 80004fc:	f003 fbec 	bl	8003cd8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI5_IRQn);
 8000500:	4640      	mov	r0, r8
 8000502:	f003 fc19 	bl	8003d38 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 8000506:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 800050a:	462a      	mov	r2, r5
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 800050c:	4333      	orrs	r3, r6
 800050e:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 8000512:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 8000516:	2105      	movs	r1, #5
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 8000518:	4033      	ands	r3, r6
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 800051a:	201d      	movs	r0, #29
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 800051c:	9303      	str	r3, [sp, #12]
 800051e:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 8000520:	f003 fbda 	bl	8003cd8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPDMA1_Channel0_IRQn);
 8000524:	201d      	movs	r0, #29
 8000526:	f003 fc07 	bl	8003d38 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(GPDMA1_Channel1_IRQn, 5, 0);
 800052a:	462a      	mov	r2, r5
 800052c:	2105      	movs	r1, #5
 800052e:	201e      	movs	r0, #30
 8000530:	f003 fbd2 	bl	8003cd8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPDMA1_Channel1_IRQn);
 8000534:	201e      	movs	r0, #30
 8000536:	f003 fbff 	bl	8003d38 <HAL_NVIC_EnableIRQ>
  if (HAL_ICACHE_ConfigAssociativityMode(ICACHE_1WAY) != HAL_OK)
 800053a:	4628      	mov	r0, r5
 800053c:	f004 fe66 	bl	800520c <HAL_ICACHE_ConfigAssociativityMode>
 8000540:	b108      	cbz	r0, 8000546 <main+0x1be>
 8000542:	b672      	cpsid	i
  while (1)
 8000544:	e7fe      	b.n	8000544 <main+0x1bc>
  if (HAL_ICACHE_Enable() != HAL_OK)
 8000546:	f004 fe71 	bl	800522c <HAL_ICACHE_Enable>
 800054a:	b108      	cbz	r0, 8000550 <main+0x1c8>
 800054c:	b672      	cpsid	i
  while (1)
 800054e:	e7fe      	b.n	800054e <main+0x1c6>
  hdcache1.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000550:	f04f 4500 	mov.w	r5, #2147483648	@ 0x80000000
  hdcache1.Instance = DCACHE1;
 8000554:	485a      	ldr	r0, [pc, #360]	@ (80006c0 <main+0x338>)
  hdcache1.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000556:	4b5b      	ldr	r3, [pc, #364]	@ (80006c4 <main+0x33c>)
 8000558:	e9c0 3500 	strd	r3, r5, [r0]
  if (HAL_DCACHE_Init(&hdcache1) != HAL_OK)
 800055c:	f003 fcac 	bl	8003eb8 <HAL_DCACHE_Init>
 8000560:	b108      	cbz	r0, 8000566 <main+0x1de>
 8000562:	b672      	cpsid	i
  while (1)
 8000564:	e7fe      	b.n	8000564 <main+0x1dc>
  hdcache2.Instance = DCACHE2;
 8000566:	4858      	ldr	r0, [pc, #352]	@ (80006c8 <main+0x340>)
 8000568:	4b58      	ldr	r3, [pc, #352]	@ (80006cc <main+0x344>)
  hdcache2.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 800056a:	e9c0 3500 	strd	r3, r5, [r0]
  if (HAL_DCACHE_Init(&hdcache2) != HAL_OK)
 800056e:	f003 fca3 	bl	8003eb8 <HAL_DCACHE_Init>
 8000572:	4605      	mov	r5, r0
 8000574:	b108      	cbz	r0, 800057a <main+0x1f2>
 8000576:	b672      	cpsid	i
  while (1)
 8000578:	e7fe      	b.n	8000578 <main+0x1f0>
   __HAL_RCC_SYSCFG_CLK_ENABLE();
 800057a:	f8d4 30a8 	ldr.w	r3, [r4, #168]	@ 0xa8
 800057e:	f043 0302 	orr.w	r3, r3, #2
 8000582:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
 8000586:	f8d4 30a8 	ldr.w	r3, [r4, #168]	@ 0xa8
 800058a:	f003 0302 	and.w	r3, r3, #2
 800058e:	9302      	str	r3, [sp, #8]
 8000590:	9b02      	ldr	r3, [sp, #8]
   HAL_SYSCFG_DisableSRAMCached();
 8000592:	f003 fb87 	bl	8003ca4 <HAL_SYSCFG_DisableSRAMCached>
  hcrc.Instance = CRC;
 8000596:	484e      	ldr	r0, [pc, #312]	@ (80006d0 <main+0x348>)
 8000598:	4b4e      	ldr	r3, [pc, #312]	@ (80006d4 <main+0x34c>)
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 800059a:	e9c0 5505 	strd	r5, r5, [r0, #20]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 800059e:	8085      	strh	r5, [r0, #4]
  hcrc.Instance = CRC;
 80005a0:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80005a2:	6206      	str	r6, [r0, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80005a4:	f003 fc10 	bl	8003dc8 <HAL_CRC_Init>
 80005a8:	4605      	mov	r5, r0
 80005aa:	b108      	cbz	r0, 80005b0 <main+0x228>
 80005ac:	b672      	cpsid	i
  while (1)
 80005ae:	e7fe      	b.n	80005ae <main+0x226>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80005b0:	2234      	movs	r2, #52	@ 0x34
 80005b2:	4601      	mov	r1, r0
 80005b4:	a80b      	add	r0, sp, #44	@ 0x2c
 80005b6:	f032 f96e 	bl	8032896 <memset>
  hltdc.Instance = LTDC;
 80005ba:	4c47      	ldr	r4, [pc, #284]	@ (80006d8 <main+0x350>)
 80005bc:	4b47      	ldr	r3, [pc, #284]	@ (80006dc <main+0x354>)
  hltdc.Init.AccumulatedActiveH = 492;
 80005be:	f44f 7c4b 	mov.w	ip, #812	@ 0x32c
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80005c2:	e9c4 3500 	strd	r3, r5, [r4]
  hltdc.Init.HorizontalSync = 4;
 80005c6:	2304      	movs	r3, #4
  hltdc.Init.VerticalSync = 4;
 80005c8:	e9c4 3305 	strd	r3, r3, [r4, #20]
  hltdc.Init.AccumulatedHBP = 12;
 80005cc:	230c      	movs	r3, #12
  hltdc.Init.AccumulatedVBP = 12;
 80005ce:	e9c4 3307 	strd	r3, r3, [r4, #28]
  hltdc.Init.AccumulatedActiveH = 492;
 80005d2:	f44f 73f6 	mov.w	r3, #492	@ 0x1ec
  hltdc.Init.TotalHeigh = 506;
 80005d6:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
  hltdc.Init.AccumulatedActiveH = 492;
 80005da:	e9c4 c309 	strd	ip, r3, [r4, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 506;
 80005de:	f44f 73fd 	mov.w	r3, #506	@ 0x1fa
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80005e2:	4620      	mov	r0, r4
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80005e4:	e9c4 5502 	strd	r5, r5, [r4, #8]
  hltdc.Init.TotalHeigh = 506;
 80005e8:	e9c4 e30b 	strd	lr, r3, [r4, #44]	@ 0x2c
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80005ec:	6125      	str	r5, [r4, #16]
  hltdc.Init.Backcolor.Blue = 0;
 80005ee:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 80005f0:	f884 5036 	strb.w	r5, [r4, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80005f4:	f005 fe6e 	bl	80062d4 <HAL_LTDC_Init>
 80005f8:	4602      	mov	r2, r0
 80005fa:	b108      	cbz	r0, 8000600 <main+0x278>
 80005fc:	b672      	cpsid	i
  while (1)
 80005fe:	e7fe      	b.n	80005fe <main+0x276>
  pLayerCfg.WindowX1 = 800;
 8000600:	f44f 7148 	mov.w	r1, #800	@ 0x320
  pLayerCfg.WindowX0 = 0;
 8000604:	900b      	str	r0, [sp, #44]	@ 0x2c
  pLayerCfg.WindowY0 = 0;
 8000606:	e9cd 100c 	strd	r1, r0, [sp, #48]	@ 0x30
  pLayerCfg.Alpha = 255;
 800060a:	20ff      	movs	r0, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800060c:	f44f 6580 	mov.w	r5, #1024	@ 0x400
  pLayerCfg.Alpha0 = 0;
 8000610:	e9cd 0210 	strd	r0, r2, [sp, #64]	@ 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000614:	2005      	movs	r0, #5
  pLayerCfg.WindowY1 = 480;
 8000616:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800061a:	e9cd 5012 	strd	r5, r0, [sp, #72]	@ 0x48
  pLayerCfg.ImageWidth = 800;
 800061e:	e9cd 2114 	strd	r2, r1, [sp, #80]	@ 0x50
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000622:	4620      	mov	r0, r4
 8000624:	a90b      	add	r1, sp, #44	@ 0x2c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000626:	e9cd 370e 	strd	r3, r7, [sp, #56]	@ 0x38
  pLayerCfg.ImageHeight = 480;
 800062a:	9316      	str	r3, [sp, #88]	@ 0x58
  pLayerCfg.Backcolor.Blue = 0;
 800062c:	f8ad 205c 	strh.w	r2, [sp, #92]	@ 0x5c
  pLayerCfg.Backcolor.Red = 0;
 8000630:	f88d 205e 	strb.w	r2, [sp, #94]	@ 0x5e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000634:	f005 ff19 	bl	800646a <HAL_LTDC_ConfigLayer>
 8000638:	4603      	mov	r3, r0
 800063a:	b108      	cbz	r0, 8000640 <main+0x2b8>
 800063c:	b672      	cpsid	i
  while (1)
 800063e:	e7fe      	b.n	800063e <main+0x2b6>
  hdma2d.Init.Mode = DMA2D_R2M;
 8000640:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
  hdma2d.Instance = DMA2D;
 8000644:	4826      	ldr	r0, [pc, #152]	@ (80006e0 <main+0x358>)
  hdma2d.Init.Mode = DMA2D_R2M;
 8000646:	4c27      	ldr	r4, [pc, #156]	@ (80006e4 <main+0x35c>)
  hdma2d.Init.OutputOffset = 0;
 8000648:	e9c0 6302 	strd	r6, r3, [r0, #8]
  hdma2d.Init.Mode = DMA2D_R2M;
 800064c:	e9c0 4200 	strd	r4, r2, [r0]
  hdma2d.Init.LineOffsetMode = DMA2D_LOM_PIXELS;
 8000650:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000654:	f003 ff94 	bl	8004580 <HAL_DMA2D_Init>
 8000658:	b108      	cbz	r0, 800065e <main+0x2d6>
 800065a:	b672      	cpsid	i
  while (1)
 800065c:	e7fe      	b.n	800065c <main+0x2d4>
  hgpu2d.Instance = GPU2D;
 800065e:	4822      	ldr	r0, [pc, #136]	@ (80006e8 <main+0x360>)
 8000660:	4b22      	ldr	r3, [pc, #136]	@ (80006ec <main+0x364>)
 8000662:	6003      	str	r3, [r0, #0]
  if (HAL_GPU2D_Init(&hgpu2d) != HAL_OK)
 8000664:	f004 fa14 	bl	8004a90 <HAL_GPU2D_Init>
 8000668:	b108      	cbz	r0, 800066e <main+0x2e6>
 800066a:	b672      	cpsid	i
  while (1)
 800066c:	e7fe      	b.n	800066c <main+0x2e4>
  hxspi1.Init.FifoThresholdByte = 4;
 800066e:	2304      	movs	r3, #4
  hxspi1.Instance = HSPI1;
 8000670:	4c1f      	ldr	r4, [pc, #124]	@ (80006f0 <main+0x368>)
  hxspi1.Init.FifoThresholdByte = 4;
 8000672:	4920      	ldr	r1, [pc, #128]	@ (80006f4 <main+0x36c>)
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 8000674:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
  hxspi1.Init.FifoThresholdByte = 4;
 8000678:	e9c4 1300 	strd	r1, r3, [r4]
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 800067c:	2300      	movs	r3, #0
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 800067e:	2602      	movs	r6, #2
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 8000680:	e9c4 3202 	strd	r3, r2, [r4, #8]
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 8000684:	221a      	movs	r2, #26
  if (HAL_XSPI_Init(&hxspi1) != HAL_OK)
 8000686:	4620      	mov	r0, r4
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 8000688:	e9c4 2604 	strd	r2, r6, [r4, #16]
  hxspi1.Init.ClockMode = HAL_XSPI_CLOCK_MODE_0;
 800068c:	e9c4 3306 	strd	r3, r3, [r4, #24]
  hxspi1.Init.ClockPrescaler = 0;
 8000690:	e9c4 3308 	strd	r3, r3, [r4, #32]
  hxspi1.Init.DelayHoldQuarterCycle = HAL_XSPI_DHQC_DISABLE;
 8000694:	e9c4 330a 	strd	r3, r3, [r4, #40]	@ 0x28
  hxspi1.Init.Refresh = 0;
 8000698:	e9c4 330e 	strd	r3, r3, [r4, #56]	@ 0x38
  hxspi1.Init.ChipSelectBoundary = HAL_XSPI_BONDARYOF_NONE;
 800069c:	6323      	str	r3, [r4, #48]	@ 0x30
  if (HAL_XSPI_Init(&hxspi1) != HAL_OK)
 800069e:	f007 fe57 	bl	8008350 <HAL_XSPI_Init>
 80006a2:	4605      	mov	r5, r0
 80006a4:	b340      	cbz	r0, 80006f8 <main+0x370>
 80006a6:	b672      	cpsid	i
  while (1)
 80006a8:	e7fe      	b.n	80006a8 <main+0x320>
 80006aa:	bf00      	nop
 80006ac:	46020c00 	.word	0x46020c00
 80006b0:	42021000 	.word	0x42021000
 80006b4:	42020800 	.word	0x42020800
 80006b8:	42020c00 	.word	0x42020c00
 80006bc:	10210000 	.word	0x10210000
 80006c0:	20000610 	.word	0x20000610
 80006c4:	40031400 	.word	0x40031400
 80006c8:	200005e4 	.word	0x200005e4
 80006cc:	40031800 	.word	0x40031800
 80006d0:	2000063c 	.word	0x2000063c
 80006d4:	40023000 	.word	0x40023000
 80006d8:	200002cc 	.word	0x200002cc
 80006dc:	40016800 	.word	0x40016800
 80006e0:	2000057c 	.word	0x2000057c
 80006e4:	4002b000 	.word	0x4002b000
 80006e8:	20000570 	.word	0x20000570
 80006ec:	4002f000 	.word	0x4002f000
 80006f0:	20000510 	.word	0x20000510
 80006f4:	420d3400 	.word	0x420d3400
  MX66UW1G45G_ResetEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 80006f8:	4602      	mov	r2, r0
 80006fa:	4601      	mov	r1, r0
 80006fc:	4620      	mov	r0, r4
 80006fe:	f003 f9fe 	bl	8003afe <MX66UW1G45G_ResetEnable>
  MX66UW1G45G_ResetMemory(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 8000702:	462a      	mov	r2, r5
 8000704:	4629      	mov	r1, r5
 8000706:	4620      	mov	r0, r4
 8000708:	f003 fa2a 	bl	8003b60 <MX66UW1G45G_ResetMemory>
  HAL_Delay(MX66UW1G45G_RESET_MAX_TIME);
 800070c:	2064      	movs	r0, #100	@ 0x64
 800070e:	f003 fab7 	bl	8003c80 <HAL_Delay>
  MX66UW1G45G_WriteEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 8000712:	462a      	mov	r2, r5
 8000714:	4629      	mov	r1, r5
 8000716:	4620      	mov	r0, r4
 8000718:	f003 f91f 	bl	800395a <MX66UW1G45G_WriteEnable>
  MX66UW1G45G_WriteCfg2Register(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER, MX66UW1G45G_CR2_REG3_ADDR, MX66UW1G45G_CR2_DC_6_CYCLES);
 800071c:	2307      	movs	r3, #7
 800071e:	462a      	mov	r2, r5
 8000720:	4629      	mov	r1, r5
 8000722:	4620      	mov	r0, r4
 8000724:	9300      	str	r3, [sp, #0]
 8000726:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800072a:	f003 f990 	bl	8003a4e <MX66UW1G45G_WriteCfg2Register>
  MX66UW1G45G_WriteEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 800072e:	462a      	mov	r2, r5
 8000730:	4629      	mov	r1, r5
 8000732:	4620      	mov	r0, r4
 8000734:	f003 f911 	bl	800395a <MX66UW1G45G_WriteEnable>
  MX66UW1G45G_WriteCfg2Register(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER, MX66UW1G45G_CR2_REG1_ADDR, MX66UW1G45G_CR2_DOPI);
 8000738:	462b      	mov	r3, r5
 800073a:	462a      	mov	r2, r5
 800073c:	4629      	mov	r1, r5
 800073e:	4620      	mov	r0, r4
 8000740:	9600      	str	r6, [sp, #0]
 8000742:	f003 f984 	bl	8003a4e <MX66UW1G45G_WriteCfg2Register>
  HAL_Delay(MX66UW1G45G_WRITE_REG_MAX_TIME);
 8000746:	2028      	movs	r0, #40	@ 0x28
 8000748:	f003 fa9a 	bl	8003c80 <HAL_Delay>
  MX66UW1G45G_EnableDTRMemoryMappedMode(&hxspi1, MX66UW1G45G_OPI_MODE);
 800074c:	2101      	movs	r1, #1
 800074e:	4620      	mov	r0, r4
 8000750:	f003 f8b4 	bl	80038bc <MX66UW1G45G_EnableDTRMemoryMappedMode>
  hi2c2.Instance = I2C2;
 8000754:	4c19      	ldr	r4, [pc, #100]	@ (80007bc <main+0x434>)
  hi2c2.Init.Timing = 0x00F07BFF;
 8000756:	4a1a      	ldr	r2, [pc, #104]	@ (80007c0 <main+0x438>)
 8000758:	4b1a      	ldr	r3, [pc, #104]	@ (80007c4 <main+0x43c>)
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 800075a:	4620      	mov	r0, r4
  hi2c2.Init.Timing = 0x00F07BFF;
 800075c:	e9c4 2300 	strd	r2, r3, [r4]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000760:	2301      	movs	r3, #1
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000762:	e9c4 5505 	strd	r5, r5, [r4, #20]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000766:	e9c4 3503 	strd	r3, r5, [r4, #12]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800076a:	e9c4 5507 	strd	r5, r5, [r4, #28]
  hi2c2.Init.OwnAddress1 = 0;
 800076e:	60a5      	str	r5, [r4, #8]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000770:	f004 faf3 	bl	8004d5a <HAL_I2C_Init>
 8000774:	4601      	mov	r1, r0
 8000776:	b108      	cbz	r0, 800077c <main+0x3f4>
 8000778:	b672      	cpsid	i
  while (1)
 800077a:	e7fe      	b.n	800077a <main+0x3f2>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800077c:	4620      	mov	r0, r4
 800077e:	f004 fcf9 	bl	8005174 <HAL_I2CEx_ConfigAnalogFilter>
 8000782:	4601      	mov	r1, r0
 8000784:	b108      	cbz	r0, 800078a <main+0x402>
 8000786:	b672      	cpsid	i
  while (1)
 8000788:	e7fe      	b.n	8000788 <main+0x400>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 800078a:	4620      	mov	r0, r4
 800078c:	f004 fd18 	bl	80051c0 <HAL_I2CEx_ConfigDigitalFilter>
 8000790:	b108      	cbz	r0, 8000796 <main+0x40e>
 8000792:	b672      	cpsid	i
  while (1)
 8000794:	e7fe      	b.n	8000794 <main+0x40c>
  hjpeg.Instance = JPEG;
 8000796:	480c      	ldr	r0, [pc, #48]	@ (80007c8 <main+0x440>)
 8000798:	4b0c      	ldr	r3, [pc, #48]	@ (80007cc <main+0x444>)
 800079a:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
 800079c:	f004 ff16 	bl	80055cc <HAL_JPEG_Init>
 80007a0:	b108      	cbz	r0, 80007a6 <main+0x41e>
 80007a2:	b672      	cpsid	i
  while (1)
 80007a4:	e7fe      	b.n	80007a4 <main+0x41c>
  MX_TouchGFX_Init();
 80007a6:	f000 fc01 	bl	8000fac <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80007aa:	f000 fbfe 	bl	8000faa <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80007ae:	f008 f8e7 	bl	8008980 <osKernelInitialize>
  MX_FREERTOS_Init();
 80007b2:	f7ff fd91 	bl	80002d8 <MX_FREERTOS_Init>
  osKernelStart();
 80007b6:	f008 f8f9 	bl	80089ac <osKernelStart>
  while (1)
 80007ba:	e7fe      	b.n	80007ba <main+0x432>
 80007bc:	200004bc 	.word	0x200004bc
 80007c0:	40005800 	.word	0x40005800
 80007c4:	00f07bff 	.word	0x00f07bff
 80007c8:	20000464 	.word	0x20000464
 80007cc:	4002a000 	.word	0x4002a000

080007d0 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 80007d0:	6802      	ldr	r2, [r0, #0]
 80007d2:	4b03      	ldr	r3, [pc, #12]	@ (80007e0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80007d4:	429a      	cmp	r2, r3
 80007d6:	d101      	bne.n	80007dc <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80007d8:	f003 ba40 	b.w	8003c5c <HAL_IncTick>
}
 80007dc:	4770      	bx	lr
 80007de:	bf00      	nop
 80007e0:	40001000 	.word	0x40001000

080007e4 <Error_Handler>:
 80007e4:	b672      	cpsid	i
  while (1)
 80007e6:	e7fe      	b.n	80007e6 <Error_Handler+0x2>

080007e8 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80007e8:	4b0a      	ldr	r3, [pc, #40]	@ (8000814 <HAL_MspInit+0x2c>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007ea:	210f      	movs	r1, #15
  __HAL_RCC_PWR_CLK_ENABLE();
 80007ec:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007f0:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 80007f4:	f042 0204 	orr.w	r2, r2, #4
 80007f8:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007fc:	2200      	movs	r2, #0
  __HAL_RCC_PWR_CLK_ENABLE();
 80007fe:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
{
 8000802:	b082      	sub	sp, #8
  __HAL_RCC_PWR_CLK_ENABLE();
 8000804:	f003 0304 	and.w	r3, r3, #4
 8000808:	9301      	str	r3, [sp, #4]
 800080a:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800080c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800080e:	f003 ba63 	b.w	8003cd8 <HAL_NVIC_SetPriority>
 8000812:	bf00      	nop
 8000814:	46020c00 	.word	0x46020c00

08000818 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000818:	6802      	ldr	r2, [r0, #0]
 800081a:	4b09      	ldr	r3, [pc, #36]	@ (8000840 <HAL_CRC_MspInit+0x28>)
{
 800081c:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 800081e:	429a      	cmp	r2, r3
 8000820:	d10c      	bne.n	800083c <HAL_CRC_MspInit+0x24>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000822:	4b08      	ldr	r3, [pc, #32]	@ (8000844 <HAL_CRC_MspInit+0x2c>)
 8000824:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000828:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800082c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000830:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000834:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000838:	9301      	str	r3, [sp, #4]
 800083a:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800083c:	b002      	add	sp, #8
 800083e:	4770      	bx	lr
 8000840:	40023000 	.word	0x40023000
 8000844:	46020c00 	.word	0x46020c00

08000848 <HAL_DCACHE_MspInit>:
* @param hdcache: DCACHE handle pointer
* @retval None
*/
void HAL_DCACHE_MspInit(DCACHE_HandleTypeDef* hdcache)
{
  if(hdcache->Instance==DCACHE1)
 8000848:	6803      	ldr	r3, [r0, #0]
 800084a:	4a12      	ldr	r2, [pc, #72]	@ (8000894 <HAL_DCACHE_MspInit+0x4c>)
{
 800084c:	b082      	sub	sp, #8
  if(hdcache->Instance==DCACHE1)
 800084e:	4293      	cmp	r3, r2
 8000850:	d10e      	bne.n	8000870 <HAL_DCACHE_MspInit+0x28>
  {
  /* USER CODE BEGIN DCACHE1_MspInit 0 */

  /* USER CODE END DCACHE1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DCACHE1_CLK_ENABLE();
 8000852:	4b11      	ldr	r3, [pc, #68]	@ (8000898 <HAL_DCACHE_MspInit+0x50>)
 8000854:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000858:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800085c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000860:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000864:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8000868:	9300      	str	r3, [sp, #0]
 800086a:	9b00      	ldr	r3, [sp, #0]
  /* USER CODE BEGIN DCACHE2_MspInit 1 */

  /* USER CODE END DCACHE2_MspInit 1 */
  }

}
 800086c:	b002      	add	sp, #8
 800086e:	4770      	bx	lr
  else if(hdcache->Instance==DCACHE2)
 8000870:	4a0a      	ldr	r2, [pc, #40]	@ (800089c <HAL_DCACHE_MspInit+0x54>)
 8000872:	4293      	cmp	r3, r2
 8000874:	d1fa      	bne.n	800086c <HAL_DCACHE_MspInit+0x24>
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000876:	4b08      	ldr	r3, [pc, #32]	@ (8000898 <HAL_DCACHE_MspInit+0x50>)
 8000878:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800087c:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8000880:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000884:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000888:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800088c:	9301      	str	r3, [sp, #4]
 800088e:	9b01      	ldr	r3, [sp, #4]
}
 8000890:	e7ec      	b.n	800086c <HAL_DCACHE_MspInit+0x24>
 8000892:	bf00      	nop
 8000894:	40031400 	.word	0x40031400
 8000898:	46020c00 	.word	0x46020c00
 800089c:	40031800 	.word	0x40031800

080008a0 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80008a0:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80008a2:	4b0f      	ldr	r3, [pc, #60]	@ (80008e0 <HAL_DMA2D_MspInit+0x40>)
 80008a4:	6802      	ldr	r2, [r0, #0]
 80008a6:	429a      	cmp	r2, r3
 80008a8:	d117      	bne.n	80008da <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008aa:	4b0e      	ldr	r3, [pc, #56]	@ (80008e4 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008ac:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008ae:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008b2:	2076      	movs	r0, #118	@ 0x76
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008b4:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80008b8:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80008bc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008c0:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008c2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80008c6:	9301      	str	r3, [sp, #4]
 80008c8:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008ca:	f003 fa05 	bl	8003cd8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80008ce:	2076      	movs	r0, #118	@ 0x76
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 80008d0:	b003      	add	sp, #12
 80008d2:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80008d6:	f003 ba2f 	b.w	8003d38 <HAL_NVIC_EnableIRQ>
}
 80008da:	b003      	add	sp, #12
 80008dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80008e0:	4002b000 	.word	0x4002b000
 80008e4:	46020c00 	.word	0x46020c00

080008e8 <HAL_GPU2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hgpu2d: GPU2D handle pointer
* @retval None
*/
void HAL_GPU2D_MspInit(GPU2D_HandleTypeDef* hgpu2d)
{
 80008e8:	b507      	push	{r0, r1, r2, lr}
  if(hgpu2d->Instance==GPU2D)
 80008ea:	4b19      	ldr	r3, [pc, #100]	@ (8000950 <HAL_GPU2D_MspInit+0x68>)
 80008ec:	6802      	ldr	r2, [r0, #0]
 80008ee:	429a      	cmp	r2, r3
 80008f0:	d12b      	bne.n	800094a <HAL_GPU2D_MspInit+0x62>
  {
  /* USER CODE BEGIN GPU2D_MspInit 0 */

  /* USER CODE END GPU2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008f2:	4b18      	ldr	r3, [pc, #96]	@ (8000954 <HAL_GPU2D_MspInit+0x6c>)
    __HAL_RCC_DCACHE2_CLK_ENABLE();
    /* GPU2D interrupt Init */
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 80008f4:	2105      	movs	r1, #5
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008f6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 80008fa:	2084      	movs	r0, #132	@ 0x84
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008fc:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8000900:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000904:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000908:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 800090c:	9200      	str	r2, [sp, #0]
 800090e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000910:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000914:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8000918:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800091c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 8000920:	2200      	movs	r2, #0
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000922:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000926:	9301      	str	r3, [sp, #4]
 8000928:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 800092a:	f003 f9d5 	bl	8003cd8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPU2D_IRQn);
 800092e:	2084      	movs	r0, #132	@ 0x84
 8000930:	f003 fa02 	bl	8003d38 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(GPU2D_ER_IRQn, 5, 0);
 8000934:	2200      	movs	r2, #0
 8000936:	2105      	movs	r1, #5
 8000938:	2085      	movs	r0, #133	@ 0x85
 800093a:	f003 f9cd 	bl	8003cd8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPU2D_ER_IRQn);
 800093e:	2085      	movs	r0, #133	@ 0x85
  /* USER CODE BEGIN GPU2D_MspInit 1 */

  /* USER CODE END GPU2D_MspInit 1 */
  }

}
 8000940:	b003      	add	sp, #12
 8000942:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(GPU2D_ER_IRQn);
 8000946:	f003 b9f7 	b.w	8003d38 <HAL_NVIC_EnableIRQ>
}
 800094a:	b003      	add	sp, #12
 800094c:	f85d fb04 	ldr.w	pc, [sp], #4
 8000950:	4002f000 	.word	0x4002f000
 8000954:	46020c00 	.word	0x46020c00

08000958 <HAL_XSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hxspi: XSPI handle pointer
* @retval None
*/
void HAL_XSPI_MspInit(XSPI_HandleTypeDef* hxspi)
{
 8000958:	b5f0      	push	{r4, r5, r6, r7, lr}
 800095a:	4604      	mov	r4, r0
 800095c:	b0c1      	sub	sp, #260	@ 0x104
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800095e:	2214      	movs	r2, #20
 8000960:	2100      	movs	r1, #0
 8000962:	a803      	add	r0, sp, #12
 8000964:	f031 ff97 	bl	8032896 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000968:	22e0      	movs	r2, #224	@ 0xe0
 800096a:	2100      	movs	r1, #0
 800096c:	a808      	add	r0, sp, #32
 800096e:	f031 ff92 	bl	8032896 <memset>
  if(hxspi->Instance==HSPI1)
 8000972:	6822      	ldr	r2, [r4, #0]
 8000974:	4b32      	ldr	r3, [pc, #200]	@ (8000a40 <HAL_XSPI_MspInit+0xe8>)
 8000976:	429a      	cmp	r2, r3
 8000978:	d15f      	bne.n	8000a3a <HAL_XSPI_MspInit+0xe2>

  /* USER CODE END HSPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_HSPI;
 800097a:	2301      	movs	r3, #1
 800097c:	2200      	movs	r2, #0
 800097e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    PeriphClkInit.HspiClockSelection = RCC_HSPICLKSOURCE_PLL2;
 8000982:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
    PeriphClkInit.PLL2.PLL2Source = RCC_PLLSOURCE_HSE;
    PeriphClkInit.PLL2.PLL2M = 4;
 8000986:	2103      	movs	r1, #3
    PeriphClkInit.HspiClockSelection = RCC_HSPICLKSOURCE_PLL2;
 8000988:	9338      	str	r3, [sp, #224]	@ 0xe0
    PeriphClkInit.PLL2.PLL2M = 4;
 800098a:	2304      	movs	r3, #4
    PeriphClkInit.PLL2.PLL2N = 66;
    PeriphClkInit.PLL2.PLL2P = 2;
 800098c:	2042      	movs	r0, #66	@ 0x42
    PeriphClkInit.PLL2.PLL2M = 4;
 800098e:	e9cd 130a 	strd	r1, r3, [sp, #40]	@ 0x28
    PeriphClkInit.PLL2.PLL2P = 2;
 8000992:	2302      	movs	r3, #2
 8000994:	e9cd 030c 	strd	r0, r3, [sp, #48]	@ 0x30
    PeriphClkInit.PLL2.PLL2Q = 2;
    PeriphClkInit.PLL2.PLL2R = 2;
 8000998:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
    PeriphClkInit.PLL2.PLL2RGE = RCC_PLLVCIRANGE_0;
    PeriphClkInit.PLL2.PLL2FRACN = 0;
    PeriphClkInit.PLL2.PLL2ClockOut = RCC_PLL2_DIVQ;
 800099c:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80009a0:	a808      	add	r0, sp, #32
    PeriphClkInit.PLL2.PLL2ClockOut = RCC_PLL2_DIVQ;
 80009a2:	9312      	str	r3, [sp, #72]	@ 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80009a4:	f006 fddc 	bl	8007560 <HAL_RCCEx_PeriphCLKConfig>
 80009a8:	b108      	cbz	r0, 80009ae <HAL_XSPI_MspInit+0x56>
    {
      Error_Handler();
 80009aa:	f7ff ff1b 	bl	80007e4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009ae:	4b25      	ldr	r3, [pc, #148]	@ (8000a44 <HAL_XSPI_MspInit+0xec>)
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009b0:	2400      	movs	r4, #0
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009b2:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80009b6:	2702      	movs	r7, #2
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009b8:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80009bc:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80009c0:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009c4:	2603      	movs	r6, #3
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009c6:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 80009ca:	9200      	str	r2, [sp, #0]
 80009cc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009ce:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 80009d2:	2508      	movs	r5, #8
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009d4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80009d8:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80009dc:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80009e0:	4819      	ldr	r0, [pc, #100]	@ (8000a48 <HAL_XSPI_MspInit+0xf0>)
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009e2:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 80009e6:	9201      	str	r2, [sp, #4]
 80009e8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80009ea:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80009ee:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80009f0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80009f4:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80009f8:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009fc:	e9cd 4605 	strd	r4, r6, [sp, #20]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000a00:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000a04:	9302      	str	r3, [sp, #8]
 8000a06:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a08:	f44f 437e 	mov.w	r3, #65024	@ 0xfe00
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 8000a0c:	9507      	str	r5, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a0e:	e9cd 3703 	strd	r3, r7, [sp, #12]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000a12:	f003 ff05 	bl	8004820 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8000a16:	230f      	movs	r3, #15
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000a18:	480c      	ldr	r0, [pc, #48]	@ (8000a4c <HAL_XSPI_MspInit+0xf4>)
 8000a1a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a1c:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a20:	e9cd 4605 	strd	r4, r6, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 8000a24:	9507      	str	r5, [sp, #28]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000a26:	f003 fefb 	bl	8004820 <HAL_GPIO_Init>

    /* HSPI1 interrupt Init */
    HAL_NVIC_SetPriority(HSPI1_IRQn, 5, 0);
 8000a2a:	2083      	movs	r0, #131	@ 0x83
 8000a2c:	4622      	mov	r2, r4
 8000a2e:	2105      	movs	r1, #5
 8000a30:	f003 f952 	bl	8003cd8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(HSPI1_IRQn);
 8000a34:	2083      	movs	r0, #131	@ 0x83
 8000a36:	f003 f97f 	bl	8003d38 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN HSPI1_MspInit 1 */

  /* USER CODE END HSPI1_MspInit 1 */
  }

}
 8000a3a:	b041      	add	sp, #260	@ 0x104
 8000a3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a3e:	bf00      	nop
 8000a40:	420d3400 	.word	0x420d3400
 8000a44:	46020c00 	.word	0x46020c00
 8000a48:	42021c00 	.word	0x42021c00
 8000a4c:	42022000 	.word	0x42022000

08000a50 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000a50:	b510      	push	{r4, lr}
 8000a52:	4604      	mov	r4, r0
 8000a54:	b0c0      	sub	sp, #256	@ 0x100
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a56:	2214      	movs	r2, #20
 8000a58:	2100      	movs	r1, #0
 8000a5a:	a803      	add	r0, sp, #12
 8000a5c:	f031 ff1b 	bl	8032896 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000a60:	22e0      	movs	r2, #224	@ 0xe0
 8000a62:	2100      	movs	r1, #0
 8000a64:	a808      	add	r0, sp, #32
 8000a66:	f031 ff16 	bl	8032896 <memset>
  if(hi2c->Instance==I2C2)
 8000a6a:	6822      	ldr	r2, [r4, #0]
 8000a6c:	4b1a      	ldr	r3, [pc, #104]	@ (8000ad8 <HAL_I2C_MspInit+0x88>)
 8000a6e:	429a      	cmp	r2, r3
 8000a70:	d12f      	bne.n	8000ad2 <HAL_I2C_MspInit+0x82>

  /* USER CODE END I2C2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8000a72:	2280      	movs	r2, #128	@ 0x80
 8000a74:	2300      	movs	r3, #0
    PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000a76:	a808      	add	r0, sp, #32
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8000a78:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000a7c:	f006 fd70 	bl	8007560 <HAL_RCCEx_PeriphCLKConfig>
 8000a80:	b108      	cbz	r0, 8000a86 <HAL_I2C_MspInit+0x36>
    {
      Error_Handler();
 8000a82:	f7ff feaf 	bl	80007e4 <Error_Handler>
    }

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a86:	4c15      	ldr	r4, [pc, #84]	@ (8000adc <HAL_I2C_MspInit+0x8c>)
    /**I2C2 GPIO Configuration
    PF0     ------> I2C2_SDA
    PF1     ------> I2C2_SCL
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000a88:	2203      	movs	r2, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a8a:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000a8e:	4814      	ldr	r0, [pc, #80]	@ (8000ae0 <HAL_I2C_MspInit+0x90>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a90:	f043 0320 	orr.w	r3, r3, #32
 8000a94:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000a98:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000a9c:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a9e:	f003 0320 	and.w	r3, r3, #32
 8000aa2:	9301      	str	r3, [sp, #4]
 8000aa4:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000aa6:	2312      	movs	r3, #18
 8000aa8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000aac:	2300      	movs	r3, #0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000aae:	e9cd 3305 	strd	r3, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8000ab2:	2304      	movs	r3, #4
 8000ab4:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000ab6:	f003 feb3 	bl	8004820 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8000aba:	f8d4 309c 	ldr.w	r3, [r4, #156]	@ 0x9c
 8000abe:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000ac2:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
 8000ac6:	f8d4 309c 	ldr.w	r3, [r4, #156]	@ 0x9c
 8000aca:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000ace:	9302      	str	r3, [sp, #8]
 8000ad0:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 8000ad2:	b040      	add	sp, #256	@ 0x100
 8000ad4:	bd10      	pop	{r4, pc}
 8000ad6:	bf00      	nop
 8000ad8:	40005800 	.word	0x40005800
 8000adc:	46020c00 	.word	0x46020c00
 8000ae0:	42021400 	.word	0x42021400

08000ae4 <HAL_JPEG_MspInit>:
* This function configures the hardware resources used in this example
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
 8000ae4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  DMA_DataHandlingConfTypeDef DataHandlingConfig;
  if(hjpeg->Instance==JPEG)
 8000ae6:	6802      	ldr	r2, [r0, #0]
 8000ae8:	4b3d      	ldr	r3, [pc, #244]	@ (8000be0 <HAL_JPEG_MspInit+0xfc>)
{
 8000aea:	4605      	mov	r5, r0
  if(hjpeg->Instance==JPEG)
 8000aec:	429a      	cmp	r2, r3
 8000aee:	d174      	bne.n	8000bda <HAL_JPEG_MspInit+0xf6>
  {
  /* USER CODE BEGIN JPEG_MspInit 0 */

  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000af0:	4b3c      	ldr	r3, [pc, #240]	@ (8000be4 <HAL_JPEG_MspInit+0x100>)
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
    handle_GPDMA1_Channel1.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
    handle_GPDMA1_Channel1.Init.Direction = DMA_PERIPH_TO_MEMORY;
    handle_GPDMA1_Channel1.Init.SrcInc = DMA_SINC_FIXED;
    handle_GPDMA1_Channel1.Init.DestInc = DMA_DINC_INCREMENTED;
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000af2:	f44f 2600 	mov.w	r6, #524288	@ 0x80000
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000af6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Instance = GPDMA1_Channel1;
 8000afa:	4c3b      	ldr	r4, [pc, #236]	@ (8000be8 <HAL_JPEG_MspInit+0x104>)
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000afc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8000b00:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000b04:	2202      	movs	r2, #2
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b06:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Init.DestDataWidth = DMA_DEST_DATAWIDTH_WORD;
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b0a:	f44f 3c00 	mov.w	ip, #131072	@ 0x20000
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000b0e:	e9c4 6205 	strd	r6, r2, [r4, #20]
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b12:	f44f 0240 	mov.w	r2, #12582912	@ 0xc00000
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b16:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8000b1a:	9301      	str	r3, [sp, #4]
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b1c:	e9c4 c207 	strd	ip, r2, [r4, #28]
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b20:	9b01      	ldr	r3, [sp, #4]
    handle_GPDMA1_Channel1.Init.SrcBurstLength = 8;
 8000b22:	2208      	movs	r2, #8
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
 8000b24:	237d      	movs	r3, #125	@ 0x7d
 8000b26:	4831      	ldr	r0, [pc, #196]	@ (8000bec <HAL_JPEG_MspInit+0x108>)
    handle_GPDMA1_Channel1.Init.DestBurstLength = 8;
 8000b28:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
 8000b2c:	e9c4 0300 	strd	r0, r3, [r4]
    handle_GPDMA1_Channel1.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT0|DMA_DEST_ALLOCATED_PORT1;
 8000b30:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    handle_GPDMA1_Channel1.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
 8000b34:	2300      	movs	r3, #0
    handle_GPDMA1_Channel1.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
    handle_GPDMA1_Channel1.Init.Mode = DMA_NORMAL;
    if (HAL_DMA_Init(&handle_GPDMA1_Channel1) != HAL_OK)
 8000b36:	4620      	mov	r0, r4
    handle_GPDMA1_Channel1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8000b38:	e9c4 3302 	strd	r3, r3, [r4, #8]
    handle_GPDMA1_Channel1.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 8000b3c:	e9c4 230b 	strd	r2, r3, [r4, #44]	@ 0x2c
    handle_GPDMA1_Channel1.Init.SrcInc = DMA_SINC_FIXED;
 8000b40:	6123      	str	r3, [r4, #16]
    handle_GPDMA1_Channel1.Init.Mode = DMA_NORMAL;
 8000b42:	6363      	str	r3, [r4, #52]	@ 0x34
    if (HAL_DMA_Init(&handle_GPDMA1_Channel1) != HAL_OK)
 8000b44:	f003 f9ee 	bl	8003f24 <HAL_DMA_Init>
 8000b48:	b108      	cbz	r0, 8000b4e <HAL_JPEG_MspInit+0x6a>
    {
      Error_Handler();
 8000b4a:	f7ff fe4b 	bl	80007e4 <Error_Handler>
    }

    __HAL_LINKDMA(hjpeg, hdmaout, handle_GPDMA1_Channel1);
 8000b4e:	636c      	str	r4, [r5, #52]	@ 0x34

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel1, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000b50:	2110      	movs	r1, #16
 8000b52:	4825      	ldr	r0, [pc, #148]	@ (8000be8 <HAL_JPEG_MspInit+0x104>)
    __HAL_LINKDMA(hjpeg, hdmaout, handle_GPDMA1_Channel1);
 8000b54:	65e5      	str	r5, [r4, #92]	@ 0x5c
    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel1, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000b56:	f003 fcf5 	bl	8004544 <HAL_DMA_ConfigChannelAttributes>
 8000b5a:	b108      	cbz	r0, 8000b60 <HAL_JPEG_MspInit+0x7c>
    {
      Error_Handler();
 8000b5c:	f7ff fe42 	bl	80007e4 <Error_Handler>
    }

    /* GPDMA1_REQUEST_JPEG_RX Init */
    handle_GPDMA1_Channel0.Instance = GPDMA1_Channel0;
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b60:	237c      	movs	r3, #124	@ 0x7c
    handle_GPDMA1_Channel0.Instance = GPDMA1_Channel0;
 8000b62:	4c23      	ldr	r4, [pc, #140]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b64:	4a23      	ldr	r2, [pc, #140]	@ (8000bf4 <HAL_JPEG_MspInit+0x110>)
    handle_GPDMA1_Channel0.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
    handle_GPDMA1_Channel0.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000b66:	2600      	movs	r6, #0
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b68:	e9c4 2300 	strd	r2, r3, [r4]
    handle_GPDMA1_Channel0.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000b6c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000b70:	e9c4 6302 	strd	r6, r3, [r4, #8]
    handle_GPDMA1_Channel0.Init.SrcInc = DMA_SINC_INCREMENTED;
 8000b74:	2308      	movs	r3, #8
    handle_GPDMA1_Channel0.Init.DestInc = DMA_DINC_FIXED;
    handle_GPDMA1_Channel0.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_BYTE;
    handle_GPDMA1_Channel0.Init.DestDataWidth = DMA_DEST_DATAWIDTH_WORD;
    handle_GPDMA1_Channel0.Init.Priority = DMA_HIGH_PRIORITY;
 8000b76:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
 8000b7a:	f44f 0240 	mov.w	r2, #12582912	@ 0xc00000
    handle_GPDMA1_Channel0.Init.DestInc = DMA_DINC_FIXED;
 8000b7e:	e9c4 3604 	strd	r3, r6, [r4, #16]
    handle_GPDMA1_Channel0.Init.SrcBurstLength = 8;
    handle_GPDMA1_Channel0.Init.DestBurstLength = 8;
 8000b82:	e9c4 3309 	strd	r3, r3, [r4, #36]	@ 0x24
    handle_GPDMA1_Channel0.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT1|DMA_DEST_ALLOCATED_PORT0;
 8000b86:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
    handle_GPDMA1_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
    handle_GPDMA1_Channel0.Init.Mode = DMA_NORMAL;
    if (HAL_DMA_Init(&handle_GPDMA1_Channel0) != HAL_OK)
 8000b8a:	4620      	mov	r0, r4
    handle_GPDMA1_Channel0.Init.Priority = DMA_HIGH_PRIORITY;
 8000b8c:	e9c4 1207 	strd	r1, r2, [r4, #28]
    handle_GPDMA1_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 8000b90:	e9c4 360b 	strd	r3, r6, [r4, #44]	@ 0x2c
    handle_GPDMA1_Channel0.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_BYTE;
 8000b94:	61a6      	str	r6, [r4, #24]
    handle_GPDMA1_Channel0.Init.Mode = DMA_NORMAL;
 8000b96:	6366      	str	r6, [r4, #52]	@ 0x34
    if (HAL_DMA_Init(&handle_GPDMA1_Channel0) != HAL_OK)
 8000b98:	f003 f9c4 	bl	8003f24 <HAL_DMA_Init>
 8000b9c:	b108      	cbz	r0, 8000ba2 <HAL_JPEG_MspInit+0xbe>
    {
      Error_Handler();
 8000b9e:	f7ff fe21 	bl	80007e4 <Error_Handler>
    }

    DataHandlingConfig.DataExchange = DMA_EXCHANGE_NONE;
    DataHandlingConfig.DataAlignment = DMA_DATA_PACK;
 8000ba2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    if (HAL_DMAEx_ConfigDataHandling(&handle_GPDMA1_Channel0, &DataHandlingConfig) != HAL_OK)
 8000ba6:	4812      	ldr	r0, [pc, #72]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
 8000ba8:	a902      	add	r1, sp, #8
    DataHandlingConfig.DataExchange = DMA_EXCHANGE_NONE;
 8000baa:	9602      	str	r6, [sp, #8]
    DataHandlingConfig.DataAlignment = DMA_DATA_PACK;
 8000bac:	9303      	str	r3, [sp, #12]
    if (HAL_DMAEx_ConfigDataHandling(&handle_GPDMA1_Channel0, &DataHandlingConfig) != HAL_OK)
 8000bae:	f003 fe17 	bl	80047e0 <HAL_DMAEx_ConfigDataHandling>
 8000bb2:	b108      	cbz	r0, 8000bb8 <HAL_JPEG_MspInit+0xd4>
    {
      Error_Handler();
 8000bb4:	f7ff fe16 	bl	80007e4 <Error_Handler>
    }

    __HAL_LINKDMA(hjpeg, hdmain, handle_GPDMA1_Channel0);
 8000bb8:	632c      	str	r4, [r5, #48]	@ 0x30

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000bba:	2110      	movs	r1, #16
 8000bbc:	480c      	ldr	r0, [pc, #48]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
    __HAL_LINKDMA(hjpeg, hdmain, handle_GPDMA1_Channel0);
 8000bbe:	65e5      	str	r5, [r4, #92]	@ 0x5c
    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000bc0:	f003 fcc0 	bl	8004544 <HAL_DMA_ConfigChannelAttributes>
 8000bc4:	b108      	cbz	r0, 8000bca <HAL_JPEG_MspInit+0xe6>
    {
      Error_Handler();
 8000bc6:	f7ff fe0d 	bl	80007e4 <Error_Handler>
    }

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 7, 0);
 8000bca:	208c      	movs	r0, #140	@ 0x8c
 8000bcc:	2200      	movs	r2, #0
 8000bce:	2107      	movs	r1, #7
 8000bd0:	f003 f882 	bl	8003cd8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
 8000bd4:	208c      	movs	r0, #140	@ 0x8c
 8000bd6:	f003 f8af 	bl	8003d38 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
 8000bda:	b004      	add	sp, #16
 8000bdc:	bd70      	pop	{r4, r5, r6, pc}
 8000bde:	bf00      	nop
 8000be0:	4002a000 	.word	0x4002a000
 8000be4:	46020c00 	.word	0x46020c00
 8000be8:	200003ec 	.word	0x200003ec
 8000bec:	400200d0 	.word	0x400200d0
 8000bf0:	20000374 	.word	0x20000374
 8000bf4:	40020050 	.word	0x40020050

08000bf8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bfa:	2514      	movs	r5, #20
{
 8000bfc:	4604      	mov	r4, r0
 8000bfe:	b0c3      	sub	sp, #268	@ 0x10c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c00:	462a      	mov	r2, r5
 8000c02:	2100      	movs	r1, #0
 8000c04:	eb0d 0005 	add.w	r0, sp, r5
 8000c08:	f031 fe45 	bl	8032896 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000c0c:	22e0      	movs	r2, #224	@ 0xe0
 8000c0e:	2100      	movs	r1, #0
 8000c10:	a80a      	add	r0, sp, #40	@ 0x28
 8000c12:	f031 fe40 	bl	8032896 <memset>
  if(hltdc->Instance==LTDC)
 8000c16:	6822      	ldr	r2, [r4, #0]
 8000c18:	4b57      	ldr	r3, [pc, #348]	@ (8000d78 <HAL_LTDC_MspInit+0x180>)
 8000c1a:	429a      	cmp	r2, r3
 8000c1c:	f040 80a9 	bne.w	8000d72 <HAL_LTDC_MspInit+0x17a>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000c20:	2200      	movs	r2, #0
 8000c22:	2302      	movs	r3, #2
 8000c24:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
    PeriphClkInit.LtdcClockSelection = RCC_LTDCCLKSOURCE_PLL3;
    PeriphClkInit.PLL3.PLL3Source = RCC_PLLSOURCE_HSE;
    PeriphClkInit.PLL3.PLL3M = 4;
 8000c28:	2304      	movs	r3, #4
 8000c2a:	2203      	movs	r2, #3
    PeriphClkInit.PLL3.PLL3N = 125;
    PeriphClkInit.PLL3.PLL3P = 8;
 8000c2c:	217d      	movs	r1, #125	@ 0x7d
    PeriphClkInit.PLL3.PLL3M = 4;
 8000c2e:	e9cd 2315 	strd	r2, r3, [sp, #84]	@ 0x54
    PeriphClkInit.PLL3.PLL3P = 8;
 8000c32:	2308      	movs	r3, #8
 8000c34:	e9cd 1317 	strd	r1, r3, [sp, #92]	@ 0x5c
    PeriphClkInit.PLL3.PLL3Q = 2;
 8000c38:	2302      	movs	r3, #2
    PeriphClkInit.PLL3.PLL3R = 20;
 8000c3a:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
    PeriphClkInit.PLL3.PLL3RGE = RCC_PLLVCIRANGE_0;
    PeriphClkInit.PLL3.PLL3FRACN = 0;
    PeriphClkInit.PLL3.PLL3ClockOut = RCC_PLL3_DIVR;
 8000c3e:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000c42:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInit.PLL3.PLL3ClockOut = RCC_PLL3_DIVR;
 8000c44:	931d      	str	r3, [sp, #116]	@ 0x74
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000c46:	f006 fc8b 	bl	8007560 <HAL_RCCEx_PeriphCLKConfig>
 8000c4a:	b108      	cbz	r0, 8000c50 <HAL_LTDC_MspInit+0x58>
    {
      Error_Handler();
 8000c4c:	f7ff fdca 	bl	80007e4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c50:	4b4a      	ldr	r3, [pc, #296]	@ (8000d7c <HAL_LTDC_MspInit+0x184>)
    PB9     ------> LTDC_B0
    PE0     ------> LTDC_HSYNC
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c52:	2400      	movs	r4, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c54:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c58:	2502      	movs	r5, #2
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c5a:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8000c5e:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 8000c62:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000c66:	2608      	movs	r6, #8
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c68:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8000c6c:	9200      	str	r2, [sp, #0]
 8000c6e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c70:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c74:	4842      	ldr	r0, [pc, #264]	@ (8000d80 <HAL_LTDC_MspInit+0x188>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c76:	f042 0202 	orr.w	r2, r2, #2
 8000c7a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000c7e:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c82:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c84:	f002 0202 	and.w	r2, r2, #2
 8000c88:	9201      	str	r2, [sp, #4]
 8000c8a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000c8c:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000c90:	2707      	movs	r7, #7
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000c92:	f042 0210 	orr.w	r2, r2, #16
 8000c96:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000c9a:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000c9e:	f002 0210 	and.w	r2, r2, #16
 8000ca2:	9202      	str	r2, [sp, #8]
 8000ca4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000ca6:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000caa:	f042 0208 	orr.w	r2, r2, #8
 8000cae:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000cb2:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000cb6:	f002 0208 	and.w	r2, r2, #8
 8000cba:	9203      	str	r2, [sp, #12]
 8000cbc:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cbe:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000cc2:	f042 0204 	orr.w	r2, r2, #4
 8000cc6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000cca:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cce:	e9cd 4407 	strd	r4, r4, [sp, #28]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cd2:	f003 0304 	and.w	r3, r3, #4
 8000cd6:	9304      	str	r3, [sp, #16]
 8000cd8:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cda:	2304      	movs	r3, #4
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000cdc:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cde:	e9cd 3505 	strd	r3, r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ce2:	f003 fd9d 	bl	8004820 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8000ce6:	f64f 7381 	movw	r3, #65409	@ 0xff81
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000cea:	4826      	ldr	r0, [pc, #152]	@ (8000d84 <HAL_LTDC_MspInit+0x18c>)
 8000cec:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cee:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cf2:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000cf6:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000cf8:	f003 fd92 	bl	8004820 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 8000cfc:	f64f 734b 	movw	r3, #65355	@ 0xff4b
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d00:	4821      	ldr	r0, [pc, #132]	@ (8000d88 <HAL_LTDC_MspInit+0x190>)
 8000d02:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d04:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d08:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000d0c:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d0e:	f003 fd87 	bl	8004820 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8000d12:	23c0      	movs	r3, #192	@ 0xc0
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d14:	481d      	ldr	r0, [pc, #116]	@ (8000d8c <HAL_LTDC_MspInit+0x194>)
 8000d16:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d18:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d1c:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000d20:	9709      	str	r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d22:	f003 fd7d 	bl	8004820 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8000d26:	f44f 7340 	mov.w	r3, #768	@ 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d2a:	4818      	ldr	r0, [pc, #96]	@ (8000d8c <HAL_LTDC_MspInit+0x194>)
 8000d2c:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d2e:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d32:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000d36:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d38:	f003 fd72 	bl	8004820 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8000d3c:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d40:	480f      	ldr	r0, [pc, #60]	@ (8000d80 <HAL_LTDC_MspInit+0x188>)
 8000d42:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d44:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d48:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000d4c:	9709      	str	r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d4e:	f003 fd67 	bl	8004820 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000d52:	4622      	mov	r2, r4
 8000d54:	2105      	movs	r1, #5
 8000d56:	2087      	movs	r0, #135	@ 0x87
 8000d58:	f002 ffbe 	bl	8003cd8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000d5c:	2087      	movs	r0, #135	@ 0x87
 8000d5e:	f002 ffeb 	bl	8003d38 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(LTDC_ER_IRQn, 5, 0);
 8000d62:	2088      	movs	r0, #136	@ 0x88
 8000d64:	4622      	mov	r2, r4
 8000d66:	2105      	movs	r1, #5
 8000d68:	f002 ffb6 	bl	8003cd8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_ER_IRQn);
 8000d6c:	2088      	movs	r0, #136	@ 0x88
 8000d6e:	f002 ffe3 	bl	8003d38 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000d72:	b043      	add	sp, #268	@ 0x10c
 8000d74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d76:	bf00      	nop
 8000d78:	40016800 	.word	0x40016800
 8000d7c:	46020c00 	.word	0x46020c00
 8000d80:	42020400 	.word	0x42020400
 8000d84:	42021000 	.word	0x42021000
 8000d88:	42020c00 	.word	0x42020c00
 8000d8c:	42020800 	.word	0x42020800

08000d90 <HAL_InitTick>:
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d90:	4b1f      	ldr	r3, [pc, #124]	@ (8000e10 <HAL_InitTick+0x80>)
{
 8000d92:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d94:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
{
 8000d98:	b088      	sub	sp, #32
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d9a:	f042 0210 	orr.w	r2, r2, #16
 8000d9e:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
 8000da2:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000da6:	4669      	mov	r1, sp
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000da8:	f003 0310 	and.w	r3, r3, #16
 8000dac:	9301      	str	r3, [sp, #4]
{
 8000dae:	4606      	mov	r6, r0
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000db0:	a802      	add	r0, sp, #8

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8000db2:	4d18      	ldr	r5, [pc, #96]	@ (8000e14 <HAL_InitTick+0x84>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000db4:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000db6:	f006 fad9 	bl	800736c <HAL_RCC_GetClockConfig>
  uwTimclock = HAL_RCC_GetPCLK1Freq();
 8000dba:	f006 fac7 	bl	800734c <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8000dbe:	4b16      	ldr	r3, [pc, #88]	@ (8000e18 <HAL_InitTick+0x88>)
 8000dc0:	602b      	str	r3, [r5, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8000dc2:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8000dc6:	60eb      	str	r3, [r5, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000dc8:	4b14      	ldr	r3, [pc, #80]	@ (8000e1c <HAL_InitTick+0x8c>)
 8000dca:	fbb0 f0f3 	udiv	r0, r0, r3
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8000dce:	2300      	movs	r3, #0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000dd0:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8000dd2:	6068      	str	r0, [r5, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  status = HAL_TIM_Base_Init(&htim6);
 8000dd4:	4628      	mov	r0, r5
  htim6.Init.ClockDivision = 0;
 8000dd6:	612b      	str	r3, [r5, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000dd8:	60ab      	str	r3, [r5, #8]
  status = HAL_TIM_Base_Init(&htim6);
 8000dda:	f007 f94f 	bl	800807c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8000dde:	4604      	mov	r4, r0
 8000de0:	b968      	cbnz	r0, 8000dfe <HAL_InitTick+0x6e>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8000de2:	4628      	mov	r0, r5
 8000de4:	f006 ff64 	bl	8007cb0 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8000de8:	4604      	mov	r4, r0
 8000dea:	b940      	cbnz	r0, 8000dfe <HAL_InitTick+0x6e>
    {
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000dec:	2e0f      	cmp	r6, #15
 8000dee:	d80c      	bhi.n	8000e0a <HAL_InitTick+0x7a>
      {
        /* Enable the TIM6 global Interrupt */
        HAL_NVIC_SetPriority(TIM6_IRQn, TickPriority, 0U);
 8000df0:	4602      	mov	r2, r0
 8000df2:	4631      	mov	r1, r6
 8000df4:	2031      	movs	r0, #49	@ 0x31
 8000df6:	f002 ff6f 	bl	8003cd8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8000dfa:	4b09      	ldr	r3, [pc, #36]	@ (8000e20 <HAL_InitTick+0x90>)
 8000dfc:	601e      	str	r6, [r3, #0]
      }
    }
  }

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_IRQn);
 8000dfe:	2031      	movs	r0, #49	@ 0x31
 8000e00:	f002 ff9a 	bl	8003d38 <HAL_NVIC_EnableIRQ>

 /* Return function status */
  return status;
}
 8000e04:	4620      	mov	r0, r4
 8000e06:	b008      	add	sp, #32
 8000e08:	bd70      	pop	{r4, r5, r6, pc}
        status = HAL_ERROR;
 8000e0a:	2401      	movs	r4, #1
 8000e0c:	e7f7      	b.n	8000dfe <HAL_InitTick+0x6e>
 8000e0e:	bf00      	nop
 8000e10:	46020c00 	.word	0x46020c00
 8000e14:	20000660 	.word	0x20000660
 8000e18:	40001000 	.word	0x40001000
 8000e1c:	000f4240 	.word	0x000f4240
 8000e20:	20000054 	.word	0x20000054

08000e24 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000e24:	e7fe      	b.n	8000e24 <NMI_Handler>

08000e26 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000e26:	e7fe      	b.n	8000e26 <HardFault_Handler>

08000e28 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000e28:	e7fe      	b.n	8000e28 <MemManage_Handler>

08000e2a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000e2a:	e7fe      	b.n	8000e2a <BusFault_Handler>

08000e2c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000e2c:	e7fe      	b.n	8000e2c <UsageFault_Handler>

08000e2e <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000e2e:	4770      	bx	lr

08000e30 <EXTI5_IRQHandler>:
void EXTI5_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI5_IRQn 0 */

  /* USER CODE END EXTI5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TP_IRQ_Pin);
 8000e30:	2020      	movs	r0, #32
 8000e32:	f003 be19 	b.w	8004a68 <HAL_GPIO_EXTI_IRQHandler>
	...

08000e38 <GPDMA1_Channel0_IRQHandler>:
void GPDMA1_Channel0_IRQHandler(void)
{
  /* USER CODE BEGIN GPDMA1_Channel0_IRQn 0 */

  /* USER CODE END GPDMA1_Channel0_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA1_Channel0);
 8000e38:	4801      	ldr	r0, [pc, #4]	@ (8000e40 <GPDMA1_Channel0_IRQHandler+0x8>)
 8000e3a:	f003 bac2 	b.w	80043c2 <HAL_DMA_IRQHandler>
 8000e3e:	bf00      	nop
 8000e40:	20000374 	.word	0x20000374

08000e44 <GPDMA1_Channel1_IRQHandler>:
void GPDMA1_Channel1_IRQHandler(void)
{
  /* USER CODE BEGIN GPDMA1_Channel1_IRQn 0 */

  /* USER CODE END GPDMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA1_Channel1);
 8000e44:	4801      	ldr	r0, [pc, #4]	@ (8000e4c <GPDMA1_Channel1_IRQHandler+0x8>)
 8000e46:	f003 babc 	b.w	80043c2 <HAL_DMA_IRQHandler>
 8000e4a:	bf00      	nop
 8000e4c:	200003ec 	.word	0x200003ec

08000e50 <TIM6_IRQHandler>:
void TIM6_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_IRQn 0 */

  /* USER CODE END TIM6_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8000e50:	4801      	ldr	r0, [pc, #4]	@ (8000e58 <TIM6_IRQHandler+0x8>)
 8000e52:	f006 bf8b 	b.w	8007d6c <HAL_TIM_IRQHandler>
 8000e56:	bf00      	nop
 8000e58:	20000660 	.word	0x20000660

08000e5c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8000e5c:	4801      	ldr	r0, [pc, #4]	@ (8000e64 <DMA2D_IRQHandler+0x8>)
 8000e5e:	f003 bbce 	b.w	80045fe <HAL_DMA2D_IRQHandler>
 8000e62:	bf00      	nop
 8000e64:	2000057c 	.word	0x2000057c

08000e68 <HSPI1_IRQHandler>:
void HSPI1_IRQHandler(void)
{
  /* USER CODE BEGIN HSPI1_IRQn 0 */

  /* USER CODE END HSPI1_IRQn 0 */
  HAL_XSPI_IRQHandler(&hxspi1);
 8000e68:	4801      	ldr	r0, [pc, #4]	@ (8000e70 <HSPI1_IRQHandler+0x8>)
 8000e6a:	f007 bcb1 	b.w	80087d0 <HAL_XSPI_IRQHandler>
 8000e6e:	bf00      	nop
 8000e70:	20000510 	.word	0x20000510

08000e74 <GPU2D_IRQHandler>:
void GPU2D_IRQHandler(void)
{
  /* USER CODE BEGIN GPU2D_IRQn 0 */

  /* USER CODE END GPU2D_IRQn 0 */
  HAL_GPU2D_IRQHandler(&hgpu2d);
 8000e74:	4801      	ldr	r0, [pc, #4]	@ (8000e7c <GPU2D_IRQHandler+0x8>)
 8000e76:	f003 be26 	b.w	8004ac6 <HAL_GPU2D_IRQHandler>
 8000e7a:	bf00      	nop
 8000e7c:	20000570 	.word	0x20000570

08000e80 <GPU2D_ER_IRQHandler>:
void GPU2D_ER_IRQHandler(void)
{
  /* USER CODE BEGIN GPU2D_ER_IRQn 0 */

  /* USER CODE END GPU2D_ER_IRQn 0 */
  HAL_GPU2D_ER_IRQHandler(&hgpu2d);
 8000e80:	4801      	ldr	r0, [pc, #4]	@ (8000e88 <GPU2D_ER_IRQHandler+0x8>)
 8000e82:	f003 be33 	b.w	8004aec <HAL_GPU2D_ER_IRQHandler>
 8000e86:	bf00      	nop
 8000e88:	20000570 	.word	0x20000570

08000e8c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8000e8c:	4801      	ldr	r0, [pc, #4]	@ (8000e94 <LTDC_IRQHandler+0x8>)
 8000e8e:	f005 ba8f 	b.w	80063b0 <HAL_LTDC_IRQHandler>
 8000e92:	bf00      	nop
 8000e94:	200002cc 	.word	0x200002cc

08000e98 <LTDC_ER_IRQHandler>:
}

/**
  * @brief This function handles LCD-TFT Error interrupt.
  */
void LTDC_ER_IRQHandler(void)
 8000e98:	f7ff bff8 	b.w	8000e8c <LTDC_IRQHandler>

08000e9c <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
 8000e9c:	4801      	ldr	r0, [pc, #4]	@ (8000ea4 <JPEG_IRQHandler+0x8>)
 8000e9e:	f005 b93a 	b.w	8006116 <HAL_JPEG_IRQHandler>
 8000ea2:	bf00      	nop
 8000ea4:	20000464 	.word	0x20000464

08000ea8 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 8000ea8:	2001      	movs	r0, #1
 8000eaa:	4770      	bx	lr

08000eac <_kill>:

int _kill(int pid, int sig)
{
 8000eac:	b508      	push	{r3, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000eae:	f031 fda7 	bl	8032a00 <__errno>
 8000eb2:	2316      	movs	r3, #22
 8000eb4:	6003      	str	r3, [r0, #0]
  return -1;
}
 8000eb6:	f04f 30ff 	mov.w	r0, #4294967295
 8000eba:	bd08      	pop	{r3, pc}

08000ebc <_exit>:

void _exit (int status)
{
 8000ebc:	b508      	push	{r3, lr}
  errno = EINVAL;
 8000ebe:	f031 fd9f 	bl	8032a00 <__errno>
 8000ec2:	2316      	movs	r3, #22
 8000ec4:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 8000ec6:	e7fe      	b.n	8000ec6 <_exit+0xa>

08000ec8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000ec8:	b570      	push	{r4, r5, r6, lr}
 8000eca:	460d      	mov	r5, r1
 8000ecc:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ece:	460e      	mov	r6, r1
 8000ed0:	1b73      	subs	r3, r6, r5
 8000ed2:	429c      	cmp	r4, r3
 8000ed4:	dc01      	bgt.n	8000eda <_read+0x12>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 8000ed6:	4620      	mov	r0, r4
 8000ed8:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 8000eda:	f3af 8000 	nop.w
 8000ede:	f806 0b01 	strb.w	r0, [r6], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ee2:	e7f5      	b.n	8000ed0 <_read+0x8>

08000ee4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000ee4:	b570      	push	{r4, r5, r6, lr}
 8000ee6:	460d      	mov	r5, r1
 8000ee8:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000eea:	460e      	mov	r6, r1
 8000eec:	1b73      	subs	r3, r6, r5
 8000eee:	429c      	cmp	r4, r3
 8000ef0:	dc01      	bgt.n	8000ef6 <_write+0x12>
  {
    __io_putchar(*ptr++);
  }
  return len;
}
 8000ef2:	4620      	mov	r0, r4
 8000ef4:	bd70      	pop	{r4, r5, r6, pc}
    __io_putchar(*ptr++);
 8000ef6:	f816 0b01 	ldrb.w	r0, [r6], #1
 8000efa:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000efe:	e7f5      	b.n	8000eec <_write+0x8>

08000f00 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8000f00:	f04f 30ff 	mov.w	r0, #4294967295
 8000f04:	4770      	bx	lr

08000f06 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8000f06:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  return 0;
}
 8000f0a:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 8000f0c:	604b      	str	r3, [r1, #4]
}
 8000f0e:	4770      	bx	lr

08000f10 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8000f10:	2001      	movs	r0, #1
 8000f12:	4770      	bx	lr

08000f14 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8000f14:	2000      	movs	r0, #0
 8000f16:	4770      	bx	lr

08000f18 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000f18:	4a0b      	ldr	r2, [pc, #44]	@ (8000f48 <_sbrk+0x30>)
{
 8000f1a:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 8000f1c:	6811      	ldr	r1, [r2, #0]
{
 8000f1e:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8000f20:	b909      	cbnz	r1, 8000f26 <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 8000f22:	490a      	ldr	r1, [pc, #40]	@ (8000f4c <_sbrk+0x34>)
 8000f24:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000f26:	6810      	ldr	r0, [r2, #0]
 8000f28:	4909      	ldr	r1, [pc, #36]	@ (8000f50 <_sbrk+0x38>)
 8000f2a:	4c0a      	ldr	r4, [pc, #40]	@ (8000f54 <_sbrk+0x3c>)
 8000f2c:	4403      	add	r3, r0
 8000f2e:	1b09      	subs	r1, r1, r4
 8000f30:	428b      	cmp	r3, r1
 8000f32:	d906      	bls.n	8000f42 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 8000f34:	f031 fd64 	bl	8032a00 <__errno>
 8000f38:	230c      	movs	r3, #12
 8000f3a:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8000f3c:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8000f40:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8000f42:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 8000f44:	e7fc      	b.n	8000f40 <_sbrk+0x28>
 8000f46:	bf00      	nop
 8000f48:	200006ac 	.word	0x200006ac
 8000f4c:	200836e0 	.word	0x200836e0
 8000f50:	202f0000 	.word	0x202f0000
 8000f54:	00001000 	.word	0x00001000

08000f58 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* set stack pointer */
 8000f58:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000f90 <LoopForever+0x2>
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000f5c:	f002 fe32 	bl	8003bc4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8000f60:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8000f62:	e003      	b.n	8000f6c <LoopCopyDataInit>

08000f64 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8000f64:	4b0b      	ldr	r3, [pc, #44]	@ (8000f94 <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 8000f66:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 8000f68:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 8000f6a:	3104      	adds	r1, #4

08000f6c <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8000f6c:	480a      	ldr	r0, [pc, #40]	@ (8000f98 <LoopForever+0xa>)
	ldr	r3, =_edata
 8000f6e:	4b0b      	ldr	r3, [pc, #44]	@ (8000f9c <LoopForever+0xe>)
	adds	r2, r0, r1
 8000f70:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8000f72:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8000f74:	d3f6      	bcc.n	8000f64 <CopyDataInit>
	ldr	r2, =_sbss
 8000f76:	4a0a      	ldr	r2, [pc, #40]	@ (8000fa0 <LoopForever+0x12>)
	b	LoopFillZerobss
 8000f78:	e002      	b.n	8000f80 <LoopFillZerobss>

08000f7a <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 8000f7a:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8000f7c:	f842 3b04 	str.w	r3, [r2], #4

08000f80 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8000f80:	4b08      	ldr	r3, [pc, #32]	@ (8000fa4 <LoopForever+0x16>)
	cmp	r2, r3
 8000f82:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8000f84:	d3f9      	bcc.n	8000f7a <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8000f86:	f031 fd41 	bl	8032a0c <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8000f8a:	f7ff f9fd 	bl	8000388 <main>

08000f8e <LoopForever>:

LoopForever:
    b LoopForever
 8000f8e:	e7fe      	b.n	8000f8e <LoopForever>
  ldr   sp, =_estack    /* set stack pointer */
 8000f90:	202f0000 	.word	0x202f0000
	ldr	r3, =_sidata
 8000f94:	08038858 	.word	0x08038858
	ldr	r0, =_sdata
 8000f98:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8000f9c:	200002a8 	.word	0x200002a8
	ldr	r2, =_sbss
 8000fa0:	200002a8 	.word	0x200002a8
	ldr	r3, = _ebss
 8000fa4:	200836e0 	.word	0x200836e0

08000fa8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8000fa8:	e7fe      	b.n	8000fa8 <ADC1_2_IRQHandler>

08000faa <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000faa:	4770      	bx	lr

08000fac <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000fac:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8000fae:	f001 fb6b 	bl	8002688 <touchgfx_components_init>
    touchgfx_init();
}
 8000fb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8000fb6:	f001 baed 	b.w	8002594 <touchgfx_init>

08000fba <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8000fba:	f001 bb75 	b.w	80026a8 <touchgfx_taskEntry>

08000fbe <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000fbe:	6840      	ldr	r0, [r0, #4]
    }
 8000fc0:	4770      	bx	lr

08000fc2 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000fc2:	6041      	str	r1, [r0, #4]
    }
 8000fc4:	4770      	bx	lr
	...

08000fc8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000fc8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8000fcc:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 8000fd0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000fd4:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 8000fd8:	4b05      	ldr	r3, [pc, #20]	@ (8000ff0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 8000fda:	4a06      	ldr	r2, [pc, #24]	@ (8000ff4 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 8000fdc:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
 8000fe0:	430a      	orrs	r2, r1
 8000fe2:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000fe6:	681a      	ldr	r2, [r3, #0]
 8000fe8:	f042 0201 	orr.w	r2, r2, #1
 8000fec:	601a      	str	r2, [r3, #0]
}
 8000fee:	4770      	bx	lr
 8000ff0:	e0001000 	.word	0xe0001000
 8000ff4:	c5acce55 	.word	0xc5acce55

08000ff8 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000ff8:	1a52      	subs	r2, r2, r1
 8000ffa:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 8000ffe:	fbb2 f0f3 	udiv	r0, r2, r3
 8001002:	4770      	bx	lr

08001004 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8001004:	4b01      	ldr	r3, [pc, #4]	@ (800100c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8001006:	6858      	ldr	r0, [r3, #4]
}
 8001008:	4770      	bx	lr
 800100a:	bf00      	nop
 800100c:	e0001000 	.word	0xe0001000

08001010 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8001010:	4770      	bx	lr

08001012 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8001012:	b510      	push	{r4, lr}
 8001014:	4604      	mov	r4, r0
 8001016:	210c      	movs	r1, #12
 8001018:	f030 f85d 	bl	80310d6 <_ZdlPvj>
 800101c:	4620      	mov	r0, r4
 800101e:	bd10      	pop	{r4, pc}

08001020 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001020:	6803      	ldr	r3, [r0, #0]
{
 8001022:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001024:	691b      	ldr	r3, [r3, #16]
{
 8001026:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8001028:	b131      	cbz	r1, 8001038 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800102a:	4798      	blx	r3
 800102c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800102e:	6863      	ldr	r3, [r4, #4]
 8001030:	1a9b      	subs	r3, r3, r2
 8001032:	4403      	add	r3, r0
 8001034:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8001036:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8001038:	4798      	blx	r3
 800103a:	60a0      	str	r0, [r4, #8]
}
 800103c:	e7fb      	b.n	8001036 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800103e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800103e:	4770      	bx	lr

08001040 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8001040:	4770      	bx	lr

08001042 <_ZN8touchgfx10KeySampler4initEv>:

using namespace touchgfx;

void KeySampler::init()
{
}
 8001042:	4770      	bx	lr

08001044 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8001044:	b510      	push	{r4, lr}
    bool buttonPressed = false;
    if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port, USER_BUTTON_Pin) != GPIO_PIN_RESET)
 8001046:	4805      	ldr	r0, [pc, #20]	@ (800105c <_ZN8touchgfx10KeySampler6sampleERh+0x18>)
{
 8001048:	460c      	mov	r4, r1
    if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port, USER_BUTTON_Pin) != GPIO_PIN_RESET)
 800104a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800104e:	f003 fcf5 	bl	8004a3c <HAL_GPIO_ReadPin>
 8001052:	b108      	cbz	r0, 8001058 <_ZN8touchgfx10KeySampler6sampleERh+0x14>
    {
        buttonPressed = true;
        key = 1; // This is the "hardware button key" reffered in the TouchGFX Designer Interactions
 8001054:	2001      	movs	r0, #1
 8001056:	7020      	strb	r0, [r4, #0]
    }
    return buttonPressed;
}
 8001058:	bd10      	pop	{r4, pc}
 800105a:	bf00      	nop
 800105c:	42020800 	.word	0x42020800

08001060 <_ZN8touchgfx10KeySamplerD0Ev>:
 8001060:	b510      	push	{r4, lr}
 8001062:	4604      	mov	r4, r0
 8001064:	2108      	movs	r1, #8
 8001066:	f030 f836 	bl	80310d6 <_ZdlPvj>
 800106a:	4620      	mov	r0, r4
 800106c:	bd10      	pop	{r4, pc}

0800106e <_ZN20STM32TouchController4initEv>:
}

void STM32TouchController::init()
{
    // No init needed
}
 800106e:	4770      	bx	lr

08001070 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001070:	4770      	bx	lr

08001072 <_ZN20STM32TouchControllerD0Ev>:
 8001072:	b510      	push	{r4, lr}
 8001074:	4604      	mov	r4, r0
 8001076:	2104      	movs	r1, #4
 8001078:	f030 f82d 	bl	80310d6 <_ZdlPvj>
 800107c:	4620      	mov	r0, r4
 800107e:	bd10      	pop	{r4, pc}

08001080 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8001080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001084:	4615      	mov	r5, r2
    uint8_t touches = 0;
    uint8_t buf[6];
    const uint16_t STATUS_REG = 0x814E;
    const uint16_t TOUCH_POS_REG = 0x8150;
    uint8_t ZERO = 0;
 8001086:	f04f 0a00 	mov.w	sl, #0
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800108a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800108e:	4b28      	ldr	r3, [pc, #160]	@ (8001130 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb0>)
{
 8001090:	b089      	sub	sp, #36	@ 0x24
    uint8_t ZERO = 0;
 8001092:	f88d a017 	strb.w	sl, [sp, #23]
{
 8001096:	460e      	mov	r6, r1
 8001098:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
  __ASM volatile ("dsb 0xF":::"memory");
 800109c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010a0:	f3bf 8f6f 	isb	sy

    NVIC_DisableIRQ(EXTI5_IRQn);
    if (doSampleTouch)
 80010a4:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 8001138 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb8>
 80010a8:	f899 3000 	ldrb.w	r3, [r9]
 80010ac:	b30b      	cbz	r3, 80010f2 <_ZN20STM32TouchController11sampleTouchERlS0_+0x72>
    {
        HAL_I2C_Mem_Read(&hi2c2, 0xBA, STATUS_REG, 2, buf, 1, HAL_MAX_DELAY);
 80010ae:	f04f 0b01 	mov.w	fp, #1
 80010b2:	f04f 38ff 	mov.w	r8, #4294967295
 80010b6:	af06      	add	r7, sp, #24
 80010b8:	2302      	movs	r3, #2
 80010ba:	f248 124e 	movw	r2, #33102	@ 0x814e
 80010be:	21ba      	movs	r1, #186	@ 0xba
 80010c0:	e9cd b801 	strd	fp, r8, [sp, #4]
 80010c4:	481b      	ldr	r0, [pc, #108]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
 80010c6:	9700      	str	r7, [sp, #0]
 80010c8:	f003 ff76 	bl	8004fb8 <HAL_I2C_Mem_Read>
        touches = (0x0F & buf[0]);
 80010cc:	f89d 4018 	ldrb.w	r4, [sp, #24]

        HAL_I2C_Mem_Write(&hi2c2, 0xBA, STATUS_REG, 2, &ZERO, 1, HAL_MAX_DELAY);
 80010d0:	f10d 0317 	add.w	r3, sp, #23
 80010d4:	9300      	str	r3, [sp, #0]
 80010d6:	f248 124e 	movw	r2, #33102	@ 0x814e
 80010da:	2302      	movs	r3, #2
 80010dc:	21ba      	movs	r1, #186	@ 0xba
 80010de:	e9cd b801 	strd	fp, r8, [sp, #4]
 80010e2:	4814      	ldr	r0, [pc, #80]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
        touches = (0x0F & buf[0]);
 80010e4:	f004 040f 	and.w	r4, r4, #15
        HAL_I2C_Mem_Write(&hi2c2, 0xBA, STATUS_REG, 2, &ZERO, 1, HAL_MAX_DELAY);
 80010e8:	f003 fe8c 	bl	8004e04 <HAL_I2C_Mem_Write>

        doSampleTouch = false;
 80010ec:	f889 a000 	strb.w	sl, [r9]

        if (touches > 0)
 80010f0:	b954      	cbnz	r4, 8001108 <_ZN20STM32TouchController11sampleTouchERlS0_+0x88>
    uint8_t touches = 0;
 80010f2:	2400      	movs	r4, #0
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010f4:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80010f8:	4b0d      	ldr	r3, [pc, #52]	@ (8001130 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb0>)
 80010fa:	601a      	str	r2, [r3, #0]
        }
    }
    NVIC_EnableIRQ(EXTI5_IRQn);

    return (touches > 0);
}
 80010fc:	1e20      	subs	r0, r4, #0
 80010fe:	bf18      	it	ne
 8001100:	2001      	movne	r0, #1
 8001102:	b009      	add	sp, #36	@ 0x24
 8001104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            HAL_I2C_Mem_Read(&hi2c2, 0xBA, TOUCH_POS_REG, 2, buf, 4, HAL_MAX_DELAY);
 8001108:	2304      	movs	r3, #4
 800110a:	f248 1250 	movw	r2, #33104	@ 0x8150
 800110e:	e9cd 7300 	strd	r7, r3, [sp]
 8001112:	21ba      	movs	r1, #186	@ 0xba
 8001114:	2302      	movs	r3, #2
 8001116:	4807      	ldr	r0, [pc, #28]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
 8001118:	f8cd 8008 	str.w	r8, [sp, #8]
 800111c:	f003 ff4c 	bl	8004fb8 <HAL_I2C_Mem_Read>
            x = buf[0] + (buf[1] << 8);
 8001120:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8001124:	6033      	str	r3, [r6, #0]
            y = buf[2] + (buf[3] << 8);
 8001126:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 800112a:	602b      	str	r3, [r5, #0]
 800112c:	e7e2      	b.n	80010f4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x74>
 800112e:	bf00      	nop
 8001130:	e000e100 	.word	0xe000e100
 8001134:	200004bc 	.word	0x200004bc
 8001138:	200006b0 	.word	0x200006b0

0800113c <HAL_GPIO_EXTI_Falling_Callback>:
        if (GPIO_Pin == TP_IRQ_Pin)
 800113c:	2820      	cmp	r0, #32
            doSampleTouch = true;
 800113e:	bf02      	ittt	eq
 8001140:	2201      	moveq	r2, #1
 8001142:	4b01      	ldreq	r3, [pc, #4]	@ (8001148 <HAL_GPIO_EXTI_Falling_Callback+0xc>)
 8001144:	701a      	strbeq	r2, [r3, #0]
    }
 8001146:	4770      	bx	lr
 8001148:	200006b0 	.word	0x200006b0

0800114c <_ZN8touchgfx4GPIO4initEv>:
 * Perform configuration of IO pins.
 */
void GPIO::init()
{

}
 800114c:	4770      	bx	lr
	...

08001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001150:	2803      	cmp	r0, #3
 8001152:	d814      	bhi.n	800117e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2e>
 8001154:	e8df f000 	tbb	[pc, r0]
 8001158:	0f0b0702 	.word	0x0f0b0702
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
 800115c:	2201      	movs	r2, #1
 800115e:	4611      	mov	r1, r2
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_SET);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
 8001160:	4807      	ldr	r0, [pc, #28]	@ (8001180 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8001162:	f003 bc71 	b.w	8004a48 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_SET);
 8001166:	2201      	movs	r2, #1
 8001168:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800116c:	e7f8      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_SET);
 800116e:	2201      	movs	r2, #1
 8001170:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001174:	e7f4      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
 8001176:	2201      	movs	r2, #1
 8001178:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800117c:	e7f0      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 800117e:	4770      	bx	lr
 8001180:	42020800 	.word	0x42020800

08001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001184:	2803      	cmp	r0, #3
 8001186:	d814      	bhi.n	80011b2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2e>
 8001188:	e8df f000 	tbb	[pc, r0]
 800118c:	0f0b0702 	.word	0x0f0b0702
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8001190:	2200      	movs	r2, #0
 8001192:	2101      	movs	r1, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001194:	4807      	ldr	r0, [pc, #28]	@ (80011b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8001196:	f003 bc57 	b.w	8004a48 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 800119a:	2200      	movs	r2, #0
 800119c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011a0:	e7f8      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
 80011a2:	2200      	movs	r2, #0
 80011a4:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80011a8:	e7f4      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80011aa:	2200      	movs	r2, #0
 80011ac:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80011b0:	e7f0      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 80011b2:	4770      	bx	lr
 80011b4:	42020800 	.word	0x42020800

080011b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80011b8:	2803      	cmp	r0, #3
 80011ba:	d810      	bhi.n	80011de <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x26>
 80011bc:	e8df f000 	tbb	[pc, r0]
 80011c0:	0c090602 	.word	0x0c090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80011c4:	2101      	movs	r1, #1
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80011c6:	4806      	ldr	r0, [pc, #24]	@ (80011e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
 80011c8:	f003 bc43 	b.w	8004a52 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80011cc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011d0:	e7f9      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80011d2:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80011d6:	e7f6      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80011d8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80011dc:	e7f3      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 80011de:	4770      	bx	lr
 80011e0:	42020800 	.word	0x42020800

080011e4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80011e4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80011e6:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 80011ea:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 80011ee:	4770      	bx	lr

080011f0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80011f0:	2000      	movs	r0, #0
 80011f2:	4770      	bx	lr

080011f4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80011f4:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80011f6:	3900      	subs	r1, #0
 80011f8:	bf18      	it	ne
 80011fa:	2101      	movne	r1, #1
 80011fc:	4b01      	ldr	r3, [pc, #4]	@ (8001204 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 80011fe:	7019      	strb	r1, [r3, #0]
    }
 8001200:	4770      	bx	lr
 8001202:	bf00      	nop
 8001204:	20082ec3 	.word	0x20082ec3

08001208 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001208:	2000      	movs	r0, #0
 800120a:	4770      	bx	lr

0800120c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800120c:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800120e:	b10b      	cbz	r3, 8001214 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001210:	4608      	mov	r0, r1
 8001212:	4718      	bx	r3
        }
    }
 8001214:	4770      	bx	lr

08001216 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001216:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800121a:	4770      	bx	lr

0800121c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800121c:	6840      	ldr	r0, [r0, #4]
 800121e:	6803      	ldr	r3, [r0, #0]
 8001220:	699b      	ldr	r3, [r3, #24]
 8001222:	4718      	bx	r3

08001224 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001224:	4770      	bx	lr

08001226 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001226:	4770      	bx	lr

08001228 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001228:	4770      	bx	lr
	...

0800122c <_ZN11TouchGFXHAL10initializeEv>:

KeySampler btnctrl;


void TouchGFXHAL::initialize()
{
 800122c:	b538      	push	{r3, r4, r5, lr}
 800122e:	4604      	mov	r4, r0
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
    instrumentation.init();
 8001230:	f104 05a8 	add.w	r5, r4, #168	@ 0xa8
    TouchGFXGeneratedHAL::initialize();
 8001234:	f001 fac4 	bl	80027c0 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    instrumentation.init();
 8001238:	4628      	mov	r0, r5
 800123a:	f7ff fec5 	bl	8000fc8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 800123e:	2301      	movs	r3, #1
 8001240:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
        buttonController = btnCtrl;
 8001244:	4b01      	ldr	r3, [pc, #4]	@ (800124c <_ZN11TouchGFXHAL10initializeEv+0x20>)
        mcuInstrumentation = mcuInstr;
 8001246:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 8001248:	6163      	str	r3, [r4, #20]
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
    setButtonController(&btnctrl);

}
 800124a:	bd38      	pop	{r3, r4, r5, pc}
 800124c:	200006b4 	.word	0x200006b4

08001250 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001250:	f001 ba96 	b.w	8002780 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001254 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001254:	f001 ba9a 	b.w	800278c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001258 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001258:	f001 bb64 	b.w	8002924 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800125c <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800125c:	f001 bb64 	b.w	8002928 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08001260 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001260:	f001 ba68 	b.w	8002734 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001264 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001264:	f001 bcce 	b.w	8002c04 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001268 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001268:	f001 bcb2 	b.w	8002bd0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800126c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800126c:	f001 ba6e 	b.w	800274c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001270 <_ZN11TouchGFXHAL10beginFrameEv>:
}

bool TouchGFXHAL::beginFrame()
{
    return TouchGFXGeneratedHAL::beginFrame();
 8001270:	f001 bb54 	b.w	800291c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>

08001274 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
    TouchGFXGeneratedHAL::endFrame();
 8001274:	f001 bb54 	b.w	8002920 <_ZN20TouchGFXGeneratedHAL8endFrameEv>

08001278 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001278:	b510      	push	{r4, lr}
 800127a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800127c:	f00a fb7e 	bl	800b97c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001280:	6823      	ldr	r3, [r4, #0]
 8001282:	4620      	mov	r0, r4
    }
 8001284:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001288:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800128c:	4718      	bx	r3

0800128e <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
 800128e:	f009 beff 	b.w	800b090 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

08001292 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
 8001292:	f009 bdc5 	b.w	800ae20 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001296 <_ZN11TouchGFXHALD0Ev>:
 8001296:	b510      	push	{r4, lr}
 8001298:	4604      	mov	r4, r0
 800129a:	21b4      	movs	r1, #180	@ 0xb4
 800129c:	f02f ff1b 	bl	80310d6 <_ZdlPvj>
 80012a0:	4620      	mov	r0, r4
 80012a2:	bd10      	pop	{r4, pc}

080012a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80012a4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80012a6:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 80012aa:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 80012ae:	4b0c      	ldr	r3, [pc, #48]	@ (80012e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80012b0:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80012b2:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80012b4:	d009      	beq.n	80012ca <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80012b6:	b93a      	cbnz	r2, 80012c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                const uint16_t tmp = DISPLAY_HEIGHT;
 80012b8:	490a      	ldr	r1, [pc, #40]	@ (80012e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012ba:	4a0b      	ldr	r2, [pc, #44]	@ (80012e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80012bc:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012be:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 80012c0:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 80012c2:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012c4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80012c6:	701a      	strb	r2, [r3, #0]
    }
 80012c8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80012ca:	2a00      	cmp	r2, #0
 80012cc:	d0fc      	beq.n	80012c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012ce:	4a06      	ldr	r2, [pc, #24]	@ (80012e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80012d0:	4904      	ldr	r1, [pc, #16]	@ (80012e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012d2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80012d4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012d6:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80012d8:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 80012da:	2200      	movs	r2, #0
 80012dc:	e7f3      	b.n	80012c6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80012de:	bf00      	nop
 80012e0:	20082ebc 	.word	0x20082ebc
 80012e4:	20082eba 	.word	0x20082eba
 80012e8:	20082eb8 	.word	0x20082eb8

080012ec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80012ec:	b570      	push	{r4, r5, r6, lr}
 80012ee:	460d      	mov	r5, r1
 80012f0:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80012f2:	b935      	cbnz	r5, 8001302 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80012f4:	f240 21d2 	movw	r1, #722	@ 0x2d2
 80012f8:	4b08      	ldr	r3, [pc, #32]	@ (800131c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80012fa:	4a09      	ldr	r2, [pc, #36]	@ (8001320 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80012fc:	4809      	ldr	r0, [pc, #36]	@ (8001324 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80012fe:	f031 f8c3 	bl	8032488 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001302:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
    }
 8001306:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800130a:	3a00      	subs	r2, #0
 800130c:	bf18      	it	ne
 800130e:	2201      	movne	r2, #1
 8001310:	4b05      	ldr	r3, [pc, #20]	@ (8001328 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001312:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001314:	6803      	ldr	r3, [r0, #0]
 8001316:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800131a:	4718      	bx	r3
 800131c:	080336b4 	.word	0x080336b4
 8001320:	080336ec 	.word	0x080336ec
 8001324:	0803373a 	.word	0x0803373a
 8001328:	20082ec2 	.word	0x20082ec2

0800132c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800132c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800132e:	4b09      	ldr	r3, [pc, #36]	@ (8001354 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001330:	881b      	ldrh	r3, [r3, #0]
 8001332:	428b      	cmp	r3, r1
 8001334:	d803      	bhi.n	800133e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001336:	4b08      	ldr	r3, [pc, #32]	@ (8001358 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001338:	881b      	ldrh	r3, [r3, #0]
 800133a:	4293      	cmp	r3, r2
 800133c:	d905      	bls.n	800134a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800133e:	219e      	movs	r1, #158	@ 0x9e
 8001340:	4b06      	ldr	r3, [pc, #24]	@ (800135c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001342:	4a07      	ldr	r2, [pc, #28]	@ (8001360 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001344:	4807      	ldr	r0, [pc, #28]	@ (8001364 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001346:	f031 f89f 	bl	8032488 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800134a:	4b07      	ldr	r3, [pc, #28]	@ (8001368 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800134c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800134e:	4b07      	ldr	r3, [pc, #28]	@ (800136c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001350:	801a      	strh	r2, [r3, #0]
    }
 8001352:	bd08      	pop	{r3, pc}
 8001354:	20082eb8 	.word	0x20082eb8
 8001358:	20082eba 	.word	0x20082eba
 800135c:	0803377f 	.word	0x0803377f
 8001360:	080337e2 	.word	0x080337e2
 8001364:	0803373a 	.word	0x0803373a
 8001368:	20082ebe 	.word	0x20082ebe
 800136c:	20082ec0 	.word	0x20082ec0

08001370 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8001370:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8001372:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001376:	b118      	cbz	r0, 8001380 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001378:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 800137a:	6803      	ldr	r3, [r0, #0]
 800137c:	681b      	ldr	r3, [r3, #0]
 800137e:	4718      	bx	r3
    }
 8001380:	4770      	bx	lr
	...

08001384 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001384:	4601      	mov	r1, r0
 8001386:	b508      	push	{r3, lr}
        return instance;
 8001388:	4b03      	ldr	r3, [pc, #12]	@ (8001398 <IdleTaskHook+0x14>)
 800138a:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 800138c:	b101      	cbz	r1, 8001390 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 800138e:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8001390:	f00a fb0e 	bl	800b9b0 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001394:	2001      	movs	r0, #1
 8001396:	bd08      	pop	{r3, pc}
 8001398:	20082ec4 	.word	0x20082ec4

0800139c <_GLOBAL__sub_I_btnctrl>:
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 800139c:	4802      	ldr	r0, [pc, #8]	@ (80013a8 <_GLOBAL__sub_I_btnctrl+0xc>)
 800139e:	4b03      	ldr	r3, [pc, #12]	@ (80013ac <_GLOBAL__sub_I_btnctrl+0x10>)
 80013a0:	6003      	str	r3, [r0, #0]
        init();
 80013a2:	f7ff be4e 	b.w	8001042 <_ZN8touchgfx10KeySampler4initEv>
 80013a6:	bf00      	nop
 80013a8:	200006b4 	.word	0x200006b4
 80013ac:	08033688 	.word	0x08033688

080013b0 <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
 80013b0:	6940      	ldr	r0, [r0, #20]
 80013b2:	4770      	bx	lr

080013b4 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
 80013b4:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
 80013b8:	4770      	bx	lr

080013ba <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
 80013ba:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80013bc:	b923      	cbnz	r3, 80013c8 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0xe>
 80013be:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 80013c0:	3800      	subs	r0, #0
 80013c2:	bf18      	it	ne
 80013c4:	2001      	movne	r0, #1
 80013c6:	4770      	bx	lr
 80013c8:	2001      	movs	r0, #1
}
 80013ca:	4770      	bx	lr

080013cc <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
 80013cc:	6880      	ldr	r0, [r0, #8]
 80013ce:	4770      	bx	lr

080013d0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
 80013d0:	4770      	bx	lr

080013d2 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
 80013d2:	b510      	push	{r4, lr}
 80013d4:	460c      	mov	r4, r1
    *data = videoInfo;
 80013d6:	3004      	adds	r0, #4
 80013d8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 80013da:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 80013de:	bd10      	pop	{r4, pc}

080013e0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
 80013e0:	4770      	bx	lr
	...

080013e4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
 80013e4:	b508      	push	{r3, lr}
    assert(0);
 80013e6:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 80013ea:	4b02      	ldr	r3, [pc, #8]	@ (80013f4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
 80013ec:	4a02      	ldr	r2, [pc, #8]	@ (80013f8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
 80013ee:	4803      	ldr	r0, [pc, #12]	@ (80013fc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
 80013f0:	f031 f84a 	bl	8032488 <__assert_func>
 80013f4:	08034d65 	.word	0x08034d65
 80013f8:	08033900 	.word	0x08033900
 80013fc:	0803395b 	.word	0x0803395b

08001400 <_ZN20HardwareMJPEGDecoderD0Ev>:
 8001400:	b510      	push	{r4, lr}
 8001402:	4604      	mov	r4, r0
 8001404:	2148      	movs	r1, #72	@ 0x48
 8001406:	f02f fe66 	bl	80310d6 <_ZdlPvj>
 800140a:	4620      	mov	r0, r4
 800140c:	bd10      	pop	{r4, pc}
	...

08001410 <_ZN20HardwareMJPEGDecoderC1Ev>:
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
 8001410:	2200      	movs	r2, #0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001412:	4b0e      	ldr	r3, [pc, #56]	@ (800144c <_ZN20HardwareMJPEGDecoderC1Ev+0x3c>)
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
 8001414:	b510      	push	{r4, lr}
    semDecodingDone = SEM_CREATE();
 8001416:	4611      	mov	r1, r2
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
 8001418:	4604      	mov	r4, r0
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
 800141a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800141e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8001422:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001426:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 800142a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
    videoInfo.frame_width = 0;
 800142e:	e9c0 2203 	strd	r2, r2, [r0, #12]
    videoInfo.number_of_frames = 0;
 8001432:	e9c0 2201 	strd	r2, r2, [r0, #4]
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001436:	6003      	str	r3, [r0, #0]
 8001438:	63c2      	str	r2, [r0, #60]	@ 0x3c
 800143a:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    semDecodingDone = SEM_CREATE();
 800143e:	2001      	movs	r0, #1
 8001440:	f007 fb2d 	bl	8008a9e <osSemaphoreNew>
 8001444:	4b02      	ldr	r3, [pc, #8]	@ (8001450 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
 8001446:	6018      	str	r0, [r3, #0]
}
 8001448:	4620      	mov	r0, r4
 800144a:	bd10      	pop	{r4, pc}
 800144c:	08033b9c 	.word	0x08033b9c
 8001450:	20000704 	.word	0x20000704

08001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>:
{
 8001454:	b410      	push	{r4}
 8001456:	460c      	mov	r4, r1
 8001458:	4611      	mov	r1, r2
 800145a:	461a      	mov	r2, r3
    if (reader != 0)
 800145c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800145e:	b13b      	cbz	r3, 8001470 <_ZN20HardwareMJPEGDecoder7compareEmPKcm+0x1c>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
 8001460:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8001462:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8001464:	1ae4      	subs	r4, r4, r3
        src = (const char*)movieData + offset;
 8001466:	4420      	add	r0, r4
}
 8001468:	f85d 4b04 	ldr.w	r4, [sp], #4
    return strncmp(src, str, num);
 800146c:	f031 ba1b 	b.w	80328a6 <strncmp>
        src = (const char*)movieData + offset;
 8001470:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8001472:	e7f8      	b.n	8001466 <_ZN20HardwareMJPEGDecoder7compareEmPKcm+0x12>

08001474 <_ZN20HardwareMJPEGDecoder6getU32Em>:
    if (reader != 0)
 8001474:	6b03      	ldr	r3, [r0, #48]	@ 0x30
{
 8001476:	b510      	push	{r4, lr}
    if (reader != 0)
 8001478:	b173      	cbz	r3, 8001498 <_ZN20HardwareMJPEGDecoder6getU32Em+0x24>
        const uint32_t index = offset - aviBufferStartOffset;
 800147a:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
 800147c:	6b42      	ldr	r2, [r0, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
 800147e:	1ac9      	subs	r1, r1, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
 8001480:	1853      	adds	r3, r2, r1
 8001482:	7898      	ldrb	r0, [r3, #2]
 8001484:	785c      	ldrb	r4, [r3, #1]
 8001486:	0400      	lsls	r0, r0, #16
 8001488:	5c52      	ldrb	r2, [r2, r1]
 800148a:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
        val |= d[3] << 24;
 800148e:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
 8001490:	4310      	orrs	r0, r2
        val |= d[3] << 24;
 8001492:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
}
 8001496:	bd10      	pop	{r4, pc}
        volatile const uint8_t* const d = movieData + offset;
 8001498:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800149a:	1853      	adds	r3, r2, r1
        val |= d[0];
 800149c:	5c52      	ldrb	r2, [r2, r1]
        val |= d[1] << 8;
 800149e:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
 80014a0:	7898      	ldrb	r0, [r3, #2]
 80014a2:	0400      	lsls	r0, r0, #16
 80014a4:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 80014a8:	e7f1      	b.n	800148e <_ZN20HardwareMJPEGDecoder6getU32Em+0x1a>

080014aa <_ZN20HardwareMJPEGDecoder6getU16Em>:
    if (reader != 0)
 80014aa:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80014ac:	b143      	cbz	r3, 80014c0 <_ZN20HardwareMJPEGDecoder6getU16Em+0x16>
        const uint32_t index = offset - aviBufferStartOffset;
 80014ae:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80014b0:	1ac9      	subs	r1, r1, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
 80014b2:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 80014b4:	185a      	adds	r2, r3, r1
 80014b6:	7852      	ldrb	r2, [r2, #1]
 80014b8:	5c58      	ldrb	r0, [r3, r1]
 80014ba:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80014be:	4770      	bx	lr
        volatile const uint8_t* const d = movieData + offset;
 80014c0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80014c2:	185a      	adds	r2, r3, r1
        val |= d[0];
 80014c4:	5c58      	ldrb	r0, [r3, r1]
        val |= d[1] << 8;
 80014c6:	7853      	ldrb	r3, [r2, #1]
 80014c8:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
}
 80014cc:	4770      	bx	lr
	...

080014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>:
{
 80014d0:	b570      	push	{r4, r5, r6, lr}
 80014d2:	4604      	mov	r4, r0
    if (reader != 0)
 80014d4:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
 80014d6:	460d      	mov	r5, r1
 80014d8:	4616      	mov	r6, r2
    if (reader != 0)
 80014da:	b1d8      	cbz	r0, 8001514 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x44>
        if (length > aviBufferLength)
 80014dc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80014de:	4293      	cmp	r3, r2
 80014e0:	d208      	bcs.n	80014f4 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x24>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
 80014e2:	2309      	movs	r3, #9
            assert(!"Buffer to small");
 80014e4:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
 80014e6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
 80014ea:	4a0c      	ldr	r2, [pc, #48]	@ (800151c <_ZN20HardwareMJPEGDecoder8readDataEmm+0x4c>)
 80014ec:	4b0c      	ldr	r3, [pc, #48]	@ (8001520 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x50>)
 80014ee:	480d      	ldr	r0, [pc, #52]	@ (8001524 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x54>)
 80014f0:	f030 ffca 	bl	8032488 <__assert_func>
        reader->seek(offset);
 80014f4:	6803      	ldr	r3, [r0, #0]
 80014f6:	68db      	ldr	r3, [r3, #12]
 80014f8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
 80014fa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80014fc:	4632      	mov	r2, r6
 80014fe:	6803      	ldr	r3, [r0, #0]
 8001500:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001502:	691b      	ldr	r3, [r3, #16]
 8001504:	4798      	blx	r3
 8001506:	b910      	cbnz	r0, 800150e <_ZN20HardwareMJPEGDecoder8readDataEmm+0x3e>
            lastError = AVI_ERROR_EOF_REACHED;
 8001508:	230d      	movs	r3, #13
 800150a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
 800150e:	6b60      	ldr	r0, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
 8001510:	63e5      	str	r5, [r4, #60]	@ 0x3c
}
 8001512:	bd70      	pop	{r4, r5, r6, pc}
    return movieData + offset;
 8001514:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8001516:	4408      	add	r0, r1
 8001518:	e7fb      	b.n	8001512 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x42>
 800151a:	bf00      	nop
 800151c:	080339d7 	.word	0x080339d7
 8001520:	080339c4 	.word	0x080339c4
 8001524:	0803395b 	.word	0x0803395b

08001528 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
{
 8001528:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 800152c:	6943      	ldr	r3, [r0, #20]
{
 800152e:	4604      	mov	r4, r0
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001530:	b92b      	cbnz	r3, 800153e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x16>
 8001532:	21f6      	movs	r1, #246	@ 0xf6
 8001534:	4b21      	ldr	r3, [pc, #132]	@ (80015bc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x94>)
 8001536:	4a22      	ldr	r2, [pc, #136]	@ (80015c0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x98>)
 8001538:	4822      	ldr	r0, [pc, #136]	@ (80015c4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x9c>)
 800153a:	f030 ffa5 	bl	8032488 <__assert_func>
    readData(currentMovieOffset, 8);
 800153e:	2208      	movs	r2, #8
 8001540:	6981      	ldr	r1, [r0, #24]
 8001542:	f7ff ffc5 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001546:	69a1      	ldr	r1, [r4, #24]
 8001548:	4620      	mov	r0, r4
 800154a:	3104      	adds	r1, #4
 800154c:	f7ff ff92 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        if (streamNo == STREAM0 && chunkType == TYPEDC)
 8001550:	f243 0630 	movw	r6, #12336	@ 0x3030
 8001554:	f246 3764 	movw	r7, #25444	@ 0x6364
    while (currentMovieOffset + 8 + chunkSize < movieLength)
 8001558:	69a3      	ldr	r3, [r4, #24]
 800155a:	4418      	add	r0, r3
 800155c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800155e:	f100 0208 	add.w	r2, r0, #8
 8001562:	429a      	cmp	r2, r3
 8001564:	d306      	bcc.n	8001574 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x4c>
    frameNumber = 1;
 8001566:	2301      	movs	r3, #1
    return false;
 8001568:	2000      	movs	r0, #0
    frameNumber = 1;
 800156a:	6163      	str	r3, [r4, #20]
    currentMovieOffset = firstFrameOffset; /* start over */
 800156c:	6a23      	ldr	r3, [r4, #32]
 800156e:	61a3      	str	r3, [r4, #24]
}
 8001570:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        frameNumber++;
 8001574:	6963      	ldr	r3, [r4, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001576:	f100 0109 	add.w	r1, r0, #9
        frameNumber++;
 800157a:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 800157c:	f021 0101 	bic.w	r1, r1, #1
        readData(currentMovieOffset, 8);
 8001580:	2208      	movs	r2, #8
        frameNumber++;
 8001582:	6163      	str	r3, [r4, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001584:	61a1      	str	r1, [r4, #24]
        readData(currentMovieOffset, 8);
 8001586:	4620      	mov	r0, r4
 8001588:	f7ff ffa2 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
        uint32_t streamNo  = getU16(currentMovieOffset);
 800158c:	f8d4 9018 	ldr.w	r9, [r4, #24]
 8001590:	4620      	mov	r0, r4
 8001592:	4649      	mov	r1, r9
 8001594:	f7ff ff89 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001598:	f109 0102 	add.w	r1, r9, #2
        uint32_t streamNo  = getU16(currentMovieOffset);
 800159c:	4680      	mov	r8, r0
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 800159e:	4620      	mov	r0, r4
 80015a0:	f7ff ff83 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
        chunkSize = getU32(currentMovieOffset + 4);
 80015a4:	f109 0104 	add.w	r1, r9, #4
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 80015a8:	4605      	mov	r5, r0
        chunkSize = getU32(currentMovieOffset + 4);
 80015aa:	4620      	mov	r0, r4
 80015ac:	f7ff ff62 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        if (streamNo == STREAM0 && chunkType == TYPEDC)
 80015b0:	45b0      	cmp	r8, r6
 80015b2:	d1d1      	bne.n	8001558 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x30>
 80015b4:	42bd      	cmp	r5, r7
 80015b6:	d1cf      	bne.n	8001558 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x30>
            return true;
 80015b8:	2001      	movs	r0, #1
 80015ba:	e7d9      	b.n	8001570 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x48>
 80015bc:	08033a19 	.word	0x08033a19
 80015c0:	08033a62 	.word	0x08033a62
 80015c4:	0803395b 	.word	0x0803395b

080015c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
    if (frameNumber == 0)
 80015c8:	2901      	cmp	r1, #1
 80015ca:	bf38      	it	cc
 80015cc:	2101      	movcc	r1, #1
    if (frameNumber > getNumberOfFrames())
 80015ce:	6803      	ldr	r3, [r0, #0]
{
 80015d0:	b570      	push	{r4, r5, r6, lr}
    if (frameNumber > getNumberOfFrames())
 80015d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80015d4:	460d      	mov	r5, r1
{
 80015d6:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
 80015d8:	4798      	blx	r3
 80015da:	42a8      	cmp	r0, r5
 80015dc:	d204      	bcs.n	80015e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x20>
        frameNumber = getNumberOfFrames();
 80015de:	6823      	ldr	r3, [r4, #0]
 80015e0:	4620      	mov	r0, r4
 80015e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80015e4:	4798      	blx	r3
 80015e6:	4605      	mov	r5, r0
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
 80015e8:	69e6      	ldr	r6, [r4, #28]
 80015ea:	1e6b      	subs	r3, r5, #1
 80015ec:	eb06 1603 	add.w	r6, r6, r3, lsl #4
    readData(offset, 16);
 80015f0:	2210      	movs	r2, #16
 80015f2:	f106 0108 	add.w	r1, r6, #8
 80015f6:	4620      	mov	r0, r4
 80015f8:	f7ff ff6a 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
 80015fc:	4620      	mov	r0, r4
 80015fe:	f106 0110 	add.w	r1, r6, #16
 8001602:	f7ff ff37 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001606:	6a23      	ldr	r3, [r4, #32]
 8001608:	3b04      	subs	r3, #4
 800160a:	4403      	add	r3, r0
    this->frameNumber = frameNumber;
 800160c:	e9c4 5305 	strd	r5, r3, [r4, #20]
}
 8001610:	bd70      	pop	{r4, r5, r6, pc}
	...

08001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
    currentMovieOffset = 0;
 8001614:	2100      	movs	r1, #0
{
 8001616:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800161a:	4604      	mov	r4, r0
    readData(0, 72);
 800161c:	2248      	movs	r2, #72	@ 0x48
    currentMovieOffset = 0;
 800161e:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
 8001620:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    readData(0, 72);
 8001624:	f7ff ff54 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    if (compare(currentMovieOffset, "RIFF", 4))
 8001628:	69a6      	ldr	r6, [r4, #24]
 800162a:	2304      	movs	r3, #4
 800162c:	4631      	mov	r1, r6
 800162e:	4620      	mov	r0, r4
 8001630:	4a62      	ldr	r2, [pc, #392]	@ (80017bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a8>)
 8001632:	f7ff ff0f 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 8001636:	b148      	cbz	r0, 800164c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
        lastError = AVI_ERROR_NOT_RIFF;
 8001638:	2303      	movs	r3, #3
        assert(!"RIFF header not found");
 800163a:	f44f 719f 	mov.w	r1, #318	@ 0x13e
        lastError = AVI_ERROR_NOT_RIFF;
 800163e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"RIFF header not found");
 8001642:	4a5f      	ldr	r2, [pc, #380]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 8001644:	4b5f      	ldr	r3, [pc, #380]	@ (80017c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b0>)
        assert(!"AVI header not found");
 8001646:	4860      	ldr	r0, [pc, #384]	@ (80017c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>)
 8001648:	f030 ff1e 	bl	8032488 <__assert_func>
    currentMovieOffset += 8;
 800164c:	f106 0108 	add.w	r1, r6, #8
    if (compare(currentMovieOffset, "AVI ", 4))
 8001650:	2304      	movs	r3, #4
 8001652:	4620      	mov	r0, r4
 8001654:	4a5d      	ldr	r2, [pc, #372]	@ (80017cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>)
    currentMovieOffset += 8;
 8001656:	61a1      	str	r1, [r4, #24]
    if (compare(currentMovieOffset, "AVI ", 4))
 8001658:	f7ff fefc 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 800165c:	b138      	cbz	r0, 800166e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x5a>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
 800165e:	2304      	movs	r3, #4
        assert(!"AVI header not found");
 8001660:	f44f 71a3 	mov.w	r1, #326	@ 0x146
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
 8001664:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"AVI header not found");
 8001668:	4a55      	ldr	r2, [pc, #340]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 800166a:	4b59      	ldr	r3, [pc, #356]	@ (80017d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1bc>)
 800166c:	e7eb      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    currentMovieOffset += 4;
 800166e:	f106 010c 	add.w	r1, r6, #12
    if (compare(currentMovieOffset, "LIST", 4))
 8001672:	2304      	movs	r3, #4
 8001674:	4620      	mov	r0, r4
 8001676:	4a57      	ldr	r2, [pc, #348]	@ (80017d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c0>)
    currentMovieOffset += 4;
 8001678:	61a1      	str	r1, [r4, #24]
    if (compare(currentMovieOffset, "LIST", 4))
 800167a:	f7ff feeb 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 800167e:	4607      	mov	r7, r0
 8001680:	b138      	cbz	r0, 8001692 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x7e>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
 8001682:	2305      	movs	r3, #5
        assert(!"AVI LIST not found");
 8001684:	f240 114d 	movw	r1, #333	@ 0x14d
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
 8001688:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"AVI LIST not found");
 800168c:	4a4c      	ldr	r2, [pc, #304]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 800168e:	4b52      	ldr	r3, [pc, #328]	@ (80017d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>)
 8001690:	e7d9      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
 8001692:	4620      	mov	r0, r4
 8001694:	f106 0110 	add.w	r1, r6, #16
 8001698:	f7ff feec 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    assert(aviListSize);
 800169c:	4605      	mov	r5, r0
 800169e:	b920      	cbnz	r0, 80016aa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x96>
 80016a0:	f240 1153 	movw	r1, #339	@ 0x153
 80016a4:	4b4d      	ldr	r3, [pc, #308]	@ (80017dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c8>)
 80016a6:	4a46      	ldr	r2, [pc, #280]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 80016a8:	e7cd      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    uint32_t offset =  currentMovieOffset + 8;
 80016aa:	f106 0814 	add.w	r8, r6, #20
    if (compare(offset, "hdrl", 4))
 80016ae:	2304      	movs	r3, #4
 80016b0:	4641      	mov	r1, r8
 80016b2:	4620      	mov	r0, r4
 80016b4:	4a4a      	ldr	r2, [pc, #296]	@ (80017e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1cc>)
 80016b6:	f7ff fecd 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016ba:	2800      	cmp	r0, #0
 80016bc:	d049      	beq.n	8001752 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x13e>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
 80016be:	2306      	movs	r3, #6
 80016c0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    if (compare(offset, "avih", 4))
 80016c4:	2304      	movs	r3, #4
 80016c6:	4620      	mov	r0, r4
 80016c8:	4a46      	ldr	r2, [pc, #280]	@ (80017e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d0>)
 80016ca:	f106 0118 	add.w	r1, r6, #24
 80016ce:	f7ff fec1 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016d2:	2800      	cmp	r0, #0
 80016d4:	d03f      	beq.n	8001756 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x142>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
 80016d6:	2307      	movs	r3, #7
 80016d8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
 80016dc:	4445      	add	r5, r8
    readData(listOffset, 12);
 80016de:	220c      	movs	r2, #12
 80016e0:	4629      	mov	r1, r5
 80016e2:	4620      	mov	r0, r4
 80016e4:	f7ff fef4 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
 80016e8:	4f3f      	ldr	r7, [pc, #252]	@ (80017e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d4>)
 80016ea:	f105 0608 	add.w	r6, r5, #8
 80016ee:	2304      	movs	r3, #4
 80016f0:	463a      	mov	r2, r7
 80016f2:	4631      	mov	r1, r6
 80016f4:	4620      	mov	r0, r4
 80016f6:	f7ff fead 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016fa:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 80016fe:	2800      	cmp	r0, #0
 8001700:	d048      	beq.n	8001794 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x180>
 8001702:	2b00      	cmp	r3, #0
 8001704:	d148      	bne.n	8001798 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x184>
 8001706:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8001708:	42ab      	cmp	r3, r5
 800170a:	d849      	bhi.n	80017a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x18c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
 800170c:	f105 030c 	add.w	r3, r5, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001710:	3504      	adds	r5, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
 8001712:	61a3      	str	r3, [r4, #24]
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001714:	4629      	mov	r1, r5
 8001716:	4620      	mov	r0, r4
 8001718:	f7ff feac 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 800171c:	4430      	add	r0, r6
    const uint32_t listSize = getU32(listOffset + 4) + 8;
 800171e:	4629      	mov	r1, r5
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001720:	6260      	str	r0, [r4, #36]	@ 0x24
    const uint32_t listSize = getU32(listOffset + 4) + 8;
 8001722:	4620      	mov	r0, r4
 8001724:	f7ff fea6 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    listOffset += listSize;
 8001728:	4406      	add	r6, r0
    readData(listOffset, 4);
 800172a:	2204      	movs	r2, #4
 800172c:	4631      	mov	r1, r6
 800172e:	4620      	mov	r0, r4
 8001730:	f7ff fece 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    if (!compare(listOffset, "idx1", 4))
 8001734:	2304      	movs	r3, #4
 8001736:	4631      	mov	r1, r6
 8001738:	4620      	mov	r0, r4
 800173a:	4a2c      	ldr	r2, [pc, #176]	@ (80017ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d8>)
 800173c:	f7ff fe8a 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 8001740:	2800      	cmp	r0, #0
 8001742:	d138      	bne.n	80017b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a2>
    frameNumber = 1; /* next frame number is 1 */
 8001744:	2301      	movs	r3, #1
 8001746:	6163      	str	r3, [r4, #20]
    firstFrameOffset = currentMovieOffset;
 8001748:	69a3      	ldr	r3, [r4, #24]
        indexOffset = listOffset;
 800174a:	61e6      	str	r6, [r4, #28]
    firstFrameOffset = currentMovieOffset;
 800174c:	6223      	str	r3, [r4, #32]
}
 800174e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    bool foundFrame = true;
 8001752:	2701      	movs	r7, #1
 8001754:	e7b6      	b.n	80016c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xb0>
    if (foundFrame)
 8001756:	2f00      	cmp	r7, #0
 8001758:	d0c0      	beq.n	80016dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
        videoInfo.ms_between_frames = getU32(offset) / 1000;
 800175a:	f106 0120 	add.w	r1, r6, #32
 800175e:	4620      	mov	r0, r4
 8001760:	f7ff fe88 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001764:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001768:	fbb0 f0f3 	udiv	r0, r0, r3
        videoInfo.number_of_frames = getU32(offset + 16);
 800176c:	f106 0130 	add.w	r1, r6, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
 8001770:	6060      	str	r0, [r4, #4]
        videoInfo.number_of_frames = getU32(offset + 16);
 8001772:	4620      	mov	r0, r4
 8001774:	f7ff fe7e 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        videoInfo.frame_width = getU32(offset + 32);
 8001778:	f106 0140 	add.w	r1, r6, #64	@ 0x40
        videoInfo.number_of_frames = getU32(offset + 16);
 800177c:	60a0      	str	r0, [r4, #8]
        videoInfo.frame_width = getU32(offset + 32);
 800177e:	4620      	mov	r0, r4
 8001780:	f7ff fe78 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        videoInfo.frame_height = getU32(offset + 36);
 8001784:	f106 0144 	add.w	r1, r6, #68	@ 0x44
        videoInfo.frame_width = getU32(offset + 32);
 8001788:	60e0      	str	r0, [r4, #12]
        videoInfo.frame_height = getU32(offset + 36);
 800178a:	4620      	mov	r0, r4
 800178c:	f7ff fe72 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001790:	6120      	str	r0, [r4, #16]
 8001792:	e7a3      	b.n	80016dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    if (lastError != AVI_NO_ERROR)
 8001794:	2b00      	cmp	r3, #0
 8001796:	d0b9      	beq.n	800170c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xf8>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
 8001798:	230a      	movs	r3, #10
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
 800179a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return;
 800179e:	e7d6      	b.n	800174e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x13a>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
 80017a0:	1d29      	adds	r1, r5, #4
 80017a2:	4620      	mov	r0, r4
 80017a4:	f7ff fe66 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        listOffset += listSize;
 80017a8:	1985      	adds	r5, r0, r6
        readData(listOffset, 12);
 80017aa:	220c      	movs	r2, #12
 80017ac:	4629      	mov	r1, r5
 80017ae:	4620      	mov	r0, r4
 80017b0:	f7ff fe8e 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
 80017b4:	e799      	b.n	80016ea <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
 80017b6:	230b      	movs	r3, #11
 80017b8:	e7ef      	b.n	800179a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x186>
 80017ba:	bf00      	nop
 80017bc:	08033a95 	.word	0x08033a95
 80017c0:	08033ab3 	.word	0x08033ab3
 80017c4:	08033a9a 	.word	0x08033a9a
 80017c8:	0803395b 	.word	0x0803395b
 80017cc:	08033ae0 	.word	0x08033ae0
 80017d0:	08033ae5 	.word	0x08033ae5
 80017d4:	08033afd 	.word	0x08033afd
 80017d8:	08033b02 	.word	0x08033b02
 80017dc:	08033b18 	.word	0x08033b18
 80017e0:	08033b24 	.word	0x08033b24
 80017e4:	08033b29 	.word	0x08033b29
 80017e8:	08033b2e 	.word	0x08033b2e
 80017ec:	08033b33 	.word	0x08033b33

080017f0 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
    movieLength = length;
 80017f0:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
 80017f4:	2200      	movs	r2, #0
 80017f6:	6302      	str	r2, [r0, #48]	@ 0x30
    readVideoHeader();
 80017f8:	f7ff bf0c 	b.w	8001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

080017fc <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
 80017fc:	b510      	push	{r4, lr}
    movieData = 0;
 80017fe:	2300      	movs	r3, #0
{
 8001800:	4604      	mov	r4, r0
    movieData = 0;
 8001802:	62e3      	str	r3, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
 8001804:	680b      	ldr	r3, [r1, #0]
    this->reader = &reader;
 8001806:	6321      	str	r1, [r4, #48]	@ 0x30
{
 8001808:	4608      	mov	r0, r1
    movieLength = reader.getDataLength();
 800180a:	689b      	ldr	r3, [r3, #8]
 800180c:	4798      	blx	r3
 800180e:	62a0      	str	r0, [r4, #40]	@ 0x28
    readVideoHeader();
 8001810:	4620      	mov	r0, r4
}
 8001812:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
 8001816:	f7ff befd 	b.w	8001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
	...

0800181c <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
 800181c:	b573      	push	{r0, r1, r4, r5, r6, lr}
        FrameBufferAddress = output;
 800181e:	4c1d      	ldr	r4, [pc, #116]	@ (8001894 <JPEG_Decode_DMA+0x78>)
        JPEG_output_is_paused = 0;
        JPEG_OUT_Read_BufferIndex = 0;
        JPEG_OUT_Write_BufferIndex = 0;
 8001820:	4e1d      	ldr	r6, [pc, #116]	@ (8001898 <JPEG_Decode_DMA+0x7c>)
        FrameBufferAddress = output;
 8001822:	6023      	str	r3, [r4, #0]
        JPEG_output_is_paused = 0;
 8001824:	2400      	movs	r4, #0
 8001826:	4b1d      	ldr	r3, [pc, #116]	@ (800189c <JPEG_Decode_DMA+0x80>)
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 8001828:	4d1d      	ldr	r5, [pc, #116]	@ (80018a0 <JPEG_Decode_DMA+0x84>)
        JPEG_output_is_paused = 0;
 800182a:	601c      	str	r4, [r3, #0]
        JPEG_OUT_Read_BufferIndex = 0;
 800182c:	4b1d      	ldr	r3, [pc, #116]	@ (80018a4 <JPEG_Decode_DMA+0x88>)
 800182e:	601c      	str	r4, [r3, #0]
        JPEG_InputImageIndex = 0;
 8001830:	4b1d      	ldr	r3, [pc, #116]	@ (80018a8 <JPEG_Decode_DMA+0x8c>)
        JPEG_OUT_Write_BufferIndex = 0;
 8001832:	6034      	str	r4, [r6, #0]
        JPEG_InputImageIndex = 0;
 8001834:	601c      	str	r4, [r3, #0]
        JPEG_InputImageAddress = (uint32_t)input;
 8001836:	4b1d      	ldr	r3, [pc, #116]	@ (80018ac <JPEG_Decode_DMA+0x90>)
 8001838:	6019      	str	r1, [r3, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
 800183a:	4b1d      	ldr	r3, [pc, #116]	@ (80018b0 <JPEG_Decode_DMA+0x94>)
 800183c:	601a      	str	r2, [r3, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
 800183e:	2201      	movs	r2, #1
        MCU_BlockIndex = 0;
 8001840:	4b1c      	ldr	r3, [pc, #112]	@ (80018b4 <JPEG_Decode_DMA+0x98>)
 8001842:	601c      	str	r4, [r3, #0]
        line_count = 0;
 8001844:	4b1c      	ldr	r3, [pc, #112]	@ (80018b8 <JPEG_Decode_DMA+0x9c>)
 8001846:	601c      	str	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 8001848:	4b1c      	ldr	r3, [pc, #112]	@ (80018bc <JPEG_Decode_DMA+0xa0>)
        Jpeg_OUT_BufferTab[0].FirstJob = true;
 800184a:	765a      	strb	r2, [r3, #25]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 800184c:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
 800184e:	e9c3 4402 	strd	r4, r4, [r3, #8]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 8001852:	1b12      	subs	r2, r2, r4
 8001854:	bf18      	it	ne
 8001856:	2201      	movne	r2, #1
 8001858:	761a      	strb	r2, [r3, #24]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 800185a:	6832      	ldr	r2, [r6, #0]
 800185c:	261c      	movs	r6, #28
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
 800185e:	e9c3 4404 	strd	r4, r4, [r3, #16]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
 8001862:	e9c3 4409 	strd	r4, r4, [r3, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
 8001866:	e9c3 440b 	strd	r4, r4, [r3, #44]	@ 0x2c
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 800186a:	701c      	strb	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].LastJob = false;
 800186c:	769c      	strb	r4, [r3, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 800186e:	771c      	strb	r4, [r3, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
 8001870:	869c      	strh	r4, [r3, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
 8001872:	f883 4036 	strb.w	r4, [r3, #54]	@ 0x36
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 8001876:	fb06 3302 	mla	r3, r6, r2, r3
 800187a:	68ea      	ldr	r2, [r5, #12]
 800187c:	f44f 75c0 	mov.w	r5, #384	@ 0x180
 8001880:	436a      	muls	r2, r5
 8001882:	9200      	str	r2, [sp, #0]
 8001884:	685b      	ldr	r3, [r3, #4]
 8001886:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
 800188a:	f004 f853 	bl	8005934 <HAL_JPEG_Decode_DMA>

        return 0;
    }
 800188e:	4620      	mov	r0, r4
 8001890:	b002      	add	sp, #8
 8001892:	bd70      	pop	{r4, r5, r6, pc}
 8001894:	20009f34 	.word	0x20009f34
 8001898:	20009f14 	.word	0x20009f14
 800189c:	20009f20 	.word	0x20009f20
 80018a0:	200006bc 	.word	0x200006bc
 80018a4:	20000700 	.word	0x20000700
 80018a8:	20009f30 	.word	0x20009f30
 80018ac:	20009f28 	.word	0x20009f28
 80018b0:	20009f2c 	.word	0x20009f2c
 80018b4:	20000708 	.word	0x20000708
 80018b8:	20009f10 	.word	0x20009f10
 80018bc:	20000004 	.word	0x20000004

080018c0 <HAL_JPEG_InfoReadyCallback>:
     */
    void HAL_JPEG_InfoReadyCallback(JPEG_HandleTypeDef* hjpeg, JPEG_ConfTypeDef* pInfo)
    {
        uint32_t hMCU, vMCU;

        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
 80018c0:	684b      	ldr	r3, [r1, #4]
 80018c2:	2b01      	cmp	r3, #1
 80018c4:	d10e      	bne.n	80018e4 <HAL_JPEG_InfoReadyCallback+0x24>
        {
            if ((pInfo->ImageWidth % 16) != 0)
 80018c6:	68cb      	ldr	r3, [r1, #12]
 80018c8:	071a      	lsls	r2, r3, #28
            {
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
 80018ca:	bf1e      	ittt	ne
 80018cc:	f023 030f 	bicne.w	r3, r3, #15
 80018d0:	3310      	addne	r3, #16
 80018d2:	60cb      	strne	r3, [r1, #12]
            }

            if ((pInfo->ImageHeight % 16) != 0)
 80018d4:	688b      	ldr	r3, [r1, #8]
 80018d6:	0718      	lsls	r0, r3, #28
 80018d8:	d003      	beq.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
            {
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
 80018da:	f023 030f 	bic.w	r3, r3, #15
 80018de:	3310      	adds	r3, #16
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
                }

                if ((pInfo->ImageHeight % 8) != 0)
                {
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
 80018e0:	608b      	str	r3, [r1, #8]
                }
            }
        }
    }
 80018e2:	4770      	bx	lr
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
 80018e4:	2b02      	cmp	r3, #2
 80018e6:	d10d      	bne.n	8001904 <HAL_JPEG_InfoReadyCallback+0x44>
                if ((pInfo->ImageWidth % 16) != 0)
 80018e8:	68cb      	ldr	r3, [r1, #12]
 80018ea:	071a      	lsls	r2, r3, #28
 80018ec:	d003      	beq.n	80018f6 <HAL_JPEG_InfoReadyCallback+0x36>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
 80018ee:	f023 030f 	bic.w	r3, r3, #15
 80018f2:	3310      	adds	r3, #16
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
 80018f4:	60cb      	str	r3, [r1, #12]
                if ((pInfo->ImageHeight % 8) != 0)
 80018f6:	688b      	ldr	r3, [r1, #8]
 80018f8:	075a      	lsls	r2, r3, #29
 80018fa:	d0f2      	beq.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
 80018fc:	f023 0307 	bic.w	r3, r3, #7
 8001900:	3308      	adds	r3, #8
 8001902:	e7ed      	b.n	80018e0 <HAL_JPEG_InfoReadyCallback+0x20>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
 8001904:	2b00      	cmp	r3, #0
 8001906:	d1ec      	bne.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
                if ((pInfo->ImageWidth % 8) != 0)
 8001908:	68cb      	ldr	r3, [r1, #12]
 800190a:	0758      	lsls	r0, r3, #29
 800190c:	d0f3      	beq.n	80018f6 <HAL_JPEG_InfoReadyCallback+0x36>
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
 800190e:	f023 0307 	bic.w	r3, r3, #7
 8001912:	3308      	adds	r3, #8
 8001914:	e7ee      	b.n	80018f4 <HAL_JPEG_InfoReadyCallback+0x34>
	...

08001918 <HAL_JPEG_GetDataCallback>:
     * @retval None
     */
    void HAL_JPEG_GetDataCallback(JPEG_HandleTypeDef* hjpeg, uint32_t NbDecodedData)
    {
        /* Input buffer has been consumed by the peripheral and to ask for a new data chunk if the operation (encoding/decoding) has not been complete yet. */
        JPEG_InputImageIndex += NbDecodedData;
 8001918:	4a0b      	ldr	r2, [pc, #44]	@ (8001948 <HAL_JPEG_GetDataCallback+0x30>)
    {
 800191a:	b430      	push	{r4, r5}
        JPEG_InputImageIndex += NbDecodedData;
 800191c:	6813      	ldr	r3, [r2, #0]
 800191e:	440b      	add	r3, r1
 8001920:	6013      	str	r3, [r2, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
 8001922:	4a0a      	ldr	r2, [pc, #40]	@ (800194c <HAL_JPEG_GetDataCallback+0x34>)
 8001924:	6812      	ldr	r2, [r2, #0]
 8001926:	4293      	cmp	r3, r2
 8001928:	d20c      	bcs.n	8001944 <HAL_JPEG_GetDataCallback+0x2c>
        {
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 800192a:	4c09      	ldr	r4, [pc, #36]	@ (8001950 <HAL_JPEG_GetDataCallback+0x38>)
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
 800192c:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 800192e:	6825      	ldr	r5, [r4, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001930:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 8001934:	4429      	add	r1, r5
 8001936:	6021      	str	r1, [r4, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001938:	bf28      	it	cs
 800193a:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
        }
    }
 800193e:	bc30      	pop	{r4, r5}
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001940:	f004 b85f 	b.w	8005a02 <HAL_JPEG_ConfigInputBuffer>
    }
 8001944:	bc30      	pop	{r4, r5}
 8001946:	4770      	bx	lr
 8001948:	20009f30 	.word	0x20009f30
 800194c:	20009f2c 	.word	0x20009f2c
 8001950:	20009f28 	.word	0x20009f28

08001954 <HAL_JPEG_DataReadyCallback>:
     * @param pDataOut: pointer to the output data buffer
     * @param OutDataLength: length of output buffer in bytes
     * @retval None
     */
    void HAL_JPEG_DataReadyCallback(JPEG_HandleTypeDef* hjpeg, uint8_t* pDataOut, uint32_t OutDataLength)
    {
 8001954:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
        line_count += MCU_HEIGHT_PIXELS;
 8001958:	f8df 8130 	ldr.w	r8, [pc, #304]	@ 8001a8c <HAL_JPEG_DataReadyCallback+0x138>

        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800195c:	4c43      	ldr	r4, [pc, #268]	@ (8001a6c <HAL_JPEG_DataReadyCallback+0x118>)
        line_count += MCU_HEIGHT_PIXELS;
 800195e:	f8d8 3000 	ldr.w	r3, [r8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 8001962:	4d43      	ldr	r5, [pc, #268]	@ (8001a70 <HAL_JPEG_DataReadyCallback+0x11c>)
        line_count += MCU_HEIGHT_PIXELS;
 8001964:	3310      	adds	r3, #16
 8001966:	f8c8 3000 	str.w	r3, [r8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800196a:	231c      	movs	r3, #28
 800196c:	6821      	ldr	r1, [r4, #0]
 800196e:	f8df e120 	ldr.w	lr, [pc, #288]	@ 8001a90 <HAL_JPEG_DataReadyCallback+0x13c>
 8001972:	fb03 5101 	mla	r1, r3, r1, r5
 8001976:	f8de 9000 	ldr.w	r9, [lr]

        /* Increment framebuffer */
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 800197a:	4e3e      	ldr	r6, [pc, #248]	@ (8001a74 <HAL_JPEG_DataReadyCallback+0x120>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800197c:	f8c1 9014 	str.w	r9, [r1, #20]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001980:	493d      	ldr	r1, [pc, #244]	@ (8001a78 <HAL_JPEG_DataReadyCallback+0x124>)
    {
 8001982:	4694      	mov	ip, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001984:	6809      	ldr	r1, [r1, #0]
 8001986:	6932      	ldr	r2, [r6, #16]
    {
 8001988:	4607      	mov	r7, r0
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 800198a:	4351      	muls	r1, r2
 800198c:	eb09 1101 	add.w	r1, r9, r1, lsl #4

        /* Decode until we reach area to draw */
        if (line_count <= JPEG_ConvertorParams.startY)
 8001990:	f8d8 2000 	ldr.w	r2, [r8]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001994:	f8ce 1000 	str.w	r1, [lr]
        if (line_count <= JPEG_ConvertorParams.startY)
 8001998:	6971      	ldr	r1, [r6, #20]
 800199a:	4291      	cmp	r1, r2
 800199c:	d30b      	bcc.n	80019b6 <HAL_JPEG_DataReadyCallback+0x62>
        {
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 800199e:	6821      	ldr	r1, [r4, #0]
 80019a0:	68f2      	ldr	r2, [r6, #12]
 80019a2:	fb03 5301 	mla	r3, r3, r1, r5
 80019a6:	f44f 71c0 	mov.w	r1, #384	@ 0x180
 80019aa:	434a      	muls	r2, r1
 80019ac:	6859      	ldr	r1, [r3, #4]
        /* Signal Hardware Decoding to wake up */
        if (!DMA2D_reference->isDMARunning())
        {
            SEM_POST(semDecodingDone);
        }
    }
 80019ae:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 80019b2:	f004 b829 	b.w	8005a08 <HAL_JPEG_ConfigOutputBuffer>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019b6:	6822      	ldr	r2, [r4, #0]
 80019b8:	2001      	movs	r0, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
 80019ba:	6821      	ldr	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019bc:	435a      	muls	r2, r3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
 80019be:	fb03 5101 	mla	r1, r3, r1, r5
 80019c2:	f8c1 c008 	str.w	ip, [r1, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
 80019c6:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019c8:	54a8      	strb	r0, [r5, r2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
 80019ca:	6822      	ldr	r2, [r4, #0]
 80019cc:	fb03 5202 	mla	r2, r3, r2, r5
 80019d0:	6111      	str	r1, [r2, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
 80019d2:	6b32      	ldr	r2, [r6, #48]	@ 0x30
 80019d4:	b11a      	cbz	r2, 80019de <HAL_JPEG_DataReadyCallback+0x8a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
 80019d6:	6822      	ldr	r2, [r4, #0]
 80019d8:	fb03 5302 	mla	r3, r3, r2, r5
 80019dc:	7618      	strb	r0, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
 80019de:	f8d8 3000 	ldr.w	r3, [r8]
 80019e2:	69b2      	ldr	r2, [r6, #24]
 80019e4:	429a      	cmp	r2, r3
 80019e6:	d924      	bls.n	8001a32 <HAL_JPEG_DataReadyCallback+0xde>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
 80019e8:	221c      	movs	r2, #28
 80019ea:	6823      	ldr	r3, [r4, #0]
 80019ec:	fb02 5303 	mla	r3, r2, r3, r5
 80019f0:	2200      	movs	r2, #0
 80019f2:	769a      	strb	r2, [r3, #26]
            JPEG_OUT_Write_BufferIndex++;
 80019f4:	6823      	ldr	r3, [r4, #0]
 80019f6:	3301      	adds	r3, #1
 80019f8:	6023      	str	r3, [r4, #0]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 80019fa:	6823      	ldr	r3, [r4, #0]
 80019fc:	2b01      	cmp	r3, #1
                JPEG_OUT_Write_BufferIndex = 0;
 80019fe:	bf88      	it	hi
 8001a00:	6022      	strhi	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
 8001a02:	221c      	movs	r2, #28
 8001a04:	6823      	ldr	r3, [r4, #0]
 8001a06:	4353      	muls	r3, r2
 8001a08:	5ceb      	ldrb	r3, [r5, r3]
 8001a0a:	b133      	cbz	r3, 8001a1a <HAL_JPEG_DataReadyCallback+0xc6>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a0c:	2102      	movs	r1, #2
 8001a0e:	4638      	mov	r0, r7
 8001a10:	f003 ffc4 	bl	800599c <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
 8001a14:	2201      	movs	r2, #1
 8001a16:	4b19      	ldr	r3, [pc, #100]	@ (8001a7c <HAL_JPEG_DataReadyCallback+0x128>)
 8001a18:	601a      	str	r2, [r3, #0]
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 8001a1a:	211c      	movs	r1, #28
 8001a1c:	6823      	ldr	r3, [r4, #0]
 8001a1e:	68f2      	ldr	r2, [r6, #12]
 8001a20:	fb01 5303 	mla	r3, r1, r3, r5
 8001a24:	f44f 71c0 	mov.w	r1, #384	@ 0x180
 8001a28:	4638      	mov	r0, r7
 8001a2a:	434a      	muls	r2, r1
 8001a2c:	6859      	ldr	r1, [r3, #4]
 8001a2e:	f003 ffeb 	bl	8005a08 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
 8001a32:	f8d8 3000 	ldr.w	r3, [r8]
 8001a36:	69b2      	ldr	r2, [r6, #24]
 8001a38:	429a      	cmp	r2, r3
 8001a3a:	d80b      	bhi.n	8001a54 <HAL_JPEG_DataReadyCallback+0x100>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a3c:	221c      	movs	r2, #28
 8001a3e:	6823      	ldr	r3, [r4, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a40:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a42:	fb02 5503 	mla	r5, r2, r3, r5
 8001a46:	2301      	movs	r3, #1
            Jpeg_HWDecodingEnd = 1;
 8001a48:	4a0d      	ldr	r2, [pc, #52]	@ (8001a80 <HAL_JPEG_DataReadyCallback+0x12c>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a4a:	4638      	mov	r0, r7
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a4c:	76ab      	strb	r3, [r5, #26]
            Jpeg_HWDecodingEnd = 1;
 8001a4e:	6013      	str	r3, [r2, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a50:	f003 ffa4 	bl	800599c <HAL_JPEG_Pause>
     *
     * @return true if a DMA operation is currently in progress.
     */
    bool isDMARunning()
    {
        return isRunning;
 8001a54:	4b0b      	ldr	r3, [pc, #44]	@ (8001a84 <HAL_JPEG_DataReadyCallback+0x130>)
 8001a56:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
 8001a58:	7a1b      	ldrb	r3, [r3, #8]
 8001a5a:	b92b      	cbnz	r3, 8001a68 <HAL_JPEG_DataReadyCallback+0x114>
            SEM_POST(semDecodingDone);
 8001a5c:	4b0a      	ldr	r3, [pc, #40]	@ (8001a88 <HAL_JPEG_DataReadyCallback+0x134>)
 8001a5e:	6818      	ldr	r0, [r3, #0]
    }
 8001a60:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
            SEM_POST(semDecodingDone);
 8001a64:	f007 b898 	b.w	8008b98 <osSemaphoreRelease>
    }
 8001a68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001a6c:	20009f14 	.word	0x20009f14
 8001a70:	20000004 	.word	0x20000004
 8001a74:	200006bc 	.word	0x200006bc
 8001a78:	20009f0c 	.word	0x20009f0c
 8001a7c:	20009f20 	.word	0x20009f20
 8001a80:	20009f24 	.word	0x20009f24
 8001a84:	20009f18 	.word	0x20009f18
 8001a88:	20000704 	.word	0x20000704
 8001a8c:	20009f10 	.word	0x20009f10
 8001a90:	20009f34 	.word	0x20009f34

08001a94 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
 8001a94:	b672      	cpsid	i
     * @retval None
     */
    void HAL_JPEG_ErrorCallback(JPEG_HandleTypeDef* hjpeg)
    {
        __disable_irq();
        while (1)
 8001a96:	e7fe      	b.n	8001a96 <HAL_JPEG_ErrorCallback+0x2>

08001a98 <HAL_JPEG_DecodeCpltCallback>:
     * @param hjpeg: JPEG handle pointer
     * @retval None
     */
    void HAL_JPEG_DecodeCpltCallback(JPEG_HandleTypeDef* hjpeg)
    {
        Jpeg_HWDecodingEnd = 1;
 8001a98:	2201      	movs	r2, #1
 8001a9a:	4b01      	ldr	r3, [pc, #4]	@ (8001aa0 <HAL_JPEG_DecodeCpltCallback+0x8>)
 8001a9c:	601a      	str	r2, [r3, #0]
    }
 8001a9e:	4770      	bx	lr
 8001aa0:	20009f24 	.word	0x20009f24

08001aa4 <JPEG_OutputHandler>:
 * @brief  JPEG Ouput Data BackGround Postprocessing .
 * @param hjpeg: JPEG handle pointer
 * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
 */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
 8001aa4:	b538      	push	{r3, r4, r5, lr}
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
 8001aa6:	4d1c      	ldr	r5, [pc, #112]	@ (8001b18 <JPEG_OutputHandler+0x74>)
{
 8001aa8:	4604      	mov	r4, r0
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
 8001aaa:	682b      	ldr	r3, [r5, #0]
 8001aac:	b15b      	cbz	r3, 8001ac6 <JPEG_OutputHandler+0x22>
 8001aae:	4b1b      	ldr	r3, [pc, #108]	@ (8001b1c <JPEG_OutputHandler+0x78>)
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	b143      	cbz	r3, 8001ac6 <JPEG_OutputHandler+0x22>
    {
        /* Abort any ongoing operations */
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
 8001ab4:	f004 fb8a 	bl	80061cc <HAL_JPEG_GetState>
 8001ab8:	2804      	cmp	r0, #4
 8001aba:	d102      	bne.n	8001ac2 <JPEG_OutputHandler+0x1e>
        {
            HAL_JPEG_Abort(hjpeg);
 8001abc:	4620      	mov	r0, r4
 8001abe:	f003 ffa6 	bl	8005a0e <HAL_JPEG_Abort>
        }
        return 1;
 8001ac2:	2001      	movs	r0, #1
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
}
 8001ac4:	bd38      	pop	{r3, r4, r5, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
 8001ac6:	4b16      	ldr	r3, [pc, #88]	@ (8001b20 <JPEG_OutputHandler+0x7c>)
 8001ac8:	6818      	ldr	r0, [r3, #0]
 8001aca:	7a03      	ldrb	r3, [r0, #8]
 8001acc:	b96b      	cbnz	r3, 8001aea <JPEG_OutputHandler+0x46>
 8001ace:	221c      	movs	r2, #28
 8001ad0:	4b14      	ldr	r3, [pc, #80]	@ (8001b24 <JPEG_OutputHandler+0x80>)
 8001ad2:	681b      	ldr	r3, [r3, #0]
 8001ad4:	4353      	muls	r3, r2
 8001ad6:	4a14      	ldr	r2, [pc, #80]	@ (8001b28 <JPEG_OutputHandler+0x84>)
 8001ad8:	5cd3      	ldrb	r3, [r2, r3]
 8001ada:	2b01      	cmp	r3, #1
 8001adc:	d105      	bne.n	8001aea <JPEG_OutputHandler+0x46>
 8001ade:	4b0f      	ldr	r3, [pc, #60]	@ (8001b1c <JPEG_OutputHandler+0x78>)
 8001ae0:	681b      	ldr	r3, [r3, #0]
 8001ae2:	b913      	cbnz	r3, 8001aea <JPEG_OutputHandler+0x46>
        DMA2D_reference->start();
 8001ae4:	6803      	ldr	r3, [r0, #0]
 8001ae6:	691b      	ldr	r3, [r3, #16]
 8001ae8:	4798      	blx	r3
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
 8001aea:	4a10      	ldr	r2, [pc, #64]	@ (8001b2c <JPEG_OutputHandler+0x88>)
 8001aec:	6813      	ldr	r3, [r2, #0]
 8001aee:	2b01      	cmp	r3, #1
 8001af0:	d106      	bne.n	8001b00 <JPEG_OutputHandler+0x5c>
 8001af2:	211c      	movs	r1, #28
 8001af4:	4b0e      	ldr	r3, [pc, #56]	@ (8001b30 <JPEG_OutputHandler+0x8c>)
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	434b      	muls	r3, r1
 8001afa:	490b      	ldr	r1, [pc, #44]	@ (8001b28 <JPEG_OutputHandler+0x84>)
 8001afc:	5ccb      	ldrb	r3, [r1, r3]
 8001afe:	b10b      	cbz	r3, 8001b04 <JPEG_OutputHandler+0x60>
    return 2;
 8001b00:	2002      	movs	r0, #2
 8001b02:	e7df      	b.n	8001ac4 <JPEG_OutputHandler+0x20>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
 8001b04:	682b      	ldr	r3, [r5, #0]
 8001b06:	2b00      	cmp	r3, #0
 8001b08:	d1fa      	bne.n	8001b00 <JPEG_OutputHandler+0x5c>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001b0a:	2102      	movs	r1, #2
 8001b0c:	4620      	mov	r0, r4
        JPEG_output_is_paused = 0;
 8001b0e:	6013      	str	r3, [r2, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001b10:	f004 fa08 	bl	8005f24 <HAL_JPEG_Resume>
 8001b14:	e7f4      	b.n	8001b00 <JPEG_OutputHandler+0x5c>
 8001b16:	bf00      	nop
 8001b18:	20009f24 	.word	0x20009f24
 8001b1c:	200006fc 	.word	0x200006fc
 8001b20:	20009f18 	.word	0x20009f18
 8001b24:	20000700 	.word	0x20000700
 8001b28:	20000004 	.word	0x20000004
 8001b2c:	20009f20 	.word	0x20009f20
 8001b30:	20009f14 	.word	0x20009f14

08001b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm>:
{
 8001b34:	b570      	push	{r4, r5, r6, lr}
 8001b36:	4605      	mov	r5, r0
    if (length == 0)
 8001b38:	2a00      	cmp	r2, #0
 8001b3a:	d034      	beq.n	8001ba6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x72>
    if (outputBuffer) /* only decode if buffers are assigned. */
 8001b3c:	2b00      	cmp	r3, #0
 8001b3e:	d032      	beq.n	8001ba6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x72>
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001b40:	2402      	movs	r4, #2
 8001b42:	4819      	ldr	r0, [pc, #100]	@ (8001ba8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x74>)
 8001b44:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001b46:	68ec      	ldr	r4, [r5, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
 8001b48:	0726      	lsls	r6, r4, #28
        JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001b4a:	f44f 66c8 	mov.w	r6, #1600	@ 0x640
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
 8001b4e:	bf1c      	itt	ne
 8001b50:	f024 040f 	bicne.w	r4, r4, #15
 8001b54:	3410      	addne	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001b56:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
 8001b58:	0924      	lsrs	r4, r4, #4
 8001b5a:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
 8001b5c:	692c      	ldr	r4, [r5, #16]
        JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001b5e:	6046      	str	r6, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
 8001b60:	f014 040f 	ands.w	r4, r4, #15
 8001b64:	bf18      	it	ne
 8001b66:	f1c4 0410 	rsbne	r4, r4, #16
 8001b6a:	6084      	str	r4, [r0, #8]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
 8001b6c:	480f      	ldr	r0, [pc, #60]	@ (8001bac <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x78>)
 8001b6e:	f7ff fe55 	bl	800181c <JPEG_Decode_DMA>
        DMA2D_reference = dma;
 8001b72:	6c6a      	ldr	r2, [r5, #68]	@ 0x44
 8001b74:	4b0e      	ldr	r3, [pc, #56]	@ (8001bb0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x7c>)
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001b76:	4d0d      	ldr	r5, [pc, #52]	@ (8001bac <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x78>)
 8001b78:	4c0e      	ldr	r4, [pc, #56]	@ (8001bb4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x80>)
        DMA2D_reference = dma;
 8001b7a:	601a      	str	r2, [r3, #0]
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001b7c:	4628      	mov	r0, r5
 8001b7e:	f7ff ff91 	bl	8001aa4 <JPEG_OutputHandler>
 8001b82:	6020      	str	r0, [r4, #0]
            if (JpegProcessing_End == 2)
 8001b84:	6823      	ldr	r3, [r4, #0]
 8001b86:	2b02      	cmp	r3, #2
 8001b88:	d105      	bne.n	8001b96 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x62>
                SEM_WAIT(semDecodingDone);
 8001b8a:	4b0b      	ldr	r3, [pc, #44]	@ (8001bb8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x84>)
 8001b8c:	f04f 31ff 	mov.w	r1, #4294967295
 8001b90:	6818      	ldr	r0, [r3, #0]
 8001b92:	f006 ffd3 	bl	8008b3c <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
 8001b96:	6823      	ldr	r3, [r4, #0]
 8001b98:	2b01      	cmp	r3, #1
 8001b9a:	d1ef      	bne.n	8001b7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x48>
        Jpeg_HWDecodingEnd = 0;
 8001b9c:	2300      	movs	r3, #0
 8001b9e:	4a07      	ldr	r2, [pc, #28]	@ (8001bbc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x88>)
 8001ba0:	6013      	str	r3, [r2, #0]
        DMA2D_CopyBufferEnd = 0;
 8001ba2:	4a07      	ldr	r2, [pc, #28]	@ (8001bc0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x8c>)
 8001ba4:	6013      	str	r3, [r2, #0]
}
 8001ba6:	bd70      	pop	{r4, r5, r6, pc}
 8001ba8:	200006bc 	.word	0x200006bc
 8001bac:	20000464 	.word	0x20000464
 8001bb0:	20009f18 	.word	0x20009f18
 8001bb4:	20009f1c 	.word	0x20009f1c
 8001bb8:	20000704 	.word	0x20000704
 8001bbc:	20009f24 	.word	0x20009f24
 8001bc0:	200006fc 	.word	0x200006fc

08001bc4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
{
 8001bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001bc8:	4699      	mov	r9, r3
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001bca:	6943      	ldr	r3, [r0, #20]
{
 8001bcc:	4604      	mov	r4, r0
 8001bce:	460f      	mov	r7, r1
 8001bd0:	4690      	mov	r8, r2
 8001bd2:	b085      	sub	sp, #20
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001bd4:	b92b      	cbnz	r3, 8001be2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x1e>
 8001bd6:	21c2      	movs	r1, #194	@ 0xc2
 8001bd8:	4b28      	ldr	r3, [pc, #160]	@ (8001c7c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb8>)
 8001bda:	4a29      	ldr	r2, [pc, #164]	@ (8001c80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xbc>)
 8001bdc:	4829      	ldr	r0, [pc, #164]	@ (8001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>)
 8001bde:	f030 fc53 	bl	8032488 <__assert_func>
    readData(currentMovieOffset, 8);
 8001be2:	2208      	movs	r2, #8
 8001be4:	6981      	ldr	r1, [r0, #24]
 8001be6:	f7ff fc73 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    uint32_t streamNo  = getU16(currentMovieOffset);
 8001bea:	69a6      	ldr	r6, [r4, #24]
 8001bec:	4620      	mov	r0, r4
 8001bee:	4631      	mov	r1, r6
 8001bf0:	f7ff fc5b 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001bf4:	1cb1      	adds	r1, r6, #2
    uint32_t streamNo  = getU16(currentMovieOffset);
 8001bf6:	4683      	mov	fp, r0
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001bf8:	4620      	mov	r0, r4
 8001bfa:	f7ff fc56 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001bfe:	1d31      	adds	r1, r6, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001c00:	4682      	mov	sl, r0
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001c02:	4620      	mov	r0, r4
 8001c04:	f7ff fc36 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    if (currentMovieOffset + 8 + chunkSize < movieLength)
 8001c08:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8001c0a:	f106 0108 	add.w	r1, r6, #8
 8001c0e:	1842      	adds	r2, r0, r1
 8001c10:	429a      	cmp	r2, r3
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001c12:	4605      	mov	r5, r0
    if (currentMovieOffset + 8 + chunkSize < movieLength)
 8001c14:	d226      	bcs.n	8001c64 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xa0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
 8001c16:	f243 0330 	movw	r3, #12336	@ 0x3030
 8001c1a:	459b      	cmp	fp, r3
 8001c1c:	d117      	bne.n	8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
 8001c1e:	f246 3364 	movw	r3, #25444	@ 0x6364
 8001c22:	459a      	cmp	sl, r3
 8001c24:	d113      	bne.n	8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
 8001c26:	b190      	cbz	r0, 8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c28:	4602      	mov	r2, r0
            currentMovieOffset += 8;
 8001c2a:	61a1      	str	r1, [r4, #24]
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c2c:	4620      	mov	r0, r4
 8001c2e:	f7ff fc4f 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
            decodeMJPEGFrame(chunk, chunkSize, buffer, buffer_width, buffer_height, buffer_stride);
 8001c32:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c34:	4601      	mov	r1, r0
            decodeMJPEGFrame(chunk, chunkSize, buffer, buffer_width, buffer_height, buffer_stride);
 8001c36:	e9cd 9301 	strd	r9, r3, [sp, #4]
 8001c3a:	462a      	mov	r2, r5
 8001c3c:	463b      	mov	r3, r7
 8001c3e:	4620      	mov	r0, r4
 8001c40:	f8cd 8000 	str.w	r8, [sp]
 8001c44:	f7ff ff76 	bl	8001b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm>
            frameNumber++;
 8001c48:	6963      	ldr	r3, [r4, #20]
 8001c4a:	3301      	adds	r3, #1
 8001c4c:	6163      	str	r3, [r4, #20]
        currentMovieOffset += chunkSize;
 8001c4e:	69a3      	ldr	r3, [r4, #24]
 8001c50:	442b      	add	r3, r5
        if (chunkSize == 0) /* Empty frame - Skip */
 8001c52:	b905      	cbnz	r5, 8001c56 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x92>
            currentMovieOffset += 8;
 8001c54:	3308      	adds	r3, #8
        if (currentMovieOffset == lastFrameEnd)
 8001c56:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001c58:	3301      	adds	r3, #1
 8001c5a:	f023 0301 	bic.w	r3, r3, #1
        if (currentMovieOffset == lastFrameEnd)
 8001c5e:	4293      	cmp	r3, r2
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001c60:	61a3      	str	r3, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
 8001c62:	d109      	bne.n	8001c78 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb4>
        frameNumber = 1;
 8001c64:	2301      	movs	r3, #1
            isCurrentFrameLast = true;
 8001c66:	2001      	movs	r0, #1
        frameNumber = 1;
 8001c68:	6163      	str	r3, [r4, #20]
        currentMovieOffset = firstFrameOffset; /* start over */
 8001c6a:	6a23      	ldr	r3, [r4, #32]
 8001c6c:	61a3      	str	r3, [r4, #24]
}
 8001c6e:	f080 0001 	eor.w	r0, r0, #1
 8001c72:	b005      	add	sp, #20
 8001c74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        isCurrentFrameLast = false;
 8001c78:	2000      	movs	r0, #0
 8001c7a:	e7f8      	b.n	8001c6e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xaa>
 8001c7c:	08033a19 	.word	0x08033a19
 8001c80:	08033b38 	.word	0x08033b38
 8001c84:	0803395b 	.word	0x0803395b

08001c88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
 8001c88:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001c8c:	4607      	mov	r7, r0
 8001c8e:	468b      	mov	fp, r1
 8001c90:	4691      	mov	r9, r2
    readData(currentMovieOffset, 8);
 8001c92:	6981      	ldr	r1, [r0, #24]
 8001c94:	2208      	movs	r2, #8
{
 8001c96:	4698      	mov	r8, r3
    readData(currentMovieOffset, 8);
 8001c98:	f7ff fc1a 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    const uint32_t length = getU32(currentMovieOffset + 4);
 8001c9c:	69bc      	ldr	r4, [r7, #24]
 8001c9e:	4638      	mov	r0, r7
 8001ca0:	1d21      	adds	r1, r4, #4
 8001ca2:	f7ff fbe7 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001ca6:	f104 0108 	add.w	r1, r4, #8
 8001caa:	4602      	mov	r2, r0
    const uint32_t length = getU32(currentMovieOffset + 4);
 8001cac:	4682      	mov	sl, r0
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001cae:	4638      	mov	r0, r7
 8001cb0:	f7ff fc0e 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001cb4:	2302      	movs	r3, #2
 8001cb6:	4c34      	ldr	r4, [pc, #208]	@ (8001d88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x100>)
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001cb8:	68fa      	ldr	r2, [r7, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001cba:	6123      	str	r3, [r4, #16]
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001cbc:	4601      	mov	r1, r0
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
 8001cbe:	0713      	lsls	r3, r2, #28
    JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001cc0:	f44f 60c8 	mov.w	r0, #1600	@ 0x640
 8001cc4:	bf0e      	itee	eq
 8001cc6:	4613      	moveq	r3, r2
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
 8001cc8:	f022 030f 	bicne.w	r3, r2, #15
 8001ccc:	3310      	addne	r3, #16
    JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001cce:	6060      	str	r0, [r4, #4]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
 8001cd0:	f8bb 5006 	ldrh.w	r5, [fp, #6]
    JPEG_ConvertorParams.startY = area.y;
 8001cd4:	f9bb 0002 	ldrsh.w	r0, [fp, #2]
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001cd8:	6023      	str	r3, [r4, #0]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
 8001cda:	091b      	lsrs	r3, r3, #4
 8001cdc:	60e3      	str	r3, [r4, #12]
 8001cde:	4405      	add	r5, r0
 8001ce0:	693b      	ldr	r3, [r7, #16]
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
 8001ce2:	b22d      	sxth	r5, r5
 8001ce4:	429d      	cmp	r5, r3
 8001ce6:	bf28      	it	cs
 8001ce8:	461d      	movcs	r5, r3
    JPEG_ConvertorParams.startX = area.x;
 8001cea:	f9bb 3000 	ldrsh.w	r3, [fp]
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
 8001cee:	61a5      	str	r5, [r4, #24]
 8001cf0:	462e      	mov	r6, r5
        return x + width;
 8001cf2:	f8bb 5004 	ldrh.w	r5, [fp, #4]
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
 8001cf6:	ea4f 1c13 	mov.w	ip, r3, lsr #4
 8001cfa:	441d      	add	r5, r3
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
 8001cfc:	b22d      	sxth	r5, r5
 8001cfe:	4295      	cmp	r5, r2
 8001d00:	bf28      	it	cs
 8001d02:	4615      	movcs	r5, r2
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d04:	f105 020f 	add.w	r2, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
 8001d08:	6225      	str	r5, [r4, #32]
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d0a:	0912      	lsrs	r2, r2, #4
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d0c:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.startY = area.y;
 8001d10:	6160      	str	r0, [r4, #20]
    JPEG_ConvertorParams.startX = area.x;
 8001d12:	61e3      	str	r3, [r4, #28]
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d14:	62a2      	str	r2, [r4, #40]	@ 0x28
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d16:	bf18      	it	ne
 8001d18:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
 8001d1c:	eba2 020c 	sub.w	r2, r2, ip
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d20:	f016 060f 	ands.w	r6, r6, #15
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
 8001d24:	f003 030f 	and.w	r3, r3, #15
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
 8001d28:	f000 000f 	and.w	r0, r0, #15
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
 8001d2c:	62e2      	str	r2, [r4, #44]	@ 0x2c
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
 8001d2e:	6323      	str	r3, [r4, #48]	@ 0x30
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
 8001d30:	6360      	str	r0, [r4, #52]	@ 0x34
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d32:	464b      	mov	r3, r9
 8001d34:	4652      	mov	r2, sl
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d36:	bf18      	it	ne
 8001d38:	f1c6 0610 	rsbne	r6, r6, #16
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d3c:	4813      	ldr	r0, [pc, #76]	@ (8001d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x104>)
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d3e:	63a5      	str	r5, [r4, #56]	@ 0x38
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
 8001d40:	f8c4 c024 	str.w	ip, [r4, #36]	@ 0x24
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d44:	63e6      	str	r6, [r4, #60]	@ 0x3c
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d46:	f7ff fd69 	bl	800181c <JPEG_Decode_DMA>
    DMA2D_reference = dma;
 8001d4a:	4b11      	ldr	r3, [pc, #68]	@ (8001d90 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x108>)
 8001d4c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d4e:	4d0f      	ldr	r5, [pc, #60]	@ (8001d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x104>)
    DMA2D_reference = dma;
 8001d50:	601a      	str	r2, [r3, #0]
    FrameBufferWidth = framebuffer_width;
 8001d52:	4b10      	ldr	r3, [pc, #64]	@ (8001d94 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>)
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d54:	4c10      	ldr	r4, [pc, #64]	@ (8001d98 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x110>)
    FrameBufferWidth = framebuffer_width;
 8001d56:	f8c3 8000 	str.w	r8, [r3]
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d5a:	4628      	mov	r0, r5
 8001d5c:	f7ff fea2 	bl	8001aa4 <JPEG_OutputHandler>
 8001d60:	6020      	str	r0, [r4, #0]
        if (JpegProcessing_End == 2)
 8001d62:	6823      	ldr	r3, [r4, #0]
 8001d64:	2b02      	cmp	r3, #2
 8001d66:	d105      	bne.n	8001d74 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xec>
            SEM_WAIT(semDecodingDone);
 8001d68:	4b0c      	ldr	r3, [pc, #48]	@ (8001d9c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x114>)
 8001d6a:	f04f 31ff 	mov.w	r1, #4294967295
 8001d6e:	6818      	ldr	r0, [r3, #0]
 8001d70:	f006 fee4 	bl	8008b3c <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
 8001d74:	6820      	ldr	r0, [r4, #0]
 8001d76:	2801      	cmp	r0, #1
 8001d78:	d1ef      	bne.n	8001d5a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xd2>
    Jpeg_HWDecodingEnd = 0;
 8001d7a:	2300      	movs	r3, #0
 8001d7c:	4a08      	ldr	r2, [pc, #32]	@ (8001da0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x118>)
 8001d7e:	6013      	str	r3, [r2, #0]
    DMA2D_CopyBufferEnd = 0;
 8001d80:	4a08      	ldr	r2, [pc, #32]	@ (8001da4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x11c>)
 8001d82:	6013      	str	r3, [r2, #0]
}
 8001d84:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001d88:	200006bc 	.word	0x200006bc
 8001d8c:	20000464 	.word	0x20000464
 8001d90:	20009f18 	.word	0x20009f18
 8001d94:	20009f0c 	.word	0x20009f0c
 8001d98:	20009f1c 	.word	0x20009f1c
 8001d9c:	20000704 	.word	0x20000704
 8001da0:	20009f24 	.word	0x20009f24
 8001da4:	200006fc 	.word	0x200006fc

08001da8 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
 8001da8:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001daa:	f44f 75c0 	mov.w	r5, #384	@ 0x180
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dae:	f8df c08c 	ldr.w	ip, [pc, #140]	@ 8001e3c <DMA2D_CopyBuffer+0x94>
 8001db2:	6902      	ldr	r2, [r0, #16]
 8001db4:	f8dc e02c 	ldr.w	lr, [ip, #44]	@ 0x2c
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001db8:	f8dc 1024 	ldr.w	r1, [ip, #36]	@ 0x24
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dbc:	ebae 0302 	sub.w	r3, lr, r2
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
 8001dc0:	f8c0 e010 	str.w	lr, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001dc4:	f04f 0e02 	mov.w	lr, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001dc8:	440a      	add	r2, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dca:	f8dc 1010 	ldr.w	r1, [ip, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001dce:	4355      	muls	r5, r2
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dd0:	434a      	muls	r2, r1
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dd2:	f8dc 4038 	ldr.w	r4, [ip, #56]	@ 0x38
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dd6:	0111      	lsls	r1, r2, #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001dd8:	4a15      	ldr	r2, [pc, #84]	@ (8001e30 <DMA2D_CopyBuffer+0x88>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dda:	011f      	lsls	r7, r3, #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001ddc:	f8c2 e034 	str.w	lr, [r2, #52]	@ 0x34
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001de0:	ebc4 1303 	rsb	r3, r4, r3, lsl #4

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
 8001de4:	f890 e01a 	ldrb.w	lr, [r0, #26]
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
 8001de8:	f013 060f 	ands.w	r6, r3, #15
 8001dec:	bf18      	it	ne
 8001dee:	f1c6 0610 	rsbne	r6, r6, #16
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
 8001df2:	041b      	lsls	r3, r3, #16
    if (job.LastJob)  /* Last line of frame */
 8001df4:	f1be 0f00 	cmp.w	lr, #0
 8001df8:	d016      	beq.n	8001e28 <DMA2D_CopyBuffer+0x80>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
 8001dfa:	f8dc c03c 	ldr.w	ip, [ip, #60]	@ 0x3c
 8001dfe:	f1cc 0c10 	rsb	ip, ip, #16
 8001e02:	ea4c 0303 	orr.w	r3, ip, r3
    }
    else
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
 8001e06:	6453      	str	r3, [r2, #68]	@ 0x44
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
 8001e08:	6943      	ldr	r3, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 800 - width);
 8001e0a:	f504 7448 	add.w	r4, r4, #800	@ 0x320
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
 8001e0e:	440b      	add	r3, r1
 8001e10:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, scaledWidth);

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001e12:	4b08      	ldr	r3, [pc, #32]	@ (8001e34 <DMA2D_CopyBuffer+0x8c>)
    WRITE_REG(DMA2D->OOR, 800 - width);
 8001e14:	1be4      	subs	r4, r4, r7
 8001e16:	6414      	str	r4, [r2, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, scaledWidth);
 8001e18:	6116      	str	r6, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001e1a:	61d3      	str	r3, [r2, #28]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
 8001e1c:	6843      	ldr	r3, [r0, #4]
 8001e1e:	442b      	add	r3, r5
 8001e20:	60d3      	str	r3, [r2, #12]

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001e22:	4b05      	ldr	r3, [pc, #20]	@ (8001e38 <DMA2D_CopyBuffer+0x90>)
 8001e24:	6013      	str	r3, [r2, #0]
}
 8001e26:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
 8001e28:	f043 0310 	orr.w	r3, r3, #16
 8001e2c:	e7eb      	b.n	8001e06 <DMA2D_CopyBuffer+0x5e>
 8001e2e:	bf00      	nop
 8001e30:	4002b000 	.word	0x4002b000
 8001e34:	ff09000b 	.word	0xff09000b
 8001e38:	00010201 	.word	0x00010201
 8001e3c:	200006bc 	.word	0x200006bc

08001e40 <DMA2D_CropBuffer>:
 * @brief  Configures external DMA2D job to copy and crop YCbCr data to an RGB cropping buffer
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
 8001e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001e44:	6905      	ldr	r5, [r0, #16]
{
 8001e46:	4604      	mov	r4, r0
 8001e48:	4937      	ldr	r1, [pc, #220]	@ (8001f28 <DMA2D_CropBuffer+0xe8>)
 8001e4a:	b08b      	sub	sp, #44	@ 0x2c
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001e4c:	2d00      	cmp	r5, #0
 8001e4e:	d166      	bne.n	8001f1e <DMA2D_CropBuffer+0xde>
 8001e50:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e52:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e54:	7e67      	ldrb	r7, [r4, #25]
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e56:	3b01      	subs	r3, #1
 8001e58:	429d      	cmp	r5, r3
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e5a:	f8d1 8034 	ldr.w	r8, [r1, #52]	@ 0x34
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001e5e:	7ea3      	ldrb	r3, [r4, #26]
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e60:	bf14      	ite	ne
 8001e62:	f04f 0e00 	movne.w	lr, #0
 8001e66:	f8d1 e038 	ldreq.w	lr, [r1, #56]	@ 0x38
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e6a:	2f00      	cmp	r7, #0
 8001e6c:	bf14      	ite	ne
 8001e6e:	4640      	movne	r0, r8
 8001e70:	2000      	moveq	r0, #0
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001e72:	2b00      	cmp	r3, #0
 8001e74:	d055      	beq.n	8001f22 <DMA2D_CropBuffer+0xe2>
 8001e76:	f8d1 c03c 	ldr.w	ip, [r1, #60]	@ 0x3c
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001e7a:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 8001e7c:	f44f 76c0 	mov.w	r6, #384	@ 0x180
 8001e80:	eb05 0a03 	add.w	sl, r5, r3
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e84:	2332      	movs	r3, #50	@ 0x32
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001e86:	f8d1 b010 	ldr.w	fp, [r1, #16]
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
                                   + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * MCU_HEIGHT_PIXELS;

    /* Update job and assert if more cropping is needed */
    job.MCU_drawn++;
 8001e8a:	3501      	adds	r5, #1
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e8c:	fb00 f90b 	mul.w	r9, r0, fp
 8001e90:	fb03 f309 	mul.w	r3, r3, r9
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
 8001e94:	fb02 f10b 	mul.w	r1, r2, fp
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e98:	fb0b 330a 	mla	r3, fp, sl, r3
    job.MCU_drawn++;
 8001e9c:	6125      	str	r5, [r4, #16]
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001e9e:	eb01 1303 	add.w	r3, r1, r3, lsl #4
 8001ea2:	2500      	movs	r5, #0
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001ea4:	fb06 f60a 	mul.w	r6, r6, sl
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
 8001ea8:	eb01 1109 	add.w	r1, r1, r9, lsl #4
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
 8001eac:	f1b8 0f00 	cmp.w	r8, #0
 8001eb0:	d000      	beq.n	8001eb4 <DMA2D_CropBuffer+0x74>
 8001eb2:	b907      	cbnz	r7, 8001eb6 <DMA2D_CropBuffer+0x76>
    {
        job.DoCropping = false;
 8001eb4:	7625      	strb	r5, [r4, #24]
    }

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
 8001eb6:	2701      	movs	r7, #1
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
 8001eb8:	f1c2 0210 	rsb	r2, r2, #16
 8001ebc:	eba2 020e 	sub.w	r2, r2, lr
 8001ec0:	f8ad 2018 	strh.w	r2, [sp, #24]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
 8001ec4:	4a19      	ldr	r2, [pc, #100]	@ (8001f2c <DMA2D_CropBuffer+0xec>)
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ec6:	f1c0 0010 	rsb	r0, r0, #16
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
 8001eca:	9207      	str	r2, [sp, #28]
    blitOp.dstLoopStride = 800;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001ecc:	6962      	ldr	r2, [r4, #20]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ece:	eba0 000c 	sub.w	r0, r0, ip
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001ed2:	441a      	add	r2, r3
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
 8001ed4:	4b16      	ldr	r3, [pc, #88]	@ (8001f30 <DMA2D_CropBuffer+0xf0>)
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ed6:	f8ad 001a 	strh.w	r0, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
 8001eda:	6818      	ldr	r0, [r3, #0]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
 8001edc:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
 8001ee0:	f88d 5022 	strb.w	r5, [sp, #34]	@ 0x22
    blitOp.operation = touchgfx::BLIT_OP_COPY;
 8001ee4:	9701      	str	r7, [sp, #4]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
 8001ee6:	4f13      	ldr	r7, [pc, #76]	@ (8001f34 <DMA2D_CropBuffer+0xf4>)
    DMA2D_reference->addToQueue(blitOp);
 8001ee8:	6803      	ldr	r3, [r0, #0]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
 8001eea:	4439      	add	r1, r7
 8001eec:	9102      	str	r1, [sp, #8]
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001eee:	9205      	str	r2, [sp, #20]
    DMA2D_reference->addToQueue(blitOp);
 8001ef0:	685b      	ldr	r3, [r3, #4]
        : color(0)
 8001ef2:	9504      	str	r5, [sp, #16]
 8001ef4:	a901      	add	r1, sp, #4
 8001ef6:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001ef8:	2202      	movs	r2, #2
 8001efa:	4b0f      	ldr	r3, [pc, #60]	@ (8001f38 <DMA2D_CropBuffer+0xf8>)
 8001efc:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
 8001efe:	f04f 1210 	mov.w	r2, #1048592	@ 0x100010
 8001f02:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, 0);

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001f04:	4a0d      	ldr	r2, [pc, #52]	@ (8001f3c <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
 8001f06:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
 8001f08:	641d      	str	r5, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
 8001f0a:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001f0c:	61da      	str	r2, [r3, #28]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
 8001f0e:	6862      	ldr	r2, [r4, #4]
 8001f10:	4432      	add	r2, r6
 8001f12:	60da      	str	r2, [r3, #12]

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001f14:	4a0a      	ldr	r2, [pc, #40]	@ (8001f40 <DMA2D_CropBuffer+0x100>)
 8001f16:	601a      	str	r2, [r3, #0]
}
 8001f18:	b00b      	add	sp, #44	@ 0x2c
 8001f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001f1e:	2200      	movs	r2, #0
 8001f20:	e797      	b.n	8001e52 <DMA2D_CropBuffer+0x12>
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001f22:	469c      	mov	ip, r3
 8001f24:	e7a9      	b.n	8001e7a <DMA2D_CropBuffer+0x3a>
 8001f26:	bf00      	nop
 8001f28:	200006bc 	.word	0x200006bc
 8001f2c:	03200010 	.word	0x03200010
 8001f30:	20009f18 	.word	0x20009f18
 8001f34:	2000070c 	.word	0x2000070c
 8001f38:	4002b000 	.word	0x4002b000
 8001f3c:	ff09000b 	.word	0xff09000b
 8001f40:	00010201 	.word	0x00010201

08001f44 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
 8001f44:	4b0d      	ldr	r3, [pc, #52]	@ (8001f7c <DMA2D_ExternalJobCompleted+0x38>)
 8001f46:	6902      	ldr	r2, [r0, #16]
 8001f48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001f4a:	429a      	cmp	r2, r3
 8001f4c:	d114      	bne.n	8001f78 <DMA2D_ExternalJobCompleted+0x34>
    {
        job.State = JPEG_BUFFER_EMPTY;
 8001f4e:	2200      	movs	r2, #0
        job.DataBufferSize = 0;
        job.DoCropping = false;
        job.FirstJob = false;

        JPEG_OUT_Read_BufferIndex++;
 8001f50:	4b0b      	ldr	r3, [pc, #44]	@ (8001f80 <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
 8001f52:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
 8001f54:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
 8001f56:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
 8001f58:	3101      	adds	r1, #1
 8001f5a:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 8001f5c:	6819      	ldr	r1, [r3, #0]
        job.DoCropping = false;
 8001f5e:	8302      	strh	r2, [r0, #24]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 8001f60:	2901      	cmp	r1, #1
        {
            JPEG_OUT_Read_BufferIndex = 0;
 8001f62:	bf88      	it	hi
 8001f64:	601a      	strhi	r2, [r3, #0]
        }

        /* Check if last line */
        if (job.LastJob)
 8001f66:	7e83      	ldrb	r3, [r0, #26]
 8001f68:	b113      	cbz	r3, 8001f70 <DMA2D_ExternalJobCompleted+0x2c>
        {
            DMA2D_CopyBufferEnd = 1;
 8001f6a:	2201      	movs	r2, #1
 8001f6c:	4b05      	ldr	r3, [pc, #20]	@ (8001f84 <DMA2D_ExternalJobCompleted+0x40>)
 8001f6e:	601a      	str	r2, [r3, #0]
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
 8001f70:	4b05      	ldr	r3, [pc, #20]	@ (8001f88 <DMA2D_ExternalJobCompleted+0x44>)
 8001f72:	6818      	ldr	r0, [r3, #0]
 8001f74:	f006 be10 	b.w	8008b98 <osSemaphoreRelease>
    }
}
 8001f78:	4770      	bx	lr
 8001f7a:	bf00      	nop
 8001f7c:	200006bc 	.word	0x200006bc
 8001f80:	20000700 	.word	0x20000700
 8001f84:	200006fc 	.word	0x200006fc
 8001f88:	20000704 	.word	0x20000704

08001f8c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001f8c:	2101      	movs	r1, #1
{
 8001f8e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001f90:	2200      	movs	r2, #0
 8001f92:	4608      	mov	r0, r1
 8001f94:	f006 fd83 	bl	8008a9e <osSemaphoreNew>
 8001f98:	4b0a      	ldr	r3, [pc, #40]	@ (8001fc4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001f9a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001f9c:	b928      	cbnz	r0, 8001faa <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001f9e:	2128      	movs	r1, #40	@ 0x28
 8001fa0:	4b09      	ldr	r3, [pc, #36]	@ (8001fc8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001fa2:	4a0a      	ldr	r2, [pc, #40]	@ (8001fcc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001fa4:	480a      	ldr	r0, [pc, #40]	@ (8001fd0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001fa6:	f030 fa6f 	bl	8032488 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001faa:	2200      	movs	r2, #0
 8001fac:	2104      	movs	r1, #4
 8001fae:	2001      	movs	r0, #1
 8001fb0:	f006 fe1a 	bl	8008be8 <osMessageQueueNew>
 8001fb4:	4b07      	ldr	r3, [pc, #28]	@ (8001fd4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001fb6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001fb8:	b918      	cbnz	r0, 8001fc2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001fba:	212c      	movs	r1, #44	@ 0x2c
 8001fbc:	4b06      	ldr	r3, [pc, #24]	@ (8001fd8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001fbe:	4a03      	ldr	r2, [pc, #12]	@ (8001fcc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001fc0:	e7f0      	b.n	8001fa4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001fc2:	bd08      	pop	{r3, pc}
 8001fc4:	20009f3c 	.word	0x20009f3c
 8001fc8:	08033bd8 	.word	0x08033bd8
 8001fcc:	08033c21 	.word	0x08033c21
 8001fd0:	08033c50 	.word	0x08033c50
 8001fd4:	20009f38 	.word	0x20009f38
 8001fd8:	08033caf 	.word	0x08033caf

08001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001fdc:	4b02      	ldr	r3, [pc, #8]	@ (8001fe8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001fde:	f04f 31ff 	mov.w	r1, #4294967295
 8001fe2:	6818      	ldr	r0, [r3, #0]
 8001fe4:	f006 bdaa 	b.w	8008b3c <osSemaphoreAcquire>
 8001fe8:	20009f3c 	.word	0x20009f3c

08001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001fec:	4b01      	ldr	r3, [pc, #4]	@ (8001ff4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001fee:	6818      	ldr	r0, [r3, #0]
 8001ff0:	f006 bdd2 	b.w	8008b98 <osSemaphoreRelease>
 8001ff4:	20009f3c 	.word	0x20009f3c

08001ff8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001ff8:	4b02      	ldr	r3, [pc, #8]	@ (8002004 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001ffa:	2100      	movs	r1, #0
 8001ffc:	6818      	ldr	r0, [r3, #0]
 8001ffe:	f006 bd9d 	b.w	8008b3c <osSemaphoreAcquire>
 8002002:	bf00      	nop
 8002004:	20009f3c 	.word	0x20009f3c

08002008 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8002008:	f7ff bff0 	b.w	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800200c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 800200c:	2300      	movs	r3, #0
 800200e:	4803      	ldr	r0, [pc, #12]	@ (800201c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002010:	461a      	mov	r2, r3
 8002012:	4903      	ldr	r1, [pc, #12]	@ (8002020 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002014:	6800      	ldr	r0, [r0, #0]
 8002016:	f006 be26 	b.w	8008c66 <osMessageQueuePut>
 800201a:	bf00      	nop
 800201c:	20009f38 	.word	0x20009f38
 8002020:	2000003c 	.word	0x2000003c

08002024 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 */
void OSWrappers::waitForVSync()
{
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002024:	2300      	movs	r3, #0
{
 8002026:	b513      	push	{r0, r1, r4, lr}
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002028:	4c07      	ldr	r4, [pc, #28]	@ (8002048 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800202a:	461a      	mov	r2, r3
 800202c:	a901      	add	r1, sp, #4
 800202e:	6820      	ldr	r0, [r4, #0]
 8002030:	f006 fe4d 	bl	8008cce <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002034:	f04f 33ff 	mov.w	r3, #4294967295
 8002038:	2200      	movs	r2, #0
 800203a:	6820      	ldr	r0, [r4, #0]
 800203c:	a901      	add	r1, sp, #4
 800203e:	f006 fe46 	bl	8008cce <osMessageQueueGet>
}
 8002042:	b002      	add	sp, #8
 8002044:	bd10      	pop	{r4, pc}
 8002046:	bf00      	nop
 8002048:	20009f38 	.word	0x20009f38

0800204c <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
 800204c:	6803      	ldr	r3, [r0, #0]
 800204e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002050:	4718      	bx	r3

08002052 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8002052:	2001      	movs	r0, #1
 8002054:	4770      	bx	lr

08002056 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8002056:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 800205a:	4770      	bx	lr

0800205c <_ZN8STM32DMAD1Ev>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800205c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
STM32DMA::~STM32DMA()
 8002060:	4b04      	ldr	r3, [pc, #16]	@ (8002074 <_ZN8STM32DMAD1Ev+0x18>)
 8002062:	6003      	str	r3, [r0, #0]
 8002064:	4b04      	ldr	r3, [pc, #16]	@ (8002078 <_ZN8STM32DMAD1Ev+0x1c>)
 8002066:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __ASM volatile ("dsb 0xF":::"memory");
 800206a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800206e:	f3bf 8f6f 	isb	sy
}
 8002072:	4770      	bx	lr
 8002074:	08033e60 	.word	0x08033e60
 8002078:	e000e100 	.word	0xe000e100

0800207c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800207c:	b510      	push	{r4, lr}
 800207e:	4604      	mov	r4, r0
}
 8002080:	f640 51a4 	movw	r1, #3492	@ 0xda4
 8002084:	f7ff ffea 	bl	800205c <_ZN8STM32DMAD1Ev>
 8002088:	4620      	mov	r0, r4
 800208a:	f02f f824 	bl	80310d6 <_ZdlPvj>
 800208e:	4620      	mov	r0, r4
 8002090:	bd10      	pop	{r4, pc}
	...

08002094 <_ZN8STM32DMA10initializeEv>:
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002094:	4b0f      	ldr	r3, [pc, #60]	@ (80020d4 <_ZN8STM32DMA10initializeEv+0x40>)
{
 8002096:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002098:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800209c:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80020a0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80020a4:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 80020a8:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
 80020ac:	9201      	str	r2, [sp, #4]
 80020ae:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80020b0:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80020b2:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80020b6:	661a      	str	r2, [r3, #96]	@ 0x60
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80020b8:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80020ba:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80020be:	661a      	str	r2, [r3, #96]	@ 0x60
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80020c0:	4b05      	ldr	r3, [pc, #20]	@ (80020d8 <_ZN8STM32DMA10initializeEv+0x44>)
 80020c2:	4a06      	ldr	r2, [pc, #24]	@ (80020dc <_ZN8STM32DMA10initializeEv+0x48>)
 80020c4:	621a      	str	r2, [r3, #32]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020c6:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 80020ca:	4b05      	ldr	r3, [pc, #20]	@ (80020e0 <_ZN8STM32DMA10initializeEv+0x4c>)
 80020cc:	60da      	str	r2, [r3, #12]
}
 80020ce:	b002      	add	sp, #8
 80020d0:	4770      	bx	lr
 80020d2:	bf00      	nop
 80020d4:	46020c00 	.word	0x46020c00
 80020d8:	2000057c 	.word	0x2000057c
 80020dc:	08002331 	.word	0x08002331
 80020e0:	e000e100 	.word	0xe000e100

080020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 80020e4:	b508      	push	{r3, lr}
    switch (format)
 80020e6:	280a      	cmp	r0, #10
 80020e8:	d809      	bhi.n	80020fe <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 80020ea:	e8df f000 	tbb	[pc, r0]
 80020ee:	1006      	.short	0x1006
 80020f0:	0808080e 	.word	0x0808080e
 80020f4:	10101008 	.word	0x10101008
 80020f8:	10          	.byte	0x10
 80020f9:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80020fa:	2002      	movs	r0, #2
}
 80020fc:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80020fe:	2187      	movs	r1, #135	@ 0x87
 8002100:	4b04      	ldr	r3, [pc, #16]	@ (8002114 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8002102:	4a05      	ldr	r2, [pc, #20]	@ (8002118 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8002104:	4805      	ldr	r0, [pc, #20]	@ (800211c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8002106:	f030 f9bf 	bl	8032488 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800210a:	2000      	movs	r0, #0
 800210c:	e7f6      	b.n	80020fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 800210e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8002110:	e7f4      	b.n	80020fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8002112:	bf00      	nop
 8002114:	08033cf1 	.word	0x08033cf1
 8002118:	08033d0c 	.word	0x08033d0c
 800211c:	08033d57 	.word	0x08033d57

08002120 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8002120:	b538      	push	{r3, r4, r5, lr}
 8002122:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002124:	7f88      	ldrb	r0, [r1, #30]
 8002126:	f7ff ffdd 	bl	80020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800212a:	8aa5      	ldrh	r5, [r4, #20]
 800212c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800212e:	4b16      	ldr	r3, [pc, #88]	@ (8002188 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002130:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8002134:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002136:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002138:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800213a:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800213c:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800213e:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002140:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8002142:	6825      	ldr	r5, [r4, #0]
 8002144:	2d08      	cmp	r5, #8
 8002146:	d10e      	bne.n	8002166 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002148:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800214a:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800214c:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 800214e:	7f20      	ldrb	r0, [r4, #28]
 8002150:	4a0e      	ldr	r2, [pc, #56]	@ (800218c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8002152:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8002156:	61da      	str	r2, [r3, #28]
        return color;
 8002158:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800215a:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 800215c:	4a0c      	ldr	r2, [pc, #48]	@ (8002190 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800215e:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002160:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002162:	601a      	str	r2, [r3, #0]
    }
}
 8002164:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8002166:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8002168:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800216a:	611a      	str	r2, [r3, #16]
 800216c:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 800216e:	0a0a      	lsrs	r2, r1, #8
 8002170:	0948      	lsrs	r0, r1, #5
 8002172:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8002176:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800217a:	4302      	orrs	r2, r0
 800217c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8002180:	430a      	orrs	r2, r1
 8002182:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002184:	4a03      	ldr	r2, [pc, #12]	@ (8002194 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8002186:	e7ec      	b.n	8002162 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8002188:	4002b000 	.word	0x4002b000
 800218c:	00010009 	.word	0x00010009
 8002190:	00020201 	.word	0x00020201
 8002194:	00030201 	.word	0x00030201

08002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8002198:	b508      	push	{r3, lr}
    switch (format)
 800219a:	280b      	cmp	r0, #11
 800219c:	d80b      	bhi.n	80021b6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 800219e:	e8df f000 	tbb	[pc, r0]
 80021a2:	1206      	.short	0x1206
 80021a4:	0a0a0a10 	.word	0x0a0a0a10
 80021a8:	0808080a 	.word	0x0808080a
 80021ac:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 80021ae:	2002      	movs	r0, #2
}
 80021b0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 80021b2:	2005      	movs	r0, #5
        break;
 80021b4:	e7fc      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 80021b6:	2166      	movs	r1, #102	@ 0x66
 80021b8:	4b04      	ldr	r3, [pc, #16]	@ (80021cc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80021ba:	4a05      	ldr	r2, [pc, #20]	@ (80021d0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80021bc:	4805      	ldr	r0, [pc, #20]	@ (80021d4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 80021be:	f030 f963 	bl	8032488 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 80021c2:	2000      	movs	r0, #0
 80021c4:	e7f4      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 80021c6:	2001      	movs	r0, #1
    return dma2dColorMode;
 80021c8:	e7f2      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80021ca:	bf00      	nop
 80021cc:	08033cf1 	.word	0x08033cf1
 80021d0:	08033db4 	.word	0x08033db4
 80021d4:	08033d57 	.word	0x08033d57

080021d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 80021d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021dc:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 80021e0:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021e2:	4640      	mov	r0, r8
 80021e4:	f7ff ffd8 	bl	8002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021e8:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021ea:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021ec:	4638      	mov	r0, r7
 80021ee:	f7ff ffd3 	bl	8002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 80021f2:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021f4:	4638      	mov	r0, r7
 80021f6:	f7ff ff75 	bl	80020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80021fa:	8aa1      	ldrh	r1, [r4, #20]
 80021fc:	8b62      	ldrh	r2, [r4, #26]
 80021fe:	4b44      	ldr	r3, [pc, #272]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002200:	1a52      	subs	r2, r2, r1
 8002202:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002204:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8002206:	8b22      	ldrh	r2, [r4, #24]
 8002208:	1a52      	subs	r2, r2, r1
 800220a:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800220c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800220e:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002210:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002214:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002216:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8002218:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800221a:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800221c:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 800221e:	6820      	ldr	r0, [r4, #0]
 8002220:	2880      	cmp	r0, #128	@ 0x80
 8002222:	d028      	beq.n	8002276 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8002224:	7f22      	ldrb	r2, [r4, #28]
 8002226:	d80f      	bhi.n	8002248 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8002228:	2820      	cmp	r0, #32
 800222a:	d067      	beq.n	80022fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 800222c:	2840      	cmp	r0, #64	@ 0x40
 800222e:	d065      	beq.n	80022fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8002230:	2804      	cmp	r0, #4
 8002232:	d01a      	beq.n	800226a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002234:	4b36      	ldr	r3, [pc, #216]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002236:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800223a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 800223e:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002240:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8002242:	d061      	beq.n	8002308 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8002244:	4a33      	ldr	r2, [pc, #204]	@ (8002314 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8002246:	e044      	b.n	80022d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8002248:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 800224c:	d004      	beq.n	8002258 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 800224e:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8002252:	d1ef      	bne.n	8002234 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002254:	4830      	ldr	r0, [pc, #192]	@ (8002318 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8002256:	e000      	b.n	800225a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002258:	4830      	ldr	r0, [pc, #192]	@ (800231c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800225a:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 800225e:	61da      	str	r2, [r3, #28]
 8002260:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8002262:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002264:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002266:	6159      	str	r1, [r3, #20]
 8002268:	e032      	b.n	80022d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800226a:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 800226e:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002272:	61da      	str	r2, [r3, #28]
 8002274:	e7f6      	b.n	8002264 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8002276:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8002278:	1d02      	adds	r2, r0, #4
 800227a:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800227c:	7f22      	ldrb	r2, [r4, #28]
 800227e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8002282:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8002286:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002288:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800228a:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 800228c:	7801      	ldrb	r1, [r0, #0]
 800228e:	b141      	cbz	r1, 80022a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8002290:	2901      	cmp	r1, #1
 8002292:	d021      	beq.n	80022d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8002294:	f240 1111 	movw	r1, #273	@ 0x111
 8002298:	4b21      	ldr	r3, [pc, #132]	@ (8002320 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 800229a:	4a22      	ldr	r2, [pc, #136]	@ (8002324 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 800229c:	4822      	ldr	r0, [pc, #136]	@ (8002328 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 800229e:	f030 f8f3 	bl	8032488 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022a2:	69da      	ldr	r2, [r3, #28]
 80022a4:	8841      	ldrh	r1, [r0, #2]
 80022a6:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80022aa:	3901      	subs	r1, #1
 80022ac:	f022 0210 	bic.w	r2, r2, #16
 80022b0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 80022b4:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022b6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80022b8:	4b15      	ldr	r3, [pc, #84]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80022ba:	69da      	ldr	r2, [r3, #28]
 80022bc:	f042 0220 	orr.w	r2, r2, #32
 80022c0:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80022c2:	69da      	ldr	r2, [r3, #28]
 80022c4:	0692      	lsls	r2, r2, #26
 80022c6:	d4fc      	bmi.n	80022c2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 80022c8:	2210      	movs	r2, #16
 80022ca:	609a      	str	r2, [r3, #8]
            if (blend)
 80022cc:	2900      	cmp	r1, #0
 80022ce:	d0b9      	beq.n	8002244 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 80022d0:	4a16      	ldr	r2, [pc, #88]	@ (800232c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 80022d2:	601a      	str	r2, [r3, #0]
}
 80022d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 80022d8:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022dc:	69da      	ldr	r2, [r3, #28]
 80022de:	8840      	ldrh	r0, [r0, #2]
 80022e0:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80022e4:	f100 30ff 	add.w	r0, r0, #4294967295
 80022e8:	f022 0210 	bic.w	r2, r2, #16
 80022ec:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80022f0:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 80022f4:	bf18      	it	ne
 80022f6:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022f8:	61da      	str	r2, [r3, #28]
                break;
 80022fa:	e7dd      	b.n	80022b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80022fc:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8002300:	4b03      	ldr	r3, [pc, #12]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002302:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8002306:	e7b4      	b.n	8002272 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8002308:	f240 2201 	movw	r2, #513	@ 0x201
 800230c:	e7e1      	b.n	80022d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 800230e:	bf00      	nop
 8002310:	4002b000 	.word	0x4002b000
 8002314:	00010201 	.word	0x00010201
 8002318:	00020009 	.word	0x00020009
 800231c:	0002000a 	.word	0x0002000a
 8002320:	08033dfe 	.word	0x08033dfe
 8002324:	08033e18 	.word	0x08033e18
 8002328:	08033d57 	.word	0x08033d57
 800232c:	00020201 	.word	0x00020201

08002330 <DMA2D_XferCpltCallback>:
 8002330:	4b02      	ldr	r3, [pc, #8]	@ (800233c <DMA2D_XferCpltCallback+0xc>)
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8002336:	6803      	ldr	r3, [r0, #0]
 8002338:	695b      	ldr	r3, [r3, #20]
 800233a:	4718      	bx	r3
 800233c:	20082ec4 	.word	0x20082ec4

08002340 <_ZN8STM32DMA18externalJobExecuteEv>:
     *
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
 8002340:	2301      	movs	r3, #1
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
 8002342:	221c      	movs	r2, #28
 8002344:	4908      	ldr	r1, [pc, #32]	@ (8002368 <_ZN8STM32DMA18externalJobExecuteEv+0x28>)
        isRunning = true;
 8002346:	7203      	strb	r3, [r0, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
 8002348:	6808      	ldr	r0, [r1, #0]
 800234a:	4b08      	ldr	r3, [pc, #32]	@ (800236c <_ZN8STM32DMA18externalJobExecuteEv+0x2c>)
 800234c:	fb02 3000 	mla	r0, r2, r0, r3
 8002350:	7e00      	ldrb	r0, [r0, #24]
 8002352:	b120      	cbz	r0, 800235e <_ZN8STM32DMA18externalJobExecuteEv+0x1e>
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 8002354:	6808      	ldr	r0, [r1, #0]
 8002356:	fb02 3000 	mla	r0, r2, r0, r3
 800235a:	f7ff bd71 	b.w	8001e40 <DMA2D_CropBuffer>
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 800235e:	6808      	ldr	r0, [r1, #0]
 8002360:	fb02 3000 	mla	r0, r2, r0, r3
 8002364:	f7ff bd20 	b.w	8001da8 <DMA2D_CopyBuffer>
 8002368:	20000700 	.word	0x20000700
 800236c:	20000004 	.word	0x20000004

08002370 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
 8002370:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
 8002374:	b510      	push	{r4, lr}
 8002376:	4604      	mov	r4, r0
        if (!started_by_external_job)
 8002378:	b9ab      	cbnz	r3, 80023a6 <_ZN8STM32DMA18signalDMAInterruptEv+0x36>
            executeCompleted();
 800237a:	6803      	ldr	r3, [r0, #0]
 800237c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800237e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
 8002380:	221c      	movs	r2, #28
 8002382:	4b17      	ldr	r3, [pc, #92]	@ (80023e0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	4353      	muls	r3, r2
 8002388:	4a16      	ldr	r2, [pc, #88]	@ (80023e4 <_ZN8STM32DMA18signalDMAInterruptEv+0x74>)
 800238a:	5cd3      	ldrb	r3, [r2, r3]
 800238c:	2b01      	cmp	r3, #1
 800238e:	d109      	bne.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 8002390:	4a15      	ldr	r2, [pc, #84]	@ (80023e8 <_ZN8STM32DMA18signalDMAInterruptEv+0x78>)
 8002392:	6812      	ldr	r2, [r2, #0]
 8002394:	b932      	cbnz	r2, 80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 8002396:	7a22      	ldrb	r2, [r4, #8]
 8002398:	b922      	cbnz	r2, 80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
                externalJobExecute();
 800239a:	4620      	mov	r0, r4
                started_by_external_job = true;
 800239c:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                externalJobExecute();
 80023a0:	f7ff ffce 	bl	8002340 <_ZN8STM32DMA18externalJobExecuteEv>
    }
 80023a4:	bd10      	pop	{r4, pc}
        if (isRunning)
 80023a6:	7a03      	ldrb	r3, [r0, #8]
 80023a8:	b14b      	cbz	r3, 80023be <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            isRunning = false;
 80023aa:	2300      	movs	r3, #0
 80023ac:	7203      	strb	r3, [r0, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 80023ae:	201c      	movs	r0, #28
 80023b0:	4b0b      	ldr	r3, [pc, #44]	@ (80023e0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>)
 80023b2:	681a      	ldr	r2, [r3, #0]
 80023b4:	4b0b      	ldr	r3, [pc, #44]	@ (80023e4 <_ZN8STM32DMA18signalDMAInterruptEv+0x74>)
 80023b6:	fb00 3002 	mla	r0, r0, r2, r3
 80023ba:	f7ff fdc3 	bl	8001f44 <DMA2D_ExternalJobCompleted>
            if (!queue.isEmpty() && isAllowed)
 80023be:	6860      	ldr	r0, [r4, #4]
 80023c0:	6803      	ldr	r3, [r0, #0]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	4798      	blx	r3
 80023c6:	2800      	cmp	r0, #0
 80023c8:	d1ec      	bne.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 80023ca:	7a63      	ldrb	r3, [r4, #9]
 80023cc:	2b00      	cmp	r3, #0
 80023ce:	d0e9      	beq.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
                execute();
 80023d0:	6823      	ldr	r3, [r4, #0]
                started_by_external_job = false;
 80023d2:	f884 0da0 	strb.w	r0, [r4, #3488]	@ 0xda0
                execute();
 80023d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80023d8:	4620      	mov	r0, r4
    }
 80023da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
 80023de:	4718      	bx	r3
 80023e0:	20000700 	.word	0x20000700
 80023e4:	20000004 	.word	0x20000004
 80023e8:	200006fc 	.word	0x200006fc

080023ec <_ZN8STM32DMA5startEv>:
    virtual void start()
 80023ec:	b510      	push	{r4, lr}
 80023ee:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
 80023f0:	6840      	ldr	r0, [r0, #4]
 80023f2:	6803      	ldr	r3, [r0, #0]
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	4798      	blx	r3
 80023f8:	b958      	cbnz	r0, 8002412 <_ZN8STM32DMA5startEv+0x26>
 80023fa:	7a63      	ldrb	r3, [r4, #9]
 80023fc:	b14b      	cbz	r3, 8002412 <_ZN8STM32DMA5startEv+0x26>
 80023fe:	7a23      	ldrb	r3, [r4, #8]
 8002400:	b93b      	cbnz	r3, 8002412 <_ZN8STM32DMA5startEv+0x26>
                started_by_external_job = false;
 8002402:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
 8002406:	6823      	ldr	r3, [r4, #0]
 8002408:	4620      	mov	r0, r4
    }
 800240a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
 800240e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002410:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
 8002412:	221c      	movs	r2, #28
 8002414:	4b07      	ldr	r3, [pc, #28]	@ (8002434 <_ZN8STM32DMA5startEv+0x48>)
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	4353      	muls	r3, r2
 800241a:	4a07      	ldr	r2, [pc, #28]	@ (8002438 <_ZN8STM32DMA5startEv+0x4c>)
 800241c:	5cd3      	ldrb	r3, [r2, r3]
 800241e:	2b01      	cmp	r3, #1
 8002420:	d106      	bne.n	8002430 <_ZN8STM32DMA5startEv+0x44>
 8002422:	7a22      	ldrb	r2, [r4, #8]
 8002424:	b922      	cbnz	r2, 8002430 <_ZN8STM32DMA5startEv+0x44>
            externalJobExecute();
 8002426:	4620      	mov	r0, r4
            started_by_external_job = true;
 8002428:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            externalJobExecute();
 800242c:	f7ff ff88 	bl	8002340 <_ZN8STM32DMA18externalJobExecuteEv>
    }
 8002430:	bd10      	pop	{r4, pc}
 8002432:	bf00      	nop
 8002434:	20000700 	.word	0x20000700
 8002438:	20000004 	.word	0x20000004

0800243c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 800243c:	b570      	push	{r4, r5, r6, lr}
 800243e:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002440:	2600      	movs	r6, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
 8002442:	4625      	mov	r5, r4
 8002444:	4b0a      	ldr	r3, [pc, #40]	@ (8002470 <_ZN8STM32DMAC1Ev+0x34>)
 8002446:	300c      	adds	r0, #12
 8002448:	6060      	str	r0, [r4, #4]
 800244a:	7226      	strb	r6, [r4, #8]
 800244c:	7266      	strb	r6, [r4, #9]
 800244e:	f845 3b20 	str.w	r3, [r5], #32
 8002452:	2260      	movs	r2, #96	@ 0x60
 8002454:	4629      	mov	r1, r5
 8002456:	f009 fbf1 	bl	800bc3c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800245a:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 800245e:	60ee      	str	r6, [r5, #12]
 8002460:	3524      	adds	r5, #36	@ 0x24
 8002462:	429d      	cmp	r5, r3
 8002464:	d1fb      	bne.n	800245e <_ZN8STM32DMAC1Ev+0x22>
}
 8002466:	4620      	mov	r0, r4
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
 8002468:	f884 6da0 	strb.w	r6, [r4, #3488]	@ 0xda0
}
 800246c:	bd70      	pop	{r4, r5, r6, pc}
 800246e:	bf00      	nop
 8002470:	08033e60 	.word	0x08033e60

08002474 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002474:	2001      	movs	r0, #1
 8002476:	4770      	bx	lr

08002478 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002478:	200c      	movs	r0, #12
 800247a:	4770      	bx	lr

0800247c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800247c:	230c      	movs	r3, #12
 800247e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002482:	3008      	adds	r0, #8
 8002484:	4770      	bx	lr

08002486 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002486:	230c      	movs	r3, #12
 8002488:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800248c:	3008      	adds	r0, #8
 800248e:	4770      	bx	lr

08002490 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002490:	2001      	movs	r0, #1
 8002492:	4770      	bx	lr

08002494 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002494:	20e8      	movs	r0, #232	@ 0xe8
 8002496:	4770      	bx	lr

08002498 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002498:	23e8      	movs	r3, #232	@ 0xe8
 800249a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800249e:	3008      	adds	r0, #8
 80024a0:	4770      	bx	lr

080024a2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024a2:	23e8      	movs	r3, #232	@ 0xe8
 80024a4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80024a8:	3008      	adds	r0, #8
 80024aa:	4770      	bx	lr

080024ac <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80024ac:	2001      	movs	r0, #1
 80024ae:	4770      	bx	lr

080024b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80024b0:	2010      	movs	r0, #16
 80024b2:	4770      	bx	lr

080024b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024b4:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80024b8:	3008      	adds	r0, #8
 80024ba:	4770      	bx	lr

080024bc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024bc:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80024c0:	3008      	adds	r0, #8
 80024c2:	4770      	bx	lr

080024c4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoGameScreen1ScreenNoTransition();
 80024c4:	4608      	mov	r0, r1
 80024c6:	f000 be81 	b.w	80031cc <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>
	...

080024cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80024cc:	b510      	push	{r4, lr}
 80024ce:	4604      	mov	r4, r0
 80024d0:	4b02      	ldr	r3, [pc, #8]	@ (80024dc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80024d2:	6003      	str	r3, [r0, #0]
 80024d4:	f008 f9fd 	bl	800a8d2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80024d8:	4620      	mov	r0, r4
 80024da:	bd10      	pop	{r4, pc}
 80024dc:	08033f18 	.word	0x08033f18

080024e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80024e0:	b510      	push	{r4, lr}
 80024e2:	4604      	mov	r4, r0
 80024e4:	f7ff fff2 	bl	80024cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80024e8:	4620      	mov	r0, r4
 80024ea:	2114      	movs	r1, #20
 80024ec:	f02e fdf3 	bl	80310d6 <_ZdlPvj>
 80024f0:	4620      	mov	r0, r4
 80024f2:	bd10      	pop	{r4, pc}

080024f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80024f4:	b510      	push	{r4, lr}
 80024f6:	4604      	mov	r4, r0
 80024f8:	4b02      	ldr	r3, [pc, #8]	@ (8002504 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80024fa:	6003      	str	r3, [r0, #0]
 80024fc:	f008 f9e9 	bl	800a8d2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002500:	4620      	mov	r0, r4
 8002502:	bd10      	pop	{r4, pc}
 8002504:	08033ee4 	.word	0x08033ee4

08002508 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002508:	b510      	push	{r4, lr}
 800250a:	4604      	mov	r4, r0
 800250c:	f7ff fff2 	bl	80024f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002510:	4620      	mov	r0, r4
 8002512:	21f0      	movs	r1, #240	@ 0xf0
 8002514:	f02e fddf 	bl	80310d6 <_ZdlPvj>
 8002518:	4620      	mov	r0, r4
 800251a:	bd10      	pop	{r4, pc}

0800251c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800251c:	b510      	push	{r4, lr}
 800251e:	4604      	mov	r4, r0
 8002520:	4b02      	ldr	r3, [pc, #8]	@ (800252c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002522:	6003      	str	r3, [r0, #0]
 8002524:	f008 f9d5 	bl	800a8d2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002528:	4620      	mov	r0, r4
 800252a:	bd10      	pop	{r4, pc}
 800252c:	08033eb0 	.word	0x08033eb0

08002530 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002530:	b510      	push	{r4, lr}
 8002532:	4604      	mov	r4, r0
 8002534:	f7ff fff2 	bl	800251c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002538:	4620      	mov	r0, r4
 800253a:	2118      	movs	r1, #24
 800253c:	f02e fdcb 	bl	80310d6 <_ZdlPvj>
 8002540:	4620      	mov	r0, r4
 8002542:	bd10      	pop	{r4, pc}

08002544 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002544:	b510      	push	{r4, lr}
 8002546:	4604      	mov	r4, r0
 8002548:	4b07      	ldr	r3, [pc, #28]	@ (8002568 <_ZN12FrontendHeapD1Ev+0x24>)
 800254a:	6003      	str	r3, [r0, #0]
 800254c:	f500 708e 	add.w	r0, r0, #284	@ 0x11c
 8002550:	f7ff ffbc 	bl	80024cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002554:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8002558:	f7ff ffcc 	bl	80024f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15GameScreen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800255c:	f104 0014 	add.w	r0, r4, #20
 8002560:	f7ff ffdc 	bl	800251c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002564:	4620      	mov	r0, r4
 8002566:	bd10      	pop	{r4, pc}
 8002568:	08033f4c 	.word	0x08033f4c

0800256c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800256c:	b508      	push	{r3, lr}
 800256e:	4802      	ldr	r0, [pc, #8]	@ (8002578 <__tcf_0+0xc>)
 8002570:	f7ff ffe8 	bl	8002544 <_ZN12FrontendHeapD1Ev>
 8002574:	bd08      	pop	{r3, pc}
 8002576:	bf00      	nop
 8002578:	2000b610 	.word	0x2000b610

0800257c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 800257c:	b510      	push	{r4, lr}
 800257e:	4604      	mov	r4, r0
 8002580:	f7ff ffe0 	bl	8002544 <_ZN12FrontendHeapD1Ev>
 8002584:	4620      	mov	r0, r4
 8002586:	f44f 7124 	mov.w	r1, #656	@ 0x290
 800258a:	f02e fda4 	bl	80310d6 <_ZdlPvj>
 800258e:	4620      	mov	r0, r4
 8002590:	bd10      	pop	{r4, pc}
	...

08002594 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 8002594:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002598:	f000 fcb4 	bl	8002f04 <_ZN14BitmapDatabase11getInstanceEv>
 800259c:	2400      	movs	r4, #0
 800259e:	4605      	mov	r5, r0
 80025a0:	f000 fcb4 	bl	8002f0c <_ZN14BitmapDatabase15getInstanceSizeEv>
 80025a4:	4623      	mov	r3, r4
 80025a6:	4601      	mov	r1, r0
 80025a8:	4622      	mov	r2, r4
 80025aa:	4628      	mov	r0, r5
 80025ac:	9400      	str	r4, [sp, #0]
 80025ae:	f00d fcb5 	bl	800ff1c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);

    display.setFrameBufferFormat(Bitmap::RGB565);
 80025b2:	4d28      	ldr	r5, [pc, #160]	@ (8002654 <touchgfx_init+0xc0>)
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80025b4:	4a28      	ldr	r2, [pc, #160]	@ (8002658 <touchgfx_init+0xc4>)
 80025b6:	4b29      	ldr	r3, [pc, #164]	@ (800265c <touchgfx_init+0xc8>)
    Texts::setLanguage(0);
 80025b8:	4620      	mov	r0, r4
 80025ba:	601a      	str	r2, [r3, #0]
 80025bc:	f001 f8a2 	bl	8003704 <_ZN8touchgfx5Texts11setLanguageEt>
    display.setFrameBufferFormat(Bitmap::RGB565);
 80025c0:	4621      	mov	r1, r4
 80025c2:	4628      	mov	r0, r5
 80025c4:	f022 fc48 	bl	8024e58 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 80025c8:	4b25      	ldr	r3, [pc, #148]	@ (8002660 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 80025ca:	4826      	ldr	r0, [pc, #152]	@ (8002664 <touchgfx_init+0xd0>)
 80025cc:	60ab      	str	r3, [r5, #8]
 80025ce:	f00d fc0d 	bl	800fdec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
        static FrontendHeap instance;
 80025d2:	4d25      	ldr	r5, [pc, #148]	@ (8002668 <touchgfx_init+0xd4>)
 80025d4:	e8d5 3faf 	lda	r3, [r5]
 80025d8:	07db      	lsls	r3, r3, #31
 80025da:	d435      	bmi.n	8002648 <touchgfx_init+0xb4>
 80025dc:	4628      	mov	r0, r5
 80025de:	f02e fd7c 	bl	80310da <__cxa_guard_acquire>
 80025e2:	b388      	cbz	r0, 8002648 <touchgfx_init+0xb4>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80025e4:	4c21      	ldr	r4, [pc, #132]	@ (800266c <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80025e6:	4b22      	ldr	r3, [pc, #136]	@ (8002670 <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80025e8:	f504 769a 	add.w	r6, r4, #308	@ 0x134
        : presenterStorage(pres),
 80025ec:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80025f0:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 80025f4:	f504 778e 	add.w	r7, r4, #284	@ 0x11c
 80025f8:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 80025fa:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80025fc:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002600:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8002602:	6126      	str	r6, [r4, #16]
 8002604:	f008 f966 	bl	800a8d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002608:	4b1a      	ldr	r3, [pc, #104]	@ (8002674 <touchgfx_init+0xe0>)
 800260a:	4640      	mov	r0, r8
 800260c:	6163      	str	r3, [r4, #20]
 800260e:	f008 f961 	bl	800a8d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002612:	4b19      	ldr	r3, [pc, #100]	@ (8002678 <touchgfx_init+0xe4>)
 8002614:	4638      	mov	r0, r7
 8002616:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002618:	f008 f95c 	bl	800a8d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800261c:	4b17      	ldr	r3, [pc, #92]	@ (800267c <touchgfx_init+0xe8>)
 800261e:	f504 7098 	add.w	r0, r4, #304	@ 0x130
 8002622:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
 8002626:	f001 f945 	bl	80038b4 <_ZN5ModelC1Ev>
 800262a:	4622      	mov	r2, r4
 800262c:	f504 7198 	add.w	r1, r4, #304	@ 0x130
 8002630:	4630      	mov	r0, r6
 8002632:	f001 f8d3 	bl	80037dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002636:	4630      	mov	r0, r6
 8002638:	f000 fdc8 	bl	80031cc <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 800263c:	4810      	ldr	r0, [pc, #64]	@ (8002680 <touchgfx_init+0xec>)
 800263e:	f02f ff41 	bl	80324c4 <atexit>
 8002642:	4628      	mov	r0, r5
 8002644:	f02e fd55 	bl	80310f2 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002648:	480e      	ldr	r0, [pc, #56]	@ (8002684 <touchgfx_init+0xf0>)
}
 800264a:	b002      	add	sp, #8
 800264c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002650:	f7fe bdec 	b.w	800122c <_ZN11TouchGFXHAL10initializeEv>
 8002654:	2000a014 	.word	0x2000a014
 8002658:	20009ff4 	.word	0x20009ff4
 800265c:	20082f20 	.word	0x20082f20
 8002660:	20009ff8 	.word	0x20009ff8
 8002664:	20000040 	.word	0x20000040
 8002668:	2000b60c 	.word	0x2000b60c
 800266c:	2000b610 	.word	0x2000b610
 8002670:	08033f4c 	.word	0x08033f4c
 8002674:	08033eb0 	.word	0x08033eb0
 8002678:	08033ee4 	.word	0x08033ee4
 800267c:	08033f18 	.word	0x08033f18
 8002680:	0800256d 	.word	0x0800256d
 8002684:	20009f40 	.word	0x20009f40

08002688 <touchgfx_components_init>:

void touchgfx_components_init()
{
 8002688:	b508      	push	{r3, lr}
    nema_init();
 800268a:	f00e f9fd 	bl	8010a88 <nema_init>
    nema_vg_init_stencil_pool(800, 480, 1);
 800268e:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8002692:	f44f 7048 	mov.w	r0, #800	@ 0x320
 8002696:	2201      	movs	r2, #1
 8002698:	f016 fc5a 	bl	8018f50 <nema_vg_init_stencil_pool>
    nema_vg_handle_large_coords(1, 1);
}
 800269c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    nema_vg_handle_large_coords(1, 1);
 80026a0:	2101      	movs	r1, #1
 80026a2:	4608      	mov	r0, r1
 80026a4:	f01a ba0e 	b.w	801cac4 <nema_vg_handle_large_coords>

080026a8 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80026a8:	4801      	ldr	r0, [pc, #4]	@ (80026b0 <touchgfx_taskEntry+0x8>)
 80026aa:	f008 bc22 	b.w	800aef2 <_ZN8touchgfx3HAL9taskEntryEv>
 80026ae:	bf00      	nop
 80026b0:	20009f40 	.word	0x20009f40

080026b4 <_GLOBAL__sub_I_touchgfx_init>:
}
 80026b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
static STM32DMA dma;
 80026b6:	4d13      	ldr	r5, [pc, #76]	@ (8002704 <_GLOBAL__sub_I_touchgfx_init+0x50>)
{
public:

    STM32TouchController() {}
 80026b8:	4b13      	ldr	r3, [pc, #76]	@ (8002708 <_GLOBAL__sub_I_touchgfx_init+0x54>)
 80026ba:	4f14      	ldr	r7, [pc, #80]	@ (800270c <_GLOBAL__sub_I_touchgfx_init+0x58>)
static LCDGPU2D display;
 80026bc:	4e14      	ldr	r6, [pc, #80]	@ (8002710 <_GLOBAL__sub_I_touchgfx_init+0x5c>)
static STM32DMA dma;
 80026be:	4628      	mov	r0, r5
 80026c0:	603b      	str	r3, [r7, #0]
 80026c2:	f7ff febb 	bl	800243c <_ZN8STM32DMAC1Ev>
static LCDGPU2D display;
 80026c6:	4630      	mov	r0, r6
 80026c8:	f022 fbb8 	bl	8024e3c <_ZN8touchgfx8LCDGPU2DC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 80026cc:	4811      	ldr	r0, [pc, #68]	@ (8002714 <_GLOBAL__sub_I_touchgfx_init+0x60>)
 80026ce:	f00b fdc3 	bl	800e258 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        touchgfx::HALGPU2D(dma, display, tc, width, height)
 80026d2:	f44f 7348 	mov.w	r3, #800	@ 0x320
 80026d6:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80026da:	4c0f      	ldr	r4, [pc, #60]	@ (8002718 <_GLOBAL__sub_I_touchgfx_init+0x64>)
 80026dc:	e9cd 3200 	strd	r3, r2, [sp]
 80026e0:	4629      	mov	r1, r5
 80026e2:	463b      	mov	r3, r7
 80026e4:	4632      	mov	r2, r6
 80026e6:	4620      	mov	r0, r4
 80026e8:	f01e f9ba 	bl	8020a60 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80026ec:	4b0b      	ldr	r3, [pc, #44]	@ (800271c <_GLOBAL__sub_I_touchgfx_init+0x68>)
 80026ee:	6023      	str	r3, [r4, #0]
        : cc_consumed(0),
 80026f0:	2300      	movs	r3, #0
 80026f2:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
          cc_in(0)
 80026f6:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 80026fa:	4b09      	ldr	r3, [pc, #36]	@ (8002720 <_GLOBAL__sub_I_touchgfx_init+0x6c>)
 80026fc:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
}
 8002700:	b003      	add	sp, #12
 8002702:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002704:	2000a864 	.word	0x2000a864
 8002708:	080336a4 	.word	0x080336a4
 800270c:	2000b608 	.word	0x2000b608
 8002710:	2000a014 	.word	0x2000a014
 8002714:	20009ff8 	.word	0x20009ff8
 8002718:	20009f40 	.word	0x20009f40
 800271c:	08033830 	.word	0x08033830
 8002720:	08033660 	.word	0x08033660

08002724 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8002724:	4801      	ldr	r0, [pc, #4]	@ (800272c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8002726:	f7ff bc99 	b.w	800205c <_ZN8STM32DMAD1Ev>
 800272a:	bf00      	nop
 800272c:	2000a864 	.word	0x2000a864

08002730 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static GPU2DVectorRenderer renderer;
 8002730:	4770      	bx	lr
	...

08002734 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002734:	2290      	movs	r2, #144	@ 0x90
 8002736:	4b04      	ldr	r3, [pc, #16]	@ (8002748 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x14>)
 8002738:	f883 2376 	strb.w	r2, [r3, #886]	@ 0x376
 800273c:	f883 2387 	strb.w	r2, [r3, #903]	@ 0x387
 8002740:	f883 2384 	strb.w	r2, [r3, #900]	@ 0x384
void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
    NVIC_SetPriority(GPU2D_IRQn, 9);
}
 8002744:	4770      	bx	lr
 8002746:	bf00      	nop
 8002748:	e000e100 	.word	0xe000e100

0800274c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(GPU2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800274c:	4a09      	ldr	r2, [pc, #36]	@ (8002774 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800274e:	490a      	ldr	r1, [pc, #40]	@ (8002778 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8002750:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002752:	480a      	ldr	r0, [pc, #40]	@ (800277c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002754:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002758:	3b01      	subs	r3, #1
 800275a:	b29b      	uxth	r3, r3
 800275c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800275e:	6911      	ldr	r1, [r2, #16]
 8002760:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002764:	3901      	subs	r1, #1
 8002766:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002768:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800276a:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 800276c:	f043 0301 	orr.w	r3, r3, #1
 8002770:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8002772:	4770      	bx	lr
 8002774:	40016800 	.word	0x40016800
 8002778:	2000b8a2 	.word	0x2000b8a2
 800277c:	2000b8a0 	.word	0x2000b8a0

08002780 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HALGPU2D::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002780:	4b01      	ldr	r3, [pc, #4]	@ (8002788 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8002782:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8002786:	4770      	bx	lr
 8002788:	40016800 	.word	0x40016800

0800278c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800278c:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800278e:	4b02      	ldr	r3, [pc, #8]	@ (8002798 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)
 8002790:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002794:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8002796:	4770      	bx	lr
 8002798:	40016800 	.word	0x40016800

0800279c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
 800279c:	4770      	bx	lr

0800279e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
 800279e:	2324      	movs	r3, #36	@ 0x24
 80027a0:	fb03 0001 	mla	r0, r3, r1, r0
 80027a4:	2300      	movs	r3, #0
 80027a6:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
 80027aa:	4770      	bx	lr

080027ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
 80027ac:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
 80027b0:	4770      	bx	lr

080027b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
 80027b2:	b510      	push	{r4, lr}
 80027b4:	4604      	mov	r4, r0
 80027b6:	2130      	movs	r1, #48	@ 0x30
 80027b8:	f02e fc8d 	bl	80310d6 <_ZdlPvj>
 80027bc:	4620      	mov	r0, r4
 80027be:	bd10      	pop	{r4, pc}

080027c0 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80027c0:	b538      	push	{r3, r4, r5, lr}
 80027c2:	4604      	mov	r4, r0
    HALGPU2D::initialize(8192);
 80027c4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80027c8:	f01e f9b2 	bl	8020b30 <_ZN8touchgfx8HALGPU2D10initializeEi>
    registerEventListener(*(Application::getInstance()));
 80027cc:	6823      	ldr	r3, [r4, #0]
 80027ce:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 80027d0:	f00a fc16 	bl	800d000 <_ZN8touchgfx11Application11getInstanceEv>
 80027d4:	4601      	mov	r1, r0
 80027d6:	4620      	mov	r0, r4
 80027d8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80027da:	6823      	ldr	r3, [r4, #0]
 80027dc:	4a06      	ldr	r2, [pc, #24]	@ (80027f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x38>)
 80027de:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 80027e2:	4620      	mov	r0, r4
 80027e4:	2300      	movs	r3, #0
 80027e6:	4905      	ldr	r1, [pc, #20]	@ (80027fc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x3c>)
 80027e8:	47a8      	blx	r5
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
 80027ea:	6862      	ldr	r2, [r4, #4]
 80027ec:	4b04      	ldr	r3, [pc, #16]	@ (8002800 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x40>)
 80027ee:	645a      	str	r2, [r3, #68]	@ 0x44
        mjpegDecoders[index] = &decoder;
 80027f0:	4a04      	ldr	r2, [pc, #16]	@ (8002804 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>)
 80027f2:	6053      	str	r3, [r2, #4]
}
 80027f4:	bd38      	pop	{r3, r4, r5, pc}
 80027f6:	bf00      	nop
 80027f8:	20140ee0 	.word	0x20140ee0
 80027fc:	200856e0 	.word	0x200856e0
 8002800:	2000b8d8 	.word	0x2000b8d8
 8002804:	2000b8a8 	.word	0x2000b8a8

08002808 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
 8002808:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800280a:	4604      	mov	r4, r0
 800280c:	4610      	mov	r0, r2
        assert(handle < no_streams);
 800280e:	b129      	cbz	r1, 800281c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
 8002810:	21a9      	movs	r1, #169	@ 0xa9
 8002812:	4b3e      	ldr	r3, [pc, #248]	@ (800290c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x104>)
 8002814:	4a3e      	ldr	r2, [pc, #248]	@ (8002910 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x108>)
 8002816:	483f      	ldr	r0, [pc, #252]	@ (8002914 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x10c>)
 8002818:	f02f fe36 	bl	8032488 <__assert_func>
        if (stream.isPlaying || stream.isShowingOneFrame)
 800281c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8002820:	b91b      	cbnz	r3, 800282a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x22>
 8002822:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8002826:	2b00      	cmp	r3, #0
 8002828:	d06e      	beq.n	8002908 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x100>
            stream.isShowingOneFrame = false;
 800282a:	2700      	movs	r7, #0
        return vSyncForFrame;
 800282c:	4b3a      	ldr	r3, [pc, #232]	@ (8002918 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x110>)
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	f893 206b 	ldrb.w	r2, [r3, #107]	@ 0x6b
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
 8002834:	6923      	ldr	r3, [r4, #16]
            stream.isShowingOneFrame = false;
 8002836:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
 800283a:	4413      	add	r3, r2
 800283c:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
 800283e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8002842:	2b00      	cmp	r3, #0
 8002844:	d05c      	beq.n	8002900 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf8>
                widget.invalidate();
 8002846:	6803      	ldr	r3, [r0, #0]
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
 8002848:	6865      	ldr	r5, [r4, #4]
                widget.invalidate();
 800284a:	695b      	ldr	r3, [r3, #20]
 800284c:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
 800284e:	69e6      	ldr	r6, [r4, #28]
 8002850:	682b      	ldr	r3, [r5, #0]
 8002852:	2e00      	cmp	r6, #0
 8002854:	d02d      	beq.n	80028b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xaa>
                    decoder->gotoFrame(stream.seek_to_frame);
 8002856:	4631      	mov	r1, r6
 8002858:	4628      	mov	r0, r5
 800285a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800285c:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
 800285e:	682b      	ldr	r3, [r5, #0]
 8002860:	4628      	mov	r0, r5
 8002862:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002864:	69e6      	ldr	r6, [r4, #28]
 8002866:	4798      	blx	r3
 8002868:	4286      	cmp	r6, r0
 800286a:	bf2c      	ite	cs
 800286c:	2600      	movcs	r6, #0
 800286e:	2601      	movcc	r6, #1
                    stream.seek_to_frame = 0;
 8002870:	61e7      	str	r7, [r4, #28]
                stream.frameNumber = decoder->getCurrentFrameNumber();
 8002872:	682b      	ldr	r3, [r5, #0]
 8002874:	4628      	mov	r0, r5
 8002876:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002878:	4798      	blx	r3
                stream.frameCount++;
 800287a:	68a3      	ldr	r3, [r4, #8]
                stream.frameNumber = decoder->getCurrentFrameNumber();
 800287c:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
 800287e:	3301      	adds	r3, #1
 8002880:	60a3      	str	r3, [r4, #8]
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameNumber to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
 8002882:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 8002886:	69a1      	ldr	r1, [r4, #24]
 8002888:	4353      	muls	r3, r2
 800288a:	68a2      	ldr	r2, [r4, #8]
 800288c:	434a      	muls	r2, r1
 800288e:	4293      	cmp	r3, r2
 8002890:	d938      	bls.n	8002904 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xfc>
        {
            if (allowSkipFrames)
 8002892:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
 8002896:	b138      	cbz	r0, 80028a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa0>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
 8002898:	1a9b      	subs	r3, r3, r2
 800289a:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
 800289e:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
 80028a0:	bf98      	it	ls
 80028a2:	f102 32ff 	addls.w	r2, r2, #4294967295
 80028a6:	6222      	str	r2, [r4, #32]
                }
            }
            return true;
 80028a8:	2301      	movs	r3, #1
            stream.doDecodeNextFrame = decodeForNextTick(stream);
 80028aa:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
 80028ae:	4630      	mov	r0, r6
 80028b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                    if (stream.skip_frames > 0)
 80028b2:	6a22      	ldr	r2, [r4, #32]
 80028b4:	b162      	cbz	r2, 80028d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xc8>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
 80028b6:	e9d3 7309 	ldrd	r7, r3, [r3, #36]	@ 0x24
 80028ba:	4628      	mov	r0, r5
 80028bc:	4798      	blx	r3
 80028be:	6a21      	ldr	r1, [r4, #32]
 80028c0:	4401      	add	r1, r0
 80028c2:	4628      	mov	r0, r5
 80028c4:	47b8      	blx	r7
                        stream.frameCount += stream.skip_frames;
 80028c6:	68a3      	ldr	r3, [r4, #8]
 80028c8:	6a22      	ldr	r2, [r4, #32]
                        stream.skip_frames = 0;
 80028ca:	6226      	str	r6, [r4, #32]
                        stream.frameCount += stream.skip_frames;
 80028cc:	4413      	add	r3, r2
 80028ce:	60a3      	str	r3, [r4, #8]
                    if (stream.repeat)
 80028d0:	f894 6027 	ldrb.w	r6, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
 80028d4:	682b      	ldr	r3, [r5, #0]
                    if (stream.repeat)
 80028d6:	b126      	cbz	r6, 80028e2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xda>
                            hasMoreFrames = decoder->gotoNextFrame();
 80028d8:	4628      	mov	r0, r5
 80028da:	699b      	ldr	r3, [r3, #24]
 80028dc:	4798      	blx	r3
 80028de:	4606      	mov	r6, r0
 80028e0:	e7c7      	b.n	8002872 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6a>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
 80028e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80028e4:	4628      	mov	r0, r5
 80028e6:	4798      	blx	r3
 80028e8:	682b      	ldr	r3, [r5, #0]
 80028ea:	4607      	mov	r7, r0
 80028ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80028ee:	4628      	mov	r0, r5
 80028f0:	4798      	blx	r3
 80028f2:	4287      	cmp	r7, r0
 80028f4:	d201      	bcs.n	80028fa <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf2>
                            hasMoreFrames = decoder->gotoNextFrame();
 80028f6:	682b      	ldr	r3, [r5, #0]
 80028f8:	e7ee      	b.n	80028d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd0>
                            stream.isPlaying = false;
 80028fa:	f884 6025 	strb.w	r6, [r4, #37]	@ 0x25
 80028fe:	e7b8      	b.n	8002872 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6a>
        bool hasMoreFrames = true;
 8002900:	2601      	movs	r6, #1
 8002902:	e7be      	b.n	8002882 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x7a>
        }
        return false;
 8002904:	2300      	movs	r3, #0
 8002906:	e7d0      	b.n	80028aa <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa2>
        bool hasMoreFrames = true;
 8002908:	2601      	movs	r6, #1
 800290a:	e7d0      	b.n	80028ae <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa6>
 800290c:	08033f58 	.word	0x08033f58
 8002910:	08033f6c 	.word	0x08033f6c
 8002914:	0803409d 	.word	0x0803409d
 8002918:	20082ec4 	.word	0x20082ec4

0800291c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HALGPU2D::beginFrame();
 800291c:	f01e b832 	b.w	8020984 <_ZN8touchgfx8HALGPU2D10beginFrameEv>

08002920 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HALGPU2D::endFrame();
 8002920:	f01e b85c 	b.w	80209dc <_ZN8touchgfx8HALGPU2D8endFrameEv>

08002924 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HALGPU2D::flushFrameBuffer(rect);
 8002924:	f008 ba82 	b.w	800ae2c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002928 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HALGPU2D::blockCopy(dest, src, numBytes);
 8002928:	f008 bbf1 	b.w	800b10e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800292c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
    virtual bool getIsPlaying(const Handle handle)
 800292c:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 800292e:	b131      	cbz	r1, 800293e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x12>
 8002930:	f44f 7191 	mov.w	r1, #290	@ 0x122
 8002934:	4b03      	ldr	r3, [pc, #12]	@ (8002944 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
 8002936:	4a04      	ldr	r2, [pc, #16]	@ (8002948 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
 8002938:	4804      	ldr	r0, [pc, #16]	@ (800294c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
 800293a:	f02f fda5 	bl	8032488 <__assert_func>
    }
 800293e:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
 8002942:	bd08      	pop	{r3, pc}
 8002944:	08033f58 	.word	0x08033f58
 8002948:	080340e2 	.word	0x080340e2
 800294c:	0803409d 	.word	0x0803409d

08002950 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
 8002950:	b510      	push	{r4, lr}
        assert(handle < no_streams);
 8002952:	b131      	cbz	r1, 8002962 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x12>
 8002954:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 8002958:	4b05      	ldr	r3, [pc, #20]	@ (8002970 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
 800295a:	4a06      	ldr	r2, [pc, #24]	@ (8002974 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
 800295c:	4806      	ldr	r0, [pc, #24]	@ (8002978 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x28>)
 800295e:	f02f fd93 	bl	8032488 <__assert_func>
        mjpegDecoders[handle]->getVideoInfo(data);
 8002962:	6840      	ldr	r0, [r0, #4]
 8002964:	4611      	mov	r1, r2
    }
 8002966:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->getVideoInfo(data);
 800296a:	6803      	ldr	r3, [r0, #0]
 800296c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800296e:	4718      	bx	r3
 8002970:	08033f58 	.word	0x08033f58
 8002974:	080341fc 	.word	0x080341fc
 8002978:	0803409d 	.word	0x0803409d

0800297c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
 800297c:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 800297e:	b131      	cbz	r1, 800298e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x12>
 8002980:	f44f 718a 	mov.w	r1, #276	@ 0x114
 8002984:	4b03      	ldr	r3, [pc, #12]	@ (8002994 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
 8002986:	4a04      	ldr	r2, [pc, #16]	@ (8002998 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
 8002988:	4804      	ldr	r0, [pc, #16]	@ (800299c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
 800298a:	f02f fd7d 	bl	8032488 <__assert_func>
    }
 800298e:	68c0      	ldr	r0, [r0, #12]
 8002990:	bd08      	pop	{r3, pc}
 8002992:	bf00      	nop
 8002994:	08033f58 	.word	0x08033f58
 8002998:	0803433a 	.word	0x0803433a
 800299c:	0803409d 	.word	0x0803409d

080029a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
 80029a0:	b570      	push	{r4, r5, r6, lr}
 80029a2:	4604      	mov	r4, r0
        assert(handle < no_streams);
 80029a4:	b129      	cbz	r1, 80029b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x12>
 80029a6:	216e      	movs	r1, #110	@ 0x6e
 80029a8:	4b26      	ldr	r3, [pc, #152]	@ (8002a44 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa4>)
 80029aa:	4a27      	ldr	r2, [pc, #156]	@ (8002a48 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa8>)
 80029ac:	4827      	ldr	r0, [pc, #156]	@ (8002a4c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xac>)
 80029ae:	f02f fd6b 	bl	8032488 <__assert_func>
        switch (cmd)
 80029b2:	2a05      	cmp	r2, #5
 80029b4:	d82b      	bhi.n	8002a0e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
 80029b6:	e8df f002 	tbb	[pc, r2]
 80029ba:	2503      	.short	0x2503
 80029bc:	3f37302b 	.word	0x3f37302b
            if (mjpegDecoders[handle]->hasVideo())
 80029c0:	6840      	ldr	r0, [r0, #4]
 80029c2:	6803      	ldr	r3, [r0, #0]
 80029c4:	691b      	ldr	r3, [r3, #16]
 80029c6:	4798      	blx	r3
 80029c8:	b308      	cbz	r0, 8002a0e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                stream.isPlaying = true;
 80029ca:	2301      	movs	r3, #1
 80029cc:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
                stream.isShowingOneFrame = false;
 80029d0:	2300      	movs	r3, #0
 80029d2:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
                stream.frameCount = 0;
 80029d6:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
 80029d8:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
 80029da:	f894 3027 	ldrb.w	r3, [r4, #39]	@ 0x27
 80029de:	b9b3      	cbnz	r3, 8002a0e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                    MJPEGDecoder* const decoder = mjpegDecoders[handle];
 80029e0:	6864      	ldr	r4, [r4, #4]
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
 80029e2:	6823      	ldr	r3, [r4, #0]
 80029e4:	4620      	mov	r0, r4
 80029e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80029e8:	4798      	blx	r3
 80029ea:	6823      	ldr	r3, [r4, #0]
 80029ec:	4605      	mov	r5, r0
 80029ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80029f0:	4620      	mov	r0, r4
 80029f2:	4798      	blx	r3
 80029f4:	4285      	cmp	r5, r0
 80029f6:	d10a      	bne.n	8002a0e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                        decoder->gotoNextFrame();
 80029f8:	6823      	ldr	r3, [r4, #0]
 80029fa:	4620      	mov	r0, r4
    }
 80029fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
 8002a00:	699b      	ldr	r3, [r3, #24]
 8002a02:	4718      	bx	r3
            stream.isPlaying = false;
 8002a04:	2300      	movs	r3, #0
 8002a06:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
            stream.isShowingOneFrame = false;
 8002a0a:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
    }
 8002a0e:	bd70      	pop	{r4, r5, r6, pc}
            stream.seek_to_frame = param;
 8002a10:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
 8002a12:	2300      	movs	r3, #0
            stream.frameCount = 0;
 8002a14:	60a3      	str	r3, [r4, #8]
            stream.tickCount = 0;
 8002a16:	6123      	str	r3, [r4, #16]
            break;
 8002a18:	e7f9      	b.n	8002a0e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
            stream.seek_to_frame = param;
 8002a1a:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
 8002a1c:	2301      	movs	r3, #1
 8002a1e:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
 8002a22:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8002a26:	e7f4      	b.n	8002a12 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x72>
            stream.isPlaying = false;
 8002a28:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
 8002a2a:	2201      	movs	r2, #1
            stream.isPlaying = false;
 8002a2c:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
            stream.isShowingOneFrame = false;
 8002a30:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
            stream.seek_to_frame = 1;
 8002a34:	61c2      	str	r2, [r0, #28]
 8002a36:	e7ed      	b.n	8002a14 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x74>
            stream.repeat = (param > 0);
 8002a38:	3b00      	subs	r3, #0
 8002a3a:	bf18      	it	ne
 8002a3c:	2301      	movne	r3, #1
 8002a3e:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
 8002a42:	e7e4      	b.n	8002a0e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
 8002a44:	08033f58 	.word	0x08033f58
 8002a48:	0803447f 	.word	0x0803447f
 8002a4c:	0803409d 	.word	0x0803409d

08002a50 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
 8002a50:	b570      	push	{r4, r5, r6, lr}
 8002a52:	4604      	mov	r4, r0
        assert(handle < no_streams);
 8002a54:	460d      	mov	r5, r1
 8002a56:	b129      	cbz	r1, 8002a64 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x14>
 8002a58:	215e      	movs	r1, #94	@ 0x5e
 8002a5a:	4b0d      	ldr	r3, [pc, #52]	@ (8002a90 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x40>)
 8002a5c:	4a0d      	ldr	r2, [pc, #52]	@ (8002a94 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x44>)
 8002a5e:	480e      	ldr	r0, [pc, #56]	@ (8002a98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>)
 8002a60:	f02f fd12 	bl	8032488 <__assert_func>
        mjpegDecoders[handle]->setVideoData(reader);
 8002a64:	6840      	ldr	r0, [r0, #4]
 8002a66:	4611      	mov	r1, r2
 8002a68:	6803      	ldr	r3, [r0, #0]
 8002a6a:	68db      	ldr	r3, [r3, #12]
 8002a6c:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002a6e:	6860      	ldr	r0, [r4, #4]
 8002a70:	6803      	ldr	r3, [r0, #0]
 8002a72:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002a74:	4798      	blx	r3
        setCommand(handle, PAUSE, 0);
 8002a76:	6823      	ldr	r3, [r4, #0]
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002a78:	60e0      	str	r0, [r4, #12]
        setCommand(handle, PAUSE, 0);
 8002a7a:	6a5e      	ldr	r6, [r3, #36]	@ 0x24
 8002a7c:	4629      	mov	r1, r5
 8002a7e:	462b      	mov	r3, r5
 8002a80:	4620      	mov	r0, r4
 8002a82:	46b4      	mov	ip, r6
        stream.doDecodeNextFrame = false;
 8002a84:	f884 5028 	strb.w	r5, [r4, #40]	@ 0x28
        setCommand(handle, PAUSE, 0);
 8002a88:	2201      	movs	r2, #1
    }
 8002a8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
 8002a8e:	4760      	bx	ip
 8002a90:	08033f58 	.word	0x08033f58
 8002a94:	080345e3 	.word	0x080345e3
 8002a98:	0803409d 	.word	0x0803409d

08002a9c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
 8002a9c:	b570      	push	{r4, r5, r6, lr}
 8002a9e:	460d      	mov	r5, r1
 8002aa0:	4604      	mov	r4, r0
 8002aa2:	4611      	mov	r1, r2
 8002aa4:	461a      	mov	r2, r3
        assert(handle < no_streams);
 8002aa6:	b12d      	cbz	r5, 8002ab4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x18>
 8002aa8:	214e      	movs	r1, #78	@ 0x4e
 8002aaa:	4b0d      	ldr	r3, [pc, #52]	@ (8002ae0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x44>)
 8002aac:	4a0d      	ldr	r2, [pc, #52]	@ (8002ae4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x48>)
 8002aae:	480e      	ldr	r0, [pc, #56]	@ (8002ae8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4c>)
 8002ab0:	f02f fcea 	bl	8032488 <__assert_func>
        mjpegDecoders[handle]->setVideoData(movie, length);
 8002ab4:	6840      	ldr	r0, [r0, #4]
 8002ab6:	6803      	ldr	r3, [r0, #0]
 8002ab8:	689b      	ldr	r3, [r3, #8]
 8002aba:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002abc:	6860      	ldr	r0, [r4, #4]
 8002abe:	6803      	ldr	r3, [r0, #0]
 8002ac0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ac2:	4798      	blx	r3
        setCommand(handle, PAUSE, 0);
 8002ac4:	6823      	ldr	r3, [r4, #0]
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002ac6:	60e0      	str	r0, [r4, #12]
        setCommand(handle, PAUSE, 0);
 8002ac8:	6a5e      	ldr	r6, [r3, #36]	@ 0x24
 8002aca:	4629      	mov	r1, r5
 8002acc:	462b      	mov	r3, r5
 8002ace:	4620      	mov	r0, r4
 8002ad0:	46b4      	mov	ip, r6
        stream.doDecodeNextFrame = false;
 8002ad2:	f884 5028 	strb.w	r5, [r4, #40]	@ 0x28
        setCommand(handle, PAUSE, 0);
 8002ad6:	2201      	movs	r2, #1
    }
 8002ad8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
 8002adc:	4760      	bx	ip
 8002ade:	bf00      	nop
 8002ae0:	08033f58 	.word	0x08033f58
 8002ae4:	08034719 	.word	0x08034719
 8002ae8:	0803409d 	.word	0x0803409d

08002aec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
 8002aec:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 8002aee:	b129      	cbz	r1, 8002afc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x10>
 8002af0:	2140      	movs	r1, #64	@ 0x40
 8002af2:	4b05      	ldr	r3, [pc, #20]	@ (8002b08 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
 8002af4:	4a05      	ldr	r2, [pc, #20]	@ (8002b0c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
 8002af6:	4806      	ldr	r0, [pc, #24]	@ (8002b10 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
 8002af8:	f02f fcc6 	bl	8032488 <__assert_func>
        stream.frame_rate_video = video_frames;
 8002afc:	e9c0 3205 	strd	r3, r2, [r0, #20]
        stream.frameCount = 0;
 8002b00:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
 8002b02:	6101      	str	r1, [r0, #16]
    }
 8002b04:	bd08      	pop	{r3, pc}
 8002b06:	bf00      	nop
 8002b08:	08033f58 	.word	0x08033f58
 8002b0c:	08034884 	.word	0x08034884
 8002b10:	0803409d 	.word	0x0803409d

08002b14 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
 8002b14:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8002b18:	4604      	mov	r4, r0
 8002b1a:	4615      	mov	r5, r2
 8002b1c:	461f      	mov	r7, r3
        assert(handle < no_streams);
 8002b1e:	b129      	cbz	r1, 8002b2c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x18>
 8002b20:	21e9      	movs	r1, #233	@ 0xe9
 8002b22:	4b18      	ldr	r3, [pc, #96]	@ (8002b84 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
 8002b24:	4a18      	ldr	r2, [pc, #96]	@ (8002b88 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
 8002b26:	4819      	ldr	r0, [pc, #100]	@ (8002b8c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
 8002b28:	f02f fcae 	bl	8032488 <__assert_func>
        if (mjpegDecoders[handle]->hasVideo())
 8002b2c:	6840      	ldr	r0, [r0, #4]
 8002b2e:	6803      	ldr	r3, [r0, #0]
 8002b30:	691b      	ldr	r3, [r3, #16]
 8002b32:	4798      	blx	r3
 8002b34:	b310      	cbz	r0, 8002b7c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x68>
        return instance;
 8002b36:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 8002b94 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x80>
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
 8002b3a:	2101      	movs	r1, #1
 8002b3c:	f8d8 0000 	ldr.w	r0, [r8]
 8002b40:	f008 ff7e 	bl	800ba40 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8002b44:	4606      	mov	r6, r0
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
 8002b46:	4639      	mov	r1, r7
 8002b48:	4668      	mov	r0, sp
 8002b4a:	f00b fb6b 	bl	800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
 8002b4e:	4b10      	ldr	r3, [pc, #64]	@ (8002b90 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x7c>)
 8002b50:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8002b54:	881b      	ldrh	r3, [r3, #0]
 8002b56:	f9bd 2000 	ldrsh.w	r2, [sp]
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
 8002b5a:	6860      	ldr	r0, [r4, #4]
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
 8002b5c:	fb03 2201 	mla	r2, r3, r1, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
 8002b60:	6801      	ldr	r1, [r0, #0]
 8002b62:	eb06 0242 	add.w	r2, r6, r2, lsl #1
 8002b66:	69cc      	ldr	r4, [r1, #28]
 8002b68:	4629      	mov	r1, r5
 8002b6a:	47a0      	blx	r4
 8002b6c:	f8d8 0000 	ldr.w	r0, [r8]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
 8002b70:	6803      	ldr	r3, [r0, #0]
 8002b72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    }
 8002b74:	b002      	add	sp, #8
 8002b76:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
 8002b7a:	4718      	bx	r3
    }
 8002b7c:	b002      	add	sp, #8
 8002b7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002b82:	bf00      	nop
 8002b84:	08033f58 	.word	0x08033f58
 8002b88:	080349d0 	.word	0x080349d0
 8002b8c:	0803409d 	.word	0x0803409d
 8002b90:	20082ebe 	.word	0x20082ebe
 8002b94:	20082ec4 	.word	0x20082ec4

08002b98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
 8002b98:	b508      	push	{r3, lr}
 8002b9a:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
 8002b9c:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
 8002ba0:	b130      	cbz	r0, 8002bb0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x18>
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
 8002ba2:	f240 116b 	movw	r1, #363	@ 0x16b
 8002ba6:	4b07      	ldr	r3, [pc, #28]	@ (8002bc4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
 8002ba8:	4a07      	ldr	r2, [pc, #28]	@ (8002bc8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
 8002baa:	4808      	ldr	r0, [pc, #32]	@ (8002bcc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
 8002bac:	f02f fc6c 	bl	8032488 <__assert_func>
        streams[handle].isActive = true;
 8002bb0:	2201      	movs	r2, #1
 8002bb2:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
 8002bb6:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
 8002bba:	86c8      	strh	r0, [r1, #54]	@ 0x36
        bufferHeight = height;
 8002bbc:	8708      	strh	r0, [r1, #56]	@ 0x38
        buffer = videoBuffer;
 8002bbe:	6308      	str	r0, [r1, #48]	@ 0x30
    }
 8002bc0:	bd08      	pop	{r3, pc}
 8002bc2:	bf00      	nop
 8002bc4:	08034b17 	.word	0x08034b17
 8002bc8:	08034b47 	.word	0x08034b47
 8002bcc:	0803409d 	.word	0x0803409d

08002bd0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002bd0:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8002bd4:	4b0a      	ldr	r3, [pc, #40]	@ (8002c00 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x30>)
 8002bd6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __ASM volatile ("dsb 0xF":::"memory");
 8002bda:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002bde:	f3bf 8f6f 	isb	sy
 8002be2:	2280      	movs	r2, #128	@ 0x80
 8002be4:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  __ASM volatile ("dsb 0xF":::"memory");
 8002be8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002bec:	f3bf 8f6f 	isb	sy
 8002bf0:	2210      	movs	r2, #16
 8002bf2:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  __ASM volatile ("dsb 0xF":::"memory");
 8002bf6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002bfa:	f3bf 8f6f 	isb	sy
}
 8002bfe:	4770      	bx	lr
 8002c00:	e000e100 	.word	0xe000e100

08002c04 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002c04:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8002c08:	4b03      	ldr	r3, [pc, #12]	@ (8002c18 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x14>)
 8002c0a:	60da      	str	r2, [r3, #12]
 8002c0c:	2280      	movs	r2, #128	@ 0x80
 8002c0e:	611a      	str	r2, [r3, #16]
 8002c10:	2210      	movs	r2, #16
 8002c12:	611a      	str	r2, [r3, #16]
}
 8002c14:	4770      	bx	lr
 8002c16:	bf00      	nop
 8002c18:	e000e100 	.word	0xe000e100

08002c1c <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8002c1c:	b510      	push	{r4, lr}
    static GPU2DVectorRenderer renderer;
 8002c1e:	4c08      	ldr	r4, [pc, #32]	@ (8002c40 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x24>)
 8002c20:	e8d4 3faf 	lda	r3, [r4]
 8002c24:	07db      	lsls	r3, r3, #31
 8002c26:	d409      	bmi.n	8002c3c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x20>
 8002c28:	4620      	mov	r0, r4
 8002c2a:	f02e fa56 	bl	80310da <__cxa_guard_acquire>
 8002c2e:	b128      	cbz	r0, 8002c3c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x20>
 8002c30:	4804      	ldr	r0, [pc, #16]	@ (8002c44 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x28>)
 8002c32:	f02f fc47 	bl	80324c4 <atexit>
 8002c36:	4620      	mov	r0, r4
 8002c38:	f02e fa5b 	bl	80310f2 <__cxa_guard_release>
}
 8002c3c:	4802      	ldr	r0, [pc, #8]	@ (8002c48 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x2c>)
 8002c3e:	bd10      	pop	{r4, pc}
 8002c40:	2000b8a4 	.word	0x2000b8a4
 8002c44:	08002731 	.word	0x08002731
 8002c48:	20000044 	.word	0x20000044

08002c4c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002c4c:	b510      	push	{r4, lr}
 8002c4e:	4c14      	ldr	r4, [pc, #80]	@ (8002ca0 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002c50:	6823      	ldr	r3, [r4, #0]
 8002c52:	b323      	cbz	r3, 8002c9e <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002c54:	4b13      	ldr	r3, [pc, #76]	@ (8002ca4 <HAL_LTDC_LineEventCallback+0x58>)
 8002c56:	4a14      	ldr	r2, [pc, #80]	@ (8002ca8 <HAL_LTDC_LineEventCallback+0x5c>)
 8002c58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c5a:	8811      	ldrh	r1, [r2, #0]
 8002c5c:	428b      	cmp	r3, r1
 8002c5e:	d113      	bne.n	8002c88 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002c60:	4b12      	ldr	r3, [pc, #72]	@ (8002cac <HAL_LTDC_LineEventCallback+0x60>)
 8002c62:	8819      	ldrh	r1, [r3, #0]
 8002c64:	f003 fc2e 	bl	80064c4 <HAL_LTDC_ProgramLineEvent>
 8002c68:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002c6a:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 8002c6e:	3301      	adds	r3, #1
 8002c70:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002c74:	f7ff f9ca 	bl	800200c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002c78:	6820      	ldr	r0, [r4, #0]
 8002c7a:	f008 fe7f 	bl	800b97c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002c7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002c82:	2000      	movs	r0, #0
 8002c84:	f7fe ba64 	b.w	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002c88:	f003 fc1c 	bl	80064c4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002c8c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8002c8e:	6803      	ldr	r3, [r0, #0]
 8002c90:	6a1b      	ldr	r3, [r3, #32]
 8002c92:	4798      	blx	r3
    }
 8002c94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002c98:	2000      	movs	r0, #0
 8002c9a:	f7fe ba73 	b.w	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002c9e:	bd10      	pop	{r4, pc}
 8002ca0:	20082ec4 	.word	0x20082ec4
 8002ca4:	40016800 	.word	0x40016800
 8002ca8:	2000b8a2 	.word	0x2000b8a2
 8002cac:	2000b8a0 	.word	0x2000b8a0

08002cb0 <_GLOBAL__sub_I_mjpegdecoder1>:
}
 8002cb0:	b508      	push	{r3, lr}
HardwareMJPEGDecoder mjpegdecoder1;
 8002cb2:	480b      	ldr	r0, [pc, #44]	@ (8002ce0 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
 8002cb4:	f7fe fbac 	bl	8001410 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
 8002cb8:	4b0a      	ldr	r3, [pc, #40]	@ (8002ce4 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
 8002cba:	4a0b      	ldr	r2, [pc, #44]	@ (8002ce8 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
        Stream()
 8002cbc:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
 8002cc0:	601a      	str	r2, [r3, #0]
 8002cc2:	2201      	movs	r2, #1
 8002cc4:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
 8002cc8:	2200      	movs	r2, #0
            : frameCount(0), frameNumber(0), tickCount(0),
 8002cca:	e9c3 2201 	strd	r2, r2, [r3, #4]
        Stream()
 8002cce:	6259      	str	r1, [r3, #36]	@ 0x24
            : frameCount(0), frameNumber(0), tickCount(0),
 8002cd0:	e9c3 2203 	strd	r2, r2, [r3, #12]
              frame_rate_video(0), frame_rate_ticks(0),
 8002cd4:	e9c3 2205 	strd	r2, r2, [r3, #20]
              seek_to_frame(0),
 8002cd8:	61da      	str	r2, [r3, #28]
              doDecodeNextFrame(false)
 8002cda:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
}
 8002cde:	bd08      	pop	{r3, pc}
 8002ce0:	2000b8d8 	.word	0x2000b8d8
 8002ce4:	2000b8a8 	.word	0x2000b8a8
 8002ce8:	08034c68 	.word	0x08034c68

08002cec <HAL_GPU2D_CommandListCpltCallback>:
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */
{
    /* Prevent unused argument(s) compilation warning */
    UNUSED(hgpu2d);

    last_cl_id = CmdListID;
 8002cec:	4b02      	ldr	r3, [pc, #8]	@ (8002cf8 <HAL_GPU2D_CommandListCpltCallback+0xc>)
 8002cee:	6019      	str	r1, [r3, #0]

    /* Return a token back to a semaphore */
    osSemaphoreRelease(nema_irq_sem);
 8002cf0:	4b02      	ldr	r3, [pc, #8]	@ (8002cfc <HAL_GPU2D_CommandListCpltCallback+0x10>)
 8002cf2:	6818      	ldr	r0, [r3, #0]
 8002cf4:	f005 bf50 	b.w	8008b98 <osSemaphoreRelease>
 8002cf8:	20000048 	.word	0x20000048
 8002cfc:	2000b920 	.word	0x2000b920

08002d00 <nema_reg_read>:

    return error_code;
}

uint32_t nema_reg_read(uint32_t reg)
{
 8002d00:	4601      	mov	r1, r0
    return HAL_GPU2D_ReadRegister(&hgpu2d, reg);
 8002d02:	4801      	ldr	r0, [pc, #4]	@ (8002d08 <nema_reg_read+0x8>)
 8002d04:	f001 bed8 	b.w	8004ab8 <HAL_GPU2D_ReadRegister>
 8002d08:	20000570 	.word	0x20000570

08002d0c <nema_reg_write>:
}

void nema_reg_write(uint32_t reg, uint32_t value)
{
 8002d0c:	460a      	mov	r2, r1
    HAL_GPU2D_WriteRegister(&hgpu2d, reg, value);
 8002d0e:	4601      	mov	r1, r0
 8002d10:	4801      	ldr	r0, [pc, #4]	@ (8002d18 <nema_reg_write+0xc>)
 8002d12:	f001 bed4 	b.w	8004abe <HAL_GPU2D_WriteRegister>
 8002d16:	bf00      	nop
 8002d18:	20000570 	.word	0x20000570

08002d1c <nema_wait_irq>:
}

int nema_wait_irq(void)
{
 8002d1c:	b508      	push	{r3, lr}
    /* Wait indefinitely for a free semaphore */
    osSemaphoreAcquire(nema_irq_sem, osWaitForever);
 8002d1e:	4b04      	ldr	r3, [pc, #16]	@ (8002d30 <nema_wait_irq+0x14>)
 8002d20:	f04f 31ff 	mov.w	r1, #4294967295
 8002d24:	6818      	ldr	r0, [r3, #0]
 8002d26:	f005 ff09 	bl	8008b3c <osSemaphoreAcquire>

    return 0;
}
 8002d2a:	2000      	movs	r0, #0
 8002d2c:	bd08      	pop	{r3, pc}
 8002d2e:	bf00      	nop
 8002d30:	2000b920 	.word	0x2000b920

08002d34 <nema_wait_irq_cl>:

int nema_wait_irq_cl(int cl_id)
{
 8002d34:	b538      	push	{r3, r4, r5, lr}
 8002d36:	4604      	mov	r4, r0
    while (last_cl_id < cl_id)
 8002d38:	4d04      	ldr	r5, [pc, #16]	@ (8002d4c <nema_wait_irq_cl+0x18>)
 8002d3a:	682b      	ldr	r3, [r5, #0]
 8002d3c:	42a3      	cmp	r3, r4
 8002d3e:	db01      	blt.n	8002d44 <nema_wait_irq_cl+0x10>
    {
        (void)nema_wait_irq();
    }

    return 0;
}
 8002d40:	2000      	movs	r0, #0
 8002d42:	bd38      	pop	{r3, r4, r5, pc}
        (void)nema_wait_irq();
 8002d44:	f7ff ffea 	bl	8002d1c <nema_wait_irq>
 8002d48:	e7f7      	b.n	8002d3a <nema_wait_irq_cl+0x6>
 8002d4a:	bf00      	nop
 8002d4c:	20000048 	.word	0x20000048

08002d50 <nema_host_free>:
    return 0;
}

void nema_host_free(void* ptr)
{
    tsi_free(ptr);
 8002d50:	f01a bce6 	b.w	801d720 <tsi_free>

08002d54 <nema_host_malloc>:
}

void* nema_host_malloc(unsigned size)
{
 8002d54:	4601      	mov	r1, r0
    return tsi_malloc(size);
 8002d56:	2000      	movs	r0, #0
 8002d58:	f01a bc84 	b.w	801d664 <tsi_malloc_pool>

08002d5c <nema_buffer_create>:
}

nema_buffer_t nema_buffer_create(int size)
{
 8002d5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002d5e:	4604      	mov	r4, r0
    nema_buffer_t bo;
    memset(&bo, 0, sizeof(bo));
 8002d60:	2000      	movs	r0, #0
{
 8002d62:	460e      	mov	r6, r1
    memset(&bo, 0, sizeof(bo));
 8002d64:	9001      	str	r0, [sp, #4]
    bo.base_virt = tsi_malloc(size);
 8002d66:	f01a fc7d 	bl	801d664 <tsi_malloc_pool>
    memset(&bo, 0, sizeof(bo));
 8002d6a:	466d      	mov	r5, sp
    bo.base_phys = (uint32_t)bo.base_virt;
 8002d6c:	e9cd 0002 	strd	r0, r0, [sp, #8]
    bo.size      = size;
 8002d70:	9600      	str	r6, [sp, #0]
    assert(bo.base_virt != 0 && "Unable to allocate memory in nema_buffer_create");
 8002d72:	b928      	cbnz	r0, 8002d80 <nema_buffer_create+0x24>
 8002d74:	21a6      	movs	r1, #166	@ 0xa6
 8002d76:	4b06      	ldr	r3, [pc, #24]	@ (8002d90 <nema_buffer_create+0x34>)
 8002d78:	4a06      	ldr	r2, [pc, #24]	@ (8002d94 <nema_buffer_create+0x38>)
 8002d7a:	4807      	ldr	r0, [pc, #28]	@ (8002d98 <nema_buffer_create+0x3c>)
 8002d7c:	f02f fb84 	bl	8032488 <__assert_func>

    return bo;
 8002d80:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002d84:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 8002d88:	4620      	mov	r0, r4
 8002d8a:	b004      	add	sp, #16
 8002d8c:	bd70      	pop	{r4, r5, r6, pc}
 8002d8e:	bf00      	nop
 8002d90:	08034ca0 	.word	0x08034ca0
 8002d94:	08034de8 	.word	0x08034de8
 8002d98:	08034ce7 	.word	0x08034ce7

08002d9c <nema_sys_init>:
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002d9c:	2101      	movs	r1, #1
{
 8002d9e:	b5f0      	push	{r4, r5, r6, r7, lr}
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002da0:	2200      	movs	r2, #0
 8002da2:	4608      	mov	r0, r1
{
 8002da4:	b087      	sub	sp, #28
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002da6:	f005 fe7a 	bl	8008a9e <osSemaphoreNew>
 8002daa:	4b21      	ldr	r3, [pc, #132]	@ (8002e30 <nema_sys_init+0x94>)
 8002dac:	6018      	str	r0, [r3, #0]
    assert(nema_irq_sem != NULL);
 8002dae:	b928      	cbnz	r0, 8002dbc <nema_sys_init+0x20>
 8002db0:	2156      	movs	r1, #86	@ 0x56
 8002db2:	4b20      	ldr	r3, [pc, #128]	@ (8002e34 <nema_sys_init+0x98>)
 8002db4:	4a20      	ldr	r2, [pc, #128]	@ (8002e38 <nema_sys_init+0x9c>)
    assert(error_code == 0);
 8002db6:	4821      	ldr	r0, [pc, #132]	@ (8002e3c <nema_sys_init+0xa0>)
 8002db8:	f02f fb66 	bl	8032488 <__assert_func>
    error_code = tsi_malloc_init_pool_aligned(0, (void*)nemagfx_pool_mem, (uintptr_t)nemagfx_pool_mem, NEMAGFX_MEM_POOL_SIZE, 1, 8);
 8002dbc:	2701      	movs	r7, #1
 8002dbe:	2408      	movs	r4, #8
 8002dc0:	4a1f      	ldr	r2, [pc, #124]	@ (8002e40 <nema_sys_init+0xa4>)
 8002dc2:	f44f 537c 	mov.w	r3, #16128	@ 0x3f00
 8002dc6:	4611      	mov	r1, r2
 8002dc8:	2000      	movs	r0, #0
 8002dca:	e9cd 7400 	strd	r7, r4, [sp]
 8002dce:	f01a fbed 	bl	801d5ac <tsi_malloc_init_pool_aligned>
    assert(error_code == 0);
 8002dd2:	b118      	cbz	r0, 8002ddc <nema_sys_init+0x40>
 8002dd4:	215a      	movs	r1, #90	@ 0x5a
 8002dd6:	4b1b      	ldr	r3, [pc, #108]	@ (8002e44 <nema_sys_init+0xa8>)
 8002dd8:	4a17      	ldr	r2, [pc, #92]	@ (8002e38 <nema_sys_init+0x9c>)
 8002dda:	e7ec      	b.n	8002db6 <nema_sys_init+0x1a>
    error_code = tsi_malloc_init_pool_aligned(1, (void*)nemagfx_stencil_buffer_mem, (uintptr_t)nemagfx_stencil_buffer_mem, NEMAGFX_STENCIL_POOL_SIZE, 1, 8);
 8002ddc:	4a1a      	ldr	r2, [pc, #104]	@ (8002e48 <nema_sys_init+0xac>)
 8002dde:	f44f 23be 	mov.w	r3, #389120	@ 0x5f000
 8002de2:	4611      	mov	r1, r2
 8002de4:	4638      	mov	r0, r7
 8002de6:	e9cd 7400 	strd	r7, r4, [sp]
 8002dea:	f01a fbdf 	bl	801d5ac <tsi_malloc_init_pool_aligned>
    assert(error_code == 0);
 8002dee:	4606      	mov	r6, r0
 8002df0:	b118      	cbz	r0, 8002dfa <nema_sys_init+0x5e>
 8002df2:	215c      	movs	r1, #92	@ 0x5c
 8002df4:	4b13      	ldr	r3, [pc, #76]	@ (8002e44 <nema_sys_init+0xa8>)
 8002df6:	4a10      	ldr	r2, [pc, #64]	@ (8002e38 <nema_sys_init+0x9c>)
 8002df8:	e7dd      	b.n	8002db6 <nema_sys_init+0x1a>
    ring_buffer_str.bo = nema_buffer_create(RING_SIZE);
 8002dfa:	ad02      	add	r5, sp, #8
 8002dfc:	4c13      	ldr	r4, [pc, #76]	@ (8002e4c <nema_sys_init+0xb0>)
 8002dfe:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002e02:	4628      	mov	r0, r5
 8002e04:	f7ff ffaa 	bl	8002d5c <nema_buffer_create>
 8002e08:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002e0c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    assert(ring_buffer_str.bo.base_virt);
 8002e10:	b91a      	cbnz	r2, 8002e1a <nema_sys_init+0x7e>
 8002e12:	2160      	movs	r1, #96	@ 0x60
 8002e14:	4b0e      	ldr	r3, [pc, #56]	@ (8002e50 <nema_sys_init+0xb4>)
 8002e16:	4a08      	ldr	r2, [pc, #32]	@ (8002e38 <nema_sys_init+0x9c>)
 8002e18:	e7cd      	b.n	8002db6 <nema_sys_init+0x1a>
    error_code = nema_rb_init(&ring_buffer_str, 1);
 8002e1a:	4639      	mov	r1, r7
 8002e1c:	4620      	mov	r0, r4
 8002e1e:	f00d fbf5 	bl	801060c <nema_rb_init>
    if (error_code < 0)
 8002e22:	2800      	cmp	r0, #0
    last_cl_id = 0;
 8002e24:	bfa4      	itt	ge
 8002e26:	4b0b      	ldrge	r3, [pc, #44]	@ (8002e54 <nema_sys_init+0xb8>)
 8002e28:	601e      	strge	r6, [r3, #0]
}
 8002e2a:	b007      	add	sp, #28
 8002e2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e2e:	bf00      	nop
 8002e30:	2000b920 	.word	0x2000b920
 8002e34:	08034d42 	.word	0x08034d42
 8002e38:	08034dfb 	.word	0x08034dfb
 8002e3c:	08034ce7 	.word	0x08034ce7
 8002e40:	2006a93c 	.word	0x2006a93c
 8002e44:	08034d57 	.word	0x08034d57
 8002e48:	2000b93c 	.word	0x2000b93c
 8002e4c:	2000b924 	.word	0x2000b924
 8002e50:	08034d67 	.word	0x08034d67
 8002e54:	20000048 	.word	0x20000048

08002e58 <nema_buffer_create_pool>:

nema_buffer_t nema_buffer_create_pool(int pool, int size)
{
 8002e58:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    nema_buffer_t bo;
    memset(&bo, 0, sizeof(bo));
 8002e5a:	2300      	movs	r3, #0
{
 8002e5c:	4604      	mov	r4, r0
 8002e5e:	4608      	mov	r0, r1
    bo.base_virt = tsi_malloc_pool(pool, size);
 8002e60:	4611      	mov	r1, r2
{
 8002e62:	4616      	mov	r6, r2
    memset(&bo, 0, sizeof(bo));
 8002e64:	9301      	str	r3, [sp, #4]
    bo.base_virt = tsi_malloc_pool(pool, size);
 8002e66:	f01a fbfd 	bl	801d664 <tsi_malloc_pool>
    memset(&bo, 0, sizeof(bo));
 8002e6a:	466d      	mov	r5, sp
    bo.base_phys = (uint32_t)bo.base_virt;
 8002e6c:	e9cd 0002 	strd	r0, r0, [sp, #8]
    bo.size      = size;
 8002e70:	9600      	str	r6, [sp, #0]
    bo.fd        = 0;
    assert(bo.base_virt != 0 && "Unable to allocate memory in nema_buffer_create_pool");
 8002e72:	b928      	cbnz	r0, 8002e80 <nema_buffer_create_pool+0x28>
 8002e74:	21b3      	movs	r1, #179	@ 0xb3
 8002e76:	4b06      	ldr	r3, [pc, #24]	@ (8002e90 <nema_buffer_create_pool+0x38>)
 8002e78:	4a06      	ldr	r2, [pc, #24]	@ (8002e94 <nema_buffer_create_pool+0x3c>)
 8002e7a:	4807      	ldr	r0, [pc, #28]	@ (8002e98 <nema_buffer_create_pool+0x40>)
 8002e7c:	f02f fb04 	bl	8032488 <__assert_func>

    return bo;
 8002e80:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002e84:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 8002e88:	4620      	mov	r0, r4
 8002e8a:	b004      	add	sp, #16
 8002e8c:	bd70      	pop	{r4, r5, r6, pc}
 8002e8e:	bf00      	nop
 8002e90:	08034d84 	.word	0x08034d84
 8002e94:	08034dd0 	.word	0x08034dd0
 8002e98:	08034ce7 	.word	0x08034ce7

08002e9c <nema_buffer_map>:

void* nema_buffer_map(nema_buffer_t* bo)
{
    return bo->base_virt;
}
 8002e9c:	6880      	ldr	r0, [r0, #8]
 8002e9e:	4770      	bx	lr

08002ea0 <nema_buffer_destroy>:
    UNUSED(bo);
}

void nema_buffer_destroy(nema_buffer_t* bo)
{
    if (bo->fd == -1)
 8002ea0:	6843      	ldr	r3, [r0, #4]
{
 8002ea2:	b510      	push	{r4, lr}
    if (bo->fd == -1)
 8002ea4:	3301      	adds	r3, #1
{
 8002ea6:	4604      	mov	r4, r0
    if (bo->fd == -1)
 8002ea8:	d009      	beq.n	8002ebe <nema_buffer_destroy+0x1e>
    {
        return; /* Buffer weren't allocated! */
    }

    tsi_free(bo->base_virt);
 8002eaa:	6880      	ldr	r0, [r0, #8]
 8002eac:	f01a fc38 	bl	801d720 <tsi_free>

    bo->base_virt = (void*)0;
 8002eb0:	2300      	movs	r3, #0
    bo->base_phys = 0;
 8002eb2:	e9c4 3302 	strd	r3, r3, [r4, #8]
    bo->size      = 0;
 8002eb6:	6023      	str	r3, [r4, #0]
    bo->fd        = -1; /* Buffer not allocated */
 8002eb8:	f04f 33ff 	mov.w	r3, #4294967295
 8002ebc:	6063      	str	r3, [r4, #4]
}
 8002ebe:	bd10      	pop	{r4, pc}

08002ec0 <nema_buffer_flush>:
uintptr_t nema_buffer_phys(nema_buffer_t* bo)
{
    return bo->base_phys;
}

void nema_buffer_flush(nema_buffer_t* bo)
 8002ec0:	4770      	bx	lr

08002ec2 <nema_mutex_lock>:
    /* Prevent unused argument(s) compilation warning */
    UNUSED(mutex_id);
    /* USER CODE END nema_mutex_lock */

    return retval;
}
 8002ec2:	2000      	movs	r0, #0
 8002ec4:	4770      	bx	lr

08002ec6 <nema_mutex_unlock>:

int nema_mutex_unlock(int mutex_id)
 8002ec6:	2000      	movs	r0, #0
 8002ec8:	4770      	bx	lr

08002eca <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002eca:	4770      	bx	lr

08002ecc <_ZN23ApplicationFontProviderD0Ev>:
 8002ecc:	b510      	push	{r4, lr}
 8002ece:	4604      	mov	r4, r0
 8002ed0:	2104      	movs	r1, #4
 8002ed2:	f02e f900 	bl	80310d6 <_ZdlPvj>
 8002ed6:	4620      	mov	r0, r4
 8002ed8:	bd10      	pop	{r4, pc}

08002eda <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002eda:	2901      	cmp	r1, #1
{
 8002edc:	b508      	push	{r3, lr}
    switch (typography)
 8002ede:	d006      	beq.n	8002eee <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002ee0:	2902      	cmp	r1, #2
 8002ee2:	d008      	beq.n	8002ef6 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002ee4:	b959      	cbnz	r1, 8002efe <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002ee6:	f000 fc4b 	bl	8003780 <_ZN17TypedTextDatabase8getFontsEv>
 8002eea:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002eec:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002eee:	f000 fc47 	bl	8003780 <_ZN17TypedTextDatabase8getFontsEv>
 8002ef2:	6840      	ldr	r0, [r0, #4]
 8002ef4:	e7fa      	b.n	8002eec <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002ef6:	f000 fc43 	bl	8003780 <_ZN17TypedTextDatabase8getFontsEv>
 8002efa:	6880      	ldr	r0, [r0, #8]
 8002efc:	e7f6      	b.n	8002eec <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002efe:	2000      	movs	r0, #0
 8002f00:	e7f4      	b.n	8002eec <_ZN23ApplicationFontProvider7getFontEt+0x12>
	...

08002f04 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002f04:	4800      	ldr	r0, [pc, #0]	@ (8002f08 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002f06:	4770      	bx	lr
 8002f08:	08034e20 	.word	0x08034e20

08002f0c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002f0c:	2004      	movs	r0, #4
 8002f0e:	4770      	bx	lr

08002f10 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002f10:	b513      	push	{r0, r1, r4, lr}
 8002f12:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002f14:	b151      	cbz	r1, 8002f2c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f16:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002f18:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002f1a:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f1e:	aa01      	add	r2, sp, #4
 8002f20:	689c      	ldr	r4, [r3, #8]
 8002f22:	f10d 0303 	add.w	r3, sp, #3
 8002f26:	47a0      	blx	r4
        return glyph;
    }
 8002f28:	b002      	add	sp, #8
 8002f2a:	bd10      	pop	{r4, pc}
            return 0;
 8002f2c:	4608      	mov	r0, r1
 8002f2e:	e7fb      	b.n	8002f28 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002f30 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002f30:	89c0      	ldrh	r0, [r0, #14]
 8002f32:	4770      	bx	lr

08002f34 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002f34:	8a00      	ldrh	r0, [r0, #16]
 8002f36:	4770      	bx	lr

08002f38 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002f38:	88c0      	ldrh	r0, [r0, #6]
 8002f3a:	4770      	bx	lr

08002f3c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002f3c:	8880      	ldrh	r0, [r0, #4]
 8002f3e:	4770      	bx	lr

08002f40 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002f40:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f42:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002f46:	4770      	bx	lr

08002f48 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002f48:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f4a:	09c0      	lsrs	r0, r0, #7
 8002f4c:	4770      	bx	lr

08002f4e <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002f4e:	2000      	movs	r0, #0
 8002f50:	4770      	bx	lr
	...

08002f54 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002f54:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002f5c <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002f58:	4770      	bx	lr
 8002f5a:	bf00      	nop
 8002f5c:	00000000 	.word	0x00000000

08002f60 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002f60:	4770      	bx	lr

08002f62 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002f62:	4770      	bx	lr

08002f64 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002f64:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002f68:	6808      	ldr	r0, [r1, #0]
 8002f6a:	6849      	ldr	r1, [r1, #4]
 8002f6c:	c303      	stmia	r3!, {r0, r1}
    }
 8002f6e:	4770      	bx	lr

08002f70 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002f70:	4770      	bx	lr

08002f72 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002f72:	4770      	bx	lr

08002f74 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002f74:	6041      	str	r1, [r0, #4]
    }
 8002f76:	4770      	bx	lr

08002f78 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002f78:	4770      	bx	lr
	...

08002f7c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002f7c:	4b06      	ldr	r3, [pc, #24]	@ (8002f98 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002f7e:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002f82:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002f86:	2300      	movs	r3, #0
 8002f88:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// GameScreen1

void FrontendApplicationBase::gotoGameScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGameScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002f8c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002f90:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoGameScreen1ScreenNoTransition();
    }
 8002f94:	4770      	bx	lr
 8002f96:	bf00      	nop
 8002f98:	0800303d 	.word	0x0800303d

08002f9c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002f9c:	2301      	movs	r3, #1
 8002f9e:	7203      	strb	r3, [r0, #8]
    }
 8002fa0:	4770      	bx	lr

08002fa2 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002fa2:	4770      	bx	lr

08002fa4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002fa4:	4770      	bx	lr

08002fa6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002fa6:	4603      	mov	r3, r0
 8002fa8:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002faa:	6841      	ldr	r1, [r0, #4]
 8002fac:	68c2      	ldr	r2, [r0, #12]
 8002fae:	689b      	ldr	r3, [r3, #8]
 8002fb0:	1054      	asrs	r4, r2, #1
 8002fb2:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002fb6:	07d2      	lsls	r2, r2, #31
 8002fb8:	bf48      	it	mi
 8002fba:	590a      	ldrmi	r2, [r1, r4]
    }
 8002fbc:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002fc0:	bf48      	it	mi
 8002fc2:	58d3      	ldrmi	r3, [r2, r3]
 8002fc4:	4718      	bx	r3

08002fc6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002fc6:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002fc8:	6840      	ldr	r0, [r0, #4]
 8002fca:	b130      	cbz	r0, 8002fda <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002fcc:	689a      	ldr	r2, [r3, #8]
 8002fce:	b91a      	cbnz	r2, 8002fd8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002fd0:	68d8      	ldr	r0, [r3, #12]
 8002fd2:	f000 0001 	and.w	r0, r0, #1
 8002fd6:	4770      	bx	lr
 8002fd8:	2001      	movs	r0, #1
    }
 8002fda:	4770      	bx	lr

08002fdc <_ZN8touchgfx12NoTransitionD0Ev>:
 8002fdc:	b510      	push	{r4, lr}
 8002fde:	4604      	mov	r4, r0
 8002fe0:	210c      	movs	r1, #12
 8002fe2:	f02e f878 	bl	80310d6 <_ZdlPvj>
 8002fe6:	4620      	mov	r0, r4
 8002fe8:	bd10      	pop	{r4, pc}

08002fea <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002fea:	b510      	push	{r4, lr}
 8002fec:	4604      	mov	r4, r0
 8002fee:	2110      	movs	r1, #16
 8002ff0:	f02e f871 	bl	80310d6 <_ZdlPvj>
 8002ff4:	4620      	mov	r0, r4
 8002ff6:	bd10      	pop	{r4, pc}

08002ff8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002ff8:	b510      	push	{r4, lr}
 8002ffa:	4604      	mov	r4, r0
 8002ffc:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003000:	f02e f869 	bl	80310d6 <_ZdlPvj>
 8003004:	4620      	mov	r0, r4
 8003006:	bd10      	pop	{r4, pc}

08003008 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003008:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 800300a:	f009 fff9 	bl	800d000 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800300e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8003012:	6803      	ldr	r3, [r0, #0]
 8003014:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003016:	4718      	bx	r3

08003018 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003018:	b510      	push	{r4, lr}
 800301a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800301c:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8003020:	b158      	cbz	r0, 800303a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8003022:	6803      	ldr	r3, [r0, #0]
 8003024:	68db      	ldr	r3, [r3, #12]
 8003026:	4798      	blx	r3
 8003028:	b138      	cbz	r0, 800303a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800302a:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 800302e:	6803      	ldr	r3, [r0, #0]
 8003030:	689b      	ldr	r3, [r3, #8]
 8003032:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003034:	2300      	movs	r3, #0
 8003036:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 800303a:	bd10      	pop	{r4, pc}

0800303c <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoGameScreen1ScreenNoTransitionImpl()
{
 800303c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<GameScreen1View, GameScreen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003040:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003044:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003046:	68b0      	ldr	r0, [r6, #8]
 8003048:	6803      	ldr	r3, [r0, #0]
 800304a:	6a1b      	ldr	r3, [r3, #32]
 800304c:	4798      	blx	r3
 800304e:	28e7      	cmp	r0, #231	@ 0xe7
 8003050:	d805      	bhi.n	800305e <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x22>
 8003052:	21a3      	movs	r1, #163	@ 0xa3
 8003054:	4b43      	ldr	r3, [pc, #268]	@ (8003164 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x128>)
 8003056:	4a44      	ldr	r2, [pc, #272]	@ (8003168 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003058:	4844      	ldr	r0, [pc, #272]	@ (800316c <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x130>)
 800305a:	f02f fa15 	bl	8032488 <__assert_func>
 800305e:	6870      	ldr	r0, [r6, #4]
 8003060:	6803      	ldr	r3, [r0, #0]
 8003062:	6a1b      	ldr	r3, [r3, #32]
 8003064:	4798      	blx	r3
 8003066:	280f      	cmp	r0, #15
 8003068:	d803      	bhi.n	8003072 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x36>
 800306a:	21a4      	movs	r1, #164	@ 0xa4
 800306c:	4b40      	ldr	r3, [pc, #256]	@ (8003170 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x134>)
 800306e:	4a3e      	ldr	r2, [pc, #248]	@ (8003168 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x12c>)
 8003070:	e7f2      	b.n	8003058 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003072:	68f0      	ldr	r0, [r6, #12]
 8003074:	6803      	ldr	r3, [r0, #0]
 8003076:	6a1b      	ldr	r3, [r3, #32]
 8003078:	4798      	blx	r3
 800307a:	280b      	cmp	r0, #11
 800307c:	d803      	bhi.n	8003086 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x4a>
 800307e:	21a5      	movs	r1, #165	@ 0xa5
 8003080:	4b3c      	ldr	r3, [pc, #240]	@ (8003174 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x138>)
 8003082:	4a39      	ldr	r2, [pc, #228]	@ (8003168 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x12c>)
 8003084:	e7e8      	b.n	8003058 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8003086:	f009 ffbb 	bl	800d000 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800308a:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 800317c <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x140>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800308e:	3004      	adds	r0, #4
 8003090:	f009 ffdb 	bl	800d04a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003094:	f8d9 0000 	ldr.w	r0, [r9]
 8003098:	b110      	cbz	r0, 80030a0 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800309a:	6803      	ldr	r3, [r0, #0]
 800309c:	68db      	ldr	r3, [r3, #12]
 800309e:	4798      	blx	r3
    if (*currentTrans)
 80030a0:	f8d9 0000 	ldr.w	r0, [r9]
 80030a4:	b110      	cbz	r0, 80030ac <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80030a6:	6803      	ldr	r3, [r0, #0]
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	4798      	blx	r3
    if (*currentScreen)
 80030ac:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003180 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x144>
 80030b0:	f8d8 0000 	ldr.w	r0, [r8]
 80030b4:	b110      	cbz	r0, 80030bc <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80030b6:	6803      	ldr	r3, [r0, #0]
 80030b8:	695b      	ldr	r3, [r3, #20]
 80030ba:	4798      	blx	r3
    if (*currentPresenter)
 80030bc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80030c0:	b110      	cbz	r0, 80030c8 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80030c2:	6803      	ldr	r3, [r0, #0]
 80030c4:	685b      	ldr	r3, [r3, #4]
 80030c6:	4798      	blx	r3
    if (*currentScreen)
 80030c8:	f8d8 0000 	ldr.w	r0, [r8]
 80030cc:	b110      	cbz	r0, 80030d4 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80030ce:	6803      	ldr	r3, [r0, #0]
 80030d0:	681b      	ldr	r3, [r3, #0]
 80030d2:	4798      	blx	r3
    if (*currentPresenter)
 80030d4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80030d8:	b110      	cbz	r0, 80030e0 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80030da:	6803      	ldr	r3, [r0, #0]
 80030dc:	689b      	ldr	r3, [r3, #8]
 80030de:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80030e0:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80030e2:	2100      	movs	r1, #0
 80030e4:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
 80030e6:	f04f 0b00 	mov.w	fp, #0
 80030ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80030ec:	4798      	blx	r3
 80030ee:	4b22      	ldr	r3, [pc, #136]	@ (8003178 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x13c>)
 80030f0:	4604      	mov	r4, r0
 80030f2:	f8c0 b004 	str.w	fp, [r0, #4]
 80030f6:	f880 b008 	strb.w	fp, [r0, #8]
 80030fa:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80030fc:	68b0      	ldr	r0, [r6, #8]
 80030fe:	4659      	mov	r1, fp
 8003100:	6803      	ldr	r3, [r0, #0]
 8003102:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003104:	4798      	blx	r3
 8003106:	4605      	mov	r5, r0
 8003108:	f000 fba0 	bl	800384c <_ZN15GameScreen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800310c:	6870      	ldr	r0, [r6, #4]
 800310e:	4659      	mov	r1, fp
 8003110:	6803      	ldr	r3, [r0, #0]
 8003112:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003114:	4798      	blx	r3
 8003116:	4606      	mov	r6, r0
 8003118:	4629      	mov	r1, r5
 800311a:	f000 fb77 	bl	800380c <_ZN20GameScreen1PresenterC1ER15GameScreen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 800311e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003120:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003124:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003128:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800312c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003130:	682b      	ldr	r3, [r5, #0]
 8003132:	4628      	mov	r0, r5
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003134:	f8c6 a008 	str.w	sl, [r6, #8]
 8003138:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800313a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800313c:	4798      	blx	r3
    newPresenter->activate();
 800313e:	6833      	ldr	r3, [r6, #0]
 8003140:	4630      	mov	r0, r6
 8003142:	681b      	ldr	r3, [r3, #0]
 8003144:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003146:	4621      	mov	r1, r4
 8003148:	4628      	mov	r0, r5
 800314a:	f00b ff4b 	bl	800efe4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800314e:	6823      	ldr	r3, [r4, #0]
 8003150:	4620      	mov	r0, r4
 8003152:	691b      	ldr	r3, [r3, #16]
 8003154:	4798      	blx	r3
    newTransition->invalidate();
 8003156:	4620      	mov	r0, r4
 8003158:	6823      	ldr	r3, [r4, #0]
 800315a:	695b      	ldr	r3, [r3, #20]
}
 800315c:	b001      	add	sp, #4
 800315e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003162:	4718      	bx	r3
 8003164:	08034e70 	.word	0x08034e70
 8003168:	08034efe 	.word	0x08034efe
 800316c:	08034fd8 	.word	0x08034fd8
 8003170:	0803501f 	.word	0x0803501f
 8003174:	080350c2 	.word	0x080350c2
 8003178:	080351dc 	.word	0x080351dc
 800317c:	20082f04 	.word	0x20082f04
 8003180:	20082f00 	.word	0x20082f00

08003184 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003184:	b570      	push	{r4, r5, r6, lr}
 8003186:	4604      	mov	r4, r0
 8003188:	460d      	mov	r5, r1
 800318a:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 800318c:	f009 fffa 	bl	800d184 <_ZN8touchgfx11ApplicationC1Ev>
        : currentPresenter(0),
 8003190:	2100      	movs	r1, #0
        instance = this;
 8003192:	4b0a      	ldr	r3, [pc, #40]	@ (80031bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x38>)
        : pobject(0), pmemfun(0)
 8003194:	e9c4 1153 	strd	r1, r1, [r4, #332]	@ 0x14c
 8003198:	601c      	str	r4, [r3, #0]
      model(m)
 800319a:	4b09      	ldr	r3, [pc, #36]	@ (80031c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x3c>)
          pendingScreenTransitionCallback(0)
 800319c:	e9c4 114f 	strd	r1, r1, [r4, #316]	@ 0x13c
 80031a0:	6023      	str	r3, [r4, #0]
 80031a2:	4b08      	ldr	r3, [pc, #32]	@ (80031c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x40>)
 80031a4:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
 80031a8:	e9c4 3151 	strd	r3, r1, [r4, #324]	@ 0x144
        return instance;
 80031ac:	4b06      	ldr	r3, [pc, #24]	@ (80031c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x44>)
 80031ae:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80031b0:	6803      	ldr	r3, [r0, #0]
 80031b2:	689b      	ldr	r3, [r3, #8]
 80031b4:	4798      	blx	r3
}
 80031b6:	4620      	mov	r0, r4
 80031b8:	bd70      	pop	{r4, r5, r6, pc}
 80031ba:	bf00      	nop
 80031bc:	20082f10 	.word	0x20082f10
 80031c0:	08035188 	.word	0x08035188
 80031c4:	08035170 	.word	0x08035170
 80031c8:	20082ec4 	.word	0x20082ec4

080031cc <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80031cc:	4b06      	ldr	r3, [pc, #24]	@ (80031e8 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv+0x1c>)
 80031ce:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80031d2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80031d6:	2300      	movs	r3, #0
 80031d8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80031dc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80031e0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80031e4:	4770      	bx	lr
 80031e6:	bf00      	nop
 80031e8:	0800303d 	.word	0x0800303d

080031ec <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80031ec:	2000      	movs	r0, #0
 80031ee:	4770      	bx	lr

080031f0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80031f0:	8081      	strh	r1, [r0, #4]
    }
 80031f2:	4770      	bx	lr

080031f4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80031f4:	80c1      	strh	r1, [r0, #6]
    }
 80031f6:	4770      	bx	lr

080031f8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80031f8:	8101      	strh	r1, [r0, #8]
    }
 80031fa:	4770      	bx	lr

080031fc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80031fc:	8141      	strh	r1, [r0, #10]
    }
 80031fe:	4770      	bx	lr

08003200 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8003200:	4770      	bx	lr

08003202 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8003202:	4770      	bx	lr

08003204 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8003204:	4770      	bx	lr

08003206 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8003206:	4770      	bx	lr

08003208 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003208:	4770      	bx	lr

0800320a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800320a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800320c:	88c4      	ldrh	r4, [r0, #6]
 800320e:	6803      	ldr	r3, [r0, #0]
 8003210:	1b12      	subs	r2, r2, r4
 8003212:	8884      	ldrh	r4, [r0, #4]
 8003214:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003216:	1b09      	subs	r1, r1, r4
 8003218:	b212      	sxth	r2, r2
    }
 800321a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800321e:	b209      	sxth	r1, r1
 8003220:	4718      	bx	r3

08003222 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8003222:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003226:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003228:	f04f 33ff 	mov.w	r3, #4294967295
 800322c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800322e:	6813      	ldr	r3, [r2, #0]
 8003230:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8003232:	6010      	str	r0, [r2, #0]
    }
 8003234:	4770      	bx	lr

08003236 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003236:	4770      	bx	lr

08003238 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003238:	4770      	bx	lr

0800323a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800323a:	4770      	bx	lr

0800323c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800323c:	4770      	bx	lr

0800323e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800323e:	4770      	bx	lr

08003240 <_ZN19GameScreen1ViewBase16Block1_1_ClickedEv>:
     * Virtual Action Handlers
     */
    virtual void Block1_1_Clicked()
    {
        // Override and implement this function in GameScreen1
    }
 8003240:	4770      	bx	lr

08003242 <_ZN19GameScreen1ViewBaseD1Ev>:
}

GameScreen1ViewBase::~GameScreen1ViewBase()
{

}
 8003242:	4770      	bx	lr

08003244 <_ZN19GameScreen1ViewBase11setupScreenEv>:

void GameScreen1ViewBase::setupScreen()
{

}
 8003244:	4770      	bx	lr

08003246 <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003246:	4770      	bx	lr

08003248 <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003248:	4603      	mov	r3, r0
 800324a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800324c:	6844      	ldr	r4, [r0, #4]
 800324e:	68c2      	ldr	r2, [r0, #12]
 8003250:	689b      	ldr	r3, [r3, #8]
 8003252:	1055      	asrs	r5, r2, #1
 8003254:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003258:	07d2      	lsls	r2, r2, #31
 800325a:	bf48      	it	mi
 800325c:	5962      	ldrmi	r2, [r4, r5]
    }
 800325e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003260:	bf48      	it	mi
 8003262:	58d3      	ldrmi	r3, [r2, r3]
 8003264:	4718      	bx	r3

08003266 <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8003266:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003268:	6840      	ldr	r0, [r0, #4]
 800326a:	b130      	cbz	r0, 800327a <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800326c:	689a      	ldr	r2, [r3, #8]
 800326e:	b91a      	cbnz	r2, 8003278 <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8003270:	68d8      	ldr	r0, [r3, #12]
 8003272:	f000 0001 	and.w	r0, r0, #1
 8003276:	4770      	bx	lr
 8003278:	2001      	movs	r0, #1
    }
 800327a:	4770      	bx	lr

0800327c <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800327c:	b510      	push	{r4, lr}
 800327e:	4604      	mov	r4, r0
 8003280:	2110      	movs	r1, #16
 8003282:	f02d ff28 	bl	80310d6 <_ZdlPvj>
 8003286:	4620      	mov	r0, r4
 8003288:	bd10      	pop	{r4, pc}

0800328a <_ZN19GameScreen1ViewBaseD0Ev>:
GameScreen1ViewBase::~GameScreen1ViewBase()
 800328a:	b510      	push	{r4, lr}
 800328c:	4604      	mov	r4, r0
}
 800328e:	21e4      	movs	r1, #228	@ 0xe4
 8003290:	f02d ff21 	bl	80310d6 <_ZdlPvj>
 8003294:	4620      	mov	r0, r4
 8003296:	bd10      	pop	{r4, pc}

08003298 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8003298:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800329c:	b112      	cbz	r2, 80032a4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800329e:	6803      	ldr	r3, [r0, #0]
 80032a0:	695b      	ldr	r3, [r3, #20]
 80032a2:	4718      	bx	r3
    }
 80032a4:	4770      	bx	lr

080032a6 <_ZN19GameScreen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void GameScreen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Block1_1)
 80032a6:	f100 0298 	add.w	r2, r0, #152	@ 0x98
 80032aa:	428a      	cmp	r2, r1
 80032ac:	d102      	bne.n	80032b4 <_ZN19GameScreen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //Block1_1_Interaction
        //When Block1_1 clicked call virtual function
        //Call Block1_1_Clicked
        Block1_1_Clicked();
 80032ae:	6803      	ldr	r3, [r0, #0]
 80032b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80032b2:	4718      	bx	r3
    }
}
 80032b4:	4770      	bx	lr

080032b6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80032b6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80032ba:	b11a      	cbz	r2, 80032c4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80032bc:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80032c0:	b102      	cbz	r2, 80032c4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80032c2:	6018      	str	r0, [r3, #0]
        }
    }
 80032c4:	4770      	bx	lr

080032c6 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80032c6:	b570      	push	{r4, r5, r6, lr}
 80032c8:	4604      	mov	r4, r0
 80032ca:	4615      	mov	r5, r2
        setX(x);
 80032cc:	6803      	ldr	r3, [r0, #0]
 80032ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032d0:	4798      	blx	r3
        setY(y);
 80032d2:	6823      	ldr	r3, [r4, #0]
 80032d4:	4629      	mov	r1, r5
 80032d6:	4620      	mov	r0, r4
    }
 80032d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80032dc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80032de:	4718      	bx	r3

080032e0 <_ZN19GameScreen1ViewBaseC1Ev>:
GameScreen1ViewBase::GameScreen1ViewBase() :
 80032e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80032e4:	4604      	mov	r4, r0
        : presenter(0)
 80032e6:	2500      	movs	r5, #0
    buttonCallback(this, &GameScreen1ViewBase::buttonCallbackHandler)
 80032e8:	4626      	mov	r6, r4
GameScreen1ViewBase::GameScreen1ViewBase() :
 80032ea:	b086      	sub	sp, #24
 80032ec:	f00b fcce 	bl	800ec8c <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &GameScreen1ViewBase::buttonCallbackHandler)
 80032f0:	4b45      	ldr	r3, [pc, #276]	@ (8003408 <_ZN19GameScreen1ViewBaseC1Ev+0x128>)
 80032f2:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80032f4:	f846 3b40 	str.w	r3, [r6], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80032f8:	4b44      	ldr	r3, [pc, #272]	@ (800340c <_ZN19GameScreen1ViewBaseC1Ev+0x12c>)
          touchable(false),
 80032fa:	f44f 7280 	mov.w	r2, #256	@ 0x100
        : x(0), y(0), width(0), height(0)
 80032fe:	e9c4 3510 	strd	r3, r5, [r4, #64]	@ 0x40
 8003302:	23ff      	movs	r3, #255	@ 0xff
 8003304:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003308:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800330c:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
 8003310:	f8a4 2090 	strh.w	r2, [r4, #144]	@ 0x90
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003314:	4a3e      	ldr	r2, [pc, #248]	@ (8003410 <_ZN19GameScreen1ViewBaseC1Ev+0x130>)
 8003316:	f104 086c 	add.w	r8, r4, #108	@ 0x6c
    {
        Image::setBitmap(bmp);
 800331a:	f10d 0a14 	add.w	sl, sp, #20
 800331e:	f104 0798 	add.w	r7, r4, #152	@ 0x98
 8003322:	4651      	mov	r1, sl
        : Widget(), bitmap(bmp), alpha(255)
 8003324:	66e2      	str	r2, [r4, #108]	@ 0x6c
 8003326:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
 800332a:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
        Image::setBitmap(bmp);
 800332e:	4640      	mov	r0, r8
 8003330:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
 8003334:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
 8003338:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
 800333c:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
 8003340:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
 8003344:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
 8003348:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
 800334c:	6625      	str	r5, [r4, #96]	@ 0x60
        : color(col)
 800334e:	66a5      	str	r5, [r4, #104]	@ 0x68
 8003350:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003354:	f008 fd9f 	bl	800be96 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003358:	4638      	mov	r0, r7
 800335a:	f008 fd75 	bl	800be48 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800335e:	4b2d      	ldr	r3, [pc, #180]	@ (8003414 <_ZN19GameScreen1ViewBaseC1Ev+0x134>)
        setXY(x, y);
 8003360:	462a      	mov	r2, r5
 8003362:	e9c4 3435 	strd	r3, r4, [r4, #212]	@ 0xd4
 8003366:	4b2c      	ldr	r3, [pc, #176]	@ (8003418 <_ZN19GameScreen1ViewBaseC1Ev+0x138>)
 8003368:	4629      	mov	r1, r5
 800336a:	e9c4 3537 	strd	r3, r5, [r4, #220]	@ 0xdc
 800336e:	4630      	mov	r0, r6
 8003370:	f7ff ffa9 	bl	80032c6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003374:	4630      	mov	r0, r6
 8003376:	f44f 7148 	mov.w	r1, #800	@ 0x320
 800337a:	f7ff ff3d 	bl	80031f8 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800337e:	4630      	mov	r0, r6
 8003380:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 8003384:	f7ff ff3a 	bl	80031fc <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003388:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800338c:	f104 0904 	add.w	r9, r4, #4
 8003390:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003392:	4631      	mov	r1, r6
 8003394:	4648      	mov	r0, r9
 8003396:	f007 fab1 	bl	800a8fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BackScreen.setXY(0, 0);
 800339a:	462a      	mov	r2, r5
 800339c:	4629      	mov	r1, r5
 800339e:	4640      	mov	r0, r8
 80033a0:	f7ff ff91 	bl	80032c6 <_ZN8touchgfx8Drawable5setXYEss>
 80033a4:	2302      	movs	r3, #2
    BackScreen.setBitmap(touchgfx::Bitmap(BITMAP_BACKSCREEN_ID));
 80033a6:	4651      	mov	r1, sl
 80033a8:	4640      	mov	r0, r8
 80033aa:	f8ad 3014 	strh.w	r3, [sp, #20]
 80033ae:	f008 fd72 	bl	800be96 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80033b2:	4641      	mov	r1, r8
 80033b4:	4648      	mov	r0, r9
 80033b6:	f007 faa1 	bl	800a8fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Block1_1.setXY(20, 19);
 80033ba:	4638      	mov	r0, r7
 80033bc:	2213      	movs	r2, #19
 80033be:	2114      	movs	r1, #20
 80033c0:	f7ff ff81 	bl	80032c6 <_ZN8touchgfx8Drawable5setXYEss>
 80033c4:	2303      	movs	r3, #3
    Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
 80033c6:	4638      	mov	r0, r7
 80033c8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80033cc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80033d0:	aa03      	add	r2, sp, #12
 80033d2:	ab04      	add	r3, sp, #16
 80033d4:	a902      	add	r1, sp, #8
 80033d6:	f8cd a000 	str.w	sl, [sp]
 80033da:	f8ad 5008 	strh.w	r5, [sp, #8]
 80033de:	f8ad 500c 	strh.w	r5, [sp, #12]
 80033e2:	f008 fc8c 	bl	800bcfe <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80033e6:	f04f 1305 	mov.w	r3, #327685	@ 0x50005
 80033ea:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
    Block1_1.setAction(buttonCallback);
 80033ee:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
 80033f2:	4648      	mov	r0, r9
 80033f4:	4639      	mov	r1, r7
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80033f6:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80033fa:	f007 fa7f 	bl	800a8fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80033fe:	4620      	mov	r0, r4
 8003400:	b006      	add	sp, #24
 8003402:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003406:	bf00      	nop
 8003408:	08035218 	.word	0x08035218
 800340c:	08035988 	.word	0x08035988
 8003410:	08035a68 	.word	0x08035a68
 8003414:	08035200 	.word	0x08035200
 8003418:	080032a7 	.word	0x080032a7

0800341c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800341c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800341e:	4770      	bx	lr

08003420 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8003420:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8003422:	4770      	bx	lr

08003424 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8003424:	4770      	bx	lr

08003426 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8003426:	888b      	ldrh	r3, [r1, #4]
 8003428:	69c0      	ldr	r0, [r0, #28]
 800342a:	0adb      	lsrs	r3, r3, #11
 800342c:	680a      	ldr	r2, [r1, #0]
 800342e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8003432:	4410      	add	r0, r2
 8003434:	4770      	bx	lr

08003436 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8003436:	b510      	push	{r4, lr}
 8003438:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 800343a:	b1ba      	cbz	r2, 800346c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800343c:	7b10      	ldrb	r0, [r2, #12]
 800343e:	b168      	cbz	r0, 800345c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8003440:	7b53      	ldrb	r3, [r2, #13]
 8003442:	7ad2      	ldrb	r2, [r2, #11]
 8003444:	021b      	lsls	r3, r3, #8
 8003446:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800344a:	431a      	orrs	r2, r3
 800344c:	6a23      	ldr	r3, [r4, #32]
 800344e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8003452:	881a      	ldrh	r2, [r3, #0]
 8003454:	428a      	cmp	r2, r1
 8003456:	d102      	bne.n	800345e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8003458:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 800345c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800345e:	d805      	bhi.n	800346c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003460:	3801      	subs	r0, #1
 8003462:	b280      	uxth	r0, r0
 8003464:	3304      	adds	r3, #4
 8003466:	2800      	cmp	r0, #0
 8003468:	d1f3      	bne.n	8003452 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800346a:	e7f7      	b.n	800345c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800346c:	2000      	movs	r0, #0
 800346e:	e7f5      	b.n	800345c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08003470 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8003470:	b510      	push	{r4, lr}
 8003472:	4604      	mov	r4, r0
 8003474:	212c      	movs	r1, #44	@ 0x2c
 8003476:	f02d fe2e 	bl	80310d6 <_ZdlPvj>
 800347a:	4620      	mov	r0, r4
 800347c:	bd10      	pop	{r4, pc}
	...

08003480 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8003480:	b530      	push	{r4, r5, lr}
 8003482:	4604      	mov	r4, r0
 8003484:	b08b      	sub	sp, #44	@ 0x2c
      arabicTable(formsTable)
 8003486:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 800348a:	9508      	str	r5, [sp, #32]
 800348c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8003490:	9507      	str	r5, [sp, #28]
 8003492:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8003496:	9506      	str	r5, [sp, #24]
 8003498:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 800349c:	9505      	str	r5, [sp, #20]
 800349e:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 80034a2:	9504      	str	r5, [sp, #16]
 80034a4:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80034a8:	9503      	str	r5, [sp, #12]
 80034aa:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 80034ae:	9502      	str	r5, [sp, #8]
 80034b0:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 80034b4:	9501      	str	r5, [sp, #4]
 80034b6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80034ba:	9500      	str	r5, [sp, #0]
 80034bc:	f00b f9ec 	bl	800e898 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
}
 80034c0:	4620      	mov	r0, r4
      arabicTable(formsTable)
 80034c2:	4b06      	ldr	r3, [pc, #24]	@ (80034dc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80034c4:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80034c6:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80034c8:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80034ca:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80034cc:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80034ce:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80034d0:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80034d2:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80034d4:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80034d6:	b00b      	add	sp, #44	@ 0x2c
 80034d8:	bd30      	pop	{r4, r5, pc}
 80034da:	bf00      	nop
 80034dc:	08035250 	.word	0x08035250

080034e0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80034e0:	4770      	bx	lr
	...

080034e4 <_Z23getFont_verdana_10_4bppv>:
{
 80034e4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80034e6:	4d15      	ldr	r5, [pc, #84]	@ (800353c <_Z23getFont_verdana_10_4bppv+0x58>)
{
 80034e8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80034ea:	e8d5 4faf 	lda	r4, [r5]
 80034ee:	f014 0401 	ands.w	r4, r4, #1
 80034f2:	d120      	bne.n	8003536 <_Z23getFont_verdana_10_4bppv+0x52>
 80034f4:	4628      	mov	r0, r5
 80034f6:	f02d fdf0 	bl	80310da <__cxa_guard_acquire>
 80034fa:	b1e0      	cbz	r0, 8003536 <_Z23getFont_verdana_10_4bppv+0x52>
 80034fc:	233f      	movs	r3, #63	@ 0x3f
 80034fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8003500:	4b0f      	ldr	r3, [pc, #60]	@ (8003540 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8003502:	2201      	movs	r2, #1
 8003504:	9308      	str	r3, [sp, #32]
 8003506:	4b0f      	ldr	r3, [pc, #60]	@ (8003544 <_Z23getFont_verdana_10_4bppv+0x60>)
 8003508:	490f      	ldr	r1, [pc, #60]	@ (8003548 <_Z23getFont_verdana_10_4bppv+0x64>)
 800350a:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800350e:	2304      	movs	r3, #4
 8003510:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003514:	230a      	movs	r3, #10
 8003516:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800351a:	9300      	str	r3, [sp, #0]
 800351c:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003520:	480a      	ldr	r0, [pc, #40]	@ (800354c <_Z23getFont_verdana_10_4bppv+0x68>)
 8003522:	940a      	str	r4, [sp, #40]	@ 0x28
 8003524:	9405      	str	r4, [sp, #20]
 8003526:	f7ff ffab 	bl	8003480 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800352a:	4809      	ldr	r0, [pc, #36]	@ (8003550 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800352c:	f02e ffca 	bl	80324c4 <atexit>
 8003530:	4628      	mov	r0, r5
 8003532:	f02d fdde 	bl	80310f2 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8003536:	4805      	ldr	r0, [pc, #20]	@ (800354c <_Z23getFont_verdana_10_4bppv+0x68>)
 8003538:	b00f      	add	sp, #60	@ 0x3c
 800353a:	bd30      	pop	{r4, r5, pc}
 800353c:	2006e83c 	.word	0x2006e83c
 8003540:	08038808 	.word	0x08038808
 8003544:	08038814 	.word	0x08038814
 8003548:	080387d8 	.word	0x080387d8
 800354c:	2006e840 	.word	0x2006e840
 8003550:	080034e1 	.word	0x080034e1

08003554 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003554:	4770      	bx	lr
	...

08003558 <_Z23getFont_verdana_20_4bppv>:
{
 8003558:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800355a:	4d15      	ldr	r5, [pc, #84]	@ (80035b0 <_Z23getFont_verdana_20_4bppv+0x58>)
{
 800355c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800355e:	e8d5 4faf 	lda	r4, [r5]
 8003562:	f014 0401 	ands.w	r4, r4, #1
 8003566:	d120      	bne.n	80035aa <_Z23getFont_verdana_20_4bppv+0x52>
 8003568:	4628      	mov	r0, r5
 800356a:	f02d fdb6 	bl	80310da <__cxa_guard_acquire>
 800356e:	b1e0      	cbz	r0, 80035aa <_Z23getFont_verdana_20_4bppv+0x52>
 8003570:	233f      	movs	r3, #63	@ 0x3f
 8003572:	9309      	str	r3, [sp, #36]	@ 0x24
 8003574:	4b0f      	ldr	r3, [pc, #60]	@ (80035b4 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8003576:	2201      	movs	r2, #1
 8003578:	9308      	str	r3, [sp, #32]
 800357a:	4b0f      	ldr	r3, [pc, #60]	@ (80035b8 <_Z23getFont_verdana_20_4bppv+0x60>)
 800357c:	490f      	ldr	r1, [pc, #60]	@ (80035bc <_Z23getFont_verdana_20_4bppv+0x64>)
 800357e:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003582:	2304      	movs	r3, #4
 8003584:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003588:	2314      	movs	r3, #20
 800358a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800358e:	9300      	str	r3, [sp, #0]
 8003590:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003594:	480a      	ldr	r0, [pc, #40]	@ (80035c0 <_Z23getFont_verdana_20_4bppv+0x68>)
 8003596:	940a      	str	r4, [sp, #40]	@ 0x28
 8003598:	9405      	str	r4, [sp, #20]
 800359a:	f7ff ff71 	bl	8003480 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800359e:	4809      	ldr	r0, [pc, #36]	@ (80035c4 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80035a0:	f02e ff90 	bl	80324c4 <atexit>
 80035a4:	4628      	mov	r0, r5
 80035a6:	f02d fda4 	bl	80310f2 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 80035aa:	4805      	ldr	r0, [pc, #20]	@ (80035c0 <_Z23getFont_verdana_20_4bppv+0x68>)
 80035ac:	b00f      	add	sp, #60	@ 0x3c
 80035ae:	bd30      	pop	{r4, r5, pc}
 80035b0:	2006e86c 	.word	0x2006e86c
 80035b4:	0803880c 	.word	0x0803880c
 80035b8:	08038818 	.word	0x08038818
 80035bc:	080387e8 	.word	0x080387e8
 80035c0:	2006e870 	.word	0x2006e870
 80035c4:	08003555 	.word	0x08003555

080035c8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80035c8:	4770      	bx	lr
	...

080035cc <_Z23getFont_verdana_40_4bppv>:
{
 80035cc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80035ce:	4d15      	ldr	r5, [pc, #84]	@ (8003624 <_Z23getFont_verdana_40_4bppv+0x58>)
{
 80035d0:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80035d2:	e8d5 4faf 	lda	r4, [r5]
 80035d6:	f014 0401 	ands.w	r4, r4, #1
 80035da:	d120      	bne.n	800361e <_Z23getFont_verdana_40_4bppv+0x52>
 80035dc:	4628      	mov	r0, r5
 80035de:	f02d fd7c 	bl	80310da <__cxa_guard_acquire>
 80035e2:	b1e0      	cbz	r0, 800361e <_Z23getFont_verdana_40_4bppv+0x52>
 80035e4:	233f      	movs	r3, #63	@ 0x3f
 80035e6:	9309      	str	r3, [sp, #36]	@ 0x24
 80035e8:	4b0f      	ldr	r3, [pc, #60]	@ (8003628 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80035ea:	2201      	movs	r2, #1
 80035ec:	9308      	str	r3, [sp, #32]
 80035ee:	4b0f      	ldr	r3, [pc, #60]	@ (800362c <_Z23getFont_verdana_40_4bppv+0x60>)
 80035f0:	490f      	ldr	r1, [pc, #60]	@ (8003630 <_Z23getFont_verdana_40_4bppv+0x64>)
 80035f2:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80035f6:	2304      	movs	r3, #4
 80035f8:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80035fc:	2328      	movs	r3, #40	@ 0x28
 80035fe:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003602:	9300      	str	r3, [sp, #0]
 8003604:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003608:	480a      	ldr	r0, [pc, #40]	@ (8003634 <_Z23getFont_verdana_40_4bppv+0x68>)
 800360a:	940a      	str	r4, [sp, #40]	@ 0x28
 800360c:	9405      	str	r4, [sp, #20]
 800360e:	f7ff ff37 	bl	8003480 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003612:	4809      	ldr	r0, [pc, #36]	@ (8003638 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003614:	f02e ff56 	bl	80324c4 <atexit>
 8003618:	4628      	mov	r0, r5
 800361a:	f02d fd6a 	bl	80310f2 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800361e:	4805      	ldr	r0, [pc, #20]	@ (8003634 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003620:	b00f      	add	sp, #60	@ 0x3c
 8003622:	bd30      	pop	{r4, r5, pc}
 8003624:	2006e89c 	.word	0x2006e89c
 8003628:	08038810 	.word	0x08038810
 800362c:	0803881c 	.word	0x0803881c
 8003630:	080387f8 	.word	0x080387f8
 8003634:	2006e8a0 	.word	0x2006e8a0
 8003638:	080035c9 	.word	0x080035c9

0800363c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 800363c:	2000      	movs	r0, #0
 800363e:	4770      	bx	lr

08003640 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8003640:	2000      	movs	r0, #0
 8003642:	4770      	bx	lr

08003644 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003644:	b40e      	push	{r1, r2, r3}
 8003646:	b503      	push	{r0, r1, lr}
 8003648:	ab03      	add	r3, sp, #12
 800364a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800364e:	2100      	movs	r1, #0
    va_start(pArg, text);
 8003650:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003652:	f00a fc21 	bl	800de98 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003656:	b002      	add	sp, #8
 8003658:	f85d eb04 	ldr.w	lr, [sp], #4
 800365c:	b003      	add	sp, #12
 800365e:	4770      	bx	lr

08003660 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003660:	b40c      	push	{r2, r3}
 8003662:	b507      	push	{r0, r1, r2, lr}
 8003664:	ab04      	add	r3, sp, #16
 8003666:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800366a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800366c:	f00a fc14 	bl	800de98 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003670:	b003      	add	sp, #12
 8003672:	f85d eb04 	ldr.w	lr, [sp], #4
 8003676:	b002      	add	sp, #8
 8003678:	4770      	bx	lr
	...

0800367c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800367c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 800367e:	b510      	push	{r4, lr}
 8003680:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8003682:	b373      	cbz	r3, 80036e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8003684:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8003686:	b92b      	cbnz	r3, 8003694 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003688:	21c5      	movs	r1, #197	@ 0xc5
 800368a:	4b18      	ldr	r3, [pc, #96]	@ (80036ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800368c:	4a18      	ldr	r2, [pc, #96]	@ (80036f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800368e:	4819      	ldr	r0, [pc, #100]	@ (80036f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8003690:	f02e fefa 	bl	8032488 <__assert_func>
            return buffer[pos];
 8003694:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8003696:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800369a:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 800369c:	b30b      	cbz	r3, 80036e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800369e:	f00c f968 	bl	800f972 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80036a2:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80036a4:	2b01      	cmp	r3, #1
 80036a6:	d803      	bhi.n	80036b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80036a8:	21cb      	movs	r1, #203	@ 0xcb
 80036aa:	4b13      	ldr	r3, [pc, #76]	@ (80036f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80036ac:	4a13      	ldr	r2, [pc, #76]	@ (80036fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80036ae:	e7ee      	b.n	800368e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80036b0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80036b2:	f640 103f 	movw	r0, #2367	@ 0x93f
 80036b6:	1c53      	adds	r3, r2, #1
 80036b8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80036ba:	4619      	mov	r1, r3
 80036bc:	2b09      	cmp	r3, #9
 80036be:	bf88      	it	hi
 80036c0:	f1a3 010a 	subhi.w	r1, r3, #10
 80036c4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80036c8:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 80036ca:	4281      	cmp	r1, r0
 80036cc:	d109      	bne.n	80036e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80036ce:	2b0a      	cmp	r3, #10
 80036d0:	bf28      	it	cs
 80036d2:	2300      	movcs	r3, #0
 80036d4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
            return buffer[pos];
 80036d8:	8c50      	ldrh	r0, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80036da:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80036de:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 80036e0:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80036e2:	4620      	mov	r0, r4
}
 80036e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80036e8:	f00c b846 	b.w	800f778 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80036ec:	080352b0 	.word	0x080352b0
 80036f0:	080352b9 	.word	0x080352b9
 80036f4:	08035364 	.word	0x08035364
 80036f8:	080353ae 	.word	0x080353ae
 80036fc:	080353bc 	.word	0x080353bc

08003700 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003700:	f00c b801 	b.w	800f706 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003704 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003704:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003706:	bb18      	cbnz	r0, 8003750 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003708:	4b12      	ldr	r3, [pc, #72]	@ (8003754 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800370a:	4813      	ldr	r0, [pc, #76]	@ (8003758 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800370c:	681c      	ldr	r4, [r3, #0]
 800370e:	4913      	ldr	r1, [pc, #76]	@ (800375c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003710:	b1b4      	cbz	r4, 8003740 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003712:	6822      	ldr	r2, [r4, #0]
 8003714:	4422      	add	r2, r4
 8003716:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003718:	6862      	ldr	r2, [r4, #4]
 800371a:	4422      	add	r2, r4
 800371c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800371e:	68a2      	ldr	r2, [r4, #8]
 8003720:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8003722:	2200      	movs	r2, #0
 8003724:	4b0e      	ldr	r3, [pc, #56]	@ (8003760 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003726:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003728:	f000 f82a 	bl	8003780 <_ZN17TypedTextDatabase8getFontsEv>
 800372c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800372e:	f000 f825 	bl	800377c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003732:	4b0c      	ldr	r3, [pc, #48]	@ (8003764 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003734:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003736:	4b0c      	ldr	r3, [pc, #48]	@ (8003768 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003738:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800373a:	4b0c      	ldr	r3, [pc, #48]	@ (800376c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800373c:	8018      	strh	r0, [r3, #0]
    }
}
 800373e:	e007      	b.n	8003750 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003740:	4b0b      	ldr	r3, [pc, #44]	@ (8003770 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003742:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003744:	4b0b      	ldr	r3, [pc, #44]	@ (8003774 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003746:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003748:	4b0b      	ldr	r3, [pc, #44]	@ (8003778 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800374a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800374c:	2c00      	cmp	r4, #0
 800374e:	d1e8      	bne.n	8003722 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003750:	bd38      	pop	{r3, r4, r5, pc}
 8003752:	bf00      	nop
 8003754:	2006e8d8 	.word	0x2006e8d8
 8003758:	2006e8d0 	.word	0x2006e8d0
 800375c:	2006e8cc 	.word	0x2006e8cc
 8003760:	2006e8d4 	.word	0x2006e8d4
 8003764:	20082f14 	.word	0x20082f14
 8003768:	20082f1c 	.word	0x20082f1c
 800376c:	20082f18 	.word	0x20082f18
 8003770:	08038824 	.word	0x08038824
 8003774:	08038820 	.word	0x08038820
 8003778:	08038828 	.word	0x08038828

0800377c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 800377c:	2000      	movs	r0, #0
 800377e:	4770      	bx	lr

08003780 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003780:	4800      	ldr	r0, [pc, #0]	@ (8003784 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8003782:	4770      	bx	lr
 8003784:	2006e8dc 	.word	0x2006e8dc

08003788 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003788:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 800378a:	f7ff fee5 	bl	8003558 <_Z23getFont_verdana_20_4bppv>
};
 800378e:	4c04      	ldr	r4, [pc, #16]	@ (80037a0 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8003790:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8003792:	f7ff ff1b 	bl	80035cc <_Z23getFont_verdana_40_4bppv>
};
 8003796:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8003798:	f7ff fea4 	bl	80034e4 <_Z23getFont_verdana_10_4bppv>
};
 800379c:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 800379e:	bd10      	pop	{r4, pc}
 80037a0:	2006e8dc 	.word	0x2006e8dc

080037a4 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 80037a4:	b510      	push	{r4, lr}
    pointArray = 0;
 80037a6:	2400      	movs	r4, #0
 80037a8:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 80037aa:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 80037ac:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 80037ae:	601c      	str	r4, [r3, #0]
}
 80037b0:	bd10      	pop	{r4, pc}

080037b2 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80037b2:	4770      	bx	lr

080037b4 <_ZN19FrontendApplicationD0Ev>:
 80037b4:	b510      	push	{r4, lr}
 80037b6:	4604      	mov	r4, r0
 80037b8:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80037bc:	f02d fc8b 	bl	80310d6 <_ZdlPvj>
 80037c0:	4620      	mov	r0, r4
 80037c2:	bd10      	pop	{r4, pc}

080037c4 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80037c4:	b510      	push	{r4, lr}
 80037c6:	4604      	mov	r4, r0
    {
        model.tick();
 80037c8:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 80037cc:	f000 f875 	bl	80038ba <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80037d0:	4620      	mov	r0, r4
    }
 80037d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80037d6:	f009 bc95 	b.w	800d104 <_ZN8touchgfx11Application15handleTickEventEv>
	...

080037dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80037dc:	b510      	push	{r4, lr}
 80037de:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80037e0:	f7ff fcd0 	bl	8003184 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80037e4:	4b01      	ldr	r3, [pc, #4]	@ (80037ec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 80037e6:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 80037e8:	6023      	str	r3, [r4, #0]
}
 80037ea:	bd10      	pop	{r4, pc}
 80037ec:	08035498 	.word	0x08035498

080037f0 <_ZN20GameScreen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~GameScreen1Presenter() {}
 80037f0:	4770      	bx	lr

080037f2 <_ZThn4_N20GameScreen1PresenterD1Ev>:
 80037f2:	3804      	subs	r0, #4
 80037f4:	4770      	bx	lr

080037f6 <_ZN20GameScreen1Presenter10deactivateEv>:
}

void GameScreen1Presenter::activate()
{

}
 80037f6:	4770      	bx	lr

080037f8 <_ZN20GameScreen1PresenterD0Ev>:
 80037f8:	b510      	push	{r4, lr}
 80037fa:	4604      	mov	r4, r0
 80037fc:	2110      	movs	r1, #16
 80037fe:	f02d fc6a 	bl	80310d6 <_ZdlPvj>
 8003802:	4620      	mov	r0, r4
 8003804:	bd10      	pop	{r4, pc}

08003806 <_ZThn4_N20GameScreen1PresenterD0Ev>:
 8003806:	f1a0 0004 	sub.w	r0, r0, #4
 800380a:	e7f5      	b.n	80037f8 <_ZN20GameScreen1PresenterD0Ev>

0800380c <_ZN20GameScreen1PresenterC1ER15GameScreen1View>:
    ModelListener() : model(0) {}
 800380c:	2200      	movs	r2, #0
 800380e:	6082      	str	r2, [r0, #8]
    : view(v)
 8003810:	4a02      	ldr	r2, [pc, #8]	@ (800381c <_ZN20GameScreen1PresenterC1ER15GameScreen1View+0x10>)
 8003812:	60c1      	str	r1, [r0, #12]
 8003814:	6002      	str	r2, [r0, #0]
 8003816:	3218      	adds	r2, #24
 8003818:	6042      	str	r2, [r0, #4]
}
 800381a:	4770      	bx	lr
 800381c:	080354ec 	.word	0x080354ec

08003820 <_ZN15GameScreen1View14tearDownScreenEv>:
}

void GameScreen1View::tearDownScreen()
{
    GameScreen1ViewBase::tearDownScreen();
}
 8003820:	4770      	bx	lr
	...

08003824 <_ZN15GameScreen1ViewD1Ev>:

class GameScreen1View : public GameScreen1ViewBase
{
public:
    GameScreen1View();
    virtual ~GameScreen1View() {}
 8003824:	b510      	push	{r4, lr}
 8003826:	4604      	mov	r4, r0
 8003828:	4b02      	ldr	r3, [pc, #8]	@ (8003834 <_ZN15GameScreen1ViewD1Ev+0x10>)
 800382a:	6003      	str	r3, [r0, #0]
 800382c:	f7ff fd09 	bl	8003242 <_ZN19GameScreen1ViewBaseD1Ev>
 8003830:	4620      	mov	r0, r4
 8003832:	bd10      	pop	{r4, pc}
 8003834:	08035514 	.word	0x08035514

08003838 <_ZN15GameScreen1ViewD0Ev>:
 8003838:	b510      	push	{r4, lr}
 800383a:	4604      	mov	r4, r0
 800383c:	f7ff fff2 	bl	8003824 <_ZN15GameScreen1ViewD1Ev>
 8003840:	4620      	mov	r0, r4
 8003842:	21e8      	movs	r1, #232	@ 0xe8
 8003844:	f02d fc47 	bl	80310d6 <_ZdlPvj>
 8003848:	4620      	mov	r0, r4
 800384a:	bd10      	pop	{r4, pc}

0800384c <_ZN15GameScreen1ViewC1Ev>:
GameScreen1View::GameScreen1View()
 800384c:	b510      	push	{r4, lr}
 800384e:	4604      	mov	r4, r0
 8003850:	f7ff fd46 	bl	80032e0 <_ZN19GameScreen1ViewBaseC1Ev>
 8003854:	4b03      	ldr	r3, [pc, #12]	@ (8003864 <_ZN15GameScreen1ViewC1Ev+0x18>)
}
 8003856:	4620      	mov	r0, r4
GameScreen1View::GameScreen1View()
 8003858:	6023      	str	r3, [r4, #0]
	GameScreen1View::block1_1_Cliecked_Valid = false;
 800385a:	2300      	movs	r3, #0
 800385c:	f884 30e4 	strb.w	r3, [r4, #228]	@ 0xe4
}
 8003860:	bd10      	pop	{r4, pc}
 8003862:	bf00      	nop
 8003864:	08035514 	.word	0x08035514

08003868 <_ZN15GameScreen1View11setupScreenEv>:
    GameScreen1ViewBase::setupScreen();
 8003868:	f7ff bcec 	b.w	8003244 <_ZN19GameScreen1ViewBase11setupScreenEv>

0800386c <_ZN15GameScreen1View16Block1_1_ClickedEv>:


void GameScreen1View::Block1_1_Clicked()
{
 800386c:	b570      	push	{r4, r5, r6, lr}
	if(!GameScreen1View::block1_1_Cliecked_Valid)
 800386e:	f890 10e4 	ldrb.w	r1, [r0, #228]	@ 0xe4
{
 8003872:	b086      	sub	sp, #24
 8003874:	4605      	mov	r5, r0
 8003876:	2303      	movs	r3, #3
	{
		Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_DISABLED_ID),
 8003878:	f100 0698 	add.w	r6, r0, #152	@ 0x98
 800387c:	aa05      	add	r2, sp, #20
	if(!GameScreen1View::block1_1_Cliecked_Valid)
 800387e:	b9b9      	cbnz	r1, 80038b0 <_ZN15GameScreen1View16Block1_1_ClickedEv+0x44>
 8003880:	2401      	movs	r4, #1
						touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
		GameScreen1View::block1_1_Cliecked_Valid = true;
	}
	else
	{
		Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID),
 8003882:	4630      	mov	r0, r6
 8003884:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003888:	f8ad 3014 	strh.w	r3, [sp, #20]
 800388c:	9200      	str	r2, [sp, #0]
 800388e:	ab04      	add	r3, sp, #16
 8003890:	aa03      	add	r2, sp, #12
 8003892:	a902      	add	r1, sp, #8
 8003894:	f8ad 4008 	strh.w	r4, [sp, #8]
 8003898:	f8ad 400c 	strh.w	r4, [sp, #12]
 800389c:	f008 fa2f 	bl	800bcfe <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
						touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID),
						touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
		GameScreen1View::block1_1_Cliecked_Valid = false;
	}

	Block1_1.invalidate();
 80038a0:	4630      	mov	r0, r6
		GameScreen1View::block1_1_Cliecked_Valid = true;
 80038a2:	f885 40e4 	strb.w	r4, [r5, #228]	@ 0xe4
}
 80038a6:	b006      	add	sp, #24
 80038a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	Block1_1.invalidate();
 80038ac:	f00a bc1e 	b.w	800e0ec <_ZNK8touchgfx8Drawable10invalidateEv>
 80038b0:	2400      	movs	r4, #0
 80038b2:	e7e6      	b.n	8003882 <_ZN15GameScreen1View16Block1_1_ClickedEv+0x16>

080038b4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 80038b4:	2200      	movs	r2, #0
 80038b6:	6002      	str	r2, [r0, #0]
{

}
 80038b8:	4770      	bx	lr

080038ba <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80038ba:	4770      	bx	lr

080038bc <MX66UW1G45G_EnableDTRMemoryMappedMode>:
  * @param  AddressWidth Address size
  * @note   Only OPI mode support DTR transfer rate
  * @retval XSPI memory status
  */
int32_t MX66UW1G45G_EnableDTRMemoryMappedMode(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode)
{
 80038bc:	b510      	push	{r4, lr}
 80038be:	b096      	sub	sp, #88	@ 0x58
 80038c0:	4604      	mov	r4, r0
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Mode);

  XSPI_RegularCmdTypeDef s_command = {0};
 80038c2:	224c      	movs	r2, #76	@ 0x4c
 80038c4:	2100      	movs	r1, #0
 80038c6:	a803      	add	r0, sp, #12
 80038c8:	f02e ffe5 	bl	8032896 <memset>
  XSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 80038cc:	2300      	movs	r3, #0
 80038ce:	e9cd 3300 	strd	r3, r3, [sp]

  /* Initialize the read command */
  s_command.OperationType = HAL_XSPI_OPTYPE_READ_CFG;
 80038d2:	2301      	movs	r3, #1
 80038d4:	9302      	str	r3, [sp, #8]
  s_command.InstructionMode = HAL_XSPI_INSTRUCTION_8_LINES;
 80038d6:	2304      	movs	r3, #4
  s_command.InstructionDTRMode = HAL_XSPI_INSTRUCTION_DTR_ENABLE;
  s_command.InstructionWidth = HAL_XSPI_INSTRUCTION_16_BITS;
 80038d8:	f04f 0c08 	mov.w	ip, #8
  s_command.InstructionMode = HAL_XSPI_INSTRUCTION_8_LINES;
 80038dc:	9305      	str	r3, [sp, #20]
  s_command.InstructionWidth = HAL_XSPI_INSTRUCTION_16_BITS;
 80038de:	2310      	movs	r3, #16
 80038e0:	e9cd 3c06 	strd	r3, ip, [sp, #24]
  s_command.Instruction = MX66UW1G45G_OCTA_READ_DTR_CMD;
 80038e4:	f64e 6311 	movw	r3, #60945	@ 0xee11
 80038e8:	9304      	str	r3, [sp, #16]
  s_command.AddressMode = HAL_XSPI_ADDRESS_8_LINES;
 80038ea:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  s_command.AddressDTRMode = HAL_XSPI_ADDRESS_DTR_ENABLE;
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 80038ee:	f44f 6100 	mov.w	r1, #2048	@ 0x800
  s_command.AddressMode = HAL_XSPI_ADDRESS_8_LINES;
 80038f2:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 80038f4:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 80038f8:	e9cd 310a 	strd	r3, r1, [sp, #40]	@ 0x28
  s_command.AlternateBytesMode = HAL_XSPI_ALT_BYTES_NONE;
  s_command.DataMode = HAL_XSPI_DATA_8_LINES;
 80038fc:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
  s_command.DataDTRMode = HAL_XSPI_DATA_DTR_ENABLE;
  s_command.DummyCycles = DUMMY_CYCLES_READ_OCTAL_DTR;
 8003900:	f04f 6c00 	mov.w	ip, #134217728	@ 0x8000000
  s_command.DataMode = HAL_XSPI_DATA_8_LINES;
 8003904:	9310      	str	r3, [sp, #64]	@ 0x40
  s_command.DummyCycles = DUMMY_CYCLES_READ_OCTAL_DTR;
 8003906:	2306      	movs	r3, #6
 8003908:	e9cd c312 	strd	ip, r3, [sp, #72]	@ 0x48
  s_command.DQSMode = HAL_XSPI_DQS_ENABLE;
 800390c:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 #if defined (XSPI_CCR_SIOO)
  s_command.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
 #endif

  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003910:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003914:	4620      	mov	r0, r4
 8003916:	a902      	add	r1, sp, #8
  s_command.DQSMode = HAL_XSPI_DQS_ENABLE;
 8003918:	9314      	str	r3, [sp, #80]	@ 0x50
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800391a:	f004 fdd3 	bl	80084c4 <HAL_XSPI_Command>
 800391e:	b118      	cbz	r0, 8003928 <MX66UW1G45G_EnableDTRMemoryMappedMode+0x6c>
  {
    return MX66UW1G45G_ERROR;
 8003920:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003924:	b016      	add	sp, #88	@ 0x58
 8003926:	bd10      	pop	{r4, pc}
  s_command.OperationType = HAL_XSPI_OPTYPE_WRITE_CFG;
 8003928:	2302      	movs	r3, #2
 800392a:	9302      	str	r3, [sp, #8]
  s_command.Instruction = MX66UW1G45G_OCTA_PAGE_PROG_CMD;
 800392c:	f241 23ed 	movw	r3, #4845	@ 0x12ed
  s_command.DQSMode = HAL_XSPI_DQS_DISABLE;
 8003930:	e9cd 0013 	strd	r0, r0, [sp, #76]	@ 0x4c
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003934:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003938:	4620      	mov	r0, r4
 800393a:	a902      	add	r1, sp, #8
  s_command.Instruction = MX66UW1G45G_OCTA_PAGE_PROG_CMD;
 800393c:	9304      	str	r3, [sp, #16]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800393e:	f004 fdc1 	bl	80084c4 <HAL_XSPI_Command>
 8003942:	2800      	cmp	r0, #0
 8003944:	d1ec      	bne.n	8003920 <MX66UW1G45G_EnableDTRMemoryMappedMode+0x64>
  s_mem_mapped_cfg.TimeOutActivation = HAL_XSPI_TIMEOUT_COUNTER_DISABLE;
 8003946:	9000      	str	r0, [sp, #0]
  if (HAL_XSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
 8003948:	4669      	mov	r1, sp
 800394a:	4620      	mov	r0, r4
 800394c:	f004 fee7 	bl	800871e <HAL_XSPI_MemoryMapped>
 8003950:	3800      	subs	r0, #0
 8003952:	bf18      	it	ne
 8003954:	2001      	movne	r0, #1
 8003956:	4240      	negs	r0, r0
 8003958:	e7e4      	b.n	8003924 <MX66UW1G45G_EnableDTRMemoryMappedMode+0x68>

0800395a <MX66UW1G45G_WriteEnable>:
  * @param  Mode Interface mode
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_WriteEnable(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 800395a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800395e:	460c      	mov	r4, r1
 8003960:	b09a      	sub	sp, #104	@ 0x68
  XSPI_RegularCmdTypeDef s_command = {0};
 8003962:	2100      	movs	r1, #0
{
 8003964:	4607      	mov	r7, r0
 8003966:	4616      	mov	r6, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003968:	a806      	add	r0, sp, #24
 800396a:	2250      	movs	r2, #80	@ 0x50
 800396c:	f02e ff93 	bl	8032896 <memset>
  XSPI_AutoPollingTypeDef s_config = {0};
 8003970:	2214      	movs	r2, #20
 8003972:	2100      	movs	r1, #0
 8003974:	a801      	add	r0, sp, #4
 8003976:	f02e ff8e 	bl	8032896 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 800397a:	b934      	cbnz	r4, 800398a <MX66UW1G45G_WriteEnable+0x30>
 800397c:	2e01      	cmp	r6, #1
 800397e:	d164      	bne.n	8003a4a <MX66UW1G45G_WriteEnable+0xf0>
  {
    return MX66UW1G45G_ERROR;
 8003980:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003984:	b01a      	add	sp, #104	@ 0x68
 8003986:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 800398a:	2304      	movs	r3, #4
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 800398c:	1e71      	subs	r1, r6, #1
 800398e:	424d      	negs	r5, r1
 8003990:	414d      	adcs	r5, r1
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003992:	2c00      	cmp	r4, #0
 8003994:	bf14      	ite	ne
 8003996:	f04f 0801 	movne.w	r8, #1
 800399a:	f04f 0800 	moveq.w	r8, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 800399e:	9309      	str	r3, [sp, #36]	@ 0x24
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 80039a0:	ea4f 03c5 	mov.w	r3, r5, lsl #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 80039a4:	930b      	str	r3, [sp, #44]	@ 0x2c
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 80039a6:	ea4f 1308 	mov.w	r3, r8, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 80039aa:	930a      	str	r3, [sp, #40]	@ 0x28
                              : MX66UW1G45G_OCTA_WRITE_ENABLE_CMD;
 80039ac:	f240 63f9 	movw	r3, #1785	@ 0x6f9
 80039b0:	bf08      	it	eq
 80039b2:	2306      	moveq	r3, #6
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80039b4:	f241 3288 	movw	r2, #5000	@ 0x1388
 80039b8:	4638      	mov	r0, r7
 80039ba:	a906      	add	r1, sp, #24
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 80039bc:	9308      	str	r3, [sp, #32]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80039be:	f004 fd81 	bl	80084c4 <HAL_XSPI_Command>
 80039c2:	2800      	cmp	r0, #0
 80039c4:	d1dc      	bne.n	8003980 <MX66UW1G45G_WriteEnable+0x26>
                              : MX66UW1G45G_OCTA_READ_STATUS_REG_CMD;
 80039c6:	2c00      	cmp	r4, #0
 80039c8:	f240 53fa 	movw	r3, #1530	@ 0x5fa
 80039cc:	bf08      	it	eq
 80039ce:	2305      	moveq	r3, #5
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 80039d0:	9308      	str	r3, [sp, #32]
  s_command.AddressMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_ADDRESS_NONE : HAL_XSPI_ADDRESS_8_LINES;
 80039d2:	ea4f 2388 	mov.w	r3, r8, lsl #10
 80039d6:	930d      	str	r3, [sp, #52]	@ 0x34
                                 : HAL_XSPI_ADDRESS_DTR_DISABLE;
 80039d8:	ea4f 23c5 	mov.w	r3, r5, lsl #11
  s_command.AddressDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 80039dc:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 80039de:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 80039e2:	930e      	str	r3, [sp, #56]	@ 0x38
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 80039e4:	bf0c      	ite	eq
 80039e6:	f04f 7380 	moveq.w	r3, #16777216	@ 0x1000000
 80039ea:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
 80039ee:	9314      	str	r3, [sp, #80]	@ 0x50
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DATA_DTR_ENABLE : HAL_XSPI_DATA_DTR_DISABLE;
 80039f0:	ea4f 63c5 	mov.w	r3, r5, lsl #27
  s_command.Address = 0U;
 80039f4:	900c      	str	r0, [sp, #48]	@ 0x30
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DATA_DTR_ENABLE : HAL_XSPI_DATA_DTR_DISABLE;
 80039f6:	9316      	str	r3, [sp, #88]	@ 0x58
                              : ((Rate == MX66UW1G45G_DTR_TRANSFER)
 80039f8:	d003      	beq.n	8003a02 <MX66UW1G45G_WriteEnable+0xa8>
 80039fa:	2e01      	cmp	r6, #1
 80039fc:	bf0c      	ite	eq
 80039fe:	2405      	moveq	r4, #5
 8003a00:	2404      	movne	r4, #4
  s_command.DataLength = (Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U;
 8003a02:	2e01      	cmp	r6, #1
 8003a04:	bf0c      	ite	eq
 8003a06:	2302      	moveq	r3, #2
 8003a08:	2301      	movne	r3, #1
  s_command.DQSMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DQS_ENABLE : HAL_XSPI_DQS_DISABLE;
 8003a0a:	076d      	lsls	r5, r5, #29
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a0c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003a10:	4638      	mov	r0, r7
 8003a12:	a906      	add	r1, sp, #24
  s_command.DummyCycles = (Mode == MX66UW1G45G_SPI_MODE)
 8003a14:	9417      	str	r4, [sp, #92]	@ 0x5c
  s_command.DataLength = (Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U;
 8003a16:	9315      	str	r3, [sp, #84]	@ 0x54
  s_command.DQSMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DQS_ENABLE : HAL_XSPI_DQS_DISABLE;
 8003a18:	9518      	str	r5, [sp, #96]	@ 0x60
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a1a:	f004 fd53 	bl	80084c4 <HAL_XSPI_Command>
 8003a1e:	2800      	cmp	r0, #0
 8003a20:	d1ae      	bne.n	8003980 <MX66UW1G45G_WriteEnable+0x26>
  s_config.MatchValue = 2U;
 8003a22:	2302      	movs	r3, #2
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003a24:	2210      	movs	r2, #16
  s_config.MatchMask = 2U;
 8003a26:	e9cd 3301 	strd	r3, r3, [sp, #4]
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003a2a:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  s_config.MatchMode = HAL_XSPI_MATCH_MODE_AND;
 8003a2e:	9003      	str	r0, [sp, #12]
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003a30:	e9cd 3204 	strd	r3, r2, [sp, #16]
  if (HAL_XSPI_AutoPolling(Ctx, &s_config, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a34:	4638      	mov	r0, r7
 8003a36:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003a3a:	a901      	add	r1, sp, #4
 8003a3c:	f004 fe1a 	bl	8008674 <HAL_XSPI_AutoPolling>
 8003a40:	3800      	subs	r0, #0
 8003a42:	bf18      	it	ne
 8003a44:	2001      	movne	r0, #1
 8003a46:	4240      	negs	r0, r0
 8003a48:	e79c      	b.n	8003984 <MX66UW1G45G_WriteEnable+0x2a>
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003a4a:	2301      	movs	r3, #1
 8003a4c:	e79e      	b.n	800398c <MX66UW1G45G_WriteEnable+0x32>

08003a4e <MX66UW1G45G_WriteCfg2Register>:
  * @param  Value Value to write to configuration register
  * @retval error status
  */
int32_t MX66UW1G45G_WriteCfg2Register(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode,
                                      MX66UW1G45G_Transfer_t Rate, uint32_t WriteAddr, uint8_t Value)
{
 8003a4e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003a50:	460e      	mov	r6, r1
 8003a52:	b095      	sub	sp, #84	@ 0x54
 8003a54:	4605      	mov	r5, r0
 8003a56:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003a58:	2100      	movs	r1, #0
 8003a5a:	2250      	movs	r2, #80	@ 0x50
 8003a5c:	4668      	mov	r0, sp
{
 8003a5e:	461f      	mov	r7, r3
  XSPI_RegularCmdTypeDef s_command = {0};
 8003a60:	f02e ff19 	bl	8032896 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003a64:	b92e      	cbnz	r6, 8003a72 <MX66UW1G45G_WriteCfg2Register+0x24>
 8003a66:	2c01      	cmp	r4, #1
 8003a68:	d145      	bne.n	8003af6 <MX66UW1G45G_WriteCfg2Register+0xa8>
  {
    return MX66UW1G45G_ERROR;
 8003a6a:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003a6e:	b015      	add	sp, #84	@ 0x54
 8003a70:	bdf0      	pop	{r4, r5, r6, r7, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003a72:	2304      	movs	r3, #4
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003a74:	9303      	str	r3, [sp, #12]
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003a76:	1e63      	subs	r3, r4, #1
 8003a78:	425a      	negs	r2, r3
 8003a7a:	415a      	adcs	r2, r3
 8003a7c:	00d3      	lsls	r3, r2, #3
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003a7e:	2e00      	cmp	r6, #0
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003a80:	9305      	str	r3, [sp, #20]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003a82:	bf14      	ite	ne
 8003a84:	2301      	movne	r3, #1
 8003a86:	2300      	moveq	r3, #0
 8003a88:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003a8c:	9304      	str	r3, [sp, #16]
                              : MX66UW1G45G_OCTA_WRITE_CFG_REG2_CMD;
 8003a8e:	f247 238d 	movw	r3, #29325	@ 0x728d
 8003a92:	bf08      	it	eq
 8003a94:	2372      	moveq	r3, #114	@ 0x72
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003a96:	9302      	str	r3, [sp, #8]
  s_command.AddressMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_ADDRESS_1_LINE : HAL_XSPI_ADDRESS_8_LINES;
 8003a98:	bf0c      	ite	eq
 8003a9a:	f44f 7380 	moveq.w	r3, #256	@ 0x100
 8003a9e:	f44f 6380 	movne.w	r3, #1024	@ 0x400
 8003aa2:	9307      	str	r3, [sp, #28]
                                 : HAL_XSPI_ADDRESS_DTR_DISABLE;
 8003aa4:	ea4f 23c2 	mov.w	r3, r2, lsl #11
  s_command.AddressDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003aa8:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003aaa:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003aae:	9308      	str	r3, [sp, #32]
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003ab0:	bf0c      	ite	eq
 8003ab2:	f04f 7380 	moveq.w	r3, #16777216	@ 0x1000000
 8003ab6:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
                              : HAL_XSPI_DATA_DTR_DISABLE;
 8003aba:	ea4f 62c2 	mov.w	r2, r2, lsl #27
  s_command.Address = WriteAddr;
 8003abe:	9706      	str	r7, [sp, #24]
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003ac0:	930e      	str	r3, [sp, #56]	@ 0x38
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003ac2:	9210      	str	r2, [sp, #64]	@ 0x40
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003ac4:	d019      	beq.n	8003afa <MX66UW1G45G_WriteCfg2Register+0xac>
 8003ac6:	2c01      	cmp	r4, #1
 8003ac8:	bf14      	ite	ne
 8003aca:	2301      	movne	r3, #1
 8003acc:	2302      	moveq	r3, #2
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ace:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003ad2:	4669      	mov	r1, sp
 8003ad4:	4628      	mov	r0, r5
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003ad6:	930f      	str	r3, [sp, #60]	@ 0x3c
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ad8:	f004 fcf4 	bl	80084c4 <HAL_XSPI_Command>
 8003adc:	2800      	cmp	r0, #0
 8003ade:	d1c4      	bne.n	8003a6a <MX66UW1G45G_WriteCfg2Register+0x1c>
  if (HAL_XSPI_Transmit(Ctx, &Value, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ae0:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003ae4:	4628      	mov	r0, r5
 8003ae6:	a91a      	add	r1, sp, #104	@ 0x68
 8003ae8:	f004 fd80 	bl	80085ec <HAL_XSPI_Transmit>
 8003aec:	3800      	subs	r0, #0
 8003aee:	bf18      	it	ne
 8003af0:	2001      	movne	r0, #1
 8003af2:	4240      	negs	r0, r0
 8003af4:	e7bb      	b.n	8003a6e <MX66UW1G45G_WriteCfg2Register+0x20>
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003af6:	2301      	movs	r3, #1
 8003af8:	e7bc      	b.n	8003a74 <MX66UW1G45G_WriteCfg2Register+0x26>
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003afa:	2301      	movs	r3, #1
 8003afc:	e7e7      	b.n	8003ace <MX66UW1G45G_WriteCfg2Register+0x80>

08003afe <MX66UW1G45G_ResetEnable>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_ResetEnable(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 8003afe:	b570      	push	{r4, r5, r6, lr}
 8003b00:	460d      	mov	r5, r1
 8003b02:	b094      	sub	sp, #80	@ 0x50
 8003b04:	4606      	mov	r6, r0
 8003b06:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003b08:	2100      	movs	r1, #0
 8003b0a:	2250      	movs	r2, #80	@ 0x50
 8003b0c:	4668      	mov	r0, sp
 8003b0e:	f02e fec2 	bl	8032896 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003b12:	bb05      	cbnz	r5, 8003b56 <MX66UW1G45G_ResetEnable+0x58>
 8003b14:	2c01      	cmp	r4, #1
 8003b16:	d020      	beq.n	8003b5a <MX66UW1G45G_ResetEnable+0x5c>
  /* Initialize the reset enable command */
  s_command.OperationType = HAL_XSPI_OPTYPE_COMMON_CFG;
  s_command.IOSelect =  HAL_XSPI_SELECT_IO_3_0;
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
                                  ? HAL_XSPI_INSTRUCTION_1_LINE
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003b18:	2301      	movs	r3, #1
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
                                     ? HAL_XSPI_INSTRUCTION_DTR_ENABLE
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003b1a:	1e62      	subs	r2, r4, #1
 8003b1c:	4254      	negs	r4, r2
 8003b1e:	4154      	adcs	r4, r2
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
                                   ? HAL_XSPI_INSTRUCTION_8_BITS
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003b20:	2d00      	cmp	r5, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003b22:	9303      	str	r3, [sp, #12]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003b24:	bf14      	ite	ne
 8003b26:	2301      	movne	r3, #1
 8003b28:	2300      	moveq	r3, #0
 8003b2a:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003b2e:	9304      	str	r3, [sp, #16]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
                              ? MX66UW1G45G_RESET_ENABLE_CMD
                              : MX66UW1G45G_OCTA_RESET_ENABLE_CMD;
 8003b30:	f246 6399 	movw	r3, #26265	@ 0x6699
 8003b34:	bf08      	it	eq
 8003b36:	2366      	moveq	r3, #102	@ 0x66
  s_command.DummyCycles = 0U;
  s_command.DQSMode = HAL_XSPI_DQS_DISABLE;


  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b38:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003b3c:	4669      	mov	r1, sp
 8003b3e:	4630      	mov	r0, r6
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003b40:	00e4      	lsls	r4, r4, #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003b42:	9405      	str	r4, [sp, #20]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003b44:	9302      	str	r3, [sp, #8]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b46:	f004 fcbd 	bl	80084c4 <HAL_XSPI_Command>
 8003b4a:	3800      	subs	r0, #0
 8003b4c:	bf18      	it	ne
 8003b4e:	2001      	movne	r0, #1
 8003b50:	4240      	negs	r0, r0
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003b52:	b014      	add	sp, #80	@ 0x50
 8003b54:	bd70      	pop	{r4, r5, r6, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003b56:	2304      	movs	r3, #4
 8003b58:	e7df      	b.n	8003b1a <MX66UW1G45G_ResetEnable+0x1c>
    return MX66UW1G45G_ERROR;
 8003b5a:	f04f 30ff 	mov.w	r0, #4294967295
 8003b5e:	e7f8      	b.n	8003b52 <MX66UW1G45G_ResetEnable+0x54>

08003b60 <MX66UW1G45G_ResetMemory>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_ResetMemory(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 8003b60:	b570      	push	{r4, r5, r6, lr}
 8003b62:	460d      	mov	r5, r1
 8003b64:	b094      	sub	sp, #80	@ 0x50
 8003b66:	4606      	mov	r6, r0
 8003b68:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003b6a:	2100      	movs	r1, #0
 8003b6c:	2250      	movs	r2, #80	@ 0x50
 8003b6e:	4668      	mov	r0, sp
 8003b70:	f02e fe91 	bl	8032896 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003b74:	bb05      	cbnz	r5, 8003bb8 <MX66UW1G45G_ResetMemory+0x58>
 8003b76:	2c01      	cmp	r4, #1
 8003b78:	d020      	beq.n	8003bbc <MX66UW1G45G_ResetMemory+0x5c>

  /* Initialize the reset enable command */
  s_command.OperationType = HAL_XSPI_OPTYPE_COMMON_CFG;
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
                                  ? HAL_XSPI_INSTRUCTION_1_LINE
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003b7a:	2301      	movs	r3, #1
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
                                     ? HAL_XSPI_INSTRUCTION_DTR_ENABLE
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003b7c:	1e62      	subs	r2, r4, #1
 8003b7e:	4254      	negs	r4, r2
 8003b80:	4154      	adcs	r4, r2
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
                                   ? HAL_XSPI_INSTRUCTION_8_BITS
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003b82:	2d00      	cmp	r5, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003b84:	9303      	str	r3, [sp, #12]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003b86:	bf14      	ite	ne
 8003b88:	2301      	movne	r3, #1
 8003b8a:	2300      	moveq	r3, #0
 8003b8c:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003b90:	9304      	str	r3, [sp, #16]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
                              ? MX66UW1G45G_RESET_MEMORY_CMD
                              : MX66UW1G45G_OCTA_RESET_MEMORY_CMD;
 8003b92:	f649 1366 	movw	r3, #39270	@ 0x9966
 8003b96:	bf08      	it	eq
 8003b98:	2399      	moveq	r3, #153	@ 0x99
 #if defined (XSPI_CCR_SIOO)
  s_command.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
 #endif

  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b9a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003b9e:	4669      	mov	r1, sp
 8003ba0:	4630      	mov	r0, r6
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003ba2:	00e4      	lsls	r4, r4, #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003ba4:	9405      	str	r4, [sp, #20]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003ba6:	9302      	str	r3, [sp, #8]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ba8:	f004 fc8c 	bl	80084c4 <HAL_XSPI_Command>
 8003bac:	3800      	subs	r0, #0
 8003bae:	bf18      	it	ne
 8003bb0:	2001      	movne	r0, #1
 8003bb2:	4240      	negs	r0, r0
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003bb4:	b014      	add	sp, #80	@ 0x50
 8003bb6:	bd70      	pop	{r4, r5, r6, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003bb8:	2304      	movs	r3, #4
 8003bba:	e7df      	b.n	8003b7c <MX66UW1G45G_ResetMemory+0x1c>
    return MX66UW1G45G_ERROR;
 8003bbc:	f04f 30ff 	mov.w	r0, #4294967295
 8003bc0:	e7f8      	b.n	8003bb4 <MX66UW1G45G_ResetMemory+0x54>
	...

08003bc4 <SystemInit>:
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR = RCC_CR_MSISON;
 8003bc4:	2201      	movs	r2, #1
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8003bc6:	480e      	ldr	r0, [pc, #56]	@ (8003c00 <SystemInit+0x3c>)
 8003bc8:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 8003bcc:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003bd0:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
  RCC->CR = RCC_CR_MSISON;
 8003bd4:	4b0b      	ldr	r3, [pc, #44]	@ (8003c04 <SystemInit+0x40>)
 8003bd6:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR1 = 0U;
 8003bd8:	2200      	movs	r2, #0
 8003bda:	61da      	str	r2, [r3, #28]
  RCC->CFGR2 = 0U;
 8003bdc:	621a      	str	r2, [r3, #32]
  RCC->CFGR3 = 0U;
 8003bde:	625a      	str	r2, [r3, #36]	@ 0x24

  /* Reset HSEON, CSSON , HSION, PLLxON bits */
  RCC->CR &= ~(RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLL1ON | RCC_CR_PLL2ON | RCC_CR_PLL3ON);
 8003be0:	6819      	ldr	r1, [r3, #0]
 8003be2:	f021 51a8 	bic.w	r1, r1, #352321536	@ 0x15000000
 8003be6:	f421 2110 	bic.w	r1, r1, #589824	@ 0x90000
 8003bea:	6019      	str	r1, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLL1CFGR = 0U;
 8003bec:	629a      	str	r2, [r3, #40]	@ 0x28

  /* Reset HSEBYP bit */
  RCC->CR &= ~(RCC_CR_HSEBYP);
 8003bee:	6819      	ldr	r1, [r3, #0]
 8003bf0:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
 8003bf4:	6019      	str	r1, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0U;
 8003bf6:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Configure the Vector Table location add offset address ------------------*/
  #ifdef VECT_TAB_SRAM
    SCB->VTOR = SRAM1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
  #else
    SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003bf8:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8003bfc:	6083      	str	r3, [r0, #8]
  #endif
}
 8003bfe:	4770      	bx	lr
 8003c00:	e000ed00 	.word	0xe000ed00
 8003c04:	46020c00 	.word	0x46020c00

08003c08 <HAL_Init>:
  */
HAL_StatusTypeDef HAL_Init(void)
{
  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003c08:	4a10      	ldr	r2, [pc, #64]	@ (8003c4c <HAL_Init+0x44>)
{
 8003c0a:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003c0c:	6813      	ldr	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003c0e:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003c10:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003c14:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003c16:	f000 f84d 	bl	8003cb4 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8003c1a:	f002 fd49 	bl	80066b0 <HAL_RCC_GetSysClockFreq>
 8003c1e:	4b0c      	ldr	r3, [pc, #48]	@ (8003c50 <HAL_Init+0x48>)
 8003c20:	4a0c      	ldr	r2, [pc, #48]	@ (8003c54 <HAL_Init+0x4c>)
 8003c22:	6a1b      	ldr	r3, [r3, #32]
 8003c24:	f003 030f 	and.w	r3, r3, #15
 8003c28:	5cd3      	ldrb	r3, [r2, r3]
 8003c2a:	40d8      	lsrs	r0, r3
 8003c2c:	4b0a      	ldr	r3, [pc, #40]	@ (8003c58 <HAL_Init+0x50>)
 8003c2e:	6018      	str	r0, [r3, #0]

  /* Select HCLK as SysTick clock source */
  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 8003c30:	2004      	movs	r0, #4
 8003c32:	f000 f88f 	bl	8003d54 <HAL_SYSTICK_CLKSourceConfig>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8003c36:	2000      	movs	r0, #0
 8003c38:	f7fd f8aa 	bl	8000d90 <HAL_InitTick>
 8003c3c:	4604      	mov	r4, r0
 8003c3e:	b918      	cbnz	r0, 8003c48 <HAL_Init+0x40>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8003c40:	f7fc fdd2 	bl	80007e8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003c44:	4620      	mov	r0, r4
 8003c46:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003c48:	2401      	movs	r4, #1
 8003c4a:	e7fb      	b.n	8003c44 <HAL_Init+0x3c>
 8003c4c:	40022000 	.word	0x40022000
 8003c50:	46020c00 	.word	0x46020c00
 8003c54:	0803558c 	.word	0x0803558c
 8003c58:	2000004c 	.word	0x2000004c

08003c5c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 8003c5c:	4a03      	ldr	r2, [pc, #12]	@ (8003c6c <HAL_IncTick+0x10>)
 8003c5e:	4b04      	ldr	r3, [pc, #16]	@ (8003c70 <HAL_IncTick+0x14>)
 8003c60:	6811      	ldr	r1, [r2, #0]
 8003c62:	781b      	ldrb	r3, [r3, #0]
 8003c64:	440b      	add	r3, r1
 8003c66:	6013      	str	r3, [r2, #0]
}
 8003c68:	4770      	bx	lr
 8003c6a:	bf00      	nop
 8003c6c:	2006e8e8 	.word	0x2006e8e8
 8003c70:	20000050 	.word	0x20000050

08003c74 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003c74:	4b01      	ldr	r3, [pc, #4]	@ (8003c7c <HAL_GetTick+0x8>)
 8003c76:	6818      	ldr	r0, [r3, #0]
}
 8003c78:	4770      	bx	lr
 8003c7a:	bf00      	nop
 8003c7c:	2006e8e8 	.word	0x2006e8e8

08003c80 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003c80:	b538      	push	{r3, r4, r5, lr}
 8003c82:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003c84:	f7ff fff6 	bl	8003c74 <HAL_GetTick>
 8003c88:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003c8a:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003c8c:	bf1e      	ittt	ne
 8003c8e:	4b04      	ldrne	r3, [pc, #16]	@ (8003ca0 <HAL_Delay+0x20>)
 8003c90:	781b      	ldrbne	r3, [r3, #0]
 8003c92:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8003c94:	f7ff ffee 	bl	8003c74 <HAL_GetTick>
 8003c98:	1b43      	subs	r3, r0, r5
 8003c9a:	42a3      	cmp	r3, r4
 8003c9c:	d3fa      	bcc.n	8003c94 <HAL_Delay+0x14>
  {
  }
}
 8003c9e:	bd38      	pop	{r3, r4, r5, pc}
 8003ca0:	20000050 	.word	0x20000050

08003ca4 <HAL_SYSCFG_DisableSRAMCached>:
  *
  * @retval None
  */
void HAL_SYSCFG_DisableSRAMCached(void)
{
  CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_SRAMCACHED);
 8003ca4:	4a02      	ldr	r2, [pc, #8]	@ (8003cb0 <HAL_SYSCFG_DisableSRAMCached+0xc>)
 8003ca6:	6853      	ldr	r3, [r2, #4]
 8003ca8:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003cac:	6053      	str	r3, [r2, #4]
}
 8003cae:	4770      	bx	lr
 8003cb0:	46000400 	.word	0x46000400

08003cb4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003cb4:	4907      	ldr	r1, [pc, #28]	@ (8003cd4 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003cb6:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003cb8:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003cba:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003cbe:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8003cc2:	0412      	lsls	r2, r2, #16
 8003cc4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003cc6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003cc8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003ccc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8003cd0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003cd2:	4770      	bx	lr
 8003cd4:	e000ed00 	.word	0xe000ed00

08003cd8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003cd8:	4b15      	ldr	r3, [pc, #84]	@ (8003d30 <HAL_NVIC_SetPriority+0x58>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003cda:	b530      	push	{r4, r5, lr}
 8003cdc:	68dc      	ldr	r4, [r3, #12]
 8003cde:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003ce2:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003ce6:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003ce8:	2b04      	cmp	r3, #4
 8003cea:	bf28      	it	cs
 8003cec:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003cee:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003cf0:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003cf4:	bf94      	ite	ls
 8003cf6:	2400      	movls	r4, #0
 8003cf8:	3c03      	subhi	r4, #3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003cfa:	fa05 f303 	lsl.w	r3, r5, r3
 8003cfe:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003d02:	40a5      	lsls	r5, r4
 8003d04:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d08:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8003d0a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d0c:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d10:	bfac      	ite	ge
 8003d12:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d16:	4a07      	ldrlt	r2, [pc, #28]	@ (8003d34 <HAL_NVIC_SetPriority+0x5c>)
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d18:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8003d1c:	b2db      	uxtb	r3, r3
 8003d1e:	bfab      	itete	ge
 8003d20:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d24:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d28:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d2c:	5413      	strblt	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003d2e:	bd30      	pop	{r4, r5, pc}
 8003d30:	e000ed00 	.word	0xe000ed00
 8003d34:	e000ed14 	.word	0xe000ed14

08003d38 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003d38:	2800      	cmp	r0, #0
 8003d3a:	db07      	blt.n	8003d4c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003d3c:	2301      	movs	r3, #1
 8003d3e:	0941      	lsrs	r1, r0, #5
 8003d40:	4a03      	ldr	r2, [pc, #12]	@ (8003d50 <HAL_NVIC_EnableIRQ+0x18>)
 8003d42:	f000 001f 	and.w	r0, r0, #31
 8003d46:	4083      	lsls	r3, r0
 8003d48:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003d4c:	4770      	bx	lr
 8003d4e:	bf00      	nop
 8003d50:	e000e100 	.word	0xe000e100

08003d54 <HAL_SYSTICK_CLKSourceConfig>:
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  switch (CLKSource)
 8003d54:	2804      	cmp	r0, #4
 8003d56:	d818      	bhi.n	8003d8a <HAL_SYSTICK_CLKSourceConfig+0x36>
 8003d58:	e8df f000 	tbb	[pc, r0]
 8003d5c:	1726180a 	.word	0x1726180a
 8003d60:	03          	.byte	0x03
 8003d61:	00          	.byte	0x00
  {
    /* Select HCLK as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK:
      SET_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003d62:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003d66:	6913      	ldr	r3, [r2, #16]
 8003d68:	f043 0304 	orr.w	r3, r3, #4
 8003d6c:	6113      	str	r3, [r2, #16]
      break;
 8003d6e:	4770      	bx	lr
    /* Select HCLK_DIV8 as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK_DIV8:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003d70:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003d74:	6913      	ldr	r3, [r2, #16]
 8003d76:	f023 0304 	bic.w	r3, r3, #4
 8003d7a:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, (0x00000000U));
 8003d7c:	4a11      	ldr	r2, [pc, #68]	@ (8003dc4 <HAL_SYSTICK_CLKSourceConfig+0x70>)
 8003d7e:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8003d82:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_0);
      break;
    /* Select LSE as Systick clock source */
    case SYSTICK_CLKSOURCE_LSE:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_1);
 8003d86:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
      break;
    default:
      /* Nothing to do */
      break;
  }
}
 8003d8a:	4770      	bx	lr
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003d8c:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003d90:	6913      	ldr	r3, [r2, #16]
 8003d92:	f023 0304 	bic.w	r3, r3, #4
 8003d96:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_0);
 8003d98:	4a0a      	ldr	r2, [pc, #40]	@ (8003dc4 <HAL_SYSTICK_CLKSourceConfig+0x70>)
 8003d9a:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8003d9e:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8003da2:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8003da6:	e7ee      	b.n	8003d86 <HAL_SYSTICK_CLKSourceConfig+0x32>
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003da8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003dac:	6913      	ldr	r3, [r2, #16]
 8003dae:	f023 0304 	bic.w	r3, r3, #4
 8003db2:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_1);
 8003db4:	4a03      	ldr	r2, [pc, #12]	@ (8003dc4 <HAL_SYSTICK_CLKSourceConfig+0x70>)
 8003db6:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8003dba:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8003dbe:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8003dc2:	e7e0      	b.n	8003d86 <HAL_SYSTICK_CLKSourceConfig+0x32>
 8003dc4:	46020c00 	.word	0x46020c00

08003dc8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003dc8:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003dca:	4604      	mov	r4, r0
 8003dcc:	b908      	cbnz	r0, 8003dd2 <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8003dce:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8003dd0:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003dd2:	7f43      	ldrb	r3, [r0, #29]
 8003dd4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003dd8:	b913      	cbnz	r3, 8003de0 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8003dda:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8003ddc:	f7fc fd1c 	bl	8000818 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8003de0:	2302      	movs	r3, #2
 8003de2:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8003de4:	7923      	ldrb	r3, [r4, #4]
 8003de6:	b9e3      	cbnz	r3, 8003e22 <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8003de8:	6823      	ldr	r3, [r4, #0]
 8003dea:	4a13      	ldr	r2, [pc, #76]	@ (8003e38 <HAL_CRC_Init+0x70>)
 8003dec:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8003dee:	689a      	ldr	r2, [r3, #8]
 8003df0:	f022 0218 	bic.w	r2, r2, #24
 8003df4:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003df6:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8003df8:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003dfa:	b9d2      	cbnz	r2, 8003e32 <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8003dfc:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003e00:	611a      	str	r2, [r3, #16]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8003e02:	689a      	ldr	r2, [r3, #8]
 8003e04:	6961      	ldr	r1, [r4, #20]
 8003e06:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8003e0a:	430a      	orrs	r2, r1
 8003e0c:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8003e0e:	689a      	ldr	r2, [r3, #8]
 8003e10:	69a1      	ldr	r1, [r4, #24]
 8003e12:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003e16:	430a      	orrs	r2, r1
 8003e18:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8003e1a:	2301      	movs	r3, #1
  return HAL_OK;
 8003e1c:	2000      	movs	r0, #0
  hcrc->State = HAL_CRC_STATE_READY;
 8003e1e:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8003e20:	e7d6      	b.n	8003dd0 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8003e22:	4620      	mov	r0, r4
 8003e24:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8003e28:	f000 f808 	bl	8003e3c <HAL_CRCEx_Polynomial_Set>
 8003e2c:	2800      	cmp	r0, #0
 8003e2e:	d0e2      	beq.n	8003df6 <HAL_CRC_Init+0x2e>
 8003e30:	e7cd      	b.n	8003dce <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003e32:	6922      	ldr	r2, [r4, #16]
 8003e34:	e7e4      	b.n	8003e00 <HAL_CRC_Init+0x38>
 8003e36:	bf00      	nop
 8003e38:	04c11db7 	.word	0x04c11db7

08003e3c <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8003e3c:	07cb      	lsls	r3, r1, #31
{
 8003e3e:	b510      	push	{r4, lr}
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8003e40:	d50d      	bpl.n	8003e5e <HAL_CRCEx_Polynomial_Set+0x22>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8003e42:	231f      	movs	r3, #31
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8003e44:	3b01      	subs	r3, #1
 8003e46:	d31d      	bcc.n	8003e84 <HAL_CRCEx_Polynomial_Set+0x48>
 8003e48:	fa21 f403 	lsr.w	r4, r1, r3
 8003e4c:	07e4      	lsls	r4, r4, #31
 8003e4e:	d5f9      	bpl.n	8003e44 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
 8003e50:	2a10      	cmp	r2, #16
 8003e52:	d013      	beq.n	8003e7c <HAL_CRCEx_Polynomial_Set+0x40>
 8003e54:	2a10      	cmp	r2, #16
 8003e56:	d804      	bhi.n	8003e62 <HAL_CRCEx_Polynomial_Set+0x26>
 8003e58:	b13a      	cbz	r2, 8003e6a <HAL_CRCEx_Polynomial_Set+0x2e>
 8003e5a:	2a08      	cmp	r2, #8
 8003e5c:	d010      	beq.n	8003e80 <HAL_CRCEx_Polynomial_Set+0x44>
 8003e5e:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8003e60:	e00b      	b.n	8003e7a <HAL_CRCEx_Polynomial_Set+0x3e>
    switch (PolyLength)
 8003e62:	2a18      	cmp	r2, #24
 8003e64:	d1fb      	bne.n	8003e5e <HAL_CRCEx_Polynomial_Set+0x22>
        if (msb >= HAL_CRC_LENGTH_7B)
 8003e66:	2b06      	cmp	r3, #6
        if (msb >= HAL_CRC_LENGTH_16B)
 8003e68:	d8f9      	bhi.n	8003e5e <HAL_CRCEx_Polynomial_Set+0x22>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8003e6a:	6800      	ldr	r0, [r0, #0]
 8003e6c:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8003e6e:	6883      	ldr	r3, [r0, #8]
 8003e70:	f023 0318 	bic.w	r3, r3, #24
 8003e74:	4313      	orrs	r3, r2
 8003e76:	6083      	str	r3, [r0, #8]
 8003e78:	2000      	movs	r0, #0
}
 8003e7a:	bd10      	pop	{r4, pc}
        if (msb >= HAL_CRC_LENGTH_8B)
 8003e7c:	2b07      	cmp	r3, #7
 8003e7e:	e7f3      	b.n	8003e68 <HAL_CRCEx_Polynomial_Set+0x2c>
        if (msb >= HAL_CRC_LENGTH_16B)
 8003e80:	2b0f      	cmp	r3, #15
 8003e82:	e7f1      	b.n	8003e68 <HAL_CRCEx_Polynomial_Set+0x2c>
    switch (PolyLength)
 8003e84:	2a10      	cmp	r2, #16
 8003e86:	d1e5      	bne.n	8003e54 <HAL_CRCEx_Polynomial_Set+0x18>
 8003e88:	e7e9      	b.n	8003e5e <HAL_CRCEx_Polynomial_Set+0x22>

08003e8a <HAL_DCACHE_ErrorCallback>:
  * @brief  Error callback.
  * @param  hdcache Pointer to a DCACHE_HandleTypeDef structure that contains
  *                 the configuration information for the specified DCACHEx peripheral.
  * @retval None
  */
__weak void HAL_DCACHE_ErrorCallback(DCACHE_HandleTypeDef *hdcache)
 8003e8a:	4770      	bx	lr

08003e8c <HAL_DCACHE_CleanByAddrCallback>:
__weak void HAL_DCACHE_CleanByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8003e8c:	4770      	bx	lr

08003e8e <HAL_DCACHE_InvalidateByAddrCallback>:
__weak void HAL_DCACHE_InvalidateByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8003e8e:	4770      	bx	lr

08003e90 <HAL_DCACHE_CleanAndInvalidateByAddrCallback>:
__weak void HAL_DCACHE_CleanAndInvalidateByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8003e90:	4770      	bx	lr

08003e92 <HAL_DCACHE_InvalidateCompleteCallback>:
__weak void HAL_DCACHE_InvalidateCompleteCallback(DCACHE_HandleTypeDef *hdcache)
 8003e92:	4770      	bx	lr

08003e94 <HAL_DCACHE_Enable>:
  if (hdcache == NULL)
 8003e94:	4602      	mov	r2, r0
 8003e96:	b150      	cbz	r0, 8003eae <HAL_DCACHE_Enable+0x1a>
  if (READ_BIT(hdcache->Instance->SR, (DCACHE_SR_BUSYF | DCACHE_SR_BUSYCMDF)) != 0U)
 8003e98:	6801      	ldr	r1, [r0, #0]
 8003e9a:	6848      	ldr	r0, [r1, #4]
 8003e9c:	f010 0009 	ands.w	r0, r0, #9
 8003ea0:	d107      	bne.n	8003eb2 <HAL_DCACHE_Enable+0x1e>
    hdcache->ErrorCode = HAL_DCACHE_ERROR_NONE;
 8003ea2:	6290      	str	r0, [r2, #40]	@ 0x28
    SET_BIT(hdcache->Instance->CR, DCACHE_CR_EN);
 8003ea4:	680b      	ldr	r3, [r1, #0]
 8003ea6:	f043 0301 	orr.w	r3, r3, #1
 8003eaa:	600b      	str	r3, [r1, #0]
 8003eac:	4770      	bx	lr
    return HAL_ERROR;
 8003eae:	2001      	movs	r0, #1
 8003eb0:	4770      	bx	lr
    status =  HAL_BUSY;
 8003eb2:	2002      	movs	r0, #2
}
 8003eb4:	4770      	bx	lr
	...

08003eb8 <HAL_DCACHE_Init>:
{
 8003eb8:	b510      	push	{r4, lr}
  if (hdcache == NULL)
 8003eba:	4604      	mov	r4, r0
 8003ebc:	b320      	cbz	r0, 8003f08 <HAL_DCACHE_Init+0x50>
  if (hdcache->State == HAL_DCACHE_STATE_RESET)
 8003ebe:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 8003ec2:	b983      	cbnz	r3, 8003ee6 <HAL_DCACHE_Init+0x2e>
    hdcache->ErrorCallback                      = HAL_DCACHE_ErrorCallback;
 8003ec4:	4b11      	ldr	r3, [pc, #68]	@ (8003f0c <HAL_DCACHE_Init+0x54>)
 8003ec6:	6083      	str	r3, [r0, #8]
    hdcache->CleanByAddrCallback                = HAL_DCACHE_CleanByAddrCallback;
 8003ec8:	4b11      	ldr	r3, [pc, #68]	@ (8003f10 <HAL_DCACHE_Init+0x58>)
 8003eca:	60c3      	str	r3, [r0, #12]
    hdcache->InvalidateByAddrCallback           = HAL_DCACHE_InvalidateByAddrCallback;
 8003ecc:	4b11      	ldr	r3, [pc, #68]	@ (8003f14 <HAL_DCACHE_Init+0x5c>)
 8003ece:	6103      	str	r3, [r0, #16]
    hdcache->InvalidateCompleteCallback         = HAL_DCACHE_InvalidateCompleteCallback;
 8003ed0:	4b11      	ldr	r3, [pc, #68]	@ (8003f18 <HAL_DCACHE_Init+0x60>)
 8003ed2:	6143      	str	r3, [r0, #20]
    hdcache->CleanAndInvalidateByAddrCallback   = HAL_DCACHE_CleanAndInvalidateByAddrCallback;
 8003ed4:	4b11      	ldr	r3, [pc, #68]	@ (8003f1c <HAL_DCACHE_Init+0x64>)
 8003ed6:	6183      	str	r3, [r0, #24]
    if (hdcache->MspInitCallback == NULL)
 8003ed8:	69c3      	ldr	r3, [r0, #28]
 8003eda:	b90b      	cbnz	r3, 8003ee0 <HAL_DCACHE_Init+0x28>
      hdcache->MspInitCallback = HAL_DCACHE_MspInit;
 8003edc:	4b10      	ldr	r3, [pc, #64]	@ (8003f20 <HAL_DCACHE_Init+0x68>)
 8003ede:	61c3      	str	r3, [r0, #28]
    hdcache->MspInitCallback(hdcache);
 8003ee0:	4620      	mov	r0, r4
 8003ee2:	69e3      	ldr	r3, [r4, #28]
 8003ee4:	4798      	blx	r3
  hdcache->ErrorCode = HAL_DCACHE_ERROR_NONE;
 8003ee6:	2300      	movs	r3, #0
 8003ee8:	62a3      	str	r3, [r4, #40]	@ 0x28
  hdcache->State = HAL_DCACHE_STATE_READY;
 8003eea:	2301      	movs	r3, #1
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 8003eec:	6822      	ldr	r2, [r4, #0]
  hdcache->State = HAL_DCACHE_STATE_READY;
 8003eee:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 8003ef2:	6813      	ldr	r3, [r2, #0]
 8003ef4:	6861      	ldr	r1, [r4, #4]
 8003ef6:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003efa:	430b      	orrs	r3, r1
  status = HAL_DCACHE_Enable(hdcache);
 8003efc:	4620      	mov	r0, r4
}
 8003efe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 8003f02:	6013      	str	r3, [r2, #0]
  status = HAL_DCACHE_Enable(hdcache);
 8003f04:	f7ff bfc6 	b.w	8003e94 <HAL_DCACHE_Enable>
}
 8003f08:	2001      	movs	r0, #1
 8003f0a:	bd10      	pop	{r4, pc}
 8003f0c:	08003e8b 	.word	0x08003e8b
 8003f10:	08003e8d 	.word	0x08003e8d
 8003f14:	08003e8f 	.word	0x08003e8f
 8003f18:	08003e93 	.word	0x08003e93
 8003f1c:	08003e91 	.word	0x08003e91
 8003f20:	08000849 	.word	0x08000849

08003f24 <HAL_DMA_Init>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *const hdma)
{
 8003f24:	b538      	push	{r3, r4, r5, lr}
 8003f26:	4604      	mov	r4, r0
  /* Get tick number */
  uint32_t tickstart = HAL_GetTick();
 8003f28:	f7ff fea4 	bl	8003c74 <HAL_GetTick>
 8003f2c:	4605      	mov	r5, r0

  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 8003f2e:	2c00      	cmp	r4, #0
 8003f30:	f000 81a2 	beq.w	8004278 <HAL_DMA_Init+0x354>
    assert_param(IS_DMA_BURST_LENGTH(hdma->Init.DestBurstLength));
    assert_param(IS_DMA_TRANSFER_ALLOCATED_PORT(hdma->Init.TransferAllocatedPort));
  }

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 8003f34:	2300      	movs	r3, #0
 8003f36:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c

  /* Update the DMA channel state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8003f3a:	2302      	movs	r3, #2
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003f3c:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 8003f3e:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54

  /* Disable the DMA channel */
  __HAL_DMA_DISABLE(hdma);
 8003f42:	6953      	ldr	r3, [r2, #20]
 8003f44:	f043 0306 	orr.w	r3, r3, #6
 8003f48:	6153      	str	r3, [r2, #20]

  /* Check if the DMA channel is effectively disabled */
  while ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 8003f4a:	6823      	ldr	r3, [r4, #0]
 8003f4c:	695a      	ldr	r2, [r3, #20]
 8003f4e:	07d2      	lsls	r2, r2, #31
 8003f50:	f100 8187 	bmi.w	8004262 <HAL_DMA_Init+0x33e>

  /* Prepare DMA Channel Control Register (CCR) value *****************************************************************/
  tmpreg = hdma->Init.Priority;

  /* Write DMA Channel Control Register (CCR) */
  MODIFY_REG(hdma->Instance->CCR, DMA_CCR_PRIO | DMA_CCR_LAP | DMA_CCR_LSM, tmpreg);
 8003f54:	695a      	ldr	r2, [r3, #20]
 8003f56:	6a21      	ldr	r1, [r4, #32]
 8003f58:	f422 0243 	bic.w	r2, r2, #12779520	@ 0xc30000
 8003f5c:	430a      	orrs	r2, r1
 8003f5e:	615a      	str	r2, [r3, #20]

  /* Prepare DMA Channel Transfer Register (CTR1) value ***************************************************************/
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8003f60:	69e1      	ldr	r1, [r4, #28]
 8003f62:	6962      	ldr	r2, [r4, #20]

  /* Add parameters specific to GPDMA */
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003f64:	4daf      	ldr	r5, [pc, #700]	@ (8004224 <HAL_DMA_Init+0x300>)
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8003f66:	430a      	orrs	r2, r1
 8003f68:	6921      	ldr	r1, [r4, #16]
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003f6a:	42ab      	cmp	r3, r5
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8003f6c:	ea42 0201 	orr.w	r2, r2, r1
 8003f70:	69a1      	ldr	r1, [r4, #24]
 8003f72:	48ad      	ldr	r0, [pc, #692]	@ (8004228 <HAL_DMA_Init+0x304>)
 8003f74:	ea42 0201 	orr.w	r2, r2, r1
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003f78:	f000 8087 	beq.w	800408a <HAL_DMA_Init+0x166>
 8003f7c:	49ab      	ldr	r1, [pc, #684]	@ (800422c <HAL_DMA_Init+0x308>)
 8003f7e:	428b      	cmp	r3, r1
 8003f80:	f000 8083 	beq.w	800408a <HAL_DMA_Init+0x166>
 8003f84:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8003f88:	3180      	adds	r1, #128	@ 0x80
 8003f8a:	428b      	cmp	r3, r1
 8003f8c:	d07d      	beq.n	800408a <HAL_DMA_Init+0x166>
 8003f8e:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8003f92:	428b      	cmp	r3, r1
 8003f94:	d079      	beq.n	800408a <HAL_DMA_Init+0x166>
 8003f96:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8003f9a:	3180      	adds	r1, #128	@ 0x80
 8003f9c:	428b      	cmp	r3, r1
 8003f9e:	d074      	beq.n	800408a <HAL_DMA_Init+0x166>
 8003fa0:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8003fa4:	428b      	cmp	r3, r1
 8003fa6:	d070      	beq.n	800408a <HAL_DMA_Init+0x166>
 8003fa8:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8003fac:	3180      	adds	r1, #128	@ 0x80
 8003fae:	428b      	cmp	r3, r1
 8003fb0:	d06b      	beq.n	800408a <HAL_DMA_Init+0x166>
 8003fb2:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8003fb6:	428b      	cmp	r3, r1
 8003fb8:	d067      	beq.n	800408a <HAL_DMA_Init+0x166>
 8003fba:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8003fbe:	3180      	adds	r1, #128	@ 0x80
 8003fc0:	428b      	cmp	r3, r1
 8003fc2:	d062      	beq.n	800408a <HAL_DMA_Init+0x166>
 8003fc4:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8003fc8:	428b      	cmp	r3, r1
 8003fca:	d05e      	beq.n	800408a <HAL_DMA_Init+0x166>
 8003fcc:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8003fd0:	3180      	adds	r1, #128	@ 0x80
 8003fd2:	428b      	cmp	r3, r1
 8003fd4:	d059      	beq.n	800408a <HAL_DMA_Init+0x166>
 8003fd6:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8003fda:	428b      	cmp	r3, r1
 8003fdc:	d055      	beq.n	800408a <HAL_DMA_Init+0x166>
 8003fde:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8003fe2:	3180      	adds	r1, #128	@ 0x80
 8003fe4:	428b      	cmp	r3, r1
 8003fe6:	d050      	beq.n	800408a <HAL_DMA_Init+0x166>
 8003fe8:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8003fec:	428b      	cmp	r3, r1
 8003fee:	d04c      	beq.n	800408a <HAL_DMA_Init+0x166>
 8003ff0:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8003ff4:	3180      	adds	r1, #128	@ 0x80
 8003ff6:	428b      	cmp	r3, r1
 8003ff8:	d047      	beq.n	800408a <HAL_DMA_Init+0x166>
 8003ffa:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8003ffe:	428b      	cmp	r3, r1
 8004000:	d043      	beq.n	800408a <HAL_DMA_Init+0x166>
 8004002:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004006:	3180      	adds	r1, #128	@ 0x80
 8004008:	428b      	cmp	r3, r1
 800400a:	d03e      	beq.n	800408a <HAL_DMA_Init+0x166>
 800400c:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004010:	428b      	cmp	r3, r1
 8004012:	d03a      	beq.n	800408a <HAL_DMA_Init+0x166>
 8004014:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004018:	3180      	adds	r1, #128	@ 0x80
 800401a:	428b      	cmp	r3, r1
 800401c:	d035      	beq.n	800408a <HAL_DMA_Init+0x166>
 800401e:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004022:	428b      	cmp	r3, r1
 8004024:	d031      	beq.n	800408a <HAL_DMA_Init+0x166>
 8004026:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800402a:	3180      	adds	r1, #128	@ 0x80
 800402c:	428b      	cmp	r3, r1
 800402e:	d02c      	beq.n	800408a <HAL_DMA_Init+0x166>
 8004030:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004034:	428b      	cmp	r3, r1
 8004036:	d028      	beq.n	800408a <HAL_DMA_Init+0x166>
 8004038:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800403c:	3180      	adds	r1, #128	@ 0x80
 800403e:	428b      	cmp	r3, r1
 8004040:	d023      	beq.n	800408a <HAL_DMA_Init+0x166>
 8004042:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004046:	428b      	cmp	r3, r1
 8004048:	d01f      	beq.n	800408a <HAL_DMA_Init+0x166>
 800404a:	4283      	cmp	r3, r0
 800404c:	d01d      	beq.n	800408a <HAL_DMA_Init+0x166>
 800404e:	3180      	adds	r1, #128	@ 0x80
 8004050:	428b      	cmp	r3, r1
 8004052:	d01a      	beq.n	800408a <HAL_DMA_Init+0x166>
 8004054:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004058:	3180      	adds	r1, #128	@ 0x80
 800405a:	428b      	cmp	r3, r1
 800405c:	d015      	beq.n	800408a <HAL_DMA_Init+0x166>
 800405e:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004062:	428b      	cmp	r3, r1
 8004064:	d011      	beq.n	800408a <HAL_DMA_Init+0x166>
 8004066:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800406a:	3180      	adds	r1, #128	@ 0x80
 800406c:	428b      	cmp	r3, r1
 800406e:	d00c      	beq.n	800408a <HAL_DMA_Init+0x166>
 8004070:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004074:	428b      	cmp	r3, r1
 8004076:	d008      	beq.n	800408a <HAL_DMA_Init+0x166>
 8004078:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800407c:	3180      	adds	r1, #128	@ 0x80
 800407e:	428b      	cmp	r3, r1
 8004080:	d003      	beq.n	800408a <HAL_DMA_Init+0x166>
 8004082:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004086:	428b      	cmp	r3, r1
 8004088:	d10d      	bne.n	80040a6 <HAL_DMA_Init+0x182>
  {
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
               (((hdma->Init.DestBurstLength - 1U) << DMA_CTR1_DBL_1_Pos) & DMA_CTR1_DBL_1) |
 800408a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800408c:	3901      	subs	r1, #1
 800408e:	0509      	lsls	r1, r1, #20
 8004090:	f001 717c 	and.w	r1, r1, #66060288	@ 0x3f00000
 8004094:	4311      	orrs	r1, r2
 8004096:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8004098:	4311      	orrs	r1, r2
               (((hdma->Init.SrcBurstLength - 1U) << DMA_CTR1_SBL_1_Pos) & DMA_CTR1_SBL_1));
 800409a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800409c:	3a01      	subs	r2, #1
 800409e:	0112      	lsls	r2, r2, #4
 80040a0:	f402 727c 	and.w	r2, r2, #1008	@ 0x3f0
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
 80040a4:	430a      	orrs	r2, r1
  }

  /* Write DMA Channel Transfer Register 1 (CTR1) */
  MODIFY_REG(hdma->Instance->CTR1, ~(DMA_CTR1_SSEC | DMA_CTR1_DSEC), tmpreg);
 80040a6:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80040a8:	f001 2180 	and.w	r1, r1, #2147516416	@ 0x80008000
 80040ac:	430a      	orrs	r2, r1
 80040ae:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Prepare DMA Channel Transfer Register 2 (CTR2) value *************************************************************/
  tmpreg = hdma->Init.BlkHWRequest | (hdma->Init.Request & DMA_CTR2_REQSEL) | hdma->Init.TransferEventMode;
 80040b0:	68a1      	ldr	r1, [r4, #8]
 80040b2:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80040b4:	4311      	orrs	r1, r2
 80040b6:	6862      	ldr	r2, [r4, #4]
 80040b8:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80040bc:	4311      	orrs	r1, r2

  /* Memory to Peripheral Transfer */
  if ((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80040be:	68e2      	ldr	r2, [r4, #12]
 80040c0:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80040c4:	f040 80da 	bne.w	800427c <HAL_DMA_Init+0x358>
  {
    if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 80040c8:	42ab      	cmp	r3, r5
 80040ca:	f000 8087 	beq.w	80041dc <HAL_DMA_Init+0x2b8>
 80040ce:	4a57      	ldr	r2, [pc, #348]	@ (800422c <HAL_DMA_Init+0x308>)
 80040d0:	4293      	cmp	r3, r2
 80040d2:	f000 8083 	beq.w	80041dc <HAL_DMA_Init+0x2b8>
 80040d6:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80040da:	3280      	adds	r2, #128	@ 0x80
 80040dc:	4293      	cmp	r3, r2
 80040de:	d07d      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 80040e0:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80040e4:	4293      	cmp	r3, r2
 80040e6:	d079      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 80040e8:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80040ec:	3280      	adds	r2, #128	@ 0x80
 80040ee:	4293      	cmp	r3, r2
 80040f0:	d074      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 80040f2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80040f6:	4293      	cmp	r3, r2
 80040f8:	d070      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 80040fa:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80040fe:	3280      	adds	r2, #128	@ 0x80
 8004100:	4293      	cmp	r3, r2
 8004102:	d06b      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 8004104:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004108:	4293      	cmp	r3, r2
 800410a:	d067      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 800410c:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004110:	3280      	adds	r2, #128	@ 0x80
 8004112:	4293      	cmp	r3, r2
 8004114:	d062      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 8004116:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800411a:	4293      	cmp	r3, r2
 800411c:	d05e      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 800411e:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004122:	3280      	adds	r2, #128	@ 0x80
 8004124:	4293      	cmp	r3, r2
 8004126:	d059      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 8004128:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800412c:	4293      	cmp	r3, r2
 800412e:	d055      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 8004130:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004134:	3280      	adds	r2, #128	@ 0x80
 8004136:	4293      	cmp	r3, r2
 8004138:	d050      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 800413a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800413e:	4293      	cmp	r3, r2
 8004140:	d04c      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 8004142:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004146:	3280      	adds	r2, #128	@ 0x80
 8004148:	4293      	cmp	r3, r2
 800414a:	d047      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 800414c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004150:	4293      	cmp	r3, r2
 8004152:	d043      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 8004154:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004158:	3280      	adds	r2, #128	@ 0x80
 800415a:	4293      	cmp	r3, r2
 800415c:	d03e      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 800415e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004162:	4293      	cmp	r3, r2
 8004164:	d03a      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 8004166:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800416a:	3280      	adds	r2, #128	@ 0x80
 800416c:	4293      	cmp	r3, r2
 800416e:	d035      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 8004170:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004174:	4293      	cmp	r3, r2
 8004176:	d031      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 8004178:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800417c:	3280      	adds	r2, #128	@ 0x80
 800417e:	4293      	cmp	r3, r2
 8004180:	d02c      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 8004182:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004186:	4293      	cmp	r3, r2
 8004188:	d028      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 800418a:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800418e:	3280      	adds	r2, #128	@ 0x80
 8004190:	4293      	cmp	r3, r2
 8004192:	d023      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 8004194:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004198:	4293      	cmp	r3, r2
 800419a:	d01f      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 800419c:	4283      	cmp	r3, r0
 800419e:	d01d      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 80041a0:	3280      	adds	r2, #128	@ 0x80
 80041a2:	4293      	cmp	r3, r2
 80041a4:	d01a      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 80041a6:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041aa:	3280      	adds	r2, #128	@ 0x80
 80041ac:	4293      	cmp	r3, r2
 80041ae:	d015      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 80041b0:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041b4:	4293      	cmp	r3, r2
 80041b6:	d011      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 80041b8:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041bc:	3280      	adds	r2, #128	@ 0x80
 80041be:	4293      	cmp	r3, r2
 80041c0:	d00c      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 80041c2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041c6:	4293      	cmp	r3, r2
 80041c8:	d008      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 80041ca:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041ce:	3280      	adds	r2, #128	@ 0x80
 80041d0:	4293      	cmp	r3, r2
 80041d2:	d003      	beq.n	80041dc <HAL_DMA_Init+0x2b8>
 80041d4:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041d8:	4293      	cmp	r3, r2
 80041da:	d101      	bne.n	80041e0 <HAL_DMA_Init+0x2bc>
    {
      tmpreg |= DMA_CTR2_DREQ;
 80041dc:	f441 6180 	orr.w	r1, r1, #1024	@ 0x400
  {
    /* Nothing to do */
  }

  /* Write DMA Channel Transfer Register 2 (CTR2) */
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 80041e0:	6c5d      	ldr	r5, [r3, #68]	@ 0x44
 80041e2:	4a13      	ldr	r2, [pc, #76]	@ (8004230 <HAL_DMA_Init+0x30c>)

  /* Write DMA Channel Block Register 1 (CBR1) ************************************************************************/
  WRITE_REG(hdma->Instance->CBR1, 0U);

  /* If 2D Addressing is supported by current channel */
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 80041e4:	4283      	cmp	r3, r0
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 80041e6:	ea02 0205 	and.w	r2, r2, r5
 80041ea:	ea42 0201 	orr.w	r2, r2, r1
 80041ee:	645a      	str	r2, [r3, #68]	@ 0x44
  WRITE_REG(hdma->Instance->CBR1, 0U);
 80041f0:	f04f 0200 	mov.w	r2, #0
 80041f4:	649a      	str	r2, [r3, #72]	@ 0x48
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 80041f6:	d028      	beq.n	800424a <HAL_DMA_Init+0x326>
 80041f8:	4a0e      	ldr	r2, [pc, #56]	@ (8004234 <HAL_DMA_Init+0x310>)
 80041fa:	4293      	cmp	r3, r2
 80041fc:	d025      	beq.n	800424a <HAL_DMA_Init+0x326>
 80041fe:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004202:	3280      	adds	r2, #128	@ 0x80
 8004204:	4293      	cmp	r3, r2
 8004206:	d020      	beq.n	800424a <HAL_DMA_Init+0x326>
 8004208:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800420c:	4293      	cmp	r3, r2
 800420e:	d01c      	beq.n	800424a <HAL_DMA_Init+0x326>
 8004210:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004214:	3280      	adds	r2, #128	@ 0x80
 8004216:	4293      	cmp	r3, r2
 8004218:	d017      	beq.n	800424a <HAL_DMA_Init+0x326>
 800421a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800421e:	4293      	cmp	r3, r2
 8004220:	d013      	beq.n	800424a <HAL_DMA_Init+0x326>
 8004222:	e009      	b.n	8004238 <HAL_DMA_Init+0x314>
 8004224:	40020050 	.word	0x40020050
 8004228:	40020650 	.word	0x40020650
 800422c:	50020050 	.word	0x50020050
 8004230:	3c803180 	.word	0x3c803180
 8004234:	50020650 	.word	0x50020650
 8004238:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800423c:	3280      	adds	r2, #128	@ 0x80
 800423e:	4293      	cmp	r3, r2
 8004240:	d003      	beq.n	800424a <HAL_DMA_Init+0x326>
 8004242:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004246:	4293      	cmp	r3, r2
 8004248:	d102      	bne.n	8004250 <HAL_DMA_Init+0x32c>
  {
    /* Write DMA Channel Transfer Register 3 (CTR3) *******************************************************************/
    WRITE_REG(hdma->Instance->CTR3, 0U);
 800424a:	2200      	movs	r2, #0
 800424c:	655a      	str	r2, [r3, #84]	@ 0x54

    /* Write DMA Channel Block Register 2 (CBR2) **********************************************************************/
    WRITE_REG(hdma->Instance->CBR2, 0U);
 800424e:	659a      	str	r2, [r3, #88]	@ 0x58
  }

  /* Write DMA Channel linked-list address register (CLLR) ************************************************************/
  WRITE_REG(hdma->Instance->CLLR, 0U);
 8004250:	2000      	movs	r0, #0
 8004252:	67d8      	str	r0, [r3, #124]	@ 0x7c
  hdma->Mode = hdma->Init.Mode;
 8004254:	6b63      	ldr	r3, [r4, #52]	@ 0x34
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004256:	65a0      	str	r0, [r4, #88]	@ 0x58
  hdma->Mode = hdma->Init.Mode;
 8004258:	6523      	str	r3, [r4, #80]	@ 0x50
  hdma->State = HAL_DMA_STATE_READY;
 800425a:	2301      	movs	r3, #1
 800425c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
  return HAL_OK;
 8004260:	e00b      	b.n	800427a <HAL_DMA_Init+0x356>
    if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 8004262:	f7ff fd07 	bl	8003c74 <HAL_GetTick>
 8004266:	1b40      	subs	r0, r0, r5
 8004268:	2805      	cmp	r0, #5
 800426a:	f67f ae6e 	bls.w	8003f4a <HAL_DMA_Init+0x26>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800426e:	2310      	movs	r3, #16
 8004270:	65a3      	str	r3, [r4, #88]	@ 0x58
      hdma->State = HAL_DMA_STATE_ERROR;
 8004272:	2303      	movs	r3, #3
 8004274:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    return HAL_ERROR;
 8004278:	2001      	movs	r0, #1
}
 800427a:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hdma->Init.Direction) == DMA_MEMORY_TO_MEMORY)
 800427c:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
    tmpreg |= DMA_CTR2_SWREQ;
 8004280:	bf08      	it	eq
 8004282:	f441 7100 	orreq.w	r1, r1, #512	@ 0x200
 8004286:	e7ab      	b.n	80041e0 <HAL_DMA_Init+0x2bc>

08004288 <HAL_DMA_Start_IT>:
{
 8004288:	b530      	push	{r4, r5, lr}
  if (hdma == NULL)
 800428a:	2800      	cmp	r0, #0
 800428c:	d036      	beq.n	80042fc <HAL_DMA_Start_IT+0x74>
  __HAL_LOCK(hdma);
 800428e:	f890 404c 	ldrb.w	r4, [r0, #76]	@ 0x4c
 8004292:	2c01      	cmp	r4, #1
 8004294:	d034      	beq.n	8004300 <HAL_DMA_Start_IT+0x78>
 8004296:	2401      	movs	r4, #1
 8004298:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
  if (hdma->State == HAL_DMA_STATE_READY)
 800429c:	f890 4054 	ldrb.w	r4, [r0, #84]	@ 0x54
 80042a0:	2c01      	cmp	r4, #1
 80042a2:	f04f 0400 	mov.w	r4, #0
 80042a6:	d125      	bne.n	80042f4 <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 80042a8:	2502      	movs	r5, #2
 80042aa:	f880 5054 	strb.w	r5, [r0, #84]	@ 0x54
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80042ae:	6584      	str	r4, [r0, #88]	@ 0x58
  MODIFY_REG(hdma->Instance->CBR1, DMA_CBR1_BNDT, (SrcDataSize & DMA_CBR1_BNDT));
 80042b0:	6804      	ldr	r4, [r0, #0]
 80042b2:	b29b      	uxth	r3, r3
 80042b4:	6ca5      	ldr	r5, [r4, #72]	@ 0x48
 80042b6:	0c2d      	lsrs	r5, r5, #16
 80042b8:	042d      	lsls	r5, r5, #16
 80042ba:	431d      	orrs	r5, r3
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 80042bc:	f44f 43fe 	mov.w	r3, #32512	@ 0x7f00
  MODIFY_REG(hdma->Instance->CBR1, DMA_CBR1_BNDT, (SrcDataSize & DMA_CBR1_BNDT));
 80042c0:	64a5      	str	r5, [r4, #72]	@ 0x48
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 80042c2:	60e3      	str	r3, [r4, #12]
  hdma->Instance->CSAR = SrcAddress;
 80042c4:	64e1      	str	r1, [r4, #76]	@ 0x4c
  hdma->Instance->CDAR = DstAddress;
 80042c6:	6522      	str	r2, [r4, #80]	@ 0x50
    __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 80042c8:	6963      	ldr	r3, [r4, #20]
 80042ca:	f443 43ba 	orr.w	r3, r3, #23808	@ 0x5d00
 80042ce:	6163      	str	r3, [r4, #20]
    if (hdma->XferHalfCpltCallback != NULL)
 80042d0:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 80042d2:	b11b      	cbz	r3, 80042dc <HAL_DMA_Start_IT+0x54>
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 80042d4:	6963      	ldr	r3, [r4, #20]
 80042d6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80042da:	6163      	str	r3, [r4, #20]
    if (hdma->XferSuspendCallback != NULL)
 80042dc:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 80042de:	b11b      	cbz	r3, 80042e8 <HAL_DMA_Start_IT+0x60>
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 80042e0:	6963      	ldr	r3, [r4, #20]
 80042e2:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80042e6:	6163      	str	r3, [r4, #20]
  return HAL_OK;
 80042e8:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 80042ea:	6963      	ldr	r3, [r4, #20]
 80042ec:	f043 0301 	orr.w	r3, r3, #1
 80042f0:	6163      	str	r3, [r4, #20]
}
 80042f2:	bd30      	pop	{r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 80042f4:	2340      	movs	r3, #64	@ 0x40
    __HAL_UNLOCK(hdma);
 80042f6:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 80042fa:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 80042fc:	2001      	movs	r0, #1
 80042fe:	e7f8      	b.n	80042f2 <HAL_DMA_Start_IT+0x6a>
  __HAL_LOCK(hdma);
 8004300:	2002      	movs	r0, #2
 8004302:	e7f6      	b.n	80042f2 <HAL_DMA_Start_IT+0x6a>

08004304 <HAL_DMA_Abort>:
{
 8004304:	b538      	push	{r3, r4, r5, lr}
 8004306:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
 8004308:	f7ff fcb4 	bl	8003c74 <HAL_GetTick>
 800430c:	4605      	mov	r5, r0
  if (hdma == NULL)
 800430e:	b144      	cbz	r4, 8004322 <HAL_DMA_Abort+0x1e>
  if (hdma->State != HAL_DMA_STATE_BUSY)
 8004310:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8004314:	2b02      	cmp	r3, #2
 8004316:	d006      	beq.n	8004326 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004318:	2320      	movs	r3, #32
 800431a:	65a3      	str	r3, [r4, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 800431c:	2300      	movs	r3, #0
 800431e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    return HAL_ERROR;
 8004322:	2001      	movs	r0, #1
}
 8004324:	bd38      	pop	{r3, r4, r5, pc}
    hdma->Instance->CCR |= DMA_CCR_SUSP;
 8004326:	6822      	ldr	r2, [r4, #0]
 8004328:	6953      	ldr	r3, [r2, #20]
 800432a:	f043 0304 	orr.w	r3, r3, #4
 800432e:	6153      	str	r3, [r2, #20]
    hdma->State = HAL_DMA_STATE_SUSPEND;
 8004330:	2305      	movs	r3, #5
 8004332:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    while ((hdma->Instance->CSR & DMA_CSR_SUSPF) == 0U)
 8004336:	6823      	ldr	r3, [r4, #0]
 8004338:	691a      	ldr	r2, [r3, #16]
 800433a:	0490      	lsls	r0, r2, #18
 800433c:	d519      	bpl.n	8004372 <HAL_DMA_Abort+0x6e>
    hdma->Instance->CCR |= DMA_CCR_RESET;
 800433e:	695a      	ldr	r2, [r3, #20]
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004340:	6d21      	ldr	r1, [r4, #80]	@ 0x50
    hdma->Instance->CCR |= DMA_CCR_RESET;
 8004342:	f042 0202 	orr.w	r2, r2, #2
 8004346:	615a      	str	r2, [r3, #20]
    hdma->State = HAL_DMA_STATE_ABORT;
 8004348:	2204      	movs	r2, #4
 800434a:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
    __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 800434e:	f44f 42fe 	mov.w	r2, #32512	@ 0x7f00
 8004352:	60da      	str	r2, [r3, #12]
    hdma->State = HAL_DMA_STATE_READY;
 8004354:	2201      	movs	r2, #1
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004356:	0609      	lsls	r1, r1, #24
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004358:	bf48      	it	mi
 800435a:	6f61      	ldrmi	r1, [r4, #116]	@ 0x74
    hdma->State = HAL_DMA_STATE_READY;
 800435c:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
 8004360:	f04f 0000 	mov.w	r0, #0
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004364:	bf42      	ittt	mi
 8004366:	730a      	strbmi	r2, [r1, #12]
      hdma->Instance->CBR1 = 0U;
 8004368:	2200      	movmi	r2, #0
 800436a:	649a      	strmi	r2, [r3, #72]	@ 0x48
    __HAL_UNLOCK(hdma);
 800436c:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
  return HAL_OK;
 8004370:	e7d8      	b.n	8004324 <HAL_DMA_Abort+0x20>
      if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 8004372:	f7ff fc7f 	bl	8003c74 <HAL_GetTick>
 8004376:	1b40      	subs	r0, r0, r5
 8004378:	2805      	cmp	r0, #5
 800437a:	d9dc      	bls.n	8004336 <HAL_DMA_Abort+0x32>
        hdma->ErrorCode |= HAL_DMA_ERROR_TIMEOUT;
 800437c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800437e:	f043 0310 	orr.w	r3, r3, #16
 8004382:	65a3      	str	r3, [r4, #88]	@ 0x58
        hdma->State = HAL_DMA_STATE_ERROR;
 8004384:	2303      	movs	r3, #3
 8004386:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 800438a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800438c:	061d      	lsls	r5, r3, #24
 800438e:	d5c5      	bpl.n	800431c <HAL_DMA_Abort+0x18>
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004390:	2201      	movs	r2, #1
 8004392:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8004394:	731a      	strb	r2, [r3, #12]
        __HAL_UNLOCK(hdma);
 8004396:	e7c1      	b.n	800431c <HAL_DMA_Abort+0x18>

08004398 <HAL_DMA_Abort_IT>:
  if (hdma == NULL)
 8004398:	b128      	cbz	r0, 80043a6 <HAL_DMA_Abort_IT+0xe>
  if (hdma->State != HAL_DMA_STATE_BUSY)
 800439a:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 800439e:	2b02      	cmp	r3, #2
 80043a0:	d003      	beq.n	80043aa <HAL_DMA_Abort_IT+0x12>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80043a2:	2320      	movs	r3, #32
 80043a4:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 80043a6:	2001      	movs	r0, #1
 80043a8:	4770      	bx	lr
    hdma->State = HAL_DMA_STATE_ABORT;
 80043aa:	2304      	movs	r3, #4
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 80043ac:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 80043ae:	f880 3054 	strb.w	r3, [r0, #84]	@ 0x54
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 80043b2:	6953      	ldr	r3, [r2, #20]
  return HAL_OK;
 80043b4:	2000      	movs	r0, #0
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 80043b6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80043ba:	f043 0304 	orr.w	r3, r3, #4
 80043be:	6153      	str	r3, [r2, #20]
}
 80043c0:	4770      	bx	lr

080043c2 <HAL_DMA_IRQHandler>:
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80043c2:	2101      	movs	r1, #1
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 80043c4:	6803      	ldr	r3, [r0, #0]
{
 80043c6:	b510      	push	{r4, lr}
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 80043c8:	f423 627f 	bic.w	r2, r3, #4080	@ 0xff0
 80043cc:	f022 020f 	bic.w	r2, r2, #15
{
 80043d0:	4604      	mov	r4, r0
  uint32_t global_active_flag_ns = IS_DMA_GLOBAL_ACTIVE_FLAG_NS(p_dma_instance, global_it_flag);
 80043d2:	68d0      	ldr	r0, [r2, #12]
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80043d4:	f3c3 020b 	ubfx	r2, r3, #0, #12
 80043d8:	3a50      	subs	r2, #80	@ 0x50
 80043da:	f3c2 12c4 	ubfx	r2, r2, #7, #5
 80043de:	fa01 f202 	lsl.w	r2, r1, r2
  if (global_active_flag_ns == 0U)
 80043e2:	4202      	tst	r2, r0
 80043e4:	f000 80ab 	beq.w	800453e <HAL_DMA_IRQHandler+0x17c>
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_DTE) != 0U))
 80043e8:	691a      	ldr	r2, [r3, #16]
 80043ea:	0550      	lsls	r0, r2, #21
 80043ec:	d508      	bpl.n	8004400 <HAL_DMA_IRQHandler+0x3e>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DTE) != 0U)
 80043ee:	695a      	ldr	r2, [r3, #20]
 80043f0:	0552      	lsls	r2, r2, #21
 80043f2:	d505      	bpl.n	8004400 <HAL_DMA_IRQHandler+0x3e>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_DTE);
 80043f4:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80043f8:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_DTE;
 80043fa:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 80043fc:	430a      	orrs	r2, r1
 80043fe:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_ULE) != 0U))
 8004400:	691a      	ldr	r2, [r3, #16]
 8004402:	0510      	lsls	r0, r2, #20
 8004404:	d509      	bpl.n	800441a <HAL_DMA_IRQHandler+0x58>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_ULE) != 0U)
 8004406:	695a      	ldr	r2, [r3, #20]
 8004408:	0511      	lsls	r1, r2, #20
 800440a:	d506      	bpl.n	800441a <HAL_DMA_IRQHandler+0x58>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_ULE);
 800440c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8004410:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_ULE;
 8004412:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 8004414:	f042 0202 	orr.w	r2, r2, #2
 8004418:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_USE) != 0U))
 800441a:	691a      	ldr	r2, [r3, #16]
 800441c:	04d2      	lsls	r2, r2, #19
 800441e:	d509      	bpl.n	8004434 <HAL_DMA_IRQHandler+0x72>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_USE) != 0U)
 8004420:	695a      	ldr	r2, [r3, #20]
 8004422:	04d0      	lsls	r0, r2, #19
 8004424:	d506      	bpl.n	8004434 <HAL_DMA_IRQHandler+0x72>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_USE);
 8004426:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800442a:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_USE;
 800442c:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 800442e:	f042 0204 	orr.w	r2, r2, #4
 8004432:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TO) != 0U))
 8004434:	691a      	ldr	r2, [r3, #16]
 8004436:	0451      	lsls	r1, r2, #17
 8004438:	d509      	bpl.n	800444e <HAL_DMA_IRQHandler+0x8c>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TO) != 0U)
 800443a:	695a      	ldr	r2, [r3, #20]
 800443c:	0452      	lsls	r2, r2, #17
 800443e:	d506      	bpl.n	800444e <HAL_DMA_IRQHandler+0x8c>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TO);
 8004440:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8004444:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_TO;
 8004446:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 8004448:	f042 0208 	orr.w	r2, r2, #8
 800444c:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_HT) != 0U))
 800444e:	691a      	ldr	r2, [r3, #16]
 8004450:	0590      	lsls	r0, r2, #22
 8004452:	d509      	bpl.n	8004468 <HAL_DMA_IRQHandler+0xa6>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != 0U)
 8004454:	695a      	ldr	r2, [r3, #20]
 8004456:	0591      	lsls	r1, r2, #22
 8004458:	d506      	bpl.n	8004468 <HAL_DMA_IRQHandler+0xa6>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_HT);
 800445a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800445e:	60da      	str	r2, [r3, #12]
      if (hdma->XferHalfCpltCallback != NULL)
 8004460:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004462:	b10b      	cbz	r3, 8004468 <HAL_DMA_IRQHandler+0xa6>
        hdma->XferHalfCpltCallback(hdma);
 8004464:	4620      	mov	r0, r4
 8004466:	4798      	blx	r3
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_SUSP) != 0U))
 8004468:	6823      	ldr	r3, [r4, #0]
 800446a:	691a      	ldr	r2, [r3, #16]
 800446c:	0492      	lsls	r2, r2, #18
 800446e:	d52e      	bpl.n	80044ce <HAL_DMA_IRQHandler+0x10c>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_SUSP) != 0U)
 8004470:	695a      	ldr	r2, [r3, #20]
 8004472:	0490      	lsls	r0, r2, #18
 8004474:	d52b      	bpl.n	80044ce <HAL_DMA_IRQHandler+0x10c>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_SUSP);
 8004476:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800447a:	60da      	str	r2, [r3, #12]
      if (hdma->State == HAL_DMA_STATE_ABORT)
 800447c:	f894 2054 	ldrb.w	r2, [r4, #84]	@ 0x54
 8004480:	2a04      	cmp	r2, #4
 8004482:	d11d      	bne.n	80044c0 <HAL_DMA_IRQHandler+0xfe>
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_SUSP);
 8004484:	695a      	ldr	r2, [r3, #20]
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004486:	6d21      	ldr	r1, [r4, #80]	@ 0x50
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_SUSP);
 8004488:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800448c:	615a      	str	r2, [r3, #20]
        hdma->Instance->CCR |= DMA_CCR_RESET;
 800448e:	695a      	ldr	r2, [r3, #20]
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004490:	0609      	lsls	r1, r1, #24
        hdma->Instance->CCR |= DMA_CCR_RESET;
 8004492:	f042 0202 	orr.w	r2, r2, #2
 8004496:	615a      	str	r2, [r3, #20]
        hdma->State = HAL_DMA_STATE_READY;
 8004498:	f04f 0201 	mov.w	r2, #1
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 800449c:	bf48      	it	mi
 800449e:	6f61      	ldrmi	r1, [r4, #116]	@ 0x74
        hdma->State = HAL_DMA_STATE_READY;
 80044a0:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 80044a4:	bf42      	ittt	mi
 80044a6:	730a      	strbmi	r2, [r1, #12]
          hdma->Instance->CBR1 = 0U;
 80044a8:	2200      	movmi	r2, #0
 80044aa:	649a      	strmi	r2, [r3, #72]	@ 0x48
        __HAL_UNLOCK(hdma);
 80044ac:	2300      	movs	r3, #0
 80044ae:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
        if (hdma->XferAbortCallback != NULL)
 80044b2:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
    if (hdma->XferErrorCallback != NULL)
 80044b4:	2b00      	cmp	r3, #0
 80044b6:	d042      	beq.n	800453e <HAL_DMA_IRQHandler+0x17c>
      hdma->XferErrorCallback(hdma);
 80044b8:	4620      	mov	r0, r4
}
 80044ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      hdma->XferErrorCallback(hdma);
 80044be:	4718      	bx	r3
        hdma->State = HAL_DMA_STATE_SUSPEND;
 80044c0:	2305      	movs	r3, #5
 80044c2:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
        if (hdma->XferSuspendCallback != NULL)
 80044c6:	6f23      	ldr	r3, [r4, #112]	@ 0x70
 80044c8:	b10b      	cbz	r3, 80044ce <HAL_DMA_IRQHandler+0x10c>
          hdma->XferSuspendCallback(hdma);
 80044ca:	4620      	mov	r0, r4
 80044cc:	4798      	blx	r3
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TC) != 0U))
 80044ce:	6823      	ldr	r3, [r4, #0]
 80044d0:	691a      	ldr	r2, [r3, #16]
 80044d2:	05d2      	lsls	r2, r2, #23
 80044d4:	d518      	bpl.n	8004508 <HAL_DMA_IRQHandler+0x146>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != 0U)
 80044d6:	695a      	ldr	r2, [r3, #20]
 80044d8:	05d0      	lsls	r0, r2, #23
 80044da:	d515      	bpl.n	8004508 <HAL_DMA_IRQHandler+0x146>
      if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80044dc:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 80044de:	0611      	lsls	r1, r2, #24
 80044e0:	d526      	bpl.n	8004530 <HAL_DMA_IRQHandler+0x16e>
        if (hdma->Instance->CLLR == 0U)
 80044e2:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
 80044e4:	b932      	cbnz	r2, 80044f4 <HAL_DMA_IRQHandler+0x132>
          if (hdma->Instance->CBR1 == 0U)
 80044e6:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80044e8:	b922      	cbnz	r2, 80044f4 <HAL_DMA_IRQHandler+0x132>
            hdma->State = HAL_DMA_STATE_READY;
 80044ea:	2201      	movs	r2, #1
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 80044ec:	6f61      	ldr	r1, [r4, #116]	@ 0x74
            hdma->State = HAL_DMA_STATE_READY;
 80044ee:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 80044f2:	730a      	strb	r2, [r1, #12]
      __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT));
 80044f4:	f44f 7240 	mov.w	r2, #768	@ 0x300
 80044f8:	60da      	str	r2, [r3, #12]
      __HAL_UNLOCK(hdma);
 80044fa:	2300      	movs	r3, #0
 80044fc:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
      if (hdma->XferCpltCallback != NULL)
 8004500:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 8004502:	b10b      	cbz	r3, 8004508 <HAL_DMA_IRQHandler+0x146>
        hdma->XferCpltCallback(hdma);
 8004504:	4620      	mov	r0, r4
 8004506:	4798      	blx	r3
  if (hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8004508:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800450a:	b1c3      	cbz	r3, 800453e <HAL_DMA_IRQHandler+0x17c>
    hdma->Instance->CCR |= DMA_CCR_RESET;
 800450c:	6822      	ldr	r2, [r4, #0]
 800450e:	6953      	ldr	r3, [r2, #20]
 8004510:	f043 0302 	orr.w	r3, r3, #2
 8004514:	6153      	str	r3, [r2, #20]
    hdma->State = HAL_DMA_STATE_READY;
 8004516:	2301      	movs	r3, #1
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004518:	6d22      	ldr	r2, [r4, #80]	@ 0x50
    hdma->State = HAL_DMA_STATE_READY;
 800451a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 800451e:	0612      	lsls	r2, r2, #24
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004520:	bf44      	itt	mi
 8004522:	6f62      	ldrmi	r2, [r4, #116]	@ 0x74
 8004524:	7313      	strbmi	r3, [r2, #12]
    __HAL_UNLOCK(hdma);
 8004526:	2300      	movs	r3, #0
 8004528:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    if (hdma->XferErrorCallback != NULL)
 800452c:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 800452e:	e7c1      	b.n	80044b4 <HAL_DMA_IRQHandler+0xf2>
        if (hdma->Instance->CBR1 == 0U)
 8004530:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8004532:	2a00      	cmp	r2, #0
 8004534:	d1de      	bne.n	80044f4 <HAL_DMA_IRQHandler+0x132>
          hdma->State = HAL_DMA_STATE_READY;
 8004536:	2201      	movs	r2, #1
 8004538:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800453c:	e7da      	b.n	80044f4 <HAL_DMA_IRQHandler+0x132>
}
 800453e:	bd10      	pop	{r4, pc}

08004540 <HAL_DMA_GetError>:
  return hdma->ErrorCode;
 8004540:	6d80      	ldr	r0, [r0, #88]	@ 0x58
}
 8004542:	4770      	bx	lr

08004544 <HAL_DMA_ConfigChannelAttributes>:
  if (hdma == NULL)
 8004544:	b1d0      	cbz	r0, 800457c <HAL_DMA_ConfigChannelAttributes+0x38>
  if ((ChannelAttributes & DMA_CHANNEL_ATTR_PRIV_MASK) == DMA_CHANNEL_ATTR_PRIV_MASK)
 8004546:	06cb      	lsls	r3, r1, #27
 8004548:	d401      	bmi.n	800454e <HAL_DMA_ConfigChannelAttributes+0xa>
  return HAL_OK;
 800454a:	2000      	movs	r0, #0
 800454c:	4770      	bx	lr
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 800454e:	6803      	ldr	r3, [r0, #0]
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8004550:	2001      	movs	r0, #1
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 8004552:	f423 627f 	bic.w	r2, r3, #4080	@ 0xff0
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8004556:	f3c3 030b 	ubfx	r3, r3, #0, #12
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 800455a:	f022 020f 	bic.w	r2, r2, #15
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 800455e:	f001 0111 	and.w	r1, r1, #17
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8004562:	3b50      	subs	r3, #80	@ 0x50
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 8004564:	2911      	cmp	r1, #17
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8004566:	f3c3 13c4 	ubfx	r3, r3, #7, #5
      p_dma_instance->PRIVCFGR |= channel_idx;
 800456a:	6851      	ldr	r1, [r2, #4]
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 800456c:	fa00 f303 	lsl.w	r3, r0, r3
      p_dma_instance->PRIVCFGR |= channel_idx;
 8004570:	bf0c      	ite	eq
 8004572:	430b      	orreq	r3, r1
      p_dma_instance->PRIVCFGR &= (~channel_idx);
 8004574:	ea21 0303 	bicne.w	r3, r1, r3
 8004578:	6053      	str	r3, [r2, #4]
 800457a:	e7e6      	b.n	800454a <HAL_DMA_ConfigChannelAttributes+0x6>
    return HAL_ERROR;
 800457c:	2001      	movs	r0, #1
}
 800457e:	4770      	bx	lr

08004580 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004580:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004582:	4604      	mov	r4, r0
 8004584:	2800      	cmp	r0, #0
 8004586:	d036      	beq.n	80045f6 <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004588:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
 800458c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004590:	b91b      	cbnz	r3, 800459a <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004592:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004596:	f7fc f983 	bl	80008a0 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800459a:	2302      	movs	r3, #2
 800459c:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 80045a0:	6823      	ldr	r3, [r4, #0]
 80045a2:	69e0      	ldr	r0, [r4, #28]
 80045a4:	6819      	ldr	r1, [r3, #0]
 80045a6:	6862      	ldr	r2, [r4, #4]
 80045a8:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
 80045ac:	4302      	orrs	r2, r0
 80045ae:	f021 0140 	bic.w	r1, r1, #64	@ 0x40
 80045b2:	430a      	orrs	r2, r1
 80045b4:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 80045b6:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80045b8:	69a0      	ldr	r0, [r4, #24]
 80045ba:	68a2      	ldr	r2, [r4, #8]
 80045bc:	f421 7183 	bic.w	r1, r1, #262	@ 0x106
 80045c0:	4302      	orrs	r2, r0
 80045c2:	f021 0101 	bic.w	r1, r1, #1
 80045c6:	430a      	orrs	r2, r1
 80045c8:	635a      	str	r2, [r3, #52]	@ 0x34
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80045ca:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80045cc:	68e1      	ldr	r1, [r4, #12]
 80045ce:	0c12      	lsrs	r2, r2, #16
 80045d0:	0412      	lsls	r2, r2, #16
 80045d2:	430a      	orrs	r2, r1
 80045d4:	641a      	str	r2, [r3, #64]	@ 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 80045d6:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80045d8:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 80045dc:	0552      	lsls	r2, r2, #21
 80045de:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
 80045e2:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 80045e6:	430a      	orrs	r2, r1
 80045e8:	635a      	str	r2, [r3, #52]	@ 0x34
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80045ea:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80045ec:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80045ee:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80045f0:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
 80045f4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80045f6:	2001      	movs	r0, #1
 80045f8:	e7fc      	b.n	80045f4 <HAL_DMA2D_Init+0x74>

080045fa <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 80045fa:	4770      	bx	lr

080045fc <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 80045fc:	4770      	bx	lr

080045fe <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80045fe:	6803      	ldr	r3, [r0, #0]
{
 8004600:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004602:	685e      	ldr	r6, [r3, #4]
{
 8004604:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004606:	07f2      	lsls	r2, r6, #31
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004608:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800460a:	d514      	bpl.n	8004636 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 800460c:	05e9      	lsls	r1, r5, #23
 800460e:	d512      	bpl.n	8004636 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004610:	681a      	ldr	r2, [r3, #0]
 8004612:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004616:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004618:	6e42      	ldr	r2, [r0, #100]	@ 0x64
 800461a:	f042 0201 	orr.w	r2, r2, #1
 800461e:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004620:	2201      	movs	r2, #1
 8004622:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004624:	2304      	movs	r3, #4
 8004626:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 800462a:	2300      	movs	r3, #0
 800462c:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 8004630:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8004632:	b103      	cbz	r3, 8004636 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8004634:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004636:	06b2      	lsls	r2, r6, #26
 8004638:	d516      	bpl.n	8004668 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 800463a:	04ab      	lsls	r3, r5, #18
 800463c:	d514      	bpl.n	8004668 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800463e:	6823      	ldr	r3, [r4, #0]
 8004640:	681a      	ldr	r2, [r3, #0]
 8004642:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004646:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004648:	2220      	movs	r2, #32
 800464a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800464c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800464e:	f043 0302 	orr.w	r3, r3, #2
 8004652:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004654:	2304      	movs	r3, #4
 8004656:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 800465a:	2300      	movs	r3, #0
 800465c:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 8004660:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004662:	b10b      	cbz	r3, 8004668 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004664:	4620      	mov	r0, r4
 8004666:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004668:	0730      	lsls	r0, r6, #28
 800466a:	d516      	bpl.n	800469a <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800466c:	0529      	lsls	r1, r5, #20
 800466e:	d514      	bpl.n	800469a <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004670:	6823      	ldr	r3, [r4, #0]
 8004672:	681a      	ldr	r2, [r3, #0]
 8004674:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004678:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800467a:	2208      	movs	r2, #8
 800467c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800467e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004680:	f043 0304 	orr.w	r3, r3, #4
 8004684:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004686:	2304      	movs	r3, #4
 8004688:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 800468c:	2300      	movs	r3, #0
 800468e:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 8004692:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004694:	b10b      	cbz	r3, 800469a <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004696:	4620      	mov	r0, r4
 8004698:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800469a:	0772      	lsls	r2, r6, #29
 800469c:	d50b      	bpl.n	80046b6 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800469e:	056b      	lsls	r3, r5, #21
 80046a0:	d509      	bpl.n	80046b6 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80046a2:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
 80046a4:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80046a6:	681a      	ldr	r2, [r3, #0]
 80046a8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80046ac:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80046ae:	2204      	movs	r2, #4
 80046b0:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 80046b2:	f7ff ffa2 	bl	80045fa <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80046b6:	07b0      	lsls	r0, r6, #30
 80046b8:	d514      	bpl.n	80046e4 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 80046ba:	05a9      	lsls	r1, r5, #22
 80046bc:	d512      	bpl.n	80046e4 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80046be:	6823      	ldr	r3, [r4, #0]
 80046c0:	681a      	ldr	r2, [r3, #0]
 80046c2:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80046c6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80046c8:	2202      	movs	r2, #2
 80046ca:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80046cc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80046ce:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80046d0:	2301      	movs	r3, #1
 80046d2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 80046d6:	2300      	movs	r3, #0
 80046d8:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
 80046dc:	6a23      	ldr	r3, [r4, #32]
 80046de:	b10b      	cbz	r3, 80046e4 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 80046e0:	4620      	mov	r0, r4
 80046e2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80046e4:	06f2      	lsls	r2, r6, #27
 80046e6:	d513      	bpl.n	8004710 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80046e8:	04eb      	lsls	r3, r5, #19
 80046ea:	d511      	bpl.n	8004710 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80046ec:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80046ee:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80046f0:	681a      	ldr	r2, [r3, #0]
 80046f2:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80046f6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80046f8:	2210      	movs	r2, #16
 80046fa:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80046fc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80046fe:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004700:	2301      	movs	r3, #1
 8004702:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 8004706:	2300      	movs	r3, #0
 8004708:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800470c:	f7ff ff76 	bl	80045fc <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004710:	bd70      	pop	{r4, r5, r6, pc}
	...

08004714 <DMA_List_GetCLLRNodeInfo.isra.0>:
static void DMA_List_GetCLLRNodeInfo(DMA_NodeTypeDef const *const pNode,
                                     uint32_t *const cllr_mask,
                                     uint32_t *const cllr_offset)
{
  /* Check node type */
  if ((pNode->NodeInfo & DMA_CHANNEL_TYPE_2D_ADDR) == DMA_CHANNEL_TYPE_2D_ADDR)
 8004714:	0783      	lsls	r3, r0, #30
 8004716:	d506      	bpl.n	8004726 <DMA_List_GetCLLRNodeInfo.isra.0+0x12>
  {
    /* Update CLLR register mask value */
    if (cllr_mask != NULL)
 8004718:	b109      	cbz	r1, 800471e <DMA_List_GetCLLRNodeInfo.isra.0+0xa>
    {
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_UT3 |
 800471a:	4b06      	ldr	r3, [pc, #24]	@ (8004734 <DMA_List_GetCLLRNodeInfo.isra.0+0x20>)
 800471c:	600b      	str	r3, [r1, #0]
                   DMA_CLLR_UB2 | DMA_CLLR_ULL;
    }

    /* Update CLLR register offset */
    if (cllr_offset != NULL)
 800471e:	b10a      	cbz	r2, 8004724 <DMA_List_GetCLLRNodeInfo.isra.0+0x10>
    {
      *cllr_offset = NODE_CLLR_2D_DEFAULT_OFFSET;
 8004720:	2307      	movs	r3, #7
    }

    /* Update CLLR register offset */
    if (cllr_offset != NULL)
    {
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
 8004722:	6013      	str	r3, [r2, #0]
    }
  }
}
 8004724:	4770      	bx	lr
    if (cllr_mask != NULL)
 8004726:	b109      	cbz	r1, 800472c <DMA_List_GetCLLRNodeInfo.isra.0+0x18>
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_ULL;
 8004728:	4b03      	ldr	r3, [pc, #12]	@ (8004738 <DMA_List_GetCLLRNodeInfo.isra.0+0x24>)
 800472a:	600b      	str	r3, [r1, #0]
    if (cllr_offset != NULL)
 800472c:	2a00      	cmp	r2, #0
 800472e:	d0f9      	beq.n	8004724 <DMA_List_GetCLLRNodeInfo.isra.0+0x10>
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
 8004730:	2305      	movs	r3, #5
 8004732:	e7f6      	b.n	8004722 <DMA_List_GetCLLRNodeInfo.isra.0+0xe>
 8004734:	fe010000 	.word	0xfe010000
 8004738:	f8010000 	.word	0xf8010000

0800473c <HAL_DMAEx_List_Start_IT>:
  if ((hdma == NULL) || (hdma->LinkedListQueue == NULL))
 800473c:	4603      	mov	r3, r0
{
 800473e:	b537      	push	{r0, r1, r2, r4, r5, lr}
  if ((hdma == NULL) || (hdma->LinkedListQueue == NULL))
 8004740:	2800      	cmp	r0, #0
 8004742:	d04b      	beq.n	80047dc <HAL_DMAEx_List_Start_IT+0xa0>
 8004744:	6f42      	ldr	r2, [r0, #116]	@ 0x74
 8004746:	2a00      	cmp	r2, #0
 8004748:	d048      	beq.n	80047dc <HAL_DMAEx_List_Start_IT+0xa0>
  dma_state = hdma->State;
 800474a:	f890 1054 	ldrb.w	r1, [r0, #84]	@ 0x54
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 800474e:	6804      	ldr	r4, [r0, #0]
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 8004750:	2901      	cmp	r1, #1
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 8004752:	6960      	ldr	r0, [r4, #20]
  dma_state = hdma->State;
 8004754:	b2cd      	uxtb	r5, r1
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 8004756:	d003      	beq.n	8004760 <HAL_DMAEx_List_Start_IT+0x24>
 8004758:	2d02      	cmp	r5, #2
 800475a:	d13a      	bne.n	80047d2 <HAL_DMAEx_List_Start_IT+0x96>
 800475c:	03c1      	lsls	r1, r0, #15
 800475e:	d538      	bpl.n	80047d2 <HAL_DMAEx_List_Start_IT+0x96>
    if (hdma->State == HAL_DMA_STATE_READY)
 8004760:	f893 1054 	ldrb.w	r1, [r3, #84]	@ 0x54
 8004764:	2901      	cmp	r1, #1
 8004766:	b2cd      	uxtb	r5, r1
 8004768:	d12c      	bne.n	80047c4 <HAL_DMAEx_List_Start_IT+0x88>
      __HAL_LOCK(hdma);
 800476a:	f893 104c 	ldrb.w	r1, [r3, #76]	@ 0x4c
 800476e:	2002      	movs	r0, #2
 8004770:	2901      	cmp	r1, #1
 8004772:	d02c      	beq.n	80047ce <HAL_DMAEx_List_Start_IT+0x92>
      hdma->ErrorCode                  = HAL_DMA_ERROR_NONE;
 8004774:	2100      	movs	r1, #0
      hdma->State                  = HAL_DMA_STATE_BUSY;
 8004776:	f883 0054 	strb.w	r0, [r3, #84]	@ 0x54
      __HAL_LOCK(hdma);
 800477a:	f883 504c 	strb.w	r5, [r3, #76]	@ 0x4c
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_BUSY;
 800477e:	7310      	strb	r0, [r2, #12]
      hdma->ErrorCode                  = HAL_DMA_ERROR_NONE;
 8004780:	6599      	str	r1, [r3, #88]	@ 0x58
      hdma->LinkedListQueue->ErrorCode = HAL_DMA_QUEUE_ERROR_NONE;
 8004782:	6111      	str	r1, [r2, #16]
      __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 8004784:	6961      	ldr	r1, [r4, #20]
 8004786:	f441 41ba 	orr.w	r1, r1, #23808	@ 0x5d00
 800478a:	6161      	str	r1, [r4, #20]
      if (hdma->XferHalfCpltCallback != NULL)
 800478c:	6e59      	ldr	r1, [r3, #100]	@ 0x64
 800478e:	b119      	cbz	r1, 8004798 <HAL_DMAEx_List_Start_IT+0x5c>
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 8004790:	6961      	ldr	r1, [r4, #20]
 8004792:	f441 7100 	orr.w	r1, r1, #512	@ 0x200
 8004796:	6161      	str	r1, [r4, #20]
      if (hdma->XferSuspendCallback != NULL)
 8004798:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800479a:	b11b      	cbz	r3, 80047a4 <HAL_DMAEx_List_Start_IT+0x68>
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 800479c:	6963      	ldr	r3, [r4, #20]
 800479e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80047a2:	6163      	str	r3, [r4, #20]
      DMA_List_GetCLLRNodeInfo(hdma->LinkedListQueue->Head, &cllr_mask, NULL);
 80047a4:	6815      	ldr	r5, [r2, #0]
 80047a6:	a901      	add	r1, sp, #4
 80047a8:	6a28      	ldr	r0, [r5, #32]
 80047aa:	2200      	movs	r2, #0
 80047ac:	f7ff ffb2 	bl	8004714 <DMA_List_GetCLLRNodeInfo.isra.0>
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 80047b0:	0c2b      	lsrs	r3, r5, #16
 80047b2:	041b      	lsls	r3, r3, #16
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 80047b4:	f025 0503 	bic.w	r5, r5, #3
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 80047b8:	6023      	str	r3, [r4, #0]
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 80047ba:	042d      	lsls	r5, r5, #16
 80047bc:	9b01      	ldr	r3, [sp, #4]
 80047be:	0c2d      	lsrs	r5, r5, #16
 80047c0:	431d      	orrs	r5, r3
 80047c2:	67e5      	str	r5, [r4, #124]	@ 0x7c
  return HAL_OK;
 80047c4:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 80047c6:	6963      	ldr	r3, [r4, #20]
 80047c8:	f043 0301 	orr.w	r3, r3, #1
 80047cc:	6163      	str	r3, [r4, #20]
}
 80047ce:	b003      	add	sp, #12
 80047d0:	bd30      	pop	{r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 80047d2:	2240      	movs	r2, #64	@ 0x40
 80047d4:	659a      	str	r2, [r3, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 80047d6:	2200      	movs	r2, #0
 80047d8:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
    return HAL_ERROR;
 80047dc:	2001      	movs	r0, #1
 80047de:	e7f6      	b.n	80047ce <HAL_DMAEx_List_Start_IT+0x92>

080047e0 <HAL_DMAEx_ConfigDataHandling>:
  if ((hdma == NULL) || (pConfigDataHandling == NULL))
 80047e0:	b1b0      	cbz	r0, 8004810 <HAL_DMAEx_ConfigDataHandling+0x30>
 80047e2:	b1a9      	cbz	r1, 8004810 <HAL_DMAEx_ConfigDataHandling+0x30>
  if (hdma->State == HAL_DMA_STATE_READY)
 80047e4:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 80047e8:	2b01      	cmp	r3, #1
 80047ea:	d10c      	bne.n	8004806 <HAL_DMAEx_ConfigDataHandling+0x26>
    MODIFY_REG(hdma->Instance->CTR1, (DMA_CTR1_DHX | DMA_CTR1_DBX | DMA_CTR1_SBX | DMA_CTR1_PAM),
 80047ec:	e9d1 1300 	ldrd	r1, r3, [r1]
 80047f0:	6800      	ldr	r0, [r0, #0]
 80047f2:	430b      	orrs	r3, r1
 80047f4:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 80047f6:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 80047fa:	f422 5260 	bic.w	r2, r2, #14336	@ 0x3800
 80047fe:	4313      	orrs	r3, r2
 8004800:	6403      	str	r3, [r0, #64]	@ 0x40
  return HAL_OK;
 8004802:	2000      	movs	r0, #0
 8004804:	4770      	bx	lr
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 8004806:	2340      	movs	r3, #64	@ 0x40
 8004808:	6583      	str	r3, [r0, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 800480a:	2300      	movs	r3, #0
 800480c:	f880 304c 	strb.w	r3, [r0, #76]	@ 0x4c
    return HAL_ERROR;
 8004810:	2001      	movs	r0, #1
}
 8004812:	4770      	bx	lr

08004814 <HAL_DMAEx_GetFifoLevel>:
  return ((hdma->Instance->CSR & DMA_CSR_FIFOL) >> DMA_CSR_FIFOL_Pos);
 8004814:	6803      	ldr	r3, [r0, #0]
 8004816:	6918      	ldr	r0, [r3, #16]
}
 8004818:	f3c0 4007 	ubfx	r0, r0, #16, #8
 800481c:	4770      	bx	lr
	...

08004820 <HAL_GPIO_Init>:
  * @param  pGPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, const GPIO_InitTypeDef *pGPIO_Init)
{
 8004820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /* Configure the External Interrupt or event for the current IO */
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        tmp = EXTI->EXTICR[position >> 2U];
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004824:	4b81      	ldr	r3, [pc, #516]	@ (8004a2c <HAL_GPIO_Init+0x20c>)
{
 8004826:	b085      	sub	sp, #20
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004828:	ea03 2390 	and.w	r3, r3, r0, lsr #10
 800482c:	9303      	str	r3, [sp, #12]
 800482e:	4b80      	ldr	r3, [pc, #512]	@ (8004a30 <HAL_GPIO_Init+0x210>)
  uint32_t position = 0U;
 8004830:	2200      	movs	r2, #0
 8004832:	9302      	str	r3, [sp, #8]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8004834:	f04f 0e03 	mov.w	lr, #3
  while (((pGPIO_Init->Pin) >> position) != 0U)
 8004838:	4603      	mov	r3, r0
        EXTI->EXTICR[position >> 2U] = tmp;

        /* Clear Rising Falling edge configuration */
        tmp = EXTI->RTSR1;
 800483a:	4f7e      	ldr	r7, [pc, #504]	@ (8004a34 <HAL_GPIO_Init+0x214>)
  while (((pGPIO_Init->Pin) >> position) != 0U)
 800483c:	680e      	ldr	r6, [r1, #0]
 800483e:	fa36 f402 	lsrs.w	r4, r6, r2
 8004842:	d102      	bne.n	800484a <HAL_GPIO_Init+0x2a>
        EXTI->IMR1 = tmp;
      }
    }
    position++;
  }
}
 8004844:	b005      	add	sp, #20
 8004846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (pGPIO_Init->Pin) & (1UL << position);
 800484a:	2401      	movs	r4, #1
 800484c:	fa04 fc02 	lsl.w	ip, r4, r2
    if (iocurrent != 0U)
 8004850:	ea1c 0406 	ands.w	r4, ip, r6
 8004854:	9401      	str	r4, [sp, #4]
 8004856:	f000 808e 	beq.w	8004976 <HAL_GPIO_Init+0x156>
      if (GPIOx == LPGPIO1)
 800485a:	4c77      	ldr	r4, [pc, #476]	@ (8004a38 <HAL_GPIO_Init+0x218>)
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 800485c:	684d      	ldr	r5, [r1, #4]
      if (GPIOx == LPGPIO1)
 800485e:	42a0      	cmp	r0, r4
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004860:	f025 0810 	bic.w	r8, r5, #16
      if (GPIOx == LPGPIO1)
 8004864:	f040 808c 	bne.w	8004980 <HAL_GPIO_Init+0x160>
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 8004868:	260f      	movs	r6, #15
        tmp = GPIOx->MODER;
 800486a:	6804      	ldr	r4, [r0, #0]
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 800486c:	f005 0301 	and.w	r3, r5, #1
        tmp &= ~(LPGPIO_MODER_MOD0 << position);
 8004870:	ea24 040c 	bic.w	r4, r4, ip
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 8004874:	4093      	lsls	r3, r2
 8004876:	4323      	orrs	r3, r4
        pin_position = LPGPIO_Map[position].Pin_Pos;
 8004878:	9c02      	ldr	r4, [sp, #8]
        GPIOx->MODER = tmp;
 800487a:	6003      	str	r3, [r0, #0]
        pin_position = LPGPIO_Map[position].Pin_Pos;
 800487c:	6864      	ldr	r4, [r4, #4]
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 800487e:	9b02      	ldr	r3, [sp, #8]
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 8004880:	f004 0c07 	and.w	ip, r4, #7
 8004884:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004888:	fa06 fa0c 	lsl.w	sl, r6, ip
        tmp |= ((GPIO_AF11_LPGPIO1 & 0x0FUL) << (((pin_position) & 0x07U) * 4U));
 800488c:	260b      	movs	r6, #11
 800488e:	fa06 fc0c 	lsl.w	ip, r6, ip
        tmp |= ((GPIO_MODE_AF_PP & 0x0FUL) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004892:	2602      	movs	r6, #2
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 8004894:	681b      	ldr	r3, [r3, #0]
        tmp = p_gpio->AFR[(pin_position) >> 3U];
 8004896:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 800489a:	eb03 0989 	add.w	r9, r3, r9, lsl #2
 800489e:	f8d9 b020 	ldr.w	fp, [r9, #32]
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 80048a2:	ea2b 0a0a 	bic.w	sl, fp, sl
        tmp |= ((GPIO_AF11_LPGPIO1 & 0x0FUL) << (((pin_position) & 0x07U) * 4U));
 80048a6:	ea4c 0c0a 	orr.w	ip, ip, sl
        p_gpio->AFR[(pin_position) >> 3U] = tmp;
 80048aa:	f8c9 c020 	str.w	ip, [r9, #32]
        tmp = p_gpio->MODER;
 80048ae:	f8d3 9000 	ldr.w	r9, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 80048b2:	ea4f 0c44 	mov.w	ip, r4, lsl #1
 80048b6:	fa0e fa0c 	lsl.w	sl, lr, ip
 80048ba:	ea29 090a 	bic.w	r9, r9, sl
        tmp |= ((GPIO_MODE_AF_PP & 0x0FUL) << (pin_position * GPIO_MODER_MODE1_Pos));
 80048be:	fa06 fc0c 	lsl.w	ip, r6, ip
 80048c2:	ea4c 0c09 	orr.w	ip, ip, r9
        p_gpio->MODER = tmp;
 80048c6:	f8c3 c000 	str.w	ip, [r3]
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80048ca:	f108 38ff 	add.w	r8, r8, #4294967295
 80048ce:	f1b8 0f01 	cmp.w	r8, #1
 80048d2:	f240 8082 	bls.w	80049da <HAL_GPIO_Init+0x1ba>
      if (pGPIO_Init->Mode != GPIO_MODE_ANALOG)
 80048d6:	2d03      	cmp	r5, #3
 80048d8:	d04d      	beq.n	8004976 <HAL_GPIO_Init+0x156>
        tmp = p_gpio->PUPDR;
 80048da:	f8d3 800c 	ldr.w	r8, [r3, #12]
        tmp |= ((pGPIO_Init->Pull) << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 80048de:	688e      	ldr	r6, [r1, #8]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 80048e0:	0064      	lsls	r4, r4, #1
 80048e2:	fa0e fc04 	lsl.w	ip, lr, r4
 80048e6:	ea28 0c0c 	bic.w	ip, r8, ip
        tmp |= ((pGPIO_Init->Pull) << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 80048ea:	fa06 f404 	lsl.w	r4, r6, r4
 80048ee:	ea44 040c 	orr.w	r4, r4, ip
        p_gpio->PUPDR = tmp;
 80048f2:	60dc      	str	r4, [r3, #12]
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80048f4:	00ec      	lsls	r4, r5, #3
 80048f6:	d53e      	bpl.n	8004976 <HAL_GPIO_Init+0x156>
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 80048f8:	260f      	movs	r6, #15
 80048fa:	f022 0c03 	bic.w	ip, r2, #3
 80048fe:	f10c 4c8c 	add.w	ip, ip, #1174405120	@ 0x46000000
 8004902:	f002 0403 	and.w	r4, r2, #3
 8004906:	f50c 3c08 	add.w	ip, ip, #139264	@ 0x22000
 800490a:	00e4      	lsls	r4, r4, #3
        tmp = EXTI->EXTICR[position >> 2U];
 800490c:	f8dc 9060 	ldr.w	r9, [ip, #96]	@ 0x60
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004910:	fa06 f804 	lsl.w	r8, r6, r4
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004914:	9e03      	ldr	r6, [sp, #12]
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004916:	ea29 0808 	bic.w	r8, r9, r8
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 800491a:	fa06 f404 	lsl.w	r4, r6, r4
        tmp &= ~((uint32_t)iocurrent);
 800491e:	9e01      	ldr	r6, [sp, #4]
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004920:	ea44 0408 	orr.w	r4, r4, r8
        EXTI->EXTICR[position >> 2U] = tmp;
 8004924:	f8cc 4060 	str.w	r4, [ip, #96]	@ 0x60
        tmp &= ~((uint32_t)iocurrent);
 8004928:	ea6f 0c06 	mvn.w	ip, r6
        if ((pGPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800492c:	02ee      	lsls	r6, r5, #11
          tmp |= iocurrent;
 800492e:	bf48      	it	mi
 8004930:	9e01      	ldrmi	r6, [sp, #4]
        tmp = EXTI->RTSR1;
 8004932:	683c      	ldr	r4, [r7, #0]
          tmp |= iocurrent;
 8004934:	bf4c      	ite	mi
 8004936:	4334      	orrmi	r4, r6
        tmp &= ~((uint32_t)iocurrent);
 8004938:	ea0c 0404 	andpl.w	r4, ip, r4
        EXTI->RTSR1 = tmp;
 800493c:	603c      	str	r4, [r7, #0]
        if ((pGPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800493e:	02ae      	lsls	r6, r5, #10
        tmp = EXTI->FTSR1;
 8004940:	687c      	ldr	r4, [r7, #4]
          tmp |= iocurrent;
 8004942:	bf4a      	itet	mi
 8004944:	9e01      	ldrmi	r6, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 8004946:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 800494a:	4334      	orrmi	r4, r6
        EXTI->FTSR1 = tmp;
 800494c:	607c      	str	r4, [r7, #4]
        if ((pGPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800494e:	03ae      	lsls	r6, r5, #14
        tmp = EXTI->EMR1;
 8004950:	f8d7 4084 	ldr.w	r4, [r7, #132]	@ 0x84
          tmp |= iocurrent;
 8004954:	bf4a      	itet	mi
 8004956:	9e01      	ldrmi	r6, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 8004958:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 800495c:	4334      	orrmi	r4, r6
        EXTI->EMR1 = tmp;
 800495e:	f8c7 4084 	str.w	r4, [r7, #132]	@ 0x84
        if ((pGPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8004962:	03ed      	lsls	r5, r5, #15
        tmp = EXTI->IMR1;
 8004964:	f8d7 4080 	ldr.w	r4, [r7, #128]	@ 0x80
          tmp |= iocurrent;
 8004968:	bf4a      	itet	mi
 800496a:	9d01      	ldrmi	r5, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 800496c:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 8004970:	432c      	orrmi	r4, r5
        EXTI->IMR1 = tmp;
 8004972:	f8c7 4080 	str.w	r4, [r7, #128]	@ 0x80
    position++;
 8004976:	9c02      	ldr	r4, [sp, #8]
 8004978:	3201      	adds	r2, #1
 800497a:	3408      	adds	r4, #8
 800497c:	9402      	str	r4, [sp, #8]
 800497e:	e75d      	b.n	800483c <HAL_GPIO_Init+0x1c>
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004980:	ea4f 0942 	mov.w	r9, r2, lsl #1
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004984:	fa0e f409 	lsl.w	r4, lr, r9
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004988:	f005 0c03 	and.w	ip, r5, #3
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 800498c:	f1b8 0f02 	cmp.w	r8, #2
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004990:	ea6f 0404 	mvn.w	r4, r4
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004994:	fa0c fc09 	lsl.w	ip, ip, r9
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004998:	d13e      	bne.n	8004a18 <HAL_GPIO_Init+0x1f8>
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 800499a:	260f      	movs	r6, #15
        tmp = GPIOx->AFR[position >> 3U];
 800499c:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 80049a0:	f002 0907 	and.w	r9, r2, #7
 80049a4:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 80049a8:	ea4f 0989 	mov.w	r9, r9, lsl #2
        tmp = GPIOx->AFR[position >> 3U];
 80049ac:	f8d8 a020 	ldr.w	sl, [r8, #32]
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 80049b0:	fa06 fb09 	lsl.w	fp, r6, r9
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 80049b4:	690e      	ldr	r6, [r1, #16]
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 80049b6:	ea2a 0a0b 	bic.w	sl, sl, fp
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 80049ba:	f006 0b0f 	and.w	fp, r6, #15
 80049be:	fa0b fb09 	lsl.w	fp, fp, r9
 80049c2:	ea4b 0b0a 	orr.w	fp, fp, sl
        GPIOx->AFR[position >> 3U] = tmp;
 80049c6:	f8c8 b020 	str.w	fp, [r8, #32]
        tmp = p_gpio->MODER;
 80049ca:	f8d3 8000 	ldr.w	r8, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 80049ce:	ea04 0808 	and.w	r8, r4, r8
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 80049d2:	ea48 040c 	orr.w	r4, r8, ip
        p_gpio->MODER = tmp;
 80049d6:	601c      	str	r4, [r3, #0]
    pin_position = position;
 80049d8:	4614      	mov	r4, r2
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 80049da:	68ce      	ldr	r6, [r1, #12]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 80049dc:	ea4f 0844 	mov.w	r8, r4, lsl #1
 80049e0:	fa0e f908 	lsl.w	r9, lr, r8
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 80049e4:	fa06 f808 	lsl.w	r8, r6, r8
        tmp &= ~(GPIO_OTYPER_OT0 << pin_position);
 80049e8:	2601      	movs	r6, #1
        tmp = p_gpio->OSPEEDR;
 80049ea:	f8d3 c008 	ldr.w	ip, [r3, #8]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 80049ee:	ea2c 0c09 	bic.w	ip, ip, r9
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 80049f2:	ea48 080c 	orr.w	r8, r8, ip
        p_gpio->OSPEEDR = tmp;
 80049f6:	f8c3 8008 	str.w	r8, [r3, #8]
        tmp = p_gpio->OTYPER;
 80049fa:	f8d3 8004 	ldr.w	r8, [r3, #4]
        tmp &= ~(GPIO_OTYPER_OT0 << pin_position);
 80049fe:	fa06 fc04 	lsl.w	ip, r6, r4
 8004a02:	ea28 080c 	bic.w	r8, r8, ip
        tmp |= (((pGPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << pin_position);
 8004a06:	f3c5 1c00 	ubfx	ip, r5, #4, #1
 8004a0a:	fa0c fc04 	lsl.w	ip, ip, r4
 8004a0e:	ea4c 0c08 	orr.w	ip, ip, r8
        p_gpio->OTYPER = tmp;
 8004a12:	f8c3 c004 	str.w	ip, [r3, #4]
 8004a16:	e75e      	b.n	80048d6 <HAL_GPIO_Init+0xb6>
        tmp = p_gpio->MODER;
 8004a18:	f8d3 9000 	ldr.w	r9, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a1c:	ea04 0409 	and.w	r4, r4, r9
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a20:	ea44 040c 	orr.w	r4, r4, ip
        p_gpio->MODER = tmp;
 8004a24:	601c      	str	r4, [r3, #0]
    pin_position = position;
 8004a26:	4614      	mov	r4, r2
 8004a28:	e74f      	b.n	80048ca <HAL_GPIO_Init+0xaa>
 8004a2a:	bf00      	nop
 8004a2c:	002f7f7f 	.word	0x002f7f7f
 8004a30:	0803559c 	.word	0x0803559c
 8004a34:	46022000 	.word	0x46022000
 8004a38:	46020000 	.word	0x46020000

08004a3c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0U)
 8004a3c:	6903      	ldr	r3, [r0, #16]
 8004a3e:	4219      	tst	r1, r3
  {
    bitstatus = GPIO_PIN_RESET;
  }

  return bitstatus;
}
 8004a40:	bf14      	ite	ne
 8004a42:	2001      	movne	r0, #1
 8004a44:	2000      	moveq	r0, #0
 8004a46:	4770      	bx	lr

08004a48 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8004a48:	b10a      	cbz	r2, 8004a4e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8004a4a:	6181      	str	r1, [r0, #24]
 8004a4c:	4770      	bx	lr
  }
  else
  {
    GPIOx->BRR  = (uint32_t)GPIO_Pin;
 8004a4e:	6281      	str	r1, [r0, #40]	@ 0x28
  }
}
 8004a50:	4770      	bx	lr

08004a52 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004a52:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004a54:	ea01 0203 	and.w	r2, r1, r3
 8004a58:	ea21 0103 	bic.w	r1, r1, r3
 8004a5c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004a60:	6181      	str	r1, [r0, #24]
}
 8004a62:	4770      	bx	lr

08004a64 <HAL_GPIO_EXTI_Rising_Callback>:
  UNUSED(GPIO_Pin);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Rising_Callback could be implemented in the user file
   */
}
 8004a64:	4770      	bx	lr
	...

08004a68 <HAL_GPIO_EXTI_IRQHandler>:
{
 8004a68:	b538      	push	{r3, r4, r5, lr}
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0U)
 8004a6a:	4d08      	ldr	r5, [pc, #32]	@ (8004a8c <HAL_GPIO_EXTI_IRQHandler+0x24>)
{
 8004a6c:	4604      	mov	r4, r0
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0U)
 8004a6e:	68eb      	ldr	r3, [r5, #12]
 8004a70:	4203      	tst	r3, r0
 8004a72:	d002      	beq.n	8004a7a <HAL_GPIO_EXTI_IRQHandler+0x12>
    __HAL_GPIO_EXTI_CLEAR_RISING_IT(GPIO_Pin);
 8004a74:	60e8      	str	r0, [r5, #12]
    HAL_GPIO_EXTI_Rising_Callback(GPIO_Pin);
 8004a76:	f7ff fff5 	bl	8004a64 <HAL_GPIO_EXTI_Rising_Callback>
  if (__HAL_GPIO_EXTI_GET_FALLING_IT(GPIO_Pin) != 0U)
 8004a7a:	692b      	ldr	r3, [r5, #16]
 8004a7c:	421c      	tst	r4, r3
 8004a7e:	d003      	beq.n	8004a88 <HAL_GPIO_EXTI_IRQHandler+0x20>
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8004a80:	4620      	mov	r0, r4
    __HAL_GPIO_EXTI_CLEAR_FALLING_IT(GPIO_Pin);
 8004a82:	612c      	str	r4, [r5, #16]
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8004a84:	f7fc fb5a 	bl	800113c <HAL_GPIO_EXTI_Falling_Callback>
}
 8004a88:	bd38      	pop	{r3, r4, r5, pc}
 8004a8a:	bf00      	nop
 8004a8c:	46022000 	.word	0x46022000

08004a90 <HAL_GPU2D_Init>:
  * @param  hgpu2d pointer to a GPU2D_HandleTypeDef structure that contains
  *                the configuration information for the GPU2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_GPU2D_Init(GPU2D_HandleTypeDef *hgpu2d)
{
 8004a90:	b510      	push	{r4, lr}
  /* Check the GPU2D handle validity */
  if (hgpu2d == NULL)
 8004a92:	4604      	mov	r4, r0
 8004a94:	b170      	cbz	r0, 8004ab4 <HAL_GPU2D_Init+0x24>
  }

  /* Check the parameters */
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));

  if (hgpu2d->State == HAL_GPU2D_STATE_RESET)
 8004a96:	7943      	ldrb	r3, [r0, #5]
 8004a98:	b93b      	cbnz	r3, 8004aaa <HAL_GPU2D_Init+0x1a>

    /* Init the low level hardware */
    hgpu2d->MspInitCallback(hgpu2d);
#else /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 0 */
    /* Init the low level hardware */
    HAL_GPU2D_MspInit(hgpu2d);
 8004a9a:	f7fb ff25 	bl	80008e8 <HAL_GPU2D_MspInit>
  /* Reset the CommandListCpltCallback handler */
  hgpu2d->CommandListCpltCallback = NULL;
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */

  /* Update error code */
  hgpu2d->ErrorCode = HAL_GPU2D_ERROR_NONE;
 8004a9e:	2000      	movs	r0, #0

  /* Initialize the GPU2D state*/
  hgpu2d->State = HAL_GPU2D_STATE_READY;

  /* Release Lock */
  __HAL_UNLOCK(hgpu2d);
 8004aa0:	f44f 7380 	mov.w	r3, #256	@ 0x100
  hgpu2d->ErrorCode = HAL_GPU2D_ERROR_NONE;
 8004aa4:	60a0      	str	r0, [r4, #8]
  __HAL_UNLOCK(hgpu2d);
 8004aa6:	80a3      	strh	r3, [r4, #4]

  return HAL_OK;
}
 8004aa8:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hgpu2d);
 8004aaa:	7903      	ldrb	r3, [r0, #4]
 8004aac:	2b01      	cmp	r3, #1
 8004aae:	d1f6      	bne.n	8004a9e <HAL_GPU2D_Init+0xe>
 8004ab0:	2002      	movs	r0, #2
 8004ab2:	e7f9      	b.n	8004aa8 <HAL_GPU2D_Init+0x18>
    return HAL_ERROR;
 8004ab4:	2001      	movs	r0, #1
 8004ab6:	e7f7      	b.n	8004aa8 <HAL_GPU2D_Init+0x18>

08004ab8 <HAL_GPU2D_ReadRegister>:
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since reading a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  value = GPU2D_ReadReg(hgpu2d->Instance, offset);
 8004ab8:	6803      	ldr	r3, [r0, #0]
 8004aba:	58c8      	ldr	r0, [r1, r3]

  return value;
}
 8004abc:	4770      	bx	lr

08004abe <HAL_GPU2D_WriteRegister>:
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since writing a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  GPU2D_WriteReg(hgpu2d->Instance, offset, value);
 8004abe:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8004ac0:	2000      	movs	r0, #0
  GPU2D_WriteReg(hgpu2d->Instance, offset, value);
 8004ac2:	50ca      	str	r2, [r1, r3]
}
 8004ac4:	4770      	bx	lr

08004ac6 <HAL_GPU2D_IRQHandler>:
  *                the configuration information for the GPU2D.
  * @retval None
  */
void HAL_GPU2D_IRQHandler(GPU2D_HandleTypeDef *hgpu2d)
{
  uint32_t isr_flags = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_ITCTRL);
 8004ac6:	6802      	ldr	r2, [r0, #0]
{
 8004ac8:	b508      	push	{r3, lr}
  uint32_t isr_flags = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_ITCTRL);
 8004aca:	f8d2 10f8 	ldr.w	r1, [r2, #248]	@ 0xf8

  /* Command List Complete Interrupt management */
  if ((isr_flags & GPU2D_FLAG_CLC) != 0U)
 8004ace:	07c9      	lsls	r1, r1, #31
 8004ad0:	d50a      	bpl.n	8004ae8 <HAL_GPU2D_IRQHandler+0x22>
  {
    uint32_t last_cl_id;

    /* Clear the completion flag */
    __HAL_GPU2D_CLEAR_FLAG(hgpu2d, GPU2D_FLAG_CLC);
 8004ad2:	f8d2 10f8 	ldr.w	r1, [r2, #248]	@ 0xf8
 8004ad6:	f021 0101 	bic.w	r1, r1, #1
 8004ada:	f8c2 10f8 	str.w	r1, [r2, #248]	@ 0xf8

    last_cl_id = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_CLID);
 8004ade:	6803      	ldr	r3, [r0, #0]
 8004ae0:	f8d3 1148 	ldr.w	r1, [r3, #328]	@ 0x148
    if (hgpu2d->CommandListCpltCallback != NULL)
    {
      hgpu2d->CommandListCpltCallback(hgpu2d, last_cl_id);
    }
#else /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 0 */
    HAL_GPU2D_CommandListCpltCallback(hgpu2d, last_cl_id);
 8004ae4:	f7fe f902 	bl	8002cec <HAL_GPU2D_CommandListCpltCallback>
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */
  }
}
 8004ae8:	bd08      	pop	{r3, pc}

08004aea <HAL_GPU2D_ErrorCallback>:
            the HAL_GPU2D_ErrorCallback can be implemented in the user file.
            The default implementation stops the execution as an error is considered
            fatal and non recoverable.
   */

  for (;;)
 8004aea:	e7fe      	b.n	8004aea <HAL_GPU2D_ErrorCallback>

08004aec <HAL_GPU2D_ER_IRQHandler>:
{
 8004aec:	b508      	push	{r3, lr}
  HAL_GPU2D_ErrorCallback(hgpu2d);
 8004aee:	f7ff fffc 	bl	8004aea <HAL_GPU2D_ErrorCallback>
}
 8004af2:	bd08      	pop	{r3, pc}

08004af4 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8004af4:	6803      	ldr	r3, [r0, #0]
 8004af6:	699a      	ldr	r2, [r3, #24]
 8004af8:	0791      	lsls	r1, r2, #30
  {
    hi2c->Instance->TXDR = 0x00U;
 8004afa:	bf44      	itt	mi
 8004afc:	2200      	movmi	r2, #0
 8004afe:	629a      	strmi	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004b00:	699a      	ldr	r2, [r3, #24]
 8004b02:	07d2      	lsls	r2, r2, #31
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8004b04:	bf5e      	ittt	pl
 8004b06:	699a      	ldrpl	r2, [r3, #24]
 8004b08:	f042 0201 	orrpl.w	r2, r2, #1
 8004b0c:	619a      	strpl	r2, [r3, #24]
  }
}
 8004b0e:	4770      	bx	lr

08004b10 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8004b10:	b530      	push	{r4, r5, lr}
 8004b12:	9d03      	ldr	r5, [sp, #12]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b14:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004b16:	432b      	orrs	r3, r5
 8004b18:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b1c:	4a06      	ldr	r2, [pc, #24]	@ (8004b38 <I2C_TransferConfig+0x28>)
 8004b1e:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004b20:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8004b24:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b26:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004b2a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b2e:	ea20 0002 	bic.w	r0, r0, r2
 8004b32:	4303      	orrs	r3, r0
 8004b34:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8004b36:	bd30      	pop	{r4, r5, pc}
 8004b38:	03ff63ff 	.word	0x03ff63ff

08004b3c <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 8004b3c:	6803      	ldr	r3, [r0, #0]
{
 8004b3e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 8004b42:	699c      	ldr	r4, [r3, #24]
{
 8004b44:	4605      	mov	r5, r0
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004b46:	f014 0410 	ands.w	r4, r4, #16
{
 8004b4a:	460f      	mov	r7, r1
 8004b4c:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004b4e:	d06f      	beq.n	8004c30 <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 8004b50:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004b52:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 8004b54:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004b56:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8004b58:	682b      	ldr	r3, [r5, #0]
 8004b5a:	699a      	ldr	r2, [r3, #24]
 8004b5c:	0690      	lsls	r0, r2, #26
 8004b5e:	d461      	bmi.n	8004c24 <I2C_IsErrorOccurred+0xe8>
 8004b60:	f1b8 0f00 	cmp.w	r8, #0
 8004b64:	d035      	beq.n	8004bd2 <I2C_IsErrorOccurred+0x96>
    status = HAL_ERROR;
 8004b66:	2001      	movs	r0, #1
    error_code |= HAL_I2C_ERROR_AF;
 8004b68:	f044 0404 	orr.w	r4, r4, #4
  itflag = hi2c->Instance->ISR;
 8004b6c:	682e      	ldr	r6, [r5, #0]
 8004b6e:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8004b70:	05d9      	lsls	r1, r3, #23
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004b72:	bf41      	itttt	mi
 8004b74:	f44f 7280 	movmi.w	r2, #256	@ 0x100
    status = HAL_ERROR;
 8004b78:	2001      	movmi	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004b7a:	61f2      	strmi	r2, [r6, #28]
    error_code |= HAL_I2C_ERROR_BERR;
 8004b7c:	f044 0401 	orrmi.w	r4, r4, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8004b80:	055a      	lsls	r2, r3, #21
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004b82:	bf41      	itttt	mi
 8004b84:	f44f 6280 	movmi.w	r2, #1024	@ 0x400
    status = HAL_ERROR;
 8004b88:	2001      	movmi	r0, #1
    error_code |= HAL_I2C_ERROR_OVR;
 8004b8a:	f044 0408 	orrmi.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004b8e:	61f2      	strmi	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8004b90:	059b      	lsls	r3, r3, #22
 8004b92:	d54f      	bpl.n	8004c34 <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004b94:	f44f 7300 	mov.w	r3, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8004b98:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004b9c:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 8004b9e:	4628      	mov	r0, r5
 8004ba0:	f7ff ffa8 	bl	8004af4 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8004ba4:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 8004ba6:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8004ba8:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
 8004bac:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
 8004bb0:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
 8004bb4:	f023 0301 	bic.w	r3, r3, #1
 8004bb8:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 8004bba:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8004bbc:	4323      	orrs	r3, r4
 8004bbe:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8004bc0:	2320      	movs	r3, #32
 8004bc2:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004bc6:	2300      	movs	r3, #0
 8004bc8:	f885 3042 	strb.w	r3, [r5, #66]	@ 0x42
    __HAL_UNLOCK(hi2c);
 8004bcc:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
 8004bd0:	e032      	b.n	8004c38 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 8004bd2:	1c7a      	adds	r2, r7, #1
 8004bd4:	d0c1      	beq.n	8004b5a <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004bd6:	f7ff f84d 	bl	8003c74 <HAL_GetTick>
 8004bda:	1b80      	subs	r0, r0, r6
 8004bdc:	42b8      	cmp	r0, r7
 8004bde:	d801      	bhi.n	8004be4 <I2C_IsErrorOccurred+0xa8>
 8004be0:	2f00      	cmp	r7, #0
 8004be2:	d1b9      	bne.n	8004b58 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8004be4:	682b      	ldr	r3, [r5, #0]
 8004be6:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8004be8:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004bec:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8004bee:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004bf0:	0400      	lsls	r0, r0, #16
 8004bf2:	d50a      	bpl.n	8004c0a <I2C_IsErrorOccurred+0xce>
 8004bf4:	0449      	lsls	r1, r1, #17
 8004bf6:	d408      	bmi.n	8004c0a <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 8004bf8:	2a20      	cmp	r2, #32
 8004bfa:	d006      	beq.n	8004c0a <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8004bfc:	685a      	ldr	r2, [r3, #4]
 8004bfe:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004c02:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8004c04:	f7ff f836 	bl	8003c74 <HAL_GetTick>
 8004c08:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004c0a:	682b      	ldr	r3, [r5, #0]
 8004c0c:	699b      	ldr	r3, [r3, #24]
 8004c0e:	069b      	lsls	r3, r3, #26
 8004c10:	d4a2      	bmi.n	8004b58 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8004c12:	f7ff f82f 	bl	8003c74 <HAL_GetTick>
 8004c16:	1b80      	subs	r0, r0, r6
 8004c18:	2819      	cmp	r0, #25
 8004c1a:	d9f6      	bls.n	8004c0a <I2C_IsErrorOccurred+0xce>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8004c1c:	2420      	movs	r4, #32
              status = HAL_ERROR;
 8004c1e:	f04f 0801 	mov.w	r8, #1
 8004c22:	e799      	b.n	8004b58 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 8004c24:	f1b8 0f00 	cmp.w	r8, #0
 8004c28:	d19d      	bne.n	8004b66 <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004c2a:	2220      	movs	r2, #32
 8004c2c:	61da      	str	r2, [r3, #28]
 8004c2e:	e79a      	b.n	8004b66 <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 8004c30:	4620      	mov	r0, r4
 8004c32:	e79b      	b.n	8004b6c <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 8004c34:	2800      	cmp	r0, #0
 8004c36:	d1b2      	bne.n	8004b9e <I2C_IsErrorOccurred+0x62>
}
 8004c38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004c3c <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8004c3c:	b570      	push	{r4, r5, r6, lr}
 8004c3e:	4604      	mov	r4, r0
 8004c40:	460d      	mov	r5, r1
 8004c42:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004c44:	6823      	ldr	r3, [r4, #0]
 8004c46:	699b      	ldr	r3, [r3, #24]
 8004c48:	079b      	lsls	r3, r3, #30
 8004c4a:	d501      	bpl.n	8004c50 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8004c4c:	2000      	movs	r0, #0
 8004c4e:	e01f      	b.n	8004c90 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004c50:	4632      	mov	r2, r6
 8004c52:	4629      	mov	r1, r5
 8004c54:	4620      	mov	r0, r4
 8004c56:	f7ff ff71 	bl	8004b3c <I2C_IsErrorOccurred>
 8004c5a:	b9c0      	cbnz	r0, 8004c8e <I2C_WaitOnTXISFlagUntilTimeout+0x52>
    if (Timeout != HAL_MAX_DELAY)
 8004c5c:	1c6a      	adds	r2, r5, #1
 8004c5e:	d0f1      	beq.n	8004c44 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004c60:	f7ff f808 	bl	8003c74 <HAL_GetTick>
 8004c64:	1b80      	subs	r0, r0, r6
 8004c66:	42a8      	cmp	r0, r5
 8004c68:	d801      	bhi.n	8004c6e <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8004c6a:	2d00      	cmp	r5, #0
 8004c6c:	d1ea      	bne.n	8004c44 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 8004c6e:	6823      	ldr	r3, [r4, #0]
 8004c70:	699b      	ldr	r3, [r3, #24]
 8004c72:	f013 0302 	ands.w	r3, r3, #2
 8004c76:	d1e5      	bne.n	8004c44 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004c78:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          __HAL_UNLOCK(hi2c);
 8004c7a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004c7e:	f042 0220 	orr.w	r2, r2, #32
 8004c82:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004c84:	2220      	movs	r2, #32
 8004c86:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8004c8a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
 8004c8e:	2001      	movs	r0, #1
}
 8004c90:	bd70      	pop	{r4, r5, r6, pc}

08004c92 <I2C_WaitOnFlagUntilTimeout>:
{
 8004c92:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004c96:	4604      	mov	r4, r0
 8004c98:	460f      	mov	r7, r1
 8004c9a:	4616      	mov	r6, r2
 8004c9c:	461d      	mov	r5, r3
 8004c9e:	f8dd 8018 	ldr.w	r8, [sp, #24]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004ca2:	6823      	ldr	r3, [r4, #0]
 8004ca4:	699b      	ldr	r3, [r3, #24]
 8004ca6:	ea37 0303 	bics.w	r3, r7, r3
 8004caa:	bf0c      	ite	eq
 8004cac:	2301      	moveq	r3, #1
 8004cae:	2300      	movne	r3, #0
 8004cb0:	42b3      	cmp	r3, r6
 8004cb2:	d001      	beq.n	8004cb8 <I2C_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
 8004cb4:	2000      	movs	r0, #0
 8004cb6:	e025      	b.n	8004d04 <I2C_WaitOnFlagUntilTimeout+0x72>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004cb8:	4642      	mov	r2, r8
 8004cba:	4629      	mov	r1, r5
 8004cbc:	4620      	mov	r0, r4
 8004cbe:	f7ff ff3d 	bl	8004b3c <I2C_IsErrorOccurred>
 8004cc2:	b9f0      	cbnz	r0, 8004d02 <I2C_WaitOnFlagUntilTimeout+0x70>
    if (Timeout != HAL_MAX_DELAY)
 8004cc4:	1c6b      	adds	r3, r5, #1
 8004cc6:	d0ec      	beq.n	8004ca2 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004cc8:	f7fe ffd4 	bl	8003c74 <HAL_GetTick>
 8004ccc:	eba0 0008 	sub.w	r0, r0, r8
 8004cd0:	42a8      	cmp	r0, r5
 8004cd2:	d801      	bhi.n	8004cd8 <I2C_WaitOnFlagUntilTimeout+0x46>
 8004cd4:	2d00      	cmp	r5, #0
 8004cd6:	d1e4      	bne.n	8004ca2 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004cd8:	6823      	ldr	r3, [r4, #0]
 8004cda:	699b      	ldr	r3, [r3, #24]
 8004cdc:	ea37 0303 	bics.w	r3, r7, r3
 8004ce0:	bf0c      	ite	eq
 8004ce2:	2301      	moveq	r3, #1
 8004ce4:	2300      	movne	r3, #0
 8004ce6:	42b3      	cmp	r3, r6
 8004ce8:	d1db      	bne.n	8004ca2 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004cea:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8004cec:	f043 0320 	orr.w	r3, r3, #32
 8004cf0:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004cf2:	2320      	movs	r3, #32
 8004cf4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8004cf8:	2300      	movs	r3, #0
 8004cfa:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
 8004cfe:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004d02:	2001      	movs	r0, #1
}
 8004d04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004d08 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8004d08:	b570      	push	{r4, r5, r6, lr}
 8004d0a:	4604      	mov	r4, r0
 8004d0c:	460d      	mov	r5, r1
 8004d0e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004d10:	6823      	ldr	r3, [r4, #0]
 8004d12:	699b      	ldr	r3, [r3, #24]
 8004d14:	069b      	lsls	r3, r3, #26
 8004d16:	d501      	bpl.n	8004d1c <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 8004d18:	2000      	movs	r0, #0
 8004d1a:	e01d      	b.n	8004d58 <I2C_WaitOnSTOPFlagUntilTimeout+0x50>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d1c:	4632      	mov	r2, r6
 8004d1e:	4629      	mov	r1, r5
 8004d20:	4620      	mov	r0, r4
 8004d22:	f7ff ff0b 	bl	8004b3c <I2C_IsErrorOccurred>
 8004d26:	b9b0      	cbnz	r0, 8004d56 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004d28:	f7fe ffa4 	bl	8003c74 <HAL_GetTick>
 8004d2c:	1b80      	subs	r0, r0, r6
 8004d2e:	42a8      	cmp	r0, r5
 8004d30:	d801      	bhi.n	8004d36 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8004d32:	2d00      	cmp	r5, #0
 8004d34:	d1ec      	bne.n	8004d10 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 8004d36:	6823      	ldr	r3, [r4, #0]
 8004d38:	699b      	ldr	r3, [r3, #24]
 8004d3a:	f013 0320 	ands.w	r3, r3, #32
 8004d3e:	d1e7      	bne.n	8004d10 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004d40:	6c62      	ldr	r2, [r4, #68]	@ 0x44
        __HAL_UNLOCK(hi2c);
 8004d42:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004d46:	f042 0220 	orr.w	r2, r2, #32
 8004d4a:	6462      	str	r2, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8004d4c:	2220      	movs	r2, #32
 8004d4e:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8004d52:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
 8004d56:	2001      	movs	r0, #1
}
 8004d58:	bd70      	pop	{r4, r5, r6, pc}

08004d5a <HAL_I2C_Init>:
{
 8004d5a:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004d5c:	4604      	mov	r4, r0
 8004d5e:	2800      	cmp	r0, #0
 8004d60:	d04e      	beq.n	8004e00 <HAL_I2C_Init+0xa6>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004d62:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8004d66:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004d6a:	b91b      	cbnz	r3, 8004d74 <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8004d6c:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
 8004d70:	f7fb fe6e 	bl	8000a50 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004d74:	2324      	movs	r3, #36	@ 0x24
 8004d76:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8004d7a:	6823      	ldr	r3, [r4, #0]
 8004d7c:	681a      	ldr	r2, [r3, #0]
 8004d7e:	f022 0201 	bic.w	r2, r2, #1
 8004d82:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8004d84:	6862      	ldr	r2, [r4, #4]
 8004d86:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8004d8a:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8004d8c:	689a      	ldr	r2, [r3, #8]
 8004d8e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004d92:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8004d94:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004d98:	2901      	cmp	r1, #1
 8004d9a:	d106      	bne.n	8004daa <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8004d9c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004da0:	609a      	str	r2, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8004da2:	685a      	ldr	r2, [r3, #4]
 8004da4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004da8:	e007      	b.n	8004dba <HAL_I2C_Init+0x60>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004daa:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004dae:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004db0:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004db2:	d1f6      	bne.n	8004da2 <HAL_I2C_Init+0x48>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8004db4:	685a      	ldr	r2, [r3, #4]
 8004db6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8004dba:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8004dbc:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004dbe:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8004dc0:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 8004dc4:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004dc8:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8004dca:	68da      	ldr	r2, [r3, #12]
 8004dcc:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004dd0:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8004dd2:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8004dd6:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8004dd8:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8004dda:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004dde:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8004de0:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8004de4:	430a      	orrs	r2, r1
 8004de6:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8004de8:	681a      	ldr	r2, [r3, #0]
 8004dea:	f042 0201 	orr.w	r2, r2, #1
 8004dee:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8004df0:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004df2:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8004df4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8004df8:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004dfa:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 8004dfe:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004e00:	2001      	movs	r0, #1
 8004e02:	e7fc      	b.n	8004dfe <HAL_I2C_Init+0xa4>

08004e04 <HAL_I2C_Mem_Write>:
{
 8004e04:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e08:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e0a:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8004e0e:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e10:	2b20      	cmp	r3, #32
{
 8004e12:	460f      	mov	r7, r1
 8004e14:	4616      	mov	r6, r2
 8004e16:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8004e1a:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e1e:	f040 80c6 	bne.w	8004fae <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 8004e22:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004e24:	b113      	cbz	r3, 8004e2c <HAL_I2C_Mem_Write+0x28>
 8004e26:	f1ba 0f00 	cmp.w	sl, #0
 8004e2a:	d106      	bne.n	8004e3a <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8004e2c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004e30:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8004e32:	2001      	movs	r0, #1
}
 8004e34:	b003      	add	sp, #12
 8004e36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8004e3a:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8004e3e:	2b01      	cmp	r3, #1
 8004e40:	f000 80b5 	beq.w	8004fae <HAL_I2C_Mem_Write+0x1aa>
 8004e44:	f04f 0b01 	mov.w	fp, #1
 8004e48:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8004e4c:	f7fe ff12 	bl	8003c74 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004e50:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 8004e52:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004e54:	9000      	str	r0, [sp, #0]
 8004e56:	465a      	mov	r2, fp
 8004e58:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8004e5c:	4620      	mov	r0, r4
 8004e5e:	f7ff ff18 	bl	8004c92 <I2C_WaitOnFlagUntilTimeout>
 8004e62:	2800      	cmp	r0, #0
 8004e64:	d1e5      	bne.n	8004e32 <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004e66:	2321      	movs	r3, #33	@ 0x21
 8004e68:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004e6c:	2340      	movs	r3, #64	@ 0x40
 8004e6e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8004e72:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e74:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 8004e76:	6263      	str	r3, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004e78:	4b4e      	ldr	r3, [pc, #312]	@ (8004fb4 <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferISR   = NULL;
 8004e7a:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004e7c:	4639      	mov	r1, r7
 8004e7e:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
 8004e80:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004e84:	fa5f f289 	uxtb.w	r2, r9
 8004e88:	9300      	str	r3, [sp, #0]
 8004e8a:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8004e8e:	f7ff fe3f 	bl	8004b10 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004e92:	462a      	mov	r2, r5
 8004e94:	4641      	mov	r1, r8
 8004e96:	4620      	mov	r0, r4
 8004e98:	f7ff fed0 	bl	8004c3c <I2C_WaitOnTXISFlagUntilTimeout>
 8004e9c:	bb18      	cbnz	r0, 8004ee6 <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004e9e:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004ea2:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004ea4:	d115      	bne.n	8004ed2 <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004ea6:	b2f6      	uxtb	r6, r6
 8004ea8:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8004eaa:	2200      	movs	r2, #0
 8004eac:	4643      	mov	r3, r8
 8004eae:	2180      	movs	r1, #128	@ 0x80
 8004eb0:	4620      	mov	r0, r4
 8004eb2:	9500      	str	r5, [sp, #0]
 8004eb4:	f7ff feed 	bl	8004c92 <I2C_WaitOnFlagUntilTimeout>
 8004eb8:	b9a8      	cbnz	r0, 8004ee6 <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004eba:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004ebc:	b29b      	uxth	r3, r3
 8004ebe:	2bff      	cmp	r3, #255	@ 0xff
 8004ec0:	d815      	bhi.n	8004eee <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8004ec2:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004ec4:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 8004ec8:	b292      	uxth	r2, r2
 8004eca:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004ecc:	9000      	str	r0, [sp, #0]
 8004ece:	b2d2      	uxtb	r2, r2
 8004ed0:	e012      	b.n	8004ef8 <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004ed2:	0a32      	lsrs	r2, r6, #8
 8004ed4:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004ed6:	4641      	mov	r1, r8
 8004ed8:	462a      	mov	r2, r5
 8004eda:	4620      	mov	r0, r4
 8004edc:	f7ff feae 	bl	8004c3c <I2C_WaitOnTXISFlagUntilTimeout>
 8004ee0:	b908      	cbnz	r0, 8004ee6 <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004ee2:	6823      	ldr	r3, [r4, #0]
 8004ee4:	e7df      	b.n	8004ea6 <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 8004ee6:	2300      	movs	r3, #0
 8004ee8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004eec:	e7a1      	b.n	8004e32 <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004eee:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8004ef0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004ef4:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8004ef6:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004ef8:	4639      	mov	r1, r7
 8004efa:	4620      	mov	r0, r4
 8004efc:	f7ff fe08 	bl	8004b10 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f00:	462a      	mov	r2, r5
 8004f02:	4641      	mov	r1, r8
 8004f04:	4620      	mov	r0, r4
 8004f06:	f7ff fe99 	bl	8004c3c <I2C_WaitOnTXISFlagUntilTimeout>
 8004f0a:	2800      	cmp	r0, #0
 8004f0c:	d191      	bne.n	8004e32 <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8004f0e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004f10:	6822      	ldr	r2, [r4, #0]
 8004f12:	f813 1b01 	ldrb.w	r1, [r3], #1
 8004f16:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8004f18:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8004f1a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004f1c:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8004f1e:	3b01      	subs	r3, #1
 8004f20:	b29b      	uxth	r3, r3
 8004f22:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004f24:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004f26:	3a01      	subs	r2, #1
 8004f28:	b292      	uxth	r2, r2
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004f2a:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8004f2c:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004f2e:	b1b3      	cbz	r3, 8004f5e <HAL_I2C_Mem_Write+0x15a>
 8004f30:	b9aa      	cbnz	r2, 8004f5e <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8004f32:	4643      	mov	r3, r8
 8004f34:	2180      	movs	r1, #128	@ 0x80
 8004f36:	4620      	mov	r0, r4
 8004f38:	9500      	str	r5, [sp, #0]
 8004f3a:	f7ff feaa 	bl	8004c92 <I2C_WaitOnFlagUntilTimeout>
 8004f3e:	2800      	cmp	r0, #0
 8004f40:	f47f af77 	bne.w	8004e32 <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004f44:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004f46:	b29b      	uxth	r3, r3
 8004f48:	2bff      	cmp	r3, #255	@ 0xff
 8004f4a:	d928      	bls.n	8004f9e <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004f4c:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004f4e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004f52:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004f54:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004f56:	4639      	mov	r1, r7
 8004f58:	4620      	mov	r0, r4
 8004f5a:	f7ff fdd9 	bl	8004b10 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8004f5e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004f60:	b29b      	uxth	r3, r3
 8004f62:	2b00      	cmp	r3, #0
 8004f64:	d1cc      	bne.n	8004f00 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f66:	462a      	mov	r2, r5
 8004f68:	4641      	mov	r1, r8
 8004f6a:	4620      	mov	r0, r4
 8004f6c:	f7ff fecc 	bl	8004d08 <I2C_WaitOnSTOPFlagUntilTimeout>
 8004f70:	2800      	cmp	r0, #0
 8004f72:	f47f af5e 	bne.w	8004e32 <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004f76:	2120      	movs	r1, #32
 8004f78:	6823      	ldr	r3, [r4, #0]
 8004f7a:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8004f7c:	685a      	ldr	r2, [r3, #4]
 8004f7e:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8004f82:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8004f86:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8004f8a:	f022 0201 	bic.w	r2, r2, #1
 8004f8e:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8004f90:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8004f94:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8004f98:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8004f9c:	e74a      	b.n	8004e34 <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8004f9e:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004fa0:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8004fa4:	b292      	uxth	r2, r2
 8004fa6:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004fa8:	9000      	str	r0, [sp, #0]
 8004faa:	b2d2      	uxtb	r2, r2
 8004fac:	e7d3      	b.n	8004f56 <HAL_I2C_Mem_Write+0x152>
    __HAL_LOCK(hi2c);
 8004fae:	2002      	movs	r0, #2
 8004fb0:	e740      	b.n	8004e34 <HAL_I2C_Mem_Write+0x30>
 8004fb2:	bf00      	nop
 8004fb4:	80002000 	.word	0x80002000

08004fb8 <HAL_I2C_Mem_Read>:
{
 8004fb8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004fbc:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004fbe:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8004fc2:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004fc4:	2b20      	cmp	r3, #32
{
 8004fc6:	460f      	mov	r7, r1
 8004fc8:	4616      	mov	r6, r2
 8004fca:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8004fce:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004fd2:	f040 80c9 	bne.w	8005168 <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 8004fd6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004fd8:	b113      	cbz	r3, 8004fe0 <HAL_I2C_Mem_Read+0x28>
 8004fda:	f1ba 0f00 	cmp.w	sl, #0
 8004fde:	d106      	bne.n	8004fee <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8004fe0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004fe4:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8004fe6:	2001      	movs	r0, #1
}
 8004fe8:	b003      	add	sp, #12
 8004fea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8004fee:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8004ff2:	2b01      	cmp	r3, #1
 8004ff4:	f000 80b8 	beq.w	8005168 <HAL_I2C_Mem_Read+0x1b0>
 8004ff8:	f04f 0b01 	mov.w	fp, #1
 8004ffc:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8005000:	f7fe fe38 	bl	8003c74 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005004:	2319      	movs	r3, #25
 8005006:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8005008:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800500a:	465a      	mov	r2, fp
 800500c:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005010:	4620      	mov	r0, r4
 8005012:	f7ff fe3e 	bl	8004c92 <I2C_WaitOnFlagUntilTimeout>
 8005016:	4603      	mov	r3, r0
 8005018:	2800      	cmp	r0, #0
 800501a:	d1e4      	bne.n	8004fe6 <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800501c:	2222      	movs	r2, #34	@ 0x22
 800501e:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005022:	2240      	movs	r2, #64	@ 0x40
 8005024:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8005028:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800502a:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 800502c:	6262      	str	r2, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800502e:	4a4f      	ldr	r2, [pc, #316]	@ (800516c <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferISR   = NULL;
 8005030:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005032:	4639      	mov	r1, r7
 8005034:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
 8005036:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800503a:	9200      	str	r2, [sp, #0]
 800503c:	fa5f f289 	uxtb.w	r2, r9
 8005040:	f7ff fd66 	bl	8004b10 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005044:	462a      	mov	r2, r5
 8005046:	4641      	mov	r1, r8
 8005048:	4620      	mov	r0, r4
 800504a:	f7ff fdf7 	bl	8004c3c <I2C_WaitOnTXISFlagUntilTimeout>
 800504e:	bb20      	cbnz	r0, 800509a <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005050:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005054:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005056:	d116      	bne.n	8005086 <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005058:	b2f6      	uxtb	r6, r6
 800505a:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 800505c:	2200      	movs	r2, #0
 800505e:	4643      	mov	r3, r8
 8005060:	2140      	movs	r1, #64	@ 0x40
 8005062:	4620      	mov	r0, r4
 8005064:	9500      	str	r5, [sp, #0]
 8005066:	f7ff fe14 	bl	8004c92 <I2C_WaitOnFlagUntilTimeout>
 800506a:	b9b0      	cbnz	r0, 800509a <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800506c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800506e:	b29b      	uxth	r3, r3
 8005070:	2bff      	cmp	r3, #255	@ 0xff
 8005072:	4b3f      	ldr	r3, [pc, #252]	@ (8005170 <HAL_I2C_Mem_Read+0x1b8>)
 8005074:	d815      	bhi.n	80050a2 <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8005076:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 8005078:	b292      	uxth	r2, r2
 800507a:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800507c:	9300      	str	r3, [sp, #0]
 800507e:	b2d2      	uxtb	r2, r2
 8005080:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8005084:	e012      	b.n	80050ac <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005086:	0a32      	lsrs	r2, r6, #8
 8005088:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800508a:	4641      	mov	r1, r8
 800508c:	462a      	mov	r2, r5
 800508e:	4620      	mov	r0, r4
 8005090:	f7ff fdd4 	bl	8004c3c <I2C_WaitOnTXISFlagUntilTimeout>
 8005094:	b908      	cbnz	r0, 800509a <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005096:	6823      	ldr	r3, [r4, #0]
 8005098:	e7de      	b.n	8005058 <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 800509a:	2300      	movs	r3, #0
 800509c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80050a0:	e7a1      	b.n	8004fe6 <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80050a2:	22ff      	movs	r2, #255	@ 0xff
 80050a4:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80050a6:	9300      	str	r3, [sp, #0]
 80050a8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80050ac:	4639      	mov	r1, r7
 80050ae:	4620      	mov	r0, r4
 80050b0:	f7ff fd2e 	bl	8004b10 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 80050b4:	4643      	mov	r3, r8
 80050b6:	2200      	movs	r2, #0
 80050b8:	2104      	movs	r1, #4
 80050ba:	4620      	mov	r0, r4
 80050bc:	9500      	str	r5, [sp, #0]
 80050be:	f7ff fde8 	bl	8004c92 <I2C_WaitOnFlagUntilTimeout>
 80050c2:	2800      	cmp	r0, #0
 80050c4:	d18f      	bne.n	8004fe6 <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 80050c6:	6823      	ldr	r3, [r4, #0]
 80050c8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80050ca:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80050cc:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 80050ce:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 80050d0:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 80050d2:	3301      	adds	r3, #1
 80050d4:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 80050d6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80050d8:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 80050da:	3b01      	subs	r3, #1
 80050dc:	b29b      	uxth	r3, r3
 80050de:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80050e0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80050e2:	b292      	uxth	r2, r2
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80050e4:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 80050e6:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80050e8:	b1b3      	cbz	r3, 8005118 <HAL_I2C_Mem_Read+0x160>
 80050ea:	b9aa      	cbnz	r2, 8005118 <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80050ec:	4643      	mov	r3, r8
 80050ee:	2180      	movs	r1, #128	@ 0x80
 80050f0:	4620      	mov	r0, r4
 80050f2:	9500      	str	r5, [sp, #0]
 80050f4:	f7ff fdcd 	bl	8004c92 <I2C_WaitOnFlagUntilTimeout>
 80050f8:	2800      	cmp	r0, #0
 80050fa:	f47f af74 	bne.w	8004fe6 <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80050fe:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005100:	b29b      	uxth	r3, r3
 8005102:	2bff      	cmp	r3, #255	@ 0xff
 8005104:	d928      	bls.n	8005158 <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005106:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005108:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800510c:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 800510e:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005110:	4639      	mov	r1, r7
 8005112:	4620      	mov	r0, r4
 8005114:	f7ff fcfc 	bl	8004b10 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005118:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800511a:	b29b      	uxth	r3, r3
 800511c:	2b00      	cmp	r3, #0
 800511e:	d1c9      	bne.n	80050b4 <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005120:	462a      	mov	r2, r5
 8005122:	4641      	mov	r1, r8
 8005124:	4620      	mov	r0, r4
 8005126:	f7ff fdef 	bl	8004d08 <I2C_WaitOnSTOPFlagUntilTimeout>
 800512a:	2800      	cmp	r0, #0
 800512c:	f47f af5b 	bne.w	8004fe6 <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005130:	2120      	movs	r1, #32
 8005132:	6823      	ldr	r3, [r4, #0]
 8005134:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005136:	685a      	ldr	r2, [r3, #4]
 8005138:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 800513c:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8005140:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8005144:	f022 0201 	bic.w	r2, r2, #1
 8005148:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800514a:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 800514e:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005152:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 8005156:	e747      	b.n	8004fe8 <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005158:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800515a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 800515e:	b292      	uxth	r2, r2
 8005160:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005162:	9000      	str	r0, [sp, #0]
 8005164:	b2d2      	uxtb	r2, r2
 8005166:	e7d3      	b.n	8005110 <HAL_I2C_Mem_Read+0x158>
    __HAL_LOCK(hi2c);
 8005168:	2002      	movs	r0, #2
 800516a:	e73d      	b.n	8004fe8 <HAL_I2C_Mem_Read+0x30>
 800516c:	80002000 	.word	0x80002000
 8005170:	80002400 	.word	0x80002400

08005174 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005174:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005176:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 800517a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800517c:	2a20      	cmp	r2, #32
 800517e:	b2d4      	uxtb	r4, r2
 8005180:	d11c      	bne.n	80051bc <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005182:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8005186:	2a01      	cmp	r2, #1
 8005188:	d018      	beq.n	80051bc <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 800518a:	2224      	movs	r2, #36	@ 0x24
 800518c:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005190:	6802      	ldr	r2, [r0, #0]
 8005192:	6810      	ldr	r0, [r2, #0]
 8005194:	f020 0001 	bic.w	r0, r0, #1
 8005198:	6010      	str	r0, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 800519a:	6810      	ldr	r0, [r2, #0]
 800519c:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 80051a0:	6010      	str	r0, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 80051a2:	6810      	ldr	r0, [r2, #0]
 80051a4:	4301      	orrs	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80051a6:	2000      	movs	r0, #0
    hi2c->Instance->CR1 |= AnalogFilter;
 80051a8:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 80051aa:	6811      	ldr	r1, [r2, #0]
 80051ac:	f041 0101 	orr.w	r1, r1, #1
 80051b0:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80051b2:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 80051b6:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 80051ba:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 80051bc:	2002      	movs	r0, #2
 80051be:	e7fc      	b.n	80051ba <HAL_I2CEx_ConfigAnalogFilter+0x46>

080051c0 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80051c0:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80051c2:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 80051c6:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80051c8:	2a20      	cmp	r2, #32
 80051ca:	b2d4      	uxtb	r4, r2
 80051cc:	d11b      	bne.n	8005206 <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80051ce:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 80051d2:	2a01      	cmp	r2, #1
 80051d4:	d017      	beq.n	8005206 <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80051d6:	2224      	movs	r2, #36	@ 0x24
 80051d8:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80051dc:	6802      	ldr	r2, [r0, #0]
 80051de:	6810      	ldr	r0, [r2, #0]
 80051e0:	f020 0001 	bic.w	r0, r0, #1
 80051e4:	6010      	str	r0, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 80051e6:	6810      	ldr	r0, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 80051e8:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 80051ec:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80051f0:	2000      	movs	r0, #0
    hi2c->Instance->CR1 = tmpreg;
 80051f2:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 80051f4:	6811      	ldr	r1, [r2, #0]
 80051f6:	f041 0101 	orr.w	r1, r1, #1
 80051fa:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80051fc:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005200:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005204:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 8005206:	2002      	movs	r0, #2
 8005208:	e7fc      	b.n	8005204 <HAL_I2CEx_ConfigDigitalFilter+0x44>
	...

0800520c <HAL_ICACHE_ConfigAssociativityMode>:
  *            @arg ICACHE_1WAY   1-way cache (direct mapped cache)
  *            @arg ICACHE_2WAYS  2-ways set associative cache (default)
  * @retval HAL status (HAL_OK/HAL_ERROR)
  */
HAL_StatusTypeDef HAL_ICACHE_ConfigAssociativityMode(uint32_t AssociativityMode)
{
 800520c:	4601      	mov	r1, r0

  /* Check the parameters */
  assert_param(IS_ICACHE_ASSOCIATIVITY_MODE(AssociativityMode));

  /* Check cache is not enabled */
  if (READ_BIT(ICACHE->CR, ICACHE_CR_EN) != 0U)
 800520e:	4a06      	ldr	r2, [pc, #24]	@ (8005228 <HAL_ICACHE_ConfigAssociativityMode+0x1c>)
 8005210:	6810      	ldr	r0, [r2, #0]
 8005212:	f010 0001 	ands.w	r0, r0, #1
  {
    status = HAL_ERROR;
  }
  else
  {
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 8005216:	bf09      	itett	eq
 8005218:	6813      	ldreq	r3, [r2, #0]
    status = HAL_ERROR;
 800521a:	2001      	movne	r0, #1
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 800521c:	f023 0304 	biceq.w	r3, r3, #4
 8005220:	430b      	orreq	r3, r1
 8005222:	bf08      	it	eq
 8005224:	6013      	streq	r3, [r2, #0]
  }

  return status;
}
 8005226:	4770      	bx	lr
 8005228:	40030400 	.word	0x40030400

0800522c <HAL_ICACHE_Enable>:
  *         cache operation completes.
  * @retval HAL status (HAL_OK)
  */
HAL_StatusTypeDef HAL_ICACHE_Enable(void)
{
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 800522c:	4a03      	ldr	r2, [pc, #12]	@ (800523c <HAL_ICACHE_Enable+0x10>)

  return HAL_OK;
}
 800522e:	2000      	movs	r0, #0
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 8005230:	6813      	ldr	r3, [r2, #0]
 8005232:	f043 0301 	orr.w	r3, r3, #1
 8005236:	6013      	str	r3, [r2, #0]
}
 8005238:	4770      	bx	lr
 800523a:	bf00      	nop
 800523c:	40030400 	.word	0x40030400

08005240 <JPEG_Bits_To_SizeCodes>:
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(const uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode,
                                                uint32_t *LastK)
{
 8005240:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Figure C.1: Generation of table of Huffman code sizes */
  j = 0;
  for (k = 0; k < 16UL; k++)
  {
    i = (uint32_t)Bits[k];
 8005242:	2401      	movs	r4, #1
  j = 0;
 8005244:	2500      	movs	r5, #0
    i = (uint32_t)Bits[k];
 8005246:	7807      	ldrb	r7, [r0, #0]
    if ((j + i) > 256UL)
 8005248:	194e      	adds	r6, r1, r5
 800524a:	443d      	add	r5, r7
 800524c:	194f      	adds	r7, r1, r5
    {
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
 800524e:	42be      	cmp	r6, r7
 8005250:	d112      	bne.n	8005278 <JPEG_Bits_To_SizeCodes+0x38>
  for (k = 0; k < 16UL; k++)
 8005252:	2c10      	cmp	r4, #16
 8005254:	d108      	bne.n	8005268 <JPEG_Bits_To_SizeCodes+0x28>
      Huffsize[j] = (uint8_t) k + 1U;
      j++;
      i--;
    }
  }
  Huffsize[j] = 0;
 8005256:	2400      	movs	r4, #0
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if (si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
 8005258:	2601      	movs	r6, #1
  Huffsize[j] = 0;
 800525a:	554c      	strb	r4, [r1, r5]
  *LastK = j;
 800525c:	601d      	str	r5, [r3, #0]
  j = 0;
 800525e:	4623      	mov	r3, r4
  si = Huffsize[0];
 8005260:	780d      	ldrb	r5, [r1, #0]
  while (Huffsize[j] != 0U)
 8005262:	5cc8      	ldrb	r0, [r1, r3]
 8005264:	b9d8      	cbnz	r0, 800529e <JPEG_Bits_To_SizeCodes+0x5e>
    code <<= 1;
    si++;
  }
  /* Return function status */
  return HAL_OK;
}
 8005266:	bdf0      	pop	{r4, r5, r6, r7, pc}
    i = (uint32_t)Bits[k];
 8005268:	5d07      	ldrb	r7, [r0, r4]
    if ((j + i) > 256UL)
 800526a:	3401      	adds	r4, #1
 800526c:	19ee      	adds	r6, r5, r7
 800526e:	f5b6 7f80 	cmp.w	r6, #256	@ 0x100
 8005272:	d9e9      	bls.n	8005248 <JPEG_Bits_To_SizeCodes+0x8>
      return HAL_ERROR;
 8005274:	2001      	movs	r0, #1
 8005276:	e7f6      	b.n	8005266 <JPEG_Bits_To_SizeCodes+0x26>
      Huffsize[j] = (uint8_t) k + 1U;
 8005278:	f806 4b01 	strb.w	r4, [r6], #1
      i--;
 800527c:	e7e7      	b.n	800524e <JPEG_Bits_To_SizeCodes+0xe>
      Huffcode[j] = code;
 800527e:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
      j++;
 8005282:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[j]) == si)
 8005284:	5cc8      	ldrb	r0, [r1, r3]
 8005286:	19dc      	adds	r4, r3, r7
 8005288:	42a8      	cmp	r0, r5
 800528a:	d0f8      	beq.n	800527e <JPEG_Bits_To_SizeCodes+0x3e>
    if (si > 31UL)
 800528c:	2d1f      	cmp	r5, #31
 800528e:	d8f1      	bhi.n	8005274 <JPEG_Bits_To_SizeCodes+0x34>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
 8005290:	fa06 f005 	lsl.w	r0, r6, r5
 8005294:	42a0      	cmp	r0, r4
 8005296:	d9ed      	bls.n	8005274 <JPEG_Bits_To_SizeCodes+0x34>
    code <<= 1;
 8005298:	0064      	lsls	r4, r4, #1
    si++;
 800529a:	3501      	adds	r5, #1
 800529c:	e7e1      	b.n	8005262 <JPEG_Bits_To_SizeCodes+0x22>
 800529e:	1ae7      	subs	r7, r4, r3
 80052a0:	e7f0      	b.n	8005284 <JPEG_Bits_To_SizeCodes+0x44>

080052a2 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
 80052a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80052a4:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
 80052a8:	460d      	mov	r5, r1
  uint32_t k;
  uint32_t i;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 80052aa:	ab01      	add	r3, sp, #4
 80052ac:	aa43      	add	r2, sp, #268	@ 0x10c
 80052ae:	a902      	add	r1, sp, #8
{
 80052b0:	4604      	mov	r4, r0
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 80052b2:	f7ff ffc5 	bl	8005240 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
 80052b6:	b938      	cbnz	r0, 80052c8 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x26>
 80052b8:	9e01      	ldr	r6, [sp, #4]
 80052ba:	460b      	mov	r3, r1
 80052bc:	360f      	adds	r6, #15
 80052be:	f104 010f 	add.w	r1, r4, #15
 80052c2:	4434      	add	r4, r6
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
 80052c4:	42a1      	cmp	r1, r4
 80052c6:	d102      	bne.n	80052ce <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2c>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 80052c8:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
 80052cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    i = DC_BitsValsTable->HuffVal[k];
 80052ce:	f811 6f01 	ldrb.w	r6, [r1, #1]!
    if (i >= JPEG_DC_HUFF_TABLE_SIZE)
 80052d2:	2e0b      	cmp	r6, #11
 80052d4:	d80a      	bhi.n	80052ec <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4a>
      DC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 80052d6:	f852 cb04 	ldr.w	ip, [r2], #4
 80052da:	eb05 0786 	add.w	r7, r5, r6, lsl #2
 80052de:	f8c7 c00c 	str.w	ip, [r7, #12]
      DC_SizeCodesTable->CodeLength[i] = huffsize[k] - 1U;
 80052e2:	f813 7b01 	ldrb.w	r7, [r3], #1
 80052e6:	3f01      	subs	r7, #1
 80052e8:	55af      	strb	r7, [r5, r6]
      k++;
 80052ea:	e7eb      	b.n	80052c4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x22>
      return HAL_ERROR; /* Huffman Table overflow error*/
 80052ec:	2001      	movs	r0, #1
 80052ee:	e7eb      	b.n	80052c8 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x26>

080052f0 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(const JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
 80052f0:	4603      	mov	r3, r0
 80052f2:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address;
  __IO uint32_t *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 80052f4:	681c      	ldr	r4, [r3, #0]
{
 80052f6:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 80052f8:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
 80052fc:	429a      	cmp	r2, r3
{
 80052fe:	b091      	sub	sp, #68	@ 0x44
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 8005300:	d127      	bne.n	8005352 <JPEG_Set_HuffDC_Mem+0x62>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
 8005302:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
    return HAL_ERROR;
  }

  if (HuffTableDC != NULL)
  {
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
 8005306:	a901      	add	r1, sp, #4
 8005308:	f7ff ffcb 	bl	80052a2 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
 800530c:	b9f8      	cbnz	r0, 800534e <JPEG_Set_HuffDC_Mem+0x5e>
    {
      return  error;
    }
    addressDef = address;
    *addressDef = 0x0FFF0FFF;
 800530e:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
 8005312:	aa01      	add	r2, sp, #4
    addressDef++;
    *addressDef = 0x0FFF0FFF;
 8005314:	4615      	mov	r5, r2
    *addressDef = 0x0FFF0FFF;
 8005316:	6023      	str	r3, [r4, #0]
    *addressDef = 0x0FFF0FFF;
 8005318:	f1a4 0618 	sub.w	r6, r4, #24
 800531c:	6063      	str	r3, [r4, #4]
    i = JPEG_DC_HUFF_TABLE_SIZE;
    while (i > 1UL)
    {
      i--;
      address --;
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800531e:	7ad1      	ldrb	r1, [r2, #11]
            ((uint32_t)dcSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 8005320:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005324:	0209      	lsls	r1, r1, #8
 8005326:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
 800532a:	4319      	orrs	r1, r3
      i--;
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800532c:	7a93      	ldrb	r3, [r2, #10]
            ((uint32_t)dcSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 800532e:	f895 7034 	ldrb.w	r7, [r5, #52]	@ 0x34
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005332:	021b      	lsls	r3, r3, #8
 8005334:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8005338:	433b      	orrs	r3, r7

      *address = lsb | (msb << 16);
 800533a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800533e:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
 8005342:	42b4      	cmp	r4, r6
 8005344:	f1a2 0202 	sub.w	r2, r2, #2
 8005348:	f1a5 0508 	sub.w	r5, r5, #8
 800534c:	d1e7      	bne.n	800531e <JPEG_Set_HuffDC_Mem+0x2e>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 800534e:	b011      	add	sp, #68	@ 0x44
 8005350:	bdf0      	pop	{r4, r5, r6, r7, pc}
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
 8005352:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
 8005356:	429a      	cmp	r2, r3
 8005358:	d102      	bne.n	8005360 <JPEG_Set_HuffDC_Mem+0x70>
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
 800535a:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
  if (HuffTableDC != NULL)
 800535e:	e7d2      	b.n	8005306 <JPEG_Set_HuffDC_Mem+0x16>
    return HAL_ERROR;
 8005360:	2001      	movs	r0, #1
 8005362:	e7f4      	b.n	800534e <JPEG_Set_HuffDC_Mem+0x5e>

08005364 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(const JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
 8005364:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address;
  __IO uint32_t *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 8005368:	6804      	ldr	r4, [r0, #0]
{
 800536a:	460e      	mov	r6, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 800536c:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
 8005370:	429a      	cmp	r2, r3
{
 8005372:	f6ad 0d38 	subw	sp, sp, #2104	@ 0x838
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 8005376:	d14b      	bne.n	8005410 <JPEG_Set_HuffAC_Mem+0xac>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
 8005378:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 800537c:	466b      	mov	r3, sp
 800537e:	4630      	mov	r0, r6
 8005380:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
 8005384:	a901      	add	r1, sp, #4
 8005386:	f7ff ff5b 	bl	8005240 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
 800538a:	2800      	cmp	r0, #0
 800538c:	d13c      	bne.n	8005408 <JPEG_Set_HuffAC_Mem+0xa4>
 800538e:	4617      	mov	r7, r2
      i = (msb * 10UL) + lsb - 1UL;
 8005390:	f04f 0e0a 	mov.w	lr, #10
 8005394:	9b00      	ldr	r3, [sp, #0]
 8005396:	460d      	mov	r5, r1
 8005398:	330f      	adds	r3, #15
 800539a:	f106 0c0f 	add.w	ip, r6, #15
 800539e:	18f1      	adds	r1, r6, r3
      AC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 80053a0:	ae42      	add	r6, sp, #264	@ 0x108
  while (k < lastK)
 80053a2:	4561      	cmp	r1, ip
 80053a4:	d13b      	bne.n	800541e <JPEG_Set_HuffAC_Mem+0xba>
    /* Locations 162:175 of each AC table contain information used internally by the core */

    addressDef = address;
    for (i = 0; i < 3UL; i++)
    {
      *addressDef = 0x0FFF0FFF;
 80053a6:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
 80053aa:	a942      	add	r1, sp, #264	@ 0x108
    addressDef++;
    *addressDef = 0x0FD30FD2;
    addressDef++;
    *addressDef = 0x0FD50FD4;
    addressDef++;
    *addressDef = 0x0FD70FD6;
 80053ac:	460d      	mov	r5, r1
      *addressDef = 0x0FFF0FFF;
 80053ae:	6023      	str	r3, [r4, #0]
 80053b0:	6063      	str	r3, [r4, #4]
 80053b2:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD10FD0;
 80053b4:	f103 33d1 	add.w	r3, r3, #3520188881	@ 0xd1d1d1d1
 80053b8:	f103 232e 	add.w	r3, r3, #771763712	@ 0x2e002e00
 80053bc:	60e3      	str	r3, [r4, #12]
    *addressDef = 0x0FD30FD2;
 80053be:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 80053c2:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
 80053c4:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 80053c8:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
 80053ca:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 80053ce:	61a3      	str	r3, [r4, #24]
    /* end of Locations 162:175  */


    i = JPEG_AC_HUFF_TABLE_SIZE;
    while (i > 1UL)
 80053d0:	f5a4 76a2 	sub.w	r6, r4, #324	@ 0x144
    {
      i--;
      address--;
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 80053d4:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
            ((uint32_t)acSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 80053d8:	f895 3328 	ldrb.w	r3, [r5, #808]	@ 0x328
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 80053dc:	0212      	lsls	r2, r2, #8
 80053de:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
 80053e2:	431a      	orrs	r2, r3
      i--;
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 80053e4:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
            ((uint32_t)acSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 80053e8:	f895 7324 	ldrb.w	r7, [r5, #804]	@ 0x324
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 80053ec:	021b      	lsls	r3, r3, #8
 80053ee:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 80053f2:	433b      	orrs	r3, r7

      *address = lsb | (msb << 16);
 80053f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80053f8:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
 80053fc:	42b4      	cmp	r4, r6
 80053fe:	f1a1 0102 	sub.w	r1, r1, #2
 8005402:	f1a5 0508 	sub.w	r5, r5, #8
 8005406:	d1e5      	bne.n	80053d4 <JPEG_Set_HuffAC_Mem+0x70>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 8005408:	f60d 0d38 	addw	sp, sp, #2104	@ 0x838
 800540c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
 8005410:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
 8005414:	429a      	cmp	r2, r3
 8005416:	d10f      	bne.n	8005438 <JPEG_Set_HuffAC_Mem+0xd4>
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
 8005418:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  if (HuffTableAC != NULL)
 800541c:	e7ae      	b.n	800537c <JPEG_Set_HuffAC_Mem+0x18>
    i = AC_BitsValsTable->HuffVal[k];
 800541e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (i == 0UL)
 8005422:	b15b      	cbz	r3, 800543c <JPEG_Set_HuffAC_Mem+0xd8>
    else if (i == 0xF0UL) /* i = 0xF0 ZRL code*/
 8005424:	2bf0      	cmp	r3, #240	@ 0xf0
 8005426:	d015      	beq.n	8005454 <JPEG_Set_HuffAC_Mem+0xf0>
      msb = (i & 0xF0UL) >> 4;
 8005428:	091a      	lsrs	r2, r3, #4
      lsb = (i & 0x0FUL);
 800542a:	f003 030f 	and.w	r3, r3, #15
      i = (msb * 10UL) + lsb - 1UL;
 800542e:	3b01      	subs	r3, #1
 8005430:	fb0e 3302 	mla	r3, lr, r2, r3
    if (i >= JPEG_AC_HUFF_TABLE_SIZE)
 8005434:	2ba1      	cmp	r3, #161	@ 0xa1
 8005436:	d902      	bls.n	800543e <JPEG_Set_HuffAC_Mem+0xda>
    return HAL_ERROR;
 8005438:	2001      	movs	r0, #1
 800543a:	e7e5      	b.n	8005408 <JPEG_Set_HuffAC_Mem+0xa4>
      i = JPEG_AC_HUFF_TABLE_SIZE - 2UL; /*i = 0x00 EOB code*/
 800543c:	23a0      	movs	r3, #160	@ 0xa0
      AC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 800543e:	f857 8b04 	ldr.w	r8, [r7], #4
 8005442:	eb06 0283 	add.w	r2, r6, r3, lsl #2
 8005446:	f8c2 80a4 	str.w	r8, [r2, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[i] = huffsize[k] - 1U;
 800544a:	f815 2b01 	ldrb.w	r2, [r5], #1
 800544e:	3a01      	subs	r2, #1
 8005450:	54f2      	strb	r2, [r6, r3]
      k++;
 8005452:	e7a6      	b.n	80053a2 <JPEG_Set_HuffAC_Mem+0x3e>
      i = JPEG_AC_HUFF_TABLE_SIZE - 1UL;
 8005454:	23a1      	movs	r3, #161	@ 0xa1
 8005456:	e7f2      	b.n	800543e <JPEG_Set_HuffAC_Mem+0xda>

08005458 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
 8005458:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 800545a:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800545e:	6543      	str	r3, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005460:	6d42      	ldr	r2, [r0, #84]	@ 0x54
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
 8005462:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005464:	f002 0203 	and.w	r2, r2, #3
 8005468:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
 800546a:	685a      	ldr	r2, [r3, #4]
 800546c:	bf0c      	ite	eq
 800546e:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
 8005472:	f022 0208 	bicne.w	r2, r2, #8
 8005476:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005478:	681a      	ldr	r2, [r3, #0]
 800547a:	f022 0201 	bic.w	r2, r2, #1
 800547e:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005480:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005482:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 8005486:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Disable All DMA requests */
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005488:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800548a:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 800548e:	631a      	str	r2, [r3, #48]	@ 0x30
  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 8005490:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005492:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005496:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 8005498:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800549a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800549e:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 80054a0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80054a2:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 80054a6:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
 80054a8:	681a      	ldr	r2, [r3, #0]
 80054aa:	f042 0201 	orr.w	r2, r2, #1
 80054ae:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 80054b0:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 80054b2:	f002 020c 	and.w	r2, r2, #12
 80054b6:	2a08      	cmp	r2, #8
 80054b8:	d104      	bne.n	80054c4 <JPEG_Init_Process+0x6c>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
 80054ba:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80054bc:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
  {
    /*Enable End Of Conversation, and End Of Header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 80054c0:	631a      	str	r2, [r3, #48]	@ 0x30
  }
  else
  {
    /* Nothing to do */
  }
}
 80054c2:	4770      	bx	lr
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 80054c4:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 80054c6:	f002 020c 	and.w	r2, r2, #12
 80054ca:	2a0c      	cmp	r2, #12
 80054cc:	d1f9      	bne.n	80054c2 <JPEG_Init_Process+0x6a>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 80054ce:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80054d0:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 80054d4:	e7f4      	b.n	80054c0 <JPEG_Init_Process+0x68>
	...

080054d8 <JPEG_DMA_StartProcess>:
  * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
  *         the configuration information for JPEG module
  * @retval JPEG_PROCESS_DONE if process ends else JPEG_PROCESS_ONGOING
  */
static HAL_StatusTypeDef JPEG_DMA_StartProcess(JPEG_HandleTypeDef *hjpeg)
{
 80054d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if ((hjpeg->InDataLength < 4UL) || (hjpeg->OutDataLength < 4UL))
 80054da:	6a83      	ldr	r3, [r0, #40]	@ 0x28
{
 80054dc:	4604      	mov	r4, r0
  if ((hjpeg->InDataLength < 4UL) || (hjpeg->OutDataLength < 4UL))
 80054de:	2b03      	cmp	r3, #3
 80054e0:	d92a      	bls.n	8005538 <JPEG_DMA_StartProcess+0x60>
 80054e2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 80054e4:	2903      	cmp	r1, #3
 80054e6:	d927      	bls.n	8005538 <JPEG_DMA_StartProcess+0x60>
  {
    return HAL_ERROR;
  }
  /* Reset Ending DMA internal context flag*/
  hjpeg->Context &= ~JPEG_CONTEXT_ENDING_DMA;
 80054e8:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  /* Disable DMA In/Out Request*/
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);

  /* Set the JPEG DMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 80054ea:	4d34      	ldr	r5, [pc, #208]	@ (80055bc <JPEG_DMA_StartProcess+0xe4>)
  hjpeg->Context &= ~JPEG_CONTEXT_ENDING_DMA;
 80054ec:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80054f0:	6542      	str	r2, [r0, #84]	@ 0x54
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 80054f2:	6802      	ldr	r2, [r0, #0]
  /* Set the DMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_DMAErrorCallback;
 80054f4:	4e32      	ldr	r6, [pc, #200]	@ (80055c0 <JPEG_DMA_StartProcess+0xe8>)
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 80054f6:	6b10      	ldr	r0, [r2, #48]	@ 0x30

  /* Set the JPEG DMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 80054f8:	4f32      	ldr	r7, [pc, #200]	@ (80055c4 <JPEG_DMA_StartProcess+0xec>)
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 80054fa:	f420 50c0 	bic.w	r0, r0, #6144	@ 0x1800
 80054fe:	6310      	str	r0, [r2, #48]	@ 0x30
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 8005500:	6b20      	ldr	r0, [r4, #48]	@ 0x30

  /*DMA transfer size must be a multiple of 4 bytes i.e multiple of 32bits words*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);

  /*DMA transfer size must be a multiple of 4 bytes i.e multiple of 32bits words*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % 4UL);
 8005502:	f021 0103 	bic.w	r1, r1, #3
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 8005506:	6605      	str	r5, [r0, #96]	@ 0x60
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 8005508:	6b65      	ldr	r5, [r4, #52]	@ 0x34
  hjpeg->hdmain->XferErrorCallback = JPEG_DMAErrorCallback;
 800550a:	6686      	str	r6, [r0, #104]	@ 0x68
  hjpeg->hdmaout->XferErrorCallback = JPEG_DMAErrorCallback;
 800550c:	66ae      	str	r6, [r5, #104]	@ 0x68
  hjpeg->hdmaout->XferAbortCallback = JPEG_DMAOutAbortCallback;
 800550e:	4e2e      	ldr	r6, [pc, #184]	@ (80055c8 <JPEG_DMA_StartProcess+0xf0>)
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 8005510:	662f      	str	r7, [r5, #96]	@ 0x60
  hjpeg->hdmaout->XferAbortCallback = JPEG_DMAOutAbortCallback;
 8005512:	66ee      	str	r6, [r5, #108]	@ 0x6c
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % 4UL);
 8005514:	62e1      	str	r1, [r4, #44]	@ 0x2c

  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8005516:	6d01      	ldr	r1, [r0, #80]	@ 0x50
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 8005518:	f023 0303 	bic.w	r3, r3, #3
  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 800551c:	0609      	lsls	r1, r1, #24
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 800551e:	62a3      	str	r3, [r4, #40]	@ 0x28
  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8005520:	d516      	bpl.n	8005550 <JPEG_DMA_StartProcess+0x78>
  {
    if (hjpeg->hdmain->LinkedListQueue != NULL)
 8005522:	6f41      	ldr	r1, [r0, #116]	@ 0x74
 8005524:	b151      	cbz	r1, 800553c <JPEG_DMA_StartProcess+0x64>
    {
      /* Set DMA data size */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->InDataLength;
 8005526:	6809      	ldr	r1, [r1, #0]

      /* Set DMA source address */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;

      /* Set DMA destination address */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DIR;
 8005528:	3240      	adds	r2, #64	@ 0x40
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->InDataLength;
 800552a:	608b      	str	r3, [r1, #8]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;
 800552c:	69a3      	ldr	r3, [r4, #24]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DIR;
 800552e:	610a      	str	r2, [r1, #16]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;
 8005530:	60cb      	str	r3, [r1, #12]

      if (HAL_DMAEx_List_Start_IT(hjpeg->hdmain) != HAL_OK)
 8005532:	f7ff f903 	bl	800473c <HAL_DMAEx_List_Start_IT>
 8005536:	b1a8      	cbz	r0, 8005564 <JPEG_DMA_StartProcess+0x8c>
    return HAL_ERROR;
 8005538:	2001      	movs	r0, #1

  /* Enable JPEG In/Out DMA requests*/
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);

  return HAL_OK;
}
 800553a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      hjpeg->State = HAL_JPEG_STATE_READY;
 800553c:	2301      	movs	r3, #1
 800553e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005542:	6d23      	ldr	r3, [r4, #80]	@ 0x50
      __HAL_UNLOCK(hjpeg);
 8005544:	f884 104c 	strb.w	r1, [r4, #76]	@ 0x4c
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005548:	f043 0304 	orr.w	r3, r3, #4
 800554c:	6523      	str	r3, [r4, #80]	@ 0x50
      return HAL_ERROR;
 800554e:	e7f3      	b.n	8005538 <JPEG_DMA_StartProcess+0x60>
    if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005550:	69a1      	ldr	r1, [r4, #24]
 8005552:	3240      	adds	r2, #64	@ 0x40
 8005554:	f7fe fe98 	bl	8004288 <HAL_DMA_Start_IT>
 8005558:	b120      	cbz	r0, 8005564 <JPEG_DMA_StartProcess+0x8c>
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 800555a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800555c:	f043 0304 	orr.w	r3, r3, #4
 8005560:	6523      	str	r3, [r4, #80]	@ 0x50
      return HAL_ERROR;
 8005562:	e7e9      	b.n	8005538 <JPEG_DMA_StartProcess+0x60>
  if ((hjpeg->hdmaout->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8005564:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8005566:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8005568:	061b      	lsls	r3, r3, #24
 800556a:	d51e      	bpl.n	80055aa <JPEG_DMA_StartProcess+0xd2>
    if (hjpeg->hdmaout->LinkedListQueue != NULL)
 800556c:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 800556e:	b193      	cbz	r3, 8005596 <JPEG_DMA_StartProcess+0xbe>
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->OutDataLength;
 8005570:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005572:	681b      	ldr	r3, [r3, #0]
 8005574:	609a      	str	r2, [r3, #8]
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DOR;
 8005576:	6822      	ldr	r2, [r4, #0]
 8005578:	3244      	adds	r2, #68	@ 0x44
 800557a:	60da      	str	r2, [r3, #12]
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegOutBuffPtr;
 800557c:	69e2      	ldr	r2, [r4, #28]
 800557e:	611a      	str	r2, [r3, #16]
      if (HAL_DMAEx_List_Start_IT(hjpeg->hdmaout) != HAL_OK)
 8005580:	f7ff f8dc 	bl	800473c <HAL_DMAEx_List_Start_IT>
 8005584:	2800      	cmp	r0, #0
 8005586:	d1d7      	bne.n	8005538 <JPEG_DMA_StartProcess+0x60>
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);
 8005588:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
 800558a:	2000      	movs	r0, #0
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);
 800558c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 800558e:	f443 53c0 	orr.w	r3, r3, #6144	@ 0x1800
 8005592:	6313      	str	r3, [r2, #48]	@ 0x30
  return HAL_OK;
 8005594:	e7d1      	b.n	800553a <JPEG_DMA_StartProcess+0x62>
      hjpeg->State = HAL_JPEG_STATE_READY;
 8005596:	2201      	movs	r2, #1
 8005598:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 800559c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_UNLOCK(hjpeg);
 800559e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 80055a2:	f042 0204 	orr.w	r2, r2, #4
 80055a6:	6522      	str	r2, [r4, #80]	@ 0x50
      return HAL_ERROR;
 80055a8:	e7c6      	b.n	8005538 <JPEG_DMA_StartProcess+0x60>
    if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 80055aa:	6821      	ldr	r1, [r4, #0]
 80055ac:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80055ae:	69e2      	ldr	r2, [r4, #28]
 80055b0:	3144      	adds	r1, #68	@ 0x44
 80055b2:	f7fe fe69 	bl	8004288 <HAL_DMA_Start_IT>
 80055b6:	2800      	cmp	r0, #0
 80055b8:	d0e6      	beq.n	8005588 <JPEG_DMA_StartProcess+0xb0>
 80055ba:	e7ce      	b.n	800555a <JPEG_DMA_StartProcess+0x82>
 80055bc:	08005bed 	.word	0x08005bed
 80055c0:	08005adf 	.word	0x08005adf
 80055c4:	0800608b 	.word	0x0800608b
 80055c8:	0800607d 	.word	0x0800607d

080055cc <HAL_JPEG_Init>:
{
 80055cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hjpeg == NULL)
 80055ce:	4605      	mov	r5, r0
 80055d0:	2800      	cmp	r0, #0
 80055d2:	f000 80f6 	beq.w	80057c2 <HAL_JPEG_Init+0x1f6>
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
 80055d6:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
 80055da:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80055de:	b91b      	cbnz	r3, 80055e8 <HAL_JPEG_Init+0x1c>
    hjpeg->Lock = HAL_UNLOCKED;
 80055e0:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
 80055e4:	f7fb fa7e 	bl	8000ae4 <HAL_JPEG_MspInit>
  hjpeg->State = HAL_JPEG_STATE_BUSY;
 80055e8:	2302      	movs	r3, #2
  __HAL_JPEG_ENABLE(hjpeg);
 80055ea:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
 80055ec:	f885 304d 	strb.w	r3, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
 80055f0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80055f2:	4a87      	ldr	r2, [pc, #540]	@ (8005810 <HAL_JPEG_Init+0x244>)
 80055f4:	f043 0301 	orr.w	r3, r3, #1
 80055f8:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80055fa:	6823      	ldr	r3, [r4, #0]
  address = (hjpeg->Instance->DHTMEM + 3);
 80055fc:	f504 715b 	add.w	r1, r4, #876	@ 0x36c
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005600:	f023 0301 	bic.w	r3, r3, #1
 8005604:	6023      	str	r3, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005606:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005608:	f504 7057 	add.w	r0, r4, #860	@ 0x35c
 800560c:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
 8005610:	6323      	str	r3, [r4, #48]	@ 0x30
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005612:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005614:	f423 53c0 	bic.w	r3, r3, #6144	@ 0x1800
 8005618:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 800561a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800561c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8005620:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 8005622:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005624:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005628:	6323      	str	r3, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 800562a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800562c:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8005630:	63a3      	str	r3, [r4, #56]	@ 0x38
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
 8005632:	4b78      	ldr	r3, [pc, #480]	@ (8005814 <HAL_JPEG_Init+0x248>)
 8005634:	63eb      	str	r3, [r5, #60]	@ 0x3c
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
 8005636:	4b78      	ldr	r3, [pc, #480]	@ (8005818 <HAL_JPEG_Init+0x24c>)
 8005638:	642b      	str	r3, [r5, #64]	@ 0x40
  hjpeg->QuantTable2 = NULL;
 800563a:	2300      	movs	r3, #0
  hjpeg->QuantTable3 = NULL;
 800563c:	e9c5 3311 	strd	r3, r3, [r5, #68]	@ 0x44
               (((uint32_t)HuffTableDC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 8005640:	7b93      	ldrb	r3, [r2, #14]
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 8005642:	7bd6      	ldrb	r6, [r2, #15]
               (((uint32_t)HuffTableDC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 8005644:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 8005646:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableDC0->Bits[index - 4UL] & 0xFFUL);
 800564a:	7b16      	ldrb	r6, [r2, #12]
  while (index > 3UL)
 800564c:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableDC0->Bits[index - 3UL] & 0xFFUL) << 8) |
 800564e:	4333      	orrs	r3, r6
 8005650:	7c56      	ldrb	r6, [r2, #17]
 8005652:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 8005656:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
 800565a:	4281      	cmp	r1, r0
 800565c:	d1f0      	bne.n	8005640 <HAL_JPEG_Init+0x74>
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 800565e:	4a6f      	ldr	r2, [pc, #444]	@ (800581c <HAL_JPEG_Init+0x250>)
  address = (hjpeg->Instance->DHTMEM + 10UL);
 8005660:	f504 7162 	add.w	r1, r4, #904	@ 0x388
 8005664:	4610      	mov	r0, r2
 8005666:	460e      	mov	r6, r1
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 8005668:	4b6d      	ldr	r3, [pc, #436]	@ (8005820 <HAL_JPEG_Init+0x254>)
 800566a:	f504 775e 	add.w	r7, r4, #888	@ 0x378
 800566e:	f8c4 3378 	str.w	r3, [r4, #888]	@ 0x378
 8005672:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 8005676:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
 800567a:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 800567e:	f8c4 3370 	str.w	r3, [r4, #880]	@ 0x370
               (((uint32_t)HuffTableAC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 8005682:	7b83      	ldrb	r3, [r0, #14]
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 8005684:	f890 c00f 	ldrb.w	ip, [r0, #15]
               (((uint32_t)HuffTableAC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 8005688:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 800568a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
               ((uint32_t)HuffTableAC0->Bits[index - 4UL] & 0xFFUL);
 800568e:	f890 c00c 	ldrb.w	ip, [r0, #12]
  while (index > 3UL)
 8005692:	3804      	subs	r0, #4
               (((uint32_t)HuffTableAC0->Bits[index - 3UL] & 0xFFUL) << 8) |
 8005694:	ea43 030c 	orr.w	r3, r3, ip
 8005698:	f890 c011 	ldrb.w	ip, [r0, #17]
 800569c:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 80056a0:	f846 3904 	str.w	r3, [r6], #-4
  while (index > 3UL)
 80056a4:	42be      	cmp	r6, r7
 80056a6:	d1ec      	bne.n	8005682 <HAL_JPEG_Init+0xb6>
  value = *address & 0xFFFF0000U;
 80056a8:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
 80056ac:	f504 6085 	add.w	r0, r4, #1064	@ 0x428
  value = *address & 0xFFFF0000U;
 80056b0:	0c1b      	lsrs	r3, r3, #16
 80056b2:	041b      	lsls	r3, r3, #16
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) |
 80056b4:	f443 437a 	orr.w	r3, r3, #64000	@ 0xfa00
 80056b8:	f043 03f9 	orr.w	r3, r3, #249	@ 0xf9
  *address = value;
 80056bc:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
 80056c0:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 80056c4:	f892 60af 	ldrb.w	r6, [r2, #175]	@ 0xaf
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
 80056c8:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 80056ca:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
 80056ce:	f892 60ac 	ldrb.w	r6, [r2, #172]	@ 0xac
  while (index > 3UL)
 80056d2:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
 80056d4:	4333      	orrs	r3, r6
 80056d6:	f892 60b1 	ldrb.w	r6, [r2, #177]	@ 0xb1
 80056da:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 80056de:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
 80056e2:	4281      	cmp	r1, r0
 80056e4:	d1ec      	bne.n	80056c0 <HAL_JPEG_Init+0xf4>
  value = *address & 0x0000FFFFU;
 80056e6:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
 80056ea:	4a4e      	ldr	r2, [pc, #312]	@ (8005824 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFU;
 80056ec:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) |
 80056ee:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
 80056f2:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
 80056f6:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
  address = (hjpeg->Instance->DHTMEM + 102);
 80056fa:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
  value = *address & 0xFFFF0000U;
 80056fe:	4013      	ands	r3, r2
  *address = value;
 8005700:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
 8005704:	2301      	movs	r3, #1
 8005706:	f8c4 3438 	str.w	r3, [r4, #1080]	@ 0x438
 800570a:	f04f 3301 	mov.w	r3, #16843009	@ 0x1010101
 800570e:	f8c4 3434 	str.w	r3, [r4, #1076]	@ 0x434
 8005712:	f8c4 3430 	str.w	r3, [r4, #1072]	@ 0x430
  value = *address & 0x0000FFFFUL;
 8005716:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) |
 800571a:	f504 608b 	add.w	r0, r4, #1112	@ 0x458
  value = *address & 0x0000FFFFUL;
 800571e:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) |
 8005720:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
 8005724:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
 8005728:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
 800572c:	4013      	ands	r3, r2
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) |
 800572e:	f443 6330 	orr.w	r3, r3, #2816	@ 0xb00
 8005732:	f043 030a 	orr.w	r3, r3, #10
  *address = value;
 8005736:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 800573a:	4b3b      	ldr	r3, [pc, #236]	@ (8005828 <HAL_JPEG_Init+0x25c>)
 800573c:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
 8005740:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 8005744:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
 8005748:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
 800574c:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) |
 800574e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
 8005752:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
 8005756:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
 800575a:	4013      	ands	r3, r2
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
 800575c:	f443 43ee 	orr.w	r3, r3, #30464	@ 0x7700
 8005760:	f043 0302 	orr.w	r3, r3, #2
  *address = value;
 8005764:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
 8005768:	4b30      	ldr	r3, [pc, #192]	@ (800582c <HAL_JPEG_Init+0x260>)
 800576a:	4a31      	ldr	r2, [pc, #196]	@ (8005830 <HAL_JPEG_Init+0x264>)
 800576c:	f8c4 3454 	str.w	r3, [r4, #1108]	@ 0x454
 8005770:	4b30      	ldr	r3, [pc, #192]	@ (8005834 <HAL_JPEG_Init+0x268>)
 8005772:	f8c4 3450 	str.w	r3, [r4, #1104]	@ 0x450
 8005776:	4b30      	ldr	r3, [pc, #192]	@ (8005838 <HAL_JPEG_Init+0x26c>)
 8005778:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
 800577c:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
 8005780:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) |
 8005782:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
 8005786:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
 800578a:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 800578e:	f892 60b1 	ldrb.w	r6, [r2, #177]	@ 0xb1
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
 8005792:	041b      	lsls	r3, r3, #16
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
 8005794:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
 8005798:	f892 60ae 	ldrb.w	r6, [r2, #174]	@ 0xae
  while (index > 3UL)
 800579c:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
 800579e:	4333      	orrs	r3, r6
 80057a0:	f892 60b3 	ldrb.w	r6, [r2, #179]	@ 0xb3
 80057a4:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 80057a8:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
 80057ac:	4281      	cmp	r1, r0
 80057ae:	d1ec      	bne.n	800578a <HAL_JPEG_Init+0x1be>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
 80057b0:	4628      	mov	r0, r5
 80057b2:	491a      	ldr	r1, [pc, #104]	@ (800581c <HAL_JPEG_Init+0x250>)
 80057b4:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
 80057b8:	f7ff fdd4 	bl	8005364 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
 80057bc:	b118      	cbz	r0, 80057c6 <HAL_JPEG_Init+0x1fa>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
 80057be:	2301      	movs	r3, #1
 80057c0:	652b      	str	r3, [r5, #80]	@ 0x50
    return HAL_ERROR;
 80057c2:	2001      	movs	r0, #1
}
 80057c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
 80057c6:	4628      	mov	r0, r5
 80057c8:	4919      	ldr	r1, [pc, #100]	@ (8005830 <HAL_JPEG_Init+0x264>)
 80057ca:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
 80057ce:	f7ff fdc9 	bl	8005364 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
 80057d2:	2800      	cmp	r0, #0
 80057d4:	d1f3      	bne.n	80057be <HAL_JPEG_Init+0x1f2>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
 80057d6:	4628      	mov	r0, r5
 80057d8:	490d      	ldr	r1, [pc, #52]	@ (8005810 <HAL_JPEG_Init+0x244>)
 80057da:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
 80057de:	f7ff fd87 	bl	80052f0 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
 80057e2:	2800      	cmp	r0, #0
 80057e4:	d1eb      	bne.n	80057be <HAL_JPEG_Init+0x1f2>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
 80057e6:	4628      	mov	r0, r5
 80057e8:	4914      	ldr	r1, [pc, #80]	@ (800583c <HAL_JPEG_Init+0x270>)
 80057ea:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
 80057ee:	f7ff fd7f 	bl	80052f0 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
 80057f2:	2800      	cmp	r0, #0
 80057f4:	d1e3      	bne.n	80057be <HAL_JPEG_Init+0x1f2>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
 80057f6:	6863      	ldr	r3, [r4, #4]
 80057f8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80057fc:	6063      	str	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
 80057fe:	2301      	movs	r3, #1
  hjpeg->JpegInCount = 0;
 8005800:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
 8005802:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
 8005804:	f885 304d 	strb.w	r3, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
 8005808:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
 800580a:	6568      	str	r0, [r5, #84]	@ 0x54
  return HAL_OK;
 800580c:	e7da      	b.n	80057c4 <HAL_JPEG_Init+0x1f8>
 800580e:	bf00      	nop
 8005810:	0803585c 	.word	0x0803585c
 8005814:	0803565c 	.word	0x0803565c
 8005818:	0803561c 	.word	0x0803561c
 800581c:	0803578e 	.word	0x0803578e
 8005820:	0b0a0908 	.word	0x0b0a0908
 8005824:	ffff0000 	.word	0xffff0000
 8005828:	09080706 	.word	0x09080706
 800582c:	01000404 	.word	0x01000404
 8005830:	080356dc 	.word	0x080356dc
 8005834:	05070403 	.word	0x05070403
 8005838:	04040201 	.word	0x04040201
 800583c:	08035840 	.word	0x08035840

08005840 <HAL_JPEG_GetInfo>:
{
 8005840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if ((hjpeg == NULL) || (pInfo == NULL))
 8005844:	2800      	cmp	r0, #0
 8005846:	d070      	beq.n	800592a <HAL_JPEG_GetInfo+0xea>
 8005848:	2900      	cmp	r1, #0
 800584a:	d06e      	beq.n	800592a <HAL_JPEG_GetInfo+0xea>
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
 800584c:	6804      	ldr	r4, [r0, #0]
 800584e:	6863      	ldr	r3, [r4, #4]
 8005850:	f003 0303 	and.w	r3, r3, #3
 8005854:	2b02      	cmp	r3, #2
 8005856:	d048      	beq.n	80058ea <HAL_JPEG_GetInfo+0xaa>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
 8005858:	6863      	ldr	r3, [r4, #4]
 800585a:	f013 0303 	ands.w	r3, r3, #3
 800585e:	d005      	beq.n	800586c <HAL_JPEG_GetInfo+0x2c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
 8005860:	6863      	ldr	r3, [r4, #4]
 8005862:	f003 0303 	and.w	r3, r3, #3
 8005866:	2b03      	cmp	r3, #3
 8005868:	d15f      	bne.n	800592a <HAL_JPEG_GetInfo+0xea>
 800586a:	2330      	movs	r3, #48	@ 0x30
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
 800586c:	6862      	ldr	r2, [r4, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
 800586e:	600b      	str	r3, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
 8005870:	0c12      	lsrs	r2, r2, #16
 8005872:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 8005874:	68e2      	ldr	r2, [r4, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 8005876:	f023 0320 	bic.w	r3, r3, #32
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 800587a:	0c12      	lsrs	r2, r2, #16
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 800587c:	2b10      	cmp	r3, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 800587e:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 8005880:	d13e      	bne.n	8005900 <HAL_JPEG_GetInfo+0xc0>
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
 8005882:	6925      	ldr	r5, [r4, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
 8005884:	6963      	ldr	r3, [r4, #20]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
 8005886:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
 800588a:	69a2      	ldr	r2, [r4, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 800588c:	2d01      	cmp	r5, #1
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
 800588e:	ea4f 1313 	mov.w	r3, r3, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
 8005892:	ea4f 1212 	mov.w	r2, r2, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 8005896:	d12a      	bne.n	80058ee <HAL_JPEG_GetInfo+0xae>
 8005898:	4313      	orrs	r3, r2
 800589a:	f013 0f0f 	tst.w	r3, #15
 800589e:	bf0c      	ite	eq
 80058a0:	2301      	moveq	r3, #1
 80058a2:	2300      	movne	r3, #0
 80058a4:	005b      	lsls	r3, r3, #1
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
 80058a6:	604b      	str	r3, [r1, #4]
  *         the configuration information for JPEG module
  * @retval JPEG image quality from 1 to 100.
  */
static uint32_t JPEG_GetQuality(const JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
 80058a8:	2300      	movs	r3, #0
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
 80058aa:	f04f 0e64 	mov.w	lr, #100	@ 0x64
  i = 0;
 80058ae:	461d      	mov	r5, r3
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
 80058b0:	f241 3888 	movw	r8, #5000	@ 0x1388
 80058b4:	f8df c078 	ldr.w	ip, [pc, #120]	@ 8005930 <HAL_JPEG_GetInfo+0xf0>
 80058b8:	3450      	adds	r4, #80	@ 0x50
    quantRow = *tableAddress;
 80058ba:	2600      	movs	r6, #0
 80058bc:	f854 9005 	ldr.w	r9, [r4, r5]
    for (j = 0; j < 4UL; j++)
 80058c0:	eb05 070c 	add.w	r7, r5, ip
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
 80058c4:	fa29 f206 	lsr.w	r2, r9, r6
 80058c8:	b2d2      	uxtb	r2, r2
      if (quantVal == 1UL)
 80058ca:	2a01      	cmp	r2, #1
 80058cc:	d11a      	bne.n	8005904 <HAL_JPEG_GetInfo+0xc4>
        quality += 100UL;
 80058ce:	3364      	adds	r3, #100	@ 0x64
    for (j = 0; j < 4UL; j++)
 80058d0:	3608      	adds	r6, #8
 80058d2:	2e20      	cmp	r6, #32
 80058d4:	f107 0701 	add.w	r7, r7, #1
 80058d8:	d1f4      	bne.n	80058c4 <HAL_JPEG_GetInfo+0x84>
        }
      }
    }

    i += 4UL;
 80058da:	3504      	adds	r5, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
 80058dc:	2d40      	cmp	r5, #64	@ 0x40
 80058de:	d1ec      	bne.n	80058ba <HAL_JPEG_GetInfo+0x7a>
  return HAL_OK;
 80058e0:	2000      	movs	r0, #0
    tableAddress ++;
  }

  return (quality / 64UL);
 80058e2:	099b      	lsrs	r3, r3, #6
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
 80058e4:	610b      	str	r3, [r1, #16]
}
 80058e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80058ea:	2310      	movs	r3, #16
 80058ec:	e7be      	b.n	800586c <HAL_JPEG_GetInfo+0x2c>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 80058ee:	2d03      	cmp	r5, #3
 80058f0:	d106      	bne.n	8005900 <HAL_JPEG_GetInfo+0xc0>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 80058f2:	4313      	orrs	r3, r2
 80058f4:	f013 0f0f 	tst.w	r3, #15
 80058f8:	bf0c      	ite	eq
 80058fa:	2301      	moveq	r3, #1
 80058fc:	2300      	movne	r3, #0
 80058fe:	e7d2      	b.n	80058a6 <HAL_JPEG_GetInfo+0x66>
 8005900:	2300      	movs	r3, #0
 8005902:	e7d0      	b.n	80058a6 <HAL_JPEG_GetInfo+0x66>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
 8005904:	fb0e fb02 	mul.w	fp, lr, r2
 8005908:	f897 a000 	ldrb.w	sl, [r7]
 800590c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800590e:	f812 a00a 	ldrb.w	sl, [r2, sl]
 8005912:	fbbb f2fa 	udiv	r2, fp, sl
        if (scale <= 100UL)
 8005916:	2a64      	cmp	r2, #100	@ 0x64
          quality += 5000UL / scale;
 8005918:	bf8d      	iteet	hi
 800591a:	fbb8 f2f2 	udivhi	r2, r8, r2
          quality += (200UL - scale) / 2UL;
 800591e:	f1c2 02c8 	rsbls	r2, r2, #200	@ 0xc8
 8005922:	eb03 0352 	addls.w	r3, r3, r2, lsr #1
          quality += 5000UL / scale;
 8005926:	189b      	addhi	r3, r3, r2
 8005928:	e7d2      	b.n	80058d0 <HAL_JPEG_GetInfo+0x90>
    return HAL_ERROR;
 800592a:	2001      	movs	r0, #1
 800592c:	e7db      	b.n	80058e6 <HAL_JPEG_GetInfo+0xa6>
 800592e:	bf00      	nop
 8005930:	0803569c 	.word	0x0803569c

08005934 <HAL_JPEG_Decode_DMA>:
{
 8005934:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
 8005936:	4604      	mov	r4, r0
 8005938:	b348      	cbz	r0, 800598e <HAL_JPEG_Decode_DMA+0x5a>
 800593a:	b341      	cbz	r1, 800598e <HAL_JPEG_Decode_DMA+0x5a>
 800593c:	b33b      	cbz	r3, 800598e <HAL_JPEG_Decode_DMA+0x5a>
  __HAL_LOCK(hjpeg);
 800593e:	f890 504c 	ldrb.w	r5, [r0, #76]	@ 0x4c
 8005942:	2d01      	cmp	r5, #1
 8005944:	d028      	beq.n	8005998 <HAL_JPEG_Decode_DMA+0x64>
 8005946:	2501      	movs	r5, #1
 8005948:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
 800594c:	f890 504d 	ldrb.w	r5, [r0, #77]	@ 0x4d
 8005950:	2d01      	cmp	r5, #1
 8005952:	d11e      	bne.n	8005992 <HAL_JPEG_Decode_DMA+0x5e>
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
 8005954:	2504      	movs	r5, #4
 8005956:	f880 504d 	strb.w	r5, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
 800595a:	6d45      	ldr	r5, [r0, #84]	@ 0x54
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
 800595c:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
 8005960:	f025 050f 	bic.w	r5, r5, #15
 8005964:	6545      	str	r5, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
 8005966:	6d45      	ldr	r5, [r0, #84]	@ 0x54
    hjpeg->OutDataLength = OutDataLength;
 8005968:	9b04      	ldr	r3, [sp, #16]
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
 800596a:	f045 050e 	orr.w	r5, r5, #14
 800596e:	6545      	str	r5, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
 8005970:	2500      	movs	r5, #0
    hjpeg->InDataLength = InDataLength;
 8005972:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 8005974:	6205      	str	r5, [r0, #32]
    hjpeg->OutDataLength = OutDataLength;
 8005976:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->JpegOutCount = 0;
 8005978:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
 800597a:	f7ff fd6d 	bl	8005458 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
 800597e:	f7ff fdab 	bl	80054d8 <JPEG_DMA_StartProcess>
 8005982:	b128      	cbz	r0, 8005990 <HAL_JPEG_Decode_DMA+0x5c>
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005984:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
 8005986:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 800598a:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
 800598e:	2001      	movs	r0, #1
}
 8005990:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
 8005992:	2300      	movs	r3, #0
 8005994:	f880 304c 	strb.w	r3, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
 8005998:	2002      	movs	r0, #2
 800599a:	e7f9      	b.n	8005990 <HAL_JPEG_Decode_DMA+0x5c>

0800599c <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 800599c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 800599e:	f003 030c 	and.w	r3, r3, #12
 80059a2:	2b0c      	cmp	r3, #12
 80059a4:	d117      	bne.n	80059d6 <HAL_JPEG_Pause+0x3a>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 80059a6:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
 80059aa:	bf1f      	itttt	ne
 80059ac:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 80059ae:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80059b2:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= JPEG_DMA_IDMA;
 80059b4:	f44f 6300 	movne.w	r3, #2048	@ 0x800
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 80059b8:	0789      	lsls	r1, r1, #30
 80059ba:	d505      	bpl.n	80059c8 <HAL_JPEG_Pause+0x2c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 80059bc:	6d42      	ldr	r2, [r0, #84]	@ 0x54
      mask |= JPEG_DMA_ODMA;
 80059be:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 80059c2:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80059c6:	6542      	str	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
 80059c8:	6801      	ldr	r1, [r0, #0]
 80059ca:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 80059cc:	ea22 0303 	bic.w	r3, r2, r3
 80059d0:	630b      	str	r3, [r1, #48]	@ 0x30
}
 80059d2:	2000      	movs	r0, #0
 80059d4:	4770      	bx	lr
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 80059d6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80059d8:	f003 030c 	and.w	r3, r3, #12
 80059dc:	2b08      	cmp	r3, #8
 80059de:	d1f8      	bne.n	80059d2 <HAL_JPEG_Pause+0x36>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 80059e0:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
 80059e4:	bf1f      	itttt	ne
 80059e6:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 80059e8:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80059ec:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
 80059ee:	2306      	movne	r3, #6
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 80059f0:	078a      	lsls	r2, r1, #30
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 80059f2:	bf41      	itttt	mi
 80059f4:	6d42      	ldrmi	r2, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 80059f6:	f043 0328 	orrmi.w	r3, r3, #40	@ 0x28
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 80059fa:	f442 5200 	orrmi.w	r2, r2, #8192	@ 0x2000
 80059fe:	6542      	strmi	r2, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 8005a00:	e7e2      	b.n	80059c8 <HAL_JPEG_Pause+0x2c>

08005a02 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
 8005a02:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
 8005a04:	6282      	str	r2, [r0, #40]	@ 0x28
}
 8005a06:	4770      	bx	lr

08005a08 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
 8005a08:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
 8005a0a:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
 8005a0c:	4770      	bx	lr

08005a0e <HAL_JPEG_Abort>:
{
 8005a0e:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
 8005a10:	6d42      	ldr	r2, [r0, #84]	@ 0x54
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
 8005a12:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8005a14:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
 8005a16:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8005a1a:	f023 030f 	bic.w	r3, r3, #15
 8005a1e:	6543      	str	r3, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8005a20:	f002 030c 	and.w	r3, r2, #12
 8005a24:	2b0c      	cmp	r3, #12
 8005a26:	d117      	bne.n	8005a58 <HAL_JPEG_Abort+0x4a>
    if (HAL_DMA_Abort(hjpeg->hdmaout) != HAL_OK)
 8005a28:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8005a2a:	f7fe fc6b 	bl	8004304 <HAL_DMA_Abort>
 8005a2e:	b138      	cbz	r0, 8005a40 <HAL_JPEG_Abort+0x32>
      if (hjpeg->hdmaout->ErrorCode == HAL_DMA_ERROR_TIMEOUT)
 8005a30:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005a32:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005a34:	2b10      	cmp	r3, #16
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005a36:	bf02      	ittt	eq
 8005a38:	6d23      	ldreq	r3, [r4, #80]	@ 0x50
 8005a3a:	f043 0304 	orreq.w	r3, r3, #4
 8005a3e:	6523      	streq	r3, [r4, #80]	@ 0x50
    if (HAL_DMA_Abort(hjpeg->hdmain) != HAL_OK)
 8005a40:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8005a42:	f7fe fc5f 	bl	8004304 <HAL_DMA_Abort>
 8005a46:	b138      	cbz	r0, 8005a58 <HAL_JPEG_Abort+0x4a>
      if (hjpeg->hdmain->ErrorCode == HAL_DMA_ERROR_TIMEOUT)
 8005a48:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005a4a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005a4c:	2b10      	cmp	r3, #16
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005a4e:	bf02      	ittt	eq
 8005a50:	6d23      	ldreq	r3, [r4, #80]	@ 0x50
 8005a52:	f043 0304 	orreq.w	r3, r3, #4
 8005a56:	6523      	streq	r3, [r4, #80]	@ 0x50
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005a58:	6822      	ldr	r2, [r4, #0]
 8005a5a:	6813      	ldr	r3, [r2, #0]
 8005a5c:	f023 0301 	bic.w	r3, r3, #1
 8005a60:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
 8005a62:	f7fe f907 	bl	8003c74 <HAL_GetTick>
 8005a66:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
 8005a68:	6823      	ldr	r3, [r4, #0]
 8005a6a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005a6c:	061b      	lsls	r3, r3, #24
 8005a6e:	d50c      	bpl.n	8005a8a <HAL_JPEG_Abort+0x7c>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
 8005a70:	f7fe f900 	bl	8003c74 <HAL_GetTick>
 8005a74:	1b40      	subs	r0, r0, r5
 8005a76:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8005a7a:	d9f5      	bls.n	8005a68 <HAL_JPEG_Abort+0x5a>
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
 8005a7c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005a7e:	f043 0308 	orr.w	r3, r3, #8
 8005a82:	6523      	str	r3, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005a84:	2306      	movs	r3, #6
 8005a86:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005a8a:	6823      	ldr	r3, [r4, #0]
 8005a8c:	2001      	movs	r0, #1
 8005a8e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005a90:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 8005a94:	631a      	str	r2, [r3, #48]	@ 0x30
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005a96:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005a98:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 8005a9c:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 8005a9e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005aa0:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005aa4:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 8005aa6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005aa8:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005aac:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8005aae:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005ab0:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8005ab4:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
 8005ab6:	2300      	movs	r3, #0
 8005ab8:	6223      	str	r3, [r4, #32]
  hjpeg->JpegOutCount = 0;
 8005aba:	6263      	str	r3, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
 8005abc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005abe:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8005ac2:	6562      	str	r2, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
 8005ac4:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 8005ac6:	b12a      	cbz	r2, 8005ad4 <HAL_JPEG_Abort+0xc6>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005ac8:	2206      	movs	r2, #6
 8005aca:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    __HAL_UNLOCK(hjpeg);
 8005ace:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
 8005ad2:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005ad4:	f884 004d 	strb.w	r0, [r4, #77]	@ 0x4d
    return HAL_OK;
 8005ad8:	4618      	mov	r0, r3
 8005ada:	e7f8      	b.n	8005ace <HAL_JPEG_Abort+0xc0>

08005adc <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
 8005adc:	4770      	bx	lr

08005ade <JPEG_DMAErrorCallback>:
{
 8005ade:	b510      	push	{r4, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005ae0:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_NONE)
 8005ae2:	f7fe fd2d 	bl	8004540 <HAL_DMA_GetError>
 8005ae6:	b1b0      	cbz	r0, 8005b16 <JPEG_DMAErrorCallback+0x38>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005ae8:	6823      	ldr	r3, [r4, #0]
    HAL_JPEG_ErrorCallback(hjpeg);
 8005aea:	4620      	mov	r0, r4
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005aec:	681a      	ldr	r2, [r3, #0]
 8005aee:	f022 0201 	bic.w	r2, r2, #1
 8005af2:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005af4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005af6:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 8005afa:	631a      	str	r2, [r3, #48]	@ 0x30
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005afc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005afe:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 8005b02:	631a      	str	r2, [r3, #48]	@ 0x30
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005b04:	2301      	movs	r3, #1
 8005b06:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005b0a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005b0c:	f043 0304 	orr.w	r3, r3, #4
 8005b10:	6523      	str	r3, [r4, #80]	@ 0x50
    HAL_JPEG_ErrorCallback(hjpeg);
 8005b12:	f7fb ffbf 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 8005b16:	bd10      	pop	{r4, pc}

08005b18 <JPEG_ReadInputData>:
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
 8005b18:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
 8005b1a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005b1c:	4604      	mov	r4, r0
 8005b1e:	460d      	mov	r5, r1
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
 8005b20:	b922      	cbnz	r2, 8005b2c <JPEG_ReadInputData+0x14>
    (void) HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_INPUT);
 8005b22:	2101      	movs	r1, #1
 8005b24:	f7ff ff3a 	bl	800599c <HAL_JPEG_Pause>
  uint32_t nb_bytes = 0;
 8005b28:	2200      	movs	r2, #0
 8005b2a:	e004      	b.n	8005b36 <JPEG_ReadInputData+0x1e>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
 8005b2c:	6a03      	ldr	r3, [r0, #32]
 8005b2e:	429a      	cmp	r2, r3
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
 8005b30:	6a03      	ldr	r3, [r0, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
 8005b32:	d922      	bls.n	8005b7a <JPEG_ReadInputData+0x62>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
 8005b34:	1ad2      	subs	r2, r2, r3
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
 8005b36:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005b38:	f413 5380 	ands.w	r3, r3, #4096	@ 0x1000
 8005b3c:	d11c      	bne.n	8005b78 <JPEG_ReadInputData+0x60>
 8005b3e:	b1da      	cbz	r2, 8005b78 <JPEG_ReadInputData+0x60>
    if (nb_words >= nbRequestWords)
 8005b40:	ebb5 0f92 	cmp.w	r5, r2, lsr #2
 8005b44:	69a1      	ldr	r1, [r4, #24]
    nb_words = nb_bytes / 4UL;
 8005b46:	ea4f 0692 	mov.w	r6, r2, lsr #2
    if (nb_words >= nbRequestWords)
 8005b4a:	d826      	bhi.n	8005b9a <JPEG_ReadInputData+0x82>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005b4c:	6827      	ldr	r7, [r4, #0]
        input_count = hjpeg->JpegInCount;
 8005b4e:	6a26      	ldr	r6, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005b50:	3301      	adds	r3, #1
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005b52:	1988      	adds	r0, r1, r6
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005b54:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005b56:	f890 c001 	ldrb.w	ip, [r0, #1]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005b5a:	5d8e      	ldrb	r6, [r1, r6]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005b5c:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
 8005b5e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005b60:	ea42 220c 	orr.w	r2, r2, ip, lsl #8
 8005b64:	4332      	orrs	r2, r6
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005b66:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005b6a:	643a      	str	r2, [r7, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
 8005b6c:	6a22      	ldr	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005b6e:	429d      	cmp	r5, r3
        hjpeg->JpegInCount += 4UL;
 8005b70:	f102 0204 	add.w	r2, r2, #4
 8005b74:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005b76:	d1ea      	bne.n	8005b4e <JPEG_ReadInputData+0x36>
}
 8005b78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
 8005b7a:	429a      	cmp	r2, r3
 8005b7c:	d1d4      	bne.n	8005b28 <JPEG_ReadInputData+0x10>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
 8005b7e:	6a01      	ldr	r1, [r0, #32]
 8005b80:	f7fb feca 	bl	8001918 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
 8005b84:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005b86:	2b04      	cmp	r3, #4
      hjpeg->InDataLength = ((hjpeg->InDataLength + 3UL) / 4UL) * 4UL;
 8005b88:	bf82      	ittt	hi
 8005b8a:	3303      	addhi	r3, #3
 8005b8c:	f023 0303 	bichi.w	r3, r3, #3
 8005b90:	62a3      	strhi	r3, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 8005b92:	2300      	movs	r3, #0
    nb_bytes = hjpeg->InDataLength;
 8005b94:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 8005b96:	6223      	str	r3, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
 8005b98:	e7cd      	b.n	8005b36 <JPEG_ReadInputData+0x1e>
      if (nb_words > 0UL)
 8005b9a:	2a03      	cmp	r2, #3
 8005b9c:	d916      	bls.n	8005bcc <JPEG_ReadInputData+0xb4>
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005b9e:	6827      	ldr	r7, [r4, #0]
          input_count = hjpeg->JpegInCount;
 8005ba0:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005ba2:	3301      	adds	r3, #1
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005ba4:	1948      	adds	r0, r1, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005ba6:	7882      	ldrb	r2, [r0, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005ba8:	f890 c001 	ldrb.w	ip, [r0, #1]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005bac:	5d4d      	ldrb	r5, [r1, r5]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005bae:	0412      	lsls	r2, r2, #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
 8005bb0:	78c0      	ldrb	r0, [r0, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005bb2:	ea42 220c 	orr.w	r2, r2, ip, lsl #8
 8005bb6:	432a      	orrs	r2, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005bb8:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005bbc:	643a      	str	r2, [r7, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
 8005bbe:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005bc0:	429e      	cmp	r6, r3
          hjpeg->JpegInCount += 4UL;
 8005bc2:	f102 0204 	add.w	r2, r2, #4
 8005bc6:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005bc8:	d1ea      	bne.n	8005ba0 <JPEG_ReadInputData+0x88>
 8005bca:	e7d5      	b.n	8005b78 <JPEG_ReadInputData+0x60>
        for (index = 0; index < nb_bytes; index++)
 8005bcc:	4618      	mov	r0, r3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
 8005bce:	6a25      	ldr	r5, [r4, #32]
 8005bd0:	00c6      	lsls	r6, r0, #3
 8005bd2:	5d4d      	ldrb	r5, [r1, r5]
        for (index = 0; index < nb_bytes; index++)
 8005bd4:	3001      	adds	r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
 8005bd6:	40b5      	lsls	r5, r6
 8005bd8:	432b      	orrs	r3, r5
          hjpeg->JpegInCount++;
 8005bda:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
 8005bdc:	4282      	cmp	r2, r0
          hjpeg->JpegInCount++;
 8005bde:	f105 0501 	add.w	r5, r5, #1
 8005be2:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
 8005be4:	d1f3      	bne.n	8005bce <JPEG_ReadInputData+0xb6>
        hjpeg->Instance->DIR = dataword;
 8005be6:	6822      	ldr	r2, [r4, #0]
 8005be8:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8005bea:	e7c5      	b.n	8005b78 <JPEG_ReadInputData+0x60>

08005bec <JPEG_DMAInCpltCallback>:
{
 8005bec:	b570      	push	{r4, r5, r6, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005bee:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005bf0:	6822      	ldr	r2, [r4, #0]
 8005bf2:	6b11      	ldr	r1, [r2, #48]	@ 0x30
 8005bf4:	f021 017e 	bic.w	r1, r1, #126	@ 0x7e
 8005bf8:	6311      	str	r1, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
 8005bfa:	6d61      	ldr	r1, [r4, #84]	@ 0x54
 8005bfc:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8005c00:	f021 0173 	bic.w	r1, r1, #115	@ 0x73
 8005c04:	0409      	lsls	r1, r1, #16
 8005c06:	0c09      	lsrs	r1, r1, #16
 8005c08:	290c      	cmp	r1, #12
 8005c0a:	d12d      	bne.n	8005c68 <JPEG_DMAInCpltCallback+0x7c>
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005c0c:	6b11      	ldr	r1, [r2, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 8005c0e:	6803      	ldr	r3, [r0, #0]
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005c10:	f421 6100 	bic.w	r1, r1, #2048	@ 0x800
 8005c14:	6311      	str	r1, [r2, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 8005c16:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 8005c18:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
 8005c1a:	f7fe fdfb 	bl	8004814 <HAL_DMAEx_GetFifoLevel>
 8005c1e:	b2b6      	uxth	r6, r6
 8005c20:	1bad      	subs	r5, r5, r6
 8005c22:	1a2d      	subs	r5, r5, r0
 8005c24:	6225      	str	r5, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
 8005c26:	4620      	mov	r0, r4
 8005c28:	6a21      	ldr	r1, [r4, #32]
 8005c2a:	f7fb fe75 	bl	8001918 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= 4UL)
 8005c2e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
      if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005c30:	6822      	ldr	r2, [r4, #0]
    if (hjpeg->InDataLength >= 4UL)
 8005c32:	2b03      	cmp	r3, #3
      hjpeg->InDataLength = ((hjpeg->InDataLength + 3UL) / 4UL) * 4UL;
 8005c34:	bf82      	ittt	hi
 8005c36:	3303      	addhi	r3, #3
 8005c38:	f023 0303 	bichi.w	r3, r3, #3
 8005c3c:	62a3      	strhi	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
 8005c3e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005c40:	04db      	lsls	r3, r3, #19
 8005c42:	d417      	bmi.n	8005c74 <JPEG_DMAInCpltCallback+0x88>
 8005c44:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005c46:	b1ab      	cbz	r3, 8005c74 <JPEG_DMAInCpltCallback+0x88>
      if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005c48:	69a1      	ldr	r1, [r4, #24]
 8005c4a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8005c4c:	3240      	adds	r2, #64	@ 0x40
 8005c4e:	f7fe fb1b 	bl	8004288 <HAL_DMA_Start_IT>
 8005c52:	b150      	cbz	r0, 8005c6a <JPEG_DMAInCpltCallback+0x7e>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005c54:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        HAL_JPEG_ErrorCallback(hjpeg);
 8005c56:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005c58:	f043 0304 	orr.w	r3, r3, #4
 8005c5c:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005c5e:	2306      	movs	r3, #6
 8005c60:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
 8005c64:	f7fb ff16 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 8005c68:	bd70      	pop	{r4, r5, r6, pc}
      JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005c6a:	6822      	ldr	r2, [r4, #0]
 8005c6c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005c6e:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8005c72:	6313      	str	r3, [r2, #48]	@ 0x30
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 8005c74:	6822      	ldr	r2, [r4, #0]
 8005c76:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005c78:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8005c7c:	6313      	str	r3, [r2, #48]	@ 0x30
 8005c7e:	e7f3      	b.n	8005c68 <JPEG_DMAInCpltCallback+0x7c>

08005c80 <JPEG_StoreOutputData>:
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005c80:	6a42      	ldr	r2, [r0, #36]	@ 0x24
{
 8005c82:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005c84:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8005c86:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8005c8a:	4293      	cmp	r3, r2
{
 8005c8c:	4604      	mov	r4, r0
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005c8e:	d32a      	bcc.n	8005ce6 <JPEG_StoreOutputData+0x66>
    for (index = 0; index < nbOutputWords; index++)
 8005c90:	2200      	movs	r2, #0
      dataword = hjpeg->Instance->DOR;
 8005c92:	6823      	ldr	r3, [r4, #0]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005c94:	69e5      	ldr	r5, [r4, #28]
      dataword = hjpeg->Instance->DOR;
 8005c96:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005c98:	6a60      	ldr	r0, [r4, #36]	@ 0x24
    for (index = 0; index < nbOutputWords; index++)
 8005c9a:	3201      	adds	r2, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005c9c:	542b      	strb	r3, [r5, r0]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005c9e:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005ca0:	69e0      	ldr	r0, [r4, #28]
    for (index = 0; index < nbOutputWords; index++)
 8005ca2:	4291      	cmp	r1, r2
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005ca4:	4428      	add	r0, r5
 8005ca6:	ea4f 2513 	mov.w	r5, r3, lsr #8
 8005caa:	7045      	strb	r5, [r0, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
 8005cac:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005cae:	69e0      	ldr	r0, [r4, #28]
 8005cb0:	4428      	add	r0, r5
 8005cb2:	ea4f 4513 	mov.w	r5, r3, lsr #16
 8005cb6:	7085      	strb	r5, [r0, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
 8005cb8:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005cba:	69e0      	ldr	r0, [r4, #28]
 8005cbc:	ea4f 6313 	mov.w	r3, r3, lsr #24
 8005cc0:	4428      	add	r0, r5
 8005cc2:	70c3      	strb	r3, [r0, #3]
      hjpeg->JpegOutCount += 4UL;
 8005cc4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005cc6:	f103 0304 	add.w	r3, r3, #4
 8005cca:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nbOutputWords; index++)
 8005ccc:	d1e1      	bne.n	8005c92 <JPEG_StoreOutputData+0x12>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
 8005cce:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005cd0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005cd2:	429a      	cmp	r2, r3
 8005cd4:	d106      	bne.n	8005ce4 <JPEG_StoreOutputData+0x64>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005cd6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005cd8:	69e1      	ldr	r1, [r4, #28]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005cda:	4620      	mov	r0, r4
 8005cdc:	f7fb fe3a 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005ce0:	2300      	movs	r3, #0
 8005ce2:	6263      	str	r3, [r4, #36]	@ 0x24
}
 8005ce4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
 8005ce6:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 8005ce8:	4293      	cmp	r3, r2
 8005cea:	d9fb      	bls.n	8005ce4 <JPEG_StoreOutputData+0x64>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
 8005cec:	6a42      	ldr	r2, [r0, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
 8005cee:	2000      	movs	r0, #0
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
 8005cf0:	1a9b      	subs	r3, r3, r2
 8005cf2:	089a      	lsrs	r2, r3, #2
    for (index = 0; index < nb_words; index++)
 8005cf4:	4290      	cmp	r0, r2
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005cf6:	69e1      	ldr	r1, [r4, #28]
    for (index = 0; index < nb_words; index++)
 8005cf8:	d105      	bne.n	8005d06 <JPEG_StoreOutputData+0x86>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
 8005cfa:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8005cfc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005cfe:	429f      	cmp	r7, r3
 8005d00:	d119      	bne.n	8005d36 <JPEG_StoreOutputData+0xb6>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005d02:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005d04:	e7e9      	b.n	8005cda <JPEG_StoreOutputData+0x5a>
      dataword = hjpeg->Instance->DOR;
 8005d06:	6823      	ldr	r3, [r4, #0]
    for (index = 0; index < nb_words; index++)
 8005d08:	3001      	adds	r0, #1
      dataword = hjpeg->Instance->DOR;
 8005d0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005d0c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d0e:	554b      	strb	r3, [r1, r5]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005d10:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d12:	69e1      	ldr	r1, [r4, #28]
 8005d14:	4429      	add	r1, r5
 8005d16:	0a1d      	lsrs	r5, r3, #8
 8005d18:	704d      	strb	r5, [r1, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
 8005d1a:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d1c:	69e1      	ldr	r1, [r4, #28]
 8005d1e:	4429      	add	r1, r5
 8005d20:	0c1d      	lsrs	r5, r3, #16
 8005d22:	708d      	strb	r5, [r1, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
 8005d24:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d26:	69e1      	ldr	r1, [r4, #28]
 8005d28:	0e1b      	lsrs	r3, r3, #24
 8005d2a:	4429      	add	r1, r5
 8005d2c:	70cb      	strb	r3, [r1, #3]
      hjpeg->JpegOutCount += 4UL;
 8005d2e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005d30:	3304      	adds	r3, #4
 8005d32:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
 8005d34:	e7de      	b.n	8005cf4 <JPEG_StoreOutputData+0x74>
      for (index = 0; index < nb_bytes; index++)
 8005d36:	2200      	movs	r2, #0
      dataword = hjpeg->Instance->DOR;
 8005d38:	6823      	ldr	r3, [r4, #0]
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
 8005d3a:	6a65      	ldr	r5, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
 8005d3c:	6c5e      	ldr	r6, [r3, #68]	@ 0x44
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
 8005d3e:	1b78      	subs	r0, r7, r5
      for (index = 0; index < nb_bytes; index++)
 8005d40:	4282      	cmp	r2, r0
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
 8005d42:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
 8005d44:	d114      	bne.n	8005d70 <JPEG_StoreOutputData+0xf0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005d46:	4620      	mov	r0, r4
 8005d48:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005d4a:	f7fb fe03 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005d4e:	2300      	movs	r3, #0
 8005d50:	6263      	str	r3, [r4, #36]	@ 0x24
      nb_bytes = 4UL - nb_bytes;
 8005d52:	1d2b      	adds	r3, r5, #4
 8005d54:	1bdb      	subs	r3, r3, r7
      for (index = nb_bytes; index < 4UL; index++)
 8005d56:	2b03      	cmp	r3, #3
 8005d58:	d8c4      	bhi.n	8005ce4 <JPEG_StoreOutputData+0x64>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
 8005d5a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005d5c:	00da      	lsls	r2, r3, #3
 8005d5e:	69e0      	ldr	r0, [r4, #28]
 8005d60:	fa26 f202 	lsr.w	r2, r6, r2
 8005d64:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
 8005d66:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
 8005d68:	3301      	adds	r3, #1
        hjpeg->JpegOutCount++;
 8005d6a:	3201      	adds	r2, #1
 8005d6c:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
 8005d6e:	e7f2      	b.n	8005d56 <JPEG_StoreOutputData+0xd6>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
 8005d70:	f002 0303 	and.w	r3, r2, #3
 8005d74:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
 8005d78:	00db      	lsls	r3, r3, #3
 8005d7a:	fa26 f303 	lsr.w	r3, r6, r3
 8005d7e:	f801 300c 	strb.w	r3, [r1, ip]
        hjpeg->JpegOutCount++;
 8005d82:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
 8005d84:	3201      	adds	r2, #1
        hjpeg->JpegOutCount++;
 8005d86:	3301      	adds	r3, #1
 8005d88:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
 8005d8a:	e7d9      	b.n	8005d40 <JPEG_StoreOutputData+0xc0>

08005d8c <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005d8c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8005d8e:	b510      	push	{r4, lr}
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005d90:	f003 0303 	and.w	r3, r3, #3
 8005d94:	2b02      	cmp	r3, #2
{
 8005d96:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005d98:	d114      	bne.n	8005dc4 <JPEG_Process+0x38>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
 8005d9a:	6803      	ldr	r3, [r0, #0]
 8005d9c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005d9e:	065b      	lsls	r3, r3, #25
 8005da0:	d510      	bpl.n	8005dc4 <JPEG_Process+0x38>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
 8005da2:	1d01      	adds	r1, r0, #4
 8005da4:	f7ff fd4c 	bl	8005840 <HAL_JPEG_GetInfo>
      hjpeg->Conf.ImageQuality = 0;
 8005da8:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 8005daa:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
 8005dac:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 8005dae:	f7fb fd87 	bl	80018c0 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
 8005db2:	6823      	ldr	r3, [r4, #0]
 8005db4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005db6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005dba:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
 8005dbc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005dbe:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005dc2:	639a      	str	r2, [r3, #56]	@ 0x38
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
 8005dc4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005dc6:	04d9      	lsls	r1, r3, #19
 8005dc8:	d407      	bmi.n	8005dda <JPEG_Process+0x4e>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
 8005dca:	6823      	ldr	r3, [r4, #0]
 8005dcc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005dce:	0792      	lsls	r2, r2, #30
 8005dd0:	d542      	bpl.n	8005e58 <JPEG_Process+0xcc>
      JPEG_ReadInputData(hjpeg, JPEG_FIFO_TH_SIZE);
 8005dd2:	2104      	movs	r1, #4
      JPEG_ReadInputData(hjpeg, 1);
 8005dd4:	4620      	mov	r0, r4
 8005dd6:	f7ff fe9f 	bl	8005b18 <JPEG_ReadInputData>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8005dda:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005ddc:	0499      	lsls	r1, r3, #18
 8005dde:	d407      	bmi.n	8005df0 <JPEG_Process+0x64>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
 8005de0:	6823      	ldr	r3, [r4, #0]
 8005de2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005de4:	0712      	lsls	r2, r2, #28
 8005de6:	d53c      	bpl.n	8005e62 <JPEG_Process+0xd6>
      JPEG_StoreOutputData(hjpeg, JPEG_FIFO_TH_SIZE);
 8005de8:	2104      	movs	r1, #4
      JPEG_StoreOutputData(hjpeg, 1);
 8005dea:	4620      	mov	r0, r4
 8005dec:	f7ff ff48 	bl	8005c80 <JPEG_StoreOutputData>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
 8005df0:	6823      	ldr	r3, [r4, #0]
 8005df2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005df4:	f002 0238 	and.w	r2, r2, #56	@ 0x38
 8005df8:	2a20      	cmp	r2, #32
 8005dfa:	d13a      	bne.n	8005e72 <JPEG_Process+0xe6>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005dfc:	681a      	ldr	r2, [r3, #0]
 8005dfe:	f022 0201 	bic.w	r2, r2, #1
 8005e02:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8005e04:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005e06:	f002 020c 	and.w	r2, r2, #12
 8005e0a:	2a08      	cmp	r2, #8
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005e0c:	bf02      	ittt	eq
 8005e0e:	6b1a      	ldreq	r2, [r3, #48]	@ 0x30
 8005e10:	f022 027e 	biceq.w	r2, r2, #126	@ 0x7e
 8005e14:	631a      	streq	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8005e16:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005e18:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8005e1c:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
 8005e1e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005e20:	b133      	cbz	r3, 8005e30 <JPEG_Process+0xa4>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005e22:	4620      	mov	r0, r4
 8005e24:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005e26:	69e1      	ldr	r1, [r4, #28]
 8005e28:	f7fb fd94 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005e2c:	2300      	movs	r3, #0
 8005e2e:	6263      	str	r3, [r4, #36]	@ 0x24
    tmpContext = hjpeg->Context;
 8005e30:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005e32:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005e34:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005e38:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 8005e3c:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 8005e3e:	2200      	movs	r2, #0
 8005e40:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005e44:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005e46:	2b02      	cmp	r3, #2
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005e48:	4620      	mov	r0, r4
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005e4a:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005e4e:	d10d      	bne.n	8005e6c <JPEG_Process+0xe0>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005e50:	f7fb fe22 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
 8005e54:	2001      	movs	r0, #1
}
 8005e56:	bd10      	pop	{r4, pc}
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
 8005e58:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005e5a:	0758      	lsls	r0, r3, #29
 8005e5c:	d5bd      	bpl.n	8005dda <JPEG_Process+0x4e>
      JPEG_ReadInputData(hjpeg, 1);
 8005e5e:	2101      	movs	r1, #1
 8005e60:	e7b8      	b.n	8005dd4 <JPEG_Process+0x48>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8005e62:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005e64:	06db      	lsls	r3, r3, #27
 8005e66:	d5c3      	bpl.n	8005df0 <JPEG_Process+0x64>
      JPEG_StoreOutputData(hjpeg, 1);
 8005e68:	2101      	movs	r1, #1
 8005e6a:	e7be      	b.n	8005dea <JPEG_Process+0x5e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 8005e6c:	f7ff fe36 	bl	8005adc <HAL_JPEG_EncodeCpltCallback>
 8005e70:	e7f0      	b.n	8005e54 <JPEG_Process+0xc8>
  return JPEG_PROCESS_ONGOING;
 8005e72:	2000      	movs	r0, #0
 8005e74:	e7ef      	b.n	8005e56 <JPEG_Process+0xca>

08005e76 <JPEG_DMA_PollResidualData>:
{
 8005e76:	b570      	push	{r4, r5, r6, lr}
 8005e78:	4604      	mov	r4, r0
 8005e7a:	2610      	movs	r6, #16
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8005e7c:	6d65      	ldr	r5, [r4, #84]	@ 0x54
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8005e7e:	6823      	ldr	r3, [r4, #0]
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8005e80:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
 8005e84:	d122      	bne.n	8005ecc <JPEG_DMA_PollResidualData+0x56>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8005e86:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005e88:	06d0      	lsls	r0, r2, #27
 8005e8a:	d51f      	bpl.n	8005ecc <JPEG_DMA_PollResidualData+0x56>
        dataOut = hjpeg->Instance->DOR;
 8005e8c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
 8005e8e:	69e1      	ldr	r1, [r4, #28]
 8005e90:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005e92:	548b      	strb	r3, [r1, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
 8005e94:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005e96:	69e2      	ldr	r2, [r4, #28]
 8005e98:	440a      	add	r2, r1
 8005e9a:	0a19      	lsrs	r1, r3, #8
 8005e9c:	7051      	strb	r1, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
 8005e9e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005ea0:	69e2      	ldr	r2, [r4, #28]
 8005ea2:	440a      	add	r2, r1
 8005ea4:	0c19      	lsrs	r1, r3, #16
 8005ea6:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
 8005ea8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005eaa:	69e2      	ldr	r2, [r4, #28]
 8005eac:	0e1b      	lsrs	r3, r3, #24
 8005eae:	440a      	add	r2, r1
 8005eb0:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
 8005eb2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005eb4:	3304      	adds	r3, #4
 8005eb6:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
 8005eb8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005eba:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8005ebc:	429a      	cmp	r2, r3
 8005ebe:	d105      	bne.n	8005ecc <JPEG_DMA_PollResidualData+0x56>
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005ec0:	4620      	mov	r0, r4
 8005ec2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005ec4:	69e1      	ldr	r1, [r4, #28]
 8005ec6:	f7fb fd45 	bl	8001954 <HAL_JPEG_DataReadyCallback>
          hjpeg->JpegOutCount = 0;
 8005eca:	6265      	str	r5, [r4, #36]	@ 0x24
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
 8005ecc:	3e01      	subs	r6, #1
 8005ece:	d1d5      	bne.n	8005e7c <JPEG_DMA_PollResidualData+0x6>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
 8005ed0:	6823      	ldr	r3, [r4, #0]
  tmpContext = hjpeg->Context;
 8005ed2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
 8005ed4:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8005ed6:	06c9      	lsls	r1, r1, #27
 8005ed8:	d501      	bpl.n	8005ede <JPEG_DMA_PollResidualData+0x68>
 8005eda:	0492      	lsls	r2, r2, #18
 8005edc:	d41e      	bmi.n	8005f1c <JPEG_DMA_PollResidualData+0xa6>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005ede:	681a      	ldr	r2, [r3, #0]
 8005ee0:	f022 0201 	bic.w	r2, r2, #1
 8005ee4:	601a      	str	r2, [r3, #0]
    if (hjpeg->JpegOutCount > 0UL)
 8005ee6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005ee8:	b133      	cbz	r3, 8005ef8 <JPEG_DMA_PollResidualData+0x82>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005eea:	4620      	mov	r0, r4
 8005eec:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005eee:	69e1      	ldr	r1, [r4, #28]
 8005ef0:	f7fb fd30 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005ef4:	2300      	movs	r3, #0
 8005ef6:	6263      	str	r3, [r4, #36]	@ 0x24
    tmpContext = hjpeg->Context;
 8005ef8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005efa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005efc:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005f00:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 8005f04:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 8005f06:	2200      	movs	r2, #0
 8005f08:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005f0c:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005f0e:	2b02      	cmp	r3, #2
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005f10:	4620      	mov	r0, r4
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005f12:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005f16:	d102      	bne.n	8005f1e <JPEG_DMA_PollResidualData+0xa8>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005f18:	f7fb fdbe 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
}
 8005f1c:	bd70      	pop	{r4, r5, r6, pc}
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 8005f1e:	f7ff fddd 	bl	8005adc <HAL_JPEG_EncodeCpltCallback>
}
 8005f22:	e7fb      	b.n	8005f1c <JPEG_DMA_PollResidualData+0xa6>

08005f24 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8005f24:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8005f26:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8005f28:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
{
 8005f2c:	4604      	mov	r4, r0
 8005f2e:	460d      	mov	r5, r1
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8005f30:	d033      	beq.n	8005f9a <HAL_JPEG_Resume+0x76>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8005f32:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005f34:	f003 030c 	and.w	r3, r3, #12
 8005f38:	2b0c      	cmp	r3, #12
 8005f3a:	d13c      	bne.n	8005fb6 <HAL_JPEG_Resume+0x92>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8005f3c:	f011 0601 	ands.w	r6, r1, #1
 8005f40:	d00a      	beq.n	8005f58 <HAL_JPEG_Resume+0x34>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
 8005f42:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005f44:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005f48:	6543      	str	r3, [r0, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 8005f4a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8005f4c:	f023 0303 	bic.w	r3, r3, #3
 8005f50:	6283      	str	r3, [r0, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
 8005f52:	b99b      	cbnz	r3, 8005f7c <HAL_JPEG_Resume+0x58>
      mask |= JPEG_DMA_IDMA;
 8005f54:	f44f 6600 	mov.w	r6, #2048	@ 0x800
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8005f58:	07a8      	lsls	r0, r5, #30
 8005f5a:	d509      	bpl.n	8005f70 <HAL_JPEG_Resume+0x4c>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 8005f5c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005f5e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005f62:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
 8005f64:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005f66:	0419      	lsls	r1, r3, #16
 8005f68:	d519      	bpl.n	8005f9e <HAL_JPEG_Resume+0x7a>
        JPEG_DMA_PollResidualData(hjpeg);
 8005f6a:	4620      	mov	r0, r4
 8005f6c:	f7ff ff83 	bl	8005e76 <JPEG_DMA_PollResidualData>
    JPEG_ENABLE_DMA(hjpeg, mask);
 8005f70:	6822      	ldr	r2, [r4, #0]
 8005f72:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005f74:	4333      	orrs	r3, r6
 8005f76:	6313      	str	r3, [r2, #48]	@ 0x30
  return HAL_OK;
 8005f78:	2000      	movs	r0, #0
}
 8005f7a:	bd70      	pop	{r4, r5, r6, pc}
        if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005f7c:	6802      	ldr	r2, [r0, #0]
 8005f7e:	6981      	ldr	r1, [r0, #24]
 8005f80:	3240      	adds	r2, #64	@ 0x40
 8005f82:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8005f84:	f7fe f980 	bl	8004288 <HAL_DMA_Start_IT>
 8005f88:	2800      	cmp	r0, #0
 8005f8a:	d0e3      	beq.n	8005f54 <HAL_JPEG_Resume+0x30>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005f8c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005f8e:	f043 0304 	orr.w	r3, r3, #4
 8005f92:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005f94:	2306      	movs	r3, #6
 8005f96:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
 8005f9a:	2001      	movs	r0, #1
 8005f9c:	e7ed      	b.n	8005f7a <HAL_JPEG_Resume+0x56>
        if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 8005f9e:	6821      	ldr	r1, [r4, #0]
 8005fa0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8005fa2:	69e2      	ldr	r2, [r4, #28]
 8005fa4:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8005fa6:	3144      	adds	r1, #68	@ 0x44
 8005fa8:	f7fe f96e 	bl	8004288 <HAL_DMA_Start_IT>
 8005fac:	2800      	cmp	r0, #0
 8005fae:	d1ed      	bne.n	8005f8c <HAL_JPEG_Resume+0x68>
        mask |= JPEG_DMA_ODMA;
 8005fb0:	f446 5680 	orr.w	r6, r6, #4096	@ 0x1000
 8005fb4:	e7dc      	b.n	8005f70 <HAL_JPEG_Resume+0x4c>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8005fb6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005fb8:	f003 030c 	and.w	r3, r3, #12
 8005fbc:	2b08      	cmp	r3, #8
 8005fbe:	d1db      	bne.n	8005f78 <HAL_JPEG_Resume+0x54>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8005fc0:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
 8005fc4:	bf1f      	itttt	ne
 8005fc6:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 8005fc8:	f423 5380 	bicne.w	r3, r3, #4096	@ 0x1000
 8005fcc:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
 8005fce:	2306      	movne	r3, #6
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8005fd0:	078a      	lsls	r2, r1, #30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 8005fd2:	bf48      	it	mi
 8005fd4:	6d42      	ldrmi	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 8005fd6:	6801      	ldr	r1, [r0, #0]
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 8005fd8:	bf44      	itt	mi
 8005fda:	f422 5200 	bicmi.w	r2, r2, #8192	@ 0x2000
 8005fde:	6542      	strmi	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 8005fe0:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 8005fe2:	bf48      	it	mi
 8005fe4:	f043 0328 	orrmi.w	r3, r3, #40	@ 0x28
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 8005fe8:	4313      	orrs	r3, r2
 8005fea:	630b      	str	r3, [r1, #48]	@ 0x30
 8005fec:	e7c4      	b.n	8005f78 <HAL_JPEG_Resume+0x54>

08005fee <JPEG_DMA_EndProcess>:
{
 8005fee:	b570      	push	{r4, r5, r6, lr}
 8005ff0:	4604      	mov	r4, r0
  hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hjpeg->hdmaout);
 8005ff2:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
 8005ff4:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8005ff6:	6803      	ldr	r3, [r0, #0]
 8005ff8:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 8005ffa:	f7fe fc0b 	bl	8004814 <HAL_DMAEx_GetFifoLevel>
 8005ffe:	b2b6      	uxth	r6, r6
 8006000:	1bad      	subs	r5, r5, r6
 8006002:	1a2d      	subs	r5, r5, r0
 8006004:	6265      	str	r5, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
 8006006:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006008:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800600a:	429a      	cmp	r2, r3
 800600c:	d106      	bne.n	800601c <JPEG_DMA_EndProcess+0x2e>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 800600e:	4620      	mov	r0, r4
 8006010:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006012:	69e1      	ldr	r1, [r4, #28]
 8006014:	f7fb fc9e 	bl	8001954 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
 8006018:	2300      	movs	r3, #0
 800601a:	6263      	str	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
 800601c:	6823      	ldr	r3, [r4, #0]
 800601e:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
 8006020:	f015 0510 	ands.w	r5, r5, #16
 8006024:	d122      	bne.n	800606c <JPEG_DMA_EndProcess+0x7e>
    if (hjpeg->JpegOutCount > 0UL)
 8006026:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006028:	b12b      	cbz	r3, 8006036 <JPEG_DMA_EndProcess+0x48>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 800602a:	4620      	mov	r0, r4
 800602c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800602e:	69e1      	ldr	r1, [r4, #28]
 8006030:	f7fb fc90 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8006034:	6265      	str	r5, [r4, #36]	@ 0x24
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8006036:	6822      	ldr	r2, [r4, #0]
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8006038:	4620      	mov	r0, r4
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 800603a:	6813      	ldr	r3, [r2, #0]
 800603c:	f023 0301 	bic.w	r3, r3, #1
 8006040:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
 8006042:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8006044:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006046:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 800604a:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 800604e:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 8006050:	2200      	movs	r2, #0
 8006052:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 8006056:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006058:	2b02      	cmp	r3, #2
    hjpeg->State = HAL_JPEG_STATE_READY;
 800605a:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 800605e:	d102      	bne.n	8006066 <JPEG_DMA_EndProcess+0x78>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8006060:	f7fb fd1a 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
}
 8006064:	bd70      	pop	{r4, r5, r6, pc}
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 8006066:	f7ff fd39 	bl	8005adc <HAL_JPEG_EncodeCpltCallback>
 800606a:	e7fb      	b.n	8006064 <JPEG_DMA_EndProcess+0x76>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 800606c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800606e:	049b      	lsls	r3, r3, #18
 8006070:	d4f8      	bmi.n	8006064 <JPEG_DMA_EndProcess+0x76>
    JPEG_DMA_PollResidualData(hjpeg);
 8006072:	4620      	mov	r0, r4
}
 8006074:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    JPEG_DMA_PollResidualData(hjpeg);
 8006078:	f7ff befd 	b.w	8005e76 <JPEG_DMA_PollResidualData>

0800607c <JPEG_DMAOutAbortCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800607c:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
 800607e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006080:	041b      	lsls	r3, r3, #16
 8006082:	d501      	bpl.n	8006088 <JPEG_DMAOutAbortCallback+0xc>
    JPEG_DMA_EndProcess(hjpeg);
 8006084:	f7ff bfb3 	b.w	8005fee <JPEG_DMA_EndProcess>
}
 8006088:	4770      	bx	lr

0800608a <JPEG_DMAOutCpltCallback>:
{
 800608a:	b570      	push	{r4, r5, r6, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800608c:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 800608e:	6823      	ldr	r3, [r4, #0]
 8006090:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8006092:	f021 017e 	bic.w	r1, r1, #126	@ 0x7e
 8006096:	6319      	str	r1, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
 8006098:	6d61      	ldr	r1, [r4, #84]	@ 0x54
 800609a:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 800609e:	f021 0173 	bic.w	r1, r1, #115	@ 0x73
 80060a2:	0409      	lsls	r1, r1, #16
 80060a4:	0c09      	lsrs	r1, r1, #16
 80060a6:	290c      	cmp	r1, #12
 80060a8:	d129      	bne.n	80060fe <JPEG_DMAOutCpltCallback+0x74>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
 80060aa:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80060ac:	0689      	lsls	r1, r1, #26
 80060ae:	d42c      	bmi.n	800610a <JPEG_DMAOutCpltCallback+0x80>
      JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 80060b0:	6b19      	ldr	r1, [r3, #48]	@ 0x30
      hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 80060b2:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
      JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 80060b4:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
 80060b8:	6319      	str	r1, [r3, #48]	@ 0x30
      hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 80060ba:	6803      	ldr	r3, [r0, #0]
 80060bc:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 80060be:	f7fe fba9 	bl	8004814 <HAL_DMAEx_GetFifoLevel>
 80060c2:	b2b6      	uxth	r6, r6
 80060c4:	1bad      	subs	r5, r5, r6
 80060c6:	1a2d      	subs	r5, r5, r0
 80060c8:	6265      	str	r5, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 80060ca:	4620      	mov	r0, r4
 80060cc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80060ce:	69e1      	ldr	r1, [r4, #28]
 80060d0:	f7fb fc40 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 80060d4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80060d6:	049b      	lsls	r3, r3, #18
 80060d8:	d417      	bmi.n	800610a <JPEG_DMAOutCpltCallback+0x80>
        if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 80060da:	6821      	ldr	r1, [r4, #0]
 80060dc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80060de:	69e2      	ldr	r2, [r4, #28]
 80060e0:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80060e2:	3144      	adds	r1, #68	@ 0x44
 80060e4:	f7fe f8d0 	bl	8004288 <HAL_DMA_Start_IT>
 80060e8:	b150      	cbz	r0, 8006100 <JPEG_DMAOutCpltCallback+0x76>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 80060ea:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          HAL_JPEG_ErrorCallback(hjpeg);
 80060ec:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 80060ee:	f043 0304 	orr.w	r3, r3, #4
 80060f2:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
 80060f4:	2306      	movs	r3, #6
 80060f6:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
 80060fa:	f7fb fccb 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 80060fe:	bd70      	pop	{r4, r5, r6, pc}
        JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 8006100:	6822      	ldr	r2, [r4, #0]
 8006102:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8006104:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8006108:	6313      	str	r3, [r2, #48]	@ 0x30
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 800610a:	6822      	ldr	r2, [r4, #0]
 800610c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 800610e:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8006112:	6313      	str	r3, [r2, #48]	@ 0x30
 8006114:	e7f3      	b.n	80060fe <JPEG_DMAOutCpltCallback+0x74>

08006116 <HAL_JPEG_IRQHandler>:
{
 8006116:	b510      	push	{r4, lr}
  switch (hjpeg->State)
 8006118:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
{
 800611c:	4604      	mov	r4, r0
  switch (hjpeg->State)
 800611e:	3b03      	subs	r3, #3
 8006120:	2b01      	cmp	r3, #1
 8006122:	d852      	bhi.n	80061ca <HAL_JPEG_IRQHandler+0xb4>
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8006124:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006126:	f003 030c 	and.w	r3, r3, #12
 800612a:	2b08      	cmp	r3, #8
 800612c:	d103      	bne.n	8006136 <HAL_JPEG_IRQHandler+0x20>
}
 800612e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        (void) JPEG_Process(hjpeg);
 8006132:	f7ff be2b 	b.w	8005d8c <JPEG_Process>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8006136:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006138:	f003 030c 	and.w	r3, r3, #12
 800613c:	2b0c      	cmp	r3, #12
 800613e:	d144      	bne.n	80061ca <HAL_JPEG_IRQHandler+0xb4>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8006140:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006142:	f003 0303 	and.w	r3, r3, #3
 8006146:	2b02      	cmp	r3, #2
 8006148:	d114      	bne.n	8006174 <HAL_JPEG_IRQHandler+0x5e>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
 800614a:	6803      	ldr	r3, [r0, #0]
 800614c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800614e:	0659      	lsls	r1, r3, #25
 8006150:	d510      	bpl.n	8006174 <HAL_JPEG_IRQHandler+0x5e>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
 8006152:	1d01      	adds	r1, r0, #4
 8006154:	f7ff fb74 	bl	8005840 <HAL_JPEG_GetInfo>
      hjpeg->Conf.ImageQuality = 0;
 8006158:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 800615a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
 800615c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 800615e:	f7fb fbaf 	bl	80018c0 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
 8006162:	6823      	ldr	r3, [r4, #0]
 8006164:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006166:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800616a:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
 800616c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800616e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006172:	639a      	str	r2, [r3, #56]	@ 0x38
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
 8006174:	6823      	ldr	r3, [r4, #0]
 8006176:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006178:	0692      	lsls	r2, r2, #26
 800617a:	d526      	bpl.n	80061ca <HAL_JPEG_IRQHandler+0xb4>
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 800617c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    if (hjpeg->hdmain->State == HAL_DMA_STATE_BUSY)
 800617e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 8006180:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 8006184:	631a      	str	r2, [r3, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
 8006186:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8006188:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800618c:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 800618e:	681a      	ldr	r2, [r3, #0]
 8006190:	f022 0201 	bic.w	r2, r2, #1
 8006194:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8006196:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006198:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 800619c:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 800619e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80061a0:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 80061a4:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_DMA_STATE_BUSY)
 80061a6:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 80061aa:	2b02      	cmp	r3, #2
 80061ac:	d101      	bne.n	80061b2 <HAL_JPEG_IRQHandler+0x9c>
      (void) HAL_DMA_Abort(hjpeg->hdmain);
 80061ae:	f7fe f8a9 	bl	8004304 <HAL_DMA_Abort>
    if (hjpeg->hdmaout->State == HAL_DMA_STATE_BUSY)
 80061b2:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80061b4:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 80061b8:	2b02      	cmp	r3, #2
 80061ba:	d101      	bne.n	80061c0 <HAL_JPEG_IRQHandler+0xaa>
      (void) HAL_DMA_Abort(hjpeg->hdmaout);
 80061bc:	f7fe f8a2 	bl	8004304 <HAL_DMA_Abort>
    JPEG_DMA_EndProcess(hjpeg);
 80061c0:	4620      	mov	r0, r4
}
 80061c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    JPEG_DMA_EndProcess(hjpeg);
 80061c6:	f7ff bf12 	b.w	8005fee <JPEG_DMA_EndProcess>
}
 80061ca:	bd10      	pop	{r4, pc}

080061cc <HAL_JPEG_GetState>:
  return hjpeg->State;
 80061cc:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
 80061d0:	4770      	bx	lr

080061d2 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80061d2:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80061d4:	01d2      	lsls	r2, r2, #7
 80061d6:	3284      	adds	r2, #132	@ 0x84
 80061d8:	1883      	adds	r3, r0, r2
{
 80061da:	b5f0      	push	{r4, r5, r6, r7, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80061dc:	68c7      	ldr	r7, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80061de:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80061e0:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80061e2:	f005 25f0 	and.w	r5, r5, #4026593280	@ 0xf000f000
 80061e6:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80061e8:	68c5      	ldr	r5, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80061ea:	680e      	ldr	r6, [r1, #0]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80061ec:	f3c5 450b 	ubfx	r5, r5, #16, #12
 80061f0:	f106 0c01 	add.w	ip, r6, #1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80061f4:	f3c7 470b 	ubfx	r7, r7, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80061f8:	4465      	add	r5, ip
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80061fa:	4427      	add	r7, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80061fc:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006200:	605d      	str	r5, [r3, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006202:	68c7      	ldr	r7, [r0, #12]
 8006204:	68cd      	ldr	r5, [r1, #12]
 8006206:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800620a:	442f      	add	r7, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800620c:	689d      	ldr	r5, [r3, #8]
 800620e:	f005 25f0 	and.w	r5, r5, #4026593280	@ 0xf000f000
 8006212:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006214:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8006218:	688d      	ldr	r5, [r1, #8]
 800621a:	f3cc 0c0a 	ubfx	ip, ip, #0, #11
 800621e:	3501      	adds	r5, #1
 8006220:	4465      	add	r5, ip
 8006222:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006226:	609d      	str	r5, [r3, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006228:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800622a:	f8d1 c010 	ldr.w	ip, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800622e:	f025 0507 	bic.w	r5, r5, #7
 8006232:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006234:	f8c3 c010 	str.w	ip, [r3, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006238:	698f      	ldr	r7, [r1, #24]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 800623a:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 800623e:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006242:	f891 7031 	ldrb.w	r7, [r1, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 8006246:	ea45 2507 	orr.w	r5, r5, r7, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800624a:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 800624e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006252:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006254:	695d      	ldr	r5, [r3, #20]
 8006256:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 800625a:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800625c:	694d      	ldr	r5, [r1, #20]
 800625e:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006260:	69dd      	ldr	r5, [r3, #28]
 8006262:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8006266:	f025 0507 	bic.w	r5, r5, #7
 800626a:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800626c:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006270:	433d      	orrs	r5, r7
 8006272:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 8006274:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
 8006276:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006278:	f1bc 0f00 	cmp.w	ip, #0
 800627c:	d024      	beq.n	80062c8 <LTDC_SetConfig+0xf6>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800627e:	f1bc 0f01 	cmp.w	ip, #1
 8006282:	d023      	beq.n	80062cc <LTDC_SetConfig+0xfa>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006284:	f1ac 0502 	sub.w	r5, ip, #2
 8006288:	2d02      	cmp	r5, #2
 800628a:	d921      	bls.n	80062d0 <LTDC_SetConfig+0xfe>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 800628c:	f1bc 0f07 	cmp.w	ip, #7
 8006290:	bf14      	ite	ne
 8006292:	2501      	movne	r5, #1
 8006294:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006296:	6adf      	ldr	r7, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006298:	1ba4      	subs	r4, r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800629a:	f007 27e0 	and.w	r7, r7, #3758153728	@ 0xe000e000
 800629e:	62df      	str	r7, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80062a0:	6a8f      	ldr	r7, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80062a2:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80062a4:	436f      	muls	r7, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80062a6:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80062a8:	ea44 4407 	orr.w	r4, r4, r7, lsl #16
 80062ac:	62dc      	str	r4, [r3, #44]	@ 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80062ae:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80062b0:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80062b2:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 80062b6:	f024 0407 	bic.w	r4, r4, #7
 80062ba:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80062bc:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80062be:	5883      	ldr	r3, [r0, r2]
 80062c0:	f043 0301 	orr.w	r3, r3, #1
 80062c4:	5083      	str	r3, [r0, r2]
}
 80062c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmp = 4U;
 80062c8:	2504      	movs	r5, #4
 80062ca:	e7e4      	b.n	8006296 <LTDC_SetConfig+0xc4>
    tmp = 3U;
 80062cc:	2503      	movs	r5, #3
 80062ce:	e7e2      	b.n	8006296 <LTDC_SetConfig+0xc4>
    tmp = 2U;
 80062d0:	2502      	movs	r5, #2
 80062d2:	e7e0      	b.n	8006296 <LTDC_SetConfig+0xc4>

080062d4 <HAL_LTDC_Init>:
{
 80062d4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80062d6:	4604      	mov	r4, r0
 80062d8:	2800      	cmp	r0, #0
 80062da:	d063      	beq.n	80063a4 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80062dc:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 80062e0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80062e4:	b91b      	cbnz	r3, 80062ee <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80062e6:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 80062ea:	f7fa fc85 	bl	8000bf8 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80062ee:	2302      	movs	r3, #2
 80062f0:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80062f4:	6823      	ldr	r3, [r4, #0]
 80062f6:	699a      	ldr	r2, [r3, #24]
 80062f8:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 80062fc:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80062fe:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8006302:	4302      	orrs	r2, r0
 8006304:	68e0      	ldr	r0, [r4, #12]
 8006306:	6999      	ldr	r1, [r3, #24]
 8006308:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800630a:	6920      	ldr	r0, [r4, #16]
 800630c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800630e:	430a      	orrs	r2, r1
 8006310:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006312:	689a      	ldr	r2, [r3, #8]
 8006314:	4924      	ldr	r1, [pc, #144]	@ (80063a8 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006316:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006318:	400a      	ands	r2, r1
 800631a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800631c:	689a      	ldr	r2, [r3, #8]
 800631e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006322:	69a0      	ldr	r0, [r4, #24]
 8006324:	4302      	orrs	r2, r0
 8006326:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006328:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800632a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800632c:	400a      	ands	r2, r1
 800632e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006330:	68da      	ldr	r2, [r3, #12]
 8006332:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006336:	6a20      	ldr	r0, [r4, #32]
 8006338:	4302      	orrs	r2, r0
 800633a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800633c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800633e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006340:	400a      	ands	r2, r1
 8006342:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8006344:	691a      	ldr	r2, [r3, #16]
 8006346:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800634a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800634c:	4302      	orrs	r2, r0
 800634e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006350:	695a      	ldr	r2, [r3, #20]
 8006352:	400a      	ands	r2, r1
 8006354:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006356:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8006358:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800635a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800635e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8006360:	430a      	orrs	r2, r1
 8006362:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006364:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8006366:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800636a:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800636e:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006372:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8006374:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8006376:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 800637a:	432a      	orrs	r2, r5
 800637c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8006380:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8006384:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8006386:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006388:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800638a:	f042 0206 	orr.w	r2, r2, #6
 800638e:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8006390:	699a      	ldr	r2, [r3, #24]
 8006392:	f042 0201 	orr.w	r2, r2, #1
 8006396:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8006398:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800639a:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800639e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 80063a2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80063a4:	2001      	movs	r0, #1
 80063a6:	e7fc      	b.n	80063a2 <HAL_LTDC_Init+0xce>
 80063a8:	f000f800 	.word	0xf000f800

080063ac <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 80063ac:	4770      	bx	lr

080063ae <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 80063ae:	4770      	bx	lr

080063b0 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80063b0:	6803      	ldr	r3, [r0, #0]
{
 80063b2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80063b4:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
{
 80063b6:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80063b8:	0772      	lsls	r2, r6, #29
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80063ba:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80063bc:	d514      	bpl.n	80063e8 <HAL_LTDC_IRQHandler+0x38>
 80063be:	0769      	lsls	r1, r5, #29
 80063c0:	d512      	bpl.n	80063e8 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80063c2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80063c4:	f022 0204 	bic.w	r2, r2, #4
 80063c8:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80063ca:	2204      	movs	r2, #4
 80063cc:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80063ce:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 80063d2:	f043 0301 	orr.w	r3, r3, #1
 80063d6:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 80063da:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80063dc:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80063e0:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80063e4:	f7ff ffe2 	bl	80063ac <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80063e8:	07b2      	lsls	r2, r6, #30
 80063ea:	d516      	bpl.n	800641a <HAL_LTDC_IRQHandler+0x6a>
 80063ec:	07ab      	lsls	r3, r5, #30
 80063ee:	d514      	bpl.n	800641a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80063f0:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 80063f2:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80063f4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80063f6:	f022 0202 	bic.w	r2, r2, #2
 80063fa:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80063fc:	2202      	movs	r2, #2
 80063fe:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8006400:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8006404:	4313      	orrs	r3, r2
 8006406:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800640a:	2304      	movs	r3, #4
 800640c:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006410:	2300      	movs	r3, #0
 8006412:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006416:	f7ff ffc9 	bl	80063ac <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800641a:	07f0      	lsls	r0, r6, #31
 800641c:	d510      	bpl.n	8006440 <HAL_LTDC_IRQHandler+0x90>
 800641e:	07e9      	lsls	r1, r5, #31
 8006420:	d50e      	bpl.n	8006440 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006422:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 8006424:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006426:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006428:	f022 0201 	bic.w	r2, r2, #1
 800642c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800642e:	2201      	movs	r2, #1
 8006430:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8006432:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8006434:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006438:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800643c:	f7fc fc06 	bl	8002c4c <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8006440:	0732      	lsls	r2, r6, #28
 8006442:	d511      	bpl.n	8006468 <HAL_LTDC_IRQHandler+0xb8>
 8006444:	072b      	lsls	r3, r5, #28
 8006446:	d50f      	bpl.n	8006468 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006448:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 800644a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800644c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800644e:	f022 0208 	bic.w	r2, r2, #8
 8006452:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8006454:	2208      	movs	r2, #8
 8006456:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8006458:	2301      	movs	r3, #1
 800645a:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800645e:	2300      	movs	r3, #0
 8006460:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8006464:	f7ff ffa3 	bl	80063ae <HAL_LTDC_ReloadEventCallback>
}
 8006468:	bd70      	pop	{r4, r5, r6, pc}

0800646a <HAL_LTDC_ConfigLayer>:
{
 800646a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800646e:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
 8006472:	4606      	mov	r6, r0
  __HAL_LOCK(hltdc);
 8006474:	2b01      	cmp	r3, #1
{
 8006476:	460f      	mov	r7, r1
 8006478:	4694      	mov	ip, r2
 800647a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800647e:	d01f      	beq.n	80064c0 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006480:	2434      	movs	r4, #52	@ 0x34
  __HAL_LOCK(hltdc);
 8006482:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006486:	460d      	mov	r5, r1
 8006488:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 800648c:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006490:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006494:	3438      	adds	r4, #56	@ 0x38
 8006496:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006498:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800649a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800649c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800649e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80064a0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80064a2:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80064a4:	4630      	mov	r0, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80064a6:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80064a8:	4662      	mov	r2, ip
 80064aa:	4639      	mov	r1, r7
 80064ac:	f7ff fe91 	bl	80061d2 <LTDC_SetConfig>
  __HAL_UNLOCK(hltdc);
 80064b0:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80064b2:	6833      	ldr	r3, [r6, #0]
 80064b4:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80064b8:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 80064bc:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 80064c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080064c4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80064c4:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
{
 80064c8:	4603      	mov	r3, r0
  __HAL_LOCK(hltdc);
 80064ca:	2a01      	cmp	r2, #1
 80064cc:	f04f 0002 	mov.w	r0, #2
 80064d0:	d012      	beq.n	80064f8 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80064d2:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80064d4:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80064d8:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 80064da:	f020 0001 	bic.w	r0, r0, #1
 80064de:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80064e0:	4806      	ldr	r0, [pc, #24]	@ (80064fc <HAL_LTDC_ProgramLineEvent+0x38>)
 80064e2:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80064e4:	6b51      	ldr	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 80064e6:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80064e8:	f041 0101 	orr.w	r1, r1, #1
 80064ec:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80064ee:	2201      	movs	r2, #1
  __HAL_UNLOCK(hltdc);
 80064f0:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_READY;
 80064f4:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
}
 80064f8:	4770      	bx	lr
 80064fa:	bf00      	nop
 80064fc:	40016800 	.word	0x40016800

08006500 <HAL_PWREx_ControlVoltageScaling>:

  /* Check the parameter */
  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  /* Get the current voltage scale applied */
  vos_old = READ_BIT(PWR->SVMSR, PWR_SVMSR_ACTVOS);
 8006500:	4b1d      	ldr	r3, [pc, #116]	@ (8006578 <HAL_PWREx_ControlVoltageScaling+0x78>)
 8006502:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8006504:	f402 3240 	and.w	r2, r2, #196608	@ 0x30000

  /* No change, nothing to do */
  if (vos_old == VoltageScaling)
 8006508:	4282      	cmp	r2, r0
 800650a:	d108      	bne.n	800651e <HAL_PWREx_ControlVoltageScaling+0x1e>
  {
    /* Enable USB BOOST after wake up from Stop mode */
    if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 800650c:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8006510:	d903      	bls.n	800651a <HAL_PWREx_ControlVoltageScaling+0x1a>
    {
      /* Enable USB BOOST */
      SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8006512:	68da      	ldr	r2, [r3, #12]
 8006514:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8006518:	60da      	str	r2, [r3, #12]
    }

    return HAL_OK;
 800651a:	2000      	movs	r0, #0
 800651c:	4770      	bx	lr
   *  The Embedded power distribution (EPOD) must be enabled before switching to
   *  voltage scale 1 / 2 from voltage scale lower.
   */
  if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), (VoltageScaling | PWR_VOSR_BOOSTEN));
 800651e:	68da      	ldr	r2, [r3, #12]
  if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 8006520:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), (VoltageScaling | PWR_VOSR_BOOSTEN));
 8006524:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8006528:	ea42 0200 	orr.w	r2, r2, r0
 800652c:	bf88      	it	hi
 800652e:	f442 2280 	orrhi.w	r2, r2, #262144	@ 0x40000
  }
  else
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), VoltageScaling);
 8006532:	60da      	str	r2, [r3, #12]
  }

  /* Wait until VOSRDY is raised */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 8006534:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006538:	4b10      	ldr	r3, [pc, #64]	@ (800657c <HAL_PWREx_ControlVoltageScaling+0x7c>)
 800653a:	2132      	movs	r1, #50	@ 0x32
 800653c:	681b      	ldr	r3, [r3, #0]
 800653e:	fbb3 f3f2 	udiv	r3, r3, r2
 8006542:	434b      	muls	r3, r1
 8006544:	fbb3 f3f2 	udiv	r3, r3, r2
 8006548:	3301      	adds	r3, #1
 800654a:	461a      	mov	r2, r3
  while (HAL_IS_BIT_CLR(PWR->VOSR, PWR_VOSR_VOSRDY) && (timeout != 0U))
 800654c:	490a      	ldr	r1, [pc, #40]	@ (8006578 <HAL_PWREx_ControlVoltageScaling+0x78>)
 800654e:	68c8      	ldr	r0, [r1, #12]
 8006550:	0400      	lsls	r0, r0, #16
 8006552:	d404      	bmi.n	800655e <HAL_PWREx_ControlVoltageScaling+0x5e>
 8006554:	b90a      	cbnz	r2, 800655a <HAL_PWREx_ControlVoltageScaling+0x5a>
  }

  /* Check time out */
  if (timeout == 0U)
  {
    return HAL_TIMEOUT;
 8006556:	2003      	movs	r0, #3
  }

  return HAL_OK;
}
 8006558:	4770      	bx	lr
    timeout--;
 800655a:	3a01      	subs	r2, #1
 800655c:	e7f7      	b.n	800654e <HAL_PWREx_ControlVoltageScaling+0x4e>
  if (timeout != 0U)
 800655e:	2a00      	cmp	r2, #0
 8006560:	d0f9      	beq.n	8006556 <HAL_PWREx_ControlVoltageScaling+0x56>
    while ((HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_ACTVOSRDY)) && (timeout != 0U))
 8006562:	4a05      	ldr	r2, [pc, #20]	@ (8006578 <HAL_PWREx_ControlVoltageScaling+0x78>)
 8006564:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8006566:	0409      	lsls	r1, r1, #16
 8006568:	d403      	bmi.n	8006572 <HAL_PWREx_ControlVoltageScaling+0x72>
 800656a:	2b00      	cmp	r3, #0
 800656c:	d0f3      	beq.n	8006556 <HAL_PWREx_ControlVoltageScaling+0x56>
      timeout--;
 800656e:	3b01      	subs	r3, #1
 8006570:	e7f8      	b.n	8006564 <HAL_PWREx_ControlVoltageScaling+0x64>
  if (timeout == 0U)
 8006572:	2b00      	cmp	r3, #0
 8006574:	d1d1      	bne.n	800651a <HAL_PWREx_ControlVoltageScaling+0x1a>
 8006576:	e7ee      	b.n	8006556 <HAL_PWREx_ControlVoltageScaling+0x56>
 8006578:	46020800 	.word	0x46020800
 800657c:	2000004c 	.word	0x2000004c

08006580 <HAL_PWREx_GetVoltageRange>:
  * @brief  Return Voltage Scaling Range.
  * @retval Applied voltage scaling value.
  */
uint32_t HAL_PWREx_GetVoltageRange(void)
{
  return (PWR->SVMSR & PWR_SVMSR_ACTVOS);
 8006580:	4b02      	ldr	r3, [pc, #8]	@ (800658c <HAL_PWREx_GetVoltageRange+0xc>)
 8006582:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
}
 8006584:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
 8006588:	4770      	bx	lr
 800658a:	bf00      	nop
 800658c:	46020800 	.word	0x46020800

08006590 <HAL_PWREx_ConfigSupply>:

  /* Check the parameter */
  assert_param(IS_PWR_SUPPLY(SupplySource));

  /* Set maximum time out */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 8006590:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006594:	4b12      	ldr	r3, [pc, #72]	@ (80065e0 <HAL_PWREx_ConfigSupply+0x50>)
 8006596:	2132      	movs	r1, #50	@ 0x32
 8006598:	681b      	ldr	r3, [r3, #0]
 800659a:	fbb3 f3f2 	udiv	r3, r3, r2
 800659e:	434b      	muls	r3, r1
 80065a0:	fbb3 f3f2 	udiv	r3, r3, r2
 80065a4:	4a0f      	ldr	r2, [pc, #60]	@ (80065e4 <HAL_PWREx_ConfigSupply+0x54>)
 80065a6:	3301      	adds	r3, #1

  /* Configure the LDO as system regulator supply */
  if (SupplySource == PWR_LDO_SUPPLY)
  {
    /* Set the power supply configuration */
    CLEAR_BIT(PWR->CR3, PWR_CR3_REGSEL);
 80065a8:	6891      	ldr	r1, [r2, #8]
  if (SupplySource == PWR_LDO_SUPPLY)
 80065aa:	b950      	cbnz	r0, 80065c2 <HAL_PWREx_ConfigSupply+0x32>
    CLEAR_BIT(PWR->CR3, PWR_CR3_REGSEL);
 80065ac:	f021 0102 	bic.w	r1, r1, #2
 80065b0:	6091      	str	r1, [r2, #8]

    /* Wait until system switch on new regulator */
    while (HAL_IS_BIT_SET(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 80065b2:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 80065b4:	0788      	lsls	r0, r1, #30
 80065b6:	d50e      	bpl.n	80065d6 <HAL_PWREx_ConfigSupply+0x46>
 80065b8:	b90b      	cbnz	r3, 80065be <HAL_PWREx_ConfigSupply+0x2e>
  }

  /* Check time out */
  if (timeout == 0U)
  {
    return HAL_TIMEOUT;
 80065ba:	2003      	movs	r0, #3
 80065bc:	4770      	bx	lr
      timeout--;
 80065be:	3b01      	subs	r3, #1
 80065c0:	e7f7      	b.n	80065b2 <HAL_PWREx_ConfigSupply+0x22>
    SET_BIT(PWR->CR3, PWR_CR3_REGSEL);
 80065c2:	f041 0102 	orr.w	r1, r1, #2
 80065c6:	6091      	str	r1, [r2, #8]
    while (HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 80065c8:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 80065ca:	0789      	lsls	r1, r1, #30
 80065cc:	d403      	bmi.n	80065d6 <HAL_PWREx_ConfigSupply+0x46>
 80065ce:	2b00      	cmp	r3, #0
 80065d0:	d0f3      	beq.n	80065ba <HAL_PWREx_ConfigSupply+0x2a>
      timeout--;
 80065d2:	3b01      	subs	r3, #1
 80065d4:	e7f8      	b.n	80065c8 <HAL_PWREx_ConfigSupply+0x38>
  if (timeout == 0U)
 80065d6:	2b00      	cmp	r3, #0
 80065d8:	d0ef      	beq.n	80065ba <HAL_PWREx_ConfigSupply+0x2a>
  }

  return HAL_OK;
 80065da:	2000      	movs	r0, #0
}
 80065dc:	4770      	bx	lr
 80065de:	bf00      	nop
 80065e0:	2000004c 	.word	0x2000004c
 80065e4:	46020800 	.word	0x46020800

080065e8 <HAL_PWREx_DisableUCPDDeadBattery>:
  *         initialized before doing the disable).
  * @retval None.
  */
void HAL_PWREx_DisableUCPDDeadBattery(void)
{
  SET_BIT(PWR->UCPDR, PWR_UCPDR_UCPD_DBDIS);
 80065e8:	4a02      	ldr	r2, [pc, #8]	@ (80065f4 <HAL_PWREx_DisableUCPDDeadBattery+0xc>)
 80065ea:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
 80065ec:	f043 0301 	orr.w	r3, r3, #1
 80065f0:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 80065f2:	4770      	bx	lr
 80065f4:	46020800 	.word	0x46020800

080065f8 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_15
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 80065f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t vos;
  uint32_t latency;  /* default value 0WS */

  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 80065fa:	4d2b      	ldr	r5, [pc, #172]	@ (80066a8 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
{
 80065fc:	4604      	mov	r4, r0
  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 80065fe:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8006602:	075b      	lsls	r3, r3, #29
 8006604:	d518      	bpl.n	8006638 <RCC_SetFlashLatencyFromMSIRange+0x40>
  {
    vos = HAL_PWREx_GetVoltageRange();
 8006606:	f7ff ffbb 	bl	8006580 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_ENABLE();
    vos = HAL_PWREx_GetVoltageRange();
    __HAL_RCC_PWR_CLK_DISABLE();
  }

  if ((vos == PWR_REGULATOR_VOLTAGE_SCALE1) || (vos == PWR_REGULATOR_VOLTAGE_SCALE2))
 800660a:	f420 3380 	bic.w	r3, r0, #65536	@ 0x10000
 800660e:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006612:	d126      	bne.n	8006662 <RCC_SetFlashLatencyFromMSIRange+0x6a>
  {

    if (msirange < RCC_MSIRANGE_1)
 8006614:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 8006618:	bf2c      	ite	cs
 800661a:	2000      	movcs	r0, #0
 800661c:	2001      	movcc	r0, #1
        }
      }
    }
  }

  __HAL_FLASH_SET_LATENCY(latency);
 800661e:	4a23      	ldr	r2, [pc, #140]	@ (80066ac <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8006620:	6813      	ldr	r3, [r2, #0]
 8006622:	f023 030f 	bic.w	r3, r3, #15
 8006626:	4303      	orrs	r3, r0
 8006628:	6013      	str	r3, [r2, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
  memory by reading the FLASH_ACR register */
  if ((FLASH->ACR & FLASH_ACR_LATENCY) != latency)
 800662a:	6813      	ldr	r3, [r2, #0]
 800662c:	f003 030f 	and.w	r3, r3, #15
 8006630:	1a18      	subs	r0, r3, r0
 8006632:	bf18      	it	ne
 8006634:	2001      	movne	r0, #1
 8006636:	e01b      	b.n	8006670 <RCC_SetFlashLatencyFromMSIRange+0x78>
    __HAL_RCC_PWR_CLK_ENABLE();
 8006638:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800663c:	f043 0304 	orr.w	r3, r3, #4
 8006640:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8006644:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8006648:	f003 0304 	and.w	r3, r3, #4
 800664c:	9301      	str	r3, [sp, #4]
 800664e:	9b01      	ldr	r3, [sp, #4]
    vos = HAL_PWREx_GetVoltageRange();
 8006650:	f7ff ff96 	bl	8006580 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_DISABLE();
 8006654:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8006658:	f023 0304 	bic.w	r3, r3, #4
 800665c:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8006660:	e7d3      	b.n	800660a <RCC_SetFlashLatencyFromMSIRange+0x12>
    if (msirange < RCC_MSIRANGE_1)
 8006662:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 8006666:	d205      	bcs.n	8006674 <RCC_SetFlashLatencyFromMSIRange+0x7c>
      if (vos == PWR_REGULATOR_VOLTAGE_SCALE3)
 8006668:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800666c:	d015      	beq.n	800669a <RCC_SetFlashLatencyFromMSIRange+0xa2>
        return HAL_ERROR;
 800666e:	2001      	movs	r0, #1
  {
    return HAL_ERROR;
  }

  return HAL_OK;
}
 8006670:	b003      	add	sp, #12
 8006672:	bd30      	pop	{r4, r5, pc}
      if (msirange > RCC_MSIRANGE_2)
 8006674:	f1b4 5f00 	cmp.w	r4, #536870912	@ 0x20000000
 8006678:	d906      	bls.n	8006688 <RCC_SetFlashLatencyFromMSIRange+0x90>
        if (vos == PWR_REGULATOR_VOLTAGE_SCALE4)
 800667a:	b980      	cbnz	r0, 800669e <RCC_SetFlashLatencyFromMSIRange+0xa6>
          if (msirange > RCC_MSIRANGE_3)
 800667c:	f1b4 5f40 	cmp.w	r4, #805306368	@ 0x30000000
 8006680:	bf8c      	ite	hi
 8006682:	2000      	movhi	r0, #0
 8006684:	2001      	movls	r0, #1
 8006686:	e7ca      	b.n	800661e <RCC_SetFlashLatencyFromMSIRange+0x26>
        if (msirange == RCC_MSIRANGE_1)
 8006688:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 800668c:	d109      	bne.n	80066a2 <RCC_SetFlashLatencyFromMSIRange+0xaa>
          latency = FLASH_LATENCY_1; /* 1WS */
 800668e:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8006692:	bf14      	ite	ne
 8006694:	2002      	movne	r0, #2
 8006696:	2001      	moveq	r0, #1
 8006698:	e7c1      	b.n	800661e <RCC_SetFlashLatencyFromMSIRange+0x26>
        latency = FLASH_LATENCY_3; /* 3WS */
 800669a:	2003      	movs	r0, #3
 800669c:	e7bf      	b.n	800661e <RCC_SetFlashLatencyFromMSIRange+0x26>
      latency = FLASH_LATENCY_0; /* 0WS */
 800669e:	2000      	movs	r0, #0
 80066a0:	e7bd      	b.n	800661e <RCC_SetFlashLatencyFromMSIRange+0x26>
          latency = FLASH_LATENCY_1; /* 1WS */
 80066a2:	2001      	movs	r0, #1
 80066a4:	e7bb      	b.n	800661e <RCC_SetFlashLatencyFromMSIRange+0x26>
 80066a6:	bf00      	nop
 80066a8:	46020c00 	.word	0x46020c00
 80066ac:	40022000 	.word	0x40022000

080066b0 <HAL_RCC_GetSysClockFreq>:
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 80066b0:	4a40      	ldr	r2, [pc, #256]	@ (80067b4 <HAL_RCC_GetSysClockFreq+0x104>)
{
 80066b2:	b510      	push	{r4, lr}
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 80066b4:	69d3      	ldr	r3, [r2, #28]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 80066b6:	6a91      	ldr	r1, [r2, #40]	@ 0x28
  if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 80066b8:	f013 030c 	ands.w	r3, r3, #12
 80066bc:	d005      	beq.n	80066ca <HAL_RCC_GetSysClockFreq+0x1a>
 80066be:	2b0c      	cmp	r3, #12
 80066c0:	d148      	bne.n	8006754 <HAL_RCC_GetSysClockFreq+0xa4>
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 80066c2:	f001 0103 	and.w	r1, r1, #3
      ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 80066c6:	2901      	cmp	r1, #1
 80066c8:	d144      	bne.n	8006754 <HAL_RCC_GetSysClockFreq+0xa4>
    if (READ_BIT(RCC->ICSCR1, RCC_ICSCR1_MSIRGSEL) == 0U)
 80066ca:	6891      	ldr	r1, [r2, #8]
 80066cc:	0209      	lsls	r1, r1, #8
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 80066ce:	bf54      	ite	pl
 80066d0:	f8d2 20f4 	ldrpl.w	r2, [r2, #244]	@ 0xf4
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 80066d4:	6892      	ldrmi	r2, [r2, #8]
    msirange = MSIRangeTable[msirange];
 80066d6:	4938      	ldr	r1, [pc, #224]	@ (80067b8 <HAL_RCC_GetSysClockFreq+0x108>)
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 80066d8:	bf54      	ite	pl
 80066da:	f3c2 3203 	ubfxpl	r2, r2, #12, #4
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 80066de:	0f12      	lsrmi	r2, r2, #28
    msirange = MSIRangeTable[msirange];
 80066e0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 80066e4:	2b00      	cmp	r3, #0
 80066e6:	d063      	beq.n	80067b0 <HAL_RCC_GetSysClockFreq+0x100>
  uint32_t sysclockfreq = 0U;
 80066e8:	2000      	movs	r0, #0
  if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80066ea:	2b0c      	cmp	r3, #12
 80066ec:	d15e      	bne.n	80067ac <HAL_RCC_GetSysClockFreq+0xfc>
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 80066ee:	4931      	ldr	r1, [pc, #196]	@ (80067b4 <HAL_RCC_GetSysClockFreq+0x104>)
 80066f0:	eddf 5a32 	vldr	s11, [pc, #200]	@ 80067bc <HAL_RCC_GetSysClockFreq+0x10c>
 80066f4:	6a88      	ldr	r0, [r1, #40]	@ 0x28
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 80066f6:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 80066f8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 80066fa:	f3c3 2303 	ubfx	r3, r3, #8, #4
 80066fe:	3301      	adds	r3, #1
 8006700:	ee07 3a90 	vmov	s15, r3
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 8006704:	6b8b      	ldr	r3, [r1, #56]	@ 0x38
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 8006706:	f3c4 1400 	ubfx	r4, r4, #4, #1
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 800670a:	f3c3 03cc 	ubfx	r3, r3, #3, #13
 800670e:	4363      	muls	r3, r4
 8006710:	ee07 3a10 	vmov	s14, r3
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 8006714:	f000 0003 	and.w	r0, r0, #3
    switch (pllsource)
 8006718:	2802      	cmp	r0, #2
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 800671a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
    switch (pllsource)
 800671e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006722:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8006726:	d021      	beq.n	800676c <HAL_RCC_GetSysClockFreq+0xbc>
 8006728:	2803      	cmp	r0, #3
 800672a:	d01f      	beq.n	800676c <HAL_RCC_GetSysClockFreq+0xbc>
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 800672c:	ee06 2a90 	vmov	s13, r2
 8006730:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8006734:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8006736:	ee86 5aa7 	vdiv.f32	s10, s13, s15
 800673a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800673e:	ee07 3a90 	vmov	s15, r3
 8006742:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006746:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 800674a:	ee77 7a86 	vadd.f32	s15, s15, s12
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 800674e:	ee67 7a85 	vmul.f32	s15, s15, s10
        break;
 8006752:	e01c      	b.n	800678e <HAL_RCC_GetSysClockFreq+0xde>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8006754:	69d2      	ldr	r2, [r2, #28]
 8006756:	f002 020c 	and.w	r2, r2, #12
 800675a:	2a04      	cmp	r2, #4
 800675c:	d004      	beq.n	8006768 <HAL_RCC_GetSysClockFreq+0xb8>
  else if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 800675e:	2b08      	cmp	r3, #8
 8006760:	d025      	beq.n	80067ae <HAL_RCC_GetSysClockFreq+0xfe>
  uint32_t sysclockfreq = 0U;
 8006762:	2000      	movs	r0, #0
  uint32_t msirange = 0U;
 8006764:	2200      	movs	r2, #0
 8006766:	e7c0      	b.n	80066ea <HAL_RCC_GetSysClockFreq+0x3a>
    sysclockfreq = HSI_VALUE;
 8006768:	4815      	ldr	r0, [pc, #84]	@ (80067c0 <HAL_RCC_GetSysClockFreq+0x110>)
 800676a:	e7fb      	b.n	8006764 <HAL_RCC_GetSysClockFreq+0xb4>
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 800676c:	ed9f 5a15 	vldr	s10, [pc, #84]	@ 80067c4 <HAL_RCC_GetSysClockFreq+0x114>
 8006770:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8006772:	eec5 6a27 	vdiv.f32	s13, s10, s15
 8006776:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800677a:	ee07 3a90 	vmov	s15, r3
 800677e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006782:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 8006786:	ee77 7a86 	vadd.f32	s15, s15, s12
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 800678a:	ee67 7aa6 	vmul.f32	s15, s15, s13
    pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U);
 800678e:	4b09      	ldr	r3, [pc, #36]	@ (80067b4 <HAL_RCC_GetSysClockFreq+0x104>)
 8006790:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006792:	f3c3 6306 	ubfx	r3, r3, #24, #7
 8006796:	3301      	adds	r3, #1
    sysclockfreq = (uint32_t)(float_t)((float_t)pllvco / (float_t)pllr);
 8006798:	ee07 3a10 	vmov	s14, r3
 800679c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80067a0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80067a4:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 80067a8:	ee17 0a90 	vmov	r0, s15
}
 80067ac:	bd10      	pop	{r4, pc}
    sysclockfreq = HSE_VALUE;
 80067ae:	4a04      	ldr	r2, [pc, #16]	@ (80067c0 <HAL_RCC_GetSysClockFreq+0x110>)
  uint32_t msirange = 0U;
 80067b0:	4610      	mov	r0, r2
 80067b2:	e7fb      	b.n	80067ac <HAL_RCC_GetSysClockFreq+0xfc>
 80067b4:	46020c00 	.word	0x46020c00
 80067b8:	08035544 	.word	0x08035544
 80067bc:	39000000 	.word	0x39000000
 80067c0:	00f42400 	.word	0x00f42400
 80067c4:	4b742400 	.word	0x4b742400

080067c8 <HAL_RCC_ClockConfig>:
{
 80067c8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80067cc:	460d      	mov	r5, r1
  if (pRCC_ClkInitStruct == NULL)
 80067ce:	4604      	mov	r4, r0
 80067d0:	b918      	cbnz	r0, 80067da <HAL_RCC_ClockConfig+0x12>
    return HAL_ERROR;
 80067d2:	2001      	movs	r0, #1
}
 80067d4:	b002      	add	sp, #8
 80067d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 80067da:	4a9c      	ldr	r2, [pc, #624]	@ (8006a4c <HAL_RCC_ClockConfig+0x284>)
 80067dc:	6813      	ldr	r3, [r2, #0]
 80067de:	f003 030f 	and.w	r3, r3, #15
 80067e2:	428b      	cmp	r3, r1
 80067e4:	d36e      	bcc.n	80068c4 <HAL_RCC_ClockConfig+0xfc>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 80067e6:	6823      	ldr	r3, [r4, #0]
 80067e8:	06d8      	lsls	r0, r3, #27
 80067ea:	d477      	bmi.n	80068dc <HAL_RCC_ClockConfig+0x114>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80067ec:	0719      	lsls	r1, r3, #28
 80067ee:	d50d      	bpl.n	800680c <HAL_RCC_ClockConfig+0x44>
    if ((pRCC_ClkInitStruct->APB2CLKDivider) > ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 80067f0:	4997      	ldr	r1, [pc, #604]	@ (8006a50 <HAL_RCC_ClockConfig+0x288>)
 80067f2:	6920      	ldr	r0, [r4, #16]
 80067f4:	6a0a      	ldr	r2, [r1, #32]
 80067f6:	0912      	lsrs	r2, r2, #4
 80067f8:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 80067fc:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 80067fe:	bf81      	itttt	hi
 8006800:	6a0a      	ldrhi	r2, [r1, #32]
 8006802:	f422 62e0 	bichi.w	r2, r2, #1792	@ 0x700
 8006806:	ea42 1200 	orrhi.w	r2, r2, r0, lsl #4
 800680a:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800680c:	075a      	lsls	r2, r3, #29
 800680e:	d50b      	bpl.n	8006828 <HAL_RCC_ClockConfig+0x60>
    if ((pRCC_ClkInitStruct->APB1CLKDivider) > (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 8006810:	498f      	ldr	r1, [pc, #572]	@ (8006a50 <HAL_RCC_ClockConfig+0x288>)
 8006812:	68e0      	ldr	r0, [r4, #12]
 8006814:	6a0a      	ldr	r2, [r1, #32]
 8006816:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 800681a:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 800681c:	bf81      	itttt	hi
 800681e:	6a0a      	ldrhi	r2, [r1, #32]
 8006820:	f022 0270 	bichi.w	r2, r2, #112	@ 0x70
 8006824:	4302      	orrhi	r2, r0
 8006826:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006828:	079f      	lsls	r7, r3, #30
 800682a:	d50b      	bpl.n	8006844 <HAL_RCC_ClockConfig+0x7c>
    if ((pRCC_ClkInitStruct->AHBCLKDivider) > (RCC->CFGR2 & RCC_CFGR2_HPRE))
 800682c:	4988      	ldr	r1, [pc, #544]	@ (8006a50 <HAL_RCC_ClockConfig+0x288>)
 800682e:	68a0      	ldr	r0, [r4, #8]
 8006830:	6a0a      	ldr	r2, [r1, #32]
 8006832:	f002 020f 	and.w	r2, r2, #15
 8006836:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 8006838:	bf81      	itttt	hi
 800683a:	6a0a      	ldrhi	r2, [r1, #32]
 800683c:	f022 020f 	bichi.w	r2, r2, #15
 8006840:	4302      	orrhi	r2, r0
 8006842:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006844:	07de      	lsls	r6, r3, #31
 8006846:	d456      	bmi.n	80068f6 <HAL_RCC_ClockConfig+0x12e>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006848:	6822      	ldr	r2, [r4, #0]
 800684a:	0790      	lsls	r0, r2, #30
 800684c:	f100 80d8 	bmi.w	8006a00 <HAL_RCC_ClockConfig+0x238>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8006850:	497e      	ldr	r1, [pc, #504]	@ (8006a4c <HAL_RCC_ClockConfig+0x284>)
 8006852:	680b      	ldr	r3, [r1, #0]
 8006854:	f003 030f 	and.w	r3, r3, #15
 8006858:	42ab      	cmp	r3, r5
 800685a:	f200 80de 	bhi.w	8006a1a <HAL_RCC_ClockConfig+0x252>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800685e:	0750      	lsls	r0, r2, #29
 8006860:	f100 80e7 	bmi.w	8006a32 <HAL_RCC_ClockConfig+0x26a>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006864:	0711      	lsls	r1, r2, #28
 8006866:	d50d      	bpl.n	8006884 <HAL_RCC_ClockConfig+0xbc>
    if ((pRCC_ClkInitStruct->APB2CLKDivider) < ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 8006868:	4979      	ldr	r1, [pc, #484]	@ (8006a50 <HAL_RCC_ClockConfig+0x288>)
 800686a:	6920      	ldr	r0, [r4, #16]
 800686c:	6a0b      	ldr	r3, [r1, #32]
 800686e:	091b      	lsrs	r3, r3, #4
 8006870:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8006874:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 8006876:	bf3f      	itttt	cc
 8006878:	6a0b      	ldrcc	r3, [r1, #32]
 800687a:	f423 63e0 	biccc.w	r3, r3, #1792	@ 0x700
 800687e:	ea43 1300 	orrcc.w	r3, r3, r0, lsl #4
 8006882:	620b      	strcc	r3, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 8006884:	06d3      	lsls	r3, r2, #27
 8006886:	d50b      	bpl.n	80068a0 <HAL_RCC_ClockConfig+0xd8>
    if ((pRCC_ClkInitStruct->APB3CLKDivider) < (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 8006888:	4a71      	ldr	r2, [pc, #452]	@ (8006a50 <HAL_RCC_ClockConfig+0x288>)
 800688a:	6961      	ldr	r1, [r4, #20]
 800688c:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 800688e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8006892:	4299      	cmp	r1, r3
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, (pRCC_ClkInitStruct->APB3CLKDivider));
 8006894:	bf3f      	itttt	cc
 8006896:	6a53      	ldrcc	r3, [r2, #36]	@ 0x24
 8006898:	f023 0370 	biccc.w	r3, r3, #112	@ 0x70
 800689c:	430b      	orrcc	r3, r1
 800689e:	6253      	strcc	r3, [r2, #36]	@ 0x24
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 80068a0:	f7ff ff06 	bl	80066b0 <HAL_RCC_GetSysClockFreq>
 80068a4:	4b6a      	ldr	r3, [pc, #424]	@ (8006a50 <HAL_RCC_ClockConfig+0x288>)
 80068a6:	4a6b      	ldr	r2, [pc, #428]	@ (8006a54 <HAL_RCC_ClockConfig+0x28c>)
 80068a8:	6a1b      	ldr	r3, [r3, #32]
 80068aa:	f003 030f 	and.w	r3, r3, #15
 80068ae:	5cd3      	ldrb	r3, [r2, r3]
 80068b0:	40d8      	lsrs	r0, r3
 80068b2:	4b69      	ldr	r3, [pc, #420]	@ (8006a58 <HAL_RCC_ClockConfig+0x290>)
 80068b4:	6018      	str	r0, [r3, #0]
  status = HAL_InitTick(uwTickPrio);
 80068b6:	4b69      	ldr	r3, [pc, #420]	@ (8006a5c <HAL_RCC_ClockConfig+0x294>)
 80068b8:	6818      	ldr	r0, [r3, #0]
}
 80068ba:	b002      	add	sp, #8
 80068bc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  status = HAL_InitTick(uwTickPrio);
 80068c0:	f7fa ba66 	b.w	8000d90 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80068c4:	6813      	ldr	r3, [r2, #0]
 80068c6:	f023 030f 	bic.w	r3, r3, #15
 80068ca:	430b      	orrs	r3, r1
 80068cc:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80068ce:	6813      	ldr	r3, [r2, #0]
 80068d0:	f003 030f 	and.w	r3, r3, #15
 80068d4:	428b      	cmp	r3, r1
 80068d6:	f47f af7c 	bne.w	80067d2 <HAL_RCC_ClockConfig+0xa>
 80068da:	e784      	b.n	80067e6 <HAL_RCC_ClockConfig+0x1e>
    if ((pRCC_ClkInitStruct->APB3CLKDivider) > (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 80068dc:	495c      	ldr	r1, [pc, #368]	@ (8006a50 <HAL_RCC_ClockConfig+0x288>)
 80068de:	6960      	ldr	r0, [r4, #20]
 80068e0:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 80068e2:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 80068e6:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, pRCC_ClkInitStruct->APB3CLKDivider);
 80068e8:	bf81      	itttt	hi
 80068ea:	6a4a      	ldrhi	r2, [r1, #36]	@ 0x24
 80068ec:	f022 0270 	bichi.w	r2, r2, #112	@ 0x70
 80068f0:	4302      	orrhi	r2, r0
 80068f2:	624a      	strhi	r2, [r1, #36]	@ 0x24
 80068f4:	e77a      	b.n	80067ec <HAL_RCC_ClockConfig+0x24>
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80068f6:	6862      	ldr	r2, [r4, #4]
 80068f8:	4b55      	ldr	r3, [pc, #340]	@ (8006a50 <HAL_RCC_ClockConfig+0x288>)
 80068fa:	2a03      	cmp	r2, #3
 80068fc:	d14e      	bne.n	800699c <HAL_RCC_ClockConfig+0x1d4>
      if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80068fe:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006902:	0751      	lsls	r1, r2, #29
 8006904:	d43d      	bmi.n	8006982 <HAL_RCC_ClockConfig+0x1ba>
        pwrclkchanged = SET;
 8006906:	2701      	movs	r7, #1
        __HAL_RCC_PWR_CLK_ENABLE();
 8006908:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 800690c:	f042 0204 	orr.w	r2, r2, #4
 8006910:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8006914:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006918:	f003 0304 	and.w	r3, r3, #4
 800691c:	9301      	str	r3, [sp, #4]
 800691e:	9b01      	ldr	r3, [sp, #4]
      tickstart = HAL_GetTick();
 8006920:	f7fd f9a8 	bl	8003c74 <HAL_GetTick>
      if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) != 0U)
 8006924:	f8df 8138 	ldr.w	r8, [pc, #312]	@ 8006a60 <HAL_RCC_ClockConfig+0x298>
      tickstart = HAL_GetTick();
 8006928:	4606      	mov	r6, r0
      if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) != 0U)
 800692a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800692e:	035a      	lsls	r2, r3, #13
 8006930:	d429      	bmi.n	8006986 <HAL_RCC_ClockConfig+0x1be>
      if (pwrclkchanged == SET)
 8006932:	4b47      	ldr	r3, [pc, #284]	@ (8006a50 <HAL_RCC_ClockConfig+0x288>)
 8006934:	b12f      	cbz	r7, 8006942 <HAL_RCC_ClockConfig+0x17a>
        __HAL_RCC_PWR_CLK_DISABLE();
 8006936:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 800693a:	f022 0204 	bic.w	r2, r2, #4
 800693e:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
      if (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 8006942:	681b      	ldr	r3, [r3, #0]
 8006944:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8006948:	f43f af43 	beq.w	80067d2 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pRCC_ClkInitStruct->SYSCLKSource);
 800694c:	4e40      	ldr	r6, [pc, #256]	@ (8006a50 <HAL_RCC_ClockConfig+0x288>)
 800694e:	6862      	ldr	r2, [r4, #4]
 8006950:	69f3      	ldr	r3, [r6, #28]
        if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006952:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pRCC_ClkInitStruct->SYSCLKSource);
 8006956:	f023 0303 	bic.w	r3, r3, #3
 800695a:	4313      	orrs	r3, r2
 800695c:	61f3      	str	r3, [r6, #28]
    tickstart = HAL_GetTick();
 800695e:	f7fd f989 	bl	8003c74 <HAL_GetTick>
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8006962:	6863      	ldr	r3, [r4, #4]
    tickstart = HAL_GetTick();
 8006964:	4607      	mov	r7, r0
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8006966:	2b03      	cmp	r3, #3
 8006968:	d125      	bne.n	80069b6 <HAL_RCC_ClockConfig+0x1ee>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800696a:	69f3      	ldr	r3, [r6, #28]
 800696c:	f003 030c 	and.w	r3, r3, #12
 8006970:	2b0c      	cmp	r3, #12
 8006972:	f43f af69 	beq.w	8006848 <HAL_RCC_ClockConfig+0x80>
        if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006976:	f7fd f97d 	bl	8003c74 <HAL_GetTick>
 800697a:	1bc0      	subs	r0, r0, r7
 800697c:	4540      	cmp	r0, r8
 800697e:	d9f4      	bls.n	800696a <HAL_RCC_ClockConfig+0x1a2>
 8006980:	e00a      	b.n	8006998 <HAL_RCC_ClockConfig+0x1d0>
    FlagStatus  pwrclkchanged = RESET;
 8006982:	2700      	movs	r7, #0
 8006984:	e7cc      	b.n	8006920 <HAL_RCC_ClockConfig+0x158>
        while (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTRDY) == 0U)
 8006986:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800698a:	045b      	lsls	r3, r3, #17
 800698c:	d4d1      	bmi.n	8006932 <HAL_RCC_ClockConfig+0x16a>
          if ((HAL_GetTick() - tickstart) > EPOD_TIMEOUT_VALUE)
 800698e:	f7fd f971 	bl	8003c74 <HAL_GetTick>
 8006992:	1b80      	subs	r0, r0, r6
 8006994:	2802      	cmp	r0, #2
 8006996:	d9f6      	bls.n	8006986 <HAL_RCC_ClockConfig+0x1be>
            return HAL_TIMEOUT;
 8006998:	2003      	movs	r0, #3
 800699a:	e71b      	b.n	80067d4 <HAL_RCC_ClockConfig+0xc>
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800699c:	2a02      	cmp	r2, #2
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 800699e:	681b      	ldr	r3, [r3, #0]
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80069a0:	d102      	bne.n	80069a8 <HAL_RCC_ClockConfig+0x1e0>
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 80069a2:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
 80069a6:	e7cf      	b.n	8006948 <HAL_RCC_ClockConfig+0x180>
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 80069a8:	b912      	cbnz	r2, 80069b0 <HAL_RCC_ClockConfig+0x1e8>
        if (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 80069aa:	f013 0f04 	tst.w	r3, #4
 80069ae:	e7cb      	b.n	8006948 <HAL_RCC_ClockConfig+0x180>
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80069b0:	f413 6f80 	tst.w	r3, #1024	@ 0x400
 80069b4:	e7c8      	b.n	8006948 <HAL_RCC_ClockConfig+0x180>
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80069b6:	2b02      	cmp	r3, #2
 80069b8:	d10b      	bne.n	80069d2 <HAL_RCC_ClockConfig+0x20a>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 80069ba:	69f3      	ldr	r3, [r6, #28]
 80069bc:	f003 030c 	and.w	r3, r3, #12
 80069c0:	2b08      	cmp	r3, #8
 80069c2:	f43f af41 	beq.w	8006848 <HAL_RCC_ClockConfig+0x80>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80069c6:	f7fd f955 	bl	8003c74 <HAL_GetTick>
 80069ca:	1bc0      	subs	r0, r0, r7
 80069cc:	4540      	cmp	r0, r8
 80069ce:	d9f4      	bls.n	80069ba <HAL_RCC_ClockConfig+0x1f2>
 80069d0:	e7e2      	b.n	8006998 <HAL_RCC_ClockConfig+0x1d0>
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 80069d2:	b97b      	cbnz	r3, 80069f4 <HAL_RCC_ClockConfig+0x22c>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 80069d4:	69f3      	ldr	r3, [r6, #28]
 80069d6:	f013 0f0c 	tst.w	r3, #12
 80069da:	f43f af35 	beq.w	8006848 <HAL_RCC_ClockConfig+0x80>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80069de:	f7fd f949 	bl	8003c74 <HAL_GetTick>
 80069e2:	1bc0      	subs	r0, r0, r7
 80069e4:	4540      	cmp	r0, r8
 80069e6:	d9f5      	bls.n	80069d4 <HAL_RCC_ClockConfig+0x20c>
 80069e8:	e7d6      	b.n	8006998 <HAL_RCC_ClockConfig+0x1d0>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80069ea:	f7fd f943 	bl	8003c74 <HAL_GetTick>
 80069ee:	1bc0      	subs	r0, r0, r7
 80069f0:	4540      	cmp	r0, r8
 80069f2:	d8d1      	bhi.n	8006998 <HAL_RCC_ClockConfig+0x1d0>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 80069f4:	69f3      	ldr	r3, [r6, #28]
 80069f6:	f003 030c 	and.w	r3, r3, #12
 80069fa:	2b04      	cmp	r3, #4
 80069fc:	d1f5      	bne.n	80069ea <HAL_RCC_ClockConfig+0x222>
 80069fe:	e723      	b.n	8006848 <HAL_RCC_ClockConfig+0x80>
    if ((pRCC_ClkInitStruct->AHBCLKDivider) < (RCC->CFGR2 & RCC_CFGR2_HPRE))
 8006a00:	4913      	ldr	r1, [pc, #76]	@ (8006a50 <HAL_RCC_ClockConfig+0x288>)
 8006a02:	68a0      	ldr	r0, [r4, #8]
 8006a04:	6a0b      	ldr	r3, [r1, #32]
 8006a06:	f003 030f 	and.w	r3, r3, #15
 8006a0a:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 8006a0c:	bf3f      	itttt	cc
 8006a0e:	6a0b      	ldrcc	r3, [r1, #32]
 8006a10:	f023 030f 	biccc.w	r3, r3, #15
 8006a14:	4303      	orrcc	r3, r0
 8006a16:	620b      	strcc	r3, [r1, #32]
 8006a18:	e71a      	b.n	8006850 <HAL_RCC_ClockConfig+0x88>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006a1a:	680b      	ldr	r3, [r1, #0]
 8006a1c:	f023 030f 	bic.w	r3, r3, #15
 8006a20:	432b      	orrs	r3, r5
 8006a22:	600b      	str	r3, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006a24:	680b      	ldr	r3, [r1, #0]
 8006a26:	f003 030f 	and.w	r3, r3, #15
 8006a2a:	42ab      	cmp	r3, r5
 8006a2c:	f47f aed1 	bne.w	80067d2 <HAL_RCC_ClockConfig+0xa>
 8006a30:	e715      	b.n	800685e <HAL_RCC_ClockConfig+0x96>
    if ((pRCC_ClkInitStruct->APB1CLKDivider) < (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 8006a32:	4907      	ldr	r1, [pc, #28]	@ (8006a50 <HAL_RCC_ClockConfig+0x288>)
 8006a34:	68e0      	ldr	r0, [r4, #12]
 8006a36:	6a0b      	ldr	r3, [r1, #32]
 8006a38:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8006a3c:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 8006a3e:	bf3f      	itttt	cc
 8006a40:	6a0b      	ldrcc	r3, [r1, #32]
 8006a42:	f023 0370 	biccc.w	r3, r3, #112	@ 0x70
 8006a46:	4303      	orrcc	r3, r0
 8006a48:	620b      	strcc	r3, [r1, #32]
 8006a4a:	e70b      	b.n	8006864 <HAL_RCC_ClockConfig+0x9c>
 8006a4c:	40022000 	.word	0x40022000
 8006a50:	46020c00 	.word	0x46020c00
 8006a54:	0803558c 	.word	0x0803558c
 8006a58:	2000004c 	.word	0x2000004c
 8006a5c:	20000054 	.word	0x20000054
 8006a60:	46020800 	.word	0x46020800

08006a64 <HAL_RCC_GetHCLKFreq>:
{
 8006a64:	b508      	push	{r3, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8006a66:	f7ff fe23 	bl	80066b0 <HAL_RCC_GetSysClockFreq>
 8006a6a:	4b05      	ldr	r3, [pc, #20]	@ (8006a80 <HAL_RCC_GetHCLKFreq+0x1c>)
 8006a6c:	4a05      	ldr	r2, [pc, #20]	@ (8006a84 <HAL_RCC_GetHCLKFreq+0x20>)
 8006a6e:	6a1b      	ldr	r3, [r3, #32]
 8006a70:	f003 030f 	and.w	r3, r3, #15
 8006a74:	5cd3      	ldrb	r3, [r2, r3]
 8006a76:	40d8      	lsrs	r0, r3
 8006a78:	4b03      	ldr	r3, [pc, #12]	@ (8006a88 <HAL_RCC_GetHCLKFreq+0x24>)
 8006a7a:	6018      	str	r0, [r3, #0]
}
 8006a7c:	bd08      	pop	{r3, pc}
 8006a7e:	bf00      	nop
 8006a80:	46020c00 	.word	0x46020c00
 8006a84:	0803558c 	.word	0x0803558c
 8006a88:	2000004c 	.word	0x2000004c

08006a8c <HAL_RCC_OscConfig>:
{
 8006a8c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  if (pRCC_OscInitStruct == NULL)
 8006a90:	4604      	mov	r4, r0
 8006a92:	2800      	cmp	r0, #0
 8006a94:	d039      	beq.n	8006b0a <HAL_RCC_OscConfig+0x7e>
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006a96:	4ba3      	ldr	r3, [pc, #652]	@ (8006d24 <HAL_RCC_OscConfig+0x298>)
 8006a98:	69de      	ldr	r6, [r3, #28]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8006a9a:	6a9f      	ldr	r7, [r3, #40]	@ 0x28
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006a9c:	6803      	ldr	r3, [r0, #0]
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006a9e:	f006 060c 	and.w	r6, r6, #12
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006aa2:	06d8      	lsls	r0, r3, #27
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8006aa4:	f007 0703 	and.w	r7, r7, #3
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006aa8:	f140 809a 	bpl.w	8006be0 <HAL_RCC_OscConfig+0x154>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 8006aac:	69e3      	ldr	r3, [r4, #28]
 8006aae:	b11e      	cbz	r6, 8006ab8 <HAL_RCC_OscConfig+0x2c>
 8006ab0:	2e0c      	cmp	r6, #12
 8006ab2:	d175      	bne.n	8006ba0 <HAL_RCC_OscConfig+0x114>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_MSI)))
 8006ab4:	2f01      	cmp	r7, #1
 8006ab6:	d173      	bne.n	8006ba0 <HAL_RCC_OscConfig+0x114>
      if (pRCC_OscInitStruct->MSIState == RCC_MSI_OFF)
 8006ab8:	b33b      	cbz	r3, 8006b0a <HAL_RCC_OscConfig+0x7e>
        if (pRCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 8006aba:	4d9a      	ldr	r5, [pc, #616]	@ (8006d24 <HAL_RCC_OscConfig+0x298>)
 8006abc:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 8006abe:	68ab      	ldr	r3, [r5, #8]
 8006ac0:	0219      	lsls	r1, r3, #8
 8006ac2:	bf56      	itet	pl
 8006ac4:	f8d5 30f4 	ldrpl.w	r3, [r5, #244]	@ 0xf4
 8006ac8:	68ab      	ldrmi	r3, [r5, #8]
 8006aca:	041b      	lslpl	r3, r3, #16
 8006acc:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 8006ad0:	4298      	cmp	r0, r3
 8006ad2:	d938      	bls.n	8006b46 <HAL_RCC_OscConfig+0xba>
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8006ad4:	b1ae      	cbz	r6, 8006b02 <HAL_RCC_OscConfig+0x76>
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006ad6:	68ab      	ldr	r3, [r5, #8]
 8006ad8:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006adc:	60ab      	str	r3, [r5, #8]
 8006ade:	68ab      	ldr	r3, [r5, #8]
 8006ae0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006ae2:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006ae6:	430b      	orrs	r3, r1
 8006ae8:	60ab      	str	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006aea:	f1b1 4f40 	cmp.w	r1, #3221225472	@ 0xc0000000
 8006aee:	6a22      	ldr	r2, [r4, #32]
 8006af0:	d20d      	bcs.n	8006b0e <HAL_RCC_OscConfig+0x82>
 8006af2:	2900      	cmp	r1, #0
 8006af4:	68eb      	ldr	r3, [r5, #12]
 8006af6:	da1a      	bge.n	8006b2e <HAL_RCC_OscConfig+0xa2>
 8006af8:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006afc:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006b00:	e009      	b.n	8006b16 <HAL_RCC_OscConfig+0x8a>
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8006b02:	f7ff fd79 	bl	80065f8 <RCC_SetFlashLatencyFromMSIRange>
 8006b06:	2800      	cmp	r0, #0
 8006b08:	d0e5      	beq.n	8006ad6 <HAL_RCC_OscConfig+0x4a>
    return HAL_ERROR;
 8006b0a:	2001      	movs	r0, #1
 8006b0c:	e00c      	b.n	8006b28 <HAL_RCC_OscConfig+0x9c>
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b0e:	68eb      	ldr	r3, [r5, #12]
 8006b10:	f023 031f 	bic.w	r3, r3, #31
 8006b14:	4313      	orrs	r3, r2
 8006b16:	60eb      	str	r3, [r5, #12]
        (void) HAL_RCC_GetHCLKFreq();
 8006b18:	f7ff ffa4 	bl	8006a64 <HAL_RCC_GetHCLKFreq>
        status = HAL_InitTick(uwTickPrio);
 8006b1c:	4b82      	ldr	r3, [pc, #520]	@ (8006d28 <HAL_RCC_OscConfig+0x29c>)
 8006b1e:	6818      	ldr	r0, [r3, #0]
 8006b20:	f7fa f936 	bl	8000d90 <HAL_InitTick>
        if (status != HAL_OK)
 8006b24:	2800      	cmp	r0, #0
 8006b26:	d05b      	beq.n	8006be0 <HAL_RCC_OscConfig+0x154>
}
 8006b28:	b004      	add	sp, #16
 8006b2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b2e:	f1b1 4f80 	cmp.w	r1, #1073741824	@ 0x40000000
 8006b32:	bf2b      	itete	cs
 8006b34:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8006b38:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 8006b3c:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8006b40:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8006b44:	e7e7      	b.n	8006b16 <HAL_RCC_OscConfig+0x8a>
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006b46:	68ab      	ldr	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b48:	f1b0 4f40 	cmp.w	r0, #3221225472	@ 0xc0000000
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006b4c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006b50:	60ab      	str	r3, [r5, #8]
 8006b52:	68ab      	ldr	r3, [r5, #8]
 8006b54:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006b58:	ea43 0300 	orr.w	r3, r3, r0
 8006b5c:	60ab      	str	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b5e:	6a22      	ldr	r2, [r4, #32]
 8006b60:	68eb      	ldr	r3, [r5, #12]
 8006b62:	d30a      	bcc.n	8006b7a <HAL_RCC_OscConfig+0xee>
 8006b64:	f023 031f 	bic.w	r3, r3, #31
 8006b68:	4313      	orrs	r3, r2
 8006b6a:	60eb      	str	r3, [r5, #12]
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8006b6c:	2e00      	cmp	r6, #0
 8006b6e:	d1d3      	bne.n	8006b18 <HAL_RCC_OscConfig+0x8c>
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8006b70:	f7ff fd42 	bl	80065f8 <RCC_SetFlashLatencyFromMSIRange>
 8006b74:	2800      	cmp	r0, #0
 8006b76:	d0cf      	beq.n	8006b18 <HAL_RCC_OscConfig+0x8c>
 8006b78:	e7c7      	b.n	8006b0a <HAL_RCC_OscConfig+0x7e>
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b7a:	2800      	cmp	r0, #0
 8006b7c:	da04      	bge.n	8006b88 <HAL_RCC_OscConfig+0xfc>
 8006b7e:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006b82:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006b86:	e7f0      	b.n	8006b6a <HAL_RCC_OscConfig+0xde>
 8006b88:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006b8c:	bf2b      	itete	cs
 8006b8e:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8006b92:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 8006b96:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8006b9a:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8006b9e:	e7e4      	b.n	8006b6a <HAL_RCC_OscConfig+0xde>
      if (pRCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8006ba0:	4d60      	ldr	r5, [pc, #384]	@ (8006d24 <HAL_RCC_OscConfig+0x298>)
 8006ba2:	2b00      	cmp	r3, #0
 8006ba4:	d074      	beq.n	8006c90 <HAL_RCC_OscConfig+0x204>
        __HAL_RCC_MSI_ENABLE();
 8006ba6:	682b      	ldr	r3, [r5, #0]
 8006ba8:	f043 0301 	orr.w	r3, r3, #1
 8006bac:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006bae:	f7fd f861 	bl	8003c74 <HAL_GetTick>
 8006bb2:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 8006bb4:	682b      	ldr	r3, [r5, #0]
 8006bb6:	075a      	lsls	r2, r3, #29
 8006bb8:	d54e      	bpl.n	8006c58 <HAL_RCC_OscConfig+0x1cc>
        __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006bba:	68ab      	ldr	r3, [r5, #8]
 8006bbc:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006bc0:	60ab      	str	r3, [r5, #8]
 8006bc2:	68ab      	ldr	r3, [r5, #8]
 8006bc4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006bc6:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006bca:	430b      	orrs	r3, r1
 8006bcc:	60ab      	str	r3, [r5, #8]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006bce:	f1b1 4f40 	cmp.w	r1, #3221225472	@ 0xc0000000
 8006bd2:	6a22      	ldr	r2, [r4, #32]
 8006bd4:	68eb      	ldr	r3, [r5, #12]
 8006bd6:	d347      	bcc.n	8006c68 <HAL_RCC_OscConfig+0x1dc>
 8006bd8:	f023 031f 	bic.w	r3, r3, #31
 8006bdc:	4313      	orrs	r3, r2
 8006bde:	60eb      	str	r3, [r5, #12]
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006be0:	6823      	ldr	r3, [r4, #0]
 8006be2:	07dd      	lsls	r5, r3, #31
 8006be4:	d465      	bmi.n	8006cb2 <HAL_RCC_OscConfig+0x226>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006be6:	6823      	ldr	r3, [r4, #0]
 8006be8:	0798      	lsls	r0, r3, #30
 8006bea:	f100 80bd 	bmi.w	8006d68 <HAL_RCC_OscConfig+0x2dc>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006bee:	6823      	ldr	r3, [r4, #0]
 8006bf0:	0718      	lsls	r0, r3, #28
 8006bf2:	f140 8138 	bpl.w	8006e66 <HAL_RCC_OscConfig+0x3da>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006bf6:	4b4b      	ldr	r3, [pc, #300]	@ (8006d24 <HAL_RCC_OscConfig+0x298>)
 8006bf8:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006bfc:	0751      	lsls	r1, r2, #29
 8006bfe:	f100 80f1 	bmi.w	8006de4 <HAL_RCC_OscConfig+0x358>
      pwrclkchanged = SET;
 8006c02:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8006c04:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006c08:	f042 0204 	orr.w	r2, r2, #4
 8006c0c:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8006c10:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006c14:	f003 0304 	and.w	r3, r3, #4
 8006c18:	9301      	str	r3, [sp, #4]
 8006c1a:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006c1c:	4d43      	ldr	r5, [pc, #268]	@ (8006d2c <HAL_RCC_OscConfig+0x2a0>)
 8006c1e:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006c20:	07da      	lsls	r2, r3, #31
 8006c22:	f140 80e1 	bpl.w	8006de8 <HAL_RCC_OscConfig+0x35c>
    if (pRCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8006c26:	6963      	ldr	r3, [r4, #20]
 8006c28:	4d3e      	ldr	r5, [pc, #248]	@ (8006d24 <HAL_RCC_OscConfig+0x298>)
 8006c2a:	2b00      	cmp	r3, #0
 8006c2c:	f040 80ed 	bne.w	8006e0a <HAL_RCC_OscConfig+0x37e>
      __HAL_RCC_LSI_DISABLE();
 8006c30:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006c34:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 8006c38:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8006c3c:	f7fd f81a 	bl	8003c74 <HAL_GetTick>
 8006c40:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8006c42:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006c46:	011b      	lsls	r3, r3, #4
 8006c48:	f140 8105 	bpl.w	8006e56 <HAL_RCC_OscConfig+0x3ca>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006c4c:	f7fd f812 	bl	8003c74 <HAL_GetTick>
 8006c50:	1b80      	subs	r0, r0, r6
 8006c52:	2805      	cmp	r0, #5
 8006c54:	d9f5      	bls.n	8006c42 <HAL_RCC_OscConfig+0x1b6>
 8006c56:	e005      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8006c58:	f7fd f80c 	bl	8003c74 <HAL_GetTick>
 8006c5c:	eba0 0008 	sub.w	r0, r0, r8
 8006c60:	2802      	cmp	r0, #2
 8006c62:	d9a7      	bls.n	8006bb4 <HAL_RCC_OscConfig+0x128>
            return HAL_TIMEOUT;
 8006c64:	2003      	movs	r0, #3
 8006c66:	e75f      	b.n	8006b28 <HAL_RCC_OscConfig+0x9c>
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006c68:	2900      	cmp	r1, #0
 8006c6a:	da04      	bge.n	8006c76 <HAL_RCC_OscConfig+0x1ea>
 8006c6c:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006c70:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006c74:	e7b3      	b.n	8006bde <HAL_RCC_OscConfig+0x152>
 8006c76:	f1b1 4f80 	cmp.w	r1, #1073741824	@ 0x40000000
 8006c7a:	d304      	bcc.n	8006c86 <HAL_RCC_OscConfig+0x1fa>
 8006c7c:	f423 43f8 	bic.w	r3, r3, #31744	@ 0x7c00
 8006c80:	ea43 2382 	orr.w	r3, r3, r2, lsl #10
 8006c84:	e7ab      	b.n	8006bde <HAL_RCC_OscConfig+0x152>
 8006c86:	f423 2378 	bic.w	r3, r3, #1015808	@ 0xf8000
 8006c8a:	ea43 33c2 	orr.w	r3, r3, r2, lsl #15
 8006c8e:	e7a6      	b.n	8006bde <HAL_RCC_OscConfig+0x152>
        __HAL_RCC_MSI_DISABLE();
 8006c90:	682b      	ldr	r3, [r5, #0]
 8006c92:	f023 0301 	bic.w	r3, r3, #1
 8006c96:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006c98:	f7fc ffec 	bl	8003c74 <HAL_GetTick>
 8006c9c:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) != 0U)
 8006c9e:	682b      	ldr	r3, [r5, #0]
 8006ca0:	075b      	lsls	r3, r3, #29
 8006ca2:	d59d      	bpl.n	8006be0 <HAL_RCC_OscConfig+0x154>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8006ca4:	f7fc ffe6 	bl	8003c74 <HAL_GetTick>
 8006ca8:	eba0 0008 	sub.w	r0, r0, r8
 8006cac:	2802      	cmp	r0, #2
 8006cae:	d9f6      	bls.n	8006c9e <HAL_RCC_OscConfig+0x212>
 8006cb0:	e7d8      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE) ||
 8006cb2:	2e08      	cmp	r6, #8
 8006cb4:	6863      	ldr	r3, [r4, #4]
 8006cb6:	d003      	beq.n	8006cc0 <HAL_RCC_OscConfig+0x234>
 8006cb8:	2e0c      	cmp	r6, #12
 8006cba:	d104      	bne.n	8006cc6 <HAL_RCC_OscConfig+0x23a>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 8006cbc:	2f03      	cmp	r7, #3
 8006cbe:	d102      	bne.n	8006cc6 <HAL_RCC_OscConfig+0x23a>
      if (pRCC_OscInitStruct->HSEState == RCC_HSE_OFF)
 8006cc0:	2b00      	cmp	r3, #0
 8006cc2:	d190      	bne.n	8006be6 <HAL_RCC_OscConfig+0x15a>
 8006cc4:	e721      	b.n	8006b0a <HAL_RCC_OscConfig+0x7e>
      __HAL_RCC_HSE_CONFIG(pRCC_OscInitStruct->HSEState);
 8006cc6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006cca:	4d16      	ldr	r5, [pc, #88]	@ (8006d24 <HAL_RCC_OscConfig+0x298>)
 8006ccc:	d113      	bne.n	8006cf6 <HAL_RCC_OscConfig+0x26a>
 8006cce:	682b      	ldr	r3, [r5, #0]
 8006cd0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006cd4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006cd6:	f7fc ffcd 	bl	8003c74 <HAL_GetTick>
 8006cda:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8006cdc:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 8006d24 <HAL_RCC_OscConfig+0x298>
 8006ce0:	f8d8 3000 	ldr.w	r3, [r8]
 8006ce4:	0399      	lsls	r1, r3, #14
 8006ce6:	f53f af7e 	bmi.w	8006be6 <HAL_RCC_OscConfig+0x15a>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006cea:	f7fc ffc3 	bl	8003c74 <HAL_GetTick>
 8006cee:	1b40      	subs	r0, r0, r5
 8006cf0:	2864      	cmp	r0, #100	@ 0x64
 8006cf2:	d9f5      	bls.n	8006ce0 <HAL_RCC_OscConfig+0x254>
 8006cf4:	e7b6      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_HSE_CONFIG(pRCC_OscInitStruct->HSEState);
 8006cf6:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006cfa:	d108      	bne.n	8006d0e <HAL_RCC_OscConfig+0x282>
 8006cfc:	682b      	ldr	r3, [r5, #0]
 8006cfe:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006d02:	602b      	str	r3, [r5, #0]
 8006d04:	682b      	ldr	r3, [r5, #0]
 8006d06:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8006d0a:	602b      	str	r3, [r5, #0]
 8006d0c:	e7df      	b.n	8006cce <HAL_RCC_OscConfig+0x242>
 8006d0e:	f5b3 1fa8 	cmp.w	r3, #1376256	@ 0x150000
 8006d12:	d10d      	bne.n	8006d30 <HAL_RCC_OscConfig+0x2a4>
 8006d14:	682b      	ldr	r3, [r5, #0]
 8006d16:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006d1a:	602b      	str	r3, [r5, #0]
 8006d1c:	682b      	ldr	r3, [r5, #0]
 8006d1e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8006d22:	e7f2      	b.n	8006d0a <HAL_RCC_OscConfig+0x27e>
 8006d24:	46020c00 	.word	0x46020c00
 8006d28:	20000054 	.word	0x20000054
 8006d2c:	46020800 	.word	0x46020800
 8006d30:	682a      	ldr	r2, [r5, #0]
 8006d32:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8006d36:	602a      	str	r2, [r5, #0]
 8006d38:	682a      	ldr	r2, [r5, #0]
 8006d3a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8006d3e:	602a      	str	r2, [r5, #0]
 8006d40:	682a      	ldr	r2, [r5, #0]
 8006d42:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 8006d46:	602a      	str	r2, [r5, #0]
      if (pRCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8006d48:	2b00      	cmp	r3, #0
 8006d4a:	d1c4      	bne.n	8006cd6 <HAL_RCC_OscConfig+0x24a>
        tickstart = HAL_GetTick();
 8006d4c:	f7fc ff92 	bl	8003c74 <HAL_GetTick>
 8006d50:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8006d52:	682b      	ldr	r3, [r5, #0]
 8006d54:	039a      	lsls	r2, r3, #14
 8006d56:	f57f af46 	bpl.w	8006be6 <HAL_RCC_OscConfig+0x15a>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006d5a:	f7fc ff8b 	bl	8003c74 <HAL_GetTick>
 8006d5e:	eba0 0008 	sub.w	r0, r0, r8
 8006d62:	2864      	cmp	r0, #100	@ 0x64
 8006d64:	d9f5      	bls.n	8006d52 <HAL_RCC_OscConfig+0x2c6>
 8006d66:	e77d      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI) ||
 8006d68:	2e04      	cmp	r6, #4
 8006d6a:	68e3      	ldr	r3, [r4, #12]
 8006d6c:	d003      	beq.n	8006d76 <HAL_RCC_OscConfig+0x2ea>
 8006d6e:	2e0c      	cmp	r6, #12
 8006d70:	d10d      	bne.n	8006d8e <HAL_RCC_OscConfig+0x302>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 8006d72:	2f02      	cmp	r7, #2
 8006d74:	d10b      	bne.n	8006d8e <HAL_RCC_OscConfig+0x302>
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 8006d76:	2b00      	cmp	r3, #0
 8006d78:	f43f aec7 	beq.w	8006b0a <HAL_RCC_OscConfig+0x7e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 8006d7c:	4aa9      	ldr	r2, [pc, #676]	@ (8007024 <HAL_RCC_OscConfig+0x598>)
 8006d7e:	6921      	ldr	r1, [r4, #16]
 8006d80:	6913      	ldr	r3, [r2, #16]
 8006d82:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8006d86:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006d8a:	6113      	str	r3, [r2, #16]
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 8006d8c:	e72f      	b.n	8006bee <HAL_RCC_OscConfig+0x162>
      if (pRCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8006d8e:	4da5      	ldr	r5, [pc, #660]	@ (8007024 <HAL_RCC_OscConfig+0x598>)
 8006d90:	b1bb      	cbz	r3, 8006dc2 <HAL_RCC_OscConfig+0x336>
        __HAL_RCC_HSI_ENABLE();
 8006d92:	682b      	ldr	r3, [r5, #0]
 8006d94:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006d98:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006d9a:	f7fc ff6b 	bl	8003c74 <HAL_GetTick>
 8006d9e:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8006da0:	682b      	ldr	r3, [r5, #0]
 8006da2:	055b      	lsls	r3, r3, #21
 8006da4:	d507      	bpl.n	8006db6 <HAL_RCC_OscConfig+0x32a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 8006da6:	692b      	ldr	r3, [r5, #16]
 8006da8:	6922      	ldr	r2, [r4, #16]
 8006daa:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8006dae:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006db2:	612b      	str	r3, [r5, #16]
 8006db4:	e71b      	b.n	8006bee <HAL_RCC_OscConfig+0x162>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006db6:	f7fc ff5d 	bl	8003c74 <HAL_GetTick>
 8006dba:	1b80      	subs	r0, r0, r6
 8006dbc:	2802      	cmp	r0, #2
 8006dbe:	d9ef      	bls.n	8006da0 <HAL_RCC_OscConfig+0x314>
 8006dc0:	e750      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
        __HAL_RCC_HSI_DISABLE();
 8006dc2:	682b      	ldr	r3, [r5, #0]
 8006dc4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006dc8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006dca:	f7fc ff53 	bl	8003c74 <HAL_GetTick>
 8006dce:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8006dd0:	682b      	ldr	r3, [r5, #0]
 8006dd2:	055f      	lsls	r7, r3, #21
 8006dd4:	f57f af0b 	bpl.w	8006bee <HAL_RCC_OscConfig+0x162>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006dd8:	f7fc ff4c 	bl	8003c74 <HAL_GetTick>
 8006ddc:	1b80      	subs	r0, r0, r6
 8006dde:	2802      	cmp	r0, #2
 8006de0:	d9f6      	bls.n	8006dd0 <HAL_RCC_OscConfig+0x344>
 8006de2:	e73f      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
    FlagStatus  pwrclkchanged = RESET;
 8006de4:	2700      	movs	r7, #0
 8006de6:	e719      	b.n	8006c1c <HAL_RCC_OscConfig+0x190>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8006de8:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006dea:	f043 0301 	orr.w	r3, r3, #1
 8006dee:	62ab      	str	r3, [r5, #40]	@ 0x28
      tickstart = HAL_GetTick();
 8006df0:	f7fc ff40 	bl	8003c74 <HAL_GetTick>
 8006df4:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006df6:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006df8:	07db      	lsls	r3, r3, #31
 8006dfa:	f53f af14 	bmi.w	8006c26 <HAL_RCC_OscConfig+0x19a>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006dfe:	f7fc ff39 	bl	8003c74 <HAL_GetTick>
 8006e02:	1b80      	subs	r0, r0, r6
 8006e04:	2802      	cmp	r0, #2
 8006e06:	d9f6      	bls.n	8006df6 <HAL_RCC_OscConfig+0x36a>
 8006e08:	e72c      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
      uint32_t bdcr_temp = RCC->BDCR;
 8006e0a:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
      if (pRCC_OscInitStruct->LSIDiv != (bdcr_temp & RCC_BDCR_LSIPREDIV))
 8006e0e:	69a1      	ldr	r1, [r4, #24]
 8006e10:	f003 5280 	and.w	r2, r3, #268435456	@ 0x10000000
 8006e14:	4291      	cmp	r1, r2
 8006e16:	d010      	beq.n	8006e3a <HAL_RCC_OscConfig+0x3ae>
        if (((bdcr_temp & RCC_BDCR_LSIRDY) == RCC_BDCR_LSIRDY) && \
 8006e18:	f003 6240 	and.w	r2, r3, #201326592	@ 0xc000000
 8006e1c:	f1b2 6f00 	cmp.w	r2, #134217728	@ 0x8000000
 8006e20:	f43f ae73 	beq.w	8006b0a <HAL_RCC_OscConfig+0x7e>
        if ((bdcr_temp & RCC_BDCR_LSION) == RCC_BDCR_LSION)
 8006e24:	0158      	lsls	r0, r3, #5
 8006e26:	d46c      	bmi.n	8006f02 <HAL_RCC_OscConfig+0x476>
        MODIFY_REG(RCC->BDCR, RCC_BDCR_LSIPREDIV, pRCC_OscInitStruct->LSIDiv);
 8006e28:	4a7e      	ldr	r2, [pc, #504]	@ (8007024 <HAL_RCC_OscConfig+0x598>)
 8006e2a:	69a1      	ldr	r1, [r4, #24]
 8006e2c:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
 8006e30:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006e34:	430b      	orrs	r3, r1
 8006e36:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
      __HAL_RCC_LSI_ENABLE();
 8006e3a:	4d7a      	ldr	r5, [pc, #488]	@ (8007024 <HAL_RCC_OscConfig+0x598>)
 8006e3c:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006e40:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8006e44:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8006e48:	f7fc ff14 	bl	8003c74 <HAL_GetTick>
 8006e4c:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) == 0U)
 8006e4e:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006e52:	011a      	lsls	r2, r3, #4
 8006e54:	d568      	bpl.n	8006f28 <HAL_RCC_OscConfig+0x49c>
    if (pwrclkchanged == SET)
 8006e56:	b137      	cbz	r7, 8006e66 <HAL_RCC_OscConfig+0x3da>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006e58:	4a72      	ldr	r2, [pc, #456]	@ (8007024 <HAL_RCC_OscConfig+0x598>)
 8006e5a:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 8006e5e:	f023 0304 	bic.w	r3, r3, #4
 8006e62:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006e66:	6823      	ldr	r3, [r4, #0]
 8006e68:	075d      	lsls	r5, r3, #29
 8006e6a:	f140 80a7 	bpl.w	8006fbc <HAL_RCC_OscConfig+0x530>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006e6e:	4b6d      	ldr	r3, [pc, #436]	@ (8007024 <HAL_RCC_OscConfig+0x598>)
 8006e70:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006e74:	0750      	lsls	r0, r2, #29
 8006e76:	d45d      	bmi.n	8006f34 <HAL_RCC_OscConfig+0x4a8>
      pwrclkchanged = SET;
 8006e78:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8006e7a:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006e7e:	f042 0204 	orr.w	r2, r2, #4
 8006e82:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8006e86:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006e8a:	f003 0304 	and.w	r3, r3, #4
 8006e8e:	9302      	str	r3, [sp, #8]
 8006e90:	9b02      	ldr	r3, [sp, #8]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006e92:	4d65      	ldr	r5, [pc, #404]	@ (8007028 <HAL_RCC_OscConfig+0x59c>)
 8006e94:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006e96:	07d9      	lsls	r1, r3, #31
 8006e98:	d54e      	bpl.n	8006f38 <HAL_RCC_OscConfig+0x4ac>
    if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEON) != 0U)
 8006e9a:	68a3      	ldr	r3, [r4, #8]
 8006e9c:	4d61      	ldr	r5, [pc, #388]	@ (8007024 <HAL_RCC_OscConfig+0x598>)
 8006e9e:	f013 0f01 	tst.w	r3, #1
 8006ea2:	d159      	bne.n	8006f58 <HAL_RCC_OscConfig+0x4cc>
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8006ea4:	f8d5 20f0 	ldr.w	r2, [r5, #240]	@ 0xf0
 8006ea8:	f022 0201 	bic.w	r2, r2, #1
 8006eac:	f8c5 20f0 	str.w	r2, [r5, #240]	@ 0xf0
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 8006eb0:	f8d5 20f0 	ldr.w	r2, [r5, #240]	@ 0xf0
 8006eb4:	f022 0204 	bic.w	r2, r2, #4
 8006eb8:	f8c5 20f0 	str.w	r2, [r5, #240]	@ 0xf0
    if (pRCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8006ebc:	2b00      	cmp	r3, #0
 8006ebe:	d15a      	bne.n	8006f76 <HAL_RCC_OscConfig+0x4ea>
      tickstart = HAL_GetTick();
 8006ec0:	f7fc fed8 	bl	8003c74 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006ec4:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8006ec8:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8006eca:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006ece:	079a      	lsls	r2, r3, #30
 8006ed0:	f100 80a0 	bmi.w	8007014 <HAL_RCC_OscConfig+0x588>
      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN) != 0U)
 8006ed4:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006ed8:	061b      	lsls	r3, r3, #24
 8006eda:	d567      	bpl.n	8006fac <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006edc:	f241 3888 	movw	r8, #5000	@ 0x1388
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8006ee0:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006ee4:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006ee8:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 8006eec:	4d4d      	ldr	r5, [pc, #308]	@ (8007024 <HAL_RCC_OscConfig+0x598>)
 8006eee:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006ef2:	0518      	lsls	r0, r3, #20
 8006ef4:	d55a      	bpl.n	8006fac <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006ef6:	f7fc febd 	bl	8003c74 <HAL_GetTick>
 8006efa:	1b80      	subs	r0, r0, r6
 8006efc:	4540      	cmp	r0, r8
 8006efe:	d9f6      	bls.n	8006eee <HAL_RCC_OscConfig+0x462>
 8006f00:	e6b0      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
          __HAL_RCC_LSI_DISABLE();
 8006f02:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f06:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 8006f0a:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
          tickstart = HAL_GetTick();
 8006f0e:	f7fc feb1 	bl	8003c74 <HAL_GetTick>
 8006f12:	4606      	mov	r6, r0
          while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8006f14:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f18:	0119      	lsls	r1, r3, #4
 8006f1a:	d585      	bpl.n	8006e28 <HAL_RCC_OscConfig+0x39c>
            if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006f1c:	f7fc feaa 	bl	8003c74 <HAL_GetTick>
 8006f20:	1b80      	subs	r0, r0, r6
 8006f22:	2805      	cmp	r0, #5
 8006f24:	d9f6      	bls.n	8006f14 <HAL_RCC_OscConfig+0x488>
 8006f26:	e69d      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006f28:	f7fc fea4 	bl	8003c74 <HAL_GetTick>
 8006f2c:	1b80      	subs	r0, r0, r6
 8006f2e:	2805      	cmp	r0, #5
 8006f30:	d98d      	bls.n	8006e4e <HAL_RCC_OscConfig+0x3c2>
 8006f32:	e697      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
    FlagStatus pwrclkchanged = RESET;
 8006f34:	2700      	movs	r7, #0
 8006f36:	e7ac      	b.n	8006e92 <HAL_RCC_OscConfig+0x406>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8006f38:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006f3a:	f043 0301 	orr.w	r3, r3, #1
 8006f3e:	62ab      	str	r3, [r5, #40]	@ 0x28
      tickstart = HAL_GetTick();
 8006f40:	f7fc fe98 	bl	8003c74 <HAL_GetTick>
 8006f44:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006f46:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006f48:	07da      	lsls	r2, r3, #31
 8006f4a:	d4a6      	bmi.n	8006e9a <HAL_RCC_OscConfig+0x40e>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006f4c:	f7fc fe92 	bl	8003c74 <HAL_GetTick>
 8006f50:	1b80      	subs	r0, r0, r6
 8006f52:	2802      	cmp	r0, #2
 8006f54:	d9f7      	bls.n	8006f46 <HAL_RCC_OscConfig+0x4ba>
 8006f56:	e685      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEBYP) != 0U)
 8006f58:	f013 0f04 	tst.w	r3, #4
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 8006f5c:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f60:	bf1e      	ittt	ne
 8006f62:	f043 0304 	orrne.w	r3, r3, #4
 8006f66:	f8c5 30f0 	strne.w	r3, [r5, #240]	@ 0xf0
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8006f6a:	f8d5 30f0 	ldrne.w	r3, [r5, #240]	@ 0xf0
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8006f6e:	f043 0301 	orr.w	r3, r3, #1
 8006f72:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8006f76:	f7fc fe7d 	bl	8003c74 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006f7a:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8006f7e:	4605      	mov	r5, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8006f80:	4e28      	ldr	r6, [pc, #160]	@ (8007024 <HAL_RCC_OscConfig+0x598>)
 8006f82:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 8006f86:	079b      	lsls	r3, r3, #30
 8006f88:	d527      	bpl.n	8006fda <HAL_RCC_OscConfig+0x54e>
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 8006f8a:	68a3      	ldr	r3, [r4, #8]
 8006f8c:	f013 0f80 	tst.w	r3, #128	@ 0x80
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8006f90:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 8006f94:	d02d      	beq.n	8006ff2 <HAL_RCC_OscConfig+0x566>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006f96:	f241 3888 	movw	r8, #5000	@ 0x1388
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8006f9a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006f9e:	f8c6 30f0 	str.w	r3, [r6, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) == 0U)
 8006fa2:	4e20      	ldr	r6, [pc, #128]	@ (8007024 <HAL_RCC_OscConfig+0x598>)
 8006fa4:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 8006fa8:	0518      	lsls	r0, r3, #20
 8006faa:	d51c      	bpl.n	8006fe6 <HAL_RCC_OscConfig+0x55a>
    if (pwrclkchanged == SET)
 8006fac:	b137      	cbz	r7, 8006fbc <HAL_RCC_OscConfig+0x530>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006fae:	4a1d      	ldr	r2, [pc, #116]	@ (8007024 <HAL_RCC_OscConfig+0x598>)
 8006fb0:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 8006fb4:	f023 0304 	bic.w	r3, r3, #4
 8006fb8:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8006fbc:	6823      	ldr	r3, [r4, #0]
 8006fbe:	0699      	lsls	r1, r3, #26
 8006fc0:	d434      	bmi.n	800702c <HAL_RCC_OscConfig+0x5a0>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_SHSI) == RCC_OSCILLATORTYPE_SHSI)
 8006fc2:	6823      	ldr	r3, [r4, #0]
 8006fc4:	061a      	lsls	r2, r3, #24
 8006fc6:	d454      	bmi.n	8007072 <HAL_RCC_OscConfig+0x5e6>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSIK) == RCC_OSCILLATORTYPE_MSIK)
 8006fc8:	6823      	ldr	r3, [r4, #0]
 8006fca:	0658      	lsls	r0, r3, #25
 8006fcc:	d474      	bmi.n	80070b8 <HAL_RCC_OscConfig+0x62c>
  if ((pRCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006fce:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8006fd0:	2900      	cmp	r1, #0
 8006fd2:	f040 80c1 	bne.w	8007158 <HAL_RCC_OscConfig+0x6cc>
  return HAL_OK;
 8006fd6:	2000      	movs	r0, #0
 8006fd8:	e5a6      	b.n	8006b28 <HAL_RCC_OscConfig+0x9c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006fda:	f7fc fe4b 	bl	8003c74 <HAL_GetTick>
 8006fde:	1b40      	subs	r0, r0, r5
 8006fe0:	4540      	cmp	r0, r8
 8006fe2:	d9ce      	bls.n	8006f82 <HAL_RCC_OscConfig+0x4f6>
 8006fe4:	e63e      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006fe6:	f7fc fe45 	bl	8003c74 <HAL_GetTick>
 8006fea:	1b40      	subs	r0, r0, r5
 8006fec:	4540      	cmp	r0, r8
 8006fee:	d9d9      	bls.n	8006fa4 <HAL_RCC_OscConfig+0x518>
 8006ff0:	e638      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006ff2:	f241 3888 	movw	r8, #5000	@ 0x1388
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8006ff6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006ffa:	f8c6 30f0 	str.w	r3, [r6, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 8006ffe:	4e09      	ldr	r6, [pc, #36]	@ (8007024 <HAL_RCC_OscConfig+0x598>)
 8007000:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 8007004:	0519      	lsls	r1, r3, #20
 8007006:	d5d1      	bpl.n	8006fac <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007008:	f7fc fe34 	bl	8003c74 <HAL_GetTick>
 800700c:	1b40      	subs	r0, r0, r5
 800700e:	4540      	cmp	r0, r8
 8007010:	d9f6      	bls.n	8007000 <HAL_RCC_OscConfig+0x574>
 8007012:	e627      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007014:	f7fc fe2e 	bl	8003c74 <HAL_GetTick>
 8007018:	1b80      	subs	r0, r0, r6
 800701a:	4540      	cmp	r0, r8
 800701c:	f67f af55 	bls.w	8006eca <HAL_RCC_OscConfig+0x43e>
 8007020:	e620      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
 8007022:	bf00      	nop
 8007024:	46020c00 	.word	0x46020c00
 8007028:	46020800 	.word	0x46020800
    if (pRCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 800702c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800702e:	4d9b      	ldr	r5, [pc, #620]	@ (800729c <HAL_RCC_OscConfig+0x810>)
 8007030:	b17b      	cbz	r3, 8007052 <HAL_RCC_OscConfig+0x5c6>
      __HAL_RCC_HSI48_ENABLE();
 8007032:	682b      	ldr	r3, [r5, #0]
 8007034:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8007038:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800703a:	f7fc fe1b 	bl	8003c74 <HAL_GetTick>
 800703e:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) == 0U)
 8007040:	682b      	ldr	r3, [r5, #0]
 8007042:	049b      	lsls	r3, r3, #18
 8007044:	d4bd      	bmi.n	8006fc2 <HAL_RCC_OscConfig+0x536>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8007046:	f7fc fe15 	bl	8003c74 <HAL_GetTick>
 800704a:	1b80      	subs	r0, r0, r6
 800704c:	2802      	cmp	r0, #2
 800704e:	d9f7      	bls.n	8007040 <HAL_RCC_OscConfig+0x5b4>
 8007050:	e608      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_HSI48_DISABLE();
 8007052:	682b      	ldr	r3, [r5, #0]
 8007054:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007058:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800705a:	f7fc fe0b 	bl	8003c74 <HAL_GetTick>
 800705e:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) != 0U)
 8007060:	682b      	ldr	r3, [r5, #0]
 8007062:	049f      	lsls	r7, r3, #18
 8007064:	d5ad      	bpl.n	8006fc2 <HAL_RCC_OscConfig+0x536>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8007066:	f7fc fe05 	bl	8003c74 <HAL_GetTick>
 800706a:	1b80      	subs	r0, r0, r6
 800706c:	2802      	cmp	r0, #2
 800706e:	d9f7      	bls.n	8007060 <HAL_RCC_OscConfig+0x5d4>
 8007070:	e5f8      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
    if (pRCC_OscInitStruct->SHSIState != RCC_SHSI_OFF)
 8007072:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007074:	4d89      	ldr	r5, [pc, #548]	@ (800729c <HAL_RCC_OscConfig+0x810>)
 8007076:	b17b      	cbz	r3, 8007098 <HAL_RCC_OscConfig+0x60c>
      __HAL_RCC_SHSI_ENABLE();
 8007078:	682b      	ldr	r3, [r5, #0]
 800707a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800707e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007080:	f7fc fdf8 	bl	8003c74 <HAL_GetTick>
 8007084:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) == 0U)
 8007086:	682b      	ldr	r3, [r5, #0]
 8007088:	0419      	lsls	r1, r3, #16
 800708a:	d49d      	bmi.n	8006fc8 <HAL_RCC_OscConfig+0x53c>
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 800708c:	f7fc fdf2 	bl	8003c74 <HAL_GetTick>
 8007090:	1b80      	subs	r0, r0, r6
 8007092:	2802      	cmp	r0, #2
 8007094:	d9f7      	bls.n	8007086 <HAL_RCC_OscConfig+0x5fa>
 8007096:	e5e5      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_SHSI_DISABLE();
 8007098:	682b      	ldr	r3, [r5, #0]
 800709a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800709e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80070a0:	f7fc fde8 	bl	8003c74 <HAL_GetTick>
 80070a4:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) != 0U)
 80070a6:	682b      	ldr	r3, [r5, #0]
 80070a8:	041a      	lsls	r2, r3, #16
 80070aa:	d58d      	bpl.n	8006fc8 <HAL_RCC_OscConfig+0x53c>
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 80070ac:	f7fc fde2 	bl	8003c74 <HAL_GetTick>
 80070b0:	1b80      	subs	r0, r0, r6
 80070b2:	2802      	cmp	r0, #2
 80070b4:	d9f7      	bls.n	80070a6 <HAL_RCC_OscConfig+0x61a>
 80070b6:	e5d5      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
    if (pRCC_OscInitStruct->MSIKState != RCC_MSIK_OFF)
 80070b8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80070ba:	4d78      	ldr	r5, [pc, #480]	@ (800729c <HAL_RCC_OscConfig+0x810>)
 80070bc:	2b00      	cmp	r3, #0
 80070be:	d03a      	beq.n	8007136 <HAL_RCC_OscConfig+0x6aa>
      __HAL_RCC_MSIK_RANGE_CONFIG(pRCC_OscInitStruct->MSIKClockRange);
 80070c0:	68ab      	ldr	r3, [r5, #8]
 80070c2:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80070c6:	60ab      	str	r3, [r5, #8]
 80070c8:	68ab      	ldr	r3, [r5, #8]
 80070ca:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80070cc:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 80070d0:	4313      	orrs	r3, r2
 80070d2:	60ab      	str	r3, [r5, #8]
      __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 80070d4:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
 80070d8:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 80070dc:	d316      	bcc.n	800710c <HAL_RCC_OscConfig+0x680>
 80070de:	68eb      	ldr	r3, [r5, #12]
 80070e0:	f023 031f 	bic.w	r3, r3, #31
 80070e4:	4313      	orrs	r3, r2
 80070e6:	60eb      	str	r3, [r5, #12]
      __HAL_RCC_MSIK_ENABLE();
 80070e8:	4d6c      	ldr	r5, [pc, #432]	@ (800729c <HAL_RCC_OscConfig+0x810>)
 80070ea:	682b      	ldr	r3, [r5, #0]
 80070ec:	f043 0310 	orr.w	r3, r3, #16
 80070f0:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80070f2:	f7fc fdbf 	bl	8003c74 <HAL_GetTick>
 80070f6:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) == 0U)
 80070f8:	682b      	ldr	r3, [r5, #0]
 80070fa:	069b      	lsls	r3, r3, #26
 80070fc:	f53f af67 	bmi.w	8006fce <HAL_RCC_OscConfig+0x542>
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 8007100:	f7fc fdb8 	bl	8003c74 <HAL_GetTick>
 8007104:	1b80      	subs	r0, r0, r6
 8007106:	2802      	cmp	r0, #2
 8007108:	d9f6      	bls.n	80070f8 <HAL_RCC_OscConfig+0x66c>
 800710a:	e5ab      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 800710c:	2b00      	cmp	r3, #0
 800710e:	da05      	bge.n	800711c <HAL_RCC_OscConfig+0x690>
 8007110:	68eb      	ldr	r3, [r5, #12]
 8007112:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8007116:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800711a:	e7e4      	b.n	80070e6 <HAL_RCC_OscConfig+0x65a>
 800711c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007120:	68eb      	ldr	r3, [r5, #12]
 8007122:	bf2b      	itete	cs
 8007124:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8007128:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 800712c:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8007130:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8007134:	e7d7      	b.n	80070e6 <HAL_RCC_OscConfig+0x65a>
      __HAL_RCC_MSIK_DISABLE();
 8007136:	682b      	ldr	r3, [r5, #0]
 8007138:	f023 0310 	bic.w	r3, r3, #16
 800713c:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800713e:	f7fc fd99 	bl	8003c74 <HAL_GetTick>
 8007142:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) != 0U)
 8007144:	682b      	ldr	r3, [r5, #0]
 8007146:	069f      	lsls	r7, r3, #26
 8007148:	f57f af41 	bpl.w	8006fce <HAL_RCC_OscConfig+0x542>
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 800714c:	f7fc fd92 	bl	8003c74 <HAL_GetTick>
 8007150:	1b80      	subs	r0, r0, r6
 8007152:	2802      	cmp	r0, #2
 8007154:	d9f6      	bls.n	8007144 <HAL_RCC_OscConfig+0x6b8>
 8007156:	e585      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8007158:	4d50      	ldr	r5, [pc, #320]	@ (800729c <HAL_RCC_OscConfig+0x810>)
 800715a:	69eb      	ldr	r3, [r5, #28]
 800715c:	f003 030c 	and.w	r3, r3, #12
 8007160:	2b0c      	cmp	r3, #12
 8007162:	f000 80a1 	beq.w	80072a8 <HAL_RCC_OscConfig+0x81c>
        __HAL_RCC_PLL_DISABLE();
 8007166:	682b      	ldr	r3, [r5, #0]
      if ((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007168:	2902      	cmp	r1, #2
        __HAL_RCC_PLL_DISABLE();
 800716a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800716e:	602b      	str	r3, [r5, #0]
      if ((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007170:	f040 8081 	bne.w	8007276 <HAL_RCC_OscConfig+0x7ea>
        tickstart = HAL_GetTick();
 8007174:	f7fc fd7e 	bl	8003c74 <HAL_GetTick>
 8007178:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 800717a:	6829      	ldr	r1, [r5, #0]
 800717c:	f011 7100 	ands.w	r1, r1, #33554432	@ 0x2000000
 8007180:	d16d      	bne.n	800725e <HAL_RCC_OscConfig+0x7d2>
        if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007182:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007186:	075e      	lsls	r6, r3, #29
 8007188:	d40c      	bmi.n	80071a4 <HAL_RCC_OscConfig+0x718>
          pwrclkchanged = SET;
 800718a:	2101      	movs	r1, #1
          __HAL_RCC_PWR_CLK_ENABLE();
 800718c:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007190:	f043 0304 	orr.w	r3, r3, #4
 8007194:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8007198:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800719c:	f003 0304 	and.w	r3, r3, #4
 80071a0:	9303      	str	r3, [sp, #12]
 80071a2:	9b03      	ldr	r3, [sp, #12]
        if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) == PWR_VOSR_BOOSTEN)
 80071a4:	4d3e      	ldr	r5, [pc, #248]	@ (80072a0 <HAL_RCC_OscConfig+0x814>)
 80071a6:	68ee      	ldr	r6, [r5, #12]
        CLEAR_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 80071a8:	68eb      	ldr	r3, [r5, #12]
 80071aa:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80071ae:	60eb      	str	r3, [r5, #12]
        __HAL_RCC_PLL_CONFIG(pRCC_OscInitStruct->PLL.PLLSource,
 80071b0:	4b3a      	ldr	r3, [pc, #232]	@ (800729c <HAL_RCC_OscConfig+0x810>)
 80071b2:	6c67      	ldr	r7, [r4, #68]	@ 0x44
 80071b4:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 80071b6:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 80071b8:	f420 407f 	bic.w	r0, r0, #65280	@ 0xff00
 80071bc:	433a      	orrs	r2, r7
 80071be:	f020 0003 	bic.w	r0, r0, #3
 80071c2:	4302      	orrs	r2, r0
 80071c4:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 80071c6:	3801      	subs	r0, #1
 80071c8:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80071cc:	629a      	str	r2, [r3, #40]	@ 0x28
 80071ce:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 80071d0:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
 80071d2:	4834      	ldr	r0, [pc, #208]	@ (80072a4 <HAL_RCC_OscConfig+0x818>)
 80071d4:	3a01      	subs	r2, #1
 80071d6:	4038      	ands	r0, r7
 80071d8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80071dc:	4302      	orrs	r2, r0
 80071de:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 80071e0:	3801      	subs	r0, #1
 80071e2:	0240      	lsls	r0, r0, #9
 80071e4:	b280      	uxth	r0, r0
 80071e6:	4302      	orrs	r2, r0
 80071e8:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 80071ea:	3801      	subs	r0, #1
 80071ec:	0400      	lsls	r0, r0, #16
 80071ee:	f400 00fe 	and.w	r0, r0, #8323072	@ 0x7f0000
 80071f2:	4302      	orrs	r2, r0
 80071f4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 80071f6:	3801      	subs	r0, #1
 80071f8:	0600      	lsls	r0, r0, #24
 80071fa:	f000 40fe 	and.w	r0, r0, #2130706432	@ 0x7f000000
 80071fe:	4302      	orrs	r2, r0
 8007200:	635a      	str	r2, [r3, #52]	@ 0x34
        __HAL_RCC_PLL_FRACN_DISABLE();
 8007202:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007204:	f022 0210 	bic.w	r2, r2, #16
 8007208:	629a      	str	r2, [r3, #40]	@ 0x28
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 800720a:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 800720c:	00d2      	lsls	r2, r2, #3
 800720e:	639a      	str	r2, [r3, #56]	@ 0x38
        __HAL_RCC_PLL_FRACN_ENABLE();
 8007210:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007212:	f042 0210 	orr.w	r2, r2, #16
 8007216:	629a      	str	r2, [r3, #40]	@ 0x28
        __HAL_RCC_PLL_VCIRANGE(pRCC_OscInitStruct->PLL.PLLRGE);
 8007218:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800721a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800721c:	f022 020c 	bic.w	r2, r2, #12
 8007220:	4302      	orrs	r2, r0
 8007222:	629a      	str	r2, [r3, #40]	@ 0x28
        if (pwrboosten == SET)
 8007224:	0370      	lsls	r0, r6, #13
          SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8007226:	bf42      	ittt	mi
 8007228:	68ea      	ldrmi	r2, [r5, #12]
 800722a:	f442 2280 	orrmi.w	r2, r2, #262144	@ 0x40000
 800722e:	60ea      	strmi	r2, [r5, #12]
        if (pwrclkchanged == SET)
 8007230:	b129      	cbz	r1, 800723e <HAL_RCC_OscConfig+0x7b2>
          __HAL_RCC_PWR_CLK_DISABLE();
 8007232:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8007236:	f022 0204 	bic.w	r2, r2, #4
 800723a:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
        __HAL_RCC_PLL_ENABLE();
 800723e:	681a      	ldr	r2, [r3, #0]
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 8007240:	4c16      	ldr	r4, [pc, #88]	@ (800729c <HAL_RCC_OscConfig+0x810>)
        __HAL_RCC_PLL_ENABLE();
 8007242:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 8007246:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007248:	f7fc fd14 	bl	8003c74 <HAL_GetTick>
 800724c:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 800724e:	6823      	ldr	r3, [r4, #0]
 8007250:	019a      	lsls	r2, r3, #6
 8007252:	d50a      	bpl.n	800726a <HAL_RCC_OscConfig+0x7de>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 8007254:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8007256:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800725a:	62a3      	str	r3, [r4, #40]	@ 0x28
 800725c:	e6bb      	b.n	8006fd6 <HAL_RCC_OscConfig+0x54a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800725e:	f7fc fd09 	bl	8003c74 <HAL_GetTick>
 8007262:	1b80      	subs	r0, r0, r6
 8007264:	2802      	cmp	r0, #2
 8007266:	d988      	bls.n	800717a <HAL_RCC_OscConfig+0x6ee>
 8007268:	e4fc      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800726a:	f7fc fd03 	bl	8003c74 <HAL_GetTick>
 800726e:	1b40      	subs	r0, r0, r5
 8007270:	2802      	cmp	r0, #2
 8007272:	d9ec      	bls.n	800724e <HAL_RCC_OscConfig+0x7c2>
 8007274:	e4f6      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
        tickstart = HAL_GetTick();
 8007276:	f7fc fcfd 	bl	8003c74 <HAL_GetTick>
 800727a:	4604      	mov	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 800727c:	682b      	ldr	r3, [r5, #0]
 800727e:	019b      	lsls	r3, r3, #6
 8007280:	d406      	bmi.n	8007290 <HAL_RCC_OscConfig+0x804>
        RCC->PLL1CFGR &= ~(RCC_PLL1CFGR_PLL1SRC | RCC_PLL1CFGR_PLL1PEN | RCC_PLL1CFGR_PLL1QEN | RCC_PLL1CFGR_PLL1REN);
 8007282:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8007284:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 8007288:	f023 0303 	bic.w	r3, r3, #3
 800728c:	62ab      	str	r3, [r5, #40]	@ 0x28
 800728e:	e6a2      	b.n	8006fd6 <HAL_RCC_OscConfig+0x54a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007290:	f7fc fcf0 	bl	8003c74 <HAL_GetTick>
 8007294:	1b00      	subs	r0, r0, r4
 8007296:	2802      	cmp	r0, #2
 8007298:	d9f0      	bls.n	800727c <HAL_RCC_OscConfig+0x7f0>
 800729a:	e4e3      	b.n	8006c64 <HAL_RCC_OscConfig+0x1d8>
 800729c:	46020c00 	.word	0x46020c00
 80072a0:	46020800 	.word	0x46020800
 80072a4:	80800000 	.word	0x80800000
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80072a8:	2901      	cmp	r1, #1
      temp1_pllckcfg = RCC->PLL1CFGR;
 80072aa:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
 80072ac:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80072ae:	f43f ac2c 	beq.w	8006b0a <HAL_RCC_OscConfig+0x7e>
 80072b2:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 80072b4:	f002 0103 	and.w	r1, r2, #3
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80072b8:	4281      	cmp	r1, r0
 80072ba:	f47f ac26 	bne.w	8006b0a <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 80072be:	6c21      	ldr	r1, [r4, #64]	@ 0x40
          ((READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1M) >> \
 80072c0:	f3c2 2003 	ubfx	r0, r2, #8, #4
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 80072c4:	3901      	subs	r1, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 80072c6:	4288      	cmp	r0, r1
 80072c8:	f47f ac1f 	bne.w	8006b0a <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 80072cc:	6c61      	ldr	r1, [r4, #68]	@ 0x44
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 80072ce:	f402 4270 	and.w	r2, r2, #61440	@ 0xf000
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 80072d2:	428a      	cmp	r2, r1
 80072d4:	f47f ac19 	bne.w	8006b0a <HAL_RCC_OscConfig+0x7e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 80072d8:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 80072da:	f3c3 0108 	ubfx	r1, r3, #0, #9
 80072de:	3a01      	subs	r2, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 80072e0:	4291      	cmp	r1, r2
 80072e2:	f47f ac12 	bne.w	8006b0a <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80072e6:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1P) >> \
 80072e8:	f3c3 2146 	ubfx	r1, r3, #9, #7
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80072ec:	3a01      	subs	r2, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 80072ee:	4291      	cmp	r1, r2
 80072f0:	f47f ac0b 	bne.w	8006b0a <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80072f4:	6d22      	ldr	r2, [r4, #80]	@ 0x50
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1Q) >> \
 80072f6:	f3c3 4106 	ubfx	r1, r3, #16, #7
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80072fa:	3a01      	subs	r2, #1
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80072fc:	4291      	cmp	r1, r2
 80072fe:	f47f ac04 	bne.w	8006b0a <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1R_Pos) != (pRCC_OscInitStruct->PLL.PLLR - 1U)))
 8007302:	6d62      	ldr	r2, [r4, #84]	@ 0x54
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1R) >> \
 8007304:	f3c3 6306 	ubfx	r3, r3, #24, #7
            RCC_PLL1DIVR_PLL1R_Pos) != (pRCC_OscInitStruct->PLL.PLLR - 1U)))
 8007308:	3a01      	subs	r2, #1
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 800730a:	4293      	cmp	r3, r2
 800730c:	f47f abfd 	bne.w	8006b0a <HAL_RCC_OscConfig+0x7e>
      if ((READ_BIT(RCC->PLL1FRACR, RCC_PLL1FRACR_PLL1FRACN) >> \
 8007310:	4b0d      	ldr	r3, [pc, #52]	@ (8007348 <HAL_RCC_OscConfig+0x8bc>)
 8007312:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 8007314:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007316:	f3c2 02cc 	ubfx	r2, r2, #3, #13
 800731a:	428a      	cmp	r2, r1
 800731c:	f43f ae5b 	beq.w	8006fd6 <HAL_RCC_OscConfig+0x54a>
        __HAL_RCC_PLL_FRACN_DISABLE();
 8007320:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007322:	f022 0210 	bic.w	r2, r2, #16
 8007326:	629a      	str	r2, [r3, #40]	@ 0x28
        tickstart = HAL_GetTick();
 8007328:	f7fc fca4 	bl	8003c74 <HAL_GetTick>
 800732c:	4605      	mov	r5, r0
        while ((HAL_GetTick() - tickstart) < PLL_FRAC_WAIT_VALUE)
 800732e:	f7fc fca1 	bl	8003c74 <HAL_GetTick>
 8007332:	42a8      	cmp	r0, r5
 8007334:	d0fb      	beq.n	800732e <HAL_RCC_OscConfig+0x8a2>
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 8007336:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8007338:	4b03      	ldr	r3, [pc, #12]	@ (8007348 <HAL_RCC_OscConfig+0x8bc>)
 800733a:	00d2      	lsls	r2, r2, #3
 800733c:	639a      	str	r2, [r3, #56]	@ 0x38
        __HAL_RCC_PLL_FRACN_ENABLE();
 800733e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007340:	f042 0210 	orr.w	r2, r2, #16
 8007344:	629a      	str	r2, [r3, #40]	@ 0x28
 8007346:	e646      	b.n	8006fd6 <HAL_RCC_OscConfig+0x54a>
 8007348:	46020c00 	.word	0x46020c00

0800734c <HAL_RCC_GetPCLK1Freq>:
{
 800734c:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR2 & RCC_CFGR2_PPRE1) >> RCC_CFGR2_PPRE1_Pos]);
 800734e:	f7ff fb89 	bl	8006a64 <HAL_RCC_GetHCLKFreq>
 8007352:	4b04      	ldr	r3, [pc, #16]	@ (8007364 <HAL_RCC_GetPCLK1Freq+0x18>)
 8007354:	4a04      	ldr	r2, [pc, #16]	@ (8007368 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007356:	6a1b      	ldr	r3, [r3, #32]
 8007358:	f3c3 1302 	ubfx	r3, r3, #4, #3
 800735c:	5cd3      	ldrb	r3, [r2, r3]
}
 800735e:	40d8      	lsrs	r0, r3
 8007360:	bd08      	pop	{r3, pc}
 8007362:	bf00      	nop
 8007364:	46020c00 	.word	0x46020c00
 8007368:	08035584 	.word	0x08035584

0800736c <HAL_RCC_GetClockConfig>:
  pRCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | \
 800736c:	231f      	movs	r3, #31
 800736e:	6003      	str	r3, [r0, #0]
  pRCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR1 & RCC_CFGR1_SW);
 8007370:	4b0d      	ldr	r3, [pc, #52]	@ (80073a8 <HAL_RCC_GetClockConfig+0x3c>)
 8007372:	69da      	ldr	r2, [r3, #28]
 8007374:	f002 0203 	and.w	r2, r2, #3
 8007378:	6042      	str	r2, [r0, #4]
  pRCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_HPRE);
 800737a:	6a1a      	ldr	r2, [r3, #32]
 800737c:	f002 020f 	and.w	r2, r2, #15
 8007380:	6082      	str	r2, [r0, #8]
  pRCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PPRE1);
 8007382:	6a1a      	ldr	r2, [r3, #32]
 8007384:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8007388:	60c2      	str	r2, [r0, #12]
  pRCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4);
 800738a:	6a1a      	ldr	r2, [r3, #32]
 800738c:	0912      	lsrs	r2, r2, #4
 800738e:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8007392:	6102      	str	r2, [r0, #16]
  pRCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->CFGR3 & RCC_CFGR3_PPRE3);
 8007394:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007396:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800739a:	6143      	str	r3, [r0, #20]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800739c:	4b03      	ldr	r3, [pc, #12]	@ (80073ac <HAL_RCC_GetClockConfig+0x40>)
 800739e:	681b      	ldr	r3, [r3, #0]
 80073a0:	f003 030f 	and.w	r3, r3, #15
 80073a4:	600b      	str	r3, [r1, #0]
}
 80073a6:	4770      	bx	lr
 80073a8:	46020c00 	.word	0x46020c00
 80073ac:	40022000 	.word	0x40022000

080073b0 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2)
{
 80073b0:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_RCC_PLLP_VALUE(pll2->PLL2P));
  assert_param(IS_RCC_PLLQ_VALUE(pll2->PLL2Q));
  assert_param(IS_RCC_PLLR_VALUE(pll2->PLL2R));

  /* Disable  PLL2 */
  __HAL_RCC_PLL2_DISABLE();
 80073b2:	4c33      	ldr	r4, [pc, #204]	@ (8007480 <RCCEx_PLL2_Config+0xd0>)
{
 80073b4:	4605      	mov	r5, r0
  __HAL_RCC_PLL2_DISABLE();
 80073b6:	6823      	ldr	r3, [r4, #0]
 80073b8:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80073bc:	6023      	str	r3, [r4, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 80073be:	f7fc fc59 	bl	8003c74 <HAL_GetTick>
 80073c2:	4606      	mov	r6, r0

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 80073c4:	6823      	ldr	r3, [r4, #0]
 80073c6:	011a      	lsls	r2, r3, #4
 80073c8:	d44d      	bmi.n	8007466 <RCCEx_PLL2_Config+0xb6>
      return HAL_TIMEOUT;
    }
  }

  /* Configure PLL2 multiplication and division factors */
  __HAL_RCC_PLL2_CONFIG(pll2->PLL2Source,
 80073ca:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80073cc:	6829      	ldr	r1, [r5, #0]
 80073ce:	686a      	ldr	r2, [r5, #4]
 80073d0:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80073d4:	f023 0303 	bic.w	r3, r3, #3
 80073d8:	3a01      	subs	r2, #1
 80073da:	430b      	orrs	r3, r1
 80073dc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80073e0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80073e2:	68ab      	ldr	r3, [r5, #8]
 80073e4:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 80073e6:	4a27      	ldr	r2, [pc, #156]	@ (8007484 <RCCEx_PLL2_Config+0xd4>)
 80073e8:	3b01      	subs	r3, #1
 80073ea:	400a      	ands	r2, r1
 80073ec:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80073f0:	4313      	orrs	r3, r2
 80073f2:	68ea      	ldr	r2, [r5, #12]
 80073f4:	3a01      	subs	r2, #1
 80073f6:	0252      	lsls	r2, r2, #9
 80073f8:	b292      	uxth	r2, r2
 80073fa:	4313      	orrs	r3, r2
 80073fc:	692a      	ldr	r2, [r5, #16]
 80073fe:	3a01      	subs	r2, #1
 8007400:	0412      	lsls	r2, r2, #16
 8007402:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 8007406:	4313      	orrs	r3, r2
 8007408:	696a      	ldr	r2, [r5, #20]
 800740a:	3a01      	subs	r2, #1
 800740c:	0612      	lsls	r2, r2, #24
 800740e:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 8007412:	4313      	orrs	r3, r2
 8007414:	63e3      	str	r3, [r4, #60]	@ 0x3c
                        pll2->PLL2P,
                        pll2->PLL2Q,
                        pll2->PLL2R);

  /* Select PLL2 input reference frequency range: VCI */
  __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE);
 8007416:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007418:	69aa      	ldr	r2, [r5, #24]
 800741a:	f023 030c 	bic.w	r3, r3, #12
 800741e:	4313      	orrs	r3, r2
 8007420:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Configure the PLL2 Clock output(s) */
  __HAL_RCC_PLL2CLKOUT_ENABLE(pll2->PLL2ClockOut);
 8007422:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007424:	6a2a      	ldr	r2, [r5, #32]
 8007426:	4313      	orrs	r3, r2
 8007428:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Disable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_DISABLE();
 800742a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800742c:	f023 0310 	bic.w	r3, r3, #16
 8007430:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 8007432:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8007434:	69ea      	ldr	r2, [r5, #28]
 8007436:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800743a:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800743e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007442:	6423      	str	r3, [r4, #64]	@ 0x40

  /* Enable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_ENABLE();
 8007444:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c

  /* Get Start Tick*/
  tickstart = HAL_GetTick();

  /* Wait till PLL2 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8007446:	4d0e      	ldr	r5, [pc, #56]	@ (8007480 <RCCEx_PLL2_Config+0xd0>)
  __HAL_RCC_PLL2FRACN_ENABLE();
 8007448:	f043 0310 	orr.w	r3, r3, #16
 800744c:	62e3      	str	r3, [r4, #44]	@ 0x2c
  __HAL_RCC_PLL2_ENABLE();
 800744e:	6823      	ldr	r3, [r4, #0]
 8007450:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8007454:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8007456:	f7fc fc0d 	bl	8003c74 <HAL_GetTick>
 800745a:	4604      	mov	r4, r0
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 800745c:	682b      	ldr	r3, [r5, #0]
 800745e:	011b      	lsls	r3, r3, #4
 8007460:	d508      	bpl.n	8007474 <RCCEx_PLL2_Config+0xc4>
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007462:	2000      	movs	r0, #0
 8007464:	e005      	b.n	8007472 <RCCEx_PLL2_Config+0xc2>
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8007466:	f7fc fc05 	bl	8003c74 <HAL_GetTick>
 800746a:	1b80      	subs	r0, r0, r6
 800746c:	2802      	cmp	r0, #2
 800746e:	d9a9      	bls.n	80073c4 <RCCEx_PLL2_Config+0x14>
      return HAL_TIMEOUT;
 8007470:	2003      	movs	r0, #3

}
 8007472:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8007474:	f7fc fbfe 	bl	8003c74 <HAL_GetTick>
 8007478:	1b00      	subs	r0, r0, r4
 800747a:	2802      	cmp	r0, #2
 800747c:	d9ee      	bls.n	800745c <RCCEx_PLL2_Config+0xac>
 800747e:	e7f7      	b.n	8007470 <RCCEx_PLL2_Config+0xc0>
 8007480:	46020c00 	.word	0x46020c00
 8007484:	80800000 	.word	0x80800000

08007488 <RCCEx_PLL3_Config>:
  *         contains the configuration parameters as well as VCI clock ranges.
  * @note   PLL3 is temporary disabled to apply new parameters
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3)
{
 8007488:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_RCC_PLLP_VALUE(pll3->PLL3P));
  assert_param(IS_RCC_PLLQ_VALUE(pll3->PLL3Q));
  assert_param(IS_RCC_PLLR_VALUE(pll3->PLL3R));

  /* Disable  PLL3 */
  __HAL_RCC_PLL3_DISABLE();
 800748a:	4c33      	ldr	r4, [pc, #204]	@ (8007558 <RCCEx_PLL3_Config+0xd0>)
{
 800748c:	4605      	mov	r5, r0
  __HAL_RCC_PLL3_DISABLE();
 800748e:	6823      	ldr	r3, [r4, #0]
 8007490:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007494:	6023      	str	r3, [r4, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 8007496:	f7fc fbed 	bl	8003c74 <HAL_GetTick>
 800749a:	4606      	mov	r6, r0

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800749c:	6823      	ldr	r3, [r4, #0]
 800749e:	009a      	lsls	r2, r3, #2
 80074a0:	d44d      	bmi.n	800753e <RCCEx_PLL3_Config+0xb6>
      return HAL_TIMEOUT;
    }
  }

  /* Configure PLL3 multiplication and division factors */
  __HAL_RCC_PLL3_CONFIG(pll3->PLL3Source,
 80074a2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80074a4:	6829      	ldr	r1, [r5, #0]
 80074a6:	686a      	ldr	r2, [r5, #4]
 80074a8:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80074ac:	f023 0303 	bic.w	r3, r3, #3
 80074b0:	3a01      	subs	r2, #1
 80074b2:	430b      	orrs	r3, r1
 80074b4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80074b8:	6323      	str	r3, [r4, #48]	@ 0x30
 80074ba:	68ab      	ldr	r3, [r5, #8]
 80074bc:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 80074be:	4a27      	ldr	r2, [pc, #156]	@ (800755c <RCCEx_PLL3_Config+0xd4>)
 80074c0:	3b01      	subs	r3, #1
 80074c2:	400a      	ands	r2, r1
 80074c4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80074c8:	4313      	orrs	r3, r2
 80074ca:	68ea      	ldr	r2, [r5, #12]
 80074cc:	3a01      	subs	r2, #1
 80074ce:	0252      	lsls	r2, r2, #9
 80074d0:	b292      	uxth	r2, r2
 80074d2:	4313      	orrs	r3, r2
 80074d4:	692a      	ldr	r2, [r5, #16]
 80074d6:	3a01      	subs	r2, #1
 80074d8:	0412      	lsls	r2, r2, #16
 80074da:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 80074de:	4313      	orrs	r3, r2
 80074e0:	696a      	ldr	r2, [r5, #20]
 80074e2:	3a01      	subs	r2, #1
 80074e4:	0612      	lsls	r2, r2, #24
 80074e6:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 80074ea:	4313      	orrs	r3, r2
 80074ec:	6463      	str	r3, [r4, #68]	@ 0x44
                        pll3->PLL3P,
                        pll3->PLL3Q,
                        pll3->PLL3R);

  /* Select PLL3 input reference frequency range: VCI */
  __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE);
 80074ee:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80074f0:	69aa      	ldr	r2, [r5, #24]
 80074f2:	f023 030c 	bic.w	r3, r3, #12
 80074f6:	4313      	orrs	r3, r2
 80074f8:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Configure the PLL3 Clock output(s) */
  __HAL_RCC_PLL3CLKOUT_ENABLE(pll3->PLL3ClockOut);
 80074fa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80074fc:	6a2a      	ldr	r2, [r5, #32]
 80074fe:	4313      	orrs	r3, r2
 8007500:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Disable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_DISABLE();
 8007502:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007504:	f023 0310 	bic.w	r3, r3, #16
 8007508:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 800750a:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800750c:	69ea      	ldr	r2, [r5, #28]
 800750e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007512:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8007516:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800751a:	64a3      	str	r3, [r4, #72]	@ 0x48

  /* Enable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_ENABLE();
 800751c:	6b23      	ldr	r3, [r4, #48]	@ 0x30

  /* Get Start Tick*/
  tickstart = HAL_GetTick();

  /* Wait till PLL3 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 800751e:	4d0e      	ldr	r5, [pc, #56]	@ (8007558 <RCCEx_PLL3_Config+0xd0>)
  __HAL_RCC_PLL3FRACN_ENABLE();
 8007520:	f043 0310 	orr.w	r3, r3, #16
 8007524:	6323      	str	r3, [r4, #48]	@ 0x30
  __HAL_RCC_PLL3_ENABLE();
 8007526:	6823      	ldr	r3, [r4, #0]
 8007528:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800752c:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 800752e:	f7fc fba1 	bl	8003c74 <HAL_GetTick>
 8007532:	4604      	mov	r4, r0
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8007534:	682b      	ldr	r3, [r5, #0]
 8007536:	009b      	lsls	r3, r3, #2
 8007538:	d508      	bpl.n	800754c <RCCEx_PLL3_Config+0xc4>
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800753a:	2000      	movs	r0, #0
 800753c:	e005      	b.n	800754a <RCCEx_PLL3_Config+0xc2>
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800753e:	f7fc fb99 	bl	8003c74 <HAL_GetTick>
 8007542:	1b80      	subs	r0, r0, r6
 8007544:	2802      	cmp	r0, #2
 8007546:	d9a9      	bls.n	800749c <RCCEx_PLL3_Config+0x14>
      return HAL_TIMEOUT;
 8007548:	2003      	movs	r0, #3
}
 800754a:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800754c:	f7fc fb92 	bl	8003c74 <HAL_GetTick>
 8007550:	1b00      	subs	r0, r0, r4
 8007552:	2802      	cmp	r0, #2
 8007554:	d9ee      	bls.n	8007534 <RCCEx_PLL3_Config+0xac>
 8007556:	e7f7      	b.n	8007548 <RCCEx_PLL3_Config+0xc0>
 8007558:	46020c00 	.word	0x46020c00
 800755c:	80800000 	.word	0x80800000

08007560 <HAL_RCCEx_PeriphCLKConfig>:
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8007560:	6803      	ldr	r3, [r0, #0]
{
 8007562:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8007566:	07da      	lsls	r2, r3, #31
{
 8007568:	4605      	mov	r5, r0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 800756a:	d508      	bpl.n	800757e <HAL_RCCEx_PeriphCLKConfig+0x1e>
    __HAL_RCC_USART1_CONFIG(pPeriphClkInit->Usart1ClockSelection);
 800756c:	49a5      	ldr	r1, [pc, #660]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800756e:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 8007570:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007574:	f022 0203 	bic.w	r2, r2, #3
 8007578:	4302      	orrs	r2, r0
 800757a:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 800757e:	079f      	lsls	r7, r3, #30
 8007580:	d508      	bpl.n	8007594 <HAL_RCCEx_PeriphCLKConfig+0x34>
    __HAL_RCC_USART2_CONFIG(pPeriphClkInit->Usart2ClockSelection);
 8007582:	49a0      	ldr	r1, [pc, #640]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007584:	6d68      	ldr	r0, [r5, #84]	@ 0x54
 8007586:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 800758a:	f022 020c 	bic.w	r2, r2, #12
 800758e:	4302      	orrs	r2, r0
 8007590:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8007594:	075e      	lsls	r6, r3, #29
 8007596:	d508      	bpl.n	80075aa <HAL_RCCEx_PeriphCLKConfig+0x4a>
    __HAL_RCC_USART3_CONFIG(pPeriphClkInit->Usart3ClockSelection);
 8007598:	499a      	ldr	r1, [pc, #616]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800759a:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800759c:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80075a0:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 80075a4:	4302      	orrs	r2, r0
 80075a6:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 80075aa:	071c      	lsls	r4, r3, #28
 80075ac:	d508      	bpl.n	80075c0 <HAL_RCCEx_PeriphCLKConfig+0x60>
    __HAL_RCC_UART4_CONFIG(pPeriphClkInit->Uart4ClockSelection);
 80075ae:	4995      	ldr	r1, [pc, #596]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80075b0:	6de8      	ldr	r0, [r5, #92]	@ 0x5c
 80075b2:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80075b6:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 80075ba:	4302      	orrs	r2, r0
 80075bc:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 80075c0:	06d8      	lsls	r0, r3, #27
 80075c2:	d508      	bpl.n	80075d6 <HAL_RCCEx_PeriphCLKConfig+0x76>
    __HAL_RCC_UART5_CONFIG(pPeriphClkInit->Uart5ClockSelection);
 80075c4:	498f      	ldr	r1, [pc, #572]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80075c6:	6e28      	ldr	r0, [r5, #96]	@ 0x60
 80075c8:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80075cc:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80075d0:	4302      	orrs	r2, r0
 80075d2:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 80075d6:	0099      	lsls	r1, r3, #2
 80075d8:	d508      	bpl.n	80075ec <HAL_RCCEx_PeriphCLKConfig+0x8c>
    __HAL_RCC_USART6_CONFIG(pPeriphClkInit->Usart6ClockSelection);
 80075da:	498a      	ldr	r1, [pc, #552]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80075dc:	6e68      	ldr	r0, [r5, #100]	@ 0x64
 80075de:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 80075e2:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 80075e6:	4302      	orrs	r2, r0
 80075e8:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 80075ec:	069a      	lsls	r2, r3, #26
 80075ee:	d508      	bpl.n	8007602 <HAL_RCCEx_PeriphCLKConfig+0xa2>
    __HAL_RCC_LPUART1_CONFIG(pPeriphClkInit->Lpuart1ClockSelection);
 80075f0:	4984      	ldr	r1, [pc, #528]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80075f2:	6ea8      	ldr	r0, [r5, #104]	@ 0x68
 80075f4:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 80075f8:	f022 0207 	bic.w	r2, r2, #7
 80075fc:	4302      	orrs	r2, r0
 80075fe:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8007602:	065f      	lsls	r7, r3, #25
 8007604:	d508      	bpl.n	8007618 <HAL_RCCEx_PeriphCLKConfig+0xb8>
    __HAL_RCC_I2C1_CONFIG(pPeriphClkInit->I2c1ClockSelection);
 8007606:	497f      	ldr	r1, [pc, #508]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007608:	6ee8      	ldr	r0, [r5, #108]	@ 0x6c
 800760a:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 800760e:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 8007612:	4302      	orrs	r2, r0
 8007614:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8007618:	061e      	lsls	r6, r3, #24
 800761a:	d508      	bpl.n	800762e <HAL_RCCEx_PeriphCLKConfig+0xce>
    __HAL_RCC_I2C2_CONFIG(pPeriphClkInit->I2c2ClockSelection);
 800761c:	4979      	ldr	r1, [pc, #484]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800761e:	6f28      	ldr	r0, [r5, #112]	@ 0x70
 8007620:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007624:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8007628:	4302      	orrs	r2, r0
 800762a:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 800762e:	05dc      	lsls	r4, r3, #23
 8007630:	d508      	bpl.n	8007644 <HAL_RCCEx_PeriphCLKConfig+0xe4>
    __HAL_RCC_I2C3_CONFIG(pPeriphClkInit->I2c3ClockSelection);
 8007632:	4974      	ldr	r1, [pc, #464]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007634:	6f68      	ldr	r0, [r5, #116]	@ 0x74
 8007636:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 800763a:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 800763e:	4302      	orrs	r2, r0
 8007640:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8007644:	0258      	lsls	r0, r3, #9
 8007646:	d508      	bpl.n	800765a <HAL_RCCEx_PeriphCLKConfig+0xfa>
    __HAL_RCC_I2C4_CONFIG(pPeriphClkInit->I2c4ClockSelection);
 8007648:	496e      	ldr	r1, [pc, #440]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800764a:	6fa8      	ldr	r0, [r5, #120]	@ 0x78
 800764c:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007650:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8007654:	4302      	orrs	r2, r0
 8007656:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C5) == RCC_PERIPHCLK_I2C5)
 800765a:	0059      	lsls	r1, r3, #1
 800765c:	d508      	bpl.n	8007670 <HAL_RCCEx_PeriphCLKConfig+0x110>
    __HAL_RCC_I2C5_CONFIG(pPeriphClkInit->I2c5ClockSelection);
 800765e:	4969      	ldr	r1, [pc, #420]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007660:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
 8007662:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007666:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800766a:	4302      	orrs	r2, r0
 800766c:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C6) == RCC_PERIPHCLK_I2C6)
 8007670:	2b00      	cmp	r3, #0
 8007672:	da09      	bge.n	8007688 <HAL_RCCEx_PeriphCLKConfig+0x128>
    __HAL_RCC_I2C6_CONFIG(pPeriphClkInit->I2c6ClockSelection);
 8007674:	4963      	ldr	r1, [pc, #396]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007676:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
 800767a:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 800767e:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 8007682:	4302      	orrs	r2, r0
 8007684:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 8007688:	059a      	lsls	r2, r3, #22
 800768a:	d509      	bpl.n	80076a0 <HAL_RCCEx_PeriphCLKConfig+0x140>
    __HAL_RCC_LPTIM1_CONFIG(pPeriphClkInit->Lptim1ClockSelection);
 800768c:	495d      	ldr	r1, [pc, #372]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800768e:	f8d5 0084 	ldr.w	r0, [r5, #132]	@ 0x84
 8007692:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007696:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 800769a:	4302      	orrs	r2, r0
 800769c:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 80076a0:	055f      	lsls	r7, r3, #21
 80076a2:	d509      	bpl.n	80076b8 <HAL_RCCEx_PeriphCLKConfig+0x158>
    __HAL_RCC_LPTIM2_CONFIG(pPeriphClkInit->Lptim2ClockSelection);
 80076a4:	4957      	ldr	r1, [pc, #348]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076a6:	f8d5 0088 	ldr.w	r0, [r5, #136]	@ 0x88
 80076aa:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80076ae:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 80076b2:	4302      	orrs	r2, r0
 80076b4:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM34) == (RCC_PERIPHCLK_LPTIM34))
 80076b8:	051e      	lsls	r6, r3, #20
 80076ba:	d509      	bpl.n	80076d0 <HAL_RCCEx_PeriphCLKConfig+0x170>
    __HAL_RCC_LPTIM34_CONFIG(pPeriphClkInit->Lptim34ClockSelection);
 80076bc:	4951      	ldr	r1, [pc, #324]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076be:	f8d5 008c 	ldr.w	r0, [r5, #140]	@ 0x8c
 80076c2:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 80076c6:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80076ca:	4302      	orrs	r2, r0
 80076cc:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 80076d0:	049c      	lsls	r4, r3, #18
 80076d2:	d527      	bpl.n	8007724 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    switch (pPeriphClkInit->Sai1ClockSelection)
 80076d4:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
 80076d8:	2b40      	cmp	r3, #64	@ 0x40
 80076da:	d025      	beq.n	8007728 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 80076dc:	d814      	bhi.n	8007708 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 80076de:	b34b      	cbz	r3, 8007734 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 80076e0:	2b20      	cmp	r3, #32
 80076e2:	d02f      	beq.n	8007744 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 80076e4:	2601      	movs	r6, #1
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 80076e6:	682b      	ldr	r3, [r5, #0]
 80076e8:	0458      	lsls	r0, r3, #17
 80076ea:	d50b      	bpl.n	8007704 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
    switch (pPeriphClkInit->Sai2ClockSelection)
 80076ec:	f8d5 30a0 	ldr.w	r3, [r5, #160]	@ 0xa0
 80076f0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80076f4:	d058      	beq.n	80077a8 <HAL_RCCEx_PeriphCLKConfig+0x248>
 80076f6:	d82a      	bhi.n	800774e <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 80076f8:	2b00      	cmp	r3, #0
 80076fa:	d05b      	beq.n	80077b4 <HAL_RCCEx_PeriphCLKConfig+0x254>
 80076fc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8007700:	d05e      	beq.n	80077c0 <HAL_RCCEx_PeriphCLKConfig+0x260>
 8007702:	2601      	movs	r6, #1
 8007704:	4634      	mov	r4, r6
 8007706:	e035      	b.n	8007774 <HAL_RCCEx_PeriphCLKConfig+0x214>
    switch (pPeriphClkInit->Sai1ClockSelection)
 8007708:	2b60      	cmp	r3, #96	@ 0x60
 800770a:	d001      	beq.n	8007710 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
 800770c:	2b80      	cmp	r3, #128	@ 0x80
 800770e:	d1e9      	bne.n	80076e4 <HAL_RCCEx_PeriphCLKConfig+0x184>
      __HAL_RCC_SAI1_CONFIG(pPeriphClkInit->Sai1ClockSelection);
 8007710:	4a3c      	ldr	r2, [pc, #240]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007712:	f8d5 109c 	ldr.w	r1, [r5, #156]	@ 0x9c
 8007716:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 800771a:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 800771e:	430b      	orrs	r3, r1
 8007720:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 8007724:	2600      	movs	r6, #0
 8007726:	e7de      	b.n	80076e6 <HAL_RCCEx_PeriphCLKConfig+0x186>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007728:	4a36      	ldr	r2, [pc, #216]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800772a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 800772c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007730:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007732:	e7ed      	b.n	8007710 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007734:	f105 0008 	add.w	r0, r5, #8
 8007738:	f7ff fe3a 	bl	80073b0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800773c:	4606      	mov	r6, r0
    if (ret == HAL_OK)
 800773e:	2800      	cmp	r0, #0
 8007740:	d1d1      	bne.n	80076e6 <HAL_RCCEx_PeriphCLKConfig+0x186>
 8007742:	e7e5      	b.n	8007710 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007744:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007748:	f7ff fe9e 	bl	8007488 <RCCEx_PLL3_Config>
 800774c:	e7f6      	b.n	800773c <HAL_RCCEx_PeriphCLKConfig+0x1dc>
    switch (pPeriphClkInit->Sai2ClockSelection)
 800774e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8007752:	d002      	beq.n	800775a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007754:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007758:	d1d3      	bne.n	8007702 <HAL_RCCEx_PeriphCLKConfig+0x1a2>
    switch (pPeriphClkInit->Sai1ClockSelection)
 800775a:	4634      	mov	r4, r6
    if (ret == HAL_OK)
 800775c:	2c00      	cmp	r4, #0
 800775e:	d134      	bne.n	80077ca <HAL_RCCEx_PeriphCLKConfig+0x26a>
      __HAL_RCC_SAI2_CONFIG(pPeriphClkInit->Sai2ClockSelection);
 8007760:	4a28      	ldr	r2, [pc, #160]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007762:	f8d5 10a0 	ldr.w	r1, [r5, #160]	@ 0xa0
 8007766:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 800776a:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 800776e:	430b      	orrs	r3, r1
 8007770:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADCDAC) == RCC_PERIPHCLK_ADCDAC)
 8007774:	682b      	ldr	r3, [r5, #0]
 8007776:	0419      	lsls	r1, r3, #16
 8007778:	d50a      	bpl.n	8007790 <HAL_RCCEx_PeriphCLKConfig+0x230>
    switch (pPeriphClkInit->AdcDacClockSelection)
 800777a:	f8d5 30b4 	ldr.w	r3, [r5, #180]	@ 0xb4
 800777e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007782:	d036      	beq.n	80077f2 <HAL_RCCEx_PeriphCLKConfig+0x292>
 8007784:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8007788:	d821      	bhi.n	80077ce <HAL_RCCEx_PeriphCLKConfig+0x26e>
 800778a:	b332      	cbz	r2, 80077da <HAL_RCCEx_PeriphCLKConfig+0x27a>
 800778c:	2601      	movs	r6, #1
 800778e:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_MDF1) == RCC_PERIPHCLK_MDF1)
 8007790:	682b      	ldr	r3, [r5, #0]
 8007792:	03da      	lsls	r2, r3, #15
 8007794:	d548      	bpl.n	8007828 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
    switch (pPeriphClkInit->Mdf1ClockSelection)
 8007796:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800779a:	2b04      	cmp	r3, #4
 800779c:	d85a      	bhi.n	8007854 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 800779e:	e8df f003 	tbb	[pc, r3]
 80077a2:	3338      	.short	0x3338
 80077a4:	3853      	.short	0x3853
 80077a6:	38          	.byte	0x38
 80077a7:	00          	.byte	0x00
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 80077a8:	4a16      	ldr	r2, [pc, #88]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80077aa:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80077ac:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80077b0:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 80077b2:	e7d2      	b.n	800775a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80077b4:	f105 0008 	add.w	r0, r5, #8
 80077b8:	f7ff fdfa 	bl	80073b0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80077bc:	4604      	mov	r4, r0
        break;
 80077be:	e7cd      	b.n	800775c <HAL_RCCEx_PeriphCLKConfig+0x1fc>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80077c0:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 80077c4:	f7ff fe60 	bl	8007488 <RCCEx_PLL3_Config>
 80077c8:	e7f8      	b.n	80077bc <HAL_RCCEx_PeriphCLKConfig+0x25c>
 80077ca:	4626      	mov	r6, r4
 80077cc:	e7d2      	b.n	8007774 <HAL_RCCEx_PeriphCLKConfig+0x214>
    switch (pPeriphClkInit->AdcDacClockSelection)
 80077ce:	f5b2 4f80 	cmp.w	r2, #16384	@ 0x4000
 80077d2:	d002      	beq.n	80077da <HAL_RCCEx_PeriphCLKConfig+0x27a>
 80077d4:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 80077d8:	d1d8      	bne.n	800778c <HAL_RCCEx_PeriphCLKConfig+0x22c>
    if (ret == HAL_OK)
 80077da:	b984      	cbnz	r4, 80077fe <HAL_RCCEx_PeriphCLKConfig+0x29e>
      __HAL_RCC_ADCDAC_CONFIG(pPeriphClkInit->AdcDacClockSelection);
 80077dc:	4a09      	ldr	r2, [pc, #36]	@ (8007804 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80077de:	f8d5 10b4 	ldr.w	r1, [r5, #180]	@ 0xb4
 80077e2:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 80077e6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80077ea:	430b      	orrs	r3, r1
 80077ec:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 80077f0:	e7ce      	b.n	8007790 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80077f2:	f105 0008 	add.w	r0, r5, #8
 80077f6:	f7ff fddb 	bl	80073b0 <RCCEx_PLL2_Config>
 80077fa:	4604      	mov	r4, r0
        break;
 80077fc:	e7ed      	b.n	80077da <HAL_RCCEx_PeriphCLKConfig+0x27a>
 80077fe:	4626      	mov	r6, r4
 8007800:	e7c6      	b.n	8007790 <HAL_RCCEx_PeriphCLKConfig+0x230>
 8007802:	bf00      	nop
 8007804:	46020c00 	.word	0x46020c00
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007808:	4a69      	ldr	r2, [pc, #420]	@ (80079b0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800780a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 800780c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007810:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007812:	bb14      	cbnz	r4, 800785a <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      __HAL_RCC_MDF1_CONFIG(pPeriphClkInit->Mdf1ClockSelection);
 8007814:	4a66      	ldr	r2, [pc, #408]	@ (80079b0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007816:	f8d5 1094 	ldr.w	r1, [r5, #148]	@ 0x94
 800781a:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 800781e:	f023 0307 	bic.w	r3, r3, #7
 8007822:	430b      	orrs	r3, r1
 8007824:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADF1) == RCC_PERIPHCLK_ADF1)
 8007828:	682b      	ldr	r3, [r5, #0]
 800782a:	039b      	lsls	r3, r3, #14
 800782c:	d529      	bpl.n	8007882 <HAL_RCCEx_PeriphCLKConfig+0x322>
    switch (pPeriphClkInit->Adf1ClockSelection)
 800782e:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 8007832:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8007836:	d07d      	beq.n	8007934 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
 8007838:	d811      	bhi.n	800785e <HAL_RCCEx_PeriphCLKConfig+0x2fe>
 800783a:	b1b3      	cbz	r3, 800786a <HAL_RCCEx_PeriphCLKConfig+0x30a>
 800783c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007840:	d072      	beq.n	8007928 <HAL_RCCEx_PeriphCLKConfig+0x3c8>
 8007842:	2601      	movs	r6, #1
 8007844:	4634      	mov	r4, r6
 8007846:	e01c      	b.n	8007882 <HAL_RCCEx_PeriphCLKConfig+0x322>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007848:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 800784c:	f7ff fe1c 	bl	8007488 <RCCEx_PLL3_Config>
 8007850:	4604      	mov	r4, r0
        break;
 8007852:	e7de      	b.n	8007812 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
    switch (pPeriphClkInit->Mdf1ClockSelection)
 8007854:	2601      	movs	r6, #1
 8007856:	4634      	mov	r4, r6
 8007858:	e7e6      	b.n	8007828 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 800785a:	4626      	mov	r6, r4
 800785c:	e7e4      	b.n	8007828 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
    switch (pPeriphClkInit->Adf1ClockSelection)
 800785e:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8007862:	d002      	beq.n	800786a <HAL_RCCEx_PeriphCLKConfig+0x30a>
 8007864:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8007868:	d1eb      	bne.n	8007842 <HAL_RCCEx_PeriphCLKConfig+0x2e2>
    if (ret == HAL_OK)
 800786a:	2c00      	cmp	r4, #0
 800786c:	d168      	bne.n	8007940 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
      __HAL_RCC_ADF1_CONFIG(pPeriphClkInit->Adf1ClockSelection);
 800786e:	4a50      	ldr	r2, [pc, #320]	@ (80079b0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007870:	f8d5 1098 	ldr.w	r1, [r5, #152]	@ 0x98
 8007874:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 8007878:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 800787c:	430b      	orrs	r3, r1
 800787e:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  if ((pPeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8007882:	682b      	ldr	r3, [r5, #0]
 8007884:	035f      	lsls	r7, r3, #13
 8007886:	d53c      	bpl.n	8007902 <HAL_RCCEx_PeriphCLKConfig+0x3a2>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007888:	4b49      	ldr	r3, [pc, #292]	@ (80079b0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800788a:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 800788e:	0750      	lsls	r0, r2, #29
 8007890:	d458      	bmi.n	8007944 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
      pwrclkchanged = SET;
 8007892:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8007894:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8007898:	f042 0204 	orr.w	r2, r2, #4
 800789c:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 80078a0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80078a4:	f003 0304 	and.w	r3, r3, #4
 80078a8:	9301      	str	r3, [sp, #4]
 80078aa:	9b01      	ldr	r3, [sp, #4]
    SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 80078ac:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 80079b4 <HAL_RCCEx_PeriphCLKConfig+0x454>
 80078b0:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 80078b4:	f043 0301 	orr.w	r3, r3, #1
 80078b8:	f8c8 3028 	str.w	r3, [r8, #40]	@ 0x28
    tickstart = HAL_GetTick();
 80078bc:	f7fc f9da 	bl	8003c74 <HAL_GetTick>
 80078c0:	4681      	mov	r9, r0
    while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 80078c2:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 80078c6:	07d9      	lsls	r1, r3, #31
 80078c8:	d53e      	bpl.n	8007948 <HAL_RCCEx_PeriphCLKConfig+0x3e8>
    if (ret == HAL_OK)
 80078ca:	2c00      	cmp	r4, #0
 80078cc:	d16d      	bne.n	80079aa <HAL_RCCEx_PeriphCLKConfig+0x44a>
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 80078ce:	4b38      	ldr	r3, [pc, #224]	@ (80079b0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 80078d0:	f8d5 20d0 	ldr.w	r2, [r5, #208]	@ 0xd0
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 80078d4:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 80078d8:	f411 7140 	ands.w	r1, r1, #768	@ 0x300
 80078dc:	d13d      	bne.n	800795a <HAL_RCCEx_PeriphCLKConfig+0x3fa>
        __HAL_RCC_RTC_CONFIG(pPeriphClkInit->RTCClockSelection);
 80078de:	4a34      	ldr	r2, [pc, #208]	@ (80079b0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80078e0:	f8d5 10d0 	ldr.w	r1, [r5, #208]	@ 0xd0
 80078e4:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
 80078e8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80078ec:	430b      	orrs	r3, r1
 80078ee:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
    if (pwrclkchanged == SET)
 80078f2:	b137      	cbz	r7, 8007902 <HAL_RCCEx_PeriphCLKConfig+0x3a2>
      __HAL_RCC_PWR_CLK_DISABLE();
 80078f4:	4a2e      	ldr	r2, [pc, #184]	@ (80079b0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80078f6:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 80078fa:	f023 0304 	bic.w	r3, r3, #4
 80078fe:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ICLK) == RCC_PERIPHCLK_ICLK)
 8007902:	682b      	ldr	r3, [r5, #0]
 8007904:	02df      	lsls	r7, r3, #11
 8007906:	d567      	bpl.n	80079d8 <HAL_RCCEx_PeriphCLKConfig+0x478>
    switch (pPeriphClkInit->IclkClockSelection)
 8007908:	f8d5 30ac 	ldr.w	r3, [r5, #172]	@ 0xac
 800790c:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007910:	f000 8165 	beq.w	8007bde <HAL_RCCEx_PeriphCLKConfig+0x67e>
 8007914:	d850      	bhi.n	80079b8 <HAL_RCCEx_PeriphCLKConfig+0x458>
 8007916:	2b00      	cmp	r3, #0
 8007918:	d051      	beq.n	80079be <HAL_RCCEx_PeriphCLKConfig+0x45e>
 800791a:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800791e:	f000 8158 	beq.w	8007bd2 <HAL_RCCEx_PeriphCLKConfig+0x672>
 8007922:	2601      	movs	r6, #1
 8007924:	4634      	mov	r4, r6
 8007926:	e057      	b.n	80079d8 <HAL_RCCEx_PeriphCLKConfig+0x478>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007928:	4a21      	ldr	r2, [pc, #132]	@ (80079b0 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800792a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 800792c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007930:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 8007932:	e79a      	b.n	800786a <HAL_RCCEx_PeriphCLKConfig+0x30a>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007934:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007938:	f7ff fda6 	bl	8007488 <RCCEx_PLL3_Config>
 800793c:	4604      	mov	r4, r0
        break;
 800793e:	e794      	b.n	800786a <HAL_RCCEx_PeriphCLKConfig+0x30a>
 8007940:	4626      	mov	r6, r4
 8007942:	e79e      	b.n	8007882 <HAL_RCCEx_PeriphCLKConfig+0x322>
    FlagStatus       pwrclkchanged = RESET;
 8007944:	2700      	movs	r7, #0
 8007946:	e7b1      	b.n	80078ac <HAL_RCCEx_PeriphCLKConfig+0x34c>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007948:	f7fc f994 	bl	8003c74 <HAL_GetTick>
 800794c:	eba0 0009 	sub.w	r0, r0, r9
 8007950:	2802      	cmp	r0, #2
 8007952:	d9b6      	bls.n	80078c2 <HAL_RCCEx_PeriphCLKConfig+0x362>
        ret = HAL_TIMEOUT;
 8007954:	2603      	movs	r6, #3
 8007956:	4634      	mov	r4, r6
 8007958:	e7cb      	b.n	80078f2 <HAL_RCCEx_PeriphCLKConfig+0x392>
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 800795a:	4291      	cmp	r1, r2
 800795c:	d011      	beq.n	8007982 <HAL_RCCEx_PeriphCLKConfig+0x422>
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 800795e:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_FORCE();
 8007962:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8007966:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
 800796a:	f441 3180 	orr.w	r1, r1, #65536	@ 0x10000
 800796e:	f8c3 10f0 	str.w	r1, [r3, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_RELEASE();
 8007972:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
 8007976:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
 800797a:	f8c3 10f0 	str.w	r1, [r3, #240]	@ 0xf0
        RCC->BDCR = tmpregister;
 800797e:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 8007982:	07d2      	lsls	r2, r2, #31
 8007984:	d5ab      	bpl.n	80078de <HAL_RCCEx_PeriphCLKConfig+0x37e>
        tickstart = HAL_GetTick();
 8007986:	f7fc f975 	bl	8003c74 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800798a:	f241 3a88 	movw	sl, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 800798e:	4680      	mov	r8, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8007990:	f8df 901c 	ldr.w	r9, [pc, #28]	@ 80079b0 <HAL_RCCEx_PeriphCLKConfig+0x450>
 8007994:	f8d9 30f0 	ldr.w	r3, [r9, #240]	@ 0xf0
 8007998:	079b      	lsls	r3, r3, #30
 800799a:	d4a0      	bmi.n	80078de <HAL_RCCEx_PeriphCLKConfig+0x37e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800799c:	f7fc f96a 	bl	8003c74 <HAL_GetTick>
 80079a0:	eba0 0008 	sub.w	r0, r0, r8
 80079a4:	4550      	cmp	r0, sl
 80079a6:	d9f5      	bls.n	8007994 <HAL_RCCEx_PeriphCLKConfig+0x434>
 80079a8:	e7d4      	b.n	8007954 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 80079aa:	4626      	mov	r6, r4
 80079ac:	e7a1      	b.n	80078f2 <HAL_RCCEx_PeriphCLKConfig+0x392>
 80079ae:	bf00      	nop
 80079b0:	46020c00 	.word	0x46020c00
 80079b4:	46020800 	.word	0x46020800
    switch (pPeriphClkInit->IclkClockSelection)
 80079b8:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 80079bc:	d1b1      	bne.n	8007922 <HAL_RCCEx_PeriphCLKConfig+0x3c2>
    if (ret == HAL_OK)
 80079be:	2c00      	cmp	r4, #0
 80079c0:	f040 8113 	bne.w	8007bea <HAL_RCCEx_PeriphCLKConfig+0x68a>
      __HAL_RCC_CLK48_CONFIG(pPeriphClkInit->IclkClockSelection);
 80079c4:	4ab8      	ldr	r2, [pc, #736]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 80079c6:	f8d5 10ac 	ldr.w	r1, [r5, #172]	@ 0xac
 80079ca:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 80079ce:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 80079d2:	430b      	orrs	r3, r1
 80079d4:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 80079d8:	682b      	ldr	r3, [r5, #0]
 80079da:	0318      	lsls	r0, r3, #12
 80079dc:	d513      	bpl.n	8007a06 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (pPeriphClkInit->RngClockSelection)
 80079de:	f8d5 10a4 	ldr.w	r1, [r5, #164]	@ 0xa4
 80079e2:	f431 5280 	bics.w	r2, r1, #4096	@ 0x1000
 80079e6:	d003      	beq.n	80079f0 <HAL_RCCEx_PeriphCLKConfig+0x490>
 80079e8:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
 80079ec:	f040 80ff 	bne.w	8007bee <HAL_RCCEx_PeriphCLKConfig+0x68e>
    if (ret == HAL_OK)
 80079f0:	2c00      	cmp	r4, #0
 80079f2:	f040 80ff 	bne.w	8007bf4 <HAL_RCCEx_PeriphCLKConfig+0x694>
      __HAL_RCC_RNG_CONFIG(pPeriphClkInit->RngClockSelection);
 80079f6:	48ac      	ldr	r0, [pc, #688]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 80079f8:	f8d0 20e4 	ldr.w	r2, [r0, #228]	@ 0xe4
 80079fc:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8007a00:	430a      	orrs	r2, r1
 8007a02:	f8c0 20e4 	str.w	r2, [r0, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAES) == RCC_PERIPHCLK_SAES)
 8007a06:	04d9      	lsls	r1, r3, #19
 8007a08:	d509      	bpl.n	8007a1e <HAL_RCCEx_PeriphCLKConfig+0x4be>
    __HAL_RCC_SAES_CONFIG(pPeriphClkInit->SaesClockSelection);
 8007a0a:	49a7      	ldr	r1, [pc, #668]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a0c:	f8d5 00a8 	ldr.w	r0, [r5, #168]	@ 0xa8
 8007a10:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007a14:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8007a18:	4302      	orrs	r2, r0
 8007a1a:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == (RCC_PERIPHCLK_SDMMC))
 8007a1e:	029a      	lsls	r2, r3, #10
 8007a20:	d510      	bpl.n	8007a44 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    if (pPeriphClkInit->SdmmcClockSelection == RCC_SDMMCCLKSOURCE_PLL1)
 8007a22:	f8d5 00b0 	ldr.w	r0, [r5, #176]	@ 0xb0
 8007a26:	49a0      	ldr	r1, [pc, #640]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a28:	f5b0 4f80 	cmp.w	r0, #16384	@ 0x4000
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007a2c:	bf02      	ittt	eq
 8007a2e:	6a8a      	ldreq	r2, [r1, #40]	@ 0x28
 8007a30:	f442 3280 	orreq.w	r2, r2, #65536	@ 0x10000
 8007a34:	628a      	streq	r2, [r1, #40]	@ 0x28
    __HAL_RCC_SDMMC_CONFIG(pPeriphClkInit->SdmmcClockSelection);
 8007a36:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007a3a:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007a3e:	4302      	orrs	r2, r0
 8007a40:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI1) == RCC_PERIPHCLK_SPI1)
 8007a44:	021f      	lsls	r7, r3, #8
 8007a46:	d509      	bpl.n	8007a5c <HAL_RCCEx_PeriphCLKConfig+0x4fc>
    __HAL_RCC_SPI1_CONFIG(pPeriphClkInit->Spi1ClockSelection);
 8007a48:	4997      	ldr	r1, [pc, #604]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a4a:	f8d5 00c4 	ldr.w	r0, [r5, #196]	@ 0xc4
 8007a4e:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007a52:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 8007a56:	4302      	orrs	r2, r0
 8007a58:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI2) == RCC_PERIPHCLK_SPI2)
 8007a5c:	01d8      	lsls	r0, r3, #7
 8007a5e:	d509      	bpl.n	8007a74 <HAL_RCCEx_PeriphCLKConfig+0x514>
    __HAL_RCC_SPI2_CONFIG(pPeriphClkInit->Spi2ClockSelection);
 8007a60:	4991      	ldr	r1, [pc, #580]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a62:	f8d5 00c8 	ldr.w	r0, [r5, #200]	@ 0xc8
 8007a66:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007a6a:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8007a6e:	4302      	orrs	r2, r0
 8007a70:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI3) == RCC_PERIPHCLK_SPI3)
 8007a74:	0199      	lsls	r1, r3, #6
 8007a76:	d509      	bpl.n	8007a8c <HAL_RCCEx_PeriphCLKConfig+0x52c>
    __HAL_RCC_SPI3_CONFIG(pPeriphClkInit->Spi3ClockSelection);
 8007a78:	498b      	ldr	r1, [pc, #556]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a7a:	f8d5 00cc 	ldr.w	r0, [r5, #204]	@ 0xcc
 8007a7e:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007a82:	f022 0218 	bic.w	r2, r2, #24
 8007a86:	4302      	orrs	r2, r0
 8007a88:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 8007a8c:	015a      	lsls	r2, r3, #5
 8007a8e:	d517      	bpl.n	8007ac0 <HAL_RCCEx_PeriphCLKConfig+0x560>
    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL1)
 8007a90:	f8d5 30bc 	ldr.w	r3, [r5, #188]	@ 0xbc
 8007a94:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8007a98:	f040 80ae 	bne.w	8007bf8 <HAL_RCCEx_PeriphCLKConfig+0x698>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007a9c:	4a82      	ldr	r2, [pc, #520]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a9e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007aa0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007aa4:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007aa6:	2c00      	cmp	r4, #0
 8007aa8:	f040 80b0 	bne.w	8007c0c <HAL_RCCEx_PeriphCLKConfig+0x6ac>
      __HAL_RCC_OSPI_CONFIG(pPeriphClkInit->OspiClockSelection);
 8007aac:	4a7e      	ldr	r2, [pc, #504]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007aae:	f8d5 10bc 	ldr.w	r1, [r5, #188]	@ 0xbc
 8007ab2:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007ab6:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8007aba:	430b      	orrs	r3, r1
 8007abc:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HSPI) == RCC_PERIPHCLK_HSPI)
 8007ac0:	686b      	ldr	r3, [r5, #4]
 8007ac2:	07db      	lsls	r3, r3, #31
 8007ac4:	d510      	bpl.n	8007ae8 <HAL_RCCEx_PeriphCLKConfig+0x588>
    switch (pPeriphClkInit->HspiClockSelection)
 8007ac6:	f8d5 30c0 	ldr.w	r3, [r5, #192]	@ 0xc0
 8007aca:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8007ace:	f000 80b9 	beq.w	8007c44 <HAL_RCCEx_PeriphCLKConfig+0x6e4>
 8007ad2:	f200 809d 	bhi.w	8007c10 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
 8007ad6:	2b00      	cmp	r3, #0
 8007ad8:	f000 80a8 	beq.w	8007c2c <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 8007adc:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007ae0:	f000 809f 	beq.w	8007c22 <HAL_RCCEx_PeriphCLKConfig+0x6c2>
 8007ae4:	2601      	movs	r6, #1
 8007ae6:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN1) == (RCC_PERIPHCLK_FDCAN1))
 8007ae8:	682b      	ldr	r3, [r5, #0]
 8007aea:	011f      	lsls	r7, r3, #4
 8007aec:	d50e      	bpl.n	8007b0c <HAL_RCCEx_PeriphCLKConfig+0x5ac>
    switch (pPeriphClkInit->Fdcan1ClockSelection)
 8007aee:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8007af2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007af6:	f000 80ad 	beq.w	8007c54 <HAL_RCCEx_PeriphCLKConfig+0x6f4>
 8007afa:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8007afe:	f000 80ba 	beq.w	8007c76 <HAL_RCCEx_PeriphCLKConfig+0x716>
 8007b02:	2b00      	cmp	r3, #0
 8007b04:	f000 80ab 	beq.w	8007c5e <HAL_RCCEx_PeriphCLKConfig+0x6fe>
 8007b08:	2601      	movs	r6, #1
 8007b0a:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DAC1) == RCC_PERIPHCLK_DAC1)
 8007b0c:	e9d5 3100 	ldrd	r3, r1, [r5]
 8007b10:	00d8      	lsls	r0, r3, #3
 8007b12:	d509      	bpl.n	8007b28 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
    __HAL_RCC_DAC1_CONFIG(pPeriphClkInit->Dac1ClockSelection);
 8007b14:	4a64      	ldr	r2, [pc, #400]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007b16:	f8d5 00b8 	ldr.w	r0, [r5, #184]	@ 0xb8
 8007b1a:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 8007b1e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8007b22:	4303      	orrs	r3, r0
 8007b24:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8007b28:	0789      	lsls	r1, r1, #30
 8007b2a:	d51a      	bpl.n	8007b62 <HAL_RCCEx_PeriphCLKConfig+0x602>
    switch (pPeriphClkInit->LtdcClockSelection)
 8007b2c:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
 8007b30:	2b00      	cmp	r3, #0
 8007b32:	f000 80a8 	beq.w	8007c86 <HAL_RCCEx_PeriphCLKConfig+0x726>
 8007b36:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8007b3a:	f040 80a9 	bne.w	8007c90 <HAL_RCCEx_PeriphCLKConfig+0x730>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007b3e:	f105 0008 	add.w	r0, r5, #8
 8007b42:	f7ff fc35 	bl	80073b0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007b46:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007b48:	2800      	cmp	r0, #0
 8007b4a:	f040 80a4 	bne.w	8007c96 <HAL_RCCEx_PeriphCLKConfig+0x736>
      __HAL_RCC_LTDC_CONFIG(pPeriphClkInit->LtdcClockSelection);
 8007b4e:	4a56      	ldr	r2, [pc, #344]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007b50:	f8d5 10d4 	ldr.w	r1, [r5, #212]	@ 0xd4
 8007b54:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007b58:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8007b5c:	430b      	orrs	r3, r1
 8007b5e:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DSI) == RCC_PERIPHCLK_DSI)
 8007b62:	686b      	ldr	r3, [r5, #4]
 8007b64:	075a      	lsls	r2, r3, #29
 8007b66:	d514      	bpl.n	8007b92 <HAL_RCCEx_PeriphCLKConfig+0x632>
    if (pPeriphClkInit->DsiClockSelection == RCC_DSICLKSOURCE_PLL3)
 8007b68:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
 8007b6c:	b923      	cbnz	r3, 8007b78 <HAL_RCCEx_PeriphCLKConfig+0x618>
      ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007b6e:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007b72:	f7ff fc89 	bl	8007488 <RCCEx_PLL3_Config>
 8007b76:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007b78:	2c00      	cmp	r4, #0
 8007b7a:	f040 808e 	bne.w	8007c9a <HAL_RCCEx_PeriphCLKConfig+0x73a>
      __HAL_RCC_DSI_CONFIG(pPeriphClkInit->DsiClockSelection);
 8007b7e:	4a4a      	ldr	r2, [pc, #296]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007b80:	f8d5 10d8 	ldr.w	r1, [r5, #216]	@ 0xd8
 8007b84:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007b88:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8007b8c:	430b      	orrs	r3, r1
 8007b8e:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USBPHY) == RCC_PERIPHCLK_USBPHY)
 8007b92:	686b      	ldr	r3, [r5, #4]
 8007b94:	071b      	lsls	r3, r3, #28
 8007b96:	d517      	bpl.n	8007bc8 <HAL_RCCEx_PeriphCLKConfig+0x668>
    switch (pPeriphClkInit->UsbPhyClockSelection)
 8007b98:	f8d5 20dc 	ldr.w	r2, [r5, #220]	@ 0xdc
 8007b9c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8007ba0:	d009      	beq.n	8007bb6 <HAL_RCCEx_PeriphCLKConfig+0x656>
 8007ba2:	d87c      	bhi.n	8007c9e <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8007ba4:	b13a      	cbz	r2, 8007bb6 <HAL_RCCEx_PeriphCLKConfig+0x656>
 8007ba6:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 8007baa:	d17b      	bne.n	8007ca4 <HAL_RCCEx_PeriphCLKConfig+0x744>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007bac:	493e      	ldr	r1, [pc, #248]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007bae:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8007bb0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007bb4:	628b      	str	r3, [r1, #40]	@ 0x28
    if (ret == HAL_OK)
 8007bb6:	b944      	cbnz	r4, 8007bca <HAL_RCCEx_PeriphCLKConfig+0x66a>
      __HAL_RCC_USBPHY_CONFIG(pPeriphClkInit->UsbPhyClockSelection);
 8007bb8:	493b      	ldr	r1, [pc, #236]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007bba:	f8d1 30e4 	ldr.w	r3, [r1, #228]	@ 0xe4
 8007bbe:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8007bc2:	4313      	orrs	r3, r2
 8007bc4:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 8007bc8:	4634      	mov	r4, r6
}
 8007bca:	4620      	mov	r0, r4
 8007bcc:	b002      	add	sp, #8
 8007bce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007bd2:	f105 0008 	add.w	r0, r5, #8
 8007bd6:	f7ff fbeb 	bl	80073b0 <RCCEx_PLL2_Config>
 8007bda:	4604      	mov	r4, r0
        break;
 8007bdc:	e6ef      	b.n	80079be <HAL_RCCEx_PeriphCLKConfig+0x45e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007bde:	4a32      	ldr	r2, [pc, #200]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007be0:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007be2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007be6:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 8007be8:	e6e9      	b.n	80079be <HAL_RCCEx_PeriphCLKConfig+0x45e>
 8007bea:	4626      	mov	r6, r4
 8007bec:	e6f4      	b.n	80079d8 <HAL_RCCEx_PeriphCLKConfig+0x478>
    switch (pPeriphClkInit->RngClockSelection)
 8007bee:	2601      	movs	r6, #1
 8007bf0:	4634      	mov	r4, r6
 8007bf2:	e708      	b.n	8007a06 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 8007bf4:	4626      	mov	r6, r4
 8007bf6:	e706      	b.n	8007a06 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL2)
 8007bf8:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8007bfc:	f47f af53 	bne.w	8007aa6 <HAL_RCCEx_PeriphCLKConfig+0x546>
      ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007c00:	f105 0008 	add.w	r0, r5, #8
 8007c04:	f7ff fbd4 	bl	80073b0 <RCCEx_PLL2_Config>
 8007c08:	4604      	mov	r4, r0
 8007c0a:	e74c      	b.n	8007aa6 <HAL_RCCEx_PeriphCLKConfig+0x546>
 8007c0c:	4626      	mov	r6, r4
 8007c0e:	e757      	b.n	8007ac0 <HAL_RCCEx_PeriphCLKConfig+0x560>
    switch (pPeriphClkInit->HspiClockSelection)
 8007c10:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8007c14:	f47f af66 	bne.w	8007ae4 <HAL_RCCEx_PeriphCLKConfig+0x584>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007c18:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007c1c:	f7ff fc34 	bl	8007488 <RCCEx_PLL3_Config>
 8007c20:	e014      	b.n	8007c4c <HAL_RCCEx_PeriphCLKConfig+0x6ec>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c22:	4a21      	ldr	r2, [pc, #132]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c24:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007c26:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007c2a:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007c2c:	b984      	cbnz	r4, 8007c50 <HAL_RCCEx_PeriphCLKConfig+0x6f0>
      __HAL_RCC_HSPI_CONFIG(pPeriphClkInit->HspiClockSelection);
 8007c2e:	4a1e      	ldr	r2, [pc, #120]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c30:	f8d5 10c0 	ldr.w	r1, [r5, #192]	@ 0xc0
 8007c34:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007c38:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8007c3c:	430b      	orrs	r3, r1
 8007c3e:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8007c42:	e751      	b.n	8007ae8 <HAL_RCCEx_PeriphCLKConfig+0x588>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007c44:	f105 0008 	add.w	r0, r5, #8
 8007c48:	f7ff fbb2 	bl	80073b0 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007c4c:	4604      	mov	r4, r0
        break;
 8007c4e:	e7ed      	b.n	8007c2c <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 8007c50:	4626      	mov	r6, r4
 8007c52:	e749      	b.n	8007ae8 <HAL_RCCEx_PeriphCLKConfig+0x588>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c54:	4a14      	ldr	r2, [pc, #80]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c56:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007c58:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007c5c:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007c5e:	b984      	cbnz	r4, 8007c82 <HAL_RCCEx_PeriphCLKConfig+0x722>
      __HAL_RCC_FDCAN1_CONFIG(pPeriphClkInit->Fdcan1ClockSelection);
 8007c60:	4a11      	ldr	r2, [pc, #68]	@ (8007ca8 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c62:	f8d5 1090 	ldr.w	r1, [r5, #144]	@ 0x90
 8007c66:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8007c6a:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 8007c6e:	430b      	orrs	r3, r1
 8007c70:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8007c74:	e74a      	b.n	8007b0c <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007c76:	f105 0008 	add.w	r0, r5, #8
 8007c7a:	f7ff fb99 	bl	80073b0 <RCCEx_PLL2_Config>
 8007c7e:	4604      	mov	r4, r0
        break;
 8007c80:	e7ed      	b.n	8007c5e <HAL_RCCEx_PeriphCLKConfig+0x6fe>
 8007c82:	4626      	mov	r6, r4
 8007c84:	e742      	b.n	8007b0c <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007c86:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007c8a:	f7ff fbfd 	bl	8007488 <RCCEx_PLL3_Config>
 8007c8e:	e75a      	b.n	8007b46 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
    switch (pPeriphClkInit->LtdcClockSelection)
 8007c90:	2601      	movs	r6, #1
 8007c92:	4634      	mov	r4, r6
 8007c94:	e765      	b.n	8007b62 <HAL_RCCEx_PeriphCLKConfig+0x602>
 8007c96:	4606      	mov	r6, r0
 8007c98:	e763      	b.n	8007b62 <HAL_RCCEx_PeriphCLKConfig+0x602>
 8007c9a:	4626      	mov	r6, r4
 8007c9c:	e779      	b.n	8007b92 <HAL_RCCEx_PeriphCLKConfig+0x632>
    switch (pPeriphClkInit->UsbPhyClockSelection)
 8007c9e:	f1b2 4f40 	cmp.w	r2, #3221225472	@ 0xc0000000
 8007ca2:	e782      	b.n	8007baa <HAL_RCCEx_PeriphCLKConfig+0x64a>
 8007ca4:	2401      	movs	r4, #1
 8007ca6:	e790      	b.n	8007bca <HAL_RCCEx_PeriphCLKConfig+0x66a>
 8007ca8:	46020c00 	.word	0x46020c00

08007cac <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8007cac:	4770      	bx	lr
	...

08007cb0 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007cb0:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8007cb4:	2b01      	cmp	r3, #1
 8007cb6:	d145      	bne.n	8007d44 <HAL_TIM_Base_Start_IT+0x94>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007cb8:	2302      	movs	r3, #2
 8007cba:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007cbe:	6803      	ldr	r3, [r0, #0]
 8007cc0:	68da      	ldr	r2, [r3, #12]
 8007cc2:	f042 0201 	orr.w	r2, r2, #1
 8007cc6:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007cc8:	4a1f      	ldr	r2, [pc, #124]	@ (8007d48 <HAL_TIM_Base_Start_IT+0x98>)
 8007cca:	4293      	cmp	r3, r2
 8007ccc:	d02c      	beq.n	8007d28 <HAL_TIM_Base_Start_IT+0x78>
 8007cce:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007cd2:	4293      	cmp	r3, r2
 8007cd4:	d028      	beq.n	8007d28 <HAL_TIM_Base_Start_IT+0x78>
 8007cd6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007cda:	d025      	beq.n	8007d28 <HAL_TIM_Base_Start_IT+0x78>
 8007cdc:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8007ce0:	d022      	beq.n	8007d28 <HAL_TIM_Base_Start_IT+0x78>
 8007ce2:	4a1a      	ldr	r2, [pc, #104]	@ (8007d4c <HAL_TIM_Base_Start_IT+0x9c>)
 8007ce4:	4293      	cmp	r3, r2
 8007ce6:	d01f      	beq.n	8007d28 <HAL_TIM_Base_Start_IT+0x78>
 8007ce8:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007cec:	4293      	cmp	r3, r2
 8007cee:	d01b      	beq.n	8007d28 <HAL_TIM_Base_Start_IT+0x78>
 8007cf0:	4a17      	ldr	r2, [pc, #92]	@ (8007d50 <HAL_TIM_Base_Start_IT+0xa0>)
 8007cf2:	4293      	cmp	r3, r2
 8007cf4:	d018      	beq.n	8007d28 <HAL_TIM_Base_Start_IT+0x78>
 8007cf6:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007cfa:	4293      	cmp	r3, r2
 8007cfc:	d014      	beq.n	8007d28 <HAL_TIM_Base_Start_IT+0x78>
 8007cfe:	4a15      	ldr	r2, [pc, #84]	@ (8007d54 <HAL_TIM_Base_Start_IT+0xa4>)
 8007d00:	4293      	cmp	r3, r2
 8007d02:	d011      	beq.n	8007d28 <HAL_TIM_Base_Start_IT+0x78>
 8007d04:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d08:	4293      	cmp	r3, r2
 8007d0a:	d00d      	beq.n	8007d28 <HAL_TIM_Base_Start_IT+0x78>
 8007d0c:	4a12      	ldr	r2, [pc, #72]	@ (8007d58 <HAL_TIM_Base_Start_IT+0xa8>)
 8007d0e:	4293      	cmp	r3, r2
 8007d10:	d00a      	beq.n	8007d28 <HAL_TIM_Base_Start_IT+0x78>
 8007d12:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d16:	4293      	cmp	r3, r2
 8007d18:	d006      	beq.n	8007d28 <HAL_TIM_Base_Start_IT+0x78>
 8007d1a:	4a10      	ldr	r2, [pc, #64]	@ (8007d5c <HAL_TIM_Base_Start_IT+0xac>)
 8007d1c:	4293      	cmp	r3, r2
 8007d1e:	d003      	beq.n	8007d28 <HAL_TIM_Base_Start_IT+0x78>
 8007d20:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d24:	4293      	cmp	r3, r2
 8007d26:	d107      	bne.n	8007d38 <HAL_TIM_Base_Start_IT+0x88>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007d28:	6899      	ldr	r1, [r3, #8]
 8007d2a:	4a0d      	ldr	r2, [pc, #52]	@ (8007d60 <HAL_TIM_Base_Start_IT+0xb0>)
 8007d2c:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007d2e:	2a06      	cmp	r2, #6
 8007d30:	d006      	beq.n	8007d40 <HAL_TIM_Base_Start_IT+0x90>
 8007d32:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8007d36:	d003      	beq.n	8007d40 <HAL_TIM_Base_Start_IT+0x90>
    {
      __HAL_TIM_ENABLE(htim);
 8007d38:	681a      	ldr	r2, [r3, #0]
 8007d3a:	f042 0201 	orr.w	r2, r2, #1
 8007d3e:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8007d40:	2000      	movs	r0, #0
 8007d42:	4770      	bx	lr
    return HAL_ERROR;
 8007d44:	2001      	movs	r0, #1
}
 8007d46:	4770      	bx	lr
 8007d48:	40012c00 	.word	0x40012c00
 8007d4c:	40000400 	.word	0x40000400
 8007d50:	40000800 	.word	0x40000800
 8007d54:	40000c00 	.word	0x40000c00
 8007d58:	40013400 	.word	0x40013400
 8007d5c:	40014000 	.word	0x40014000
 8007d60:	00010007 	.word	0x00010007

08007d64 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8007d64:	4770      	bx	lr

08007d66 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8007d66:	4770      	bx	lr

08007d68 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8007d68:	4770      	bx	lr

08007d6a <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8007d6a:	4770      	bx	lr

08007d6c <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8007d6c:	6803      	ldr	r3, [r0, #0]
{
 8007d6e:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8007d70:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8007d72:	691e      	ldr	r6, [r3, #16]
{
 8007d74:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007d76:	07b2      	lsls	r2, r6, #30
 8007d78:	d50e      	bpl.n	8007d98 <HAL_TIM_IRQHandler+0x2c>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8007d7a:	07a9      	lsls	r1, r5, #30
 8007d7c:	d50c      	bpl.n	8007d98 <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8007d7e:	f06f 0202 	mvn.w	r2, #2
 8007d82:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007d84:	2201      	movs	r2, #1
 8007d86:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007d88:	699b      	ldr	r3, [r3, #24]
 8007d8a:	079a      	lsls	r2, r3, #30
 8007d8c:	f000 80a4 	beq.w	8007ed8 <HAL_TIM_IRQHandler+0x16c>
          HAL_TIM_IC_CaptureCallback(htim);
 8007d90:	f7ff ffe9 	bl	8007d66 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007d94:	2300      	movs	r3, #0
 8007d96:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8007d98:	0773      	lsls	r3, r6, #29
 8007d9a:	d511      	bpl.n	8007dc0 <HAL_TIM_IRQHandler+0x54>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8007d9c:	0768      	lsls	r0, r5, #29
 8007d9e:	d50f      	bpl.n	8007dc0 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007da0:	f06f 0204 	mvn.w	r2, #4
 8007da4:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8007da6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007da8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007daa:	2202      	movs	r2, #2
 8007dac:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007dae:	699b      	ldr	r3, [r3, #24]
 8007db0:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8007db4:	f000 8096 	beq.w	8007ee4 <HAL_TIM_IRQHandler+0x178>
        HAL_TIM_IC_CaptureCallback(htim);
 8007db8:	f7ff ffd5 	bl	8007d66 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007dbc:	2300      	movs	r3, #0
 8007dbe:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8007dc0:	0731      	lsls	r1, r6, #28
 8007dc2:	d510      	bpl.n	8007de6 <HAL_TIM_IRQHandler+0x7a>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8007dc4:	072a      	lsls	r2, r5, #28
 8007dc6:	d50e      	bpl.n	8007de6 <HAL_TIM_IRQHandler+0x7a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007dc8:	f06f 0208 	mvn.w	r2, #8
 8007dcc:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8007dce:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007dd0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007dd2:	2204      	movs	r2, #4
 8007dd4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007dd6:	69db      	ldr	r3, [r3, #28]
 8007dd8:	079b      	lsls	r3, r3, #30
 8007dda:	f000 8089 	beq.w	8007ef0 <HAL_TIM_IRQHandler+0x184>
        HAL_TIM_IC_CaptureCallback(htim);
 8007dde:	f7ff ffc2 	bl	8007d66 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007de2:	2300      	movs	r3, #0
 8007de4:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8007de6:	06f1      	lsls	r1, r6, #27
 8007de8:	d510      	bpl.n	8007e0c <HAL_TIM_IRQHandler+0xa0>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8007dea:	06ea      	lsls	r2, r5, #27
 8007dec:	d50e      	bpl.n	8007e0c <HAL_TIM_IRQHandler+0xa0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8007dee:	f06f 0210 	mvn.w	r2, #16
 8007df2:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8007df4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8007df6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007df8:	2208      	movs	r2, #8
 8007dfa:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007dfc:	69db      	ldr	r3, [r3, #28]
 8007dfe:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8007e02:	d07b      	beq.n	8007efc <HAL_TIM_IRQHandler+0x190>
        HAL_TIM_IC_CaptureCallback(htim);
 8007e04:	f7ff ffaf 	bl	8007d66 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e08:	2300      	movs	r3, #0
 8007e0a:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8007e0c:	07f3      	lsls	r3, r6, #31
 8007e0e:	d508      	bpl.n	8007e22 <HAL_TIM_IRQHandler+0xb6>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8007e10:	07e8      	lsls	r0, r5, #31
 8007e12:	d506      	bpl.n	8007e22 <HAL_TIM_IRQHandler+0xb6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007e14:	f06f 0201 	mvn.w	r2, #1
 8007e18:	6823      	ldr	r3, [r4, #0]
      HAL_TIM_PeriodElapsedCallback(htim);
 8007e1a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007e1c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8007e1e:	f7f8 fcd7 	bl	80007d0 <HAL_TIM_PeriodElapsedCallback>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 8007e22:	f416 5f02 	tst.w	r6, #8320	@ 0x2080
 8007e26:	d008      	beq.n	8007e3a <HAL_TIM_IRQHandler+0xce>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007e28:	0629      	lsls	r1, r5, #24
 8007e2a:	d506      	bpl.n	8007e3a <HAL_TIM_IRQHandler+0xce>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8007e2c:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8007e30:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_BreakCallback(htim);
 8007e32:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8007e34:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8007e36:	f000 f952 	bl	80080de <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
 8007e3a:	05f2      	lsls	r2, r6, #23
 8007e3c:	d508      	bpl.n	8007e50 <HAL_TIM_IRQHandler+0xe4>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007e3e:	062b      	lsls	r3, r5, #24
 8007e40:	d506      	bpl.n	8007e50 <HAL_TIM_IRQHandler+0xe4>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007e42:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8007e46:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_Break2Callback(htim);
 8007e48:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007e4a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 8007e4c:	f000 f948 	bl	80080e0 <HAL_TIMEx_Break2Callback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8007e50:	0670      	lsls	r0, r6, #25
 8007e52:	d508      	bpl.n	8007e66 <HAL_TIM_IRQHandler+0xfa>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8007e54:	0669      	lsls	r1, r5, #25
 8007e56:	d506      	bpl.n	8007e66 <HAL_TIM_IRQHandler+0xfa>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007e58:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8007e5c:	6823      	ldr	r3, [r4, #0]
      HAL_TIM_TriggerCallback(htim);
 8007e5e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007e60:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8007e62:	f7ff ff82 	bl	8007d6a <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8007e66:	06b2      	lsls	r2, r6, #26
 8007e68:	d508      	bpl.n	8007e7c <HAL_TIM_IRQHandler+0x110>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8007e6a:	06ab      	lsls	r3, r5, #26
 8007e6c:	d506      	bpl.n	8007e7c <HAL_TIM_IRQHandler+0x110>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007e6e:	f06f 0220 	mvn.w	r2, #32
 8007e72:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_CommutCallback(htim);
 8007e74:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007e76:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_CommutCallback(htim);
 8007e78:	f000 f930 	bl	80080dc <HAL_TIMEx_CommutCallback>
  if ((itflag & (TIM_FLAG_IDX)) == (TIM_FLAG_IDX))
 8007e7c:	02f0      	lsls	r0, r6, #11
 8007e7e:	d508      	bpl.n	8007e92 <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_IDX)) == (TIM_IT_IDX))
 8007e80:	02e9      	lsls	r1, r5, #11
 8007e82:	d506      	bpl.n	8007e92 <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 8007e84:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 8007e88:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_EncoderIndexCallback(htim);
 8007e8a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 8007e8c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_EncoderIndexCallback(htim);
 8007e8e:	f000 f928 	bl	80080e2 <HAL_TIMEx_EncoderIndexCallback>
  if ((itflag & (TIM_FLAG_DIR)) == (TIM_FLAG_DIR))
 8007e92:	02b2      	lsls	r2, r6, #10
 8007e94:	d508      	bpl.n	8007ea8 <HAL_TIM_IRQHandler+0x13c>
    if ((itsource & (TIM_IT_DIR)) == (TIM_IT_DIR))
 8007e96:	02ab      	lsls	r3, r5, #10
 8007e98:	d506      	bpl.n	8007ea8 <HAL_TIM_IRQHandler+0x13c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 8007e9a:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 8007e9e:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_DirectionChangeCallback(htim);
 8007ea0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 8007ea2:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_DirectionChangeCallback(htim);
 8007ea4:	f000 f91e 	bl	80080e4 <HAL_TIMEx_DirectionChangeCallback>
  if ((itflag & (TIM_FLAG_IERR)) == (TIM_FLAG_IERR))
 8007ea8:	0270      	lsls	r0, r6, #9
 8007eaa:	d508      	bpl.n	8007ebe <HAL_TIM_IRQHandler+0x152>
    if ((itsource & (TIM_IT_IERR)) == (TIM_IT_IERR))
 8007eac:	0269      	lsls	r1, r5, #9
 8007eae:	d506      	bpl.n	8007ebe <HAL_TIM_IRQHandler+0x152>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 8007eb0:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 8007eb4:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_IndexErrorCallback(htim);
 8007eb6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 8007eb8:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_IndexErrorCallback(htim);
 8007eba:	f000 f914 	bl	80080e6 <HAL_TIMEx_IndexErrorCallback>
  if ((itflag & (TIM_FLAG_TERR)) == (TIM_FLAG_TERR))
 8007ebe:	0232      	lsls	r2, r6, #8
 8007ec0:	d522      	bpl.n	8007f08 <HAL_TIM_IRQHandler+0x19c>
    if ((itsource & (TIM_IT_TERR)) == (TIM_IT_TERR))
 8007ec2:	022b      	lsls	r3, r5, #8
 8007ec4:	d520      	bpl.n	8007f08 <HAL_TIM_IRQHandler+0x19c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 8007ec6:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 8007eca:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_TransitionErrorCallback(htim);
 8007ecc:	4620      	mov	r0, r4
}
 8007ece:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 8007ed2:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_TransitionErrorCallback(htim);
 8007ed4:	f000 b908 	b.w	80080e8 <HAL_TIMEx_TransitionErrorCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007ed8:	f7ff ff44 	bl	8007d64 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007edc:	4620      	mov	r0, r4
 8007ede:	f7ff ff43 	bl	8007d68 <HAL_TIM_PWM_PulseFinishedCallback>
 8007ee2:	e757      	b.n	8007d94 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007ee4:	f7ff ff3e 	bl	8007d64 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007ee8:	4620      	mov	r0, r4
 8007eea:	f7ff ff3d 	bl	8007d68 <HAL_TIM_PWM_PulseFinishedCallback>
 8007eee:	e765      	b.n	8007dbc <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007ef0:	f7ff ff38 	bl	8007d64 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007ef4:	4620      	mov	r0, r4
 8007ef6:	f7ff ff37 	bl	8007d68 <HAL_TIM_PWM_PulseFinishedCallback>
 8007efa:	e772      	b.n	8007de2 <HAL_TIM_IRQHandler+0x76>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007efc:	f7ff ff32 	bl	8007d64 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f00:	4620      	mov	r0, r4
 8007f02:	f7ff ff31 	bl	8007d68 <HAL_TIM_PWM_PulseFinishedCallback>
 8007f06:	e77f      	b.n	8007e08 <HAL_TIM_IRQHandler+0x9c>
}
 8007f08:	bd70      	pop	{r4, r5, r6, pc}
	...

08007f0c <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007f0c:	4a53      	ldr	r2, [pc, #332]	@ (800805c <TIM_Base_SetConfig+0x150>)
  tmpcr1 = TIMx->CR1;
 8007f0e:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007f10:	4290      	cmp	r0, r2
 8007f12:	d025      	beq.n	8007f60 <TIM_Base_SetConfig+0x54>
 8007f14:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f18:	4290      	cmp	r0, r2
 8007f1a:	d021      	beq.n	8007f60 <TIM_Base_SetConfig+0x54>
 8007f1c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007f20:	d01e      	beq.n	8007f60 <TIM_Base_SetConfig+0x54>
 8007f22:	f1b0 4fa0 	cmp.w	r0, #1342177280	@ 0x50000000
 8007f26:	d01b      	beq.n	8007f60 <TIM_Base_SetConfig+0x54>
 8007f28:	4a4d      	ldr	r2, [pc, #308]	@ (8008060 <TIM_Base_SetConfig+0x154>)
 8007f2a:	4290      	cmp	r0, r2
 8007f2c:	d018      	beq.n	8007f60 <TIM_Base_SetConfig+0x54>
 8007f2e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f32:	4290      	cmp	r0, r2
 8007f34:	d014      	beq.n	8007f60 <TIM_Base_SetConfig+0x54>
 8007f36:	4a4b      	ldr	r2, [pc, #300]	@ (8008064 <TIM_Base_SetConfig+0x158>)
 8007f38:	4290      	cmp	r0, r2
 8007f3a:	d011      	beq.n	8007f60 <TIM_Base_SetConfig+0x54>
 8007f3c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f40:	4290      	cmp	r0, r2
 8007f42:	d00d      	beq.n	8007f60 <TIM_Base_SetConfig+0x54>
 8007f44:	4a48      	ldr	r2, [pc, #288]	@ (8008068 <TIM_Base_SetConfig+0x15c>)
 8007f46:	4290      	cmp	r0, r2
 8007f48:	d00a      	beq.n	8007f60 <TIM_Base_SetConfig+0x54>
 8007f4a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f4e:	4290      	cmp	r0, r2
 8007f50:	d006      	beq.n	8007f60 <TIM_Base_SetConfig+0x54>
 8007f52:	4a46      	ldr	r2, [pc, #280]	@ (800806c <TIM_Base_SetConfig+0x160>)
 8007f54:	4290      	cmp	r0, r2
 8007f56:	d003      	beq.n	8007f60 <TIM_Base_SetConfig+0x54>
 8007f58:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f5c:	4290      	cmp	r0, r2
 8007f5e:	d12c      	bne.n	8007fba <TIM_Base_SetConfig+0xae>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007f60:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007f62:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8007f66:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007f68:	4a3c      	ldr	r2, [pc, #240]	@ (800805c <TIM_Base_SetConfig+0x150>)
 8007f6a:	4290      	cmp	r0, r2
 8007f6c:	d03a      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007f6e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f72:	4290      	cmp	r0, r2
 8007f74:	d036      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007f76:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007f7a:	d033      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007f7c:	f1b0 4fa0 	cmp.w	r0, #1342177280	@ 0x50000000
 8007f80:	d030      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007f82:	4a37      	ldr	r2, [pc, #220]	@ (8008060 <TIM_Base_SetConfig+0x154>)
 8007f84:	4290      	cmp	r0, r2
 8007f86:	d02d      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007f88:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f8c:	4290      	cmp	r0, r2
 8007f8e:	d029      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007f90:	4a34      	ldr	r2, [pc, #208]	@ (8008064 <TIM_Base_SetConfig+0x158>)
 8007f92:	4290      	cmp	r0, r2
 8007f94:	d026      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007f96:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f9a:	4290      	cmp	r0, r2
 8007f9c:	d022      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007f9e:	4a32      	ldr	r2, [pc, #200]	@ (8008068 <TIM_Base_SetConfig+0x15c>)
 8007fa0:	4290      	cmp	r0, r2
 8007fa2:	d01f      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007fa4:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fa8:	4290      	cmp	r0, r2
 8007faa:	d01b      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007fac:	4a2f      	ldr	r2, [pc, #188]	@ (800806c <TIM_Base_SetConfig+0x160>)
 8007fae:	4290      	cmp	r0, r2
 8007fb0:	d018      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007fb2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fb6:	4290      	cmp	r0, r2
 8007fb8:	d014      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007fba:	4a2d      	ldr	r2, [pc, #180]	@ (8008070 <TIM_Base_SetConfig+0x164>)
 8007fbc:	4290      	cmp	r0, r2
 8007fbe:	d011      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007fc0:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fc4:	4290      	cmp	r0, r2
 8007fc6:	d00d      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007fc8:	4a2a      	ldr	r2, [pc, #168]	@ (8008074 <TIM_Base_SetConfig+0x168>)
 8007fca:	4290      	cmp	r0, r2
 8007fcc:	d00a      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007fce:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fd2:	4290      	cmp	r0, r2
 8007fd4:	d006      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007fd6:	4a28      	ldr	r2, [pc, #160]	@ (8008078 <TIM_Base_SetConfig+0x16c>)
 8007fd8:	4290      	cmp	r0, r2
 8007fda:	d003      	beq.n	8007fe4 <TIM_Base_SetConfig+0xd8>
 8007fdc:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fe0:	4290      	cmp	r0, r2
 8007fe2:	d103      	bne.n	8007fec <TIM_Base_SetConfig+0xe0>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007fe4:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8007fe6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007fea:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007fec:	694a      	ldr	r2, [r1, #20]
 8007fee:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007ff2:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8007ff4:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007ff6:	688b      	ldr	r3, [r1, #8]
 8007ff8:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007ffa:	680b      	ldr	r3, [r1, #0]
 8007ffc:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007ffe:	4b17      	ldr	r3, [pc, #92]	@ (800805c <TIM_Base_SetConfig+0x150>)
 8008000:	4298      	cmp	r0, r3
 8008002:	d01f      	beq.n	8008044 <TIM_Base_SetConfig+0x138>
 8008004:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008008:	4298      	cmp	r0, r3
 800800a:	d01b      	beq.n	8008044 <TIM_Base_SetConfig+0x138>
 800800c:	4b17      	ldr	r3, [pc, #92]	@ (800806c <TIM_Base_SetConfig+0x160>)
 800800e:	4298      	cmp	r0, r3
 8008010:	d018      	beq.n	8008044 <TIM_Base_SetConfig+0x138>
 8008012:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008016:	4298      	cmp	r0, r3
 8008018:	d014      	beq.n	8008044 <TIM_Base_SetConfig+0x138>
 800801a:	4b15      	ldr	r3, [pc, #84]	@ (8008070 <TIM_Base_SetConfig+0x164>)
 800801c:	4298      	cmp	r0, r3
 800801e:	d011      	beq.n	8008044 <TIM_Base_SetConfig+0x138>
 8008020:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008024:	4298      	cmp	r0, r3
 8008026:	d00d      	beq.n	8008044 <TIM_Base_SetConfig+0x138>
 8008028:	4b12      	ldr	r3, [pc, #72]	@ (8008074 <TIM_Base_SetConfig+0x168>)
 800802a:	4298      	cmp	r0, r3
 800802c:	d00a      	beq.n	8008044 <TIM_Base_SetConfig+0x138>
 800802e:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008032:	4298      	cmp	r0, r3
 8008034:	d006      	beq.n	8008044 <TIM_Base_SetConfig+0x138>
 8008036:	4b10      	ldr	r3, [pc, #64]	@ (8008078 <TIM_Base_SetConfig+0x16c>)
 8008038:	4298      	cmp	r0, r3
 800803a:	d003      	beq.n	8008044 <TIM_Base_SetConfig+0x138>
 800803c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008040:	4298      	cmp	r0, r3
 8008042:	d101      	bne.n	8008048 <TIM_Base_SetConfig+0x13c>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008044:	690b      	ldr	r3, [r1, #16]
 8008046:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008048:	2301      	movs	r3, #1
 800804a:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800804c:	6903      	ldr	r3, [r0, #16]
 800804e:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8008050:	bf42      	ittt	mi
 8008052:	6903      	ldrmi	r3, [r0, #16]
 8008054:	f023 0301 	bicmi.w	r3, r3, #1
 8008058:	6103      	strmi	r3, [r0, #16]
  }
}
 800805a:	4770      	bx	lr
 800805c:	40012c00 	.word	0x40012c00
 8008060:	40000400 	.word	0x40000400
 8008064:	40000800 	.word	0x40000800
 8008068:	40000c00 	.word	0x40000c00
 800806c:	40013400 	.word	0x40013400
 8008070:	40014000 	.word	0x40014000
 8008074:	40014400 	.word	0x40014400
 8008078:	40014800 	.word	0x40014800

0800807c <HAL_TIM_Base_Init>:
{
 800807c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800807e:	4604      	mov	r4, r0
 8008080:	b350      	cbz	r0, 80080d8 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 8008082:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8008086:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800808a:	b91b      	cbnz	r3, 8008094 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800808c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8008090:	f7ff fe0c 	bl	8007cac <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8008094:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008096:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8008098:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800809c:	1d21      	adds	r1, r4, #4
 800809e:	f7ff ff35 	bl	8007f0c <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80080a2:	2301      	movs	r3, #1
  return HAL_OK;
 80080a4:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80080a6:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80080aa:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 80080ae:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 80080b2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80080b6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 80080ba:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80080be:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80080c2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 80080c6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 80080ca:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 80080ce:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 80080d2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 80080d6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80080d8:	2001      	movs	r0, #1
 80080da:	e7fc      	b.n	80080d6 <HAL_TIM_Base_Init+0x5a>

080080dc <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 80080dc:	4770      	bx	lr

080080de <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 80080de:	4770      	bx	lr

080080e0 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 80080e0:	4770      	bx	lr

080080e2 <HAL_TIMEx_EncoderIndexCallback>:
/**
  * @brief  Encoder index callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_EncoderIndexCallback(TIM_HandleTypeDef *htim)
 80080e2:	4770      	bx	lr

080080e4 <HAL_TIMEx_DirectionChangeCallback>:
/**
  * @brief  Direction change callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_DirectionChangeCallback(TIM_HandleTypeDef *htim)
 80080e4:	4770      	bx	lr

080080e6 <HAL_TIMEx_IndexErrorCallback>:
/**
  * @brief  Index error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_IndexErrorCallback(TIM_HandleTypeDef *htim)
 80080e6:	4770      	bx	lr

080080e8 <HAL_TIMEx_TransitionErrorCallback>:
/**
  * @brief  Transition error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_TransitionErrorCallback(TIM_HandleTypeDef *htim)
 80080e8:	4770      	bx	lr
	...

080080ec <XSPI_ConfigCmd>:
  __IO uint32_t *tcr_reg;
  __IO uint32_t *ir_reg;
  __IO uint32_t *abr_reg;

  /* Re-initialize the value of the functional mode */
  MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, 0U);
 80080ec:	6802      	ldr	r2, [r0, #0]
{
 80080ee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, 0U);
 80080f2:	6813      	ldr	r3, [r2, #0]
 80080f4:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 80080f8:	6013      	str	r3, [r2, #0]

  if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 80080fa:	4b7e      	ldr	r3, [pc, #504]	@ (80082f4 <XSPI_ConfigCmd+0x208>)
 80080fc:	429a      	cmp	r2, r3
 80080fe:	d00d      	beq.n	800811c <XSPI_ConfigCmd+0x30>
 8008100:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008104:	429a      	cmp	r2, r3
 8008106:	d009      	beq.n	800811c <XSPI_ConfigCmd+0x30>
 8008108:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 800810c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008110:	429a      	cmp	r2, r3
 8008112:	d003      	beq.n	800811c <XSPI_ConfigCmd+0x30>
 8008114:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008118:	429a      	cmp	r2, r3
 800811a:	d15c      	bne.n	80081d6 <XSPI_ConfigCmd+0xea>
  {
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 800811c:	6883      	ldr	r3, [r0, #8]
 800811e:	b92b      	cbnz	r3, 800812c <XSPI_ConfigCmd+0x40>
    {
      assert_param(IS_OCTOSPI_IO_SELECT(pCmd->IOSelect));
      MODIFY_REG(hxspi->Instance->CR, OCTOSPI_CR_MSEL, pCmd->IOSelect);
 8008120:	6813      	ldr	r3, [r2, #0]
 8008122:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
  {
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
    {
      assert_param(IS_HSPI_IO_SELECT(pCmd->IOSelect));
      MODIFY_REG(hxspi->Instance->CR, HSPI_CR_MSEL, pCmd->IOSelect);
 8008126:	684c      	ldr	r4, [r1, #4]
 8008128:	4323      	orrs	r3, r4
 800812a:	6013      	str	r3, [r2, #0]
  {
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
    return HAL_ERROR;
  }

  if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG)
 800812c:	680b      	ldr	r3, [r1, #0]
 800812e:	2b02      	cmp	r3, #2
 8008130:	d165      	bne.n	80081fe <XSPI_ConfigCmd+0x112>
  {
    ccr_reg = &(hxspi->Instance->WCCR);
 8008132:	f502 74c0 	add.w	r4, r2, #384	@ 0x180
    tcr_reg = &(hxspi->Instance->WTCR);
 8008136:	f502 76c4 	add.w	r6, r2, #392	@ 0x188
    ir_reg  = &(hxspi->Instance->WIR);
 800813a:	f502 75c8 	add.w	r5, r2, #400	@ 0x190
    abr_reg = &(hxspi->Instance->WABR);
 800813e:	f502 7cd0 	add.w	ip, r2, #416	@ 0x1a0
    ir_reg  = &(hxspi->Instance->IR);
    abr_reg = &(hxspi->Instance->ABR);
  }

  /* Configure the CCR register with DQS and SIOO modes */
  *ccr_reg = (pCmd->DQSMode | pCmd->SIOOMode);
 8008142:	e9d1 3712 	ldrd	r3, r7, [r1, #72]	@ 0x48
 8008146:	433b      	orrs	r3, r7
 8008148:	6023      	str	r3, [r4, #0]

  if (pCmd->AlternateBytesMode != HAL_XSPI_ALT_BYTES_NONE)
 800814a:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 800814c:	b16b      	cbz	r3, 800816a <XSPI_ConfigCmd+0x7e>
  {
    /* Configure the ABR register with alternate bytes value */
    *abr_reg = pCmd->AlternateBytes;
 800814e:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8008150:	f8cc 3000 	str.w	r3, [ip]

    /* Configure the CCR register with alternate bytes communication parameters */
    MODIFY_REG((*ccr_reg), (XSPI_CCR_ABMODE | XSPI_CCR_ABDTR | XSPI_CCR_ABSIZE),
 8008154:	6b4f      	ldr	r7, [r1, #52]	@ 0x34
 8008156:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 8008158:	f8d4 c000 	ldr.w	ip, [r4]
 800815c:	433b      	orrs	r3, r7
 800815e:	6b0f      	ldr	r7, [r1, #48]	@ 0x30
 8008160:	433b      	orrs	r3, r7
 8008162:	f42c 177c 	bic.w	r7, ip, #4128768	@ 0x3f0000
 8008166:	433b      	orrs	r3, r7
 8008168:	6023      	str	r3, [r4, #0]
               (pCmd->AlternateBytesMode | pCmd->AlternateBytesDTRMode | pCmd->AlternateBytesWidth));
  }

  /* Configure the TCR register with the number of dummy cycles */
  MODIFY_REG((*tcr_reg), XSPI_TCR_DCYC, pCmd->DummyCycles);
 800816a:	6833      	ldr	r3, [r6, #0]
 800816c:	6c4f      	ldr	r7, [r1, #68]	@ 0x44
 800816e:	f023 031f 	bic.w	r3, r3, #31
 8008172:	433b      	orrs	r3, r7
 8008174:	6033      	str	r3, [r6, #0]

  if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 8008176:	f8d1 e038 	ldr.w	lr, [r1, #56]	@ 0x38
 800817a:	f1be 0f00 	cmp.w	lr, #0
 800817e:	d004      	beq.n	800818a <XSPI_ConfigCmd+0x9e>
  {
    if (pCmd->OperationType == HAL_XSPI_OPTYPE_COMMON_CFG)
 8008180:	680b      	ldr	r3, [r1, #0]
 8008182:	b913      	cbnz	r3, 800818a <XSPI_ConfigCmd+0x9e>
    {
      /* Configure the DLR register with the number of data */
      hxspi->Instance->DLR = (pCmd->DataLength - 1U);
 8008184:	6bcb      	ldr	r3, [r1, #60]	@ 0x3c
 8008186:	3b01      	subs	r3, #1
 8008188:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }

  if (pCmd->InstructionMode != HAL_XSPI_INSTRUCTION_NONE)
 800818a:	68cb      	ldr	r3, [r1, #12]
  {
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 800818c:	f8d1 901c 	ldr.w	r9, [r1, #28]
  if (pCmd->InstructionMode != HAL_XSPI_INSTRUCTION_NONE)
 8008190:	2b00      	cmp	r3, #0
 8008192:	f000 808e 	beq.w	80082b2 <XSPI_ConfigCmd+0x1c6>
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
      {
        /* ---- Command with instruction, address and data ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 8008196:	e9d1 c804 	ldrd	ip, r8, [r1, #16]
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 800819a:	f1b9 0f00 	cmp.w	r9, #0
 800819e:	d05e      	beq.n	800825e <XSPI_ConfigCmd+0x172>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 80081a0:	e9d1 6708 	ldrd	r6, r7, [r1, #32]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 80081a4:	f1be 0f00 	cmp.w	lr, #0
 80081a8:	d03d      	beq.n	8008226 <XSPI_ConfigCmd+0x13a>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 80081aa:	ea4e 0303 	orr.w	r3, lr, r3
 80081ae:	ea43 0309 	orr.w	r3, r3, r9
 80081b2:	ea43 0308 	orr.w	r3, r3, r8
 80081b6:	ea43 030c 	orr.w	r3, r3, ip
 80081ba:	433b      	orrs	r3, r7
 80081bc:	4333      	orrs	r3, r6
 80081be:	6c0e      	ldr	r6, [r1, #64]	@ 0x40
 80081c0:	6820      	ldr	r0, [r4, #0]
 80081c2:	4333      	orrs	r3, r6
 80081c4:	4e4c      	ldr	r6, [pc, #304]	@ (80082f8 <XSPI_ConfigCmd+0x20c>)
 80081c6:	4006      	ands	r6, r0
 80081c8:	4333      	orrs	r3, r6

        /* The DHQC bit is linked with DDTR bit which should be activated */
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
            (pCmd->InstructionDTRMode == HAL_XSPI_INSTRUCTION_DTR_ENABLE))
        {
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 80081ca:	6023      	str	r3, [r4, #0]
        }
      }
      /* Configure the IR register with the instruction value */
      *ir_reg = pCmd->Instruction;
 80081cc:	688b      	ldr	r3, [r1, #8]
 80081ce:	602b      	str	r3, [r5, #0]
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE),
                   (pCmd->AddressMode | pCmd->AddressDTRMode | pCmd->AddressWidth));
      }

      /* Configure the AR register with the instruction value */
      hxspi->Instance->AR = pCmd->Address;
 80081d0:	698b      	ldr	r3, [r1, #24]
 80081d2:	6493      	str	r3, [r2, #72]	@ 0x48
 80081d4:	e057      	b.n	8008286 <XSPI_ConfigCmd+0x19a>
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 80081d6:	4b49      	ldr	r3, [pc, #292]	@ (80082fc <XSPI_ConfigCmd+0x210>)
 80081d8:	429a      	cmp	r2, r3
 80081da:	d003      	beq.n	80081e4 <XSPI_ConfigCmd+0xf8>
 80081dc:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80081e0:	429a      	cmp	r2, r3
 80081e2:	d106      	bne.n	80081f2 <XSPI_ConfigCmd+0x106>
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 80081e4:	6883      	ldr	r3, [r0, #8]
 80081e6:	2b00      	cmp	r3, #0
 80081e8:	d1a0      	bne.n	800812c <XSPI_ConfigCmd+0x40>
      MODIFY_REG(hxspi->Instance->CR, HSPI_CR_MSEL, pCmd->IOSelect);
 80081ea:	6813      	ldr	r3, [r2, #0]
 80081ec:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 80081f0:	e799      	b.n	8008126 <XSPI_ConfigCmd+0x3a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 80081f2:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 80081f4:	f043 0308 	orr.w	r3, r3, #8
    }
    else
    {
      /* ---- Invalid command configuration (no instruction, no address) ---- */
      status = HAL_ERROR;
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 80081f8:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 80081fa:	2001      	movs	r0, #1
 80081fc:	e044      	b.n	8008288 <XSPI_ConfigCmd+0x19c>
  else if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRAP_CFG)
 80081fe:	2b03      	cmp	r3, #3
    ccr_reg = &(hxspi->Instance->WPCCR);
 8008200:	bf01      	itttt	eq
 8008202:	f502 74a0 	addeq.w	r4, r2, #320	@ 0x140
    tcr_reg = &(hxspi->Instance->WPTCR);
 8008206:	f502 76a4 	addeq.w	r6, r2, #328	@ 0x148
    ir_reg  = &(hxspi->Instance->WPIR);
 800820a:	f502 75a8 	addeq.w	r5, r2, #336	@ 0x150
    abr_reg = &(hxspi->Instance->WPABR);
 800820e:	f502 7cb0 	addeq.w	ip, r2, #352	@ 0x160
    ccr_reg = &(hxspi->Instance->CCR);
 8008212:	bf1f      	itttt	ne
 8008214:	f502 7480 	addne.w	r4, r2, #256	@ 0x100
    tcr_reg = &(hxspi->Instance->TCR);
 8008218:	f502 7684 	addne.w	r6, r2, #264	@ 0x108
    ir_reg  = &(hxspi->Instance->IR);
 800821c:	f502 7588 	addne.w	r5, r2, #272	@ 0x110
    abr_reg = &(hxspi->Instance->ABR);
 8008220:	f502 7c90 	addne.w	ip, r2, #288	@ 0x120
 8008224:	e78d      	b.n	8008142 <XSPI_ConfigCmd+0x56>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 8008226:	ea43 0309 	orr.w	r3, r3, r9
 800822a:	f8d4 e000 	ldr.w	lr, [r4]
 800822e:	ea43 0308 	orr.w	r3, r3, r8
 8008232:	ea43 030c 	orr.w	r3, r3, ip
 8008236:	433b      	orrs	r3, r7
 8008238:	f42e 5e7c 	bic.w	lr, lr, #16128	@ 0x3f00
 800823c:	4333      	orrs	r3, r6
 800823e:	f02e 0e3f 	bic.w	lr, lr, #63	@ 0x3f
 8008242:	ea43 030e 	orr.w	r3, r3, lr
 8008246:	6023      	str	r3, [r4, #0]
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
 8008248:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800824a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800824e:	d1bd      	bne.n	80081cc <XSPI_ConfigCmd+0xe0>
 8008250:	694b      	ldr	r3, [r1, #20]
 8008252:	2b08      	cmp	r3, #8
 8008254:	d1ba      	bne.n	80081cc <XSPI_ConfigCmd+0xe0>
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 8008256:	6823      	ldr	r3, [r4, #0]
 8008258:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800825c:	e7b5      	b.n	80081ca <XSPI_ConfigCmd+0xde>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE |
 800825e:	6822      	ldr	r2, [r4, #0]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 8008260:	f1be 0f00 	cmp.w	lr, #0
 8008264:	d012      	beq.n	800828c <XSPI_ConfigCmd+0x1a0>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE |
 8008266:	ea4e 0303 	orr.w	r3, lr, r3
 800826a:	6c08      	ldr	r0, [r1, #64]	@ 0x40
 800826c:	ea43 0308 	orr.w	r3, r3, r8
 8008270:	ea43 030c 	orr.w	r3, r3, ip
 8008274:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8008278:	4303      	orrs	r3, r0
 800827a:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 800827e:	4313      	orrs	r3, r2
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 8008280:	6023      	str	r3, [r4, #0]
      *ir_reg = pCmd->Instruction;
 8008282:	688b      	ldr	r3, [r1, #8]
 8008284:	602b      	str	r3, [r5, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8008286:	2000      	movs	r0, #0
    }
  }

  return status;
}
 8008288:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE),
 800828c:	ea43 0308 	orr.w	r3, r3, r8
 8008290:	ea43 030c 	orr.w	r3, r3, ip
 8008294:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 8008298:	4313      	orrs	r3, r2
 800829a:	6023      	str	r3, [r4, #0]
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
 800829c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800829e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80082a2:	d1ee      	bne.n	8008282 <XSPI_ConfigCmd+0x196>
 80082a4:	694b      	ldr	r3, [r1, #20]
 80082a6:	2b08      	cmp	r3, #8
 80082a8:	d1eb      	bne.n	8008282 <XSPI_ConfigCmd+0x196>
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 80082aa:	6823      	ldr	r3, [r4, #0]
 80082ac:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 80082b0:	e7e6      	b.n	8008280 <XSPI_ConfigCmd+0x194>
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 80082b2:	f1b9 0f00 	cmp.w	r9, #0
 80082b6:	d01b      	beq.n	80082f0 <XSPI_ConfigCmd+0x204>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 80082b8:	e9d1 6008 	ldrd	r6, r0, [r1, #32]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 80082bc:	f1be 0f00 	cmp.w	lr, #0
 80082c0:	d00d      	beq.n	80082de <XSPI_ConfigCmd+0x1f2>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE |
 80082c2:	ea4e 0309 	orr.w	r3, lr, r9
 80082c6:	6825      	ldr	r5, [r4, #0]
 80082c8:	4303      	orrs	r3, r0
 80082ca:	6c08      	ldr	r0, [r1, #64]	@ 0x40
 80082cc:	4333      	orrs	r3, r6
 80082ce:	4303      	orrs	r3, r0
 80082d0:	f025 6070 	bic.w	r0, r5, #251658240	@ 0xf000000
 80082d4:	f420 507c 	bic.w	r0, r0, #16128	@ 0x3f00
 80082d8:	4303      	orrs	r3, r0
 80082da:	6023      	str	r3, [r4, #0]
 80082dc:	e778      	b.n	80081d0 <XSPI_ConfigCmd+0xe4>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE),
 80082de:	6823      	ldr	r3, [r4, #0]
 80082e0:	ea40 0009 	orr.w	r0, r0, r9
 80082e4:	4330      	orrs	r0, r6
 80082e6:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 80082ea:	4318      	orrs	r0, r3
 80082ec:	6020      	str	r0, [r4, #0]
 80082ee:	e76f      	b.n	80081d0 <XSPI_ConfigCmd+0xe4>
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 80082f0:	2308      	movs	r3, #8
 80082f2:	e781      	b.n	80081f8 <XSPI_ConfigCmd+0x10c>
 80082f4:	420d1400 	.word	0x420d1400
 80082f8:	f0ffc0c0 	.word	0xf0ffc0c0
 80082fc:	420d3400 	.word	0x420d3400

08008300 <XSPI_WaitFlagStateUntilTimeout>:
{
 8008300:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008304:	4604      	mov	r4, r0
 8008306:	460e      	mov	r6, r1
 8008308:	4615      	mov	r5, r2
 800830a:	461f      	mov	r7, r3
 800830c:	f8dd 8018 	ldr.w	r8, [sp, #24]
  while ((HAL_XSPI_GET_FLAG(hxspi, Flag)) != State)
 8008310:	6822      	ldr	r2, [r4, #0]
 8008312:	6a13      	ldr	r3, [r2, #32]
 8008314:	4233      	tst	r3, r6
 8008316:	bf14      	ite	ne
 8008318:	2301      	movne	r3, #1
 800831a:	2300      	moveq	r3, #0
 800831c:	42ab      	cmp	r3, r5
 800831e:	d101      	bne.n	8008324 <XSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8008320:	2000      	movs	r0, #0
 8008322:	e012      	b.n	800834a <XSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8008324:	f1b8 3fff 	cmp.w	r8, #4294967295
 8008328:	d0f3      	beq.n	8008312 <XSPI_WaitFlagStateUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800832a:	f7fb fca3 	bl	8003c74 <HAL_GetTick>
 800832e:	1bc0      	subs	r0, r0, r7
 8008330:	4540      	cmp	r0, r8
 8008332:	d802      	bhi.n	800833a <XSPI_WaitFlagStateUntilTimeout+0x3a>
 8008334:	f1b8 0f00 	cmp.w	r8, #0
 8008338:	d1ea      	bne.n	8008310 <XSPI_WaitFlagStateUntilTimeout+0x10>
        hxspi->State     = HAL_XSPI_STATE_ERROR;
 800833a:	f44f 7300 	mov.w	r3, #512	@ 0x200
        hxspi->ErrorCode |= HAL_XSPI_ERROR_TIMEOUT;
 800833e:	2003      	movs	r0, #3
        hxspi->State     = HAL_XSPI_STATE_ERROR;
 8008340:	6563      	str	r3, [r4, #84]	@ 0x54
        hxspi->ErrorCode |= HAL_XSPI_ERROR_TIMEOUT;
 8008342:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8008344:	f043 0301 	orr.w	r3, r3, #1
 8008348:	65a3      	str	r3, [r4, #88]	@ 0x58
}
 800834a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08008350 <HAL_XSPI_Init>:
{
 8008350:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008352:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008354:	f7fb fc8e 	bl	8003c74 <HAL_GetTick>
 8008358:	4605      	mov	r5, r0
  if (hxspi == NULL)
 800835a:	2c00      	cmp	r4, #0
 800835c:	f000 80a8 	beq.w	80084b0 <HAL_XSPI_Init+0x160>
    hxspi->ErrorCode = HAL_XSPI_ERROR_NONE;
 8008360:	2300      	movs	r3, #0
 8008362:	65a3      	str	r3, [r4, #88]	@ 0x58
    if (hxspi->State == HAL_XSPI_STATE_RESET)
 8008364:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8008366:	2b00      	cmp	r3, #0
 8008368:	f040 8094 	bne.w	8008494 <HAL_XSPI_Init+0x144>
      HAL_XSPI_MspInit(hxspi);
 800836c:	4620      	mov	r0, r4
 800836e:	f7f8 faf3 	bl	8000958 <HAL_XSPI_MspInit>
  hxspi->Timeout = Timeout;
 8008372:	f241 3388 	movw	r3, #5000	@ 0x1388
      MODIFY_REG(hxspi->Instance->DCR1,
 8008376:	68e1      	ldr	r1, [r4, #12]
  hxspi->Timeout = Timeout;
 8008378:	65e3      	str	r3, [r4, #92]	@ 0x5c
      MODIFY_REG(hxspi->Instance->DCR1,
 800837a:	69e3      	ldr	r3, [r4, #28]
 800837c:	6822      	ldr	r2, [r4, #0]
 800837e:	4319      	orrs	r1, r3
 8008380:	6923      	ldr	r3, [r4, #16]
 8008382:	6890      	ldr	r0, [r2, #8]
 8008384:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8008388:	4b4a      	ldr	r3, [pc, #296]	@ (80084b4 <HAL_XSPI_Init+0x164>)
 800838a:	4003      	ands	r3, r0
 800838c:	4319      	orrs	r1, r3
 800838e:	6963      	ldr	r3, [r4, #20]
 8008390:	3b01      	subs	r3, #1
 8008392:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 8008396:	6091      	str	r1, [r2, #8]
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008398:	4947      	ldr	r1, [pc, #284]	@ (80084b8 <HAL_XSPI_Init+0x168>)
 800839a:	428a      	cmp	r2, r1
 800839c:	d00c      	beq.n	80083b8 <HAL_XSPI_Init+0x68>
 800839e:	4b47      	ldr	r3, [pc, #284]	@ (80084bc <HAL_XSPI_Init+0x16c>)
 80083a0:	429a      	cmp	r2, r3
 80083a2:	d009      	beq.n	80083b8 <HAL_XSPI_Init+0x68>
 80083a4:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 80083a8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80083ac:	429a      	cmp	r2, r3
 80083ae:	d003      	beq.n	80083b8 <HAL_XSPI_Init+0x68>
 80083b0:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80083b4:	429a      	cmp	r2, r3
 80083b6:	d105      	bne.n	80083c4 <HAL_XSPI_Init+0x74>
        MODIFY_REG(hxspi->Instance->DCR1, OCTOSPI_DCR1_DLYBYP, hxspi->Init.DelayBlockBypass);
 80083b8:	6893      	ldr	r3, [r2, #8]
 80083ba:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80083bc:	f023 0308 	bic.w	r3, r3, #8
 80083c0:	4303      	orrs	r3, r0
 80083c2:	6093      	str	r3, [r2, #8]
      MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_WRAPSIZE, hxspi->Init.WrapSize);
 80083c4:	68d3      	ldr	r3, [r2, #12]
 80083c6:	6a20      	ldr	r0, [r4, #32]
 80083c8:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 80083cc:	4303      	orrs	r3, r0
 80083ce:	60d3      	str	r3, [r2, #12]
      MODIFY_REG(hxspi->Instance->DCR3, XSPI_DCR3_CSBOUND, (hxspi->Init.ChipSelectBoundary << XSPI_DCR3_CSBOUND_Pos));
 80083d0:	6913      	ldr	r3, [r2, #16]
 80083d2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80083d4:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 80083d8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 80083dc:	428a      	cmp	r2, r1
      MODIFY_REG(hxspi->Instance->DCR3, XSPI_DCR3_CSBOUND, (hxspi->Init.ChipSelectBoundary << XSPI_DCR3_CSBOUND_Pos));
 80083de:	6113      	str	r3, [r2, #16]
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 80083e0:	d00c      	beq.n	80083fc <HAL_XSPI_Init+0xac>
 80083e2:	4b36      	ldr	r3, [pc, #216]	@ (80084bc <HAL_XSPI_Init+0x16c>)
 80083e4:	429a      	cmp	r2, r3
 80083e6:	d009      	beq.n	80083fc <HAL_XSPI_Init+0xac>
 80083e8:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 80083ec:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80083f0:	429a      	cmp	r2, r3
 80083f2:	d003      	beq.n	80083fc <HAL_XSPI_Init+0xac>
 80083f4:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80083f8:	429a      	cmp	r2, r3
 80083fa:	d105      	bne.n	8008408 <HAL_XSPI_Init+0xb8>
        MODIFY_REG(hxspi->Instance->DCR3, OCTOSPI_DCR3_MAXTRAN, \
 80083fc:	6913      	ldr	r3, [r2, #16]
 80083fe:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8008400:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8008404:	430b      	orrs	r3, r1
 8008406:	6113      	str	r3, [r2, #16]
      hxspi->Instance->DCR4 = hxspi->Init.Refresh;
 8008408:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FTHRES, ((hxspi->Init.FifoThresholdByte - 1U) << XSPI_CR_FTHRES_Pos));
 800840a:	6861      	ldr	r1, [r4, #4]
      hxspi->Instance->DCR4 = hxspi->Init.Refresh;
 800840c:	6153      	str	r3, [r2, #20]
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FTHRES, ((hxspi->Init.FifoThresholdByte - 1U) << XSPI_CR_FTHRES_Pos));
 800840e:	6813      	ldr	r3, [r2, #0]
 8008410:	3901      	subs	r1, #1
 8008412:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8008416:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800841a:	6013      	str	r3, [r2, #0]
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 800841c:	f241 3388 	movw	r3, #5000	@ 0x1388
 8008420:	2200      	movs	r2, #0
 8008422:	9300      	str	r3, [sp, #0]
 8008424:	2120      	movs	r1, #32
 8008426:	462b      	mov	r3, r5
 8008428:	4620      	mov	r0, r4
 800842a:	f7ff ff69 	bl	8008300 <XSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800842e:	2800      	cmp	r0, #0
 8008430:	d13c      	bne.n	80084ac <HAL_XSPI_Init+0x15c>
        MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_PRESCALER,
 8008432:	6822      	ldr	r2, [r4, #0]
 8008434:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8008436:	68d3      	ldr	r3, [r2, #12]
 8008438:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800843c:	430b      	orrs	r3, r1
 800843e:	60d3      	str	r3, [r2, #12]
        if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 8008440:	4b1f      	ldr	r3, [pc, #124]	@ (80084c0 <HAL_XSPI_Init+0x170>)
 8008442:	429a      	cmp	r2, r3
 8008444:	d028      	beq.n	8008498 <HAL_XSPI_Init+0x148>
 8008446:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800844a:	429a      	cmp	r2, r3
 800844c:	d024      	beq.n	8008498 <HAL_XSPI_Init+0x148>
        MODIFY_REG(hxspi->Instance->CR, XSPI_CR_DMM, hxspi->Init.MemoryMode);
 800844e:	6823      	ldr	r3, [r4, #0]
 8008450:	68a1      	ldr	r1, [r4, #8]
 8008452:	681a      	ldr	r2, [r3, #0]
 8008454:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8008458:	430a      	orrs	r2, r1
 800845a:	601a      	str	r2, [r3, #0]
        MODIFY_REG(hxspi->Instance->TCR, (XSPI_TCR_SSHIFT | XSPI_TCR_DHQC),
 800845c:	f8d3 1108 	ldr.w	r1, [r3, #264]	@ 0x108
 8008460:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 8008464:	f021 41a0 	bic.w	r1, r1, #1342177280	@ 0x50000000
 8008468:	4302      	orrs	r2, r0
 800846a:	430a      	orrs	r2, r1
 800846c:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108
        HAL_XSPI_ENABLE(hxspi);
 8008470:	681a      	ldr	r2, [r3, #0]
 8008472:	f042 0201 	orr.w	r2, r2, #1
 8008476:	601a      	str	r2, [r3, #0]
        if (hxspi->Init.FreeRunningClock == HAL_XSPI_FREERUNCLK_ENABLE)
 8008478:	69a2      	ldr	r2, [r4, #24]
 800847a:	2a02      	cmp	r2, #2
 800847c:	d103      	bne.n	8008486 <HAL_XSPI_Init+0x136>
          SET_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 800847e:	689a      	ldr	r2, [r3, #8]
 8008480:	f042 0202 	orr.w	r2, r2, #2
 8008484:	609a      	str	r2, [r3, #8]
        if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 8008486:	68e3      	ldr	r3, [r4, #12]
 8008488:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
          hxspi->State = HAL_XSPI_STATE_HYPERBUS_INIT;
 800848c:	bf0c      	ite	eq
 800848e:	2301      	moveq	r3, #1
          hxspi->State = HAL_XSPI_STATE_READY;
 8008490:	2302      	movne	r3, #2
 8008492:	6563      	str	r3, [r4, #84]	@ 0x54
  HAL_StatusTypeDef status = HAL_OK;
 8008494:	2000      	movs	r0, #0
 8008496:	e009      	b.n	80084ac <HAL_XSPI_Init+0x15c>
          status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 8008498:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 800849a:	2200      	movs	r2, #0
 800849c:	9300      	str	r3, [sp, #0]
 800849e:	2120      	movs	r1, #32
 80084a0:	462b      	mov	r3, r5
 80084a2:	4620      	mov	r0, r4
 80084a4:	f7ff ff2c 	bl	8008300 <XSPI_WaitFlagStateUntilTimeout>
          if (status != HAL_OK)
 80084a8:	2800      	cmp	r0, #0
 80084aa:	d0d0      	beq.n	800844e <HAL_XSPI_Init+0xfe>
}
 80084ac:	b003      	add	sp, #12
 80084ae:	bd30      	pop	{r4, r5, pc}
    status = HAL_ERROR;
 80084b0:	2001      	movs	r0, #1
 80084b2:	e7fb      	b.n	80084ac <HAL_XSPI_Init+0x15c>
 80084b4:	f8e0c0fc 	.word	0xf8e0c0fc
 80084b8:	420d1400 	.word	0x420d1400
 80084bc:	520d1400 	.word	0x520d1400
 80084c0:	420d3400 	.word	0x420d3400

080084c4 <HAL_XSPI_Command>:
{
 80084c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80084c8:	4604      	mov	r4, r0
 80084ca:	4690      	mov	r8, r2
 80084cc:	460e      	mov	r6, r1
  uint32_t tickstart = HAL_GetTick();
 80084ce:	f7fb fbd1 	bl	8003c74 <HAL_GetTick>
  if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 80084d2:	68a2      	ldr	r2, [r4, #8]
  uint32_t tickstart = HAL_GetTick();
 80084d4:	4607      	mov	r7, r0
  if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 80084d6:	6825      	ldr	r5, [r4, #0]
 80084d8:	4b42      	ldr	r3, [pc, #264]	@ (80085e4 <HAL_XSPI_Command+0x120>)
 80084da:	bb02      	cbnz	r2, 800851e <HAL_XSPI_Command+0x5a>
    if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 80084dc:	429d      	cmp	r5, r3
 80084de:	d037      	beq.n	8008550 <HAL_XSPI_Command+0x8c>
 80084e0:	4a41      	ldr	r2, [pc, #260]	@ (80085e8 <HAL_XSPI_Command+0x124>)
 80084e2:	4295      	cmp	r5, r2
 80084e4:	d01b      	beq.n	800851e <HAL_XSPI_Command+0x5a>
 80084e6:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80084ea:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 80084ee:	4295      	cmp	r5, r2
 80084f0:	d015      	beq.n	800851e <HAL_XSPI_Command+0x5a>
 80084f2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80084f6:	4295      	cmp	r5, r2
 80084f8:	d011      	beq.n	800851e <HAL_XSPI_Command+0x5a>
    else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 80084fa:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80084fe:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 8008502:	4295      	cmp	r5, r2
 8008504:	d00b      	beq.n	800851e <HAL_XSPI_Command+0x5a>
 8008506:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800850a:	4295      	cmp	r5, r2
 800850c:	d007      	beq.n	800851e <HAL_XSPI_Command+0x5a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 800850e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8008510:	f043 0308 	orr.w	r3, r3, #8
      return HAL_ERROR;
 8008514:	2001      	movs	r0, #1
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 8008516:	65a3      	str	r3, [r4, #88]	@ 0x58
}
 8008518:	b002      	add	sp, #8
 800851a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800851e:	429d      	cmp	r5, r3
 8008520:	d016      	beq.n	8008550 <HAL_XSPI_Command+0x8c>
 8008522:	4b31      	ldr	r3, [pc, #196]	@ (80085e8 <HAL_XSPI_Command+0x124>)
 8008524:	429d      	cmp	r5, r3
 8008526:	d013      	beq.n	8008550 <HAL_XSPI_Command+0x8c>
 8008528:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 800852c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008530:	429d      	cmp	r5, r3
 8008532:	d00d      	beq.n	8008550 <HAL_XSPI_Command+0x8c>
 8008534:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008538:	429d      	cmp	r5, r3
 800853a:	d009      	beq.n	8008550 <HAL_XSPI_Command+0x8c>
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 800853c:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 8008540:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008544:	429d      	cmp	r5, r3
 8008546:	d003      	beq.n	8008550 <HAL_XSPI_Command+0x8c>
 8008548:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 800854c:	429d      	cmp	r5, r3
 800854e:	d1de      	bne.n	800850e <HAL_XSPI_Command+0x4a>
  state = hxspi->State;
 8008550:	6d63      	ldr	r3, [r4, #84]	@ 0x54
  if (((state == HAL_XSPI_STATE_READY)         && (hxspi->Init.MemoryType != HAL_XSPI_MEMTYPE_HYPERBUS)) ||
 8008552:	2b02      	cmp	r3, #2
 8008554:	d105      	bne.n	8008562 <HAL_XSPI_Command+0x9e>
 8008556:	68e3      	ldr	r3, [r4, #12]
 8008558:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800855c:	d107      	bne.n	800856e <HAL_XSPI_Command+0xaa>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 800855e:	2310      	movs	r3, #16
 8008560:	e7d8      	b.n	8008514 <HAL_XSPI_Command+0x50>
  if (((state == HAL_XSPI_STATE_READY)         && (hxspi->Init.MemoryType != HAL_XSPI_MEMTYPE_HYPERBUS)) ||
 8008562:	2b14      	cmp	r3, #20
 8008564:	d121      	bne.n	80085aa <HAL_XSPI_Command+0xe6>
      ((state == HAL_XSPI_STATE_READ_CMD_CFG)  && ((pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG) ||
 8008566:	6833      	ldr	r3, [r6, #0]
 8008568:	3b02      	subs	r3, #2
 800856a:	2b01      	cmp	r3, #1
 800856c:	d8f7      	bhi.n	800855e <HAL_XSPI_Command+0x9a>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800856e:	463b      	mov	r3, r7
 8008570:	2200      	movs	r2, #0
 8008572:	2120      	movs	r1, #32
 8008574:	4620      	mov	r0, r4
 8008576:	f8cd 8000 	str.w	r8, [sp]
 800857a:	f7ff fec1 	bl	8008300 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800857e:	bb78      	cbnz	r0, 80085e0 <HAL_XSPI_Command+0x11c>
      hxspi->ErrorCode = HAL_XSPI_ERROR_NONE;
 8008580:	65a0      	str	r0, [r4, #88]	@ 0x58
      status = XSPI_ConfigCmd(hxspi, pCmd);
 8008582:	4631      	mov	r1, r6
 8008584:	4620      	mov	r0, r4
 8008586:	f7ff fdb1 	bl	80080ec <XSPI_ConfigCmd>
      if (status == HAL_OK)
 800858a:	2800      	cmp	r0, #0
 800858c:	d1c4      	bne.n	8008518 <HAL_XSPI_Command+0x54>
        if (pCmd->DataMode == HAL_XSPI_DATA_NONE)
 800858e:	6bb3      	ldr	r3, [r6, #56]	@ 0x38
 8008590:	b99b      	cbnz	r3, 80085ba <HAL_XSPI_Command+0xf6>
          status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, Timeout);
 8008592:	463b      	mov	r3, r7
 8008594:	2201      	movs	r2, #1
 8008596:	2102      	movs	r1, #2
 8008598:	4620      	mov	r0, r4
 800859a:	f8cd 8000 	str.w	r8, [sp]
 800859e:	f7ff feaf 	bl	8008300 <XSPI_WaitFlagStateUntilTimeout>
          HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 80085a2:	2202      	movs	r2, #2
 80085a4:	6823      	ldr	r3, [r4, #0]
 80085a6:	625a      	str	r2, [r3, #36]	@ 0x24
 80085a8:	e7b6      	b.n	8008518 <HAL_XSPI_Command+0x54>
                                                   (pCmd->OperationType == HAL_XSPI_OPTYPE_WRAP_CFG))) ||
 80085aa:	2b24      	cmp	r3, #36	@ 0x24
 80085ac:	d1d7      	bne.n	800855e <HAL_XSPI_Command+0x9a>
      ((state == HAL_XSPI_STATE_WRITE_CMD_CFG) &&
 80085ae:	6833      	ldr	r3, [r6, #0]
 80085b0:	f023 0302 	bic.w	r3, r3, #2
 80085b4:	2b01      	cmp	r3, #1
 80085b6:	d1d2      	bne.n	800855e <HAL_XSPI_Command+0x9a>
 80085b8:	e7d9      	b.n	800856e <HAL_XSPI_Command+0xaa>
          if (pCmd->OperationType == HAL_XSPI_OPTYPE_COMMON_CFG)
 80085ba:	6833      	ldr	r3, [r6, #0]
 80085bc:	b90b      	cbnz	r3, 80085c2 <HAL_XSPI_Command+0xfe>
              hxspi->State = HAL_XSPI_STATE_CMD_CFG;
 80085be:	2304      	movs	r3, #4
 80085c0:	e005      	b.n	80085ce <HAL_XSPI_Command+0x10a>
          else if (pCmd->OperationType == HAL_XSPI_OPTYPE_READ_CFG)
 80085c2:	2b01      	cmp	r3, #1
 80085c4:	d105      	bne.n	80085d2 <HAL_XSPI_Command+0x10e>
            if (hxspi->State == HAL_XSPI_STATE_WRITE_CMD_CFG)
 80085c6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80085c8:	2b24      	cmp	r3, #36	@ 0x24
 80085ca:	d0f8      	beq.n	80085be <HAL_XSPI_Command+0xfa>
              hxspi->State = HAL_XSPI_STATE_READ_CMD_CFG;
 80085cc:	2314      	movs	r3, #20
              hxspi->State = HAL_XSPI_STATE_WRITE_CMD_CFG;
 80085ce:	6563      	str	r3, [r4, #84]	@ 0x54
 80085d0:	e7a2      	b.n	8008518 <HAL_XSPI_Command+0x54>
          else if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG)
 80085d2:	2b02      	cmp	r3, #2
 80085d4:	d1a0      	bne.n	8008518 <HAL_XSPI_Command+0x54>
            if (hxspi->State == HAL_XSPI_STATE_READ_CMD_CFG)
 80085d6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80085d8:	2b14      	cmp	r3, #20
 80085da:	d0f0      	beq.n	80085be <HAL_XSPI_Command+0xfa>
              hxspi->State = HAL_XSPI_STATE_WRITE_CMD_CFG;
 80085dc:	2324      	movs	r3, #36	@ 0x24
 80085de:	e7f6      	b.n	80085ce <HAL_XSPI_Command+0x10a>
      status = HAL_BUSY;
 80085e0:	2002      	movs	r0, #2
 80085e2:	e799      	b.n	8008518 <HAL_XSPI_Command+0x54>
 80085e4:	420d1400 	.word	0x420d1400
 80085e8:	520d1400 	.word	0x520d1400

080085ec <HAL_XSPI_Transmit>:
{
 80085ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80085f0:	4604      	mov	r4, r0
 80085f2:	4688      	mov	r8, r1
 80085f4:	4616      	mov	r6, r2
  uint32_t tickstart = HAL_GetTick();
 80085f6:	f7fb fb3d 	bl	8003c74 <HAL_GetTick>
  __IO uint32_t *data_reg = &hxspi->Instance->DR;
 80085fa:	6827      	ldr	r7, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 80085fc:	4605      	mov	r5, r0
  if (pData == NULL)
 80085fe:	f1b8 0f00 	cmp.w	r8, #0
 8008602:	d103      	bne.n	800860c <HAL_XSPI_Transmit+0x20>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 8008604:	2308      	movs	r3, #8
    status = HAL_ERROR;
 8008606:	2001      	movs	r0, #1
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008608:	65a3      	str	r3, [r4, #88]	@ 0x58
 800860a:	e02e      	b.n	800866a <HAL_XSPI_Transmit+0x7e>
    if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 800860c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800860e:	2b04      	cmp	r3, #4
 8008610:	d12e      	bne.n	8008670 <HAL_XSPI_Transmit+0x84>
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 8008612:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
      hxspi->pBuffPtr  = pData;
 8008614:	f8c4 8040 	str.w	r8, [r4, #64]	@ 0x40
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 8008618:	3301      	adds	r3, #1
 800861a:	64a3      	str	r3, [r4, #72]	@ 0x48
      hxspi->XferSize  = hxspi->XferCount;
 800861c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800861e:	6463      	str	r3, [r4, #68]	@ 0x44
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, XSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8008620:	683b      	ldr	r3, [r7, #0]
 8008622:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 8008626:	603b      	str	r3, [r7, #0]
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_FT, SET, tickstart, Timeout);
 8008628:	462b      	mov	r3, r5
 800862a:	2201      	movs	r2, #1
 800862c:	2104      	movs	r1, #4
 800862e:	4620      	mov	r0, r4
 8008630:	9600      	str	r6, [sp, #0]
 8008632:	f7ff fe65 	bl	8008300 <XSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8008636:	b9c0      	cbnz	r0, 800866a <HAL_XSPI_Transmit+0x7e>
        *((__IO uint8_t *)data_reg) = *hxspi->pBuffPtr;
 8008638:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800863a:	781b      	ldrb	r3, [r3, #0]
 800863c:	f887 3050 	strb.w	r3, [r7, #80]	@ 0x50
        hxspi->pBuffPtr++;
 8008640:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008642:	3301      	adds	r3, #1
 8008644:	6423      	str	r3, [r4, #64]	@ 0x40
        hxspi->XferCount--;
 8008646:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008648:	3b01      	subs	r3, #1
 800864a:	64a3      	str	r3, [r4, #72]	@ 0x48
      } while (hxspi->XferCount > 0U);
 800864c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800864e:	2b00      	cmp	r3, #0
 8008650:	d1ea      	bne.n	8008628 <HAL_XSPI_Transmit+0x3c>
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, Timeout);
 8008652:	462b      	mov	r3, r5
 8008654:	2201      	movs	r2, #1
 8008656:	2102      	movs	r1, #2
 8008658:	4620      	mov	r0, r4
 800865a:	9600      	str	r6, [sp, #0]
 800865c:	f7ff fe50 	bl	8008300 <XSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8008660:	b918      	cbnz	r0, 800866a <HAL_XSPI_Transmit+0x7e>
          HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 8008662:	2302      	movs	r3, #2
 8008664:	6822      	ldr	r2, [r4, #0]
 8008666:	6253      	str	r3, [r2, #36]	@ 0x24
          hxspi->State = HAL_XSPI_STATE_READY;
 8008668:	6563      	str	r3, [r4, #84]	@ 0x54
}
 800866a:	b002      	add	sp, #8
 800866c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008670:	2310      	movs	r3, #16
 8008672:	e7c8      	b.n	8008606 <HAL_XSPI_Transmit+0x1a>

08008674 <HAL_XSPI_AutoPolling>:
{
 8008674:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8008678:	4604      	mov	r4, r0
 800867a:	460e      	mov	r6, r1
 800867c:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 800867e:	f7fb faf9 	bl	8003c74 <HAL_GetTick>
  uint32_t addr_reg = hxspi->Instance->AR;
 8008682:	6823      	ldr	r3, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8008684:	4682      	mov	sl, r0
  uint32_t addr_reg = hxspi->Instance->AR;
 8008686:	f8d3 8048 	ldr.w	r8, [r3, #72]	@ 0x48
  uint32_t ir_reg = hxspi->Instance->IR;
 800868a:	f8d3 9110 	ldr.w	r9, [r3, #272]	@ 0x110
  if ((hxspi->State == HAL_XSPI_STATE_CMD_CFG) && (pCfg->AutomaticStop == HAL_XSPI_AUTOMATIC_STOP_ENABLE))
 800868e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8008690:	2b04      	cmp	r3, #4
 8008692:	d13e      	bne.n	8008712 <HAL_XSPI_AutoPolling+0x9e>
 8008694:	68f3      	ldr	r3, [r6, #12]
 8008696:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800869a:	d13a      	bne.n	8008712 <HAL_XSPI_AutoPolling+0x9e>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800869c:	4603      	mov	r3, r0
 800869e:	2200      	movs	r2, #0
 80086a0:	2120      	movs	r1, #32
 80086a2:	4620      	mov	r0, r4
 80086a4:	9700      	str	r7, [sp, #0]
 80086a6:	f7ff fe2b 	bl	8008300 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80086aa:	2800      	cmp	r0, #0
 80086ac:	d135      	bne.n	800871a <HAL_XSPI_AutoPolling+0xa6>
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 80086ae:	e9d6 1202 	ldrd	r1, r2, [r6, #8]
      WRITE_REG(hxspi->Instance->PSMAR, pCfg->MatchValue);
 80086b2:	6825      	ldr	r5, [r4, #0]
 80086b4:	6833      	ldr	r3, [r6, #0]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 80086b6:	4311      	orrs	r1, r2
      WRITE_REG(hxspi->Instance->PSMAR, pCfg->MatchValue);
 80086b8:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      WRITE_REG(hxspi->Instance->PSMKR, pCfg->MatchMask);
 80086bc:	6873      	ldr	r3, [r6, #4]
 80086be:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
      WRITE_REG(hxspi->Instance->PIR,   pCfg->IntervalTime);
 80086c2:	6933      	ldr	r3, [r6, #16]
 80086c4:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 80086c8:	682b      	ldr	r3, [r5, #0]
 80086ca:	f023 5343 	bic.w	r3, r3, #817889280	@ 0x30c00000
 80086ce:	4319      	orrs	r1, r3
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 80086d0:	68e3      	ldr	r3, [r4, #12]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 80086d2:	f041 5100 	orr.w	r1, r1, #536870912	@ 0x20000000
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 80086d6:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 80086da:	6029      	str	r1, [r5, #0]
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 80086dc:	d111      	bne.n	8008702 <HAL_XSPI_AutoPolling+0x8e>
          WRITE_REG(hxspi->Instance->AR, addr_reg);
 80086de:	f8c5 8048 	str.w	r8, [r5, #72]	@ 0x48
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_SM, SET, tickstart, Timeout);
 80086e2:	4653      	mov	r3, sl
 80086e4:	2201      	movs	r2, #1
 80086e6:	2108      	movs	r1, #8
 80086e8:	4620      	mov	r0, r4
 80086ea:	9700      	str	r7, [sp, #0]
 80086ec:	f7ff fe08 	bl	8008300 <XSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80086f0:	b920      	cbnz	r0, 80086fc <HAL_XSPI_AutoPolling+0x88>
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_SM);
 80086f2:	2208      	movs	r2, #8
 80086f4:	6823      	ldr	r3, [r4, #0]
 80086f6:	625a      	str	r2, [r3, #36]	@ 0x24
        hxspi->State = HAL_XSPI_STATE_READY;
 80086f8:	2302      	movs	r3, #2
 80086fa:	6563      	str	r3, [r4, #84]	@ 0x54
}
 80086fc:	b002      	add	sp, #8
 80086fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        if (READ_BIT(hxspi->Instance->CCR, XSPI_CCR_ADMODE) != HAL_XSPI_ADDRESS_NONE)
 8008702:	f8d5 3100 	ldr.w	r3, [r5, #256]	@ 0x100
 8008706:	f413 6fe0 	tst.w	r3, #1792	@ 0x700
 800870a:	d1e8      	bne.n	80086de <HAL_XSPI_AutoPolling+0x6a>
          WRITE_REG(hxspi->Instance->IR, ir_reg);
 800870c:	f8c5 9110 	str.w	r9, [r5, #272]	@ 0x110
 8008710:	e7e7      	b.n	80086e2 <HAL_XSPI_AutoPolling+0x6e>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008712:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8008714:	2001      	movs	r0, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008716:	65a3      	str	r3, [r4, #88]	@ 0x58
 8008718:	e7f0      	b.n	80086fc <HAL_XSPI_AutoPolling+0x88>
      status = HAL_BUSY;
 800871a:	2002      	movs	r0, #2
 800871c:	e7ee      	b.n	80086fc <HAL_XSPI_AutoPolling+0x88>

0800871e <HAL_XSPI_MemoryMapped>:
{
 800871e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008720:	4604      	mov	r4, r0
 8008722:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 8008724:	f7fb faa6 	bl	8003c74 <HAL_GetTick>
  if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 8008728:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  uint32_t tickstart = HAL_GetTick();
 800872a:	4603      	mov	r3, r0
  if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 800872c:	2a04      	cmp	r2, #4
 800872e:	d121      	bne.n	8008774 <HAL_XSPI_MemoryMapped+0x56>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 8008730:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8008732:	2120      	movs	r1, #32
 8008734:	9200      	str	r2, [sp, #0]
 8008736:	4620      	mov	r0, r4
 8008738:	2200      	movs	r2, #0
 800873a:	f7ff fde1 	bl	8008300 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800873e:	b9b8      	cbnz	r0, 8008770 <HAL_XSPI_MemoryMapped+0x52>
      hxspi->State = HAL_XSPI_STATE_BUSY_MEM_MAPPED;
 8008740:	2388      	movs	r3, #136	@ 0x88
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 8008742:	6829      	ldr	r1, [r5, #0]
        WRITE_REG(hxspi->Instance->LPTR, pCfg->TimeoutPeriodClock);
 8008744:	6822      	ldr	r2, [r4, #0]
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 8008746:	2908      	cmp	r1, #8
      hxspi->State = HAL_XSPI_STATE_BUSY_MEM_MAPPED;
 8008748:	6563      	str	r3, [r4, #84]	@ 0x54
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 800874a:	d108      	bne.n	800875e <HAL_XSPI_MemoryMapped+0x40>
        WRITE_REG(hxspi->Instance->LPTR, pCfg->TimeoutPeriodClock);
 800874c:	686b      	ldr	r3, [r5, #4]
 800874e:	f8c2 3130 	str.w	r3, [r2, #304]	@ 0x130
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TO);
 8008752:	2310      	movs	r3, #16
 8008754:	6253      	str	r3, [r2, #36]	@ 0x24
        HAL_XSPI_ENABLE_IT(hxspi, HAL_XSPI_IT_TO);
 8008756:	6813      	ldr	r3, [r2, #0]
 8008758:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800875c:	6013      	str	r3, [r2, #0]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_TCEN | XSPI_CR_FMODE),
 800875e:	6813      	ldr	r3, [r2, #0]
 8008760:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 8008764:	f023 0308 	bic.w	r3, r3, #8
 8008768:	430b      	orrs	r3, r1
 800876a:	f043 5340 	orr.w	r3, r3, #805306368	@ 0x30000000
 800876e:	6013      	str	r3, [r2, #0]
}
 8008770:	b003      	add	sp, #12
 8008772:	bd30      	pop	{r4, r5, pc}
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008774:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8008776:	2001      	movs	r0, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008778:	65a3      	str	r3, [r4, #88]	@ 0x58
 800877a:	e7f9      	b.n	8008770 <HAL_XSPI_MemoryMapped+0x52>

0800877c <HAL_XSPI_ErrorCallback>:
__weak void HAL_XSPI_ErrorCallback(XSPI_HandleTypeDef *hxspi)
 800877c:	4770      	bx	lr

0800877e <HAL_XSPI_AbortCpltCallback>:
__weak void HAL_XSPI_AbortCpltCallback(XSPI_HandleTypeDef *hxspi)
 800877e:	4770      	bx	lr

08008780 <XSPI_DMAAbortCplt>:
{
 8008780:	b508      	push	{r3, lr}
  hxspi->XferCount = 0;
 8008782:	2300      	movs	r3, #0
  XSPI_HandleTypeDef *hxspi = (XSPI_HandleTypeDef *)(hdma->Parent);
 8008784:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
  hxspi->XferCount = 0;
 8008786:	6483      	str	r3, [r0, #72]	@ 0x48
  if (hxspi->State == HAL_XSPI_STATE_ABORT)
 8008788:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 800878a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800878e:	d114      	bne.n	80087ba <XSPI_DMAAbortCplt+0x3a>
    if (HAL_XSPI_GET_FLAG(hxspi, HAL_XSPI_FLAG_BUSY) != RESET)
 8008790:	6803      	ldr	r3, [r0, #0]
 8008792:	6a1a      	ldr	r2, [r3, #32]
 8008794:	f012 0f20 	tst.w	r2, #32
 8008798:	f04f 0202 	mov.w	r2, #2
 800879c:	d009      	beq.n	80087b2 <XSPI_DMAAbortCplt+0x32>
      HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 800879e:	625a      	str	r2, [r3, #36]	@ 0x24
      HAL_XSPI_ENABLE_IT(hxspi, HAL_XSPI_IT_TC);
 80087a0:	681a      	ldr	r2, [r3, #0]
 80087a2:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 80087a6:	601a      	str	r2, [r3, #0]
      SET_BIT(hxspi->Instance->CR, XSPI_CR_ABORT);
 80087a8:	681a      	ldr	r2, [r3, #0]
 80087aa:	f042 0202 	orr.w	r2, r2, #2
 80087ae:	601a      	str	r2, [r3, #0]
}
 80087b0:	bd08      	pop	{r3, pc}
      hxspi->State = HAL_XSPI_STATE_READY;
 80087b2:	6542      	str	r2, [r0, #84]	@ 0x54
      HAL_XSPI_AbortCpltCallback(hxspi);
 80087b4:	f7ff ffe3 	bl	800877e <HAL_XSPI_AbortCpltCallback>
 80087b8:	e7fa      	b.n	80087b0 <XSPI_DMAAbortCplt+0x30>
    hxspi->State = HAL_XSPI_STATE_READY;
 80087ba:	2302      	movs	r3, #2
 80087bc:	6543      	str	r3, [r0, #84]	@ 0x54
    HAL_XSPI_ErrorCallback(hxspi);
 80087be:	f7ff ffdd 	bl	800877c <HAL_XSPI_ErrorCallback>
}
 80087c2:	e7f5      	b.n	80087b0 <XSPI_DMAAbortCplt+0x30>

080087c4 <HAL_XSPI_FifoThresholdCallback>:
__weak void HAL_XSPI_FifoThresholdCallback(XSPI_HandleTypeDef *hxspi)
 80087c4:	4770      	bx	lr

080087c6 <HAL_XSPI_CmdCpltCallback>:
__weak void HAL_XSPI_CmdCpltCallback(XSPI_HandleTypeDef *hxspi)
 80087c6:	4770      	bx	lr

080087c8 <HAL_XSPI_RxCpltCallback>:
__weak void HAL_XSPI_RxCpltCallback(XSPI_HandleTypeDef *hxspi)
 80087c8:	4770      	bx	lr

080087ca <HAL_XSPI_TxCpltCallback>:
__weak void HAL_XSPI_TxCpltCallback(XSPI_HandleTypeDef *hxspi)
 80087ca:	4770      	bx	lr

080087cc <HAL_XSPI_StatusMatchCallback>:
__weak void HAL_XSPI_StatusMatchCallback(XSPI_HandleTypeDef *hxspi)
 80087cc:	4770      	bx	lr

080087ce <HAL_XSPI_TimeOutCallback>:
__weak void HAL_XSPI_TimeOutCallback(XSPI_HandleTypeDef *hxspi)
 80087ce:	4770      	bx	lr

080087d0 <HAL_XSPI_IRQHandler>:
{
 80087d0:	b570      	push	{r4, r5, r6, lr}
 80087d2:	4604      	mov	r4, r0
  __IO uint32_t *data_reg = &hxspi->Instance->DR;
 80087d4:	6803      	ldr	r3, [r0, #0]
  uint32_t flag           = hxspi->Instance->SR;
 80087d6:	6a1a      	ldr	r2, [r3, #32]
  uint32_t itsource       = hxspi->Instance->CR;
 80087d8:	6818      	ldr	r0, [r3, #0]
  if (((flag & HAL_XSPI_FLAG_FT) != 0U) && ((itsource & HAL_XSPI_IT_FT) != 0U))
 80087da:	0755      	lsls	r5, r2, #29
  uint32_t currentstate   = hxspi->State;
 80087dc:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if (((flag & HAL_XSPI_FLAG_FT) != 0U) && ((itsource & HAL_XSPI_IT_FT) != 0U))
 80087de:	d51f      	bpl.n	8008820 <HAL_XSPI_IRQHandler+0x50>
 80087e0:	0346      	lsls	r6, r0, #13
 80087e2:	d51d      	bpl.n	8008820 <HAL_XSPI_IRQHandler+0x50>
    if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 80087e4:	2918      	cmp	r1, #24
 80087e6:	d114      	bne.n	8008812 <HAL_XSPI_IRQHandler+0x42>
      *((__IO uint8_t *)data_reg) = *hxspi->pBuffPtr;
 80087e8:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80087ea:	7812      	ldrb	r2, [r2, #0]
 80087ec:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
      hxspi->pBuffPtr++;
 80087f0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80087f2:	3301      	adds	r3, #1
 80087f4:	6423      	str	r3, [r4, #64]	@ 0x40
      hxspi->XferCount--;
 80087f6:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80087f8:	3b01      	subs	r3, #1
 80087fa:	64a3      	str	r3, [r4, #72]	@ 0x48
    if (hxspi->XferCount == 0U)
 80087fc:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80087fe:	b923      	cbnz	r3, 800880a <HAL_XSPI_IRQHandler+0x3a>
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_FT);
 8008800:	6822      	ldr	r2, [r4, #0]
 8008802:	6813      	ldr	r3, [r2, #0]
 8008804:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8008808:	6013      	str	r3, [r2, #0]
    HAL_XSPI_FifoThresholdCallback(hxspi);
 800880a:	4620      	mov	r0, r4
 800880c:	f7ff ffda 	bl	80087c4 <HAL_XSPI_FifoThresholdCallback>
}
 8008810:	bd70      	pop	{r4, r5, r6, pc}
    else if (currentstate == HAL_XSPI_STATE_BUSY_RX)
 8008812:	2928      	cmp	r1, #40	@ 0x28
 8008814:	d1f2      	bne.n	80087fc <HAL_XSPI_IRQHandler+0x2c>
      *hxspi->pBuffPtr = *((__IO uint8_t *)data_reg);
 8008816:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008818:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800881c:	7013      	strb	r3, [r2, #0]
 800881e:	e7e7      	b.n	80087f0 <HAL_XSPI_IRQHandler+0x20>
  else if (((flag & HAL_XSPI_FLAG_TC) != 0U) && ((itsource & HAL_XSPI_IT_TC) != 0U))
 8008820:	0795      	lsls	r5, r2, #30
 8008822:	d53e      	bpl.n	80088a2 <HAL_XSPI_IRQHandler+0xd2>
 8008824:	0386      	lsls	r6, r0, #14
 8008826:	d53c      	bpl.n	80088a2 <HAL_XSPI_IRQHandler+0xd2>
    if (currentstate == HAL_XSPI_STATE_BUSY_RX)
 8008828:	2928      	cmp	r1, #40	@ 0x28
 800882a:	d11d      	bne.n	8008868 <HAL_XSPI_IRQHandler+0x98>
      if ((hxspi->XferCount > 0U) && ((flag & XSPI_SR_FLEVEL) != 0U))
 800882c:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 800882e:	b169      	cbz	r1, 800884c <HAL_XSPI_IRQHandler+0x7c>
 8008830:	f412 4ffe 	tst.w	r2, #32512	@ 0x7f00
 8008834:	d00a      	beq.n	800884c <HAL_XSPI_IRQHandler+0x7c>
        *hxspi->pBuffPtr = *((__IO uint8_t *)data_reg);
 8008836:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800883a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800883c:	7013      	strb	r3, [r2, #0]
        hxspi->pBuffPtr++;
 800883e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008840:	3301      	adds	r3, #1
 8008842:	6423      	str	r3, [r4, #64]	@ 0x40
        hxspi->XferCount--;
 8008844:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008846:	3b01      	subs	r3, #1
 8008848:	64a3      	str	r3, [r4, #72]	@ 0x48
 800884a:	e7e1      	b.n	8008810 <HAL_XSPI_IRQHandler+0x40>
      else if (hxspi->XferCount == 0U)
 800884c:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 800884e:	2a00      	cmp	r2, #0
 8008850:	d1de      	bne.n	8008810 <HAL_XSPI_IRQHandler+0x40>
        hxspi->Instance->FCR = HAL_XSPI_FLAG_TC;
 8008852:	2102      	movs	r1, #2
 8008854:	6259      	str	r1, [r3, #36]	@ 0x24
        HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 8008856:	681a      	ldr	r2, [r3, #0]
        HAL_XSPI_RxCpltCallback(hxspi);
 8008858:	4620      	mov	r0, r4
        HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 800885a:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 800885e:	601a      	str	r2, [r3, #0]
        hxspi->State = HAL_XSPI_STATE_READY;
 8008860:	6561      	str	r1, [r4, #84]	@ 0x54
        HAL_XSPI_RxCpltCallback(hxspi);
 8008862:	f7ff ffb1 	bl	80087c8 <HAL_XSPI_RxCpltCallback>
 8008866:	e7d3      	b.n	8008810 <HAL_XSPI_IRQHandler+0x40>
      hxspi->Instance->FCR = HAL_XSPI_FLAG_TC;
 8008868:	2002      	movs	r0, #2
 800886a:	6258      	str	r0, [r3, #36]	@ 0x24
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 800886c:	681a      	ldr	r2, [r3, #0]
      if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 800886e:	2918      	cmp	r1, #24
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 8008870:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8008874:	601a      	str	r2, [r3, #0]
      hxspi->State = HAL_XSPI_STATE_READY;
 8008876:	6560      	str	r0, [r4, #84]	@ 0x54
      if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 8008878:	d103      	bne.n	8008882 <HAL_XSPI_IRQHandler+0xb2>
        HAL_XSPI_TxCpltCallback(hxspi);
 800887a:	4620      	mov	r0, r4
 800887c:	f7ff ffa5 	bl	80087ca <HAL_XSPI_TxCpltCallback>
 8008880:	e7c6      	b.n	8008810 <HAL_XSPI_IRQHandler+0x40>
      else if (currentstate == HAL_XSPI_STATE_BUSY_CMD)
 8008882:	2908      	cmp	r1, #8
 8008884:	d103      	bne.n	800888e <HAL_XSPI_IRQHandler+0xbe>
        HAL_XSPI_CmdCpltCallback(hxspi);
 8008886:	4620      	mov	r0, r4
 8008888:	f7ff ff9d 	bl	80087c6 <HAL_XSPI_CmdCpltCallback>
 800888c:	e7c0      	b.n	8008810 <HAL_XSPI_IRQHandler+0x40>
      else if (currentstate == HAL_XSPI_STATE_ABORT)
 800888e:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
 8008892:	d1bd      	bne.n	8008810 <HAL_XSPI_IRQHandler+0x40>
        if (hxspi->ErrorCode == HAL_XSPI_ERROR_NONE)
 8008894:	6da3      	ldr	r3, [r4, #88]	@ 0x58
          HAL_XSPI_AbortCpltCallback(hxspi);
 8008896:	4620      	mov	r0, r4
        if (hxspi->ErrorCode == HAL_XSPI_ERROR_NONE)
 8008898:	2b00      	cmp	r3, #0
 800889a:	d13b      	bne.n	8008914 <HAL_XSPI_IRQHandler+0x144>
          HAL_XSPI_AbortCpltCallback(hxspi);
 800889c:	f7ff ff6f 	bl	800877e <HAL_XSPI_AbortCpltCallback>
 80088a0:	e7b6      	b.n	8008810 <HAL_XSPI_IRQHandler+0x40>
  else if (((flag & HAL_XSPI_FLAG_SM) != 0U) && ((itsource & HAL_XSPI_IT_SM) != 0U))
 80088a2:	0715      	lsls	r5, r2, #28
 80088a4:	d510      	bpl.n	80088c8 <HAL_XSPI_IRQHandler+0xf8>
 80088a6:	0301      	lsls	r1, r0, #12
 80088a8:	d50e      	bpl.n	80088c8 <HAL_XSPI_IRQHandler+0xf8>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_SM;
 80088aa:	2208      	movs	r2, #8
 80088ac:	625a      	str	r2, [r3, #36]	@ 0x24
    if ((hxspi->Instance->CR & XSPI_CR_APMS) != 0U)
 80088ae:	681a      	ldr	r2, [r3, #0]
 80088b0:	0252      	lsls	r2, r2, #9
 80088b2:	d505      	bpl.n	80088c0 <HAL_XSPI_IRQHandler+0xf0>
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_SM | HAL_XSPI_IT_TE);
 80088b4:	681a      	ldr	r2, [r3, #0]
 80088b6:	f422 2210 	bic.w	r2, r2, #589824	@ 0x90000
 80088ba:	601a      	str	r2, [r3, #0]
      hxspi->State = HAL_XSPI_STATE_READY;
 80088bc:	2302      	movs	r3, #2
 80088be:	6563      	str	r3, [r4, #84]	@ 0x54
    HAL_XSPI_StatusMatchCallback(hxspi);
 80088c0:	4620      	mov	r0, r4
 80088c2:	f7ff ff83 	bl	80087cc <HAL_XSPI_StatusMatchCallback>
 80088c6:	e7a3      	b.n	8008810 <HAL_XSPI_IRQHandler+0x40>
  else if (((flag & HAL_XSPI_FLAG_TE) != 0U) && ((itsource & HAL_XSPI_IT_TE) != 0U))
 80088c8:	07d6      	lsls	r6, r2, #31
 80088ca:	d528      	bpl.n	800891e <HAL_XSPI_IRQHandler+0x14e>
 80088cc:	03c5      	lsls	r5, r0, #15
 80088ce:	d526      	bpl.n	800891e <HAL_XSPI_IRQHandler+0x14e>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TE;
 80088d0:	2201      	movs	r2, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_TRANSFER;
 80088d2:	2502      	movs	r5, #2
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TE;
 80088d4:	625a      	str	r2, [r3, #36]	@ 0x24
    HAL_XSPI_DISABLE_IT(hxspi, (HAL_XSPI_IT_TO | HAL_XSPI_IT_SM | HAL_XSPI_IT_FT | HAL_XSPI_IT_TC | HAL_XSPI_IT_TE));
 80088d6:	681a      	ldr	r2, [r3, #0]
 80088d8:	f422 12f8 	bic.w	r2, r2, #2031616	@ 0x1f0000
 80088dc:	601a      	str	r2, [r3, #0]
    hxspi->ErrorCode = HAL_XSPI_ERROR_TRANSFER;
 80088de:	65a5      	str	r5, [r4, #88]	@ 0x58
    if ((hxspi->Instance->CR & XSPI_CR_DMAEN) != 0U)
 80088e0:	681a      	ldr	r2, [r3, #0]
 80088e2:	0750      	lsls	r0, r2, #29
 80088e4:	d519      	bpl.n	800891a <HAL_XSPI_IRQHandler+0x14a>
      CLEAR_BIT(hxspi->Instance->CR, XSPI_CR_DMAEN);
 80088e6:	681a      	ldr	r2, [r3, #0]
      hxspi->hdmatx->XferAbortCallback = XSPI_DMAAbortCplt;
 80088e8:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 80088ea:	4e13      	ldr	r6, [pc, #76]	@ (8008938 <HAL_XSPI_IRQHandler+0x168>)
      CLEAR_BIT(hxspi->Instance->CR, XSPI_CR_DMAEN);
 80088ec:	f022 0204 	bic.w	r2, r2, #4
 80088f0:	601a      	str	r2, [r3, #0]
      hxspi->hdmatx->XferAbortCallback = XSPI_DMAAbortCplt;
 80088f2:	66c6      	str	r6, [r0, #108]	@ 0x6c
      if (HAL_DMA_Abort_IT(hxspi->hdmatx) != HAL_OK)
 80088f4:	f7fb fd50 	bl	8004398 <HAL_DMA_Abort_IT>
 80088f8:	b118      	cbz	r0, 8008902 <HAL_XSPI_IRQHandler+0x132>
        HAL_XSPI_ErrorCallback(hxspi);
 80088fa:	4620      	mov	r0, r4
        hxspi->State = HAL_XSPI_STATE_READY;
 80088fc:	6565      	str	r5, [r4, #84]	@ 0x54
        HAL_XSPI_ErrorCallback(hxspi);
 80088fe:	f7ff ff3d 	bl	800877c <HAL_XSPI_ErrorCallback>
      hxspi->hdmarx->XferAbortCallback = XSPI_DMAAbortCplt;
 8008902:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 8008904:	66c6      	str	r6, [r0, #108]	@ 0x6c
      if (HAL_DMA_Abort_IT(hxspi->hdmarx) != HAL_OK)
 8008906:	f7fb fd47 	bl	8004398 <HAL_DMA_Abort_IT>
 800890a:	2800      	cmp	r0, #0
 800890c:	d080      	beq.n	8008810 <HAL_XSPI_IRQHandler+0x40>
        hxspi->State = HAL_XSPI_STATE_READY;
 800890e:	2302      	movs	r3, #2
 8008910:	6563      	str	r3, [r4, #84]	@ 0x54
        HAL_XSPI_ErrorCallback(hxspi);
 8008912:	4620      	mov	r0, r4
 8008914:	f7ff ff32 	bl	800877c <HAL_XSPI_ErrorCallback>
 8008918:	e77a      	b.n	8008810 <HAL_XSPI_IRQHandler+0x40>
      hxspi->State = HAL_XSPI_STATE_READY;
 800891a:	6565      	str	r5, [r4, #84]	@ 0x54
      HAL_XSPI_ErrorCallback(hxspi);
 800891c:	e7f9      	b.n	8008912 <HAL_XSPI_IRQHandler+0x142>
  else if (((flag & HAL_XSPI_FLAG_TO) != 0U) && ((itsource & HAL_XSPI_IT_TO) != 0U))
 800891e:	06d1      	lsls	r1, r2, #27
 8008920:	f57f af76 	bpl.w	8008810 <HAL_XSPI_IRQHandler+0x40>
 8008924:	02c2      	lsls	r2, r0, #11
 8008926:	f57f af73 	bpl.w	8008810 <HAL_XSPI_IRQHandler+0x40>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TO;
 800892a:	2210      	movs	r2, #16
    HAL_XSPI_TimeOutCallback(hxspi);
 800892c:	4620      	mov	r0, r4
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TO;
 800892e:	625a      	str	r2, [r3, #36]	@ 0x24
    HAL_XSPI_TimeOutCallback(hxspi);
 8008930:	f7ff ff4d 	bl	80087ce <HAL_XSPI_TimeOutCallback>
}
 8008934:	e76c      	b.n	8008810 <HAL_XSPI_IRQHandler+0x40>
 8008936:	bf00      	nop
 8008938:	08008781 	.word	0x08008781

0800893c <IRQ_Context>:
#endif

/*
  Determine if CPU executes from interrupt context or if interrupts are masked.
*/
__STATIC_INLINE uint32_t IRQ_Context (void) {
 800893c:	b510      	push	{r4, lr}
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800893e:	f3ef 8405 	mrs	r4, IPSR
  uint32_t irq;
  BaseType_t state;

  irq = 0U;

  if (IS_IRQ_MODE()) {
 8008942:	b114      	cbz	r4, 800894a <IRQ_Context+0xe>
    /* Called from interrupt context */
    irq = 1U;
 8008944:	2401      	movs	r4, #1
    }
  }

  /* Return context, 0: thread context, 1: IRQ context */
  return (irq);
}
 8008946:	4620      	mov	r0, r4
 8008948:	bd10      	pop	{r4, pc}
    state = xTaskGetSchedulerState();
 800894a:	f001 fc4d 	bl	800a1e8 <xTaskGetSchedulerState>
    if (state != taskSCHEDULER_NOT_STARTED) {
 800894e:	2801      	cmp	r0, #1
 8008950:	d0f9      	beq.n	8008946 <IRQ_Context+0xa>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
 8008952:	f3ef 8310 	mrs	r3, PRIMASK
      if (IS_IRQ_MASKED()) {
 8008956:	2b00      	cmp	r3, #0
 8008958:	d1f4      	bne.n	8008944 <IRQ_Context+0x8>
 */
__STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800895a:	f3ef 8411 	mrs	r4, BASEPRI
 800895e:	3c00      	subs	r4, #0
 8008960:	bf18      	it	ne
 8008962:	2401      	movne	r4, #1
  return (irq);
 8008964:	e7ef      	b.n	8008946 <IRQ_Context+0xa>

08008966 <SysTick_Handler>:
void SysTick_Handler (void) {
 8008966:	b508      	push	{r3, lr}
  SysTick->CTRL;
 8008968:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800896c:	691b      	ldr	r3, [r3, #16]
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800896e:	f001 fc3b 	bl	800a1e8 <xTaskGetSchedulerState>
 8008972:	2801      	cmp	r0, #1
 8008974:	d003      	beq.n	800897e <SysTick_Handler+0x18>
}
 8008976:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800897a:	f000 ba7d 	b.w	8008e78 <xPortSysTickHandler>
}
 800897e:	bd08      	pop	{r3, pc}

08008980 <osKernelInitialize>:
/* ==== Kernel Management Functions ==== */

/*
  Initialize the RTOS Kernel.
*/
osStatus_t osKernelInitialize (void) {
 8008980:	b508      	push	{r3, lr}
  osStatus_t stat;
  BaseType_t state;

  if (IRQ_Context() != 0U) {
 8008982:	f7ff ffdb 	bl	800893c <IRQ_Context>
 8008986:	b948      	cbnz	r0, 800899c <osKernelInitialize+0x1c>
    stat = osErrorISR;
  }
  else {
    state = xTaskGetSchedulerState();
 8008988:	f001 fc2e 	bl	800a1e8 <xTaskGetSchedulerState>

    /* Initialize if scheduler not started and not initialized before */
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelInactive)) {
 800898c:	2801      	cmp	r0, #1
    state = xTaskGetSchedulerState();
 800898e:	4603      	mov	r3, r0
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelInactive)) {
 8008990:	d107      	bne.n	80089a2 <osKernelInitialize+0x22>
 8008992:	4a05      	ldr	r2, [pc, #20]	@ (80089a8 <osKernelInitialize+0x28>)
 8008994:	6810      	ldr	r0, [r2, #0]
 8008996:	b920      	cbnz	r0, 80089a2 <osKernelInitialize+0x22>
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        /* Initialize the memory regions when using heap_5 variant */
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008998:	6013      	str	r3, [r2, #0]
    }
  }

  /* Return execution status */
  return (stat);
}
 800899a:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 800899c:	f06f 0005 	mvn.w	r0, #5
 80089a0:	e7fb      	b.n	800899a <osKernelInitialize+0x1a>
      stat = osError;
 80089a2:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80089a6:	e7f8      	b.n	800899a <osKernelInitialize+0x1a>
 80089a8:	2006efac 	.word	0x2006efac

080089ac <osKernelStart>:
}

/*
  Start the RTOS Kernel scheduler.
*/
osStatus_t osKernelStart (void) {
 80089ac:	b510      	push	{r4, lr}
  osStatus_t stat;
  BaseType_t state;

  if (IRQ_Context() != 0U) {
 80089ae:	f7ff ffc5 	bl	800893c <IRQ_Context>
 80089b2:	4604      	mov	r4, r0
 80089b4:	b978      	cbnz	r0, 80089d6 <osKernelStart+0x2a>
    stat = osErrorISR;
  }
  else {
    state = xTaskGetSchedulerState();
 80089b6:	f001 fc17 	bl	800a1e8 <xTaskGetSchedulerState>

    /* Start scheduler if initialized and not started before */
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelReady)) {
 80089ba:	2801      	cmp	r0, #1
 80089bc:	d10e      	bne.n	80089dc <osKernelStart+0x30>
 80089be:	4b09      	ldr	r3, [pc, #36]	@ (80089e4 <osKernelStart+0x38>)
 80089c0:	681a      	ldr	r2, [r3, #0]
 80089c2:	2a01      	cmp	r2, #1
 80089c4:	d10a      	bne.n	80089dc <osKernelStart+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80089c6:	4a08      	ldr	r2, [pc, #32]	@ (80089e8 <osKernelStart+0x3c>)
 80089c8:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to ensure correct API flow */
      KernelState = osKernelRunning;
 80089ca:	2202      	movs	r2, #2
 80089cc:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 80089ce:	f001 faad 	bl	8009f2c <vTaskStartScheduler>
      stat = osOK;
 80089d2:	4620      	mov	r0, r4
    }
  }

  /* Return execution status */
  return (stat);
}
 80089d4:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80089d6:	f06f 0005 	mvn.w	r0, #5
 80089da:	e7fb      	b.n	80089d4 <osKernelStart+0x28>
      stat = osError;
 80089dc:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80089e0:	e7f8      	b.n	80089d4 <osKernelStart+0x28>
 80089e2:	bf00      	nop
 80089e4:	2006efac 	.word	0x2006efac
 80089e8:	e000ed00 	.word	0xe000ed00

080089ec <osThreadNew>:
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80089ec:	2300      	movs	r3, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80089ee:	b5f0      	push	{r4, r5, r6, r7, lr}
 80089f0:	b087      	sub	sp, #28
 80089f2:	4606      	mov	r6, r0
 80089f4:	460f      	mov	r7, r1
 80089f6:	4614      	mov	r4, r2
  hTask = NULL;
 80089f8:	9305      	str	r3, [sp, #20]

  if ((IRQ_Context() == 0U) && (func != NULL)) {
 80089fa:	f7ff ff9f 	bl	800893c <IRQ_Context>
 80089fe:	b9d8      	cbnz	r0, 8008a38 <osThreadNew+0x4c>
 8008a00:	b1d6      	cbz	r6, 8008a38 <osThreadNew+0x4c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008a02:	2c00      	cmp	r4, #0
 8008a04:	d02f      	beq.n	8008a66 <osThreadNew+0x7a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008a06:	69a5      	ldr	r5, [r4, #24]
 8008a08:	2d00      	cmp	r5, #0
 8008a0a:	bf08      	it	eq
 8008a0c:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008a0e:	1e6b      	subs	r3, r5, #1
 8008a10:	2b37      	cmp	r3, #55	@ 0x37
 8008a12:	46ae      	mov	lr, r5
 8008a14:	d811      	bhi.n	8008a3a <osThreadNew+0x4e>
 8008a16:	6863      	ldr	r3, [r4, #4]
 8008a18:	07db      	lsls	r3, r3, #31
 8008a1a:	d40e      	bmi.n	8008a3a <osThreadNew+0x4e>
        /* Invalid priority or unsupported osThreadJoinable attribute used */
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008a1c:	6963      	ldr	r3, [r4, #20]
 8008a1e:	b173      	cbz	r3, 8008a3e <osThreadNew+0x52>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008a20:	089a      	lsrs	r2, r3, #2
      if (attr->name != NULL) {
 8008a22:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008a24:	e9d4 c002 	ldrd	ip, r0, [r4, #8]
 8008a28:	f1bc 0f00 	cmp.w	ip, #0
 8008a2c:	d009      	beq.n	8008a42 <osThreadNew+0x56>
 8008a2e:	285f      	cmp	r0, #95	@ 0x5f
 8008a30:	d902      	bls.n	8008a38 <osThreadNew+0x4c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008a32:	6920      	ldr	r0, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008a34:	b100      	cbz	r0, 8008a38 <osThreadNew+0x4c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008a36:	b9db      	cbnz	r3, 8008a70 <osThreadNew+0x84>
      }
    }
  }

  /* Return thread ID */
  return ((osThreadId_t)hTask);
 8008a38:	9805      	ldr	r0, [sp, #20]
}
 8008a3a:	b007      	add	sp, #28
 8008a3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008a3e:	2280      	movs	r2, #128	@ 0x80
 8008a40:	e7ef      	b.n	8008a22 <osThreadNew+0x36>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008a42:	2800      	cmp	r0, #0
 8008a44:	d1f8      	bne.n	8008a38 <osThreadNew+0x4c>
      if (mem == 0) {
 8008a46:	6923      	ldr	r3, [r4, #16]
 8008a48:	2b00      	cmp	r3, #0
 8008a4a:	d1f5      	bne.n	8008a38 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (configSTACK_DEPTH_TYPE)stack, argument, prio, &hTask) != pdPASS) {
 8008a4c:	ab05      	add	r3, sp, #20
 8008a4e:	e9cd e300 	strd	lr, r3, [sp]
 8008a52:	4630      	mov	r0, r6
 8008a54:	463b      	mov	r3, r7
 8008a56:	b292      	uxth	r2, r2
 8008a58:	f001 f8b9 	bl	8009bce <xTaskCreate>
 8008a5c:	2801      	cmp	r0, #1
            hTask = NULL;
 8008a5e:	bf1c      	itt	ne
 8008a60:	2300      	movne	r3, #0
 8008a62:	9305      	strne	r3, [sp, #20]
 8008a64:	e7e8      	b.n	8008a38 <osThreadNew+0x4c>
    name = NULL;
 8008a66:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 8008a68:	f04f 0e18 	mov.w	lr, #24
    stack = configMINIMAL_STACK_SIZE;
 8008a6c:	2280      	movs	r2, #128	@ 0x80
 8008a6e:	e7ed      	b.n	8008a4c <osThreadNew+0x60>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008a70:	e9cd 0c01 	strd	r0, ip, [sp, #4]
 8008a74:	463b      	mov	r3, r7
 8008a76:	4630      	mov	r0, r6
 8008a78:	9500      	str	r5, [sp, #0]
 8008a7a:	f001 f882 	bl	8009b82 <xTaskCreateStatic>
 8008a7e:	9005      	str	r0, [sp, #20]
 8008a80:	e7da      	b.n	8008a38 <osThreadNew+0x4c>

08008a82 <osDelay>:
/* ==== Generic Wait Functions ==== */

/*
  Wait for Timeout (Time Delay).
*/
osStatus_t osDelay (uint32_t ticks) {
 8008a82:	b510      	push	{r4, lr}
 8008a84:	4604      	mov	r4, r0
  osStatus_t stat;

  if (IRQ_Context() != 0U) {
 8008a86:	f7ff ff59 	bl	800893c <IRQ_Context>
 8008a8a:	b928      	cbnz	r0, 8008a98 <osDelay+0x16>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8008a8c:	b114      	cbz	r4, 8008a94 <osDelay+0x12>
      vTaskDelay(ticks);
 8008a8e:	4620      	mov	r0, r4
 8008a90:	f001 fa18 	bl	8009ec4 <vTaskDelay>
    stat = osOK;
 8008a94:	2000      	movs	r0, #0
    }
  }

  /* Return execution status */
  return (stat);
}
 8008a96:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008a98:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8008a9c:	e7fb      	b.n	8008a96 <osDelay+0x14>

08008a9e <osSemaphoreNew>:
/* ==== Semaphore Management Functions ==== */

/*
  Create and Initialize a Semaphore object.
*/
osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008a9e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008aa0:	4604      	mov	r4, r0
 8008aa2:	460e      	mov	r6, r1
 8008aa4:	4615      	mov	r5, r2
  SemaphoreHandle_t hSemaphore;
  int32_t mem;

  hSemaphore = NULL;

  if ((IRQ_Context() == 0U) && (max_count > 0U) && (initial_count <= max_count)) {
 8008aa6:	f7ff ff49 	bl	800893c <IRQ_Context>
 8008aaa:	b940      	cbnz	r0, 8008abe <osSemaphoreNew+0x20>
 8008aac:	b13c      	cbz	r4, 8008abe <osSemaphoreNew+0x20>
 8008aae:	42b4      	cmp	r4, r6
 8008ab0:	d305      	bcc.n	8008abe <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8008ab2:	b155      	cbz	r5, 8008aca <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008ab4:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8008ab8:	b12b      	cbz	r3, 8008ac6 <osSemaphoreNew+0x28>
 8008aba:	2a4f      	cmp	r2, #79	@ 0x4f
 8008abc:	d825      	bhi.n	8008b0a <osSemaphoreNew+0x6c>
  hSemaphore = NULL;
 8008abe:	2400      	movs	r4, #0
    }
  }

  /* Return semaphore ID */
  return ((osSemaphoreId_t)hSemaphore);
}
 8008ac0:	4620      	mov	r0, r4
 8008ac2:	b002      	add	sp, #8
 8008ac4:	bd70      	pop	{r4, r5, r6, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008ac6:	2a00      	cmp	r2, #0
 8008ac8:	d1f9      	bne.n	8008abe <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8008aca:	2c01      	cmp	r4, #1
 8008acc:	d008      	beq.n	8008ae0 <osSemaphoreNew+0x42>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008ace:	4620      	mov	r0, r4
 8008ad0:	4631      	mov	r1, r6
 8008ad2:	f000 fc14 	bl	80092fe <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008ad6:	4604      	mov	r4, r0
 8008ad8:	2800      	cmp	r0, #0
 8008ada:	d0f0      	beq.n	8008abe <osSemaphoreNew+0x20>
        if ((attr != NULL) && (attr->name != NULL)) {
 8008adc:	b975      	cbnz	r5, 8008afc <osSemaphoreNew+0x5e>
 8008ade:	e7ef      	b.n	8008ac0 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 8008ae0:	2203      	movs	r2, #3
 8008ae2:	2100      	movs	r1, #0
 8008ae4:	2001      	movs	r0, #1
 8008ae6:	f000 fbcd 	bl	8009284 <xQueueGenericCreate>
 8008aea:	e017      	b.n	8008b1c <osSemaphoreNew+0x7e>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008aec:	4620      	mov	r0, r4
 8008aee:	461a      	mov	r2, r3
 8008af0:	4631      	mov	r1, r6
 8008af2:	f000 fbf1 	bl	80092d8 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008af6:	4604      	mov	r4, r0
 8008af8:	2800      	cmp	r0, #0
 8008afa:	d0e0      	beq.n	8008abe <osSemaphoreNew+0x20>
        if ((attr != NULL) && (attr->name != NULL)) {
 8008afc:	6829      	ldr	r1, [r5, #0]
 8008afe:	2900      	cmp	r1, #0
 8008b00:	d0de      	beq.n	8008ac0 <osSemaphoreNew+0x22>
          vQueueAddToRegistry (hSemaphore, attr->name);
 8008b02:	4620      	mov	r0, r4
 8008b04:	f000 fe68 	bl	80097d8 <vQueueAddToRegistry>
 8008b08:	e7da      	b.n	8008ac0 <osSemaphoreNew+0x22>
      if (max_count == 1U) {
 8008b0a:	2c01      	cmp	r4, #1
 8008b0c:	d1ee      	bne.n	8008aec <osSemaphoreNew+0x4e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008b0e:	2203      	movs	r2, #3
 8008b10:	4601      	mov	r1, r0
 8008b12:	9200      	str	r2, [sp, #0]
 8008b14:	4602      	mov	r2, r0
 8008b16:	4620      	mov	r0, r4
 8008b18:	f000 fb89 	bl	800922e <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8008b1c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008b1e:	2800      	cmp	r0, #0
 8008b20:	d0cd      	beq.n	8008abe <osSemaphoreNew+0x20>
 8008b22:	2e00      	cmp	r6, #0
 8008b24:	d0da      	beq.n	8008adc <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008b26:	2300      	movs	r3, #0
 8008b28:	461a      	mov	r2, r3
 8008b2a:	4619      	mov	r1, r3
 8008b2c:	f000 fbf6 	bl	800931c <xQueueGenericSend>
 8008b30:	2801      	cmp	r0, #1
 8008b32:	d0d3      	beq.n	8008adc <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8008b34:	4620      	mov	r0, r4
 8008b36:	f000 fe8d 	bl	8009854 <vQueueDelete>
      if (hSemaphore != NULL) {
 8008b3a:	e7c0      	b.n	8008abe <osSemaphoreNew+0x20>

08008b3c <osSemaphoreAcquire>:

/*
  Acquire a Semaphore token or timeout if no tokens are available.
*/
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008b3c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008b3e:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008b40:	4605      	mov	r5, r0
 8008b42:	b918      	cbnz	r0, 8008b4c <osSemaphoreAcquire+0x10>
    stat = osErrorParameter;
 8008b44:	f06f 0003 	mvn.w	r0, #3
    }
  }

  /* Return execution status */
  return (stat);
}
 8008b48:	b003      	add	sp, #12
 8008b4a:	bd30      	pop	{r4, r5, pc}
  else if (IRQ_Context() != 0U) {
 8008b4c:	f7ff fef6 	bl	800893c <IRQ_Context>
 8008b50:	b1b8      	cbz	r0, 8008b82 <osSemaphoreAcquire+0x46>
    if (timeout != 0U) {
 8008b52:	2c00      	cmp	r4, #0
 8008b54:	d1f6      	bne.n	8008b44 <osSemaphoreAcquire+0x8>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008b56:	4621      	mov	r1, r4
 8008b58:	4628      	mov	r0, r5
 8008b5a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008b5c:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008b5e:	f000 fdfd 	bl	800975c <xQueueReceiveFromISR>
 8008b62:	2801      	cmp	r0, #1
 8008b64:	d002      	beq.n	8008b6c <osSemaphoreAcquire+0x30>
        stat = osErrorResource;
 8008b66:	f06f 0002 	mvn.w	r0, #2
 8008b6a:	e7ed      	b.n	8008b48 <osSemaphoreAcquire+0xc>
        portYIELD_FROM_ISR (yield);
 8008b6c:	9b01      	ldr	r3, [sp, #4]
 8008b6e:	b90b      	cbnz	r3, 8008b74 <osSemaphoreAcquire+0x38>
  stat = osOK;
 8008b70:	2000      	movs	r0, #0
 8008b72:	e7e9      	b.n	8008b48 <osSemaphoreAcquire+0xc>
        portYIELD_FROM_ISR (yield);
 8008b74:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008b78:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008b7c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008b80:	e7f6      	b.n	8008b70 <osSemaphoreAcquire+0x34>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008b82:	4621      	mov	r1, r4
 8008b84:	4628      	mov	r0, r5
 8008b86:	f000 fd54 	bl	8009632 <xQueueSemaphoreTake>
 8008b8a:	2801      	cmp	r0, #1
 8008b8c:	d0f0      	beq.n	8008b70 <osSemaphoreAcquire+0x34>
      if (timeout != 0U) {
 8008b8e:	2c00      	cmp	r4, #0
 8008b90:	d0e9      	beq.n	8008b66 <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8008b92:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008b96:	e7d7      	b.n	8008b48 <osSemaphoreAcquire+0xc>

08008b98 <osSemaphoreRelease>:

/*
  Release a Semaphore token up to the initial maximum count.
*/
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008b98:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008b9a:	4604      	mov	r4, r0
 8008b9c:	b308      	cbz	r0, 8008be2 <osSemaphoreRelease+0x4a>
    stat = osErrorParameter;
  }
  else if (IRQ_Context() != 0U) {
 8008b9e:	f7ff fecd 	bl	800893c <IRQ_Context>
 8008ba2:	4603      	mov	r3, r0
 8008ba4:	b1a8      	cbz	r0, 8008bd2 <osSemaphoreRelease+0x3a>
    yield = pdFALSE;
 8008ba6:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008ba8:	4620      	mov	r0, r4
 8008baa:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008bac:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008bae:	f000 fc87 	bl	80094c0 <xQueueGiveFromISR>
 8008bb2:	2801      	cmp	r0, #1
 8008bb4:	d003      	beq.n	8008bbe <osSemaphoreRelease+0x26>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008bb6:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008bba:	b002      	add	sp, #8
 8008bbc:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008bbe:	9b01      	ldr	r3, [sp, #4]
 8008bc0:	b12b      	cbz	r3, 8008bce <osSemaphoreRelease+0x36>
 8008bc2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008bc6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008bca:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
  stat = osOK;
 8008bce:	2000      	movs	r0, #0
 8008bd0:	e7f3      	b.n	8008bba <osSemaphoreRelease+0x22>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008bd2:	4602      	mov	r2, r0
 8008bd4:	4601      	mov	r1, r0
 8008bd6:	4620      	mov	r0, r4
 8008bd8:	f000 fba0 	bl	800931c <xQueueGenericSend>
 8008bdc:	2801      	cmp	r0, #1
 8008bde:	d0f6      	beq.n	8008bce <osSemaphoreRelease+0x36>
 8008be0:	e7e9      	b.n	8008bb6 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8008be2:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008be6:	e7e8      	b.n	8008bba <osSemaphoreRelease+0x22>

08008be8 <osMessageQueueNew>:

  Limitations:
  - The memory for control block and and message data must be provided in the
    osThreadAttr_t structure in order to allocate object statically.
*/
osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008be8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008bea:	4605      	mov	r5, r0
 8008bec:	460e      	mov	r6, r1
 8008bee:	4614      	mov	r4, r2
  QueueHandle_t hQueue;
  int32_t mem;

  hQueue = NULL;

  if ((IRQ_Context() == 0U) && (msg_count > 0U) && (msg_size > 0U)) {
 8008bf0:	f7ff fea4 	bl	800893c <IRQ_Context>
 8008bf4:	b118      	cbz	r0, 8008bfe <osMessageQueueNew+0x16>
  hQueue = NULL;
 8008bf6:	2500      	movs	r5, #0

  }

  /* Return message queue ID */
  return ((osMessageQueueId_t)hQueue);
}
 8008bf8:	4628      	mov	r0, r5
 8008bfa:	b003      	add	sp, #12
 8008bfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if ((IRQ_Context() == 0U) && (msg_count > 0U) && (msg_size > 0U)) {
 8008bfe:	2d00      	cmp	r5, #0
 8008c00:	d0f9      	beq.n	8008bf6 <osMessageQueueNew+0xe>
 8008c02:	2e00      	cmp	r6, #0
 8008c04:	d0f7      	beq.n	8008bf6 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8008c06:	b31c      	cbz	r4, 8008c50 <osMessageQueueNew+0x68>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008c08:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008c0c:	b1c3      	cbz	r3, 8008c40 <osMessageQueueNew+0x58>
 8008c0e:	2a4f      	cmp	r2, #79	@ 0x4f
 8008c10:	d9f1      	bls.n	8008bf6 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008c12:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008c14:	2a00      	cmp	r2, #0
 8008c16:	d0ee      	beq.n	8008bf6 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008c18:	fb06 f105 	mul.w	r1, r6, r5
 8008c1c:	6967      	ldr	r7, [r4, #20]
 8008c1e:	428f      	cmp	r7, r1
 8008c20:	d3e9      	bcc.n	8008bf6 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008c22:	9000      	str	r0, [sp, #0]
 8008c24:	4631      	mov	r1, r6
 8008c26:	4628      	mov	r0, r5
 8008c28:	f000 fb01 	bl	800922e <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008c2c:	4605      	mov	r5, r0
 8008c2e:	2800      	cmp	r0, #0
 8008c30:	d0e1      	beq.n	8008bf6 <osMessageQueueNew+0xe>
      if ((attr != NULL) && (attr->name != NULL)) {
 8008c32:	6821      	ldr	r1, [r4, #0]
 8008c34:	2900      	cmp	r1, #0
 8008c36:	d0df      	beq.n	8008bf8 <osMessageQueueNew+0x10>
        vQueueAddToRegistry (hQueue, attr->name);
 8008c38:	4628      	mov	r0, r5
 8008c3a:	f000 fdcd 	bl	80097d8 <vQueueAddToRegistry>
 8008c3e:	e7db      	b.n	8008bf8 <osMessageQueueNew+0x10>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008c40:	2a00      	cmp	r2, #0
 8008c42:	d1d8      	bne.n	8008bf6 <osMessageQueueNew+0xe>
 8008c44:	6923      	ldr	r3, [r4, #16]
 8008c46:	2b00      	cmp	r3, #0
 8008c48:	d1d5      	bne.n	8008bf6 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008c4a:	6963      	ldr	r3, [r4, #20]
 8008c4c:	2b00      	cmp	r3, #0
 8008c4e:	d1d2      	bne.n	8008bf6 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8008c50:	4628      	mov	r0, r5
 8008c52:	2200      	movs	r2, #0
 8008c54:	4631      	mov	r1, r6
 8008c56:	f000 fb15 	bl	8009284 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008c5a:	4605      	mov	r5, r0
 8008c5c:	2800      	cmp	r0, #0
 8008c5e:	d0ca      	beq.n	8008bf6 <osMessageQueueNew+0xe>
      if ((attr != NULL) && (attr->name != NULL)) {
 8008c60:	2c00      	cmp	r4, #0
 8008c62:	d1e6      	bne.n	8008c32 <osMessageQueueNew+0x4a>
 8008c64:	e7c8      	b.n	8008bf8 <osMessageQueueNew+0x10>

08008c66 <osMessageQueuePut>:
  Put a Message into a Queue or timeout if Queue is full.

  Limitations:
  - Message priority is ignored
*/
osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008c66:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008c68:	461c      	mov	r4, r3
 8008c6a:	4605      	mov	r5, r0
 8008c6c:	460e      	mov	r6, r1

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IRQ_Context() != 0U) {
 8008c6e:	f7ff fe65 	bl	800893c <IRQ_Context>
 8008c72:	4603      	mov	r3, r0
 8008c74:	b1d0      	cbz	r0, 8008cac <osMessageQueuePut+0x46>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008c76:	b33d      	cbz	r5, 8008cc8 <osMessageQueuePut+0x62>
 8008c78:	b336      	cbz	r6, 8008cc8 <osMessageQueuePut+0x62>
 8008c7a:	bb2c      	cbnz	r4, 8008cc8 <osMessageQueuePut+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008c7c:	4623      	mov	r3, r4
 8008c7e:	4631      	mov	r1, r6
 8008c80:	4628      	mov	r0, r5
 8008c82:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008c84:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008c86:	f000 fbd2 	bl	800942e <xQueueGenericSendFromISR>
 8008c8a:	2801      	cmp	r0, #1
 8008c8c:	d003      	beq.n	8008c96 <osMessageQueuePut+0x30>
        stat = osErrorResource;
 8008c8e:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008c92:	b002      	add	sp, #8
 8008c94:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008c96:	9b01      	ldr	r3, [sp, #4]
 8008c98:	b90b      	cbnz	r3, 8008c9e <osMessageQueuePut+0x38>
  stat = osOK;
 8008c9a:	2000      	movs	r0, #0
 8008c9c:	e7f9      	b.n	8008c92 <osMessageQueuePut+0x2c>
        portYIELD_FROM_ISR (yield);
 8008c9e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008ca2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008ca6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008caa:	e7f6      	b.n	8008c9a <osMessageQueuePut+0x34>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008cac:	b165      	cbz	r5, 8008cc8 <osMessageQueuePut+0x62>
 8008cae:	b15e      	cbz	r6, 8008cc8 <osMessageQueuePut+0x62>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008cb0:	4622      	mov	r2, r4
 8008cb2:	4631      	mov	r1, r6
 8008cb4:	4628      	mov	r0, r5
 8008cb6:	f000 fb31 	bl	800931c <xQueueGenericSend>
 8008cba:	2801      	cmp	r0, #1
 8008cbc:	d0ed      	beq.n	8008c9a <osMessageQueuePut+0x34>
        if (timeout != 0U) {
 8008cbe:	2c00      	cmp	r4, #0
 8008cc0:	d0e5      	beq.n	8008c8e <osMessageQueuePut+0x28>
          stat = osErrorTimeout;
 8008cc2:	f06f 0001 	mvn.w	r0, #1
 8008cc6:	e7e4      	b.n	8008c92 <osMessageQueuePut+0x2c>
      stat = osErrorParameter;
 8008cc8:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008ccc:	e7e1      	b.n	8008c92 <osMessageQueuePut+0x2c>

08008cce <osMessageQueueGet>:
  Get a Message from a Queue or timeout if Queue is empty.

  Limitations:
  - Message priority is ignored
*/
osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008cce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008cd0:	4605      	mov	r5, r0
 8008cd2:	460e      	mov	r6, r1
 8008cd4:	461c      	mov	r4, r3

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IRQ_Context() != 0U) {
 8008cd6:	f7ff fe31 	bl	800893c <IRQ_Context>
 8008cda:	b1c8      	cbz	r0, 8008d10 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008cdc:	b335      	cbz	r5, 8008d2c <osMessageQueueGet+0x5e>
 8008cde:	b32e      	cbz	r6, 8008d2c <osMessageQueueGet+0x5e>
 8008ce0:	bb24      	cbnz	r4, 8008d2c <osMessageQueueGet+0x5e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008ce2:	4631      	mov	r1, r6
 8008ce4:	4628      	mov	r0, r5
 8008ce6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008ce8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008cea:	f000 fd37 	bl	800975c <xQueueReceiveFromISR>
 8008cee:	2801      	cmp	r0, #1
 8008cf0:	d003      	beq.n	8008cfa <osMessageQueueGet+0x2c>
        stat = osErrorResource;
 8008cf2:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008cf6:	b002      	add	sp, #8
 8008cf8:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008cfa:	9b01      	ldr	r3, [sp, #4]
 8008cfc:	b90b      	cbnz	r3, 8008d02 <osMessageQueueGet+0x34>
  stat = osOK;
 8008cfe:	2000      	movs	r0, #0
 8008d00:	e7f9      	b.n	8008cf6 <osMessageQueueGet+0x28>
        portYIELD_FROM_ISR (yield);
 8008d02:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008d06:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008d0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008d0e:	e7f6      	b.n	8008cfe <osMessageQueueGet+0x30>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008d10:	b165      	cbz	r5, 8008d2c <osMessageQueueGet+0x5e>
 8008d12:	b15e      	cbz	r6, 8008d2c <osMessageQueueGet+0x5e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008d14:	4622      	mov	r2, r4
 8008d16:	4631      	mov	r1, r6
 8008d18:	4628      	mov	r0, r5
 8008d1a:	f000 fc0e 	bl	800953a <xQueueReceive>
 8008d1e:	2801      	cmp	r0, #1
 8008d20:	d0ed      	beq.n	8008cfe <osMessageQueueGet+0x30>
        if (timeout != 0U) {
 8008d22:	2c00      	cmp	r4, #0
 8008d24:	d0e5      	beq.n	8008cf2 <osMessageQueueGet+0x24>
          stat = osErrorTimeout;
 8008d26:	f06f 0001 	mvn.w	r0, #1
 8008d2a:	e7e4      	b.n	8008cf6 <osMessageQueueGet+0x28>
      stat = osErrorParameter;
 8008d2c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008d30:	e7e1      	b.n	8008cf6 <osMessageQueueGet+0x28>
	...

08008d34 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008d34:	4b03      	ldr	r3, [pc, #12]	@ (8008d44 <vApplicationGetIdleTaskMemory+0x10>)
 8008d36:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008d38:	4b03      	ldr	r3, [pc, #12]	@ (8008d48 <vApplicationGetIdleTaskMemory+0x14>)
 8008d3a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008d3c:	2380      	movs	r3, #128	@ 0x80
 8008d3e:	6013      	str	r3, [r2, #0]
}
 8008d40:	4770      	bx	lr
 8008d42:	bf00      	nop
 8008d44:	2006ef4c 	.word	0x2006ef4c
 8008d48:	2006ed4c 	.word	0x2006ed4c

08008d4c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008d4c:	4b03      	ldr	r3, [pc, #12]	@ (8008d5c <vApplicationGetTimerTaskMemory+0x10>)
 8008d4e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008d50:	4b03      	ldr	r3, [pc, #12]	@ (8008d60 <vApplicationGetTimerTaskMemory+0x14>)
 8008d52:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008d54:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8008d58:	6013      	str	r3, [r2, #0]
}
 8008d5a:	4770      	bx	lr
 8008d5c:	2006ecec 	.word	0x2006ecec
 8008d60:	2006e8ec 	.word	0x2006e8ec

08008d64 <vListInitialise>:
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008d64:	f04f 32ff 	mov.w	r2, #4294967295
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d68:	f100 0308 	add.w	r3, r0, #8

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );     /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d6c:	e9c0 2302 	strd	r2, r3, [r0, #8]
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d70:	6043      	str	r3, [r0, #4]
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d72:	6103      	str	r3, [r0, #16]

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008d74:	2300      	movs	r3, #0
 8008d76:	6003      	str	r3, [r0, #0]

    /* Write known values into the list if
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008d78:	4770      	bx	lr

08008d7a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
 8008d7a:	2300      	movs	r3, #0
 8008d7c:	6103      	str	r3, [r0, #16]

    /* Write known values into the list item if
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008d7e:	4770      	bx	lr

08008d80 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
 8008d80:	b530      	push	{r4, r5, lr}
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008d82:	680c      	ldr	r4, [r1, #0]
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
 8008d84:	1c63      	adds	r3, r4, #1
 8008d86:	d10a      	bne.n	8008d9e <vListInsert+0x1e>
    {
        pxIterator = pxList->xListEnd.pxPrevious;
 8008d88:	6903      	ldr	r3, [r0, #16]
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
 8008d8a:	685a      	ldr	r2, [r3, #4]
 8008d8c:	604a      	str	r2, [r1, #4]
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008d8e:	6091      	str	r1, [r2, #8]
    pxNewListItem->pxPrevious = pxIterator;
 8008d90:	608b      	str	r3, [r1, #8]
    pxIterator->pxNext = pxNewListItem;
 8008d92:	6059      	str	r1, [r3, #4]

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;

    ( pxList->uxNumberOfItems )++;
 8008d94:	6803      	ldr	r3, [r0, #0]
    pxNewListItem->pxContainer = pxList;
 8008d96:	6108      	str	r0, [r1, #16]
    ( pxList->uxNumberOfItems )++;
 8008d98:	3301      	adds	r3, #1
 8008d9a:	6003      	str	r3, [r0, #0]
}
 8008d9c:	bd30      	pop	{r4, r5, pc}
        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008d9e:	f100 0208 	add.w	r2, r0, #8
 8008da2:	4613      	mov	r3, r2
 8008da4:	6852      	ldr	r2, [r2, #4]
 8008da6:	6815      	ldr	r5, [r2, #0]
 8008da8:	42a5      	cmp	r5, r4
 8008daa:	d9fa      	bls.n	8008da2 <vListInsert+0x22>
 8008dac:	e7ed      	b.n	8008d8a <vListInsert+0xa>

08008dae <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
 * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
 8008dae:	6903      	ldr	r3, [r0, #16]

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008db0:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8008db4:	608a      	str	r2, [r1, #8]
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008db6:	6051      	str	r1, [r2, #4]

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
 8008db8:	6859      	ldr	r1, [r3, #4]
 8008dba:	4281      	cmp	r1, r0
    {
        pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008dbc:	bf08      	it	eq
 8008dbe:	605a      	streq	r2, [r3, #4]
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
 8008dc0:	2200      	movs	r2, #0
 8008dc2:	6102      	str	r2, [r0, #16]
    ( pxList->uxNumberOfItems )--;
 8008dc4:	681a      	ldr	r2, [r3, #0]
 8008dc6:	3a01      	subs	r2, #1
 8008dc8:	601a      	str	r2, [r3, #0]

    return pxList->uxNumberOfItems;
 8008dca:	6818      	ldr	r0, [r3, #0]
}
 8008dcc:	4770      	bx	lr
	...

08008dd0 <prvTaskExitError>:
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
    volatile uint32_t ulDummy = 0UL;
 8008dd0:	2300      	movs	r3, #0
{
 8008dd2:	b507      	push	{r0, r1, r2, lr}
    volatile uint32_t ulDummy = 0UL;
 8008dd4:	9301      	str	r3, [sp, #4]
    /* A function that implements a task must not exit or attempt to return to
     * its caller as there is nothing to return to. If a task wants to exit it
     * should instead call vTaskDelete( NULL ). Artificially force an assert()
     * to be triggered if configASSERT() is defined, then stop here so
     * application writers can catch the error. */
    configASSERT( ulCriticalNesting == ~0UL );
 8008dd6:	4b07      	ldr	r3, [pc, #28]	@ (8008df4 <prvTaskExitError+0x24>)
 8008dd8:	681b      	ldr	r3, [r3, #0]
 8008dda:	3301      	adds	r3, #1
 8008ddc:	d002      	beq.n	8008de4 <prvTaskExitError+0x14>
 8008dde:	f000 f901 	bl	8008fe4 <ulSetInterruptMask>
 8008de2:	e7fe      	b.n	8008de2 <prvTaskExitError+0x12>
    portDISABLE_INTERRUPTS();
 8008de4:	f000 f8fe 	bl	8008fe4 <ulSetInterruptMask>

    while( ulDummy == 0 )
 8008de8:	9b01      	ldr	r3, [sp, #4]
 8008dea:	2b00      	cmp	r3, #0
 8008dec:	d0fc      	beq.n	8008de8 <prvTaskExitError+0x18>
         * warnings about code appearing after this function is called - making
         * ulDummy volatile makes the compiler think the function could return
         * and therefore not output an 'unreachable code' warning for code that
         * appears after it. */
    }
}
 8008dee:	b003      	add	sp, #12
 8008df0:	f85d fb04 	ldr.w	pc, [sp], #4
 8008df4:	20000058 	.word	0x20000058

08008df8 <vPortSetupTimerInterrupt>:
    portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008df8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8008dfc:	2300      	movs	r3, #0
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008dfe:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
    portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008e02:	6113      	str	r3, [r2, #16]
    portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008e04:	6193      	str	r3, [r2, #24]
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008e06:	4b04      	ldr	r3, [pc, #16]	@ (8008e18 <vPortSetupTimerInterrupt+0x20>)
 8008e08:	681b      	ldr	r3, [r3, #0]
 8008e0a:	fbb3 f3f1 	udiv	r3, r3, r1
 8008e0e:	3b01      	subs	r3, #1
 8008e10:	6153      	str	r3, [r2, #20]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
 8008e12:	2307      	movs	r3, #7
 8008e14:	6113      	str	r3, [r2, #16]
}
 8008e16:	4770      	bx	lr
 8008e18:	2000004c 	.word	0x2000004c

08008e1c <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void ) /* PRIVILEGED_FUNCTION */
{
    /* Set a PendSV to request a context switch. */
    portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008e1c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008e20:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008e24:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
 8008e28:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
 8008e2c:	f3bf 8f6f 	isb	sy
}
 8008e30:	4770      	bx	lr
	...

08008e34 <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void ) /* PRIVILEGED_FUNCTION */
{
 8008e34:	b508      	push	{r3, lr}
    portDISABLE_INTERRUPTS();
 8008e36:	f000 f8d5 	bl	8008fe4 <ulSetInterruptMask>
    ulCriticalNesting++;
 8008e3a:	4a04      	ldr	r2, [pc, #16]	@ (8008e4c <vPortEnterCritical+0x18>)
 8008e3c:	6813      	ldr	r3, [r2, #0]
 8008e3e:	3301      	adds	r3, #1
 8008e40:	6013      	str	r3, [r2, #0]

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
 8008e42:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
 8008e46:	f3bf 8f6f 	isb	sy
}
 8008e4a:	bd08      	pop	{r3, pc}
 8008e4c:	20000058 	.word	0x20000058

08008e50 <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void ) /* PRIVILEGED_FUNCTION */
{
 8008e50:	b508      	push	{r3, lr}
    configASSERT( ulCriticalNesting );
 8008e52:	4b08      	ldr	r3, [pc, #32]	@ (8008e74 <vPortExitCritical+0x24>)
 8008e54:	681a      	ldr	r2, [r3, #0]
 8008e56:	b912      	cbnz	r2, 8008e5e <vPortExitCritical+0xe>
 8008e58:	f000 f8c4 	bl	8008fe4 <ulSetInterruptMask>
 8008e5c:	e7fe      	b.n	8008e5c <vPortExitCritical+0xc>
    ulCriticalNesting--;
 8008e5e:	681a      	ldr	r2, [r3, #0]
 8008e60:	3a01      	subs	r2, #1
 8008e62:	601a      	str	r2, [r3, #0]

    if( ulCriticalNesting == 0 )
 8008e64:	6818      	ldr	r0, [r3, #0]
 8008e66:	b918      	cbnz	r0, 8008e70 <vPortExitCritical+0x20>
    {
        portENABLE_INTERRUPTS();
    }
}
 8008e68:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        portENABLE_INTERRUPTS();
 8008e6c:	f000 b8c5 	b.w	8008ffa <vClearInterruptMask>
}
 8008e70:	bd08      	pop	{r3, pc}
 8008e72:	bf00      	nop
 8008e74:	20000058 	.word	0x20000058

08008e78 <xPortSysTickHandler>:
/*-----------------------------------------------------------*/

void SysTick_Handler( void ) /* PRIVILEGED_FUNCTION */
{
 8008e78:	b510      	push	{r4, lr}
    uint32_t ulPreviousMask;

    ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
 8008e7a:	f000 f8b3 	bl	8008fe4 <ulSetInterruptMask>
 8008e7e:	4604      	mov	r4, r0
    {
        /* Increment the RTOS tick. */
        if( xTaskIncrementTick() != pdFALSE )
 8008e80:	f000 fee2 	bl	8009c48 <xTaskIncrementTick>
 8008e84:	b128      	cbz	r0, 8008e92 <xPortSysTickHandler+0x1a>
        {
            /* Pend a context switch. */
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008e86:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008e8a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008e8e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 8008e92:	4620      	mov	r0, r4
}
 8008e94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 8008e98:	f000 b8af 	b.w	8008ffa <vClearInterruptMask>

08008e9c <vPortSVCHandler_C>:
/*-----------------------------------------------------------*/

void vPortSVCHandler_C( uint32_t * pulCallerStackAddress ) /* PRIVILEGED_FUNCTION portDONT_DISCARD */
{
 8008e9c:	b508      	push	{r3, lr}
    uint8_t ucSVCNumber;

    /* Register are stored on the stack in the following order - R0, R1, R2, R3,
     * R12, LR, PC, xPSR. */
    ulPC = pulCallerStackAddress[ 6 ];
    ucSVCNumber = ( ( uint8_t * ) ulPC )[ -2 ];
 8008e9e:	6983      	ldr	r3, [r0, #24]

    switch( ucSVCNumber )
 8008ea0:	f813 3c02 	ldrb.w	r3, [r3, #-2]
 8008ea4:	2b02      	cmp	r3, #2
 8008ea6:	d111      	bne.n	8008ecc <vPortSVCHandler_C+0x30>
        *( portCPACR ) |= ( ( portCPACR_CP10_VALUE << portCPACR_CP10_POS ) |
 8008ea8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008eac:	f8d3 2d88 	ldr.w	r2, [r3, #3464]	@ 0xd88
 8008eb0:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8008eb4:	f8c3 2d88 	str.w	r2, [r3, #3464]	@ 0xd88
        *( portFPCCR ) |= ( portFPCCR_ASPEN_MASK | portFPCCR_LSPEN_MASK );
 8008eb8:	f8d3 2f34 	ldr.w	r2, [r3, #3892]	@ 0xf34
 8008ebc:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
 8008ec0:	f8c3 2f34 	str.w	r2, [r3, #3892]	@ 0xf34

        default:
            /* Incorrect SVC call. */
            configASSERT( pdFALSE );
    }
}
 8008ec4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            vRestoreContextOfFirstTask();
 8008ec8:	f000 b85a 	b.w	8008f80 <vRestoreContextOfFirstTask>
            configASSERT( pdFALSE );
 8008ecc:	f000 f88a 	bl	8008fe4 <ulSetInterruptMask>
 8008ed0:	e7fe      	b.n	8008ed0 <vPortSVCHandler_C+0x34>
	...

08008ed4 <pxPortInitialiseStack>:
                                         StackType_t * pxEndOfStack,
                                         TaskFunction_t pxCode,
                                         void * pvParameters ) /* PRIVILEGED_FUNCTION */
#endif /* configENABLE_MPU */
/* *INDENT-ON* */
{
 8008ed4:	b510      	push	{r4, lr}
            #endif /* configENABLE_TRUSTZONE */
        }
    #else /* portPRELOAD_REGISTERS */
        {
            pxTopOfStack--;                                          /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
            *pxTopOfStack = portINITIAL_XPSR;                        /* xPSR */
 8008ed6:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxCode;                  /* PC */
 8008eda:	e940 2402 	strd	r2, r4, [r0, #-8]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR */
 8008ede:	4a18      	ldr	r2, [pc, #96]	@ (8008f40 <pxPortInitialiseStack+0x6c>)
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x12121212UL;            /* R12 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 8008ee0:	f04f 3412 	mov.w	r4, #303174162	@ 0x12121212
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR */
 8008ee4:	f840 2c0c 	str.w	r2, [r0, #-12]
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 8008ee8:	f04f 3203 	mov.w	r2, #50529027	@ 0x3030303
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x02020202UL;            /* R2 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 8008eec:	f04f 3c02 	mov.w	ip, #33686018	@ 0x2020202
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 8008ef0:	e940 2405 	strd	r2, r4, [r0, #-20]
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 8008ef4:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pvParameters;            /* R0 */
 8008ef8:	f840 3c20 	str.w	r3, [r0, #-32]
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 8008efc:	e940 2c07 	strd	r2, ip, [r0, #-28]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x11111111UL;            /* R11 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10 */
 8008f00:	f04f 3310 	mov.w	r3, #269488144	@ 0x10101010
 8008f04:	f04f 3211 	mov.w	r2, #286331153	@ 0x11111111
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x09090909UL;            /* R09 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8008f08:	f04f 3409 	mov.w	r4, #151587081	@ 0x9090909
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10 */
 8008f0c:	e940 320a 	strd	r3, r2, [r0, #-40]	@ 0x28
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8008f10:	f04f 3308 	mov.w	r3, #134744072	@ 0x8080808
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x07070707UL;            /* R07 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8008f14:	f04f 3c07 	mov.w	ip, #117901063	@ 0x7070707
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8008f18:	e940 340c 	strd	r3, r4, [r0, #-48]	@ 0x30
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8008f1c:	f04f 3306 	mov.w	r3, #101058054	@ 0x6060606
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x05050505UL;            /* R05 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04 */
 8008f20:	f04f 3205 	mov.w	r2, #84215045	@ 0x5050505
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8008f24:	e940 3c0e 	strd	r3, ip, [r0, #-56]	@ 0x38
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04 */
 8008f28:	f04f 3304 	mov.w	r3, #67372036	@ 0x4040404
 8008f2c:	e940 3210 	strd	r3, r2, [r0, #-64]	@ 0x40
            pxTopOfStack--;
            *pxTopOfStack = portINITIAL_EXC_RETURN;                  /* EXC_RETURN */
 8008f30:	f06f 0343 	mvn.w	r3, #67	@ 0x43
 8008f34:	f840 3c44 	str.w	r3, [r0, #-68]
                    }
                }
            #endif /* configENABLE_MPU */

            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxEndOfStack; /* Slot used to hold this task's PSPLIM value. */
 8008f38:	f840 1d48 	str.w	r1, [r0, #-72]!
            #endif /* configENABLE_TRUSTZONE */
        }
    #endif /* portPRELOAD_REGISTERS */

    return pxTopOfStack;
}
 8008f3c:	bd10      	pop	{r4, pc}
 8008f3e:	bf00      	nop
 8008f40:	08008dd1 	.word	0x08008dd1

08008f44 <xPortStartScheduler>:
/*-----------------------------------------------------------*/

BaseType_t xPortStartScheduler( void ) /* PRIVILEGED_FUNCTION */
{
    /* Make PendSV, CallSV and SysTick the same priority as the kernel. */
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 8008f44:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8008f48:	b510      	push	{r4, lr}
    /* Start the timer that generates the tick ISR. Interrupts are disabled
     * here already. */
    vPortSetupTimerInterrupt();

    /* Initialize the critical nesting count ready for the first task. */
    ulCriticalNesting = 0;
 8008f4a:	2400      	movs	r4, #0
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 8008f4c:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	@ 0xd20
 8008f50:	f442 027f 	orr.w	r2, r2, #16711680	@ 0xff0000
 8008f54:	f8c3 2d20 	str.w	r2, [r3, #3360]	@ 0xd20
    portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 8008f58:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	@ 0xd20
 8008f5c:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8008f60:	f8c3 2d20 	str.w	r2, [r3, #3360]	@ 0xd20
    vPortSetupTimerInterrupt();
 8008f64:	f7ff ff48 	bl	8008df8 <vPortSetupTimerInterrupt>
    ulCriticalNesting = 0;
 8008f68:	4b04      	ldr	r3, [pc, #16]	@ (8008f7c <xPortStartScheduler+0x38>)
 8008f6a:	601c      	str	r4, [r3, #0]

    /* Start the first task. */
    vStartFirstTask();
 8008f6c:	f000 f828 	bl	8008fc0 <vStartFirstTask>
     * exit error function to prevent compiler warnings about a static function
     * not being called in the case that the application writer overrides this
     * functionality by defining configTASK_RETURN_ADDRESS. Call
     * vTaskSwitchContext() so link time optimization does not remove the
     * symbol. */
    vTaskSwitchContext();
 8008f70:	f001 f820 	bl	8009fb4 <vTaskSwitchContext>
    prvTaskExitError();
 8008f74:	f7ff ff2c 	bl	8008dd0 <prvTaskExitError>

    /* Should not get here. */
    return 0;
}
 8008f78:	4620      	mov	r0, r4
 8008f7a:	bd10      	pop	{r4, pc}
 8008f7c:	20000058 	.word	0x20000058

08008f80 <vRestoreContextOfFirstTask>:
 * header files. */
#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE

void vRestoreContextOfFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8008f80:	4a0b      	ldr	r2, [pc, #44]	@ (8008fb0 <pxCurrentTCBConst2>)
 8008f82:	6811      	ldr	r1, [r2, #0]
 8008f84:	6808      	ldr	r0, [r1, #0]
 8008f86:	c806      	ldmia	r0!, {r1, r2}
 8008f88:	f381 880b 	msr	PSPLIM, r1
 8008f8c:	2102      	movs	r1, #2
 8008f8e:	f381 8814 	msr	CONTROL, r1
 8008f92:	3020      	adds	r0, #32
 8008f94:	f380 8809 	msr	PSP, r0
 8008f98:	f3bf 8f6f 	isb	sy
 8008f9c:	f04f 0000 	mov.w	r0, #0
 8008fa0:	f380 8811 	msr	BASEPRI, r0
 8008fa4:	4710      	bx	r2
 8008fa6:	bf00      	nop
 8008fa8:	f3af 8000 	nop.w
 8008fac:	f3af 8000 	nop.w

08008fb0 <pxCurrentTCBConst2>:
 8008fb0:	2006f4e8 	.word	0x2006f4e8
	...

08008fc0 <vStartFirstTask>:
}
/*-----------------------------------------------------------*/

void vStartFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8008fc0:	4807      	ldr	r0, [pc, #28]	@ (8008fe0 <xVTORConst>)
 8008fc2:	6800      	ldr	r0, [r0, #0]
 8008fc4:	6800      	ldr	r0, [r0, #0]
 8008fc6:	f380 8808 	msr	MSP, r0
 8008fca:	b662      	cpsie	i
 8008fcc:	b661      	cpsie	f
 8008fce:	f3bf 8f4f 	dsb	sy
 8008fd2:	f3bf 8f6f 	isb	sy
 8008fd6:	df02      	svc	2
 8008fd8:	bf00      	nop
 8008fda:	bf00      	nop
 8008fdc:	f3af 8000 	nop.w

08008fe0 <xVTORConst>:
 8008fe0:	e000ed08 	.word	0xe000ed08

08008fe4 <ulSetInterruptMask>:
}
/*-----------------------------------------------------------*/

uint32_t ulSetInterruptMask( void ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8008fe4:	f3ef 8011 	mrs	r0, BASEPRI
 8008fe8:	f04f 0150 	mov.w	r1, #80	@ 0x50
 8008fec:	f381 8811 	msr	BASEPRI, r1
 8008ff0:	f3bf 8f4f 	dsb	sy
 8008ff4:	f3bf 8f6f 	isb	sy
 8008ff8:	4770      	bx	lr

08008ffa <vClearInterruptMask>:
}
/*-----------------------------------------------------------*/

void vClearInterruptMask( __attribute__( ( unused ) ) uint32_t ulMask ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8008ffa:	f380 8811 	msr	BASEPRI, r0
 8008ffe:	f3bf 8f4f 	dsb	sy
 8009002:	f3bf 8f6f 	isb	sy
 8009006:	4770      	bx	lr
	...

08009010 <PendSV_Handler>:
}
/*-----------------------------------------------------------*/

void PendSV_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009010:	f3ef 8009 	mrs	r0, PSP
 8009014:	f01e 0f10 	tst.w	lr, #16
 8009018:	bf08      	it	eq
 800901a:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800901e:	f3ef 820b 	mrs	r2, PSPLIM
 8009022:	4673      	mov	r3, lr
 8009024:	e920 0ffc 	stmdb	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8009028:	4a11      	ldr	r2, [pc, #68]	@ (8009070 <pxCurrentTCBConst>)
 800902a:	6811      	ldr	r1, [r2, #0]
 800902c:	6008      	str	r0, [r1, #0]
 800902e:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8009032:	f380 8811 	msr	BASEPRI, r0
 8009036:	f3bf 8f4f 	dsb	sy
 800903a:	f3bf 8f6f 	isb	sy
 800903e:	f000 ffb9 	bl	8009fb4 <vTaskSwitchContext>
 8009042:	f04f 0000 	mov.w	r0, #0
 8009046:	f380 8811 	msr	BASEPRI, r0
 800904a:	4a09      	ldr	r2, [pc, #36]	@ (8009070 <pxCurrentTCBConst>)
 800904c:	6811      	ldr	r1, [r2, #0]
 800904e:	6808      	ldr	r0, [r1, #0]
 8009050:	e8b0 0ffc 	ldmia.w	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8009054:	f013 0f10 	tst.w	r3, #16
 8009058:	bf08      	it	eq
 800905a:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800905e:	f382 880b 	msr	PSPLIM, r2
 8009062:	f380 8809 	msr	PSP, r0
 8009066:	4718      	bx	r3
 8009068:	f3af 8000 	nop.w
 800906c:	f3af 8000 	nop.w

08009070 <pxCurrentTCBConst>:
 8009070:	2006f4e8 	.word	0x2006f4e8
	...

08009080 <SVC_Handler>:
}
/*-----------------------------------------------------------*/

void SVC_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009080:	f01e 0f04 	tst.w	lr, #4
 8009084:	bf0c      	ite	eq
 8009086:	f3ef 8008 	mrseq	r0, MSP
 800908a:	f3ef 8009 	mrsne	r0, PSP
 800908e:	4904      	ldr	r1, [pc, #16]	@ (80090a0 <svchandler_address_const>)
 8009090:	4708      	bx	r1
 8009092:	bf00      	nop
 8009094:	f3af 8000 	nop.w
 8009098:	f3af 8000 	nop.w
 800909c:	f3af 8000 	nop.w

080090a0 <svchandler_address_const>:
 80090a0:	08008e9d 	.word	0x08008e9d

080090a4 <prvIsQueueEmpty>:
    taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
 80090a4:	b510      	push	{r4, lr}
 80090a6:	4604      	mov	r4, r0
    BaseType_t xReturn;

    taskENTER_CRITICAL();
 80090a8:	f7ff fec4 	bl	8008e34 <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 80090ac:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
 80090ae:	f7ff fecf 	bl	8008e50 <vPortExitCritical>

    return xReturn;
}
 80090b2:	fab4 f084 	clz	r0, r4
 80090b6:	0940      	lsrs	r0, r0, #5
 80090b8:	bd10      	pop	{r4, pc}

080090ba <prvCopyDataToQueue>:
{
 80090ba:	b570      	push	{r4, r5, r6, lr}
 80090bc:	4616      	mov	r6, r2
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80090be:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
 80090c0:	4604      	mov	r4, r0
    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80090c2:	6b85      	ldr	r5, [r0, #56]	@ 0x38
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80090c4:	b942      	cbnz	r2, 80090d8 <prvCopyDataToQueue+0x1e>
                if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80090c6:	6806      	ldr	r6, [r0, #0]
 80090c8:	b99e      	cbnz	r6, 80090f2 <prvCopyDataToQueue+0x38>
                    xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80090ca:	6880      	ldr	r0, [r0, #8]
 80090cc:	f001 f8e2 	bl	800a294 <xTaskPriorityDisinherit>
                    pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80090d0:	60a6      	str	r6, [r4, #8]
    pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80090d2:	3501      	adds	r5, #1
 80090d4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 80090d6:	bd70      	pop	{r4, r5, r6, pc}
    else if( xPosition == queueSEND_TO_BACK )
 80090d8:	b96e      	cbnz	r6, 80090f6 <prvCopyDataToQueue+0x3c>
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80090da:	6840      	ldr	r0, [r0, #4]
 80090dc:	f029 fcbd 	bl	8032a5a <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                       /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80090e0:	6863      	ldr	r3, [r4, #4]
 80090e2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80090e4:	4413      	add	r3, r2
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                             /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80090e6:	68a2      	ldr	r2, [r4, #8]
        pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                       /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80090e8:	6063      	str	r3, [r4, #4]
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                             /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80090ea:	4293      	cmp	r3, r2
            pxQueue->pcWriteTo = pxQueue->pcHead;
 80090ec:	bf24      	itt	cs
 80090ee:	6823      	ldrcs	r3, [r4, #0]
 80090f0:	6063      	strcs	r3, [r4, #4]
    BaseType_t xReturn = pdFALSE;
 80090f2:	2000      	movs	r0, #0
 80090f4:	e7ed      	b.n	80090d2 <prvCopyDataToQueue+0x18>
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80090f6:	68c0      	ldr	r0, [r0, #12]
 80090f8:	f029 fcaf 	bl	8032a5a <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80090fc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80090fe:	68e3      	ldr	r3, [r4, #12]
 8009100:	4251      	negs	r1, r2
 8009102:	1a9b      	subs	r3, r3, r2
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009104:	6822      	ldr	r2, [r4, #0]
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009106:	60e3      	str	r3, [r4, #12]
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009108:	4293      	cmp	r3, r2
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800910a:	bf3e      	ittt	cc
 800910c:	68a3      	ldrcc	r3, [r4, #8]
 800910e:	185b      	addcc	r3, r3, r1
 8009110:	60e3      	strcc	r3, [r4, #12]
        if( xPosition == queueOVERWRITE )
 8009112:	2e02      	cmp	r6, #2
 8009114:	d1ed      	bne.n	80090f2 <prvCopyDataToQueue+0x38>
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009116:	b10d      	cbz	r5, 800911c <prvCopyDataToQueue+0x62>
                --uxMessagesWaiting;
 8009118:	3d01      	subs	r5, #1
 800911a:	e7ea      	b.n	80090f2 <prvCopyDataToQueue+0x38>
    BaseType_t xReturn = pdFALSE;
 800911c:	4628      	mov	r0, r5
 800911e:	e7d8      	b.n	80090d2 <prvCopyDataToQueue+0x18>

08009120 <prvCopyDataFromQueue>:
{
 8009120:	4603      	mov	r3, r0
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009122:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8009124:	4608      	mov	r0, r1
 8009126:	b410      	push	{r4}
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009128:	b16a      	cbz	r2, 8009146 <prvCopyDataFromQueue+0x26>
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800912a:	68dc      	ldr	r4, [r3, #12]
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800912c:	6899      	ldr	r1, [r3, #8]
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800912e:	4414      	add	r4, r2
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009130:	428c      	cmp	r4, r1
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009132:	bf28      	it	cs
 8009134:	6819      	ldrcs	r1, [r3, #0]
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009136:	60dc      	str	r4, [r3, #12]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009138:	bf28      	it	cs
 800913a:	60d9      	strcs	r1, [r3, #12]
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800913c:	68d9      	ldr	r1, [r3, #12]
}
 800913e:	f85d 4b04 	ldr.w	r4, [sp], #4
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009142:	f029 bc8a 	b.w	8032a5a <memcpy>
}
 8009146:	f85d 4b04 	ldr.w	r4, [sp], #4
 800914a:	4770      	bx	lr

0800914c <prvUnlockQueue>:
{
 800914c:	b570      	push	{r4, r5, r6, lr}
 800914e:	4604      	mov	r4, r0
    taskENTER_CRITICAL();
 8009150:	f7ff fe70 	bl	8008e34 <vPortEnterCritical>
        int8_t cTxLock = pxQueue->cTxLock;
 8009154:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009158:	f104 0624 	add.w	r6, r4, #36	@ 0x24
        int8_t cTxLock = pxQueue->cTxLock;
 800915c:	b26d      	sxtb	r5, r5
        while( cTxLock > queueLOCKED_UNMODIFIED )
 800915e:	2d00      	cmp	r5, #0
 8009160:	dc14      	bgt.n	800918c <prvUnlockQueue+0x40>
        pxQueue->cTxLock = queueUNLOCKED;
 8009162:	23ff      	movs	r3, #255	@ 0xff
 8009164:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
    taskEXIT_CRITICAL();
 8009168:	f7ff fe72 	bl	8008e50 <vPortExitCritical>
    taskENTER_CRITICAL();
 800916c:	f7ff fe62 	bl	8008e34 <vPortEnterCritical>
        int8_t cRxLock = pxQueue->cRxLock;
 8009170:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009174:	f104 0610 	add.w	r6, r4, #16
        int8_t cRxLock = pxQueue->cRxLock;
 8009178:	b26d      	sxtb	r5, r5
        while( cRxLock > queueLOCKED_UNMODIFIED )
 800917a:	2d00      	cmp	r5, #0
 800917c:	dc12      	bgt.n	80091a4 <prvUnlockQueue+0x58>
        pxQueue->cRxLock = queueUNLOCKED;
 800917e:	23ff      	movs	r3, #255	@ 0xff
 8009180:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8009184:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    taskEXIT_CRITICAL();
 8009188:	f7ff be62 	b.w	8008e50 <vPortExitCritical>
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800918c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800918e:	2b00      	cmp	r3, #0
 8009190:	d0e7      	beq.n	8009162 <prvUnlockQueue+0x16>
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009192:	4630      	mov	r0, r6
 8009194:	f000 ff88 	bl	800a0a8 <xTaskRemoveFromEventList>
 8009198:	b108      	cbz	r0, 800919e <prvUnlockQueue+0x52>
                            vTaskMissedYield();
 800919a:	f001 f81f 	bl	800a1dc <vTaskMissedYield>
            --cTxLock;
 800919e:	3d01      	subs	r5, #1
 80091a0:	b26d      	sxtb	r5, r5
 80091a2:	e7dc      	b.n	800915e <prvUnlockQueue+0x12>
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80091a4:	6923      	ldr	r3, [r4, #16]
 80091a6:	2b00      	cmp	r3, #0
 80091a8:	d0e9      	beq.n	800917e <prvUnlockQueue+0x32>
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80091aa:	4630      	mov	r0, r6
 80091ac:	f000 ff7c 	bl	800a0a8 <xTaskRemoveFromEventList>
 80091b0:	b108      	cbz	r0, 80091b6 <prvUnlockQueue+0x6a>
                    vTaskMissedYield();
 80091b2:	f001 f813 	bl	800a1dc <vTaskMissedYield>
                --cRxLock;
 80091b6:	3d01      	subs	r5, #1
 80091b8:	b26d      	sxtb	r5, r5
 80091ba:	e7de      	b.n	800917a <prvUnlockQueue+0x2e>

080091bc <xQueueGenericReset>:
{
 80091bc:	b570      	push	{r4, r5, r6, lr}
 80091be:	460e      	mov	r6, r1
    configASSERT( pxQueue );
 80091c0:	4604      	mov	r4, r0
 80091c2:	b910      	cbnz	r0, 80091ca <xQueueGenericReset+0xe>
 80091c4:	f7ff ff0e 	bl	8008fe4 <ulSetInterruptMask>
 80091c8:	e7fe      	b.n	80091c8 <xQueueGenericReset+0xc>
        ( pxQueue->uxLength >= 1U ) &&
 80091ca:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
    if( ( pxQueue != NULL ) &&
 80091cc:	b365      	cbz	r5, 8009228 <xQueueGenericReset+0x6c>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
 80091ce:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80091d0:	fba3 3505 	umull	r3, r5, r3, r5
 80091d4:	bb45      	cbnz	r5, 8009228 <xQueueGenericReset+0x6c>
        taskENTER_CRITICAL();
 80091d6:	f7ff fe2d 	bl	8008e34 <vPortEnterCritical>
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80091da:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 80091de:	434b      	muls	r3, r1
 80091e0:	6822      	ldr	r2, [r4, #0]
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80091e2:	63a5      	str	r5, [r4, #56]	@ 0x38
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80091e4:	18d0      	adds	r0, r2, r3
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80091e6:	1a5b      	subs	r3, r3, r1
            pxQueue->pcWriteTo = pxQueue->pcHead;
 80091e8:	6062      	str	r2, [r4, #4]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80091ea:	441a      	add	r2, r3
            pxQueue->cRxLock = queueUNLOCKED;
 80091ec:	23ff      	movs	r3, #255	@ 0xff
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80091ee:	60a0      	str	r0, [r4, #8]
            pxQueue->cRxLock = queueUNLOCKED;
 80091f0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80091f4:	60e2      	str	r2, [r4, #12]
            pxQueue->cTxLock = queueUNLOCKED;
 80091f6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
            if( xNewQueue == pdFALSE )
 80091fa:	b966      	cbnz	r6, 8009216 <xQueueGenericReset+0x5a>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80091fc:	6923      	ldr	r3, [r4, #16]
 80091fe:	b133      	cbz	r3, 800920e <xQueueGenericReset+0x52>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009200:	f104 0010 	add.w	r0, r4, #16
 8009204:	f000 ff50 	bl	800a0a8 <xTaskRemoveFromEventList>
 8009208:	b108      	cbz	r0, 800920e <xQueueGenericReset+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
 800920a:	f7ff fe07 	bl	8008e1c <vPortYield>
        taskEXIT_CRITICAL();
 800920e:	f7ff fe1f 	bl	8008e50 <vPortExitCritical>
}
 8009212:	2001      	movs	r0, #1
 8009214:	bd70      	pop	{r4, r5, r6, pc}
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009216:	f104 0010 	add.w	r0, r4, #16
 800921a:	f7ff fda3 	bl	8008d64 <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800921e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009222:	f7ff fd9f 	bl	8008d64 <vListInitialise>
 8009226:	e7f2      	b.n	800920e <xQueueGenericReset+0x52>
    configASSERT( xReturn != pdFAIL );
 8009228:	f7ff fedc 	bl	8008fe4 <ulSetInterruptMask>
 800922c:	e7fe      	b.n	800922c <xQueueGenericReset+0x70>

0800922e <xQueueGenericCreateStatic>:
    {
 800922e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009230:	460d      	mov	r5, r1
        configASSERT( pxStaticQueue );
 8009232:	461c      	mov	r4, r3
 8009234:	b913      	cbnz	r3, 800923c <xQueueGenericCreateStatic+0xe>
 8009236:	f7ff fed5 	bl	8008fe4 <ulSetInterruptMask>
 800923a:	e7fe      	b.n	800923a <xQueueGenericCreateStatic+0xc>
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 800923c:	b108      	cbz	r0, 8009242 <xQueueGenericCreateStatic+0x14>
            ( pxStaticQueue != NULL ) &&
 800923e:	b11a      	cbz	r2, 8009248 <xQueueGenericCreateStatic+0x1a>
            ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) ) &&
 8009240:	b921      	cbnz	r1, 800924c <xQueueGenericCreateStatic+0x1e>
            configASSERT( pxNewQueue );
 8009242:	f7ff fecf 	bl	8008fe4 <ulSetInterruptMask>
 8009246:	e7fe      	b.n	8009246 <xQueueGenericCreateStatic+0x18>
            ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) ) )
 8009248:	2900      	cmp	r1, #0
 800924a:	d1fa      	bne.n	8009242 <xQueueGenericCreateStatic+0x14>
                    volatile size_t xSize = sizeof( StaticQueue_t );
 800924c:	2350      	movs	r3, #80	@ 0x50
 800924e:	9301      	str	r3, [sp, #4]
                    configASSERT( xSize == sizeof( Queue_t ) ); /* LCOV_EXCL_BR_LINE */
 8009250:	9b01      	ldr	r3, [sp, #4]
 8009252:	2b50      	cmp	r3, #80	@ 0x50
 8009254:	d002      	beq.n	800925c <xQueueGenericCreateStatic+0x2e>
 8009256:	f7ff fec5 	bl	8008fe4 <ulSetInterruptMask>
 800925a:	e7fe      	b.n	800925a <xQueueGenericCreateStatic+0x2c>
                    pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800925c:	2101      	movs	r1, #1
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800925e:	2d00      	cmp	r5, #0
 8009260:	bf08      	it	eq
 8009262:	4622      	moveq	r2, r4
    pxNewQueue->uxItemSize = uxItemSize;
 8009264:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
                    pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009268:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800926c:	4620      	mov	r0, r4
 800926e:	6022      	str	r2, [r4, #0]
                    ( void ) xSize;                             /* Keeps lint quiet when configASSERT() is not defined. */
 8009270:	9b01      	ldr	r3, [sp, #4]
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009272:	f7ff ffa3 	bl	80091bc <xQueueGenericReset>
    }
 8009276:	4620      	mov	r0, r4
            pxNewQueue->ucQueueType = ucQueueType;
 8009278:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800927c:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    }
 8009280:	b003      	add	sp, #12
 8009282:	bd30      	pop	{r4, r5, pc}

08009284 <xQueueGenericCreate>:
    {
 8009284:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009288:	460d      	mov	r5, r1
 800928a:	4617      	mov	r7, r2
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 800928c:	4606      	mov	r6, r0
 800928e:	b300      	cbz	r0, 80092d2 <xQueueGenericCreate+0x4e>
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
 8009290:	fba1 3800 	umull	r3, r8, r1, r0
 8009294:	f1b8 0f00 	cmp.w	r8, #0
 8009298:	d11b      	bne.n	80092d2 <xQueueGenericCreate+0x4e>
            ( ( SIZE_MAX - sizeof( Queue_t ) ) >= ( uxQueueLength * uxItemSize ) ) )
 800929a:	4348      	muls	r0, r1
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
 800929c:	f110 0f51 	cmn.w	r0, #81	@ 0x51
 80092a0:	d817      	bhi.n	80092d2 <xQueueGenericCreate+0x4e>
            pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80092a2:	3050      	adds	r0, #80	@ 0x50
 80092a4:	f001 fa30 	bl	800a708 <pvPortMalloc>
            if( pxNewQueue != NULL )
 80092a8:	4604      	mov	r4, r0
 80092aa:	b168      	cbz	r0, 80092c8 <xQueueGenericCreate+0x44>
                        pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80092ac:	f880 8046 	strb.w	r8, [r0, #70]	@ 0x46
    if( uxItemSize == ( UBaseType_t ) 0 )
 80092b0:	b16d      	cbz	r5, 80092ce <xQueueGenericCreate+0x4a>
                pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80092b2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80092b6:	2101      	movs	r1, #1
 80092b8:	4620      	mov	r0, r4
    pxNewQueue->uxItemSize = uxItemSize;
 80092ba:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 80092be:	6023      	str	r3, [r4, #0]
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80092c0:	f7ff ff7c 	bl	80091bc <xQueueGenericReset>
            pxNewQueue->ucQueueType = ucQueueType;
 80092c4:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
    }
 80092c8:	4620      	mov	r0, r4
 80092ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80092ce:	4603      	mov	r3, r0
 80092d0:	e7f1      	b.n	80092b6 <xQueueGenericCreate+0x32>
            configASSERT( pxNewQueue );
 80092d2:	f7ff fe87 	bl	8008fe4 <ulSetInterruptMask>
 80092d6:	e7fe      	b.n	80092d6 <xQueueGenericCreate+0x52>

080092d8 <xQueueCreateCountingSemaphoreStatic>:
    {
 80092d8:	b513      	push	{r0, r1, r4, lr}
 80092da:	4613      	mov	r3, r2
 80092dc:	460c      	mov	r4, r1
        if( ( uxMaxCount != 0 ) &&
 80092de:	b158      	cbz	r0, 80092f8 <xQueueCreateCountingSemaphoreStatic+0x20>
 80092e0:	4288      	cmp	r0, r1
 80092e2:	d309      	bcc.n	80092f8 <xQueueCreateCountingSemaphoreStatic+0x20>
            xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80092e4:	2202      	movs	r2, #2
 80092e6:	9200      	str	r2, [sp, #0]
 80092e8:	2200      	movs	r2, #0
 80092ea:	4611      	mov	r1, r2
 80092ec:	f7ff ff9f 	bl	800922e <xQueueGenericCreateStatic>
            if( xHandle != NULL )
 80092f0:	b100      	cbz	r0, 80092f4 <xQueueCreateCountingSemaphoreStatic+0x1c>
                ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80092f2:	6384      	str	r4, [r0, #56]	@ 0x38
    }
 80092f4:	b002      	add	sp, #8
 80092f6:	bd10      	pop	{r4, pc}
            configASSERT( xHandle );
 80092f8:	f7ff fe74 	bl	8008fe4 <ulSetInterruptMask>
 80092fc:	e7fe      	b.n	80092fc <xQueueCreateCountingSemaphoreStatic+0x24>

080092fe <xQueueCreateCountingSemaphore>:
    {
 80092fe:	b510      	push	{r4, lr}
 8009300:	460c      	mov	r4, r1
        if( ( uxMaxCount != 0 ) &&
 8009302:	b140      	cbz	r0, 8009316 <xQueueCreateCountingSemaphore+0x18>
 8009304:	4288      	cmp	r0, r1
 8009306:	d306      	bcc.n	8009316 <xQueueCreateCountingSemaphore+0x18>
            xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009308:	2202      	movs	r2, #2
 800930a:	2100      	movs	r1, #0
 800930c:	f7ff ffba 	bl	8009284 <xQueueGenericCreate>
            if( xHandle != NULL )
 8009310:	b100      	cbz	r0, 8009314 <xQueueCreateCountingSemaphore+0x16>
                ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8009312:	6384      	str	r4, [r0, #56]	@ 0x38
    }
 8009314:	bd10      	pop	{r4, pc}
            configASSERT( xHandle );
 8009316:	f7ff fe65 	bl	8008fe4 <ulSetInterruptMask>
 800931a:	e7fe      	b.n	800931a <xQueueCreateCountingSemaphore+0x1c>

0800931c <xQueueGenericSend>:
{
 800931c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009320:	460f      	mov	r7, r1
 8009322:	461e      	mov	r6, r3
    configASSERT( pxQueue );
 8009324:	4604      	mov	r4, r0
{
 8009326:	9201      	str	r2, [sp, #4]
    configASSERT( pxQueue );
 8009328:	b910      	cbnz	r0, 8009330 <xQueueGenericSend+0x14>
 800932a:	f7ff fe5b 	bl	8008fe4 <ulSetInterruptMask>
 800932e:	e7fe      	b.n	800932e <xQueueGenericSend+0x12>
    configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009330:	b921      	cbnz	r1, 800933c <xQueueGenericSend+0x20>
 8009332:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009334:	b113      	cbz	r3, 800933c <xQueueGenericSend+0x20>
 8009336:	f7ff fe55 	bl	8008fe4 <ulSetInterruptMask>
 800933a:	e7fe      	b.n	800933a <xQueueGenericSend+0x1e>
    configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800933c:	2e02      	cmp	r6, #2
 800933e:	d105      	bne.n	800934c <xQueueGenericSend+0x30>
 8009340:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009342:	2b01      	cmp	r3, #1
 8009344:	d002      	beq.n	800934c <xQueueGenericSend+0x30>
 8009346:	f7ff fe4d 	bl	8008fe4 <ulSetInterruptMask>
 800934a:	e7fe      	b.n	800934a <xQueueGenericSend+0x2e>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800934c:	f000 ff4c 	bl	800a1e8 <xTaskGetSchedulerState>
 8009350:	4605      	mov	r5, r0
 8009352:	b1f0      	cbz	r0, 8009392 <xQueueGenericSend+0x76>
 8009354:	2500      	movs	r5, #0
        prvLockQueue( pxQueue );
 8009356:	f04f 0800 	mov.w	r8, #0
        taskENTER_CRITICAL();
 800935a:	f7ff fd6b 	bl	8008e34 <vPortEnterCritical>
            if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800935e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009360:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009362:	429a      	cmp	r2, r3
 8009364:	d301      	bcc.n	800936a <xQueueGenericSend+0x4e>
 8009366:	2e02      	cmp	r6, #2
 8009368:	d119      	bne.n	800939e <xQueueGenericSend+0x82>
                        xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800936a:	4632      	mov	r2, r6
 800936c:	4639      	mov	r1, r7
 800936e:	4620      	mov	r0, r4
 8009370:	f7ff fea3 	bl	80090ba <prvCopyDataToQueue>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009374:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009376:	b11b      	cbz	r3, 8009380 <xQueueGenericSend+0x64>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009378:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800937c:	f000 fe94 	bl	800a0a8 <xTaskRemoveFromEventList>
 8009380:	b108      	cbz	r0, 8009386 <xQueueGenericSend+0x6a>
                                queueYIELD_IF_USING_PREEMPTION();
 8009382:	f7ff fd4b 	bl	8008e1c <vPortYield>
                taskEXIT_CRITICAL();
 8009386:	f7ff fd63 	bl	8008e50 <vPortExitCritical>
                return pdPASS;
 800938a:	2001      	movs	r0, #1
}
 800938c:	b004      	add	sp, #16
 800938e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009392:	9b01      	ldr	r3, [sp, #4]
 8009394:	2b00      	cmp	r3, #0
 8009396:	d0de      	beq.n	8009356 <xQueueGenericSend+0x3a>
 8009398:	f7ff fe24 	bl	8008fe4 <ulSetInterruptMask>
 800939c:	e7fe      	b.n	800939c <xQueueGenericSend+0x80>
                if( xTicksToWait == ( TickType_t ) 0 )
 800939e:	9b01      	ldr	r3, [sp, #4]
 80093a0:	b91b      	cbnz	r3, 80093aa <xQueueGenericSend+0x8e>
                    taskEXIT_CRITICAL();
 80093a2:	f7ff fd55 	bl	8008e50 <vPortExitCritical>
                    return errQUEUE_FULL;
 80093a6:	2000      	movs	r0, #0
 80093a8:	e7f0      	b.n	800938c <xQueueGenericSend+0x70>
                else if( xEntryTimeSet == pdFALSE )
 80093aa:	b915      	cbnz	r5, 80093b2 <xQueueGenericSend+0x96>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 80093ac:	a802      	add	r0, sp, #8
 80093ae:	f000 fed9 	bl	800a164 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 80093b2:	f7ff fd4d 	bl	8008e50 <vPortExitCritical>
        vTaskSuspendAll();
 80093b6:	f000 fc39 	bl	8009c2c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 80093ba:	f7ff fd3b 	bl	8008e34 <vPortEnterCritical>
 80093be:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80093c2:	2bff      	cmp	r3, #255	@ 0xff
 80093c4:	bf08      	it	eq
 80093c6:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80093ca:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80093ce:	2bff      	cmp	r3, #255	@ 0xff
 80093d0:	bf08      	it	eq
 80093d2:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80093d6:	f7ff fd3b 	bl	8008e50 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80093da:	a901      	add	r1, sp, #4
 80093dc:	a802      	add	r0, sp, #8
 80093de:	f000 fecd 	bl	800a17c <xTaskCheckForTimeOut>
 80093e2:	b9f0      	cbnz	r0, 8009422 <xQueueGenericSend+0x106>

static BaseType_t prvIsQueueFull( const Queue_t * pxQueue )
{
    BaseType_t xReturn;

    taskENTER_CRITICAL();
 80093e4:	f7ff fd26 	bl	8008e34 <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80093e8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80093ea:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80093ec:	429a      	cmp	r2, r3
 80093ee:	d10f      	bne.n	8009410 <xQueueGenericSend+0xf4>
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
 80093f0:	f7ff fd2e 	bl	8008e50 <vPortExitCritical>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80093f4:	9901      	ldr	r1, [sp, #4]
 80093f6:	f104 0010 	add.w	r0, r4, #16
 80093fa:	f000 fe19 	bl	800a030 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 80093fe:	4620      	mov	r0, r4
 8009400:	f7ff fea4 	bl	800914c <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 8009404:	f000 fcd0 	bl	8009da8 <xTaskResumeAll>
 8009408:	b948      	cbnz	r0, 800941e <xQueueGenericSend+0x102>
                    portYIELD_WITHIN_API();
 800940a:	f7ff fd07 	bl	8008e1c <vPortYield>
 800940e:	e006      	b.n	800941e <xQueueGenericSend+0x102>
    taskEXIT_CRITICAL();
 8009410:	f7ff fd1e 	bl	8008e50 <vPortExitCritical>
                prvUnlockQueue( pxQueue );
 8009414:	4620      	mov	r0, r4
 8009416:	f7ff fe99 	bl	800914c <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 800941a:	f000 fcc5 	bl	8009da8 <xTaskResumeAll>
 800941e:	2501      	movs	r5, #1
 8009420:	e79b      	b.n	800935a <xQueueGenericSend+0x3e>
            prvUnlockQueue( pxQueue );
 8009422:	4620      	mov	r0, r4
 8009424:	f7ff fe92 	bl	800914c <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 8009428:	f000 fcbe 	bl	8009da8 <xTaskResumeAll>
            return errQUEUE_FULL;
 800942c:	e7bb      	b.n	80093a6 <xQueueGenericSend+0x8a>

0800942e <xQueueGenericSendFromISR>:
{
 800942e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009432:	4689      	mov	r9, r1
 8009434:	4617      	mov	r7, r2
 8009436:	461e      	mov	r6, r3
    configASSERT( pxQueue );
 8009438:	4604      	mov	r4, r0
 800943a:	b910      	cbnz	r0, 8009442 <xQueueGenericSendFromISR+0x14>
 800943c:	f7ff fdd2 	bl	8008fe4 <ulSetInterruptMask>
 8009440:	e7fe      	b.n	8009440 <xQueueGenericSendFromISR+0x12>
    configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009442:	b921      	cbnz	r1, 800944e <xQueueGenericSendFromISR+0x20>
 8009444:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009446:	b113      	cbz	r3, 800944e <xQueueGenericSendFromISR+0x20>
 8009448:	f7ff fdcc 	bl	8008fe4 <ulSetInterruptMask>
 800944c:	e7fe      	b.n	800944c <xQueueGenericSendFromISR+0x1e>
    configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800944e:	2e02      	cmp	r6, #2
 8009450:	d105      	bne.n	800945e <xQueueGenericSendFromISR+0x30>
 8009452:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009454:	2b01      	cmp	r3, #1
 8009456:	d002      	beq.n	800945e <xQueueGenericSendFromISR+0x30>
 8009458:	f7ff fdc4 	bl	8008fe4 <ulSetInterruptMask>
 800945c:	e7fe      	b.n	800945c <xQueueGenericSendFromISR+0x2e>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 800945e:	f7ff fdc1 	bl	8008fe4 <ulSetInterruptMask>
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009462:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009464:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8009466:	4680      	mov	r8, r0
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009468:	429a      	cmp	r2, r3
 800946a:	d301      	bcc.n	8009470 <xQueueGenericSendFromISR+0x42>
 800946c:	2e02      	cmp	r6, #2
 800946e:	d125      	bne.n	80094bc <xQueueGenericSendFromISR+0x8e>
            const int8_t cTxLock = pxQueue->cTxLock;
 8009470:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009474:	4632      	mov	r2, r6
 8009476:	4649      	mov	r1, r9
 8009478:	4620      	mov	r0, r4
            const int8_t cTxLock = pxQueue->cTxLock;
 800947a:	b26d      	sxtb	r5, r5
            const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800947c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800947e:	f7ff fe1c 	bl	80090ba <prvCopyDataToQueue>
            if( cTxLock == queueUNLOCKED )
 8009482:	1c6b      	adds	r3, r5, #1
 8009484:	d110      	bne.n	80094a8 <xQueueGenericSendFromISR+0x7a>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009486:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009488:	b13b      	cbz	r3, 800949a <xQueueGenericSendFromISR+0x6c>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800948a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800948e:	f000 fe0b 	bl	800a0a8 <xTaskRemoveFromEventList>
 8009492:	b110      	cbz	r0, 800949a <xQueueGenericSendFromISR+0x6c>
                                if( pxHigherPriorityTaskWoken != NULL )
 8009494:	b10f      	cbz	r7, 800949a <xQueueGenericSendFromISR+0x6c>
                                    *pxHigherPriorityTaskWoken = pdTRUE;
 8009496:	2301      	movs	r3, #1
 8009498:	603b      	str	r3, [r7, #0]
            xReturn = pdPASS;
 800949a:	2401      	movs	r4, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 800949c:	4640      	mov	r0, r8
 800949e:	f7ff fdac 	bl	8008ffa <vClearInterruptMask>
}
 80094a2:	4620      	mov	r0, r4
 80094a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                configASSERT( cTxLock != queueINT8_MAX );
 80094a8:	2d7f      	cmp	r5, #127	@ 0x7f
 80094aa:	d102      	bne.n	80094b2 <xQueueGenericSendFromISR+0x84>
 80094ac:	f7ff fd9a 	bl	8008fe4 <ulSetInterruptMask>
 80094b0:	e7fe      	b.n	80094b0 <xQueueGenericSendFromISR+0x82>
                pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80094b2:	3501      	adds	r5, #1
 80094b4:	b26d      	sxtb	r5, r5
 80094b6:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 80094ba:	e7ee      	b.n	800949a <xQueueGenericSendFromISR+0x6c>
            xReturn = errQUEUE_FULL;
 80094bc:	2400      	movs	r4, #0
 80094be:	e7ed      	b.n	800949c <xQueueGenericSendFromISR+0x6e>

080094c0 <xQueueGiveFromISR>:
{
 80094c0:	b570      	push	{r4, r5, r6, lr}
 80094c2:	460d      	mov	r5, r1
    configASSERT( pxQueue );
 80094c4:	4604      	mov	r4, r0
 80094c6:	b910      	cbnz	r0, 80094ce <xQueueGiveFromISR+0xe>
 80094c8:	f7ff fd8c 	bl	8008fe4 <ulSetInterruptMask>
 80094cc:	e7fe      	b.n	80094cc <xQueueGiveFromISR+0xc>
    configASSERT( pxQueue->uxItemSize == 0 );
 80094ce:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80094d0:	b113      	cbz	r3, 80094d8 <xQueueGiveFromISR+0x18>
 80094d2:	f7ff fd87 	bl	8008fe4 <ulSetInterruptMask>
 80094d6:	e7fe      	b.n	80094d6 <xQueueGiveFromISR+0x16>
    configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80094d8:	6803      	ldr	r3, [r0, #0]
 80094da:	b923      	cbnz	r3, 80094e6 <xQueueGiveFromISR+0x26>
 80094dc:	6883      	ldr	r3, [r0, #8]
 80094de:	b113      	cbz	r3, 80094e6 <xQueueGiveFromISR+0x26>
 80094e0:	f7ff fd80 	bl	8008fe4 <ulSetInterruptMask>
 80094e4:	e7fe      	b.n	80094e4 <xQueueGiveFromISR+0x24>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 80094e6:	f7ff fd7d 	bl	8008fe4 <ulSetInterruptMask>
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80094ea:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
        if( uxMessagesWaiting < pxQueue->uxLength )
 80094ec:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 80094ee:	4606      	mov	r6, r0
        if( uxMessagesWaiting < pxQueue->uxLength )
 80094f0:	4293      	cmp	r3, r2
 80094f2:	d920      	bls.n	8009536 <xQueueGiveFromISR+0x76>
            const int8_t cTxLock = pxQueue->cTxLock;
 80094f4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
            pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80094f8:	3201      	adds	r2, #1
            if( cTxLock == queueUNLOCKED )
 80094fa:	29ff      	cmp	r1, #255	@ 0xff
            const int8_t cTxLock = pxQueue->cTxLock;
 80094fc:	b24b      	sxtb	r3, r1
            pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80094fe:	63a2      	str	r2, [r4, #56]	@ 0x38
            if( cTxLock == queueUNLOCKED )
 8009500:	d10f      	bne.n	8009522 <xQueueGiveFromISR+0x62>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009502:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009504:	b13b      	cbz	r3, 8009516 <xQueueGiveFromISR+0x56>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009506:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800950a:	f000 fdcd 	bl	800a0a8 <xTaskRemoveFromEventList>
 800950e:	b110      	cbz	r0, 8009516 <xQueueGiveFromISR+0x56>
                                if( pxHigherPriorityTaskWoken != NULL )
 8009510:	b10d      	cbz	r5, 8009516 <xQueueGiveFromISR+0x56>
                                    *pxHigherPriorityTaskWoken = pdTRUE;
 8009512:	2301      	movs	r3, #1
 8009514:	602b      	str	r3, [r5, #0]
            xReturn = pdPASS;
 8009516:	2401      	movs	r4, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 8009518:	4630      	mov	r0, r6
 800951a:	f7ff fd6e 	bl	8008ffa <vClearInterruptMask>
}
 800951e:	4620      	mov	r0, r4
 8009520:	bd70      	pop	{r4, r5, r6, pc}
                configASSERT( cTxLock != queueINT8_MAX );
 8009522:	2b7f      	cmp	r3, #127	@ 0x7f
 8009524:	d102      	bne.n	800952c <xQueueGiveFromISR+0x6c>
 8009526:	f7ff fd5d 	bl	8008fe4 <ulSetInterruptMask>
 800952a:	e7fe      	b.n	800952a <xQueueGiveFromISR+0x6a>
                pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800952c:	3301      	adds	r3, #1
 800952e:	b25b      	sxtb	r3, r3
 8009530:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8009534:	e7ef      	b.n	8009516 <xQueueGiveFromISR+0x56>
            xReturn = errQUEUE_FULL;
 8009536:	2400      	movs	r4, #0
 8009538:	e7ee      	b.n	8009518 <xQueueGiveFromISR+0x58>

0800953a <xQueueReceive>:
{
 800953a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800953e:	460e      	mov	r6, r1
    configASSERT( ( pxQueue ) );
 8009540:	4604      	mov	r4, r0
{
 8009542:	9201      	str	r2, [sp, #4]
    configASSERT( ( pxQueue ) );
 8009544:	b910      	cbnz	r0, 800954c <xQueueReceive+0x12>
 8009546:	f7ff fd4d 	bl	8008fe4 <ulSetInterruptMask>
 800954a:	e7fe      	b.n	800954a <xQueueReceive+0x10>
    configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800954c:	b921      	cbnz	r1, 8009558 <xQueueReceive+0x1e>
 800954e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009550:	b113      	cbz	r3, 8009558 <xQueueReceive+0x1e>
 8009552:	f7ff fd47 	bl	8008fe4 <ulSetInterruptMask>
 8009556:	e7fe      	b.n	8009556 <xQueueReceive+0x1c>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009558:	f000 fe46 	bl	800a1e8 <xTaskGetSchedulerState>
 800955c:	4605      	mov	r5, r0
 800955e:	b1d8      	cbz	r0, 8009598 <xQueueReceive+0x5e>
 8009560:	2500      	movs	r5, #0
        prvLockQueue( pxQueue );
 8009562:	f04f 0800 	mov.w	r8, #0
        taskENTER_CRITICAL();
 8009566:	f7ff fc65 	bl	8008e34 <vPortEnterCritical>
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800956a:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800956c:	b1d7      	cbz	r7, 80095a4 <xQueueReceive+0x6a>
                prvCopyDataFromQueue( pxQueue, pvBuffer );
 800956e:	4631      	mov	r1, r6
 8009570:	4620      	mov	r0, r4
                pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009572:	3f01      	subs	r7, #1
                prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009574:	f7ff fdd4 	bl	8009120 <prvCopyDataFromQueue>
                pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009578:	63a7      	str	r7, [r4, #56]	@ 0x38
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800957a:	6923      	ldr	r3, [r4, #16]
 800957c:	b133      	cbz	r3, 800958c <xQueueReceive+0x52>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800957e:	f104 0010 	add.w	r0, r4, #16
 8009582:	f000 fd91 	bl	800a0a8 <xTaskRemoveFromEventList>
 8009586:	b108      	cbz	r0, 800958c <xQueueReceive+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
 8009588:	f7ff fc48 	bl	8008e1c <vPortYield>
                taskEXIT_CRITICAL();
 800958c:	f7ff fc60 	bl	8008e50 <vPortExitCritical>
                return pdPASS;
 8009590:	2001      	movs	r0, #1
}
 8009592:	b004      	add	sp, #16
 8009594:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009598:	9b01      	ldr	r3, [sp, #4]
 800959a:	2b00      	cmp	r3, #0
 800959c:	d0e1      	beq.n	8009562 <xQueueReceive+0x28>
 800959e:	f7ff fd21 	bl	8008fe4 <ulSetInterruptMask>
 80095a2:	e7fe      	b.n	80095a2 <xQueueReceive+0x68>
                if( xTicksToWait == ( TickType_t ) 0 )
 80095a4:	9b01      	ldr	r3, [sp, #4]
 80095a6:	b91b      	cbnz	r3, 80095b0 <xQueueReceive+0x76>
                    taskEXIT_CRITICAL();
 80095a8:	f7ff fc52 	bl	8008e50 <vPortExitCritical>
                    return errQUEUE_EMPTY;
 80095ac:	2000      	movs	r0, #0
 80095ae:	e7f0      	b.n	8009592 <xQueueReceive+0x58>
                else if( xEntryTimeSet == pdFALSE )
 80095b0:	b915      	cbnz	r5, 80095b8 <xQueueReceive+0x7e>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 80095b2:	a802      	add	r0, sp, #8
 80095b4:	f000 fdd6 	bl	800a164 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 80095b8:	f7ff fc4a 	bl	8008e50 <vPortExitCritical>
        vTaskSuspendAll();
 80095bc:	f000 fb36 	bl	8009c2c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 80095c0:	f7ff fc38 	bl	8008e34 <vPortEnterCritical>
 80095c4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80095c8:	2bff      	cmp	r3, #255	@ 0xff
 80095ca:	bf08      	it	eq
 80095cc:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80095d0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80095d4:	2bff      	cmp	r3, #255	@ 0xff
 80095d6:	bf08      	it	eq
 80095d8:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80095dc:	f7ff fc38 	bl	8008e50 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80095e0:	a901      	add	r1, sp, #4
 80095e2:	a802      	add	r0, sp, #8
 80095e4:	f000 fdca 	bl	800a17c <xTaskCheckForTimeOut>
 80095e8:	b9c0      	cbnz	r0, 800961c <xQueueReceive+0xe2>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80095ea:	4620      	mov	r0, r4
 80095ec:	f7ff fd5a 	bl	80090a4 <prvIsQueueEmpty>
 80095f0:	b170      	cbz	r0, 8009610 <xQueueReceive+0xd6>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80095f2:	9901      	ldr	r1, [sp, #4]
 80095f4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80095f8:	f000 fd1a 	bl	800a030 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 80095fc:	4620      	mov	r0, r4
 80095fe:	f7ff fda5 	bl	800914c <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 8009602:	f000 fbd1 	bl	8009da8 <xTaskResumeAll>
 8009606:	b908      	cbnz	r0, 800960c <xQueueReceive+0xd2>
                    portYIELD_WITHIN_API();
 8009608:	f7ff fc08 	bl	8008e1c <vPortYield>
 800960c:	2501      	movs	r5, #1
 800960e:	e7aa      	b.n	8009566 <xQueueReceive+0x2c>
                prvUnlockQueue( pxQueue );
 8009610:	4620      	mov	r0, r4
 8009612:	f7ff fd9b 	bl	800914c <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 8009616:	f000 fbc7 	bl	8009da8 <xTaskResumeAll>
 800961a:	e7f7      	b.n	800960c <xQueueReceive+0xd2>
            prvUnlockQueue( pxQueue );
 800961c:	4620      	mov	r0, r4
 800961e:	f7ff fd95 	bl	800914c <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 8009622:	f000 fbc1 	bl	8009da8 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009626:	4620      	mov	r0, r4
 8009628:	f7ff fd3c 	bl	80090a4 <prvIsQueueEmpty>
 800962c:	2800      	cmp	r0, #0
 800962e:	d0ed      	beq.n	800960c <xQueueReceive+0xd2>
 8009630:	e7bc      	b.n	80095ac <xQueueReceive+0x72>

08009632 <xQueueSemaphoreTake>:
{
 8009632:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009634:	b085      	sub	sp, #20
    configASSERT( ( pxQueue ) );
 8009636:	4604      	mov	r4, r0
{
 8009638:	9101      	str	r1, [sp, #4]
    configASSERT( ( pxQueue ) );
 800963a:	b910      	cbnz	r0, 8009642 <xQueueSemaphoreTake+0x10>
 800963c:	f7ff fcd2 	bl	8008fe4 <ulSetInterruptMask>
 8009640:	e7fe      	b.n	8009640 <xQueueSemaphoreTake+0xe>
    configASSERT( pxQueue->uxItemSize == 0 );
 8009642:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8009644:	b115      	cbz	r5, 800964c <xQueueSemaphoreTake+0x1a>
 8009646:	f7ff fccd 	bl	8008fe4 <ulSetInterruptMask>
 800964a:	e7fe      	b.n	800964a <xQueueSemaphoreTake+0x18>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800964c:	f000 fdcc 	bl	800a1e8 <xTaskGetSchedulerState>
 8009650:	4606      	mov	r6, r0
 8009652:	b1e0      	cbz	r0, 800968e <xQueueSemaphoreTake+0x5c>
 8009654:	462e      	mov	r6, r5
        prvLockQueue( pxQueue );
 8009656:	2700      	movs	r7, #0
        taskENTER_CRITICAL();
 8009658:	f7ff fbec 	bl	8008e34 <vPortEnterCritical>
            const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800965c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800965e:	b1e3      	cbz	r3, 800969a <xQueueSemaphoreTake+0x68>
                pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009660:	3b01      	subs	r3, #1
 8009662:	63a3      	str	r3, [r4, #56]	@ 0x38
                        if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009664:	6823      	ldr	r3, [r4, #0]
 8009666:	b913      	cbnz	r3, 800966e <xQueueSemaphoreTake+0x3c>
                            pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8009668:	f000 fe98 	bl	800a39c <pvTaskIncrementMutexHeldCount>
 800966c:	60a0      	str	r0, [r4, #8]
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800966e:	6923      	ldr	r3, [r4, #16]
 8009670:	b133      	cbz	r3, 8009680 <xQueueSemaphoreTake+0x4e>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009672:	f104 0010 	add.w	r0, r4, #16
 8009676:	f000 fd17 	bl	800a0a8 <xTaskRemoveFromEventList>
 800967a:	b108      	cbz	r0, 8009680 <xQueueSemaphoreTake+0x4e>
                        queueYIELD_IF_USING_PREEMPTION();
 800967c:	f7ff fbce 	bl	8008e1c <vPortYield>
                taskEXIT_CRITICAL();
 8009680:	f7ff fbe6 	bl	8008e50 <vPortExitCritical>
                return pdPASS;
 8009684:	2001      	movs	r0, #1
}
 8009686:	b005      	add	sp, #20
 8009688:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800968a:	4635      	mov	r5, r6
 800968c:	e7e3      	b.n	8009656 <xQueueSemaphoreTake+0x24>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800968e:	9b01      	ldr	r3, [sp, #4]
 8009690:	2b00      	cmp	r3, #0
 8009692:	d0fa      	beq.n	800968a <xQueueSemaphoreTake+0x58>
 8009694:	f7ff fca6 	bl	8008fe4 <ulSetInterruptMask>
 8009698:	e7fe      	b.n	8009698 <xQueueSemaphoreTake+0x66>
                if( xTicksToWait == ( TickType_t ) 0 )
 800969a:	9b01      	ldr	r3, [sp, #4]
 800969c:	b923      	cbnz	r3, 80096a8 <xQueueSemaphoreTake+0x76>
                            configASSERT( xInheritanceOccurred == pdFALSE );
 800969e:	2d00      	cmp	r5, #0
 80096a0:	d058      	beq.n	8009754 <xQueueSemaphoreTake+0x122>
 80096a2:	f7ff fc9f 	bl	8008fe4 <ulSetInterruptMask>
 80096a6:	e7fe      	b.n	80096a6 <xQueueSemaphoreTake+0x74>
                else if( xEntryTimeSet == pdFALSE )
 80096a8:	b916      	cbnz	r6, 80096b0 <xQueueSemaphoreTake+0x7e>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 80096aa:	a802      	add	r0, sp, #8
 80096ac:	f000 fd5a 	bl	800a164 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 80096b0:	f7ff fbce 	bl	8008e50 <vPortExitCritical>
        vTaskSuspendAll();
 80096b4:	f000 faba 	bl	8009c2c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 80096b8:	f7ff fbbc 	bl	8008e34 <vPortEnterCritical>
 80096bc:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80096c0:	2bff      	cmp	r3, #255	@ 0xff
 80096c2:	bf08      	it	eq
 80096c4:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 80096c8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80096cc:	2bff      	cmp	r3, #255	@ 0xff
 80096ce:	bf08      	it	eq
 80096d0:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 80096d4:	f7ff fbbc 	bl	8008e50 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80096d8:	a901      	add	r1, sp, #4
 80096da:	a802      	add	r0, sp, #8
 80096dc:	f000 fd4e 	bl	800a17c <xTaskCheckForTimeOut>
 80096e0:	bb10      	cbnz	r0, 8009728 <xQueueSemaphoreTake+0xf6>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80096e2:	4620      	mov	r0, r4
 80096e4:	f7ff fcde 	bl	80090a4 <prvIsQueueEmpty>
 80096e8:	b1c0      	cbz	r0, 800971c <xQueueSemaphoreTake+0xea>
                        if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80096ea:	6823      	ldr	r3, [r4, #0]
 80096ec:	b93b      	cbnz	r3, 80096fe <xQueueSemaphoreTake+0xcc>
                            taskENTER_CRITICAL();
 80096ee:	f7ff fba1 	bl	8008e34 <vPortEnterCritical>
                                xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80096f2:	68a0      	ldr	r0, [r4, #8]
 80096f4:	f000 fd88 	bl	800a208 <xTaskPriorityInherit>
 80096f8:	4605      	mov	r5, r0
                            taskEXIT_CRITICAL();
 80096fa:	f7ff fba9 	bl	8008e50 <vPortExitCritical>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80096fe:	9901      	ldr	r1, [sp, #4]
 8009700:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009704:	f000 fc94 	bl	800a030 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 8009708:	4620      	mov	r0, r4
 800970a:	f7ff fd1f 	bl	800914c <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 800970e:	f000 fb4b 	bl	8009da8 <xTaskResumeAll>
 8009712:	b908      	cbnz	r0, 8009718 <xQueueSemaphoreTake+0xe6>
                    portYIELD_WITHIN_API();
 8009714:	f7ff fb82 	bl	8008e1c <vPortYield>
 8009718:	2601      	movs	r6, #1
 800971a:	e79d      	b.n	8009658 <xQueueSemaphoreTake+0x26>
                prvUnlockQueue( pxQueue );
 800971c:	4620      	mov	r0, r4
 800971e:	f7ff fd15 	bl	800914c <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 8009722:	f000 fb41 	bl	8009da8 <xTaskResumeAll>
 8009726:	e7f7      	b.n	8009718 <xQueueSemaphoreTake+0xe6>
            prvUnlockQueue( pxQueue );
 8009728:	4620      	mov	r0, r4
 800972a:	f7ff fd0f 	bl	800914c <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 800972e:	f000 fb3b 	bl	8009da8 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009732:	4620      	mov	r0, r4
 8009734:	f7ff fcb6 	bl	80090a4 <prvIsQueueEmpty>
 8009738:	2800      	cmp	r0, #0
 800973a:	d0ed      	beq.n	8009718 <xQueueSemaphoreTake+0xe6>
                        if( xInheritanceOccurred != pdFALSE )
 800973c:	b165      	cbz	r5, 8009758 <xQueueSemaphoreTake+0x126>
                            taskENTER_CRITICAL();
 800973e:	f7ff fb79 	bl	8008e34 <vPortEnterCritical>
        if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8009742:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8009744:	b119      	cbz	r1, 800974e <xQueueSemaphoreTake+0x11c>
            uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8009746:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009748:	6819      	ldr	r1, [r3, #0]
 800974a:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
                                vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800974e:	68a0      	ldr	r0, [r4, #8]
 8009750:	f000 fdde 	bl	800a310 <vTaskPriorityDisinheritAfterTimeout>
                            taskEXIT_CRITICAL();
 8009754:	f7ff fb7c 	bl	8008e50 <vPortExitCritical>
                    return errQUEUE_EMPTY;
 8009758:	2000      	movs	r0, #0
 800975a:	e794      	b.n	8009686 <xQueueSemaphoreTake+0x54>

0800975c <xQueueReceiveFromISR>:
{
 800975c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009760:	4689      	mov	r9, r1
 8009762:	4690      	mov	r8, r2
    configASSERT( pxQueue );
 8009764:	4604      	mov	r4, r0
 8009766:	b910      	cbnz	r0, 800976e <xQueueReceiveFromISR+0x12>
 8009768:	f7ff fc3c 	bl	8008fe4 <ulSetInterruptMask>
 800976c:	e7fe      	b.n	800976c <xQueueReceiveFromISR+0x10>
    configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800976e:	b921      	cbnz	r1, 800977a <xQueueReceiveFromISR+0x1e>
 8009770:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009772:	b113      	cbz	r3, 800977a <xQueueReceiveFromISR+0x1e>
 8009774:	f7ff fc36 	bl	8008fe4 <ulSetInterruptMask>
 8009778:	e7fe      	b.n	8009778 <xQueueReceiveFromISR+0x1c>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 800977a:	f7ff fc33 	bl	8008fe4 <ulSetInterruptMask>
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800977e:	6ba6      	ldr	r6, [r4, #56]	@ 0x38
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8009780:	4607      	mov	r7, r0
        if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009782:	b1c6      	cbz	r6, 80097b6 <xQueueReceiveFromISR+0x5a>
            const int8_t cRxLock = pxQueue->cRxLock;
 8009784:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
            prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009788:	4649      	mov	r1, r9
 800978a:	4620      	mov	r0, r4
            const int8_t cRxLock = pxQueue->cRxLock;
 800978c:	b26d      	sxtb	r5, r5
            prvCopyDataFromQueue( pxQueue, pvBuffer );
 800978e:	f7ff fcc7 	bl	8009120 <prvCopyDataFromQueue>
            pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009792:	3e01      	subs	r6, #1
            if( cRxLock == queueUNLOCKED )
 8009794:	1c6b      	adds	r3, r5, #1
            pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009796:	63a6      	str	r6, [r4, #56]	@ 0x38
            if( cRxLock == queueUNLOCKED )
 8009798:	d113      	bne.n	80097c2 <xQueueReceiveFromISR+0x66>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800979a:	6923      	ldr	r3, [r4, #16]
 800979c:	b153      	cbz	r3, 80097b4 <xQueueReceiveFromISR+0x58>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800979e:	f104 0010 	add.w	r0, r4, #16
 80097a2:	f000 fc81 	bl	800a0a8 <xTaskRemoveFromEventList>
 80097a6:	b128      	cbz	r0, 80097b4 <xQueueReceiveFromISR+0x58>
                        if( pxHigherPriorityTaskWoken != NULL )
 80097a8:	f1b8 0f00 	cmp.w	r8, #0
 80097ac:	d002      	beq.n	80097b4 <xQueueReceiveFromISR+0x58>
                            *pxHigherPriorityTaskWoken = pdTRUE;
 80097ae:	2301      	movs	r3, #1
 80097b0:	f8c8 3000 	str.w	r3, [r8]
            xReturn = pdPASS;
 80097b4:	2601      	movs	r6, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 80097b6:	4638      	mov	r0, r7
 80097b8:	f7ff fc1f 	bl	8008ffa <vClearInterruptMask>
}
 80097bc:	4630      	mov	r0, r6
 80097be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                configASSERT( cRxLock != queueINT8_MAX );
 80097c2:	2d7f      	cmp	r5, #127	@ 0x7f
 80097c4:	d102      	bne.n	80097cc <xQueueReceiveFromISR+0x70>
 80097c6:	f7ff fc0d 	bl	8008fe4 <ulSetInterruptMask>
 80097ca:	e7fe      	b.n	80097ca <xQueueReceiveFromISR+0x6e>
                pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80097cc:	3501      	adds	r5, #1
 80097ce:	b26d      	sxtb	r5, r5
 80097d0:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 80097d4:	e7ee      	b.n	80097b4 <xQueueReceiveFromISR+0x58>
	...

080097d8 <vQueueAddToRegistry>:

#if ( configQUEUE_REGISTRY_SIZE > 0 )

    void vQueueAddToRegistry( QueueHandle_t xQueue,
                              const char * pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
    {
 80097d8:	b570      	push	{r4, r5, r6, lr}
        UBaseType_t ux;

        configASSERT( xQueue );
 80097da:	b910      	cbnz	r0, 80097e2 <vQueueAddToRegistry+0xa>
 80097dc:	f7ff fc02 	bl	8008fe4 <ulSetInterruptMask>
 80097e0:	e7fe      	b.n	80097e0 <vQueueAddToRegistry+0x8>

        QueueRegistryItem_t * pxEntryToWrite = NULL;

        if( pcQueueName != NULL )
 80097e2:	b1b9      	cbz	r1, 8009814 <vQueueAddToRegistry+0x3c>
        QueueRegistryItem_t * pxEntryToWrite = NULL;
 80097e4:	2300      	movs	r3, #0
 80097e6:	4a0c      	ldr	r2, [pc, #48]	@ (8009818 <vQueueAddToRegistry+0x40>)
        {
            /* See if there is an empty space in the registry.  A NULL name denotes
             * a free slot. */
            for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80097e8:	461c      	mov	r4, r3
 80097ea:	4615      	mov	r5, r2
            {
                /* Replace an existing entry if the queue is already in the registry. */
                if( xQueue == xQueueRegistry[ ux ].xHandle )
 80097ec:	6856      	ldr	r6, [r2, #4]
 80097ee:	4286      	cmp	r6, r0
 80097f0:	d104      	bne.n	80097fc <vQueueAddToRegistry+0x24>
                {
                    pxEntryToWrite = &( xQueueRegistry[ ux ] );
 80097f2:	eb05 03c4 	add.w	r3, r5, r4, lsl #3

        if( pxEntryToWrite != NULL )
        {
            /* Store the information on this queue. */
            pxEntryToWrite->pcQueueName = pcQueueName;
            pxEntryToWrite->xHandle = xQueue;
 80097f6:	e9c3 1000 	strd	r1, r0, [r3]

            traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
        }
    }
 80097fa:	e00b      	b.n	8009814 <vQueueAddToRegistry+0x3c>
                else if( ( pxEntryToWrite == NULL ) && ( xQueueRegistry[ ux ].pcQueueName == NULL ) )
 80097fc:	b91b      	cbnz	r3, 8009806 <vQueueAddToRegistry+0x2e>
 80097fe:	6816      	ldr	r6, [r2, #0]
                    pxEntryToWrite = &( xQueueRegistry[ ux ] );
 8009800:	2e00      	cmp	r6, #0
 8009802:	bf08      	it	eq
 8009804:	4613      	moveq	r3, r2
            for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009806:	3401      	adds	r4, #1
 8009808:	2c08      	cmp	r4, #8
 800980a:	f102 0208 	add.w	r2, r2, #8
 800980e:	d1ed      	bne.n	80097ec <vQueueAddToRegistry+0x14>
        if( pxEntryToWrite != NULL )
 8009810:	2b00      	cmp	r3, #0
 8009812:	d1f0      	bne.n	80097f6 <vQueueAddToRegistry+0x1e>
    }
 8009814:	bd70      	pop	{r4, r5, r6, pc}
 8009816:	bf00      	nop
 8009818:	2006efb0 	.word	0x2006efb0

0800981c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

    void vQueueUnregisterQueue( QueueHandle_t xQueue )
    {
 800981c:	b510      	push	{r4, lr}
        UBaseType_t ux;

        configASSERT( xQueue );
 800981e:	b910      	cbnz	r0, 8009826 <vQueueUnregisterQueue+0xa>
 8009820:	f7ff fbe0 	bl	8008fe4 <ulSetInterruptMask>
 8009824:	e7fe      	b.n	8009824 <vQueueUnregisterQueue+0x8>

        /* See if the handle of the queue being unregistered in actually in the
         * registry. */
        for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009826:	2300      	movs	r3, #0
        {
            if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009828:	4a08      	ldr	r2, [pc, #32]	@ (800984c <vQueueUnregisterQueue+0x30>)
 800982a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800982e:	00dc      	lsls	r4, r3, #3
 8009830:	4288      	cmp	r0, r1
 8009832:	d106      	bne.n	8009842 <vQueueUnregisterQueue+0x26>
            {
                /* Set the name to NULL to show that this slot if free again. */
                xQueueRegistry[ ux ].pcQueueName = NULL;
 8009834:	2100      	movs	r1, #0
 8009836:	4a06      	ldr	r2, [pc, #24]	@ (8009850 <vQueueUnregisterQueue+0x34>)
 8009838:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

                /* Set the handle to NULL to ensure the same queue handle cannot
                 * appear in the registry twice if it is added, removed, then
                 * added again. */
                xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800983c:	4422      	add	r2, r4
 800983e:	6051      	str	r1, [r2, #4]
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
    } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009840:	bd10      	pop	{r4, pc}
        for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009842:	3301      	adds	r3, #1
 8009844:	2b08      	cmp	r3, #8
 8009846:	d1f0      	bne.n	800982a <vQueueUnregisterQueue+0xe>
 8009848:	e7fa      	b.n	8009840 <vQueueUnregisterQueue+0x24>
 800984a:	bf00      	nop
 800984c:	2006efb4 	.word	0x2006efb4
 8009850:	2006efb0 	.word	0x2006efb0

08009854 <vQueueDelete>:
{
 8009854:	b510      	push	{r4, lr}
    configASSERT( pxQueue );
 8009856:	4604      	mov	r4, r0
 8009858:	b910      	cbnz	r0, 8009860 <vQueueDelete+0xc>
 800985a:	f7ff fbc3 	bl	8008fe4 <ulSetInterruptMask>
 800985e:	e7fe      	b.n	800985e <vQueueDelete+0xa>
            vQueueUnregisterQueue( pxQueue );
 8009860:	f7ff ffdc 	bl	800981c <vQueueUnregisterQueue>
            if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8009864:	f894 3046 	ldrb.w	r3, [r4, #70]	@ 0x46
 8009868:	b923      	cbnz	r3, 8009874 <vQueueDelete+0x20>
                vPortFree( pxQueue );
 800986a:	4620      	mov	r0, r4
}
 800986c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                vPortFree( pxQueue );
 8009870:	f000 bfda 	b.w	800a828 <vPortFree>
}
 8009874:	bd10      	pop	{r4, pc}

08009876 <vQueueWaitForMessageRestricted>:
#if ( configUSE_TIMERS == 1 )

    void vQueueWaitForMessageRestricted( QueueHandle_t xQueue,
                                         TickType_t xTicksToWait,
                                         const BaseType_t xWaitIndefinitely )
    {
 8009876:	b570      	push	{r4, r5, r6, lr}
 8009878:	4604      	mov	r4, r0
 800987a:	460d      	mov	r5, r1
 800987c:	4616      	mov	r6, r2
         *  will not actually cause the task to block, just place it on a blocked
         *  list.  It will not block until the scheduler is unlocked - at which
         *  time a yield will be performed.  If an item is added to the queue while
         *  the queue is locked, and the calling task blocks on the queue, then the
         *  calling task will be immediately unblocked when the queue is unlocked. */
        prvLockQueue( pxQueue );
 800987e:	f7ff fad9 	bl	8008e34 <vPortEnterCritical>
 8009882:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009886:	2bff      	cmp	r3, #255	@ 0xff
 8009888:	bf04      	itt	eq
 800988a:	2300      	moveq	r3, #0
 800988c:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8009890:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8009894:	2bff      	cmp	r3, #255	@ 0xff
 8009896:	bf04      	itt	eq
 8009898:	2300      	moveq	r3, #0
 800989a:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 800989e:	f7ff fad7 	bl	8008e50 <vPortExitCritical>

        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80098a2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80098a4:	b92b      	cbnz	r3, 80098b2 <vQueueWaitForMessageRestricted+0x3c>
        {
            /* There is nothing in the queue, block for the specified period. */
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80098a6:	4632      	mov	r2, r6
 80098a8:	4629      	mov	r1, r5
 80098aa:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80098ae:	f000 fbd3 	bl	800a058 <vTaskPlaceOnEventListRestricted>
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }

        prvUnlockQueue( pxQueue );
 80098b2:	4620      	mov	r0, r4
    }
 80098b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        prvUnlockQueue( pxQueue );
 80098b8:	f7ff bc48 	b.w	800914c <prvUnlockQueue>

080098bc <prvAddNewTaskToReadyList>:
    }
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
{
 80098bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80098c0:	4604      	mov	r4, r0
    /* Ensure interrupts don't access the task lists while the lists are being
     * updated. */
    taskENTER_CRITICAL();
 80098c2:	f7ff fab7 	bl	8008e34 <vPortEnterCritical>
    {
        uxCurrentNumberOfTasks++;
 80098c6:	4b30      	ldr	r3, [pc, #192]	@ (8009988 <prvAddNewTaskToReadyList+0xcc>)

        if( pxCurrentTCB == NULL )
 80098c8:	4e30      	ldr	r6, [pc, #192]	@ (800998c <prvAddNewTaskToReadyList+0xd0>)
        uxCurrentNumberOfTasks++;
 80098ca:	681a      	ldr	r2, [r3, #0]
 80098cc:	4f30      	ldr	r7, [pc, #192]	@ (8009990 <prvAddNewTaskToReadyList+0xd4>)
 80098ce:	3201      	adds	r2, #1
 80098d0:	601a      	str	r2, [r3, #0]
        if( pxCurrentTCB == NULL )
 80098d2:	6835      	ldr	r5, [r6, #0]
 80098d4:	2d00      	cmp	r5, #0
 80098d6:	d14a      	bne.n	800996e <prvAddNewTaskToReadyList+0xb2>
        {
            /* There are no other tasks, or all the other tasks are in
             * the suspended state - make this the current task. */
            pxCurrentTCB = pxNewTCB;
 80098d8:	6034      	str	r4, [r6, #0]

            if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80098da:	681b      	ldr	r3, [r3, #0]
 80098dc:	2b01      	cmp	r3, #1
 80098de:	d11f      	bne.n	8009920 <prvAddNewTaskToReadyList+0x64>
 80098e0:	46b8      	mov	r8, r7
{
    UBaseType_t uxPriority;

    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    {
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80098e2:	4640      	mov	r0, r8
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80098e4:	3501      	adds	r5, #1
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80098e6:	f7ff fa3d 	bl	8008d64 <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80098ea:	2d38      	cmp	r5, #56	@ 0x38
 80098ec:	f108 0814 	add.w	r8, r8, #20
 80098f0:	d1f7      	bne.n	80098e2 <prvAddNewTaskToReadyList+0x26>
    }

    vListInitialise( &xDelayedTaskList1 );
 80098f2:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 80099b8 <prvAddNewTaskToReadyList+0xfc>
    vListInitialise( &xDelayedTaskList2 );
 80098f6:	4d27      	ldr	r5, [pc, #156]	@ (8009994 <prvAddNewTaskToReadyList+0xd8>)
    vListInitialise( &xDelayedTaskList1 );
 80098f8:	4640      	mov	r0, r8
 80098fa:	f7ff fa33 	bl	8008d64 <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
 80098fe:	4628      	mov	r0, r5
 8009900:	f7ff fa30 	bl	8008d64 <vListInitialise>
    vListInitialise( &xPendingReadyList );
 8009904:	4824      	ldr	r0, [pc, #144]	@ (8009998 <prvAddNewTaskToReadyList+0xdc>)
 8009906:	f7ff fa2d 	bl	8008d64 <vListInitialise>

    #if ( INCLUDE_vTaskDelete == 1 )
        {
            vListInitialise( &xTasksWaitingTermination );
 800990a:	4824      	ldr	r0, [pc, #144]	@ (800999c <prvAddNewTaskToReadyList+0xe0>)
 800990c:	f7ff fa2a 	bl	8008d64 <vListInitialise>
        }
    #endif /* INCLUDE_vTaskDelete */

    #if ( INCLUDE_vTaskSuspend == 1 )
        {
            vListInitialise( &xSuspendedTaskList );
 8009910:	4823      	ldr	r0, [pc, #140]	@ (80099a0 <prvAddNewTaskToReadyList+0xe4>)
 8009912:	f7ff fa27 	bl	8008d64 <vListInitialise>
        }
    #endif /* INCLUDE_vTaskSuspend */

    /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
     * using list2. */
    pxDelayedTaskList = &xDelayedTaskList1;
 8009916:	4b23      	ldr	r3, [pc, #140]	@ (80099a4 <prvAddNewTaskToReadyList+0xe8>)
 8009918:	f8c3 8000 	str.w	r8, [r3]
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800991c:	4b22      	ldr	r3, [pc, #136]	@ (80099a8 <prvAddNewTaskToReadyList+0xec>)
 800991e:	601d      	str	r5, [r3, #0]
        uxTaskNumber++;
 8009920:	4a22      	ldr	r2, [pc, #136]	@ (80099ac <prvAddNewTaskToReadyList+0xf0>)
        prvAddTaskToReadyList( pxNewTCB );
 8009922:	1d20      	adds	r0, r4, #4
        uxTaskNumber++;
 8009924:	6813      	ldr	r3, [r2, #0]
 8009926:	3301      	adds	r3, #1
 8009928:	6013      	str	r3, [r2, #0]
        prvAddTaskToReadyList( pxNewTCB );
 800992a:	4a21      	ldr	r2, [pc, #132]	@ (80099b0 <prvAddNewTaskToReadyList+0xf4>)
                pxNewTCB->uxTCBNumber = uxTaskNumber;
 800992c:	6463      	str	r3, [r4, #68]	@ 0x44
        prvAddTaskToReadyList( pxNewTCB );
 800992e:	6811      	ldr	r1, [r2, #0]
 8009930:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009932:	428b      	cmp	r3, r1
 8009934:	bf88      	it	hi
 8009936:	6013      	strhi	r3, [r2, #0]
 8009938:	2214      	movs	r2, #20
 800993a:	4353      	muls	r3, r2
 800993c:	18f9      	adds	r1, r7, r3
 800993e:	684a      	ldr	r2, [r1, #4]
 8009940:	6895      	ldr	r5, [r2, #8]
 8009942:	60a2      	str	r2, [r4, #8]
 8009944:	60e5      	str	r5, [r4, #12]
 8009946:	6068      	str	r0, [r5, #4]
 8009948:	6090      	str	r0, [r2, #8]
 800994a:	58fa      	ldr	r2, [r7, r3]
 800994c:	6161      	str	r1, [r4, #20]
 800994e:	3201      	adds	r2, #1
 8009950:	50fa      	str	r2, [r7, r3]
    taskEXIT_CRITICAL();
 8009952:	f7ff fa7d 	bl	8008e50 <vPortExitCritical>
    if( xSchedulerRunning != pdFALSE )
 8009956:	4b17      	ldr	r3, [pc, #92]	@ (80099b4 <prvAddNewTaskToReadyList+0xf8>)
 8009958:	681b      	ldr	r3, [r3, #0]
 800995a:	b19b      	cbz	r3, 8009984 <prvAddNewTaskToReadyList+0xc8>
        if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800995c:	6833      	ldr	r3, [r6, #0]
 800995e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009960:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009962:	429a      	cmp	r2, r3
 8009964:	d20e      	bcs.n	8009984 <prvAddNewTaskToReadyList+0xc8>
}
 8009966:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            taskYIELD_IF_USING_PREEMPTION();
 800996a:	f7ff ba57 	b.w	8008e1c <vPortYield>
            if( xSchedulerRunning == pdFALSE )
 800996e:	4b11      	ldr	r3, [pc, #68]	@ (80099b4 <prvAddNewTaskToReadyList+0xf8>)
 8009970:	681a      	ldr	r2, [r3, #0]
                if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009972:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
            if( xSchedulerRunning == pdFALSE )
 8009974:	2a00      	cmp	r2, #0
 8009976:	d1d3      	bne.n	8009920 <prvAddNewTaskToReadyList+0x64>
                if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009978:	6832      	ldr	r2, [r6, #0]
 800997a:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800997c:	429a      	cmp	r2, r3
                    pxCurrentTCB = pxNewTCB;
 800997e:	bf98      	it	ls
 8009980:	6034      	strls	r4, [r6, #0]
 8009982:	e7cd      	b.n	8009920 <prvAddNewTaskToReadyList+0x64>
}
 8009984:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009988:	2006f014 	.word	0x2006f014
 800998c:	2006f4e8 	.word	0x2006f4e8
 8009990:	2006f088 	.word	0x2006f088
 8009994:	2006f060 	.word	0x2006f060
 8009998:	2006f044 	.word	0x2006f044
 800999c:	2006f030 	.word	0x2006f030
 80099a0:	2006f018 	.word	0x2006f018
 80099a4:	2006f05c 	.word	0x2006f05c
 80099a8:	2006f058 	.word	0x2006f058
 80099ac:	2006eff8 	.word	0x2006eff8
 80099b0:	2006f00c 	.word	0x2006f00c
 80099b4:	2006f008 	.word	0x2006f008
 80099b8:	2006f074 	.word	0x2006f074

080099bc <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
 80099bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80099be:	4606      	mov	r6, r0
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
 80099c0:	4b1a      	ldr	r3, [pc, #104]	@ (8009a2c <prvAddCurrentTaskToDelayedList+0x70>)
        }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099c2:	4c1b      	ldr	r4, [pc, #108]	@ (8009a30 <prvAddCurrentTaskToDelayedList+0x74>)
    const TickType_t xConstTickCount = xTickCount;
 80099c4:	681d      	ldr	r5, [r3, #0]
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099c6:	6820      	ldr	r0, [r4, #0]
{
 80099c8:	460f      	mov	r7, r1
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099ca:	3004      	adds	r0, #4
 80099cc:	f7ff f9ef 	bl	8008dae <uxListRemove>
        mtCOVERAGE_TEST_MARKER();
    }

    #if ( INCLUDE_vTaskSuspend == 1 )
        {
            if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80099d0:	1c73      	adds	r3, r6, #1
 80099d2:	d113      	bne.n	80099fc <prvAddCurrentTaskToDelayedList+0x40>
 80099d4:	b197      	cbz	r7, 80099fc <prvAddCurrentTaskToDelayedList+0x40>
            {
                /* Add the task to the suspended task list instead of a delayed task
                 * list to ensure it is not woken by a timing event.  It will block
                 * indefinitely. */
                listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099d6:	4b17      	ldr	r3, [pc, #92]	@ (8009a34 <prvAddCurrentTaskToDelayedList+0x78>)
 80099d8:	6821      	ldr	r1, [r4, #0]
 80099da:	685a      	ldr	r2, [r3, #4]
 80099dc:	608a      	str	r2, [r1, #8]
 80099de:	6890      	ldr	r0, [r2, #8]
 80099e0:	6821      	ldr	r1, [r4, #0]
 80099e2:	60c8      	str	r0, [r1, #12]
 80099e4:	6821      	ldr	r1, [r4, #0]
 80099e6:	3104      	adds	r1, #4
 80099e8:	6041      	str	r1, [r0, #4]
 80099ea:	6821      	ldr	r1, [r4, #0]
 80099ec:	3104      	adds	r1, #4
 80099ee:	6091      	str	r1, [r2, #8]
 80099f0:	6822      	ldr	r2, [r4, #0]
 80099f2:	6153      	str	r3, [r2, #20]
 80099f4:	681a      	ldr	r2, [r3, #0]
 80099f6:	3201      	adds	r2, #1
 80099f8:	601a      	str	r2, [r3, #0]

            /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
            ( void ) xCanBlockIndefinitely;
        }
    #endif /* INCLUDE_vTaskSuspend */
}
 80099fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80099fc:	6823      	ldr	r3, [r4, #0]
 80099fe:	19ad      	adds	r5, r5, r6
 8009a00:	605d      	str	r5, [r3, #4]
                if( xTimeToWake < xConstTickCount )
 8009a02:	d307      	bcc.n	8009a14 <prvAddCurrentTaskToDelayedList+0x58>
                    vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a04:	4b0c      	ldr	r3, [pc, #48]	@ (8009a38 <prvAddCurrentTaskToDelayedList+0x7c>)
 8009a06:	6818      	ldr	r0, [r3, #0]
 8009a08:	6821      	ldr	r1, [r4, #0]
}
 8009a0a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
                    vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a0e:	3104      	adds	r1, #4
 8009a10:	f7ff b9b6 	b.w	8008d80 <vListInsert>
                    vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a14:	4b09      	ldr	r3, [pc, #36]	@ (8009a3c <prvAddCurrentTaskToDelayedList+0x80>)
 8009a16:	6818      	ldr	r0, [r3, #0]
 8009a18:	6821      	ldr	r1, [r4, #0]
 8009a1a:	3104      	adds	r1, #4
 8009a1c:	f7ff f9b0 	bl	8008d80 <vListInsert>
                    if( xTimeToWake < xNextTaskUnblockTime )
 8009a20:	4b07      	ldr	r3, [pc, #28]	@ (8009a40 <prvAddCurrentTaskToDelayedList+0x84>)
 8009a22:	681a      	ldr	r2, [r3, #0]
 8009a24:	42aa      	cmp	r2, r5
                        xNextTaskUnblockTime = xTimeToWake;
 8009a26:	bf88      	it	hi
 8009a28:	601d      	strhi	r5, [r3, #0]
}
 8009a2a:	e7e6      	b.n	80099fa <prvAddCurrentTaskToDelayedList+0x3e>
 8009a2c:	2006f010 	.word	0x2006f010
 8009a30:	2006f4e8 	.word	0x2006f4e8
 8009a34:	2006f018 	.word	0x2006f018
 8009a38:	2006f058 	.word	0x2006f058
 8009a3c:	2006f05c 	.word	0x2006f05c
 8009a40:	2006eff4 	.word	0x2006eff4

08009a44 <prvResetNextTaskUnblockTime>:
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009a44:	4a06      	ldr	r2, [pc, #24]	@ (8009a60 <prvResetNextTaskUnblockTime+0x1c>)
 8009a46:	6813      	ldr	r3, [r2, #0]
 8009a48:	6819      	ldr	r1, [r3, #0]
 8009a4a:	4b06      	ldr	r3, [pc, #24]	@ (8009a64 <prvResetNextTaskUnblockTime+0x20>)
 8009a4c:	b919      	cbnz	r1, 8009a56 <prvResetNextTaskUnblockTime+0x12>
        xNextTaskUnblockTime = portMAX_DELAY;
 8009a4e:	f04f 32ff 	mov.w	r2, #4294967295
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 8009a52:	601a      	str	r2, [r3, #0]
}
 8009a54:	4770      	bx	lr
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 8009a56:	6812      	ldr	r2, [r2, #0]
 8009a58:	68d2      	ldr	r2, [r2, #12]
 8009a5a:	6812      	ldr	r2, [r2, #0]
 8009a5c:	e7f9      	b.n	8009a52 <prvResetNextTaskUnblockTime+0xe>
 8009a5e:	bf00      	nop
 8009a60:	2006f05c 	.word	0x2006f05c
 8009a64:	2006eff4 	.word	0x2006eff4

08009a68 <prvDeleteTCB>:
    {
 8009a68:	b510      	push	{r4, lr}
                if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009a6a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
    {
 8009a6e:	4604      	mov	r4, r0
                if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009a70:	b93b      	cbnz	r3, 8009a82 <prvDeleteTCB+0x1a>
                    vPortFreeStack( pxTCB->pxStack );
 8009a72:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8009a74:	f000 fed8 	bl	800a828 <vPortFree>
                    vPortFree( pxTCB );
 8009a78:	4620      	mov	r0, r4
    }
 8009a7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                    vPortFree( pxTCB );
 8009a7e:	f000 bed3 	b.w	800a828 <vPortFree>
                else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009a82:	2b01      	cmp	r3, #1
 8009a84:	d0f9      	beq.n	8009a7a <prvDeleteTCB+0x12>
                    configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB );
 8009a86:	2b02      	cmp	r3, #2
 8009a88:	d002      	beq.n	8009a90 <prvDeleteTCB+0x28>
 8009a8a:	f7ff faab 	bl	8008fe4 <ulSetInterruptMask>
 8009a8e:	e7fe      	b.n	8009a8e <prvDeleteTCB+0x26>
    }
 8009a90:	bd10      	pop	{r4, pc}
	...

08009a94 <prvIdleTask>:
{
 8009a94:	b580      	push	{r7, lr}
            while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009a96:	4c10      	ldr	r4, [pc, #64]	@ (8009ad8 <prvIdleTask+0x44>)
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a98:	4f10      	ldr	r7, [pc, #64]	@ (8009adc <prvIdleTask+0x48>)
                    --uxCurrentNumberOfTasks;
 8009a9a:	4d11      	ldr	r5, [pc, #68]	@ (8009ae0 <prvIdleTask+0x4c>)
            while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009a9c:	6823      	ldr	r3, [r4, #0]
 8009a9e:	b943      	cbnz	r3, 8009ab2 <prvIdleTask+0x1e>
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009aa0:	4b10      	ldr	r3, [pc, #64]	@ (8009ae4 <prvIdleTask+0x50>)
 8009aa2:	681b      	ldr	r3, [r3, #0]
 8009aa4:	2b01      	cmp	r3, #1
 8009aa6:	d901      	bls.n	8009aac <prvIdleTask+0x18>
                    taskYIELD();
 8009aa8:	f7ff f9b8 	bl	8008e1c <vPortYield>
                vApplicationIdleHook();
 8009aac:	f7f6 fc0e 	bl	80002cc <vApplicationIdleHook>
        prvCheckTasksWaitingTermination();
 8009ab0:	e7f3      	b.n	8009a9a <prvIdleTask+0x6>
                taskENTER_CRITICAL();
 8009ab2:	f7ff f9bf 	bl	8008e34 <vPortEnterCritical>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ab6:	68fb      	ldr	r3, [r7, #12]
 8009ab8:	68de      	ldr	r6, [r3, #12]
                    ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009aba:	1d30      	adds	r0, r6, #4
 8009abc:	f7ff f977 	bl	8008dae <uxListRemove>
                    --uxCurrentNumberOfTasks;
 8009ac0:	682b      	ldr	r3, [r5, #0]
 8009ac2:	3b01      	subs	r3, #1
 8009ac4:	602b      	str	r3, [r5, #0]
                    --uxDeletedTasksWaitingCleanUp;
 8009ac6:	6823      	ldr	r3, [r4, #0]
 8009ac8:	3b01      	subs	r3, #1
 8009aca:	6023      	str	r3, [r4, #0]
                taskEXIT_CRITICAL();
 8009acc:	f7ff f9c0 	bl	8008e50 <vPortExitCritical>
                prvDeleteTCB( pxTCB );
 8009ad0:	4630      	mov	r0, r6
 8009ad2:	f7ff ffc9 	bl	8009a68 <prvDeleteTCB>
 8009ad6:	e7e1      	b.n	8009a9c <prvIdleTask+0x8>
 8009ad8:	2006f02c 	.word	0x2006f02c
 8009adc:	2006f030 	.word	0x2006f030
 8009ae0:	2006f014 	.word	0x2006f014
 8009ae4:	2006f088 	.word	0x2006f088

08009ae8 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009ae8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009aec:	460d      	mov	r5, r1
 8009aee:	e9dd 7a0a 	ldrd	r7, sl, [sp, #40]	@ 0x28
 8009af2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009af4:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009af6:	4680      	mov	r8, r0
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009af8:	4632      	mov	r2, r6
 8009afa:	21a5      	movs	r1, #165	@ 0xa5
 8009afc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009afe:	4699      	mov	r9, r3
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b00:	f028 fec9 	bl	8032896 <memset>
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b04:	f8d4 b030 	ldr.w	fp, [r4, #48]	@ 0x30
    if( pcName != NULL )
 8009b08:	b195      	cbz	r5, 8009b30 <prvInitialiseNewTask.constprop.0+0x48>
 8009b0a:	1e6b      	subs	r3, r5, #1
 8009b0c:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8009b10:	350f      	adds	r5, #15
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009b12:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009b16:	f802 1f01 	strb.w	r1, [r2, #1]!
            if( pcName[ x ] == ( char ) 0x00 )
 8009b1a:	b109      	cbz	r1, 8009b20 <prvInitialiseNewTask.constprop.0+0x38>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009b1c:	42ab      	cmp	r3, r5
 8009b1e:	d1f8      	bne.n	8009b12 <prvInitialiseNewTask.constprop.0+0x2a>
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009b20:	2300      	movs	r3, #0
 8009b22:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
    configASSERT( uxPriority < configMAX_PRIORITIES );
 8009b26:	2f37      	cmp	r7, #55	@ 0x37
 8009b28:	d905      	bls.n	8009b36 <prvInitialiseNewTask.constprop.0+0x4e>
 8009b2a:	f7ff fa5b 	bl	8008fe4 <ulSetInterruptMask>
 8009b2e:	e7fe      	b.n	8009b2e <prvInitialiseNewTask.constprop.0+0x46>
        pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009b30:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8009b34:	e7f7      	b.n	8009b26 <prvInitialiseNewTask.constprop.0+0x3e>
            pxNewTCB->uxMutexesHeld = 0;
 8009b36:	2500      	movs	r5, #0
    pxNewTCB->uxPriority = uxPriority;
 8009b38:	62e7      	str	r7, [r4, #44]	@ 0x2c
            pxNewTCB->uxBasePriority = uxPriority;
 8009b3a:	64e7      	str	r7, [r4, #76]	@ 0x4c
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b3c:	1d20      	adds	r0, r4, #4
            pxNewTCB->uxMutexesHeld = 0;
 8009b3e:	6525      	str	r5, [r4, #80]	@ 0x50
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b40:	f7ff f91b 	bl	8008d7a <vListInitialiseItem>
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b44:	3e04      	subs	r6, #4
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009b46:	f104 0018 	add.w	r0, r4, #24
 8009b4a:	f7ff f916 	bl	8008d7a <vListInitialiseItem>
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b4e:	f1c7 0738 	rsb	r7, r7, #56	@ 0x38
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b52:	eb0b 0006 	add.w	r0, fp, r6
                            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
 8009b56:	464b      	mov	r3, r9
 8009b58:	4642      	mov	r2, r8
 8009b5a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009b5c:	6124      	str	r4, [r4, #16]
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b5e:	61a7      	str	r7, [r4, #24]
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009b60:	6264      	str	r4, [r4, #36]	@ 0x24
            pxNewTCB->pxTaskTag = NULL;
 8009b62:	6565      	str	r5, [r4, #84]	@ 0x54
            memset( ( void * ) &( pxNewTCB->ulNotifiedValue[ 0 ] ), 0x00, sizeof( pxNewTCB->ulNotifiedValue ) );
 8009b64:	65a5      	str	r5, [r4, #88]	@ 0x58
            memset( ( void * ) &( pxNewTCB->ucNotifyState[ 0 ] ), 0x00, sizeof( pxNewTCB->ucNotifyState ) );
 8009b66:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
                            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
 8009b6a:	f020 0007 	bic.w	r0, r0, #7
 8009b6e:	f7ff f9b1 	bl	8008ed4 <pxPortInitialiseStack>
 8009b72:	6020      	str	r0, [r4, #0]
    if( pxCreatedTask != NULL )
 8009b74:	f1ba 0f00 	cmp.w	sl, #0
 8009b78:	d001      	beq.n	8009b7e <prvInitialiseNewTask.constprop.0+0x96>
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009b7a:	f8ca 4000 	str.w	r4, [sl]
}
 8009b7e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009b82 <xTaskCreateStatic>:
    {
 8009b82:	b570      	push	{r4, r5, r6, lr}
 8009b84:	b086      	sub	sp, #24
 8009b86:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
        configASSERT( puxStackBuffer != NULL );
 8009b8a:	b915      	cbnz	r5, 8009b92 <xTaskCreateStatic+0x10>
 8009b8c:	f7ff fa2a 	bl	8008fe4 <ulSetInterruptMask>
 8009b90:	e7fe      	b.n	8009b90 <xTaskCreateStatic+0xe>
        configASSERT( pxTaskBuffer != NULL );
 8009b92:	b914      	cbnz	r4, 8009b9a <xTaskCreateStatic+0x18>
 8009b94:	f7ff fa26 	bl	8008fe4 <ulSetInterruptMask>
 8009b98:	e7fe      	b.n	8009b98 <xTaskCreateStatic+0x16>
                volatile size_t xSize = sizeof( StaticTask_t );
 8009b9a:	2660      	movs	r6, #96	@ 0x60
 8009b9c:	9605      	str	r6, [sp, #20]
                configASSERT( xSize == sizeof( TCB_t ) );
 8009b9e:	9e05      	ldr	r6, [sp, #20]
 8009ba0:	2e60      	cmp	r6, #96	@ 0x60
 8009ba2:	d002      	beq.n	8009baa <xTaskCreateStatic+0x28>
 8009ba4:	f7ff fa1e 	bl	8008fe4 <ulSetInterruptMask>
 8009ba8:	e7fe      	b.n	8009ba8 <xTaskCreateStatic+0x26>
            pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009baa:	6325      	str	r5, [r4, #48]	@ 0x30
                    pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009bac:	2502      	movs	r5, #2
 8009bae:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
            prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009bb2:	ad04      	add	r5, sp, #16
 8009bb4:	9501      	str	r5, [sp, #4]
 8009bb6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8009bb8:	9402      	str	r4, [sp, #8]
 8009bba:	9500      	str	r5, [sp, #0]
                ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009bbc:	9e05      	ldr	r6, [sp, #20]
            prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009bbe:	f7ff ff93 	bl	8009ae8 <prvInitialiseNewTask.constprop.0>
            prvAddNewTaskToReadyList( pxNewTCB );
 8009bc2:	4620      	mov	r0, r4
 8009bc4:	f7ff fe7a 	bl	80098bc <prvAddNewTaskToReadyList>
    }
 8009bc8:	9804      	ldr	r0, [sp, #16]
 8009bca:	b006      	add	sp, #24
 8009bcc:	bd70      	pop	{r4, r5, r6, pc}

08009bce <xTaskCreate>:
    {
 8009bce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009bd2:	4607      	mov	r7, r0
 8009bd4:	b085      	sub	sp, #20
                pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009bd6:	0090      	lsls	r0, r2, #2
    {
 8009bd8:	4688      	mov	r8, r1
 8009bda:	4616      	mov	r6, r2
 8009bdc:	4699      	mov	r9, r3
                pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009bde:	f000 fd93 	bl	800a708 <pvPortMalloc>
                if( pxStack != NULL )
 8009be2:	4605      	mov	r5, r0
 8009be4:	b920      	cbnz	r0, 8009bf0 <xTaskCreate+0x22>
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009be6:	f04f 30ff 	mov.w	r0, #4294967295
    }
 8009bea:	b005      	add	sp, #20
 8009bec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                    pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009bf0:	2060      	movs	r0, #96	@ 0x60
 8009bf2:	f000 fd89 	bl	800a708 <pvPortMalloc>
                    if( pxNewTCB != NULL )
 8009bf6:	4604      	mov	r4, r0
 8009bf8:	b198      	cbz	r0, 8009c22 <xTaskCreate+0x54>
                    pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009bfa:	2300      	movs	r3, #0
 8009bfc:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
            prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c00:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
                        pxNewTCB->pxStack = pxStack;
 8009c02:	6305      	str	r5, [r0, #48]	@ 0x30
            prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c04:	9301      	str	r3, [sp, #4]
 8009c06:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009c08:	4632      	mov	r2, r6
 8009c0a:	4641      	mov	r1, r8
 8009c0c:	9002      	str	r0, [sp, #8]
 8009c0e:	9300      	str	r3, [sp, #0]
 8009c10:	4638      	mov	r0, r7
 8009c12:	464b      	mov	r3, r9
 8009c14:	f7ff ff68 	bl	8009ae8 <prvInitialiseNewTask.constprop.0>
            prvAddNewTaskToReadyList( pxNewTCB );
 8009c18:	4620      	mov	r0, r4
 8009c1a:	f7ff fe4f 	bl	80098bc <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
 8009c1e:	2001      	movs	r0, #1
 8009c20:	e7e3      	b.n	8009bea <xTaskCreate+0x1c>
                        vPortFreeStack( pxStack );
 8009c22:	4628      	mov	r0, r5
 8009c24:	f000 fe00 	bl	800a828 <vPortFree>
        if( pxNewTCB != NULL )
 8009c28:	e7dd      	b.n	8009be6 <xTaskCreate+0x18>
	...

08009c2c <vTaskSuspendAll>:
    ++uxSchedulerSuspended;
 8009c2c:	4a02      	ldr	r2, [pc, #8]	@ (8009c38 <vTaskSuspendAll+0xc>)
 8009c2e:	6813      	ldr	r3, [r2, #0]
 8009c30:	3301      	adds	r3, #1
 8009c32:	6013      	str	r3, [r2, #0]
}
 8009c34:	4770      	bx	lr
 8009c36:	bf00      	nop
 8009c38:	2006eff0 	.word	0x2006eff0

08009c3c <xTaskGetTickCount>:
        xTicks = xTickCount;
 8009c3c:	4b01      	ldr	r3, [pc, #4]	@ (8009c44 <xTaskGetTickCount+0x8>)
 8009c3e:	6818      	ldr	r0, [r3, #0]
}
 8009c40:	4770      	bx	lr
 8009c42:	bf00      	nop
 8009c44:	2006f010 	.word	0x2006f010

08009c48 <xTaskIncrementTick>:
{
 8009c48:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009c4c:	4b4b      	ldr	r3, [pc, #300]	@ (8009d7c <xTaskIncrementTick+0x134>)
 8009c4e:	681b      	ldr	r3, [r3, #0]
 8009c50:	2b00      	cmp	r3, #0
 8009c52:	f040 808d 	bne.w	8009d70 <xTaskIncrementTick+0x128>
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009c56:	4b4a      	ldr	r3, [pc, #296]	@ (8009d80 <xTaskIncrementTick+0x138>)
 8009c58:	681c      	ldr	r4, [r3, #0]
 8009c5a:	3401      	adds	r4, #1
        xTickCount = xConstTickCount;
 8009c5c:	601c      	str	r4, [r3, #0]
        if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009c5e:	b98c      	cbnz	r4, 8009c84 <xTaskIncrementTick+0x3c>
            taskSWITCH_DELAYED_LISTS();
 8009c60:	4b48      	ldr	r3, [pc, #288]	@ (8009d84 <xTaskIncrementTick+0x13c>)
 8009c62:	681a      	ldr	r2, [r3, #0]
 8009c64:	6812      	ldr	r2, [r2, #0]
 8009c66:	b112      	cbz	r2, 8009c6e <xTaskIncrementTick+0x26>
 8009c68:	f7ff f9bc 	bl	8008fe4 <ulSetInterruptMask>
 8009c6c:	e7fe      	b.n	8009c6c <xTaskIncrementTick+0x24>
 8009c6e:	4a46      	ldr	r2, [pc, #280]	@ (8009d88 <xTaskIncrementTick+0x140>)
 8009c70:	6819      	ldr	r1, [r3, #0]
 8009c72:	6810      	ldr	r0, [r2, #0]
 8009c74:	6018      	str	r0, [r3, #0]
 8009c76:	6011      	str	r1, [r2, #0]
 8009c78:	4a44      	ldr	r2, [pc, #272]	@ (8009d8c <xTaskIncrementTick+0x144>)
 8009c7a:	6813      	ldr	r3, [r2, #0]
 8009c7c:	3301      	adds	r3, #1
 8009c7e:	6013      	str	r3, [r2, #0]
 8009c80:	f7ff fee0 	bl	8009a44 <prvResetNextTaskUnblockTime>
        if( xConstTickCount >= xNextTaskUnblockTime )
 8009c84:	f8df c114 	ldr.w	ip, [pc, #276]	@ 8009d9c <xTaskIncrementTick+0x154>
    BaseType_t xSwitchRequired = pdFALSE;
 8009c88:	2000      	movs	r0, #0
        if( xConstTickCount >= xNextTaskUnblockTime )
 8009c8a:	f8dc 3000 	ldr.w	r3, [ip]
 8009c8e:	4a40      	ldr	r2, [pc, #256]	@ (8009d90 <xTaskIncrementTick+0x148>)
 8009c90:	429c      	cmp	r4, r3
 8009c92:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 8009da0 <xTaskIncrementTick+0x158>
 8009c96:	d20f      	bcs.n	8009cb8 <xTaskIncrementTick+0x70>
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009c98:	2114      	movs	r1, #20
 8009c9a:	f8d8 3000 	ldr.w	r3, [r8]
 8009c9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009ca0:	434b      	muls	r3, r1
 8009ca2:	58d3      	ldr	r3, [r2, r3]
                    xSwitchRequired = pdTRUE;
 8009ca4:	2b02      	cmp	r3, #2
                if( xYieldPending != pdFALSE )
 8009ca6:	4b3b      	ldr	r3, [pc, #236]	@ (8009d94 <xTaskIncrementTick+0x14c>)
                    xSwitchRequired = pdTRUE;
 8009ca8:	bf28      	it	cs
 8009caa:	2001      	movcs	r0, #1
                if( xYieldPending != pdFALSE )
 8009cac:	681b      	ldr	r3, [r3, #0]
                    xSwitchRequired = pdTRUE;
 8009cae:	2b00      	cmp	r3, #0
 8009cb0:	bf18      	it	ne
 8009cb2:	2001      	movne	r0, #1
}
 8009cb4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009cb8:	f8df e0c8 	ldr.w	lr, [pc, #200]	@ 8009d84 <xTaskIncrementTick+0x13c>
                    prvAddTaskToReadyList( pxTCB );
 8009cbc:	f8df 90e4 	ldr.w	r9, [pc, #228]	@ 8009da4 <xTaskIncrementTick+0x15c>
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009cc0:	f8de 3000 	ldr.w	r3, [lr]
 8009cc4:	681b      	ldr	r3, [r3, #0]
 8009cc6:	b923      	cbnz	r3, 8009cd2 <xTaskIncrementTick+0x8a>
                    xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009cc8:	f04f 33ff 	mov.w	r3, #4294967295
 8009ccc:	f8cc 3000 	str.w	r3, [ip]
                    break;
 8009cd0:	e7e2      	b.n	8009c98 <xTaskIncrementTick+0x50>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009cd2:	f8de 3000 	ldr.w	r3, [lr]
 8009cd6:	68db      	ldr	r3, [r3, #12]
 8009cd8:	68db      	ldr	r3, [r3, #12]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009cda:	6859      	ldr	r1, [r3, #4]
                    if( xConstTickCount < xItemValue )
 8009cdc:	428c      	cmp	r4, r1
 8009cde:	d202      	bcs.n	8009ce6 <xTaskIncrementTick+0x9e>
                        xNextTaskUnblockTime = xItemValue;
 8009ce0:	f8cc 1000 	str.w	r1, [ip]
                        break; /*lint !e9011 Code structure here is deemed easier to understand with multiple breaks. */
 8009ce4:	e7d8      	b.n	8009c98 <xTaskIncrementTick+0x50>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 8009ce6:	695d      	ldr	r5, [r3, #20]
 8009ce8:	e9d3 1602 	ldrd	r1, r6, [r3, #8]
 8009cec:	608e      	str	r6, [r1, #8]
 8009cee:	6071      	str	r1, [r6, #4]
 8009cf0:	6869      	ldr	r1, [r5, #4]
 8009cf2:	1d1f      	adds	r7, r3, #4
 8009cf4:	42b9      	cmp	r1, r7
 8009cf6:	f04f 0100 	mov.w	r1, #0
 8009cfa:	bf08      	it	eq
 8009cfc:	606e      	streq	r6, [r5, #4]
 8009cfe:	6159      	str	r1, [r3, #20]
 8009d00:	6829      	ldr	r1, [r5, #0]
 8009d02:	3901      	subs	r1, #1
 8009d04:	6029      	str	r1, [r5, #0]
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009d06:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
 8009d08:	b17d      	cbz	r5, 8009d2a <xTaskIncrementTick+0xe2>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 8009d0a:	e9d3 1607 	ldrd	r1, r6, [r3, #28]
 8009d0e:	608e      	str	r6, [r1, #8]
 8009d10:	6071      	str	r1, [r6, #4]
 8009d12:	6869      	ldr	r1, [r5, #4]
 8009d14:	f103 0a18 	add.w	sl, r3, #24
 8009d18:	4551      	cmp	r1, sl
 8009d1a:	f04f 0100 	mov.w	r1, #0
 8009d1e:	bf08      	it	eq
 8009d20:	606e      	streq	r6, [r5, #4]
 8009d22:	6299      	str	r1, [r3, #40]	@ 0x28
 8009d24:	6829      	ldr	r1, [r5, #0]
 8009d26:	3901      	subs	r1, #1
 8009d28:	6029      	str	r1, [r5, #0]
                    prvAddTaskToReadyList( pxTCB );
 8009d2a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8009d2c:	f8d9 5000 	ldr.w	r5, [r9]
 8009d30:	42a9      	cmp	r1, r5
 8009d32:	f04f 0514 	mov.w	r5, #20
 8009d36:	fb05 f501 	mul.w	r5, r5, r1
 8009d3a:	eb02 0a05 	add.w	sl, r2, r5
 8009d3e:	f8da 6004 	ldr.w	r6, [sl, #4]
 8009d42:	bf88      	it	hi
 8009d44:	f8c9 1000 	strhi.w	r1, [r9]
 8009d48:	f8d6 b008 	ldr.w	fp, [r6, #8]
 8009d4c:	609e      	str	r6, [r3, #8]
 8009d4e:	f8c3 b00c 	str.w	fp, [r3, #12]
 8009d52:	f8cb 7004 	str.w	r7, [fp, #4]
 8009d56:	60b7      	str	r7, [r6, #8]
 8009d58:	f8c3 a014 	str.w	sl, [r3, #20]
 8009d5c:	5953      	ldr	r3, [r2, r5]
 8009d5e:	3301      	adds	r3, #1
 8009d60:	5153      	str	r3, [r2, r5]
                            if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009d62:	f8d8 3000 	ldr.w	r3, [r8]
 8009d66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
                                xSwitchRequired = pdTRUE;
 8009d68:	4299      	cmp	r1, r3
 8009d6a:	bf28      	it	cs
 8009d6c:	2001      	movcs	r0, #1
 8009d6e:	e7a7      	b.n	8009cc0 <xTaskIncrementTick+0x78>
        ++xPendedTicks;
 8009d70:	4a09      	ldr	r2, [pc, #36]	@ (8009d98 <xTaskIncrementTick+0x150>)
    BaseType_t xSwitchRequired = pdFALSE;
 8009d72:	2000      	movs	r0, #0
        ++xPendedTicks;
 8009d74:	6813      	ldr	r3, [r2, #0]
 8009d76:	3301      	adds	r3, #1
 8009d78:	6013      	str	r3, [r2, #0]
 8009d7a:	e79b      	b.n	8009cb4 <xTaskIncrementTick+0x6c>
 8009d7c:	2006eff0 	.word	0x2006eff0
 8009d80:	2006f010 	.word	0x2006f010
 8009d84:	2006f05c 	.word	0x2006f05c
 8009d88:	2006f058 	.word	0x2006f058
 8009d8c:	2006effc 	.word	0x2006effc
 8009d90:	2006f088 	.word	0x2006f088
 8009d94:	2006f000 	.word	0x2006f000
 8009d98:	2006f004 	.word	0x2006f004
 8009d9c:	2006eff4 	.word	0x2006eff4
 8009da0:	2006f4e8 	.word	0x2006f4e8
 8009da4:	2006f00c 	.word	0x2006f00c

08009da8 <xTaskResumeAll>:
{
 8009da8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    configASSERT( uxSchedulerSuspended );
 8009dac:	4c3d      	ldr	r4, [pc, #244]	@ (8009ea4 <xTaskResumeAll+0xfc>)
 8009dae:	6823      	ldr	r3, [r4, #0]
 8009db0:	b913      	cbnz	r3, 8009db8 <xTaskResumeAll+0x10>
 8009db2:	f7ff f917 	bl	8008fe4 <ulSetInterruptMask>
 8009db6:	e7fe      	b.n	8009db6 <xTaskResumeAll+0xe>
    taskENTER_CRITICAL();
 8009db8:	f7ff f83c 	bl	8008e34 <vPortEnterCritical>
        --uxSchedulerSuspended;
 8009dbc:	6823      	ldr	r3, [r4, #0]
 8009dbe:	3b01      	subs	r3, #1
 8009dc0:	6023      	str	r3, [r4, #0]
        if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009dc2:	6823      	ldr	r3, [r4, #0]
 8009dc4:	b12b      	cbz	r3, 8009dd2 <xTaskResumeAll+0x2a>
    BaseType_t xAlreadyYielded = pdFALSE;
 8009dc6:	2400      	movs	r4, #0
    taskEXIT_CRITICAL();
 8009dc8:	f7ff f842 	bl	8008e50 <vPortExitCritical>
}
 8009dcc:	4620      	mov	r0, r4
 8009dce:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
            if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009dd2:	4a35      	ldr	r2, [pc, #212]	@ (8009ea8 <xTaskResumeAll+0x100>)
 8009dd4:	6812      	ldr	r2, [r2, #0]
 8009dd6:	2a00      	cmp	r2, #0
 8009dd8:	d0f5      	beq.n	8009dc6 <xTaskResumeAll+0x1e>
                    prvAddTaskToReadyList( pxTCB );
 8009dda:	f04f 0c14 	mov.w	ip, #20
                        xYieldPending = pdTRUE;
 8009dde:	f04f 0901 	mov.w	r9, #1
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009de2:	4e32      	ldr	r6, [pc, #200]	@ (8009eac <xTaskResumeAll+0x104>)
                    prvAddTaskToReadyList( pxTCB );
 8009de4:	4f32      	ldr	r7, [pc, #200]	@ (8009eb0 <xTaskResumeAll+0x108>)
 8009de6:	4933      	ldr	r1, [pc, #204]	@ (8009eb4 <xTaskResumeAll+0x10c>)
                    if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009de8:	f8df e0d4 	ldr.w	lr, [pc, #212]	@ 8009ec0 <xTaskResumeAll+0x118>
                        xYieldPending = pdTRUE;
 8009dec:	f8df 80cc 	ldr.w	r8, [pc, #204]	@ 8009ebc <xTaskResumeAll+0x114>
 8009df0:	e03e      	b.n	8009e70 <xTaskResumeAll+0xc8>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009df2:	68f3      	ldr	r3, [r6, #12]
 8009df4:	68db      	ldr	r3, [r3, #12]
                    listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 8009df6:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 8009df8:	e9d3 2407 	ldrd	r2, r4, [r3, #28]
 8009dfc:	6094      	str	r4, [r2, #8]
 8009dfe:	6062      	str	r2, [r4, #4]
 8009e00:	6842      	ldr	r2, [r0, #4]
 8009e02:	f103 0518 	add.w	r5, r3, #24
 8009e06:	42aa      	cmp	r2, r5
 8009e08:	f04f 0200 	mov.w	r2, #0
 8009e0c:	bf08      	it	eq
 8009e0e:	6044      	streq	r4, [r0, #4]
 8009e10:	629a      	str	r2, [r3, #40]	@ 0x28
 8009e12:	6802      	ldr	r2, [r0, #0]
 8009e14:	3a01      	subs	r2, #1
 8009e16:	6002      	str	r2, [r0, #0]
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 8009e18:	6958      	ldr	r0, [r3, #20]
 8009e1a:	e9d3 2402 	ldrd	r2, r4, [r3, #8]
 8009e1e:	6094      	str	r4, [r2, #8]
 8009e20:	6062      	str	r2, [r4, #4]
 8009e22:	6842      	ldr	r2, [r0, #4]
 8009e24:	1d1d      	adds	r5, r3, #4
 8009e26:	42aa      	cmp	r2, r5
 8009e28:	6802      	ldr	r2, [r0, #0]
 8009e2a:	bf08      	it	eq
 8009e2c:	6044      	streq	r4, [r0, #4]
 8009e2e:	3a01      	subs	r2, #1
 8009e30:	6002      	str	r2, [r0, #0]
                    prvAddTaskToReadyList( pxTCB );
 8009e32:	6838      	ldr	r0, [r7, #0]
 8009e34:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009e36:	4282      	cmp	r2, r0
 8009e38:	fb0c f002 	mul.w	r0, ip, r2
 8009e3c:	eb01 0a00 	add.w	sl, r1, r0
 8009e40:	f8da 4004 	ldr.w	r4, [sl, #4]
 8009e44:	bf88      	it	hi
 8009e46:	603a      	strhi	r2, [r7, #0]
 8009e48:	f8d4 b008 	ldr.w	fp, [r4, #8]
 8009e4c:	609c      	str	r4, [r3, #8]
 8009e4e:	f8c3 b00c 	str.w	fp, [r3, #12]
 8009e52:	f8cb 5004 	str.w	r5, [fp, #4]
 8009e56:	60a5      	str	r5, [r4, #8]
 8009e58:	580c      	ldr	r4, [r1, r0]
 8009e5a:	f8c3 a014 	str.w	sl, [r3, #20]
 8009e5e:	3401      	adds	r4, #1
 8009e60:	500c      	str	r4, [r1, r0]
                    if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009e62:	f8de 0000 	ldr.w	r0, [lr]
 8009e66:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8009e68:	4282      	cmp	r2, r0
 8009e6a:	d301      	bcc.n	8009e70 <xTaskResumeAll+0xc8>
                        xYieldPending = pdTRUE;
 8009e6c:	f8c8 9000 	str.w	r9, [r8]
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009e70:	6832      	ldr	r2, [r6, #0]
 8009e72:	2a00      	cmp	r2, #0
 8009e74:	d1bd      	bne.n	8009df2 <xTaskResumeAll+0x4a>
                if( pxTCB != NULL )
 8009e76:	b10b      	cbz	r3, 8009e7c <xTaskResumeAll+0xd4>
                    prvResetNextTaskUnblockTime();
 8009e78:	f7ff fde4 	bl	8009a44 <prvResetNextTaskUnblockTime>
                    TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8009e7c:	4d0e      	ldr	r5, [pc, #56]	@ (8009eb8 <xTaskResumeAll+0x110>)
 8009e7e:	682c      	ldr	r4, [r5, #0]
                    if( xPendedCounts > ( TickType_t ) 0U )
 8009e80:	b144      	cbz	r4, 8009e94 <xTaskResumeAll+0xec>
                                xYieldPending = pdTRUE;
 8009e82:	2701      	movs	r7, #1
 8009e84:	4e0d      	ldr	r6, [pc, #52]	@ (8009ebc <xTaskResumeAll+0x114>)
                            if( xTaskIncrementTick() != pdFALSE )
 8009e86:	f7ff fedf 	bl	8009c48 <xTaskIncrementTick>
 8009e8a:	b100      	cbz	r0, 8009e8e <xTaskResumeAll+0xe6>
                                xYieldPending = pdTRUE;
 8009e8c:	6037      	str	r7, [r6, #0]
                        } while( xPendedCounts > ( TickType_t ) 0U );
 8009e8e:	3c01      	subs	r4, #1
 8009e90:	d1f9      	bne.n	8009e86 <xTaskResumeAll+0xde>
                        xPendedTicks = 0;
 8009e92:	602c      	str	r4, [r5, #0]
                if( xYieldPending != pdFALSE )
 8009e94:	4b09      	ldr	r3, [pc, #36]	@ (8009ebc <xTaskResumeAll+0x114>)
 8009e96:	681b      	ldr	r3, [r3, #0]
 8009e98:	2b00      	cmp	r3, #0
 8009e9a:	d094      	beq.n	8009dc6 <xTaskResumeAll+0x1e>
                    taskYIELD_IF_USING_PREEMPTION();
 8009e9c:	f7fe ffbe 	bl	8008e1c <vPortYield>
                            xAlreadyYielded = pdTRUE;
 8009ea0:	2401      	movs	r4, #1
 8009ea2:	e791      	b.n	8009dc8 <xTaskResumeAll+0x20>
 8009ea4:	2006eff0 	.word	0x2006eff0
 8009ea8:	2006f014 	.word	0x2006f014
 8009eac:	2006f044 	.word	0x2006f044
 8009eb0:	2006f00c 	.word	0x2006f00c
 8009eb4:	2006f088 	.word	0x2006f088
 8009eb8:	2006f004 	.word	0x2006f004
 8009ebc:	2006f000 	.word	0x2006f000
 8009ec0:	2006f4e8 	.word	0x2006f4e8

08009ec4 <vTaskDelay>:
    {
 8009ec4:	b508      	push	{r3, lr}
        if( xTicksToDelay > ( TickType_t ) 0U )
 8009ec6:	b918      	cbnz	r0, 8009ed0 <vTaskDelay+0xc>
    }
 8009ec8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            portYIELD_WITHIN_API();
 8009ecc:	f7fe bfa6 	b.w	8008e1c <vPortYield>
            configASSERT( uxSchedulerSuspended == 0 );
 8009ed0:	4b07      	ldr	r3, [pc, #28]	@ (8009ef0 <vTaskDelay+0x2c>)
 8009ed2:	6819      	ldr	r1, [r3, #0]
 8009ed4:	b111      	cbz	r1, 8009edc <vTaskDelay+0x18>
 8009ed6:	f7ff f885 	bl	8008fe4 <ulSetInterruptMask>
 8009eda:	e7fe      	b.n	8009eda <vTaskDelay+0x16>
            vTaskSuspendAll();
 8009edc:	f7ff fea6 	bl	8009c2c <vTaskSuspendAll>
                prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009ee0:	f7ff fd6c 	bl	80099bc <prvAddCurrentTaskToDelayedList>
            xAlreadyYielded = xTaskResumeAll();
 8009ee4:	f7ff ff60 	bl	8009da8 <xTaskResumeAll>
        if( xAlreadyYielded == pdFALSE )
 8009ee8:	2800      	cmp	r0, #0
 8009eea:	d0ed      	beq.n	8009ec8 <vTaskDelay+0x4>
    }
 8009eec:	bd08      	pop	{r3, pc}
 8009eee:	bf00      	nop
 8009ef0:	2006eff0 	.word	0x2006eff0

08009ef4 <vTaskSetApplicationTaskTag>:
    {
 8009ef4:	b538      	push	{r3, r4, r5, lr}
 8009ef6:	460d      	mov	r5, r1
        if( xTask == NULL )
 8009ef8:	4604      	mov	r4, r0
 8009efa:	b908      	cbnz	r0, 8009f00 <vTaskSetApplicationTaskTag+0xc>
            xTCB = ( TCB_t * ) pxCurrentTCB;
 8009efc:	4b04      	ldr	r3, [pc, #16]	@ (8009f10 <vTaskSetApplicationTaskTag+0x1c>)
 8009efe:	681c      	ldr	r4, [r3, #0]
        taskENTER_CRITICAL();
 8009f00:	f7fe ff98 	bl	8008e34 <vPortEnterCritical>
            xTCB->pxTaskTag = pxHookFunction;
 8009f04:	6565      	str	r5, [r4, #84]	@ 0x54
    }
 8009f06:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        taskEXIT_CRITICAL();
 8009f0a:	f7fe bfa1 	b.w	8008e50 <vPortExitCritical>
 8009f0e:	bf00      	nop
 8009f10:	2006f4e8 	.word	0x2006f4e8

08009f14 <xTaskCallApplicationTaskHook>:
    {
 8009f14:	4603      	mov	r3, r0
 8009f16:	4608      	mov	r0, r1
        if( xTask == NULL )
 8009f18:	b90b      	cbnz	r3, 8009f1e <xTaskCallApplicationTaskHook+0xa>
            xTCB = pxCurrentTCB;
 8009f1a:	4b03      	ldr	r3, [pc, #12]	@ (8009f28 <xTaskCallApplicationTaskHook+0x14>)
 8009f1c:	681b      	ldr	r3, [r3, #0]
        if( xTCB->pxTaskTag != NULL )
 8009f1e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009f20:	b103      	cbz	r3, 8009f24 <xTaskCallApplicationTaskHook+0x10>
            xReturn = xTCB->pxTaskTag( pvParameter );
 8009f22:	4718      	bx	r3
    }
 8009f24:	4618      	mov	r0, r3
 8009f26:	4770      	bx	lr
 8009f28:	2006f4e8 	.word	0x2006f4e8

08009f2c <vTaskStartScheduler>:
{
 8009f2c:	b530      	push	{r4, r5, lr}
            StaticTask_t * pxIdleTaskTCBBuffer = NULL;
 8009f2e:	2400      	movs	r4, #0
{
 8009f30:	b089      	sub	sp, #36	@ 0x24
            vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009f32:	aa07      	add	r2, sp, #28
 8009f34:	a906      	add	r1, sp, #24
 8009f36:	a805      	add	r0, sp, #20
            StackType_t * pxIdleTaskStackBuffer = NULL;
 8009f38:	e9cd 4405 	strd	r4, r4, [sp, #20]
            vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009f3c:	f7fe fefa 	bl	8008d34 <vApplicationGetIdleTaskMemory>
            xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
 8009f40:	9b05      	ldr	r3, [sp, #20]
 8009f42:	9a07      	ldr	r2, [sp, #28]
 8009f44:	9302      	str	r3, [sp, #8]
 8009f46:	9b06      	ldr	r3, [sp, #24]
 8009f48:	4913      	ldr	r1, [pc, #76]	@ (8009f98 <vTaskStartScheduler+0x6c>)
 8009f4a:	e9cd 4300 	strd	r4, r3, [sp]
 8009f4e:	4813      	ldr	r0, [pc, #76]	@ (8009f9c <vTaskStartScheduler+0x70>)
 8009f50:	4623      	mov	r3, r4
 8009f52:	f7ff fe16 	bl	8009b82 <xTaskCreateStatic>
            if( xIdleTaskHandle != NULL )
 8009f56:	b1a8      	cbz	r0, 8009f84 <vTaskStartScheduler+0x58>
                xReturn = xTimerCreateTimerTask();
 8009f58:	f000 fb84 	bl	800a664 <xTimerCreateTimerTask>
    if( xReturn == pdPASS )
 8009f5c:	2801      	cmp	r0, #1
                xReturn = xTimerCreateTimerTask();
 8009f5e:	4605      	mov	r5, r0
    if( xReturn == pdPASS )
 8009f60:	d114      	bne.n	8009f8c <vTaskStartScheduler+0x60>
        portDISABLE_INTERRUPTS();
 8009f62:	f7ff f83f 	bl	8008fe4 <ulSetInterruptMask>
        xNextTaskUnblockTime = portMAX_DELAY;
 8009f66:	f04f 32ff 	mov.w	r2, #4294967295
 8009f6a:	4b0d      	ldr	r3, [pc, #52]	@ (8009fa0 <vTaskStartScheduler+0x74>)
        traceTASK_SWITCHED_IN();
 8009f6c:	4621      	mov	r1, r4
        xNextTaskUnblockTime = portMAX_DELAY;
 8009f6e:	601a      	str	r2, [r3, #0]
        xSchedulerRunning = pdTRUE;
 8009f70:	4b0c      	ldr	r3, [pc, #48]	@ (8009fa4 <vTaskStartScheduler+0x78>)
 8009f72:	601d      	str	r5, [r3, #0]
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009f74:	4b0c      	ldr	r3, [pc, #48]	@ (8009fa8 <vTaskStartScheduler+0x7c>)
 8009f76:	601c      	str	r4, [r3, #0]
        traceTASK_SWITCHED_IN();
 8009f78:	4b0c      	ldr	r3, [pc, #48]	@ (8009fac <vTaskStartScheduler+0x80>)
 8009f7a:	6818      	ldr	r0, [r3, #0]
 8009f7c:	f7ff ffca 	bl	8009f14 <xTaskCallApplicationTaskHook>
        if( xPortStartScheduler() != pdFALSE )
 8009f80:	f7fe ffe0 	bl	8008f44 <xPortStartScheduler>
    ( void ) uxTopUsedPriority;
 8009f84:	4b0a      	ldr	r3, [pc, #40]	@ (8009fb0 <vTaskStartScheduler+0x84>)
 8009f86:	681b      	ldr	r3, [r3, #0]
}
 8009f88:	b009      	add	sp, #36	@ 0x24
 8009f8a:	bd30      	pop	{r4, r5, pc}
        configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009f8c:	3501      	adds	r5, #1
 8009f8e:	d1f9      	bne.n	8009f84 <vTaskStartScheduler+0x58>
 8009f90:	f7ff f828 	bl	8008fe4 <ulSetInterruptMask>
 8009f94:	e7fe      	b.n	8009f94 <vTaskStartScheduler+0x68>
 8009f96:	bf00      	nop
 8009f98:	08035878 	.word	0x08035878
 8009f9c:	08009a95 	.word	0x08009a95
 8009fa0:	2006eff4 	.word	0x2006eff4
 8009fa4:	2006f008 	.word	0x2006f008
 8009fa8:	2006f010 	.word	0x2006f010
 8009fac:	2006f4e8 	.word	0x2006f4e8
 8009fb0:	2000005c 	.word	0x2000005c

08009fb4 <vTaskSwitchContext>:
{
 8009fb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009fb6:	4b19      	ldr	r3, [pc, #100]	@ (800a01c <vTaskSwitchContext+0x68>)
 8009fb8:	681a      	ldr	r2, [r3, #0]
 8009fba:	4b19      	ldr	r3, [pc, #100]	@ (800a020 <vTaskSwitchContext+0x6c>)
 8009fbc:	b112      	cbz	r2, 8009fc4 <vTaskSwitchContext+0x10>
        xYieldPending = pdTRUE;
 8009fbe:	2201      	movs	r2, #1
 8009fc0:	601a      	str	r2, [r3, #0]
}
 8009fc2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fc4:	2714      	movs	r7, #20
        traceTASK_SWITCHED_OUT();
 8009fc6:	4c17      	ldr	r4, [pc, #92]	@ (800a024 <vTaskSwitchContext+0x70>)
        xYieldPending = pdFALSE;
 8009fc8:	601a      	str	r2, [r3, #0]
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fca:	4e17      	ldr	r6, [pc, #92]	@ (800a028 <vTaskSwitchContext+0x74>)
        traceTASK_SWITCHED_OUT();
 8009fcc:	2101      	movs	r1, #1
 8009fce:	6820      	ldr	r0, [r4, #0]
 8009fd0:	f7ff ffa0 	bl	8009f14 <xTaskCallApplicationTaskHook>
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fd4:	6832      	ldr	r2, [r6, #0]
 8009fd6:	4915      	ldr	r1, [pc, #84]	@ (800a02c <vTaskSwitchContext+0x78>)
 8009fd8:	fb07 f302 	mul.w	r3, r7, r2
 8009fdc:	58cd      	ldr	r5, [r1, r3]
 8009fde:	18c8      	adds	r0, r1, r3
 8009fe0:	b1b5      	cbz	r5, 800a010 <vTaskSwitchContext+0x5c>
 8009fe2:	6845      	ldr	r5, [r0, #4]
 8009fe4:	3308      	adds	r3, #8
 8009fe6:	686d      	ldr	r5, [r5, #4]
 8009fe8:	440b      	add	r3, r1
 8009fea:	429d      	cmp	r5, r3
 8009fec:	bf08      	it	eq
 8009fee:	686b      	ldreq	r3, [r5, #4]
 8009ff0:	6045      	str	r5, [r0, #4]
 8009ff2:	bf08      	it	eq
 8009ff4:	6043      	streq	r3, [r0, #4]
 8009ff6:	2314      	movs	r3, #20
 8009ff8:	fb03 1102 	mla	r1, r3, r2, r1
 8009ffc:	684b      	ldr	r3, [r1, #4]
        traceTASK_SWITCHED_IN();
 8009ffe:	2100      	movs	r1, #0
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a000:	68db      	ldr	r3, [r3, #12]
 800a002:	6023      	str	r3, [r4, #0]
 800a004:	6032      	str	r2, [r6, #0]
        traceTASK_SWITCHED_IN();
 800a006:	6820      	ldr	r0, [r4, #0]
}
 800a008:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
        traceTASK_SWITCHED_IN();
 800a00c:	f7ff bf82 	b.w	8009f14 <xTaskCallApplicationTaskHook>
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a010:	b912      	cbnz	r2, 800a018 <vTaskSwitchContext+0x64>
 800a012:	f7fe ffe7 	bl	8008fe4 <ulSetInterruptMask>
 800a016:	e7fe      	b.n	800a016 <vTaskSwitchContext+0x62>
 800a018:	3a01      	subs	r2, #1
 800a01a:	e7dd      	b.n	8009fd8 <vTaskSwitchContext+0x24>
 800a01c:	2006eff0 	.word	0x2006eff0
 800a020:	2006f000 	.word	0x2006f000
 800a024:	2006f4e8 	.word	0x2006f4e8
 800a028:	2006f00c 	.word	0x2006f00c
 800a02c:	2006f088 	.word	0x2006f088

0800a030 <vTaskPlaceOnEventList>:
{
 800a030:	b510      	push	{r4, lr}
 800a032:	460c      	mov	r4, r1
    configASSERT( pxEventList );
 800a034:	b910      	cbnz	r0, 800a03c <vTaskPlaceOnEventList+0xc>
 800a036:	f7fe ffd5 	bl	8008fe4 <ulSetInterruptMask>
 800a03a:	e7fe      	b.n	800a03a <vTaskPlaceOnEventList+0xa>
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a03c:	4b05      	ldr	r3, [pc, #20]	@ (800a054 <vTaskPlaceOnEventList+0x24>)
 800a03e:	6819      	ldr	r1, [r3, #0]
 800a040:	3118      	adds	r1, #24
 800a042:	f7fe fe9d 	bl	8008d80 <vListInsert>
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a046:	4620      	mov	r0, r4
}
 800a048:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a04c:	2101      	movs	r1, #1
 800a04e:	f7ff bcb5 	b.w	80099bc <prvAddCurrentTaskToDelayedList>
 800a052:	bf00      	nop
 800a054:	2006f4e8 	.word	0x2006f4e8

0800a058 <vTaskPlaceOnEventListRestricted>:
    {
 800a058:	b570      	push	{r4, r5, r6, lr}
 800a05a:	460c      	mov	r4, r1
 800a05c:	4611      	mov	r1, r2
        configASSERT( pxEventList );
 800a05e:	b910      	cbnz	r0, 800a066 <vTaskPlaceOnEventListRestricted+0xe>
 800a060:	f7fe ffc0 	bl	8008fe4 <ulSetInterruptMask>
 800a064:	e7fe      	b.n	800a064 <vTaskPlaceOnEventListRestricted+0xc>
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a066:	4b0f      	ldr	r3, [pc, #60]	@ (800a0a4 <vTaskPlaceOnEventListRestricted+0x4c>)
 800a068:	6842      	ldr	r2, [r0, #4]
 800a06a:	681d      	ldr	r5, [r3, #0]
 800a06c:	6896      	ldr	r6, [r2, #8]
 800a06e:	61ea      	str	r2, [r5, #28]
 800a070:	681d      	ldr	r5, [r3, #0]
            xTicksToWait = portMAX_DELAY;
 800a072:	2900      	cmp	r1, #0
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a074:	622e      	str	r6, [r5, #32]
 800a076:	681d      	ldr	r5, [r3, #0]
 800a078:	f105 0518 	add.w	r5, r5, #24
 800a07c:	6075      	str	r5, [r6, #4]
 800a07e:	681d      	ldr	r5, [r3, #0]
 800a080:	681b      	ldr	r3, [r3, #0]
 800a082:	f105 0518 	add.w	r5, r5, #24
 800a086:	6095      	str	r5, [r2, #8]
 800a088:	6298      	str	r0, [r3, #40]	@ 0x28
 800a08a:	6803      	ldr	r3, [r0, #0]
 800a08c:	f103 0301 	add.w	r3, r3, #1
 800a090:	6003      	str	r3, [r0, #0]
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a092:	bf08      	it	eq
 800a094:	4620      	moveq	r0, r4
    }
 800a096:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a09a:	bf18      	it	ne
 800a09c:	f04f 30ff 	movne.w	r0, #4294967295
 800a0a0:	f7ff bc8c 	b.w	80099bc <prvAddCurrentTaskToDelayedList>
 800a0a4:	2006f4e8 	.word	0x2006f4e8

0800a0a8 <xTaskRemoveFromEventList>:
{
 800a0a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0aa:	68c3      	ldr	r3, [r0, #12]
 800a0ac:	68db      	ldr	r3, [r3, #12]
    configASSERT( pxUnblockedTCB );
 800a0ae:	b913      	cbnz	r3, 800a0b6 <xTaskRemoveFromEventList+0xe>
 800a0b0:	f7fe ff98 	bl	8008fe4 <ulSetInterruptMask>
 800a0b4:	e7fe      	b.n	800a0b4 <xTaskRemoveFromEventList+0xc>
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 800a0b6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800a0b8:	e9d3 0107 	ldrd	r0, r1, [r3, #28]
 800a0bc:	6081      	str	r1, [r0, #8]
 800a0be:	6048      	str	r0, [r1, #4]
 800a0c0:	6850      	ldr	r0, [r2, #4]
 800a0c2:	f103 0418 	add.w	r4, r3, #24
 800a0c6:	42a0      	cmp	r0, r4
 800a0c8:	bf08      	it	eq
 800a0ca:	6051      	streq	r1, [r2, #4]
 800a0cc:	2100      	movs	r1, #0
 800a0ce:	6299      	str	r1, [r3, #40]	@ 0x28
 800a0d0:	6811      	ldr	r1, [r2, #0]
 800a0d2:	3901      	subs	r1, #1
 800a0d4:	6011      	str	r1, [r2, #0]
    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a0d6:	4a1d      	ldr	r2, [pc, #116]	@ (800a14c <xTaskRemoveFromEventList+0xa4>)
 800a0d8:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800a0da:	6812      	ldr	r2, [r2, #0]
 800a0dc:	2a00      	cmp	r2, #0
 800a0de:	d129      	bne.n	800a134 <xTaskRemoveFromEventList+0x8c>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
 800a0e0:	e9d3 4002 	ldrd	r4, r0, [r3, #8]
 800a0e4:	695a      	ldr	r2, [r3, #20]
 800a0e6:	60a0      	str	r0, [r4, #8]
 800a0e8:	6044      	str	r4, [r0, #4]
 800a0ea:	6854      	ldr	r4, [r2, #4]
 800a0ec:	1d1d      	adds	r5, r3, #4
 800a0ee:	42ac      	cmp	r4, r5
 800a0f0:	bf08      	it	eq
 800a0f2:	6050      	streq	r0, [r2, #4]
 800a0f4:	6810      	ldr	r0, [r2, #0]
 800a0f6:	3801      	subs	r0, #1
 800a0f8:	6010      	str	r0, [r2, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
 800a0fa:	4a15      	ldr	r2, [pc, #84]	@ (800a150 <xTaskRemoveFromEventList+0xa8>)
 800a0fc:	6810      	ldr	r0, [r2, #0]
 800a0fe:	4281      	cmp	r1, r0
 800a100:	bf88      	it	hi
 800a102:	6011      	strhi	r1, [r2, #0]
 800a104:	2214      	movs	r2, #20
 800a106:	434a      	muls	r2, r1
 800a108:	4812      	ldr	r0, [pc, #72]	@ (800a154 <xTaskRemoveFromEventList+0xac>)
 800a10a:	1886      	adds	r6, r0, r2
 800a10c:	6874      	ldr	r4, [r6, #4]
 800a10e:	68a7      	ldr	r7, [r4, #8]
 800a110:	609c      	str	r4, [r3, #8]
 800a112:	60df      	str	r7, [r3, #12]
 800a114:	607d      	str	r5, [r7, #4]
 800a116:	60a5      	str	r5, [r4, #8]
 800a118:	615e      	str	r6, [r3, #20]
 800a11a:	5883      	ldr	r3, [r0, r2]
 800a11c:	3301      	adds	r3, #1
 800a11e:	5083      	str	r3, [r0, r2]
    if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a120:	4b0d      	ldr	r3, [pc, #52]	@ (800a158 <xTaskRemoveFromEventList+0xb0>)
 800a122:	681b      	ldr	r3, [r3, #0]
 800a124:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a126:	4299      	cmp	r1, r3
        xYieldPending = pdTRUE;
 800a128:	bf85      	ittet	hi
 800a12a:	2001      	movhi	r0, #1
 800a12c:	4b0b      	ldrhi	r3, [pc, #44]	@ (800a15c <xTaskRemoveFromEventList+0xb4>)
        xReturn = pdFALSE;
 800a12e:	2000      	movls	r0, #0
        xYieldPending = pdTRUE;
 800a130:	6018      	strhi	r0, [r3, #0]
}
 800a132:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a134:	4a0a      	ldr	r2, [pc, #40]	@ (800a160 <xTaskRemoveFromEventList+0xb8>)
 800a136:	6850      	ldr	r0, [r2, #4]
 800a138:	6885      	ldr	r5, [r0, #8]
 800a13a:	61d8      	str	r0, [r3, #28]
 800a13c:	621d      	str	r5, [r3, #32]
 800a13e:	606c      	str	r4, [r5, #4]
 800a140:	6084      	str	r4, [r0, #8]
 800a142:	629a      	str	r2, [r3, #40]	@ 0x28
 800a144:	6813      	ldr	r3, [r2, #0]
 800a146:	3301      	adds	r3, #1
 800a148:	6013      	str	r3, [r2, #0]
 800a14a:	e7e9      	b.n	800a120 <xTaskRemoveFromEventList+0x78>
 800a14c:	2006eff0 	.word	0x2006eff0
 800a150:	2006f00c 	.word	0x2006f00c
 800a154:	2006f088 	.word	0x2006f088
 800a158:	2006f4e8 	.word	0x2006f4e8
 800a15c:	2006f000 	.word	0x2006f000
 800a160:	2006f044 	.word	0x2006f044

0800a164 <vTaskInternalSetTimeOutState>:
    pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a164:	4b03      	ldr	r3, [pc, #12]	@ (800a174 <vTaskInternalSetTimeOutState+0x10>)
 800a166:	681b      	ldr	r3, [r3, #0]
 800a168:	6003      	str	r3, [r0, #0]
    pxTimeOut->xTimeOnEntering = xTickCount;
 800a16a:	4b03      	ldr	r3, [pc, #12]	@ (800a178 <vTaskInternalSetTimeOutState+0x14>)
 800a16c:	681b      	ldr	r3, [r3, #0]
 800a16e:	6043      	str	r3, [r0, #4]
}
 800a170:	4770      	bx	lr
 800a172:	bf00      	nop
 800a174:	2006effc 	.word	0x2006effc
 800a178:	2006f010 	.word	0x2006f010

0800a17c <xTaskCheckForTimeOut>:
{
 800a17c:	b570      	push	{r4, r5, r6, lr}
 800a17e:	460d      	mov	r5, r1
    configASSERT( pxTimeOut );
 800a180:	4604      	mov	r4, r0
 800a182:	b910      	cbnz	r0, 800a18a <xTaskCheckForTimeOut+0xe>
 800a184:	f7fe ff2e 	bl	8008fe4 <ulSetInterruptMask>
 800a188:	e7fe      	b.n	800a188 <xTaskCheckForTimeOut+0xc>
    configASSERT( pxTicksToWait );
 800a18a:	b911      	cbnz	r1, 800a192 <xTaskCheckForTimeOut+0x16>
 800a18c:	f7fe ff2a 	bl	8008fe4 <ulSetInterruptMask>
 800a190:	e7fe      	b.n	800a190 <xTaskCheckForTimeOut+0x14>
    taskENTER_CRITICAL();
 800a192:	f7fe fe4f 	bl	8008e34 <vPortEnterCritical>
        const TickType_t xConstTickCount = xTickCount;
 800a196:	4b0f      	ldr	r3, [pc, #60]	@ (800a1d4 <xTaskCheckForTimeOut+0x58>)
 800a198:	6819      	ldr	r1, [r3, #0]
            if( *pxTicksToWait == portMAX_DELAY )
 800a19a:	682b      	ldr	r3, [r5, #0]
 800a19c:	1c5a      	adds	r2, r3, #1
 800a19e:	d017      	beq.n	800a1d0 <xTaskCheckForTimeOut+0x54>
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a1a0:	480d      	ldr	r0, [pc, #52]	@ (800a1d8 <xTaskCheckForTimeOut+0x5c>)
 800a1a2:	6826      	ldr	r6, [r4, #0]
 800a1a4:	6800      	ldr	r0, [r0, #0]
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a1a6:	6862      	ldr	r2, [r4, #4]
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a1a8:	4286      	cmp	r6, r0
 800a1aa:	d008      	beq.n	800a1be <xTaskCheckForTimeOut+0x42>
 800a1ac:	428a      	cmp	r2, r1
 800a1ae:	d806      	bhi.n	800a1be <xTaskCheckForTimeOut+0x42>
            *pxTicksToWait = ( TickType_t ) 0;
 800a1b0:	2300      	movs	r3, #0
            xReturn = pdTRUE;
 800a1b2:	2401      	movs	r4, #1
            *pxTicksToWait = ( TickType_t ) 0;
 800a1b4:	602b      	str	r3, [r5, #0]
    taskEXIT_CRITICAL();
 800a1b6:	f7fe fe4b 	bl	8008e50 <vPortExitCritical>
}
 800a1ba:	4620      	mov	r0, r4
 800a1bc:	bd70      	pop	{r4, r5, r6, pc}
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a1be:	1a88      	subs	r0, r1, r2
        else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a1c0:	4283      	cmp	r3, r0
 800a1c2:	d9f5      	bls.n	800a1b0 <xTaskCheckForTimeOut+0x34>
            *pxTicksToWait -= xElapsedTime;
 800a1c4:	1a5b      	subs	r3, r3, r1
 800a1c6:	4413      	add	r3, r2
            vTaskInternalSetTimeOutState( pxTimeOut );
 800a1c8:	4620      	mov	r0, r4
            *pxTicksToWait -= xElapsedTime;
 800a1ca:	602b      	str	r3, [r5, #0]
            vTaskInternalSetTimeOutState( pxTimeOut );
 800a1cc:	f7ff ffca 	bl	800a164 <vTaskInternalSetTimeOutState>
                xReturn = pdFALSE;
 800a1d0:	2400      	movs	r4, #0
 800a1d2:	e7f0      	b.n	800a1b6 <xTaskCheckForTimeOut+0x3a>
 800a1d4:	2006f010 	.word	0x2006f010
 800a1d8:	2006effc 	.word	0x2006effc

0800a1dc <vTaskMissedYield>:
    xYieldPending = pdTRUE;
 800a1dc:	2201      	movs	r2, #1
 800a1de:	4b01      	ldr	r3, [pc, #4]	@ (800a1e4 <vTaskMissedYield+0x8>)
 800a1e0:	601a      	str	r2, [r3, #0]
}
 800a1e2:	4770      	bx	lr
 800a1e4:	2006f000 	.word	0x2006f000

0800a1e8 <xTaskGetSchedulerState>:
        if( xSchedulerRunning == pdFALSE )
 800a1e8:	4b05      	ldr	r3, [pc, #20]	@ (800a200 <xTaskGetSchedulerState+0x18>)
 800a1ea:	681b      	ldr	r3, [r3, #0]
 800a1ec:	b133      	cbz	r3, 800a1fc <xTaskGetSchedulerState+0x14>
            if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a1ee:	4b05      	ldr	r3, [pc, #20]	@ (800a204 <xTaskGetSchedulerState+0x1c>)
 800a1f0:	6818      	ldr	r0, [r3, #0]
 800a1f2:	fab0 f080 	clz	r0, r0
 800a1f6:	0940      	lsrs	r0, r0, #5
 800a1f8:	0040      	lsls	r0, r0, #1
 800a1fa:	4770      	bx	lr
            xReturn = taskSCHEDULER_NOT_STARTED;
 800a1fc:	2001      	movs	r0, #1
    }
 800a1fe:	4770      	bx	lr
 800a200:	2006f008 	.word	0x2006f008
 800a204:	2006eff0 	.word	0x2006eff0

0800a208 <xTaskPriorityInherit>:
    {
 800a208:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if( pxMutexHolder != NULL )
 800a20a:	4604      	mov	r4, r0
 800a20c:	2800      	cmp	r0, #0
 800a20e:	d02e      	beq.n	800a26e <xTaskPriorityInherit+0x66>
            if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a210:	4d1d      	ldr	r5, [pc, #116]	@ (800a288 <xTaskPriorityInherit+0x80>)
 800a212:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a214:	682a      	ldr	r2, [r5, #0]
 800a216:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800a218:	4293      	cmp	r3, r2
 800a21a:	d22d      	bcs.n	800a278 <xTaskPriorityInherit+0x70>
                if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a21c:	6982      	ldr	r2, [r0, #24]
                if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a21e:	4e1b      	ldr	r6, [pc, #108]	@ (800a28c <xTaskPriorityInherit+0x84>)
                if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a220:	2a00      	cmp	r2, #0
                    listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a222:	bfa1      	itttt	ge
 800a224:	682a      	ldrge	r2, [r5, #0]
 800a226:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800a228:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800a22c:	6182      	strge	r2, [r0, #24]
                if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a22e:	2214      	movs	r2, #20
 800a230:	fb02 6303 	mla	r3, r2, r3, r6
 800a234:	6942      	ldr	r2, [r0, #20]
 800a236:	429a      	cmp	r2, r3
 800a238:	d11a      	bne.n	800a270 <xTaskPriorityInherit+0x68>
                    if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a23a:	1d07      	adds	r7, r0, #4
 800a23c:	4638      	mov	r0, r7
 800a23e:	f7fe fdb6 	bl	8008dae <uxListRemove>
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a242:	682b      	ldr	r3, [r5, #0]
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a244:	4a12      	ldr	r2, [pc, #72]	@ (800a290 <xTaskPriorityInherit+0x88>)
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a246:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a248:	6811      	ldr	r1, [r2, #0]
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a24a:	62e3      	str	r3, [r4, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a24c:	428b      	cmp	r3, r1
 800a24e:	bf88      	it	hi
 800a250:	6013      	strhi	r3, [r2, #0]
 800a252:	2214      	movs	r2, #20
 800a254:	4353      	muls	r3, r2
 800a256:	18f1      	adds	r1, r6, r3
 800a258:	684a      	ldr	r2, [r1, #4]
 800a25a:	6890      	ldr	r0, [r2, #8]
 800a25c:	60a2      	str	r2, [r4, #8]
 800a25e:	60e0      	str	r0, [r4, #12]
 800a260:	6047      	str	r7, [r0, #4]
 800a262:	6097      	str	r7, [r2, #8]
 800a264:	58f2      	ldr	r2, [r6, r3]
 800a266:	6161      	str	r1, [r4, #20]
 800a268:	3201      	adds	r2, #1
 800a26a:	50f2      	str	r2, [r6, r3]
                xReturn = pdTRUE;
 800a26c:	2001      	movs	r0, #1
    }
 800a26e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a270:	682b      	ldr	r3, [r5, #0]
 800a272:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a274:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800a276:	e7f9      	b.n	800a26c <xTaskPriorityInherit+0x64>
                if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a278:	682b      	ldr	r3, [r5, #0]
 800a27a:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800a27c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a27e:	4298      	cmp	r0, r3
 800a280:	bf2c      	ite	cs
 800a282:	2000      	movcs	r0, #0
 800a284:	2001      	movcc	r0, #1
 800a286:	e7f2      	b.n	800a26e <xTaskPriorityInherit+0x66>
 800a288:	2006f4e8 	.word	0x2006f4e8
 800a28c:	2006f088 	.word	0x2006f088
 800a290:	2006f00c 	.word	0x2006f00c

0800a294 <xTaskPriorityDisinherit>:
    {
 800a294:	b570      	push	{r4, r5, r6, lr}
        if( pxMutexHolder != NULL )
 800a296:	4604      	mov	r4, r0
 800a298:	b908      	cbnz	r0, 800a29e <xTaskPriorityDisinherit+0xa>
        BaseType_t xReturn = pdFALSE;
 800a29a:	2000      	movs	r0, #0
    }
 800a29c:	bd70      	pop	{r4, r5, r6, pc}
            configASSERT( pxTCB == pxCurrentTCB );
 800a29e:	4b19      	ldr	r3, [pc, #100]	@ (800a304 <xTaskPriorityDisinherit+0x70>)
 800a2a0:	681b      	ldr	r3, [r3, #0]
 800a2a2:	4283      	cmp	r3, r0
 800a2a4:	d002      	beq.n	800a2ac <xTaskPriorityDisinherit+0x18>
 800a2a6:	f7fe fe9d 	bl	8008fe4 <ulSetInterruptMask>
 800a2aa:	e7fe      	b.n	800a2aa <xTaskPriorityDisinherit+0x16>
            configASSERT( pxTCB->uxMutexesHeld );
 800a2ac:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800a2ae:	b913      	cbnz	r3, 800a2b6 <xTaskPriorityDisinherit+0x22>
 800a2b0:	f7fe fe98 	bl	8008fe4 <ulSetInterruptMask>
 800a2b4:	e7fe      	b.n	800a2b4 <xTaskPriorityDisinherit+0x20>
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2b6:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800a2b8:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
            ( pxTCB->uxMutexesHeld )--;
 800a2ba:	3b01      	subs	r3, #1
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2bc:	4291      	cmp	r1, r2
            ( pxTCB->uxMutexesHeld )--;
 800a2be:	6503      	str	r3, [r0, #80]	@ 0x50
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2c0:	d0eb      	beq.n	800a29a <xTaskPriorityDisinherit+0x6>
                if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a2c2:	2b00      	cmp	r3, #0
 800a2c4:	d1e9      	bne.n	800a29a <xTaskPriorityDisinherit+0x6>
                    if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a2c6:	1d05      	adds	r5, r0, #4
 800a2c8:	4628      	mov	r0, r5
 800a2ca:	f7fe fd70 	bl	8008dae <uxListRemove>
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2ce:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
                    listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2d0:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800a2d4:	61a2      	str	r2, [r4, #24]
                    prvAddTaskToReadyList( pxTCB );
 800a2d6:	4a0c      	ldr	r2, [pc, #48]	@ (800a308 <xTaskPriorityDisinherit+0x74>)
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2d8:	62e3      	str	r3, [r4, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxTCB );
 800a2da:	6811      	ldr	r1, [r2, #0]
 800a2dc:	428b      	cmp	r3, r1
 800a2de:	f04f 0114 	mov.w	r1, #20
 800a2e2:	bf88      	it	hi
 800a2e4:	6013      	strhi	r3, [r2, #0]
 800a2e6:	434b      	muls	r3, r1
 800a2e8:	4a08      	ldr	r2, [pc, #32]	@ (800a30c <xTaskPriorityDisinherit+0x78>)
 800a2ea:	18d0      	adds	r0, r2, r3
 800a2ec:	6841      	ldr	r1, [r0, #4]
 800a2ee:	688e      	ldr	r6, [r1, #8]
 800a2f0:	60a1      	str	r1, [r4, #8]
 800a2f2:	60e6      	str	r6, [r4, #12]
 800a2f4:	6075      	str	r5, [r6, #4]
 800a2f6:	608d      	str	r5, [r1, #8]
 800a2f8:	58d1      	ldr	r1, [r2, r3]
 800a2fa:	6160      	str	r0, [r4, #20]
 800a2fc:	3101      	adds	r1, #1
                    xReturn = pdTRUE;
 800a2fe:	2001      	movs	r0, #1
                    prvAddTaskToReadyList( pxTCB );
 800a300:	50d1      	str	r1, [r2, r3]
        return xReturn;
 800a302:	e7cb      	b.n	800a29c <xTaskPriorityDisinherit+0x8>
 800a304:	2006f4e8 	.word	0x2006f4e8
 800a308:	2006f00c 	.word	0x2006f00c
 800a30c:	2006f088 	.word	0x2006f088

0800a310 <vTaskPriorityDisinheritAfterTimeout>:
    {
 800a310:	b570      	push	{r4, r5, r6, lr}
        if( pxMutexHolder != NULL )
 800a312:	4604      	mov	r4, r0
 800a314:	2800      	cmp	r0, #0
 800a316:	d03a      	beq.n	800a38e <vTaskPriorityDisinheritAfterTimeout+0x7e>
            configASSERT( pxTCB->uxMutexesHeld );
 800a318:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800a31a:	b912      	cbnz	r2, 800a322 <vTaskPriorityDisinheritAfterTimeout+0x12>
 800a31c:	f7fe fe62 	bl	8008fe4 <ulSetInterruptMask>
 800a320:	e7fe      	b.n	800a320 <vTaskPriorityDisinheritAfterTimeout+0x10>
            if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a322:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800a324:	4299      	cmp	r1, r3
 800a326:	bf38      	it	cc
 800a328:	4619      	movcc	r1, r3
            if( pxTCB->uxPriority != uxPriorityToUse )
 800a32a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a32c:	428b      	cmp	r3, r1
 800a32e:	d02e      	beq.n	800a38e <vTaskPriorityDisinheritAfterTimeout+0x7e>
                if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a330:	2a01      	cmp	r2, #1
 800a332:	d12c      	bne.n	800a38e <vTaskPriorityDisinheritAfterTimeout+0x7e>
                    configASSERT( pxTCB != pxCurrentTCB );
 800a334:	4a16      	ldr	r2, [pc, #88]	@ (800a390 <vTaskPriorityDisinheritAfterTimeout+0x80>)
 800a336:	6812      	ldr	r2, [r2, #0]
 800a338:	4282      	cmp	r2, r0
 800a33a:	d102      	bne.n	800a342 <vTaskPriorityDisinheritAfterTimeout+0x32>
 800a33c:	f7fe fe52 	bl	8008fe4 <ulSetInterruptMask>
 800a340:	e7fe      	b.n	800a340 <vTaskPriorityDisinheritAfterTimeout+0x30>
                    if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a342:	6982      	ldr	r2, [r0, #24]
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a344:	4d13      	ldr	r5, [pc, #76]	@ (800a394 <vTaskPriorityDisinheritAfterTimeout+0x84>)
                    if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a346:	2a00      	cmp	r2, #0
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a348:	f04f 0214 	mov.w	r2, #20
 800a34c:	fb02 5303 	mla	r3, r2, r3, r5
 800a350:	6942      	ldr	r2, [r0, #20]
                    pxTCB->uxPriority = uxPriorityToUse;
 800a352:	62c1      	str	r1, [r0, #44]	@ 0x2c
                        listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a354:	bfa4      	itt	ge
 800a356:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800a35a:	6181      	strge	r1, [r0, #24]
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a35c:	429a      	cmp	r2, r3
 800a35e:	d116      	bne.n	800a38e <vTaskPriorityDisinheritAfterTimeout+0x7e>
                        if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a360:	1d06      	adds	r6, r0, #4
 800a362:	4630      	mov	r0, r6
 800a364:	f7fe fd23 	bl	8008dae <uxListRemove>
                        prvAddTaskToReadyList( pxTCB );
 800a368:	4a0b      	ldr	r2, [pc, #44]	@ (800a398 <vTaskPriorityDisinheritAfterTimeout+0x88>)
 800a36a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a36c:	6811      	ldr	r1, [r2, #0]
 800a36e:	428b      	cmp	r3, r1
 800a370:	bf88      	it	hi
 800a372:	6013      	strhi	r3, [r2, #0]
 800a374:	2214      	movs	r2, #20
 800a376:	4353      	muls	r3, r2
 800a378:	18e9      	adds	r1, r5, r3
 800a37a:	684a      	ldr	r2, [r1, #4]
 800a37c:	6890      	ldr	r0, [r2, #8]
 800a37e:	60a2      	str	r2, [r4, #8]
 800a380:	60e0      	str	r0, [r4, #12]
 800a382:	6046      	str	r6, [r0, #4]
 800a384:	6096      	str	r6, [r2, #8]
 800a386:	58ea      	ldr	r2, [r5, r3]
 800a388:	6161      	str	r1, [r4, #20]
 800a38a:	3201      	adds	r2, #1
 800a38c:	50ea      	str	r2, [r5, r3]
    }
 800a38e:	bd70      	pop	{r4, r5, r6, pc}
 800a390:	2006f4e8 	.word	0x2006f4e8
 800a394:	2006f088 	.word	0x2006f088
 800a398:	2006f00c 	.word	0x2006f00c

0800a39c <pvTaskIncrementMutexHeldCount>:
        if( pxCurrentTCB != NULL )
 800a39c:	4b04      	ldr	r3, [pc, #16]	@ (800a3b0 <pvTaskIncrementMutexHeldCount+0x14>)
 800a39e:	681a      	ldr	r2, [r3, #0]
 800a3a0:	b11a      	cbz	r2, 800a3aa <pvTaskIncrementMutexHeldCount+0xe>
            ( pxCurrentTCB->uxMutexesHeld )++;
 800a3a2:	6819      	ldr	r1, [r3, #0]
 800a3a4:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800a3a6:	3201      	adds	r2, #1
 800a3a8:	650a      	str	r2, [r1, #80]	@ 0x50
        return pxCurrentTCB;
 800a3aa:	6818      	ldr	r0, [r3, #0]
    }
 800a3ac:	4770      	bx	lr
 800a3ae:	bf00      	nop
 800a3b0:	2006f4e8 	.word	0x2006f4e8

0800a3b4 <prvInsertTimerInActiveList>:
        BaseType_t xProcessTimerNow = pdFALSE;

        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

        if( xNextExpiryTime <= xTimeNow )
 800a3b4:	4291      	cmp	r1, r2
    {
 800a3b6:	b508      	push	{r3, lr}
        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a3b8:	6041      	str	r1, [r0, #4]
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a3ba:	6100      	str	r0, [r0, #16]
        if( xNextExpiryTime <= xTimeNow )
 800a3bc:	d80a      	bhi.n	800a3d4 <prvInsertTimerInActiveList+0x20>
        {
            /* Has the expiry time elapsed between the command to start/reset a
             * timer was issued, and the time the command was processed? */
            if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a3be:	1ad2      	subs	r2, r2, r3
 800a3c0:	6983      	ldr	r3, [r0, #24]
 800a3c2:	429a      	cmp	r2, r3
 800a3c4:	d20d      	bcs.n	800a3e2 <prvInsertTimerInActiveList+0x2e>
                 * processed actually exceeds the timers period.  */
                xProcessTimerNow = pdTRUE;
            }
            else
            {
                vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a3c6:	4b08      	ldr	r3, [pc, #32]	@ (800a3e8 <prvInsertTimerInActiveList+0x34>)
 800a3c8:	1d01      	adds	r1, r0, #4
                 * its expiry time and should be processed immediately. */
                xProcessTimerNow = pdTRUE;
            }
            else
            {
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a3ca:	6818      	ldr	r0, [r3, #0]
 800a3cc:	f7fe fcd8 	bl	8008d80 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
 800a3d0:	2000      	movs	r0, #0
            }
        }

        return xProcessTimerNow;
    }
 800a3d2:	bd08      	pop	{r3, pc}
            if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a3d4:	429a      	cmp	r2, r3
 800a3d6:	d201      	bcs.n	800a3dc <prvInsertTimerInActiveList+0x28>
 800a3d8:	4299      	cmp	r1, r3
 800a3da:	d202      	bcs.n	800a3e2 <prvInsertTimerInActiveList+0x2e>
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a3dc:	4b03      	ldr	r3, [pc, #12]	@ (800a3ec <prvInsertTimerInActiveList+0x38>)
 800a3de:	1d01      	adds	r1, r0, #4
 800a3e0:	e7f3      	b.n	800a3ca <prvInsertTimerInActiveList+0x16>
                xProcessTimerNow = pdTRUE;
 800a3e2:	2001      	movs	r0, #1
        return xProcessTimerNow;
 800a3e4:	e7f5      	b.n	800a3d2 <prvInsertTimerInActiveList+0x1e>
 800a3e6:	bf00      	nop
 800a3e8:	2006f5e8 	.word	0x2006f5e8
 800a3ec:	2006f5ec 	.word	0x2006f5ec

0800a3f0 <prvReloadTimer>:
    {
 800a3f0:	b570      	push	{r4, r5, r6, lr}
 800a3f2:	4604      	mov	r4, r0
 800a3f4:	460d      	mov	r5, r1
 800a3f6:	4616      	mov	r6, r2
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
 800a3f8:	69a1      	ldr	r1, [r4, #24]
 800a3fa:	462b      	mov	r3, r5
 800a3fc:	4632      	mov	r2, r6
 800a3fe:	4620      	mov	r0, r4
 800a400:	4429      	add	r1, r5
 800a402:	f7ff ffd7 	bl	800a3b4 <prvInsertTimerInActiveList>
 800a406:	b900      	cbnz	r0, 800a40a <prvReloadTimer+0x1a>
    }
 800a408:	bd70      	pop	{r4, r5, r6, pc}
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
 800a40a:	69a3      	ldr	r3, [r4, #24]
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a40c:	4620      	mov	r0, r4
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
 800a40e:	441d      	add	r5, r3
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a410:	6a23      	ldr	r3, [r4, #32]
 800a412:	4798      	blx	r3
 800a414:	e7f0      	b.n	800a3f8 <prvReloadTimer+0x8>
	...

0800a418 <prvProcessExpiredTimer>:
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a418:	4b0e      	ldr	r3, [pc, #56]	@ (800a454 <prvProcessExpiredTimer+0x3c>)
    {
 800a41a:	b570      	push	{r4, r5, r6, lr}
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a41c:	681b      	ldr	r3, [r3, #0]
    {
 800a41e:	4605      	mov	r5, r0
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a420:	68db      	ldr	r3, [r3, #12]
    {
 800a422:	460e      	mov	r6, r1
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a424:	68dc      	ldr	r4, [r3, #12]
        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a426:	1d20      	adds	r0, r4, #4
 800a428:	f7fe fcc1 	bl	8008dae <uxListRemove>
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a42c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a430:	075a      	lsls	r2, r3, #29
 800a432:	d509      	bpl.n	800a448 <prvProcessExpiredTimer+0x30>
            prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
 800a434:	4632      	mov	r2, r6
 800a436:	4629      	mov	r1, r5
 800a438:	4620      	mov	r0, r4
 800a43a:	f7ff ffd9 	bl	800a3f0 <prvReloadTimer>
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a43e:	4620      	mov	r0, r4
 800a440:	6a23      	ldr	r3, [r4, #32]
    }
 800a442:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a446:	4718      	bx	r3
            pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a448:	f023 0301 	bic.w	r3, r3, #1
 800a44c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a450:	e7f5      	b.n	800a43e <prvProcessExpiredTimer+0x26>
 800a452:	bf00      	nop
 800a454:	2006f5ec 	.word	0x2006f5ec

0800a458 <prvSampleTimeNow>:
    {
 800a458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a45a:	4605      	mov	r5, r0
        xTimeNow = xTaskGetTickCount();
 800a45c:	f7ff fbee 	bl	8009c3c <xTaskGetTickCount>
        if( xTimeNow < xLastTime )
 800a460:	4e0d      	ldr	r6, [pc, #52]	@ (800a498 <prvSampleTimeNow+0x40>)
        xTimeNow = xTaskGetTickCount();
 800a462:	4604      	mov	r4, r0
        if( xTimeNow < xLastTime )
 800a464:	6833      	ldr	r3, [r6, #0]
 800a466:	4283      	cmp	r3, r0
 800a468:	d909      	bls.n	800a47e <prvSampleTimeNow+0x26>

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a46a:	4f0c      	ldr	r7, [pc, #48]	@ (800a49c <prvSampleTimeNow+0x44>)
 800a46c:	683b      	ldr	r3, [r7, #0]
 800a46e:	681a      	ldr	r2, [r3, #0]
 800a470:	b952      	cbnz	r2, 800a488 <prvSampleTimeNow+0x30>
             * expirations must wait until after the lists are switched. */
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
 800a472:	4a0b      	ldr	r2, [pc, #44]	@ (800a4a0 <prvSampleTimeNow+0x48>)
 800a474:	6811      	ldr	r1, [r2, #0]
        pxOverflowTimerList = pxTemp;
 800a476:	6013      	str	r3, [r2, #0]
        pxCurrentTimerList = pxOverflowTimerList;
 800a478:	6039      	str	r1, [r7, #0]
            *pxTimerListsWereSwitched = pdTRUE;
 800a47a:	2301      	movs	r3, #1
 800a47c:	e000      	b.n	800a480 <prvSampleTimeNow+0x28>
 800a47e:	2300      	movs	r3, #0
    }
 800a480:	4620      	mov	r0, r4
            *pxTimerListsWereSwitched = pdTRUE;
 800a482:	602b      	str	r3, [r5, #0]
        xLastTime = xTimeNow;
 800a484:	6034      	str	r4, [r6, #0]
    }
 800a486:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a488:	68db      	ldr	r3, [r3, #12]
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
 800a48a:	f04f 31ff 	mov.w	r1, #4294967295
 800a48e:	6818      	ldr	r0, [r3, #0]
 800a490:	f7ff ffc2 	bl	800a418 <prvProcessExpiredTimer>
 800a494:	e7ea      	b.n	800a46c <prvSampleTimeNow+0x14>
 800a496:	bf00      	nop
 800a498:	2006f5dc 	.word	0x2006f5dc
 800a49c:	2006f5ec 	.word	0x2006f5ec
 800a4a0:	2006f5e8 	.word	0x2006f5e8

0800a4a4 <prvTimerTask>:
    {
 800a4a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a4a8:	4f51      	ldr	r7, [pc, #324]	@ (800a5f0 <prvTimerTask+0x14c>)
 800a4aa:	4e52      	ldr	r6, [pc, #328]	@ (800a5f4 <prvTimerTask+0x150>)
    {
 800a4ac:	b086      	sub	sp, #24
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a4ae:	683b      	ldr	r3, [r7, #0]
 800a4b0:	f8d3 8000 	ldr.w	r8, [r3]
 800a4b4:	f1b8 0f00 	cmp.w	r8, #0
 800a4b8:	d032      	beq.n	800a520 <prvTimerTask+0x7c>
 800a4ba:	2400      	movs	r4, #0
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a4bc:	68db      	ldr	r3, [r3, #12]
 800a4be:	f8d3 8000 	ldr.w	r8, [r3]
        vTaskSuspendAll();
 800a4c2:	f7ff fbb3 	bl	8009c2c <vTaskSuspendAll>
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a4c6:	a802      	add	r0, sp, #8
 800a4c8:	f7ff ffc6 	bl	800a458 <prvSampleTimeNow>
            if( xTimerListsWereSwitched == pdFALSE )
 800a4cc:	9b02      	ldr	r3, [sp, #8]
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a4ce:	4605      	mov	r5, r0
            if( xTimerListsWereSwitched == pdFALSE )
 800a4d0:	2b00      	cmp	r3, #0
 800a4d2:	d13a      	bne.n	800a54a <prvTimerTask+0xa6>
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a4d4:	bb34      	cbnz	r4, 800a524 <prvTimerTask+0x80>
 800a4d6:	4540      	cmp	r0, r8
 800a4d8:	d32a      	bcc.n	800a530 <prvTimerTask+0x8c>
                    ( void ) xTaskResumeAll();
 800a4da:	f7ff fc65 	bl	8009da8 <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 800a4de:	4629      	mov	r1, r5
 800a4e0:	4640      	mov	r0, r8
 800a4e2:	f7ff ff99 	bl	800a418 <prvProcessExpiredTimer>
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a4e6:	2200      	movs	r2, #0
 800a4e8:	6830      	ldr	r0, [r6, #0]
 800a4ea:	a902      	add	r1, sp, #8
 800a4ec:	f7ff f825 	bl	800953a <xQueueReceive>
 800a4f0:	2800      	cmp	r0, #0
 800a4f2:	d0dc      	beq.n	800a4ae <prvTimerTask+0xa>
                    if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a4f4:	9b02      	ldr	r3, [sp, #8]
                        pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a4f6:	9804      	ldr	r0, [sp, #16]
                    if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a4f8:	2b00      	cmp	r3, #0
 800a4fa:	db29      	blt.n	800a550 <prvTimerTask+0xac>
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a4fc:	9c04      	ldr	r4, [sp, #16]
                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a4fe:	6963      	ldr	r3, [r4, #20]
 800a500:	bb6b      	cbnz	r3, 800a55e <prvTimerTask+0xba>
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a502:	a801      	add	r0, sp, #4
 800a504:	f7ff ffa8 	bl	800a458 <prvSampleTimeNow>
                switch( xMessage.xMessageID )
 800a508:	9b02      	ldr	r3, [sp, #8]
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a50a:	4605      	mov	r5, r0
                switch( xMessage.xMessageID )
 800a50c:	3b01      	subs	r3, #1
 800a50e:	2b08      	cmp	r3, #8
 800a510:	d8e9      	bhi.n	800a4e6 <prvTimerTask+0x42>
 800a512:	e8df f003 	tbb	[pc, r3]
 800a516:	2828      	.short	0x2828
 800a518:	2865524b 	.word	0x2865524b
 800a51c:	4b28      	.short	0x4b28
 800a51e:	52          	.byte	0x52
 800a51f:	00          	.byte	0x00
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a520:	2401      	movs	r4, #1
 800a522:	e7ce      	b.n	800a4c2 <prvTimerTask+0x1e>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a524:	4b34      	ldr	r3, [pc, #208]	@ (800a5f8 <prvTimerTask+0x154>)
 800a526:	681b      	ldr	r3, [r3, #0]
 800a528:	681c      	ldr	r4, [r3, #0]
 800a52a:	fab4 f484 	clz	r4, r4
 800a52e:	0964      	lsrs	r4, r4, #5
                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a530:	4622      	mov	r2, r4
 800a532:	6830      	ldr	r0, [r6, #0]
 800a534:	eba8 0105 	sub.w	r1, r8, r5
 800a538:	f7ff f99d 	bl	8009876 <vQueueWaitForMessageRestricted>
                    if( xTaskResumeAll() == pdFALSE )
 800a53c:	f7ff fc34 	bl	8009da8 <xTaskResumeAll>
 800a540:	2800      	cmp	r0, #0
 800a542:	d1d0      	bne.n	800a4e6 <prvTimerTask+0x42>
                        portYIELD_WITHIN_API();
 800a544:	f7fe fc6a 	bl	8008e1c <vPortYield>
 800a548:	e7cd      	b.n	800a4e6 <prvTimerTask+0x42>
                ( void ) xTaskResumeAll();
 800a54a:	f7ff fc2d 	bl	8009da8 <xTaskResumeAll>
    }
 800a54e:	e7ca      	b.n	800a4e6 <prvTimerTask+0x42>
                        pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a550:	9b03      	ldr	r3, [sp, #12]
 800a552:	9905      	ldr	r1, [sp, #20]
 800a554:	4798      	blx	r3
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a556:	9b02      	ldr	r3, [sp, #8]
 800a558:	2b00      	cmp	r3, #0
 800a55a:	dbc4      	blt.n	800a4e6 <prvTimerTask+0x42>
 800a55c:	e7ce      	b.n	800a4fc <prvTimerTask+0x58>
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a55e:	1d20      	adds	r0, r4, #4
 800a560:	f7fe fc25 	bl	8008dae <uxListRemove>
 800a564:	e7cd      	b.n	800a502 <prvTimerTask+0x5e>
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a566:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a56a:	69a1      	ldr	r1, [r4, #24]
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a56c:	f043 0301 	orr.w	r3, r3, #1
 800a570:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a574:	9b03      	ldr	r3, [sp, #12]
 800a576:	4602      	mov	r2, r0
 800a578:	4419      	add	r1, r3
 800a57a:	4620      	mov	r0, r4
 800a57c:	f7ff ff1a 	bl	800a3b4 <prvInsertTimerInActiveList>
 800a580:	2800      	cmp	r0, #0
 800a582:	d0b0      	beq.n	800a4e6 <prvTimerTask+0x42>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a584:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a588:	0759      	lsls	r1, r3, #29
 800a58a:	d50a      	bpl.n	800a5a2 <prvTimerTask+0xfe>
                                prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow );
 800a58c:	69a3      	ldr	r3, [r4, #24]
 800a58e:	9903      	ldr	r1, [sp, #12]
 800a590:	462a      	mov	r2, r5
 800a592:	4620      	mov	r0, r4
 800a594:	4419      	add	r1, r3
 800a596:	f7ff ff2b 	bl	800a3f0 <prvReloadTimer>
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a59a:	4620      	mov	r0, r4
 800a59c:	6a23      	ldr	r3, [r4, #32]
 800a59e:	4798      	blx	r3
 800a5a0:	e7a1      	b.n	800a4e6 <prvTimerTask+0x42>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a5a2:	f023 0301 	bic.w	r3, r3, #1
 800a5a6:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a5aa:	e7f6      	b.n	800a59a <prvTimerTask+0xf6>
                        pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a5ac:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
                                    pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a5b0:	f023 0301 	bic.w	r3, r3, #1
 800a5b4:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a5b8:	e795      	b.n	800a4e6 <prvTimerTask+0x42>
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a5ba:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a5be:	f043 0301 	orr.w	r3, r3, #1
 800a5c2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a5c6:	9903      	ldr	r1, [sp, #12]
 800a5c8:	61a1      	str	r1, [r4, #24]
                        configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a5ca:	b911      	cbnz	r1, 800a5d2 <prvTimerTask+0x12e>
 800a5cc:	f7fe fd0a 	bl	8008fe4 <ulSetInterruptMask>
 800a5d0:	e7fe      	b.n	800a5d0 <prvTimerTask+0x12c>
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a5d2:	4603      	mov	r3, r0
 800a5d4:	4602      	mov	r2, r0
 800a5d6:	4401      	add	r1, r0
 800a5d8:	4620      	mov	r0, r4
 800a5da:	f7ff feeb 	bl	800a3b4 <prvInsertTimerInActiveList>
                        break;
 800a5de:	e782      	b.n	800a4e6 <prvTimerTask+0x42>
                                if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a5e0:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a5e4:	079a      	lsls	r2, r3, #30
 800a5e6:	d4e3      	bmi.n	800a5b0 <prvTimerTask+0x10c>
                                    vPortFree( pxTimer );
 800a5e8:	4620      	mov	r0, r4
 800a5ea:	f000 f91d 	bl	800a828 <vPortFree>
 800a5ee:	e77a      	b.n	800a4e6 <prvTimerTask+0x42>
 800a5f0:	2006f5ec 	.word	0x2006f5ec
 800a5f4:	2006f5e4 	.word	0x2006f5e4
 800a5f8:	2006f5e8 	.word	0x2006f5e8

0800a5fc <prvCheckForValidListAndQueue>:
    }
/*-----------------------------------------------------------*/

    static void prvCheckForValidListAndQueue( void )
    {
 800a5fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        /* Check that the list from which active timers are referenced, and the
         * queue used to communicate with the timer service, have been
         * initialised. */
        taskENTER_CRITICAL();
        {
            if( xTimerQueue == NULL )
 800a5fe:	4c11      	ldr	r4, [pc, #68]	@ (800a644 <prvCheckForValidListAndQueue+0x48>)
        taskENTER_CRITICAL();
 800a600:	f7fe fc18 	bl	8008e34 <vPortEnterCritical>
            if( xTimerQueue == NULL )
 800a604:	6825      	ldr	r5, [r4, #0]
 800a606:	b9bd      	cbnz	r5, 800a638 <prvCheckForValidListAndQueue+0x3c>
            {
                vListInitialise( &xActiveTimerList1 );
 800a608:	4f0f      	ldr	r7, [pc, #60]	@ (800a648 <prvCheckForValidListAndQueue+0x4c>)
                vListInitialise( &xActiveTimerList2 );
 800a60a:	4e10      	ldr	r6, [pc, #64]	@ (800a64c <prvCheckForValidListAndQueue+0x50>)
                vListInitialise( &xActiveTimerList1 );
 800a60c:	4638      	mov	r0, r7
 800a60e:	f7fe fba9 	bl	8008d64 <vListInitialise>
                vListInitialise( &xActiveTimerList2 );
 800a612:	4630      	mov	r0, r6
 800a614:	f7fe fba6 	bl	8008d64 <vListInitialise>
                pxCurrentTimerList = &xActiveTimerList1;
 800a618:	4b0d      	ldr	r3, [pc, #52]	@ (800a650 <prvCheckForValidListAndQueue+0x54>)
                        /* The timer queue is allocated statically in case
                         * configSUPPORT_DYNAMIC_ALLOCATION is 0. */
                        PRIVILEGED_DATA static StaticQueue_t xStaticTimerQueue;                                                                          /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
                        PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a61a:	2110      	movs	r1, #16
                pxCurrentTimerList = &xActiveTimerList1;
 800a61c:	601f      	str	r7, [r3, #0]
                pxOverflowTimerList = &xActiveTimerList2;
 800a61e:	4b0d      	ldr	r3, [pc, #52]	@ (800a654 <prvCheckForValidListAndQueue+0x58>)
                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a620:	200a      	movs	r0, #10
                pxOverflowTimerList = &xActiveTimerList2;
 800a622:	601e      	str	r6, [r3, #0]
                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a624:	4a0c      	ldr	r2, [pc, #48]	@ (800a658 <prvCheckForValidListAndQueue+0x5c>)
 800a626:	4b0d      	ldr	r3, [pc, #52]	@ (800a65c <prvCheckForValidListAndQueue+0x60>)
 800a628:	9500      	str	r5, [sp, #0]
 800a62a:	f7fe fe00 	bl	800922e <xQueueGenericCreateStatic>
 800a62e:	6020      	str	r0, [r4, #0]
                    }
                #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */

                #if ( configQUEUE_REGISTRY_SIZE > 0 )
                    {
                        if( xTimerQueue != NULL )
 800a630:	b110      	cbz	r0, 800a638 <prvCheckForValidListAndQueue+0x3c>
                        {
                            vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a632:	490b      	ldr	r1, [pc, #44]	@ (800a660 <prvCheckForValidListAndQueue+0x64>)
 800a634:	f7ff f8d0 	bl	80097d8 <vQueueAddToRegistry>
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
    }
 800a638:	b003      	add	sp, #12
 800a63a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        taskEXIT_CRITICAL();
 800a63e:	f7fe bc07 	b.w	8008e50 <vPortExitCritical>
 800a642:	bf00      	nop
 800a644:	2006f5e4 	.word	0x2006f5e4
 800a648:	2006f604 	.word	0x2006f604
 800a64c:	2006f5f0 	.word	0x2006f5f0
 800a650:	2006f5ec 	.word	0x2006f5ec
 800a654:	2006f5e8 	.word	0x2006f5e8
 800a658:	2006f53c 	.word	0x2006f53c
 800a65c:	2006f4ec 	.word	0x2006f4ec
 800a660:	0803587d 	.word	0x0803587d

0800a664 <xTimerCreateTimerTask>:
    {
 800a664:	b510      	push	{r4, lr}
 800a666:	b088      	sub	sp, #32
        prvCheckForValidListAndQueue();
 800a668:	f7ff ffc8 	bl	800a5fc <prvCheckForValidListAndQueue>
        if( xTimerQueue != NULL )
 800a66c:	4b0f      	ldr	r3, [pc, #60]	@ (800a6ac <xTimerCreateTimerTask+0x48>)
 800a66e:	681b      	ldr	r3, [r3, #0]
 800a670:	b1b3      	cbz	r3, 800a6a0 <xTimerCreateTimerTask+0x3c>
                    StaticTask_t * pxTimerTaskTCBBuffer = NULL;
 800a672:	2400      	movs	r4, #0
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a674:	aa07      	add	r2, sp, #28
 800a676:	a906      	add	r1, sp, #24
 800a678:	a805      	add	r0, sp, #20
                    StackType_t * pxTimerTaskStackBuffer = NULL;
 800a67a:	e9cd 4405 	strd	r4, r4, [sp, #20]
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a67e:	f7fe fb65 	bl	8008d4c <vApplicationGetTimerTaskMemory>
                    xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 800a682:	9b05      	ldr	r3, [sp, #20]
 800a684:	9a07      	ldr	r2, [sp, #28]
 800a686:	9302      	str	r3, [sp, #8]
 800a688:	9b06      	ldr	r3, [sp, #24]
 800a68a:	4909      	ldr	r1, [pc, #36]	@ (800a6b0 <xTimerCreateTimerTask+0x4c>)
 800a68c:	9301      	str	r3, [sp, #4]
 800a68e:	2302      	movs	r3, #2
 800a690:	4808      	ldr	r0, [pc, #32]	@ (800a6b4 <xTimerCreateTimerTask+0x50>)
 800a692:	9300      	str	r3, [sp, #0]
 800a694:	4623      	mov	r3, r4
 800a696:	f7ff fa74 	bl	8009b82 <xTaskCreateStatic>
 800a69a:	4b07      	ldr	r3, [pc, #28]	@ (800a6b8 <xTimerCreateTimerTask+0x54>)
 800a69c:	6018      	str	r0, [r3, #0]
                    if( xTimerTaskHandle != NULL )
 800a69e:	b910      	cbnz	r0, 800a6a6 <xTimerCreateTimerTask+0x42>
        configASSERT( xReturn );
 800a6a0:	f7fe fca0 	bl	8008fe4 <ulSetInterruptMask>
 800a6a4:	e7fe      	b.n	800a6a4 <xTimerCreateTimerTask+0x40>
    }
 800a6a6:	2001      	movs	r0, #1
 800a6a8:	b008      	add	sp, #32
 800a6aa:	bd10      	pop	{r4, pc}
 800a6ac:	2006f5e4 	.word	0x2006f5e4
 800a6b0:	08035882 	.word	0x08035882
 800a6b4:	0800a4a5 	.word	0x0800a4a5
 800a6b8:	2006f5e0 	.word	0x2006f5e0

0800a6bc <prvInsertBlockIntoFreeList>:
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t * pxBlockToInsert ) /* PRIVILEGED_FUNCTION */
{
 800a6bc:	b510      	push	{r4, lr}
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a6be:	4b10      	ldr	r3, [pc, #64]	@ (800a700 <prvInsertBlockIntoFreeList+0x44>)
 800a6c0:	461a      	mov	r2, r3
 800a6c2:	681b      	ldr	r3, [r3, #0]
 800a6c4:	4283      	cmp	r3, r0
 800a6c6:	d3fb      	bcc.n	800a6c0 <prvInsertBlockIntoFreeList+0x4>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800a6c8:	6854      	ldr	r4, [r2, #4]
 800a6ca:	1911      	adds	r1, r2, r4
 800a6cc:	4288      	cmp	r0, r1
    {
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800a6ce:	bf01      	itttt	eq
 800a6d0:	6841      	ldreq	r1, [r0, #4]
 800a6d2:	4610      	moveq	r0, r2
 800a6d4:	1909      	addeq	r1, r1, r4
 800a6d6:	6051      	streq	r1, [r2, #4]

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800a6d8:	6844      	ldr	r4, [r0, #4]
 800a6da:	1901      	adds	r1, r0, r4
 800a6dc:	428b      	cmp	r3, r1
 800a6de:	d10c      	bne.n	800a6fa <prvInsertBlockIntoFreeList+0x3e>
    {
        if( pxIterator->pxNextFreeBlock != pxEnd )
 800a6e0:	4908      	ldr	r1, [pc, #32]	@ (800a704 <prvInsertBlockIntoFreeList+0x48>)
 800a6e2:	6809      	ldr	r1, [r1, #0]
 800a6e4:	428b      	cmp	r3, r1
 800a6e6:	d003      	beq.n	800a6f0 <prvInsertBlockIntoFreeList+0x34>
        {
            /* Form one big block from the two blocks. */
            pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800a6e8:	6859      	ldr	r1, [r3, #4]
 800a6ea:	4421      	add	r1, r4
 800a6ec:	6041      	str	r1, [r0, #4]
            pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800a6ee:	6819      	ldr	r1, [r3, #0]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
 800a6f0:	4290      	cmp	r0, r2
            pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800a6f2:	6001      	str	r1, [r0, #0]
    {
        pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800a6f4:	bf18      	it	ne
 800a6f6:	6010      	strne	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }
}
 800a6f8:	bd10      	pop	{r4, pc}
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a6fa:	4619      	mov	r1, r3
 800a6fc:	e7f8      	b.n	800a6f0 <prvInsertBlockIntoFreeList+0x34>
 800a6fe:	bf00      	nop
 800a700:	2006f630 	.word	0x2006f630
 800a704:	2006f62c 	.word	0x2006f62c

0800a708 <pvPortMalloc>:
{
 800a708:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a70c:	4605      	mov	r5, r0
    vTaskSuspendAll();
 800a70e:	f7ff fa8d 	bl	8009c2c <vTaskSuspendAll>
        if( pxEnd == NULL )
 800a712:	493c      	ldr	r1, [pc, #240]	@ (800a804 <pvPortMalloc+0xfc>)
 800a714:	4c3c      	ldr	r4, [pc, #240]	@ (800a808 <pvPortMalloc+0x100>)
 800a716:	680b      	ldr	r3, [r1, #0]
 800a718:	b9f3      	cbnz	r3, 800a758 <pvPortMalloc+0x50>
    xStart.xBlockSize = ( size_t ) 0;
 800a71a:	2000      	movs	r0, #0
    uxAddress = ( size_t ) ucHeap;
 800a71c:	4a3b      	ldr	r2, [pc, #236]	@ (800a80c <pvPortMalloc+0x104>)
    if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800a71e:	0756      	lsls	r6, r2, #29
        uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800a720:	bf1d      	ittte	ne
 800a722:	3207      	addne	r2, #7
        xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800a724:	4b3a      	ldrne	r3, [pc, #232]	@ (800a810 <pvPortMalloc+0x108>)
        uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a726:	f022 0207 	bicne.w	r2, r2, #7
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800a72a:	4b3a      	ldreq	r3, [pc, #232]	@ (800a814 <pvPortMalloc+0x10c>)
        xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800a72c:	bf18      	it	ne
 800a72e:	1a9b      	subne	r3, r3, r2
    uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800a730:	4413      	add	r3, r2
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a732:	4e39      	ldr	r6, [pc, #228]	@ (800a818 <pvPortMalloc+0x110>)
    uxAddress -= xHeapStructSize;
 800a734:	3b08      	subs	r3, #8
    uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a736:	f023 0307 	bic.w	r3, r3, #7
    xStart.xBlockSize = ( size_t ) 0;
 800a73a:	6070      	str	r0, [r6, #4]
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a73c:	6032      	str	r2, [r6, #0]
    pxEnd->pxNextFreeBlock = NULL;
 800a73e:	e9c3 0000 	strd	r0, r0, [r3]
    pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800a742:	1a98      	subs	r0, r3, r2
    pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800a744:	e9c2 3000 	strd	r3, r0, [r2]
    pxEnd = ( void * ) uxAddress;
 800a748:	600b      	str	r3, [r1, #0]
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a74a:	4b34      	ldr	r3, [pc, #208]	@ (800a81c <pvPortMalloc+0x114>)
 800a74c:	6018      	str	r0, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a74e:	4b34      	ldr	r3, [pc, #208]	@ (800a820 <pvPortMalloc+0x118>)
 800a750:	6018      	str	r0, [r3, #0]
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800a752:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800a756:	6023      	str	r3, [r4, #0]
        if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800a758:	6827      	ldr	r7, [r4, #0]
 800a75a:	ea17 0405 	ands.w	r4, r7, r5
 800a75e:	d14b      	bne.n	800a7f8 <pvPortMalloc+0xf0>
            if( ( xWantedSize > 0 ) &&
 800a760:	1e6b      	subs	r3, r5, #1
 800a762:	330a      	adds	r3, #10
 800a764:	d808      	bhi.n	800a778 <pvPortMalloc+0x70>
                if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800a766:	0768      	lsls	r0, r5, #29
                xWantedSize += xHeapStructSize;
 800a768:	f105 0208 	add.w	r2, r5, #8
                if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800a76c:	d00b      	beq.n	800a786 <pvPortMalloc+0x7e>
                    if( ( xWantedSize + ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) ) )
 800a76e:	f022 0307 	bic.w	r3, r2, #7
 800a772:	3308      	adds	r3, #8
 800a774:	4293      	cmp	r3, r2
 800a776:	d807      	bhi.n	800a788 <pvPortMalloc+0x80>
    ( void ) xTaskResumeAll();
 800a778:	f7ff fb16 	bl	8009da8 <xTaskResumeAll>
    configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800a77c:	0763      	lsls	r3, r4, #29
 800a77e:	d03d      	beq.n	800a7fc <pvPortMalloc+0xf4>
 800a780:	f7fe fc30 	bl	8008fe4 <ulSetInterruptMask>
 800a784:	e7fe      	b.n	800a784 <pvPortMalloc+0x7c>
 800a786:	4613      	mov	r3, r2
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800a788:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 800a820 <pvPortMalloc+0x118>
 800a78c:	f8d8 6000 	ldr.w	r6, [r8]
 800a790:	429e      	cmp	r6, r3
 800a792:	d331      	bcc.n	800a7f8 <pvPortMalloc+0xf0>
                pxBlock = xStart.pxNextFreeBlock;
 800a794:	4a20      	ldr	r2, [pc, #128]	@ (800a818 <pvPortMalloc+0x110>)
 800a796:	6815      	ldr	r5, [r2, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800a798:	6868      	ldr	r0, [r5, #4]
 800a79a:	4298      	cmp	r0, r3
 800a79c:	d201      	bcs.n	800a7a2 <pvPortMalloc+0x9a>
 800a79e:	682c      	ldr	r4, [r5, #0]
 800a7a0:	b984      	cbnz	r4, 800a7c4 <pvPortMalloc+0xbc>
                if( pxBlock != pxEnd )
 800a7a2:	6809      	ldr	r1, [r1, #0]
 800a7a4:	42a9      	cmp	r1, r5
 800a7a6:	d027      	beq.n	800a7f8 <pvPortMalloc+0xf0>
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a7a8:	6829      	ldr	r1, [r5, #0]
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a7aa:	6814      	ldr	r4, [r2, #0]
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a7ac:	6011      	str	r1, [r2, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a7ae:	1ac2      	subs	r2, r0, r3
 800a7b0:	2a10      	cmp	r2, #16
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a7b2:	f104 0408 	add.w	r4, r4, #8
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a7b6:	d90c      	bls.n	800a7d2 <pvPortMalloc+0xca>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800a7b8:	18e8      	adds	r0, r5, r3
                        configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800a7ba:	0741      	lsls	r1, r0, #29
 800a7bc:	d005      	beq.n	800a7ca <pvPortMalloc+0xc2>
 800a7be:	f7fe fc11 	bl	8008fe4 <ulSetInterruptMask>
 800a7c2:	e7fe      	b.n	800a7c2 <pvPortMalloc+0xba>
 800a7c4:	462a      	mov	r2, r5
 800a7c6:	4625      	mov	r5, r4
 800a7c8:	e7e6      	b.n	800a798 <pvPortMalloc+0x90>
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800a7ca:	6042      	str	r2, [r0, #4]
                        pxBlock->xBlockSize = xWantedSize;
 800a7cc:	606b      	str	r3, [r5, #4]
                        prvInsertBlockIntoFreeList( pxNewBlockLink );
 800a7ce:	f7ff ff75 	bl	800a6bc <prvInsertBlockIntoFreeList>
                    pxBlock->pxNextFreeBlock = NULL;
 800a7d2:	2300      	movs	r3, #0
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a7d4:	686a      	ldr	r2, [r5, #4]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a7d6:	4911      	ldr	r1, [pc, #68]	@ (800a81c <pvPortMalloc+0x114>)
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a7d8:	1ab6      	subs	r6, r6, r2
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a7da:	4317      	orrs	r7, r2
                    xNumberOfSuccessfulAllocations++;
 800a7dc:	4a11      	ldr	r2, [pc, #68]	@ (800a824 <pvPortMalloc+0x11c>)
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a7de:	6808      	ldr	r0, [r1, #0]
                    pxBlock->pxNextFreeBlock = NULL;
 800a7e0:	602b      	str	r3, [r5, #0]
                    xNumberOfSuccessfulAllocations++;
 800a7e2:	6813      	ldr	r3, [r2, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a7e4:	4286      	cmp	r6, r0
                    xNumberOfSuccessfulAllocations++;
 800a7e6:	f103 0301 	add.w	r3, r3, #1
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a7ea:	f8c8 6000 	str.w	r6, [r8]
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800a7ee:	bf38      	it	cc
 800a7f0:	600e      	strcc	r6, [r1, #0]
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a7f2:	606f      	str	r7, [r5, #4]
                    xNumberOfSuccessfulAllocations++;
 800a7f4:	6013      	str	r3, [r2, #0]
 800a7f6:	e7bf      	b.n	800a778 <pvPortMalloc+0x70>
    void * pvReturn = NULL;
 800a7f8:	2400      	movs	r4, #0
 800a7fa:	e7bd      	b.n	800a778 <pvPortMalloc+0x70>
}
 800a7fc:	4620      	mov	r0, r4
 800a7fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a802:	bf00      	nop
 800a804:	2006f62c 	.word	0x2006f62c
 800a808:	2006f618 	.word	0x2006f618
 800a80c:	2006f638 	.word	0x2006f638
 800a810:	20082eb8 	.word	0x20082eb8
 800a814:	00013880 	.word	0x00013880
 800a818:	2006f630 	.word	0x2006f630
 800a81c:	2006f624 	.word	0x2006f624
 800a820:	2006f628 	.word	0x2006f628
 800a824:	2006f620 	.word	0x2006f620

0800a828 <vPortFree>:
{
 800a828:	b510      	push	{r4, lr}
    if( pv != NULL )
 800a82a:	4604      	mov	r4, r0
 800a82c:	b330      	cbz	r0, 800a87c <vPortFree+0x54>
        configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800a82e:	4a14      	ldr	r2, [pc, #80]	@ (800a880 <vPortFree+0x58>)
 800a830:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800a834:	6812      	ldr	r2, [r2, #0]
 800a836:	4213      	tst	r3, r2
 800a838:	d102      	bne.n	800a840 <vPortFree+0x18>
 800a83a:	f7fe fbd3 	bl	8008fe4 <ulSetInterruptMask>
 800a83e:	e7fe      	b.n	800a83e <vPortFree+0x16>
        configASSERT( pxLink->pxNextFreeBlock == NULL );
 800a840:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800a844:	b111      	cbz	r1, 800a84c <vPortFree+0x24>
 800a846:	f7fe fbcd 	bl	8008fe4 <ulSetInterruptMask>
 800a84a:	e7fe      	b.n	800a84a <vPortFree+0x22>
                pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800a84c:	ea23 0302 	bic.w	r3, r3, r2
 800a850:	f840 3c04 	str.w	r3, [r0, #-4]
                vTaskSuspendAll();
 800a854:	f7ff f9ea 	bl	8009c2c <vTaskSuspendAll>
                    xFreeBytesRemaining += pxLink->xBlockSize;
 800a858:	4a0a      	ldr	r2, [pc, #40]	@ (800a884 <vPortFree+0x5c>)
 800a85a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a85e:	6811      	ldr	r1, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a860:	f1a4 0008 	sub.w	r0, r4, #8
                    xFreeBytesRemaining += pxLink->xBlockSize;
 800a864:	440b      	add	r3, r1
 800a866:	6013      	str	r3, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a868:	f7ff ff28 	bl	800a6bc <prvInsertBlockIntoFreeList>
}
 800a86c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                    xNumberOfSuccessfulFrees++;
 800a870:	4a05      	ldr	r2, [pc, #20]	@ (800a888 <vPortFree+0x60>)
 800a872:	6813      	ldr	r3, [r2, #0]
 800a874:	3301      	adds	r3, #1
 800a876:	6013      	str	r3, [r2, #0]
                ( void ) xTaskResumeAll();
 800a878:	f7ff ba96 	b.w	8009da8 <xTaskResumeAll>
}
 800a87c:	bd10      	pop	{r4, pc}
 800a87e:	bf00      	nop
 800a880:	2006f618 	.word	0x2006f618
 800a884:	2006f628 	.word	0x2006f628
 800a888:	2006f61c 	.word	0x2006f61c

0800a88c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a88c:	8880      	ldrh	r0, [r0, #4]
 800a88e:	4770      	bx	lr

0800a890 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a890:	b570      	push	{r4, r5, r6, lr}
 800a892:	6803      	ldr	r3, [r0, #0]
 800a894:	4605      	mov	r5, r0
 800a896:	460c      	mov	r4, r1
 800a898:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a89a:	2100      	movs	r1, #0
 800a89c:	4798      	blx	r3
 800a89e:	682b      	ldr	r3, [r5, #0]
 800a8a0:	4606      	mov	r6, r0
 800a8a2:	6a1b      	ldr	r3, [r3, #32]
 800a8a4:	4628      	mov	r0, r5
 800a8a6:	4798      	blx	r3
 800a8a8:	1ba4      	subs	r4, r4, r6
 800a8aa:	b2a4      	uxth	r4, r4
 800a8ac:	fbb4 f0f0 	udiv	r0, r4, r0
 800a8b0:	bd70      	pop	{r4, r5, r6, pc}

0800a8b2 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a8b2:	2300      	movs	r3, #0
 800a8b4:	8083      	strh	r3, [r0, #4]
 800a8b6:	4770      	bx	lr

0800a8b8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a8b8:	b510      	push	{r4, lr}
 800a8ba:	4604      	mov	r4, r0
 800a8bc:	6803      	ldr	r3, [r0, #0]
 800a8be:	8881      	ldrh	r1, [r0, #4]
 800a8c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a8c2:	4798      	blx	r3
 800a8c4:	88a3      	ldrh	r3, [r4, #4]
 800a8c6:	3301      	adds	r3, #1
 800a8c8:	80a3      	strh	r3, [r4, #4]
 800a8ca:	bd10      	pop	{r4, pc}

0800a8cc <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a8cc:	6803      	ldr	r3, [r0, #0]
 800a8ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a8d0:	4718      	bx	r3

0800a8d2 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a8d2:	4770      	bx	lr

0800a8d4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a8d4:	4a02      	ldr	r2, [pc, #8]	@ (800a8e0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a8d6:	6002      	str	r2, [r0, #0]
 800a8d8:	2200      	movs	r2, #0
 800a8da:	8082      	strh	r2, [r0, #4]
 800a8dc:	4770      	bx	lr
 800a8de:	bf00      	nop
 800a8e0:	08035894 	.word	0x08035894

0800a8e4 <_ZN8touchgfx9Container13getFirstChildEv>:
 800a8e4:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800a8e6:	4770      	bx	lr

0800a8e8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a8e8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a8ea:	2000      	movs	r0, #0
 800a8ec:	b12b      	cbz	r3, 800a8fa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a8ee:	b920      	cbnz	r0, 800a8fa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a8f0:	1a5a      	subs	r2, r3, r1
 800a8f2:	4250      	negs	r0, r2
 800a8f4:	4150      	adcs	r0, r2
 800a8f6:	699b      	ldr	r3, [r3, #24]
 800a8f8:	e7f8      	b.n	800a8ec <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a8fa:	4770      	bx	lr

0800a8fc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a8fc:	2300      	movs	r3, #0
 800a8fe:	6148      	str	r0, [r1, #20]
 800a900:	618b      	str	r3, [r1, #24]
 800a902:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a904:	b913      	cbnz	r3, 800a90c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a906:	6281      	str	r1, [r0, #40]	@ 0x28
 800a908:	4770      	bx	lr
 800a90a:	4613      	mov	r3, r2
 800a90c:	699a      	ldr	r2, [r3, #24]
 800a90e:	2a00      	cmp	r2, #0
 800a910:	d1fb      	bne.n	800a90a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a912:	6199      	str	r1, [r3, #24]
 800a914:	4770      	bx	lr

0800a916 <_ZN8touchgfx9Container9removeAllEv>:
 800a916:	2200      	movs	r2, #0
 800a918:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a91a:	b123      	cbz	r3, 800a926 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a91c:	6999      	ldr	r1, [r3, #24]
 800a91e:	6281      	str	r1, [r0, #40]	@ 0x28
 800a920:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a924:	e7f8      	b.n	800a918 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a926:	4770      	bx	lr

0800a928 <_ZN8touchgfx9Container6unlinkEv>:
 800a928:	2300      	movs	r3, #0
 800a92a:	6283      	str	r3, [r0, #40]	@ 0x28
 800a92c:	4770      	bx	lr

0800a92e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a92e:	2200      	movs	r2, #0
 800a930:	8002      	strh	r2, [r0, #0]
 800a932:	8042      	strh	r2, [r0, #2]
 800a934:	8082      	strh	r2, [r0, #4]
 800a936:	80c2      	strh	r2, [r0, #6]
 800a938:	4770      	bx	lr

0800a93a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a93a:	b570      	push	{r4, r5, r6, lr}
 800a93c:	460d      	mov	r5, r1
 800a93e:	4616      	mov	r6, r2
 800a940:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a942:	b13c      	cbz	r4, 800a954 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a944:	6823      	ldr	r3, [r4, #0]
 800a946:	4620      	mov	r0, r4
 800a948:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a94a:	4632      	mov	r2, r6
 800a94c:	4629      	mov	r1, r5
 800a94e:	4798      	blx	r3
 800a950:	69a4      	ldr	r4, [r4, #24]
 800a952:	e7f6      	b.n	800a942 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a954:	bd70      	pop	{r4, r5, r6, pc}

0800a956 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a956:	b538      	push	{r3, r4, r5, lr}
 800a958:	460d      	mov	r5, r1
 800a95a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a95c:	b134      	cbz	r4, 800a96c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a95e:	682b      	ldr	r3, [r5, #0]
 800a960:	4621      	mov	r1, r4
 800a962:	689b      	ldr	r3, [r3, #8]
 800a964:	4628      	mov	r0, r5
 800a966:	4798      	blx	r3
 800a968:	69a4      	ldr	r4, [r4, #24]
 800a96a:	e7f7      	b.n	800a95c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a96c:	bd38      	pop	{r3, r4, r5, pc}

0800a96e <_ZN8touchgfx9ContainerD1Ev>:
 800a96e:	4770      	bx	lr

0800a970 <_ZN8touchgfx9ContainerD0Ev>:
 800a970:	b510      	push	{r4, lr}
 800a972:	4604      	mov	r4, r0
 800a974:	212c      	movs	r1, #44	@ 0x2c
 800a976:	f026 fbae 	bl	80310d6 <_ZdlPvj>
 800a97a:	4620      	mov	r0, r4
 800a97c:	bd10      	pop	{r4, pc}

0800a97e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a97e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a980:	b19b      	cbz	r3, 800a9aa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a982:	428b      	cmp	r3, r1
 800a984:	d109      	bne.n	800a99a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a986:	2100      	movs	r1, #0
 800a988:	699a      	ldr	r2, [r3, #24]
 800a98a:	6159      	str	r1, [r3, #20]
 800a98c:	6282      	str	r2, [r0, #40]	@ 0x28
 800a98e:	b902      	cbnz	r2, 800a992 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a990:	4770      	bx	lr
 800a992:	6199      	str	r1, [r3, #24]
 800a994:	4770      	bx	lr
 800a996:	4613      	mov	r3, r2
 800a998:	b13a      	cbz	r2, 800a9aa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a99a:	699a      	ldr	r2, [r3, #24]
 800a99c:	428a      	cmp	r2, r1
 800a99e:	d1fa      	bne.n	800a996 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a9a0:	698a      	ldr	r2, [r1, #24]
 800a9a2:	619a      	str	r2, [r3, #24]
 800a9a4:	2300      	movs	r3, #0
 800a9a6:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a9aa:	4770      	bx	lr

0800a9ac <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a9ac:	b410      	push	{r4}
 800a9ae:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a9b0:	4604      	mov	r4, r0
 800a9b2:	b92b      	cbnz	r3, 800a9c0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a9b4:	6803      	ldr	r3, [r0, #0]
 800a9b6:	4611      	mov	r1, r2
 800a9b8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a9ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a9be:	4718      	bx	r3
 800a9c0:	b941      	cbnz	r1, 800a9d4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a9c2:	6193      	str	r3, [r2, #24]
 800a9c4:	6282      	str	r2, [r0, #40]	@ 0x28
 800a9c6:	6154      	str	r4, [r2, #20]
 800a9c8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a9cc:	4770      	bx	lr
 800a9ce:	4603      	mov	r3, r0
 800a9d0:	2800      	cmp	r0, #0
 800a9d2:	d0f9      	beq.n	800a9c8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a9d4:	4299      	cmp	r1, r3
 800a9d6:	6998      	ldr	r0, [r3, #24]
 800a9d8:	d1f9      	bne.n	800a9ce <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a9da:	6190      	str	r0, [r2, #24]
 800a9dc:	618a      	str	r2, [r1, #24]
 800a9de:	e7f2      	b.n	800a9c6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a9e0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a9e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a9e4:	461f      	mov	r7, r3
 800a9e6:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800a9ea:	460d      	mov	r5, r1
 800a9ec:	4616      	mov	r6, r2
 800a9ee:	b103      	cbz	r3, 800a9f2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a9f0:	6038      	str	r0, [r7, #0]
 800a9f2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a9f4:	b314      	cbz	r4, 800aa3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a9f6:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a9fa:	b1eb      	cbz	r3, 800aa38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a9fc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800aa00:	428d      	cmp	r5, r1
 800aa02:	db19      	blt.n	800aa38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa04:	8923      	ldrh	r3, [r4, #8]
 800aa06:	b289      	uxth	r1, r1
 800aa08:	440b      	add	r3, r1
 800aa0a:	b21b      	sxth	r3, r3
 800aa0c:	429d      	cmp	r5, r3
 800aa0e:	da13      	bge.n	800aa38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa10:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800aa14:	4296      	cmp	r6, r2
 800aa16:	db0f      	blt.n	800aa38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa18:	8963      	ldrh	r3, [r4, #10]
 800aa1a:	b292      	uxth	r2, r2
 800aa1c:	4413      	add	r3, r2
 800aa1e:	b21b      	sxth	r3, r3
 800aa20:	429e      	cmp	r6, r3
 800aa22:	da09      	bge.n	800aa38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa24:	6823      	ldr	r3, [r4, #0]
 800aa26:	1ab2      	subs	r2, r6, r2
 800aa28:	1a69      	subs	r1, r5, r1
 800aa2a:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800aa2e:	b212      	sxth	r2, r2
 800aa30:	463b      	mov	r3, r7
 800aa32:	b209      	sxth	r1, r1
 800aa34:	4620      	mov	r0, r4
 800aa36:	47c0      	blx	r8
 800aa38:	69a4      	ldr	r4, [r4, #24]
 800aa3a:	e7db      	b.n	800a9f4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800aa3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aa40 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800aa40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa44:	4c6c      	ldr	r4, [pc, #432]	@ (800abf8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>)
 800aa46:	b0a1      	sub	sp, #132	@ 0x84
 800aa48:	6824      	ldr	r4, [r4, #0]
 800aa4a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800aa4c:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800aa50:	2400      	movs	r4, #0
 800aa52:	802c      	strh	r4, [r5, #0]
 800aa54:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800aa56:	4606      	mov	r6, r0
 800aa58:	802c      	strh	r4, [r5, #0]
 800aa5a:	601c      	str	r4, [r3, #0]
 800aa5c:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800aa60:	9303      	str	r3, [sp, #12]
 800aa62:	f7ff ffbd 	bl	800a9e0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800aa66:	f1b9 0f03 	cmp.w	r9, #3
 800aa6a:	f340 80bf 	ble.w	800abec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1ac>
 800aa6e:	4631      	mov	r1, r6
 800aa70:	a80c      	add	r0, sp, #48	@ 0x30
 800aa72:	f003 fbd7 	bl	800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800aa76:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800aa7a:	9306      	str	r3, [sp, #24]
 800aa7c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800aa80:	9307      	str	r3, [sp, #28]
 800aa82:	9b03      	ldr	r3, [sp, #12]
 800aa84:	f8d3 a000 	ldr.w	sl, [r3]
 800aa88:	f1ba 0f00 	cmp.w	sl, #0
 800aa8c:	f000 80b1 	beq.w	800abf2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800aa90:	4651      	mov	r1, sl
 800aa92:	a810      	add	r0, sp, #64	@ 0x40
 800aa94:	f003 fbc6 	bl	800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800aa98:	2002      	movs	r0, #2
 800aa9a:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800aa9e:	9b01      	ldr	r3, [sp, #4]
 800aaa0:	fb91 f1f0 	sdiv	r1, r1, r0
 800aaa4:	9a06      	ldr	r2, [sp, #24]
 800aaa6:	189d      	adds	r5, r3, r2
 800aaa8:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800aaac:	9a07      	ldr	r2, [sp, #28]
 800aaae:	4419      	add	r1, r3
 800aab0:	9b02      	ldr	r3, [sp, #8]
 800aab2:	1a6d      	subs	r5, r5, r1
 800aab4:	4413      	add	r3, r2
 800aab6:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800aaba:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800aabe:	fb92 f2f0 	sdiv	r2, r2, r0
 800aac2:	440a      	add	r2, r1
 800aac4:	1a9b      	subs	r3, r3, r2
 800aac6:	435b      	muls	r3, r3
 800aac8:	fb05 3505 	mla	r5, r5, r5, r3
 800aacc:	4f4b      	ldr	r7, [pc, #300]	@ (800abfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800aace:	ac10      	add	r4, sp, #64	@ 0x40
 800aad0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800aad2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800aad4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800aad6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800aad8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800aada:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800aadc:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800aae0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800aae4:	2303      	movs	r3, #3
 800aae6:	f1b9 0f0c 	cmp.w	r9, #12
 800aaea:	bfda      	itte	le
 800aaec:	f109 32ff 	addle.w	r2, r9, #4294967295
 800aaf0:	fb92 f8f3 	sdivle	r8, r2, r3
 800aaf4:	4698      	movgt	r8, r3
 800aaf6:	2400      	movs	r4, #0
 800aaf8:	f8cd 9000 	str.w	r9, [sp]
 800aafc:	1c63      	adds	r3, r4, #1
 800aafe:	9308      	str	r3, [sp, #32]
 800ab00:	9b00      	ldr	r3, [sp, #0]
 800ab02:	f04f 0b00 	mov.w	fp, #0
 800ab06:	fb93 f3f8 	sdiv	r3, r3, r8
 800ab0a:	f004 0401 	and.w	r4, r4, #1
 800ab0e:	aa10      	add	r2, sp, #64	@ 0x40
 800ab10:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ab14:	b29b      	uxth	r3, r3
 800ab16:	3404      	adds	r4, #4
 800ab18:	9304      	str	r3, [sp, #16]
 800ab1a:	9a04      	ldr	r2, [sp, #16]
 800ab1c:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ab20:	fb13 f302 	smulbb	r3, r3, r2
 800ab24:	9a01      	ldr	r2, [sp, #4]
 800ab26:	b29b      	uxth	r3, r3
 800ab28:	1899      	adds	r1, r3, r2
 800ab2a:	9305      	str	r3, [sp, #20]
 800ab2c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ab30:	b209      	sxth	r1, r1
 800ab32:	4299      	cmp	r1, r3
 800ab34:	db4d      	blt.n	800abd2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ab36:	8932      	ldrh	r2, [r6, #8]
 800ab38:	4413      	add	r3, r2
 800ab3a:	b21b      	sxth	r3, r3
 800ab3c:	4299      	cmp	r1, r3
 800ab3e:	da48      	bge.n	800abd2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ab40:	9b04      	ldr	r3, [sp, #16]
 800ab42:	6827      	ldr	r7, [r4, #0]
 800ab44:	fb17 f703 	smulbb	r7, r7, r3
 800ab48:	9b02      	ldr	r3, [sp, #8]
 800ab4a:	b2bf      	uxth	r7, r7
 800ab4c:	18fa      	adds	r2, r7, r3
 800ab4e:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ab52:	b212      	sxth	r2, r2
 800ab54:	429a      	cmp	r2, r3
 800ab56:	db3c      	blt.n	800abd2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ab58:	8970      	ldrh	r0, [r6, #10]
 800ab5a:	4403      	add	r3, r0
 800ab5c:	b21b      	sxth	r3, r3
 800ab5e:	429a      	cmp	r2, r3
 800ab60:	da37      	bge.n	800abd2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ab62:	2300      	movs	r3, #0
 800ab64:	4630      	mov	r0, r6
 800ab66:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ab68:	ab0b      	add	r3, sp, #44	@ 0x2c
 800ab6a:	f7ff ff39 	bl	800a9e0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ab6e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ab70:	b37a      	cbz	r2, 800abd2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ab72:	4552      	cmp	r2, sl
 800ab74:	d02d      	beq.n	800abd2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800ab76:	4611      	mov	r1, r2
 800ab78:	a80e      	add	r0, sp, #56	@ 0x38
 800ab7a:	9209      	str	r2, [sp, #36]	@ 0x24
 800ab7c:	f003 fb52 	bl	800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ab80:	f04f 0e02 	mov.w	lr, #2
 800ab84:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800ab88:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800ab8c:	fb91 f1fe 	sdiv	r1, r1, lr
 800ab90:	fb9c fcfe 	sdiv	ip, ip, lr
 800ab94:	9a06      	ldr	r2, [sp, #24]
 800ab96:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800ab9a:	9b01      	ldr	r3, [sp, #4]
 800ab9c:	4401      	add	r1, r0
 800ab9e:	4413      	add	r3, r2
 800aba0:	1a58      	subs	r0, r3, r1
 800aba2:	9a07      	ldr	r2, [sp, #28]
 800aba4:	9b02      	ldr	r3, [sp, #8]
 800aba6:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800abaa:	4413      	add	r3, r2
 800abac:	448c      	add	ip, r1
 800abae:	eba3 030c 	sub.w	r3, r3, ip
 800abb2:	435b      	muls	r3, r3
 800abb4:	fb00 3300 	mla	r3, r0, r0, r3
 800abb8:	42ab      	cmp	r3, r5
 800abba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800abbc:	d208      	bcs.n	800abd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x190>
 800abbe:	461d      	mov	r5, r3
 800abc0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800abc2:	9803      	ldr	r0, [sp, #12]
 800abc4:	6001      	str	r1, [r0, #0]
 800abc6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800abc8:	9805      	ldr	r0, [sp, #20]
 800abca:	8008      	strh	r0, [r1, #0]
 800abcc:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800abce:	800f      	strh	r7, [r1, #0]
 800abd0:	4692      	mov	sl, r2
 800abd2:	f10b 0b01 	add.w	fp, fp, #1
 800abd6:	f1bb 0f04 	cmp.w	fp, #4
 800abda:	f104 0408 	add.w	r4, r4, #8
 800abde:	d19c      	bne.n	800ab1a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xda>
 800abe0:	9b00      	ldr	r3, [sp, #0]
 800abe2:	9c08      	ldr	r4, [sp, #32]
 800abe4:	444b      	add	r3, r9
 800abe6:	4544      	cmp	r4, r8
 800abe8:	9300      	str	r3, [sp, #0]
 800abea:	d187      	bne.n	800aafc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xbc>
 800abec:	b021      	add	sp, #132	@ 0x84
 800abee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800abf2:	f04f 35ff 	mov.w	r5, #4294967295
 800abf6:	e769      	b.n	800aacc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800abf8:	20082ec4 	.word	0x20082ec4
 800abfc:	08033528 	.word	0x08033528

0800ac00 <_ZN8touchgfx4RectaNERKS0_>:
 800ac00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ac04:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ac08:	888c      	ldrh	r4, [r1, #4]
 800ac0a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ac0e:	443c      	add	r4, r7
 800ac10:	b2a4      	uxth	r4, r4
 800ac12:	fa0f f884 	sxth.w	r8, r4
 800ac16:	45c1      	cmp	r9, r8
 800ac18:	da2f      	bge.n	800ac7a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ac1a:	8882      	ldrh	r2, [r0, #4]
 800ac1c:	444a      	add	r2, r9
 800ac1e:	b292      	uxth	r2, r2
 800ac20:	fa0f fe82 	sxth.w	lr, r2
 800ac24:	4577      	cmp	r7, lr
 800ac26:	da28      	bge.n	800ac7a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ac28:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ac2c:	88cb      	ldrh	r3, [r1, #6]
 800ac2e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ac32:	442b      	add	r3, r5
 800ac34:	b21b      	sxth	r3, r3
 800ac36:	429e      	cmp	r6, r3
 800ac38:	da1f      	bge.n	800ac7a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ac3a:	88c3      	ldrh	r3, [r0, #6]
 800ac3c:	4433      	add	r3, r6
 800ac3e:	b29b      	uxth	r3, r3
 800ac40:	fa0f fc83 	sxth.w	ip, r3
 800ac44:	4565      	cmp	r5, ip
 800ac46:	da18      	bge.n	800ac7a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ac48:	454f      	cmp	r7, r9
 800ac4a:	bfb8      	it	lt
 800ac4c:	464f      	movlt	r7, r9
 800ac4e:	42b5      	cmp	r5, r6
 800ac50:	bfb8      	it	lt
 800ac52:	4635      	movlt	r5, r6
 800ac54:	45f0      	cmp	r8, lr
 800ac56:	bfd8      	it	le
 800ac58:	4622      	movle	r2, r4
 800ac5a:	1bd2      	subs	r2, r2, r7
 800ac5c:	8082      	strh	r2, [r0, #4]
 800ac5e:	884a      	ldrh	r2, [r1, #2]
 800ac60:	88c9      	ldrh	r1, [r1, #6]
 800ac62:	8007      	strh	r7, [r0, #0]
 800ac64:	440a      	add	r2, r1
 800ac66:	b292      	uxth	r2, r2
 800ac68:	b211      	sxth	r1, r2
 800ac6a:	458c      	cmp	ip, r1
 800ac6c:	bfa8      	it	ge
 800ac6e:	4613      	movge	r3, r2
 800ac70:	1b5b      	subs	r3, r3, r5
 800ac72:	80c3      	strh	r3, [r0, #6]
 800ac74:	8045      	strh	r5, [r0, #2]
 800ac76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ac7a:	2300      	movs	r3, #0
 800ac7c:	8003      	strh	r3, [r0, #0]
 800ac7e:	8043      	strh	r3, [r0, #2]
 800ac80:	8083      	strh	r3, [r0, #4]
 800ac82:	80c3      	strh	r3, [r0, #6]
 800ac84:	e7f7      	b.n	800ac76 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ac86:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ac8a:	2b00      	cmp	r3, #0
 800ac8c:	dd06      	ble.n	800ac9c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ac8e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ac92:	2800      	cmp	r0, #0
 800ac94:	bfcc      	ite	gt
 800ac96:	2000      	movgt	r0, #0
 800ac98:	2001      	movle	r0, #1
 800ac9a:	4770      	bx	lr
 800ac9c:	2001      	movs	r0, #1
 800ac9e:	4770      	bx	lr

0800aca0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800aca0:	2300      	movs	r3, #0
 800aca2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aca6:	4604      	mov	r4, r0
 800aca8:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800acaa:	8003      	strh	r3, [r0, #0]
 800acac:	8043      	strh	r3, [r0, #2]
 800acae:	8083      	strh	r3, [r0, #4]
 800acb0:	80c3      	strh	r3, [r0, #6]
 800acb2:	2d00      	cmp	r5, #0
 800acb4:	d040      	beq.n	800ad38 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800acb6:	1d28      	adds	r0, r5, #4
 800acb8:	f7ff ffe5 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800acbc:	b988      	cbnz	r0, 800ace2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800acbe:	4620      	mov	r0, r4
 800acc0:	f7ff ffe1 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800acc4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800acc8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800accc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800acd0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800acd4:	b138      	cbz	r0, 800ace6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800acd6:	8022      	strh	r2, [r4, #0]
 800acd8:	8063      	strh	r3, [r4, #2]
 800acda:	f8a4 e004 	strh.w	lr, [r4, #4]
 800acde:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ace2:	69ad      	ldr	r5, [r5, #24]
 800ace4:	e7e5      	b.n	800acb2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ace6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800acea:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800acee:	4290      	cmp	r0, r2
 800acf0:	4607      	mov	r7, r0
 800acf2:	bfa8      	it	ge
 800acf4:	4617      	movge	r7, r2
 800acf6:	4299      	cmp	r1, r3
 800acf8:	460e      	mov	r6, r1
 800acfa:	bfa8      	it	ge
 800acfc:	461e      	movge	r6, r3
 800acfe:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ad02:	4472      	add	r2, lr
 800ad04:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ad08:	4440      	add	r0, r8
 800ad0a:	4471      	add	r1, lr
 800ad0c:	4463      	add	r3, ip
 800ad0e:	b200      	sxth	r0, r0
 800ad10:	b212      	sxth	r2, r2
 800ad12:	b209      	sxth	r1, r1
 800ad14:	b21b      	sxth	r3, r3
 800ad16:	4290      	cmp	r0, r2
 800ad18:	bfac      	ite	ge
 800ad1a:	ebc7 0200 	rsbge	r2, r7, r0
 800ad1e:	ebc7 0202 	rsblt	r2, r7, r2
 800ad22:	4299      	cmp	r1, r3
 800ad24:	bfac      	ite	ge
 800ad26:	ebc6 0301 	rsbge	r3, r6, r1
 800ad2a:	ebc6 0303 	rsblt	r3, r6, r3
 800ad2e:	8027      	strh	r7, [r4, #0]
 800ad30:	8066      	strh	r6, [r4, #2]
 800ad32:	80a2      	strh	r2, [r4, #4]
 800ad34:	80e3      	strh	r3, [r4, #6]
 800ad36:	e7d4      	b.n	800ace2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ad38:	4620      	mov	r0, r4
 800ad3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ad3e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ad3e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ad42:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800ad46:	b383      	cbz	r3, 800adaa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ad48:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ad4a:	b374      	cbz	r4, 800adaa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ad4c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ad50:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ad54:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ad58:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ad5c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ad60:	b303      	cbz	r3, 800ada4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ad62:	4668      	mov	r0, sp
 800ad64:	1d21      	adds	r1, r4, #4
 800ad66:	f8ad 5000 	strh.w	r5, [sp]
 800ad6a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ad6e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ad72:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ad76:	f7ff ff43 	bl	800ac00 <_ZN8touchgfx4RectaNERKS0_>
 800ad7a:	4668      	mov	r0, sp
 800ad7c:	f7ff ff83 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad80:	b980      	cbnz	r0, 800ada4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ad82:	f8bd 3000 	ldrh.w	r3, [sp]
 800ad86:	88a2      	ldrh	r2, [r4, #4]
 800ad88:	4669      	mov	r1, sp
 800ad8a:	1a9b      	subs	r3, r3, r2
 800ad8c:	f8ad 3000 	strh.w	r3, [sp]
 800ad90:	88e2      	ldrh	r2, [r4, #6]
 800ad92:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ad96:	4620      	mov	r0, r4
 800ad98:	1a9b      	subs	r3, r3, r2
 800ad9a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ad9e:	6823      	ldr	r3, [r4, #0]
 800ada0:	689b      	ldr	r3, [r3, #8]
 800ada2:	4798      	blx	r3
 800ada4:	69a4      	ldr	r4, [r4, #24]
 800ada6:	2c00      	cmp	r4, #0
 800ada8:	d1d8      	bne.n	800ad5c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800adaa:	b002      	add	sp, #8
 800adac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800adb0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800adb0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800adb2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800adb6:	460d      	mov	r5, r1
 800adb8:	4616      	mov	r6, r2
 800adba:	b323      	cbz	r3, 800ae06 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800adbc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800adbe:	b314      	cbz	r4, 800ae06 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800adc0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800adc4:	b1eb      	cbz	r3, 800ae02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800adc6:	466b      	mov	r3, sp
 800adc8:	6828      	ldr	r0, [r5, #0]
 800adca:	6869      	ldr	r1, [r5, #4]
 800adcc:	c303      	stmia	r3!, {r0, r1}
 800adce:	4668      	mov	r0, sp
 800add0:	1d21      	adds	r1, r4, #4
 800add2:	f7ff ff15 	bl	800ac00 <_ZN8touchgfx4RectaNERKS0_>
 800add6:	4668      	mov	r0, sp
 800add8:	f7ff ff55 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800addc:	b988      	cbnz	r0, 800ae02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800adde:	f8bd 3000 	ldrh.w	r3, [sp]
 800ade2:	88a2      	ldrh	r2, [r4, #4]
 800ade4:	4669      	mov	r1, sp
 800ade6:	1a9b      	subs	r3, r3, r2
 800ade8:	f8ad 3000 	strh.w	r3, [sp]
 800adec:	88e2      	ldrh	r2, [r4, #6]
 800adee:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800adf2:	4620      	mov	r0, r4
 800adf4:	1a9b      	subs	r3, r3, r2
 800adf6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800adfa:	6823      	ldr	r3, [r4, #0]
 800adfc:	4632      	mov	r2, r6
 800adfe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ae00:	4798      	blx	r3
 800ae02:	69a4      	ldr	r4, [r4, #24]
 800ae04:	e7db      	b.n	800adbe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ae06:	b002      	add	sp, #8
 800ae08:	bd70      	pop	{r4, r5, r6, pc}

0800ae0a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800ae0a:	b513      	push	{r0, r1, r4, lr}
 800ae0c:	6803      	ldr	r3, [r0, #0]
 800ae0e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800ae12:	2300      	movs	r3, #0
 800ae14:	e9cd 3300 	strd	r3, r3, [sp]
 800ae18:	466b      	mov	r3, sp
 800ae1a:	47a0      	blx	r4
 800ae1c:	b002      	add	sp, #8
 800ae1e:	bd10      	pop	{r4, pc}

0800ae20 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800ae20:	2301      	movs	r3, #1
 800ae22:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800ae26:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800ae2a:	4770      	bx	lr

0800ae2c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800ae2c:	2301      	movs	r3, #1
 800ae2e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800ae32:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800ae36:	4770      	bx	lr

0800ae38 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800ae38:	2201      	movs	r2, #1
 800ae3a:	6843      	ldr	r3, [r0, #4]
 800ae3c:	725a      	strb	r2, [r3, #9]
 800ae3e:	6840      	ldr	r0, [r0, #4]
 800ae40:	6803      	ldr	r3, [r0, #0]
 800ae42:	691b      	ldr	r3, [r3, #16]
 800ae44:	4718      	bx	r3

0800ae46 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ae46:	6840      	ldr	r0, [r0, #4]
 800ae48:	6803      	ldr	r3, [r0, #0]
 800ae4a:	689b      	ldr	r3, [r3, #8]
 800ae4c:	4718      	bx	r3

0800ae4e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800ae4e:	b530      	push	{r4, r5, lr}
 800ae50:	b08b      	sub	sp, #44	@ 0x2c
 800ae52:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800ae56:	6804      	ldr	r4, [r0, #0]
 800ae58:	9509      	str	r5, [sp, #36]	@ 0x24
 800ae5a:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800ae5e:	9508      	str	r5, [sp, #32]
 800ae60:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800ae64:	9507      	str	r5, [sp, #28]
 800ae66:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800ae6a:	9506      	str	r5, [sp, #24]
 800ae6c:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800ae70:	9505      	str	r5, [sp, #20]
 800ae72:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800ae76:	9504      	str	r5, [sp, #16]
 800ae78:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800ae7c:	9503      	str	r5, [sp, #12]
 800ae7e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800ae82:	9502      	str	r5, [sp, #8]
 800ae84:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800ae88:	e9cd 3500 	strd	r3, r5, [sp]
 800ae8c:	4613      	mov	r3, r2
 800ae8e:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800ae90:	2200      	movs	r2, #0
 800ae92:	47a0      	blx	r4
 800ae94:	b00b      	add	sp, #44	@ 0x2c
 800ae96:	bd30      	pop	{r4, r5, pc}

0800ae98 <_ZN8touchgfx3HAL10beginFrameEv>:
 800ae98:	4b04      	ldr	r3, [pc, #16]	@ (800aeac <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800ae9a:	781b      	ldrb	r3, [r3, #0]
 800ae9c:	b123      	cbz	r3, 800aea8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800ae9e:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800aea2:	f080 0001 	eor.w	r0, r0, #1
 800aea6:	4770      	bx	lr
 800aea8:	2001      	movs	r0, #1
 800aeaa:	4770      	bx	lr
 800aeac:	20082ec2 	.word	0x20082ec2

0800aeb0 <_ZN8touchgfx3HAL8endFrameEv>:
 800aeb0:	b510      	push	{r4, lr}
 800aeb2:	4604      	mov	r4, r0
 800aeb4:	6840      	ldr	r0, [r0, #4]
 800aeb6:	6803      	ldr	r3, [r0, #0]
 800aeb8:	689b      	ldr	r3, [r3, #8]
 800aeba:	4798      	blx	r3
 800aebc:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800aec0:	b113      	cbz	r3, 800aec8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800aec2:	2301      	movs	r3, #1
 800aec4:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800aec8:	bd10      	pop	{r4, pc}

0800aeca <_ZN8touchgfx3HAL10initializeEv>:
 800aeca:	b510      	push	{r4, lr}
 800aecc:	4604      	mov	r4, r0
 800aece:	f7f7 f85d 	bl	8001f8c <_ZN8touchgfx10OSWrappers10initializeEv>
 800aed2:	f7f6 f93b 	bl	800114c <_ZN8touchgfx4GPIO4initEv>
 800aed6:	6860      	ldr	r0, [r4, #4]
 800aed8:	6803      	ldr	r3, [r0, #0]
 800aeda:	68db      	ldr	r3, [r3, #12]
 800aedc:	4798      	blx	r3
 800aede:	68e0      	ldr	r0, [r4, #12]
 800aee0:	6803      	ldr	r3, [r0, #0]
 800aee2:	689b      	ldr	r3, [r3, #8]
 800aee4:	4798      	blx	r3
 800aee6:	6823      	ldr	r3, [r4, #0]
 800aee8:	4620      	mov	r0, r4
 800aeea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800aeee:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800aef0:	4718      	bx	r3

0800aef2 <_ZN8touchgfx3HAL9taskEntryEv>:
 800aef2:	4604      	mov	r4, r0
 800aef4:	b508      	push	{r3, lr}
 800aef6:	6803      	ldr	r3, [r0, #0]
 800aef8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800aefc:	4798      	blx	r3
 800aefe:	6823      	ldr	r3, [r4, #0]
 800af00:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800af02:	4620      	mov	r0, r4
 800af04:	4798      	blx	r3
 800af06:	f7f7 f88d 	bl	8002024 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800af0a:	6823      	ldr	r3, [r4, #0]
 800af0c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800af0e:	e7f8      	b.n	800af02 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800af10 <_ZN8touchgfx3HAL4tickEv>:
 800af10:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800af12:	6803      	ldr	r3, [r0, #0]
 800af14:	4604      	mov	r4, r0
 800af16:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800af1a:	4798      	blx	r3
 800af1c:	4d59      	ldr	r5, [pc, #356]	@ (800b084 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800af1e:	2800      	cmp	r0, #0
 800af20:	f000 8095 	beq.w	800b04e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800af24:	2600      	movs	r6, #0
 800af26:	2001      	movs	r0, #1
 800af28:	f7f6 f912 	bl	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800af2c:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800af30:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800af34:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800af38:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800af3c:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800af40:	b133      	cbz	r3, 800af50 <_ZN8touchgfx3HAL4tickEv+0x40>
 800af42:	6823      	ldr	r3, [r4, #0]
 800af44:	4620      	mov	r0, r4
 800af46:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800af4a:	4798      	blx	r3
 800af4c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800af50:	2601      	movs	r6, #1
 800af52:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800af56:	6862      	ldr	r2, [r4, #4]
 800af58:	f083 0301 	eor.w	r3, r3, #1
 800af5c:	7253      	strb	r3, [r2, #9]
 800af5e:	702e      	strb	r6, [r5, #0]
 800af60:	f002 f84e 	bl	800d000 <_ZN8touchgfx11Application11getInstanceEv>
 800af64:	6803      	ldr	r3, [r0, #0]
 800af66:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800af68:	4798      	blx	r3
 800af6a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800af6e:	b90b      	cbnz	r3, 800af74 <_ZN8touchgfx3HAL4tickEv+0x64>
 800af70:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800af74:	f002 f844 	bl	800d000 <_ZN8touchgfx11Application11getInstanceEv>
 800af78:	6803      	ldr	r3, [r0, #0]
 800af7a:	695b      	ldr	r3, [r3, #20]
 800af7c:	4798      	blx	r3
 800af7e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800af80:	6803      	ldr	r3, [r0, #0]
 800af82:	691b      	ldr	r3, [r3, #16]
 800af84:	4798      	blx	r3
 800af86:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800af8a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800af8e:	3b01      	subs	r3, #1
 800af90:	b2db      	uxtb	r3, r3
 800af92:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800af96:	b10a      	cbz	r2, 800af9c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800af98:	2b00      	cmp	r3, #0
 800af9a:	d1eb      	bne.n	800af74 <_ZN8touchgfx3HAL4tickEv+0x64>
 800af9c:	4a3a      	ldr	r2, [pc, #232]	@ (800b088 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800af9e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800afa2:	7813      	ldrb	r3, [r2, #0]
 800afa4:	3301      	adds	r3, #1
 800afa6:	b25b      	sxtb	r3, r3
 800afa8:	4299      	cmp	r1, r3
 800afaa:	7013      	strb	r3, [r2, #0]
 800afac:	dc10      	bgt.n	800afd0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800afae:	2300      	movs	r3, #0
 800afb0:	68e0      	ldr	r0, [r4, #12]
 800afb2:	7013      	strb	r3, [r2, #0]
 800afb4:	6803      	ldr	r3, [r0, #0]
 800afb6:	aa03      	add	r2, sp, #12
 800afb8:	68db      	ldr	r3, [r3, #12]
 800afba:	a902      	add	r1, sp, #8
 800afbc:	4798      	blx	r3
 800afbe:	6823      	ldr	r3, [r4, #0]
 800afc0:	2800      	cmp	r0, #0
 800afc2:	d050      	beq.n	800b066 <_ZN8touchgfx3HAL4tickEv+0x156>
 800afc4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800afc8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800afcc:	4620      	mov	r0, r4
 800afce:	4798      	blx	r3
 800afd0:	2300      	movs	r3, #0
 800afd2:	6960      	ldr	r0, [r4, #20]
 800afd4:	f88d 3007 	strb.w	r3, [sp, #7]
 800afd8:	b158      	cbz	r0, 800aff2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800afda:	6803      	ldr	r3, [r0, #0]
 800afdc:	f10d 0107 	add.w	r1, sp, #7
 800afe0:	68db      	ldr	r3, [r3, #12]
 800afe2:	4798      	blx	r3
 800afe4:	b128      	cbz	r0, 800aff2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800afe6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800afe8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800afec:	6803      	ldr	r3, [r0, #0]
 800afee:	68db      	ldr	r3, [r3, #12]
 800aff0:	4798      	blx	r3
 800aff2:	f104 001c 	add.w	r0, r4, #28
 800aff6:	f005 f98f 	bl	8010318 <_ZN8touchgfx8Gestures4tickEv>
 800affa:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800affe:	b30b      	cbz	r3, 800b044 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b000:	6920      	ldr	r0, [r4, #16]
 800b002:	6803      	ldr	r3, [r0, #0]
 800b004:	691b      	ldr	r3, [r3, #16]
 800b006:	4798      	blx	r3
 800b008:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b00a:	4606      	mov	r6, r0
 800b00c:	b903      	cbnz	r3, 800b010 <_ZN8touchgfx3HAL4tickEv+0x100>
 800b00e:	6760      	str	r0, [r4, #116]	@ 0x74
 800b010:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b012:	4a1e      	ldr	r2, [pc, #120]	@ (800b08c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b014:	1af3      	subs	r3, r6, r3
 800b016:	4293      	cmp	r3, r2
 800b018:	d914      	bls.n	800b044 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b01a:	6920      	ldr	r0, [r4, #16]
 800b01c:	6803      	ldr	r3, [r0, #0]
 800b01e:	699b      	ldr	r3, [r3, #24]
 800b020:	4798      	blx	r3
 800b022:	2264      	movs	r2, #100	@ 0x64
 800b024:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b026:	1af3      	subs	r3, r6, r3
 800b028:	fbb3 f3f2 	udiv	r3, r3, r2
 800b02c:	fbb0 f0f3 	udiv	r0, r0, r3
 800b030:	2800      	cmp	r0, #0
 800b032:	dc1d      	bgt.n	800b070 <_ZN8touchgfx3HAL4tickEv+0x160>
 800b034:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800b038:	6920      	ldr	r0, [r4, #16]
 800b03a:	2100      	movs	r1, #0
 800b03c:	6803      	ldr	r3, [r0, #0]
 800b03e:	69db      	ldr	r3, [r3, #28]
 800b040:	4798      	blx	r3
 800b042:	6766      	str	r6, [r4, #116]	@ 0x74
 800b044:	f001 ffdc 	bl	800d000 <_ZN8touchgfx11Application11getInstanceEv>
 800b048:	6803      	ldr	r3, [r0, #0]
 800b04a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b04c:	4798      	blx	r3
 800b04e:	6823      	ldr	r3, [r4, #0]
 800b050:	4620      	mov	r0, r4
 800b052:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800b056:	4798      	blx	r3
 800b058:	2001      	movs	r0, #1
 800b05a:	f7f6 f893 	bl	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b05e:	2300      	movs	r3, #0
 800b060:	702b      	strb	r3, [r5, #0]
 800b062:	b004      	add	sp, #16
 800b064:	bd70      	pop	{r4, r5, r6, pc}
 800b066:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800b06a:	4620      	mov	r0, r4
 800b06c:	4798      	blx	r3
 800b06e:	e7af      	b.n	800afd0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b070:	2863      	cmp	r0, #99	@ 0x63
 800b072:	bfcb      	itete	gt
 800b074:	2300      	movgt	r3, #0
 800b076:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800b07a:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800b07e:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800b082:	e7d9      	b.n	800b038 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b084:	20082ec8 	.word	0x20082ec8
 800b088:	20082ec9 	.word	0x20082ec9
 800b08c:	05f5e100 	.word	0x05f5e100

0800b090 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b090:	b510      	push	{r4, lr}
 800b092:	4604      	mov	r4, r0
 800b094:	f7f6 ffaa 	bl	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800b098:	2200      	movs	r2, #0
 800b09a:	6863      	ldr	r3, [r4, #4]
 800b09c:	729a      	strb	r2, [r3, #10]
 800b09e:	bd10      	pop	{r4, pc}

0800b0a0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b0a0:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800b0a2:	301c      	adds	r0, #28
 800b0a4:	f005 b936 	b.w	8010314 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b0a8 <_ZN8touchgfx3HAL5touchEll>:
 800b0a8:	b530      	push	{r4, r5, lr}
 800b0aa:	4604      	mov	r4, r0
 800b0ac:	b087      	sub	sp, #28
 800b0ae:	a804      	add	r0, sp, #16
 800b0b0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b0b4:	f001 fd8c 	bl	800cbd0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b0b8:	9b04      	ldr	r3, [sp, #16]
 800b0ba:	a906      	add	r1, sp, #24
 800b0bc:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b0c0:	9b05      	ldr	r3, [sp, #20]
 800b0c2:	a803      	add	r0, sp, #12
 800b0c4:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b0c8:	f001 fdd4 	bl	800cc74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b0cc:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800b0d0:	f104 001c 	add.w	r0, r4, #28
 800b0d4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b0d8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b0dc:	b189      	cbz	r1, 800b102 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b0de:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800b0e2:	9300      	str	r3, [sp, #0]
 800b0e4:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800b0e8:	4613      	mov	r3, r2
 800b0ea:	462a      	mov	r2, r5
 800b0ec:	f005 f922 	bl	8010334 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b0f0:	b128      	cbz	r0, 800b0fe <_ZN8touchgfx3HAL5touchEll+0x56>
 800b0f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b0f6:	6623      	str	r3, [r4, #96]	@ 0x60
 800b0f8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b0fc:	6663      	str	r3, [r4, #100]	@ 0x64
 800b0fe:	b007      	add	sp, #28
 800b100:	bd30      	pop	{r4, r5, pc}
 800b102:	f005 f957 	bl	80103b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b106:	2301      	movs	r3, #1
 800b108:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b10c:	e7f1      	b.n	800b0f2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b10e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b10e:	b510      	push	{r4, lr}
 800b110:	2b00      	cmp	r3, #0
 800b112:	d046      	beq.n	800b1a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b114:	ea81 0002 	eor.w	r0, r1, r2
 800b118:	07c4      	lsls	r4, r0, #31
 800b11a:	d508      	bpl.n	800b12e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b11c:	440b      	add	r3, r1
 800b11e:	3a01      	subs	r2, #1
 800b120:	428b      	cmp	r3, r1
 800b122:	d93e      	bls.n	800b1a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b124:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b128:	f801 0b01 	strb.w	r0, [r1], #1
 800b12c:	e7f8      	b.n	800b120 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b12e:	07d0      	lsls	r0, r2, #31
 800b130:	bf42      	ittt	mi
 800b132:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b136:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b13a:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b13e:	2b01      	cmp	r3, #1
 800b140:	d911      	bls.n	800b166 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b142:	ea81 0402 	eor.w	r4, r1, r2
 800b146:	07a4      	lsls	r4, r4, #30
 800b148:	4610      	mov	r0, r2
 800b14a:	d022      	beq.n	800b192 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b14c:	f023 0401 	bic.w	r4, r3, #1
 800b150:	440c      	add	r4, r1
 800b152:	428c      	cmp	r4, r1
 800b154:	4602      	mov	r2, r0
 800b156:	d904      	bls.n	800b162 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b158:	8812      	ldrh	r2, [r2, #0]
 800b15a:	3002      	adds	r0, #2
 800b15c:	f821 2b02 	strh.w	r2, [r1], #2
 800b160:	e7f7      	b.n	800b152 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b162:	f003 0301 	and.w	r3, r3, #1
 800b166:	f023 0003 	bic.w	r0, r3, #3
 800b16a:	4408      	add	r0, r1
 800b16c:	4288      	cmp	r0, r1
 800b16e:	4614      	mov	r4, r2
 800b170:	d904      	bls.n	800b17c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b172:	6824      	ldr	r4, [r4, #0]
 800b174:	3204      	adds	r2, #4
 800b176:	f841 4b04 	str.w	r4, [r1], #4
 800b17a:	e7f7      	b.n	800b16c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b17c:	f003 0303 	and.w	r3, r3, #3
 800b180:	440b      	add	r3, r1
 800b182:	3a01      	subs	r2, #1
 800b184:	428b      	cmp	r3, r1
 800b186:	d90c      	bls.n	800b1a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b188:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b18c:	f801 0b01 	strb.w	r0, [r1], #1
 800b190:	e7f8      	b.n	800b184 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b192:	0790      	lsls	r0, r2, #30
 800b194:	d0e7      	beq.n	800b166 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b196:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b19a:	3b02      	subs	r3, #2
 800b19c:	f821 0b02 	strh.w	r0, [r1], #2
 800b1a0:	e7e1      	b.n	800b166 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b1a2:	2001      	movs	r0, #1
 800b1a4:	bd10      	pop	{r4, pc}

0800b1a6 <_ZN8touchgfx3HAL7noTouchEv>:
 800b1a6:	b510      	push	{r4, lr}
 800b1a8:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800b1ac:	4604      	mov	r4, r0
 800b1ae:	b153      	cbz	r3, 800b1c6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b1b0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800b1b4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800b1b8:	2101      	movs	r1, #1
 800b1ba:	301c      	adds	r0, #28
 800b1bc:	f005 f8fa 	bl	80103b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b1c0:	2300      	movs	r3, #0
 800b1c2:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b1c6:	bd10      	pop	{r4, pc}

0800b1c8 <_ZN8touchgfx3HAL3lcdEv>:
 800b1c8:	4b04      	ldr	r3, [pc, #16]	@ (800b1dc <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800b1ca:	681b      	ldr	r3, [r3, #0]
 800b1cc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800b1d0:	b10a      	cbz	r2, 800b1d6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800b1d2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800b1d4:	b900      	cbnz	r0, 800b1d8 <_ZN8touchgfx3HAL3lcdEv+0x10>
 800b1d6:	6898      	ldr	r0, [r3, #8]
 800b1d8:	4770      	bx	lr
 800b1da:	bf00      	nop
 800b1dc:	20082ec4 	.word	0x20082ec4

0800b1e0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b1e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b1e4:	4604      	mov	r4, r0
 800b1e6:	2000      	movs	r0, #0
 800b1e8:	b085      	sub	sp, #20
 800b1ea:	ad04      	add	r5, sp, #16
 800b1ec:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b1f0:	69a0      	ldr	r0, [r4, #24]
 800b1f2:	4699      	mov	r9, r3
 800b1f4:	6806      	ldr	r6, [r0, #0]
 800b1f6:	9501      	str	r5, [sp, #4]
 800b1f8:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800b1fc:	460f      	mov	r7, r1
 800b1fe:	9500      	str	r5, [sp, #0]
 800b200:	6835      	ldr	r5, [r6, #0]
 800b202:	4690      	mov	r8, r2
 800b204:	47a8      	blx	r5
 800b206:	4d10      	ldr	r5, [pc, #64]	@ (800b248 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b208:	4606      	mov	r6, r0
 800b20a:	f8a5 9000 	strh.w	r9, [r5]
 800b20e:	f7ff ffdb 	bl	800b1c8 <_ZN8touchgfx3HAL3lcdEv>
 800b212:	6803      	ldr	r3, [r0, #0]
 800b214:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b216:	4798      	blx	r3
 800b218:	b128      	cbz	r0, 800b226 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b21a:	2801      	cmp	r0, #1
 800b21c:	d00b      	beq.n	800b236 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b21e:	4630      	mov	r0, r6
 800b220:	b005      	add	sp, #20
 800b222:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b226:	882b      	ldrh	r3, [r5, #0]
 800b228:	fb08 7203 	mla	r2, r8, r3, r7
 800b22c:	9b03      	ldr	r3, [sp, #12]
 800b22e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b232:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800b234:	e7f3      	b.n	800b21e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b236:	882a      	ldrh	r2, [r5, #0]
 800b238:	9b03      	ldr	r3, [sp, #12]
 800b23a:	fb08 7202 	mla	r2, r8, r2, r7
 800b23e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b242:	1a9a      	subs	r2, r3, r2
 800b244:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800b246:	e7ea      	b.n	800b21e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b248:	20082ebe 	.word	0x20082ebe

0800b24c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b24c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b24e:	b08b      	sub	sp, #44	@ 0x2c
 800b250:	4617      	mov	r7, r2
 800b252:	4604      	mov	r4, r0
 800b254:	460e      	mov	r6, r1
 800b256:	461d      	mov	r5, r3
 800b258:	f7ff ffb6 	bl	800b1c8 <_ZN8touchgfx3HAL3lcdEv>
 800b25c:	6803      	ldr	r3, [r0, #0]
 800b25e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b260:	4798      	blx	r3
 800b262:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b266:	9007      	str	r0, [sp, #28]
 800b268:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b26c:	4b0d      	ldr	r3, [pc, #52]	@ (800b2a4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b26e:	6822      	ldr	r2, [r4, #0]
 800b270:	881b      	ldrh	r3, [r3, #0]
 800b272:	4631      	mov	r1, r6
 800b274:	9306      	str	r3, [sp, #24]
 800b276:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b27a:	4620      	mov	r0, r4
 800b27c:	9305      	str	r3, [sp, #20]
 800b27e:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800b282:	9304      	str	r3, [sp, #16]
 800b284:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b288:	9303      	str	r3, [sp, #12]
 800b28a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b28e:	9302      	str	r3, [sp, #8]
 800b290:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b294:	e9cd 5300 	strd	r5, r3, [sp]
 800b298:	463b      	mov	r3, r7
 800b29a:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800b29c:	2200      	movs	r2, #0
 800b29e:	47a8      	blx	r5
 800b2a0:	b00b      	add	sp, #44	@ 0x2c
 800b2a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b2a4:	20082ebe 	.word	0x20082ebe

0800b2a8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b2a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b2ac:	4698      	mov	r8, r3
 800b2ae:	6803      	ldr	r3, [r0, #0]
 800b2b0:	b08b      	sub	sp, #44	@ 0x2c
 800b2b2:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800b2b4:	4b14      	ldr	r3, [pc, #80]	@ (800b308 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b2b6:	4617      	mov	r7, r2
 800b2b8:	f8b3 9000 	ldrh.w	r9, [r3]
 800b2bc:	460e      	mov	r6, r1
 800b2be:	4604      	mov	r4, r0
 800b2c0:	f7ff ff82 	bl	800b1c8 <_ZN8touchgfx3HAL3lcdEv>
 800b2c4:	6803      	ldr	r3, [r0, #0]
 800b2c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b2c8:	4798      	blx	r3
 800b2ca:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b2ce:	2200      	movs	r2, #0
 800b2d0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b2d4:	2302      	movs	r3, #2
 800b2d6:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b2da:	2301      	movs	r3, #1
 800b2dc:	9305      	str	r3, [sp, #20]
 800b2de:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b2e2:	4631      	mov	r1, r6
 800b2e4:	9304      	str	r3, [sp, #16]
 800b2e6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b2ea:	4620      	mov	r0, r4
 800b2ec:	9303      	str	r3, [sp, #12]
 800b2ee:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b2f2:	9302      	str	r3, [sp, #8]
 800b2f4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b2f8:	e9cd 8300 	strd	r8, r3, [sp]
 800b2fc:	463b      	mov	r3, r7
 800b2fe:	47a8      	blx	r5
 800b300:	b00b      	add	sp, #44	@ 0x2c
 800b302:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b306:	bf00      	nop
 800b308:	20082ebe 	.word	0x20082ebe

0800b30c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b30c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b310:	4698      	mov	r8, r3
 800b312:	6803      	ldr	r3, [r0, #0]
 800b314:	b087      	sub	sp, #28
 800b316:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800b318:	4b10      	ldr	r3, [pc, #64]	@ (800b35c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b31a:	460e      	mov	r6, r1
 800b31c:	f8b3 9000 	ldrh.w	r9, [r3]
 800b320:	4617      	mov	r7, r2
 800b322:	4604      	mov	r4, r0
 800b324:	f7ff ff50 	bl	800b1c8 <_ZN8touchgfx3HAL3lcdEv>
 800b328:	6803      	ldr	r3, [r0, #0]
 800b32a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b32c:	4798      	blx	r3
 800b32e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800b332:	f8cd 900c 	str.w	r9, [sp, #12]
 800b336:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b33a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800b33e:	463a      	mov	r2, r7
 800b340:	9302      	str	r3, [sp, #8]
 800b342:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800b346:	4631      	mov	r1, r6
 800b348:	9301      	str	r3, [sp, #4]
 800b34a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800b34e:	4620      	mov	r0, r4
 800b350:	9300      	str	r3, [sp, #0]
 800b352:	4643      	mov	r3, r8
 800b354:	47a8      	blx	r5
 800b356:	b007      	add	sp, #28
 800b358:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b35c:	20082ebe 	.word	0x20082ebe

0800b360 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b364:	4604      	mov	r4, r0
 800b366:	b08f      	sub	sp, #60	@ 0x3c
 800b368:	4610      	mov	r0, r2
 800b36a:	460d      	mov	r5, r1
 800b36c:	4691      	mov	r9, r2
 800b36e:	461e      	mov	r6, r3
 800b370:	f004 fd54 	bl	800fe1c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b374:	2800      	cmp	r0, #0
 800b376:	f000 809d 	beq.w	800b4b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b37a:	6823      	ldr	r3, [r4, #0]
 800b37c:	4620      	mov	r0, r4
 800b37e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b380:	4798      	blx	r3
 800b382:	6823      	ldr	r3, [r4, #0]
 800b384:	f8df b190 	ldr.w	fp, [pc, #400]	@ 800b518 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b388:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b38a:	4620      	mov	r0, r4
 800b38c:	4798      	blx	r3
 800b38e:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800b51c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b392:	f8bb 3000 	ldrh.w	r3, [fp]
 800b396:	4f5d      	ldr	r7, [pc, #372]	@ (800b50c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b398:	9301      	str	r3, [sp, #4]
 800b39a:	f8ba 3000 	ldrh.w	r3, [sl]
 800b39e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800b3a2:	9302      	str	r3, [sp, #8]
 800b3a4:	883b      	ldrh	r3, [r7, #0]
 800b3a6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b3aa:	9303      	str	r3, [sp, #12]
 800b3ac:	4b58      	ldr	r3, [pc, #352]	@ (800b510 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b3ae:	4640      	mov	r0, r8
 800b3b0:	881a      	ldrh	r2, [r3, #0]
 800b3b2:	9305      	str	r3, [sp, #20]
 800b3b4:	9204      	str	r2, [sp, #16]
 800b3b6:	f004 fdc5 	bl	800ff44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b3ba:	8038      	strh	r0, [r7, #0]
 800b3bc:	4640      	mov	r0, r8
 800b3be:	f004 fdf5 	bl	800ffac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b3c2:	9b05      	ldr	r3, [sp, #20]
 800b3c4:	b280      	uxth	r0, r0
 800b3c6:	8018      	strh	r0, [r3, #0]
 800b3c8:	4b52      	ldr	r3, [pc, #328]	@ (800b514 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b3ca:	781b      	ldrb	r3, [r3, #0]
 800b3cc:	2b00      	cmp	r3, #0
 800b3ce:	d174      	bne.n	800b4ba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b3d0:	883b      	ldrh	r3, [r7, #0]
 800b3d2:	f8aa 0000 	strh.w	r0, [sl]
 800b3d6:	f8ab 3000 	strh.w	r3, [fp]
 800b3da:	4648      	mov	r0, r9
 800b3dc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800b3e0:	f004 fd1c 	bl	800fe1c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b3e4:	2200      	movs	r2, #0
 800b3e6:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800b3ea:	4611      	mov	r1, r2
 800b3ec:	4628      	mov	r0, r5
 800b3ee:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b3f2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b3f6:	f7f7 ff66 	bl	80032c6 <_ZN8touchgfx8Drawable5setXYEss>
 800b3fa:	2301      	movs	r3, #1
 800b3fc:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800b400:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800b404:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b408:	2b00      	cmp	r3, #0
 800b40a:	dd5c      	ble.n	800b4c6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b40c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b410:	2b00      	cmp	r3, #0
 800b412:	dd58      	ble.n	800b4c6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b414:	462a      	mov	r2, r5
 800b416:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b41a:	ab0a      	add	r3, sp, #40	@ 0x28
 800b41c:	6851      	ldr	r1, [r2, #4]
 800b41e:	c303      	stmia	r3!, {r0, r1}
 800b420:	4631      	mov	r1, r6
 800b422:	a80a      	add	r0, sp, #40	@ 0x28
 800b424:	f7ff fbec 	bl	800ac00 <_ZN8touchgfx4RectaNERKS0_>
 800b428:	2100      	movs	r1, #0
 800b42a:	4b38      	ldr	r3, [pc, #224]	@ (800b50c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b42c:	910c      	str	r1, [sp, #48]	@ 0x30
 800b42e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b432:	4b37      	ldr	r3, [pc, #220]	@ (800b510 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b434:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800b438:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b43c:	aa0a      	add	r2, sp, #40	@ 0x28
 800b43e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800b442:	ab08      	add	r3, sp, #32
 800b444:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b448:	e883 0003 	stmia.w	r3, {r0, r1}
 800b44c:	4618      	mov	r0, r3
 800b44e:	a90c      	add	r1, sp, #48	@ 0x30
 800b450:	f7ff fbd6 	bl	800ac00 <_ZN8touchgfx4RectaNERKS0_>
 800b454:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800b456:	2b00      	cmp	r3, #0
 800b458:	d13c      	bne.n	800b4d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b45a:	2000      	movs	r0, #0
 800b45c:	2600      	movs	r6, #0
 800b45e:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800b462:	696b      	ldr	r3, [r5, #20]
 800b464:	682a      	ldr	r2, [r5, #0]
 800b466:	616e      	str	r6, [r5, #20]
 800b468:	9305      	str	r3, [sp, #20]
 800b46a:	6892      	ldr	r2, [r2, #8]
 800b46c:	a908      	add	r1, sp, #32
 800b46e:	4628      	mov	r0, r5
 800b470:	4790      	blx	r2
 800b472:	9b05      	ldr	r3, [sp, #20]
 800b474:	4652      	mov	r2, sl
 800b476:	616b      	str	r3, [r5, #20]
 800b478:	4649      	mov	r1, r9
 800b47a:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800b47e:	4628      	mov	r0, r5
 800b480:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800b484:	f7f7 ff1f 	bl	80032c6 <_ZN8touchgfx8Drawable5setXYEss>
 800b488:	9a01      	ldr	r2, [sp, #4]
 800b48a:	4b23      	ldr	r3, [pc, #140]	@ (800b518 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b48c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800b490:	801a      	strh	r2, [r3, #0]
 800b492:	9a02      	ldr	r2, [sp, #8]
 800b494:	4b21      	ldr	r3, [pc, #132]	@ (800b51c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b496:	4620      	mov	r0, r4
 800b498:	801a      	strh	r2, [r3, #0]
 800b49a:	9a03      	ldr	r2, [sp, #12]
 800b49c:	4b1b      	ldr	r3, [pc, #108]	@ (800b50c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b49e:	801a      	strh	r2, [r3, #0]
 800b4a0:	4b1b      	ldr	r3, [pc, #108]	@ (800b510 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b4a2:	9a04      	ldr	r2, [sp, #16]
 800b4a4:	801a      	strh	r2, [r3, #0]
 800b4a6:	6823      	ldr	r3, [r4, #0]
 800b4a8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b4aa:	4798      	blx	r3
 800b4ac:	6823      	ldr	r3, [r4, #0]
 800b4ae:	4620      	mov	r0, r4
 800b4b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b4b2:	4798      	blx	r3
 800b4b4:	b00f      	add	sp, #60	@ 0x3c
 800b4b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b4ba:	883b      	ldrh	r3, [r7, #0]
 800b4bc:	f8ab 0000 	strh.w	r0, [fp]
 800b4c0:	f8aa 3000 	strh.w	r3, [sl]
 800b4c4:	e789      	b.n	800b3da <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b4c6:	462a      	mov	r2, r5
 800b4c8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b4cc:	ab0a      	add	r3, sp, #40	@ 0x28
 800b4ce:	6851      	ldr	r1, [r2, #4]
 800b4d0:	c303      	stmia	r3!, {r0, r1}
 800b4d2:	e7a9      	b.n	800b428 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b4d4:	a807      	add	r0, sp, #28
 800b4d6:	f004 fe73 	bl	80101c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b4da:	4606      	mov	r6, r0
 800b4dc:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800b4de:	6803      	ldr	r3, [r0, #0]
 800b4e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b4e2:	4798      	blx	r3
 800b4e4:	4286      	cmp	r6, r0
 800b4e6:	d1b8      	bne.n	800b45a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b4e8:	f7ff fe6e 	bl	800b1c8 <_ZN8touchgfx3HAL3lcdEv>
 800b4ec:	6803      	ldr	r3, [r0, #0]
 800b4ee:	4606      	mov	r6, r0
 800b4f0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b4f2:	a807      	add	r0, sp, #28
 800b4f4:	9305      	str	r3, [sp, #20]
 800b4f6:	f004 fe63 	bl	80101c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b4fa:	9b05      	ldr	r3, [sp, #20]
 800b4fc:	4601      	mov	r1, r0
 800b4fe:	4630      	mov	r0, r6
 800b500:	4798      	blx	r3
 800b502:	f080 0001 	eor.w	r0, r0, #1
 800b506:	b2c0      	uxtb	r0, r0
 800b508:	e7a8      	b.n	800b45c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b50a:	bf00      	nop
 800b50c:	20082eb8 	.word	0x20082eb8
 800b510:	20082eba 	.word	0x20082eba
 800b514:	20082ebc 	.word	0x20082ebc
 800b518:	20082ebe 	.word	0x20082ebe
 800b51c:	20082ec0 	.word	0x20082ec0

0800b520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b520:	b510      	push	{r4, lr}
 800b522:	4b07      	ldr	r3, [pc, #28]	@ (800b540 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b524:	4604      	mov	r4, r0
 800b526:	781b      	ldrb	r3, [r3, #0]
 800b528:	b13b      	cbz	r3, 800b53a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b52a:	6803      	ldr	r3, [r0, #0]
 800b52c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b52e:	4798      	blx	r3
 800b530:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b532:	4283      	cmp	r3, r0
 800b534:	d101      	bne.n	800b53a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b536:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800b538:	bd10      	pop	{r4, pc}
 800b53a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800b53c:	e7fc      	b.n	800b538 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b53e:	bf00      	nop
 800b540:	20082ec2 	.word	0x20082ec2

0800b544 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b544:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b548:	461d      	mov	r5, r3
 800b54a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b54e:	2400      	movs	r4, #0
 800b550:	b08a      	sub	sp, #40	@ 0x28
 800b552:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b556:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b55a:	4690      	mov	r8, r2
 800b55c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b560:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b564:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800b568:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b56c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b570:	4607      	mov	r7, r0
 800b572:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b576:	9404      	str	r4, [sp, #16]
 800b578:	f88d 4020 	strb.w	r4, [sp, #32]
 800b57c:	f7ff ffd0 	bl	800b520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b580:	fb06 8505 	mla	r5, r6, r5, r8
 800b584:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b588:	6878      	ldr	r0, [r7, #4]
 800b58a:	9505      	str	r5, [sp, #20]
 800b58c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b590:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b594:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800b598:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b59c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b5a0:	6803      	ldr	r3, [r0, #0]
 800b5a2:	a901      	add	r1, sp, #4
 800b5a4:	685b      	ldr	r3, [r3, #4]
 800b5a6:	4798      	blx	r3
 800b5a8:	b00a      	add	sp, #40	@ 0x28
 800b5aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b5ae <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b5ae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b5b2:	2400      	movs	r4, #0
 800b5b4:	461d      	mov	r5, r3
 800b5b6:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800b5ba:	4691      	mov	r9, r2
 800b5bc:	b08b      	sub	sp, #44	@ 0x2c
 800b5be:	4688      	mov	r8, r1
 800b5c0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800b5c4:	4607      	mov	r7, r0
 800b5c6:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b5ca:	9404      	str	r4, [sp, #16]
 800b5cc:	f7ff ffa8 	bl	800b520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b5d0:	fb06 9505 	mla	r5, r6, r5, r9
 800b5d4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b5d8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b5dc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b5e0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b5e4:	6878      	ldr	r0, [r7, #4]
 800b5e6:	9505      	str	r5, [sp, #20]
 800b5e8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b5ec:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b5f0:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b5f4:	f8cd 8010 	str.w	r8, [sp, #16]
 800b5f8:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b5fc:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b600:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b604:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b608:	6803      	ldr	r3, [r0, #0]
 800b60a:	a901      	add	r1, sp, #4
 800b60c:	685b      	ldr	r3, [r3, #4]
 800b60e:	4798      	blx	r3
 800b610:	b00b      	add	sp, #44	@ 0x2c
 800b612:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b618 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b618:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b61c:	4698      	mov	r8, r3
 800b61e:	2300      	movs	r3, #0
 800b620:	b08a      	sub	sp, #40	@ 0x28
 800b622:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800b626:	4606      	mov	r6, r0
 800b628:	2d0b      	cmp	r5, #11
 800b62a:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800b62e:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800b632:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800b636:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800b63a:	9304      	str	r3, [sp, #16]
 800b63c:	d137      	bne.n	800b6ae <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b63e:	2380      	movs	r3, #128	@ 0x80
 800b640:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b644:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b648:	f88d 0020 	strb.w	r0, [sp, #32]
 800b64c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b650:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b654:	4630      	mov	r0, r6
 800b656:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b65a:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b65e:	9203      	str	r2, [sp, #12]
 800b660:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b664:	f7ff ff5c 	bl	800b520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b668:	2c0b      	cmp	r4, #11
 800b66a:	bf8c      	ite	hi
 800b66c:	2100      	movhi	r1, #0
 800b66e:	4b1b      	ldrls	r3, [pc, #108]	@ (800b6dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b670:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800b674:	bf98      	it	ls
 800b676:	5d19      	ldrbls	r1, [r3, r4]
 800b678:	fb02 8307 	mla	r3, r2, r7, r8
 800b67c:	10c9      	asrs	r1, r1, #3
 800b67e:	fb01 0003 	mla	r0, r1, r3, r0
 800b682:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800b686:	9005      	str	r0, [sp, #20]
 800b688:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b68c:	2300      	movs	r3, #0
 800b68e:	6870      	ldr	r0, [r6, #4]
 800b690:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b694:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800b698:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b69c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b6a0:	6803      	ldr	r3, [r0, #0]
 800b6a2:	a901      	add	r1, sp, #4
 800b6a4:	685b      	ldr	r3, [r3, #4]
 800b6a6:	4798      	blx	r3
 800b6a8:	b00a      	add	sp, #40	@ 0x28
 800b6aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b6ae:	2d02      	cmp	r5, #2
 800b6b0:	d109      	bne.n	800b6c6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b6b2:	28ff      	cmp	r0, #255	@ 0xff
 800b6b4:	d105      	bne.n	800b6c2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b6b6:	f1bc 0f00 	cmp.w	ip, #0
 800b6ba:	bf14      	ite	ne
 800b6bc:	2340      	movne	r3, #64	@ 0x40
 800b6be:	2320      	moveq	r3, #32
 800b6c0:	e7be      	b.n	800b640 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b6c2:	2340      	movs	r3, #64	@ 0x40
 800b6c4:	e7bc      	b.n	800b640 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b6c6:	28ff      	cmp	r0, #255	@ 0xff
 800b6c8:	d105      	bne.n	800b6d6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b6ca:	f1bc 0f00 	cmp.w	ip, #0
 800b6ce:	bf14      	ite	ne
 800b6d0:	2304      	movne	r3, #4
 800b6d2:	2301      	moveq	r3, #1
 800b6d4:	e7b4      	b.n	800b640 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b6d6:	2304      	movs	r3, #4
 800b6d8:	e7b2      	b.n	800b640 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b6da:	bf00      	nop
 800b6dc:	08035950 	.word	0x08035950

0800b6e0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b6e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b6e4:	b08b      	sub	sp, #44	@ 0x2c
 800b6e6:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800b6ea:	461d      	mov	r5, r3
 800b6ec:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800b6f0:	bf14      	ite	ne
 800b6f2:	2308      	movne	r3, #8
 800b6f4:	2302      	moveq	r3, #2
 800b6f6:	2400      	movs	r4, #0
 800b6f8:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b6fc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b700:	4688      	mov	r8, r1
 800b702:	4693      	mov	fp, r2
 800b704:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800b708:	9404      	str	r4, [sp, #16]
 800b70a:	4607      	mov	r7, r0
 800b70c:	f7ff ff08 	bl	800b520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b710:	2e0b      	cmp	r6, #11
 800b712:	bf98      	it	ls
 800b714:	4b15      	ldrls	r3, [pc, #84]	@ (800b76c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b716:	fb05 b50a 	mla	r5, r5, sl, fp
 800b71a:	bf98      	it	ls
 800b71c:	5d9c      	ldrbls	r4, [r3, r6]
 800b71e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b722:	10e4      	asrs	r4, r4, #3
 800b724:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b728:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b72c:	fb04 0405 	mla	r4, r4, r5, r0
 800b730:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b734:	2300      	movs	r3, #0
 800b736:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800b73a:	6878      	ldr	r0, [r7, #4]
 800b73c:	9405      	str	r4, [sp, #20]
 800b73e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b742:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b746:	f8cd 8010 	str.w	r8, [sp, #16]
 800b74a:	f88d 9020 	strb.w	r9, [sp, #32]
 800b74e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800b752:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b756:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800b75a:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800b75e:	6803      	ldr	r3, [r0, #0]
 800b760:	a901      	add	r1, sp, #4
 800b762:	685b      	ldr	r3, [r3, #4]
 800b764:	4798      	blx	r3
 800b766:	b00b      	add	sp, #44	@ 0x2c
 800b768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b76c:	08035950 	.word	0x08035950

0800b770 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b770:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b774:	461e      	mov	r6, r3
 800b776:	4b0a      	ldr	r3, [pc, #40]	@ (800b7a0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b778:	460f      	mov	r7, r1
 800b77a:	881d      	ldrh	r5, [r3, #0]
 800b77c:	4690      	mov	r8, r2
 800b77e:	f7ff fd23 	bl	800b1c8 <_ZN8touchgfx3HAL3lcdEv>
 800b782:	6803      	ldr	r3, [r0, #0]
 800b784:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b786:	4798      	blx	r3
 800b788:	280b      	cmp	r0, #11
 800b78a:	bf8e      	itee	hi
 800b78c:	2400      	movhi	r4, #0
 800b78e:	4b05      	ldrls	r3, [pc, #20]	@ (800b7a4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b790:	5c1c      	ldrbls	r4, [r3, r0]
 800b792:	fb08 7005 	mla	r0, r8, r5, r7
 800b796:	10e4      	asrs	r4, r4, #3
 800b798:	fb04 6000 	mla	r0, r4, r0, r6
 800b79c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b7a0:	20082ebe 	.word	0x20082ebe
 800b7a4:	08035950 	.word	0x08035950

0800b7a8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b7a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b7aa:	2500      	movs	r5, #0
 800b7ac:	b08b      	sub	sp, #44	@ 0x2c
 800b7ae:	461f      	mov	r7, r3
 800b7b0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b7b4:	4604      	mov	r4, r0
 800b7b6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b7ba:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b7be:	4616      	mov	r6, r2
 800b7c0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b7c4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b7c8:	9504      	str	r5, [sp, #16]
 800b7ca:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b7ce:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b7d2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b7d6:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b7da:	f88d 3020 	strb.w	r3, [sp, #32]
 800b7de:	f7ff fe9f 	bl	800b520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b7e2:	463a      	mov	r2, r7
 800b7e4:	4631      	mov	r1, r6
 800b7e6:	4603      	mov	r3, r0
 800b7e8:	4620      	mov	r0, r4
 800b7ea:	f7ff ffc1 	bl	800b770 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b7ee:	4b0e      	ldr	r3, [pc, #56]	@ (800b828 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b7f0:	9005      	str	r0, [sp, #20]
 800b7f2:	881b      	ldrh	r3, [r3, #0]
 800b7f4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b7f8:	f7ff fce6 	bl	800b1c8 <_ZN8touchgfx3HAL3lcdEv>
 800b7fc:	6803      	ldr	r3, [r0, #0]
 800b7fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b800:	4798      	blx	r3
 800b802:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800b804:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800b808:	9304      	str	r3, [sp, #16]
 800b80a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b80e:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800b812:	6860      	ldr	r0, [r4, #4]
 800b814:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b818:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800b81c:	6803      	ldr	r3, [r0, #0]
 800b81e:	a901      	add	r1, sp, #4
 800b820:	685b      	ldr	r3, [r3, #4]
 800b822:	4798      	blx	r3
 800b824:	b00b      	add	sp, #44	@ 0x2c
 800b826:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b828:	20082ebe 	.word	0x20082ebe

0800b82c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b82c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b82e:	b08d      	sub	sp, #52	@ 0x34
 800b830:	466b      	mov	r3, sp
 800b832:	e883 0006 	stmia.w	r3, {r1, r2}
 800b836:	2300      	movs	r3, #0
 800b838:	2501      	movs	r5, #1
 800b83a:	9306      	str	r3, [sp, #24]
 800b83c:	6803      	ldr	r3, [r0, #0]
 800b83e:	9503      	str	r5, [sp, #12]
 800b840:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b842:	4604      	mov	r4, r0
 800b844:	f8bd 6000 	ldrh.w	r6, [sp]
 800b848:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b84c:	4798      	blx	r3
 800b84e:	463a      	mov	r2, r7
 800b850:	4631      	mov	r1, r6
 800b852:	4603      	mov	r3, r0
 800b854:	4620      	mov	r0, r4
 800b856:	f7ff ff8b 	bl	800b770 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b85a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800b85c:	9004      	str	r0, [sp, #16]
 800b85e:	9307      	str	r3, [sp, #28]
 800b860:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b864:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b868:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b86c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b870:	4b0e      	ldr	r3, [pc, #56]	@ (800b8ac <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b872:	881b      	ldrh	r3, [r3, #0]
 800b874:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b878:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b87c:	f7ff fca4 	bl	800b1c8 <_ZN8touchgfx3HAL3lcdEv>
 800b880:	6803      	ldr	r3, [r0, #0]
 800b882:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b884:	4798      	blx	r3
 800b886:	23ff      	movs	r3, #255	@ 0xff
 800b888:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b88c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b890:	6860      	ldr	r0, [r4, #4]
 800b892:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b896:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b89a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b89e:	6803      	ldr	r3, [r0, #0]
 800b8a0:	a903      	add	r1, sp, #12
 800b8a2:	685b      	ldr	r3, [r3, #4]
 800b8a4:	4798      	blx	r3
 800b8a6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800b8a8:	b00d      	add	sp, #52	@ 0x34
 800b8aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b8ac:	20082ebe 	.word	0x20082ebe

0800b8b0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b8b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b8b4:	b08c      	sub	sp, #48	@ 0x30
 800b8b6:	466d      	mov	r5, sp
 800b8b8:	461e      	mov	r6, r3
 800b8ba:	2300      	movs	r3, #0
 800b8bc:	e885 0006 	stmia.w	r5, {r1, r2}
 800b8c0:	2501      	movs	r5, #1
 800b8c2:	9306      	str	r3, [sp, #24]
 800b8c4:	6803      	ldr	r3, [r0, #0]
 800b8c6:	9503      	str	r5, [sp, #12]
 800b8c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b8ca:	4604      	mov	r4, r0
 800b8cc:	f8bd 7000 	ldrh.w	r7, [sp]
 800b8d0:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b8d4:	4798      	blx	r3
 800b8d6:	4642      	mov	r2, r8
 800b8d8:	4639      	mov	r1, r7
 800b8da:	4603      	mov	r3, r0
 800b8dc:	4620      	mov	r0, r4
 800b8de:	f7ff ff47 	bl	800b770 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b8e2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b8e6:	9004      	str	r0, [sp, #16]
 800b8e8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b8ec:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b8f0:	9607      	str	r6, [sp, #28]
 800b8f2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b8f6:	4b10      	ldr	r3, [pc, #64]	@ (800b938 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b8f8:	881b      	ldrh	r3, [r3, #0]
 800b8fa:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b8fe:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b900:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b904:	f7ff fc60 	bl	800b1c8 <_ZN8touchgfx3HAL3lcdEv>
 800b908:	6803      	ldr	r3, [r0, #0]
 800b90a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b90c:	4798      	blx	r3
 800b90e:	23ff      	movs	r3, #255	@ 0xff
 800b910:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b914:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b918:	6860      	ldr	r0, [r4, #4]
 800b91a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b91e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b922:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b926:	6803      	ldr	r3, [r0, #0]
 800b928:	a903      	add	r1, sp, #12
 800b92a:	685b      	ldr	r3, [r3, #4]
 800b92c:	4798      	blx	r3
 800b92e:	4630      	mov	r0, r6
 800b930:	b00c      	add	sp, #48	@ 0x30
 800b932:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b936:	bf00      	nop
 800b938:	20082ebe 	.word	0x20082ebe

0800b93c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b93c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b93e:	b085      	sub	sp, #20
 800b940:	ac02      	add	r4, sp, #8
 800b942:	e884 0006 	stmia.w	r4, {r1, r2}
 800b946:	4605      	mov	r5, r0
 800b948:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b94c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b950:	f7ff fde6 	bl	800b520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b954:	463a      	mov	r2, r7
 800b956:	4603      	mov	r3, r0
 800b958:	4631      	mov	r1, r6
 800b95a:	4628      	mov	r0, r5
 800b95c:	f7ff ff08 	bl	800b770 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b960:	4a05      	ldr	r2, [pc, #20]	@ (800b978 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b962:	682b      	ldr	r3, [r5, #0]
 800b964:	8812      	ldrh	r2, [r2, #0]
 800b966:	9200      	str	r2, [sp, #0]
 800b968:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800b96a:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b96e:	4603      	mov	r3, r0
 800b970:	4628      	mov	r0, r5
 800b972:	47b0      	blx	r6
 800b974:	b005      	add	sp, #20
 800b976:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b978:	20082ebe 	.word	0x20082ebe

0800b97c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b97c:	b570      	push	{r4, r5, r6, lr}
 800b97e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800b982:	4604      	mov	r4, r0
 800b984:	b19b      	cbz	r3, 800b9ae <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b986:	2002      	movs	r0, #2
 800b988:	f7f5 fc16 	bl	80011b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b98c:	2300      	movs	r3, #0
 800b98e:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b992:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800b996:	6823      	ldr	r3, [r4, #0]
 800b998:	4620      	mov	r0, r4
 800b99a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800b99e:	f7ff fdbf 	bl	800b520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b9a2:	462b      	mov	r3, r5
 800b9a4:	4601      	mov	r1, r0
 800b9a6:	4620      	mov	r0, r4
 800b9a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b9ac:	4718      	bx	r3
 800b9ae:	bd70      	pop	{r4, r5, r6, pc}

0800b9b0 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800b9b0:	b570      	push	{r4, r5, r6, lr}
 800b9b2:	4605      	mov	r5, r0
 800b9b4:	460c      	mov	r4, r1
 800b9b6:	2003      	movs	r0, #3
 800b9b8:	b149      	cbz	r1, 800b9ce <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800b9ba:	f7f5 fbc9 	bl	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b9be:	6928      	ldr	r0, [r5, #16]
 800b9c0:	b168      	cbz	r0, 800b9de <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b9c2:	2101      	movs	r1, #1
 800b9c4:	6803      	ldr	r3, [r0, #0]
 800b9c6:	695b      	ldr	r3, [r3, #20]
 800b9c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b9cc:	4718      	bx	r3
 800b9ce:	f7f5 fbd9 	bl	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b9d2:	6928      	ldr	r0, [r5, #16]
 800b9d4:	b118      	cbz	r0, 800b9de <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b9d6:	6803      	ldr	r3, [r0, #0]
 800b9d8:	4621      	mov	r1, r4
 800b9da:	695b      	ldr	r3, [r3, #20]
 800b9dc:	e7f4      	b.n	800b9c8 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800b9de:	bd70      	pop	{r4, r5, r6, pc}

0800b9e0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b9e0:	b538      	push	{r3, r4, r5, lr}
 800b9e2:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800b9e6:	4604      	mov	r4, r0
 800b9e8:	428b      	cmp	r3, r1
 800b9ea:	460d      	mov	r5, r1
 800b9ec:	d006      	beq.n	800b9fc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b9ee:	6803      	ldr	r3, [r0, #0]
 800b9f0:	b929      	cbnz	r1, 800b9fe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b9f2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800b9f6:	4798      	blx	r3
 800b9f8:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800b9fc:	bd38      	pop	{r3, r4, r5, pc}
 800b9fe:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800ba02:	e7f8      	b.n	800b9f6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800ba04 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800ba04:	b510      	push	{r4, lr}
 800ba06:	4b0d      	ldr	r3, [pc, #52]	@ (800ba3c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800ba08:	4604      	mov	r4, r0
 800ba0a:	781b      	ldrb	r3, [r3, #0]
 800ba0c:	b95b      	cbnz	r3, 800ba26 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ba0e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800ba12:	2b02      	cmp	r3, #2
 800ba14:	d007      	beq.n	800ba26 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ba16:	6840      	ldr	r0, [r0, #4]
 800ba18:	f000 f91c 	bl	800bc54 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800ba1c:	b118      	cbz	r0, 800ba26 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ba1e:	6862      	ldr	r2, [r4, #4]
 800ba20:	7a53      	ldrb	r3, [r2, #9]
 800ba22:	2b00      	cmp	r3, #0
 800ba24:	d0fc      	beq.n	800ba20 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800ba26:	f7f6 fad9 	bl	8001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ba2a:	4620      	mov	r0, r4
 800ba2c:	2100      	movs	r1, #0
 800ba2e:	f7ff ffd7 	bl	800b9e0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ba32:	4620      	mov	r0, r4
 800ba34:	f7ff fd74 	bl	800b520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba38:	bd10      	pop	{r4, pc}
 800ba3a:	bf00      	nop
 800ba3c:	20082ec2 	.word	0x20082ec2

0800ba40 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800ba40:	b570      	push	{r4, r5, r6, lr}
 800ba42:	4604      	mov	r4, r0
 800ba44:	6803      	ldr	r3, [r0, #0]
 800ba46:	b919      	cbnz	r1, 800ba50 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800ba48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba4c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ba4e:	4718      	bx	r3
 800ba50:	2200      	movs	r2, #0
 800ba52:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800ba56:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800ba5a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ba5c:	4798      	blx	r3
 800ba5e:	2101      	movs	r1, #1
 800ba60:	4605      	mov	r5, r0
 800ba62:	6863      	ldr	r3, [r4, #4]
 800ba64:	4620      	mov	r0, r4
 800ba66:	7299      	strb	r1, [r3, #10]
 800ba68:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800ba6c:	f7ff ffb8 	bl	800b9e0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ba70:	4628      	mov	r0, r5
 800ba72:	bd70      	pop	{r4, r5, r6, pc}

0800ba74 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800ba74:	2000      	movs	r0, #0
 800ba76:	4770      	bx	lr

0800ba78 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800ba78:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800ba7c:	1a13      	subs	r3, r2, r0
 800ba7e:	4258      	negs	r0, r3
 800ba80:	4158      	adcs	r0, r3
 800ba82:	4770      	bx	lr

0800ba84 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800ba84:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800ba88:	1a9b      	subs	r3, r3, r2
 800ba8a:	2b00      	cmp	r3, #0
 800ba8c:	bfdc      	itt	le
 800ba8e:	6882      	ldrle	r2, [r0, #8]
 800ba90:	189b      	addle	r3, r3, r2
 800ba92:	2b01      	cmp	r3, #1
 800ba94:	bfcc      	ite	gt
 800ba96:	2000      	movgt	r0, #0
 800ba98:	2001      	movle	r0, #1
 800ba9a:	4770      	bx	lr

0800ba9c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800ba9c:	6902      	ldr	r2, [r0, #16]
 800ba9e:	6843      	ldr	r3, [r0, #4]
 800baa0:	2024      	movs	r0, #36	@ 0x24
 800baa2:	fb00 3002 	mla	r0, r0, r2, r3
 800baa6:	4770      	bx	lr

0800baa8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800baa8:	6803      	ldr	r3, [r0, #0]
 800baaa:	691b      	ldr	r3, [r3, #16]
 800baac:	4718      	bx	r3

0800baae <_ZN8touchgfx13DMA_Interface7executeEv>:
 800baae:	2301      	movs	r3, #1
 800bab0:	b570      	push	{r4, r5, r6, lr}
 800bab2:	7203      	strb	r3, [r0, #8]
 800bab4:	4604      	mov	r4, r0
 800bab6:	6840      	ldr	r0, [r0, #4]
 800bab8:	6803      	ldr	r3, [r0, #0]
 800baba:	699b      	ldr	r3, [r3, #24]
 800babc:	4798      	blx	r3
 800babe:	6803      	ldr	r3, [r0, #0]
 800bac0:	4605      	mov	r5, r0
 800bac2:	2b40      	cmp	r3, #64	@ 0x40
 800bac4:	d00c      	beq.n	800bae0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bac6:	d810      	bhi.n	800baea <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bac8:	2b04      	cmp	r3, #4
 800baca:	d01d      	beq.n	800bb08 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bacc:	d804      	bhi.n	800bad8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bace:	2b01      	cmp	r3, #1
 800bad0:	d006      	beq.n	800bae0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bad2:	2b02      	cmp	r3, #2
 800bad4:	d02c      	beq.n	800bb30 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bad6:	bd70      	pop	{r4, r5, r6, pc}
 800bad8:	2b08      	cmp	r3, #8
 800bada:	d01d      	beq.n	800bb18 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800badc:	2b20      	cmp	r3, #32
 800bade:	d1fa      	bne.n	800bad6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bae0:	6823      	ldr	r3, [r4, #0]
 800bae2:	4620      	mov	r0, r4
 800bae4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bae6:	4798      	blx	r3
 800bae8:	e013      	b.n	800bb12 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800baea:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800baee:	d0f7      	beq.n	800bae0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800baf0:	d804      	bhi.n	800bafc <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800baf2:	2b80      	cmp	r3, #128	@ 0x80
 800baf4:	d0f4      	beq.n	800bae0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800baf6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800bafa:	e7f0      	b.n	800bade <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bafc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800bb00:	d0ee      	beq.n	800bae0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb02:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800bb06:	e7e5      	b.n	800bad4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bb08:	6823      	ldr	r3, [r4, #0]
 800bb0a:	7f01      	ldrb	r1, [r0, #28]
 800bb0c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bb0e:	4620      	mov	r0, r4
 800bb10:	4798      	blx	r3
 800bb12:	6823      	ldr	r3, [r4, #0]
 800bb14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bb16:	e006      	b.n	800bb26 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bb18:	6823      	ldr	r3, [r4, #0]
 800bb1a:	7f01      	ldrb	r1, [r0, #28]
 800bb1c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bb1e:	4620      	mov	r0, r4
 800bb20:	4798      	blx	r3
 800bb22:	6823      	ldr	r3, [r4, #0]
 800bb24:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bb26:	4629      	mov	r1, r5
 800bb28:	4620      	mov	r0, r4
 800bb2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb2e:	4718      	bx	r3
 800bb30:	6823      	ldr	r3, [r4, #0]
 800bb32:	4620      	mov	r0, r4
 800bb34:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bb36:	4798      	blx	r3
 800bb38:	e7f3      	b.n	800bb22 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bb3a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bb3a:	4770      	bx	lr

0800bb3c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bb3c:	4770      	bx	lr

0800bb3e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bb3e:	4770      	bx	lr

0800bb40 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bb40:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bb44:	1ad2      	subs	r2, r2, r3
 800bb46:	2a00      	cmp	r2, #0
 800bb48:	b510      	push	{r4, lr}
 800bb4a:	bfdc      	itt	le
 800bb4c:	6884      	ldrle	r4, [r0, #8]
 800bb4e:	1912      	addle	r2, r2, r4
 800bb50:	2a01      	cmp	r2, #1
 800bb52:	dd16      	ble.n	800bb82 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bb54:	2424      	movs	r4, #36	@ 0x24
 800bb56:	6842      	ldr	r2, [r0, #4]
 800bb58:	fb04 2303 	mla	r3, r4, r3, r2
 800bb5c:	f101 0220 	add.w	r2, r1, #32
 800bb60:	f851 4b04 	ldr.w	r4, [r1], #4
 800bb64:	4291      	cmp	r1, r2
 800bb66:	f843 4b04 	str.w	r4, [r3], #4
 800bb6a:	d1f9      	bne.n	800bb60 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bb6c:	780a      	ldrb	r2, [r1, #0]
 800bb6e:	701a      	strb	r2, [r3, #0]
 800bb70:	68c3      	ldr	r3, [r0, #12]
 800bb72:	6882      	ldr	r2, [r0, #8]
 800bb74:	3301      	adds	r3, #1
 800bb76:	429a      	cmp	r2, r3
 800bb78:	bfd8      	it	le
 800bb7a:	1a9b      	suble	r3, r3, r2
 800bb7c:	f3bf 8f5b 	dmb	ish
 800bb80:	60c3      	str	r3, [r0, #12]
 800bb82:	bd10      	pop	{r4, pc}

0800bb84 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bb84:	6903      	ldr	r3, [r0, #16]
 800bb86:	6882      	ldr	r2, [r0, #8]
 800bb88:	3301      	adds	r3, #1
 800bb8a:	429a      	cmp	r2, r3
 800bb8c:	bfd8      	it	le
 800bb8e:	1a9b      	suble	r3, r3, r2
 800bb90:	f3bf 8f5b 	dmb	ish
 800bb94:	6103      	str	r3, [r0, #16]
 800bb96:	4770      	bx	lr

0800bb98 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bb98:	b570      	push	{r4, r5, r6, lr}
 800bb9a:	4604      	mov	r4, r0
 800bb9c:	460e      	mov	r6, r1
 800bb9e:	6860      	ldr	r0, [r4, #4]
 800bba0:	6803      	ldr	r3, [r0, #0]
 800bba2:	685b      	ldr	r3, [r3, #4]
 800bba4:	4798      	blx	r3
 800bba6:	2800      	cmp	r0, #0
 800bba8:	d1f9      	bne.n	800bb9e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bbaa:	4d0d      	ldr	r5, [pc, #52]	@ (800bbe0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bbac:	6828      	ldr	r0, [r5, #0]
 800bbae:	6803      	ldr	r3, [r0, #0]
 800bbb0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bbb2:	4798      	blx	r3
 800bbb4:	f7f6 fa20 	bl	8001ff8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bbb8:	6828      	ldr	r0, [r5, #0]
 800bbba:	2101      	movs	r1, #1
 800bbbc:	f7ff ff10 	bl	800b9e0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bbc0:	6860      	ldr	r0, [r4, #4]
 800bbc2:	4631      	mov	r1, r6
 800bbc4:	6803      	ldr	r3, [r0, #0]
 800bbc6:	689b      	ldr	r3, [r3, #8]
 800bbc8:	4798      	blx	r3
 800bbca:	6823      	ldr	r3, [r4, #0]
 800bbcc:	4620      	mov	r0, r4
 800bbce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bbd0:	4798      	blx	r3
 800bbd2:	6828      	ldr	r0, [r5, #0]
 800bbd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bbd8:	6803      	ldr	r3, [r0, #0]
 800bbda:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800bbdc:	4718      	bx	r3
 800bbde:	bf00      	nop
 800bbe0:	20082ec4 	.word	0x20082ec4

0800bbe4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bbe4:	b508      	push	{r3, lr}
 800bbe6:	f7f6 f9f9 	bl	8001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bbea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bbee:	f7f6 b9fd 	b.w	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bbf2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bbf2:	b510      	push	{r4, lr}
 800bbf4:	4604      	mov	r4, r0
 800bbf6:	2114      	movs	r1, #20
 800bbf8:	f025 fa6d 	bl	80310d6 <_ZdlPvj>
 800bbfc:	4620      	mov	r0, r4
 800bbfe:	bd10      	pop	{r4, pc}

0800bc00 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bc00:	b570      	push	{r4, r5, r6, lr}
 800bc02:	4604      	mov	r4, r0
 800bc04:	6840      	ldr	r0, [r0, #4]
 800bc06:	6803      	ldr	r3, [r0, #0]
 800bc08:	681b      	ldr	r3, [r3, #0]
 800bc0a:	4798      	blx	r3
 800bc0c:	4605      	mov	r5, r0
 800bc0e:	b930      	cbnz	r0, 800bc1e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bc10:	7a23      	ldrb	r3, [r4, #8]
 800bc12:	b123      	cbz	r3, 800bc1e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bc14:	6860      	ldr	r0, [r4, #4]
 800bc16:	6803      	ldr	r3, [r0, #0]
 800bc18:	695b      	ldr	r3, [r3, #20]
 800bc1a:	4798      	blx	r3
 800bc1c:	7225      	strb	r5, [r4, #8]
 800bc1e:	6860      	ldr	r0, [r4, #4]
 800bc20:	6803      	ldr	r3, [r0, #0]
 800bc22:	681b      	ldr	r3, [r3, #0]
 800bc24:	4798      	blx	r3
 800bc26:	b928      	cbnz	r0, 800bc34 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bc28:	6823      	ldr	r3, [r4, #0]
 800bc2a:	4620      	mov	r0, r4
 800bc2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc30:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bc32:	4718      	bx	r3
 800bc34:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc38:	f7f6 b9e6 	b.w	8002008 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bc3c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bc3c:	6082      	str	r2, [r0, #8]
 800bc3e:	2200      	movs	r2, #0
 800bc40:	b510      	push	{r4, lr}
 800bc42:	4c03      	ldr	r4, [pc, #12]	@ (800bc50 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bc44:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bc48:	e9c0 4100 	strd	r4, r1, [r0]
 800bc4c:	bd10      	pop	{r4, pc}
 800bc4e:	bf00      	nop
 800bc50:	08035964 	.word	0x08035964

0800bc54 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bc54:	6840      	ldr	r0, [r0, #4]
 800bc56:	6803      	ldr	r3, [r0, #0]
 800bc58:	681b      	ldr	r3, [r3, #0]
 800bc5a:	4718      	bx	r3

0800bc5c <_ZNK8touchgfx3Box12getSolidRectEv>:
 800bc5c:	2300      	movs	r3, #0
 800bc5e:	8083      	strh	r3, [r0, #4]
 800bc60:	80c3      	strh	r3, [r0, #6]
 800bc62:	8003      	strh	r3, [r0, #0]
 800bc64:	8043      	strh	r3, [r0, #2]
 800bc66:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800bc6a:	2bff      	cmp	r3, #255	@ 0xff
 800bc6c:	bf01      	itttt	eq
 800bc6e:	890b      	ldrheq	r3, [r1, #8]
 800bc70:	8083      	strheq	r3, [r0, #4]
 800bc72:	894b      	ldrheq	r3, [r1, #10]
 800bc74:	80c3      	strheq	r3, [r0, #6]
 800bc76:	4770      	bx	lr

0800bc78 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800bc78:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bc7a:	4604      	mov	r4, r0
 800bc7c:	466b      	mov	r3, sp
 800bc7e:	6808      	ldr	r0, [r1, #0]
 800bc80:	6849      	ldr	r1, [r1, #4]
 800bc82:	c303      	stmia	r3!, {r0, r1}
 800bc84:	6823      	ldr	r3, [r4, #0]
 800bc86:	4669      	mov	r1, sp
 800bc88:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bc8a:	4620      	mov	r0, r4
 800bc8c:	4798      	blx	r3
 800bc8e:	4b08      	ldr	r3, [pc, #32]	@ (800bcb0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800bc90:	681b      	ldr	r3, [r3, #0]
 800bc92:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bc96:	b10a      	cbz	r2, 800bc9c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800bc98:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800bc9a:	b900      	cbnz	r0, 800bc9e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800bc9c:	6898      	ldr	r0, [r3, #8]
 800bc9e:	6803      	ldr	r3, [r0, #0]
 800bca0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800bca2:	6a1d      	ldr	r5, [r3, #32]
 800bca4:	4669      	mov	r1, sp
 800bca6:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800bcaa:	47a8      	blx	r5
 800bcac:	b003      	add	sp, #12
 800bcae:	bd30      	pop	{r4, r5, pc}
 800bcb0:	20082ec4 	.word	0x20082ec4

0800bcb4 <_ZN8touchgfx3BoxD1Ev>:
 800bcb4:	4770      	bx	lr

0800bcb6 <_ZN8touchgfx3BoxD0Ev>:
 800bcb6:	b510      	push	{r4, lr}
 800bcb8:	4604      	mov	r4, r0
 800bcba:	212c      	movs	r1, #44	@ 0x2c
 800bcbc:	f025 fa0b 	bl	80310d6 <_ZdlPvj>
 800bcc0:	4620      	mov	r0, r4
 800bcc2:	bd10      	pop	{r4, pc}

0800bcc4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800bcc4:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800bcc8:	b12a      	cbz	r2, 800bcd6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800bcca:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800bcce:	b112      	cbz	r2, 800bcd6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800bcd0:	6803      	ldr	r3, [r0, #0]
 800bcd2:	695b      	ldr	r3, [r3, #20]
 800bcd4:	4718      	bx	r3
 800bcd6:	4770      	bx	lr

0800bcd8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800bcd8:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800bcdc:	4770      	bx	lr

0800bcde <_ZNK8touchgfx6Button17invalidateContentEv>:
 800bcde:	b508      	push	{r3, lr}
 800bce0:	f890 3032 	ldrb.w	r3, [r0, #50]	@ 0x32
 800bce4:	b10b      	cbz	r3, 800bcea <_ZNK8touchgfx6Button17invalidateContentEv+0xc>
 800bce6:	f7f7 fad7 	bl	8003298 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800bcea:	bd08      	pop	{r3, pc}

0800bcec <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 800bcec:	4770      	bx	lr

0800bcee <_ZN8touchgfx14ButtonWithIconD1Ev>:
 800bcee:	4770      	bx	lr

0800bcf0 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800bcf0:	b510      	push	{r4, lr}
 800bcf2:	4604      	mov	r4, r0
 800bcf4:	213c      	movs	r1, #60	@ 0x3c
 800bcf6:	f025 f9ee 	bl	80310d6 <_ZdlPvj>
 800bcfa:	4620      	mov	r0, r4
 800bcfc:	bd10      	pop	{r4, pc}

0800bcfe <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 800bcfe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd02:	461c      	mov	r4, r3
 800bd04:	4606      	mov	r6, r0
 800bd06:	9f06      	ldr	r7, [sp, #24]
 800bd08:	f004 fbd5 	bl	80104b6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800bd0c:	8823      	ldrh	r3, [r4, #0]
 800bd0e:	f04f 0802 	mov.w	r8, #2
 800bd12:	86b3      	strh	r3, [r6, #52]	@ 0x34
 800bd14:	883b      	ldrh	r3, [r7, #0]
 800bd16:	4638      	mov	r0, r7
 800bd18:	86f3      	strh	r3, [r6, #54]	@ 0x36
 800bd1a:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 800bd1e:	f004 f911 	bl	800ff44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bd22:	fb95 f5f8 	sdiv	r5, r5, r8
 800bd26:	fb90 f0f8 	sdiv	r0, r0, r8
 800bd2a:	b2ad      	uxth	r5, r5
 800bd2c:	1a2d      	subs	r5, r5, r0
 800bd2e:	8735      	strh	r5, [r6, #56]	@ 0x38
 800bd30:	4638      	mov	r0, r7
 800bd32:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 800bd36:	f004 f939 	bl	800ffac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bd3a:	fb94 f4f8 	sdiv	r4, r4, r8
 800bd3e:	fb90 f0f8 	sdiv	r0, r0, r8
 800bd42:	b2a4      	uxth	r4, r4
 800bd44:	1a24      	subs	r4, r4, r0
 800bd46:	8774      	strh	r4, [r6, #58]	@ 0x3a
 800bd48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bd4c <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800bd4c:	b510      	push	{r4, lr}
 800bd4e:	4604      	mov	r4, r0
 800bd50:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800bd52:	b150      	cbz	r0, 800bd6a <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800bd54:	6803      	ldr	r3, [r0, #0]
 800bd56:	68db      	ldr	r3, [r3, #12]
 800bd58:	4798      	blx	r3
 800bd5a:	b130      	cbz	r0, 800bd6a <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800bd5c:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800bd5e:	4621      	mov	r1, r4
 800bd60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd64:	6803      	ldr	r3, [r0, #0]
 800bd66:	689b      	ldr	r3, [r3, #8]
 800bd68:	4718      	bx	r3
 800bd6a:	bd10      	pop	{r4, pc}

0800bd6c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 800bd6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd70:	4604      	mov	r4, r0
 800bd72:	b08c      	sub	sp, #48	@ 0x30
 800bd74:	460d      	mov	r5, r1
 800bd76:	f004 fbd1 	bl	801051c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800bd7a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800bd7e:	2b00      	cmp	r3, #0
 800bd80:	d05d      	beq.n	800be3e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 800bd82:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800bd84:	a805      	add	r0, sp, #20
 800bd86:	f8ad 3014 	strh.w	r3, [sp, #20]
 800bd8a:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	@ 0x38
 800bd8e:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	@ 0x3a
 800bd92:	f004 f8d7 	bl	800ff44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bd96:	4606      	mov	r6, r0
 800bd98:	a805      	add	r0, sp, #20
 800bd9a:	f004 f907 	bl	800ffac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bd9e:	6869      	ldr	r1, [r5, #4]
 800bda0:	f8ad 001e 	strh.w	r0, [sp, #30]
 800bda4:	6828      	ldr	r0, [r5, #0]
 800bda6:	ab08      	add	r3, sp, #32
 800bda8:	ad08      	add	r5, sp, #32
 800bdaa:	c303      	stmia	r3!, {r0, r1}
 800bdac:	a906      	add	r1, sp, #24
 800bdae:	4628      	mov	r0, r5
 800bdb0:	f8ad 8018 	strh.w	r8, [sp, #24]
 800bdb4:	f8ad 701a 	strh.w	r7, [sp, #26]
 800bdb8:	f8ad 601c 	strh.w	r6, [sp, #28]
 800bdbc:	f7fe ff20 	bl	800ac00 <_ZN8touchgfx4RectaNERKS0_>
 800bdc0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800bdc4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800bdc8:	429a      	cmp	r2, r3
 800bdca:	d035      	beq.n	800be38 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800bdcc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 800bdd0:	2b00      	cmp	r3, #0
 800bdd2:	dd31      	ble.n	800be38 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800bdd4:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	@ 0x26
 800bdd8:	2b00      	cmp	r3, #0
 800bdda:	dd2d      	ble.n	800be38 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800bddc:	2300      	movs	r3, #0
 800bdde:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
 800bde2:	6823      	ldr	r3, [r4, #0]
 800bde4:	a90a      	add	r1, sp, #40	@ 0x28
 800bde6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bde8:	4620      	mov	r0, r4
 800bdea:	4798      	blx	r3
 800bdec:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800bdf0:	8f22      	ldrh	r2, [r4, #56]	@ 0x38
 800bdf2:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800bdf6:	1a9b      	subs	r3, r3, r2
 800bdf8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bdfc:	8f63      	ldrh	r3, [r4, #58]	@ 0x3a
 800bdfe:	1ac9      	subs	r1, r1, r3
 800be00:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 800be04:	490f      	ldr	r1, [pc, #60]	@ (800be44 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 800be06:	6809      	ldr	r1, [r1, #0]
 800be08:	f891 0058 	ldrb.w	r0, [r1, #88]	@ 0x58
 800be0c:	b108      	cbz	r0, 800be12 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 800be0e:	6cc8      	ldr	r0, [r1, #76]	@ 0x4c
 800be10:	b900      	cbnz	r0, 800be14 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 800be12:	6888      	ldr	r0, [r1, #8]
 800be14:	2601      	movs	r6, #1
 800be16:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 800be1a:	440b      	add	r3, r1
 800be1c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 800be20:	b21b      	sxth	r3, r3
 800be22:	440a      	add	r2, r1
 800be24:	6801      	ldr	r1, [r0, #0]
 800be26:	9602      	str	r6, [sp, #8]
 800be28:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800be2c:	b212      	sxth	r2, r2
 800be2e:	e9cd 5400 	strd	r5, r4, [sp]
 800be32:	688c      	ldr	r4, [r1, #8]
 800be34:	a905      	add	r1, sp, #20
 800be36:	47a0      	blx	r4
 800be38:	b00c      	add	sp, #48	@ 0x30
 800be3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800be3e:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800be40:	e7a0      	b.n	800bd84 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 800be42:	bf00      	nop
 800be44:	20082ec4 	.word	0x20082ec4

0800be48 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 800be48:	2101      	movs	r1, #1
 800be4a:	2200      	movs	r2, #0
 800be4c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800be50:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800be54:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800be58:	b510      	push	{r4, lr}
 800be5a:	4c0d      	ldr	r4, [pc, #52]	@ (800be90 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 800be5c:	8082      	strh	r2, [r0, #4]
 800be5e:	80c2      	strh	r2, [r0, #6]
 800be60:	8102      	strh	r2, [r0, #8]
 800be62:	8142      	strh	r2, [r0, #10]
 800be64:	8182      	strh	r2, [r0, #12]
 800be66:	81c2      	strh	r2, [r0, #14]
 800be68:	8202      	strh	r2, [r0, #16]
 800be6a:	8242      	strh	r2, [r0, #18]
 800be6c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800be70:	61c2      	str	r2, [r0, #28]
 800be72:	8402      	strh	r2, [r0, #32]
 800be74:	8442      	strh	r2, [r0, #34]	@ 0x22
 800be76:	6282      	str	r2, [r0, #40]	@ 0x28
 800be78:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 800be7c:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 800be7e:	8601      	strh	r1, [r0, #48]	@ 0x30
 800be80:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 800be84:	6004      	str	r4, [r0, #0]
 800be86:	8681      	strh	r1, [r0, #52]	@ 0x34
 800be88:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800be8a:	8702      	strh	r2, [r0, #56]	@ 0x38
 800be8c:	8742      	strh	r2, [r0, #58]	@ 0x3a
 800be8e:	bd10      	pop	{r4, pc}
 800be90:	080359f0 	.word	0x080359f0

0800be94 <_ZN8touchgfx5ImageD1Ev>:
 800be94:	4770      	bx	lr

0800be96 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800be96:	b570      	push	{r4, r5, r6, lr}
 800be98:	880b      	ldrh	r3, [r1, #0]
 800be9a:	4604      	mov	r4, r0
 800be9c:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800be9e:	4608      	mov	r0, r1
 800bea0:	460d      	mov	r5, r1
 800bea2:	f004 f84f 	bl	800ff44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bea6:	4606      	mov	r6, r0
 800bea8:	4628      	mov	r0, r5
 800beaa:	f004 f87f 	bl	800ffac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800beae:	4605      	mov	r5, r0
 800beb0:	6823      	ldr	r3, [r4, #0]
 800beb2:	4631      	mov	r1, r6
 800beb4:	4620      	mov	r0, r4
 800beb6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800beb8:	4798      	blx	r3
 800beba:	6823      	ldr	r3, [r4, #0]
 800bebc:	4629      	mov	r1, r5
 800bebe:	4620      	mov	r0, r4
 800bec0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bec4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bec6:	4718      	bx	r3

0800bec8 <_ZN8touchgfx5ImageD0Ev>:
 800bec8:	b510      	push	{r4, lr}
 800beca:	4604      	mov	r4, r0
 800becc:	212c      	movs	r1, #44	@ 0x2c
 800bece:	f025 f902 	bl	80310d6 <_ZdlPvj>
 800bed2:	4620      	mov	r0, r4
 800bed4:	bd10      	pop	{r4, pc}

0800bed6 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800bed6:	b510      	push	{r4, lr}
 800bed8:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800bedc:	4604      	mov	r4, r0
 800bede:	2bff      	cmp	r3, #255	@ 0xff
 800bee0:	d006      	beq.n	800bef0 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800bee2:	2300      	movs	r3, #0
 800bee4:	8003      	strh	r3, [r0, #0]
 800bee6:	8043      	strh	r3, [r0, #2]
 800bee8:	8083      	strh	r3, [r0, #4]
 800beea:	80c3      	strh	r3, [r0, #6]
 800beec:	4620      	mov	r0, r4
 800beee:	bd10      	pop	{r4, pc}
 800bef0:	3126      	adds	r1, #38	@ 0x26
 800bef2:	f004 f88f 	bl	8010014 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800bef6:	e7f9      	b.n	800beec <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800bef8 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800bef8:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800befc:	b12a      	cbz	r2, 800bf0a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800befe:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800bf02:	b112      	cbz	r2, 800bf0a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800bf04:	6803      	ldr	r3, [r0, #0]
 800bf06:	695b      	ldr	r3, [r3, #20]
 800bf08:	4718      	bx	r3
 800bf0a:	4770      	bx	lr

0800bf0c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800bf0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf10:	4604      	mov	r4, r0
 800bf12:	2500      	movs	r5, #0
 800bf14:	f854 3b26 	ldr.w	r3, [r4], #38
 800bf18:	b088      	sub	sp, #32
 800bf1a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bf1c:	460f      	mov	r7, r1
 800bf1e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800bf22:	a904      	add	r1, sp, #16
 800bf24:	4606      	mov	r6, r0
 800bf26:	4798      	blx	r3
 800bf28:	4620      	mov	r0, r4
 800bf2a:	f004 f80b 	bl	800ff44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bf2e:	4680      	mov	r8, r0
 800bf30:	4620      	mov	r0, r4
 800bf32:	f004 f83b 	bl	800ffac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bf36:	9506      	str	r5, [sp, #24]
 800bf38:	ad06      	add	r5, sp, #24
 800bf3a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800bf3e:	4639      	mov	r1, r7
 800bf40:	4628      	mov	r0, r5
 800bf42:	f8ad 801c 	strh.w	r8, [sp, #28]
 800bf46:	f7fe fe5b 	bl	800ac00 <_ZN8touchgfx4RectaNERKS0_>
 800bf4a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800bf4e:	2b00      	cmp	r3, #0
 800bf50:	dd19      	ble.n	800bf86 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800bf52:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800bf56:	2b00      	cmp	r3, #0
 800bf58:	dd15      	ble.n	800bf86 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800bf5a:	4b0c      	ldr	r3, [pc, #48]	@ (800bf8c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800bf5c:	681b      	ldr	r3, [r3, #0]
 800bf5e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bf62:	b10a      	cbz	r2, 800bf68 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800bf64:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800bf66:	b900      	cbnz	r0, 800bf6a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800bf68:	6898      	ldr	r0, [r3, #8]
 800bf6a:	2701      	movs	r7, #1
 800bf6c:	6801      	ldr	r1, [r0, #0]
 800bf6e:	9702      	str	r7, [sp, #8]
 800bf70:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800bf74:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800bf78:	e9cd 5600 	strd	r5, r6, [sp]
 800bf7c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800bf80:	688d      	ldr	r5, [r1, #8]
 800bf82:	4621      	mov	r1, r4
 800bf84:	47a8      	blx	r5
 800bf86:	b008      	add	sp, #32
 800bf88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bf8c:	20082ec4 	.word	0x20082ec4

0800bf90 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800bf90:	b510      	push	{r4, lr}
 800bf92:	6803      	ldr	r3, [r0, #0]
 800bf94:	460c      	mov	r4, r1
 800bf96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bf98:	4798      	blx	r3
 800bf9a:	1b03      	subs	r3, r0, r4
 800bf9c:	4258      	negs	r0, r3
 800bf9e:	4158      	adcs	r0, r3
 800bfa0:	bd10      	pop	{r4, pc}
	...

0800bfa4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800bfa4:	4b01      	ldr	r3, [pc, #4]	@ (800bfac <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800bfa6:	6019      	str	r1, [r3, #0]
 800bfa8:	4770      	bx	lr
 800bfaa:	bf00      	nop
 800bfac:	20082ecc 	.word	0x20082ecc

0800bfb0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800bfb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bfb4:	4696      	mov	lr, r2
 800bfb6:	4614      	mov	r4, r2
 800bfb8:	4605      	mov	r5, r0
 800bfba:	460e      	mov	r6, r1
 800bfbc:	461f      	mov	r7, r3
 800bfbe:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800bfc2:	b097      	sub	sp, #92	@ 0x5c
 800bfc4:	f10d 0c1c 	add.w	ip, sp, #28
 800bfc8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800bfcc:	f8de 3000 	ldr.w	r3, [lr]
 800bfd0:	f104 0e14 	add.w	lr, r4, #20
 800bfd4:	f8cc 3000 	str.w	r3, [ip]
 800bfd8:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800bfdc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800bfe0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800bfe4:	f8de 3000 	ldr.w	r3, [lr]
 800bfe8:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800bfec:	f8cc 3000 	str.w	r3, [ip]
 800bff0:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800bff4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800bff8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800bffc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800c000:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800c004:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800c008:	f8de 3000 	ldr.w	r3, [lr]
 800c00c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c00e:	f8cc 3000 	str.w	r3, [ip]
 800c012:	9201      	str	r2, [sp, #4]
 800c014:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c018:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c01a:	682b      	ldr	r3, [r5, #0]
 800c01c:	9200      	str	r2, [sp, #0]
 800c01e:	f8cd 8008 	str.w	r8, [sp, #8]
 800c022:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800c026:	aa07      	add	r2, sp, #28
 800c028:	463b      	mov	r3, r7
 800c02a:	4631      	mov	r1, r6
 800c02c:	4628      	mov	r0, r5
 800c02e:	47d8      	blx	fp
 800c030:	46a6      	mov	lr, r4
 800c032:	f10d 0c1c 	add.w	ip, sp, #28
 800c036:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c03a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c03e:	f8de 3000 	ldr.w	r3, [lr]
 800c042:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c046:	f8cc 3000 	str.w	r3, [ip]
 800c04a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c04e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c052:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c056:	f8de 3000 	ldr.w	r3, [lr]
 800c05a:	343c      	adds	r4, #60	@ 0x3c
 800c05c:	f8cc 3000 	str.w	r3, [ip]
 800c060:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c064:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c066:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c06a:	6823      	ldr	r3, [r4, #0]
 800c06c:	4631      	mov	r1, r6
 800c06e:	f8cc 3000 	str.w	r3, [ip]
 800c072:	682b      	ldr	r3, [r5, #0]
 800c074:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c078:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c07a:	f8cd 8008 	str.w	r8, [sp, #8]
 800c07e:	9201      	str	r2, [sp, #4]
 800c080:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c082:	4628      	mov	r0, r5
 800c084:	9200      	str	r2, [sp, #0]
 800c086:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800c088:	aa07      	add	r2, sp, #28
 800c08a:	463b      	mov	r3, r7
 800c08c:	47a0      	blx	r4
 800c08e:	b017      	add	sp, #92	@ 0x5c
 800c090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c094 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c098:	b08d      	sub	sp, #52	@ 0x34
 800c09a:	4688      	mov	r8, r1
 800c09c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800c09e:	f8d3 c000 	ldr.w	ip, [r3]
 800c0a2:	680f      	ldr	r7, [r1, #0]
 800c0a4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800c0a8:	eba7 070c 	sub.w	r7, r7, ip
 800c0ac:	42bc      	cmp	r4, r7
 800c0ae:	bfa8      	it	ge
 800c0b0:	463c      	movge	r4, r7
 800c0b2:	ee07 4a90 	vmov	s15, r4
 800c0b6:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800c0ba:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c0be:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800c0c2:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800c0c6:	edd3 6a07 	vldr	s13, [r3, #28]
 800c0ca:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c0ce:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c0d2:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c0d6:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800c0da:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800c0de:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800c0e2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c0e6:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800c0e8:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800c0ec:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c0f0:	f9ba 1000 	ldrsh.w	r1, [sl]
 800c0f4:	eb09 0e0c 	add.w	lr, r9, ip
 800c0f8:	4571      	cmp	r1, lr
 800c0fa:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c0fe:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c102:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c106:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c10a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c10e:	f340 808c 	ble.w	800c22a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800c112:	eba1 060e 	sub.w	r6, r1, lr
 800c116:	fb96 f5f4 	sdiv	r5, r6, r4
 800c11a:	ee07 5a10 	vmov	s14, r5
 800c11e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c122:	2d00      	cmp	r5, #0
 800c124:	fb04 6615 	mls	r6, r4, r5, r6
 800c128:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c12c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c130:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c134:	dd12      	ble.n	800c15c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800c136:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c13a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c13e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c142:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c146:	bf14      	ite	ne
 800c148:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c14c:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c150:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c154:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c158:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c15c:	fb05 f204 	mul.w	r2, r5, r4
 800c160:	1abf      	subs	r7, r7, r2
 800c162:	4494      	add	ip, r2
 800c164:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800c168:	4411      	add	r1, r2
 800c16a:	eb09 020c 	add.w	r2, r9, ip
 800c16e:	443a      	add	r2, r7
 800c170:	b209      	sxth	r1, r1
 800c172:	428a      	cmp	r2, r1
 800c174:	bfc4      	itt	gt
 800c176:	eba1 0209 	subgt.w	r2, r1, r9
 800c17a:	eba2 070c 	subgt.w	r7, r2, ip
 800c17e:	2f00      	cmp	r7, #0
 800c180:	dd50      	ble.n	800c224 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800c182:	fb97 f1f4 	sdiv	r1, r7, r4
 800c186:	fb04 7211 	mls	r2, r4, r1, r7
 800c18a:	b90a      	cbnz	r2, 800c190 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800c18c:	4622      	mov	r2, r4
 800c18e:	3901      	subs	r1, #1
 800c190:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c194:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c198:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c19c:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c1a0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c1a4:	ee17 7a90 	vmov	r7, s15
 800c1a8:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c1ac:	eef0 6a42 	vmov.f32	s13, s4
 800c1b0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c1b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c1b8:	ee17 ca90 	vmov	ip, s15
 800c1bc:	eeb0 7a61 	vmov.f32	s14, s3
 800c1c0:	6840      	ldr	r0, [r0, #4]
 800c1c2:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800c1c6:	f8d0 a000 	ldr.w	sl, [r0]
 800c1ca:	900b      	str	r0, [sp, #44]	@ 0x2c
 800c1cc:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800c1ce:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800c1d2:	9008      	str	r0, [sp, #32]
 800c1d4:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800c1d6:	695b      	ldr	r3, [r3, #20]
 800c1d8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800c1dc:	fb9c fcf4 	sdiv	ip, ip, r4
 800c1e0:	445b      	add	r3, fp
 800c1e2:	9307      	str	r3, [sp, #28]
 800c1e4:	ee16 3a90 	vmov	r3, s13
 800c1e8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c1ec:	fb0c 3306 	mla	r3, ip, r6, r3
 800c1f0:	fb97 f7f4 	sdiv	r7, r7, r4
 800c1f4:	9302      	str	r3, [sp, #8]
 800c1f6:	ee17 3a10 	vmov	r3, s14
 800c1fa:	2900      	cmp	r1, #0
 800c1fc:	bfcc      	ite	gt
 800c1fe:	46a1      	movgt	r9, r4
 800c200:	4691      	movle	r9, r2
 800c202:	44b6      	add	lr, r6
 800c204:	fb04 e505 	mla	r5, r4, r5, lr
 800c208:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800c20c:	fb07 3706 	mla	r7, r7, r6, r3
 800c210:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800c214:	e9cd 4700 	strd	r4, r7, [sp]
 800c218:	eba9 0306 	sub.w	r3, r9, r6
 800c21c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800c220:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800c222:	47a0      	blx	r4
 800c224:	b00d      	add	sp, #52	@ 0x34
 800c226:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c22a:	2500      	movs	r5, #0
 800c22c:	462e      	mov	r6, r5
 800c22e:	e799      	b.n	800c164 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800c230 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c234:	461d      	mov	r5, r3
 800c236:	b0db      	sub	sp, #364	@ 0x16c
 800c238:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800c23c:	910f      	str	r1, [sp, #60]	@ 0x3c
 800c23e:	930a      	str	r3, [sp, #40]	@ 0x28
 800c240:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800c244:	9009      	str	r0, [sp, #36]	@ 0x24
 800c246:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c248:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800c24c:	4614      	mov	r4, r2
 800c24e:	9310      	str	r3, [sp, #64]	@ 0x40
 800c250:	6803      	ldr	r3, [r0, #0]
 800c252:	4629      	mov	r1, r5
 800c254:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800c256:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800c25a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800c25e:	47b8      	blx	r7
 800c260:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c262:	6058      	str	r0, [r3, #4]
 800c264:	2800      	cmp	r0, #0
 800c266:	f000 83a1 	beq.w	800c9ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c26a:	ed94 7a02 	vldr	s14, [r4, #8]
 800c26e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800c272:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c276:	682b      	ldr	r3, [r5, #0]
 800c278:	9314      	str	r3, [sp, #80]	@ 0x50
 800c27a:	686b      	ldr	r3, [r5, #4]
 800c27c:	9315      	str	r3, [sp, #84]	@ 0x54
 800c27e:	4bc1      	ldr	r3, [pc, #772]	@ (800c584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800c280:	7819      	ldrb	r1, [r3, #0]
 800c282:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800c286:	2900      	cmp	r1, #0
 800c288:	bf16      	itet	ne
 800c28a:	4619      	movne	r1, r3
 800c28c:	4611      	moveq	r1, r2
 800c28e:	4613      	movne	r3, r2
 800c290:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c294:	9116      	str	r1, [sp, #88]	@ 0x58
 800c296:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800c29a:	f240 8387 	bls.w	800c9ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c29e:	ed94 7a07 	vldr	s14, [r4, #28]
 800c2a2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c2a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c2aa:	f240 837f 	bls.w	800c9ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c2ae:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800c2b2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c2b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c2ba:	f240 8377 	bls.w	800c9ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c2be:	6822      	ldr	r2, [r4, #0]
 800c2c0:	4bb1      	ldr	r3, [pc, #708]	@ (800c588 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800c2c2:	429a      	cmp	r2, r3
 800c2c4:	f2c0 8372 	blt.w	800c9ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c2c8:	49b0      	ldr	r1, [pc, #704]	@ (800c58c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800c2ca:	6963      	ldr	r3, [r4, #20]
 800c2cc:	428a      	cmp	r2, r1
 800c2ce:	f300 836d 	bgt.w	800c9ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c2d2:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c2d6:	48ae      	ldr	r0, [pc, #696]	@ (800c590 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800c2d8:	33ff      	adds	r3, #255	@ 0xff
 800c2da:	4283      	cmp	r3, r0
 800c2dc:	f200 8366 	bhi.w	800c9ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c2e0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800c2e2:	4dac      	ldr	r5, [pc, #688]	@ (800c594 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800c2e4:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c2e8:	33ff      	adds	r3, #255	@ 0xff
 800c2ea:	42ab      	cmp	r3, r5
 800c2ec:	f200 835e 	bhi.w	800c9ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c2f0:	6862      	ldr	r2, [r4, #4]
 800c2f2:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800c2f6:	33ff      	adds	r3, #255	@ 0xff
 800c2f8:	4283      	cmp	r3, r0
 800c2fa:	f200 8357 	bhi.w	800c9ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c2fe:	69a1      	ldr	r1, [r4, #24]
 800c300:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800c304:	33ff      	adds	r3, #255	@ 0xff
 800c306:	4283      	cmp	r3, r0
 800c308:	f200 8350 	bhi.w	800c9ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c30c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800c30e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800c312:	30ff      	adds	r0, #255	@ 0xff
 800c314:	42a8      	cmp	r0, r5
 800c316:	f200 8349 	bhi.w	800c9ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c31a:	428a      	cmp	r2, r1
 800c31c:	f280 8110 	bge.w	800c540 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800c320:	429a      	cmp	r2, r3
 800c322:	f300 8119 	bgt.w	800c558 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800c326:	4299      	cmp	r1, r3
 800c328:	f280 811d 	bge.w	800c566 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800c32c:	2502      	movs	r5, #2
 800c32e:	2701      	movs	r7, #1
 800c330:	46a9      	mov	r9, r5
 800c332:	46b8      	mov	r8, r7
 800c334:	f04f 0a00 	mov.w	sl, #0
 800c338:	4621      	mov	r1, r4
 800c33a:	a849      	add	r0, sp, #292	@ 0x124
 800c33c:	f003 fb38 	bl	800f9b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800c340:	4622      	mov	r2, r4
 800c342:	4653      	mov	r3, sl
 800c344:	a949      	add	r1, sp, #292	@ 0x124
 800c346:	f8cd 9000 	str.w	r9, [sp]
 800c34a:	a819      	add	r0, sp, #100	@ 0x64
 800c34c:	f003 fc62 	bl	800fc14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c350:	4622      	mov	r2, r4
 800c352:	4653      	mov	r3, sl
 800c354:	a949      	add	r1, sp, #292	@ 0x124
 800c356:	f8cd 8000 	str.w	r8, [sp]
 800c35a:	a829      	add	r0, sp, #164	@ 0xa4
 800c35c:	f003 fc5a 	bl	800fc14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c360:	4643      	mov	r3, r8
 800c362:	4622      	mov	r2, r4
 800c364:	a949      	add	r1, sp, #292	@ 0x124
 800c366:	f8cd 9000 	str.w	r9, [sp]
 800c36a:	a839      	add	r0, sp, #228	@ 0xe4
 800c36c:	f003 fc52 	bl	800fc14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c370:	42af      	cmp	r7, r5
 800c372:	bfb5      	itete	lt
 800c374:	2300      	movlt	r3, #0
 800c376:	2301      	movge	r3, #1
 800c378:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800c37a:	930e      	strge	r3, [sp, #56]	@ 0x38
 800c37c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c37e:	af12      	add	r7, sp, #72	@ 0x48
 800c380:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c384:	bfb9      	ittee	lt
 800c386:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800c388:	ac19      	addlt	r4, sp, #100	@ 0x64
 800c38a:	ad19      	addge	r5, sp, #100	@ 0x64
 800c38c:	ac29      	addge	r4, sp, #164	@ 0xa4
 800c38e:	e887 0003 	stmia.w	r7, {r0, r1}
 800c392:	b928      	cbnz	r0, 800c3a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800c394:	4b80      	ldr	r3, [pc, #512]	@ (800c598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800c396:	6818      	ldr	r0, [r3, #0]
 800c398:	6803      	ldr	r3, [r0, #0]
 800c39a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c39c:	4798      	blx	r3
 800c39e:	6038      	str	r0, [r7, #0]
 800c3a0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c3a2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800c3a6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c3aa:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800c3ac:	930c      	str	r3, [sp, #48]	@ 0x30
 800c3ae:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c3b0:	6963      	ldr	r3, [r4, #20]
 800c3b2:	440b      	add	r3, r1
 800c3b4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c3b8:	4408      	add	r0, r1
 800c3ba:	b200      	sxth	r0, r0
 800c3bc:	4283      	cmp	r3, r0
 800c3be:	900d      	str	r0, [sp, #52]	@ 0x34
 800c3c0:	f280 80dd 	bge.w	800c57e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800c3c4:	428b      	cmp	r3, r1
 800c3c6:	da08      	bge.n	800c3da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c3c8:	2a00      	cmp	r2, #0
 800c3ca:	dd06      	ble.n	800c3da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c3cc:	1acb      	subs	r3, r1, r3
 800c3ce:	429a      	cmp	r2, r3
 800c3d0:	f2c0 80e4 	blt.w	800c59c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800c3d4:	2b00      	cmp	r3, #0
 800c3d6:	f300 80e2 	bgt.w	800c59e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800c3da:	6967      	ldr	r7, [r4, #20]
 800c3dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c3de:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800c3e2:	443b      	add	r3, r7
 800c3e4:	461f      	mov	r7, r3
 800c3e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c3e8:	1bdf      	subs	r7, r3, r7
 800c3ea:	4297      	cmp	r7, r2
 800c3ec:	bfa8      	it	ge
 800c3ee:	4617      	movge	r7, r2
 800c3f0:	2f00      	cmp	r7, #0
 800c3f2:	f340 8166 	ble.w	800c6c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800c3f6:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c3f8:	6829      	ldr	r1, [r5, #0]
 800c3fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c3fe:	f9bb 3000 	ldrsh.w	r3, [fp]
 800c402:	4411      	add	r1, r2
 800c404:	4299      	cmp	r1, r3
 800c406:	6820      	ldr	r0, [r4, #0]
 800c408:	dd1a      	ble.n	800c440 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c40a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800c40e:	4402      	add	r2, r0
 800c410:	440b      	add	r3, r1
 800c412:	b21b      	sxth	r3, r3
 800c414:	429a      	cmp	r2, r3
 800c416:	dc13      	bgt.n	800c440 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c418:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800c41a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c41c:	a912      	add	r1, sp, #72	@ 0x48
 800c41e:	681b      	ldr	r3, [r3, #0]
 800c420:	9206      	str	r2, [sp, #24]
 800c422:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c424:	9500      	str	r5, [sp, #0]
 800c426:	9205      	str	r2, [sp, #20]
 800c428:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c42a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c42c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800c430:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800c432:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800c436:	aa49      	add	r2, sp, #292	@ 0x124
 800c438:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800c43c:	4623      	mov	r3, r4
 800c43e:	47c8      	blx	r9
 800c440:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c444:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800c448:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800c44c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800c450:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c454:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800c458:	ed94 6a08 	vldr	s12, [r4, #32]
 800c45c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c460:	edd4 6a07 	vldr	s13, [r4, #28]
 800c464:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c468:	441a      	add	r2, r3
 800c46a:	6963      	ldr	r3, [r4, #20]
 800c46c:	68a1      	ldr	r1, [r4, #8]
 800c46e:	3301      	adds	r3, #1
 800c470:	6163      	str	r3, [r4, #20]
 800c472:	69a3      	ldr	r3, [r4, #24]
 800c474:	6022      	str	r2, [r4, #0]
 800c476:	3b01      	subs	r3, #1
 800c478:	61a3      	str	r3, [r4, #24]
 800c47a:	6923      	ldr	r3, [r4, #16]
 800c47c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c480:	440b      	add	r3, r1
 800c482:	68e1      	ldr	r1, [r4, #12]
 800c484:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c488:	428b      	cmp	r3, r1
 800c48a:	edc4 6a07 	vstr	s13, [r4, #28]
 800c48e:	6123      	str	r3, [r4, #16]
 800c490:	db15      	blt.n	800c4be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800c492:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800c496:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c49a:	edc4 6a07 	vstr	s13, [r4, #28]
 800c49e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800c4a2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c4a6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c4aa:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800c4ae:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c4b2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c4b6:	3201      	adds	r2, #1
 800c4b8:	1a5b      	subs	r3, r3, r1
 800c4ba:	6022      	str	r2, [r4, #0]
 800c4bc:	6123      	str	r3, [r4, #16]
 800c4be:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800c4c2:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c4c6:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800c4ca:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800c4ce:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c4d2:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800c4d6:	ed95 6a08 	vldr	s12, [r5, #32]
 800c4da:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c4de:	edd5 6a07 	vldr	s13, [r5, #28]
 800c4e2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c4e6:	441a      	add	r2, r3
 800c4e8:	696b      	ldr	r3, [r5, #20]
 800c4ea:	68a9      	ldr	r1, [r5, #8]
 800c4ec:	3301      	adds	r3, #1
 800c4ee:	616b      	str	r3, [r5, #20]
 800c4f0:	69ab      	ldr	r3, [r5, #24]
 800c4f2:	602a      	str	r2, [r5, #0]
 800c4f4:	3b01      	subs	r3, #1
 800c4f6:	61ab      	str	r3, [r5, #24]
 800c4f8:	692b      	ldr	r3, [r5, #16]
 800c4fa:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c4fe:	440b      	add	r3, r1
 800c500:	68e9      	ldr	r1, [r5, #12]
 800c502:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c506:	428b      	cmp	r3, r1
 800c508:	edc5 6a07 	vstr	s13, [r5, #28]
 800c50c:	612b      	str	r3, [r5, #16]
 800c50e:	db15      	blt.n	800c53c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800c510:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800c514:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c518:	edc5 6a07 	vstr	s13, [r5, #28]
 800c51c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800c520:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c524:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c528:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800c52c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c530:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c534:	3201      	adds	r2, #1
 800c536:	1a5b      	subs	r3, r3, r1
 800c538:	602a      	str	r2, [r5, #0]
 800c53a:	612b      	str	r3, [r5, #16]
 800c53c:	3f01      	subs	r7, #1
 800c53e:	e757      	b.n	800c3f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800c540:	4299      	cmp	r1, r3
 800c542:	dc13      	bgt.n	800c56c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800c544:	429a      	cmp	r2, r3
 800c546:	da14      	bge.n	800c572 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800c548:	2502      	movs	r5, #2
 800c54a:	2703      	movs	r7, #3
 800c54c:	46a9      	mov	r9, r5
 800c54e:	f04f 0800 	mov.w	r8, #0
 800c552:	f04f 0a01 	mov.w	sl, #1
 800c556:	e6ef      	b.n	800c338 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800c558:	2501      	movs	r5, #1
 800c55a:	2700      	movs	r7, #0
 800c55c:	46a9      	mov	r9, r5
 800c55e:	46b8      	mov	r8, r7
 800c560:	f04f 0a02 	mov.w	sl, #2
 800c564:	e6e8      	b.n	800c338 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800c566:	2501      	movs	r5, #1
 800c568:	2702      	movs	r7, #2
 800c56a:	e6e1      	b.n	800c330 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800c56c:	2500      	movs	r5, #0
 800c56e:	2701      	movs	r7, #1
 800c570:	e7f4      	b.n	800c55c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800c572:	2702      	movs	r7, #2
 800c574:	2503      	movs	r5, #3
 800c576:	f04f 0900 	mov.w	r9, #0
 800c57a:	46b8      	mov	r8, r7
 800c57c:	e7e9      	b.n	800c552 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800c57e:	4613      	mov	r3, r2
 800c580:	e728      	b.n	800c3d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800c582:	bf00      	nop
 800c584:	20082ebc 	.word	0x20082ebc
 800c588:	fffd8f01 	.word	0xfffd8f01
 800c58c:	00027100 	.word	0x00027100
 800c590:	0004e1ff 	.word	0x0004e1ff
 800c594:	0004e1fe 	.word	0x0004e1fe
 800c598:	20082ec4 	.word	0x20082ec4
 800c59c:	4613      	mov	r3, r2
 800c59e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800c5a2:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800c5a6:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800c5aa:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800c5ae:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800c5b2:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800c5b6:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800c5ba:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800c5be:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800c5c2:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800c5c6:	469e      	mov	lr, r3
 800c5c8:	469c      	mov	ip, r3
 800c5ca:	f04f 0900 	mov.w	r9, #0
 800c5ce:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800c5d0:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800c5d2:	9111      	str	r1, [sp, #68]	@ 0x44
 800c5d4:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800c5d8:	f1bc 0f00 	cmp.w	ip, #0
 800c5dc:	d147      	bne.n	800c66e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800c5de:	eb03 0c07 	add.w	ip, r3, r7
 800c5e2:	1ad7      	subs	r7, r2, r3
 800c5e4:	f1b9 0f00 	cmp.w	r9, #0
 800c5e8:	d009      	beq.n	800c5fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800c5ea:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800c5ee:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800c5f2:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800c5f6:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800c5fa:	9029      	str	r0, [sp, #164]	@ 0xa4
 800c5fc:	912d      	str	r1, [sp, #180]	@ 0xb4
 800c5fe:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800c602:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800c606:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800c60a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800c60e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800c612:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800c616:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800c61a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800c61e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800c622:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800c626:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800c62a:	f04f 0800 	mov.w	r8, #0
 800c62e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800c630:	9111      	str	r1, [sp, #68]	@ 0x44
 800c632:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800c636:	f1be 0f00 	cmp.w	lr, #0
 800c63a:	d031      	beq.n	800c6a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800c63c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800c63e:	4450      	add	r0, sl
 800c640:	4431      	add	r1, r6
 800c642:	4549      	cmp	r1, r9
 800c644:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800c648:	ee37 7a04 	vadd.f32	s14, s14, s8
 800c64c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800c650:	db08      	blt.n	800c664 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800c652:	ee77 7a85 	vadd.f32	s15, s15, s10
 800c656:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800c65a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800c65e:	3001      	adds	r0, #1
 800c660:	eba1 0109 	sub.w	r1, r1, r9
 800c664:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c668:	f04f 0801 	mov.w	r8, #1
 800c66c:	e7e3      	b.n	800c636 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800c66e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800c670:	4450      	add	r0, sl
 800c672:	4431      	add	r1, r6
 800c674:	4541      	cmp	r1, r8
 800c676:	ee37 7a24 	vadd.f32	s14, s14, s9
 800c67a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800c67e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800c682:	db08      	blt.n	800c696 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800c684:	ee76 6a85 	vadd.f32	s13, s13, s10
 800c688:	ee37 7a25 	vadd.f32	s14, s14, s11
 800c68c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800c690:	3001      	adds	r0, #1
 800c692:	eba1 0108 	sub.w	r1, r1, r8
 800c696:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c69a:	f04f 0901 	mov.w	r9, #1
 800c69e:	e79b      	b.n	800c5d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800c6a0:	449c      	add	ip, r3
 800c6a2:	1aff      	subs	r7, r7, r3
 800c6a4:	f1b8 0f00 	cmp.w	r8, #0
 800c6a8:	d009      	beq.n	800c6be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800c6aa:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800c6ae:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800c6b2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800c6b6:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800c6ba:	9019      	str	r0, [sp, #100]	@ 0x64
 800c6bc:	911d      	str	r1, [sp, #116]	@ 0x74
 800c6be:	1ad2      	subs	r2, r2, r3
 800c6c0:	e68b      	b.n	800c3da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c6c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c6c4:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800c6c6:	2b00      	cmp	r3, #0
 800c6c8:	f000 80d1 	beq.w	800c86e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800c6cc:	ad19      	add	r5, sp, #100	@ 0x64
 800c6ce:	ac39      	add	r4, sp, #228	@ 0xe4
 800c6d0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c6d2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800c6d6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c6da:	930c      	str	r3, [sp, #48]	@ 0x30
 800c6dc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c6de:	6963      	ldr	r3, [r4, #20]
 800c6e0:	440b      	add	r3, r1
 800c6e2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c6e6:	4408      	add	r0, r1
 800c6e8:	b200      	sxth	r0, r0
 800c6ea:	4283      	cmp	r3, r0
 800c6ec:	900d      	str	r0, [sp, #52]	@ 0x34
 800c6ee:	f280 80c1 	bge.w	800c874 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800c6f2:	428b      	cmp	r3, r1
 800c6f4:	da08      	bge.n	800c708 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c6f6:	2a00      	cmp	r2, #0
 800c6f8:	dd06      	ble.n	800c708 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c6fa:	1acb      	subs	r3, r1, r3
 800c6fc:	429a      	cmp	r2, r3
 800c6fe:	f2c0 80bb 	blt.w	800c878 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800c702:	2b00      	cmp	r3, #0
 800c704:	f300 80b9 	bgt.w	800c87a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800c708:	6967      	ldr	r7, [r4, #20]
 800c70a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c70c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800c710:	443b      	add	r3, r7
 800c712:	461f      	mov	r7, r3
 800c714:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c716:	1bdf      	subs	r7, r3, r7
 800c718:	4297      	cmp	r7, r2
 800c71a:	bfa8      	it	ge
 800c71c:	4617      	movge	r7, r2
 800c71e:	2f00      	cmp	r7, #0
 800c720:	f340 813c 	ble.w	800c99c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800c724:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c726:	6829      	ldr	r1, [r5, #0]
 800c728:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c72c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800c730:	4411      	add	r1, r2
 800c732:	4299      	cmp	r1, r3
 800c734:	6820      	ldr	r0, [r4, #0]
 800c736:	dd1a      	ble.n	800c76e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800c738:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800c73c:	4402      	add	r2, r0
 800c73e:	440b      	add	r3, r1
 800c740:	b21b      	sxth	r3, r3
 800c742:	429a      	cmp	r2, r3
 800c744:	dc13      	bgt.n	800c76e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800c746:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800c748:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c74a:	a912      	add	r1, sp, #72	@ 0x48
 800c74c:	681b      	ldr	r3, [r3, #0]
 800c74e:	9206      	str	r2, [sp, #24]
 800c750:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c752:	9500      	str	r5, [sp, #0]
 800c754:	9205      	str	r2, [sp, #20]
 800c756:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c758:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c75a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800c75e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800c760:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800c764:	aa49      	add	r2, sp, #292	@ 0x124
 800c766:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800c76a:	4623      	mov	r3, r4
 800c76c:	47c8      	blx	r9
 800c76e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c772:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800c776:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800c77a:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800c77e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c782:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800c786:	ed94 6a08 	vldr	s12, [r4, #32]
 800c78a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c78e:	edd4 6a07 	vldr	s13, [r4, #28]
 800c792:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c796:	441a      	add	r2, r3
 800c798:	6963      	ldr	r3, [r4, #20]
 800c79a:	68a1      	ldr	r1, [r4, #8]
 800c79c:	3301      	adds	r3, #1
 800c79e:	6163      	str	r3, [r4, #20]
 800c7a0:	69a3      	ldr	r3, [r4, #24]
 800c7a2:	6022      	str	r2, [r4, #0]
 800c7a4:	3b01      	subs	r3, #1
 800c7a6:	61a3      	str	r3, [r4, #24]
 800c7a8:	6923      	ldr	r3, [r4, #16]
 800c7aa:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c7ae:	440b      	add	r3, r1
 800c7b0:	68e1      	ldr	r1, [r4, #12]
 800c7b2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c7b6:	428b      	cmp	r3, r1
 800c7b8:	edc4 6a07 	vstr	s13, [r4, #28]
 800c7bc:	6123      	str	r3, [r4, #16]
 800c7be:	db15      	blt.n	800c7ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800c7c0:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800c7c4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c7c8:	edc4 6a07 	vstr	s13, [r4, #28]
 800c7cc:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800c7d0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c7d4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c7d8:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800c7dc:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c7e0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c7e4:	3201      	adds	r2, #1
 800c7e6:	1a5b      	subs	r3, r3, r1
 800c7e8:	6022      	str	r2, [r4, #0]
 800c7ea:	6123      	str	r3, [r4, #16]
 800c7ec:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800c7f0:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c7f4:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800c7f8:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800c7fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c800:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800c804:	ed95 6a08 	vldr	s12, [r5, #32]
 800c808:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c80c:	edd5 6a07 	vldr	s13, [r5, #28]
 800c810:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c814:	441a      	add	r2, r3
 800c816:	696b      	ldr	r3, [r5, #20]
 800c818:	68a9      	ldr	r1, [r5, #8]
 800c81a:	3301      	adds	r3, #1
 800c81c:	616b      	str	r3, [r5, #20]
 800c81e:	69ab      	ldr	r3, [r5, #24]
 800c820:	602a      	str	r2, [r5, #0]
 800c822:	3b01      	subs	r3, #1
 800c824:	61ab      	str	r3, [r5, #24]
 800c826:	692b      	ldr	r3, [r5, #16]
 800c828:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c82c:	440b      	add	r3, r1
 800c82e:	68e9      	ldr	r1, [r5, #12]
 800c830:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c834:	428b      	cmp	r3, r1
 800c836:	edc5 6a07 	vstr	s13, [r5, #28]
 800c83a:	612b      	str	r3, [r5, #16]
 800c83c:	db15      	blt.n	800c86a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800c83e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800c842:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c846:	edc5 6a07 	vstr	s13, [r5, #28]
 800c84a:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800c84e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c852:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c856:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800c85a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c85e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c862:	3201      	adds	r2, #1
 800c864:	1a5b      	subs	r3, r3, r1
 800c866:	602a      	str	r2, [r5, #0]
 800c868:	612b      	str	r3, [r5, #16]
 800c86a:	3f01      	subs	r7, #1
 800c86c:	e757      	b.n	800c71e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800c86e:	ad39      	add	r5, sp, #228	@ 0xe4
 800c870:	ac19      	add	r4, sp, #100	@ 0x64
 800c872:	e72d      	b.n	800c6d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800c874:	4613      	mov	r3, r2
 800c876:	e744      	b.n	800c702 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800c878:	4613      	mov	r3, r2
 800c87a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800c87e:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800c882:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800c886:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800c88a:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800c88e:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800c892:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800c896:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800c89a:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800c89e:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800c8a2:	469e      	mov	lr, r3
 800c8a4:	461f      	mov	r7, r3
 800c8a6:	f04f 0900 	mov.w	r9, #0
 800c8aa:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800c8ac:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800c8b0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800c8b2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800c8b6:	960e      	str	r6, [sp, #56]	@ 0x38
 800c8b8:	2f00      	cmp	r7, #0
 800c8ba:	d146      	bne.n	800c94a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800c8bc:	449c      	add	ip, r3
 800c8be:	1ad7      	subs	r7, r2, r3
 800c8c0:	f1b9 0f00 	cmp.w	r9, #0
 800c8c4:	d009      	beq.n	800c8da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800c8c6:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800c8ca:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800c8ce:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800c8d2:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800c8d6:	9039      	str	r0, [sp, #228]	@ 0xe4
 800c8d8:	913d      	str	r1, [sp, #244]	@ 0xf4
 800c8da:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800c8de:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800c8e2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800c8e6:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800c8ea:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800c8ee:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800c8f2:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800c8f6:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800c8fa:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800c8fe:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800c902:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800c906:	f04f 0800 	mov.w	r8, #0
 800c90a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800c90c:	910e      	str	r1, [sp, #56]	@ 0x38
 800c90e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800c912:	f1be 0f00 	cmp.w	lr, #0
 800c916:	d030      	beq.n	800c97a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800c918:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800c91a:	4450      	add	r0, sl
 800c91c:	4431      	add	r1, r6
 800c91e:	4549      	cmp	r1, r9
 800c920:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800c924:	ee37 7a04 	vadd.f32	s14, s14, s8
 800c928:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800c92c:	db08      	blt.n	800c940 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800c92e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800c932:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800c936:	ee37 7a06 	vadd.f32	s14, s14, s12
 800c93a:	3001      	adds	r0, #1
 800c93c:	eba1 0109 	sub.w	r1, r1, r9
 800c940:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c944:	f04f 0801 	mov.w	r8, #1
 800c948:	e7e3      	b.n	800c912 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800c94a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800c94c:	4450      	add	r0, sl
 800c94e:	4431      	add	r1, r6
 800c950:	4541      	cmp	r1, r8
 800c952:	ee37 7a24 	vadd.f32	s14, s14, s9
 800c956:	ee77 7a84 	vadd.f32	s15, s15, s8
 800c95a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800c95e:	db08      	blt.n	800c972 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800c960:	ee76 6a85 	vadd.f32	s13, s13, s10
 800c964:	ee37 7a25 	vadd.f32	s14, s14, s11
 800c968:	ee77 7a86 	vadd.f32	s15, s15, s12
 800c96c:	3001      	adds	r0, #1
 800c96e:	eba1 0108 	sub.w	r1, r1, r8
 800c972:	3f01      	subs	r7, #1
 800c974:	f04f 0901 	mov.w	r9, #1
 800c978:	e79e      	b.n	800c8b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800c97a:	449c      	add	ip, r3
 800c97c:	1aff      	subs	r7, r7, r3
 800c97e:	f1b8 0f00 	cmp.w	r8, #0
 800c982:	d009      	beq.n	800c998 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800c984:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800c988:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800c98c:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800c990:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800c994:	9019      	str	r0, [sp, #100]	@ 0x64
 800c996:	911d      	str	r1, [sp, #116]	@ 0x74
 800c998:	1ad2      	subs	r2, r2, r3
 800c99a:	e6b5      	b.n	800c708 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c99c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c99e:	681b      	ldr	r3, [r3, #0]
 800c9a0:	b923      	cbnz	r3, 800c9ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9a2:	4b04      	ldr	r3, [pc, #16]	@ (800c9b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800c9a4:	6818      	ldr	r0, [r3, #0]
 800c9a6:	6803      	ldr	r3, [r0, #0]
 800c9a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c9aa:	4798      	blx	r3
 800c9ac:	b05b      	add	sp, #364	@ 0x16c
 800c9ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c9b2:	bf00      	nop
 800c9b4:	20082ec4 	.word	0x20082ec4

0800c9b8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c9b8:	2b03      	cmp	r3, #3
 800c9ba:	d818      	bhi.n	800c9ee <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800c9bc:	e8df f003 	tbb	[pc, r3]
 800c9c0:	130d0602 	.word	0x130d0602
 800c9c4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c9c8:	1850      	adds	r0, r2, r1
 800c9ca:	4770      	bx	lr
 800c9cc:	8803      	ldrh	r3, [r0, #0]
 800c9ce:	8880      	ldrh	r0, [r0, #4]
 800c9d0:	4418      	add	r0, r3
 800c9d2:	b200      	sxth	r0, r0
 800c9d4:	1a80      	subs	r0, r0, r2
 800c9d6:	3801      	subs	r0, #1
 800c9d8:	4770      	bx	lr
 800c9da:	8803      	ldrh	r3, [r0, #0]
 800c9dc:	8880      	ldrh	r0, [r0, #4]
 800c9de:	4418      	add	r0, r3
 800c9e0:	b200      	sxth	r0, r0
 800c9e2:	1a40      	subs	r0, r0, r1
 800c9e4:	e7f7      	b.n	800c9d6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c9e6:	f9b0 0000 	ldrsh.w	r0, [r0]
 800c9ea:	4410      	add	r0, r2
 800c9ec:	4770      	bx	lr
 800c9ee:	2000      	movs	r0, #0
 800c9f0:	4770      	bx	lr

0800c9f2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c9f2:	2b03      	cmp	r3, #3
 800c9f4:	d817      	bhi.n	800ca26 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800c9f6:	e8df f003 	tbb	[pc, r3]
 800c9fa:	0602      	.short	0x0602
 800c9fc:	1009      	.short	0x1009
 800c9fe:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800ca02:	1850      	adds	r0, r2, r1
 800ca04:	4770      	bx	lr
 800ca06:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ca0a:	e7fa      	b.n	800ca02 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800ca0c:	8843      	ldrh	r3, [r0, #2]
 800ca0e:	88c0      	ldrh	r0, [r0, #6]
 800ca10:	4418      	add	r0, r3
 800ca12:	b200      	sxth	r0, r0
 800ca14:	1a80      	subs	r0, r0, r2
 800ca16:	3801      	subs	r0, #1
 800ca18:	4770      	bx	lr
 800ca1a:	8843      	ldrh	r3, [r0, #2]
 800ca1c:	88c0      	ldrh	r0, [r0, #6]
 800ca1e:	4418      	add	r0, r3
 800ca20:	b200      	sxth	r0, r0
 800ca22:	1a40      	subs	r0, r0, r1
 800ca24:	e7f7      	b.n	800ca16 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800ca26:	2000      	movs	r0, #0
 800ca28:	4770      	bx	lr
	...

0800ca2c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800ca2c:	2200      	movs	r2, #0
 800ca2e:	4b01      	ldr	r3, [pc, #4]	@ (800ca34 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800ca30:	601a      	str	r2, [r3, #0]
 800ca32:	4770      	bx	lr
 800ca34:	20082ecc 	.word	0x20082ecc

0800ca38 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800ca38:	4603      	mov	r3, r0
 800ca3a:	b1c8      	cbz	r0, 800ca70 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800ca3c:	0c02      	lsrs	r2, r0, #16
 800ca3e:	0412      	lsls	r2, r2, #16
 800ca40:	b9a2      	cbnz	r2, 800ca6c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800ca42:	0403      	lsls	r3, r0, #16
 800ca44:	2010      	movs	r0, #16
 800ca46:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800ca4a:	bf04      	itt	eq
 800ca4c:	021b      	lsleq	r3, r3, #8
 800ca4e:	3008      	addeq	r0, #8
 800ca50:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800ca54:	bf04      	itt	eq
 800ca56:	011b      	lsleq	r3, r3, #4
 800ca58:	3004      	addeq	r0, #4
 800ca5a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800ca5e:	bf04      	itt	eq
 800ca60:	009b      	lsleq	r3, r3, #2
 800ca62:	3002      	addeq	r0, #2
 800ca64:	2b00      	cmp	r3, #0
 800ca66:	db04      	blt.n	800ca72 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800ca68:	3001      	adds	r0, #1
 800ca6a:	4770      	bx	lr
 800ca6c:	2000      	movs	r0, #0
 800ca6e:	e7ea      	b.n	800ca46 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800ca70:	2020      	movs	r0, #32
 800ca72:	4770      	bx	lr

0800ca74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800ca74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca78:	b087      	sub	sp, #28
 800ca7a:	460d      	mov	r5, r1
 800ca7c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800ca80:	4616      	mov	r6, r2
 800ca82:	4698      	mov	r8, r3
 800ca84:	4601      	mov	r1, r0
 800ca86:	b120      	cbz	r0, 800ca92 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800ca88:	b11a      	cbz	r2, 800ca92 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800ca8a:	2d1f      	cmp	r5, #31
 800ca8c:	d801      	bhi.n	800ca92 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800ca8e:	2b1f      	cmp	r3, #31
 800ca90:	d904      	bls.n	800ca9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800ca92:	2000      	movs	r0, #0
 800ca94:	6038      	str	r0, [r7, #0]
 800ca96:	b007      	add	sp, #28
 800ca98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ca9c:	b97d      	cbnz	r5, 800cabe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800ca9e:	b143      	cbz	r3, 800cab2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800caa0:	4602      	mov	r2, r0
 800caa2:	e9cd 4700 	strd	r4, r7, [sp]
 800caa6:	462b      	mov	r3, r5
 800caa8:	4641      	mov	r1, r8
 800caaa:	4630      	mov	r0, r6
 800caac:	f7ff ffe2 	bl	800ca74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cab0:	e7f1      	b.n	800ca96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cab2:	f04f 33ff 	mov.w	r3, #4294967295
 800cab6:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800caba:	603b      	str	r3, [r7, #0]
 800cabc:	e7eb      	b.n	800ca96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cabe:	fa32 fa05 	lsrs.w	sl, r2, r5
 800cac2:	d106      	bne.n	800cad2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800cac4:	4346      	muls	r6, r0
 800cac6:	fbb6 f0f4 	udiv	r0, r6, r4
 800caca:	fb04 6610 	mls	r6, r4, r0, r6
 800cace:	603e      	str	r6, [r7, #0]
 800cad0:	e7e1      	b.n	800ca96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cad2:	fa00 fb05 	lsl.w	fp, r0, r5
 800cad6:	fbbb f9f4 	udiv	r9, fp, r4
 800cada:	2201      	movs	r2, #1
 800cadc:	fb0a f309 	mul.w	r3, sl, r9
 800cae0:	40aa      	lsls	r2, r5
 800cae2:	3a01      	subs	r2, #1
 800cae4:	4016      	ands	r6, r2
 800cae6:	4630      	mov	r0, r6
 800cae8:	9303      	str	r3, [sp, #12]
 800caea:	f7ff ffa5 	bl	800ca38 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800caee:	462b      	mov	r3, r5
 800caf0:	460a      	mov	r2, r1
 800caf2:	e9cd 4700 	strd	r4, r7, [sp]
 800caf6:	4601      	mov	r1, r0
 800caf8:	4630      	mov	r0, r6
 800cafa:	f7ff ffbb 	bl	800ca74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cafe:	fb04 b919 	mls	r9, r4, r9, fp
 800cb02:	4606      	mov	r6, r0
 800cb04:	4648      	mov	r0, r9
 800cb06:	eb05 0108 	add.w	r1, r5, r8
 800cb0a:	f7ff ff95 	bl	800ca38 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cb0e:	ab05      	add	r3, sp, #20
 800cb10:	e9cd 4300 	strd	r4, r3, [sp]
 800cb14:	464a      	mov	r2, r9
 800cb16:	4603      	mov	r3, r0
 800cb18:	4650      	mov	r0, sl
 800cb1a:	f7ff ffab 	bl	800ca74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb1e:	6839      	ldr	r1, [r7, #0]
 800cb20:	9a05      	ldr	r2, [sp, #20]
 800cb22:	9b03      	ldr	r3, [sp, #12]
 800cb24:	4411      	add	r1, r2
 800cb26:	fbb1 f2f4 	udiv	r2, r1, r4
 800cb2a:	fb04 1412 	mls	r4, r4, r2, r1
 800cb2e:	18d3      	adds	r3, r2, r3
 800cb30:	441e      	add	r6, r3
 800cb32:	4430      	add	r0, r6
 800cb34:	603c      	str	r4, [r7, #0]
 800cb36:	e7ae      	b.n	800ca96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800cb38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800cb38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cb3c:	b085      	sub	sp, #20
 800cb3e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800cb40:	f1b0 0900 	subs.w	r9, r0, #0
 800cb44:	461d      	mov	r5, r3
 800cb46:	bfbf      	itttt	lt
 800cb48:	6823      	ldrlt	r3, [r4, #0]
 800cb4a:	f1c9 0900 	rsblt	r9, r9, #0
 800cb4e:	425b      	neglt	r3, r3
 800cb50:	6023      	strlt	r3, [r4, #0]
 800cb52:	bfb4      	ite	lt
 800cb54:	f04f 36ff 	movlt.w	r6, #4294967295
 800cb58:	2601      	movge	r6, #1
 800cb5a:	2a00      	cmp	r2, #0
 800cb5c:	4617      	mov	r7, r2
 800cb5e:	da04      	bge.n	800cb6a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800cb60:	6823      	ldr	r3, [r4, #0]
 800cb62:	4257      	negs	r7, r2
 800cb64:	425b      	negs	r3, r3
 800cb66:	4276      	negs	r6, r6
 800cb68:	6023      	str	r3, [r4, #0]
 800cb6a:	2d00      	cmp	r5, #0
 800cb6c:	4638      	mov	r0, r7
 800cb6e:	bfba      	itte	lt
 800cb70:	426d      	neglt	r5, r5
 800cb72:	f04f 38ff 	movlt.w	r8, #4294967295
 800cb76:	f04f 0801 	movge.w	r8, #1
 800cb7a:	f7ff ff5d 	bl	800ca38 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cb7e:	ab03      	add	r3, sp, #12
 800cb80:	e9cd 5300 	strd	r5, r3, [sp]
 800cb84:	463a      	mov	r2, r7
 800cb86:	4603      	mov	r3, r0
 800cb88:	4648      	mov	r0, r9
 800cb8a:	f7ff ff73 	bl	800ca74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb8e:	6823      	ldr	r3, [r4, #0]
 800cb90:	9a03      	ldr	r2, [sp, #12]
 800cb92:	4546      	cmp	r6, r8
 800cb94:	441a      	add	r2, r3
 800cb96:	fb92 f3f5 	sdiv	r3, r2, r5
 800cb9a:	4418      	add	r0, r3
 800cb9c:	fb05 2313 	mls	r3, r5, r3, r2
 800cba0:	bf18      	it	ne
 800cba2:	4240      	negne	r0, r0
 800cba4:	1c72      	adds	r2, r6, #1
 800cba6:	6023      	str	r3, [r4, #0]
 800cba8:	d105      	bne.n	800cbb6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800cbaa:	2b00      	cmp	r3, #0
 800cbac:	f1c3 0200 	rsb	r2, r3, #0
 800cbb0:	db0b      	blt.n	800cbca <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800cbb2:	6022      	str	r2, [r4, #0]
 800cbb4:	e006      	b.n	800cbc4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cbb6:	2e01      	cmp	r6, #1
 800cbb8:	d104      	bne.n	800cbc4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cbba:	2b00      	cmp	r3, #0
 800cbbc:	da02      	bge.n	800cbc4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cbbe:	442b      	add	r3, r5
 800cbc0:	3801      	subs	r0, #1
 800cbc2:	6023      	str	r3, [r4, #0]
 800cbc4:	b005      	add	sp, #20
 800cbc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cbca:	3801      	subs	r0, #1
 800cbcc:	1b52      	subs	r2, r2, r5
 800cbce:	e7f0      	b.n	800cbb2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800cbd0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800cbd0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800cbd4:	4c1c      	ldr	r4, [pc, #112]	@ (800cc48 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800cbd6:	4605      	mov	r5, r0
 800cbd8:	69a3      	ldr	r3, [r4, #24]
 800cbda:	6807      	ldr	r7, [r0, #0]
 800cbdc:	b92b      	cbnz	r3, 800cbea <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800cbde:	6840      	ldr	r0, [r0, #4]
 800cbe0:	e9c5 7000 	strd	r7, r0, [r5]
 800cbe4:	b004      	add	sp, #16
 800cbe6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cbea:	f04f 0802 	mov.w	r8, #2
 800cbee:	fb93 f1f8 	sdiv	r1, r3, r8
 800cbf2:	68a2      	ldr	r2, [r4, #8]
 800cbf4:	ae04      	add	r6, sp, #16
 800cbf6:	440a      	add	r2, r1
 800cbf8:	f846 2d04 	str.w	r2, [r6, #-4]!
 800cbfc:	69e1      	ldr	r1, [r4, #28]
 800cbfe:	463a      	mov	r2, r7
 800cc00:	9600      	str	r6, [sp, #0]
 800cc02:	6820      	ldr	r0, [r4, #0]
 800cc04:	f7ff ff98 	bl	800cb38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc08:	69a3      	ldr	r3, [r4, #24]
 800cc0a:	4607      	mov	r7, r0
 800cc0c:	686a      	ldr	r2, [r5, #4]
 800cc0e:	6a21      	ldr	r1, [r4, #32]
 800cc10:	9600      	str	r6, [sp, #0]
 800cc12:	6860      	ldr	r0, [r4, #4]
 800cc14:	f7ff ff90 	bl	800cb38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc18:	69a3      	ldr	r3, [r4, #24]
 800cc1a:	6962      	ldr	r2, [r4, #20]
 800cc1c:	fb93 f8f8 	sdiv	r8, r3, r8
 800cc20:	4442      	add	r2, r8
 800cc22:	9203      	str	r2, [sp, #12]
 800cc24:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800cc26:	682a      	ldr	r2, [r5, #0]
 800cc28:	4407      	add	r7, r0
 800cc2a:	9600      	str	r6, [sp, #0]
 800cc2c:	68e0      	ldr	r0, [r4, #12]
 800cc2e:	f7ff ff83 	bl	800cb38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc32:	9600      	str	r6, [sp, #0]
 800cc34:	4680      	mov	r8, r0
 800cc36:	69a3      	ldr	r3, [r4, #24]
 800cc38:	686a      	ldr	r2, [r5, #4]
 800cc3a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800cc3c:	6920      	ldr	r0, [r4, #16]
 800cc3e:	f7ff ff7b 	bl	800cb38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc42:	4440      	add	r0, r8
 800cc44:	e7cc      	b.n	800cbe0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800cc46:	bf00      	nop
 800cc48:	20082ed0 	.word	0x20082ed0

0800cc4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800cc4c:	4b07      	ldr	r3, [pc, #28]	@ (800cc6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800cc4e:	781b      	ldrb	r3, [r3, #0]
 800cc50:	2b01      	cmp	r3, #1
 800cc52:	d109      	bne.n	800cc68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800cc54:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cc58:	f9b0 2000 	ldrsh.w	r2, [r0]
 800cc5c:	8003      	strh	r3, [r0, #0]
 800cc5e:	4b04      	ldr	r3, [pc, #16]	@ (800cc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800cc60:	881b      	ldrh	r3, [r3, #0]
 800cc62:	3b01      	subs	r3, #1
 800cc64:	1a9b      	subs	r3, r3, r2
 800cc66:	800b      	strh	r3, [r1, #0]
 800cc68:	4770      	bx	lr
 800cc6a:	bf00      	nop
 800cc6c:	20082ebc 	.word	0x20082ebc
 800cc70:	20082eb8 	.word	0x20082eb8

0800cc74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800cc74:	b510      	push	{r4, lr}
 800cc76:	4b07      	ldr	r3, [pc, #28]	@ (800cc94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800cc78:	781b      	ldrb	r3, [r3, #0]
 800cc7a:	2b01      	cmp	r3, #1
 800cc7c:	d108      	bne.n	800cc90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800cc7e:	4b06      	ldr	r3, [pc, #24]	@ (800cc98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800cc80:	880c      	ldrh	r4, [r1, #0]
 800cc82:	881b      	ldrh	r3, [r3, #0]
 800cc84:	f9b0 2000 	ldrsh.w	r2, [r0]
 800cc88:	3b01      	subs	r3, #1
 800cc8a:	1b1b      	subs	r3, r3, r4
 800cc8c:	8003      	strh	r3, [r0, #0]
 800cc8e:	800a      	strh	r2, [r1, #0]
 800cc90:	bd10      	pop	{r4, pc}
 800cc92:	bf00      	nop
 800cc94:	20082ebc 	.word	0x20082ebc
 800cc98:	20082eb8 	.word	0x20082eb8

0800cc9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800cc9c:	b510      	push	{r4, lr}
 800cc9e:	4b0a      	ldr	r3, [pc, #40]	@ (800ccc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800cca0:	781b      	ldrb	r3, [r3, #0]
 800cca2:	2b01      	cmp	r3, #1
 800cca4:	d10e      	bne.n	800ccc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800cca6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ccaa:	8843      	ldrh	r3, [r0, #2]
 800ccac:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ccb0:	18ca      	adds	r2, r1, r3
 800ccb2:	4b06      	ldr	r3, [pc, #24]	@ (800cccc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800ccb4:	8044      	strh	r4, [r0, #2]
 800ccb6:	881b      	ldrh	r3, [r3, #0]
 800ccb8:	1a9b      	subs	r3, r3, r2
 800ccba:	8003      	strh	r3, [r0, #0]
 800ccbc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ccc0:	8081      	strh	r1, [r0, #4]
 800ccc2:	80c3      	strh	r3, [r0, #6]
 800ccc4:	bd10      	pop	{r4, pc}
 800ccc6:	bf00      	nop
 800ccc8:	20082ebc 	.word	0x20082ebc
 800cccc:	20082eb8 	.word	0x20082eb8

0800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800ccd0:	4b08      	ldr	r3, [pc, #32]	@ (800ccf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800ccd2:	781b      	ldrb	r3, [r3, #0]
 800ccd4:	2b01      	cmp	r3, #1
 800ccd6:	d10c      	bne.n	800ccf2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800ccd8:	8803      	ldrh	r3, [r0, #0]
 800ccda:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800ccde:	8842      	ldrh	r2, [r0, #2]
 800cce0:	8002      	strh	r2, [r0, #0]
 800cce2:	185a      	adds	r2, r3, r1
 800cce4:	4b04      	ldr	r3, [pc, #16]	@ (800ccf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800cce6:	881b      	ldrh	r3, [r3, #0]
 800cce8:	1a9b      	subs	r3, r3, r2
 800ccea:	8043      	strh	r3, [r0, #2]
 800ccec:	88c3      	ldrh	r3, [r0, #6]
 800ccee:	80c1      	strh	r1, [r0, #6]
 800ccf0:	8083      	strh	r3, [r0, #4]
 800ccf2:	4770      	bx	lr
 800ccf4:	20082ebc 	.word	0x20082ebc
 800ccf8:	20082eb8 	.word	0x20082eb8

0800ccfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800ccfc:	b510      	push	{r4, lr}
 800ccfe:	4b07      	ldr	r3, [pc, #28]	@ (800cd1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800cd00:	781b      	ldrb	r3, [r3, #0]
 800cd02:	2b01      	cmp	r3, #1
 800cd04:	d108      	bne.n	800cd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800cd06:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cd0a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cd0e:	8003      	strh	r3, [r0, #0]
 800cd10:	8893      	ldrh	r3, [r2, #4]
 800cd12:	3b01      	subs	r3, #1
 800cd14:	1b1b      	subs	r3, r3, r4
 800cd16:	800b      	strh	r3, [r1, #0]
 800cd18:	bd10      	pop	{r4, pc}
 800cd1a:	bf00      	nop
 800cd1c:	20082ebc 	.word	0x20082ebc

0800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800cd20:	b510      	push	{r4, lr}
 800cd22:	4b0a      	ldr	r3, [pc, #40]	@ (800cd4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800cd24:	460a      	mov	r2, r1
 800cd26:	781b      	ldrb	r3, [r3, #0]
 800cd28:	2b01      	cmp	r3, #1
 800cd2a:	d10d      	bne.n	800cd48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800cd2c:	8881      	ldrh	r1, [r0, #4]
 800cd2e:	8803      	ldrh	r3, [r0, #0]
 800cd30:	440b      	add	r3, r1
 800cd32:	4601      	mov	r1, r0
 800cd34:	3b01      	subs	r3, #1
 800cd36:	f821 3b02 	strh.w	r3, [r1], #2
 800cd3a:	f7ff ffdf 	bl	800ccfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800cd3e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cd42:	88c2      	ldrh	r2, [r0, #6]
 800cd44:	80c3      	strh	r3, [r0, #6]
 800cd46:	8082      	strh	r2, [r0, #4]
 800cd48:	bd10      	pop	{r4, pc}
 800cd4a:	bf00      	nop
 800cd4c:	20082ebc 	.word	0x20082ebc

0800cd50 <_ZN8touchgfx11Application13requestRedrawEv>:
 800cd50:	2100      	movs	r1, #0
 800cd52:	4b06      	ldr	r3, [pc, #24]	@ (800cd6c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800cd54:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800cd58:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cd5c:	4b04      	ldr	r3, [pc, #16]	@ (800cd70 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800cd5e:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800cd62:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cd66:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800cd6a:	4770      	bx	lr
 800cd6c:	20082eb8 	.word	0x20082eb8
 800cd70:	20082eba 	.word	0x20082eba

0800cd74 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800cd74:	4b03      	ldr	r3, [pc, #12]	@ (800cd84 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800cd76:	6818      	ldr	r0, [r3, #0]
 800cd78:	b110      	cbz	r0, 800cd80 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800cd7a:	6803      	ldr	r3, [r0, #0]
 800cd7c:	699b      	ldr	r3, [r3, #24]
 800cd7e:	4718      	bx	r3
 800cd80:	4770      	bx	lr
 800cd82:	bf00      	nop
 800cd84:	20082f00 	.word	0x20082f00

0800cd88 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800cd88:	4770      	bx	lr
	...

0800cd8c <_ZN8touchgfx11Application4drawEv>:
 800cd8c:	b507      	push	{r0, r1, r2, lr}
 800cd8e:	2100      	movs	r1, #0
 800cd90:	4b08      	ldr	r3, [pc, #32]	@ (800cdb4 <_ZN8touchgfx11Application4drawEv+0x28>)
 800cd92:	9100      	str	r1, [sp, #0]
 800cd94:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cd98:	4b07      	ldr	r3, [pc, #28]	@ (800cdb8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800cd9a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cd9e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cda2:	4669      	mov	r1, sp
 800cda4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cda8:	6803      	ldr	r3, [r0, #0]
 800cdaa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800cdac:	4798      	blx	r3
 800cdae:	b003      	add	sp, #12
 800cdb0:	f85d fb04 	ldr.w	pc, [sp], #4
 800cdb4:	20082eb8 	.word	0x20082eb8
 800cdb8:	20082eba 	.word	0x20082eba

0800cdbc <_ZN8touchgfx11Application10invalidateEv>:
 800cdbc:	2100      	movs	r1, #0
 800cdbe:	4b09      	ldr	r3, [pc, #36]	@ (800cde4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800cdc0:	b082      	sub	sp, #8
 800cdc2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cdc6:	4b08      	ldr	r3, [pc, #32]	@ (800cde8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800cdc8:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cdcc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cdd0:	9100      	str	r1, [sp, #0]
 800cdd2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cdd6:	6803      	ldr	r3, [r0, #0]
 800cdd8:	aa02      	add	r2, sp, #8
 800cdda:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800cddc:	e912 0006 	ldmdb	r2, {r1, r2}
 800cde0:	b002      	add	sp, #8
 800cde2:	4718      	bx	r3
 800cde4:	20082eb8 	.word	0x20082eb8
 800cde8:	20082eba 	.word	0x20082eba

0800cdec <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800cdec:	4b03      	ldr	r3, [pc, #12]	@ (800cdfc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800cdee:	6818      	ldr	r0, [r3, #0]
 800cdf0:	b110      	cbz	r0, 800cdf8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800cdf2:	6803      	ldr	r3, [r0, #0]
 800cdf4:	69db      	ldr	r3, [r3, #28]
 800cdf6:	4718      	bx	r3
 800cdf8:	4770      	bx	lr
 800cdfa:	bf00      	nop
 800cdfc:	20082f00 	.word	0x20082f00

0800ce00 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ce00:	4b03      	ldr	r3, [pc, #12]	@ (800ce10 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ce02:	6818      	ldr	r0, [r3, #0]
 800ce04:	b110      	cbz	r0, 800ce0c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ce06:	6803      	ldr	r3, [r0, #0]
 800ce08:	6a1b      	ldr	r3, [r3, #32]
 800ce0a:	4718      	bx	r3
 800ce0c:	4770      	bx	lr
 800ce0e:	bf00      	nop
 800ce10:	20082f00 	.word	0x20082f00

0800ce14 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800ce14:	2300      	movs	r3, #0
 800ce16:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800ce1a:	4770      	bx	lr

0800ce1c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ce1c:	4b03      	ldr	r3, [pc, #12]	@ (800ce2c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ce1e:	6818      	ldr	r0, [r3, #0]
 800ce20:	b110      	cbz	r0, 800ce28 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ce22:	6803      	ldr	r3, [r0, #0]
 800ce24:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ce26:	4718      	bx	r3
 800ce28:	4770      	bx	lr
 800ce2a:	bf00      	nop
 800ce2c:	20082f00 	.word	0x20082f00

0800ce30 <_ZN8touchgfx11ApplicationD1Ev>:
 800ce30:	4770      	bx	lr

0800ce32 <_ZN8touchgfx11ApplicationD0Ev>:
 800ce32:	b510      	push	{r4, lr}
 800ce34:	4604      	mov	r4, r0
 800ce36:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800ce3a:	f024 f94c 	bl	80310d6 <_ZdlPvj>
 800ce3e:	4620      	mov	r0, r4
 800ce40:	bd10      	pop	{r4, pc}

0800ce42 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ce42:	b510      	push	{r4, lr}
 800ce44:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ce48:	888a      	ldrh	r2, [r1, #4]
 800ce4a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ce4e:	4422      	add	r2, r4
 800ce50:	b212      	sxth	r2, r2
 800ce52:	4293      	cmp	r3, r2
 800ce54:	da15      	bge.n	800ce82 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ce56:	8882      	ldrh	r2, [r0, #4]
 800ce58:	4413      	add	r3, r2
 800ce5a:	b21b      	sxth	r3, r3
 800ce5c:	429c      	cmp	r4, r3
 800ce5e:	da10      	bge.n	800ce82 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ce60:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ce64:	88c9      	ldrh	r1, [r1, #6]
 800ce66:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ce6a:	4419      	add	r1, r3
 800ce6c:	b209      	sxth	r1, r1
 800ce6e:	428a      	cmp	r2, r1
 800ce70:	da07      	bge.n	800ce82 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ce72:	88c0      	ldrh	r0, [r0, #6]
 800ce74:	4410      	add	r0, r2
 800ce76:	b200      	sxth	r0, r0
 800ce78:	4283      	cmp	r3, r0
 800ce7a:	bfac      	ite	ge
 800ce7c:	2000      	movge	r0, #0
 800ce7e:	2001      	movlt	r0, #1
 800ce80:	bd10      	pop	{r4, pc}
 800ce82:	2000      	movs	r0, #0
 800ce84:	e7fc      	b.n	800ce80 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800ce86 <_ZN8touchgfx4Rect10restrictToEss>:
 800ce86:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ce8a:	b510      	push	{r4, lr}
 800ce8c:	2b00      	cmp	r3, #0
 800ce8e:	da04      	bge.n	800ce9a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800ce90:	8884      	ldrh	r4, [r0, #4]
 800ce92:	4423      	add	r3, r4
 800ce94:	8083      	strh	r3, [r0, #4]
 800ce96:	2300      	movs	r3, #0
 800ce98:	8003      	strh	r3, [r0, #0]
 800ce9a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ce9e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cea2:	1b09      	subs	r1, r1, r4
 800cea4:	428b      	cmp	r3, r1
 800cea6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800ceaa:	bfc8      	it	gt
 800ceac:	8081      	strhgt	r1, [r0, #4]
 800ceae:	2b00      	cmp	r3, #0
 800ceb0:	da04      	bge.n	800cebc <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800ceb2:	88c1      	ldrh	r1, [r0, #6]
 800ceb4:	440b      	add	r3, r1
 800ceb6:	80c3      	strh	r3, [r0, #6]
 800ceb8:	2300      	movs	r3, #0
 800ceba:	8043      	strh	r3, [r0, #2]
 800cebc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800cec0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800cec4:	1a52      	subs	r2, r2, r1
 800cec6:	4293      	cmp	r3, r2
 800cec8:	bfc8      	it	gt
 800ceca:	80c2      	strhgt	r2, [r0, #6]
 800cecc:	bd10      	pop	{r4, pc}
	...

0800ced0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800ced0:	b510      	push	{r4, lr}
 800ced2:	460c      	mov	r4, r1
 800ced4:	4b0f      	ldr	r3, [pc, #60]	@ (800cf14 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800ced6:	4620      	mov	r0, r4
 800ced8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cedc:	4b0e      	ldr	r3, [pc, #56]	@ (800cf18 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800cede:	f9b3 1000 	ldrsh.w	r1, [r3]
 800cee2:	f7ff ffd0 	bl	800ce86 <_ZN8touchgfx4Rect10restrictToEss>
 800cee6:	4b0d      	ldr	r3, [pc, #52]	@ (800cf1c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800cee8:	6818      	ldr	r0, [r3, #0]
 800ceea:	b190      	cbz	r0, 800cf12 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800ceec:	6803      	ldr	r3, [r0, #0]
 800ceee:	4621      	mov	r1, r4
 800cef0:	689b      	ldr	r3, [r3, #8]
 800cef2:	4798      	blx	r3
 800cef4:	4b0a      	ldr	r3, [pc, #40]	@ (800cf20 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800cef6:	6818      	ldr	r0, [r3, #0]
 800cef8:	b118      	cbz	r0, 800cf02 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800cefa:	6803      	ldr	r3, [r0, #0]
 800cefc:	4621      	mov	r1, r4
 800cefe:	689b      	ldr	r3, [r3, #8]
 800cf00:	4798      	blx	r3
 800cf02:	4b08      	ldr	r3, [pc, #32]	@ (800cf24 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800cf04:	4621      	mov	r1, r4
 800cf06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cf0a:	6818      	ldr	r0, [r3, #0]
 800cf0c:	6803      	ldr	r3, [r0, #0]
 800cf0e:	69db      	ldr	r3, [r3, #28]
 800cf10:	4718      	bx	r3
 800cf12:	bd10      	pop	{r4, pc}
 800cf14:	20082eba 	.word	0x20082eba
 800cf18:	20082eb8 	.word	0x20082eb8
 800cf1c:	20082f00 	.word	0x20082f00
 800cf20:	20082efc 	.word	0x20082efc
 800cf24:	20082ec4 	.word	0x20082ec4

0800cf28 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800cf28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cf2a:	4606      	mov	r6, r0
 800cf2c:	4608      	mov	r0, r1
 800cf2e:	460f      	mov	r7, r1
 800cf30:	f7fd fea9 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf34:	b9e8      	cbnz	r0, 800cf72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cf36:	f9b7 5000 	ldrsh.w	r5, [r7]
 800cf3a:	f9b6 4000 	ldrsh.w	r4, [r6]
 800cf3e:	42a5      	cmp	r5, r4
 800cf40:	db17      	blt.n	800cf72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cf42:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800cf46:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800cf4a:	429a      	cmp	r2, r3
 800cf4c:	db11      	blt.n	800cf72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cf4e:	88b9      	ldrh	r1, [r7, #4]
 800cf50:	440d      	add	r5, r1
 800cf52:	88b1      	ldrh	r1, [r6, #4]
 800cf54:	b22d      	sxth	r5, r5
 800cf56:	440c      	add	r4, r1
 800cf58:	b224      	sxth	r4, r4
 800cf5a:	42a5      	cmp	r5, r4
 800cf5c:	dc09      	bgt.n	800cf72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cf5e:	88f8      	ldrh	r0, [r7, #6]
 800cf60:	4410      	add	r0, r2
 800cf62:	88f2      	ldrh	r2, [r6, #6]
 800cf64:	b200      	sxth	r0, r0
 800cf66:	4413      	add	r3, r2
 800cf68:	b21b      	sxth	r3, r3
 800cf6a:	4298      	cmp	r0, r3
 800cf6c:	bfcc      	ite	gt
 800cf6e:	2000      	movgt	r0, #0
 800cf70:	2001      	movle	r0, #1
 800cf72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cf74 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cf74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cf76:	4604      	mov	r4, r0
 800cf78:	4608      	mov	r0, r1
 800cf7a:	460d      	mov	r5, r1
 800cf7c:	f7fd fe83 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf80:	b978      	cbnz	r0, 800cfa2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800cf82:	4620      	mov	r0, r4
 800cf84:	f7fd fe7f 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf88:	f9b5 6000 	ldrsh.w	r6, [r5]
 800cf8c:	b150      	cbz	r0, 800cfa4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800cf8e:	8026      	strh	r6, [r4, #0]
 800cf90:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800cf94:	8063      	strh	r3, [r4, #2]
 800cf96:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800cf9a:	80a3      	strh	r3, [r4, #4]
 800cf9c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cfa0:	80e3      	strh	r3, [r4, #6]
 800cfa2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cfa4:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cfa8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800cfac:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800cfb0:	42b1      	cmp	r1, r6
 800cfb2:	460f      	mov	r7, r1
 800cfb4:	bfa8      	it	ge
 800cfb6:	4637      	movge	r7, r6
 800cfb8:	4293      	cmp	r3, r2
 800cfba:	4618      	mov	r0, r3
 800cfbc:	bfa8      	it	ge
 800cfbe:	4610      	movge	r0, r2
 800cfc0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800cfc4:	88ed      	ldrh	r5, [r5, #6]
 800cfc6:	4466      	add	r6, ip
 800cfc8:	442a      	add	r2, r5
 800cfca:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800cfce:	88e5      	ldrh	r5, [r4, #6]
 800cfd0:	4461      	add	r1, ip
 800cfd2:	442b      	add	r3, r5
 800cfd4:	b236      	sxth	r6, r6
 800cfd6:	b209      	sxth	r1, r1
 800cfd8:	b212      	sxth	r2, r2
 800cfda:	b21b      	sxth	r3, r3
 800cfdc:	428e      	cmp	r6, r1
 800cfde:	bfac      	ite	ge
 800cfe0:	ebc7 0106 	rsbge	r1, r7, r6
 800cfe4:	ebc7 0101 	rsblt	r1, r7, r1
 800cfe8:	429a      	cmp	r2, r3
 800cfea:	bfac      	ite	ge
 800cfec:	ebc0 0202 	rsbge	r2, r0, r2
 800cff0:	ebc0 0203 	rsblt	r2, r0, r3
 800cff4:	8027      	strh	r7, [r4, #0]
 800cff6:	8060      	strh	r0, [r4, #2]
 800cff8:	80a1      	strh	r1, [r4, #4]
 800cffa:	80e2      	strh	r2, [r4, #6]
 800cffc:	e7d1      	b.n	800cfa2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800d000 <_ZN8touchgfx11Application11getInstanceEv>:
 800d000:	4b01      	ldr	r3, [pc, #4]	@ (800d008 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800d002:	6818      	ldr	r0, [r3, #0]
 800d004:	4770      	bx	lr
 800d006:	bf00      	nop
 800d008:	20082f10 	.word	0x20082f10

0800d00c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800d00c:	2300      	movs	r3, #0
 800d00e:	b510      	push	{r4, lr}
 800d010:	4604      	mov	r4, r0
 800d012:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800d016:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800d01a:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800d01e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800d022:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800d026:	429a      	cmp	r2, r3
 800d028:	d90e      	bls.n	800d048 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800d02a:	18e2      	adds	r2, r4, r3
 800d02c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800d030:	b122      	cbz	r2, 800d03c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800d032:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800d036:	6803      	ldr	r3, [r0, #0]
 800d038:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d03a:	4798      	blx	r3
 800d03c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800d040:	3301      	adds	r3, #1
 800d042:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800d046:	e7ea      	b.n	800d01e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800d048:	bd10      	pop	{r4, pc}

0800d04a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800d04a:	2300      	movs	r3, #0
 800d04c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800d050:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800d054:	30a4      	adds	r0, #164	@ 0xa4
 800d056:	f802 3b01 	strb.w	r3, [r2], #1
 800d05a:	4282      	cmp	r2, r0
 800d05c:	d1fb      	bne.n	800d056 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800d05e:	4770      	bx	lr

0800d060 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800d060:	b570      	push	{r4, r5, r6, lr}
 800d062:	4c0b      	ldr	r4, [pc, #44]	@ (800d090 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800d064:	4605      	mov	r5, r0
 800d066:	6820      	ldr	r0, [r4, #0]
 800d068:	460e      	mov	r6, r1
 800d06a:	b110      	cbz	r0, 800d072 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800d06c:	6803      	ldr	r3, [r0, #0]
 800d06e:	695b      	ldr	r3, [r3, #20]
 800d070:	4798      	blx	r3
 800d072:	1d28      	adds	r0, r5, #4
 800d074:	f7ff ffe9 	bl	800d04a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800d078:	6026      	str	r6, [r4, #0]
 800d07a:	6833      	ldr	r3, [r6, #0]
 800d07c:	4630      	mov	r0, r6
 800d07e:	68db      	ldr	r3, [r3, #12]
 800d080:	4798      	blx	r3
 800d082:	682b      	ldr	r3, [r5, #0]
 800d084:	4628      	mov	r0, r5
 800d086:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d08a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d08c:	4718      	bx	r3
 800d08e:	bf00      	nop
 800d090:	20082f00 	.word	0x20082f00

0800d094 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800d094:	2300      	movs	r3, #0
 800d096:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d098:	461a      	mov	r2, r3
 800d09a:	461c      	mov	r4, r3
 800d09c:	461d      	mov	r5, r3
 800d09e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800d0a2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800d0a6:	459c      	cmp	ip, r3
 800d0a8:	dd1a      	ble.n	800d0e0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800d0aa:	18c6      	adds	r6, r0, r3
 800d0ac:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800d0b0:	b16e      	cbz	r6, 800d0ce <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800d0b2:	429a      	cmp	r2, r3
 800d0b4:	d008      	beq.n	800d0c8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800d0b6:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800d0ba:	fa1f fe82 	uxth.w	lr, r2
 800d0be:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800d0c2:	1887      	adds	r7, r0, r2
 800d0c4:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800d0c8:	3201      	adds	r2, #1
 800d0ca:	3301      	adds	r3, #1
 800d0cc:	e7eb      	b.n	800d0a6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800d0ce:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800d0d2:	4299      	cmp	r1, r3
 800d0d4:	bfa8      	it	ge
 800d0d6:	3501      	addge	r5, #1
 800d0d8:	429e      	cmp	r6, r3
 800d0da:	bfc8      	it	gt
 800d0dc:	3401      	addgt	r4, #1
 800d0de:	e7f4      	b.n	800d0ca <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800d0e0:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800d0e4:	1b49      	subs	r1, r1, r5
 800d0e6:	1b1b      	subs	r3, r3, r4
 800d0e8:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800d0ec:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800d0f0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800d0f4:	4293      	cmp	r3, r2
 800d0f6:	dd03      	ble.n	800d100 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800d0f8:	3b01      	subs	r3, #1
 800d0fa:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800d0fe:	e7f7      	b.n	800d0f0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800d100:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800d104 <_ZN8touchgfx11Application15handleTickEventEv>:
 800d104:	b570      	push	{r4, r5, r6, lr}
 800d106:	4d16      	ldr	r5, [pc, #88]	@ (800d160 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800d108:	4604      	mov	r4, r0
 800d10a:	6828      	ldr	r0, [r5, #0]
 800d10c:	b140      	cbz	r0, 800d120 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800d10e:	7a03      	ldrb	r3, [r0, #8]
 800d110:	b933      	cbnz	r3, 800d120 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800d112:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800d116:	6803      	ldr	r3, [r0, #0]
 800d118:	689b      	ldr	r3, [r3, #8]
 800d11a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d11e:	4718      	bx	r3
 800d120:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800d124:	4e0f      	ldr	r6, [pc, #60]	@ (800d164 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800d126:	b973      	cbnz	r3, 800d146 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d128:	b168      	cbz	r0, 800d146 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d12a:	7a03      	ldrb	r3, [r0, #8]
 800d12c:	b15b      	cbz	r3, 800d146 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d12e:	6830      	ldr	r0, [r6, #0]
 800d130:	b110      	cbz	r0, 800d138 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800d132:	6803      	ldr	r3, [r0, #0]
 800d134:	691b      	ldr	r3, [r3, #16]
 800d136:	4798      	blx	r3
 800d138:	6828      	ldr	r0, [r5, #0]
 800d13a:	6803      	ldr	r3, [r0, #0]
 800d13c:	68db      	ldr	r3, [r3, #12]
 800d13e:	4798      	blx	r3
 800d140:	2301      	movs	r3, #1
 800d142:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800d146:	3404      	adds	r4, #4
 800d148:	4620      	mov	r0, r4
 800d14a:	f7ff ff5f 	bl	800d00c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800d14e:	4620      	mov	r0, r4
 800d150:	f7ff ffa0 	bl	800d094 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800d154:	6830      	ldr	r0, [r6, #0]
 800d156:	b110      	cbz	r0, 800d15e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800d158:	6803      	ldr	r3, [r0, #0]
 800d15a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d15c:	e7dd      	b.n	800d11a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800d15e:	bd70      	pop	{r4, r5, r6, pc}
 800d160:	20082f04 	.word	0x20082f04
 800d164:	20082f00 	.word	0x20082f00

0800d168 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800d168:	4603      	mov	r3, r0
 800d16a:	2200      	movs	r2, #0
 800d16c:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800d170:	801a      	strh	r2, [r3, #0]
 800d172:	805a      	strh	r2, [r3, #2]
 800d174:	809a      	strh	r2, [r3, #4]
 800d176:	80da      	strh	r2, [r3, #6]
 800d178:	3308      	adds	r3, #8
 800d17a:	428b      	cmp	r3, r1
 800d17c:	d1f8      	bne.n	800d170 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800d17e:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800d182:	4770      	bx	lr

0800d184 <_ZN8touchgfx11ApplicationC1Ev>:
 800d184:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d186:	4606      	mov	r6, r0
 800d188:	4604      	mov	r4, r0
 800d18a:	2500      	movs	r5, #0
 800d18c:	4b1b      	ldr	r3, [pc, #108]	@ (800d1fc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800d18e:	22a8      	movs	r2, #168	@ 0xa8
 800d190:	f846 3b04 	str.w	r3, [r6], #4
 800d194:	2100      	movs	r1, #0
 800d196:	4630      	mov	r0, r6
 800d198:	f025 fb7d 	bl	8032896 <memset>
 800d19c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800d1a0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800d1a4:	f7ff ffe0 	bl	800d168 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d1a8:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800d1ac:	f7ff ffdc 	bl	800d168 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d1b0:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800d1b4:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800d1b8:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800d1bc:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800d1c0:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800d1c4:	490e      	ldr	r1, [pc, #56]	@ (800d200 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800d1c6:	480f      	ldr	r0, [pc, #60]	@ (800d204 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800d1c8:	f003 f832 	bl	8010230 <CRC_Lock>
 800d1cc:	4f0e      	ldr	r7, [pc, #56]	@ (800d208 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800d1ce:	4b0f      	ldr	r3, [pc, #60]	@ (800d20c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800d1d0:	b158      	cbz	r0, 800d1ea <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800d1d2:	801d      	strh	r5, [r3, #0]
 800d1d4:	2300      	movs	r3, #0
 800d1d6:	4a0e      	ldr	r2, [pc, #56]	@ (800d210 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800d1d8:	4630      	mov	r0, r6
 800d1da:	6013      	str	r3, [r2, #0]
 800d1dc:	4a0d      	ldr	r2, [pc, #52]	@ (800d214 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800d1de:	603b      	str	r3, [r7, #0]
 800d1e0:	6013      	str	r3, [r2, #0]
 800d1e2:	f7ff ff32 	bl	800d04a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800d1e6:	4620      	mov	r0, r4
 800d1e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d1ea:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800d1ee:	2002      	movs	r0, #2
 800d1f0:	801a      	strh	r2, [r3, #0]
 800d1f2:	6038      	str	r0, [r7, #0]
 800d1f4:	f001 fd82 	bl	800ecfc <_ZN8touchgfx6Screen4drawEv>
 800d1f8:	e7ec      	b.n	800d1d4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800d1fa:	bf00      	nop
 800d1fc:	08035ad4 	.word	0x08035ad4
 800d200:	b5e8b5cd 	.word	0xb5e8b5cd
 800d204:	f407a5c2 	.word	0xf407a5c2
 800d208:	20082f00 	.word	0x20082f00
 800d20c:	20000060 	.word	0x20000060
 800d210:	20082f10 	.word	0x20082f10
 800d214:	20082f04 	.word	0x20082f04

0800d218 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800d218:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800d21c:	b510      	push	{r4, lr}
 800d21e:	3b01      	subs	r3, #1
 800d220:	b29b      	uxth	r3, r3
 800d222:	428b      	cmp	r3, r1
 800d224:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800d228:	d908      	bls.n	800d23c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800d22a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800d22e:	681a      	ldr	r2, [r3, #0]
 800d230:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800d234:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800d238:	685a      	ldr	r2, [r3, #4]
 800d23a:	6062      	str	r2, [r4, #4]
 800d23c:	bd10      	pop	{r4, pc}
	...

0800d240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800d240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d244:	4b8f      	ldr	r3, [pc, #572]	@ (800d484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800d246:	b08f      	sub	sp, #60	@ 0x3c
 800d248:	ac0a      	add	r4, sp, #40	@ 0x28
 800d24a:	e884 0006 	stmia.w	r4, {r1, r2}
 800d24e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d252:	4b8d      	ldr	r3, [pc, #564]	@ (800d488 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800d254:	4683      	mov	fp, r0
 800d256:	f9b3 1000 	ldrsh.w	r1, [r3]
 800d25a:	4620      	mov	r0, r4
 800d25c:	f7ff fe13 	bl	800ce86 <_ZN8touchgfx4Rect10restrictToEss>
 800d260:	4620      	mov	r0, r4
 800d262:	f7fd fd10 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d266:	2800      	cmp	r0, #0
 800d268:	d16a      	bne.n	800d340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d26a:	9403      	str	r4, [sp, #12]
 800d26c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800d270:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800d274:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800d278:	35a4      	adds	r5, #164	@ 0xa4
 800d27a:	9301      	str	r3, [sp, #4]
 800d27c:	b15c      	cbz	r4, 800d296 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d27e:	4629      	mov	r1, r5
 800d280:	9803      	ldr	r0, [sp, #12]
 800d282:	f7ff fe51 	bl	800cf28 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d286:	3c01      	subs	r4, #1
 800d288:	b118      	cbz	r0, 800d292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800d28a:	b2a1      	uxth	r1, r4
 800d28c:	9801      	ldr	r0, [sp, #4]
 800d28e:	f7ff ffc3 	bl	800d218 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d292:	3d08      	subs	r5, #8
 800d294:	e7f2      	b.n	800d27c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800d296:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800d29a:	f10a 33ff 	add.w	r3, sl, #4294967295
 800d29e:	9302      	str	r3, [sp, #8]
 800d2a0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800d2a4:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800d2a8:	f8cd a010 	str.w	sl, [sp, #16]
 800d2ac:	9306      	str	r3, [sp, #24]
 800d2ae:	445c      	add	r4, fp
 800d2b0:	2500      	movs	r5, #0
 800d2b2:	4626      	mov	r6, r4
 800d2b4:	462f      	mov	r7, r5
 800d2b6:	f8cd a014 	str.w	sl, [sp, #20]
 800d2ba:	9b05      	ldr	r3, [sp, #20]
 800d2bc:	2b00      	cmp	r3, #0
 800d2be:	d073      	beq.n	800d3a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800d2c0:	9903      	ldr	r1, [sp, #12]
 800d2c2:	4630      	mov	r0, r6
 800d2c4:	f7ff fdbd 	bl	800ce42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d2c8:	b350      	cbz	r0, 800d320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d2ca:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800d2ce:	f9b6 c000 	ldrsh.w	ip, [r6]
 800d2d2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800d2d6:	45e6      	cmp	lr, ip
 800d2d8:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800d2dc:	db33      	blt.n	800d346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d2de:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800d2e2:	88b3      	ldrh	r3, [r6, #4]
 800d2e4:	4472      	add	r2, lr
 800d2e6:	4463      	add	r3, ip
 800d2e8:	b212      	sxth	r2, r2
 800d2ea:	b21b      	sxth	r3, r3
 800d2ec:	429a      	cmp	r2, r3
 800d2ee:	dc2a      	bgt.n	800d346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d2f0:	88f3      	ldrh	r3, [r6, #6]
 800d2f2:	fa1f f289 	uxth.w	r2, r9
 800d2f6:	4413      	add	r3, r2
 800d2f8:	b29b      	uxth	r3, r3
 800d2fa:	45c8      	cmp	r8, r9
 800d2fc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800d300:	fa1f fc88 	uxth.w	ip, r8
 800d304:	fa0f fe83 	sxth.w	lr, r3
 800d308:	db0f      	blt.n	800d32a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800d30a:	eba3 030c 	sub.w	r3, r3, ip
 800d30e:	1ac9      	subs	r1, r1, r3
 800d310:	b209      	sxth	r1, r1
 800d312:	2900      	cmp	r1, #0
 800d314:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d318:	dd12      	ble.n	800d340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d31a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800d31e:	4605      	mov	r5, r0
 800d320:	9b05      	ldr	r3, [sp, #20]
 800d322:	3e08      	subs	r6, #8
 800d324:	3b01      	subs	r3, #1
 800d326:	9305      	str	r3, [sp, #20]
 800d328:	e7c7      	b.n	800d2ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800d32a:	4461      	add	r1, ip
 800d32c:	b209      	sxth	r1, r1
 800d32e:	4571      	cmp	r1, lr
 800d330:	dc38      	bgt.n	800d3a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d332:	eba2 020c 	sub.w	r2, r2, ip
 800d336:	b212      	sxth	r2, r2
 800d338:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800d33c:	2a00      	cmp	r2, #0
 800d33e:	dcee      	bgt.n	800d31e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d340:	b00f      	add	sp, #60	@ 0x3c
 800d342:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d346:	45c8      	cmp	r8, r9
 800d348:	db2c      	blt.n	800d3a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d34a:	88f3      	ldrh	r3, [r6, #6]
 800d34c:	4499      	add	r9, r3
 800d34e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800d352:	fa0f f989 	sxth.w	r9, r9
 800d356:	4498      	add	r8, r3
 800d358:	fa0f f888 	sxth.w	r8, r8
 800d35c:	45c1      	cmp	r9, r8
 800d35e:	db21      	blt.n	800d3a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d360:	88b3      	ldrh	r3, [r6, #4]
 800d362:	fa1f f28c 	uxth.w	r2, ip
 800d366:	4413      	add	r3, r2
 800d368:	b29b      	uxth	r3, r3
 800d36a:	45e6      	cmp	lr, ip
 800d36c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800d370:	fa1f f88e 	uxth.w	r8, lr
 800d374:	fa0f f983 	sxth.w	r9, r3
 800d378:	db0a      	blt.n	800d390 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800d37a:	eba3 0308 	sub.w	r3, r3, r8
 800d37e:	1ac9      	subs	r1, r1, r3
 800d380:	b209      	sxth	r1, r1
 800d382:	2900      	cmp	r1, #0
 800d384:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800d388:	ddda      	ble.n	800d340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d38a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d38e:	e7c6      	b.n	800d31e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d390:	4441      	add	r1, r8
 800d392:	b209      	sxth	r1, r1
 800d394:	4549      	cmp	r1, r9
 800d396:	dc05      	bgt.n	800d3a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d398:	eba2 0208 	sub.w	r2, r2, r8
 800d39c:	b212      	sxth	r2, r2
 800d39e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800d3a2:	e7cb      	b.n	800d33c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800d3a4:	4607      	mov	r7, r0
 800d3a6:	e7bb      	b.n	800d320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d3a8:	2d00      	cmp	r5, #0
 800d3aa:	d181      	bne.n	800d2b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800d3ac:	2f00      	cmp	r7, #0
 800d3ae:	f000 81de 	beq.w	800d76e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d3b2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800d3b6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800d3ba:	b2b3      	uxth	r3, r6
 800d3bc:	9305      	str	r3, [sp, #20]
 800d3be:	9a05      	ldr	r2, [sp, #20]
 800d3c0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800d3c4:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800d3c8:	4413      	add	r3, r2
 800d3ca:	b2ba      	uxth	r2, r7
 800d3cc:	4492      	add	sl, r2
 800d3ce:	b29b      	uxth	r3, r3
 800d3d0:	fa1f fa8a 	uxth.w	sl, sl
 800d3d4:	fa0f f883 	sxth.w	r8, r3
 800d3d8:	fa0f f98a 	sxth.w	r9, sl
 800d3dc:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800d3e0:	9b04      	ldr	r3, [sp, #16]
 800d3e2:	2b00      	cmp	r3, #0
 800d3e4:	d052      	beq.n	800d48c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800d3e6:	9903      	ldr	r1, [sp, #12]
 800d3e8:	4620      	mov	r0, r4
 800d3ea:	f7ff fd2a 	bl	800ce42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d3ee:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800d3f2:	b1c0      	cbz	r0, 800d426 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d3f4:	f9b4 e000 	ldrsh.w	lr, [r4]
 800d3f8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800d3fc:	4576      	cmp	r6, lr
 800d3fe:	dc22      	bgt.n	800d446 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d400:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d404:	44f4      	add	ip, lr
 800d406:	fa0f fc8c 	sxth.w	ip, ip
 800d40a:	45e0      	cmp	r8, ip
 800d40c:	db1b      	blt.n	800d446 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d40e:	428f      	cmp	r7, r1
 800d410:	fa1f fc81 	uxth.w	ip, r1
 800d414:	88e1      	ldrh	r1, [r4, #6]
 800d416:	dc0d      	bgt.n	800d434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800d418:	ebaa 0c0c 	sub.w	ip, sl, ip
 800d41c:	eba1 010c 	sub.w	r1, r1, ip
 800d420:	f8a4 9002 	strh.w	r9, [r4, #2]
 800d424:	80e1      	strh	r1, [r4, #6]
 800d426:	4628      	mov	r0, r5
 800d428:	9904      	ldr	r1, [sp, #16]
 800d42a:	3c08      	subs	r4, #8
 800d42c:	3901      	subs	r1, #1
 800d42e:	9104      	str	r1, [sp, #16]
 800d430:	4605      	mov	r5, r0
 800d432:	e7d3      	b.n	800d3dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800d434:	4461      	add	r1, ip
 800d436:	b209      	sxth	r1, r1
 800d438:	4549      	cmp	r1, r9
 800d43a:	dcf5      	bgt.n	800d428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d43c:	eba2 0c0c 	sub.w	ip, r2, ip
 800d440:	f8a4 c006 	strh.w	ip, [r4, #6]
 800d444:	e7ef      	b.n	800d426 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d446:	428f      	cmp	r7, r1
 800d448:	dcee      	bgt.n	800d428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d44a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800d44e:	4461      	add	r1, ip
 800d450:	b209      	sxth	r1, r1
 800d452:	4589      	cmp	r9, r1
 800d454:	dbe8      	blt.n	800d428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d456:	4576      	cmp	r6, lr
 800d458:	fa1f fc8e 	uxth.w	ip, lr
 800d45c:	88a1      	ldrh	r1, [r4, #4]
 800d45e:	dc07      	bgt.n	800d470 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800d460:	eba3 0c0c 	sub.w	ip, r3, ip
 800d464:	eba1 010c 	sub.w	r1, r1, ip
 800d468:	f8a4 8000 	strh.w	r8, [r4]
 800d46c:	80a1      	strh	r1, [r4, #4]
 800d46e:	e7da      	b.n	800d426 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d470:	4461      	add	r1, ip
 800d472:	b209      	sxth	r1, r1
 800d474:	4588      	cmp	r8, r1
 800d476:	dbd7      	blt.n	800d428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d478:	9905      	ldr	r1, [sp, #20]
 800d47a:	eba1 0c0c 	sub.w	ip, r1, ip
 800d47e:	f8a4 c004 	strh.w	ip, [r4, #4]
 800d482:	e7d0      	b.n	800d426 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d484:	20082eba 	.word	0x20082eba
 800d488:	20082eb8 	.word	0x20082eb8
 800d48c:	2d00      	cmp	r5, #0
 800d48e:	f000 816e 	beq.w	800d76e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d492:	9b06      	ldr	r3, [sp, #24]
 800d494:	445b      	add	r3, fp
 800d496:	461c      	mov	r4, r3
 800d498:	9b02      	ldr	r3, [sp, #8]
 800d49a:	3301      	adds	r3, #1
 800d49c:	f000 8167 	beq.w	800d76e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d4a0:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800d4a4:	4629      	mov	r1, r5
 800d4a6:	9803      	ldr	r0, [sp, #12]
 800d4a8:	f7ff fd3e 	bl	800cf28 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d4ac:	b120      	cbz	r0, 800d4b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800d4ae:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800d4b2:	9801      	ldr	r0, [sp, #4]
 800d4b4:	f7ff feb0 	bl	800d218 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d4b8:	9903      	ldr	r1, [sp, #12]
 800d4ba:	4628      	mov	r0, r5
 800d4bc:	f7ff fcc1 	bl	800ce42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d4c0:	2800      	cmp	r0, #0
 800d4c2:	f000 809c 	beq.w	800d5fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d4c6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800d4ca:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d4ce:	fa1f f189 	uxth.w	r1, r9
 800d4d2:	eb01 0c03 	add.w	ip, r1, r3
 800d4d6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800d4da:	fa1f fa8c 	uxth.w	sl, ip
 800d4de:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800d4e2:	9309      	str	r3, [sp, #36]	@ 0x24
 800d4e4:	b283      	uxth	r3, r0
 800d4e6:	eb03 050c 	add.w	r5, r3, ip
 800d4ea:	b2ad      	uxth	r5, r5
 800d4ec:	9505      	str	r5, [sp, #20]
 800d4ee:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800d4f2:	4548      	cmp	r0, r9
 800d4f4:	9504      	str	r5, [sp, #16]
 800d4f6:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800d4fa:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800d4fe:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800d502:	f340 8099 	ble.w	800d638 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800d506:	1a5b      	subs	r3, r3, r1
 800d508:	b29b      	uxth	r3, r3
 800d50a:	4596      	cmp	lr, r2
 800d50c:	fa0f f08a 	sxth.w	r0, sl
 800d510:	b21e      	sxth	r6, r3
 800d512:	dd2e      	ble.n	800d572 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800d514:	9f02      	ldr	r7, [sp, #8]
 800d516:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800d51a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800d51e:	9f04      	ldr	r7, [sp, #16]
 800d520:	fa1f fe8e 	uxth.w	lr, lr
 800d524:	1a3f      	subs	r7, r7, r0
 800d526:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800d52a:	b292      	uxth	r2, r2
 800d52c:	ebae 0102 	sub.w	r1, lr, r2
 800d530:	44a6      	add	lr, r4
 800d532:	4402      	add	r2, r0
 800d534:	b289      	uxth	r1, r1
 800d536:	fa0f fe8e 	sxth.w	lr, lr
 800d53a:	b212      	sxth	r2, r2
 800d53c:	b20d      	sxth	r5, r1
 800d53e:	ebae 0202 	sub.w	r2, lr, r2
 800d542:	436f      	muls	r7, r5
 800d544:	4372      	muls	r2, r6
 800d546:	4297      	cmp	r7, r2
 800d548:	db09      	blt.n	800d55e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800d54a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800d54e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800d552:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800d556:	449c      	add	ip, r3
 800d558:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d55c:	e686      	b.n	800d26c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d55e:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800d562:	4421      	add	r1, r4
 800d564:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800d568:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d56c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d570:	e67c      	b.n	800d26c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d572:	9f04      	ldr	r7, [sp, #16]
 800d574:	42b8      	cmp	r0, r7
 800d576:	da27      	bge.n	800d5c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800d578:	9902      	ldr	r1, [sp, #8]
 800d57a:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800d57e:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800d582:	eb05 010e 	add.w	r1, r5, lr
 800d586:	fa1f f881 	uxth.w	r8, r1
 800d58a:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800d58e:	fa0f f988 	sxth.w	r9, r8
 800d592:	4411      	add	r1, r2
 800d594:	eba1 0108 	sub.w	r1, r1, r8
 800d598:	b289      	uxth	r1, r1
 800d59a:	fa0f f881 	sxth.w	r8, r1
 800d59e:	eba2 020e 	sub.w	r2, r2, lr
 800d5a2:	1a3f      	subs	r7, r7, r0
 800d5a4:	4372      	muls	r2, r6
 800d5a6:	fb08 f707 	mul.w	r7, r8, r7
 800d5aa:	42ba      	cmp	r2, r7
 800d5ac:	dc06      	bgt.n	800d5bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800d5ae:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800d5b2:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800d5b6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800d5ba:	e7ca      	b.n	800d552 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800d5bc:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800d5c0:	4429      	add	r1, r5
 800d5c2:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d5c6:	e651      	b.n	800d26c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d5c8:	9805      	ldr	r0, [sp, #20]
 800d5ca:	2d06      	cmp	r5, #6
 800d5cc:	ebaa 0000 	sub.w	r0, sl, r0
 800d5d0:	b280      	uxth	r0, r0
 800d5d2:	fa0f fe80 	sxth.w	lr, r0
 800d5d6:	d817      	bhi.n	800d608 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800d5d8:	9b04      	ldr	r3, [sp, #16]
 800d5da:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800d5de:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800d5e2:	1c6b      	adds	r3, r5, #1
 800d5e4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800d5e8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800d5ec:	9b01      	ldr	r3, [sp, #4]
 800d5ee:	9801      	ldr	r0, [sp, #4]
 800d5f0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d5f4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800d5f8:	805a      	strh	r2, [r3, #2]
 800d5fa:	809e      	strh	r6, [r3, #4]
 800d5fc:	80d9      	strh	r1, [r3, #6]
 800d5fe:	9b02      	ldr	r3, [sp, #8]
 800d600:	3c08      	subs	r4, #8
 800d602:	3b01      	subs	r3, #1
 800d604:	9302      	str	r3, [sp, #8]
 800d606:	e747      	b.n	800d498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800d608:	9a02      	ldr	r2, [sp, #8]
 800d60a:	45b6      	cmp	lr, r6
 800d60c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d610:	db0d      	blt.n	800d62e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800d612:	449c      	add	ip, r3
 800d614:	fa1f fc8c 	uxth.w	ip, ip
 800d618:	445a      	add	r2, fp
 800d61a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d61e:	448c      	add	ip, r1
 800d620:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d624:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800d628:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800d62c:	e61e      	b.n	800d26c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d62e:	445a      	add	r2, fp
 800d630:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800d634:	4484      	add	ip, r0
 800d636:	e78f      	b.n	800d558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d638:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800d63c:	fa1f f18e 	uxth.w	r1, lr
 800d640:	eb01 0806 	add.w	r8, r1, r6
 800d644:	b293      	uxth	r3, r2
 800d646:	fa1f f888 	uxth.w	r8, r8
 800d64a:	9306      	str	r3, [sp, #24]
 800d64c:	fa0f f388 	sxth.w	r3, r8
 800d650:	9307      	str	r3, [sp, #28]
 800d652:	9f06      	ldr	r7, [sp, #24]
 800d654:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800d658:	4596      	cmp	lr, r2
 800d65a:	443b      	add	r3, r7
 800d65c:	b29b      	uxth	r3, r3
 800d65e:	9308      	str	r3, [sp, #32]
 800d660:	da24      	bge.n	800d6ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800d662:	9905      	ldr	r1, [sp, #20]
 800d664:	eba3 0308 	sub.w	r3, r3, r8
 800d668:	ebaa 0401 	sub.w	r4, sl, r1
 800d66c:	b2a4      	uxth	r4, r4
 800d66e:	b29b      	uxth	r3, r3
 800d670:	b225      	sxth	r5, r4
 800d672:	b219      	sxth	r1, r3
 800d674:	eba2 020e 	sub.w	r2, r2, lr
 800d678:	eba9 0000 	sub.w	r0, r9, r0
 800d67c:	436a      	muls	r2, r5
 800d67e:	4348      	muls	r0, r1
 800d680:	4282      	cmp	r2, r0
 800d682:	9a02      	ldr	r2, [sp, #8]
 800d684:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d688:	445a      	add	r2, fp
 800d68a:	dc06      	bgt.n	800d69a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800d68c:	9b07      	ldr	r3, [sp, #28]
 800d68e:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800d692:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800d696:	44a4      	add	ip, r4
 800d698:	e75e      	b.n	800d558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d69a:	9904      	ldr	r1, [sp, #16]
 800d69c:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800d6a0:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800d6a4:	4433      	add	r3, r6
 800d6a6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d6aa:	e5df      	b.n	800d26c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d6ac:	9f06      	ldr	r7, [sp, #24]
 800d6ae:	9b04      	ldr	r3, [sp, #16]
 800d6b0:	1bc9      	subs	r1, r1, r7
 800d6b2:	fa0f f78a 	sxth.w	r7, sl
 800d6b6:	b289      	uxth	r1, r1
 800d6b8:	429f      	cmp	r7, r3
 800d6ba:	fa0f fe81 	sxth.w	lr, r1
 800d6be:	dd24      	ble.n	800d70a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4ca>
 800d6c0:	9a05      	ldr	r2, [sp, #20]
 800d6c2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d6c6:	ebaa 0202 	sub.w	r2, sl, r2
 800d6ca:	9d07      	ldr	r5, [sp, #28]
 800d6cc:	b292      	uxth	r2, r2
 800d6ce:	eba5 0a03 	sub.w	sl, r5, r3
 800d6d2:	b214      	sxth	r4, r2
 800d6d4:	eba9 0000 	sub.w	r0, r9, r0
 800d6d8:	fb0e f000 	mul.w	r0, lr, r0
 800d6dc:	fb04 fa0a 	mul.w	sl, r4, sl
 800d6e0:	9b02      	ldr	r3, [sp, #8]
 800d6e2:	4550      	cmp	r0, sl
 800d6e4:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800d6e8:	445b      	add	r3, fp
 800d6ea:	db03      	blt.n	800d6f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b4>
 800d6ec:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800d6f0:	4494      	add	ip, r2
 800d6f2:	e731      	b.n	800d558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d6f4:	9a04      	ldr	r2, [sp, #16]
 800d6f6:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800d6fa:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800d6fe:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800d702:	4431      	add	r1, r6
 800d704:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d708:	e75b      	b.n	800d5c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800d70a:	9b08      	ldr	r3, [sp, #32]
 800d70c:	2d06      	cmp	r5, #6
 800d70e:	eba3 0308 	sub.w	r3, r3, r8
 800d712:	b29b      	uxth	r3, r3
 800d714:	b218      	sxth	r0, r3
 800d716:	d813      	bhi.n	800d740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x500>
 800d718:	9b07      	ldr	r3, [sp, #28]
 800d71a:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800d71e:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800d722:	1c6b      	adds	r3, r5, #1
 800d724:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800d728:	9b01      	ldr	r3, [sp, #4]
 800d72a:	9901      	ldr	r1, [sp, #4]
 800d72c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d730:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800d734:	805a      	strh	r2, [r3, #2]
 800d736:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d738:	f8a3 e006 	strh.w	lr, [r3, #6]
 800d73c:	809a      	strh	r2, [r3, #4]
 800d73e:	e75e      	b.n	800d5fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d740:	9c02      	ldr	r4, [sp, #8]
 800d742:	4570      	cmp	r0, lr
 800d744:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d748:	db0d      	blt.n	800d766 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x526>
 800d74a:	4431      	add	r1, r6
 800d74c:	9b06      	ldr	r3, [sp, #24]
 800d74e:	b289      	uxth	r1, r1
 800d750:	445c      	add	r4, fp
 800d752:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d756:	4419      	add	r1, r3
 800d758:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800d75c:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800d760:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800d764:	e582      	b.n	800d26c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d766:	445c      	add	r4, fp
 800d768:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800d76c:	e79a      	b.n	800d6a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800d76e:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800d772:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800d776:	1e65      	subs	r5, r4, #1
 800d778:	b2ad      	uxth	r5, r5
 800d77a:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800d77e:	42b5      	cmp	r5, r6
 800d780:	d044      	beq.n	800d80c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5cc>
 800d782:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800d786:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800d78a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800d78e:	4282      	cmp	r2, r0
 800d790:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800d794:	d11f      	bne.n	800d7d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 800d796:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800d79a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800d79e:	459c      	cmp	ip, r3
 800d7a0:	d119      	bne.n	800d7d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 800d7a2:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800d7a6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800d7aa:	19d8      	adds	r0, r3, r7
 800d7ac:	b200      	sxth	r0, r0
 800d7ae:	4288      	cmp	r0, r1
 800d7b0:	d109      	bne.n	800d7c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 800d7b2:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800d7b6:	4413      	add	r3, r2
 800d7b8:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800d7bc:	4629      	mov	r1, r5
 800d7be:	9801      	ldr	r0, [sp, #4]
 800d7c0:	f7ff fd2a 	bl	800d218 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d7c4:	e003      	b.n	800d7ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d7c6:	4411      	add	r1, r2
 800d7c8:	b209      	sxth	r1, r1
 800d7ca:	42b9      	cmp	r1, r7
 800d7cc:	d0f3      	beq.n	800d7b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x576>
 800d7ce:	3d01      	subs	r5, #1
 800d7d0:	b2ad      	uxth	r5, r5
 800d7d2:	3c08      	subs	r4, #8
 800d7d4:	e7d3      	b.n	800d77e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53e>
 800d7d6:	42b9      	cmp	r1, r7
 800d7d8:	d1f9      	bne.n	800d7ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d7da:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800d7de:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d7e2:	4299      	cmp	r1, r3
 800d7e4:	d1f3      	bne.n	800d7ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d7e6:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800d7ea:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800d7ee:	181f      	adds	r7, r3, r0
 800d7f0:	b23f      	sxth	r7, r7
 800d7f2:	42ba      	cmp	r2, r7
 800d7f4:	d105      	bne.n	800d802 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c2>
 800d7f6:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800d7fa:	440b      	add	r3, r1
 800d7fc:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d800:	e7dc      	b.n	800d7bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57c>
 800d802:	440a      	add	r2, r1
 800d804:	b212      	sxth	r2, r2
 800d806:	4290      	cmp	r0, r2
 800d808:	d1e1      	bne.n	800d7ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d80a:	e7f6      	b.n	800d7fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ba>
 800d80c:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800d810:	2e07      	cmp	r6, #7
 800d812:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800d816:	d812      	bhi.n	800d83e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d818:	1c75      	adds	r5, r6, #1
 800d81a:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800d81e:	9d01      	ldr	r5, [sp, #4]
 800d820:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800d824:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800d828:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800d82c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800d830:	442c      	add	r4, r5
 800d832:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800d836:	8061      	strh	r1, [r4, #2]
 800d838:	80a2      	strh	r2, [r4, #4]
 800d83a:	80e3      	strh	r3, [r4, #6]
 800d83c:	e580      	b.n	800d340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d83e:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800d842:	f04f 37ff 	mov.w	r7, #4294967295
 800d846:	2500      	movs	r5, #0
 800d848:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800d84c:	3e01      	subs	r6, #1
 800d84e:	445c      	add	r4, fp
 800d850:	9305      	str	r3, [sp, #20]
 800d852:	1e72      	subs	r2, r6, #1
 800d854:	4691      	mov	r9, r2
 800d856:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d85a:	9302      	str	r3, [sp, #8]
 800d85c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800d860:	9304      	str	r3, [sp, #16]
 800d862:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800d866:	f1b9 3fff 	cmp.w	r9, #4294967295
 800d86a:	bf16      	itet	ne
 800d86c:	9905      	ldrne	r1, [sp, #20]
 800d86e:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800d872:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800d876:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d87a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800d87e:	6818      	ldr	r0, [r3, #0]
 800d880:	fb18 f801 	smulbb	r8, r8, r1
 800d884:	6859      	ldr	r1, [r3, #4]
 800d886:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800d88a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d88e:	4671      	mov	r1, lr
 800d890:	a80c      	add	r0, sp, #48	@ 0x30
 800d892:	9207      	str	r2, [sp, #28]
 800d894:	9306      	str	r3, [sp, #24]
 800d896:	f7ff fb6d 	bl	800cf74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d89a:	f04f 0c08 	mov.w	ip, #8
 800d89e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800d8a2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800d8a6:	9b04      	ldr	r3, [sp, #16]
 800d8a8:	9a02      	ldr	r2, [sp, #8]
 800d8aa:	fb10 f001 	smulbb	r0, r0, r1
 800d8ae:	fb02 8803 	mla	r8, r2, r3, r8
 800d8b2:	eba0 0108 	sub.w	r1, r0, r8
 800d8b6:	fb90 f0fc 	sdiv	r0, r0, ip
 800d8ba:	4288      	cmp	r0, r1
 800d8bc:	dc20      	bgt.n	800d900 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d8be:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d8c2:	4551      	cmp	r1, sl
 800d8c4:	da03      	bge.n	800d8ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 800d8c6:	b1d9      	cbz	r1, 800d900 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d8c8:	468a      	mov	sl, r1
 800d8ca:	464f      	mov	r7, r9
 800d8cc:	4635      	mov	r5, r6
 800d8ce:	f109 39ff 	add.w	r9, r9, #4294967295
 800d8d2:	f119 0f02 	cmn.w	r9, #2
 800d8d6:	d1c6      	bne.n	800d866 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>
 800d8d8:	4616      	mov	r6, r2
 800d8da:	3201      	adds	r2, #1
 800d8dc:	f1a4 0408 	sub.w	r4, r4, #8
 800d8e0:	d1b7      	bne.n	800d852 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 800d8e2:	9b01      	ldr	r3, [sp, #4]
 800d8e4:	b2ac      	uxth	r4, r5
 800d8e6:	00ed      	lsls	r5, r5, #3
 800d8e8:	1958      	adds	r0, r3, r5
 800d8ea:	1c7b      	adds	r3, r7, #1
 800d8ec:	d10b      	bne.n	800d906 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 800d8ee:	4601      	mov	r1, r0
 800d8f0:	9803      	ldr	r0, [sp, #12]
 800d8f2:	f7ff fb3f 	bl	800cf74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d8f6:	4621      	mov	r1, r4
 800d8f8:	9801      	ldr	r0, [sp, #4]
 800d8fa:	f7ff fc8d 	bl	800d218 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d8fe:	e4b5      	b.n	800d26c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d900:	464f      	mov	r7, r9
 800d902:	4635      	mov	r5, r6
 800d904:	e7ed      	b.n	800d8e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 800d906:	9b01      	ldr	r3, [sp, #4]
 800d908:	00ff      	lsls	r7, r7, #3
 800d90a:	19d9      	adds	r1, r3, r7
 800d90c:	f7ff fb32 	bl	800cf74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d910:	9b03      	ldr	r3, [sp, #12]
 800d912:	445f      	add	r7, fp
 800d914:	cb03      	ldmia	r3!, {r0, r1}
 800d916:	445d      	add	r5, fp
 800d918:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800d91c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800d920:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800d924:	9b03      	ldr	r3, [sp, #12]
 800d926:	6869      	ldr	r1, [r5, #4]
 800d928:	c303      	stmia	r3!, {r0, r1}
 800d92a:	e7e4      	b.n	800d8f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

0800d92c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800d92c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d930:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800d934:	b09b      	sub	sp, #108	@ 0x6c
 800d936:	4604      	mov	r4, r0
 800d938:	4630      	mov	r0, r6
 800d93a:	f7fd f9a4 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d93e:	4605      	mov	r5, r0
 800d940:	b948      	cbnz	r0, 800d956 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800d942:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d946:	6823      	ldr	r3, [r4, #0]
 800d948:	4620      	mov	r0, r4
 800d94a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d94c:	4798      	blx	r3
 800d94e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800d952:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800d956:	4bc6      	ldr	r3, [pc, #792]	@ (800dc70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800d958:	681b      	ldr	r3, [r3, #0]
 800d95a:	2b00      	cmp	r3, #0
 800d95c:	d03f      	beq.n	800d9de <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d95e:	4dc5      	ldr	r5, [pc, #788]	@ (800dc74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800d960:	4628      	mov	r0, r5
 800d962:	f7fd f990 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d966:	4606      	mov	r6, r0
 800d968:	2800      	cmp	r0, #0
 800d96a:	d138      	bne.n	800d9de <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d96c:	4628      	mov	r0, r5
 800d96e:	f7ff f995 	bl	800cc9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d972:	6823      	ldr	r3, [r4, #0]
 800d974:	6829      	ldr	r1, [r5, #0]
 800d976:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d978:	686a      	ldr	r2, [r5, #4]
 800d97a:	4620      	mov	r0, r4
 800d97c:	4798      	blx	r3
 800d97e:	802e      	strh	r6, [r5, #0]
 800d980:	806e      	strh	r6, [r5, #2]
 800d982:	80ae      	strh	r6, [r5, #4]
 800d984:	80ee      	strh	r6, [r5, #6]
 800d986:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800d98a:	4dbb      	ldr	r5, [pc, #748]	@ (800dc78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800d98c:	4640      	mov	r0, r8
 800d98e:	f7ff fbeb 	bl	800d168 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d992:	882e      	ldrh	r6, [r5, #0]
 800d994:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800d998:	4633      	mov	r3, r6
 800d99a:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800d99e:	42bb      	cmp	r3, r7
 800d9a0:	d224      	bcs.n	800d9ec <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800d9a2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800d9a6:	2907      	cmp	r1, #7
 800d9a8:	d816      	bhi.n	800d9d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800d9aa:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800d9ae:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800d9b2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800d9b6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800d9ba:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800d9be:	1c4a      	adds	r2, r1, #1
 800d9c0:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800d9c4:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800d9c8:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800d9cc:	f8a2 a002 	strh.w	sl, [r2, #2]
 800d9d0:	f8a2 e004 	strh.w	lr, [r2, #4]
 800d9d4:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d9d8:	3301      	adds	r3, #1
 800d9da:	b29b      	uxth	r3, r3
 800d9dc:	e7df      	b.n	800d99e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800d9de:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800d9e2:	2b00      	cmp	r3, #0
 800d9e4:	d1cf      	bne.n	800d986 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800d9e6:	b01b      	add	sp, #108	@ 0x6c
 800d9e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9ec:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800d9f0:	42b3      	cmp	r3, r6
 800d9f2:	d90c      	bls.n	800da0e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800d9f4:	6822      	ldr	r2, [r4, #0]
 800d9f6:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d9fa:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800d9fc:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800da00:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800da04:	4620      	mov	r0, r4
 800da06:	3601      	adds	r6, #1
 800da08:	47b8      	blx	r7
 800da0a:	b2b6      	uxth	r6, r6
 800da0c:	e7ee      	b.n	800d9ec <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800da0e:	4a9b      	ldr	r2, [pc, #620]	@ (800dc7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800da10:	6813      	ldr	r3, [r2, #0]
 800da12:	4691      	mov	r9, r2
 800da14:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800da18:	2b01      	cmp	r3, #1
 800da1a:	f040 80e2 	bne.w	800dbe2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 800da1e:	2600      	movs	r6, #0
 800da20:	8829      	ldrh	r1, [r5, #0]
 800da22:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800da26:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800da2a:	33ae      	adds	r3, #174	@ 0xae
 800da2c:	428f      	cmp	r7, r1
 800da2e:	f103 0308 	add.w	r3, r3, #8
 800da32:	dd0a      	ble.n	800da4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800da34:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800da38:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800da3c:	3101      	adds	r1, #1
 800da3e:	4402      	add	r2, r0
 800da40:	b212      	sxth	r2, r2
 800da42:	4296      	cmp	r6, r2
 800da44:	bfb8      	it	lt
 800da46:	4616      	movlt	r6, r2
 800da48:	e7f0      	b.n	800da2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800da4a:	4b8d      	ldr	r3, [pc, #564]	@ (800dc80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800da4c:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 800dc7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 800da50:	881b      	ldrh	r3, [r3, #0]
 800da52:	2b0f      	cmp	r3, #15
 800da54:	bf88      	it	hi
 800da56:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800da5a:	f04f 0300 	mov.w	r3, #0
 800da5e:	bf98      	it	ls
 800da60:	f04f 0b01 	movls.w	fp, #1
 800da64:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800da68:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800da6c:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800da70:	4b82      	ldr	r3, [pc, #520]	@ (800dc7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800da72:	4438      	add	r0, r7
 800da74:	b207      	sxth	r7, r0
 800da76:	6818      	ldr	r0, [r3, #0]
 800da78:	42b7      	cmp	r7, r6
 800da7a:	6803      	ldr	r3, [r0, #0]
 800da7c:	f280 8083 	bge.w	800db86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800da80:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800da84:	4798      	blx	r3
 800da86:	eb07 030b 	add.w	r3, r7, fp
 800da8a:	4298      	cmp	r0, r3
 800da8c:	da07      	bge.n	800da9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800da8e:	42b0      	cmp	r0, r6
 800da90:	da05      	bge.n	800da9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800da92:	4287      	cmp	r7, r0
 800da94:	dd6c      	ble.n	800db70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800da96:	2f00      	cmp	r7, #0
 800da98:	dd6a      	ble.n	800db70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800da9a:	4630      	mov	r0, r6
 800da9c:	e004      	b.n	800daa8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 800da9e:	4287      	cmp	r7, r0
 800daa0:	dcfb      	bgt.n	800da9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800daa2:	42b0      	cmp	r0, r6
 800daa4:	bfa8      	it	ge
 800daa6:	4630      	movge	r0, r6
 800daa8:	2200      	movs	r2, #0
 800daaa:	4b76      	ldr	r3, [pc, #472]	@ (800dc84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800daac:	1bc0      	subs	r0, r0, r7
 800daae:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dab2:	f8ad 7016 	strh.w	r7, [sp, #22]
 800dab6:	882f      	ldrh	r7, [r5, #0]
 800dab8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dabc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800dac0:	f8ad 001a 	strh.w	r0, [sp, #26]
 800dac4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800dac8:	42bb      	cmp	r3, r7
 800daca:	d9cd      	bls.n	800da68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800dacc:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800dad0:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800dad4:	ab07      	add	r3, sp, #28
 800dad6:	6851      	ldr	r1, [r2, #4]
 800dad8:	c303      	stmia	r3!, {r0, r1}
 800dada:	a905      	add	r1, sp, #20
 800dadc:	a807      	add	r0, sp, #28
 800dade:	f7ff f9b0 	bl	800ce42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800dae2:	2800      	cmp	r0, #0
 800dae4:	d04c      	beq.n	800db80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800dae6:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800daea:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800daee:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800daf2:	4686      	mov	lr, r0
 800daf4:	4290      	cmp	r0, r2
 800daf6:	4450      	add	r0, sl
 800daf8:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800dafc:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800db00:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800db04:	bfb8      	it	lt
 800db06:	4696      	movlt	lr, r2
 800db08:	4452      	add	r2, sl
 800db0a:	4299      	cmp	r1, r3
 800db0c:	b280      	uxth	r0, r0
 800db0e:	b292      	uxth	r2, r2
 800db10:	468c      	mov	ip, r1
 800db12:	9302      	str	r3, [sp, #8]
 800db14:	bfb8      	it	lt
 800db16:	469c      	movlt	ip, r3
 800db18:	fa0f fa82 	sxth.w	sl, r2
 800db1c:	b203      	sxth	r3, r0
 800db1e:	4553      	cmp	r3, sl
 800db20:	bfb8      	it	lt
 800db22:	4602      	movlt	r2, r0
 800db24:	eba2 020e 	sub.w	r2, r2, lr
 800db28:	f8ad 2020 	strh.w	r2, [sp, #32]
 800db2c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800db30:	9b02      	ldr	r3, [sp, #8]
 800db32:	4411      	add	r1, r2
 800db34:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800db38:	b289      	uxth	r1, r1
 800db3a:	4413      	add	r3, r2
 800db3c:	b29b      	uxth	r3, r3
 800db3e:	b208      	sxth	r0, r1
 800db40:	b21a      	sxth	r2, r3
 800db42:	4290      	cmp	r0, r2
 800db44:	bfb8      	it	lt
 800db46:	460b      	movlt	r3, r1
 800db48:	eba3 030c 	sub.w	r3, r3, ip
 800db4c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800db50:	f8ad e01c 	strh.w	lr, [sp, #28]
 800db54:	f8ad c01e 	strh.w	ip, [sp, #30]
 800db58:	a807      	add	r0, sp, #28
 800db5a:	f7fd f894 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800db5e:	b920      	cbnz	r0, 800db6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800db60:	6823      	ldr	r3, [r4, #0]
 800db62:	a907      	add	r1, sp, #28
 800db64:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800db66:	4620      	mov	r0, r4
 800db68:	4798      	blx	r3
 800db6a:	3701      	adds	r7, #1
 800db6c:	b2bf      	uxth	r7, r7
 800db6e:	e7a9      	b.n	800dac4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800db70:	f8d9 0000 	ldr.w	r0, [r9]
 800db74:	2101      	movs	r1, #1
 800db76:	6803      	ldr	r3, [r0, #0]
 800db78:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800db7c:	4798      	blx	r3
 800db7e:	e773      	b.n	800da68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800db80:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800db84:	e7e8      	b.n	800db58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800db86:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800db88:	4798      	blx	r3
 800db8a:	4b3f      	ldr	r3, [pc, #252]	@ (800dc88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800db8c:	781b      	ldrb	r3, [r3, #0]
 800db8e:	2b00      	cmp	r3, #0
 800db90:	f43f af29 	beq.w	800d9e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800db94:	2300      	movs	r3, #0
 800db96:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800db9a:	882b      	ldrh	r3, [r5, #0]
 800db9c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800dba0:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800dba4:	42ab      	cmp	r3, r5
 800dba6:	f4bf af1e 	bcs.w	800d9e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800dbaa:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800dbae:	2907      	cmp	r1, #7
 800dbb0:	d814      	bhi.n	800dbdc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 800dbb2:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800dbb6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800dbba:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800dbbe:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800dbc2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800dbc6:	1c4a      	adds	r2, r1, #1
 800dbc8:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800dbcc:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800dbd0:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800dbd4:	f8a2 c002 	strh.w	ip, [r2, #2]
 800dbd8:	8097      	strh	r7, [r2, #4]
 800dbda:	80d6      	strh	r6, [r2, #6]
 800dbdc:	3301      	adds	r3, #1
 800dbde:	b29b      	uxth	r3, r3
 800dbe0:	e7e0      	b.n	800dba4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 800dbe2:	2b02      	cmp	r3, #2
 800dbe4:	f040 8133 	bne.w	800de4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 800dbe8:	4b28      	ldr	r3, [pc, #160]	@ (800dc8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800dbea:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800dbee:	781b      	ldrb	r3, [r3, #0]
 800dbf0:	2b01      	cmp	r3, #1
 800dbf2:	f000 8098 	beq.w	800dd26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dbf6:	882a      	ldrh	r2, [r5, #0]
 800dbf8:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800dbfc:	3201      	adds	r2, #1
 800dbfe:	b292      	uxth	r2, r2
 800dc00:	2900      	cmp	r1, #0
 800dc02:	d0c2      	beq.n	800db8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800dc04:	4694      	mov	ip, r2
 800dc06:	f04f 0900 	mov.w	r9, #0
 800dc0a:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800dc0e:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800dc12:	441e      	add	r6, r3
 800dc14:	b236      	sxth	r6, r6
 800dc16:	fa1f f38c 	uxth.w	r3, ip
 800dc1a:	4299      	cmp	r1, r3
 800dc1c:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800dc20:	f240 80bf 	bls.w	800dda2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 800dc24:	4427      	add	r7, r4
 800dc26:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800dc2a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800dc2e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800dc32:	4283      	cmp	r3, r0
 800dc34:	f340 80a1 	ble.w	800dd7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 800dc38:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800dc3c:	46e1      	mov	r9, ip
 800dc3e:	4406      	add	r6, r0
 800dc40:	b236      	sxth	r6, r6
 800dc42:	429e      	cmp	r6, r3
 800dc44:	bfa8      	it	ge
 800dc46:	461e      	movge	r6, r3
 800dc48:	f10c 0c01 	add.w	ip, ip, #1
 800dc4c:	e7e3      	b.n	800dc16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 800dc4e:	d10a      	bne.n	800dc66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800dc50:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800dc54:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800dc58:	4562      	cmp	r2, ip
 800dc5a:	bfb8      	it	lt
 800dc5c:	4662      	movlt	r2, ip
 800dc5e:	4288      	cmp	r0, r1
 800dc60:	bfb8      	it	lt
 800dc62:	461f      	movlt	r7, r3
 800dc64:	e087      	b.n	800dd76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800dc66:	428a      	cmp	r2, r1
 800dc68:	bfb8      	it	lt
 800dc6a:	460a      	movlt	r2, r1
 800dc6c:	e083      	b.n	800dd76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800dc6e:	bf00      	nop
 800dc70:	20082efc 	.word	0x20082efc
 800dc74:	20082f08 	.word	0x20082f08
 800dc78:	20000060 	.word	0x20000060
 800dc7c:	20082ec4 	.word	0x20082ec4
 800dc80:	20082eba 	.word	0x20082eba
 800dc84:	20082eb8 	.word	0x20082eb8
 800dc88:	20082ec2 	.word	0x20082ec2
 800dc8c:	20082ebc 	.word	0x20082ebc
 800dc90:	19a1      	adds	r1, r4, r6
 800dc92:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800dc96:	ab07      	add	r3, sp, #28
 800dc98:	6849      	ldr	r1, [r1, #4]
 800dc9a:	c303      	stmia	r3!, {r0, r1}
 800dc9c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800dca0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dca4:	2b13      	cmp	r3, #19
 800dca6:	bfd8      	it	le
 800dca8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800dcac:	440b      	add	r3, r1
 800dcae:	1a9b      	subs	r3, r3, r2
 800dcb0:	a807      	add	r0, sp, #28
 800dcb2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800dcb6:	f8ad 201c 	strh.w	r2, [sp, #28]
 800dcba:	f7ff f809 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800dcbe:	a807      	add	r0, sp, #28
 800dcc0:	f7fc ffe1 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dcc4:	bb78      	cbnz	r0, 800dd26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dcc6:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800dcca:	f8d9 0000 	ldr.w	r0, [r9]
 800dcce:	f1bc 0f14 	cmp.w	ip, #20
 800dcd2:	bfa8      	it	ge
 800dcd4:	f04f 0c14 	movge.w	ip, #20
 800dcd8:	f8d0 e000 	ldr.w	lr, [r0]
 800dcdc:	fa1f fc8c 	uxth.w	ip, ip
 800dce0:	f8cd c000 	str.w	ip, [sp]
 800dce4:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800dce8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800dcec:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800dcf0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dcf4:	47d8      	blx	fp
 800dcf6:	4683      	mov	fp, r0
 800dcf8:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800dcfc:	a807      	add	r0, sp, #28
 800dcfe:	f7fe ffcd 	bl	800cc9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800dd02:	6823      	ldr	r3, [r4, #0]
 800dd04:	4620      	mov	r0, r4
 800dd06:	4426      	add	r6, r4
 800dd08:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800dd0a:	a907      	add	r1, sp, #28
 800dd0c:	4798      	blx	r3
 800dd0e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800dd12:	eba0 000b 	sub.w	r0, r0, fp
 800dd16:	b200      	sxth	r0, r0
 800dd18:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800dd1c:	b918      	cbnz	r0, 800dd26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dd1e:	b2b9      	uxth	r1, r7
 800dd20:	4650      	mov	r0, sl
 800dd22:	f7ff fa79 	bl	800d218 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dd26:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800dd2a:	f1bb 0f00 	cmp.w	fp, #0
 800dd2e:	f43f af2c 	beq.w	800db8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800dd32:	2700      	movs	r7, #0
 800dd34:	882b      	ldrh	r3, [r5, #0]
 800dd36:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800dd3a:	3301      	adds	r3, #1
 800dd3c:	b29b      	uxth	r3, r3
 800dd3e:	b299      	uxth	r1, r3
 800dd40:	458b      	cmp	fp, r1
 800dd42:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 800dd46:	d9a3      	bls.n	800dc90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800dd48:	4426      	add	r6, r4
 800dd4a:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800dd4e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800dd52:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800dd56:	4408      	add	r0, r1
 800dd58:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800dd5c:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800dd60:	b200      	sxth	r0, r0
 800dd62:	4461      	add	r1, ip
 800dd64:	b209      	sxth	r1, r1
 800dd66:	4288      	cmp	r0, r1
 800dd68:	f6bf af71 	bge.w	800dc4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 800dd6c:	4584      	cmp	ip, r0
 800dd6e:	4662      	mov	r2, ip
 800dd70:	461f      	mov	r7, r3
 800dd72:	bfb8      	it	lt
 800dd74:	4602      	movlt	r2, r0
 800dd76:	3301      	adds	r3, #1
 800dd78:	e7e1      	b.n	800dd3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 800dd7a:	d10e      	bne.n	800dd9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 800dd7c:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800dd80:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800dd84:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800dd88:	4473      	add	r3, lr
 800dd8a:	b21b      	sxth	r3, r3
 800dd8c:	429e      	cmp	r6, r3
 800dd8e:	bfa8      	it	ge
 800dd90:	461e      	movge	r6, r3
 800dd92:	4287      	cmp	r7, r0
 800dd94:	bfb8      	it	lt
 800dd96:	46e1      	movlt	r9, ip
 800dd98:	e756      	b.n	800dc48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800dd9a:	4286      	cmp	r6, r0
 800dd9c:	bfa8      	it	ge
 800dd9e:	4606      	movge	r6, r0
 800dda0:	e752      	b.n	800dc48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800dda2:	eb0a 0007 	add.w	r0, sl, r7
 800dda6:	4427      	add	r7, r4
 800dda8:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800ddac:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800ddb0:	f1bb 0f13 	cmp.w	fp, #19
 800ddb4:	bfde      	ittt	le
 800ddb6:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800ddba:	445e      	addle	r6, fp
 800ddbc:	b236      	sxthle	r6, r6
 800ddbe:	f7fc ff62 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ddc2:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800ddc6:	2800      	cmp	r0, #0
 800ddc8:	f47f af1a 	bne.w	800dc00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 800ddcc:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800ddd0:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800ddd4:	1ab6      	subs	r6, r6, r2
 800ddd6:	2e14      	cmp	r6, #20
 800ddd8:	bfa8      	it	ge
 800ddda:	2614      	movge	r6, #20
 800dddc:	4828      	ldr	r0, [pc, #160]	@ (800de80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 800ddde:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800dde2:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800dde6:	6800      	ldr	r0, [r0, #0]
 800dde8:	f8ad 101c 	strh.w	r1, [sp, #28]
 800ddec:	f8ad 201e 	strh.w	r2, [sp, #30]
 800ddf0:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ddf4:	f8d0 c000 	ldr.w	ip, [r0]
 800ddf8:	b2b6      	uxth	r6, r6
 800ddfa:	fa1f fb8b 	uxth.w	fp, fp
 800ddfe:	455e      	cmp	r6, fp
 800de00:	bf94      	ite	ls
 800de02:	9600      	strls	r6, [sp, #0]
 800de04:	f8cd b000 	strhi.w	fp, [sp]
 800de08:	b292      	uxth	r2, r2
 800de0a:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800de0e:	b29b      	uxth	r3, r3
 800de10:	b289      	uxth	r1, r1
 800de12:	47b0      	blx	r6
 800de14:	6823      	ldr	r3, [r4, #0]
 800de16:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800de1a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800de1c:	a907      	add	r1, sp, #28
 800de1e:	4620      	mov	r0, r4
 800de20:	4798      	blx	r3
 800de22:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800de26:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800de2a:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800de2e:	1a5b      	subs	r3, r3, r1
 800de30:	440a      	add	r2, r1
 800de32:	b21b      	sxth	r3, r3
 800de34:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800de38:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800de3c:	2b00      	cmp	r3, #0
 800de3e:	f47f aeda 	bne.w	800dbf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800de42:	fa1f f189 	uxth.w	r1, r9
 800de46:	4650      	mov	r0, sl
 800de48:	f7ff f9e6 	bl	800d218 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800de4c:	e6d3      	b.n	800dbf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800de4e:	882e      	ldrh	r6, [r5, #0]
 800de50:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800de54:	42b3      	cmp	r3, r6
 800de56:	f67f ae98 	bls.w	800db8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800de5a:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800de5e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800de62:	ab07      	add	r3, sp, #28
 800de64:	6851      	ldr	r1, [r2, #4]
 800de66:	c303      	stmia	r3!, {r0, r1}
 800de68:	a807      	add	r0, sp, #28
 800de6a:	f7fc ff0c 	bl	800ac86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800de6e:	b920      	cbnz	r0, 800de7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 800de70:	6823      	ldr	r3, [r4, #0]
 800de72:	a907      	add	r1, sp, #28
 800de74:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800de76:	4620      	mov	r0, r4
 800de78:	4798      	blx	r3
 800de7a:	3601      	adds	r6, #1
 800de7c:	b2b6      	uxth	r6, r6
 800de7e:	e7e7      	b.n	800de50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 800de80:	20082ec4 	.word	0x20082ec4

0800de84 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800de84:	2200      	movs	r2, #0
 800de86:	4b03      	ldr	r3, [pc, #12]	@ (800de94 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800de88:	801a      	strh	r2, [r3, #0]
 800de8a:	805a      	strh	r2, [r3, #2]
 800de8c:	809a      	strh	r2, [r3, #4]
 800de8e:	80da      	strh	r2, [r3, #6]
 800de90:	4770      	bx	lr
 800de92:	bf00      	nop
 800de94:	20082f08 	.word	0x20082f08

0800de98 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800de98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de9c:	4606      	mov	r6, r0
 800de9e:	b09d      	sub	sp, #116	@ 0x74
 800dea0:	a803      	add	r0, sp, #12
 800dea2:	4614      	mov	r4, r2
 800dea4:	468a      	mov	sl, r1
 800dea6:	461d      	mov	r5, r3
 800dea8:	f001 f8a2 	bl	800eff0 <_ZN8touchgfx12TextProviderC1Ev>
 800deac:	6833      	ldr	r3, [r6, #0]
 800deae:	4630      	mov	r0, r6
 800deb0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800deb2:	4798      	blx	r3
 800deb4:	6833      	ldr	r3, [r6, #0]
 800deb6:	4607      	mov	r7, r0
 800deb8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800deba:	4630      	mov	r0, r6
 800debc:	4798      	blx	r3
 800debe:	462a      	mov	r2, r5
 800dec0:	2500      	movs	r5, #0
 800dec2:	9000      	str	r0, [sp, #0]
 800dec4:	4621      	mov	r1, r4
 800dec6:	463b      	mov	r3, r7
 800dec8:	a803      	add	r0, sp, #12
 800deca:	f001 f8e4 	bl	800f096 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dece:	462c      	mov	r4, r5
 800ded0:	46a9      	mov	r9, r5
 800ded2:	46a8      	mov	r8, r5
 800ded4:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800ded8:	2300      	movs	r3, #0
 800deda:	9302      	str	r3, [sp, #8]
 800dedc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800dee0:	429c      	cmp	r4, r3
 800dee2:	d002      	beq.n	800deea <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800dee4:	455c      	cmp	r4, fp
 800dee6:	bf18      	it	ne
 800dee8:	4625      	movne	r5, r4
 800deea:	ab02      	add	r3, sp, #8
 800deec:	4632      	mov	r2, r6
 800deee:	4651      	mov	r1, sl
 800def0:	a803      	add	r0, sp, #12
 800def2:	f001 fbbf 	bl	800f674 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800def6:	4604      	mov	r4, r0
 800def8:	b108      	cbz	r0, 800defe <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800defa:	280a      	cmp	r0, #10
 800defc:	d10a      	bne.n	800df14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800defe:	45c1      	cmp	r9, r8
 800df00:	bf38      	it	cc
 800df02:	46c1      	movcc	r9, r8
 800df04:	f04f 0800 	mov.w	r8, #0
 800df08:	2c00      	cmp	r4, #0
 800df0a:	d1e5      	bne.n	800ded8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800df0c:	4648      	mov	r0, r9
 800df0e:	b01d      	add	sp, #116	@ 0x74
 800df10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df14:	9a02      	ldr	r2, [sp, #8]
 800df16:	2a00      	cmp	r2, #0
 800df18:	d0de      	beq.n	800ded8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800df1a:	7b57      	ldrb	r7, [r2, #13]
 800df1c:	6833      	ldr	r3, [r6, #0]
 800df1e:	007f      	lsls	r7, r7, #1
 800df20:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 800df24:	7a97      	ldrb	r7, [r2, #10]
 800df26:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800df28:	4307      	orrs	r7, r0
 800df2a:	4629      	mov	r1, r5
 800df2c:	4630      	mov	r0, r6
 800df2e:	8894      	ldrh	r4, [r2, #4]
 800df30:	4798      	blx	r3
 800df32:	4438      	add	r0, r7
 800df34:	4480      	add	r8, r0
 800df36:	fa1f f888 	uxth.w	r8, r8
 800df3a:	e7e5      	b.n	800df08 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800df3c <_ZNK8touchgfx4Font12getCharWidthEt>:
 800df3c:	b508      	push	{r3, lr}
 800df3e:	6803      	ldr	r3, [r0, #0]
 800df40:	68db      	ldr	r3, [r3, #12]
 800df42:	4798      	blx	r3
 800df44:	b128      	cbz	r0, 800df52 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800df46:	7b43      	ldrb	r3, [r0, #13]
 800df48:	7a80      	ldrb	r0, [r0, #10]
 800df4a:	005b      	lsls	r3, r3, #1
 800df4c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800df50:	4318      	orrs	r0, r3
 800df52:	bd08      	pop	{r3, pc}

0800df54 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800df54:	b40e      	push	{r1, r2, r3}
 800df56:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df58:	4605      	mov	r5, r0
 800df5a:	b09e      	sub	sp, #120	@ 0x78
 800df5c:	ab23      	add	r3, sp, #140	@ 0x8c
 800df5e:	f853 4b04 	ldr.w	r4, [r3], #4
 800df62:	a805      	add	r0, sp, #20
 800df64:	9303      	str	r3, [sp, #12]
 800df66:	f001 f843 	bl	800eff0 <_ZN8touchgfx12TextProviderC1Ev>
 800df6a:	682b      	ldr	r3, [r5, #0]
 800df6c:	4628      	mov	r0, r5
 800df6e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800df70:	4798      	blx	r3
 800df72:	682b      	ldr	r3, [r5, #0]
 800df74:	4606      	mov	r6, r0
 800df76:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800df78:	4628      	mov	r0, r5
 800df7a:	4798      	blx	r3
 800df7c:	4621      	mov	r1, r4
 800df7e:	2400      	movs	r4, #0
 800df80:	4633      	mov	r3, r6
 800df82:	9000      	str	r0, [sp, #0]
 800df84:	9a03      	ldr	r2, [sp, #12]
 800df86:	ae1e      	add	r6, sp, #120	@ 0x78
 800df88:	a805      	add	r0, sp, #20
 800df8a:	f001 f884 	bl	800f096 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800df8e:	f846 4d68 	str.w	r4, [r6, #-104]!
 800df92:	4633      	mov	r3, r6
 800df94:	462a      	mov	r2, r5
 800df96:	4621      	mov	r1, r4
 800df98:	a805      	add	r0, sp, #20
 800df9a:	f001 fb6b 	bl	800f674 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800df9e:	b1f0      	cbz	r0, 800dfde <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800dfa0:	280a      	cmp	r0, #10
 800dfa2:	d018      	beq.n	800dfd6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800dfa4:	9f04      	ldr	r7, [sp, #16]
 800dfa6:	b1b7      	cbz	r7, 800dfd6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800dfa8:	7b78      	ldrb	r0, [r7, #13]
 800dfaa:	7a3b      	ldrb	r3, [r7, #8]
 800dfac:	00c1      	lsls	r1, r0, #3
 800dfae:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800dfb2:	4319      	orrs	r1, r3
 800dfb4:	0643      	lsls	r3, r0, #25
 800dfb6:	bf44      	itt	mi
 800dfb8:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 800dfbc:	b219      	sxthmi	r1, r3
 800dfbe:	0100      	lsls	r0, r0, #4
 800dfc0:	79fb      	ldrb	r3, [r7, #7]
 800dfc2:	88ea      	ldrh	r2, [r5, #6]
 800dfc4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800dfc8:	4303      	orrs	r3, r0
 800dfca:	4413      	add	r3, r2
 800dfcc:	1a5b      	subs	r3, r3, r1
 800dfce:	b21b      	sxth	r3, r3
 800dfd0:	429c      	cmp	r4, r3
 800dfd2:	bfb8      	it	lt
 800dfd4:	461c      	movlt	r4, r3
 800dfd6:	4633      	mov	r3, r6
 800dfd8:	462a      	mov	r2, r5
 800dfda:	2100      	movs	r1, #0
 800dfdc:	e7dc      	b.n	800df98 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800dfde:	b2a0      	uxth	r0, r4
 800dfe0:	b01e      	add	sp, #120	@ 0x78
 800dfe2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800dfe6:	b003      	add	sp, #12
 800dfe8:	4770      	bx	lr

0800dfea <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800dfea:	7a43      	ldrb	r3, [r0, #9]
 800dfec:	8880      	ldrh	r0, [r0, #4]
 800dfee:	4418      	add	r0, r3
 800dff0:	b280      	uxth	r0, r0
 800dff2:	4770      	bx	lr

0800dff4 <_ZNK8touchgfx4Font13getFontHeightEv>:
 800dff4:	6803      	ldr	r3, [r0, #0]
 800dff6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800dff8:	4718      	bx	r3

0800dffa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800dffa:	b40e      	push	{r1, r2, r3}
 800dffc:	b570      	push	{r4, r5, r6, lr}
 800dffe:	4604      	mov	r4, r0
 800e000:	b09d      	sub	sp, #116	@ 0x74
 800e002:	ab21      	add	r3, sp, #132	@ 0x84
 800e004:	f853 5b04 	ldr.w	r5, [r3], #4
 800e008:	a803      	add	r0, sp, #12
 800e00a:	9302      	str	r3, [sp, #8]
 800e00c:	f000 fff0 	bl	800eff0 <_ZN8touchgfx12TextProviderC1Ev>
 800e010:	6823      	ldr	r3, [r4, #0]
 800e012:	4620      	mov	r0, r4
 800e014:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e016:	4798      	blx	r3
 800e018:	6823      	ldr	r3, [r4, #0]
 800e01a:	4606      	mov	r6, r0
 800e01c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e01e:	4620      	mov	r0, r4
 800e020:	4798      	blx	r3
 800e022:	4633      	mov	r3, r6
 800e024:	9000      	str	r0, [sp, #0]
 800e026:	9a02      	ldr	r2, [sp, #8]
 800e028:	4629      	mov	r1, r5
 800e02a:	a803      	add	r0, sp, #12
 800e02c:	f001 f833 	bl	800f096 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e030:	a803      	add	r0, sp, #12
 800e032:	f001 fba1 	bl	800f778 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e036:	2401      	movs	r4, #1
 800e038:	b2a3      	uxth	r3, r4
 800e03a:	b140      	cbz	r0, 800e04e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800e03c:	280a      	cmp	r0, #10
 800e03e:	bf08      	it	eq
 800e040:	3301      	addeq	r3, #1
 800e042:	a803      	add	r0, sp, #12
 800e044:	bf08      	it	eq
 800e046:	b21c      	sxtheq	r4, r3
 800e048:	f001 fb96 	bl	800f778 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e04c:	e7f4      	b.n	800e038 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800e04e:	4618      	mov	r0, r3
 800e050:	b01d      	add	sp, #116	@ 0x74
 800e052:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e056:	b003      	add	sp, #12
 800e058:	4770      	bx	lr

0800e05a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800e05a:	b40e      	push	{r1, r2, r3}
 800e05c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e05e:	4604      	mov	r4, r0
 800e060:	b09e      	sub	sp, #120	@ 0x78
 800e062:	ab23      	add	r3, sp, #140	@ 0x8c
 800e064:	f853 5b04 	ldr.w	r5, [r3], #4
 800e068:	a805      	add	r0, sp, #20
 800e06a:	9303      	str	r3, [sp, #12]
 800e06c:	f000 ffc0 	bl	800eff0 <_ZN8touchgfx12TextProviderC1Ev>
 800e070:	6823      	ldr	r3, [r4, #0]
 800e072:	4620      	mov	r0, r4
 800e074:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e076:	4798      	blx	r3
 800e078:	6823      	ldr	r3, [r4, #0]
 800e07a:	4606      	mov	r6, r0
 800e07c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e07e:	4620      	mov	r0, r4
 800e080:	4798      	blx	r3
 800e082:	4633      	mov	r3, r6
 800e084:	4629      	mov	r1, r5
 800e086:	9000      	str	r0, [sp, #0]
 800e088:	9a03      	ldr	r2, [sp, #12]
 800e08a:	a805      	add	r0, sp, #20
 800e08c:	f001 f803 	bl	800f096 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e090:	2100      	movs	r1, #0
 800e092:	ad1e      	add	r5, sp, #120	@ 0x78
 800e094:	f845 1d68 	str.w	r1, [r5, #-104]!
 800e098:	462b      	mov	r3, r5
 800e09a:	4622      	mov	r2, r4
 800e09c:	a805      	add	r0, sp, #20
 800e09e:	f001 fae9 	bl	800f674 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e0a2:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 800e0a6:	b1d8      	cbz	r0, 800e0e0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800e0a8:	280a      	cmp	r0, #10
 800e0aa:	d012      	beq.n	800e0d2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800e0ac:	9804      	ldr	r0, [sp, #16]
 800e0ae:	b180      	cbz	r0, 800e0d2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800e0b0:	7b47      	ldrb	r7, [r0, #13]
 800e0b2:	88e2      	ldrh	r2, [r4, #6]
 800e0b4:	00fb      	lsls	r3, r7, #3
 800e0b6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800e0ba:	7a03      	ldrb	r3, [r0, #8]
 800e0bc:	430b      	orrs	r3, r1
 800e0be:	0679      	lsls	r1, r7, #25
 800e0c0:	bf44      	itt	mi
 800e0c2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e0c6:	b21b      	sxthmi	r3, r3
 800e0c8:	1ad3      	subs	r3, r2, r3
 800e0ca:	b21b      	sxth	r3, r3
 800e0cc:	429e      	cmp	r6, r3
 800e0ce:	bfa8      	it	ge
 800e0d0:	461e      	movge	r6, r3
 800e0d2:	462b      	mov	r3, r5
 800e0d4:	4622      	mov	r2, r4
 800e0d6:	2100      	movs	r1, #0
 800e0d8:	a805      	add	r0, sp, #20
 800e0da:	f001 facb 	bl	800f674 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e0de:	e7e2      	b.n	800e0a6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800e0e0:	4630      	mov	r0, r6
 800e0e2:	b01e      	add	sp, #120	@ 0x78
 800e0e4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e0e8:	b003      	add	sp, #12
 800e0ea:	4770      	bx	lr

0800e0ec <_ZNK8touchgfx8Drawable10invalidateEv>:
 800e0ec:	b513      	push	{r0, r1, r4, lr}
 800e0ee:	2400      	movs	r4, #0
 800e0f0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e0f4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e0f8:	6803      	ldr	r3, [r0, #0]
 800e0fa:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e0fe:	9400      	str	r4, [sp, #0]
 800e100:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e104:	691b      	ldr	r3, [r3, #16]
 800e106:	4669      	mov	r1, sp
 800e108:	4798      	blx	r3
 800e10a:	b002      	add	sp, #8
 800e10c:	bd10      	pop	{r4, pc}

0800e10e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800e10e:	b538      	push	{r3, r4, r5, lr}
 800e110:	460c      	mov	r4, r1
 800e112:	4605      	mov	r5, r0
 800e114:	680b      	ldr	r3, [r1, #0]
 800e116:	68db      	ldr	r3, [r3, #12]
 800e118:	4798      	blx	r3
 800e11a:	6823      	ldr	r3, [r4, #0]
 800e11c:	4620      	mov	r0, r4
 800e11e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e120:	4629      	mov	r1, r5
 800e122:	4798      	blx	r3
 800e124:	4628      	mov	r0, r5
 800e126:	bd38      	pop	{r3, r4, r5, pc}

0800e128 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800e128:	b410      	push	{r4}
 800e12a:	880a      	ldrh	r2, [r1, #0]
 800e12c:	8884      	ldrh	r4, [r0, #4]
 800e12e:	4422      	add	r2, r4
 800e130:	800a      	strh	r2, [r1, #0]
 800e132:	88c4      	ldrh	r4, [r0, #6]
 800e134:	884a      	ldrh	r2, [r1, #2]
 800e136:	4422      	add	r2, r4
 800e138:	804a      	strh	r2, [r1, #2]
 800e13a:	6940      	ldr	r0, [r0, #20]
 800e13c:	b120      	cbz	r0, 800e148 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800e13e:	6803      	ldr	r3, [r0, #0]
 800e140:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e144:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e146:	4718      	bx	r3
 800e148:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e14c:	4770      	bx	lr

0800e14e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800e14e:	b570      	push	{r4, r5, r6, lr}
 800e150:	460c      	mov	r4, r1
 800e152:	8882      	ldrh	r2, [r0, #4]
 800e154:	880b      	ldrh	r3, [r1, #0]
 800e156:	4605      	mov	r5, r0
 800e158:	4413      	add	r3, r2
 800e15a:	800b      	strh	r3, [r1, #0]
 800e15c:	88c2      	ldrh	r2, [r0, #6]
 800e15e:	884b      	ldrh	r3, [r1, #2]
 800e160:	4413      	add	r3, r2
 800e162:	804b      	strh	r3, [r1, #2]
 800e164:	1d01      	adds	r1, r0, #4
 800e166:	4620      	mov	r0, r4
 800e168:	f7fc fd4a 	bl	800ac00 <_ZN8touchgfx4RectaNERKS0_>
 800e16c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e170:	2b00      	cmp	r3, #0
 800e172:	dd0b      	ble.n	800e18c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e174:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e178:	2b00      	cmp	r3, #0
 800e17a:	dd07      	ble.n	800e18c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e17c:	6968      	ldr	r0, [r5, #20]
 800e17e:	b128      	cbz	r0, 800e18c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e180:	6803      	ldr	r3, [r0, #0]
 800e182:	4621      	mov	r1, r4
 800e184:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e188:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e18a:	4718      	bx	r3
 800e18c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800e190 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800e190:	b570      	push	{r4, r5, r6, lr}
 800e192:	460c      	mov	r4, r1
 800e194:	8882      	ldrh	r2, [r0, #4]
 800e196:	880b      	ldrh	r3, [r1, #0]
 800e198:	4605      	mov	r5, r0
 800e19a:	4413      	add	r3, r2
 800e19c:	800b      	strh	r3, [r1, #0]
 800e19e:	88c2      	ldrh	r2, [r0, #6]
 800e1a0:	884b      	ldrh	r3, [r1, #2]
 800e1a2:	4413      	add	r3, r2
 800e1a4:	804b      	strh	r3, [r1, #2]
 800e1a6:	1d01      	adds	r1, r0, #4
 800e1a8:	4620      	mov	r0, r4
 800e1aa:	f7fc fd29 	bl	800ac00 <_ZN8touchgfx4RectaNERKS0_>
 800e1ae:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e1b2:	2b00      	cmp	r3, #0
 800e1b4:	dd19      	ble.n	800e1ea <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e1b6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e1ba:	2b00      	cmp	r3, #0
 800e1bc:	dd15      	ble.n	800e1ea <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e1be:	6968      	ldr	r0, [r5, #20]
 800e1c0:	b128      	cbz	r0, 800e1ce <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800e1c2:	6803      	ldr	r3, [r0, #0]
 800e1c4:	4621      	mov	r1, r4
 800e1c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e1ca:	691b      	ldr	r3, [r3, #16]
 800e1cc:	4718      	bx	r3
 800e1ce:	4b07      	ldr	r3, [pc, #28]	@ (800e1ec <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800e1d0:	681b      	ldr	r3, [r3, #0]
 800e1d2:	3304      	adds	r3, #4
 800e1d4:	429d      	cmp	r5, r3
 800e1d6:	d108      	bne.n	800e1ea <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e1d8:	f7fe ff12 	bl	800d000 <_ZN8touchgfx11Application11getInstanceEv>
 800e1dc:	6803      	ldr	r3, [r0, #0]
 800e1de:	6821      	ldr	r1, [r4, #0]
 800e1e0:	6862      	ldr	r2, [r4, #4]
 800e1e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e1e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e1e8:	4718      	bx	r3
 800e1ea:	bd70      	pop	{r4, r5, r6, pc}
 800e1ec:	20082f00 	.word	0x20082f00

0800e1f0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800e1f0:	b570      	push	{r4, r5, r6, lr}
 800e1f2:	4604      	mov	r4, r0
 800e1f4:	4616      	mov	r6, r2
 800e1f6:	460d      	mov	r5, r1
 800e1f8:	b901      	cbnz	r1, 800e1fc <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800e1fa:	b192      	cbz	r2, 800e222 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800e1fc:	6823      	ldr	r3, [r4, #0]
 800e1fe:	4620      	mov	r0, r4
 800e200:	699b      	ldr	r3, [r3, #24]
 800e202:	4798      	blx	r3
 800e204:	88e2      	ldrh	r2, [r4, #6]
 800e206:	88a1      	ldrh	r1, [r4, #4]
 800e208:	4432      	add	r2, r6
 800e20a:	4429      	add	r1, r5
 800e20c:	4620      	mov	r0, r4
 800e20e:	b212      	sxth	r2, r2
 800e210:	b209      	sxth	r1, r1
 800e212:	f7f5 f858 	bl	80032c6 <_ZN8touchgfx8Drawable5setXYEss>
 800e216:	6823      	ldr	r3, [r4, #0]
 800e218:	4620      	mov	r0, r4
 800e21a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e21e:	699b      	ldr	r3, [r3, #24]
 800e220:	4718      	bx	r3
 800e222:	bd70      	pop	{r4, r5, r6, pc}

0800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800e224:	b510      	push	{r4, lr}
 800e226:	2300      	movs	r3, #0
 800e228:	4604      	mov	r4, r0
 800e22a:	4608      	mov	r0, r1
 800e22c:	8023      	strh	r3, [r4, #0]
 800e22e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e232:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800e236:	8063      	strh	r3, [r4, #2]
 800e238:	6803      	ldr	r3, [r0, #0]
 800e23a:	80a1      	strh	r1, [r4, #4]
 800e23c:	80e2      	strh	r2, [r4, #6]
 800e23e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e240:	4621      	mov	r1, r4
 800e242:	4798      	blx	r3
 800e244:	4620      	mov	r0, r4
 800e246:	bd10      	pop	{r4, pc}

0800e248 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 800e248:	4770      	bx	lr

0800e24a <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 800e24a:	b510      	push	{r4, lr}
 800e24c:	4604      	mov	r4, r0
 800e24e:	211c      	movs	r1, #28
 800e250:	f022 ff41 	bl	80310d6 <_ZdlPvj>
 800e254:	4620      	mov	r0, r4
 800e256:	bd10      	pop	{r4, pc}

0800e258 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 800e258:	4a04      	ldr	r2, [pc, #16]	@ (800e26c <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 800e25a:	6002      	str	r2, [r0, #0]
 800e25c:	2200      	movs	r2, #0
 800e25e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800e262:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800e266:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e26a:	4770      	bx	lr
 800e26c:	08035b28 	.word	0x08035b28

0800e270 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 800e270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e274:	4604      	mov	r4, r0
 800e276:	4696      	mov	lr, r2
 800e278:	8b22      	ldrh	r2, [r4, #24]
 800e27a:	b087      	sub	sp, #28
 800e27c:	9105      	str	r1, [sp, #20]
 800e27e:	1c51      	adds	r1, r2, #1
 800e280:	6880      	ldr	r0, [r0, #8]
 800e282:	8321      	strh	r1, [r4, #24]
 800e284:	2101      	movs	r1, #1
 800e286:	5481      	strb	r1, [r0, r2]
 800e288:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e28c:	8b60      	ldrh	r0, [r4, #26]
 800e28e:	ee06 2a90 	vmov	s13, r2
 800e292:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800e296:	68e2      	ldr	r2, [r4, #12]
 800e298:	1845      	adds	r5, r0, r1
 800e29a:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 800e29e:	8365      	strh	r5, [r4, #26]
 800e2a0:	edc2 6a00 	vstr	s13, [r2]
 800e2a4:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e2a8:	8b60      	ldrh	r0, [r4, #26]
 800e2aa:	ee07 2a10 	vmov	s14, r2
 800e2ae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e2b2:	68e2      	ldr	r2, [r4, #12]
 800e2b4:	1845      	adds	r5, r0, r1
 800e2b6:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 800e2ba:	8365      	strh	r5, [r4, #26]
 800e2bc:	ed82 7a00 	vstr	s14, [r2]
 800e2c0:	f8be 2000 	ldrh.w	r2, [lr]
 800e2c4:	1d18      	adds	r0, r3, #4
 800e2c6:	9203      	str	r2, [sp, #12]
 800e2c8:	2200      	movs	r2, #0
 800e2ca:	4689      	mov	r9, r1
 800e2cc:	4613      	mov	r3, r2
 800e2ce:	4694      	mov	ip, r2
 800e2d0:	460d      	mov	r5, r1
 800e2d2:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800e2d6:	9201      	str	r2, [sp, #4]
 800e2d8:	9202      	str	r2, [sp, #8]
 800e2da:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 800e2de:	9e05      	ldr	r6, [sp, #20]
 800e2e0:	f8d4 a008 	ldr.w	sl, [r4, #8]
 800e2e4:	f108 0701 	add.w	r7, r8, #1
 800e2e8:	428e      	cmp	r6, r1
 800e2ea:	b2bf      	uxth	r7, r7
 800e2ec:	eb0a 0b08 	add.w	fp, sl, r8
 800e2f0:	f340 80b6 	ble.w	800e460 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
 800e2f4:	9b03      	ldr	r3, [sp, #12]
 800e2f6:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e2fa:	fa43 fb05 	asr.w	fp, r3, r5
 800e2fe:	f00b 0b01 	and.w	fp, fp, #1
 800e302:	fa5f f38b 	uxtb.w	r3, fp
 800e306:	9304      	str	r3, [sp, #16]
 800e308:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e30c:	f1bb 0f00 	cmp.w	fp, #0
 800e310:	d057      	beq.n	800e3c2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
 800e312:	ee07 ca90 	vmov	s15, ip
 800e316:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 800e31a:	ee07 3a90 	vmov	s15, r3
 800e31e:	8327      	strh	r7, [r4, #24]
 800e320:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e324:	f1b9 0f00 	cmp.w	r9, #0
 800e328:	d028      	beq.n	800e37c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
 800e32a:	f04f 0602 	mov.w	r6, #2
 800e32e:	f80a 6008 	strb.w	r6, [sl, r8]
 800e332:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e336:	68e7      	ldr	r7, [r4, #12]
 800e338:	f108 0901 	add.w	r9, r8, #1
 800e33c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e340:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e344:	edc7 5a00 	vstr	s11, [r7]
 800e348:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e34c:	68e7      	ldr	r7, [r4, #12]
 800e34e:	f108 0901 	add.w	r9, r8, #1
 800e352:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e356:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e35a:	edc7 7a00 	vstr	s15, [r7]
 800e35e:	3501      	adds	r5, #1
 800e360:	2d10      	cmp	r5, #16
 800e362:	d106      	bne.n	800e372 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 800e364:	9d02      	ldr	r5, [sp, #8]
 800e366:	3501      	adds	r5, #1
 800e368:	9502      	str	r5, [sp, #8]
 800e36a:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
 800e36e:	9503      	str	r5, [sp, #12]
 800e370:	2500      	movs	r5, #0
 800e372:	3101      	adds	r1, #1
 800e374:	3004      	adds	r0, #4
 800e376:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800e37a:	e7ae      	b.n	800e2da <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
 800e37c:	ed9d 5a01 	vldr	s10, [sp, #4]
 800e380:	f04f 0605 	mov.w	r6, #5
 800e384:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 800e388:	f80a 6008 	strb.w	r6, [sl, r8]
 800e38c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e390:	68e7      	ldr	r7, [r4, #12]
 800e392:	f108 0901 	add.w	r9, r8, #1
 800e396:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e39a:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e39e:	ed87 5a00 	vstr	s10, [r7]
 800e3a2:	ee05 2a10 	vmov	s10, r2
 800e3a6:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 800e3aa:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e3ae:	68e7      	ldr	r7, [r4, #12]
 800e3b0:	f108 0901 	add.w	r9, r8, #1
 800e3b4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e3b8:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e3bc:	ed87 5a00 	vstr	s10, [r7]
 800e3c0:	e7b7      	b.n	800e332 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
 800e3c2:	f1b9 0f00 	cmp.w	r9, #0
 800e3c6:	d147      	bne.n	800e458 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
 800e3c8:	eddd 7a01 	vldr	s15, [sp, #4]
 800e3cc:	f04f 0605 	mov.w	r6, #5
 800e3d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e3d4:	8327      	strh	r7, [r4, #24]
 800e3d6:	f80a 6008 	strb.w	r6, [sl, r8]
 800e3da:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e3de:	68e7      	ldr	r7, [r4, #12]
 800e3e0:	f108 0901 	add.w	r9, r8, #1
 800e3e4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e3e8:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e3ec:	edc7 7a00 	vstr	s15, [r7]
 800e3f0:	ee07 2a90 	vmov	s15, r2
 800e3f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e3f8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e3fc:	68e7      	ldr	r7, [r4, #12]
 800e3fe:	9e01      	ldr	r6, [sp, #4]
 800e400:	f108 0901 	add.w	r9, r8, #1
 800e404:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e408:	4466      	add	r6, ip
 800e40a:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e40e:	edc7 7a00 	vstr	s15, [r7]
 800e412:	ee07 6a90 	vmov	s15, r6
 800e416:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e41a:	ee67 7a86 	vmul.f32	s15, s15, s12
 800e41e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e422:	68e7      	ldr	r7, [r4, #12]
 800e424:	f108 0901 	add.w	r9, r8, #1
 800e428:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e42c:	441a      	add	r2, r3
 800e42e:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e432:	edc7 7a00 	vstr	s15, [r7]
 800e436:	ee07 2a90 	vmov	s15, r2
 800e43a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e43e:	ee67 7a86 	vmul.f32	s15, s15, s12
 800e442:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e446:	68e7      	ldr	r7, [r4, #12]
 800e448:	f108 0901 	add.w	r9, r8, #1
 800e44c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e450:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e454:	edc7 7a00 	vstr	s15, [r7]
 800e458:	461a      	mov	r2, r3
 800e45a:	f8cd c004 	str.w	ip, [sp, #4]
 800e45e:	e77e      	b.n	800e35e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
 800e460:	f1b9 0f00 	cmp.w	r9, #0
 800e464:	d028      	beq.n	800e4b8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 800e466:	ee07 ca90 	vmov	s15, ip
 800e46a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e46e:	eef4 6a67 	vcmp.f32	s13, s15
 800e472:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e476:	d108      	bne.n	800e48a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
 800e478:	ee07 3a90 	vmov	s15, r3
 800e47c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e480:	eeb4 7a67 	vcmp.f32	s14, s15
 800e484:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e488:	d016      	beq.n	800e4b8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 800e48a:	2302      	movs	r3, #2
 800e48c:	8327      	strh	r7, [r4, #24]
 800e48e:	f88b 3000 	strb.w	r3, [fp]
 800e492:	8b62      	ldrh	r2, [r4, #26]
 800e494:	68e3      	ldr	r3, [r4, #12]
 800e496:	1c51      	adds	r1, r2, #1
 800e498:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800e49c:	8361      	strh	r1, [r4, #26]
 800e49e:	edc3 6a00 	vstr	s13, [r3]
 800e4a2:	8b62      	ldrh	r2, [r4, #26]
 800e4a4:	68e3      	ldr	r3, [r4, #12]
 800e4a6:	1c51      	adds	r1, r2, #1
 800e4a8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800e4ac:	8361      	strh	r1, [r4, #26]
 800e4ae:	ed83 7a00 	vstr	s14, [r3]
 800e4b2:	b007      	add	sp, #28
 800e4b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e4b8:	eddd 7a01 	vldr	s15, [sp, #4]
 800e4bc:	2305      	movs	r3, #5
 800e4be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e4c2:	8327      	strh	r7, [r4, #24]
 800e4c4:	f88b 3000 	strb.w	r3, [fp]
 800e4c8:	8b61      	ldrh	r1, [r4, #26]
 800e4ca:	68e3      	ldr	r3, [r4, #12]
 800e4cc:	1c4d      	adds	r5, r1, #1
 800e4ce:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800e4d2:	8365      	strh	r5, [r4, #26]
 800e4d4:	edc3 7a00 	vstr	s15, [r3]
 800e4d8:	ee07 2a90 	vmov	s15, r2
 800e4dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e4e0:	8b61      	ldrh	r1, [r4, #26]
 800e4e2:	68e3      	ldr	r3, [r4, #12]
 800e4e4:	1c4d      	adds	r5, r1, #1
 800e4e6:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800e4ea:	8365      	strh	r5, [r4, #26]
 800e4ec:	edc3 7a00 	vstr	s15, [r3]
 800e4f0:	e7cf      	b.n	800e492 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

0800e4f4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 800e4f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e4f8:	b08e      	sub	sp, #56	@ 0x38
 800e4fa:	4604      	mov	r4, r0
 800e4fc:	4688      	mov	r8, r1
 800e4fe:	4615      	mov	r5, r2
 800e500:	4699      	mov	r9, r3
 800e502:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 800e504:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 800e508:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 800e50a:	f7f4 fb87 	bl	8002c1c <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 800e50e:	6060      	str	r0, [r4, #4]
 800e510:	f1b9 0f00 	cmp.w	r9, #0
 800e514:	f000 80e8 	beq.w	800e6e8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 800e518:	2800      	cmp	r0, #0
 800e51a:	f000 80e5 	beq.w	800e6e8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 800e51e:	a805      	add	r0, sp, #20
 800e520:	f000 f8f9 	bl	800e716 <_ZN8touchgfx9Matrix3x3C1Ev>
 800e524:	6833      	ldr	r3, [r6, #0]
 800e526:	4630      	mov	r0, r6
 800e528:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800e52a:	4798      	blx	r3
 800e52c:	a805      	add	r0, sp, #20
 800e52e:	eef0 0a40 	vmov.f32	s1, s0
 800e532:	f000 f8f4 	bl	800e71e <_ZN8touchgfx9Matrix3x35scaleEff>
 800e536:	6860      	ldr	r0, [r4, #4]
 800e538:	f1ba 0f03 	cmp.w	sl, #3
 800e53c:	d83b      	bhi.n	800e5b6 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 800e53e:	e8df f00a 	tbb	[pc, sl]
 800e542:	1002      	.short	0x1002
 800e544:	9f71      	.short	0x9f71
 800e546:	6803      	ldr	r3, [r0, #0]
 800e548:	462a      	mov	r2, r5
 800e54a:	689b      	ldr	r3, [r3, #8]
 800e54c:	4641      	mov	r1, r8
 800e54e:	4798      	blx	r3
 800e550:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 800e554:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800e558:	ee07 7a90 	vmov	s15, r7
 800e55c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800e560:	e026      	b.n	800e5b0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 800e562:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 800e566:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800e56a:	8869      	ldrh	r1, [r5, #2]
 800e56c:	1a9b      	subs	r3, r3, r2
 800e56e:	1a5b      	subs	r3, r3, r1
 800e570:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e574:	882b      	ldrh	r3, [r5, #0]
 800e576:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e57a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e57e:	88ab      	ldrh	r3, [r5, #4]
 800e580:	aa03      	add	r2, sp, #12
 800e582:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e586:	6803      	ldr	r3, [r0, #0]
 800e588:	4641      	mov	r1, r8
 800e58a:	689b      	ldr	r3, [r3, #8]
 800e58c:	4798      	blx	r3
 800e58e:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 800e6f0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 800e592:	a805      	add	r0, sp, #20
 800e594:	f000 f8e8 	bl	800e768 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e598:	ee07 7a90 	vmov	s15, r7
 800e59c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 800e5a0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800e5a2:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800e5a6:	1a9b      	subs	r3, r3, r2
 800e5a8:	ee00 3a10 	vmov	s0, r3
 800e5ac:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800e5b0:	a805      	add	r0, sp, #20
 800e5b2:	f000 f927 	bl	800e804 <_ZN8touchgfx9Matrix3x39translateEff>
 800e5b6:	2500      	movs	r5, #0
 800e5b8:	6860      	ldr	r0, [r4, #4]
 800e5ba:	a905      	add	r1, sp, #20
 800e5bc:	6803      	ldr	r3, [r0, #0]
 800e5be:	f109 0602 	add.w	r6, r9, #2
 800e5c2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e5c4:	4798      	blx	r3
 800e5c6:	6860      	ldr	r0, [r4, #4]
 800e5c8:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800e5ca:	6803      	ldr	r3, [r0, #0]
 800e5cc:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 800e5d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e5d2:	4798      	blx	r3
 800e5d4:	6860      	ldr	r0, [r4, #4]
 800e5d6:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 800e5da:	6803      	ldr	r3, [r0, #0]
 800e5dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e5de:	4798      	blx	r3
 800e5e0:	6860      	ldr	r0, [r4, #4]
 800e5e2:	2101      	movs	r1, #1
 800e5e4:	6803      	ldr	r3, [r0, #0]
 800e5e6:	68db      	ldr	r3, [r3, #12]
 800e5e8:	4798      	blx	r3
 800e5ea:	f8b9 7000 	ldrh.w	r7, [r9]
 800e5ee:	f104 0310 	add.w	r3, r4, #16
 800e5f2:	61a5      	str	r5, [r4, #24]
 800e5f4:	f104 0208 	add.w	r2, r4, #8
 800e5f8:	f104 0114 	add.w	r1, r4, #20
 800e5fc:	f104 000c 	add.w	r0, r4, #12
 800e600:	f7f5 f8d0 	bl	80037a4 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 800e604:	42af      	cmp	r7, r5
 800e606:	dd60      	ble.n	800e6ca <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 800e608:	8831      	ldrh	r1, [r6, #0]
 800e60a:	1cb2      	adds	r2, r6, #2
 800e60c:	f101 030f 	add.w	r3, r1, #15
 800e610:	f3c3 1307 	ubfx	r3, r3, #4, #8
 800e614:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800e618:	4620      	mov	r0, r4
 800e61a:	f7ff fe29 	bl	800e270 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 800e61e:	3501      	adds	r5, #1
 800e620:	4606      	mov	r6, r0
 800e622:	e7ef      	b.n	800e604 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 800e624:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800e628:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800e62c:	8829      	ldrh	r1, [r5, #0]
 800e62e:	1a9b      	subs	r3, r3, r2
 800e630:	1a5b      	subs	r3, r3, r1
 800e632:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e636:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e63a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e63e:	886d      	ldrh	r5, [r5, #2]
 800e640:	1a5b      	subs	r3, r3, r1
 800e642:	1b5b      	subs	r3, r3, r5
 800e644:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e648:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e64c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e650:	6803      	ldr	r3, [r0, #0]
 800e652:	aa03      	add	r2, sp, #12
 800e654:	689b      	ldr	r3, [r3, #8]
 800e656:	4641      	mov	r1, r8
 800e658:	4798      	blx	r3
 800e65a:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 800e6f4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 800e65e:	a805      	add	r0, sp, #20
 800e660:	f000 f882 	bl	800e768 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e664:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800e668:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800e66a:	1a9b      	subs	r3, r3, r2
 800e66c:	ee00 3a90 	vmov	s1, r3
 800e670:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 800e674:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 800e678:	1bdb      	subs	r3, r3, r7
 800e67a:	ee00 3a10 	vmov	s0, r3
 800e67e:	e795      	b.n	800e5ac <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 800e680:	886b      	ldrh	r3, [r5, #2]
 800e682:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800e686:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e68a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e68e:	8829      	ldrh	r1, [r5, #0]
 800e690:	1a9b      	subs	r3, r3, r2
 800e692:	1a5b      	subs	r3, r3, r1
 800e694:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e698:	88eb      	ldrh	r3, [r5, #6]
 800e69a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e69e:	f8ad 3010 	strh.w	r3, [sp, #16]
 800e6a2:	6803      	ldr	r3, [r0, #0]
 800e6a4:	aa03      	add	r2, sp, #12
 800e6a6:	689b      	ldr	r3, [r3, #8]
 800e6a8:	4641      	mov	r1, r8
 800e6aa:	4798      	blx	r3
 800e6ac:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 800e6f8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 800e6b0:	a805      	add	r0, sp, #20
 800e6b2:	f000 f859 	bl	800e768 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e6b6:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800e6ba:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 800e6be:	1bdb      	subs	r3, r3, r7
 800e6c0:	ee00 3a90 	vmov	s1, r3
 800e6c4:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 800e6c8:	e748      	b.n	800e55c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 800e6ca:	2100      	movs	r1, #0
 800e6cc:	6860      	ldr	r0, [r4, #4]
 800e6ce:	8b22      	ldrh	r2, [r4, #24]
 800e6d0:	6803      	ldr	r3, [r0, #0]
 800e6d2:	9101      	str	r1, [sp, #4]
 800e6d4:	8b61      	ldrh	r1, [r4, #26]
 800e6d6:	9100      	str	r1, [sp, #0]
 800e6d8:	6a1d      	ldr	r5, [r3, #32]
 800e6da:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 800e6de:	47a8      	blx	r5
 800e6e0:	6860      	ldr	r0, [r4, #4]
 800e6e2:	6803      	ldr	r3, [r0, #0]
 800e6e4:	69db      	ldr	r3, [r3, #28]
 800e6e6:	4798      	blx	r3
 800e6e8:	b00e      	add	sp, #56	@ 0x38
 800e6ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e6ee:	bf00      	nop
 800e6f0:	42b40000 	.word	0x42b40000
 800e6f4:	43340000 	.word	0x43340000
 800e6f8:	43870000 	.word	0x43870000

0800e6fc <_ZN8touchgfx9Matrix3x35resetEv>:
 800e6fc:	2300      	movs	r3, #0
 800e6fe:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800e702:	6043      	str	r3, [r0, #4]
 800e704:	6002      	str	r2, [r0, #0]
 800e706:	6083      	str	r3, [r0, #8]
 800e708:	60c3      	str	r3, [r0, #12]
 800e70a:	6102      	str	r2, [r0, #16]
 800e70c:	6143      	str	r3, [r0, #20]
 800e70e:	6183      	str	r3, [r0, #24]
 800e710:	61c3      	str	r3, [r0, #28]
 800e712:	6202      	str	r2, [r0, #32]
 800e714:	4770      	bx	lr

0800e716 <_ZN8touchgfx9Matrix3x3C1Ev>:
 800e716:	b508      	push	{r3, lr}
 800e718:	f7ff fff0 	bl	800e6fc <_ZN8touchgfx9Matrix3x35resetEv>
 800e71c:	bd08      	pop	{r3, pc}

0800e71e <_ZN8touchgfx9Matrix3x35scaleEff>:
 800e71e:	edd0 7a00 	vldr	s15, [r0]
 800e722:	ee67 7a80 	vmul.f32	s15, s15, s0
 800e726:	edc0 7a00 	vstr	s15, [r0]
 800e72a:	edd0 7a01 	vldr	s15, [r0, #4]
 800e72e:	ee67 7a80 	vmul.f32	s15, s15, s0
 800e732:	edc0 7a01 	vstr	s15, [r0, #4]
 800e736:	edd0 7a02 	vldr	s15, [r0, #8]
 800e73a:	ee27 0a80 	vmul.f32	s0, s15, s0
 800e73e:	edd0 7a03 	vldr	s15, [r0, #12]
 800e742:	ee67 7aa0 	vmul.f32	s15, s15, s1
 800e746:	edc0 7a03 	vstr	s15, [r0, #12]
 800e74a:	edd0 7a04 	vldr	s15, [r0, #16]
 800e74e:	ee67 7aa0 	vmul.f32	s15, s15, s1
 800e752:	edc0 7a04 	vstr	s15, [r0, #16]
 800e756:	edd0 7a05 	vldr	s15, [r0, #20]
 800e75a:	ee67 0aa0 	vmul.f32	s1, s15, s1
 800e75e:	ed80 0a02 	vstr	s0, [r0, #8]
 800e762:	edc0 0a05 	vstr	s1, [r0, #20]
 800e766:	4770      	bx	lr

0800e768 <_ZN8touchgfx9Matrix3x36rotateEf>:
 800e768:	eddf 7a24 	vldr	s15, [pc, #144]	@ 800e7fc <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 800e76c:	ee20 0a27 	vmul.f32	s0, s0, s15
 800e770:	eddf 7a23 	vldr	s15, [pc, #140]	@ 800e800 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 800e774:	b510      	push	{r4, lr}
 800e776:	ed2d 8b02 	vpush	{d8}
 800e77a:	eec0 8a27 	vdiv.f32	s17, s0, s15
 800e77e:	eeb0 0a68 	vmov.f32	s0, s17
 800e782:	4604      	mov	r4, r0
 800e784:	f022 fe0e 	bl	80313a4 <cosf>
 800e788:	eeb0 8a40 	vmov.f32	s16, s0
 800e78c:	eeb0 0a68 	vmov.f32	s0, s17
 800e790:	f022 fe54 	bl	803143c <sinf>
 800e794:	edd4 6a03 	vldr	s13, [r4, #12]
 800e798:	edd4 4a00 	vldr	s9, [r4]
 800e79c:	ee60 7a66 	vnmul.f32	s15, s0, s13
 800e7a0:	ed94 7a04 	vldr	s14, [r4, #16]
 800e7a4:	eee8 7a24 	vfma.f32	s15, s16, s9
 800e7a8:	ed94 5a01 	vldr	s10, [r4, #4]
 800e7ac:	edc4 7a00 	vstr	s15, [r4]
 800e7b0:	ee60 7a47 	vnmul.f32	s15, s0, s14
 800e7b4:	eee8 7a05 	vfma.f32	s15, s16, s10
 800e7b8:	edc4 7a01 	vstr	s15, [r4, #4]
 800e7bc:	edd4 7a05 	vldr	s15, [r4, #20]
 800e7c0:	edd4 5a02 	vldr	s11, [r4, #8]
 800e7c4:	ee20 6a67 	vnmul.f32	s12, s0, s15
 800e7c8:	ee66 6a88 	vmul.f32	s13, s13, s16
 800e7cc:	ee27 7a08 	vmul.f32	s14, s14, s16
 800e7d0:	ee67 7a88 	vmul.f32	s15, s15, s16
 800e7d4:	eea8 6a25 	vfma.f32	s12, s16, s11
 800e7d8:	ecbd 8b02 	vpop	{d8}
 800e7dc:	eee0 6a24 	vfma.f32	s13, s0, s9
 800e7e0:	eea0 7a05 	vfma.f32	s14, s0, s10
 800e7e4:	eee0 7a25 	vfma.f32	s15, s0, s11
 800e7e8:	ed84 6a02 	vstr	s12, [r4, #8]
 800e7ec:	edc4 6a03 	vstr	s13, [r4, #12]
 800e7f0:	ed84 7a04 	vstr	s14, [r4, #16]
 800e7f4:	edc4 7a05 	vstr	s15, [r4, #20]
 800e7f8:	bd10      	pop	{r4, pc}
 800e7fa:	bf00      	nop
 800e7fc:	40490fdb 	.word	0x40490fdb
 800e800:	43340000 	.word	0x43340000

0800e804 <_ZN8touchgfx9Matrix3x39translateEff>:
 800e804:	ed90 6a06 	vldr	s12, [r0, #24]
 800e808:	edd0 7a00 	vldr	s15, [r0]
 800e80c:	eee6 7a00 	vfma.f32	s15, s12, s0
 800e810:	edd0 6a07 	vldr	s13, [r0, #28]
 800e814:	edc0 7a00 	vstr	s15, [r0]
 800e818:	edd0 7a01 	vldr	s15, [r0, #4]
 800e81c:	eee6 7a80 	vfma.f32	s15, s13, s0
 800e820:	ed90 7a08 	vldr	s14, [r0, #32]
 800e824:	edc0 7a01 	vstr	s15, [r0, #4]
 800e828:	edd0 7a02 	vldr	s15, [r0, #8]
 800e82c:	eee7 7a00 	vfma.f32	s15, s14, s0
 800e830:	edc0 7a02 	vstr	s15, [r0, #8]
 800e834:	edd0 7a03 	vldr	s15, [r0, #12]
 800e838:	eee6 7a20 	vfma.f32	s15, s12, s1
 800e83c:	edc0 7a03 	vstr	s15, [r0, #12]
 800e840:	edd0 7a04 	vldr	s15, [r0, #16]
 800e844:	eee6 7aa0 	vfma.f32	s15, s13, s1
 800e848:	edc0 7a04 	vstr	s15, [r0, #16]
 800e84c:	edd0 7a05 	vldr	s15, [r0, #20]
 800e850:	eee7 7a20 	vfma.f32	s15, s14, s1
 800e854:	edc0 7a05 	vstr	s15, [r0, #20]
 800e858:	4770      	bx	lr

0800e85a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>:
 800e85a:	ed91 0a01 	vldr	s0, [r1, #4]
 800e85e:	edd0 6a01 	vldr	s13, [r0, #4]
 800e862:	edd0 0a04 	vldr	s1, [r0, #16]
 800e866:	edd1 7a00 	vldr	s15, [r1]
 800e86a:	ed90 7a03 	vldr	s14, [r0, #12]
 800e86e:	ee60 0a20 	vmul.f32	s1, s0, s1
 800e872:	ee20 0a26 	vmul.f32	s0, s0, s13
 800e876:	edd0 6a00 	vldr	s13, [r0]
 800e87a:	eee7 0a27 	vfma.f32	s1, s14, s15
 800e87e:	eea6 0aa7 	vfma.f32	s0, s13, s15
 800e882:	ed90 7a05 	vldr	s14, [r0, #20]
 800e886:	edd0 7a02 	vldr	s15, [r0, #8]
 800e88a:	ee70 0a87 	vadd.f32	s1, s1, s14
 800e88e:	ee30 0a27 	vadd.f32	s0, s0, s15
 800e892:	b084      	sub	sp, #16
 800e894:	b004      	add	sp, #16
 800e896:	4770      	bx	lr

0800e898 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800e898:	b530      	push	{r4, r5, lr}
 800e89a:	8083      	strh	r3, [r0, #4]
 800e89c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800e8a0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800e8a4:	80c3      	strh	r3, [r0, #6]
 800e8a6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800e8aa:	6141      	str	r1, [r0, #20]
 800e8ac:	7203      	strb	r3, [r0, #8]
 800e8ae:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e8b2:	8302      	strh	r2, [r0, #24]
 800e8b4:	7243      	strb	r3, [r0, #9]
 800e8b6:	7a83      	ldrb	r3, [r0, #10]
 800e8b8:	f365 0306 	bfi	r3, r5, #0, #7
 800e8bc:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800e8c0:	f365 13c7 	bfi	r3, r5, #7, #1
 800e8c4:	7283      	strb	r3, [r0, #10]
 800e8c6:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800e8ca:	72c3      	strb	r3, [r0, #11]
 800e8cc:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 800e8d0:	7303      	strb	r3, [r0, #12]
 800e8d2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 800e8d6:	81c3      	strh	r3, [r0, #14]
 800e8d8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800e8dc:	8203      	strh	r3, [r0, #16]
 800e8de:	4b01      	ldr	r3, [pc, #4]	@ (800e8e4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800e8e0:	6003      	str	r3, [r0, #0]
 800e8e2:	bd30      	pop	{r4, r5, pc}
 800e8e4:	08035b3c 	.word	0x08035b3c

0800e8e8 <_ZNK8touchgfx9ConstFont4findEt>:
 800e8e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e8ea:	6944      	ldr	r4, [r0, #20]
 800e8ec:	b3bc      	cbz	r4, 800e95e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e8ee:	88a3      	ldrh	r3, [r4, #4]
 800e8f0:	8b02      	ldrh	r2, [r0, #24]
 800e8f2:	1acb      	subs	r3, r1, r3
 800e8f4:	f102 32ff 	add.w	r2, r2, #4294967295
 800e8f8:	d431      	bmi.n	800e95e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e8fa:	4293      	cmp	r3, r2
 800e8fc:	dd0c      	ble.n	800e918 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800e8fe:	230e      	movs	r3, #14
 800e900:	fb03 4302 	mla	r3, r3, r2, r4
 800e904:	889b      	ldrh	r3, [r3, #4]
 800e906:	1a5b      	subs	r3, r3, r1
 800e908:	1ad3      	subs	r3, r2, r3
 800e90a:	429a      	cmp	r2, r3
 800e90c:	db27      	blt.n	800e95e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e90e:	2b00      	cmp	r3, #0
 800e910:	bfbc      	itt	lt
 800e912:	2302      	movlt	r3, #2
 800e914:	fb92 f3f3 	sdivlt	r3, r2, r3
 800e918:	2500      	movs	r5, #0
 800e91a:	260e      	movs	r6, #14
 800e91c:	4295      	cmp	r5, r2
 800e91e:	dc1e      	bgt.n	800e95e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e920:	fb06 4003 	mla	r0, r6, r3, r4
 800e924:	8887      	ldrh	r7, [r0, #4]
 800e926:	42b9      	cmp	r1, r7
 800e928:	d01a      	beq.n	800e960 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800e92a:	d20d      	bcs.n	800e948 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800e92c:	1e5a      	subs	r2, r3, #1
 800e92e:	4295      	cmp	r5, r2
 800e930:	dc15      	bgt.n	800e95e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e932:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800e936:	1a5b      	subs	r3, r3, r1
 800e938:	1ad3      	subs	r3, r2, r3
 800e93a:	429a      	cmp	r2, r3
 800e93c:	db0f      	blt.n	800e95e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e93e:	429d      	cmp	r5, r3
 800e940:	ddec      	ble.n	800e91c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e942:	1953      	adds	r3, r2, r5
 800e944:	105b      	asrs	r3, r3, #1
 800e946:	e7e9      	b.n	800e91c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e948:	1c5d      	adds	r5, r3, #1
 800e94a:	42aa      	cmp	r2, r5
 800e94c:	db07      	blt.n	800e95e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e94e:	8a43      	ldrh	r3, [r0, #18]
 800e950:	1acb      	subs	r3, r1, r3
 800e952:	442b      	add	r3, r5
 800e954:	429d      	cmp	r5, r3
 800e956:	dc02      	bgt.n	800e95e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e958:	429a      	cmp	r2, r3
 800e95a:	dadf      	bge.n	800e91c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e95c:	e7f1      	b.n	800e942 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800e95e:	2000      	movs	r0, #0
 800e960:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e962 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800e962:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e964:	4604      	mov	r4, r0
 800e966:	4617      	mov	r7, r2
 800e968:	461e      	mov	r6, r3
 800e96a:	b911      	cbnz	r1, 800e972 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800e96c:	2500      	movs	r5, #0
 800e96e:	4628      	mov	r0, r5
 800e970:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e972:	290a      	cmp	r1, #10
 800e974:	d0fa      	beq.n	800e96c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e976:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800e97a:	4291      	cmp	r1, r2
 800e97c:	d0f6      	beq.n	800e96c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e97e:	f242 020b 	movw	r2, #8203	@ 0x200b
 800e982:	4291      	cmp	r1, r2
 800e984:	d0f2      	beq.n	800e96c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e986:	f7ff ffaf 	bl	800e8e8 <_ZNK8touchgfx9ConstFont4findEt>
 800e98a:	4605      	mov	r5, r0
 800e98c:	b950      	cbnz	r0, 800e9a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800e98e:	6823      	ldr	r3, [r4, #0]
 800e990:	4620      	mov	r0, r4
 800e992:	691b      	ldr	r3, [r3, #16]
 800e994:	4798      	blx	r3
 800e996:	4601      	mov	r1, r0
 800e998:	4620      	mov	r0, r4
 800e99a:	f7ff ffa5 	bl	800e8e8 <_ZNK8touchgfx9ConstFont4findEt>
 800e99e:	4605      	mov	r5, r0
 800e9a0:	2800      	cmp	r0, #0
 800e9a2:	d0e3      	beq.n	800e96c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e9a4:	6823      	ldr	r3, [r4, #0]
 800e9a6:	4629      	mov	r1, r5
 800e9a8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800e9aa:	4620      	mov	r0, r4
 800e9ac:	4798      	blx	r3
 800e9ae:	6038      	str	r0, [r7, #0]
 800e9b0:	6823      	ldr	r3, [r4, #0]
 800e9b2:	4620      	mov	r0, r4
 800e9b4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e9b6:	4798      	blx	r3
 800e9b8:	7030      	strb	r0, [r6, #0]
 800e9ba:	e7d8      	b.n	800e96e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800e9bc <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800e9bc:	2000      	movs	r0, #0
 800e9be:	4770      	bx	lr

0800e9c0 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800e9c0:	2001      	movs	r0, #1
 800e9c2:	4770      	bx	lr

0800e9c4 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800e9c4:	2002      	movs	r0, #2
 800e9c6:	4770      	bx	lr

0800e9c8 <_ZN8touchgfx6ScreenD1Ev>:
 800e9c8:	4770      	bx	lr

0800e9ca <_ZN8touchgfx12GestureEventD1Ev>:
 800e9ca:	4770      	bx	lr

0800e9cc <_ZN8touchgfx9DragEventD1Ev>:
 800e9cc:	4770      	bx	lr

0800e9ce <_ZN8touchgfx10ClickEventD1Ev>:
 800e9ce:	4770      	bx	lr

0800e9d0 <_ZN8touchgfx10ClickEventD0Ev>:
 800e9d0:	b510      	push	{r4, lr}
 800e9d2:	4604      	mov	r4, r0
 800e9d4:	210c      	movs	r1, #12
 800e9d6:	f022 fb7e 	bl	80310d6 <_ZdlPvj>
 800e9da:	4620      	mov	r0, r4
 800e9dc:	bd10      	pop	{r4, pc}

0800e9de <_ZN8touchgfx9DragEventD0Ev>:
 800e9de:	b510      	push	{r4, lr}
 800e9e0:	4604      	mov	r4, r0
 800e9e2:	2110      	movs	r1, #16
 800e9e4:	f022 fb77 	bl	80310d6 <_ZdlPvj>
 800e9e8:	4620      	mov	r0, r4
 800e9ea:	bd10      	pop	{r4, pc}

0800e9ec <_ZN8touchgfx12GestureEventD0Ev>:
 800e9ec:	b510      	push	{r4, lr}
 800e9ee:	4604      	mov	r4, r0
 800e9f0:	210c      	movs	r1, #12
 800e9f2:	f022 fb70 	bl	80310d6 <_ZdlPvj>
 800e9f6:	4620      	mov	r0, r4
 800e9f8:	bd10      	pop	{r4, pc}

0800e9fa <_ZN8touchgfx6ScreenD0Ev>:
 800e9fa:	b510      	push	{r4, lr}
 800e9fc:	4604      	mov	r4, r0
 800e9fe:	213c      	movs	r1, #60	@ 0x3c
 800ea00:	f022 fb69 	bl	80310d6 <_ZdlPvj>
 800ea04:	4620      	mov	r0, r4
 800ea06:	bd10      	pop	{r4, pc}

0800ea08 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800ea08:	b530      	push	{r4, r5, lr}
 800ea0a:	460d      	mov	r5, r1
 800ea0c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800ea0e:	b087      	sub	sp, #28
 800ea10:	4604      	mov	r4, r0
 800ea12:	b301      	cbz	r1, 800ea56 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800ea14:	a801      	add	r0, sp, #4
 800ea16:	f7ff fc05 	bl	800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ea1a:	892a      	ldrh	r2, [r5, #8]
 800ea1c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ea20:	7928      	ldrb	r0, [r5, #4]
 800ea22:	1ad2      	subs	r2, r2, r3
 800ea24:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800ea26:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800ea2a:	441a      	add	r2, r3
 800ea2c:	896b      	ldrh	r3, [r5, #10]
 800ea2e:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800ea32:	f88d 0010 	strb.w	r0, [sp, #16]
 800ea36:	1b5b      	subs	r3, r3, r5
 800ea38:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 800ea3a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800ea3c:	442b      	add	r3, r5
 800ea3e:	4d07      	ldr	r5, [pc, #28]	@ (800ea5c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800ea40:	f8ad 1012 	strh.w	r1, [sp, #18]
 800ea44:	9503      	str	r5, [sp, #12]
 800ea46:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ea4a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ea4e:	6803      	ldr	r3, [r0, #0]
 800ea50:	a903      	add	r1, sp, #12
 800ea52:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ea54:	4798      	blx	r3
 800ea56:	b007      	add	sp, #28
 800ea58:	bd30      	pop	{r4, r5, pc}
 800ea5a:	bf00      	nop
 800ea5c:	08035bcc 	.word	0x08035bcc

0800ea60 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800ea60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea64:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800ea66:	b08a      	sub	sp, #40	@ 0x28
 800ea68:	4604      	mov	r4, r0
 800ea6a:	460d      	mov	r5, r1
 800ea6c:	b113      	cbz	r3, 800ea74 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800ea6e:	790b      	ldrb	r3, [r1, #4]
 800ea70:	2b00      	cmp	r3, #0
 800ea72:	d044      	beq.n	800eafe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800ea74:	f104 0804 	add.w	r8, r4, #4
 800ea78:	4641      	mov	r1, r8
 800ea7a:	a803      	add	r0, sp, #12
 800ea7c:	f7ff fbd2 	bl	800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ea80:	792b      	ldrb	r3, [r5, #4]
 800ea82:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800ea86:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800ea8a:	b983      	cbnz	r3, 800eaae <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800ea8c:	892a      	ldrh	r2, [r5, #8]
 800ea8e:	88e9      	ldrh	r1, [r5, #6]
 800ea90:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 800ea94:	1b92      	subs	r2, r2, r6
 800ea96:	1bc9      	subs	r1, r1, r7
 800ea98:	9301      	str	r3, [sp, #4]
 800ea9a:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 800ea9e:	9300      	str	r3, [sp, #0]
 800eaa0:	b212      	sxth	r2, r2
 800eaa2:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 800eaa6:	b209      	sxth	r1, r1
 800eaa8:	4640      	mov	r0, r8
 800eaaa:	f7fb ffc9 	bl	800aa40 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800eaae:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800eab0:	b329      	cbz	r1, 800eafe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800eab2:	a805      	add	r0, sp, #20
 800eab4:	f7ff fbb6 	bl	800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eab8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800eabc:	792b      	ldrb	r3, [r5, #4]
 800eabe:	1abf      	subs	r7, r7, r2
 800eac0:	88ea      	ldrh	r2, [r5, #6]
 800eac2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800eac4:	4417      	add	r7, r2
 800eac6:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 800eac8:	f88d 3020 	strb.w	r3, [sp, #32]
 800eacc:	4417      	add	r7, r2
 800eace:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800ead2:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800ead6:	1ab6      	subs	r6, r6, r2
 800ead8:	892a      	ldrh	r2, [r5, #8]
 800eada:	a907      	add	r1, sp, #28
 800eadc:	4416      	add	r6, r2
 800eade:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800eae0:	4416      	add	r6, r2
 800eae2:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800eae6:	2600      	movs	r6, #0
 800eae8:	4a06      	ldr	r2, [pc, #24]	@ (800eb04 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800eaea:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 800eaee:	9207      	str	r2, [sp, #28]
 800eaf0:	6803      	ldr	r3, [r0, #0]
 800eaf2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800eaf4:	4798      	blx	r3
 800eaf6:	792b      	ldrb	r3, [r5, #4]
 800eaf8:	b10b      	cbz	r3, 800eafe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800eafa:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800eafe:	b00a      	add	sp, #40	@ 0x28
 800eb00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eb04:	08035ba4 	.word	0x08035ba4

0800eb08 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800eb08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb0c:	460c      	mov	r4, r1
 800eb0e:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800eb10:	b088      	sub	sp, #32
 800eb12:	4605      	mov	r5, r0
 800eb14:	2900      	cmp	r1, #0
 800eb16:	d06d      	beq.n	800ebf4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800eb18:	4668      	mov	r0, sp
 800eb1a:	f7ff fb83 	bl	800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eb1e:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 800eb20:	88e3      	ldrh	r3, [r4, #6]
 800eb22:	f9bd 8000 	ldrsh.w	r8, [sp]
 800eb26:	440b      	add	r3, r1
 800eb28:	b21b      	sxth	r3, r3
 800eb2a:	4543      	cmp	r3, r8
 800eb2c:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800eb30:	db31      	blt.n	800eb96 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800eb32:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800eb36:	44c4      	add	ip, r8
 800eb38:	fa0f fc8c 	sxth.w	ip, ip
 800eb3c:	4563      	cmp	r3, ip
 800eb3e:	da2a      	bge.n	800eb96 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800eb40:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 800eb42:	8926      	ldrh	r6, [r4, #8]
 800eb44:	4416      	add	r6, r2
 800eb46:	b236      	sxth	r6, r6
 800eb48:	42be      	cmp	r6, r7
 800eb4a:	db24      	blt.n	800eb96 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800eb4c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800eb50:	4438      	add	r0, r7
 800eb52:	b200      	sxth	r0, r0
 800eb54:	4286      	cmp	r6, r0
 800eb56:	da1e      	bge.n	800eb96 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800eb58:	8963      	ldrh	r3, [r4, #10]
 800eb5a:	4419      	add	r1, r3
 800eb5c:	b209      	sxth	r1, r1
 800eb5e:	4541      	cmp	r1, r8
 800eb60:	db08      	blt.n	800eb74 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800eb62:	4561      	cmp	r1, ip
 800eb64:	da06      	bge.n	800eb74 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800eb66:	89a3      	ldrh	r3, [r4, #12]
 800eb68:	441a      	add	r2, r3
 800eb6a:	b212      	sxth	r2, r2
 800eb6c:	42ba      	cmp	r2, r7
 800eb6e:	db01      	blt.n	800eb74 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800eb70:	4282      	cmp	r2, r0
 800eb72:	db10      	blt.n	800eb96 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800eb74:	4b21      	ldr	r3, [pc, #132]	@ (800ebfc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800eb76:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800eb78:	9304      	str	r3, [sp, #16]
 800eb7a:	2302      	movs	r3, #2
 800eb7c:	f88d 3014 	strb.w	r3, [sp, #20]
 800eb80:	2300      	movs	r3, #0
 800eb82:	f8ad 3016 	strh.w	r3, [sp, #22]
 800eb86:	f8ad 3018 	strh.w	r3, [sp, #24]
 800eb8a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800eb8e:	6803      	ldr	r3, [r0, #0]
 800eb90:	a904      	add	r1, sp, #16
 800eb92:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800eb94:	4798      	blx	r3
 800eb96:	1d29      	adds	r1, r5, #4
 800eb98:	a802      	add	r0, sp, #8
 800eb9a:	f7ff fb43 	bl	800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eb9e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800eba2:	88e0      	ldrh	r0, [r4, #6]
 800eba4:	eba3 0808 	sub.w	r8, r3, r8
 800eba8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800ebac:	7921      	ldrb	r1, [r4, #4]
 800ebae:	1bdf      	subs	r7, r3, r7
 800ebb0:	b2bb      	uxth	r3, r7
 800ebb2:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 800ebb6:	fa1f f888 	uxth.w	r8, r8
 800ebba:	8922      	ldrh	r2, [r4, #8]
 800ebbc:	8967      	ldrh	r7, [r4, #10]
 800ebbe:	89a4      	ldrh	r4, [r4, #12]
 800ebc0:	4440      	add	r0, r8
 800ebc2:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 800ebc4:	4460      	add	r0, ip
 800ebc6:	441a      	add	r2, r3
 800ebc8:	44b8      	add	r8, r7
 800ebca:	4423      	add	r3, r4
 800ebcc:	4c0c      	ldr	r4, [pc, #48]	@ (800ec00 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800ebce:	f8ad 0016 	strh.w	r0, [sp, #22]
 800ebd2:	4433      	add	r3, r6
 800ebd4:	4432      	add	r2, r6
 800ebd6:	44e0      	add	r8, ip
 800ebd8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800ebda:	f88d 1014 	strb.w	r1, [sp, #20]
 800ebde:	9404      	str	r4, [sp, #16]
 800ebe0:	f8ad 2018 	strh.w	r2, [sp, #24]
 800ebe4:	f8ad 801a 	strh.w	r8, [sp, #26]
 800ebe8:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ebec:	6803      	ldr	r3, [r0, #0]
 800ebee:	a904      	add	r1, sp, #16
 800ebf0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ebf2:	4798      	blx	r3
 800ebf4:	b008      	add	sp, #32
 800ebf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ebfa:	bf00      	nop
 800ebfc:	08035ba4 	.word	0x08035ba4
 800ec00:	08035bb8 	.word	0x08035bb8

0800ec04 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800ec04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ec06:	4604      	mov	r4, r0
 800ec08:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800ec0c:	3201      	adds	r2, #1
 800ec0e:	d112      	bne.n	800ec36 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800ec10:	2500      	movs	r5, #0
 800ec12:	9500      	str	r5, [sp, #0]
 800ec14:	466d      	mov	r5, sp
 800ec16:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ec1a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ec1e:	6803      	ldr	r3, [r0, #0]
 800ec20:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ec24:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ec28:	4629      	mov	r1, r5
 800ec2a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ec2c:	4798      	blx	r3
 800ec2e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ec32:	e884 0003 	stmia.w	r4, {r0, r1}
 800ec36:	4620      	mov	r0, r4
 800ec38:	b003      	add	sp, #12
 800ec3a:	bd30      	pop	{r4, r5, pc}

0800ec3c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800ec3c:	b513      	push	{r0, r1, r4, lr}
 800ec3e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800ec42:	4604      	mov	r4, r0
 800ec44:	3301      	adds	r3, #1
 800ec46:	d109      	bne.n	800ec5c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800ec48:	4601      	mov	r1, r0
 800ec4a:	4668      	mov	r0, sp
 800ec4c:	f7ff faea 	bl	800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ec50:	f8bd 3000 	ldrh.w	r3, [sp]
 800ec54:	8423      	strh	r3, [r4, #32]
 800ec56:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ec5a:	8463      	strh	r3, [r4, #34]	@ 0x22
 800ec5c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800ec60:	b002      	add	sp, #8
 800ec62:	bd10      	pop	{r4, pc}

0800ec64 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800ec64:	b513      	push	{r0, r1, r4, lr}
 800ec66:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 800ec6a:	4604      	mov	r4, r0
 800ec6c:	3301      	adds	r3, #1
 800ec6e:	d109      	bne.n	800ec84 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800ec70:	4601      	mov	r1, r0
 800ec72:	4668      	mov	r0, sp
 800ec74:	f7ff fad6 	bl	800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ec78:	f8bd 3000 	ldrh.w	r3, [sp]
 800ec7c:	8423      	strh	r3, [r4, #32]
 800ec7e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ec82:	8463      	strh	r3, [r4, #34]	@ 0x22
 800ec84:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 800ec88:	b002      	add	sp, #8
 800ec8a:	bd10      	pop	{r4, pc}

0800ec8c <_ZN8touchgfx6ScreenC1Ev>:
 800ec8c:	b570      	push	{r4, r5, r6, lr}
 800ec8e:	4605      	mov	r5, r0
 800ec90:	4b16      	ldr	r3, [pc, #88]	@ (800ecec <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800ec92:	2101      	movs	r1, #1
 800ec94:	f845 3b04 	str.w	r3, [r5], #4
 800ec98:	2300      	movs	r3, #0
 800ec9a:	4604      	mov	r4, r0
 800ec9c:	8103      	strh	r3, [r0, #8]
 800ec9e:	8143      	strh	r3, [r0, #10]
 800eca0:	8183      	strh	r3, [r0, #12]
 800eca2:	81c3      	strh	r3, [r0, #14]
 800eca4:	8203      	strh	r3, [r0, #16]
 800eca6:	8243      	strh	r3, [r0, #18]
 800eca8:	8283      	strh	r3, [r0, #20]
 800ecaa:	82c3      	strh	r3, [r0, #22]
 800ecac:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800ecb0:	6203      	str	r3, [r0, #32]
 800ecb2:	8483      	strh	r3, [r0, #36]	@ 0x24
 800ecb4:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800ecb6:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 800ecba:	4a0d      	ldr	r2, [pc, #52]	@ (800ecf0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800ecbc:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 800ecc0:	6343      	str	r3, [r0, #52]	@ 0x34
 800ecc2:	4b0c      	ldr	r3, [pc, #48]	@ (800ecf4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800ecc4:	6042      	str	r2, [r0, #4]
 800ecc6:	f9b3 6000 	ldrsh.w	r6, [r3]
 800ecca:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800eccc:	4a0a      	ldr	r2, [pc, #40]	@ (800ecf8 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800ecce:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800ecd2:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 800ecd6:	f9b2 1000 	ldrsh.w	r1, [r2]
 800ecda:	4628      	mov	r0, r5
 800ecdc:	4798      	blx	r3
 800ecde:	6863      	ldr	r3, [r4, #4]
 800ece0:	4628      	mov	r0, r5
 800ece2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ece4:	4631      	mov	r1, r6
 800ece6:	4798      	blx	r3
 800ece8:	4620      	mov	r0, r4
 800ecea:	bd70      	pop	{r4, r5, r6, pc}
 800ecec:	08035be0 	.word	0x08035be0
 800ecf0:	080358c8 	.word	0x080358c8
 800ecf4:	20082eba 	.word	0x20082eba
 800ecf8:	20082eb8 	.word	0x20082eb8

0800ecfc <_ZN8touchgfx6Screen4drawEv>:
 800ecfc:	b507      	push	{r0, r1, r2, lr}
 800ecfe:	2100      	movs	r1, #0
 800ed00:	4b08      	ldr	r3, [pc, #32]	@ (800ed24 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800ed02:	9100      	str	r1, [sp, #0]
 800ed04:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ed08:	4b07      	ldr	r3, [pc, #28]	@ (800ed28 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800ed0a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ed0e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ed12:	4669      	mov	r1, sp
 800ed14:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ed18:	6803      	ldr	r3, [r0, #0]
 800ed1a:	689b      	ldr	r3, [r3, #8]
 800ed1c:	4798      	blx	r3
 800ed1e:	b003      	add	sp, #12
 800ed20:	f85d fb04 	ldr.w	pc, [sp], #4
 800ed24:	20082eb8 	.word	0x20082eb8
 800ed28:	20082eba 	.word	0x20082eba

0800ed2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800ed2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed30:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800ed34:	b089      	sub	sp, #36	@ 0x24
 800ed36:	2b00      	cmp	r3, #0
 800ed38:	4680      	mov	r8, r0
 800ed3a:	460c      	mov	r4, r1
 800ed3c:	4615      	mov	r5, r2
 800ed3e:	dd0e      	ble.n	800ed5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ed40:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800ed44:	2b00      	cmp	r3, #0
 800ed46:	dd0a      	ble.n	800ed5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ed48:	4628      	mov	r0, r5
 800ed4a:	f7ff ff5b 	bl	800ec04 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800ed4e:	4621      	mov	r1, r4
 800ed50:	f7fe f877 	bl	800ce42 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ed54:	69eb      	ldr	r3, [r5, #28]
 800ed56:	b928      	cbnz	r0, 800ed64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800ed58:	461d      	mov	r5, r3
 800ed5a:	2b00      	cmp	r3, #0
 800ed5c:	d1f4      	bne.n	800ed48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800ed5e:	b009      	add	sp, #36	@ 0x24
 800ed60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed64:	ae04      	add	r6, sp, #16
 800ed66:	2b00      	cmp	r3, #0
 800ed68:	f000 80b5 	beq.w	800eed6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800ed6c:	682b      	ldr	r3, [r5, #0]
 800ed6e:	4629      	mov	r1, r5
 800ed70:	68db      	ldr	r3, [r3, #12]
 800ed72:	a802      	add	r0, sp, #8
 800ed74:	4798      	blx	r3
 800ed76:	4628      	mov	r0, r5
 800ed78:	f7ff ff60 	bl	800ec3c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800ed7c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800ed80:	4407      	add	r7, r0
 800ed82:	4628      	mov	r0, r5
 800ed84:	f7ff ff6e 	bl	800ec64 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800ed88:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800ed8c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800ed90:	4418      	add	r0, r3
 800ed92:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ed96:	4621      	mov	r1, r4
 800ed98:	f8ad 0012 	strh.w	r0, [sp, #18]
 800ed9c:	b23f      	sxth	r7, r7
 800ed9e:	4630      	mov	r0, r6
 800eda0:	f8ad 2014 	strh.w	r2, [sp, #20]
 800eda4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800eda8:	f8ad 7010 	strh.w	r7, [sp, #16]
 800edac:	f7fb ff28 	bl	800ac00 <_ZN8touchgfx4RectaNERKS0_>
 800edb0:	4628      	mov	r0, r5
 800edb2:	f7ff ff27 	bl	800ec04 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800edb6:	4602      	mov	r2, r0
 800edb8:	e896 0003 	ldmia.w	r6, {r0, r1}
 800edbc:	ab06      	add	r3, sp, #24
 800edbe:	e883 0003 	stmia.w	r3, {r0, r1}
 800edc2:	4611      	mov	r1, r2
 800edc4:	4618      	mov	r0, r3
 800edc6:	f7fb ff1b 	bl	800ac00 <_ZN8touchgfx4RectaNERKS0_>
 800edca:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800edce:	f9b4 1000 	ldrsh.w	r1, [r4]
 800edd2:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800edd6:	4299      	cmp	r1, r3
 800edd8:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800eddc:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800ede0:	d10b      	bne.n	800edfa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800ede2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800ede6:	4552      	cmp	r2, sl
 800ede8:	d107      	bne.n	800edfa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800edea:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800edee:	455a      	cmp	r2, fp
 800edf0:	d103      	bne.n	800edfa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800edf2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800edf6:	454a      	cmp	r2, r9
 800edf8:	d06d      	beq.n	800eed6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800edfa:	f1bb 0f00 	cmp.w	fp, #0
 800edfe:	dd65      	ble.n	800eecc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800ee00:	f1b9 0f00 	cmp.w	r9, #0
 800ee04:	dd62      	ble.n	800eecc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800ee06:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800ee0a:	fa1f f08a 	uxth.w	r0, sl
 800ee0e:	4552      	cmp	r2, sl
 800ee10:	9000      	str	r0, [sp, #0]
 800ee12:	da12      	bge.n	800ee3a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800ee14:	9301      	str	r3, [sp, #4]
 800ee16:	9b00      	ldr	r3, [sp, #0]
 800ee18:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800ee1c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800ee20:	1a9a      	subs	r2, r3, r2
 800ee22:	f8ad 1010 	strh.w	r1, [sp, #16]
 800ee26:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ee2a:	f8ad 2016 	strh.w	r2, [sp, #22]
 800ee2e:	69ea      	ldr	r2, [r5, #28]
 800ee30:	4631      	mov	r1, r6
 800ee32:	4640      	mov	r0, r8
 800ee34:	f7ff ff7a 	bl	800ed2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ee38:	9b01      	ldr	r3, [sp, #4]
 800ee3a:	f9b4 2000 	ldrsh.w	r2, [r4]
 800ee3e:	b29f      	uxth	r7, r3
 800ee40:	429a      	cmp	r2, r3
 800ee42:	da0d      	bge.n	800ee60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800ee44:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ee48:	1aba      	subs	r2, r7, r2
 800ee4a:	f8ad a012 	strh.w	sl, [sp, #18]
 800ee4e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ee52:	f8ad 9016 	strh.w	r9, [sp, #22]
 800ee56:	69ea      	ldr	r2, [r5, #28]
 800ee58:	4631      	mov	r1, r6
 800ee5a:	4640      	mov	r0, r8
 800ee5c:	f7ff ff66 	bl	800ed2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ee60:	8822      	ldrh	r2, [r4, #0]
 800ee62:	88a3      	ldrh	r3, [r4, #4]
 800ee64:	445f      	add	r7, fp
 800ee66:	4413      	add	r3, r2
 800ee68:	b29b      	uxth	r3, r3
 800ee6a:	b2bf      	uxth	r7, r7
 800ee6c:	b23a      	sxth	r2, r7
 800ee6e:	b219      	sxth	r1, r3
 800ee70:	4291      	cmp	r1, r2
 800ee72:	dd0d      	ble.n	800ee90 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800ee74:	1bdb      	subs	r3, r3, r7
 800ee76:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ee7a:	f8ad a012 	strh.w	sl, [sp, #18]
 800ee7e:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ee82:	f8ad 9016 	strh.w	r9, [sp, #22]
 800ee86:	69ea      	ldr	r2, [r5, #28]
 800ee88:	4631      	mov	r1, r6
 800ee8a:	4640      	mov	r0, r8
 800ee8c:	f7ff ff4e 	bl	800ed2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ee90:	88e2      	ldrh	r2, [r4, #6]
 800ee92:	8863      	ldrh	r3, [r4, #2]
 800ee94:	4413      	add	r3, r2
 800ee96:	9a00      	ldr	r2, [sp, #0]
 800ee98:	b29b      	uxth	r3, r3
 800ee9a:	444a      	add	r2, r9
 800ee9c:	fa1f f982 	uxth.w	r9, r2
 800eea0:	fa0f f289 	sxth.w	r2, r9
 800eea4:	b219      	sxth	r1, r3
 800eea6:	428a      	cmp	r2, r1
 800eea8:	da15      	bge.n	800eed6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800eeaa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800eeae:	f9b4 0000 	ldrsh.w	r0, [r4]
 800eeb2:	eba3 0309 	sub.w	r3, r3, r9
 800eeb6:	f8ad 1014 	strh.w	r1, [sp, #20]
 800eeba:	f8ad 0010 	strh.w	r0, [sp, #16]
 800eebe:	f8ad 2012 	strh.w	r2, [sp, #18]
 800eec2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800eec6:	69ea      	ldr	r2, [r5, #28]
 800eec8:	4631      	mov	r1, r6
 800eeca:	e001      	b.n	800eed0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800eecc:	4621      	mov	r1, r4
 800eece:	69ea      	ldr	r2, [r5, #28]
 800eed0:	4640      	mov	r0, r8
 800eed2:	f7ff ff2b 	bl	800ed2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800eed6:	4628      	mov	r0, r5
 800eed8:	f7ff fe94 	bl	800ec04 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800eedc:	4633      	mov	r3, r6
 800eede:	4602      	mov	r2, r0
 800eee0:	6861      	ldr	r1, [r4, #4]
 800eee2:	6820      	ldr	r0, [r4, #0]
 800eee4:	c303      	stmia	r3!, {r0, r1}
 800eee6:	4611      	mov	r1, r2
 800eee8:	4630      	mov	r0, r6
 800eeea:	f7fb fe89 	bl	800ac00 <_ZN8touchgfx4RectaNERKS0_>
 800eeee:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800eef2:	2b00      	cmp	r3, #0
 800eef4:	f77f af33 	ble.w	800ed5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800eef8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800eefc:	2b00      	cmp	r3, #0
 800eefe:	f77f af2e 	ble.w	800ed5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ef02:	4628      	mov	r0, r5
 800ef04:	f7ff fe9a 	bl	800ec3c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800ef08:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800ef0c:	1a18      	subs	r0, r3, r0
 800ef0e:	f8ad 0010 	strh.w	r0, [sp, #16]
 800ef12:	4628      	mov	r0, r5
 800ef14:	f7ff fea6 	bl	800ec64 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800ef18:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ef1c:	4631      	mov	r1, r6
 800ef1e:	1a18      	subs	r0, r3, r0
 800ef20:	f8ad 0012 	strh.w	r0, [sp, #18]
 800ef24:	682b      	ldr	r3, [r5, #0]
 800ef26:	4628      	mov	r0, r5
 800ef28:	689b      	ldr	r3, [r3, #8]
 800ef2a:	4798      	blx	r3
 800ef2c:	e717      	b.n	800ed5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800ef2e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800ef2e:	b570      	push	{r4, r5, r6, lr}
 800ef30:	2300      	movs	r3, #0
 800ef32:	460c      	mov	r4, r1
 800ef34:	b086      	sub	sp, #24
 800ef36:	1d06      	adds	r6, r0, #4
 800ef38:	4631      	mov	r1, r6
 800ef3a:	4605      	mov	r5, r0
 800ef3c:	a802      	add	r0, sp, #8
 800ef3e:	9301      	str	r3, [sp, #4]
 800ef40:	f7ff f970 	bl	800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ef44:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800ef48:	8822      	ldrh	r2, [r4, #0]
 800ef4a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800ef4e:	1ad2      	subs	r2, r2, r3
 800ef50:	8863      	ldrh	r3, [r4, #2]
 800ef52:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800ef56:	1a5b      	subs	r3, r3, r1
 800ef58:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800ef5c:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ef60:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ef64:	f8ad 1016 	strh.w	r1, [sp, #22]
 800ef68:	aa01      	add	r2, sp, #4
 800ef6a:	a904      	add	r1, sp, #16
 800ef6c:	4630      	mov	r0, r6
 800ef6e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ef72:	f7fb ff1d 	bl	800adb0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800ef76:	9a01      	ldr	r2, [sp, #4]
 800ef78:	b11a      	cbz	r2, 800ef82 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800ef7a:	4621      	mov	r1, r4
 800ef7c:	4628      	mov	r0, r5
 800ef7e:	f7ff fed5 	bl	800ed2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ef82:	b006      	add	sp, #24
 800ef84:	bd70      	pop	{r4, r5, r6, pc}

0800ef86 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800ef86:	b530      	push	{r4, r5, lr}
 800ef88:	4602      	mov	r2, r0
 800ef8a:	b085      	sub	sp, #20
 800ef8c:	460d      	mov	r5, r1
 800ef8e:	466b      	mov	r3, sp
 800ef90:	4604      	mov	r4, r0
 800ef92:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800ef96:	6851      	ldr	r1, [r2, #4]
 800ef98:	c303      	stmia	r3!, {r0, r1}
 800ef9a:	4629      	mov	r1, r5
 800ef9c:	4668      	mov	r0, sp
 800ef9e:	f7fb fe2f 	bl	800ac00 <_ZN8touchgfx4RectaNERKS0_>
 800efa2:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800efa6:	b12b      	cbz	r3, 800efb4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800efa8:	4669      	mov	r1, sp
 800efaa:	4620      	mov	r0, r4
 800efac:	f7ff ffbf 	bl	800ef2e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800efb0:	b005      	add	sp, #20
 800efb2:	bd30      	pop	{r4, r5, pc}
 800efb4:	3404      	adds	r4, #4
 800efb6:	4621      	mov	r1, r4
 800efb8:	a802      	add	r0, sp, #8
 800efba:	f7ff f933 	bl	800e224 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800efbe:	f8bd 3000 	ldrh.w	r3, [sp]
 800efc2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800efc6:	4669      	mov	r1, sp
 800efc8:	1a9b      	subs	r3, r3, r2
 800efca:	f8ad 3000 	strh.w	r3, [sp]
 800efce:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800efd2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800efd6:	4620      	mov	r0, r4
 800efd8:	1a9b      	subs	r3, r3, r2
 800efda:	f8ad 3002 	strh.w	r3, [sp, #2]
 800efde:	f7fb feae 	bl	800ad3e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800efe2:	e7e5      	b.n	800efb0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800efe4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800efe4:	460b      	mov	r3, r1
 800efe6:	680a      	ldr	r2, [r1, #0]
 800efe8:	1d01      	adds	r1, r0, #4
 800efea:	6992      	ldr	r2, [r2, #24]
 800efec:	4618      	mov	r0, r3
 800efee:	4710      	bx	r2

0800eff0 <_ZN8touchgfx12TextProviderC1Ev>:
 800eff0:	b538      	push	{r3, r4, r5, lr}
 800eff2:	2500      	movs	r5, #0
 800eff4:	2302      	movs	r3, #2
 800eff6:	4604      	mov	r4, r0
 800eff8:	e9c0 5500 	strd	r5, r5, [r0]
 800effc:	7403      	strb	r3, [r0, #16]
 800effe:	6145      	str	r5, [r0, #20]
 800f000:	7605      	strb	r5, [r0, #24]
 800f002:	83c5      	strh	r5, [r0, #30]
 800f004:	8405      	strh	r5, [r0, #32]
 800f006:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800f008:	8705      	strh	r5, [r0, #56]	@ 0x38
 800f00a:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 800f00c:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 800f010:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 800f014:	220e      	movs	r2, #14
 800f016:	4629      	mov	r1, r5
 800f018:	304c      	adds	r0, #76	@ 0x4c
 800f01a:	f023 fc3c 	bl	8032896 <memset>
 800f01e:	2301      	movs	r3, #1
 800f020:	4620      	mov	r0, r4
 800f022:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 800f026:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f02a:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 800f02e:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 800f032:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 800f036:	f7f4 fb63 	bl	8003700 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800f03a:	4620      	mov	r0, r4
 800f03c:	bd38      	pop	{r3, r4, r5, pc}

0800f03e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800f03e:	b530      	push	{r4, r5, lr}
 800f040:	2500      	movs	r5, #0
 800f042:	2401      	movs	r4, #1
 800f044:	6843      	ldr	r3, [r0, #4]
 800f046:	b913      	cbnz	r3, 800f04e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800f048:	6803      	ldr	r3, [r0, #0]
 800f04a:	b313      	cbz	r3, 800f092 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f04c:	6043      	str	r3, [r0, #4]
 800f04e:	7e03      	ldrb	r3, [r0, #24]
 800f050:	b143      	cbz	r3, 800f064 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800f052:	6943      	ldr	r3, [r0, #20]
 800f054:	b12b      	cbz	r3, 800f062 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f056:	881a      	ldrh	r2, [r3, #0]
 800f058:	b11a      	cbz	r2, 800f062 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f05a:	1c9a      	adds	r2, r3, #2
 800f05c:	6142      	str	r2, [r0, #20]
 800f05e:	8818      	ldrh	r0, [r3, #0]
 800f060:	bd30      	pop	{r4, r5, pc}
 800f062:	7605      	strb	r5, [r0, #24]
 800f064:	6843      	ldr	r3, [r0, #4]
 800f066:	8819      	ldrh	r1, [r3, #0]
 800f068:	b199      	cbz	r1, 800f092 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f06a:	1c9a      	adds	r2, r3, #2
 800f06c:	2902      	cmp	r1, #2
 800f06e:	6042      	str	r2, [r0, #4]
 800f070:	d1f5      	bne.n	800f05e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800f072:	7c03      	ldrb	r3, [r0, #16]
 800f074:	2b01      	cmp	r3, #1
 800f076:	d8e5      	bhi.n	800f044 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f078:	1c5a      	adds	r2, r3, #1
 800f07a:	7402      	strb	r2, [r0, #16]
 800f07c:	3302      	adds	r3, #2
 800f07e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800f082:	6143      	str	r3, [r0, #20]
 800f084:	2b00      	cmp	r3, #0
 800f086:	d0dd      	beq.n	800f044 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f088:	881b      	ldrh	r3, [r3, #0]
 800f08a:	2b00      	cmp	r3, #0
 800f08c:	d0da      	beq.n	800f044 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f08e:	7604      	strb	r4, [r0, #24]
 800f090:	e7d8      	b.n	800f044 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f092:	2000      	movs	r0, #0
 800f094:	e7e4      	b.n	800f060 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800f096 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800f096:	6001      	str	r1, [r0, #0]
 800f098:	2100      	movs	r1, #0
 800f09a:	b430      	push	{r4, r5}
 800f09c:	6041      	str	r1, [r0, #4]
 800f09e:	6815      	ldr	r5, [r2, #0]
 800f0a0:	6085      	str	r5, [r0, #8]
 800f0a2:	6852      	ldr	r2, [r2, #4]
 800f0a4:	6443      	str	r3, [r0, #68]	@ 0x44
 800f0a6:	9b02      	ldr	r3, [sp, #8]
 800f0a8:	60c2      	str	r2, [r0, #12]
 800f0aa:	7401      	strb	r1, [r0, #16]
 800f0ac:	6141      	str	r1, [r0, #20]
 800f0ae:	7601      	strb	r1, [r0, #24]
 800f0b0:	8701      	strh	r1, [r0, #56]	@ 0x38
 800f0b2:	8401      	strh	r1, [r0, #32]
 800f0b4:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 800f0b8:	6483      	str	r3, [r0, #72]	@ 0x48
 800f0ba:	bc30      	pop	{r4, r5}
 800f0bc:	f7f4 bb20 	b.w	8003700 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800f0c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800f0c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f0c2:	4605      	mov	r5, r0
 800f0c4:	4608      	mov	r0, r1
 800f0c6:	b1e9      	cbz	r1, 800f104 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800f0c8:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 800f0cc:	460b      	mov	r3, r1
 800f0ce:	4622      	mov	r2, r4
 800f0d0:	f101 0708 	add.w	r7, r1, #8
 800f0d4:	4626      	mov	r6, r4
 800f0d6:	6818      	ldr	r0, [r3, #0]
 800f0d8:	6859      	ldr	r1, [r3, #4]
 800f0da:	3308      	adds	r3, #8
 800f0dc:	c603      	stmia	r6!, {r0, r1}
 800f0de:	42bb      	cmp	r3, r7
 800f0e0:	4634      	mov	r4, r6
 800f0e2:	d1f7      	bne.n	800f0d4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800f0e4:	6818      	ldr	r0, [r3, #0]
 800f0e6:	6030      	str	r0, [r6, #0]
 800f0e8:	4610      	mov	r0, r2
 800f0ea:	889b      	ldrh	r3, [r3, #4]
 800f0ec:	80b3      	strh	r3, [r6, #4]
 800f0ee:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 800f0f2:	015b      	lsls	r3, r3, #5
 800f0f4:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f0f8:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 800f0fc:	430b      	orrs	r3, r1
 800f0fe:	425b      	negs	r3, r3
 800f100:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 800f104:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f106 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800f106:	b538      	push	{r3, r4, r5, lr}
 800f108:	460c      	mov	r4, r1
 800f10a:	6811      	ldr	r1, [r2, #0]
 800f10c:	4610      	mov	r0, r2
 800f10e:	68cd      	ldr	r5, [r1, #12]
 800f110:	4619      	mov	r1, r3
 800f112:	47a8      	blx	r5
 800f114:	2800      	cmp	r0, #0
 800f116:	bf08      	it	eq
 800f118:	4620      	moveq	r0, r4
 800f11a:	bd38      	pop	{r3, r4, r5, pc}

0800f11c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800f11c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f11e:	4604      	mov	r4, r0
 800f120:	4615      	mov	r5, r2
 800f122:	4608      	mov	r0, r1
 800f124:	b93a      	cbnz	r2, 800f136 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f126:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800f12a:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 800f12e:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 800f132:	4628      	mov	r0, r5
 800f134:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f136:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 800f13a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800f13e:	8893      	ldrh	r3, [r2, #4]
 800f140:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800f144:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800f148:	79ee      	ldrb	r6, [r5, #7]
 800f14a:	4316      	orrs	r6, r2
 800f14c:	19da      	adds	r2, r3, r7
 800f14e:	b291      	uxth	r1, r2
 800f150:	291d      	cmp	r1, #29
 800f152:	b2b7      	uxth	r7, r6
 800f154:	d879      	bhi.n	800f24a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x12e>
 800f156:	2201      	movs	r2, #1
 800f158:	408a      	lsls	r2, r1
 800f15a:	4974      	ldr	r1, [pc, #464]	@ (800f32c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x210>)
 800f15c:	10f6      	asrs	r6, r6, #3
 800f15e:	420a      	tst	r2, r1
 800f160:	d12d      	bne.n	800f1be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa2>
 800f162:	f412 7f60 	tst.w	r2, #896	@ 0x380
 800f166:	d070      	beq.n	800f24a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x12e>
 800f168:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 800f16c:	462b      	mov	r3, r5
 800f16e:	f105 0e08 	add.w	lr, r5, #8
 800f172:	4615      	mov	r5, r2
 800f174:	4694      	mov	ip, r2
 800f176:	6818      	ldr	r0, [r3, #0]
 800f178:	6859      	ldr	r1, [r3, #4]
 800f17a:	3308      	adds	r3, #8
 800f17c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800f180:	4573      	cmp	r3, lr
 800f182:	4662      	mov	r2, ip
 800f184:	d1f6      	bne.n	800f174 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 800f186:	6818      	ldr	r0, [r3, #0]
 800f188:	f8cc 0000 	str.w	r0, [ip]
 800f18c:	889b      	ldrh	r3, [r3, #4]
 800f18e:	f8ac 3004 	strh.w	r3, [ip, #4]
 800f192:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 800f196:	b2b3      	uxth	r3, r6
 800f198:	1aca      	subs	r2, r1, r3
 800f19a:	b292      	uxth	r2, r2
 800f19c:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 800f1a0:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800f1a4:	10d2      	asrs	r2, r2, #3
 800f1a6:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 800f1aa:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 800f1ae:	4302      	orrs	r2, r0
 800f1b0:	1bcf      	subs	r7, r1, r7
 800f1b2:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 800f1b6:	1afb      	subs	r3, r7, r3
 800f1b8:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800f1bc:	e7b9      	b.n	800f132 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f1be:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800f1c0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f1c4:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 800f1c6:	f640 6333 	movw	r3, #3635	@ 0xe33
 800f1ca:	4299      	cmp	r1, r3
 800f1cc:	d110      	bne.n	800f1f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd4>
 800f1ce:	6803      	ldr	r3, [r0, #0]
 800f1d0:	68db      	ldr	r3, [r3, #12]
 800f1d2:	4798      	blx	r3
 800f1d4:	7b41      	ldrb	r1, [r0, #13]
 800f1d6:	00cb      	lsls	r3, r1, #3
 800f1d8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f1dc:	7a03      	ldrb	r3, [r0, #8]
 800f1de:	0648      	lsls	r0, r1, #25
 800f1e0:	ea43 0302 	orr.w	r3, r3, r2
 800f1e4:	bf44      	itt	mi
 800f1e6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f1ea:	b21b      	sxthmi	r3, r3
 800f1ec:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f1f0:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 800f1f4:	462a      	mov	r2, r5
 800f1f6:	443b      	add	r3, r7
 800f1f8:	4433      	add	r3, r6
 800f1fa:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 800f1fe:	f105 0c08 	add.w	ip, r5, #8
 800f202:	4635      	mov	r5, r6
 800f204:	b29b      	uxth	r3, r3
 800f206:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f20a:	4637      	mov	r7, r6
 800f20c:	6810      	ldr	r0, [r2, #0]
 800f20e:	6851      	ldr	r1, [r2, #4]
 800f210:	3208      	adds	r2, #8
 800f212:	c703      	stmia	r7!, {r0, r1}
 800f214:	4562      	cmp	r2, ip
 800f216:	463e      	mov	r6, r7
 800f218:	d1f7      	bne.n	800f20a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xee>
 800f21a:	6810      	ldr	r0, [r2, #0]
 800f21c:	6038      	str	r0, [r7, #0]
 800f21e:	8892      	ldrh	r2, [r2, #4]
 800f220:	80ba      	strh	r2, [r7, #4]
 800f222:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f226:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f22a:	10db      	asrs	r3, r3, #3
 800f22c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f230:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f234:	4313      	orrs	r3, r2
 800f236:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f23a:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 800f23e:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800f242:	1a9b      	subs	r3, r3, r2
 800f244:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 800f248:	e773      	b.n	800f132 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f24a:	f640 611b 	movw	r1, #3611	@ 0xe1b
 800f24e:	f023 0204 	bic.w	r2, r3, #4
 800f252:	428a      	cmp	r2, r1
 800f254:	d003      	beq.n	800f25e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800f256:	f640 621d 	movw	r2, #3613	@ 0xe1d
 800f25a:	4293      	cmp	r3, r2
 800f25c:	d120      	bne.n	800f2a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x184>
 800f25e:	3b01      	subs	r3, #1
 800f260:	4602      	mov	r2, r0
 800f262:	b29b      	uxth	r3, r3
 800f264:	4629      	mov	r1, r5
 800f266:	4620      	mov	r0, r4
 800f268:	f7ff ff4d 	bl	800f106 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f26c:	7b41      	ldrb	r1, [r0, #13]
 800f26e:	00cb      	lsls	r3, r1, #3
 800f270:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f274:	7a03      	ldrb	r3, [r0, #8]
 800f276:	0649      	lsls	r1, r1, #25
 800f278:	ea43 0302 	orr.w	r3, r3, r2
 800f27c:	bf44      	itt	mi
 800f27e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f282:	b21b      	sxthmi	r3, r3
 800f284:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f288:	7b6b      	ldrb	r3, [r5, #13]
 800f28a:	7aaa      	ldrb	r2, [r5, #10]
 800f28c:	005b      	lsls	r3, r3, #1
 800f28e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f292:	4313      	orrs	r3, r2
 800f294:	115a      	asrs	r2, r3, #5
 800f296:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800f29a:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800f29e:	e036      	b.n	800f30e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 800f2a0:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800f2a4:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 800f2a8:	7a2a      	ldrb	r2, [r5, #8]
 800f2aa:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 800f2ae:	ea42 0201 	orr.w	r2, r2, r1
 800f2b2:	f640 6109 	movw	r1, #3593	@ 0xe09
 800f2b6:	bf1c      	itt	ne
 800f2b8:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 800f2bc:	b212      	sxthne	r2, r2
 800f2be:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800f2c2:	f023 0210 	bic.w	r2, r3, #16
 800f2c6:	428a      	cmp	r2, r1
 800f2c8:	d003      	beq.n	800f2d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 800f2ca:	f640 6213 	movw	r2, #3603	@ 0xe13
 800f2ce:	4293      	cmp	r3, r2
 800f2d0:	d12a      	bne.n	800f328 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20c>
 800f2d2:	7b6e      	ldrb	r6, [r5, #13]
 800f2d4:	4629      	mov	r1, r5
 800f2d6:	0076      	lsls	r6, r6, #1
 800f2d8:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800f2dc:	7aae      	ldrb	r6, [r5, #10]
 800f2de:	4316      	orrs	r6, r2
 800f2e0:	f640 6213 	movw	r2, #3603	@ 0xe13
 800f2e4:	4293      	cmp	r3, r2
 800f2e6:	bf18      	it	ne
 800f2e8:	f103 33ff 	addne.w	r3, r3, #4294967295
 800f2ec:	4602      	mov	r2, r0
 800f2ee:	bf14      	ite	ne
 800f2f0:	b29b      	uxthne	r3, r3
 800f2f2:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 800f2f6:	4620      	mov	r0, r4
 800f2f8:	f7ff ff05 	bl	800f106 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f2fc:	7b43      	ldrb	r3, [r0, #13]
 800f2fe:	7a82      	ldrb	r2, [r0, #10]
 800f300:	005b      	lsls	r3, r3, #1
 800f302:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f306:	4313      	orrs	r3, r2
 800f308:	1af6      	subs	r6, r6, r3
 800f30a:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 800f30e:	7b69      	ldrb	r1, [r5, #13]
 800f310:	00cb      	lsls	r3, r1, #3
 800f312:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f316:	7a2b      	ldrb	r3, [r5, #8]
 800f318:	4313      	orrs	r3, r2
 800f31a:	064a      	lsls	r2, r1, #25
 800f31c:	bf44      	itt	mi
 800f31e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f322:	b21b      	sxthmi	r3, r3
 800f324:	1bdb      	subs	r3, r3, r7
 800f326:	e747      	b.n	800f1b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9c>
 800f328:	2300      	movs	r3, #0
 800f32a:	e7b6      	b.n	800f29a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x17e>
 800f32c:	3fc00079 	.word	0x3fc00079

0800f330 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800f330:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f334:	4604      	mov	r4, r0
 800f336:	b942      	cbnz	r2, 800f34a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800f338:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800f33c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 800f340:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 800f344:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800f348:	e047      	b.n	800f3da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800f34a:	7b51      	ldrb	r1, [r2, #13]
 800f34c:	8893      	ldrh	r3, [r2, #4]
 800f34e:	010d      	lsls	r5, r1, #4
 800f350:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 800f354:	79d5      	ldrb	r5, [r2, #7]
 800f356:	4305      	orrs	r5, r0
 800f358:	2d04      	cmp	r5, #4
 800f35a:	bfcc      	ite	gt
 800f35c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800f360:	f04f 0e01 	movle.w	lr, #1
 800f364:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 800f368:	f200 80ab 	bhi.w	800f4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800f36c:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 800f370:	4283      	cmp	r3, r0
 800f372:	d216      	bcs.n	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f374:	f240 605b 	movw	r0, #1627	@ 0x65b
 800f378:	4283      	cmp	r3, r0
 800f37a:	d859      	bhi.n	800f430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800f37c:	f240 6057 	movw	r0, #1623	@ 0x657
 800f380:	4283      	cmp	r3, r0
 800f382:	d20e      	bcs.n	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f384:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800f388:	d24a      	bcs.n	800f420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800f38a:	f240 604e 	movw	r0, #1614	@ 0x64e
 800f38e:	4283      	cmp	r3, r0
 800f390:	d207      	bcs.n	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f392:	f240 601a 	movw	r0, #1562	@ 0x61a
 800f396:	4283      	cmp	r3, r0
 800f398:	d02a      	beq.n	800f3f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f39a:	d821      	bhi.n	800f3e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800f39c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 800f3a0:	d35b      	bcc.n	800f45a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f3a2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 800f3a6:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f3aa:	f040 80d0 	bne.w	800f54e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800f3ae:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 800f3b2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f3b6:	f040 80ca 	bne.w	800f54e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800f3ba:	00cb      	lsls	r3, r1, #3
 800f3bc:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f3c0:	7a13      	ldrb	r3, [r2, #8]
 800f3c2:	0649      	lsls	r1, r1, #25
 800f3c4:	ea43 0300 	orr.w	r3, r3, r0
 800f3c8:	bf44      	itt	mi
 800f3ca:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f3ce:	b21b      	sxthmi	r3, r3
 800f3d0:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f3d4:	1b5d      	subs	r5, r3, r5
 800f3d6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f3da:	4610      	mov	r0, r2
 800f3dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f3e0:	f240 604b 	movw	r0, #1611	@ 0x64b
 800f3e4:	4283      	cmp	r3, r0
 800f3e6:	d338      	bcc.n	800f45a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f3e8:	f240 604c 	movw	r0, #1612	@ 0x64c
 800f3ec:	4283      	cmp	r3, r0
 800f3ee:	d9d8      	bls.n	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f3f0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 800f3f4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 800f3f8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f3fc:	f040 80f2 	bne.w	800f5e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800f400:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f404:	f040 80ee 	bne.w	800f5e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800f408:	00cb      	lsls	r3, r1, #3
 800f40a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f40e:	7a13      	ldrb	r3, [r2, #8]
 800f410:	064e      	lsls	r6, r1, #25
 800f412:	ea43 0300 	orr.w	r3, r3, r0
 800f416:	bf44      	itt	mi
 800f418:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f41c:	b21b      	sxthmi	r3, r3
 800f41e:	e7d9      	b.n	800f3d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800f420:	f240 6054 	movw	r0, #1620	@ 0x654
 800f424:	4283      	cmp	r3, r0
 800f426:	d8e3      	bhi.n	800f3f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f428:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800f42c:	d9e0      	bls.n	800f3f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f42e:	e7b8      	b.n	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f430:	f240 6074 	movw	r0, #1652	@ 0x674
 800f434:	4283      	cmp	r3, r0
 800f436:	d0b4      	beq.n	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f438:	d82d      	bhi.n	800f496 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800f43a:	f240 605e 	movw	r0, #1630	@ 0x65e
 800f43e:	4283      	cmp	r3, r0
 800f440:	d804      	bhi.n	800f44c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800f442:	f240 605d 	movw	r0, #1629	@ 0x65d
 800f446:	4283      	cmp	r3, r0
 800f448:	d3d2      	bcc.n	800f3f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f44a:	e7aa      	b.n	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f44c:	f240 605f 	movw	r0, #1631	@ 0x65f
 800f450:	4283      	cmp	r3, r0
 800f452:	d0cd      	beq.n	800f3f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f454:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 800f458:	d0a3      	beq.n	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f45a:	00cb      	lsls	r3, r1, #3
 800f45c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f460:	7a13      	ldrb	r3, [r2, #8]
 800f462:	0649      	lsls	r1, r1, #25
 800f464:	ea43 0300 	orr.w	r3, r3, r0
 800f468:	bf44      	itt	mi
 800f46a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f46e:	b21b      	sxthmi	r3, r3
 800f470:	1b5d      	subs	r5, r3, r5
 800f472:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f476:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f47a:	7b53      	ldrb	r3, [r2, #13]
 800f47c:	015b      	lsls	r3, r3, #5
 800f47e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f482:	7993      	ldrb	r3, [r2, #6]
 800f484:	430b      	orrs	r3, r1
 800f486:	2105      	movs	r1, #5
 800f488:	005b      	lsls	r3, r3, #1
 800f48a:	fb93 f3f1 	sdiv	r3, r3, r1
 800f48e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800f492:	440b      	add	r3, r1
 800f494:	e756      	b.n	800f344 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800f496:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 800f49a:	4283      	cmp	r3, r0
 800f49c:	d809      	bhi.n	800f4b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800f49e:	f240 60df 	movw	r0, #1759	@ 0x6df
 800f4a2:	4283      	cmp	r3, r0
 800f4a4:	f4bf af7d 	bcs.w	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4a8:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 800f4ac:	2b05      	cmp	r3, #5
 800f4ae:	d8d4      	bhi.n	800f45a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f4b0:	e777      	b.n	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4b2:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 800f4b6:	4283      	cmp	r3, r0
 800f4b8:	d09a      	beq.n	800f3f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f4ba:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 800f4be:	4283      	cmp	r3, r0
 800f4c0:	e7ca      	b.n	800f458 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800f4c2:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 800f4c6:	d22b      	bcs.n	800f520 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800f4c8:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 800f4cc:	4283      	cmp	r3, r0
 800f4ce:	d28f      	bcs.n	800f3f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f4d0:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 800f4d4:	4283      	cmp	r3, r0
 800f4d6:	d816      	bhi.n	800f506 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800f4d8:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 800f4dc:	4283      	cmp	r3, r0
 800f4de:	f4bf af60 	bcs.w	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4e2:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 800f4e6:	4283      	cmp	r3, r0
 800f4e8:	d80a      	bhi.n	800f500 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800f4ea:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 800f4ee:	4283      	cmp	r3, r0
 800f4f0:	f4bf af57 	bcs.w	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4f4:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 800f4f8:	4283      	cmp	r3, r0
 800f4fa:	f43f af79 	beq.w	800f3f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f4fe:	e7ac      	b.n	800f45a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f500:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 800f504:	e7f8      	b.n	800f4f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800f506:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 800f50a:	4283      	cmp	r3, r0
 800f50c:	d802      	bhi.n	800f514 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800f50e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 800f512:	e798      	b.n	800f446 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800f514:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 800f518:	4283      	cmp	r3, r0
 800f51a:	f47f af42 	bne.w	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f51e:	e767      	b.n	800f3f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f520:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 800f524:	4283      	cmp	r3, r0
 800f526:	f43f af63 	beq.w	800f3f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f52a:	d802      	bhi.n	800f532 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800f52c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 800f530:	e7f2      	b.n	800f518 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800f532:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 800f536:	4283      	cmp	r3, r0
 800f538:	d805      	bhi.n	800f546 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800f53a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 800f53e:	4283      	cmp	r3, r0
 800f540:	f4ff af2f 	bcc.w	800f3a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f544:	e754      	b.n	800f3f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f546:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 800f54a:	4283      	cmp	r3, r0
 800f54c:	e7af      	b.n	800f4ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800f54e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800f552:	4617      	mov	r7, r2
 800f554:	4666      	mov	r6, ip
 800f556:	f102 0808 	add.w	r8, r2, #8
 800f55a:	46e6      	mov	lr, ip
 800f55c:	6838      	ldr	r0, [r7, #0]
 800f55e:	6879      	ldr	r1, [r7, #4]
 800f560:	3708      	adds	r7, #8
 800f562:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800f566:	4547      	cmp	r7, r8
 800f568:	46f4      	mov	ip, lr
 800f56a:	d1f6      	bne.n	800f55a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800f56c:	6838      	ldr	r0, [r7, #0]
 800f56e:	f8ce 0000 	str.w	r0, [lr]
 800f572:	88b9      	ldrh	r1, [r7, #4]
 800f574:	f8ae 1004 	strh.w	r1, [lr, #4]
 800f578:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800f57c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f580:	d009      	beq.n	800f596 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 800f582:	7b51      	ldrb	r1, [r2, #13]
 800f584:	7992      	ldrb	r2, [r2, #6]
 800f586:	0149      	lsls	r1, r1, #5
 800f588:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800f58c:	4311      	orrs	r1, r2
 800f58e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800f592:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800f596:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f59a:	b2ad      	uxth	r5, r5
 800f59c:	d00d      	beq.n	800f5ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 800f59e:	442b      	add	r3, r5
 800f5a0:	b29b      	uxth	r3, r3
 800f5a2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f5a6:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f5aa:	10db      	asrs	r3, r3, #3
 800f5ac:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f5b0:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f5b4:	4313      	orrs	r3, r2
 800f5b6:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f5ba:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800f5be:	00cb      	lsls	r3, r1, #3
 800f5c0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f5c4:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800f5c8:	064f      	lsls	r7, r1, #25
 800f5ca:	ea43 0302 	orr.w	r3, r3, r2
 800f5ce:	bf44      	itt	mi
 800f5d0:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f5d4:	b21b      	sxthmi	r3, r3
 800f5d6:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f5da:	1b5b      	subs	r3, r3, r5
 800f5dc:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800f5e0:	4632      	mov	r2, r6
 800f5e2:	e6fa      	b.n	800f3da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800f5e4:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800f5e8:	4617      	mov	r7, r2
 800f5ea:	4666      	mov	r6, ip
 800f5ec:	f102 0908 	add.w	r9, r2, #8
 800f5f0:	46e0      	mov	r8, ip
 800f5f2:	6838      	ldr	r0, [r7, #0]
 800f5f4:	6879      	ldr	r1, [r7, #4]
 800f5f6:	3708      	adds	r7, #8
 800f5f8:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800f5fc:	454f      	cmp	r7, r9
 800f5fe:	46c4      	mov	ip, r8
 800f600:	d1f6      	bne.n	800f5f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 800f602:	6838      	ldr	r0, [r7, #0]
 800f604:	f8c8 0000 	str.w	r0, [r8]
 800f608:	88b9      	ldrh	r1, [r7, #4]
 800f60a:	f8a8 1004 	strh.w	r1, [r8, #4]
 800f60e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800f612:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f616:	d009      	beq.n	800f62c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 800f618:	7b51      	ldrb	r1, [r2, #13]
 800f61a:	7992      	ldrb	r2, [r2, #6]
 800f61c:	0149      	lsls	r1, r1, #5
 800f61e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800f622:	4311      	orrs	r1, r2
 800f624:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800f628:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800f62c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f630:	d00e      	beq.n	800f650 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 800f632:	eba3 030e 	sub.w	r3, r3, lr
 800f636:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f63a:	b29b      	uxth	r3, r3
 800f63c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f640:	10db      	asrs	r3, r3, #3
 800f642:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f646:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f64a:	4313      	orrs	r3, r2
 800f64c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f650:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800f654:	00cb      	lsls	r3, r1, #3
 800f656:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f65a:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800f65e:	0648      	lsls	r0, r1, #25
 800f660:	ea43 0302 	orr.w	r3, r3, r2
 800f664:	bf44      	itt	mi
 800f666:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f66a:	b21b      	sxthmi	r3, r3
 800f66c:	1b5d      	subs	r5, r3, r5
 800f66e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f672:	e7b5      	b.n	800f5e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0800f674 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800f674:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f678:	461e      	mov	r6, r3
 800f67a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f67c:	4604      	mov	r4, r0
 800f67e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800f682:	4617      	mov	r7, r2
 800f684:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800f688:	f7f3 fff8 	bl	800367c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f68c:	4605      	mov	r5, r0
 800f68e:	b918      	cbnz	r0, 800f698 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800f690:	6030      	str	r0, [r6, #0]
 800f692:	4628      	mov	r0, r5
 800f694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f698:	683b      	ldr	r3, [r7, #0]
 800f69a:	4601      	mov	r1, r0
 800f69c:	68db      	ldr	r3, [r3, #12]
 800f69e:	4638      	mov	r0, r7
 800f6a0:	4798      	blx	r3
 800f6a2:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 800f6a6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800f6aa:	4602      	mov	r2, r0
 800f6ac:	6030      	str	r0, [r6, #0]
 800f6ae:	d213      	bcs.n	800f6d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800f6b0:	4643      	mov	r3, r8
 800f6b2:	4639      	mov	r1, r7
 800f6b4:	4620      	mov	r0, r4
 800f6b6:	f7ff fe3b 	bl	800f330 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800f6ba:	6030      	str	r0, [r6, #0]
 800f6bc:	6833      	ldr	r3, [r6, #0]
 800f6be:	b143      	cbz	r3, 800f6d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800f6c0:	7b5a      	ldrb	r2, [r3, #13]
 800f6c2:	7a9b      	ldrb	r3, [r3, #10]
 800f6c4:	0052      	lsls	r2, r2, #1
 800f6c6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800f6ca:	4313      	orrs	r3, r2
 800f6cc:	bf0c      	ite	eq
 800f6ce:	2301      	moveq	r3, #1
 800f6d0:	2300      	movne	r3, #0
 800f6d2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 800f6d6:	e7dc      	b.n	800f692 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800f6d8:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 800f6dc:	b29b      	uxth	r3, r3
 800f6de:	2b7f      	cmp	r3, #127	@ 0x7f
 800f6e0:	d804      	bhi.n	800f6ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800f6e2:	4639      	mov	r1, r7
 800f6e4:	4620      	mov	r0, r4
 800f6e6:	f7ff fd19 	bl	800f11c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800f6ea:	e7e6      	b.n	800f6ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800f6ec:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 800f6f0:	2b00      	cmp	r3, #0
 800f6f2:	d0e3      	beq.n	800f6bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800f6f4:	f640 1302 	movw	r3, #2306	@ 0x902
 800f6f8:	429d      	cmp	r5, r3
 800f6fa:	d1df      	bne.n	800f6bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800f6fc:	4601      	mov	r1, r0
 800f6fe:	4620      	mov	r0, r4
 800f700:	f7ff fcde 	bl	800f0c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f704:	e7d9      	b.n	800f6ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800f706 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800f706:	b510      	push	{r4, lr}
 800f708:	4604      	mov	r4, r0
 800f70a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800f70e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f710:	b1f1      	cbz	r1, 800f750 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800f712:	2b0a      	cmp	r3, #10
 800f714:	d02f      	beq.n	800f776 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800f716:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800f718:	3901      	subs	r1, #1
 800f71a:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800f71e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 800f720:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 800f724:	1c51      	adds	r1, r2, #1
 800f726:	b289      	uxth	r1, r1
 800f728:	2901      	cmp	r1, #1
 800f72a:	bf84      	itt	hi
 800f72c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800f730:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 800f732:	f103 0201 	add.w	r2, r3, #1
 800f736:	8722      	strh	r2, [r4, #56]	@ 0x38
 800f738:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800f73a:	bf98      	it	ls
 800f73c:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 800f73e:	4413      	add	r3, r2
 800f740:	b29b      	uxth	r3, r3
 800f742:	2b09      	cmp	r3, #9
 800f744:	bf88      	it	hi
 800f746:	3b0a      	subhi	r3, #10
 800f748:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f74c:	8458      	strh	r0, [r3, #34]	@ 0x22
 800f74e:	e7dc      	b.n	800f70a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800f750:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f752:	2b0a      	cmp	r3, #10
 800f754:	d00f      	beq.n	800f776 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800f756:	4620      	mov	r0, r4
 800f758:	f7ff fc71 	bl	800f03e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800f75c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f75e:	1c5a      	adds	r2, r3, #1
 800f760:	8722      	strh	r2, [r4, #56]	@ 0x38
 800f762:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800f764:	4413      	add	r3, r2
 800f766:	b29b      	uxth	r3, r3
 800f768:	2b09      	cmp	r3, #9
 800f76a:	bf88      	it	hi
 800f76c:	3b0a      	subhi	r3, #10
 800f76e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f772:	8458      	strh	r0, [r3, #34]	@ 0x22
 800f774:	e7ec      	b.n	800f750 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800f776:	bd10      	pop	{r4, pc}

0800f778 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800f778:	b538      	push	{r3, r4, r5, lr}
 800f77a:	4604      	mov	r4, r0
 800f77c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f77e:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 800f782:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 800f784:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 800f786:	3a01      	subs	r2, #1
 800f788:	8702      	strh	r2, [r0, #56]	@ 0x38
 800f78a:	1c5a      	adds	r2, r3, #1
 800f78c:	b292      	uxth	r2, r2
 800f78e:	2a09      	cmp	r2, #9
 800f790:	bf86      	itte	hi
 800f792:	3b09      	subhi	r3, #9
 800f794:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 800f796:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 800f798:	f7ff ffb5 	bl	800f706 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f79c:	8c23      	ldrh	r3, [r4, #32]
 800f79e:	2b01      	cmp	r3, #1
 800f7a0:	bf9c      	itt	ls
 800f7a2:	3301      	addls	r3, #1
 800f7a4:	8423      	strhls	r3, [r4, #32]
 800f7a6:	8be3      	ldrh	r3, [r4, #30]
 800f7a8:	b90b      	cbnz	r3, 800f7ae <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 800f7aa:	2302      	movs	r3, #2
 800f7ac:	83e3      	strh	r3, [r4, #30]
 800f7ae:	8be3      	ldrh	r3, [r4, #30]
 800f7b0:	4628      	mov	r0, r5
 800f7b2:	3b01      	subs	r3, #1
 800f7b4:	b29b      	uxth	r3, r3
 800f7b6:	83e3      	strh	r3, [r4, #30]
 800f7b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f7bc:	8365      	strh	r5, [r4, #26]
 800f7be:	bd38      	pop	{r3, r4, r5, pc}

0800f7c0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800f7c0:	428a      	cmp	r2, r1
 800f7c2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f7c6:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 800f7c8:	d931      	bls.n	800f82e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 800f7ca:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 800f7cc:	1a54      	subs	r4, r2, r1
 800f7ce:	19ee      	adds	r6, r5, r7
 800f7d0:	3e01      	subs	r6, #1
 800f7d2:	fa1f fe84 	uxth.w	lr, r4
 800f7d6:	b2b4      	uxth	r4, r6
 800f7d8:	eba4 090e 	sub.w	r9, r4, lr
 800f7dc:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 800f7e0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 800f7e4:	fa1f f989 	uxth.w	r9, r9
 800f7e8:	2c09      	cmp	r4, #9
 800f7ea:	4626      	mov	r6, r4
 800f7ec:	bf88      	it	hi
 800f7ee:	f1a4 060a 	subhi.w	r6, r4, #10
 800f7f2:	f1bc 0f00 	cmp.w	ip, #0
 800f7f6:	bf08      	it	eq
 800f7f8:	f04f 0c02 	moveq.w	ip, #2
 800f7fc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 800f800:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f804:	3c01      	subs	r4, #1
 800f806:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 800f80a:	fa1f fc8c 	uxth.w	ip, ip
 800f80e:	b2a4      	uxth	r4, r4
 800f810:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 800f814:	454c      	cmp	r4, r9
 800f816:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 800f81a:	d1e5      	bne.n	800f7e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 800f81c:	eba5 050e 	sub.w	r5, r5, lr
 800f820:	eb0e 0408 	add.w	r4, lr, r8
 800f824:	8705      	strh	r5, [r0, #56]	@ 0x38
 800f826:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 800f82a:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 800f82e:	250a      	movs	r5, #10
 800f830:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 800f832:	1a64      	subs	r4, r4, r1
 800f834:	4439      	add	r1, r7
 800f836:	b289      	uxth	r1, r1
 800f838:	2909      	cmp	r1, #9
 800f83a:	bf88      	it	hi
 800f83c:	390a      	subhi	r1, #10
 800f83e:	8704      	strh	r4, [r0, #56]	@ 0x38
 800f840:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800f842:	b18a      	cbz	r2, 800f868 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 800f844:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 800f846:	3a01      	subs	r2, #1
 800f848:	3101      	adds	r1, #1
 800f84a:	b292      	uxth	r2, r2
 800f84c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800f850:	8701      	strh	r1, [r0, #56]	@ 0x38
 800f852:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800f854:	b901      	cbnz	r1, 800f858 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 800f856:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800f858:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800f85a:	3901      	subs	r1, #1
 800f85c:	b289      	uxth	r1, r1
 800f85e:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800f860:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f864:	844c      	strh	r4, [r1, #34]	@ 0x22
 800f866:	e7ec      	b.n	800f842 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 800f868:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f86c:	f7ff bf4b 	b.w	800f706 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800f870 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f870:	b570      	push	{r4, r5, r6, lr}
 800f872:	2500      	movs	r5, #0
 800f874:	4295      	cmp	r5, r2
 800f876:	d011      	beq.n	800f89c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 800f878:	8bc4      	ldrh	r4, [r0, #30]
 800f87a:	f831 6b02 	ldrh.w	r6, [r1], #2
 800f87e:	4414      	add	r4, r2
 800f880:	3c01      	subs	r4, #1
 800f882:	1b64      	subs	r4, r4, r5
 800f884:	b2a4      	uxth	r4, r4
 800f886:	2c01      	cmp	r4, #1
 800f888:	bf88      	it	hi
 800f88a:	3c02      	subhi	r4, #2
 800f88c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800f890:	8b64      	ldrh	r4, [r4, #26]
 800f892:	42b4      	cmp	r4, r6
 800f894:	d117      	bne.n	800f8c6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 800f896:	3501      	adds	r5, #1
 800f898:	b2ad      	uxth	r5, r5
 800f89a:	e7eb      	b.n	800f874 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 800f89c:	2400      	movs	r4, #0
 800f89e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800f8a2:	4413      	add	r3, r2
 800f8a4:	b2a2      	uxth	r2, r4
 800f8a6:	429a      	cmp	r2, r3
 800f8a8:	da0f      	bge.n	800f8ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 800f8aa:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 800f8ac:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800f8b0:	4432      	add	r2, r6
 800f8b2:	b292      	uxth	r2, r2
 800f8b4:	2a09      	cmp	r2, #9
 800f8b6:	bf88      	it	hi
 800f8b8:	3a0a      	subhi	r2, #10
 800f8ba:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800f8be:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 800f8c0:	3401      	adds	r4, #1
 800f8c2:	42aa      	cmp	r2, r5
 800f8c4:	d0ee      	beq.n	800f8a4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 800f8c6:	2000      	movs	r0, #0
 800f8c8:	bd70      	pop	{r4, r5, r6, pc}
 800f8ca:	2001      	movs	r0, #1
 800f8cc:	e7fc      	b.n	800f8c8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0800f8ce <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800f8ce:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f8d2:	4605      	mov	r5, r0
 800f8d4:	4616      	mov	r6, r2
 800f8d6:	1c8c      	adds	r4, r1, #2
 800f8d8:	8809      	ldrh	r1, [r1, #0]
 800f8da:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800f8de:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800f8e2:	42b3      	cmp	r3, r6
 800f8e4:	d124      	bne.n	800f930 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800f8e6:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800f8ea:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800f8ee:	f001 070f 	and.w	r7, r1, #15
 800f8f2:	f8cd 8000 	str.w	r8, [sp]
 800f8f6:	464b      	mov	r3, r9
 800f8f8:	4652      	mov	r2, sl
 800f8fa:	4621      	mov	r1, r4
 800f8fc:	4628      	mov	r0, r5
 800f8fe:	f7ff ffb7 	bl	800f870 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800f902:	4683      	mov	fp, r0
 800f904:	b168      	cbz	r0, 800f922 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800f906:	eb0a 0109 	add.w	r1, sl, r9
 800f90a:	4441      	add	r1, r8
 800f90c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800f910:	463a      	mov	r2, r7
 800f912:	4649      	mov	r1, r9
 800f914:	4628      	mov	r0, r5
 800f916:	f7ff ff53 	bl	800f7c0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800f91a:	4658      	mov	r0, fp
 800f91c:	b003      	add	sp, #12
 800f91e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f922:	eb07 010a 	add.w	r1, r7, sl
 800f926:	4449      	add	r1, r9
 800f928:	4441      	add	r1, r8
 800f92a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800f92e:	e7d2      	b.n	800f8d6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800f930:	f04f 0b00 	mov.w	fp, #0
 800f934:	e7f1      	b.n	800f91a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800f936 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f936:	b570      	push	{r4, r5, r6, lr}
 800f938:	8810      	ldrh	r0, [r2, #0]
 800f93a:	4298      	cmp	r0, r3
 800f93c:	d817      	bhi.n	800f96e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f93e:	1e48      	subs	r0, r1, #1
 800f940:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f944:	4298      	cmp	r0, r3
 800f946:	d312      	bcc.n	800f96e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f948:	2400      	movs	r4, #0
 800f94a:	428c      	cmp	r4, r1
 800f94c:	d20f      	bcs.n	800f96e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f94e:	1860      	adds	r0, r4, r1
 800f950:	1040      	asrs	r0, r0, #1
 800f952:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f956:	0085      	lsls	r5, r0, #2
 800f958:	42b3      	cmp	r3, r6
 800f95a:	d902      	bls.n	800f962 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f95c:	3001      	adds	r0, #1
 800f95e:	b284      	uxth	r4, r0
 800f960:	e7f3      	b.n	800f94a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f962:	d201      	bcs.n	800f968 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800f964:	b281      	uxth	r1, r0
 800f966:	e7f0      	b.n	800f94a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f968:	442a      	add	r2, r5
 800f96a:	8850      	ldrh	r0, [r2, #2]
 800f96c:	bd70      	pop	{r4, r5, r6, pc}
 800f96e:	2000      	movs	r0, #0
 800f970:	e7fc      	b.n	800f96c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800f972 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800f972:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f976:	4604      	mov	r4, r0
 800f978:	260b      	movs	r6, #11
 800f97a:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 800f97c:	886f      	ldrh	r7, [r5, #2]
 800f97e:	087f      	lsrs	r7, r7, #1
 800f980:	3e01      	subs	r6, #1
 800f982:	d013      	beq.n	800f9ac <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800f984:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800f986:	462a      	mov	r2, r5
 800f988:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f98c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800f990:	4639      	mov	r1, r7
 800f992:	4643      	mov	r3, r8
 800f994:	4620      	mov	r0, r4
 800f996:	f7ff ffce 	bl	800f936 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800f99a:	b138      	cbz	r0, 800f9ac <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800f99c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800f9a0:	4642      	mov	r2, r8
 800f9a2:	4620      	mov	r0, r4
 800f9a4:	f7ff ff93 	bl	800f8ce <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800f9a8:	2800      	cmp	r0, #0
 800f9aa:	d1e9      	bne.n	800f980 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800f9ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f9b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800f9b0:	b570      	push	{r4, r5, r6, lr}
 800f9b2:	694a      	ldr	r2, [r1, #20]
 800f9b4:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800f9b6:	684b      	ldr	r3, [r1, #4]
 800f9b8:	1b54      	subs	r4, r2, r5
 800f9ba:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 800f9bc:	f000 8107 	beq.w	800fbce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21e>
 800f9c0:	1b9b      	subs	r3, r3, r6
 800f9c2:	d003      	beq.n	800f9cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f9c4:	2210      	movs	r2, #16
 800f9c6:	4363      	muls	r3, r4
 800f9c8:	fb93 f3f2 	sdiv	r3, r3, r2
 800f9cc:	680c      	ldr	r4, [r1, #0]
 800f9ce:	698a      	ldr	r2, [r1, #24]
 800f9d0:	1b65      	subs	r5, r4, r5
 800f9d2:	f000 80fe 	beq.w	800fbd2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x222>
 800f9d6:	1b92      	subs	r2, r2, r6
 800f9d8:	d003      	beq.n	800f9e2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f9da:	2410      	movs	r4, #16
 800f9dc:	436a      	muls	r2, r5
 800f9de:	fb92 f2f4 	sdiv	r2, r2, r4
 800f9e2:	1a9b      	subs	r3, r3, r2
 800f9e4:	ee07 3a90 	vmov	s15, r3
 800f9e8:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 800fc10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x260>
 800f9ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f9f0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800f9f4:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f9f8:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800f9fc:	460a      	mov	r2, r1
 800f9fe:	eeb1 6a43 	vneg.f32	s12, s6
 800fa02:	4603      	mov	r3, r0
 800fa04:	f100 040c 	add.w	r4, r0, #12
 800fa08:	edd2 7a02 	vldr	s15, [r2, #8]
 800fa0c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800fa10:	ece3 6a01 	vstmia	r3!, {s13}
 800fa14:	edd2 7a03 	vldr	s15, [r2, #12]
 800fa18:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fa1c:	edc3 7a02 	vstr	s15, [r3, #8]
 800fa20:	edd2 7a04 	vldr	s15, [r2, #16]
 800fa24:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fa28:	429c      	cmp	r4, r3
 800fa2a:	edc3 7a05 	vstr	s15, [r3, #20]
 800fa2e:	f102 0214 	add.w	r2, r2, #20
 800fa32:	d1e9      	bne.n	800fa08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800fa34:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fa36:	698b      	ldr	r3, [r1, #24]
 800fa38:	edd0 4a02 	vldr	s9, [r0, #8]
 800fa3c:	1a9b      	subs	r3, r3, r2
 800fa3e:	ee07 3a90 	vmov	s15, r3
 800fa42:	684b      	ldr	r3, [r1, #4]
 800fa44:	edd0 3a00 	vldr	s7, [r0]
 800fa48:	1a9b      	subs	r3, r3, r2
 800fa4a:	edd0 6a01 	vldr	s13, [r0, #4]
 800fa4e:	ee07 3a10 	vmov	s14, r3
 800fa52:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fa56:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800fa5a:	ee67 7a84 	vmul.f32	s15, s15, s8
 800fa5e:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800fa62:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fa66:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800fa6a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fa6e:	eee6 7a87 	vfma.f32	s15, s13, s14
 800fa72:	ee67 7a83 	vmul.f32	s15, s15, s6
 800fa76:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 800fa7a:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800fa7c:	694a      	ldr	r2, [r1, #20]
 800fa7e:	ed90 5a05 	vldr	s10, [r0, #20]
 800fa82:	1b13      	subs	r3, r2, r4
 800fa84:	ee07 3a10 	vmov	s14, r3
 800fa88:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fa8c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fa90:	680b      	ldr	r3, [r1, #0]
 800fa92:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800fa96:	1b1b      	subs	r3, r3, r4
 800fa98:	ee07 3a10 	vmov	s14, r3
 800fa9c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800faa0:	ee27 7a04 	vmul.f32	s14, s14, s8
 800faa4:	eee6 4a87 	vfma.f32	s9, s13, s14
 800faa8:	ee64 4a86 	vmul.f32	s9, s9, s12
 800faac:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 800fab0:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fab2:	698b      	ldr	r3, [r1, #24]
 800fab4:	ed90 2a03 	vldr	s4, [r0, #12]
 800fab8:	1a9b      	subs	r3, r3, r2
 800faba:	ee06 3a90 	vmov	s13, r3
 800fabe:	684b      	ldr	r3, [r1, #4]
 800fac0:	edd0 5a04 	vldr	s11, [r0, #16]
 800fac4:	1a9b      	subs	r3, r3, r2
 800fac6:	ee07 3a10 	vmov	s14, r3
 800faca:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800face:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800fad2:	ee66 6a84 	vmul.f32	s13, s13, s8
 800fad6:	ee32 5a45 	vsub.f32	s10, s4, s10
 800fada:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fade:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800fae2:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fae6:	eee5 6a87 	vfma.f32	s13, s11, s14
 800faea:	ee66 6a83 	vmul.f32	s13, s13, s6
 800faee:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 800faf2:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800faf4:	694a      	ldr	r2, [r1, #20]
 800faf6:	ed90 1a07 	vldr	s2, [r0, #28]
 800fafa:	1b13      	subs	r3, r2, r4
 800fafc:	ee07 3a10 	vmov	s14, r3
 800fb00:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb04:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb08:	680b      	ldr	r3, [r1, #0]
 800fb0a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800fb0e:	1b1b      	subs	r3, r3, r4
 800fb10:	ee07 3a10 	vmov	s14, r3
 800fb14:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb18:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb1c:	eea5 5a87 	vfma.f32	s10, s11, s14
 800fb20:	ee25 5a06 	vmul.f32	s10, s10, s12
 800fb24:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 800fb28:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fb2a:	698b      	ldr	r3, [r1, #24]
 800fb2c:	edd0 5a08 	vldr	s11, [r0, #32]
 800fb30:	1a9b      	subs	r3, r3, r2
 800fb32:	ee07 3a10 	vmov	s14, r3
 800fb36:	684b      	ldr	r3, [r1, #4]
 800fb38:	edd0 2a06 	vldr	s5, [r0, #24]
 800fb3c:	1a9b      	subs	r3, r3, r2
 800fb3e:	ee01 3a90 	vmov	s3, r3
 800fb42:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb46:	ee31 1a65 	vsub.f32	s2, s2, s11
 800fb4a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb4e:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800fb52:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800fb56:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800fb5a:	ee61 1a84 	vmul.f32	s3, s3, s8
 800fb5e:	eea1 7a21 	vfma.f32	s14, s2, s3
 800fb62:	ee27 7a03 	vmul.f32	s14, s14, s6
 800fb66:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800fb6a:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800fb6c:	694a      	ldr	r2, [r1, #20]
 800fb6e:	1b13      	subs	r3, r2, r4
 800fb70:	ee03 3a10 	vmov	s6, r3
 800fb74:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800fb78:	ee23 3a04 	vmul.f32	s6, s6, s8
 800fb7c:	680b      	ldr	r3, [r1, #0]
 800fb7e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800fb82:	1b1b      	subs	r3, r3, r4
 800fb84:	ee03 3a10 	vmov	s6, r3
 800fb88:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800fb8c:	ee23 4a04 	vmul.f32	s8, s6, s8
 800fb90:	eee1 5a04 	vfma.f32	s11, s2, s8
 800fb94:	ee25 6a86 	vmul.f32	s12, s11, s12
 800fb98:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800fb9c:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800fba0:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800fba4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fba8:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 800fbac:	dd13      	ble.n	800fbd6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800fbae:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fbb2:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800fbb6:	eee3 7a87 	vfma.f32	s15, s7, s14
 800fbba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800fbbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fbc2:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800fbc4:	dd15      	ble.n	800fbf2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800fbc6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fbca:	6403      	str	r3, [r0, #64]	@ 0x40
 800fbcc:	bd70      	pop	{r4, r5, r6, pc}
 800fbce:	4623      	mov	r3, r4
 800fbd0:	e6fc      	b.n	800f9cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800fbd2:	462a      	mov	r2, r5
 800fbd4:	e705      	b.n	800f9e2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800fbd6:	d502      	bpl.n	800fbde <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22e>
 800fbd8:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800fbdc:	e7e9      	b.n	800fbb2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x202>
 800fbde:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800fbe2:	eea3 2a85 	vfma.f32	s4, s7, s10
 800fbe6:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800fbea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fbee:	dade      	bge.n	800fbae <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fe>
 800fbf0:	e7f2      	b.n	800fbd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x228>
 800fbf2:	d502      	bpl.n	800fbfa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x24a>
 800fbf4:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800fbf8:	e7e7      	b.n	800fbca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21a>
 800fbfa:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800fbfe:	eee3 4a86 	vfma.f32	s9, s7, s12
 800fc02:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800fc06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc0a:	dadc      	bge.n	800fbc6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x216>
 800fc0c:	e7f2      	b.n	800fbf4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x244>
 800fc0e:	bf00      	nop
 800fc10:	3d800000 	.word	0x3d800000

0800fc14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800fc14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fc18:	2714      	movs	r7, #20
 800fc1a:	435f      	muls	r7, r3
 800fc1c:	eb02 0c07 	add.w	ip, r2, r7
 800fc20:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800fc24:	f115 0e0f 	adds.w	lr, r5, #15
 800fc28:	f100 80a2 	bmi.w	800fd70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800fc2c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800fc30:	2614      	movs	r6, #20
 800fc32:	9c08      	ldr	r4, [sp, #32]
 800fc34:	f8c0 e014 	str.w	lr, [r0, #20]
 800fc38:	4366      	muls	r6, r4
 800fc3a:	eb02 0806 	add.w	r8, r2, r6
 800fc3e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800fc42:	f115 040f 	adds.w	r4, r5, #15
 800fc46:	f100 809f 	bmi.w	800fd88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 800fc4a:	1124      	asrs	r4, r4, #4
 800fc4c:	eba4 040e 	sub.w	r4, r4, lr
 800fc50:	6184      	str	r4, [r0, #24]
 800fc52:	2c00      	cmp	r4, #0
 800fc54:	f000 808a 	beq.w	800fd6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 800fc58:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800fc5c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800fc60:	5995      	ldr	r5, [r2, r6]
 800fc62:	eba4 0809 	sub.w	r8, r4, r9
 800fc66:	59d4      	ldr	r4, [r2, r7]
 800fc68:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800fc6c:	eba5 0a04 	sub.w	sl, r5, r4
 800fc70:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800fc74:	fb0e fe05 	mul.w	lr, lr, r5
 800fc78:	fb0a ee19 	mls	lr, sl, r9, lr
 800fc7c:	fb08 e404 	mla	r4, r8, r4, lr
 800fc80:	3c01      	subs	r4, #1
 800fc82:	19a4      	adds	r4, r4, r6
 800fc84:	f100 808c 	bmi.w	800fda0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 800fc88:	fb94 fef6 	sdiv	lr, r4, r6
 800fc8c:	fb06 441e 	mls	r4, r6, lr, r4
 800fc90:	f8c0 e000 	str.w	lr, [r0]
 800fc94:	6104      	str	r4, [r0, #16]
 800fc96:	2d00      	cmp	r5, #0
 800fc98:	f2c0 8095 	blt.w	800fdc6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 800fc9c:	fb95 f4f6 	sdiv	r4, r5, r6
 800fca0:	fb06 5514 	mls	r5, r6, r4, r5
 800fca4:	6044      	str	r4, [r0, #4]
 800fca6:	6085      	str	r5, [r0, #8]
 800fca8:	60c6      	str	r6, [r0, #12]
 800fcaa:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800fcae:	6945      	ldr	r5, [r0, #20]
 800fcb0:	59d2      	ldr	r2, [r2, r7]
 800fcb2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800fcb6:	ee07 4a10 	vmov	s14, r4
 800fcba:	6804      	ldr	r4, [r0, #0]
 800fcbc:	eddf 6a4a 	vldr	s13, [pc, #296]	@ 800fde8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 800fcc0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800fcc4:	ee07 2a90 	vmov	s15, r2
 800fcc8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fccc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fcd0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800fcd4:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800fcd8:	ee27 7a26 	vmul.f32	s14, s14, s13
 800fcdc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fce0:	edd3 6a00 	vldr	s13, [r3]
 800fce4:	eee6 6a07 	vfma.f32	s13, s12, s14
 800fce8:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 800fcec:	eee6 6a27 	vfma.f32	s13, s12, s15
 800fcf0:	edc0 6a07 	vstr	s13, [r0, #28]
 800fcf4:	edd0 6a01 	vldr	s13, [r0, #4]
 800fcf8:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 800fcfc:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800fd00:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800fd04:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800fd08:	ed80 6a08 	vstr	s12, [r0, #32]
 800fd0c:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 800fd0e:	6242      	str	r2, [r0, #36]	@ 0x24
 800fd10:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 800fd14:	ed93 6a03 	vldr	s12, [r3, #12]
 800fd18:	eea5 6a87 	vfma.f32	s12, s11, s14
 800fd1c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800fd20:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800fd24:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 800fd28:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800fd2c:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 800fd30:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800fd34:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 800fd38:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fd3a:	6302      	str	r2, [r0, #48]	@ 0x30
 800fd3c:	ed93 6a06 	vldr	s12, [r3, #24]
 800fd40:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 800fd44:	eea5 6a87 	vfma.f32	s12, s11, s14
 800fd48:	eeb0 7a46 	vmov.f32	s14, s12
 800fd4c:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 800fd50:	eea6 7a27 	vfma.f32	s14, s12, s15
 800fd54:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800fd58:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 800fd5c:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 800fd60:	eee6 7a87 	vfma.f32	s15, s13, s14
 800fd64:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 800fd68:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 800fd6a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800fd6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fd70:	2410      	movs	r4, #16
 800fd72:	f1c5 0501 	rsb	r5, r5, #1
 800fd76:	f015 050f 	ands.w	r5, r5, #15
 800fd7a:	fb9e fef4 	sdiv	lr, lr, r4
 800fd7e:	bf18      	it	ne
 800fd80:	2501      	movne	r5, #1
 800fd82:	ebae 0e05 	sub.w	lr, lr, r5
 800fd86:	e753      	b.n	800fc30 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 800fd88:	f04f 0910 	mov.w	r9, #16
 800fd8c:	f1c5 0501 	rsb	r5, r5, #1
 800fd90:	f015 050f 	ands.w	r5, r5, #15
 800fd94:	fb94 f4f9 	sdiv	r4, r4, r9
 800fd98:	bf18      	it	ne
 800fd9a:	2501      	movne	r5, #1
 800fd9c:	1b64      	subs	r4, r4, r5
 800fd9e:	e755      	b.n	800fc4c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 800fda0:	4264      	negs	r4, r4
 800fda2:	fb94 fef6 	sdiv	lr, r4, r6
 800fda6:	fb06 441e 	mls	r4, r6, lr, r4
 800fdaa:	f1ce 0800 	rsb	r8, lr, #0
 800fdae:	f8c0 8000 	str.w	r8, [r0]
 800fdb2:	6104      	str	r4, [r0, #16]
 800fdb4:	2c00      	cmp	r4, #0
 800fdb6:	f43f af6e 	beq.w	800fc96 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 800fdba:	ea6f 0e0e 	mvn.w	lr, lr
 800fdbe:	1b34      	subs	r4, r6, r4
 800fdc0:	f8c0 e000 	str.w	lr, [r0]
 800fdc4:	e766      	b.n	800fc94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 800fdc6:	426d      	negs	r5, r5
 800fdc8:	fb95 f4f6 	sdiv	r4, r5, r6
 800fdcc:	fb06 5514 	mls	r5, r6, r4, r5
 800fdd0:	f1c4 0e00 	rsb	lr, r4, #0
 800fdd4:	f8c0 e004 	str.w	lr, [r0, #4]
 800fdd8:	6085      	str	r5, [r0, #8]
 800fdda:	2d00      	cmp	r5, #0
 800fddc:	f43f af64 	beq.w	800fca8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800fde0:	43e4      	mvns	r4, r4
 800fde2:	1b75      	subs	r5, r6, r5
 800fde4:	6044      	str	r4, [r0, #4]
 800fde6:	e75e      	b.n	800fca6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 800fde8:	3d800000 	.word	0x3d800000

0800fdec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800fdec:	4b01      	ldr	r3, [pc, #4]	@ (800fdf4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800fdee:	6018      	str	r0, [r3, #0]
 800fdf0:	4770      	bx	lr
 800fdf2:	bf00      	nop
 800fdf4:	20082f24 	.word	0x20082f24

0800fdf8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800fdf8:	4b06      	ldr	r3, [pc, #24]	@ (800fe14 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800fdfa:	881a      	ldrh	r2, [r3, #0]
 800fdfc:	4282      	cmp	r2, r0
 800fdfe:	d807      	bhi.n	800fe10 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800fe00:	4b05      	ldr	r3, [pc, #20]	@ (800fe18 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800fe02:	881b      	ldrh	r3, [r3, #0]
 800fe04:	4413      	add	r3, r2
 800fe06:	4298      	cmp	r0, r3
 800fe08:	bfac      	ite	ge
 800fe0a:	2000      	movge	r0, #0
 800fe0c:	2001      	movlt	r0, #1
 800fe0e:	4770      	bx	lr
 800fe10:	2000      	movs	r0, #0
 800fe12:	4770      	bx	lr
 800fe14:	20082f44 	.word	0x20082f44
 800fe18:	20082f48 	.word	0x20082f48

0800fe1c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800fe1c:	b508      	push	{r3, lr}
 800fe1e:	4601      	mov	r1, r0
 800fe20:	f7ff ffea 	bl	800fdf8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800fe24:	b118      	cbz	r0, 800fe2e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800fe26:	4b02      	ldr	r3, [pc, #8]	@ (800fe30 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800fe28:	681b      	ldr	r3, [r3, #0]
 800fe2a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800fe2e:	bd08      	pop	{r3, pc}
 800fe30:	20082f28 	.word	0x20082f28

0800fe34 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800fe34:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fe36:	4c24      	ldr	r4, [pc, #144]	@ (800fec8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800fe38:	6823      	ldr	r3, [r4, #0]
 800fe3a:	2b00      	cmp	r3, #0
 800fe3c:	d042      	beq.n	800fec4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800fe3e:	4a23      	ldr	r2, [pc, #140]	@ (800fecc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800fe40:	4d23      	ldr	r5, [pc, #140]	@ (800fed0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800fe42:	8811      	ldrh	r1, [r2, #0]
 800fe44:	f8b5 c000 	ldrh.w	ip, [r5]
 800fe48:	4822      	ldr	r0, [pc, #136]	@ (800fed4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800fe4a:	4461      	add	r1, ip
 800fe4c:	1c4a      	adds	r2, r1, #1
 800fe4e:	f022 0201 	bic.w	r2, r2, #1
 800fe52:	008f      	lsls	r7, r1, #2
 800fe54:	0412      	lsls	r2, r2, #16
 800fe56:	19de      	adds	r6, r3, r7
 800fe58:	0c12      	lsrs	r2, r2, #16
 800fe5a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800fe5e:	6006      	str	r6, [r0, #0]
 800fe60:	4e1d      	ldr	r6, [pc, #116]	@ (800fed8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800fe62:	19da      	adds	r2, r3, r7
 800fe64:	6032      	str	r2, [r6, #0]
 800fe66:	220e      	movs	r2, #14
 800fe68:	fb02 f20c 	mul.w	r2, r2, ip
 800fe6c:	3203      	adds	r2, #3
 800fe6e:	f022 0203 	bic.w	r2, r2, #3
 800fe72:	443a      	add	r2, r7
 800fe74:	4f19      	ldr	r7, [pc, #100]	@ (800fedc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800fe76:	4413      	add	r3, r2
 800fe78:	603b      	str	r3, [r7, #0]
 800fe7a:	2300      	movs	r3, #0
 800fe7c:	4f18      	ldr	r7, [pc, #96]	@ (800fee0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800fe7e:	469c      	mov	ip, r3
 800fe80:	803b      	strh	r3, [r7, #0]
 800fe82:	4f18      	ldr	r7, [pc, #96]	@ (800fee4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800fe84:	683f      	ldr	r7, [r7, #0]
 800fe86:	1aba      	subs	r2, r7, r2
 800fe88:	4f17      	ldr	r7, [pc, #92]	@ (800fee8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800fe8a:	603a      	str	r2, [r7, #0]
 800fe8c:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 800fe90:	4a16      	ldr	r2, [pc, #88]	@ (800feec <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800fe92:	8013      	strh	r3, [r2, #0]
 800fe94:	428b      	cmp	r3, r1
 800fe96:	d10d      	bne.n	800feb4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800fe98:	2300      	movs	r3, #0
 800fe9a:	240e      	movs	r4, #14
 800fe9c:	882d      	ldrh	r5, [r5, #0]
 800fe9e:	6830      	ldr	r0, [r6, #0]
 800fea0:	429d      	cmp	r5, r3
 800fea2:	d90f      	bls.n	800fec4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800fea4:	fb04 0203 	mla	r2, r4, r3, r0
 800fea8:	7b11      	ldrb	r1, [r2, #12]
 800feaa:	3301      	adds	r3, #1
 800feac:	f36f 1145 	bfc	r1, #5, #1
 800feb0:	7311      	strb	r1, [r2, #12]
 800feb2:	e7f5      	b.n	800fea0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800feb4:	6822      	ldr	r2, [r4, #0]
 800feb6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800feba:	6802      	ldr	r2, [r0, #0]
 800febc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800fec0:	3301      	adds	r3, #1
 800fec2:	e7e7      	b.n	800fe94 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800fec4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fec6:	bf00      	nop
 800fec8:	20082f28 	.word	0x20082f28
 800fecc:	20082f44 	.word	0x20082f44
 800fed0:	20082f48 	.word	0x20082f48
 800fed4:	20082f3c 	.word	0x20082f3c
 800fed8:	20082f2c 	.word	0x20082f2c
 800fedc:	20082f34 	.word	0x20082f34
 800fee0:	20082f46 	.word	0x20082f46
 800fee4:	20082f30 	.word	0x20082f30
 800fee8:	20082f40 	.word	0x20082f40
 800feec:	20082f38 	.word	0x20082f38

0800fef0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800fef0:	4b06      	ldr	r3, [pc, #24]	@ (800ff0c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 800fef2:	681b      	ldr	r3, [r3, #0]
 800fef4:	b943      	cbnz	r3, 800ff08 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800fef6:	b139      	cbz	r1, 800ff08 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800fef8:	4b05      	ldr	r3, [pc, #20]	@ (800ff10 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 800fefa:	801a      	strh	r2, [r3, #0]
 800fefc:	4b05      	ldr	r3, [pc, #20]	@ (800ff14 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 800fefe:	6019      	str	r1, [r3, #0]
 800ff00:	4b05      	ldr	r3, [pc, #20]	@ (800ff18 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 800ff02:	6018      	str	r0, [r3, #0]
 800ff04:	f7ff bf96 	b.w	800fe34 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800ff08:	4770      	bx	lr
 800ff0a:	bf00      	nop
 800ff0c:	20082f34 	.word	0x20082f34
 800ff10:	20082f48 	.word	0x20082f48
 800ff14:	20082f30 	.word	0x20082f30
 800ff18:	20082f28 	.word	0x20082f28

0800ff1c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800ff1c:	b470      	push	{r4, r5, r6}
 800ff1e:	4c07      	ldr	r4, [pc, #28]	@ (800ff3c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800ff20:	4605      	mov	r5, r0
 800ff22:	6826      	ldr	r6, [r4, #0]
 800ff24:	4610      	mov	r0, r2
 800ff26:	9a03      	ldr	r2, [sp, #12]
 800ff28:	b936      	cbnz	r6, 800ff38 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800ff2a:	6025      	str	r5, [r4, #0]
 800ff2c:	4c04      	ldr	r4, [pc, #16]	@ (800ff40 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800ff2e:	8021      	strh	r1, [r4, #0]
 800ff30:	bc70      	pop	{r4, r5, r6}
 800ff32:	4619      	mov	r1, r3
 800ff34:	f7ff bfdc 	b.w	800fef0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800ff38:	bc70      	pop	{r4, r5, r6}
 800ff3a:	4770      	bx	lr
 800ff3c:	20082f4c 	.word	0x20082f4c
 800ff40:	20082f44 	.word	0x20082f44

0800ff44 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800ff44:	4a12      	ldr	r2, [pc, #72]	@ (800ff90 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 800ff46:	8803      	ldrh	r3, [r0, #0]
 800ff48:	8812      	ldrh	r2, [r2, #0]
 800ff4a:	4293      	cmp	r3, r2
 800ff4c:	d207      	bcs.n	800ff5e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 800ff4e:	2114      	movs	r1, #20
 800ff50:	4a10      	ldr	r2, [pc, #64]	@ (800ff94 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 800ff52:	6812      	ldr	r2, [r2, #0]
 800ff54:	fb01 2303 	mla	r3, r1, r3, r2
 800ff58:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 800ff5c:	4770      	bx	lr
 800ff5e:	490e      	ldr	r1, [pc, #56]	@ (800ff98 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800ff60:	8809      	ldrh	r1, [r1, #0]
 800ff62:	4411      	add	r1, r2
 800ff64:	428b      	cmp	r3, r1
 800ff66:	da04      	bge.n	800ff72 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 800ff68:	1a9b      	subs	r3, r3, r2
 800ff6a:	4a0c      	ldr	r2, [pc, #48]	@ (800ff9c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800ff6c:	210e      	movs	r1, #14
 800ff6e:	6812      	ldr	r2, [r2, #0]
 800ff70:	e7f0      	b.n	800ff54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 800ff72:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800ff76:	4293      	cmp	r3, r2
 800ff78:	d108      	bne.n	800ff8c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 800ff7a:	4b09      	ldr	r3, [pc, #36]	@ (800ffa0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800ff7c:	781b      	ldrb	r3, [r3, #0]
 800ff7e:	b91b      	cbnz	r3, 800ff88 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 800ff80:	4b08      	ldr	r3, [pc, #32]	@ (800ffa4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800ff82:	f9b3 0000 	ldrsh.w	r0, [r3]
 800ff86:	4770      	bx	lr
 800ff88:	4b07      	ldr	r3, [pc, #28]	@ (800ffa8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800ff8a:	e7fa      	b.n	800ff82 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 800ff8c:	2000      	movs	r0, #0
 800ff8e:	4770      	bx	lr
 800ff90:	20082f44 	.word	0x20082f44
 800ff94:	20082f4c 	.word	0x20082f4c
 800ff98:	20082f48 	.word	0x20082f48
 800ff9c:	20082f2c 	.word	0x20082f2c
 800ffa0:	20082ebc 	.word	0x20082ebc
 800ffa4:	20082ebe 	.word	0x20082ebe
 800ffa8:	20082ec0 	.word	0x20082ec0

0800ffac <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800ffac:	4a12      	ldr	r2, [pc, #72]	@ (800fff8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 800ffae:	8803      	ldrh	r3, [r0, #0]
 800ffb0:	8812      	ldrh	r2, [r2, #0]
 800ffb2:	4293      	cmp	r3, r2
 800ffb4:	d207      	bcs.n	800ffc6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 800ffb6:	2114      	movs	r1, #20
 800ffb8:	4a10      	ldr	r2, [pc, #64]	@ (800fffc <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 800ffba:	6812      	ldr	r2, [r2, #0]
 800ffbc:	fb01 2303 	mla	r3, r1, r3, r2
 800ffc0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 800ffc4:	4770      	bx	lr
 800ffc6:	490e      	ldr	r1, [pc, #56]	@ (8010000 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800ffc8:	8809      	ldrh	r1, [r1, #0]
 800ffca:	4411      	add	r1, r2
 800ffcc:	428b      	cmp	r3, r1
 800ffce:	da04      	bge.n	800ffda <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 800ffd0:	1a9b      	subs	r3, r3, r2
 800ffd2:	4a0c      	ldr	r2, [pc, #48]	@ (8010004 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800ffd4:	210e      	movs	r1, #14
 800ffd6:	6812      	ldr	r2, [r2, #0]
 800ffd8:	e7f0      	b.n	800ffbc <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 800ffda:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800ffde:	4293      	cmp	r3, r2
 800ffe0:	d108      	bne.n	800fff4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 800ffe2:	4b09      	ldr	r3, [pc, #36]	@ (8010008 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800ffe4:	781b      	ldrb	r3, [r3, #0]
 800ffe6:	b91b      	cbnz	r3, 800fff0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 800ffe8:	4b08      	ldr	r3, [pc, #32]	@ (801000c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800ffea:	f9b3 0000 	ldrsh.w	r0, [r3]
 800ffee:	4770      	bx	lr
 800fff0:	4b07      	ldr	r3, [pc, #28]	@ (8010010 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800fff2:	e7fa      	b.n	800ffea <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 800fff4:	2000      	movs	r0, #0
 800fff6:	4770      	bx	lr
 800fff8:	20082f44 	.word	0x20082f44
 800fffc:	20082f4c 	.word	0x20082f4c
 8010000:	20082f48 	.word	0x20082f48
 8010004:	20082f2c 	.word	0x20082f2c
 8010008:	20082ebc 	.word	0x20082ebc
 801000c:	20082ec0 	.word	0x20082ec0
 8010010:	20082ebe 	.word	0x20082ebe

08010014 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8010014:	b530      	push	{r4, r5, lr}
 8010016:	4a22      	ldr	r2, [pc, #136]	@ (80100a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8010018:	880b      	ldrh	r3, [r1, #0]
 801001a:	8812      	ldrh	r2, [r2, #0]
 801001c:	4293      	cmp	r3, r2
 801001e:	d213      	bcs.n	8010048 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8010020:	2114      	movs	r1, #20
 8010022:	4a20      	ldr	r2, [pc, #128]	@ (80100a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8010024:	6812      	ldr	r2, [r2, #0]
 8010026:	fb01 2303 	mla	r3, r1, r3, r2
 801002a:	8a1a      	ldrh	r2, [r3, #16]
 801002c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8010030:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8010034:	8a5b      	ldrh	r3, [r3, #18]
 8010036:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801003a:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801003e:	8004      	strh	r4, [r0, #0]
 8010040:	8041      	strh	r1, [r0, #2]
 8010042:	8082      	strh	r2, [r0, #4]
 8010044:	80c3      	strh	r3, [r0, #6]
 8010046:	e024      	b.n	8010092 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8010048:	4917      	ldr	r1, [pc, #92]	@ (80100a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801004a:	8809      	ldrh	r1, [r1, #0]
 801004c:	4411      	add	r1, r2
 801004e:	428b      	cmp	r3, r1
 8010050:	da10      	bge.n	8010074 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8010052:	1a9b      	subs	r3, r3, r2
 8010054:	220e      	movs	r2, #14
 8010056:	4353      	muls	r3, r2
 8010058:	4a14      	ldr	r2, [pc, #80]	@ (80100ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801005a:	6811      	ldr	r1, [r2, #0]
 801005c:	18ca      	adds	r2, r1, r3
 801005e:	5ecd      	ldrsh	r5, [r1, r3]
 8010060:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8010064:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8010068:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 801006c:	8005      	strh	r5, [r0, #0]
 801006e:	8044      	strh	r4, [r0, #2]
 8010070:	8081      	strh	r1, [r0, #4]
 8010072:	e7e7      	b.n	8010044 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8010074:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010078:	4293      	cmp	r3, r2
 801007a:	d10b      	bne.n	8010094 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 801007c:	4b0c      	ldr	r3, [pc, #48]	@ (80100b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801007e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010082:	4b0c      	ldr	r3, [pc, #48]	@ (80100b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8010084:	8081      	strh	r1, [r0, #4]
 8010086:	f9b3 2000 	ldrsh.w	r2, [r3]
 801008a:	2300      	movs	r3, #0
 801008c:	80c2      	strh	r2, [r0, #6]
 801008e:	8003      	strh	r3, [r0, #0]
 8010090:	8043      	strh	r3, [r0, #2]
 8010092:	bd30      	pop	{r4, r5, pc}
 8010094:	2300      	movs	r3, #0
 8010096:	8003      	strh	r3, [r0, #0]
 8010098:	8043      	strh	r3, [r0, #2]
 801009a:	8083      	strh	r3, [r0, #4]
 801009c:	e7d2      	b.n	8010044 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801009e:	bf00      	nop
 80100a0:	20082f44 	.word	0x20082f44
 80100a4:	20082f4c 	.word	0x20082f4c
 80100a8:	20082f48 	.word	0x20082f48
 80100ac:	20082f2c 	.word	0x20082f2c
 80100b0:	20082eb8 	.word	0x20082eb8
 80100b4:	20082eba 	.word	0x20082eba

080100b8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80100b8:	4a12      	ldr	r2, [pc, #72]	@ (8010104 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80100ba:	8803      	ldrh	r3, [r0, #0]
 80100bc:	8811      	ldrh	r1, [r2, #0]
 80100be:	428b      	cmp	r3, r1
 80100c0:	d20b      	bcs.n	80100da <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80100c2:	4a11      	ldr	r2, [pc, #68]	@ (8010108 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80100c4:	6812      	ldr	r2, [r2, #0]
 80100c6:	b112      	cbz	r2, 80100ce <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80100c8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80100cc:	b9c0      	cbnz	r0, 8010100 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80100ce:	4a0f      	ldr	r2, [pc, #60]	@ (801010c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80100d0:	6811      	ldr	r1, [r2, #0]
 80100d2:	2214      	movs	r2, #20
 80100d4:	4353      	muls	r3, r2
 80100d6:	58c8      	ldr	r0, [r1, r3]
 80100d8:	4770      	bx	lr
 80100da:	4a0d      	ldr	r2, [pc, #52]	@ (8010110 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80100dc:	8812      	ldrh	r2, [r2, #0]
 80100de:	440a      	add	r2, r1
 80100e0:	4293      	cmp	r3, r2
 80100e2:	da04      	bge.n	80100ee <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80100e4:	4a08      	ldr	r2, [pc, #32]	@ (8010108 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80100e6:	6812      	ldr	r2, [r2, #0]
 80100e8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80100ec:	4770      	bx	lr
 80100ee:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80100f2:	4293      	cmp	r3, r2
 80100f4:	d103      	bne.n	80100fe <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80100f6:	4b07      	ldr	r3, [pc, #28]	@ (8010114 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80100f8:	681b      	ldr	r3, [r3, #0]
 80100fa:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 80100fc:	4770      	bx	lr
 80100fe:	2000      	movs	r0, #0
 8010100:	4770      	bx	lr
 8010102:	bf00      	nop
 8010104:	20082f44 	.word	0x20082f44
 8010108:	20082f28 	.word	0x20082f28
 801010c:	20082f4c 	.word	0x20082f4c
 8010110:	20082f48 	.word	0x20082f48
 8010114:	20082ec4 	.word	0x20082ec4

08010118 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8010118:	4b24      	ldr	r3, [pc, #144]	@ (80101ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801011a:	8802      	ldrh	r2, [r0, #0]
 801011c:	8818      	ldrh	r0, [r3, #0]
 801011e:	4282      	cmp	r2, r0
 8010120:	d221      	bcs.n	8010166 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8010122:	4b23      	ldr	r3, [pc, #140]	@ (80101b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8010124:	6819      	ldr	r1, [r3, #0]
 8010126:	2314      	movs	r3, #20
 8010128:	fb03 1302 	mla	r3, r3, r2, r1
 801012c:	6858      	ldr	r0, [r3, #4]
 801012e:	2800      	cmp	r0, #0
 8010130:	d03a      	beq.n	80101a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8010132:	4920      	ldr	r1, [pc, #128]	@ (80101b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8010134:	6809      	ldr	r1, [r1, #0]
 8010136:	2900      	cmp	r1, #0
 8010138:	d036      	beq.n	80101a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801013a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801013e:	2900      	cmp	r1, #0
 8010140:	d032      	beq.n	80101a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8010142:	891a      	ldrh	r2, [r3, #8]
 8010144:	8958      	ldrh	r0, [r3, #10]
 8010146:	4350      	muls	r0, r2
 8010148:	7c5a      	ldrb	r2, [r3, #17]
 801014a:	7cdb      	ldrb	r3, [r3, #19]
 801014c:	0952      	lsrs	r2, r2, #5
 801014e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8010152:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8010156:	2b0b      	cmp	r3, #11
 8010158:	bf18      	it	ne
 801015a:	0040      	lslne	r0, r0, #1
 801015c:	3003      	adds	r0, #3
 801015e:	f020 0003 	bic.w	r0, r0, #3
 8010162:	4408      	add	r0, r1
 8010164:	4770      	bx	lr
 8010166:	4b14      	ldr	r3, [pc, #80]	@ (80101b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8010168:	881b      	ldrh	r3, [r3, #0]
 801016a:	4403      	add	r3, r0
 801016c:	429a      	cmp	r2, r3
 801016e:	da1a      	bge.n	80101a6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010170:	210e      	movs	r1, #14
 8010172:	4b12      	ldr	r3, [pc, #72]	@ (80101bc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8010174:	1a10      	subs	r0, r2, r0
 8010176:	681b      	ldr	r3, [r3, #0]
 8010178:	fb01 3000 	mla	r0, r1, r0, r3
 801017c:	7b03      	ldrb	r3, [r0, #12]
 801017e:	f003 031f 	and.w	r3, r3, #31
 8010182:	2b0b      	cmp	r3, #11
 8010184:	d10b      	bne.n	801019e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8010186:	8903      	ldrh	r3, [r0, #8]
 8010188:	8940      	ldrh	r0, [r0, #10]
 801018a:	4358      	muls	r0, r3
 801018c:	4b09      	ldr	r3, [pc, #36]	@ (80101b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801018e:	3003      	adds	r0, #3
 8010190:	6819      	ldr	r1, [r3, #0]
 8010192:	f020 0303 	bic.w	r3, r0, #3
 8010196:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801019a:	4418      	add	r0, r3
 801019c:	4770      	bx	lr
 801019e:	2b0d      	cmp	r3, #13
 80101a0:	d101      	bne.n	80101a6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80101a2:	300d      	adds	r0, #13
 80101a4:	4770      	bx	lr
 80101a6:	2000      	movs	r0, #0
 80101a8:	4770      	bx	lr
 80101aa:	bf00      	nop
 80101ac:	20082f44 	.word	0x20082f44
 80101b0:	20082f4c 	.word	0x20082f4c
 80101b4:	20082f28 	.word	0x20082f28
 80101b8:	20082f48 	.word	0x20082f48
 80101bc:	20082f2c 	.word	0x20082f2c

080101c0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80101c0:	b510      	push	{r4, lr}
 80101c2:	4a17      	ldr	r2, [pc, #92]	@ (8010220 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80101c4:	8803      	ldrh	r3, [r0, #0]
 80101c6:	8812      	ldrh	r2, [r2, #0]
 80101c8:	4293      	cmp	r3, r2
 80101ca:	d20c      	bcs.n	80101e6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80101cc:	2114      	movs	r1, #20
 80101ce:	4a15      	ldr	r2, [pc, #84]	@ (8010224 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80101d0:	6812      	ldr	r2, [r2, #0]
 80101d2:	fb01 2303 	mla	r3, r1, r3, r2
 80101d6:	7c58      	ldrb	r0, [r3, #17]
 80101d8:	0942      	lsrs	r2, r0, #5
 80101da:	7cd8      	ldrb	r0, [r3, #19]
 80101dc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80101e0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80101e4:	bd10      	pop	{r4, pc}
 80101e6:	4910      	ldr	r1, [pc, #64]	@ (8010228 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80101e8:	8809      	ldrh	r1, [r1, #0]
 80101ea:	4411      	add	r1, r2
 80101ec:	428b      	cmp	r3, r1
 80101ee:	da09      	bge.n	8010204 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80101f0:	210e      	movs	r1, #14
 80101f2:	1a9b      	subs	r3, r3, r2
 80101f4:	4a0d      	ldr	r2, [pc, #52]	@ (801022c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80101f6:	6812      	ldr	r2, [r2, #0]
 80101f8:	fb01 2303 	mla	r3, r1, r3, r2
 80101fc:	7b18      	ldrb	r0, [r3, #12]
 80101fe:	f000 001f 	and.w	r0, r0, #31
 8010202:	e7ef      	b.n	80101e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8010204:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010208:	4293      	cmp	r3, r2
 801020a:	d106      	bne.n	801021a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801020c:	f7fa ffdc 	bl	800b1c8 <_ZN8touchgfx3HAL3lcdEv>
 8010210:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010214:	6803      	ldr	r3, [r0, #0]
 8010216:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010218:	4718      	bx	r3
 801021a:	2000      	movs	r0, #0
 801021c:	e7e2      	b.n	80101e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801021e:	bf00      	nop
 8010220:	20082f44 	.word	0x20082f44
 8010224:	20082f4c 	.word	0x20082f4c
 8010228:	20082f48 	.word	0x20082f48
 801022c:	20082f2c 	.word	0x20082f2c

08010230 <CRC_Lock>:
 8010230:	b530      	push	{r4, r5, lr}
 8010232:	4a2d      	ldr	r2, [pc, #180]	@ (80102e8 <CRC_Lock+0xb8>)
 8010234:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8010238:	6813      	ldr	r3, [r2, #0]
 801023a:	f023 0301 	bic.w	r3, r3, #1
 801023e:	6013      	str	r3, [r2, #0]
 8010240:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8010244:	4b29      	ldr	r3, [pc, #164]	@ (80102ec <CRC_Lock+0xbc>)
 8010246:	681c      	ldr	r4, [r3, #0]
 8010248:	4014      	ands	r4, r2
 801024a:	42ac      	cmp	r4, r5
 801024c:	d005      	beq.n	801025a <CRC_Lock+0x2a>
 801024e:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8010252:	681c      	ldr	r4, [r3, #0]
 8010254:	4014      	ands	r4, r2
 8010256:	42ac      	cmp	r4, r5
 8010258:	d125      	bne.n	80102a6 <CRC_Lock+0x76>
 801025a:	4b25      	ldr	r3, [pc, #148]	@ (80102f0 <CRC_Lock+0xc0>)
 801025c:	681b      	ldr	r3, [r3, #0]
 801025e:	2b00      	cmp	r3, #0
 8010260:	d139      	bne.n	80102d6 <CRC_Lock+0xa6>
 8010262:	4b24      	ldr	r3, [pc, #144]	@ (80102f4 <CRC_Lock+0xc4>)
 8010264:	681a      	ldr	r2, [r3, #0]
 8010266:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801026a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 801026e:	d00d      	beq.n	801028c <CRC_Lock+0x5c>
 8010270:	f240 4483 	movw	r4, #1155	@ 0x483
 8010274:	681a      	ldr	r2, [r3, #0]
 8010276:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801027a:	42a2      	cmp	r2, r4
 801027c:	d006      	beq.n	801028c <CRC_Lock+0x5c>
 801027e:	f240 4285 	movw	r2, #1157	@ 0x485
 8010282:	681b      	ldr	r3, [r3, #0]
 8010284:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8010288:	4293      	cmp	r3, r2
 801028a:	d124      	bne.n	80102d6 <CRC_Lock+0xa6>
 801028c:	2201      	movs	r2, #1
 801028e:	4b1a      	ldr	r3, [pc, #104]	@ (80102f8 <CRC_Lock+0xc8>)
 8010290:	601a      	str	r2, [r3, #0]
 8010292:	681a      	ldr	r2, [r3, #0]
 8010294:	2a00      	cmp	r2, #0
 8010296:	d1fc      	bne.n	8010292 <CRC_Lock+0x62>
 8010298:	4b18      	ldr	r3, [pc, #96]	@ (80102fc <CRC_Lock+0xcc>)
 801029a:	6018      	str	r0, [r3, #0]
 801029c:	6818      	ldr	r0, [r3, #0]
 801029e:	1a43      	subs	r3, r0, r1
 80102a0:	4258      	negs	r0, r3
 80102a2:	4158      	adcs	r0, r3
 80102a4:	e00e      	b.n	80102c4 <CRC_Lock+0x94>
 80102a6:	681b      	ldr	r3, [r3, #0]
 80102a8:	4013      	ands	r3, r2
 80102aa:	f24d 2220 	movw	r2, #53792	@ 0xd220
 80102ae:	4293      	cmp	r3, r2
 80102b0:	d111      	bne.n	80102d6 <CRC_Lock+0xa6>
 80102b2:	f240 4286 	movw	r2, #1158	@ 0x486
 80102b6:	4b12      	ldr	r3, [pc, #72]	@ (8010300 <CRC_Lock+0xd0>)
 80102b8:	681b      	ldr	r3, [r3, #0]
 80102ba:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80102be:	4293      	cmp	r3, r2
 80102c0:	d001      	beq.n	80102c6 <CRC_Lock+0x96>
 80102c2:	2000      	movs	r0, #0
 80102c4:	bd30      	pop	{r4, r5, pc}
 80102c6:	2201      	movs	r2, #1
 80102c8:	4b0e      	ldr	r3, [pc, #56]	@ (8010304 <CRC_Lock+0xd4>)
 80102ca:	601a      	str	r2, [r3, #0]
 80102cc:	681a      	ldr	r2, [r3, #0]
 80102ce:	2a00      	cmp	r2, #0
 80102d0:	d1fc      	bne.n	80102cc <CRC_Lock+0x9c>
 80102d2:	4b0d      	ldr	r3, [pc, #52]	@ (8010308 <CRC_Lock+0xd8>)
 80102d4:	e7e1      	b.n	801029a <CRC_Lock+0x6a>
 80102d6:	2201      	movs	r2, #1
 80102d8:	4b0c      	ldr	r3, [pc, #48]	@ (801030c <CRC_Lock+0xdc>)
 80102da:	601a      	str	r2, [r3, #0]
 80102dc:	681a      	ldr	r2, [r3, #0]
 80102de:	2a00      	cmp	r2, #0
 80102e0:	d1fc      	bne.n	80102dc <CRC_Lock+0xac>
 80102e2:	4b0b      	ldr	r3, [pc, #44]	@ (8010310 <CRC_Lock+0xe0>)
 80102e4:	e7d9      	b.n	801029a <CRC_Lock+0x6a>
 80102e6:	bf00      	nop
 80102e8:	e0002000 	.word	0xe0002000
 80102ec:	e000ed00 	.word	0xe000ed00
 80102f0:	e0042000 	.word	0xe0042000
 80102f4:	5c001000 	.word	0x5c001000
 80102f8:	58024c08 	.word	0x58024c08
 80102fc:	58024c00 	.word	0x58024c00
 8010300:	46008ff0 	.word	0x46008ff0
 8010304:	46024c08 	.word	0x46024c08
 8010308:	46024c00 	.word	0x46024c00
 801030c:	40023008 	.word	0x40023008
 8010310:	40023000 	.word	0x40023000

08010314 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8010314:	6101      	str	r1, [r0, #16]
 8010316:	4770      	bx	lr

08010318 <_ZN8touchgfx8Gestures4tickEv>:
 8010318:	7b83      	ldrb	r3, [r0, #14]
 801031a:	b14b      	cbz	r3, 8010330 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801031c:	8903      	ldrh	r3, [r0, #8]
 801031e:	3301      	adds	r3, #1
 8010320:	b29b      	uxth	r3, r3
 8010322:	2b07      	cmp	r3, #7
 8010324:	8103      	strh	r3, [r0, #8]
 8010326:	bf81      	itttt	hi
 8010328:	2300      	movhi	r3, #0
 801032a:	8143      	strhhi	r3, [r0, #10]
 801032c:	8183      	strhhi	r3, [r0, #12]
 801032e:	7383      	strbhi	r3, [r0, #14]
 8010330:	4770      	bx	lr
	...

08010334 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8010334:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010338:	4698      	mov	r8, r3
 801033a:	4604      	mov	r4, r0
 801033c:	8883      	ldrh	r3, [r0, #4]
 801033e:	460e      	mov	r6, r1
 8010340:	88c1      	ldrh	r1, [r0, #6]
 8010342:	2000      	movs	r0, #0
 8010344:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010348:	eba8 0303 	sub.w	r3, r8, r3
 801034c:	b21b      	sxth	r3, r3
 801034e:	4617      	mov	r7, r2
 8010350:	4a17      	ldr	r2, [pc, #92]	@ (80103b0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8010352:	2b00      	cmp	r3, #0
 8010354:	bfb8      	it	lt
 8010356:	425b      	neglt	r3, r3
 8010358:	9200      	str	r2, [sp, #0]
 801035a:	8aa2      	ldrh	r2, [r4, #20]
 801035c:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8010360:	b21b      	sxth	r3, r3
 8010362:	4293      	cmp	r3, r2
 8010364:	f88d 0004 	strb.w	r0, [sp, #4]
 8010368:	f8ad 1008 	strh.w	r1, [sp, #8]
 801036c:	f8ad 800a 	strh.w	r8, [sp, #10]
 8010370:	f8ad 500c 	strh.w	r5, [sp, #12]
 8010374:	dc07      	bgt.n	8010386 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 8010376:	1a69      	subs	r1, r5, r1
 8010378:	b209      	sxth	r1, r1
 801037a:	2900      	cmp	r1, #0
 801037c:	bfb8      	it	lt
 801037e:	4249      	neglt	r1, r1
 8010380:	b209      	sxth	r1, r1
 8010382:	428a      	cmp	r2, r1
 8010384:	da10      	bge.n	80103a8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 8010386:	6920      	ldr	r0, [r4, #16]
 8010388:	4669      	mov	r1, sp
 801038a:	6803      	ldr	r3, [r0, #0]
 801038c:	eba8 0606 	sub.w	r6, r8, r6
 8010390:	685b      	ldr	r3, [r3, #4]
 8010392:	4798      	blx	r3
 8010394:	2300      	movs	r3, #0
 8010396:	2001      	movs	r0, #1
 8010398:	1bef      	subs	r7, r5, r7
 801039a:	8123      	strh	r3, [r4, #8]
 801039c:	8166      	strh	r6, [r4, #10]
 801039e:	81a7      	strh	r7, [r4, #12]
 80103a0:	f8a4 8004 	strh.w	r8, [r4, #4]
 80103a4:	80e5      	strh	r5, [r4, #6]
 80103a6:	73a0      	strb	r0, [r4, #14]
 80103a8:	b004      	add	sp, #16
 80103aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80103ae:	bf00      	nop
 80103b0:	08035bb8 	.word	0x08035bb8

080103b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80103b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80103b6:	461e      	mov	r6, r3
 80103b8:	1e4b      	subs	r3, r1, #1
 80103ba:	2b01      	cmp	r3, #1
 80103bc:	b085      	sub	sp, #20
 80103be:	4604      	mov	r4, r0
 80103c0:	460d      	mov	r5, r1
 80103c2:	4617      	mov	r7, r2
 80103c4:	d84b      	bhi.n	801045e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80103c6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80103ca:	1cd3      	adds	r3, r2, #3
 80103cc:	b29b      	uxth	r3, r3
 80103ce:	2b06      	cmp	r3, #6
 80103d0:	d916      	bls.n	8010400 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80103d2:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8010474 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80103d6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80103da:	f8cd c004 	str.w	ip, [sp, #4]
 80103de:	f04f 0c00 	mov.w	ip, #0
 80103e2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80103e6:	6900      	ldr	r0, [r0, #16]
 80103e8:	f8ad 100c 	strh.w	r1, [sp, #12]
 80103ec:	f88d c008 	strb.w	ip, [sp, #8]
 80103f0:	f8ad 200a 	strh.w	r2, [sp, #10]
 80103f4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80103f8:	6803      	ldr	r3, [r0, #0]
 80103fa:	a901      	add	r1, sp, #4
 80103fc:	689b      	ldr	r3, [r3, #8]
 80103fe:	4798      	blx	r3
 8010400:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8010404:	1cd3      	adds	r3, r2, #3
 8010406:	b29b      	uxth	r3, r3
 8010408:	2b06      	cmp	r3, #6
 801040a:	d916      	bls.n	801043a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801040c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8010474 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8010410:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010414:	f8cd c004 	str.w	ip, [sp, #4]
 8010418:	f04f 0c01 	mov.w	ip, #1
 801041c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010420:	6920      	ldr	r0, [r4, #16]
 8010422:	f8ad 100c 	strh.w	r1, [sp, #12]
 8010426:	f88d c008 	strb.w	ip, [sp, #8]
 801042a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801042e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010432:	6803      	ldr	r3, [r0, #0]
 8010434:	a901      	add	r1, sp, #4
 8010436:	689b      	ldr	r3, [r3, #8]
 8010438:	4798      	blx	r3
 801043a:	4b0d      	ldr	r3, [pc, #52]	@ (8010470 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801043c:	6920      	ldr	r0, [r4, #16]
 801043e:	9301      	str	r3, [sp, #4]
 8010440:	2300      	movs	r3, #0
 8010442:	f88d 5008 	strb.w	r5, [sp, #8]
 8010446:	f8ad 700a 	strh.w	r7, [sp, #10]
 801044a:	f8ad 600c 	strh.w	r6, [sp, #12]
 801044e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010452:	6803      	ldr	r3, [r0, #0]
 8010454:	a901      	add	r1, sp, #4
 8010456:	681b      	ldr	r3, [r3, #0]
 8010458:	4798      	blx	r3
 801045a:	b005      	add	sp, #20
 801045c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801045e:	2900      	cmp	r1, #0
 8010460:	d1eb      	bne.n	801043a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8010462:	80a2      	strh	r2, [r4, #4]
 8010464:	80c6      	strh	r6, [r0, #6]
 8010466:	60a1      	str	r1, [r4, #8]
 8010468:	81a1      	strh	r1, [r4, #12]
 801046a:	73a1      	strb	r1, [r4, #14]
 801046c:	e7e5      	b.n	801043a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801046e:	bf00      	nop
 8010470:	08035ba4 	.word	0x08035ba4
 8010474:	08035bcc 	.word	0x08035bcc

08010478 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8010478:	790b      	ldrb	r3, [r1, #4]
 801047a:	b570      	push	{r4, r5, r6, lr}
 801047c:	2b00      	cmp	r3, #0
 801047e:	bf0c      	ite	eq
 8010480:	2301      	moveq	r3, #1
 8010482:	2300      	movne	r3, #0
 8010484:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 8010488:	4604      	mov	r4, r0
 801048a:	460e      	mov	r6, r1
 801048c:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8010490:	d109      	bne.n	80104a6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8010492:	b14d      	cbz	r5, 80104a8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8010494:	7933      	ldrb	r3, [r6, #4]
 8010496:	2b01      	cmp	r3, #1
 8010498:	d10c      	bne.n	80104b4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801049a:	6823      	ldr	r3, [r4, #0]
 801049c:	4620      	mov	r0, r4
 801049e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80104a2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80104a4:	4718      	bx	r3
 80104a6:	b12d      	cbz	r5, 80104b4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80104a8:	6823      	ldr	r3, [r4, #0]
 80104aa:	4620      	mov	r0, r4
 80104ac:	695b      	ldr	r3, [r3, #20]
 80104ae:	4798      	blx	r3
 80104b0:	2d00      	cmp	r5, #0
 80104b2:	d1ef      	bne.n	8010494 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80104b4:	bd70      	pop	{r4, r5, r6, pc}

080104b6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80104b6:	b570      	push	{r4, r5, r6, lr}
 80104b8:	4605      	mov	r5, r0
 80104ba:	880b      	ldrh	r3, [r1, #0]
 80104bc:	4604      	mov	r4, r0
 80104be:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 80104c0:	8813      	ldrh	r3, [r2, #0]
 80104c2:	f825 3f30 	strh.w	r3, [r5, #48]!
 80104c6:	4628      	mov	r0, r5
 80104c8:	f7ff fd3c 	bl	800ff44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80104cc:	4606      	mov	r6, r0
 80104ce:	4628      	mov	r0, r5
 80104d0:	f7ff fd6c 	bl	800ffac <_ZNK8touchgfx6Bitmap9getHeightEv>
 80104d4:	4605      	mov	r5, r0
 80104d6:	6823      	ldr	r3, [r4, #0]
 80104d8:	4631      	mov	r1, r6
 80104da:	4620      	mov	r0, r4
 80104dc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80104de:	4798      	blx	r3
 80104e0:	6823      	ldr	r3, [r4, #0]
 80104e2:	4629      	mov	r1, r5
 80104e4:	4620      	mov	r0, r4
 80104e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80104ea:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80104ec:	4718      	bx	r3

080104ee <_ZNK8touchgfx6Button12getSolidRectEv>:
 80104ee:	b510      	push	{r4, lr}
 80104f0:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 80104f4:	4604      	mov	r4, r0
 80104f6:	2bff      	cmp	r3, #255	@ 0xff
 80104f8:	d006      	beq.n	8010508 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80104fa:	2300      	movs	r3, #0
 80104fc:	8003      	strh	r3, [r0, #0]
 80104fe:	8043      	strh	r3, [r0, #2]
 8010500:	8083      	strh	r3, [r0, #4]
 8010502:	80c3      	strh	r3, [r0, #6]
 8010504:	4620      	mov	r0, r4
 8010506:	bd10      	pop	{r4, pc}
 8010508:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 801050c:	b11b      	cbz	r3, 8010516 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801050e:	3130      	adds	r1, #48	@ 0x30
 8010510:	f7ff fd80 	bl	8010014 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8010514:	e7f6      	b.n	8010504 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8010516:	312e      	adds	r1, #46	@ 0x2e
 8010518:	e7fa      	b.n	8010510 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0801051c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 801051c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010520:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8010524:	b08a      	sub	sp, #40	@ 0x28
 8010526:	4604      	mov	r4, r0
 8010528:	4688      	mov	r8, r1
 801052a:	2b00      	cmp	r3, #0
 801052c:	d066      	beq.n	80105fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801052e:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8010530:	a805      	add	r0, sp, #20
 8010532:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010536:	f7ff fd05 	bl	800ff44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801053a:	4607      	mov	r7, r0
 801053c:	a805      	add	r0, sp, #20
 801053e:	f7ff fd35 	bl	800ffac <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010542:	2300      	movs	r3, #0
 8010544:	f9b8 6000 	ldrsh.w	r6, [r8]
 8010548:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801054c:	9306      	str	r3, [sp, #24]
 801054e:	4432      	add	r2, r6
 8010550:	b292      	uxth	r2, r2
 8010552:	fa0f fc82 	sxth.w	ip, r2
 8010556:	459c      	cmp	ip, r3
 8010558:	dd52      	ble.n	8010600 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801055a:	42b7      	cmp	r7, r6
 801055c:	dd50      	ble.n	8010600 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801055e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8010562:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8010566:	442b      	add	r3, r5
 8010568:	b29b      	uxth	r3, r3
 801056a:	b219      	sxth	r1, r3
 801056c:	2900      	cmp	r1, #0
 801056e:	dd47      	ble.n	8010600 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8010570:	42a8      	cmp	r0, r5
 8010572:	dd45      	ble.n	8010600 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8010574:	4567      	cmp	r7, ip
 8010576:	bfb8      	it	lt
 8010578:	b2ba      	uxthlt	r2, r7
 801057a:	4288      	cmp	r0, r1
 801057c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8010580:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8010584:	bfb8      	it	lt
 8010586:	b283      	uxthlt	r3, r0
 8010588:	1b92      	subs	r2, r2, r6
 801058a:	1b5b      	subs	r3, r3, r5
 801058c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8010590:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010594:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010598:	f8ad 501a 	strh.w	r5, [sp, #26]
 801059c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80105a0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80105a4:	429a      	cmp	r2, r3
 80105a6:	d026      	beq.n	80105f6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80105a8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80105ac:	2b00      	cmp	r3, #0
 80105ae:	dd22      	ble.n	80105f6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80105b0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80105b4:	2b00      	cmp	r3, #0
 80105b6:	dd1e      	ble.n	80105f6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80105b8:	2300      	movs	r3, #0
 80105ba:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80105be:	6823      	ldr	r3, [r4, #0]
 80105c0:	a908      	add	r1, sp, #32
 80105c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80105c4:	4620      	mov	r0, r4
 80105c6:	4798      	blx	r3
 80105c8:	4b0f      	ldr	r3, [pc, #60]	@ (8010608 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80105ca:	681b      	ldr	r3, [r3, #0]
 80105cc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80105d0:	b10a      	cbz	r2, 80105d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80105d2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80105d4:	b900      	cbnz	r0, 80105d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80105d6:	6898      	ldr	r0, [r3, #8]
 80105d8:	2501      	movs	r5, #1
 80105da:	6801      	ldr	r1, [r0, #0]
 80105dc:	9502      	str	r5, [sp, #8]
 80105de:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 80105e2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 80105e6:	9401      	str	r4, [sp, #4]
 80105e8:	ac06      	add	r4, sp, #24
 80105ea:	9400      	str	r4, [sp, #0]
 80105ec:	688c      	ldr	r4, [r1, #8]
 80105ee:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80105f2:	a905      	add	r1, sp, #20
 80105f4:	47a0      	blx	r4
 80105f6:	b00a      	add	sp, #40	@ 0x28
 80105f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80105fc:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 80105fe:	e797      	b.n	8010530 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8010600:	2300      	movs	r3, #0
 8010602:	9307      	str	r3, [sp, #28]
 8010604:	e7ca      	b.n	801059c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8010606:	bf00      	nop
 8010608:	20082ec4 	.word	0x20082ec4

0801060c <nema_rb_init>:
 801060c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010610:	6805      	ldr	r5, [r0, #0]
 8010612:	4f23      	ldr	r7, [pc, #140]	@ (80106a0 <nema_rb_init+0x94>)
 8010614:	2d00      	cmp	r5, #0
 8010616:	603d      	str	r5, [r7, #0]
 8010618:	dd3c      	ble.n	8010694 <nema_rb_init+0x88>
 801061a:	f8df c090 	ldr.w	ip, [pc, #144]	@ 80106ac <nema_rb_init+0xa0>
 801061e:	10ab      	asrs	r3, r5, #2
 8010620:	3b04      	subs	r3, #4
 8010622:	f8df e08c 	ldr.w	lr, [pc, #140]	@ 80106b0 <nema_rb_init+0xa4>
 8010626:	6886      	ldr	r6, [r0, #8]
 8010628:	4c1e      	ldr	r4, [pc, #120]	@ (80106a4 <nema_rb_init+0x98>)
 801062a:	f8cc 3000 	str.w	r3, [ip]
 801062e:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 80106b4 <nema_rb_init+0xa8>
 8010632:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8010636:	f8ce 0000 	str.w	r0, [lr]
 801063a:	6026      	str	r6, [r4, #0]
 801063c:	f8c8 c000 	str.w	ip, [r8]
 8010640:	b329      	cbz	r1, 801068e <nema_rb_init+0x82>
 8010642:	2400      	movs	r4, #0
 8010644:	f8df e070 	ldr.w	lr, [pc, #112]	@ 80106b8 <nema_rb_init+0xac>
 8010648:	4917      	ldr	r1, [pc, #92]	@ (80106a8 <nema_rb_init+0x9c>)
 801064a:	e9c0 4404 	strd	r4, r4, [r0, #16]
 801064e:	f846 e023 	str.w	lr, [r6, r3, lsl #2]
 8010652:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8010656:	e9c3 1502 	strd	r1, r5, [r3, #8]
 801065a:	f8c3 c004 	str.w	ip, [r3, #4]
 801065e:	f7f2 fc2f 	bl	8002ec0 <nema_buffer_flush>
 8010662:	4621      	mov	r1, r4
 8010664:	f44f 70a4 	mov.w	r0, #328	@ 0x148
 8010668:	f7f2 fb50 	bl	8002d0c <nema_reg_write>
 801066c:	f8d8 1000 	ldr.w	r1, [r8]
 8010670:	20ec      	movs	r0, #236	@ 0xec
 8010672:	f041 0106 	orr.w	r1, r1, #6
 8010676:	f7f2 fb49 	bl	8002d0c <nema_reg_write>
 801067a:	f8d8 1000 	ldr.w	r1, [r8]
 801067e:	20f0      	movs	r0, #240	@ 0xf0
 8010680:	f7f2 fb44 	bl	8002d0c <nema_reg_write>
 8010684:	6839      	ldr	r1, [r7, #0]
 8010686:	20f4      	movs	r0, #244	@ 0xf4
 8010688:	f7f2 fb40 	bl	8002d0c <nema_reg_write>
 801068c:	4621      	mov	r1, r4
 801068e:	4608      	mov	r0, r1
 8010690:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010694:	2004      	movs	r0, #4
 8010696:	f000 fa25 	bl	8010ae4 <nema_set_error>
 801069a:	f04f 31ff 	mov.w	r1, #4294967295
 801069e:	e7f6      	b.n	801068e <nema_rb_init+0x82>
 80106a0:	20082f60 	.word	0x20082f60
 80106a4:	20082f58 	.word	0x20082f58
 80106a8:	ff0000f4 	.word	0xff0000f4
 80106ac:	20082f5c 	.word	0x20082f5c
 80106b0:	20082f50 	.word	0x20082f50
 80106b4:	20082f54 	.word	0x20082f54
 80106b8:	ff0000f0 	.word	0xff0000f0

080106bc <nema_rb_submit_cmdlist2>:
 80106bc:	2900      	cmp	r1, #0
 80106be:	d074      	beq.n	80107aa <nema_rb_submit_cmdlist2+0xee>
 80106c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106c4:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 80107c0 <nema_rb_submit_cmdlist2+0x104>
 80106c8:	4b39      	ldr	r3, [pc, #228]	@ (80107b0 <nema_rb_submit_cmdlist2+0xf4>)
 80106ca:	f8d8 2000 	ldr.w	r2, [r8]
 80106ce:	681d      	ldr	r5, [r3, #0]
 80106d0:	6913      	ldr	r3, [r2, #16]
 80106d2:	468c      	mov	ip, r1
 80106d4:	4c37      	ldr	r4, [pc, #220]	@ (80107b4 <nema_rb_submit_cmdlist2+0xf8>)
 80106d6:	1d19      	adds	r1, r3, #4
 80106d8:	42a9      	cmp	r1, r5
 80106da:	6824      	ldr	r4, [r4, #0]
 80106dc:	db0a      	blt.n	80106f4 <nema_rb_submit_cmdlist2+0x38>
 80106de:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 80106e2:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 80106e6:	6913      	ldr	r3, [r2, #16]
 80106e8:	3301      	adds	r3, #1
 80106ea:	429d      	cmp	r5, r3
 80106ec:	6113      	str	r3, [r2, #16]
 80106ee:	dc59      	bgt.n	80107a4 <nema_rb_submit_cmdlist2+0xe8>
 80106f0:	2300      	movs	r3, #0
 80106f2:	6113      	str	r3, [r2, #16]
 80106f4:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 80106f8:	f04f 0e00 	mov.w	lr, #0
 80106fc:	e009      	b.n	8010712 <nema_rb_submit_cmdlist2+0x56>
 80106fe:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8010702:	6913      	ldr	r3, [r2, #16]
 8010704:	3301      	adds	r3, #1
 8010706:	429d      	cmp	r5, r3
 8010708:	6113      	str	r3, [r2, #16]
 801070a:	bfdc      	itt	le
 801070c:	2300      	movle	r3, #0
 801070e:	f8c2 e010 	strle.w	lr, [r2, #16]
 8010712:	f013 0703 	ands.w	r7, r3, #3
 8010716:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 801071a:	d1f0      	bne.n	80106fe <nema_rb_submit_cmdlist2+0x42>
 801071c:	23f0      	movs	r3, #240	@ 0xf0
 801071e:	6033      	str	r3, [r6, #0]
 8010720:	6913      	ldr	r3, [r2, #16]
 8010722:	3301      	adds	r3, #1
 8010724:	429d      	cmp	r5, r3
 8010726:	bfd3      	iteet	le
 8010728:	4623      	movle	r3, r4
 801072a:	6113      	strgt	r3, [r2, #16]
 801072c:	eb04 0383 	addgt.w	r3, r4, r3, lsl #2
 8010730:	6117      	strle	r7, [r2, #16]
 8010732:	6018      	str	r0, [r3, #0]
 8010734:	6913      	ldr	r3, [r2, #16]
 8010736:	3301      	adds	r3, #1
 8010738:	429d      	cmp	r5, r3
 801073a:	dd2f      	ble.n	801079c <nema_rb_submit_cmdlist2+0xe0>
 801073c:	6113      	str	r3, [r2, #16]
 801073e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8010742:	491d      	ldr	r1, [pc, #116]	@ (80107b8 <nema_rb_submit_cmdlist2+0xfc>)
 8010744:	4610      	mov	r0, r2
 8010746:	6019      	str	r1, [r3, #0]
 8010748:	6913      	ldr	r3, [r2, #16]
 801074a:	3301      	adds	r3, #1
 801074c:	429d      	cmp	r5, r3
 801074e:	bfd3      	iteet	le
 8010750:	2300      	movle	r3, #0
 8010752:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 8010756:	6113      	strgt	r3, [r2, #16]
 8010758:	6113      	strle	r3, [r2, #16]
 801075a:	f8c4 c000 	str.w	ip, [r4]
 801075e:	6913      	ldr	r3, [r2, #16]
 8010760:	3301      	adds	r3, #1
 8010762:	429d      	cmp	r5, r3
 8010764:	bfd8      	it	le
 8010766:	2300      	movle	r3, #0
 8010768:	6113      	str	r3, [r2, #16]
 801076a:	f7f2 fba9 	bl	8002ec0 <nema_buffer_flush>
 801076e:	4a13      	ldr	r2, [pc, #76]	@ (80107bc <nema_rb_submit_cmdlist2+0x100>)
 8010770:	f8d8 3000 	ldr.w	r3, [r8]
 8010774:	6811      	ldr	r1, [r2, #0]
 8010776:	691b      	ldr	r3, [r3, #16]
 8010778:	20ec      	movs	r0, #236	@ 0xec
 801077a:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801077e:	f041 0104 	orr.w	r1, r1, #4
 8010782:	f7f2 fac3 	bl	8002d0c <nema_reg_write>
 8010786:	f8d8 3000 	ldr.w	r3, [r8]
 801078a:	6958      	ldr	r0, [r3, #20]
 801078c:	3001      	adds	r0, #1
 801078e:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8010792:	bfa8      	it	ge
 8010794:	2000      	movge	r0, #0
 8010796:	6158      	str	r0, [r3, #20]
 8010798:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801079c:	2100      	movs	r1, #0
 801079e:	4623      	mov	r3, r4
 80107a0:	6111      	str	r1, [r2, #16]
 80107a2:	e7ce      	b.n	8010742 <nema_rb_submit_cmdlist2+0x86>
 80107a4:	2b00      	cmp	r3, #0
 80107a6:	d19c      	bne.n	80106e2 <nema_rb_submit_cmdlist2+0x26>
 80107a8:	e7a4      	b.n	80106f4 <nema_rb_submit_cmdlist2+0x38>
 80107aa:	f04f 30ff 	mov.w	r0, #4294967295
 80107ae:	4770      	bx	lr
 80107b0:	20082f5c 	.word	0x20082f5c
 80107b4:	20082f58 	.word	0x20082f58
 80107b8:	000200f4 	.word	0x000200f4
 80107bc:	20082f54 	.word	0x20082f54
 80107c0:	20082f50 	.word	0x20082f50

080107c4 <nema_rb_submit_cmdlist>:
 80107c4:	68c0      	ldr	r0, [r0, #12]
 80107c6:	f7ff bf79 	b.w	80106bc <nema_rb_submit_cmdlist2>
 80107ca:	bf00      	nop

080107cc <nema_rb_inline_cmd>:
 80107cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80107ce:	4e21      	ldr	r6, [pc, #132]	@ (8010854 <nema_rb_inline_cmd+0x88>)
 80107d0:	4b21      	ldr	r3, [pc, #132]	@ (8010858 <nema_rb_inline_cmd+0x8c>)
 80107d2:	6832      	ldr	r2, [r6, #0]
 80107d4:	681d      	ldr	r5, [r3, #0]
 80107d6:	6913      	ldr	r3, [r2, #16]
 80107d8:	4c20      	ldr	r4, [pc, #128]	@ (801085c <nema_rb_inline_cmd+0x90>)
 80107da:	1c5f      	adds	r7, r3, #1
 80107dc:	42af      	cmp	r7, r5
 80107de:	6824      	ldr	r4, [r4, #0]
 80107e0:	db24      	blt.n	801082c <nema_rb_inline_cmd+0x60>
 80107e2:	f44f 3780 	mov.w	r7, #65536	@ 0x10000
 80107e6:	f844 7023 	str.w	r7, [r4, r3, lsl #2]
 80107ea:	6913      	ldr	r3, [r2, #16]
 80107ec:	3301      	adds	r3, #1
 80107ee:	429d      	cmp	r5, r3
 80107f0:	6113      	str	r3, [r2, #16]
 80107f2:	dc17      	bgt.n	8010824 <nema_rb_inline_cmd+0x58>
 80107f4:	2700      	movs	r7, #0
 80107f6:	4623      	mov	r3, r4
 80107f8:	6117      	str	r7, [r2, #16]
 80107fa:	6018      	str	r0, [r3, #0]
 80107fc:	6913      	ldr	r3, [r2, #16]
 80107fe:	3301      	adds	r3, #1
 8010800:	429d      	cmp	r5, r3
 8010802:	bfd3      	iteet	le
 8010804:	2300      	movle	r3, #0
 8010806:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 801080a:	6113      	strgt	r3, [r2, #16]
 801080c:	6113      	strle	r3, [r2, #16]
 801080e:	6021      	str	r1, [r4, #0]
 8010810:	6913      	ldr	r3, [r2, #16]
 8010812:	3301      	adds	r3, #1
 8010814:	429d      	cmp	r5, r3
 8010816:	bfd8      	it	le
 8010818:	2300      	movle	r3, #0
 801081a:	f010 4f7f 	tst.w	r0, #4278190080	@ 0xff000000
 801081e:	6113      	str	r3, [r2, #16]
 8010820:	d107      	bne.n	8010832 <nema_rb_inline_cmd+0x66>
 8010822:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010824:	2b00      	cmp	r3, #0
 8010826:	d1de      	bne.n	80107e6 <nema_rb_inline_cmd+0x1a>
 8010828:	4623      	mov	r3, r4
 801082a:	e7e6      	b.n	80107fa <nema_rb_inline_cmd+0x2e>
 801082c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8010830:	e7e3      	b.n	80107fa <nema_rb_inline_cmd+0x2e>
 8010832:	4610      	mov	r0, r2
 8010834:	f7f2 fb44 	bl	8002ec0 <nema_buffer_flush>
 8010838:	6833      	ldr	r3, [r6, #0]
 801083a:	4a09      	ldr	r2, [pc, #36]	@ (8010860 <nema_rb_inline_cmd+0x94>)
 801083c:	691b      	ldr	r3, [r3, #16]
 801083e:	6811      	ldr	r1, [r2, #0]
 8010840:	20ec      	movs	r0, #236	@ 0xec
 8010842:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8010846:	f041 0104 	orr.w	r1, r1, #4
 801084a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801084e:	f7f2 ba5d 	b.w	8002d0c <nema_reg_write>
 8010852:	bf00      	nop
 8010854:	20082f50 	.word	0x20082f50
 8010858:	20082f5c 	.word	0x20082f5c
 801085c:	20082f58 	.word	0x20082f58
 8010860:	20082f54 	.word	0x20082f54

08010864 <nema_rb_force_flush>:
 8010864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010866:	4e36      	ldr	r6, [pc, #216]	@ (8010940 <nema_rb_force_flush+0xdc>)
 8010868:	4b36      	ldr	r3, [pc, #216]	@ (8010944 <nema_rb_force_flush+0xe0>)
 801086a:	6830      	ldr	r0, [r6, #0]
 801086c:	6819      	ldr	r1, [r3, #0]
 801086e:	6903      	ldr	r3, [r0, #16]
 8010870:	4a35      	ldr	r2, [pc, #212]	@ (8010948 <nema_rb_force_flush+0xe4>)
 8010872:	1d1c      	adds	r4, r3, #4
 8010874:	428c      	cmp	r4, r1
 8010876:	6812      	ldr	r2, [r2, #0]
 8010878:	db0a      	blt.n	8010890 <nema_rb_force_flush+0x2c>
 801087a:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 801087e:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 8010882:	6903      	ldr	r3, [r0, #16]
 8010884:	3301      	adds	r3, #1
 8010886:	4299      	cmp	r1, r3
 8010888:	6103      	str	r3, [r0, #16]
 801088a:	dc51      	bgt.n	8010930 <nema_rb_force_flush+0xcc>
 801088c:	2300      	movs	r3, #0
 801088e:	6103      	str	r3, [r0, #16]
 8010890:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
 8010894:	2700      	movs	r7, #0
 8010896:	e008      	b.n	80108aa <nema_rb_force_flush+0x46>
 8010898:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 801089c:	6903      	ldr	r3, [r0, #16]
 801089e:	3301      	adds	r3, #1
 80108a0:	4299      	cmp	r1, r3
 80108a2:	6103      	str	r3, [r0, #16]
 80108a4:	bfdc      	itt	le
 80108a6:	2300      	movle	r3, #0
 80108a8:	6107      	strle	r7, [r0, #16]
 80108aa:	f013 0c03 	ands.w	ip, r3, #3
 80108ae:	eb02 0483 	add.w	r4, r2, r3, lsl #2
 80108b2:	d1f1      	bne.n	8010898 <nema_rb_force_flush+0x34>
 80108b4:	4d25      	ldr	r5, [pc, #148]	@ (801094c <nema_rb_force_flush+0xe8>)
 80108b6:	4f26      	ldr	r7, [pc, #152]	@ (8010950 <nema_rb_force_flush+0xec>)
 80108b8:	6025      	str	r5, [r4, #0]
 80108ba:	6904      	ldr	r4, [r0, #16]
 80108bc:	683d      	ldr	r5, [r7, #0]
 80108be:	3401      	adds	r4, #1
 80108c0:	42a1      	cmp	r1, r4
 80108c2:	bfd8      	it	le
 80108c4:	4614      	movle	r4, r2
 80108c6:	f103 0304 	add.w	r3, r3, #4
 80108ca:	bfc8      	it	gt
 80108cc:	6104      	strgt	r4, [r0, #16]
 80108ce:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80108d2:	bfcc      	ite	gt
 80108d4:	eb02 0484 	addgt.w	r4, r2, r4, lsl #2
 80108d8:	f8c0 c010 	strle.w	ip, [r0, #16]
 80108dc:	6023      	str	r3, [r4, #0]
 80108de:	6903      	ldr	r3, [r0, #16]
 80108e0:	3301      	adds	r3, #1
 80108e2:	4299      	cmp	r1, r3
 80108e4:	dd27      	ble.n	8010936 <nema_rb_force_flush+0xd2>
 80108e6:	6103      	str	r3, [r0, #16]
 80108e8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80108ec:	4c19      	ldr	r4, [pc, #100]	@ (8010954 <nema_rb_force_flush+0xf0>)
 80108ee:	601c      	str	r4, [r3, #0]
 80108f0:	6903      	ldr	r3, [r0, #16]
 80108f2:	3301      	adds	r3, #1
 80108f4:	4299      	cmp	r1, r3
 80108f6:	bfd5      	itete	le
 80108f8:	2300      	movle	r3, #0
 80108fa:	6103      	strgt	r3, [r0, #16]
 80108fc:	6103      	strle	r3, [r0, #16]
 80108fe:	eb02 0283 	addgt.w	r2, r2, r3, lsl #2
 8010902:	4b15      	ldr	r3, [pc, #84]	@ (8010958 <nema_rb_force_flush+0xf4>)
 8010904:	681b      	ldr	r3, [r3, #0]
 8010906:	6013      	str	r3, [r2, #0]
 8010908:	6903      	ldr	r3, [r0, #16]
 801090a:	3301      	adds	r3, #1
 801090c:	4299      	cmp	r1, r3
 801090e:	bfd8      	it	le
 8010910:	2300      	movle	r3, #0
 8010912:	6103      	str	r3, [r0, #16]
 8010914:	f7f2 fad4 	bl	8002ec0 <nema_buffer_flush>
 8010918:	6833      	ldr	r3, [r6, #0]
 801091a:	6839      	ldr	r1, [r7, #0]
 801091c:	691b      	ldr	r3, [r3, #16]
 801091e:	20ec      	movs	r0, #236	@ 0xec
 8010920:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8010924:	f041 0104 	orr.w	r1, r1, #4
 8010928:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801092c:	f7f2 b9ee 	b.w	8002d0c <nema_reg_write>
 8010930:	2b00      	cmp	r3, #0
 8010932:	d1a4      	bne.n	801087e <nema_rb_force_flush+0x1a>
 8010934:	e7ac      	b.n	8010890 <nema_rb_force_flush+0x2c>
 8010936:	2400      	movs	r4, #0
 8010938:	4613      	mov	r3, r2
 801093a:	6104      	str	r4, [r0, #16]
 801093c:	e7d6      	b.n	80108ec <nema_rb_force_flush+0x88>
 801093e:	bf00      	nop
 8010940:	20082f50 	.word	0x20082f50
 8010944:	20082f5c 	.word	0x20082f5c
 8010948:	20082f58 	.word	0x20082f58
 801094c:	ff0000f0 	.word	0xff0000f0
 8010950:	20082f54 	.word	0x20082f54
 8010954:	ff0000f4 	.word	0xff0000f4
 8010958:	20082f60 	.word	0x20082f60

0801095c <nema_rb_submit_cl_id>:
 801095c:	b510      	push	{r4, lr}
 801095e:	1e04      	subs	r4, r0, #0
 8010960:	dd40      	ble.n	80109e4 <nema_rb_submit_cl_id+0x88>
 8010962:	2000      	movs	r0, #0
 8010964:	f7f2 faad 	bl	8002ec2 <nema_mutex_lock>
 8010968:	4621      	mov	r1, r4
 801096a:	f44f 70a4 	mov.w	r0, #328	@ 0x148
 801096e:	f7ff ff2d 	bl	80107cc <nema_rb_inline_cmd>
 8010972:	4a1d      	ldr	r2, [pc, #116]	@ (80109e8 <nema_rb_submit_cl_id+0x8c>)
 8010974:	4b1d      	ldr	r3, [pc, #116]	@ (80109ec <nema_rb_submit_cl_id+0x90>)
 8010976:	6812      	ldr	r2, [r2, #0]
 8010978:	6818      	ldr	r0, [r3, #0]
 801097a:	6913      	ldr	r3, [r2, #16]
 801097c:	1c59      	adds	r1, r3, #1
 801097e:	4281      	cmp	r1, r0
 8010980:	db0e      	blt.n	80109a0 <nema_rb_submit_cl_id+0x44>
 8010982:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 8010986:	491a      	ldr	r1, [pc, #104]	@ (80109f0 <nema_rb_submit_cl_id+0x94>)
 8010988:	6809      	ldr	r1, [r1, #0]
 801098a:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 801098e:	6913      	ldr	r3, [r2, #16]
 8010990:	3301      	adds	r3, #1
 8010992:	4298      	cmp	r0, r3
 8010994:	6113      	str	r3, [r2, #16]
 8010996:	dc21      	bgt.n	80109dc <nema_rb_submit_cl_id+0x80>
 8010998:	2400      	movs	r4, #0
 801099a:	460b      	mov	r3, r1
 801099c:	6114      	str	r4, [r2, #16]
 801099e:	e003      	b.n	80109a8 <nema_rb_submit_cl_id+0x4c>
 80109a0:	4913      	ldr	r1, [pc, #76]	@ (80109f0 <nema_rb_submit_cl_id+0x94>)
 80109a2:	6809      	ldr	r1, [r1, #0]
 80109a4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80109a8:	24f8      	movs	r4, #248	@ 0xf8
 80109aa:	601c      	str	r4, [r3, #0]
 80109ac:	6913      	ldr	r3, [r2, #16]
 80109ae:	3301      	adds	r3, #1
 80109b0:	4298      	cmp	r0, r3
 80109b2:	bfd5      	itete	le
 80109b4:	2300      	movle	r3, #0
 80109b6:	6113      	strgt	r3, [r2, #16]
 80109b8:	6113      	strle	r3, [r2, #16]
 80109ba:	eb01 0183 	addgt.w	r1, r1, r3, lsl #2
 80109be:	2301      	movs	r3, #1
 80109c0:	600b      	str	r3, [r1, #0]
 80109c2:	6913      	ldr	r3, [r2, #16]
 80109c4:	3301      	adds	r3, #1
 80109c6:	4298      	cmp	r0, r3
 80109c8:	bfd8      	it	le
 80109ca:	2300      	movle	r3, #0
 80109cc:	6113      	str	r3, [r2, #16]
 80109ce:	f7ff ff49 	bl	8010864 <nema_rb_force_flush>
 80109d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80109d6:	2000      	movs	r0, #0
 80109d8:	f7f2 ba75 	b.w	8002ec6 <nema_mutex_unlock>
 80109dc:	2b00      	cmp	r3, #0
 80109de:	d1d4      	bne.n	801098a <nema_rb_submit_cl_id+0x2e>
 80109e0:	460b      	mov	r3, r1
 80109e2:	e7e1      	b.n	80109a8 <nema_rb_submit_cl_id+0x4c>
 80109e4:	bd10      	pop	{r4, pc}
 80109e6:	bf00      	nop
 80109e8:	20082f50 	.word	0x20082f50
 80109ec:	20082f5c 	.word	0x20082f5c
 80109f0:	20082f58 	.word	0x20082f58

080109f4 <init_nema_regs>:
 80109f4:	b538      	push	{r3, r4, r5, lr}
 80109f6:	2100      	movs	r1, #0
 80109f8:	20e8      	movs	r0, #232	@ 0xe8
 80109fa:	f7f2 f987 	bl	8002d0c <nema_reg_write>
 80109fe:	2100      	movs	r1, #0
 8010a00:	20fc      	movs	r0, #252	@ 0xfc
 8010a02:	f7f2 f983 	bl	8002d0c <nema_reg_write>
 8010a06:	2101      	movs	r1, #1
 8010a08:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8010a0c:	f7f2 f97e 	bl	8002d0c <nema_reg_write>
 8010a10:	2000      	movs	r0, #0
 8010a12:	f001 fd35 	bl	8012480 <nema_set_interrupt_ctrl>
 8010a16:	f00d fa9d 	bl	801df54 <nema_blender_init>
 8010a1a:	2100      	movs	r1, #0
 8010a1c:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8010a20:	f00d f9a4 	bl	801dd6c <nema_cl_add_cmd>
 8010a24:	f04f 31ff 	mov.w	r1, #4294967295
 8010a28:	f44f 7001 	mov.w	r0, #516	@ 0x204
 8010a2c:	f00d f99e 	bl	801dd6c <nema_cl_add_cmd>
 8010a30:	f001 fa92 	bl	8011f58 <nema_readHwConfig>
 8010a34:	f410 2080 	ands.w	r0, r0, #262144	@ 0x40000
 8010a38:	d015      	beq.n	8010a66 <init_nema_regs+0x72>
 8010a3a:	2007      	movs	r0, #7
 8010a3c:	f001 fc20 	bl	8012280 <nema_set_depth_ctrl>
 8010a40:	2300      	movs	r3, #0
 8010a42:	4c10      	ldr	r4, [pc, #64]	@ (8010a84 <init_nema_regs+0x90>)
 8010a44:	7820      	ldrb	r0, [r4, #0]
 8010a46:	7063      	strb	r3, [r4, #1]
 8010a48:	f001 fa98 	bl	8011f7c <nema_enable_tiling>
 8010a4c:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8010a50:	2500      	movs	r5, #0
 8010a52:	6962      	ldr	r2, [r4, #20]
 8010a54:	430b      	orrs	r3, r1
 8010a56:	4313      	orrs	r3, r2
 8010a58:	e9c4 5303 	strd	r5, r3, [r4, #12]
 8010a5c:	f001 fa8a 	bl	8011f74 <nema_readHwConfigH>
 8010a60:	0583      	lsls	r3, r0, #22
 8010a62:	d403      	bmi.n	8010a6c <init_nema_regs+0x78>
 8010a64:	bd38      	pop	{r3, r4, r5, pc}
 8010a66:	4c07      	ldr	r4, [pc, #28]	@ (8010a84 <init_nema_regs+0x90>)
 8010a68:	70a0      	strb	r0, [r4, #2]
 8010a6a:	e7ef      	b.n	8010a4c <init_nema_regs+0x58>
 8010a6c:	4629      	mov	r1, r5
 8010a6e:	f44f 705d 	mov.w	r0, #884	@ 0x374
 8010a72:	f7f2 f94b 	bl	8002d0c <nema_reg_write>
 8010a76:	4629      	mov	r1, r5
 8010a78:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010a7c:	f44f 705a 	mov.w	r0, #872	@ 0x368
 8010a80:	f7f2 b944 	b.w	8002d0c <nema_reg_write>
 8010a84:	20000064 	.word	0x20000064

08010a88 <nema_init>:
 8010a88:	b510      	push	{r4, lr}
 8010a8a:	f7f2 f987 	bl	8002d9c <nema_sys_init>
 8010a8e:	1e04      	subs	r4, r0, #0
 8010a90:	db11      	blt.n	8010ab6 <nema_init+0x2e>
 8010a92:	f44f 70f6 	mov.w	r0, #492	@ 0x1ec
 8010a96:	f7f2 f933 	bl	8002d00 <nema_reg_read>
 8010a9a:	4b10      	ldr	r3, [pc, #64]	@ (8010adc <nema_init+0x54>)
 8010a9c:	4298      	cmp	r0, r3
 8010a9e:	d114      	bne.n	8010aca <nema_init+0x42>
 8010aa0:	f00d f870 	bl	801db84 <nema_cl_unbind>
 8010aa4:	22d0      	movs	r2, #208	@ 0xd0
 8010aa6:	2100      	movs	r1, #0
 8010aa8:	480d      	ldr	r0, [pc, #52]	@ (8010ae0 <nema_init+0x58>)
 8010aaa:	f021 fef4 	bl	8032896 <memset>
 8010aae:	b14c      	cbz	r4, 8010ac4 <nema_init+0x3c>
 8010ab0:	2400      	movs	r4, #0
 8010ab2:	4620      	mov	r0, r4
 8010ab4:	bd10      	pop	{r4, pc}
 8010ab6:	4a0a      	ldr	r2, [pc, #40]	@ (8010ae0 <nema_init+0x58>)
 8010ab8:	4620      	mov	r0, r4
 8010aba:	6993      	ldr	r3, [r2, #24]
 8010abc:	f043 0301 	orr.w	r3, r3, #1
 8010ac0:	6193      	str	r3, [r2, #24]
 8010ac2:	bd10      	pop	{r4, pc}
 8010ac4:	f7ff ff96 	bl	80109f4 <init_nema_regs>
 8010ac8:	e7f3      	b.n	8010ab2 <nema_init+0x2a>
 8010aca:	4a05      	ldr	r2, [pc, #20]	@ (8010ae0 <nema_init+0x58>)
 8010acc:	f04f 34ff 	mov.w	r4, #4294967295
 8010ad0:	6993      	ldr	r3, [r2, #24]
 8010ad2:	f043 0302 	orr.w	r3, r3, #2
 8010ad6:	6193      	str	r3, [r2, #24]
 8010ad8:	e7eb      	b.n	8010ab2 <nema_init+0x2a>
 8010ada:	bf00      	nop
 8010adc:	86362000 	.word	0x86362000
 8010ae0:	20000064 	.word	0x20000064

08010ae4 <nema_set_error>:
 8010ae4:	4a02      	ldr	r2, [pc, #8]	@ (8010af0 <nema_set_error+0xc>)
 8010ae6:	6993      	ldr	r3, [r2, #24]
 8010ae8:	4318      	orrs	r0, r3
 8010aea:	6190      	str	r0, [r2, #24]
 8010aec:	4770      	bx	lr
 8010aee:	bf00      	nop
 8010af0:	20000064 	.word	0x20000064

08010af4 <nema_bind_tex>:
 8010af4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010af8:	1c44      	adds	r4, r0, #1
 8010afa:	f8dd a020 	ldr.w	sl, [sp, #32]
 8010afe:	f89d 6028 	ldrb.w	r6, [sp, #40]	@ 0x28
 8010b02:	d029      	beq.n	8010b58 <nema_bind_tex+0x64>
 8010b04:	4698      	mov	r8, r3
 8010b06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010b08:	4617      	mov	r7, r2
 8010b0a:	3301      	adds	r3, #1
 8010b0c:	4689      	mov	r9, r1
 8010b0e:	4604      	mov	r4, r0
 8010b10:	d035      	beq.n	8010b7e <nema_bind_tex+0x8a>
 8010b12:	b31c      	cbz	r4, 8010b5c <nema_bind_tex+0x68>
 8010b14:	4d50      	ldr	r5, [pc, #320]	@ (8010c58 <nema_bind_tex+0x164>)
 8010b16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010b18:	2201      	movs	r2, #1
 8010b1a:	0436      	lsls	r6, r6, #16
 8010b1c:	b29b      	uxth	r3, r3
 8010b1e:	ea46 660a 	orr.w	r6, r6, sl, lsl #24
 8010b22:	431e      	orrs	r6, r3
 8010b24:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 8010b28:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8010b2c:	2003      	movs	r0, #3
 8010b2e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8010b30:	e9c5 970c 	strd	r9, r7, [r5, #48]	@ 0x30
 8010b34:	f8c5 8038 	str.w	r8, [r5, #56]	@ 0x38
 8010b38:	642a      	str	r2, [r5, #64]	@ 0x40
 8010b3a:	f00d f8bb 	bl	801dcb4 <nema_cl_get_space>
 8010b3e:	b158      	cbz	r0, 8010b58 <nema_bind_tex+0x64>
 8010b40:	0124      	lsls	r4, r4, #4
 8010b42:	e9c0 4900 	strd	r4, r9, [r0]
 8010b46:	1d23      	adds	r3, r4, #4
 8010b48:	6083      	str	r3, [r0, #8]
 8010b4a:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
 8010b4c:	3408      	adds	r4, #8
 8010b4e:	e9c0 3403 	strd	r3, r4, [r0, #12]
 8010b52:	ea47 4708 	orr.w	r7, r7, r8, lsl #16
 8010b56:	6147      	str	r7, [r0, #20]
 8010b58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010b5c:	f00a 037f 	and.w	r3, sl, #127	@ 0x7f
 8010b60:	2b12      	cmp	r3, #18
 8010b62:	d03d      	beq.n	8010be0 <nema_bind_tex+0xec>
 8010b64:	f1a3 0216 	sub.w	r2, r3, #22
 8010b68:	2a01      	cmp	r2, #1
 8010b6a:	d939      	bls.n	8010be0 <nema_bind_tex+0xec>
 8010b6c:	3b4c      	subs	r3, #76	@ 0x4c
 8010b6e:	2b01      	cmp	r3, #1
 8010b70:	d96a      	bls.n	8010c48 <nema_bind_tex+0x154>
 8010b72:	4d39      	ldr	r5, [pc, #228]	@ (8010c58 <nema_bind_tex+0x164>)
 8010b74:	7868      	ldrb	r0, [r5, #1]
 8010b76:	f001 fa01 	bl	8011f7c <nema_enable_tiling>
 8010b7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010b7c:	e7cc      	b.n	8010b18 <nema_bind_tex+0x24>
 8010b7e:	06f3      	lsls	r3, r6, #27
 8010b80:	f00a 017f 	and.w	r1, sl, #127	@ 0x7f
 8010b84:	d434      	bmi.n	8010bf0 <nema_bind_tex+0xfc>
 8010b86:	4613      	mov	r3, r2
 8010b88:	f1a1 020b 	sub.w	r2, r1, #11
 8010b8c:	2a42      	cmp	r2, #66	@ 0x42
 8010b8e:	d84f      	bhi.n	8010c30 <nema_bind_tex+0x13c>
 8010b90:	e8df f002 	tbb	[pc, r2]
 8010b94:	4e4e3535 	.word	0x4e4e3535
 8010b98:	484e4e4e 	.word	0x484e4e4e
 8010b9c:	224e4e4e 	.word	0x224e4e4e
 8010ba0:	4e4e4e22 	.word	0x4e4e4e22
 8010ba4:	4e4e4e4e 	.word	0x4e4e4e4e
 8010ba8:	4e4e4e4e 	.word	0x4e4e4e4e
 8010bac:	4e4e4e4e 	.word	0x4e4e4e4e
 8010bb0:	35343c35 	.word	0x35343c35
 8010bb4:	4e4e343c 	.word	0x4e4e343c
 8010bb8:	4e3c3c4e 	.word	0x4e3c3c4e
 8010bbc:	4e34344e 	.word	0x4e34344e
 8010bc0:	4e4e4e4e 	.word	0x4e4e4e4e
 8010bc4:	4e4e4e4e 	.word	0x4e4e4e4e
 8010bc8:	4e4e4e4e 	.word	0x4e4e4e4e
 8010bcc:	4e4e4e4e 	.word	0x4e4e4e4e
 8010bd0:	4e4e4e4e 	.word	0x4e4e4e4e
 8010bd4:	424e      	.short	0x424e
 8010bd6:	42          	.byte	0x42
 8010bd7:	00          	.byte	0x00
 8010bd8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010bdc:	9309      	str	r3, [sp, #36]	@ 0x24
 8010bde:	bb2c      	cbnz	r4, 8010c2c <nema_bind_tex+0x138>
 8010be0:	2301      	movs	r3, #1
 8010be2:	4d1d      	ldr	r5, [pc, #116]	@ (8010c58 <nema_bind_tex+0x164>)
 8010be4:	4618      	mov	r0, r3
 8010be6:	702b      	strb	r3, [r5, #0]
 8010be8:	f001 f9c8 	bl	8011f7c <nema_enable_tiling>
 8010bec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010bee:	e793      	b.n	8010b18 <nema_bind_tex+0x24>
 8010bf0:	1cd3      	adds	r3, r2, #3
 8010bf2:	bf48      	it	mi
 8010bf4:	1d93      	addmi	r3, r2, #6
 8010bf6:	f023 0303 	bic.w	r3, r3, #3
 8010bfa:	e7c5      	b.n	8010b88 <nema_bind_tex+0x94>
 8010bfc:	009b      	lsls	r3, r3, #2
 8010bfe:	1dda      	adds	r2, r3, #7
 8010c00:	d407      	bmi.n	8010c12 <nema_bind_tex+0x11e>
 8010c02:	10d3      	asrs	r3, r2, #3
 8010c04:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c06:	2c00      	cmp	r4, #0
 8010c08:	d0a8      	beq.n	8010b5c <nema_bind_tex+0x68>
 8010c0a:	e783      	b.n	8010b14 <nema_bind_tex+0x20>
 8010c0c:	005b      	lsls	r3, r3, #1
 8010c0e:	1dda      	adds	r2, r3, #7
 8010c10:	d5f7      	bpl.n	8010c02 <nema_bind_tex+0x10e>
 8010c12:	f103 020e 	add.w	r2, r3, #14
 8010c16:	e7f4      	b.n	8010c02 <nema_bind_tex+0x10e>
 8010c18:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010c1c:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c1e:	2c00      	cmp	r4, #0
 8010c20:	d09c      	beq.n	8010b5c <nema_bind_tex+0x68>
 8010c22:	e777      	b.n	8010b14 <nema_bind_tex+0x20>
 8010c24:	005b      	lsls	r3, r3, #1
 8010c26:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c28:	2c00      	cmp	r4, #0
 8010c2a:	d0d9      	beq.n	8010be0 <nema_bind_tex+0xec>
 8010c2c:	4d0a      	ldr	r5, [pc, #40]	@ (8010c58 <nema_bind_tex+0x164>)
 8010c2e:	e773      	b.n	8010b18 <nema_bind_tex+0x24>
 8010c30:	3904      	subs	r1, #4
 8010c32:	2949      	cmp	r1, #73	@ 0x49
 8010c34:	bf8e      	itee	hi
 8010c36:	2204      	movhi	r2, #4
 8010c38:	4a08      	ldrls	r2, [pc, #32]	@ (8010c5c <nema_bind_tex+0x168>)
 8010c3a:	5652      	ldrsbls	r2, [r2, r1]
 8010c3c:	fb02 f303 	mul.w	r3, r2, r3
 8010c40:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c42:	2c00      	cmp	r4, #0
 8010c44:	d08a      	beq.n	8010b5c <nema_bind_tex+0x68>
 8010c46:	e765      	b.n	8010b14 <nema_bind_tex+0x20>
 8010c48:	2301      	movs	r3, #1
 8010c4a:	4d03      	ldr	r5, [pc, #12]	@ (8010c58 <nema_bind_tex+0x164>)
 8010c4c:	4618      	mov	r0, r3
 8010c4e:	702b      	strb	r3, [r5, #0]
 8010c50:	f001 f9a8 	bl	8011fa4 <nema_enable_tiling_2x2>
 8010c54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010c56:	e75f      	b.n	8010b18 <nema_bind_tex+0x24>
 8010c58:	20000064 	.word	0x20000064
 8010c5c:	08035c0c 	.word	0x08035c0c

08010c60 <nema_set_tex_color>:
 8010c60:	4601      	mov	r1, r0
 8010c62:	201c      	movs	r0, #28
 8010c64:	f00d b882 	b.w	801dd6c <nema_cl_add_cmd>

08010c68 <nema_set_const_reg>:
 8010c68:	3080      	adds	r0, #128	@ 0x80
 8010c6a:	0080      	lsls	r0, r0, #2
 8010c6c:	f5b0 7f03 	cmp.w	r0, #524	@ 0x20c
 8010c70:	d900      	bls.n	8010c74 <nema_set_const_reg+0xc>
 8010c72:	4770      	bx	lr
 8010c74:	f00d b87a 	b.w	801dd6c <nema_cl_add_cmd>

08010c78 <nema_set_clip>:
 8010c78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010c7a:	460c      	mov	r4, r1
 8010c7c:	4607      	mov	r7, r0
 8010c7e:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010c82:	4d0c      	ldr	r5, [pc, #48]	@ (8010cb4 <nema_set_clip+0x3c>)
 8010c84:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
 8010c88:	b289      	uxth	r1, r1
 8010c8a:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8010c8e:	19d6      	adds	r6, r2, r7
 8010c90:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8010c94:	e9c5 7407 	strd	r7, r4, [r5, #28]
 8010c98:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
 8010c9c:	441c      	add	r4, r3
 8010c9e:	f00d f865 	bl	801dd6c <nema_cl_add_cmd>
 8010ca2:	b2b1      	uxth	r1, r6
 8010ca4:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8010ca8:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8010cac:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8010cb0:	f00d b85c 	b.w	801dd6c <nema_cl_add_cmd>
 8010cb4:	20000064 	.word	0x20000064

08010cb8 <nema_set_clip2>:
 8010cb8:	b570      	push	{r4, r5, r6, lr}
 8010cba:	460d      	mov	r5, r1
 8010cbc:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010cc0:	ea25 76e5 	bic.w	r6, r5, r5, asr #31
 8010cc4:	b289      	uxth	r1, r1
 8010cc6:	1814      	adds	r4, r2, r0
 8010cc8:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
 8010ccc:	f44f 70ac 	mov.w	r0, #344	@ 0x158
 8010cd0:	441d      	add	r5, r3
 8010cd2:	f00d f84b 	bl	801dd6c <nema_cl_add_cmd>
 8010cd6:	b2a1      	uxth	r1, r4
 8010cd8:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8010cdc:	f44f 70ae 	mov.w	r0, #348	@ 0x15c
 8010ce0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ce4:	f00d b842 	b.w	801dd6c <nema_cl_add_cmd>

08010ce8 <nema_supports_clip2>:
 8010ce8:	b508      	push	{r3, lr}
 8010cea:	f44f 70ae 	mov.w	r0, #348	@ 0x15c
 8010cee:	f7f2 f807 	bl	8002d00 <nema_reg_read>
 8010cf2:	3000      	adds	r0, #0
 8010cf4:	bf18      	it	ne
 8010cf6:	2001      	movne	r0, #1
 8010cf8:	bd08      	pop	{r3, pc}
 8010cfa:	bf00      	nop

08010cfc <nema_set_clip_temp>:
 8010cfc:	b570      	push	{r4, r5, r6, lr}
 8010cfe:	460d      	mov	r5, r1
 8010d00:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010d04:	ea25 76e5 	bic.w	r6, r5, r5, asr #31
 8010d08:	b289      	uxth	r1, r1
 8010d0a:	1814      	adds	r4, r2, r0
 8010d0c:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
 8010d10:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8010d14:	441d      	add	r5, r3
 8010d16:	f00d f829 	bl	801dd6c <nema_cl_add_cmd>
 8010d1a:	b2a1      	uxth	r1, r4
 8010d1c:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8010d20:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8010d24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d28:	f00d b820 	b.w	801dd6c <nema_cl_add_cmd>

08010d2c <nema_set_clip_pop>:
 8010d2c:	b538      	push	{r3, r4, r5, lr}
 8010d2e:	4d0d      	ldr	r5, [pc, #52]	@ (8010d64 <nema_set_clip_pop+0x38>)
 8010d30:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8010d34:	e9d5 3207 	ldrd	r3, r2, [r5, #28]
 8010d38:	ea23 71e3 	bic.w	r1, r3, r3, asr #31
 8010d3c:	ea22 74e2 	bic.w	r4, r2, r2, asr #31
 8010d40:	b289      	uxth	r1, r1
 8010d42:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8010d46:	e9d5 4509 	ldrd	r4, r5, [r5, #36]	@ 0x24
 8010d4a:	441c      	add	r4, r3
 8010d4c:	4415      	add	r5, r2
 8010d4e:	f00d f80d 	bl	801dd6c <nema_cl_add_cmd>
 8010d52:	b2a1      	uxth	r1, r4
 8010d54:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8010d58:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8010d5c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010d60:	f00d b804 	b.w	801dd6c <nema_cl_add_cmd>
 8010d64:	20000064 	.word	0x20000064

08010d68 <nema_enable_gradient>:
 8010d68:	2800      	cmp	r0, #0
 8010d6a:	bf14      	ite	ne
 8010d6c:	f04f 6100 	movne.w	r1, #134217728	@ 0x8000000
 8010d70:	2100      	moveq	r1, #0
 8010d72:	b410      	push	{r4}
 8010d74:	4a05      	ldr	r2, [pc, #20]	@ (8010d8c <nema_enable_gradient+0x24>)
 8010d76:	6950      	ldr	r0, [r2, #20]
 8010d78:	e9d2 3401 	ldrd	r3, r4, [r2, #4]
 8010d7c:	4323      	orrs	r3, r4
 8010d7e:	4303      	orrs	r3, r0
 8010d80:	430b      	orrs	r3, r1
 8010d82:	e9c2 1303 	strd	r1, r3, [r2, #12]
 8010d86:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010d8a:	4770      	bx	lr
 8010d8c:	20000064 	.word	0x20000064

08010d90 <nema_stride_size>:
 8010d90:	06cb      	lsls	r3, r1, #27
 8010d92:	d504      	bpl.n	8010d9e <nema_stride_size+0xe>
 8010d94:	1cd3      	adds	r3, r2, #3
 8010d96:	bf48      	it	mi
 8010d98:	1d93      	addmi	r3, r2, #6
 8010d9a:	f023 0203 	bic.w	r2, r3, #3
 8010d9e:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8010da2:	f1a0 030b 	sub.w	r3, r0, #11
 8010da6:	2b42      	cmp	r3, #66	@ 0x42
 8010da8:	d839      	bhi.n	8010e1e <nema_stride_size+0x8e>
 8010daa:	e8df f003 	tbb	[pc, r3]
 8010dae:	3232      	.short	0x3232
 8010db0:	38383838 	.word	0x38383838
 8010db4:	38382538 	.word	0x38382538
 8010db8:	38222238 	.word	0x38222238
 8010dbc:	38383838 	.word	0x38383838
 8010dc0:	38383838 	.word	0x38383838
 8010dc4:	38383838 	.word	0x38383838
 8010dc8:	2c323838 	.word	0x2c323838
 8010dcc:	272c3227 	.word	0x272c3227
 8010dd0:	2c383838 	.word	0x2c383838
 8010dd4:	2738382c 	.word	0x2738382c
 8010dd8:	38383827 	.word	0x38383827
 8010ddc:	38383838 	.word	0x38383838
 8010de0:	38383838 	.word	0x38383838
 8010de4:	38383838 	.word	0x38383838
 8010de8:	38383838 	.word	0x38383838
 8010dec:	22383838 	.word	0x22383838
 8010df0:	22          	.byte	0x22
 8010df1:	00          	.byte	0x00
 8010df2:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8010df6:	4770      	bx	lr
 8010df8:	0050      	lsls	r0, r2, #1
 8010dfa:	4770      	bx	lr
 8010dfc:	0090      	lsls	r0, r2, #2
 8010dfe:	1dc2      	adds	r2, r0, #7
 8010e00:	d404      	bmi.n	8010e0c <nema_stride_size+0x7c>
 8010e02:	10d0      	asrs	r0, r2, #3
 8010e04:	4770      	bx	lr
 8010e06:	0050      	lsls	r0, r2, #1
 8010e08:	1dc2      	adds	r2, r0, #7
 8010e0a:	d5fa      	bpl.n	8010e02 <nema_stride_size+0x72>
 8010e0c:	f100 020e 	add.w	r2, r0, #14
 8010e10:	e7f7      	b.n	8010e02 <nema_stride_size+0x72>
 8010e12:	1dd0      	adds	r0, r2, #7
 8010e14:	bf48      	it	mi
 8010e16:	f102 000e 	addmi.w	r0, r2, #14
 8010e1a:	10c0      	asrs	r0, r0, #3
 8010e1c:	4770      	bx	lr
 8010e1e:	3804      	subs	r0, #4
 8010e20:	2849      	cmp	r0, #73	@ 0x49
 8010e22:	bf8e      	itee	hi
 8010e24:	2004      	movhi	r0, #4
 8010e26:	4b02      	ldrls	r3, [pc, #8]	@ (8010e30 <nema_stride_size+0xa0>)
 8010e28:	5618      	ldrsbls	r0, [r3, r0]
 8010e2a:	fb00 f002 	mul.w	r0, r0, r2
 8010e2e:	4770      	bx	lr
 8010e30:	08035c0c 	.word	0x08035c0c

08010e34 <nema_rgba>:
 8010e34:	061b      	lsls	r3, r3, #24
 8010e36:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8010e3a:	4318      	orrs	r0, r3
 8010e3c:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 8010e40:	4770      	bx	lr
 8010e42:	bf00      	nop

08010e44 <nema_bind_src_tex>:
 8010e44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e48:	9c06      	ldr	r4, [sp, #24]
 8010e4a:	460e      	mov	r6, r1
 8010e4c:	1c61      	adds	r1, r4, #1
 8010e4e:	4605      	mov	r5, r0
 8010e50:	4617      	mov	r7, r2
 8010e52:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8010e56:	d022      	beq.n	8010e9e <nema_bind_src_tex+0x5a>
 8010e58:	2201      	movs	r2, #1
 8010e5a:	0400      	lsls	r0, r0, #16
 8010e5c:	f8df 80e8 	ldr.w	r8, [pc, #232]	@ 8010f48 <nema_bind_src_tex+0x104>
 8010e60:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
 8010e64:	b2a4      	uxth	r4, r4
 8010e66:	4323      	orrs	r3, r4
 8010e68:	2003      	movs	r0, #3
 8010e6a:	f8c8 3050 	str.w	r3, [r8, #80]	@ 0x50
 8010e6e:	e9c8 5611 	strd	r5, r6, [r8, #68]	@ 0x44
 8010e72:	f8c8 704c 	str.w	r7, [r8, #76]	@ 0x4c
 8010e76:	f8c8 2054 	str.w	r2, [r8, #84]	@ 0x54
 8010e7a:	f00c ff1b 	bl	801dcb4 <nema_cl_get_space>
 8010e7e:	b160      	cbz	r0, 8010e9a <nema_bind_src_tex+0x56>
 8010e80:	2110      	movs	r1, #16
 8010e82:	2214      	movs	r2, #20
 8010e84:	2318      	movs	r3, #24
 8010e86:	e9c0 1500 	strd	r1, r5, [r0]
 8010e8a:	6082      	str	r2, [r0, #8]
 8010e8c:	f8d8 2050 	ldr.w	r2, [r8, #80]	@ 0x50
 8010e90:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8010e94:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8010e98:	6146      	str	r6, [r0, #20]
 8010e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010e9e:	06c2      	lsls	r2, r0, #27
 8010ea0:	f003 017f 	and.w	r1, r3, #127	@ 0x7f
 8010ea4:	d428      	bmi.n	8010ef8 <nema_bind_src_tex+0xb4>
 8010ea6:	4634      	mov	r4, r6
 8010ea8:	f1a1 020b 	sub.w	r2, r1, #11
 8010eac:	2a42      	cmp	r2, #66	@ 0x42
 8010eae:	d83f      	bhi.n	8010f30 <nema_bind_src_tex+0xec>
 8010eb0:	e8df f002 	tbb	[pc, r2]
 8010eb4:	3e3e3636 	.word	0x3e3e3636
 8010eb8:	3c3e3e3e 	.word	0x3c3e3e3e
 8010ebc:	283e3e3e 	.word	0x283e3e3e
 8010ec0:	3e3e3e28 	.word	0x3e3e3e28
 8010ec4:	3e3e3e3e 	.word	0x3e3e3e3e
 8010ec8:	3e3e3e3e 	.word	0x3e3e3e3e
 8010ecc:	3e3e3e3e 	.word	0x3e3e3e3e
 8010ed0:	36302b36 	.word	0x36302b36
 8010ed4:	3e3e302b 	.word	0x3e3e302b
 8010ed8:	3e2b2b3e 	.word	0x3e2b2b3e
 8010edc:	3e30303e 	.word	0x3e30303e
 8010ee0:	3e3e3e3e 	.word	0x3e3e3e3e
 8010ee4:	3e3e3e3e 	.word	0x3e3e3e3e
 8010ee8:	3e3e3e3e 	.word	0x3e3e3e3e
 8010eec:	3e3e3e3e 	.word	0x3e3e3e3e
 8010ef0:	3e3e3e3e 	.word	0x3e3e3e3e
 8010ef4:	283e      	.short	0x283e
 8010ef6:	28          	.byte	0x28
 8010ef7:	00          	.byte	0x00
 8010ef8:	1cf4      	adds	r4, r6, #3
 8010efa:	bf48      	it	mi
 8010efc:	1db4      	addmi	r4, r6, #6
 8010efe:	f024 0403 	bic.w	r4, r4, #3
 8010f02:	e7d1      	b.n	8010ea8 <nema_bind_src_tex+0x64>
 8010f04:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8010f08:	e7a6      	b.n	8010e58 <nema_bind_src_tex+0x14>
 8010f0a:	0062      	lsls	r2, r4, #1
 8010f0c:	1dd4      	adds	r4, r2, #7
 8010f0e:	d404      	bmi.n	8010f1a <nema_bind_src_tex+0xd6>
 8010f10:	10e4      	asrs	r4, r4, #3
 8010f12:	e7a1      	b.n	8010e58 <nema_bind_src_tex+0x14>
 8010f14:	00a2      	lsls	r2, r4, #2
 8010f16:	1dd4      	adds	r4, r2, #7
 8010f18:	d5fa      	bpl.n	8010f10 <nema_bind_src_tex+0xcc>
 8010f1a:	f102 040e 	add.w	r4, r2, #14
 8010f1e:	e7f7      	b.n	8010f10 <nema_bind_src_tex+0xcc>
 8010f20:	1de2      	adds	r2, r4, #7
 8010f22:	bf48      	it	mi
 8010f24:	f104 020e 	addmi.w	r2, r4, #14
 8010f28:	10d4      	asrs	r4, r2, #3
 8010f2a:	e795      	b.n	8010e58 <nema_bind_src_tex+0x14>
 8010f2c:	0064      	lsls	r4, r4, #1
 8010f2e:	e793      	b.n	8010e58 <nema_bind_src_tex+0x14>
 8010f30:	3904      	subs	r1, #4
 8010f32:	2949      	cmp	r1, #73	@ 0x49
 8010f34:	bf8e      	itee	hi
 8010f36:	2204      	movhi	r2, #4
 8010f38:	4a02      	ldrls	r2, [pc, #8]	@ (8010f44 <nema_bind_src_tex+0x100>)
 8010f3a:	5652      	ldrsbls	r2, [r2, r1]
 8010f3c:	fb02 f404 	mul.w	r4, r2, r4
 8010f40:	e78a      	b.n	8010e58 <nema_bind_src_tex+0x14>
 8010f42:	bf00      	nop
 8010f44:	08035c0c 	.word	0x08035c0c
 8010f48:	20000064 	.word	0x20000064

08010f4c <nema_bind_dst_tex>:
 8010f4c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010f50:	9d08      	ldr	r5, [sp, #32]
 8010f52:	4699      	mov	r9, r3
 8010f54:	4617      	mov	r7, r2
 8010f56:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8010f5a:	1c6b      	adds	r3, r5, #1
 8010f5c:	4680      	mov	r8, r0
 8010f5e:	460e      	mov	r6, r1
 8010f60:	d031      	beq.n	8010fc6 <nema_bind_dst_tex+0x7a>
 8010f62:	2a12      	cmp	r2, #18
 8010f64:	d00e      	beq.n	8010f84 <nema_bind_dst_tex+0x38>
 8010f66:	f1a2 0316 	sub.w	r3, r2, #22
 8010f6a:	2b01      	cmp	r3, #1
 8010f6c:	d90a      	bls.n	8010f84 <nema_bind_dst_tex+0x38>
 8010f6e:	3a4c      	subs	r2, #76	@ 0x4c
 8010f70:	2a01      	cmp	r2, #1
 8010f72:	f240 80b7 	bls.w	80110e4 <nema_bind_dst_tex+0x198>
 8010f76:	4c6e      	ldr	r4, [pc, #440]	@ (8011130 <nema_bind_dst_tex+0x1e4>)
 8010f78:	7860      	ldrb	r0, [r4, #1]
 8010f7a:	f000 ffff 	bl	8011f7c <nema_enable_tiling>
 8010f7e:	e007      	b.n	8010f90 <nema_bind_dst_tex+0x44>
 8010f80:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8010f84:	2301      	movs	r3, #1
 8010f86:	4c6a      	ldr	r4, [pc, #424]	@ (8011130 <nema_bind_dst_tex+0x1e4>)
 8010f88:	4618      	mov	r0, r3
 8010f8a:	7023      	strb	r3, [r4, #0]
 8010f8c:	f000 fff6 	bl	8011f7c <nema_enable_tiling>
 8010f90:	2201      	movs	r2, #1
 8010f92:	b2ad      	uxth	r5, r5
 8010f94:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8010f98:	2003      	movs	r0, #3
 8010f9a:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8010f9c:	e9c4 860c 	strd	r8, r6, [r4, #48]	@ 0x30
 8010fa0:	63a7      	str	r7, [r4, #56]	@ 0x38
 8010fa2:	6422      	str	r2, [r4, #64]	@ 0x40
 8010fa4:	f00c fe86 	bl	801dcb4 <nema_cl_get_space>
 8010fa8:	b158      	cbz	r0, 8010fc2 <nema_bind_dst_tex+0x76>
 8010faa:	2100      	movs	r1, #0
 8010fac:	2204      	movs	r2, #4
 8010fae:	2308      	movs	r3, #8
 8010fb0:	e9c0 1800 	strd	r1, r8, [r0]
 8010fb4:	6082      	str	r2, [r0, #8]
 8010fb6:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8010fb8:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8010fbc:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8010fc0:	6146      	str	r6, [r0, #20]
 8010fc2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010fc6:	f1a2 030b 	sub.w	r3, r2, #11
 8010fca:	2b42      	cmp	r3, #66	@ 0x42
 8010fcc:	f200 80a6 	bhi.w	801111c <nema_bind_dst_tex+0x1d0>
 8010fd0:	a101      	add	r1, pc, #4	@ (adr r1, 8010fd8 <nema_bind_dst_tex+0x8c>)
 8010fd2:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8010fd6:	bf00      	nop
 8010fd8:	0801110f 	.word	0x0801110f
 8010fdc:	0801110f 	.word	0x0801110f
 8010fe0:	0801111d 	.word	0x0801111d
 8010fe4:	0801111d 	.word	0x0801111d
 8010fe8:	0801111d 	.word	0x0801111d
 8010fec:	0801111d 	.word	0x0801111d
 8010ff0:	0801111d 	.word	0x0801111d
 8010ff4:	08011119 	.word	0x08011119
 8010ff8:	0801111d 	.word	0x0801111d
 8010ffc:	0801111d 	.word	0x0801111d
 8011000:	0801111d 	.word	0x0801111d
 8011004:	08010f81 	.word	0x08010f81
 8011008:	08010f81 	.word	0x08010f81
 801100c:	0801111d 	.word	0x0801111d
 8011010:	0801111d 	.word	0x0801111d
 8011014:	0801111d 	.word	0x0801111d
 8011018:	0801111d 	.word	0x0801111d
 801101c:	0801111d 	.word	0x0801111d
 8011020:	0801111d 	.word	0x0801111d
 8011024:	0801111d 	.word	0x0801111d
 8011028:	0801111d 	.word	0x0801111d
 801102c:	0801111d 	.word	0x0801111d
 8011030:	0801111d 	.word	0x0801111d
 8011034:	0801111d 	.word	0x0801111d
 8011038:	0801111d 	.word	0x0801111d
 801103c:	0801111d 	.word	0x0801111d
 8011040:	0801111d 	.word	0x0801111d
 8011044:	0801111d 	.word	0x0801111d
 8011048:	0801110f 	.word	0x0801110f
 801104c:	080110f9 	.word	0x080110f9
 8011050:	08011103 	.word	0x08011103
 8011054:	0801110f 	.word	0x0801110f
 8011058:	080110f9 	.word	0x080110f9
 801105c:	08011103 	.word	0x08011103
 8011060:	0801111d 	.word	0x0801111d
 8011064:	0801111d 	.word	0x0801111d
 8011068:	0801111d 	.word	0x0801111d
 801106c:	080110f9 	.word	0x080110f9
 8011070:	080110f9 	.word	0x080110f9
 8011074:	0801111d 	.word	0x0801111d
 8011078:	0801111d 	.word	0x0801111d
 801107c:	08011103 	.word	0x08011103
 8011080:	08011103 	.word	0x08011103
 8011084:	0801111d 	.word	0x0801111d
 8011088:	0801111d 	.word	0x0801111d
 801108c:	0801111d 	.word	0x0801111d
 8011090:	0801111d 	.word	0x0801111d
 8011094:	0801111d 	.word	0x0801111d
 8011098:	0801111d 	.word	0x0801111d
 801109c:	0801111d 	.word	0x0801111d
 80110a0:	0801111d 	.word	0x0801111d
 80110a4:	0801111d 	.word	0x0801111d
 80110a8:	0801111d 	.word	0x0801111d
 80110ac:	0801111d 	.word	0x0801111d
 80110b0:	0801111d 	.word	0x0801111d
 80110b4:	0801111d 	.word	0x0801111d
 80110b8:	0801111d 	.word	0x0801111d
 80110bc:	0801111d 	.word	0x0801111d
 80110c0:	0801111d 	.word	0x0801111d
 80110c4:	0801111d 	.word	0x0801111d
 80110c8:	0801111d 	.word	0x0801111d
 80110cc:	0801111d 	.word	0x0801111d
 80110d0:	0801111d 	.word	0x0801111d
 80110d4:	0801111d 	.word	0x0801111d
 80110d8:	0801111d 	.word	0x0801111d
 80110dc:	080110f3 	.word	0x080110f3
 80110e0:	080110f3 	.word	0x080110f3
 80110e4:	2301      	movs	r3, #1
 80110e6:	4c12      	ldr	r4, [pc, #72]	@ (8011130 <nema_bind_dst_tex+0x1e4>)
 80110e8:	4618      	mov	r0, r3
 80110ea:	7023      	strb	r3, [r4, #0]
 80110ec:	f000 ff5a 	bl	8011fa4 <nema_enable_tiling_2x2>
 80110f0:	e74e      	b.n	8010f90 <nema_bind_dst_tex+0x44>
 80110f2:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 80110f6:	e734      	b.n	8010f62 <nema_bind_dst_tex+0x16>
 80110f8:	0073      	lsls	r3, r6, #1
 80110fa:	1ddd      	adds	r5, r3, #7
 80110fc:	d404      	bmi.n	8011108 <nema_bind_dst_tex+0x1bc>
 80110fe:	10ed      	asrs	r5, r5, #3
 8011100:	e72f      	b.n	8010f62 <nema_bind_dst_tex+0x16>
 8011102:	00b3      	lsls	r3, r6, #2
 8011104:	1ddd      	adds	r5, r3, #7
 8011106:	d5fa      	bpl.n	80110fe <nema_bind_dst_tex+0x1b2>
 8011108:	f103 050e 	add.w	r5, r3, #14
 801110c:	e7f7      	b.n	80110fe <nema_bind_dst_tex+0x1b2>
 801110e:	1df5      	adds	r5, r6, #7
 8011110:	d5f5      	bpl.n	80110fe <nema_bind_dst_tex+0x1b2>
 8011112:	f106 050e 	add.w	r5, r6, #14
 8011116:	e7f2      	b.n	80110fe <nema_bind_dst_tex+0x1b2>
 8011118:	0075      	lsls	r5, r6, #1
 801111a:	e733      	b.n	8010f84 <nema_bind_dst_tex+0x38>
 801111c:	1f13      	subs	r3, r2, #4
 801111e:	2b49      	cmp	r3, #73	@ 0x49
 8011120:	bf8e      	itee	hi
 8011122:	2504      	movhi	r5, #4
 8011124:	4903      	ldrls	r1, [pc, #12]	@ (8011134 <nema_bind_dst_tex+0x1e8>)
 8011126:	56cd      	ldrsbls	r5, [r1, r3]
 8011128:	fb05 f506 	mul.w	r5, r5, r6
 801112c:	e719      	b.n	8010f62 <nema_bind_dst_tex+0x16>
 801112e:	bf00      	nop
 8011130:	20000064 	.word	0x20000064
 8011134:	08035c0c 	.word	0x08035c0c

08011138 <nema_bind_lut_tex>:
 8011138:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801113c:	f1a3 040b 	sub.w	r4, r3, #11
 8011140:	2c2a      	cmp	r4, #42	@ 0x2a
 8011142:	469a      	mov	sl, r3
 8011144:	4680      	mov	r8, r0
 8011146:	460e      	mov	r6, r1
 8011148:	4617      	mov	r7, r2
 801114a:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801114e:	f89d 502c 	ldrb.w	r5, [sp, #44]	@ 0x2c
 8011152:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011154:	d84a      	bhi.n	80111ec <nema_bind_lut_tex+0xb4>
 8011156:	4a27      	ldr	r2, [pc, #156]	@ (80111f4 <nema_bind_lut_tex+0xbc>)
 8011158:	f832 b014 	ldrh.w	fp, [r2, r4, lsl #1]
 801115c:	465a      	mov	r2, fp
 801115e:	2101      	movs	r1, #1
 8011160:	4c25      	ldr	r4, [pc, #148]	@ (80111f8 <nema_bind_lut_tex+0xc0>)
 8011162:	061b      	lsls	r3, r3, #24
 8011164:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8011168:	6663      	str	r3, [r4, #100]	@ 0x64
 801116a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801116c:	2003      	movs	r0, #3
 801116e:	e9c4 3216 	strd	r3, r2, [r4, #88]	@ 0x58
 8011172:	6621      	str	r1, [r4, #96]	@ 0x60
 8011174:	66a1      	str	r1, [r4, #104]	@ 0x68
 8011176:	f00c fd9d 	bl	801dcb4 <nema_cl_get_space>
 801117a:	b170      	cbz	r0, 801119a <nema_bind_lut_tex+0x62>
 801117c:	2220      	movs	r2, #32
 801117e:	f04f 0c24 	mov.w	ip, #36	@ 0x24
 8011182:	2128      	movs	r1, #40	@ 0x28
 8011184:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8011186:	f8c0 c008 	str.w	ip, [r0, #8]
 801118a:	e9c0 2300 	strd	r2, r3, [r0]
 801118e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8011190:	f44b 3280 	orr.w	r2, fp, #65536	@ 0x10000
 8011194:	e9c0 3103 	strd	r3, r1, [r0, #12]
 8011198:	6142      	str	r2, [r0, #20]
 801119a:	f1b9 3fff 	cmp.w	r9, #4294967295
 801119e:	d106      	bne.n	80111ae <nema_bind_lut_tex+0x76>
 80111a0:	4632      	mov	r2, r6
 80111a2:	4629      	mov	r1, r5
 80111a4:	f00a 007f 	and.w	r0, sl, #127	@ 0x7f
 80111a8:	f7ff fdf2 	bl	8010d90 <nema_stride_size>
 80111ac:	4681      	mov	r9, r0
 80111ae:	2201      	movs	r2, #1
 80111b0:	042d      	lsls	r5, r5, #16
 80111b2:	ea45 630a 	orr.w	r3, r5, sl, lsl #24
 80111b6:	fa1f f989 	uxth.w	r9, r9
 80111ba:	ea43 0309 	orr.w	r3, r3, r9
 80111be:	2003      	movs	r0, #3
 80111c0:	6523      	str	r3, [r4, #80]	@ 0x50
 80111c2:	e9c4 8611 	strd	r8, r6, [r4, #68]	@ 0x44
 80111c6:	64e7      	str	r7, [r4, #76]	@ 0x4c
 80111c8:	6562      	str	r2, [r4, #84]	@ 0x54
 80111ca:	f00c fd73 	bl	801dcb4 <nema_cl_get_space>
 80111ce:	b158      	cbz	r0, 80111e8 <nema_bind_lut_tex+0xb0>
 80111d0:	2110      	movs	r1, #16
 80111d2:	2214      	movs	r2, #20
 80111d4:	2318      	movs	r3, #24
 80111d6:	e9c0 1800 	strd	r1, r8, [r0]
 80111da:	6082      	str	r2, [r0, #8]
 80111dc:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 80111de:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 80111e2:	e9c0 2303 	strd	r2, r3, [r0, #12]
 80111e6:	6146      	str	r6, [r0, #20]
 80111e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111ec:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80111f0:	4693      	mov	fp, r2
 80111f2:	e7b4      	b.n	801115e <nema_bind_lut_tex+0x26>
 80111f4:	08035c58 	.word	0x08035c58
 80111f8:	20000064 	.word	0x20000064

080111fc <nema_set_gradient>:
 80111fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011200:	ed2d 8b0c 	vpush	{d8-d13}
 8011204:	eeb0 da60 	vmov.f32	s26, s1
 8011208:	b08d      	sub	sp, #52	@ 0x34
 801120a:	eef0 ca41 	vmov.f32	s25, s2
 801120e:	eeb0 ca61 	vmov.f32	s24, s3
 8011212:	eef0 ba42 	vmov.f32	s23, s4
 8011216:	eeb0 ba62 	vmov.f32	s22, s5
 801121a:	eef0 aa43 	vmov.f32	s21, s6
 801121e:	eeb0 aa63 	vmov.f32	s20, s7
 8011222:	eef0 9a44 	vmov.f32	s19, s8
 8011226:	eeb0 9a64 	vmov.f32	s18, s9
 801122a:	eef0 8a45 	vmov.f32	s17, s10
 801122e:	eeb0 8a65 	vmov.f32	s16, s11
 8011232:	f000 fb25 	bl	8011880 <nema_f2fx>
 8011236:	eeb0 0a4d 	vmov.f32	s0, s26
 801123a:	4604      	mov	r4, r0
 801123c:	f000 fb20 	bl	8011880 <nema_f2fx>
 8011240:	eeb0 0a6c 	vmov.f32	s0, s25
 8011244:	4605      	mov	r5, r0
 8011246:	f000 fb1b 	bl	8011880 <nema_f2fx>
 801124a:	eeb0 0a4c 	vmov.f32	s0, s24
 801124e:	4606      	mov	r6, r0
 8011250:	f000 fb16 	bl	8011880 <nema_f2fx>
 8011254:	eeb0 0a6b 	vmov.f32	s0, s23
 8011258:	4607      	mov	r7, r0
 801125a:	f000 fb11 	bl	8011880 <nema_f2fx>
 801125e:	eeb0 0a4b 	vmov.f32	s0, s22
 8011262:	900b      	str	r0, [sp, #44]	@ 0x2c
 8011264:	f000 fb0c 	bl	8011880 <nema_f2fx>
 8011268:	eeb0 0a6a 	vmov.f32	s0, s21
 801126c:	4680      	mov	r8, r0
 801126e:	f000 fb07 	bl	8011880 <nema_f2fx>
 8011272:	eeb0 0a4a 	vmov.f32	s0, s20
 8011276:	4681      	mov	r9, r0
 8011278:	f000 fb02 	bl	8011880 <nema_f2fx>
 801127c:	eeb0 0a69 	vmov.f32	s0, s19
 8011280:	4682      	mov	sl, r0
 8011282:	f000 fafd 	bl	8011880 <nema_f2fx>
 8011286:	eeb0 0a49 	vmov.f32	s0, s18
 801128a:	4683      	mov	fp, r0
 801128c:	f000 faf8 	bl	8011880 <nema_f2fx>
 8011290:	eeb0 0a68 	vmov.f32	s0, s17
 8011294:	900a      	str	r0, [sp, #40]	@ 0x28
 8011296:	f000 faf3 	bl	8011880 <nema_f2fx>
 801129a:	eeb0 0a48 	vmov.f32	s0, s16
 801129e:	9009      	str	r0, [sp, #36]	@ 0x24
 80112a0:	f000 faee 	bl	8011880 <nema_f2fx>
 80112a4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80112a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80112a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80112aa:	9100      	str	r1, [sp, #0]
 80112ac:	9007      	str	r0, [sp, #28]
 80112ae:	9206      	str	r2, [sp, #24]
 80112b0:	e9cd b304 	strd	fp, r3, [sp, #16]
 80112b4:	e9cd 9a02 	strd	r9, sl, [sp, #8]
 80112b8:	f8cd 8004 	str.w	r8, [sp, #4]
 80112bc:	463b      	mov	r3, r7
 80112be:	4632      	mov	r2, r6
 80112c0:	4629      	mov	r1, r5
 80112c2:	4620      	mov	r0, r4
 80112c4:	f000 ffe2 	bl	801228c <nema_set_gradient_fx>
 80112c8:	b00d      	add	sp, #52	@ 0x34
 80112ca:	ecbd 8b0c 	vpop	{d8-d13}
 80112ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80112d2:	bf00      	nop

080112d4 <nema_fill_rect>:
 80112d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80112d8:	4604      	mov	r4, r0
 80112da:	460d      	mov	r5, r1
 80112dc:	4616      	mov	r6, r2
 80112de:	461f      	mov	r7, r3
 80112e0:	9806      	ldr	r0, [sp, #24]
 80112e2:	f001 f81f 	bl	8012324 <nema_set_raster_color>
 80112e6:	463b      	mov	r3, r7
 80112e8:	4632      	mov	r2, r6
 80112ea:	4629      	mov	r1, r5
 80112ec:	4620      	mov	r0, r4
 80112ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80112f2:	f001 b859 	b.w	80123a8 <nema_raster_rect>
 80112f6:	bf00      	nop

080112f8 <nema_blit>:
 80112f8:	ee07 0a90 	vmov	s15, r0
 80112fc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8011300:	ee07 1a90 	vmov	s15, r1
 8011304:	b500      	push	{lr}
 8011306:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801130a:	b083      	sub	sp, #12
 801130c:	e9cd 0100 	strd	r0, r1, [sp]
 8011310:	f000 ff56 	bl	80121c0 <nema_set_matrix_translate>
 8011314:	e9dd 0100 	ldrd	r0, r1, [sp]
 8011318:	4a03      	ldr	r2, [pc, #12]	@ (8011328 <nema_blit+0x30>)
 801131a:	e9d2 2312 	ldrd	r2, r3, [r2, #72]	@ 0x48
 801131e:	b003      	add	sp, #12
 8011320:	f85d eb04 	ldr.w	lr, [sp], #4
 8011324:	f001 b840 	b.w	80123a8 <nema_raster_rect>
 8011328:	20000064 	.word	0x20000064

0801132c <nema_blit_rotate>:
 801132c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801132e:	2600      	movs	r6, #0
 8011330:	f04f 577e 	mov.w	r7, #1065353216	@ 0x3f800000
 8011334:	4b68      	ldr	r3, [pc, #416]	@ (80114d8 <nema_blit_rotate+0x1ac>)
 8011336:	b08b      	sub	sp, #44	@ 0x2c
 8011338:	3a01      	subs	r2, #1
 801133a:	9607      	str	r6, [sp, #28]
 801133c:	9608      	str	r6, [sp, #32]
 801133e:	9709      	str	r7, [sp, #36]	@ 0x24
 8011340:	4604      	mov	r4, r0
 8011342:	e9d3 6712 	ldrd	r6, r7, [r3, #72]	@ 0x48
 8011346:	460d      	mov	r5, r1
 8011348:	2a0e      	cmp	r2, #14
 801134a:	f200 80b0 	bhi.w	80114ae <nema_blit_rotate+0x182>
 801134e:	e8df f002 	tbb	[pc, r2]
 8011352:	4730      	.short	0x4730
 8011354:	9a836f58 	.word	0x9a836f58
 8011358:	6f089a08 	.word	0x6f089a08
 801135c:	ae584783 	.word	0xae584783
 8011360:	30          	.byte	0x30
 8011361:	00          	.byte	0x00
 8011362:	1970      	adds	r0, r6, r5
 8011364:	ee07 0a10 	vmov	s14, r0
 8011368:	1938      	adds	r0, r7, r4
 801136a:	4631      	mov	r1, r6
 801136c:	ee07 0a90 	vmov	s15, r0
 8011370:	2200      	movs	r2, #0
 8011372:	463e      	mov	r6, r7
 8011374:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011378:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801137c:	460f      	mov	r7, r1
 801137e:	4b57      	ldr	r3, [pc, #348]	@ (80114dc <nema_blit_rotate+0x1b0>)
 8011380:	9201      	str	r2, [sp, #4]
 8011382:	9205      	str	r2, [sp, #20]
 8011384:	9302      	str	r3, [sp, #8]
 8011386:	9304      	str	r3, [sp, #16]
 8011388:	eddf 6a55 	vldr	s13, [pc, #340]	@ 80114e0 <nema_blit_rotate+0x1b4>
 801138c:	ee37 7a26 	vadd.f32	s14, s14, s13
 8011390:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011394:	a801      	add	r0, sp, #4
 8011396:	ed8d 7a03 	vstr	s14, [sp, #12]
 801139a:	edcd 7a06 	vstr	s15, [sp, #24]
 801139e:	f000 fe55 	bl	801204c <nema_set_matrix>
 80113a2:	463b      	mov	r3, r7
 80113a4:	4632      	mov	r2, r6
 80113a6:	4629      	mov	r1, r5
 80113a8:	4620      	mov	r0, r4
 80113aa:	f000 fffd 	bl	80123a8 <nema_raster_rect>
 80113ae:	b00b      	add	sp, #44	@ 0x2c
 80113b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80113b2:	ee07 4a90 	vmov	s15, r4
 80113b6:	4630      	mov	r0, r6
 80113b8:	442e      	add	r6, r5
 80113ba:	2300      	movs	r3, #0
 80113bc:	ee07 6a10 	vmov	s14, r6
 80113c0:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80113c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80113c8:	4944      	ldr	r1, [pc, #272]	@ (80114dc <nema_blit_rotate+0x1b0>)
 80113ca:	463e      	mov	r6, r7
 80113cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80113d0:	9301      	str	r3, [sp, #4]
 80113d2:	4607      	mov	r7, r0
 80113d4:	9305      	str	r3, [sp, #20]
 80113d6:	9102      	str	r1, [sp, #8]
 80113d8:	9204      	str	r2, [sp, #16]
 80113da:	eef1 7a67 	vneg.f32	s15, s15
 80113de:	e7d3      	b.n	8011388 <nema_blit_rotate+0x5c>
 80113e0:	4b3e      	ldr	r3, [pc, #248]	@ (80114dc <nema_blit_rotate+0x1b0>)
 80113e2:	2200      	movs	r2, #0
 80113e4:	9301      	str	r3, [sp, #4]
 80113e6:	9305      	str	r3, [sp, #20]
 80113e8:	1833      	adds	r3, r6, r0
 80113ea:	ee07 3a90 	vmov	s15, r3
 80113ee:	1878      	adds	r0, r7, r1
 80113f0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80113f4:	ee07 0a90 	vmov	s15, r0
 80113f8:	9202      	str	r2, [sp, #8]
 80113fa:	9204      	str	r2, [sp, #16]
 80113fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011400:	e7c2      	b.n	8011388 <nema_blit_rotate+0x5c>
 8011402:	ee07 5a10 	vmov	s14, r5
 8011406:	4630      	mov	r0, r6
 8011408:	193e      	adds	r6, r7, r4
 801140a:	2300      	movs	r3, #0
 801140c:	ee07 6a90 	vmov	s15, r6
 8011410:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8011414:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011418:	4a30      	ldr	r2, [pc, #192]	@ (80114dc <nema_blit_rotate+0x1b0>)
 801141a:	463e      	mov	r6, r7
 801141c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011420:	4607      	mov	r7, r0
 8011422:	9301      	str	r3, [sp, #4]
 8011424:	9305      	str	r3, [sp, #20]
 8011426:	9102      	str	r1, [sp, #8]
 8011428:	eeb1 7a47 	vneg.f32	s14, s14
 801142c:	9204      	str	r2, [sp, #16]
 801142e:	e7ab      	b.n	8011388 <nema_blit_rotate+0x5c>
 8011430:	ee07 4a90 	vmov	s15, r4
 8011434:	1978      	adds	r0, r7, r5
 8011436:	2300      	movs	r3, #0
 8011438:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801143c:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8011440:	ee07 0a90 	vmov	s15, r0
 8011444:	4a25      	ldr	r2, [pc, #148]	@ (80114dc <nema_blit_rotate+0x1b0>)
 8011446:	9101      	str	r1, [sp, #4]
 8011448:	9302      	str	r3, [sp, #8]
 801144a:	9304      	str	r3, [sp, #16]
 801144c:	eeb1 7a47 	vneg.f32	s14, s14
 8011450:	9205      	str	r2, [sp, #20]
 8011452:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011456:	e797      	b.n	8011388 <nema_blit_rotate+0x5c>
 8011458:	ee07 5a90 	vmov	s15, r5
 801145c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011460:	ee07 0a90 	vmov	s15, r0
 8011464:	4631      	mov	r1, r6
 8011466:	2200      	movs	r2, #0
 8011468:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 801146c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011470:	463e      	mov	r6, r7
 8011472:	eeb1 7a47 	vneg.f32	s14, s14
 8011476:	460f      	mov	r7, r1
 8011478:	eef1 7a67 	vneg.f32	s15, s15
 801147c:	9201      	str	r2, [sp, #4]
 801147e:	9205      	str	r2, [sp, #20]
 8011480:	9302      	str	r3, [sp, #8]
 8011482:	9304      	str	r3, [sp, #16]
 8011484:	e780      	b.n	8011388 <nema_blit_rotate+0x5c>
 8011486:	ee07 5a90 	vmov	s15, r5
 801148a:	1830      	adds	r0, r6, r0
 801148c:	2300      	movs	r3, #0
 801148e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8011492:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011496:	ee07 0a10 	vmov	s14, r0
 801149a:	4910      	ldr	r1, [pc, #64]	@ (80114dc <nema_blit_rotate+0x1b0>)
 801149c:	9302      	str	r3, [sp, #8]
 801149e:	9101      	str	r1, [sp, #4]
 80114a0:	9304      	str	r3, [sp, #16]
 80114a2:	9205      	str	r2, [sp, #20]
 80114a4:	eef1 7a67 	vneg.f32	s15, s15
 80114a8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80114ac:	e76c      	b.n	8011388 <nema_blit_rotate+0x5c>
 80114ae:	ee07 0a90 	vmov	s15, r0
 80114b2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80114b6:	ee07 1a90 	vmov	s15, r1
 80114ba:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80114be:	2300      	movs	r3, #0
 80114c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80114c4:	9201      	str	r2, [sp, #4]
 80114c6:	9205      	str	r2, [sp, #20]
 80114c8:	9302      	str	r3, [sp, #8]
 80114ca:	9304      	str	r3, [sp, #16]
 80114cc:	eeb1 7a47 	vneg.f32	s14, s14
 80114d0:	eef1 7a67 	vneg.f32	s15, s15
 80114d4:	e758      	b.n	8011388 <nema_blit_rotate+0x5c>
 80114d6:	bf00      	nop
 80114d8:	20000064 	.word	0x20000064
 80114dc:	bf800000 	.word	0xbf800000
 80114e0:	00000000 	.word	0x00000000

080114e4 <nema_blit_tri_fit>:
 80114e4:	2803      	cmp	r0, #3
 80114e6:	d801      	bhi.n	80114ec <nema_blit_tri_fit+0x8>
 80114e8:	2903      	cmp	r1, #3
 80114ea:	d900      	bls.n	80114ee <nema_blit_tri_fit+0xa>
 80114ec:	4770      	bx	lr
 80114ee:	2a03      	cmp	r2, #3
 80114f0:	d8fc      	bhi.n	80114ec <nema_blit_tri_fit+0x8>
 80114f2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80114f6:	460c      	mov	r4, r1
 80114f8:	493b      	ldr	r1, [pc, #236]	@ (80115e8 <nema_blit_tri_fit+0x104>)
 80114fa:	4603      	mov	r3, r0
 80114fc:	e9d1 0112 	ldrd	r0, r1, [r1, #72]	@ 0x48
 8011500:	ee07 0a90 	vmov	s15, r0
 8011504:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011508:	ee07 1a90 	vmov	s15, r1
 801150c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011510:	b08a      	sub	sp, #40	@ 0x28
 8011512:	f04f 0c00 	mov.w	ip, #0
 8011516:	edcd 7a08 	vstr	s15, [sp, #32]
 801151a:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 801151e:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8011522:	ed8d 7a03 	vstr	s14, [sp, #12]
 8011526:	ed8d 7a04 	vstr	s14, [sp, #16]
 801152a:	ee12 8a10 	vmov	r8, s4
 801152e:	ee11 9a90 	vmov	r9, s3
 8011532:	ee11 aa10 	vmov	sl, s2
 8011536:	ee10 6a10 	vmov	r6, s0
 801153a:	f10d 0e28 	add.w	lr, sp, #40	@ 0x28
 801153e:	eb0e 0282 	add.w	r2, lr, r2, lsl #2
 8011542:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
 8011546:	eb0e 0383 	add.w	r3, lr, r3, lsl #2
 801154a:	f8cd c008 	str.w	ip, [sp, #8]
 801154e:	f8cd c014 	str.w	ip, [sp, #20]
 8011552:	f8cd c018 	str.w	ip, [sp, #24]
 8011556:	f8cd c01c 	str.w	ip, [sp, #28]
 801155a:	ed52 6a08 	vldr	s13, [r2, #-32]	@ 0xffffffe0
 801155e:	ed14 4a08 	vldr	s8, [r4, #-32]	@ 0xffffffe0
 8011562:	ed53 1a08 	vldr	s3, [r3, #-32]	@ 0xffffffe0
 8011566:	ed12 7a04 	vldr	s14, [r2, #-16]
 801156a:	ed54 4a04 	vldr	s9, [r4, #-16]
 801156e:	ed13 2a04 	vldr	s4, [r3, #-16]
 8011572:	eef0 5a62 	vmov.f32	s11, s5
 8011576:	ee05 8a10 	vmov	s10, r8
 801157a:	ee03 9a10 	vmov	s6, r9
 801157e:	eef0 3a46 	vmov.f32	s7, s12
 8011582:	eeb0 1a46 	vmov.f32	s2, s12
 8011586:	ee12 7a90 	vmov	r7, s5
 801158a:	ee02 aa90 	vmov	s5, sl
 801158e:	ee10 5a90 	vmov	r5, s1
 8011592:	f000 f8d1 	bl	8011738 <nema_interpolate_tx_ty>
 8011596:	ee00 6a10 	vmov	s0, r6
 801159a:	f000 f971 	bl	8011880 <nema_f2fx>
 801159e:	ee00 5a10 	vmov	s0, r5
 80115a2:	4604      	mov	r4, r0
 80115a4:	f000 f96c 	bl	8011880 <nema_f2fx>
 80115a8:	ee00 aa10 	vmov	s0, sl
 80115ac:	4605      	mov	r5, r0
 80115ae:	f000 f967 	bl	8011880 <nema_f2fx>
 80115b2:	ee00 9a10 	vmov	s0, r9
 80115b6:	4606      	mov	r6, r0
 80115b8:	f000 f962 	bl	8011880 <nema_f2fx>
 80115bc:	ee00 8a10 	vmov	s0, r8
 80115c0:	4681      	mov	r9, r0
 80115c2:	f000 f95d 	bl	8011880 <nema_f2fx>
 80115c6:	ee00 7a10 	vmov	s0, r7
 80115ca:	4680      	mov	r8, r0
 80115cc:	f000 f958 	bl	8011880 <nema_f2fx>
 80115d0:	464b      	mov	r3, r9
 80115d2:	e9cd 8000 	strd	r8, r0, [sp]
 80115d6:	4632      	mov	r2, r6
 80115d8:	4629      	mov	r1, r5
 80115da:	4620      	mov	r0, r4
 80115dc:	f000 fea8 	bl	8012330 <nema_raster_triangle_fx>
 80115e0:	b00a      	add	sp, #40	@ 0x28
 80115e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80115e6:	bf00      	nop
 80115e8:	20000064 	.word	0x20000064

080115ec <nema_blit_quad_fit>:
 80115ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80115f0:	ed2d 8b08 	vpush	{d8-d11}
 80115f4:	4b2b      	ldr	r3, [pc, #172]	@ (80116a4 <nema_blit_quad_fit+0xb8>)
 80115f6:	b08e      	sub	sp, #56	@ 0x38
 80115f8:	e9d3 0112 	ldrd	r0, r1, [r3, #72]	@ 0x48
 80115fc:	aa05      	add	r2, sp, #20
 80115fe:	eef0 ba40 	vmov.f32	s23, s0
 8011602:	eeb0 ba60 	vmov.f32	s22, s1
 8011606:	eef0 aa41 	vmov.f32	s21, s2
 801160a:	eeb0 aa61 	vmov.f32	s20, s3
 801160e:	eef0 9a42 	vmov.f32	s19, s4
 8011612:	eeb0 9a62 	vmov.f32	s18, s5
 8011616:	eef0 8a43 	vmov.f32	s17, s6
 801161a:	eeb0 8a63 	vmov.f32	s16, s7
 801161e:	f000 fb33 	bl	8011c88 <nema_mat3x3_quad_to_rect>
 8011622:	b120      	cbz	r0, 801162e <nema_blit_quad_fit+0x42>
 8011624:	b00e      	add	sp, #56	@ 0x38
 8011626:	ecbd 8b08 	vpop	{d8-d11}
 801162a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801162e:	a805      	add	r0, sp, #20
 8011630:	f000 fd0c 	bl	801204c <nema_set_matrix>
 8011634:	eeb0 0a6b 	vmov.f32	s0, s23
 8011638:	f000 f922 	bl	8011880 <nema_f2fx>
 801163c:	eeb0 0a4b 	vmov.f32	s0, s22
 8011640:	4604      	mov	r4, r0
 8011642:	f000 f91d 	bl	8011880 <nema_f2fx>
 8011646:	eeb0 0a6a 	vmov.f32	s0, s21
 801164a:	4605      	mov	r5, r0
 801164c:	f000 f918 	bl	8011880 <nema_f2fx>
 8011650:	eeb0 0a4a 	vmov.f32	s0, s20
 8011654:	4606      	mov	r6, r0
 8011656:	f000 f913 	bl	8011880 <nema_f2fx>
 801165a:	eeb0 0a69 	vmov.f32	s0, s19
 801165e:	4607      	mov	r7, r0
 8011660:	f000 f90e 	bl	8011880 <nema_f2fx>
 8011664:	eeb0 0a49 	vmov.f32	s0, s18
 8011668:	4682      	mov	sl, r0
 801166a:	f000 f909 	bl	8011880 <nema_f2fx>
 801166e:	eeb0 0a68 	vmov.f32	s0, s17
 8011672:	4680      	mov	r8, r0
 8011674:	f000 f904 	bl	8011880 <nema_f2fx>
 8011678:	eeb0 0a48 	vmov.f32	s0, s16
 801167c:	4681      	mov	r9, r0
 801167e:	f000 f8ff 	bl	8011880 <nema_f2fx>
 8011682:	f8cd a000 	str.w	sl, [sp]
 8011686:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801168a:	f8cd 8004 	str.w	r8, [sp, #4]
 801168e:	463b      	mov	r3, r7
 8011690:	4632      	mov	r2, r6
 8011692:	4629      	mov	r1, r5
 8011694:	4620      	mov	r0, r4
 8011696:	f000 feb1 	bl	80123fc <nema_raster_quad_fx>
 801169a:	b00e      	add	sp, #56	@ 0x38
 801169c:	ecbd 8b08 	vpop	{d8-d11}
 80116a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80116a4:	20000064 	.word	0x20000064

080116a8 <nema_interpolate_rect_colors>:
 80116a8:	b410      	push	{r4}
 80116aa:	9803      	ldr	r0, [sp, #12]
 80116ac:	e9dd 1401 	ldrd	r1, r4, [sp, #4]
 80116b0:	edd0 2a00 	vldr	s5, [r0]
 80116b4:	edd4 7a00 	vldr	s15, [r4]
 80116b8:	ed91 0a00 	vldr	s0, [r1]
 80116bc:	ee72 2ae7 	vsub.f32	s5, s5, s15
 80116c0:	ee37 2ac0 	vsub.f32	s4, s15, s0
 80116c4:	ee07 3a90 	vmov	s15, r3
 80116c8:	ed94 3a01 	vldr	s6, [r4, #4]
 80116cc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80116d0:	ed94 4a02 	vldr	s8, [r4, #8]
 80116d4:	ed94 5a03 	vldr	s10, [r4, #12]
 80116d8:	edd0 3a01 	vldr	s7, [r0, #4]
 80116dc:	edd1 0a01 	vldr	s1, [r1, #4]
 80116e0:	edd0 4a02 	vldr	s9, [r0, #8]
 80116e4:	edd0 5a03 	vldr	s11, [r0, #12]
 80116e8:	edd1 1a03 	vldr	s3, [r1, #12]
 80116ec:	ed91 1a02 	vldr	s2, [r1, #8]
 80116f0:	ee07 2a90 	vmov	s15, r2
 80116f4:	ee73 3ac3 	vsub.f32	s7, s7, s6
 80116f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80116fc:	ee74 4ac4 	vsub.f32	s9, s9, s8
 8011700:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011704:	ee33 3a60 	vsub.f32	s6, s6, s1
 8011708:	ee35 5a61 	vsub.f32	s10, s10, s3
 801170c:	ee34 4a41 	vsub.f32	s8, s8, s2
 8011710:	eec2 2a87 	vdiv.f32	s5, s5, s14
 8011714:	ee82 2a27 	vdiv.f32	s4, s4, s15
 8011718:	eec3 3a87 	vdiv.f32	s7, s7, s14
 801171c:	ee83 3a27 	vdiv.f32	s6, s6, s15
 8011720:	eec4 4a87 	vdiv.f32	s9, s9, s14
 8011724:	eec5 5a87 	vdiv.f32	s11, s11, s14
 8011728:	ee85 5a27 	vdiv.f32	s10, s10, s15
 801172c:	ee84 4a27 	vdiv.f32	s8, s8, s15
 8011730:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011734:	f7ff bd62 	b.w	80111fc <nema_set_gradient>

08011738 <nema_interpolate_tx_ty>:
 8011738:	eeb5 1ac0 	vcmpe.f32	s2, #0.0
 801173c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011740:	d407      	bmi.n	8011752 <nema_interpolate_tx_ty+0x1a>
 8011742:	eddf 7a40 	vldr	s15, [pc, #256]	@ 8011844 <nema_interpolate_tx_ty+0x10c>
 8011746:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801174a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801174e:	d807      	bhi.n	8011760 <nema_interpolate_tx_ty+0x28>
 8011750:	4770      	bx	lr
 8011752:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 8011848 <nema_interpolate_tx_ty+0x110>
 8011756:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801175a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801175e:	daf7      	bge.n	8011750 <nema_interpolate_tx_ty+0x18>
 8011760:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 8011764:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011768:	d45b      	bmi.n	8011822 <nema_interpolate_tx_ty+0xea>
 801176a:	eddf 7a36 	vldr	s15, [pc, #216]	@ 8011844 <nema_interpolate_tx_ty+0x10c>
 801176e:	eef4 3ae7 	vcmpe.f32	s7, s15
 8011772:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011776:	d9eb      	bls.n	8011750 <nema_interpolate_tx_ty+0x18>
 8011778:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801177c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011780:	d457      	bmi.n	8011832 <nema_interpolate_tx_ty+0xfa>
 8011782:	eddf 7a30 	vldr	s15, [pc, #192]	@ 8011844 <nema_interpolate_tx_ty+0x10c>
 8011786:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801178a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801178e:	d9df      	bls.n	8011750 <nema_interpolate_tx_ty+0x18>
 8011790:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8011794:	b570      	push	{r4, r5, r6, lr}
 8011796:	ee15 3a90 	vmov	r3, s11
 801179a:	ee13 2a10 	vmov	r2, s6
 801179e:	eec7 5a86 	vdiv.f32	s11, s15, s12
 80117a2:	ee87 3a81 	vdiv.f32	s6, s15, s2
 80117a6:	ee15 4a10 	vmov	r4, s10
 80117aa:	ee87 5aa3 	vdiv.f32	s10, s15, s7
 80117ae:	ee63 1a21 	vmul.f32	s3, s6, s3
 80117b2:	ee23 2a02 	vmul.f32	s4, s6, s4
 80117b6:	ee25 4a04 	vmul.f32	s8, s10, s8
 80117ba:	ee65 4a24 	vmul.f32	s9, s10, s9
 80117be:	ee65 6aa6 	vmul.f32	s13, s11, s13
 80117c2:	ee25 7a87 	vmul.f32	s14, s11, s14
 80117c6:	b092      	sub	sp, #72	@ 0x48
 80117c8:	a809      	add	r0, sp, #36	@ 0x24
 80117ca:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 80117ce:	edcd 2a0a 	vstr	s5, [sp, #40]	@ 0x28
 80117d2:	edcd 0a0c 	vstr	s1, [sp, #48]	@ 0x30
 80117d6:	920d      	str	r2, [sp, #52]	@ 0x34
 80117d8:	930e      	str	r3, [sp, #56]	@ 0x38
 80117da:	edcd 1a00 	vstr	s3, [sp]
 80117de:	ed8d 2a03 	vstr	s4, [sp, #12]
 80117e2:	ed8d 4a01 	vstr	s8, [sp, #4]
 80117e6:	edcd 4a04 	vstr	s9, [sp, #16]
 80117ea:	edcd 6a02 	vstr	s13, [sp, #8]
 80117ee:	ed8d 7a05 	vstr	s14, [sp, #20]
 80117f2:	ed8d 3a06 	vstr	s6, [sp, #24]
 80117f6:	ed8d 5a07 	vstr	s10, [sp, #28]
 80117fa:	edcd 5a08 	vstr	s11, [sp, #32]
 80117fe:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 8011802:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8011806:	edcd 7a11 	vstr	s15, [sp, #68]	@ 0x44
 801180a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801180c:	f000 f938 	bl	8011a80 <nema_mat3x3_adj>
 8011810:	a909      	add	r1, sp, #36	@ 0x24
 8011812:	4668      	mov	r0, sp
 8011814:	f000 f89e 	bl	8011954 <nema_mat3x3_mul>
 8011818:	4668      	mov	r0, sp
 801181a:	f000 fc17 	bl	801204c <nema_set_matrix>
 801181e:	b012      	add	sp, #72	@ 0x48
 8011820:	bd70      	pop	{r4, r5, r6, pc}
 8011822:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8011848 <nema_interpolate_tx_ty+0x110>
 8011826:	eef4 3ae7 	vcmpe.f32	s7, s15
 801182a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801182e:	da8f      	bge.n	8011750 <nema_interpolate_tx_ty+0x18>
 8011830:	e7a2      	b.n	8011778 <nema_interpolate_tx_ty+0x40>
 8011832:	eddf 7a05 	vldr	s15, [pc, #20]	@ 8011848 <nema_interpolate_tx_ty+0x110>
 8011836:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801183a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801183e:	da87      	bge.n	8011750 <nema_interpolate_tx_ty+0x18>
 8011840:	e7a6      	b.n	8011790 <nema_interpolate_tx_ty+0x58>
 8011842:	bf00      	nop
 8011844:	3727c5ac 	.word	0x3727c5ac
 8011848:	b727c5ac 	.word	0xb727c5ac

0801184c <nema_sqrt>:
 801184c:	ee10 2a10 	vmov	r2, s0
 8011850:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8011854:	4b09      	ldr	r3, [pc, #36]	@ (801187c <nema_sqrt+0x30>)
 8011856:	ee20 7a07 	vmul.f32	s14, s0, s14
 801185a:	eba3 0352 	sub.w	r3, r3, r2, lsr #1
 801185e:	ee07 3a90 	vmov	s15, r3
 8011862:	ee27 7a27 	vmul.f32	s14, s14, s15
 8011866:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 801186a:	ee27 7a27 	vmul.f32	s14, s14, s15
 801186e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8011872:	ee36 0ac7 	vsub.f32	s0, s13, s14
 8011876:	ee20 0a27 	vmul.f32	s0, s0, s15
 801187a:	4770      	bx	lr
 801187c:	5f3759df 	.word	0x5f3759df

08011880 <nema_f2fx>:
 8011880:	eddf 7a06 	vldr	s15, [pc, #24]	@ 801189c <nema_f2fx+0x1c>
 8011884:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8011888:	ee20 0a27 	vmul.f32	s0, s0, s15
 801188c:	ee30 0a07 	vadd.f32	s0, s0, s14
 8011890:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8011894:	ee17 0a90 	vmov	r0, s15
 8011898:	4770      	bx	lr
 801189a:	bf00      	nop
 801189c:	47800000 	.word	0x47800000

080118a0 <nema_mat3x3_load_identity>:
 80118a0:	2300      	movs	r3, #0
 80118a2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80118a6:	61c3      	str	r3, [r0, #28]
 80118a8:	6202      	str	r2, [r0, #32]
 80118aa:	6102      	str	r2, [r0, #16]
 80118ac:	6002      	str	r2, [r0, #0]
 80118ae:	6183      	str	r3, [r0, #24]
 80118b0:	6143      	str	r3, [r0, #20]
 80118b2:	60c3      	str	r3, [r0, #12]
 80118b4:	6083      	str	r3, [r0, #8]
 80118b6:	6043      	str	r3, [r0, #4]
 80118b8:	4770      	bx	lr
 80118ba:	bf00      	nop

080118bc <nema_mat3x3_copy>:
 80118bc:	680b      	ldr	r3, [r1, #0]
 80118be:	6003      	str	r3, [r0, #0]
 80118c0:	684b      	ldr	r3, [r1, #4]
 80118c2:	6043      	str	r3, [r0, #4]
 80118c4:	688b      	ldr	r3, [r1, #8]
 80118c6:	6083      	str	r3, [r0, #8]
 80118c8:	68cb      	ldr	r3, [r1, #12]
 80118ca:	60c3      	str	r3, [r0, #12]
 80118cc:	690b      	ldr	r3, [r1, #16]
 80118ce:	6103      	str	r3, [r0, #16]
 80118d0:	694b      	ldr	r3, [r1, #20]
 80118d2:	6143      	str	r3, [r0, #20]
 80118d4:	698b      	ldr	r3, [r1, #24]
 80118d6:	6183      	str	r3, [r0, #24]
 80118d8:	69cb      	ldr	r3, [r1, #28]
 80118da:	61c3      	str	r3, [r0, #28]
 80118dc:	6a0b      	ldr	r3, [r1, #32]
 80118de:	6203      	str	r3, [r0, #32]
 80118e0:	4770      	bx	lr
 80118e2:	bf00      	nop

080118e4 <nema_mat3x3_translate>:
 80118e4:	edd0 6a06 	vldr	s13, [r0, #24]
 80118e8:	ed90 7a07 	vldr	s14, [r0, #28]
 80118ec:	edd0 7a08 	vldr	s15, [r0, #32]
 80118f0:	ee26 3a80 	vmul.f32	s6, s13, s0
 80118f4:	ee67 3a00 	vmul.f32	s7, s14, s0
 80118f8:	ee66 6aa0 	vmul.f32	s13, s13, s1
 80118fc:	ed90 4a00 	vldr	s8, [r0]
 8011900:	edd0 4a03 	vldr	s9, [r0, #12]
 8011904:	ee27 7a20 	vmul.f32	s14, s14, s1
 8011908:	ed90 5a01 	vldr	s10, [r0, #4]
 801190c:	edd0 5a04 	vldr	s11, [r0, #16]
 8011910:	ee27 0a80 	vmul.f32	s0, s15, s0
 8011914:	ed90 6a02 	vldr	s12, [r0, #8]
 8011918:	ee67 7aa0 	vmul.f32	s15, s15, s1
 801191c:	edd0 0a05 	vldr	s1, [r0, #20]
 8011920:	ee34 4a03 	vadd.f32	s8, s8, s6
 8011924:	ee74 6aa6 	vadd.f32	s13, s9, s13
 8011928:	ee35 5a23 	vadd.f32	s10, s10, s7
 801192c:	ee35 7a87 	vadd.f32	s14, s11, s14
 8011930:	ee36 0a00 	vadd.f32	s0, s12, s0
 8011934:	ee70 7aa7 	vadd.f32	s15, s1, s15
 8011938:	ed80 4a00 	vstr	s8, [r0]
 801193c:	edc0 6a03 	vstr	s13, [r0, #12]
 8011940:	ed80 5a01 	vstr	s10, [r0, #4]
 8011944:	ed80 7a04 	vstr	s14, [r0, #16]
 8011948:	ed80 0a02 	vstr	s0, [r0, #8]
 801194c:	edc0 7a05 	vstr	s15, [r0, #20]
 8011950:	4770      	bx	lr
 8011952:	bf00      	nop

08011954 <nema_mat3x3_mul>:
 8011954:	edd1 4a01 	vldr	s9, [r1, #4]
 8011958:	ed91 0a04 	vldr	s0, [r1, #16]
 801195c:	edd1 0a05 	vldr	s1, [r1, #20]
 8011960:	ed2d 8b0c 	vpush	{d8-d13}
 8011964:	ed91 6a00 	vldr	s12, [r1]
 8011968:	ed91 4a03 	vldr	s8, [r1, #12]
 801196c:	ed91 aa02 	vldr	s20, [r1, #8]
 8011970:	edd0 3a03 	vldr	s7, [r0, #12]
 8011974:	ed90 8a04 	vldr	s16, [r0, #16]
 8011978:	ed90 9a00 	vldr	s18, [r0]
 801197c:	edd0 8a01 	vldr	s17, [r0, #4]
 8011980:	edd0 9a06 	vldr	s19, [r0, #24]
 8011984:	ed90 1a07 	vldr	s2, [r0, #28]
 8011988:	edd1 aa06 	vldr	s21, [r1, #24]
 801198c:	edd1 6a07 	vldr	s13, [r1, #28]
 8011990:	ed91 7a08 	vldr	s14, [r1, #32]
 8011994:	ed90 5a02 	vldr	s10, [r0, #8]
 8011998:	edd0 5a05 	vldr	s11, [r0, #20]
 801199c:	ee69 da06 	vmul.f32	s27, s18, s12
 80119a0:	ee29 da24 	vmul.f32	s26, s18, s9
 80119a4:	ee66 ca23 	vmul.f32	s25, s12, s7
 80119a8:	ee24 caa3 	vmul.f32	s24, s9, s7
 80119ac:	ee68 1a84 	vmul.f32	s3, s17, s8
 80119b0:	ee29 9a0a 	vmul.f32	s18, s18, s20
 80119b4:	ee28 2a80 	vmul.f32	s4, s17, s0
 80119b8:	ee26 6a29 	vmul.f32	s12, s12, s19
 80119bc:	ee64 2a08 	vmul.f32	s5, s8, s16
 80119c0:	ee6a ba23 	vmul.f32	s23, s20, s7
 80119c4:	ee24 baa9 	vmul.f32	s22, s9, s19
 80119c8:	ee20 3a08 	vmul.f32	s6, s0, s16
 80119cc:	ee60 3a88 	vmul.f32	s7, s1, s16
 80119d0:	ee60 4a01 	vmul.f32	s9, s0, s2
 80119d4:	ee68 8aa0 	vmul.f32	s17, s17, s1
 80119d8:	ee24 4a01 	vmul.f32	s8, s8, s2
 80119dc:	ee6a 7a29 	vmul.f32	s15, s20, s19
 80119e0:	ee20 1a81 	vmul.f32	s2, s1, s2
 80119e4:	edd0 0a08 	vldr	s1, [r0, #32]
 80119e8:	ee25 0a2a 	vmul.f32	s0, s10, s21
 80119ec:	ee79 8a28 	vadd.f32	s17, s18, s17
 80119f0:	ee2a 8aa5 	vmul.f32	s16, s21, s11
 80119f4:	ee25 9a26 	vmul.f32	s18, s10, s13
 80119f8:	ee7d 1aa1 	vadd.f32	s3, s27, s3
 80119fc:	ee3d 2a02 	vadd.f32	s4, s26, s4
 8011a00:	ee7c 2aa2 	vadd.f32	s5, s25, s5
 8011a04:	ee3c 3a03 	vadd.f32	s6, s24, s6
 8011a08:	ee7b 3aa3 	vadd.f32	s7, s23, s7
 8011a0c:	ee36 4a04 	vadd.f32	s8, s12, s8
 8011a10:	ee7b 4a24 	vadd.f32	s9, s22, s9
 8011a14:	ee77 7a81 	vadd.f32	s15, s15, s2
 8011a18:	ee25 5a07 	vmul.f32	s10, s10, s14
 8011a1c:	ee26 1aa5 	vmul.f32	s2, s13, s11
 8011a20:	ee2a 6aa0 	vmul.f32	s12, s21, s1
 8011a24:	ee67 5a25 	vmul.f32	s11, s14, s11
 8011a28:	ee66 6aa0 	vmul.f32	s13, s13, s1
 8011a2c:	ee27 7a20 	vmul.f32	s14, s14, s1
 8011a30:	ee32 2a09 	vadd.f32	s4, s4, s18
 8011a34:	ee38 5a85 	vadd.f32	s10, s17, s10
 8011a38:	ee72 2a88 	vadd.f32	s5, s5, s16
 8011a3c:	ee71 1a80 	vadd.f32	s3, s3, s0
 8011a40:	ee33 3a01 	vadd.f32	s6, s6, s2
 8011a44:	ee73 5aa5 	vadd.f32	s11, s7, s11
 8011a48:	ee34 6a06 	vadd.f32	s12, s8, s12
 8011a4c:	ee74 6aa6 	vadd.f32	s13, s9, s13
 8011a50:	ee77 7a87 	vadd.f32	s15, s15, s14
 8011a54:	edc0 1a00 	vstr	s3, [r0]
 8011a58:	ed80 2a01 	vstr	s4, [r0, #4]
 8011a5c:	ed80 5a02 	vstr	s10, [r0, #8]
 8011a60:	edc0 2a03 	vstr	s5, [r0, #12]
 8011a64:	ed80 3a04 	vstr	s6, [r0, #16]
 8011a68:	edc0 5a05 	vstr	s11, [r0, #20]
 8011a6c:	ed80 6a06 	vstr	s12, [r0, #24]
 8011a70:	edc0 6a07 	vstr	s13, [r0, #28]
 8011a74:	edc0 7a08 	vstr	s15, [r0, #32]
 8011a78:	ecbd 8b0c 	vpop	{d8-d13}
 8011a7c:	4770      	bx	lr
 8011a7e:	bf00      	nop

08011a80 <nema_mat3x3_adj>:
 8011a80:	edd0 3a03 	vldr	s7, [r0, #12]
 8011a84:	edd0 4a04 	vldr	s9, [r0, #16]
 8011a88:	ed90 6a08 	vldr	s12, [r0, #32]
 8011a8c:	ed90 5a07 	vldr	s10, [r0, #28]
 8011a90:	ed90 4a05 	vldr	s8, [r0, #20]
 8011a94:	edd0 7a00 	vldr	s15, [r0]
 8011a98:	edd0 6a02 	vldr	s13, [r0, #8]
 8011a9c:	edd0 5a01 	vldr	s11, [r0, #4]
 8011aa0:	ed90 7a06 	vldr	s14, [r0, #24]
 8011aa4:	ed2d 8b04 	vpush	{d8-d9}
 8011aa8:	ee24 1a86 	vmul.f32	s2, s9, s12
 8011aac:	ee25 9a04 	vmul.f32	s18, s10, s8
 8011ab0:	ee66 8a25 	vmul.f32	s17, s12, s11
 8011ab4:	ee24 8aa6 	vmul.f32	s16, s9, s13
 8011ab8:	ee65 1a26 	vmul.f32	s3, s10, s13
 8011abc:	ee24 2a25 	vmul.f32	s4, s8, s11
 8011ac0:	ee64 2a07 	vmul.f32	s5, s8, s14
 8011ac4:	ee66 0a87 	vmul.f32	s1, s13, s14
 8011ac8:	ee25 3a23 	vmul.f32	s6, s10, s7
 8011acc:	ee24 4a27 	vmul.f32	s8, s8, s15
 8011ad0:	ee26 0a23 	vmul.f32	s0, s12, s7
 8011ad4:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8011ad8:	ee26 6a27 	vmul.f32	s12, s12, s15
 8011adc:	ee25 5a27 	vmul.f32	s10, s10, s15
 8011ae0:	ee64 7aa7 	vmul.f32	s15, s9, s15
 8011ae4:	ee64 4a87 	vmul.f32	s9, s9, s14
 8011ae8:	ee25 7a87 	vmul.f32	s14, s11, s14
 8011aec:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8011af0:	ee31 1a49 	vsub.f32	s2, s2, s18
 8011af4:	ee71 1ae8 	vsub.f32	s3, s3, s17
 8011af8:	ee32 2a48 	vsub.f32	s4, s4, s16
 8011afc:	ecbd 8b04 	vpop	{d8-d9}
 8011b00:	ee72 3ac0 	vsub.f32	s7, s5, s0
 8011b04:	ee36 6a60 	vsub.f32	s12, s12, s1
 8011b08:	ee76 6ac4 	vsub.f32	s13, s13, s8
 8011b0c:	ee73 4a64 	vsub.f32	s9, s6, s9
 8011b10:	ee37 7a45 	vsub.f32	s14, s14, s10
 8011b14:	ee77 7ae5 	vsub.f32	s15, s15, s11
 8011b18:	ed80 1a00 	vstr	s2, [r0]
 8011b1c:	edc0 1a01 	vstr	s3, [r0, #4]
 8011b20:	ed80 2a02 	vstr	s4, [r0, #8]
 8011b24:	edc0 3a03 	vstr	s7, [r0, #12]
 8011b28:	ed80 6a04 	vstr	s12, [r0, #16]
 8011b2c:	edc0 6a05 	vstr	s13, [r0, #20]
 8011b30:	edc0 4a06 	vstr	s9, [r0, #24]
 8011b34:	ed80 7a07 	vstr	s14, [r0, #28]
 8011b38:	edc0 7a08 	vstr	s15, [r0, #32]
 8011b3c:	4770      	bx	lr
 8011b3e:	bf00      	nop

08011b40 <nema_mat3x3_invert>:
 8011b40:	ed90 6a08 	vldr	s12, [r0, #32]
 8011b44:	edd0 2a04 	vldr	s5, [r0, #16]
 8011b48:	ed90 3a05 	vldr	s6, [r0, #20]
 8011b4c:	ed90 2a07 	vldr	s4, [r0, #28]
 8011b50:	edd0 4a03 	vldr	s9, [r0, #12]
 8011b54:	edd0 6a06 	vldr	s13, [r0, #24]
 8011b58:	ee63 7a02 	vmul.f32	s15, s6, s4
 8011b5c:	ee66 3a22 	vmul.f32	s7, s12, s5
 8011b60:	ee26 0a24 	vmul.f32	s0, s12, s9
 8011b64:	ee63 1a26 	vmul.f32	s3, s6, s13
 8011b68:	ee73 3ae7 	vsub.f32	s7, s7, s15
 8011b6c:	ee22 7aa6 	vmul.f32	s14, s5, s13
 8011b70:	edd0 7a00 	vldr	s15, [r0]
 8011b74:	ee30 1a61 	vsub.f32	s2, s0, s3
 8011b78:	edd0 5a01 	vldr	s11, [r0, #4]
 8011b7c:	ee22 4a24 	vmul.f32	s8, s4, s9
 8011b80:	ee21 1a25 	vmul.f32	s2, s2, s11
 8011b84:	ee34 4a47 	vsub.f32	s8, s8, s14
 8011b88:	ee27 5aa3 	vmul.f32	s10, s15, s7
 8011b8c:	ed90 7a02 	vldr	s14, [r0, #8]
 8011b90:	ee35 5a41 	vsub.f32	s10, s10, s2
 8011b94:	ee27 1a04 	vmul.f32	s2, s14, s8
 8011b98:	ee35 5a01 	vadd.f32	s10, s10, s2
 8011b9c:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8011ba0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011ba4:	4603      	mov	r3, r0
 8011ba6:	d45d      	bmi.n	8011c64 <nema_mat3x3_invert+0x124>
 8011ba8:	ed9f 1a35 	vldr	s2, [pc, #212]	@ 8011c80 <nema_mat3x3_invert+0x140>
 8011bac:	eeb4 5ac1 	vcmpe.f32	s10, s2
 8011bb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011bb4:	bf94      	ite	ls
 8011bb6:	2001      	movls	r0, #1
 8011bb8:	2000      	movhi	r0, #0
 8011bba:	2800      	cmp	r0, #0
 8011bbc:	d15c      	bne.n	8011c78 <nema_mat3x3_invert+0x138>
 8011bbe:	ed2d 8b04 	vpush	{d8-d9}
 8011bc2:	ee62 0a07 	vmul.f32	s1, s4, s14
 8011bc6:	ee66 8a25 	vmul.f32	s17, s12, s11
 8011bca:	ee26 8a87 	vmul.f32	s16, s13, s14
 8011bce:	ee23 1a25 	vmul.f32	s2, s6, s11
 8011bd2:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 8011bd6:	ee27 2a82 	vmul.f32	s4, s15, s4
 8011bda:	ee27 6a86 	vmul.f32	s12, s15, s12
 8011bde:	ee65 6aa6 	vmul.f32	s13, s11, s13
 8011be2:	ee27 3a83 	vmul.f32	s6, s15, s6
 8011be6:	ee67 7aa2 	vmul.f32	s15, s15, s5
 8011bea:	ee62 2a87 	vmul.f32	s5, s5, s14
 8011bee:	ee24 7a87 	vmul.f32	s14, s9, s14
 8011bf2:	ee65 4aa4 	vmul.f32	s9, s11, s9
 8011bf6:	ee36 6a48 	vsub.f32	s12, s12, s16
 8011bfa:	eec9 5a05 	vdiv.f32	s11, s18, s10
 8011bfe:	ee71 1ac0 	vsub.f32	s3, s3, s0
 8011c02:	ee30 5ae8 	vsub.f32	s10, s1, s17
 8011c06:	ee76 6ac2 	vsub.f32	s13, s13, s4
 8011c0a:	ee71 2a62 	vsub.f32	s5, s2, s5
 8011c0e:	ee37 7a43 	vsub.f32	s14, s14, s6
 8011c12:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8011c16:	ee63 3aa5 	vmul.f32	s7, s7, s11
 8011c1a:	ee61 1aa5 	vmul.f32	s3, s3, s11
 8011c1e:	ee24 4a25 	vmul.f32	s8, s8, s11
 8011c22:	ee25 5a25 	vmul.f32	s10, s10, s11
 8011c26:	ee26 6a25 	vmul.f32	s12, s12, s11
 8011c2a:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8011c2e:	ee62 2aa5 	vmul.f32	s5, s5, s11
 8011c32:	ee27 7a25 	vmul.f32	s14, s14, s11
 8011c36:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8011c3a:	edc3 3a00 	vstr	s7, [r3]
 8011c3e:	edc3 1a03 	vstr	s3, [r3, #12]
 8011c42:	ed83 4a06 	vstr	s8, [r3, #24]
 8011c46:	ed83 5a01 	vstr	s10, [r3, #4]
 8011c4a:	ed83 6a04 	vstr	s12, [r3, #16]
 8011c4e:	edc3 6a07 	vstr	s13, [r3, #28]
 8011c52:	edc3 2a02 	vstr	s5, [r3, #8]
 8011c56:	ed83 7a05 	vstr	s14, [r3, #20]
 8011c5a:	edc3 7a08 	vstr	s15, [r3, #32]
 8011c5e:	ecbd 8b04 	vpop	{d8-d9}
 8011c62:	4770      	bx	lr
 8011c64:	ed9f 1a07 	vldr	s2, [pc, #28]	@ 8011c84 <nema_mat3x3_invert+0x144>
 8011c68:	eeb4 5ac1 	vcmpe.f32	s10, s2
 8011c6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c70:	bfac      	ite	ge
 8011c72:	2001      	movge	r0, #1
 8011c74:	2000      	movlt	r0, #0
 8011c76:	e7a0      	b.n	8011bba <nema_mat3x3_invert+0x7a>
 8011c78:	f04f 30ff 	mov.w	r0, #4294967295
 8011c7c:	4770      	bx	lr
 8011c7e:	bf00      	nop
 8011c80:	3727c5ac 	.word	0x3727c5ac
 8011c84:	b727c5ac 	.word	0xb727c5ac

08011c88 <nema_mat3x3_quad_to_rect>:
 8011c88:	ee70 6a41 	vsub.f32	s13, s0, s2
 8011c8c:	ee76 6a82 	vadd.f32	s13, s13, s4
 8011c90:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8011c94:	ee30 6ae1 	vsub.f32	s12, s1, s3
 8011c98:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8011c9c:	ee36 6a22 	vadd.f32	s12, s12, s5
 8011ca0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011ca4:	ed2d 8b06 	vpush	{d8-d10}
 8011ca8:	ee36 6a63 	vsub.f32	s12, s12, s7
 8011cac:	ee09 0a10 	vmov	s18, r0
 8011cb0:	ee08 1a90 	vmov	s17, r1
 8011cb4:	f100 812e 	bmi.w	8011f14 <nema_mat3x3_quad_to_rect+0x28c>
 8011cb8:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8011f4c <nema_mat3x3_quad_to_rect+0x2c4>
 8011cbc:	eef4 6ae7 	vcmpe.f32	s13, s15
 8011cc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cc4:	d80d      	bhi.n	8011ce2 <nema_mat3x3_quad_to_rect+0x5a>
 8011cc6:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8011cca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cce:	f100 80f7 	bmi.w	8011ec0 <nema_mat3x3_quad_to_rect+0x238>
 8011cd2:	eddf 7a9e 	vldr	s15, [pc, #632]	@ 8011f4c <nema_mat3x3_quad_to_rect+0x2c4>
 8011cd6:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8011cda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cde:	f240 80f7 	bls.w	8011ed0 <nema_mat3x3_quad_to_rect+0x248>
 8011ce2:	ee31 7a42 	vsub.f32	s14, s2, s4
 8011ce6:	ee73 7ae2 	vsub.f32	s15, s7, s5
 8011cea:	ee33 2a42 	vsub.f32	s4, s6, s4
 8011cee:	ee71 2ae2 	vsub.f32	s5, s3, s5
 8011cf2:	ee67 5a27 	vmul.f32	s11, s14, s15
 8011cf6:	ee22 5a22 	vmul.f32	s10, s4, s5
 8011cfa:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011cfe:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8011d02:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8011d06:	ee26 7a07 	vmul.f32	s14, s12, s14
 8011d0a:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8011d0e:	ee26 6a02 	vmul.f32	s12, s12, s4
 8011d12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d16:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8011d1a:	ee77 6a66 	vsub.f32	s13, s14, s13
 8011d1e:	f100 80c5 	bmi.w	8011eac <nema_mat3x3_quad_to_rect+0x224>
 8011d22:	ed9f 7a8a 	vldr	s14, [pc, #552]	@ 8011f4c <nema_mat3x3_quad_to_rect+0x2c4>
 8011d26:	eef4 5ac7 	vcmpe.f32	s11, s14
 8011d2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d2e:	bf94      	ite	ls
 8011d30:	2301      	movls	r3, #1
 8011d32:	2300      	movhi	r3, #0
 8011d34:	2b00      	cmp	r3, #0
 8011d36:	f040 8106 	bne.w	8011f46 <nema_mat3x3_quad_to_rect+0x2be>
 8011d3a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011d3e:	ee87 6a25 	vdiv.f32	s12, s14, s11
 8011d42:	ee67 7a86 	vmul.f32	s15, s15, s12
 8011d46:	ee66 6a86 	vmul.f32	s13, s13, s12
 8011d4a:	ee21 5a27 	vmul.f32	s10, s2, s15
 8011d4e:	ee61 5aa7 	vmul.f32	s11, s3, s15
 8011d52:	ee63 2aa6 	vmul.f32	s5, s7, s13
 8011d56:	ee31 1a40 	vsub.f32	s2, s2, s0
 8011d5a:	ee23 6a26 	vmul.f32	s12, s6, s13
 8011d5e:	ee33 2a40 	vsub.f32	s4, s6, s0
 8011d62:	ee71 1ae0 	vsub.f32	s3, s3, s1
 8011d66:	ee73 3ae0 	vsub.f32	s7, s7, s1
 8011d6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011d6e:	ee32 2a06 	vadd.f32	s4, s4, s12
 8011d72:	ee71 1aa5 	vadd.f32	s3, s3, s11
 8011d76:	ee73 2aa2 	vadd.f32	s5, s7, s5
 8011d7a:	ed82 0a02 	vstr	s0, [r2, #8]
 8011d7e:	edc2 0a05 	vstr	s1, [r2, #20]
 8011d82:	edc2 7a06 	vstr	s15, [r2, #24]
 8011d86:	edc2 6a07 	vstr	s13, [r2, #28]
 8011d8a:	ed82 7a08 	vstr	s14, [r2, #32]
 8011d8e:	ed82 1a00 	vstr	s2, [r2]
 8011d92:	ed82 2a01 	vstr	s4, [r2, #4]
 8011d96:	edc2 1a03 	vstr	s3, [r2, #12]
 8011d9a:	edc2 2a04 	vstr	s5, [r2, #16]
 8011d9e:	ee20 4aa6 	vmul.f32	s8, s1, s13
 8011da2:	ee60 5aa7 	vmul.f32	s11, s1, s15
 8011da6:	ee32 3ac4 	vsub.f32	s6, s5, s8
 8011daa:	ee31 7ae5 	vsub.f32	s14, s3, s11
 8011dae:	ee21 8aa6 	vmul.f32	s16, s3, s13
 8011db2:	ee22 6aa7 	vmul.f32	s12, s5, s15
 8011db6:	ee27 7a02 	vmul.f32	s14, s14, s4
 8011dba:	ee23 4a01 	vmul.f32	s8, s6, s2
 8011dbe:	ee38 8a46 	vsub.f32	s16, s16, s12
 8011dc2:	ee34 4a47 	vsub.f32	s8, s8, s14
 8011dc6:	ee20 7a08 	vmul.f32	s14, s0, s16
 8011dca:	ee34 4a07 	vadd.f32	s8, s8, s14
 8011dce:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 8011dd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011dd6:	f100 80ac 	bmi.w	8011f32 <nema_mat3x3_quad_to_rect+0x2aa>
 8011dda:	ed9f 7a5c 	vldr	s14, [pc, #368]	@ 8011f4c <nema_mat3x3_quad_to_rect+0x2c4>
 8011dde:	eeb4 4ac7 	vcmpe.f32	s8, s14
 8011de2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011de6:	bf94      	ite	ls
 8011de8:	2001      	movls	r0, #1
 8011dea:	2000      	movhi	r0, #0
 8011dec:	2800      	cmp	r0, #0
 8011dee:	f040 80aa 	bne.w	8011f46 <nema_mat3x3_quad_to_rect+0x2be>
 8011df2:	ee20 5a82 	vmul.f32	s10, s1, s4
 8011df6:	ee60 4a26 	vmul.f32	s9, s0, s13
 8011dfa:	ee20 6a27 	vmul.f32	s12, s0, s15
 8011dfe:	ee60 9a22 	vmul.f32	s19, s0, s5
 8011e02:	eeb7 aa00 	vmov.f32	s20, #112	@ 0x3f800000  1.0
 8011e06:	ee60 0a81 	vmul.f32	s1, s1, s2
 8011e0a:	ee20 7a21 	vmul.f32	s14, s0, s3
 8011e0e:	eeca 3a04 	vdiv.f32	s7, s20, s8
 8011e12:	ee74 4ac2 	vsub.f32	s9, s9, s4
 8011e16:	ee61 6a26 	vmul.f32	s13, s2, s13
 8011e1a:	ee67 7a82 	vmul.f32	s15, s15, s4
 8011e1e:	ee35 5a69 	vsub.f32	s10, s10, s19
 8011e22:	ee75 5ae1 	vsub.f32	s11, s11, s3
 8011e26:	ee31 6a46 	vsub.f32	s12, s2, s12
 8011e2a:	ee62 2a81 	vmul.f32	s5, s5, s2
 8011e2e:	ee37 7a60 	vsub.f32	s14, s14, s1
 8011e32:	ee21 2a82 	vmul.f32	s4, s3, s4
 8011e36:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 8011e3a:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8011e3e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011e42:	ee23 4a23 	vmul.f32	s8, s6, s7
 8011e46:	ee65 6a23 	vmul.f32	s13, s10, s7
 8011e4a:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8011e4e:	ee64 4aa3 	vmul.f32	s9, s9, s7
 8011e52:	ee26 6a23 	vmul.f32	s12, s12, s7
 8011e56:	ee27 7a23 	vmul.f32	s14, s14, s7
 8011e5a:	ee72 2ac2 	vsub.f32	s5, s5, s4
 8011e5e:	ee24 4a09 	vmul.f32	s8, s8, s18
 8011e62:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8011e66:	ee28 8a23 	vmul.f32	s16, s16, s7
 8011e6a:	ee24 5a89 	vmul.f32	s10, s9, s18
 8011e6e:	ee26 6a28 	vmul.f32	s12, s12, s17
 8011e72:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8011e76:	ee66 6a89 	vmul.f32	s13, s13, s18
 8011e7a:	ee27 7a28 	vmul.f32	s14, s14, s17
 8011e7e:	ee62 2aa3 	vmul.f32	s5, s5, s7
 8011e82:	ed82 4a00 	vstr	s8, [r2]
 8011e86:	edc2 5a03 	vstr	s11, [r2, #12]
 8011e8a:	ed82 8a06 	vstr	s16, [r2, #24]
 8011e8e:	ed82 5a01 	vstr	s10, [r2, #4]
 8011e92:	ed82 6a04 	vstr	s12, [r2, #16]
 8011e96:	edc2 7a07 	vstr	s15, [r2, #28]
 8011e9a:	edc2 6a02 	vstr	s13, [r2, #8]
 8011e9e:	ed82 7a05 	vstr	s14, [r2, #20]
 8011ea2:	edc2 2a08 	vstr	s5, [r2, #32]
 8011ea6:	ecbd 8b06 	vpop	{d8-d10}
 8011eaa:	4770      	bx	lr
 8011eac:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 8011f50 <nema_mat3x3_quad_to_rect+0x2c8>
 8011eb0:	eef4 5ac7 	vcmpe.f32	s11, s14
 8011eb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011eb8:	bfac      	ite	ge
 8011eba:	2301      	movge	r3, #1
 8011ebc:	2300      	movlt	r3, #0
 8011ebe:	e739      	b.n	8011d34 <nema_mat3x3_quad_to_rect+0xac>
 8011ec0:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8011f50 <nema_mat3x3_quad_to_rect+0x2c8>
 8011ec4:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8011ec8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011ecc:	f6ff af09 	blt.w	8011ce2 <nema_mat3x3_quad_to_rect+0x5a>
 8011ed0:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8011f54 <nema_mat3x3_quad_to_rect+0x2cc>
 8011ed4:	ee32 2a41 	vsub.f32	s4, s4, s2
 8011ed8:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8011edc:	ee31 1a40 	vsub.f32	s2, s2, s0
 8011ee0:	ee71 1ae0 	vsub.f32	s3, s3, s1
 8011ee4:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8011ee8:	eef0 7a47 	vmov.f32	s15, s14
 8011eec:	ed82 2a01 	vstr	s4, [r2, #4]
 8011ef0:	ed82 1a00 	vstr	s2, [r2]
 8011ef4:	edc2 2a04 	vstr	s5, [r2, #16]
 8011ef8:	edc2 1a03 	vstr	s3, [r2, #12]
 8011efc:	ed82 0a02 	vstr	s0, [r2, #8]
 8011f00:	edc2 0a05 	vstr	s1, [r2, #20]
 8011f04:	ed82 7a06 	vstr	s14, [r2, #24]
 8011f08:	ed82 7a07 	vstr	s14, [r2, #28]
 8011f0c:	eef0 6a47 	vmov.f32	s13, s14
 8011f10:	6213      	str	r3, [r2, #32]
 8011f12:	e744      	b.n	8011d9e <nema_mat3x3_quad_to_rect+0x116>
 8011f14:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8011f50 <nema_mat3x3_quad_to_rect+0x2c8>
 8011f18:	eef4 6ae7 	vcmpe.f32	s13, s15
 8011f1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f20:	f6ff aedf 	blt.w	8011ce2 <nema_mat3x3_quad_to_rect+0x5a>
 8011f24:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8011f28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f2c:	f57f aed1 	bpl.w	8011cd2 <nema_mat3x3_quad_to_rect+0x4a>
 8011f30:	e7c6      	b.n	8011ec0 <nema_mat3x3_quad_to_rect+0x238>
 8011f32:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8011f50 <nema_mat3x3_quad_to_rect+0x2c8>
 8011f36:	eeb4 4ac7 	vcmpe.f32	s8, s14
 8011f3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f3e:	bfac      	ite	ge
 8011f40:	2001      	movge	r0, #1
 8011f42:	2000      	movlt	r0, #0
 8011f44:	e752      	b.n	8011dec <nema_mat3x3_quad_to_rect+0x164>
 8011f46:	f04f 30ff 	mov.w	r0, #4294967295
 8011f4a:	e7ac      	b.n	8011ea6 <nema_mat3x3_quad_to_rect+0x21e>
 8011f4c:	3727c5ac 	.word	0x3727c5ac
 8011f50:	b727c5ac 	.word	0xb727c5ac
 8011f54:	00000000 	.word	0x00000000

08011f58 <nema_readHwConfig>:
 8011f58:	b510      	push	{r4, lr}
 8011f5a:	4c05      	ldr	r4, [pc, #20]	@ (8011f70 <nema_readHwConfig+0x18>)
 8011f5c:	6820      	ldr	r0, [r4, #0]
 8011f5e:	b100      	cbz	r0, 8011f62 <nema_readHwConfig+0xa>
 8011f60:	bd10      	pop	{r4, pc}
 8011f62:	f44f 70f8 	mov.w	r0, #496	@ 0x1f0
 8011f66:	f7f0 fecb 	bl	8002d00 <nema_reg_read>
 8011f6a:	6020      	str	r0, [r4, #0]
 8011f6c:	bd10      	pop	{r4, pc}
 8011f6e:	bf00      	nop
 8011f70:	20082f64 	.word	0x20082f64

08011f74 <nema_readHwConfigH>:
 8011f74:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8011f78:	f7f0 bec2 	b.w	8002d00 <nema_reg_read>

08011f7c <nema_enable_tiling>:
 8011f7c:	2800      	cmp	r0, #0
 8011f7e:	bf14      	ite	ne
 8011f80:	f04f 4080 	movne.w	r0, #1073741824	@ 0x40000000
 8011f84:	2000      	moveq	r0, #0
 8011f86:	b410      	push	{r4}
 8011f88:	4a05      	ldr	r2, [pc, #20]	@ (8011fa0 <nema_enable_tiling+0x24>)
 8011f8a:	6951      	ldr	r1, [r2, #20]
 8011f8c:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 8011f90:	4323      	orrs	r3, r4
 8011f92:	430b      	orrs	r3, r1
 8011f94:	4303      	orrs	r3, r0
 8011f96:	6050      	str	r0, [r2, #4]
 8011f98:	6113      	str	r3, [r2, #16]
 8011f9a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011f9e:	4770      	bx	lr
 8011fa0:	20000064 	.word	0x20000064

08011fa4 <nema_enable_tiling_2x2>:
 8011fa4:	2800      	cmp	r0, #0
 8011fa6:	bf14      	ite	ne
 8011fa8:	f04f 4040 	movne.w	r0, #3221225472	@ 0xc0000000
 8011fac:	2000      	moveq	r0, #0
 8011fae:	b410      	push	{r4}
 8011fb0:	4a05      	ldr	r2, [pc, #20]	@ (8011fc8 <nema_enable_tiling_2x2+0x24>)
 8011fb2:	6951      	ldr	r1, [r2, #20]
 8011fb4:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 8011fb8:	4323      	orrs	r3, r4
 8011fba:	430b      	orrs	r3, r1
 8011fbc:	4303      	orrs	r3, r0
 8011fbe:	6050      	str	r0, [r2, #4]
 8011fc0:	6113      	str	r3, [r2, #16]
 8011fc2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011fc6:	4770      	bx	lr
 8011fc8:	20000064 	.word	0x20000064

08011fcc <nema_enable_aa>:
 8011fcc:	2800      	cmp	r0, #0
 8011fce:	b410      	push	{r4}
 8011fd0:	bf19      	ittee	ne
 8011fd2:	f04f 6080 	movne.w	r0, #67108864	@ 0x4000000
 8011fd6:	f04f 64c0 	movne.w	r4, #100663296	@ 0x6000000
 8011fda:	f04f 7400 	moveq.w	r4, #33554432	@ 0x2000000
 8011fde:	2000      	moveq	r0, #0
 8011fe0:	2900      	cmp	r1, #0
 8011fe2:	bf08      	it	eq
 8011fe4:	4604      	moveq	r4, r0
 8011fe6:	b10a      	cbz	r2, 8011fec <nema_enable_aa+0x20>
 8011fe8:	f044 7480 	orr.w	r4, r4, #16777216	@ 0x1000000
 8011fec:	b10b      	cbz	r3, 8011ff2 <nema_enable_aa+0x26>
 8011fee:	f444 0400 	orr.w	r4, r4, #8388608	@ 0x800000
 8011ff2:	4a06      	ldr	r2, [pc, #24]	@ (801200c <nema_enable_aa+0x40>)
 8011ff4:	6853      	ldr	r3, [r2, #4]
 8011ff6:	e9d2 1002 	ldrd	r1, r0, [r2, #8]
 8011ffa:	4303      	orrs	r3, r0
 8011ffc:	430b      	orrs	r3, r1
 8011ffe:	4323      	orrs	r3, r4
 8012000:	6950      	ldr	r0, [r2, #20]
 8012002:	e9c2 3404 	strd	r3, r4, [r2, #16]
 8012006:	f85d 4b04 	ldr.w	r4, [sp], #4
 801200a:	4770      	bx	lr
 801200c:	20000064 	.word	0x20000064

08012010 <nema_enable_aa_flags>:
 8012010:	b410      	push	{r4}
 8012012:	4a07      	ldr	r2, [pc, #28]	@ (8012030 <nema_enable_aa_flags+0x20>)
 8012014:	f000 61f0 	and.w	r1, r0, #125829120	@ 0x7800000
 8012018:	6853      	ldr	r3, [r2, #4]
 801201a:	e9d2 0402 	ldrd	r0, r4, [r2, #8]
 801201e:	4323      	orrs	r3, r4
 8012020:	4303      	orrs	r3, r0
 8012022:	430b      	orrs	r3, r1
 8012024:	6950      	ldr	r0, [r2, #20]
 8012026:	e9c2 3104 	strd	r3, r1, [r2, #16]
 801202a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801202e:	4770      	bx	lr
 8012030:	20000064 	.word	0x20000064

08012034 <nema_matmul_bypass>:
 8012034:	b920      	cbnz	r0, 8012040 <nema_matmul_bypass+0xc>
 8012036:	4601      	mov	r1, r0
 8012038:	f44f 708c 	mov.w	r0, #280	@ 0x118
 801203c:	f00b be96 	b.w	801dd6c <nema_cl_add_cmd>
 8012040:	f04f 4110 	mov.w	r1, #2415919104	@ 0x90000000
 8012044:	f44f 708c 	mov.w	r0, #280	@ 0x118
 8012048:	f00b be90 	b.w	801dd6c <nema_cl_add_cmd>

0801204c <nema_set_matrix>:
 801204c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012050:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 80121b8 <nema_set_matrix+0x16c>
 8012054:	edd0 7a06 	vldr	s15, [r0, #24]
 8012058:	eef4 7ac7 	vcmpe.f32	s15, s14
 801205c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012060:	4604      	mov	r4, r0
 8012062:	d506      	bpl.n	8012072 <nema_set_matrix+0x26>
 8012064:	eddf 6a55 	vldr	s13, [pc, #340]	@ 80121bc <nema_set_matrix+0x170>
 8012068:	eef4 7ae6 	vcmpe.f32	s15, s13
 801206c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012070:	dc47      	bgt.n	8012102 <nema_set_matrix+0xb6>
 8012072:	2009      	movs	r0, #9
 8012074:	f00b fe1e 	bl	801dcb4 <nema_cl_get_space>
 8012078:	2800      	cmp	r0, #0
 801207a:	d040      	beq.n	80120fe <nema_set_matrix+0xb2>
 801207c:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 8012080:	6003      	str	r3, [r0, #0]
 8012082:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8012086:	6962      	ldr	r2, [r4, #20]
 8012088:	6083      	str	r3, [r0, #8]
 801208a:	f44f 73bc 	mov.w	r3, #376	@ 0x178
 801208e:	6042      	str	r2, [r0, #4]
 8012090:	68a2      	ldr	r2, [r4, #8]
 8012092:	6103      	str	r3, [r0, #16]
 8012094:	f44f 73be 	mov.w	r3, #380	@ 0x17c
 8012098:	60c2      	str	r2, [r0, #12]
 801209a:	69a2      	ldr	r2, [r4, #24]
 801209c:	6183      	str	r3, [r0, #24]
 801209e:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 80120a2:	6142      	str	r2, [r0, #20]
 80120a4:	69e2      	ldr	r2, [r4, #28]
 80120a6:	6203      	str	r3, [r0, #32]
 80120a8:	61c2      	str	r2, [r0, #28]
 80120aa:	6a23      	ldr	r3, [r4, #32]
 80120ac:	2544      	movs	r5, #68	@ 0x44
 80120ae:	6243      	str	r3, [r0, #36]	@ 0x24
 80120b0:	2640      	movs	r6, #64	@ 0x40
 80120b2:	233c      	movs	r3, #60	@ 0x3c
 80120b4:	2738      	movs	r7, #56	@ 0x38
 80120b6:	2234      	movs	r2, #52	@ 0x34
 80120b8:	f04f 0c30 	mov.w	ip, #48	@ 0x30
 80120bc:	212c      	movs	r1, #44	@ 0x2c
 80120be:	f04f 0e28 	mov.w	lr, #40	@ 0x28
 80120c2:	f44f 78b0 	mov.w	r8, #352	@ 0x160
 80120c6:	f840 800e 	str.w	r8, [r0, lr]
 80120ca:	f44f 7eb2 	mov.w	lr, #356	@ 0x164
 80120ce:	f8d4 8000 	ldr.w	r8, [r4]
 80120d2:	4401      	add	r1, r0
 80120d4:	f8c1 8000 	str.w	r8, [r1]
 80120d8:	f840 e00c 	str.w	lr, [r0, ip]
 80120dc:	f44f 71b6 	mov.w	r1, #364	@ 0x16c
 80120e0:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80120e4:	4402      	add	r2, r0
 80120e6:	f8c2 c000 	str.w	ip, [r2]
 80120ea:	f44f 72b8 	mov.w	r2, #368	@ 0x170
 80120ee:	51c1      	str	r1, [r0, r7]
 80120f0:	68e1      	ldr	r1, [r4, #12]
 80120f2:	4403      	add	r3, r0
 80120f4:	6019      	str	r1, [r3, #0]
 80120f6:	5182      	str	r2, [r0, r6]
 80120f8:	6923      	ldr	r3, [r4, #16]
 80120fa:	4428      	add	r0, r5
 80120fc:	6003      	str	r3, [r0, #0]
 80120fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012102:	ed90 6a07 	vldr	s12, [r0, #28]
 8012106:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801210a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801210e:	d5b0      	bpl.n	8012072 <nema_set_matrix+0x26>
 8012110:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8012114:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012118:	ddab      	ble.n	8012072 <nema_set_matrix+0x26>
 801211a:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 801211e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8012122:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012126:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801212a:	d43f      	bmi.n	80121ac <nema_set_matrix+0x160>
 801212c:	edd4 7a08 	vldr	s15, [r4, #32]
 8012130:	ed94 5a00 	vldr	s10, [r4]
 8012134:	edd4 5a01 	vldr	s11, [r4, #4]
 8012138:	ed94 6a02 	vldr	s12, [r4, #8]
 801213c:	edd4 6a03 	vldr	s13, [r4, #12]
 8012140:	ed94 7a04 	vldr	s14, [r4, #16]
 8012144:	ed94 4a05 	vldr	s8, [r4, #20]
 8012148:	eec5 4a27 	vdiv.f32	s9, s10, s15
 801214c:	ee85 5aa7 	vdiv.f32	s10, s11, s15
 8012150:	eec6 5a27 	vdiv.f32	s11, s12, s15
 8012154:	ee86 6aa7 	vdiv.f32	s12, s13, s15
 8012158:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801215c:	ee84 7a27 	vdiv.f32	s14, s8, s15
 8012160:	edc4 4a00 	vstr	s9, [r4]
 8012164:	ed84 5a01 	vstr	s10, [r4, #4]
 8012168:	edc4 5a02 	vstr	s11, [r4, #8]
 801216c:	ed84 6a03 	vstr	s12, [r4, #12]
 8012170:	edc4 6a04 	vstr	s13, [r4, #16]
 8012174:	ed84 7a05 	vstr	s14, [r4, #20]
 8012178:	2006      	movs	r0, #6
 801217a:	f00b fd9b 	bl	801dcb4 <nema_cl_get_space>
 801217e:	2800      	cmp	r0, #0
 8012180:	d0bd      	beq.n	80120fe <nema_set_matrix+0xb2>
 8012182:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 8012186:	6003      	str	r3, [r0, #0]
 8012188:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 801218c:	6962      	ldr	r2, [r4, #20]
 801218e:	6083      	str	r3, [r0, #8]
 8012190:	6042      	str	r2, [r0, #4]
 8012192:	68a3      	ldr	r3, [r4, #8]
 8012194:	252c      	movs	r5, #44	@ 0x2c
 8012196:	60c3      	str	r3, [r0, #12]
 8012198:	2628      	movs	r6, #40	@ 0x28
 801219a:	2324      	movs	r3, #36	@ 0x24
 801219c:	2720      	movs	r7, #32
 801219e:	221c      	movs	r2, #28
 80121a0:	f04f 0c18 	mov.w	ip, #24
 80121a4:	2114      	movs	r1, #20
 80121a6:	f04f 0e10 	mov.w	lr, #16
 80121aa:	e78a      	b.n	80120c2 <nema_set_matrix+0x76>
 80121ac:	eef4 7ae6 	vcmpe.f32	s15, s13
 80121b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80121b4:	dce0      	bgt.n	8012178 <nema_set_matrix+0x12c>
 80121b6:	e7b9      	b.n	801212c <nema_set_matrix+0xe0>
 80121b8:	33d6bf95 	.word	0x33d6bf95
 80121bc:	b3d6bf95 	.word	0xb3d6bf95

080121c0 <nema_set_matrix_translate>:
 80121c0:	b508      	push	{r3, lr}
 80121c2:	2002      	movs	r0, #2
 80121c4:	ed2d 8b02 	vpush	{d8}
 80121c8:	eeb0 8a40 	vmov.f32	s16, s0
 80121cc:	eef0 8a60 	vmov.f32	s17, s1
 80121d0:	f00b fd70 	bl	801dcb4 <nema_cl_get_space>
 80121d4:	b1c8      	cbz	r0, 801220a <nema_set_matrix_translate+0x4a>
 80121d6:	eddf 7a13 	vldr	s15, [pc, #76]	@ 8012224 <nema_set_matrix_translate+0x64>
 80121da:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80121de:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 80121e2:	eef1 6a68 	vneg.f32	s13, s17
 80121e6:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 80121ea:	eeb1 7a48 	vneg.f32	s14, s16
 80121ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80121f2:	6002      	str	r2, [r0, #0]
 80121f4:	edc0 6a01 	vstr	s13, [r0, #4]
 80121f8:	6083      	str	r3, [r0, #8]
 80121fa:	ed80 7a03 	vstr	s14, [r0, #12]
 80121fe:	dc07      	bgt.n	8012210 <nema_set_matrix_translate+0x50>
 8012200:	eef4 8ae7 	vcmpe.f32	s17, s15
 8012204:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012208:	dc02      	bgt.n	8012210 <nema_set_matrix_translate+0x50>
 801220a:	ecbd 8b02 	vpop	{d8}
 801220e:	bd08      	pop	{r3, pc}
 8012210:	ecbd 8b02 	vpop	{d8}
 8012214:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 8012218:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801221c:	f44f 708c 	mov.w	r0, #280	@ 0x118
 8012220:	f00b bda4 	b.w	801dd6c <nema_cl_add_cmd>
 8012224:	45000000 	.word	0x45000000

08012228 <nema_load_frag_shader>:
 8012228:	b570      	push	{r4, r5, r6, lr}
 801222a:	460e      	mov	r6, r1
 801222c:	4604      	mov	r4, r0
 801222e:	4611      	mov	r1, r2
 8012230:	20c4      	movs	r0, #196	@ 0xc4
 8012232:	f00b fd9b 	bl	801dd6c <nema_cl_add_cmd>
 8012236:	b186      	cbz	r6, 801225a <nema_load_frag_shader+0x32>
 8012238:	2500      	movs	r5, #0
 801223a:	3408      	adds	r4, #8
 801223c:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8012240:	20c8      	movs	r0, #200	@ 0xc8
 8012242:	f00b fd93 	bl	801dd6c <nema_cl_add_cmd>
 8012246:	3501      	adds	r5, #1
 8012248:	f854 1c04 	ldr.w	r1, [r4, #-4]
 801224c:	20cc      	movs	r0, #204	@ 0xcc
 801224e:	f00b fd8d 	bl	801dd6c <nema_cl_add_cmd>
 8012252:	42ae      	cmp	r6, r5
 8012254:	f104 0408 	add.w	r4, r4, #8
 8012258:	d1f0      	bne.n	801223c <nema_load_frag_shader+0x14>
 801225a:	bd70      	pop	{r4, r5, r6, pc}

0801225c <nema_set_frag_ptr>:
 801225c:	4601      	mov	r1, r0
 801225e:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 8012262:	f00b bd83 	b.w	801dd6c <nema_cl_add_cmd>
 8012266:	bf00      	nop

08012268 <nema_set_rop_blend_mode>:
 8012268:	4601      	mov	r1, r0
 801226a:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 801226e:	f00b bd7d 	b.w	801dd6c <nema_cl_add_cmd>
 8012272:	bf00      	nop

08012274 <nema_set_rop_const_color>:
 8012274:	4601      	mov	r1, r0
 8012276:	f44f 70ec 	mov.w	r0, #472	@ 0x1d8
 801227a:	f00b bd77 	b.w	801dd6c <nema_cl_add_cmd>
 801227e:	bf00      	nop

08012280 <nema_set_depth_ctrl>:
 8012280:	4601      	mov	r1, r0
 8012282:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 8012286:	f00b bd71 	b.w	801dd6c <nema_cl_add_cmd>
 801228a:	bf00      	nop

0801228c <nema_set_gradient_fx>:
 801228c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012290:	4607      	mov	r7, r0
 8012292:	200c      	movs	r0, #12
 8012294:	460e      	mov	r6, r1
 8012296:	4615      	mov	r5, r2
 8012298:	461c      	mov	r4, r3
 801229a:	f00b fd0b 	bl	801dcb4 <nema_cl_get_space>
 801229e:	2800      	cmp	r0, #0
 80122a0:	d03d      	beq.n	801231e <nema_set_gradient_fx+0x92>
 80122a2:	f44f 71d4 	mov.w	r1, #424	@ 0x1a8
 80122a6:	6301      	str	r1, [r0, #48]	@ 0x30
 80122a8:	f44f 71d6 	mov.w	r1, #428	@ 0x1ac
 80122ac:	6381      	str	r1, [r0, #56]	@ 0x38
 80122ae:	f44f 71d8 	mov.w	r1, #432	@ 0x1b0
 80122b2:	f44f 7be0 	mov.w	fp, #448	@ 0x1c0
 80122b6:	f44f 7ae2 	mov.w	sl, #452	@ 0x1c4
 80122ba:	f44f 79e4 	mov.w	r9, #456	@ 0x1c8
 80122be:	f44f 78e6 	mov.w	r8, #460	@ 0x1cc
 80122c2:	f44f 7ed0 	mov.w	lr, #416	@ 0x1a0
 80122c6:	f44f 7cd2 	mov.w	ip, #420	@ 0x1a4
 80122ca:	f44f 72dc 	mov.w	r2, #440	@ 0x1b8
 80122ce:	f44f 73de 	mov.w	r3, #444	@ 0x1bc
 80122d2:	6401      	str	r1, [r0, #64]	@ 0x40
 80122d4:	f44f 71da 	mov.w	r1, #436	@ 0x1b4
 80122d8:	61c4      	str	r4, [r0, #28]
 80122da:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80122dc:	6047      	str	r7, [r0, #4]
 80122de:	6244      	str	r4, [r0, #36]	@ 0x24
 80122e0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80122e2:	60c6      	str	r6, [r0, #12]
 80122e4:	62c4      	str	r4, [r0, #44]	@ 0x2c
 80122e6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80122e8:	6145      	str	r5, [r0, #20]
 80122ea:	6344      	str	r4, [r0, #52]	@ 0x34
 80122ec:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80122ee:	f8c0 b000 	str.w	fp, [r0]
 80122f2:	63c4      	str	r4, [r0, #60]	@ 0x3c
 80122f4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80122f6:	f8c0 a008 	str.w	sl, [r0, #8]
 80122fa:	6444      	str	r4, [r0, #68]	@ 0x44
 80122fc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80122fe:	f8c0 9010 	str.w	r9, [r0, #16]
 8012302:	64c4      	str	r4, [r0, #76]	@ 0x4c
 8012304:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8012306:	f8c0 8018 	str.w	r8, [r0, #24]
 801230a:	6544      	str	r4, [r0, #84]	@ 0x54
 801230c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801230e:	f8c0 e020 	str.w	lr, [r0, #32]
 8012312:	65c4      	str	r4, [r0, #92]	@ 0x5c
 8012314:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8012318:	6481      	str	r1, [r0, #72]	@ 0x48
 801231a:	6502      	str	r2, [r0, #80]	@ 0x50
 801231c:	6583      	str	r3, [r0, #88]	@ 0x58
 801231e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012322:	bf00      	nop

08012324 <nema_set_raster_color>:
 8012324:	4601      	mov	r1, r0
 8012326:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 801232a:	f00b bd1f 	b.w	801dd6c <nema_cl_add_cmd>
 801232e:	bf00      	nop

08012330 <nema_raster_triangle_fx>:
 8012330:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012334:	4607      	mov	r7, r0
 8012336:	2007      	movs	r0, #7
 8012338:	460e      	mov	r6, r1
 801233a:	4615      	mov	r5, r2
 801233c:	461c      	mov	r4, r3
 801233e:	f00b fcb9 	bl	801dcb4 <nema_cl_get_space>
 8012342:	b350      	cbz	r0, 801239a <nema_raster_triangle_fx+0x6a>
 8012344:	f44f 7398 	mov.w	r3, #304	@ 0x130
 8012348:	f44f 7292 	mov.w	r2, #292	@ 0x124
 801234c:	f44f 7890 	mov.w	r8, #288	@ 0x120
 8012350:	f44f 7e9a 	mov.w	lr, #308	@ 0x134
 8012354:	f44f 7ca0 	mov.w	ip, #320	@ 0x140
 8012358:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 801235c:	6103      	str	r3, [r0, #16]
 801235e:	4b10      	ldr	r3, [pc, #64]	@ (80123a0 <nema_raster_triangle_fx+0x70>)
 8012360:	6047      	str	r7, [r0, #4]
 8012362:	60c6      	str	r6, [r0, #12]
 8012364:	f8c0 8000 	str.w	r8, [r0]
 8012368:	6082      	str	r2, [r0, #8]
 801236a:	691a      	ldr	r2, [r3, #16]
 801236c:	4b0d      	ldr	r3, [pc, #52]	@ (80123a4 <nema_raster_triangle_fx+0x74>)
 801236e:	61c4      	str	r4, [r0, #28]
 8012370:	9c06      	ldr	r4, [sp, #24]
 8012372:	6303      	str	r3, [r0, #48]	@ 0x30
 8012374:	01d3      	lsls	r3, r2, #7
 8012376:	6244      	str	r4, [r0, #36]	@ 0x24
 8012378:	bf48      	it	mi
 801237a:	f442 0200 	orrmi.w	r2, r2, #8388608	@ 0x800000
 801237e:	9c07      	ldr	r4, [sp, #28]
 8012380:	bf58      	it	pl
 8012382:	f422 0200 	bicpl.w	r2, r2, #8388608	@ 0x800000
 8012386:	f042 0204 	orr.w	r2, r2, #4
 801238a:	6145      	str	r5, [r0, #20]
 801238c:	62c4      	str	r4, [r0, #44]	@ 0x2c
 801238e:	f8c0 e018 	str.w	lr, [r0, #24]
 8012392:	f8c0 c020 	str.w	ip, [r0, #32]
 8012396:	6281      	str	r1, [r0, #40]	@ 0x28
 8012398:	6342      	str	r2, [r0, #52]	@ 0x34
 801239a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801239e:	bf00      	nop
 80123a0:	20000064 	.word	0x20000064
 80123a4:	ff000100 	.word	0xff000100

080123a8 <nema_raster_rect>:
 80123a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80123aa:	1e17      	subs	r7, r2, #0
 80123ac:	dd20      	ble.n	80123f0 <nema_raster_rect+0x48>
 80123ae:	2b00      	cmp	r3, #0
 80123b0:	dd1e      	ble.n	80123f0 <nema_raster_rect+0x48>
 80123b2:	4604      	mov	r4, r0
 80123b4:	2003      	movs	r0, #3
 80123b6:	461d      	mov	r5, r3
 80123b8:	460e      	mov	r6, r1
 80123ba:	f00b fc7b 	bl	801dcb4 <nema_cl_get_space>
 80123be:	b1b8      	cbz	r0, 80123f0 <nema_raster_rect+0x48>
 80123c0:	f44f 7c82 	mov.w	ip, #260	@ 0x104
 80123c4:	f44f 7184 	mov.w	r1, #264	@ 0x108
 80123c8:	193a      	adds	r2, r7, r4
 80123ca:	b292      	uxth	r2, r2
 80123cc:	19ab      	adds	r3, r5, r6
 80123ce:	b2a4      	uxth	r4, r4
 80123d0:	4d08      	ldr	r5, [pc, #32]	@ (80123f4 <nema_raster_rect+0x4c>)
 80123d2:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 80123d6:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80123da:	4a07      	ldr	r2, [pc, #28]	@ (80123f8 <nema_raster_rect+0x50>)
 80123dc:	6044      	str	r4, [r0, #4]
 80123de:	60c3      	str	r3, [r0, #12]
 80123e0:	f8c0 c000 	str.w	ip, [r0]
 80123e4:	6081      	str	r1, [r0, #8]
 80123e6:	6105      	str	r5, [r0, #16]
 80123e8:	6913      	ldr	r3, [r2, #16]
 80123ea:	f043 0302 	orr.w	r3, r3, #2
 80123ee:	6143      	str	r3, [r0, #20]
 80123f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80123f2:	bf00      	nop
 80123f4:	ff000100 	.word	0xff000100
 80123f8:	20000064 	.word	0x20000064

080123fc <nema_raster_quad_fx>:
 80123fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012400:	4607      	mov	r7, r0
 8012402:	2009      	movs	r0, #9
 8012404:	460e      	mov	r6, r1
 8012406:	4615      	mov	r5, r2
 8012408:	461c      	mov	r4, r3
 801240a:	f00b fc53 	bl	801dcb4 <nema_cl_get_space>
 801240e:	2800      	cmp	r0, #0
 8012410:	d02f      	beq.n	8012472 <nema_raster_quad_fx+0x76>
 8012412:	f44f 7398 	mov.w	r3, #304	@ 0x130
 8012416:	f44f 7292 	mov.w	r2, #292	@ 0x124
 801241a:	f44f 7a90 	mov.w	sl, #288	@ 0x120
 801241e:	f44f 799a 	mov.w	r9, #308	@ 0x134
 8012422:	f44f 78a0 	mov.w	r8, #320	@ 0x140
 8012426:	f44f 7ea2 	mov.w	lr, #324	@ 0x144
 801242a:	f44f 7ca8 	mov.w	ip, #336	@ 0x150
 801242e:	f44f 71aa 	mov.w	r1, #340	@ 0x154
 8012432:	6103      	str	r3, [r0, #16]
 8012434:	4b10      	ldr	r3, [pc, #64]	@ (8012478 <nema_raster_quad_fx+0x7c>)
 8012436:	6047      	str	r7, [r0, #4]
 8012438:	60c6      	str	r6, [r0, #12]
 801243a:	f8c0 a000 	str.w	sl, [r0]
 801243e:	6082      	str	r2, [r0, #8]
 8012440:	691a      	ldr	r2, [r3, #16]
 8012442:	9b08      	ldr	r3, [sp, #32]
 8012444:	f042 0205 	orr.w	r2, r2, #5
 8012448:	6243      	str	r3, [r0, #36]	@ 0x24
 801244a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801244c:	6145      	str	r5, [r0, #20]
 801244e:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8012450:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012452:	61c4      	str	r4, [r0, #28]
 8012454:	6343      	str	r3, [r0, #52]	@ 0x34
 8012456:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012458:	6442      	str	r2, [r0, #68]	@ 0x44
 801245a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801245c:	4b07      	ldr	r3, [pc, #28]	@ (801247c <nema_raster_quad_fx+0x80>)
 801245e:	f8c0 9018 	str.w	r9, [r0, #24]
 8012462:	f8c0 8020 	str.w	r8, [r0, #32]
 8012466:	f8c0 e028 	str.w	lr, [r0, #40]	@ 0x28
 801246a:	f8c0 c030 	str.w	ip, [r0, #48]	@ 0x30
 801246e:	6381      	str	r1, [r0, #56]	@ 0x38
 8012470:	6403      	str	r3, [r0, #64]	@ 0x40
 8012472:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012476:	bf00      	nop
 8012478:	20000064 	.word	0x20000064
 801247c:	ff000100 	.word	0xff000100

08012480 <nema_set_interrupt_ctrl>:
 8012480:	4601      	mov	r1, r0
 8012482:	20f8      	movs	r0, #248	@ 0xf8
 8012484:	f00b bc72 	b.w	801dd6c <nema_cl_add_cmd>

08012488 <flush_lines_>:
 8012488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801248c:	ed2d 8b06 	vpush	{d8-d10}
 8012490:	4fbc      	ldr	r7, [pc, #752]	@ (8012784 <flush_lines_+0x2fc>)
 8012492:	b083      	sub	sp, #12
 8012494:	683b      	ldr	r3, [r7, #0]
 8012496:	4680      	mov	r8, r0
 8012498:	7f5e      	ldrb	r6, [r3, #29]
 801249a:	9101      	str	r1, [sp, #4]
 801249c:	f016 0610 	ands.w	r6, r6, #16
 80124a0:	f040 8167 	bne.w	8012772 <flush_lines_+0x2ea>
 80124a4:	4cb8      	ldr	r4, [pc, #736]	@ (8012788 <flush_lines_+0x300>)
 80124a6:	f1b8 0f01 	cmp.w	r8, #1
 80124aa:	edd4 7a08 	vldr	s15, [r4, #32]
 80124ae:	4db7      	ldr	r5, [pc, #732]	@ (801278c <flush_lines_+0x304>)
 80124b0:	f000 80f1 	beq.w	8012696 <flush_lines_+0x20e>
 80124b4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80124b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80124bc:	dd61      	ble.n	8012582 <flush_lines_+0xfa>
 80124be:	683b      	ldr	r3, [r7, #0]
 80124c0:	7f5b      	ldrb	r3, [r3, #29]
 80124c2:	f013 0310 	ands.w	r3, r3, #16
 80124c6:	d109      	bne.n	80124dc <flush_lines_+0x54>
 80124c8:	f1b8 0f01 	cmp.w	r8, #1
 80124cc:	f000 81d1 	beq.w	8012872 <flush_lines_+0x3ea>
 80124d0:	2201      	movs	r2, #1
 80124d2:	4611      	mov	r1, r2
 80124d4:	4610      	mov	r0, r2
 80124d6:	f7ff fd79 	bl	8011fcc <nema_enable_aa>
 80124da:	4606      	mov	r6, r0
 80124dc:	2009      	movs	r0, #9
 80124de:	f8d4 b000 	ldr.w	fp, [r4]
 80124e2:	f8d4 a010 	ldr.w	sl, [r4, #16]
 80124e6:	ed94 aa01 	vldr	s20, [r4, #4]
 80124ea:	edd4 9a05 	vldr	s19, [r4, #20]
 80124ee:	ed94 9a02 	vldr	s18, [r4, #8]
 80124f2:	edd4 8a06 	vldr	s17, [r4, #24]
 80124f6:	ed94 8a03 	vldr	s16, [r4, #12]
 80124fa:	f8d4 901c 	ldr.w	r9, [r4, #28]
 80124fe:	f00b fbd9 	bl	801dcb4 <nema_cl_get_space>
 8012502:	b3b8      	cbz	r0, 8012574 <flush_lines_+0xec>
 8012504:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8012508:	f8c0 b004 	str.w	fp, [r0, #4]
 801250c:	f8c0 a00c 	str.w	sl, [r0, #12]
 8012510:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8012514:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 8012518:	6003      	str	r3, [r0, #0]
 801251a:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801251e:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012522:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8012526:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801252a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801252e:	ed80 aa05 	vstr	s20, [r0, #20]
 8012532:	edc0 9a07 	vstr	s19, [r0, #28]
 8012536:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 801253a:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 801253e:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012542:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 8012546:	f8df 9248 	ldr.w	r9, [pc, #584]	@ 8012790 <flush_lines_+0x308>
 801254a:	f8c0 a010 	str.w	sl, [r0, #16]
 801254e:	f8c0 b008 	str.w	fp, [r0, #8]
 8012552:	f8d9 9010 	ldr.w	r9, [r9, #16]
 8012556:	f8df a23c 	ldr.w	sl, [pc, #572]	@ 8012794 <flush_lines_+0x30c>
 801255a:	f049 0905 	orr.w	r9, r9, #5
 801255e:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 8012562:	f8c0 e018 	str.w	lr, [r0, #24]
 8012566:	f8c0 c020 	str.w	ip, [r0, #32]
 801256a:	6281      	str	r1, [r0, #40]	@ 0x28
 801256c:	6302      	str	r2, [r0, #48]	@ 0x30
 801256e:	6383      	str	r3, [r0, #56]	@ 0x38
 8012570:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 8012574:	2200      	movs	r2, #0
 8012576:	683b      	ldr	r3, [r7, #0]
 8012578:	6222      	str	r2, [r4, #32]
 801257a:	7f5b      	ldrb	r3, [r3, #29]
 801257c:	06d8      	lsls	r0, r3, #27
 801257e:	f140 8086 	bpl.w	801268e <flush_lines_+0x206>
 8012582:	edd5 7a08 	vldr	s15, [r5, #32]
 8012586:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801258a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801258e:	dd1b      	ble.n	80125c8 <flush_lines_+0x140>
 8012590:	9b01      	ldr	r3, [sp, #4]
 8012592:	0619      	lsls	r1, r3, #24
 8012594:	d418      	bmi.n	80125c8 <flush_lines_+0x140>
 8012596:	683b      	ldr	r3, [r7, #0]
 8012598:	7f59      	ldrb	r1, [r3, #29]
 801259a:	f011 0110 	ands.w	r1, r1, #16
 801259e:	f040 8103 	bne.w	80127a8 <flush_lines_+0x320>
 80125a2:	f1b8 0f01 	cmp.w	r8, #1
 80125a6:	f000 80f9 	beq.w	801279c <flush_lines_+0x314>
 80125aa:	f8df 81ec 	ldr.w	r8, [pc, #492]	@ 8012798 <flush_lines_+0x310>
 80125ae:	f8d8 3000 	ldr.w	r3, [r8]
 80125b2:	2b01      	cmp	r3, #1
 80125b4:	bf13      	iteet	ne
 80125b6:	2301      	movne	r3, #1
 80125b8:	461a      	moveq	r2, r3
 80125ba:	4619      	moveq	r1, r3
 80125bc:	461a      	movne	r2, r3
 80125be:	4618      	mov	r0, r3
 80125c0:	f7ff fd04 	bl	8011fcc <nema_enable_aa>
 80125c4:	4606      	mov	r6, r0
 80125c6:	e0f1      	b.n	80127ac <flush_lines_+0x324>
 80125c8:	f8df 81cc 	ldr.w	r8, [pc, #460]	@ 8012798 <flush_lines_+0x310>
 80125cc:	f8d8 3000 	ldr.w	r3, [r8]
 80125d0:	2b02      	cmp	r3, #2
 80125d2:	d00a      	beq.n	80125ea <flush_lines_+0x162>
 80125d4:	4630      	mov	r0, r6
 80125d6:	f7ff fd1b 	bl	8012010 <nema_enable_aa_flags>
 80125da:	2300      	movs	r3, #0
 80125dc:	f8c8 3000 	str.w	r3, [r8]
 80125e0:	b003      	add	sp, #12
 80125e2:	ecbd 8b06 	vpop	{d8-d10}
 80125e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80125ea:	683b      	ldr	r3, [r7, #0]
 80125ec:	7f5b      	ldrb	r3, [r3, #29]
 80125ee:	f013 0310 	ands.w	r3, r3, #16
 80125f2:	f000 8133 	beq.w	801285c <flush_lines_+0x3d4>
 80125f6:	2009      	movs	r0, #9
 80125f8:	f8d5 a004 	ldr.w	sl, [r5, #4]
 80125fc:	edd5 9a05 	vldr	s19, [r5, #20]
 8012600:	f8d4 9000 	ldr.w	r9, [r4]
 8012604:	ed94 9a04 	vldr	s18, [r4, #16]
 8012608:	edd5 8a02 	vldr	s17, [r5, #8]
 801260c:	ed95 8a06 	vldr	s16, [r5, #24]
 8012610:	68e5      	ldr	r5, [r4, #12]
 8012612:	69e4      	ldr	r4, [r4, #28]
 8012614:	f00b fb4e 	bl	801dcb4 <nema_cl_get_space>
 8012618:	b388      	cbz	r0, 801267e <flush_lines_+0x1f6>
 801261a:	f8c0 a004 	str.w	sl, [r0, #4]
 801261e:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012622:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 8012626:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 801262a:	edc0 9a03 	vstr	s19, [r0, #12]
 801262e:	f8c0 9014 	str.w	r9, [r0, #20]
 8012632:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8012636:	f44f 794d 	mov.w	r9, #820	@ 0x334
 801263a:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 801263e:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8012642:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8012646:	ed80 9a07 	vstr	s18, [r0, #28]
 801264a:	edc0 8a09 	vstr	s17, [r0, #36]	@ 0x24
 801264e:	ed80 8a0b 	vstr	s16, [r0, #44]	@ 0x2c
 8012652:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8012654:	4c4e      	ldr	r4, [pc, #312]	@ (8012790 <flush_lines_+0x308>)
 8012656:	f8c0 b000 	str.w	fp, [r0]
 801265a:	f8c0 a008 	str.w	sl, [r0, #8]
 801265e:	6103      	str	r3, [r0, #16]
 8012660:	6923      	ldr	r3, [r4, #16]
 8012662:	4c4c      	ldr	r4, [pc, #304]	@ (8012794 <flush_lines_+0x30c>)
 8012664:	f043 0305 	orr.w	r3, r3, #5
 8012668:	6345      	str	r5, [r0, #52]	@ 0x34
 801266a:	6443      	str	r3, [r0, #68]	@ 0x44
 801266c:	f8c0 9018 	str.w	r9, [r0, #24]
 8012670:	f8c0 e020 	str.w	lr, [r0, #32]
 8012674:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8012678:	6301      	str	r1, [r0, #48]	@ 0x30
 801267a:	6382      	str	r2, [r0, #56]	@ 0x38
 801267c:	6404      	str	r4, [r0, #64]	@ 0x40
 801267e:	683b      	ldr	r3, [r7, #0]
 8012680:	7f5b      	ldrb	r3, [r3, #29]
 8012682:	06db      	lsls	r3, r3, #27
 8012684:	d4a6      	bmi.n	80125d4 <flush_lines_+0x14c>
 8012686:	4630      	mov	r0, r6
 8012688:	f7ff fcc2 	bl	8012010 <nema_enable_aa_flags>
 801268c:	e7a2      	b.n	80125d4 <flush_lines_+0x14c>
 801268e:	4630      	mov	r0, r6
 8012690:	f7ff fcbe 	bl	8012010 <nema_enable_aa_flags>
 8012694:	e775      	b.n	8012582 <flush_lines_+0xfa>
 8012696:	ed95 7a08 	vldr	s14, [r5, #32]
 801269a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801269e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80126a2:	f77f af07 	ble.w	80124b4 <flush_lines_+0x2c>
 80126a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80126aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80126ae:	f77f af6f 	ble.w	8012590 <flush_lines_+0x108>
 80126b2:	683b      	ldr	r3, [r7, #0]
 80126b4:	7f5b      	ldrb	r3, [r3, #29]
 80126b6:	f013 0310 	ands.w	r3, r3, #16
 80126ba:	f000 80e7 	beq.w	801288c <flush_lines_+0x404>
 80126be:	2009      	movs	r0, #9
 80126c0:	f8d4 b004 	ldr.w	fp, [r4, #4]
 80126c4:	f8d4 a014 	ldr.w	sl, [r4, #20]
 80126c8:	ed95 aa00 	vldr	s20, [r5]
 80126cc:	edd5 9a04 	vldr	s19, [r5, #16]
 80126d0:	ed94 9a02 	vldr	s18, [r4, #8]
 80126d4:	edd4 8a06 	vldr	s17, [r4, #24]
 80126d8:	ed95 8a03 	vldr	s16, [r5, #12]
 80126dc:	f8d5 901c 	ldr.w	r9, [r5, #28]
 80126e0:	f00b fae8 	bl	801dcb4 <nema_cl_get_space>
 80126e4:	b3b8      	cbz	r0, 8012756 <flush_lines_+0x2ce>
 80126e6:	f44f 7348 	mov.w	r3, #800	@ 0x320
 80126ea:	f8c0 b004 	str.w	fp, [r0, #4]
 80126ee:	f8c0 a00c 	str.w	sl, [r0, #12]
 80126f2:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 80126f6:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 80126fa:	6003      	str	r3, [r0, #0]
 80126fc:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8012700:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012704:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8012708:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801270c:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8012710:	ed80 aa05 	vstr	s20, [r0, #20]
 8012714:	edc0 9a07 	vstr	s19, [r0, #28]
 8012718:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 801271c:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8012720:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012724:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 8012728:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 8012790 <flush_lines_+0x308>
 801272c:	f8c0 a010 	str.w	sl, [r0, #16]
 8012730:	f8c0 b008 	str.w	fp, [r0, #8]
 8012734:	f8d9 9010 	ldr.w	r9, [r9, #16]
 8012738:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8012794 <flush_lines_+0x30c>
 801273c:	f049 0905 	orr.w	r9, r9, #5
 8012740:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 8012744:	f8c0 e018 	str.w	lr, [r0, #24]
 8012748:	f8c0 c020 	str.w	ip, [r0, #32]
 801274c:	6281      	str	r1, [r0, #40]	@ 0x28
 801274e:	6302      	str	r2, [r0, #48]	@ 0x30
 8012750:	6383      	str	r3, [r0, #56]	@ 0x38
 8012752:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 8012756:	683b      	ldr	r3, [r7, #0]
 8012758:	7f5b      	ldrb	r3, [r3, #29]
 801275a:	06db      	lsls	r3, r3, #27
 801275c:	f140 8090 	bpl.w	8012880 <flush_lines_+0x3f8>
 8012760:	edd4 7a08 	vldr	s15, [r4, #32]
 8012764:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012768:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801276c:	f73f aeb6 	bgt.w	80124dc <flush_lines_+0x54>
 8012770:	e707      	b.n	8012582 <flush_lines_+0xfa>
 8012772:	2300      	movs	r3, #0
 8012774:	461a      	mov	r2, r3
 8012776:	4619      	mov	r1, r3
 8012778:	4618      	mov	r0, r3
 801277a:	f7ff fc27 	bl	8011fcc <nema_enable_aa>
 801277e:	4606      	mov	r6, r0
 8012780:	e690      	b.n	80124a4 <flush_lines_+0x1c>
 8012782:	bf00      	nop
 8012784:	20082f68 	.word	0x20082f68
 8012788:	20082fb8 	.word	0x20082fb8
 801278c:	20082f80 	.word	0x20082f80
 8012790:	20000064 	.word	0x20000064
 8012794:	ff000100 	.word	0xff000100
 8012798:	20082fe4 	.word	0x20082fe4
 801279c:	460b      	mov	r3, r1
 801279e:	4642      	mov	r2, r8
 80127a0:	4640      	mov	r0, r8
 80127a2:	f7ff fc13 	bl	8011fcc <nema_enable_aa>
 80127a6:	4606      	mov	r6, r0
 80127a8:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 801289c <flush_lines_+0x414>
 80127ac:	2009      	movs	r0, #9
 80127ae:	f8d5 b000 	ldr.w	fp, [r5]
 80127b2:	f8d5 a010 	ldr.w	sl, [r5, #16]
 80127b6:	ed95 aa01 	vldr	s20, [r5, #4]
 80127ba:	edd5 9a05 	vldr	s19, [r5, #20]
 80127be:	ed95 9a02 	vldr	s18, [r5, #8]
 80127c2:	edd5 8a06 	vldr	s17, [r5, #24]
 80127c6:	ed95 8a03 	vldr	s16, [r5, #12]
 80127ca:	f8d5 901c 	ldr.w	r9, [r5, #28]
 80127ce:	f00b fa71 	bl	801dcb4 <nema_cl_get_space>
 80127d2:	b3b8      	cbz	r0, 8012844 <flush_lines_+0x3bc>
 80127d4:	f44f 7348 	mov.w	r3, #800	@ 0x320
 80127d8:	f8c0 b004 	str.w	fp, [r0, #4]
 80127dc:	f8c0 a00c 	str.w	sl, [r0, #12]
 80127e0:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 80127e4:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 80127e8:	6003      	str	r3, [r0, #0]
 80127ea:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 80127ee:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 80127f2:	f44f 7151 	mov.w	r1, #836	@ 0x344
 80127f6:	f44f 7254 	mov.w	r2, #848	@ 0x350
 80127fa:	f44f 7355 	mov.w	r3, #852	@ 0x354
 80127fe:	ed80 aa05 	vstr	s20, [r0, #20]
 8012802:	edc0 9a07 	vstr	s19, [r0, #28]
 8012806:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 801280a:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 801280e:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012812:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 8012816:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 80128a0 <flush_lines_+0x418>
 801281a:	f8c0 a010 	str.w	sl, [r0, #16]
 801281e:	f8c0 b008 	str.w	fp, [r0, #8]
 8012822:	f8d9 9010 	ldr.w	r9, [r9, #16]
 8012826:	f8df a07c 	ldr.w	sl, [pc, #124]	@ 80128a4 <flush_lines_+0x41c>
 801282a:	f049 0905 	orr.w	r9, r9, #5
 801282e:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 8012832:	f8c0 e018 	str.w	lr, [r0, #24]
 8012836:	f8c0 c020 	str.w	ip, [r0, #32]
 801283a:	6281      	str	r1, [r0, #40]	@ 0x28
 801283c:	6302      	str	r2, [r0, #48]	@ 0x30
 801283e:	6383      	str	r3, [r0, #56]	@ 0x38
 8012840:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 8012844:	2200      	movs	r2, #0
 8012846:	683b      	ldr	r3, [r7, #0]
 8012848:	622a      	str	r2, [r5, #32]
 801284a:	7f5b      	ldrb	r3, [r3, #29]
 801284c:	06da      	lsls	r2, r3, #27
 801284e:	d50c      	bpl.n	801286a <flush_lines_+0x3e2>
 8012850:	f8d8 3000 	ldr.w	r3, [r8]
 8012854:	2b02      	cmp	r3, #2
 8012856:	f47f aebd 	bne.w	80125d4 <flush_lines_+0x14c>
 801285a:	e6cc      	b.n	80125f6 <flush_lines_+0x16e>
 801285c:	2201      	movs	r2, #1
 801285e:	4619      	mov	r1, r3
 8012860:	4610      	mov	r0, r2
 8012862:	f7ff fbb3 	bl	8011fcc <nema_enable_aa>
 8012866:	4606      	mov	r6, r0
 8012868:	e6c5      	b.n	80125f6 <flush_lines_+0x16e>
 801286a:	4630      	mov	r0, r6
 801286c:	f7ff fbd0 	bl	8012010 <nema_enable_aa_flags>
 8012870:	e6ac      	b.n	80125cc <flush_lines_+0x144>
 8012872:	4619      	mov	r1, r3
 8012874:	4642      	mov	r2, r8
 8012876:	4640      	mov	r0, r8
 8012878:	f7ff fba8 	bl	8011fcc <nema_enable_aa>
 801287c:	4606      	mov	r6, r0
 801287e:	e62d      	b.n	80124dc <flush_lines_+0x54>
 8012880:	4630      	mov	r0, r6
 8012882:	f7ff fbc5 	bl	8012010 <nema_enable_aa_flags>
 8012886:	edd4 7a08 	vldr	s15, [r4, #32]
 801288a:	e613      	b.n	80124b4 <flush_lines_+0x2c>
 801288c:	4619      	mov	r1, r3
 801288e:	4642      	mov	r2, r8
 8012890:	4640      	mov	r0, r8
 8012892:	f7ff fb9b 	bl	8011fcc <nema_enable_aa>
 8012896:	4606      	mov	r6, r0
 8012898:	e711      	b.n	80126be <flush_lines_+0x236>
 801289a:	bf00      	nop
 801289c:	20082fe4 	.word	0x20082fe4
 80128a0:	20000064 	.word	0x20000064
 80128a4:	ff000100 	.word	0xff000100

080128a8 <raster_stroked_line_>:
 80128a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128ac:	ed2d 8b10 	vpush	{d8-d15}
 80128b0:	ee31 9a40 	vsub.f32	s18, s2, s0
 80128b4:	ee71 8ae0 	vsub.f32	s17, s3, s1
 80128b8:	ee69 7a09 	vmul.f32	s15, s18, s18
 80128bc:	ee68 6aa8 	vmul.f32	s13, s17, s17
 80128c0:	ed9f 7ac0 	vldr	s14, [pc, #768]	@ 8012bc4 <raster_stroked_line_+0x31c>
 80128c4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80128c8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80128cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128d0:	b085      	sub	sp, #20
 80128d2:	d804      	bhi.n	80128de <raster_stroked_line_+0x36>
 80128d4:	b005      	add	sp, #20
 80128d6:	ecbd 8b10 	vpop	{d8-d15}
 80128da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128de:	eef5 7a40 	vcmp.f32	s15, #0.0
 80128e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128e6:	eeb0 8a40 	vmov.f32	s16, s0
 80128ea:	eeb1 bae7 	vsqrt.f32	s22, s15
 80128ee:	f100 8206 	bmi.w	8012cfe <raster_stroked_line_+0x456>
 80128f2:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80128f6:	4ab4      	ldr	r2, [pc, #720]	@ (8012bc8 <raster_stroked_line_+0x320>)
 80128f8:	4bb4      	ldr	r3, [pc, #720]	@ (8012bcc <raster_stroked_line_+0x324>)
 80128fa:	eec7 6a8b 	vdiv.f32	s13, s15, s22
 80128fe:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8012902:	edd2 7a00 	vldr	s15, [r2]
 8012906:	ed93 aa00 	vldr	s20, [r3]
 801290a:	ee29 9a26 	vmul.f32	s18, s18, s13
 801290e:	ee68 8aa6 	vmul.f32	s17, s17, s13
 8012912:	ee67 7a87 	vmul.f32	s15, s15, s14
 8012916:	ee2a aa07 	vmul.f32	s20, s20, s14
 801291a:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801291e:	ee2a aa09 	vmul.f32	s20, s20, s18
 8012922:	4aab      	ldr	r2, [pc, #684]	@ (8012bd0 <raster_stroked_line_+0x328>)
 8012924:	4bab      	ldr	r3, [pc, #684]	@ (8012bd4 <raster_stroked_line_+0x32c>)
 8012926:	6812      	ldr	r2, [r2, #0]
 8012928:	ee78 ba67 	vsub.f32	s23, s16, s15
 801292c:	ee3a ca20 	vadd.f32	s24, s20, s1
 8012930:	ee70 9aca 	vsub.f32	s19, s1, s20
 8012934:	ee3a da21 	vadd.f32	s26, s20, s3
 8012938:	ee37 8a88 	vadd.f32	s16, s15, s16
 801293c:	ee71 ca67 	vsub.f32	s25, s2, s15
 8012940:	ee77 aa81 	vadd.f32	s21, s15, s2
 8012944:	ee31 aaca 	vsub.f32	s20, s3, s20
 8012948:	681b      	ldr	r3, [r3, #0]
 801294a:	2a00      	cmp	r2, #0
 801294c:	f000 8150 	beq.w	8012bf0 <raster_stroked_line_+0x348>
 8012950:	7f5b      	ldrb	r3, [r3, #29]
 8012952:	f013 0310 	ands.w	r3, r3, #16
 8012956:	d13b      	bne.n	80129d0 <raster_stroked_line_+0x128>
 8012958:	2201      	movs	r2, #1
 801295a:	4619      	mov	r1, r3
 801295c:	4610      	mov	r0, r2
 801295e:	f7ff fb35 	bl	8011fcc <nema_enable_aa>
 8012962:	4607      	mov	r7, r0
 8012964:	4c9c      	ldr	r4, [pc, #624]	@ (8012bd8 <raster_stroked_line_+0x330>)
 8012966:	edd4 7a08 	vldr	s15, [r4, #32]
 801296a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801296e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012972:	dc35      	bgt.n	80129e0 <raster_stroked_line_+0x138>
 8012974:	4d99      	ldr	r5, [pc, #612]	@ (8012bdc <raster_stroked_line_+0x334>)
 8012976:	4e9a      	ldr	r6, [pc, #616]	@ (8012be0 <raster_stroked_line_+0x338>)
 8012978:	edd5 7a08 	vldr	s15, [r5, #32]
 801297c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012980:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012984:	6833      	ldr	r3, [r6, #0]
 8012986:	f340 80f6 	ble.w	8012b76 <raster_stroked_line_+0x2ce>
 801298a:	2b01      	cmp	r3, #1
 801298c:	f000 8095 	beq.w	8012aba <raster_stroked_line_+0x212>
 8012990:	3301      	adds	r3, #1
 8012992:	6033      	str	r3, [r6, #0]
 8012994:	4638      	mov	r0, r7
 8012996:	edc4 ba00 	vstr	s23, [r4]
 801299a:	ed84 ca04 	vstr	s24, [r4, #16]
 801299e:	edc4 ca01 	vstr	s25, [r4, #4]
 80129a2:	ed84 da05 	vstr	s26, [r4, #20]
 80129a6:	edc4 aa02 	vstr	s21, [r4, #8]
 80129aa:	ed84 aa06 	vstr	s20, [r4, #24]
 80129ae:	ed84 8a03 	vstr	s16, [r4, #12]
 80129b2:	edc4 9a07 	vstr	s19, [r4, #28]
 80129b6:	ed84 ba08 	vstr	s22, [r4, #32]
 80129ba:	ed84 9a09 	vstr	s18, [r4, #36]	@ 0x24
 80129be:	edc4 8a0a 	vstr	s17, [r4, #40]	@ 0x28
 80129c2:	b005      	add	sp, #20
 80129c4:	ecbd 8b10 	vpop	{d8-d15}
 80129c8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80129cc:	f7ff bb20 	b.w	8012010 <nema_enable_aa_flags>
 80129d0:	2300      	movs	r3, #0
 80129d2:	461a      	mov	r2, r3
 80129d4:	4619      	mov	r1, r3
 80129d6:	4618      	mov	r0, r3
 80129d8:	f7ff faf8 	bl	8011fcc <nema_enable_aa>
 80129dc:	4607      	mov	r7, r0
 80129de:	e7c1      	b.n	8012964 <raster_stroked_line_+0xbc>
 80129e0:	2009      	movs	r0, #9
 80129e2:	ed94 ea00 	vldr	s28, [r4]
 80129e6:	edd4 da04 	vldr	s27, [r4, #16]
 80129ea:	f8d4 b004 	ldr.w	fp, [r4, #4]
 80129ee:	f8d4 a014 	ldr.w	sl, [r4, #20]
 80129f2:	f8d4 9008 	ldr.w	r9, [r4, #8]
 80129f6:	f8d4 8018 	ldr.w	r8, [r4, #24]
 80129fa:	68e6      	ldr	r6, [r4, #12]
 80129fc:	69e5      	ldr	r5, [r4, #28]
 80129fe:	f00b f959 	bl	801dcb4 <nema_cl_get_space>
 8012a02:	b380      	cbz	r0, 8012a66 <raster_stroked_line_+0x1be>
 8012a04:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8012a08:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8012a0c:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8012a10:	ed80 ea01 	vstr	s28, [r0, #4]
 8012a14:	edc0 da03 	vstr	s27, [r0, #12]
 8012a18:	f44f 714d 	mov.w	r1, #820	@ 0x334
 8012a1c:	f44f 7250 	mov.w	r2, #832	@ 0x340
 8012a20:	f8c0 9024 	str.w	r9, [r0, #36]	@ 0x24
 8012a24:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 8012a28:	f44f 7951 	mov.w	r9, #836	@ 0x344
 8012a2c:	f44f 7854 	mov.w	r8, #848	@ 0x350
 8012a30:	6346      	str	r6, [r0, #52]	@ 0x34
 8012a32:	f44f 7655 	mov.w	r6, #852	@ 0x354
 8012a36:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8012a38:	4d6a      	ldr	r5, [pc, #424]	@ (8012be4 <raster_stroked_line_+0x33c>)
 8012a3a:	6003      	str	r3, [r0, #0]
 8012a3c:	f8c0 c008 	str.w	ip, [r0, #8]
 8012a40:	f8c0 e010 	str.w	lr, [r0, #16]
 8012a44:	692b      	ldr	r3, [r5, #16]
 8012a46:	4d68      	ldr	r5, [pc, #416]	@ (8012be8 <raster_stroked_line_+0x340>)
 8012a48:	f043 0305 	orr.w	r3, r3, #5
 8012a4c:	f8c0 b014 	str.w	fp, [r0, #20]
 8012a50:	f8c0 a01c 	str.w	sl, [r0, #28]
 8012a54:	6443      	str	r3, [r0, #68]	@ 0x44
 8012a56:	6181      	str	r1, [r0, #24]
 8012a58:	6202      	str	r2, [r0, #32]
 8012a5a:	f8c0 9028 	str.w	r9, [r0, #40]	@ 0x28
 8012a5e:	f8c0 8030 	str.w	r8, [r0, #48]	@ 0x30
 8012a62:	6386      	str	r6, [r0, #56]	@ 0x38
 8012a64:	6405      	str	r5, [r0, #64]	@ 0x40
 8012a66:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 8012a6a:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8012a6e:	ee68 7aa7 	vmul.f32	s15, s17, s15
 8012a72:	ee29 7a07 	vmul.f32	s14, s18, s14
 8012a76:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8012a7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012a7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a82:	ed9f 7a5a 	vldr	s14, [pc, #360]	@ 8012bec <raster_stroked_line_+0x344>
 8012a86:	bf48      	it	mi
 8012a88:	eef1 7a67 	vnegmi.f32	s15, s15
 8012a8c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012a90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a94:	edd4 da01 	vldr	s27, [r4, #4]
 8012a98:	edd4 ea05 	vldr	s29, [r4, #20]
 8012a9c:	ed94 ea02 	vldr	s28, [r4, #8]
 8012aa0:	ed94 fa06 	vldr	s30, [r4, #24]
 8012aa4:	f200 80ee 	bhi.w	8012c84 <raster_stroked_line_+0x3dc>
 8012aa8:	eef0 9a4f 	vmov.f32	s19, s30
 8012aac:	eeb0 ca6e 	vmov.f32	s24, s29
 8012ab0:	eeb0 8a4e 	vmov.f32	s16, s28
 8012ab4:	eef0 ba6d 	vmov.f32	s23, s27
 8012ab8:	e75c      	b.n	8012974 <raster_stroked_line_+0xcc>
 8012aba:	edd5 7a09 	vldr	s15, [r5, #36]	@ 0x24
 8012abe:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8012ac2:	ee68 7aa7 	vmul.f32	s15, s17, s15
 8012ac6:	ee29 7a07 	vmul.f32	s14, s18, s14
 8012aca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8012ace:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012ad2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ad6:	ed9f 7a45 	vldr	s14, [pc, #276]	@ 8012bec <raster_stroked_line_+0x344>
 8012ada:	bf48      	it	mi
 8012adc:	eef1 7a67 	vnegmi.f32	s15, s15
 8012ae0:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012ae4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ae8:	edd5 da01 	vldr	s27, [r5, #4]
 8012aec:	edd5 ea05 	vldr	s29, [r5, #20]
 8012af0:	ed95 ea02 	vldr	s28, [r5, #8]
 8012af4:	ed95 fa06 	vldr	s30, [r5, #24]
 8012af8:	f240 80bb 	bls.w	8012c72 <raster_stroked_line_+0x3ca>
 8012afc:	2009      	movs	r0, #9
 8012afe:	f00b f8d9 	bl	801dcb4 <nema_cl_get_space>
 8012b02:	2800      	cmp	r0, #0
 8012b04:	f000 80f7 	beq.w	8012cf6 <raster_stroked_line_+0x44e>
 8012b08:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012b0c:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8012b10:	f44f 7949 	mov.w	r9, #804	@ 0x324
 8012b14:	edc0 da01 	vstr	s27, [r0, #4]
 8012b18:	edc0 ea03 	vstr	s29, [r0, #12]
 8012b1c:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8012b20:	f44f 784d 	mov.w	r8, #820	@ 0x334
 8012b24:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8012b28:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 8012b2c:	f44f 7155 	mov.w	r1, #852	@ 0x354
 8012b30:	edc0 ba05 	vstr	s23, [r0, #20]
 8012b34:	ed80 ca07 	vstr	s24, [r0, #28]
 8012b38:	ed80 ea09 	vstr	s28, [r0, #36]	@ 0x24
 8012b3c:	ed80 fa0b 	vstr	s30, [r0, #44]	@ 0x2c
 8012b40:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012b44:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012b48:	edd5 7a08 	vldr	s15, [r5, #32]
 8012b4c:	6103      	str	r3, [r0, #16]
 8012b4e:	4b25      	ldr	r3, [pc, #148]	@ (8012be4 <raster_stroked_line_+0x33c>)
 8012b50:	f8c0 a000 	str.w	sl, [r0]
 8012b54:	f8c0 9008 	str.w	r9, [r0, #8]
 8012b58:	691b      	ldr	r3, [r3, #16]
 8012b5a:	6302      	str	r2, [r0, #48]	@ 0x30
 8012b5c:	f043 0305 	orr.w	r3, r3, #5
 8012b60:	4a21      	ldr	r2, [pc, #132]	@ (8012be8 <raster_stroked_line_+0x340>)
 8012b62:	6443      	str	r3, [r0, #68]	@ 0x44
 8012b64:	6833      	ldr	r3, [r6, #0]
 8012b66:	f8c0 8018 	str.w	r8, [r0, #24]
 8012b6a:	f8c0 e020 	str.w	lr, [r0, #32]
 8012b6e:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8012b72:	6381      	str	r1, [r0, #56]	@ 0x38
 8012b74:	6402      	str	r2, [r0, #64]	@ 0x40
 8012b76:	eef5 7a40 	vcmp.f32	s15, #0.0
 8012b7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b7e:	f103 0301 	add.w	r3, r3, #1
 8012b82:	6033      	str	r3, [r6, #0]
 8012b84:	f47f af06 	bne.w	8012994 <raster_stroked_line_+0xec>
 8012b88:	4638      	mov	r0, r7
 8012b8a:	edc5 ba00 	vstr	s23, [r5]
 8012b8e:	ed85 ca04 	vstr	s24, [r5, #16]
 8012b92:	edc5 ca01 	vstr	s25, [r5, #4]
 8012b96:	ed85 da05 	vstr	s26, [r5, #20]
 8012b9a:	edc5 aa02 	vstr	s21, [r5, #8]
 8012b9e:	ed85 aa06 	vstr	s20, [r5, #24]
 8012ba2:	ed85 8a03 	vstr	s16, [r5, #12]
 8012ba6:	edc5 9a07 	vstr	s19, [r5, #28]
 8012baa:	ed85 ba08 	vstr	s22, [r5, #32]
 8012bae:	ed85 9a09 	vstr	s18, [r5, #36]	@ 0x24
 8012bb2:	edc5 8a0a 	vstr	s17, [r5, #40]	@ 0x28
 8012bb6:	b005      	add	sp, #20
 8012bb8:	ecbd 8b10 	vpop	{d8-d15}
 8012bbc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012bc0:	f7ff ba26 	b.w	8012010 <nema_enable_aa_flags>
 8012bc4:	3727c5ac 	.word	0x3727c5ac
 8012bc8:	20000138 	.word	0x20000138
 8012bcc:	2000013c 	.word	0x2000013c
 8012bd0:	20082f70 	.word	0x20082f70
 8012bd4:	20082f68 	.word	0x20082f68
 8012bd8:	20082fb8 	.word	0x20082fb8
 8012bdc:	20082f80 	.word	0x20082f80
 8012be0:	20082fe4 	.word	0x20082fe4
 8012be4:	20000064 	.word	0x20000064
 8012be8:	ff000100 	.word	0xff000100
 8012bec:	3d4ccccd 	.word	0x3d4ccccd
 8012bf0:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 8012bf2:	f7ff fa0d 	bl	8012010 <nema_enable_aa_flags>
 8012bf6:	4604      	mov	r4, r0
 8012bf8:	2009      	movs	r0, #9
 8012bfa:	f00b f85b 	bl	801dcb4 <nema_cl_get_space>
 8012bfe:	b380      	cbz	r0, 8012c62 <raster_stroked_line_+0x3ba>
 8012c00:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012c04:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8012c08:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8012c0c:	edc0 ba01 	vstr	s23, [r0, #4]
 8012c10:	ed80 ca03 	vstr	s24, [r0, #12]
 8012c14:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8012c18:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8012c1c:	f44f 7551 	mov.w	r5, #836	@ 0x344
 8012c20:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8012c24:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8012c28:	edc0 ca05 	vstr	s25, [r0, #20]
 8012c2c:	ed80 da07 	vstr	s26, [r0, #28]
 8012c30:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 8012c34:	ed80 aa0b 	vstr	s20, [r0, #44]	@ 0x2c
 8012c38:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012c3c:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012c40:	6103      	str	r3, [r0, #16]
 8012c42:	4b37      	ldr	r3, [pc, #220]	@ (8012d20 <raster_stroked_line_+0x478>)
 8012c44:	f8c0 e000 	str.w	lr, [r0]
 8012c48:	f8c0 c008 	str.w	ip, [r0, #8]
 8012c4c:	691b      	ldr	r3, [r3, #16]
 8012c4e:	6187      	str	r7, [r0, #24]
 8012c50:	f043 0305 	orr.w	r3, r3, #5
 8012c54:	6443      	str	r3, [r0, #68]	@ 0x44
 8012c56:	4b33      	ldr	r3, [pc, #204]	@ (8012d24 <raster_stroked_line_+0x47c>)
 8012c58:	6206      	str	r6, [r0, #32]
 8012c5a:	6285      	str	r5, [r0, #40]	@ 0x28
 8012c5c:	6301      	str	r1, [r0, #48]	@ 0x30
 8012c5e:	6382      	str	r2, [r0, #56]	@ 0x38
 8012c60:	6403      	str	r3, [r0, #64]	@ 0x40
 8012c62:	4620      	mov	r0, r4
 8012c64:	b005      	add	sp, #20
 8012c66:	ecbd 8b10 	vpop	{d8-d15}
 8012c6a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c6e:	f7ff b9cf 	b.w	8012010 <nema_enable_aa_flags>
 8012c72:	eef0 9a4f 	vmov.f32	s19, s30
 8012c76:	eeb0 ca6e 	vmov.f32	s24, s29
 8012c7a:	eeb0 8a4e 	vmov.f32	s16, s28
 8012c7e:	eef0 ba6d 	vmov.f32	s23, s27
 8012c82:	e685      	b.n	8012990 <raster_stroked_line_+0xe8>
 8012c84:	2009      	movs	r0, #9
 8012c86:	f00b f815 	bl	801dcb4 <nema_cl_get_space>
 8012c8a:	2800      	cmp	r0, #0
 8012c8c:	f43f ae72 	beq.w	8012974 <raster_stroked_line_+0xcc>
 8012c90:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012c94:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8012c98:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8012c9c:	edc0 da01 	vstr	s27, [r0, #4]
 8012ca0:	edc0 ea03 	vstr	s29, [r0, #12]
 8012ca4:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8012ca8:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8012cac:	f44f 7551 	mov.w	r5, #836	@ 0x344
 8012cb0:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8012cb4:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8012cb8:	6103      	str	r3, [r0, #16]
 8012cba:	4b19      	ldr	r3, [pc, #100]	@ (8012d20 <raster_stroked_line_+0x478>)
 8012cbc:	f8c0 8000 	str.w	r8, [r0]
 8012cc0:	f8c0 e008 	str.w	lr, [r0, #8]
 8012cc4:	691b      	ldr	r3, [r3, #16]
 8012cc6:	edc0 ba05 	vstr	s23, [r0, #20]
 8012cca:	f043 0305 	orr.w	r3, r3, #5
 8012cce:	6443      	str	r3, [r0, #68]	@ 0x44
 8012cd0:	4b14      	ldr	r3, [pc, #80]	@ (8012d24 <raster_stroked_line_+0x47c>)
 8012cd2:	ed80 ca07 	vstr	s24, [r0, #28]
 8012cd6:	ed80 ea09 	vstr	s28, [r0, #36]	@ 0x24
 8012cda:	ed80 fa0b 	vstr	s30, [r0, #44]	@ 0x2c
 8012cde:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012ce2:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012ce6:	f8c0 c018 	str.w	ip, [r0, #24]
 8012cea:	6206      	str	r6, [r0, #32]
 8012cec:	6285      	str	r5, [r0, #40]	@ 0x28
 8012cee:	6301      	str	r1, [r0, #48]	@ 0x30
 8012cf0:	6382      	str	r2, [r0, #56]	@ 0x38
 8012cf2:	6403      	str	r3, [r0, #64]	@ 0x40
 8012cf4:	e63e      	b.n	8012974 <raster_stroked_line_+0xcc>
 8012cf6:	6833      	ldr	r3, [r6, #0]
 8012cf8:	edd5 7a08 	vldr	s15, [r5, #32]
 8012cfc:	e73b      	b.n	8012b76 <raster_stroked_line_+0x2ce>
 8012cfe:	eeb0 0a67 	vmov.f32	s0, s15
 8012d02:	edcd 1a03 	vstr	s3, [sp, #12]
 8012d06:	ed8d 1a02 	vstr	s2, [sp, #8]
 8012d0a:	edcd 0a01 	vstr	s1, [sp, #4]
 8012d0e:	f01e fa57 	bl	80311c0 <sqrtf>
 8012d12:	eddd 1a03 	vldr	s3, [sp, #12]
 8012d16:	ed9d 1a02 	vldr	s2, [sp, #8]
 8012d1a:	eddd 0a01 	vldr	s1, [sp, #4]
 8012d1e:	e5e8      	b.n	80128f2 <raster_stroked_line_+0x4a>
 8012d20:	20000064 	.word	0x20000064
 8012d24:	ff000100 	.word	0xff000100

08012d28 <render_arc.isra.6>:
 8012d28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012d2c:	ed2d 8b10 	vpush	{d8-d15}
 8012d30:	eddf 8aa8 	vldr	s17, [pc, #672]	@ 8012fd4 <render_arc.isra.6+0x2ac>
 8012d34:	ee20 aa28 	vmul.f32	s20, s0, s17
 8012d38:	ee60 8aa8 	vmul.f32	s17, s1, s17
 8012d3c:	eeb5 0a00 	vmov.f32	s0, #80	@ 0x3e800000  0.250
 8012d40:	ee78 8aca 	vsub.f32	s17, s17, s20
 8012d44:	ee28 0a80 	vmul.f32	s0, s17, s0
 8012d48:	4604      	mov	r4, r0
 8012d4a:	460d      	mov	r5, r1
 8012d4c:	eef0 ca41 	vmov.f32	s25, s2
 8012d50:	eeb0 da61 	vmov.f32	s26, s3
 8012d54:	eef0 da42 	vmov.f32	s27, s4
 8012d58:	eeb0 ea62 	vmov.f32	s28, s5
 8012d5c:	ed9f 8a9e 	vldr	s16, [pc, #632]	@ 8012fd8 <render_arc.isra.6+0x2b0>
 8012d60:	f01e fbb2 	bl	80314c8 <tanf>
 8012d64:	ee20 8a08 	vmul.f32	s16, s0, s16
 8012d68:	eeb0 0a68 	vmov.f32	s0, s17
 8012d6c:	f01e fb1a 	bl	80313a4 <cosf>
 8012d70:	eef0 9a40 	vmov.f32	s19, s0
 8012d74:	eeb0 0a68 	vmov.f32	s0, s17
 8012d78:	f01e fb60 	bl	803143c <sinf>
 8012d7c:	eddf 7a97 	vldr	s15, [pc, #604]	@ 8012fdc <render_arc.isra.6+0x2b4>
 8012d80:	ed94 7a09 	vldr	s14, [r4, #36]	@ 0x24
 8012d84:	ee87 9a27 	vdiv.f32	s18, s14, s15
 8012d88:	ed9f 7a95 	vldr	s14, [pc, #596]	@ 8012fe0 <render_arc.isra.6+0x2b8>
 8012d8c:	eeb0 ca40 	vmov.f32	s24, s0
 8012d90:	ee68 8a00 	vmul.f32	s17, s16, s0
 8012d94:	eeb0 0a4a 	vmov.f32	s0, s20
 8012d98:	ee29 9a07 	vmul.f32	s18, s18, s14
 8012d9c:	f01e fb02 	bl	80313a4 <cosf>
 8012da0:	eeb0 ba40 	vmov.f32	s22, s0
 8012da4:	eeb0 0a4a 	vmov.f32	s0, s20
 8012da8:	f01e fb48 	bl	803143c <sinf>
 8012dac:	eef0 aa40 	vmov.f32	s21, s0
 8012db0:	eeb0 0a49 	vmov.f32	s0, s18
 8012db4:	f01e faf6 	bl	80313a4 <cosf>
 8012db8:	ee68 ea29 	vmul.f32	s29, s16, s19
 8012dbc:	eeb0 aa40 	vmov.f32	s20, s0
 8012dc0:	eeb0 0a49 	vmov.f32	s0, s18
 8012dc4:	f01e fb3a 	bl	803143c <sinf>
 8012dc8:	07ea      	lsls	r2, r5, #31
 8012dca:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8012dce:	ee7c ea6e 	vsub.f32	s29, s24, s29
 8012dd2:	f140 80c1 	bpl.w	8012f58 <render_arc.isra.6+0x230>
 8012dd6:	edd4 ba03 	vldr	s23, [r4, #12]
 8012dda:	ed94 9a04 	vldr	s18, [r4, #16]
 8012dde:	ee28 7a8b 	vmul.f32	s14, s17, s22
 8012de2:	ee68 6a2a 	vmul.f32	s13, s16, s21
 8012de6:	ee68 7aaa 	vmul.f32	s15, s17, s21
 8012dea:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8012dee:	ee6e 8aaa 	vmul.f32	s17, s29, s21
 8012df2:	ee6e ea8b 	vmul.f32	s29, s29, s22
 8012df6:	eddf 2a7b 	vldr	s5, [pc, #492]	@ 8012fe4 <render_arc.isra.6+0x2bc>
 8012dfa:	ee7b 6a66 	vsub.f32	s13, s22, s13
 8012dfe:	ee77 8a68 	vsub.f32	s17, s14, s17
 8012e02:	ee77 7aae 	vadd.f32	s15, s15, s29
 8012e06:	ee38 8a2a 	vadd.f32	s16, s16, s21
 8012e0a:	ee36 7aa2 	vadd.f32	s14, s13, s5
 8012e0e:	ee38 8a22 	vadd.f32	s16, s16, s5
 8012e12:	ee78 8aa2 	vadd.f32	s17, s17, s5
 8012e16:	ee77 7aa2 	vadd.f32	s15, s15, s5
 8012e1a:	ee27 7a2d 	vmul.f32	s14, s14, s27
 8012e1e:	ee28 8a0e 	vmul.f32	s16, s16, s28
 8012e22:	ee68 8aad 	vmul.f32	s17, s17, s27
 8012e26:	ee67 7a8e 	vmul.f32	s15, s15, s28
 8012e2a:	ee2a fa07 	vmul.f32	s30, s20, s14
 8012e2e:	ee20 6a08 	vmul.f32	s12, s0, s16
 8012e32:	ee6a ea28 	vmul.f32	s29, s20, s17
 8012e36:	ee60 6a27 	vmul.f32	s13, s0, s15
 8012e3a:	ee60 8a28 	vmul.f32	s17, s0, s17
 8012e3e:	ee20 7a07 	vmul.f32	s14, s0, s14
 8012e42:	ee2a 8a08 	vmul.f32	s16, s20, s16
 8012e46:	ee6a 7a27 	vmul.f32	s15, s20, s15
 8012e4a:	ee3f fa46 	vsub.f32	s30, s30, s12
 8012e4e:	ee37 8a08 	vadd.f32	s16, s14, s16
 8012e52:	ee7e eae6 	vsub.f32	s29, s29, s13
 8012e56:	ee78 7aa7 	vadd.f32	s15, s17, s15
 8012e5a:	07ab      	lsls	r3, r5, #30
 8012e5c:	ee3f fa2c 	vadd.f32	s30, s30, s25
 8012e60:	ee38 8a0d 	vadd.f32	s16, s16, s26
 8012e64:	ee7e eaac 	vadd.f32	s29, s29, s25
 8012e68:	ee77 8a8d 	vadd.f32	s17, s15, s26
 8012e6c:	f100 809a 	bmi.w	8012fa4 <render_arc.isra.6+0x27c>
 8012e70:	ee29 2a8b 	vmul.f32	s4, s19, s22
 8012e74:	ee69 9aaa 	vmul.f32	s19, s19, s21
 8012e78:	ee2c ba0b 	vmul.f32	s22, s24, s22
 8012e7c:	ee6c aa2a 	vmul.f32	s21, s24, s21
 8012e80:	ee39 ba8b 	vadd.f32	s22, s19, s22
 8012e84:	ee72 aa6a 	vsub.f32	s21, s4, s21
 8012e88:	ee7a aaa2 	vadd.f32	s21, s21, s5
 8012e8c:	ee7b 2a22 	vadd.f32	s5, s22, s5
 8012e90:	ee6a daad 	vmul.f32	s27, s21, s27
 8012e94:	ee22 ea8e 	vmul.f32	s28, s5, s28
 8012e98:	ee2a 1a2d 	vmul.f32	s2, s20, s27
 8012e9c:	ee60 da2d 	vmul.f32	s27, s0, s27
 8012ea0:	ee20 0a0e 	vmul.f32	s0, s0, s28
 8012ea4:	ee2a ea0e 	vmul.f32	s28, s20, s28
 8012ea8:	ee31 0a40 	vsub.f32	s0, s2, s0
 8012eac:	ee3d ea8e 	vadd.f32	s28, s27, s28
 8012eb0:	4b4d      	ldr	r3, [pc, #308]	@ (8012fe8 <render_arc.isra.6+0x2c0>)
 8012eb2:	ee70 ca2c 	vadd.f32	s25, s0, s25
 8012eb6:	681b      	ldr	r3, [r3, #0]
 8012eb8:	ee3e da0d 	vadd.f32	s26, s28, s26
 8012ebc:	7f1a      	ldrb	r2, [r3, #28]
 8012ebe:	2a00      	cmp	r2, #0
 8012ec0:	d179      	bne.n	8012fb6 <render_arc.isra.6+0x28e>
 8012ec2:	4a4a      	ldr	r2, [pc, #296]	@ (8012fec <render_arc.isra.6+0x2c4>)
 8012ec4:	6814      	ldr	r4, [r2, #0]
 8012ec6:	2c01      	cmp	r4, #1
 8012ec8:	f000 8098 	beq.w	8012ffc <render_arc.isra.6+0x2d4>
 8012ecc:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8012ece:	2509      	movs	r5, #9
 8012ed0:	2a00      	cmp	r2, #0
 8012ed2:	d164      	bne.n	8012f9e <render_arc.isra.6+0x276>
 8012ed4:	4946      	ldr	r1, [pc, #280]	@ (8012ff0 <render_arc.isra.6+0x2c8>)
 8012ed6:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8012ed8:	780b      	ldrb	r3, [r1, #0]
 8012eda:	4014      	ands	r4, r2
 8012edc:	2b01      	cmp	r3, #1
 8012ede:	d103      	bne.n	8012ee8 <render_arc.isra.6+0x1c0>
 8012ee0:	684b      	ldr	r3, [r1, #4]
 8012ee2:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8012ee6:	431c      	orrs	r4, r3
 8012ee8:	2009      	movs	r0, #9
 8012eea:	f00a fee3 	bl	801dcb4 <nema_cl_get_space>
 8012eee:	b378      	cbz	r0, 8012f50 <render_arc.isra.6+0x228>
 8012ef0:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8012ef4:	f44f 7948 	mov.w	r9, #800	@ 0x320
 8012ef8:	f44f 7849 	mov.w	r8, #804	@ 0x324
 8012efc:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8012f00:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012f04:	f44f 7751 	mov.w	r7, #836	@ 0x344
 8012f08:	f44f 7654 	mov.w	r6, #848	@ 0x350
 8012f0c:	f44f 7155 	mov.w	r1, #852	@ 0x354
 8012f10:	edc0 ba01 	vstr	s23, [r0, #4]
 8012f14:	ed80 9a03 	vstr	s18, [r0, #12]
 8012f18:	ed80 fa05 	vstr	s30, [r0, #20]
 8012f1c:	ed80 8a07 	vstr	s16, [r0, #28]
 8012f20:	edc0 ea09 	vstr	s29, [r0, #36]	@ 0x24
 8012f24:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8012f28:	edc0 ca0d 	vstr	s25, [r0, #52]	@ 0x34
 8012f2c:	ed80 da0f 	vstr	s26, [r0, #60]	@ 0x3c
 8012f30:	6183      	str	r3, [r0, #24]
 8012f32:	4b30      	ldr	r3, [pc, #192]	@ (8012ff4 <render_arc.isra.6+0x2cc>)
 8012f34:	432c      	orrs	r4, r5
 8012f36:	6444      	str	r4, [r0, #68]	@ 0x44
 8012f38:	f8c0 9000 	str.w	r9, [r0]
 8012f3c:	f8c0 8008 	str.w	r8, [r0, #8]
 8012f40:	f8c0 e010 	str.w	lr, [r0, #16]
 8012f44:	f8c0 c020 	str.w	ip, [r0, #32]
 8012f48:	6287      	str	r7, [r0, #40]	@ 0x28
 8012f4a:	6306      	str	r6, [r0, #48]	@ 0x30
 8012f4c:	6381      	str	r1, [r0, #56]	@ 0x38
 8012f4e:	6403      	str	r3, [r0, #64]	@ 0x40
 8012f50:	ecbd 8b10 	vpop	{d8-d15}
 8012f54:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012f58:	ed9f 9a22 	vldr	s18, [pc, #136]	@ 8012fe4 <render_arc.isra.6+0x2bc>
 8012f5c:	ee2a 7a89 	vmul.f32	s14, s21, s18
 8012f60:	ee6b 7a09 	vmul.f32	s15, s22, s18
 8012f64:	ee3b 7a47 	vsub.f32	s14, s22, s14
 8012f68:	ee77 7aaa 	vadd.f32	s15, s15, s21
 8012f6c:	ee37 7a09 	vadd.f32	s14, s14, s18
 8012f70:	ee77 7a89 	vadd.f32	s15, s15, s18
 8012f74:	ee27 7a2d 	vmul.f32	s14, s14, s27
 8012f78:	ee67 7a8e 	vmul.f32	s15, s15, s28
 8012f7c:	ee6a ba07 	vmul.f32	s23, s20, s14
 8012f80:	ee20 9a07 	vmul.f32	s18, s0, s14
 8012f84:	ee20 7a27 	vmul.f32	s14, s0, s15
 8012f88:	ee6a 7a27 	vmul.f32	s15, s20, s15
 8012f8c:	ee7b bac7 	vsub.f32	s23, s23, s14
 8012f90:	ee39 9a27 	vadd.f32	s18, s18, s15
 8012f94:	ee7b baac 	vadd.f32	s23, s23, s25
 8012f98:	ee39 9a0d 	vadd.f32	s18, s18, s26
 8012f9c:	e71f      	b.n	8012dde <render_arc.isra.6+0xb6>
 8012f9e:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8012fa2:	e797      	b.n	8012ed4 <render_arc.isra.6+0x1ac>
 8012fa4:	4b10      	ldr	r3, [pc, #64]	@ (8012fe8 <render_arc.isra.6+0x2c0>)
 8012fa6:	edd4 ca05 	vldr	s25, [r4, #20]
 8012faa:	681b      	ldr	r3, [r3, #0]
 8012fac:	ed94 da06 	vldr	s26, [r4, #24]
 8012fb0:	7f1a      	ldrb	r2, [r3, #28]
 8012fb2:	2a00      	cmp	r2, #0
 8012fb4:	d085      	beq.n	8012ec2 <render_arc.isra.6+0x19a>
 8012fb6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8012fb8:	b90a      	cbnz	r2, 8012fbe <render_arc.isra.6+0x296>
 8012fba:	2507      	movs	r5, #7
 8012fbc:	e78a      	b.n	8012ed4 <render_arc.isra.6+0x1ac>
 8012fbe:	4a0e      	ldr	r2, [pc, #56]	@ (8012ff8 <render_arc.isra.6+0x2d0>)
 8012fc0:	2507      	movs	r5, #7
 8012fc2:	6812      	ldr	r2, [r2, #0]
 8012fc4:	2a00      	cmp	r2, #0
 8012fc6:	bf0c      	ite	eq
 8012fc8:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8012fcc:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8012fd0:	e780      	b.n	8012ed4 <render_arc.isra.6+0x1ac>
 8012fd2:	bf00      	nop
 8012fd4:	3c8efa35 	.word	0x3c8efa35
 8012fd8:	3faaaaab 	.word	0x3faaaaab
 8012fdc:	43340000 	.word	0x43340000
 8012fe0:	40490fdb 	.word	0x40490fdb
 8012fe4:	00000000 	.word	0x00000000
 8012fe8:	20082f68 	.word	0x20082f68
 8012fec:	20082f70 	.word	0x20082f70
 8012ff0:	20000064 	.word	0x20000064
 8012ff4:	ff000100 	.word	0xff000100
 8012ff8:	20082f6c 	.word	0x20082f6c
 8012ffc:	4626      	mov	r6, r4
 8012ffe:	eef6 9a00 	vmov.f32	s19, #96	@ 0x3f000000  0.5
 8013002:	4d57      	ldr	r5, [pc, #348]	@ (8013160 <render_arc.isra.6+0x438>)
 8013004:	4f57      	ldr	r7, [pc, #348]	@ (8013164 <render_arc.isra.6+0x43c>)
 8013006:	ee7b 4a8f 	vadd.f32	s9, s23, s30
 801300a:	ee7f 7a2e 	vadd.f32	s15, s30, s29
 801300e:	ee3e 5aac 	vadd.f32	s10, s29, s25
 8013012:	ee67 7aa9 	vmul.f32	s15, s15, s19
 8013016:	ee64 4aa9 	vmul.f32	s9, s9, s19
 801301a:	ee25 5a29 	vmul.f32	s10, s10, s19
 801301e:	ee74 3aa7 	vadd.f32	s7, s9, s15
 8013022:	ee37 6a85 	vadd.f32	s12, s15, s10
 8013026:	ee39 4a08 	vadd.f32	s8, s18, s16
 801302a:	ee78 7a28 	vadd.f32	s15, s16, s17
 801302e:	ee78 5a8d 	vadd.f32	s11, s17, s26
 8013032:	ee67 7aa9 	vmul.f32	s15, s15, s19
 8013036:	ee24 4a29 	vmul.f32	s8, s8, s19
 801303a:	ee65 5aa9 	vmul.f32	s11, s11, s19
 801303e:	ee34 3a27 	vadd.f32	s6, s8, s15
 8013042:	ee63 3aa9 	vmul.f32	s7, s7, s19
 8013046:	ee26 6a29 	vmul.f32	s12, s12, s19
 801304a:	ee77 7aa5 	vadd.f32	s15, s15, s11
 801304e:	ee33 aa86 	vadd.f32	s20, s7, s12
 8013052:	ee3b 7aac 	vadd.f32	s14, s23, s25
 8013056:	ee23 3a29 	vmul.f32	s6, s6, s19
 801305a:	ee67 7aa9 	vmul.f32	s15, s15, s19
 801305e:	ee2a aa29 	vmul.f32	s20, s20, s19
 8013062:	ee27 7a29 	vmul.f32	s14, s14, s19
 8013066:	ee73 aa27 	vadd.f32	s21, s6, s15
 801306a:	ee79 6a0d 	vadd.f32	s13, s18, s26
 801306e:	ee37 7a4a 	vsub.f32	s14, s14, s20
 8013072:	ee6a aaa9 	vmul.f32	s21, s21, s19
 8013076:	ee66 6aa9 	vmul.f32	s13, s13, s19
 801307a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801307e:	ee76 6aea 	vsub.f32	s13, s13, s21
 8013082:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013086:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801308a:	bf48      	it	mi
 801308c:	eeb1 7a47 	vnegmi.f32	s14, s14
 8013090:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013094:	bf48      	it	mi
 8013096:	eef1 6a66 	vnegmi.f32	s13, s13
 801309a:	b94e      	cbnz	r6, 80130b0 <render_arc.isra.6+0x388>
 801309c:	eeb4 7ae9 	vcmpe.f32	s14, s19
 80130a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80130a4:	d504      	bpl.n	80130b0 <render_arc.isra.6+0x388>
 80130a6:	eef4 6ae9 	vcmpe.f32	s13, s19
 80130aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80130ae:	d423      	bmi.n	80130f8 <render_arc.isra.6+0x3d0>
 80130b0:	682a      	ldr	r2, [r5, #0]
 80130b2:	2a09      	cmp	r2, #9
 80130b4:	dc20      	bgt.n	80130f8 <render_arc.isra.6+0x3d0>
 80130b6:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80130ba:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
 80130be:	3201      	adds	r2, #1
 80130c0:	edc3 ca04 	vstr	s25, [r3, #16]
 80130c4:	ed83 da05 	vstr	s26, [r3, #20]
 80130c8:	3401      	adds	r4, #1
 80130ca:	eef0 8a43 	vmov.f32	s17, s6
 80130ce:	eef0 ea63 	vmov.f32	s29, s7
 80130d2:	eeb0 8a44 	vmov.f32	s16, s8
 80130d6:	eeb0 fa64 	vmov.f32	s30, s9
 80130da:	ed83 6a00 	vstr	s12, [r3]
 80130de:	edc3 7a01 	vstr	s15, [r3, #4]
 80130e2:	ed83 5a02 	vstr	s10, [r3, #8]
 80130e6:	edc3 5a03 	vstr	s11, [r3, #12]
 80130ea:	602a      	str	r2, [r5, #0]
 80130ec:	eeb0 da6a 	vmov.f32	s26, s21
 80130f0:	eef0 ca4a 	vmov.f32	s25, s20
 80130f4:	2600      	movs	r6, #0
 80130f6:	e786      	b.n	8013006 <render_arc.isra.6+0x2de>
 80130f8:	eef0 1a6a 	vmov.f32	s3, s21
 80130fc:	eeb0 1a4a 	vmov.f32	s2, s20
 8013100:	eef0 0a49 	vmov.f32	s1, s18
 8013104:	eeb0 0a6b 	vmov.f32	s0, s23
 8013108:	f7ff fbce 	bl	80128a8 <raster_stroked_line_>
 801310c:	eef0 1a4d 	vmov.f32	s3, s26
 8013110:	eeb0 1a6c 	vmov.f32	s2, s25
 8013114:	eef0 0a6a 	vmov.f32	s1, s21
 8013118:	eeb0 0a4a 	vmov.f32	s0, s20
 801311c:	f7ff fbc4 	bl	80128a8 <raster_stroked_line_>
 8013120:	682b      	ldr	r3, [r5, #0]
 8013122:	3c01      	subs	r4, #1
 8013124:	b1ab      	cbz	r3, 8013152 <render_arc.isra.6+0x42a>
 8013126:	3b01      	subs	r3, #1
 8013128:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801312c:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 8013130:	eeb0 9a4d 	vmov.f32	s18, s26
 8013134:	eef0 ba6c 	vmov.f32	s23, s25
 8013138:	ed92 fa00 	vldr	s30, [r2]
 801313c:	ed92 8a01 	vldr	s16, [r2, #4]
 8013140:	edd2 ea02 	vldr	s29, [r2, #8]
 8013144:	edd2 8a03 	vldr	s17, [r2, #12]
 8013148:	ed92 da05 	vldr	s26, [r2, #20]
 801314c:	edd2 ca04 	vldr	s25, [r2, #16]
 8013150:	602b      	str	r3, [r5, #0]
 8013152:	2c00      	cmp	r4, #0
 8013154:	f47f af57 	bne.w	8013006 <render_arc.isra.6+0x2de>
 8013158:	ecbd 8b10 	vpop	{d8-d15}
 801315c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013160:	20083104 	.word	0x20083104
 8013164:	20083014 	.word	0x20083014

08013168 <fill_arc.isra.7>:
 8013168:	b570      	push	{r4, r5, r6, lr}
 801316a:	ed2d 8b10 	vpush	{d8-d15}
 801316e:	ed90 8a07 	vldr	s16, [r0, #28]
 8013172:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8013176:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801317a:	b082      	sub	sp, #8
 801317c:	4604      	mov	r4, r0
 801317e:	d42a      	bmi.n	80131d6 <fill_arc.isra.7+0x6e>
 8013180:	eddf 7adf 	vldr	s15, [pc, #892]	@ 8013500 <fill_arc.isra.7+0x398>
 8013184:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8013188:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801318c:	d92a      	bls.n	80131e4 <fill_arc.isra.7+0x7c>
 801318e:	edd4 9a08 	vldr	s19, [r4, #32]
 8013192:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 8013196:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801319a:	d47a      	bmi.n	8013292 <fill_arc.isra.7+0x12a>
 801319c:	eddf 7ad8 	vldr	s15, [pc, #864]	@ 8013500 <fill_arc.isra.7+0x398>
 80131a0:	eef4 9ae7 	vcmpe.f32	s19, s15
 80131a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131a8:	d91c      	bls.n	80131e4 <fill_arc.isra.7+0x7c>
 80131aa:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80131ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131b2:	edd4 aa09 	vldr	s21, [r4, #36]	@ 0x24
 80131b6:	edd4 ba0d 	vldr	s23, [r4, #52]	@ 0x34
 80131ba:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 80131be:	edd4 8a0b 	vldr	s17, [r4, #44]	@ 0x2c
 80131c2:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 80131c6:	f100 81b5 	bmi.w	8013534 <fill_arc.isra.7+0x3cc>
 80131ca:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 80131ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131d2:	d577      	bpl.n	80132c4 <fill_arc.isra.7+0x15c>
 80131d4:	e074      	b.n	80132c0 <fill_arc.isra.7+0x158>
 80131d6:	eddf 7acb 	vldr	s15, [pc, #812]	@ 8013504 <fill_arc.isra.7+0x39c>
 80131da:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80131de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131e2:	dbd4      	blt.n	801318e <fill_arc.isra.7+0x26>
 80131e4:	4bc8      	ldr	r3, [pc, #800]	@ (8013508 <fill_arc.isra.7+0x3a0>)
 80131e6:	edd4 9a03 	vldr	s19, [r4, #12]
 80131ea:	681a      	ldr	r2, [r3, #0]
 80131ec:	ed94 9a04 	vldr	s18, [r4, #16]
 80131f0:	7f15      	ldrb	r5, [r2, #28]
 80131f2:	edd4 8a05 	vldr	s17, [r4, #20]
 80131f6:	ed94 8a06 	vldr	s16, [r4, #24]
 80131fa:	2d00      	cmp	r5, #0
 80131fc:	d035      	beq.n	801326a <fill_arc.isra.7+0x102>
 80131fe:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8013200:	b13b      	cbz	r3, 8013212 <fill_arc.isra.7+0xaa>
 8013202:	4bc2      	ldr	r3, [pc, #776]	@ (801350c <fill_arc.isra.7+0x3a4>)
 8013204:	681b      	ldr	r3, [r3, #0]
 8013206:	2b00      	cmp	r3, #0
 8013208:	bf14      	ite	ne
 801320a:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
 801320e:	f04f 63f0 	moveq.w	r3, #125829120	@ 0x7800000
 8013212:	49bf      	ldr	r1, [pc, #764]	@ (8013510 <fill_arc.isra.7+0x3a8>)
 8013214:	6ad4      	ldr	r4, [r2, #44]	@ 0x2c
 8013216:	780a      	ldrb	r2, [r1, #0]
 8013218:	401c      	ands	r4, r3
 801321a:	2a01      	cmp	r2, #1
 801321c:	d103      	bne.n	8013226 <fill_arc.isra.7+0xbe>
 801321e:	684b      	ldr	r3, [r1, #4]
 8013220:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013224:	431c      	orrs	r4, r3
 8013226:	2005      	movs	r0, #5
 8013228:	f00a fd44 	bl	801dcb4 <nema_cl_get_space>
 801322c:	b1c0      	cbz	r0, 8013260 <fill_arc.isra.7+0xf8>
 801322e:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8013232:	f44f 7549 	mov.w	r5, #804	@ 0x324
 8013236:	f44f 714c 	mov.w	r1, #816	@ 0x330
 801323a:	f44f 724d 	mov.w	r2, #820	@ 0x334
 801323e:	f044 040b 	orr.w	r4, r4, #11
 8013242:	edc0 9a01 	vstr	s19, [r0, #4]
 8013246:	ed80 9a03 	vstr	s18, [r0, #12]
 801324a:	edc0 8a05 	vstr	s17, [r0, #20]
 801324e:	ed80 8a07 	vstr	s16, [r0, #28]
 8013252:	4bb0      	ldr	r3, [pc, #704]	@ (8013514 <fill_arc.isra.7+0x3ac>)
 8013254:	6244      	str	r4, [r0, #36]	@ 0x24
 8013256:	6006      	str	r6, [r0, #0]
 8013258:	6085      	str	r5, [r0, #8]
 801325a:	6101      	str	r1, [r0, #16]
 801325c:	6182      	str	r2, [r0, #24]
 801325e:	6203      	str	r3, [r0, #32]
 8013260:	2000      	movs	r0, #0
 8013262:	b002      	add	sp, #8
 8013264:	ecbd 8b10 	vpop	{d8-d15}
 8013268:	bd70      	pop	{r4, r5, r6, pc}
 801326a:	4bab      	ldr	r3, [pc, #684]	@ (8013518 <fill_arc.isra.7+0x3b0>)
 801326c:	681b      	ldr	r3, [r3, #0]
 801326e:	2b00      	cmp	r3, #0
 8013270:	f000 8115 	beq.w	801349e <fill_arc.isra.7+0x336>
 8013274:	eef0 1a48 	vmov.f32	s3, s16
 8013278:	eeb0 1a68 	vmov.f32	s2, s17
 801327c:	eef0 0a49 	vmov.f32	s1, s18
 8013280:	eeb0 0a69 	vmov.f32	s0, s19
 8013284:	f7ff fb10 	bl	80128a8 <raster_stroked_line_>
 8013288:	4628      	mov	r0, r5
 801328a:	b002      	add	sp, #8
 801328c:	ecbd 8b10 	vpop	{d8-d15}
 8013290:	bd70      	pop	{r4, r5, r6, pc}
 8013292:	eddf 7a9c 	vldr	s15, [pc, #624]	@ 8013504 <fill_arc.isra.7+0x39c>
 8013296:	eef4 9ae7 	vcmpe.f32	s19, s15
 801329a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801329e:	daa1      	bge.n	80131e4 <fill_arc.isra.7+0x7c>
 80132a0:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80132a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80132a8:	edd4 aa09 	vldr	s21, [r4, #36]	@ 0x24
 80132ac:	edd4 ba0d 	vldr	s23, [r4, #52]	@ 0x34
 80132b0:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 80132b4:	edd4 8a0b 	vldr	s17, [r4, #44]	@ 0x2c
 80132b8:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 80132bc:	f100 813a 	bmi.w	8013534 <fill_arc.isra.7+0x3cc>
 80132c0:	eef1 9a69 	vneg.f32	s19, s19
 80132c4:	eddf 7a95 	vldr	s15, [pc, #596]	@ 801351c <fill_arc.isra.7+0x3b4>
 80132c8:	ee6a aaa7 	vmul.f32	s21, s21, s15
 80132cc:	eeb0 0a6a 	vmov.f32	s0, s21
 80132d0:	f01e f868 	bl	80313a4 <cosf>
 80132d4:	eeb0 ca40 	vmov.f32	s24, s0
 80132d8:	eeb0 0a6a 	vmov.f32	s0, s21
 80132dc:	f01e f8ae 	bl	803143c <sinf>
 80132e0:	ee6c aa28 	vmul.f32	s21, s24, s17
 80132e4:	ee20 7a0a 	vmul.f32	s14, s0, s20
 80132e8:	ee60 7a09 	vmul.f32	s15, s0, s18
 80132ec:	ee6c 6a2b 	vmul.f32	s13, s24, s23
 80132f0:	ee68 8ac0 	vnmul.f32	s17, s17, s0
 80132f4:	ee6b bac0 	vnmul.f32	s23, s23, s0
 80132f8:	ee2c aa0a 	vmul.f32	s20, s24, s20
 80132fc:	ee2c 9a09 	vmul.f32	s18, s24, s18
 8013300:	ee76 fa87 	vadd.f32	s31, s13, s14
 8013304:	ee3b aa8a 	vadd.f32	s20, s23, s20
 8013308:	ee7a aaa7 	vadd.f32	s21, s21, s15
 801330c:	ee78 8a89 	vadd.f32	s17, s17, s18
 8013310:	ee8f da88 	vdiv.f32	s26, s31, s16
 8013314:	ee8a ea88 	vdiv.f32	s28, s21, s16
 8013318:	eeca ca29 	vdiv.f32	s25, s20, s19
 801331c:	eec8 daa9 	vdiv.f32	s27, s17, s19
 8013320:	ee7d ba4e 	vsub.f32	s23, s26, s28
 8013324:	ee7c eaed 	vsub.f32	s29, s25, s27
 8013328:	eeb0 ba40 	vmov.f32	s22, s0
 801332c:	ee6b 7aab 	vmul.f32	s15, s23, s23
 8013330:	ee2e 0aae 	vmul.f32	s0, s29, s29
 8013334:	ee77 7a80 	vadd.f32	s15, s15, s0
 8013338:	eef5 7a40 	vcmp.f32	s15, #0.0
 801333c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8013340:	ee3d 6a0e 	vadd.f32	s12, s26, s28
 8013344:	ee7c 6aad 	vadd.f32	s13, s25, s27
 8013348:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801334c:	ee26 fa07 	vmul.f32	s30, s12, s14
 8013350:	ee26 7a87 	vmul.f32	s14, s13, s14
 8013354:	f000 8117 	beq.w	8013586 <fill_arc.isra.7+0x41e>
 8013358:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801335c:	eef5 5a00 	vmov.f32	s11, #80	@ 0x3e800000  0.250
 8013360:	ee86 0aa7 	vdiv.f32	s0, s13, s15
 8013364:	ee30 0a65 	vsub.f32	s0, s0, s11
 8013368:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801336c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013370:	78e5      	ldrb	r5, [r4, #3]
 8013372:	f100 814f 	bmi.w	8013614 <fill_arc.isra.7+0x4ac>
 8013376:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801337a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801337e:	eef1 8ac0 	vsqrt.f32	s17, s0
 8013382:	f100 8174 	bmi.w	801366e <fill_arc.isra.7+0x506>
 8013386:	ee68 baab 	vmul.f32	s23, s17, s23
 801338a:	ee68 eaae 	vmul.f32	s29, s17, s29
 801338e:	ee77 aa6b 	vsub.f32	s21, s14, s23
 8013392:	ee3f aa2e 	vadd.f32	s20, s30, s29
 8013396:	ee3c 0aea 	vsub.f32	s0, s25, s21
 801339a:	ee7d 0a4a 	vsub.f32	s1, s26, s20
 801339e:	ed8d 7a01 	vstr	s14, [sp, #4]
 80133a2:	f01d feeb 	bl	803117c <atan2f>
 80133a6:	ee7e 0a4a 	vsub.f32	s1, s28, s20
 80133aa:	eeb0 9a40 	vmov.f32	s18, s0
 80133ae:	ee3d 0aea 	vsub.f32	s0, s27, s21
 80133b2:	f01d fee3 	bl	803117c <atan2f>
 80133b6:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8013528 <fill_arc.isra.7+0x3c0>
 80133ba:	ee60 8a27 	vmul.f32	s17, s0, s15
 80133be:	ee29 9a27 	vmul.f32	s18, s18, s15
 80133c2:	ee78 7ac9 	vsub.f32	s15, s17, s18
 80133c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80133ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133ce:	bf48      	it	mi
 80133d0:	eddf 6a53 	vldrmi	s13, [pc, #332]	@ 8013520 <fill_arc.isra.7+0x3b8>
 80133d4:	eddf 5a53 	vldr	s11, [pc, #332]	@ 8013524 <fill_arc.isra.7+0x3bc>
 80133d8:	bf48      	it	mi
 80133da:	ee77 7aa6 	vaddmi.f32	s15, s15, s13
 80133de:	eef4 7ae5 	vcmpe.f32	s15, s11
 80133e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133e6:	f005 0640 	and.w	r6, r5, #64	@ 0x40
 80133ea:	f3c5 1380 	ubfx	r3, r5, #6, #1
 80133ee:	ed9d 7a01 	vldr	s14, [sp, #4]
 80133f2:	f3c5 1540 	ubfx	r5, r5, #5, #1
 80133f6:	f140 80ab 	bpl.w	8013550 <fill_arc.isra.7+0x3e8>
 80133fa:	429d      	cmp	r5, r3
 80133fc:	f000 8130 	beq.w	8013660 <fill_arc.isra.7+0x4f8>
 8013400:	ee28 aa0a 	vmul.f32	s20, s16, s20
 8013404:	ee69 aaaa 	vmul.f32	s21, s19, s21
 8013408:	ee6c 7a0a 	vmul.f32	s15, s24, s20
 801340c:	ee2b aa0a 	vmul.f32	s20, s22, s20
 8013410:	ee2b ba2a 	vmul.f32	s22, s22, s21
 8013414:	ee6c aa2a 	vmul.f32	s21, s24, s21
 8013418:	ee37 bacb 	vsub.f32	s22, s15, s22
 801341c:	ee7a aa2a 	vadd.f32	s21, s20, s21
 8013420:	eeb4 9ae8 	vcmpe.f32	s18, s17
 8013424:	2e00      	cmp	r6, #0
 8013426:	f000 8088 	beq.w	801353a <fill_arc.isra.7+0x3d2>
 801342a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801342e:	dd03      	ble.n	8013438 <fill_arc.isra.7+0x2d0>
 8013430:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 8013520 <fill_arc.isra.7+0x3b8>
 8013434:	ee78 8aa7 	vadd.f32	s17, s17, s15
 8013438:	2e00      	cmp	r6, #0
 801343a:	f040 80ab 	bne.w	8013594 <fill_arc.isra.7+0x42c>
 801343e:	eef4 8ac9 	vcmpe.f32	s17, s18
 8013442:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013446:	f77f af0b 	ble.w	8013260 <fill_arc.isra.7+0xf8>
 801344a:	2101      	movs	r1, #1
 801344c:	eddf ba37 	vldr	s23, [pc, #220]	@ 801352c <fill_arc.isra.7+0x3c4>
 8013450:	e01a      	b.n	8013488 <fill_arc.isra.7+0x320>
 8013452:	eef0 0a49 	vmov.f32	s1, s18
 8013456:	d801      	bhi.n	801345c <fill_arc.isra.7+0x2f4>
 8013458:	3102      	adds	r1, #2
 801345a:	b2c9      	uxtb	r1, r1
 801345c:	eeb0 0a68 	vmov.f32	s0, s17
 8013460:	eef0 2a69 	vmov.f32	s5, s19
 8013464:	eeb0 2a48 	vmov.f32	s4, s16
 8013468:	eef0 1a6a 	vmov.f32	s3, s21
 801346c:	eeb0 1a4b 	vmov.f32	s2, s22
 8013470:	4620      	mov	r0, r4
 8013472:	f7ff fc59 	bl	8012d28 <render_arc.isra.6>
 8013476:	eeb4 aac9 	vcmpe.f32	s20, s18
 801347a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801347e:	f77f aeef 	ble.w	8013260 <fill_arc.isra.7+0xf8>
 8013482:	eef0 8a4a 	vmov.f32	s17, s20
 8013486:	2100      	movs	r1, #0
 8013488:	ee38 aaeb 	vsub.f32	s20, s17, s23
 801348c:	eeb4 aac9 	vcmpe.f32	s20, s18
 8013490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013494:	dddd      	ble.n	8013452 <fill_arc.isra.7+0x2ea>
 8013496:	d822      	bhi.n	80134de <fill_arc.isra.7+0x376>
 8013498:	eef0 0a4a 	vmov.f32	s1, s20
 801349c:	e7dc      	b.n	8013458 <fill_arc.isra.7+0x2f0>
 801349e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 80134a0:	491b      	ldr	r1, [pc, #108]	@ (8013510 <fill_arc.isra.7+0x3a8>)
 80134a2:	2b00      	cmp	r3, #0
 80134a4:	bf18      	it	ne
 80134a6:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 80134aa:	6ad4      	ldr	r4, [r2, #44]	@ 0x2c
 80134ac:	780a      	ldrb	r2, [r1, #0]
 80134ae:	401c      	ands	r4, r3
 80134b0:	2a01      	cmp	r2, #1
 80134b2:	d103      	bne.n	80134bc <fill_arc.isra.7+0x354>
 80134b4:	684b      	ldr	r3, [r1, #4]
 80134b6:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80134ba:	431c      	orrs	r4, r3
 80134bc:	2005      	movs	r0, #5
 80134be:	f00a fbf9 	bl	801dcb4 <nema_cl_get_space>
 80134c2:	2800      	cmp	r0, #0
 80134c4:	f43f aecc 	beq.w	8013260 <fill_arc.isra.7+0xf8>
 80134c8:	f44f 7648 	mov.w	r6, #800	@ 0x320
 80134cc:	f44f 7549 	mov.w	r5, #804	@ 0x324
 80134d0:	f44f 714c 	mov.w	r1, #816	@ 0x330
 80134d4:	f44f 724d 	mov.w	r2, #820	@ 0x334
 80134d8:	f044 040a 	orr.w	r4, r4, #10
 80134dc:	e6b1      	b.n	8013242 <fill_arc.isra.7+0xda>
 80134de:	eeb0 0a68 	vmov.f32	s0, s17
 80134e2:	eef0 2a69 	vmov.f32	s5, s19
 80134e6:	eeb0 2a48 	vmov.f32	s4, s16
 80134ea:	eef0 1a6a 	vmov.f32	s3, s21
 80134ee:	eeb0 1a4b 	vmov.f32	s2, s22
 80134f2:	eef0 0a4a 	vmov.f32	s1, s20
 80134f6:	4620      	mov	r0, r4
 80134f8:	f7ff fc16 	bl	8012d28 <render_arc.isra.6>
 80134fc:	e7c1      	b.n	8013482 <fill_arc.isra.7+0x31a>
 80134fe:	bf00      	nop
 8013500:	3727c5ac 	.word	0x3727c5ac
 8013504:	b727c5ac 	.word	0xb727c5ac
 8013508:	20082f68 	.word	0x20082f68
 801350c:	20082f6c 	.word	0x20082f6c
 8013510:	20000064 	.word	0x20000064
 8013514:	ff000100 	.word	0xff000100
 8013518:	20082f70 	.word	0x20082f70
 801351c:	3c8efa35 	.word	0x3c8efa35
 8013520:	43b40000 	.word	0x43b40000
 8013524:	43340000 	.word	0x43340000
 8013528:	42652ee1 	.word	0x42652ee1
 801352c:	42b40000 	.word	0x42b40000
 8013530:	00000000 	.word	0x00000000
 8013534:	eeb1 8a48 	vneg.f32	s16, s16
 8013538:	e647      	b.n	80131ca <fill_arc.isra.7+0x62>
 801353a:	eef0 7a49 	vmov.f32	s15, s18
 801353e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013542:	eeb0 9a68 	vmov.f32	s18, s17
 8013546:	eef0 8a67 	vmov.f32	s17, s15
 801354a:	f53f af71 	bmi.w	8013430 <fill_arc.isra.7+0x2c8>
 801354e:	e776      	b.n	801343e <fill_arc.isra.7+0x2d6>
 8013550:	db02      	blt.n	8013558 <fill_arc.isra.7+0x3f0>
 8013552:	429d      	cmp	r5, r3
 8013554:	f43f af54 	beq.w	8013400 <fill_arc.isra.7+0x298>
 8013558:	ee77 aa2b 	vadd.f32	s21, s14, s23
 801355c:	ee3f aa6e 	vsub.f32	s20, s30, s29
 8013560:	ee3c 0aea 	vsub.f32	s0, s25, s21
 8013564:	ee7d 0a4a 	vsub.f32	s1, s26, s20
 8013568:	f01d fe08 	bl	803117c <atan2f>
 801356c:	ed5f 8a12 	vldr	s17, [pc, #-72]	@ 8013528 <fill_arc.isra.7+0x3c0>
 8013570:	ee7e 0a4a 	vsub.f32	s1, s28, s20
 8013574:	ee20 9a28 	vmul.f32	s18, s0, s17
 8013578:	ee3d 0aea 	vsub.f32	s0, s27, s21
 801357c:	f01d fdfe 	bl	803117c <atan2f>
 8013580:	ee60 8a28 	vmul.f32	s17, s0, s17
 8013584:	e73c      	b.n	8013400 <fill_arc.isra.7+0x298>
 8013586:	f44f 7080 	mov.w	r0, #256	@ 0x100
 801358a:	f009 fa3b 	bl	801ca04 <nema_vg_set_error>
 801358e:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8013592:	e666      	b.n	8013262 <fill_arc.isra.7+0xfa>
 8013594:	eeb4 9ae8 	vcmpe.f32	s18, s17
 8013598:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801359c:	f57f ae60 	bpl.w	8013260 <fill_arc.isra.7+0xf8>
 80135a0:	2101      	movs	r1, #1
 80135a2:	ed5f ba1e 	vldr	s23, [pc, #-120]	@ 801352c <fill_arc.isra.7+0x3c4>
 80135a6:	e01a      	b.n	80135de <fill_arc.isra.7+0x476>
 80135a8:	eef0 0a68 	vmov.f32	s1, s17
 80135ac:	db01      	blt.n	80135b2 <fill_arc.isra.7+0x44a>
 80135ae:	3102      	adds	r1, #2
 80135b0:	b2c9      	uxtb	r1, r1
 80135b2:	eeb0 0a49 	vmov.f32	s0, s18
 80135b6:	eef0 2a69 	vmov.f32	s5, s19
 80135ba:	eeb0 2a48 	vmov.f32	s4, s16
 80135be:	eef0 1a6a 	vmov.f32	s3, s21
 80135c2:	eeb0 1a4b 	vmov.f32	s2, s22
 80135c6:	4620      	mov	r0, r4
 80135c8:	f7ff fbae 	bl	8012d28 <render_arc.isra.6>
 80135cc:	eeb4 aae8 	vcmpe.f32	s20, s17
 80135d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80135d4:	f57f ae44 	bpl.w	8013260 <fill_arc.isra.7+0xf8>
 80135d8:	eeb0 9a4a 	vmov.f32	s18, s20
 80135dc:	2100      	movs	r1, #0
 80135de:	ee39 aa2b 	vadd.f32	s20, s18, s23
 80135e2:	eeb4 aae8 	vcmpe.f32	s20, s17
 80135e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80135ea:	d5dd      	bpl.n	80135a8 <fill_arc.isra.7+0x440>
 80135ec:	db02      	blt.n	80135f4 <fill_arc.isra.7+0x48c>
 80135ee:	eef0 0a4a 	vmov.f32	s1, s20
 80135f2:	e7dc      	b.n	80135ae <fill_arc.isra.7+0x446>
 80135f4:	eeb0 0a49 	vmov.f32	s0, s18
 80135f8:	eef0 2a69 	vmov.f32	s5, s19
 80135fc:	eeb0 2a48 	vmov.f32	s4, s16
 8013600:	eef0 1a6a 	vmov.f32	s3, s21
 8013604:	eeb0 1a4b 	vmov.f32	s2, s22
 8013608:	eef0 0a4a 	vmov.f32	s1, s20
 801360c:	4620      	mov	r0, r4
 801360e:	f7ff fb8b 	bl	8012d28 <render_arc.isra.6>
 8013612:	e7e1      	b.n	80135d8 <fill_arc.isra.7+0x470>
 8013614:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8013618:	eef5 7a40 	vcmp.f32	s15, #0.0
 801361c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013620:	eeb1 9ae7 	vsqrt.f32	s18, s15
 8013624:	d42a      	bmi.n	801367c <fill_arc.isra.7+0x514>
 8013626:	ee28 8a09 	vmul.f32	s16, s16, s18
 801362a:	ee69 9a89 	vmul.f32	s19, s19, s18
 801362e:	ee8f da88 	vdiv.f32	s26, s31, s16
 8013632:	eec8 daa9 	vdiv.f32	s27, s17, s19
 8013636:	ee8a ea88 	vdiv.f32	s28, s21, s16
 801363a:	eeca ca29 	vdiv.f32	s25, s20, s19
 801363e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8013642:	ee3d 6a0e 	vadd.f32	s12, s26, s28
 8013646:	ee3c 7aad 	vadd.f32	s14, s25, s27
 801364a:	ee26 fa27 	vmul.f32	s30, s12, s15
 801364e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8013652:	ee7d ba4e 	vsub.f32	s23, s26, s28
 8013656:	ee7c eaed 	vsub.f32	s29, s25, s27
 801365a:	ed5f 8a4b 	vldr	s17, [pc, #-300]	@ 8013530 <fill_arc.isra.7+0x3c8>
 801365e:	e692      	b.n	8013386 <fill_arc.isra.7+0x21e>
 8013660:	eef4 7ae5 	vcmpe.f32	s15, s11
 8013664:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013668:	f6bf aeca 	bge.w	8013400 <fill_arc.isra.7+0x298>
 801366c:	e774      	b.n	8013558 <fill_arc.isra.7+0x3f0>
 801366e:	ed8d 7a01 	vstr	s14, [sp, #4]
 8013672:	f01d fda5 	bl	80311c0 <sqrtf>
 8013676:	ed9d 7a01 	vldr	s14, [sp, #4]
 801367a:	e684      	b.n	8013386 <fill_arc.isra.7+0x21e>
 801367c:	eeb0 0a67 	vmov.f32	s0, s15
 8013680:	f01d fd9e 	bl	80311c0 <sqrtf>
 8013684:	e7cf      	b.n	8013626 <fill_arc.isra.7+0x4be>
 8013686:	bf00      	nop

08013688 <stroke_thin_path>:
 8013688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801368c:	ed2d 8b0c 	vpush	{d8-d13}
 8013690:	4682      	mov	sl, r0
 8013692:	b097      	sub	sp, #92	@ 0x5c
 8013694:	2248      	movs	r2, #72	@ 0x48
 8013696:	a804      	add	r0, sp, #16
 8013698:	2100      	movs	r1, #0
 801369a:	2400      	movs	r4, #0
 801369c:	f01f f8fb 	bl	8032896 <memset>
 80136a0:	2201      	movs	r2, #1
 80136a2:	f8da 3000 	ldr.w	r3, [sl]
 80136a6:	f88d 2010 	strb.w	r2, [sp, #16]
 80136aa:	42a3      	cmp	r3, r4
 80136ac:	f88d 2012 	strb.w	r2, [sp, #18]
 80136b0:	f8df b344 	ldr.w	fp, [pc, #836]	@ 80139f8 <stroke_thin_path+0x370>
 80136b4:	ed9f 8aca 	vldr	s16, [pc, #808]	@ 80139e0 <stroke_thin_path+0x358>
 80136b8:	f240 8092 	bls.w	80137e0 <stroke_thin_path+0x158>
 80136bc:	f8da 2008 	ldr.w	r2, [sl, #8]
 80136c0:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 80136c4:	5d15      	ldrb	r5, [r2, r4]
 80136c6:	af07      	add	r7, sp, #28
 80136c8:	f005 066f 	and.w	r6, r5, #111	@ 0x6f
 80136cc:	f005 0210 	and.w	r2, r5, #16
 80136d0:	2e01      	cmp	r6, #1
 80136d2:	e898 0003 	ldmia.w	r8, {r0, r1}
 80136d6:	f104 0901 	add.w	r9, r4, #1
 80136da:	9200      	str	r2, [sp, #0]
 80136dc:	e887 0003 	stmia.w	r7, {r0, r1}
 80136e0:	f000 809d 	beq.w	801381e <stroke_thin_path+0x196>
 80136e4:	066a      	lsls	r2, r5, #25
 80136e6:	f000 8082 	beq.w	80137ee <stroke_thin_path+0x166>
 80136ea:	9905      	ldr	r1, [sp, #20]
 80136ec:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 80136f0:	b911      	cbnz	r1, 80136f8 <stroke_thin_path+0x70>
 80136f2:	2301      	movs	r3, #1
 80136f4:	f88d 3010 	strb.w	r3, [sp, #16]
 80136f8:	2200      	movs	r2, #0
 80136fa:	f8da 300c 	ldr.w	r3, [sl, #12]
 80136fe:	0088      	lsls	r0, r1, #2
 8013700:	181c      	adds	r4, r3, r0
 8013702:	9001      	str	r0, [sp, #4]
 8013704:	2e06      	cmp	r6, #6
 8013706:	f101 0001 	add.w	r0, r1, #1
 801370a:	f88d 2012 	strb.w	r2, [sp, #18]
 801370e:	46a6      	mov	lr, r4
 8013710:	4602      	mov	r2, r0
 8013712:	f000 81ca 	beq.w	8013aaa <stroke_thin_path+0x422>
 8013716:	2e05      	cmp	r6, #5
 8013718:	f000 8295 	beq.w	8013c46 <stroke_thin_path+0x5be>
 801371c:	2e07      	cmp	r6, #7
 801371e:	f00c 0c6f 	and.w	ip, ip, #111	@ 0x6f
 8013722:	f000 8315 	beq.w	8013d50 <stroke_thin_path+0x6c8>
 8013726:	2e08      	cmp	r6, #8
 8013728:	f000 83be 	beq.w	8013ea8 <stroke_thin_path+0x820>
 801372c:	f005 0c0f 	and.w	ip, r5, #15
 8013730:	f1bc 0f09 	cmp.w	ip, #9
 8013734:	f000 84f7 	beq.w	8014126 <stroke_thin_path+0xa9e>
 8013738:	2e04      	cmp	r6, #4
 801373a:	f040 8205 	bne.w	8013b48 <stroke_thin_path+0x4c0>
 801373e:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013742:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013746:	9b00      	ldr	r3, [sp, #0]
 8013748:	9005      	str	r0, [sp, #20]
 801374a:	edde 7a00 	vldr	s15, [lr]
 801374e:	2b00      	cmp	r3, #0
 8013750:	f000 8266 	beq.w	8013c20 <stroke_thin_path+0x598>
 8013754:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8013758:	ee77 7a27 	vadd.f32	s15, s14, s15
 801375c:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013760:	f8db 3000 	ldr.w	r3, [fp]
 8013764:	7f1b      	ldrb	r3, [r3, #28]
 8013766:	2b00      	cmp	r3, #0
 8013768:	f000 8148 	beq.w	80139fc <stroke_thin_path+0x374>
 801376c:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 8013770:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8013774:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8013778:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801377c:	d109      	bne.n	8013792 <stroke_thin_path+0x10a>
 801377e:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8013782:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8013786:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801378a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801378e:	f000 828e 	beq.w	8013cae <stroke_thin_path+0x626>
 8013792:	2301      	movs	r3, #1
 8013794:	f88d 3011 	strb.w	r3, [sp, #17]
 8013798:	f89d 3012 	ldrb.w	r3, [sp, #18]
 801379c:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80137a0:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 80137a4:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 80137a8:	b9a3      	cbnz	r3, 80137d4 <stroke_thin_path+0x14c>
 80137aa:	062b      	lsls	r3, r5, #24
 80137ac:	d412      	bmi.n	80137d4 <stroke_thin_path+0x14c>
 80137ae:	f005 036d 	and.w	r3, r5, #109	@ 0x6d
 80137b2:	2b05      	cmp	r3, #5
 80137b4:	d072      	beq.n	801389c <stroke_thin_path+0x214>
 80137b6:	2e06      	cmp	r6, #6
 80137b8:	f000 8126 	beq.w	8013a08 <stroke_thin_path+0x380>
 80137bc:	2e08      	cmp	r6, #8
 80137be:	f000 8123 	beq.w	8013a08 <stroke_thin_path+0x380>
 80137c2:	f005 050f 	and.w	r5, r5, #15
 80137c6:	2d09      	cmp	r5, #9
 80137c8:	f000 8440 	beq.w	801404c <stroke_thin_path+0x9c4>
 80137cc:	3e0a      	subs	r6, #10
 80137ce:	2e01      	cmp	r6, #1
 80137d0:	f200 834c 	bhi.w	8013e6c <stroke_thin_path+0x7e4>
 80137d4:	464c      	mov	r4, r9
 80137d6:	f8da 3000 	ldr.w	r3, [sl]
 80137da:	42a3      	cmp	r3, r4
 80137dc:	f63f af6e 	bhi.w	80136bc <stroke_thin_path+0x34>
 80137e0:	2500      	movs	r5, #0
 80137e2:	4628      	mov	r0, r5
 80137e4:	b017      	add	sp, #92	@ 0x5c
 80137e6:	ecbd 8b0c 	vpop	{d8-d13}
 80137ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80137ee:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80137f2:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 80137f6:	2b01      	cmp	r3, #1
 80137f8:	bf04      	itt	eq
 80137fa:	ee18 2a10 	vmoveq	r2, s16
 80137fe:	ee18 1a10 	vmoveq	r1, s16
 8013802:	f04f 0300 	mov.w	r3, #0
 8013806:	bf1c      	itt	ne
 8013808:	9913      	ldrne	r1, [sp, #76]	@ 0x4c
 801380a:	9a14      	ldrne	r2, [sp, #80]	@ 0x50
 801380c:	9109      	str	r1, [sp, #36]	@ 0x24
 801380e:	920a      	str	r2, [sp, #40]	@ 0x28
 8013810:	910f      	str	r1, [sp, #60]	@ 0x3c
 8013812:	9210      	str	r2, [sp, #64]	@ 0x40
 8013814:	f88d 3012 	strb.w	r3, [sp, #18]
 8013818:	f88d 3011 	strb.w	r3, [sp, #17]
 801381c:	e7c5      	b.n	80137aa <stroke_thin_path+0x122>
 801381e:	f89d 1011 	ldrb.w	r1, [sp, #17]
 8013822:	9a05      	ldr	r2, [sp, #20]
 8013824:	2901      	cmp	r1, #1
 8013826:	f000 808d 	beq.w	8013944 <stroke_thin_path+0x2bc>
 801382a:	2401      	movs	r4, #1
 801382c:	2600      	movs	r6, #0
 801382e:	0090      	lsls	r0, r2, #2
 8013830:	f8da 100c 	ldr.w	r1, [sl, #12]
 8013834:	1d07      	adds	r7, r0, #4
 8013836:	440f      	add	r7, r1
 8013838:	f88d 4012 	strb.w	r4, [sp, #18]
 801383c:	4401      	add	r1, r0
 801383e:	1910      	adds	r0, r2, r4
 8013840:	9c00      	ldr	r4, [sp, #0]
 8013842:	9206      	str	r2, [sp, #24]
 8013844:	f88d 6010 	strb.w	r6, [sp, #16]
 8013848:	3202      	adds	r2, #2
 801384a:	9005      	str	r0, [sp, #20]
 801384c:	b1e4      	cbz	r4, 8013888 <stroke_thin_path+0x200>
 801384e:	edd1 7a00 	vldr	s15, [r1]
 8013852:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013856:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801385a:	9205      	str	r2, [sp, #20]
 801385c:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013860:	edd7 7a00 	vldr	s15, [r7]
 8013864:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8013868:	ee77 7a27 	vadd.f32	s15, s14, s15
 801386c:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013870:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 8013874:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 8013878:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 801387c:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8013880:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 8013884:	464c      	mov	r4, r9
 8013886:	e7a8      	b.n	80137da <stroke_thin_path+0x152>
 8013888:	edd1 6a00 	vldr	s13, [r1]
 801388c:	9205      	str	r2, [sp, #20]
 801388e:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013892:	edd7 7a00 	vldr	s15, [r7]
 8013896:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 801389a:	e7e9      	b.n	8013870 <stroke_thin_path+0x1e8>
 801389c:	f8db 3000 	ldr.w	r3, [fp]
 80138a0:	eddd aa0b 	vldr	s21, [sp, #44]	@ 0x2c
 80138a4:	7f1a      	ldrb	r2, [r3, #28]
 80138a6:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 80138aa:	ed9d ca07 	vldr	s24, [sp, #28]
 80138ae:	eddd ba08 	vldr	s23, [sp, #32]
 80138b2:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 80138b6:	ed9d 9a0a 	vldr	s18, [sp, #40]	@ 0x28
 80138ba:	2a00      	cmp	r2, #0
 80138bc:	f040 81df 	bne.w	8013c7e <stroke_thin_path+0x5f6>
 80138c0:	4a48      	ldr	r2, [pc, #288]	@ (80139e4 <stroke_thin_path+0x35c>)
 80138c2:	6816      	ldr	r6, [r2, #0]
 80138c4:	2e01      	cmp	r6, #1
 80138c6:	f000 8319 	beq.w	8013efc <stroke_thin_path+0x874>
 80138ca:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80138cc:	2508      	movs	r5, #8
 80138ce:	b10a      	cbz	r2, 80138d4 <stroke_thin_path+0x24c>
 80138d0:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 80138d4:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 80138d6:	4b44      	ldr	r3, [pc, #272]	@ (80139e8 <stroke_thin_path+0x360>)
 80138d8:	4014      	ands	r4, r2
 80138da:	7819      	ldrb	r1, [r3, #0]
 80138dc:	2901      	cmp	r1, #1
 80138de:	d103      	bne.n	80138e8 <stroke_thin_path+0x260>
 80138e0:	685b      	ldr	r3, [r3, #4]
 80138e2:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80138e6:	431c      	orrs	r4, r3
 80138e8:	2007      	movs	r0, #7
 80138ea:	f00a f9e3 	bl	801dcb4 <nema_cl_get_space>
 80138ee:	2800      	cmp	r0, #0
 80138f0:	f43f af70 	beq.w	80137d4 <stroke_thin_path+0x14c>
 80138f4:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 80138f8:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 80138fc:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8013900:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8013904:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8013908:	f44f 7251 	mov.w	r2, #836	@ 0x344
 801390c:	ed80 ca01 	vstr	s24, [r0, #4]
 8013910:	edc0 ba03 	vstr	s23, [r0, #12]
 8013914:	edc0 aa05 	vstr	s21, [r0, #20]
 8013918:	ed80 aa07 	vstr	s20, [r0, #28]
 801391c:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 8013920:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 8013924:	4b31      	ldr	r3, [pc, #196]	@ (80139ec <stroke_thin_path+0x364>)
 8013926:	432c      	orrs	r4, r5
 8013928:	6344      	str	r4, [r0, #52]	@ 0x34
 801392a:	f8c0 e000 	str.w	lr, [r0]
 801392e:	f8c0 c008 	str.w	ip, [r0, #8]
 8013932:	6107      	str	r7, [r0, #16]
 8013934:	6186      	str	r6, [r0, #24]
 8013936:	6201      	str	r1, [r0, #32]
 8013938:	6282      	str	r2, [r0, #40]	@ 0x28
 801393a:	6303      	str	r3, [r0, #48]	@ 0x30
 801393c:	f8da 3000 	ldr.w	r3, [sl]
 8013940:	464c      	mov	r4, r9
 8013942:	e74a      	b.n	80137da <stroke_thin_path+0x152>
 8013944:	2a00      	cmp	r2, #0
 8013946:	f43f af70 	beq.w	801382a <stroke_thin_path+0x1a2>
 801394a:	f8db 1000 	ldr.w	r1, [fp]
 801394e:	7f09      	ldrb	r1, [r1, #28]
 8013950:	2900      	cmp	r1, #0
 8013952:	f43f af6a 	beq.w	801382a <stroke_thin_path+0x1a2>
 8013956:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801395a:	2b00      	cmp	r3, #0
 801395c:	f040 83c0 	bne.w	80140e0 <stroke_thin_path+0xa58>
 8013960:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
 8013964:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 8013966:	4a22      	ldr	r2, [pc, #136]	@ (80139f0 <stroke_thin_path+0x368>)
 8013968:	4b22      	ldr	r3, [pc, #136]	@ (80139f4 <stroke_thin_path+0x36c>)
 801396a:	2007      	movs	r0, #7
 801396c:	6816      	ldr	r6, [r2, #0]
 801396e:	681c      	ldr	r4, [r3, #0]
 8013970:	f00a f9a0 	bl	801dcb4 <nema_cl_get_space>
 8013974:	2800      	cmp	r0, #0
 8013976:	d02e      	beq.n	80139d6 <stroke_thin_path+0x34e>
 8013978:	4a1b      	ldr	r2, [pc, #108]	@ (80139e8 <stroke_thin_path+0x360>)
 801397a:	f8db 3000 	ldr.w	r3, [fp]
 801397e:	7811      	ldrb	r1, [r2, #0]
 8013980:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8013982:	2901      	cmp	r1, #1
 8013984:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 8013988:	d104      	bne.n	8013994 <stroke_thin_path+0x30c>
 801398a:	4b17      	ldr	r3, [pc, #92]	@ (80139e8 <stroke_thin_path+0x360>)
 801398c:	685b      	ldr	r3, [r3, #4]
 801398e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013992:	431a      	orrs	r2, r3
 8013994:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8013998:	f44f 7149 	mov.w	r1, #804	@ 0x324
 801399c:	6003      	str	r3, [r0, #0]
 801399e:	9b07      	ldr	r3, [sp, #28]
 80139a0:	6081      	str	r1, [r0, #8]
 80139a2:	6043      	str	r3, [r0, #4]
 80139a4:	9b08      	ldr	r3, [sp, #32]
 80139a6:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80139aa:	61c7      	str	r7, [r0, #28]
 80139ac:	60c3      	str	r3, [r0, #12]
 80139ae:	f44f 774d 	mov.w	r7, #820	@ 0x334
 80139b2:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80139b6:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 80139ba:	f042 0204 	orr.w	r2, r2, #4
 80139be:	6342      	str	r2, [r0, #52]	@ 0x34
 80139c0:	4a0a      	ldr	r2, [pc, #40]	@ (80139ec <stroke_thin_path+0x364>)
 80139c2:	f8c0 8014 	str.w	r8, [r0, #20]
 80139c6:	6246      	str	r6, [r0, #36]	@ 0x24
 80139c8:	62c4      	str	r4, [r0, #44]	@ 0x2c
 80139ca:	f8c0 c010 	str.w	ip, [r0, #16]
 80139ce:	6187      	str	r7, [r0, #24]
 80139d0:	6201      	str	r1, [r0, #32]
 80139d2:	6283      	str	r3, [r0, #40]	@ 0x28
 80139d4:	6302      	str	r2, [r0, #48]	@ 0x30
 80139d6:	9a05      	ldr	r2, [sp, #20]
 80139d8:	f8da 3000 	ldr.w	r3, [sl]
 80139dc:	e725      	b.n	801382a <stroke_thin_path+0x1a2>
 80139de:	bf00      	nop
 80139e0:	00000000 	.word	0x00000000
 80139e4:	20082f70 	.word	0x20082f70
 80139e8:	20000064 	.word	0x20000064
 80139ec:	ff000100 	.word	0xff000100
 80139f0:	20082f74 	.word	0x20082f74
 80139f4:	20082f78 	.word	0x20082f78
 80139f8:	20082f68 	.word	0x20082f68
 80139fc:	2201      	movs	r2, #1
 80139fe:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013a02:	f88d 2011 	strb.w	r2, [sp, #17]
 8013a06:	e6c9      	b.n	801379c <stroke_thin_path+0x114>
 8013a08:	f8db 3000 	ldr.w	r3, [fp]
 8013a0c:	7f1a      	ldrb	r2, [r3, #28]
 8013a0e:	2a00      	cmp	r2, #0
 8013a10:	f040 8244 	bne.w	8013e9c <stroke_thin_path+0x814>
 8013a14:	4aa9      	ldr	r2, [pc, #676]	@ (8013cbc <stroke_thin_path+0x634>)
 8013a16:	6814      	ldr	r4, [r2, #0]
 8013a18:	2c01      	cmp	r4, #1
 8013a1a:	f000 83e7 	beq.w	80141ec <stroke_thin_path+0xb64>
 8013a1e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013a20:	2509      	movs	r5, #9
 8013a22:	2a00      	cmp	r2, #0
 8013a24:	f040 8140 	bne.w	8013ca8 <stroke_thin_path+0x620>
 8013a28:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8013a2a:	4ba5      	ldr	r3, [pc, #660]	@ (8013cc0 <stroke_thin_path+0x638>)
 8013a2c:	4014      	ands	r4, r2
 8013a2e:	7819      	ldrb	r1, [r3, #0]
 8013a30:	2901      	cmp	r1, #1
 8013a32:	d103      	bne.n	8013a3c <stroke_thin_path+0x3b4>
 8013a34:	685b      	ldr	r3, [r3, #4]
 8013a36:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013a3a:	431c      	orrs	r4, r3
 8013a3c:	2009      	movs	r0, #9
 8013a3e:	f00a f939 	bl	801dcb4 <nema_cl_get_space>
 8013a42:	2800      	cmp	r0, #0
 8013a44:	f43f aec6 	beq.w	80137d4 <stroke_thin_path+0x14c>
 8013a48:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8013a4c:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8013a50:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8013a54:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8013a58:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8013a5c:	f44f 7351 	mov.w	r3, #836	@ 0x344
 8013a60:	6002      	str	r2, [r0, #0]
 8013a62:	9a07      	ldr	r2, [sp, #28]
 8013a64:	f8c0 c008 	str.w	ip, [r0, #8]
 8013a68:	6042      	str	r2, [r0, #4]
 8013a6a:	9a08      	ldr	r2, [sp, #32]
 8013a6c:	6107      	str	r7, [r0, #16]
 8013a6e:	60c2      	str	r2, [r0, #12]
 8013a70:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013a72:	6186      	str	r6, [r0, #24]
 8013a74:	6142      	str	r2, [r0, #20]
 8013a76:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8013a78:	6201      	str	r1, [r0, #32]
 8013a7a:	61c2      	str	r2, [r0, #28]
 8013a7c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013a7e:	6283      	str	r3, [r0, #40]	@ 0x28
 8013a80:	6242      	str	r2, [r0, #36]	@ 0x24
 8013a82:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013a84:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8013a86:	62c2      	str	r2, [r0, #44]	@ 0x2c
 8013a88:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013a8a:	6341      	str	r1, [r0, #52]	@ 0x34
 8013a8c:	63c2      	str	r2, [r0, #60]	@ 0x3c
 8013a8e:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8013a92:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8013a96:	4b8b      	ldr	r3, [pc, #556]	@ (8013cc4 <stroke_thin_path+0x63c>)
 8013a98:	432c      	orrs	r4, r5
 8013a9a:	6444      	str	r4, [r0, #68]	@ 0x44
 8013a9c:	6301      	str	r1, [r0, #48]	@ 0x30
 8013a9e:	6382      	str	r2, [r0, #56]	@ 0x38
 8013aa0:	6403      	str	r3, [r0, #64]	@ 0x40
 8013aa2:	f8da 3000 	ldr.w	r3, [sl]
 8013aa6:	464c      	mov	r4, r9
 8013aa8:	e697      	b.n	80137da <stroke_thin_path+0x152>
 8013aaa:	9005      	str	r0, [sp, #20]
 8013aac:	ed94 6a00 	vldr	s12, [r4]
 8013ab0:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8013ab4:	1c8a      	adds	r2, r1, #2
 8013ab6:	9205      	str	r2, [sp, #20]
 8013ab8:	edd4 6a01 	vldr	s13, [r4, #4]
 8013abc:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8013ac0:	1cca      	adds	r2, r1, #3
 8013ac2:	9205      	str	r2, [sp, #20]
 8013ac4:	ed94 7a02 	vldr	s14, [r4, #8]
 8013ac8:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013acc:	3104      	adds	r1, #4
 8013ace:	9105      	str	r1, [sp, #20]
 8013ad0:	edd4 7a03 	vldr	s15, [r4, #12]
 8013ad4:	9a00      	ldr	r2, [sp, #0]
 8013ad6:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013ada:	b19a      	cbz	r2, 8013b04 <stroke_thin_path+0x47c>
 8013adc:	ed9d 5a0f 	vldr	s10, [sp, #60]	@ 0x3c
 8013ae0:	eddd 5a10 	vldr	s11, [sp, #64]	@ 0x40
 8013ae4:	ee36 6a05 	vadd.f32	s12, s12, s10
 8013ae8:	ee37 7a05 	vadd.f32	s14, s14, s10
 8013aec:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013af0:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8013af4:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8013af8:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013afc:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8013b00:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013b04:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8013b08:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8013b0c:	008a      	lsls	r2, r1, #2
 8013b0e:	1c48      	adds	r0, r1, #1
 8013b10:	9201      	str	r2, [sp, #4]
 8013b12:	9c01      	ldr	r4, [sp, #4]
 8013b14:	9005      	str	r0, [sp, #20]
 8013b16:	1d22      	adds	r2, r4, #4
 8013b18:	441a      	add	r2, r3
 8013b1a:	4423      	add	r3, r4
 8013b1c:	9c00      	ldr	r4, [sp, #0]
 8013b1e:	3102      	adds	r1, #2
 8013b20:	edd3 6a00 	vldr	s13, [r3]
 8013b24:	2c00      	cmp	r4, #0
 8013b26:	d076      	beq.n	8013c16 <stroke_thin_path+0x58e>
 8013b28:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 8013b2c:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8013b30:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013b34:	9105      	str	r1, [sp, #20]
 8013b36:	ed92 7a00 	vldr	s14, [r2]
 8013b3a:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013b3e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013b42:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013b46:	e60b      	b.n	8013760 <stroke_thin_path+0xd8>
 8013b48:	2e03      	cmp	r6, #3
 8013b4a:	d06c      	beq.n	8013c26 <stroke_thin_path+0x59e>
 8013b4c:	2e0a      	cmp	r6, #10
 8013b4e:	f040 841d 	bne.w	801438c <stroke_thin_path+0xd04>
 8013b52:	9005      	str	r0, [sp, #20]
 8013b54:	edde 7a00 	vldr	s15, [lr]
 8013b58:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013b5c:	ee17 1a90 	vmov	r1, s15
 8013b60:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8013b64:	1049      	asrs	r1, r1, #1
 8013b66:	2900      	cmp	r1, #0
 8013b68:	9101      	str	r1, [sp, #4]
 8013b6a:	f340 8112 	ble.w	8013d92 <stroke_thin_path+0x70a>
 8013b6e:	f8cd 9008 	str.w	r9, [sp, #8]
 8013b72:	2400      	movs	r4, #0
 8013b74:	46a9      	mov	r9, r5
 8013b76:	9603      	str	r6, [sp, #12]
 8013b78:	e039      	b.n	8013bee <stroke_thin_path+0x566>
 8013b7a:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 8013b7e:	ee78 8a81 	vadd.f32	s17, s17, s2
 8013b82:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013b86:	9205      	str	r2, [sp, #20]
 8013b88:	ed91 9a00 	vldr	s18, [r1]
 8013b8c:	eddd 1a10 	vldr	s3, [sp, #64]	@ 0x40
 8013b90:	ee39 9a21 	vadd.f32	s18, s18, s3
 8013b94:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013b98:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 8013b9c:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 8013ba0:	f8db 3000 	ldr.w	r3, [fp]
 8013ba4:	f88d 9054 	strb.w	r9, [sp, #84]	@ 0x54
 8013ba8:	7f1a      	ldrb	r2, [r3, #28]
 8013baa:	2a00      	cmp	r2, #0
 8013bac:	f040 808e 	bne.w	8013ccc <stroke_thin_path+0x644>
 8013bb0:	4a42      	ldr	r2, [pc, #264]	@ (8013cbc <stroke_thin_path+0x634>)
 8013bb2:	eddd 9a07 	vldr	s19, [sp, #28]
 8013bb6:	6812      	ldr	r2, [r2, #0]
 8013bb8:	ed9d aa08 	vldr	s20, [sp, #32]
 8013bbc:	2a00      	cmp	r2, #0
 8013bbe:	f000 82e5 	beq.w	801418c <stroke_thin_path+0xb04>
 8013bc2:	eef0 1a49 	vmov.f32	s3, s18
 8013bc6:	eeb0 1a68 	vmov.f32	s2, s17
 8013bca:	eef0 0a4a 	vmov.f32	s1, s20
 8013bce:	eeb0 0a69 	vmov.f32	s0, s19
 8013bd2:	f7fe fe69 	bl	80128a8 <raster_stroked_line_>
 8013bd6:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013bda:	9b01      	ldr	r3, [sp, #4]
 8013bdc:	3401      	adds	r4, #1
 8013bde:	429c      	cmp	r4, r3
 8013be0:	e887 0003 	stmia.w	r7, {r0, r1}
 8013be4:	f000 80d2 	beq.w	8013d8c <stroke_thin_path+0x704>
 8013be8:	f8da 300c 	ldr.w	r3, [sl, #12]
 8013bec:	9a05      	ldr	r2, [sp, #20]
 8013bee:	0090      	lsls	r0, r2, #2
 8013bf0:	1d01      	adds	r1, r0, #4
 8013bf2:	4419      	add	r1, r3
 8013bf4:	9d00      	ldr	r5, [sp, #0]
 8013bf6:	4403      	add	r3, r0
 8013bf8:	1c50      	adds	r0, r2, #1
 8013bfa:	9005      	str	r0, [sp, #20]
 8013bfc:	3202      	adds	r2, #2
 8013bfe:	edd3 8a00 	vldr	s17, [r3]
 8013c02:	2d00      	cmp	r5, #0
 8013c04:	d1b9      	bne.n	8013b7a <stroke_thin_path+0x4f2>
 8013c06:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013c0a:	9205      	str	r2, [sp, #20]
 8013c0c:	ed91 9a00 	vldr	s18, [r1]
 8013c10:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013c14:	e7c0      	b.n	8013b98 <stroke_thin_path+0x510>
 8013c16:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013c1a:	9105      	str	r1, [sp, #20]
 8013c1c:	edd2 7a00 	vldr	s15, [r2]
 8013c20:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013c24:	e59c      	b.n	8013760 <stroke_thin_path+0xd8>
 8013c26:	9b00      	ldr	r3, [sp, #0]
 8013c28:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013c2c:	9005      	str	r0, [sp, #20]
 8013c2e:	b353      	cbz	r3, 8013c86 <stroke_thin_path+0x5fe>
 8013c30:	ed9e 7a00 	vldr	s14, [lr]
 8013c34:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013c38:	ee76 6a87 	vadd.f32	s13, s13, s14
 8013c3c:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013c40:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013c44:	e58c      	b.n	8013760 <stroke_thin_path+0xd8>
 8013c46:	9005      	str	r0, [sp, #20]
 8013c48:	ed94 7a00 	vldr	s14, [r4]
 8013c4c:	ed8d 7a0b 	vstr	s14, [sp, #44]	@ 0x2c
 8013c50:	3102      	adds	r1, #2
 8013c52:	9105      	str	r1, [sp, #20]
 8013c54:	edd4 7a01 	vldr	s15, [r4, #4]
 8013c58:	9a00      	ldr	r2, [sp, #0]
 8013c5a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013c5e:	2a00      	cmp	r2, #0
 8013c60:	f43f af50 	beq.w	8013b04 <stroke_thin_path+0x47c>
 8013c64:	ed9d 6a0f 	vldr	s12, [sp, #60]	@ 0x3c
 8013c68:	eddd 6a10 	vldr	s13, [sp, #64]	@ 0x40
 8013c6c:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013c70:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013c74:	ed8d 7a0b 	vstr	s14, [sp, #44]	@ 0x2c
 8013c78:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013c7c:	e742      	b.n	8013b04 <stroke_thin_path+0x47c>
 8013c7e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013c80:	b942      	cbnz	r2, 8013c94 <stroke_thin_path+0x60c>
 8013c82:	2506      	movs	r5, #6
 8013c84:	e626      	b.n	80138d4 <stroke_thin_path+0x24c>
 8013c86:	edde 6a00 	vldr	s13, [lr]
 8013c8a:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013c8e:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013c92:	e565      	b.n	8013760 <stroke_thin_path+0xd8>
 8013c94:	4a0c      	ldr	r2, [pc, #48]	@ (8013cc8 <stroke_thin_path+0x640>)
 8013c96:	2506      	movs	r5, #6
 8013c98:	6812      	ldr	r2, [r2, #0]
 8013c9a:	2a00      	cmp	r2, #0
 8013c9c:	bf14      	ite	ne
 8013c9e:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8013ca2:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8013ca6:	e615      	b.n	80138d4 <stroke_thin_path+0x24c>
 8013ca8:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8013cac:	e6bc      	b.n	8013a28 <stroke_thin_path+0x3a0>
 8013cae:	2300      	movs	r3, #0
 8013cb0:	f88d 3011 	strb.w	r3, [sp, #17]
 8013cb4:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013cb8:	e570      	b.n	801379c <stroke_thin_path+0x114>
 8013cba:	bf00      	nop
 8013cbc:	20082f70 	.word	0x20082f70
 8013cc0:	20000064 	.word	0x20000064
 8013cc4:	ff000100 	.word	0xff000100
 8013cc8:	20082f6c 	.word	0x20082f6c
 8013ccc:	4aba      	ldr	r2, [pc, #744]	@ (8013fb8 <stroke_thin_path+0x930>)
 8013cce:	4bbb      	ldr	r3, [pc, #748]	@ (8013fbc <stroke_thin_path+0x934>)
 8013cd0:	2007      	movs	r0, #7
 8013cd2:	6816      	ldr	r6, [r2, #0]
 8013cd4:	681d      	ldr	r5, [r3, #0]
 8013cd6:	f009 ffed 	bl	801dcb4 <nema_cl_get_space>
 8013cda:	2800      	cmp	r0, #0
 8013cdc:	f43f af7b 	beq.w	8013bd6 <stroke_thin_path+0x54e>
 8013ce0:	4ab7      	ldr	r2, [pc, #732]	@ (8013fc0 <stroke_thin_path+0x938>)
 8013ce2:	f8db 3000 	ldr.w	r3, [fp]
 8013ce6:	7812      	ldrb	r2, [r2, #0]
 8013ce8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013cea:	2a01      	cmp	r2, #1
 8013cec:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8013cf0:	d104      	bne.n	8013cfc <stroke_thin_path+0x674>
 8013cf2:	4ab3      	ldr	r2, [pc, #716]	@ (8013fc0 <stroke_thin_path+0x938>)
 8013cf4:	6852      	ldr	r2, [r2, #4]
 8013cf6:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8013cfa:	4313      	orrs	r3, r2
 8013cfc:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8013d00:	6002      	str	r2, [r0, #0]
 8013d02:	eddd 7a07 	vldr	s15, [sp, #28]
 8013d06:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8013d0a:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8013d0e:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8013d12:	6082      	str	r2, [r0, #8]
 8013d14:	edc0 7a01 	vstr	s15, [r0, #4]
 8013d18:	f8c0 e018 	str.w	lr, [r0, #24]
 8013d1c:	f8dd e020 	ldr.w	lr, [sp, #32]
 8013d20:	f8c0 c010 	str.w	ip, [r0, #16]
 8013d24:	f8c0 e00c 	str.w	lr, [r0, #12]
 8013d28:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8013d2c:	f043 0304 	orr.w	r3, r3, #4
 8013d30:	f8c0 c014 	str.w	ip, [r0, #20]
 8013d34:	6343      	str	r3, [r0, #52]	@ 0x34
 8013d36:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8013d38:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8013d3c:	61c3      	str	r3, [r0, #28]
 8013d3e:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8013d42:	4aa0      	ldr	r2, [pc, #640]	@ (8013fc4 <stroke_thin_path+0x93c>)
 8013d44:	6246      	str	r6, [r0, #36]	@ 0x24
 8013d46:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8013d48:	6302      	str	r2, [r0, #48]	@ 0x30
 8013d4a:	6201      	str	r1, [r0, #32]
 8013d4c:	6283      	str	r3, [r0, #40]	@ 0x28
 8013d4e:	e742      	b.n	8013bd6 <stroke_thin_path+0x54e>
 8013d50:	f1ac 0c05 	sub.w	ip, ip, #5
 8013d54:	f1bc 0f03 	cmp.w	ip, #3
 8013d58:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013d5c:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013d60:	d80b      	bhi.n	8013d7a <stroke_thin_path+0x6f2>
 8013d62:	ee76 6aa6 	vadd.f32	s13, s13, s13
 8013d66:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8013d6a:	ed9d 6a11 	vldr	s12, [sp, #68]	@ 0x44
 8013d6e:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8013d72:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8013d76:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8013d7a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013d7e:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8013d82:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013d86:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8013d8a:	e6c2      	b.n	8013b12 <stroke_thin_path+0x48a>
 8013d8c:	464d      	mov	r5, r9
 8013d8e:	e9dd 9602 	ldrd	r9, r6, [sp, #8]
 8013d92:	eddd 8a13 	vldr	s17, [sp, #76]	@ 0x4c
 8013d96:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 8013d9a:	ee77 7ae8 	vsub.f32	s15, s15, s17
 8013d9e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8013da2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013da6:	ed9d 9a14 	vldr	s18, [sp, #80]	@ 0x50
 8013daa:	d108      	bne.n	8013dbe <stroke_thin_path+0x736>
 8013dac:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013db0:	ee77 7ac9 	vsub.f32	s15, s15, s18
 8013db4:	eef5 7a40 	vcmp.f32	s15, #0.0
 8013db8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013dbc:	d050      	beq.n	8013e60 <stroke_thin_path+0x7d8>
 8013dbe:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013dc2:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 8013dc6:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 8013dca:	f8db 3000 	ldr.w	r3, [fp]
 8013dce:	e887 0003 	stmia.w	r7, {r0, r1}
 8013dd2:	7f1a      	ldrb	r2, [r3, #28]
 8013dd4:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013dd8:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013ddc:	2a00      	cmp	r2, #0
 8013dde:	f000 818e 	beq.w	80140fe <stroke_thin_path+0xa76>
 8013de2:	4a75      	ldr	r2, [pc, #468]	@ (8013fb8 <stroke_thin_path+0x930>)
 8013de4:	4b75      	ldr	r3, [pc, #468]	@ (8013fbc <stroke_thin_path+0x934>)
 8013de6:	2007      	movs	r0, #7
 8013de8:	6817      	ldr	r7, [r2, #0]
 8013dea:	681c      	ldr	r4, [r3, #0]
 8013dec:	f009 ff62 	bl	801dcb4 <nema_cl_get_space>
 8013df0:	2800      	cmp	r0, #0
 8013df2:	d035      	beq.n	8013e60 <stroke_thin_path+0x7d8>
 8013df4:	4a72      	ldr	r2, [pc, #456]	@ (8013fc0 <stroke_thin_path+0x938>)
 8013df6:	f8db 3000 	ldr.w	r3, [fp]
 8013dfa:	7811      	ldrb	r1, [r2, #0]
 8013dfc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8013dfe:	2901      	cmp	r1, #1
 8013e00:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 8013e04:	d104      	bne.n	8013e10 <stroke_thin_path+0x788>
 8013e06:	4b6e      	ldr	r3, [pc, #440]	@ (8013fc0 <stroke_thin_path+0x938>)
 8013e08:	685b      	ldr	r3, [r3, #4]
 8013e0a:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013e0e:	431a      	orrs	r2, r3
 8013e10:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8013e14:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8013e18:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8013e1c:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8013e20:	f8c0 8000 	str.w	r8, [r0]
 8013e24:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8013e28:	f8c0 e008 	str.w	lr, [r0, #8]
 8013e2c:	f8c0 8004 	str.w	r8, [r0, #4]
 8013e30:	f8c0 c018 	str.w	ip, [r0, #24]
 8013e34:	f8dd c020 	ldr.w	ip, [sp, #32]
 8013e38:	6101      	str	r1, [r0, #16]
 8013e3a:	f8c0 c00c 	str.w	ip, [r0, #12]
 8013e3e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8013e40:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8013e44:	6141      	str	r1, [r0, #20]
 8013e46:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8013e48:	f042 0204 	orr.w	r2, r2, #4
 8013e4c:	61c1      	str	r1, [r0, #28]
 8013e4e:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8013e52:	6342      	str	r2, [r0, #52]	@ 0x34
 8013e54:	4a5b      	ldr	r2, [pc, #364]	@ (8013fc4 <stroke_thin_path+0x93c>)
 8013e56:	6247      	str	r7, [r0, #36]	@ 0x24
 8013e58:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8013e5a:	6201      	str	r1, [r0, #32]
 8013e5c:	6283      	str	r3, [r0, #40]	@ 0x28
 8013e5e:	6302      	str	r2, [r0, #48]	@ 0x30
 8013e60:	2300      	movs	r3, #0
 8013e62:	f88d 3011 	strb.w	r3, [sp, #17]
 8013e66:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013e6a:	e49d      	b.n	80137a8 <stroke_thin_path+0x120>
 8013e6c:	4b56      	ldr	r3, [pc, #344]	@ (8013fc8 <stroke_thin_path+0x940>)
 8013e6e:	eddd 8a07 	vldr	s17, [sp, #28]
 8013e72:	681b      	ldr	r3, [r3, #0]
 8013e74:	ed9d 9a08 	vldr	s18, [sp, #32]
 8013e78:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8013e7c:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8013e80:	2b00      	cmp	r3, #0
 8013e82:	f000 80fb 	beq.w	801407c <stroke_thin_path+0x9f4>
 8013e86:	eef0 1a4a 	vmov.f32	s3, s20
 8013e8a:	eeb0 1a69 	vmov.f32	s2, s19
 8013e8e:	eef0 0a49 	vmov.f32	s1, s18
 8013e92:	eeb0 0a68 	vmov.f32	s0, s17
 8013e96:	f7fe fd07 	bl	80128a8 <raster_stroked_line_>
 8013e9a:	e49b      	b.n	80137d4 <stroke_thin_path+0x14c>
 8013e9c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013e9e:	2a00      	cmp	r2, #0
 8013ea0:	f040 8123 	bne.w	80140ea <stroke_thin_path+0xa62>
 8013ea4:	2507      	movs	r5, #7
 8013ea6:	e5bf      	b.n	8013a28 <stroke_thin_path+0x3a0>
 8013ea8:	f1ac 0c05 	sub.w	ip, ip, #5
 8013eac:	f1bc 0f03 	cmp.w	ip, #3
 8013eb0:	ed9d 5a0f 	vldr	s10, [sp, #60]	@ 0x3c
 8013eb4:	eddd 5a10 	vldr	s11, [sp, #64]	@ 0x40
 8013eb8:	f240 80d3 	bls.w	8014062 <stroke_thin_path+0x9da>
 8013ebc:	eeb0 7a65 	vmov.f32	s14, s11
 8013ec0:	eef0 7a45 	vmov.f32	s15, s10
 8013ec4:	ed8d 7a0c 	vstr	s14, [sp, #48]	@ 0x30
 8013ec8:	edcd 7a0b 	vstr	s15, [sp, #44]	@ 0x2c
 8013ecc:	9005      	str	r0, [sp, #20]
 8013ece:	ed94 7a00 	vldr	s14, [r4]
 8013ed2:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013ed6:	3102      	adds	r1, #2
 8013ed8:	9105      	str	r1, [sp, #20]
 8013eda:	edd4 7a01 	vldr	s15, [r4, #4]
 8013ede:	9a00      	ldr	r2, [sp, #0]
 8013ee0:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013ee4:	2a00      	cmp	r2, #0
 8013ee6:	f43f ae0d 	beq.w	8013b04 <stroke_thin_path+0x47c>
 8013eea:	ee37 7a05 	vadd.f32	s14, s14, s10
 8013eee:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8013ef2:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013ef6:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013efa:	e603      	b.n	8013b04 <stroke_thin_path+0x47c>
 8013efc:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8013f00:	4c32      	ldr	r4, [pc, #200]	@ (8013fcc <stroke_thin_path+0x944>)
 8013f02:	4d33      	ldr	r5, [pc, #204]	@ (8013fd0 <stroke_thin_path+0x948>)
 8013f04:	7821      	ldrb	r1, [r4, #0]
 8013f06:	ee39 7acc 	vsub.f32	s14, s19, s24
 8013f0a:	ee79 7a6b 	vsub.f32	s15, s18, s23
 8013f0e:	ee7c 5a2a 	vadd.f32	s11, s24, s21
 8013f12:	ee3a 4aa9 	vadd.f32	s8, s21, s19
 8013f16:	ee3b 5a8a 	vadd.f32	s10, s23, s20
 8013f1a:	ee7a 4a09 	vadd.f32	s9, s20, s18
 8013f1e:	ee3a 6a49 	vsub.f32	s12, s20, s18
 8013f22:	ee7a 6ae9 	vsub.f32	s13, s21, s19
 8013f26:	ee26 6a07 	vmul.f32	s12, s12, s14
 8013f2a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8013f2e:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8013f32:	ee24 4a28 	vmul.f32	s8, s8, s17
 8013f36:	ee25 5a28 	vmul.f32	s10, s10, s17
 8013f3a:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8013f3e:	ee35 ba84 	vadd.f32	s22, s11, s8
 8013f42:	ee75 ca24 	vadd.f32	s25, s10, s9
 8013f46:	ee27 7a07 	vmul.f32	s14, s14, s14
 8013f4a:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8013f4e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8013f52:	ee2b ba28 	vmul.f32	s22, s22, s17
 8013f56:	ee6c caa8 	vmul.f32	s25, s25, s17
 8013f5a:	ee66 6aa6 	vmul.f32	s13, s13, s13
 8013f5e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013f62:	2900      	cmp	r1, #0
 8013f64:	d038      	beq.n	8013fd8 <stroke_thin_path+0x950>
 8013f66:	eef4 6ae7 	vcmpe.f32	s13, s15
 8013f6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013f6e:	bfcc      	ite	gt
 8013f70:	2301      	movgt	r3, #1
 8013f72:	2300      	movle	r3, #0
 8013f74:	2b00      	cmp	r3, #0
 8013f76:	d03a      	beq.n	8013fee <stroke_thin_path+0x966>
 8013f78:	682b      	ldr	r3, [r5, #0]
 8013f7a:	2b09      	cmp	r3, #9
 8013f7c:	dc12      	bgt.n	8013fa4 <stroke_thin_path+0x91c>
 8013f7e:	4815      	ldr	r0, [pc, #84]	@ (8013fd4 <stroke_thin_path+0x94c>)
 8013f80:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8013f84:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8013f88:	ed82 ba00 	vstr	s22, [r2]
 8013f8c:	edc2 ca01 	vstr	s25, [r2, #4]
 8013f90:	ed82 4a02 	vstr	s8, [r2, #8]
 8013f94:	edc2 4a03 	vstr	s9, [r2, #12]
 8013f98:	edc2 9a04 	vstr	s19, [r2, #16]
 8013f9c:	ed82 9a05 	vstr	s18, [r2, #20]
 8013fa0:	3301      	adds	r3, #1
 8013fa2:	602b      	str	r3, [r5, #0]
 8013fa4:	3601      	adds	r6, #1
 8013fa6:	eeb0 9a6c 	vmov.f32	s18, s25
 8013faa:	eef0 9a4b 	vmov.f32	s19, s22
 8013fae:	eeb0 aa45 	vmov.f32	s20, s10
 8013fb2:	eef0 aa65 	vmov.f32	s21, s11
 8013fb6:	e7a6      	b.n	8013f06 <stroke_thin_path+0x87e>
 8013fb8:	20082f74 	.word	0x20082f74
 8013fbc:	20082f78 	.word	0x20082f78
 8013fc0:	20000064 	.word	0x20000064
 8013fc4:	ff000100 	.word	0xff000100
 8013fc8:	20082f70 	.word	0x20082f70
 8013fcc:	20082f7c 	.word	0x20082f7c
 8013fd0:	20083104 	.word	0x20083104
 8013fd4:	20083014 	.word	0x20083014
 8013fd8:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8013fdc:	eef4 7ae6 	vcmpe.f32	s15, s13
 8013fe0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013fe4:	bf4c      	ite	mi
 8013fe6:	2301      	movmi	r3, #1
 8013fe8:	2300      	movpl	r3, #0
 8013fea:	2b00      	cmp	r3, #0
 8013fec:	d1c4      	bne.n	8013f78 <stroke_thin_path+0x8f0>
 8013fee:	eef0 1a6c 	vmov.f32	s3, s25
 8013ff2:	eeb0 1a4b 	vmov.f32	s2, s22
 8013ff6:	eef0 0a6b 	vmov.f32	s1, s23
 8013ffa:	eeb0 0a4c 	vmov.f32	s0, s24
 8013ffe:	f7fe fc53 	bl	80128a8 <raster_stroked_line_>
 8014002:	eef0 1a49 	vmov.f32	s3, s18
 8014006:	eeb0 1a69 	vmov.f32	s2, s19
 801400a:	eef0 0a6c 	vmov.f32	s1, s25
 801400e:	eeb0 0a4b 	vmov.f32	s0, s22
 8014012:	f7fe fc49 	bl	80128a8 <raster_stroked_line_>
 8014016:	682b      	ldr	r3, [r5, #0]
 8014018:	3e01      	subs	r6, #1
 801401a:	b193      	cbz	r3, 8014042 <stroke_thin_path+0x9ba>
 801401c:	3b01      	subs	r3, #1
 801401e:	49d4      	ldr	r1, [pc, #848]	@ (8014370 <stroke_thin_path+0xce8>)
 8014020:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8014024:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 8014028:	ed92 ca00 	vldr	s24, [r2]
 801402c:	edd2 ba01 	vldr	s23, [r2, #4]
 8014030:	edd2 aa02 	vldr	s21, [r2, #8]
 8014034:	ed92 aa03 	vldr	s20, [r2, #12]
 8014038:	edd2 9a04 	vldr	s19, [r2, #16]
 801403c:	ed92 9a05 	vldr	s18, [r2, #20]
 8014040:	602b      	str	r3, [r5, #0]
 8014042:	2e00      	cmp	r6, #0
 8014044:	f43f abc6 	beq.w	80137d4 <stroke_thin_path+0x14c>
 8014048:	7821      	ldrb	r1, [r4, #0]
 801404a:	e75c      	b.n	8013f06 <stroke_thin_path+0x87e>
 801404c:	a804      	add	r0, sp, #16
 801404e:	f7ff f88b 	bl	8013168 <fill_arc.isra.7>
 8014052:	4605      	mov	r5, r0
 8014054:	2800      	cmp	r0, #0
 8014056:	f43f abbd 	beq.w	80137d4 <stroke_thin_path+0x14c>
 801405a:	f008 fcd3 	bl	801ca04 <nema_vg_set_error>
 801405e:	f7ff bbc0 	b.w	80137e2 <stroke_thin_path+0x15a>
 8014062:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 8014066:	ee75 7a05 	vadd.f32	s15, s10, s10
 801406a:	ee35 6aa5 	vadd.f32	s12, s11, s11
 801406e:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 8014072:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014076:	ee36 7a66 	vsub.f32	s14, s12, s13
 801407a:	e723      	b.n	8013ec4 <stroke_thin_path+0x83c>
 801407c:	4bbd      	ldr	r3, [pc, #756]	@ (8014374 <stroke_thin_path+0xcec>)
 801407e:	f8db 2000 	ldr.w	r2, [fp]
 8014082:	7819      	ldrb	r1, [r3, #0]
 8014084:	e9d2 340a 	ldrd	r3, r4, [r2, #40]	@ 0x28
 8014088:	2b00      	cmp	r3, #0
 801408a:	bf18      	it	ne
 801408c:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 8014090:	2901      	cmp	r1, #1
 8014092:	ea04 0403 	and.w	r4, r4, r3
 8014096:	d073      	beq.n	8014180 <stroke_thin_path+0xaf8>
 8014098:	2005      	movs	r0, #5
 801409a:	f009 fe0b 	bl	801dcb4 <nema_cl_get_space>
 801409e:	2800      	cmp	r0, #0
 80140a0:	f43f ab98 	beq.w	80137d4 <stroke_thin_path+0x14c>
 80140a4:	f44f 7648 	mov.w	r6, #800	@ 0x320
 80140a8:	f44f 7549 	mov.w	r5, #804	@ 0x324
 80140ac:	f44f 714c 	mov.w	r1, #816	@ 0x330
 80140b0:	f44f 724d 	mov.w	r2, #820	@ 0x334
 80140b4:	edc0 8a01 	vstr	s17, [r0, #4]
 80140b8:	ed80 9a03 	vstr	s18, [r0, #12]
 80140bc:	edc0 9a05 	vstr	s19, [r0, #20]
 80140c0:	ed80 aa07 	vstr	s20, [r0, #28]
 80140c4:	4bac      	ldr	r3, [pc, #688]	@ (8014378 <stroke_thin_path+0xcf0>)
 80140c6:	f044 040a 	orr.w	r4, r4, #10
 80140ca:	6244      	str	r4, [r0, #36]	@ 0x24
 80140cc:	6006      	str	r6, [r0, #0]
 80140ce:	6085      	str	r5, [r0, #8]
 80140d0:	6101      	str	r1, [r0, #16]
 80140d2:	6182      	str	r2, [r0, #24]
 80140d4:	6203      	str	r3, [r0, #32]
 80140d6:	f8da 3000 	ldr.w	r3, [sl]
 80140da:	464c      	mov	r4, r9
 80140dc:	f7ff bb7d 	b.w	80137da <stroke_thin_path+0x152>
 80140e0:	ee18 7a10 	vmov	r7, s16
 80140e4:	ee18 8a10 	vmov	r8, s16
 80140e8:	e43d      	b.n	8013966 <stroke_thin_path+0x2de>
 80140ea:	4aa4      	ldr	r2, [pc, #656]	@ (801437c <stroke_thin_path+0xcf4>)
 80140ec:	2507      	movs	r5, #7
 80140ee:	6812      	ldr	r2, [r2, #0]
 80140f0:	2a00      	cmp	r2, #0
 80140f2:	bf14      	ite	ne
 80140f4:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 80140f8:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 80140fc:	e494      	b.n	8013a28 <stroke_thin_path+0x3a0>
 80140fe:	4aa0      	ldr	r2, [pc, #640]	@ (8014380 <stroke_thin_path+0xcf8>)
 8014100:	eddd 9a07 	vldr	s19, [sp, #28]
 8014104:	6812      	ldr	r2, [r2, #0]
 8014106:	ed9d aa08 	vldr	s20, [sp, #32]
 801410a:	2a00      	cmp	r2, #0
 801410c:	f000 81a2 	beq.w	8014454 <stroke_thin_path+0xdcc>
 8014110:	eef0 1a49 	vmov.f32	s3, s18
 8014114:	eeb0 1a68 	vmov.f32	s2, s17
 8014118:	eef0 0a4a 	vmov.f32	s1, s20
 801411c:	eeb0 0a69 	vmov.f32	s0, s19
 8014120:	f7fe fbc2 	bl	80128a8 <raster_stroked_line_>
 8014124:	e69c      	b.n	8013e60 <stroke_thin_path+0x7d8>
 8014126:	9005      	str	r0, [sp, #20]
 8014128:	6822      	ldr	r2, [r4, #0]
 801412a:	1c8b      	adds	r3, r1, #2
 801412c:	9305      	str	r3, [sp, #20]
 801412e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8014130:	6863      	ldr	r3, [r4, #4]
 8014132:	3103      	adds	r1, #3
 8014134:	930c      	str	r3, [sp, #48]	@ 0x30
 8014136:	9105      	str	r1, [sp, #20]
 8014138:	4b92      	ldr	r3, [pc, #584]	@ (8014384 <stroke_thin_path+0xcfc>)
 801413a:	68a2      	ldr	r2, [r4, #8]
 801413c:	edd3 0a00 	vldr	s1, [r3]
 8014140:	ed93 0a03 	vldr	s0, [r3, #12]
 8014144:	920d      	str	r2, [sp, #52]	@ 0x34
 8014146:	f01d f819 	bl	803117c <atan2f>
 801414a:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
 801414e:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8014152:	ee77 7a80 	vadd.f32	s15, s15, s0
 8014156:	9905      	ldr	r1, [sp, #20]
 8014158:	f8da 300c 	ldr.w	r3, [sl, #12]
 801415c:	f8dd c03c 	ldr.w	ip, [sp, #60]	@ 0x3c
 8014160:	008c      	lsls	r4, r1, #2
 8014162:	1c48      	adds	r0, r1, #1
 8014164:	4602      	mov	r2, r0
 8014166:	9401      	str	r4, [sp, #4]
 8014168:	f88d 5013 	strb.w	r5, [sp, #19]
 801416c:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 8014170:	eb03 0e04 	add.w	lr, r3, r4
 8014174:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 8014178:	ed8d 7a12 	vstr	s14, [sp, #72]	@ 0x48
 801417c:	f7ff badc 	b.w	8013738 <stroke_thin_path+0xb0>
 8014180:	4b7c      	ldr	r3, [pc, #496]	@ (8014374 <stroke_thin_path+0xcec>)
 8014182:	685b      	ldr	r3, [r3, #4]
 8014184:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014188:	431c      	orrs	r4, r3
 801418a:	e785      	b.n	8014098 <stroke_thin_path+0xa10>
 801418c:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8014190:	2d00      	cmp	r5, #0
 8014192:	bf18      	it	ne
 8014194:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 8014198:	4b76      	ldr	r3, [pc, #472]	@ (8014374 <stroke_thin_path+0xcec>)
 801419a:	4015      	ands	r5, r2
 801419c:	781b      	ldrb	r3, [r3, #0]
 801419e:	2b01      	cmp	r3, #1
 80141a0:	d104      	bne.n	80141ac <stroke_thin_path+0xb24>
 80141a2:	4b74      	ldr	r3, [pc, #464]	@ (8014374 <stroke_thin_path+0xcec>)
 80141a4:	685b      	ldr	r3, [r3, #4]
 80141a6:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80141aa:	431d      	orrs	r5, r3
 80141ac:	2005      	movs	r0, #5
 80141ae:	f009 fd81 	bl	801dcb4 <nema_cl_get_space>
 80141b2:	2800      	cmp	r0, #0
 80141b4:	f43f ad0f 	beq.w	8013bd6 <stroke_thin_path+0x54e>
 80141b8:	f44f 7648 	mov.w	r6, #800	@ 0x320
 80141bc:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80141c0:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80141c4:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80141c8:	f045 050a 	orr.w	r5, r5, #10
 80141cc:	6245      	str	r5, [r0, #36]	@ 0x24
 80141ce:	4d6a      	ldr	r5, [pc, #424]	@ (8014378 <stroke_thin_path+0xcf0>)
 80141d0:	edc0 9a01 	vstr	s19, [r0, #4]
 80141d4:	ed80 aa03 	vstr	s20, [r0, #12]
 80141d8:	edc0 8a05 	vstr	s17, [r0, #20]
 80141dc:	ed80 9a07 	vstr	s18, [r0, #28]
 80141e0:	6205      	str	r5, [r0, #32]
 80141e2:	6006      	str	r6, [r0, #0]
 80141e4:	6081      	str	r1, [r0, #8]
 80141e6:	6102      	str	r2, [r0, #16]
 80141e8:	6183      	str	r3, [r0, #24]
 80141ea:	e4f4      	b.n	8013bd6 <stroke_thin_path+0x54e>
 80141ec:	4626      	mov	r6, r4
 80141ee:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 80141f2:	eddd da07 	vldr	s27, [sp, #28]
 80141f6:	ed9d da08 	vldr	s26, [sp, #32]
 80141fa:	eddd ca0b 	vldr	s25, [sp, #44]	@ 0x2c
 80141fe:	ed9d ca0c 	vldr	s24, [sp, #48]	@ 0x30
 8014202:	eddd ba0d 	vldr	s23, [sp, #52]	@ 0x34
 8014206:	ed9d ba0e 	vldr	s22, [sp, #56]	@ 0x38
 801420a:	eddd aa09 	vldr	s21, [sp, #36]	@ 0x24
 801420e:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8014212:	4d5d      	ldr	r5, [pc, #372]	@ (8014388 <stroke_thin_path+0xd00>)
 8014214:	ee7d 4aac 	vadd.f32	s9, s27, s25
 8014218:	ee7c 7aab 	vadd.f32	s15, s25, s23
 801421c:	ee3b 5aaa 	vadd.f32	s10, s23, s21
 8014220:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8014224:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8014228:	ee25 5a28 	vmul.f32	s10, s10, s17
 801422c:	ee74 3aa7 	vadd.f32	s7, s9, s15
 8014230:	ee37 6a85 	vadd.f32	s12, s15, s10
 8014234:	ee3d 4a0c 	vadd.f32	s8, s26, s24
 8014238:	ee7c 7a0b 	vadd.f32	s15, s24, s22
 801423c:	ee7b 5a0a 	vadd.f32	s11, s22, s20
 8014240:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8014244:	ee24 4a28 	vmul.f32	s8, s8, s17
 8014248:	ee65 5aa8 	vmul.f32	s11, s11, s17
 801424c:	ee34 3a27 	vadd.f32	s6, s8, s15
 8014250:	ee63 3aa8 	vmul.f32	s7, s7, s17
 8014254:	ee26 6a28 	vmul.f32	s12, s12, s17
 8014258:	ee77 7aa5 	vadd.f32	s15, s15, s11
 801425c:	ee33 9a86 	vadd.f32	s18, s7, s12
 8014260:	ee3d 7aaa 	vadd.f32	s14, s27, s21
 8014264:	ee23 3a28 	vmul.f32	s6, s6, s17
 8014268:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801426c:	ee29 9a28 	vmul.f32	s18, s18, s17
 8014270:	ee27 7a28 	vmul.f32	s14, s14, s17
 8014274:	ee73 9a27 	vadd.f32	s19, s6, s15
 8014278:	ee7d 6a0a 	vadd.f32	s13, s26, s20
 801427c:	ee37 7a49 	vsub.f32	s14, s14, s18
 8014280:	ee69 9aa8 	vmul.f32	s19, s19, s17
 8014284:	ee66 6aa8 	vmul.f32	s13, s13, s17
 8014288:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801428c:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8014290:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014294:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8014298:	bf48      	it	mi
 801429a:	eeb1 7a47 	vnegmi.f32	s14, s14
 801429e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142a2:	bf48      	it	mi
 80142a4:	eef1 6a66 	vnegmi.f32	s13, s13
 80142a8:	b94e      	cbnz	r6, 80142be <stroke_thin_path+0xc36>
 80142aa:	eeb4 7ae8 	vcmpe.f32	s14, s17
 80142ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142b2:	d504      	bpl.n	80142be <stroke_thin_path+0xc36>
 80142b4:	eef4 6ae8 	vcmpe.f32	s13, s17
 80142b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142bc:	d424      	bmi.n	8014308 <stroke_thin_path+0xc80>
 80142be:	682a      	ldr	r2, [r5, #0]
 80142c0:	2a09      	cmp	r2, #9
 80142c2:	dc21      	bgt.n	8014308 <stroke_thin_path+0xc80>
 80142c4:	492a      	ldr	r1, [pc, #168]	@ (8014370 <stroke_thin_path+0xce8>)
 80142c6:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80142ca:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80142ce:	3201      	adds	r2, #1
 80142d0:	edc3 aa04 	vstr	s21, [r3, #16]
 80142d4:	ed83 aa05 	vstr	s20, [r3, #20]
 80142d8:	3401      	adds	r4, #1
 80142da:	eeb0 ba43 	vmov.f32	s22, s6
 80142de:	eef0 ba63 	vmov.f32	s23, s7
 80142e2:	eeb0 ca44 	vmov.f32	s24, s8
 80142e6:	eef0 ca64 	vmov.f32	s25, s9
 80142ea:	ed83 6a00 	vstr	s12, [r3]
 80142ee:	edc3 7a01 	vstr	s15, [r3, #4]
 80142f2:	ed83 5a02 	vstr	s10, [r3, #8]
 80142f6:	edc3 5a03 	vstr	s11, [r3, #12]
 80142fa:	602a      	str	r2, [r5, #0]
 80142fc:	eeb0 aa69 	vmov.f32	s20, s19
 8014300:	eef0 aa49 	vmov.f32	s21, s18
 8014304:	2600      	movs	r6, #0
 8014306:	e785      	b.n	8014214 <stroke_thin_path+0xb8c>
 8014308:	eef0 1a69 	vmov.f32	s3, s19
 801430c:	eeb0 1a49 	vmov.f32	s2, s18
 8014310:	eef0 0a4d 	vmov.f32	s1, s26
 8014314:	eeb0 0a6d 	vmov.f32	s0, s27
 8014318:	f7fe fac6 	bl	80128a8 <raster_stroked_line_>
 801431c:	eef0 1a4a 	vmov.f32	s3, s20
 8014320:	eeb0 1a6a 	vmov.f32	s2, s21
 8014324:	eef0 0a69 	vmov.f32	s1, s19
 8014328:	eeb0 0a49 	vmov.f32	s0, s18
 801432c:	f7fe fabc 	bl	80128a8 <raster_stroked_line_>
 8014330:	682a      	ldr	r2, [r5, #0]
 8014332:	3c01      	subs	r4, #1
 8014334:	b1b2      	cbz	r2, 8014364 <stroke_thin_path+0xcdc>
 8014336:	3a01      	subs	r2, #1
 8014338:	490d      	ldr	r1, [pc, #52]	@ (8014370 <stroke_thin_path+0xce8>)
 801433a:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801433e:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8014342:	eeb0 da4a 	vmov.f32	s26, s20
 8014346:	eef0 da6a 	vmov.f32	s27, s21
 801434a:	edd3 ca00 	vldr	s25, [r3]
 801434e:	ed93 ca01 	vldr	s24, [r3, #4]
 8014352:	edd3 ba02 	vldr	s23, [r3, #8]
 8014356:	ed93 ba03 	vldr	s22, [r3, #12]
 801435a:	ed93 aa05 	vldr	s20, [r3, #20]
 801435e:	edd3 aa04 	vldr	s21, [r3, #16]
 8014362:	602a      	str	r2, [r5, #0]
 8014364:	2c00      	cmp	r4, #0
 8014366:	f47f af55 	bne.w	8014214 <stroke_thin_path+0xb8c>
 801436a:	f7ff ba33 	b.w	80137d4 <stroke_thin_path+0x14c>
 801436e:	bf00      	nop
 8014370:	20083014 	.word	0x20083014
 8014374:	20000064 	.word	0x20000064
 8014378:	ff000100 	.word	0xff000100
 801437c:	20082f6c 	.word	0x20082f6c
 8014380:	20082f70 	.word	0x20082f70
 8014384:	20082fec 	.word	0x20082fec
 8014388:	20083104 	.word	0x20083104
 801438c:	2e0b      	cmp	r6, #11
 801438e:	f47f abc0 	bne.w	8013b12 <stroke_thin_path+0x48a>
 8014392:	9005      	str	r0, [sp, #20]
 8014394:	edde 7a00 	vldr	s15, [lr]
 8014398:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801439c:	ee17 1a90 	vmov	r1, s15
 80143a0:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80143a4:	104c      	asrs	r4, r1, #1
 80143a6:	2c00      	cmp	r4, #0
 80143a8:	f340 80d4 	ble.w	8014554 <stroke_thin_path+0xecc>
 80143ac:	2100      	movs	r1, #0
 80143ae:	f8cd 9008 	str.w	r9, [sp, #8]
 80143b2:	9603      	str	r6, [sp, #12]
 80143b4:	46a9      	mov	r9, r5
 80143b6:	4656      	mov	r6, sl
 80143b8:	46a2      	mov	sl, r4
 80143ba:	460c      	mov	r4, r1
 80143bc:	e036      	b.n	801442c <stroke_thin_path+0xda4>
 80143be:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 80143c2:	ee78 8a81 	vadd.f32	s17, s17, s2
 80143c6:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 80143ca:	9205      	str	r2, [sp, #20]
 80143cc:	ed91 9a00 	vldr	s18, [r1]
 80143d0:	eddd 1a10 	vldr	s3, [sp, #64]	@ 0x40
 80143d4:	ee39 9a21 	vadd.f32	s18, s18, s3
 80143d8:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 80143dc:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 80143e0:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 80143e4:	f8db 3000 	ldr.w	r3, [fp]
 80143e8:	f88d 9054 	strb.w	r9, [sp, #84]	@ 0x54
 80143ec:	7f1a      	ldrb	r2, [r3, #28]
 80143ee:	2a00      	cmp	r2, #0
 80143f0:	d161      	bne.n	80144b6 <stroke_thin_path+0xe2e>
 80143f2:	4a82      	ldr	r2, [pc, #520]	@ (80145fc <stroke_thin_path+0xf74>)
 80143f4:	eddd 9a07 	vldr	s19, [sp, #28]
 80143f8:	6812      	ldr	r2, [r2, #0]
 80143fa:	ed9d aa08 	vldr	s20, [sp, #32]
 80143fe:	2a00      	cmp	r2, #0
 8014400:	f000 80ca 	beq.w	8014598 <stroke_thin_path+0xf10>
 8014404:	eef0 1a49 	vmov.f32	s3, s18
 8014408:	eeb0 1a68 	vmov.f32	s2, s17
 801440c:	eef0 0a4a 	vmov.f32	s1, s20
 8014410:	eeb0 0a69 	vmov.f32	s0, s19
 8014414:	f7fe fa48 	bl	80128a8 <raster_stroked_line_>
 8014418:	e898 0003 	ldmia.w	r8, {r0, r1}
 801441c:	3401      	adds	r4, #1
 801441e:	4554      	cmp	r4, sl
 8014420:	e887 0003 	stmia.w	r7, {r0, r1}
 8014424:	f000 8091 	beq.w	801454a <stroke_thin_path+0xec2>
 8014428:	68f3      	ldr	r3, [r6, #12]
 801442a:	9a05      	ldr	r2, [sp, #20]
 801442c:	0090      	lsls	r0, r2, #2
 801442e:	1d01      	adds	r1, r0, #4
 8014430:	4419      	add	r1, r3
 8014432:	9d00      	ldr	r5, [sp, #0]
 8014434:	4403      	add	r3, r0
 8014436:	1c50      	adds	r0, r2, #1
 8014438:	9005      	str	r0, [sp, #20]
 801443a:	3202      	adds	r2, #2
 801443c:	edd3 8a00 	vldr	s17, [r3]
 8014440:	2d00      	cmp	r5, #0
 8014442:	d1bc      	bne.n	80143be <stroke_thin_path+0xd36>
 8014444:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8014448:	9205      	str	r2, [sp, #20]
 801444a:	ed91 9a00 	vldr	s18, [r1]
 801444e:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8014452:	e7c3      	b.n	80143dc <stroke_thin_path+0xd54>
 8014454:	e9d3 240a 	ldrd	r2, r4, [r3, #40]	@ 0x28
 8014458:	2a00      	cmp	r2, #0
 801445a:	bf18      	it	ne
 801445c:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 8014460:	4b67      	ldr	r3, [pc, #412]	@ (8014600 <stroke_thin_path+0xf78>)
 8014462:	4014      	ands	r4, r2
 8014464:	781b      	ldrb	r3, [r3, #0]
 8014466:	2b01      	cmp	r3, #1
 8014468:	d104      	bne.n	8014474 <stroke_thin_path+0xdec>
 801446a:	4b65      	ldr	r3, [pc, #404]	@ (8014600 <stroke_thin_path+0xf78>)
 801446c:	685b      	ldr	r3, [r3, #4]
 801446e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014472:	431c      	orrs	r4, r3
 8014474:	2005      	movs	r0, #5
 8014476:	f009 fc1d 	bl	801dcb4 <nema_cl_get_space>
 801447a:	2800      	cmp	r0, #0
 801447c:	f43f acf0 	beq.w	8013e60 <stroke_thin_path+0x7d8>
 8014480:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8014484:	f44f 7749 	mov.w	r7, #804	@ 0x324
 8014488:	f44f 714c 	mov.w	r1, #816	@ 0x330
 801448c:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8014490:	4b5c      	ldr	r3, [pc, #368]	@ (8014604 <stroke_thin_path+0xf7c>)
 8014492:	f044 040a 	orr.w	r4, r4, #10
 8014496:	6244      	str	r4, [r0, #36]	@ 0x24
 8014498:	edc0 9a01 	vstr	s19, [r0, #4]
 801449c:	ed80 aa03 	vstr	s20, [r0, #12]
 80144a0:	edc0 8a05 	vstr	s17, [r0, #20]
 80144a4:	ed80 9a07 	vstr	s18, [r0, #28]
 80144a8:	f8c0 c000 	str.w	ip, [r0]
 80144ac:	6087      	str	r7, [r0, #8]
 80144ae:	6101      	str	r1, [r0, #16]
 80144b0:	6182      	str	r2, [r0, #24]
 80144b2:	6203      	str	r3, [r0, #32]
 80144b4:	e4d4      	b.n	8013e60 <stroke_thin_path+0x7d8>
 80144b6:	4a54      	ldr	r2, [pc, #336]	@ (8014608 <stroke_thin_path+0xf80>)
 80144b8:	4b54      	ldr	r3, [pc, #336]	@ (801460c <stroke_thin_path+0xf84>)
 80144ba:	6812      	ldr	r2, [r2, #0]
 80144bc:	2007      	movs	r0, #7
 80144be:	9201      	str	r2, [sp, #4]
 80144c0:	681d      	ldr	r5, [r3, #0]
 80144c2:	f009 fbf7 	bl	801dcb4 <nema_cl_get_space>
 80144c6:	2800      	cmp	r0, #0
 80144c8:	d0a6      	beq.n	8014418 <stroke_thin_path+0xd90>
 80144ca:	4a4d      	ldr	r2, [pc, #308]	@ (8014600 <stroke_thin_path+0xf78>)
 80144cc:	f8db 3000 	ldr.w	r3, [fp]
 80144d0:	7812      	ldrb	r2, [r2, #0]
 80144d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80144d4:	2a01      	cmp	r2, #1
 80144d6:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 80144da:	d104      	bne.n	80144e6 <stroke_thin_path+0xe5e>
 80144dc:	4a48      	ldr	r2, [pc, #288]	@ (8014600 <stroke_thin_path+0xf78>)
 80144de:	6852      	ldr	r2, [r2, #4]
 80144e0:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 80144e4:	4313      	orrs	r3, r2
 80144e6:	f44f 7248 	mov.w	r2, #800	@ 0x320
 80144ea:	6002      	str	r2, [r0, #0]
 80144ec:	eddd 7a07 	vldr	s15, [sp, #28]
 80144f0:	f44f 7249 	mov.w	r2, #804	@ 0x324
 80144f4:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 80144f8:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80144fc:	6082      	str	r2, [r0, #8]
 80144fe:	edc0 7a01 	vstr	s15, [r0, #4]
 8014502:	f8c0 e018 	str.w	lr, [r0, #24]
 8014506:	f8dd e020 	ldr.w	lr, [sp, #32]
 801450a:	f8c0 c010 	str.w	ip, [r0, #16]
 801450e:	f8c0 e00c 	str.w	lr, [r0, #12]
 8014512:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8014516:	f043 0304 	orr.w	r3, r3, #4
 801451a:	6343      	str	r3, [r0, #52]	@ 0x34
 801451c:	9b01      	ldr	r3, [sp, #4]
 801451e:	f8c0 c014 	str.w	ip, [r0, #20]
 8014522:	6243      	str	r3, [r0, #36]	@ 0x24
 8014524:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014526:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801452a:	61c3      	str	r3, [r0, #28]
 801452c:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8014530:	4a34      	ldr	r2, [pc, #208]	@ (8014604 <stroke_thin_path+0xf7c>)
 8014532:	3401      	adds	r4, #1
 8014534:	4554      	cmp	r4, sl
 8014536:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8014538:	6302      	str	r2, [r0, #48]	@ 0x30
 801453a:	6201      	str	r1, [r0, #32]
 801453c:	6283      	str	r3, [r0, #40]	@ 0x28
 801453e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014542:	e887 0003 	stmia.w	r7, {r0, r1}
 8014546:	f47f af6f 	bne.w	8014428 <stroke_thin_path+0xda0>
 801454a:	464d      	mov	r5, r9
 801454c:	46b2      	mov	sl, r6
 801454e:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8014552:	9e03      	ldr	r6, [sp, #12]
 8014554:	f8db 3000 	ldr.w	r3, [fp]
 8014558:	7f1b      	ldrb	r3, [r3, #28]
 801455a:	b1b3      	cbz	r3, 801458a <stroke_thin_path+0xf02>
 801455c:	ed9d 7a0f 	vldr	s14, [sp, #60]	@ 0x3c
 8014560:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 8014564:	ee77 7a67 	vsub.f32	s15, s14, s15
 8014568:	eef5 7a40 	vcmp.f32	s15, #0.0
 801456c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014570:	d10b      	bne.n	801458a <stroke_thin_path+0xf02>
 8014572:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8014576:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 801457a:	ee77 7a67 	vsub.f32	s15, s14, s15
 801457e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8014582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014586:	f43f ac6b 	beq.w	8013e60 <stroke_thin_path+0x7d8>
 801458a:	2301      	movs	r3, #1
 801458c:	f88d 3011 	strb.w	r3, [sp, #17]
 8014590:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8014594:	f7ff b908 	b.w	80137a8 <stroke_thin_path+0x120>
 8014598:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 801459c:	2d00      	cmp	r5, #0
 801459e:	bf18      	it	ne
 80145a0:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 80145a4:	4b16      	ldr	r3, [pc, #88]	@ (8014600 <stroke_thin_path+0xf78>)
 80145a6:	4015      	ands	r5, r2
 80145a8:	781b      	ldrb	r3, [r3, #0]
 80145aa:	2b01      	cmp	r3, #1
 80145ac:	d104      	bne.n	80145b8 <stroke_thin_path+0xf30>
 80145ae:	4b14      	ldr	r3, [pc, #80]	@ (8014600 <stroke_thin_path+0xf78>)
 80145b0:	685b      	ldr	r3, [r3, #4]
 80145b2:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80145b6:	431d      	orrs	r5, r3
 80145b8:	2005      	movs	r0, #5
 80145ba:	f009 fb7b 	bl	801dcb4 <nema_cl_get_space>
 80145be:	2800      	cmp	r0, #0
 80145c0:	f43f af2a 	beq.w	8014418 <stroke_thin_path+0xd90>
 80145c4:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 80145c8:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80145cc:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80145d0:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80145d4:	f045 050a 	orr.w	r5, r5, #10
 80145d8:	6245      	str	r5, [r0, #36]	@ 0x24
 80145da:	4d0a      	ldr	r5, [pc, #40]	@ (8014604 <stroke_thin_path+0xf7c>)
 80145dc:	edc0 9a01 	vstr	s19, [r0, #4]
 80145e0:	ed80 aa03 	vstr	s20, [r0, #12]
 80145e4:	edc0 8a05 	vstr	s17, [r0, #20]
 80145e8:	ed80 9a07 	vstr	s18, [r0, #28]
 80145ec:	6205      	str	r5, [r0, #32]
 80145ee:	f8c0 c000 	str.w	ip, [r0]
 80145f2:	6081      	str	r1, [r0, #8]
 80145f4:	6102      	str	r2, [r0, #16]
 80145f6:	6183      	str	r3, [r0, #24]
 80145f8:	e70e      	b.n	8014418 <stroke_thin_path+0xd90>
 80145fa:	bf00      	nop
 80145fc:	20082f70 	.word	0x20082f70
 8014600:	20000064 	.word	0x20000064
 8014604:	ff000100 	.word	0xff000100
 8014608:	20082f74 	.word	0x20082f74
 801460c:	20082f78 	.word	0x20082f78

08014610 <stroke_path>:
 8014610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014614:	ed2d 8b0c 	vpush	{d8-d13}
 8014618:	4682      	mov	sl, r0
 801461a:	b09b      	sub	sp, #108	@ 0x6c
 801461c:	2246      	movs	r2, #70	@ 0x46
 801461e:	2100      	movs	r1, #0
 8014620:	f10d 0022 	add.w	r0, sp, #34	@ 0x22
 8014624:	f01e f937 	bl	8032896 <memset>
 8014628:	46d1      	mov	r9, sl
 801462a:	2301      	movs	r3, #1
 801462c:	2500      	movs	r5, #0
 801462e:	f240 1201 	movw	r2, #257	@ 0x101
 8014632:	f88d 3022 	strb.w	r3, [sp, #34]	@ 0x22
 8014636:	f8d9 3000 	ldr.w	r3, [r9]
 801463a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801463e:	42ab      	cmp	r3, r5
 8014640:	f8df b1cc 	ldr.w	fp, [pc, #460]	@ 8014810 <stroke_path+0x200>
 8014644:	ed9f 8a70 	vldr	s16, [pc, #448]	@ 8014808 <stroke_path+0x1f8>
 8014648:	f240 809c 	bls.w	8014784 <stroke_path+0x174>
 801464c:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8014650:	af0d      	add	r7, sp, #52	@ 0x34
 8014652:	5d5c      	ldrb	r4, [r3, r5]
 8014654:	ae0b      	add	r6, sp, #44	@ 0x2c
 8014656:	f004 0a6f 	and.w	sl, r4, #111	@ 0x6f
 801465a:	1c6b      	adds	r3, r5, #1
 801465c:	f1ba 0f01 	cmp.w	sl, #1
 8014660:	e897 0003 	ldmia.w	r7, {r0, r1}
 8014664:	9301      	str	r3, [sp, #4]
 8014666:	f004 0810 	and.w	r8, r4, #16
 801466a:	e886 0003 	stmia.w	r6, {r0, r1}
 801466e:	f000 80d1 	beq.w	8014814 <stroke_path+0x204>
 8014672:	0662      	lsls	r2, r4, #25
 8014674:	f000 8095 	beq.w	80147a2 <stroke_path+0x192>
 8014678:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801467a:	f89d e064 	ldrb.w	lr, [sp, #100]	@ 0x64
 801467e:	b911      	cbnz	r1, 8014686 <stroke_path+0x76>
 8014680:	2301      	movs	r3, #1
 8014682:	f88d 3020 	strb.w	r3, [sp, #32]
 8014686:	2200      	movs	r2, #0
 8014688:	f8d9 300c 	ldr.w	r3, [r9, #12]
 801468c:	0088      	lsls	r0, r1, #2
 801468e:	181d      	adds	r5, r3, r0
 8014690:	9002      	str	r0, [sp, #8]
 8014692:	f1ba 0f06 	cmp.w	sl, #6
 8014696:	f101 0001 	add.w	r0, r1, #1
 801469a:	f88d 2022 	strb.w	r2, [sp, #34]	@ 0x22
 801469e:	46ac      	mov	ip, r5
 80146a0:	4602      	mov	r2, r0
 80146a2:	f000 8337 	beq.w	8014d14 <stroke_path+0x704>
 80146a6:	f1ba 0f05 	cmp.w	sl, #5
 80146aa:	f000 840c 	beq.w	8014ec6 <stroke_path+0x8b6>
 80146ae:	f1ba 0f07 	cmp.w	sl, #7
 80146b2:	f00e 0e6f 	and.w	lr, lr, #111	@ 0x6f
 80146b6:	f000 8565 	beq.w	8015184 <stroke_path+0xb74>
 80146ba:	f1ba 0f08 	cmp.w	sl, #8
 80146be:	f000 861f 	beq.w	8015300 <stroke_path+0xcf0>
 80146c2:	f004 0e0f 	and.w	lr, r4, #15
 80146c6:	f1be 0f09 	cmp.w	lr, #9
 80146ca:	f000 8669 	beq.w	80153a0 <stroke_path+0xd90>
 80146ce:	f1ba 0f04 	cmp.w	sl, #4
 80146d2:	f040 8370 	bne.w	8014db6 <stroke_path+0x7a6>
 80146d6:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 80146da:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80146de:	9009      	str	r0, [sp, #36]	@ 0x24
 80146e0:	eddc 7a00 	vldr	s15, [ip]
 80146e4:	f1b8 0f00 	cmp.w	r8, #0
 80146e8:	f000 83ea 	beq.w	8014ec0 <stroke_path+0x8b0>
 80146ec:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 80146f0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80146f4:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80146f8:	4d44      	ldr	r5, [pc, #272]	@ (801480c <stroke_path+0x1fc>)
 80146fa:	682b      	ldr	r3, [r5, #0]
 80146fc:	7f1b      	ldrb	r3, [r3, #28]
 80146fe:	2b00      	cmp	r3, #0
 8014700:	f000 82fe 	beq.w	8014d00 <stroke_path+0x6f0>
 8014704:	ed9d 7a17 	vldr	s14, [sp, #92]	@ 0x5c
 8014708:	ee36 7ac7 	vsub.f32	s14, s13, s14
 801470c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8014710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014714:	d109      	bne.n	801472a <stroke_path+0x11a>
 8014716:	ed9d 7a18 	vldr	s14, [sp, #96]	@ 0x60
 801471a:	ee37 7ac7 	vsub.f32	s14, s15, s14
 801471e:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8014722:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014726:	f000 8427 	beq.w	8014f78 <stroke_path+0x968>
 801472a:	2301      	movs	r3, #1
 801472c:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8014730:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8014734:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 8014738:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801473c:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 8014740:	2b00      	cmp	r3, #0
 8014742:	d146      	bne.n	80147d2 <stroke_path+0x1c2>
 8014744:	0623      	lsls	r3, r4, #24
 8014746:	d444      	bmi.n	80147d2 <stroke_path+0x1c2>
 8014748:	f004 036d 	and.w	r3, r4, #109	@ 0x6d
 801474c:	2b05      	cmp	r3, #5
 801474e:	f000 81dd 	beq.w	8014b0c <stroke_path+0x4fc>
 8014752:	f1ba 0f06 	cmp.w	sl, #6
 8014756:	f000 8283 	beq.w	8014c60 <stroke_path+0x650>
 801475a:	f1ba 0f08 	cmp.w	sl, #8
 801475e:	f000 827f 	beq.w	8014c60 <stroke_path+0x650>
 8014762:	f004 040f 	and.w	r4, r4, #15
 8014766:	2c09      	cmp	r4, #9
 8014768:	f000 85bf 	beq.w	80152ea <stroke_path+0xcda>
 801476c:	f1aa 0a0a 	sub.w	sl, sl, #10
 8014770:	f1ba 0f01 	cmp.w	sl, #1
 8014774:	f200 83d5 	bhi.w	8014f22 <stroke_path+0x912>
 8014778:	9d01      	ldr	r5, [sp, #4]
 801477a:	f8d9 3000 	ldr.w	r3, [r9]
 801477e:	42ab      	cmp	r3, r5
 8014780:	f63f af64 	bhi.w	801464c <stroke_path+0x3c>
 8014784:	f89d 0021 	ldrb.w	r0, [sp, #33]	@ 0x21
 8014788:	2100      	movs	r1, #0
 801478a:	fab0 f080 	clz	r0, r0
 801478e:	0940      	lsrs	r0, r0, #5
 8014790:	f7fd fe7a 	bl	8012488 <flush_lines_>
 8014794:	2400      	movs	r4, #0
 8014796:	4620      	mov	r0, r4
 8014798:	b01b      	add	sp, #108	@ 0x6c
 801479a:	ecbd 8b0c 	vpop	{d8-d13}
 801479e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147a2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80147a6:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 80147aa:	2b01      	cmp	r3, #1
 80147ac:	f04f 0300 	mov.w	r3, #0
 80147b0:	bf07      	ittee	eq
 80147b2:	ee18 2a10 	vmoveq	r2, s16
 80147b6:	ee18 1a10 	vmoveq	r1, s16
 80147ba:	9917      	ldrne	r1, [sp, #92]	@ 0x5c
 80147bc:	9a18      	ldrne	r2, [sp, #96]	@ 0x60
 80147be:	f88d 3022 	strb.w	r3, [sp, #34]	@ 0x22
 80147c2:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 80147c6:	0623      	lsls	r3, r4, #24
 80147c8:	920e      	str	r2, [sp, #56]	@ 0x38
 80147ca:	910d      	str	r1, [sp, #52]	@ 0x34
 80147cc:	9113      	str	r1, [sp, #76]	@ 0x4c
 80147ce:	9214      	str	r2, [sp, #80]	@ 0x50
 80147d0:	d5ba      	bpl.n	8014748 <stroke_path+0x138>
 80147d2:	4d0e      	ldr	r5, [pc, #56]	@ (801480c <stroke_path+0x1fc>)
 80147d4:	682b      	ldr	r3, [r5, #0]
 80147d6:	7f5e      	ldrb	r6, [r3, #29]
 80147d8:	f016 0610 	ands.w	r6, r6, #16
 80147dc:	d055      	beq.n	801488a <stroke_path+0x27a>
 80147de:	2300      	movs	r3, #0
 80147e0:	461a      	mov	r2, r3
 80147e2:	4619      	mov	r1, r3
 80147e4:	4618      	mov	r0, r3
 80147e6:	f7fd fbf1 	bl	8011fcc <nema_enable_aa>
 80147ea:	eddb 7a08 	vldr	s15, [fp, #32]
 80147ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80147f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80147f6:	4606      	mov	r6, r0
 80147f8:	f340 80a6 	ble.w	8014948 <stroke_path+0x338>
 80147fc:	682b      	ldr	r3, [r5, #0]
 80147fe:	7f5b      	ldrb	r3, [r3, #29]
 8014800:	06df      	lsls	r7, r3, #27
 8014802:	d450      	bmi.n	80148a6 <stroke_path+0x296>
 8014804:	e048      	b.n	8014898 <stroke_path+0x288>
 8014806:	bf00      	nop
 8014808:	00000000 	.word	0x00000000
 801480c:	20082f68 	.word	0x20082f68
 8014810:	20082fb8 	.word	0x20082fb8
 8014814:	f89d 2021 	ldrb.w	r2, [sp, #33]	@ 0x21
 8014818:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801481a:	2a01      	cmp	r2, #1
 801481c:	4db6      	ldr	r5, [pc, #728]	@ (8014af8 <stroke_path+0x4e8>)
 801481e:	f000 81d4 	beq.w	8014bca <stroke_path+0x5ba>
 8014822:	2001      	movs	r0, #1
 8014824:	2600      	movs	r6, #0
 8014826:	0099      	lsls	r1, r3, #2
 8014828:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801482c:	1d0f      	adds	r7, r1, #4
 801482e:	4417      	add	r7, r2
 8014830:	440a      	add	r2, r1
 8014832:	1819      	adds	r1, r3, r0
 8014834:	930a      	str	r3, [sp, #40]	@ 0x28
 8014836:	f88d 6020 	strb.w	r6, [sp, #32]
 801483a:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 801483e:	3302      	adds	r3, #2
 8014840:	9109      	str	r1, [sp, #36]	@ 0x24
 8014842:	f1b8 0f00 	cmp.w	r8, #0
 8014846:	f000 81b2 	beq.w	8014bae <stroke_path+0x59e>
 801484a:	edd2 7a00 	vldr	s15, [r2]
 801484e:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 8014852:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8014856:	9309      	str	r3, [sp, #36]	@ 0x24
 8014858:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801485c:	edd7 7a00 	vldr	s15, [r7]
 8014860:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8014864:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014868:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 801486c:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
 8014870:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 8014874:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 8014878:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801487c:	682b      	ldr	r3, [r5, #0]
 801487e:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 8014882:	7f5e      	ldrb	r6, [r3, #29]
 8014884:	f016 0610 	ands.w	r6, r6, #16
 8014888:	d1a9      	bne.n	80147de <stroke_path+0x1ce>
 801488a:	eddb 7a08 	vldr	s15, [fp, #32]
 801488e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014896:	dd57      	ble.n	8014948 <stroke_path+0x338>
 8014898:	2201      	movs	r2, #1
 801489a:	2300      	movs	r3, #0
 801489c:	4611      	mov	r1, r2
 801489e:	4610      	mov	r0, r2
 80148a0:	f7fd fb94 	bl	8011fcc <nema_enable_aa>
 80148a4:	4606      	mov	r6, r0
 80148a6:	2009      	movs	r0, #9
 80148a8:	ed9b ba00 	vldr	s22, [fp]
 80148ac:	f8db 8010 	ldr.w	r8, [fp, #16]
 80148b0:	eddb aa01 	vldr	s21, [fp, #4]
 80148b4:	f8db 7014 	ldr.w	r7, [fp, #20]
 80148b8:	ed9b aa02 	vldr	s20, [fp, #8]
 80148bc:	eddb 9a06 	vldr	s19, [fp, #24]
 80148c0:	ed9b 9a03 	vldr	s18, [fp, #12]
 80148c4:	eddb 8a07 	vldr	s17, [fp, #28]
 80148c8:	f009 f9f4 	bl	801dcb4 <nema_cl_get_space>
 80148cc:	b3a8      	cbz	r0, 801493a <stroke_path+0x32a>
 80148ce:	f44f 7349 	mov.w	r3, #804	@ 0x324
 80148d2:	f8c0 800c 	str.w	r8, [r0, #12]
 80148d6:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 80148da:	f44f 784c 	mov.w	r8, #816	@ 0x330
 80148de:	ed80 ba01 	vstr	s22, [r0, #4]
 80148e2:	6083      	str	r3, [r0, #8]
 80148e4:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 80148e8:	61c7      	str	r7, [r0, #28]
 80148ea:	f44f 7151 	mov.w	r1, #836	@ 0x344
 80148ee:	f44f 7750 	mov.w	r7, #832	@ 0x340
 80148f2:	f44f 7254 	mov.w	r2, #848	@ 0x350
 80148f6:	f44f 7355 	mov.w	r3, #852	@ 0x354
 80148fa:	edc0 aa05 	vstr	s21, [r0, #20]
 80148fe:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014902:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014906:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 801490a:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 801490e:	f8df e1f4 	ldr.w	lr, [pc, #500]	@ 8014b04 <stroke_path+0x4f4>
 8014912:	f8c0 8010 	str.w	r8, [r0, #16]
 8014916:	f8c0 a000 	str.w	sl, [r0]
 801491a:	f8de e010 	ldr.w	lr, [lr, #16]
 801491e:	f8df 81e8 	ldr.w	r8, [pc, #488]	@ 8014b08 <stroke_path+0x4f8>
 8014922:	f04e 0e05 	orr.w	lr, lr, #5
 8014926:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 801492a:	f8c0 c018 	str.w	ip, [r0, #24]
 801492e:	6207      	str	r7, [r0, #32]
 8014930:	6281      	str	r1, [r0, #40]	@ 0x28
 8014932:	6302      	str	r2, [r0, #48]	@ 0x30
 8014934:	6383      	str	r3, [r0, #56]	@ 0x38
 8014936:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 801493a:	682b      	ldr	r3, [r5, #0]
 801493c:	ed8b 8a08 	vstr	s16, [fp, #32]
 8014940:	7f5b      	ldrb	r3, [r3, #29]
 8014942:	06d8      	lsls	r0, r3, #27
 8014944:	f140 813d 	bpl.w	8014bc2 <stroke_path+0x5b2>
 8014948:	4b6c      	ldr	r3, [pc, #432]	@ (8014afc <stroke_path+0x4ec>)
 801494a:	edd3 7a08 	vldr	s15, [r3, #32]
 801494e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014952:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014956:	dd6d      	ble.n	8014a34 <stroke_path+0x424>
 8014958:	0621      	lsls	r1, r4, #24
 801495a:	d46b      	bmi.n	8014a34 <stroke_path+0x424>
 801495c:	682b      	ldr	r3, [r5, #0]
 801495e:	4c68      	ldr	r4, [pc, #416]	@ (8014b00 <stroke_path+0x4f0>)
 8014960:	7f59      	ldrb	r1, [r3, #29]
 8014962:	f011 0110 	ands.w	r1, r1, #16
 8014966:	d10a      	bne.n	801497e <stroke_path+0x36e>
 8014968:	6823      	ldr	r3, [r4, #0]
 801496a:	2b01      	cmp	r3, #1
 801496c:	bf13      	iteet	ne
 801496e:	2301      	movne	r3, #1
 8014970:	461a      	moveq	r2, r3
 8014972:	4619      	moveq	r1, r3
 8014974:	461a      	movne	r2, r3
 8014976:	4618      	mov	r0, r3
 8014978:	f7fd fb28 	bl	8011fcc <nema_enable_aa>
 801497c:	4606      	mov	r6, r0
 801497e:	4b5f      	ldr	r3, [pc, #380]	@ (8014afc <stroke_path+0x4ec>)
 8014980:	2009      	movs	r0, #9
 8014982:	ed93 ba00 	vldr	s22, [r3]
 8014986:	f8d3 8010 	ldr.w	r8, [r3, #16]
 801498a:	edd3 aa01 	vldr	s21, [r3, #4]
 801498e:	695f      	ldr	r7, [r3, #20]
 8014990:	ed93 aa02 	vldr	s20, [r3, #8]
 8014994:	edd3 9a06 	vldr	s19, [r3, #24]
 8014998:	ed93 9a03 	vldr	s18, [r3, #12]
 801499c:	edd3 8a07 	vldr	s17, [r3, #28]
 80149a0:	f009 f988 	bl	801dcb4 <nema_cl_get_space>
 80149a4:	b3a8      	cbz	r0, 8014a12 <stroke_path+0x402>
 80149a6:	f44f 7349 	mov.w	r3, #804	@ 0x324
 80149aa:	f8c0 800c 	str.w	r8, [r0, #12]
 80149ae:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 80149b2:	f44f 784c 	mov.w	r8, #816	@ 0x330
 80149b6:	ed80 ba01 	vstr	s22, [r0, #4]
 80149ba:	6083      	str	r3, [r0, #8]
 80149bc:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 80149c0:	61c7      	str	r7, [r0, #28]
 80149c2:	f44f 7151 	mov.w	r1, #836	@ 0x344
 80149c6:	f44f 7750 	mov.w	r7, #832	@ 0x340
 80149ca:	f44f 7254 	mov.w	r2, #848	@ 0x350
 80149ce:	f44f 7355 	mov.w	r3, #852	@ 0x354
 80149d2:	edc0 aa05 	vstr	s21, [r0, #20]
 80149d6:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 80149da:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 80149de:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 80149e2:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 80149e6:	f8df e11c 	ldr.w	lr, [pc, #284]	@ 8014b04 <stroke_path+0x4f4>
 80149ea:	f8c0 8010 	str.w	r8, [r0, #16]
 80149ee:	f8c0 a000 	str.w	sl, [r0]
 80149f2:	f8de e010 	ldr.w	lr, [lr, #16]
 80149f6:	f8df 8110 	ldr.w	r8, [pc, #272]	@ 8014b08 <stroke_path+0x4f8>
 80149fa:	f04e 0e05 	orr.w	lr, lr, #5
 80149fe:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 8014a02:	f8c0 c018 	str.w	ip, [r0, #24]
 8014a06:	6207      	str	r7, [r0, #32]
 8014a08:	6281      	str	r1, [r0, #40]	@ 0x28
 8014a0a:	6302      	str	r2, [r0, #48]	@ 0x30
 8014a0c:	6383      	str	r3, [r0, #56]	@ 0x38
 8014a0e:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 8014a12:	682b      	ldr	r3, [r5, #0]
 8014a14:	4a39      	ldr	r2, [pc, #228]	@ (8014afc <stroke_path+0x4ec>)
 8014a16:	7f5b      	ldrb	r3, [r3, #29]
 8014a18:	ed82 8a08 	vstr	s16, [r2, #32]
 8014a1c:	06da      	lsls	r2, r3, #27
 8014a1e:	f140 8175 	bpl.w	8014d0c <stroke_path+0x6fc>
 8014a22:	6823      	ldr	r3, [r4, #0]
 8014a24:	2b02      	cmp	r3, #2
 8014a26:	d014      	beq.n	8014a52 <stroke_path+0x442>
 8014a28:	4630      	mov	r0, r6
 8014a2a:	f7fd faf1 	bl	8012010 <nema_enable_aa_flags>
 8014a2e:	2300      	movs	r3, #0
 8014a30:	6023      	str	r3, [r4, #0]
 8014a32:	e6a1      	b.n	8014778 <stroke_path+0x168>
 8014a34:	4c32      	ldr	r4, [pc, #200]	@ (8014b00 <stroke_path+0x4f0>)
 8014a36:	6823      	ldr	r3, [r4, #0]
 8014a38:	2b02      	cmp	r3, #2
 8014a3a:	d1f5      	bne.n	8014a28 <stroke_path+0x418>
 8014a3c:	682b      	ldr	r3, [r5, #0]
 8014a3e:	7f5b      	ldrb	r3, [r3, #29]
 8014a40:	f013 0310 	ands.w	r3, r3, #16
 8014a44:	d105      	bne.n	8014a52 <stroke_path+0x442>
 8014a46:	2201      	movs	r2, #1
 8014a48:	4619      	mov	r1, r3
 8014a4a:	4610      	mov	r0, r2
 8014a4c:	f7fd fabe 	bl	8011fcc <nema_enable_aa>
 8014a50:	4606      	mov	r6, r0
 8014a52:	4b2a      	ldr	r3, [pc, #168]	@ (8014afc <stroke_path+0x4ec>)
 8014a54:	2009      	movs	r0, #9
 8014a56:	ed93 ba01 	vldr	s22, [r3, #4]
 8014a5a:	f8d3 8014 	ldr.w	r8, [r3, #20]
 8014a5e:	eddb aa00 	vldr	s21, [fp]
 8014a62:	f8db 7010 	ldr.w	r7, [fp, #16]
 8014a66:	ed93 aa02 	vldr	s20, [r3, #8]
 8014a6a:	edd3 9a06 	vldr	s19, [r3, #24]
 8014a6e:	ed9b 9a03 	vldr	s18, [fp, #12]
 8014a72:	eddb 8a07 	vldr	s17, [fp, #28]
 8014a76:	f009 f91d 	bl	801dcb4 <nema_cl_get_space>
 8014a7a:	b3a8      	cbz	r0, 8014ae8 <stroke_path+0x4d8>
 8014a7c:	f44f 7349 	mov.w	r3, #804	@ 0x324
 8014a80:	f8c0 800c 	str.w	r8, [r0, #12]
 8014a84:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8014a88:	f44f 784c 	mov.w	r8, #816	@ 0x330
 8014a8c:	ed80 ba01 	vstr	s22, [r0, #4]
 8014a90:	6083      	str	r3, [r0, #8]
 8014a92:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014a96:	61c7      	str	r7, [r0, #28]
 8014a98:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8014a9c:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8014aa0:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8014aa4:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8014aa8:	edc0 aa05 	vstr	s21, [r0, #20]
 8014aac:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014ab0:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014ab4:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 8014ab8:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 8014abc:	f8df e044 	ldr.w	lr, [pc, #68]	@ 8014b04 <stroke_path+0x4f4>
 8014ac0:	f8c0 8010 	str.w	r8, [r0, #16]
 8014ac4:	f8c0 a000 	str.w	sl, [r0]
 8014ac8:	f8de e010 	ldr.w	lr, [lr, #16]
 8014acc:	f8df 8038 	ldr.w	r8, [pc, #56]	@ 8014b08 <stroke_path+0x4f8>
 8014ad0:	f04e 0e05 	orr.w	lr, lr, #5
 8014ad4:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 8014ad8:	f8c0 c018 	str.w	ip, [r0, #24]
 8014adc:	6207      	str	r7, [r0, #32]
 8014ade:	6281      	str	r1, [r0, #40]	@ 0x28
 8014ae0:	6302      	str	r2, [r0, #48]	@ 0x30
 8014ae2:	6383      	str	r3, [r0, #56]	@ 0x38
 8014ae4:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 8014ae8:	682b      	ldr	r3, [r5, #0]
 8014aea:	7f5b      	ldrb	r3, [r3, #29]
 8014aec:	06db      	lsls	r3, r3, #27
 8014aee:	d49b      	bmi.n	8014a28 <stroke_path+0x418>
 8014af0:	4630      	mov	r0, r6
 8014af2:	f7fd fa8d 	bl	8012010 <nema_enable_aa_flags>
 8014af6:	e797      	b.n	8014a28 <stroke_path+0x418>
 8014af8:	20082f68 	.word	0x20082f68
 8014afc:	20082f80 	.word	0x20082f80
 8014b00:	20082fe4 	.word	0x20082fe4
 8014b04:	20000064 	.word	0x20000064
 8014b08:	ff000100 	.word	0xff000100
 8014b0c:	4dba      	ldr	r5, [pc, #744]	@ (8014df8 <stroke_path+0x7e8>)
 8014b0e:	eddd aa0f 	vldr	s21, [sp, #60]	@ 0x3c
 8014b12:	682b      	ldr	r3, [r5, #0]
 8014b14:	ed9d aa10 	vldr	s20, [sp, #64]	@ 0x40
 8014b18:	7f1a      	ldrb	r2, [r3, #28]
 8014b1a:	ed9d ca0b 	vldr	s24, [sp, #44]	@ 0x2c
 8014b1e:	eddd ba0c 	vldr	s23, [sp, #48]	@ 0x30
 8014b22:	eddd 9a0d 	vldr	s19, [sp, #52]	@ 0x34
 8014b26:	ed9d 9a0e 	vldr	s18, [sp, #56]	@ 0x38
 8014b2a:	2a00      	cmp	r2, #0
 8014b2c:	f040 81be 	bne.w	8014eac <stroke_path+0x89c>
 8014b30:	4ab2      	ldr	r2, [pc, #712]	@ (8014dfc <stroke_path+0x7ec>)
 8014b32:	6816      	ldr	r6, [r2, #0]
 8014b34:	2e01      	cmp	r6, #1
 8014b36:	f000 8342 	beq.w	80151be <stroke_path+0xbae>
 8014b3a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014b3c:	2508      	movs	r5, #8
 8014b3e:	b10a      	cbz	r2, 8014b44 <stroke_path+0x534>
 8014b40:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8014b44:	49ae      	ldr	r1, [pc, #696]	@ (8014e00 <stroke_path+0x7f0>)
 8014b46:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8014b48:	7808      	ldrb	r0, [r1, #0]
 8014b4a:	4014      	ands	r4, r2
 8014b4c:	2801      	cmp	r0, #1
 8014b4e:	d103      	bne.n	8014b58 <stroke_path+0x548>
 8014b50:	684b      	ldr	r3, [r1, #4]
 8014b52:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014b56:	431c      	orrs	r4, r3
 8014b58:	2007      	movs	r0, #7
 8014b5a:	f009 f8ab 	bl	801dcb4 <nema_cl_get_space>
 8014b5e:	2800      	cmp	r0, #0
 8014b60:	f43f ae0a 	beq.w	8014778 <stroke_path+0x168>
 8014b64:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8014b68:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8014b6c:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8014b70:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8014b74:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8014b78:	f44f 7251 	mov.w	r2, #836	@ 0x344
 8014b7c:	4ba1      	ldr	r3, [pc, #644]	@ (8014e04 <stroke_path+0x7f4>)
 8014b7e:	432c      	orrs	r4, r5
 8014b80:	6344      	str	r4, [r0, #52]	@ 0x34
 8014b82:	ed80 ca01 	vstr	s24, [r0, #4]
 8014b86:	edc0 ba03 	vstr	s23, [r0, #12]
 8014b8a:	edc0 aa05 	vstr	s21, [r0, #20]
 8014b8e:	ed80 aa07 	vstr	s20, [r0, #28]
 8014b92:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 8014b96:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 8014b9a:	f8c0 e000 	str.w	lr, [r0]
 8014b9e:	f8c0 c008 	str.w	ip, [r0, #8]
 8014ba2:	6107      	str	r7, [r0, #16]
 8014ba4:	6186      	str	r6, [r0, #24]
 8014ba6:	6201      	str	r1, [r0, #32]
 8014ba8:	6282      	str	r2, [r0, #40]	@ 0x28
 8014baa:	6303      	str	r3, [r0, #48]	@ 0x30
 8014bac:	e5e4      	b.n	8014778 <stroke_path+0x168>
 8014bae:	edd2 6a00 	vldr	s13, [r2]
 8014bb2:	9309      	str	r3, [sp, #36]	@ 0x24
 8014bb4:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014bb8:	edd7 7a00 	vldr	s15, [r7]
 8014bbc:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014bc0:	e654      	b.n	801486c <stroke_path+0x25c>
 8014bc2:	4630      	mov	r0, r6
 8014bc4:	f7fd fa24 	bl	8012010 <nema_enable_aa_flags>
 8014bc8:	e6be      	b.n	8014948 <stroke_path+0x338>
 8014bca:	2b00      	cmp	r3, #0
 8014bcc:	f43f ae29 	beq.w	8014822 <stroke_path+0x212>
 8014bd0:	682a      	ldr	r2, [r5, #0]
 8014bd2:	7f12      	ldrb	r2, [r2, #28]
 8014bd4:	2a00      	cmp	r2, #0
 8014bd6:	f43f ae24 	beq.w	8014822 <stroke_path+0x212>
 8014bda:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8014bde:	2b00      	cmp	r3, #0
 8014be0:	f040 83c5 	bne.w	801536e <stroke_path+0xd5e>
 8014be4:	eddd 8a17 	vldr	s17, [sp, #92]	@ 0x5c
 8014be8:	f8dd a060 	ldr.w	sl, [sp, #96]	@ 0x60
 8014bec:	4a86      	ldr	r2, [pc, #536]	@ (8014e08 <stroke_path+0x7f8>)
 8014bee:	4b87      	ldr	r3, [pc, #540]	@ (8014e0c <stroke_path+0x7fc>)
 8014bf0:	2007      	movs	r0, #7
 8014bf2:	edcd 8a06 	vstr	s17, [sp, #24]
 8014bf6:	f8cd a01c 	str.w	sl, [sp, #28]
 8014bfa:	6817      	ldr	r7, [r2, #0]
 8014bfc:	681e      	ldr	r6, [r3, #0]
 8014bfe:	f009 f859 	bl	801dcb4 <nema_cl_get_space>
 8014c02:	b358      	cbz	r0, 8014c5c <stroke_path+0x64c>
 8014c04:	4a7e      	ldr	r2, [pc, #504]	@ (8014e00 <stroke_path+0x7f0>)
 8014c06:	682b      	ldr	r3, [r5, #0]
 8014c08:	7811      	ldrb	r1, [r2, #0]
 8014c0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014c0c:	2901      	cmp	r1, #1
 8014c0e:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8014c12:	f000 83f2 	beq.w	80153fa <stroke_path+0xdea>
 8014c16:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8014c1a:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8014c1e:	6002      	str	r2, [r0, #0]
 8014c20:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8014c22:	6081      	str	r1, [r0, #8]
 8014c24:	6042      	str	r2, [r0, #4]
 8014c26:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8014c28:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8014c2c:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014c30:	60c2      	str	r2, [r0, #12]
 8014c32:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8014c36:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8014c3a:	edc0 8a05 	vstr	s17, [r0, #20]
 8014c3e:	f043 0304 	orr.w	r3, r3, #4
 8014c42:	6343      	str	r3, [r0, #52]	@ 0x34
 8014c44:	4b6f      	ldr	r3, [pc, #444]	@ (8014e04 <stroke_path+0x7f4>)
 8014c46:	f8c0 a01c 	str.w	sl, [r0, #28]
 8014c4a:	6247      	str	r7, [r0, #36]	@ 0x24
 8014c4c:	62c6      	str	r6, [r0, #44]	@ 0x2c
 8014c4e:	f8c0 e010 	str.w	lr, [r0, #16]
 8014c52:	f8c0 c018 	str.w	ip, [r0, #24]
 8014c56:	6201      	str	r1, [r0, #32]
 8014c58:	6282      	str	r2, [r0, #40]	@ 0x28
 8014c5a:	6303      	str	r3, [r0, #48]	@ 0x30
 8014c5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014c5e:	e5e0      	b.n	8014822 <stroke_path+0x212>
 8014c60:	4d65      	ldr	r5, [pc, #404]	@ (8014df8 <stroke_path+0x7e8>)
 8014c62:	682b      	ldr	r3, [r5, #0]
 8014c64:	7f1a      	ldrb	r2, [r3, #28]
 8014c66:	2a00      	cmp	r2, #0
 8014c68:	f040 8201 	bne.w	801506e <stroke_path+0xa5e>
 8014c6c:	4a63      	ldr	r2, [pc, #396]	@ (8014dfc <stroke_path+0x7ec>)
 8014c6e:	6814      	ldr	r4, [r2, #0]
 8014c70:	2c01      	cmp	r4, #1
 8014c72:	f000 840b 	beq.w	801548c <stroke_path+0xe7c>
 8014c76:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014c78:	2509      	movs	r5, #9
 8014c7a:	2a00      	cmp	r2, #0
 8014c7c:	f040 8171 	bne.w	8014f62 <stroke_path+0x952>
 8014c80:	495f      	ldr	r1, [pc, #380]	@ (8014e00 <stroke_path+0x7f0>)
 8014c82:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8014c84:	7808      	ldrb	r0, [r1, #0]
 8014c86:	4014      	ands	r4, r2
 8014c88:	2801      	cmp	r0, #1
 8014c8a:	d103      	bne.n	8014c94 <stroke_path+0x684>
 8014c8c:	684b      	ldr	r3, [r1, #4]
 8014c8e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014c92:	431c      	orrs	r4, r3
 8014c94:	2009      	movs	r0, #9
 8014c96:	f009 f80d 	bl	801dcb4 <nema_cl_get_space>
 8014c9a:	2800      	cmp	r0, #0
 8014c9c:	f43f ad6c 	beq.w	8014778 <stroke_path+0x168>
 8014ca0:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8014ca4:	f44f 7849 	mov.w	r8, #804	@ 0x324
 8014ca8:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8014cac:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014cb0:	f44f 7351 	mov.w	r3, #836	@ 0x344
 8014cb4:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8014cb8:	f44f 7654 	mov.w	r6, #848	@ 0x350
 8014cbc:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8014cc0:	6007      	str	r7, [r0, #0]
 8014cc2:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8014cc4:	f8c0 8008 	str.w	r8, [r0, #8]
 8014cc8:	6047      	str	r7, [r0, #4]
 8014cca:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8014ccc:	f8c0 e010 	str.w	lr, [r0, #16]
 8014cd0:	60c7      	str	r7, [r0, #12]
 8014cd2:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8014cd4:	f8c0 c018 	str.w	ip, [r0, #24]
 8014cd8:	6147      	str	r7, [r0, #20]
 8014cda:	6283      	str	r3, [r0, #40]	@ 0x28
 8014cdc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014cde:	6201      	str	r1, [r0, #32]
 8014ce0:	61c3      	str	r3, [r0, #28]
 8014ce2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014ce4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014ce6:	6241      	str	r1, [r0, #36]	@ 0x24
 8014ce8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8014cea:	6343      	str	r3, [r0, #52]	@ 0x34
 8014cec:	62c1      	str	r1, [r0, #44]	@ 0x2c
 8014cee:	4b45      	ldr	r3, [pc, #276]	@ (8014e04 <stroke_path+0x7f4>)
 8014cf0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8014cf2:	432c      	orrs	r4, r5
 8014cf4:	6444      	str	r4, [r0, #68]	@ 0x44
 8014cf6:	6306      	str	r6, [r0, #48]	@ 0x30
 8014cf8:	63c1      	str	r1, [r0, #60]	@ 0x3c
 8014cfa:	6382      	str	r2, [r0, #56]	@ 0x38
 8014cfc:	6403      	str	r3, [r0, #64]	@ 0x40
 8014cfe:	e53b      	b.n	8014778 <stroke_path+0x168>
 8014d00:	2201      	movs	r2, #1
 8014d02:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8014d06:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8014d0a:	e513      	b.n	8014734 <stroke_path+0x124>
 8014d0c:	4630      	mov	r0, r6
 8014d0e:	f7fd f97f 	bl	8012010 <nema_enable_aa_flags>
 8014d12:	e690      	b.n	8014a36 <stroke_path+0x426>
 8014d14:	9009      	str	r0, [sp, #36]	@ 0x24
 8014d16:	ed95 6a00 	vldr	s12, [r5]
 8014d1a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014d1e:	1c8a      	adds	r2, r1, #2
 8014d20:	9209      	str	r2, [sp, #36]	@ 0x24
 8014d22:	edd5 6a01 	vldr	s13, [r5, #4]
 8014d26:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014d2a:	1cca      	adds	r2, r1, #3
 8014d2c:	9209      	str	r2, [sp, #36]	@ 0x24
 8014d2e:	ed95 7a02 	vldr	s14, [r5, #8]
 8014d32:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8014d36:	3104      	adds	r1, #4
 8014d38:	9109      	str	r1, [sp, #36]	@ 0x24
 8014d3a:	edd5 7a03 	vldr	s15, [r5, #12]
 8014d3e:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8014d42:	f1b8 0f00 	cmp.w	r8, #0
 8014d46:	d013      	beq.n	8014d70 <stroke_path+0x760>
 8014d48:	ed9d 5a13 	vldr	s10, [sp, #76]	@ 0x4c
 8014d4c:	eddd 5a14 	vldr	s11, [sp, #80]	@ 0x50
 8014d50:	ee36 6a05 	vadd.f32	s12, s12, s10
 8014d54:	ee37 7a05 	vadd.f32	s14, s14, s10
 8014d58:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014d5c:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8014d60:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014d64:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8014d68:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014d6c:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8014d70:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 8014d74:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 8014d78:	008a      	lsls	r2, r1, #2
 8014d7a:	1c48      	adds	r0, r1, #1
 8014d7c:	9202      	str	r2, [sp, #8]
 8014d7e:	9d02      	ldr	r5, [sp, #8]
 8014d80:	9009      	str	r0, [sp, #36]	@ 0x24
 8014d82:	1d2a      	adds	r2, r5, #4
 8014d84:	441a      	add	r2, r3
 8014d86:	442b      	add	r3, r5
 8014d88:	3102      	adds	r1, #2
 8014d8a:	edd3 6a00 	vldr	s13, [r3]
 8014d8e:	f1b8 0f00 	cmp.w	r8, #0
 8014d92:	f000 8090 	beq.w	8014eb6 <stroke_path+0x8a6>
 8014d96:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 8014d9a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8014d9e:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014da2:	9109      	str	r1, [sp, #36]	@ 0x24
 8014da4:	ed92 7a00 	vldr	s14, [r2]
 8014da8:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8014dac:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014db0:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014db4:	e4a0      	b.n	80146f8 <stroke_path+0xe8>
 8014db6:	f1ba 0f03 	cmp.w	sl, #3
 8014dba:	f000 80a0 	beq.w	8014efe <stroke_path+0x8ee>
 8014dbe:	f1ba 0f0a 	cmp.w	sl, #10
 8014dc2:	f040 8424 	bne.w	801560e <stroke_path+0xffe>
 8014dc6:	9009      	str	r0, [sp, #36]	@ 0x24
 8014dc8:	eddc 7a00 	vldr	s15, [ip]
 8014dcc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014dd0:	ee17 1a90 	vmov	r1, s15
 8014dd4:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8014dd8:	1049      	asrs	r1, r1, #1
 8014dda:	2900      	cmp	r1, #0
 8014ddc:	9102      	str	r1, [sp, #8]
 8014dde:	f340 8158 	ble.w	8015092 <stroke_path+0xa82>
 8014de2:	2100      	movs	r1, #0
 8014de4:	4d04      	ldr	r5, [pc, #16]	@ (8014df8 <stroke_path+0x7e8>)
 8014de6:	f8cd a014 	str.w	sl, [sp, #20]
 8014dea:	f8cd 800c 	str.w	r8, [sp, #12]
 8014dee:	46aa      	mov	sl, r5
 8014df0:	46c8      	mov	r8, r9
 8014df2:	46a1      	mov	r9, r4
 8014df4:	460c      	mov	r4, r1
 8014df6:	e045      	b.n	8014e84 <stroke_path+0x874>
 8014df8:	20082f68 	.word	0x20082f68
 8014dfc:	20082f70 	.word	0x20082f70
 8014e00:	20000064 	.word	0x20000064
 8014e04:	ff000100 	.word	0xff000100
 8014e08:	20082f74 	.word	0x20082f74
 8014e0c:	20082f78 	.word	0x20082f78
 8014e10:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 8014e14:	ee78 8a81 	vadd.f32	s17, s17, s2
 8014e18:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8014e1c:	9209      	str	r2, [sp, #36]	@ 0x24
 8014e1e:	ed91 9a00 	vldr	s18, [r1]
 8014e22:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 8014e26:	ee39 9a21 	vadd.f32	s18, s18, s3
 8014e2a:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8014e2e:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 8014e32:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 8014e36:	f8da 3000 	ldr.w	r3, [sl]
 8014e3a:	f88d 9064 	strb.w	r9, [sp, #100]	@ 0x64
 8014e3e:	7f1a      	ldrb	r2, [r3, #28]
 8014e40:	2a00      	cmp	r2, #0
 8014e42:	f040 80d0 	bne.w	8014fe6 <stroke_path+0x9d6>
 8014e46:	4ac8      	ldr	r2, [pc, #800]	@ (8015168 <stroke_path+0xb58>)
 8014e48:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 8014e4c:	6812      	ldr	r2, [r2, #0]
 8014e4e:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 8014e52:	2a00      	cmp	r2, #0
 8014e54:	f000 82db 	beq.w	801540e <stroke_path+0xdfe>
 8014e58:	eef0 1a49 	vmov.f32	s3, s18
 8014e5c:	eeb0 1a68 	vmov.f32	s2, s17
 8014e60:	eef0 0a4a 	vmov.f32	s1, s20
 8014e64:	eeb0 0a69 	vmov.f32	s0, s19
 8014e68:	f7fd fd1e 	bl	80128a8 <raster_stroked_line_>
 8014e6c:	e897 0003 	ldmia.w	r7, {r0, r1}
 8014e70:	9b02      	ldr	r3, [sp, #8]
 8014e72:	3401      	adds	r4, #1
 8014e74:	429c      	cmp	r4, r3
 8014e76:	e886 0003 	stmia.w	r6, {r0, r1}
 8014e7a:	f000 8106 	beq.w	801508a <stroke_path+0xa7a>
 8014e7e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8014e82:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014e84:	0090      	lsls	r0, r2, #2
 8014e86:	1d01      	adds	r1, r0, #4
 8014e88:	4419      	add	r1, r3
 8014e8a:	9d03      	ldr	r5, [sp, #12]
 8014e8c:	4403      	add	r3, r0
 8014e8e:	1c50      	adds	r0, r2, #1
 8014e90:	9009      	str	r0, [sp, #36]	@ 0x24
 8014e92:	3202      	adds	r2, #2
 8014e94:	edd3 8a00 	vldr	s17, [r3]
 8014e98:	2d00      	cmp	r5, #0
 8014e9a:	d1b9      	bne.n	8014e10 <stroke_path+0x800>
 8014e9c:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8014ea0:	9209      	str	r2, [sp, #36]	@ 0x24
 8014ea2:	ed91 9a00 	vldr	s18, [r1]
 8014ea6:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8014eaa:	e7c0      	b.n	8014e2e <stroke_path+0x81e>
 8014eac:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014eae:	2a00      	cmp	r2, #0
 8014eb0:	d14d      	bne.n	8014f4e <stroke_path+0x93e>
 8014eb2:	2506      	movs	r5, #6
 8014eb4:	e646      	b.n	8014b44 <stroke_path+0x534>
 8014eb6:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014eba:	9109      	str	r1, [sp, #36]	@ 0x24
 8014ebc:	edd2 7a00 	vldr	s15, [r2]
 8014ec0:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014ec4:	e418      	b.n	80146f8 <stroke_path+0xe8>
 8014ec6:	9009      	str	r0, [sp, #36]	@ 0x24
 8014ec8:	ed95 7a00 	vldr	s14, [r5]
 8014ecc:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8014ed0:	3102      	adds	r1, #2
 8014ed2:	9109      	str	r1, [sp, #36]	@ 0x24
 8014ed4:	edd5 7a01 	vldr	s15, [r5, #4]
 8014ed8:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8014edc:	f1b8 0f00 	cmp.w	r8, #0
 8014ee0:	f43f af46 	beq.w	8014d70 <stroke_path+0x760>
 8014ee4:	ed9d 6a13 	vldr	s12, [sp, #76]	@ 0x4c
 8014ee8:	eddd 6a14 	vldr	s13, [sp, #80]	@ 0x50
 8014eec:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014ef0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014ef4:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8014ef8:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8014efc:	e738      	b.n	8014d70 <stroke_path+0x760>
 8014efe:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8014f02:	9009      	str	r0, [sp, #36]	@ 0x24
 8014f04:	f1b8 0f00 	cmp.w	r8, #0
 8014f08:	d02e      	beq.n	8014f68 <stroke_path+0x958>
 8014f0a:	ed9c 7a00 	vldr	s14, [ip]
 8014f0e:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 8014f12:	ee76 6a87 	vadd.f32	s13, s13, s14
 8014f16:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014f1a:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014f1e:	f7ff bbeb 	b.w	80146f8 <stroke_path+0xe8>
 8014f22:	4b91      	ldr	r3, [pc, #580]	@ (8015168 <stroke_path+0xb58>)
 8014f24:	eddd 8a0b 	vldr	s17, [sp, #44]	@ 0x2c
 8014f28:	681b      	ldr	r3, [r3, #0]
 8014f2a:	ed9d 9a0c 	vldr	s18, [sp, #48]	@ 0x30
 8014f2e:	eddd 9a0d 	vldr	s19, [sp, #52]	@ 0x34
 8014f32:	ed9d aa0e 	vldr	s20, [sp, #56]	@ 0x38
 8014f36:	b333      	cbz	r3, 8014f86 <stroke_path+0x976>
 8014f38:	eef0 1a4a 	vmov.f32	s3, s20
 8014f3c:	eeb0 1a69 	vmov.f32	s2, s19
 8014f40:	eef0 0a49 	vmov.f32	s1, s18
 8014f44:	eeb0 0a68 	vmov.f32	s0, s17
 8014f48:	f7fd fcae 	bl	80128a8 <raster_stroked_line_>
 8014f4c:	e414      	b.n	8014778 <stroke_path+0x168>
 8014f4e:	4a87      	ldr	r2, [pc, #540]	@ (801516c <stroke_path+0xb5c>)
 8014f50:	2506      	movs	r5, #6
 8014f52:	6812      	ldr	r2, [r2, #0]
 8014f54:	2a00      	cmp	r2, #0
 8014f56:	bf14      	ite	ne
 8014f58:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8014f5c:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8014f60:	e5f0      	b.n	8014b44 <stroke_path+0x534>
 8014f62:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8014f66:	e68b      	b.n	8014c80 <stroke_path+0x670>
 8014f68:	eddc 6a00 	vldr	s13, [ip]
 8014f6c:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014f70:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014f74:	f7ff bbc0 	b.w	80146f8 <stroke_path+0xe8>
 8014f78:	2300      	movs	r3, #0
 8014f7a:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8014f7e:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8014f82:	f7ff bbd7 	b.w	8014734 <stroke_path+0x124>
 8014f86:	4d7a      	ldr	r5, [pc, #488]	@ (8015170 <stroke_path+0xb60>)
 8014f88:	497a      	ldr	r1, [pc, #488]	@ (8015174 <stroke_path+0xb64>)
 8014f8a:	682a      	ldr	r2, [r5, #0]
 8014f8c:	7808      	ldrb	r0, [r1, #0]
 8014f8e:	e9d2 340a 	ldrd	r3, r4, [r2, #40]	@ 0x28
 8014f92:	2b00      	cmp	r3, #0
 8014f94:	bf18      	it	ne
 8014f96:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 8014f9a:	2801      	cmp	r0, #1
 8014f9c:	ea04 0403 	and.w	r4, r4, r3
 8014fa0:	f000 8230 	beq.w	8015404 <stroke_path+0xdf4>
 8014fa4:	2005      	movs	r0, #5
 8014fa6:	f008 fe85 	bl	801dcb4 <nema_cl_get_space>
 8014faa:	2800      	cmp	r0, #0
 8014fac:	f43f abe4 	beq.w	8014778 <stroke_path+0x168>
 8014fb0:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8014fb4:	f44f 7549 	mov.w	r5, #804	@ 0x324
 8014fb8:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8014fbc:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8014fc0:	4b6d      	ldr	r3, [pc, #436]	@ (8015178 <stroke_path+0xb68>)
 8014fc2:	f044 040a 	orr.w	r4, r4, #10
 8014fc6:	6244      	str	r4, [r0, #36]	@ 0x24
 8014fc8:	edc0 8a01 	vstr	s17, [r0, #4]
 8014fcc:	ed80 9a03 	vstr	s18, [r0, #12]
 8014fd0:	edc0 9a05 	vstr	s19, [r0, #20]
 8014fd4:	ed80 aa07 	vstr	s20, [r0, #28]
 8014fd8:	6006      	str	r6, [r0, #0]
 8014fda:	6085      	str	r5, [r0, #8]
 8014fdc:	6101      	str	r1, [r0, #16]
 8014fde:	6182      	str	r2, [r0, #24]
 8014fe0:	6203      	str	r3, [r0, #32]
 8014fe2:	f7ff bbc9 	b.w	8014778 <stroke_path+0x168>
 8014fe6:	4a65      	ldr	r2, [pc, #404]	@ (801517c <stroke_path+0xb6c>)
 8014fe8:	4b65      	ldr	r3, [pc, #404]	@ (8015180 <stroke_path+0xb70>)
 8014fea:	6812      	ldr	r2, [r2, #0]
 8014fec:	2007      	movs	r0, #7
 8014fee:	9204      	str	r2, [sp, #16]
 8014ff0:	681d      	ldr	r5, [r3, #0]
 8014ff2:	f008 fe5f 	bl	801dcb4 <nema_cl_get_space>
 8014ff6:	2800      	cmp	r0, #0
 8014ff8:	f43f af38 	beq.w	8014e6c <stroke_path+0x85c>
 8014ffc:	4a5d      	ldr	r2, [pc, #372]	@ (8015174 <stroke_path+0xb64>)
 8014ffe:	f8da 3000 	ldr.w	r3, [sl]
 8015002:	7812      	ldrb	r2, [r2, #0]
 8015004:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015006:	2a01      	cmp	r2, #1
 8015008:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 801500c:	d104      	bne.n	8015018 <stroke_path+0xa08>
 801500e:	4a59      	ldr	r2, [pc, #356]	@ (8015174 <stroke_path+0xb64>)
 8015010:	6852      	ldr	r2, [r2, #4]
 8015012:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015016:	4313      	orrs	r3, r2
 8015018:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801501c:	6002      	str	r2, [r0, #0]
 801501e:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 8015022:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8015026:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801502a:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801502e:	6082      	str	r2, [r0, #8]
 8015030:	edc0 7a01 	vstr	s15, [r0, #4]
 8015034:	f8c0 e018 	str.w	lr, [r0, #24]
 8015038:	f8dd e030 	ldr.w	lr, [sp, #48]	@ 0x30
 801503c:	f8c0 c010 	str.w	ip, [r0, #16]
 8015040:	f8c0 e00c 	str.w	lr, [r0, #12]
 8015044:	f043 0304 	orr.w	r3, r3, #4
 8015048:	f8dd c034 	ldr.w	ip, [sp, #52]	@ 0x34
 801504c:	6343      	str	r3, [r0, #52]	@ 0x34
 801504e:	9b04      	ldr	r3, [sp, #16]
 8015050:	f8c0 c014 	str.w	ip, [r0, #20]
 8015054:	6243      	str	r3, [r0, #36]	@ 0x24
 8015056:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015058:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801505c:	61c3      	str	r3, [r0, #28]
 801505e:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8015062:	4a45      	ldr	r2, [pc, #276]	@ (8015178 <stroke_path+0xb68>)
 8015064:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8015066:	6302      	str	r2, [r0, #48]	@ 0x30
 8015068:	6201      	str	r1, [r0, #32]
 801506a:	6283      	str	r3, [r0, #40]	@ 0x28
 801506c:	e6fe      	b.n	8014e6c <stroke_path+0x85c>
 801506e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8015070:	2a00      	cmp	r2, #0
 8015072:	f000 817a 	beq.w	801536a <stroke_path+0xd5a>
 8015076:	4a3d      	ldr	r2, [pc, #244]	@ (801516c <stroke_path+0xb5c>)
 8015078:	2507      	movs	r5, #7
 801507a:	6812      	ldr	r2, [r2, #0]
 801507c:	2a00      	cmp	r2, #0
 801507e:	bf14      	ite	ne
 8015080:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8015084:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8015088:	e5fa      	b.n	8014c80 <stroke_path+0x670>
 801508a:	464c      	mov	r4, r9
 801508c:	46c1      	mov	r9, r8
 801508e:	f8dd a014 	ldr.w	sl, [sp, #20]
 8015092:	eddd 8a17 	vldr	s17, [sp, #92]	@ 0x5c
 8015096:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 801509a:	ee77 7ae8 	vsub.f32	s15, s15, s17
 801509e:	eef5 7a40 	vcmp.f32	s15, #0.0
 80150a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80150a6:	ed9d 9a18 	vldr	s18, [sp, #96]	@ 0x60
 80150aa:	d108      	bne.n	80150be <stroke_path+0xaae>
 80150ac:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 80150b0:	ee77 7ac9 	vsub.f32	s15, s15, s18
 80150b4:	eef5 7a40 	vcmp.f32	s15, #0.0
 80150b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80150bc:	d04c      	beq.n	8015158 <stroke_path+0xb48>
 80150be:	e897 0003 	ldmia.w	r7, {r0, r1}
 80150c2:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 80150c6:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 80150ca:	4d29      	ldr	r5, [pc, #164]	@ (8015170 <stroke_path+0xb60>)
 80150cc:	e886 0003 	stmia.w	r6, {r0, r1}
 80150d0:	682b      	ldr	r3, [r5, #0]
 80150d2:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 80150d6:	7f1a      	ldrb	r2, [r3, #28]
 80150d8:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 80150dc:	2a00      	cmp	r2, #0
 80150de:	f000 814b 	beq.w	8015378 <stroke_path+0xd68>
 80150e2:	4a26      	ldr	r2, [pc, #152]	@ (801517c <stroke_path+0xb6c>)
 80150e4:	4b26      	ldr	r3, [pc, #152]	@ (8015180 <stroke_path+0xb70>)
 80150e6:	2007      	movs	r0, #7
 80150e8:	6817      	ldr	r7, [r2, #0]
 80150ea:	681e      	ldr	r6, [r3, #0]
 80150ec:	f008 fde2 	bl	801dcb4 <nema_cl_get_space>
 80150f0:	2800      	cmp	r0, #0
 80150f2:	d031      	beq.n	8015158 <stroke_path+0xb48>
 80150f4:	4a1f      	ldr	r2, [pc, #124]	@ (8015174 <stroke_path+0xb64>)
 80150f6:	682b      	ldr	r3, [r5, #0]
 80150f8:	7811      	ldrb	r1, [r2, #0]
 80150fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80150fc:	2901      	cmp	r1, #1
 80150fe:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8015102:	d103      	bne.n	801510c <stroke_path+0xafc>
 8015104:	6852      	ldr	r2, [r2, #4]
 8015106:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 801510a:	4313      	orrs	r3, r2
 801510c:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8015110:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8015114:	f44f 754d 	mov.w	r5, #820	@ 0x334
 8015118:	f44f 714c 	mov.w	r1, #816	@ 0x330
 801511c:	f44f 78a0 	mov.w	r8, #320	@ 0x140
 8015120:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015124:	f8c0 e000 	str.w	lr, [r0]
 8015128:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 801512c:	f8c0 c008 	str.w	ip, [r0, #8]
 8015130:	f8c0 e004 	str.w	lr, [r0, #4]
 8015134:	6185      	str	r5, [r0, #24]
 8015136:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015138:	6101      	str	r1, [r0, #16]
 801513a:	60c5      	str	r5, [r0, #12]
 801513c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 801513e:	f043 0304 	orr.w	r3, r3, #4
 8015142:	6141      	str	r1, [r0, #20]
 8015144:	6343      	str	r3, [r0, #52]	@ 0x34
 8015146:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8015148:	4b0b      	ldr	r3, [pc, #44]	@ (8015178 <stroke_path+0xb68>)
 801514a:	6247      	str	r7, [r0, #36]	@ 0x24
 801514c:	62c6      	str	r6, [r0, #44]	@ 0x2c
 801514e:	61c1      	str	r1, [r0, #28]
 8015150:	f8c0 8020 	str.w	r8, [r0, #32]
 8015154:	6282      	str	r2, [r0, #40]	@ 0x28
 8015156:	6303      	str	r3, [r0, #48]	@ 0x30
 8015158:	2300      	movs	r3, #0
 801515a:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 801515e:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8015162:	f7ff baed 	b.w	8014740 <stroke_path+0x130>
 8015166:	bf00      	nop
 8015168:	20082f70 	.word	0x20082f70
 801516c:	20082f6c 	.word	0x20082f6c
 8015170:	20082f68 	.word	0x20082f68
 8015174:	20000064 	.word	0x20000064
 8015178:	ff000100 	.word	0xff000100
 801517c:	20082f74 	.word	0x20082f74
 8015180:	20082f78 	.word	0x20082f78
 8015184:	f1ae 0705 	sub.w	r7, lr, #5
 8015188:	2f03      	cmp	r7, #3
 801518a:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801518e:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8015192:	d80b      	bhi.n	80151ac <stroke_path+0xb9c>
 8015194:	ee76 6aa6 	vadd.f32	s13, s13, s13
 8015198:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801519c:	ed9d 6a15 	vldr	s12, [sp, #84]	@ 0x54
 80151a0:	ed9d 7a16 	vldr	s14, [sp, #88]	@ 0x58
 80151a4:	ee76 6ac6 	vsub.f32	s13, s13, s12
 80151a8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80151ac:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 80151b0:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80151b4:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 80151b8:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 80151bc:	e5df      	b.n	8014d7e <stroke_path+0x76e>
 80151be:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 80151c2:	4cab      	ldr	r4, [pc, #684]	@ (8015470 <stroke_path+0xe60>)
 80151c4:	4dab      	ldr	r5, [pc, #684]	@ (8015474 <stroke_path+0xe64>)
 80151c6:	7821      	ldrb	r1, [r4, #0]
 80151c8:	ee39 7acc 	vsub.f32	s14, s19, s24
 80151cc:	ee79 7a6b 	vsub.f32	s15, s18, s23
 80151d0:	ee7c 5a2a 	vadd.f32	s11, s24, s21
 80151d4:	ee3a 4aa9 	vadd.f32	s8, s21, s19
 80151d8:	ee3b 5a8a 	vadd.f32	s10, s23, s20
 80151dc:	ee7a 4a09 	vadd.f32	s9, s20, s18
 80151e0:	ee3a 6a49 	vsub.f32	s12, s20, s18
 80151e4:	ee7a 6ae9 	vsub.f32	s13, s21, s19
 80151e8:	ee26 6a07 	vmul.f32	s12, s12, s14
 80151ec:	ee66 6aa7 	vmul.f32	s13, s13, s15
 80151f0:	ee65 5aa8 	vmul.f32	s11, s11, s17
 80151f4:	ee24 4a28 	vmul.f32	s8, s8, s17
 80151f8:	ee25 5a28 	vmul.f32	s10, s10, s17
 80151fc:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8015200:	ee35 ba84 	vadd.f32	s22, s11, s8
 8015204:	ee75 ca24 	vadd.f32	s25, s10, s9
 8015208:	ee27 7a07 	vmul.f32	s14, s14, s14
 801520c:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8015210:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8015214:	ee2b ba28 	vmul.f32	s22, s22, s17
 8015218:	ee6c caa8 	vmul.f32	s25, s25, s17
 801521c:	ee66 6aa6 	vmul.f32	s13, s13, s13
 8015220:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015224:	b339      	cbz	r1, 8015276 <stroke_path+0xc66>
 8015226:	eef4 6ae7 	vcmpe.f32	s13, s15
 801522a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801522e:	bfcc      	ite	gt
 8015230:	2301      	movgt	r3, #1
 8015232:	2300      	movle	r3, #0
 8015234:	b353      	cbz	r3, 801528c <stroke_path+0xc7c>
 8015236:	682b      	ldr	r3, [r5, #0]
 8015238:	2b09      	cmp	r3, #9
 801523a:	dc12      	bgt.n	8015262 <stroke_path+0xc52>
 801523c:	488e      	ldr	r0, [pc, #568]	@ (8015478 <stroke_path+0xe68>)
 801523e:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8015242:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8015246:	ed82 ba00 	vstr	s22, [r2]
 801524a:	edc2 ca01 	vstr	s25, [r2, #4]
 801524e:	ed82 4a02 	vstr	s8, [r2, #8]
 8015252:	edc2 4a03 	vstr	s9, [r2, #12]
 8015256:	edc2 9a04 	vstr	s19, [r2, #16]
 801525a:	ed82 9a05 	vstr	s18, [r2, #20]
 801525e:	3301      	adds	r3, #1
 8015260:	602b      	str	r3, [r5, #0]
 8015262:	3601      	adds	r6, #1
 8015264:	eeb0 9a6c 	vmov.f32	s18, s25
 8015268:	eef0 9a4b 	vmov.f32	s19, s22
 801526c:	eeb0 aa45 	vmov.f32	s20, s10
 8015270:	eef0 aa65 	vmov.f32	s21, s11
 8015274:	e7a8      	b.n	80151c8 <stroke_path+0xbb8>
 8015276:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801527a:	eef4 7ae6 	vcmpe.f32	s15, s13
 801527e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015282:	bf4c      	ite	mi
 8015284:	2301      	movmi	r3, #1
 8015286:	2300      	movpl	r3, #0
 8015288:	2b00      	cmp	r3, #0
 801528a:	d1d4      	bne.n	8015236 <stroke_path+0xc26>
 801528c:	eef0 1a6c 	vmov.f32	s3, s25
 8015290:	eeb0 1a4b 	vmov.f32	s2, s22
 8015294:	eef0 0a6b 	vmov.f32	s1, s23
 8015298:	eeb0 0a4c 	vmov.f32	s0, s24
 801529c:	f7fd fb04 	bl	80128a8 <raster_stroked_line_>
 80152a0:	eef0 1a49 	vmov.f32	s3, s18
 80152a4:	eeb0 1a69 	vmov.f32	s2, s19
 80152a8:	eef0 0a6c 	vmov.f32	s1, s25
 80152ac:	eeb0 0a4b 	vmov.f32	s0, s22
 80152b0:	f7fd fafa 	bl	80128a8 <raster_stroked_line_>
 80152b4:	682b      	ldr	r3, [r5, #0]
 80152b6:	3e01      	subs	r6, #1
 80152b8:	b193      	cbz	r3, 80152e0 <stroke_path+0xcd0>
 80152ba:	3b01      	subs	r3, #1
 80152bc:	496e      	ldr	r1, [pc, #440]	@ (8015478 <stroke_path+0xe68>)
 80152be:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80152c2:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 80152c6:	ed92 ca00 	vldr	s24, [r2]
 80152ca:	edd2 ba01 	vldr	s23, [r2, #4]
 80152ce:	edd2 aa02 	vldr	s21, [r2, #8]
 80152d2:	ed92 aa03 	vldr	s20, [r2, #12]
 80152d6:	edd2 9a04 	vldr	s19, [r2, #16]
 80152da:	ed92 9a05 	vldr	s18, [r2, #20]
 80152de:	602b      	str	r3, [r5, #0]
 80152e0:	2e00      	cmp	r6, #0
 80152e2:	f43f aa49 	beq.w	8014778 <stroke_path+0x168>
 80152e6:	7821      	ldrb	r1, [r4, #0]
 80152e8:	e76e      	b.n	80151c8 <stroke_path+0xbb8>
 80152ea:	a808      	add	r0, sp, #32
 80152ec:	f7fd ff3c 	bl	8013168 <fill_arc.isra.7>
 80152f0:	4604      	mov	r4, r0
 80152f2:	2800      	cmp	r0, #0
 80152f4:	f43f aa40 	beq.w	8014778 <stroke_path+0x168>
 80152f8:	f007 fb84 	bl	801ca04 <nema_vg_set_error>
 80152fc:	f7ff ba4b 	b.w	8014796 <stroke_path+0x186>
 8015300:	f1ae 0705 	sub.w	r7, lr, #5
 8015304:	2f03      	cmp	r7, #3
 8015306:	ed9d 5a13 	vldr	s10, [sp, #76]	@ 0x4c
 801530a:	eddd 5a14 	vldr	s11, [sp, #80]	@ 0x50
 801530e:	d91f      	bls.n	8015350 <stroke_path+0xd40>
 8015310:	eeb0 7a65 	vmov.f32	s14, s11
 8015314:	eef0 7a45 	vmov.f32	s15, s10
 8015318:	ed8d 7a10 	vstr	s14, [sp, #64]	@ 0x40
 801531c:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 8015320:	9009      	str	r0, [sp, #36]	@ 0x24
 8015322:	ed95 7a00 	vldr	s14, [r5]
 8015326:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 801532a:	3102      	adds	r1, #2
 801532c:	9109      	str	r1, [sp, #36]	@ 0x24
 801532e:	edd5 7a01 	vldr	s15, [r5, #4]
 8015332:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015336:	f1b8 0f00 	cmp.w	r8, #0
 801533a:	f43f ad19 	beq.w	8014d70 <stroke_path+0x760>
 801533e:	ee37 7a05 	vadd.f32	s14, s14, s10
 8015342:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8015346:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 801534a:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 801534e:	e50f      	b.n	8014d70 <stroke_path+0x760>
 8015350:	ed9d 7a15 	vldr	s14, [sp, #84]	@ 0x54
 8015354:	ee75 7a05 	vadd.f32	s15, s10, s10
 8015358:	ee35 6aa5 	vadd.f32	s12, s11, s11
 801535c:	eddd 6a16 	vldr	s13, [sp, #88]	@ 0x58
 8015360:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015364:	ee36 7a66 	vsub.f32	s14, s12, s13
 8015368:	e7d6      	b.n	8015318 <stroke_path+0xd08>
 801536a:	2507      	movs	r5, #7
 801536c:	e488      	b.n	8014c80 <stroke_path+0x670>
 801536e:	ee18 aa10 	vmov	sl, s16
 8015372:	eef0 8a48 	vmov.f32	s17, s16
 8015376:	e439      	b.n	8014bec <stroke_path+0x5dc>
 8015378:	4a40      	ldr	r2, [pc, #256]	@ (801547c <stroke_path+0xe6c>)
 801537a:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 801537e:	6812      	ldr	r2, [r2, #0]
 8015380:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 8015384:	2a00      	cmp	r2, #0
 8015386:	f000 81ac 	beq.w	80156e2 <stroke_path+0x10d2>
 801538a:	eef0 1a49 	vmov.f32	s3, s18
 801538e:	eeb0 1a68 	vmov.f32	s2, s17
 8015392:	eef0 0a4a 	vmov.f32	s1, s20
 8015396:	eeb0 0a69 	vmov.f32	s0, s19
 801539a:	f7fd fa85 	bl	80128a8 <raster_stroked_line_>
 801539e:	e6db      	b.n	8015158 <stroke_path+0xb48>
 80153a0:	9009      	str	r0, [sp, #36]	@ 0x24
 80153a2:	682a      	ldr	r2, [r5, #0]
 80153a4:	1c8b      	adds	r3, r1, #2
 80153a6:	9309      	str	r3, [sp, #36]	@ 0x24
 80153a8:	920f      	str	r2, [sp, #60]	@ 0x3c
 80153aa:	686b      	ldr	r3, [r5, #4]
 80153ac:	3103      	adds	r1, #3
 80153ae:	9310      	str	r3, [sp, #64]	@ 0x40
 80153b0:	9109      	str	r1, [sp, #36]	@ 0x24
 80153b2:	4b33      	ldr	r3, [pc, #204]	@ (8015480 <stroke_path+0xe70>)
 80153b4:	68aa      	ldr	r2, [r5, #8]
 80153b6:	edd3 0a00 	vldr	s1, [r3]
 80153ba:	ed93 0a03 	vldr	s0, [r3, #12]
 80153be:	9211      	str	r2, [sp, #68]	@ 0x44
 80153c0:	f01b fedc 	bl	803117c <atan2f>
 80153c4:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 80153c8:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 80153cc:	ee77 7a80 	vadd.f32	s15, s15, s0
 80153d0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80153d2:	f8d9 300c 	ldr.w	r3, [r9, #12]
 80153d6:	f8dd e04c 	ldr.w	lr, [sp, #76]	@ 0x4c
 80153da:	008d      	lsls	r5, r1, #2
 80153dc:	1c48      	adds	r0, r1, #1
 80153de:	4602      	mov	r2, r0
 80153e0:	9502      	str	r5, [sp, #8]
 80153e2:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 80153e6:	edcd 7a11 	vstr	s15, [sp, #68]	@ 0x44
 80153ea:	eb03 0c05 	add.w	ip, r3, r5
 80153ee:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 80153f2:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 80153f6:	f7ff b96a 	b.w	80146ce <stroke_path+0xbe>
 80153fa:	6852      	ldr	r2, [r2, #4]
 80153fc:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015400:	4313      	orrs	r3, r2
 8015402:	e408      	b.n	8014c16 <stroke_path+0x606>
 8015404:	684b      	ldr	r3, [r1, #4]
 8015406:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801540a:	431c      	orrs	r4, r3
 801540c:	e5ca      	b.n	8014fa4 <stroke_path+0x994>
 801540e:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8015412:	2d00      	cmp	r5, #0
 8015414:	bf18      	it	ne
 8015416:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 801541a:	4b1a      	ldr	r3, [pc, #104]	@ (8015484 <stroke_path+0xe74>)
 801541c:	4015      	ands	r5, r2
 801541e:	781b      	ldrb	r3, [r3, #0]
 8015420:	2b01      	cmp	r3, #1
 8015422:	d104      	bne.n	801542e <stroke_path+0xe1e>
 8015424:	4b17      	ldr	r3, [pc, #92]	@ (8015484 <stroke_path+0xe74>)
 8015426:	685b      	ldr	r3, [r3, #4]
 8015428:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801542c:	431d      	orrs	r5, r3
 801542e:	2005      	movs	r0, #5
 8015430:	f008 fc40 	bl	801dcb4 <nema_cl_get_space>
 8015434:	2800      	cmp	r0, #0
 8015436:	f43f ad19 	beq.w	8014e6c <stroke_path+0x85c>
 801543a:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 801543e:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8015442:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8015446:	f44f 734d 	mov.w	r3, #820	@ 0x334
 801544a:	f045 050a 	orr.w	r5, r5, #10
 801544e:	6245      	str	r5, [r0, #36]	@ 0x24
 8015450:	4d0d      	ldr	r5, [pc, #52]	@ (8015488 <stroke_path+0xe78>)
 8015452:	edc0 9a01 	vstr	s19, [r0, #4]
 8015456:	ed80 aa03 	vstr	s20, [r0, #12]
 801545a:	edc0 8a05 	vstr	s17, [r0, #20]
 801545e:	ed80 9a07 	vstr	s18, [r0, #28]
 8015462:	6205      	str	r5, [r0, #32]
 8015464:	f8c0 c000 	str.w	ip, [r0]
 8015468:	6081      	str	r1, [r0, #8]
 801546a:	6102      	str	r2, [r0, #16]
 801546c:	6183      	str	r3, [r0, #24]
 801546e:	e4fd      	b.n	8014e6c <stroke_path+0x85c>
 8015470:	20082f7c 	.word	0x20082f7c
 8015474:	20083104 	.word	0x20083104
 8015478:	20083014 	.word	0x20083014
 801547c:	20082f70 	.word	0x20082f70
 8015480:	20082fec 	.word	0x20082fec
 8015484:	20000064 	.word	0x20000064
 8015488:	ff000100 	.word	0xff000100
 801548c:	4626      	mov	r6, r4
 801548e:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8015492:	eddd da0b 	vldr	s27, [sp, #44]	@ 0x2c
 8015496:	ed9d da0c 	vldr	s26, [sp, #48]	@ 0x30
 801549a:	eddd ca0f 	vldr	s25, [sp, #60]	@ 0x3c
 801549e:	ed9d ca10 	vldr	s24, [sp, #64]	@ 0x40
 80154a2:	eddd ba11 	vldr	s23, [sp, #68]	@ 0x44
 80154a6:	ed9d ba12 	vldr	s22, [sp, #72]	@ 0x48
 80154aa:	eddd aa0d 	vldr	s21, [sp, #52]	@ 0x34
 80154ae:	ed9d aa0e 	vldr	s20, [sp, #56]	@ 0x38
 80154b2:	4dc5      	ldr	r5, [pc, #788]	@ (80157c8 <stroke_path+0x11b8>)
 80154b4:	ee7d 4aac 	vadd.f32	s9, s27, s25
 80154b8:	ee7c 7aab 	vadd.f32	s15, s25, s23
 80154bc:	ee3b 5aaa 	vadd.f32	s10, s23, s21
 80154c0:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80154c4:	ee64 4aa8 	vmul.f32	s9, s9, s17
 80154c8:	ee25 5a28 	vmul.f32	s10, s10, s17
 80154cc:	ee74 3aa7 	vadd.f32	s7, s9, s15
 80154d0:	ee37 6a85 	vadd.f32	s12, s15, s10
 80154d4:	ee3d 4a0c 	vadd.f32	s8, s26, s24
 80154d8:	ee7c 7a0b 	vadd.f32	s15, s24, s22
 80154dc:	ee7b 5a0a 	vadd.f32	s11, s22, s20
 80154e0:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80154e4:	ee24 4a28 	vmul.f32	s8, s8, s17
 80154e8:	ee65 5aa8 	vmul.f32	s11, s11, s17
 80154ec:	ee34 3a27 	vadd.f32	s6, s8, s15
 80154f0:	ee63 3aa8 	vmul.f32	s7, s7, s17
 80154f4:	ee26 6a28 	vmul.f32	s12, s12, s17
 80154f8:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80154fc:	ee33 9a86 	vadd.f32	s18, s7, s12
 8015500:	ee3d 7aaa 	vadd.f32	s14, s27, s21
 8015504:	ee23 3a28 	vmul.f32	s6, s6, s17
 8015508:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801550c:	ee29 9a28 	vmul.f32	s18, s18, s17
 8015510:	ee27 7a28 	vmul.f32	s14, s14, s17
 8015514:	ee73 9a27 	vadd.f32	s19, s6, s15
 8015518:	ee7d 6a0a 	vadd.f32	s13, s26, s20
 801551c:	ee37 7a49 	vsub.f32	s14, s14, s18
 8015520:	ee69 9aa8 	vmul.f32	s19, s19, s17
 8015524:	ee66 6aa8 	vmul.f32	s13, s13, s17
 8015528:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801552c:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8015530:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015534:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8015538:	bf48      	it	mi
 801553a:	eeb1 7a47 	vnegmi.f32	s14, s14
 801553e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015542:	bf48      	it	mi
 8015544:	eef1 6a66 	vnegmi.f32	s13, s13
 8015548:	b94e      	cbnz	r6, 801555e <stroke_path+0xf4e>
 801554a:	eeb4 7ae8 	vcmpe.f32	s14, s17
 801554e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015552:	d504      	bpl.n	801555e <stroke_path+0xf4e>
 8015554:	eef4 6ae8 	vcmpe.f32	s13, s17
 8015558:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801555c:	d424      	bmi.n	80155a8 <stroke_path+0xf98>
 801555e:	682a      	ldr	r2, [r5, #0]
 8015560:	2a09      	cmp	r2, #9
 8015562:	dc21      	bgt.n	80155a8 <stroke_path+0xf98>
 8015564:	4999      	ldr	r1, [pc, #612]	@ (80157cc <stroke_path+0x11bc>)
 8015566:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801556a:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 801556e:	3201      	adds	r2, #1
 8015570:	edc3 aa04 	vstr	s21, [r3, #16]
 8015574:	ed83 aa05 	vstr	s20, [r3, #20]
 8015578:	3401      	adds	r4, #1
 801557a:	eeb0 ba43 	vmov.f32	s22, s6
 801557e:	eef0 ba63 	vmov.f32	s23, s7
 8015582:	eeb0 ca44 	vmov.f32	s24, s8
 8015586:	eef0 ca64 	vmov.f32	s25, s9
 801558a:	ed83 6a00 	vstr	s12, [r3]
 801558e:	edc3 7a01 	vstr	s15, [r3, #4]
 8015592:	ed83 5a02 	vstr	s10, [r3, #8]
 8015596:	edc3 5a03 	vstr	s11, [r3, #12]
 801559a:	602a      	str	r2, [r5, #0]
 801559c:	eeb0 aa69 	vmov.f32	s20, s19
 80155a0:	eef0 aa49 	vmov.f32	s21, s18
 80155a4:	2600      	movs	r6, #0
 80155a6:	e785      	b.n	80154b4 <stroke_path+0xea4>
 80155a8:	eef0 1a69 	vmov.f32	s3, s19
 80155ac:	eeb0 1a49 	vmov.f32	s2, s18
 80155b0:	eef0 0a4d 	vmov.f32	s1, s26
 80155b4:	eeb0 0a6d 	vmov.f32	s0, s27
 80155b8:	f7fd f976 	bl	80128a8 <raster_stroked_line_>
 80155bc:	eef0 1a4a 	vmov.f32	s3, s20
 80155c0:	eeb0 1a6a 	vmov.f32	s2, s21
 80155c4:	eef0 0a69 	vmov.f32	s1, s19
 80155c8:	eeb0 0a49 	vmov.f32	s0, s18
 80155cc:	f7fd f96c 	bl	80128a8 <raster_stroked_line_>
 80155d0:	682a      	ldr	r2, [r5, #0]
 80155d2:	3c01      	subs	r4, #1
 80155d4:	b1b2      	cbz	r2, 8015604 <stroke_path+0xff4>
 80155d6:	3a01      	subs	r2, #1
 80155d8:	497c      	ldr	r1, [pc, #496]	@ (80157cc <stroke_path+0x11bc>)
 80155da:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80155de:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80155e2:	eeb0 da4a 	vmov.f32	s26, s20
 80155e6:	eef0 da6a 	vmov.f32	s27, s21
 80155ea:	edd3 ca00 	vldr	s25, [r3]
 80155ee:	ed93 ca01 	vldr	s24, [r3, #4]
 80155f2:	edd3 ba02 	vldr	s23, [r3, #8]
 80155f6:	ed93 ba03 	vldr	s22, [r3, #12]
 80155fa:	ed93 aa05 	vldr	s20, [r3, #20]
 80155fe:	edd3 aa04 	vldr	s21, [r3, #16]
 8015602:	602a      	str	r2, [r5, #0]
 8015604:	2c00      	cmp	r4, #0
 8015606:	f47f af55 	bne.w	80154b4 <stroke_path+0xea4>
 801560a:	f7ff b8b5 	b.w	8014778 <stroke_path+0x168>
 801560e:	f1ba 0f0b 	cmp.w	sl, #11
 8015612:	f47f abb4 	bne.w	8014d7e <stroke_path+0x76e>
 8015616:	9009      	str	r0, [sp, #36]	@ 0x24
 8015618:	eddc 7a00 	vldr	s15, [ip]
 801561c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015620:	ee17 1a90 	vmov	r1, s15
 8015624:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8015628:	1049      	asrs	r1, r1, #1
 801562a:	2900      	cmp	r1, #0
 801562c:	9102      	str	r1, [sp, #8]
 801562e:	f340 8132 	ble.w	8015896 <stroke_path+0x1286>
 8015632:	2100      	movs	r1, #0
 8015634:	4d66      	ldr	r5, [pc, #408]	@ (80157d0 <stroke_path+0x11c0>)
 8015636:	f8cd a014 	str.w	sl, [sp, #20]
 801563a:	f8cd 800c 	str.w	r8, [sp, #12]
 801563e:	46aa      	mov	sl, r5
 8015640:	46c8      	mov	r8, r9
 8015642:	46a1      	mov	r9, r4
 8015644:	460c      	mov	r4, r1
 8015646:	e038      	b.n	80156ba <stroke_path+0x10aa>
 8015648:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801564c:	ee78 8a81 	vadd.f32	s17, s17, s2
 8015650:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8015654:	9209      	str	r2, [sp, #36]	@ 0x24
 8015656:	ed91 9a00 	vldr	s18, [r1]
 801565a:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801565e:	ee39 9a21 	vadd.f32	s18, s18, s3
 8015662:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8015666:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 801566a:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 801566e:	f8da 3000 	ldr.w	r3, [sl]
 8015672:	f88d 9064 	strb.w	r9, [sp, #100]	@ 0x64
 8015676:	7f1a      	ldrb	r2, [r3, #28]
 8015678:	2a00      	cmp	r2, #0
 801567a:	d161      	bne.n	8015740 <stroke_path+0x1130>
 801567c:	4a55      	ldr	r2, [pc, #340]	@ (80157d4 <stroke_path+0x11c4>)
 801567e:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 8015682:	6812      	ldr	r2, [r2, #0]
 8015684:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 8015688:	2a00      	cmp	r2, #0
 801568a:	f000 80d3 	beq.w	8015834 <stroke_path+0x1224>
 801568e:	eef0 1a49 	vmov.f32	s3, s18
 8015692:	eeb0 1a68 	vmov.f32	s2, s17
 8015696:	eef0 0a4a 	vmov.f32	s1, s20
 801569a:	eeb0 0a69 	vmov.f32	s0, s19
 801569e:	f7fd f903 	bl	80128a8 <raster_stroked_line_>
 80156a2:	e897 0003 	ldmia.w	r7, {r0, r1}
 80156a6:	9b02      	ldr	r3, [sp, #8]
 80156a8:	3401      	adds	r4, #1
 80156aa:	429c      	cmp	r4, r3
 80156ac:	e886 0003 	stmia.w	r6, {r0, r1}
 80156b0:	f000 809a 	beq.w	80157e8 <stroke_path+0x11d8>
 80156b4:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80156b8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80156ba:	0090      	lsls	r0, r2, #2
 80156bc:	1d01      	adds	r1, r0, #4
 80156be:	4419      	add	r1, r3
 80156c0:	9d03      	ldr	r5, [sp, #12]
 80156c2:	4403      	add	r3, r0
 80156c4:	1c50      	adds	r0, r2, #1
 80156c6:	9009      	str	r0, [sp, #36]	@ 0x24
 80156c8:	3202      	adds	r2, #2
 80156ca:	edd3 8a00 	vldr	s17, [r3]
 80156ce:	2d00      	cmp	r5, #0
 80156d0:	d1ba      	bne.n	8015648 <stroke_path+0x1038>
 80156d2:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 80156d6:	9209      	str	r2, [sp, #36]	@ 0x24
 80156d8:	ed91 9a00 	vldr	s18, [r1]
 80156dc:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 80156e0:	e7c1      	b.n	8015666 <stroke_path+0x1056>
 80156e2:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80156e4:	493c      	ldr	r1, [pc, #240]	@ (80157d8 <stroke_path+0x11c8>)
 80156e6:	2a00      	cmp	r2, #0
 80156e8:	bf18      	it	ne
 80156ea:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 80156ee:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80156f0:	780b      	ldrb	r3, [r1, #0]
 80156f2:	4015      	ands	r5, r2
 80156f4:	2b01      	cmp	r3, #1
 80156f6:	d103      	bne.n	8015700 <stroke_path+0x10f0>
 80156f8:	684b      	ldr	r3, [r1, #4]
 80156fa:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80156fe:	431d      	orrs	r5, r3
 8015700:	2005      	movs	r0, #5
 8015702:	f008 fad7 	bl	801dcb4 <nema_cl_get_space>
 8015706:	2800      	cmp	r0, #0
 8015708:	f43f ad26 	beq.w	8015158 <stroke_path+0xb48>
 801570c:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8015710:	f44f 7649 	mov.w	r6, #804	@ 0x324
 8015714:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8015718:	f44f 724d 	mov.w	r2, #820	@ 0x334
 801571c:	4b2f      	ldr	r3, [pc, #188]	@ (80157dc <stroke_path+0x11cc>)
 801571e:	f045 050a 	orr.w	r5, r5, #10
 8015722:	6245      	str	r5, [r0, #36]	@ 0x24
 8015724:	edc0 9a01 	vstr	s19, [r0, #4]
 8015728:	ed80 aa03 	vstr	s20, [r0, #12]
 801572c:	edc0 8a05 	vstr	s17, [r0, #20]
 8015730:	ed80 9a07 	vstr	s18, [r0, #28]
 8015734:	6007      	str	r7, [r0, #0]
 8015736:	6086      	str	r6, [r0, #8]
 8015738:	6101      	str	r1, [r0, #16]
 801573a:	6182      	str	r2, [r0, #24]
 801573c:	6203      	str	r3, [r0, #32]
 801573e:	e50b      	b.n	8015158 <stroke_path+0xb48>
 8015740:	4a27      	ldr	r2, [pc, #156]	@ (80157e0 <stroke_path+0x11d0>)
 8015742:	4b28      	ldr	r3, [pc, #160]	@ (80157e4 <stroke_path+0x11d4>)
 8015744:	6812      	ldr	r2, [r2, #0]
 8015746:	2007      	movs	r0, #7
 8015748:	9204      	str	r2, [sp, #16]
 801574a:	681d      	ldr	r5, [r3, #0]
 801574c:	f008 fab2 	bl	801dcb4 <nema_cl_get_space>
 8015750:	2800      	cmp	r0, #0
 8015752:	d0a6      	beq.n	80156a2 <stroke_path+0x1092>
 8015754:	4a20      	ldr	r2, [pc, #128]	@ (80157d8 <stroke_path+0x11c8>)
 8015756:	f8da 3000 	ldr.w	r3, [sl]
 801575a:	7812      	ldrb	r2, [r2, #0]
 801575c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801575e:	2a01      	cmp	r2, #1
 8015760:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8015764:	d104      	bne.n	8015770 <stroke_path+0x1160>
 8015766:	4a1c      	ldr	r2, [pc, #112]	@ (80157d8 <stroke_path+0x11c8>)
 8015768:	6852      	ldr	r2, [r2, #4]
 801576a:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 801576e:	4313      	orrs	r3, r2
 8015770:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8015774:	6002      	str	r2, [r0, #0]
 8015776:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 801577a:	f44f 7249 	mov.w	r2, #804	@ 0x324
 801577e:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8015782:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8015786:	6082      	str	r2, [r0, #8]
 8015788:	edc0 7a01 	vstr	s15, [r0, #4]
 801578c:	f8c0 e018 	str.w	lr, [r0, #24]
 8015790:	f8dd e030 	ldr.w	lr, [sp, #48]	@ 0x30
 8015794:	f8c0 c010 	str.w	ip, [r0, #16]
 8015798:	f8c0 e00c 	str.w	lr, [r0, #12]
 801579c:	f043 0304 	orr.w	r3, r3, #4
 80157a0:	f8dd c034 	ldr.w	ip, [sp, #52]	@ 0x34
 80157a4:	6343      	str	r3, [r0, #52]	@ 0x34
 80157a6:	9b04      	ldr	r3, [sp, #16]
 80157a8:	f8c0 c014 	str.w	ip, [r0, #20]
 80157ac:	6243      	str	r3, [r0, #36]	@ 0x24
 80157ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80157b0:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80157b4:	61c3      	str	r3, [r0, #28]
 80157b6:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 80157ba:	4a08      	ldr	r2, [pc, #32]	@ (80157dc <stroke_path+0x11cc>)
 80157bc:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80157be:	6302      	str	r2, [r0, #48]	@ 0x30
 80157c0:	6201      	str	r1, [r0, #32]
 80157c2:	6283      	str	r3, [r0, #40]	@ 0x28
 80157c4:	e76d      	b.n	80156a2 <stroke_path+0x1092>
 80157c6:	bf00      	nop
 80157c8:	20083104 	.word	0x20083104
 80157cc:	20083014 	.word	0x20083014
 80157d0:	20082f68 	.word	0x20082f68
 80157d4:	20082f70 	.word	0x20082f70
 80157d8:	20000064 	.word	0x20000064
 80157dc:	ff000100 	.word	0xff000100
 80157e0:	20082f74 	.word	0x20082f74
 80157e4:	20082f78 	.word	0x20082f78
 80157e8:	464c      	mov	r4, r9
 80157ea:	46c1      	mov	r9, r8
 80157ec:	4655      	mov	r5, sl
 80157ee:	f8dd a014 	ldr.w	sl, [sp, #20]
 80157f2:	682b      	ldr	r3, [r5, #0]
 80157f4:	7f1b      	ldrb	r3, [r3, #28]
 80157f6:	b1b3      	cbz	r3, 8015826 <stroke_path+0x1216>
 80157f8:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 80157fc:	eddd 7a17 	vldr	s15, [sp, #92]	@ 0x5c
 8015800:	ee77 7a67 	vsub.f32	s15, s14, s15
 8015804:	eef5 7a40 	vcmp.f32	s15, #0.0
 8015808:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801580c:	d10b      	bne.n	8015826 <stroke_path+0x1216>
 801580e:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8015812:	eddd 7a18 	vldr	s15, [sp, #96]	@ 0x60
 8015816:	ee77 7a67 	vsub.f32	s15, s14, s15
 801581a:	eef5 7a40 	vcmp.f32	s15, #0.0
 801581e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015822:	f43f ac99 	beq.w	8015158 <stroke_path+0xb48>
 8015826:	2301      	movs	r3, #1
 8015828:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 801582c:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8015830:	f7fe bf86 	b.w	8014740 <stroke_path+0x130>
 8015834:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8015838:	2d00      	cmp	r5, #0
 801583a:	bf18      	it	ne
 801583c:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 8015840:	4b16      	ldr	r3, [pc, #88]	@ (801589c <stroke_path+0x128c>)
 8015842:	4015      	ands	r5, r2
 8015844:	781b      	ldrb	r3, [r3, #0]
 8015846:	2b01      	cmp	r3, #1
 8015848:	d104      	bne.n	8015854 <stroke_path+0x1244>
 801584a:	4b14      	ldr	r3, [pc, #80]	@ (801589c <stroke_path+0x128c>)
 801584c:	685b      	ldr	r3, [r3, #4]
 801584e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015852:	431d      	orrs	r5, r3
 8015854:	2005      	movs	r0, #5
 8015856:	f008 fa2d 	bl	801dcb4 <nema_cl_get_space>
 801585a:	2800      	cmp	r0, #0
 801585c:	f43f af21 	beq.w	80156a2 <stroke_path+0x1092>
 8015860:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8015864:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8015868:	f44f 724c 	mov.w	r2, #816	@ 0x330
 801586c:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8015870:	f045 050a 	orr.w	r5, r5, #10
 8015874:	6245      	str	r5, [r0, #36]	@ 0x24
 8015876:	4d0a      	ldr	r5, [pc, #40]	@ (80158a0 <stroke_path+0x1290>)
 8015878:	edc0 9a01 	vstr	s19, [r0, #4]
 801587c:	ed80 aa03 	vstr	s20, [r0, #12]
 8015880:	edc0 8a05 	vstr	s17, [r0, #20]
 8015884:	ed80 9a07 	vstr	s18, [r0, #28]
 8015888:	6205      	str	r5, [r0, #32]
 801588a:	f8c0 c000 	str.w	ip, [r0]
 801588e:	6081      	str	r1, [r0, #8]
 8015890:	6102      	str	r2, [r0, #16]
 8015892:	6183      	str	r3, [r0, #24]
 8015894:	e705      	b.n	80156a2 <stroke_path+0x1092>
 8015896:	4d03      	ldr	r5, [pc, #12]	@ (80158a4 <stroke_path+0x1294>)
 8015898:	e7ab      	b.n	80157f2 <stroke_path+0x11e2>
 801589a:	bf00      	nop
 801589c:	20000064 	.word	0x20000064
 80158a0:	ff000100 	.word	0xff000100
 80158a4:	20082f68 	.word	0x20082f68

080158a8 <fill_path_even_odd>:
 80158a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158ac:	ed2d 8b06 	vpush	{d8-d10}
 80158b0:	edd0 6a17 	vldr	s13, [r0, #92]	@ 0x5c
 80158b4:	edd0 7a15 	vldr	s15, [r0, #84]	@ 0x54
 80158b8:	ed90 7a14 	vldr	s14, [r0, #80]	@ 0x50
 80158bc:	ed90 6a16 	vldr	s12, [r0, #88]	@ 0x58
 80158c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80158c4:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 80158c8:	ee37 7a06 	vadd.f32	s14, s14, s12
 80158cc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80158d0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80158d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80158d8:	ee17 4a90 	vmov	r4, s15
 80158dc:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 80158e0:	ee17 5a90 	vmov	r5, s15
 80158e4:	4b93      	ldr	r3, [pc, #588]	@ (8015b34 <fill_path_even_odd+0x28c>)
 80158e6:	0424      	lsls	r4, r4, #16
 80158e8:	601c      	str	r4, [r3, #0]
 80158ea:	4b93      	ldr	r3, [pc, #588]	@ (8015b38 <fill_path_even_odd+0x290>)
 80158ec:	b099      	sub	sp, #100	@ 0x64
 80158ee:	4682      	mov	sl, r0
 80158f0:	042d      	lsls	r5, r5, #16
 80158f2:	2002      	movs	r0, #2
 80158f4:	601d      	str	r5, [r3, #0]
 80158f6:	f008 f9dd 	bl	801dcb4 <nema_cl_get_space>
 80158fa:	b138      	cbz	r0, 801590c <fill_path_even_odd+0x64>
 80158fc:	f44f 7286 	mov.w	r2, #268	@ 0x10c
 8015900:	f44f 7394 	mov.w	r3, #296	@ 0x128
 8015904:	6045      	str	r5, [r0, #4]
 8015906:	60c4      	str	r4, [r0, #12]
 8015908:	6002      	str	r2, [r0, #0]
 801590a:	6083      	str	r3, [r0, #8]
 801590c:	2246      	movs	r2, #70	@ 0x46
 801590e:	2100      	movs	r1, #0
 8015910:	f10d 001a 	add.w	r0, sp, #26
 8015914:	f01c ffbf 	bl	8032896 <memset>
 8015918:	f240 1201 	movw	r2, #257	@ 0x101
 801591c:	2400      	movs	r4, #0
 801591e:	2301      	movs	r3, #1
 8015920:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015924:	f8da 2000 	ldr.w	r2, [sl]
 8015928:	f88d 301a 	strb.w	r3, [sp, #26]
 801592c:	42a2      	cmp	r2, r4
 801592e:	f8df b218 	ldr.w	fp, [pc, #536]	@ 8015b48 <fill_path_even_odd+0x2a0>
 8015932:	ed9f 9a82 	vldr	s18, [pc, #520]	@ 8015b3c <fill_path_even_odd+0x294>
 8015936:	f240 80f1 	bls.w	8015b1c <fill_path_even_odd+0x274>
 801593a:	f8da 3008 	ldr.w	r3, [sl, #8]
 801593e:	f10d 082c 	add.w	r8, sp, #44	@ 0x2c
 8015942:	5d1d      	ldrb	r5, [r3, r4]
 8015944:	af09      	add	r7, sp, #36	@ 0x24
 8015946:	f005 066f 	and.w	r6, r5, #111	@ 0x6f
 801594a:	f005 0310 	and.w	r3, r5, #16
 801594e:	2e01      	cmp	r6, #1
 8015950:	e898 0003 	ldmia.w	r8, {r0, r1}
 8015954:	f104 0901 	add.w	r9, r4, #1
 8015958:	9301      	str	r3, [sp, #4]
 801595a:	e887 0003 	stmia.w	r7, {r0, r1}
 801595e:	f000 815f 	beq.w	8015c20 <fill_path_even_odd+0x378>
 8015962:	0669      	lsls	r1, r5, #25
 8015964:	f000 80f2 	beq.w	8015b4c <fill_path_even_odd+0x2a4>
 8015968:	9907      	ldr	r1, [sp, #28]
 801596a:	f89d c05c 	ldrb.w	ip, [sp, #92]	@ 0x5c
 801596e:	b911      	cbnz	r1, 8015976 <fill_path_even_odd+0xce>
 8015970:	2301      	movs	r3, #1
 8015972:	f88d 3018 	strb.w	r3, [sp, #24]
 8015976:	2200      	movs	r2, #0
 8015978:	f8da 300c 	ldr.w	r3, [sl, #12]
 801597c:	0088      	lsls	r0, r1, #2
 801597e:	181c      	adds	r4, r3, r0
 8015980:	9003      	str	r0, [sp, #12]
 8015982:	2e06      	cmp	r6, #6
 8015984:	f101 0001 	add.w	r0, r1, #1
 8015988:	46a6      	mov	lr, r4
 801598a:	f88d 201a 	strb.w	r2, [sp, #26]
 801598e:	9004      	str	r0, [sp, #16]
 8015990:	f000 8232 	beq.w	8015df8 <fill_path_even_odd+0x550>
 8015994:	2e05      	cmp	r6, #5
 8015996:	f000 837d 	beq.w	8016094 <fill_path_even_odd+0x7ec>
 801599a:	2e07      	cmp	r6, #7
 801599c:	f00c 0c6f 	and.w	ip, ip, #111	@ 0x6f
 80159a0:	f000 841e 	beq.w	80161e0 <fill_path_even_odd+0x938>
 80159a4:	2e08      	cmp	r6, #8
 80159a6:	f000 828c 	beq.w	8015ec2 <fill_path_even_odd+0x61a>
 80159aa:	f005 020f 	and.w	r2, r5, #15
 80159ae:	2a09      	cmp	r2, #9
 80159b0:	9202      	str	r2, [sp, #8]
 80159b2:	f000 84cf 	beq.w	8016354 <fill_path_even_odd+0xaac>
 80159b6:	2e04      	cmp	r6, #4
 80159b8:	f040 82ac 	bne.w	8015f14 <fill_path_even_odd+0x66c>
 80159bc:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 80159c0:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 80159c4:	9b01      	ldr	r3, [sp, #4]
 80159c6:	9007      	str	r0, [sp, #28]
 80159c8:	edde 7a00 	vldr	s15, [lr]
 80159cc:	2b00      	cmp	r3, #0
 80159ce:	f000 834c 	beq.w	801606a <fill_path_even_odd+0x7c2>
 80159d2:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 80159d6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80159da:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 80159de:	f8db 3000 	ldr.w	r3, [fp]
 80159e2:	7f1b      	ldrb	r3, [r3, #28]
 80159e4:	2b00      	cmp	r3, #0
 80159e6:	f000 8249 	beq.w	8015e7c <fill_path_even_odd+0x5d4>
 80159ea:	ed9d 7a15 	vldr	s14, [sp, #84]	@ 0x54
 80159ee:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80159f2:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80159f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80159fa:	d109      	bne.n	8015a10 <fill_path_even_odd+0x168>
 80159fc:	ed9d 7a16 	vldr	s14, [sp, #88]	@ 0x58
 8015a00:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8015a04:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8015a08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015a0c:	f000 840e 	beq.w	801622c <fill_path_even_odd+0x984>
 8015a10:	2301      	movs	r3, #1
 8015a12:	f88d 3019 	strb.w	r3, [sp, #25]
 8015a16:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8015a1a:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015a1e:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015a22:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015a26:	2b00      	cmp	r3, #0
 8015a28:	f040 80f6 	bne.w	8015c18 <fill_path_even_odd+0x370>
 8015a2c:	2e06      	cmp	r6, #6
 8015a2e:	f040 80a7 	bne.w	8015b80 <fill_path_even_odd+0x2d8>
 8015a32:	f8db 2000 	ldr.w	r2, [fp]
 8015a36:	4b42      	ldr	r3, [pc, #264]	@ (8015b40 <fill_path_even_odd+0x298>)
 8015a38:	6a94      	ldr	r4, [r2, #40]	@ 0x28
 8015a3a:	4a3f      	ldr	r2, [pc, #252]	@ (8015b38 <fill_path_even_odd+0x290>)
 8015a3c:	781b      	ldrb	r3, [r3, #0]
 8015a3e:	2c00      	cmp	r4, #0
 8015a40:	6816      	ldr	r6, [r2, #0]
 8015a42:	4a3c      	ldr	r2, [pc, #240]	@ (8015b34 <fill_path_even_odd+0x28c>)
 8015a44:	bf18      	it	ne
 8015a46:	f04f 64f0 	movne.w	r4, #125829120	@ 0x7800000
 8015a4a:	2b01      	cmp	r3, #1
 8015a4c:	6815      	ldr	r5, [r2, #0]
 8015a4e:	d104      	bne.n	8015a5a <fill_path_even_odd+0x1b2>
 8015a50:	4b3b      	ldr	r3, [pc, #236]	@ (8015b40 <fill_path_even_odd+0x298>)
 8015a52:	685b      	ldr	r3, [r3, #4]
 8015a54:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015a58:	431c      	orrs	r4, r3
 8015a5a:	2010      	movs	r0, #16
 8015a5c:	f008 f92a 	bl	801dcb4 <nema_cl_get_space>
 8015a60:	2800      	cmp	r0, #0
 8015a62:	f000 80d9 	beq.w	8015c18 <fill_path_even_odd+0x370>
 8015a66:	f44f 714a 	mov.w	r1, #808	@ 0x328
 8015a6a:	6001      	str	r1, [r0, #0]
 8015a6c:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 8015a70:	f44f 784b 	mov.w	r8, #812	@ 0x32c
 8015a74:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8015a78:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8015a7c:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8015a80:	f8c0 8008 	str.w	r8, [r0, #8]
 8015a84:	edc0 7a01 	vstr	s15, [r0, #4]
 8015a88:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8015a8c:	f8c0 e010 	str.w	lr, [r0, #16]
 8015a90:	f8c0 800c 	str.w	r8, [r0, #12]
 8015a94:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8015a98:	f8c0 c018 	str.w	ip, [r0, #24]
 8015a9c:	f8c0 e014 	str.w	lr, [r0, #20]
 8015aa0:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 8015aa4:	6202      	str	r2, [r0, #32]
 8015aa6:	f8c0 e01c 	str.w	lr, [r0, #28]
 8015aaa:	6482      	str	r2, [r0, #72]	@ 0x48
 8015aac:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015aae:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8015ab2:	64c2      	str	r2, [r0, #76]	@ 0x4c
 8015ab4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015ab6:	f44f 77a0 	mov.w	r7, #320	@ 0x140
 8015aba:	6542      	str	r2, [r0, #84]	@ 0x54
 8015abc:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015ac0:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8015ac4:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8015ac8:	6346      	str	r6, [r0, #52]	@ 0x34
 8015aca:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
 8015ace:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 8015ad0:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8015ad2:	6283      	str	r3, [r0, #40]	@ 0x28
 8015ad4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015ad6:	6503      	str	r3, [r0, #80]	@ 0x50
 8015ad8:	4b1a      	ldr	r3, [pc, #104]	@ (8015b44 <fill_path_even_odd+0x29c>)
 8015ada:	6382      	str	r2, [r0, #56]	@ 0x38
 8015adc:	f044 0204 	orr.w	r2, r4, #4
 8015ae0:	6307      	str	r7, [r0, #48]	@ 0x30
 8015ae2:	6581      	str	r1, [r0, #88]	@ 0x58
 8015ae4:	e9c0 3210 	strd	r3, r2, [r0, #64]	@ 0x40
 8015ae8:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8015aea:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8015aee:	65c6      	str	r6, [r0, #92]	@ 0x5c
 8015af0:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8015af4:	f44f 7651 	mov.w	r6, #836	@ 0x344
 8015af8:	f044 0407 	orr.w	r4, r4, #7
 8015afc:	e9c0 341e 	strd	r3, r4, [r0, #120]	@ 0x78
 8015b00:	464c      	mov	r4, r9
 8015b02:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8015b04:	f8c0 c06c 	str.w	ip, [r0, #108]	@ 0x6c
 8015b08:	6745      	str	r5, [r0, #116]	@ 0x74
 8015b0a:	6647      	str	r7, [r0, #100]	@ 0x64
 8015b0c:	6606      	str	r6, [r0, #96]	@ 0x60
 8015b0e:	6681      	str	r1, [r0, #104]	@ 0x68
 8015b10:	6702      	str	r2, [r0, #112]	@ 0x70
 8015b12:	f8da 2000 	ldr.w	r2, [sl]
 8015b16:	42a2      	cmp	r2, r4
 8015b18:	f63f af0f 	bhi.w	801593a <fill_path_even_odd+0x92>
 8015b1c:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8015b20:	2b01      	cmp	r3, #1
 8015b22:	f000 8395 	beq.w	8016250 <fill_path_even_odd+0x9a8>
 8015b26:	2500      	movs	r5, #0
 8015b28:	4628      	mov	r0, r5
 8015b2a:	b019      	add	sp, #100	@ 0x64
 8015b2c:	ecbd 8b06 	vpop	{d8-d10}
 8015b30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b34:	20082f78 	.word	0x20082f78
 8015b38:	20082f74 	.word	0x20082f74
 8015b3c:	00000000 	.word	0x00000000
 8015b40:	20000064 	.word	0x20000064
 8015b44:	ff000100 	.word	0xff000100
 8015b48:	20082f68 	.word	0x20082f68
 8015b4c:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8015b50:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015b54:	2b01      	cmp	r3, #1
 8015b56:	bf04      	itt	eq
 8015b58:	ee19 2a10 	vmoveq	r2, s18
 8015b5c:	ee19 1a10 	vmoveq	r1, s18
 8015b60:	f04f 0300 	mov.w	r3, #0
 8015b64:	bf1c      	itt	ne
 8015b66:	9915      	ldrne	r1, [sp, #84]	@ 0x54
 8015b68:	9a16      	ldrne	r2, [sp, #88]	@ 0x58
 8015b6a:	2e06      	cmp	r6, #6
 8015b6c:	920c      	str	r2, [sp, #48]	@ 0x30
 8015b6e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8015b70:	9111      	str	r1, [sp, #68]	@ 0x44
 8015b72:	9212      	str	r2, [sp, #72]	@ 0x48
 8015b74:	f88d 301a 	strb.w	r3, [sp, #26]
 8015b78:	f88d 3019 	strb.w	r3, [sp, #25]
 8015b7c:	f43f af59 	beq.w	8015a32 <fill_path_even_odd+0x18a>
 8015b80:	2e08      	cmp	r6, #8
 8015b82:	f43f af56 	beq.w	8015a32 <fill_path_even_odd+0x18a>
 8015b86:	2e02      	cmp	r6, #2
 8015b88:	d00e      	beq.n	8015ba8 <fill_path_even_odd+0x300>
 8015b8a:	f005 036d 	and.w	r3, r5, #109	@ 0x6d
 8015b8e:	2b05      	cmp	r3, #5
 8015b90:	f000 80d0 	beq.w	8015d34 <fill_path_even_odd+0x48c>
 8015b94:	f005 030f 	and.w	r3, r5, #15
 8015b98:	9302      	str	r3, [sp, #8]
 8015b9a:	9b02      	ldr	r3, [sp, #8]
 8015b9c:	2b09      	cmp	r3, #9
 8015b9e:	f000 8295 	beq.w	80160cc <fill_path_even_odd+0x824>
 8015ba2:	3e0a      	subs	r6, #10
 8015ba4:	2e01      	cmp	r6, #1
 8015ba6:	d937      	bls.n	8015c18 <fill_path_even_odd+0x370>
 8015ba8:	4bb7      	ldr	r3, [pc, #732]	@ (8015e88 <fill_path_even_odd+0x5e0>)
 8015baa:	2007      	movs	r0, #7
 8015bac:	681d      	ldr	r5, [r3, #0]
 8015bae:	4bb7      	ldr	r3, [pc, #732]	@ (8015e8c <fill_path_even_odd+0x5e4>)
 8015bb0:	681c      	ldr	r4, [r3, #0]
 8015bb2:	f008 f87f 	bl	801dcb4 <nema_cl_get_space>
 8015bb6:	2800      	cmp	r0, #0
 8015bb8:	d02e      	beq.n	8015c18 <fill_path_even_odd+0x370>
 8015bba:	4ab5      	ldr	r2, [pc, #724]	@ (8015e90 <fill_path_even_odd+0x5e8>)
 8015bbc:	f8db 3000 	ldr.w	r3, [fp]
 8015bc0:	7812      	ldrb	r2, [r2, #0]
 8015bc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015bc4:	2a01      	cmp	r2, #1
 8015bc6:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8015bca:	d104      	bne.n	8015bd6 <fill_path_even_odd+0x32e>
 8015bcc:	4ab0      	ldr	r2, [pc, #704]	@ (8015e90 <fill_path_even_odd+0x5e8>)
 8015bce:	6852      	ldr	r2, [r2, #4]
 8015bd0:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015bd4:	4313      	orrs	r3, r2
 8015bd6:	f44f 7148 	mov.w	r1, #800	@ 0x320
 8015bda:	f44f 7749 	mov.w	r7, #804	@ 0x324
 8015bde:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8015be2:	f44f 764c 	mov.w	r6, #816	@ 0x330
 8015be6:	6001      	str	r1, [r0, #0]
 8015be8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015bea:	6087      	str	r7, [r0, #8]
 8015bec:	6041      	str	r1, [r0, #4]
 8015bee:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8015bf0:	6106      	str	r6, [r0, #16]
 8015bf2:	60c1      	str	r1, [r0, #12]
 8015bf4:	6182      	str	r2, [r0, #24]
 8015bf6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015bf8:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8015bfc:	6142      	str	r2, [r0, #20]
 8015bfe:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8015c00:	f043 0304 	orr.w	r3, r3, #4
 8015c04:	61c2      	str	r2, [r0, #28]
 8015c06:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015c0a:	6343      	str	r3, [r0, #52]	@ 0x34
 8015c0c:	4ba1      	ldr	r3, [pc, #644]	@ (8015e94 <fill_path_even_odd+0x5ec>)
 8015c0e:	6245      	str	r5, [r0, #36]	@ 0x24
 8015c10:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8015c12:	6201      	str	r1, [r0, #32]
 8015c14:	6282      	str	r2, [r0, #40]	@ 0x28
 8015c16:	6303      	str	r3, [r0, #48]	@ 0x30
 8015c18:	f8da 2000 	ldr.w	r2, [sl]
 8015c1c:	464c      	mov	r4, r9
 8015c1e:	e77a      	b.n	8015b16 <fill_path_even_odd+0x26e>
 8015c20:	f89d 1019 	ldrb.w	r1, [sp, #25]
 8015c24:	9b07      	ldr	r3, [sp, #28]
 8015c26:	2901      	cmp	r1, #1
 8015c28:	d038      	beq.n	8015c9c <fill_path_even_odd+0x3f4>
 8015c2a:	2401      	movs	r4, #1
 8015c2c:	2600      	movs	r6, #0
 8015c2e:	0098      	lsls	r0, r3, #2
 8015c30:	f8da 100c 	ldr.w	r1, [sl, #12]
 8015c34:	1d07      	adds	r7, r0, #4
 8015c36:	440f      	add	r7, r1
 8015c38:	f88d 401a 	strb.w	r4, [sp, #26]
 8015c3c:	4401      	add	r1, r0
 8015c3e:	1918      	adds	r0, r3, r4
 8015c40:	9c01      	ldr	r4, [sp, #4]
 8015c42:	9308      	str	r3, [sp, #32]
 8015c44:	f88d 6018 	strb.w	r6, [sp, #24]
 8015c48:	3302      	adds	r3, #2
 8015c4a:	9007      	str	r0, [sp, #28]
 8015c4c:	b1e4      	cbz	r4, 8015c88 <fill_path_even_odd+0x3e0>
 8015c4e:	edd1 7a00 	vldr	s15, [r1]
 8015c52:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 8015c56:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8015c5a:	9307      	str	r3, [sp, #28]
 8015c5c:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015c60:	edd7 7a00 	vldr	s15, [r7]
 8015c64:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8015c68:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015c6c:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015c70:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 8015c74:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 8015c78:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015c7c:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015c80:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015c84:	464c      	mov	r4, r9
 8015c86:	e746      	b.n	8015b16 <fill_path_even_odd+0x26e>
 8015c88:	edd1 6a00 	vldr	s13, [r1]
 8015c8c:	9307      	str	r3, [sp, #28]
 8015c8e:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015c92:	edd7 7a00 	vldr	s15, [r7]
 8015c96:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015c9a:	e7e9      	b.n	8015c70 <fill_path_even_odd+0x3c8>
 8015c9c:	2b00      	cmp	r3, #0
 8015c9e:	d0c4      	beq.n	8015c2a <fill_path_even_odd+0x382>
 8015ca0:	f8db 1000 	ldr.w	r1, [fp]
 8015ca4:	7f09      	ldrb	r1, [r1, #28]
 8015ca6:	2900      	cmp	r1, #0
 8015ca8:	d0bf      	beq.n	8015c2a <fill_path_even_odd+0x382>
 8015caa:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8015cae:	2b00      	cmp	r3, #0
 8015cb0:	f000 830c 	beq.w	80162cc <fill_path_even_odd+0xa24>
 8015cb4:	ee19 7a10 	vmov	r7, s18
 8015cb8:	ee19 8a10 	vmov	r8, s18
 8015cbc:	4b72      	ldr	r3, [pc, #456]	@ (8015e88 <fill_path_even_odd+0x5e0>)
 8015cbe:	2007      	movs	r0, #7
 8015cc0:	681e      	ldr	r6, [r3, #0]
 8015cc2:	4b72      	ldr	r3, [pc, #456]	@ (8015e8c <fill_path_even_odd+0x5e4>)
 8015cc4:	681c      	ldr	r4, [r3, #0]
 8015cc6:	f007 fff5 	bl	801dcb4 <nema_cl_get_space>
 8015cca:	2800      	cmp	r0, #0
 8015ccc:	d02e      	beq.n	8015d2c <fill_path_even_odd+0x484>
 8015cce:	4a70      	ldr	r2, [pc, #448]	@ (8015e90 <fill_path_even_odd+0x5e8>)
 8015cd0:	f8db 3000 	ldr.w	r3, [fp]
 8015cd4:	7811      	ldrb	r1, [r2, #0]
 8015cd6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8015cd8:	2901      	cmp	r1, #1
 8015cda:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 8015cde:	d104      	bne.n	8015cea <fill_path_even_odd+0x442>
 8015ce0:	4b6b      	ldr	r3, [pc, #428]	@ (8015e90 <fill_path_even_odd+0x5e8>)
 8015ce2:	685b      	ldr	r3, [r3, #4]
 8015ce4:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015ce8:	431a      	orrs	r2, r3
 8015cea:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8015cee:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8015cf2:	6003      	str	r3, [r0, #0]
 8015cf4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015cf6:	6081      	str	r1, [r0, #8]
 8015cf8:	6043      	str	r3, [r0, #4]
 8015cfa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015cfc:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8015d00:	61c7      	str	r7, [r0, #28]
 8015d02:	60c3      	str	r3, [r0, #12]
 8015d04:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8015d08:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8015d0c:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8015d10:	f042 0204 	orr.w	r2, r2, #4
 8015d14:	6342      	str	r2, [r0, #52]	@ 0x34
 8015d16:	4a5f      	ldr	r2, [pc, #380]	@ (8015e94 <fill_path_even_odd+0x5ec>)
 8015d18:	f8c0 8014 	str.w	r8, [r0, #20]
 8015d1c:	6246      	str	r6, [r0, #36]	@ 0x24
 8015d1e:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8015d20:	f8c0 c010 	str.w	ip, [r0, #16]
 8015d24:	6187      	str	r7, [r0, #24]
 8015d26:	6201      	str	r1, [r0, #32]
 8015d28:	6283      	str	r3, [r0, #40]	@ 0x28
 8015d2a:	6302      	str	r2, [r0, #48]	@ 0x30
 8015d2c:	9b07      	ldr	r3, [sp, #28]
 8015d2e:	f8da 2000 	ldr.w	r2, [sl]
 8015d32:	e77a      	b.n	8015c2a <fill_path_even_odd+0x382>
 8015d34:	f8db 2000 	ldr.w	r2, [fp]
 8015d38:	4b55      	ldr	r3, [pc, #340]	@ (8015e90 <fill_path_even_odd+0x5e8>)
 8015d3a:	6a94      	ldr	r4, [r2, #40]	@ 0x28
 8015d3c:	4a52      	ldr	r2, [pc, #328]	@ (8015e88 <fill_path_even_odd+0x5e0>)
 8015d3e:	781b      	ldrb	r3, [r3, #0]
 8015d40:	2c00      	cmp	r4, #0
 8015d42:	6816      	ldr	r6, [r2, #0]
 8015d44:	4a51      	ldr	r2, [pc, #324]	@ (8015e8c <fill_path_even_odd+0x5e4>)
 8015d46:	bf18      	it	ne
 8015d48:	f04f 64f0 	movne.w	r4, #125829120	@ 0x7800000
 8015d4c:	2b01      	cmp	r3, #1
 8015d4e:	6815      	ldr	r5, [r2, #0]
 8015d50:	d104      	bne.n	8015d5c <fill_path_even_odd+0x4b4>
 8015d52:	4b4f      	ldr	r3, [pc, #316]	@ (8015e90 <fill_path_even_odd+0x5e8>)
 8015d54:	685b      	ldr	r3, [r3, #4]
 8015d56:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015d5a:	431c      	orrs	r4, r3
 8015d5c:	200e      	movs	r0, #14
 8015d5e:	f007 ffa9 	bl	801dcb4 <nema_cl_get_space>
 8015d62:	2800      	cmp	r0, #0
 8015d64:	f43f af58 	beq.w	8015c18 <fill_path_even_odd+0x370>
 8015d68:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8015d6c:	6283      	str	r3, [r0, #40]	@ 0x28
 8015d6e:	6503      	str	r3, [r0, #80]	@ 0x50
 8015d70:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8015d74:	f44f 714a 	mov.w	r1, #808	@ 0x328
 8015d78:	f44f 7849 	mov.w	r8, #804	@ 0x324
 8015d7c:	f44f 7e4b 	mov.w	lr, #812	@ 0x32c
 8015d80:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8015d84:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8015d88:	6303      	str	r3, [r0, #48]	@ 0x30
 8015d8a:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8015d8e:	6001      	str	r1, [r0, #0]
 8015d90:	f8c0 8018 	str.w	r8, [r0, #24]
 8015d94:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8015d98:	f8c0 e008 	str.w	lr, [r0, #8]
 8015d9c:	f8c0 8004 	str.w	r8, [r0, #4]
 8015da0:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 8015da4:	f8c0 c010 	str.w	ip, [r0, #16]
 8015da8:	f8c0 e00c 	str.w	lr, [r0, #12]
 8015dac:	6346      	str	r6, [r0, #52]	@ 0x34
 8015dae:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8015db0:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8015db2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8015db4:	6146      	str	r6, [r0, #20]
 8015db6:	61c5      	str	r5, [r0, #28]
 8015db8:	6202      	str	r2, [r0, #32]
 8015dba:	6482      	str	r2, [r0, #72]	@ 0x48
 8015dbc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015dbe:	6383      	str	r3, [r0, #56]	@ 0x38
 8015dc0:	4b34      	ldr	r3, [pc, #208]	@ (8015e94 <fill_path_even_odd+0x5ec>)
 8015dc2:	6542      	str	r2, [r0, #84]	@ 0x54
 8015dc4:	f044 0204 	orr.w	r2, r4, #4
 8015dc8:	e9c0 3210 	strd	r3, r2, [r0, #64]	@ 0x40
 8015dcc:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8015dd0:	f44f 7251 	mov.w	r2, #836	@ 0x344
 8015dd4:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8015dd6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015dd8:	6246      	str	r6, [r0, #36]	@ 0x24
 8015dda:	65c6      	str	r6, [r0, #92]	@ 0x5c
 8015ddc:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 8015dde:	f044 0406 	orr.w	r4, r4, #6
 8015de2:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8015de4:	64c6      	str	r6, [r0, #76]	@ 0x4c
 8015de6:	6587      	str	r7, [r0, #88]	@ 0x58
 8015de8:	6602      	str	r2, [r0, #96]	@ 0x60
 8015dea:	e9c0 341a 	strd	r3, r4, [r0, #104]	@ 0x68
 8015dee:	6645      	str	r5, [r0, #100]	@ 0x64
 8015df0:	f8da 2000 	ldr.w	r2, [sl]
 8015df4:	464c      	mov	r4, r9
 8015df6:	e68e      	b.n	8015b16 <fill_path_even_odd+0x26e>
 8015df8:	9007      	str	r0, [sp, #28]
 8015dfa:	ed94 6a00 	vldr	s12, [r4]
 8015dfe:	ed8d 6a0d 	vstr	s12, [sp, #52]	@ 0x34
 8015e02:	1c8a      	adds	r2, r1, #2
 8015e04:	9207      	str	r2, [sp, #28]
 8015e06:	edd4 6a01 	vldr	s13, [r4, #4]
 8015e0a:	edcd 6a0e 	vstr	s13, [sp, #56]	@ 0x38
 8015e0e:	1cca      	adds	r2, r1, #3
 8015e10:	9207      	str	r2, [sp, #28]
 8015e12:	ed94 7a02 	vldr	s14, [r4, #8]
 8015e16:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015e1a:	3104      	adds	r1, #4
 8015e1c:	9107      	str	r1, [sp, #28]
 8015e1e:	edd4 7a03 	vldr	s15, [r4, #12]
 8015e22:	9a01      	ldr	r2, [sp, #4]
 8015e24:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015e28:	2a00      	cmp	r2, #0
 8015e2a:	d135      	bne.n	8015e98 <fill_path_even_odd+0x5f0>
 8015e2c:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 8015e30:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 8015e34:	008a      	lsls	r2, r1, #2
 8015e36:	1c48      	adds	r0, r1, #1
 8015e38:	9203      	str	r2, [sp, #12]
 8015e3a:	9c03      	ldr	r4, [sp, #12]
 8015e3c:	9007      	str	r0, [sp, #28]
 8015e3e:	1d22      	adds	r2, r4, #4
 8015e40:	441a      	add	r2, r3
 8015e42:	4423      	add	r3, r4
 8015e44:	9c01      	ldr	r4, [sp, #4]
 8015e46:	3102      	adds	r1, #2
 8015e48:	edd3 6a00 	vldr	s13, [r3]
 8015e4c:	2c00      	cmp	r4, #0
 8015e4e:	f000 8107 	beq.w	8016060 <fill_path_even_odd+0x7b8>
 8015e52:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 8015e56:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8015e5a:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015e5e:	9107      	str	r1, [sp, #28]
 8015e60:	ed92 7a00 	vldr	s14, [r2]
 8015e64:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 8015e68:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015e6c:	f8db 3000 	ldr.w	r3, [fp]
 8015e70:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015e74:	7f1b      	ldrb	r3, [r3, #28]
 8015e76:	2b00      	cmp	r3, #0
 8015e78:	f47f adb7 	bne.w	80159ea <fill_path_even_odd+0x142>
 8015e7c:	2201      	movs	r2, #1
 8015e7e:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8015e82:	f88d 2019 	strb.w	r2, [sp, #25]
 8015e86:	e5c8      	b.n	8015a1a <fill_path_even_odd+0x172>
 8015e88:	20082f74 	.word	0x20082f74
 8015e8c:	20082f78 	.word	0x20082f78
 8015e90:	20000064 	.word	0x20000064
 8015e94:	ff000100 	.word	0xff000100
 8015e98:	ed9d 5a11 	vldr	s10, [sp, #68]	@ 0x44
 8015e9c:	eddd 5a12 	vldr	s11, [sp, #72]	@ 0x48
 8015ea0:	ee36 6a05 	vadd.f32	s12, s12, s10
 8015ea4:	ee37 7a05 	vadd.f32	s14, s14, s10
 8015ea8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015eac:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8015eb0:	ed8d 6a0d 	vstr	s12, [sp, #52]	@ 0x34
 8015eb4:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015eb8:	edcd 6a0e 	vstr	s13, [sp, #56]	@ 0x38
 8015ebc:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015ec0:	e7b4      	b.n	8015e2c <fill_path_even_odd+0x584>
 8015ec2:	f1ac 0c05 	sub.w	ip, ip, #5
 8015ec6:	f1bc 0f03 	cmp.w	ip, #3
 8015eca:	ed9d 5a11 	vldr	s10, [sp, #68]	@ 0x44
 8015ece:	eddd 5a12 	vldr	s11, [sp, #72]	@ 0x48
 8015ed2:	f240 822f 	bls.w	8016334 <fill_path_even_odd+0xa8c>
 8015ed6:	eeb0 7a65 	vmov.f32	s14, s11
 8015eda:	eef0 7a45 	vmov.f32	s15, s10
 8015ede:	ed8d 7a0e 	vstr	s14, [sp, #56]	@ 0x38
 8015ee2:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 8015ee6:	9007      	str	r0, [sp, #28]
 8015ee8:	ed94 7a00 	vldr	s14, [r4]
 8015eec:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015ef0:	3102      	adds	r1, #2
 8015ef2:	9107      	str	r1, [sp, #28]
 8015ef4:	edd4 7a01 	vldr	s15, [r4, #4]
 8015ef8:	9a01      	ldr	r2, [sp, #4]
 8015efa:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015efe:	2a00      	cmp	r2, #0
 8015f00:	d094      	beq.n	8015e2c <fill_path_even_odd+0x584>
 8015f02:	ee37 7a05 	vadd.f32	s14, s14, s10
 8015f06:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8015f0a:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015f0e:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015f12:	e78b      	b.n	8015e2c <fill_path_even_odd+0x584>
 8015f14:	2e03      	cmp	r6, #3
 8015f16:	f000 80ab 	beq.w	8016070 <fill_path_even_odd+0x7c8>
 8015f1a:	2e0a      	cmp	r6, #10
 8015f1c:	f040 8259 	bne.w	80163d2 <fill_path_even_odd+0xb2a>
 8015f20:	9007      	str	r0, [sp, #28]
 8015f22:	edde 7a00 	vldr	s15, [lr]
 8015f26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015f2a:	ee17 1a90 	vmov	r1, s15
 8015f2e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8015f32:	104a      	asrs	r2, r1, #1
 8015f34:	2a00      	cmp	r2, #0
 8015f36:	9203      	str	r2, [sp, #12]
 8015f38:	f340 80e2 	ble.w	8016100 <fill_path_even_odd+0x858>
 8015f3c:	9a04      	ldr	r2, [sp, #16]
 8015f3e:	2400      	movs	r4, #0
 8015f40:	f8cd 9010 	str.w	r9, [sp, #16]
 8015f44:	46a9      	mov	r9, r5
 8015f46:	9605      	str	r6, [sp, #20]
 8015f48:	0091      	lsls	r1, r2, #2
 8015f4a:	1d08      	adds	r0, r1, #4
 8015f4c:	4418      	add	r0, r3
 8015f4e:	9d01      	ldr	r5, [sp, #4]
 8015f50:	440b      	add	r3, r1
 8015f52:	1c51      	adds	r1, r2, #1
 8015f54:	9107      	str	r1, [sp, #28]
 8015f56:	3202      	adds	r2, #2
 8015f58:	ed93 8a00 	vldr	s16, [r3]
 8015f5c:	b365      	cbz	r5, 8015fb8 <fill_path_even_odd+0x710>
 8015f5e:	ed9d 1a11 	vldr	s2, [sp, #68]	@ 0x44
 8015f62:	ee38 8a01 	vadd.f32	s16, s16, s2
 8015f66:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8015f6a:	9207      	str	r2, [sp, #28]
 8015f6c:	edd0 8a00 	vldr	s17, [r0]
 8015f70:	eddd 1a12 	vldr	s3, [sp, #72]	@ 0x48
 8015f74:	ee78 8aa1 	vadd.f32	s17, s17, s3
 8015f78:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8015f7c:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 8015f80:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 8015f84:	f8db 3000 	ldr.w	r3, [fp]
 8015f88:	f88d 905c 	strb.w	r9, [sp, #92]	@ 0x5c
 8015f8c:	7f1a      	ldrb	r2, [r3, #28]
 8015f8e:	b9da      	cbnz	r2, 8015fc8 <fill_path_even_odd+0x720>
 8015f90:	4aaa      	ldr	r2, [pc, #680]	@ (801623c <fill_path_even_odd+0x994>)
 8015f92:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8015f96:	6812      	ldr	r2, [r2, #0]
 8015f98:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8015f9c:	2a00      	cmp	r2, #0
 8015f9e:	f000 8199 	beq.w	80162d4 <fill_path_even_odd+0xa2c>
 8015fa2:	eef0 1a68 	vmov.f32	s3, s17
 8015fa6:	eeb0 1a48 	vmov.f32	s2, s16
 8015faa:	eef0 0a4a 	vmov.f32	s1, s20
 8015fae:	eeb0 0a69 	vmov.f32	s0, s19
 8015fb2:	f7fc fc79 	bl	80128a8 <raster_stroked_line_>
 8015fb6:	e047      	b.n	8016048 <fill_path_even_odd+0x7a0>
 8015fb8:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8015fbc:	9207      	str	r2, [sp, #28]
 8015fbe:	edd0 8a00 	vldr	s17, [r0]
 8015fc2:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8015fc6:	e7d9      	b.n	8015f7c <fill_path_even_odd+0x6d4>
 8015fc8:	4b9d      	ldr	r3, [pc, #628]	@ (8016240 <fill_path_even_odd+0x998>)
 8015fca:	2007      	movs	r0, #7
 8015fcc:	681e      	ldr	r6, [r3, #0]
 8015fce:	4b9d      	ldr	r3, [pc, #628]	@ (8016244 <fill_path_even_odd+0x99c>)
 8015fd0:	681d      	ldr	r5, [r3, #0]
 8015fd2:	f007 fe6f 	bl	801dcb4 <nema_cl_get_space>
 8015fd6:	2800      	cmp	r0, #0
 8015fd8:	d036      	beq.n	8016048 <fill_path_even_odd+0x7a0>
 8015fda:	4a9b      	ldr	r2, [pc, #620]	@ (8016248 <fill_path_even_odd+0x9a0>)
 8015fdc:	f8db 3000 	ldr.w	r3, [fp]
 8015fe0:	7812      	ldrb	r2, [r2, #0]
 8015fe2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015fe4:	2a01      	cmp	r2, #1
 8015fe6:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8015fea:	d104      	bne.n	8015ff6 <fill_path_even_odd+0x74e>
 8015fec:	4a96      	ldr	r2, [pc, #600]	@ (8016248 <fill_path_even_odd+0x9a0>)
 8015fee:	6852      	ldr	r2, [r2, #4]
 8015ff0:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015ff4:	4313      	orrs	r3, r2
 8015ff6:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8015ffa:	6002      	str	r2, [r0, #0]
 8015ffc:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 8016000:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8016004:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8016008:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801600c:	6082      	str	r2, [r0, #8]
 801600e:	edc0 7a01 	vstr	s15, [r0, #4]
 8016012:	f8c0 e018 	str.w	lr, [r0, #24]
 8016016:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 801601a:	f8c0 c010 	str.w	ip, [r0, #16]
 801601e:	f8c0 e00c 	str.w	lr, [r0, #12]
 8016022:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8016026:	f043 0304 	orr.w	r3, r3, #4
 801602a:	f8c0 c014 	str.w	ip, [r0, #20]
 801602e:	6343      	str	r3, [r0, #52]	@ 0x34
 8016030:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016032:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8016036:	61c3      	str	r3, [r0, #28]
 8016038:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 801603c:	4a83      	ldr	r2, [pc, #524]	@ (801624c <fill_path_even_odd+0x9a4>)
 801603e:	6246      	str	r6, [r0, #36]	@ 0x24
 8016040:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8016042:	6302      	str	r2, [r0, #48]	@ 0x30
 8016044:	6201      	str	r1, [r0, #32]
 8016046:	6283      	str	r3, [r0, #40]	@ 0x28
 8016048:	9b03      	ldr	r3, [sp, #12]
 801604a:	3401      	adds	r4, #1
 801604c:	429c      	cmp	r4, r3
 801604e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016052:	e887 0003 	stmia.w	r7, {r0, r1}
 8016056:	d051      	beq.n	80160fc <fill_path_even_odd+0x854>
 8016058:	f8da 300c 	ldr.w	r3, [sl, #12]
 801605c:	9a07      	ldr	r2, [sp, #28]
 801605e:	e773      	b.n	8015f48 <fill_path_even_odd+0x6a0>
 8016060:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8016064:	9107      	str	r1, [sp, #28]
 8016066:	edd2 7a00 	vldr	s15, [r2]
 801606a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 801606e:	e4b6      	b.n	80159de <fill_path_even_odd+0x136>
 8016070:	9b01      	ldr	r3, [sp, #4]
 8016072:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 8016076:	9007      	str	r0, [sp, #28]
 8016078:	2b00      	cmp	r3, #0
 801607a:	f000 80cf 	beq.w	801621c <fill_path_even_odd+0x974>
 801607e:	ed9e 7a00 	vldr	s14, [lr]
 8016082:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 8016086:	ee76 6a87 	vadd.f32	s13, s13, s14
 801608a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 801608e:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8016092:	e4a4      	b.n	80159de <fill_path_even_odd+0x136>
 8016094:	9007      	str	r0, [sp, #28]
 8016096:	ed94 7a00 	vldr	s14, [r4]
 801609a:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 801609e:	3102      	adds	r1, #2
 80160a0:	9107      	str	r1, [sp, #28]
 80160a2:	edd4 7a01 	vldr	s15, [r4, #4]
 80160a6:	9a01      	ldr	r2, [sp, #4]
 80160a8:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80160ac:	2a00      	cmp	r2, #0
 80160ae:	f43f aebd 	beq.w	8015e2c <fill_path_even_odd+0x584>
 80160b2:	ed9d 6a11 	vldr	s12, [sp, #68]	@ 0x44
 80160b6:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 80160ba:	ee37 7a06 	vadd.f32	s14, s14, s12
 80160be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80160c2:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 80160c6:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80160ca:	e6af      	b.n	8015e2c <fill_path_even_odd+0x584>
 80160cc:	2002      	movs	r0, #2
 80160ce:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80160d0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80160d2:	f007 fdef 	bl	801dcb4 <nema_cl_get_space>
 80160d6:	b138      	cbz	r0, 80160e8 <fill_path_even_odd+0x840>
 80160d8:	f44f 724a 	mov.w	r2, #808	@ 0x328
 80160dc:	f44f 734b 	mov.w	r3, #812	@ 0x32c
 80160e0:	6045      	str	r5, [r0, #4]
 80160e2:	60c4      	str	r4, [r0, #12]
 80160e4:	6002      	str	r2, [r0, #0]
 80160e6:	6083      	str	r3, [r0, #8]
 80160e8:	a806      	add	r0, sp, #24
 80160ea:	f7fd f83d 	bl	8013168 <fill_arc.isra.7>
 80160ee:	4605      	mov	r5, r0
 80160f0:	2800      	cmp	r0, #0
 80160f2:	f43f ad59 	beq.w	8015ba8 <fill_path_even_odd+0x300>
 80160f6:	f006 fc85 	bl	801ca04 <nema_vg_set_error>
 80160fa:	e515      	b.n	8015b28 <fill_path_even_odd+0x280>
 80160fc:	e9dd 9604 	ldrd	r9, r6, [sp, #16]
 8016100:	ed9d 8a15 	vldr	s16, [sp, #84]	@ 0x54
 8016104:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 8016108:	ee77 7ac8 	vsub.f32	s15, s15, s16
 801610c:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016110:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016114:	eddd 8a16 	vldr	s17, [sp, #88]	@ 0x58
 8016118:	d111      	bne.n	801613e <fill_path_even_odd+0x896>
 801611a:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801611e:	ee77 7ae8 	vsub.f32	s15, s15, s17
 8016122:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016126:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801612a:	d108      	bne.n	801613e <fill_path_even_odd+0x896>
 801612c:	2300      	movs	r3, #0
 801612e:	f88d 3019 	strb.w	r3, [sp, #25]
 8016132:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8016136:	2b00      	cmp	r3, #0
 8016138:	f43f ad2f 	beq.w	8015b9a <fill_path_even_odd+0x2f2>
 801613c:	e56c      	b.n	8015c18 <fill_path_even_odd+0x370>
 801613e:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 8016142:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016146:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 801614a:	f8db 3000 	ldr.w	r3, [fp]
 801614e:	e887 0003 	stmia.w	r7, {r0, r1}
 8016152:	7f1a      	ldrb	r2, [r3, #28]
 8016154:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8016158:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 801615c:	2a00      	cmp	r2, #0
 801615e:	f000 8124 	beq.w	80163aa <fill_path_even_odd+0xb02>
 8016162:	4b37      	ldr	r3, [pc, #220]	@ (8016240 <fill_path_even_odd+0x998>)
 8016164:	2007      	movs	r0, #7
 8016166:	681c      	ldr	r4, [r3, #0]
 8016168:	4b36      	ldr	r3, [pc, #216]	@ (8016244 <fill_path_even_odd+0x99c>)
 801616a:	f8d3 8000 	ldr.w	r8, [r3]
 801616e:	f007 fda1 	bl	801dcb4 <nema_cl_get_space>
 8016172:	2800      	cmp	r0, #0
 8016174:	d0da      	beq.n	801612c <fill_path_even_odd+0x884>
 8016176:	4a34      	ldr	r2, [pc, #208]	@ (8016248 <fill_path_even_odd+0x9a0>)
 8016178:	f8db 3000 	ldr.w	r3, [fp]
 801617c:	7812      	ldrb	r2, [r2, #0]
 801617e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016180:	2a01      	cmp	r2, #1
 8016182:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8016186:	d104      	bne.n	8016192 <fill_path_even_odd+0x8ea>
 8016188:	4a2f      	ldr	r2, [pc, #188]	@ (8016248 <fill_path_even_odd+0x9a0>)
 801618a:	6852      	ldr	r2, [r2, #4]
 801618c:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8016190:	4313      	orrs	r3, r2
 8016192:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8016196:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 801619a:	f44f 774d 	mov.w	r7, #820	@ 0x334
 801619e:	f44f 754c 	mov.w	r5, #816	@ 0x330
 80161a2:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80161a6:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 80161aa:	f8c0 e000 	str.w	lr, [r0]
 80161ae:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80161b2:	f8c0 c008 	str.w	ip, [r0, #8]
 80161b6:	f8c0 e004 	str.w	lr, [r0, #4]
 80161ba:	6187      	str	r7, [r0, #24]
 80161bc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80161be:	6105      	str	r5, [r0, #16]
 80161c0:	60c7      	str	r7, [r0, #12]
 80161c2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80161c4:	f043 0304 	orr.w	r3, r3, #4
 80161c8:	6145      	str	r5, [r0, #20]
 80161ca:	6343      	str	r3, [r0, #52]	@ 0x34
 80161cc:	6244      	str	r4, [r0, #36]	@ 0x24
 80161ce:	4b1f      	ldr	r3, [pc, #124]	@ (801624c <fill_path_even_odd+0x9a4>)
 80161d0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80161d2:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 80161d6:	61c4      	str	r4, [r0, #28]
 80161d8:	6201      	str	r1, [r0, #32]
 80161da:	6282      	str	r2, [r0, #40]	@ 0x28
 80161dc:	6303      	str	r3, [r0, #48]	@ 0x30
 80161de:	e7a5      	b.n	801612c <fill_path_even_odd+0x884>
 80161e0:	f1ac 0c05 	sub.w	ip, ip, #5
 80161e4:	f1bc 0f03 	cmp.w	ip, #3
 80161e8:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 80161ec:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 80161f0:	d80b      	bhi.n	801620a <fill_path_even_odd+0x962>
 80161f2:	ee76 6aa6 	vadd.f32	s13, s13, s13
 80161f6:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80161fa:	ed9d 6a13 	vldr	s12, [sp, #76]	@ 0x4c
 80161fe:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8016202:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8016206:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801620a:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 801620e:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8016212:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 8016216:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801621a:	e60e      	b.n	8015e3a <fill_path_even_odd+0x592>
 801621c:	edde 6a00 	vldr	s13, [lr]
 8016220:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8016224:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8016228:	f7ff bbd9 	b.w	80159de <fill_path_even_odd+0x136>
 801622c:	2300      	movs	r3, #0
 801622e:	f88d 3019 	strb.w	r3, [sp, #25]
 8016232:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8016236:	f7ff bbf0 	b.w	8015a1a <fill_path_even_odd+0x172>
 801623a:	bf00      	nop
 801623c:	20082f70 	.word	0x20082f70
 8016240:	20082f74 	.word	0x20082f74
 8016244:	20082f78 	.word	0x20082f78
 8016248:	20000064 	.word	0x20000064
 801624c:	ff000100 	.word	0xff000100
 8016250:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8016254:	2b00      	cmp	r3, #0
 8016256:	d17a      	bne.n	801634e <fill_path_even_odd+0xaa6>
 8016258:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 801625a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801625c:	4b8f      	ldr	r3, [pc, #572]	@ (801649c <fill_path_even_odd+0xbf4>)
 801625e:	2007      	movs	r0, #7
 8016260:	681e      	ldr	r6, [r3, #0]
 8016262:	4b8f      	ldr	r3, [pc, #572]	@ (80164a0 <fill_path_even_odd+0xbf8>)
 8016264:	681d      	ldr	r5, [r3, #0]
 8016266:	f007 fd25 	bl	801dcb4 <nema_cl_get_space>
 801626a:	2800      	cmp	r0, #0
 801626c:	f43f ac5b 	beq.w	8015b26 <fill_path_even_odd+0x27e>
 8016270:	4b8c      	ldr	r3, [pc, #560]	@ (80164a4 <fill_path_even_odd+0xbfc>)
 8016272:	4a8d      	ldr	r2, [pc, #564]	@ (80164a8 <fill_path_even_odd+0xc00>)
 8016274:	681b      	ldr	r3, [r3, #0]
 8016276:	7811      	ldrb	r1, [r2, #0]
 8016278:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801627a:	2901      	cmp	r1, #1
 801627c:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8016280:	d103      	bne.n	801628a <fill_path_even_odd+0x9e2>
 8016282:	6852      	ldr	r2, [r2, #4]
 8016284:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8016288:	4313      	orrs	r3, r2
 801628a:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801628e:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8016292:	6002      	str	r2, [r0, #0]
 8016294:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8016296:	6081      	str	r1, [r0, #8]
 8016298:	6042      	str	r2, [r0, #4]
 801629a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801629c:	61c4      	str	r4, [r0, #28]
 801629e:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80162a2:	60c2      	str	r2, [r0, #12]
 80162a4:	f44f 744d 	mov.w	r4, #820	@ 0x334
 80162a8:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80162ac:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 80162b0:	f043 0304 	orr.w	r3, r3, #4
 80162b4:	6343      	str	r3, [r0, #52]	@ 0x34
 80162b6:	4b7d      	ldr	r3, [pc, #500]	@ (80164ac <fill_path_even_odd+0xc04>)
 80162b8:	6147      	str	r7, [r0, #20]
 80162ba:	6246      	str	r6, [r0, #36]	@ 0x24
 80162bc:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80162be:	f8c0 c010 	str.w	ip, [r0, #16]
 80162c2:	6184      	str	r4, [r0, #24]
 80162c4:	6201      	str	r1, [r0, #32]
 80162c6:	6282      	str	r2, [r0, #40]	@ 0x28
 80162c8:	6303      	str	r3, [r0, #48]	@ 0x30
 80162ca:	e42c      	b.n	8015b26 <fill_path_even_odd+0x27e>
 80162cc:	f8dd 8054 	ldr.w	r8, [sp, #84]	@ 0x54
 80162d0:	9f16      	ldr	r7, [sp, #88]	@ 0x58
 80162d2:	e4f3      	b.n	8015cbc <fill_path_even_odd+0x414>
 80162d4:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 80162d8:	2d00      	cmp	r5, #0
 80162da:	bf18      	it	ne
 80162dc:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 80162e0:	4b71      	ldr	r3, [pc, #452]	@ (80164a8 <fill_path_even_odd+0xc00>)
 80162e2:	4015      	ands	r5, r2
 80162e4:	781b      	ldrb	r3, [r3, #0]
 80162e6:	2b01      	cmp	r3, #1
 80162e8:	d104      	bne.n	80162f4 <fill_path_even_odd+0xa4c>
 80162ea:	4b6f      	ldr	r3, [pc, #444]	@ (80164a8 <fill_path_even_odd+0xc00>)
 80162ec:	685b      	ldr	r3, [r3, #4]
 80162ee:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80162f2:	431d      	orrs	r5, r3
 80162f4:	2005      	movs	r0, #5
 80162f6:	f007 fcdd 	bl	801dcb4 <nema_cl_get_space>
 80162fa:	2800      	cmp	r0, #0
 80162fc:	f43f aea4 	beq.w	8016048 <fill_path_even_odd+0x7a0>
 8016300:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8016304:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8016308:	f44f 724c 	mov.w	r2, #816	@ 0x330
 801630c:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8016310:	f045 050a 	orr.w	r5, r5, #10
 8016314:	6245      	str	r5, [r0, #36]	@ 0x24
 8016316:	4d65      	ldr	r5, [pc, #404]	@ (80164ac <fill_path_even_odd+0xc04>)
 8016318:	edc0 9a01 	vstr	s19, [r0, #4]
 801631c:	ed80 aa03 	vstr	s20, [r0, #12]
 8016320:	ed80 8a05 	vstr	s16, [r0, #20]
 8016324:	edc0 8a07 	vstr	s17, [r0, #28]
 8016328:	6205      	str	r5, [r0, #32]
 801632a:	6006      	str	r6, [r0, #0]
 801632c:	6081      	str	r1, [r0, #8]
 801632e:	6102      	str	r2, [r0, #16]
 8016330:	6183      	str	r3, [r0, #24]
 8016332:	e689      	b.n	8016048 <fill_path_even_odd+0x7a0>
 8016334:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 8016338:	ee75 7a05 	vadd.f32	s15, s10, s10
 801633c:	ee35 6aa5 	vadd.f32	s12, s11, s11
 8016340:	eddd 6a14 	vldr	s13, [sp, #80]	@ 0x50
 8016344:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8016348:	ee36 7a66 	vsub.f32	s14, s12, s13
 801634c:	e5c7      	b.n	8015ede <fill_path_even_odd+0x636>
 801634e:	2400      	movs	r4, #0
 8016350:	4627      	mov	r7, r4
 8016352:	e783      	b.n	801625c <fill_path_even_odd+0x9b4>
 8016354:	9007      	str	r0, [sp, #28]
 8016356:	6822      	ldr	r2, [r4, #0]
 8016358:	1c8b      	adds	r3, r1, #2
 801635a:	9307      	str	r3, [sp, #28]
 801635c:	920d      	str	r2, [sp, #52]	@ 0x34
 801635e:	6863      	ldr	r3, [r4, #4]
 8016360:	3103      	adds	r1, #3
 8016362:	930e      	str	r3, [sp, #56]	@ 0x38
 8016364:	9107      	str	r1, [sp, #28]
 8016366:	4b52      	ldr	r3, [pc, #328]	@ (80164b0 <fill_path_even_odd+0xc08>)
 8016368:	68a2      	ldr	r2, [r4, #8]
 801636a:	edd3 0a00 	vldr	s1, [r3]
 801636e:	ed93 0a03 	vldr	s0, [r3, #12]
 8016372:	920f      	str	r2, [sp, #60]	@ 0x3c
 8016374:	f01a ff02 	bl	803117c <atan2f>
 8016378:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 801637c:	ee77 7a80 	vadd.f32	s15, s15, s0
 8016380:	9907      	ldr	r1, [sp, #28]
 8016382:	f8da 300c 	ldr.w	r3, [sl, #12]
 8016386:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801638a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801638c:	008a      	lsls	r2, r1, #2
 801638e:	1c48      	adds	r0, r1, #1
 8016390:	9004      	str	r0, [sp, #16]
 8016392:	9203      	str	r2, [sp, #12]
 8016394:	f88d 501b 	strb.w	r5, [sp, #27]
 8016398:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 801639c:	eb03 0e02 	add.w	lr, r3, r2
 80163a0:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
 80163a4:	9414      	str	r4, [sp, #80]	@ 0x50
 80163a6:	f7ff bb06 	b.w	80159b6 <fill_path_even_odd+0x10e>
 80163aa:	4a42      	ldr	r2, [pc, #264]	@ (80164b4 <fill_path_even_odd+0xc0c>)
 80163ac:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 80163b0:	6812      	ldr	r2, [r2, #0]
 80163b2:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 80163b6:	2a00      	cmp	r2, #0
 80163b8:	f000 811b 	beq.w	80165f2 <fill_path_even_odd+0xd4a>
 80163bc:	eef0 1a68 	vmov.f32	s3, s17
 80163c0:	eeb0 1a48 	vmov.f32	s2, s16
 80163c4:	eef0 0a4a 	vmov.f32	s1, s20
 80163c8:	eeb0 0a69 	vmov.f32	s0, s19
 80163cc:	f7fc fa6c 	bl	80128a8 <raster_stroked_line_>
 80163d0:	e6ac      	b.n	801612c <fill_path_even_odd+0x884>
 80163d2:	2e0b      	cmp	r6, #11
 80163d4:	f47f ad31 	bne.w	8015e3a <fill_path_even_odd+0x592>
 80163d8:	9007      	str	r0, [sp, #28]
 80163da:	edde 7a00 	vldr	s15, [lr]
 80163de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80163e2:	ee17 1a90 	vmov	r1, s15
 80163e6:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80163ea:	104c      	asrs	r4, r1, #1
 80163ec:	2c00      	cmp	r4, #0
 80163ee:	f340 80b0 	ble.w	8016552 <fill_path_even_odd+0xcaa>
 80163f2:	2100      	movs	r1, #0
 80163f4:	9a04      	ldr	r2, [sp, #16]
 80163f6:	9605      	str	r6, [sp, #20]
 80163f8:	f8cd 9010 	str.w	r9, [sp, #16]
 80163fc:	4656      	mov	r6, sl
 80163fe:	46a9      	mov	r9, r5
 8016400:	46a2      	mov	sl, r4
 8016402:	460c      	mov	r4, r1
 8016404:	e035      	b.n	8016472 <fill_path_even_odd+0xbca>
 8016406:	ed9d 1a11 	vldr	s2, [sp, #68]	@ 0x44
 801640a:	ee38 8a01 	vadd.f32	s16, s16, s2
 801640e:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8016412:	9207      	str	r2, [sp, #28]
 8016414:	edd1 8a00 	vldr	s17, [r1]
 8016418:	eddd 1a12 	vldr	s3, [sp, #72]	@ 0x48
 801641c:	ee78 8aa1 	vadd.f32	s17, s17, s3
 8016420:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8016424:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 8016428:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 801642c:	f8db 3000 	ldr.w	r3, [fp]
 8016430:	f88d 905c 	strb.w	r9, [sp, #92]	@ 0x5c
 8016434:	7f1a      	ldrb	r2, [r3, #28]
 8016436:	2a00      	cmp	r2, #0
 8016438:	d13e      	bne.n	80164b8 <fill_path_even_odd+0xc10>
 801643a:	4a1e      	ldr	r2, [pc, #120]	@ (80164b4 <fill_path_even_odd+0xc0c>)
 801643c:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8016440:	6812      	ldr	r2, [r2, #0]
 8016442:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8016446:	2a00      	cmp	r2, #0
 8016448:	f000 80a2 	beq.w	8016590 <fill_path_even_odd+0xce8>
 801644c:	eef0 1a68 	vmov.f32	s3, s17
 8016450:	eeb0 1a48 	vmov.f32	s2, s16
 8016454:	eef0 0a4a 	vmov.f32	s1, s20
 8016458:	eeb0 0a69 	vmov.f32	s0, s19
 801645c:	f7fc fa24 	bl	80128a8 <raster_stroked_line_>
 8016460:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016464:	3401      	adds	r4, #1
 8016466:	4554      	cmp	r4, sl
 8016468:	e887 0003 	stmia.w	r7, {r0, r1}
 801646c:	d06d      	beq.n	801654a <fill_path_even_odd+0xca2>
 801646e:	68f3      	ldr	r3, [r6, #12]
 8016470:	9a07      	ldr	r2, [sp, #28]
 8016472:	0090      	lsls	r0, r2, #2
 8016474:	1d01      	adds	r1, r0, #4
 8016476:	4419      	add	r1, r3
 8016478:	9d01      	ldr	r5, [sp, #4]
 801647a:	4403      	add	r3, r0
 801647c:	1c50      	adds	r0, r2, #1
 801647e:	9007      	str	r0, [sp, #28]
 8016480:	3202      	adds	r2, #2
 8016482:	ed93 8a00 	vldr	s16, [r3]
 8016486:	2d00      	cmp	r5, #0
 8016488:	d1bd      	bne.n	8016406 <fill_path_even_odd+0xb5e>
 801648a:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 801648e:	9207      	str	r2, [sp, #28]
 8016490:	edd1 8a00 	vldr	s17, [r1]
 8016494:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8016498:	e7c4      	b.n	8016424 <fill_path_even_odd+0xb7c>
 801649a:	bf00      	nop
 801649c:	20082f74 	.word	0x20082f74
 80164a0:	20082f78 	.word	0x20082f78
 80164a4:	20082f68 	.word	0x20082f68
 80164a8:	20000064 	.word	0x20000064
 80164ac:	ff000100 	.word	0xff000100
 80164b0:	20082fec 	.word	0x20082fec
 80164b4:	20082f70 	.word	0x20082f70
 80164b8:	4b66      	ldr	r3, [pc, #408]	@ (8016654 <fill_path_even_odd+0xdac>)
 80164ba:	2007      	movs	r0, #7
 80164bc:	681b      	ldr	r3, [r3, #0]
 80164be:	9303      	str	r3, [sp, #12]
 80164c0:	4b65      	ldr	r3, [pc, #404]	@ (8016658 <fill_path_even_odd+0xdb0>)
 80164c2:	681d      	ldr	r5, [r3, #0]
 80164c4:	f007 fbf6 	bl	801dcb4 <nema_cl_get_space>
 80164c8:	2800      	cmp	r0, #0
 80164ca:	d0c9      	beq.n	8016460 <fill_path_even_odd+0xbb8>
 80164cc:	4a63      	ldr	r2, [pc, #396]	@ (801665c <fill_path_even_odd+0xdb4>)
 80164ce:	f8db 3000 	ldr.w	r3, [fp]
 80164d2:	7812      	ldrb	r2, [r2, #0]
 80164d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80164d6:	2a01      	cmp	r2, #1
 80164d8:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 80164dc:	d104      	bne.n	80164e8 <fill_path_even_odd+0xc40>
 80164de:	4a5f      	ldr	r2, [pc, #380]	@ (801665c <fill_path_even_odd+0xdb4>)
 80164e0:	6852      	ldr	r2, [r2, #4]
 80164e2:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 80164e6:	4313      	orrs	r3, r2
 80164e8:	f44f 7248 	mov.w	r2, #800	@ 0x320
 80164ec:	6002      	str	r2, [r0, #0]
 80164ee:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 80164f2:	f44f 7249 	mov.w	r2, #804	@ 0x324
 80164f6:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 80164fa:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80164fe:	6082      	str	r2, [r0, #8]
 8016500:	edc0 7a01 	vstr	s15, [r0, #4]
 8016504:	f8c0 e018 	str.w	lr, [r0, #24]
 8016508:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 801650c:	f8c0 c010 	str.w	ip, [r0, #16]
 8016510:	f8c0 e00c 	str.w	lr, [r0, #12]
 8016514:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8016518:	f043 0304 	orr.w	r3, r3, #4
 801651c:	6343      	str	r3, [r0, #52]	@ 0x34
 801651e:	9b03      	ldr	r3, [sp, #12]
 8016520:	f8c0 c014 	str.w	ip, [r0, #20]
 8016524:	6243      	str	r3, [r0, #36]	@ 0x24
 8016526:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016528:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801652c:	61c3      	str	r3, [r0, #28]
 801652e:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8016532:	4a4b      	ldr	r2, [pc, #300]	@ (8016660 <fill_path_even_odd+0xdb8>)
 8016534:	3401      	adds	r4, #1
 8016536:	4554      	cmp	r4, sl
 8016538:	62c5      	str	r5, [r0, #44]	@ 0x2c
 801653a:	6302      	str	r2, [r0, #48]	@ 0x30
 801653c:	6201      	str	r1, [r0, #32]
 801653e:	6283      	str	r3, [r0, #40]	@ 0x28
 8016540:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016544:	e887 0003 	stmia.w	r7, {r0, r1}
 8016548:	d191      	bne.n	801646e <fill_path_even_odd+0xbc6>
 801654a:	46b2      	mov	sl, r6
 801654c:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8016550:	9e05      	ldr	r6, [sp, #20]
 8016552:	f8db 3000 	ldr.w	r3, [fp]
 8016556:	7f1b      	ldrb	r3, [r3, #28]
 8016558:	b1b3      	cbz	r3, 8016588 <fill_path_even_odd+0xce0>
 801655a:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 801655e:	eddd 7a15 	vldr	s15, [sp, #84]	@ 0x54
 8016562:	ee77 7a67 	vsub.f32	s15, s14, s15
 8016566:	eef5 7a40 	vcmp.f32	s15, #0.0
 801656a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801656e:	d10b      	bne.n	8016588 <fill_path_even_odd+0xce0>
 8016570:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8016574:	eddd 7a16 	vldr	s15, [sp, #88]	@ 0x58
 8016578:	ee77 7a67 	vsub.f32	s15, s14, s15
 801657c:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016584:	f43f add2 	beq.w	801612c <fill_path_even_odd+0x884>
 8016588:	2301      	movs	r3, #1
 801658a:	f88d 3019 	strb.w	r3, [sp, #25]
 801658e:	e5d0      	b.n	8016132 <fill_path_even_odd+0x88a>
 8016590:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8016594:	2d00      	cmp	r5, #0
 8016596:	bf18      	it	ne
 8016598:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 801659c:	4b2f      	ldr	r3, [pc, #188]	@ (801665c <fill_path_even_odd+0xdb4>)
 801659e:	4015      	ands	r5, r2
 80165a0:	781b      	ldrb	r3, [r3, #0]
 80165a2:	2b01      	cmp	r3, #1
 80165a4:	d104      	bne.n	80165b0 <fill_path_even_odd+0xd08>
 80165a6:	4b2d      	ldr	r3, [pc, #180]	@ (801665c <fill_path_even_odd+0xdb4>)
 80165a8:	685b      	ldr	r3, [r3, #4]
 80165aa:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80165ae:	431d      	orrs	r5, r3
 80165b0:	2005      	movs	r0, #5
 80165b2:	f007 fb7f 	bl	801dcb4 <nema_cl_get_space>
 80165b6:	2800      	cmp	r0, #0
 80165b8:	f43f af52 	beq.w	8016460 <fill_path_even_odd+0xbb8>
 80165bc:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 80165c0:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80165c4:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80165c8:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80165cc:	f045 050a 	orr.w	r5, r5, #10
 80165d0:	6245      	str	r5, [r0, #36]	@ 0x24
 80165d2:	4d23      	ldr	r5, [pc, #140]	@ (8016660 <fill_path_even_odd+0xdb8>)
 80165d4:	edc0 9a01 	vstr	s19, [r0, #4]
 80165d8:	ed80 aa03 	vstr	s20, [r0, #12]
 80165dc:	ed80 8a05 	vstr	s16, [r0, #20]
 80165e0:	edc0 8a07 	vstr	s17, [r0, #28]
 80165e4:	6205      	str	r5, [r0, #32]
 80165e6:	f8c0 c000 	str.w	ip, [r0]
 80165ea:	6081      	str	r1, [r0, #8]
 80165ec:	6102      	str	r2, [r0, #16]
 80165ee:	6183      	str	r3, [r0, #24]
 80165f0:	e736      	b.n	8016460 <fill_path_even_odd+0xbb8>
 80165f2:	e9d3 240a 	ldrd	r2, r4, [r3, #40]	@ 0x28
 80165f6:	2a00      	cmp	r2, #0
 80165f8:	bf18      	it	ne
 80165fa:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 80165fe:	4b17      	ldr	r3, [pc, #92]	@ (801665c <fill_path_even_odd+0xdb4>)
 8016600:	4014      	ands	r4, r2
 8016602:	781b      	ldrb	r3, [r3, #0]
 8016604:	2b01      	cmp	r3, #1
 8016606:	d01f      	beq.n	8016648 <fill_path_even_odd+0xda0>
 8016608:	2005      	movs	r0, #5
 801660a:	f007 fb53 	bl	801dcb4 <nema_cl_get_space>
 801660e:	2800      	cmp	r0, #0
 8016610:	f43f ad8c 	beq.w	801612c <fill_path_even_odd+0x884>
 8016614:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8016618:	f44f 7549 	mov.w	r5, #804	@ 0x324
 801661c:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8016620:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8016624:	4b0e      	ldr	r3, [pc, #56]	@ (8016660 <fill_path_even_odd+0xdb8>)
 8016626:	f044 040a 	orr.w	r4, r4, #10
 801662a:	6244      	str	r4, [r0, #36]	@ 0x24
 801662c:	edc0 9a01 	vstr	s19, [r0, #4]
 8016630:	ed80 aa03 	vstr	s20, [r0, #12]
 8016634:	ed80 8a05 	vstr	s16, [r0, #20]
 8016638:	edc0 8a07 	vstr	s17, [r0, #28]
 801663c:	6007      	str	r7, [r0, #0]
 801663e:	6085      	str	r5, [r0, #8]
 8016640:	6101      	str	r1, [r0, #16]
 8016642:	6182      	str	r2, [r0, #24]
 8016644:	6203      	str	r3, [r0, #32]
 8016646:	e571      	b.n	801612c <fill_path_even_odd+0x884>
 8016648:	4b04      	ldr	r3, [pc, #16]	@ (801665c <fill_path_even_odd+0xdb4>)
 801664a:	685b      	ldr	r3, [r3, #4]
 801664c:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8016650:	431c      	orrs	r4, r3
 8016652:	e7d9      	b.n	8016608 <fill_path_even_odd+0xd60>
 8016654:	20082f74 	.word	0x20082f74
 8016658:	20082f78 	.word	0x20082f78
 801665c:	20000064 	.word	0x20000064
 8016660:	ff000100 	.word	0xff000100

08016664 <draw_with_stencil>:
 8016664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016668:	ed2d 8b10 	vpush	{d8-d15}
 801666c:	f8df 9380 	ldr.w	r9, [pc, #896]	@ 80169f0 <draw_with_stencil+0x38c>
 8016670:	4604      	mov	r4, r0
 8016672:	f8d9 0000 	ldr.w	r0, [r9]
 8016676:	b0ad      	sub	sp, #180	@ 0xb4
 8016678:	6883      	ldr	r3, [r0, #8]
 801667a:	9104      	str	r1, [sp, #16]
 801667c:	2b00      	cmp	r3, #0
 801667e:	f000 87cf 	beq.w	8017620 <draw_with_stencil+0xfbc>
 8016682:	e9d0 2304 	ldrd	r2, r3, [r0, #16]
 8016686:	f04f 0800 	mov.w	r8, #0
 801668a:	2508      	movs	r5, #8
 801668c:	4fd6      	ldr	r7, [pc, #856]	@ (80169e8 <draw_with_stencil+0x384>)
 801668e:	68c1      	ldr	r1, [r0, #12]
 8016690:	e9cd 2801 	strd	r2, r8, [sp, #4]
 8016694:	2003      	movs	r0, #3
 8016696:	9500      	str	r5, [sp, #0]
 8016698:	f7fa fa2c 	bl	8010af4 <nema_bind_tex>
 801669c:	683a      	ldr	r2, [r7, #0]
 801669e:	f8d9 3000 	ldr.w	r3, [r9]
 80166a2:	7f12      	ldrb	r2, [r2, #28]
 80166a4:	4628      	mov	r0, r5
 80166a6:	4542      	cmp	r2, r8
 80166a8:	691a      	ldr	r2, [r3, #16]
 80166aa:	695e      	ldr	r6, [r3, #20]
 80166ac:	bf0c      	ite	eq
 80166ae:	46c2      	moveq	sl, r8
 80166b0:	f04f 3a80 	movne.w	sl, #2155905152	@ 0x80808080
 80166b4:	9205      	str	r2, [sp, #20]
 80166b6:	f007 fafd 	bl	801dcb4 <nema_cl_get_space>
 80166ba:	4603      	mov	r3, r0
 80166bc:	2800      	cmp	r0, #0
 80166be:	f000 85ba 	beq.w	8017236 <draw_with_stencil+0xbd2>
 80166c2:	9a05      	ldr	r2, [sp, #20]
 80166c4:	0436      	lsls	r6, r6, #16
 80166c6:	3203      	adds	r2, #3
 80166c8:	0892      	lsrs	r2, r2, #2
 80166ca:	f8c0 a024 	str.w	sl, [r0, #36]	@ 0x24
 80166ce:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 80166d2:	ea4f 0a82 	mov.w	sl, r2, lsl #2
 80166d6:	4640      	mov	r0, r8
 80166d8:	fa1f f882 	uxth.w	r8, r2
 80166dc:	4332      	orrs	r2, r6
 80166de:	60da      	str	r2, [r3, #12]
 80166e0:	2501      	movs	r5, #1
 80166e2:	f44f 72e8 	mov.w	r2, #464	@ 0x1d0
 80166e6:	e9c3 2504 	strd	r2, r5, [r3, #16]
 80166ea:	f44f 728e 	mov.w	r2, #284	@ 0x11c
 80166ee:	619a      	str	r2, [r3, #24]
 80166f0:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80166f4:	621a      	str	r2, [r3, #32]
 80166f6:	f44f 7288 	mov.w	r2, #272	@ 0x110
 80166fa:	629a      	str	r2, [r3, #40]	@ 0x28
 80166fc:	f44f 728a 	mov.w	r2, #276	@ 0x114
 8016700:	f04f 0e34 	mov.w	lr, #52	@ 0x34
 8016704:	f04f 0c38 	mov.w	ip, #56	@ 0x38
 8016708:	f04f 4110 	mov.w	r1, #2415919104	@ 0x90000000
 801670c:	f44f 7b8c 	mov.w	fp, #280	@ 0x118
 8016710:	631a      	str	r2, [r3, #48]	@ 0x30
 8016712:	fa1f fa8a 	uxth.w	sl, sl
 8016716:	4ab5      	ldr	r2, [pc, #724]	@ (80169ec <draw_with_stencil+0x388>)
 8016718:	ea48 0806 	orr.w	r8, r8, r6
 801671c:	f04a 7a80 	orr.w	sl, sl, #16777216	@ 0x1000000
 8016720:	f8c3 8034 	str.w	r8, [r3, #52]	@ 0x34
 8016724:	f8c3 a004 	str.w	sl, [r3, #4]
 8016728:	f8c3 e000 	str.w	lr, [r3]
 801672c:	f8c3 c008 	str.w	ip, [r3, #8]
 8016730:	f8c3 b038 	str.w	fp, [r3, #56]	@ 0x38
 8016734:	63d9      	str	r1, [r3, #60]	@ 0x3c
 8016736:	61da      	str	r2, [r3, #28]
 8016738:	f7fb fc6a 	bl	8012010 <nema_enable_aa_flags>
 801673c:	f8d9 3000 	ldr.w	r3, [r9]
 8016740:	4680      	mov	r8, r0
 8016742:	edd3 7a06 	vldr	s15, [r3, #24]
 8016746:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801674a:	edd3 6a07 	vldr	s13, [r3, #28]
 801674e:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8016752:	ed93 6a08 	vldr	s12, [r3, #32]
 8016756:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
 801675a:	ed93 7a09 	vldr	s14, [r3, #36]	@ 0x24
 801675e:	ed8d 7a1f 	vstr	s14, [sp, #124]	@ 0x7c
 8016762:	ed93 5a0a 	vldr	s10, [r3, #40]	@ 0x28
 8016766:	ed8d 5a20 	vstr	s10, [sp, #128]	@ 0x80
 801676a:	ed93 4a0b 	vldr	s8, [r3, #44]	@ 0x2c
 801676e:	ed8d 4a21 	vstr	s8, [sp, #132]	@ 0x84
 8016772:	edd3 5a0c 	vldr	s11, [r3, #48]	@ 0x30
 8016776:	eef4 7ac6 	vcmpe.f32	s15, s12
 801677a:	edcd 5a22 	vstr	s11, [sp, #136]	@ 0x88
 801677e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016782:	edd3 4a0d 	vldr	s9, [r3, #52]	@ 0x34
 8016786:	edcd 4a23 	vstr	s9, [sp, #140]	@ 0x8c
 801678a:	dd7a      	ble.n	8016882 <draw_with_stencil+0x21e>
 801678c:	aa1e      	add	r2, sp, #120	@ 0x78
 801678e:	ed92 7a00 	vldr	s14, [r2]
 8016792:	eeb4 5ac7 	vcmpe.f32	s10, s14
 8016796:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801679a:	d432      	bmi.n	8016802 <draw_with_stencil+0x19e>
 801679c:	ee77 7a45 	vsub.f32	s15, s14, s10
 80167a0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80167a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167a8:	f100 85f9 	bmi.w	801739e <draw_with_stencil+0xd3a>
 80167ac:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80167b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167b4:	f100 85d4 	bmi.w	8017360 <draw_with_stencil+0xcfc>
 80167b8:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 80167bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167c0:	eeb0 6a47 	vmov.f32	s12, s14
 80167c4:	f100 85d4 	bmi.w	8017370 <draw_with_stencil+0xd0c>
 80167c8:	eeb4 5ac6 	vcmpe.f32	s10, s12
 80167cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167d0:	f340 85d6 	ble.w	8017380 <draw_with_stencil+0xd1c>
 80167d4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80167d8:	ed9f 6a86 	vldr	s12, [pc, #536]	@ 80169f4 <draw_with_stencil+0x390>
 80167dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167e0:	bf54      	ite	pl
 80167e2:	ee27 7a06 	vmulpl.f32	s14, s14, s12
 80167e6:	ee27 7a46 	vnmulmi.f32	s14, s14, s12
 80167ea:	eef4 7ac7 	vcmpe.f32	s15, s14
 80167ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167f2:	d808      	bhi.n	8016806 <draw_with_stencil+0x1a2>
 80167f4:	edd2 7a01 	vldr	s15, [r2, #4]
 80167f8:	eeb4 4ae7 	vcmpe.f32	s8, s15
 80167fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016800:	d501      	bpl.n	8016806 <draw_with_stencil+0x1a2>
 8016802:	2502      	movs	r5, #2
 8016804:	aa20      	add	r2, sp, #128	@ 0x80
 8016806:	edd2 7a00 	vldr	s15, [r2]
 801680a:	eef4 5ae7 	vcmpe.f32	s11, s15
 801680e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016812:	d46a      	bmi.n	80168ea <draw_with_stencil+0x286>
 8016814:	ee37 7ae5 	vsub.f32	s14, s15, s11
 8016818:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801681c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016820:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016824:	bf48      	it	mi
 8016826:	eeb1 7a47 	vnegmi.f32	s14, s14
 801682a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801682e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016832:	bf4c      	ite	mi
 8016834:	eeb1 6a67 	vnegmi.f32	s12, s15
 8016838:	eeb0 6a67 	vmovpl.f32	s12, s15
 801683c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016840:	f100 8553 	bmi.w	80172ea <draw_with_stencil+0xc86>
 8016844:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016848:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801684c:	f340 8555 	ble.w	80172fa <draw_with_stencil+0xc96>
 8016850:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016854:	ed9f 6a67 	vldr	s12, [pc, #412]	@ 80169f4 <draw_with_stencil+0x390>
 8016858:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801685c:	bf4c      	ite	mi
 801685e:	ee67 7ac6 	vnmulmi.f32	s15, s15, s12
 8016862:	ee67 7a86 	vmulpl.f32	s15, s15, s12
 8016866:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801686a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801686e:	d83d      	bhi.n	80168ec <draw_with_stencil+0x288>
 8016870:	edd2 7a01 	vldr	s15, [r2, #4]
 8016874:	eef4 4a67 	vcmp.f32	s9, s15
 8016878:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801687c:	bf48      	it	mi
 801687e:	2503      	movmi	r5, #3
 8016880:	e034      	b.n	80168ec <draw_with_stencil+0x288>
 8016882:	ee77 3ac6 	vsub.f32	s7, s15, s12
 8016886:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 801688a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801688e:	f100 857d 	bmi.w	801738c <draw_with_stencil+0xd28>
 8016892:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016896:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801689a:	f100 8589 	bmi.w	80173b0 <draw_with_stencil+0xd4c>
 801689e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80168a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168a6:	eeb0 3a67 	vmov.f32	s6, s15
 80168aa:	f100 8589 	bmi.w	80173c0 <draw_with_stencil+0xd5c>
 80168ae:	eeb4 6ac3 	vcmpe.f32	s12, s6
 80168b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168b6:	f340 858b 	ble.w	80173d0 <draw_with_stencil+0xd6c>
 80168ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80168be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168c2:	ed9f 6a4c 	vldr	s12, [pc, #304]	@ 80169f4 <draw_with_stencil+0x390>
 80168c6:	f101 8089 	bmi.w	80179dc <draw_with_stencil+0x1378>
 80168ca:	ee66 7a27 	vmul.f32	s15, s12, s15
 80168ce:	eef4 3ae7 	vcmpe.f32	s7, s15
 80168d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168d6:	f200 865b 	bhi.w	8017590 <draw_with_stencil+0xf2c>
 80168da:	eef4 6ac7 	vcmpe.f32	s13, s14
 80168de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168e2:	f340 8655 	ble.w	8017590 <draw_with_stencil+0xf2c>
 80168e6:	2501      	movs	r5, #1
 80168e8:	e750      	b.n	801678c <draw_with_stencil+0x128>
 80168ea:	2503      	movs	r5, #3
 80168ec:	1cea      	adds	r2, r5, #3
 80168ee:	1c69      	adds	r1, r5, #1
 80168f0:	a82c      	add	r0, sp, #176	@ 0xb0
 80168f2:	f002 0203 	and.w	r2, r2, #3
 80168f6:	f001 0103 	and.w	r1, r1, #3
 80168fa:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 80168fe:	eb00 05c5 	add.w	r5, r0, r5, lsl #3
 8016902:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8016906:	ed55 4a10 	vldr	s9, [r5, #-64]	@ 0xffffffc0
 801690a:	ed15 5a0f 	vldr	s10, [r5, #-60]	@ 0xffffffc4
 801690e:	ed52 7a10 	vldr	s15, [r2, #-64]	@ 0xffffffc0
 8016912:	ed51 5a0f 	vldr	s11, [r1, #-60]	@ 0xffffffc4
 8016916:	ed11 7a10 	vldr	s14, [r1, #-64]	@ 0xffffffc0
 801691a:	ed12 6a0f 	vldr	s12, [r2, #-60]	@ 0xffffffc4
 801691e:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8016922:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8016926:	ee37 7a64 	vsub.f32	s14, s14, s9
 801692a:	ee36 6a45 	vsub.f32	s12, s12, s10
 801692e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8016932:	ee27 7a06 	vmul.f32	s14, s14, s12
 8016936:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801693a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801693e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016942:	dd19      	ble.n	8016978 <draw_with_stencil+0x314>
 8016944:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 8016948:	aa1c      	add	r2, sp, #112	@ 0x70
 801694a:	c903      	ldmia	r1, {r0, r1}
 801694c:	e882 0003 	stmia.w	r2, {r0, r1}
 8016950:	f103 0128 	add.w	r1, r3, #40	@ 0x28
 8016954:	aa1e      	add	r2, sp, #120	@ 0x78
 8016956:	c903      	ldmia	r1, {r0, r1}
 8016958:	e882 0003 	stmia.w	r2, {r0, r1}
 801695c:	f103 0120 	add.w	r1, r3, #32
 8016960:	aa20      	add	r2, sp, #128	@ 0x80
 8016962:	c903      	ldmia	r1, {r0, r1}
 8016964:	e882 0003 	stmia.w	r2, {r0, r1}
 8016968:	3318      	adds	r3, #24
 801696a:	aa22      	add	r2, sp, #136	@ 0x88
 801696c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8016970:	e882 0003 	stmia.w	r2, {r0, r1}
 8016974:	eddd 6a1d 	vldr	s13, [sp, #116]	@ 0x74
 8016978:	eddd 7a1f 	vldr	s15, [sp, #124]	@ 0x7c
 801697c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016980:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016984:	d438      	bmi.n	80169f8 <draw_with_stencil+0x394>
 8016986:	ee36 6ae7 	vsub.f32	s12, s13, s15
 801698a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801698e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016992:	f100 84dc 	bmi.w	801734e <draw_with_stencil+0xcea>
 8016996:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801699a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801699e:	f100 84c0 	bmi.w	8017322 <draw_with_stencil+0xcbe>
 80169a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80169a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169aa:	eef0 5a66 	vmov.f32	s11, s13
 80169ae:	f100 84c0 	bmi.w	8017332 <draw_with_stencil+0xcce>
 80169b2:	eef4 7ae5 	vcmpe.f32	s15, s11
 80169b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169ba:	f300 86ae 	bgt.w	801771a <draw_with_stencil+0x10b6>
 80169be:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 80169f4 <draw_with_stencil+0x390>
 80169c2:	ee27 7a87 	vmul.f32	s14, s15, s14
 80169c6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80169ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169ce:	db08      	blt.n	80169e2 <draw_with_stencil+0x37e>
 80169d0:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 80169d4:	ed9d 7a1e 	vldr	s14, [sp, #120]	@ 0x78
 80169d8:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80169dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169e0:	d40a      	bmi.n	80169f8 <draw_with_stencil+0x394>
 80169e2:	2300      	movs	r3, #0
 80169e4:	ad1c      	add	r5, sp, #112	@ 0x70
 80169e6:	e009      	b.n	80169fc <draw_with_stencil+0x398>
 80169e8:	20082f68 	.word	0x20082f68
 80169ec:	1c1f0015 	.word	0x1c1f0015
 80169f0:	20083010 	.word	0x20083010
 80169f4:	3727c5ac 	.word	0x3727c5ac
 80169f8:	2301      	movs	r3, #1
 80169fa:	ad1e      	add	r5, sp, #120	@ 0x78
 80169fc:	ed95 6a01 	vldr	s12, [r5, #4]
 8016a00:	ed9d 7a21 	vldr	s14, [sp, #132]	@ 0x84
 8016a04:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8016a08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a0c:	dc2d      	bgt.n	8016a6a <draw_with_stencil+0x406>
 8016a0e:	ee76 5a47 	vsub.f32	s11, s12, s14
 8016a12:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016a16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a1a:	f100 8432 	bmi.w	8017282 <draw_with_stencil+0xc1e>
 8016a1e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016a22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a26:	f100 8567 	bmi.w	80174f8 <draw_with_stencil+0xe94>
 8016a2a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016a2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a32:	eeb0 5a46 	vmov.f32	s10, s12
 8016a36:	f100 8567 	bmi.w	8017508 <draw_with_stencil+0xea4>
 8016a3a:	eeb4 7ac5 	vcmpe.f32	s14, s10
 8016a3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a42:	f300 8650 	bgt.w	80176e6 <draw_with_stencil+0x1082>
 8016a46:	ed1f 6a15 	vldr	s12, [pc, #-84]	@ 80169f4 <draw_with_stencil+0x390>
 8016a4a:	ee27 6a06 	vmul.f32	s12, s14, s12
 8016a4e:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016a52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a56:	db0a      	blt.n	8016a6e <draw_with_stencil+0x40a>
 8016a58:	edd5 5a00 	vldr	s11, [r5]
 8016a5c:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8016a60:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016a64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a68:	d501      	bpl.n	8016a6e <draw_with_stencil+0x40a>
 8016a6a:	2302      	movs	r3, #2
 8016a6c:	ad20      	add	r5, sp, #128	@ 0x80
 8016a6e:	ed95 6a01 	vldr	s12, [r5, #4]
 8016a72:	ed9d 8a23 	vldr	s16, [sp, #140]	@ 0x8c
 8016a76:	eeb4 8ac6 	vcmpe.f32	s16, s12
 8016a7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a7e:	d42f      	bmi.n	8016ae0 <draw_with_stencil+0x47c>
 8016a80:	ee76 5a48 	vsub.f32	s11, s12, s16
 8016a84:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016a88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a8c:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016a90:	bf48      	it	mi
 8016a92:	eef1 5a65 	vnegmi.f32	s11, s11
 8016a96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a9a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016a9e:	bf4c      	ite	mi
 8016aa0:	eeb1 5a46 	vnegmi.f32	s10, s12
 8016aa4:	eeb0 5a46 	vmovpl.f32	s10, s12
 8016aa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016aac:	f100 842b 	bmi.w	8017306 <draw_with_stencil+0xca2>
 8016ab0:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016ab4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ab8:	f300 8656 	bgt.w	8017768 <draw_with_stencil+0x1104>
 8016abc:	ed1f 6a33 	vldr	s12, [pc, #-204]	@ 80169f4 <draw_with_stencil+0x390>
 8016ac0:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016ac4:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016ac8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016acc:	d80a      	bhi.n	8016ae4 <draw_with_stencil+0x480>
 8016ace:	edd5 5a00 	vldr	s11, [r5]
 8016ad2:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016ad6:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016ada:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ade:	d501      	bpl.n	8016ae4 <draw_with_stencil+0x480>
 8016ae0:	2303      	movs	r3, #3
 8016ae2:	ad22      	add	r5, sp, #136	@ 0x88
 8016ae4:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016ae8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016aec:	f100 816c 	bmi.w	8016dc8 <draw_with_stencil+0x764>
 8016af0:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016af4:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016af8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016afc:	f100 853f 	bmi.w	801757e <draw_with_stencil+0xf1a>
 8016b00:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016b04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b08:	f100 8523 	bmi.w	8017552 <draw_with_stencil+0xeee>
 8016b0c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016b10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b14:	eeb0 5a66 	vmov.f32	s10, s13
 8016b18:	f100 8523 	bmi.w	8017562 <draw_with_stencil+0xefe>
 8016b1c:	eeb4 5ae7 	vcmpe.f32	s10, s15
 8016b20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b24:	f100 8606 	bmi.w	8017734 <draw_with_stencil+0x10d0>
 8016b28:	ed1f 6a4e 	vldr	s12, [pc, #-312]	@ 80169f4 <draw_with_stencil+0x390>
 8016b2c:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016b30:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016b34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b38:	d809      	bhi.n	8016b4e <draw_with_stencil+0x4ea>
 8016b3a:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016b3e:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016b42:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016b46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b4a:	f100 813d 	bmi.w	8016dc8 <draw_with_stencil+0x764>
 8016b4e:	eef0 8a66 	vmov.f32	s17, s13
 8016b52:	eef4 8ac7 	vcmpe.f32	s17, s14
 8016b56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b5a:	f10d 0e70 	add.w	lr, sp, #112	@ 0x70
 8016b5e:	f340 813d 	ble.w	8016ddc <draw_with_stencil+0x778>
 8016b62:	eef0 8a47 	vmov.f32	s17, s14
 8016b66:	f10d 0e80 	add.w	lr, sp, #128	@ 0x80
 8016b6a:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8016b6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b72:	d42f      	bmi.n	8016bd4 <draw_with_stencil+0x570>
 8016b74:	ee78 5ac8 	vsub.f32	s11, s17, s16
 8016b78:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016b7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b80:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8016b84:	bf48      	it	mi
 8016b86:	eef1 5a65 	vnegmi.f32	s11, s11
 8016b8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b8e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016b92:	bf4c      	ite	mi
 8016b94:	eeb1 5a68 	vnegmi.f32	s10, s17
 8016b98:	eeb0 5a68 	vmovpl.f32	s10, s17
 8016b9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ba0:	f100 838d 	bmi.w	80172be <draw_with_stencil+0xc5a>
 8016ba4:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016ba8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bac:	f300 85cf 	bgt.w	801774e <draw_with_stencil+0x10ea>
 8016bb0:	ed1f 6a70 	vldr	s12, [pc, #-448]	@ 80169f4 <draw_with_stencil+0x390>
 8016bb4:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016bb8:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016bbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bc0:	d80c      	bhi.n	8016bdc <draw_with_stencil+0x578>
 8016bc2:	edde 5a00 	vldr	s11, [lr]
 8016bc6:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016bca:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016bce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bd2:	dd03      	ble.n	8016bdc <draw_with_stencil+0x578>
 8016bd4:	eef0 8a48 	vmov.f32	s17, s16
 8016bd8:	f10d 0e88 	add.w	lr, sp, #136	@ 0x88
 8016bdc:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016be0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016be4:	f300 812b 	bgt.w	8016e3e <draw_with_stencil+0x7da>
 8016be8:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016bec:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016bf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bf4:	f100 8477 	bmi.w	80174e6 <draw_with_stencil+0xe82>
 8016bf8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016bfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c00:	f100 845b 	bmi.w	80174ba <draw_with_stencil+0xe56>
 8016c04:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016c08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c0c:	eeb0 5a66 	vmov.f32	s10, s13
 8016c10:	f100 845b 	bmi.w	80174ca <draw_with_stencil+0xe66>
 8016c14:	eef4 7ac5 	vcmpe.f32	s15, s10
 8016c18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c1c:	f300 8522 	bgt.w	8017664 <draw_with_stencil+0x1000>
 8016c20:	ed1f 6a8c 	vldr	s12, [pc, #-560]	@ 80169f4 <draw_with_stencil+0x390>
 8016c24:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016c28:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016c2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c30:	db09      	blt.n	8016c46 <draw_with_stencil+0x5e2>
 8016c32:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016c36:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016c3a:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016c3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c42:	f300 80fc 	bgt.w	8016e3e <draw_with_stencil+0x7da>
 8016c46:	a91c      	add	r1, sp, #112	@ 0x70
 8016c48:	ed91 6a01 	vldr	s12, [r1, #4]
 8016c4c:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8016c50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c54:	f04f 0000 	mov.w	r0, #0
 8016c58:	f340 80fc 	ble.w	8016e54 <draw_with_stencil+0x7f0>
 8016c5c:	2002      	movs	r0, #2
 8016c5e:	a920      	add	r1, sp, #128	@ 0x80
 8016c60:	ed91 6a01 	vldr	s12, [r1, #4]
 8016c64:	eeb4 6ac8 	vcmpe.f32	s12, s16
 8016c68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c6c:	d42f      	bmi.n	8016cce <draw_with_stencil+0x66a>
 8016c6e:	ee76 5a48 	vsub.f32	s11, s12, s16
 8016c72:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016c76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c7a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016c7e:	bf48      	it	mi
 8016c80:	eef1 5a65 	vnegmi.f32	s11, s11
 8016c84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c88:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016c8c:	bf4c      	ite	mi
 8016c8e:	eeb1 5a46 	vnegmi.f32	s10, s12
 8016c92:	eeb0 5a46 	vmovpl.f32	s10, s12
 8016c96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c9a:	f100 8443 	bmi.w	8017524 <draw_with_stencil+0xec0>
 8016c9e:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016ca2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ca6:	f300 8504 	bgt.w	80176b2 <draw_with_stencil+0x104e>
 8016caa:	ed1f 6aae 	vldr	s12, [pc, #-696]	@ 80169f4 <draw_with_stencil+0x390>
 8016cae:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016cb2:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016cb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cba:	d80a      	bhi.n	8016cd2 <draw_with_stencil+0x66e>
 8016cbc:	edd1 5a00 	vldr	s11, [r1]
 8016cc0:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016cc4:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016cc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ccc:	d501      	bpl.n	8016cd2 <draw_with_stencil+0x66e>
 8016cce:	2003      	movs	r0, #3
 8016cd0:	a922      	add	r1, sp, #136	@ 0x88
 8016cd2:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016cd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cda:	f300 80ef 	bgt.w	8016ebc <draw_with_stencil+0x858>
 8016cde:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016ce2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016ce6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cea:	f100 83a6 	bmi.w	801743a <draw_with_stencil+0xdd6>
 8016cee:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016cf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cf6:	f100 838b 	bmi.w	8017410 <draw_with_stencil+0xdac>
 8016cfa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016cfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d02:	eeb0 5a66 	vmov.f32	s10, s13
 8016d06:	f100 838b 	bmi.w	8017420 <draw_with_stencil+0xdbc>
 8016d0a:	eef4 7ac5 	vcmpe.f32	s15, s10
 8016d0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d12:	f300 84db 	bgt.w	80176cc <draw_with_stencil+0x1068>
 8016d16:	ed1f 6ac9 	vldr	s12, [pc, #-804]	@ 80169f4 <draw_with_stencil+0x390>
 8016d1a:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016d1e:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016d22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d26:	db09      	blt.n	8016d3c <draw_with_stencil+0x6d8>
 8016d28:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016d2c:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016d30:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016d34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d38:	f100 80c0 	bmi.w	8016ebc <draw_with_stencil+0x858>
 8016d3c:	eef0 7a66 	vmov.f32	s15, s13
 8016d40:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8016d44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d48:	f10d 0c70 	add.w	ip, sp, #112	@ 0x70
 8016d4c:	f340 80be 	ble.w	8016ecc <draw_with_stencil+0x868>
 8016d50:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8016d54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d58:	f10d 0c80 	add.w	ip, sp, #128	@ 0x80
 8016d5c:	f300 80ed 	bgt.w	8016f3a <draw_with_stencil+0x8d6>
 8016d60:	ee77 6a48 	vsub.f32	s13, s14, s16
 8016d64:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016d68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d6c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016d70:	bf48      	it	mi
 8016d72:	eef1 6a66 	vnegmi.f32	s13, s13
 8016d76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d7a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016d7e:	bf4c      	ite	mi
 8016d80:	eeb1 6a47 	vnegmi.f32	s12, s14
 8016d84:	eeb0 6a47 	vmovpl.f32	s12, s14
 8016d88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d8c:	f100 8373 	bmi.w	8017476 <draw_with_stencil+0xe12>
 8016d90:	eeb4 8ac6 	vcmpe.f32	s16, s12
 8016d94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d98:	f300 847e 	bgt.w	8017698 <draw_with_stencil+0x1034>
 8016d9c:	ed5f 7aeb 	vldr	s15, [pc, #-940]	@ 80169f4 <draw_with_stencil+0x390>
 8016da0:	ee68 7a27 	vmul.f32	s15, s16, s15
 8016da4:	eef4 6ae7 	vcmpe.f32	s13, s15
 8016da8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dac:	d809      	bhi.n	8016dc2 <draw_with_stencil+0x75e>
 8016dae:	eddc 6a00 	vldr	s13, [ip]
 8016db2:	eddd 7a22 	vldr	s15, [sp, #136]	@ 0x88
 8016db6:	eef4 6ae7 	vcmpe.f32	s13, s15
 8016dba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dbe:	f300 80bc 	bgt.w	8016f3a <draw_with_stencil+0x8d6>
 8016dc2:	eeb0 8a47 	vmov.f32	s16, s14
 8016dc6:	e0ba      	b.n	8016f3e <draw_with_stencil+0x8da>
 8016dc8:	eef0 8a67 	vmov.f32	s17, s15
 8016dcc:	eef4 8ac7 	vcmpe.f32	s17, s14
 8016dd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dd4:	f10d 0e78 	add.w	lr, sp, #120	@ 0x78
 8016dd8:	f73f aec3 	bgt.w	8016b62 <draw_with_stencil+0x4fe>
 8016ddc:	ee78 5ac7 	vsub.f32	s11, s17, s14
 8016de0:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016de4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016de8:	f100 8276 	bmi.w	80172d8 <draw_with_stencil+0xc74>
 8016dec:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8016df0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016df4:	f100 824e 	bmi.w	8017294 <draw_with_stencil+0xc30>
 8016df8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016dfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e00:	eeb0 5a68 	vmov.f32	s10, s17
 8016e04:	f100 824e 	bmi.w	80172a4 <draw_with_stencil+0xc40>
 8016e08:	eeb4 5ac7 	vcmpe.f32	s10, s14
 8016e0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e10:	f100 8435 	bmi.w	801767e <draw_with_stencil+0x101a>
 8016e14:	ed9f 6a28 	vldr	s12, [pc, #160]	@ 8016eb8 <draw_with_stencil+0x854>
 8016e18:	ee27 6a06 	vmul.f32	s12, s14, s12
 8016e1c:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016e20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e24:	f63f aea1 	bhi.w	8016b6a <draw_with_stencil+0x506>
 8016e28:	edde 5a00 	vldr	s11, [lr]
 8016e2c:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8016e30:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016e34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e38:	f73f ae93 	bgt.w	8016b62 <draw_with_stencil+0x4fe>
 8016e3c:	e695      	b.n	8016b6a <draw_with_stencil+0x506>
 8016e3e:	a91e      	add	r1, sp, #120	@ 0x78
 8016e40:	ed91 6a01 	vldr	s12, [r1, #4]
 8016e44:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8016e48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e4c:	f04f 0001 	mov.w	r0, #1
 8016e50:	f73f af04 	bgt.w	8016c5c <draw_with_stencil+0x5f8>
 8016e54:	ee76 5a47 	vsub.f32	s11, s12, s14
 8016e58:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016e5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e60:	f100 836e 	bmi.w	8017540 <draw_with_stencil+0xedc>
 8016e64:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016e68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e6c:	f100 8310 	bmi.w	8017490 <draw_with_stencil+0xe2c>
 8016e70:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016e74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e78:	eeb0 5a46 	vmov.f32	s10, s12
 8016e7c:	f100 8310 	bmi.w	80174a0 <draw_with_stencil+0xe3c>
 8016e80:	eeb4 5ac7 	vcmpe.f32	s10, s14
 8016e84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e88:	f100 843a 	bmi.w	8017700 <draw_with_stencil+0x109c>
 8016e8c:	ed9f 6a0a 	vldr	s12, [pc, #40]	@ 8016eb8 <draw_with_stencil+0x854>
 8016e90:	ee27 6a06 	vmul.f32	s12, s14, s12
 8016e94:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016e98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e9c:	f6ff aee0 	blt.w	8016c60 <draw_with_stencil+0x5fc>
 8016ea0:	ed91 6a00 	vldr	s12, [r1]
 8016ea4:	eddd 5a20 	vldr	s11, [sp, #128]	@ 0x80
 8016ea8:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016eac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016eb0:	f73f aed4 	bgt.w	8016c5c <draw_with_stencil+0x5f8>
 8016eb4:	e6d4      	b.n	8016c60 <draw_with_stencil+0x5fc>
 8016eb6:	bf00      	nop
 8016eb8:	3727c5ac 	.word	0x3727c5ac
 8016ebc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8016ec0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ec4:	f10d 0c78 	add.w	ip, sp, #120	@ 0x78
 8016ec8:	f73f af42 	bgt.w	8016d50 <draw_with_stencil+0x6ec>
 8016ecc:	ee37 6ac7 	vsub.f32	s12, s15, s14
 8016ed0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016ed4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ed8:	f100 827e 	bmi.w	80173d8 <draw_with_stencil+0xd74>
 8016edc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016ee0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ee4:	f100 82b2 	bmi.w	801744c <draw_with_stencil+0xde8>
 8016ee8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016eec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ef0:	eef0 5a67 	vmov.f32	s11, s15
 8016ef4:	f100 82b2 	bmi.w	801745c <draw_with_stencil+0xdf8>
 8016ef8:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8016efc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f00:	f300 843f 	bgt.w	8017782 <draw_with_stencil+0x111e>
 8016f04:	ed5f 6a14 	vldr	s13, [pc, #-80]	@ 8016eb8 <draw_with_stencil+0x854>
 8016f08:	ee67 6a26 	vmul.f32	s13, s14, s13
 8016f0c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8016f10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f14:	db09      	blt.n	8016f2a <draw_with_stencil+0x8c6>
 8016f16:	eddc 6a00 	vldr	s13, [ip]
 8016f1a:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8016f1e:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8016f22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f26:	f53f af13 	bmi.w	8016d50 <draw_with_stencil+0x6ec>
 8016f2a:	eeb0 7a67 	vmov.f32	s14, s15
 8016f2e:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8016f32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f36:	f77f af13 	ble.w	8016d60 <draw_with_stencil+0x6fc>
 8016f3a:	f10d 0c88 	add.w	ip, sp, #136	@ 0x88
 8016f3e:	1c5a      	adds	r2, r3, #1
 8016f40:	f002 0203 	and.w	r2, r2, #3
 8016f44:	f10d 0ab0 	add.w	sl, sp, #176	@ 0xb0
 8016f48:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8016f4c:	4575      	cmp	r5, lr
 8016f4e:	ed52 fa10 	vldr	s31, [r2, #-64]	@ 0xffffffc0
 8016f52:	ed52 da0f 	vldr	s27, [r2, #-60]	@ 0xffffffc4
 8016f56:	ed9e ba00 	vldr	s22, [lr]
 8016f5a:	f000 8349 	beq.w	80175f0 <draw_with_stencil+0xf8c>
 8016f5e:	1c9a      	adds	r2, r3, #2
 8016f60:	f002 0203 	and.w	r2, r2, #3
 8016f64:	ab2c      	add	r3, sp, #176	@ 0xb0
 8016f66:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 8016f6a:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8016f6e:	ed12 aa10 	vldr	s20, [r2, #-64]	@ 0xffffffc0
 8016f72:	ed95 9a00 	vldr	s18, [r5]
 8016f76:	ee3a aa67 	vsub.f32	s20, s20, s15
 8016f7a:	ee39 9a27 	vadd.f32	s18, s18, s15
 8016f7e:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8016f82:	ed12 da0f 	vldr	s26, [r2, #-60]	@ 0xffffffc4
 8016f86:	ee2a aa27 	vmul.f32	s20, s20, s15
 8016f8a:	ee29 9a27 	vmul.f32	s18, s18, s15
 8016f8e:	ed95 ea01 	vldr	s28, [r5, #4]
 8016f92:	1cc3      	adds	r3, r0, #3
 8016f94:	f003 0303 	and.w	r3, r3, #3
 8016f98:	aa2c      	add	r2, sp, #176	@ 0xb0
 8016f9a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8016f9e:	4561      	cmp	r1, ip
 8016fa0:	ed13 ca10 	vldr	s24, [r3, #-64]	@ 0xffffffc0
 8016fa4:	ed53 ca0f 	vldr	s25, [r3, #-60]	@ 0xffffffc4
 8016fa8:	eddc ba00 	vldr	s23, [ip]
 8016fac:	f000 8342 	beq.w	8017634 <draw_with_stencil+0xfd0>
 8016fb0:	1c83      	adds	r3, r0, #2
 8016fb2:	f003 0303 	and.w	r3, r3, #3
 8016fb6:	aa2c      	add	r2, sp, #176	@ 0xb0
 8016fb8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8016fbc:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8016fc0:	ed53 aa10 	vldr	s21, [r3, #-64]	@ 0xffffffc0
 8016fc4:	edd1 9a00 	vldr	s19, [r1]
 8016fc8:	ee7a aae7 	vsub.f32	s21, s21, s15
 8016fcc:	ee79 9aa7 	vadd.f32	s19, s19, s15
 8016fd0:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8016fd4:	ed53 ea0f 	vldr	s29, [r3, #-60]	@ 0xffffffc4
 8016fd8:	ee6a aaa7 	vmul.f32	s21, s21, s15
 8016fdc:	ee69 9aa7 	vmul.f32	s19, s19, s15
 8016fe0:	ed91 fa01 	vldr	s30, [r1, #4]
 8016fe4:	2009      	movs	r0, #9
 8016fe6:	f006 fe65 	bl	801dcb4 <nema_cl_get_space>
 8016fea:	2800      	cmp	r0, #0
 8016fec:	d040      	beq.n	8017070 <draw_with_stencil+0xa0c>
 8016fee:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 8016ff2:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8016ff6:	ee7f fa87 	vadd.f32	s31, s31, s14
 8016ffa:	ee3b ba47 	vsub.f32	s22, s22, s14
 8016ffe:	ee6f faa7 	vmul.f32	s31, s31, s15
 8017002:	ee2b ba27 	vmul.f32	s22, s22, s15
 8017006:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 801700a:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 801700e:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 8017012:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8017016:	ed80 9a01 	vstr	s18, [r0, #4]
 801701a:	ed80 ea03 	vstr	s28, [r0, #12]
 801701e:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8017022:	f44f 7550 	mov.w	r5, #832	@ 0x340
 8017026:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801702a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801702e:	edc0 da07 	vstr	s27, [r0, #28]
 8017032:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8017036:	ed80 da0b 	vstr	s26, [r0, #44]	@ 0x2c
 801703a:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 801703e:	edc0 fa05 	vstr	s31, [r0, #20]
 8017042:	ed80 ba0d 	vstr	s22, [r0, #52]	@ 0x34
 8017046:	f8c0 e010 	str.w	lr, [r0, #16]
 801704a:	f8df e3b8 	ldr.w	lr, [pc, #952]	@ 8017404 <draw_with_stencil+0xda0>
 801704e:	f8c0 b000 	str.w	fp, [r0]
 8017052:	f8c0 a008 	str.w	sl, [r0, #8]
 8017056:	f8c0 c018 	str.w	ip, [r0, #24]
 801705a:	f8de c010 	ldr.w	ip, [lr, #16]
 801705e:	6281      	str	r1, [r0, #40]	@ 0x28
 8017060:	49e2      	ldr	r1, [pc, #904]	@ (80173ec <draw_with_stencil+0xd88>)
 8017062:	6205      	str	r5, [r0, #32]
 8017064:	f04c 0505 	orr.w	r5, ip, #5
 8017068:	6445      	str	r5, [r0, #68]	@ 0x44
 801706a:	6302      	str	r2, [r0, #48]	@ 0x30
 801706c:	6383      	str	r3, [r0, #56]	@ 0x38
 801706e:	6401      	str	r1, [r0, #64]	@ 0x40
 8017070:	2009      	movs	r0, #9
 8017072:	f006 fe1f 	bl	801dcb4 <nema_cl_get_space>
 8017076:	2800      	cmp	r0, #0
 8017078:	d040      	beq.n	80170fc <draw_with_stencil+0xa98>
 801707a:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 801707e:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8017082:	ee7b bac7 	vsub.f32	s23, s23, s14
 8017086:	ee3c ca07 	vadd.f32	s24, s24, s14
 801708a:	ee6b baa7 	vmul.f32	s23, s23, s15
 801708e:	ee2c ca27 	vmul.f32	s24, s24, s15
 8017092:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8017096:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 801709a:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 801709e:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 80170a2:	edc0 9a01 	vstr	s19, [r0, #4]
 80170a6:	ed80 fa03 	vstr	s30, [r0, #12]
 80170aa:	f44f 7151 	mov.w	r1, #836	@ 0x344
 80170ae:	f44f 7550 	mov.w	r5, #832	@ 0x340
 80170b2:	f44f 7254 	mov.w	r2, #848	@ 0x350
 80170b6:	f44f 7355 	mov.w	r3, #852	@ 0x354
 80170ba:	ed80 8a07 	vstr	s16, [r0, #28]
 80170be:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 80170c2:	edc0 ea0b 	vstr	s29, [r0, #44]	@ 0x2c
 80170c6:	edc0 ca0f 	vstr	s25, [r0, #60]	@ 0x3c
 80170ca:	edc0 ba05 	vstr	s23, [r0, #20]
 80170ce:	ed80 ca0d 	vstr	s24, [r0, #52]	@ 0x34
 80170d2:	f8c0 e010 	str.w	lr, [r0, #16]
 80170d6:	f8df e32c 	ldr.w	lr, [pc, #812]	@ 8017404 <draw_with_stencil+0xda0>
 80170da:	f8c0 b000 	str.w	fp, [r0]
 80170de:	f8c0 a008 	str.w	sl, [r0, #8]
 80170e2:	f8c0 c018 	str.w	ip, [r0, #24]
 80170e6:	f8de c010 	ldr.w	ip, [lr, #16]
 80170ea:	6281      	str	r1, [r0, #40]	@ 0x28
 80170ec:	49bf      	ldr	r1, [pc, #764]	@ (80173ec <draw_with_stencil+0xd88>)
 80170ee:	6205      	str	r5, [r0, #32]
 80170f0:	f04c 0505 	orr.w	r5, ip, #5
 80170f4:	6445      	str	r5, [r0, #68]	@ 0x44
 80170f6:	6302      	str	r2, [r0, #48]	@ 0x30
 80170f8:	6383      	str	r3, [r0, #56]	@ 0x38
 80170fa:	6401      	str	r1, [r0, #64]	@ 0x40
 80170fc:	4640      	mov	r0, r8
 80170fe:	f7fa ff87 	bl	8012010 <nema_enable_aa_flags>
 8017102:	f7f9 fe13 	bl	8010d2c <nema_set_clip_pop>
 8017106:	9d05      	ldr	r5, [sp, #20]
 8017108:	2034      	movs	r0, #52	@ 0x34
 801710a:	b2a9      	uxth	r1, r5
 801710c:	f041 6110 	orr.w	r1, r1, #150994944	@ 0x9000000
 8017110:	f006 fe2c 	bl	801dd6c <nema_cl_add_cmd>
 8017114:	4629      	mov	r1, r5
 8017116:	f8df a2f0 	ldr.w	sl, [pc, #752]	@ 8017408 <draw_with_stencil+0xda4>
 801711a:	4331      	orrs	r1, r6
 801711c:	2038      	movs	r0, #56	@ 0x38
 801711e:	f006 fe25 	bl	801dd6c <nema_cl_add_cmd>
 8017122:	4db3      	ldr	r5, [pc, #716]	@ (80173f0 <draw_with_stencil+0xd8c>)
 8017124:	f89a 3000 	ldrb.w	r3, [sl]
 8017128:	702b      	strb	r3, [r5, #0]
 801712a:	2b00      	cmp	r3, #0
 801712c:	f040 8234 	bne.w	8017598 <draw_with_stencil+0xf34>
 8017130:	4bb0      	ldr	r3, [pc, #704]	@ (80173f4 <draw_with_stencil+0xd90>)
 8017132:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 80173f8 <draw_with_stencil+0xd94>
 8017136:	edd3 6a00 	vldr	s13, [r3]
 801713a:	eef4 6ac7 	vcmpe.f32	s13, s14
 801713e:	4aaf      	ldr	r2, [pc, #700]	@ (80173fc <draw_with_stencil+0xd98>)
 8017140:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017144:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8017148:	edd2 7a00 	vldr	s15, [r2]
 801714c:	ee67 7a86 	vmul.f32	s15, s15, s12
 8017150:	bfc8      	it	gt
 8017152:	eeb7 6a00 	vmovgt.f32	s12, #112	@ 0x3f800000  1.0
 8017156:	4baa      	ldr	r3, [pc, #680]	@ (8017400 <draw_with_stencil+0xd9c>)
 8017158:	bfc8      	it	gt
 801715a:	ee86 7a26 	vdivgt.f32	s14, s12, s13
 801715e:	ed9f 6aa6 	vldr	s12, [pc, #664]	@ 80173f8 <draw_with_stencil+0xd94>
 8017162:	edd3 6a00 	vldr	s13, [r3]
 8017166:	eef4 6ac6 	vcmpe.f32	s13, s12
 801716a:	bfd8      	it	le
 801716c:	eeb7 7a00 	vmovle.f32	s14, #112	@ 0x3f800000  1.0
 8017170:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017174:	bfca      	itet	gt
 8017176:	eef7 5a00 	vmovgt.f32	s11, #112	@ 0x3f800000  1.0
 801717a:	eeb7 6a00 	vmovle.f32	s12, #112	@ 0x3f800000  1.0
 801717e:	ee85 6aa6 	vdivgt.f32	s12, s11, s13
 8017182:	ee37 7a87 	vadd.f32	s14, s15, s14
 8017186:	ed94 2a08 	vldr	s4, [r4, #32]
 801718a:	ee77 7a86 	vadd.f32	s15, s15, s12
 801718e:	edd4 2a09 	vldr	s5, [r4, #36]	@ 0x24
 8017192:	ed94 6a04 	vldr	s12, [r4, #16]
 8017196:	edd4 6a05 	vldr	s13, [r4, #20]
 801719a:	ee37 3a07 	vadd.f32	s6, s14, s14
 801719e:	ee77 3aa7 	vadd.f32	s7, s15, s15
 80171a2:	ee36 5a02 	vadd.f32	s10, s12, s4
 80171a6:	ee76 5aa2 	vadd.f32	s11, s13, s5
 80171aa:	ed94 4a06 	vldr	s8, [r4, #24]
 80171ae:	edd4 4a07 	vldr	s9, [r4, #28]
 80171b2:	ee36 6a47 	vsub.f32	s12, s12, s14
 80171b6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80171ba:	ee35 5a07 	vadd.f32	s10, s10, s14
 80171be:	ee75 5aa7 	vadd.f32	s11, s11, s15
 80171c2:	ee33 3a02 	vadd.f32	s6, s6, s4
 80171c6:	ee73 3aa2 	vadd.f32	s7, s7, s5
 80171ca:	ee34 7a07 	vadd.f32	s14, s8, s14
 80171ce:	ee74 7aa7 	vadd.f32	s15, s9, s15
 80171d2:	ed84 3a12 	vstr	s6, [r4, #72]	@ 0x48
 80171d6:	edc4 3a13 	vstr	s7, [r4, #76]	@ 0x4c
 80171da:	ed84 5a0c 	vstr	s10, [r4, #48]	@ 0x30
 80171de:	ed84 5a0e 	vstr	s10, [r4, #56]	@ 0x38
 80171e2:	ed84 6a0a 	vstr	s12, [r4, #40]	@ 0x28
 80171e6:	ed84 6a10 	vstr	s12, [r4, #64]	@ 0x40
 80171ea:	ed84 6a14 	vstr	s12, [r4, #80]	@ 0x50
 80171ee:	ed84 7a16 	vstr	s14, [r4, #88]	@ 0x58
 80171f2:	edc4 5a0f 	vstr	s11, [r4, #60]	@ 0x3c
 80171f6:	edc4 5a11 	vstr	s11, [r4, #68]	@ 0x44
 80171fa:	edc4 6a0b 	vstr	s13, [r4, #44]	@ 0x2c
 80171fe:	edc4 6a0d 	vstr	s13, [r4, #52]	@ 0x34
 8017202:	edc4 6a15 	vstr	s13, [r4, #84]	@ 0x54
 8017206:	edc4 7a17 	vstr	s15, [r4, #92]	@ 0x5c
 801720a:	683b      	ldr	r3, [r7, #0]
 801720c:	7f1b      	ldrb	r3, [r3, #28]
 801720e:	2b01      	cmp	r3, #1
 8017210:	f000 82ec 	beq.w	80177ec <draw_with_stencil+0x1188>
 8017214:	f0c0 82c2 	bcc.w	801779c <draw_with_stencil+0x1138>
 8017218:	2b02      	cmp	r3, #2
 801721a:	d018      	beq.n	801724e <draw_with_stencil+0xbea>
 801721c:	2004      	movs	r0, #4
 801721e:	f005 fbf1 	bl	801ca04 <nema_vg_set_error>
 8017222:	2604      	movs	r6, #4
 8017224:	4630      	mov	r0, r6
 8017226:	f005 fbed 	bl	801ca04 <nema_vg_set_error>
 801722a:	4630      	mov	r0, r6
 801722c:	b02d      	add	sp, #180	@ 0xb4
 801722e:	ecbd 8b10 	vpop	{d8-d15}
 8017232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017236:	f44f 7000 	mov.w	r0, #512	@ 0x200
 801723a:	f005 fbe3 	bl	801ca04 <nema_vg_set_error>
 801723e:	f44f 7600 	mov.w	r6, #512	@ 0x200
 8017242:	4630      	mov	r0, r6
 8017244:	b02d      	add	sp, #180	@ 0xb4
 8017246:	ecbd 8b10 	vpop	{d8-d15}
 801724a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801724e:	f64b 4116 	movw	r1, #48150	@ 0xbc16
 8017252:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 8017256:	f006 fd89 	bl	801dd6c <nema_cl_add_cmd>
 801725a:	f64b 4117 	movw	r1, #48151	@ 0xbc17
 801725e:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 8017262:	f006 fd83 	bl	801dd6c <nema_cl_add_cmd>
 8017266:	f04f 1001 	mov.w	r0, #65537	@ 0x10001
 801726a:	f7fa fffd 	bl	8012268 <nema_set_rop_blend_mode>
 801726e:	4620      	mov	r0, r4
 8017270:	f7fe fb1a 	bl	80158a8 <fill_path_even_odd>
 8017274:	4606      	mov	r6, r0
 8017276:	2800      	cmp	r0, #0
 8017278:	f000 83bb 	beq.w	80179f2 <draw_with_stencil+0x138e>
 801727c:	f005 fbc2 	bl	801ca04 <nema_vg_set_error>
 8017280:	e7d0      	b.n	8017224 <draw_with_stencil+0xbc0>
 8017282:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017286:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801728a:	eef1 5a65 	vneg.f32	s11, s11
 801728e:	f57f abcc 	bpl.w	8016a2a <draw_with_stencil+0x3c6>
 8017292:	e131      	b.n	80174f8 <draw_with_stencil+0xe94>
 8017294:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017298:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801729c:	eeb1 5a68 	vneg.f32	s10, s17
 80172a0:	f57f adb2 	bpl.w	8016e08 <draw_with_stencil+0x7a4>
 80172a4:	eeb1 6a47 	vneg.f32	s12, s14
 80172a8:	eeb4 6ac5 	vcmpe.f32	s12, s10
 80172ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172b0:	f300 81e5 	bgt.w	801767e <draw_with_stencil+0x101a>
 80172b4:	ed9f 5a55 	vldr	s10, [pc, #340]	@ 801740c <draw_with_stencil+0xda8>
 80172b8:	ee26 6a05 	vmul.f32	s12, s12, s10
 80172bc:	e5ae      	b.n	8016e1c <draw_with_stencil+0x7b8>
 80172be:	eeb1 6a48 	vneg.f32	s12, s16
 80172c2:	eeb4 6ac5 	vcmpe.f32	s12, s10
 80172c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172ca:	f300 8240 	bgt.w	801774e <draw_with_stencil+0x10ea>
 80172ce:	ed9f 5a4f 	vldr	s10, [pc, #316]	@ 801740c <draw_with_stencil+0xda8>
 80172d2:	ee26 6a05 	vmul.f32	s12, s12, s10
 80172d6:	e46f      	b.n	8016bb8 <draw_with_stencil+0x554>
 80172d8:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 80172dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172e0:	eef1 5a65 	vneg.f32	s11, s11
 80172e4:	f57f ad88 	bpl.w	8016df8 <draw_with_stencil+0x794>
 80172e8:	e7d4      	b.n	8017294 <draw_with_stencil+0xc30>
 80172ea:	eef1 5a65 	vneg.f32	s11, s11
 80172ee:	eef4 5ac6 	vcmpe.f32	s11, s12
 80172f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172f6:	f73f aaab 	bgt.w	8016850 <draw_with_stencil+0x1ec>
 80172fa:	eddf 7a44 	vldr	s15, [pc, #272]	@ 801740c <draw_with_stencil+0xda8>
 80172fe:	ee65 7aa7 	vmul.f32	s15, s11, s15
 8017302:	f7ff bab0 	b.w	8016866 <draw_with_stencil+0x202>
 8017306:	eef1 4a48 	vneg.f32	s9, s16
 801730a:	eef4 4ac5 	vcmpe.f32	s9, s10
 801730e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017312:	f300 8229 	bgt.w	8017768 <draw_with_stencil+0x1104>
 8017316:	ed9f 6a3d 	vldr	s12, [pc, #244]	@ 801740c <draw_with_stencil+0xda8>
 801731a:	ee24 6a86 	vmul.f32	s12, s9, s12
 801731e:	f7ff bbd1 	b.w	8016ac4 <draw_with_stencil+0x460>
 8017322:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017326:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801732a:	eef1 5a66 	vneg.f32	s11, s13
 801732e:	f57f ab40 	bpl.w	80169b2 <draw_with_stencil+0x34e>
 8017332:	eeb1 7a67 	vneg.f32	s14, s15
 8017336:	eef4 5ac7 	vcmpe.f32	s11, s14
 801733a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801733e:	f100 81ec 	bmi.w	801771a <draw_with_stencil+0x10b6>
 8017342:	eddf 5a32 	vldr	s11, [pc, #200]	@ 801740c <draw_with_stencil+0xda8>
 8017346:	ee27 7a25 	vmul.f32	s14, s14, s11
 801734a:	f7ff bb3c 	b.w	80169c6 <draw_with_stencil+0x362>
 801734e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017352:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017356:	eeb1 6a46 	vneg.f32	s12, s12
 801735a:	f57f ab22 	bpl.w	80169a2 <draw_with_stencil+0x33e>
 801735e:	e7e0      	b.n	8017322 <draw_with_stencil+0xcbe>
 8017360:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8017364:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017368:	eeb1 6a47 	vneg.f32	s12, s14
 801736c:	f57f aa2c 	bpl.w	80167c8 <draw_with_stencil+0x164>
 8017370:	eeb1 5a45 	vneg.f32	s10, s10
 8017374:	eeb4 6ac5 	vcmpe.f32	s12, s10
 8017378:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801737c:	f53f aa2a 	bmi.w	80167d4 <draw_with_stencil+0x170>
 8017380:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 801740c <draw_with_stencil+0xda8>
 8017384:	ee25 7a07 	vmul.f32	s14, s10, s14
 8017388:	f7ff ba2f 	b.w	80167ea <draw_with_stencil+0x186>
 801738c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017390:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017394:	eef1 3a63 	vneg.f32	s7, s7
 8017398:	f57f aa81 	bpl.w	801689e <draw_with_stencil+0x23a>
 801739c:	e008      	b.n	80173b0 <draw_with_stencil+0xd4c>
 801739e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80173a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173a6:	eef1 7a67 	vneg.f32	s15, s15
 80173aa:	f57f aa05 	bpl.w	80167b8 <draw_with_stencil+0x154>
 80173ae:	e7d7      	b.n	8017360 <draw_with_stencil+0xcfc>
 80173b0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80173b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173b8:	eeb1 3a67 	vneg.f32	s6, s15
 80173bc:	f57f aa77 	bpl.w	80168ae <draw_with_stencil+0x24a>
 80173c0:	eeb1 6a46 	vneg.f32	s12, s12
 80173c4:	eeb4 3ac6 	vcmpe.f32	s6, s12
 80173c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173cc:	f53f aa75 	bmi.w	80168ba <draw_with_stencil+0x256>
 80173d0:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 801740c <draw_with_stencil+0xda8>
 80173d4:	f7ff ba79 	b.w	80168ca <draw_with_stencil+0x266>
 80173d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80173dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173e0:	eeb1 6a46 	vneg.f32	s12, s12
 80173e4:	f57f ad80 	bpl.w	8016ee8 <draw_with_stencil+0x884>
 80173e8:	e030      	b.n	801744c <draw_with_stencil+0xde8>
 80173ea:	bf00      	nop
 80173ec:	ff000100 	.word	0xff000100
 80173f0:	20082fb4 	.word	0x20082fb4
 80173f4:	20082fac 	.word	0x20082fac
 80173f8:	3a83126f 	.word	0x3a83126f
 80173fc:	20000134 	.word	0x20000134
 8017400:	20082fb0 	.word	0x20082fb0
 8017404:	20000064 	.word	0x20000064
 8017408:	20082fb5 	.word	0x20082fb5
 801740c:	3727c5ac 	.word	0x3727c5ac
 8017410:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017418:	eeb1 5a66 	vneg.f32	s10, s13
 801741c:	f57f ac75 	bpl.w	8016d0a <draw_with_stencil+0x6a6>
 8017420:	eeb1 6a67 	vneg.f32	s12, s15
 8017424:	eeb4 6ac5 	vcmpe.f32	s12, s10
 8017428:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801742c:	f300 814e 	bgt.w	80176cc <draw_with_stencil+0x1068>
 8017430:	ed1f 5a0a 	vldr	s10, [pc, #-40]	@ 801740c <draw_with_stencil+0xda8>
 8017434:	ee26 6a05 	vmul.f32	s12, s12, s10
 8017438:	e471      	b.n	8016d1e <draw_with_stencil+0x6ba>
 801743a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801743e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017442:	eef1 5a65 	vneg.f32	s11, s11
 8017446:	f57f ac58 	bpl.w	8016cfa <draw_with_stencil+0x696>
 801744a:	e7e1      	b.n	8017410 <draw_with_stencil+0xdac>
 801744c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017450:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017454:	eef1 5a67 	vneg.f32	s11, s15
 8017458:	f57f ad4e 	bpl.w	8016ef8 <draw_with_stencil+0x894>
 801745c:	eef1 6a47 	vneg.f32	s13, s14
 8017460:	eef4 6ae5 	vcmpe.f32	s13, s11
 8017464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017468:	f300 818b 	bgt.w	8017782 <draw_with_stencil+0x111e>
 801746c:	ed5f 5a19 	vldr	s11, [pc, #-100]	@ 801740c <draw_with_stencil+0xda8>
 8017470:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8017474:	e54a      	b.n	8016f0c <draw_with_stencil+0x8a8>
 8017476:	eef1 7a48 	vneg.f32	s15, s16
 801747a:	eef4 7ac6 	vcmpe.f32	s15, s12
 801747e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017482:	f300 8109 	bgt.w	8017698 <draw_with_stencil+0x1034>
 8017486:	ed1f 6a1f 	vldr	s12, [pc, #-124]	@ 801740c <draw_with_stencil+0xda8>
 801748a:	ee67 7a86 	vmul.f32	s15, s15, s12
 801748e:	e489      	b.n	8016da4 <draw_with_stencil+0x740>
 8017490:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017494:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017498:	eeb1 5a46 	vneg.f32	s10, s12
 801749c:	f57f acf0 	bpl.w	8016e80 <draw_with_stencil+0x81c>
 80174a0:	eef1 4a47 	vneg.f32	s9, s14
 80174a4:	eef4 4ac5 	vcmpe.f32	s9, s10
 80174a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174ac:	f300 8128 	bgt.w	8017700 <draw_with_stencil+0x109c>
 80174b0:	ed1f 6a2a 	vldr	s12, [pc, #-168]	@ 801740c <draw_with_stencil+0xda8>
 80174b4:	ee24 6a86 	vmul.f32	s12, s9, s12
 80174b8:	e4ec      	b.n	8016e94 <draw_with_stencil+0x830>
 80174ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80174be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174c2:	eeb1 5a66 	vneg.f32	s10, s13
 80174c6:	f57f aba5 	bpl.w	8016c14 <draw_with_stencil+0x5b0>
 80174ca:	eeb1 6a67 	vneg.f32	s12, s15
 80174ce:	eeb4 6ac5 	vcmpe.f32	s12, s10
 80174d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174d6:	f300 80c5 	bgt.w	8017664 <draw_with_stencil+0x1000>
 80174da:	ed1f 5a34 	vldr	s10, [pc, #-208]	@ 801740c <draw_with_stencil+0xda8>
 80174de:	ee26 6a05 	vmul.f32	s12, s12, s10
 80174e2:	f7ff bba1 	b.w	8016c28 <draw_with_stencil+0x5c4>
 80174e6:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80174ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174ee:	eef1 5a65 	vneg.f32	s11, s11
 80174f2:	f57f ab87 	bpl.w	8016c04 <draw_with_stencil+0x5a0>
 80174f6:	e7e0      	b.n	80174ba <draw_with_stencil+0xe56>
 80174f8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80174fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017500:	eeb1 5a46 	vneg.f32	s10, s12
 8017504:	f57f aa99 	bpl.w	8016a3a <draw_with_stencil+0x3d6>
 8017508:	eef1 4a47 	vneg.f32	s9, s14
 801750c:	eeb4 5ae4 	vcmpe.f32	s10, s9
 8017510:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017514:	f100 80e7 	bmi.w	80176e6 <draw_with_stencil+0x1082>
 8017518:	ed1f 6a44 	vldr	s12, [pc, #-272]	@ 801740c <draw_with_stencil+0xda8>
 801751c:	ee24 6a86 	vmul.f32	s12, s9, s12
 8017520:	f7ff ba95 	b.w	8016a4e <draw_with_stencil+0x3ea>
 8017524:	eef1 4a48 	vneg.f32	s9, s16
 8017528:	eef4 4ac5 	vcmpe.f32	s9, s10
 801752c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017530:	f300 80bf 	bgt.w	80176b2 <draw_with_stencil+0x104e>
 8017534:	ed1f 6a4b 	vldr	s12, [pc, #-300]	@ 801740c <draw_with_stencil+0xda8>
 8017538:	ee24 6a86 	vmul.f32	s12, s9, s12
 801753c:	f7ff bbb9 	b.w	8016cb2 <draw_with_stencil+0x64e>
 8017540:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017544:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017548:	eef1 5a65 	vneg.f32	s11, s11
 801754c:	f57f ac90 	bpl.w	8016e70 <draw_with_stencil+0x80c>
 8017550:	e79e      	b.n	8017490 <draw_with_stencil+0xe2c>
 8017552:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017556:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801755a:	eeb1 5a66 	vneg.f32	s10, s13
 801755e:	f57f aadd 	bpl.w	8016b1c <draw_with_stencil+0x4b8>
 8017562:	eeb1 6a67 	vneg.f32	s12, s15
 8017566:	eeb4 5ac6 	vcmpe.f32	s10, s12
 801756a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801756e:	f100 80e1 	bmi.w	8017734 <draw_with_stencil+0x10d0>
 8017572:	ed1f 5a5a 	vldr	s10, [pc, #-360]	@ 801740c <draw_with_stencil+0xda8>
 8017576:	ee26 6a05 	vmul.f32	s12, s12, s10
 801757a:	f7ff bad9 	b.w	8016b30 <draw_with_stencil+0x4cc>
 801757e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017586:	eef1 5a65 	vneg.f32	s11, s11
 801758a:	f57f aabf 	bpl.w	8016b0c <draw_with_stencil+0x4a8>
 801758e:	e7e0      	b.n	8017552 <draw_with_stencil+0xeee>
 8017590:	2500      	movs	r5, #0
 8017592:	aa1c      	add	r2, sp, #112	@ 0x70
 8017594:	f7ff b8fb 	b.w	801678e <draw_with_stencil+0x12a>
 8017598:	2007      	movs	r0, #7
 801759a:	f006 fb8b 	bl	801dcb4 <nema_cl_get_space>
 801759e:	b318      	cbz	r0, 80175e8 <draw_with_stencil+0xf84>
 80175a0:	f44f 725d 	mov.w	r2, #884	@ 0x374
 80175a4:	6002      	str	r2, [r0, #0]
 80175a6:	f44f 725a 	mov.w	r2, #872	@ 0x368
 80175aa:	4b8c      	ldr	r3, [pc, #560]	@ (80177dc <draw_with_stencil+0x1178>)
 80175ac:	6959      	ldr	r1, [r3, #20]
 80175ae:	6082      	str	r2, [r0, #8]
 80175b0:	f44f 7258 	mov.w	r2, #864	@ 0x360
 80175b4:	6041      	str	r1, [r0, #4]
 80175b6:	6899      	ldr	r1, [r3, #8]
 80175b8:	6102      	str	r2, [r0, #16]
 80175ba:	f44f 7259 	mov.w	r2, #868	@ 0x364
 80175be:	60c1      	str	r1, [r0, #12]
 80175c0:	6819      	ldr	r1, [r3, #0]
 80175c2:	6182      	str	r2, [r0, #24]
 80175c4:	f44f 725b 	mov.w	r2, #876	@ 0x36c
 80175c8:	6141      	str	r1, [r0, #20]
 80175ca:	6859      	ldr	r1, [r3, #4]
 80175cc:	6202      	str	r2, [r0, #32]
 80175ce:	f44f 725c 	mov.w	r2, #880	@ 0x370
 80175d2:	61c1      	str	r1, [r0, #28]
 80175d4:	68d9      	ldr	r1, [r3, #12]
 80175d6:	6282      	str	r2, [r0, #40]	@ 0x28
 80175d8:	6241      	str	r1, [r0, #36]	@ 0x24
 80175da:	6919      	ldr	r1, [r3, #16]
 80175dc:	f44f 7262 	mov.w	r2, #904	@ 0x388
 80175e0:	2300      	movs	r3, #0
 80175e2:	e9c0 230c 	strd	r2, r3, [r0, #48]	@ 0x30
 80175e6:	62c1      	str	r1, [r0, #44]	@ 0x2c
 80175e8:	2300      	movs	r3, #0
 80175ea:	f88a 3000 	strb.w	r3, [sl]
 80175ee:	e59f      	b.n	8017130 <draw_with_stencil+0xacc>
 80175f0:	3303      	adds	r3, #3
 80175f2:	f003 0303 	and.w	r3, r3, #3
 80175f6:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 80175fa:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 80175fe:	ed13 aa10 	vldr	s20, [r3, #-64]	@ 0xffffffc0
 8017602:	eeb5 9a00 	vmov.f32	s18, #80	@ 0x3e800000  0.250
 8017606:	ee3a aa67 	vsub.f32	s20, s20, s15
 801760a:	ee7b 7a27 	vadd.f32	s15, s22, s15
 801760e:	ee2a aa09 	vmul.f32	s20, s20, s18
 8017612:	ed13 da0f 	vldr	s26, [r3, #-60]	@ 0xffffffc4
 8017616:	ee27 9a89 	vmul.f32	s18, s15, s18
 801761a:	eeb0 ea68 	vmov.f32	s28, s17
 801761e:	e4b8      	b.n	8016f92 <draw_with_stencil+0x92e>
 8017620:	2602      	movs	r6, #2
 8017622:	2002      	movs	r0, #2
 8017624:	f005 f9ee 	bl	801ca04 <nema_vg_set_error>
 8017628:	4630      	mov	r0, r6
 801762a:	b02d      	add	sp, #180	@ 0xb4
 801762c:	ecbd 8b10 	vpop	{d8-d15}
 8017630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017634:	1c43      	adds	r3, r0, #1
 8017636:	f003 0303 	and.w	r3, r3, #3
 801763a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 801763e:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8017642:	ed53 aa10 	vldr	s21, [r3, #-64]	@ 0xffffffc0
 8017646:	eef5 9a00 	vmov.f32	s19, #80	@ 0x3e800000  0.250
 801764a:	ee7a aae7 	vsub.f32	s21, s21, s15
 801764e:	ee7b 7aa7 	vadd.f32	s15, s23, s15
 8017652:	ee6a aaa9 	vmul.f32	s21, s21, s19
 8017656:	ed53 ea0f 	vldr	s29, [r3, #-60]	@ 0xffffffc4
 801765a:	ee67 9aa9 	vmul.f32	s19, s15, s19
 801765e:	eeb0 fa48 	vmov.f32	s30, s16
 8017662:	e4bf      	b.n	8016fe4 <draw_with_stencil+0x980>
 8017664:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017668:	ed9f 6a5d 	vldr	s12, [pc, #372]	@ 80177e0 <draw_with_stencil+0x117c>
 801766c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017670:	bf54      	ite	pl
 8017672:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 8017676:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 801767a:	f7ff bad5 	b.w	8016c28 <draw_with_stencil+0x5c4>
 801767e:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017682:	ed9f 6a57 	vldr	s12, [pc, #348]	@ 80177e0 <draw_with_stencil+0x117c>
 8017686:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801768a:	bf54      	ite	pl
 801768c:	ee28 6a86 	vmulpl.f32	s12, s17, s12
 8017690:	ee28 6ac6 	vnmulmi.f32	s12, s17, s12
 8017694:	f7ff bbc2 	b.w	8016e1c <draw_with_stencil+0x7b8>
 8017698:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801769c:	eddf 7a50 	vldr	s15, [pc, #320]	@ 80177e0 <draw_with_stencil+0x117c>
 80176a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176a4:	bf4c      	ite	mi
 80176a6:	ee67 7a67 	vnmulmi.f32	s15, s14, s15
 80176aa:	ee67 7a27 	vmulpl.f32	s15, s14, s15
 80176ae:	f7ff bb79 	b.w	8016da4 <draw_with_stencil+0x740>
 80176b2:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80176b6:	ed9f 5a4a 	vldr	s10, [pc, #296]	@ 80177e0 <draw_with_stencil+0x117c>
 80176ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176be:	bf4c      	ite	mi
 80176c0:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 80176c4:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 80176c8:	f7ff baf3 	b.w	8016cb2 <draw_with_stencil+0x64e>
 80176cc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80176d0:	ed9f 6a43 	vldr	s12, [pc, #268]	@ 80177e0 <draw_with_stencil+0x117c>
 80176d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176d8:	bf54      	ite	pl
 80176da:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 80176de:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 80176e2:	f7ff bb1c 	b.w	8016d1e <draw_with_stencil+0x6ba>
 80176e6:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80176ea:	ed9f 5a3d 	vldr	s10, [pc, #244]	@ 80177e0 <draw_with_stencil+0x117c>
 80176ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176f2:	bf54      	ite	pl
 80176f4:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 80176f8:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 80176fc:	f7ff b9a7 	b.w	8016a4e <draw_with_stencil+0x3ea>
 8017700:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017704:	ed9f 5a36 	vldr	s10, [pc, #216]	@ 80177e0 <draw_with_stencil+0x117c>
 8017708:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801770c:	bf54      	ite	pl
 801770e:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 8017712:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 8017716:	f7ff bbbd 	b.w	8016e94 <draw_with_stencil+0x830>
 801771a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801771e:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 80177e0 <draw_with_stencil+0x117c>
 8017722:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017726:	bf54      	ite	pl
 8017728:	ee26 7a87 	vmulpl.f32	s14, s13, s14
 801772c:	ee26 7ac7 	vnmulmi.f32	s14, s13, s14
 8017730:	f7ff b949 	b.w	80169c6 <draw_with_stencil+0x362>
 8017734:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017738:	ed9f 6a29 	vldr	s12, [pc, #164]	@ 80177e0 <draw_with_stencil+0x117c>
 801773c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017740:	bf54      	ite	pl
 8017742:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 8017746:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 801774a:	f7ff b9f1 	b.w	8016b30 <draw_with_stencil+0x4cc>
 801774e:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017752:	ed9f 6a23 	vldr	s12, [pc, #140]	@ 80177e0 <draw_with_stencil+0x117c>
 8017756:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801775a:	bf4c      	ite	mi
 801775c:	ee28 6ac6 	vnmulmi.f32	s12, s17, s12
 8017760:	ee28 6a86 	vmulpl.f32	s12, s17, s12
 8017764:	f7ff ba28 	b.w	8016bb8 <draw_with_stencil+0x554>
 8017768:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801776c:	ed9f 5a1c 	vldr	s10, [pc, #112]	@ 80177e0 <draw_with_stencil+0x117c>
 8017770:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017774:	bf4c      	ite	mi
 8017776:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 801777a:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 801777e:	f7ff b9a1 	b.w	8016ac4 <draw_with_stencil+0x460>
 8017782:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017786:	eddf 6a16 	vldr	s13, [pc, #88]	@ 80177e0 <draw_with_stencil+0x117c>
 801778a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801778e:	bf54      	ite	pl
 8017790:	ee67 6aa6 	vmulpl.f32	s13, s15, s13
 8017794:	ee67 6ae6 	vnmulmi.f32	s13, s15, s13
 8017798:	f7ff bbb8 	b.w	8016f0c <draw_with_stencil+0x8a8>
 801779c:	f04f 33ff 	mov.w	r3, #4294967295
 80177a0:	2103      	movs	r1, #3
 80177a2:	461a      	mov	r2, r3
 80177a4:	480f      	ldr	r0, [pc, #60]	@ (80177e4 <draw_with_stencil+0x1180>)
 80177a6:	f006 fc03 	bl	801dfb0 <nema_set_blend>
 80177aa:	f04f 30ff 	mov.w	r0, #4294967295
 80177ae:	f7fa fdb9 	bl	8012324 <nema_set_raster_color>
 80177b2:	4b0d      	ldr	r3, [pc, #52]	@ (80177e8 <draw_with_stencil+0x1184>)
 80177b4:	4620      	mov	r0, r4
 80177b6:	681b      	ldr	r3, [r3, #0]
 80177b8:	2b00      	cmp	r3, #0
 80177ba:	f000 8113 	beq.w	80179e4 <draw_with_stencil+0x1380>
 80177be:	f7fc ff27 	bl	8014610 <stroke_path>
 80177c2:	4606      	mov	r6, r0
 80177c4:	2800      	cmp	r0, #0
 80177c6:	f47f ad59 	bne.w	801727c <draw_with_stencil+0xc18>
 80177ca:	f8d9 3000 	ldr.w	r3, [r9]
 80177ce:	2034      	movs	r0, #52	@ 0x34
 80177d0:	8a19      	ldrh	r1, [r3, #16]
 80177d2:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 80177d6:	f006 fac9 	bl	801dd6c <nema_cl_add_cmd>
 80177da:	e026      	b.n	801782a <draw_with_stencil+0x11c6>
 80177dc:	20082fec 	.word	0x20082fec
 80177e0:	3727c5ac 	.word	0x3727c5ac
 80177e4:	01000001 	.word	0x01000001
 80177e8:	20082f70 	.word	0x20082f70
 80177ec:	f64b 4116 	movw	r1, #48150	@ 0xbc16
 80177f0:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 80177f4:	f006 faba 	bl	801dd6c <nema_cl_add_cmd>
 80177f8:	f64b 4117 	movw	r1, #48151	@ 0xbc17
 80177fc:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 8017800:	f006 fab4 	bl	801dd6c <nema_cl_add_cmd>
 8017804:	f04f 1001 	mov.w	r0, #65537	@ 0x10001
 8017808:	f7fa fd2e 	bl	8012268 <nema_set_rop_blend_mode>
 801780c:	4620      	mov	r0, r4
 801780e:	f7fe f84b 	bl	80158a8 <fill_path_even_odd>
 8017812:	4606      	mov	r6, r0
 8017814:	2800      	cmp	r0, #0
 8017816:	f47f ad31 	bne.w	801727c <draw_with_stencil+0xc18>
 801781a:	f8d9 3000 	ldr.w	r3, [r9]
 801781e:	2034      	movs	r0, #52	@ 0x34
 8017820:	8a19      	ldrh	r1, [r3, #16]
 8017822:	f041 5138 	orr.w	r1, r1, #771751936	@ 0x2e000000
 8017826:	f006 faa1 	bl	801dd6c <nema_cl_add_cmd>
 801782a:	683b      	ldr	r3, [r7, #0]
 801782c:	f893 6048 	ldrb.w	r6, [r3, #72]	@ 0x48
 8017830:	2e01      	cmp	r6, #1
 8017832:	f000 8258 	beq.w	8017ce6 <draw_with_stencil+0x1682>
 8017836:	9b04      	ldr	r3, [sp, #16]
 8017838:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 801783c:	2b00      	cmp	r3, #0
 801783e:	f040 8218 	bne.w	8017c72 <draw_with_stencil+0x160e>
 8017842:	683a      	ldr	r2, [r7, #0]
 8017844:	7fd3      	ldrb	r3, [r2, #31]
 8017846:	f003 0307 	and.w	r3, r3, #7
 801784a:	2b03      	cmp	r3, #3
 801784c:	f000 8244 	beq.w	8017cd8 <draw_with_stencil+0x1674>
 8017850:	2b04      	cmp	r3, #4
 8017852:	f000 8322 	beq.w	8017e9a <draw_with_stencil+0x1836>
 8017856:	9b04      	ldr	r3, [sp, #16]
 8017858:	6a56      	ldr	r6, [r2, #36]	@ 0x24
 801785a:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 801785e:	b2b2      	uxth	r2, r6
 8017860:	f240 5101 	movw	r1, #1281	@ 0x501
 8017864:	2b00      	cmp	r3, #0
 8017866:	f000 80cd 	beq.w	8017a04 <draw_with_stencil+0x13a0>
 801786a:	428a      	cmp	r2, r1
 801786c:	f000 8483 	beq.w	8018176 <draw_with_stencil+0x1b12>
 8017870:	2b02      	cmp	r3, #2
 8017872:	f006 020f 	and.w	r2, r6, #15
 8017876:	f3c6 2c03 	ubfx	ip, r6, #8, #4
 801787a:	f000 8317 	beq.w	8017eac <draw_with_stencil+0x1848>
 801787e:	2000      	movs	r0, #0
 8017880:	2103      	movs	r1, #3
 8017882:	2702      	movs	r7, #2
 8017884:	2301      	movs	r3, #1
 8017886:	901d      	str	r0, [sp, #116]	@ 0x74
 8017888:	48bb      	ldr	r0, [pc, #748]	@ (8017b78 <draw_with_stencil+0x1514>)
 801788a:	901c      	str	r0, [sp, #112]	@ 0x70
 801788c:	0170      	lsls	r0, r6, #5
 801788e:	d508      	bpl.n	80178a2 <draw_with_stencil+0x123e>
 8017890:	2600      	movs	r6, #0
 8017892:	a82c      	add	r0, sp, #176	@ 0xb0
 8017894:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
 8017898:	463b      	mov	r3, r7
 801789a:	460f      	mov	r7, r1
 801789c:	49b7      	ldr	r1, [pc, #732]	@ (8017b7c <draw_with_stencil+0x1518>)
 801789e:	e940 6110 	strd	r6, r1, [r0, #-64]	@ 0x40
 80178a2:	1f91      	subs	r1, r2, #6
 80178a4:	2903      	cmp	r1, #3
 80178a6:	f200 821c 	bhi.w	8017ce2 <draw_with_stencil+0x167e>
 80178aa:	2100      	movs	r1, #0
 80178ac:	ae2c      	add	r6, sp, #176	@ 0xb0
 80178ae:	48b4      	ldr	r0, [pc, #720]	@ (8017b80 <draw_with_stencil+0x151c>)
 80178b0:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80178b4:	4eb3      	ldr	r6, [pc, #716]	@ (8017b84 <draw_with_stencil+0x1520>)
 80178b6:	e943 0110 	strd	r0, r1, [r3, #-64]	@ 0x40
 80178ba:	463b      	mov	r3, r7
 80178bc:	3701      	adds	r7, #1
 80178be:	48b2      	ldr	r0, [pc, #712]	@ (8017b88 <draw_with_stencil+0x1524>)
 80178c0:	49b2      	ldr	r1, [pc, #712]	@ (8017b8c <draw_with_stencil+0x1528>)
 80178c2:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80178c6:	4311      	orrs	r1, r2
 80178c8:	aa2c      	add	r2, sp, #176	@ 0xb0
 80178ca:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 80178ce:	e942 6110 	strd	r6, r1, [r2, #-64]	@ 0x40
 80178d2:	f1bc 0f00 	cmp.w	ip, #0
 80178d6:	d00a      	beq.n	80178ee <draw_with_stencil+0x128a>
 80178d8:	2600      	movs	r6, #0
 80178da:	f850 002c 	ldr.w	r0, [r0, ip, lsl #2]
 80178de:	4aac      	ldr	r2, [pc, #688]	@ (8017b90 <draw_with_stencil+0x152c>)
 80178e0:	a92c      	add	r1, sp, #176	@ 0xb0
 80178e2:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 80178e6:	4302      	orrs	r2, r0
 80178e8:	e941 6210 	strd	r6, r2, [r1, #-64]	@ 0x40
 80178ec:	1c9f      	adds	r7, r3, #2
 80178ee:	4ba5      	ldr	r3, [pc, #660]	@ (8017b84 <draw_with_stencil+0x1520>)
 80178f0:	49a8      	ldr	r1, [pc, #672]	@ (8017b94 <draw_with_stencil+0x1530>)
 80178f2:	aa2c      	add	r2, sp, #176	@ 0xb0
 80178f4:	eb02 02c7 	add.w	r2, r2, r7, lsl #3
 80178f8:	f842 3c40 	str.w	r3, [r2, #-64]
 80178fc:	f842 1c3c 	str.w	r1, [r2, #-60]
 8017900:	a82c      	add	r0, sp, #176	@ 0xb0
 8017902:	49a5      	ldr	r1, [pc, #660]	@ (8017b98 <draw_with_stencil+0x1534>)
 8017904:	4aa5      	ldr	r2, [pc, #660]	@ (8017b9c <draw_with_stencil+0x1538>)
 8017906:	1c7b      	adds	r3, r7, #1
 8017908:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801790c:	2001      	movs	r0, #1
 801790e:	f843 1c40 	str.w	r1, [r3, #-64]
 8017912:	f843 2c3c 	str.w	r2, [r3, #-60]
 8017916:	f7fa fca7 	bl	8012268 <nema_set_rop_blend_mode>
 801791a:	a81c      	add	r0, sp, #112	@ 0x70
 801791c:	1cb9      	adds	r1, r7, #2
 801791e:	2200      	movs	r2, #0
 8017920:	f7fa fc82 	bl	8012228 <nema_load_frag_shader>
 8017924:	f44f 401c 	mov.w	r0, #39936	@ 0x9c00
 8017928:	f7fa fc98 	bl	801225c <nema_set_frag_ptr>
 801792c:	9b04      	ldr	r3, [sp, #16]
 801792e:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 8017932:	2b04      	cmp	r3, #4
 8017934:	f000 80a5 	beq.w	8017a82 <draw_with_stencil+0x141e>
 8017938:	2009      	movs	r0, #9
 801793a:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 801793e:	f8d4 802c 	ldr.w	r8, [r4, #44]	@ 0x2c
 8017942:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 8017946:	edd4 8a0d 	vldr	s17, [r4, #52]	@ 0x34
 801794a:	ed94 8a0e 	vldr	s16, [r4, #56]	@ 0x38
 801794e:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 8017950:	6c26      	ldr	r6, [r4, #64]	@ 0x40
 8017952:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 8017954:	f006 f9ae 	bl	801dcb4 <nema_cl_get_space>
 8017958:	b380      	cbz	r0, 80179bc <draw_with_stencil+0x1358>
 801795a:	f44f 734c 	mov.w	r3, #816	@ 0x330
 801795e:	f8c0 9004 	str.w	r9, [r0, #4]
 8017962:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 8017966:	f44f 7949 	mov.w	r9, #804	@ 0x324
 801796a:	f8c0 800c 	str.w	r8, [r0, #12]
 801796e:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8017972:	f44f 784d 	mov.w	r8, #820	@ 0x334
 8017976:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 801797a:	f44f 7154 	mov.w	r1, #848	@ 0x350
 801797e:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8017982:	ed80 9a05 	vstr	s18, [r0, #20]
 8017986:	edc0 8a07 	vstr	s17, [r0, #28]
 801798a:	ed80 8a09 	vstr	s16, [r0, #36]	@ 0x24
 801798e:	6103      	str	r3, [r0, #16]
 8017990:	4b83      	ldr	r3, [pc, #524]	@ (8017ba0 <draw_with_stencil+0x153c>)
 8017992:	f8c0 b000 	str.w	fp, [r0]
 8017996:	f8c0 9008 	str.w	r9, [r0, #8]
 801799a:	691b      	ldr	r3, [r3, #16]
 801799c:	62c7      	str	r7, [r0, #44]	@ 0x2c
 801799e:	4f81      	ldr	r7, [pc, #516]	@ (8017ba4 <draw_with_stencil+0x1540>)
 80179a0:	f043 0305 	orr.w	r3, r3, #5
 80179a4:	6346      	str	r6, [r0, #52]	@ 0x34
 80179a6:	63c4      	str	r4, [r0, #60]	@ 0x3c
 80179a8:	6443      	str	r3, [r0, #68]	@ 0x44
 80179aa:	f8c0 8018 	str.w	r8, [r0, #24]
 80179ae:	f8c0 e020 	str.w	lr, [r0, #32]
 80179b2:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 80179b6:	6301      	str	r1, [r0, #48]	@ 0x30
 80179b8:	6382      	str	r2, [r0, #56]	@ 0x38
 80179ba:	6407      	str	r7, [r0, #64]	@ 0x40
 80179bc:	782e      	ldrb	r6, [r5, #0]
 80179be:	2e00      	cmp	r6, #0
 80179c0:	f43f ac3f 	beq.w	8017242 <draw_with_stencil+0xbde>
 80179c4:	2101      	movs	r1, #1
 80179c6:	f44f 7062 	mov.w	r0, #904	@ 0x388
 80179ca:	f006 f9cf 	bl	801dd6c <nema_cl_add_cmd>
 80179ce:	2300      	movs	r3, #0
 80179d0:	782a      	ldrb	r2, [r5, #0]
 80179d2:	461e      	mov	r6, r3
 80179d4:	702b      	strb	r3, [r5, #0]
 80179d6:	f88a 2000 	strb.w	r2, [sl]
 80179da:	e432      	b.n	8017242 <draw_with_stencil+0xbde>
 80179dc:	ee67 7ac6 	vnmul.f32	s15, s15, s12
 80179e0:	f7fe bf75 	b.w	80168ce <draw_with_stencil+0x26a>
 80179e4:	f7fb fe50 	bl	8013688 <stroke_thin_path>
 80179e8:	4606      	mov	r6, r0
 80179ea:	2800      	cmp	r0, #0
 80179ec:	f43f aeed 	beq.w	80177ca <draw_with_stencil+0x1166>
 80179f0:	e444      	b.n	801727c <draw_with_stencil+0xc18>
 80179f2:	f8d9 3000 	ldr.w	r3, [r9]
 80179f6:	2034      	movs	r0, #52	@ 0x34
 80179f8:	8a19      	ldrh	r1, [r3, #16]
 80179fa:	f041 513c 	orr.w	r1, r1, #788529152	@ 0x2f000000
 80179fe:	f006 f9b5 	bl	801dd6c <nema_cl_add_cmd>
 8017a02:	e712      	b.n	801782a <draw_with_stencil+0x11c6>
 8017a04:	428a      	cmp	r2, r1
 8017a06:	f000 8232 	beq.w	8017e6e <draw_with_stencil+0x180a>
 8017a0a:	495f      	ldr	r1, [pc, #380]	@ (8017b88 <draw_with_stencil+0x1524>)
 8017a0c:	f006 020f 	and.w	r2, r6, #15
 8017a10:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8017a14:	4a5d      	ldr	r2, [pc, #372]	@ (8017b8c <draw_with_stencil+0x1528>)
 8017a16:	4f64      	ldr	r7, [pc, #400]	@ (8017ba8 <draw_with_stencil+0x1544>)
 8017a18:	4302      	orrs	r2, r0
 8017a1a:	4864      	ldr	r0, [pc, #400]	@ (8017bac <draw_with_stencil+0x1548>)
 8017a1c:	f3c6 2603 	ubfx	r6, r6, #8, #4
 8017a20:	e9cd 321e 	strd	r3, r2, [sp, #120]	@ 0x78
 8017a24:	e9cd 701c 	strd	r7, r0, [sp, #112]	@ 0x70
 8017a28:	2e00      	cmp	r6, #0
 8017a2a:	f000 823b 	beq.w	8017ea4 <draw_with_stencil+0x1840>
 8017a2e:	f851 1026 	ldr.w	r1, [r1, r6, lsl #2]
 8017a32:	4a57      	ldr	r2, [pc, #348]	@ (8017b90 <draw_with_stencil+0x152c>)
 8017a34:	9320      	str	r3, [sp, #128]	@ 0x80
 8017a36:	430a      	orrs	r2, r1
 8017a38:	9221      	str	r2, [sp, #132]	@ 0x84
 8017a3a:	2605      	movs	r6, #5
 8017a3c:	2304      	movs	r3, #4
 8017a3e:	2203      	movs	r2, #3
 8017a40:	af2c      	add	r7, sp, #176	@ 0xb0
 8017a42:	4950      	ldr	r1, [pc, #320]	@ (8017b84 <draw_with_stencil+0x1520>)
 8017a44:	4853      	ldr	r0, [pc, #332]	@ (8017b94 <draw_with_stencil+0x1530>)
 8017a46:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 8017a4a:	f842 1c40 	str.w	r1, [r2, #-64]
 8017a4e:	f842 0c3c 	str.w	r0, [r2, #-60]
 8017a52:	4951      	ldr	r1, [pc, #324]	@ (8017b98 <draw_with_stencil+0x1534>)
 8017a54:	4a51      	ldr	r2, [pc, #324]	@ (8017b9c <draw_with_stencil+0x1538>)
 8017a56:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
 8017a5a:	2001      	movs	r0, #1
 8017a5c:	e943 1210 	strd	r1, r2, [r3, #-64]	@ 0x40
 8017a60:	f7fa fc02 	bl	8012268 <nema_set_rop_blend_mode>
 8017a64:	4631      	mov	r1, r6
 8017a66:	2200      	movs	r2, #0
 8017a68:	a81c      	add	r0, sp, #112	@ 0x70
 8017a6a:	f7fa fbdd 	bl	8012228 <nema_load_frag_shader>
 8017a6e:	f44f 401c 	mov.w	r0, #39936	@ 0x9c00
 8017a72:	f7fa fbf3 	bl	801225c <nema_set_frag_ptr>
 8017a76:	4b4e      	ldr	r3, [pc, #312]	@ (8017bb0 <draw_with_stencil+0x154c>)
 8017a78:	2002      	movs	r0, #2
 8017a7a:	6819      	ldr	r1, [r3, #0]
 8017a7c:	f7f9 f8f4 	bl	8010c68 <nema_set_const_reg>
 8017a80:	e754      	b.n	801792c <draw_with_stencil+0x12c8>
 8017a82:	f7f9 f931 	bl	8010ce8 <nema_supports_clip2>
 8017a86:	9b04      	ldr	r3, [sp, #16]
 8017a88:	9a04      	ldr	r2, [sp, #16]
 8017a8a:	edd3 9a32 	vldr	s19, [r3, #200]	@ 0xc8
 8017a8e:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 8017a92:	f8d9 3000 	ldr.w	r3, [r9]
 8017a96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a9a:	edd3 7a04 	vldr	s15, [r3, #16]
 8017a9e:	bf48      	it	mi
 8017aa0:	eddf 9a44 	vldrmi	s19, [pc, #272]	@ 8017bb4 <draw_with_stencil+0x1550>
 8017aa4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8017aa8:	ed92 9a33 	vldr	s18, [r2, #204]	@ 0xcc
 8017aac:	eeb4 7a69 	vcmp.f32	s14, s19
 8017ab0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017ab4:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017ab8:	bf48      	it	mi
 8017aba:	eef0 9a47 	vmovmi.f32	s19, s14
 8017abe:	edd3 7a05 	vldr	s15, [r3, #20]
 8017ac2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017ac6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017aca:	bf48      	it	mi
 8017acc:	ed9f 9a39 	vldrmi	s18, [pc, #228]	@ 8017bb4 <draw_with_stencil+0x1550>
 8017ad0:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8017ad4:	eef4 7a49 	vcmp.f32	s15, s18
 8017ad8:	ee37 7a69 	vsub.f32	s14, s14, s19
 8017adc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017ae0:	ee77 8a08 	vadd.f32	s17, s14, s16
 8017ae4:	bf48      	it	mi
 8017ae6:	eeb0 9a67 	vmovmi.f32	s18, s15
 8017aea:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017aee:	ee77 7ac9 	vsub.f32	s15, s15, s18
 8017af2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017af6:	4606      	mov	r6, r0
 8017af8:	ee37 8a88 	vadd.f32	s16, s15, s16
 8017afc:	dd05      	ble.n	8017b0a <draw_with_stencil+0x14a6>
 8017afe:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017b02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b06:	f300 82c8 	bgt.w	801809a <draw_with_stencil+0x1a36>
 8017b0a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017b0e:	ee79 8aa7 	vadd.f32	s17, s19, s15
 8017b12:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017b16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b1a:	f340 81d7 	ble.w	8017ecc <draw_with_stencil+0x1868>
 8017b1e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017b22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b26:	f300 8255 	bgt.w	8017fd4 <draw_with_stencil+0x1970>
 8017b2a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017b2e:	ee39 9a27 	vadd.f32	s18, s18, s15
 8017b32:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017b36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b3a:	f300 81d9 	bgt.w	8017ef0 <draw_with_stencil+0x188c>
 8017b3e:	f8d9 3000 	ldr.w	r3, [r9]
 8017b42:	ed93 8a04 	vldr	s16, [r3, #16]
 8017b46:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 8017b4a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017b4e:	ee38 8a69 	vsub.f32	s16, s16, s19
 8017b52:	ee38 8a27 	vadd.f32	s16, s16, s15
 8017b56:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017b5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b5e:	dd04      	ble.n	8017b6a <draw_with_stencil+0x1506>
 8017b60:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017b64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b68:	dc26      	bgt.n	8017bb8 <draw_with_stencil+0x1554>
 8017b6a:	2e00      	cmp	r6, #0
 8017b6c:	f040 815f 	bne.w	8017e2e <draw_with_stencil+0x17ca>
 8017b70:	f7f9 f8dc 	bl	8010d2c <nema_set_clip_pop>
 8017b74:	e722      	b.n	80179bc <draw_with_stencil+0x1358>
 8017b76:	bf00      	nop
 8017b78:	0a18108b 	.word	0x0a18108b
 8017b7c:	01016204 	.word	0x01016204
 8017b80:	18001001 	.word	0x18001001
 8017b84:	18001000 	.word	0x18001000
 8017b88:	08035cb0 	.word	0x08035cb0
 8017b8c:	0a882206 	.word	0x0a882206
 8017b90:	0a581606 	.word	0x0a581606
 8017b94:	0a912406 	.word	0x0a912406
 8017b98:	10000002 	.word	0x10000002
 8017b9c:	8a5b1686 	.word	0x8a5b1686
 8017ba0:	20000064 	.word	0x20000064
 8017ba4:	ff000100 	.word	0xff000100
 8017ba8:	1a181001 	.word	0x1a181001
 8017bac:	050481a9 	.word	0x050481a9
 8017bb0:	20082fe8 	.word	0x20082fe8
 8017bb4:	00000000 	.word	0x00000000
 8017bb8:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 8017bbc:	edcd 7a05 	vstr	s15, [sp, #20]
 8017bc0:	9804      	ldr	r0, [sp, #16]
 8017bc2:	30a4      	adds	r0, #164	@ 0xa4
 8017bc4:	f7fa fa42 	bl	801204c <nema_set_matrix>
 8017bc8:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 8017bcc:	eefd 9ae9 	vcvt.s32.f32	s19, s19
 8017bd0:	9b05      	ldr	r3, [sp, #20]
 8017bd2:	ee18 2a10 	vmov	r2, s16
 8017bd6:	2e00      	cmp	r6, #0
 8017bd8:	f040 8110 	bne.w	8017dfc <draw_with_stencil+0x1798>
 8017bdc:	ee19 0a90 	vmov	r0, s19
 8017be0:	4631      	mov	r1, r6
 8017be2:	f7f9 f88b 	bl	8010cfc <nema_set_clip_temp>
 8017be6:	2009      	movs	r0, #9
 8017be8:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 8017bec:	edd4 9a0b 	vldr	s19, [r4, #44]	@ 0x2c
 8017bf0:	f8d4 8030 	ldr.w	r8, [r4, #48]	@ 0x30
 8017bf4:	ed94 9a0d 	vldr	s18, [r4, #52]	@ 0x34
 8017bf8:	edd4 8a0e 	vldr	s17, [r4, #56]	@ 0x38
 8017bfc:	ed94 8a0f 	vldr	s16, [r4, #60]	@ 0x3c
 8017c00:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 8017c02:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 8017c04:	f006 f856 	bl	801dcb4 <nema_cl_get_space>
 8017c08:	2800      	cmp	r0, #0
 8017c0a:	d0b1      	beq.n	8017b70 <draw_with_stencil+0x150c>
 8017c0c:	f8c0 9004 	str.w	r9, [r0, #4]
 8017c10:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8017c14:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 8017c18:	f44f 7949 	mov.w	r9, #804	@ 0x324
 8017c1c:	edc0 9a03 	vstr	s19, [r0, #12]
 8017c20:	f8c0 8014 	str.w	r8, [r0, #20]
 8017c24:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8017c28:	f44f 784d 	mov.w	r8, #820	@ 0x334
 8017c2c:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 8017c30:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8017c34:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8017c38:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8017c3a:	4ca6      	ldr	r4, [pc, #664]	@ (8017ed4 <draw_with_stencil+0x1870>)
 8017c3c:	f8c0 b000 	str.w	fp, [r0]
 8017c40:	f8c0 9008 	str.w	r9, [r0, #8]
 8017c44:	6103      	str	r3, [r0, #16]
 8017c46:	6923      	ldr	r3, [r4, #16]
 8017c48:	4ca3      	ldr	r4, [pc, #652]	@ (8017ed8 <draw_with_stencil+0x1874>)
 8017c4a:	f043 0305 	orr.w	r3, r3, #5
 8017c4e:	ed80 9a07 	vstr	s18, [r0, #28]
 8017c52:	edc0 8a09 	vstr	s17, [r0, #36]	@ 0x24
 8017c56:	ed80 8a0b 	vstr	s16, [r0, #44]	@ 0x2c
 8017c5a:	6347      	str	r7, [r0, #52]	@ 0x34
 8017c5c:	6443      	str	r3, [r0, #68]	@ 0x44
 8017c5e:	f8c0 8018 	str.w	r8, [r0, #24]
 8017c62:	f8c0 e020 	str.w	lr, [r0, #32]
 8017c66:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8017c6a:	6301      	str	r1, [r0, #48]	@ 0x30
 8017c6c:	6382      	str	r2, [r0, #56]	@ 0x38
 8017c6e:	6404      	str	r4, [r0, #64]	@ 0x40
 8017c70:	e77b      	b.n	8017b6a <draw_with_stencil+0x1506>
 8017c72:	9e04      	ldr	r6, [sp, #16]
 8017c74:	4630      	mov	r0, r6
 8017c76:	f005 fb1d 	bl	801d2b4 <bind_tex1_according_paint>
 8017c7a:	f896 30dd 	ldrb.w	r3, [r6, #221]	@ 0xdd
 8017c7e:	2b02      	cmp	r3, #2
 8017c80:	d017      	beq.n	8017cb2 <draw_with_stencil+0x164e>
 8017c82:	2b03      	cmp	r3, #3
 8017c84:	d002      	beq.n	8017c8c <draw_with_stencil+0x1628>
 8017c86:	2b01      	cmp	r3, #1
 8017c88:	f47f addb 	bne.w	8017842 <draw_with_stencil+0x11de>
 8017c8c:	9904      	ldr	r1, [sp, #16]
 8017c8e:	683a      	ldr	r2, [r7, #0]
 8017c90:	f891 30dc 	ldrb.w	r3, [r1, #220]	@ 0xdc
 8017c94:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8017c96:	07d8      	lsls	r0, r3, #31
 8017c98:	f140 80d1 	bpl.w	8017e3e <draw_with_stencil+0x17da>
 8017c9c:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8017ca0:	4313      	orrs	r3, r2
 8017ca2:	07db      	lsls	r3, r3, #31
 8017ca4:	f100 82bb 	bmi.w	801821e <draw_with_stencil+0x1bba>
 8017ca8:	f101 0038 	add.w	r0, r1, #56	@ 0x38
 8017cac:	f7fa f9ce 	bl	801204c <nema_set_matrix>
 8017cb0:	e5c7      	b.n	8017842 <draw_with_stencil+0x11de>
 8017cb2:	9904      	ldr	r1, [sp, #16]
 8017cb4:	683a      	ldr	r2, [r7, #0]
 8017cb6:	f891 30dc 	ldrb.w	r3, [r1, #220]	@ 0xdc
 8017cba:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8017cbc:	07d8      	lsls	r0, r3, #31
 8017cbe:	f140 80c6 	bpl.w	8017e4e <draw_with_stencil+0x17ea>
 8017cc2:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8017cc6:	4313      	orrs	r3, r2
 8017cc8:	07db      	lsls	r3, r3, #31
 8017cca:	f100 82bf 	bmi.w	801824c <draw_with_stencil+0x1be8>
 8017cce:	f101 0008 	add.w	r0, r1, #8
 8017cd2:	f7fa f9bb 	bl	801204c <nema_set_matrix>
 8017cd6:	e5b4      	b.n	8017842 <draw_with_stencil+0x11de>
 8017cd8:	2001      	movs	r0, #1
 8017cda:	f7fa f94f 	bl	8011f7c <nema_enable_tiling>
 8017cde:	683a      	ldr	r2, [r7, #0]
 8017ce0:	e5b9      	b.n	8017856 <draw_with_stencil+0x11f2>
 8017ce2:	4e7e      	ldr	r6, [pc, #504]	@ (8017edc <draw_with_stencil+0x1878>)
 8017ce4:	e5eb      	b.n	80178be <draw_with_stencil+0x125a>
 8017ce6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017ce8:	2b00      	cmp	r3, #0
 8017cea:	f000 82c0 	beq.w	801826e <draw_with_stencil+0x1c0a>
 8017cee:	f04f 0808 	mov.w	r8, #8
 8017cf2:	2000      	movs	r0, #0
 8017cf4:	f7f8 ffb4 	bl	8010c60 <nema_set_tex_color>
 8017cf8:	683b      	ldr	r3, [r7, #0]
 8017cfa:	2002      	movs	r0, #2
 8017cfc:	f8d3 c03c 	ldr.w	ip, [r3, #60]	@ 0x3c
 8017d00:	f8bc 3012 	ldrh.w	r3, [ip, #18]
 8017d04:	f8bc e010 	ldrh.w	lr, [ip, #16]
 8017d08:	f8dc 100c 	ldr.w	r1, [ip, #12]
 8017d0c:	f8cd 8008 	str.w	r8, [sp, #8]
 8017d10:	f8dc 2014 	ldr.w	r2, [ip, #20]
 8017d14:	9201      	str	r2, [sp, #4]
 8017d16:	f89c c01c 	ldrb.w	ip, [ip, #28]
 8017d1a:	4672      	mov	r2, lr
 8017d1c:	f8cd c000 	str.w	ip, [sp]
 8017d20:	f7f8 fee8 	bl	8010af4 <nema_bind_tex>
 8017d24:	683b      	ldr	r3, [r7, #0]
 8017d26:	7f1b      	ldrb	r3, [r3, #28]
 8017d28:	3b01      	subs	r3, #1
 8017d2a:	2b01      	cmp	r3, #1
 8017d2c:	f240 82ab 	bls.w	8018286 <draw_with_stencil+0x1c22>
 8017d30:	f04f 33ff 	mov.w	r3, #4294967295
 8017d34:	2202      	movs	r2, #2
 8017d36:	2103      	movs	r1, #3
 8017d38:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8017d3c:	f006 f938 	bl	801dfb0 <nema_set_blend>
 8017d40:	f04f 0800 	mov.w	r8, #0
 8017d44:	683b      	ldr	r3, [r7, #0]
 8017d46:	edd3 0a11 	vldr	s1, [r3, #68]	@ 0x44
 8017d4a:	ed93 0a10 	vldr	s0, [r3, #64]	@ 0x40
 8017d4e:	f7fa fa37 	bl	80121c0 <nema_set_matrix_translate>
 8017d52:	2009      	movs	r0, #9
 8017d54:	ed94 aa0a 	vldr	s20, [r4, #40]	@ 0x28
 8017d58:	edd4 aa0b 	vldr	s21, [r4, #44]	@ 0x2c
 8017d5c:	f8d4 b030 	ldr.w	fp, [r4, #48]	@ 0x30
 8017d60:	6b66      	ldr	r6, [r4, #52]	@ 0x34
 8017d62:	edd4 9a0e 	vldr	s19, [r4, #56]	@ 0x38
 8017d66:	ed94 9a0f 	vldr	s18, [r4, #60]	@ 0x3c
 8017d6a:	edd4 8a10 	vldr	s17, [r4, #64]	@ 0x40
 8017d6e:	ed94 8a11 	vldr	s16, [r4, #68]	@ 0x44
 8017d72:	f005 ff9f 	bl	801dcb4 <nema_cl_get_space>
 8017d76:	b3a0      	cbz	r0, 8017de2 <draw_with_stencil+0x177e>
 8017d78:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8017d7c:	6003      	str	r3, [r0, #0]
 8017d7e:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8017d82:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8017d86:	ed80 aa01 	vstr	s20, [r0, #4]
 8017d8a:	edc0 aa03 	vstr	s21, [r0, #12]
 8017d8e:	6103      	str	r3, [r0, #16]
 8017d90:	f8c0 b014 	str.w	fp, [r0, #20]
 8017d94:	61c6      	str	r6, [r0, #28]
 8017d96:	f44f 7b4d 	mov.w	fp, #820	@ 0x334
 8017d9a:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8017d9e:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8017da2:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8017da6:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8017daa:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 8017dae:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 8017db2:	edc0 8a0d 	vstr	s17, [r0, #52]	@ 0x34
 8017db6:	ed80 8a0f 	vstr	s16, [r0, #60]	@ 0x3c
 8017dba:	f8df c118 	ldr.w	ip, [pc, #280]	@ 8017ed4 <draw_with_stencil+0x1870>
 8017dbe:	f8c0 e008 	str.w	lr, [r0, #8]
 8017dc2:	f8dc c010 	ldr.w	ip, [ip, #16]
 8017dc6:	f8df e110 	ldr.w	lr, [pc, #272]	@ 8017ed8 <draw_with_stencil+0x1874>
 8017dca:	f04c 0c05 	orr.w	ip, ip, #5
 8017dce:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 8017dd2:	f8c0 b018 	str.w	fp, [r0, #24]
 8017dd6:	6206      	str	r6, [r0, #32]
 8017dd8:	6281      	str	r1, [r0, #40]	@ 0x28
 8017dda:	6302      	str	r2, [r0, #48]	@ 0x30
 8017ddc:	6383      	str	r3, [r0, #56]	@ 0x38
 8017dde:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 8017de2:	f1b8 0f00 	cmp.w	r8, #0
 8017de6:	f43f ad26 	beq.w	8017836 <draw_with_stencil+0x11d2>
 8017dea:	f8d9 3000 	ldr.w	r3, [r9]
 8017dee:	2034      	movs	r0, #52	@ 0x34
 8017df0:	8a19      	ldrh	r1, [r3, #16]
 8017df2:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8017df6:	f005 ffb9 	bl	801dd6c <nema_cl_add_cmd>
 8017dfa:	e51c      	b.n	8017836 <draw_with_stencil+0x11d2>
 8017dfc:	ee19 0a90 	vmov	r0, s19
 8017e00:	2100      	movs	r1, #0
 8017e02:	f7f8 ff59 	bl	8010cb8 <nema_set_clip2>
 8017e06:	2009      	movs	r0, #9
 8017e08:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 8017e0c:	edd4 9a0b 	vldr	s19, [r4, #44]	@ 0x2c
 8017e10:	f8d4 8030 	ldr.w	r8, [r4, #48]	@ 0x30
 8017e14:	ed94 9a0d 	vldr	s18, [r4, #52]	@ 0x34
 8017e18:	edd4 8a0e 	vldr	s17, [r4, #56]	@ 0x38
 8017e1c:	ed94 8a0f 	vldr	s16, [r4, #60]	@ 0x3c
 8017e20:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 8017e22:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 8017e24:	f005 ff46 	bl	801dcb4 <nema_cl_get_space>
 8017e28:	2800      	cmp	r0, #0
 8017e2a:	f47f aeef 	bne.w	8017c0c <draw_with_stencil+0x15a8>
 8017e2e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8017e32:	2100      	movs	r1, #0
 8017e34:	461a      	mov	r2, r3
 8017e36:	4608      	mov	r0, r1
 8017e38:	f7f8 ff3e 	bl	8010cb8 <nema_set_clip2>
 8017e3c:	e5be      	b.n	80179bc <draw_with_stencil+0x1358>
 8017e3e:	07d6      	lsls	r6, r2, #31
 8017e40:	f101 0138 	add.w	r1, r1, #56	@ 0x38
 8017e44:	d407      	bmi.n	8017e56 <draw_with_stencil+0x17f2>
 8017e46:	4608      	mov	r0, r1
 8017e48:	f7fa f900 	bl	801204c <nema_set_matrix>
 8017e4c:	e4f9      	b.n	8017842 <draw_with_stencil+0x11de>
 8017e4e:	07d6      	lsls	r6, r2, #31
 8017e50:	f101 0108 	add.w	r1, r1, #8
 8017e54:	d5f7      	bpl.n	8017e46 <draw_with_stencil+0x17e2>
 8017e56:	a81c      	add	r0, sp, #112	@ 0x70
 8017e58:	f7f9 fd30 	bl	80118bc <nema_mat3x3_copy>
 8017e5c:	6839      	ldr	r1, [r7, #0]
 8017e5e:	a81c      	add	r0, sp, #112	@ 0x70
 8017e60:	3170      	adds	r1, #112	@ 0x70
 8017e62:	f7f9 fd77 	bl	8011954 <nema_mat3x3_mul>
 8017e66:	a81c      	add	r0, sp, #112	@ 0x70
 8017e68:	f7fa f8f0 	bl	801204c <nema_set_matrix>
 8017e6c:	e4e9      	b.n	8017842 <draw_with_stencil+0x11de>
 8017e6e:	2003      	movs	r0, #3
 8017e70:	f005 ff20 	bl	801dcb4 <nema_cl_get_space>
 8017e74:	2800      	cmp	r0, #0
 8017e76:	f000 825e 	beq.w	8018336 <draw_with_stencil+0x1cd2>
 8017e7a:	f44f 77e8 	mov.w	r7, #464	@ 0x1d0
 8017e7e:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 8017e82:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8017e86:	4b16      	ldr	r3, [pc, #88]	@ (8017ee0 <draw_with_stencil+0x187c>)
 8017e88:	6046      	str	r6, [r0, #4]
 8017e8a:	681b      	ldr	r3, [r3, #0]
 8017e8c:	6007      	str	r7, [r0, #0]
 8017e8e:	6143      	str	r3, [r0, #20]
 8017e90:	4b14      	ldr	r3, [pc, #80]	@ (8017ee4 <draw_with_stencil+0x1880>)
 8017e92:	6081      	str	r1, [r0, #8]
 8017e94:	e9c0 3203 	strd	r3, r2, [r0, #12]
 8017e98:	e548      	b.n	801792c <draw_with_stencil+0x12c8>
 8017e9a:	2001      	movs	r0, #1
 8017e9c:	f7fa f882 	bl	8011fa4 <nema_enable_tiling_2x2>
 8017ea0:	683a      	ldr	r2, [r7, #0]
 8017ea2:	e4d8      	b.n	8017856 <draw_with_stencil+0x11f2>
 8017ea4:	2604      	movs	r6, #4
 8017ea6:	2303      	movs	r3, #3
 8017ea8:	2202      	movs	r2, #2
 8017eaa:	e5c9      	b.n	8017a40 <draw_with_stencil+0x13dc>
 8017eac:	9904      	ldr	r1, [sp, #16]
 8017eae:	f891 102c 	ldrb.w	r1, [r1, #44]	@ 0x2c
 8017eb2:	2901      	cmp	r1, #1
 8017eb4:	f47f ace3 	bne.w	801787e <draw_with_stencil+0x121a>
 8017eb8:	2100      	movs	r1, #0
 8017eba:	4f0b      	ldr	r7, [pc, #44]	@ (8017ee8 <draw_with_stencil+0x1884>)
 8017ebc:	480b      	ldr	r0, [pc, #44]	@ (8017eec <draw_with_stencil+0x1888>)
 8017ebe:	911d      	str	r1, [sp, #116]	@ 0x74
 8017ec0:	911f      	str	r1, [sp, #124]	@ 0x7c
 8017ec2:	971c      	str	r7, [sp, #112]	@ 0x70
 8017ec4:	901e      	str	r0, [sp, #120]	@ 0x78
 8017ec6:	2104      	movs	r1, #4
 8017ec8:	2703      	movs	r7, #3
 8017eca:	e4df      	b.n	801788c <draw_with_stencil+0x1228>
 8017ecc:	ee39 9a27 	vadd.f32	s18, s18, s15
 8017ed0:	e637      	b.n	8017b42 <draw_with_stencil+0x14de>
 8017ed2:	bf00      	nop
 8017ed4:	20000064 	.word	0x20000064
 8017ed8:	ff000100 	.word	0xff000100
 8017edc:	18001001 	.word	0x18001001
 8017ee0:	20082fe8 	.word	0x20082fe8
 8017ee4:	941fdc13 	.word	0x941fdc13
 8017ee8:	0a18108b 	.word	0x0a18108b
 8017eec:	0800110b 	.word	0x0800110b
 8017ef0:	9b04      	ldr	r3, [sp, #16]
 8017ef2:	f103 0080 	add.w	r0, r3, #128	@ 0x80
 8017ef6:	f7fa f8a9 	bl	801204c <nema_set_matrix>
 8017efa:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 8017efe:	eefc 8ae8 	vcvt.u32.f32	s17, s17
 8017f02:	edcd 7a05 	vstr	s15, [sp, #20]
 8017f06:	2e00      	cmp	r6, #0
 8017f08:	f040 81d2 	bne.w	80182b0 <draw_with_stencil+0x1c4c>
 8017f0c:	ee17 3a90 	vmov	r3, s15
 8017f10:	ee18 2a90 	vmov	r2, s17
 8017f14:	4631      	mov	r1, r6
 8017f16:	4630      	mov	r0, r6
 8017f18:	f7f8 fef0 	bl	8010cfc <nema_set_clip_temp>
 8017f1c:	2009      	movs	r0, #9
 8017f1e:	ed94 ba0a 	vldr	s22, [r4, #40]	@ 0x28
 8017f22:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8017f24:	edd4 aa0c 	vldr	s21, [r4, #48]	@ 0x30
 8017f28:	ed94 aa0d 	vldr	s20, [r4, #52]	@ 0x34
 8017f2c:	ed94 9a0e 	vldr	s18, [r4, #56]	@ 0x38
 8017f30:	edd4 8a0f 	vldr	s17, [r4, #60]	@ 0x3c
 8017f34:	ed94 8a10 	vldr	s16, [r4, #64]	@ 0x40
 8017f38:	f8d4 b044 	ldr.w	fp, [r4, #68]	@ 0x44
 8017f3c:	f005 feba 	bl	801dcb4 <nema_cl_get_space>
 8017f40:	b3a8      	cbz	r0, 8017fae <draw_with_stencil+0x194a>
 8017f42:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8017f46:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8017f4a:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8017f4e:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8017f52:	ed80 ba01 	vstr	s22, [r0, #4]
 8017f56:	60c7      	str	r7, [r0, #12]
 8017f58:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8017f5c:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8017f60:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8017f64:	6201      	str	r1, [r0, #32]
 8017f66:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8017f6a:	edc0 aa05 	vstr	s21, [r0, #20]
 8017f6e:	ed80 aa07 	vstr	s20, [r0, #28]
 8017f72:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 8017f76:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8017f7a:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8017f7e:	f8c0 c010 	str.w	ip, [r0, #16]
 8017f82:	f8df c40c 	ldr.w	ip, [pc, #1036]	@ 8018390 <draw_with_stencil+0x1d2c>
 8017f86:	f8c0 e008 	str.w	lr, [r0, #8]
 8017f8a:	f8c0 8000 	str.w	r8, [r0]
 8017f8e:	f8dc c010 	ldr.w	ip, [ip, #16]
 8017f92:	f8df e400 	ldr.w	lr, [pc, #1024]	@ 8018394 <draw_with_stencil+0x1d30>
 8017f96:	f04c 0c05 	orr.w	ip, ip, #5
 8017f9a:	f8c0 b03c 	str.w	fp, [r0, #60]	@ 0x3c
 8017f9e:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 8017fa2:	6187      	str	r7, [r0, #24]
 8017fa4:	6281      	str	r1, [r0, #40]	@ 0x28
 8017fa6:	6302      	str	r2, [r0, #48]	@ 0x30
 8017fa8:	6383      	str	r3, [r0, #56]	@ 0x38
 8017faa:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 8017fae:	f8d9 3000 	ldr.w	r3, [r9]
 8017fb2:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017fb6:	ed93 8a04 	vldr	s16, [r3, #16]
 8017fba:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 8017fbe:	ee38 8a69 	vsub.f32	s16, s16, s19
 8017fc2:	ee38 8a27 	vadd.f32	s16, s16, s15
 8017fc6:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017fca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017fce:	f73f adf7 	bgt.w	8017bc0 <draw_with_stencil+0x155c>
 8017fd2:	e5ca      	b.n	8017b6a <draw_with_stencil+0x1506>
 8017fd4:	9b04      	ldr	r3, [sp, #16]
 8017fd6:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
 8017fda:	f7fa f837 	bl	801204c <nema_set_matrix>
 8017fde:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 8017fe2:	eefd 7ac9 	vcvt.s32.f32	s15, s18
 8017fe6:	eebc 7ae8 	vcvt.u32.f32	s14, s17
 8017fea:	ee18 3a10 	vmov	r3, s16
 8017fee:	ee17 2a10 	vmov	r2, s14
 8017ff2:	ee17 1a90 	vmov	r1, s15
 8017ff6:	2e00      	cmp	r6, #0
 8017ff8:	f040 8163 	bne.w	80182c2 <draw_with_stencil+0x1c5e>
 8017ffc:	4630      	mov	r0, r6
 8017ffe:	f7f8 fe7d 	bl	8010cfc <nema_set_clip_temp>
 8018002:	2009      	movs	r0, #9
 8018004:	ed94 ca0a 	vldr	s24, [r4, #40]	@ 0x28
 8018008:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 801800a:	edd4 ba0c 	vldr	s23, [r4, #48]	@ 0x30
 801800e:	ed94 ba0d 	vldr	s22, [r4, #52]	@ 0x34
 8018012:	edd4 aa0e 	vldr	s21, [r4, #56]	@ 0x38
 8018016:	ed94 aa0f 	vldr	s20, [r4, #60]	@ 0x3c
 801801a:	ed94 8a10 	vldr	s16, [r4, #64]	@ 0x40
 801801e:	f8d4 b044 	ldr.w	fp, [r4, #68]	@ 0x44
 8018022:	f005 fe47 	bl	801dcb4 <nema_cl_get_space>
 8018026:	2800      	cmp	r0, #0
 8018028:	f43f ad7f 	beq.w	8017b2a <draw_with_stencil+0x14c6>
 801802c:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8018030:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8018034:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8018038:	f44f 7848 	mov.w	r8, #800	@ 0x320
 801803c:	ed80 ca01 	vstr	s24, [r0, #4]
 8018040:	60c7      	str	r7, [r0, #12]
 8018042:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8018046:	f44f 774d 	mov.w	r7, #820	@ 0x334
 801804a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801804e:	6201      	str	r1, [r0, #32]
 8018050:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8018054:	f8c0 c010 	str.w	ip, [r0, #16]
 8018058:	f8df c334 	ldr.w	ip, [pc, #820]	@ 8018390 <draw_with_stencil+0x1d2c>
 801805c:	f8c0 e008 	str.w	lr, [r0, #8]
 8018060:	f8c0 8000 	str.w	r8, [r0]
 8018064:	f8dc c010 	ldr.w	ip, [ip, #16]
 8018068:	f8df e328 	ldr.w	lr, [pc, #808]	@ 8018394 <draw_with_stencil+0x1d30>
 801806c:	f04c 0c05 	orr.w	ip, ip, #5
 8018070:	edc0 ba05 	vstr	s23, [r0, #20]
 8018074:	ed80 ba07 	vstr	s22, [r0, #28]
 8018078:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 801807c:	ed80 aa0b 	vstr	s20, [r0, #44]	@ 0x2c
 8018080:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8018084:	f8c0 b03c 	str.w	fp, [r0, #60]	@ 0x3c
 8018088:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 801808c:	6187      	str	r7, [r0, #24]
 801808e:	6281      	str	r1, [r0, #40]	@ 0x28
 8018090:	6302      	str	r2, [r0, #48]	@ 0x30
 8018092:	6383      	str	r3, [r0, #56]	@ 0x38
 8018094:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 8018098:	e547      	b.n	8017b2a <draw_with_stencil+0x14c6>
 801809a:	9b04      	ldr	r3, [sp, #16]
 801809c:	f103 0038 	add.w	r0, r3, #56	@ 0x38
 80180a0:	f7f9 ffd4 	bl	801204c <nema_set_matrix>
 80180a4:	eefc 8ae8 	vcvt.u32.f32	s17, s17
 80180a8:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 80180ac:	eefd 7ae9 	vcvt.s32.f32	s15, s19
 80180b0:	eebd 7ac9 	vcvt.s32.f32	s14, s18
 80180b4:	ee18 3a10 	vmov	r3, s16
 80180b8:	ee18 2a90 	vmov	r2, s17
 80180bc:	ee17 1a10 	vmov	r1, s14
 80180c0:	ee17 0a90 	vmov	r0, s15
 80180c4:	2e00      	cmp	r6, #0
 80180c6:	f040 8100 	bne.w	80182ca <draw_with_stencil+0x1c66>
 80180ca:	f7f8 fe17 	bl	8010cfc <nema_set_clip_temp>
 80180ce:	2009      	movs	r0, #9
 80180d0:	f8d4 b028 	ldr.w	fp, [r4, #40]	@ 0x28
 80180d4:	edd4 aa0b 	vldr	s21, [r4, #44]	@ 0x2c
 80180d8:	ed94 ba0c 	vldr	s22, [r4, #48]	@ 0x30
 80180dc:	f8d4 8034 	ldr.w	r8, [r4, #52]	@ 0x34
 80180e0:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 80180e4:	edd4 8a0f 	vldr	s17, [r4, #60]	@ 0x3c
 80180e8:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 80180ea:	ed94 8a11 	vldr	s16, [r4, #68]	@ 0x44
 80180ee:	f005 fde1 	bl	801dcb4 <nema_cl_get_space>
 80180f2:	2800      	cmp	r0, #0
 80180f4:	f000 811c 	beq.w	8018330 <draw_with_stencil+0x1ccc>
 80180f8:	f44f 7148 	mov.w	r1, #800	@ 0x320
 80180fc:	f8c0 b004 	str.w	fp, [r0, #4]
 8018100:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8018104:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8018108:	edc0 aa03 	vstr	s21, [r0, #12]
 801810c:	4ba0      	ldr	r3, [pc, #640]	@ (8018390 <draw_with_stencil+0x1d2c>)
 801810e:	6001      	str	r1, [r0, #0]
 8018110:	f8c0 b008 	str.w	fp, [r0, #8]
 8018114:	6102      	str	r2, [r0, #16]
 8018116:	691a      	ldr	r2, [r3, #16]
 8018118:	f8c0 801c 	str.w	r8, [r0, #28]
 801811c:	f042 0205 	orr.w	r2, r2, #5
 8018120:	f44f 7850 	mov.w	r8, #832	@ 0x340
 8018124:	f44f 7e51 	mov.w	lr, #836	@ 0x344
 8018128:	f44f 7c54 	mov.w	ip, #848	@ 0x350
 801812c:	6347      	str	r7, [r0, #52]	@ 0x34
 801812e:	6442      	str	r2, [r0, #68]	@ 0x44
 8018130:	f44f 7755 	mov.w	r7, #852	@ 0x354
 8018134:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8018138:	ed80 ba05 	vstr	s22, [r0, #20]
 801813c:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8018140:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8018144:	ed80 8a0f 	vstr	s16, [r0, #60]	@ 0x3c
 8018148:	4992      	ldr	r1, [pc, #584]	@ (8018394 <draw_with_stencil+0x1d30>)
 801814a:	f8d9 3000 	ldr.w	r3, [r9]
 801814e:	6182      	str	r2, [r0, #24]
 8018150:	f8c0 8020 	str.w	r8, [r0, #32]
 8018154:	f8c0 e028 	str.w	lr, [r0, #40]	@ 0x28
 8018158:	f8c0 c030 	str.w	ip, [r0, #48]	@ 0x30
 801815c:	6387      	str	r7, [r0, #56]	@ 0x38
 801815e:	6401      	str	r1, [r0, #64]	@ 0x40
 8018160:	ed93 7a05 	vldr	s14, [r3, #20]
 8018164:	eeb8 8ac7 	vcvt.f32.s32	s16, s14
 8018168:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801816c:	ee38 8a49 	vsub.f32	s16, s16, s18
 8018170:	ee38 8a27 	vadd.f32	s16, s16, s15
 8018174:	e4c9      	b.n	8017b0a <draw_with_stencil+0x14a6>
 8018176:	4f88      	ldr	r7, [pc, #544]	@ (8018398 <draw_with_stencil+0x1d34>)
 8018178:	4631      	mov	r1, r6
 801817a:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 801817e:	f10d 081c 	add.w	r8, sp, #28
 8018182:	f005 fdf3 	bl	801dd6c <nema_cl_add_cmd>
 8018186:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8018188:	e8a8 000f 	stmia.w	r8!, {r0, r1, r2, r3}
 801818c:	e9d7 0100 	ldrd	r0, r1, [r7]
 8018190:	f107 0e08 	add.w	lr, r7, #8
 8018194:	f10d 0b34 	add.w	fp, sp, #52	@ 0x34
 8018198:	e888 0003 	stmia.w	r8, {r0, r1}
 801819c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80181a0:	e8ab 000f 	stmia.w	fp!, {r0, r1, r2, r3}
 80181a4:	e89e 0003 	ldmia.w	lr, {r0, r1}
 80181a8:	f10d 0c70 	add.w	ip, sp, #112	@ 0x70
 80181ac:	f107 0e20 	add.w	lr, r7, #32
 80181b0:	9705      	str	r7, [sp, #20]
 80181b2:	e88b 0003 	stmia.w	fp, {r0, r1}
 80181b6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80181ba:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80181be:	e89e 000f 	ldmia.w	lr, {r0, r1, r2, r3}
 80181c2:	9f04      	ldr	r7, [sp, #16]
 80181c4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80181c8:	ed97 7a36 	vldr	s14, [r7, #216]	@ 0xd8
 80181cc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80181d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80181d4:	9f05      	ldr	r7, [sp, #20]
 80181d6:	f10d 084c 	add.w	r8, sp, #76	@ 0x4c
 80181da:	f107 0740 	add.w	r7, r7, #64	@ 0x40
 80181de:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 80181e2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80181e4:	e8a8 000f 	stmia.w	r8!, {r0, r1, r2, r3}
 80181e8:	e897 0003 	ldmia.w	r7, {r0, r1}
 80181ec:	e888 0003 	stmia.w	r8, {r0, r1}
 80181f0:	db6e      	blt.n	80182d0 <draw_with_stencil+0x1c6c>
 80181f2:	9f04      	ldr	r7, [sp, #16]
 80181f4:	f897 30dd 	ldrb.w	r3, [r7, #221]	@ 0xdd
 80181f8:	2b02      	cmp	r3, #2
 80181fa:	f000 80a4 	beq.w	8018346 <draw_with_stencil+0x1ce2>
 80181fe:	2008      	movs	r0, #8
 8018200:	2102      	movs	r1, #2
 8018202:	4f66      	ldr	r7, [pc, #408]	@ (801839c <draw_with_stencil+0x1d38>)
 8018204:	f016 6280 	ands.w	r2, r6, #67108864	@ 0x4000000
 8018208:	f040 808c 	bne.w	8018324 <draw_with_stencil+0x1cc0>
 801820c:	ab0d      	add	r3, sp, #52	@ 0x34
 801820e:	4418      	add	r0, r3
 8018210:	f7fa f80a 	bl	8012228 <nema_load_frag_shader>
 8018214:	4638      	mov	r0, r7
 8018216:	f7fa f821 	bl	801225c <nema_set_frag_ptr>
 801821a:	f7ff bb87 	b.w	801792c <draw_with_stencil+0x12c8>
 801821e:	a813      	add	r0, sp, #76	@ 0x4c
 8018220:	495f      	ldr	r1, [pc, #380]	@ (80183a0 <draw_with_stencil+0x1d3c>)
 8018222:	f7f9 fb4b 	bl	80118bc <nema_mat3x3_copy>
 8018226:	a813      	add	r0, sp, #76	@ 0x4c
 8018228:	f7f9 fc8a 	bl	8011b40 <nema_mat3x3_invert>
 801822c:	b9d8      	cbnz	r0, 8018266 <draw_with_stencil+0x1c02>
 801822e:	9b04      	ldr	r3, [sp, #16]
 8018230:	a81c      	add	r0, sp, #112	@ 0x70
 8018232:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 8018236:	f7f9 fb41 	bl	80118bc <nema_mat3x3_copy>
 801823a:	a81c      	add	r0, sp, #112	@ 0x70
 801823c:	a913      	add	r1, sp, #76	@ 0x4c
 801823e:	f7f9 fb89 	bl	8011954 <nema_mat3x3_mul>
 8018242:	a81c      	add	r0, sp, #112	@ 0x70
 8018244:	f7f9 ff02 	bl	801204c <nema_set_matrix>
 8018248:	f7ff bafb 	b.w	8017842 <draw_with_stencil+0x11de>
 801824c:	a813      	add	r0, sp, #76	@ 0x4c
 801824e:	4954      	ldr	r1, [pc, #336]	@ (80183a0 <draw_with_stencil+0x1d3c>)
 8018250:	f7f9 fb34 	bl	80118bc <nema_mat3x3_copy>
 8018254:	a813      	add	r0, sp, #76	@ 0x4c
 8018256:	f7f9 fc73 	bl	8011b40 <nema_mat3x3_invert>
 801825a:	b920      	cbnz	r0, 8018266 <draw_with_stencil+0x1c02>
 801825c:	9b04      	ldr	r3, [sp, #16]
 801825e:	a81c      	add	r0, sp, #112	@ 0x70
 8018260:	f103 0108 	add.w	r1, r3, #8
 8018264:	e7e7      	b.n	8018236 <draw_with_stencil+0x1bd2>
 8018266:	f44f 2680 	mov.w	r6, #262144	@ 0x40000
 801826a:	f7fe bfdb 	b.w	8017224 <draw_with_stencil+0xbc0>
 801826e:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 8018272:	f004 fbc7 	bl	801ca04 <nema_vg_set_error>
 8018276:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 801827a:	f004 fbc3 	bl	801ca04 <nema_vg_set_error>
 801827e:	f44f 6600 	mov.w	r6, #2048	@ 0x800
 8018282:	f7fe bfde 	b.w	8017242 <draw_with_stencil+0xbde>
 8018286:	2000      	movs	r0, #0
 8018288:	f8d9 1000 	ldr.w	r1, [r9]
 801828c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
 8018290:	68c9      	ldr	r1, [r1, #12]
 8018292:	e9cd 8200 	strd	r8, r2, [sp]
 8018296:	9002      	str	r0, [sp, #8]
 8018298:	4630      	mov	r0, r6
 801829a:	f7f8 fc2b 	bl	8010af4 <nema_bind_tex>
 801829e:	2303      	movs	r3, #3
 80182a0:	2202      	movs	r2, #2
 80182a2:	4631      	mov	r1, r6
 80182a4:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 80182a8:	46b0      	mov	r8, r6
 80182aa:	f005 fe81 	bl	801dfb0 <nema_set_blend>
 80182ae:	e549      	b.n	8017d44 <draw_with_stencil+0x16e0>
 80182b0:	2100      	movs	r1, #0
 80182b2:	ee17 3a90 	vmov	r3, s15
 80182b6:	4608      	mov	r0, r1
 80182b8:	ee18 2a90 	vmov	r2, s17
 80182bc:	f7f8 fcfc 	bl	8010cb8 <nema_set_clip2>
 80182c0:	e62c      	b.n	8017f1c <draw_with_stencil+0x18b8>
 80182c2:	2000      	movs	r0, #0
 80182c4:	f7f8 fcf8 	bl	8010cb8 <nema_set_clip2>
 80182c8:	e69b      	b.n	8018002 <draw_with_stencil+0x199e>
 80182ca:	f7f8 fcf5 	bl	8010cb8 <nema_set_clip2>
 80182ce:	e6fe      	b.n	80180ce <draw_with_stencil+0x1a6a>
 80182d0:	9b04      	ldr	r3, [sp, #16]
 80182d2:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 80182d6:	2b02      	cmp	r3, #2
 80182d8:	d049      	beq.n	801836e <draw_with_stencil+0x1d0a>
 80182da:	2103      	movs	r1, #3
 80182dc:	2008      	movs	r0, #8
 80182de:	2302      	movs	r3, #2
 80182e0:	4f2e      	ldr	r7, [pc, #184]	@ (801839c <draw_with_stencil+0x1d38>)
 80182e2:	f8df c0c8 	ldr.w	ip, [pc, #200]	@ 80183ac <draw_with_stencil+0x1d48>
 80182e6:	f016 6280 	ands.w	r2, r6, #67108864	@ 0x4000000
 80182ea:	d139      	bne.n	8018360 <draw_with_stencil+0x1cfc>
 80182ec:	4619      	mov	r1, r3
 80182ee:	ab13      	add	r3, sp, #76	@ 0x4c
 80182f0:	4418      	add	r0, r3
 80182f2:	f7f9 ff99 	bl	8012228 <nema_load_frag_shader>
 80182f6:	4638      	mov	r0, r7
 80182f8:	f7f9 ffb0 	bl	801225c <nema_set_frag_ptr>
 80182fc:	9b04      	ldr	r3, [sp, #16]
 80182fe:	eddf 6a29 	vldr	s13, [pc, #164]	@ 80183a4 <draw_with_stencil+0x1d40>
 8018302:	edd3 7a36 	vldr	s15, [r3, #216]	@ 0xd8
 8018306:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801830a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801830e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018312:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018316:	ee17 0a90 	vmov	r0, s15
 801831a:	0600      	lsls	r0, r0, #24
 801831c:	f006 fa0e 	bl	801e73c <nema_set_const_color>
 8018320:	f7ff bb04 	b.w	801792c <draw_with_stencil+0x12c8>
 8018324:	ab07      	add	r3, sp, #28
 8018326:	4418      	add	r0, r3
 8018328:	2200      	movs	r2, #0
 801832a:	f7f9 ff7d 	bl	8012228 <nema_load_frag_shader>
 801832e:	e771      	b.n	8018214 <draw_with_stencil+0x1bb0>
 8018330:	f8d9 3000 	ldr.w	r3, [r9]
 8018334:	e714      	b.n	8018160 <draw_with_stencil+0x1afc>
 8018336:	f44f 7000 	mov.w	r0, #512	@ 0x200
 801833a:	f004 fb63 	bl	801ca04 <nema_vg_set_error>
 801833e:	f44f 7600 	mov.w	r6, #512	@ 0x200
 8018342:	f7fe bf6f 	b.w	8017224 <draw_with_stencil+0xbc0>
 8018346:	f897 202c 	ldrb.w	r2, [r7, #44]	@ 0x2c
 801834a:	4b17      	ldr	r3, [pc, #92]	@ (80183a8 <draw_with_stencil+0x1d44>)
 801834c:	2a01      	cmp	r2, #1
 801834e:	4f13      	ldr	r7, [pc, #76]	@ (801839c <draw_with_stencil+0x1d38>)
 8018350:	bf13      	iteet	ne
 8018352:	2008      	movne	r0, #8
 8018354:	461f      	moveq	r7, r3
 8018356:	2000      	moveq	r0, #0
 8018358:	2102      	movne	r1, #2
 801835a:	bf08      	it	eq
 801835c:	2103      	moveq	r1, #3
 801835e:	e751      	b.n	8018204 <draw_with_stencil+0x1ba0>
 8018360:	ab1c      	add	r3, sp, #112	@ 0x70
 8018362:	4418      	add	r0, r3
 8018364:	2200      	movs	r2, #0
 8018366:	4667      	mov	r7, ip
 8018368:	f7f9 ff5e 	bl	8012228 <nema_load_frag_shader>
 801836c:	e7c3      	b.n	80182f6 <draw_with_stencil+0x1c92>
 801836e:	9a04      	ldr	r2, [sp, #16]
 8018370:	f892 202c 	ldrb.w	r2, [r2, #44]	@ 0x2c
 8018374:	2a01      	cmp	r2, #1
 8018376:	d005      	beq.n	8018384 <draw_with_stencil+0x1d20>
 8018378:	2103      	movs	r1, #3
 801837a:	2008      	movs	r0, #8
 801837c:	4f07      	ldr	r7, [pc, #28]	@ (801839c <draw_with_stencil+0x1d38>)
 801837e:	f8df c02c 	ldr.w	ip, [pc, #44]	@ 80183ac <draw_with_stencil+0x1d48>
 8018382:	e7b0      	b.n	80182e6 <draw_with_stencil+0x1c82>
 8018384:	4f08      	ldr	r7, [pc, #32]	@ (80183a8 <draw_with_stencil+0x1d44>)
 8018386:	2104      	movs	r1, #4
 8018388:	46bc      	mov	ip, r7
 801838a:	2000      	movs	r0, #0
 801838c:	2303      	movs	r3, #3
 801838e:	e7aa      	b.n	80182e6 <draw_with_stencil+0x1c82>
 8018390:	20000064 	.word	0x20000064
 8018394:	ff000100 	.word	0xff000100
 8018398:	08033568 	.word	0x08033568
 801839c:	941e8000 	.word	0x941e8000
 80183a0:	20082fec 	.word	0x20082fec
 80183a4:	437f0000 	.word	0x437f0000
 80183a8:	941da000 	.word	0x941da000
 80183ac:	941f8000 	.word	0x941f8000

080183b0 <nema_vg_draw_path>:
 80183b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183b4:	ed2d 8b04 	vpush	{d8-d9}
 80183b8:	b087      	sub	sp, #28
 80183ba:	4604      	mov	r4, r0
 80183bc:	460d      	mov	r5, r1
 80183be:	f005 fc05 	bl	801dbcc <nema_cl_get_bound>
 80183c2:	2800      	cmp	r0, #0
 80183c4:	f000 82e9 	beq.w	801899a <nema_vg_draw_path+0x5ea>
 80183c8:	2c00      	cmp	r4, #0
 80183ca:	f000 80ca 	beq.w	8018562 <nema_vg_draw_path+0x1b2>
 80183ce:	2d00      	cmp	r5, #0
 80183d0:	f000 80c7 	beq.w	8018562 <nema_vg_draw_path+0x1b2>
 80183d4:	4f76      	ldr	r7, [pc, #472]	@ (80185b0 <nema_vg_draw_path+0x200>)
 80183d6:	683b      	ldr	r3, [r7, #0]
 80183d8:	2b00      	cmp	r3, #0
 80183da:	f000 80c2 	beq.w	8018562 <nema_vg_draw_path+0x1b2>
 80183de:	6862      	ldr	r2, [r4, #4]
 80183e0:	2a00      	cmp	r2, #0
 80183e2:	f000 80cc 	beq.w	801857e <nema_vg_draw_path+0x1ce>
 80183e6:	edd4 7a08 	vldr	s15, [r4, #32]
 80183ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80183ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80183f2:	f100 829a 	bmi.w	801892a <nema_vg_draw_path+0x57a>
 80183f6:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 80183fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80183fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018402:	f100 8292 	bmi.w	801892a <nema_vg_draw_path+0x57a>
 8018406:	edd5 7a35 	vldr	s15, [r5, #212]	@ 0xd4
 801840a:	f8df 81b8 	ldr.w	r8, [pc, #440]	@ 80185c4 <nema_vg_draw_path+0x214>
 801840e:	7f1a      	ldrb	r2, [r3, #28]
 8018410:	edc8 7a00 	vstr	s15, [r8]
 8018414:	b95a      	cbnz	r2, 801842e <nema_vg_draw_path+0x7e>
 8018416:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801841a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801841e:	d806      	bhi.n	801842e <nema_vg_draw_path+0x7e>
 8018420:	2400      	movs	r4, #0
 8018422:	4620      	mov	r0, r4
 8018424:	b007      	add	sp, #28
 8018426:	ecbd 8b04 	vpop	{d8-d9}
 801842a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801842e:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8018430:	f8d4 6084 	ldr.w	r6, [r4, #132]	@ 0x84
 8018434:	7f5a      	ldrb	r2, [r3, #29]
 8018436:	430e      	orrs	r6, r1
 8018438:	f8df 918c 	ldr.w	r9, [pc, #396]	@ 80185c8 <nema_vg_draw_path+0x218>
 801843c:	7f99      	ldrb	r1, [r3, #30]
 801843e:	485d      	ldr	r0, [pc, #372]	@ (80185b4 <nema_vg_draw_path+0x204>)
 8018440:	f006 0601 	and.w	r6, r6, #1
 8018444:	f002 0301 	and.w	r3, r2, #1
 8018448:	f889 6000 	strb.w	r6, [r9]
 801844c:	7003      	strb	r3, [r0, #0]
 801844e:	b111      	cbz	r1, 8018456 <nema_vg_draw_path+0xa6>
 8018450:	2300      	movs	r3, #0
 8018452:	f889 3000 	strb.w	r3, [r9]
 8018456:	4858      	ldr	r0, [pc, #352]	@ (80185b8 <nema_vg_draw_path+0x208>)
 8018458:	f7f9 fa22 	bl	80118a0 <nema_mat3x3_load_identity>
 801845c:	f899 3000 	ldrb.w	r3, [r9]
 8018460:	2b00      	cmp	r3, #0
 8018462:	f000 8088 	beq.w	8018576 <nema_vg_draw_path+0x1c6>
 8018466:	6839      	ldr	r1, [r7, #0]
 8018468:	6b0b      	ldr	r3, [r1, #48]	@ 0x30
 801846a:	07db      	lsls	r3, r3, #31
 801846c:	f100 8091 	bmi.w	8018592 <nema_vg_draw_path+0x1e2>
 8018470:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8018474:	07d9      	lsls	r1, r3, #31
 8018476:	f100 8411 	bmi.w	8018c9c <nema_vg_draw_path+0x8ec>
 801847a:	edd5 7a36 	vldr	s15, [r5, #216]	@ 0xd8
 801847e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018482:	eef4 7ac7 	vcmpe.f32	s15, s14
 8018486:	ed98 8a00 	vldr	s16, [r8]
 801848a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801848e:	4b4b      	ldr	r3, [pc, #300]	@ (80185bc <nema_vg_draw_path+0x20c>)
 8018490:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8018492:	ed83 8a00 	vstr	s16, [r3]
 8018496:	f8df b134 	ldr.w	fp, [pc, #308]	@ 80185cc <nema_vg_draw_path+0x21c>
 801849a:	4b49      	ldr	r3, [pc, #292]	@ (80185c0 <nema_vg_draw_path+0x210>)
 801849c:	f8cb 0000 	str.w	r0, [fp]
 80184a0:	ed83 8a00 	vstr	s16, [r3]
 80184a4:	f100 824d 	bmi.w	8018942 <nema_vg_draw_path+0x592>
 80184a8:	683b      	ldr	r3, [r7, #0]
 80184aa:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 80184ae:	f01a 6f80 	tst.w	sl, #67108864	@ 0x4000000
 80184b2:	d022      	beq.n	80184fa <nema_vg_draw_path+0x14a>
 80184b4:	0e01      	lsrs	r1, r0, #24
 80184b6:	f3c0 4e07 	ubfx	lr, r0, #16, #8
 80184ba:	b2c2      	uxtb	r2, r0
 80184bc:	f3c0 2c07 	ubfx	ip, r0, #8, #8
 80184c0:	fb01 f202 	mul.w	r2, r1, r2
 80184c4:	fb01 fc0c 	mul.w	ip, r1, ip
 80184c8:	fb01 f10e 	mul.w	r1, r1, lr
 80184cc:	f8df e100 	ldr.w	lr, [pc, #256]	@ 80185d0 <nema_vg_draw_path+0x220>
 80184d0:	9101      	str	r1, [sp, #4]
 80184d2:	fbae 1202 	umull	r1, r2, lr, r2
 80184d6:	fbae 1c0c 	umull	r1, ip, lr, ip
 80184da:	9901      	ldr	r1, [sp, #4]
 80184dc:	f000 407f 	and.w	r0, r0, #4278190080	@ 0xff000000
 80184e0:	fbae e101 	umull	lr, r1, lr, r1
 80184e4:	ea40 10d2 	orr.w	r0, r0, r2, lsr #7
 80184e8:	ea4f 1cdc 	mov.w	ip, ip, lsr #7
 80184ec:	ea40 200c 	orr.w	r0, r0, ip, lsl #8
 80184f0:	09c9      	lsrs	r1, r1, #7
 80184f2:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80184f6:	f8cb 0000 	str.w	r0, [fp]
 80184fa:	f893 c01c 	ldrb.w	ip, [r3, #28]
 80184fe:	f899 1000 	ldrb.w	r1, [r9]
 8018502:	f1bc 0f00 	cmp.w	ip, #0
 8018506:	f040 81fe 	bne.w	8018906 <nema_vg_draw_path+0x556>
 801850a:	2900      	cmp	r1, #0
 801850c:	f040 82d6 	bne.w	8018abc <nema_vg_draw_path+0x70c>
 8018510:	2e00      	cmp	r6, #0
 8018512:	f040 833b 	bne.w	8018b8c <nema_vg_draw_path+0x7dc>
 8018516:	eeb0 7a48 	vmov.f32	s14, s16
 801851a:	eef0 7a48 	vmov.f32	s15, s16
 801851e:	ee37 6ac7 	vsub.f32	s12, s15, s14
 8018522:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8018526:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801852a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801852e:	bf48      	it	mi
 8018530:	eeb1 6a46 	vnegmi.f32	s12, s12
 8018534:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018538:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801853c:	bf4c      	ite	mi
 801853e:	eef1 5a67 	vnegmi.f32	s11, s15
 8018542:	eef0 5a67 	vmovpl.f32	s11, s15
 8018546:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801854a:	f100 83d5 	bmi.w	8018cf8 <nema_vg_draw_path+0x948>
 801854e:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8018552:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018556:	dc3f      	bgt.n	80185d8 <nema_vg_draw_path+0x228>
 8018558:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 80185d4 <nema_vg_draw_path+0x224>
 801855c:	ee67 6a26 	vmul.f32	s13, s14, s13
 8018560:	e045      	b.n	80185ee <nema_vg_draw_path+0x23e>
 8018562:	2001      	movs	r0, #1
 8018564:	f004 fa4e 	bl	801ca04 <nema_vg_set_error>
 8018568:	2401      	movs	r4, #1
 801856a:	4620      	mov	r0, r4
 801856c:	b007      	add	sp, #28
 801856e:	ecbd 8b04 	vpop	{d8-d9}
 8018572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018576:	2e00      	cmp	r6, #0
 8018578:	f43f af7f 	beq.w	801847a <nema_vg_draw_path+0xca>
 801857c:	e773      	b.n	8018466 <nema_vg_draw_path+0xb6>
 801857e:	2410      	movs	r4, #16
 8018580:	2010      	movs	r0, #16
 8018582:	f004 fa3f 	bl	801ca04 <nema_vg_set_error>
 8018586:	4620      	mov	r0, r4
 8018588:	b007      	add	sp, #28
 801858a:	ecbd 8b04 	vpop	{d8-d9}
 801858e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018592:	4809      	ldr	r0, [pc, #36]	@ (80185b8 <nema_vg_draw_path+0x208>)
 8018594:	314c      	adds	r1, #76	@ 0x4c
 8018596:	f7f9 f991 	bl	80118bc <nema_mat3x3_copy>
 801859a:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 801859e:	07d8      	lsls	r0, r3, #31
 80185a0:	f57f af6b 	bpl.w	801847a <nema_vg_draw_path+0xca>
 80185a4:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 80185a8:	4803      	ldr	r0, [pc, #12]	@ (80185b8 <nema_vg_draw_path+0x208>)
 80185aa:	f7f9 f9d3 	bl	8011954 <nema_mat3x3_mul>
 80185ae:	e764      	b.n	801847a <nema_vg_draw_path+0xca>
 80185b0:	20082f68 	.word	0x20082f68
 80185b4:	20082f7c 	.word	0x20082f7c
 80185b8:	20082fec 	.word	0x20082fec
 80185bc:	20000138 	.word	0x20000138
 80185c0:	2000013c 	.word	0x2000013c
 80185c4:	20000134 	.word	0x20000134
 80185c8:	20082fb5 	.word	0x20082fb5
 80185cc:	20082fe8 	.word	0x20082fe8
 80185d0:	80808081 	.word	0x80808081
 80185d4:	3727c5ac 	.word	0x3727c5ac
 80185d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80185dc:	ed5f 6a03 	vldr	s13, [pc, #-12]	@ 80185d4 <nema_vg_draw_path+0x224>
 80185e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185e4:	bf4c      	ite	mi
 80185e6:	ee67 6ae6 	vnmulmi.f32	s13, s15, s13
 80185ea:	ee67 6aa6 	vmulpl.f32	s13, s15, s13
 80185ee:	eeb4 6ae6 	vcmpe.f32	s12, s13
 80185f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185f6:	d807      	bhi.n	8018608 <nema_vg_draw_path+0x258>
 80185f8:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 80185fc:	eef4 7ae5 	vcmpe.f32	s15, s11
 8018600:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018604:	f100 82d1 	bmi.w	8018baa <nema_vg_draw_path+0x7fa>
 8018608:	2900      	cmp	r1, #0
 801860a:	f000 8182 	beq.w	8018912 <nema_vg_draw_path+0x562>
 801860e:	f1bc 0f00 	cmp.w	ip, #0
 8018612:	f040 828e 	bne.w	8018b32 <nema_vg_draw_path+0x782>
 8018616:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801861a:	eef4 7ae6 	vcmpe.f32	s15, s13
 801861e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018622:	f340 8342 	ble.w	8018caa <nema_vg_draw_path+0x8fa>
 8018626:	2201      	movs	r2, #1
 8018628:	f04f 0c00 	mov.w	ip, #0
 801862c:	4edd      	ldr	r6, [pc, #884]	@ (80189a4 <nema_vg_draw_path+0x5f4>)
 801862e:	48de      	ldr	r0, [pc, #888]	@ (80189a8 <nema_vg_draw_path+0x5f8>)
 8018630:	6032      	str	r2, [r6, #0]
 8018632:	f895 20dd 	ldrb.w	r2, [r5, #221]	@ 0xdd
 8018636:	f8c0 c000 	str.w	ip, [r0]
 801863a:	2a00      	cmp	r2, #0
 801863c:	f000 838c 	beq.w	8018d58 <nema_vg_draw_path+0x9a8>
 8018640:	ed98 6a00 	vldr	s12, [r8]
 8018644:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8018648:	f04f 0800 	mov.w	r8, #0
 801864c:	ee26 6a26 	vmul.f32	s12, s12, s13
 8018650:	f04f 0c00 	mov.w	ip, #0
 8018654:	48d5      	ldr	r0, [pc, #852]	@ (80189ac <nema_vg_draw_path+0x5fc>)
 8018656:	4ad6      	ldr	r2, [pc, #856]	@ (80189b0 <nema_vg_draw_path+0x600>)
 8018658:	f8c0 c000 	str.w	ip, [r0]
 801865c:	f8c2 c000 	str.w	ip, [r2]
 8018660:	2900      	cmp	r1, #0
 8018662:	f040 81d4 	bne.w	8018a0e <nema_vg_draw_path+0x65e>
 8018666:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801866a:	eef1 5a00 	vmov.f32	s11, #16	@ 0x40800000  4.0
 801866e:	edd4 3a04 	vldr	s7, [r4, #16]
 8018672:	ee75 5a86 	vadd.f32	s11, s11, s12
 8018676:	ee73 3ae5 	vsub.f32	s7, s7, s11
 801867a:	4ace      	ldr	r2, [pc, #824]	@ (80189b4 <nema_vg_draw_path+0x604>)
 801867c:	ee36 6a86 	vadd.f32	s12, s13, s12
 8018680:	6812      	ldr	r2, [r2, #0]
 8018682:	edc2 3a06 	vstr	s7, [r2, #24]
 8018686:	edd4 2a05 	vldr	s5, [r4, #20]
 801868a:	ee72 2ac6 	vsub.f32	s5, s5, s12
 801868e:	edc2 2a07 	vstr	s5, [r2, #28]
 8018692:	ed94 7a08 	vldr	s14, [r4, #32]
 8018696:	edd4 7a04 	vldr	s15, [r4, #16]
 801869a:	ee77 7a87 	vadd.f32	s15, s15, s14
 801869e:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80186a2:	edc2 7a08 	vstr	s15, [r2, #32]
 80186a6:	ed94 2a05 	vldr	s4, [r4, #20]
 80186aa:	ee32 2a46 	vsub.f32	s4, s4, s12
 80186ae:	ed82 2a09 	vstr	s4, [r2, #36]	@ 0x24
 80186b2:	edd4 6a08 	vldr	s13, [r4, #32]
 80186b6:	ed94 7a04 	vldr	s14, [r4, #16]
 80186ba:	ee37 7a26 	vadd.f32	s14, s14, s13
 80186be:	ee37 7a25 	vadd.f32	s14, s14, s11
 80186c2:	ed82 7a0a 	vstr	s14, [r2, #40]	@ 0x28
 80186c6:	ed94 5a09 	vldr	s10, [r4, #36]	@ 0x24
 80186ca:	edd4 6a05 	vldr	s13, [r4, #20]
 80186ce:	ee76 6a85 	vadd.f32	s13, s13, s10
 80186d2:	ee36 3a86 	vadd.f32	s6, s13, s12
 80186d6:	ed82 3a0b 	vstr	s6, [r2, #44]	@ 0x2c
 80186da:	edd4 6a04 	vldr	s13, [r4, #16]
 80186de:	ee76 5ae5 	vsub.f32	s11, s13, s11
 80186e2:	edc2 5a0c 	vstr	s11, [r2, #48]	@ 0x30
 80186e6:	edd4 6a05 	vldr	s13, [r4, #20]
 80186ea:	ed94 5a09 	vldr	s10, [r4, #36]	@ 0x24
 80186ee:	ee76 6a85 	vadd.f32	s13, s13, s10
 80186f2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80186f6:	edc2 6a0d 	vstr	s13, [r2, #52]	@ 0x34
 80186fa:	2900      	cmp	r1, #0
 80186fc:	d05e      	beq.n	80187bc <nema_vg_draw_path+0x40c>
 80186fe:	49ae      	ldr	r1, [pc, #696]	@ (80189b8 <nema_vg_draw_path+0x608>)
 8018700:	ed91 6a00 	vldr	s12, [r1]
 8018704:	edd1 4a01 	vldr	s9, [r1, #4]
 8018708:	ee63 0a86 	vmul.f32	s1, s7, s12
 801870c:	ee22 5aa4 	vmul.f32	s10, s5, s9
 8018710:	ed91 0a02 	vldr	s0, [r1, #8]
 8018714:	ee70 0a85 	vadd.f32	s1, s1, s10
 8018718:	ee70 0a80 	vadd.f32	s1, s1, s0
 801871c:	edc2 0a06 	vstr	s1, [r2, #24]
 8018720:	ed91 4a04 	vldr	s8, [r1, #16]
 8018724:	ed91 5a03 	vldr	s10, [r1, #12]
 8018728:	ee62 8a24 	vmul.f32	s17, s4, s9
 801872c:	ee63 3a85 	vmul.f32	s7, s7, s10
 8018730:	ee27 1a85 	vmul.f32	s2, s15, s10
 8018734:	ee67 1a05 	vmul.f32	s3, s14, s10
 8018738:	ee23 8a04 	vmul.f32	s16, s6, s8
 801873c:	ee62 2a84 	vmul.f32	s5, s5, s8
 8018740:	ee23 3a24 	vmul.f32	s6, s6, s9
 8018744:	ee67 7a86 	vmul.f32	s15, s15, s12
 8018748:	ee22 9a04 	vmul.f32	s18, s4, s8
 801874c:	ee25 5a85 	vmul.f32	s10, s11, s10
 8018750:	ee27 7a06 	vmul.f32	s14, s14, s12
 8018754:	ee65 5a86 	vmul.f32	s11, s11, s12
 8018758:	ee26 4a84 	vmul.f32	s8, s13, s8
 801875c:	ee66 4aa4 	vmul.f32	s9, s13, s9
 8018760:	ed91 6a05 	vldr	s12, [r1, #20]
 8018764:	ee73 2aa2 	vadd.f32	s5, s7, s5
 8018768:	ee71 6a88 	vadd.f32	s13, s3, s16
 801876c:	ee37 7a03 	vadd.f32	s14, s14, s6
 8018770:	ee31 2a09 	vadd.f32	s4, s2, s18
 8018774:	ee77 7aa8 	vadd.f32	s15, s15, s17
 8018778:	ee35 5a04 	vadd.f32	s10, s10, s8
 801877c:	ee75 5aa4 	vadd.f32	s11, s11, s9
 8018780:	ee36 3a86 	vadd.f32	s6, s13, s12
 8018784:	ee72 2a86 	vadd.f32	s5, s5, s12
 8018788:	ee32 2a06 	vadd.f32	s4, s4, s12
 801878c:	ee77 7a80 	vadd.f32	s15, s15, s0
 8018790:	ee37 7a00 	vadd.f32	s14, s14, s0
 8018794:	ee75 6a06 	vadd.f32	s13, s10, s12
 8018798:	ee75 5a80 	vadd.f32	s11, s11, s0
 801879c:	eef0 3a60 	vmov.f32	s7, s1
 80187a0:	edc2 2a07 	vstr	s5, [r2, #28]
 80187a4:	ed82 2a09 	vstr	s4, [r2, #36]	@ 0x24
 80187a8:	edc2 7a08 	vstr	s15, [r2, #32]
 80187ac:	ed82 3a0b 	vstr	s6, [r2, #44]	@ 0x2c
 80187b0:	ed82 7a0a 	vstr	s14, [r2, #40]	@ 0x28
 80187b4:	edc2 6a0d 	vstr	s13, [r2, #52]	@ 0x34
 80187b8:	edc2 5a0c 	vstr	s11, [r2, #48]	@ 0x30
 80187bc:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 80187c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80187c4:	f240 8167 	bls.w	8018a96 <nema_vg_draw_path+0x6e6>
 80187c8:	eef5 2ac0 	vcmpe.f32	s5, #0.0
 80187cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80187d0:	f240 81c6 	bls.w	8018b60 <nema_vg_draw_path+0x7b0>
 80187d4:	ed92 6a04 	vldr	s12, [r2, #16]
 80187d8:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 80187dc:	eeb4 6ae3 	vcmpe.f32	s12, s7
 80187e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80187e4:	d80f      	bhi.n	8018806 <nema_vg_draw_path+0x456>
 80187e6:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80187ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80187ee:	d80a      	bhi.n	8018806 <nema_vg_draw_path+0x456>
 80187f0:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80187f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80187f8:	d805      	bhi.n	8018806 <nema_vg_draw_path+0x456>
 80187fa:	eeb4 6ae5 	vcmpe.f32	s12, s11
 80187fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018802:	f67f ae0d 	bls.w	8018420 <nema_vg_draw_path+0x70>
 8018806:	ed92 6a05 	vldr	s12, [r2, #20]
 801880a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801880e:	eeb4 6ae2 	vcmpe.f32	s12, s5
 8018812:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018816:	d80f      	bhi.n	8018838 <nema_vg_draw_path+0x488>
 8018818:	eeb4 6ac2 	vcmpe.f32	s12, s4
 801881c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018820:	d80a      	bhi.n	8018838 <nema_vg_draw_path+0x488>
 8018822:	eeb4 6ac3 	vcmpe.f32	s12, s6
 8018826:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801882a:	d805      	bhi.n	8018838 <nema_vg_draw_path+0x488>
 801882c:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8018830:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018834:	f67f adf4 	bls.w	8018420 <nema_vg_draw_path+0x70>
 8018838:	7f9a      	ldrb	r2, [r3, #30]
 801883a:	2a00      	cmp	r2, #0
 801883c:	f040 809b 	bne.w	8018976 <nema_vg_draw_path+0x5c6>
 8018840:	ed9f 6a5e 	vldr	s12, [pc, #376]	@ 80189bc <nema_vg_draw_path+0x60c>
 8018844:	eef4 3ac6 	vcmpe.f32	s7, s12
 8018848:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801884c:	dc4c      	bgt.n	80188e8 <nema_vg_draw_path+0x538>
 801884e:	eef4 2ac6 	vcmpe.f32	s5, s12
 8018852:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018856:	dc47      	bgt.n	80188e8 <nema_vg_draw_path+0x538>
 8018858:	eef4 7ac6 	vcmpe.f32	s15, s12
 801885c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018860:	dc42      	bgt.n	80188e8 <nema_vg_draw_path+0x538>
 8018862:	eeb4 2ac6 	vcmpe.f32	s4, s12
 8018866:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801886a:	dc3d      	bgt.n	80188e8 <nema_vg_draw_path+0x538>
 801886c:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8018870:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018874:	dc38      	bgt.n	80188e8 <nema_vg_draw_path+0x538>
 8018876:	eeb4 3ac6 	vcmpe.f32	s6, s12
 801887a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801887e:	dc33      	bgt.n	80188e8 <nema_vg_draw_path+0x538>
 8018880:	eef4 5ac6 	vcmpe.f32	s11, s12
 8018884:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018888:	dc2e      	bgt.n	80188e8 <nema_vg_draw_path+0x538>
 801888a:	eef4 6ac6 	vcmpe.f32	s13, s12
 801888e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018892:	dc29      	bgt.n	80188e8 <nema_vg_draw_path+0x538>
 8018894:	ed9f 6a4a 	vldr	s12, [pc, #296]	@ 80189c0 <nema_vg_draw_path+0x610>
 8018898:	eef4 3ac6 	vcmpe.f32	s7, s12
 801889c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188a0:	d422      	bmi.n	80188e8 <nema_vg_draw_path+0x538>
 80188a2:	eef4 2ac6 	vcmpe.f32	s5, s12
 80188a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188aa:	d41d      	bmi.n	80188e8 <nema_vg_draw_path+0x538>
 80188ac:	eef4 7ac6 	vcmpe.f32	s15, s12
 80188b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188b4:	d418      	bmi.n	80188e8 <nema_vg_draw_path+0x538>
 80188b6:	eeb4 2ac6 	vcmpe.f32	s4, s12
 80188ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188be:	d413      	bmi.n	80188e8 <nema_vg_draw_path+0x538>
 80188c0:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80188c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188c8:	d40e      	bmi.n	80188e8 <nema_vg_draw_path+0x538>
 80188ca:	eeb4 3ac6 	vcmpe.f32	s6, s12
 80188ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188d2:	d409      	bmi.n	80188e8 <nema_vg_draw_path+0x538>
 80188d4:	eef4 5ac6 	vcmpe.f32	s11, s12
 80188d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188dc:	d404      	bmi.n	80188e8 <nema_vg_draw_path+0x538>
 80188de:	eef4 6ac6 	vcmpe.f32	s13, s12
 80188e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188e6:	d546      	bpl.n	8018976 <nema_vg_draw_path+0x5c6>
 80188e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80188ea:	0759      	lsls	r1, r3, #29
 80188ec:	f140 82a9 	bpl.w	8018e42 <nema_vg_draw_path+0xa92>
 80188f0:	4620      	mov	r0, r4
 80188f2:	4629      	mov	r1, r5
 80188f4:	f003 fe86 	bl	801c604 <draw_clipped_path>
 80188f8:	4604      	mov	r4, r0
 80188fa:	2800      	cmp	r0, #0
 80188fc:	f43f ae35 	beq.w	801856a <nema_vg_draw_path+0x1ba>
 8018900:	f004 f880 	bl	801ca04 <nema_vg_set_error>
 8018904:	e631      	b.n	801856a <nema_vg_draw_path+0x1ba>
 8018906:	2900      	cmp	r1, #0
 8018908:	d162      	bne.n	80189d0 <nema_vg_draw_path+0x620>
 801890a:	eeb0 7a48 	vmov.f32	s14, s16
 801890e:	eef0 7a48 	vmov.f32	s15, s16
 8018912:	2e00      	cmp	r6, #0
 8018914:	f43f ae7b 	beq.w	801860e <nema_vg_draw_path+0x25e>
 8018918:	4a2a      	ldr	r2, [pc, #168]	@ (80189c4 <nema_vg_draw_path+0x614>)
 801891a:	ed88 8a00 	vstr	s16, [r8]
 801891e:	edc2 7a00 	vstr	s15, [r2]
 8018922:	4a29      	ldr	r2, [pc, #164]	@ (80189c8 <nema_vg_draw_path+0x618>)
 8018924:	ed82 7a00 	vstr	s14, [r2]
 8018928:	e671      	b.n	801860e <nema_vg_draw_path+0x25e>
 801892a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 801892e:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8018932:	f004 f867 	bl	801ca04 <nema_vg_set_error>
 8018936:	4620      	mov	r0, r4
 8018938:	b007      	add	sp, #28
 801893a:	ecbd 8b04 	vpop	{d8-d9}
 801893e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018942:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018946:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801894a:	f67f ad69 	bls.w	8018420 <nema_vg_draw_path+0x70>
 801894e:	0e03      	lsrs	r3, r0, #24
 8018950:	ee07 3a10 	vmov	s14, r3
 8018954:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018958:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 801895c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8018960:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8018964:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018968:	ee17 3a90 	vmov	r3, s15
 801896c:	f363 601f 	bfi	r0, r3, #24, #8
 8018970:	f8cb 0000 	str.w	r0, [fp]
 8018974:	e598      	b.n	80184a8 <nema_vg_draw_path+0xf8>
 8018976:	f1b8 0f00 	cmp.w	r8, #0
 801897a:	f040 8206 	bne.w	8018d8a <nema_vg_draw_path+0x9da>
 801897e:	4b13      	ldr	r3, [pc, #76]	@ (80189cc <nema_vg_draw_path+0x61c>)
 8018980:	781a      	ldrb	r2, [r3, #0]
 8018982:	2a01      	cmp	r2, #1
 8018984:	f000 81c5 	beq.w	8018d12 <nema_vg_draw_path+0x962>
 8018988:	4620      	mov	r0, r4
 801898a:	4629      	mov	r1, r5
 801898c:	f7fd fe6a 	bl	8016664 <draw_with_stencil>
 8018990:	4604      	mov	r4, r0
 8018992:	2800      	cmp	r0, #0
 8018994:	f43f ade9 	beq.w	801856a <nema_vg_draw_path+0x1ba>
 8018998:	e7b2      	b.n	8018900 <nema_vg_draw_path+0x550>
 801899a:	2040      	movs	r0, #64	@ 0x40
 801899c:	f004 f832 	bl	801ca04 <nema_vg_set_error>
 80189a0:	2440      	movs	r4, #64	@ 0x40
 80189a2:	e5e2      	b.n	801856a <nema_vg_draw_path+0x1ba>
 80189a4:	20082f70 	.word	0x20082f70
 80189a8:	20082f6c 	.word	0x20082f6c
 80189ac:	20082fac 	.word	0x20082fac
 80189b0:	20082fb0 	.word	0x20082fb0
 80189b4:	20083010 	.word	0x20083010
 80189b8:	20082fec 	.word	0x20082fec
 80189bc:	44bfe000 	.word	0x44bfe000
 80189c0:	c3ff8000 	.word	0xc3ff8000
 80189c4:	20000138 	.word	0x20000138
 80189c8:	2000013c 	.word	0x2000013c
 80189cc:	20000064 	.word	0x20000064
 80189d0:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80189d4:	f04f 0c00 	mov.w	ip, #0
 80189d8:	48d6      	ldr	r0, [pc, #856]	@ (8018d34 <nema_vg_draw_path+0x984>)
 80189da:	4ed7      	ldr	r6, [pc, #860]	@ (8018d38 <nema_vg_draw_path+0x988>)
 80189dc:	6002      	str	r2, [r0, #0]
 80189de:	6032      	str	r2, [r6, #0]
 80189e0:	f8c8 2000 	str.w	r2, [r8]
 80189e4:	7f5a      	ldrb	r2, [r3, #29]
 80189e6:	48d5      	ldr	r0, [pc, #852]	@ (8018d3c <nema_vg_draw_path+0x98c>)
 80189e8:	4ed5      	ldr	r6, [pc, #852]	@ (8018d40 <nema_vg_draw_path+0x990>)
 80189ea:	0792      	lsls	r2, r2, #30
 80189ec:	f8c0 c000 	str.w	ip, [r0]
 80189f0:	f8c6 c000 	str.w	ip, [r6]
 80189f4:	f57f ae24 	bpl.w	8018640 <nema_vg_draw_path+0x290>
 80189f8:	f04f 0e00 	mov.w	lr, #0
 80189fc:	46e0      	mov	r8, ip
 80189fe:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8018a02:	48d0      	ldr	r0, [pc, #832]	@ (8018d44 <nema_vg_draw_path+0x994>)
 8018a04:	4ad0      	ldr	r2, [pc, #832]	@ (8018d48 <nema_vg_draw_path+0x998>)
 8018a06:	f8c0 e000 	str.w	lr, [r0]
 8018a0a:	f8c2 e000 	str.w	lr, [r2]
 8018a0e:	f8df a340 	ldr.w	sl, [pc, #832]	@ 8018d50 <nema_vg_draw_path+0x9a0>
 8018a12:	ed9a 0a00 	vldr	s0, [sl]
 8018a16:	edda 7a01 	vldr	s15, [sl, #4]
 8018a1a:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018a1e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018a22:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018a26:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018a2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a2e:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018a32:	f100 8254 	bmi.w	8018ede <nema_vg_draw_path+0xb2e>
 8018a36:	ed9a 0a03 	vldr	s0, [sl, #12]
 8018a3a:	edda 7a04 	vldr	s15, [sl, #16]
 8018a3e:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018a42:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018a46:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018a4a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018a4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a52:	eeb1 8ac0 	vsqrt.f32	s16, s0
 8018a56:	f100 8233 	bmi.w	8018ec0 <nema_vg_draw_path+0xb10>
 8018a5a:	eddf 7abc 	vldr	s15, [pc, #752]	@ 8018d4c <nema_vg_draw_path+0x99c>
 8018a5e:	eef4 8ae7 	vcmpe.f32	s17, s15
 8018a62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a66:	bfc4      	itt	gt
 8018a68:	eef1 7a00 	vmovgt.f32	s15, #16	@ 0x40800000  4.0
 8018a6c:	eec7 5aa8 	vdivgt.f32	s11, s15, s17
 8018a70:	eddf 7ab6 	vldr	s15, [pc, #728]	@ 8018d4c <nema_vg_draw_path+0x99c>
 8018a74:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8018a78:	bfd8      	it	le
 8018a7a:	eef1 5a00 	vmovle.f32	s11, #16	@ 0x40800000  4.0
 8018a7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a82:	edc0 8a00 	vstr	s17, [r0]
 8018a86:	ed82 8a00 	vstr	s16, [r2]
 8018a8a:	dd7c      	ble.n	8018b86 <nema_vg_draw_path+0x7d6>
 8018a8c:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8018a90:	eec7 6a88 	vdiv.f32	s13, s15, s16
 8018a94:	e5eb      	b.n	801866e <nema_vg_draw_path+0x2be>
 8018a96:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018a9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a9e:	f63f ae93 	bhi.w	80187c8 <nema_vg_draw_path+0x418>
 8018aa2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018aa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018aaa:	f63f ae8d 	bhi.w	80187c8 <nema_vg_draw_path+0x418>
 8018aae:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8018ab2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ab6:	f63f ae87 	bhi.w	80187c8 <nema_vg_draw_path+0x418>
 8018aba:	e4b1      	b.n	8018420 <nema_vg_draw_path+0x70>
 8018abc:	f8df a290 	ldr.w	sl, [pc, #656]	@ 8018d50 <nema_vg_draw_path+0x9a0>
 8018ac0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8018ac2:	ed9a 0a00 	vldr	s0, [sl]
 8018ac6:	edda 7a01 	vldr	s15, [sl, #4]
 8018aca:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018ace:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018ad2:	0792      	lsls	r2, r2, #30
 8018ad4:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018ad8:	f100 80ad 	bmi.w	8018c36 <nema_vg_draw_path+0x886>
 8018adc:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018ae0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ae4:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018ae8:	f100 8211 	bmi.w	8018f0e <nema_vg_draw_path+0xb5e>
 8018aec:	edda 7a03 	vldr	s15, [sl, #12]
 8018af0:	ed9a 0a04 	vldr	s0, [sl, #16]
 8018af4:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018af8:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018afc:	ee37 0a80 	vadd.f32	s0, s15, s0
 8018b00:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018b04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b08:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8018b0c:	f100 81f6 	bmi.w	8018efc <nema_vg_draw_path+0xb4c>
 8018b10:	ee68 7a28 	vmul.f32	s15, s16, s17
 8018b14:	ee28 7a09 	vmul.f32	s14, s16, s18
 8018b18:	eef4 7ac7 	vcmpe.f32	s15, s14
 8018b1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b20:	f340 8163 	ble.w	8018dea <nema_vg_draw_path+0xa3a>
 8018b24:	eeb0 8a67 	vmov.f32	s16, s15
 8018b28:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018b2c:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018b30:	e4f5      	b.n	801851e <nema_vg_draw_path+0x16e>
 8018b32:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8018b36:	2000      	movs	r0, #0
 8018b38:	4e7e      	ldr	r6, [pc, #504]	@ (8018d34 <nema_vg_draw_path+0x984>)
 8018b3a:	f8c8 2000 	str.w	r2, [r8]
 8018b3e:	6032      	str	r2, [r6, #0]
 8018b40:	4e7d      	ldr	r6, [pc, #500]	@ (8018d38 <nema_vg_draw_path+0x988>)
 8018b42:	f8df c1f8 	ldr.w	ip, [pc, #504]	@ 8018d3c <nema_vg_draw_path+0x98c>
 8018b46:	6032      	str	r2, [r6, #0]
 8018b48:	7f5a      	ldrb	r2, [r3, #29]
 8018b4a:	4e7d      	ldr	r6, [pc, #500]	@ (8018d40 <nema_vg_draw_path+0x990>)
 8018b4c:	0792      	lsls	r2, r2, #30
 8018b4e:	f8cc 0000 	str.w	r0, [ip]
 8018b52:	6030      	str	r0, [r6, #0]
 8018b54:	f57f ad74 	bpl.w	8018640 <nema_vg_draw_path+0x290>
 8018b58:	4680      	mov	r8, r0
 8018b5a:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8018b5e:	e577      	b.n	8018650 <nema_vg_draw_path+0x2a0>
 8018b60:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8018b64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b68:	f63f ae34 	bhi.w	80187d4 <nema_vg_draw_path+0x424>
 8018b6c:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 8018b70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b74:	f63f ae2e 	bhi.w	80187d4 <nema_vg_draw_path+0x424>
 8018b78:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8018b7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b80:	f63f ae28 	bhi.w	80187d4 <nema_vg_draw_path+0x424>
 8018b84:	e44c      	b.n	8018420 <nema_vg_draw_path+0x70>
 8018b86:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018b8a:	e570      	b.n	801866e <nema_vg_draw_path+0x2be>
 8018b8c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8018b8e:	0792      	lsls	r2, r2, #30
 8018b90:	f53f acc1 	bmi.w	8018516 <nema_vg_draw_path+0x166>
 8018b94:	f8df a1b8 	ldr.w	sl, [pc, #440]	@ 8018d50 <nema_vg_draw_path+0x9a0>
 8018b98:	ed9a 0a01 	vldr	s0, [sl, #4]
 8018b9c:	edda 7a00 	vldr	s15, [sl]
 8018ba0:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018ba4:	ee07 0aa7 	vmla.f32	s0, s15, s15
 8018ba8:	e798      	b.n	8018adc <nema_vg_draw_path+0x72c>
 8018baa:	b2c2      	uxtb	r2, r0
 8018bac:	ee05 2a10 	vmov	s10, r2
 8018bb0:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8018bb4:	ee06 2a10 	vmov	s12, r2
 8018bb8:	0e02      	lsrs	r2, r0, #24
 8018bba:	ee06 2a90 	vmov	s13, r2
 8018bbe:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8018bc2:	ee07 2a10 	vmov	s14, r2
 8018bc6:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8018bca:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018bce:	ee25 5a27 	vmul.f32	s10, s10, s15
 8018bd2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8018bd6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018bda:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8018bde:	ee27 7a27 	vmul.f32	s14, s14, s15
 8018be2:	ee26 6a27 	vmul.f32	s12, s12, s15
 8018be6:	eef0 7a65 	vmov.f32	s15, s11
 8018bea:	eefc 5ac5 	vcvt.u32.f32	s11, s10
 8018bee:	eefc 6ae6 	vcvt.u32.f32	s13, s13
 8018bf2:	edcd 5a01 	vstr	s11, [sp, #4]
 8018bf6:	eebc 6ac6 	vcvt.u32.f32	s12, s12
 8018bfa:	ee16 ea90 	vmov	lr, s13
 8018bfe:	eefc 6ac7 	vcvt.u32.f32	s13, s14
 8018c02:	f89d 2004 	ldrb.w	r2, [sp, #4]
 8018c06:	ee16 0a10 	vmov	r0, s12
 8018c0a:	ea42 6e0e 	orr.w	lr, r2, lr, lsl #24
 8018c0e:	ee16 2a90 	vmov	r2, s13
 8018c12:	0200      	lsls	r0, r0, #8
 8018c14:	b280      	uxth	r0, r0
 8018c16:	0412      	lsls	r2, r2, #16
 8018c18:	ea4e 0000 	orr.w	r0, lr, r0
 8018c1c:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8018c20:	4302      	orrs	r2, r0
 8018c22:	eeb0 7a67 	vmov.f32	s14, s15
 8018c26:	eeb0 8a67 	vmov.f32	s16, s15
 8018c2a:	f8cb 2000 	str.w	r2, [fp]
 8018c2e:	2900      	cmp	r1, #0
 8018c30:	f47f aced 	bne.w	801860e <nema_vg_draw_path+0x25e>
 8018c34:	e66d      	b.n	8018912 <nema_vg_draw_path+0x562>
 8018c36:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018c3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018c3e:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8018c42:	f100 8176 	bmi.w	8018f32 <nema_vg_draw_path+0xb82>
 8018c46:	edda 7a03 	vldr	s15, [sl, #12]
 8018c4a:	ed9a 0a04 	vldr	s0, [sl, #16]
 8018c4e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018c52:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018c56:	ee37 0a80 	vadd.f32	s0, s15, s0
 8018c5a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018c5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018c62:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018c66:	f100 815b 	bmi.w	8018f20 <nema_vg_draw_path+0xb70>
 8018c6a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018c6e:	ee86 7a89 	vdiv.f32	s14, s13, s18
 8018c72:	eec6 7aa8 	vdiv.f32	s15, s13, s17
 8018c76:	ee27 7a08 	vmul.f32	s14, s14, s16
 8018c7a:	ee67 7a88 	vmul.f32	s15, s15, s16
 8018c7e:	4a2d      	ldr	r2, [pc, #180]	@ (8018d34 <nema_vg_draw_path+0x984>)
 8018c80:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018c84:	ed82 7a00 	vstr	s14, [r2]
 8018c88:	4a2b      	ldr	r2, [pc, #172]	@ (8018d38 <nema_vg_draw_path+0x988>)
 8018c8a:	eeb0 7a48 	vmov.f32	s14, s16
 8018c8e:	edc2 7a00 	vstr	s15, [r2]
 8018c92:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018c96:	eef0 7a48 	vmov.f32	s15, s16
 8018c9a:	e440      	b.n	801851e <nema_vg_draw_path+0x16e>
 8018c9c:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 8018ca0:	482b      	ldr	r0, [pc, #172]	@ (8018d50 <nema_vg_draw_path+0x9a0>)
 8018ca2:	f7f8 fe0b 	bl	80118bc <nema_mat3x3_copy>
 8018ca6:	f7ff bbe8 	b.w	801847a <nema_vg_draw_path+0xca>
 8018caa:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8018cae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018cb2:	f73f acb8 	bgt.w	8018626 <nema_vg_draw_path+0x276>
 8018cb6:	4a1f      	ldr	r2, [pc, #124]	@ (8018d34 <nema_vg_draw_path+0x984>)
 8018cb8:	4e21      	ldr	r6, [pc, #132]	@ (8018d40 <nema_vg_draw_path+0x990>)
 8018cba:	edc2 6a00 	vstr	s13, [r2]
 8018cbe:	4a1e      	ldr	r2, [pc, #120]	@ (8018d38 <nema_vg_draw_path+0x988>)
 8018cc0:	481e      	ldr	r0, [pc, #120]	@ (8018d3c <nema_vg_draw_path+0x98c>)
 8018cc2:	edc2 6a00 	vstr	s13, [r2]
 8018cc6:	f895 20dd 	ldrb.w	r2, [r5, #221]	@ 0xdd
 8018cca:	edc8 6a00 	vstr	s13, [r8]
 8018cce:	f8c6 c000 	str.w	ip, [r6]
 8018cd2:	f8c0 c000 	str.w	ip, [r0]
 8018cd6:	2a00      	cmp	r2, #0
 8018cd8:	f47f acb2 	bne.w	8018640 <nema_vg_draw_path+0x290>
 8018cdc:	f893 2048 	ldrb.w	r2, [r3, #72]	@ 0x48
 8018ce0:	2a01      	cmp	r2, #1
 8018ce2:	d049      	beq.n	8018d78 <nema_vg_draw_path+0x9c8>
 8018ce4:	2201      	movs	r2, #1
 8018ce6:	ed98 6a00 	vldr	s12, [r8]
 8018cea:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8018cee:	6002      	str	r2, [r0, #0]
 8018cf0:	4690      	mov	r8, r2
 8018cf2:	ee26 6a26 	vmul.f32	s12, s12, s13
 8018cf6:	e4ab      	b.n	8018650 <nema_vg_draw_path+0x2a0>
 8018cf8:	eef1 6a47 	vneg.f32	s13, s14
 8018cfc:	eef4 5ae6 	vcmpe.f32	s11, s13
 8018d00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d04:	f53f ac68 	bmi.w	80185d8 <nema_vg_draw_path+0x228>
 8018d08:	eddf 5a12 	vldr	s11, [pc, #72]	@ 8018d54 <nema_vg_draw_path+0x9a4>
 8018d0c:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8018d10:	e46d      	b.n	80185ee <nema_vg_draw_path+0x23e>
 8018d12:	685b      	ldr	r3, [r3, #4]
 8018d14:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8018d18:	f000 80c7 	beq.w	8018eaa <nema_vg_draw_path+0xafa>
 8018d1c:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 8018d20:	f47f ae32 	bne.w	8018988 <nema_vg_draw_path+0x5d8>
 8018d24:	2000      	movs	r0, #0
 8018d26:	f7f9 f93d 	bl	8011fa4 <nema_enable_tiling_2x2>
 8018d2a:	2204      	movs	r2, #4
 8018d2c:	683b      	ldr	r3, [r7, #0]
 8018d2e:	77da      	strb	r2, [r3, #31]
 8018d30:	e62a      	b.n	8018988 <nema_vg_draw_path+0x5d8>
 8018d32:	bf00      	nop
 8018d34:	20000138 	.word	0x20000138
 8018d38:	2000013c 	.word	0x2000013c
 8018d3c:	20082f6c 	.word	0x20082f6c
 8018d40:	20082f70 	.word	0x20082f70
 8018d44:	20082fac 	.word	0x20082fac
 8018d48:	20082fb0 	.word	0x20082fb0
 8018d4c:	3a83126f 	.word	0x3a83126f
 8018d50:	20082fec 	.word	0x20082fec
 8018d54:	3727c5ac 	.word	0x3727c5ac
 8018d58:	f1ba 0f01 	cmp.w	sl, #1
 8018d5c:	d0be      	beq.n	8018cdc <nema_vg_draw_path+0x92c>
 8018d5e:	f240 5201 	movw	r2, #1281	@ 0x501
 8018d62:	fa1f fa8a 	uxth.w	sl, sl
 8018d66:	4592      	cmp	sl, r2
 8018d68:	d106      	bne.n	8018d78 <nema_vg_draw_path+0x9c8>
 8018d6a:	f8db 2000 	ldr.w	r2, [fp]
 8018d6e:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8018d72:	f1b2 4f7f 	cmp.w	r2, #4278190080	@ 0xff000000
 8018d76:	d0b1      	beq.n	8018cdc <nema_vg_draw_path+0x92c>
 8018d78:	ed98 6a00 	vldr	s12, [r8]
 8018d7c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8018d80:	f04f 0800 	mov.w	r8, #0
 8018d84:	ee26 6a27 	vmul.f32	s12, s12, s15
 8018d88:	e462      	b.n	8018650 <nema_vg_draw_path+0x2a0>
 8018d8a:	f240 5201 	movw	r2, #1281	@ 0x501
 8018d8e:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8018d90:	b283      	uxth	r3, r0
 8018d92:	4293      	cmp	r3, r2
 8018d94:	d03a      	beq.n	8018e0c <nema_vg_draw_path+0xa5c>
 8018d96:	f04f 33ff 	mov.w	r3, #4294967295
 8018d9a:	f040 7080 	orr.w	r0, r0, #16777216	@ 0x1000000
 8018d9e:	461a      	mov	r2, r3
 8018da0:	2100      	movs	r1, #0
 8018da2:	f005 f905 	bl	801dfb0 <nema_set_blend>
 8018da6:	f8db 0000 	ldr.w	r0, [fp]
 8018daa:	f7f9 fabb 	bl	8012324 <nema_set_raster_color>
 8018dae:	f899 3000 	ldrb.w	r3, [r9]
 8018db2:	4d64      	ldr	r5, [pc, #400]	@ (8018f44 <nema_vg_draw_path+0xb94>)
 8018db4:	702b      	strb	r3, [r5, #0]
 8018db6:	2b00      	cmp	r3, #0
 8018db8:	d14b      	bne.n	8018e52 <nema_vg_draw_path+0xaa2>
 8018dba:	6833      	ldr	r3, [r6, #0]
 8018dbc:	4620      	mov	r0, r4
 8018dbe:	b9e3      	cbnz	r3, 8018dfa <nema_vg_draw_path+0xa4a>
 8018dc0:	f7fa fc62 	bl	8013688 <stroke_thin_path>
 8018dc4:	4604      	mov	r4, r0
 8018dc6:	b9e8      	cbnz	r0, 8018e04 <nema_vg_draw_path+0xa54>
 8018dc8:	782b      	ldrb	r3, [r5, #0]
 8018dca:	2b00      	cmp	r3, #0
 8018dcc:	f43f ab28 	beq.w	8018420 <nema_vg_draw_path+0x70>
 8018dd0:	2101      	movs	r1, #1
 8018dd2:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8018dd6:	f004 ffc9 	bl	801dd6c <nema_cl_add_cmd>
 8018dda:	2300      	movs	r3, #0
 8018ddc:	782a      	ldrb	r2, [r5, #0]
 8018dde:	461c      	mov	r4, r3
 8018de0:	702b      	strb	r3, [r5, #0]
 8018de2:	f889 2000 	strb.w	r2, [r9]
 8018de6:	f7ff bbc0 	b.w	801856a <nema_vg_draw_path+0x1ba>
 8018dea:	eeb0 8a47 	vmov.f32	s16, s14
 8018dee:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018df2:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018df6:	f7ff bb92 	b.w	801851e <nema_vg_draw_path+0x16e>
 8018dfa:	f7fb fc09 	bl	8014610 <stroke_path>
 8018dfe:	4604      	mov	r4, r0
 8018e00:	2800      	cmp	r0, #0
 8018e02:	d0e1      	beq.n	8018dc8 <nema_vg_draw_path+0xa18>
 8018e04:	f003 fdfe 	bl	801ca04 <nema_vg_set_error>
 8018e08:	4620      	mov	r0, r4
 8018e0a:	e579      	b.n	8018900 <nema_vg_draw_path+0x550>
 8018e0c:	2004      	movs	r0, #4
 8018e0e:	f004 ff51 	bl	801dcb4 <nema_cl_get_space>
 8018e12:	2800      	cmp	r0, #0
 8018e14:	d050      	beq.n	8018eb8 <nema_vg_draw_path+0xb08>
 8018e16:	f44f 7ce8 	mov.w	ip, #464	@ 0x1d0
 8018e1a:	f44f 778e 	mov.w	r7, #284	@ 0x11c
 8018e1e:	f44f 7596 	mov.w	r5, #300	@ 0x12c
 8018e22:	f44f 718c 	mov.w	r1, #280	@ 0x118
 8018e26:	f04f 4210 	mov.w	r2, #2415919104	@ 0x90000000
 8018e2a:	f8db 3000 	ldr.w	r3, [fp]
 8018e2e:	e9c0 c800 	strd	ip, r8, [r0]
 8018e32:	6143      	str	r3, [r0, #20]
 8018e34:	4b44      	ldr	r3, [pc, #272]	@ (8018f48 <nema_vg_draw_path+0xb98>)
 8018e36:	6087      	str	r7, [r0, #8]
 8018e38:	6105      	str	r5, [r0, #16]
 8018e3a:	e9c0 1206 	strd	r1, r2, [r0, #24]
 8018e3e:	60c3      	str	r3, [r0, #12]
 8018e40:	e7b5      	b.n	8018dae <nema_vg_draw_path+0x9fe>
 8018e42:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 8018e46:	f003 fddd 	bl	801ca04 <nema_vg_set_error>
 8018e4a:	f44f 4480 	mov.w	r4, #16384	@ 0x4000
 8018e4e:	f7ff bb8c 	b.w	801856a <nema_vg_draw_path+0x1ba>
 8018e52:	2007      	movs	r0, #7
 8018e54:	f004 ff2e 	bl	801dcb4 <nema_cl_get_space>
 8018e58:	b318      	cbz	r0, 8018ea2 <nema_vg_draw_path+0xaf2>
 8018e5a:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8018e5e:	6002      	str	r2, [r0, #0]
 8018e60:	f44f 725a 	mov.w	r2, #872	@ 0x368
 8018e64:	4b39      	ldr	r3, [pc, #228]	@ (8018f4c <nema_vg_draw_path+0xb9c>)
 8018e66:	6959      	ldr	r1, [r3, #20]
 8018e68:	6082      	str	r2, [r0, #8]
 8018e6a:	f44f 7258 	mov.w	r2, #864	@ 0x360
 8018e6e:	6041      	str	r1, [r0, #4]
 8018e70:	6899      	ldr	r1, [r3, #8]
 8018e72:	6102      	str	r2, [r0, #16]
 8018e74:	f44f 7259 	mov.w	r2, #868	@ 0x364
 8018e78:	60c1      	str	r1, [r0, #12]
 8018e7a:	6819      	ldr	r1, [r3, #0]
 8018e7c:	6182      	str	r2, [r0, #24]
 8018e7e:	f44f 725b 	mov.w	r2, #876	@ 0x36c
 8018e82:	6141      	str	r1, [r0, #20]
 8018e84:	6859      	ldr	r1, [r3, #4]
 8018e86:	6202      	str	r2, [r0, #32]
 8018e88:	f44f 725c 	mov.w	r2, #880	@ 0x370
 8018e8c:	61c1      	str	r1, [r0, #28]
 8018e8e:	68d9      	ldr	r1, [r3, #12]
 8018e90:	6282      	str	r2, [r0, #40]	@ 0x28
 8018e92:	6241      	str	r1, [r0, #36]	@ 0x24
 8018e94:	6919      	ldr	r1, [r3, #16]
 8018e96:	f44f 7262 	mov.w	r2, #904	@ 0x388
 8018e9a:	2300      	movs	r3, #0
 8018e9c:	e9c0 230c 	strd	r2, r3, [r0, #48]	@ 0x30
 8018ea0:	62c1      	str	r1, [r0, #44]	@ 0x2c
 8018ea2:	2300      	movs	r3, #0
 8018ea4:	f889 3000 	strb.w	r3, [r9]
 8018ea8:	e787      	b.n	8018dba <nema_vg_draw_path+0xa0a>
 8018eaa:	2000      	movs	r0, #0
 8018eac:	f7f9 f866 	bl	8011f7c <nema_enable_tiling>
 8018eb0:	2203      	movs	r2, #3
 8018eb2:	683b      	ldr	r3, [r7, #0]
 8018eb4:	77da      	strb	r2, [r3, #31]
 8018eb6:	e567      	b.n	8018988 <nema_vg_draw_path+0x5d8>
 8018eb8:	f44f 7400 	mov.w	r4, #512	@ 0x200
 8018ebc:	4620      	mov	r0, r4
 8018ebe:	e51f      	b.n	8018900 <nema_vg_draw_path+0x550>
 8018ec0:	e9cd 0204 	strd	r0, r2, [sp, #16]
 8018ec4:	9103      	str	r1, [sp, #12]
 8018ec6:	ed8d 6a02 	vstr	s12, [sp, #8]
 8018eca:	9301      	str	r3, [sp, #4]
 8018ecc:	f018 f978 	bl	80311c0 <sqrtf>
 8018ed0:	e9dd 0204 	ldrd	r0, r2, [sp, #16]
 8018ed4:	9903      	ldr	r1, [sp, #12]
 8018ed6:	ed9d 6a02 	vldr	s12, [sp, #8]
 8018eda:	9b01      	ldr	r3, [sp, #4]
 8018edc:	e5bd      	b.n	8018a5a <nema_vg_draw_path+0x6aa>
 8018ede:	e9cd 0204 	strd	r0, r2, [sp, #16]
 8018ee2:	9103      	str	r1, [sp, #12]
 8018ee4:	ed8d 6a02 	vstr	s12, [sp, #8]
 8018ee8:	9301      	str	r3, [sp, #4]
 8018eea:	f018 f969 	bl	80311c0 <sqrtf>
 8018eee:	e9dd 0204 	ldrd	r0, r2, [sp, #16]
 8018ef2:	9903      	ldr	r1, [sp, #12]
 8018ef4:	ed9d 6a02 	vldr	s12, [sp, #8]
 8018ef8:	9b01      	ldr	r3, [sp, #4]
 8018efa:	e59c      	b.n	8018a36 <nema_vg_draw_path+0x686>
 8018efc:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018f00:	9001      	str	r0, [sp, #4]
 8018f02:	f018 f95d 	bl	80311c0 <sqrtf>
 8018f06:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018f0a:	9801      	ldr	r0, [sp, #4]
 8018f0c:	e600      	b.n	8018b10 <nema_vg_draw_path+0x760>
 8018f0e:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018f12:	9001      	str	r0, [sp, #4]
 8018f14:	f018 f954 	bl	80311c0 <sqrtf>
 8018f18:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018f1c:	9801      	ldr	r0, [sp, #4]
 8018f1e:	e5e5      	b.n	8018aec <nema_vg_draw_path+0x73c>
 8018f20:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018f24:	9001      	str	r0, [sp, #4]
 8018f26:	f018 f94b 	bl	80311c0 <sqrtf>
 8018f2a:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018f2e:	9801      	ldr	r0, [sp, #4]
 8018f30:	e69b      	b.n	8018c6a <nema_vg_draw_path+0x8ba>
 8018f32:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018f36:	9001      	str	r0, [sp, #4]
 8018f38:	f018 f942 	bl	80311c0 <sqrtf>
 8018f3c:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018f40:	9801      	ldr	r0, [sp, #4]
 8018f42:	e680      	b.n	8018c46 <nema_vg_draw_path+0x896>
 8018f44:	20082fb4 	.word	0x20082fb4
 8018f48:	941fb414 	.word	0x941fb414
 8018f4c:	20082fec 	.word	0x20082fec

08018f50 <nema_vg_init_stencil_pool>:
 8018f50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018f52:	460f      	mov	r7, r1
 8018f54:	4606      	mov	r6, r0
 8018f56:	b091      	sub	sp, #68	@ 0x44
 8018f58:	ac04      	add	r4, sp, #16
 8018f5a:	4613      	mov	r3, r2
 8018f5c:	4601      	mov	r1, r0
 8018f5e:	463a      	mov	r2, r7
 8018f60:	4620      	mov	r0, r4
 8018f62:	f003 fcc1 	bl	801c8e8 <stencil_buffer_create>
 8018f66:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8018f6a:	ad0c      	add	r5, sp, #48	@ 0x30
 8018f6c:	ac08      	add	r4, sp, #32
 8018f6e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8018f72:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8018f76:	f003 fc67 	bl	801c848 <context_reset>
 8018f7a:	2216      	movs	r2, #22
 8018f7c:	2101      	movs	r1, #1
 8018f7e:	4821      	ldr	r0, [pc, #132]	@ (8019004 <nema_vg_init_stencil_pool+0xb4>)
 8018f80:	f7f9 f952 	bl	8012228 <nema_load_frag_shader>
 8018f84:	2217      	movs	r2, #23
 8018f86:	2101      	movs	r1, #1
 8018f88:	481f      	ldr	r0, [pc, #124]	@ (8019008 <nema_vg_init_stencil_pool+0xb8>)
 8018f8a:	f7f9 f94d 	bl	8012228 <nema_load_frag_shader>
 8018f8e:	2101      	movs	r1, #1
 8018f90:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8018f94:	f004 feea 	bl	801dd6c <nema_cl_add_cmd>
 8018f98:	2215      	movs	r2, #21
 8018f9a:	2101      	movs	r1, #1
 8018f9c:	481b      	ldr	r0, [pc, #108]	@ (801900c <nema_vg_init_stencil_pool+0xbc>)
 8018f9e:	f7f9 f943 	bl	8012228 <nema_load_frag_shader>
 8018fa2:	2214      	movs	r2, #20
 8018fa4:	2101      	movs	r1, #1
 8018fa6:	481a      	ldr	r0, [pc, #104]	@ (8019010 <nema_vg_init_stencil_pool+0xc0>)
 8018fa8:	f7f9 f93e 	bl	8012228 <nema_load_frag_shader>
 8018fac:	4c19      	ldr	r4, [pc, #100]	@ (8019014 <nema_vg_init_stencil_pool+0xc4>)
 8018fae:	4b1a      	ldr	r3, [pc, #104]	@ (8019018 <nema_vg_init_stencil_pool+0xc8>)
 8018fb0:	a802      	add	r0, sp, #8
 8018fb2:	2213      	movs	r2, #19
 8018fb4:	2101      	movs	r1, #1
 8018fb6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018fba:	f7f9 f935 	bl	8012228 <nema_load_frag_shader>
 8018fbe:	ab10      	add	r3, sp, #64	@ 0x40
 8018fc0:	e913 0003 	ldmdb	r3, {r0, r1}
 8018fc4:	e895 000c 	ldmia.w	r5, {r2, r3}
 8018fc8:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018fcc:	4639      	mov	r1, r7
 8018fce:	4630      	mov	r0, r6
 8018fd0:	f003 fc9e 	bl	801c910 <stencil_buffer_set>
 8018fd4:	f003 fcd8 	bl	801c988 <lut_buffer_create>
 8018fd8:	f004 fad4 	bl	801d584 <tsvg_init>
 8018fdc:	4639      	mov	r1, r7
 8018fde:	4630      	mov	r0, r6
 8018fe0:	f004 fac6 	bl	801d570 <set_tsvg_text_max_size>
 8018fe4:	f003 fc7c 	bl	801c8e0 <nema_vg_get_context>
 8018fe8:	4c0c      	ldr	r4, [pc, #48]	@ (801901c <nema_vg_init_stencil_pool+0xcc>)
 8018fea:	6020      	str	r0, [r4, #0]
 8018fec:	f003 fcc6 	bl	801c97c <nema_vg_get_stencil>
 8018ff0:	6822      	ldr	r2, [r4, #0]
 8018ff2:	490b      	ldr	r1, [pc, #44]	@ (8019020 <nema_vg_init_stencil_pool+0xd0>)
 8018ff4:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8018ff6:	6008      	str	r0, [r1, #0]
 8018ff8:	f043 0320 	orr.w	r3, r3, #32
 8018ffc:	6313      	str	r3, [r2, #48]	@ 0x30
 8018ffe:	b011      	add	sp, #68	@ 0x44
 8019000:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019002:	bf00      	nop
 8019004:	08035cf0 	.word	0x08035cf0
 8019008:	08035d08 	.word	0x08035d08
 801900c:	08035d00 	.word	0x08035d00
 8019010:	08035cf8 	.word	0x08035cf8
 8019014:	0a980002 	.word	0x0a980002
 8019018:	8081a046 	.word	0x8081a046
 801901c:	20082f68 	.word	0x20082f68
 8019020:	20083010 	.word	0x20083010

08019024 <points_coincide>:
 8019024:	edd0 7a00 	vldr	s15, [r0]
 8019028:	ed91 7a00 	vldr	s14, [r1]
 801902c:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8019030:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019034:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019038:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801903c:	bf48      	it	mi
 801903e:	eef1 6a66 	vnegmi.f32	s13, s13
 8019042:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019046:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801904a:	bf4c      	ite	mi
 801904c:	eeb1 6a67 	vnegmi.f32	s12, s15
 8019050:	eeb0 6a67 	vmovpl.f32	s12, s15
 8019054:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019058:	d439      	bmi.n	80190ce <points_coincide+0xaa>
 801905a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801905e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019062:	dc3b      	bgt.n	80190dc <points_coincide+0xb8>
 8019064:	eddf 7a2e 	vldr	s15, [pc, #184]	@ 8019120 <points_coincide+0xfc>
 8019068:	ee67 7a27 	vmul.f32	s15, s14, s15
 801906c:	eef4 6ae7 	vcmpe.f32	s13, s15
 8019070:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019074:	d840      	bhi.n	80190f8 <points_coincide+0xd4>
 8019076:	edd0 7a01 	vldr	s15, [r0, #4]
 801907a:	ed91 7a01 	vldr	s14, [r1, #4]
 801907e:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8019082:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019086:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801908a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801908e:	bf48      	it	mi
 8019090:	eef1 6a66 	vnegmi.f32	s13, s13
 8019094:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019098:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801909c:	bf4c      	ite	mi
 801909e:	eeb1 6a67 	vnegmi.f32	s12, s15
 80190a2:	eeb0 6a67 	vmovpl.f32	s12, s15
 80190a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190aa:	d427      	bmi.n	80190fc <points_coincide+0xd8>
 80190ac:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80190b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190b4:	dc29      	bgt.n	801910a <points_coincide+0xe6>
 80190b6:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8019120 <points_coincide+0xfc>
 80190ba:	ee67 7a27 	vmul.f32	s15, s14, s15
 80190be:	eef4 6ae7 	vcmpe.f32	s13, s15
 80190c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190c6:	bf94      	ite	ls
 80190c8:	2001      	movls	r0, #1
 80190ca:	2000      	movhi	r0, #0
 80190cc:	4770      	bx	lr
 80190ce:	eeb1 7a47 	vneg.f32	s14, s14
 80190d2:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80190d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190da:	d5c3      	bpl.n	8019064 <points_coincide+0x40>
 80190dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80190e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190e4:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8019120 <points_coincide+0xfc>
 80190e8:	d5be      	bpl.n	8019068 <points_coincide+0x44>
 80190ea:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 80190ee:	eef4 6ae7 	vcmpe.f32	s13, s15
 80190f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190f6:	d9be      	bls.n	8019076 <points_coincide+0x52>
 80190f8:	2000      	movs	r0, #0
 80190fa:	4770      	bx	lr
 80190fc:	eeb1 7a47 	vneg.f32	s14, s14
 8019100:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019104:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019108:	d5d5      	bpl.n	80190b6 <points_coincide+0x92>
 801910a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801910e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019112:	ed9f 7a03 	vldr	s14, [pc, #12]	@ 8019120 <points_coincide+0xfc>
 8019116:	d5d0      	bpl.n	80190ba <points_coincide+0x96>
 8019118:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 801911c:	e7cf      	b.n	80190be <points_coincide+0x9a>
 801911e:	bf00      	nop
 8019120:	3727c5ac 	.word	0x3727c5ac

08019124 <add_last_point>:
 8019124:	b4f0      	push	{r4, r5, r6, r7}
 8019126:	4b2b      	ldr	r3, [pc, #172]	@ (80191d4 <add_last_point+0xb0>)
 8019128:	b082      	sub	sp, #8
 801912a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801912c:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 8019130:	d022      	beq.n	8019178 <add_last_point+0x54>
 8019132:	f240 11ff 	movw	r1, #511	@ 0x1ff
 8019136:	428a      	cmp	r2, r1
 8019138:	d029      	beq.n	801918e <add_last_point+0x6a>
 801913a:	4c27      	ldr	r4, [pc, #156]	@ (80191d8 <add_last_point+0xb4>)
 801913c:	695a      	ldr	r2, [r3, #20]
 801913e:	6919      	ldr	r1, [r3, #16]
 8019140:	6826      	ldr	r6, [r4, #0]
 8019142:	1c57      	adds	r7, r2, #1
 8019144:	1c8d      	adds	r5, r1, #2
 8019146:	bb46      	cbnz	r6, 801919a <add_last_point+0x76>
 8019148:	681e      	ldr	r6, [r3, #0]
 801914a:	4296      	cmp	r6, r2
 801914c:	d936      	bls.n	80191bc <add_last_point+0x98>
 801914e:	685e      	ldr	r6, [r3, #4]
 8019150:	f040 0002 	orr.w	r0, r0, #2
 8019154:	615f      	str	r7, [r3, #20]
 8019156:	689f      	ldr	r7, [r3, #8]
 8019158:	54b0      	strb	r0, [r6, r2]
 801915a:	1c4a      	adds	r2, r1, #1
 801915c:	42ba      	cmp	r2, r7
 801915e:	d224      	bcs.n	80191aa <add_last_point+0x86>
 8019160:	2000      	movs	r0, #0
 8019162:	68da      	ldr	r2, [r3, #12]
 8019164:	611d      	str	r5, [r3, #16]
 8019166:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 801916a:	ed81 0a00 	vstr	s0, [r1]
 801916e:	edc1 0a01 	vstr	s1, [r1, #4]
 8019172:	b002      	add	sp, #8
 8019174:	bcf0      	pop	{r4, r5, r6, r7}
 8019176:	4770      	bx	lr
 8019178:	4917      	ldr	r1, [pc, #92]	@ (80191d8 <add_last_point+0xb4>)
 801917a:	695a      	ldr	r2, [r3, #20]
 801917c:	680d      	ldr	r5, [r1, #0]
 801917e:	1c54      	adds	r4, r2, #1
 8019180:	b98d      	cbnz	r5, 80191a6 <add_last_point+0x82>
 8019182:	681d      	ldr	r5, [r3, #0]
 8019184:	4295      	cmp	r5, r2
 8019186:	d91f      	bls.n	80191c8 <add_last_point+0xa4>
 8019188:	6859      	ldr	r1, [r3, #4]
 801918a:	615c      	str	r4, [r3, #20]
 801918c:	5488      	strb	r0, [r1, r2]
 801918e:	2200      	movs	r2, #0
 8019190:	2000      	movs	r0, #0
 8019192:	625a      	str	r2, [r3, #36]	@ 0x24
 8019194:	b002      	add	sp, #8
 8019196:	bcf0      	pop	{r4, r5, r6, r7}
 8019198:	4770      	bx	lr
 801919a:	615f      	str	r7, [r3, #20]
 801919c:	2000      	movs	r0, #0
 801919e:	611d      	str	r5, [r3, #16]
 80191a0:	b002      	add	sp, #8
 80191a2:	bcf0      	pop	{r4, r5, r6, r7}
 80191a4:	4770      	bx	lr
 80191a6:	615c      	str	r4, [r3, #20]
 80191a8:	e7f1      	b.n	801918e <add_last_point+0x6a>
 80191aa:	2102      	movs	r1, #2
 80191ac:	2201      	movs	r2, #1
 80191ae:	2000      	movs	r0, #0
 80191b0:	611d      	str	r5, [r3, #16]
 80191b2:	6299      	str	r1, [r3, #40]	@ 0x28
 80191b4:	6022      	str	r2, [r4, #0]
 80191b6:	b002      	add	sp, #8
 80191b8:	bcf0      	pop	{r4, r5, r6, r7}
 80191ba:	4770      	bx	lr
 80191bc:	2102      	movs	r1, #2
 80191be:	2201      	movs	r2, #1
 80191c0:	615f      	str	r7, [r3, #20]
 80191c2:	6299      	str	r1, [r3, #40]	@ 0x28
 80191c4:	6022      	str	r2, [r4, #0]
 80191c6:	e7e9      	b.n	801919c <add_last_point+0x78>
 80191c8:	2002      	movs	r0, #2
 80191ca:	2201      	movs	r2, #1
 80191cc:	615c      	str	r4, [r3, #20]
 80191ce:	6298      	str	r0, [r3, #40]	@ 0x28
 80191d0:	600a      	str	r2, [r1, #0]
 80191d2:	e7dc      	b.n	801918e <add_last_point+0x6a>
 80191d4:	20083110 	.word	0x20083110
 80191d8:	20083108 	.word	0x20083108

080191dc <calc_move_geometry>:
 80191dc:	b4f0      	push	{r4, r5, r6, r7}
 80191de:	4b2b      	ldr	r3, [pc, #172]	@ (801928c <calc_move_geometry+0xb0>)
 80191e0:	482b      	ldr	r0, [pc, #172]	@ (8019290 <calc_move_geometry+0xb4>)
 80191e2:	ed93 7a00 	vldr	s14, [r3]
 80191e6:	eeb4 0a47 	vcmp.f32	s0, s14
 80191ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80191ee:	4b29      	ldr	r3, [pc, #164]	@ (8019294 <calc_move_geometry+0xb8>)
 80191f0:	bf48      	it	mi
 80191f2:	eeb0 0a47 	vmovmi.f32	s0, s14
 80191f6:	edd3 7a00 	vldr	s15, [r3]
 80191fa:	eef4 7a40 	vcmp.f32	s15, s0
 80191fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019202:	eef4 0a47 	vcmp.f32	s1, s14
 8019206:	bf48      	it	mi
 8019208:	eeb0 0a67 	vmovmi.f32	s0, s15
 801920c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019210:	bf48      	it	mi
 8019212:	eef0 0a47 	vmovmi.f32	s1, s14
 8019216:	eef4 7a60 	vcmp.f32	s15, s1
 801921a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801921e:	4b1e      	ldr	r3, [pc, #120]	@ (8019298 <calc_move_geometry+0xbc>)
 8019220:	6806      	ldr	r6, [r0, #0]
 8019222:	e9d3 1204 	ldrd	r1, r2, [r3, #16]
 8019226:	b082      	sub	sp, #8
 8019228:	bf48      	it	mi
 801922a:	eef0 0a67 	vmovmi.f32	s1, s15
 801922e:	1c55      	adds	r5, r2, #1
 8019230:	1c8c      	adds	r4, r1, #2
 8019232:	b9b6      	cbnz	r6, 8019262 <calc_move_geometry+0x86>
 8019234:	681e      	ldr	r6, [r3, #0]
 8019236:	4296      	cmp	r6, r2
 8019238:	d921      	bls.n	801927e <calc_move_geometry+0xa2>
 801923a:	2601      	movs	r6, #1
 801923c:	685f      	ldr	r7, [r3, #4]
 801923e:	615d      	str	r5, [r3, #20]
 8019240:	689d      	ldr	r5, [r3, #8]
 8019242:	54be      	strb	r6, [r7, r2]
 8019244:	198a      	adds	r2, r1, r6
 8019246:	42aa      	cmp	r2, r5
 8019248:	d211      	bcs.n	801926e <calc_move_geometry+0x92>
 801924a:	2000      	movs	r0, #0
 801924c:	68da      	ldr	r2, [r3, #12]
 801924e:	611c      	str	r4, [r3, #16]
 8019250:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 8019254:	ed81 0a00 	vstr	s0, [r1]
 8019258:	edc1 0a01 	vstr	s1, [r1, #4]
 801925c:	b002      	add	sp, #8
 801925e:	bcf0      	pop	{r4, r5, r6, r7}
 8019260:	4770      	bx	lr
 8019262:	615d      	str	r5, [r3, #20]
 8019264:	2000      	movs	r0, #0
 8019266:	611c      	str	r4, [r3, #16]
 8019268:	b002      	add	sp, #8
 801926a:	bcf0      	pop	{r4, r5, r6, r7}
 801926c:	4770      	bx	lr
 801926e:	2202      	movs	r2, #2
 8019270:	6006      	str	r6, [r0, #0]
 8019272:	2000      	movs	r0, #0
 8019274:	611c      	str	r4, [r3, #16]
 8019276:	629a      	str	r2, [r3, #40]	@ 0x28
 8019278:	b002      	add	sp, #8
 801927a:	bcf0      	pop	{r4, r5, r6, r7}
 801927c:	4770      	bx	lr
 801927e:	2102      	movs	r1, #2
 8019280:	2201      	movs	r2, #1
 8019282:	615d      	str	r5, [r3, #20]
 8019284:	6299      	str	r1, [r3, #40]	@ 0x28
 8019286:	6002      	str	r2, [r0, #0]
 8019288:	e7ec      	b.n	8019264 <calc_move_geometry+0x88>
 801928a:	bf00      	nop
 801928c:	20000144 	.word	0x20000144
 8019290:	20083108 	.word	0x20083108
 8019294:	20000140 	.word	0x20000140
 8019298:	20083110 	.word	0x20083110

0801929c <calc_line_geometry>:
 801929c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80192a0:	ed2d 8b08 	vpush	{d8-d11}
 80192a4:	4b6e      	ldr	r3, [pc, #440]	@ (8019460 <calc_line_geometry+0x1c4>)
 80192a6:	b097      	sub	sp, #92	@ 0x5c
 80192a8:	ed93 5a00 	vldr	s10, [r3]
 80192ac:	eeb4 5ac0 	vcmpe.f32	s10, s0
 80192b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192b4:	4b6b      	ldr	r3, [pc, #428]	@ (8019464 <calc_line_geometry+0x1c8>)
 80192b6:	ed8d 0a02 	vstr	s0, [sp, #8]
 80192ba:	edcd 0a03 	vstr	s1, [sp, #12]
 80192be:	ed8d 1a00 	vstr	s2, [sp]
 80192c2:	edcd 1a01 	vstr	s3, [sp, #4]
 80192c6:	edd3 5a00 	vldr	s11, [r3]
 80192ca:	d405      	bmi.n	80192d8 <calc_line_geometry+0x3c>
 80192cc:	eeb4 5ae0 	vcmpe.f32	s10, s1
 80192d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192d4:	f140 824a 	bpl.w	801976c <calc_line_geometry+0x4d0>
 80192d8:	eeb4 5ac1 	vcmpe.f32	s10, s2
 80192dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192e0:	f100 80ca 	bmi.w	8019478 <calc_line_geometry+0x1dc>
 80192e4:	eeb4 5ae1 	vcmpe.f32	s10, s3
 80192e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192ec:	f100 80c4 	bmi.w	8019478 <calc_line_geometry+0x1dc>
 80192f0:	2201      	movs	r2, #1
 80192f2:	eeb4 1ae5 	vcmpe.f32	s2, s11
 80192f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192fa:	f100 824f 	bmi.w	801979c <calc_line_geometry+0x500>
 80192fe:	eef4 1ae5 	vcmpe.f32	s3, s11
 8019302:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019306:	f100 8249 	bmi.w	801979c <calc_line_geometry+0x500>
 801930a:	2400      	movs	r4, #0
 801930c:	ab12      	add	r3, sp, #72	@ 0x48
 801930e:	9412      	str	r4, [sp, #72]	@ 0x48
 8019310:	e9c3 4401 	strd	r4, r4, [r3, #4]
 8019314:	60dc      	str	r4, [r3, #12]
 8019316:	2a00      	cmp	r2, #0
 8019318:	f000 83de 	beq.w	8019ad8 <calc_line_geometry+0x83c>
 801931c:	ee31 3ae0 	vsub.f32	s6, s3, s1
 8019320:	ee70 9a65 	vsub.f32	s19, s0, s11
 8019324:	ee71 2a40 	vsub.f32	s5, s2, s0
 8019328:	ee30 8ae5 	vsub.f32	s16, s1, s11
 801932c:	ee35 2a65 	vsub.f32	s4, s10, s11
 8019330:	eef1 4a43 	vneg.f32	s9, s6
 8019334:	ee75 5ae5 	vsub.f32	s11, s11, s11
 8019338:	ee24 baa9 	vmul.f32	s22, s9, s19
 801933c:	ee62 8a88 	vmul.f32	s17, s5, s16
 8019340:	ee62 ba43 	vnmul.f32	s23, s4, s6
 8019344:	ee62 3aa5 	vmul.f32	s7, s5, s11
 8019348:	ee7b aa28 	vadd.f32	s21, s22, s17
 801934c:	ee73 3aab 	vadd.f32	s7, s7, s23
 8019350:	eeca 7aa3 	vdiv.f32	s15, s21, s7
 8019354:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019358:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801935c:	aa02      	add	r2, sp, #8
 801935e:	ad0a      	add	r5, sp, #40	@ 0x28
 8019360:	e892 0003 	ldmia.w	r2, {r0, r1}
 8019364:	ed8d 1a0c 	vstr	s2, [sp, #48]	@ 0x30
 8019368:	edcd 1a0d 	vstr	s3, [sp, #52]	@ 0x34
 801936c:	e885 0003 	stmia.w	r5, {r0, r1}
 8019370:	db07      	blt.n	8019382 <calc_line_geometry+0xe6>
 8019372:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019376:	eef4 7ac7 	vcmpe.f32	s15, s14
 801937a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801937e:	f240 85c9 	bls.w	8019f14 <calc_line_geometry+0xc78>
 8019382:	ed9f 4a3b 	vldr	s8, [pc, #236]	@ 8019470 <calc_line_geometry+0x1d4>
 8019386:	4622      	mov	r2, r4
 8019388:	eeb0 aa44 	vmov.f32	s20, s8
 801938c:	ee35 9a45 	vsub.f32	s18, s10, s10
 8019390:	ee70 7ac5 	vsub.f32	s15, s1, s10
 8019394:	ee62 6a89 	vmul.f32	s13, s5, s18
 8019398:	ee62 3aa7 	vmul.f32	s7, s5, s15
 801939c:	ee76 6aab 	vadd.f32	s13, s13, s23
 80193a0:	ee73 3a8b 	vadd.f32	s7, s7, s22
 80193a4:	ee83 7aa6 	vdiv.f32	s14, s7, s13
 80193a8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80193ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193b0:	db07      	blt.n	80193c2 <calc_line_geometry+0x126>
 80193b2:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80193b6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80193ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193be:	f240 8574 	bls.w	8019eaa <calc_line_geometry+0xc0e>
 80193c2:	ee62 3a82 	vmul.f32	s7, s5, s4
 80193c6:	ee25 4ac3 	vnmul.f32	s8, s11, s6
 80193ca:	ee34 4a23 	vadd.f32	s8, s8, s7
 80193ce:	eeca 7a84 	vdiv.f32	s15, s21, s8
 80193d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80193d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193da:	db07      	blt.n	80193ec <calc_line_geometry+0x150>
 80193dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80193e0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80193e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193e8:	f240 8527 	bls.w	8019e3a <calc_line_geometry+0xb9e>
 80193ec:	ee30 5a45 	vsub.f32	s10, s0, s10
 80193f0:	ee69 6a43 	vnmul.f32	s13, s18, s6
 80193f4:	ee64 4a85 	vmul.f32	s9, s9, s10
 80193f8:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80193fc:	ee74 4aa8 	vadd.f32	s9, s9, s17
 8019400:	eec4 7aa6 	vdiv.f32	s15, s9, s13
 8019404:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019408:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801940c:	db07      	blt.n	801941e <calc_line_geometry+0x182>
 801940e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019412:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019416:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801941a:	f240 84e4 	bls.w	8019de6 <calc_line_geometry+0xb4a>
 801941e:	4d12      	ldr	r5, [pc, #72]	@ (8019468 <calc_line_geometry+0x1cc>)
 8019420:	4b12      	ldr	r3, [pc, #72]	@ (801946c <calc_line_geometry+0x1d0>)
 8019422:	6828      	ldr	r0, [r5, #0]
 8019424:	e9d3 4204 	ldrd	r4, r2, [r3, #16]
 8019428:	1c51      	adds	r1, r2, #1
 801942a:	1ca6      	adds	r6, r4, #2
 801942c:	2800      	cmp	r0, #0
 801942e:	f040 8435 	bne.w	8019c9c <calc_line_geometry+0xa00>
 8019432:	6818      	ldr	r0, [r3, #0]
 8019434:	4290      	cmp	r0, r2
 8019436:	f240 848f 	bls.w	8019d58 <calc_line_geometry+0xabc>
 801943a:	2082      	movs	r0, #130	@ 0x82
 801943c:	685f      	ldr	r7, [r3, #4]
 801943e:	6159      	str	r1, [r3, #20]
 8019440:	54b8      	strb	r0, [r7, r2]
 8019442:	689a      	ldr	r2, [r3, #8]
 8019444:	1c61      	adds	r1, r4, #1
 8019446:	4291      	cmp	r1, r2
 8019448:	f080 8480 	bcs.w	8019d4c <calc_line_geometry+0xab0>
 801944c:	68da      	ldr	r2, [r3, #12]
 801944e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019450:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8019452:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8019456:	611e      	str	r6, [r3, #16]
 8019458:	6010      	str	r0, [r2, #0]
 801945a:	6051      	str	r1, [r2, #4]
 801945c:	f000 bc20 	b.w	8019ca0 <calc_line_geometry+0xa04>
 8019460:	20000140 	.word	0x20000140
 8019464:	20000144 	.word	0x20000144
 8019468:	20083108 	.word	0x20083108
 801946c:	20083110 	.word	0x20083110
 8019470:	00000000 	.word	0x00000000
 8019474:	3727c5ac 	.word	0x3727c5ac
 8019478:	ee35 2a65 	vsub.f32	s4, s10, s11
 801947c:	2200      	movs	r2, #0
 801947e:	eef1 3a42 	vneg.f32	s7, s4
 8019482:	ee35 3ae5 	vsub.f32	s6, s11, s11
 8019486:	ab12      	add	r3, sp, #72	@ 0x48
 8019488:	e9c3 2201 	strd	r2, r2, [r3, #4]
 801948c:	9212      	str	r2, [sp, #72]	@ 0x48
 801948e:	60da      	str	r2, [r3, #12]
 8019490:	ee70 2ae1 	vsub.f32	s5, s1, s3
 8019494:	ee70 4a41 	vsub.f32	s9, s0, s2
 8019498:	ee31 aa65 	vsub.f32	s20, s2, s11
 801949c:	eeb1 4a62 	vneg.f32	s8, s5
 80194a0:	ee71 8ae5 	vsub.f32	s17, s3, s11
 80194a4:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80194a8:	ee64 ba0a 	vmul.f32	s23, s8, s20
 80194ac:	ee64 9aa8 	vmul.f32	s19, s9, s17
 80194b0:	ee64 7a83 	vmul.f32	s15, s9, s6
 80194b4:	ee3b baa9 	vadd.f32	s22, s23, s19
 80194b8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80194bc:	ee8b 7a27 	vdiv.f32	s14, s22, s15
 80194c0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80194c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80194c8:	aa02      	add	r2, sp, #8
 80194ca:	ac10      	add	r4, sp, #64	@ 0x40
 80194cc:	e892 0003 	ldmia.w	r2, {r0, r1}
 80194d0:	ed8d 1a0e 	vstr	s2, [sp, #56]	@ 0x38
 80194d4:	edcd 1a0f 	vstr	s3, [sp, #60]	@ 0x3c
 80194d8:	e884 0003 	stmia.w	r4, {r0, r1}
 80194dc:	db07      	blt.n	80194ee <calc_line_geometry+0x252>
 80194de:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80194e2:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80194e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80194ea:	f240 824f 	bls.w	801998c <calc_line_geometry+0x6f0>
 80194ee:	ed1f 8a20 	vldr	s16, [pc, #-128]	@ 8019470 <calc_line_geometry+0x1d4>
 80194f2:	2200      	movs	r2, #0
 80194f4:	eef0 aa48 	vmov.f32	s21, s16
 80194f8:	ee35 9a45 	vsub.f32	s18, s10, s10
 80194fc:	ee71 6ac5 	vsub.f32	s13, s3, s10
 8019500:	ee64 7a89 	vmul.f32	s15, s9, s18
 8019504:	ee24 7aa6 	vmul.f32	s14, s9, s13
 8019508:	ee77 3aa3 	vadd.f32	s7, s15, s7
 801950c:	ee77 7a2b 	vadd.f32	s15, s14, s23
 8019510:	ee87 7aa3 	vdiv.f32	s14, s15, s7
 8019514:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801951c:	db07      	blt.n	801952e <calc_line_geometry+0x292>
 801951e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8019522:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019526:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801952a:	f240 825d 	bls.w	80199e8 <calc_line_geometry+0x74c>
 801952e:	ee64 3a82 	vmul.f32	s7, s9, s4
 8019532:	ee23 7a62 	vnmul.f32	s14, s6, s5
 8019536:	ee37 7a23 	vadd.f32	s14, s14, s7
 801953a:	eecb 7a07 	vdiv.f32	s15, s22, s14
 801953e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019542:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019546:	db07      	blt.n	8019558 <calc_line_geometry+0x2bc>
 8019548:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801954c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8019550:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019554:	f240 81e3 	bls.w	801991e <calc_line_geometry+0x682>
 8019558:	ee31 7a45 	vsub.f32	s14, s2, s10
 801955c:	ee69 7a62 	vnmul.f32	s15, s18, s5
 8019560:	ee24 4a07 	vmul.f32	s8, s8, s14
 8019564:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8019568:	ee34 4a29 	vadd.f32	s8, s8, s19
 801956c:	eec4 6a27 	vdiv.f32	s13, s8, s15
 8019570:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019574:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019578:	db07      	blt.n	801958a <calc_line_geometry+0x2ee>
 801957a:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 801957e:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019586:	f240 826b 	bls.w	8019a60 <calc_line_geometry+0x7c4>
 801958a:	eeb4 0ae5 	vcmpe.f32	s0, s11
 801958e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019592:	bf54      	ite	pl
 8019594:	eef0 7a40 	vmovpl.f32	s15, s0
 8019598:	eef0 7a65 	vmovmi.f32	s15, s11
 801959c:	eeb4 5a67 	vcmp.f32	s10, s15
 80195a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195a4:	eef4 0ae5 	vcmpe.f32	s1, s11
 80195a8:	bf48      	it	mi
 80195aa:	eef0 7a45 	vmovmi.f32	s15, s10
 80195ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195b2:	bf54      	ite	pl
 80195b4:	eef0 6a60 	vmovpl.f32	s13, s1
 80195b8:	eef0 6a65 	vmovmi.f32	s13, s11
 80195bc:	eeb4 5a66 	vcmp.f32	s10, s13
 80195c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195c4:	eeb4 1ae5 	vcmpe.f32	s2, s11
 80195c8:	bf48      	it	mi
 80195ca:	eef0 6a45 	vmovmi.f32	s13, s10
 80195ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195d2:	bf54      	ite	pl
 80195d4:	eeb0 7a41 	vmovpl.f32	s14, s2
 80195d8:	eeb0 7a65 	vmovmi.f32	s14, s11
 80195dc:	eeb4 5a47 	vcmp.f32	s10, s14
 80195e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195e4:	eef4 1ae5 	vcmpe.f32	s3, s11
 80195e8:	bf48      	it	mi
 80195ea:	eeb0 7a45 	vmovmi.f32	s14, s10
 80195ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195f2:	bf58      	it	pl
 80195f4:	eef0 5a61 	vmovpl.f32	s11, s3
 80195f8:	eeb4 5a65 	vcmp.f32	s10, s11
 80195fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019600:	bf48      	it	mi
 8019602:	eef0 5a45 	vmovmi.f32	s11, s10
 8019606:	2a02      	cmp	r2, #2
 8019608:	f000 8178 	beq.w	80198fc <calc_line_geometry+0x660>
 801960c:	ee37 5ac7 	vsub.f32	s10, s15, s14
 8019610:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019614:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019618:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801961c:	bf48      	it	mi
 801961e:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019622:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019626:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801962a:	bf4c      	ite	mi
 801962c:	eef1 4a67 	vnegmi.f32	s9, s15
 8019630:	eef0 4a67 	vmovpl.f32	s9, s15
 8019634:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019638:	f100 8261 	bmi.w	8019afe <calc_line_geometry+0x862>
 801963c:	eef4 4ac7 	vcmpe.f32	s9, s14
 8019640:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019644:	f140 8243 	bpl.w	8019ace <calc_line_geometry+0x832>
 8019648:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801964c:	ed1f 6a77 	vldr	s12, [pc, #-476]	@ 8019474 <calc_line_geometry+0x1d8>
 8019650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019654:	bf4c      	ite	mi
 8019656:	ee27 6ac6 	vnmulmi.f32	s12, s15, s12
 801965a:	ee27 6a86 	vmulpl.f32	s12, s15, s12
 801965e:	eeb4 5ac6 	vcmpe.f32	s10, s12
 8019662:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019666:	d96e      	bls.n	8019746 <calc_line_geometry+0x4aa>
 8019668:	ee36 5ae5 	vsub.f32	s10, s13, s11
 801966c:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019670:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019674:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019678:	bf48      	it	mi
 801967a:	eeb1 5a45 	vnegmi.f32	s10, s10
 801967e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019682:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8019686:	bf4c      	ite	mi
 8019688:	eef1 4a66 	vnegmi.f32	s9, s13
 801968c:	eef0 4a66 	vmovpl.f32	s9, s13
 8019690:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019694:	f100 82ee 	bmi.w	8019c74 <calc_line_geometry+0x9d8>
 8019698:	eef4 4ae5 	vcmpe.f32	s9, s11
 801969c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196a0:	f100 82f0 	bmi.w	8019c84 <calc_line_geometry+0x9e8>
 80196a4:	ed1f 6a8d 	vldr	s12, [pc, #-564]	@ 8019474 <calc_line_geometry+0x1d8>
 80196a8:	ee25 6a86 	vmul.f32	s12, s11, s12
 80196ac:	eeb4 5ac6 	vcmpe.f32	s10, s12
 80196b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196b4:	d947      	bls.n	8019746 <calc_line_geometry+0x4aa>
 80196b6:	ee71 1ae0 	vsub.f32	s3, s3, s1
 80196ba:	ee31 1a40 	vsub.f32	s2, s2, s0
 80196be:	ee37 6ac0 	vsub.f32	s12, s15, s0
 80196c2:	ee35 5ae0 	vsub.f32	s10, s11, s1
 80196c6:	ee37 0a40 	vsub.f32	s0, s14, s0
 80196ca:	ee76 0ae0 	vsub.f32	s1, s13, s1
 80196ce:	ee26 6a21 	vmul.f32	s12, s12, s3
 80196d2:	ee25 5a01 	vmul.f32	s10, s10, s2
 80196d6:	ee60 1a21 	vmul.f32	s3, s0, s3
 80196da:	ee20 1a81 	vmul.f32	s2, s1, s2
 80196de:	4bdc      	ldr	r3, [pc, #880]	@ (8019a50 <calc_line_geometry+0x7b4>)
 80196e0:	48dc      	ldr	r0, [pc, #880]	@ (8019a54 <calc_line_geometry+0x7b8>)
 80196e2:	6959      	ldr	r1, [r3, #20]
 80196e4:	6802      	ldr	r2, [r0, #0]
 80196e6:	ee36 6a45 	vsub.f32	s12, s12, s10
 80196ea:	ee71 1ac1 	vsub.f32	s3, s3, s2
 80196ee:	1c4c      	adds	r4, r1, #1
 80196f0:	2a00      	cmp	r2, #0
 80196f2:	f000 8322 	beq.w	8019d3a <calc_line_geometry+0xa9e>
 80196f6:	615c      	str	r4, [r3, #20]
 80196f8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80196fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019700:	eef5 1ac0 	vcmpe.f32	s3, #0.0
 8019704:	bf48      	it	mi
 8019706:	eeb1 6a46 	vnegmi.f32	s12, s12
 801970a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801970e:	bf48      	it	mi
 8019710:	eef1 1a61 	vnegmi.f32	s3, s3
 8019714:	eeb4 6ae1 	vcmpe.f32	s12, s3
 8019718:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801971c:	6919      	ldr	r1, [r3, #16]
 801971e:	f101 0502 	add.w	r5, r1, #2
 8019722:	f140 8350 	bpl.w	8019dc6 <calc_line_geometry+0xb2a>
 8019726:	2a00      	cmp	r2, #0
 8019728:	f040 834b 	bne.w	8019dc2 <calc_line_geometry+0xb26>
 801972c:	689a      	ldr	r2, [r3, #8]
 801972e:	1c4c      	adds	r4, r1, #1
 8019730:	4294      	cmp	r4, r2
 8019732:	f080 8516 	bcs.w	801a162 <calc_line_geometry+0xec6>
 8019736:	68da      	ldr	r2, [r3, #12]
 8019738:	611d      	str	r5, [r3, #16]
 801973a:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 801973e:	edc1 7a00 	vstr	s15, [r1]
 8019742:	edc1 5a01 	vstr	s11, [r1, #4]
 8019746:	eeb0 0a47 	vmov.f32	s0, s14
 801974a:	eef0 0a65 	vmov.f32	s1, s11
 801974e:	2080      	movs	r0, #128	@ 0x80
 8019750:	f7ff fce8 	bl	8019124 <add_last_point>
 8019754:	4604      	mov	r4, r0
 8019756:	2800      	cmp	r0, #0
 8019758:	f000 81c9 	beq.w	8019aee <calc_line_geometry+0x852>
 801975c:	f003 f952 	bl	801ca04 <nema_vg_set_error>
 8019760:	4620      	mov	r0, r4
 8019762:	b017      	add	sp, #92	@ 0x5c
 8019764:	ecbd 8b08 	vpop	{d8-d11}
 8019768:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801976c:	eeb4 0ae5 	vcmpe.f32	s0, s11
 8019770:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019774:	f53f adb0 	bmi.w	80192d8 <calc_line_geometry+0x3c>
 8019778:	eef4 0ae5 	vcmpe.f32	s1, s11
 801977c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019780:	eeb4 5ac1 	vcmpe.f32	s10, s2
 8019784:	bf4c      	ite	mi
 8019786:	2201      	movmi	r2, #1
 8019788:	2200      	movpl	r2, #0
 801978a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801978e:	d405      	bmi.n	801979c <calc_line_geometry+0x500>
 8019790:	eeb4 5ae1 	vcmpe.f32	s10, s3
 8019794:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019798:	f57f adab 	bpl.w	80192f2 <calc_line_geometry+0x56>
 801979c:	2100      	movs	r1, #0
 801979e:	ee35 2a65 	vsub.f32	s4, s10, s11
 80197a2:	ab12      	add	r3, sp, #72	@ 0x48
 80197a4:	9112      	str	r1, [sp, #72]	@ 0x48
 80197a6:	e9c3 1101 	strd	r1, r1, [r3, #4]
 80197aa:	60d9      	str	r1, [r3, #12]
 80197ac:	eef1 3a42 	vneg.f32	s7, s4
 80197b0:	ee35 3ae5 	vsub.f32	s6, s11, s11
 80197b4:	2a00      	cmp	r2, #0
 80197b6:	f47f ae6b 	bne.w	8019490 <calc_line_geometry+0x1f4>
 80197ba:	ee71 2ae0 	vsub.f32	s5, s3, s1
 80197be:	ee31 4a40 	vsub.f32	s8, s2, s0
 80197c2:	ee70 9a65 	vsub.f32	s19, s0, s11
 80197c6:	eef1 4a62 	vneg.f32	s9, s5
 80197ca:	ee30 8ae5 	vsub.f32	s16, s1, s11
 80197ce:	ee62 3aa3 	vmul.f32	s7, s5, s7
 80197d2:	ee64 baa9 	vmul.f32	s23, s9, s19
 80197d6:	ee64 8a08 	vmul.f32	s17, s8, s16
 80197da:	ee24 7a03 	vmul.f32	s14, s8, s6
 80197de:	ee3b baa8 	vadd.f32	s22, s23, s17
 80197e2:	ee37 7a23 	vadd.f32	s14, s14, s7
 80197e6:	eecb 7a07 	vdiv.f32	s15, s22, s14
 80197ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80197ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197f2:	a902      	add	r1, sp, #8
 80197f4:	ac06      	add	r4, sp, #24
 80197f6:	c903      	ldmia	r1, {r0, r1}
 80197f8:	ed8d 1a08 	vstr	s2, [sp, #32]
 80197fc:	edcd 1a09 	vstr	s3, [sp, #36]	@ 0x24
 8019800:	e884 0003 	stmia.w	r4, {r0, r1}
 8019804:	db07      	blt.n	8019816 <calc_line_geometry+0x57a>
 8019806:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801980a:	eef4 7ae6 	vcmpe.f32	s15, s13
 801980e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019812:	f240 8444 	bls.w	801a09e <calc_line_geometry+0xe02>
 8019816:	ed9f 9a90 	vldr	s18, [pc, #576]	@ 8019a58 <calc_line_geometry+0x7bc>
 801981a:	eef0 aa49 	vmov.f32	s21, s18
 801981e:	ee35 aa45 	vsub.f32	s20, s10, s10
 8019822:	ee70 7ac5 	vsub.f32	s15, s1, s10
 8019826:	ee24 7a0a 	vmul.f32	s14, s8, s20
 801982a:	ee64 6a27 	vmul.f32	s13, s8, s15
 801982e:	ee77 3a23 	vadd.f32	s7, s14, s7
 8019832:	ee36 7aab 	vadd.f32	s14, s13, s23
 8019836:	eec7 6a23 	vdiv.f32	s13, s14, s7
 801983a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801983e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019842:	db07      	blt.n	8019854 <calc_line_geometry+0x5b8>
 8019844:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8019848:	eef4 6ac6 	vcmpe.f32	s13, s12
 801984c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019850:	f240 83f0 	bls.w	801a034 <calc_line_geometry+0xd98>
 8019854:	ee24 9a02 	vmul.f32	s18, s8, s4
 8019858:	ee63 6a62 	vnmul.f32	s13, s6, s5
 801985c:	ee76 6a89 	vadd.f32	s13, s13, s18
 8019860:	eecb 7a26 	vdiv.f32	s15, s22, s13
 8019864:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019868:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801986c:	db07      	blt.n	801987e <calc_line_geometry+0x5e2>
 801986e:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 8019872:	eef4 7ae3 	vcmpe.f32	s15, s7
 8019876:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801987a:	f240 83a4 	bls.w	8019fc6 <calc_line_geometry+0xd2a>
 801987e:	ee70 7a45 	vsub.f32	s15, s0, s10
 8019882:	ee2a 7a62 	vnmul.f32	s14, s20, s5
 8019886:	ee64 4aa7 	vmul.f32	s9, s9, s15
 801988a:	ee37 7a09 	vadd.f32	s14, s14, s18
 801988e:	ee74 4aa8 	vadd.f32	s9, s9, s17
 8019892:	eec4 6a87 	vdiv.f32	s13, s9, s14
 8019896:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801989a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801989e:	db07      	blt.n	80198b0 <calc_line_geometry+0x614>
 80198a0:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80198a4:	eef4 6ac6 	vcmpe.f32	s13, s12
 80198a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198ac:	f240 8362 	bls.w	8019f74 <calc_line_geometry+0xcd8>
 80198b0:	f240 10ff 	movw	r0, #511	@ 0x1ff
 80198b4:	4b66      	ldr	r3, [pc, #408]	@ (8019a50 <calc_line_geometry+0x7b4>)
 80198b6:	4e67      	ldr	r6, [pc, #412]	@ (8019a54 <calc_line_geometry+0x7b8>)
 80198b8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80198ba:	6834      	ldr	r4, [r6, #0]
 80198bc:	e9d3 5104 	ldrd	r5, r1, [r3, #16]
 80198c0:	4282      	cmp	r2, r0
 80198c2:	bf0c      	ite	eq
 80198c4:	2282      	moveq	r2, #130	@ 0x82
 80198c6:	2202      	movne	r2, #2
 80198c8:	1caf      	adds	r7, r5, #2
 80198ca:	1c48      	adds	r0, r1, #1
 80198cc:	2c00      	cmp	r4, #0
 80198ce:	f040 8201 	bne.w	8019cd4 <calc_line_geometry+0xa38>
 80198d2:	681c      	ldr	r4, [r3, #0]
 80198d4:	428c      	cmp	r4, r1
 80198d6:	f240 825f 	bls.w	8019d98 <calc_line_geometry+0xafc>
 80198da:	685c      	ldr	r4, [r3, #4]
 80198dc:	6158      	str	r0, [r3, #20]
 80198de:	6898      	ldr	r0, [r3, #8]
 80198e0:	5462      	strb	r2, [r4, r1]
 80198e2:	1c69      	adds	r1, r5, #1
 80198e4:	4281      	cmp	r1, r0
 80198e6:	f080 8251 	bcs.w	8019d8c <calc_line_geometry+0xaf0>
 80198ea:	68da      	ldr	r2, [r3, #12]
 80198ec:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80198ee:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80198f0:	eb02 0285 	add.w	r2, r2, r5, lsl #2
 80198f4:	611f      	str	r7, [r3, #16]
 80198f6:	6010      	str	r0, [r2, #0]
 80198f8:	6051      	str	r1, [r2, #4]
 80198fa:	e1ed      	b.n	8019cd8 <calc_line_geometry+0xa3c>
 80198fc:	4b54      	ldr	r3, [pc, #336]	@ (8019a50 <calc_line_geometry+0x7b4>)
 80198fe:	4855      	ldr	r0, [pc, #340]	@ (8019a54 <calc_line_geometry+0x7b8>)
 8019900:	695d      	ldr	r5, [r3, #20]
 8019902:	6801      	ldr	r1, [r0, #0]
 8019904:	1c6e      	adds	r6, r5, #1
 8019906:	2900      	cmp	r1, #0
 8019908:	f040 8106 	bne.w	8019b18 <calc_line_geometry+0x87c>
 801990c:	681c      	ldr	r4, [r3, #0]
 801990e:	42ac      	cmp	r4, r5
 8019910:	f240 820e 	bls.w	8019d30 <calc_line_geometry+0xa94>
 8019914:	2482      	movs	r4, #130	@ 0x82
 8019916:	685a      	ldr	r2, [r3, #4]
 8019918:	615e      	str	r6, [r3, #20]
 801991a:	5554      	strb	r4, [r2, r5]
 801991c:	e0fd      	b.n	8019b1a <calc_line_geometry+0x87e>
 801991e:	ee28 3a83 	vmul.f32	s6, s17, s6
 8019922:	ee2a aa02 	vmul.f32	s20, s20, s4
 8019926:	ee33 aa4a 	vsub.f32	s20, s6, s20
 801992a:	eeca 7a07 	vdiv.f32	s15, s20, s14
 801992e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019932:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019936:	f6ff ae0f 	blt.w	8019558 <calc_line_geometry+0x2bc>
 801993a:	eef4 7ae6 	vcmpe.f32	s15, s13
 801993e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019942:	f63f ae09 	bhi.w	8019558 <calc_line_geometry+0x2bc>
 8019946:	2a02      	cmp	r2, #2
 8019948:	f43f ae06 	beq.w	8019558 <calc_line_geometry+0x2bc>
 801994c:	ee24 7aa7 	vmul.f32	s14, s9, s15
 8019950:	ee62 7aa7 	vmul.f32	s15, s5, s15
 8019954:	2a01      	cmp	r2, #1
 8019956:	ee37 7a01 	vadd.f32	s14, s14, s2
 801995a:	ee77 7aa1 	vadd.f32	s15, s15, s3
 801995e:	f000 846b 	beq.w	801a238 <calc_line_geometry+0xf9c>
 8019962:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 8019966:	4619      	mov	r1, r3
 8019968:	a80e      	add	r0, sp, #56	@ 0x38
 801996a:	ed85 7a00 	vstr	s14, [r5]
 801996e:	edc5 7a01 	vstr	s15, [r5, #4]
 8019972:	f7ff fb57 	bl	8019024 <points_coincide>
 8019976:	2800      	cmp	r0, #0
 8019978:	f47f adee 	bne.w	8019558 <calc_line_geometry+0x2bc>
 801997c:	4620      	mov	r0, r4
 801997e:	f7ff fb51 	bl	8019024 <points_coincide>
 8019982:	2800      	cmp	r0, #0
 8019984:	f47f ade8 	bne.w	8019558 <calc_line_geometry+0x2bc>
 8019988:	3201      	adds	r2, #1
 801998a:	e5e5      	b.n	8019558 <calc_line_geometry+0x2bc>
 801998c:	ee28 7a82 	vmul.f32	s14, s17, s4
 8019990:	ee2a 6a03 	vmul.f32	s12, s20, s6
 8019994:	ee37 7a46 	vsub.f32	s14, s14, s12
 8019998:	ee87 8a27 	vdiv.f32	s16, s14, s15
 801999c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80199a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199a4:	f6ff ada3 	blt.w	80194ee <calc_line_geometry+0x252>
 80199a8:	eeb4 8ae6 	vcmpe.f32	s16, s13
 80199ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199b0:	f63f ad9d 	bhi.w	80194ee <calc_line_geometry+0x252>
 80199b4:	ee64 aa88 	vmul.f32	s21, s9, s16
 80199b8:	ee22 8a88 	vmul.f32	s16, s5, s16
 80199bc:	ee7a aa81 	vadd.f32	s21, s21, s2
 80199c0:	ee38 8a21 	vadd.f32	s16, s16, s3
 80199c4:	4619      	mov	r1, r3
 80199c6:	a80e      	add	r0, sp, #56	@ 0x38
 80199c8:	edcd aa12 	vstr	s21, [sp, #72]	@ 0x48
 80199cc:	ed8d 8a13 	vstr	s16, [sp, #76]	@ 0x4c
 80199d0:	f7ff fb28 	bl	8019024 <points_coincide>
 80199d4:	2800      	cmp	r0, #0
 80199d6:	f040 8090 	bne.w	8019afa <calc_line_geometry+0x85e>
 80199da:	4620      	mov	r0, r4
 80199dc:	f7ff fb22 	bl	8019024 <points_coincide>
 80199e0:	fab0 f280 	clz	r2, r0
 80199e4:	0952      	lsrs	r2, r2, #5
 80199e6:	e587      	b.n	80194f8 <calc_line_geometry+0x25c>
 80199e8:	ee2a 7a09 	vmul.f32	s14, s20, s18
 80199ec:	ee62 6a26 	vmul.f32	s13, s4, s13
 80199f0:	ee76 6ac7 	vsub.f32	s13, s13, s14
 80199f4:	ee86 7aa3 	vdiv.f32	s14, s13, s7
 80199f8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80199fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a00:	f6ff ad95 	blt.w	801952e <calc_line_geometry+0x292>
 8019a04:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019a08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a0c:	f63f ad8f 	bhi.w	801952e <calc_line_geometry+0x292>
 8019a10:	ee62 7a87 	vmul.f32	s15, s5, s14
 8019a14:	ee64 6a87 	vmul.f32	s13, s9, s14
 8019a18:	2a01      	cmp	r2, #1
 8019a1a:	ee36 7a81 	vadd.f32	s14, s13, s2
 8019a1e:	ee77 7aa1 	vadd.f32	s15, s15, s3
 8019a22:	f000 845f 	beq.w	801a2e4 <calc_line_geometry+0x1048>
 8019a26:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 8019a2a:	4619      	mov	r1, r3
 8019a2c:	a80e      	add	r0, sp, #56	@ 0x38
 8019a2e:	ed85 7a00 	vstr	s14, [r5]
 8019a32:	edc5 7a01 	vstr	s15, [r5, #4]
 8019a36:	f7ff faf5 	bl	8019024 <points_coincide>
 8019a3a:	2800      	cmp	r0, #0
 8019a3c:	f47f ad77 	bne.w	801952e <calc_line_geometry+0x292>
 8019a40:	4620      	mov	r0, r4
 8019a42:	f7ff faef 	bl	8019024 <points_coincide>
 8019a46:	2800      	cmp	r0, #0
 8019a48:	f47f ad71 	bne.w	801952e <calc_line_geometry+0x292>
 8019a4c:	3201      	adds	r2, #1
 8019a4e:	e56e      	b.n	801952e <calc_line_geometry+0x292>
 8019a50:	20083110 	.word	0x20083110
 8019a54:	20083108 	.word	0x20083108
 8019a58:	00000000 	.word	0x00000000
 8019a5c:	3727c5ac 	.word	0x3727c5ac
 8019a60:	ee22 2a07 	vmul.f32	s4, s4, s14
 8019a64:	ee68 8a89 	vmul.f32	s17, s17, s18
 8019a68:	ee38 2ac2 	vsub.f32	s4, s17, s4
 8019a6c:	ee82 7a27 	vdiv.f32	s14, s4, s15
 8019a70:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019a74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a78:	f6ff ad87 	blt.w	801958a <calc_line_geometry+0x2ee>
 8019a7c:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8019a80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a84:	f63f ad81 	bhi.w	801958a <calc_line_geometry+0x2ee>
 8019a88:	2a02      	cmp	r2, #2
 8019a8a:	f43f ad7e 	beq.w	801958a <calc_line_geometry+0x2ee>
 8019a8e:	ee64 7a87 	vmul.f32	s15, s9, s14
 8019a92:	ee22 7a87 	vmul.f32	s14, s5, s14
 8019a96:	2a01      	cmp	r2, #1
 8019a98:	ee77 7a81 	vadd.f32	s15, s15, s2
 8019a9c:	ee37 7a21 	vadd.f32	s14, s14, s3
 8019aa0:	f000 8374 	beq.w	801a18c <calc_line_geometry+0xef0>
 8019aa4:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 8019aa8:	4619      	mov	r1, r3
 8019aaa:	a80e      	add	r0, sp, #56	@ 0x38
 8019aac:	edc5 7a00 	vstr	s15, [r5]
 8019ab0:	ed85 7a01 	vstr	s14, [r5, #4]
 8019ab4:	f7ff fab6 	bl	8019024 <points_coincide>
 8019ab8:	2800      	cmp	r0, #0
 8019aba:	f47f ad66 	bne.w	801958a <calc_line_geometry+0x2ee>
 8019abe:	4620      	mov	r0, r4
 8019ac0:	f7ff fab0 	bl	8019024 <points_coincide>
 8019ac4:	2800      	cmp	r0, #0
 8019ac6:	f47f ad60 	bne.w	801958a <calc_line_geometry+0x2ee>
 8019aca:	3201      	adds	r2, #1
 8019acc:	e55d      	b.n	801958a <calc_line_geometry+0x2ee>
 8019ace:	ed1f 6a1d 	vldr	s12, [pc, #-116]	@ 8019a5c <calc_line_geometry+0x7c0>
 8019ad2:	ee27 6a06 	vmul.f32	s12, s14, s12
 8019ad6:	e5c2      	b.n	801965e <calc_line_geometry+0x3c2>
 8019ad8:	4610      	mov	r0, r2
 8019ada:	ed9d 0a00 	vldr	s0, [sp]
 8019ade:	eddd 0a01 	vldr	s1, [sp, #4]
 8019ae2:	f7ff fb1f 	bl	8019124 <add_last_point>
 8019ae6:	4604      	mov	r4, r0
 8019ae8:	2800      	cmp	r0, #0
 8019aea:	f47f ae37 	bne.w	801975c <calc_line_geometry+0x4c0>
 8019aee:	4620      	mov	r0, r4
 8019af0:	b017      	add	sp, #92	@ 0x5c
 8019af2:	ecbd 8b08 	vpop	{d8-d11}
 8019af6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019afa:	2200      	movs	r2, #0
 8019afc:	e4fc      	b.n	80194f8 <calc_line_geometry+0x25c>
 8019afe:	eeb1 6a47 	vneg.f32	s12, s14
 8019b02:	eef4 4ac6 	vcmpe.f32	s9, s12
 8019b06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b0a:	f53f ad9d 	bmi.w	8019648 <calc_line_geometry+0x3ac>
 8019b0e:	ed5f 4a2d 	vldr	s9, [pc, #-180]	@ 8019a5c <calc_line_geometry+0x7c0>
 8019b12:	ee26 6a24 	vmul.f32	s12, s12, s9
 8019b16:	e5a2      	b.n	801965e <calc_line_geometry+0x3c2>
 8019b18:	615e      	str	r6, [r3, #20]
 8019b1a:	ed9d 6a12 	vldr	s12, [sp, #72]	@ 0x48
 8019b1e:	ee37 5ac6 	vsub.f32	s10, s15, s12
 8019b22:	f240 12ff 	movw	r2, #511	@ 0x1ff
 8019b26:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019b2a:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 8019b2c:	4294      	cmp	r4, r2
 8019b2e:	bf0c      	ite	eq
 8019b30:	2482      	moveq	r4, #130	@ 0x82
 8019b32:	2402      	movne	r4, #2
 8019b34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b38:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019b3c:	bf48      	it	mi
 8019b3e:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019b42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b46:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8019b4a:	bf4c      	ite	mi
 8019b4c:	eef1 4a67 	vnegmi.f32	s9, s15
 8019b50:	eef0 4a67 	vmovpl.f32	s9, s15
 8019b54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b58:	d478      	bmi.n	8019c4c <calc_line_geometry+0x9b0>
 8019b5a:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8019b5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b62:	dc7b      	bgt.n	8019c5c <calc_line_geometry+0x9c0>
 8019b64:	ed5f 7a43 	vldr	s15, [pc, #-268]	@ 8019a5c <calc_line_geometry+0x7c0>
 8019b68:	ee66 7a27 	vmul.f32	s15, s12, s15
 8019b6c:	eeb4 5ae7 	vcmpe.f32	s10, s15
 8019b70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b74:	691a      	ldr	r2, [r3, #16]
 8019b76:	f102 0e02 	add.w	lr, r2, #2
 8019b7a:	d93f      	bls.n	8019bfc <calc_line_geometry+0x960>
 8019b7c:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 8019b80:	ee36 5ae7 	vsub.f32	s10, s13, s15
 8019b84:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019b88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b8c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019b90:	bf48      	it	mi
 8019b92:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019b96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b9a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019b9e:	bf4c      	ite	mi
 8019ba0:	eef1 4a66 	vnegmi.f32	s9, s13
 8019ba4:	eef0 4a66 	vmovpl.f32	s9, s13
 8019ba8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bac:	f100 82a6 	bmi.w	801a0fc <calc_line_geometry+0xe60>
 8019bb0:	eef4 7ae4 	vcmpe.f32	s15, s9
 8019bb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bb8:	f340 80fe 	ble.w	8019db8 <calc_line_geometry+0xb1c>
 8019bbc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019bc0:	ed5f 4a5a 	vldr	s9, [pc, #-360]	@ 8019a5c <calc_line_geometry+0x7c0>
 8019bc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bc8:	bf4c      	ite	mi
 8019bca:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 8019bce:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 8019bd2:	eeb4 5ae6 	vcmpe.f32	s10, s13
 8019bd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bda:	d90f      	bls.n	8019bfc <calc_line_geometry+0x960>
 8019bdc:	3502      	adds	r5, #2
 8019bde:	1d17      	adds	r7, r2, #4
 8019be0:	b949      	cbnz	r1, 8019bf6 <calc_line_geometry+0x95a>
 8019be2:	f8d3 8008 	ldr.w	r8, [r3, #8]
 8019be6:	1c51      	adds	r1, r2, #1
 8019be8:	4541      	cmp	r1, r8
 8019bea:	f0c0 8294 	bcc.w	801a116 <calc_line_geometry+0xe7a>
 8019bee:	2102      	movs	r1, #2
 8019bf0:	2201      	movs	r2, #1
 8019bf2:	6299      	str	r1, [r3, #40]	@ 0x28
 8019bf4:	6002      	str	r2, [r0, #0]
 8019bf6:	615d      	str	r5, [r3, #20]
 8019bf8:	611f      	str	r7, [r3, #16]
 8019bfa:	e5a4      	b.n	8019746 <calc_line_geometry+0x4aa>
 8019bfc:	2900      	cmp	r1, #0
 8019bfe:	d160      	bne.n	8019cc2 <calc_line_geometry+0xa26>
 8019c00:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8019c04:	1c51      	adds	r1, r2, #1
 8019c06:	4561      	cmp	r1, ip
 8019c08:	f080 80b2 	bcs.w	8019d70 <calc_line_geometry+0xad4>
 8019c0c:	68df      	ldr	r7, [r3, #12]
 8019c0e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8019c10:	eb07 0882 	add.w	r8, r7, r2, lsl #2
 8019c14:	1caf      	adds	r7, r5, #2
 8019c16:	681d      	ldr	r5, [r3, #0]
 8019c18:	f8c8 1004 	str.w	r1, [r8, #4]
 8019c1c:	42b5      	cmp	r5, r6
 8019c1e:	f8c3 e010 	str.w	lr, [r3, #16]
 8019c22:	ed88 6a00 	vstr	s12, [r8]
 8019c26:	f102 0104 	add.w	r1, r2, #4
 8019c2a:	f240 809b 	bls.w	8019d64 <calc_line_geometry+0xac8>
 8019c2e:	1cd5      	adds	r5, r2, #3
 8019c30:	685a      	ldr	r2, [r3, #4]
 8019c32:	45ac      	cmp	ip, r5
 8019c34:	615f      	str	r7, [r3, #20]
 8019c36:	5594      	strb	r4, [r2, r6]
 8019c38:	f240 80a2 	bls.w	8019d80 <calc_line_geometry+0xae4>
 8019c3c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8019c3e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8019c40:	6119      	str	r1, [r3, #16]
 8019c42:	f8c8 0008 	str.w	r0, [r8, #8]
 8019c46:	f8c8 200c 	str.w	r2, [r8, #12]
 8019c4a:	e57c      	b.n	8019746 <calc_line_geometry+0x4aa>
 8019c4c:	eeb1 4a46 	vneg.f32	s8, s12
 8019c50:	eef4 4ac4 	vcmpe.f32	s9, s8
 8019c54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c58:	f140 80a4 	bpl.w	8019da4 <calc_line_geometry+0xb08>
 8019c5c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019c60:	ed5f 4a82 	vldr	s9, [pc, #-520]	@ 8019a5c <calc_line_geometry+0x7c0>
 8019c64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c68:	bf4c      	ite	mi
 8019c6a:	ee67 7ae4 	vnmulmi.f32	s15, s15, s9
 8019c6e:	ee67 7aa4 	vmulpl.f32	s15, s15, s9
 8019c72:	e77b      	b.n	8019b6c <calc_line_geometry+0x8d0>
 8019c74:	eeb1 6a65 	vneg.f32	s12, s11
 8019c78:	eef4 4ac6 	vcmpe.f32	s9, s12
 8019c7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c80:	f140 8095 	bpl.w	8019dae <calc_line_geometry+0xb12>
 8019c84:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019c88:	ed1f 6a8c 	vldr	s12, [pc, #-560]	@ 8019a5c <calc_line_geometry+0x7c0>
 8019c8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c90:	bf4c      	ite	mi
 8019c92:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 8019c96:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 8019c9a:	e507      	b.n	80196ac <calc_line_geometry+0x410>
 8019c9c:	6159      	str	r1, [r3, #20]
 8019c9e:	611e      	str	r6, [r3, #16]
 8019ca0:	eeb0 0a41 	vmov.f32	s0, s2
 8019ca4:	eef0 0a61 	vmov.f32	s1, s3
 8019ca8:	2000      	movs	r0, #0
 8019caa:	f7ff fa3b 	bl	8019124 <add_last_point>
 8019cae:	4604      	mov	r4, r0
 8019cb0:	2800      	cmp	r0, #0
 8019cb2:	f47f ad53 	bne.w	801975c <calc_line_geometry+0x4c0>
 8019cb6:	4620      	mov	r0, r4
 8019cb8:	b017      	add	sp, #92	@ 0x5c
 8019cba:	ecbd 8b08 	vpop	{d8-d11}
 8019cbe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019cc2:	4671      	mov	r1, lr
 8019cc4:	f8c3 e010 	str.w	lr, [r3, #16]
 8019cc8:	695a      	ldr	r2, [r3, #20]
 8019cca:	3102      	adds	r1, #2
 8019ccc:	3201      	adds	r2, #1
 8019cce:	615a      	str	r2, [r3, #20]
 8019cd0:	6119      	str	r1, [r3, #16]
 8019cd2:	e538      	b.n	8019746 <calc_line_geometry+0x4aa>
 8019cd4:	6158      	str	r0, [r3, #20]
 8019cd6:	611f      	str	r7, [r3, #16]
 8019cd8:	eeb4 1a65 	vcmp.f32	s2, s11
 8019cdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ce0:	bf48      	it	mi
 8019ce2:	eeb0 1a65 	vmovmi.f32	s2, s11
 8019ce6:	eeb4 5a41 	vcmp.f32	s10, s2
 8019cea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019cee:	eef4 1a65 	vcmp.f32	s3, s11
 8019cf2:	bf48      	it	mi
 8019cf4:	eeb0 1a45 	vmovmi.f32	s2, s10
 8019cf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019cfc:	bf48      	it	mi
 8019cfe:	eef0 1a65 	vmovmi.f32	s3, s11
 8019d02:	eeb4 5a61 	vcmp.f32	s10, s3
 8019d06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d0a:	bf48      	it	mi
 8019d0c:	eef0 1a45 	vmovmi.f32	s3, s10
 8019d10:	eeb0 0a41 	vmov.f32	s0, s2
 8019d14:	eef0 0a61 	vmov.f32	s1, s3
 8019d18:	2080      	movs	r0, #128	@ 0x80
 8019d1a:	ed8d 1a10 	vstr	s2, [sp, #64]	@ 0x40
 8019d1e:	edcd 1a11 	vstr	s3, [sp, #68]	@ 0x44
 8019d22:	f7ff f9ff 	bl	8019124 <add_last_point>
 8019d26:	4604      	mov	r4, r0
 8019d28:	2800      	cmp	r0, #0
 8019d2a:	f43f aee0 	beq.w	8019aee <calc_line_geometry+0x852>
 8019d2e:	e515      	b.n	801975c <calc_line_geometry+0x4c0>
 8019d30:	2101      	movs	r1, #1
 8019d32:	629a      	str	r2, [r3, #40]	@ 0x28
 8019d34:	615e      	str	r6, [r3, #20]
 8019d36:	6001      	str	r1, [r0, #0]
 8019d38:	e6ef      	b.n	8019b1a <calc_line_geometry+0x87e>
 8019d3a:	681d      	ldr	r5, [r3, #0]
 8019d3c:	428d      	cmp	r5, r1
 8019d3e:	f240 8217 	bls.w	801a170 <calc_line_geometry+0xed4>
 8019d42:	2682      	movs	r6, #130	@ 0x82
 8019d44:	685d      	ldr	r5, [r3, #4]
 8019d46:	615c      	str	r4, [r3, #20]
 8019d48:	546e      	strb	r6, [r5, r1]
 8019d4a:	e4d5      	b.n	80196f8 <calc_line_geometry+0x45c>
 8019d4c:	2102      	movs	r1, #2
 8019d4e:	2201      	movs	r2, #1
 8019d50:	611e      	str	r6, [r3, #16]
 8019d52:	6299      	str	r1, [r3, #40]	@ 0x28
 8019d54:	602a      	str	r2, [r5, #0]
 8019d56:	e7a3      	b.n	8019ca0 <calc_line_geometry+0xa04>
 8019d58:	2002      	movs	r0, #2
 8019d5a:	2201      	movs	r2, #1
 8019d5c:	6159      	str	r1, [r3, #20]
 8019d5e:	6298      	str	r0, [r3, #40]	@ 0x28
 8019d60:	602a      	str	r2, [r5, #0]
 8019d62:	e79c      	b.n	8019c9e <calc_line_geometry+0xa02>
 8019d64:	2402      	movs	r4, #2
 8019d66:	2201      	movs	r2, #1
 8019d68:	615f      	str	r7, [r3, #20]
 8019d6a:	629c      	str	r4, [r3, #40]	@ 0x28
 8019d6c:	6002      	str	r2, [r0, #0]
 8019d6e:	e7af      	b.n	8019cd0 <calc_line_geometry+0xa34>
 8019d70:	2102      	movs	r1, #2
 8019d72:	2201      	movs	r2, #1
 8019d74:	6299      	str	r1, [r3, #40]	@ 0x28
 8019d76:	f8c3 e010 	str.w	lr, [r3, #16]
 8019d7a:	6002      	str	r2, [r0, #0]
 8019d7c:	4671      	mov	r1, lr
 8019d7e:	e7a3      	b.n	8019cc8 <calc_line_geometry+0xa2c>
 8019d80:	2402      	movs	r4, #2
 8019d82:	2201      	movs	r2, #1
 8019d84:	6119      	str	r1, [r3, #16]
 8019d86:	629c      	str	r4, [r3, #40]	@ 0x28
 8019d88:	6002      	str	r2, [r0, #0]
 8019d8a:	e4dc      	b.n	8019746 <calc_line_geometry+0x4aa>
 8019d8c:	2102      	movs	r1, #2
 8019d8e:	2201      	movs	r2, #1
 8019d90:	611f      	str	r7, [r3, #16]
 8019d92:	6299      	str	r1, [r3, #40]	@ 0x28
 8019d94:	6032      	str	r2, [r6, #0]
 8019d96:	e79f      	b.n	8019cd8 <calc_line_geometry+0xa3c>
 8019d98:	2102      	movs	r1, #2
 8019d9a:	2201      	movs	r2, #1
 8019d9c:	6158      	str	r0, [r3, #20]
 8019d9e:	6299      	str	r1, [r3, #40]	@ 0x28
 8019da0:	6032      	str	r2, [r6, #0]
 8019da2:	e798      	b.n	8019cd6 <calc_line_geometry+0xa3a>
 8019da4:	eddf 7ae7 	vldr	s15, [pc, #924]	@ 801a144 <calc_line_geometry+0xea8>
 8019da8:	ee64 7a27 	vmul.f32	s15, s8, s15
 8019dac:	e6de      	b.n	8019b6c <calc_line_geometry+0x8d0>
 8019dae:	eddf 4ae5 	vldr	s9, [pc, #916]	@ 801a144 <calc_line_geometry+0xea8>
 8019db2:	ee26 6a24 	vmul.f32	s12, s12, s9
 8019db6:	e479      	b.n	80196ac <calc_line_geometry+0x410>
 8019db8:	eddf 6ae2 	vldr	s13, [pc, #904]	@ 801a144 <calc_line_geometry+0xea8>
 8019dbc:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8019dc0:	e707      	b.n	8019bd2 <calc_line_geometry+0x936>
 8019dc2:	611d      	str	r5, [r3, #16]
 8019dc4:	e4bf      	b.n	8019746 <calc_line_geometry+0x4aa>
 8019dc6:	2a00      	cmp	r2, #0
 8019dc8:	d1fb      	bne.n	8019dc2 <calc_line_geometry+0xb26>
 8019dca:	689a      	ldr	r2, [r3, #8]
 8019dcc:	1c4c      	adds	r4, r1, #1
 8019dce:	4294      	cmp	r4, r2
 8019dd0:	f080 81c7 	bcs.w	801a162 <calc_line_geometry+0xec6>
 8019dd4:	68da      	ldr	r2, [r3, #12]
 8019dd6:	611d      	str	r5, [r3, #16]
 8019dd8:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 8019ddc:	ed81 7a00 	vstr	s14, [r1]
 8019de0:	edc1 6a01 	vstr	s13, [r1, #4]
 8019de4:	e4af      	b.n	8019746 <calc_line_geometry+0x4aa>
 8019de6:	ee28 6a09 	vmul.f32	s12, s16, s18
 8019dea:	ee22 5a05 	vmul.f32	s10, s4, s10
 8019dee:	ee36 5a45 	vsub.f32	s10, s12, s10
 8019df2:	eec5 7a26 	vdiv.f32	s15, s10, s13
 8019df6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019dfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019dfe:	f6ff ab0e 	blt.w	801941e <calc_line_geometry+0x182>
 8019e02:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019e06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e0a:	f63f ab08 	bhi.w	801941e <calc_line_geometry+0x182>
 8019e0e:	2a02      	cmp	r2, #2
 8019e10:	f43f ab05 	beq.w	801941e <calc_line_geometry+0x182>
 8019e14:	ee22 7aa7 	vmul.f32	s14, s5, s15
 8019e18:	2a01      	cmp	r2, #1
 8019e1a:	ee37 0a00 	vadd.f32	s0, s14, s0
 8019e1e:	f000 82f9 	beq.w	801a414 <calc_line_geometry+0x1178>
 8019e22:	ee63 7a27 	vmul.f32	s15, s6, s15
 8019e26:	ee77 0aa0 	vadd.f32	s1, s15, s1
 8019e2a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8019e2e:	ed83 0a00 	vstr	s0, [r3]
 8019e32:	edc3 0a01 	vstr	s1, [r3, #4]
 8019e36:	f7ff baf2 	b.w	801941e <calc_line_geometry+0x182>
 8019e3a:	ee62 7a29 	vmul.f32	s15, s4, s19
 8019e3e:	ee25 6a88 	vmul.f32	s12, s11, s16
 8019e42:	ee36 6a67 	vsub.f32	s12, s12, s15
 8019e46:	eec6 7a04 	vdiv.f32	s15, s12, s8
 8019e4a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019e4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e52:	f6ff aacb 	blt.w	80193ec <calc_line_geometry+0x150>
 8019e56:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019e5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e5e:	f63f aac5 	bhi.w	80193ec <calc_line_geometry+0x150>
 8019e62:	2a02      	cmp	r2, #2
 8019e64:	f43f aac2 	beq.w	80193ec <calc_line_geometry+0x150>
 8019e68:	ee22 7aa7 	vmul.f32	s14, s5, s15
 8019e6c:	2a01      	cmp	r2, #1
 8019e6e:	ee37 7a00 	vadd.f32	s14, s14, s0
 8019e72:	f000 8329 	beq.w	801a4c8 <calc_line_geometry+0x122c>
 8019e76:	ee63 7a27 	vmul.f32	s15, s6, s15
 8019e7a:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8019e7e:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 8019e82:	4628      	mov	r0, r5
 8019e84:	4619      	mov	r1, r3
 8019e86:	edc4 7a01 	vstr	s15, [r4, #4]
 8019e8a:	ed84 7a00 	vstr	s14, [r4]
 8019e8e:	f7ff f8c9 	bl	8019024 <points_coincide>
 8019e92:	2800      	cmp	r0, #0
 8019e94:	f47f aaaa 	bne.w	80193ec <calc_line_geometry+0x150>
 8019e98:	a80c      	add	r0, sp, #48	@ 0x30
 8019e9a:	f7ff f8c3 	bl	8019024 <points_coincide>
 8019e9e:	2800      	cmp	r0, #0
 8019ea0:	f47f aaa4 	bne.w	80193ec <calc_line_geometry+0x150>
 8019ea4:	3201      	adds	r2, #1
 8019ea6:	f7ff baa1 	b.w	80193ec <calc_line_geometry+0x150>
 8019eaa:	ee29 7a89 	vmul.f32	s14, s19, s18
 8019eae:	ee62 7a27 	vmul.f32	s15, s4, s15
 8019eb2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8019eb6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019eba:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019ebe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ec2:	f6ff aa7e 	blt.w	80193c2 <calc_line_geometry+0x126>
 8019ec6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8019eca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ece:	f63f aa78 	bhi.w	80193c2 <calc_line_geometry+0x126>
 8019ed2:	ee62 6a87 	vmul.f32	s13, s5, s14
 8019ed6:	2a01      	cmp	r2, #1
 8019ed8:	ee76 6a80 	vadd.f32	s13, s13, s0
 8019edc:	f000 834e 	beq.w	801a57c <calc_line_geometry+0x12e0>
 8019ee0:	ee63 7a07 	vmul.f32	s15, s6, s14
 8019ee4:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8019ee8:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 8019eec:	4619      	mov	r1, r3
 8019eee:	4628      	mov	r0, r5
 8019ef0:	edc4 7a01 	vstr	s15, [r4, #4]
 8019ef4:	edc4 6a00 	vstr	s13, [r4]
 8019ef8:	f7ff f894 	bl	8019024 <points_coincide>
 8019efc:	2800      	cmp	r0, #0
 8019efe:	f47f aa60 	bne.w	80193c2 <calc_line_geometry+0x126>
 8019f02:	a80c      	add	r0, sp, #48	@ 0x30
 8019f04:	f7ff f88e 	bl	8019024 <points_coincide>
 8019f08:	2800      	cmp	r0, #0
 8019f0a:	f47f aa5a 	bne.w	80193c2 <calc_line_geometry+0x126>
 8019f0e:	3201      	adds	r2, #1
 8019f10:	f7ff ba57 	b.w	80193c2 <calc_line_geometry+0x126>
 8019f14:	ee62 7a08 	vmul.f32	s15, s4, s16
 8019f18:	ee65 6aa9 	vmul.f32	s13, s11, s19
 8019f1c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8019f20:	ee87 4aa3 	vdiv.f32	s8, s15, s7
 8019f24:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 8019f28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f2c:	f6ff aa29 	blt.w	8019382 <calc_line_geometry+0xe6>
 8019f30:	eeb4 4ac7 	vcmpe.f32	s8, s14
 8019f34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f38:	f63f aa23 	bhi.w	8019382 <calc_line_geometry+0xe6>
 8019f3c:	ee22 aa84 	vmul.f32	s20, s5, s8
 8019f40:	ee23 4a04 	vmul.f32	s8, s6, s8
 8019f44:	ee3a aa00 	vadd.f32	s20, s20, s0
 8019f48:	ee34 4a20 	vadd.f32	s8, s8, s1
 8019f4c:	4619      	mov	r1, r3
 8019f4e:	4628      	mov	r0, r5
 8019f50:	ed8d aa12 	vstr	s20, [sp, #72]	@ 0x48
 8019f54:	ed8d 4a13 	vstr	s8, [sp, #76]	@ 0x4c
 8019f58:	f7ff f864 	bl	8019024 <points_coincide>
 8019f5c:	b938      	cbnz	r0, 8019f6e <calc_line_geometry+0xcd2>
 8019f5e:	a80c      	add	r0, sp, #48	@ 0x30
 8019f60:	f7ff f860 	bl	8019024 <points_coincide>
 8019f64:	fab0 f280 	clz	r2, r0
 8019f68:	0952      	lsrs	r2, r2, #5
 8019f6a:	f7ff ba0f 	b.w	801938c <calc_line_geometry+0xf0>
 8019f6e:	4622      	mov	r2, r4
 8019f70:	f7ff ba0c 	b.w	801938c <calc_line_geometry+0xf0>
 8019f74:	ee28 8a0a 	vmul.f32	s16, s16, s20
 8019f78:	ee27 2a82 	vmul.f32	s4, s15, s4
 8019f7c:	ee38 2a42 	vsub.f32	s4, s16, s4
 8019f80:	eec2 6a07 	vdiv.f32	s13, s4, s14
 8019f84:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019f88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f8c:	f6ff ac90 	blt.w	80198b0 <calc_line_geometry+0x614>
 8019f90:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019f94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f98:	f63f ac8a 	bhi.w	80198b0 <calc_line_geometry+0x614>
 8019f9c:	2a02      	cmp	r2, #2
 8019f9e:	f43f ac87 	beq.w	80198b0 <calc_line_geometry+0x614>
 8019fa2:	ee64 7a26 	vmul.f32	s15, s8, s13
 8019fa6:	2a01      	cmp	r2, #1
 8019fa8:	ee37 0a80 	vadd.f32	s0, s15, s0
 8019fac:	f000 833c 	beq.w	801a628 <calc_line_geometry+0x138c>
 8019fb0:	ee62 7aa6 	vmul.f32	s15, s5, s13
 8019fb4:	ee77 0aa0 	vadd.f32	s1, s15, s1
 8019fb8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8019fbc:	ed83 0a00 	vstr	s0, [r3]
 8019fc0:	edc3 0a01 	vstr	s1, [r3, #4]
 8019fc4:	e474      	b.n	80198b0 <calc_line_geometry+0x614>
 8019fc6:	ee28 3a03 	vmul.f32	s6, s16, s6
 8019fca:	ee69 7a82 	vmul.f32	s15, s19, s4
 8019fce:	ee73 7a67 	vsub.f32	s15, s6, s15
 8019fd2:	ee87 6aa6 	vdiv.f32	s12, s15, s13
 8019fd6:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8019fda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019fde:	f6ff ac4e 	blt.w	801987e <calc_line_geometry+0x5e2>
 8019fe2:	eeb4 6ae3 	vcmpe.f32	s12, s7
 8019fe6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019fea:	f63f ac48 	bhi.w	801987e <calc_line_geometry+0x5e2>
 8019fee:	2a02      	cmp	r2, #2
 8019ff0:	f43f ac45 	beq.w	801987e <calc_line_geometry+0x5e2>
 8019ff4:	ee64 3a06 	vmul.f32	s7, s8, s12
 8019ff8:	2a01      	cmp	r2, #1
 8019ffa:	ee73 3a80 	vadd.f32	s7, s7, s0
 8019ffe:	f000 8373 	beq.w	801a6e8 <calc_line_geometry+0x144c>
 801a002:	ee62 7a86 	vmul.f32	s15, s5, s12
 801a006:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801a00a:	4620      	mov	r0, r4
 801a00c:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 801a010:	4619      	mov	r1, r3
 801a012:	edc4 7a01 	vstr	s15, [r4, #4]
 801a016:	edc4 3a00 	vstr	s7, [r4]
 801a01a:	f7ff f803 	bl	8019024 <points_coincide>
 801a01e:	2800      	cmp	r0, #0
 801a020:	f47f ac2d 	bne.w	801987e <calc_line_geometry+0x5e2>
 801a024:	a808      	add	r0, sp, #32
 801a026:	f7fe fffd 	bl	8019024 <points_coincide>
 801a02a:	2800      	cmp	r0, #0
 801a02c:	f47f ac27 	bne.w	801987e <calc_line_geometry+0x5e2>
 801a030:	3201      	adds	r2, #1
 801a032:	e424      	b.n	801987e <calc_line_geometry+0x5e2>
 801a034:	ee29 7a8a 	vmul.f32	s14, s19, s20
 801a038:	ee67 7a82 	vmul.f32	s15, s15, s4
 801a03c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801a040:	ee87 7aa3 	vdiv.f32	s14, s15, s7
 801a044:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a048:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a04c:	f6ff ac02 	blt.w	8019854 <calc_line_geometry+0x5b8>
 801a050:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801a054:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a058:	f63f abfc 	bhi.w	8019854 <calc_line_geometry+0x5b8>
 801a05c:	ee64 6a07 	vmul.f32	s13, s8, s14
 801a060:	2a01      	cmp	r2, #1
 801a062:	ee76 6a80 	vadd.f32	s13, s13, s0
 801a066:	f000 83b7 	beq.w	801a7d8 <calc_line_geometry+0x153c>
 801a06a:	ee62 7a87 	vmul.f32	s15, s5, s14
 801a06e:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801a072:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 801a076:	4619      	mov	r1, r3
 801a078:	4620      	mov	r0, r4
 801a07a:	edc5 7a01 	vstr	s15, [r5, #4]
 801a07e:	edc5 6a00 	vstr	s13, [r5]
 801a082:	f7fe ffcf 	bl	8019024 <points_coincide>
 801a086:	2800      	cmp	r0, #0
 801a088:	f47f abe4 	bne.w	8019854 <calc_line_geometry+0x5b8>
 801a08c:	a808      	add	r0, sp, #32
 801a08e:	f7fe ffc9 	bl	8019024 <points_coincide>
 801a092:	2800      	cmp	r0, #0
 801a094:	f47f abde 	bne.w	8019854 <calc_line_geometry+0x5b8>
 801a098:	3201      	adds	r2, #1
 801a09a:	f7ff bbdb 	b.w	8019854 <calc_line_geometry+0x5b8>
 801a09e:	ee68 7a02 	vmul.f32	s15, s16, s4
 801a0a2:	ee29 6a83 	vmul.f32	s12, s19, s6
 801a0a6:	ee77 7ac6 	vsub.f32	s15, s15, s12
 801a0aa:	ee87 9a87 	vdiv.f32	s18, s15, s14
 801a0ae:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801a0b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a0b6:	f6ff abae 	blt.w	8019816 <calc_line_geometry+0x57a>
 801a0ba:	eeb4 9ae6 	vcmpe.f32	s18, s13
 801a0be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a0c2:	f63f aba8 	bhi.w	8019816 <calc_line_geometry+0x57a>
 801a0c6:	ee64 aa09 	vmul.f32	s21, s8, s18
 801a0ca:	ee22 9a89 	vmul.f32	s18, s5, s18
 801a0ce:	ee7a aa80 	vadd.f32	s21, s21, s0
 801a0d2:	ee39 9a20 	vadd.f32	s18, s18, s1
 801a0d6:	4619      	mov	r1, r3
 801a0d8:	4620      	mov	r0, r4
 801a0da:	edcd aa12 	vstr	s21, [sp, #72]	@ 0x48
 801a0de:	ed8d 9a13 	vstr	s18, [sp, #76]	@ 0x4c
 801a0e2:	f7fe ff9f 	bl	8019024 <points_coincide>
 801a0e6:	2800      	cmp	r0, #0
 801a0e8:	f47f ab99 	bne.w	801981e <calc_line_geometry+0x582>
 801a0ec:	a808      	add	r0, sp, #32
 801a0ee:	f7fe ff99 	bl	8019024 <points_coincide>
 801a0f2:	fab0 f280 	clz	r2, r0
 801a0f6:	0952      	lsrs	r2, r2, #5
 801a0f8:	f7ff bb91 	b.w	801981e <calc_line_geometry+0x582>
 801a0fc:	eeb1 4a67 	vneg.f32	s8, s15
 801a100:	eef4 4ac4 	vcmpe.f32	s9, s8
 801a104:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a108:	f53f ad58 	bmi.w	8019bbc <calc_line_geometry+0x920>
 801a10c:	eddf 6a0d 	vldr	s13, [pc, #52]	@ 801a144 <calc_line_geometry+0xea8>
 801a110:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a114:	e55d      	b.n	8019bd2 <calc_line_geometry+0x936>
 801a116:	68d9      	ldr	r1, [r3, #12]
 801a118:	f8dd c050 	ldr.w	ip, [sp, #80]	@ 0x50
 801a11c:	eb01 0982 	add.w	r9, r1, r2, lsl #2
 801a120:	6819      	ldr	r1, [r3, #0]
 801a122:	f8c3 e010 	str.w	lr, [r3, #16]
 801a126:	f8dd e054 	ldr.w	lr, [sp, #84]	@ 0x54
 801a12a:	42b1      	cmp	r1, r6
 801a12c:	f8c9 c000 	str.w	ip, [r9]
 801a130:	f8c9 e004 	str.w	lr, [r9, #4]
 801a134:	d808      	bhi.n	801a148 <calc_line_geometry+0xeac>
 801a136:	2102      	movs	r1, #2
 801a138:	2201      	movs	r2, #1
 801a13a:	615d      	str	r5, [r3, #20]
 801a13c:	6299      	str	r1, [r3, #40]	@ 0x28
 801a13e:	6002      	str	r2, [r0, #0]
 801a140:	e55a      	b.n	8019bf8 <calc_line_geometry+0x95c>
 801a142:	bf00      	nop
 801a144:	3727c5ac 	.word	0x3727c5ac
 801a148:	3203      	adds	r2, #3
 801a14a:	6859      	ldr	r1, [r3, #4]
 801a14c:	4590      	cmp	r8, r2
 801a14e:	615d      	str	r5, [r3, #20]
 801a150:	558c      	strb	r4, [r1, r6]
 801a152:	d914      	bls.n	801a17e <calc_line_geometry+0xee2>
 801a154:	ed89 6a02 	vstr	s12, [r9, #8]
 801a158:	611f      	str	r7, [r3, #16]
 801a15a:	edc9 7a03 	vstr	s15, [r9, #12]
 801a15e:	f7ff baf2 	b.w	8019746 <calc_line_geometry+0x4aa>
 801a162:	2102      	movs	r1, #2
 801a164:	2201      	movs	r2, #1
 801a166:	611d      	str	r5, [r3, #16]
 801a168:	6299      	str	r1, [r3, #40]	@ 0x28
 801a16a:	6002      	str	r2, [r0, #0]
 801a16c:	f7ff baeb 	b.w	8019746 <calc_line_geometry+0x4aa>
 801a170:	2102      	movs	r1, #2
 801a172:	2201      	movs	r2, #1
 801a174:	615c      	str	r4, [r3, #20]
 801a176:	6299      	str	r1, [r3, #40]	@ 0x28
 801a178:	6002      	str	r2, [r0, #0]
 801a17a:	f7ff babd 	b.w	80196f8 <calc_line_geometry+0x45c>
 801a17e:	2102      	movs	r1, #2
 801a180:	2201      	movs	r2, #1
 801a182:	611f      	str	r7, [r3, #16]
 801a184:	6299      	str	r1, [r3, #40]	@ 0x28
 801a186:	6002      	str	r2, [r0, #0]
 801a188:	f7ff badd 	b.w	8019746 <calc_line_geometry+0x4aa>
 801a18c:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a190:	ee36 6ae7 	vsub.f32	s12, s13, s15
 801a194:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a198:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a19c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a1a0:	bf48      	it	mi
 801a1a2:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a1a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a1ae:	bf4c      	ite	mi
 801a1b0:	eef1 4a66 	vnegmi.f32	s9, s13
 801a1b4:	eef0 4a66 	vmovpl.f32	s9, s13
 801a1b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1bc:	f100 8112 	bmi.w	801a3e4 <calc_line_geometry+0x1148>
 801a1c0:	eef4 7ae4 	vcmpe.f32	s15, s9
 801a1c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1c8:	f300 80dc 	bgt.w	801a384 <calc_line_geometry+0x10e8>
 801a1cc:	ed5f 6a23 	vldr	s13, [pc, #-140]	@ 801a144 <calc_line_geometry+0xea8>
 801a1d0:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801a1d4:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a1d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1dc:	f63f ac62 	bhi.w	8019aa4 <calc_line_geometry+0x808>
 801a1e0:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a1e4:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a1e8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a1ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1f0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a1f4:	bf48      	it	mi
 801a1f6:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a1fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1fe:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a202:	bf4c      	ite	mi
 801a204:	eef1 4a66 	vnegmi.f32	s9, s13
 801a208:	eef0 4a66 	vmovpl.f32	s9, s13
 801a20c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a210:	f100 834a 	bmi.w	801a8a8 <calc_line_geometry+0x160c>
 801a214:	eeb4 7ae4 	vcmpe.f32	s14, s9
 801a218:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a21c:	f300 82d0 	bgt.w	801a7c0 <calc_line_geometry+0x1524>
 801a220:	ed5f 6a38 	vldr	s13, [pc, #-224]	@ 801a144 <calc_line_geometry+0xea8>
 801a224:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a228:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a22c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a230:	f63f ac38 	bhi.w	8019aa4 <calc_line_geometry+0x808>
 801a234:	f7ff b9a9 	b.w	801958a <calc_line_geometry+0x2ee>
 801a238:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a23c:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a240:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a244:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a248:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a24c:	bf48      	it	mi
 801a24e:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a252:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a256:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a25a:	bf4c      	ite	mi
 801a25c:	eeb1 3a66 	vnegmi.f32	s6, s13
 801a260:	eeb0 3a66 	vmovpl.f32	s6, s13
 801a264:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a268:	f100 80c8 	bmi.w	801a3fc <calc_line_geometry+0x1160>
 801a26c:	eeb4 7ac3 	vcmpe.f32	s14, s6
 801a270:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a274:	f300 8092 	bgt.w	801a39c <calc_line_geometry+0x1100>
 801a278:	ed5f 6a4e 	vldr	s13, [pc, #-312]	@ 801a144 <calc_line_geometry+0xea8>
 801a27c:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a280:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a284:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a288:	f63f ab6b 	bhi.w	8019962 <calc_line_geometry+0x6c6>
 801a28c:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a290:	ee36 6ae7 	vsub.f32	s12, s13, s15
 801a294:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a298:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a29c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a2a0:	bf48      	it	mi
 801a2a2:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a2a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a2ae:	bf4c      	ite	mi
 801a2b0:	eeb1 3a66 	vnegmi.f32	s6, s13
 801a2b4:	eeb0 3a66 	vmovpl.f32	s6, s13
 801a2b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2bc:	f100 8312 	bmi.w	801a8e4 <calc_line_geometry+0x1648>
 801a2c0:	eef4 7ac3 	vcmpe.f32	s15, s6
 801a2c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2c8:	f300 82e2 	bgt.w	801a890 <calc_line_geometry+0x15f4>
 801a2cc:	ed5f 6a63 	vldr	s13, [pc, #-396]	@ 801a144 <calc_line_geometry+0xea8>
 801a2d0:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801a2d4:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a2d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2dc:	f63f ab41 	bhi.w	8019962 <calc_line_geometry+0x6c6>
 801a2e0:	f7ff b93a 	b.w	8019558 <calc_line_geometry+0x2bc>
 801a2e4:	ee7a 6ac7 	vsub.f32	s13, s21, s14
 801a2e8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a2ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2f0:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a2f4:	bf48      	it	mi
 801a2f6:	eef1 6a66 	vnegmi.f32	s13, s13
 801a2fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2fe:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a302:	bf4c      	ite	mi
 801a304:	eeb1 6a6a 	vnegmi.f32	s12, s21
 801a308:	eeb0 6a6a 	vmovpl.f32	s12, s21
 801a30c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a310:	d45c      	bmi.n	801a3cc <calc_line_geometry+0x1130>
 801a312:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801a316:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a31a:	dc4b      	bgt.n	801a3b4 <calc_line_geometry+0x1118>
 801a31c:	ed5f aa77 	vldr	s21, [pc, #-476]	@ 801a144 <calc_line_geometry+0xea8>
 801a320:	ee67 aa2a 	vmul.f32	s21, s14, s21
 801a324:	eef4 6aea 	vcmpe.f32	s13, s21
 801a328:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a32c:	f63f ab7b 	bhi.w	8019a26 <calc_line_geometry+0x78a>
 801a330:	ee78 6a67 	vsub.f32	s13, s16, s15
 801a334:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a338:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a33c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801a340:	bf48      	it	mi
 801a342:	eef1 6a66 	vnegmi.f32	s13, s13
 801a346:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a34a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a34e:	bf4c      	ite	mi
 801a350:	eeb1 6a48 	vnegmi.f32	s12, s16
 801a354:	eeb0 6a48 	vmovpl.f32	s12, s16
 801a358:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a35c:	f100 82b0 	bmi.w	801a8c0 <calc_line_geometry+0x1624>
 801a360:	eef4 7ac6 	vcmpe.f32	s15, s12
 801a364:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a368:	f300 821e 	bgt.w	801a7a8 <calc_line_geometry+0x150c>
 801a36c:	ed1f 8a8b 	vldr	s16, [pc, #-556]	@ 801a144 <calc_line_geometry+0xea8>
 801a370:	ee27 8a88 	vmul.f32	s16, s15, s16
 801a374:	eef4 6ac8 	vcmpe.f32	s13, s16
 801a378:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a37c:	f63f ab53 	bhi.w	8019a26 <calc_line_geometry+0x78a>
 801a380:	f7ff b8d5 	b.w	801952e <calc_line_geometry+0x292>
 801a384:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a388:	ed5f 4a92 	vldr	s9, [pc, #-584]	@ 801a144 <calc_line_geometry+0xea8>
 801a38c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a390:	bf4c      	ite	mi
 801a392:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 801a396:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 801a39a:	e71b      	b.n	801a1d4 <calc_line_geometry+0xf38>
 801a39c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a3a0:	ed1f 3a98 	vldr	s6, [pc, #-608]	@ 801a144 <calc_line_geometry+0xea8>
 801a3a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3a8:	bf4c      	ite	mi
 801a3aa:	ee66 6ac3 	vnmulmi.f32	s13, s13, s6
 801a3ae:	ee66 6a83 	vmulpl.f32	s13, s13, s6
 801a3b2:	e765      	b.n	801a280 <calc_line_geometry+0xfe4>
 801a3b4:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a3b8:	ed1f 6a9e 	vldr	s12, [pc, #-632]	@ 801a144 <calc_line_geometry+0xea8>
 801a3bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3c0:	bf4c      	ite	mi
 801a3c2:	ee6a aac6 	vnmulmi.f32	s21, s21, s12
 801a3c6:	ee6a aa86 	vmulpl.f32	s21, s21, s12
 801a3ca:	e7ab      	b.n	801a324 <calc_line_geometry+0x1088>
 801a3cc:	eef1 3a47 	vneg.f32	s7, s14
 801a3d0:	eef4 3ac6 	vcmpe.f32	s7, s12
 801a3d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3d8:	dcec      	bgt.n	801a3b4 <calc_line_geometry+0x1118>
 801a3da:	ed5f aaa6 	vldr	s21, [pc, #-664]	@ 801a144 <calc_line_geometry+0xea8>
 801a3de:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801a3e2:	e79f      	b.n	801a324 <calc_line_geometry+0x1088>
 801a3e4:	eeb1 4a67 	vneg.f32	s8, s15
 801a3e8:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801a3ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3f0:	dcc8      	bgt.n	801a384 <calc_line_geometry+0x10e8>
 801a3f2:	ed5f 6aac 	vldr	s13, [pc, #-688]	@ 801a144 <calc_line_geometry+0xea8>
 801a3f6:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a3fa:	e6eb      	b.n	801a1d4 <calc_line_geometry+0xf38>
 801a3fc:	eeb1 8a47 	vneg.f32	s16, s14
 801a400:	eeb4 8ac3 	vcmpe.f32	s16, s6
 801a404:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a408:	dcc8      	bgt.n	801a39c <calc_line_geometry+0x1100>
 801a40a:	ed5f 6ab2 	vldr	s13, [pc, #-712]	@ 801a144 <calc_line_geometry+0xea8>
 801a40e:	ee68 6a26 	vmul.f32	s13, s16, s13
 801a412:	e735      	b.n	801a280 <calc_line_geometry+0xfe4>
 801a414:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 801a418:	ee77 6a40 	vsub.f32	s13, s14, s0
 801a41c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a420:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a424:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a428:	bf48      	it	mi
 801a42a:	eef1 6a66 	vnegmi.f32	s13, s13
 801a42e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a432:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801a436:	bf4c      	ite	mi
 801a438:	eeb1 6a47 	vnegmi.f32	s12, s14
 801a43c:	eeb0 6a47 	vmovpl.f32	s12, s14
 801a440:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a444:	f100 82ba 	bmi.w	801a9bc <calc_line_geometry+0x1720>
 801a448:	eeb4 0ac6 	vcmpe.f32	s0, s12
 801a44c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a450:	f300 826c 	bgt.w	801a92c <calc_line_geometry+0x1690>
 801a454:	ed1f 7ac5 	vldr	s14, [pc, #-788]	@ 801a144 <calc_line_geometry+0xea8>
 801a458:	ee20 7a07 	vmul.f32	s14, s0, s14
 801a45c:	eef4 6ac7 	vcmpe.f32	s13, s14
 801a460:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a464:	ee63 7a27 	vmul.f32	s15, s6, s15
 801a468:	f63f acdd 	bhi.w	8019e26 <calc_line_geometry+0xb8a>
 801a46c:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a470:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a474:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a478:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a47c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a480:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a484:	bf48      	it	mi
 801a486:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a48a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a48e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a492:	bf4c      	ite	mi
 801a494:	eef1 5a47 	vnegmi.f32	s11, s14
 801a498:	eef0 5a47 	vmovpl.f32	s11, s14
 801a49c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4a0:	f100 82e3 	bmi.w	801aa6a <calc_line_geometry+0x17ce>
 801a4a4:	eef4 6ae5 	vcmpe.f32	s13, s11
 801a4a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4ac:	f300 82e5 	bgt.w	801aa7a <calc_line_geometry+0x17de>
 801a4b0:	ed1f 7adc 	vldr	s14, [pc, #-880]	@ 801a144 <calc_line_geometry+0xea8>
 801a4b4:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a4b8:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a4bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4c0:	f63f acb1 	bhi.w	8019e26 <calc_line_geometry+0xb8a>
 801a4c4:	f7fe bfab 	b.w	801941e <calc_line_geometry+0x182>
 801a4c8:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a4cc:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a4d0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a4d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4d8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a4dc:	bf48      	it	mi
 801a4de:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a4e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4e6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a4ea:	bf4c      	ite	mi
 801a4ec:	eef1 5a66 	vnegmi.f32	s11, s13
 801a4f0:	eef0 5a66 	vmovpl.f32	s11, s13
 801a4f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4f8:	f100 8254 	bmi.w	801a9a4 <calc_line_geometry+0x1708>
 801a4fc:	eeb4 7ae5 	vcmpe.f32	s14, s11
 801a500:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a504:	f300 8206 	bgt.w	801a914 <calc_line_geometry+0x1678>
 801a508:	eddf 6af4 	vldr	s13, [pc, #976]	@ 801a8dc <calc_line_geometry+0x1640>
 801a50c:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a510:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a514:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a518:	ee63 7a27 	vmul.f32	s15, s6, s15
 801a51c:	f63f acad 	bhi.w	8019e7a <calc_line_geometry+0xbde>
 801a520:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a524:	ee37 6aa0 	vadd.f32	s12, s15, s1
 801a528:	ee76 5ac6 	vsub.f32	s11, s13, s12
 801a52c:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801a530:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a534:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a538:	bf48      	it	mi
 801a53a:	eef1 5a65 	vnegmi.f32	s11, s11
 801a53e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a542:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a546:	bf4c      	ite	mi
 801a548:	eeb1 4a66 	vnegmi.f32	s8, s13
 801a54c:	eeb0 4a66 	vmovpl.f32	s8, s13
 801a550:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a554:	f100 8276 	bmi.w	801aa44 <calc_line_geometry+0x17a8>
 801a558:	eeb4 4ac6 	vcmpe.f32	s8, s12
 801a55c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a560:	f100 8278 	bmi.w	801aa54 <calc_line_geometry+0x17b8>
 801a564:	eddf 6add 	vldr	s13, [pc, #884]	@ 801a8dc <calc_line_geometry+0x1640>
 801a568:	ee66 6a26 	vmul.f32	s13, s12, s13
 801a56c:	eef4 5ae6 	vcmpe.f32	s11, s13
 801a570:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a574:	f63f ac81 	bhi.w	8019e7a <calc_line_geometry+0xbde>
 801a578:	f7fe bf38 	b.w	80193ec <calc_line_geometry+0x150>
 801a57c:	ee7a 7a66 	vsub.f32	s15, s20, s13
 801a580:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a584:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a588:	eeb5 aac0 	vcmpe.f32	s20, #0.0
 801a58c:	bf48      	it	mi
 801a58e:	eef1 7a67 	vnegmi.f32	s15, s15
 801a592:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a596:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a59a:	bf4c      	ite	mi
 801a59c:	eeb1 6a4a 	vnegmi.f32	s12, s20
 801a5a0:	eeb0 6a4a 	vmovpl.f32	s12, s20
 801a5a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5a8:	f100 822c 	bmi.w	801aa04 <calc_line_geometry+0x1768>
 801a5ac:	eef4 6ac6 	vcmpe.f32	s13, s12
 801a5b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5b4:	f300 81a2 	bgt.w	801a8fc <calc_line_geometry+0x1660>
 801a5b8:	ed9f aac8 	vldr	s20, [pc, #800]	@ 801a8dc <calc_line_geometry+0x1640>
 801a5bc:	ee26 aa8a 	vmul.f32	s20, s13, s20
 801a5c0:	eef4 7aca 	vcmpe.f32	s15, s20
 801a5c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5c8:	ee63 7a07 	vmul.f32	s15, s6, s14
 801a5cc:	f63f ac8a 	bhi.w	8019ee4 <calc_line_geometry+0xc48>
 801a5d0:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801a5d4:	ee34 6a47 	vsub.f32	s12, s8, s14
 801a5d8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a5dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5e0:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 801a5e4:	bf48      	it	mi
 801a5e6:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a5ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5ee:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a5f2:	bf4c      	ite	mi
 801a5f4:	eef1 3a44 	vnegmi.f32	s7, s8
 801a5f8:	eef0 3a44 	vmovpl.f32	s7, s8
 801a5fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a600:	f100 820d 	bmi.w	801aa1e <calc_line_geometry+0x1782>
 801a604:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801a608:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a60c:	f300 820f 	bgt.w	801aa2e <calc_line_geometry+0x1792>
 801a610:	ed9f 4ab2 	vldr	s8, [pc, #712]	@ 801a8dc <calc_line_geometry+0x1640>
 801a614:	ee27 4a04 	vmul.f32	s8, s14, s8
 801a618:	eeb4 6ac4 	vcmpe.f32	s12, s8
 801a61c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a620:	f63f ac60 	bhi.w	8019ee4 <calc_line_geometry+0xc48>
 801a624:	f7fe becd 	b.w	80193c2 <calc_line_geometry+0x126>
 801a628:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801a62c:	ee37 7ac0 	vsub.f32	s14, s15, s0
 801a630:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a634:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a638:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a63c:	bf48      	it	mi
 801a63e:	eeb1 7a47 	vnegmi.f32	s14, s14
 801a642:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a646:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801a64a:	bf4c      	ite	mi
 801a64c:	eeb1 6a67 	vnegmi.f32	s12, s15
 801a650:	eeb0 6a67 	vmovpl.f32	s12, s15
 801a654:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a658:	f100 81bc 	bmi.w	801a9d4 <calc_line_geometry+0x1738>
 801a65c:	eeb4 6ac0 	vcmpe.f32	s12, s0
 801a660:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a664:	f100 816e 	bmi.w	801a944 <calc_line_geometry+0x16a8>
 801a668:	eddf 7a9c 	vldr	s15, [pc, #624]	@ 801a8dc <calc_line_geometry+0x1640>
 801a66c:	ee60 7a27 	vmul.f32	s15, s0, s15
 801a670:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801a674:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a678:	ee62 7aa6 	vmul.f32	s15, s5, s13
 801a67c:	f63f ac9a 	bhi.w	8019fb4 <calc_line_geometry+0xd18>
 801a680:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a684:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a688:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a68c:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a690:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a694:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a698:	bf48      	it	mi
 801a69a:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a69e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6a2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a6a6:	bf4c      	ite	mi
 801a6a8:	eef1 4a47 	vnegmi.f32	s9, s14
 801a6ac:	eef0 4a47 	vmovpl.f32	s9, s14
 801a6b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6b4:	f100 81f7 	bmi.w	801aaa6 <calc_line_geometry+0x180a>
 801a6b8:	eef4 4ae6 	vcmpe.f32	s9, s13
 801a6bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6c0:	f140 81f9 	bpl.w	801aab6 <calc_line_geometry+0x181a>
 801a6c4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a6c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6cc:	eddf 6a83 	vldr	s13, [pc, #524]	@ 801a8dc <calc_line_geometry+0x1640>
 801a6d0:	f100 8202 	bmi.w	801aad8 <calc_line_geometry+0x183c>
 801a6d4:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a6d8:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a6dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6e0:	f63f ac68 	bhi.w	8019fb4 <calc_line_geometry+0xd18>
 801a6e4:	f7ff b8e4 	b.w	80198b0 <calc_line_geometry+0x614>
 801a6e8:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801a6ec:	ee37 7ae3 	vsub.f32	s14, s15, s7
 801a6f0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a6f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6f8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a6fc:	bf48      	it	mi
 801a6fe:	eeb1 7a47 	vnegmi.f32	s14, s14
 801a702:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a706:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 801a70a:	bf4c      	ite	mi
 801a70c:	eef1 6a67 	vnegmi.f32	s13, s15
 801a710:	eef0 6a67 	vmovpl.f32	s13, s15
 801a714:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a718:	f100 8168 	bmi.w	801a9ec <calc_line_geometry+0x1750>
 801a71c:	eef4 6ae3 	vcmpe.f32	s13, s7
 801a720:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a724:	f100 811a 	bmi.w	801a95c <calc_line_geometry+0x16c0>
 801a728:	eddf 7a6c 	vldr	s15, [pc, #432]	@ 801a8dc <calc_line_geometry+0x1640>
 801a72c:	ee63 7aa7 	vmul.f32	s15, s7, s15
 801a730:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801a734:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a738:	ee62 7a86 	vmul.f32	s15, s5, s12
 801a73c:	f63f ac63 	bhi.w	801a006 <calc_line_geometry+0xd6a>
 801a740:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a744:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a748:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a74c:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a750:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a754:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a758:	bf48      	it	mi
 801a75a:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a75e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a762:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a766:	bf4c      	ite	mi
 801a768:	eeb1 3a47 	vnegmi.f32	s6, s14
 801a76c:	eeb0 3a47 	vmovpl.f32	s6, s14
 801a770:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a774:	f100 818c 	bmi.w	801aa90 <calc_line_geometry+0x17f4>
 801a778:	eeb4 3ae6 	vcmpe.f32	s6, s13
 801a77c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a780:	f140 818e 	bpl.w	801aaa0 <calc_line_geometry+0x1804>
 801a784:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a78c:	eddf 6a53 	vldr	s13, [pc, #332]	@ 801a8dc <calc_line_geometry+0x1640>
 801a790:	f100 81a5 	bmi.w	801aade <calc_line_geometry+0x1842>
 801a794:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a798:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a79c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7a0:	f63f ac31 	bhi.w	801a006 <calc_line_geometry+0xd6a>
 801a7a4:	f7ff b86b 	b.w	801987e <calc_line_geometry+0x5e2>
 801a7a8:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801a7ac:	ed9f 6a4b 	vldr	s12, [pc, #300]	@ 801a8dc <calc_line_geometry+0x1640>
 801a7b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7b4:	bf4c      	ite	mi
 801a7b6:	ee28 8a46 	vnmulmi.f32	s16, s16, s12
 801a7ba:	ee28 8a06 	vmulpl.f32	s16, s16, s12
 801a7be:	e5d9      	b.n	801a374 <calc_line_geometry+0x10d8>
 801a7c0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a7c4:	eddf 4a45 	vldr	s9, [pc, #276]	@ 801a8dc <calc_line_geometry+0x1640>
 801a7c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7cc:	bf4c      	ite	mi
 801a7ce:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 801a7d2:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 801a7d6:	e527      	b.n	801a228 <calc_line_geometry+0xf8c>
 801a7d8:	ee7a 7ae6 	vsub.f32	s15, s21, s13
 801a7dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a7e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7e4:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a7e8:	bf48      	it	mi
 801a7ea:	eef1 7a67 	vnegmi.f32	s15, s15
 801a7ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7f2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a7f6:	bf4c      	ite	mi
 801a7f8:	eeb1 6a6a 	vnegmi.f32	s12, s21
 801a7fc:	eeb0 6a6a 	vmovpl.f32	s12, s21
 801a800:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a804:	f100 80c2 	bmi.w	801a98c <calc_line_geometry+0x16f0>
 801a808:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a80c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a810:	f100 80b0 	bmi.w	801a974 <calc_line_geometry+0x16d8>
 801a814:	eddf aa31 	vldr	s21, [pc, #196]	@ 801a8dc <calc_line_geometry+0x1640>
 801a818:	ee66 aaaa 	vmul.f32	s21, s13, s21
 801a81c:	eef4 7aea 	vcmpe.f32	s15, s21
 801a820:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a824:	ee62 7a87 	vmul.f32	s15, s5, s14
 801a828:	f63f ac21 	bhi.w	801a06e <calc_line_geometry+0xdd2>
 801a82c:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801a830:	ee39 6a47 	vsub.f32	s12, s18, s14
 801a834:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a838:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a83c:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801a840:	bf48      	it	mi
 801a842:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a846:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a84a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a84e:	bf4c      	ite	mi
 801a850:	eef1 3a49 	vnegmi.f32	s7, s18
 801a854:	eef0 3a49 	vmovpl.f32	s7, s18
 801a858:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a85c:	f100 812e 	bmi.w	801aabc <calc_line_geometry+0x1820>
 801a860:	eef4 3ac7 	vcmpe.f32	s7, s14
 801a864:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a868:	f140 8130 	bpl.w	801aacc <calc_line_geometry+0x1830>
 801a86c:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801a870:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a874:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 801a8dc <calc_line_geometry+0x1640>
 801a878:	f100 812b 	bmi.w	801aad2 <calc_line_geometry+0x1836>
 801a87c:	ee27 9a09 	vmul.f32	s18, s14, s18
 801a880:	eeb4 6ac9 	vcmpe.f32	s12, s18
 801a884:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a888:	f63f abf1 	bhi.w	801a06e <calc_line_geometry+0xdd2>
 801a88c:	f7fe bfe2 	b.w	8019854 <calc_line_geometry+0x5b8>
 801a890:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a894:	ed9f 3a11 	vldr	s6, [pc, #68]	@ 801a8dc <calc_line_geometry+0x1640>
 801a898:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a89c:	bf4c      	ite	mi
 801a89e:	ee66 6ac3 	vnmulmi.f32	s13, s13, s6
 801a8a2:	ee66 6a83 	vmulpl.f32	s13, s13, s6
 801a8a6:	e515      	b.n	801a2d4 <calc_line_geometry+0x1038>
 801a8a8:	eeb1 4a47 	vneg.f32	s8, s14
 801a8ac:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801a8b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8b4:	dc84      	bgt.n	801a7c0 <calc_line_geometry+0x1524>
 801a8b6:	eddf 6a09 	vldr	s13, [pc, #36]	@ 801a8dc <calc_line_geometry+0x1640>
 801a8ba:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a8be:	e4b3      	b.n	801a228 <calc_line_geometry+0xf8c>
 801a8c0:	eef1 3a67 	vneg.f32	s7, s15
 801a8c4:	eef4 3ac6 	vcmpe.f32	s7, s12
 801a8c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8cc:	f73f af6c 	bgt.w	801a7a8 <calc_line_geometry+0x150c>
 801a8d0:	ed9f 8a02 	vldr	s16, [pc, #8]	@ 801a8dc <calc_line_geometry+0x1640>
 801a8d4:	ee23 8a88 	vmul.f32	s16, s7, s16
 801a8d8:	e54c      	b.n	801a374 <calc_line_geometry+0x10d8>
 801a8da:	bf00      	nop
 801a8dc:	3727c5ac 	.word	0x3727c5ac
 801a8e0:	3727c5ac 	.word	0x3727c5ac
 801a8e4:	eeb1 8a67 	vneg.f32	s16, s15
 801a8e8:	eeb4 8ac3 	vcmpe.f32	s16, s6
 801a8ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8f0:	dcce      	bgt.n	801a890 <calc_line_geometry+0x15f4>
 801a8f2:	ed5f 6a05 	vldr	s13, [pc, #-20]	@ 801a8e0 <calc_line_geometry+0x1644>
 801a8f6:	ee68 6a26 	vmul.f32	s13, s16, s13
 801a8fa:	e4eb      	b.n	801a2d4 <calc_line_geometry+0x1038>
 801a8fc:	eeb5 aac0 	vcmpe.f32	s20, #0.0
 801a900:	ed1f 6a09 	vldr	s12, [pc, #-36]	@ 801a8e0 <calc_line_geometry+0x1644>
 801a904:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a908:	bf4c      	ite	mi
 801a90a:	ee2a aa46 	vnmulmi.f32	s20, s20, s12
 801a90e:	ee2a aa06 	vmulpl.f32	s20, s20, s12
 801a912:	e655      	b.n	801a5c0 <calc_line_geometry+0x1324>
 801a914:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a918:	ed5f 5a0f 	vldr	s11, [pc, #-60]	@ 801a8e0 <calc_line_geometry+0x1644>
 801a91c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a920:	bf4c      	ite	mi
 801a922:	ee66 6ae5 	vnmulmi.f32	s13, s13, s11
 801a926:	ee66 6aa5 	vmulpl.f32	s13, s13, s11
 801a92a:	e5f1      	b.n	801a510 <calc_line_geometry+0x1274>
 801a92c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a930:	ed1f 6a15 	vldr	s12, [pc, #-84]	@ 801a8e0 <calc_line_geometry+0x1644>
 801a934:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a938:	bf4c      	ite	mi
 801a93a:	ee27 7a46 	vnmulmi.f32	s14, s14, s12
 801a93e:	ee27 7a06 	vmulpl.f32	s14, s14, s12
 801a942:	e58b      	b.n	801a45c <calc_line_geometry+0x11c0>
 801a944:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a948:	ed1f 6a1b 	vldr	s12, [pc, #-108]	@ 801a8e0 <calc_line_geometry+0x1644>
 801a94c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a950:	bf4c      	ite	mi
 801a952:	ee67 7ac6 	vnmulmi.f32	s15, s15, s12
 801a956:	ee67 7a86 	vmulpl.f32	s15, s15, s12
 801a95a:	e689      	b.n	801a670 <calc_line_geometry+0x13d4>
 801a95c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a960:	ed5f 6a21 	vldr	s13, [pc, #-132]	@ 801a8e0 <calc_line_geometry+0x1644>
 801a964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a968:	bf4c      	ite	mi
 801a96a:	ee67 7ae6 	vnmulmi.f32	s15, s15, s13
 801a96e:	ee67 7aa6 	vmulpl.f32	s15, s15, s13
 801a972:	e6dd      	b.n	801a730 <calc_line_geometry+0x1494>
 801a974:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a978:	ed1f 6a27 	vldr	s12, [pc, #-156]	@ 801a8e0 <calc_line_geometry+0x1644>
 801a97c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a980:	bf4c      	ite	mi
 801a982:	ee6a aac6 	vnmulmi.f32	s21, s21, s12
 801a986:	ee6a aa86 	vmulpl.f32	s21, s21, s12
 801a98a:	e747      	b.n	801a81c <calc_line_geometry+0x1580>
 801a98c:	eef1 3a66 	vneg.f32	s7, s13
 801a990:	eef4 3ac6 	vcmpe.f32	s7, s12
 801a994:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a998:	dcec      	bgt.n	801a974 <calc_line_geometry+0x16d8>
 801a99a:	ed5f aa2f 	vldr	s21, [pc, #-188]	@ 801a8e0 <calc_line_geometry+0x1644>
 801a99e:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801a9a2:	e73b      	b.n	801a81c <calc_line_geometry+0x1580>
 801a9a4:	eeb1 4a47 	vneg.f32	s8, s14
 801a9a8:	eeb4 4ae5 	vcmpe.f32	s8, s11
 801a9ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9b0:	dcb0      	bgt.n	801a914 <calc_line_geometry+0x1678>
 801a9b2:	ed5f 6a35 	vldr	s13, [pc, #-212]	@ 801a8e0 <calc_line_geometry+0x1644>
 801a9b6:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a9ba:	e5a9      	b.n	801a510 <calc_line_geometry+0x1274>
 801a9bc:	eef1 5a40 	vneg.f32	s11, s0
 801a9c0:	eef4 5ac6 	vcmpe.f32	s11, s12
 801a9c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9c8:	dcb0      	bgt.n	801a92c <calc_line_geometry+0x1690>
 801a9ca:	ed1f 7a3b 	vldr	s14, [pc, #-236]	@ 801a8e0 <calc_line_geometry+0x1644>
 801a9ce:	ee25 7a87 	vmul.f32	s14, s11, s14
 801a9d2:	e543      	b.n	801a45c <calc_line_geometry+0x11c0>
 801a9d4:	eef1 4a40 	vneg.f32	s9, s0
 801a9d8:	eef4 4ac6 	vcmpe.f32	s9, s12
 801a9dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9e0:	dcb0      	bgt.n	801a944 <calc_line_geometry+0x16a8>
 801a9e2:	ed5f 7a41 	vldr	s15, [pc, #-260]	@ 801a8e0 <calc_line_geometry+0x1644>
 801a9e6:	ee64 7aa7 	vmul.f32	s15, s9, s15
 801a9ea:	e641      	b.n	801a670 <calc_line_geometry+0x13d4>
 801a9ec:	eeb1 3a63 	vneg.f32	s6, s7
 801a9f0:	eeb4 3ae6 	vcmpe.f32	s6, s13
 801a9f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9f8:	dcb0      	bgt.n	801a95c <calc_line_geometry+0x16c0>
 801a9fa:	ed5f 7a47 	vldr	s15, [pc, #-284]	@ 801a8e0 <calc_line_geometry+0x1644>
 801a9fe:	ee63 7a27 	vmul.f32	s15, s6, s15
 801aa02:	e695      	b.n	801a730 <calc_line_geometry+0x1494>
 801aa04:	eef1 3a66 	vneg.f32	s7, s13
 801aa08:	eef4 3ac6 	vcmpe.f32	s7, s12
 801aa0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa10:	f73f af74 	bgt.w	801a8fc <calc_line_geometry+0x1660>
 801aa14:	ed1f aa4e 	vldr	s20, [pc, #-312]	@ 801a8e0 <calc_line_geometry+0x1644>
 801aa18:	ee23 aa8a 	vmul.f32	s20, s7, s20
 801aa1c:	e5d0      	b.n	801a5c0 <calc_line_geometry+0x1324>
 801aa1e:	eeb1 7a47 	vneg.f32	s14, s14
 801aa22:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801aa26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa2a:	f77f adf1 	ble.w	801a610 <calc_line_geometry+0x1374>
 801aa2e:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 801aa32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa36:	ed1f 7a56 	vldr	s14, [pc, #-344]	@ 801a8e0 <calc_line_geometry+0x1644>
 801aa3a:	f57f adeb 	bpl.w	801a614 <calc_line_geometry+0x1378>
 801aa3e:	ee24 4a47 	vnmul.f32	s8, s8, s14
 801aa42:	e5e9      	b.n	801a618 <calc_line_geometry+0x137c>
 801aa44:	eeb1 6a46 	vneg.f32	s12, s12
 801aa48:	eeb4 6ac4 	vcmpe.f32	s12, s8
 801aa4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa50:	f77f ad88 	ble.w	801a564 <calc_line_geometry+0x12c8>
 801aa54:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801aa58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa5c:	ed1f 6a60 	vldr	s12, [pc, #-384]	@ 801a8e0 <calc_line_geometry+0x1644>
 801aa60:	f57f ad82 	bpl.w	801a568 <calc_line_geometry+0x12cc>
 801aa64:	ee66 6ac6 	vnmul.f32	s13, s13, s12
 801aa68:	e580      	b.n	801a56c <calc_line_geometry+0x12d0>
 801aa6a:	eef1 6a66 	vneg.f32	s13, s13
 801aa6e:	eef4 6ae5 	vcmpe.f32	s13, s11
 801aa72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa76:	f77f ad1b 	ble.w	801a4b0 <calc_line_geometry+0x1214>
 801aa7a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801aa7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa82:	ed5f 6a69 	vldr	s13, [pc, #-420]	@ 801a8e0 <calc_line_geometry+0x1644>
 801aa86:	f57f ad15 	bpl.w	801a4b4 <calc_line_geometry+0x1218>
 801aa8a:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801aa8e:	e513      	b.n	801a4b8 <calc_line_geometry+0x121c>
 801aa90:	eef1 6a66 	vneg.f32	s13, s13
 801aa94:	eef4 6ac3 	vcmpe.f32	s13, s6
 801aa98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa9c:	f73f ae72 	bgt.w	801a784 <calc_line_geometry+0x14e8>
 801aaa0:	ed1f 7a71 	vldr	s14, [pc, #-452]	@ 801a8e0 <calc_line_geometry+0x1644>
 801aaa4:	e676      	b.n	801a794 <calc_line_geometry+0x14f8>
 801aaa6:	eef1 6a66 	vneg.f32	s13, s13
 801aaaa:	eef4 6ae4 	vcmpe.f32	s13, s9
 801aaae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aab2:	f73f ae07 	bgt.w	801a6c4 <calc_line_geometry+0x1428>
 801aab6:	ed1f 7a76 	vldr	s14, [pc, #-472]	@ 801a8e0 <calc_line_geometry+0x1644>
 801aaba:	e60b      	b.n	801a6d4 <calc_line_geometry+0x1438>
 801aabc:	eeb1 7a47 	vneg.f32	s14, s14
 801aac0:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801aac4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aac8:	f73f aed0 	bgt.w	801a86c <calc_line_geometry+0x15d0>
 801aacc:	ed1f 9a7c 	vldr	s18, [pc, #-496]	@ 801a8e0 <calc_line_geometry+0x1644>
 801aad0:	e6d4      	b.n	801a87c <calc_line_geometry+0x15e0>
 801aad2:	ee29 9a47 	vnmul.f32	s18, s18, s14
 801aad6:	e6d3      	b.n	801a880 <calc_line_geometry+0x15e4>
 801aad8:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801aadc:	e5fc      	b.n	801a6d8 <calc_line_geometry+0x143c>
 801aade:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801aae2:	e659      	b.n	801a798 <calc_line_geometry+0x14fc>

0801aae4 <cubic_decasteljau>:
 801aae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aae8:	ed2d 8b0a 	vpush	{d8-d12}
 801aaec:	4fd5      	ldr	r7, [pc, #852]	@ (801ae44 <cubic_decasteljau+0x360>)
 801aaee:	4bd6      	ldr	r3, [pc, #856]	@ (801ae48 <cubic_decasteljau+0x364>)
 801aaf0:	eeb0 8a40 	vmov.f32	s16, s0
 801aaf4:	eef0 8a60 	vmov.f32	s17, s1
 801aaf8:	eef0 ba43 	vmov.f32	s23, s6
 801aafc:	eeb0 ca63 	vmov.f32	s24, s7
 801ab00:	eeb0 aa41 	vmov.f32	s20, s2
 801ab04:	eeb0 9a61 	vmov.f32	s18, s3
 801ab08:	eef0 aa42 	vmov.f32	s21, s4
 801ab0c:	eef0 9a62 	vmov.f32	s19, s5
 801ab10:	edd7 6a00 	vldr	s13, [r7]
 801ab14:	ed93 6a00 	vldr	s12, [r3]
 801ab18:	2401      	movs	r4, #1
 801ab1a:	ed9f bacc 	vldr	s22, [pc, #816]	@ 801ae4c <cubic_decasteljau+0x368>
 801ab1e:	4dcc      	ldr	r5, [pc, #816]	@ (801ae50 <cubic_decasteljau+0x36c>)
 801ab20:	f8df a334 	ldr.w	sl, [pc, #820]	@ 801ae58 <cubic_decasteljau+0x374>
 801ab24:	b089      	sub	sp, #36	@ 0x24
 801ab26:	eeb4 8ae6 	vcmpe.f32	s16, s13
 801ab2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab2e:	dc14      	bgt.n	801ab5a <cubic_decasteljau+0x76>
 801ab30:	eef4 8ae6 	vcmpe.f32	s17, s13
 801ab34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab38:	dc0f      	bgt.n	801ab5a <cubic_decasteljau+0x76>
 801ab3a:	eeb4 8ac6 	vcmpe.f32	s16, s12
 801ab3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab42:	d40a      	bmi.n	801ab5a <cubic_decasteljau+0x76>
 801ab44:	eef4 8ac6 	vcmpe.f32	s17, s12
 801ab48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab4c:	d405      	bmi.n	801ab5a <cubic_decasteljau+0x76>
 801ab4e:	eeb4 aae6 	vcmpe.f32	s20, s13
 801ab52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab56:	f340 8129 	ble.w	801adac <cubic_decasteljau+0x2c8>
 801ab5a:	2300      	movs	r3, #0
 801ab5c:	ee76 7a0b 	vadd.f32	s15, s12, s22
 801ab60:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801ab64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab68:	ee36 7acb 	vsub.f32	s14, s13, s22
 801ab6c:	d50f      	bpl.n	801ab8e <cubic_decasteljau+0xaa>
 801ab6e:	eeb4 aae7 	vcmpe.f32	s20, s15
 801ab72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab76:	d50a      	bpl.n	801ab8e <cubic_decasteljau+0xaa>
 801ab78:	eef4 aae7 	vcmpe.f32	s21, s15
 801ab7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab80:	d505      	bpl.n	801ab8e <cubic_decasteljau+0xaa>
 801ab82:	eef4 bae7 	vcmpe.f32	s23, s15
 801ab86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab8a:	f100 80a7 	bmi.w	801acdc <cubic_decasteljau+0x1f8>
 801ab8e:	eeb4 8ac7 	vcmpe.f32	s16, s14
 801ab92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab96:	dd0f      	ble.n	801abb8 <cubic_decasteljau+0xd4>
 801ab98:	eeb4 aac7 	vcmpe.f32	s20, s14
 801ab9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aba0:	dd0a      	ble.n	801abb8 <cubic_decasteljau+0xd4>
 801aba2:	eef4 aac7 	vcmpe.f32	s21, s14
 801aba6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abaa:	dd05      	ble.n	801abb8 <cubic_decasteljau+0xd4>
 801abac:	eef4 bac7 	vcmpe.f32	s23, s14
 801abb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abb4:	f300 8092 	bgt.w	801acdc <cubic_decasteljau+0x1f8>
 801abb8:	eef4 8ae7 	vcmpe.f32	s17, s15
 801abbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abc0:	d50e      	bpl.n	801abe0 <cubic_decasteljau+0xfc>
 801abc2:	eeb4 9ae7 	vcmpe.f32	s18, s15
 801abc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abca:	d509      	bpl.n	801abe0 <cubic_decasteljau+0xfc>
 801abcc:	eef4 9ae7 	vcmpe.f32	s19, s15
 801abd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abd4:	d504      	bpl.n	801abe0 <cubic_decasteljau+0xfc>
 801abd6:	eeb4 cae7 	vcmpe.f32	s24, s15
 801abda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abde:	d47d      	bmi.n	801acdc <cubic_decasteljau+0x1f8>
 801abe0:	eef4 8ac7 	vcmpe.f32	s17, s14
 801abe4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abe8:	dd0e      	ble.n	801ac08 <cubic_decasteljau+0x124>
 801abea:	eeb4 9ac7 	vcmpe.f32	s18, s14
 801abee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abf2:	dd09      	ble.n	801ac08 <cubic_decasteljau+0x124>
 801abf4:	eef4 9ac7 	vcmpe.f32	s19, s14
 801abf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abfc:	dd04      	ble.n	801ac08 <cubic_decasteljau+0x124>
 801abfe:	eeb4 cac7 	vcmpe.f32	s24, s14
 801ac02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac06:	dc69      	bgt.n	801acdc <cubic_decasteljau+0x1f8>
 801ac08:	682a      	ldr	r2, [r5, #0]
 801ac0a:	2b00      	cmp	r3, #0
 801ac0c:	d077      	beq.n	801acfe <cubic_decasteljau+0x21a>
 801ac0e:	f8df e24c 	ldr.w	lr, [pc, #588]	@ 801ae5c <cubic_decasteljau+0x378>
 801ac12:	4b90      	ldr	r3, [pc, #576]	@ (801ae54 <cubic_decasteljau+0x370>)
 801ac14:	f8de 6000 	ldr.w	r6, [lr]
 801ac18:	e9d3 1004 	ldrd	r1, r0, [r3, #16]
 801ac1c:	3c01      	subs	r4, #1
 801ac1e:	f100 0901 	add.w	r9, r0, #1
 801ac22:	f101 0806 	add.w	r8, r1, #6
 801ac26:	2e00      	cmp	r6, #0
 801ac28:	d155      	bne.n	801acd6 <cubic_decasteljau+0x1f2>
 801ac2a:	681e      	ldr	r6, [r3, #0]
 801ac2c:	4286      	cmp	r6, r0
 801ac2e:	d828      	bhi.n	801ac82 <cubic_decasteljau+0x19e>
 801ac30:	2002      	movs	r0, #2
 801ac32:	2101      	movs	r1, #1
 801ac34:	f8c3 9014 	str.w	r9, [r3, #20]
 801ac38:	6298      	str	r0, [r3, #40]	@ 0x28
 801ac3a:	f8ce 1000 	str.w	r1, [lr]
 801ac3e:	f8c3 8010 	str.w	r8, [r3, #16]
 801ac42:	b1aa      	cbz	r2, 801ac70 <cubic_decasteljau+0x18c>
 801ac44:	3a01      	subs	r2, #1
 801ac46:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801ac4a:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 801ac4e:	eef0 8a4c 	vmov.f32	s17, s24
 801ac52:	eeb0 8a6b 	vmov.f32	s16, s23
 801ac56:	ed93 aa00 	vldr	s20, [r3]
 801ac5a:	ed93 9a01 	vldr	s18, [r3, #4]
 801ac5e:	edd3 aa02 	vldr	s21, [r3, #8]
 801ac62:	edd3 9a03 	vldr	s19, [r3, #12]
 801ac66:	ed93 ca05 	vldr	s24, [r3, #20]
 801ac6a:	edd3 ba04 	vldr	s23, [r3, #16]
 801ac6e:	602a      	str	r2, [r5, #0]
 801ac70:	2c00      	cmp	r4, #0
 801ac72:	f000 8094 	beq.w	801ad9e <cubic_decasteljau+0x2ba>
 801ac76:	4b74      	ldr	r3, [pc, #464]	@ (801ae48 <cubic_decasteljau+0x364>)
 801ac78:	edd7 6a00 	vldr	s13, [r7]
 801ac7c:	ed93 6a00 	vldr	s12, [r3]
 801ac80:	e751      	b.n	801ab26 <cubic_decasteljau+0x42>
 801ac82:	f04f 0b06 	mov.w	fp, #6
 801ac86:	f8c3 9014 	str.w	r9, [r3, #20]
 801ac8a:	e9d3 6901 	ldrd	r6, r9, [r3, #4]
 801ac8e:	f806 b000 	strb.w	fp, [r6, r0]
 801ac92:	1c48      	adds	r0, r1, #1
 801ac94:	4548      	cmp	r0, r9
 801ac96:	d218      	bcs.n	801acca <cubic_decasteljau+0x1e6>
 801ac98:	68d8      	ldr	r0, [r3, #12]
 801ac9a:	f101 0c03 	add.w	ip, r1, #3
 801ac9e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801aca2:	45e1      	cmp	r9, ip
 801aca4:	ed80 aa00 	vstr	s20, [r0]
 801aca8:	ed80 9a01 	vstr	s18, [r0, #4]
 801acac:	d90d      	bls.n	801acca <cubic_decasteljau+0x1e6>
 801acae:	3105      	adds	r1, #5
 801acb0:	4589      	cmp	r9, r1
 801acb2:	edc0 aa02 	vstr	s21, [r0, #8]
 801acb6:	edc0 9a03 	vstr	s19, [r0, #12]
 801acba:	d968      	bls.n	801ad8e <cubic_decasteljau+0x2aa>
 801acbc:	edc0 ba04 	vstr	s23, [r0, #16]
 801acc0:	f8c3 8010 	str.w	r8, [r3, #16]
 801acc4:	ed80 ca05 	vstr	s24, [r0, #20]
 801acc8:	e7bb      	b.n	801ac42 <cubic_decasteljau+0x15e>
 801acca:	2002      	movs	r0, #2
 801accc:	2101      	movs	r1, #1
 801acce:	6298      	str	r0, [r3, #40]	@ 0x28
 801acd0:	f8ce 1000 	str.w	r1, [lr]
 801acd4:	e7b3      	b.n	801ac3e <cubic_decasteljau+0x15a>
 801acd6:	f8c3 9014 	str.w	r9, [r3, #20]
 801acda:	e7b0      	b.n	801ac3e <cubic_decasteljau+0x15a>
 801acdc:	eeb0 1a6b 	vmov.f32	s2, s23
 801ace0:	eef0 1a4c 	vmov.f32	s3, s24
 801ace4:	eeb0 0a48 	vmov.f32	s0, s16
 801ace8:	eef0 0a68 	vmov.f32	s1, s17
 801acec:	f7fe fad6 	bl	801929c <calc_line_geometry>
 801acf0:	3c01      	subs	r4, #1
 801acf2:	4680      	mov	r8, r0
 801acf4:	2800      	cmp	r0, #0
 801acf6:	f040 809d 	bne.w	801ae34 <cubic_decasteljau+0x350>
 801acfa:	682a      	ldr	r2, [r5, #0]
 801acfc:	e7a1      	b.n	801ac42 <cubic_decasteljau+0x15e>
 801acfe:	2a09      	cmp	r2, #9
 801ad00:	dc85      	bgt.n	801ac0e <cubic_decasteljau+0x12a>
 801ad02:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801ad06:	ee3a 7a8a 	vadd.f32	s14, s21, s20
 801ad0a:	ee39 5a8c 	vadd.f32	s10, s19, s24
 801ad0e:	ee7a aaab 	vadd.f32	s21, s21, s23
 801ad12:	ee78 5a0a 	vadd.f32	s11, s16, s20
 801ad16:	ee79 9a29 	vadd.f32	s19, s18, s19
 801ad1a:	ee39 9a28 	vadd.f32	s18, s18, s17
 801ad1e:	ee2a 2aa7 	vmul.f32	s4, s21, s15
 801ad22:	ee25 aaa7 	vmul.f32	s20, s11, s15
 801ad26:	ee27 7a27 	vmul.f32	s14, s14, s15
 801ad2a:	ee25 5a27 	vmul.f32	s10, s10, s15
 801ad2e:	ee69 9aa7 	vmul.f32	s19, s19, s15
 801ad32:	ee29 9a27 	vmul.f32	s18, s18, s15
 801ad36:	ee7a aa07 	vadd.f32	s21, s20, s14
 801ad3a:	ee79 5a85 	vadd.f32	s11, s19, s10
 801ad3e:	ee37 7a02 	vadd.f32	s14, s14, s4
 801ad42:	ee79 9a29 	vadd.f32	s19, s18, s19
 801ad46:	ee27 7a27 	vmul.f32	s14, s14, s15
 801ad4a:	ee65 5aa7 	vmul.f32	s11, s11, s15
 801ad4e:	ee6a aaa7 	vmul.f32	s21, s21, s15
 801ad52:	ee69 9aa7 	vmul.f32	s19, s19, s15
 801ad56:	ee3a 4a87 	vadd.f32	s8, s21, s14
 801ad5a:	ee79 4aa5 	vadd.f32	s9, s19, s11
 801ad5e:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801ad62:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 801ad66:	3201      	adds	r2, #1
 801ad68:	edc3 ba04 	vstr	s23, [r3, #16]
 801ad6c:	ed83 ca05 	vstr	s24, [r3, #20]
 801ad70:	3401      	adds	r4, #1
 801ad72:	ed83 2a02 	vstr	s4, [r3, #8]
 801ad76:	ed83 7a00 	vstr	s14, [r3]
 801ad7a:	ee64 ba27 	vmul.f32	s23, s8, s15
 801ad7e:	ed83 5a03 	vstr	s10, [r3, #12]
 801ad82:	edc3 5a01 	vstr	s11, [r3, #4]
 801ad86:	ee24 caa7 	vmul.f32	s24, s9, s15
 801ad8a:	602a      	str	r2, [r5, #0]
 801ad8c:	e6cb      	b.n	801ab26 <cubic_decasteljau+0x42>
 801ad8e:	2002      	movs	r0, #2
 801ad90:	2101      	movs	r1, #1
 801ad92:	f8c3 8010 	str.w	r8, [r3, #16]
 801ad96:	6298      	str	r0, [r3, #40]	@ 0x28
 801ad98:	f8ce 1000 	str.w	r1, [lr]
 801ad9c:	e751      	b.n	801ac42 <cubic_decasteljau+0x15e>
 801ad9e:	46a0      	mov	r8, r4
 801ada0:	4640      	mov	r0, r8
 801ada2:	b009      	add	sp, #36	@ 0x24
 801ada4:	ecbd 8b0a 	vpop	{d8-d12}
 801ada8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801adac:	eeb4 9ae6 	vcmpe.f32	s18, s13
 801adb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801adb4:	f73f aed1 	bgt.w	801ab5a <cubic_decasteljau+0x76>
 801adb8:	eeb4 aac6 	vcmpe.f32	s20, s12
 801adbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801adc0:	f53f aecb 	bmi.w	801ab5a <cubic_decasteljau+0x76>
 801adc4:	eeb4 9ac6 	vcmpe.f32	s18, s12
 801adc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801adcc:	f53f aec5 	bmi.w	801ab5a <cubic_decasteljau+0x76>
 801add0:	eef4 aae6 	vcmpe.f32	s21, s13
 801add4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801add8:	f73f aebf 	bgt.w	801ab5a <cubic_decasteljau+0x76>
 801addc:	eef4 9ae6 	vcmpe.f32	s19, s13
 801ade0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ade4:	f73f aeb9 	bgt.w	801ab5a <cubic_decasteljau+0x76>
 801ade8:	eef4 aac6 	vcmpe.f32	s21, s12
 801adec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801adf0:	f53f aeb3 	bmi.w	801ab5a <cubic_decasteljau+0x76>
 801adf4:	eef4 9ac6 	vcmpe.f32	s19, s12
 801adf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801adfc:	f53f aead 	bmi.w	801ab5a <cubic_decasteljau+0x76>
 801ae00:	eef4 bae6 	vcmpe.f32	s23, s13
 801ae04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae08:	f73f aea7 	bgt.w	801ab5a <cubic_decasteljau+0x76>
 801ae0c:	eeb4 cae6 	vcmpe.f32	s24, s13
 801ae10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae14:	f73f aea1 	bgt.w	801ab5a <cubic_decasteljau+0x76>
 801ae18:	eef4 bac6 	vcmpe.f32	s23, s12
 801ae1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae20:	f53f ae9b 	bmi.w	801ab5a <cubic_decasteljau+0x76>
 801ae24:	eeb4 cac6 	vcmpe.f32	s24, s12
 801ae28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae2c:	bf54      	ite	pl
 801ae2e:	2301      	movpl	r3, #1
 801ae30:	2300      	movmi	r3, #0
 801ae32:	e693      	b.n	801ab5c <cubic_decasteljau+0x78>
 801ae34:	f001 fde6 	bl	801ca04 <nema_vg_set_error>
 801ae38:	4640      	mov	r0, r8
 801ae3a:	b009      	add	sp, #36	@ 0x24
 801ae3c:	ecbd 8b0a 	vpop	{d8-d12}
 801ae40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae44:	20000140 	.word	0x20000140
 801ae48:	20000144 	.word	0x20000144
 801ae4c:	42480000 	.word	0x42480000
 801ae50:	20083254 	.word	0x20083254
 801ae54:	20083110 	.word	0x20083110
 801ae58:	20083164 	.word	0x20083164
 801ae5c:	20083108 	.word	0x20083108

0801ae60 <arc_to_cubic>:
 801ae60:	b530      	push	{r4, r5, lr}
 801ae62:	ed2d 8b0e 	vpush	{d8-d14}
 801ae66:	eddf 8ab7 	vldr	s17, [pc, #732]	@ 801b144 <arc_to_cubic+0x2e4>
 801ae6a:	ee60 9a28 	vmul.f32	s19, s0, s17
 801ae6e:	ee60 8aa8 	vmul.f32	s17, s1, s17
 801ae72:	eeb5 0a00 	vmov.f32	s0, #80	@ 0x3e800000  0.250
 801ae76:	ee78 8ae9 	vsub.f32	s17, s17, s19
 801ae7a:	b093      	sub	sp, #76	@ 0x4c
 801ae7c:	ee28 0a80 	vmul.f32	s0, s17, s0
 801ae80:	4604      	mov	r4, r0
 801ae82:	460d      	mov	r5, r1
 801ae84:	eef0 ba41 	vmov.f32	s23, s2
 801ae88:	eeb0 ca61 	vmov.f32	s24, s3
 801ae8c:	eef0 ca42 	vmov.f32	s25, s4
 801ae90:	eeb0 da62 	vmov.f32	s26, s5
 801ae94:	ed9f 8aac 	vldr	s16, [pc, #688]	@ 801b148 <arc_to_cubic+0x2e8>
 801ae98:	f016 fb16 	bl	80314c8 <tanf>
 801ae9c:	ee20 8a08 	vmul.f32	s16, s0, s16
 801aea0:	eeb0 0a68 	vmov.f32	s0, s17
 801aea4:	f016 fa7e 	bl	80313a4 <cosf>
 801aea8:	eeb0 9a40 	vmov.f32	s18, s0
 801aeac:	eeb0 0a68 	vmov.f32	s0, s17
 801aeb0:	f016 fac4 	bl	803143c <sinf>
 801aeb4:	ed94 7a09 	vldr	s14, [r4, #36]	@ 0x24
 801aeb8:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 801b14c <arc_to_cubic+0x2ec>
 801aebc:	ee87 ea27 	vdiv.f32	s28, s14, s15
 801aec0:	eddf 7aa3 	vldr	s15, [pc, #652]	@ 801b150 <arc_to_cubic+0x2f0>
 801aec4:	eeb0 ba40 	vmov.f32	s22, s0
 801aec8:	ee68 8a00 	vmul.f32	s17, s16, s0
 801aecc:	eeb0 0a69 	vmov.f32	s0, s19
 801aed0:	ee2e ea27 	vmul.f32	s28, s28, s15
 801aed4:	f016 fa66 	bl	80313a4 <cosf>
 801aed8:	eef0 aa40 	vmov.f32	s21, s0
 801aedc:	eeb0 0a69 	vmov.f32	s0, s19
 801aee0:	f016 faac 	bl	803143c <sinf>
 801aee4:	eeb0 aa40 	vmov.f32	s20, s0
 801aee8:	eeb0 0a4e 	vmov.f32	s0, s28
 801aeec:	f016 fa5a 	bl	80313a4 <cosf>
 801aef0:	ee68 da09 	vmul.f32	s27, s16, s18
 801aef4:	eef0 9a40 	vmov.f32	s19, s0
 801aef8:	eeb0 0a4e 	vmov.f32	s0, s28
 801aefc:	f016 fa9e 	bl	803143c <sinf>
 801af00:	4b94      	ldr	r3, [pc, #592]	@ (801b154 <arc_to_cubic+0x2f4>)
 801af02:	07e9      	lsls	r1, r5, #31
 801af04:	ee78 8a89 	vadd.f32	s17, s17, s18
 801af08:	ee7b da6d 	vsub.f32	s27, s22, s27
 801af0c:	781b      	ldrb	r3, [r3, #0]
 801af0e:	f140 80a8 	bpl.w	801b062 <arc_to_cubic+0x202>
 801af12:	ed94 7a03 	vldr	s14, [r4, #12]
 801af16:	edd4 0a04 	vldr	s1, [r4, #16]
 801af1a:	ee6d 6a8a 	vmul.f32	s13, s27, s20
 801af1e:	ee68 1a0a 	vmul.f32	s3, s16, s20
 801af22:	ee68 7aaa 	vmul.f32	s15, s17, s21
 801af26:	ee28 8a2a 	vmul.f32	s16, s16, s21
 801af2a:	ee68 8a8a 	vmul.f32	s17, s17, s20
 801af2e:	ee6d daaa 	vmul.f32	s27, s27, s21
 801af32:	eddf 2a89 	vldr	s5, [pc, #548]	@ 801b158 <arc_to_cubic+0x2f8>
 801af36:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801af3a:	ee7a 1ae1 	vsub.f32	s3, s21, s3
 801af3e:	ee38 8a0a 	vadd.f32	s16, s16, s20
 801af42:	ee78 8aad 	vadd.f32	s17, s17, s27
 801af46:	ee71 1aa2 	vadd.f32	s3, s3, s5
 801af4a:	ee38 8a22 	vadd.f32	s16, s16, s5
 801af4e:	ee77 7aa2 	vadd.f32	s15, s15, s5
 801af52:	ee78 8aa2 	vadd.f32	s17, s17, s5
 801af56:	ee61 1aac 	vmul.f32	s3, s3, s25
 801af5a:	ee28 8a0d 	vmul.f32	s16, s16, s26
 801af5e:	ee67 7aac 	vmul.f32	s15, s15, s25
 801af62:	ee68 8a8d 	vmul.f32	s17, s17, s26
 801af66:	ee29 1aa1 	vmul.f32	s2, s19, s3
 801af6a:	ee20 6a08 	vmul.f32	s12, s0, s16
 801af6e:	ee29 2aa7 	vmul.f32	s4, s19, s15
 801af72:	ee60 6a28 	vmul.f32	s13, s0, s17
 801af76:	ee60 1a21 	vmul.f32	s3, s0, s3
 801af7a:	ee29 8a88 	vmul.f32	s16, s19, s16
 801af7e:	ee60 7a27 	vmul.f32	s15, s0, s15
 801af82:	ee69 8aa8 	vmul.f32	s17, s19, s17
 801af86:	ee31 1a46 	vsub.f32	s2, s2, s12
 801af8a:	ee31 8a88 	vadd.f32	s16, s3, s16
 801af8e:	ee32 2a66 	vsub.f32	s4, s4, s13
 801af92:	ee77 8aa8 	vadd.f32	s17, s15, s17
 801af96:	07aa      	lsls	r2, r5, #30
 801af98:	ee31 1a2b 	vadd.f32	s2, s2, s23
 801af9c:	ee38 8a0c 	vadd.f32	s16, s16, s24
 801afa0:	ee32 2a2b 	vadd.f32	s4, s4, s23
 801afa4:	ee78 8a8c 	vadd.f32	s17, s17, s24
 801afa8:	d517      	bpl.n	801afda <arc_to_cubic+0x17a>
 801afaa:	ed94 3a05 	vldr	s6, [r4, #20]
 801afae:	edd4 3a06 	vldr	s7, [r4, #24]
 801afb2:	2b00      	cmp	r3, #0
 801afb4:	f040 8098 	bne.w	801b0e8 <arc_to_cubic+0x288>
 801afb8:	eef0 2a68 	vmov.f32	s5, s17
 801afbc:	eef0 1a48 	vmov.f32	s3, s16
 801afc0:	eeb0 0a47 	vmov.f32	s0, s14
 801afc4:	f7ff fd8e 	bl	801aae4 <cubic_decasteljau>
 801afc8:	4604      	mov	r4, r0
 801afca:	b108      	cbz	r0, 801afd0 <arc_to_cubic+0x170>
 801afcc:	f001 fd1a 	bl	801ca04 <nema_vg_set_error>
 801afd0:	4620      	mov	r0, r4
 801afd2:	b013      	add	sp, #76	@ 0x4c
 801afd4:	ecbd 8b0e 	vpop	{d8-d14}
 801afd8:	bd30      	pop	{r4, r5, pc}
 801afda:	ee69 6a2a 	vmul.f32	s13, s18, s21
 801afde:	ee29 9a0a 	vmul.f32	s18, s18, s20
 801afe2:	ee6b aa2a 	vmul.f32	s21, s22, s21
 801afe6:	ee2b aa0a 	vmul.f32	s20, s22, s20
 801afea:	ee79 aa2a 	vadd.f32	s21, s18, s21
 801afee:	ee36 aaca 	vsub.f32	s20, s13, s20
 801aff2:	ee3a aa22 	vadd.f32	s20, s20, s5
 801aff6:	ee7a 2aa2 	vadd.f32	s5, s21, s5
 801affa:	ee6a ca2c 	vmul.f32	s25, s20, s25
 801affe:	ee22 da8d 	vmul.f32	s26, s5, s26
 801b002:	ee29 3aac 	vmul.f32	s6, s19, s25
 801b006:	ee69 3a8d 	vmul.f32	s7, s19, s26
 801b00a:	ee60 ca2c 	vmul.f32	s25, s0, s25
 801b00e:	ee20 0a0d 	vmul.f32	s0, s0, s26
 801b012:	ee7c 3aa3 	vadd.f32	s7, s25, s7
 801b016:	ee33 0a40 	vsub.f32	s0, s6, s0
 801b01a:	ee73 3a8c 	vadd.f32	s7, s7, s24
 801b01e:	ee30 3a2b 	vadd.f32	s6, s0, s23
 801b022:	2b00      	cmp	r3, #0
 801b024:	d0c8      	beq.n	801afb8 <arc_to_cubic+0x158>
 801b026:	4b4d      	ldr	r3, [pc, #308]	@ (801b15c <arc_to_cubic+0x2fc>)
 801b028:	ed93 6a00 	vldr	s12, [r3]
 801b02c:	edd3 5a01 	vldr	s11, [r3, #4]
 801b030:	edd3 6a03 	vldr	s13, [r3, #12]
 801b034:	edd3 2a04 	vldr	s5, [r3, #16]
 801b038:	ee23 5aa5 	vmul.f32	s10, s7, s11
 801b03c:	ee63 ba26 	vmul.f32	s23, s6, s13
 801b040:	ee23 0a06 	vmul.f32	s0, s6, s12
 801b044:	ee63 3aa2 	vmul.f32	s7, s7, s5
 801b048:	ee30 3a05 	vadd.f32	s6, s0, s10
 801b04c:	ed93 4a02 	vldr	s8, [r3, #8]
 801b050:	ee7b 3aa3 	vadd.f32	s7, s23, s7
 801b054:	edd3 4a05 	vldr	s9, [r3, #20]
 801b058:	ee33 3a04 	vadd.f32	s6, s6, s8
 801b05c:	ee73 3aa4 	vadd.f32	s7, s7, s9
 801b060:	e04f      	b.n	801b102 <arc_to_cubic+0x2a2>
 801b062:	eddf 0a3d 	vldr	s1, [pc, #244]	@ 801b158 <arc_to_cubic+0x2f8>
 801b066:	ee6a 7a20 	vmul.f32	s15, s20, s1
 801b06a:	ee6a 6aa0 	vmul.f32	s13, s21, s1
 801b06e:	ee7a 7ae7 	vsub.f32	s15, s21, s15
 801b072:	ee76 6a8a 	vadd.f32	s13, s13, s20
 801b076:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801b07a:	ee76 6aa0 	vadd.f32	s13, s13, s1
 801b07e:	ee67 7aac 	vmul.f32	s15, s15, s25
 801b082:	ee66 6a8d 	vmul.f32	s13, s13, s26
 801b086:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b08a:	ee60 0a27 	vmul.f32	s1, s0, s15
 801b08e:	ee60 7a26 	vmul.f32	s15, s0, s13
 801b092:	ee69 6aa6 	vmul.f32	s13, s19, s13
 801b096:	ee37 7a67 	vsub.f32	s14, s14, s15
 801b09a:	ee70 0aa6 	vadd.f32	s1, s1, s13
 801b09e:	ee37 7a2b 	vadd.f32	s14, s14, s23
 801b0a2:	ee70 0a8c 	vadd.f32	s1, s1, s24
 801b0a6:	2b00      	cmp	r3, #0
 801b0a8:	f43f af37 	beq.w	801af1a <arc_to_cubic+0xba>
 801b0ac:	4a2b      	ldr	r2, [pc, #172]	@ (801b15c <arc_to_cubic+0x2fc>)
 801b0ae:	edd2 6a00 	vldr	s13, [r2]
 801b0b2:	edd2 5a01 	vldr	s11, [r2, #4]
 801b0b6:	edd2 7a03 	vldr	s15, [r2, #12]
 801b0ba:	ed92 6a04 	vldr	s12, [r2, #16]
 801b0be:	ee67 7a27 	vmul.f32	s15, s14, s15
 801b0c2:	ee67 6a26 	vmul.f32	s13, s14, s13
 801b0c6:	ee60 5aa5 	vmul.f32	s11, s1, s11
 801b0ca:	ee60 0a86 	vmul.f32	s1, s1, s12
 801b0ce:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801b0d2:	ee77 0aa0 	vadd.f32	s1, s15, s1
 801b0d6:	ed92 7a02 	vldr	s14, [r2, #8]
 801b0da:	edd2 7a05 	vldr	s15, [r2, #20]
 801b0de:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b0e2:	ee70 0aa7 	vadd.f32	s1, s1, s15
 801b0e6:	e718      	b.n	801af1a <arc_to_cubic+0xba>
 801b0e8:	4b1c      	ldr	r3, [pc, #112]	@ (801b15c <arc_to_cubic+0x2fc>)
 801b0ea:	ed93 6a00 	vldr	s12, [r3]
 801b0ee:	edd3 5a01 	vldr	s11, [r3, #4]
 801b0f2:	ed93 4a02 	vldr	s8, [r3, #8]
 801b0f6:	edd3 6a03 	vldr	s13, [r3, #12]
 801b0fa:	edd3 2a04 	vldr	s5, [r3, #16]
 801b0fe:	edd3 4a05 	vldr	s9, [r3, #20]
 801b102:	ee21 5a06 	vmul.f32	s10, s2, s12
 801b106:	ee65 1a88 	vmul.f32	s3, s11, s16
 801b10a:	ee21 1a26 	vmul.f32	s2, s2, s13
 801b10e:	ee22 6a06 	vmul.f32	s12, s4, s12
 801b112:	ee62 6a26 	vmul.f32	s13, s4, s13
 801b116:	ee68 7aa2 	vmul.f32	s15, s17, s5
 801b11a:	ee25 2aa8 	vmul.f32	s4, s11, s17
 801b11e:	ee28 8a22 	vmul.f32	s16, s16, s5
 801b122:	ee75 5a21 	vadd.f32	s11, s10, s3
 801b126:	ee31 8a08 	vadd.f32	s16, s2, s16
 801b12a:	ee36 2a02 	vadd.f32	s4, s12, s4
 801b12e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801b132:	ee35 1a84 	vadd.f32	s2, s11, s8
 801b136:	ee38 8a24 	vadd.f32	s16, s16, s9
 801b13a:	ee32 2a04 	vadd.f32	s4, s4, s8
 801b13e:	ee77 8aa4 	vadd.f32	s17, s15, s9
 801b142:	e739      	b.n	801afb8 <arc_to_cubic+0x158>
 801b144:	3c8efa35 	.word	0x3c8efa35
 801b148:	3faaaaab 	.word	0x3faaaaab
 801b14c:	43340000 	.word	0x43340000
 801b150:	40490fdb 	.word	0x40490fdb
 801b154:	2008313c 	.word	0x2008313c
 801b158:	00000000 	.word	0x00000000
 801b15c:	20083140 	.word	0x20083140

0801b160 <calc_new_geometry>:
 801b160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b164:	ed2d 8b10 	vpush	{d8-d15}
 801b168:	b0a1      	sub	sp, #132	@ 0x84
 801b16a:	4682      	mov	sl, r0
 801b16c:	2248      	movs	r2, #72	@ 0x48
 801b16e:	a80e      	add	r0, sp, #56	@ 0x38
 801b170:	2100      	movs	r1, #0
 801b172:	f017 fb90 	bl	8032896 <memset>
 801b176:	2201      	movs	r2, #1
 801b178:	2300      	movs	r3, #0
 801b17a:	f88d 2038 	strb.w	r2, [sp, #56]	@ 0x38
 801b17e:	f88d 203a 	strb.w	r2, [sp, #58]	@ 0x3a
 801b182:	f8da 2000 	ldr.w	r2, [sl]
 801b186:	ed9f ba80 	vldr	s22, [pc, #512]	@ 801b388 <calc_new_geometry+0x228>
 801b18a:	429a      	cmp	r2, r3
 801b18c:	ed9f aa7f 	vldr	s20, [pc, #508]	@ 801b38c <calc_new_geometry+0x22c>
 801b190:	eddf aa7f 	vldr	s21, [pc, #508]	@ 801b390 <calc_new_geometry+0x230>
 801b194:	eddf 9a7f 	vldr	s19, [pc, #508]	@ 801b394 <calc_new_geometry+0x234>
 801b198:	ed9f 9a7f 	vldr	s18, [pc, #508]	@ 801b398 <calc_new_geometry+0x238>
 801b19c:	f240 80e7 	bls.w	801b36e <calc_new_geometry+0x20e>
 801b1a0:	2200      	movs	r2, #0
 801b1a2:	f8da 1008 	ldr.w	r1, [sl, #8]
 801b1a6:	f8df b1f8 	ldr.w	fp, [pc, #504]	@ 801b3a0 <calc_new_geometry+0x240>
 801b1aa:	5ccc      	ldrb	r4, [r1, r3]
 801b1ac:	af13      	add	r7, sp, #76	@ 0x4c
 801b1ae:	f004 066f 	and.w	r6, r4, #111	@ 0x6f
 801b1b2:	ad11      	add	r5, sp, #68	@ 0x44
 801b1b4:	3301      	adds	r3, #1
 801b1b6:	2e01      	cmp	r6, #1
 801b1b8:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b1bc:	9301      	str	r3, [sp, #4]
 801b1be:	f004 0910 	and.w	r9, r4, #16
 801b1c2:	f8cb 2024 	str.w	r2, [fp, #36]	@ 0x24
 801b1c6:	e885 0003 	stmia.w	r5, {r0, r1}
 801b1ca:	f000 8244 	beq.w	801b656 <calc_new_geometry+0x4f6>
 801b1ce:	0663      	lsls	r3, r4, #25
 801b1d0:	f000 8229 	beq.w	801b626 <calc_new_geometry+0x4c6>
 801b1d4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b1d6:	f89d e07c 	ldrb.w	lr, [sp, #124]	@ 0x7c
 801b1da:	bb63      	cbnz	r3, 801b236 <calc_new_geometry+0xd6>
 801b1dc:	2201      	movs	r2, #1
 801b1de:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801b3a4 <calc_new_geometry+0x244>
 801b1e2:	f88d 2038 	strb.w	r2, [sp, #56]	@ 0x38
 801b1e6:	f898 2000 	ldrb.w	r2, [r8]
 801b1ea:	b322      	cbz	r2, 801b236 <calc_new_geometry+0xd6>
 801b1ec:	4a6b      	ldr	r2, [pc, #428]	@ (801b39c <calc_new_geometry+0x23c>)
 801b1ee:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 801b1f2:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801b1f6:	ed92 6a03 	vldr	s12, [r2, #12]
 801b1fa:	edd2 6a04 	vldr	s13, [r2, #16]
 801b1fe:	ed92 5a00 	vldr	s10, [r2]
 801b202:	edd2 5a01 	vldr	s11, [r2, #4]
 801b206:	ee27 5a05 	vmul.f32	s10, s14, s10
 801b20a:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801b20e:	ee27 7a06 	vmul.f32	s14, s14, s12
 801b212:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b216:	ee35 6a25 	vadd.f32	s12, s10, s11
 801b21a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801b21e:	edd2 6a02 	vldr	s13, [r2, #8]
 801b222:	edd2 7a05 	vldr	s15, [r2, #20]
 801b226:	ee76 6a26 	vadd.f32	s13, s12, s13
 801b22a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b22e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801b232:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 801b236:	f04f 0800 	mov.w	r8, #0
 801b23a:	f8da 200c 	ldr.w	r2, [sl, #12]
 801b23e:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801b242:	eb02 010c 	add.w	r1, r2, ip
 801b246:	1c58      	adds	r0, r3, #1
 801b248:	2e06      	cmp	r6, #6
 801b24a:	f88d 803a 	strb.w	r8, [sp, #58]	@ 0x3a
 801b24e:	9103      	str	r1, [sp, #12]
 801b250:	4680      	mov	r8, r0
 801b252:	f000 833c 	beq.w	801b8ce <calc_new_geometry+0x76e>
 801b256:	2e05      	cmp	r6, #5
 801b258:	f000 84a7 	beq.w	801bbaa <calc_new_geometry+0xa4a>
 801b25c:	2e07      	cmp	r6, #7
 801b25e:	f00e 0e6f 	and.w	lr, lr, #111	@ 0x6f
 801b262:	f000 84f2 	beq.w	801bc4a <calc_new_geometry+0xaea>
 801b266:	2e08      	cmp	r6, #8
 801b268:	f000 8727 	beq.w	801c0ba <calc_new_geometry+0xf5a>
 801b26c:	f004 000f 	and.w	r0, r4, #15
 801b270:	2809      	cmp	r0, #9
 801b272:	9002      	str	r0, [sp, #8]
 801b274:	f000 86d7 	beq.w	801c026 <calc_new_geometry+0xec6>
 801b278:	2e04      	cmp	r6, #4
 801b27a:	f040 83bc 	bne.w	801b9f6 <calc_new_geometry+0x896>
 801b27e:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801b282:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b286:	9b03      	ldr	r3, [sp, #12]
 801b288:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801b28c:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801b290:	ed93 7a00 	vldr	s14, [r3]
 801b294:	f1b9 0f00 	cmp.w	r9, #0
 801b298:	f000 84d1 	beq.w	801bc3e <calc_new_geometry+0xade>
 801b29c:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b2a0:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b2a4:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b2a8:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 801b3a4 <calc_new_geometry+0x244>
 801b2ac:	f898 3000 	ldrb.w	r3, [r8]
 801b2b0:	edcd 7a19 	vstr	s15, [sp, #100]	@ 0x64
 801b2b4:	ed8d 7a1a 	vstr	s14, [sp, #104]	@ 0x68
 801b2b8:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801b2bc:	b303      	cbz	r3, 801b300 <calc_new_geometry+0x1a0>
 801b2be:	4b37      	ldr	r3, [pc, #220]	@ (801b39c <calc_new_geometry+0x23c>)
 801b2c0:	ed93 6a03 	vldr	s12, [r3, #12]
 801b2c4:	edd3 6a04 	vldr	s13, [r3, #16]
 801b2c8:	ed93 5a00 	vldr	s10, [r3]
 801b2cc:	edd3 5a01 	vldr	s11, [r3, #4]
 801b2d0:	ee27 5a85 	vmul.f32	s10, s15, s10
 801b2d4:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b2d8:	ee67 7a86 	vmul.f32	s15, s15, s12
 801b2dc:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b2e0:	ee75 5a25 	vadd.f32	s11, s10, s11
 801b2e4:	ee77 7a87 	vadd.f32	s15, s15, s14
 801b2e8:	ed93 6a02 	vldr	s12, [r3, #8]
 801b2ec:	edd3 6a05 	vldr	s13, [r3, #20]
 801b2f0:	ee35 7a86 	vadd.f32	s14, s11, s12
 801b2f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801b2f8:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801b2fc:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801b300:	2a01      	cmp	r2, #1
 801b302:	f000 826c 	beq.w	801b7de <calc_new_geometry+0x67e>
 801b306:	f004 036d 	and.w	r3, r4, #109	@ 0x6d
 801b30a:	2b05      	cmp	r3, #5
 801b30c:	d04c      	beq.n	801b3a8 <calc_new_geometry+0x248>
 801b30e:	2e06      	cmp	r6, #6
 801b310:	f000 81d7 	beq.w	801b6c2 <calc_new_geometry+0x562>
 801b314:	2e08      	cmp	r6, #8
 801b316:	f000 81d4 	beq.w	801b6c2 <calc_new_geometry+0x562>
 801b31a:	f004 030f 	and.w	r3, r4, #15
 801b31e:	9302      	str	r3, [sp, #8]
 801b320:	9b02      	ldr	r3, [sp, #8]
 801b322:	2b09      	cmp	r3, #9
 801b324:	f000 83fd 	beq.w	801bb22 <calc_new_geometry+0x9c2>
 801b328:	f1a6 030a 	sub.w	r3, r6, #10
 801b32c:	2b01      	cmp	r3, #1
 801b32e:	d918      	bls.n	801b362 <calc_new_geometry+0x202>
 801b330:	1eb3      	subs	r3, r6, #2
 801b332:	2b02      	cmp	r3, #2
 801b334:	f240 82bc 	bls.w	801b8b0 <calc_new_geometry+0x750>
 801b338:	2e01      	cmp	r6, #1
 801b33a:	f000 86f4 	beq.w	801c126 <calc_new_geometry+0xfc6>
 801b33e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 801b342:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801b346:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801b34a:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b34e:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b352:	f8cb 3024 	str.w	r3, [fp, #36]	@ 0x24
 801b356:	f7fd ffa1 	bl	801929c <calc_line_geometry>
 801b35a:	4601      	mov	r1, r0
 801b35c:	2800      	cmp	r0, #0
 801b35e:	f040 81c6 	bne.w	801b6ee <calc_new_geometry+0x58e>
 801b362:	9b01      	ldr	r3, [sp, #4]
 801b364:	f8da 2000 	ldr.w	r2, [sl]
 801b368:	429a      	cmp	r2, r3
 801b36a:	f63f af19 	bhi.w	801b1a0 <calc_new_geometry+0x40>
 801b36e:	f89d 3039 	ldrb.w	r3, [sp, #57]	@ 0x39
 801b372:	2b01      	cmp	r3, #1
 801b374:	f000 8720 	beq.w	801c1b8 <calc_new_geometry+0x1058>
 801b378:	2100      	movs	r1, #0
 801b37a:	4608      	mov	r0, r1
 801b37c:	b021      	add	sp, #132	@ 0x84
 801b37e:	ecbd 8b10 	vpop	{d8-d15}
 801b382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b386:	bf00      	nop
 801b388:	3c8efa35 	.word	0x3c8efa35
 801b38c:	42652ee1 	.word	0x42652ee1
 801b390:	43340000 	.word	0x43340000
 801b394:	42b40000 	.word	0x42b40000
 801b398:	00000000 	.word	0x00000000
 801b39c:	20083140 	.word	0x20083140
 801b3a0:	20083110 	.word	0x20083110
 801b3a4:	2008313c 	.word	0x2008313c
 801b3a8:	f8df 836c 	ldr.w	r8, [pc, #876]	@ 801b718 <calc_new_geometry+0x5b8>
 801b3ac:	4ed5      	ldr	r6, [pc, #852]	@ (801b704 <calc_new_geometry+0x5a4>)
 801b3ae:	edd8 6a00 	vldr	s13, [r8]
 801b3b2:	e895 0003 	ldmia.w	r5, {r0, r1}
 801b3b6:	ed96 6a00 	vldr	s12, [r6]
 801b3ba:	ed9d 8a11 	vldr	s16, [sp, #68]	@ 0x44
 801b3be:	eddd 8a12 	vldr	s17, [sp, #72]	@ 0x48
 801b3c2:	eddd ba15 	vldr	s23, [sp, #84]	@ 0x54
 801b3c6:	ed9d ca16 	vldr	s24, [sp, #88]	@ 0x58
 801b3ca:	eddd ca13 	vldr	s25, [sp, #76]	@ 0x4c
 801b3ce:	ed9d da14 	vldr	s26, [sp, #80]	@ 0x50
 801b3d2:	2401      	movs	r4, #1
 801b3d4:	eddf dacc 	vldr	s27, [pc, #816]	@ 801b708 <calc_new_geometry+0x5a8>
 801b3d8:	aa0a      	add	r2, sp, #40	@ 0x28
 801b3da:	ab0c      	add	r3, sp, #48	@ 0x30
 801b3dc:	e882 0003 	stmia.w	r2, {r0, r1}
 801b3e0:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b3e4:	e883 0003 	stmia.w	r3, {r0, r1}
 801b3e8:	4dc8      	ldr	r5, [pc, #800]	@ (801b70c <calc_new_geometry+0x5ac>)
 801b3ea:	eeb4 8ae6 	vcmpe.f32	s16, s13
 801b3ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b3f2:	dc23      	bgt.n	801b43c <calc_new_geometry+0x2dc>
 801b3f4:	eef4 8ae6 	vcmpe.f32	s17, s13
 801b3f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b3fc:	dc1e      	bgt.n	801b43c <calc_new_geometry+0x2dc>
 801b3fe:	eeb4 8ac6 	vcmpe.f32	s16, s12
 801b402:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b406:	d419      	bmi.n	801b43c <calc_new_geometry+0x2dc>
 801b408:	eef4 8ac6 	vcmpe.f32	s17, s12
 801b40c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b410:	d414      	bmi.n	801b43c <calc_new_geometry+0x2dc>
 801b412:	eef4 bae6 	vcmpe.f32	s23, s13
 801b416:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b41a:	dc0f      	bgt.n	801b43c <calc_new_geometry+0x2dc>
 801b41c:	eeb4 cae6 	vcmpe.f32	s24, s13
 801b420:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b424:	dc0a      	bgt.n	801b43c <calc_new_geometry+0x2dc>
 801b426:	eef4 bac6 	vcmpe.f32	s23, s12
 801b42a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b42e:	d405      	bmi.n	801b43c <calc_new_geometry+0x2dc>
 801b430:	eeb4 cac6 	vcmpe.f32	s24, s12
 801b434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b438:	f140 845c 	bpl.w	801bcf4 <calc_new_geometry+0xb94>
 801b43c:	2200      	movs	r2, #0
 801b43e:	ee76 7a2d 	vadd.f32	s15, s12, s27
 801b442:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801b446:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b44a:	ee36 7aed 	vsub.f32	s14, s13, s27
 801b44e:	d509      	bpl.n	801b464 <calc_new_geometry+0x304>
 801b450:	eef4 bae7 	vcmpe.f32	s23, s15
 801b454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b458:	d504      	bpl.n	801b464 <calc_new_geometry+0x304>
 801b45a:	eef4 cae7 	vcmpe.f32	s25, s15
 801b45e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b462:	d463      	bmi.n	801b52c <calc_new_geometry+0x3cc>
 801b464:	eeb4 8ac7 	vcmpe.f32	s16, s14
 801b468:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b46c:	dd09      	ble.n	801b482 <calc_new_geometry+0x322>
 801b46e:	eef4 bac7 	vcmpe.f32	s23, s14
 801b472:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b476:	dd04      	ble.n	801b482 <calc_new_geometry+0x322>
 801b478:	eef4 cac7 	vcmpe.f32	s25, s14
 801b47c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b480:	dc54      	bgt.n	801b52c <calc_new_geometry+0x3cc>
 801b482:	eef4 8ae7 	vcmpe.f32	s17, s15
 801b486:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b48a:	d509      	bpl.n	801b4a0 <calc_new_geometry+0x340>
 801b48c:	eeb4 cae7 	vcmpe.f32	s24, s15
 801b490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b494:	d504      	bpl.n	801b4a0 <calc_new_geometry+0x340>
 801b496:	eeb4 dae7 	vcmpe.f32	s26, s15
 801b49a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b49e:	d445      	bmi.n	801b52c <calc_new_geometry+0x3cc>
 801b4a0:	eef4 8ac7 	vcmpe.f32	s17, s14
 801b4a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4a8:	dd09      	ble.n	801b4be <calc_new_geometry+0x35e>
 801b4aa:	eeb4 cac7 	vcmpe.f32	s24, s14
 801b4ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4b2:	dd04      	ble.n	801b4be <calc_new_geometry+0x35e>
 801b4b4:	eeb4 dac7 	vcmpe.f32	s26, s14
 801b4b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4bc:	dc36      	bgt.n	801b52c <calc_new_geometry+0x3cc>
 801b4be:	682b      	ldr	r3, [r5, #0]
 801b4c0:	2a00      	cmp	r2, #0
 801b4c2:	d073      	beq.n	801b5ac <calc_new_geometry+0x44c>
 801b4c4:	e9db 2104 	ldrd	r2, r1, [fp, #16]
 801b4c8:	4891      	ldr	r0, [pc, #580]	@ (801b710 <calc_new_geometry+0x5b0>)
 801b4ca:	3c01      	subs	r4, #1
 801b4cc:	6807      	ldr	r7, [r0, #0]
 801b4ce:	f101 0c01 	add.w	ip, r1, #1
 801b4d2:	f102 0904 	add.w	r9, r2, #4
 801b4d6:	2f00      	cmp	r7, #0
 801b4d8:	d152      	bne.n	801b580 <calc_new_geometry+0x420>
 801b4da:	f8db 7000 	ldr.w	r7, [fp]
 801b4de:	428f      	cmp	r7, r1
 801b4e0:	d83d      	bhi.n	801b55e <calc_new_geometry+0x3fe>
 801b4e2:	2102      	movs	r1, #2
 801b4e4:	2201      	movs	r2, #1
 801b4e6:	f8cb c014 	str.w	ip, [fp, #20]
 801b4ea:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b4ee:	6002      	str	r2, [r0, #0]
 801b4f0:	f8cb 9010 	str.w	r9, [fp, #16]
 801b4f4:	b193      	cbz	r3, 801b51c <calc_new_geometry+0x3bc>
 801b4f6:	3b01      	subs	r3, #1
 801b4f8:	4986      	ldr	r1, [pc, #536]	@ (801b714 <calc_new_geometry+0x5b4>)
 801b4fa:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801b4fe:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 801b502:	ed92 8a00 	vldr	s16, [r2]
 801b506:	edd2 8a01 	vldr	s17, [r2, #4]
 801b50a:	edd2 ba02 	vldr	s23, [r2, #8]
 801b50e:	ed92 ca03 	vldr	s24, [r2, #12]
 801b512:	edd2 ca04 	vldr	s25, [r2, #16]
 801b516:	ed92 da05 	vldr	s26, [r2, #20]
 801b51a:	602b      	str	r3, [r5, #0]
 801b51c:	2c00      	cmp	r4, #0
 801b51e:	f43f af20 	beq.w	801b362 <calc_new_geometry+0x202>
 801b522:	edd8 6a00 	vldr	s13, [r8]
 801b526:	ed96 6a00 	vldr	s12, [r6]
 801b52a:	e75e      	b.n	801b3ea <calc_new_geometry+0x28a>
 801b52c:	eeb0 1a6c 	vmov.f32	s2, s25
 801b530:	eef0 1a4d 	vmov.f32	s3, s26
 801b534:	eeb0 0a48 	vmov.f32	s0, s16
 801b538:	eef0 0a68 	vmov.f32	s1, s17
 801b53c:	ed8d 8a0a 	vstr	s16, [sp, #40]	@ 0x28
 801b540:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
 801b544:	edcd ca0c 	vstr	s25, [sp, #48]	@ 0x30
 801b548:	ed8d da0d 	vstr	s26, [sp, #52]	@ 0x34
 801b54c:	f7fd fea6 	bl	801929c <calc_line_geometry>
 801b550:	4601      	mov	r1, r0
 801b552:	2800      	cmp	r0, #0
 801b554:	f040 819e 	bne.w	801b894 <calc_new_geometry+0x734>
 801b558:	3c01      	subs	r4, #1
 801b55a:	682b      	ldr	r3, [r5, #0]
 801b55c:	e7ca      	b.n	801b4f4 <calc_new_geometry+0x394>
 801b55e:	f04f 0e05 	mov.w	lr, #5
 801b562:	f8cb c014 	str.w	ip, [fp, #20]
 801b566:	e9db 7c01 	ldrd	r7, ip, [fp, #4]
 801b56a:	f807 e001 	strb.w	lr, [r7, r1]
 801b56e:	1c51      	adds	r1, r2, #1
 801b570:	4561      	cmp	r1, ip
 801b572:	d308      	bcc.n	801b586 <calc_new_geometry+0x426>
 801b574:	2102      	movs	r1, #2
 801b576:	2201      	movs	r2, #1
 801b578:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b57c:	6002      	str	r2, [r0, #0]
 801b57e:	e7b7      	b.n	801b4f0 <calc_new_geometry+0x390>
 801b580:	f8cb c014 	str.w	ip, [fp, #20]
 801b584:	e7b4      	b.n	801b4f0 <calc_new_geometry+0x390>
 801b586:	f8db 100c 	ldr.w	r1, [fp, #12]
 801b58a:	f102 0e03 	add.w	lr, r2, #3
 801b58e:	45f4      	cmp	ip, lr
 801b590:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801b594:	edc2 ba00 	vstr	s23, [r2]
 801b598:	ed82 ca01 	vstr	s24, [r2, #4]
 801b59c:	d93b      	bls.n	801b616 <calc_new_geometry+0x4b6>
 801b59e:	edc2 ca02 	vstr	s25, [r2, #8]
 801b5a2:	f8cb 9010 	str.w	r9, [fp, #16]
 801b5a6:	ed82 da03 	vstr	s26, [r2, #12]
 801b5aa:	e7a3      	b.n	801b4f4 <calc_new_geometry+0x394>
 801b5ac:	2b09      	cmp	r3, #9
 801b5ae:	dc89      	bgt.n	801b4c4 <calc_new_geometry+0x364>
 801b5b0:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801b5b4:	ee7b 7aac 	vadd.f32	s15, s23, s25
 801b5b8:	ee3c 5a0d 	vadd.f32	s10, s24, s26
 801b5bc:	ee38 7a2b 	vadd.f32	s14, s16, s23
 801b5c0:	ee38 ca8c 	vadd.f32	s24, s17, s24
 801b5c4:	ee67 ba25 	vmul.f32	s23, s14, s11
 801b5c8:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801b5cc:	ee25 5a25 	vmul.f32	s10, s10, s11
 801b5d0:	ee2c ca25 	vmul.f32	s24, s24, s11
 801b5d4:	ee7b 4aa7 	vadd.f32	s9, s23, s15
 801b5d8:	ee3c 7a05 	vadd.f32	s14, s24, s10
 801b5dc:	ee64 4aa5 	vmul.f32	s9, s9, s11
 801b5e0:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b5e4:	494b      	ldr	r1, [pc, #300]	@ (801b714 <calc_new_geometry+0x5b4>)
 801b5e6:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801b5ea:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 801b5ee:	3301      	adds	r3, #1
 801b5f0:	edc2 ca04 	vstr	s25, [r2, #16]
 801b5f4:	ed82 da05 	vstr	s26, [r2, #20]
 801b5f8:	3401      	adds	r4, #1
 801b5fa:	edc2 7a02 	vstr	s15, [r2, #8]
 801b5fe:	edc2 4a00 	vstr	s9, [r2]
 801b602:	eef0 ca64 	vmov.f32	s25, s9
 801b606:	ed82 5a03 	vstr	s10, [r2, #12]
 801b60a:	edc2 5a01 	vstr	s11, [r2, #4]
 801b60e:	eeb0 da65 	vmov.f32	s26, s11
 801b612:	602b      	str	r3, [r5, #0]
 801b614:	e6e9      	b.n	801b3ea <calc_new_geometry+0x28a>
 801b616:	2102      	movs	r1, #2
 801b618:	2201      	movs	r2, #1
 801b61a:	f8cb 9010 	str.w	r9, [fp, #16]
 801b61e:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b622:	6002      	str	r2, [r0, #0]
 801b624:	e766      	b.n	801b4f4 <calc_new_geometry+0x394>
 801b626:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801b62a:	2300      	movs	r3, #0
 801b62c:	2a01      	cmp	r2, #1
 801b62e:	bf19      	ittee	ne
 801b630:	eddd 7a1d 	vldrne	s15, [sp, #116]	@ 0x74
 801b634:	ed9d 7a1e 	vldrne	s14, [sp, #120]	@ 0x78
 801b638:	eeb0 7a49 	vmoveq.f32	s14, s18
 801b63c:	eef0 7a49 	vmoveq.f32	s15, s18
 801b640:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b644:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b648:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 801b64c:	f88d 3039 	strb.w	r3, [sp, #57]	@ 0x39
 801b650:	f8df 80c8 	ldr.w	r8, [pc, #200]	@ 801b71c <calc_new_geometry+0x5bc>
 801b654:	e62a      	b.n	801b2ac <calc_new_geometry+0x14c>
 801b656:	f89d 2039 	ldrb.w	r2, [sp, #57]	@ 0x39
 801b65a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b65c:	2a01      	cmp	r2, #1
 801b65e:	f000 80d3 	beq.w	801b808 <calc_new_geometry+0x6a8>
 801b662:	f8df 80b8 	ldr.w	r8, [pc, #184]	@ 801b71c <calc_new_geometry+0x5bc>
 801b666:	f04f 0c01 	mov.w	ip, #1
 801b66a:	f04f 0e00 	mov.w	lr, #0
 801b66e:	009a      	lsls	r2, r3, #2
 801b670:	f8da 000c 	ldr.w	r0, [sl, #12]
 801b674:	1d11      	adds	r1, r2, #4
 801b676:	4401      	add	r1, r0
 801b678:	4402      	add	r2, r0
 801b67a:	eb03 000c 	add.w	r0, r3, ip
 801b67e:	9310      	str	r3, [sp, #64]	@ 0x40
 801b680:	f88d e038 	strb.w	lr, [sp, #56]	@ 0x38
 801b684:	f88d c03a 	strb.w	ip, [sp, #58]	@ 0x3a
 801b688:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b68a:	3302      	adds	r3, #2
 801b68c:	edd2 7a00 	vldr	s15, [r2]
 801b690:	f1b9 0f00 	cmp.w	r9, #0
 801b694:	f000 80b0 	beq.w	801b7f8 <calc_new_geometry+0x698>
 801b698:	ed9d 7a19 	vldr	s14, [sp, #100]	@ 0x64
 801b69c:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b6a0:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b6a4:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b6a6:	ed91 7a00 	vldr	s14, [r1]
 801b6aa:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b6ae:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b6b2:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b6b6:	edcd 7a1d 	vstr	s15, [sp, #116]	@ 0x74
 801b6ba:	ed8d 7a1e 	vstr	s14, [sp, #120]	@ 0x78
 801b6be:	2200      	movs	r2, #0
 801b6c0:	e5f4      	b.n	801b2ac <calc_new_geometry+0x14c>
 801b6c2:	ed9d 3a13 	vldr	s6, [sp, #76]	@ 0x4c
 801b6c6:	eddd 3a14 	vldr	s7, [sp, #80]	@ 0x50
 801b6ca:	ed9d 2a17 	vldr	s4, [sp, #92]	@ 0x5c
 801b6ce:	eddd 2a18 	vldr	s5, [sp, #96]	@ 0x60
 801b6d2:	ed9d 1a15 	vldr	s2, [sp, #84]	@ 0x54
 801b6d6:	eddd 1a16 	vldr	s3, [sp, #88]	@ 0x58
 801b6da:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b6de:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b6e2:	f7ff f9ff 	bl	801aae4 <cubic_decasteljau>
 801b6e6:	4601      	mov	r1, r0
 801b6e8:	2800      	cmp	r0, #0
 801b6ea:	f43f ae3a 	beq.w	801b362 <calc_new_geometry+0x202>
 801b6ee:	9101      	str	r1, [sp, #4]
 801b6f0:	f001 f988 	bl	801ca04 <nema_vg_set_error>
 801b6f4:	9901      	ldr	r1, [sp, #4]
 801b6f6:	4608      	mov	r0, r1
 801b6f8:	b021      	add	sp, #132	@ 0x84
 801b6fa:	ecbd 8b10 	vpop	{d8-d15}
 801b6fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b702:	bf00      	nop
 801b704:	20000144 	.word	0x20000144
 801b708:	42480000 	.word	0x42480000
 801b70c:	20083254 	.word	0x20083254
 801b710:	20083108 	.word	0x20083108
 801b714:	20083164 	.word	0x20083164
 801b718:	20000140 	.word	0x20000140
 801b71c:	2008313c 	.word	0x2008313c
 801b720:	9e05      	ldr	r6, [sp, #20]
 801b722:	eddd 7a1d 	vldr	s15, [sp, #116]	@ 0x74
 801b726:	eddd 6a19 	vldr	s13, [sp, #100]	@ 0x64
 801b72a:	ee76 6ae7 	vsub.f32	s13, s13, s15
 801b72e:	eef5 6a40 	vcmp.f32	s13, #0.0
 801b732:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b736:	ed9d 7a1e 	vldr	s14, [sp, #120]	@ 0x78
 801b73a:	d108      	bne.n	801b74e <calc_new_geometry+0x5ee>
 801b73c:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b740:	ee76 6ac7 	vsub.f32	s13, s13, s14
 801b744:	eef5 6a40 	vcmp.f32	s13, #0.0
 801b748:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b74c:	d03f      	beq.n	801b7ce <calc_new_geometry+0x66e>
 801b74e:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b752:	f8df 82ec 	ldr.w	r8, [pc, #748]	@ 801ba40 <calc_new_geometry+0x8e0>
 801b756:	edcd 7a19 	vstr	s15, [sp, #100]	@ 0x64
 801b75a:	f898 3000 	ldrb.w	r3, [r8]
 801b75e:	ed8d 7a1a 	vstr	s14, [sp, #104]	@ 0x68
 801b762:	e885 0003 	stmia.w	r5, {r0, r1}
 801b766:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b76a:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b76e:	b303      	cbz	r3, 801b7b2 <calc_new_geometry+0x652>
 801b770:	4bb2      	ldr	r3, [pc, #712]	@ (801ba3c <calc_new_geometry+0x8dc>)
 801b772:	ed93 6a03 	vldr	s12, [r3, #12]
 801b776:	edd3 6a04 	vldr	s13, [r3, #16]
 801b77a:	ed93 5a00 	vldr	s10, [r3]
 801b77e:	edd3 5a01 	vldr	s11, [r3, #4]
 801b782:	ee27 5a85 	vmul.f32	s10, s15, s10
 801b786:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b78a:	ee67 7a86 	vmul.f32	s15, s15, s12
 801b78e:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b792:	ee35 6a25 	vadd.f32	s12, s10, s11
 801b796:	ee37 7a87 	vadd.f32	s14, s15, s14
 801b79a:	edd3 6a02 	vldr	s13, [r3, #8]
 801b79e:	edd3 7a05 	vldr	s15, [r3, #20]
 801b7a2:	ee76 6a26 	vadd.f32	s13, s12, s13
 801b7a6:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b7aa:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 801b7ae:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801b7b2:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801b7b6:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801b7ba:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b7be:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b7c2:	f7fd fd6b 	bl	801929c <calc_line_geometry>
 801b7c6:	4601      	mov	r1, r0
 801b7c8:	2800      	cmp	r0, #0
 801b7ca:	f040 8425 	bne.w	801c018 <calc_new_geometry+0xeb8>
 801b7ce:	2300      	movs	r3, #0
 801b7d0:	f88d 3039 	strb.w	r3, [sp, #57]	@ 0x39
 801b7d4:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801b7d8:	2b01      	cmp	r3, #1
 801b7da:	f47f ada1 	bne.w	801b320 <calc_new_geometry+0x1c0>
 801b7de:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b7e2:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b7e6:	f7fd fcf9 	bl	80191dc <calc_move_geometry>
 801b7ea:	4601      	mov	r1, r0
 801b7ec:	2800      	cmp	r0, #0
 801b7ee:	f47f af7e 	bne.w	801b6ee <calc_new_geometry+0x58e>
 801b7f2:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801b7f6:	e586      	b.n	801b306 <calc_new_geometry+0x1a6>
 801b7f8:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b7fc:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b7fe:	ed91 7a00 	vldr	s14, [r1]
 801b802:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b806:	e756      	b.n	801b6b6 <calc_new_geometry+0x556>
 801b808:	2b00      	cmp	r3, #0
 801b80a:	f43f af2a 	beq.w	801b662 <calc_new_geometry+0x502>
 801b80e:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801b812:	2b00      	cmp	r3, #0
 801b814:	f000 8269 	beq.w	801bcea <calc_new_geometry+0xb8a>
 801b818:	eef0 7a49 	vmov.f32	s15, s18
 801b81c:	eeb0 7a49 	vmov.f32	s14, s18
 801b820:	f8df 821c 	ldr.w	r8, [pc, #540]	@ 801ba40 <calc_new_geometry+0x8e0>
 801b824:	f898 3000 	ldrb.w	r3, [r8]
 801b828:	b1e3      	cbz	r3, 801b864 <calc_new_geometry+0x704>
 801b82a:	4b84      	ldr	r3, [pc, #528]	@ (801ba3c <calc_new_geometry+0x8dc>)
 801b82c:	edd3 5a00 	vldr	s11, [r3]
 801b830:	ed93 6a01 	vldr	s12, [r3, #4]
 801b834:	edd3 6a03 	vldr	s13, [r3, #12]
 801b838:	ed93 5a04 	vldr	s10, [r3, #16]
 801b83c:	ee27 6a86 	vmul.f32	s12, s15, s12
 801b840:	ee67 6a26 	vmul.f32	s13, s14, s13
 801b844:	ee67 7a85 	vmul.f32	s15, s15, s10
 801b848:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b84c:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801b850:	ee35 7a86 	vadd.f32	s14, s11, s12
 801b854:	edd3 7a05 	vldr	s15, [r3, #20]
 801b858:	ed93 6a02 	vldr	s12, [r3, #8]
 801b85c:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801b860:	ee37 7a06 	vadd.f32	s14, s14, s12
 801b864:	f240 13ff 	movw	r3, #511	@ 0x1ff
 801b868:	eeb0 1a47 	vmov.f32	s2, s14
 801b86c:	eef0 1a67 	vmov.f32	s3, s15
 801b870:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801b874:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801b878:	ed8d 7a08 	vstr	s14, [sp, #32]
 801b87c:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 801b880:	f8cb 3024 	str.w	r3, [fp, #36]	@ 0x24
 801b884:	f7fd fd0a 	bl	801929c <calc_line_geometry>
 801b888:	4601      	mov	r1, r0
 801b88a:	2800      	cmp	r0, #0
 801b88c:	f040 83c4 	bne.w	801c018 <calc_new_geometry+0xeb8>
 801b890:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b892:	e6e8      	b.n	801b666 <calc_new_geometry+0x506>
 801b894:	9101      	str	r1, [sp, #4]
 801b896:	f001 f8b5 	bl	801ca04 <nema_vg_set_error>
 801b89a:	9901      	ldr	r1, [sp, #4]
 801b89c:	4608      	mov	r0, r1
 801b89e:	f001 f8b1 	bl	801ca04 <nema_vg_set_error>
 801b8a2:	9901      	ldr	r1, [sp, #4]
 801b8a4:	4608      	mov	r0, r1
 801b8a6:	b021      	add	sp, #132	@ 0x84
 801b8a8:	ecbd 8b10 	vpop	{d8-d15}
 801b8ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b8b0:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801b8b4:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801b8b8:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b8bc:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b8c0:	f7fd fcec 	bl	801929c <calc_line_geometry>
 801b8c4:	4601      	mov	r1, r0
 801b8c6:	2800      	cmp	r0, #0
 801b8c8:	f43f ad4b 	beq.w	801b362 <calc_new_geometry+0x202>
 801b8cc:	e70f      	b.n	801b6ee <calc_new_geometry+0x58e>
 801b8ce:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b8d0:	ed91 5a00 	vldr	s10, [r1]
 801b8d4:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801b8d8:	1c98      	adds	r0, r3, #2
 801b8da:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b8dc:	edd1 5a01 	vldr	s11, [r1, #4]
 801b8e0:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801b8e4:	1cd8      	adds	r0, r3, #3
 801b8e6:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b8e8:	ed91 7a02 	vldr	s14, [r1, #8]
 801b8ec:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801b8f0:	3304      	adds	r3, #4
 801b8f2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b8f4:	edd1 7a03 	vldr	s15, [r1, #12]
 801b8f8:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801b8fc:	f1b9 0f00 	cmp.w	r9, #0
 801b900:	d013      	beq.n	801b92a <calc_new_geometry+0x7ca>
 801b902:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801b906:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b90a:	ee35 5a06 	vadd.f32	s10, s10, s12
 801b90e:	ee37 7a06 	vadd.f32	s14, s14, s12
 801b912:	ee75 5aa6 	vadd.f32	s11, s11, s13
 801b916:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801b91a:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801b91e:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801b922:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801b926:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801b92a:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 801ba40 <calc_new_geometry+0x8e0>
 801b92e:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801b932:	f898 1000 	ldrb.w	r1, [r8]
 801b936:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801b93a:	2900      	cmp	r1, #0
 801b93c:	d057      	beq.n	801b9ee <calc_new_geometry+0x88e>
 801b93e:	493f      	ldr	r1, [pc, #252]	@ (801ba3c <calc_new_geometry+0x8dc>)
 801b940:	1c58      	adds	r0, r3, #1
 801b942:	ed91 6a03 	vldr	s12, [r1, #12]
 801b946:	edd1 6a04 	vldr	s13, [r1, #16]
 801b94a:	ed91 4a00 	vldr	s8, [r1]
 801b94e:	edd1 4a01 	vldr	s9, [r1, #4]
 801b952:	ee24 3a05 	vmul.f32	s6, s8, s10
 801b956:	ee65 3aa4 	vmul.f32	s7, s11, s9
 801b95a:	ee24 4a07 	vmul.f32	s8, s8, s14
 801b95e:	ee64 4aa7 	vmul.f32	s9, s9, s15
 801b962:	ee26 5a05 	vmul.f32	s10, s12, s10
 801b966:	ee66 7aa7 	vmul.f32	s15, s13, s15
 801b96a:	ee26 7a07 	vmul.f32	s14, s12, s14
 801b96e:	ee65 5aa6 	vmul.f32	s11, s11, s13
 801b972:	ed91 6a02 	vldr	s12, [r1, #8]
 801b976:	ee75 6a25 	vadd.f32	s13, s10, s11
 801b97a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801b97e:	ee73 3a23 	vadd.f32	s7, s6, s7
 801b982:	edd1 7a05 	vldr	s15, [r1, #20]
 801b986:	ee74 4a24 	vadd.f32	s9, s8, s9
 801b98a:	ee73 5a86 	vadd.f32	s11, s7, s12
 801b98e:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801b992:	ee34 6a86 	vadd.f32	s12, s9, s12
 801b996:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b99a:	edcd 5a15 	vstr	s11, [sp, #84]	@ 0x54
 801b99e:	ed8d 6a17 	vstr	s12, [sp, #92]	@ 0x5c
 801b9a2:	edcd 6a16 	vstr	s13, [sp, #88]	@ 0x58
 801b9a6:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801b9aa:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801b9ae:	f10c 0104 	add.w	r1, ip, #4
 801b9b2:	4411      	add	r1, r2
 801b9b4:	3302      	adds	r3, #2
 801b9b6:	4462      	add	r2, ip
 801b9b8:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b9ba:	f1b9 0f00 	cmp.w	r9, #0
 801b9be:	f000 8187 	beq.w	801bcd0 <calc_new_geometry+0xb70>
 801b9c2:	ed92 7a00 	vldr	s14, [r2]
 801b9c6:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801b9ca:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b9ce:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b9d2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b9d4:	edd1 6a00 	vldr	s13, [r1]
 801b9d8:	ed9d 7a1a 	vldr	s14, [sp, #104]	@ 0x68
 801b9dc:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b9e0:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801b9e4:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b9e8:	e460      	b.n	801b2ac <calc_new_geometry+0x14c>
 801b9ea:	f8df 8054 	ldr.w	r8, [pc, #84]	@ 801ba40 <calc_new_geometry+0x8e0>
 801b9ee:	1c58      	adds	r0, r3, #1
 801b9f0:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801b9f4:	e7db      	b.n	801b9ae <calc_new_geometry+0x84e>
 801b9f6:	2e03      	cmp	r6, #3
 801b9f8:	f000 80be 	beq.w	801bb78 <calc_new_geometry+0xa18>
 801b9fc:	2e0a      	cmp	r6, #10
 801b9fe:	f040 8478 	bne.w	801c2f2 <calc_new_geometry+0x1192>
 801ba02:	9b03      	ldr	r3, [sp, #12]
 801ba04:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801ba08:	edd3 7a00 	vldr	s15, [r3]
 801ba0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801ba10:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801ba14:	ee17 8a90 	vmov	r8, s15
 801ba18:	2b01      	cmp	r3, #1
 801ba1a:	f000 839a 	beq.w	801c152 <calc_new_geometry+0xff2>
 801ba1e:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801ba22:	ea4f 0368 	mov.w	r3, r8, asr #1
 801ba26:	2b00      	cmp	r3, #0
 801ba28:	9304      	str	r3, [sp, #16]
 801ba2a:	f77f ae7a 	ble.w	801b722 <calc_new_geometry+0x5c2>
 801ba2e:	2200      	movs	r2, #0
 801ba30:	9605      	str	r6, [sp, #20]
 801ba32:	f8df 800c 	ldr.w	r8, [pc, #12]	@ 801ba40 <calc_new_geometry+0x8e0>
 801ba36:	4b01      	ldr	r3, [pc, #4]	@ (801ba3c <calc_new_geometry+0x8dc>)
 801ba38:	4616      	mov	r6, r2
 801ba3a:	e056      	b.n	801baea <calc_new_geometry+0x98a>
 801ba3c:	20083140 	.word	0x20083140
 801ba40:	2008313c 	.word	0x2008313c
 801ba44:	3727c5ac 	.word	0x3727c5ac
 801ba48:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801ba4c:	ee37 7a27 	vadd.f32	s14, s14, s15
 801ba50:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801ba54:	910f      	str	r1, [sp, #60]	@ 0x3c
 801ba56:	eddc 6a00 	vldr	s13, [ip]
 801ba5a:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801ba5e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801ba62:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801ba66:	f898 1000 	ldrb.w	r1, [r8]
 801ba6a:	3601      	adds	r6, #1
 801ba6c:	ed8d 7a19 	vstr	s14, [sp, #100]	@ 0x64
 801ba70:	edcd 7a1a 	vstr	s15, [sp, #104]	@ 0x68
 801ba74:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801ba78:	b1f9      	cbz	r1, 801baba <calc_new_geometry+0x95a>
 801ba7a:	ed93 6a03 	vldr	s12, [r3, #12]
 801ba7e:	edd3 6a04 	vldr	s13, [r3, #16]
 801ba82:	ed93 5a00 	vldr	s10, [r3]
 801ba86:	edd3 5a01 	vldr	s11, [r3, #4]
 801ba8a:	ee27 5a05 	vmul.f32	s10, s14, s10
 801ba8e:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801ba92:	ee27 7a06 	vmul.f32	s14, s14, s12
 801ba96:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801ba9a:	ee75 5a25 	vadd.f32	s11, s10, s11
 801ba9e:	ee77 7a27 	vadd.f32	s15, s14, s15
 801baa2:	ed93 6a02 	vldr	s12, [r3, #8]
 801baa6:	edd3 6a05 	vldr	s13, [r3, #20]
 801baaa:	ee35 7a86 	vadd.f32	s14, s11, s12
 801baae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801bab2:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801bab6:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801baba:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801babe:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801bac2:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801bac6:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801baca:	9303      	str	r3, [sp, #12]
 801bacc:	f7fd fbe6 	bl	801929c <calc_line_geometry>
 801bad0:	9b03      	ldr	r3, [sp, #12]
 801bad2:	4601      	mov	r1, r0
 801bad4:	2800      	cmp	r0, #0
 801bad6:	f040 829f 	bne.w	801c018 <calc_new_geometry+0xeb8>
 801bada:	e897 0003 	ldmia.w	r7, {r0, r1}
 801bade:	9a04      	ldr	r2, [sp, #16]
 801bae0:	e885 0003 	stmia.w	r5, {r0, r1}
 801bae4:	4296      	cmp	r6, r2
 801bae6:	f43f ae1b 	beq.w	801b720 <calc_new_geometry+0x5c0>
 801baea:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801baec:	f8da 200c 	ldr.w	r2, [sl, #12]
 801baf0:	0088      	lsls	r0, r1, #2
 801baf2:	f100 0c04 	add.w	ip, r0, #4
 801baf6:	4494      	add	ip, r2
 801baf8:	4410      	add	r0, r2
 801bafa:	1c4a      	adds	r2, r1, #1
 801bafc:	920f      	str	r2, [sp, #60]	@ 0x3c
 801bafe:	3102      	adds	r1, #2
 801bb00:	ed90 7a00 	vldr	s14, [r0]
 801bb04:	f1b9 0f00 	cmp.w	r9, #0
 801bb08:	d19e      	bne.n	801ba48 <calc_new_geometry+0x8e8>
 801bb0a:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801bb0e:	910f      	str	r1, [sp, #60]	@ 0x3c
 801bb10:	eddc 7a00 	vldr	s15, [ip]
 801bb14:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801bb18:	e7a5      	b.n	801ba66 <calc_new_geometry+0x906>
 801bb1a:	9b02      	ldr	r3, [sp, #8]
 801bb1c:	2b09      	cmp	r3, #9
 801bb1e:	f47f ac20 	bne.w	801b362 <calc_new_geometry+0x202>
 801bb22:	ed9d 8a1b 	vldr	s16, [sp, #108]	@ 0x6c
 801bb26:	eddd ba19 	vldr	s23, [sp, #100]	@ 0x64
 801bb2a:	ee78 6a6b 	vsub.f32	s13, s16, s23
 801bb2e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801bb32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bb36:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801bb3a:	bf48      	it	mi
 801bb3c:	eef1 6a66 	vnegmi.f32	s13, s13
 801bb40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bb44:	eef5 bac0 	vcmpe.f32	s23, #0.0
 801bb48:	bf4c      	ite	mi
 801bb4a:	eeb1 7a48 	vnegmi.f32	s14, s16
 801bb4e:	eeb0 7a48 	vmovpl.f32	s14, s16
 801bb52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bb56:	eddd 8a1c 	vldr	s17, [sp, #112]	@ 0x70
 801bb5a:	ed9d ca1a 	vldr	s24, [sp, #104]	@ 0x68
 801bb5e:	f100 80e4 	bmi.w	801bd2a <calc_new_geometry+0xbca>
 801bb62:	eef4 bac7 	vcmpe.f32	s23, s14
 801bb66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bb6a:	f300 80e6 	bgt.w	801bd3a <calc_new_geometry+0xbda>
 801bb6e:	ed5f 7a4b 	vldr	s15, [pc, #-300]	@ 801ba44 <calc_new_geometry+0x8e4>
 801bb72:	ee6b 7aa7 	vmul.f32	s15, s23, s15
 801bb76:	e0eb      	b.n	801bd50 <calc_new_geometry+0xbf0>
 801bb78:	9b03      	ldr	r3, [sp, #12]
 801bb7a:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801bb7e:	ed9d 7a1a 	vldr	s14, [sp, #104]	@ 0x68
 801bb82:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801bb86:	edd3 7a00 	vldr	s15, [r3]
 801bb8a:	f1b9 0f00 	cmp.w	r9, #0
 801bb8e:	f000 8097 	beq.w	801bcc0 <calc_new_geometry+0xb60>
 801bb92:	eddd 6a19 	vldr	s13, [sp, #100]	@ 0x64
 801bb96:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801bb9a:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bb9e:	f8df 841c 	ldr.w	r8, [pc, #1052]	@ 801bfbc <calc_new_geometry+0xe5c>
 801bba2:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bba6:	f7ff bb81 	b.w	801b2ac <calc_new_geometry+0x14c>
 801bbaa:	900f      	str	r0, [sp, #60]	@ 0x3c
 801bbac:	ed91 7a00 	vldr	s14, [r1]
 801bbb0:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bbb4:	3302      	adds	r3, #2
 801bbb6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bbb8:	edd1 7a01 	vldr	s15, [r1, #4]
 801bbbc:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bbc0:	f1b9 0f00 	cmp.w	r9, #0
 801bbc4:	d00b      	beq.n	801bbde <calc_new_geometry+0xa7e>
 801bbc6:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801bbca:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801bbce:	ee37 7a06 	vadd.f32	s14, s14, s12
 801bbd2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801bbd6:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bbda:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bbde:	f8df 83dc 	ldr.w	r8, [pc, #988]	@ 801bfbc <calc_new_geometry+0xe5c>
 801bbe2:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801bbe6:	f898 1000 	ldrb.w	r1, [r8]
 801bbea:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801bbee:	2900      	cmp	r1, #0
 801bbf0:	f43f aefd 	beq.w	801b9ee <calc_new_geometry+0x88e>
 801bbf4:	49ef      	ldr	r1, [pc, #956]	@ (801bfb4 <calc_new_geometry+0xe54>)
 801bbf6:	1c58      	adds	r0, r3, #1
 801bbf8:	ed91 6a03 	vldr	s12, [r1, #12]
 801bbfc:	edd1 6a04 	vldr	s13, [r1, #16]
 801bc00:	ed91 5a00 	vldr	s10, [r1]
 801bc04:	edd1 5a01 	vldr	s11, [r1, #4]
 801bc08:	ee27 5a05 	vmul.f32	s10, s14, s10
 801bc0c:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bc10:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bc14:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bc18:	ee35 6a25 	vadd.f32	s12, s10, s11
 801bc1c:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bc20:	edd1 6a02 	vldr	s13, [r1, #8]
 801bc24:	edd1 7a05 	vldr	s15, [r1, #20]
 801bc28:	ee76 6a26 	vadd.f32	s13, s12, s13
 801bc2c:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bc30:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 801bc34:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bc38:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801bc3c:	e6b7      	b.n	801b9ae <calc_new_geometry+0x84e>
 801bc3e:	f8df 837c 	ldr.w	r8, [pc, #892]	@ 801bfbc <calc_new_geometry+0xe5c>
 801bc42:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bc46:	f7ff bb31 	b.w	801b2ac <calc_new_geometry+0x14c>
 801bc4a:	f1ae 0e05 	sub.w	lr, lr, #5
 801bc4e:	f1be 0f03 	cmp.w	lr, #3
 801bc52:	ed9d 7a19 	vldr	s14, [sp, #100]	@ 0x64
 801bc56:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801bc5a:	f240 8206 	bls.w	801c06a <calc_new_geometry+0xf0a>
 801bc5e:	f8df 835c 	ldr.w	r8, [pc, #860]	@ 801bfbc <calc_new_geometry+0xe5c>
 801bc62:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bc66:	f898 1000 	ldrb.w	r1, [r8]
 801bc6a:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bc6e:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801bc72:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801bc76:	2900      	cmp	r1, #0
 801bc78:	f43f ae99 	beq.w	801b9ae <calc_new_geometry+0x84e>
 801bc7c:	49cd      	ldr	r1, [pc, #820]	@ (801bfb4 <calc_new_geometry+0xe54>)
 801bc7e:	ed91 6a03 	vldr	s12, [r1, #12]
 801bc82:	edd1 6a04 	vldr	s13, [r1, #16]
 801bc86:	ed91 5a00 	vldr	s10, [r1]
 801bc8a:	edd1 5a01 	vldr	s11, [r1, #4]
 801bc8e:	ee27 5a05 	vmul.f32	s10, s14, s10
 801bc92:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bc96:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bc9a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bc9e:	ee35 6a25 	vadd.f32	s12, s10, s11
 801bca2:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bca6:	edd1 6a02 	vldr	s13, [r1, #8]
 801bcaa:	edd1 7a05 	vldr	s15, [r1, #20]
 801bcae:	ee76 6a26 	vadd.f32	s13, s12, s13
 801bcb2:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bcb6:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 801bcba:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bcbe:	e676      	b.n	801b9ae <calc_new_geometry+0x84e>
 801bcc0:	f8df 82f8 	ldr.w	r8, [pc, #760]	@ 801bfbc <calc_new_geometry+0xe5c>
 801bcc4:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bcc8:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bccc:	f7ff baee 	b.w	801b2ac <calc_new_geometry+0x14c>
 801bcd0:	edd2 7a00 	vldr	s15, [r2]
 801bcd4:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bcd8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bcda:	ed91 7a00 	vldr	s14, [r1]
 801bcde:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801bce2:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bce6:	f7ff bae1 	b.w	801b2ac <calc_new_geometry+0x14c>
 801bcea:	ed9d 7a1d 	vldr	s14, [sp, #116]	@ 0x74
 801bcee:	eddd 7a1e 	vldr	s15, [sp, #120]	@ 0x78
 801bcf2:	e595      	b.n	801b820 <calc_new_geometry+0x6c0>
 801bcf4:	eef4 cae6 	vcmpe.f32	s25, s13
 801bcf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bcfc:	f73f ab9e 	bgt.w	801b43c <calc_new_geometry+0x2dc>
 801bd00:	eeb4 dae6 	vcmpe.f32	s26, s13
 801bd04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd08:	f73f ab98 	bgt.w	801b43c <calc_new_geometry+0x2dc>
 801bd0c:	eef4 cac6 	vcmpe.f32	s25, s12
 801bd10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd14:	f53f ab92 	bmi.w	801b43c <calc_new_geometry+0x2dc>
 801bd18:	eeb4 dac6 	vcmpe.f32	s26, s12
 801bd1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd20:	bf54      	ite	pl
 801bd22:	2201      	movpl	r2, #1
 801bd24:	2200      	movmi	r2, #0
 801bd26:	f7ff bb8a 	b.w	801b43e <calc_new_geometry+0x2de>
 801bd2a:	eef1 7a6b 	vneg.f32	s15, s23
 801bd2e:	eef4 7ac7 	vcmpe.f32	s15, s14
 801bd32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd36:	f340 8202 	ble.w	801c13e <calc_new_geometry+0xfde>
 801bd3a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801bd3e:	eddf 7aa0 	vldr	s15, [pc, #640]	@ 801bfc0 <calc_new_geometry+0xe60>
 801bd42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd46:	bf4c      	ite	mi
 801bd48:	ee68 7a67 	vnmulmi.f32	s15, s16, s15
 801bd4c:	ee68 7a27 	vmulpl.f32	s15, s16, s15
 801bd50:	eef4 6ae7 	vcmpe.f32	s13, s15
 801bd54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd58:	d82e      	bhi.n	801bdb8 <calc_new_geometry+0xc58>
 801bd5a:	ee78 6acc 	vsub.f32	s13, s17, s24
 801bd5e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801bd62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd66:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801bd6a:	bf48      	it	mi
 801bd6c:	eef1 6a66 	vnegmi.f32	s13, s13
 801bd70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd74:	eeb5 cac0 	vcmpe.f32	s24, #0.0
 801bd78:	bf4c      	ite	mi
 801bd7a:	eeb1 7a68 	vnegmi.f32	s14, s17
 801bd7e:	eeb0 7a68 	vmovpl.f32	s14, s17
 801bd82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd86:	f100 81f1 	bmi.w	801c16c <calc_new_geometry+0x100c>
 801bd8a:	eeb4 cac7 	vcmpe.f32	s24, s14
 801bd8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd92:	f340 81d9 	ble.w	801c148 <calc_new_geometry+0xfe8>
 801bd96:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801bd9a:	eddf 7a89 	vldr	s15, [pc, #548]	@ 801bfc0 <calc_new_geometry+0xe60>
 801bd9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bda2:	bf4c      	ite	mi
 801bda4:	ee68 7ae7 	vnmulmi.f32	s15, s17, s15
 801bda8:	ee68 7aa7 	vmulpl.f32	s15, s17, s15
 801bdac:	eef4 6ae7 	vcmpe.f32	s13, s15
 801bdb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdb4:	f67f aad5 	bls.w	801b362 <calc_new_geometry+0x202>
 801bdb8:	eddd ca15 	vldr	s25, [sp, #84]	@ 0x54
 801bdbc:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801bdc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdc4:	f100 815e 	bmi.w	801c084 <calc_new_geometry+0xf24>
 801bdc8:	eddf 7a7d 	vldr	s15, [pc, #500]	@ 801bfc0 <calc_new_geometry+0xe60>
 801bdcc:	eef4 cae7 	vcmpe.f32	s25, s15
 801bdd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdd4:	f240 815e 	bls.w	801c094 <calc_new_geometry+0xf34>
 801bdd8:	eddd da16 	vldr	s27, [sp, #88]	@ 0x58
 801bddc:	eef5 dac0 	vcmpe.f32	s27, #0.0
 801bde0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bde4:	f100 81cf 	bmi.w	801c186 <calc_new_geometry+0x1026>
 801bde8:	eddf 7a75 	vldr	s15, [pc, #468]	@ 801bfc0 <calc_new_geometry+0xe60>
 801bdec:	eef4 dae7 	vcmpe.f32	s27, s15
 801bdf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdf4:	f240 814e 	bls.w	801c094 <calc_new_geometry+0xf34>
 801bdf8:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801bdfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be00:	f89d 403b 	ldrb.w	r4, [sp, #59]	@ 0x3b
 801be04:	f3c4 1580 	ubfx	r5, r4, #6, #1
 801be08:	f3c4 1440 	ubfx	r4, r4, #5, #1
 801be0c:	f100 81d1 	bmi.w	801c1b2 <calc_new_geometry+0x1052>
 801be10:	eef5 dac0 	vcmpe.f32	s27, #0.0
 801be14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be18:	f100 81c8 	bmi.w	801c1ac <calc_new_geometry+0x104c>
 801be1c:	ed9d ea17 	vldr	s28, [sp, #92]	@ 0x5c
 801be20:	ee2e ea0b 	vmul.f32	s28, s28, s22
 801be24:	eeb0 0a4e 	vmov.f32	s0, s28
 801be28:	f015 fabc 	bl	80313a4 <cosf>
 801be2c:	eeb0 da40 	vmov.f32	s26, s0
 801be30:	eeb0 0a4e 	vmov.f32	s0, s28
 801be34:	f015 fb02 	bl	803143c <sinf>
 801be38:	ee28 5a0d 	vmul.f32	s10, s16, s26
 801be3c:	ee68 5a80 	vmul.f32	s11, s17, s0
 801be40:	ee2b 7ac0 	vnmul.f32	s14, s23, s0
 801be44:	ee6c 6a00 	vmul.f32	s13, s24, s0
 801be48:	ee6c 7a0d 	vmul.f32	s15, s24, s26
 801be4c:	ee28 8a40 	vnmul.f32	s16, s16, s0
 801be50:	ee68 8a8d 	vmul.f32	s17, s17, s26
 801be54:	ee2b 6a8d 	vmul.f32	s12, s23, s26
 801be58:	ee35 ca25 	vadd.f32	s24, s10, s11
 801be5c:	ee38 fa28 	vadd.f32	s30, s16, s17
 801be60:	ee76 ba26 	vadd.f32	s23, s12, s13
 801be64:	ee37 8a27 	vadd.f32	s16, s14, s15
 801be68:	ee8c 6a2c 	vdiv.f32	s12, s24, s25
 801be6c:	eecb 5aac 	vdiv.f32	s11, s23, s25
 801be70:	eecf 6a2d 	vdiv.f32	s13, s30, s27
 801be74:	ee88 5a2d 	vdiv.f32	s10, s16, s27
 801be78:	ee76 8a65 	vsub.f32	s17, s12, s11
 801be7c:	ee76 eac5 	vsub.f32	s29, s13, s10
 801be80:	ee28 7aa8 	vmul.f32	s14, s17, s17
 801be84:	ee6e 7aae 	vmul.f32	s15, s29, s29
 801be88:	ee77 7a27 	vadd.f32	s15, s14, s15
 801be8c:	eef5 7a40 	vcmp.f32	s15, #0.0
 801be90:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801be94:	ee76 4a25 	vadd.f32	s9, s12, s11
 801be98:	ee76 fa85 	vadd.f32	s31, s13, s10
 801be9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bea0:	eeb0 ea40 	vmov.f32	s28, s0
 801bea4:	ee64 4a87 	vmul.f32	s9, s9, s14
 801bea8:	ee6f fa87 	vmul.f32	s31, s31, s14
 801beac:	f000 821c 	beq.w	801c2e8 <calc_new_geometry+0x1188>
 801beb0:	eeb7 4a00 	vmov.f32	s8, #112	@ 0x3f800000  1.0
 801beb4:	eeb5 7a00 	vmov.f32	s14, #80	@ 0x3e800000  0.250
 801beb8:	ee84 0a27 	vdiv.f32	s0, s8, s15
 801bebc:	ee30 0a47 	vsub.f32	s0, s0, s14
 801bec0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801bec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bec8:	f100 82c7 	bmi.w	801c45a <calc_new_geometry+0x12fa>
 801becc:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801bed0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bed4:	eeb1 8ac0 	vsqrt.f32	s16, s0
 801bed8:	f100 82e8 	bmi.w	801c4ac <calc_new_geometry+0x134c>
 801bedc:	ee28 fa28 	vmul.f32	s30, s16, s17
 801bee0:	ee68 ea2e 	vmul.f32	s29, s16, s29
 801bee4:	ee3f cacf 	vsub.f32	s24, s31, s30
 801bee8:	ee7e baa4 	vadd.f32	s23, s29, s9
 801beec:	ee36 0acc 	vsub.f32	s0, s13, s24
 801bef0:	ee76 0a6b 	vsub.f32	s1, s12, s23
 801bef4:	edcd 4a06 	vstr	s9, [sp, #24]
 801bef8:	edcd 6a05 	vstr	s13, [sp, #20]
 801befc:	ed8d 6a04 	vstr	s12, [sp, #16]
 801bf00:	ed8d 5a07 	vstr	s10, [sp, #28]
 801bf04:	edcd 5a02 	vstr	s11, [sp, #8]
 801bf08:	f015 f938 	bl	803117c <atan2f>
 801bf0c:	eddd 5a02 	vldr	s11, [sp, #8]
 801bf10:	ed9d 5a07 	vldr	s10, [sp, #28]
 801bf14:	eeb0 8a40 	vmov.f32	s16, s0
 801bf18:	ee75 0aeb 	vsub.f32	s1, s11, s23
 801bf1c:	ee35 0a4c 	vsub.f32	s0, s10, s24
 801bf20:	edcd 5a03 	vstr	s11, [sp, #12]
 801bf24:	ed8d 5a02 	vstr	s10, [sp, #8]
 801bf28:	f015 f928 	bl	803117c <atan2f>
 801bf2c:	ee28 8a0a 	vmul.f32	s16, s16, s20
 801bf30:	ee60 8a0a 	vmul.f32	s17, s0, s20
 801bf34:	ee78 7ac8 	vsub.f32	s15, s17, s16
 801bf38:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801bf3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf40:	bf44      	itt	mi
 801bf42:	ed9f 7a1d 	vldrmi	s14, [pc, #116]	@ 801bfb8 <calc_new_geometry+0xe58>
 801bf46:	ee77 7a87 	vaddmi.f32	s15, s15, s14
 801bf4a:	eef4 7aea 	vcmpe.f32	s15, s21
 801bf4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf52:	ed9d 5a02 	vldr	s10, [sp, #8]
 801bf56:	eddd 5a03 	vldr	s11, [sp, #12]
 801bf5a:	ed9d 6a04 	vldr	s12, [sp, #16]
 801bf5e:	eddd 6a05 	vldr	s13, [sp, #20]
 801bf62:	eddd 4a06 	vldr	s9, [sp, #24]
 801bf66:	f140 819e 	bpl.w	801c2a6 <calc_new_geometry+0x1146>
 801bf6a:	42a5      	cmp	r5, r4
 801bf6c:	f000 8252 	beq.w	801c414 <calc_new_geometry+0x12b4>
 801bf70:	ee6c 7a2d 	vmul.f32	s15, s24, s27
 801bf74:	ee6b baac 	vmul.f32	s23, s23, s25
 801bf78:	ee2d 7a2b 	vmul.f32	s14, s26, s23
 801bf7c:	ee6e ba2b 	vmul.f32	s23, s28, s23
 801bf80:	ee2e ea27 	vmul.f32	s28, s28, s15
 801bf84:	ee6d 7a27 	vmul.f32	s15, s26, s15
 801bf88:	ee37 ea4e 	vsub.f32	s28, s14, s28
 801bf8c:	ee3b caa7 	vadd.f32	s24, s23, s15
 801bf90:	eeb4 8ae8 	vcmpe.f32	s16, s17
 801bf94:	2d00      	cmp	r5, #0
 801bf96:	f000 8148 	beq.w	801c22a <calc_new_geometry+0x10ca>
 801bf9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf9e:	f300 8236 	bgt.w	801c40e <calc_new_geometry+0x12ae>
 801bfa2:	eeb4 8ae8 	vcmpe.f32	s16, s17
 801bfa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfaa:	bf48      	it	mi
 801bfac:	2101      	movmi	r1, #1
 801bfae:	d415      	bmi.n	801bfdc <calc_new_geometry+0xe7c>
 801bfb0:	f7ff b9d7 	b.w	801b362 <calc_new_geometry+0x202>
 801bfb4:	20083140 	.word	0x20083140
 801bfb8:	43b40000 	.word	0x43b40000
 801bfbc:	2008313c 	.word	0x2008313c
 801bfc0:	3727c5ac 	.word	0x3727c5ac
 801bfc4:	b727c5ac 	.word	0xb727c5ac
 801bfc8:	00000000 	.word	0x00000000
 801bfcc:	eef4 bae8 	vcmpe.f32	s23, s17
 801bfd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfd4:	eeb0 8a6b 	vmov.f32	s16, s23
 801bfd8:	f57f a9c3 	bpl.w	801b362 <calc_new_geometry+0x202>
 801bfdc:	ee78 ba29 	vadd.f32	s23, s16, s19
 801bfe0:	eef4 bae8 	vcmpe.f32	s23, s17
 801bfe4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfe8:	bfa4      	itt	ge
 801bfea:	3102      	addge	r1, #2
 801bfec:	b2c9      	uxtbge	r1, r1
 801bfee:	eeb0 0a48 	vmov.f32	s0, s16
 801bff2:	eef0 2a6d 	vmov.f32	s5, s27
 801bff6:	eeb0 2a6c 	vmov.f32	s4, s25
 801bffa:	eef0 1a4c 	vmov.f32	s3, s24
 801bffe:	eeb0 1a4e 	vmov.f32	s2, s28
 801c002:	a80e      	add	r0, sp, #56	@ 0x38
 801c004:	bf54      	ite	pl
 801c006:	eef0 0a68 	vmovpl.f32	s1, s17
 801c00a:	eef0 0a6b 	vmovmi.f32	s1, s23
 801c00e:	f7fe ff27 	bl	801ae60 <arc_to_cubic>
 801c012:	4601      	mov	r1, r0
 801c014:	2800      	cmp	r0, #0
 801c016:	d0d9      	beq.n	801bfcc <calc_new_geometry+0xe6c>
 801c018:	9101      	str	r1, [sp, #4]
 801c01a:	f000 fcf3 	bl	801ca04 <nema_vg_set_error>
 801c01e:	9901      	ldr	r1, [sp, #4]
 801c020:	4608      	mov	r0, r1
 801c022:	f7ff bb64 	b.w	801b6ee <calc_new_geometry+0x58e>
 801c026:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801c02a:	f8d1 e000 	ldr.w	lr, [r1]
 801c02e:	1c98      	adds	r0, r3, #2
 801c030:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c032:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 801c036:	f8d1 e004 	ldr.w	lr, [r1, #4]
 801c03a:	1cd8      	adds	r0, r3, #3
 801c03c:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c03e:	f8cd e058 	str.w	lr, [sp, #88]	@ 0x58
 801c042:	f10c 0c0c 	add.w	ip, ip, #12
 801c046:	f8d1 e008 	ldr.w	lr, [r1, #8]
 801c04a:	eb02 010c 	add.w	r1, r2, ip
 801c04e:	f103 0804 	add.w	r8, r3, #4
 801c052:	9103      	str	r1, [sp, #12]
 801c054:	4603      	mov	r3, r0
 801c056:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801c058:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801c05a:	f8cd e05c 	str.w	lr, [sp, #92]	@ 0x5c
 801c05e:	f88d 403b 	strb.w	r4, [sp, #59]	@ 0x3b
 801c062:	901b      	str	r0, [sp, #108]	@ 0x6c
 801c064:	911c      	str	r1, [sp, #112]	@ 0x70
 801c066:	f7ff b907 	b.w	801b278 <calc_new_geometry+0x118>
 801c06a:	ee37 7a07 	vadd.f32	s14, s14, s14
 801c06e:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801c072:	ed9d 6a1b 	vldr	s12, [sp, #108]	@ 0x6c
 801c076:	eddd 6a1c 	vldr	s13, [sp, #112]	@ 0x70
 801c07a:	ee37 7a46 	vsub.f32	s14, s14, s12
 801c07e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801c082:	e5ec      	b.n	801bc5e <calc_new_geometry+0xafe>
 801c084:	ed5f 7a31 	vldr	s15, [pc, #-196]	@ 801bfc4 <calc_new_geometry+0xe64>
 801c088:	eef4 cae7 	vcmpe.f32	s25, s15
 801c08c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c090:	f6ff aea2 	blt.w	801bdd8 <calc_new_geometry+0xc78>
 801c094:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801c098:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801c09c:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c0a0:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c0a4:	f7fd f8fa 	bl	801929c <calc_line_geometry>
 801c0a8:	4601      	mov	r1, r0
 801c0aa:	2800      	cmp	r0, #0
 801c0ac:	f43f a959 	beq.w	801b362 <calc_new_geometry+0x202>
 801c0b0:	9101      	str	r1, [sp, #4]
 801c0b2:	f000 fca7 	bl	801ca04 <nema_vg_set_error>
 801c0b6:	9901      	ldr	r1, [sp, #4]
 801c0b8:	e7b2      	b.n	801c020 <calc_new_geometry+0xec0>
 801c0ba:	f1ae 0e05 	sub.w	lr, lr, #5
 801c0be:	f1be 0f03 	cmp.w	lr, #3
 801c0c2:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801c0c6:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801c0ca:	d91f      	bls.n	801c10c <calc_new_geometry+0xfac>
 801c0cc:	eef0 5a66 	vmov.f32	s11, s13
 801c0d0:	eeb0 5a46 	vmov.f32	s10, s12
 801c0d4:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801c0d8:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801c0dc:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c0de:	ed91 7a00 	vldr	s14, [r1]
 801c0e2:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801c0e6:	3302      	adds	r3, #2
 801c0e8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c0ea:	edd1 7a01 	vldr	s15, [r1, #4]
 801c0ee:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801c0f2:	f1b9 0f00 	cmp.w	r9, #0
 801c0f6:	f43f ac18 	beq.w	801b92a <calc_new_geometry+0x7ca>
 801c0fa:	ee37 7a06 	vadd.f32	s14, s14, s12
 801c0fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801c102:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801c106:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801c10a:	e40e      	b.n	801b92a <calc_new_geometry+0x7ca>
 801c10c:	ee36 5a06 	vadd.f32	s10, s12, s12
 801c110:	ee76 5aa6 	vadd.f32	s11, s13, s13
 801c114:	ed9d 7a1b 	vldr	s14, [sp, #108]	@ 0x6c
 801c118:	eddd 7a1c 	vldr	s15, [sp, #112]	@ 0x70
 801c11c:	ee35 5a47 	vsub.f32	s10, s10, s14
 801c120:	ee75 5ae7 	vsub.f32	s11, s11, s15
 801c124:	e7d6      	b.n	801c0d4 <calc_new_geometry+0xf74>
 801c126:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801c12a:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801c12e:	f7fd f855 	bl	80191dc <calc_move_geometry>
 801c132:	4601      	mov	r1, r0
 801c134:	2800      	cmp	r0, #0
 801c136:	f43f a914 	beq.w	801b362 <calc_new_geometry+0x202>
 801c13a:	f7ff bad8 	b.w	801b6ee <calc_new_geometry+0x58e>
 801c13e:	ed1f 7a60 	vldr	s14, [pc, #-384]	@ 801bfc0 <calc_new_geometry+0xe60>
 801c142:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c146:	e603      	b.n	801bd50 <calc_new_geometry+0xbf0>
 801c148:	ed5f 7a63 	vldr	s15, [pc, #-396]	@ 801bfc0 <calc_new_geometry+0xe60>
 801c14c:	ee6c 7a27 	vmul.f32	s15, s24, s15
 801c150:	e62c      	b.n	801bdac <calc_new_geometry+0xc4c>
 801c152:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c156:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c15a:	f7fd f83f 	bl	80191dc <calc_move_geometry>
 801c15e:	4601      	mov	r1, r0
 801c160:	2800      	cmp	r0, #0
 801c162:	f47f af59 	bne.w	801c018 <calc_new_geometry+0xeb8>
 801c166:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801c16a:	e458      	b.n	801ba1e <calc_new_geometry+0x8be>
 801c16c:	eef1 7a4c 	vneg.f32	s15, s24
 801c170:	eef4 7ac7 	vcmpe.f32	s15, s14
 801c174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c178:	f73f ae0d 	bgt.w	801bd96 <calc_new_geometry+0xc36>
 801c17c:	ed1f 7a70 	vldr	s14, [pc, #-448]	@ 801bfc0 <calc_new_geometry+0xe60>
 801c180:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c184:	e612      	b.n	801bdac <calc_new_geometry+0xc4c>
 801c186:	ed5f 7a71 	vldr	s15, [pc, #-452]	@ 801bfc4 <calc_new_geometry+0xe64>
 801c18a:	eef4 dae7 	vcmpe.f32	s27, s15
 801c18e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c192:	f6bf af7f 	bge.w	801c094 <calc_new_geometry+0xf34>
 801c196:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801c19a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c19e:	f89d 403b 	ldrb.w	r4, [sp, #59]	@ 0x3b
 801c1a2:	f3c4 1580 	ubfx	r5, r4, #6, #1
 801c1a6:	f3c4 1440 	ubfx	r4, r4, #5, #1
 801c1aa:	d402      	bmi.n	801c1b2 <calc_new_geometry+0x1052>
 801c1ac:	eef1 da6d 	vneg.f32	s27, s27
 801c1b0:	e634      	b.n	801be1c <calc_new_geometry+0xcbc>
 801c1b2:	eef1 ca6c 	vneg.f32	s25, s25
 801c1b6:	e62b      	b.n	801be10 <calc_new_geometry+0xcb0>
 801c1b8:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c1bc:	2b00      	cmp	r3, #0
 801c1be:	f000 8121 	beq.w	801c404 <calc_new_geometry+0x12a4>
 801c1c2:	ed5f 1a7f 	vldr	s3, [pc, #-508]	@ 801bfc8 <calc_new_geometry+0xe68>
 801c1c6:	eeb0 1a61 	vmov.f32	s2, s3
 801c1ca:	4bc4      	ldr	r3, [pc, #784]	@ (801c4dc <calc_new_geometry+0x137c>)
 801c1cc:	781b      	ldrb	r3, [r3, #0]
 801c1ce:	b1e3      	cbz	r3, 801c20a <calc_new_geometry+0x10aa>
 801c1d0:	4bc3      	ldr	r3, [pc, #780]	@ (801c4e0 <calc_new_geometry+0x1380>)
 801c1d2:	edd3 6a04 	vldr	s13, [r3, #16]
 801c1d6:	edd3 7a00 	vldr	s15, [r3]
 801c1da:	ed93 7a01 	vldr	s14, [r3, #4]
 801c1de:	ed93 6a03 	vldr	s12, [r3, #12]
 801c1e2:	ee21 7a87 	vmul.f32	s14, s3, s14
 801c1e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c1ea:	ee61 1aa6 	vmul.f32	s3, s3, s13
 801c1ee:	ee21 1a06 	vmul.f32	s2, s2, s12
 801c1f2:	ee77 7a87 	vadd.f32	s15, s15, s14
 801c1f6:	ee71 1a21 	vadd.f32	s3, s2, s3
 801c1fa:	edd3 6a02 	vldr	s13, [r3, #8]
 801c1fe:	ed93 7a05 	vldr	s14, [r3, #20]
 801c202:	ee37 1aa6 	vadd.f32	s2, s15, s13
 801c206:	ee71 1a87 	vadd.f32	s3, s3, s14
 801c20a:	f240 12ff 	movw	r2, #511	@ 0x1ff
 801c20e:	4bb5      	ldr	r3, [pc, #724]	@ (801c4e4 <calc_new_geometry+0x1384>)
 801c210:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801c214:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801c218:	625a      	str	r2, [r3, #36]	@ 0x24
 801c21a:	f7fd f83f 	bl	801929c <calc_line_geometry>
 801c21e:	4601      	mov	r1, r0
 801c220:	2800      	cmp	r0, #0
 801c222:	f43f aa68 	beq.w	801b6f6 <calc_new_geometry+0x596>
 801c226:	f7ff ba62 	b.w	801b6ee <calc_new_geometry+0x58e>
 801c22a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c22e:	eef0 ba68 	vmov.f32	s23, s17
 801c232:	d50b      	bpl.n	801c24c <calc_new_geometry+0x10ec>
 801c234:	eef0 8a48 	vmov.f32	s17, s16
 801c238:	ed9f 8aab 	vldr	s16, [pc, #684]	@ 801c4e8 <calc_new_geometry+0x1388>
 801c23c:	ee38 8a88 	vadd.f32	s16, s17, s16
 801c240:	b125      	cbz	r5, 801c24c <calc_new_geometry+0x10ec>
 801c242:	eef0 8a48 	vmov.f32	s17, s16
 801c246:	eeb0 8a6b 	vmov.f32	s16, s23
 801c24a:	e6aa      	b.n	801bfa2 <calc_new_geometry+0xe42>
 801c24c:	eeb4 8aeb 	vcmpe.f32	s16, s23
 801c250:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c254:	bfc8      	it	gt
 801c256:	2101      	movgt	r1, #1
 801c258:	dc09      	bgt.n	801c26e <calc_new_geometry+0x110e>
 801c25a:	f7ff b882 	b.w	801b362 <calc_new_geometry+0x202>
 801c25e:	eef4 8aeb 	vcmpe.f32	s17, s23
 801c262:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c266:	eeb0 8a68 	vmov.f32	s16, s17
 801c26a:	f77f a87a 	ble.w	801b362 <calc_new_geometry+0x202>
 801c26e:	ee78 8a69 	vsub.f32	s17, s16, s19
 801c272:	eef4 8aeb 	vcmpe.f32	s17, s23
 801c276:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c27a:	bf9c      	itt	ls
 801c27c:	3102      	addls	r1, #2
 801c27e:	b2c9      	uxtbls	r1, r1
 801c280:	eeb0 0a48 	vmov.f32	s0, s16
 801c284:	eef0 2a6d 	vmov.f32	s5, s27
 801c288:	eeb0 2a6c 	vmov.f32	s4, s25
 801c28c:	eef0 1a4c 	vmov.f32	s3, s24
 801c290:	eeb0 1a4e 	vmov.f32	s2, s28
 801c294:	a80e      	add	r0, sp, #56	@ 0x38
 801c296:	fe78 0aab 	vselgt.f32	s1, s17, s23
 801c29a:	f7fe fde1 	bl	801ae60 <arc_to_cubic>
 801c29e:	4601      	mov	r1, r0
 801c2a0:	2800      	cmp	r0, #0
 801c2a2:	d0dc      	beq.n	801c25e <calc_new_geometry+0x10fe>
 801c2a4:	e6b8      	b.n	801c018 <calc_new_geometry+0xeb8>
 801c2a6:	db02      	blt.n	801c2ae <calc_new_geometry+0x114e>
 801c2a8:	42a5      	cmp	r5, r4
 801c2aa:	f43f ae61 	beq.w	801bf70 <calc_new_geometry+0xe10>
 801c2ae:	ee74 baee 	vsub.f32	s23, s9, s29
 801c2b2:	ee3f ca2f 	vadd.f32	s24, s30, s31
 801c2b6:	ee76 0a6b 	vsub.f32	s1, s12, s23
 801c2ba:	ee36 0acc 	vsub.f32	s0, s13, s24
 801c2be:	ed8d 5a03 	vstr	s10, [sp, #12]
 801c2c2:	edcd 5a02 	vstr	s11, [sp, #8]
 801c2c6:	f014 ff59 	bl	803117c <atan2f>
 801c2ca:	eddd 5a02 	vldr	s11, [sp, #8]
 801c2ce:	ed9d 5a03 	vldr	s10, [sp, #12]
 801c2d2:	ee75 0aeb 	vsub.f32	s1, s11, s23
 801c2d6:	ee20 8a0a 	vmul.f32	s16, s0, s20
 801c2da:	ee35 0a4c 	vsub.f32	s0, s10, s24
 801c2de:	f014 ff4d 	bl	803117c <atan2f>
 801c2e2:	ee60 8a0a 	vmul.f32	s17, s0, s20
 801c2e6:	e643      	b.n	801bf70 <calc_new_geometry+0xe10>
 801c2e8:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801c2ec:	4608      	mov	r0, r1
 801c2ee:	f7ff b9fe 	b.w	801b6ee <calc_new_geometry+0x58e>
 801c2f2:	2e0b      	cmp	r6, #11
 801c2f4:	f47f ab79 	bne.w	801b9ea <calc_new_geometry+0x88a>
 801c2f8:	9b03      	ldr	r3, [sp, #12]
 801c2fa:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801c2fe:	edd3 7a00 	vldr	s15, [r3]
 801c302:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c306:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c30a:	ee17 8a90 	vmov	r8, s15
 801c30e:	2b01      	cmp	r3, #1
 801c310:	f000 808c 	beq.w	801c42c <calc_new_geometry+0x12cc>
 801c314:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801c318:	ea4f 0368 	mov.w	r3, r8, asr #1
 801c31c:	2b00      	cmp	r3, #0
 801c31e:	9304      	str	r3, [sp, #16]
 801c320:	f77e affe 	ble.w	801b320 <calc_new_geometry+0x1c0>
 801c324:	2100      	movs	r1, #0
 801c326:	9605      	str	r6, [sp, #20]
 801c328:	f8df 81b0 	ldr.w	r8, [pc, #432]	@ 801c4dc <calc_new_geometry+0x137c>
 801c32c:	464e      	mov	r6, r9
 801c32e:	4b6c      	ldr	r3, [pc, #432]	@ (801c4e0 <calc_new_geometry+0x1380>)
 801c330:	4689      	mov	r9, r1
 801c332:	e052      	b.n	801c3da <calc_new_geometry+0x127a>
 801c334:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801c338:	ee37 7a27 	vadd.f32	s14, s14, s15
 801c33c:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801c340:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c342:	eddc 6a00 	vldr	s13, [ip]
 801c346:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801c34a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801c34e:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c352:	f898 1000 	ldrb.w	r1, [r8]
 801c356:	f109 0901 	add.w	r9, r9, #1
 801c35a:	ed8d 7a19 	vstr	s14, [sp, #100]	@ 0x64
 801c35e:	edcd 7a1a 	vstr	s15, [sp, #104]	@ 0x68
 801c362:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801c366:	b1f9      	cbz	r1, 801c3a8 <calc_new_geometry+0x1248>
 801c368:	ed93 6a03 	vldr	s12, [r3, #12]
 801c36c:	edd3 6a04 	vldr	s13, [r3, #16]
 801c370:	ed93 5a00 	vldr	s10, [r3]
 801c374:	edd3 5a01 	vldr	s11, [r3, #4]
 801c378:	ee27 5a05 	vmul.f32	s10, s14, s10
 801c37c:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801c380:	ee27 7a06 	vmul.f32	s14, s14, s12
 801c384:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801c388:	ee35 6a25 	vadd.f32	s12, s10, s11
 801c38c:	ee37 7a27 	vadd.f32	s14, s14, s15
 801c390:	edd3 6a02 	vldr	s13, [r3, #8]
 801c394:	edd3 7a05 	vldr	s15, [r3, #20]
 801c398:	ee76 6a26 	vadd.f32	s13, s12, s13
 801c39c:	ee77 7a27 	vadd.f32	s15, s14, s15
 801c3a0:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 801c3a4:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c3a8:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801c3ac:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801c3b0:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c3b4:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c3b8:	9303      	str	r3, [sp, #12]
 801c3ba:	f7fc ff6f 	bl	801929c <calc_line_geometry>
 801c3be:	9b03      	ldr	r3, [sp, #12]
 801c3c0:	4601      	mov	r1, r0
 801c3c2:	2800      	cmp	r0, #0
 801c3c4:	f47f ae28 	bne.w	801c018 <calc_new_geometry+0xeb8>
 801c3c8:	e897 0003 	ldmia.w	r7, {r0, r1}
 801c3cc:	9a04      	ldr	r2, [sp, #16]
 801c3ce:	e885 0003 	stmia.w	r5, {r0, r1}
 801c3d2:	4591      	cmp	r9, r2
 801c3d4:	d025      	beq.n	801c422 <calc_new_geometry+0x12c2>
 801c3d6:	f8da 200c 	ldr.w	r2, [sl, #12]
 801c3da:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801c3dc:	0088      	lsls	r0, r1, #2
 801c3de:	f100 0c04 	add.w	ip, r0, #4
 801c3e2:	4494      	add	ip, r2
 801c3e4:	4410      	add	r0, r2
 801c3e6:	1c4a      	adds	r2, r1, #1
 801c3e8:	920f      	str	r2, [sp, #60]	@ 0x3c
 801c3ea:	3102      	adds	r1, #2
 801c3ec:	ed90 7a00 	vldr	s14, [r0]
 801c3f0:	2e00      	cmp	r6, #0
 801c3f2:	d19f      	bne.n	801c334 <calc_new_geometry+0x11d4>
 801c3f4:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801c3f8:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c3fa:	eddc 7a00 	vldr	s15, [ip]
 801c3fe:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c402:	e7a6      	b.n	801c352 <calc_new_geometry+0x11f2>
 801c404:	ed9d 1a1d 	vldr	s2, [sp, #116]	@ 0x74
 801c408:	eddd 1a1e 	vldr	s3, [sp, #120]	@ 0x78
 801c40c:	e6dd      	b.n	801c1ca <calc_new_geometry+0x106a>
 801c40e:	eef0 ba48 	vmov.f32	s23, s16
 801c412:	e711      	b.n	801c238 <calc_new_geometry+0x10d8>
 801c414:	eef4 7aea 	vcmpe.f32	s15, s21
 801c418:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c41c:	f6bf ada8 	bge.w	801bf70 <calc_new_geometry+0xe10>
 801c420:	e745      	b.n	801c2ae <calc_new_geometry+0x114e>
 801c422:	9e05      	ldr	r6, [sp, #20]
 801c424:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c428:	f7ff b9d6 	b.w	801b7d8 <calc_new_geometry+0x678>
 801c42c:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c430:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c434:	f7fc fed2 	bl	80191dc <calc_move_geometry>
 801c438:	4601      	mov	r1, r0
 801c43a:	2800      	cmp	r0, #0
 801c43c:	f47f adec 	bne.w	801c018 <calc_new_geometry+0xeb8>
 801c440:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801c444:	ea4f 0368 	mov.w	r3, r8, asr #1
 801c448:	2b00      	cmp	r3, #0
 801c44a:	9304      	str	r3, [sp, #16]
 801c44c:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801c450:	f77f ab63 	ble.w	801bb1a <calc_new_geometry+0x9ba>
 801c454:	f8da 200c 	ldr.w	r2, [sl, #12]
 801c458:	e764      	b.n	801c324 <calc_new_geometry+0x11c4>
 801c45a:	ee27 0a87 	vmul.f32	s0, s15, s14
 801c45e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801c462:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c466:	eef1 8ac0 	vsqrt.f32	s17, s0
 801c46a:	d41c      	bmi.n	801c4a6 <calc_new_geometry+0x1346>
 801c46c:	ee6c caa8 	vmul.f32	s25, s25, s17
 801c470:	ee6d daa8 	vmul.f32	s27, s27, s17
 801c474:	ee8c 6a2c 	vdiv.f32	s12, s24, s25
 801c478:	ee88 5a2d 	vdiv.f32	s10, s16, s27
 801c47c:	eecb 5aac 	vdiv.f32	s11, s23, s25
 801c480:	eecf 6a2d 	vdiv.f32	s13, s30, s27
 801c484:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801c488:	ee76 4a25 	vadd.f32	s9, s12, s11
 801c48c:	ee36 7a85 	vadd.f32	s14, s13, s10
 801c490:	ee64 4aa7 	vmul.f32	s9, s9, s15
 801c494:	ee67 fa27 	vmul.f32	s31, s14, s15
 801c498:	ee76 8a65 	vsub.f32	s17, s12, s11
 801c49c:	ee76 eac5 	vsub.f32	s29, s13, s10
 801c4a0:	eeb0 8a49 	vmov.f32	s16, s18
 801c4a4:	e51a      	b.n	801bedc <calc_new_geometry+0xd7c>
 801c4a6:	f014 fe8b 	bl	80311c0 <sqrtf>
 801c4aa:	e7df      	b.n	801c46c <calc_new_geometry+0x130c>
 801c4ac:	edcd 4a06 	vstr	s9, [sp, #24]
 801c4b0:	ed8d 5a05 	vstr	s10, [sp, #20]
 801c4b4:	edcd 5a04 	vstr	s11, [sp, #16]
 801c4b8:	ed8d 6a03 	vstr	s12, [sp, #12]
 801c4bc:	edcd 6a02 	vstr	s13, [sp, #8]
 801c4c0:	f014 fe7e 	bl	80311c0 <sqrtf>
 801c4c4:	eddd 4a06 	vldr	s9, [sp, #24]
 801c4c8:	ed9d 5a05 	vldr	s10, [sp, #20]
 801c4cc:	eddd 5a04 	vldr	s11, [sp, #16]
 801c4d0:	ed9d 6a03 	vldr	s12, [sp, #12]
 801c4d4:	eddd 6a02 	vldr	s13, [sp, #8]
 801c4d8:	e500      	b.n	801bedc <calc_new_geometry+0xd7c>
 801c4da:	bf00      	nop
 801c4dc:	2008313c 	.word	0x2008313c
 801c4e0:	20083140 	.word	0x20083140
 801c4e4:	20083110 	.word	0x20083110
 801c4e8:	43b40000 	.word	0x43b40000

0801c4ec <calc_clipped_path>:
 801c4ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c4f0:	2600      	movs	r6, #0
 801c4f2:	4c3b      	ldr	r4, [pc, #236]	@ (801c5e0 <calc_clipped_path+0xf4>)
 801c4f4:	4605      	mov	r5, r0
 801c4f6:	6026      	str	r6, [r4, #0]
 801c4f8:	4617      	mov	r7, r2
 801c4fa:	e9dd 6808 	ldrd	r6, r8, [sp, #32]
 801c4fe:	469a      	mov	sl, r3
 801c500:	2b00      	cmp	r3, #0
 801c502:	d04f      	beq.n	801c5a4 <calc_clipped_path+0xb8>
 801c504:	f1b8 0f00 	cmp.w	r8, #0
 801c508:	bf14      	ite	ne
 801c50a:	f04f 0900 	movne.w	r9, #0
 801c50e:	f04f 0902 	moveq.w	r9, #2
 801c512:	edd1 7a35 	vldr	s15, [r1, #212]	@ 0xd4
 801c516:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801c51a:	eddf 6a32 	vldr	s13, [pc, #200]	@ 801c5e4 <calc_clipped_path+0xf8>
 801c51e:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c522:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 801c5e8 <calc_clipped_path+0xfc>
 801c526:	ee77 6ae6 	vsub.f32	s13, s15, s13
 801c52a:	ee77 7a67 	vsub.f32	s15, s14, s15
 801c52e:	4a2f      	ldr	r2, [pc, #188]	@ (801c5ec <calc_clipped_path+0x100>)
 801c530:	4b2f      	ldr	r3, [pc, #188]	@ (801c5f0 <calc_clipped_path+0x104>)
 801c532:	edc2 6a00 	vstr	s13, [r2]
 801c536:	edc3 7a00 	vstr	s15, [r3]
 801c53a:	f000 f9d1 	bl	801c8e0 <nema_vg_get_context>
 801c53e:	f8d5 1084 	ldr.w	r1, [r5, #132]	@ 0x84
 801c542:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801c544:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 801c600 <calc_clipped_path+0x114>
 801c548:	ea41 0203 	orr.w	r2, r1, r3
 801c54c:	4c29      	ldr	r4, [pc, #164]	@ (801c5f4 <calc_clipped_path+0x108>)
 801c54e:	f002 0201 	and.w	r2, r2, #1
 801c552:	f8cc 0000 	str.w	r0, [ip]
 801c556:	7022      	strb	r2, [r4, #0]
 801c558:	b132      	cbz	r2, 801c568 <calc_clipped_path+0x7c>
 801c55a:	07dc      	lsls	r4, r3, #31
 801c55c:	d42b      	bmi.n	801c5b6 <calc_clipped_path+0xca>
 801c55e:	07cb      	lsls	r3, r1, #31
 801c560:	d438      	bmi.n	801c5d4 <calc_clipped_path+0xe8>
 801c562:	4825      	ldr	r0, [pc, #148]	@ (801c5f8 <calc_clipped_path+0x10c>)
 801c564:	f7f5 f99c 	bl	80118a0 <nema_mat3x3_load_identity>
 801c568:	2200      	movs	r2, #0
 801c56a:	2100      	movs	r1, #0
 801c56c:	4c23      	ldr	r4, [pc, #140]	@ (801c5fc <calc_clipped_path+0x110>)
 801c56e:	683b      	ldr	r3, [r7, #0]
 801c570:	e9c4 2204 	strd	r2, r2, [r4, #16]
 801c574:	f884 2020 	strb.w	r2, [r4, #32]
 801c578:	6262      	str	r2, [r4, #36]	@ 0x24
 801c57a:	6832      	ldr	r2, [r6, #0]
 801c57c:	4628      	mov	r0, r5
 801c57e:	f8c4 a004 	str.w	sl, [r4, #4]
 801c582:	f8c4 800c 	str.w	r8, [r4, #12]
 801c586:	6023      	str	r3, [r4, #0]
 801c588:	60a2      	str	r2, [r4, #8]
 801c58a:	61a1      	str	r1, [r4, #24]
 801c58c:	61e1      	str	r1, [r4, #28]
 801c58e:	f7fe fde7 	bl	801b160 <calc_new_geometry>
 801c592:	4605      	mov	r5, r0
 801c594:	b948      	cbnz	r0, 801c5aa <calc_clipped_path+0xbe>
 801c596:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 801c59a:	603a      	str	r2, [r7, #0]
 801c59c:	6033      	str	r3, [r6, #0]
 801c59e:	4648      	mov	r0, r9
 801c5a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c5a4:	f04f 0902 	mov.w	r9, #2
 801c5a8:	e7b3      	b.n	801c512 <calc_clipped_path+0x26>
 801c5aa:	46a9      	mov	r9, r5
 801c5ac:	f000 fa2a 	bl	801ca04 <nema_vg_set_error>
 801c5b0:	4648      	mov	r0, r9
 801c5b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c5b6:	f100 014c 	add.w	r1, r0, #76	@ 0x4c
 801c5ba:	480f      	ldr	r0, [pc, #60]	@ (801c5f8 <calc_clipped_path+0x10c>)
 801c5bc:	f7f5 f97e 	bl	80118bc <nema_mat3x3_copy>
 801c5c0:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 801c5c4:	07da      	lsls	r2, r3, #31
 801c5c6:	d5cf      	bpl.n	801c568 <calc_clipped_path+0x7c>
 801c5c8:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c5cc:	480a      	ldr	r0, [pc, #40]	@ (801c5f8 <calc_clipped_path+0x10c>)
 801c5ce:	f7f5 f9c1 	bl	8011954 <nema_mat3x3_mul>
 801c5d2:	e7c9      	b.n	801c568 <calc_clipped_path+0x7c>
 801c5d4:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c5d8:	4807      	ldr	r0, [pc, #28]	@ (801c5f8 <calc_clipped_path+0x10c>)
 801c5da:	f7f5 f96f 	bl	80118bc <nema_mat3x3_copy>
 801c5de:	e7c3      	b.n	801c568 <calc_clipped_path+0x7c>
 801c5e0:	20083108 	.word	0x20083108
 801c5e4:	43fd8000 	.word	0x43fd8000
 801c5e8:	44bf6000 	.word	0x44bf6000
 801c5ec:	20000144 	.word	0x20000144
 801c5f0:	20000140 	.word	0x20000140
 801c5f4:	2008313c 	.word	0x2008313c
 801c5f8:	20083140 	.word	0x20083140
 801c5fc:	20083110 	.word	0x20083110
 801c600:	2008310c 	.word	0x2008310c

0801c604 <draw_clipped_path>:
 801c604:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c608:	b0b2      	sub	sp, #200	@ 0xc8
 801c60a:	460e      	mov	r6, r1
 801c60c:	4605      	mov	r5, r0
 801c60e:	f000 f967 	bl	801c8e0 <nema_vg_get_context>
 801c612:	4f84      	ldr	r7, [pc, #528]	@ (801c824 <draw_clipped_path+0x220>)
 801c614:	6842      	ldr	r2, [r0, #4]
 801c616:	e9d0 130d 	ldrd	r1, r3, [r0, #52]	@ 0x34
 801c61a:	089b      	lsrs	r3, r3, #2
 801c61c:	9307      	str	r3, [sp, #28]
 801c61e:	9106      	str	r1, [sp, #24]
 801c620:	6038      	str	r0, [r7, #0]
 801c622:	2a00      	cmp	r2, #0
 801c624:	d056      	beq.n	801c6d4 <draw_clipped_path+0xd0>
 801c626:	6881      	ldr	r1, [r0, #8]
 801c628:	2900      	cmp	r1, #0
 801c62a:	d053      	beq.n	801c6d4 <draw_clipped_path+0xd0>
 801c62c:	6889      	ldr	r1, [r1, #8]
 801c62e:	6893      	ldr	r3, [r2, #8]
 801c630:	aa07      	add	r2, sp, #28
 801c632:	e9cd 2100 	strd	r2, r1, [sp]
 801c636:	4628      	mov	r0, r5
 801c638:	aa06      	add	r2, sp, #24
 801c63a:	4631      	mov	r1, r6
 801c63c:	f7ff ff56 	bl	801c4ec <calc_clipped_path>
 801c640:	4b79      	ldr	r3, [pc, #484]	@ (801c828 <draw_clipped_path+0x224>)
 801c642:	4680      	mov	r8, r0
 801c644:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c646:	683c      	ldr	r4, [r7, #0]
 801c648:	2b02      	cmp	r3, #2
 801c64a:	d002      	beq.n	801c652 <draw_clipped_path+0x4e>
 801c64c:	2800      	cmp	r0, #0
 801c64e:	f000 80b4 	beq.w	801c7ba <draw_clipped_path+0x1b6>
 801c652:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801c654:	06db      	lsls	r3, r3, #27
 801c656:	f140 8087 	bpl.w	801c768 <draw_clipped_path+0x164>
 801c65a:	e9dd 2a06 	ldrd	r2, sl, [sp, #24]
 801c65e:	ac02      	add	r4, sp, #8
 801c660:	4620      	mov	r0, r4
 801c662:	2100      	movs	r1, #0
 801c664:	f10d 0920 	add.w	r9, sp, #32
 801c668:	f7e6 fbf6 	bl	8002e58 <nema_buffer_create_pool>
 801c66c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801c670:	e889 000f 	stmia.w	r9, {r0, r1, r2, r3}
 801c674:	4648      	mov	r0, r9
 801c676:	f7e6 fc11 	bl	8002e9c <nema_buffer_map>
 801c67a:	f10d 0830 	add.w	r8, sp, #48	@ 0x30
 801c67e:	ea4f 028a 	mov.w	r2, sl, lsl #2
 801c682:	4620      	mov	r0, r4
 801c684:	2100      	movs	r1, #0
 801c686:	f7e6 fbe7 	bl	8002e58 <nema_buffer_create_pool>
 801c68a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801c68e:	e888 000f 	stmia.w	r8, {r0, r1, r2, r3}
 801c692:	4640      	mov	r0, r8
 801c694:	f7e6 fc02 	bl	8002e9c <nema_buffer_map>
 801c698:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c69a:	2b00      	cmp	r3, #0
 801c69c:	d076      	beq.n	801c78c <draw_clipped_path+0x188>
 801c69e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801c6a0:	2a00      	cmp	r2, #0
 801c6a2:	d070      	beq.n	801c786 <draw_clipped_path+0x182>
 801c6a4:	a907      	add	r1, sp, #28
 801c6a6:	e9cd 1200 	strd	r1, r2, [sp]
 801c6aa:	4628      	mov	r0, r5
 801c6ac:	aa06      	add	r2, sp, #24
 801c6ae:	4631      	mov	r1, r6
 801c6b0:	f7ff ff1c 	bl	801c4ec <calc_clipped_path>
 801c6b4:	4604      	mov	r4, r0
 801c6b6:	2800      	cmp	r0, #0
 801c6b8:	f000 809a 	beq.w	801c7f0 <draw_clipped_path+0x1ec>
 801c6bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c6be:	b113      	cbz	r3, 801c6c6 <draw_clipped_path+0xc2>
 801c6c0:	4648      	mov	r0, r9
 801c6c2:	f7e6 fbed 	bl	8002ea0 <nema_buffer_destroy>
 801c6c6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c6c8:	2b00      	cmp	r3, #0
 801c6ca:	d04e      	beq.n	801c76a <draw_clipped_path+0x166>
 801c6cc:	4640      	mov	r0, r8
 801c6ce:	f7e6 fbe7 	bl	8002ea0 <nema_buffer_destroy>
 801c6d2:	e04a      	b.n	801c76a <draw_clipped_path+0x166>
 801c6d4:	edd6 7a35 	vldr	s15, [r6, #212]	@ 0xd4
 801c6d8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801c6dc:	eddf 6a53 	vldr	s13, [pc, #332]	@ 801c82c <draw_clipped_path+0x228>
 801c6e0:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c6e4:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 801c830 <draw_clipped_path+0x22c>
 801c6e8:	ee77 6ae6 	vsub.f32	s13, s15, s13
 801c6ec:	2201      	movs	r2, #1
 801c6ee:	ee77 7a67 	vsub.f32	s15, s14, s15
 801c6f2:	4950      	ldr	r1, [pc, #320]	@ (801c834 <draw_clipped_path+0x230>)
 801c6f4:	4b50      	ldr	r3, [pc, #320]	@ (801c838 <draw_clipped_path+0x234>)
 801c6f6:	4851      	ldr	r0, [pc, #324]	@ (801c83c <draw_clipped_path+0x238>)
 801c6f8:	601a      	str	r2, [r3, #0]
 801c6fa:	edc1 7a00 	vstr	s15, [r1]
 801c6fe:	edc0 6a00 	vstr	s13, [r0]
 801c702:	f000 f8ed 	bl	801c8e0 <nema_vg_get_context>
 801c706:	f8d5 1084 	ldr.w	r1, [r5, #132]	@ 0x84
 801c70a:	6b02      	ldr	r2, [r0, #48]	@ 0x30
 801c70c:	4c4c      	ldr	r4, [pc, #304]	@ (801c840 <draw_clipped_path+0x23c>)
 801c70e:	ea41 0302 	orr.w	r3, r1, r2
 801c712:	f003 0301 	and.w	r3, r3, #1
 801c716:	6038      	str	r0, [r7, #0]
 801c718:	7023      	strb	r3, [r4, #0]
 801c71a:	b133      	cbz	r3, 801c72a <draw_clipped_path+0x126>
 801c71c:	07d4      	lsls	r4, r2, #31
 801c71e:	d43d      	bmi.n	801c79c <draw_clipped_path+0x198>
 801c720:	07ca      	lsls	r2, r1, #31
 801c722:	d42a      	bmi.n	801c77a <draw_clipped_path+0x176>
 801c724:	4847      	ldr	r0, [pc, #284]	@ (801c844 <draw_clipped_path+0x240>)
 801c726:	f7f5 f8bb 	bl	80118a0 <nema_mat3x3_load_identity>
 801c72a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c72e:	2300      	movs	r3, #0
 801c730:	2200      	movs	r2, #0
 801c732:	4c3d      	ldr	r4, [pc, #244]	@ (801c828 <draw_clipped_path+0x224>)
 801c734:	9306      	str	r3, [sp, #24]
 801c736:	6020      	str	r0, [r4, #0]
 801c738:	4628      	mov	r0, r5
 801c73a:	6063      	str	r3, [r4, #4]
 801c73c:	e9c4 3303 	strd	r3, r3, [r4, #12]
 801c740:	6163      	str	r3, [r4, #20]
 801c742:	f884 3020 	strb.w	r3, [r4, #32]
 801c746:	6263      	str	r3, [r4, #36]	@ 0x24
 801c748:	60a1      	str	r1, [r4, #8]
 801c74a:	9307      	str	r3, [sp, #28]
 801c74c:	61a2      	str	r2, [r4, #24]
 801c74e:	61e2      	str	r2, [r4, #28]
 801c750:	f7fe fd06 	bl	801b160 <calc_new_geometry>
 801c754:	b968      	cbnz	r0, 801c772 <draw_clipped_path+0x16e>
 801c756:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 801c75a:	683c      	ldr	r4, [r7, #0]
 801c75c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801c760:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801c762:	06db      	lsls	r3, r3, #27
 801c764:	f53f af79 	bmi.w	801c65a <draw_clipped_path+0x56>
 801c768:	2402      	movs	r4, #2
 801c76a:	4620      	mov	r0, r4
 801c76c:	b032      	add	sp, #200	@ 0xc8
 801c76e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c772:	f000 f947 	bl	801ca04 <nema_vg_set_error>
 801c776:	683c      	ldr	r4, [r7, #0]
 801c778:	e76b      	b.n	801c652 <draw_clipped_path+0x4e>
 801c77a:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c77e:	4831      	ldr	r0, [pc, #196]	@ (801c844 <draw_clipped_path+0x240>)
 801c780:	f7f5 f89c 	bl	80118bc <nema_mat3x3_copy>
 801c784:	e7d1      	b.n	801c72a <draw_clipped_path+0x126>
 801c786:	4648      	mov	r0, r9
 801c788:	f7e6 fb8a 	bl	8002ea0 <nema_buffer_destroy>
 801c78c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c78e:	2b00      	cmp	r3, #0
 801c790:	d0ea      	beq.n	801c768 <draw_clipped_path+0x164>
 801c792:	4640      	mov	r0, r8
 801c794:	f7e6 fb84 	bl	8002ea0 <nema_buffer_destroy>
 801c798:	2402      	movs	r4, #2
 801c79a:	e7e6      	b.n	801c76a <draw_clipped_path+0x166>
 801c79c:	f100 014c 	add.w	r1, r0, #76	@ 0x4c
 801c7a0:	4828      	ldr	r0, [pc, #160]	@ (801c844 <draw_clipped_path+0x240>)
 801c7a2:	f7f5 f88b 	bl	80118bc <nema_mat3x3_copy>
 801c7a6:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 801c7aa:	07d9      	lsls	r1, r3, #31
 801c7ac:	d5bd      	bpl.n	801c72a <draw_clipped_path+0x126>
 801c7ae:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c7b2:	4824      	ldr	r0, [pc, #144]	@ (801c844 <draw_clipped_path+0x240>)
 801c7b4:	f7f5 f8ce 	bl	8011954 <nema_mat3x3_mul>
 801c7b8:	e7b7      	b.n	801c72a <draw_clipped_path+0x126>
 801c7ba:	4629      	mov	r1, r5
 801c7bc:	2288      	movs	r2, #136	@ 0x88
 801c7be:	a810      	add	r0, sp, #64	@ 0x40
 801c7c0:	f016 f94b 	bl	8032a5a <memcpy>
 801c7c4:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 801c7c8:	6898      	ldr	r0, [r3, #8]
 801c7ca:	6892      	ldr	r2, [r2, #8]
 801c7cc:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801c7d0:	9000      	str	r0, [sp, #0]
 801c7d2:	a810      	add	r0, sp, #64	@ 0x40
 801c7d4:	f000 fe54 	bl	801d480 <nema_vg_path_set_shape>
 801c7d8:	2201      	movs	r2, #1
 801c7da:	683b      	ldr	r3, [r7, #0]
 801c7dc:	a810      	add	r0, sp, #64	@ 0x40
 801c7de:	779a      	strb	r2, [r3, #30]
 801c7e0:	4631      	mov	r1, r6
 801c7e2:	f7fb fde5 	bl	80183b0 <nema_vg_draw_path>
 801c7e6:	683b      	ldr	r3, [r7, #0]
 801c7e8:	4604      	mov	r4, r0
 801c7ea:	f883 801e 	strb.w	r8, [r3, #30]
 801c7ee:	e7bc      	b.n	801c76a <draw_clipped_path+0x166>
 801c7f0:	4629      	mov	r1, r5
 801c7f2:	2288      	movs	r2, #136	@ 0x88
 801c7f4:	a810      	add	r0, sp, #64	@ 0x40
 801c7f6:	f016 f930 	bl	8032a5a <memcpy>
 801c7fa:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c7fc:	9b07      	ldr	r3, [sp, #28]
 801c7fe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c800:	9906      	ldr	r1, [sp, #24]
 801c802:	a810      	add	r0, sp, #64	@ 0x40
 801c804:	9400      	str	r4, [sp, #0]
 801c806:	f000 fe3b 	bl	801d480 <nema_vg_path_set_shape>
 801c80a:	2201      	movs	r2, #1
 801c80c:	683b      	ldr	r3, [r7, #0]
 801c80e:	a810      	add	r0, sp, #64	@ 0x40
 801c810:	779a      	strb	r2, [r3, #30]
 801c812:	4631      	mov	r1, r6
 801c814:	f7fb fdcc 	bl	80183b0 <nema_vg_draw_path>
 801c818:	2200      	movs	r2, #0
 801c81a:	683b      	ldr	r3, [r7, #0]
 801c81c:	4604      	mov	r4, r0
 801c81e:	779a      	strb	r2, [r3, #30]
 801c820:	e74c      	b.n	801c6bc <draw_clipped_path+0xb8>
 801c822:	bf00      	nop
 801c824:	2008310c 	.word	0x2008310c
 801c828:	20083110 	.word	0x20083110
 801c82c:	43fd8000 	.word	0x43fd8000
 801c830:	44bf6000 	.word	0x44bf6000
 801c834:	20000140 	.word	0x20000140
 801c838:	20083108 	.word	0x20083108
 801c83c:	20000144 	.word	0x20000144
 801c840:	2008313c 	.word	0x2008313c
 801c844:	20083140 	.word	0x20083140

0801c848 <context_reset>:
 801c848:	b570      	push	{r4, r5, r6, lr}
 801c84a:	4c23      	ldr	r4, [pc, #140]	@ (801c8d8 <context_reset+0x90>)
 801c84c:	6820      	ldr	r0, [r4, #0]
 801c84e:	b110      	cbz	r0, 801c856 <context_reset+0xe>
 801c850:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801c852:	069b      	lsls	r3, r3, #26
 801c854:	d43a      	bmi.n	801c8cc <context_reset+0x84>
 801c856:	2300      	movs	r3, #0
 801c858:	6962      	ldr	r2, [r4, #20]
 801c85a:	e9c4 3300 	strd	r3, r3, [r4]
 801c85e:	60a3      	str	r3, [r4, #8]
 801c860:	b112      	cbz	r2, 801c868 <context_reset+0x20>
 801c862:	481e      	ldr	r0, [pc, #120]	@ (801c8dc <context_reset+0x94>)
 801c864:	f7e6 fb1c 	bl	8002ea0 <nema_buffer_destroy>
 801c868:	2300      	movs	r3, #0
 801c86a:	2200      	movs	r2, #0
 801c86c:	2602      	movs	r6, #2
 801c86e:	f240 5501 	movw	r5, #1281	@ 0x501
 801c872:	f04f 7000 	mov.w	r0, #33554432	@ 0x2000000
 801c876:	f04f 61f0 	mov.w	r1, #125829120	@ 0x7800000
 801c87a:	e9c4 2203 	strd	r2, r2, [r4, #12]
 801c87e:	e9c4 2205 	strd	r2, r2, [r4, #20]
 801c882:	6222      	str	r2, [r4, #32]
 801c884:	e9c4 220c 	strd	r2, r2, [r4, #48]	@ 0x30
 801c888:	e9c4 220e 	strd	r2, r2, [r4, #56]	@ 0x38
 801c88c:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
 801c890:	61e6      	str	r6, [r4, #28]
 801c892:	e9c4 5009 	strd	r5, r0, [r4, #36]	@ 0x24
 801c896:	62e1      	str	r1, [r4, #44]	@ 0x2c
 801c898:	6423      	str	r3, [r4, #64]	@ 0x40
 801c89a:	6463      	str	r3, [r4, #68]	@ 0x44
 801c89c:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801c89e:	6723      	str	r3, [r4, #112]	@ 0x70
 801c8a0:	6523      	str	r3, [r4, #80]	@ 0x50
 801c8a2:	6763      	str	r3, [r4, #116]	@ 0x74
 801c8a4:	6563      	str	r3, [r4, #84]	@ 0x54
 801c8a6:	67a3      	str	r3, [r4, #120]	@ 0x78
 801c8a8:	65a3      	str	r3, [r4, #88]	@ 0x58
 801c8aa:	67e3      	str	r3, [r4, #124]	@ 0x7c
 801c8ac:	65e3      	str	r3, [r4, #92]	@ 0x5c
 801c8ae:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
 801c8b2:	6623      	str	r3, [r4, #96]	@ 0x60
 801c8b4:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 801c8b8:	6663      	str	r3, [r4, #100]	@ 0x64
 801c8ba:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 801c8be:	66a3      	str	r3, [r4, #104]	@ 0x68
 801c8c0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 801c8c4:	66e3      	str	r3, [r4, #108]	@ 0x6c
 801c8c6:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 801c8ca:	bd70      	pop	{r4, r5, r6, pc}
 801c8cc:	6883      	ldr	r3, [r0, #8]
 801c8ce:	2b00      	cmp	r3, #0
 801c8d0:	d0c1      	beq.n	801c856 <context_reset+0xe>
 801c8d2:	f7e6 fae5 	bl	8002ea0 <nema_buffer_destroy>
 801c8d6:	e7be      	b.n	801c856 <context_reset+0xe>
 801c8d8:	20000148 	.word	0x20000148
 801c8dc:	20000154 	.word	0x20000154

0801c8e0 <nema_vg_get_context>:
 801c8e0:	4800      	ldr	r0, [pc, #0]	@ (801c8e4 <nema_vg_get_context+0x4>)
 801c8e2:	4770      	bx	lr
 801c8e4:	20000148 	.word	0x20000148

0801c8e8 <stencil_buffer_create>:
 801c8e8:	b538      	push	{r3, r4, r5, lr}
 801c8ea:	4605      	mov	r5, r0
 801c8ec:	1cc8      	adds	r0, r1, #3
 801c8ee:	bf48      	it	mi
 801c8f0:	1d88      	addmi	r0, r1, #6
 801c8f2:	1cd4      	adds	r4, r2, #3
 801c8f4:	bf48      	it	mi
 801c8f6:	1d94      	addmi	r4, r2, #6
 801c8f8:	1080      	asrs	r0, r0, #2
 801c8fa:	0080      	lsls	r0, r0, #2
 801c8fc:	f024 0203 	bic.w	r2, r4, #3
 801c900:	fb02 f200 	mul.w	r2, r2, r0
 801c904:	4619      	mov	r1, r3
 801c906:	4628      	mov	r0, r5
 801c908:	f7e6 faa6 	bl	8002e58 <nema_buffer_create_pool>
 801c90c:	4628      	mov	r0, r5
 801c90e:	bd38      	pop	{r3, r4, r5, pc}

0801c910 <stencil_buffer_set>:
 801c910:	b082      	sub	sp, #8
 801c912:	b470      	push	{r4, r5, r6}
 801c914:	4606      	mov	r6, r0
 801c916:	460d      	mov	r5, r1
 801c918:	a803      	add	r0, sp, #12
 801c91a:	e880 000c 	stmia.w	r0, {r2, r3}
 801c91e:	4c15      	ldr	r4, [pc, #84]	@ (801c974 <stencil_buffer_set+0x64>)
 801c920:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 801c922:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801c926:	1cf3      	adds	r3, r6, #3
 801c928:	bf48      	it	mi
 801c92a:	1db3      	addmi	r3, r6, #6
 801c92c:	1cea      	adds	r2, r5, #3
 801c92e:	bf48      	it	mi
 801c930:	1daa      	addmi	r2, r5, #6
 801c932:	f022 0203 	bic.w	r2, r2, #3
 801c936:	ee07 2a90 	vmov	s15, r2
 801c93a:	f023 0303 	bic.w	r3, r3, #3
 801c93e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801c942:	ee07 3a90 	vmov	s15, r3
 801c946:	2100      	movs	r1, #0
 801c948:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c94c:	61a1      	str	r1, [r4, #24]
 801c94e:	61e1      	str	r1, [r4, #28]
 801c950:	6261      	str	r1, [r4, #36]	@ 0x24
 801c952:	6321      	str	r1, [r4, #48]	@ 0x30
 801c954:	4908      	ldr	r1, [pc, #32]	@ (801c978 <stencil_buffer_set+0x68>)
 801c956:	ed84 7a0b 	vstr	s14, [r4, #44]	@ 0x2c
 801c95a:	600c      	str	r4, [r1, #0]
 801c95c:	ed84 7a0d 	vstr	s14, [r4, #52]	@ 0x34
 801c960:	edc4 7a08 	vstr	s15, [r4, #32]
 801c964:	edc4 7a0a 	vstr	s15, [r4, #40]	@ 0x28
 801c968:	e9c4 3204 	strd	r3, r2, [r4, #16]
 801c96c:	bc70      	pop	{r4, r5, r6}
 801c96e:	b002      	add	sp, #8
 801c970:	4770      	bx	lr
 801c972:	bf00      	nop
 801c974:	20083258 	.word	0x20083258
 801c978:	20000148 	.word	0x20000148

0801c97c <nema_vg_get_stencil>:
 801c97c:	4b01      	ldr	r3, [pc, #4]	@ (801c984 <nema_vg_get_stencil+0x8>)
 801c97e:	6818      	ldr	r0, [r3, #0]
 801c980:	4770      	bx	lr
 801c982:	bf00      	nop
 801c984:	20000148 	.word	0x20000148

0801c988 <lut_buffer_create>:
 801c988:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c98a:	4d1a      	ldr	r5, [pc, #104]	@ (801c9f4 <lut_buffer_create+0x6c>)
 801c98c:	b085      	sub	sp, #20
 801c98e:	69ac      	ldr	r4, [r5, #24]
 801c990:	b10c      	cbz	r4, 801c996 <lut_buffer_create+0xe>
 801c992:	b005      	add	sp, #20
 801c994:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c996:	466e      	mov	r6, sp
 801c998:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801c99c:	4630      	mov	r0, r6
 801c99e:	4621      	mov	r1, r4
 801c9a0:	f7e6 fa5a 	bl	8002e58 <nema_buffer_create_pool>
 801c9a4:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 801c9a8:	f105 060c 	add.w	r6, r5, #12
 801c9ac:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 801c9b0:	4627      	mov	r7, r4
 801c9b2:	4623      	mov	r3, r4
 801c9b4:	696d      	ldr	r5, [r5, #20]
 801c9b6:	26ff      	movs	r6, #255	@ 0xff
 801c9b8:	e008      	b.n	801c9cc <lut_buffer_create+0x44>
 801c9ba:	2880      	cmp	r0, #128	@ 0x80
 801c9bc:	f1c4 0100 	rsb	r1, r4, #0
 801c9c0:	d016      	beq.n	801c9f0 <lut_buffer_create+0x68>
 801c9c2:	bfcc      	ite	gt
 801c9c4:	b2e1      	uxtbgt	r1, r4
 801c9c6:	b2c9      	uxtble	r1, r1
 801c9c8:	54a9      	strb	r1, [r5, r2]
 801c9ca:	3410      	adds	r4, #16
 801c9cc:	ea44 1213 	orr.w	r2, r4, r3, lsr #4
 801c9d0:	3301      	adds	r3, #1
 801c9d2:	f1a3 0172 	sub.w	r1, r3, #114	@ 0x72
 801c9d6:	291e      	cmp	r1, #30
 801c9d8:	f103 30ff 	add.w	r0, r3, #4294967295
 801c9dc:	b2d2      	uxtb	r2, r2
 801c9de:	d9ec      	bls.n	801c9ba <lut_buffer_create+0x32>
 801c9e0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 801c9e4:	54ae      	strb	r6, [r5, r2]
 801c9e6:	d1f0      	bne.n	801c9ca <lut_buffer_create+0x42>
 801c9e8:	f885 60ff 	strb.w	r6, [r5, #255]	@ 0xff
 801c9ec:	b005      	add	sp, #20
 801c9ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c9f0:	54af      	strb	r7, [r5, r2]
 801c9f2:	e7ea      	b.n	801c9ca <lut_buffer_create+0x42>
 801c9f4:	20000148 	.word	0x20000148

0801c9f8 <nema_vg_set_fill_rule>:
 801c9f8:	4b01      	ldr	r3, [pc, #4]	@ (801ca00 <nema_vg_set_fill_rule+0x8>)
 801c9fa:	7718      	strb	r0, [r3, #28]
 801c9fc:	4770      	bx	lr
 801c9fe:	bf00      	nop
 801ca00:	20000148 	.word	0x20000148

0801ca04 <nema_vg_set_error>:
 801ca04:	4a02      	ldr	r2, [pc, #8]	@ (801ca10 <nema_vg_set_error+0xc>)
 801ca06:	6a13      	ldr	r3, [r2, #32]
 801ca08:	4318      	orrs	r0, r3
 801ca0a:	6210      	str	r0, [r2, #32]
 801ca0c:	4770      	bx	lr
 801ca0e:	bf00      	nop
 801ca10:	20000148 	.word	0x20000148

0801ca14 <nema_vg_set_blend>:
 801ca14:	4b01      	ldr	r3, [pc, #4]	@ (801ca1c <nema_vg_set_blend+0x8>)
 801ca16:	6258      	str	r0, [r3, #36]	@ 0x24
 801ca18:	4770      	bx	lr
 801ca1a:	bf00      	nop
 801ca1c:	20000148 	.word	0x20000148

0801ca20 <nema_vg_set_quality>:
 801ca20:	06c2      	lsls	r2, r0, #27
 801ca22:	bf4d      	iteet	mi
 801ca24:	2200      	movmi	r2, #0
 801ca26:	f04f 62f0 	movpl.w	r2, #125829120	@ 0x7800000
 801ca2a:	f04f 7100 	movpl.w	r1, #33554432	@ 0x2000000
 801ca2e:	4611      	movmi	r1, r2
 801ca30:	4b02      	ldr	r3, [pc, #8]	@ (801ca3c <nema_vg_set_quality+0x1c>)
 801ca32:	7758      	strb	r0, [r3, #29]
 801ca34:	e9c3 120a 	strd	r1, r2, [r3, #40]	@ 0x28
 801ca38:	4770      	bx	lr
 801ca3a:	bf00      	nop
 801ca3c:	20000148 	.word	0x20000148

0801ca40 <nema_vg_set_global_matrix>:
 801ca40:	2800      	cmp	r0, #0
 801ca42:	d034      	beq.n	801caae <nema_vg_set_global_matrix+0x6e>
 801ca44:	b510      	push	{r4, lr}
 801ca46:	4c1e      	ldr	r4, [pc, #120]	@ (801cac0 <nema_vg_set_global_matrix+0x80>)
 801ca48:	6803      	ldr	r3, [r0, #0]
 801ca4a:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801ca4c:	6803      	ldr	r3, [r0, #0]
 801ca4e:	6723      	str	r3, [r4, #112]	@ 0x70
 801ca50:	6843      	ldr	r3, [r0, #4]
 801ca52:	6523      	str	r3, [r4, #80]	@ 0x50
 801ca54:	6843      	ldr	r3, [r0, #4]
 801ca56:	6763      	str	r3, [r4, #116]	@ 0x74
 801ca58:	6883      	ldr	r3, [r0, #8]
 801ca5a:	6563      	str	r3, [r4, #84]	@ 0x54
 801ca5c:	6883      	ldr	r3, [r0, #8]
 801ca5e:	67a3      	str	r3, [r4, #120]	@ 0x78
 801ca60:	68c3      	ldr	r3, [r0, #12]
 801ca62:	65a3      	str	r3, [r4, #88]	@ 0x58
 801ca64:	68c3      	ldr	r3, [r0, #12]
 801ca66:	67e3      	str	r3, [r4, #124]	@ 0x7c
 801ca68:	6903      	ldr	r3, [r0, #16]
 801ca6a:	65e3      	str	r3, [r4, #92]	@ 0x5c
 801ca6c:	6903      	ldr	r3, [r0, #16]
 801ca6e:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
 801ca72:	6943      	ldr	r3, [r0, #20]
 801ca74:	6623      	str	r3, [r4, #96]	@ 0x60
 801ca76:	6943      	ldr	r3, [r0, #20]
 801ca78:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 801ca7c:	6983      	ldr	r3, [r0, #24]
 801ca7e:	6663      	str	r3, [r4, #100]	@ 0x64
 801ca80:	6983      	ldr	r3, [r0, #24]
 801ca82:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 801ca86:	69c3      	ldr	r3, [r0, #28]
 801ca88:	66a3      	str	r3, [r4, #104]	@ 0x68
 801ca8a:	69c3      	ldr	r3, [r0, #28]
 801ca8c:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 801ca90:	6a03      	ldr	r3, [r0, #32]
 801ca92:	66e3      	str	r3, [r4, #108]	@ 0x6c
 801ca94:	6a03      	ldr	r3, [r0, #32]
 801ca96:	f104 0070 	add.w	r0, r4, #112	@ 0x70
 801ca9a:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 801ca9e:	f7f5 f84f 	bl	8011b40 <nema_mat3x3_invert>
 801caa2:	b950      	cbnz	r0, 801caba <nema_vg_set_global_matrix+0x7a>
 801caa4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801caa6:	f043 0301 	orr.w	r3, r3, #1
 801caaa:	6323      	str	r3, [r4, #48]	@ 0x30
 801caac:	bd10      	pop	{r4, pc}
 801caae:	4a04      	ldr	r2, [pc, #16]	@ (801cac0 <nema_vg_set_global_matrix+0x80>)
 801cab0:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 801cab2:	f023 0301 	bic.w	r3, r3, #1
 801cab6:	6313      	str	r3, [r2, #48]	@ 0x30
 801cab8:	4770      	bx	lr
 801caba:	f44f 2080 	mov.w	r0, #262144	@ 0x40000
 801cabe:	bd10      	pop	{r4, pc}
 801cac0:	20000148 	.word	0x20000148

0801cac4 <nema_vg_handle_large_coords>:
 801cac4:	4a08      	ldr	r2, [pc, #32]	@ (801cae8 <nema_vg_handle_large_coords+0x24>)
 801cac6:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 801cac8:	b130      	cbz	r0, 801cad8 <nema_vg_handle_large_coords+0x14>
 801caca:	f043 0304 	orr.w	r3, r3, #4
 801cace:	b939      	cbnz	r1, 801cae0 <nema_vg_handle_large_coords+0x1c>
 801cad0:	f023 0310 	bic.w	r3, r3, #16
 801cad4:	6313      	str	r3, [r2, #48]	@ 0x30
 801cad6:	4770      	bx	lr
 801cad8:	f023 0304 	bic.w	r3, r3, #4
 801cadc:	2900      	cmp	r1, #0
 801cade:	d0f7      	beq.n	801cad0 <nema_vg_handle_large_coords+0xc>
 801cae0:	f043 0310 	orr.w	r3, r3, #16
 801cae4:	6313      	str	r3, [r2, #48]	@ 0x30
 801cae6:	4770      	bx	lr
 801cae8:	20000148 	.word	0x20000148

0801caec <nema_vg_paint_create>:
 801caec:	b538      	push	{r3, r4, r5, lr}
 801caee:	20e0      	movs	r0, #224	@ 0xe0
 801caf0:	f7e6 f930 	bl	8002d54 <nema_host_malloc>
 801caf4:	4604      	mov	r4, r0
 801caf6:	b1e8      	cbz	r0, 801cb34 <nema_vg_paint_create+0x48>
 801caf8:	2500      	movs	r5, #0
 801cafa:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 801cafe:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 801cb02:	f8c0 30d4 	str.w	r3, [r0, #212]	@ 0xd4
 801cb06:	f8c0 30d8 	str.w	r3, [r0, #216]	@ 0xd8
 801cb0a:	f880 502c 	strb.w	r5, [r0, #44]	@ 0x2c
 801cb0e:	f880 50dd 	strb.w	r5, [r0, #221]	@ 0xdd
 801cb12:	f880 50d0 	strb.w	r5, [r0, #208]	@ 0xd0
 801cb16:	e9c0 250c 	strd	r2, r5, [r0, #48]	@ 0x30
 801cb1a:	e9c0 5500 	strd	r5, r5, [r0]
 801cb1e:	3038      	adds	r0, #56	@ 0x38
 801cb20:	f7f4 febe 	bl	80118a0 <nema_mat3x3_load_identity>
 801cb24:	f104 0008 	add.w	r0, r4, #8
 801cb28:	f7f4 feba 	bl	80118a0 <nema_mat3x3_load_identity>
 801cb2c:	f884 50dc 	strb.w	r5, [r4, #220]	@ 0xdc
 801cb30:	4620      	mov	r0, r4
 801cb32:	bd38      	pop	{r3, r4, r5, pc}
 801cb34:	2001      	movs	r0, #1
 801cb36:	f7ff ff65 	bl	801ca04 <nema_vg_set_error>
 801cb3a:	4620      	mov	r0, r4
 801cb3c:	bd38      	pop	{r3, r4, r5, pc}
 801cb3e:	bf00      	nop

0801cb40 <nema_vg_paint_set_type>:
 801cb40:	b138      	cbz	r0, 801cb52 <nema_vg_paint_set_type+0x12>
 801cb42:	2904      	cmp	r1, #4
 801cb44:	d802      	bhi.n	801cb4c <nema_vg_paint_set_type+0xc>
 801cb46:	f880 10dd 	strb.w	r1, [r0, #221]	@ 0xdd
 801cb4a:	4770      	bx	lr
 801cb4c:	2008      	movs	r0, #8
 801cb4e:	f7ff bf59 	b.w	801ca04 <nema_vg_set_error>
 801cb52:	2001      	movs	r0, #1
 801cb54:	f7ff bf56 	b.w	801ca04 <nema_vg_set_error>

0801cb58 <nema_vg_paint_lock_tran_to_path>:
 801cb58:	b160      	cbz	r0, 801cb74 <nema_vg_paint_lock_tran_to_path+0x1c>
 801cb5a:	f890 30dc 	ldrb.w	r3, [r0, #220]	@ 0xdc
 801cb5e:	b121      	cbz	r1, 801cb6a <nema_vg_paint_lock_tran_to_path+0x12>
 801cb60:	f043 0301 	orr.w	r3, r3, #1
 801cb64:	f880 30dc 	strb.w	r3, [r0, #220]	@ 0xdc
 801cb68:	4770      	bx	lr
 801cb6a:	f023 0301 	bic.w	r3, r3, #1
 801cb6e:	f880 30dc 	strb.w	r3, [r0, #220]	@ 0xdc
 801cb72:	4770      	bx	lr
 801cb74:	2001      	movs	r0, #1
 801cb76:	f7ff bf45 	b.w	801ca04 <nema_vg_set_error>
 801cb7a:	bf00      	nop

0801cb7c <nema_vg_grad_create>:
 801cb7c:	b530      	push	{r4, r5, lr}
 801cb7e:	2010      	movs	r0, #16
 801cb80:	b085      	sub	sp, #20
 801cb82:	f7e6 f8e7 	bl	8002d54 <nema_host_malloc>
 801cb86:	466d      	mov	r5, sp
 801cb88:	4604      	mov	r4, r0
 801cb8a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801cb8e:	4628      	mov	r0, r5
 801cb90:	2100      	movs	r1, #0
 801cb92:	f7e6 f961 	bl	8002e58 <nema_buffer_create_pool>
 801cb96:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801cb9a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801cb9e:	4620      	mov	r0, r4
 801cba0:	b005      	add	sp, #20
 801cba2:	bd30      	pop	{r4, r5, pc}

0801cba4 <nema_vg_grad_destroy>:
 801cba4:	b140      	cbz	r0, 801cbb8 <nema_vg_grad_destroy+0x14>
 801cba6:	b510      	push	{r4, lr}
 801cba8:	4604      	mov	r4, r0
 801cbaa:	f7e6 f979 	bl	8002ea0 <nema_buffer_destroy>
 801cbae:	4620      	mov	r0, r4
 801cbb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cbb4:	f7e6 b8cc 	b.w	8002d50 <nema_host_free>
 801cbb8:	4770      	bx	lr
 801cbba:	bf00      	nop

0801cbbc <nema_vg_grad_set>:
 801cbbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbc0:	ed2d 8b10 	vpush	{d8-d15}
 801cbc4:	291f      	cmp	r1, #31
 801cbc6:	b091      	sub	sp, #68	@ 0x44
 801cbc8:	4680      	mov	r8, r0
 801cbca:	4615      	mov	r5, r2
 801cbcc:	9304      	str	r3, [sp, #16]
 801cbce:	f300 8293 	bgt.w	801d0f8 <nema_vg_grad_set+0x53c>
 801cbd2:	460f      	mov	r7, r1
 801cbd4:	2100      	movs	r1, #0
 801cbd6:	2601      	movs	r6, #1
 801cbd8:	460c      	mov	r4, r1
 801cbda:	4608      	mov	r0, r1
 801cbdc:	4633      	mov	r3, r6
 801cbde:	2240      	movs	r2, #64	@ 0x40
 801cbe0:	f7f4 f88c 	bl	8010cfc <nema_set_clip_temp>
 801cbe4:	f8d8 100c 	ldr.w	r1, [r8, #12]
 801cbe8:	4633      	mov	r3, r6
 801cbea:	e9cd 4401 	strd	r4, r4, [sp, #4]
 801cbee:	4630      	mov	r0, r6
 801cbf0:	2240      	movs	r2, #64	@ 0x40
 801cbf2:	9600      	str	r6, [sp, #0]
 801cbf4:	f7f3 ff7e 	bl	8010af4 <nema_bind_tex>
 801cbf8:	f04f 33ff 	mov.w	r3, #4294967295
 801cbfc:	4631      	mov	r1, r6
 801cbfe:	461a      	mov	r2, r3
 801cc00:	4630      	mov	r0, r6
 801cc02:	f001 f9d5 	bl	801dfb0 <nema_set_blend>
 801cc06:	4630      	mov	r0, r6
 801cc08:	f7f4 f8ae 	bl	8010d68 <nema_enable_gradient>
 801cc0c:	ed9f 6a80 	vldr	s12, [pc, #512]	@ 801ce10 <nema_vg_grad_set+0x254>
 801cc10:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801cc14:	4622      	mov	r2, r4
 801cc16:	4620      	mov	r0, r4
 801cc18:	eb05 0487 	add.w	r4, r5, r7, lsl #2
 801cc1c:	b912      	cbnz	r2, 801cc24 <nema_vg_grad_set+0x68>
 801cc1e:	2801      	cmp	r0, #1
 801cc20:	f340 80c3 	ble.w	801cdaa <nema_vg_grad_set+0x1ee>
 801cc24:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 801cc28:	3201      	adds	r2, #1
 801cc2a:	4297      	cmp	r7, r2
 801cc2c:	ed93 7a00 	vldr	s14, [r3]
 801cc30:	f340 80c0 	ble.w	801cdb4 <nema_vg_grad_set+0x1f8>
 801cc34:	0093      	lsls	r3, r2, #2
 801cc36:	18e9      	adds	r1, r5, r3
 801cc38:	edd1 7a00 	vldr	s15, [r1]
 801cc3c:	eef4 7ac7 	vcmpe.f32	s15, s14
 801cc40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cc44:	f100 80bc 	bmi.w	801cdc0 <nema_vg_grad_set+0x204>
 801cc48:	3304      	adds	r3, #4
 801cc4a:	442b      	add	r3, r5
 801cc4c:	4601      	mov	r1, r0
 801cc4e:	e00d      	b.n	801cc6c <nema_vg_grad_set+0xb0>
 801cc50:	42a3      	cmp	r3, r4
 801cc52:	f102 0201 	add.w	r2, r2, #1
 801cc56:	d022      	beq.n	801cc9e <nema_vg_grad_set+0xe2>
 801cc58:	ecb3 7a01 	vldmia	r3!, {s14}
 801cc5c:	eef4 7ac7 	vcmpe.f32	s15, s14
 801cc60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cc64:	f300 80ac 	bgt.w	801cdc0 <nema_vg_grad_set+0x204>
 801cc68:	eef0 7a47 	vmov.f32	s15, s14
 801cc6c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cc70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cc74:	dbec      	blt.n	801cc50 <nema_vg_grad_set+0x94>
 801cc76:	eef4 7ae6 	vcmpe.f32	s15, s13
 801cc7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cc7e:	d8e7      	bhi.n	801cc50 <nema_vg_grad_set+0x94>
 801cc80:	2900      	cmp	r1, #0
 801cc82:	f040 8082 	bne.w	801cd8a <nema_vg_grad_set+0x1ce>
 801cc86:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cc8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cc8e:	f300 8239 	bgt.w	801d104 <nema_vg_grad_set+0x548>
 801cc92:	42a3      	cmp	r3, r4
 801cc94:	f04f 0101 	mov.w	r1, #1
 801cc98:	f102 0201 	add.w	r2, r2, #1
 801cc9c:	d1dc      	bne.n	801cc58 <nema_vg_grad_set+0x9c>
 801cc9e:	2900      	cmp	r1, #0
 801cca0:	f340 808c 	ble.w	801cdbc <nema_vg_grad_set+0x200>
 801cca4:	eddf ca5e 	vldr	s25, [pc, #376]	@ 801ce20 <nema_vg_grad_set+0x264>
 801cca8:	2600      	movs	r6, #0
 801ccaa:	f04f 0b01 	mov.w	fp, #1
 801ccae:	eeb0 da6c 	vmov.f32	s26, s25
 801ccb2:	eef0 da6c 	vmov.f32	s27, s25
 801ccb6:	eeb0 ea6c 	vmov.f32	s28, s25
 801ccba:	eeb0 aa6c 	vmov.f32	s20, s25
 801ccbe:	eef0 8a6c 	vmov.f32	s17, s25
 801ccc2:	eeb0 9a6c 	vmov.f32	s18, s25
 801ccc6:	eef0 9a6c 	vmov.f32	s19, s25
 801ccca:	46b1      	mov	r9, r6
 801cccc:	46b0      	mov	r8, r6
 801ccce:	46da      	mov	sl, fp
 801ccd0:	eddf aa4f 	vldr	s21, [pc, #316]	@ 801ce10 <nema_vg_grad_set+0x254>
 801ccd4:	eef7 ba00 	vmov.f32	s23, #112	@ 0x3f800000  1.0
 801ccd8:	ed9f ca4e 	vldr	s24, [pc, #312]	@ 801ce14 <nema_vg_grad_set+0x258>
 801ccdc:	ed9f 8a50 	vldr	s16, [pc, #320]	@ 801ce20 <nema_vg_grad_set+0x264>
 801cce0:	f8cd b014 	str.w	fp, [sp, #20]
 801cce4:	b91e      	cbnz	r6, 801ccee <nema_vg_grad_set+0x132>
 801cce6:	f1b8 0f01 	cmp.w	r8, #1
 801ccea:	f340 8201 	ble.w	801d0f0 <nema_vg_grad_set+0x534>
 801ccee:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801ccf2:	ed93 7a00 	vldr	s14, [r3]
 801ccf6:	1c72      	adds	r2, r6, #1
 801ccf8:	4297      	cmp	r7, r2
 801ccfa:	f340 817d 	ble.w	801cff8 <nema_vg_grad_set+0x43c>
 801ccfe:	0093      	lsls	r3, r2, #2
 801cd00:	18e9      	adds	r1, r5, r3
 801cd02:	edd1 7a00 	vldr	s15, [r1]
 801cd06:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801cd0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd0e:	f300 812d 	bgt.w	801cf6c <nema_vg_grad_set+0x3b0>
 801cd12:	3304      	adds	r3, #4
 801cd14:	442b      	add	r3, r5
 801cd16:	4641      	mov	r1, r8
 801cd18:	e00c      	b.n	801cd34 <nema_vg_grad_set+0x178>
 801cd1a:	429c      	cmp	r4, r3
 801cd1c:	f102 0201 	add.w	r2, r2, #1
 801cd20:	d01f      	beq.n	801cd62 <nema_vg_grad_set+0x1a6>
 801cd22:	ecb3 7a01 	vldmia	r3!, {s14}
 801cd26:	eef4 7ac7 	vcmpe.f32	s15, s14
 801cd2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd2e:	dc7b      	bgt.n	801ce28 <nema_vg_grad_set+0x26c>
 801cd30:	eef0 7a47 	vmov.f32	s15, s14
 801cd34:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cd38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd3c:	dbed      	blt.n	801cd1a <nema_vg_grad_set+0x15e>
 801cd3e:	eef4 7aeb 	vcmpe.f32	s15, s23
 801cd42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd46:	d8e8      	bhi.n	801cd1a <nema_vg_grad_set+0x15e>
 801cd48:	bb39      	cbnz	r1, 801cd9a <nema_vg_grad_set+0x1de>
 801cd4a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cd4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd52:	f300 819c 	bgt.w	801d08e <nema_vg_grad_set+0x4d2>
 801cd56:	429c      	cmp	r4, r3
 801cd58:	f04f 0101 	mov.w	r1, #1
 801cd5c:	f102 0201 	add.w	r2, r2, #1
 801cd60:	d1df      	bne.n	801cd22 <nema_vg_grad_set+0x166>
 801cd62:	9b05      	ldr	r3, [sp, #20]
 801cd64:	2b00      	cmp	r3, #0
 801cd66:	f000 818d 	beq.w	801d084 <nema_vg_grad_set+0x4c8>
 801cd6a:	2900      	cmp	r1, #0
 801cd6c:	f340 81cc 	ble.w	801d108 <nema_vg_grad_set+0x54c>
 801cd70:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801cd74:	edd3 6a00 	vldr	s13, [r3]
 801cd78:	eef4 6aeb 	vcmpe.f32	s13, s23
 801cd7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd80:	f100 814a 	bmi.w	801d018 <nema_vg_grad_set+0x45c>
 801cd84:	f8dd b014 	ldr.w	fp, [sp, #20]
 801cd88:	e052      	b.n	801ce30 <nema_vg_grad_set+0x274>
 801cd8a:	3101      	adds	r1, #1
 801cd8c:	2901      	cmp	r1, #1
 801cd8e:	f77f af5f 	ble.w	801cc50 <nema_vg_grad_set+0x94>
 801cd92:	4281      	cmp	r1, r0
 801cd94:	d086      	beq.n	801cca4 <nema_vg_grad_set+0xe8>
 801cd96:	4608      	mov	r0, r1
 801cd98:	e740      	b.n	801cc1c <nema_vg_grad_set+0x60>
 801cd9a:	3101      	adds	r1, #1
 801cd9c:	2901      	cmp	r1, #1
 801cd9e:	ddbc      	ble.n	801cd1a <nema_vg_grad_set+0x15e>
 801cda0:	46b1      	mov	r9, r6
 801cda2:	f04f 0b00 	mov.w	fp, #0
 801cda6:	4616      	mov	r6, r2
 801cda8:	e042      	b.n	801ce30 <nema_vg_grad_set+0x274>
 801cdaa:	4297      	cmp	r7, r2
 801cdac:	eeb0 7a46 	vmov.f32	s14, s12
 801cdb0:	f73f af40 	bgt.w	801cc34 <nema_vg_grad_set+0x78>
 801cdb4:	4601      	mov	r1, r0
 801cdb6:	2900      	cmp	r1, #0
 801cdb8:	f73f af74 	bgt.w	801cca4 <nema_vg_grad_set+0xe8>
 801cdbc:	f47f af72 	bne.w	801cca4 <nema_vg_grad_set+0xe8>
 801cdc0:	4b15      	ldr	r3, [pc, #84]	@ (801ce18 <nema_vg_grad_set+0x25c>)
 801cdc2:	ac0c      	add	r4, sp, #48	@ 0x30
 801cdc4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801cdc6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801cdca:	2100      	movs	r1, #0
 801cdcc:	2500      	movs	r5, #0
 801cdce:	ab08      	add	r3, sp, #32
 801cdd0:	4e12      	ldr	r6, [pc, #72]	@ (801ce1c <nema_vg_grad_set+0x260>)
 801cdd2:	4608      	mov	r0, r1
 801cdd4:	9300      	str	r3, [sp, #0]
 801cdd6:	2240      	movs	r2, #64	@ 0x40
 801cdd8:	2301      	movs	r3, #1
 801cdda:	e9cd 4401 	strd	r4, r4, [sp, #4]
 801cdde:	9508      	str	r5, [sp, #32]
 801cde0:	9509      	str	r5, [sp, #36]	@ 0x24
 801cde2:	950a      	str	r5, [sp, #40]	@ 0x28
 801cde4:	960b      	str	r6, [sp, #44]	@ 0x2c
 801cde6:	f7f4 fc5f 	bl	80116a8 <nema_interpolate_rect_colors>
 801cdea:	f04f 33ff 	mov.w	r3, #4294967295
 801cdee:	2100      	movs	r1, #0
 801cdf0:	9300      	str	r3, [sp, #0]
 801cdf2:	4608      	mov	r0, r1
 801cdf4:	2301      	movs	r3, #1
 801cdf6:	2240      	movs	r2, #64	@ 0x40
 801cdf8:	f7f4 fa6c 	bl	80112d4 <nema_fill_rect>
 801cdfc:	2000      	movs	r0, #0
 801cdfe:	f7f3 ffb3 	bl	8010d68 <nema_enable_gradient>
 801ce02:	f7f3 ff93 	bl	8010d2c <nema_set_clip_pop>
 801ce06:	b011      	add	sp, #68	@ 0x44
 801ce08:	ecbd 8b10 	vpop	{d8-d15}
 801ce0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce10:	c77fff00 	.word	0xc77fff00
 801ce14:	427c0000 	.word	0x427c0000
 801ce18:	080335d8 	.word	0x080335d8
 801ce1c:	437f0000 	.word	0x437f0000
 801ce20:	00000000 	.word	0x00000000
 801ce24:	427e0000 	.word	0x427e0000
 801ce28:	2300      	movs	r3, #0
 801ce2a:	f04f 0b01 	mov.w	fp, #1
 801ce2e:	9305      	str	r3, [sp, #20]
 801ce30:	4588      	cmp	r8, r1
 801ce32:	f000 809b 	beq.w	801cf6c <nema_vg_grad_set+0x3b0>
 801ce36:	eb05 0389 	add.w	r3, r5, r9, lsl #2
 801ce3a:	edd3 6a00 	vldr	s13, [r3]
 801ce3e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801ce42:	ee26 7a8c 	vmul.f32	s14, s13, s24
 801ce46:	ee37 7a27 	vadd.f32	s14, s14, s15
 801ce4a:	eef0 7a66 	vmov.f32	s15, s13
 801ce4e:	eefe 7acd 	vcvt.s32.f32	s15, s15, #6
 801ce52:	9b04      	ldr	r3, [sp, #16]
 801ce54:	45b1      	cmp	r9, r6
 801ce56:	eb03 1309 	add.w	r3, r3, r9, lsl #4
 801ce5a:	ee17 0a90 	vmov	r0, s15
 801ce5e:	edd3 2a00 	vldr	s5, [r3]
 801ce62:	edd3 3a01 	vldr	s7, [r3, #4]
 801ce66:	ed93 6a03 	vldr	s12, [r3, #12]
 801ce6a:	edd3 4a02 	vldr	s9, [r3, #8]
 801ce6e:	f000 80f1 	beq.w	801d054 <nema_vg_grad_set+0x498>
 801ce72:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801ce76:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801ce7a:	4688      	mov	r8, r1
 801ce7c:	ee77 5a67 	vsub.f32	s11, s14, s15
 801ce80:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801ce84:	ed93 5a00 	vldr	s10, [r3]
 801ce88:	ee65 6a0c 	vmul.f32	s13, s10, s24
 801ce8c:	eebe 5acd 	vcvt.s32.f32	s10, s10, #6
 801ce90:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801ce94:	9b04      	ldr	r3, [sp, #16]
 801ce96:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801ce9a:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 801ce9e:	ed93 ea00 	vldr	s28, [r3]
 801cea2:	edd3 da01 	vldr	s27, [r3, #4]
 801cea6:	ed93 da02 	vldr	s26, [r3, #8]
 801ceaa:	edd3 ca03 	vldr	s25, [r3, #12]
 801ceae:	ee15 3a10 	vmov	r3, s10
 801ceb2:	1a1a      	subs	r2, r3, r0
 801ceb4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801ceb8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801cebc:	eef4 5ac7 	vcmpe.f32	s11, s14
 801cec0:	ee3e 3a62 	vsub.f32	s6, s28, s5
 801cec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cec8:	ee3d 4ae3 	vsub.f32	s8, s27, s7
 801cecc:	ee3d 5a64 	vsub.f32	s10, s26, s9
 801ced0:	ee7c 6ac6 	vsub.f32	s13, s25, s12
 801ced4:	ee83 2a27 	vdiv.f32	s4, s6, s15
 801ced8:	ee84 3a27 	vdiv.f32	s6, s8, s15
 801cedc:	ee85 4a27 	vdiv.f32	s8, s10, s15
 801cee0:	ee86 5aa7 	vdiv.f32	s10, s13, s15
 801cee4:	bfca      	itet	gt
 801cee6:	eef7 7a08 	vmovgt.f32	s15, #120	@ 0x3fc00000  1.5
 801ceea:	ee77 7a65 	vsuble.f32	s15, s14, s11
 801ceee:	ee77 7ae5 	vsubgt.f32	s15, s15, s11
 801cef2:	ee62 fa27 	vmul.f32	s31, s4, s15
 801cef6:	ee23 7a27 	vmul.f32	s14, s6, s15
 801cefa:	ee24 fa27 	vmul.f32	s30, s8, s15
 801cefe:	ee65 7a27 	vmul.f32	s15, s10, s15
 801cf02:	ee37 ba23 	vadd.f32	s22, s14, s7
 801cf06:	ee77 ea86 	vadd.f32	s29, s15, s12
 801cf0a:	ee7f faa2 	vadd.f32	s31, s31, s5
 801cf0e:	ee3f fa24 	vadd.f32	s30, s30, s9
 801cf12:	ed5f 4a3d 	vldr	s9, [pc, #-244]	@ 801ce20 <nema_vg_grad_set+0x264>
 801cf16:	eeb0 0a6f 	vmov.f32	s0, s31
 801cf1a:	eef0 0a4b 	vmov.f32	s1, s22
 801cf1e:	eef0 1a6e 	vmov.f32	s3, s29
 801cf22:	eeb0 1a4f 	vmov.f32	s2, s30
 801cf26:	eef0 3a64 	vmov.f32	s7, s9
 801cf2a:	eef0 2a64 	vmov.f32	s5, s9
 801cf2e:	eef0 5a48 	vmov.f32	s11, s16
 801cf32:	e9cd 2006 	strd	r2, r0, [sp, #24]
 801cf36:	f7f4 f961 	bl	80111fc <nema_set_gradient>
 801cf3a:	e9dd 2006 	ldrd	r2, r0, [sp, #24]
 801cf3e:	f04f 33ff 	mov.w	r3, #4294967295
 801cf42:	2100      	movs	r1, #0
 801cf44:	9300      	str	r3, [sp, #0]
 801cf46:	2301      	movs	r3, #1
 801cf48:	f7f4 f9c4 	bl	80112d4 <nema_fill_rect>
 801cf4c:	f1ba 0f01 	cmp.w	sl, #1
 801cf50:	d107      	bne.n	801cf62 <nema_vg_grad_set+0x3a6>
 801cf52:	eeb0 aa6e 	vmov.f32	s20, s29
 801cf56:	eef0 8a4f 	vmov.f32	s17, s30
 801cf5a:	eeb0 9a4b 	vmov.f32	s18, s22
 801cf5e:	eef0 9a6f 	vmov.f32	s19, s31
 801cf62:	f1bb 0f01 	cmp.w	fp, #1
 801cf66:	46da      	mov	sl, fp
 801cf68:	f47f aebc 	bne.w	801cce4 <nema_vg_grad_set+0x128>
 801cf6c:	2000      	movs	r0, #0
 801cf6e:	f7f3 fefb 	bl	8010d68 <nema_enable_gradient>
 801cf72:	eefc 7aca 	vcvt.u32.f32	s15, s20
 801cf76:	edcd 7a04 	vstr	s15, [sp, #16]
 801cf7a:	eefc 7ae8 	vcvt.u32.f32	s15, s17
 801cf7e:	edcd 7a05 	vstr	s15, [sp, #20]
 801cf82:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 801cf86:	edcd 7a06 	vstr	s15, [sp, #24]
 801cf8a:	eefc 7ae9 	vcvt.u32.f32	s15, s19
 801cf8e:	edcd 7a07 	vstr	s15, [sp, #28]
 801cf92:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801cf96:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801cf9a:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801cf9e:	f89d 001c 	ldrb.w	r0, [sp, #28]
 801cfa2:	f7f3 ff47 	bl	8010e34 <nema_rgba>
 801cfa6:	2301      	movs	r3, #1
 801cfa8:	2100      	movs	r1, #0
 801cfaa:	9000      	str	r0, [sp, #0]
 801cfac:	461a      	mov	r2, r3
 801cfae:	4608      	mov	r0, r1
 801cfb0:	f7f4 f990 	bl	80112d4 <nema_fill_rect>
 801cfb4:	eefc 7aec 	vcvt.u32.f32	s15, s25
 801cfb8:	edcd 7a04 	vstr	s15, [sp, #16]
 801cfbc:	eefc 7acd 	vcvt.u32.f32	s15, s26
 801cfc0:	edcd 7a05 	vstr	s15, [sp, #20]
 801cfc4:	eefc 7aed 	vcvt.u32.f32	s15, s27
 801cfc8:	edcd 7a06 	vstr	s15, [sp, #24]
 801cfcc:	eefc 7ace 	vcvt.u32.f32	s15, s28
 801cfd0:	edcd 7a07 	vstr	s15, [sp, #28]
 801cfd4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801cfd8:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801cfdc:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801cfe0:	f89d 001c 	ldrb.w	r0, [sp, #28]
 801cfe4:	f7f3 ff26 	bl	8010e34 <nema_rgba>
 801cfe8:	2301      	movs	r3, #1
 801cfea:	9000      	str	r0, [sp, #0]
 801cfec:	461a      	mov	r2, r3
 801cfee:	2100      	movs	r1, #0
 801cff0:	203f      	movs	r0, #63	@ 0x3f
 801cff2:	f7f4 f96f 	bl	80112d4 <nema_fill_rect>
 801cff6:	e701      	b.n	801cdfc <nema_vg_grad_set+0x240>
 801cff8:	9b05      	ldr	r3, [sp, #20]
 801cffa:	2b00      	cmp	r3, #0
 801cffc:	d0b6      	beq.n	801cf6c <nema_vg_grad_set+0x3b0>
 801cffe:	f1b8 0f00 	cmp.w	r8, #0
 801d002:	ddb3      	ble.n	801cf6c <nema_vg_grad_set+0x3b0>
 801d004:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801d008:	edd3 6a00 	vldr	s13, [r3]
 801d00c:	eef4 6aeb 	vcmpe.f32	s13, s23
 801d010:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d014:	d5aa      	bpl.n	801cf6c <nema_vg_grad_set+0x3b0>
 801d016:	4641      	mov	r1, r8
 801d018:	3101      	adds	r1, #1
 801d01a:	4541      	cmp	r1, r8
 801d01c:	d0a6      	beq.n	801cf6c <nema_vg_grad_set+0x3b0>
 801d01e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801d022:	ee26 7a8c 	vmul.f32	s14, s13, s24
 801d026:	ee37 7a27 	vadd.f32	s14, s14, s15
 801d02a:	eef0 7a66 	vmov.f32	s15, s13
 801d02e:	eefe 7acd 	vcvt.s32.f32	s15, s15, #6
 801d032:	9b04      	ldr	r3, [sp, #16]
 801d034:	f04f 0b01 	mov.w	fp, #1
 801d038:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 801d03c:	ed93 6a03 	vldr	s12, [r3, #12]
 801d040:	edd3 2a00 	vldr	s5, [r3]
 801d044:	edd3 3a01 	vldr	s7, [r3, #4]
 801d048:	edd3 4a02 	vldr	s9, [r3, #8]
 801d04c:	ee17 0a90 	vmov	r0, s15
 801d050:	f8cd b014 	str.w	fp, [sp, #20]
 801d054:	2902      	cmp	r1, #2
 801d056:	d037      	beq.n	801d0c8 <nema_vg_grad_set+0x50c>
 801d058:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801d05c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d060:	4688      	mov	r8, r1
 801d062:	ee77 5a67 	vsub.f32	s11, s14, s15
 801d066:	dd10      	ble.n	801d08a <nema_vg_grad_set+0x4ce>
 801d068:	f1c0 0240 	rsb	r2, r0, #64	@ 0x40
 801d06c:	46b1      	mov	r9, r6
 801d06e:	eef0 ca46 	vmov.f32	s25, s12
 801d072:	eeb0 da64 	vmov.f32	s26, s9
 801d076:	eef0 da63 	vmov.f32	s27, s7
 801d07a:	eeb0 ea62 	vmov.f32	s28, s5
 801d07e:	ed5f 7a97 	vldr	s15, [pc, #-604]	@ 801ce24 <nema_vg_grad_set+0x268>
 801d082:	e717      	b.n	801ceb4 <nema_vg_grad_set+0x2f8>
 801d084:	f04f 0b01 	mov.w	fp, #1
 801d088:	e6d2      	b.n	801ce30 <nema_vg_grad_set+0x274>
 801d08a:	46b1      	mov	r9, r6
 801d08c:	e6f8      	b.n	801ce80 <nema_vg_grad_set+0x2c4>
 801d08e:	f1b8 0f02 	cmp.w	r8, #2
 801d092:	f43f af6b 	beq.w	801cf6c <nema_vg_grad_set+0x3b0>
 801d096:	ee67 6a8c 	vmul.f32	s13, s15, s24
 801d09a:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801d09e:	ee36 7a87 	vadd.f32	s14, s13, s14
 801d0a2:	eef0 6a67 	vmov.f32	s13, s15
 801d0a6:	eefe 6acd 	vcvt.s32.f32	s13, s13, #6
 801d0aa:	9b04      	ldr	r3, [sp, #16]
 801d0ac:	468b      	mov	fp, r1
 801d0ae:	eb03 1302 	add.w	r3, r3, r2, lsl #4
 801d0b2:	4616      	mov	r6, r2
 801d0b4:	edd3 3a01 	vldr	s7, [r3, #4]
 801d0b8:	edd3 2a00 	vldr	s5, [r3]
 801d0bc:	ed93 6a03 	vldr	s12, [r3, #12]
 801d0c0:	edd3 4a02 	vldr	s9, [r3, #8]
 801d0c4:	ee16 0a90 	vmov	r0, s13
 801d0c8:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801d0cc:	4602      	mov	r2, r0
 801d0ce:	eef0 7a47 	vmov.f32	s15, s14
 801d0d2:	46b1      	mov	r9, r6
 801d0d4:	eeb0 7a65 	vmov.f32	s14, s11
 801d0d8:	eef0 ca46 	vmov.f32	s25, s12
 801d0dc:	eeb0 da64 	vmov.f32	s26, s9
 801d0e0:	eef0 da63 	vmov.f32	s27, s7
 801d0e4:	eeb0 ea62 	vmov.f32	s28, s5
 801d0e8:	2000      	movs	r0, #0
 801d0ea:	f04f 0802 	mov.w	r8, #2
 801d0ee:	e6e1      	b.n	801ceb4 <nema_vg_grad_set+0x2f8>
 801d0f0:	4632      	mov	r2, r6
 801d0f2:	eeb0 7a6a 	vmov.f32	s14, s21
 801d0f6:	e5ff      	b.n	801ccf8 <nema_vg_grad_set+0x13c>
 801d0f8:	f44f 2000 	mov.w	r0, #524288	@ 0x80000
 801d0fc:	f7ff fc82 	bl	801ca04 <nema_vg_set_error>
 801d100:	2720      	movs	r7, #32
 801d102:	e567      	b.n	801cbd4 <nema_vg_grad_set+0x18>
 801d104:	2102      	movs	r1, #2
 801d106:	e644      	b.n	801cd92 <nema_vg_grad_set+0x1d6>
 801d108:	469b      	mov	fp, r3
 801d10a:	e691      	b.n	801ce30 <nema_vg_grad_set+0x274>

0801d10c <nema_vg_paint_set_grad_linear>:
 801d10c:	2800      	cmp	r0, #0
 801d10e:	d065      	beq.n	801d1dc <nema_vg_paint_set_grad_linear+0xd0>
 801d110:	b510      	push	{r4, lr}
 801d112:	ed2d 8b06 	vpush	{d8-d10}
 801d116:	ee31 8ae0 	vsub.f32	s16, s3, s1
 801d11a:	ee71 8a40 	vsub.f32	s17, s2, s0
 801d11e:	ee68 7a08 	vmul.f32	s15, s16, s16
 801d122:	eeb0 9a40 	vmov.f32	s18, s0
 801d126:	ee28 0aa8 	vmul.f32	s0, s17, s17
 801d12a:	f002 030c 	and.w	r3, r2, #12
 801d12e:	2b08      	cmp	r3, #8
 801d130:	bf08      	it	eq
 801d132:	f002 0201 	andeq.w	r2, r2, #1
 801d136:	f002 020f 	and.w	r2, r2, #15
 801d13a:	f880 20d0 	strb.w	r2, [r0, #208]	@ 0xd0
 801d13e:	6341      	str	r1, [r0, #52]	@ 0x34
 801d140:	ee30 0a27 	vadd.f32	s0, s0, s15
 801d144:	eef0 9a60 	vmov.f32	s19, s1
 801d148:	4604      	mov	r4, r0
 801d14a:	f7f4 fb7f 	bl	801184c <nema_sqrt>
 801d14e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801d152:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d156:	f04f 0300 	mov.w	r3, #0
 801d15a:	d10e      	bne.n	801d17a <nema_vg_paint_set_grad_linear+0x6e>
 801d15c:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d160:	4920      	ldr	r1, [pc, #128]	@ (801d1e4 <nema_vg_paint_set_grad_linear+0xd8>)
 801d162:	63a3      	str	r3, [r4, #56]	@ 0x38
 801d164:	63e3      	str	r3, [r4, #60]	@ 0x3c
 801d166:	6463      	str	r3, [r4, #68]	@ 0x44
 801d168:	64a3      	str	r3, [r4, #72]	@ 0x48
 801d16a:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801d16c:	6523      	str	r3, [r4, #80]	@ 0x50
 801d16e:	6563      	str	r3, [r4, #84]	@ 0x54
 801d170:	6421      	str	r1, [r4, #64]	@ 0x40
 801d172:	65a2      	str	r2, [r4, #88]	@ 0x58
 801d174:	ecbd 8b06 	vpop	{d8-d10}
 801d178:	bd10      	pop	{r4, pc}
 801d17a:	ee88 aa80 	vdiv.f32	s20, s17, s0
 801d17e:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 801d1e8 <nema_vg_paint_set_grad_linear+0xdc>
 801d182:	eec8 8a00 	vdiv.f32	s17, s16, s0
 801d186:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 801d18a:	ee87 8a80 	vdiv.f32	s16, s15, s0
 801d18e:	f7f4 fb87 	bl	80118a0 <nema_mat3x3_load_identity>
 801d192:	ee29 7aa8 	vmul.f32	s14, s19, s17
 801d196:	ee69 7a4a 	vnmul.f32	s15, s18, s20
 801d19a:	ee69 9a8a 	vmul.f32	s19, s19, s20
 801d19e:	ee29 9a28 	vmul.f32	s18, s18, s17
 801d1a2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801d1a6:	ee39 9a69 	vsub.f32	s18, s18, s19
 801d1aa:	ee28 aa0a 	vmul.f32	s20, s16, s20
 801d1ae:	ee28 7a28 	vmul.f32	s14, s16, s17
 801d1b2:	ee67 7a88 	vmul.f32	s15, s15, s16
 801d1b6:	ee29 9a08 	vmul.f32	s18, s18, s16
 801d1ba:	ee68 8ac8 	vnmul.f32	s17, s17, s16
 801d1be:	edc4 7a10 	vstr	s15, [r4, #64]	@ 0x40
 801d1c2:	ed84 9a13 	vstr	s18, [r4, #76]	@ 0x4c
 801d1c6:	ed84 aa0e 	vstr	s20, [r4, #56]	@ 0x38
 801d1ca:	ed84 aa12 	vstr	s20, [r4, #72]	@ 0x48
 801d1ce:	ed84 7a0f 	vstr	s14, [r4, #60]	@ 0x3c
 801d1d2:	edc4 8a11 	vstr	s17, [r4, #68]	@ 0x44
 801d1d6:	ecbd 8b06 	vpop	{d8-d10}
 801d1da:	bd10      	pop	{r4, pc}
 801d1dc:	2001      	movs	r0, #1
 801d1de:	f7ff bc11 	b.w	801ca04 <nema_vg_set_error>
 801d1e2:	bf00      	nop
 801d1e4:	427e0000 	.word	0x427e0000
 801d1e8:	42800000 	.word	0x42800000

0801d1ec <nema_vg_paint_set_grad_radial>:
 801d1ec:	2800      	cmp	r0, #0
 801d1ee:	d03f      	beq.n	801d270 <nema_vg_paint_set_grad_radial+0x84>
 801d1f0:	eeb5 1ac0 	vcmpe.f32	s2, #0.0
 801d1f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d1f8:	6341      	str	r1, [r0, #52]	@ 0x34
 801d1fa:	f880 20d0 	strb.w	r2, [r0, #208]	@ 0xd0
 801d1fe:	d421      	bmi.n	801d244 <nema_vg_paint_set_grad_radial+0x58>
 801d200:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 801d278 <nema_vg_paint_set_grad_radial+0x8c>
 801d204:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801d208:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d20c:	d922      	bls.n	801d254 <nema_vg_paint_set_grad_radial+0x68>
 801d20e:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 801d27c <nema_vg_paint_set_grad_radial+0x90>
 801d212:	eec7 7a01 	vdiv.f32	s15, s14, s2
 801d216:	2300      	movs	r3, #0
 801d218:	ee20 0a27 	vmul.f32	s0, s0, s15
 801d21c:	ee60 0aa7 	vmul.f32	s1, s1, s15
 801d220:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d224:	eef1 7a67 	vneg.f32	s15, s15
 801d228:	ed80 0a10 	vstr	s0, [r0, #64]	@ 0x40
 801d22c:	edc0 0a13 	vstr	s1, [r0, #76]	@ 0x4c
 801d230:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801d234:	edc0 7a12 	vstr	s15, [r0, #72]	@ 0x48
 801d238:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801d23a:	6443      	str	r3, [r0, #68]	@ 0x44
 801d23c:	6503      	str	r3, [r0, #80]	@ 0x50
 801d23e:	6543      	str	r3, [r0, #84]	@ 0x54
 801d240:	6582      	str	r2, [r0, #88]	@ 0x58
 801d242:	4770      	bx	lr
 801d244:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 801d280 <nema_vg_paint_set_grad_radial+0x94>
 801d248:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801d24c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d250:	da00      	bge.n	801d254 <nema_vg_paint_set_grad_radial+0x68>
 801d252:	dbdc      	blt.n	801d20e <nema_vg_paint_set_grad_radial+0x22>
 801d254:	2300      	movs	r3, #0
 801d256:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d25a:	490a      	ldr	r1, [pc, #40]	@ (801d284 <nema_vg_paint_set_grad_radial+0x98>)
 801d25c:	6383      	str	r3, [r0, #56]	@ 0x38
 801d25e:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801d260:	6443      	str	r3, [r0, #68]	@ 0x44
 801d262:	6483      	str	r3, [r0, #72]	@ 0x48
 801d264:	64c3      	str	r3, [r0, #76]	@ 0x4c
 801d266:	6503      	str	r3, [r0, #80]	@ 0x50
 801d268:	6543      	str	r3, [r0, #84]	@ 0x54
 801d26a:	6401      	str	r1, [r0, #64]	@ 0x40
 801d26c:	6582      	str	r2, [r0, #88]	@ 0x58
 801d26e:	4770      	bx	lr
 801d270:	2001      	movs	r0, #1
 801d272:	f7ff bbc7 	b.w	801ca04 <nema_vg_set_error>
 801d276:	bf00      	nop
 801d278:	3727c5ac 	.word	0x3727c5ac
 801d27c:	42800000 	.word	0x42800000
 801d280:	b727c5ac 	.word	0xb727c5ac
 801d284:	427e0000 	.word	0x427e0000

0801d288 <nema_vg_paint_set_paint_color>:
 801d288:	b108      	cbz	r0, 801d28e <nema_vg_paint_set_paint_color+0x6>
 801d28a:	6301      	str	r1, [r0, #48]	@ 0x30
 801d28c:	4770      	bx	lr
 801d28e:	2001      	movs	r0, #1
 801d290:	f7ff bbb8 	b.w	801ca04 <nema_vg_set_error>

0801d294 <nema_vg_paint_set_opacity>:
 801d294:	b110      	cbz	r0, 801d29c <nema_vg_paint_set_opacity+0x8>
 801d296:	ed80 0a36 	vstr	s0, [r0, #216]	@ 0xd8
 801d29a:	4770      	bx	lr
 801d29c:	2001      	movs	r0, #1
 801d29e:	f7ff bbb1 	b.w	801ca04 <nema_vg_set_error>
 801d2a2:	bf00      	nop

0801d2a4 <nema_vg_paint_set_stroke_width>:
 801d2a4:	b110      	cbz	r0, 801d2ac <nema_vg_paint_set_stroke_width+0x8>
 801d2a6:	ed80 0a35 	vstr	s0, [r0, #212]	@ 0xd4
 801d2aa:	4770      	bx	lr
 801d2ac:	2001      	movs	r0, #1
 801d2ae:	f7ff bba9 	b.w	801ca04 <nema_vg_set_error>
 801d2b2:	bf00      	nop

0801d2b4 <bind_tex1_according_paint>:
 801d2b4:	b570      	push	{r4, r5, r6, lr}
 801d2b6:	f890 30dd 	ldrb.w	r3, [r0, #221]	@ 0xdd
 801d2ba:	b084      	sub	sp, #16
 801d2bc:	3b01      	subs	r3, #1
 801d2be:	4604      	mov	r4, r0
 801d2c0:	2b03      	cmp	r3, #3
 801d2c2:	d81b      	bhi.n	801d2fc <bind_tex1_according_paint+0x48>
 801d2c4:	e8df f003 	tbb	[pc, r3]
 801d2c8:	281c0228 	.word	0x281c0228
 801d2cc:	6805      	ldr	r5, [r0, #0]
 801d2ce:	2d00      	cmp	r5, #0
 801d2d0:	d050      	beq.n	801d374 <bind_tex1_according_paint+0xc0>
 801d2d2:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 801d2d6:	2b00      	cmp	r3, #0
 801d2d8:	d03f      	beq.n	801d35a <bind_tex1_according_paint+0xa6>
 801d2da:	6844      	ldr	r4, [r0, #4]
 801d2dc:	2c00      	cmp	r4, #0
 801d2de:	d049      	beq.n	801d374 <bind_tex1_according_paint+0xc0>
 801d2e0:	7f26      	ldrb	r6, [r4, #28]
 801d2e2:	7f2b      	ldrb	r3, [r5, #28]
 801d2e4:	8a6a      	ldrh	r2, [r5, #18]
 801d2e6:	8a29      	ldrh	r1, [r5, #16]
 801d2e8:	68e8      	ldr	r0, [r5, #12]
 801d2ea:	9603      	str	r6, [sp, #12]
 801d2ec:	68e4      	ldr	r4, [r4, #12]
 801d2ee:	9402      	str	r4, [sp, #8]
 801d2f0:	7f6c      	ldrb	r4, [r5, #29]
 801d2f2:	9401      	str	r4, [sp, #4]
 801d2f4:	696c      	ldr	r4, [r5, #20]
 801d2f6:	9400      	str	r4, [sp, #0]
 801d2f8:	f7f3 ff1e 	bl	8011138 <nema_bind_lut_tex>
 801d2fc:	b004      	add	sp, #16
 801d2fe:	bd70      	pop	{r4, r5, r6, pc}
 801d300:	f7f4 fe38 	bl	8011f74 <nema_readHwConfigH>
 801d304:	f410 7580 	ands.w	r5, r0, #256	@ 0x100
 801d308:	d116      	bne.n	801d338 <bind_tex1_according_paint+0x84>
 801d30a:	2020      	movs	r0, #32
 801d30c:	f7ff fb7a 	bl	801ca04 <nema_vg_set_error>
 801d310:	f884 50dd 	strb.w	r5, [r4, #221]	@ 0xdd
 801d314:	b004      	add	sp, #16
 801d316:	bd70      	pop	{r4, r5, r6, pc}
 801d318:	2301      	movs	r3, #1
 801d31a:	2000      	movs	r0, #0
 801d31c:	f894 20d0 	ldrb.w	r2, [r4, #208]	@ 0xd0
 801d320:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801d322:	431a      	orrs	r2, r3
 801d324:	68c9      	ldr	r1, [r1, #12]
 801d326:	e9cd 0201 	strd	r0, r2, [sp, #4]
 801d32a:	9300      	str	r3, [sp, #0]
 801d32c:	4618      	mov	r0, r3
 801d32e:	2240      	movs	r2, #64	@ 0x40
 801d330:	f7f3 fbe0 	bl	8010af4 <nema_bind_tex>
 801d334:	b004      	add	sp, #16
 801d336:	bd70      	pop	{r4, r5, r6, pc}
 801d338:	2201      	movs	r2, #1
 801d33a:	2004      	movs	r0, #4
 801d33c:	f894 30d0 	ldrb.w	r3, [r4, #208]	@ 0xd0
 801d340:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801d342:	f043 0381 	orr.w	r3, r3, #129	@ 0x81
 801d346:	68c9      	ldr	r1, [r1, #12]
 801d348:	e9cd 0301 	strd	r0, r3, [sp, #4]
 801d34c:	9200      	str	r2, [sp, #0]
 801d34e:	4610      	mov	r0, r2
 801d350:	2340      	movs	r3, #64	@ 0x40
 801d352:	f7f3 fbcf 	bl	8010af4 <nema_bind_tex>
 801d356:	b004      	add	sp, #16
 801d358:	bd70      	pop	{r4, r5, r6, pc}
 801d35a:	7f68      	ldrb	r0, [r5, #29]
 801d35c:	8a6b      	ldrh	r3, [r5, #18]
 801d35e:	8a2a      	ldrh	r2, [r5, #16]
 801d360:	68e9      	ldr	r1, [r5, #12]
 801d362:	9002      	str	r0, [sp, #8]
 801d364:	6968      	ldr	r0, [r5, #20]
 801d366:	9001      	str	r0, [sp, #4]
 801d368:	7f28      	ldrb	r0, [r5, #28]
 801d36a:	9000      	str	r0, [sp, #0]
 801d36c:	2001      	movs	r0, #1
 801d36e:	f7f3 fbc1 	bl	8010af4 <nema_bind_tex>
 801d372:	e7c3      	b.n	801d2fc <bind_tex1_according_paint+0x48>
 801d374:	2002      	movs	r0, #2
 801d376:	b004      	add	sp, #16
 801d378:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d37c:	f7ff bb42 	b.w	801ca04 <nema_vg_set_error>

0801d380 <nema_vg_path_clear>:
 801d380:	b118      	cbz	r0, 801d38a <nema_vg_path_clear+0xa>
 801d382:	2300      	movs	r3, #0
 801d384:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d388:	4770      	bx	lr
 801d38a:	2001      	movs	r0, #1
 801d38c:	f7ff bb3a 	b.w	801ca04 <nema_vg_set_error>

0801d390 <nema_vg_path_create>:
 801d390:	b508      	push	{r3, lr}
 801d392:	2088      	movs	r0, #136	@ 0x88
 801d394:	f7e5 fcde 	bl	8002d54 <nema_host_malloc>
 801d398:	2200      	movs	r2, #0
 801d39a:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 801d39e:	bd08      	pop	{r3, pc}

0801d3a0 <nema_vg_path_set_shape_and_bbox>:
 801d3a0:	b430      	push	{r4, r5}
 801d3a2:	e9dd 5402 	ldrd	r5, r4, [sp, #8]
 801d3a6:	2800      	cmp	r0, #0
 801d3a8:	d065      	beq.n	801d476 <nema_vg_path_set_shape_and_bbox+0xd6>
 801d3aa:	e9c0 1300 	strd	r1, r3, [r0]
 801d3ae:	e9c0 2502 	strd	r2, r5, [r0, #8]
 801d3b2:	edd4 7a00 	vldr	s15, [r4]
 801d3b6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801d3ba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801d3be:	eef4 7ae6 	vcmpe.f32	s15, s13
 801d3c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d3c6:	ee17 2a10 	vmov	r2, s14
 801d3ca:	bf4c      	ite	mi
 801d3cc:	2301      	movmi	r3, #1
 801d3ce:	2300      	movpl	r3, #0
 801d3d0:	1ad3      	subs	r3, r2, r3
 801d3d2:	ee07 3a10 	vmov	s14, r3
 801d3d6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801d3da:	edc0 6a04 	vstr	s13, [r0, #16]
 801d3de:	ed94 7a01 	vldr	s14, [r4, #4]
 801d3e2:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801d3e6:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801d3ea:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801d3ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d3f2:	ee17 2a90 	vmov	r2, s15
 801d3f6:	bf4c      	ite	mi
 801d3f8:	2301      	movmi	r3, #1
 801d3fa:	2300      	movpl	r3, #0
 801d3fc:	1ad3      	subs	r3, r2, r3
 801d3fe:	ee07 3a90 	vmov	s15, r3
 801d402:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d406:	edc0 7a05 	vstr	s15, [r0, #20]
 801d40a:	ed94 6a02 	vldr	s12, [r4, #8]
 801d40e:	eebd 7ac6 	vcvt.s32.f32	s14, s12
 801d412:	eef8 5ac7 	vcvt.f32.s32	s11, s14
 801d416:	eeb4 6ae5 	vcmpe.f32	s12, s11
 801d41a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d41e:	ee17 2a10 	vmov	r2, s14
 801d422:	bfcc      	ite	gt
 801d424:	2301      	movgt	r3, #1
 801d426:	2300      	movle	r3, #0
 801d428:	4413      	add	r3, r2
 801d42a:	ee07 3a10 	vmov	s14, r3
 801d42e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801d432:	ed80 7a06 	vstr	s14, [r0, #24]
 801d436:	edd4 5a03 	vldr	s11, [r4, #12]
 801d43a:	eebd 6ae5 	vcvt.s32.f32	s12, s11
 801d43e:	eeb8 5ac6 	vcvt.f32.s32	s10, s12
 801d442:	eef4 5ac5 	vcmpe.f32	s11, s10
 801d446:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d44a:	ee16 2a10 	vmov	r2, s12
 801d44e:	bfcc      	ite	gt
 801d450:	2301      	movgt	r3, #1
 801d452:	2300      	movle	r3, #0
 801d454:	4413      	add	r3, r2
 801d456:	ee06 3a10 	vmov	s12, r3
 801d45a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801d45e:	ee37 7a66 	vsub.f32	s14, s14, s13
 801d462:	ee76 7a67 	vsub.f32	s15, s12, s15
 801d466:	ed80 7a08 	vstr	s14, [r0, #32]
 801d46a:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 801d46e:	ed80 6a07 	vstr	s12, [r0, #28]
 801d472:	bc30      	pop	{r4, r5}
 801d474:	4770      	bx	lr
 801d476:	2001      	movs	r0, #1
 801d478:	bc30      	pop	{r4, r5}
 801d47a:	f7ff bac3 	b.w	801ca04 <nema_vg_set_error>
 801d47e:	bf00      	nop

0801d480 <nema_vg_path_set_shape>:
 801d480:	b430      	push	{r4, r5}
 801d482:	9d02      	ldr	r5, [sp, #8]
 801d484:	b130      	cbz	r0, 801d494 <nema_vg_path_set_shape+0x14>
 801d486:	e9c0 2502 	strd	r2, r5, [r0, #8]
 801d48a:	e9c0 1300 	strd	r1, r3, [r0]
 801d48e:	bc30      	pop	{r4, r5}
 801d490:	f001 b966 	b.w	801e760 <calculate_aabb_per_shape>
 801d494:	2001      	movs	r0, #1
 801d496:	bc30      	pop	{r4, r5}
 801d498:	f7ff bab4 	b.w	801ca04 <nema_vg_set_error>

0801d49c <nema_vg_path_set_matrix>:
 801d49c:	2800      	cmp	r0, #0
 801d49e:	d063      	beq.n	801d568 <nema_vg_path_set_matrix+0xcc>
 801d4a0:	f8d0 3084 	ldr.w	r3, [r0, #132]	@ 0x84
 801d4a4:	2900      	cmp	r1, #0
 801d4a6:	d055      	beq.n	801d554 <nema_vg_path_set_matrix+0xb8>
 801d4a8:	edd1 7a00 	vldr	s15, [r1]
 801d4ac:	edc0 7a18 	vstr	s15, [r0, #96]	@ 0x60
 801d4b0:	edd1 3a01 	vldr	s7, [r1, #4]
 801d4b4:	edc0 3a19 	vstr	s7, [r0, #100]	@ 0x64
 801d4b8:	ed91 7a02 	vldr	s14, [r1, #8]
 801d4bc:	ed80 7a1a 	vstr	s14, [r0, #104]	@ 0x68
 801d4c0:	edd1 6a03 	vldr	s13, [r1, #12]
 801d4c4:	edc0 6a1b 	vstr	s13, [r0, #108]	@ 0x6c
 801d4c8:	ed91 4a04 	vldr	s8, [r1, #16]
 801d4cc:	ed80 4a1c 	vstr	s8, [r0, #112]	@ 0x70
 801d4d0:	ed91 5a05 	vldr	s10, [r1, #20]
 801d4d4:	ed80 5a1d 	vstr	s10, [r0, #116]	@ 0x74
 801d4d8:	ed91 6a06 	vldr	s12, [r1, #24]
 801d4dc:	ed80 6a1e 	vstr	s12, [r0, #120]	@ 0x78
 801d4e0:	eef7 4a00 	vmov.f32	s9, #112	@ 0x3f800000  1.0
 801d4e4:	edd1 5a07 	vldr	s11, [r1, #28]
 801d4e8:	eef4 7a64 	vcmp.f32	s15, s9
 801d4ec:	edc0 5a1f 	vstr	s11, [r0, #124]	@ 0x7c
 801d4f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d4f4:	6a0a      	ldr	r2, [r1, #32]
 801d4f6:	f8c0 2080 	str.w	r2, [r0, #128]	@ 0x80
 801d4fa:	d130      	bne.n	801d55e <nema_vg_path_set_matrix+0xc2>
 801d4fc:	eef5 3a40 	vcmp.f32	s7, #0.0
 801d500:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d504:	d12b      	bne.n	801d55e <nema_vg_path_set_matrix+0xc2>
 801d506:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801d50a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d50e:	d126      	bne.n	801d55e <nema_vg_path_set_matrix+0xc2>
 801d510:	eef5 6a40 	vcmp.f32	s13, #0.0
 801d514:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d518:	d121      	bne.n	801d55e <nema_vg_path_set_matrix+0xc2>
 801d51a:	eeb4 4a64 	vcmp.f32	s8, s9
 801d51e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d522:	d11c      	bne.n	801d55e <nema_vg_path_set_matrix+0xc2>
 801d524:	eeb5 5a40 	vcmp.f32	s10, #0.0
 801d528:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d52c:	d117      	bne.n	801d55e <nema_vg_path_set_matrix+0xc2>
 801d52e:	eeb5 6a40 	vcmp.f32	s12, #0.0
 801d532:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d536:	d112      	bne.n	801d55e <nema_vg_path_set_matrix+0xc2>
 801d538:	eef5 5a40 	vcmp.f32	s11, #0.0
 801d53c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d540:	d10d      	bne.n	801d55e <nema_vg_path_set_matrix+0xc2>
 801d542:	ed90 7a20 	vldr	s14, [r0, #128]	@ 0x80
 801d546:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 801d54a:	eeb4 7a67 	vcmp.f32	s14, s15
 801d54e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d552:	d104      	bne.n	801d55e <nema_vg_path_set_matrix+0xc2>
 801d554:	f023 0301 	bic.w	r3, r3, #1
 801d558:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d55c:	4770      	bx	lr
 801d55e:	f043 0301 	orr.w	r3, r3, #1
 801d562:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d566:	4770      	bx	lr
 801d568:	2001      	movs	r0, #1
 801d56a:	f7ff ba4b 	b.w	801ca04 <nema_vg_set_error>
 801d56e:	bf00      	nop

0801d570 <set_tsvg_text_max_size>:
 801d570:	4a02      	ldr	r2, [pc, #8]	@ (801d57c <set_tsvg_text_max_size+0xc>)
 801d572:	4b03      	ldr	r3, [pc, #12]	@ (801d580 <set_tsvg_text_max_size+0x10>)
 801d574:	6010      	str	r0, [r2, #0]
 801d576:	6019      	str	r1, [r3, #0]
 801d578:	4770      	bx	lr
 801d57a:	bf00      	nop
 801d57c:	200001dc 	.word	0x200001dc
 801d580:	200001e0 	.word	0x200001e0

0801d584 <tsvg_init>:
 801d584:	b508      	push	{r3, lr}
 801d586:	f7ff fab1 	bl	801caec <nema_vg_paint_create>
 801d58a:	4b05      	ldr	r3, [pc, #20]	@ (801d5a0 <tsvg_init+0x1c>)
 801d58c:	6018      	str	r0, [r3, #0]
 801d58e:	f7ff feff 	bl	801d390 <nema_vg_path_create>
 801d592:	4b04      	ldr	r3, [pc, #16]	@ (801d5a4 <tsvg_init+0x20>)
 801d594:	6018      	str	r0, [r3, #0]
 801d596:	f7ff faf1 	bl	801cb7c <nema_vg_grad_create>
 801d59a:	4b03      	ldr	r3, [pc, #12]	@ (801d5a8 <tsvg_init+0x24>)
 801d59c:	6018      	str	r0, [r3, #0]
 801d59e:	bd08      	pop	{r3, pc}
 801d5a0:	20083294 	.word	0x20083294
 801d5a4:	20083298 	.word	0x20083298
 801d5a8:	20083290 	.word	0x20083290

0801d5ac <tsi_malloc_init_pool_aligned>:
 801d5ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d5b0:	2807      	cmp	r0, #7
 801d5b2:	e9dd e706 	ldrd	lr, r7, [sp, #24]
 801d5b6:	d845      	bhi.n	801d644 <tsi_malloc_init_pool_aligned+0x98>
 801d5b8:	2f0f      	cmp	r7, #15
 801d5ba:	dd36      	ble.n	801d62a <tsi_malloc_init_pool_aligned+0x7e>
 801d5bc:	07bc      	lsls	r4, r7, #30
 801d5be:	463e      	mov	r6, r7
 801d5c0:	d043      	beq.n	801d64a <tsi_malloc_init_pool_aligned+0x9e>
 801d5c2:	f027 0703 	bic.w	r7, r7, #3
 801d5c6:	3704      	adds	r7, #4
 801d5c8:	f107 0c0b 	add.w	ip, r7, #11
 801d5cc:	fb9c fcf7 	sdiv	ip, ip, r7
 801d5d0:	463e      	mov	r6, r7
 801d5d2:	fb07 fc0c 	mul.w	ip, r7, ip
 801d5d6:	fbb1 f4f6 	udiv	r4, r1, r6
 801d5da:	fb06 1514 	mls	r5, r6, r4, r1
 801d5de:	f8df 8080 	ldr.w	r8, [pc, #128]	@ 801d660 <tsi_malloc_init_pool_aligned+0xb4>
 801d5e2:	f8c8 c000 	str.w	ip, [r8]
 801d5e6:	b32d      	cbz	r5, 801d634 <tsi_malloc_init_pool_aligned+0x88>
 801d5e8:	fb04 6406 	mla	r4, r4, r6, r6
 801d5ec:	eb00 0540 	add.w	r5, r0, r0, lsl #1
 801d5f0:	4819      	ldr	r0, [pc, #100]	@ (801d658 <tsi_malloc_init_pool_aligned+0xac>)
 801d5f2:	00ed      	lsls	r5, r5, #3
 801d5f4:	1946      	adds	r6, r0, r5
 801d5f6:	5142      	str	r2, [r0, r5]
 801d5f8:	18ca      	adds	r2, r1, r3
 801d5fa:	60f4      	str	r4, [r6, #12]
 801d5fc:	6071      	str	r1, [r6, #4]
 801d5fe:	e9c6 3704 	strd	r3, r7, [r6, #16]
 801d602:	60b2      	str	r2, [r6, #8]
 801d604:	f1be 0f00 	cmp.w	lr, #0
 801d608:	d016      	beq.n	801d638 <tsi_malloc_init_pool_aligned+0x8c>
 801d60a:	b1c4      	cbz	r4, 801d63e <tsi_malloc_init_pool_aligned+0x92>
 801d60c:	2200      	movs	r2, #0
 801d60e:	4610      	mov	r0, r2
 801d610:	4d12      	ldr	r5, [pc, #72]	@ (801d65c <tsi_malloc_init_pool_aligned+0xb0>)
 801d612:	eba3 034c 	sub.w	r3, r3, ip, lsl #1
 801d616:	eb0c 0104 	add.w	r1, ip, r4
 801d61a:	e884 1024 	stmia.w	r4, {r2, r5, ip}
 801d61e:	f84c 3004 	str.w	r3, [ip, r4]
 801d622:	e9c1 5201 	strd	r5, r2, [r1, #4]
 801d626:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d62a:	f04f 0c10 	mov.w	ip, #16
 801d62e:	4666      	mov	r6, ip
 801d630:	4667      	mov	r7, ip
 801d632:	e7d0      	b.n	801d5d6 <tsi_malloc_init_pool_aligned+0x2a>
 801d634:	460c      	mov	r4, r1
 801d636:	e7d9      	b.n	801d5ec <tsi_malloc_init_pool_aligned+0x40>
 801d638:	4670      	mov	r0, lr
 801d63a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d63e:	4620      	mov	r0, r4
 801d640:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d644:	f04f 30ff 	mov.w	r0, #4294967295
 801d648:	e7ed      	b.n	801d626 <tsi_malloc_init_pool_aligned+0x7a>
 801d64a:	f107 0c0b 	add.w	ip, r7, #11
 801d64e:	fb9c fcf7 	sdiv	ip, ip, r7
 801d652:	fb07 fc0c 	mul.w	ip, r7, ip
 801d656:	e7be      	b.n	801d5d6 <tsi_malloc_init_pool_aligned+0x2a>
 801d658:	2008329c 	.word	0x2008329c
 801d65c:	000f1fa1 	.word	0x000f1fa1
 801d660:	200001e4 	.word	0x200001e4

0801d664 <tsi_malloc_pool>:
 801d664:	2807      	cmp	r0, #7
 801d666:	d850      	bhi.n	801d70a <tsi_malloc_pool+0xa6>
 801d668:	b4f0      	push	{r4, r5, r6, r7}
 801d66a:	4b29      	ldr	r3, [pc, #164]	@ (801d710 <tsi_malloc_pool+0xac>)
 801d66c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d670:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 801d674:	68c4      	ldr	r4, [r0, #12]
 801d676:	2c00      	cmp	r4, #0
 801d678:	d03e      	beq.n	801d6f8 <tsi_malloc_pool+0x94>
 801d67a:	6947      	ldr	r7, [r0, #20]
 801d67c:	4b25      	ldr	r3, [pc, #148]	@ (801d714 <tsi_malloc_pool+0xb0>)
 801d67e:	f107 000b 	add.w	r0, r7, #11
 801d682:	fb90 f0f7 	sdiv	r0, r0, r7
 801d686:	fb07 f000 	mul.w	r0, r7, r0
 801d68a:	1e7d      	subs	r5, r7, #1
 801d68c:	4281      	cmp	r1, r0
 801d68e:	bfac      	ite	ge
 801d690:	186d      	addge	r5, r5, r1
 801d692:	182d      	addlt	r5, r5, r0
 801d694:	fb95 f5f7 	sdiv	r5, r5, r7
 801d698:	fb07 f505 	mul.w	r5, r7, r5
 801d69c:	6821      	ldr	r1, [r4, #0]
 801d69e:	6018      	str	r0, [r3, #0]
 801d6a0:	428d      	cmp	r5, r1
 801d6a2:	dd2f      	ble.n	801d704 <tsi_malloc_pool+0xa0>
 801d6a4:	68a3      	ldr	r3, [r4, #8]
 801d6a6:	b33b      	cbz	r3, 801d6f8 <tsi_malloc_pool+0x94>
 801d6a8:	4626      	mov	r6, r4
 801d6aa:	e002      	b.n	801d6b2 <tsi_malloc_pool+0x4e>
 801d6ac:	6893      	ldr	r3, [r2, #8]
 801d6ae:	4616      	mov	r6, r2
 801d6b0:	b313      	cbz	r3, 801d6f8 <tsi_malloc_pool+0x94>
 801d6b2:	58e1      	ldr	r1, [r4, r3]
 801d6b4:	18e2      	adds	r2, r4, r3
 801d6b6:	42a9      	cmp	r1, r5
 801d6b8:	dbf8      	blt.n	801d6ac <tsi_malloc_pool+0x48>
 801d6ba:	1943      	adds	r3, r0, r5
 801d6bc:	428b      	cmp	r3, r1
 801d6be:	da1e      	bge.n	801d6fe <tsi_malloc_pool+0x9a>
 801d6c0:	1ac9      	subs	r1, r1, r3
 801d6c2:	f8df c058 	ldr.w	ip, [pc, #88]	@ 801d71c <tsi_malloc_pool+0xb8>
 801d6c6:	5099      	str	r1, [r3, r2]
 801d6c8:	4413      	add	r3, r2
 801d6ca:	f8c3 c004 	str.w	ip, [r3, #4]
 801d6ce:	6891      	ldr	r1, [r2, #8]
 801d6d0:	2f00      	cmp	r7, #0
 801d6d2:	6099      	str	r1, [r3, #8]
 801d6d4:	dd08      	ble.n	801d6e8 <tsi_malloc_pool+0x84>
 801d6d6:	fbb3 f1f7 	udiv	r1, r3, r7
 801d6da:	fb07 3c11 	mls	ip, r7, r1, r3
 801d6de:	f1bc 0f00 	cmp.w	ip, #0
 801d6e2:	d001      	beq.n	801d6e8 <tsi_malloc_pool+0x84>
 801d6e4:	fb01 7307 	mla	r3, r1, r7, r7
 801d6e8:	1b1b      	subs	r3, r3, r4
 801d6ea:	60b3      	str	r3, [r6, #8]
 801d6ec:	6015      	str	r5, [r2, #0]
 801d6ee:	4b0a      	ldr	r3, [pc, #40]	@ (801d718 <tsi_malloc_pool+0xb4>)
 801d6f0:	4410      	add	r0, r2
 801d6f2:	6053      	str	r3, [r2, #4]
 801d6f4:	bcf0      	pop	{r4, r5, r6, r7}
 801d6f6:	4770      	bx	lr
 801d6f8:	2000      	movs	r0, #0
 801d6fa:	bcf0      	pop	{r4, r5, r6, r7}
 801d6fc:	4770      	bx	lr
 801d6fe:	6893      	ldr	r3, [r2, #8]
 801d700:	60b3      	str	r3, [r6, #8]
 801d702:	e7f4      	b.n	801d6ee <tsi_malloc_pool+0x8a>
 801d704:	4626      	mov	r6, r4
 801d706:	4622      	mov	r2, r4
 801d708:	e7d7      	b.n	801d6ba <tsi_malloc_pool+0x56>
 801d70a:	2000      	movs	r0, #0
 801d70c:	4770      	bx	lr
 801d70e:	bf00      	nop
 801d710:	2008329c 	.word	0x2008329c
 801d714:	200001e4 	.word	0x200001e4
 801d718:	000f1fa2 	.word	0x000f1fa2
 801d71c:	000f1fa1 	.word	0x000f1fa1

0801d720 <tsi_free>:
 801d720:	2800      	cmp	r0, #0
 801d722:	d044      	beq.n	801d7ae <tsi_free+0x8e>
 801d724:	4b6f      	ldr	r3, [pc, #444]	@ (801d8e4 <tsi_free+0x1c4>)
 801d726:	68da      	ldr	r2, [r3, #12]
 801d728:	b12a      	cbz	r2, 801d736 <tsi_free+0x16>
 801d72a:	6859      	ldr	r1, [r3, #4]
 801d72c:	4288      	cmp	r0, r1
 801d72e:	d302      	bcc.n	801d736 <tsi_free+0x16>
 801d730:	6899      	ldr	r1, [r3, #8]
 801d732:	4288      	cmp	r0, r1
 801d734:	d342      	bcc.n	801d7bc <tsi_free+0x9c>
 801d736:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801d738:	b12a      	cbz	r2, 801d746 <tsi_free+0x26>
 801d73a:	69d9      	ldr	r1, [r3, #28]
 801d73c:	4288      	cmp	r0, r1
 801d73e:	d302      	bcc.n	801d746 <tsi_free+0x26>
 801d740:	6a19      	ldr	r1, [r3, #32]
 801d742:	4288      	cmp	r0, r1
 801d744:	d352      	bcc.n	801d7ec <tsi_free+0xcc>
 801d746:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 801d748:	b12a      	cbz	r2, 801d756 <tsi_free+0x36>
 801d74a:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 801d74c:	4288      	cmp	r0, r1
 801d74e:	d302      	bcc.n	801d756 <tsi_free+0x36>
 801d750:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 801d752:	4288      	cmp	r0, r1
 801d754:	d34c      	bcc.n	801d7f0 <tsi_free+0xd0>
 801d756:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 801d758:	b12a      	cbz	r2, 801d766 <tsi_free+0x46>
 801d75a:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 801d75c:	4281      	cmp	r1, r0
 801d75e:	d802      	bhi.n	801d766 <tsi_free+0x46>
 801d760:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 801d762:	4281      	cmp	r1, r0
 801d764:	d846      	bhi.n	801d7f4 <tsi_free+0xd4>
 801d766:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
 801d768:	b12a      	cbz	r2, 801d776 <tsi_free+0x56>
 801d76a:	6e59      	ldr	r1, [r3, #100]	@ 0x64
 801d76c:	4288      	cmp	r0, r1
 801d76e:	d302      	bcc.n	801d776 <tsi_free+0x56>
 801d770:	6e99      	ldr	r1, [r3, #104]	@ 0x68
 801d772:	4281      	cmp	r1, r0
 801d774:	d840      	bhi.n	801d7f8 <tsi_free+0xd8>
 801d776:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
 801d77a:	b132      	cbz	r2, 801d78a <tsi_free+0x6a>
 801d77c:	6fd9      	ldr	r1, [r3, #124]	@ 0x7c
 801d77e:	4281      	cmp	r1, r0
 801d780:	d803      	bhi.n	801d78a <tsi_free+0x6a>
 801d782:	f8d3 1080 	ldr.w	r1, [r3, #128]	@ 0x80
 801d786:	4288      	cmp	r0, r1
 801d788:	d338      	bcc.n	801d7fc <tsi_free+0xdc>
 801d78a:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
 801d78e:	b13a      	cbz	r2, 801d7a0 <tsi_free+0x80>
 801d790:	f8d3 1094 	ldr.w	r1, [r3, #148]	@ 0x94
 801d794:	4288      	cmp	r0, r1
 801d796:	d303      	bcc.n	801d7a0 <tsi_free+0x80>
 801d798:	f8d3 1098 	ldr.w	r1, [r3, #152]	@ 0x98
 801d79c:	4288      	cmp	r0, r1
 801d79e:	d32f      	bcc.n	801d800 <tsi_free+0xe0>
 801d7a0:	f8d3 20b4 	ldr.w	r2, [r3, #180]	@ 0xb4
 801d7a4:	b11a      	cbz	r2, 801d7ae <tsi_free+0x8e>
 801d7a6:	f8d3 10ac 	ldr.w	r1, [r3, #172]	@ 0xac
 801d7aa:	4281      	cmp	r1, r0
 801d7ac:	d900      	bls.n	801d7b0 <tsi_free+0x90>
 801d7ae:	4770      	bx	lr
 801d7b0:	f8d3 10b0 	ldr.w	r1, [r3, #176]	@ 0xb0
 801d7b4:	4281      	cmp	r1, r0
 801d7b6:	d9fa      	bls.n	801d7ae <tsi_free+0x8e>
 801d7b8:	2107      	movs	r1, #7
 801d7ba:	e000      	b.n	801d7be <tsi_free+0x9e>
 801d7bc:	2100      	movs	r1, #0
 801d7be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d7c2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d7c6:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 801d7ca:	695e      	ldr	r6, [r3, #20]
 801d7cc:	4b46      	ldr	r3, [pc, #280]	@ (801d8e8 <tsi_free+0x1c8>)
 801d7ce:	f106 010b 	add.w	r1, r6, #11
 801d7d2:	fb91 f1f6 	sdiv	r1, r1, r6
 801d7d6:	fb06 f101 	mul.w	r1, r6, r1
 801d7da:	1a45      	subs	r5, r0, r1
 801d7dc:	686c      	ldr	r4, [r5, #4]
 801d7de:	4f43      	ldr	r7, [pc, #268]	@ (801d8ec <tsi_free+0x1cc>)
 801d7e0:	429c      	cmp	r4, r3
 801d7e2:	6039      	str	r1, [r7, #0]
 801d7e4:	46a8      	mov	r8, r5
 801d7e6:	d00d      	beq.n	801d804 <tsi_free+0xe4>
 801d7e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d7ec:	2101      	movs	r1, #1
 801d7ee:	e7e6      	b.n	801d7be <tsi_free+0x9e>
 801d7f0:	2102      	movs	r1, #2
 801d7f2:	e7e4      	b.n	801d7be <tsi_free+0x9e>
 801d7f4:	2103      	movs	r1, #3
 801d7f6:	e7e2      	b.n	801d7be <tsi_free+0x9e>
 801d7f8:	2104      	movs	r1, #4
 801d7fa:	e7e0      	b.n	801d7be <tsi_free+0x9e>
 801d7fc:	2105      	movs	r1, #5
 801d7fe:	e7de      	b.n	801d7be <tsi_free+0x9e>
 801d800:	2106      	movs	r1, #6
 801d802:	e7dc      	b.n	801d7be <tsi_free+0x9e>
 801d804:	4b3a      	ldr	r3, [pc, #232]	@ (801d8f0 <tsi_free+0x1d0>)
 801d806:	606b      	str	r3, [r5, #4]
 801d808:	6894      	ldr	r4, [r2, #8]
 801d80a:	18a3      	adds	r3, r4, r2
 801d80c:	429d      	cmp	r5, r3
 801d80e:	d95e      	bls.n	801d8ce <tsi_free+0x1ae>
 801d810:	b90c      	cbnz	r4, 801d816 <tsi_free+0xf6>
 801d812:	e05c      	b.n	801d8ce <tsi_free+0x1ae>
 801d814:	b12c      	cbz	r4, 801d822 <tsi_free+0x102>
 801d816:	689c      	ldr	r4, [r3, #8]
 801d818:	469c      	mov	ip, r3
 801d81a:	469e      	mov	lr, r3
 801d81c:	1913      	adds	r3, r2, r4
 801d81e:	429d      	cmp	r5, r3
 801d820:	d8f8      	bhi.n	801d814 <tsi_free+0xf4>
 801d822:	682f      	ldr	r7, [r5, #0]
 801d824:	4594      	cmp	ip, r2
 801d826:	4438      	add	r0, r7
 801d828:	d04d      	beq.n	801d8c6 <tsi_free+0x1a6>
 801d82a:	f8dc 7000 	ldr.w	r7, [ip]
 801d82e:	eb01 040c 	add.w	r4, r1, ip
 801d832:	443c      	add	r4, r7
 801d834:	1b64      	subs	r4, r4, r5
 801d836:	fab4 f484 	clz	r4, r4
 801d83a:	0964      	lsrs	r4, r4, #5
 801d83c:	2e00      	cmp	r6, #0
 801d83e:	dd32      	ble.n	801d8a6 <tsi_free+0x186>
 801d840:	fbb5 f7f6 	udiv	r7, r5, r6
 801d844:	fb06 5c17 	mls	ip, r6, r7, r5
 801d848:	f1bc 0f00 	cmp.w	ip, #0
 801d84c:	d001      	beq.n	801d852 <tsi_free+0x132>
 801d84e:	fb07 6506 	mla	r5, r7, r6, r6
 801d852:	fbb3 f7f6 	udiv	r7, r3, r6
 801d856:	fb06 3c17 	mls	ip, r6, r7, r3
 801d85a:	1aad      	subs	r5, r5, r2
 801d85c:	f8ce 5008 	str.w	r5, [lr, #8]
 801d860:	f1bc 0f00 	cmp.w	ip, #0
 801d864:	d01d      	beq.n	801d8a2 <tsi_free+0x182>
 801d866:	fb07 6606 	mla	r6, r7, r6, r6
 801d86a:	1ab2      	subs	r2, r6, r2
 801d86c:	f8c8 2008 	str.w	r2, [r8, #8]
 801d870:	b154      	cbz	r4, 801d888 <tsi_free+0x168>
 801d872:	f8d8 5000 	ldr.w	r5, [r8]
 801d876:	46f0      	mov	r8, lr
 801d878:	f8de 4000 	ldr.w	r4, [lr]
 801d87c:	440d      	add	r5, r1
 801d87e:	442c      	add	r4, r5
 801d880:	f8ce 4000 	str.w	r4, [lr]
 801d884:	f8ce 2008 	str.w	r2, [lr, #8]
 801d888:	4283      	cmp	r3, r0
 801d88a:	d1ad      	bne.n	801d7e8 <tsi_free+0xc8>
 801d88c:	6818      	ldr	r0, [r3, #0]
 801d88e:	f8d8 2000 	ldr.w	r2, [r8]
 801d892:	4401      	add	r1, r0
 801d894:	440a      	add	r2, r1
 801d896:	f8c8 2000 	str.w	r2, [r8]
 801d89a:	689b      	ldr	r3, [r3, #8]
 801d89c:	f8c8 3008 	str.w	r3, [r8, #8]
 801d8a0:	e7a2      	b.n	801d7e8 <tsi_free+0xc8>
 801d8a2:	461e      	mov	r6, r3
 801d8a4:	e7e1      	b.n	801d86a <tsi_free+0x14a>
 801d8a6:	1aae      	subs	r6, r5, r2
 801d8a8:	1a9a      	subs	r2, r3, r2
 801d8aa:	f8ce 6008 	str.w	r6, [lr, #8]
 801d8ae:	60aa      	str	r2, [r5, #8]
 801d8b0:	2c00      	cmp	r4, #0
 801d8b2:	d0e9      	beq.n	801d888 <tsi_free+0x168>
 801d8b4:	682d      	ldr	r5, [r5, #0]
 801d8b6:	f8de 4000 	ldr.w	r4, [lr]
 801d8ba:	440d      	add	r5, r1
 801d8bc:	442c      	add	r4, r5
 801d8be:	f8ce 4000 	str.w	r4, [lr]
 801d8c2:	46f0      	mov	r8, lr
 801d8c4:	e7de      	b.n	801d884 <tsi_free+0x164>
 801d8c6:	2e00      	cmp	r6, #0
 801d8c8:	dd06      	ble.n	801d8d8 <tsi_free+0x1b8>
 801d8ca:	2400      	movs	r4, #0
 801d8cc:	e7b8      	b.n	801d840 <tsi_free+0x120>
 801d8ce:	682c      	ldr	r4, [r5, #0]
 801d8d0:	4696      	mov	lr, r2
 801d8d2:	4420      	add	r0, r4
 801d8d4:	2400      	movs	r4, #0
 801d8d6:	e7b1      	b.n	801d83c <tsi_free+0x11c>
 801d8d8:	eba5 020c 	sub.w	r2, r5, ip
 801d8dc:	f8cc 2008 	str.w	r2, [ip, #8]
 801d8e0:	60ac      	str	r4, [r5, #8]
 801d8e2:	e7d1      	b.n	801d888 <tsi_free+0x168>
 801d8e4:	2008329c 	.word	0x2008329c
 801d8e8:	000f1fa2 	.word	0x000f1fa2
 801d8ec:	200001e4 	.word	0x200001e4
 801d8f0:	000f1fa1 	.word	0x000f1fa1

0801d8f4 <nema_cl_create_sized>:
 801d8f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d8f6:	b093      	sub	sp, #76	@ 0x4c
 801d8f8:	466d      	mov	r5, sp
 801d8fa:	4606      	mov	r6, r0
 801d8fc:	460a      	mov	r2, r1
 801d8fe:	4628      	mov	r0, r5
 801d900:	2100      	movs	r1, #0
 801d902:	f7e5 faa9 	bl	8002e58 <nema_buffer_create_pool>
 801d906:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801d90a:	2500      	movs	r5, #0
 801d90c:	ac04      	add	r4, sp, #16
 801d90e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801d912:	4620      	mov	r0, r4
 801d914:	f7e5 fac2 	bl	8002e9c <nema_buffer_map>
 801d918:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801d91c:	ac08      	add	r4, sp, #32
 801d91e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801d922:	2110      	movs	r1, #16
 801d924:	f04f 32ff 	mov.w	r2, #4294967295
 801d928:	9b04      	ldr	r3, [sp, #16]
 801d92a:	950d      	str	r5, [sp, #52]	@ 0x34
 801d92c:	e9cd 5510 	strd	r5, r5, [sp, #64]	@ 0x40
 801d930:	42ab      	cmp	r3, r5
 801d932:	4635      	mov	r5, r6
 801d934:	bfb8      	it	lt
 801d936:	3307      	addlt	r3, #7
 801d938:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 801d93c:	10db      	asrs	r3, r3, #3
 801d93e:	005b      	lsls	r3, r3, #1
 801d940:	930c      	str	r3, [sp, #48]	@ 0x30
 801d942:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801d944:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801d946:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801d948:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801d94a:	e894 0003 	ldmia.w	r4, {r0, r1}
 801d94e:	2700      	movs	r7, #0
 801d950:	e885 0003 	stmia.w	r5, {r0, r1}
 801d954:	4630      	mov	r0, r6
 801d956:	61b7      	str	r7, [r6, #24]
 801d958:	b013      	add	sp, #76	@ 0x4c
 801d95a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801d95c <nema_extend_bound_cl>:
 801d95c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d95e:	4d6e      	ldr	r5, [pc, #440]	@ (801db18 <nema_extend_bound_cl+0x1bc>)
 801d960:	b09f      	sub	sp, #124	@ 0x7c
 801d962:	682b      	ldr	r3, [r5, #0]
 801d964:	2b00      	cmp	r3, #0
 801d966:	f000 80c1 	beq.w	801daec <nema_extend_bound_cl+0x190>
 801d96a:	4606      	mov	r6, r0
 801d96c:	6998      	ldr	r0, [r3, #24]
 801d96e:	0784      	lsls	r4, r0, #30
 801d970:	f140 80b6 	bpl.w	801dae0 <nema_extend_bound_cl+0x184>
 801d974:	e9d3 1204 	ldrd	r1, r2, [r3, #16]
 801d978:	0680      	lsls	r0, r0, #26
 801d97a:	d44e      	bmi.n	801da1a <nema_extend_bound_cl+0xbe>
 801d97c:	1a89      	subs	r1, r1, r2
 801d97e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801d982:	1049      	asrs	r1, r1, #1
 801d984:	2902      	cmp	r1, #2
 801d986:	dd13      	ble.n	801d9b0 <nema_extend_bound_cl+0x54>
 801d988:	f44f 3c80 	mov.w	ip, #65536	@ 0x10000
 801d98c:	2700      	movs	r7, #0
 801d98e:	1e94      	subs	r4, r2, #2
 801d990:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d994:	1c91      	adds	r1, r2, #2
 801d996:	0092      	lsls	r2, r2, #2
 801d998:	6898      	ldr	r0, [r3, #8]
 801d99a:	f840 c002 	str.w	ip, [r0, r2]
 801d99e:	6898      	ldr	r0, [r3, #8]
 801d9a0:	4410      	add	r0, r2
 801d9a2:	6047      	str	r7, [r0, #4]
 801d9a4:	6159      	str	r1, [r3, #20]
 801d9a6:	3102      	adds	r1, #2
 801d9a8:	428c      	cmp	r4, r1
 801d9aa:	f102 0208 	add.w	r2, r2, #8
 801d9ae:	d1f3      	bne.n	801d998 <nema_extend_bound_cl+0x3c>
 801d9b0:	6a1c      	ldr	r4, [r3, #32]
 801d9b2:	2c00      	cmp	r4, #0
 801d9b4:	d050      	beq.n	801da58 <nema_extend_bound_cl+0xfc>
 801d9b6:	e9d3 2105 	ldrd	r2, r1, [r3, #20]
 801d9ba:	26f0      	movs	r6, #240	@ 0xf0
 801d9bc:	27f4      	movs	r7, #244	@ 0xf4
 801d9be:	6898      	ldr	r0, [r3, #8]
 801d9c0:	f041 0104 	orr.w	r1, r1, #4
 801d9c4:	6199      	str	r1, [r3, #24]
 801d9c6:	f840 6022 	str.w	r6, [r0, r2, lsl #2]
 801d9ca:	6899      	ldr	r1, [r3, #8]
 801d9cc:	68e6      	ldr	r6, [r4, #12]
 801d9ce:	0090      	lsls	r0, r2, #2
 801d9d0:	4401      	add	r1, r0
 801d9d2:	604e      	str	r6, [r1, #4]
 801d9d4:	6899      	ldr	r1, [r3, #8]
 801d9d6:	1c96      	adds	r6, r2, #2
 801d9d8:	4401      	add	r1, r0
 801d9da:	615e      	str	r6, [r3, #20]
 801d9dc:	608f      	str	r7, [r1, #8]
 801d9de:	6899      	ldr	r1, [r3, #8]
 801d9e0:	6926      	ldr	r6, [r4, #16]
 801d9e2:	4401      	add	r1, r0
 801d9e4:	1d17      	adds	r7, r2, #4
 801d9e6:	60ce      	str	r6, [r1, #12]
 801d9e8:	621c      	str	r4, [r3, #32]
 801d9ea:	615f      	str	r7, [r3, #20]
 801d9ec:	68e1      	ldr	r1, [r4, #12]
 801d9ee:	f011 0107 	ands.w	r1, r1, #7
 801d9f2:	d120      	bne.n	801da36 <nema_extend_bound_cl+0xda>
 801d9f4:	691e      	ldr	r6, [r3, #16]
 801d9f6:	3205      	adds	r2, #5
 801d9f8:	42b2      	cmp	r2, r6
 801d9fa:	db23      	blt.n	801da44 <nema_extend_bound_cl+0xe8>
 801d9fc:	699a      	ldr	r2, [r3, #24]
 801d9fe:	f022 0220 	bic.w	r2, r2, #32
 801da02:	619a      	str	r2, [r3, #24]
 801da04:	69a3      	ldr	r3, [r4, #24]
 801da06:	075a      	lsls	r2, r3, #29
 801da08:	d503      	bpl.n	801da12 <nema_extend_bound_cl+0xb6>
 801da0a:	6a24      	ldr	r4, [r4, #32]
 801da0c:	69a3      	ldr	r3, [r4, #24]
 801da0e:	075b      	lsls	r3, r3, #29
 801da10:	d4fb      	bmi.n	801da0a <nema_extend_bound_cl+0xae>
 801da12:	2000      	movs	r0, #0
 801da14:	602c      	str	r4, [r5, #0]
 801da16:	b01f      	add	sp, #124	@ 0x7c
 801da18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801da1a:	2900      	cmp	r1, #0
 801da1c:	bfb8      	it	lt
 801da1e:	3103      	addlt	r1, #3
 801da20:	1089      	asrs	r1, r1, #2
 801da22:	0049      	lsls	r1, r1, #1
 801da24:	4291      	cmp	r1, r2
 801da26:	bfcc      	ite	gt
 801da28:	4610      	movgt	r0, r2
 801da2a:	1a50      	suble	r0, r2, r1
 801da2c:	1a09      	subs	r1, r1, r0
 801da2e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801da32:	1049      	asrs	r1, r1, #1
 801da34:	e7a6      	b.n	801d984 <nema_extend_bound_cl+0x28>
 801da36:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 801da3a:	f7f3 f853 	bl	8010ae4 <nema_set_error>
 801da3e:	2000      	movs	r0, #0
 801da40:	b01f      	add	sp, #124	@ 0x7c
 801da42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801da44:	f44f 26a0 	mov.w	r6, #327680	@ 0x50000
 801da48:	689a      	ldr	r2, [r3, #8]
 801da4a:	4410      	add	r0, r2
 801da4c:	e9c0 6104 	strd	r6, r1, [r0, #16]
 801da50:	699a      	ldr	r2, [r3, #24]
 801da52:	f022 0208 	bic.w	r2, r2, #8
 801da56:	e7d2      	b.n	801d9fe <nema_extend_bound_cl+0xa2>
 801da58:	2028      	movs	r0, #40	@ 0x28
 801da5a:	f7e5 f97b 	bl	8002d54 <nema_host_malloc>
 801da5e:	4604      	mov	r4, r0
 801da60:	2800      	cmp	r0, #0
 801da62:	d052      	beq.n	801db0a <nema_extend_bound_cl+0x1ae>
 801da64:	1cb1      	adds	r1, r6, #2
 801da66:	00c9      	lsls	r1, r1, #3
 801da68:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 801da6c:	dd1a      	ble.n	801daa4 <nema_extend_bound_cl+0x148>
 801da6e:	466e      	mov	r6, sp
 801da70:	4627      	mov	r7, r4
 801da72:	4668      	mov	r0, sp
 801da74:	f7ff ff3e 	bl	801d8f4 <nema_cl_create_sized>
 801da78:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801da7a:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801da7c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801da7e:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801da80:	e896 0003 	ldmia.w	r6, {r0, r1}
 801da84:	e887 0003 	stmia.w	r7, {r0, r1}
 801da88:	68a3      	ldr	r3, [r4, #8]
 801da8a:	2b00      	cmp	r3, #0
 801da8c:	d034      	beq.n	801daf8 <nema_extend_bound_cl+0x19c>
 801da8e:	682b      	ldr	r3, [r5, #0]
 801da90:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801da92:	2a00      	cmp	r2, #0
 801da94:	bf08      	it	eq
 801da96:	461a      	moveq	r2, r3
 801da98:	6262      	str	r2, [r4, #36]	@ 0x24
 801da9a:	699a      	ldr	r2, [r3, #24]
 801da9c:	f022 020c 	bic.w	r2, r2, #12
 801daa0:	61a2      	str	r2, [r4, #24]
 801daa2:	e788      	b.n	801d9b6 <nema_extend_bound_cl+0x5a>
 801daa4:	a80a      	add	r0, sp, #40	@ 0x28
 801daa6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 801daaa:	f7ff ff23 	bl	801d8f4 <nema_cl_create_sized>
 801daae:	2302      	movs	r3, #2
 801dab0:	46a4      	mov	ip, r4
 801dab2:	9310      	str	r3, [sp, #64]	@ 0x40
 801dab4:	ae0a      	add	r6, sp, #40	@ 0x28
 801dab6:	af14      	add	r7, sp, #80	@ 0x50
 801dab8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801daba:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801dabc:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801dabe:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801dac0:	e896 0003 	ldmia.w	r6, {r0, r1}
 801dac4:	ae14      	add	r6, sp, #80	@ 0x50
 801dac6:	e887 0003 	stmia.w	r7, {r0, r1}
 801daca:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801dacc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801dad0:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801dad2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801dad6:	e897 0003 	ldmia.w	r7, {r0, r1}
 801dada:	e88c 0003 	stmia.w	ip, {r0, r1}
 801dade:	e7d3      	b.n	801da88 <nema_extend_bound_cl+0x12c>
 801dae0:	2008      	movs	r0, #8
 801dae2:	f7f2 ffff 	bl	8010ae4 <nema_set_error>
 801dae6:	f04f 30ff 	mov.w	r0, #4294967295
 801daea:	e7a9      	b.n	801da40 <nema_extend_bound_cl+0xe4>
 801daec:	2080      	movs	r0, #128	@ 0x80
 801daee:	f7f2 fff9 	bl	8010ae4 <nema_set_error>
 801daf2:	f04f 30ff 	mov.w	r0, #4294967295
 801daf6:	e7a3      	b.n	801da40 <nema_extend_bound_cl+0xe4>
 801daf8:	2010      	movs	r0, #16
 801dafa:	f7f2 fff3 	bl	8010ae4 <nema_set_error>
 801dafe:	4620      	mov	r0, r4
 801db00:	f7e5 f926 	bl	8002d50 <nema_host_free>
 801db04:	f04f 30ff 	mov.w	r0, #4294967295
 801db08:	e79a      	b.n	801da40 <nema_extend_bound_cl+0xe4>
 801db0a:	2010      	movs	r0, #16
 801db0c:	f7f2 ffea 	bl	8010ae4 <nema_set_error>
 801db10:	f04f 30ff 	mov.w	r0, #4294967295
 801db14:	e794      	b.n	801da40 <nema_extend_bound_cl+0xe4>
 801db16:	bf00      	nop
 801db18:	2008335c 	.word	0x2008335c

0801db1c <nema_cl_bind_circular>:
 801db1c:	b358      	cbz	r0, 801db76 <nema_cl_bind_circular+0x5a>
 801db1e:	68c3      	ldr	r3, [r0, #12]
 801db20:	f013 0207 	ands.w	r2, r3, #7
 801db24:	d117      	bne.n	801db56 <nema_cl_bind_circular+0x3a>
 801db26:	b4f0      	push	{r4, r5, r6, r7}
 801db28:	4c15      	ldr	r4, [pc, #84]	@ (801db80 <nema_cl_bind_circular+0x64>)
 801db2a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801db2c:	6821      	ldr	r1, [r4, #0]
 801db2e:	2b00      	cmp	r3, #0
 801db30:	bf08      	it	eq
 801db32:	4603      	moveq	r3, r0
 801db34:	b141      	cbz	r1, 801db48 <nema_cl_bind_circular+0x2c>
 801db36:	e9d1 5004 	ldrd	r5, r0, [r1, #16]
 801db3a:	1c46      	adds	r6, r0, #1
 801db3c:	42ae      	cmp	r6, r5
 801db3e:	db0e      	blt.n	801db5e <nema_cl_bind_circular+0x42>
 801db40:	698a      	ldr	r2, [r1, #24]
 801db42:	f022 0220 	bic.w	r2, r2, #32
 801db46:	618a      	str	r2, [r1, #24]
 801db48:	699a      	ldr	r2, [r3, #24]
 801db4a:	6023      	str	r3, [r4, #0]
 801db4c:	f042 0220 	orr.w	r2, r2, #32
 801db50:	619a      	str	r2, [r3, #24]
 801db52:	bcf0      	pop	{r4, r5, r6, r7}
 801db54:	4770      	bx	lr
 801db56:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 801db5a:	f7f2 bfc3 	b.w	8010ae4 <nema_set_error>
 801db5e:	f44f 27a0 	mov.w	r7, #327680	@ 0x50000
 801db62:	688d      	ldr	r5, [r1, #8]
 801db64:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 801db68:	f845 7020 	str.w	r7, [r5, r0, lsl #2]
 801db6c:	6072      	str	r2, [r6, #4]
 801db6e:	698a      	ldr	r2, [r1, #24]
 801db70:	f022 0208 	bic.w	r2, r2, #8
 801db74:	e7e5      	b.n	801db42 <nema_cl_bind_circular+0x26>
 801db76:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801db7a:	f7f2 bfb3 	b.w	8010ae4 <nema_set_error>
 801db7e:	bf00      	nop
 801db80:	2008335c 	.word	0x2008335c

0801db84 <nema_cl_unbind>:
 801db84:	4910      	ldr	r1, [pc, #64]	@ (801dbc8 <nema_cl_unbind+0x44>)
 801db86:	680b      	ldr	r3, [r1, #0]
 801db88:	b1d3      	cbz	r3, 801dbc0 <nema_cl_unbind+0x3c>
 801db8a:	b430      	push	{r4, r5}
 801db8c:	e9d3 0204 	ldrd	r0, r2, [r3, #16]
 801db90:	1c54      	adds	r4, r2, #1
 801db92:	4284      	cmp	r4, r0
 801db94:	db07      	blt.n	801dba6 <nema_cl_unbind+0x22>
 801db96:	699a      	ldr	r2, [r3, #24]
 801db98:	f022 0220 	bic.w	r2, r2, #32
 801db9c:	619a      	str	r2, [r3, #24]
 801db9e:	2300      	movs	r3, #0
 801dba0:	600b      	str	r3, [r1, #0]
 801dba2:	bc30      	pop	{r4, r5}
 801dba4:	4770      	bx	lr
 801dba6:	f44f 25a0 	mov.w	r5, #327680	@ 0x50000
 801dbaa:	2400      	movs	r4, #0
 801dbac:	6898      	ldr	r0, [r3, #8]
 801dbae:	f840 5022 	str.w	r5, [r0, r2, lsl #2]
 801dbb2:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 801dbb6:	6054      	str	r4, [r2, #4]
 801dbb8:	699a      	ldr	r2, [r3, #24]
 801dbba:	f022 0208 	bic.w	r2, r2, #8
 801dbbe:	e7eb      	b.n	801db98 <nema_cl_unbind+0x14>
 801dbc0:	2300      	movs	r3, #0
 801dbc2:	600b      	str	r3, [r1, #0]
 801dbc4:	4770      	bx	lr
 801dbc6:	bf00      	nop
 801dbc8:	2008335c 	.word	0x2008335c

0801dbcc <nema_cl_get_bound>:
 801dbcc:	4b01      	ldr	r3, [pc, #4]	@ (801dbd4 <nema_cl_get_bound+0x8>)
 801dbce:	6818      	ldr	r0, [r3, #0]
 801dbd0:	4770      	bx	lr
 801dbd2:	bf00      	nop
 801dbd4:	2008335c 	.word	0x2008335c

0801dbd8 <nema_cl_submit_no_irq>:
 801dbd8:	2800      	cmp	r0, #0
 801dbda:	d052      	beq.n	801dc82 <nema_cl_submit_no_irq+0xaa>
 801dbdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dbde:	6944      	ldr	r4, [r0, #20]
 801dbe0:	b1f4      	cbz	r4, 801dc20 <nema_cl_submit_no_irq+0x48>
 801dbe2:	6983      	ldr	r3, [r0, #24]
 801dbe4:	4605      	mov	r5, r0
 801dbe6:	069a      	lsls	r2, r3, #26
 801dbe8:	d51b      	bpl.n	801dc22 <nema_cl_submit_no_irq+0x4a>
 801dbea:	6902      	ldr	r2, [r0, #16]
 801dbec:	2a00      	cmp	r2, #0
 801dbee:	bfb8      	it	lt
 801dbf0:	3203      	addlt	r2, #3
 801dbf2:	1092      	asrs	r2, r2, #2
 801dbf4:	0056      	lsls	r6, r2, #1
 801dbf6:	42b4      	cmp	r4, r6
 801dbf8:	da3d      	bge.n	801dc76 <nema_cl_submit_no_irq+0x9e>
 801dbfa:	68c7      	ldr	r7, [r0, #12]
 801dbfc:	071b      	lsls	r3, r3, #28
 801dbfe:	d549      	bpl.n	801dc94 <nema_cl_submit_no_irq+0xbc>
 801dc00:	69e8      	ldr	r0, [r5, #28]
 801dc02:	2800      	cmp	r0, #0
 801dc04:	da41      	bge.n	801dc8a <nema_cl_submit_no_irq+0xb2>
 801dc06:	f04f 33ff 	mov.w	r3, #4294967295
 801dc0a:	61eb      	str	r3, [r5, #28]
 801dc0c:	4621      	mov	r1, r4
 801dc0e:	4638      	mov	r0, r7
 801dc10:	f7f2 fd54 	bl	80106bc <nema_rb_submit_cmdlist2>
 801dc14:	696b      	ldr	r3, [r5, #20]
 801dc16:	61e8      	str	r0, [r5, #28]
 801dc18:	42b3      	cmp	r3, r6
 801dc1a:	bfa8      	it	ge
 801dc1c:	2600      	movge	r6, #0
 801dc1e:	616e      	str	r6, [r5, #20]
 801dc20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dc22:	4604      	mov	r4, r0
 801dc24:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 801dc28:	e012      	b.n	801dc50 <nema_cl_submit_no_irq+0x78>
 801dc2a:	6923      	ldr	r3, [r4, #16]
 801dc2c:	6949      	ldr	r1, [r1, #20]
 801dc2e:	4433      	add	r3, r6
 801dc30:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 801dc34:	69a3      	ldr	r3, [r4, #24]
 801dc36:	4620      	mov	r0, r4
 801dc38:	f023 0308 	bic.w	r3, r3, #8
 801dc3c:	61a3      	str	r3, [r4, #24]
 801dc3e:	f7e5 f93f 	bl	8002ec0 <nema_buffer_flush>
 801dc42:	69a3      	ldr	r3, [r4, #24]
 801dc44:	f043 0308 	orr.w	r3, r3, #8
 801dc48:	61a3      	str	r3, [r4, #24]
 801dc4a:	6a24      	ldr	r4, [r4, #32]
 801dc4c:	b134      	cbz	r4, 801dc5c <nema_cl_submit_no_irq+0x84>
 801dc4e:	69a3      	ldr	r3, [r4, #24]
 801dc50:	0758      	lsls	r0, r3, #29
 801dc52:	68a2      	ldr	r2, [r4, #8]
 801dc54:	6a21      	ldr	r1, [r4, #32]
 801dc56:	d4e8      	bmi.n	801dc2a <nema_cl_submit_no_irq+0x52>
 801dc58:	071b      	lsls	r3, r3, #28
 801dc5a:	d523      	bpl.n	801dca4 <nema_cl_submit_no_irq+0xcc>
 801dc5c:	2000      	movs	r0, #0
 801dc5e:	f7e5 f930 	bl	8002ec2 <nema_mutex_lock>
 801dc62:	6969      	ldr	r1, [r5, #20]
 801dc64:	4628      	mov	r0, r5
 801dc66:	f7f2 fdad 	bl	80107c4 <nema_rb_submit_cmdlist>
 801dc6a:	61e8      	str	r0, [r5, #28]
 801dc6c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801dc70:	2000      	movs	r0, #0
 801dc72:	f7e5 b928 	b.w	8002ec6 <nema_mutex_unlock>
 801dc76:	d0d3      	beq.n	801dc20 <nema_cl_submit_no_irq+0x48>
 801dc78:	68c7      	ldr	r7, [r0, #12]
 801dc7a:	1ba4      	subs	r4, r4, r6
 801dc7c:	eb07 07c2 	add.w	r7, r7, r2, lsl #3
 801dc80:	e7bc      	b.n	801dbfc <nema_cl_submit_no_irq+0x24>
 801dc82:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801dc86:	f7f2 bf2d 	b.w	8010ae4 <nema_set_error>
 801dc8a:	f7e5 f853 	bl	8002d34 <nema_wait_irq_cl>
 801dc8e:	2800      	cmp	r0, #0
 801dc90:	dab9      	bge.n	801dc06 <nema_cl_submit_no_irq+0x2e>
 801dc92:	e7bb      	b.n	801dc0c <nema_cl_submit_no_irq+0x34>
 801dc94:	4628      	mov	r0, r5
 801dc96:	f7e5 f913 	bl	8002ec0 <nema_buffer_flush>
 801dc9a:	69ab      	ldr	r3, [r5, #24]
 801dc9c:	f043 0308 	orr.w	r3, r3, #8
 801dca0:	61ab      	str	r3, [r5, #24]
 801dca2:	e7ad      	b.n	801dc00 <nema_cl_submit_no_irq+0x28>
 801dca4:	4620      	mov	r0, r4
 801dca6:	f7e5 f90b 	bl	8002ec0 <nema_buffer_flush>
 801dcaa:	69a3      	ldr	r3, [r4, #24]
 801dcac:	f043 0308 	orr.w	r3, r3, #8
 801dcb0:	61a3      	str	r3, [r4, #24]
 801dcb2:	e7d3      	b.n	801dc5c <nema_cl_submit_no_irq+0x84>

0801dcb4 <nema_cl_get_space>:
 801dcb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dcb6:	4e2c      	ldr	r6, [pc, #176]	@ (801dd68 <nema_cl_get_space+0xb4>)
 801dcb8:	6834      	ldr	r4, [r6, #0]
 801dcba:	2c00      	cmp	r4, #0
 801dcbc:	d04d      	beq.n	801dd5a <nema_cl_get_space+0xa6>
 801dcbe:	69a7      	ldr	r7, [r4, #24]
 801dcc0:	4605      	mov	r5, r0
 801dcc2:	f027 0108 	bic.w	r1, r7, #8
 801dcc6:	f017 0720 	ands.w	r7, r7, #32
 801dcca:	61a1      	str	r1, [r4, #24]
 801dccc:	6923      	ldr	r3, [r4, #16]
 801dcce:	6961      	ldr	r1, [r4, #20]
 801dcd0:	d016      	beq.n	801dd00 <nema_cl_get_space+0x4c>
 801dcd2:	2b00      	cmp	r3, #0
 801dcd4:	bfb8      	it	lt
 801dcd6:	3303      	addlt	r3, #3
 801dcd8:	109b      	asrs	r3, r3, #2
 801dcda:	005b      	lsls	r3, r3, #1
 801dcdc:	4299      	cmp	r1, r3
 801dcde:	bfb4      	ite	lt
 801dce0:	460a      	movlt	r2, r1
 801dce2:	1aca      	subge	r2, r1, r3
 801dce4:	1a9a      	subs	r2, r3, r2
 801dce6:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 801dcea:	3001      	adds	r0, #1
 801dcec:	ebb0 0f62 	cmp.w	r0, r2, asr #1
 801dcf0:	da1a      	bge.n	801dd28 <nema_cl_get_space+0x74>
 801dcf2:	68a0      	ldr	r0, [r4, #8]
 801dcf4:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801dcf8:	6165      	str	r5, [r4, #20]
 801dcfa:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801dcfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dd00:	1a5b      	subs	r3, r3, r1
 801dd02:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801dd06:	105b      	asrs	r3, r3, #1
 801dd08:	3b01      	subs	r3, #1
 801dd0a:	4283      	cmp	r3, r0
 801dd0c:	dcf1      	bgt.n	801dcf2 <nema_cl_get_space+0x3e>
 801dd0e:	f7ff fe25 	bl	801d95c <nema_extend_bound_cl>
 801dd12:	2800      	cmp	r0, #0
 801dd14:	db26      	blt.n	801dd64 <nema_cl_get_space+0xb0>
 801dd16:	6834      	ldr	r4, [r6, #0]
 801dd18:	6961      	ldr	r1, [r4, #20]
 801dd1a:	68a0      	ldr	r0, [r4, #8]
 801dd1c:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801dd20:	6165      	str	r5, [r4, #20]
 801dd22:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801dd26:	e7ea      	b.n	801dcfe <nema_cl_get_space+0x4a>
 801dd28:	2900      	cmp	r1, #0
 801dd2a:	d0e2      	beq.n	801dcf2 <nema_cl_get_space+0x3e>
 801dd2c:	4299      	cmp	r1, r3
 801dd2e:	d0e0      	beq.n	801dcf2 <nema_cl_get_space+0x3e>
 801dd30:	4620      	mov	r0, r4
 801dd32:	f7ff ff51 	bl	801dbd8 <nema_cl_submit_no_irq>
 801dd36:	69e0      	ldr	r0, [r4, #28]
 801dd38:	f7f2 fe10 	bl	801095c <nema_rb_submit_cl_id>
 801dd3c:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801dd40:	69e0      	ldr	r0, [r4, #28]
 801dd42:	4298      	cmp	r0, r3
 801dd44:	d1e7      	bne.n	801dd16 <nema_cl_get_space+0x62>
 801dd46:	f7e4 fff5 	bl	8002d34 <nema_wait_irq_cl>
 801dd4a:	2800      	cmp	r0, #0
 801dd4c:	dbe3      	blt.n	801dd16 <nema_cl_get_space+0x62>
 801dd4e:	f04f 33ff 	mov.w	r3, #4294967295
 801dd52:	61e3      	str	r3, [r4, #28]
 801dd54:	6834      	ldr	r4, [r6, #0]
 801dd56:	6961      	ldr	r1, [r4, #20]
 801dd58:	e7cb      	b.n	801dcf2 <nema_cl_get_space+0x3e>
 801dd5a:	2080      	movs	r0, #128	@ 0x80
 801dd5c:	f7f2 fec2 	bl	8010ae4 <nema_set_error>
 801dd60:	4620      	mov	r0, r4
 801dd62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dd64:	4638      	mov	r0, r7
 801dd66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dd68:	2008335c 	.word	0x2008335c

0801dd6c <nema_cl_add_cmd>:
 801dd6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801dd70:	4e2e      	ldr	r6, [pc, #184]	@ (801de2c <nema_cl_add_cmd+0xc0>)
 801dd72:	4680      	mov	r8, r0
 801dd74:	6834      	ldr	r4, [r6, #0]
 801dd76:	460f      	mov	r7, r1
 801dd78:	b35c      	cbz	r4, 801ddd2 <nema_cl_add_cmd+0x66>
 801dd7a:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
 801dd7e:	f025 0308 	bic.w	r3, r5, #8
 801dd82:	f015 0020 	ands.w	r0, r5, #32
 801dd86:	61a3      	str	r3, [r4, #24]
 801dd88:	6923      	ldr	r3, [r4, #16]
 801dd8a:	d016      	beq.n	801ddba <nema_cl_add_cmd+0x4e>
 801dd8c:	2b00      	cmp	r3, #0
 801dd8e:	bfb8      	it	lt
 801dd90:	3303      	addlt	r3, #3
 801dd92:	109b      	asrs	r3, r3, #2
 801dd94:	005b      	lsls	r3, r3, #1
 801dd96:	429a      	cmp	r2, r3
 801dd98:	bfb4      	ite	lt
 801dd9a:	4611      	movlt	r1, r2
 801dd9c:	1ad1      	subge	r1, r2, r3
 801dd9e:	1a59      	subs	r1, r3, r1
 801dda0:	2903      	cmp	r1, #3
 801dda2:	dd2a      	ble.n	801ddfa <nema_cl_add_cmd+0x8e>
 801dda4:	1c51      	adds	r1, r2, #1
 801dda6:	68a0      	ldr	r0, [r4, #8]
 801dda8:	1c93      	adds	r3, r2, #2
 801ddaa:	f840 8022 	str.w	r8, [r0, r2, lsl #2]
 801ddae:	68a2      	ldr	r2, [r4, #8]
 801ddb0:	f842 7021 	str.w	r7, [r2, r1, lsl #2]
 801ddb4:	6163      	str	r3, [r4, #20]
 801ddb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ddba:	07a9      	lsls	r1, r5, #30
 801ddbc:	d515      	bpl.n	801ddea <nema_cl_add_cmd+0x7e>
 801ddbe:	1d11      	adds	r1, r2, #4
 801ddc0:	4299      	cmp	r1, r3
 801ddc2:	dbef      	blt.n	801dda4 <nema_cl_add_cmd+0x38>
 801ddc4:	f7ff fdca 	bl	801d95c <nema_extend_bound_cl>
 801ddc8:	2800      	cmp	r0, #0
 801ddca:	dbf4      	blt.n	801ddb6 <nema_cl_add_cmd+0x4a>
 801ddcc:	6834      	ldr	r4, [r6, #0]
 801ddce:	6962      	ldr	r2, [r4, #20]
 801ddd0:	e7e8      	b.n	801dda4 <nema_cl_add_cmd+0x38>
 801ddd2:	4620      	mov	r0, r4
 801ddd4:	f7e5 f875 	bl	8002ec2 <nema_mutex_lock>
 801ddd8:	4640      	mov	r0, r8
 801ddda:	4639      	mov	r1, r7
 801dddc:	f7f2 fcf6 	bl	80107cc <nema_rb_inline_cmd>
 801dde0:	4620      	mov	r0, r4
 801dde2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801dde6:	f7e5 b86e 	b.w	8002ec6 <nema_mutex_unlock>
 801ddea:	1c51      	adds	r1, r2, #1
 801ddec:	4299      	cmp	r1, r3
 801ddee:	dbda      	blt.n	801dda6 <nema_cl_add_cmd+0x3a>
 801ddf0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ddf4:	2008      	movs	r0, #8
 801ddf6:	f7f2 be75 	b.w	8010ae4 <nema_set_error>
 801ddfa:	b1a2      	cbz	r2, 801de26 <nema_cl_add_cmd+0xba>
 801ddfc:	429a      	cmp	r2, r3
 801ddfe:	d0d1      	beq.n	801dda4 <nema_cl_add_cmd+0x38>
 801de00:	4620      	mov	r0, r4
 801de02:	f7ff fee9 	bl	801dbd8 <nema_cl_submit_no_irq>
 801de06:	69e0      	ldr	r0, [r4, #28]
 801de08:	f7f2 fda8 	bl	801095c <nema_rb_submit_cl_id>
 801de0c:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801de10:	69e0      	ldr	r0, [r4, #28]
 801de12:	4298      	cmp	r0, r3
 801de14:	d1da      	bne.n	801ddcc <nema_cl_add_cmd+0x60>
 801de16:	f7e4 ff8d 	bl	8002d34 <nema_wait_irq_cl>
 801de1a:	2800      	cmp	r0, #0
 801de1c:	bfa4      	itt	ge
 801de1e:	f04f 33ff 	movge.w	r3, #4294967295
 801de22:	61e3      	strge	r3, [r4, #28]
 801de24:	e7d2      	b.n	801ddcc <nema_cl_add_cmd+0x60>
 801de26:	2101      	movs	r1, #1
 801de28:	e7bd      	b.n	801dda6 <nema_cl_add_cmd+0x3a>
 801de2a:	bf00      	nop
 801de2c:	2008335c 	.word	0x2008335c

0801de30 <nema_cl_submit>:
 801de30:	2800      	cmp	r0, #0
 801de32:	d066      	beq.n	801df02 <nema_cl_submit+0xd2>
 801de34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801de36:	6944      	ldr	r4, [r0, #20]
 801de38:	2c00      	cmp	r4, #0
 801de3a:	d061      	beq.n	801df00 <nema_cl_submit+0xd0>
 801de3c:	6983      	ldr	r3, [r0, #24]
 801de3e:	4605      	mov	r5, r0
 801de40:	069a      	lsls	r2, r3, #26
 801de42:	d51f      	bpl.n	801de84 <nema_cl_submit+0x54>
 801de44:	6902      	ldr	r2, [r0, #16]
 801de46:	2a00      	cmp	r2, #0
 801de48:	bfb8      	it	lt
 801de4a:	3203      	addlt	r2, #3
 801de4c:	1092      	asrs	r2, r2, #2
 801de4e:	0056      	lsls	r6, r2, #1
 801de50:	42b4      	cmp	r4, r6
 801de52:	d055      	beq.n	801df00 <nema_cl_submit+0xd0>
 801de54:	68c7      	ldr	r7, [r0, #12]
 801de56:	bfa4      	itt	ge
 801de58:	1ba4      	subge	r4, r4, r6
 801de5a:	eb07 07c2 	addge.w	r7, r7, r2, lsl #3
 801de5e:	071b      	lsls	r3, r3, #28
 801de60:	d553      	bpl.n	801df0a <nema_cl_submit+0xda>
 801de62:	69e8      	ldr	r0, [r5, #28]
 801de64:	2800      	cmp	r0, #0
 801de66:	da57      	bge.n	801df18 <nema_cl_submit+0xe8>
 801de68:	f04f 33ff 	mov.w	r3, #4294967295
 801de6c:	61eb      	str	r3, [r5, #28]
 801de6e:	4621      	mov	r1, r4
 801de70:	4638      	mov	r0, r7
 801de72:	f7f2 fc23 	bl	80106bc <nema_rb_submit_cmdlist2>
 801de76:	696b      	ldr	r3, [r5, #20]
 801de78:	61e8      	str	r0, [r5, #28]
 801de7a:	429e      	cmp	r6, r3
 801de7c:	bfd8      	it	le
 801de7e:	2600      	movle	r6, #0
 801de80:	616e      	str	r6, [r5, #20]
 801de82:	e02f      	b.n	801dee4 <nema_cl_submit+0xb4>
 801de84:	4604      	mov	r4, r0
 801de86:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 801de8a:	e012      	b.n	801deb2 <nema_cl_submit+0x82>
 801de8c:	6923      	ldr	r3, [r4, #16]
 801de8e:	6949      	ldr	r1, [r1, #20]
 801de90:	4433      	add	r3, r6
 801de92:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 801de96:	69a3      	ldr	r3, [r4, #24]
 801de98:	4620      	mov	r0, r4
 801de9a:	f023 0308 	bic.w	r3, r3, #8
 801de9e:	61a3      	str	r3, [r4, #24]
 801dea0:	f7e5 f80e 	bl	8002ec0 <nema_buffer_flush>
 801dea4:	69a3      	ldr	r3, [r4, #24]
 801dea6:	f043 0308 	orr.w	r3, r3, #8
 801deaa:	61a3      	str	r3, [r4, #24]
 801deac:	6a24      	ldr	r4, [r4, #32]
 801deae:	b16c      	cbz	r4, 801decc <nema_cl_submit+0x9c>
 801deb0:	69a3      	ldr	r3, [r4, #24]
 801deb2:	0758      	lsls	r0, r3, #29
 801deb4:	68a2      	ldr	r2, [r4, #8]
 801deb6:	6a21      	ldr	r1, [r4, #32]
 801deb8:	d4e8      	bmi.n	801de8c <nema_cl_submit+0x5c>
 801deba:	071b      	lsls	r3, r3, #28
 801debc:	d406      	bmi.n	801decc <nema_cl_submit+0x9c>
 801debe:	4620      	mov	r0, r4
 801dec0:	f7e4 fffe 	bl	8002ec0 <nema_buffer_flush>
 801dec4:	69a3      	ldr	r3, [r4, #24]
 801dec6:	f043 0308 	orr.w	r3, r3, #8
 801deca:	61a3      	str	r3, [r4, #24]
 801decc:	2000      	movs	r0, #0
 801dece:	f7e4 fff8 	bl	8002ec2 <nema_mutex_lock>
 801ded2:	6969      	ldr	r1, [r5, #20]
 801ded4:	4628      	mov	r0, r5
 801ded6:	f7f2 fc75 	bl	80107c4 <nema_rb_submit_cmdlist>
 801deda:	61e8      	str	r0, [r5, #28]
 801dedc:	2000      	movs	r0, #0
 801dede:	f7e4 fff2 	bl	8002ec6 <nema_mutex_unlock>
 801dee2:	69e8      	ldr	r0, [r5, #28]
 801dee4:	f7f2 fd3a 	bl	801095c <nema_rb_submit_cl_id>
 801dee8:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801deec:	69e8      	ldr	r0, [r5, #28]
 801deee:	4298      	cmp	r0, r3
 801def0:	d106      	bne.n	801df00 <nema_cl_submit+0xd0>
 801def2:	f7e4 ff1f 	bl	8002d34 <nema_wait_irq_cl>
 801def6:	2800      	cmp	r0, #0
 801def8:	db02      	blt.n	801df00 <nema_cl_submit+0xd0>
 801defa:	f04f 33ff 	mov.w	r3, #4294967295
 801defe:	61eb      	str	r3, [r5, #28]
 801df00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801df02:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801df06:	f7f2 bded 	b.w	8010ae4 <nema_set_error>
 801df0a:	f7e4 ffd9 	bl	8002ec0 <nema_buffer_flush>
 801df0e:	69ab      	ldr	r3, [r5, #24]
 801df10:	f043 0308 	orr.w	r3, r3, #8
 801df14:	61ab      	str	r3, [r5, #24]
 801df16:	e7a4      	b.n	801de62 <nema_cl_submit+0x32>
 801df18:	f7e4 ff0c 	bl	8002d34 <nema_wait_irq_cl>
 801df1c:	2800      	cmp	r0, #0
 801df1e:	daa3      	bge.n	801de68 <nema_cl_submit+0x38>
 801df20:	e7a5      	b.n	801de6e <nema_cl_submit+0x3e>
 801df22:	bf00      	nop

0801df24 <nema_cl_wait>:
 801df24:	b510      	push	{r4, lr}
 801df26:	b170      	cbz	r0, 801df46 <nema_cl_wait+0x22>
 801df28:	4604      	mov	r4, r0
 801df2a:	69c0      	ldr	r0, [r0, #28]
 801df2c:	2800      	cmp	r0, #0
 801df2e:	da04      	bge.n	801df3a <nema_cl_wait+0x16>
 801df30:	f04f 33ff 	mov.w	r3, #4294967295
 801df34:	61e3      	str	r3, [r4, #28]
 801df36:	2000      	movs	r0, #0
 801df38:	bd10      	pop	{r4, pc}
 801df3a:	f7e4 fefb 	bl	8002d34 <nema_wait_irq_cl>
 801df3e:	2800      	cmp	r0, #0
 801df40:	daf6      	bge.n	801df30 <nema_cl_wait+0xc>
 801df42:	2000      	movs	r0, #0
 801df44:	bd10      	pop	{r4, pc}
 801df46:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801df4a:	f7f2 fdcb 	bl	8010ae4 <nema_set_error>
 801df4e:	f04f 30ff 	mov.w	r0, #4294967295
 801df52:	bd10      	pop	{r4, pc}

0801df54 <nema_blender_init>:
 801df54:	b530      	push	{r4, r5, lr}
 801df56:	b085      	sub	sp, #20
 801df58:	466d      	mov	r5, sp
 801df5a:	2418      	movs	r4, #24
 801df5c:	4b11      	ldr	r3, [pc, #68]	@ (801dfa4 <nema_blender_init+0x50>)
 801df5e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801df60:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 801df64:	2101      	movs	r1, #1
 801df66:	4622      	mov	r2, r4
 801df68:	4628      	mov	r0, r5
 801df6a:	440c      	add	r4, r1
 801df6c:	f7f4 f95c 	bl	8012228 <nema_load_frag_shader>
 801df70:	2c1f      	cmp	r4, #31
 801df72:	d1f7      	bne.n	801df64 <nema_blender_init+0x10>
 801df74:	4622      	mov	r2, r4
 801df76:	2101      	movs	r1, #1
 801df78:	a802      	add	r0, sp, #8
 801df7a:	f7f4 f955 	bl	8012228 <nema_load_frag_shader>
 801df7e:	f7f3 ffeb 	bl	8011f58 <nema_readHwConfig>
 801df82:	f000 5080 	and.w	r0, r0, #268435456	@ 0x10000000
 801df86:	2800      	cmp	r0, #0
 801df88:	bf14      	ite	ne
 801df8a:	2201      	movne	r2, #1
 801df8c:	2200      	moveq	r2, #0
 801df8e:	4b06      	ldr	r3, [pc, #24]	@ (801dfa8 <nema_blender_init+0x54>)
 801df90:	701a      	strb	r2, [r3, #0]
 801df92:	d005      	beq.n	801dfa0 <nema_blender_init+0x4c>
 801df94:	2200      	movs	r2, #0
 801df96:	4b05      	ldr	r3, [pc, #20]	@ (801dfac <nema_blender_init+0x58>)
 801df98:	2001      	movs	r0, #1
 801df9a:	601a      	str	r2, [r3, #0]
 801df9c:	f7f4 f964 	bl	8012268 <nema_set_rop_blend_mode>
 801dfa0:	b005      	add	sp, #20
 801dfa2:	bd30      	pop	{r4, r5, pc}
 801dfa4:	080335e8 	.word	0x080335e8
 801dfa8:	20083361 	.word	0x20083361
 801dfac:	200001e8 	.word	0x200001e8

0801dfb0 <nema_set_blend>:
 801dfb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfb4:	4ca5      	ldr	r4, [pc, #660]	@ (801e24c <nema_set_blend+0x29c>)
 801dfb6:	4683      	mov	fp, r0
 801dfb8:	7820      	ldrb	r0, [r4, #0]
 801dfba:	b0a7      	sub	sp, #156	@ 0x9c
 801dfbc:	9102      	str	r1, [sp, #8]
 801dfbe:	9200      	str	r2, [sp, #0]
 801dfc0:	2800      	cmp	r0, #0
 801dfc2:	f040 8233 	bne.w	801e42c <nema_set_blend+0x47c>
 801dfc6:	469a      	mov	sl, r3
 801dfc8:	465c      	mov	r4, fp
 801dfca:	ea4f 535b 	mov.w	r3, fp, lsr #21
 801dfce:	055b      	lsls	r3, r3, #21
 801dfd0:	930e      	str	r3, [sp, #56]	@ 0x38
 801dfd2:	f40b 0300 	and.w	r3, fp, #8388608	@ 0x800000
 801dfd6:	930c      	str	r3, [sp, #48]	@ 0x30
 801dfd8:	f40b 0380 	and.w	r3, fp, #4194304	@ 0x400000
 801dfdc:	f00b 010f 	and.w	r1, fp, #15
 801dfe0:	930d      	str	r3, [sp, #52]	@ 0x34
 801dfe2:	f40b 1300 	and.w	r3, fp, #2097152	@ 0x200000
 801dfe6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801dfe8:	9101      	str	r1, [sp, #4]
 801dfea:	b2d2      	uxtb	r2, r2
 801dfec:	fa5f f38a 	uxtb.w	r3, sl
 801dff0:	f3cb 2903 	ubfx	r9, fp, #8, #4
 801dff4:	f00b 7100 	and.w	r1, fp, #33554432	@ 0x2000000
 801dff8:	f3cb 6840 	ubfx	r8, fp, #25, #1
 801dffc:	9d02      	ldr	r5, [sp, #8]
 801dffe:	b2e8      	uxtb	r0, r5
 801e000:	2804      	cmp	r0, #4
 801e002:	4628      	mov	r0, r5
 801e004:	bf28      	it	cs
 801e006:	2000      	movcs	r0, #0
 801e008:	2a04      	cmp	r2, #4
 801e00a:	9a00      	ldr	r2, [sp, #0]
 801e00c:	bf28      	it	cs
 801e00e:	f04f 32ff 	movcs.w	r2, #4294967295
 801e012:	2b04      	cmp	r3, #4
 801e014:	9002      	str	r0, [sp, #8]
 801e016:	9200      	str	r2, [sp, #0]
 801e018:	bf28      	it	cs
 801e01a:	4682      	movcs	sl, r0
 801e01c:	4602      	mov	r2, r0
 801e01e:	bf34      	ite	cc
 801e020:	4650      	movcc	r0, sl
 801e022:	2002      	movcs	r0, #2
 801e024:	4b8a      	ldr	r3, [pc, #552]	@ (801e250 <nema_set_blend+0x2a0>)
 801e026:	9010      	str	r0, [sp, #64]	@ 0x40
 801e028:	781b      	ldrb	r3, [r3, #0]
 801e02a:	b14b      	cbz	r3, 801e040 <nema_set_blend+0x90>
 801e02c:	f01b 7380 	ands.w	r3, fp, #16777216	@ 0x1000000
 801e030:	9303      	str	r3, [sp, #12]
 801e032:	d102      	bne.n	801e03a <nema_set_blend+0x8a>
 801e034:	4552      	cmp	r2, sl
 801e036:	f000 830c 	beq.w	801e652 <nema_set_blend+0x6a2>
 801e03a:	2001      	movs	r0, #1
 801e03c:	f7f4 f914 	bl	8012268 <nema_set_rop_blend_mode>
 801e040:	2c00      	cmp	r4, #0
 801e042:	bfac      	ite	ge
 801e044:	4642      	movge	r2, r8
 801e046:	2201      	movlt	r2, #1
 801e048:	4b82      	ldr	r3, [pc, #520]	@ (801e254 <nema_set_blend+0x2a4>)
 801e04a:	f1bb 0f01 	cmp.w	fp, #1
 801e04e:	789b      	ldrb	r3, [r3, #2]
 801e050:	9207      	str	r2, [sp, #28]
 801e052:	9305      	str	r3, [sp, #20]
 801e054:	f000 80e0 	beq.w	801e218 <nema_set_blend+0x268>
 801e058:	f00b 4380 	and.w	r3, fp, #1073741824	@ 0x40000000
 801e05c:	9315      	str	r3, [sp, #84]	@ 0x54
 801e05e:	f3cb 7380 	ubfx	r3, fp, #30, #1
 801e062:	9306      	str	r3, [sp, #24]
 801e064:	f00b 5300 	and.w	r3, fp, #536870912	@ 0x20000000
 801e068:	9309      	str	r3, [sp, #36]	@ 0x24
 801e06a:	9b01      	ldr	r3, [sp, #4]
 801e06c:	f00b 5280 	and.w	r2, fp, #268435456	@ 0x10000000
 801e070:	2b05      	cmp	r3, #5
 801e072:	f240 80df 	bls.w	801e234 <nema_set_blend+0x284>
 801e076:	2301      	movs	r3, #1
 801e078:	930a      	str	r3, [sp, #40]	@ 0x28
 801e07a:	9304      	str	r3, [sp, #16]
 801e07c:	2303      	movs	r3, #3
 801e07e:	4976      	ldr	r1, [pc, #472]	@ (801e258 <nema_set_blend+0x2a8>)
 801e080:	9303      	str	r3, [sp, #12]
 801e082:	9108      	str	r1, [sp, #32]
 801e084:	4d75      	ldr	r5, [pc, #468]	@ (801e25c <nema_set_blend+0x2ac>)
 801e086:	2a00      	cmp	r2, #0
 801e088:	4b75      	ldr	r3, [pc, #468]	@ (801e260 <nema_set_blend+0x2b0>)
 801e08a:	bf18      	it	ne
 801e08c:	462b      	movne	r3, r5
 801e08e:	f105 4500 	add.w	r5, r5, #2147483648	@ 0x80000000
 801e092:	f105 0502 	add.w	r5, r5, #2
 801e096:	9312      	str	r3, [sp, #72]	@ 0x48
 801e098:	4b72      	ldr	r3, [pc, #456]	@ (801e264 <nema_set_blend+0x2b4>)
 801e09a:	bf08      	it	eq
 801e09c:	462b      	moveq	r3, r5
 801e09e:	f8df e20c 	ldr.w	lr, [pc, #524]	@ 801e2ac <nema_set_blend+0x2fc>
 801e0a2:	f8df c20c 	ldr.w	ip, [pc, #524]	@ 801e2b0 <nema_set_blend+0x300>
 801e0a6:	9311      	str	r3, [sp, #68]	@ 0x44
 801e0a8:	bf14      	ite	ne
 801e0aa:	4673      	movne	r3, lr
 801e0ac:	4663      	moveq	r3, ip
 801e0ae:	4f6e      	ldr	r7, [pc, #440]	@ (801e268 <nema_set_blend+0x2b8>)
 801e0b0:	9314      	str	r3, [sp, #80]	@ 0x50
 801e0b2:	4b6e      	ldr	r3, [pc, #440]	@ (801e26c <nema_set_blend+0x2bc>)
 801e0b4:	bf18      	it	ne
 801e0b6:	463b      	movne	r3, r7
 801e0b8:	f5a5 25c8 	sub.w	r5, r5, #409600	@ 0x64000
 801e0bc:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e0be:	4b6c      	ldr	r3, [pc, #432]	@ (801e270 <nema_set_blend+0x2c0>)
 801e0c0:	f1a5 0542 	sub.w	r5, r5, #66	@ 0x42
 801e0c4:	496b      	ldr	r1, [pc, #428]	@ (801e274 <nema_set_blend+0x2c4>)
 801e0c6:	bf18      	it	ne
 801e0c8:	4619      	movne	r1, r3
 801e0ca:	f1a3 033e 	sub.w	r3, r3, #62	@ 0x3e
 801e0ce:	bf18      	it	ne
 801e0d0:	462b      	movne	r3, r5
 801e0d2:	4e69      	ldr	r6, [pc, #420]	@ (801e278 <nema_set_blend+0x2c8>)
 801e0d4:	4f69      	ldr	r7, [pc, #420]	@ (801e27c <nema_set_blend+0x2cc>)
 801e0d6:	461d      	mov	r5, r3
 801e0d8:	4b69      	ldr	r3, [pc, #420]	@ (801e280 <nema_set_blend+0x2d0>)
 801e0da:	486a      	ldr	r0, [pc, #424]	@ (801e284 <nema_set_blend+0x2d4>)
 801e0dc:	bf18      	it	ne
 801e0de:	4630      	movne	r0, r6
 801e0e0:	f106 4600 	add.w	r6, r6, #2147483648	@ 0x80000000
 801e0e4:	f8df c1cc 	ldr.w	ip, [pc, #460]	@ 801e2b4 <nema_set_blend+0x304>
 801e0e8:	f506 3650 	add.w	r6, r6, #212992	@ 0x34000
 801e0ec:	bf04      	itt	eq
 801e0ee:	46bc      	moveq	ip, r7
 801e0f0:	461e      	moveq	r6, r3
 801e0f2:	f107 4700 	add.w	r7, r7, #2147483648	@ 0x80000000
 801e0f6:	f1a3 0340 	sub.w	r3, r3, #64	@ 0x40
 801e0fa:	f1a7 0742 	sub.w	r7, r7, #66	@ 0x42
 801e0fe:	bf08      	it	eq
 801e100:	461f      	moveq	r7, r3
 801e102:	4c61      	ldr	r4, [pc, #388]	@ (801e288 <nema_set_blend+0x2d8>)
 801e104:	f8df e1b0 	ldr.w	lr, [pc, #432]	@ 801e2b8 <nema_set_blend+0x308>
 801e108:	4a60      	ldr	r2, [pc, #384]	@ (801e28c <nema_set_blend+0x2dc>)
 801e10a:	bf18      	it	ne
 801e10c:	4622      	movne	r2, r4
 801e10e:	f504 3450 	add.w	r4, r4, #212992	@ 0x34000
 801e112:	bf08      	it	eq
 801e114:	4674      	moveq	r4, lr
 801e116:	f8dd e018 	ldr.w	lr, [sp, #24]
 801e11a:	f1b8 0f00 	cmp.w	r8, #0
 801e11e:	f040 8109 	bne.w	801e334 <nema_set_blend+0x384>
 801e122:	9b07      	ldr	r3, [sp, #28]
 801e124:	2b00      	cmp	r3, #0
 801e126:	bf0c      	ite	eq
 801e128:	2300      	moveq	r3, #0
 801e12a:	f44f 1300 	movne.w	r3, #2097152	@ 0x200000
 801e12e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e130:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e132:	2b00      	cmp	r3, #0
 801e134:	f040 8105 	bne.w	801e342 <nema_set_blend+0x392>
 801e138:	f01b 6f80 	tst.w	fp, #67108864	@ 0x4000000
 801e13c:	f000 81b4 	beq.w	801e4a8 <nema_set_blend+0x4f8>
 801e140:	4684      	mov	ip, r0
 801e142:	460e      	mov	r6, r1
 801e144:	4614      	mov	r4, r2
 801e146:	462f      	mov	r7, r5
 801e148:	f04f 0804 	mov.w	r8, #4
 801e14c:	2200      	movs	r2, #0
 801e14e:	4850      	ldr	r0, [pc, #320]	@ (801e290 <nema_set_blend+0x2e0>)
 801e150:	f00b 53c0 	and.w	r3, fp, #402653184	@ 0x18000000
 801e154:	4293      	cmp	r3, r2
 801e156:	f850 302a 	ldr.w	r3, [r0, sl, lsl #2]
 801e15a:	bf18      	it	ne
 801e15c:	463e      	movne	r6, r7
 801e15e:	9309      	str	r3, [sp, #36]	@ 0x24
 801e160:	9b05      	ldr	r3, [sp, #20]
 801e162:	bf16      	itet	ne
 801e164:	46a4      	movne	ip, r4
 801e166:	270e      	moveq	r7, #14
 801e168:	270c      	movne	r7, #12
 801e16a:	9216      	str	r2, [sp, #88]	@ 0x58
 801e16c:	2b00      	cmp	r3, #0
 801e16e:	f000 80eb 	beq.w	801e348 <nema_set_blend+0x398>
 801e172:	4b48      	ldr	r3, [pc, #288]	@ (801e294 <nema_set_blend+0x2e4>)
 801e174:	4948      	ldr	r1, [pc, #288]	@ (801e298 <nema_set_blend+0x2e8>)
 801e176:	9800      	ldr	r0, [sp, #0]
 801e178:	e9cd 1316 	strd	r1, r3, [sp, #88]	@ 0x58
 801e17c:	1c43      	adds	r3, r0, #1
 801e17e:	f000 8257 	beq.w	801e630 <nema_set_blend+0x680>
 801e182:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 801e186:	4b45      	ldr	r3, [pc, #276]	@ (801e29c <nema_set_blend+0x2ec>)
 801e188:	9204      	str	r2, [sp, #16]
 801e18a:	ea43 13c0 	orr.w	r3, r3, r0, lsl #7
 801e18e:	e9cd 3118 	strd	r3, r1, [sp, #96]	@ 0x60
 801e192:	2203      	movs	r2, #3
 801e194:	2102      	movs	r1, #2
 801e196:	4c42      	ldr	r4, [pc, #264]	@ (801e2a0 <nema_set_blend+0x2f0>)
 801e198:	f1b9 0f01 	cmp.w	r9, #1
 801e19c:	f240 8110 	bls.w	801e3c0 <nema_set_blend+0x410>
 801e1a0:	9b01      	ldr	r3, [sp, #4]
 801e1a2:	2b05      	cmp	r3, #5
 801e1a4:	d803      	bhi.n	801e1ae <nema_set_blend+0x1fe>
 801e1a6:	f01b 5f70 	tst.w	fp, #1006632960	@ 0x3c000000
 801e1aa:	f000 8087 	beq.w	801e2bc <nema_set_blend+0x30c>
 801e1ae:	9b03      	ldr	r3, [sp, #12]
 801e1b0:	b933      	cbnz	r3, 801e1c0 <nema_set_blend+0x210>
 801e1b2:	f1b9 0f00 	cmp.w	r9, #0
 801e1b6:	d103      	bne.n	801e1c0 <nema_set_blend+0x210>
 801e1b8:	9b07      	ldr	r3, [sp, #28]
 801e1ba:	2b00      	cmp	r3, #0
 801e1bc:	f000 81ca 	beq.w	801e554 <nema_set_blend+0x5a4>
 801e1c0:	f1b8 0f1d 	cmp.w	r8, #29
 801e1c4:	f000 8150 	beq.w	801e468 <nema_set_blend+0x4b8>
 801e1c8:	4b36      	ldr	r3, [pc, #216]	@ (801e2a4 <nema_set_blend+0x2f4>)
 801e1ca:	a826      	add	r0, sp, #152	@ 0x98
 801e1cc:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801e1d0:	ea43 13ca 	orr.w	r3, r3, sl, lsl #7
 801e1d4:	9803      	ldr	r0, [sp, #12]
 801e1d6:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
 801e1da:	4303      	orrs	r3, r0
 801e1dc:	e941 3c10 	strd	r3, ip, [r1, #-64]	@ 0x40
 801e1e0:	1c55      	adds	r5, r2, #1
 801e1e2:	f1b9 0f00 	cmp.w	r9, #0
 801e1e6:	f040 8150 	bne.w	801e48a <nema_set_blend+0x4da>
 801e1ea:	46ce      	mov	lr, r9
 801e1ec:	4b2d      	ldr	r3, [pc, #180]	@ (801e2a4 <nema_set_blend+0x2f4>)
 801e1ee:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e1f2:	f8cd 9018 	str.w	r9, [sp, #24]
 801e1f6:	9308      	str	r3, [sp, #32]
 801e1f8:	9b07      	ldr	r3, [sp, #28]
 801e1fa:	2b00      	cmp	r3, #0
 801e1fc:	d163      	bne.n	801e2c6 <nema_set_blend+0x316>
 801e1fe:	4b2a      	ldr	r3, [pc, #168]	@ (801e2a8 <nema_set_blend+0x2f8>)
 801e200:	f8dd a008 	ldr.w	sl, [sp, #8]
 801e204:	9308      	str	r3, [sp, #32]
 801e206:	f04f 4600 	mov.w	r6, #2147483648	@ 0x80000000
 801e20a:	9f01      	ldr	r7, [sp, #4]
 801e20c:	e061      	b.n	801e2d2 <nema_set_blend+0x322>
 801e20e:	f04f 0900 	mov.w	r9, #0
 801e212:	46c8      	mov	r8, r9
 801e214:	f8cd 901c 	str.w	r9, [sp, #28]
 801e218:	2b00      	cmp	r3, #0
 801e21a:	f000 8153 	beq.w	801e4c4 <nema_set_blend+0x514>
 801e21e:	9b01      	ldr	r3, [sp, #4]
 801e220:	2b05      	cmp	r3, #5
 801e222:	f200 8169 	bhi.w	801e4f8 <nema_set_blend+0x548>
 801e226:	2300      	movs	r3, #0
 801e228:	f04f 0b01 	mov.w	fp, #1
 801e22c:	461a      	mov	r2, r3
 801e22e:	9306      	str	r3, [sp, #24]
 801e230:	9309      	str	r3, [sp, #36]	@ 0x24
 801e232:	9315      	str	r3, [sp, #84]	@ 0x54
 801e234:	9b07      	ldr	r3, [sp, #28]
 801e236:	2b00      	cmp	r3, #0
 801e238:	f000 8200 	beq.w	801e63c <nema_set_blend+0x68c>
 801e23c:	930a      	str	r3, [sp, #40]	@ 0x28
 801e23e:	4b06      	ldr	r3, [pc, #24]	@ (801e258 <nema_set_blend+0x2a8>)
 801e240:	2001      	movs	r0, #1
 801e242:	9308      	str	r3, [sp, #32]
 801e244:	2303      	movs	r3, #3
 801e246:	e9cd 3003 	strd	r3, r0, [sp, #12]
 801e24a:	e71b      	b.n	801e084 <nema_set_blend+0xd4>
 801e24c:	20083360 	.word	0x20083360
 801e250:	20083361 	.word	0x20083361
 801e254:	20000064 	.word	0x20000064
 801e258:	080c0003 	.word	0x080c0003
 801e25c:	000761c5 	.word	0x000761c5
 801e260:	000761c7 	.word	0x000761c7
 801e264:	800761c5 	.word	0x800761c5
 801e268:	80076185 	.word	0x80076185
 801e26c:	80076187 	.word	0x80076187
 801e270:	800121c5 	.word	0x800121c5
 801e274:	800121c7 	.word	0x800121c7
 801e278:	000121c5 	.word	0x000121c5
 801e27c:	000461c7 	.word	0x000461c7
 801e280:	800461c7 	.word	0x800461c7
 801e284:	000121c7 	.word	0x000121c7
 801e288:	00012185 	.word	0x00012185
 801e28c:	00012187 	.word	0x00012187
 801e290:	08035d10 	.word	0x08035d10
 801e294:	02009408 	.word	0x02009408
 801e298:	00f40182 	.word	0x00f40182
 801e29c:	000c100b 	.word	0x000c100b
 801e2a0:	1000fc00 	.word	0x1000fc00
 801e2a4:	080c0000 	.word	0x080c0000
 801e2a8:	080c0002 	.word	0x080c0002
 801e2ac:	00076185 	.word	0x00076185
 801e2b0:	00076187 	.word	0x00076187
 801e2b4:	000461c5 	.word	0x000461c5
 801e2b8:	00046187 	.word	0x00046187
 801e2bc:	4615      	mov	r5, r2
 801e2be:	460a      	mov	r2, r1
 801e2c0:	f1b9 0f00 	cmp.w	r9, #0
 801e2c4:	d098      	beq.n	801e1f8 <nema_set_blend+0x248>
 801e2c6:	9b06      	ldr	r3, [sp, #24]
 801e2c8:	2b00      	cmp	r3, #0
 801e2ca:	f000 8202 	beq.w	801e6d2 <nema_set_blend+0x722>
 801e2ce:	2600      	movs	r6, #0
 801e2d0:	9f01      	ldr	r7, [sp, #4]
 801e2d2:	48c1      	ldr	r0, [pc, #772]	@ (801e5d8 <nema_set_blend+0x628>)
 801e2d4:	49c1      	ldr	r1, [pc, #772]	@ (801e5dc <nema_set_blend+0x62c>)
 801e2d6:	f850 3027 	ldr.w	r3, [r0, r7, lsl #2]
 801e2da:	f851 7027 	ldr.w	r7, [r1, r7, lsl #2]
 801e2de:	015b      	lsls	r3, r3, #5
 801e2e0:	ea43 3387 	orr.w	r3, r3, r7, lsl #14
 801e2e4:	9f08      	ldr	r7, [sp, #32]
 801e2e6:	ea47 5e0e 	orr.w	lr, r7, lr, lsl #20
 801e2ea:	4fbd      	ldr	r7, [pc, #756]	@ (801e5e0 <nema_set_blend+0x630>)
 801e2ec:	ea4e 1eca 	orr.w	lr, lr, sl, lsl #7
 801e2f0:	431f      	orrs	r7, r3
 801e2f2:	ab26      	add	r3, sp, #152	@ 0x98
 801e2f4:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801e2f8:	4337      	orrs	r7, r6
 801e2fa:	e942 e710 	strd	lr, r7, [r2, #-64]	@ 0x40
 801e2fe:	2e00      	cmp	r6, #0
 801e300:	f000 813f 	beq.w	801e582 <nema_set_blend+0x5d2>
 801e304:	9804      	ldr	r0, [sp, #16]
 801e306:	f7f3 fe95 	bl	8012034 <nema_matmul_bypass>
 801e30a:	4629      	mov	r1, r5
 801e30c:	2200      	movs	r2, #0
 801e30e:	a816      	add	r0, sp, #88	@ 0x58
 801e310:	f7f3 ff8a 	bl	8012228 <nema_load_frag_shader>
 801e314:	4bb3      	ldr	r3, [pc, #716]	@ (801e5e4 <nema_set_blend+0x634>)
 801e316:	f1c5 0520 	rsb	r5, r5, #32
 801e31a:	6818      	ldr	r0, [r3, #0]
 801e31c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e31e:	ea43 0800 	orr.w	r8, r3, r0
 801e322:	ea48 0005 	orr.w	r0, r8, r5
 801e326:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
 801e32a:	f7f3 ff97 	bl	801225c <nema_set_frag_ptr>
 801e32e:	b027      	add	sp, #156	@ 0x9c
 801e330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e334:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 801e338:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e33a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e33c:	2b00      	cmp	r3, #0
 801e33e:	f43f aefb 	beq.w	801e138 <nema_set_blend+0x188>
 801e342:	f04f 0811 	mov.w	r8, #17
 801e346:	e701      	b.n	801e14c <nema_set_blend+0x19c>
 801e348:	9b00      	ldr	r3, [sp, #0]
 801e34a:	1c5a      	adds	r2, r3, #1
 801e34c:	f000 8136 	beq.w	801e5bc <nema_set_blend+0x60c>
 801e350:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801e354:	9a05      	ldr	r2, [sp, #20]
 801e356:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 801e35a:	9204      	str	r2, [sp, #16]
 801e35c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e35e:	2a00      	cmp	r2, #0
 801e360:	f000 80a9 	beq.w	801e4b6 <nema_set_blend+0x506>
 801e364:	f44f 2440 	mov.w	r4, #786432	@ 0xc0000
 801e368:	499f      	ldr	r1, [pc, #636]	@ (801e5e8 <nema_set_blend+0x638>)
 801e36a:	4aa0      	ldr	r2, [pc, #640]	@ (801e5ec <nema_set_blend+0x63c>)
 801e36c:	f44f 5500 	mov.w	r5, #8192	@ 0x2000
 801e370:	9219      	str	r2, [sp, #100]	@ 0x64
 801e372:	2204      	movs	r2, #4
 801e374:	9116      	str	r1, [sp, #88]	@ 0x58
 801e376:	9205      	str	r2, [sp, #20]
 801e378:	2102      	movs	r1, #2
 801e37a:	2203      	movs	r2, #3
 801e37c:	e9cd 5417 	strd	r5, r4, [sp, #92]	@ 0x5c
 801e380:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e382:	2c00      	cmp	r4, #0
 801e384:	d04f      	beq.n	801e426 <nema_set_blend+0x476>
 801e386:	9c00      	ldr	r4, [sp, #0]
 801e388:	f1b4 3fff 	cmp.w	r4, #4294967295
 801e38c:	d04b      	beq.n	801e426 <nema_set_blend+0x476>
 801e38e:	f241 050b 	movw	r5, #4107	@ 0x100b
 801e392:	2300      	movs	r3, #0
 801e394:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 801e398:	a826      	add	r0, sp, #152	@ 0x98
 801e39a:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 801e39e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801e3a0:	f044 5480 	orr.w	r4, r4, #268435456	@ 0x10000000
 801e3a4:	ea45 11c1 	orr.w	r1, r5, r1, lsl #7
 801e3a8:	f1b9 0f01 	cmp.w	r9, #1
 801e3ac:	f840 1c40 	str.w	r1, [r0, #-64]
 801e3b0:	f444 4420 	orr.w	r4, r4, #40960	@ 0xa000
 801e3b4:	4611      	mov	r1, r2
 801e3b6:	f840 3c3c 	str.w	r3, [r0, #-60]
 801e3ba:	9a05      	ldr	r2, [sp, #20]
 801e3bc:	f63f aef0 	bhi.w	801e1a0 <nema_set_blend+0x1f0>
 801e3c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e3c2:	2b00      	cmp	r3, #0
 801e3c4:	f47f aeec 	bne.w	801e1a0 <nema_set_blend+0x1f0>
 801e3c8:	9b00      	ldr	r3, [sp, #0]
 801e3ca:	3301      	adds	r3, #1
 801e3cc:	f47f aee8 	bne.w	801e1a0 <nema_set_blend+0x1f0>
 801e3d0:	9b02      	ldr	r3, [sp, #8]
 801e3d2:	4553      	cmp	r3, sl
 801e3d4:	f47f aee4 	bne.w	801e1a0 <nema_set_blend+0x1f0>
 801e3d8:	f1b9 0f00 	cmp.w	r9, #0
 801e3dc:	bf15      	itete	ne
 801e3de:	f44f 6600 	movne.w	r6, #2048	@ 0x800
 801e3e2:	f44f 5600 	moveq.w	r6, #8192	@ 0x2000
 801e3e6:	f44f 1500 	movne.w	r5, #2097152	@ 0x200000
 801e3ea:	f44f 0500 	moveq.w	r5, #8388608	@ 0x800000
 801e3ee:	9f01      	ldr	r7, [sp, #4]
 801e3f0:	f8df c1e4 	ldr.w	ip, [pc, #484]	@ 801e5d8 <nema_set_blend+0x628>
 801e3f4:	4879      	ldr	r0, [pc, #484]	@ (801e5dc <nema_set_blend+0x62c>)
 801e3f6:	f85c 3027 	ldr.w	r3, [ip, r7, lsl #2]
 801e3fa:	f850 0027 	ldr.w	r0, [r0, r7, lsl #2]
 801e3fe:	015b      	lsls	r3, r3, #5
 801e400:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 801e404:	f043 430a 	orr.w	r3, r3, #2315255808	@ 0x8a000000
 801e408:	f043 0306 	orr.w	r3, r3, #6
 801e40c:	4333      	orrs	r3, r6
 801e40e:	432b      	orrs	r3, r5
 801e410:	4877      	ldr	r0, [pc, #476]	@ (801e5f0 <nema_set_blend+0x640>)
 801e412:	9d02      	ldr	r5, [sp, #8]
 801e414:	ae26      	add	r6, sp, #152	@ 0x98
 801e416:	ea40 10c5 	orr.w	r0, r0, r5, lsl #7
 801e41a:	eb06 01c1 	add.w	r1, r6, r1, lsl #3
 801e41e:	4615      	mov	r5, r2
 801e420:	e941 0310 	strd	r0, r3, [r1, #-64]	@ 0x40
 801e424:	e76e      	b.n	801e304 <nema_set_blend+0x354>
 801e426:	f043 5480 	orr.w	r4, r3, #268435456	@ 0x10000000
 801e42a:	e6b5      	b.n	801e198 <nema_set_blend+0x1e8>
 801e42c:	f04f 3020 	mov.w	r0, #538976288	@ 0x20202020
 801e430:	f7f3 ff78 	bl	8012324 <nema_set_raster_color>
 801e434:	2000      	movs	r0, #0
 801e436:	f7f2 fc97 	bl	8010d68 <nema_enable_gradient>
 801e43a:	f04f 0800 	mov.w	r8, #0
 801e43e:	f04f 0901 	mov.w	r9, #1
 801e442:	23ff      	movs	r3, #255	@ 0xff
 801e444:	f240 1401 	movw	r4, #257	@ 0x101
 801e448:	f04f 3aff 	mov.w	sl, #4294967295
 801e44c:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801e450:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801e454:	e9cd 880c 	strd	r8, r8, [sp, #48]	@ 0x30
 801e458:	4641      	mov	r1, r8
 801e45a:	f8cd 9004 	str.w	r9, [sp, #4]
 801e45e:	461a      	mov	r2, r3
 801e460:	46a3      	mov	fp, r4
 801e462:	f8cd a000 	str.w	sl, [sp]
 801e466:	e5c9      	b.n	801dffc <nema_set_blend+0x4c>
 801e468:	2f0e      	cmp	r7, #14
 801e46a:	f47f aead 	bne.w	801e1c8 <nema_set_blend+0x218>
 801e46e:	9b03      	ldr	r3, [sp, #12]
 801e470:	2b00      	cmp	r3, #0
 801e472:	f47f aea9 	bne.w	801e1c8 <nema_set_blend+0x218>
 801e476:	9b06      	ldr	r3, [sp, #24]
 801e478:	2b00      	cmp	r3, #0
 801e47a:	f47f aea5 	bne.w	801e1c8 <nema_set_blend+0x218>
 801e47e:	4615      	mov	r5, r2
 801e480:	460a      	mov	r2, r1
 801e482:	f1b9 0f00 	cmp.w	r9, #0
 801e486:	f43f aeb0 	beq.w	801e1ea <nema_set_blend+0x23a>
 801e48a:	f04f 0e00 	mov.w	lr, #0
 801e48e:	4b59      	ldr	r3, [pc, #356]	@ (801e5f4 <nema_set_blend+0x644>)
 801e490:	9308      	str	r3, [sp, #32]
 801e492:	9b01      	ldr	r3, [sp, #4]
 801e494:	2b00      	cmp	r3, #0
 801e496:	f000 8123 	beq.w	801e6e0 <nema_set_blend+0x730>
 801e49a:	2b01      	cmp	r3, #1
 801e49c:	f04f 0600 	mov.w	r6, #0
 801e4a0:	f000 8137 	beq.w	801e712 <nema_set_blend+0x762>
 801e4a4:	461f      	mov	r7, r3
 801e4a6:	e714      	b.n	801e2d2 <nema_set_blend+0x322>
 801e4a8:	e9dd 6c11 	ldrd	r6, ip, [sp, #68]	@ 0x44
 801e4ac:	e9dd 7413 	ldrd	r7, r4, [sp, #76]	@ 0x4c
 801e4b0:	f04f 081d 	mov.w	r8, #29
 801e4b4:	e64a      	b.n	801e14c <nema_set_blend+0x19c>
 801e4b6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e4b8:	2a00      	cmp	r2, #0
 801e4ba:	d046      	beq.n	801e54a <nema_set_blend+0x59a>
 801e4bc:	f44f 2440 	mov.w	r4, #786432	@ 0xc0000
 801e4c0:	494d      	ldr	r1, [pc, #308]	@ (801e5f8 <nema_set_blend+0x648>)
 801e4c2:	e752      	b.n	801e36a <nema_set_blend+0x3ba>
 801e4c4:	9b02      	ldr	r3, [sp, #8]
 801e4c6:	2b00      	cmp	r3, #0
 801e4c8:	f47f aea9 	bne.w	801e21e <nema_set_blend+0x26e>
 801e4cc:	9b00      	ldr	r3, [sp, #0]
 801e4ce:	3301      	adds	r3, #1
 801e4d0:	f000 8114 	beq.w	801e6fc <nema_set_blend+0x74c>
 801e4d4:	9802      	ldr	r0, [sp, #8]
 801e4d6:	f7f3 fdad 	bl	8012034 <nema_matmul_bypass>
 801e4da:	4b42      	ldr	r3, [pc, #264]	@ (801e5e4 <nema_set_blend+0x634>)
 801e4dc:	4947      	ldr	r1, [pc, #284]	@ (801e5fc <nema_set_blend+0x64c>)
 801e4de:	9800      	ldr	r0, [sp, #0]
 801e4e0:	681a      	ldr	r2, [r3, #0]
 801e4e2:	4b47      	ldr	r3, [pc, #284]	@ (801e600 <nema_set_blend+0x650>)
 801e4e4:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 801e4e8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e4ec:	4318      	orrs	r0, r3
 801e4ee:	f7f3 feb5 	bl	801225c <nema_set_frag_ptr>
 801e4f2:	b027      	add	sp, #156	@ 0x9c
 801e4f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e4f8:	2301      	movs	r3, #1
 801e4fa:	930a      	str	r3, [sp, #40]	@ 0x28
 801e4fc:	9304      	str	r3, [sp, #16]
 801e4fe:	469b      	mov	fp, r3
 801e500:	2303      	movs	r3, #3
 801e502:	f04f 0e00 	mov.w	lr, #0
 801e506:	9303      	str	r3, [sp, #12]
 801e508:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
 801e50c:	f503 2340 	add.w	r3, r3, #786432	@ 0xc0000
 801e510:	9308      	str	r3, [sp, #32]
 801e512:	4b3c      	ldr	r3, [pc, #240]	@ (801e604 <nema_set_blend+0x654>)
 801e514:	f8cd e018 	str.w	lr, [sp, #24]
 801e518:	9312      	str	r3, [sp, #72]	@ 0x48
 801e51a:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e51e:	9311      	str	r3, [sp, #68]	@ 0x44
 801e520:	4b39      	ldr	r3, [pc, #228]	@ (801e608 <nema_set_blend+0x658>)
 801e522:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 801e526:	9314      	str	r3, [sp, #80]	@ 0x50
 801e528:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e52c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e52e:	f5a3 23c8 	sub.w	r3, r3, #409600	@ 0x64000
 801e532:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 801e536:	4835      	ldr	r0, [pc, #212]	@ (801e60c <nema_set_blend+0x65c>)
 801e538:	4935      	ldr	r1, [pc, #212]	@ (801e610 <nema_set_blend+0x660>)
 801e53a:	4a36      	ldr	r2, [pc, #216]	@ (801e614 <nema_set_blend+0x664>)
 801e53c:	461d      	mov	r5, r3
 801e53e:	f8df c0ec 	ldr.w	ip, [pc, #236]	@ 801e62c <nema_set_blend+0x67c>
 801e542:	4e35      	ldr	r6, [pc, #212]	@ (801e618 <nema_set_blend+0x668>)
 801e544:	4c35      	ldr	r4, [pc, #212]	@ (801e61c <nema_set_blend+0x66c>)
 801e546:	4f36      	ldr	r7, [pc, #216]	@ (801e620 <nema_set_blend+0x670>)
 801e548:	e5e7      	b.n	801e11a <nema_set_blend+0x16a>
 801e54a:	4611      	mov	r1, r2
 801e54c:	2202      	movs	r2, #2
 801e54e:	9205      	str	r2, [sp, #20]
 801e550:	2201      	movs	r2, #1
 801e552:	e715      	b.n	801e380 <nema_set_blend+0x3d0>
 801e554:	9b01      	ldr	r3, [sp, #4]
 801e556:	2b01      	cmp	r3, #1
 801e558:	f47f ae32 	bne.w	801e1c0 <nema_set_blend+0x210>
 801e55c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801e55e:	2b00      	cmp	r3, #0
 801e560:	f47f ae2e 	bne.w	801e1c0 <nema_set_blend+0x210>
 801e564:	a826      	add	r0, sp, #152	@ 0x98
 801e566:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801e56a:	4b21      	ldr	r3, [pc, #132]	@ (801e5f0 <nema_set_blend+0x640>)
 801e56c:	9802      	ldr	r0, [sp, #8]
 801e56e:	f841 6c3c 	str.w	r6, [r1, #-60]
 801e572:	ea43 13c0 	orr.w	r3, r3, r0, lsl #7
 801e576:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
 801e57a:	4615      	mov	r5, r2
 801e57c:	f841 3c40 	str.w	r3, [r1, #-64]
 801e580:	e6c0      	b.n	801e304 <nema_set_blend+0x354>
 801e582:	f44f 0680 	mov.w	r6, #4194304	@ 0x400000
 801e586:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 801e58a:	462a      	mov	r2, r5
 801e58c:	3501      	adds	r5, #1
 801e58e:	f850 0029 	ldr.w	r0, [r0, r9, lsl #2]
 801e592:	f851 1029 	ldr.w	r1, [r1, r9, lsl #2]
 801e596:	0140      	lsls	r0, r0, #5
 801e598:	4b22      	ldr	r3, [pc, #136]	@ (801e624 <nema_set_blend+0x674>)
 801e59a:	ea40 3081 	orr.w	r0, r0, r1, lsl #14
 801e59e:	4303      	orrs	r3, r0
 801e5a0:	4921      	ldr	r1, [pc, #132]	@ (801e628 <nema_set_blend+0x678>)
 801e5a2:	9802      	ldr	r0, [sp, #8]
 801e5a4:	433b      	orrs	r3, r7
 801e5a6:	ea41 11c0 	orr.w	r1, r1, r0, lsl #7
 801e5aa:	a826      	add	r0, sp, #152	@ 0x98
 801e5ac:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 801e5b0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e5b2:	4333      	orrs	r3, r6
 801e5b4:	4301      	orrs	r1, r0
 801e5b6:	e942 1310 	strd	r1, r3, [r2, #-64]	@ 0x40
 801e5ba:	e6a3      	b.n	801e304 <nema_set_blend+0x354>
 801e5bc:	9b04      	ldr	r3, [sp, #16]
 801e5be:	2b00      	cmp	r3, #0
 801e5c0:	f000 8082 	beq.w	801e6c8 <nema_set_blend+0x718>
 801e5c4:	9a05      	ldr	r2, [sp, #20]
 801e5c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e5c8:	9203      	str	r2, [sp, #12]
 801e5ca:	920a      	str	r2, [sp, #40]	@ 0x28
 801e5cc:	4a09      	ldr	r2, [pc, #36]	@ (801e5f4 <nema_set_blend+0x644>)
 801e5ce:	f443 4330 	orr.w	r3, r3, #45056	@ 0xb000
 801e5d2:	9208      	str	r2, [sp, #32]
 801e5d4:	e6c2      	b.n	801e35c <nema_set_blend+0x3ac>
 801e5d6:	bf00      	nop
 801e5d8:	08035d20 	.word	0x08035d20
 801e5dc:	08035d50 	.word	0x08035d50
 801e5e0:	0a002007 	.word	0x0a002007
 801e5e4:	200001e8 	.word	0x200001e8
 801e5e8:	100c118b 	.word	0x100c118b
 801e5ec:	0081a042 	.word	0x0081a042
 801e5f0:	080c0002 	.word	0x080c0002
 801e5f4:	080c0000 	.word	0x080c0000
 801e5f8:	100c1183 	.word	0x100c1183
 801e5fc:	08035d10 	.word	0x08035d10
 801e600:	141f801f 	.word	0x141f801f
 801e604:	000761c7 	.word	0x000761c7
 801e608:	00076187 	.word	0x00076187
 801e60c:	000121c7 	.word	0x000121c7
 801e610:	800121c7 	.word	0x800121c7
 801e614:	00012187 	.word	0x00012187
 801e618:	800461c7 	.word	0x800461c7
 801e61c:	00046187 	.word	0x00046187
 801e620:	80046187 	.word	0x80046187
 801e624:	80080206 	.word	0x80080206
 801e628:	004e0002 	.word	0x004e0002
 801e62c:	000461c7 	.word	0x000461c7
 801e630:	2301      	movs	r3, #1
 801e632:	2202      	movs	r2, #2
 801e634:	9304      	str	r3, [sp, #16]
 801e636:	4619      	mov	r1, r3
 801e638:	4c38      	ldr	r4, [pc, #224]	@ (801e71c <nema_set_blend+0x76c>)
 801e63a:	e5ad      	b.n	801e198 <nema_set_blend+0x1e8>
 801e63c:	f1b9 0f00 	cmp.w	r9, #0
 801e640:	d055      	beq.n	801e6ee <nema_set_blend+0x73e>
 801e642:	2301      	movs	r3, #1
 801e644:	2103      	movs	r1, #3
 801e646:	930a      	str	r3, [sp, #40]	@ 0x28
 801e648:	e9cd 1303 	strd	r1, r3, [sp, #12]
 801e64c:	4b34      	ldr	r3, [pc, #208]	@ (801e720 <nema_set_blend+0x770>)
 801e64e:	9308      	str	r3, [sp, #32]
 801e650:	e518      	b.n	801e084 <nema_set_blend+0xd4>
 801e652:	2c00      	cmp	r4, #0
 801e654:	bfbd      	ittte	lt
 801e656:	f02b 4b00 	biclt.w	fp, fp, #2147483648	@ 0x80000000
 801e65a:	f04f 4202 	movlt.w	r2, #2181038080	@ 0x82000000
 801e65e:	f04f 4300 	movlt.w	r3, #2147483648	@ 0x80000000
 801e662:	f04f 7200 	movge.w	r2, #33554432	@ 0x2000000
 801e666:	b111      	cbz	r1, 801e66e <nema_set_blend+0x6be>
 801e668:	4613      	mov	r3, r2
 801e66a:	f02b 7b00 	bic.w	fp, fp, #33554432	@ 0x2000000
 801e66e:	9a01      	ldr	r2, [sp, #4]
 801e670:	ea42 2009 	orr.w	r0, r2, r9, lsl #8
 801e674:	4318      	orrs	r0, r3
 801e676:	f7f3 fdf7 	bl	8012268 <nema_set_rop_blend_mode>
 801e67a:	ea4f 505b 	mov.w	r0, fp, lsr #21
 801e67e:	4b29      	ldr	r3, [pc, #164]	@ (801e724 <nema_set_blend+0x774>)
 801e680:	0540      	lsls	r0, r0, #21
 801e682:	f040 0201 	orr.w	r2, r0, #1
 801e686:	789b      	ldrb	r3, [r3, #2]
 801e688:	2a01      	cmp	r2, #1
 801e68a:	9201      	str	r2, [sp, #4]
 801e68c:	9305      	str	r3, [sp, #20]
 801e68e:	f43f adbe 	beq.w	801e20e <nema_set_blend+0x25e>
 801e692:	f00b 4380 	and.w	r3, fp, #1073741824	@ 0x40000000
 801e696:	9315      	str	r3, [sp, #84]	@ 0x54
 801e698:	f3cb 7380 	ubfx	r3, fp, #30, #1
 801e69c:	9306      	str	r3, [sp, #24]
 801e69e:	f00b 5300 	and.w	r3, fp, #536870912	@ 0x20000000
 801e6a2:	9309      	str	r3, [sp, #36]	@ 0x24
 801e6a4:	2301      	movs	r3, #1
 801e6a6:	f04f 0900 	mov.w	r9, #0
 801e6aa:	f00b 5280 	and.w	r2, fp, #268435456	@ 0x10000000
 801e6ae:	f8dd b004 	ldr.w	fp, [sp, #4]
 801e6b2:	9301      	str	r3, [sp, #4]
 801e6b4:	4b1c      	ldr	r3, [pc, #112]	@ (801e728 <nema_set_blend+0x778>)
 801e6b6:	46c8      	mov	r8, r9
 801e6b8:	f8cd 901c 	str.w	r9, [sp, #28]
 801e6bc:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e6c0:	f8cd 9010 	str.w	r9, [sp, #16]
 801e6c4:	9308      	str	r3, [sp, #32]
 801e6c6:	e4dd      	b.n	801e084 <nema_set_blend+0xd4>
 801e6c8:	2201      	movs	r2, #1
 801e6ca:	9b05      	ldr	r3, [sp, #20]
 801e6cc:	9204      	str	r2, [sp, #16]
 801e6ce:	930a      	str	r3, [sp, #40]	@ 0x28
 801e6d0:	e644      	b.n	801e35c <nema_set_blend+0x3ac>
 801e6d2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e6d4:	2b00      	cmp	r3, #0
 801e6d6:	f43f aedc 	beq.w	801e492 <nema_set_blend+0x4e2>
 801e6da:	9e06      	ldr	r6, [sp, #24]
 801e6dc:	9f01      	ldr	r7, [sp, #4]
 801e6de:	e5f8      	b.n	801e2d2 <nema_set_blend+0x322>
 801e6e0:	f44f 0600 	mov.w	r6, #8388608	@ 0x800000
 801e6e4:	f44f 5700 	mov.w	r7, #8192	@ 0x2000
 801e6e8:	4910      	ldr	r1, [pc, #64]	@ (801e72c <nema_set_blend+0x77c>)
 801e6ea:	4811      	ldr	r0, [pc, #68]	@ (801e730 <nema_set_blend+0x780>)
 801e6ec:	e74f      	b.n	801e58e <nema_set_blend+0x5de>
 801e6ee:	4b0e      	ldr	r3, [pc, #56]	@ (801e728 <nema_set_blend+0x778>)
 801e6f0:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e6f4:	9308      	str	r3, [sp, #32]
 801e6f6:	e9cd 9903 	strd	r9, r9, [sp, #12]
 801e6fa:	e4c3      	b.n	801e084 <nema_set_blend+0xd4>
 801e6fc:	2001      	movs	r0, #1
 801e6fe:	f7f3 fc99 	bl	8012034 <nema_matmul_bypass>
 801e702:	4a0c      	ldr	r2, [pc, #48]	@ (801e734 <nema_set_blend+0x784>)
 801e704:	4b0c      	ldr	r3, [pc, #48]	@ (801e738 <nema_set_blend+0x788>)
 801e706:	6810      	ldr	r0, [r2, #0]
 801e708:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 801e70c:	f7f3 fda6 	bl	801225c <nema_set_frag_ptr>
 801e710:	e6ef      	b.n	801e4f2 <nema_set_blend+0x542>
 801e712:	4637      	mov	r7, r6
 801e714:	4905      	ldr	r1, [pc, #20]	@ (801e72c <nema_set_blend+0x77c>)
 801e716:	4806      	ldr	r0, [pc, #24]	@ (801e730 <nema_set_blend+0x780>)
 801e718:	e739      	b.n	801e58e <nema_set_blend+0x5de>
 801e71a:	bf00      	nop
 801e71c:	1000fc00 	.word	0x1000fc00
 801e720:	080c0003 	.word	0x080c0003
 801e724:	20000064 	.word	0x20000064
 801e728:	080c0000 	.word	0x080c0000
 801e72c:	08035d50 	.word	0x08035d50
 801e730:	08035d20 	.word	0x08035d20
 801e734:	200001e8 	.word	0x200001e8
 801e738:	141f001f 	.word	0x141f001f

0801e73c <nema_set_const_color>:
 801e73c:	b510      	push	{r4, lr}
 801e73e:	4604      	mov	r4, r0
 801e740:	2001      	movs	r0, #1
 801e742:	4621      	mov	r1, r4
 801e744:	f7f2 fa90 	bl	8010c68 <nema_set_const_reg>
 801e748:	4b04      	ldr	r3, [pc, #16]	@ (801e75c <nema_set_const_color+0x20>)
 801e74a:	781b      	ldrb	r3, [r3, #0]
 801e74c:	b903      	cbnz	r3, 801e750 <nema_set_const_color+0x14>
 801e74e:	bd10      	pop	{r4, pc}
 801e750:	4620      	mov	r0, r4
 801e752:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e756:	f7f3 bd8d 	b.w	8012274 <nema_set_rop_const_color>
 801e75a:	bf00      	nop
 801e75c:	20083361 	.word	0x20083361

0801e760 <calculate_aabb_per_shape>:
 801e760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e764:	ed2d 8b10 	vpush	{d8-d15}
 801e768:	2300      	movs	r3, #0
 801e76a:	eddf 7af0 	vldr	s15, [pc, #960]	@ 801eb2c <calculate_aabb_per_shape+0x3cc>
 801e76e:	ed9f 7af0 	vldr	s14, [pc, #960]	@ 801eb30 <calculate_aabb_per_shape+0x3d0>
 801e772:	f8d0 8000 	ldr.w	r8, [r0]
 801e776:	b091      	sub	sp, #68	@ 0x44
 801e778:	4604      	mov	r4, r0
 801e77a:	edc0 7a04 	vstr	s15, [r0, #16]
 801e77e:	edc0 7a05 	vstr	s15, [r0, #20]
 801e782:	ed80 7a06 	vstr	s14, [r0, #24]
 801e786:	ed80 7a07 	vstr	s14, [r0, #28]
 801e78a:	62c3      	str	r3, [r0, #44]	@ 0x2c
 801e78c:	6283      	str	r3, [r0, #40]	@ 0x28
 801e78e:	6343      	str	r3, [r0, #52]	@ 0x34
 801e790:	6303      	str	r3, [r0, #48]	@ 0x30
 801e792:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801e794:	6383      	str	r3, [r0, #56]	@ 0x38
 801e796:	6443      	str	r3, [r0, #68]	@ 0x44
 801e798:	6403      	str	r3, [r0, #64]	@ 0x40
 801e79a:	6483      	str	r3, [r0, #72]	@ 0x48
 801e79c:	64c3      	str	r3, [r0, #76]	@ 0x4c
 801e79e:	6503      	str	r3, [r0, #80]	@ 0x50
 801e7a0:	6543      	str	r3, [r0, #84]	@ 0x54
 801e7a2:	6583      	str	r3, [r0, #88]	@ 0x58
 801e7a4:	65c3      	str	r3, [r0, #92]	@ 0x5c
 801e7a6:	f1b8 0f00 	cmp.w	r8, #0
 801e7aa:	f000 86c7 	beq.w	801f53c <calculate_aabb_per_shape+0xddc>
 801e7ae:	6882      	ldr	r2, [r0, #8]
 801e7b0:	7811      	ldrb	r1, [r2, #0]
 801e7b2:	f021 0190 	bic.w	r1, r1, #144	@ 0x90
 801e7b6:	2901      	cmp	r1, #1
 801e7b8:	d003      	beq.n	801e7c2 <calculate_aabb_per_shape+0x62>
 801e7ba:	6103      	str	r3, [r0, #16]
 801e7bc:	6143      	str	r3, [r0, #20]
 801e7be:	6183      	str	r3, [r0, #24]
 801e7c0:	61c3      	str	r3, [r0, #28]
 801e7c2:	ed9f dadc 	vldr	s26, [pc, #880]	@ 801eb34 <calculate_aabb_per_shape+0x3d4>
 801e7c6:	f04f 0c00 	mov.w	ip, #0
 801e7ca:	eeb0 6a4d 	vmov.f32	s12, s26
 801e7ce:	4667      	mov	r7, ip
 801e7d0:	46e1      	mov	r9, ip
 801e7d2:	4666      	mov	r6, ip
 801e7d4:	eef0 5a4d 	vmov.f32	s11, s26
 801e7d8:	eef0 4a4d 	vmov.f32	s9, s26
 801e7dc:	eef0 6a4d 	vmov.f32	s13, s26
 801e7e0:	eeb0 ea4d 	vmov.f32	s28, s26
 801e7e4:	eeb0 9a4d 	vmov.f32	s18, s26
 801e7e8:	eef0 8a4d 	vmov.f32	s17, s26
 801e7ec:	eeb0 fa4d 	vmov.f32	s30, s26
 801e7f0:	eddf ead1 	vldr	s29, [pc, #836]	@ 801eb38 <calculate_aabb_per_shape+0x3d8>
 801e7f4:	eddf dad1 	vldr	s27, [pc, #836]	@ 801eb3c <calculate_aabb_per_shape+0x3dc>
 801e7f8:	eddf fad1 	vldr	s31, [pc, #836]	@ 801eb40 <calculate_aabb_per_shape+0x3e0>
 801e7fc:	eef0 ca4d 	vmov.f32	s25, s26
 801e800:	eeb0 5a4d 	vmov.f32	s10, s26
 801e804:	4640      	mov	r0, r8
 801e806:	f8cd c000 	str.w	ip, [sp]
 801e80a:	5d95      	ldrb	r5, [r2, r6]
 801e80c:	4432      	add	r2, r6
 801e80e:	f005 036f 	and.w	r3, r5, #111	@ 0x6f
 801e812:	2b01      	cmp	r3, #1
 801e814:	f005 0810 	and.w	r8, r5, #16
 801e818:	f000 853e 	beq.w	801f298 <calculate_aabb_per_shape+0xb38>
 801e81c:	f015 0f7f 	tst.w	r5, #127	@ 0x7f
 801e820:	f000 83bf 	beq.w	801efa2 <calculate_aabb_per_shape+0x842>
 801e824:	68e1      	ldr	r1, [r4, #12]
 801e826:	2f00      	cmp	r7, #0
 801e828:	eb01 0e87 	add.w	lr, r1, r7, lsl #2
 801e82c:	bf08      	it	eq
 801e82e:	f04f 0901 	moveq.w	r9, #1
 801e832:	2b06      	cmp	r3, #6
 801e834:	edde 7a00 	vldr	s15, [lr]
 801e838:	f107 0b01 	add.w	fp, r7, #1
 801e83c:	f000 8782 	beq.w	801f744 <calculate_aabb_per_shape+0xfe4>
 801e840:	2b05      	cmp	r3, #5
 801e842:	f001 8034 	beq.w	801f8ae <calculate_aabb_per_shape+0x114e>
 801e846:	2b07      	cmp	r3, #7
 801e848:	f00c 0a6f 	and.w	sl, ip, #111	@ 0x6f
 801e84c:	f000 86ae 	beq.w	801f5ac <calculate_aabb_per_shape+0xe4c>
 801e850:	2b08      	cmp	r3, #8
 801e852:	f001 806c 	beq.w	801f92e <calculate_aabb_per_shape+0x11ce>
 801e856:	f005 0a0f 	and.w	sl, r5, #15
 801e85a:	f1ba 0f09 	cmp.w	sl, #9
 801e85e:	f001 8047 	beq.w	801f8f0 <calculate_aabb_per_shape+0x1190>
 801e862:	46ba      	mov	sl, r7
 801e864:	465f      	mov	r7, fp
 801e866:	2b04      	cmp	r3, #4
 801e868:	f041 8501 	bne.w	802026e <calculate_aabb_per_shape+0x1b0e>
 801e86c:	f1b8 0f00 	cmp.w	r8, #0
 801e870:	f001 8059 	beq.w	801f926 <calculate_aabb_per_shape+0x11c6>
 801e874:	ee77 7a89 	vadd.f32	s15, s15, s18
 801e878:	eeb0 7a68 	vmov.f32	s14, s17
 801e87c:	462a      	mov	r2, r5
 801e87e:	2b06      	cmp	r3, #6
 801e880:	f000 839b 	beq.w	801efba <calculate_aabb_per_shape+0x85a>
 801e884:	2b08      	cmp	r3, #8
 801e886:	f000 8398 	beq.w	801efba <calculate_aabb_per_shape+0x85a>
 801e88a:	2b01      	cmp	r3, #1
 801e88c:	f000 847f 	beq.w	801f18e <calculate_aabb_per_shape+0xa2e>
 801e890:	2b02      	cmp	r3, #2
 801e892:	f000 847c 	beq.w	801f18e <calculate_aabb_per_shape+0xa2e>
 801e896:	2b04      	cmp	r3, #4
 801e898:	f000 8479 	beq.w	801f18e <calculate_aabb_per_shape+0xa2e>
 801e89c:	2b03      	cmp	r3, #3
 801e89e:	f000 8476 	beq.w	801f18e <calculate_aabb_per_shape+0xa2e>
 801e8a2:	f002 036d 	and.w	r3, r2, #109	@ 0x6d
 801e8a6:	2b05      	cmp	r3, #5
 801e8a8:	f000 8690 	beq.w	801f5cc <calculate_aabb_per_shape+0xe6c>
 801e8ac:	f002 020f 	and.w	r2, r2, #15
 801e8b0:	2a09      	cmp	r2, #9
 801e8b2:	f040 8459 	bne.w	801f168 <calculate_aabb_per_shape+0xa08>
 801e8b6:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801e8ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e8be:	f100 845e 	bmi.w	801f17e <calculate_aabb_per_shape+0xa1e>
 801e8c2:	ed9f 3aa0 	vldr	s6, [pc, #640]	@ 801eb44 <calculate_aabb_per_shape+0x3e4>
 801e8c6:	eeb4 5ac3 	vcmpe.f32	s10, s6
 801e8ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e8ce:	f240 845e 	bls.w	801f18e <calculate_aabb_per_shape+0xa2e>
 801e8d2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801e8d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e8da:	f101 8078 	bmi.w	801f9ce <calculate_aabb_per_shape+0x126e>
 801e8de:	ed9f 3a99 	vldr	s6, [pc, #612]	@ 801eb44 <calculate_aabb_per_shape+0x3e4>
 801e8e2:	eef4 6ac3 	vcmpe.f32	s13, s6
 801e8e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e8ea:	f240 8450 	bls.w	801f18e <calculate_aabb_per_shape+0xa2e>
 801e8ee:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801e8f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e8f6:	f101 80bb 	bmi.w	801fa70 <calculate_aabb_per_shape+0x1310>
 801e8fa:	eeb0 8a45 	vmov.f32	s16, s10
 801e8fe:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801e902:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e906:	f101 8071 	bmi.w	801f9ec <calculate_aabb_per_shape+0x128c>
 801e90a:	eeb0 9a66 	vmov.f32	s18, s13
 801e90e:	edcd 7a03 	vstr	s15, [sp, #12]
 801e912:	eddf 7a8d 	vldr	s15, [pc, #564]	@ 801eb48 <calculate_aabb_per_shape+0x3e8>
 801e916:	ee24 aaa7 	vmul.f32	s20, s9, s15
 801e91a:	eeb0 0a4a 	vmov.f32	s0, s20
 801e91e:	9009      	str	r0, [sp, #36]	@ 0x24
 801e920:	edcd 6a08 	vstr	s13, [sp, #32]
 801e924:	ed8d 6a04 	vstr	s12, [sp, #16]
 801e928:	edcd 5a07 	vstr	s11, [sp, #28]
 801e92c:	ed8d 5a06 	vstr	s10, [sp, #24]
 801e930:	ed8d 7a02 	vstr	s14, [sp, #8]
 801e934:	edcd 4a05 	vstr	s9, [sp, #20]
 801e938:	f012 fd34 	bl	80313a4 <cosf>
 801e93c:	eef0 8a40 	vmov.f32	s17, s0
 801e940:	ed8d 0a01 	vstr	s0, [sp, #4]
 801e944:	eeb0 0a4a 	vmov.f32	s0, s20
 801e948:	f012 fd78 	bl	803143c <sinf>
 801e94c:	eef0 6a68 	vmov.f32	s13, s17
 801e950:	eeb0 ca40 	vmov.f32	s24, s0
 801e954:	ed9d 6a04 	vldr	s12, [sp, #16]
 801e958:	ed9d 7a02 	vldr	s14, [sp, #8]
 801e95c:	eddd 7a03 	vldr	s15, [sp, #12]
 801e960:	ee6d 9a28 	vmul.f32	s19, s26, s17
 801e964:	ee26 3aa7 	vmul.f32	s6, s13, s15
 801e968:	ee60 1a06 	vmul.f32	s3, s0, s12
 801e96c:	ee68 8a87 	vmul.f32	s17, s17, s14
 801e970:	ee26 1a86 	vmul.f32	s2, s13, s12
 801e974:	ee27 2a4c 	vnmul.f32	s4, s14, s24
 801e978:	ee20 0a27 	vmul.f32	s0, s0, s15
 801e97c:	ee6d 0a4c 	vnmul.f32	s1, s26, s24
 801e980:	ee32 5a03 	vadd.f32	s10, s4, s6
 801e984:	ee78 6a80 	vadd.f32	s13, s17, s0
 801e988:	ee70 5a81 	vadd.f32	s11, s1, s2
 801e98c:	ee79 1aa1 	vadd.f32	s3, s19, s3
 801e990:	eec6 ba88 	vdiv.f32	s23, s13, s16
 801e994:	eec5 2a89 	vdiv.f32	s5, s11, s18
 801e998:	ee85 ba09 	vdiv.f32	s22, s10, s18
 801e99c:	eec1 3a88 	vdiv.f32	s7, s3, s16
 801e9a0:	ee32 4acb 	vsub.f32	s8, s5, s22
 801e9a4:	ee73 aaeb 	vsub.f32	s21, s7, s23
 801e9a8:	ee24 3a04 	vmul.f32	s6, s8, s8
 801e9ac:	ee2a 2aaa 	vmul.f32	s4, s21, s21
 801e9b0:	ee32 3a03 	vadd.f32	s6, s4, s6
 801e9b4:	eeb5 3a40 	vcmp.f32	s6, #0.0
 801e9b8:	eeb6 2a00 	vmov.f32	s4, #96	@ 0x3f000000  0.5
 801e9bc:	ee73 8aab 	vadd.f32	s17, s7, s23
 801e9c0:	ee72 9a8b 	vadd.f32	s19, s5, s22
 801e9c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e9c8:	edcd 6a03 	vstr	s13, [sp, #12]
 801e9cc:	edcd 5a02 	vstr	s11, [sp, #8]
 801e9d0:	ed8d 5a04 	vstr	s10, [sp, #16]
 801e9d4:	ee68 8a82 	vmul.f32	s17, s17, s4
 801e9d8:	ee69 9a82 	vmul.f32	s19, s19, s4
 801e9dc:	eddd 4a05 	vldr	s9, [sp, #20]
 801e9e0:	ed9d 5a06 	vldr	s10, [sp, #24]
 801e9e4:	eddd 5a07 	vldr	s11, [sp, #28]
 801e9e8:	eddd 6a08 	vldr	s13, [sp, #32]
 801e9ec:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801e9ee:	f000 83bb 	beq.w	801f168 <calculate_aabb_per_shape+0xa08>
 801e9f2:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 801e9f6:	eeb5 1a00 	vmov.f32	s2, #80	@ 0x3e800000  0.250
 801e9fa:	ee80 2a83 	vdiv.f32	s4, s1, s6
 801e9fe:	ee32 0a41 	vsub.f32	s0, s4, s2
 801ea02:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801ea06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ea0a:	f101 8159 	bmi.w	801fcc0 <calculate_aabb_per_shape+0x1560>
 801ea0e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ea12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ea16:	eef1 1ac0 	vsqrt.f32	s3, s0
 801ea1a:	f101 83f8 	bmi.w	802020e <calculate_aabb_per_shape+0x1aae>
 801ea1e:	ee21 2aaa 	vmul.f32	s4, s3, s21
 801ea22:	ee61 1a84 	vmul.f32	s3, s3, s8
 801ea26:	ee79 aac2 	vsub.f32	s21, s19, s4
 801ea2a:	ee31 4aa8 	vadd.f32	s8, s3, s17
 801ea2e:	ee32 0aea 	vsub.f32	s0, s5, s21
 801ea32:	ee73 0ac4 	vsub.f32	s1, s7, s8
 801ea36:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801ea3a:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801ea3e:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801ea42:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801ea46:	ed8d 5a08 	vstr	s10, [sp, #32]
 801ea4a:	edcd 7a07 	vstr	s15, [sp, #28]
 801ea4e:	ed8d 7a06 	vstr	s14, [sp, #24]
 801ea52:	ed8d 2a05 	vstr	s4, [sp, #20]
 801ea56:	edcd 1a04 	vstr	s3, [sp, #16]
 801ea5a:	ed8d 4a02 	vstr	s8, [sp, #8]
 801ea5e:	f012 fb8d 	bl	803117c <atan2f>
 801ea62:	ed9d 4a02 	vldr	s8, [sp, #8]
 801ea66:	ed8d 0a03 	vstr	s0, [sp, #12]
 801ea6a:	ee7b 0ac4 	vsub.f32	s1, s23, s8
 801ea6e:	ee3b 0a6a 	vsub.f32	s0, s22, s21
 801ea72:	f012 fb83 	bl	803117c <atan2f>
 801ea76:	eddf 7a35 	vldr	s15, [pc, #212]	@ 801eb4c <calculate_aabb_per_shape+0x3ec>
 801ea7a:	eddd 3a03 	vldr	s7, [sp, #12]
 801ea7e:	ee20 3a27 	vmul.f32	s6, s0, s15
 801ea82:	ee63 3aa7 	vmul.f32	s7, s7, s15
 801ea86:	ee33 3a63 	vsub.f32	s6, s6, s7
 801ea8a:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801ea8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ea92:	bf44      	itt	mi
 801ea94:	ed9f 1a2e 	vldrmi	s2, [pc, #184]	@ 801eb50 <calculate_aabb_per_shape+0x3f0>
 801ea98:	ee33 3a01 	vaddmi.f32	s6, s6, s2
 801ea9c:	ed9f 1a2d 	vldr	s2, [pc, #180]	@ 801eb54 <calculate_aabb_per_shape+0x3f4>
 801eaa0:	eeb4 3ac1 	vcmpe.f32	s6, s2
 801eaa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eaa8:	9b00      	ldr	r3, [sp, #0]
 801eaaa:	ed9d 4a02 	vldr	s8, [sp, #8]
 801eaae:	f003 0840 	and.w	r8, r3, #64	@ 0x40
 801eab2:	f3c3 1280 	ubfx	r2, r3, #6, #1
 801eab6:	eddd 1a04 	vldr	s3, [sp, #16]
 801eaba:	ed9d 2a05 	vldr	s4, [sp, #20]
 801eabe:	ed9d 7a06 	vldr	s14, [sp, #24]
 801eac2:	eddd 7a07 	vldr	s15, [sp, #28]
 801eac6:	ed9d 5a08 	vldr	s10, [sp, #32]
 801eaca:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801eace:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801ead2:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801ead6:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801eada:	f3c3 1340 	ubfx	r3, r3, #5, #1
 801eade:	f141 80e5 	bpl.w	801fcac <calculate_aabb_per_shape+0x154c>
 801eae2:	429a      	cmp	r2, r3
 801eae4:	f001 8346 	beq.w	8020174 <calculate_aabb_per_shape+0x1a14>
 801eae8:	ee24 4a08 	vmul.f32	s8, s8, s16
 801eaec:	ee6a aa89 	vmul.f32	s21, s21, s18
 801eaf0:	eddd 3a01 	vldr	s7, [sp, #4]
 801eaf4:	eef5 4a40 	vcmp.f32	s9, #0.0
 801eaf8:	ee63 9a84 	vmul.f32	s19, s7, s8
 801eafc:	ee2c 3a2a 	vmul.f32	s6, s24, s21
 801eb00:	ee2c 4a04 	vmul.f32	s8, s24, s8
 801eb04:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801eb08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb0c:	ee79 9ac3 	vsub.f32	s19, s19, s6
 801eb10:	ee74 8a2a 	vadd.f32	s17, s8, s21
 801eb14:	f000 87b0 	beq.w	801fa78 <calculate_aabb_per_shape+0x1318>
 801eb18:	ed9f 3a0e 	vldr	s6, [pc, #56]	@ 801eb54 <calculate_aabb_per_shape+0x3f4>
 801eb1c:	eef4 4a43 	vcmp.f32	s9, s6
 801eb20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb24:	f000 87a8 	beq.w	801fa78 <calculate_aabb_per_shape+0x1318>
 801eb28:	e01c      	b.n	801eb64 <calculate_aabb_per_shape+0x404>
 801eb2a:	bf00      	nop
 801eb2c:	477fff00 	.word	0x477fff00
 801eb30:	c77fff00 	.word	0xc77fff00
 801eb34:	00000000 	.word	0x00000000
 801eb38:	b3d6bf95 	.word	0xb3d6bf95
 801eb3c:	33d6bf95 	.word	0x33d6bf95
 801eb40:	3f7ffffe 	.word	0x3f7ffffe
 801eb44:	3727c5ac 	.word	0x3727c5ac
 801eb48:	3c8efa35 	.word	0x3c8efa35
 801eb4c:	42652ee1 	.word	0x42652ee1
 801eb50:	43b40000 	.word	0x43b40000
 801eb54:	43340000 	.word	0x43340000
 801eb58:	42b40000 	.word	0x42b40000
 801eb5c:	43870000 	.word	0x43870000
 801eb60:	40c90fdb 	.word	0x40c90fdb
 801eb64:	ed1f 3a04 	vldr	s6, [pc, #-16]	@ 801eb58 <calculate_aabb_per_shape+0x3f8>
 801eb68:	eef4 4a43 	vcmp.f32	s9, s6
 801eb6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb70:	d007      	beq.n	801eb82 <calculate_aabb_per_shape+0x422>
 801eb72:	ed1f 3a06 	vldr	s6, [pc, #-24]	@ 801eb5c <calculate_aabb_per_shape+0x3fc>
 801eb76:	eef4 4a43 	vcmp.f32	s9, s6
 801eb7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb7e:	f041 80d3 	bne.w	801fd28 <calculate_aabb_per_shape+0x15c8>
 801eb82:	ee29 aa09 	vmul.f32	s20, s18, s18
 801eb86:	ee3a aa0f 	vadd.f32	s20, s20, s30
 801eb8a:	eeb5 aa40 	vcmp.f32	s20, #0.0
 801eb8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb92:	ee79 bac9 	vsub.f32	s23, s19, s18
 801eb96:	eef1 aaca 	vsqrt.f32	s21, s20
 801eb9a:	eeb1 ba49 	vneg.f32	s22, s18
 801eb9e:	edcd 6a08 	vstr	s13, [sp, #32]
 801eba2:	edcd 4a07 	vstr	s9, [sp, #28]
 801eba6:	ed8d 6a06 	vstr	s12, [sp, #24]
 801ebaa:	edcd 5a05 	vstr	s11, [sp, #20]
 801ebae:	ed8d 5a04 	vstr	s10, [sp, #16]
 801ebb2:	edcd 7a03 	vstr	s15, [sp, #12]
 801ebb6:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ebba:	f101 866c 	bmi.w	8020896 <calculate_aabb_per_shape+0x2136>
 801ebbe:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 801ebc2:	f012 faaf 	bl	8031124 <acosf>
 801ebc6:	ed5f 0a1a 	vldr	s1, [pc, #-104]	@ 801eb60 <calculate_aabb_per_shape+0x400>
 801ebca:	ee30 0ac0 	vsub.f32	s0, s1, s0
 801ebce:	f012 fad7 	bl	8031180 <fmodf>
 801ebd2:	ee39 aa89 	vadd.f32	s20, s19, s18
 801ebd6:	ed8d 0a02 	vstr	s0, [sp, #8]
 801ebda:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ebde:	eddd 7a03 	vldr	s15, [sp, #12]
 801ebe2:	ed9d 5a04 	vldr	s10, [sp, #16]
 801ebe6:	eddd 5a05 	vldr	s11, [sp, #20]
 801ebea:	ed9d 6a06 	vldr	s12, [sp, #24]
 801ebee:	eddd 4a07 	vldr	s9, [sp, #28]
 801ebf2:	eddd 6a08 	vldr	s13, [sp, #32]
 801ebf6:	ee89 0a2a 	vdiv.f32	s0, s18, s21
 801ebfa:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 801ebfe:	edcd 4a08 	vstr	s9, [sp, #32]
 801ec02:	ed8d 6a07 	vstr	s12, [sp, #28]
 801ec06:	edcd 5a06 	vstr	s11, [sp, #24]
 801ec0a:	ed8d 5a05 	vstr	s10, [sp, #20]
 801ec0e:	edcd 7a03 	vstr	s15, [sp, #12]
 801ec12:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ec16:	ed1f ca2e 	vldr	s24, [pc, #-184]	@ 801eb60 <calculate_aabb_per_shape+0x400>
 801ec1a:	f012 fa83 	bl	8031124 <acosf>
 801ec1e:	eef0 0a4c 	vmov.f32	s1, s24
 801ec22:	ee3c 0a40 	vsub.f32	s0, s24, s0
 801ec26:	f012 faab 	bl	8031180 <fmodf>
 801ec2a:	ee28 2a08 	vmul.f32	s4, s16, s16
 801ec2e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801ec32:	ee32 2a0f 	vadd.f32	s4, s4, s30
 801ec36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ec3a:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 801ec3e:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801ec42:	eeb5 2a40 	vcmp.f32	s4, #0.0
 801ec46:	bf54      	ite	pl
 801ec48:	eef0 aa61 	vmovpl.f32	s21, s3
 801ec4c:	eef0 aa43 	vmovmi.f32	s21, s6
 801ec50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ec54:	ed8d 0a04 	vstr	s0, [sp, #16]
 801ec58:	eeb1 4ac2 	vsqrt.f32	s8, s4
 801ec5c:	ee38 bac8 	vsub.f32	s22, s17, s16
 801ec60:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ec64:	eddd 7a03 	vldr	s15, [sp, #12]
 801ec68:	ed9d 5a05 	vldr	s10, [sp, #20]
 801ec6c:	eddd 5a06 	vldr	s11, [sp, #24]
 801ec70:	ed9d 6a07 	vldr	s12, [sp, #28]
 801ec74:	eddd 4a08 	vldr	s9, [sp, #32]
 801ec78:	eddd 6a09 	vldr	s13, [sp, #36]	@ 0x24
 801ec7c:	f101 859e 	bmi.w	80207bc <calculate_aabb_per_shape+0x205c>
 801ec80:	ee8f 9a04 	vdiv.f32	s18, s30, s8
 801ec84:	eeb0 0a49 	vmov.f32	s0, s18
 801ec88:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801ec8c:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801ec90:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801ec94:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801ec98:	ed8d 5a08 	vstr	s10, [sp, #32]
 801ec9c:	edcd 1a07 	vstr	s3, [sp, #28]
 801eca0:	ed8d 3a06 	vstr	s6, [sp, #24]
 801eca4:	edcd 7a05 	vstr	s15, [sp, #20]
 801eca8:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ecac:	f012 fa3a 	bl	8031124 <acosf>
 801ecb0:	ee2a 0a80 	vmul.f32	s0, s21, s0
 801ecb4:	eef0 0a4c 	vmov.f32	s1, s24
 801ecb8:	ee30 0a0c 	vadd.f32	s0, s0, s24
 801ecbc:	f012 fa60 	bl	8031180 <fmodf>
 801ecc0:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801ecc4:	ed9d 3a06 	vldr	s6, [sp, #24]
 801ecc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eccc:	eddd 1a07 	vldr	s3, [sp, #28]
 801ecd0:	ed8d 0a03 	vstr	s0, [sp, #12]
 801ecd4:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ecd8:	eddd 7a05 	vldr	s15, [sp, #20]
 801ecdc:	ed9d 5a08 	vldr	s10, [sp, #32]
 801ece0:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801ece4:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801ece8:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801ecec:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801ecf0:	ee78 aa88 	vadd.f32	s21, s17, s16
 801ecf4:	fe33 8a21 	vselgt.f32	s16, s6, s3
 801ecf8:	eeb0 0a49 	vmov.f32	s0, s18
 801ecfc:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801ed00:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801ed04:	ed8d 6a08 	vstr	s12, [sp, #32]
 801ed08:	edcd 5a07 	vstr	s11, [sp, #28]
 801ed0c:	ed8d 5a06 	vstr	s10, [sp, #24]
 801ed10:	edcd 7a05 	vstr	s15, [sp, #20]
 801ed14:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ed18:	f012 fa04 	bl	8031124 <acosf>
 801ed1c:	ee20 0a08 	vmul.f32	s0, s0, s16
 801ed20:	ed5f 0a71 	vldr	s1, [pc, #-452]	@ 801eb60 <calculate_aabb_per_shape+0x400>
 801ed24:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ed28:	f012 fa2a 	bl	8031180 <fmodf>
 801ed2c:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ed30:	eeb0 8a40 	vmov.f32	s16, s0
 801ed34:	eddd 7a05 	vldr	s15, [sp, #20]
 801ed38:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ed3c:	eddd 5a07 	vldr	s11, [sp, #28]
 801ed40:	ed9d 6a08 	vldr	s12, [sp, #32]
 801ed44:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801ed48:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801ed4c:	ee36 3a68 	vsub.f32	s6, s12, s17
 801ed50:	ee3d ca69 	vsub.f32	s24, s26, s19
 801ed54:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801ed58:	ee2c 2a0c 	vmul.f32	s4, s24, s24
 801ed5c:	ee23 3a03 	vmul.f32	s6, s6, s6
 801ed60:	ee32 0a03 	vadd.f32	s0, s4, s6
 801ed64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ed68:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 801ed6c:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 801ed70:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ed74:	fe39 9a02 	vselgt.f32	s18, s18, s4
 801ed78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ed7c:	eeb1 2ac0 	vsqrt.f32	s4, s0
 801ed80:	f101 845c 	bmi.w	802063c <calculate_aabb_per_shape+0x1edc>
 801ed84:	ee8c 0a02 	vdiv.f32	s0, s24, s4
 801ed88:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801ed8c:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801ed90:	ed8d 6a08 	vstr	s12, [sp, #32]
 801ed94:	edcd 5a07 	vstr	s11, [sp, #28]
 801ed98:	ed8d 5a06 	vstr	s10, [sp, #24]
 801ed9c:	edcd 7a05 	vstr	s15, [sp, #20]
 801eda0:	ed8d 7a01 	vstr	s14, [sp, #4]
 801eda4:	f012 f9be 	bl	8031124 <acosf>
 801eda8:	ed5f 0a93 	vldr	s1, [pc, #-588]	@ 801eb60 <calculate_aabb_per_shape+0x400>
 801edac:	ee20 0a09 	vmul.f32	s0, s0, s18
 801edb0:	ee30 0a20 	vadd.f32	s0, s0, s1
 801edb4:	f012 f9e4 	bl	8031180 <fmodf>
 801edb8:	ed9d 7a01 	vldr	s14, [sp, #4]
 801edbc:	eddd 7a05 	vldr	s15, [sp, #20]
 801edc0:	ee77 9a69 	vsub.f32	s19, s14, s19
 801edc4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801edc8:	eeb0 9a40 	vmov.f32	s18, s0
 801edcc:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801edd0:	ee29 0aa9 	vmul.f32	s0, s19, s19
 801edd4:	ee68 8aa8 	vmul.f32	s17, s17, s17
 801edd8:	ee30 0a28 	vadd.f32	s0, s0, s17
 801eddc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ede0:	eeb7 2a00 	vmov.f32	s4, #112	@ 0x3f800000  1.0
 801ede4:	eebf 3a00 	vmov.f32	s6, #240	@ 0xbf800000 -1.0
 801ede8:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801edec:	fe72 8a03 	vselgt.f32	s17, s4, s6
 801edf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801edf4:	eeb1 cac0 	vsqrt.f32	s24, s0
 801edf8:	ed9d 5a06 	vldr	s10, [sp, #24]
 801edfc:	eddd 5a07 	vldr	s11, [sp, #28]
 801ee00:	ed9d 6a08 	vldr	s12, [sp, #32]
 801ee04:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801ee08:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801ee0c:	f101 8404 	bmi.w	8020618 <calculate_aabb_per_shape+0x1eb8>
 801ee10:	ee89 0a8c 	vdiv.f32	s0, s19, s24
 801ee14:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801ee18:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801ee1c:	ed8d 6a08 	vstr	s12, [sp, #32]
 801ee20:	edcd 5a07 	vstr	s11, [sp, #28]
 801ee24:	ed8d 5a06 	vstr	s10, [sp, #24]
 801ee28:	edcd 7a05 	vstr	s15, [sp, #20]
 801ee2c:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ee30:	f012 f978 	bl	8031124 <acosf>
 801ee34:	ed5f 0ab6 	vldr	s1, [pc, #-728]	@ 801eb60 <calculate_aabb_per_shape+0x400>
 801ee38:	ee20 0a28 	vmul.f32	s0, s0, s17
 801ee3c:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ee40:	f012 f99e 	bl	8031180 <fmodf>
 801ee44:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ee48:	eddd 7a05 	vldr	s15, [sp, #20]
 801ee4c:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ee50:	eddd 5a07 	vldr	s11, [sp, #28]
 801ee54:	ed9d 6a08 	vldr	s12, [sp, #32]
 801ee58:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801ee5c:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801ee60:	f1b8 0f00 	cmp.w	r8, #0
 801ee64:	d105      	bne.n	801ee72 <calculate_aabb_per_shape+0x712>
 801ee66:	eeb0 3a49 	vmov.f32	s6, s18
 801ee6a:	eeb0 9a40 	vmov.f32	s18, s0
 801ee6e:	eeb0 0a43 	vmov.f32	s0, s6
 801ee72:	eeb4 9ac0 	vcmpe.f32	s18, s0
 801ee76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee7a:	ed9d 4a02 	vldr	s8, [sp, #8]
 801ee7e:	f340 86cc 	ble.w	801fc1a <calculate_aabb_per_shape+0x14ba>
 801ee82:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801ee86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee8a:	dc0d      	bgt.n	801eea8 <calculate_aabb_per_shape+0x748>
 801ee8c:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801ee90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee94:	d408      	bmi.n	801eea8 <calculate_aabb_per_shape+0x748>
 801ee96:	eeb4 dac7 	vcmpe.f32	s26, s14
 801ee9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee9e:	bf54      	ite	pl
 801eea0:	eef0 ba47 	vmovpl.f32	s23, s14
 801eea4:	eef0 ba4d 	vmovmi.f32	s23, s26
 801eea8:	ed9d 4a04 	vldr	s8, [sp, #16]
 801eeac:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801eeb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eeb4:	dc0a      	bgt.n	801eecc <calculate_aabb_per_shape+0x76c>
 801eeb6:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801eeba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eebe:	d405      	bmi.n	801eecc <calculate_aabb_per_shape+0x76c>
 801eec0:	eeb4 dac7 	vcmpe.f32	s26, s14
 801eec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eec8:	fe3d aa07 	vselgt.f32	s20, s26, s14
 801eecc:	ed9d 4a03 	vldr	s8, [sp, #12]
 801eed0:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801eed4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eed8:	dc0d      	bgt.n	801eef6 <calculate_aabb_per_shape+0x796>
 801eeda:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801eede:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eee2:	d408      	bmi.n	801eef6 <calculate_aabb_per_shape+0x796>
 801eee4:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801eee8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eeec:	bf54      	ite	pl
 801eeee:	eeb0 ba67 	vmovpl.f32	s22, s15
 801eef2:	eeb0 ba46 	vmovmi.f32	s22, s12
 801eef6:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801eefa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eefe:	dc0a      	bgt.n	801ef16 <calculate_aabb_per_shape+0x7b6>
 801ef00:	eeb4 9ac8 	vcmpe.f32	s18, s16
 801ef04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef08:	d405      	bmi.n	801ef16 <calculate_aabb_per_shape+0x7b6>
 801ef0a:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801ef0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef12:	fe76 aa27 	vselgt.f32	s21, s12, s15
 801ef16:	ed94 1a04 	vldr	s2, [r4, #16]
 801ef1a:	edd4 1a05 	vldr	s3, [r4, #20]
 801ef1e:	eeb4 1a6b 	vcmp.f32	s2, s23
 801ef22:	ed94 2a06 	vldr	s4, [r4, #24]
 801ef26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef2a:	eef4 1a4b 	vcmp.f32	s3, s22
 801ef2e:	fe3b 1a81 	vselgt.f32	s2, s23, s2
 801ef32:	ed94 3a07 	vldr	s6, [r4, #28]
 801ef36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef3a:	eeb4 2a6b 	vcmp.f32	s4, s23
 801ef3e:	fe7b 1a21 	vselgt.f32	s3, s22, s3
 801ef42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef46:	eeb4 3a4b 	vcmp.f32	s6, s22
 801ef4a:	bf48      	it	mi
 801ef4c:	eeb0 2a6b 	vmovmi.f32	s4, s23
 801ef50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef54:	eeb4 1a4a 	vcmp.f32	s2, s20
 801ef58:	bf48      	it	mi
 801ef5a:	eeb0 3a4b 	vmovmi.f32	s6, s22
 801ef5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef62:	eef4 aa61 	vcmp.f32	s21, s3
 801ef66:	fe3a 1a01 	vselgt.f32	s2, s20, s2
 801ef6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef6e:	eeb4 2a4a 	vcmp.f32	s4, s20
 801ef72:	bf48      	it	mi
 801ef74:	eef0 1a6a 	vmovmi.f32	s3, s21
 801ef78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef7c:	eef4 aa43 	vcmp.f32	s21, s6
 801ef80:	bf48      	it	mi
 801ef82:	eeb0 2a4a 	vmovmi.f32	s4, s20
 801ef86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef8a:	fe3a 3a83 	vselgt.f32	s6, s21, s6
 801ef8e:	ed84 1a04 	vstr	s2, [r4, #16]
 801ef92:	edc4 1a05 	vstr	s3, [r4, #20]
 801ef96:	ed84 2a06 	vstr	s4, [r4, #24]
 801ef9a:	ed84 3a07 	vstr	s6, [r4, #28]
 801ef9e:	6820      	ldr	r0, [r4, #0]
 801efa0:	e0e2      	b.n	801f168 <calculate_aabb_per_shape+0xa08>
 801efa2:	f1b9 0f01 	cmp.w	r9, #1
 801efa6:	bf0d      	iteet	eq
 801efa8:	eddf 7ac7 	vldreq	s15, [pc, #796]	@ 801f2c8 <calculate_aabb_per_shape+0xb68>
 801efac:	eef0 7a6c 	vmovne.f32	s15, s25
 801efb0:	eeb0 7a4e 	vmovne.f32	s14, s28
 801efb4:	eeb0 7a67 	vmoveq.f32	s14, s15
 801efb8:	e460      	b.n	801e87c <calculate_aabb_per_shape+0x11c>
 801efba:	edd4 9a04 	vldr	s19, [r4, #16]
 801efbe:	edd4 aa05 	vldr	s21, [r4, #20]
 801efc2:	eef4 9ac7 	vcmpe.f32	s19, s14
 801efc6:	ed94 aa06 	vldr	s20, [r4, #24]
 801efca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efce:	eef4 aae7 	vcmpe.f32	s21, s15
 801efd2:	bf58      	it	pl
 801efd4:	eef0 9a47 	vmovpl.f32	s19, s14
 801efd8:	ed94 ba07 	vldr	s22, [r4, #28]
 801efdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efe0:	eeb4 aac7 	vcmpe.f32	s20, s14
 801efe4:	bf58      	it	pl
 801efe6:	eef0 aa67 	vmovpl.f32	s21, s15
 801efea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efee:	eeb4 bae7 	vcmpe.f32	s22, s15
 801eff2:	fe3a aa07 	vselgt.f32	s20, s20, s14
 801eff6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801effa:	eef4 9ac5 	vcmpe.f32	s19, s10
 801effe:	fe3b ba27 	vselgt.f32	s22, s22, s15
 801f002:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f006:	ed8d fa0e 	vstr	s30, [sp, #56]	@ 0x38
 801f00a:	ed8d fa0f 	vstr	s30, [sp, #60]	@ 0x3c
 801f00e:	edc4 9a04 	vstr	s19, [r4, #16]
 801f012:	edc4 aa05 	vstr	s21, [r4, #20]
 801f016:	ed84 aa06 	vstr	s20, [r4, #24]
 801f01a:	ed84 ba07 	vstr	s22, [r4, #28]
 801f01e:	d80a      	bhi.n	801f036 <calculate_aabb_per_shape+0x8d6>
 801f020:	eeb4 aac5 	vcmpe.f32	s20, s10
 801f024:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f028:	db05      	blt.n	801f036 <calculate_aabb_per_shape+0x8d6>
 801f02a:	eef4 aae6 	vcmpe.f32	s21, s13
 801f02e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f032:	f240 829c 	bls.w	801f56e <calculate_aabb_per_shape+0xe0e>
 801f036:	eeb2 3a02 	vmov.f32	s6, #34	@ 0x41100000  9.0
 801f03a:	eeb8 8a08 	vmov.f32	s16, #136	@ 0xc0400000 -3.0
 801f03e:	ee25 2a03 	vmul.f32	s4, s10, s6
 801f042:	ee28 8a88 	vmul.f32	s16, s17, s16
 801f046:	ee64 1a83 	vmul.f32	s3, s9, s6
 801f04a:	ee38 8a02 	vadd.f32	s16, s16, s4
 801f04e:	eeb0 2a08 	vmov.f32	s4, #8	@ 0x40400000  3.0
 801f052:	ee38 8a61 	vsub.f32	s16, s16, s3
 801f056:	ee67 1a02 	vmul.f32	s3, s14, s4
 801f05a:	eeb1 3a08 	vmov.f32	s6, #24	@ 0x40c00000  6.0
 801f05e:	eef2 ba08 	vmov.f32	s23, #40	@ 0x41400000  12.0
 801f062:	ee38 8a21 	vadd.f32	s16, s16, s3
 801f066:	ee25 1a2b 	vmul.f32	s2, s10, s23
 801f06a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801f06e:	ee68 ba83 	vmul.f32	s23, s17, s6
 801f072:	ee64 1a83 	vmul.f32	s3, s9, s6
 801f076:	ee7b bac1 	vsub.f32	s23, s23, s2
 801f07a:	ee25 3a02 	vmul.f32	s6, s10, s4
 801f07e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f082:	ee28 2a82 	vmul.f32	s4, s17, s4
 801f086:	ee7b baa1 	vadd.f32	s23, s23, s3
 801f08a:	ee33 3a42 	vsub.f32	s6, s6, s4
 801f08e:	f100 8235 	bmi.w	801f4fc <calculate_aabb_per_shape+0xd9c>
 801f092:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f096:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f09a:	bf4c      	ite	mi
 801f09c:	2301      	movmi	r3, #1
 801f09e:	2300      	movpl	r3, #0
 801f0a0:	2b00      	cmp	r3, #0
 801f0a2:	f040 8117 	bne.w	801f2d4 <calculate_aabb_per_shape+0xb74>
 801f0a6:	eeb1 0a00 	vmov.f32	s0, #16	@ 0x40800000  4.0
 801f0aa:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f0ae:	ee2b 0aab 	vmul.f32	s0, s23, s23
 801f0b2:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f0b6:	ee30 0a43 	vsub.f32	s0, s0, s6
 801f0ba:	eeb4 0aed 	vcmpe.f32	s0, s27
 801f0be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f0c2:	f300 836a 	bgt.w	801f79a <calculate_aabb_per_shape+0x103a>
 801f0c6:	eeb2 3a02 	vmov.f32	s6, #34	@ 0x41100000  9.0
 801f0ca:	eeb8 8a08 	vmov.f32	s16, #136	@ 0xc0400000 -3.0
 801f0ce:	ee26 2a83 	vmul.f32	s4, s13, s6
 801f0d2:	ee29 8a08 	vmul.f32	s16, s18, s16
 801f0d6:	ee65 1a83 	vmul.f32	s3, s11, s6
 801f0da:	ee38 8a02 	vadd.f32	s16, s16, s4
 801f0de:	eeb0 2a08 	vmov.f32	s4, #8	@ 0x40400000  3.0
 801f0e2:	ee38 8a61 	vsub.f32	s16, s16, s3
 801f0e6:	ee67 1a82 	vmul.f32	s3, s15, s4
 801f0ea:	eeb1 3a08 	vmov.f32	s6, #24	@ 0x40c00000  6.0
 801f0ee:	ee38 8a21 	vadd.f32	s16, s16, s3
 801f0f2:	eeb2 1a08 	vmov.f32	s2, #40	@ 0x41400000  12.0
 801f0f6:	ee69 8a03 	vmul.f32	s17, s18, s6
 801f0fa:	ee26 1a81 	vmul.f32	s2, s13, s2
 801f0fe:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801f102:	ee65 1a83 	vmul.f32	s3, s11, s6
 801f106:	ee78 8ac1 	vsub.f32	s17, s17, s2
 801f10a:	ee26 3a82 	vmul.f32	s6, s13, s4
 801f10e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f112:	ee29 2a02 	vmul.f32	s4, s18, s4
 801f116:	ee78 8aa1 	vadd.f32	s17, s17, s3
 801f11a:	ee33 3a42 	vsub.f32	s6, s6, s4
 801f11e:	f100 81f5 	bmi.w	801f50c <calculate_aabb_per_shape+0xdac>
 801f122:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f126:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f12a:	bf4c      	ite	mi
 801f12c:	2301      	movmi	r3, #1
 801f12e:	2300      	movpl	r3, #0
 801f130:	2b00      	cmp	r3, #0
 801f132:	f040 815a 	bne.w	801f3ea <calculate_aabb_per_shape+0xc8a>
 801f136:	eeb1 0a00 	vmov.f32	s0, #16	@ 0x40800000  4.0
 801f13a:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f13e:	ee28 0aa8 	vmul.f32	s0, s17, s17
 801f142:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f146:	ee30 0a43 	vsub.f32	s0, s0, s6
 801f14a:	eeb4 0aed 	vcmpe.f32	s0, s27
 801f14e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f152:	f300 8367 	bgt.w	801f824 <calculate_aabb_per_shape+0x10c4>
 801f156:	edc4 9a04 	vstr	s19, [r4, #16]
 801f15a:	edc4 aa05 	vstr	s21, [r4, #20]
 801f15e:	ed84 aa06 	vstr	s20, [r4, #24]
 801f162:	ed84 ba07 	vstr	s22, [r4, #28]
 801f166:	6820      	ldr	r0, [r4, #0]
 801f168:	3601      	adds	r6, #1
 801f16a:	42b0      	cmp	r0, r6
 801f16c:	d93c      	bls.n	801f1e8 <calculate_aabb_per_shape+0xa88>
 801f16e:	46ac      	mov	ip, r5
 801f170:	eeb0 9a67 	vmov.f32	s18, s15
 801f174:	eef0 8a47 	vmov.f32	s17, s14
 801f178:	68a2      	ldr	r2, [r4, #8]
 801f17a:	f7ff bb46 	b.w	801e80a <calculate_aabb_per_shape+0xaa>
 801f17e:	ed9f 3a53 	vldr	s6, [pc, #332]	@ 801f2cc <calculate_aabb_per_shape+0xb6c>
 801f182:	eeb4 5ac3 	vcmpe.f32	s10, s6
 801f186:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f18a:	f6ff aba2 	blt.w	801e8d2 <calculate_aabb_per_shape+0x172>
 801f18e:	ed94 1a04 	vldr	s2, [r4, #16]
 801f192:	edd4 1a05 	vldr	s3, [r4, #20]
 801f196:	eeb4 1a47 	vcmp.f32	s2, s14
 801f19a:	ed94 2a06 	vldr	s4, [r4, #24]
 801f19e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1a2:	eef4 1a67 	vcmp.f32	s3, s15
 801f1a6:	ed94 3a07 	vldr	s6, [r4, #28]
 801f1aa:	fe37 1a01 	vselgt.f32	s2, s14, s2
 801f1ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1b2:	eeb4 2a47 	vcmp.f32	s4, s14
 801f1b6:	fe77 1aa1 	vselgt.f32	s3, s15, s3
 801f1ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1be:	eeb4 3a67 	vcmp.f32	s6, s15
 801f1c2:	bf48      	it	mi
 801f1c4:	eeb0 2a47 	vmovmi.f32	s4, s14
 801f1c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1cc:	bf48      	it	mi
 801f1ce:	eeb0 3a67 	vmovmi.f32	s6, s15
 801f1d2:	3601      	adds	r6, #1
 801f1d4:	42b0      	cmp	r0, r6
 801f1d6:	ed84 1a04 	vstr	s2, [r4, #16]
 801f1da:	edc4 1a05 	vstr	s3, [r4, #20]
 801f1de:	ed84 2a06 	vstr	s4, [r4, #24]
 801f1e2:	ed84 3a07 	vstr	s6, [r4, #28]
 801f1e6:	d8c2      	bhi.n	801f16e <calculate_aabb_per_shape+0xa0e>
 801f1e8:	ed94 6a04 	vldr	s12, [r4, #16]
 801f1ec:	eefd 6ac6 	vcvt.s32.f32	s13, s12
 801f1f0:	ed94 7a05 	vldr	s14, [r4, #20]
 801f1f4:	eef8 5ae6 	vcvt.f32.s32	s11, s13
 801f1f8:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801f1fc:	ed94 5a06 	vldr	s10, [r4, #24]
 801f200:	eeb4 6ae5 	vcmpe.f32	s12, s11
 801f204:	eef8 4ae7 	vcvt.f32.s32	s9, s15
 801f208:	eebd 6ac5 	vcvt.s32.f32	s12, s10
 801f20c:	edd4 5a07 	vldr	s11, [r4, #28]
 801f210:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f214:	eeb4 7ae4 	vcmpe.f32	s14, s9
 801f218:	eeb8 4ac6 	vcvt.f32.s32	s8, s12
 801f21c:	eebd 7ae5 	vcvt.s32.f32	s14, s11
 801f220:	bf4c      	ite	mi
 801f222:	2001      	movmi	r0, #1
 801f224:	2000      	movpl	r0, #0
 801f226:	ee16 5a90 	vmov	r5, s13
 801f22a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f22e:	eef8 4ac7 	vcvt.f32.s32	s9, s14
 801f232:	eeb4 5ac4 	vcmpe.f32	s10, s8
 801f236:	eba5 0000 	sub.w	r0, r5, r0
 801f23a:	bf4c      	ite	mi
 801f23c:	2101      	movmi	r1, #1
 801f23e:	2100      	movpl	r1, #0
 801f240:	ee06 0a90 	vmov	s13, r0
 801f244:	ee17 0a90 	vmov	r0, s15
 801f248:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f24c:	eef4 5ae4 	vcmpe.f32	s11, s9
 801f250:	eba0 0101 	sub.w	r1, r0, r1
 801f254:	bfcc      	ite	gt
 801f256:	2201      	movgt	r2, #1
 801f258:	2200      	movle	r2, #0
 801f25a:	ee07 1a90 	vmov	s15, r1
 801f25e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f262:	ee16 1a10 	vmov	r1, s12
 801f266:	bfc8      	it	gt
 801f268:	2301      	movgt	r3, #1
 801f26a:	440a      	add	r2, r1
 801f26c:	bfd8      	it	le
 801f26e:	2300      	movle	r3, #0
 801f270:	ee17 1a10 	vmov	r1, s14
 801f274:	4419      	add	r1, r3
 801f276:	ee07 1a10 	vmov	s14, r1
 801f27a:	ee06 2a10 	vmov	s12, r2
 801f27e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801f282:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801f286:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801f28a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801f28e:	ee36 5a66 	vsub.f32	s10, s12, s13
 801f292:	ee77 5a67 	vsub.f32	s11, s14, s15
 801f296:	e159      	b.n	801f54c <calculate_aabb_per_shape+0xdec>
 801f298:	68e2      	ldr	r2, [r4, #12]
 801f29a:	00b9      	lsls	r1, r7, #2
 801f29c:	440a      	add	r2, r1
 801f29e:	3702      	adds	r7, #2
 801f2a0:	ed92 7a00 	vldr	s14, [r2]
 801f2a4:	edd2 7a01 	vldr	s15, [r2, #4]
 801f2a8:	f1b8 0f00 	cmp.w	r8, #0
 801f2ac:	d003      	beq.n	801f2b6 <calculate_aabb_per_shape+0xb56>
 801f2ae:	ee37 7a28 	vadd.f32	s14, s14, s17
 801f2b2:	ee77 7a89 	vadd.f32	s15, s15, s18
 801f2b6:	eef0 ca67 	vmov.f32	s25, s15
 801f2ba:	eeb0 ea47 	vmov.f32	s28, s14
 801f2be:	f04f 0900 	mov.w	r9, #0
 801f2c2:	f7ff badb 	b.w	801e87c <calculate_aabb_per_shape+0x11c>
 801f2c6:	bf00      	nop
 801f2c8:	00000000 	.word	0x00000000
 801f2cc:	b727c5ac 	.word	0xb727c5ac
 801f2d0:	c7ffff00 	.word	0xc7ffff00
 801f2d4:	eef5 bac0 	vcmpe.f32	s23, #0.0
 801f2d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2dc:	f100 8126 	bmi.w	801f52c <calculate_aabb_per_shape+0xdcc>
 801f2e0:	eef4 baed 	vcmpe.f32	s23, s27
 801f2e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2e8:	bfcc      	ite	gt
 801f2ea:	2301      	movgt	r3, #1
 801f2ec:	2300      	movle	r3, #0
 801f2ee:	2b00      	cmp	r3, #0
 801f2f0:	f43f aee9 	beq.w	801f0c6 <calculate_aabb_per_shape+0x966>
 801f2f4:	eeb1 3a43 	vneg.f32	s6, s6
 801f2f8:	eec3 1a2b 	vdiv.f32	s3, s6, s23
 801f2fc:	eef4 1aed 	vcmpe.f32	s3, s27
 801f300:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f304:	f77f aedf 	ble.w	801f0c6 <calculate_aabb_per_shape+0x966>
 801f308:	eef4 1aef 	vcmpe.f32	s3, s31
 801f30c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f310:	f57f aed9 	bpl.w	801f0c6 <calculate_aabb_per_shape+0x966>
 801f314:	edcd 1a0e 	vstr	s3, [sp, #56]	@ 0x38
 801f318:	2301      	movs	r3, #1
 801f31a:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 801f31e:	eeb0 1a08 	vmov.f32	s2, #8	@ 0x40400000  3.0
 801f322:	ee30 0ae1 	vsub.f32	s0, s1, s3
 801f326:	ee20 2a01 	vmul.f32	s4, s0, s2
 801f32a:	ee20 3a00 	vmul.f32	s6, s0, s0
 801f32e:	ee20 8a02 	vmul.f32	s16, s0, s4
 801f332:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f336:	ee22 2a21 	vmul.f32	s4, s4, s3
 801f33a:	ee28 8a21 	vmul.f32	s16, s16, s3
 801f33e:	ee22 2a21 	vmul.f32	s4, s4, s3
 801f342:	ee28 8a05 	vmul.f32	s16, s16, s10
 801f346:	ee23 3a28 	vmul.f32	s6, s6, s17
 801f34a:	ee21 0aa1 	vmul.f32	s0, s3, s3
 801f34e:	ee22 2a24 	vmul.f32	s4, s4, s9
 801f352:	ee33 3a08 	vadd.f32	s6, s6, s16
 801f356:	ee60 1a21 	vmul.f32	s3, s0, s3
 801f35a:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f35e:	ee61 1a87 	vmul.f32	s3, s3, s14
 801f362:	ee33 3a21 	vadd.f32	s6, s6, s3
 801f366:	eef4 9ac3 	vcmpe.f32	s19, s6
 801f36a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f36e:	eeb4 aac3 	vcmpe.f32	s20, s6
 801f372:	bf58      	it	pl
 801f374:	eef0 9a43 	vmovpl.f32	s19, s6
 801f378:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f37c:	fe3a aa03 	vselgt.f32	s20, s20, s6
 801f380:	2b02      	cmp	r3, #2
 801f382:	f47f aea0 	bne.w	801f0c6 <calculate_aabb_per_shape+0x966>
 801f386:	ed9d 2a0f 	vldr	s4, [sp, #60]	@ 0x3c
 801f38a:	ee70 0ac2 	vsub.f32	s1, s1, s4
 801f38e:	ee20 1a81 	vmul.f32	s2, s1, s2
 801f392:	ee20 3aa0 	vmul.f32	s6, s1, s1
 801f396:	ee60 1a81 	vmul.f32	s3, s1, s2
 801f39a:	ee23 3a20 	vmul.f32	s6, s6, s1
 801f39e:	ee61 1a82 	vmul.f32	s3, s3, s4
 801f3a2:	ee22 1a01 	vmul.f32	s2, s4, s2
 801f3a6:	ee61 0a85 	vmul.f32	s1, s3, s10
 801f3aa:	ee21 1a02 	vmul.f32	s2, s2, s4
 801f3ae:	ee63 8a28 	vmul.f32	s17, s6, s17
 801f3b2:	ee62 1a02 	vmul.f32	s3, s4, s4
 801f3b6:	ee21 1a24 	vmul.f32	s2, s2, s9
 801f3ba:	ee38 3aa0 	vadd.f32	s6, s17, s1
 801f3be:	ee21 2a82 	vmul.f32	s4, s3, s4
 801f3c2:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f3c6:	ee22 2a07 	vmul.f32	s4, s4, s14
 801f3ca:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f3ce:	eef4 9ac3 	vcmpe.f32	s19, s6
 801f3d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f3d6:	eeb4 aac3 	vcmpe.f32	s20, s6
 801f3da:	bf58      	it	pl
 801f3dc:	eef0 9a43 	vmovpl.f32	s19, s6
 801f3e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f3e4:	fe3a aa03 	vselgt.f32	s20, s20, s6
 801f3e8:	e66d      	b.n	801f0c6 <calculate_aabb_per_shape+0x966>
 801f3ea:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801f3ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f3f2:	f100 8093 	bmi.w	801f51c <calculate_aabb_per_shape+0xdbc>
 801f3f6:	eef4 8aed 	vcmpe.f32	s17, s27
 801f3fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f3fe:	bfcc      	ite	gt
 801f400:	2301      	movgt	r3, #1
 801f402:	2300      	movle	r3, #0
 801f404:	2b00      	cmp	r3, #0
 801f406:	f43f aea6 	beq.w	801f156 <calculate_aabb_per_shape+0x9f6>
 801f40a:	eeb1 3a43 	vneg.f32	s6, s6
 801f40e:	ee83 1a28 	vdiv.f32	s2, s6, s17
 801f412:	eeb4 1aed 	vcmpe.f32	s2, s27
 801f416:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f41a:	f77f ae9c 	ble.w	801f156 <calculate_aabb_per_shape+0x9f6>
 801f41e:	eeb4 1aef 	vcmpe.f32	s2, s31
 801f422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f426:	f57f ae96 	bpl.w	801f156 <calculate_aabb_per_shape+0x9f6>
 801f42a:	2301      	movs	r3, #1
 801f42c:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801f430:	eef0 0a08 	vmov.f32	s1, #8	@ 0x40400000  3.0
 801f434:	ee31 0ac1 	vsub.f32	s0, s3, s2
 801f438:	ee20 2a20 	vmul.f32	s4, s0, s1
 801f43c:	ee20 3a00 	vmul.f32	s6, s0, s0
 801f440:	ee20 8a02 	vmul.f32	s16, s0, s4
 801f444:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f448:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f44c:	ee28 8a01 	vmul.f32	s16, s16, s2
 801f450:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f454:	ee28 8a26 	vmul.f32	s16, s16, s13
 801f458:	ee23 3a09 	vmul.f32	s6, s6, s18
 801f45c:	ee21 0a01 	vmul.f32	s0, s2, s2
 801f460:	ee22 2a25 	vmul.f32	s4, s4, s11
 801f464:	ee33 3a08 	vadd.f32	s6, s6, s16
 801f468:	ee20 1a01 	vmul.f32	s2, s0, s2
 801f46c:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f470:	ee21 1a27 	vmul.f32	s2, s2, s15
 801f474:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f478:	eef4 aac3 	vcmpe.f32	s21, s6
 801f47c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f480:	eeb4 bac3 	vcmpe.f32	s22, s6
 801f484:	bf58      	it	pl
 801f486:	eef0 aa43 	vmovpl.f32	s21, s6
 801f48a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f48e:	fe3b ba03 	vselgt.f32	s22, s22, s6
 801f492:	2b02      	cmp	r3, #2
 801f494:	f47f ae5f 	bne.w	801f156 <calculate_aabb_per_shape+0x9f6>
 801f498:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 801f49c:	ee71 1ac1 	vsub.f32	s3, s3, s2
 801f4a0:	ee21 2aa0 	vmul.f32	s4, s3, s1
 801f4a4:	ee21 3aa1 	vmul.f32	s6, s3, s3
 801f4a8:	ee61 0a82 	vmul.f32	s1, s3, s4
 801f4ac:	ee23 3a21 	vmul.f32	s6, s6, s3
 801f4b0:	ee21 2a02 	vmul.f32	s4, s2, s4
 801f4b4:	ee60 0a81 	vmul.f32	s1, s1, s2
 801f4b8:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f4bc:	ee60 0aa6 	vmul.f32	s1, s1, s13
 801f4c0:	ee23 9a09 	vmul.f32	s18, s6, s18
 801f4c4:	ee61 1a01 	vmul.f32	s3, s2, s2
 801f4c8:	ee22 2a25 	vmul.f32	s4, s4, s11
 801f4cc:	ee39 3a20 	vadd.f32	s6, s18, s1
 801f4d0:	ee21 1a81 	vmul.f32	s2, s3, s2
 801f4d4:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f4d8:	ee21 1a27 	vmul.f32	s2, s2, s15
 801f4dc:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f4e0:	eef4 aac3 	vcmpe.f32	s21, s6
 801f4e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4e8:	eeb4 bac3 	vcmpe.f32	s22, s6
 801f4ec:	bf58      	it	pl
 801f4ee:	eef0 aa43 	vmovpl.f32	s21, s6
 801f4f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4f6:	fe3b ba03 	vselgt.f32	s22, s22, s6
 801f4fa:	e62c      	b.n	801f156 <calculate_aabb_per_shape+0x9f6>
 801f4fc:	eeb4 8aee 	vcmpe.f32	s16, s29
 801f500:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f504:	bfcc      	ite	gt
 801f506:	2301      	movgt	r3, #1
 801f508:	2300      	movle	r3, #0
 801f50a:	e5c9      	b.n	801f0a0 <calculate_aabb_per_shape+0x940>
 801f50c:	eeb4 8aee 	vcmpe.f32	s16, s29
 801f510:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f514:	bfcc      	ite	gt
 801f516:	2301      	movgt	r3, #1
 801f518:	2300      	movle	r3, #0
 801f51a:	e609      	b.n	801f130 <calculate_aabb_per_shape+0x9d0>
 801f51c:	eef4 8aee 	vcmpe.f32	s17, s29
 801f520:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f524:	bf4c      	ite	mi
 801f526:	2301      	movmi	r3, #1
 801f528:	2300      	movpl	r3, #0
 801f52a:	e76b      	b.n	801f404 <calculate_aabb_per_shape+0xca4>
 801f52c:	eef4 baee 	vcmpe.f32	s23, s29
 801f530:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f534:	bf4c      	ite	mi
 801f536:	2301      	movmi	r3, #1
 801f538:	2300      	movpl	r3, #0
 801f53a:	e6d8      	b.n	801f2ee <calculate_aabb_per_shape+0xb8e>
 801f53c:	ed5f 5a9c 	vldr	s11, [pc, #-624]	@ 801f2d0 <calculate_aabb_per_shape+0xb70>
 801f540:	eeb0 6a47 	vmov.f32	s12, s14
 801f544:	eef0 6a67 	vmov.f32	s13, s15
 801f548:	eeb0 5a65 	vmov.f32	s10, s11
 801f54c:	edc4 6a04 	vstr	s13, [r4, #16]
 801f550:	edc4 7a05 	vstr	s15, [r4, #20]
 801f554:	ed84 6a06 	vstr	s12, [r4, #24]
 801f558:	ed84 7a07 	vstr	s14, [r4, #28]
 801f55c:	ed84 5a08 	vstr	s10, [r4, #32]
 801f560:	edc4 5a09 	vstr	s11, [r4, #36]	@ 0x24
 801f564:	b011      	add	sp, #68	@ 0x44
 801f566:	ecbd 8b10 	vpop	{d8-d15}
 801f56a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f56e:	eeb4 bae6 	vcmpe.f32	s22, s13
 801f572:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f576:	f6ff ad5e 	blt.w	801f036 <calculate_aabb_per_shape+0x8d6>
 801f57a:	eef4 9ae4 	vcmpe.f32	s19, s9
 801f57e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f582:	f63f ad58 	bhi.w	801f036 <calculate_aabb_per_shape+0x8d6>
 801f586:	eeb4 aae4 	vcmpe.f32	s20, s9
 801f58a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f58e:	f6ff ad52 	blt.w	801f036 <calculate_aabb_per_shape+0x8d6>
 801f592:	eef4 aae5 	vcmpe.f32	s21, s11
 801f596:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f59a:	f63f ad4c 	bhi.w	801f036 <calculate_aabb_per_shape+0x8d6>
 801f59e:	eeb4 bae5 	vcmpe.f32	s22, s11
 801f5a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5a6:	f6ff ad46 	blt.w	801f036 <calculate_aabb_per_shape+0x8d6>
 801f5aa:	e5dd      	b.n	801f168 <calculate_aabb_per_shape+0xa08>
 801f5ac:	f1aa 0a05 	sub.w	sl, sl, #5
 801f5b0:	f1ba 0f03 	cmp.w	sl, #3
 801f5b4:	f240 81ae 	bls.w	801f914 <calculate_aabb_per_shape+0x11b4>
 801f5b8:	eef0 6a49 	vmov.f32	s13, s18
 801f5bc:	eeb0 5a68 	vmov.f32	s10, s17
 801f5c0:	46ba      	mov	sl, r7
 801f5c2:	eeb0 6a66 	vmov.f32	s12, s13
 801f5c6:	eeb0 da45 	vmov.f32	s26, s10
 801f5ca:	e17d      	b.n	801f8c8 <calculate_aabb_per_shape+0x1168>
 801f5cc:	ed94 2a04 	vldr	s4, [r4, #16]
 801f5d0:	edd4 0a05 	vldr	s1, [r4, #20]
 801f5d4:	eeb4 2ac7 	vcmpe.f32	s4, s14
 801f5d8:	ed94 1a06 	vldr	s2, [r4, #24]
 801f5dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5e0:	eef4 0ae7 	vcmpe.f32	s1, s15
 801f5e4:	bf58      	it	pl
 801f5e6:	eeb0 2a47 	vmovpl.f32	s4, s14
 801f5ea:	ed94 0a07 	vldr	s0, [r4, #28]
 801f5ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5f2:	eeb4 1ac7 	vcmpe.f32	s2, s14
 801f5f6:	bf58      	it	pl
 801f5f8:	eef0 0a67 	vmovpl.f32	s1, s15
 801f5fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f600:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f604:	fe31 1a07 	vselgt.f32	s2, s2, s14
 801f608:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f60c:	eeb4 2ac5 	vcmpe.f32	s4, s10
 801f610:	fe30 0a27 	vselgt.f32	s0, s0, s15
 801f614:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f618:	ed84 2a04 	vstr	s4, [r4, #16]
 801f61c:	edc4 0a05 	vstr	s1, [r4, #20]
 801f620:	ed84 1a06 	vstr	s2, [r4, #24]
 801f624:	ed84 0a07 	vstr	s0, [r4, #28]
 801f628:	d80f      	bhi.n	801f64a <calculate_aabb_per_shape+0xeea>
 801f62a:	eeb4 1ac5 	vcmpe.f32	s2, s10
 801f62e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f632:	db0a      	blt.n	801f64a <calculate_aabb_per_shape+0xeea>
 801f634:	eef4 0ae6 	vcmpe.f32	s1, s13
 801f638:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f63c:	d805      	bhi.n	801f64a <calculate_aabb_per_shape+0xeea>
 801f63e:	eeb4 0ae6 	vcmpe.f32	s0, s13
 801f642:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f646:	f6bf ad8f 	bge.w	801f168 <calculate_aabb_per_shape+0xa08>
 801f64a:	ee35 8a05 	vadd.f32	s16, s10, s10
 801f64e:	ee78 1aa8 	vadd.f32	s3, s17, s17
 801f652:	ee37 3a07 	vadd.f32	s6, s14, s14
 801f656:	ee78 1a61 	vsub.f32	s3, s16, s3
 801f65a:	ee33 3a48 	vsub.f32	s6, s6, s16
 801f65e:	ee33 3a61 	vsub.f32	s6, s6, s3
 801f662:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801f666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f66a:	f100 8139 	bmi.w	801f8e0 <calculate_aabb_per_shape+0x1180>
 801f66e:	eeb4 3aed 	vcmpe.f32	s6, s27
 801f672:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f676:	bfcc      	ite	gt
 801f678:	2301      	movgt	r3, #1
 801f67a:	2300      	movle	r3, #0
 801f67c:	b173      	cbz	r3, 801f69c <calculate_aabb_per_shape+0xf3c>
 801f67e:	eef1 1a61 	vneg.f32	s3, s3
 801f682:	ee81 8a83 	vdiv.f32	s16, s3, s6
 801f686:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f68a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f68e:	dd05      	ble.n	801f69c <calculate_aabb_per_shape+0xf3c>
 801f690:	eeb4 8aef 	vcmpe.f32	s16, s31
 801f694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f698:	f100 8175 	bmi.w	801f986 <calculate_aabb_per_shape+0x1226>
 801f69c:	ee36 8aa6 	vadd.f32	s16, s13, s13
 801f6a0:	ee79 1a09 	vadd.f32	s3, s18, s18
 801f6a4:	ee37 3aa7 	vadd.f32	s6, s15, s15
 801f6a8:	ee78 1a61 	vsub.f32	s3, s16, s3
 801f6ac:	ee33 3a48 	vsub.f32	s6, s6, s16
 801f6b0:	ee33 3a61 	vsub.f32	s6, s6, s3
 801f6b4:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801f6b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6bc:	f100 815b 	bmi.w	801f976 <calculate_aabb_per_shape+0x1216>
 801f6c0:	eeb4 3aed 	vcmpe.f32	s6, s27
 801f6c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6c8:	bfcc      	ite	gt
 801f6ca:	2301      	movgt	r3, #1
 801f6cc:	2300      	movle	r3, #0
 801f6ce:	b383      	cbz	r3, 801f732 <calculate_aabb_per_shape+0xfd2>
 801f6d0:	eef1 1a61 	vneg.f32	s3, s3
 801f6d4:	ee81 8a83 	vdiv.f32	s16, s3, s6
 801f6d8:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f6dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6e0:	dd27      	ble.n	801f732 <calculate_aabb_per_shape+0xfd2>
 801f6e2:	eeb4 8aef 	vcmpe.f32	s16, s31
 801f6e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6ea:	d522      	bpl.n	801f732 <calculate_aabb_per_shape+0xfd2>
 801f6ec:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801f6f0:	ee71 1ac8 	vsub.f32	s3, s3, s16
 801f6f4:	ee31 3aa1 	vadd.f32	s6, s3, s3
 801f6f8:	ee61 1aa1 	vmul.f32	s3, s3, s3
 801f6fc:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f700:	ee61 1a89 	vmul.f32	s3, s3, s18
 801f704:	ee23 3a26 	vmul.f32	s6, s6, s13
 801f708:	ee28 8a08 	vmul.f32	s16, s16, s16
 801f70c:	ee73 1a21 	vadd.f32	s3, s6, s3
 801f710:	ee28 3a27 	vmul.f32	s6, s16, s15
 801f714:	ee31 3a83 	vadd.f32	s6, s3, s6
 801f718:	eef4 0ac3 	vcmpe.f32	s1, s6
 801f71c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f720:	eeb4 0ac3 	vcmpe.f32	s0, s6
 801f724:	bf58      	it	pl
 801f726:	eef0 0a43 	vmovpl.f32	s1, s6
 801f72a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f72e:	fe30 0a03 	vselgt.f32	s0, s0, s6
 801f732:	ed84 2a04 	vstr	s4, [r4, #16]
 801f736:	edc4 0a05 	vstr	s1, [r4, #20]
 801f73a:	ed84 1a06 	vstr	s2, [r4, #24]
 801f73e:	ed84 0a07 	vstr	s0, [r4, #28]
 801f742:	e511      	b.n	801f168 <calculate_aabb_per_shape+0xa08>
 801f744:	f107 0a04 	add.w	sl, r7, #4
 801f748:	edde 6a01 	vldr	s13, [lr, #4]
 801f74c:	ed9e da02 	vldr	s26, [lr, #8]
 801f750:	edde 5a03 	vldr	s11, [lr, #12]
 801f754:	f1b8 0f00 	cmp.w	r8, #0
 801f758:	d007      	beq.n	801f76a <calculate_aabb_per_shape+0x100a>
 801f75a:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801f75e:	ee76 6a89 	vadd.f32	s13, s13, s18
 801f762:	ee3d da28 	vadd.f32	s26, s26, s17
 801f766:	ee75 5a89 	vadd.f32	s11, s11, s18
 801f76a:	eef0 4a4d 	vmov.f32	s9, s26
 801f76e:	eeb0 6a65 	vmov.f32	s12, s11
 801f772:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 801f776:	f10a 0702 	add.w	r7, sl, #2
 801f77a:	ed91 7a00 	vldr	s14, [r1]
 801f77e:	ed91 3a01 	vldr	s6, [r1, #4]
 801f782:	eeb0 5a67 	vmov.f32	s10, s15
 801f786:	f1b8 0f00 	cmp.w	r8, #0
 801f78a:	f000 80a5 	beq.w	801f8d8 <calculate_aabb_per_shape+0x1178>
 801f78e:	ee37 7a28 	vadd.f32	s14, s14, s17
 801f792:	ee79 7a03 	vadd.f32	s15, s18, s6
 801f796:	f7ff b871 	b.w	801e87c <calculate_aabb_per_shape+0x11c>
 801f79a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801f79e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7a2:	eeb1 cac0 	vsqrt.f32	s24, s0
 801f7a6:	f100 8144 	bmi.w	801fa32 <calculate_aabb_per_shape+0x12d2>
 801f7aa:	ee38 8a08 	vadd.f32	s16, s16, s16
 801f7ae:	eeb1 3a6b 	vneg.f32	s6, s23
 801f7b2:	ee7c ba6b 	vsub.f32	s23, s24, s23
 801f7b6:	eecb 1a88 	vdiv.f32	s3, s23, s16
 801f7ba:	eef4 1aed 	vcmpe.f32	s3, s27
 801f7be:	ee33 3a4c 	vsub.f32	s6, s6, s24
 801f7c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7c6:	ee83 2a08 	vdiv.f32	s4, s6, s16
 801f7ca:	dd15      	ble.n	801f7f8 <calculate_aabb_per_shape+0x1098>
 801f7cc:	eef4 1aef 	vcmpe.f32	s3, s31
 801f7d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7d4:	d510      	bpl.n	801f7f8 <calculate_aabb_per_shape+0x1098>
 801f7d6:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f7da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7de:	edcd 1a0e 	vstr	s3, [sp, #56]	@ 0x38
 801f7e2:	f77f ad99 	ble.w	801f318 <calculate_aabb_per_shape+0xbb8>
 801f7e6:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f7ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7ee:	f57f ad93 	bpl.w	801f318 <calculate_aabb_per_shape+0xbb8>
 801f7f2:	2302      	movs	r3, #2
 801f7f4:	2201      	movs	r2, #1
 801f7f6:	e00d      	b.n	801f814 <calculate_aabb_per_shape+0x10b4>
 801f7f8:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f7fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f800:	f77f ac61 	ble.w	801f0c6 <calculate_aabb_per_shape+0x966>
 801f804:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f808:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f80c:	f57f ac5b 	bpl.w	801f0c6 <calculate_aabb_per_shape+0x966>
 801f810:	2301      	movs	r3, #1
 801f812:	2200      	movs	r2, #0
 801f814:	a910      	add	r1, sp, #64	@ 0x40
 801f816:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801f81a:	ed02 2a02 	vstr	s4, [r2, #-8]
 801f81e:	eddd 1a0e 	vldr	s3, [sp, #56]	@ 0x38
 801f822:	e57a      	b.n	801f31a <calculate_aabb_per_shape+0xbba>
 801f824:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801f828:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f82c:	eef1 bac0 	vsqrt.f32	s23, s0
 801f830:	f100 80e0 	bmi.w	801f9f4 <calculate_aabb_per_shape+0x1294>
 801f834:	ee38 8a08 	vadd.f32	s16, s16, s16
 801f838:	eeb1 3a68 	vneg.f32	s6, s17
 801f83c:	ee7b 8ae8 	vsub.f32	s17, s23, s17
 801f840:	ee88 1a88 	vdiv.f32	s2, s17, s16
 801f844:	eeb4 1aed 	vcmpe.f32	s2, s27
 801f848:	ee33 3a6b 	vsub.f32	s6, s6, s23
 801f84c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f850:	ee83 2a08 	vdiv.f32	s4, s6, s16
 801f854:	dd15      	ble.n	801f882 <calculate_aabb_per_shape+0x1122>
 801f856:	eeb4 1aef 	vcmpe.f32	s2, s31
 801f85a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f85e:	d510      	bpl.n	801f882 <calculate_aabb_per_shape+0x1122>
 801f860:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f864:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f868:	ed8d 1a0e 	vstr	s2, [sp, #56]	@ 0x38
 801f86c:	f77f addd 	ble.w	801f42a <calculate_aabb_per_shape+0xcca>
 801f870:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f874:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f878:	f57f add7 	bpl.w	801f42a <calculate_aabb_per_shape+0xcca>
 801f87c:	2302      	movs	r3, #2
 801f87e:	2201      	movs	r2, #1
 801f880:	e00d      	b.n	801f89e <calculate_aabb_per_shape+0x113e>
 801f882:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f88a:	f77f ac64 	ble.w	801f156 <calculate_aabb_per_shape+0x9f6>
 801f88e:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f896:	f57f ac5e 	bpl.w	801f156 <calculate_aabb_per_shape+0x9f6>
 801f89a:	2301      	movs	r3, #1
 801f89c:	2200      	movs	r2, #0
 801f89e:	a910      	add	r1, sp, #64	@ 0x40
 801f8a0:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801f8a4:	ed02 2a02 	vstr	s4, [r2, #-8]
 801f8a8:	ed9d 1a0e 	vldr	s2, [sp, #56]	@ 0x38
 801f8ac:	e5be      	b.n	801f42c <calculate_aabb_per_shape+0xccc>
 801f8ae:	f107 0a02 	add.w	sl, r7, #2
 801f8b2:	edde 6a01 	vldr	s13, [lr, #4]
 801f8b6:	f1b8 0f00 	cmp.w	r8, #0
 801f8ba:	d108      	bne.n	801f8ce <calculate_aabb_per_shape+0x116e>
 801f8bc:	eeb0 da67 	vmov.f32	s26, s15
 801f8c0:	eeb0 6a66 	vmov.f32	s12, s13
 801f8c4:	eeb0 5a67 	vmov.f32	s10, s15
 801f8c8:	eef0 7a45 	vmov.f32	s15, s10
 801f8cc:	e751      	b.n	801f772 <calculate_aabb_per_shape+0x1012>
 801f8ce:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801f8d2:	ee76 6a89 	vadd.f32	s13, s13, s18
 801f8d6:	e7f1      	b.n	801f8bc <calculate_aabb_per_shape+0x115c>
 801f8d8:	eef0 7a43 	vmov.f32	s15, s6
 801f8dc:	f7fe bfce 	b.w	801e87c <calculate_aabb_per_shape+0x11c>
 801f8e0:	eeb4 3aee 	vcmpe.f32	s6, s29
 801f8e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8e8:	bf4c      	ite	mi
 801f8ea:	2301      	movmi	r3, #1
 801f8ec:	2300      	movpl	r3, #0
 801f8ee:	e6c5      	b.n	801f67c <calculate_aabb_per_shape+0xf1c>
 801f8f0:	eeb0 5a67 	vmov.f32	s10, s15
 801f8f4:	f107 0a03 	add.w	sl, r7, #3
 801f8f8:	edde 6a01 	vldr	s13, [lr, #4]
 801f8fc:	3704      	adds	r7, #4
 801f8fe:	edde 4a02 	vldr	s9, [lr, #8]
 801f902:	eeb0 6a49 	vmov.f32	s12, s18
 801f906:	eeb0 da68 	vmov.f32	s26, s17
 801f90a:	edde 7a03 	vldr	s15, [lr, #12]
 801f90e:	9500      	str	r5, [sp, #0]
 801f910:	f7fe bfa9 	b.w	801e866 <calculate_aabb_per_shape+0x106>
 801f914:	ee38 5aa8 	vadd.f32	s10, s17, s17
 801f918:	ee79 6a09 	vadd.f32	s13, s18, s18
 801f91c:	ee35 5a4d 	vsub.f32	s10, s10, s26
 801f920:	ee76 6ac6 	vsub.f32	s13, s13, s12
 801f924:	e64c      	b.n	801f5c0 <calculate_aabb_per_shape+0xe60>
 801f926:	eeb0 7a68 	vmov.f32	s14, s17
 801f92a:	f7fe bfa7 	b.w	801e87c <calculate_aabb_per_shape+0x11c>
 801f92e:	f1aa 0a05 	sub.w	sl, sl, #5
 801f932:	f1ba 0f03 	cmp.w	sl, #3
 801f936:	d915      	bls.n	801f964 <calculate_aabb_per_shape+0x1204>
 801f938:	eef0 6a49 	vmov.f32	s13, s18
 801f93c:	eeb0 5a68 	vmov.f32	s10, s17
 801f940:	f107 0a02 	add.w	sl, r7, #2
 801f944:	edde 5a01 	vldr	s11, [lr, #4]
 801f948:	f1b8 0f00 	cmp.w	r8, #0
 801f94c:	d003      	beq.n	801f956 <calculate_aabb_per_shape+0x11f6>
 801f94e:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801f952:	ee75 5a89 	vadd.f32	s11, s11, s18
 801f956:	eeb0 da67 	vmov.f32	s26, s15
 801f95a:	eeb0 6a65 	vmov.f32	s12, s11
 801f95e:	eef0 4a67 	vmov.f32	s9, s15
 801f962:	e7b1      	b.n	801f8c8 <calculate_aabb_per_shape+0x1168>
 801f964:	ee38 5aa8 	vadd.f32	s10, s17, s17
 801f968:	ee79 6a09 	vadd.f32	s13, s18, s18
 801f96c:	ee35 5a4d 	vsub.f32	s10, s10, s26
 801f970:	ee76 6ac6 	vsub.f32	s13, s13, s12
 801f974:	e7e4      	b.n	801f940 <calculate_aabb_per_shape+0x11e0>
 801f976:	eeb4 3aee 	vcmpe.f32	s6, s29
 801f97a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f97e:	bf4c      	ite	mi
 801f980:	2301      	movmi	r3, #1
 801f982:	2300      	movpl	r3, #0
 801f984:	e6a3      	b.n	801f6ce <calculate_aabb_per_shape+0xf6e>
 801f986:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801f98a:	ee71 1ac8 	vsub.f32	s3, s3, s16
 801f98e:	ee31 3aa1 	vadd.f32	s6, s3, s3
 801f992:	ee61 1aa1 	vmul.f32	s3, s3, s3
 801f996:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f99a:	ee61 1aa8 	vmul.f32	s3, s3, s17
 801f99e:	ee23 3a05 	vmul.f32	s6, s6, s10
 801f9a2:	ee28 8a08 	vmul.f32	s16, s16, s16
 801f9a6:	ee73 1a21 	vadd.f32	s3, s6, s3
 801f9aa:	ee28 3a07 	vmul.f32	s6, s16, s14
 801f9ae:	ee31 3a83 	vadd.f32	s6, s3, s6
 801f9b2:	eeb4 2ac3 	vcmpe.f32	s4, s6
 801f9b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f9ba:	eeb4 1ac3 	vcmpe.f32	s2, s6
 801f9be:	bf58      	it	pl
 801f9c0:	eeb0 2a43 	vmovpl.f32	s4, s6
 801f9c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f9c8:	fe31 1a03 	vselgt.f32	s2, s2, s6
 801f9cc:	e666      	b.n	801f69c <calculate_aabb_per_shape+0xf3c>
 801f9ce:	ed9f 3ad3 	vldr	s6, [pc, #844]	@ 801fd1c <calculate_aabb_per_shape+0x15bc>
 801f9d2:	eef4 6ac3 	vcmpe.f32	s13, s6
 801f9d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f9da:	f6bf abd8 	bge.w	801f18e <calculate_aabb_per_shape+0xa2e>
 801f9de:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801f9e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f9e6:	d443      	bmi.n	801fa70 <calculate_aabb_per_shape+0x1310>
 801f9e8:	eeb0 8a45 	vmov.f32	s16, s10
 801f9ec:	eeb1 9a66 	vneg.f32	s18, s13
 801f9f0:	f7fe bf8d 	b.w	801e90e <calculate_aabb_per_shape+0x1ae>
 801f9f4:	edcd 6a07 	vstr	s13, [sp, #28]
 801f9f8:	edcd 4a06 	vstr	s9, [sp, #24]
 801f9fc:	ed8d 6a05 	vstr	s12, [sp, #20]
 801fa00:	edcd 5a04 	vstr	s11, [sp, #16]
 801fa04:	ed8d 5a03 	vstr	s10, [sp, #12]
 801fa08:	edcd 7a02 	vstr	s15, [sp, #8]
 801fa0c:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fa10:	f011 fbd6 	bl	80311c0 <sqrtf>
 801fa14:	eddd 6a07 	vldr	s13, [sp, #28]
 801fa18:	eddd 4a06 	vldr	s9, [sp, #24]
 801fa1c:	ed9d 6a05 	vldr	s12, [sp, #20]
 801fa20:	eddd 5a04 	vldr	s11, [sp, #16]
 801fa24:	ed9d 5a03 	vldr	s10, [sp, #12]
 801fa28:	eddd 7a02 	vldr	s15, [sp, #8]
 801fa2c:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fa30:	e700      	b.n	801f834 <calculate_aabb_per_shape+0x10d4>
 801fa32:	edcd 6a07 	vstr	s13, [sp, #28]
 801fa36:	edcd 4a06 	vstr	s9, [sp, #24]
 801fa3a:	ed8d 6a05 	vstr	s12, [sp, #20]
 801fa3e:	edcd 5a04 	vstr	s11, [sp, #16]
 801fa42:	ed8d 5a03 	vstr	s10, [sp, #12]
 801fa46:	edcd 7a02 	vstr	s15, [sp, #8]
 801fa4a:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fa4e:	f011 fbb7 	bl	80311c0 <sqrtf>
 801fa52:	eddd 6a07 	vldr	s13, [sp, #28]
 801fa56:	eddd 4a06 	vldr	s9, [sp, #24]
 801fa5a:	ed9d 6a05 	vldr	s12, [sp, #20]
 801fa5e:	eddd 5a04 	vldr	s11, [sp, #16]
 801fa62:	ed9d 5a03 	vldr	s10, [sp, #12]
 801fa66:	eddd 7a02 	vldr	s15, [sp, #8]
 801fa6a:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fa6e:	e69c      	b.n	801f7aa <calculate_aabb_per_shape+0x104a>
 801fa70:	eeb1 8a45 	vneg.f32	s16, s10
 801fa74:	f7fe bf43 	b.w	801e8fe <calculate_aabb_per_shape+0x19e>
 801fa78:	ee28 aa08 	vmul.f32	s20, s16, s16
 801fa7c:	ee3a aa0f 	vadd.f32	s20, s20, s30
 801fa80:	eeb5 aa40 	vcmp.f32	s20, #0.0
 801fa84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa88:	ee79 bac8 	vsub.f32	s23, s19, s16
 801fa8c:	eef1 aaca 	vsqrt.f32	s21, s20
 801fa90:	eeb1 ba48 	vneg.f32	s22, s16
 801fa94:	edcd 6a08 	vstr	s13, [sp, #32]
 801fa98:	edcd 4a07 	vstr	s9, [sp, #28]
 801fa9c:	ed8d 6a06 	vstr	s12, [sp, #24]
 801faa0:	edcd 5a05 	vstr	s11, [sp, #20]
 801faa4:	ed8d 5a04 	vstr	s10, [sp, #16]
 801faa8:	edcd 7a03 	vstr	s15, [sp, #12]
 801faac:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fab0:	f100 8655 	bmi.w	802075e <calculate_aabb_per_shape+0x1ffe>
 801fab4:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 801fab8:	f011 fb34 	bl	8031124 <acosf>
 801fabc:	eddf 0a99 	vldr	s1, [pc, #612]	@ 801fd24 <calculate_aabb_per_shape+0x15c4>
 801fac0:	ee30 0ac0 	vsub.f32	s0, s1, s0
 801fac4:	f011 fb5c 	bl	8031180 <fmodf>
 801fac8:	ee39 aa88 	vadd.f32	s20, s19, s16
 801facc:	ed8d 0a02 	vstr	s0, [sp, #8]
 801fad0:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fad4:	eddd 7a03 	vldr	s15, [sp, #12]
 801fad8:	ed9d 5a04 	vldr	s10, [sp, #16]
 801fadc:	eddd 5a05 	vldr	s11, [sp, #20]
 801fae0:	ed9d 6a06 	vldr	s12, [sp, #24]
 801fae4:	eddd 4a07 	vldr	s9, [sp, #28]
 801fae8:	eddd 6a08 	vldr	s13, [sp, #32]
 801faec:	ee88 0a2a 	vdiv.f32	s0, s16, s21
 801faf0:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 801faf4:	edcd 4a08 	vstr	s9, [sp, #32]
 801faf8:	ed8d 6a07 	vstr	s12, [sp, #28]
 801fafc:	edcd 5a06 	vstr	s11, [sp, #24]
 801fb00:	ed8d 5a05 	vstr	s10, [sp, #20]
 801fb04:	edcd 7a03 	vstr	s15, [sp, #12]
 801fb08:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fb0c:	ed9f ca85 	vldr	s24, [pc, #532]	@ 801fd24 <calculate_aabb_per_shape+0x15c4>
 801fb10:	f011 fb08 	bl	8031124 <acosf>
 801fb14:	eef0 0a4c 	vmov.f32	s1, s24
 801fb18:	ee3c 0a40 	vsub.f32	s0, s24, s0
 801fb1c:	f011 fb30 	bl	8031180 <fmodf>
 801fb20:	ee29 2a09 	vmul.f32	s4, s18, s18
 801fb24:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801fb28:	ee32 2a0f 	vadd.f32	s4, s4, s30
 801fb2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb30:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 801fb34:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801fb38:	eeb5 2a40 	vcmp.f32	s4, #0.0
 801fb3c:	bf54      	ite	pl
 801fb3e:	eef0 aa61 	vmovpl.f32	s21, s3
 801fb42:	eef0 aa43 	vmovmi.f32	s21, s6
 801fb46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb4a:	ed8d 0a04 	vstr	s0, [sp, #16]
 801fb4e:	eeb1 4ac2 	vsqrt.f32	s8, s4
 801fb52:	ee38 bac9 	vsub.f32	s22, s17, s18
 801fb56:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fb5a:	eddd 7a03 	vldr	s15, [sp, #12]
 801fb5e:	ed9d 5a05 	vldr	s10, [sp, #20]
 801fb62:	eddd 5a06 	vldr	s11, [sp, #24]
 801fb66:	ed9d 6a07 	vldr	s12, [sp, #28]
 801fb6a:	eddd 4a08 	vldr	s9, [sp, #32]
 801fb6e:	eddd 6a09 	vldr	s13, [sp, #36]	@ 0x24
 801fb72:	f100 8587 	bmi.w	8020684 <calculate_aabb_per_shape+0x1f24>
 801fb76:	ee8f 8a04 	vdiv.f32	s16, s30, s8
 801fb7a:	eeb0 0a48 	vmov.f32	s0, s16
 801fb7e:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801fb82:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801fb86:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801fb8a:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801fb8e:	ed8d 5a08 	vstr	s10, [sp, #32]
 801fb92:	edcd 1a07 	vstr	s3, [sp, #28]
 801fb96:	ed8d 3a06 	vstr	s6, [sp, #24]
 801fb9a:	edcd 7a05 	vstr	s15, [sp, #20]
 801fb9e:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fba2:	f011 fabf 	bl	8031124 <acosf>
 801fba6:	ee2a 0a80 	vmul.f32	s0, s21, s0
 801fbaa:	eef0 0a4c 	vmov.f32	s1, s24
 801fbae:	ee30 0a0c 	vadd.f32	s0, s0, s24
 801fbb2:	f011 fae5 	bl	8031180 <fmodf>
 801fbb6:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801fbba:	ed9d 3a06 	vldr	s6, [sp, #24]
 801fbbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fbc2:	eddd 1a07 	vldr	s3, [sp, #28]
 801fbc6:	ed8d 0a03 	vstr	s0, [sp, #12]
 801fbca:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fbce:	eddd 7a05 	vldr	s15, [sp, #20]
 801fbd2:	ed9d 5a08 	vldr	s10, [sp, #32]
 801fbd6:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801fbda:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801fbde:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801fbe2:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801fbe6:	ee78 aa89 	vadd.f32	s21, s17, s18
 801fbea:	fe33 9a21 	vselgt.f32	s18, s6, s3
 801fbee:	eeb0 0a48 	vmov.f32	s0, s16
 801fbf2:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801fbf6:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801fbfa:	ed8d 6a08 	vstr	s12, [sp, #32]
 801fbfe:	edcd 5a07 	vstr	s11, [sp, #28]
 801fc02:	ed8d 5a06 	vstr	s10, [sp, #24]
 801fc06:	edcd 7a05 	vstr	s15, [sp, #20]
 801fc0a:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fc0e:	f011 fa89 	bl	8031124 <acosf>
 801fc12:	ee20 0a09 	vmul.f32	s0, s0, s18
 801fc16:	f7ff b883 	b.w	801ed20 <calculate_aabb_per_shape+0x5c0>
 801fc1a:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801fc1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc22:	dc39      	bgt.n	801fc98 <calculate_aabb_per_shape+0x1538>
 801fc24:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801fc28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc2c:	d434      	bmi.n	801fc98 <calculate_aabb_per_shape+0x1538>
 801fc2e:	ed9d 4a04 	vldr	s8, [sp, #16]
 801fc32:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801fc36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc3a:	dc04      	bgt.n	801fc46 <calculate_aabb_per_shape+0x14e6>
 801fc3c:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801fc40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc44:	d505      	bpl.n	801fc52 <calculate_aabb_per_shape+0x14f2>
 801fc46:	eeb4 dac7 	vcmpe.f32	s26, s14
 801fc4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc4e:	fe3d aa07 	vselgt.f32	s20, s26, s14
 801fc52:	ed9d 4a03 	vldr	s8, [sp, #12]
 801fc56:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801fc5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc5e:	dc04      	bgt.n	801fc6a <calculate_aabb_per_shape+0x150a>
 801fc60:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801fc64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc68:	d508      	bpl.n	801fc7c <calculate_aabb_per_shape+0x151c>
 801fc6a:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801fc6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc72:	bf54      	ite	pl
 801fc74:	eeb0 ba67 	vmovpl.f32	s22, s15
 801fc78:	eeb0 ba46 	vmovmi.f32	s22, s12
 801fc7c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 801fc80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc84:	f73f a941 	bgt.w	801ef0a <calculate_aabb_per_shape+0x7aa>
 801fc88:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801fc8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc90:	f53f a93b 	bmi.w	801ef0a <calculate_aabb_per_shape+0x7aa>
 801fc94:	f7ff b93f 	b.w	801ef16 <calculate_aabb_per_shape+0x7b6>
 801fc98:	eeb4 dac7 	vcmpe.f32	s26, s14
 801fc9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fca0:	bf54      	ite	pl
 801fca2:	eef0 ba47 	vmovpl.f32	s23, s14
 801fca6:	eef0 ba4d 	vmovmi.f32	s23, s26
 801fcaa:	e7c0      	b.n	801fc2e <calculate_aabb_per_shape+0x14ce>
 801fcac:	db02      	blt.n	801fcb4 <calculate_aabb_per_shape+0x1554>
 801fcae:	429a      	cmp	r2, r3
 801fcb0:	f43e af1a 	beq.w	801eae8 <calculate_aabb_per_shape+0x388>
 801fcb4:	ee38 4ae1 	vsub.f32	s8, s17, s3
 801fcb8:	ee72 aa29 	vadd.f32	s21, s4, s19
 801fcbc:	f7fe bf14 	b.w	801eae8 <calculate_aabb_per_shape+0x388>
 801fcc0:	ee23 0a01 	vmul.f32	s0, s6, s2
 801fcc4:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801fcc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fccc:	eef1 8ac0 	vsqrt.f32	s17, s0
 801fcd0:	f100 83c5 	bmi.w	802045e <calculate_aabb_per_shape+0x1cfe>
 801fcd4:	ee28 8a28 	vmul.f32	s16, s16, s17
 801fcd8:	ed9d 4a03 	vldr	s8, [sp, #12]
 801fcdc:	ee29 9a28 	vmul.f32	s18, s18, s17
 801fce0:	eec4 ba08 	vdiv.f32	s23, s8, s16
 801fce4:	ed9d 4a02 	vldr	s8, [sp, #8]
 801fce8:	eec4 2a09 	vdiv.f32	s5, s8, s18
 801fcec:	ed9d 4a04 	vldr	s8, [sp, #16]
 801fcf0:	eec1 3a88 	vdiv.f32	s7, s3, s16
 801fcf4:	ee84 ba09 	vdiv.f32	s22, s8, s18
 801fcf8:	eeb6 3a00 	vmov.f32	s6, #96	@ 0x3f000000  0.5
 801fcfc:	ee73 8aab 	vadd.f32	s17, s7, s23
 801fd00:	ee72 9a8b 	vadd.f32	s19, s5, s22
 801fd04:	ee68 8a83 	vmul.f32	s17, s17, s6
 801fd08:	ee69 9a83 	vmul.f32	s19, s19, s6
 801fd0c:	ee73 aaeb 	vsub.f32	s21, s7, s23
 801fd10:	ee32 4acb 	vsub.f32	s8, s5, s22
 801fd14:	eef0 1a4f 	vmov.f32	s3, s30
 801fd18:	f7fe be81 	b.w	801ea1e <calculate_aabb_per_shape+0x2be>
 801fd1c:	b727c5ac 	.word	0xb727c5ac
 801fd20:	40490fdb 	.word	0x40490fdb
 801fd24:	40c90fdb 	.word	0x40c90fdb
 801fd28:	eeb0 0a4a 	vmov.f32	s0, s20
 801fd2c:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801fd30:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 801fd34:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 801fd38:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 801fd3c:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 801fd40:	ed8d 7a07 	vstr	s14, [sp, #28]
 801fd44:	edcd 7a08 	vstr	s15, [sp, #32]
 801fd48:	f011 fbbe 	bl	80314c8 <tanf>
 801fd4c:	ed8d 0a03 	vstr	s0, [sp, #12]
 801fd50:	ee20 0a09 	vmul.f32	s0, s0, s18
 801fd54:	ee80 0a08 	vdiv.f32	s0, s0, s16
 801fd58:	f011 fa50 	bl	80311fc <atanf>
 801fd5c:	ed5f ba10 	vldr	s23, [pc, #-64]	@ 801fd20 <calculate_aabb_per_shape+0x15c0>
 801fd60:	eef0 aa40 	vmov.f32	s21, s0
 801fd64:	ee7b bac0 	vsub.f32	s23, s23, s0
 801fd68:	f011 fb1c 	bl	80313a4 <cosf>
 801fd6c:	ee20 aa08 	vmul.f32	s20, s0, s16
 801fd70:	eeb1 0a6a 	vneg.f32	s0, s21
 801fd74:	f011 fb62 	bl	803143c <sinf>
 801fd78:	eddd 7a01 	vldr	s15, [sp, #4]
 801fd7c:	ee20 ba09 	vmul.f32	s22, s0, s18
 801fd80:	ee27 aa8a 	vmul.f32	s20, s15, s20
 801fd84:	ee2c 3a0b 	vmul.f32	s6, s24, s22
 801fd88:	ee3a aa29 	vadd.f32	s20, s20, s19
 801fd8c:	eeb0 0a6b 	vmov.f32	s0, s23
 801fd90:	ee3a aa43 	vsub.f32	s20, s20, s6
 801fd94:	f011 fb06 	bl	80313a4 <cosf>
 801fd98:	ed8d 0a02 	vstr	s0, [sp, #8]
 801fd9c:	eeb0 0a6b 	vmov.f32	s0, s23
 801fda0:	f011 fb4c 	bl	803143c <sinf>
 801fda4:	ed9d 7a02 	vldr	s14, [sp, #8]
 801fda8:	eddd 7a01 	vldr	s15, [sp, #4]
 801fdac:	ee27 4a08 	vmul.f32	s8, s14, s16
 801fdb0:	ee20 2a09 	vmul.f32	s4, s0, s18
 801fdb4:	ee67 ba84 	vmul.f32	s23, s15, s8
 801fdb8:	ee6c 1a02 	vmul.f32	s3, s24, s4
 801fdbc:	ee7b baa9 	vadd.f32	s23, s23, s19
 801fdc0:	ee7b bae1 	vsub.f32	s23, s23, s3
 801fdc4:	ed8d 0a06 	vstr	s0, [sp, #24]
 801fdc8:	eeb0 0a6a 	vmov.f32	s0, s21
 801fdcc:	ed8d 4a05 	vstr	s8, [sp, #20]
 801fdd0:	ed8d 2a04 	vstr	s4, [sp, #16]
 801fdd4:	f011 fae6 	bl	80313a4 <cosf>
 801fdd8:	eeb4 aaeb 	vcmpe.f32	s20, s23
 801fddc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fde0:	eef0 aa40 	vmov.f32	s21, s0
 801fde4:	ed9d 2a04 	vldr	s4, [sp, #16]
 801fde8:	ed9d 4a05 	vldr	s8, [sp, #20]
 801fdec:	ed9d 7a07 	vldr	s14, [sp, #28]
 801fdf0:	eddd 7a08 	vldr	s15, [sp, #32]
 801fdf4:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 801fdf8:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 801fdfc:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 801fe00:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 801fe04:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 801fe08:	dc0f      	bgt.n	801fe2a <calculate_aabb_per_shape+0x16ca>
 801fe0a:	eef0 1a6b 	vmov.f32	s3, s23
 801fe0e:	ed9d 3a06 	vldr	s6, [sp, #24]
 801fe12:	eeb0 2a4b 	vmov.f32	s4, s22
 801fe16:	eef0 ba4a 	vmov.f32	s23, s20
 801fe1a:	ee20 4a08 	vmul.f32	s8, s0, s16
 801fe1e:	eddd aa02 	vldr	s21, [sp, #8]
 801fe22:	eeb0 aa61 	vmov.f32	s20, s3
 801fe26:	ee23 ba09 	vmul.f32	s22, s6, s18
 801fe2a:	ee2c 3a04 	vmul.f32	s6, s24, s8
 801fe2e:	ed9d 4a01 	vldr	s8, [sp, #4]
 801fe32:	ee33 3a28 	vadd.f32	s6, s6, s17
 801fe36:	ee24 2a02 	vmul.f32	s4, s8, s4
 801fe3a:	ee33 3a02 	vadd.f32	s6, s6, s4
 801fe3e:	ee3b 4ae9 	vsub.f32	s8, s23, s19
 801fe42:	ee33 3a68 	vsub.f32	s6, s6, s17
 801fe46:	ee24 2a04 	vmul.f32	s4, s8, s8
 801fe4a:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801fe4e:	ee23 3a03 	vmul.f32	s6, s6, s6
 801fe52:	ee32 0a03 	vadd.f32	s0, s4, s6
 801fe56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fe5a:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 801fe5e:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801fe62:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801fe66:	fe73 3aa1 	vselgt.f32	s7, s7, s3
 801fe6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fe6e:	edcd 3a02 	vstr	s7, [sp, #8]
 801fe72:	eeb1 2ac0 	vsqrt.f32	s4, s0
 801fe76:	f100 81a3 	bmi.w	80201c0 <calculate_aabb_per_shape+0x1a60>
 801fe7a:	ee84 0a02 	vdiv.f32	s0, s8, s4
 801fe7e:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801fe82:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801fe86:	ed8d 6a08 	vstr	s12, [sp, #32]
 801fe8a:	edcd 5a07 	vstr	s11, [sp, #28]
 801fe8e:	ed8d 5a06 	vstr	s10, [sp, #24]
 801fe92:	ed8d 7a04 	vstr	s14, [sp, #16]
 801fe96:	edcd 7a05 	vstr	s15, [sp, #20]
 801fe9a:	f011 f943 	bl	8031124 <acosf>
 801fe9e:	eddd 7a02 	vldr	s15, [sp, #8]
 801fea2:	ed5f 0a60 	vldr	s1, [pc, #-384]	@ 801fd24 <calculate_aabb_per_shape+0x15c4>
 801fea6:	ee20 0a27 	vmul.f32	s0, s0, s15
 801feaa:	ee30 0a20 	vadd.f32	s0, s0, s1
 801feae:	f011 f967 	bl	8031180 <fmodf>
 801feb2:	ee28 3a2a 	vmul.f32	s6, s16, s21
 801feb6:	eddd 7a01 	vldr	s15, [sp, #4]
 801feba:	ee2c 3a03 	vmul.f32	s6, s24, s6
 801febe:	ee27 ba8b 	vmul.f32	s22, s15, s22
 801fec2:	ee33 3a28 	vadd.f32	s6, s6, s17
 801fec6:	ee33 3a0b 	vadd.f32	s6, s6, s22
 801feca:	ee3a 4a69 	vsub.f32	s8, s20, s19
 801fece:	ee33 3a68 	vsub.f32	s6, s6, s17
 801fed2:	ee24 2a04 	vmul.f32	s4, s8, s8
 801fed6:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801feda:	ee23 3a03 	vmul.f32	s6, s6, s6
 801fede:	ed8d 0a02 	vstr	s0, [sp, #8]
 801fee2:	ee32 0a03 	vadd.f32	s0, s4, s6
 801fee6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801feea:	eeb7 ba00 	vmov.f32	s22, #112	@ 0x3f800000  1.0
 801feee:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801fef2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801fef6:	fe3b ba21 	vselgt.f32	s22, s22, s3
 801fefa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fefe:	eef1 aac0 	vsqrt.f32	s21, s0
 801ff02:	ed9d 7a04 	vldr	s14, [sp, #16]
 801ff06:	eddd 7a05 	vldr	s15, [sp, #20]
 801ff0a:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ff0e:	eddd 5a07 	vldr	s11, [sp, #28]
 801ff12:	ed9d 6a08 	vldr	s12, [sp, #32]
 801ff16:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801ff1a:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801ff1e:	f100 8130 	bmi.w	8020182 <calculate_aabb_per_shape+0x1a22>
 801ff22:	ee84 0a2a 	vdiv.f32	s0, s8, s21
 801ff26:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 801ff2a:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 801ff2e:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 801ff32:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 801ff36:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801ff3a:	ed8d 7a07 	vstr	s14, [sp, #28]
 801ff3e:	edcd 7a08 	vstr	s15, [sp, #32]
 801ff42:	f011 f8ef 	bl	8031124 <acosf>
 801ff46:	ed5f 0a89 	vldr	s1, [pc, #-548]	@ 801fd24 <calculate_aabb_per_shape+0x15c4>
 801ff4a:	ee20 0a0b 	vmul.f32	s0, s0, s22
 801ff4e:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ff52:	f011 f915 	bl	8031180 <fmodf>
 801ff56:	eddd 7a03 	vldr	s15, [sp, #12]
 801ff5a:	ed8d 0a04 	vstr	s0, [sp, #16]
 801ff5e:	ee27 0a88 	vmul.f32	s0, s15, s16
 801ff62:	ee89 0a00 	vdiv.f32	s0, s18, s0
 801ff66:	f011 f949 	bl	80311fc <atanf>
 801ff6a:	ed1f ba93 	vldr	s22, [pc, #-588]	@ 801fd20 <calculate_aabb_per_shape+0x15c0>
 801ff6e:	eef0 aa40 	vmov.f32	s21, s0
 801ff72:	ee30 ba0b 	vadd.f32	s22, s0, s22
 801ff76:	f011 fa15 	bl	80313a4 <cosf>
 801ff7a:	ee60 7a08 	vmul.f32	s15, s0, s16
 801ff7e:	eeb0 0a6a 	vmov.f32	s0, s21
 801ff82:	edcd 7a05 	vstr	s15, [sp, #20]
 801ff86:	f011 fa59 	bl	803143c <sinf>
 801ff8a:	eddd 7a05 	vldr	s15, [sp, #20]
 801ff8e:	ee20 7a09 	vmul.f32	s14, s0, s18
 801ff92:	ee6c aa27 	vmul.f32	s21, s24, s15
 801ff96:	eddd 6a01 	vldr	s13, [sp, #4]
 801ff9a:	ee7a aaa8 	vadd.f32	s21, s21, s17
 801ff9e:	ee26 3a87 	vmul.f32	s6, s13, s14
 801ffa2:	eeb0 0a4b 	vmov.f32	s0, s22
 801ffa6:	ee7a aa83 	vadd.f32	s21, s21, s6
 801ffaa:	ed8d 7a06 	vstr	s14, [sp, #24]
 801ffae:	f011 f9f9 	bl	80313a4 <cosf>
 801ffb2:	ed8d 0a03 	vstr	s0, [sp, #12]
 801ffb6:	eeb0 0a4b 	vmov.f32	s0, s22
 801ffba:	f011 fa3f 	bl	803143c <sinf>
 801ffbe:	ed9d 4a03 	vldr	s8, [sp, #12]
 801ffc2:	ee24 3a08 	vmul.f32	s6, s8, s16
 801ffc6:	eddd 6a01 	vldr	s13, [sp, #4]
 801ffca:	ee20 2a09 	vmul.f32	s4, s0, s18
 801ffce:	ee2c ba03 	vmul.f32	s22, s24, s6
 801ffd2:	ee66 1a82 	vmul.f32	s3, s13, s4
 801ffd6:	ee3b ba28 	vadd.f32	s22, s22, s17
 801ffda:	ee3b ba21 	vadd.f32	s22, s22, s3
 801ffde:	eef4 aacb 	vcmpe.f32	s21, s22
 801ffe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ffe6:	ed9d 7a07 	vldr	s14, [sp, #28]
 801ffea:	eddd 7a08 	vldr	s15, [sp, #32]
 801ffee:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 801fff2:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 801fff6:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 801fffa:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 801fffe:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020002:	dc11      	bgt.n	8020028 <calculate_aabb_per_shape+0x18c8>
 8020004:	ee24 4a08 	vmul.f32	s8, s8, s16
 8020008:	eef0 1a4b 	vmov.f32	s3, s22
 802000c:	ed9d 3a05 	vldr	s6, [sp, #20]
 8020010:	ed8d 4a05 	vstr	s8, [sp, #20]
 8020014:	ee20 4a09 	vmul.f32	s8, s0, s18
 8020018:	ed9d 2a06 	vldr	s4, [sp, #24]
 802001c:	eeb0 ba6a 	vmov.f32	s22, s21
 8020020:	ed8d 4a06 	vstr	s8, [sp, #24]
 8020024:	eef0 aa61 	vmov.f32	s21, s3
 8020028:	ed9d 4a01 	vldr	s8, [sp, #4]
 802002c:	ee24 9a03 	vmul.f32	s18, s8, s6
 8020030:	ee2c 2a02 	vmul.f32	s4, s24, s4
 8020034:	ee39 9a29 	vadd.f32	s18, s18, s19
 8020038:	ee39 9a42 	vsub.f32	s18, s18, s4
 802003c:	ee3b 3a68 	vsub.f32	s6, s22, s17
 8020040:	ee39 9a69 	vsub.f32	s18, s18, s19
 8020044:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 8020048:	ee29 2a09 	vmul.f32	s4, s18, s18
 802004c:	ee23 3a03 	vmul.f32	s6, s6, s6
 8020050:	ee32 0a03 	vadd.f32	s0, s4, s6
 8020054:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020058:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 802005c:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 8020060:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8020064:	fe38 8a02 	vselgt.f32	s16, s16, s4
 8020068:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802006c:	eeb1 4ac0 	vsqrt.f32	s8, s0
 8020070:	f100 8460 	bmi.w	8020934 <calculate_aabb_per_shape+0x21d4>
 8020074:	ee89 0a04 	vdiv.f32	s0, s18, s8
 8020078:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 802007c:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 8020080:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8020084:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020088:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 802008c:	edcd 7a08 	vstr	s15, [sp, #32]
 8020090:	ed8d 7a07 	vstr	s14, [sp, #28]
 8020094:	f011 f846 	bl	8031124 <acosf>
 8020098:	ed5f 0ade 	vldr	s1, [pc, #-888]	@ 801fd24 <calculate_aabb_per_shape+0x15c4>
 802009c:	ee20 0a08 	vmul.f32	s0, s0, s16
 80200a0:	ee30 0a20 	vadd.f32	s0, s0, s1
 80200a4:	f011 f86c 	bl	8031180 <fmodf>
 80200a8:	eddd 7a01 	vldr	s15, [sp, #4]
 80200ac:	ed9d 7a05 	vldr	s14, [sp, #20]
 80200b0:	ee27 9a87 	vmul.f32	s18, s15, s14
 80200b4:	eddd 7a06 	vldr	s15, [sp, #24]
 80200b8:	ee39 9a29 	vadd.f32	s18, s18, s19
 80200bc:	ee2c ca27 	vmul.f32	s24, s24, s15
 80200c0:	ee39 9a4c 	vsub.f32	s18, s18, s24
 80200c4:	ee3a 3ae8 	vsub.f32	s6, s21, s17
 80200c8:	ee39 9a69 	vsub.f32	s18, s18, s19
 80200cc:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 80200d0:	ee29 2a09 	vmul.f32	s4, s18, s18
 80200d4:	ee23 3a03 	vmul.f32	s6, s6, s6
 80200d8:	ed8d 0a03 	vstr	s0, [sp, #12]
 80200dc:	ee32 0a03 	vadd.f32	s0, s4, s6
 80200e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80200e4:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 80200e8:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 80200ec:	eeb5 0a40 	vcmp.f32	s0, #0.0
 80200f0:	fe38 8a02 	vselgt.f32	s16, s16, s4
 80200f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80200f8:	eeb1 cac0 	vsqrt.f32	s24, s0
 80200fc:	ed9d 7a07 	vldr	s14, [sp, #28]
 8020100:	eddd 7a08 	vldr	s15, [sp, #32]
 8020104:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 8020108:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 802010c:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 8020110:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020114:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020118:	f100 83ec 	bmi.w	80208f4 <calculate_aabb_per_shape+0x2194>
 802011c:	ee89 0a0c 	vdiv.f32	s0, s18, s24
 8020120:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020124:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 8020128:	ed8d 6a08 	vstr	s12, [sp, #32]
 802012c:	edcd 5a07 	vstr	s11, [sp, #28]
 8020130:	ed8d 5a06 	vstr	s10, [sp, #24]
 8020134:	edcd 7a05 	vstr	s15, [sp, #20]
 8020138:	ed8d 7a01 	vstr	s14, [sp, #4]
 802013c:	f010 fff2 	bl	8031124 <acosf>
 8020140:	eddf 0ad8 	vldr	s1, [pc, #864]	@ 80204a4 <calculate_aabb_per_shape+0x1d44>
 8020144:	ee20 0a08 	vmul.f32	s0, s0, s16
 8020148:	ee30 0a20 	vadd.f32	s0, s0, s1
 802014c:	f011 f818 	bl	8031180 <fmodf>
 8020150:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020154:	eeb0 8a40 	vmov.f32	s16, s0
 8020158:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 802015c:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020160:	eddd 5a07 	vldr	s11, [sp, #28]
 8020164:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020168:	eddd 7a05 	vldr	s15, [sp, #20]
 802016c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020170:	f7fe bdec 	b.w	801ed4c <calculate_aabb_per_shape+0x5ec>
 8020174:	eeb4 3ac1 	vcmpe.f32	s6, s2
 8020178:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802017c:	f6be acb4 	bge.w	801eae8 <calculate_aabb_per_shape+0x388>
 8020180:	e598      	b.n	801fcb4 <calculate_aabb_per_shape+0x1554>
 8020182:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8020186:	edcd 4a0a 	vstr	s9, [sp, #40]	@ 0x28
 802018a:	ed8d 6a09 	vstr	s12, [sp, #36]	@ 0x24
 802018e:	edcd 5a08 	vstr	s11, [sp, #32]
 8020192:	ed8d 5a07 	vstr	s10, [sp, #28]
 8020196:	ed8d 4a06 	vstr	s8, [sp, #24]
 802019a:	f011 f811 	bl	80311c0 <sqrtf>
 802019e:	eddd 6a0b 	vldr	s13, [sp, #44]	@ 0x2c
 80201a2:	eddd 4a0a 	vldr	s9, [sp, #40]	@ 0x28
 80201a6:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 80201aa:	eddd 5a08 	vldr	s11, [sp, #32]
 80201ae:	ed9d 5a07 	vldr	s10, [sp, #28]
 80201b2:	ed9d 4a06 	vldr	s8, [sp, #24]
 80201b6:	eddd 7a05 	vldr	s15, [sp, #20]
 80201ba:	ed9d 7a04 	vldr	s14, [sp, #16]
 80201be:	e6b0      	b.n	801ff22 <calculate_aabb_per_shape+0x17c2>
 80201c0:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 80201c4:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 80201c8:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 80201cc:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 80201d0:	ed8d 5a08 	vstr	s10, [sp, #32]
 80201d4:	ed8d 2a07 	vstr	s4, [sp, #28]
 80201d8:	ed8d 4a06 	vstr	s8, [sp, #24]
 80201dc:	edcd 7a05 	vstr	s15, [sp, #20]
 80201e0:	ed8d 7a04 	vstr	s14, [sp, #16]
 80201e4:	f010 ffec 	bl	80311c0 <sqrtf>
 80201e8:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 80201ec:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 80201f0:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 80201f4:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 80201f8:	ed9d 5a08 	vldr	s10, [sp, #32]
 80201fc:	ed9d 2a07 	vldr	s4, [sp, #28]
 8020200:	ed9d 4a06 	vldr	s8, [sp, #24]
 8020204:	eddd 7a05 	vldr	s15, [sp, #20]
 8020208:	ed9d 7a04 	vldr	s14, [sp, #16]
 802020c:	e635      	b.n	801fe7a <calculate_aabb_per_shape+0x171a>
 802020e:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8020212:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 8020216:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 802021a:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 802021e:	ed8d 5a08 	vstr	s10, [sp, #32]
 8020222:	edcd 1a07 	vstr	s3, [sp, #28]
 8020226:	ed8d 4a06 	vstr	s8, [sp, #24]
 802022a:	edcd 2a05 	vstr	s5, [sp, #20]
 802022e:	edcd 3a04 	vstr	s7, [sp, #16]
 8020232:	edcd 7a03 	vstr	s15, [sp, #12]
 8020236:	ed8d 7a02 	vstr	s14, [sp, #8]
 802023a:	f010 ffc1 	bl	80311c0 <sqrtf>
 802023e:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 8020242:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 8020246:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 802024a:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 802024e:	ed9d 5a08 	vldr	s10, [sp, #32]
 8020252:	eddd 1a07 	vldr	s3, [sp, #28]
 8020256:	ed9d 4a06 	vldr	s8, [sp, #24]
 802025a:	eddd 2a05 	vldr	s5, [sp, #20]
 802025e:	eddd 3a04 	vldr	s7, [sp, #16]
 8020262:	eddd 7a03 	vldr	s15, [sp, #12]
 8020266:	ed9d 7a02 	vldr	s14, [sp, #8]
 802026a:	f7fe bbd8 	b.w	801ea1e <calculate_aabb_per_shape+0x2be>
 802026e:	2b03      	cmp	r3, #3
 8020270:	eeb0 7a67 	vmov.f32	s14, s15
 8020274:	f000 80d7 	beq.w	8020426 <calculate_aabb_per_shape+0x1cc6>
 8020278:	2b0a      	cmp	r3, #10
 802027a:	f040 8115 	bne.w	80204a8 <calculate_aabb_per_shape+0x1d48>
 802027e:	ed94 2a04 	vldr	s4, [r4, #16]
 8020282:	ed94 3a05 	vldr	s6, [r4, #20]
 8020286:	eeb4 2a68 	vcmp.f32	s4, s17
 802028a:	ed94 7a06 	vldr	s14, [r4, #24]
 802028e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020292:	eeb4 3a49 	vcmp.f32	s6, s18
 8020296:	edd4 1a07 	vldr	s3, [r4, #28]
 802029a:	fe38 2a82 	vselgt.f32	s4, s17, s4
 802029e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80202a2:	eeb4 7a68 	vcmp.f32	s14, s17
 80202a6:	fe39 3a03 	vselgt.f32	s6, s18, s6
 80202aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80202ae:	eef4 1a49 	vcmp.f32	s3, s18
 80202b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80202b6:	bf48      	it	mi
 80202b8:	eeb0 7a68 	vmovmi.f32	s14, s17
 80202bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80202c0:	ee17 3a90 	vmov	r3, s15
 80202c4:	bf48      	it	mi
 80202c6:	eef0 1a49 	vmovmi.f32	s3, s18
 80202ca:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80202ce:	105b      	asrs	r3, r3, #1
 80202d0:	2b00      	cmp	r3, #0
 80202d2:	ed84 2a04 	vstr	s4, [r4, #16]
 80202d6:	ed84 3a05 	vstr	s6, [r4, #20]
 80202da:	ed84 7a06 	vstr	s14, [r4, #24]
 80202de:	edc4 1a07 	vstr	s3, [r4, #28]
 80202e2:	f340 80ba 	ble.w	802045a <calculate_aabb_per_shape+0x1cfa>
 80202e6:	005b      	lsls	r3, r3, #1
 80202e8:	eb03 0c07 	add.w	ip, r3, r7
 80202ec:	eb01 0c8c 	add.w	ip, r1, ip, lsl #2
 80202f0:	eb01 0187 	add.w	r1, r1, r7, lsl #2
 80202f4:	f1b8 0f00 	cmp.w	r8, #0
 80202f8:	d167      	bne.n	80203ca <calculate_aabb_per_shape+0x1c6a>
 80202fa:	edd1 8a00 	vldr	s17, [r1]
 80202fe:	ed91 9a01 	vldr	s18, [r1, #4]
 8020302:	eeb4 2a68 	vcmp.f32	s4, s17
 8020306:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802030a:	eeb4 3a49 	vcmp.f32	s6, s18
 802030e:	fe38 2a82 	vselgt.f32	s4, s17, s4
 8020312:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020316:	eeb4 7a68 	vcmp.f32	s14, s17
 802031a:	fe39 3a03 	vselgt.f32	s6, s18, s6
 802031e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020322:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020326:	bf48      	it	mi
 8020328:	eeb0 7a68 	vmovmi.f32	s14, s17
 802032c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020330:	ed84 2a04 	vstr	s4, [r4, #16]
 8020334:	ed84 3a05 	vstr	s6, [r4, #20]
 8020338:	ed84 7a06 	vstr	s14, [r4, #24]
 802033c:	f101 0108 	add.w	r1, r1, #8
 8020340:	dc7a      	bgt.n	8020438 <calculate_aabb_per_shape+0x1cd8>
 8020342:	4561      	cmp	r1, ip
 8020344:	edc4 1a07 	vstr	s3, [r4, #28]
 8020348:	d1d7      	bne.n	80202fa <calculate_aabb_per_shape+0x1b9a>
 802034a:	441f      	add	r7, r3
 802034c:	ee78 7ace 	vsub.f32	s15, s17, s28
 8020350:	eef5 7a40 	vcmp.f32	s15, #0.0
 8020354:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020358:	d106      	bne.n	8020368 <calculate_aabb_per_shape+0x1c08>
 802035a:	ee79 7a6c 	vsub.f32	s15, s18, s25
 802035e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8020362:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020366:	d073      	beq.n	8020450 <calculate_aabb_per_shape+0x1cf0>
 8020368:	eeb4 ea42 	vcmp.f32	s28, s4
 802036c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020370:	eef4 ca43 	vcmp.f32	s25, s6
 8020374:	bf48      	it	mi
 8020376:	eeb0 2a4e 	vmovmi.f32	s4, s28
 802037a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802037e:	eeb4 ea47 	vcmp.f32	s28, s14
 8020382:	bf48      	it	mi
 8020384:	eeb0 3a6c 	vmovmi.f32	s6, s25
 8020388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802038c:	eef4 ca61 	vcmp.f32	s25, s3
 8020390:	fe3e 7a07 	vselgt.f32	s14, s28, s14
 8020394:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020398:	fe7c 1aa1 	vselgt.f32	s3, s25, s3
 802039c:	ed84 7a06 	vstr	s14, [r4, #24]
 80203a0:	ed84 2a04 	vstr	s4, [r4, #16]
 80203a4:	ed84 3a05 	vstr	s6, [r4, #20]
 80203a8:	edc4 1a07 	vstr	s3, [r4, #28]
 80203ac:	eef0 7a6c 	vmov.f32	s15, s25
 80203b0:	eeb0 7a4e 	vmov.f32	s14, s28
 80203b4:	7812      	ldrb	r2, [r2, #0]
 80203b6:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 80203ba:	f7fe ba60 	b.w	801e87e <calculate_aabb_per_shape+0x11e>
 80203be:	4561      	cmp	r1, ip
 80203c0:	ed84 9a07 	vstr	s18, [r4, #28]
 80203c4:	eef0 1a49 	vmov.f32	s3, s18
 80203c8:	d0bf      	beq.n	802034a <calculate_aabb_per_shape+0x1bea>
 80203ca:	edd1 7a00 	vldr	s15, [r1]
 80203ce:	ee78 8aa7 	vadd.f32	s17, s17, s15
 80203d2:	edd1 7a01 	vldr	s15, [r1, #4]
 80203d6:	eef4 8a42 	vcmp.f32	s17, s4
 80203da:	ee39 9a27 	vadd.f32	s18, s18, s15
 80203de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203e2:	eeb4 9a43 	vcmp.f32	s18, s6
 80203e6:	bf48      	it	mi
 80203e8:	eeb0 2a68 	vmovmi.f32	s4, s17
 80203ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203f0:	eef4 8a47 	vcmp.f32	s17, s14
 80203f4:	bf48      	it	mi
 80203f6:	eeb0 3a49 	vmovmi.f32	s6, s18
 80203fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203fe:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020402:	fe38 7a87 	vselgt.f32	s14, s17, s14
 8020406:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802040a:	ed84 2a04 	vstr	s4, [r4, #16]
 802040e:	ed84 3a05 	vstr	s6, [r4, #20]
 8020412:	ed84 7a06 	vstr	s14, [r4, #24]
 8020416:	f101 0108 	add.w	r1, r1, #8
 802041a:	dcd0      	bgt.n	80203be <calculate_aabb_per_shape+0x1c5e>
 802041c:	4561      	cmp	r1, ip
 802041e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020422:	d1d2      	bne.n	80203ca <calculate_aabb_per_shape+0x1c6a>
 8020424:	e791      	b.n	802034a <calculate_aabb_per_shape+0x1bea>
 8020426:	f1b8 0f00 	cmp.w	r8, #0
 802042a:	d00d      	beq.n	8020448 <calculate_aabb_per_shape+0x1ce8>
 802042c:	ee37 7aa8 	vadd.f32	s14, s15, s17
 8020430:	eef0 7a49 	vmov.f32	s15, s18
 8020434:	f7fe ba22 	b.w	801e87c <calculate_aabb_per_shape+0x11c>
 8020438:	4561      	cmp	r1, ip
 802043a:	ed84 9a07 	vstr	s18, [r4, #28]
 802043e:	eef0 1a49 	vmov.f32	s3, s18
 8020442:	f47f af5a 	bne.w	80202fa <calculate_aabb_per_shape+0x1b9a>
 8020446:	e780      	b.n	802034a <calculate_aabb_per_shape+0x1bea>
 8020448:	eef0 7a49 	vmov.f32	s15, s18
 802044c:	f7fe ba16 	b.w	801e87c <calculate_aabb_per_shape+0x11c>
 8020450:	eef0 7a49 	vmov.f32	s15, s18
 8020454:	eeb0 7a68 	vmov.f32	s14, s17
 8020458:	e7ac      	b.n	80203b4 <calculate_aabb_per_shape+0x1c54>
 802045a:	4665      	mov	r5, ip
 802045c:	e776      	b.n	802034c <calculate_aabb_per_shape+0x1bec>
 802045e:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8020462:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 8020466:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 802046a:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 802046e:	ed8d 5a08 	vstr	s10, [sp, #32]
 8020472:	edcd 1a07 	vstr	s3, [sp, #28]
 8020476:	edcd 7a06 	vstr	s15, [sp, #24]
 802047a:	ed8d 7a05 	vstr	s14, [sp, #20]
 802047e:	f010 fe9f 	bl	80311c0 <sqrtf>
 8020482:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 8020486:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 802048a:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 802048e:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 8020492:	ed9d 5a08 	vldr	s10, [sp, #32]
 8020496:	eddd 1a07 	vldr	s3, [sp, #28]
 802049a:	eddd 7a06 	vldr	s15, [sp, #24]
 802049e:	ed9d 7a05 	vldr	s14, [sp, #20]
 80204a2:	e417      	b.n	801fcd4 <calculate_aabb_per_shape+0x1574>
 80204a4:	40c90fdb 	.word	0x40c90fdb
 80204a8:	2b0b      	cmp	r3, #11
 80204aa:	f47f aa0d 	bne.w	801f8c8 <calculate_aabb_per_shape+0x1168>
 80204ae:	ed94 7a04 	vldr	s14, [r4, #16]
 80204b2:	ed94 3a05 	vldr	s6, [r4, #20]
 80204b6:	eeb4 7a68 	vcmp.f32	s14, s17
 80204ba:	ed94 2a06 	vldr	s4, [r4, #24]
 80204be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80204c2:	eeb4 3a49 	vcmp.f32	s6, s18
 80204c6:	edd4 1a07 	vldr	s3, [r4, #28]
 80204ca:	fe38 7a87 	vselgt.f32	s14, s17, s14
 80204ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80204d2:	eeb4 2a68 	vcmp.f32	s4, s17
 80204d6:	fe39 3a03 	vselgt.f32	s6, s18, s6
 80204da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80204de:	eef4 1a49 	vcmp.f32	s3, s18
 80204e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80204e6:	bf48      	it	mi
 80204e8:	eeb0 2a68 	vmovmi.f32	s4, s17
 80204ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80204f0:	ee17 3a90 	vmov	r3, s15
 80204f4:	bf48      	it	mi
 80204f6:	eef0 1a49 	vmovmi.f32	s3, s18
 80204fa:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80204fe:	105b      	asrs	r3, r3, #1
 8020500:	2b00      	cmp	r3, #0
 8020502:	ed84 7a04 	vstr	s14, [r4, #16]
 8020506:	ed84 3a05 	vstr	s6, [r4, #20]
 802050a:	ed84 2a06 	vstr	s4, [r4, #24]
 802050e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020512:	dd77      	ble.n	8020604 <calculate_aabb_per_shape+0x1ea4>
 8020514:	005b      	lsls	r3, r3, #1
 8020516:	eb03 0c07 	add.w	ip, r3, r7
 802051a:	eb01 0c8c 	add.w	ip, r1, ip, lsl #2
 802051e:	eb01 0187 	add.w	r1, r1, r7, lsl #2
 8020522:	f1b8 0f00 	cmp.w	r8, #0
 8020526:	d138      	bne.n	802059a <calculate_aabb_per_shape+0x1e3a>
 8020528:	edd1 8a00 	vldr	s17, [r1]
 802052c:	ed91 9a01 	vldr	s18, [r1, #4]
 8020530:	eef4 8a47 	vcmp.f32	s17, s14
 8020534:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020538:	eeb4 9a43 	vcmp.f32	s18, s6
 802053c:	bf48      	it	mi
 802053e:	eeb0 7a68 	vmovmi.f32	s14, s17
 8020542:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020546:	eef4 8a42 	vcmp.f32	s17, s4
 802054a:	bf48      	it	mi
 802054c:	eeb0 3a49 	vmovmi.f32	s6, s18
 8020550:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020554:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020558:	fe38 2a82 	vselgt.f32	s4, s17, s4
 802055c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020560:	ed84 7a04 	vstr	s14, [r4, #16]
 8020564:	ed84 3a05 	vstr	s6, [r4, #20]
 8020568:	ed84 2a06 	vstr	s4, [r4, #24]
 802056c:	f101 0108 	add.w	r1, r1, #8
 8020570:	dc41      	bgt.n	80205f6 <calculate_aabb_per_shape+0x1e96>
 8020572:	458c      	cmp	ip, r1
 8020574:	edc4 1a07 	vstr	s3, [r4, #28]
 8020578:	d1d6      	bne.n	8020528 <calculate_aabb_per_shape+0x1dc8>
 802057a:	7812      	ldrb	r2, [r2, #0]
 802057c:	441f      	add	r7, r3
 802057e:	eef0 7a49 	vmov.f32	s15, s18
 8020582:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 8020586:	eeb0 7a68 	vmov.f32	s14, s17
 802058a:	f7fe b978 	b.w	801e87e <calculate_aabb_per_shape+0x11e>
 802058e:	4561      	cmp	r1, ip
 8020590:	ed84 9a07 	vstr	s18, [r4, #28]
 8020594:	d0f1      	beq.n	802057a <calculate_aabb_per_shape+0x1e1a>
 8020596:	eef0 1a49 	vmov.f32	s3, s18
 802059a:	edd1 7a00 	vldr	s15, [r1]
 802059e:	ee78 8aa7 	vadd.f32	s17, s17, s15
 80205a2:	edd1 7a01 	vldr	s15, [r1, #4]
 80205a6:	eef4 8a47 	vcmp.f32	s17, s14
 80205aa:	ee39 9a27 	vadd.f32	s18, s18, s15
 80205ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205b2:	eeb4 9a43 	vcmp.f32	s18, s6
 80205b6:	bf48      	it	mi
 80205b8:	eeb0 7a68 	vmovmi.f32	s14, s17
 80205bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205c0:	eef4 8a42 	vcmp.f32	s17, s4
 80205c4:	bf48      	it	mi
 80205c6:	eeb0 3a49 	vmovmi.f32	s6, s18
 80205ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205ce:	eeb4 9ae1 	vcmpe.f32	s18, s3
 80205d2:	fe38 2a82 	vselgt.f32	s4, s17, s4
 80205d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205da:	ed84 7a04 	vstr	s14, [r4, #16]
 80205de:	ed84 3a05 	vstr	s6, [r4, #20]
 80205e2:	ed84 2a06 	vstr	s4, [r4, #24]
 80205e6:	f101 0108 	add.w	r1, r1, #8
 80205ea:	dcd0      	bgt.n	802058e <calculate_aabb_per_shape+0x1e2e>
 80205ec:	4561      	cmp	r1, ip
 80205ee:	edc4 1a07 	vstr	s3, [r4, #28]
 80205f2:	d1d2      	bne.n	802059a <calculate_aabb_per_shape+0x1e3a>
 80205f4:	e7c1      	b.n	802057a <calculate_aabb_per_shape+0x1e1a>
 80205f6:	4561      	cmp	r1, ip
 80205f8:	ed84 9a07 	vstr	s18, [r4, #28]
 80205fc:	d0bd      	beq.n	802057a <calculate_aabb_per_shape+0x1e1a>
 80205fe:	eef0 1a49 	vmov.f32	s3, s18
 8020602:	e791      	b.n	8020528 <calculate_aabb_per_shape+0x1dc8>
 8020604:	7812      	ldrb	r2, [r2, #0]
 8020606:	4665      	mov	r5, ip
 8020608:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 802060c:	eef0 7a49 	vmov.f32	s15, s18
 8020610:	eeb0 7a68 	vmov.f32	s14, s17
 8020614:	f7fe b933 	b.w	801e87e <calculate_aabb_per_shape+0x11e>
 8020618:	f010 fdd2 	bl	80311c0 <sqrtf>
 802061c:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020620:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 8020624:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020628:	eddd 5a07 	vldr	s11, [sp, #28]
 802062c:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020630:	eddd 7a05 	vldr	s15, [sp, #20]
 8020634:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020638:	f7fe bbea 	b.w	801ee10 <calculate_aabb_per_shape+0x6b0>
 802063c:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8020640:	edcd 4a0a 	vstr	s9, [sp, #40]	@ 0x28
 8020644:	ed8d 6a09 	vstr	s12, [sp, #36]	@ 0x24
 8020648:	edcd 5a08 	vstr	s11, [sp, #32]
 802064c:	ed8d 5a07 	vstr	s10, [sp, #28]
 8020650:	ed8d 2a06 	vstr	s4, [sp, #24]
 8020654:	edcd 7a05 	vstr	s15, [sp, #20]
 8020658:	ed8d 7a01 	vstr	s14, [sp, #4]
 802065c:	f010 fdb0 	bl	80311c0 <sqrtf>
 8020660:	eddd 6a0b 	vldr	s13, [sp, #44]	@ 0x2c
 8020664:	eddd 4a0a 	vldr	s9, [sp, #40]	@ 0x28
 8020668:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 802066c:	eddd 5a08 	vldr	s11, [sp, #32]
 8020670:	ed9d 5a07 	vldr	s10, [sp, #28]
 8020674:	ed9d 2a06 	vldr	s4, [sp, #24]
 8020678:	eddd 7a05 	vldr	s15, [sp, #20]
 802067c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020680:	f7fe bb80 	b.w	801ed84 <calculate_aabb_per_shape+0x624>
 8020684:	eeb0 0a42 	vmov.f32	s0, s4
 8020688:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 802068c:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 8020690:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8020694:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020698:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 802069c:	edcd 1a08 	vstr	s3, [sp, #32]
 80206a0:	ed8d 3a07 	vstr	s6, [sp, #28]
 80206a4:	ed8d 7a05 	vstr	s14, [sp, #20]
 80206a8:	ed8d 2a01 	vstr	s4, [sp, #4]
 80206ac:	edcd 7a06 	vstr	s15, [sp, #24]
 80206b0:	ed8d 4a03 	vstr	s8, [sp, #12]
 80206b4:	f010 fd84 	bl	80311c0 <sqrtf>
 80206b8:	ed9d 4a03 	vldr	s8, [sp, #12]
 80206bc:	ee8f 8a04 	vdiv.f32	s16, s30, s8
 80206c0:	eeb0 0a48 	vmov.f32	s0, s16
 80206c4:	f010 fd2e 	bl	8031124 <acosf>
 80206c8:	eef0 7a4c 	vmov.f32	s15, s24
 80206cc:	ee4a 7a80 	vmla.f32	s15, s21, s0
 80206d0:	eef0 0a4c 	vmov.f32	s1, s24
 80206d4:	eeb0 0a67 	vmov.f32	s0, s15
 80206d8:	f010 fd52 	bl	8031180 <fmodf>
 80206dc:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 80206e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80206e4:	ed8d 0a03 	vstr	s0, [sp, #12]
 80206e8:	ee78 aa89 	vadd.f32	s21, s17, s18
 80206ec:	ed9d 2a01 	vldr	s4, [sp, #4]
 80206f0:	ed9d 7a05 	vldr	s14, [sp, #20]
 80206f4:	eddd 7a06 	vldr	s15, [sp, #24]
 80206f8:	ed9d 3a07 	vldr	s6, [sp, #28]
 80206fc:	eddd 1a08 	vldr	s3, [sp, #32]
 8020700:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 8020704:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 8020708:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 802070c:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020710:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020714:	dd49      	ble.n	80207aa <calculate_aabb_per_shape+0x204a>
 8020716:	eeb0 9a43 	vmov.f32	s18, s6
 802071a:	eeb0 0a42 	vmov.f32	s0, s4
 802071e:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020722:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 8020726:	ed8d 6a08 	vstr	s12, [sp, #32]
 802072a:	edcd 5a07 	vstr	s11, [sp, #28]
 802072e:	ed8d 5a06 	vstr	s10, [sp, #24]
 8020732:	edcd 7a05 	vstr	s15, [sp, #20]
 8020736:	ed8d 7a01 	vstr	s14, [sp, #4]
 802073a:	f010 fd41 	bl	80311c0 <sqrtf>
 802073e:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020742:	eddd 7a05 	vldr	s15, [sp, #20]
 8020746:	ed9d 5a06 	vldr	s10, [sp, #24]
 802074a:	eddd 5a07 	vldr	s11, [sp, #28]
 802074e:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020752:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 8020756:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 802075a:	f7ff ba48 	b.w	801fbee <calculate_aabb_per_shape+0x148e>
 802075e:	eeb0 0a4a 	vmov.f32	s0, s20
 8020762:	f010 fd2d 	bl	80311c0 <sqrtf>
 8020766:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 802076a:	f010 fcdb 	bl	8031124 <acosf>
 802076e:	ed5f 0ab3 	vldr	s1, [pc, #-716]	@ 80204a4 <calculate_aabb_per_shape+0x1d44>
 8020772:	ee30 0ac0 	vsub.f32	s0, s1, s0
 8020776:	f010 fd03 	bl	8031180 <fmodf>
 802077a:	ed8d 0a02 	vstr	s0, [sp, #8]
 802077e:	eeb0 0a4a 	vmov.f32	s0, s20
 8020782:	f010 fd1d 	bl	80311c0 <sqrtf>
 8020786:	ee39 aa88 	vadd.f32	s20, s19, s16
 802078a:	eddd 6a08 	vldr	s13, [sp, #32]
 802078e:	eddd 4a07 	vldr	s9, [sp, #28]
 8020792:	ed9d 6a06 	vldr	s12, [sp, #24]
 8020796:	eddd 5a05 	vldr	s11, [sp, #20]
 802079a:	ed9d 5a04 	vldr	s10, [sp, #16]
 802079e:	eddd 7a03 	vldr	s15, [sp, #12]
 80207a2:	ed9d 7a01 	vldr	s14, [sp, #4]
 80207a6:	f7ff b9a1 	b.w	801faec <calculate_aabb_per_shape+0x138c>
 80207aa:	eeb5 2a40 	vcmp.f32	s4, #0.0
 80207ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207b2:	eeb0 9a61 	vmov.f32	s18, s3
 80207b6:	d4b0      	bmi.n	802071a <calculate_aabb_per_shape+0x1fba>
 80207b8:	f7ff ba19 	b.w	801fbee <calculate_aabb_per_shape+0x148e>
 80207bc:	eeb0 0a42 	vmov.f32	s0, s4
 80207c0:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80207c4:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 80207c8:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 80207cc:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 80207d0:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 80207d4:	edcd 1a08 	vstr	s3, [sp, #32]
 80207d8:	ed8d 3a07 	vstr	s6, [sp, #28]
 80207dc:	ed8d 7a05 	vstr	s14, [sp, #20]
 80207e0:	ed8d 2a01 	vstr	s4, [sp, #4]
 80207e4:	edcd 7a06 	vstr	s15, [sp, #24]
 80207e8:	ed8d 4a03 	vstr	s8, [sp, #12]
 80207ec:	f010 fce8 	bl	80311c0 <sqrtf>
 80207f0:	ed9d 4a03 	vldr	s8, [sp, #12]
 80207f4:	ee8f 9a04 	vdiv.f32	s18, s30, s8
 80207f8:	eeb0 0a49 	vmov.f32	s0, s18
 80207fc:	f010 fc92 	bl	8031124 <acosf>
 8020800:	eef0 7a4c 	vmov.f32	s15, s24
 8020804:	ee4a 7a80 	vmla.f32	s15, s21, s0
 8020808:	eef0 0a4c 	vmov.f32	s1, s24
 802080c:	eeb0 0a67 	vmov.f32	s0, s15
 8020810:	f010 fcb6 	bl	8031180 <fmodf>
 8020814:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8020818:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802081c:	ed8d 0a03 	vstr	s0, [sp, #12]
 8020820:	ee78 aa88 	vadd.f32	s21, s17, s16
 8020824:	ed9d 2a01 	vldr	s4, [sp, #4]
 8020828:	ed9d 7a05 	vldr	s14, [sp, #20]
 802082c:	eddd 7a06 	vldr	s15, [sp, #24]
 8020830:	ed9d 3a07 	vldr	s6, [sp, #28]
 8020834:	eddd 1a08 	vldr	s3, [sp, #32]
 8020838:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 802083c:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 8020840:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 8020844:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020848:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 802084c:	dd49      	ble.n	80208e2 <calculate_aabb_per_shape+0x2182>
 802084e:	eeb0 8a43 	vmov.f32	s16, s6
 8020852:	eeb0 0a42 	vmov.f32	s0, s4
 8020856:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 802085a:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 802085e:	ed8d 6a08 	vstr	s12, [sp, #32]
 8020862:	edcd 5a07 	vstr	s11, [sp, #28]
 8020866:	ed8d 5a06 	vstr	s10, [sp, #24]
 802086a:	edcd 7a05 	vstr	s15, [sp, #20]
 802086e:	ed8d 7a01 	vstr	s14, [sp, #4]
 8020872:	f010 fca5 	bl	80311c0 <sqrtf>
 8020876:	ed9d 7a01 	vldr	s14, [sp, #4]
 802087a:	eddd 7a05 	vldr	s15, [sp, #20]
 802087e:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020882:	eddd 5a07 	vldr	s11, [sp, #28]
 8020886:	ed9d 6a08 	vldr	s12, [sp, #32]
 802088a:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 802088e:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020892:	f7fe ba31 	b.w	801ecf8 <calculate_aabb_per_shape+0x598>
 8020896:	eeb0 0a4a 	vmov.f32	s0, s20
 802089a:	f010 fc91 	bl	80311c0 <sqrtf>
 802089e:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 80208a2:	f010 fc3f 	bl	8031124 <acosf>
 80208a6:	eddf 0a35 	vldr	s1, [pc, #212]	@ 802097c <calculate_aabb_per_shape+0x221c>
 80208aa:	ee30 0ac0 	vsub.f32	s0, s1, s0
 80208ae:	f010 fc67 	bl	8031180 <fmodf>
 80208b2:	ed8d 0a02 	vstr	s0, [sp, #8]
 80208b6:	eeb0 0a4a 	vmov.f32	s0, s20
 80208ba:	f010 fc81 	bl	80311c0 <sqrtf>
 80208be:	ee39 aa89 	vadd.f32	s20, s19, s18
 80208c2:	eddd 6a08 	vldr	s13, [sp, #32]
 80208c6:	eddd 4a07 	vldr	s9, [sp, #28]
 80208ca:	ed9d 6a06 	vldr	s12, [sp, #24]
 80208ce:	eddd 5a05 	vldr	s11, [sp, #20]
 80208d2:	ed9d 5a04 	vldr	s10, [sp, #16]
 80208d6:	eddd 7a03 	vldr	s15, [sp, #12]
 80208da:	ed9d 7a01 	vldr	s14, [sp, #4]
 80208de:	f7fe b98a 	b.w	801ebf6 <calculate_aabb_per_shape+0x496>
 80208e2:	eeb5 2a40 	vcmp.f32	s4, #0.0
 80208e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80208ea:	eeb0 8a61 	vmov.f32	s16, s3
 80208ee:	f57e aa03 	bpl.w	801ecf8 <calculate_aabb_per_shape+0x598>
 80208f2:	e7ae      	b.n	8020852 <calculate_aabb_per_shape+0x20f2>
 80208f4:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 80208f8:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 80208fc:	ed8d 6a08 	vstr	s12, [sp, #32]
 8020900:	edcd 5a07 	vstr	s11, [sp, #28]
 8020904:	ed8d 5a06 	vstr	s10, [sp, #24]
 8020908:	edcd 7a05 	vstr	s15, [sp, #20]
 802090c:	ed8d 7a01 	vstr	s14, [sp, #4]
 8020910:	f010 fc56 	bl	80311c0 <sqrtf>
 8020914:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020918:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 802091c:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020920:	eddd 5a07 	vldr	s11, [sp, #28]
 8020924:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020928:	eddd 7a05 	vldr	s15, [sp, #20]
 802092c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020930:	f7ff bbf4 	b.w	802011c <calculate_aabb_per_shape+0x19bc>
 8020934:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8020938:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 802093c:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8020940:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020944:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 8020948:	ed8d 4a08 	vstr	s8, [sp, #32]
 802094c:	edcd 7a07 	vstr	s15, [sp, #28]
 8020950:	ed8d 7a03 	vstr	s14, [sp, #12]
 8020954:	f010 fc34 	bl	80311c0 <sqrtf>
 8020958:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 802095c:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020960:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 8020964:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 8020968:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 802096c:	ed9d 4a08 	vldr	s8, [sp, #32]
 8020970:	eddd 7a07 	vldr	s15, [sp, #28]
 8020974:	ed9d 7a03 	vldr	s14, [sp, #12]
 8020978:	f7ff bb7c 	b.w	8020074 <calculate_aabb_per_shape+0x1914>
 802097c:	40c90fdb 	.word	0x40c90fdb

08020980 <_ZN8touchgfx8HALGPU2D17unlockFrameBufferEv>:
 8020980:	f7ea bb86 	b.w	800b090 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

08020984 <_ZN8touchgfx8HALGPU2D10beginFrameEv>:
 8020984:	2200      	movs	r2, #0
 8020986:	f880 20a5 	strb.w	r2, [r0, #165]	@ 0xa5
 802098a:	f7ea ba85 	b.w	800ae98 <_ZN8touchgfx3HAL10beginFrameEv>
 802098e:	bf00      	nop

08020990 <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv>:
 8020990:	b538      	push	{r3, r4, r5, lr}
 8020992:	f890 30a5 	ldrb.w	r3, [r0, #165]	@ 0xa5
 8020996:	4604      	mov	r4, r0
 8020998:	f100 057c 	add.w	r5, r0, #124	@ 0x7c
 802099c:	b12b      	cbz	r3, 80209aa <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv+0x1a>
 802099e:	2300      	movs	r3, #0
 80209a0:	4628      	mov	r0, r5
 80209a2:	f884 30a5 	strb.w	r3, [r4, #165]	@ 0xa5
 80209a6:	f7fd fa43 	bl	801de30 <nema_cl_submit>
 80209aa:	4628      	mov	r0, r5
 80209ac:	f7fd faba 	bl	801df24 <nema_cl_wait>
 80209b0:	4620      	mov	r0, r4
 80209b2:	f7eb f827 	bl	800ba04 <_ZN8touchgfx3HAL15lockFrameBufferEv>
 80209b6:	2300      	movs	r3, #0
 80209b8:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 80209bc:	bd38      	pop	{r3, r4, r5, pc}
 80209be:	bf00      	nop

080209c0 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>:
 80209c0:	b508      	push	{r3, lr}
 80209c2:	4a03      	ldr	r2, [pc, #12]	@ (80209d0 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x10>)
 80209c4:	4b03      	ldr	r3, [pc, #12]	@ (80209d4 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x14>)
 80209c6:	2118      	movs	r1, #24
 80209c8:	4803      	ldr	r0, [pc, #12]	@ (80209d8 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x18>)
 80209ca:	f011 fd5d 	bl	8032488 <__assert_func>
 80209ce:	bf00      	nop
 80209d0:	08035ed4 	.word	0x08035ed4
 80209d4:	08035d80 	.word	0x08035d80
 80209d8:	08035dd8 	.word	0x08035dd8

080209dc <_ZN8touchgfx8HALGPU2D8endFrameEv>:
 80209dc:	b538      	push	{r3, r4, r5, lr}
 80209de:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 80209e2:	4604      	mov	r4, r0
 80209e4:	b97b      	cbnz	r3, 8020a06 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x2a>
 80209e6:	f894 30a5 	ldrb.w	r3, [r4, #165]	@ 0xa5
 80209ea:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
 80209ee:	b113      	cbz	r3, 80209f6 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x1a>
 80209f0:	4628      	mov	r0, r5
 80209f2:	f7fd fa1d 	bl	801de30 <nema_cl_submit>
 80209f6:	4628      	mov	r0, r5
 80209f8:	f7fd fa94 	bl	801df24 <nema_cl_wait>
 80209fc:	4620      	mov	r0, r4
 80209fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020a02:	f7ea ba55 	b.w	800aeb0 <_ZN8touchgfx3HAL8endFrameEv>
 8020a06:	6840      	ldr	r0, [r0, #4]
 8020a08:	4906      	ldr	r1, [pc, #24]	@ (8020a24 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x48>)
 8020a0a:	6803      	ldr	r3, [r0, #0]
 8020a0c:	689a      	ldr	r2, [r3, #8]
 8020a0e:	428a      	cmp	r2, r1
 8020a10:	d105      	bne.n	8020a1e <_ZN8touchgfx8HALGPU2D8endFrameEv+0x42>
 8020a12:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8020a14:	4798      	blx	r3
 8020a16:	2300      	movs	r3, #0
 8020a18:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8020a1c:	e7e3      	b.n	80209e6 <_ZN8touchgfx8HALGPU2D8endFrameEv+0xa>
 8020a1e:	4790      	blx	r2
 8020a20:	e7f9      	b.n	8020a16 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x3a>
 8020a22:	bf00      	nop
 8020a24:	0800204d 	.word	0x0800204d

08020a28 <_ZN8touchgfx8HALGPU2D10initializeEv>:
 8020a28:	b570      	push	{r4, r5, r6, lr}
 8020a2a:	4606      	mov	r6, r0
 8020a2c:	b08a      	sub	sp, #40	@ 0x28
 8020a2e:	466c      	mov	r4, sp
 8020a30:	f7ea fa4b 	bl	800aeca <_ZN8touchgfx3HAL10initializeEv>
 8020a34:	f106 057c 	add.w	r5, r6, #124	@ 0x7c
 8020a38:	4668      	mov	r0, sp
 8020a3a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8020a3e:	f7fc ff59 	bl	801d8f4 <nema_cl_create_sized>
 8020a42:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020a44:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020a46:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020a48:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020a4a:	e894 0003 	ldmia.w	r4, {r0, r1}
 8020a4e:	e885 0003 	stmia.w	r5, {r0, r1}
 8020a52:	f8d6 3088 	ldr.w	r3, [r6, #136]	@ 0x88
 8020a56:	b10b      	cbz	r3, 8020a5c <_ZN8touchgfx8HALGPU2D10initializeEv+0x34>
 8020a58:	b00a      	add	sp, #40	@ 0x28
 8020a5a:	bd70      	pop	{r4, r5, r6, pc}
 8020a5c:	f7ff ffb0 	bl	80209c0 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>

08020a60 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
 8020a60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020a62:	f04f 0c01 	mov.w	ip, #1
 8020a66:	2500      	movs	r5, #0
 8020a68:	f8bd 7014 	ldrh.w	r7, [sp, #20]
 8020a6c:	f8bd 6018 	ldrh.w	r6, [sp, #24]
 8020a70:	60c3      	str	r3, [r0, #12]
 8020a72:	42b7      	cmp	r7, r6
 8020a74:	bf2c      	ite	cs
 8020a76:	f04f 0e00 	movcs.w	lr, #0
 8020a7a:	f04f 0e01 	movcc.w	lr, #1
 8020a7e:	4b23      	ldr	r3, [pc, #140]	@ (8020b0c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xac>)
 8020a80:	e9c0 1201 	strd	r1, r2, [r0, #4]
 8020a84:	6683      	str	r3, [r0, #104]	@ 0x68
 8020a86:	4b22      	ldr	r3, [pc, #136]	@ (8020b10 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb0>)
 8020a88:	6105      	str	r5, [r0, #16]
 8020a8a:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8020a8e:	61c5      	str	r5, [r0, #28]
 8020a90:	6205      	str	r5, [r0, #32]
 8020a92:	8485      	strh	r5, [r0, #36]	@ 0x24
 8020a94:	f8c0 5026 	str.w	r5, [r0, #38]	@ 0x26
 8020a98:	f880 502a 	strb.w	r5, [r0, #42]	@ 0x2a
 8020a9c:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8020a9e:	8605      	strh	r5, [r0, #48]	@ 0x30
 8020aa0:	e9c0 550e 	strd	r5, r5, [r0, #56]	@ 0x38
 8020aa4:	e9c0 5510 	strd	r5, r5, [r0, #64]	@ 0x40
 8020aa8:	f880 5048 	strb.w	r5, [r0, #72]	@ 0x48
 8020aac:	f880 504a 	strb.w	r5, [r0, #74]	@ 0x4a
 8020ab0:	f880 504b 	strb.w	r5, [r0, #75]	@ 0x4b
 8020ab4:	64c5      	str	r5, [r0, #76]	@ 0x4c
 8020ab6:	6505      	str	r5, [r0, #80]	@ 0x50
 8020ab8:	6545      	str	r5, [r0, #84]	@ 0x54
 8020aba:	f880 5058 	strb.w	r5, [r0, #88]	@ 0x58
 8020abe:	e9c0 5517 	strd	r5, r5, [r0, #92]	@ 0x5c
 8020ac2:	6645      	str	r5, [r0, #100]	@ 0x64
 8020ac4:	66c5      	str	r5, [r0, #108]	@ 0x6c
 8020ac6:	4a13      	ldr	r2, [pc, #76]	@ (8020b14 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb4>)
 8020ac8:	f880 c049 	strb.w	ip, [r0, #73]	@ 0x49
 8020acc:	6018      	str	r0, [r3, #0]
 8020ace:	4b12      	ldr	r3, [pc, #72]	@ (8020b18 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb8>)
 8020ad0:	8017      	strh	r7, [r2, #0]
 8020ad2:	801f      	strh	r7, [r3, #0]
 8020ad4:	4a11      	ldr	r2, [pc, #68]	@ (8020b1c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xbc>)
 8020ad6:	4b12      	ldr	r3, [pc, #72]	@ (8020b20 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc0>)
 8020ad8:	8016      	strh	r6, [r2, #0]
 8020ada:	801e      	strh	r6, [r3, #0]
 8020adc:	4911      	ldr	r1, [pc, #68]	@ (8020b24 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc4>)
 8020ade:	4a12      	ldr	r2, [pc, #72]	@ (8020b28 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc8>)
 8020ae0:	4b12      	ldr	r3, [pc, #72]	@ (8020b2c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xcc>)
 8020ae2:	700d      	strb	r5, [r1, #0]
 8020ae4:	6002      	str	r2, [r0, #0]
 8020ae6:	6018      	str	r0, [r3, #0]
 8020ae8:	f880 5070 	strb.w	r5, [r0, #112]	@ 0x70
 8020aec:	6745      	str	r5, [r0, #116]	@ 0x74
 8020aee:	f880 5078 	strb.w	r5, [r0, #120]	@ 0x78
 8020af2:	f880 5079 	strb.w	r5, [r0, #121]	@ 0x79
 8020af6:	f880 c07a 	strb.w	ip, [r0, #122]	@ 0x7a
 8020afa:	f880 c07b 	strb.w	ip, [r0, #123]	@ 0x7b
 8020afe:	f880 50a4 	strb.w	r5, [r0, #164]	@ 0xa4
 8020b02:	f880 50a5 	strb.w	r5, [r0, #165]	@ 0xa5
 8020b06:	f880 e034 	strb.w	lr, [r0, #52]	@ 0x34
 8020b0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020b0c:	01000001 	.word	0x01000001
 8020b10:	20082ec4 	.word	0x20082ec4
 8020b14:	20082eb8 	.word	0x20082eb8
 8020b18:	20082ebe 	.word	0x20082ebe
 8020b1c:	20082eba 	.word	0x20082eba
 8020b20:	20082ec0 	.word	0x20082ec0
 8020b24:	20082ebc 	.word	0x20082ebc
 8020b28:	08035e04 	.word	0x08035e04
 8020b2c:	20083364 	.word	0x20083364

08020b30 <_ZN8touchgfx8HALGPU2D10initializeEi>:
 8020b30:	b570      	push	{r4, r5, r6, lr}
 8020b32:	460c      	mov	r4, r1
 8020b34:	b08a      	sub	sp, #40	@ 0x28
 8020b36:	4606      	mov	r6, r0
 8020b38:	f7ea f9c7 	bl	800aeca <_ZN8touchgfx3HAL10initializeEv>
 8020b3c:	4621      	mov	r1, r4
 8020b3e:	466c      	mov	r4, sp
 8020b40:	4668      	mov	r0, sp
 8020b42:	f106 057c 	add.w	r5, r6, #124	@ 0x7c
 8020b46:	f7fc fed5 	bl	801d8f4 <nema_cl_create_sized>
 8020b4a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020b4c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020b4e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020b50:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020b52:	e894 0003 	ldmia.w	r4, {r0, r1}
 8020b56:	e885 0003 	stmia.w	r5, {r0, r1}
 8020b5a:	f8d6 3088 	ldr.w	r3, [r6, #136]	@ 0x88
 8020b5e:	b10b      	cbz	r3, 8020b64 <_ZN8touchgfx8HALGPU2D10initializeEi+0x34>
 8020b60:	b00a      	add	sp, #40	@ 0x28
 8020b62:	bd70      	pop	{r4, r5, r6, pc}
 8020b64:	f7ff ff2c 	bl	80209c0 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>

08020b68 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>:
 8020b68:	b510      	push	{r4, lr}
 8020b6a:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 8020b6e:	4604      	mov	r4, r0
 8020b70:	b94b      	cbnz	r3, 8020b86 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x1e>
 8020b72:	4620      	mov	r0, r4
 8020b74:	2101      	movs	r1, #1
 8020b76:	f7ea ff33 	bl	800b9e0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8020b7a:	f104 007c 	add.w	r0, r4, #124	@ 0x7c
 8020b7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020b82:	f7fc bfcb 	b.w	801db1c <nema_cl_bind_circular>
 8020b86:	6840      	ldr	r0, [r0, #4]
 8020b88:	4906      	ldr	r1, [pc, #24]	@ (8020ba4 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x3c>)
 8020b8a:	6803      	ldr	r3, [r0, #0]
 8020b8c:	689a      	ldr	r2, [r3, #8]
 8020b8e:	428a      	cmp	r2, r1
 8020b90:	d105      	bne.n	8020b9e <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x36>
 8020b92:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8020b94:	4798      	blx	r3
 8020b96:	2300      	movs	r3, #0
 8020b98:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8020b9c:	e7e9      	b.n	8020b72 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0xa>
 8020b9e:	4790      	blx	r2
 8020ba0:	e7f9      	b.n	8020b96 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x2e>
 8020ba2:	bf00      	nop
 8020ba4:	0800204d 	.word	0x0800204d

08020ba8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>:
 8020ba8:	4603      	mov	r3, r0
 8020baa:	2200      	movs	r2, #0
 8020bac:	307c      	adds	r0, #124	@ 0x7c
 8020bae:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8020bb2:	f7fd b93d 	b.w	801de30 <nema_cl_submit>
 8020bb6:	bf00      	nop

08020bb8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 8020bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020bbc:	b091      	sub	sp, #68	@ 0x44
 8020bbe:	4604      	mov	r4, r0
 8020bc0:	461d      	mov	r5, r3
 8020bc2:	f8bd 3080 	ldrh.w	r3, [sp, #128]	@ 0x80
 8020bc6:	e9cd 210e 	strd	r2, r1, [sp, #56]	@ 0x38
 8020bca:	930d      	str	r3, [sp, #52]	@ 0x34
 8020bcc:	f89d 2088 	ldrb.w	r2, [sp, #136]	@ 0x88
 8020bd0:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
 8020bd4:	307c      	adds	r0, #124	@ 0x7c
 8020bd6:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 8020bda:	f8bd 706c 	ldrh.w	r7, [sp, #108]	@ 0x6c
 8020bde:	f8bd 8070 	ldrh.w	r8, [sp, #112]	@ 0x70
 8020be2:	f8bd 9074 	ldrh.w	r9, [sp, #116]	@ 0x74
 8020be6:	f89d a078 	ldrb.w	sl, [sp, #120]	@ 0x78
 8020bea:	f89d b07c 	ldrb.w	fp, [sp, #124]	@ 0x7c
 8020bee:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020bf0:	920c      	str	r2, [sp, #48]	@ 0x30
 8020bf2:	f7fd f997 	bl	801df24 <nema_cl_wait>
 8020bf6:	f04f 0e01 	mov.w	lr, #1
 8020bfa:	2000      	movs	r0, #0
 8020bfc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020bfe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020c00:	9208      	str	r2, [sp, #32]
 8020c02:	f8d4 c000 	ldr.w	ip, [r4]
 8020c06:	9307      	str	r3, [sp, #28]
 8020c08:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020c0a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8020c0e:	e9dd 210e 	ldrd	r2, r1, [sp, #56]	@ 0x38
 8020c12:	e9cd b305 	strd	fp, r3, [sp, #20]
 8020c16:	e9cd 7801 	strd	r7, r8, [sp, #4]
 8020c1a:	9600      	str	r6, [sp, #0]
 8020c1c:	f884 e0a4 	strb.w	lr, [r4, #164]	@ 0xa4
 8020c20:	9009      	str	r0, [sp, #36]	@ 0x24
 8020c22:	462b      	mov	r3, r5
 8020c24:	4620      	mov	r0, r4
 8020c26:	f8dc 403c 	ldr.w	r4, [ip, #60]	@ 0x3c
 8020c2a:	47a0      	blx	r4
 8020c2c:	b011      	add	sp, #68	@ 0x44
 8020c2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c32:	bf00      	nop

08020c34 <_ZN8touchgfx8LCDGPU2DD1Ev>:
 8020c34:	4770      	bx	lr
 8020c36:	bf00      	nop

08020c38 <_ZNK8touchgfx8LCDGPU2D8bitDepthEv>:
 8020c38:	7b03      	ldrb	r3, [r0, #12]
 8020c3a:	2b02      	cmp	r3, #2
 8020c3c:	d004      	beq.n	8020c48 <_ZNK8touchgfx8LCDGPU2D8bitDepthEv+0x10>
 8020c3e:	2b01      	cmp	r3, #1
 8020c40:	bf0c      	ite	eq
 8020c42:	2018      	moveq	r0, #24
 8020c44:	2010      	movne	r0, #16
 8020c46:	4770      	bx	lr
 8020c48:	2020      	movs	r0, #32
 8020c4a:	4770      	bx	lr

08020c4c <_ZNK8touchgfx8LCDGPU2D17framebufferFormatEv>:
 8020c4c:	7b00      	ldrb	r0, [r0, #12]
 8020c4e:	4770      	bx	lr

08020c50 <_ZN8touchgfx8LCDGPU2D4initEv>:
 8020c50:	4770      	bx	lr
 8020c52:	bf00      	nop

08020c54 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c58:	b087      	sub	sp, #28
 8020c5a:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 8020c5e:	9102      	str	r1, [sp, #8]
 8020c60:	ea6f 0c05 	mvn.w	ip, r5
 8020c64:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8020c68:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8020c6a:	9203      	str	r2, [sp, #12]
 8020c6c:	e9dd 4215 	ldrd	r4, r2, [sp, #84]	@ 0x54
 8020c70:	6860      	ldr	r0, [r4, #4]
 8020c72:	fa5f fc8c 	uxtb.w	ip, ip
 8020c76:	fb00 2e01 	mla	lr, r0, r1, r2
 8020c7a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8020c7c:	6820      	ldr	r0, [r4, #0]
 8020c7e:	e9d2 2400 	ldrd	r2, r4, [r2]
 8020c82:	3404      	adds	r4, #4
 8020c84:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 8020c88:	fa1f fb85 	uxth.w	fp, r5
 8020c8c:	9405      	str	r4, [sp, #20]
 8020c8e:	9200      	str	r2, [sp, #0]
 8020c90:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8020c94:	9c02      	ldr	r4, [sp, #8]
 8020c96:	2c00      	cmp	r4, #0
 8020c98:	dc03      	bgt.n	8020ca2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020c9a:	9c03      	ldr	r4, [sp, #12]
 8020c9c:	2c00      	cmp	r4, #0
 8020c9e:	f340 80c2 	ble.w	8020e26 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020ca2:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020ca4:	2b00      	cmp	r3, #0
 8020ca6:	e9d4 ea02 	ldrd	lr, sl, [r4, #8]
 8020caa:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8020cae:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8020cb2:	fa0f f48e 	sxth.w	r4, lr
 8020cb6:	fa0f f88a 	sxth.w	r8, sl
 8020cba:	f340 80b7 	ble.w	8020e2c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8020cbe:	1415      	asrs	r5, r2, #16
 8020cc0:	d406      	bmi.n	8020cd0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020cc2:	42a5      	cmp	r5, r4
 8020cc4:	da04      	bge.n	8020cd0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020cc6:	ea5f 4921 	movs.w	r9, r1, asr #16
 8020cca:	d401      	bmi.n	8020cd0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020ccc:	45c1      	cmp	r9, r8
 8020cce:	db3e      	blt.n	8020d4e <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8020cd0:	3b01      	subs	r3, #1
 8020cd2:	4432      	add	r2, r6
 8020cd4:	4439      	add	r1, r7
 8020cd6:	f100 0002 	add.w	r0, r0, #2
 8020cda:	d1f0      	bne.n	8020cbe <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8020cdc:	9b02      	ldr	r3, [sp, #8]
 8020cde:	2b00      	cmp	r3, #0
 8020ce0:	f340 80a1 	ble.w	8020e26 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020ce4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020ce8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020cec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020cf0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020cf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020cf8:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8020cfc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020d00:	ee76 6a62 	vsub.f32	s13, s12, s5
 8020d04:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8020d08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d0c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020d10:	ee16 2a90 	vmov	r2, s13
 8020d14:	3b01      	subs	r3, #1
 8020d16:	9302      	str	r3, [sp, #8]
 8020d18:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020d1a:	9c03      	ldr	r4, [sp, #12]
 8020d1c:	fb92 f6f3 	sdiv	r6, r2, r3
 8020d20:	ee17 2a10 	vmov	r2, s14
 8020d24:	eeb0 7a43 	vmov.f32	s14, s6
 8020d28:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020d2c:	ee17 1a10 	vmov	r1, s14
 8020d30:	eeb0 7a62 	vmov.f32	s14, s5
 8020d34:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020d38:	fb92 f7f3 	sdiv	r7, r2, r3
 8020d3c:	eeb0 3a67 	vmov.f32	s6, s15
 8020d40:	ee17 2a10 	vmov	r2, s14
 8020d44:	eef0 2a46 	vmov.f32	s5, s12
 8020d48:	bf08      	it	eq
 8020d4a:	4623      	moveq	r3, r4
 8020d4c:	e7a2      	b.n	8020c94 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020d4e:	9501      	str	r5, [sp, #4]
 8020d50:	1e5d      	subs	r5, r3, #1
 8020d52:	fb05 2906 	mla	r9, r5, r6, r2
 8020d56:	ea5f 4929 	movs.w	r9, r9, asr #16
 8020d5a:	9504      	str	r5, [sp, #16]
 8020d5c:	d570      	bpl.n	8020e40 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8020d5e:	4680      	mov	r8, r0
 8020d60:	9d01      	ldr	r5, [sp, #4]
 8020d62:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020d66:	4654      	mov	r4, sl
 8020d68:	4673      	mov	r3, lr
 8020d6a:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8020d6e:	e002      	b.n	8020d76 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8020d70:	1415      	asrs	r5, r2, #16
 8020d72:	e9d9 3402 	ldrd	r3, r4, [r9, #8]
 8020d76:	2d00      	cmp	r5, #0
 8020d78:	4432      	add	r2, r6
 8020d7a:	db4b      	blt.n	8020e14 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020d7c:	429d      	cmp	r5, r3
 8020d7e:	da49      	bge.n	8020e14 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020d80:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8020d84:	d446      	bmi.n	8020e14 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020d86:	45a6      	cmp	lr, r4
 8020d88:	da44      	bge.n	8020e14 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020d8a:	9c00      	ldr	r4, [sp, #0]
 8020d8c:	b21b      	sxth	r3, r3
 8020d8e:	fb0e 4303 	mla	r3, lr, r3, r4
 8020d92:	5d5b      	ldrb	r3, [r3, r5]
 8020d94:	9d05      	ldr	r5, [sp, #20]
 8020d96:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8020d9a:	441d      	add	r5, r3
 8020d9c:	f895 a002 	ldrb.w	sl, [r5, #2]
 8020da0:	786d      	ldrb	r5, [r5, #1]
 8020da2:	f8b8 4000 	ldrh.w	r4, [r8]
 8020da6:	fb15 f50b 	smulbb	r5, r5, fp
 8020daa:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 8020dae:	fa5f fe8e 	uxtb.w	lr, lr
 8020db2:	9501      	str	r5, [sp, #4]
 8020db4:	fb1e fe0c 	smulbb	lr, lr, ip
 8020db8:	9d05      	ldr	r5, [sp, #20]
 8020dba:	fb1a fa0b 	smulbb	sl, sl, fp
 8020dbe:	5ced      	ldrb	r5, [r5, r3]
 8020dc0:	1223      	asrs	r3, r4, #8
 8020dc2:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020dc6:	fb05 ee0b 	mla	lr, r5, fp, lr
 8020dca:	fb03 aa0c 	mla	sl, r3, ip, sl
 8020dce:	9d01      	ldr	r5, [sp, #4]
 8020dd0:	10e4      	asrs	r4, r4, #3
 8020dd2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8020dd6:	fb04 540c 	mla	r4, r4, ip, r5
 8020dda:	fa1f fe8e 	uxth.w	lr, lr
 8020dde:	fa1f fa8a 	uxth.w	sl, sl
 8020de2:	f10e 0301 	add.w	r3, lr, #1
 8020de6:	f10a 0501 	add.w	r5, sl, #1
 8020dea:	9301      	str	r3, [sp, #4]
 8020dec:	b2a4      	uxth	r4, r4
 8020dee:	eb05 2a1a 	add.w	sl, r5, sl, lsr #8
 8020df2:	9d01      	ldr	r5, [sp, #4]
 8020df4:	1c63      	adds	r3, r4, #1
 8020df6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020dfa:	eb05 251e 	add.w	r5, r5, lr, lsr #8
 8020dfe:	f40a 4378 	and.w	r3, sl, #63488	@ 0xf800
 8020e02:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8020e06:	0964      	lsrs	r4, r4, #5
 8020e08:	432b      	orrs	r3, r5
 8020e0a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020e0e:	4323      	orrs	r3, r4
 8020e10:	f8a8 3000 	strh.w	r3, [r8]
 8020e14:	f108 0802 	add.w	r8, r8, #2
 8020e18:	4580      	cmp	r8, r0
 8020e1a:	4439      	add	r1, r7
 8020e1c:	d1a8      	bne.n	8020d70 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8020e1e:	9b02      	ldr	r3, [sp, #8]
 8020e20:	2b00      	cmp	r3, #0
 8020e22:	f73f af5f 	bgt.w	8020ce4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020e26:	b007      	add	sp, #28
 8020e28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020e2c:	f43f af56 	beq.w	8020cdc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e30:	1e5d      	subs	r5, r3, #1
 8020e32:	fb05 2906 	mla	r9, r5, r6, r2
 8020e36:	ea5f 4929 	movs.w	r9, r9, asr #16
 8020e3a:	9504      	str	r5, [sp, #16]
 8020e3c:	f53f af4e 	bmi.w	8020cdc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e40:	454c      	cmp	r4, r9
 8020e42:	dd5b      	ble.n	8020efc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020e44:	9d04      	ldr	r5, [sp, #16]
 8020e46:	fb05 1507 	mla	r5, r5, r7, r1
 8020e4a:	142d      	asrs	r5, r5, #16
 8020e4c:	d456      	bmi.n	8020efc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020e4e:	4545      	cmp	r5, r8
 8020e50:	da54      	bge.n	8020efc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020e52:	2b00      	cmp	r3, #0
 8020e54:	f77f af42 	ble.w	8020cdc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e58:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020e5c:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8020e60:	9301      	str	r3, [sp, #4]
 8020e62:	e002      	b.n	8020e6a <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020e64:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020e66:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 8020e6a:	9d00      	ldr	r5, [sp, #0]
 8020e6c:	140b      	asrs	r3, r1, #16
 8020e6e:	fb04 5303 	mla	r3, r4, r3, r5
 8020e72:	1414      	asrs	r4, r2, #16
 8020e74:	5d1b      	ldrb	r3, [r3, r4]
 8020e76:	8804      	ldrh	r4, [r0, #0]
 8020e78:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8020e7c:	eb08 0503 	add.w	r5, r8, r3
 8020e80:	f895 a002 	ldrb.w	sl, [r5, #2]
 8020e84:	f895 9001 	ldrb.w	r9, [r5, #1]
 8020e88:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 8020e8c:	fa5f fe8e 	uxtb.w	lr, lr
 8020e90:	fb1e fe0c 	smulbb	lr, lr, ip
 8020e94:	fb19 f90b 	smulbb	r9, r9, fp
 8020e98:	fb1a fa0b 	smulbb	sl, sl, fp
 8020e9c:	f818 5003 	ldrb.w	r5, [r8, r3]
 8020ea0:	1223      	asrs	r3, r4, #8
 8020ea2:	10e4      	asrs	r4, r4, #3
 8020ea4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020ea8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8020eac:	fb05 e50b 	mla	r5, r5, fp, lr
 8020eb0:	fb03 aa0c 	mla	sl, r3, ip, sl
 8020eb4:	fb04 940c 	mla	r4, r4, ip, r9
 8020eb8:	b2ad      	uxth	r5, r5
 8020eba:	fa1f fa8a 	uxth.w	sl, sl
 8020ebe:	b2a4      	uxth	r4, r4
 8020ec0:	f10a 0301 	add.w	r3, sl, #1
 8020ec4:	f105 0e01 	add.w	lr, r5, #1
 8020ec8:	f104 0901 	add.w	r9, r4, #1
 8020ecc:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8020ed0:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 8020ed4:	eb09 2414 	add.w	r4, r9, r4, lsr #8
 8020ed8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8020edc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020ee0:	0964      	lsrs	r4, r4, #5
 8020ee2:	ea43 030e 	orr.w	r3, r3, lr
 8020ee6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020eea:	4323      	orrs	r3, r4
 8020eec:	f820 3b02 	strh.w	r3, [r0], #2
 8020ef0:	9b01      	ldr	r3, [sp, #4]
 8020ef2:	4439      	add	r1, r7
 8020ef4:	4298      	cmp	r0, r3
 8020ef6:	4432      	add	r2, r6
 8020ef8:	d1b4      	bne.n	8020e64 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8020efa:	e6ef      	b.n	8020cdc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020efc:	2b00      	cmp	r3, #0
 8020efe:	f77f aeed 	ble.w	8020cdc <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020f02:	1414      	asrs	r4, r2, #16
 8020f04:	4680      	mov	r8, r0
 8020f06:	9401      	str	r4, [sp, #4]
 8020f08:	4625      	mov	r5, r4
 8020f0a:	e72a      	b.n	8020d62 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>

08020f0c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f10:	4689      	mov	r9, r1
 8020f12:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8020f16:	46ca      	mov	sl, r9
 8020f18:	b087      	sub	sp, #28
 8020f1a:	9203      	str	r2, [sp, #12]
 8020f1c:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8020f20:	6854      	ldr	r4, [r2, #4]
 8020f22:	e9dd 0c17 	ldrd	r0, ip, [sp, #92]	@ 0x5c
 8020f26:	fb04 1000 	mla	r0, r4, r0, r1
 8020f2a:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8020f2e:	6815      	ldr	r5, [r2, #0]
 8020f30:	e9dc 2400 	ldrd	r2, r4, [ip]
 8020f34:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8020f38:	f104 0b04 	add.w	fp, r4, #4
 8020f3c:	9205      	str	r2, [sp, #20]
 8020f3e:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8020f42:	f1ba 0f00 	cmp.w	sl, #0
 8020f46:	dc03      	bgt.n	8020f50 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8020f48:	9c03      	ldr	r4, [sp, #12]
 8020f4a:	2c00      	cmp	r4, #0
 8020f4c:	f340 8095 	ble.w	802107a <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8020f50:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 8020f54:	2b00      	cmp	r3, #0
 8020f56:	fa0f f588 	sxth.w	r5, r8
 8020f5a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8020f5e:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8020f62:	fa0f f48e 	sxth.w	r4, lr
 8020f66:	9502      	str	r5, [sp, #8]
 8020f68:	f340 808a 	ble.w	8021080 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8020f6c:	46f1      	mov	r9, lr
 8020f6e:	9401      	str	r4, [sp, #4]
 8020f70:	1415      	asrs	r5, r2, #16
 8020f72:	d408      	bmi.n	8020f86 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020f74:	9c01      	ldr	r4, [sp, #4]
 8020f76:	42a5      	cmp	r5, r4
 8020f78:	da05      	bge.n	8020f86 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020f7a:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8020f7e:	d402      	bmi.n	8020f86 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020f80:	9c02      	ldr	r4, [sp, #8]
 8020f82:	45a6      	cmp	lr, r4
 8020f84:	db3b      	blt.n	8020ffe <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf2>
 8020f86:	3b01      	subs	r3, #1
 8020f88:	4432      	add	r2, r6
 8020f8a:	4439      	add	r1, r7
 8020f8c:	f100 0002 	add.w	r0, r0, #2
 8020f90:	d1ee      	bne.n	8020f70 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8020f92:	f1ba 0f00 	cmp.w	sl, #0
 8020f96:	dd70      	ble.n	802107a <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8020f98:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020f9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020fa0:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8020fa4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020fa8:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8020fac:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020fb0:	ee76 6a62 	vsub.f32	s13, s12, s5
 8020fb4:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8020fb8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020fbc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020fc0:	ee16 2a90 	vmov	r2, s13
 8020fc4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020fc6:	9c03      	ldr	r4, [sp, #12]
 8020fc8:	fb92 f6f3 	sdiv	r6, r2, r3
 8020fcc:	ee17 2a10 	vmov	r2, s14
 8020fd0:	eeb0 7a43 	vmov.f32	s14, s6
 8020fd4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020fd8:	ee17 1a10 	vmov	r1, s14
 8020fdc:	eeb0 7a62 	vmov.f32	s14, s5
 8020fe0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020fe4:	f1ba 0a01 	subs.w	sl, sl, #1
 8020fe8:	fb92 f7f3 	sdiv	r7, r2, r3
 8020fec:	eeb0 3a67 	vmov.f32	s6, s15
 8020ff0:	ee17 2a10 	vmov	r2, s14
 8020ff4:	eef0 2a46 	vmov.f32	s5, s12
 8020ff8:	bf08      	it	eq
 8020ffa:	4623      	moveq	r3, r4
 8020ffc:	e7a1      	b.n	8020f42 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8020ffe:	9c01      	ldr	r4, [sp, #4]
 8021000:	9501      	str	r5, [sp, #4]
 8021002:	1e5d      	subs	r5, r3, #1
 8021004:	46ce      	mov	lr, r9
 8021006:	fb05 2906 	mla	r9, r5, r6, r2
 802100a:	ea5f 4929 	movs.w	r9, r9, asr #16
 802100e:	9504      	str	r5, [sp, #16]
 8021010:	d53e      	bpl.n	8021090 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8021012:	4604      	mov	r4, r0
 8021014:	9d01      	ldr	r5, [sp, #4]
 8021016:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802101a:	4673      	mov	r3, lr
 802101c:	46b6      	mov	lr, r6
 802101e:	4646      	mov	r6, r8
 8021020:	e002      	b.n	8021028 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8021022:	1415      	asrs	r5, r2, #16
 8021024:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021028:	2d00      	cmp	r5, #0
 802102a:	4472      	add	r2, lr
 802102c:	db1e      	blt.n	802106c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 802102e:	429d      	cmp	r5, r3
 8021030:	da1c      	bge.n	802106c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 8021032:	ea5f 4821 	movs.w	r8, r1, asr #16
 8021036:	d419      	bmi.n	802106c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 8021038:	45b0      	cmp	r8, r6
 802103a:	da17      	bge.n	802106c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 802103c:	9e05      	ldr	r6, [sp, #20]
 802103e:	b21b      	sxth	r3, r3
 8021040:	fb08 6303 	mla	r3, r8, r3, r6
 8021044:	5d5e      	ldrb	r6, [r3, r5]
 8021046:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802104a:	eb0b 0306 	add.w	r3, fp, r6
 802104e:	785d      	ldrb	r5, [r3, #1]
 8021050:	789b      	ldrb	r3, [r3, #2]
 8021052:	00ed      	lsls	r5, r5, #3
 8021054:	f405 68fc 	and.w	r8, r5, #2016	@ 0x7e0
 8021058:	4d2d      	ldr	r5, [pc, #180]	@ (8021110 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 802105a:	f81b 6006 	ldrb.w	r6, [fp, r6]
 802105e:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 8021062:	ea43 0308 	orr.w	r3, r3, r8
 8021066:	ea43 03d6 	orr.w	r3, r3, r6, lsr #3
 802106a:	8023      	strh	r3, [r4, #0]
 802106c:	3402      	adds	r4, #2
 802106e:	4284      	cmp	r4, r0
 8021070:	4439      	add	r1, r7
 8021072:	d1d6      	bne.n	8021022 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021074:	f1ba 0f00 	cmp.w	sl, #0
 8021078:	dc8e      	bgt.n	8020f98 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802107a:	b007      	add	sp, #28
 802107c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021080:	d087      	beq.n	8020f92 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021082:	1e5d      	subs	r5, r3, #1
 8021084:	fb05 2906 	mla	r9, r5, r6, r2
 8021088:	ea5f 4929 	movs.w	r9, r9, asr #16
 802108c:	9504      	str	r5, [sp, #16]
 802108e:	d480      	bmi.n	8020f92 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021090:	454c      	cmp	r4, r9
 8021092:	dd35      	ble.n	8021100 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8021094:	9d04      	ldr	r5, [sp, #16]
 8021096:	fb05 1507 	mla	r5, r5, r7, r1
 802109a:	ea5f 4925 	movs.w	r9, r5, asr #16
 802109e:	d42f      	bmi.n	8021100 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 80210a0:	9d02      	ldr	r5, [sp, #8]
 80210a2:	45a9      	cmp	r9, r5
 80210a4:	da2c      	bge.n	8021100 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 80210a6:	2b00      	cmp	r3, #0
 80210a8:	f77f af73 	ble.w	8020f92 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80210ac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80210b0:	9d05      	ldr	r5, [sp, #20]
 80210b2:	4699      	mov	r9, r3
 80210b4:	46a6      	mov	lr, r4
 80210b6:	e001      	b.n	80210bc <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 80210b8:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80210bc:	140c      	asrs	r4, r1, #16
 80210be:	fb0e 5404 	mla	r4, lr, r4, r5
 80210c2:	ea4f 4e22 	mov.w	lr, r2, asr #16
 80210c6:	f814 e00e 	ldrb.w	lr, [r4, lr]
 80210ca:	4b11      	ldr	r3, [pc, #68]	@ (8021110 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 80210cc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80210d0:	eb0b 040e 	add.w	r4, fp, lr
 80210d4:	f894 8001 	ldrb.w	r8, [r4, #1]
 80210d8:	78a4      	ldrb	r4, [r4, #2]
 80210da:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80210de:	f81b e00e 	ldrb.w	lr, [fp, lr]
 80210e2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80210e6:	ea03 2404 	and.w	r4, r3, r4, lsl #8
 80210ea:	ea44 0408 	orr.w	r4, r4, r8
 80210ee:	ea44 04de 	orr.w	r4, r4, lr, lsr #3
 80210f2:	f820 4b02 	strh.w	r4, [r0], #2
 80210f6:	4548      	cmp	r0, r9
 80210f8:	4439      	add	r1, r7
 80210fa:	4432      	add	r2, r6
 80210fc:	d1dc      	bne.n	80210b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80210fe:	e748      	b.n	8020f92 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021100:	2b00      	cmp	r3, #0
 8021102:	f77f af46 	ble.w	8020f92 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021106:	1415      	asrs	r5, r2, #16
 8021108:	4604      	mov	r4, r0
 802110a:	9501      	str	r5, [sp, #4]
 802110c:	e783      	b.n	8021016 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 802110e:	bf00      	nop
 8021110:	fffff800 	.word	0xfffff800

08021114 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021114:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802111c:	b087      	sub	sp, #28
 802111e:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8021122:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8021126:	e9dd 0b17 	ldrd	r0, fp, [sp, #92]	@ 0x5c
 802112a:	6854      	ldr	r4, [r2, #4]
 802112c:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 8021130:	fb04 1100 	mla	r1, r4, r0, r1
 8021134:	e9dd 9a13 	ldrd	r9, sl, [sp, #76]	@ 0x4c
 8021138:	6810      	ldr	r0, [r2, #0]
 802113a:	e9db 2400 	ldrd	r2, r4, [fp]
 802113e:	eb00 0e41 	add.w	lr, r0, r1, lsl #1
 8021142:	1d21      	adds	r1, r4, #4
 8021144:	9505      	str	r5, [sp, #20]
 8021146:	9102      	str	r1, [sp, #8]
 8021148:	9201      	str	r2, [sp, #4]
 802114a:	e9dd 7211 	ldrd	r7, r2, [sp, #68]	@ 0x44
 802114e:	9903      	ldr	r1, [sp, #12]
 8021150:	2900      	cmp	r1, #0
 8021152:	dc03      	bgt.n	802115c <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021154:	9904      	ldr	r1, [sp, #16]
 8021156:	2900      	cmp	r1, #0
 8021158:	f340 80b6 	ble.w	80212c8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802115c:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 8021160:	2b00      	cmp	r3, #0
 8021162:	f507 4700 	add.w	r7, r7, #32768	@ 0x8000
 8021166:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802116a:	b221      	sxth	r1, r4
 802116c:	b235      	sxth	r5, r6
 802116e:	f340 80ae 	ble.w	80212ce <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8021172:	1438      	asrs	r0, r7, #16
 8021174:	d406      	bmi.n	8021184 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021176:	4288      	cmp	r0, r1
 8021178:	da04      	bge.n	8021184 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802117a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 802117e:	d401      	bmi.n	8021184 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021180:	45ac      	cmp	ip, r5
 8021182:	db3c      	blt.n	80211fe <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8021184:	3b01      	subs	r3, #1
 8021186:	444f      	add	r7, r9
 8021188:	4452      	add	r2, sl
 802118a:	f10e 0e02 	add.w	lr, lr, #2
 802118e:	d1f0      	bne.n	8021172 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8021190:	9b03      	ldr	r3, [sp, #12]
 8021192:	2b00      	cmp	r3, #0
 8021194:	f340 8098 	ble.w	80212c8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021198:	ee30 0a04 	vadd.f32	s0, s0, s8
 802119c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80211a0:	eec5 7a80 	vdiv.f32	s15, s11, s0
 80211a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80211a8:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80211ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 80211b0:	ee76 6a62 	vsub.f32	s13, s12, s5
 80211b4:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80211b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80211bc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80211c0:	ee16 2a90 	vmov	r2, s13
 80211c4:	3b01      	subs	r3, #1
 80211c6:	9303      	str	r3, [sp, #12]
 80211c8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80211ca:	9904      	ldr	r1, [sp, #16]
 80211cc:	fb92 f9f3 	sdiv	r9, r2, r3
 80211d0:	ee17 2a10 	vmov	r2, s14
 80211d4:	eeb0 7a43 	vmov.f32	s14, s6
 80211d8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80211dc:	fb92 faf3 	sdiv	sl, r2, r3
 80211e0:	ee17 2a10 	vmov	r2, s14
 80211e4:	eeb0 7a62 	vmov.f32	s14, s5
 80211e8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80211ec:	eeb0 3a67 	vmov.f32	s6, s15
 80211f0:	ee17 7a10 	vmov	r7, s14
 80211f4:	eef0 2a46 	vmov.f32	s5, s12
 80211f8:	bf08      	it	eq
 80211fa:	460b      	moveq	r3, r1
 80211fc:	e7a7      	b.n	802114e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80211fe:	f103 38ff 	add.w	r8, r3, #4294967295
 8021202:	fb08 7c09 	mla	ip, r8, r9, r7
 8021206:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 802120a:	d56a      	bpl.n	80212e2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ce>
 802120c:	4675      	mov	r5, lr
 802120e:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8021212:	e002      	b.n	802121a <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021214:	1438      	asrs	r0, r7, #16
 8021216:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 802121a:	2800      	cmp	r0, #0
 802121c:	444f      	add	r7, r9
 802121e:	db4b      	blt.n	80212b8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021220:	42a0      	cmp	r0, r4
 8021222:	da49      	bge.n	80212b8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021224:	1413      	asrs	r3, r2, #16
 8021226:	d447      	bmi.n	80212b8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021228:	42b3      	cmp	r3, r6
 802122a:	b224      	sxth	r4, r4
 802122c:	da44      	bge.n	80212b8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802122e:	9901      	ldr	r1, [sp, #4]
 8021230:	fb03 1404 	mla	r4, r3, r4, r1
 8021234:	9902      	ldr	r1, [sp, #8]
 8021236:	5c23      	ldrb	r3, [r4, r0]
 8021238:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 802123c:	0e0b      	lsrs	r3, r1, #24
 802123e:	d03b      	beq.n	80212b8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021240:	9805      	ldr	r0, [sp, #20]
 8021242:	f3c1 4807 	ubfx	r8, r1, #16, #8
 8021246:	fb00 f003 	mul.w	r0, r0, r3
 802124a:	1c43      	adds	r3, r0, #1
 802124c:	eb03 2320 	add.w	r3, r3, r0, asr #8
 8021250:	121b      	asrs	r3, r3, #8
 8021252:	43d8      	mvns	r0, r3
 8021254:	f3c1 2c07 	ubfx	ip, r1, #8, #8
 8021258:	b29b      	uxth	r3, r3
 802125a:	b2c9      	uxtb	r1, r1
 802125c:	882e      	ldrh	r6, [r5, #0]
 802125e:	fb1c fc03 	smulbb	ip, ip, r3
 8021262:	fb18 f803 	smulbb	r8, r8, r3
 8021266:	fb11 f303 	smulbb	r3, r1, r3
 802126a:	10f4      	asrs	r4, r6, #3
 802126c:	1231      	asrs	r1, r6, #8
 802126e:	00f6      	lsls	r6, r6, #3
 8021270:	b2c0      	uxtb	r0, r0
 8021272:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8021276:	b2f6      	uxtb	r6, r6
 8021278:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802127c:	fb01 8800 	mla	r8, r1, r0, r8
 8021280:	fb04 c400 	mla	r4, r4, r0, ip
 8021284:	fb06 3100 	mla	r1, r6, r0, r3
 8021288:	fa1f fc88 	uxth.w	ip, r8
 802128c:	b289      	uxth	r1, r1
 802128e:	b2a4      	uxth	r4, r4
 8021290:	1c4e      	adds	r6, r1, #1
 8021292:	1c60      	adds	r0, r4, #1
 8021294:	f10c 0301 	add.w	r3, ip, #1
 8021298:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 802129c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80212a0:	eb00 2114 	add.w	r1, r0, r4, lsr #8
 80212a4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80212a8:	f3c6 20c4 	ubfx	r0, r6, #11, #5
 80212ac:	0949      	lsrs	r1, r1, #5
 80212ae:	4303      	orrs	r3, r0
 80212b0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80212b4:	430b      	orrs	r3, r1
 80212b6:	802b      	strh	r3, [r5, #0]
 80212b8:	3502      	adds	r5, #2
 80212ba:	4575      	cmp	r5, lr
 80212bc:	4452      	add	r2, sl
 80212be:	d1a9      	bne.n	8021214 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80212c0:	9b03      	ldr	r3, [sp, #12]
 80212c2:	2b00      	cmp	r3, #0
 80212c4:	f73f af68 	bgt.w	8021198 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80212c8:	b007      	add	sp, #28
 80212ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80212ce:	f43f af5f 	beq.w	8021190 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80212d2:	f103 38ff 	add.w	r8, r3, #4294967295
 80212d6:	fb08 7c09 	mla	ip, r8, r9, r7
 80212da:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 80212de:	f53f af57 	bmi.w	8021190 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80212e2:	4561      	cmp	r1, ip
 80212e4:	dd5c      	ble.n	80213a0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80212e6:	fb08 280a 	mla	r8, r8, sl, r2
 80212ea:	ea5f 4828 	movs.w	r8, r8, asr #16
 80212ee:	d457      	bmi.n	80213a0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80212f0:	45a8      	cmp	r8, r5
 80212f2:	da55      	bge.n	80213a0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80212f4:	2b00      	cmp	r3, #0
 80212f6:	f77f af4b 	ble.w	8021190 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80212fa:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 80212fe:	e001      	b.n	8021304 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8021300:	f9bb 1008 	ldrsh.w	r1, [fp, #8]
 8021304:	9801      	ldr	r0, [sp, #4]
 8021306:	1413      	asrs	r3, r2, #16
 8021308:	fb01 0303 	mla	r3, r1, r3, r0
 802130c:	1439      	asrs	r1, r7, #16
 802130e:	5c5b      	ldrb	r3, [r3, r1]
 8021310:	9902      	ldr	r1, [sp, #8]
 8021312:	444f      	add	r7, r9
 8021314:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8021318:	4452      	add	r2, sl
 802131a:	0e18      	lsrs	r0, r3, #24
 802131c:	d03b      	beq.n	8021396 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802131e:	9905      	ldr	r1, [sp, #20]
 8021320:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 8021324:	fb01 f100 	mul.w	r1, r1, r0
 8021328:	1c48      	adds	r0, r1, #1
 802132a:	eb00 2021 	add.w	r0, r0, r1, asr #8
 802132e:	1200      	asrs	r0, r0, #8
 8021330:	43c1      	mvns	r1, r0
 8021332:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8021336:	b280      	uxth	r0, r0
 8021338:	b2db      	uxtb	r3, r3
 802133a:	f8be 5000 	ldrh.w	r5, [lr]
 802133e:	fb16 f600 	smulbb	r6, r6, r0
 8021342:	fb1c fc00 	smulbb	ip, ip, r0
 8021346:	fb13 f300 	smulbb	r3, r3, r0
 802134a:	122c      	asrs	r4, r5, #8
 802134c:	10e8      	asrs	r0, r5, #3
 802134e:	00ed      	lsls	r5, r5, #3
 8021350:	b2c9      	uxtb	r1, r1
 8021352:	b2ed      	uxtb	r5, r5
 8021354:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021358:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802135c:	fb00 6001 	mla	r0, r0, r1, r6
 8021360:	fb05 3301 	mla	r3, r5, r1, r3
 8021364:	fb04 c401 	mla	r4, r4, r1, ip
 8021368:	b280      	uxth	r0, r0
 802136a:	b2a4      	uxth	r4, r4
 802136c:	b29b      	uxth	r3, r3
 802136e:	1c65      	adds	r5, r4, #1
 8021370:	1c5e      	adds	r6, r3, #1
 8021372:	1c41      	adds	r1, r0, #1
 8021374:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8021378:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 802137c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021380:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8021384:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021388:	0949      	lsrs	r1, r1, #5
 802138a:	431c      	orrs	r4, r3
 802138c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021390:	430c      	orrs	r4, r1
 8021392:	f8ae 4000 	strh.w	r4, [lr]
 8021396:	f10e 0e02 	add.w	lr, lr, #2
 802139a:	45c6      	cmp	lr, r8
 802139c:	d1b0      	bne.n	8021300 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 802139e:	e6f7      	b.n	8021190 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80213a0:	2b00      	cmp	r3, #0
 80213a2:	f77f aef5 	ble.w	8021190 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80213a6:	4675      	mov	r5, lr
 80213a8:	1438      	asrs	r0, r7, #16
 80213aa:	e730      	b.n	802120e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>

080213ac <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80213ac:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 80213b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80213b4:	b085      	sub	sp, #20
 80213b6:	e9cd 1202 	strd	r1, r2, [sp, #8]
 80213ba:	e9dd 2113 	ldrd	r2, r1, [sp, #76]	@ 0x4c
 80213be:	e9dd 0b15 	ldrd	r0, fp, [sp, #84]	@ 0x54
 80213c2:	6854      	ldr	r4, [r2, #4]
 80213c4:	e9dd 9a11 	ldrd	r9, sl, [sp, #68]	@ 0x44
 80213c8:	fb04 1000 	mla	r0, r4, r0, r1
 80213cc:	6814      	ldr	r4, [r2, #0]
 80213ce:	e9db 2500 	ldrd	r2, r5, [fp]
 80213d2:	eb04 0e40 	add.w	lr, r4, r0, lsl #1
 80213d6:	1d28      	adds	r0, r5, #4
 80213d8:	9001      	str	r0, [sp, #4]
 80213da:	9200      	str	r2, [sp, #0]
 80213dc:	e9dd 120f 	ldrd	r1, r2, [sp, #60]	@ 0x3c
 80213e0:	9802      	ldr	r0, [sp, #8]
 80213e2:	2800      	cmp	r0, #0
 80213e4:	dc03      	bgt.n	80213ee <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80213e6:	9803      	ldr	r0, [sp, #12]
 80213e8:	2800      	cmp	r0, #0
 80213ea:	f340 80b8 	ble.w	802155e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 80213ee:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 80213f2:	2b00      	cmp	r3, #0
 80213f4:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 80213f8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80213fc:	b228      	sxth	r0, r5
 80213fe:	b237      	sxth	r7, r6
 8021400:	f340 80b0 	ble.w	8021564 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021404:	140c      	asrs	r4, r1, #16
 8021406:	d406      	bmi.n	8021416 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021408:	4284      	cmp	r4, r0
 802140a:	da04      	bge.n	8021416 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 802140c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8021410:	d401      	bmi.n	8021416 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021412:	45bc      	cmp	ip, r7
 8021414:	db3c      	blt.n	8021490 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xe4>
 8021416:	3b01      	subs	r3, #1
 8021418:	4449      	add	r1, r9
 802141a:	4452      	add	r2, sl
 802141c:	f10e 0e02 	add.w	lr, lr, #2
 8021420:	d1f0      	bne.n	8021404 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021422:	9b02      	ldr	r3, [sp, #8]
 8021424:	2b00      	cmp	r3, #0
 8021426:	f340 809a 	ble.w	802155e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 802142a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802142e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021432:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021436:	ee31 1a05 	vadd.f32	s2, s2, s10
 802143a:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802143e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021442:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021446:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802144a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802144e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021452:	ee16 2a90 	vmov	r2, s13
 8021456:	3b01      	subs	r3, #1
 8021458:	9302      	str	r3, [sp, #8]
 802145a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802145c:	9803      	ldr	r0, [sp, #12]
 802145e:	fb92 f9f3 	sdiv	r9, r2, r3
 8021462:	ee17 2a10 	vmov	r2, s14
 8021466:	eeb0 7a43 	vmov.f32	s14, s6
 802146a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802146e:	fb92 faf3 	sdiv	sl, r2, r3
 8021472:	ee17 2a10 	vmov	r2, s14
 8021476:	eeb0 7a62 	vmov.f32	s14, s5
 802147a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802147e:	eeb0 3a67 	vmov.f32	s6, s15
 8021482:	ee17 1a10 	vmov	r1, s14
 8021486:	eef0 2a46 	vmov.f32	s5, s12
 802148a:	bf08      	it	eq
 802148c:	4603      	moveq	r3, r0
 802148e:	e7a7      	b.n	80213e0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021490:	f103 38ff 	add.w	r8, r3, #4294967295
 8021494:	fb08 1c09 	mla	ip, r8, r9, r1
 8021498:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 802149c:	d56c      	bpl.n	8021578 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1cc>
 802149e:	4677      	mov	r7, lr
 80214a0:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 80214a4:	e002      	b.n	80214ac <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80214a6:	140c      	asrs	r4, r1, #16
 80214a8:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 80214ac:	2c00      	cmp	r4, #0
 80214ae:	db4d      	blt.n	802154c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80214b0:	42ac      	cmp	r4, r5
 80214b2:	da4b      	bge.n	802154c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80214b4:	1413      	asrs	r3, r2, #16
 80214b6:	d449      	bmi.n	802154c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80214b8:	42b3      	cmp	r3, r6
 80214ba:	b22d      	sxth	r5, r5
 80214bc:	da46      	bge.n	802154c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80214be:	9800      	ldr	r0, [sp, #0]
 80214c0:	fb03 0505 	mla	r5, r3, r5, r0
 80214c4:	9801      	ldr	r0, [sp, #4]
 80214c6:	5d2b      	ldrb	r3, [r5, r4]
 80214c8:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80214cc:	0e18      	lsrs	r0, r3, #24
 80214ce:	28ff      	cmp	r0, #255	@ 0xff
 80214d0:	f000 80c0 	beq.w	8021654 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80214d4:	b2c4      	uxtb	r4, r0
 80214d6:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 80214da:	f3c3 2607 	ubfx	r6, r3, #8, #8
 80214de:	b2a5      	uxth	r5, r4
 80214e0:	b2db      	uxtb	r3, r3
 80214e2:	b398      	cbz	r0, 802154c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80214e4:	43e4      	mvns	r4, r4
 80214e6:	f8b7 8000 	ldrh.w	r8, [r7]
 80214ea:	fb16 f605 	smulbb	r6, r6, r5
 80214ee:	fb1c fc05 	smulbb	ip, ip, r5
 80214f2:	fb13 f505 	smulbb	r5, r3, r5
 80214f6:	ea4f 2028 	mov.w	r0, r8, asr #8
 80214fa:	b2e3      	uxtb	r3, r4
 80214fc:	ea4f 04e8 	mov.w	r4, r8, asr #3
 8021500:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8021504:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021508:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802150c:	fa5f f888 	uxtb.w	r8, r8
 8021510:	fb04 6403 	mla	r4, r4, r3, r6
 8021514:	fb00 cc03 	mla	ip, r0, r3, ip
 8021518:	fb08 5303 	mla	r3, r8, r3, r5
 802151c:	fa1f fc8c 	uxth.w	ip, ip
 8021520:	b298      	uxth	r0, r3
 8021522:	b2a5      	uxth	r5, r4
 8021524:	f10c 0301 	add.w	r3, ip, #1
 8021528:	1c44      	adds	r4, r0, #1
 802152a:	1c6e      	adds	r6, r5, #1
 802152c:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8021530:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021534:	eb06 2015 	add.w	r0, r6, r5, lsr #8
 8021538:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802153c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8021540:	0940      	lsrs	r0, r0, #5
 8021542:	4323      	orrs	r3, r4
 8021544:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021548:	4303      	orrs	r3, r0
 802154a:	803b      	strh	r3, [r7, #0]
 802154c:	3702      	adds	r7, #2
 802154e:	4577      	cmp	r7, lr
 8021550:	4449      	add	r1, r9
 8021552:	4452      	add	r2, sl
 8021554:	d1a7      	bne.n	80214a6 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8021556:	9b02      	ldr	r3, [sp, #8]
 8021558:	2b00      	cmp	r3, #0
 802155a:	f73f af66 	bgt.w	802142a <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 802155e:	b005      	add	sp, #20
 8021560:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021564:	f43f af5d 	beq.w	8021422 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021568:	f103 38ff 	add.w	r8, r3, #4294967295
 802156c:	fb08 1c09 	mla	ip, r8, r9, r1
 8021570:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 8021574:	f53f af55 	bmi.w	8021422 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021578:	4560      	cmp	r0, ip
 802157a:	dd65      	ble.n	8021648 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802157c:	fb08 280a 	mla	r8, r8, sl, r2
 8021580:	ea5f 4828 	movs.w	r8, r8, asr #16
 8021584:	d460      	bmi.n	8021648 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8021586:	45b8      	cmp	r8, r7
 8021588:	da5e      	bge.n	8021648 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802158a:	2b00      	cmp	r3, #0
 802158c:	f77f af49 	ble.w	8021422 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021590:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 8021594:	e03f      	b.n	8021616 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8021596:	b2f0      	uxtb	r0, r6
 8021598:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 802159c:	f3c3 2707 	ubfx	r7, r3, #8, #8
 80215a0:	b284      	uxth	r4, r0
 80215a2:	b2db      	uxtb	r3, r3
 80215a4:	b376      	cbz	r6, 8021604 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80215a6:	43c0      	mvns	r0, r0
 80215a8:	f8be 6000 	ldrh.w	r6, [lr]
 80215ac:	fb17 f704 	smulbb	r7, r7, r4
 80215b0:	fb1c fc04 	smulbb	ip, ip, r4
 80215b4:	fb13 f304 	smulbb	r3, r3, r4
 80215b8:	1235      	asrs	r5, r6, #8
 80215ba:	10f4      	asrs	r4, r6, #3
 80215bc:	00f6      	lsls	r6, r6, #3
 80215be:	b2c0      	uxtb	r0, r0
 80215c0:	b2f6      	uxtb	r6, r6
 80215c2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80215c6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80215ca:	fb04 7400 	mla	r4, r4, r0, r7
 80215ce:	fb06 3300 	mla	r3, r6, r0, r3
 80215d2:	fb05 c500 	mla	r5, r5, r0, ip
 80215d6:	b2a4      	uxth	r4, r4
 80215d8:	b2ad      	uxth	r5, r5
 80215da:	b29b      	uxth	r3, r3
 80215dc:	1c6e      	adds	r6, r5, #1
 80215de:	1c5f      	adds	r7, r3, #1
 80215e0:	1c60      	adds	r0, r4, #1
 80215e2:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 80215e6:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 80215ea:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 80215ee:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80215f2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80215f6:	0940      	lsrs	r0, r0, #5
 80215f8:	432b      	orrs	r3, r5
 80215fa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80215fe:	4303      	orrs	r3, r0
 8021600:	f8ae 3000 	strh.w	r3, [lr]
 8021604:	f10e 0e02 	add.w	lr, lr, #2
 8021608:	45c6      	cmp	lr, r8
 802160a:	4449      	add	r1, r9
 802160c:	4452      	add	r2, sl
 802160e:	f43f af08 	beq.w	8021422 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021612:	f9bb 0008 	ldrsh.w	r0, [fp, #8]
 8021616:	9c00      	ldr	r4, [sp, #0]
 8021618:	1413      	asrs	r3, r2, #16
 802161a:	fb00 4303 	mla	r3, r0, r3, r4
 802161e:	1408      	asrs	r0, r1, #16
 8021620:	5c1b      	ldrb	r3, [r3, r0]
 8021622:	9801      	ldr	r0, [sp, #4]
 8021624:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8021628:	0e1e      	lsrs	r6, r3, #24
 802162a:	2eff      	cmp	r6, #255	@ 0xff
 802162c:	d1b3      	bne.n	8021596 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802162e:	0958      	lsrs	r0, r3, #5
 8021630:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 8021634:	480d      	ldr	r0, [pc, #52]	@ (802166c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 8021636:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 802163a:	4320      	orrs	r0, r4
 802163c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8021640:	4303      	orrs	r3, r0
 8021642:	f8ae 3000 	strh.w	r3, [lr]
 8021646:	e7dd      	b.n	8021604 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8021648:	2b00      	cmp	r3, #0
 802164a:	f77f aeea 	ble.w	8021422 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802164e:	4677      	mov	r7, lr
 8021650:	140c      	asrs	r4, r1, #16
 8021652:	e725      	b.n	80214a0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf4>
 8021654:	0958      	lsrs	r0, r3, #5
 8021656:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 802165a:	4804      	ldr	r0, [pc, #16]	@ (802166c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 802165c:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 8021660:	4320      	orrs	r0, r4
 8021662:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8021666:	4303      	orrs	r3, r0
 8021668:	803b      	strh	r3, [r7, #0]
 802166a:	e76f      	b.n	802154c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 802166c:	fffff800 	.word	0xfffff800

08021670 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021674:	b089      	sub	sp, #36	@ 0x24
 8021676:	f89d 506c 	ldrb.w	r5, [sp, #108]	@ 0x6c
 802167a:	9104      	str	r1, [sp, #16]
 802167c:	ea6f 0c05 	mvn.w	ip, r5
 8021680:	e9dd 4117 	ldrd	r4, r1, [sp, #92]	@ 0x5c
 8021684:	e9dd 6715 	ldrd	r6, r7, [sp, #84]	@ 0x54
 8021688:	6860      	ldr	r0, [r4, #4]
 802168a:	9205      	str	r2, [sp, #20]
 802168c:	e9dd 2b19 	ldrd	r2, fp, [sp, #100]	@ 0x64
 8021690:	fb00 1102 	mla	r1, r0, r2, r1
 8021694:	6824      	ldr	r4, [r4, #0]
 8021696:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802169a:	4421      	add	r1, r4
 802169c:	f8db 4004 	ldr.w	r4, [fp, #4]
 80216a0:	f8db 2000 	ldr.w	r2, [fp]
 80216a4:	3404      	adds	r4, #4
 80216a6:	fa5f fc8c 	uxtb.w	ip, ip
 80216aa:	fa1f f985 	uxth.w	r9, r5
 80216ae:	9407      	str	r4, [sp, #28]
 80216b0:	9202      	str	r2, [sp, #8]
 80216b2:	e9dd 2013 	ldrd	r2, r0, [sp, #76]	@ 0x4c
 80216b6:	9c04      	ldr	r4, [sp, #16]
 80216b8:	2c00      	cmp	r4, #0
 80216ba:	dc03      	bgt.n	80216c4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80216bc:	9c05      	ldr	r4, [sp, #20]
 80216be:	2c00      	cmp	r4, #0
 80216c0:	f340 80b1 	ble.w	8021826 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80216c4:	e9db e802 	ldrd	lr, r8, [fp, #8]
 80216c8:	2b00      	cmp	r3, #0
 80216ca:	fa0f f588 	sxth.w	r5, r8
 80216ce:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80216d2:	f500 4000 	add.w	r0, r0, #32768	@ 0x8000
 80216d6:	fa0f f48e 	sxth.w	r4, lr
 80216da:	9503      	str	r5, [sp, #12]
 80216dc:	f340 80a6 	ble.w	802182c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80216e0:	46f2      	mov	sl, lr
 80216e2:	9401      	str	r4, [sp, #4]
 80216e4:	1415      	asrs	r5, r2, #16
 80216e6:	d408      	bmi.n	80216fa <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80216e8:	9c01      	ldr	r4, [sp, #4]
 80216ea:	42a5      	cmp	r5, r4
 80216ec:	da05      	bge.n	80216fa <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80216ee:	ea5f 4e20 	movs.w	lr, r0, asr #16
 80216f2:	d402      	bmi.n	80216fa <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80216f4:	9c03      	ldr	r4, [sp, #12]
 80216f6:	45a6      	cmp	lr, r4
 80216f8:	db3e      	blt.n	8021778 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x108>
 80216fa:	3b01      	subs	r3, #1
 80216fc:	4432      	add	r2, r6
 80216fe:	4438      	add	r0, r7
 8021700:	f101 0103 	add.w	r1, r1, #3
 8021704:	d1ee      	bne.n	80216e4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021706:	9b04      	ldr	r3, [sp, #16]
 8021708:	2b00      	cmp	r3, #0
 802170a:	f340 808c 	ble.w	8021826 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 802170e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021712:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021716:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802171a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802171e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021722:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021726:	ee61 7a27 	vmul.f32	s15, s2, s15
 802172a:	ee76 6a62 	vsub.f32	s13, s12, s5
 802172e:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021732:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021736:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802173a:	ee16 2a90 	vmov	r2, s13
 802173e:	3b01      	subs	r3, #1
 8021740:	9304      	str	r3, [sp, #16]
 8021742:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8021744:	9c05      	ldr	r4, [sp, #20]
 8021746:	fb92 f6f3 	sdiv	r6, r2, r3
 802174a:	ee17 2a10 	vmov	r2, s14
 802174e:	eeb0 7a43 	vmov.f32	s14, s6
 8021752:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021756:	ee17 0a10 	vmov	r0, s14
 802175a:	eeb0 7a62 	vmov.f32	s14, s5
 802175e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021762:	fb92 f7f3 	sdiv	r7, r2, r3
 8021766:	eeb0 3a67 	vmov.f32	s6, s15
 802176a:	ee17 2a10 	vmov	r2, s14
 802176e:	eef0 2a46 	vmov.f32	s5, s12
 8021772:	bf08      	it	eq
 8021774:	4623      	moveq	r3, r4
 8021776:	e79e      	b.n	80216b6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8021778:	9506      	str	r5, [sp, #24]
 802177a:	1e5d      	subs	r5, r3, #1
 802177c:	46d6      	mov	lr, sl
 802177e:	fb05 2a06 	mla	sl, r5, r6, r2
 8021782:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021786:	9c01      	ldr	r4, [sp, #4]
 8021788:	9501      	str	r5, [sp, #4]
 802178a:	d559      	bpl.n	8021840 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 802178c:	460c      	mov	r4, r1
 802178e:	9d06      	ldr	r5, [sp, #24]
 8021790:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021794:	4419      	add	r1, r3
 8021796:	4673      	mov	r3, lr
 8021798:	46b6      	mov	lr, r6
 802179a:	4646      	mov	r6, r8
 802179c:	e002      	b.n	80217a4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802179e:	1415      	asrs	r5, r2, #16
 80217a0:	e9db 3602 	ldrd	r3, r6, [fp, #8]
 80217a4:	2d00      	cmp	r5, #0
 80217a6:	4472      	add	r2, lr
 80217a8:	db35      	blt.n	8021816 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80217aa:	429d      	cmp	r5, r3
 80217ac:	da33      	bge.n	8021816 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80217ae:	ea5f 4820 	movs.w	r8, r0, asr #16
 80217b2:	d430      	bmi.n	8021816 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80217b4:	45b0      	cmp	r8, r6
 80217b6:	b21b      	sxth	r3, r3
 80217b8:	da2d      	bge.n	8021816 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80217ba:	9e02      	ldr	r6, [sp, #8]
 80217bc:	fb08 6303 	mla	r3, r8, r3, r6
 80217c0:	7826      	ldrb	r6, [r4, #0]
 80217c2:	5d5b      	ldrb	r3, [r3, r5]
 80217c4:	fb16 f80c 	smulbb	r8, r6, ip
 80217c8:	9d07      	ldr	r5, [sp, #28]
 80217ca:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80217ce:	5cee      	ldrb	r6, [r5, r3]
 80217d0:	442b      	add	r3, r5
 80217d2:	fb06 8609 	mla	r6, r6, r9, r8
 80217d6:	b2b6      	uxth	r6, r6
 80217d8:	7865      	ldrb	r5, [r4, #1]
 80217da:	f106 0801 	add.w	r8, r6, #1
 80217de:	eb08 2616 	add.w	r6, r8, r6, lsr #8
 80217e2:	1236      	asrs	r6, r6, #8
 80217e4:	fb15 f80c 	smulbb	r8, r5, ip
 80217e8:	7026      	strb	r6, [r4, #0]
 80217ea:	785d      	ldrb	r5, [r3, #1]
 80217ec:	78a6      	ldrb	r6, [r4, #2]
 80217ee:	fb05 8509 	mla	r5, r5, r9, r8
 80217f2:	b2ad      	uxth	r5, r5
 80217f4:	f105 0801 	add.w	r8, r5, #1
 80217f8:	eb08 2515 	add.w	r5, r8, r5, lsr #8
 80217fc:	122d      	asrs	r5, r5, #8
 80217fe:	fb16 f60c 	smulbb	r6, r6, ip
 8021802:	7065      	strb	r5, [r4, #1]
 8021804:	789b      	ldrb	r3, [r3, #2]
 8021806:	fb03 6309 	mla	r3, r3, r9, r6
 802180a:	b29b      	uxth	r3, r3
 802180c:	1c5d      	adds	r5, r3, #1
 802180e:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8021812:	121b      	asrs	r3, r3, #8
 8021814:	70a3      	strb	r3, [r4, #2]
 8021816:	3403      	adds	r4, #3
 8021818:	428c      	cmp	r4, r1
 802181a:	4438      	add	r0, r7
 802181c:	d1bf      	bne.n	802179e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802181e:	9b04      	ldr	r3, [sp, #16]
 8021820:	2b00      	cmp	r3, #0
 8021822:	f73f af74 	bgt.w	802170e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8021826:	b009      	add	sp, #36	@ 0x24
 8021828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802182c:	f43f af6b 	beq.w	8021706 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021830:	1e5d      	subs	r5, r3, #1
 8021832:	fb05 2a06 	mla	sl, r5, r6, r2
 8021836:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 802183a:	9501      	str	r5, [sp, #4]
 802183c:	f53f af63 	bmi.w	8021706 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021840:	4554      	cmp	r4, sl
 8021842:	dd54      	ble.n	80218ee <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8021844:	9d01      	ldr	r5, [sp, #4]
 8021846:	fb05 0507 	mla	r5, r5, r7, r0
 802184a:	ea5f 4a25 	movs.w	sl, r5, asr #16
 802184e:	d44e      	bmi.n	80218ee <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8021850:	9d03      	ldr	r5, [sp, #12]
 8021852:	45aa      	cmp	sl, r5
 8021854:	da4b      	bge.n	80218ee <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8021856:	2b00      	cmp	r3, #0
 8021858:	f77f af55 	ble.w	8021706 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802185c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021860:	eb01 0e03 	add.w	lr, r1, r3
 8021864:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8021868:	3103      	adds	r1, #3
 802186a:	e002      	b.n	8021872 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 802186c:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 8021870:	3103      	adds	r1, #3
 8021872:	9d02      	ldr	r5, [sp, #8]
 8021874:	1403      	asrs	r3, r0, #16
 8021876:	fb04 5303 	mla	r3, r4, r3, r5
 802187a:	1415      	asrs	r5, r2, #16
 802187c:	f811 4c03 	ldrb.w	r4, [r1, #-3]
 8021880:	5d5b      	ldrb	r3, [r3, r5]
 8021882:	fb14 f40c 	smulbb	r4, r4, ip
 8021886:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802188a:	f818 5003 	ldrb.w	r5, [r8, r3]
 802188e:	4443      	add	r3, r8
 8021890:	fb05 4509 	mla	r5, r5, r9, r4
 8021894:	b2ad      	uxth	r5, r5
 8021896:	f105 0a01 	add.w	sl, r5, #1
 802189a:	f811 4c02 	ldrb.w	r4, [r1, #-2]
 802189e:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80218a2:	122d      	asrs	r5, r5, #8
 80218a4:	fb14 f40c 	smulbb	r4, r4, ip
 80218a8:	f801 5c03 	strb.w	r5, [r1, #-3]
 80218ac:	785d      	ldrb	r5, [r3, #1]
 80218ae:	f811 ac01 	ldrb.w	sl, [r1, #-1]
 80218b2:	fb05 4409 	mla	r4, r5, r9, r4
 80218b6:	b2a4      	uxth	r4, r4
 80218b8:	1c65      	adds	r5, r4, #1
 80218ba:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 80218be:	1224      	asrs	r4, r4, #8
 80218c0:	fb1a fa0c 	smulbb	sl, sl, ip
 80218c4:	f801 4c02 	strb.w	r4, [r1, #-2]
 80218c8:	789b      	ldrb	r3, [r3, #2]
 80218ca:	458e      	cmp	lr, r1
 80218cc:	fb03 aa09 	mla	sl, r3, r9, sl
 80218d0:	fa1f fa8a 	uxth.w	sl, sl
 80218d4:	f10a 0301 	add.w	r3, sl, #1
 80218d8:	eb03 2a1a 	add.w	sl, r3, sl, lsr #8
 80218dc:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80218e0:	4438      	add	r0, r7
 80218e2:	4432      	add	r2, r6
 80218e4:	f801 ac01 	strb.w	sl, [r1, #-1]
 80218e8:	d1c0      	bne.n	802186c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80218ea:	4671      	mov	r1, lr
 80218ec:	e70b      	b.n	8021706 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80218ee:	2b00      	cmp	r3, #0
 80218f0:	f77f af09 	ble.w	8021706 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80218f4:	1415      	asrs	r5, r2, #16
 80218f6:	460c      	mov	r4, r1
 80218f8:	9506      	str	r5, [sp, #24]
 80218fa:	e749      	b.n	8021790 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>

080218fc <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80218fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021900:	4689      	mov	r9, r1
 8021902:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021906:	46c8      	mov	r8, r9
 8021908:	b087      	sub	sp, #28
 802190a:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 802190e:	684c      	ldr	r4, [r1, #4]
 8021910:	9203      	str	r2, [sp, #12]
 8021912:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 8021916:	fb04 0202 	mla	r2, r4, r2, r0
 802191a:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 802191e:	680d      	ldr	r5, [r1, #0]
 8021920:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8021924:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8021928:	f8dc 2000 	ldr.w	r2, [ip]
 802192c:	4428      	add	r0, r5
 802192e:	f104 0b04 	add.w	fp, r4, #4
 8021932:	9205      	str	r2, [sp, #20]
 8021934:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8021938:	f1b8 0f00 	cmp.w	r8, #0
 802193c:	dc03      	bgt.n	8021946 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802193e:	9c03      	ldr	r4, [sp, #12]
 8021940:	2c00      	cmp	r4, #0
 8021942:	f340 808d 	ble.w	8021a60 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021946:	e9dc ea02 	ldrd	lr, sl, [ip, #8]
 802194a:	2b00      	cmp	r3, #0
 802194c:	fa0f f58a 	sxth.w	r5, sl
 8021950:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021954:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021958:	fa0f f48e 	sxth.w	r4, lr
 802195c:	9502      	str	r5, [sp, #8]
 802195e:	f340 8082 	ble.w	8021a66 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8021962:	46f1      	mov	r9, lr
 8021964:	9401      	str	r4, [sp, #4]
 8021966:	1415      	asrs	r5, r2, #16
 8021968:	d408      	bmi.n	802197c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802196a:	9c01      	ldr	r4, [sp, #4]
 802196c:	42a5      	cmp	r5, r4
 802196e:	da05      	bge.n	802197c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8021970:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8021974:	d402      	bmi.n	802197c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8021976:	9c02      	ldr	r4, [sp, #8]
 8021978:	45a6      	cmp	lr, r4
 802197a:	db3b      	blt.n	80219f4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 802197c:	3b01      	subs	r3, #1
 802197e:	4432      	add	r2, r6
 8021980:	4439      	add	r1, r7
 8021982:	f100 0003 	add.w	r0, r0, #3
 8021986:	d1ee      	bne.n	8021966 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021988:	f1b8 0f00 	cmp.w	r8, #0
 802198c:	dd68      	ble.n	8021a60 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802198e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021992:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021996:	eec5 7a80 	vdiv.f32	s15, s11, s0
 802199a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802199e:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80219a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80219a6:	ee76 6a62 	vsub.f32	s13, s12, s5
 80219aa:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80219ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80219b2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80219b6:	ee16 2a90 	vmov	r2, s13
 80219ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80219bc:	9c03      	ldr	r4, [sp, #12]
 80219be:	fb92 f6f3 	sdiv	r6, r2, r3
 80219c2:	ee17 2a10 	vmov	r2, s14
 80219c6:	eeb0 7a43 	vmov.f32	s14, s6
 80219ca:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80219ce:	ee17 1a10 	vmov	r1, s14
 80219d2:	eeb0 7a62 	vmov.f32	s14, s5
 80219d6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80219da:	f1b8 0801 	subs.w	r8, r8, #1
 80219de:	fb92 f7f3 	sdiv	r7, r2, r3
 80219e2:	eeb0 3a67 	vmov.f32	s6, s15
 80219e6:	ee17 2a10 	vmov	r2, s14
 80219ea:	eef0 2a46 	vmov.f32	s5, s12
 80219ee:	bf08      	it	eq
 80219f0:	4623      	moveq	r3, r4
 80219f2:	e7a1      	b.n	8021938 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80219f4:	9c01      	ldr	r4, [sp, #4]
 80219f6:	9501      	str	r5, [sp, #4]
 80219f8:	1e5d      	subs	r5, r3, #1
 80219fa:	46ce      	mov	lr, r9
 80219fc:	fb06 2905 	mla	r9, r6, r5, r2
 8021a00:	ea5f 4929 	movs.w	r9, r9, asr #16
 8021a04:	9504      	str	r5, [sp, #16]
 8021a06:	d536      	bpl.n	8021a76 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 8021a08:	4604      	mov	r4, r0
 8021a0a:	9d01      	ldr	r5, [sp, #4]
 8021a0c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021a10:	4418      	add	r0, r3
 8021a12:	4673      	mov	r3, lr
 8021a14:	46b6      	mov	lr, r6
 8021a16:	4656      	mov	r6, sl
 8021a18:	e002      	b.n	8021a20 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8021a1a:	1415      	asrs	r5, r2, #16
 8021a1c:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021a20:	2d00      	cmp	r5, #0
 8021a22:	4472      	add	r2, lr
 8021a24:	db15      	blt.n	8021a52 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021a26:	429d      	cmp	r5, r3
 8021a28:	da13      	bge.n	8021a52 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021a2a:	ea5f 4921 	movs.w	r9, r1, asr #16
 8021a2e:	d410      	bmi.n	8021a52 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021a30:	45b1      	cmp	r9, r6
 8021a32:	da0e      	bge.n	8021a52 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021a34:	9e05      	ldr	r6, [sp, #20]
 8021a36:	b21b      	sxth	r3, r3
 8021a38:	fb09 6303 	mla	r3, r9, r3, r6
 8021a3c:	5d5b      	ldrb	r3, [r3, r5]
 8021a3e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021a42:	f81b 5003 	ldrb.w	r5, [fp, r3]
 8021a46:	445b      	add	r3, fp
 8021a48:	7025      	strb	r5, [r4, #0]
 8021a4a:	785d      	ldrb	r5, [r3, #1]
 8021a4c:	7065      	strb	r5, [r4, #1]
 8021a4e:	789b      	ldrb	r3, [r3, #2]
 8021a50:	70a3      	strb	r3, [r4, #2]
 8021a52:	3403      	adds	r4, #3
 8021a54:	4284      	cmp	r4, r0
 8021a56:	4439      	add	r1, r7
 8021a58:	d1df      	bne.n	8021a1a <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8021a5a:	f1b8 0f00 	cmp.w	r8, #0
 8021a5e:	dc96      	bgt.n	802198e <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021a60:	b007      	add	sp, #28
 8021a62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021a66:	d08f      	beq.n	8021988 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021a68:	1e5d      	subs	r5, r3, #1
 8021a6a:	fb06 2905 	mla	r9, r6, r5, r2
 8021a6e:	ea5f 4929 	movs.w	r9, r9, asr #16
 8021a72:	9504      	str	r5, [sp, #16]
 8021a74:	d488      	bmi.n	8021988 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021a76:	45a1      	cmp	r9, r4
 8021a78:	da2d      	bge.n	8021ad6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021a7a:	9d04      	ldr	r5, [sp, #16]
 8021a7c:	fb07 1505 	mla	r5, r7, r5, r1
 8021a80:	ea5f 4925 	movs.w	r9, r5, asr #16
 8021a84:	d427      	bmi.n	8021ad6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021a86:	9d02      	ldr	r5, [sp, #8]
 8021a88:	454d      	cmp	r5, r9
 8021a8a:	dd24      	ble.n	8021ad6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021a8c:	2b00      	cmp	r3, #0
 8021a8e:	f77f af7b 	ble.w	8021988 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021a92:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021a96:	18c5      	adds	r5, r0, r3
 8021a98:	f8dd e014 	ldr.w	lr, [sp, #20]
 8021a9c:	3003      	adds	r0, #3
 8021a9e:	e002      	b.n	8021aa6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8021aa0:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 8021aa4:	3003      	adds	r0, #3
 8021aa6:	140b      	asrs	r3, r1, #16
 8021aa8:	fb04 e303 	mla	r3, r4, r3, lr
 8021aac:	1414      	asrs	r4, r2, #16
 8021aae:	5d1b      	ldrb	r3, [r3, r4]
 8021ab0:	4285      	cmp	r5, r0
 8021ab2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021ab6:	f81b 4003 	ldrb.w	r4, [fp, r3]
 8021aba:	445b      	add	r3, fp
 8021abc:	f800 4c03 	strb.w	r4, [r0, #-3]
 8021ac0:	785c      	ldrb	r4, [r3, #1]
 8021ac2:	4439      	add	r1, r7
 8021ac4:	f800 4c02 	strb.w	r4, [r0, #-2]
 8021ac8:	789b      	ldrb	r3, [r3, #2]
 8021aca:	4432      	add	r2, r6
 8021acc:	f800 3c01 	strb.w	r3, [r0, #-1]
 8021ad0:	d1e6      	bne.n	8021aa0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021ad2:	4628      	mov	r0, r5
 8021ad4:	e758      	b.n	8021988 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021ad6:	2b00      	cmp	r3, #0
 8021ad8:	f77f af56 	ble.w	8021988 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021adc:	1415      	asrs	r5, r2, #16
 8021ade:	4604      	mov	r4, r0
 8021ae0:	9501      	str	r5, [sp, #4]
 8021ae2:	e793      	b.n	8021a0c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>

08021ae4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021ae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021ae8:	b087      	sub	sp, #28
 8021aea:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8021aee:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 8021af2:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 8021af6:	684c      	ldr	r4, [r1, #4]
 8021af8:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021afc:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8021b00:	fb04 0202 	mla	r2, r4, r2, r0
 8021b04:	eb02 0542 	add.w	r5, r2, r2, lsl #1
 8021b08:	f8dc 2000 	ldr.w	r2, [ip]
 8021b0c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8021b10:	9201      	str	r2, [sp, #4]
 8021b12:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8021b16:	6808      	ldr	r0, [r1, #0]
 8021b18:	9204      	str	r2, [sp, #16]
 8021b1a:	1d22      	adds	r2, r4, #4
 8021b1c:	e9dd e111 	ldrd	lr, r1, [sp, #68]	@ 0x44
 8021b20:	9205      	str	r2, [sp, #20]
 8021b22:	4672      	mov	r2, lr
 8021b24:	4428      	add	r0, r5
 8021b26:	9c02      	ldr	r4, [sp, #8]
 8021b28:	2c00      	cmp	r4, #0
 8021b2a:	dc03      	bgt.n	8021b34 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8021b2c:	9c03      	ldr	r4, [sp, #12]
 8021b2e:	2c00      	cmp	r4, #0
 8021b30:	f340 80ba 	ble.w	8021ca8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021b34:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 8021b38:	2b00      	cmp	r3, #0
 8021b3a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021b3e:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021b42:	fa0f f48e 	sxth.w	r4, lr
 8021b46:	fa0f f988 	sxth.w	r9, r8
 8021b4a:	f340 80b0 	ble.w	8021cae <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8021b4e:	1415      	asrs	r5, r2, #16
 8021b50:	d406      	bmi.n	8021b60 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021b52:	42a5      	cmp	r5, r4
 8021b54:	da04      	bge.n	8021b60 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021b56:	ea5f 4a21 	movs.w	sl, r1, asr #16
 8021b5a:	d401      	bmi.n	8021b60 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021b5c:	45ca      	cmp	sl, r9
 8021b5e:	db3c      	blt.n	8021bda <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf6>
 8021b60:	3b01      	subs	r3, #1
 8021b62:	4432      	add	r2, r6
 8021b64:	4439      	add	r1, r7
 8021b66:	f100 0003 	add.w	r0, r0, #3
 8021b6a:	d1f0      	bne.n	8021b4e <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021b6c:	9b02      	ldr	r3, [sp, #8]
 8021b6e:	2b00      	cmp	r3, #0
 8021b70:	f340 809a 	ble.w	8021ca8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021b74:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021b78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021b7c:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021b80:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021b84:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021b88:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021b8c:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021b90:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021b94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021b98:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021b9c:	ee16 2a90 	vmov	r2, s13
 8021ba0:	3b01      	subs	r3, #1
 8021ba2:	9302      	str	r3, [sp, #8]
 8021ba4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021ba6:	9c03      	ldr	r4, [sp, #12]
 8021ba8:	fb92 f6f3 	sdiv	r6, r2, r3
 8021bac:	ee17 2a10 	vmov	r2, s14
 8021bb0:	eeb0 7a43 	vmov.f32	s14, s6
 8021bb4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021bb8:	ee17 1a10 	vmov	r1, s14
 8021bbc:	eeb0 7a62 	vmov.f32	s14, s5
 8021bc0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021bc4:	fb92 f7f3 	sdiv	r7, r2, r3
 8021bc8:	eeb0 3a67 	vmov.f32	s6, s15
 8021bcc:	ee17 2a10 	vmov	r2, s14
 8021bd0:	eef0 2a46 	vmov.f32	s5, s12
 8021bd4:	bf08      	it	eq
 8021bd6:	4623      	moveq	r3, r4
 8021bd8:	e7a5      	b.n	8021b26 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021bda:	f103 3bff 	add.w	fp, r3, #4294967295
 8021bde:	fb0b 2a06 	mla	sl, fp, r6, r2
 8021be2:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021be6:	d56c      	bpl.n	8021cc2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8021be8:	4604      	mov	r4, r0
 8021bea:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021bee:	4418      	add	r0, r3
 8021bf0:	4673      	mov	r3, lr
 8021bf2:	46b6      	mov	lr, r6
 8021bf4:	4646      	mov	r6, r8
 8021bf6:	e002      	b.n	8021bfe <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021bf8:	1415      	asrs	r5, r2, #16
 8021bfa:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021bfe:	2d00      	cmp	r5, #0
 8021c00:	4472      	add	r2, lr
 8021c02:	db49      	blt.n	8021c98 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c04:	429d      	cmp	r5, r3
 8021c06:	da47      	bge.n	8021c98 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c08:	ea5f 4821 	movs.w	r8, r1, asr #16
 8021c0c:	d444      	bmi.n	8021c98 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c0e:	45b0      	cmp	r8, r6
 8021c10:	b21b      	sxth	r3, r3
 8021c12:	da41      	bge.n	8021c98 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c14:	9e01      	ldr	r6, [sp, #4]
 8021c16:	fb08 6303 	mla	r3, r8, r3, r6
 8021c1a:	5d5b      	ldrb	r3, [r3, r5]
 8021c1c:	9d05      	ldr	r5, [sp, #20]
 8021c1e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021c22:	0e1d      	lsrs	r5, r3, #24
 8021c24:	d038      	beq.n	8021c98 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c26:	9e04      	ldr	r6, [sp, #16]
 8021c28:	fa5f f983 	uxtb.w	r9, r3
 8021c2c:	fb06 f605 	mul.w	r6, r6, r5
 8021c30:	1c75      	adds	r5, r6, #1
 8021c32:	eb05 2526 	add.w	r5, r5, r6, asr #8
 8021c36:	122d      	asrs	r5, r5, #8
 8021c38:	43ee      	mvns	r6, r5
 8021c3a:	b2ad      	uxth	r5, r5
 8021c3c:	fb19 f905 	smulbb	r9, r9, r5
 8021c40:	f3c3 2807 	ubfx	r8, r3, #8, #8
 8021c44:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021c48:	f894 a000 	ldrb.w	sl, [r4]
 8021c4c:	fb18 f805 	smulbb	r8, r8, r5
 8021c50:	fb13 f305 	smulbb	r3, r3, r5
 8021c54:	b2f5      	uxtb	r5, r6
 8021c56:	fb0a 9605 	mla	r6, sl, r5, r9
 8021c5a:	f894 b001 	ldrb.w	fp, [r4, #1]
 8021c5e:	f894 9002 	ldrb.w	r9, [r4, #2]
 8021c62:	fb0b 8805 	mla	r8, fp, r5, r8
 8021c66:	fb09 3305 	mla	r3, r9, r5, r3
 8021c6a:	fa1f fa86 	uxth.w	sl, r6
 8021c6e:	fa1f f888 	uxth.w	r8, r8
 8021c72:	b29b      	uxth	r3, r3
 8021c74:	f10a 0601 	add.w	r6, sl, #1
 8021c78:	f108 0501 	add.w	r5, r8, #1
 8021c7c:	f103 0901 	add.w	r9, r3, #1
 8021c80:	eb06 261a 	add.w	r6, r6, sl, lsr #8
 8021c84:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 8021c88:	eb09 2313 	add.w	r3, r9, r3, lsr #8
 8021c8c:	1236      	asrs	r6, r6, #8
 8021c8e:	122d      	asrs	r5, r5, #8
 8021c90:	121b      	asrs	r3, r3, #8
 8021c92:	7026      	strb	r6, [r4, #0]
 8021c94:	7065      	strb	r5, [r4, #1]
 8021c96:	70a3      	strb	r3, [r4, #2]
 8021c98:	3403      	adds	r4, #3
 8021c9a:	4284      	cmp	r4, r0
 8021c9c:	4439      	add	r1, r7
 8021c9e:	d1ab      	bne.n	8021bf8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8021ca0:	9b02      	ldr	r3, [sp, #8]
 8021ca2:	2b00      	cmp	r3, #0
 8021ca4:	f73f af66 	bgt.w	8021b74 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021ca8:	b007      	add	sp, #28
 8021caa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021cae:	f43f af5d 	beq.w	8021b6c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021cb2:	f103 3bff 	add.w	fp, r3, #4294967295
 8021cb6:	fb0b 2a06 	mla	sl, fp, r6, r2
 8021cba:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021cbe:	f53f af55 	bmi.w	8021b6c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021cc2:	4554      	cmp	r4, sl
 8021cc4:	dd64      	ble.n	8021d90 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021cc6:	fb0b 1b07 	mla	fp, fp, r7, r1
 8021cca:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 8021cce:	d45f      	bmi.n	8021d90 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021cd0:	45cb      	cmp	fp, r9
 8021cd2:	da5d      	bge.n	8021d90 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021cd4:	2b00      	cmp	r3, #0
 8021cd6:	f77f af49 	ble.w	8021b6c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021cda:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021cde:	eb00 0e03 	add.w	lr, r0, r3
 8021ce2:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8021ce6:	3003      	adds	r0, #3
 8021ce8:	e002      	b.n	8021cf0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8021cea:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 8021cee:	3003      	adds	r0, #3
 8021cf0:	9d01      	ldr	r5, [sp, #4]
 8021cf2:	140b      	asrs	r3, r1, #16
 8021cf4:	fb04 5303 	mla	r3, r4, r3, r5
 8021cf8:	1414      	asrs	r4, r2, #16
 8021cfa:	5d1b      	ldrb	r3, [r3, r4]
 8021cfc:	4432      	add	r2, r6
 8021cfe:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8021d02:	4439      	add	r1, r7
 8021d04:	ea5f 6a13 	movs.w	sl, r3, lsr #24
 8021d08:	d03e      	beq.n	8021d88 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8021d0a:	9c04      	ldr	r4, [sp, #16]
 8021d0c:	fa5f f983 	uxtb.w	r9, r3
 8021d10:	fb04 f40a 	mul.w	r4, r4, sl
 8021d14:	f104 0a01 	add.w	sl, r4, #1
 8021d18:	eb0a 2a24 	add.w	sl, sl, r4, asr #8
 8021d1c:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8021d20:	ea6f 040a 	mvn.w	r4, sl
 8021d24:	fa1f fa8a 	uxth.w	sl, sl
 8021d28:	fb19 f90a 	smulbb	r9, r9, sl
 8021d2c:	f3c3 2507 	ubfx	r5, r3, #8, #8
 8021d30:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021d34:	fb15 fb0a 	smulbb	fp, r5, sl
 8021d38:	fb13 f30a 	smulbb	r3, r3, sl
 8021d3c:	f810 ac03 	ldrb.w	sl, [r0, #-3]
 8021d40:	b2e4      	uxtb	r4, r4
 8021d42:	fb0a 9904 	mla	r9, sl, r4, r9
 8021d46:	f810 5c02 	ldrb.w	r5, [r0, #-2]
 8021d4a:	f810 ac01 	ldrb.w	sl, [r0, #-1]
 8021d4e:	fb05 b504 	mla	r5, r5, r4, fp
 8021d52:	fb0a 3304 	mla	r3, sl, r4, r3
 8021d56:	fa1f f989 	uxth.w	r9, r9
 8021d5a:	b2ad      	uxth	r5, r5
 8021d5c:	b29b      	uxth	r3, r3
 8021d5e:	f109 0b01 	add.w	fp, r9, #1
 8021d62:	f105 0a01 	add.w	sl, r5, #1
 8021d66:	1c5c      	adds	r4, r3, #1
 8021d68:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8021d6c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021d70:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8021d74:	ea4f 2929 	mov.w	r9, r9, asr #8
 8021d78:	122d      	asrs	r5, r5, #8
 8021d7a:	121b      	asrs	r3, r3, #8
 8021d7c:	f800 9c03 	strb.w	r9, [r0, #-3]
 8021d80:	f800 5c02 	strb.w	r5, [r0, #-2]
 8021d84:	f800 3c01 	strb.w	r3, [r0, #-1]
 8021d88:	4586      	cmp	lr, r0
 8021d8a:	d1ae      	bne.n	8021cea <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8021d8c:	4670      	mov	r0, lr
 8021d8e:	e6ed      	b.n	8021b6c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d90:	2b00      	cmp	r3, #0
 8021d92:	f77f aeeb 	ble.w	8021b6c <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d96:	4604      	mov	r4, r0
 8021d98:	1415      	asrs	r5, r2, #16
 8021d9a:	e726      	b.n	8021bea <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>

08021d9c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021d9c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021da4:	b087      	sub	sp, #28
 8021da6:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8021daa:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 8021dae:	e9dd 2b17 	ldrd	r2, fp, [sp, #92]	@ 0x5c
 8021db2:	684c      	ldr	r4, [r1, #4]
 8021db4:	680d      	ldr	r5, [r1, #0]
 8021db6:	fb04 0202 	mla	r2, r4, r2, r0
 8021dba:	e9dd 8913 	ldrd	r8, r9, [sp, #76]	@ 0x4c
 8021dbe:	f8db 4004 	ldr.w	r4, [fp, #4]
 8021dc2:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8021dc6:	3404      	adds	r4, #4
 8021dc8:	f8db 2000 	ldr.w	r2, [fp]
 8021dcc:	4428      	add	r0, r5
 8021dce:	9402      	str	r4, [sp, #8]
 8021dd0:	9201      	str	r2, [sp, #4]
 8021dd2:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8021dd6:	9c03      	ldr	r4, [sp, #12]
 8021dd8:	2c00      	cmp	r4, #0
 8021dda:	dc03      	bgt.n	8021de4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021ddc:	9c04      	ldr	r4, [sp, #16]
 8021dde:	2c00      	cmp	r4, #0
 8021de0:	f340 80b7 	ble.w	8021f52 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021de4:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 8021de8:	2b00      	cmp	r3, #0
 8021dea:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021dee:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021df2:	b234      	sxth	r4, r6
 8021df4:	fa0f fc87 	sxth.w	ip, r7
 8021df8:	f340 80ae 	ble.w	8021f58 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021dfc:	1415      	asrs	r5, r2, #16
 8021dfe:	d406      	bmi.n	8021e0e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e00:	42a5      	cmp	r5, r4
 8021e02:	da04      	bge.n	8021e0e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e04:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8021e08:	d401      	bmi.n	8021e0e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e0a:	45e6      	cmp	lr, ip
 8021e0c:	db3c      	blt.n	8021e88 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xec>
 8021e0e:	3b01      	subs	r3, #1
 8021e10:	4442      	add	r2, r8
 8021e12:	4449      	add	r1, r9
 8021e14:	f100 0003 	add.w	r0, r0, #3
 8021e18:	d1f0      	bne.n	8021dfc <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8021e1a:	9b03      	ldr	r3, [sp, #12]
 8021e1c:	2b00      	cmp	r3, #0
 8021e1e:	f340 8098 	ble.w	8021f52 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021e22:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021e26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021e2a:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021e2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021e32:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021e36:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021e3a:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021e3e:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021e42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e46:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021e4a:	ee16 2a90 	vmov	r2, s13
 8021e4e:	3b01      	subs	r3, #1
 8021e50:	9303      	str	r3, [sp, #12]
 8021e52:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021e54:	9c04      	ldr	r4, [sp, #16]
 8021e56:	fb92 f8f3 	sdiv	r8, r2, r3
 8021e5a:	ee17 2a10 	vmov	r2, s14
 8021e5e:	eeb0 7a43 	vmov.f32	s14, s6
 8021e62:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021e66:	ee17 1a10 	vmov	r1, s14
 8021e6a:	eeb0 7a62 	vmov.f32	s14, s5
 8021e6e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021e72:	fb92 f9f3 	sdiv	r9, r2, r3
 8021e76:	eeb0 3a67 	vmov.f32	s6, s15
 8021e7a:	ee17 2a10 	vmov	r2, s14
 8021e7e:	eef0 2a46 	vmov.f32	s5, s12
 8021e82:	bf08      	it	eq
 8021e84:	4623      	moveq	r3, r4
 8021e86:	e7a6      	b.n	8021dd6 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021e88:	f103 3aff 	add.w	sl, r3, #4294967295
 8021e8c:	fb0a 2e08 	mla	lr, sl, r8, r2
 8021e90:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8021e94:	d56a      	bpl.n	8021f6c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8021e96:	4604      	mov	r4, r0
 8021e98:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021e9c:	4418      	add	r0, r3
 8021e9e:	e002      	b.n	8021ea6 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 8021ea0:	1415      	asrs	r5, r2, #16
 8021ea2:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 8021ea6:	2d00      	cmp	r5, #0
 8021ea8:	db4a      	blt.n	8021f40 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021eaa:	42b5      	cmp	r5, r6
 8021eac:	da48      	bge.n	8021f40 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021eae:	140b      	asrs	r3, r1, #16
 8021eb0:	d446      	bmi.n	8021f40 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021eb2:	42bb      	cmp	r3, r7
 8021eb4:	b236      	sxth	r6, r6
 8021eb6:	da43      	bge.n	8021f40 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021eb8:	9f01      	ldr	r7, [sp, #4]
 8021eba:	fb03 7606 	mla	r6, r3, r6, r7
 8021ebe:	5d73      	ldrb	r3, [r6, r5]
 8021ec0:	9d02      	ldr	r5, [sp, #8]
 8021ec2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021ec6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021eca:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8021ece:	f000 80be 	beq.w	802204e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8021ed2:	b2df      	uxtb	r7, r3
 8021ed4:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8021ed8:	f3c3 4a07 	ubfx	sl, r3, #16, #8
 8021edc:	fa5f f38c 	uxtb.w	r3, ip
 8021ee0:	b29d      	uxth	r5, r3
 8021ee2:	f1bc 0f00 	cmp.w	ip, #0
 8021ee6:	d02b      	beq.n	8021f40 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021ee8:	43db      	mvns	r3, r3
 8021eea:	b2db      	uxtb	r3, r3
 8021eec:	9305      	str	r3, [sp, #20]
 8021eee:	f894 e001 	ldrb.w	lr, [r4, #1]
 8021ef2:	fb17 f305 	smulbb	r3, r7, r5
 8021ef6:	9f05      	ldr	r7, [sp, #20]
 8021ef8:	f894 c002 	ldrb.w	ip, [r4, #2]
 8021efc:	fb1e fe07 	smulbb	lr, lr, r7
 8021f00:	fb1c fc07 	smulbb	ip, ip, r7
 8021f04:	fb06 ee05 	mla	lr, r6, r5, lr
 8021f08:	7827      	ldrb	r7, [r4, #0]
 8021f0a:	9e05      	ldr	r6, [sp, #20]
 8021f0c:	fb0a c505 	mla	r5, sl, r5, ip
 8021f10:	fb07 3706 	mla	r7, r7, r6, r3
 8021f14:	b2ab      	uxth	r3, r5
 8021f16:	b2bf      	uxth	r7, r7
 8021f18:	fa1f f68e 	uxth.w	r6, lr
 8021f1c:	1c7d      	adds	r5, r7, #1
 8021f1e:	f106 0e01 	add.w	lr, r6, #1
 8021f22:	f103 0c01 	add.w	ip, r3, #1
 8021f26:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8021f2a:	eb0c 2613 	add.w	r6, ip, r3, lsr #8
 8021f2e:	eb05 2317 	add.w	r3, r5, r7, lsr #8
 8021f32:	121b      	asrs	r3, r3, #8
 8021f34:	ea4f 272e 	mov.w	r7, lr, asr #8
 8021f38:	1235      	asrs	r5, r6, #8
 8021f3a:	7067      	strb	r7, [r4, #1]
 8021f3c:	70a5      	strb	r5, [r4, #2]
 8021f3e:	7023      	strb	r3, [r4, #0]
 8021f40:	3403      	adds	r4, #3
 8021f42:	4284      	cmp	r4, r0
 8021f44:	4442      	add	r2, r8
 8021f46:	4449      	add	r1, r9
 8021f48:	d1aa      	bne.n	8021ea0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 8021f4a:	9b03      	ldr	r3, [sp, #12]
 8021f4c:	2b00      	cmp	r3, #0
 8021f4e:	f73f af68 	bgt.w	8021e22 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021f52:	b007      	add	sp, #28
 8021f54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f58:	f43f af5f 	beq.w	8021e1a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8021f5c:	f103 3aff 	add.w	sl, r3, #4294967295
 8021f60:	fb0a 2e08 	mla	lr, sl, r8, r2
 8021f64:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8021f68:	f53f af57 	bmi.w	8021e1a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8021f6c:	4574      	cmp	r4, lr
 8021f6e:	dd68      	ble.n	8022042 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021f70:	fb0a 1a09 	mla	sl, sl, r9, r1
 8021f74:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021f78:	d463      	bmi.n	8022042 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021f7a:	45e2      	cmp	sl, ip
 8021f7c:	da61      	bge.n	8022042 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021f7e:	2b00      	cmp	r3, #0
 8021f80:	f77f af4b 	ble.w	8021e1a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8021f84:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021f88:	eb00 0e03 	add.w	lr, r0, r3
 8021f8c:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
 8021f90:	3003      	adds	r0, #3
 8021f92:	e03b      	b.n	802200c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8021f94:	b2fc      	uxtb	r4, r7
 8021f96:	fa5f fc83 	uxtb.w	ip, r3
 8021f9a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8021f9e:	b2a5      	uxth	r5, r4
 8021fa0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021fa4:	b357      	cbz	r7, 8021ffc <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8021fa6:	43e4      	mvns	r4, r4
 8021fa8:	f810 ac02 	ldrb.w	sl, [r0, #-2]
 8021fac:	f810 8c01 	ldrb.w	r8, [r0, #-1]
 8021fb0:	b2e4      	uxtb	r4, r4
 8021fb2:	fb1c fc05 	smulbb	ip, ip, r5
 8021fb6:	fb18 f804 	smulbb	r8, r8, r4
 8021fba:	fb1a fa04 	smulbb	sl, sl, r4
 8021fbe:	f810 7c03 	ldrb.w	r7, [r0, #-3]
 8021fc2:	fb03 8305 	mla	r3, r3, r5, r8
 8021fc6:	fb06 a605 	mla	r6, r6, r5, sl
 8021fca:	fb07 c404 	mla	r4, r7, r4, ip
 8021fce:	b2b6      	uxth	r6, r6
 8021fd0:	b2a4      	uxth	r4, r4
 8021fd2:	b29b      	uxth	r3, r3
 8021fd4:	f106 0c01 	add.w	ip, r6, #1
 8021fd8:	f103 0801 	add.w	r8, r3, #1
 8021fdc:	1c65      	adds	r5, r4, #1
 8021fde:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8021fe2:	eb08 2313 	add.w	r3, r8, r3, lsr #8
 8021fe6:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 8021fea:	1236      	asrs	r6, r6, #8
 8021fec:	121b      	asrs	r3, r3, #8
 8021fee:	122d      	asrs	r5, r5, #8
 8021ff0:	f800 6c02 	strb.w	r6, [r0, #-2]
 8021ff4:	f800 3c01 	strb.w	r3, [r0, #-1]
 8021ff8:	f800 5c03 	strb.w	r5, [r0, #-3]
 8021ffc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021ffe:	4586      	cmp	lr, r0
 8022000:	441a      	add	r2, r3
 8022002:	4449      	add	r1, r9
 8022004:	d01b      	beq.n	802203e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8022006:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 802200a:	3003      	adds	r0, #3
 802200c:	9d01      	ldr	r5, [sp, #4]
 802200e:	140b      	asrs	r3, r1, #16
 8022010:	fb04 5303 	mla	r3, r4, r3, r5
 8022014:	1414      	asrs	r4, r2, #16
 8022016:	5d1b      	ldrb	r3, [r3, r4]
 8022018:	9c02      	ldr	r4, [sp, #8]
 802201a:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 802201e:	0e1f      	lsrs	r7, r3, #24
 8022020:	2fff      	cmp	r7, #255	@ 0xff
 8022022:	d1b7      	bne.n	8021f94 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8022024:	0a1d      	lsrs	r5, r3, #8
 8022026:	0c1c      	lsrs	r4, r3, #16
 8022028:	f800 3c03 	strb.w	r3, [r0, #-3]
 802202c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 802202e:	4586      	cmp	lr, r0
 8022030:	f800 5c02 	strb.w	r5, [r0, #-2]
 8022034:	f800 4c01 	strb.w	r4, [r0, #-1]
 8022038:	441a      	add	r2, r3
 802203a:	4449      	add	r1, r9
 802203c:	d1e3      	bne.n	8022006 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 802203e:	4670      	mov	r0, lr
 8022040:	e6eb      	b.n	8021e1a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8022042:	2b00      	cmp	r3, #0
 8022044:	f77f aee9 	ble.w	8021e1a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8022048:	4604      	mov	r4, r0
 802204a:	1415      	asrs	r5, r2, #16
 802204c:	e724      	b.n	8021e98 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 802204e:	0a1e      	lsrs	r6, r3, #8
 8022050:	0c1d      	lsrs	r5, r3, #16
 8022052:	7023      	strb	r3, [r4, #0]
 8022054:	7066      	strb	r6, [r4, #1]
 8022056:	70a5      	strb	r5, [r4, #2]
 8022058:	e772      	b.n	8021f40 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802205a:	bf00      	nop

0802205c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802205c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022060:	b089      	sub	sp, #36	@ 0x24
 8022062:	f89d 006c 	ldrb.w	r0, [sp, #108]	@ 0x6c
 8022066:	9101      	str	r1, [sp, #4]
 8022068:	ea6f 0a00 	mvn.w	sl, r0
 802206c:	e9dd e815 	ldrd	lr, r8, [sp, #84]	@ 0x54
 8022070:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8022072:	9202      	str	r2, [sp, #8]
 8022074:	e9dd 5217 	ldrd	r5, r2, [sp, #92]	@ 0x5c
 8022078:	686c      	ldr	r4, [r5, #4]
 802207a:	682f      	ldr	r7, [r5, #0]
 802207c:	fb04 2401 	mla	r4, r4, r1, r2
 8022080:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8022082:	b280      	uxth	r0, r0
 8022084:	e9d2 2100 	ldrd	r2, r1, [r2]
 8022088:	3104      	adds	r1, #4
 802208a:	eb07 0784 	add.w	r7, r7, r4, lsl #2
 802208e:	fa5f fa8a 	uxtb.w	sl, sl
 8022092:	9007      	str	r0, [sp, #28]
 8022094:	9105      	str	r1, [sp, #20]
 8022096:	9200      	str	r2, [sp, #0]
 8022098:	e9dd 2513 	ldrd	r2, r5, [sp, #76]	@ 0x4c
 802209c:	9901      	ldr	r1, [sp, #4]
 802209e:	2900      	cmp	r1, #0
 80220a0:	dc03      	bgt.n	80220aa <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80220a2:	9902      	ldr	r1, [sp, #8]
 80220a4:	2900      	cmp	r1, #0
 80220a6:	f340 80b6 	ble.w	8022216 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80220aa:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80220ac:	2b00      	cmp	r3, #0
 80220ae:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 80220b2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80220b6:	f505 4500 	add.w	r5, r5, #32768	@ 0x8000
 80220ba:	b221      	sxth	r1, r4
 80220bc:	fa0f fc86 	sxth.w	ip, r6
 80220c0:	f340 80ac 	ble.w	802221c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80220c4:	1410      	asrs	r0, r2, #16
 80220c6:	d406      	bmi.n	80220d6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80220c8:	4288      	cmp	r0, r1
 80220ca:	da04      	bge.n	80220d6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80220cc:	ea5f 4925 	movs.w	r9, r5, asr #16
 80220d0:	d401      	bmi.n	80220d6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80220d2:	45e1      	cmp	r9, ip
 80220d4:	db3e      	blt.n	8022154 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 80220d6:	3b01      	subs	r3, #1
 80220d8:	4472      	add	r2, lr
 80220da:	4445      	add	r5, r8
 80220dc:	f107 0704 	add.w	r7, r7, #4
 80220e0:	d1f0      	bne.n	80220c4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80220e2:	9b01      	ldr	r3, [sp, #4]
 80220e4:	2b00      	cmp	r3, #0
 80220e6:	f340 8096 	ble.w	8022216 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80220ea:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80220ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 80220f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80220f6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80220fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80220fe:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8022102:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022106:	ee76 6a62 	vsub.f32	s13, s12, s5
 802210a:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802210e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022112:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022116:	ee16 2a90 	vmov	r2, s13
 802211a:	3b01      	subs	r3, #1
 802211c:	9301      	str	r3, [sp, #4]
 802211e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8022120:	9902      	ldr	r1, [sp, #8]
 8022122:	fb92 fef3 	sdiv	lr, r2, r3
 8022126:	ee17 2a10 	vmov	r2, s14
 802212a:	eeb0 7a43 	vmov.f32	s14, s6
 802212e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022132:	ee17 5a10 	vmov	r5, s14
 8022136:	eeb0 7a62 	vmov.f32	s14, s5
 802213a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802213e:	fb92 f8f3 	sdiv	r8, r2, r3
 8022142:	eeb0 3a67 	vmov.f32	s6, s15
 8022146:	ee17 2a10 	vmov	r2, s14
 802214a:	eef0 2a46 	vmov.f32	s5, s12
 802214e:	bf08      	it	eq
 8022150:	460b      	moveq	r3, r1
 8022152:	e7a3      	b.n	802209c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8022154:	f103 39ff 	add.w	r9, r3, #4294967295
 8022158:	fb09 2b0e 	mla	fp, r9, lr, r2
 802215c:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 8022160:	d566      	bpl.n	8022230 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8022162:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8022166:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8022168:	e002      	b.n	8022170 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 802216a:	1410      	asrs	r0, r2, #16
 802216c:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 8022170:	2800      	cmp	r0, #0
 8022172:	f109 39ff 	add.w	r9, r9, #4294967295
 8022176:	4472      	add	r2, lr
 8022178:	db3f      	blt.n	80221fa <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 802217a:	42a0      	cmp	r0, r4
 802217c:	da3d      	bge.n	80221fa <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 802217e:	ea5f 4c25 	movs.w	ip, r5, asr #16
 8022182:	d43a      	bmi.n	80221fa <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8022184:	45b4      	cmp	ip, r6
 8022186:	da38      	bge.n	80221fa <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8022188:	9e00      	ldr	r6, [sp, #0]
 802218a:	b224      	sxth	r4, r4
 802218c:	fb0c 6404 	mla	r4, ip, r4, r6
 8022190:	f814 b000 	ldrb.w	fp, [r4, r0]
 8022194:	7838      	ldrb	r0, [r7, #0]
 8022196:	9c05      	ldr	r4, [sp, #20]
 8022198:	fb10 f30a 	smulbb	r3, r0, sl
 802219c:	9306      	str	r3, [sp, #24]
 802219e:	9b07      	ldr	r3, [sp, #28]
 80221a0:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 80221a4:	4618      	mov	r0, r3
 80221a6:	eb04 060b 	add.w	r6, r4, fp
 80221aa:	78b4      	ldrb	r4, [r6, #2]
 80221ac:	7876      	ldrb	r6, [r6, #1]
 80221ae:	fb14 fc03 	smulbb	ip, r4, r3
 80221b2:	9c05      	ldr	r4, [sp, #20]
 80221b4:	fb16 f603 	smulbb	r6, r6, r3
 80221b8:	f814 400b 	ldrb.w	r4, [r4, fp]
 80221bc:	9b06      	ldr	r3, [sp, #24]
 80221be:	f897 b001 	ldrb.w	fp, [r7, #1]
 80221c2:	fb04 3000 	mla	r0, r4, r0, r3
 80221c6:	78bc      	ldrb	r4, [r7, #2]
 80221c8:	fb0b 660a 	mla	r6, fp, sl, r6
 80221cc:	fb04 c40a 	mla	r4, r4, sl, ip
 80221d0:	b2b6      	uxth	r6, r6
 80221d2:	b280      	uxth	r0, r0
 80221d4:	b2a4      	uxth	r4, r4
 80221d6:	f106 0c01 	add.w	ip, r6, #1
 80221da:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 80221de:	f104 0b01 	add.w	fp, r4, #1
 80221e2:	f100 0c01 	add.w	ip, r0, #1
 80221e6:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 80221ea:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 80221ee:	1236      	asrs	r6, r6, #8
 80221f0:	1224      	asrs	r4, r4, #8
 80221f2:	1200      	asrs	r0, r0, #8
 80221f4:	707e      	strb	r6, [r7, #1]
 80221f6:	70bc      	strb	r4, [r7, #2]
 80221f8:	7038      	strb	r0, [r7, #0]
 80221fa:	f1b9 3fff 	cmp.w	r9, #4294967295
 80221fe:	f107 0704 	add.w	r7, r7, #4
 8022202:	4445      	add	r5, r8
 8022204:	d1b1      	bne.n	802216a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8022206:	e9dd b303 	ldrd	fp, r3, [sp, #12]
 802220a:	eb0b 0783 	add.w	r7, fp, r3, lsl #2
 802220e:	9b01      	ldr	r3, [sp, #4]
 8022210:	2b00      	cmp	r3, #0
 8022212:	f73f af6a 	bgt.w	80220ea <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022216:	b009      	add	sp, #36	@ 0x24
 8022218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802221c:	f43f af61 	beq.w	80220e2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022220:	f103 39ff 	add.w	r9, r3, #4294967295
 8022224:	fb09 2b0e 	mla	fp, r9, lr, r2
 8022228:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 802222c:	f53f af59 	bmi.w	80220e2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022230:	4559      	cmp	r1, fp
 8022232:	dd57      	ble.n	80222e4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8022234:	fb09 5008 	mla	r0, r9, r8, r5
 8022238:	1400      	asrs	r0, r0, #16
 802223a:	d453      	bmi.n	80222e4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802223c:	4560      	cmp	r0, ip
 802223e:	da51      	bge.n	80222e4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8022240:	2b00      	cmp	r3, #0
 8022242:	f77f af4e 	ble.w	80220e2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022246:	e9cd 7303 	strd	r7, r3, [sp, #12]
 802224a:	f107 0c04 	add.w	ip, r7, #4
 802224e:	f8dd b014 	ldr.w	fp, [sp, #20]
 8022252:	460b      	mov	r3, r1
 8022254:	9f07      	ldr	r7, [sp, #28]
 8022256:	e002      	b.n	802225e <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8022258:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802225a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802225e:	9800      	ldr	r0, [sp, #0]
 8022260:	1429      	asrs	r1, r5, #16
 8022262:	fb03 0301 	mla	r3, r3, r1, r0
 8022266:	1411      	asrs	r1, r2, #16
 8022268:	5c5e      	ldrb	r6, [r3, r1]
 802226a:	f81c 3c04 	ldrb.w	r3, [ip, #-4]
 802226e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022272:	eb0b 0006 	add.w	r0, fp, r6
 8022276:	7881      	ldrb	r1, [r0, #2]
 8022278:	7840      	ldrb	r0, [r0, #1]
 802227a:	fb13 f30a 	smulbb	r3, r3, sl
 802227e:	fb10 f007 	smulbb	r0, r0, r7
 8022282:	fb11 f407 	smulbb	r4, r1, r7
 8022286:	f81b 1006 	ldrb.w	r1, [fp, r6]
 802228a:	f81c 6c03 	ldrb.w	r6, [ip, #-3]
 802228e:	fb01 3307 	mla	r3, r1, r7, r3
 8022292:	f81c 1c02 	ldrb.w	r1, [ip, #-2]
 8022296:	fb06 000a 	mla	r0, r6, sl, r0
 802229a:	fb01 410a 	mla	r1, r1, sl, r4
 802229e:	b280      	uxth	r0, r0
 80222a0:	b29b      	uxth	r3, r3
 80222a2:	b289      	uxth	r1, r1
 80222a4:	1c44      	adds	r4, r0, #1
 80222a6:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 80222aa:	1c4e      	adds	r6, r1, #1
 80222ac:	1c5c      	adds	r4, r3, #1
 80222ae:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 80222b2:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 80222b6:	f109 39ff 	add.w	r9, r9, #4294967295
 80222ba:	1200      	asrs	r0, r0, #8
 80222bc:	1209      	asrs	r1, r1, #8
 80222be:	121b      	asrs	r3, r3, #8
 80222c0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80222c4:	f80c 0c03 	strb.w	r0, [ip, #-3]
 80222c8:	f80c 1c02 	strb.w	r1, [ip, #-2]
 80222cc:	f80c 3c04 	strb.w	r3, [ip, #-4]
 80222d0:	4445      	add	r5, r8
 80222d2:	4472      	add	r2, lr
 80222d4:	f10c 0c04 	add.w	ip, ip, #4
 80222d8:	d1be      	bne.n	8022258 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80222da:	e9dd 7303 	ldrd	r7, r3, [sp, #12]
 80222de:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 80222e2:	e6fe      	b.n	80220e2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80222e4:	2b00      	cmp	r3, #0
 80222e6:	f77f aefc 	ble.w	80220e2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80222ea:	1410      	asrs	r0, r2, #16
 80222ec:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80222f0:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80222f2:	e73d      	b.n	8022170 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>

080222f4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80222f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80222f8:	468a      	mov	sl, r1
 80222fa:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 80222fe:	46d1      	mov	r9, sl
 8022300:	b087      	sub	sp, #28
 8022302:	e9dd 1415 	ldrd	r1, r4, [sp, #84]	@ 0x54
 8022306:	684d      	ldr	r5, [r1, #4]
 8022308:	9203      	str	r2, [sp, #12]
 802230a:	e9dd 2e17 	ldrd	r2, lr, [sp, #92]	@ 0x5c
 802230e:	fb05 4402 	mla	r4, r5, r2, r4
 8022312:	e9de 2000 	ldrd	r2, r0, [lr]
 8022316:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 802231a:	680d      	ldr	r5, [r1, #0]
 802231c:	f100 0b04 	add.w	fp, r0, #4
 8022320:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 8022324:	9205      	str	r2, [sp, #20]
 8022326:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 802232a:	f1b9 0f00 	cmp.w	r9, #0
 802232e:	dc03      	bgt.n	8022338 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8022330:	9803      	ldr	r0, [sp, #12]
 8022332:	2800      	cmp	r0, #0
 8022334:	f340 8091 	ble.w	802245a <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 8022338:	e9de 8a02 	ldrd	r8, sl, [lr, #8]
 802233c:	2b00      	cmp	r3, #0
 802233e:	fa0f f088 	sxth.w	r0, r8
 8022342:	fa0f f48a 	sxth.w	r4, sl
 8022346:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802234a:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 802234e:	9001      	str	r0, [sp, #4]
 8022350:	9402      	str	r4, [sp, #8]
 8022352:	f340 8085 	ble.w	8022460 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8022356:	1414      	asrs	r4, r2, #16
 8022358:	d408      	bmi.n	802236c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802235a:	9801      	ldr	r0, [sp, #4]
 802235c:	4284      	cmp	r4, r0
 802235e:	da05      	bge.n	802236c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022360:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8022364:	d402      	bmi.n	802236c <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022366:	9802      	ldr	r0, [sp, #8]
 8022368:	4584      	cmp	ip, r0
 802236a:	db3b      	blt.n	80223e4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf0>
 802236c:	3b01      	subs	r3, #1
 802236e:	4432      	add	r2, r6
 8022370:	4439      	add	r1, r7
 8022372:	f105 0504 	add.w	r5, r5, #4
 8022376:	d1ee      	bne.n	8022356 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8022378:	f1b9 0f00 	cmp.w	r9, #0
 802237c:	dd6d      	ble.n	802245a <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 802237e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022382:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022386:	eec5 7a80 	vdiv.f32	s15, s11, s0
 802238a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802238e:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8022392:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022396:	ee76 6a62 	vsub.f32	s13, s12, s5
 802239a:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802239e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80223a2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80223a6:	ee16 2a90 	vmov	r2, s13
 80223aa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80223ac:	9803      	ldr	r0, [sp, #12]
 80223ae:	fb92 f6f3 	sdiv	r6, r2, r3
 80223b2:	ee17 2a10 	vmov	r2, s14
 80223b6:	eeb0 7a43 	vmov.f32	s14, s6
 80223ba:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80223be:	ee17 1a10 	vmov	r1, s14
 80223c2:	eeb0 7a62 	vmov.f32	s14, s5
 80223c6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80223ca:	f1b9 0901 	subs.w	r9, r9, #1
 80223ce:	fb92 f7f3 	sdiv	r7, r2, r3
 80223d2:	eeb0 3a67 	vmov.f32	s6, s15
 80223d6:	ee17 2a10 	vmov	r2, s14
 80223da:	eef0 2a46 	vmov.f32	s5, s12
 80223de:	bf08      	it	eq
 80223e0:	4603      	moveq	r3, r0
 80223e2:	e7a2      	b.n	802232a <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80223e4:	f103 3cff 	add.w	ip, r3, #4294967295
 80223e8:	9404      	str	r4, [sp, #16]
 80223ea:	fb06 240c 	mla	r4, r6, ip, r2
 80223ee:	1424      	asrs	r4, r4, #16
 80223f0:	d578      	bpl.n	80224e4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80223f2:	9613      	str	r6, [sp, #76]	@ 0x4c
 80223f4:	2000      	movs	r0, #0
 80223f6:	4646      	mov	r6, r8
 80223f8:	46d4      	mov	ip, sl
 80223fa:	9c04      	ldr	r4, [sp, #16]
 80223fc:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
 8022400:	e002      	b.n	8022408 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8022402:	1414      	asrs	r4, r2, #16
 8022404:	e9de 6c02 	ldrd	r6, ip, [lr, #8]
 8022408:	2c00      	cmp	r4, #0
 802240a:	4442      	add	r2, r8
 802240c:	db1c      	blt.n	8022448 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802240e:	42b4      	cmp	r4, r6
 8022410:	da1a      	bge.n	8022448 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8022412:	ea5f 4a21 	movs.w	sl, r1, asr #16
 8022416:	d417      	bmi.n	8022448 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8022418:	45e2      	cmp	sl, ip
 802241a:	da15      	bge.n	8022448 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802241c:	fa0f fc86 	sxth.w	ip, r6
 8022420:	9e05      	ldr	r6, [sp, #20]
 8022422:	fb0a 6c0c 	mla	ip, sl, ip, r6
 8022426:	f81c 4004 	ldrb.w	r4, [ip, r4]
 802242a:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 802242e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8022432:	f81b c004 	ldrb.w	ip, [fp, r4]
 8022436:	445c      	add	r4, fp
 8022438:	f805 c020 	strb.w	ip, [r5, r0, lsl #2]
 802243c:	f894 c001 	ldrb.w	ip, [r4, #1]
 8022440:	f886 c001 	strb.w	ip, [r6, #1]
 8022444:	78a4      	ldrb	r4, [r4, #2]
 8022446:	70b4      	strb	r4, [r6, #2]
 8022448:	3001      	adds	r0, #1
 802244a:	4283      	cmp	r3, r0
 802244c:	4439      	add	r1, r7
 802244e:	d1d8      	bne.n	8022402 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8022450:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8022454:	f1b9 0f00 	cmp.w	r9, #0
 8022458:	dc91      	bgt.n	802237e <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802245a:	b007      	add	sp, #28
 802245c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022460:	d08a      	beq.n	8022378 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022462:	f103 3cff 	add.w	ip, r3, #4294967295
 8022466:	fb0c 2406 	mla	r4, ip, r6, r2
 802246a:	1424      	asrs	r4, r4, #16
 802246c:	d484      	bmi.n	8022378 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802246e:	42a0      	cmp	r0, r4
 8022470:	dd32      	ble.n	80224d8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8022472:	fb07 140c 	mla	r4, r7, ip, r1
 8022476:	1420      	asrs	r0, r4, #16
 8022478:	d42e      	bmi.n	80224d8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802247a:	9c02      	ldr	r4, [sp, #8]
 802247c:	4284      	cmp	r4, r0
 802247e:	dd2b      	ble.n	80224d8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8022480:	2b00      	cmp	r3, #0
 8022482:	f77f af79 	ble.w	8022378 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022486:	1d2c      	adds	r4, r5, #4
 8022488:	f8dd a014 	ldr.w	sl, [sp, #20]
 802248c:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8022490:	e001      	b.n	8022496 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022492:	f9be 8008 	ldrsh.w	r8, [lr, #8]
 8022496:	1408      	asrs	r0, r1, #16
 8022498:	fb08 a000 	mla	r0, r8, r0, sl
 802249c:	ea4f 4822 	mov.w	r8, r2, asr #16
 80224a0:	f810 0008 	ldrb.w	r0, [r0, r8]
 80224a4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80224a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80224ac:	f81b 8000 	ldrb.w	r8, [fp, r0]
 80224b0:	4458      	add	r0, fp
 80224b2:	f804 8c04 	strb.w	r8, [r4, #-4]
 80224b6:	f890 8001 	ldrb.w	r8, [r0, #1]
 80224ba:	f1bc 3fff 	cmp.w	ip, #4294967295
 80224be:	f804 8c03 	strb.w	r8, [r4, #-3]
 80224c2:	7880      	ldrb	r0, [r0, #2]
 80224c4:	4439      	add	r1, r7
 80224c6:	f804 0c02 	strb.w	r0, [r4, #-2]
 80224ca:	4432      	add	r2, r6
 80224cc:	f104 0404 	add.w	r4, r4, #4
 80224d0:	d1df      	bne.n	8022492 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 80224d2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 80224d6:	e7bd      	b.n	8022454 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 80224d8:	2b00      	cmp	r3, #0
 80224da:	f77f af4d 	ble.w	8022378 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80224de:	1410      	asrs	r0, r2, #16
 80224e0:	9004      	str	r0, [sp, #16]
 80224e2:	e786      	b.n	80223f2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>
 80224e4:	9801      	ldr	r0, [sp, #4]
 80224e6:	e7c2      	b.n	802246e <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>

080224e8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80224e8:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 80224ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80224f0:	b08b      	sub	sp, #44	@ 0x2c
 80224f2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80224f6:	e9dd 2119 	ldrd	r2, r1, [sp, #100]	@ 0x64
 80224fa:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80224fc:	6854      	ldr	r4, [r2, #4]
 80224fe:	6816      	ldr	r6, [r2, #0]
 8022500:	fb04 1000 	mla	r0, r4, r0, r1
 8022504:	e9dd 4b17 	ldrd	r4, fp, [sp, #92]	@ 0x5c
 8022508:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 802250a:	f89d 7074 	ldrb.w	r7, [sp, #116]	@ 0x74
 802250e:	e9d2 2500 	ldrd	r2, r5, [r2]
 8022512:	3504      	adds	r5, #4
 8022514:	9703      	str	r7, [sp, #12]
 8022516:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 802251a:	9507      	str	r5, [sp, #28]
 802251c:	9206      	str	r2, [sp, #24]
 802251e:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8022522:	9d01      	ldr	r5, [sp, #4]
 8022524:	2d00      	cmp	r5, #0
 8022526:	dc03      	bgt.n	8022530 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022528:	9d02      	ldr	r5, [sp, #8]
 802252a:	2d00      	cmp	r5, #0
 802252c:	f340 80d5 	ble.w	80226da <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8022530:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
 8022532:	2b00      	cmp	r3, #0
 8022534:	e9d5 7c02 	ldrd	r7, ip, [r5, #8]
 8022538:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802253c:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8022540:	b23d      	sxth	r5, r7
 8022542:	fa0f fe8c 	sxth.w	lr, ip
 8022546:	f340 80cb 	ble.w	80226e0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 802254a:	1416      	asrs	r6, r2, #16
 802254c:	d406      	bmi.n	802255c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802254e:	42ae      	cmp	r6, r5
 8022550:	da04      	bge.n	802255c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022552:	ea5f 4821 	movs.w	r8, r1, asr #16
 8022556:	d401      	bmi.n	802255c <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022558:	45f0      	cmp	r8, lr
 802255a:	db3c      	blt.n	80225d6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xee>
 802255c:	3b01      	subs	r3, #1
 802255e:	4422      	add	r2, r4
 8022560:	4459      	add	r1, fp
 8022562:	f100 0004 	add.w	r0, r0, #4
 8022566:	d1f0      	bne.n	802254a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8022568:	9b01      	ldr	r3, [sp, #4]
 802256a:	2b00      	cmp	r3, #0
 802256c:	f340 80b5 	ble.w	80226da <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8022570:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022574:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022578:	eec5 7a80 	vdiv.f32	s15, s11, s0
 802257c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022580:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8022584:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022588:	ee76 6a62 	vsub.f32	s13, s12, s5
 802258c:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8022590:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022594:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022598:	ee16 2a90 	vmov	r2, s13
 802259c:	3b01      	subs	r3, #1
 802259e:	9301      	str	r3, [sp, #4]
 80225a0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80225a2:	9d02      	ldr	r5, [sp, #8]
 80225a4:	fb92 f4f3 	sdiv	r4, r2, r3
 80225a8:	ee17 2a10 	vmov	r2, s14
 80225ac:	eeb0 7a43 	vmov.f32	s14, s6
 80225b0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80225b4:	ee17 1a10 	vmov	r1, s14
 80225b8:	eeb0 7a62 	vmov.f32	s14, s5
 80225bc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80225c0:	fb92 fbf3 	sdiv	fp, r2, r3
 80225c4:	eeb0 3a67 	vmov.f32	s6, s15
 80225c8:	ee17 2a10 	vmov	r2, s14
 80225cc:	eef0 2a46 	vmov.f32	s5, s12
 80225d0:	bf08      	it	eq
 80225d2:	462b      	moveq	r3, r5
 80225d4:	e7a5      	b.n	8022522 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80225d6:	f103 38ff 	add.w	r8, r3, #4294967295
 80225da:	fb08 2904 	mla	r9, r8, r4, r2
 80225de:	ea5f 4929 	movs.w	r9, r9, asr #16
 80225e2:	f140 8087 	bpl.w	80226f4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 80225e6:	f1c3 0900 	rsb	r9, r3, #0
 80225ea:	4698      	mov	r8, r3
 80225ec:	2500      	movs	r5, #0
 80225ee:	9004      	str	r0, [sp, #16]
 80225f0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80225f2:	e002      	b.n	80225fa <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 80225f4:	1416      	asrs	r6, r2, #16
 80225f6:	e9d3 7c02 	ldrd	r7, ip, [r3, #8]
 80225fa:	2e00      	cmp	r6, #0
 80225fc:	4422      	add	r2, r4
 80225fe:	db61      	blt.n	80226c4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022600:	42be      	cmp	r6, r7
 8022602:	da5f      	bge.n	80226c4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022604:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8022608:	d45c      	bmi.n	80226c4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 802260a:	45e6      	cmp	lr, ip
 802260c:	b23f      	sxth	r7, r7
 802260e:	da59      	bge.n	80226c4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022610:	9806      	ldr	r0, [sp, #24]
 8022612:	fb0e 0707 	mla	r7, lr, r7, r0
 8022616:	9807      	ldr	r0, [sp, #28]
 8022618:	5dbe      	ldrb	r6, [r7, r6]
 802261a:	ebc5 7785 	rsb	r7, r5, r5, lsl #30
 802261e:	f850 6026 	ldr.w	r6, [r0, r6, lsl #2]
 8022622:	9804      	ldr	r0, [sp, #16]
 8022624:	9705      	str	r7, [sp, #20]
 8022626:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 802262a:	0e37      	lsrs	r7, r6, #24
 802262c:	9008      	str	r0, [sp, #32]
 802262e:	d049      	beq.n	80226c4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022630:	9803      	ldr	r0, [sp, #12]
 8022632:	fa5f fa86 	uxtb.w	sl, r6
 8022636:	fb00 f707 	mul.w	r7, r0, r7
 802263a:	9805      	ldr	r0, [sp, #20]
 802263c:	f107 0c01 	add.w	ip, r7, #1
 8022640:	eb0c 2c27 	add.w	ip, ip, r7, asr #8
 8022644:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8022648:	4686      	mov	lr, r0
 802264a:	ea6f 070c 	mvn.w	r7, ip
 802264e:	fa1f fc8c 	uxth.w	ip, ip
 8022652:	fb1a fa0c 	smulbb	sl, sl, ip
 8022656:	9804      	ldr	r0, [sp, #16]
 8022658:	b2ff      	uxtb	r7, r7
 802265a:	f810 e02e 	ldrb.w	lr, [r0, lr, lsl #2]
 802265e:	9805      	ldr	r0, [sp, #20]
 8022660:	fb0e ae07 	mla	lr, lr, r7, sl
 8022664:	fa1f fe8e 	uxth.w	lr, lr
 8022668:	f10e 0a01 	add.w	sl, lr, #1
 802266c:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 8022670:	f3c6 2a07 	ubfx	sl, r6, #8, #8
 8022674:	f3c6 4607 	ubfx	r6, r6, #16, #8
 8022678:	fb16 f60c 	smulbb	r6, r6, ip
 802267c:	9609      	str	r6, [sp, #36]	@ 0x24
 802267e:	4606      	mov	r6, r0
 8022680:	9804      	ldr	r0, [sp, #16]
 8022682:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8022686:	f800 e026 	strb.w	lr, [r0, r6, lsl #2]
 802268a:	fb1a fa0c 	smulbb	sl, sl, ip
 802268e:	9808      	ldr	r0, [sp, #32]
 8022690:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8022692:	f890 e002 	ldrb.w	lr, [r0, #2]
 8022696:	f890 c001 	ldrb.w	ip, [r0, #1]
 802269a:	fb0e 6607 	mla	r6, lr, r7, r6
 802269e:	fb0c ac07 	mla	ip, ip, r7, sl
 80226a2:	b2b6      	uxth	r6, r6
 80226a4:	fa1f fe8c 	uxth.w	lr, ip
 80226a8:	1c77      	adds	r7, r6, #1
 80226aa:	f10e 0c01 	add.w	ip, lr, #1
 80226ae:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80226b2:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80226b6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80226ba:	ea4f 2c26 	mov.w	ip, r6, asr #8
 80226be:	7047      	strb	r7, [r0, #1]
 80226c0:	f880 c002 	strb.w	ip, [r0, #2]
 80226c4:	3d01      	subs	r5, #1
 80226c6:	45a9      	cmp	r9, r5
 80226c8:	4459      	add	r1, fp
 80226ca:	d193      	bne.n	80225f4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80226cc:	9b01      	ldr	r3, [sp, #4]
 80226ce:	9804      	ldr	r0, [sp, #16]
 80226d0:	2b00      	cmp	r3, #0
 80226d2:	eb00 0088 	add.w	r0, r0, r8, lsl #2
 80226d6:	f73f af4b 	bgt.w	8022570 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80226da:	b00b      	add	sp, #44	@ 0x2c
 80226dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80226e0:	f43f af42 	beq.w	8022568 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80226e4:	f103 38ff 	add.w	r8, r3, #4294967295
 80226e8:	fb08 2904 	mla	r9, r8, r4, r2
 80226ec:	ea5f 4929 	movs.w	r9, r9, asr #16
 80226f0:	f53f af3a 	bmi.w	8022568 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80226f4:	454d      	cmp	r5, r9
 80226f6:	dd68      	ble.n	80227ca <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80226f8:	fb08 160b 	mla	r6, r8, fp, r1
 80226fc:	1436      	asrs	r6, r6, #16
 80226fe:	d464      	bmi.n	80227ca <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022700:	4576      	cmp	r6, lr
 8022702:	da62      	bge.n	80227ca <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022704:	2b00      	cmp	r3, #0
 8022706:	f77f af2f 	ble.w	8022568 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802270a:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
 802270e:	f100 0e04 	add.w	lr, r0, #4
 8022712:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8022716:	e002      	b.n	802271e <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8022718:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802271a:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802271e:	140b      	asrs	r3, r1, #16
 8022720:	fb05 6303 	mla	r3, r5, r3, r6
 8022724:	1410      	asrs	r0, r2, #16
 8022726:	5c1b      	ldrb	r3, [r3, r0]
 8022728:	f108 38ff 	add.w	r8, r8, #4294967295
 802272c:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 8022730:	4422      	add	r2, r4
 8022732:	0e18      	lsrs	r0, r3, #24
 8022734:	4459      	add	r1, fp
 8022736:	d03e      	beq.n	80227b6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 8022738:	9d03      	ldr	r5, [sp, #12]
 802273a:	fa5f fc83 	uxtb.w	ip, r3
 802273e:	fb05 f000 	mul.w	r0, r5, r0
 8022742:	f100 0901 	add.w	r9, r0, #1
 8022746:	eb09 2920 	add.w	r9, r9, r0, asr #8
 802274a:	ea4f 2929 	mov.w	r9, r9, asr #8
 802274e:	ea6f 0009 	mvn.w	r0, r9
 8022752:	fa1f f989 	uxth.w	r9, r9
 8022756:	fb1c fc09 	smulbb	ip, ip, r9
 802275a:	f3c3 2507 	ubfx	r5, r3, #8, #8
 802275e:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8022762:	fb15 fa09 	smulbb	sl, r5, r9
 8022766:	fb13 f309 	smulbb	r3, r3, r9
 802276a:	f81e 9c04 	ldrb.w	r9, [lr, #-4]
 802276e:	b2c0      	uxtb	r0, r0
 8022770:	fb09 cc00 	mla	ip, r9, r0, ip
 8022774:	f81e 5c03 	ldrb.w	r5, [lr, #-3]
 8022778:	f81e 9c02 	ldrb.w	r9, [lr, #-2]
 802277c:	fb05 a500 	mla	r5, r5, r0, sl
 8022780:	fb09 3300 	mla	r3, r9, r0, r3
 8022784:	fa1f fc8c 	uxth.w	ip, ip
 8022788:	b2ad      	uxth	r5, r5
 802278a:	b29b      	uxth	r3, r3
 802278c:	f10c 0a01 	add.w	sl, ip, #1
 8022790:	f105 0901 	add.w	r9, r5, #1
 8022794:	1c58      	adds	r0, r3, #1
 8022796:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 802279a:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 802279e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80227a2:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 80227a6:	122d      	asrs	r5, r5, #8
 80227a8:	121b      	asrs	r3, r3, #8
 80227aa:	f80e cc04 	strb.w	ip, [lr, #-4]
 80227ae:	f80e 5c03 	strb.w	r5, [lr, #-3]
 80227b2:	f80e 3c02 	strb.w	r3, [lr, #-2]
 80227b6:	f1b8 3fff 	cmp.w	r8, #4294967295
 80227ba:	f10e 0e04 	add.w	lr, lr, #4
 80227be:	d1ab      	bne.n	8022718 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80227c0:	e9dd 0304 	ldrd	r0, r3, [sp, #16]
 80227c4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80227c8:	e6ce      	b.n	8022568 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80227ca:	2b00      	cmp	r3, #0
 80227cc:	f77f aecc 	ble.w	8022568 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80227d0:	1416      	asrs	r6, r2, #16
 80227d2:	e708      	b.n	80225e6 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>

080227d4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80227d4:	4770      	bx	lr
 80227d6:	bf00      	nop

080227d8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80227d8:	4770      	bx	lr
 80227da:	bf00      	nop

080227dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80227dc:	4770      	bx	lr
 80227de:	bf00      	nop

080227e0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80227e0:	4770      	bx	lr
 80227e2:	bf00      	nop

080227e4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80227e4:	4770      	bx	lr
 80227e6:	bf00      	nop

080227e8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80227e8:	4770      	bx	lr
 80227ea:	bf00      	nop

080227ec <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80227ec:	4770      	bx	lr
 80227ee:	bf00      	nop

080227f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80227f0:	4770      	bx	lr
 80227f2:	bf00      	nop

080227f4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80227f4:	4770      	bx	lr
 80227f6:	bf00      	nop

080227f8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80227f8:	4770      	bx	lr
 80227fa:	bf00      	nop

080227fc <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80227fc:	4770      	bx	lr
 80227fe:	bf00      	nop

08022800 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8022800:	4770      	bx	lr
 8022802:	bf00      	nop

08022804 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8022804:	4770      	bx	lr
 8022806:	bf00      	nop

08022808 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8022808:	4770      	bx	lr
 802280a:	bf00      	nop

0802280c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 802280c:	4770      	bx	lr
 802280e:	bf00      	nop

08022810 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8022810:	4770      	bx	lr
 8022812:	bf00      	nop

08022814 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8022814:	4770      	bx	lr
 8022816:	bf00      	nop

08022818 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8022818:	4770      	bx	lr
 802281a:	bf00      	nop

0802281c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802281c:	4770      	bx	lr
 802281e:	bf00      	nop

08022820 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8022820:	4770      	bx	lr
 8022822:	bf00      	nop

08022824 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8022824:	4770      	bx	lr
 8022826:	bf00      	nop

08022828 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8022828:	4770      	bx	lr
 802282a:	bf00      	nop

0802282c <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv>:
 802282c:	b508      	push	{r3, lr}
 802282e:	4b0d      	ldr	r3, [pc, #52]	@ (8022864 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x38>)
 8022830:	881b      	ldrh	r3, [r3, #0]
 8022832:	b17b      	cbz	r3, 8022854 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x28>
 8022834:	7b02      	ldrb	r2, [r0, #12]
 8022836:	2a02      	cmp	r2, #2
 8022838:	d007      	beq.n	802284a <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x1e>
 802283a:	2a01      	cmp	r2, #1
 802283c:	bf0c      	ite	eq
 802283e:	2003      	moveq	r0, #3
 8022840:	2002      	movne	r0, #2
 8022842:	fb13 f000 	smulbb	r0, r3, r0
 8022846:	b280      	uxth	r0, r0
 8022848:	bd08      	pop	{r3, pc}
 802284a:	2004      	movs	r0, #4
 802284c:	fb13 f000 	smulbb	r0, r3, r0
 8022850:	b280      	uxth	r0, r0
 8022852:	bd08      	pop	{r3, pc}
 8022854:	4b04      	ldr	r3, [pc, #16]	@ (8022868 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x3c>)
 8022856:	4a05      	ldr	r2, [pc, #20]	@ (802286c <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x40>)
 8022858:	f240 110f 	movw	r1, #271	@ 0x10f
 802285c:	4804      	ldr	r0, [pc, #16]	@ (8022870 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x44>)
 802285e:	f00f fe13 	bl	8032488 <__assert_func>
 8022862:	bf00      	nop
 8022864:	20082ebe 	.word	0x20082ebe
 8022868:	08036780 	.word	0x08036780
 802286c:	08037f44 	.word	0x08037f44
 8022870:	080367c4 	.word	0x080367c4

08022874 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv>:
 8022874:	b530      	push	{r4, r5, lr}
 8022876:	4b26      	ldr	r3, [pc, #152]	@ (8022910 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x9c>)
 8022878:	b083      	sub	sp, #12
 802287a:	681c      	ldr	r4, [r3, #0]
 802287c:	2c00      	cmp	r4, #0
 802287e:	d040      	beq.n	8022902 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x8e>
 8022880:	4b24      	ldr	r3, [pc, #144]	@ (8022914 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa0>)
 8022882:	4605      	mov	r5, r0
 8022884:	781b      	ldrb	r3, [r3, #0]
 8022886:	b9f3      	cbnz	r3, 80228c6 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x52>
 8022888:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 802288a:	7b2a      	ldrb	r2, [r5, #12]
 802288c:	2a01      	cmp	r2, #1
 802288e:	d025      	beq.n	80228dc <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x68>
 8022890:	d30d      	bcc.n	80228ae <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x3a>
 8022892:	2a02      	cmp	r2, #2
 8022894:	d12f      	bne.n	80228f6 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x82>
 8022896:	4920      	ldr	r1, [pc, #128]	@ (8022918 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 8022898:	4a20      	ldr	r2, [pc, #128]	@ (802291c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 802289a:	8809      	ldrh	r1, [r1, #0]
 802289c:	8812      	ldrh	r2, [r2, #0]
 802289e:	008c      	lsls	r4, r1, #2
 80228a0:	4618      	mov	r0, r3
 80228a2:	9400      	str	r4, [sp, #0]
 80228a4:	2310      	movs	r3, #16
 80228a6:	f7ee fb51 	bl	8010f4c <nema_bind_dst_tex>
 80228aa:	b003      	add	sp, #12
 80228ac:	bd30      	pop	{r4, r5, pc}
 80228ae:	491a      	ldr	r1, [pc, #104]	@ (8022918 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 80228b0:	4a1a      	ldr	r2, [pc, #104]	@ (802291c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 80228b2:	8809      	ldrh	r1, [r1, #0]
 80228b4:	8812      	ldrh	r2, [r2, #0]
 80228b6:	004c      	lsls	r4, r1, #1
 80228b8:	4618      	mov	r0, r3
 80228ba:	9400      	str	r4, [sp, #0]
 80228bc:	2304      	movs	r3, #4
 80228be:	f7ee fb45 	bl	8010f4c <nema_bind_dst_tex>
 80228c2:	b003      	add	sp, #12
 80228c4:	bd30      	pop	{r4, r5, pc}
 80228c6:	6823      	ldr	r3, [r4, #0]
 80228c8:	4620      	mov	r0, r4
 80228ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80228cc:	4798      	blx	r3
 80228ce:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80228d0:	4283      	cmp	r3, r0
 80228d2:	d1da      	bne.n	802288a <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x16>
 80228d4:	7b2a      	ldrb	r2, [r5, #12]
 80228d6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80228d8:	2a01      	cmp	r2, #1
 80228da:	d1d9      	bne.n	8022890 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x1c>
 80228dc:	490e      	ldr	r1, [pc, #56]	@ (8022918 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 80228de:	4a0f      	ldr	r2, [pc, #60]	@ (802291c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 80228e0:	8809      	ldrh	r1, [r1, #0]
 80228e2:	8812      	ldrh	r2, [r2, #0]
 80228e4:	eb01 0441 	add.w	r4, r1, r1, lsl #1
 80228e8:	4618      	mov	r0, r3
 80228ea:	9400      	str	r4, [sp, #0]
 80228ec:	2339      	movs	r3, #57	@ 0x39
 80228ee:	f7ee fb2d 	bl	8010f4c <nema_bind_dst_tex>
 80228f2:	b003      	add	sp, #12
 80228f4:	bd30      	pop	{r4, r5, pc}
 80228f6:	4b0a      	ldr	r3, [pc, #40]	@ (8022920 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xac>)
 80228f8:	4a0a      	ldr	r2, [pc, #40]	@ (8022924 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb0>)
 80228fa:	2141      	movs	r1, #65	@ 0x41
 80228fc:	480a      	ldr	r0, [pc, #40]	@ (8022928 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb4>)
 80228fe:	f00f fdc3 	bl	8032488 <__assert_func>
 8022902:	4b0a      	ldr	r3, [pc, #40]	@ (802292c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb8>)
 8022904:	4a0a      	ldr	r2, [pc, #40]	@ (8022930 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xbc>)
 8022906:	217c      	movs	r1, #124	@ 0x7c
 8022908:	480a      	ldr	r0, [pc, #40]	@ (8022934 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xc0>)
 802290a:	f00f fdbd 	bl	8032488 <__assert_func>
 802290e:	bf00      	nop
 8022910:	20083364 	.word	0x20083364
 8022914:	20082ec2 	.word	0x20082ec2
 8022918:	20082ebe 	.word	0x20082ebe
 802291c:	20082ec0 	.word	0x20082ec0
 8022920:	08036200 	.word	0x08036200
 8022924:	08036d78 	.word	0x08036d78
 8022928:	08036248 	.word	0x08036248
 802292c:	080361a4 	.word	0x080361a4
 8022930:	08036a10 	.word	0x08036a10
 8022934:	080361cc 	.word	0x080361cc

08022938 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh>:
 8022938:	2b00      	cmp	r3, #0
 802293a:	d05b      	beq.n	80229f4 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbc>
 802293c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022940:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 8022944:	b085      	sub	sp, #20
 8022946:	2c00      	cmp	r4, #0
 8022948:	dd51      	ble.n	80229ee <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb6>
 802294a:	f9b1 4006 	ldrsh.w	r4, [r1, #6]
 802294e:	2c00      	cmp	r4, #0
 8022950:	dd4d      	ble.n	80229ee <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb6>
 8022952:	4616      	mov	r6, r2
 8022954:	4605      	mov	r5, r0
 8022956:	6808      	ldr	r0, [r1, #0]
 8022958:	6849      	ldr	r1, [r1, #4]
 802295a:	461c      	mov	r4, r3
 802295c:	4f29      	ldr	r7, [pc, #164]	@ (8022a04 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xcc>)
 802295e:	ab02      	add	r3, sp, #8
 8022960:	c303      	stmia	r3!, {r0, r1}
 8022962:	a802      	add	r0, sp, #8
 8022964:	f7ea f9b4 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022968:	6838      	ldr	r0, [r7, #0]
 802296a:	f3c6 4807 	ubfx	r8, r6, #16, #8
 802296e:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8022972:	b2f6      	uxtb	r6, r6
 8022974:	2800      	cmp	r0, #0
 8022976:	d03e      	beq.n	80229f6 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbe>
 8022978:	f7fe f8f6 	bl	8020b68 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 802297c:	682b      	ldr	r3, [r5, #0]
 802297e:	4628      	mov	r0, r5
 8022980:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8022982:	4798      	blx	r3
 8022984:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 8022988:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 802298c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8022990:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8022994:	f7ee f970 	bl	8010c78 <nema_set_clip>
 8022998:	f04f 33ff 	mov.w	r3, #4294967295
 802299c:	2cff      	cmp	r4, #255	@ 0xff
 802299e:	bf0c      	ite	eq
 80229a0:	2001      	moveq	r0, #1
 80229a2:	4819      	ldrne	r0, [pc, #100]	@ (8022a08 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd0>)
 80229a4:	461a      	mov	r2, r3
 80229a6:	2100      	movs	r1, #0
 80229a8:	f7fb fb02 	bl	801dfb0 <nema_set_blend>
 80229ac:	2200      	movs	r2, #0
 80229ae:	4623      	mov	r3, r4
 80229b0:	4611      	mov	r1, r2
 80229b2:	4610      	mov	r0, r2
 80229b4:	f7ee fa3e 	bl	8010e34 <nema_rgba>
 80229b8:	f7fb fec0 	bl	801e73c <nema_set_const_color>
 80229bc:	4632      	mov	r2, r6
 80229be:	4649      	mov	r1, r9
 80229c0:	4640      	mov	r0, r8
 80229c2:	23ff      	movs	r3, #255	@ 0xff
 80229c4:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 80229c8:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 80229cc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80229d0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80229d4:	f7ee fa2e 	bl	8010e34 <nema_rgba>
 80229d8:	4643      	mov	r3, r8
 80229da:	9000      	str	r0, [sp, #0]
 80229dc:	4632      	mov	r2, r6
 80229de:	4620      	mov	r0, r4
 80229e0:	4629      	mov	r1, r5
 80229e2:	f7ee fc77 	bl	80112d4 <nema_fill_rect>
 80229e6:	6838      	ldr	r0, [r7, #0]
 80229e8:	b128      	cbz	r0, 80229f6 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbe>
 80229ea:	f7fe f8dd 	bl	8020ba8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80229ee:	b005      	add	sp, #20
 80229f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80229f4:	4770      	bx	lr
 80229f6:	4b05      	ldr	r3, [pc, #20]	@ (8022a0c <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd4>)
 80229f8:	4a05      	ldr	r2, [pc, #20]	@ (8022a10 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd8>)
 80229fa:	217c      	movs	r1, #124	@ 0x7c
 80229fc:	4805      	ldr	r0, [pc, #20]	@ (8022a14 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xdc>)
 80229fe:	f00f fd43 	bl	8032488 <__assert_func>
 8022a02:	bf00      	nop
 8022a04:	20083364 	.word	0x20083364
 8022a08:	08000504 	.word	0x08000504
 8022a0c:	080361a4 	.word	0x080361a4
 8022a10:	08036a10 	.word	0x08036a10
 8022a14:	080361cc 	.word	0x080361cc

08022a18 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8022a18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a1c:	b085      	sub	sp, #20
 8022a1e:	f89d 403c 	ldrb.w	r4, [sp, #60]	@ 0x3c
 8022a22:	2c00      	cmp	r4, #0
 8022a24:	d063      	beq.n	8022aee <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022a26:	f9b3 5004 	ldrsh.w	r5, [r3, #4]
 8022a2a:	2d00      	cmp	r5, #0
 8022a2c:	dd5f      	ble.n	8022aee <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022a2e:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8022a32:	2d00      	cmp	r5, #0
 8022a34:	dd5b      	ble.n	8022aee <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022a36:	460f      	mov	r7, r1
 8022a38:	4606      	mov	r6, r0
 8022a3a:	6859      	ldr	r1, [r3, #4]
 8022a3c:	6818      	ldr	r0, [r3, #0]
 8022a3e:	f8df 9124 	ldr.w	r9, [pc, #292]	@ 8022b64 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14c>
 8022a42:	ab02      	add	r3, sp, #8
 8022a44:	c303      	stmia	r3!, {r0, r1}
 8022a46:	a802      	add	r0, sp, #8
 8022a48:	4690      	mov	r8, r2
 8022a4a:	f7ea f941 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022a4e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022a50:	f8d9 0000 	ldr.w	r0, [r9]
 8022a54:	f3c3 4a07 	ubfx	sl, r3, #16, #8
 8022a58:	f3c3 2b07 	ubfx	fp, r3, #8, #8
 8022a5c:	b2dd      	uxtb	r5, r3
 8022a5e:	2800      	cmp	r0, #0
 8022a60:	d060      	beq.n	8022b24 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10c>
 8022a62:	f7fe f881 	bl	8020b68 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022a66:	7b33      	ldrb	r3, [r6, #12]
 8022a68:	2b01      	cmp	r3, #1
 8022a6a:	d043      	beq.n	8022af4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xdc>
 8022a6c:	d34e      	bcc.n	8022b0c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xf4>
 8022a6e:	2b02      	cmp	r3, #2
 8022a70:	d15e      	bne.n	8022b30 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 8022a72:	4b33      	ldr	r3, [pc, #204]	@ (8022b40 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022a74:	4a33      	ldr	r2, [pc, #204]	@ (8022b44 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022a76:	8819      	ldrh	r1, [r3, #0]
 8022a78:	ea4f 0388 	mov.w	r3, r8, lsl #2
 8022a7c:	8812      	ldrh	r2, [r2, #0]
 8022a7e:	4638      	mov	r0, r7
 8022a80:	9300      	str	r3, [sp, #0]
 8022a82:	2310      	movs	r3, #16
 8022a84:	f7ee fa62 	bl	8010f4c <nema_bind_dst_tex>
 8022a88:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8022a8c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8022a90:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8022a94:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 8022a98:	f7ee f8ee 	bl	8010c78 <nema_set_clip>
 8022a9c:	f04f 33ff 	mov.w	r3, #4294967295
 8022aa0:	2100      	movs	r1, #0
 8022aa2:	461a      	mov	r2, r3
 8022aa4:	4828      	ldr	r0, [pc, #160]	@ (8022b48 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x130>)
 8022aa6:	f7fb fa83 	bl	801dfb0 <nema_set_blend>
 8022aaa:	2200      	movs	r2, #0
 8022aac:	4623      	mov	r3, r4
 8022aae:	4611      	mov	r1, r2
 8022ab0:	4610      	mov	r0, r2
 8022ab2:	f7ee f9bf 	bl	8010e34 <nema_rgba>
 8022ab6:	f7fb fe41 	bl	801e73c <nema_set_const_color>
 8022aba:	462a      	mov	r2, r5
 8022abc:	4659      	mov	r1, fp
 8022abe:	23ff      	movs	r3, #255	@ 0xff
 8022ac0:	4650      	mov	r0, sl
 8022ac2:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8022ac6:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 8022aca:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8022ace:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8022ad2:	f7ee f9af 	bl	8010e34 <nema_rgba>
 8022ad6:	463b      	mov	r3, r7
 8022ad8:	9000      	str	r0, [sp, #0]
 8022ada:	4632      	mov	r2, r6
 8022adc:	4620      	mov	r0, r4
 8022ade:	4629      	mov	r1, r5
 8022ae0:	f7ee fbf8 	bl	80112d4 <nema_fill_rect>
 8022ae4:	f8d9 0000 	ldr.w	r0, [r9]
 8022ae8:	b1e0      	cbz	r0, 8022b24 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10c>
 8022aea:	f7fe f85d 	bl	8020ba8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8022aee:	b005      	add	sp, #20
 8022af0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022af4:	4b12      	ldr	r3, [pc, #72]	@ (8022b40 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022af6:	4a13      	ldr	r2, [pc, #76]	@ (8022b44 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022af8:	8819      	ldrh	r1, [r3, #0]
 8022afa:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 8022afe:	8812      	ldrh	r2, [r2, #0]
 8022b00:	4638      	mov	r0, r7
 8022b02:	9300      	str	r3, [sp, #0]
 8022b04:	2339      	movs	r3, #57	@ 0x39
 8022b06:	f7ee fa21 	bl	8010f4c <nema_bind_dst_tex>
 8022b0a:	e7bd      	b.n	8022a88 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8022b0c:	4b0c      	ldr	r3, [pc, #48]	@ (8022b40 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022b0e:	4a0d      	ldr	r2, [pc, #52]	@ (8022b44 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022b10:	8819      	ldrh	r1, [r3, #0]
 8022b12:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8022b16:	8812      	ldrh	r2, [r2, #0]
 8022b18:	4638      	mov	r0, r7
 8022b1a:	9300      	str	r3, [sp, #0]
 8022b1c:	2304      	movs	r3, #4
 8022b1e:	f7ee fa15 	bl	8010f4c <nema_bind_dst_tex>
 8022b22:	e7b1      	b.n	8022a88 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8022b24:	4b09      	ldr	r3, [pc, #36]	@ (8022b4c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x134>)
 8022b26:	4a0a      	ldr	r2, [pc, #40]	@ (8022b50 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x138>)
 8022b28:	217c      	movs	r1, #124	@ 0x7c
 8022b2a:	480a      	ldr	r0, [pc, #40]	@ (8022b54 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>)
 8022b2c:	f00f fcac 	bl	8032488 <__assert_func>
 8022b30:	4b09      	ldr	r3, [pc, #36]	@ (8022b58 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x140>)
 8022b32:	4a0a      	ldr	r2, [pc, #40]	@ (8022b5c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>)
 8022b34:	f240 11a5 	movw	r1, #421	@ 0x1a5
 8022b38:	4809      	ldr	r0, [pc, #36]	@ (8022b60 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>)
 8022b3a:	f00f fca5 	bl	8032488 <__assert_func>
 8022b3e:	bf00      	nop
 8022b40:	20082ebe 	.word	0x20082ebe
 8022b44:	20082ec0 	.word	0x20082ec0
 8022b48:	08000504 	.word	0x08000504
 8022b4c:	080361a4 	.word	0x080361a4
 8022b50:	08036a10 	.word	0x08036a10
 8022b54:	080361cc 	.word	0x080361cc
 8022b58:	08036200 	.word	0x08036200
 8022b5c:	08036acc 	.word	0x08036acc
 8022b60:	08036248 	.word	0x08036248
 8022b64:	20083364 	.word	0x20083364

08022b68 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8022b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b6c:	b091      	sub	sp, #68	@ 0x44
 8022b6e:	f89d 108c 	ldrb.w	r1, [sp, #140]	@ 0x8c
 8022b72:	ac0a      	add	r4, sp, #40	@ 0x28
 8022b74:	e884 000c 	stmia.w	r4, {r2, r3}
 8022b78:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8022b7c:	1e4f      	subs	r7, r1, #1
 8022b7e:	fa5f fc87 	uxtb.w	ip, r7
 8022b82:	4682      	mov	sl, r0
 8022b84:	9303      	str	r3, [sp, #12]
 8022b86:	f89d 0090 	ldrb.w	r0, [sp, #144]	@ 0x90
 8022b8a:	f8bd 3074 	ldrh.w	r3, [sp, #116]	@ 0x74
 8022b8e:	f1bc 0f01 	cmp.w	ip, #1
 8022b92:	9304      	str	r3, [sp, #16]
 8022b94:	f9bd 8068 	ldrsh.w	r8, [sp, #104]	@ 0x68
 8022b98:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	@ 0x6c
 8022b9c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8022b9e:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
 8022ba2:	9005      	str	r0, [sp, #20]
 8022ba4:	f89d 6094 	ldrb.w	r6, [sp, #148]	@ 0x94
 8022ba8:	d905      	bls.n	8022bb6 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4e>
 8022baa:	2904      	cmp	r1, #4
 8022bac:	f000 80d0 	beq.w	8022d50 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 8022bb0:	2908      	cmp	r1, #8
 8022bb2:	f040 816f 	bne.w	8022e94 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32c>
 8022bb6:	7b53      	ldrb	r3, [r2, #13]
 8022bb8:	7990      	ldrb	r0, [r2, #6]
 8022bba:	0159      	lsls	r1, r3, #5
 8022bbc:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8022bc0:	ea50 0901 	orrs.w	r9, r0, r1
 8022bc4:	f000 80c1 	beq.w	8022d4a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 8022bc8:	011b      	lsls	r3, r3, #4
 8022bca:	79d0      	ldrb	r0, [r2, #7]
 8022bcc:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8022bd0:	ea50 0301 	orrs.w	r3, r0, r1
 8022bd4:	9306      	str	r3, [sp, #24]
 8022bd6:	f000 80b8 	beq.w	8022d4a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 8022bda:	f992 3009 	ldrsb.w	r3, [r2, #9]
 8022bde:	9a03      	ldr	r2, [sp, #12]
 8022be0:	b29b      	uxth	r3, r3
 8022be2:	2a00      	cmp	r2, #0
 8022be4:	f040 80be 	bne.w	8022d64 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fc>
 8022be8:	4498      	add	r8, r3
 8022bea:	fa0f f888 	sxth.w	r8, r8
 8022bee:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022bf0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8022bf4:	4543      	cmp	r3, r8
 8022bf6:	dd06      	ble.n	8022c06 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x9e>
 8022bf8:	9a03      	ldr	r2, [sp, #12]
 8022bfa:	441a      	add	r2, r3
 8022bfc:	eba2 0508 	sub.w	r5, r2, r8
 8022c00:	4698      	mov	r8, r3
 8022c02:	b2ab      	uxth	r3, r5
 8022c04:	9303      	str	r3, [sp, #12]
 8022c06:	f8df c30c 	ldr.w	ip, [pc, #780]	@ 8022f14 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8022c0a:	465a      	mov	r2, fp
 8022c0c:	f89c 5000 	ldrb.w	r5, [ip]
 8022c10:	4641      	mov	r1, r8
 8022c12:	4633      	mov	r3, r6
 8022c14:	4620      	mov	r0, r4
 8022c16:	9507      	str	r5, [sp, #28]
 8022c18:	f7e9 fece 	bl	800c9b8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8022c1c:	465a      	mov	r2, fp
 8022c1e:	4641      	mov	r1, r8
 8022c20:	4633      	mov	r3, r6
 8022c22:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8022c26:	4620      	mov	r0, r4
 8022c28:	f7e9 fee3 	bl	800c9f2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8022c2c:	a910      	add	r1, sp, #64	@ 0x40
 8022c2e:	f821 0d0a 	strh.w	r0, [r1, #-10]!
 8022c32:	a80d      	add	r0, sp, #52	@ 0x34
 8022c34:	f7ea f80a 	bl	800cc4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8022c38:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022c3a:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8022c3e:	9308      	str	r3, [sp, #32]
 8022c40:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022c42:	f3c3 2b07 	ubfx	fp, r3, #8, #8
 8022c46:	fa5f f883 	uxtb.w	r8, r3
 8022c4a:	2f07      	cmp	r7, #7
 8022c4c:	f200 811f 	bhi.w	8022e8e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x326>
 8022c50:	e8df f017 	tbh	[pc, r7, lsl #1]
 8022c54:	009b00a1 	.word	0x009b00a1
 8022c58:	0095011d 	.word	0x0095011d
 8022c5c:	011d011d 	.word	0x011d011d
 8022c60:	0008011d 	.word	0x0008011d
 8022c64:	2708      	movs	r7, #8
 8022c66:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
 8022c6a:	4ca1      	ldr	r4, [pc, #644]	@ (8022ef0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8022c6c:	6820      	ldr	r0, [r4, #0]
 8022c6e:	2800      	cmp	r0, #0
 8022c70:	f000 8137 	beq.w	8022ee2 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8022c74:	f7fd ff78 	bl	8020b68 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022c78:	f8da 3000 	ldr.w	r3, [sl]
 8022c7c:	4650      	mov	r0, sl
 8022c7e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8022c80:	4798      	blx	r3
 8022c82:	2e02      	cmp	r6, #2
 8022c84:	f000 80e6 	beq.w	8022e54 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 8022c88:	2e03      	cmp	r6, #3
 8022c8a:	f000 80c7 	beq.w	8022e1c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b4>
 8022c8e:	2e01      	cmp	r6, #1
 8022c90:	f000 80a8 	beq.w	8022de4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27c>
 8022c94:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022c96:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8022c9a:	8819      	ldrh	r1, [r3, #0]
 8022c9c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022ca0:	440a      	add	r2, r1
 8022ca2:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022ca4:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8022ca8:	8848      	ldrh	r0, [r1, #2]
 8022caa:	6849      	ldr	r1, [r1, #4]
 8022cac:	4403      	add	r3, r0
 8022cae:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8022cb2:	910f      	str	r1, [sp, #60]	@ 0x3c
 8022cb4:	a80e      	add	r0, sp, #56	@ 0x38
 8022cb6:	f7ea f80b 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022cba:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8022cbe:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8022cc2:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8022cc6:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8022cca:	f7ed ffd5 	bl	8010c78 <nema_set_clip>
 8022cce:	2200      	movs	r2, #0
 8022cd0:	9d05      	ldr	r5, [sp, #20]
 8022cd2:	4611      	mov	r1, r2
 8022cd4:	462b      	mov	r3, r5
 8022cd6:	4610      	mov	r0, r2
 8022cd8:	f7ee f8ac 	bl	8010e34 <nema_rgba>
 8022cdc:	f7fb fd2e 	bl	801e73c <nema_set_const_color>
 8022ce0:	462b      	mov	r3, r5
 8022ce2:	4642      	mov	r2, r8
 8022ce4:	4659      	mov	r1, fp
 8022ce6:	9808      	ldr	r0, [sp, #32]
 8022ce8:	f7ee f8a4 	bl	8010e34 <nema_rgba>
 8022cec:	f7ed ffb8 	bl	8010c60 <nema_set_tex_color>
 8022cf0:	f04f 33ff 	mov.w	r3, #4294967295
 8022cf4:	2201      	movs	r2, #1
 8022cf6:	2100      	movs	r1, #0
 8022cf8:	487e      	ldr	r0, [pc, #504]	@ (8022ef4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
 8022cfa:	f7fb f959 	bl	801dfb0 <nema_set_blend>
 8022cfe:	2200      	movs	r2, #0
 8022d00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022d02:	9201      	str	r2, [sp, #4]
 8022d04:	9300      	str	r3, [sp, #0]
 8022d06:	4649      	mov	r1, r9
 8022d08:	463b      	mov	r3, r7
 8022d0a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8022d0c:	9a06      	ldr	r2, [sp, #24]
 8022d0e:	f7ee f899 	bl	8010e44 <nema_bind_src_tex>
 8022d12:	9b07      	ldr	r3, [sp, #28]
 8022d14:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8022d18:	2b01      	cmp	r3, #1
 8022d1a:	f9bd 1036 	ldrsh.w	r1, [sp, #54]	@ 0x36
 8022d1e:	d040      	beq.n	8022da2 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x23a>
 8022d20:	2e02      	cmp	r6, #2
 8022d22:	d051      	beq.n	8022dc8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8022d24:	2e03      	cmp	r6, #3
 8022d26:	f000 80c7 	beq.w	8022eb8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x350>
 8022d2a:	2e01      	cmp	r6, #1
 8022d2c:	9b04      	ldr	r3, [sp, #16]
 8022d2e:	f000 80b8 	beq.w	8022ea2 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33a>
 8022d32:	1ac9      	subs	r1, r1, r3
 8022d34:	9b03      	ldr	r3, [sp, #12]
 8022d36:	1ac0      	subs	r0, r0, r3
 8022d38:	f7ee fade 	bl	80112f8 <nema_blit>
 8022d3c:	6823      	ldr	r3, [r4, #0]
 8022d3e:	2b00      	cmp	r3, #0
 8022d40:	f000 80cf 	beq.w	8022ee2 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8022d44:	2201      	movs	r2, #1
 8022d46:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8022d4a:	b011      	add	sp, #68	@ 0x44
 8022d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022d50:	2b00      	cmp	r3, #0
 8022d52:	f47f af30 	bne.w	8022bb6 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4e>
 8022d56:	4b68      	ldr	r3, [pc, #416]	@ (8022ef8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>)
 8022d58:	4a68      	ldr	r2, [pc, #416]	@ (8022efc <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8022d5a:	f240 11bb 	movw	r1, #443	@ 0x1bb
 8022d5e:	4868      	ldr	r0, [pc, #416]	@ (8022f00 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8022d60:	f00f fb92 	bl	8032488 <__assert_func>
 8022d64:	1ad5      	subs	r5, r2, r3
 8022d66:	b2ab      	uxth	r3, r5
 8022d68:	041a      	lsls	r2, r3, #16
 8022d6a:	9303      	str	r3, [sp, #12]
 8022d6c:	f57f af3f 	bpl.w	8022bee <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 8022d70:	eba8 0803 	sub.w	r8, r8, r3
 8022d74:	2300      	movs	r3, #0
 8022d76:	fa0f f888 	sxth.w	r8, r8
 8022d7a:	9303      	str	r3, [sp, #12]
 8022d7c:	e737      	b.n	8022bee <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 8022d7e:	f109 0301 	add.w	r3, r9, #1
 8022d82:	105b      	asrs	r3, r3, #1
 8022d84:	9309      	str	r3, [sp, #36]	@ 0x24
 8022d86:	2729      	movs	r7, #41	@ 0x29
 8022d88:	e76f      	b.n	8022c6a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022d8a:	f109 0303 	add.w	r3, r9, #3
 8022d8e:	109b      	asrs	r3, r3, #2
 8022d90:	9309      	str	r3, [sp, #36]	@ 0x24
 8022d92:	2728      	movs	r7, #40	@ 0x28
 8022d94:	e769      	b.n	8022c6a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022d96:	f109 0307 	add.w	r3, r9, #7
 8022d9a:	10db      	asrs	r3, r3, #3
 8022d9c:	9309      	str	r3, [sp, #36]	@ 0x24
 8022d9e:	2727      	movs	r7, #39	@ 0x27
 8022da0:	e763      	b.n	8022c6a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022da2:	2e02      	cmp	r6, #2
 8022da4:	f000 8093 	beq.w	8022ece <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x366>
 8022da8:	2e03      	cmp	r6, #3
 8022daa:	d00d      	beq.n	8022dc8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8022dac:	2e01      	cmp	r6, #1
 8022dae:	f000 8091 	beq.w	8022ed4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x36c>
 8022db2:	461a      	mov	r2, r3
 8022db4:	9b03      	ldr	r3, [sp, #12]
 8022db6:	4419      	add	r1, r3
 8022db8:	9b04      	ldr	r3, [sp, #16]
 8022dba:	eba1 0109 	sub.w	r1, r1, r9
 8022dbe:	3101      	adds	r1, #1
 8022dc0:	1ac0      	subs	r0, r0, r3
 8022dc2:	f7ee fab3 	bl	801132c <nema_blit_rotate>
 8022dc6:	e7b9      	b.n	8022d3c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022dc8:	9b04      	ldr	r3, [sp, #16]
 8022dca:	2202      	movs	r2, #2
 8022dcc:	4419      	add	r1, r3
 8022dce:	9b03      	ldr	r3, [sp, #12]
 8022dd0:	4418      	add	r0, r3
 8022dd2:	9b06      	ldr	r3, [sp, #24]
 8022dd4:	eba0 0009 	sub.w	r0, r0, r9
 8022dd8:	1ac9      	subs	r1, r1, r3
 8022dda:	3101      	adds	r1, #1
 8022ddc:	3001      	adds	r0, #1
 8022dde:	f7ee faa5 	bl	801132c <nema_blit_rotate>
 8022de2:	e7ab      	b.n	8022d3c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022de4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8022de8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8022dec:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022dee:	440b      	add	r3, r1
 8022df0:	8852      	ldrh	r2, [r2, #2]
 8022df2:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022df4:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022df6:	1a9b      	subs	r3, r3, r2
 8022df8:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 8022dfc:	f8b0 c000 	ldrh.w	ip, [r0]
 8022e00:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8022e04:	8880      	ldrh	r0, [r0, #4]
 8022e06:	1a5b      	subs	r3, r3, r1
 8022e08:	4462      	add	r2, ip
 8022e0a:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8022e0e:	f8ad 103c 	strh.w	r1, [sp, #60]	@ 0x3c
 8022e12:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8022e16:	f8ad 003e 	strh.w	r0, [sp, #62]	@ 0x3e
 8022e1a:	e74b      	b.n	8022cb4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8022e1c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8022e20:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022e24:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022e26:	440b      	add	r3, r1
 8022e28:	8812      	ldrh	r2, [r2, #0]
 8022e2a:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022e2c:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022e2e:	1a9b      	subs	r3, r3, r2
 8022e30:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 8022e34:	f8b0 c002 	ldrh.w	ip, [r0, #2]
 8022e38:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8022e3c:	88c0      	ldrh	r0, [r0, #6]
 8022e3e:	1a5b      	subs	r3, r3, r1
 8022e40:	4462      	add	r2, ip
 8022e42:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8022e46:	f8ad 103e 	strh.w	r1, [sp, #62]	@ 0x3e
 8022e4a:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8022e4e:	f8ad 003c 	strh.w	r0, [sp, #60]	@ 0x3c
 8022e52:	e72f      	b.n	8022cb4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8022e54:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8022e58:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8022e5c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022e60:	440a      	add	r2, r1
 8022e62:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022e64:	8808      	ldrh	r0, [r1, #0]
 8022e66:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8022e6a:	1a12      	subs	r2, r2, r0
 8022e6c:	440b      	add	r3, r1
 8022e6e:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022e70:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022e72:	8849      	ldrh	r1, [r1, #2]
 8022e74:	8880      	ldrh	r0, [r0, #4]
 8022e76:	1a5b      	subs	r3, r3, r1
 8022e78:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022e7a:	1a12      	subs	r2, r2, r0
 8022e7c:	88c8      	ldrh	r0, [r1, #6]
 8022e7e:	6849      	ldr	r1, [r1, #4]
 8022e80:	1a1b      	subs	r3, r3, r0
 8022e82:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8022e86:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8022e8a:	910f      	str	r1, [sp, #60]	@ 0x3c
 8022e8c:	e712      	b.n	8022cb4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8022e8e:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8022e92:	e6ea      	b.n	8022c6a <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022e94:	4b1b      	ldr	r3, [pc, #108]	@ (8022f04 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8022e96:	4a19      	ldr	r2, [pc, #100]	@ (8022efc <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8022e98:	f44f 71dd 	mov.w	r1, #442	@ 0x1ba
 8022e9c:	4818      	ldr	r0, [pc, #96]	@ (8022f00 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8022e9e:	f00f faf3 	bl	8032488 <__assert_func>
 8022ea2:	4403      	add	r3, r0
 8022ea4:	4618      	mov	r0, r3
 8022ea6:	9b06      	ldr	r3, [sp, #24]
 8022ea8:	2203      	movs	r2, #3
 8022eaa:	1ac0      	subs	r0, r0, r3
 8022eac:	9b03      	ldr	r3, [sp, #12]
 8022eae:	3001      	adds	r0, #1
 8022eb0:	1ac9      	subs	r1, r1, r3
 8022eb2:	f7ee fa3b 	bl	801132c <nema_blit_rotate>
 8022eb6:	e741      	b.n	8022d3c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022eb8:	9b03      	ldr	r3, [sp, #12]
 8022eba:	2201      	movs	r2, #1
 8022ebc:	4419      	add	r1, r3
 8022ebe:	9b04      	ldr	r3, [sp, #16]
 8022ec0:	eba1 0109 	sub.w	r1, r1, r9
 8022ec4:	3101      	adds	r1, #1
 8022ec6:	1ac0      	subs	r0, r0, r3
 8022ec8:	f7ee fa30 	bl	801132c <nema_blit_rotate>
 8022ecc:	e736      	b.n	8022d3c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022ece:	9b04      	ldr	r3, [sp, #16]
 8022ed0:	4418      	add	r0, r3
 8022ed2:	e7e8      	b.n	8022ea6 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33e>
 8022ed4:	9b04      	ldr	r3, [sp, #16]
 8022ed6:	1ac9      	subs	r1, r1, r3
 8022ed8:	9b03      	ldr	r3, [sp, #12]
 8022eda:	1ac0      	subs	r0, r0, r3
 8022edc:	f7ee fa0c 	bl	80112f8 <nema_blit>
 8022ee0:	e72c      	b.n	8022d3c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022ee2:	4b09      	ldr	r3, [pc, #36]	@ (8022f08 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8022ee4:	4a09      	ldr	r2, [pc, #36]	@ (8022f0c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8022ee6:	217c      	movs	r1, #124	@ 0x7c
 8022ee8:	4809      	ldr	r0, [pc, #36]	@ (8022f10 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8022eea:	f00f facd 	bl	8032488 <__assert_func>
 8022eee:	bf00      	nop
 8022ef0:	20083364 	.word	0x20083364
 8022ef4:	08000504 	.word	0x08000504
 8022ef8:	08036718 	.word	0x08036718
 8022efc:	08037e4c 	.word	0x08037e4c
 8022f00:	08036248 	.word	0x08036248
 8022f04:	08036688 	.word	0x08036688
 8022f08:	080361a4 	.word	0x080361a4
 8022f0c:	08036a10 	.word	0x08036a10
 8022f10:	080361cc 	.word	0x080361cc
 8022f14:	20082ebc 	.word	0x20082ebc

08022f18 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8022f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f1c:	ed2d 8b08 	vpush	{d8-d11}
 8022f20:	b08b      	sub	sp, #44	@ 0x2c
 8022f22:	f89d 707c 	ldrb.w	r7, [sp, #124]	@ 0x7c
 8022f26:	e9dd 951c 	ldrd	r9, r5, [sp, #112]	@ 0x70
 8022f2a:	f8bd 8078 	ldrh.w	r8, [sp, #120]	@ 0x78
 8022f2e:	f8bd e080 	ldrh.w	lr, [sp, #128]	@ 0x80
 8022f32:	2f00      	cmp	r7, #0
 8022f34:	d067      	beq.n	8023006 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8022f36:	f9b5 a004 	ldrsh.w	sl, [r5, #4]
 8022f3a:	f1ba 0f00 	cmp.w	sl, #0
 8022f3e:	dd62      	ble.n	8023006 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8022f40:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8022f44:	f1ba 0f00 	cmp.w	sl, #0
 8022f48:	dd5d      	ble.n	8023006 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8022f4a:	f3c8 0a87 	ubfx	sl, r8, #2, #8
 8022f4e:	f1ba 0f0b 	cmp.w	sl, #11
 8022f52:	d05d      	beq.n	8023010 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xf8>
 8022f54:	461c      	mov	r4, r3
 8022f56:	4bcd      	ldr	r3, [pc, #820]	@ (802328c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x374>)
 8022f58:	4616      	mov	r6, r2
 8022f5a:	781b      	ldrb	r3, [r3, #0]
 8022f5c:	6862      	ldr	r2, [r4, #4]
 8022f5e:	2b01      	cmp	r3, #1
 8022f60:	9205      	str	r2, [sp, #20]
 8022f62:	4684      	mov	ip, r0
 8022f64:	e9d4 b202 	ldrd	fp, r2, [r4, #8]
 8022f68:	9202      	str	r2, [sp, #8]
 8022f6a:	d102      	bne.n	8022f72 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5a>
 8022f6c:	f8cd b008 	str.w	fp, [sp, #8]
 8022f70:	4693      	mov	fp, r2
 8022f72:	f1ba 0f0d 	cmp.w	sl, #13
 8022f76:	d03d      	beq.n	8022ff4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xdc>
 8022f78:	4623      	mov	r3, r4
 8022f7a:	4cc5      	ldr	r4, [pc, #788]	@ (8023290 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x378>)
 8022f7c:	6820      	ldr	r0, [r4, #0]
 8022f7e:	2800      	cmp	r0, #0
 8022f80:	f000 8243 	beq.w	802340a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 8022f84:	681b      	ldr	r3, [r3, #0]
 8022f86:	f8cd c010 	str.w	ip, [sp, #16]
 8022f8a:	9303      	str	r3, [sp, #12]
 8022f8c:	f7fd fdec 	bl	8020b68 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022f90:	9a04      	ldr	r2, [sp, #16]
 8022f92:	6813      	ldr	r3, [r2, #0]
 8022f94:	4610      	mov	r0, r2
 8022f96:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8022f98:	4798      	blx	r3
 8022f9a:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8022f9e:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8022fa2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8022fa6:	f9b5 0000 	ldrsh.w	r0, [r5]
 8022faa:	f7ed fe65 	bl	8010c78 <nema_set_clip>
 8022fae:	2200      	movs	r2, #0
 8022fb0:	463b      	mov	r3, r7
 8022fb2:	4611      	mov	r1, r2
 8022fb4:	4610      	mov	r0, r2
 8022fb6:	f7ed ff3d 	bl	8010e34 <nema_rgba>
 8022fba:	f7fb fbbf 	bl	801e73c <nema_set_const_color>
 8022fbe:	f04f 33ff 	mov.w	r3, #4294967295
 8022fc2:	2201      	movs	r2, #1
 8022fc4:	2100      	movs	r1, #0
 8022fc6:	48b3      	ldr	r0, [pc, #716]	@ (8023294 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x37c>)
 8022fc8:	f7fa fff2 	bl	801dfb0 <nema_set_blend>
 8022fcc:	f1ba 0f0d 	cmp.w	sl, #13
 8022fd0:	f200 8221 	bhi.w	8023416 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4fe>
 8022fd4:	e8df f01a 	tbh	[pc, sl, lsl #1]
 8022fd8:	01720027 	.word	0x01720027
 8022fdc:	021f0170 	.word	0x021f0170
 8022fe0:	021f021f 	.word	0x021f021f
 8022fe4:	021f021f 	.word	0x021f021f
 8022fe8:	021f021f 	.word	0x021f021f
 8022fec:	021f021f 	.word	0x021f021f
 8022ff0:	01570162 	.word	0x01570162
 8022ff4:	9b05      	ldr	r3, [sp, #20]
 8022ff6:	b133      	cbz	r3, 8023006 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8022ff8:	781b      	ldrb	r3, [r3, #0]
 8022ffa:	f1a3 0216 	sub.w	r2, r3, #22
 8022ffe:	2a01      	cmp	r2, #1
 8023000:	d9ba      	bls.n	8022f78 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x60>
 8023002:	2b12      	cmp	r3, #18
 8023004:	d0b8      	beq.n	8022f78 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x60>
 8023006:	b00b      	add	sp, #44	@ 0x2c
 8023008:	ecbd 8b08 	vpop	{d8-d11}
 802300c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023010:	e9cd 7e1f 	strd	r7, lr, [sp, #124]	@ 0x7c
 8023014:	f8cd 8078 	str.w	r8, [sp, #120]	@ 0x78
 8023018:	b00b      	add	sp, #44	@ 0x2c
 802301a:	ecbd 8b08 	vpop	{d8-d11}
 802301e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023022:	f7e8 bfc5 	b.w	800bfb0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 8023026:	2304      	movs	r3, #4
 8023028:	f04f 31ff 	mov.w	r1, #4294967295
 802302c:	f008 0201 	and.w	r2, r8, #1
 8023030:	9201      	str	r2, [sp, #4]
 8023032:	9803      	ldr	r0, [sp, #12]
 8023034:	9a02      	ldr	r2, [sp, #8]
 8023036:	9100      	str	r1, [sp, #0]
 8023038:	4659      	mov	r1, fp
 802303a:	f7ed ff03 	bl	8010e44 <nema_bind_src_tex>
 802303e:	2001      	movs	r0, #1
 8023040:	f7ee ff9c 	bl	8011f7c <nema_enable_tiling>
 8023044:	2301      	movs	r3, #1
 8023046:	461a      	mov	r2, r3
 8023048:	4619      	mov	r1, r3
 802304a:	4618      	mov	r0, r3
 802304c:	f7ee ffbe 	bl	8011fcc <nema_enable_aa>
 8023050:	edd6 7a03 	vldr	s15, [r6, #12]
 8023054:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8023058:	ed96 7a04 	vldr	s14, [r6, #16]
 802305c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023060:	4607      	mov	r7, r0
 8023062:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8023066:	f240 81aa 	bls.w	80233be <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a6>
 802306a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802306e:	bf94      	ite	ls
 8023070:	2301      	movls	r3, #1
 8023072:	2302      	movhi	r3, #2
 8023074:	edd6 7a08 	vldr	s15, [r6, #32]
 8023078:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802307c:	2200      	movs	r2, #0
 802307e:	ed96 7a09 	vldr	s14, [r6, #36]	@ 0x24
 8023082:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023086:	a90a      	add	r1, sp, #40	@ 0x28
 8023088:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802308c:	f843 2c10 	str.w	r2, [r3, #-16]
 8023090:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8023094:	f240 818d 	bls.w	80233b2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x49a>
 8023098:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802309c:	bf94      	ite	ls
 802309e:	2301      	movls	r3, #1
 80230a0:	2302      	movhi	r3, #2
 80230a2:	edd6 7a0d 	vldr	s15, [r6, #52]	@ 0x34
 80230a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80230aa:	2201      	movs	r2, #1
 80230ac:	ed96 7a0e 	vldr	s14, [r6, #56]	@ 0x38
 80230b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80230b4:	a90a      	add	r1, sp, #40	@ 0x28
 80230b6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80230ba:	f843 2c10 	str.w	r2, [r3, #-16]
 80230be:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80230c2:	f240 8188 	bls.w	80233d6 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4be>
 80230c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80230ca:	bf94      	ite	ls
 80230cc:	2301      	movls	r3, #1
 80230ce:	2302      	movhi	r3, #2
 80230d0:	edd6 7a12 	vldr	s15, [r6, #72]	@ 0x48
 80230d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80230d8:	2202      	movs	r2, #2
 80230da:	ed96 7a13 	vldr	s14, [r6, #76]	@ 0x4c
 80230de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80230e2:	a90a      	add	r1, sp, #40	@ 0x28
 80230e4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80230e8:	f843 2c10 	str.w	r2, [r3, #-16]
 80230ec:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80230f0:	f240 816b 	bls.w	80233ca <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4b2>
 80230f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80230f8:	bf94      	ite	ls
 80230fa:	2301      	movls	r3, #1
 80230fc:	2302      	movhi	r3, #2
 80230fe:	2203      	movs	r2, #3
 8023100:	a90a      	add	r1, sp, #40	@ 0x28
 8023102:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8023106:	f843 2c10 	str.w	r2, [r3, #-16]
 802310a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 802310e:	9907      	ldr	r1, [sp, #28]
 8023110:	f340 80d6 	ble.w	80232c0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8023114:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023116:	9808      	ldr	r0, [sp, #32]
 8023118:	9a06      	ldr	r2, [sp, #24]
 802311a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 802311e:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 8023122:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8023126:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802312a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 802312e:	ea4f 0c82 	mov.w	ip, r2, lsl #2
 8023132:	eb06 080e 	add.w	r8, r6, lr
 8023136:	0089      	lsls	r1, r1, #2
 8023138:	0080      	lsls	r0, r0, #2
 802313a:	1872      	adds	r2, r6, r1
 802313c:	eb06 0a00 	add.w	sl, r6, r0
 8023140:	eb06 030c 	add.w	r3, r6, ip
 8023144:	5871      	ldr	r1, [r6, r1]
 8023146:	5830      	ldr	r0, [r6, r0]
 8023148:	f856 c00c 	ldr.w	ip, [r6, ip]
 802314c:	edd8 4a01 	vldr	s9, [r8, #4]
 8023150:	f856 800e 	ldr.w	r8, [r6, lr]
 8023154:	9e02      	ldr	r6, [sp, #8]
 8023156:	6852      	ldr	r2, [r2, #4]
 8023158:	2eff      	cmp	r6, #255	@ 0xff
 802315a:	ed9a 5a01 	vldr	s10, [sl, #4]
 802315e:	685b      	ldr	r3, [r3, #4]
 8023160:	f340 80d2 	ble.w	8023308 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f0>
 8023164:	429a      	cmp	r2, r3
 8023166:	f000 815d 	beq.w	8023424 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x50c>
 802316a:	f9b9 6000 	ldrsh.w	r6, [r9]
 802316e:	ee07 ca90 	vmov	s15, ip
 8023172:	ee08 6a90 	vmov	s17, r6
 8023176:	f9b9 6002 	ldrsh.w	r6, [r9, #2]
 802317a:	ee04 3a10 	vmov	s8, r3
 802317e:	ee08 6a10 	vmov	s16, r6
 8023182:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8023186:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 802318a:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 802318e:	eef8 3ac4 	vcvt.f32.s32	s7, s8
 8023192:	ee07 1a90 	vmov	s15, r1
 8023196:	ee07 0a10 	vmov	s14, r0
 802319a:	ee06 8a10 	vmov	s12, r8
 802319e:	ee04 2a10 	vmov	s8, r2
 80231a2:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8023298 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 80231a6:	eef0 ba68 	vmov.f32	s23, s17
 80231aa:	eeb0 ba68 	vmov.f32	s22, s17
 80231ae:	eef0 aa68 	vmov.f32	s21, s17
 80231b2:	eeb0 aa48 	vmov.f32	s20, s16
 80231b6:	eef0 9a48 	vmov.f32	s19, s16
 80231ba:	eeb0 9a48 	vmov.f32	s18, s16
 80231be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80231c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80231c6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 80231ca:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 80231ce:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 80231d2:	eef8 4ae4 	vcvt.f32.s32	s9, s9
 80231d6:	f9b5 b006 	ldrsh.w	fp, [r5, #6]
 80231da:	eee5 baa6 	vfma.f32	s23, s11, s13
 80231de:	f1bb 0f00 	cmp.w	fp, #0
 80231e2:	eea7 baa6 	vfma.f32	s22, s15, s13
 80231e6:	eee7 aa26 	vfma.f32	s21, s14, s13
 80231ea:	eee6 8a26 	vfma.f32	s17, s12, s13
 80231ee:	eea3 aaa6 	vfma.f32	s20, s7, s13
 80231f2:	eee4 9a26 	vfma.f32	s19, s8, s13
 80231f6:	eea5 9a26 	vfma.f32	s18, s10, s13
 80231fa:	eea4 8aa6 	vfma.f32	s16, s9, s13
 80231fe:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 8023202:	dd38      	ble.n	8023276 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35e>
 8023204:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 8023208:	f1bb 0f80 	cmp.w	fp, #128	@ 0x80
 802320c:	46da      	mov	sl, fp
 802320e:	bfa8      	it	ge
 8023210:	f04f 0a80 	movge.w	sl, #128	@ 0x80
 8023214:	2e00      	cmp	r6, #0
 8023216:	f9b5 8000 	ldrsh.w	r8, [r5]
 802321a:	dd25      	ble.n	8023268 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x350>
 802321c:	2e80      	cmp	r6, #128	@ 0x80
 802321e:	4632      	mov	r2, r6
 8023220:	4640      	mov	r0, r8
 8023222:	4653      	mov	r3, sl
 8023224:	bfa8      	it	ge
 8023226:	2280      	movge	r2, #128	@ 0x80
 8023228:	4649      	mov	r1, r9
 802322a:	f7ed fd25 	bl	8010c78 <nema_set_clip>
 802322e:	eef0 3a48 	vmov.f32	s7, s16
 8023232:	eeb0 3a68 	vmov.f32	s6, s17
 8023236:	eef0 2a49 	vmov.f32	s5, s18
 802323a:	eeb0 2a6a 	vmov.f32	s4, s21
 802323e:	eef0 1a69 	vmov.f32	s3, s19
 8023242:	eeb0 1a4b 	vmov.f32	s2, s22
 8023246:	eef0 0a4a 	vmov.f32	s1, s20
 802324a:	eeb0 0a6b 	vmov.f32	s0, s23
 802324e:	f7ee f9cd 	bl	80115ec <nema_blit_quad_fit>
 8023252:	6820      	ldr	r0, [r4, #0]
 8023254:	2800      	cmp	r0, #0
 8023256:	f000 80d8 	beq.w	802340a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 802325a:	3e80      	subs	r6, #128	@ 0x80
 802325c:	f7fd fca4 	bl	8020ba8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8023260:	2e00      	cmp	r6, #0
 8023262:	f108 0880 	add.w	r8, r8, #128	@ 0x80
 8023266:	dcd9      	bgt.n	802321c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x304>
 8023268:	f1ab 0b80 	sub.w	fp, fp, #128	@ 0x80
 802326c:	f1bb 0f00 	cmp.w	fp, #0
 8023270:	f109 0980 	add.w	r9, r9, #128	@ 0x80
 8023274:	dcc6      	bgt.n	8023204 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2ec>
 8023276:	4638      	mov	r0, r7
 8023278:	b00b      	add	sp, #44	@ 0x2c
 802327a:	ecbd 8b08 	vpop	{d8-d11}
 802327e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023282:	f7ee bec5 	b.w	8012010 <nema_enable_aa_flags>
 8023286:	9b05      	ldr	r3, [sp, #20]
 8023288:	781b      	ldrb	r3, [r3, #0]
 802328a:	e6cd      	b.n	8023028 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 802328c:	20082ebc 	.word	0x20082ebc
 8023290:	20083364 	.word	0x20083364
 8023294:	08000504 	.word	0x08000504
 8023298:	3d800000 	.word	0x3d800000
 802329c:	4a65      	ldr	r2, [pc, #404]	@ (8023434 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x51c>)
 802329e:	23ff      	movs	r3, #255	@ 0xff
 80232a0:	6810      	ldr	r0, [r2, #0]
 80232a2:	b2c2      	uxtb	r2, r0
 80232a4:	f3c0 2107 	ubfx	r1, r0, #8, #8
 80232a8:	f3c0 4007 	ubfx	r0, r0, #16, #8
 80232ac:	f7ed fdc2 	bl	8010e34 <nema_rgba>
 80232b0:	f7ed fcd6 	bl	8010c60 <nema_set_tex_color>
 80232b4:	2329      	movs	r3, #41	@ 0x29
 80232b6:	e6b7      	b.n	8023028 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 80232b8:	2310      	movs	r3, #16
 80232ba:	e6b5      	b.n	8023028 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 80232bc:	2339      	movs	r3, #57	@ 0x39
 80232be:	e6b3      	b.n	8023028 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 80232c0:	9b08      	ldr	r3, [sp, #32]
 80232c2:	9806      	ldr	r0, [sp, #24]
 80232c4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80232c6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80232ca:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80232ce:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80232d2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80232d6:	009b      	lsls	r3, r3, #2
 80232d8:	ea4f 0c80 	mov.w	ip, r0, lsl #2
 80232dc:	ea4f 0e82 	mov.w	lr, r2, lsl #2
 80232e0:	0089      	lsls	r1, r1, #2
 80232e2:	18f0      	adds	r0, r6, r3
 80232e4:	1872      	adds	r2, r6, r1
 80232e6:	eb06 0a0c 	add.w	sl, r6, ip
 80232ea:	eb06 080e 	add.w	r8, r6, lr
 80232ee:	ed90 5a01 	vldr	s10, [r0, #4]
 80232f2:	edd8 4a01 	vldr	s9, [r8, #4]
 80232f6:	58f0      	ldr	r0, [r6, r3]
 80232f8:	6852      	ldr	r2, [r2, #4]
 80232fa:	5871      	ldr	r1, [r6, r1]
 80232fc:	f8da 3004 	ldr.w	r3, [sl, #4]
 8023300:	f856 c00c 	ldr.w	ip, [r6, ip]
 8023304:	f856 800e 	ldr.w	r8, [r6, lr]
 8023308:	429a      	cmp	r2, r3
 802330a:	d06a      	beq.n	80233e2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ca>
 802330c:	ee07 8a90 	vmov	s15, r8
 8023310:	f9b9 5000 	ldrsh.w	r5, [r9]
 8023314:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8023318:	ee00 5a10 	vmov	s0, r5
 802331c:	ee07 0a90 	vmov	s15, r0
 8023320:	f9b9 5002 	ldrsh.w	r5, [r9, #2]
 8023324:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8023328:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802332c:	ee00 5a90 	vmov	s1, r5
 8023330:	ee07 1a90 	vmov	s15, r1
 8023334:	eddf 6a40 	vldr	s13, [pc, #256]	@ 8023438 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x520>
 8023338:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 802333c:	ee04 2a10 	vmov	s8, r2
 8023340:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8023344:	eeb0 1a40 	vmov.f32	s2, s0
 8023348:	eef8 1ac4 	vcvt.f32.s32	s3, s8
 802334c:	ee05 ca90 	vmov	s11, ip
 8023350:	ee04 3a10 	vmov	s8, r3
 8023354:	eea7 1aa6 	vfma.f32	s2, s15, s13
 8023358:	eef0 7a60 	vmov.f32	s15, s1
 802335c:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8023360:	eef8 4ae4 	vcvt.f32.s32	s9, s9
 8023364:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8023368:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 802336c:	eeb0 3a40 	vmov.f32	s6, s0
 8023370:	eeb0 2a40 	vmov.f32	s4, s0
 8023374:	eef0 3a60 	vmov.f32	s7, s1
 8023378:	eef0 2a60 	vmov.f32	s5, s1
 802337c:	eee1 7aa6 	vfma.f32	s15, s3, s13
 8023380:	eea6 3a26 	vfma.f32	s6, s12, s13
 8023384:	eea7 2a26 	vfma.f32	s4, s14, s13
 8023388:	eea5 0aa6 	vfma.f32	s0, s11, s13
 802338c:	eee4 3aa6 	vfma.f32	s7, s9, s13
 8023390:	eee5 2a26 	vfma.f32	s5, s10, s13
 8023394:	eef0 1a67 	vmov.f32	s3, s15
 8023398:	eee4 0a26 	vfma.f32	s1, s8, s13
 802339c:	f7ee f926 	bl	80115ec <nema_blit_quad_fit>
 80233a0:	6820      	ldr	r0, [r4, #0]
 80233a2:	b390      	cbz	r0, 802340a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 80233a4:	b00b      	add	sp, #44	@ 0x2c
 80233a6:	ecbd 8b08 	vpop	{d8-d11}
 80233aa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80233ae:	f7fd bbfb 	b.w	8020ba8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80233b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233b6:	bf94      	ite	ls
 80233b8:	4613      	movls	r3, r2
 80233ba:	2303      	movhi	r3, #3
 80233bc:	e671      	b.n	80230a2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x18a>
 80233be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233c2:	bf94      	ite	ls
 80233c4:	2300      	movls	r3, #0
 80233c6:	2303      	movhi	r3, #3
 80233c8:	e654      	b.n	8023074 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x15c>
 80233ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233ce:	bf94      	ite	ls
 80233d0:	2300      	movls	r3, #0
 80233d2:	2303      	movhi	r3, #3
 80233d4:	e693      	b.n	80230fe <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e6>
 80233d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233da:	bf94      	ite	ls
 80233dc:	2300      	movls	r3, #0
 80233de:	2303      	movhi	r3, #3
 80233e0:	e676      	b.n	80230d0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1b8>
 80233e2:	4281      	cmp	r1, r0
 80233e4:	d192      	bne.n	802330c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 80233e6:	2200      	movs	r2, #0
 80233e8:	ee15 6a10 	vmov	r6, s10
 80233ec:	ee14 ea90 	vmov	lr, s9
 80233f0:	4576      	cmp	r6, lr
 80233f2:	d002      	beq.n	80233fa <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4e2>
 80233f4:	b1da      	cbz	r2, 802342e <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x516>
 80233f6:	461a      	mov	r2, r3
 80233f8:	e6b7      	b.n	802316a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x252>
 80233fa:	45c4      	cmp	ip, r8
 80233fc:	d1fa      	bne.n	80233f4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4dc>
 80233fe:	460d      	mov	r5, r1
 8023400:	46e0      	mov	r8, ip
 8023402:	4601      	mov	r1, r0
 8023404:	461a      	mov	r2, r3
 8023406:	4628      	mov	r0, r5
 8023408:	e780      	b.n	802330c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 802340a:	4b0c      	ldr	r3, [pc, #48]	@ (802343c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x524>)
 802340c:	4a0c      	ldr	r2, [pc, #48]	@ (8023440 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x528>)
 802340e:	217c      	movs	r1, #124	@ 0x7c
 8023410:	480c      	ldr	r0, [pc, #48]	@ (8023444 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x52c>)
 8023412:	f00f f839 	bl	8032488 <__assert_func>
 8023416:	4b0c      	ldr	r3, [pc, #48]	@ (8023448 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x530>)
 8023418:	4a0c      	ldr	r2, [pc, #48]	@ (802344c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x534>)
 802341a:	f44f 7157 	mov.w	r1, #860	@ 0x35c
 802341e:	480c      	ldr	r0, [pc, #48]	@ (8023450 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x538>)
 8023420:	f00f f832 	bl	8032488 <__assert_func>
 8023424:	4281      	cmp	r1, r0
 8023426:	f47f aea0 	bne.w	802316a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x252>
 802342a:	2201      	movs	r2, #1
 802342c:	e7dc      	b.n	80233e8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d0>
 802342e:	461a      	mov	r2, r3
 8023430:	e76c      	b.n	802330c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 8023432:	bf00      	nop
 8023434:	20082ecc 	.word	0x20082ecc
 8023438:	3d800000 	.word	0x3d800000
 802343c:	080361a4 	.word	0x080361a4
 8023440:	08036a10 	.word	0x08036a10
 8023444:	080361cc 	.word	0x080361cc
 8023448:	0803609c 	.word	0x0803609c
 802344c:	08036bc8 	.word	0x08036bc8
 8023450:	08036248 	.word	0x08036248

08023454 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8023454:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023458:	4680      	mov	r8, r0
 802345a:	460f      	mov	r7, r1
 802345c:	4614      	mov	r4, r2
 802345e:	461e      	mov	r6, r3
 8023460:	4db2      	ldr	r5, [pc, #712]	@ (802372c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2d8>)
 8023462:	e8d5 3f8f 	ldab	r3, [r5]
 8023466:	07da      	lsls	r2, r3, #31
 8023468:	f140 823a 	bpl.w	80238e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48c>
 802346c:	4db0      	ldr	r5, [pc, #704]	@ (8023730 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2dc>)
 802346e:	e8d5 3f8f 	ldab	r3, [r5]
 8023472:	07db      	lsls	r3, r3, #31
 8023474:	f140 8225 	bpl.w	80238c2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x46e>
 8023478:	4dae      	ldr	r5, [pc, #696]	@ (8023734 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e0>)
 802347a:	e8d5 3f8f 	ldab	r3, [r5]
 802347e:	07d8      	lsls	r0, r3, #31
 8023480:	f140 8210 	bpl.w	80238a4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x450>
 8023484:	4dac      	ldr	r5, [pc, #688]	@ (8023738 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e4>)
 8023486:	e8d5 3f8f 	ldab	r3, [r5]
 802348a:	07d9      	lsls	r1, r3, #31
 802348c:	f140 81fb 	bpl.w	8023886 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x432>
 8023490:	4daa      	ldr	r5, [pc, #680]	@ (802373c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e8>)
 8023492:	e8d5 3f8f 	ldab	r3, [r5]
 8023496:	07da      	lsls	r2, r3, #31
 8023498:	f140 81e6 	bpl.w	8023868 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x414>
 802349c:	4da8      	ldr	r5, [pc, #672]	@ (8023740 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2ec>)
 802349e:	e8d5 3f8f 	ldab	r3, [r5]
 80234a2:	07db      	lsls	r3, r3, #31
 80234a4:	f140 81d1 	bpl.w	802384a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3f6>
 80234a8:	4da6      	ldr	r5, [pc, #664]	@ (8023744 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f0>)
 80234aa:	e8d5 3f8f 	ldab	r3, [r5]
 80234ae:	07d8      	lsls	r0, r3, #31
 80234b0:	f140 81bc 	bpl.w	802382c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3d8>
 80234b4:	4da4      	ldr	r5, [pc, #656]	@ (8023748 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f4>)
 80234b6:	e8d5 3f8f 	ldab	r3, [r5]
 80234ba:	07d9      	lsls	r1, r3, #31
 80234bc:	f140 81a7 	bpl.w	802380e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3ba>
 80234c0:	4da2      	ldr	r5, [pc, #648]	@ (802374c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f8>)
 80234c2:	e8d5 3f8f 	ldab	r3, [r5]
 80234c6:	07da      	lsls	r2, r3, #31
 80234c8:	f140 8192 	bpl.w	80237f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x39c>
 80234cc:	4da0      	ldr	r5, [pc, #640]	@ (8023750 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2fc>)
 80234ce:	e8d5 3f8f 	ldab	r3, [r5]
 80234d2:	07db      	lsls	r3, r3, #31
 80234d4:	f140 811a 	bpl.w	802370c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2b8>
 80234d8:	4d9e      	ldr	r5, [pc, #632]	@ (8023754 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x300>)
 80234da:	e8d5 3f8f 	ldab	r3, [r5]
 80234de:	07d8      	lsls	r0, r3, #31
 80234e0:	f140 8105 	bpl.w	80236ee <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x29a>
 80234e4:	4d9c      	ldr	r5, [pc, #624]	@ (8023758 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x304>)
 80234e6:	e8d5 3f8f 	ldab	r3, [r5]
 80234ea:	07d9      	lsls	r1, r3, #31
 80234ec:	f140 80f0 	bpl.w	80236d0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x27c>
 80234f0:	4d9a      	ldr	r5, [pc, #616]	@ (802375c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x308>)
 80234f2:	e8d5 3f8f 	ldab	r3, [r5]
 80234f6:	07da      	lsls	r2, r3, #31
 80234f8:	f140 80db 	bpl.w	80236b2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x25e>
 80234fc:	4d98      	ldr	r5, [pc, #608]	@ (8023760 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30c>)
 80234fe:	e8d5 3f8f 	ldab	r3, [r5]
 8023502:	07db      	lsls	r3, r3, #31
 8023504:	f140 80c6 	bpl.w	8023694 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x240>
 8023508:	4d96      	ldr	r5, [pc, #600]	@ (8023764 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x310>)
 802350a:	e8d5 3f8f 	ldab	r3, [r5]
 802350e:	07d8      	lsls	r0, r3, #31
 8023510:	f140 80b1 	bpl.w	8023676 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x222>
 8023514:	4d94      	ldr	r5, [pc, #592]	@ (8023768 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x314>)
 8023516:	e8d5 3f8f 	ldab	r3, [r5]
 802351a:	07d9      	lsls	r1, r3, #31
 802351c:	f140 809c 	bpl.w	8023658 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x204>
 8023520:	4d92      	ldr	r5, [pc, #584]	@ (802376c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x318>)
 8023522:	e8d5 3f8f 	ldab	r3, [r5]
 8023526:	07da      	lsls	r2, r3, #31
 8023528:	f140 8087 	bpl.w	802363a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1e6>
 802352c:	4d90      	ldr	r5, [pc, #576]	@ (8023770 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x31c>)
 802352e:	e8d5 3f8f 	ldab	r3, [r5]
 8023532:	07db      	lsls	r3, r3, #31
 8023534:	d573      	bpl.n	802361e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ca>
 8023536:	4d8f      	ldr	r5, [pc, #572]	@ (8023774 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x320>)
 8023538:	e8d5 3f8f 	ldab	r3, [r5]
 802353c:	07d8      	lsls	r0, r3, #31
 802353e:	d560      	bpl.n	8023602 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ae>
 8023540:	4d8d      	ldr	r5, [pc, #564]	@ (8023778 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x324>)
 8023542:	e8d5 3f8f 	ldab	r3, [r5]
 8023546:	07d9      	lsls	r1, r3, #31
 8023548:	d54d      	bpl.n	80235e6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x192>
 802354a:	4d8c      	ldr	r5, [pc, #560]	@ (802377c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x328>)
 802354c:	e8d5 3f8f 	ldab	r3, [r5]
 8023550:	07da      	lsls	r2, r3, #31
 8023552:	d53a      	bpl.n	80235ca <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8023554:	4d8a      	ldr	r5, [pc, #552]	@ (8023780 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x32c>)
 8023556:	e8d5 3f8f 	ldab	r3, [r5]
 802355a:	07db      	lsls	r3, r3, #31
 802355c:	d517      	bpl.n	802358e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 802355e:	f898 300c 	ldrb.w	r3, [r8, #12]
 8023562:	2b01      	cmp	r3, #1
 8023564:	d024      	beq.n	80235b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15c>
 8023566:	f0c0 81ca 	bcc.w	80238fe <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4aa>
 802356a:	2b02      	cmp	r3, #2
 802356c:	d002      	beq.n	8023574 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 802356e:	2000      	movs	r0, #0
 8023570:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023574:	2eff      	cmp	r6, #255	@ 0xff
 8023576:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 802357a:	f000 81cb 	beq.w	8023914 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4c0>
 802357e:	2c03      	cmp	r4, #3
 8023580:	d8f5      	bhi.n	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023582:	e8df f014 	tbh	[pc, r4, lsl #1]
 8023586:	01ff      	.short	0x01ff
 8023588:	01e701ee 	.word	0x01e701ee
 802358c:	01e0      	.short	0x01e0
 802358e:	4628      	mov	r0, r5
 8023590:	f00d fda3 	bl	80310da <__cxa_guard_acquire>
 8023594:	2800      	cmp	r0, #0
 8023596:	d0e2      	beq.n	802355e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10a>
 8023598:	4628      	mov	r0, r5
 802359a:	f00d fdaa 	bl	80310f2 <__cxa_guard_release>
 802359e:	4a79      	ldr	r2, [pc, #484]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80235a0:	4979      	ldr	r1, [pc, #484]	@ (8023788 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x334>)
 80235a2:	487a      	ldr	r0, [pc, #488]	@ (802378c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x338>)
 80235a4:	f00d fd92 	bl	80310cc <__aeabi_atexit>
 80235a8:	f898 300c 	ldrb.w	r3, [r8, #12]
 80235ac:	2b01      	cmp	r3, #1
 80235ae:	d1da      	bne.n	8023566 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x112>
 80235b0:	2eff      	cmp	r6, #255	@ 0xff
 80235b2:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 80235b6:	f000 81b6 	beq.w	8023926 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4d2>
 80235ba:	2c03      	cmp	r4, #3
 80235bc:	d8d7      	bhi.n	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 80235be:	e8df f014 	tbh	[pc, r4, lsl #1]
 80235c2:	0233      	.short	0x0233
 80235c4:	021b0222 	.word	0x021b0222
 80235c8:	0214      	.short	0x0214
 80235ca:	4628      	mov	r0, r5
 80235cc:	f00d fd85 	bl	80310da <__cxa_guard_acquire>
 80235d0:	2800      	cmp	r0, #0
 80235d2:	d0bf      	beq.n	8023554 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 80235d4:	4628      	mov	r0, r5
 80235d6:	f00d fd8c 	bl	80310f2 <__cxa_guard_release>
 80235da:	4a6a      	ldr	r2, [pc, #424]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80235dc:	496c      	ldr	r1, [pc, #432]	@ (8023790 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x33c>)
 80235de:	486d      	ldr	r0, [pc, #436]	@ (8023794 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x340>)
 80235e0:	f00d fd74 	bl	80310cc <__aeabi_atexit>
 80235e4:	e7b6      	b.n	8023554 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 80235e6:	4628      	mov	r0, r5
 80235e8:	f00d fd77 	bl	80310da <__cxa_guard_acquire>
 80235ec:	2800      	cmp	r0, #0
 80235ee:	d0ac      	beq.n	802354a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 80235f0:	4628      	mov	r0, r5
 80235f2:	f00d fd7e 	bl	80310f2 <__cxa_guard_release>
 80235f6:	4a63      	ldr	r2, [pc, #396]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80235f8:	4967      	ldr	r1, [pc, #412]	@ (8023798 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x344>)
 80235fa:	4868      	ldr	r0, [pc, #416]	@ (802379c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x348>)
 80235fc:	f00d fd66 	bl	80310cc <__aeabi_atexit>
 8023600:	e7a3      	b.n	802354a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 8023602:	4628      	mov	r0, r5
 8023604:	f00d fd69 	bl	80310da <__cxa_guard_acquire>
 8023608:	2800      	cmp	r0, #0
 802360a:	d099      	beq.n	8023540 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 802360c:	4628      	mov	r0, r5
 802360e:	f00d fd70 	bl	80310f2 <__cxa_guard_release>
 8023612:	4a5c      	ldr	r2, [pc, #368]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023614:	4962      	ldr	r1, [pc, #392]	@ (80237a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x34c>)
 8023616:	4863      	ldr	r0, [pc, #396]	@ (80237a4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x350>)
 8023618:	f00d fd58 	bl	80310cc <__aeabi_atexit>
 802361c:	e790      	b.n	8023540 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 802361e:	4628      	mov	r0, r5
 8023620:	f00d fd5b 	bl	80310da <__cxa_guard_acquire>
 8023624:	2800      	cmp	r0, #0
 8023626:	d086      	beq.n	8023536 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8023628:	4628      	mov	r0, r5
 802362a:	f00d fd62 	bl	80310f2 <__cxa_guard_release>
 802362e:	4a55      	ldr	r2, [pc, #340]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023630:	495d      	ldr	r1, [pc, #372]	@ (80237a8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x354>)
 8023632:	485e      	ldr	r0, [pc, #376]	@ (80237ac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x358>)
 8023634:	f00d fd4a 	bl	80310cc <__aeabi_atexit>
 8023638:	e77d      	b.n	8023536 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 802363a:	4628      	mov	r0, r5
 802363c:	f00d fd4d 	bl	80310da <__cxa_guard_acquire>
 8023640:	2800      	cmp	r0, #0
 8023642:	f43f af73 	beq.w	802352c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8023646:	4628      	mov	r0, r5
 8023648:	f00d fd53 	bl	80310f2 <__cxa_guard_release>
 802364c:	4a4d      	ldr	r2, [pc, #308]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 802364e:	4958      	ldr	r1, [pc, #352]	@ (80237b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x35c>)
 8023650:	4858      	ldr	r0, [pc, #352]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x360>)
 8023652:	f00d fd3b 	bl	80310cc <__aeabi_atexit>
 8023656:	e769      	b.n	802352c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8023658:	4628      	mov	r0, r5
 802365a:	f00d fd3e 	bl	80310da <__cxa_guard_acquire>
 802365e:	2800      	cmp	r0, #0
 8023660:	f43f af5e 	beq.w	8023520 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 8023664:	4628      	mov	r0, r5
 8023666:	f00d fd44 	bl	80310f2 <__cxa_guard_release>
 802366a:	4a46      	ldr	r2, [pc, #280]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 802366c:	4952      	ldr	r1, [pc, #328]	@ (80237b8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x364>)
 802366e:	4853      	ldr	r0, [pc, #332]	@ (80237bc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x368>)
 8023670:	f00d fd2c 	bl	80310cc <__aeabi_atexit>
 8023674:	e754      	b.n	8023520 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 8023676:	4628      	mov	r0, r5
 8023678:	f00d fd2f 	bl	80310da <__cxa_guard_acquire>
 802367c:	2800      	cmp	r0, #0
 802367e:	f43f af49 	beq.w	8023514 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 8023682:	4628      	mov	r0, r5
 8023684:	f00d fd35 	bl	80310f2 <__cxa_guard_release>
 8023688:	4a3e      	ldr	r2, [pc, #248]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 802368a:	494d      	ldr	r1, [pc, #308]	@ (80237c0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x36c>)
 802368c:	484d      	ldr	r0, [pc, #308]	@ (80237c4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x370>)
 802368e:	f00d fd1d 	bl	80310cc <__aeabi_atexit>
 8023692:	e73f      	b.n	8023514 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 8023694:	4628      	mov	r0, r5
 8023696:	f00d fd20 	bl	80310da <__cxa_guard_acquire>
 802369a:	2800      	cmp	r0, #0
 802369c:	f43f af34 	beq.w	8023508 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 80236a0:	4628      	mov	r0, r5
 80236a2:	f00d fd26 	bl	80310f2 <__cxa_guard_release>
 80236a6:	4a37      	ldr	r2, [pc, #220]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80236a8:	4947      	ldr	r1, [pc, #284]	@ (80237c8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x374>)
 80236aa:	4848      	ldr	r0, [pc, #288]	@ (80237cc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x378>)
 80236ac:	f00d fd0e 	bl	80310cc <__aeabi_atexit>
 80236b0:	e72a      	b.n	8023508 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 80236b2:	4628      	mov	r0, r5
 80236b4:	f00d fd11 	bl	80310da <__cxa_guard_acquire>
 80236b8:	2800      	cmp	r0, #0
 80236ba:	f43f af1f 	beq.w	80234fc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 80236be:	4628      	mov	r0, r5
 80236c0:	f00d fd17 	bl	80310f2 <__cxa_guard_release>
 80236c4:	4a2f      	ldr	r2, [pc, #188]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80236c6:	4942      	ldr	r1, [pc, #264]	@ (80237d0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x37c>)
 80236c8:	4842      	ldr	r0, [pc, #264]	@ (80237d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x380>)
 80236ca:	f00d fcff 	bl	80310cc <__aeabi_atexit>
 80236ce:	e715      	b.n	80234fc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 80236d0:	4628      	mov	r0, r5
 80236d2:	f00d fd02 	bl	80310da <__cxa_guard_acquire>
 80236d6:	2800      	cmp	r0, #0
 80236d8:	f43f af0a 	beq.w	80234f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 80236dc:	4628      	mov	r0, r5
 80236de:	f00d fd08 	bl	80310f2 <__cxa_guard_release>
 80236e2:	4a28      	ldr	r2, [pc, #160]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80236e4:	493c      	ldr	r1, [pc, #240]	@ (80237d8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x384>)
 80236e6:	483d      	ldr	r0, [pc, #244]	@ (80237dc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x388>)
 80236e8:	f00d fcf0 	bl	80310cc <__aeabi_atexit>
 80236ec:	e700      	b.n	80234f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 80236ee:	4628      	mov	r0, r5
 80236f0:	f00d fcf3 	bl	80310da <__cxa_guard_acquire>
 80236f4:	2800      	cmp	r0, #0
 80236f6:	f43f aef5 	beq.w	80234e4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 80236fa:	4628      	mov	r0, r5
 80236fc:	f00d fcf9 	bl	80310f2 <__cxa_guard_release>
 8023700:	4a20      	ldr	r2, [pc, #128]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023702:	4937      	ldr	r1, [pc, #220]	@ (80237e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x38c>)
 8023704:	4837      	ldr	r0, [pc, #220]	@ (80237e4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x390>)
 8023706:	f00d fce1 	bl	80310cc <__aeabi_atexit>
 802370a:	e6eb      	b.n	80234e4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 802370c:	4628      	mov	r0, r5
 802370e:	f00d fce4 	bl	80310da <__cxa_guard_acquire>
 8023712:	2800      	cmp	r0, #0
 8023714:	f43f aee0 	beq.w	80234d8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 8023718:	4628      	mov	r0, r5
 802371a:	f00d fcea 	bl	80310f2 <__cxa_guard_release>
 802371e:	4a19      	ldr	r2, [pc, #100]	@ (8023784 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023720:	4931      	ldr	r1, [pc, #196]	@ (80237e8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x394>)
 8023722:	4832      	ldr	r0, [pc, #200]	@ (80237ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x398>)
 8023724:	f00d fcd2 	bl	80310cc <__aeabi_atexit>
 8023728:	e6d6      	b.n	80234d8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 802372a:	bf00      	nop
 802372c:	2008338c 	.word	0x2008338c
 8023730:	200833a0 	.word	0x200833a0
 8023734:	20083368 	.word	0x20083368
 8023738:	20083374 	.word	0x20083374
 802373c:	200833ac 	.word	0x200833ac
 8023740:	200833b8 	.word	0x200833b8
 8023744:	20083380 	.word	0x20083380
 8023748:	20083398 	.word	0x20083398
 802374c:	20083390 	.word	0x20083390
 8023750:	200833a4 	.word	0x200833a4
 8023754:	2008336c 	.word	0x2008336c
 8023758:	20083378 	.word	0x20083378
 802375c:	200833b0 	.word	0x200833b0
 8023760:	200833bc 	.word	0x200833bc
 8023764:	20083384 	.word	0x20083384
 8023768:	2008339c 	.word	0x2008339c
 802376c:	20083394 	.word	0x20083394
 8023770:	200833a8 	.word	0x200833a8
 8023774:	20083370 	.word	0x20083370
 8023778:	2008337c 	.word	0x2008337c
 802377c:	200833b4 	.word	0x200833b4
 8023780:	20083388 	.word	0x20083388
 8023784:	20000000 	.word	0x20000000
 8023788:	080227d9 	.word	0x080227d9
 802378c:	2000020c 	.word	0x2000020c
 8023790:	080227d5 	.word	0x080227d5
 8023794:	20000238 	.word	0x20000238
 8023798:	080227e5 	.word	0x080227e5
 802379c:	20000200 	.word	0x20000200
 80237a0:	080227e9 	.word	0x080227e9
 80237a4:	200001f4 	.word	0x200001f4
 80237a8:	080227dd 	.word	0x080227dd
 80237ac:	2000022c 	.word	0x2000022c
 80237b0:	080227e1 	.word	0x080227e1
 80237b4:	20000218 	.word	0x20000218
 80237b8:	080227f5 	.word	0x080227f5
 80237bc:	20000220 	.word	0x20000220
 80237c0:	080227f9 	.word	0x080227f9
 80237c4:	20000208 	.word	0x20000208
 80237c8:	080227ed 	.word	0x080227ed
 80237cc:	20000240 	.word	0x20000240
 80237d0:	080227f1 	.word	0x080227f1
 80237d4:	20000234 	.word	0x20000234
 80237d8:	08022805 	.word	0x08022805
 80237dc:	200001fc 	.word	0x200001fc
 80237e0:	08022809 	.word	0x08022809
 80237e4:	200001f0 	.word	0x200001f0
 80237e8:	080227fd 	.word	0x080227fd
 80237ec:	20000228 	.word	0x20000228
 80237f0:	4628      	mov	r0, r5
 80237f2:	f00d fc72 	bl	80310da <__cxa_guard_acquire>
 80237f6:	2800      	cmp	r0, #0
 80237f8:	f43f ae68 	beq.w	80234cc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 80237fc:	4628      	mov	r0, r5
 80237fe:	f00d fc78 	bl	80310f2 <__cxa_guard_release>
 8023802:	4aa6      	ldr	r2, [pc, #664]	@ (8023a9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023804:	49a6      	ldr	r1, [pc, #664]	@ (8023aa0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64c>)
 8023806:	48a7      	ldr	r0, [pc, #668]	@ (8023aa4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x650>)
 8023808:	f00d fc60 	bl	80310cc <__aeabi_atexit>
 802380c:	e65e      	b.n	80234cc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 802380e:	4628      	mov	r0, r5
 8023810:	f00d fc63 	bl	80310da <__cxa_guard_acquire>
 8023814:	2800      	cmp	r0, #0
 8023816:	f43f ae53 	beq.w	80234c0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 802381a:	4628      	mov	r0, r5
 802381c:	f00d fc69 	bl	80310f2 <__cxa_guard_release>
 8023820:	4a9e      	ldr	r2, [pc, #632]	@ (8023a9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023822:	49a1      	ldr	r1, [pc, #644]	@ (8023aa8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x654>)
 8023824:	48a1      	ldr	r0, [pc, #644]	@ (8023aac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 8023826:	f00d fc51 	bl	80310cc <__aeabi_atexit>
 802382a:	e649      	b.n	80234c0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 802382c:	4628      	mov	r0, r5
 802382e:	f00d fc54 	bl	80310da <__cxa_guard_acquire>
 8023832:	2800      	cmp	r0, #0
 8023834:	f43f ae3e 	beq.w	80234b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8023838:	4628      	mov	r0, r5
 802383a:	f00d fc5a 	bl	80310f2 <__cxa_guard_release>
 802383e:	4a97      	ldr	r2, [pc, #604]	@ (8023a9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023840:	499b      	ldr	r1, [pc, #620]	@ (8023ab0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x65c>)
 8023842:	489c      	ldr	r0, [pc, #624]	@ (8023ab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 8023844:	f00d fc42 	bl	80310cc <__aeabi_atexit>
 8023848:	e634      	b.n	80234b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 802384a:	4628      	mov	r0, r5
 802384c:	f00d fc45 	bl	80310da <__cxa_guard_acquire>
 8023850:	2800      	cmp	r0, #0
 8023852:	f43f ae29 	beq.w	80234a8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 8023856:	4628      	mov	r0, r5
 8023858:	f00d fc4b 	bl	80310f2 <__cxa_guard_release>
 802385c:	4a8f      	ldr	r2, [pc, #572]	@ (8023a9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 802385e:	4996      	ldr	r1, [pc, #600]	@ (8023ab8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x664>)
 8023860:	4896      	ldr	r0, [pc, #600]	@ (8023abc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 8023862:	f00d fc33 	bl	80310cc <__aeabi_atexit>
 8023866:	e61f      	b.n	80234a8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 8023868:	4628      	mov	r0, r5
 802386a:	f00d fc36 	bl	80310da <__cxa_guard_acquire>
 802386e:	2800      	cmp	r0, #0
 8023870:	f43f ae14 	beq.w	802349c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 8023874:	4628      	mov	r0, r5
 8023876:	f00d fc3c 	bl	80310f2 <__cxa_guard_release>
 802387a:	4a88      	ldr	r2, [pc, #544]	@ (8023a9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 802387c:	4990      	ldr	r1, [pc, #576]	@ (8023ac0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x66c>)
 802387e:	4891      	ldr	r0, [pc, #580]	@ (8023ac4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 8023880:	f00d fc24 	bl	80310cc <__aeabi_atexit>
 8023884:	e60a      	b.n	802349c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 8023886:	4628      	mov	r0, r5
 8023888:	f00d fc27 	bl	80310da <__cxa_guard_acquire>
 802388c:	2800      	cmp	r0, #0
 802388e:	f43f adff 	beq.w	8023490 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 8023892:	4628      	mov	r0, r5
 8023894:	f00d fc2d 	bl	80310f2 <__cxa_guard_release>
 8023898:	4a80      	ldr	r2, [pc, #512]	@ (8023a9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 802389a:	498b      	ldr	r1, [pc, #556]	@ (8023ac8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x674>)
 802389c:	488b      	ldr	r0, [pc, #556]	@ (8023acc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x678>)
 802389e:	f00d fc15 	bl	80310cc <__aeabi_atexit>
 80238a2:	e5f5      	b.n	8023490 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 80238a4:	4628      	mov	r0, r5
 80238a6:	f00d fc18 	bl	80310da <__cxa_guard_acquire>
 80238aa:	2800      	cmp	r0, #0
 80238ac:	f43f adea 	beq.w	8023484 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 80238b0:	4628      	mov	r0, r5
 80238b2:	f00d fc1e 	bl	80310f2 <__cxa_guard_release>
 80238b6:	4a79      	ldr	r2, [pc, #484]	@ (8023a9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80238b8:	4985      	ldr	r1, [pc, #532]	@ (8023ad0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x67c>)
 80238ba:	4886      	ldr	r0, [pc, #536]	@ (8023ad4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x680>)
 80238bc:	f00d fc06 	bl	80310cc <__aeabi_atexit>
 80238c0:	e5e0      	b.n	8023484 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 80238c2:	4628      	mov	r0, r5
 80238c4:	f00d fc09 	bl	80310da <__cxa_guard_acquire>
 80238c8:	2800      	cmp	r0, #0
 80238ca:	f43f add5 	beq.w	8023478 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80238ce:	4628      	mov	r0, r5
 80238d0:	f00d fc0f 	bl	80310f2 <__cxa_guard_release>
 80238d4:	4a71      	ldr	r2, [pc, #452]	@ (8023a9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80238d6:	4980      	ldr	r1, [pc, #512]	@ (8023ad8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x684>)
 80238d8:	4880      	ldr	r0, [pc, #512]	@ (8023adc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x688>)
 80238da:	f00d fbf7 	bl	80310cc <__aeabi_atexit>
 80238de:	e5cb      	b.n	8023478 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80238e0:	4628      	mov	r0, r5
 80238e2:	f00d fbfa 	bl	80310da <__cxa_guard_acquire>
 80238e6:	2800      	cmp	r0, #0
 80238e8:	f43f adc0 	beq.w	802346c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 80238ec:	4628      	mov	r0, r5
 80238ee:	f00d fc00 	bl	80310f2 <__cxa_guard_release>
 80238f2:	4a6a      	ldr	r2, [pc, #424]	@ (8023a9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80238f4:	497a      	ldr	r1, [pc, #488]	@ (8023ae0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x68c>)
 80238f6:	487b      	ldr	r0, [pc, #492]	@ (8023ae4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x690>)
 80238f8:	f00d fbe8 	bl	80310cc <__aeabi_atexit>
 80238fc:	e5b6      	b.n	802346c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 80238fe:	2eff      	cmp	r6, #255	@ 0xff
 8023900:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 8023904:	d018      	beq.n	8023938 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4e4>
 8023906:	2c03      	cmp	r4, #3
 8023908:	f63f ae31 	bhi.w	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802390c:	e8df f004 	tbb	[pc, r4]
 8023910:	4b525963 	.word	0x4b525963
 8023914:	2c03      	cmp	r4, #3
 8023916:	f63f ae2a 	bhi.w	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802391a:	e8df f014 	tbh	[pc, r4, lsl #1]
 802391e:	012d      	.short	0x012d
 8023920:	001b011e 	.word	0x001b011e
 8023924:	0014      	.short	0x0014
 8023926:	2c03      	cmp	r4, #3
 8023928:	f63f ae21 	bhi.w	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802392c:	e8df f014 	tbh	[pc, r4, lsl #1]
 8023930:	00f000ff 	.word	0x00f000ff
 8023934:	00af010e 	.word	0x00af010e
 8023938:	2c03      	cmp	r4, #3
 802393a:	f63f ae18 	bhi.w	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802393e:	e8df f004 	tbb	[pc, r4]
 8023942:	929c      	.short	0x929c
 8023944:	848b      	.short	0x848b
 8023946:	687b      	ldr	r3, [r7, #4]
 8023948:	4867      	ldr	r0, [pc, #412]	@ (8023ae8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x694>)
 802394a:	781b      	ldrb	r3, [r3, #0]
 802394c:	2b00      	cmp	r3, #0
 802394e:	bf18      	it	ne
 8023950:	2000      	movne	r0, #0
 8023952:	e60d      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023954:	687b      	ldr	r3, [r7, #4]
 8023956:	4865      	ldr	r0, [pc, #404]	@ (8023aec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x698>)
 8023958:	781b      	ldrb	r3, [r3, #0]
 802395a:	2b00      	cmp	r3, #0
 802395c:	bf18      	it	ne
 802395e:	2000      	movne	r0, #0
 8023960:	e606      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023962:	687b      	ldr	r3, [r7, #4]
 8023964:	781b      	ldrb	r3, [r3, #0]
 8023966:	2b01      	cmp	r3, #1
 8023968:	f000 811b 	beq.w	8023ba2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x74e>
 802396c:	f0c0 8113 	bcc.w	8023b96 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x742>
 8023970:	2b02      	cmp	r3, #2
 8023972:	f47f adfc 	bne.w	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023976:	4b5e      	ldr	r3, [pc, #376]	@ (8023af0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x69c>)
 8023978:	4a5e      	ldr	r2, [pc, #376]	@ (8023af4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 802397a:	f241 3133 	movw	r1, #4915	@ 0x1333
 802397e:	485e      	ldr	r0, [pc, #376]	@ (8023af8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023980:	f00e fd82 	bl	8032488 <__assert_func>
 8023984:	687b      	ldr	r3, [r7, #4]
 8023986:	781b      	ldrb	r3, [r3, #0]
 8023988:	2b01      	cmp	r3, #1
 802398a:	f000 8108 	beq.w	8023b9e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x74a>
 802398e:	f0c0 8104 	bcc.w	8023b9a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x746>
 8023992:	2b02      	cmp	r3, #2
 8023994:	f47f adeb 	bne.w	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023998:	4b55      	ldr	r3, [pc, #340]	@ (8023af0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x69c>)
 802399a:	4a56      	ldr	r2, [pc, #344]	@ (8023af4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 802399c:	f241 313f 	movw	r1, #4927	@ 0x133f
 80239a0:	4855      	ldr	r0, [pc, #340]	@ (8023af8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 80239a2:	f00e fd71 	bl	8032488 <__assert_func>
 80239a6:	687b      	ldr	r3, [r7, #4]
 80239a8:	4846      	ldr	r0, [pc, #280]	@ (8023ac4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 80239aa:	781b      	ldrb	r3, [r3, #0]
 80239ac:	2b00      	cmp	r3, #0
 80239ae:	bf18      	it	ne
 80239b0:	2000      	movne	r0, #0
 80239b2:	e5dd      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 80239b4:	687b      	ldr	r3, [r7, #4]
 80239b6:	483f      	ldr	r0, [pc, #252]	@ (8023ab4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 80239b8:	781b      	ldrb	r3, [r3, #0]
 80239ba:	2b00      	cmp	r3, #0
 80239bc:	bf18      	it	ne
 80239be:	2000      	movne	r0, #0
 80239c0:	e5d6      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 80239c2:	687b      	ldr	r3, [r7, #4]
 80239c4:	781b      	ldrb	r3, [r3, #0]
 80239c6:	2b00      	cmp	r3, #0
 80239c8:	f000 80ed 	beq.w	8023ba6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x752>
 80239cc:	2b01      	cmp	r3, #1
 80239ce:	4845      	ldr	r0, [pc, #276]	@ (8023ae4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x690>)
 80239d0:	bf18      	it	ne
 80239d2:	2000      	movne	r0, #0
 80239d4:	e5cc      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 80239d6:	687b      	ldr	r3, [r7, #4]
 80239d8:	781b      	ldrb	r3, [r3, #0]
 80239da:	2b00      	cmp	r3, #0
 80239dc:	f000 80e5 	beq.w	8023baa <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x756>
 80239e0:	2b01      	cmp	r3, #1
 80239e2:	483c      	ldr	r0, [pc, #240]	@ (8023ad4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x680>)
 80239e4:	bf18      	it	ne
 80239e6:	2000      	movne	r0, #0
 80239e8:	e5c2      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 80239ea:	687b      	ldr	r3, [r7, #4]
 80239ec:	4843      	ldr	r0, [pc, #268]	@ (8023afc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a8>)
 80239ee:	781b      	ldrb	r3, [r3, #0]
 80239f0:	2b00      	cmp	r3, #0
 80239f2:	bf18      	it	ne
 80239f4:	2000      	movne	r0, #0
 80239f6:	e5bb      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 80239f8:	687b      	ldr	r3, [r7, #4]
 80239fa:	4841      	ldr	r0, [pc, #260]	@ (8023b00 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6ac>)
 80239fc:	781b      	ldrb	r3, [r3, #0]
 80239fe:	2b00      	cmp	r3, #0
 8023a00:	bf18      	it	ne
 8023a02:	2000      	movne	r0, #0
 8023a04:	e5b4      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a06:	687b      	ldr	r3, [r7, #4]
 8023a08:	781b      	ldrb	r3, [r3, #0]
 8023a0a:	2b01      	cmp	r3, #1
 8023a0c:	f000 80d5 	beq.w	8023bba <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x766>
 8023a10:	f0c0 80d1 	bcc.w	8023bb6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x762>
 8023a14:	2b02      	cmp	r3, #2
 8023a16:	f47f adaa 	bne.w	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023a1a:	4b3a      	ldr	r3, [pc, #232]	@ (8023b04 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b0>)
 8023a1c:	4a35      	ldr	r2, [pc, #212]	@ (8023af4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023a1e:	f241 21d8 	movw	r1, #4824	@ 0x12d8
 8023a22:	4835      	ldr	r0, [pc, #212]	@ (8023af8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023a24:	f00e fd30 	bl	8032488 <__assert_func>
 8023a28:	687b      	ldr	r3, [r7, #4]
 8023a2a:	781b      	ldrb	r3, [r3, #0]
 8023a2c:	2b01      	cmp	r3, #1
 8023a2e:	f000 80c0 	beq.w	8023bb2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x75e>
 8023a32:	f0c0 80bc 	bcc.w	8023bae <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x75a>
 8023a36:	2b02      	cmp	r3, #2
 8023a38:	f47f ad99 	bne.w	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023a3c:	4b32      	ldr	r3, [pc, #200]	@ (8023b08 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b4>)
 8023a3e:	4a2d      	ldr	r2, [pc, #180]	@ (8023af4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023a40:	f241 21e4 	movw	r1, #4836	@ 0x12e4
 8023a44:	482c      	ldr	r0, [pc, #176]	@ (8023af8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023a46:	f00e fd1f 	bl	8032488 <__assert_func>
 8023a4a:	687b      	ldr	r3, [r7, #4]
 8023a4c:	481b      	ldr	r0, [pc, #108]	@ (8023abc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 8023a4e:	781b      	ldrb	r3, [r3, #0]
 8023a50:	2b00      	cmp	r3, #0
 8023a52:	bf18      	it	ne
 8023a54:	2000      	movne	r0, #0
 8023a56:	e58b      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a58:	687b      	ldr	r3, [r7, #4]
 8023a5a:	4814      	ldr	r0, [pc, #80]	@ (8023aac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 8023a5c:	781b      	ldrb	r3, [r3, #0]
 8023a5e:	2b00      	cmp	r3, #0
 8023a60:	bf18      	it	ne
 8023a62:	2000      	movne	r0, #0
 8023a64:	e584      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a66:	687b      	ldr	r3, [r7, #4]
 8023a68:	781b      	ldrb	r3, [r3, #0]
 8023a6a:	2b00      	cmp	r3, #0
 8023a6c:	f000 80af 	beq.w	8023bce <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x77a>
 8023a70:	2b01      	cmp	r3, #1
 8023a72:	481a      	ldr	r0, [pc, #104]	@ (8023adc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x688>)
 8023a74:	bf18      	it	ne
 8023a76:	2000      	movne	r0, #0
 8023a78:	e57a      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a7a:	687b      	ldr	r3, [r7, #4]
 8023a7c:	781b      	ldrb	r3, [r3, #0]
 8023a7e:	2b00      	cmp	r3, #0
 8023a80:	f000 80a7 	beq.w	8023bd2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x77e>
 8023a84:	2b01      	cmp	r3, #1
 8023a86:	4811      	ldr	r0, [pc, #68]	@ (8023acc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x678>)
 8023a88:	bf18      	it	ne
 8023a8a:	2000      	movne	r0, #0
 8023a8c:	e570      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a8e:	687b      	ldr	r3, [r7, #4]
 8023a90:	481e      	ldr	r0, [pc, #120]	@ (8023b0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b8>)
 8023a92:	781b      	ldrb	r3, [r3, #0]
 8023a94:	2b00      	cmp	r3, #0
 8023a96:	bf18      	it	ne
 8023a98:	2000      	movne	r0, #0
 8023a9a:	e569      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a9c:	20000000 	.word	0x20000000
 8023aa0:	08022801 	.word	0x08022801
 8023aa4:	20000214 	.word	0x20000214
 8023aa8:	08022815 	.word	0x08022815
 8023aac:	2000021c 	.word	0x2000021c
 8023ab0:	08022819 	.word	0x08022819
 8023ab4:	20000204 	.word	0x20000204
 8023ab8:	0802280d 	.word	0x0802280d
 8023abc:	2000023c 	.word	0x2000023c
 8023ac0:	08022811 	.word	0x08022811
 8023ac4:	20000230 	.word	0x20000230
 8023ac8:	08022825 	.word	0x08022825
 8023acc:	200001f8 	.word	0x200001f8
 8023ad0:	08022829 	.word	0x08022829
 8023ad4:	200001ec 	.word	0x200001ec
 8023ad8:	0802281d 	.word	0x0802281d
 8023adc:	20000224 	.word	0x20000224
 8023ae0:	08022821 	.word	0x08022821
 8023ae4:	20000210 	.word	0x20000210
 8023ae8:	20000238 	.word	0x20000238
 8023aec:	2000020c 	.word	0x2000020c
 8023af0:	08036400 	.word	0x08036400
 8023af4:	0803788c 	.word	0x0803788c
 8023af8:	08036248 	.word	0x08036248
 8023afc:	20000234 	.word	0x20000234
 8023b00:	20000208 	.word	0x20000208
 8023b04:	0803636c 	.word	0x0803636c
 8023b08:	080363b4 	.word	0x080363b4
 8023b0c:	20000240 	.word	0x20000240
 8023b10:	687b      	ldr	r3, [r7, #4]
 8023b12:	781b      	ldrb	r3, [r3, #0]
 8023b14:	2b01      	cmp	r3, #1
 8023b16:	d060      	beq.n	8023bda <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x786>
 8023b18:	d35d      	bcc.n	8023bd6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x782>
 8023b1a:	2b02      	cmp	r3, #2
 8023b1c:	f47f ad27 	bne.w	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023b20:	4b2f      	ldr	r3, [pc, #188]	@ (8023be0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023b22:	4a30      	ldr	r2, [pc, #192]	@ (8023be4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023b24:	f241 3103 	movw	r1, #4867	@ 0x1303
 8023b28:	482f      	ldr	r0, [pc, #188]	@ (8023be8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023b2a:	f00e fcad 	bl	8032488 <__assert_func>
 8023b2e:	687b      	ldr	r3, [r7, #4]
 8023b30:	781b      	ldrb	r3, [r3, #0]
 8023b32:	2b01      	cmp	r3, #1
 8023b34:	d049      	beq.n	8023bca <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x776>
 8023b36:	d346      	bcc.n	8023bc6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x772>
 8023b38:	2b02      	cmp	r3, #2
 8023b3a:	f47f ad18 	bne.w	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023b3e:	4b28      	ldr	r3, [pc, #160]	@ (8023be0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023b40:	4a28      	ldr	r2, [pc, #160]	@ (8023be4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023b42:	f241 310f 	movw	r1, #4879	@ 0x130f
 8023b46:	4828      	ldr	r0, [pc, #160]	@ (8023be8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023b48:	f00e fc9e 	bl	8032488 <__assert_func>
 8023b4c:	687b      	ldr	r3, [r7, #4]
 8023b4e:	4827      	ldr	r0, [pc, #156]	@ (8023bec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x798>)
 8023b50:	781b      	ldrb	r3, [r3, #0]
 8023b52:	2b00      	cmp	r3, #0
 8023b54:	bf18      	it	ne
 8023b56:	2000      	movne	r0, #0
 8023b58:	e50a      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023b5a:	687b      	ldr	r3, [r7, #4]
 8023b5c:	781b      	ldrb	r3, [r3, #0]
 8023b5e:	2b01      	cmp	r3, #1
 8023b60:	d02d      	beq.n	8023bbe <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76a>
 8023b62:	d318      	bcc.n	8023b96 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x742>
 8023b64:	2b02      	cmp	r3, #2
 8023b66:	f47f ad02 	bne.w	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023b6a:	4b1d      	ldr	r3, [pc, #116]	@ (8023be0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023b6c:	4a1d      	ldr	r2, [pc, #116]	@ (8023be4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023b6e:	f44f 519b 	mov.w	r1, #4960	@ 0x1360
 8023b72:	481d      	ldr	r0, [pc, #116]	@ (8023be8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023b74:	f00e fc88 	bl	8032488 <__assert_func>
 8023b78:	687b      	ldr	r3, [r7, #4]
 8023b7a:	781b      	ldrb	r3, [r3, #0]
 8023b7c:	2b01      	cmp	r3, #1
 8023b7e:	d020      	beq.n	8023bc2 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76e>
 8023b80:	d30b      	bcc.n	8023b9a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x746>
 8023b82:	2b02      	cmp	r3, #2
 8023b84:	f47f acf3 	bne.w	802356e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023b88:	4b15      	ldr	r3, [pc, #84]	@ (8023be0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023b8a:	4a16      	ldr	r2, [pc, #88]	@ (8023be4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023b8c:	f241 316c 	movw	r1, #4972	@ 0x136c
 8023b90:	4815      	ldr	r0, [pc, #84]	@ (8023be8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023b92:	f00e fc79 	bl	8032488 <__assert_func>
 8023b96:	4816      	ldr	r0, [pc, #88]	@ (8023bf0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x79c>)
 8023b98:	e4ea      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023b9a:	4816      	ldr	r0, [pc, #88]	@ (8023bf4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a0>)
 8023b9c:	e4e8      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023b9e:	4816      	ldr	r0, [pc, #88]	@ (8023bf8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a4>)
 8023ba0:	e4e6      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ba2:	4816      	ldr	r0, [pc, #88]	@ (8023bfc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a8>)
 8023ba4:	e4e4      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ba6:	4816      	ldr	r0, [pc, #88]	@ (8023c00 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7ac>)
 8023ba8:	e4e2      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023baa:	4816      	ldr	r0, [pc, #88]	@ (8023c04 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b0>)
 8023bac:	e4e0      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bae:	4816      	ldr	r0, [pc, #88]	@ (8023c08 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b4>)
 8023bb0:	e4de      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bb2:	4816      	ldr	r0, [pc, #88]	@ (8023c0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b8>)
 8023bb4:	e4dc      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bb6:	4816      	ldr	r0, [pc, #88]	@ (8023c10 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7bc>)
 8023bb8:	e4da      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bba:	4816      	ldr	r0, [pc, #88]	@ (8023c14 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c0>)
 8023bbc:	e4d8      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bbe:	4816      	ldr	r0, [pc, #88]	@ (8023c18 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c4>)
 8023bc0:	e4d6      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bc2:	4816      	ldr	r0, [pc, #88]	@ (8023c1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c8>)
 8023bc4:	e4d4      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bc6:	4809      	ldr	r0, [pc, #36]	@ (8023bec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x798>)
 8023bc8:	e4d2      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bca:	4815      	ldr	r0, [pc, #84]	@ (8023c20 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7cc>)
 8023bcc:	e4d0      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bce:	4815      	ldr	r0, [pc, #84]	@ (8023c24 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d0>)
 8023bd0:	e4ce      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bd2:	4815      	ldr	r0, [pc, #84]	@ (8023c28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d4>)
 8023bd4:	e4cc      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bd6:	4815      	ldr	r0, [pc, #84]	@ (8023c2c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d8>)
 8023bd8:	e4ca      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bda:	4815      	ldr	r0, [pc, #84]	@ (8023c30 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7dc>)
 8023bdc:	e4c8      	b.n	8023570 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bde:	bf00      	nop
 8023be0:	080363b4 	.word	0x080363b4
 8023be4:	0803788c 	.word	0x0803788c
 8023be8:	08036248 	.word	0x08036248
 8023bec:	20000220 	.word	0x20000220
 8023bf0:	20000238 	.word	0x20000238
 8023bf4:	2000020c 	.word	0x2000020c
 8023bf8:	200001f4 	.word	0x200001f4
 8023bfc:	20000218 	.word	0x20000218
 8023c00:	20000230 	.word	0x20000230
 8023c04:	20000204 	.word	0x20000204
 8023c08:	20000208 	.word	0x20000208
 8023c0c:	200001f0 	.word	0x200001f0
 8023c10:	20000234 	.word	0x20000234
 8023c14:	20000214 	.word	0x20000214
 8023c18:	2000022c 	.word	0x2000022c
 8023c1c:	20000200 	.word	0x20000200
 8023c20:	200001fc 	.word	0x200001fc
 8023c24:	2000023c 	.word	0x2000023c
 8023c28:	2000021c 	.word	0x2000021c
 8023c2c:	20000240 	.word	0x20000240
 8023c30:	20000228 	.word	0x20000228

08023c34 <_ZN8touchgfx8LCDGPU2DD0Ev>:
 8023c34:	b510      	push	{r4, lr}
 8023c36:	4604      	mov	r4, r0
 8023c38:	f44f 6105 	mov.w	r1, #2128	@ 0x850
 8023c3c:	f00d fa4b 	bl	80310d6 <_ZdlPvj>
 8023c40:	4620      	mov	r0, r4
 8023c42:	bd10      	pop	{r4, pc}

08023c44 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8023c44:	b510      	push	{r4, lr}
 8023c46:	4604      	mov	r4, r0
 8023c48:	2104      	movs	r1, #4
 8023c4a:	f00d fa44 	bl	80310d6 <_ZdlPvj>
 8023c4e:	4620      	mov	r0, r4
 8023c50:	bd10      	pop	{r4, pc}
 8023c52:	bf00      	nop

08023c54 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023c54:	b510      	push	{r4, lr}
 8023c56:	4604      	mov	r4, r0
 8023c58:	2104      	movs	r1, #4
 8023c5a:	f00d fa3c 	bl	80310d6 <_ZdlPvj>
 8023c5e:	4620      	mov	r0, r4
 8023c60:	bd10      	pop	{r4, pc}
 8023c62:	bf00      	nop

08023c64 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8023c64:	b510      	push	{r4, lr}
 8023c66:	4604      	mov	r4, r0
 8023c68:	2104      	movs	r1, #4
 8023c6a:	f00d fa34 	bl	80310d6 <_ZdlPvj>
 8023c6e:	4620      	mov	r0, r4
 8023c70:	bd10      	pop	{r4, pc}
 8023c72:	bf00      	nop

08023c74 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023c74:	b510      	push	{r4, lr}
 8023c76:	4604      	mov	r4, r0
 8023c78:	2104      	movs	r1, #4
 8023c7a:	f00d fa2c 	bl	80310d6 <_ZdlPvj>
 8023c7e:	4620      	mov	r0, r4
 8023c80:	bd10      	pop	{r4, pc}
 8023c82:	bf00      	nop

08023c84 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023c84:	b510      	push	{r4, lr}
 8023c86:	4604      	mov	r4, r0
 8023c88:	2104      	movs	r1, #4
 8023c8a:	f00d fa24 	bl	80310d6 <_ZdlPvj>
 8023c8e:	4620      	mov	r0, r4
 8023c90:	bd10      	pop	{r4, pc}
 8023c92:	bf00      	nop

08023c94 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8023c94:	b510      	push	{r4, lr}
 8023c96:	4604      	mov	r4, r0
 8023c98:	2104      	movs	r1, #4
 8023c9a:	f00d fa1c 	bl	80310d6 <_ZdlPvj>
 8023c9e:	4620      	mov	r0, r4
 8023ca0:	bd10      	pop	{r4, pc}
 8023ca2:	bf00      	nop

08023ca4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8023ca4:	b510      	push	{r4, lr}
 8023ca6:	4604      	mov	r4, r0
 8023ca8:	2104      	movs	r1, #4
 8023caa:	f00d fa14 	bl	80310d6 <_ZdlPvj>
 8023cae:	4620      	mov	r0, r4
 8023cb0:	bd10      	pop	{r4, pc}
 8023cb2:	bf00      	nop

08023cb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8023cb4:	b510      	push	{r4, lr}
 8023cb6:	4604      	mov	r4, r0
 8023cb8:	2104      	movs	r1, #4
 8023cba:	f00d fa0c 	bl	80310d6 <_ZdlPvj>
 8023cbe:	4620      	mov	r0, r4
 8023cc0:	bd10      	pop	{r4, pc}
 8023cc2:	bf00      	nop

08023cc4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8023cc4:	b510      	push	{r4, lr}
 8023cc6:	4604      	mov	r4, r0
 8023cc8:	2104      	movs	r1, #4
 8023cca:	f00d fa04 	bl	80310d6 <_ZdlPvj>
 8023cce:	4620      	mov	r0, r4
 8023cd0:	bd10      	pop	{r4, pc}
 8023cd2:	bf00      	nop

08023cd4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023cd4:	b510      	push	{r4, lr}
 8023cd6:	4604      	mov	r4, r0
 8023cd8:	2104      	movs	r1, #4
 8023cda:	f00d f9fc 	bl	80310d6 <_ZdlPvj>
 8023cde:	4620      	mov	r0, r4
 8023ce0:	bd10      	pop	{r4, pc}
 8023ce2:	bf00      	nop

08023ce4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8023ce4:	b510      	push	{r4, lr}
 8023ce6:	4604      	mov	r4, r0
 8023ce8:	2104      	movs	r1, #4
 8023cea:	f00d f9f4 	bl	80310d6 <_ZdlPvj>
 8023cee:	4620      	mov	r0, r4
 8023cf0:	bd10      	pop	{r4, pc}
 8023cf2:	bf00      	nop

08023cf4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023cf4:	b510      	push	{r4, lr}
 8023cf6:	4604      	mov	r4, r0
 8023cf8:	2104      	movs	r1, #4
 8023cfa:	f00d f9ec 	bl	80310d6 <_ZdlPvj>
 8023cfe:	4620      	mov	r0, r4
 8023d00:	bd10      	pop	{r4, pc}
 8023d02:	bf00      	nop

08023d04 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023d04:	b510      	push	{r4, lr}
 8023d06:	4604      	mov	r4, r0
 8023d08:	2104      	movs	r1, #4
 8023d0a:	f00d f9e4 	bl	80310d6 <_ZdlPvj>
 8023d0e:	4620      	mov	r0, r4
 8023d10:	bd10      	pop	{r4, pc}
 8023d12:	bf00      	nop

08023d14 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8023d14:	b510      	push	{r4, lr}
 8023d16:	4604      	mov	r4, r0
 8023d18:	2104      	movs	r1, #4
 8023d1a:	f00d f9dc 	bl	80310d6 <_ZdlPvj>
 8023d1e:	4620      	mov	r0, r4
 8023d20:	bd10      	pop	{r4, pc}
 8023d22:	bf00      	nop

08023d24 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8023d24:	b510      	push	{r4, lr}
 8023d26:	4604      	mov	r4, r0
 8023d28:	2104      	movs	r1, #4
 8023d2a:	f00d f9d4 	bl	80310d6 <_ZdlPvj>
 8023d2e:	4620      	mov	r0, r4
 8023d30:	bd10      	pop	{r4, pc}
 8023d32:	bf00      	nop

08023d34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8023d34:	b510      	push	{r4, lr}
 8023d36:	4604      	mov	r4, r0
 8023d38:	2104      	movs	r1, #4
 8023d3a:	f00d f9cc 	bl	80310d6 <_ZdlPvj>
 8023d3e:	4620      	mov	r0, r4
 8023d40:	bd10      	pop	{r4, pc}
 8023d42:	bf00      	nop

08023d44 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023d44:	b510      	push	{r4, lr}
 8023d46:	4604      	mov	r4, r0
 8023d48:	2104      	movs	r1, #4
 8023d4a:	f00d f9c4 	bl	80310d6 <_ZdlPvj>
 8023d4e:	4620      	mov	r0, r4
 8023d50:	bd10      	pop	{r4, pc}
 8023d52:	bf00      	nop

08023d54 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023d54:	b510      	push	{r4, lr}
 8023d56:	4604      	mov	r4, r0
 8023d58:	2104      	movs	r1, #4
 8023d5a:	f00d f9bc 	bl	80310d6 <_ZdlPvj>
 8023d5e:	4620      	mov	r0, r4
 8023d60:	bd10      	pop	{r4, pc}
 8023d62:	bf00      	nop

08023d64 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023d64:	b510      	push	{r4, lr}
 8023d66:	4604      	mov	r4, r0
 8023d68:	2104      	movs	r1, #4
 8023d6a:	f00d f9b4 	bl	80310d6 <_ZdlPvj>
 8023d6e:	4620      	mov	r0, r4
 8023d70:	bd10      	pop	{r4, pc}
 8023d72:	bf00      	nop

08023d74 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8023d74:	b510      	push	{r4, lr}
 8023d76:	4604      	mov	r4, r0
 8023d78:	2104      	movs	r1, #4
 8023d7a:	f00d f9ac 	bl	80310d6 <_ZdlPvj>
 8023d7e:	4620      	mov	r0, r4
 8023d80:	bd10      	pop	{r4, pc}
 8023d82:	bf00      	nop

08023d84 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8023d84:	b510      	push	{r4, lr}
 8023d86:	4604      	mov	r4, r0
 8023d88:	2104      	movs	r1, #4
 8023d8a:	f00d f9a4 	bl	80310d6 <_ZdlPvj>
 8023d8e:	4620      	mov	r0, r4
 8023d90:	bd10      	pop	{r4, pc}
 8023d92:	bf00      	nop

08023d94 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8023d94:	b510      	push	{r4, lr}
 8023d96:	4604      	mov	r4, r0
 8023d98:	2104      	movs	r1, #4
 8023d9a:	f00d f99c 	bl	80310d6 <_ZdlPvj>
 8023d9e:	4620      	mov	r0, r4
 8023da0:	bd10      	pop	{r4, pc}
 8023da2:	bf00      	nop

08023da4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>:
 8023da4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023da8:	461c      	mov	r4, r3
 8023daa:	4617      	mov	r7, r2
 8023dac:	b086      	sub	sp, #24
 8023dae:	4606      	mov	r6, r0
 8023db0:	4688      	mov	r8, r1
 8023db2:	6818      	ldr	r0, [r3, #0]
 8023db4:	6859      	ldr	r1, [r3, #4]
 8023db6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8023db8:	ad02      	add	r5, sp, #8
 8023dba:	c503      	stmia	r5!, {r0, r1}
 8023dbc:	6818      	ldr	r0, [r3, #0]
 8023dbe:	6859      	ldr	r1, [r3, #4]
 8023dc0:	ad04      	add	r5, sp, #16
 8023dc2:	c503      	stmia	r5!, {r0, r1}
 8023dc4:	a802      	add	r0, sp, #8
 8023dc6:	f89d a03c 	ldrb.w	sl, [sp, #60]	@ 0x3c
 8023dca:	f7e8 ff81 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023dce:	4621      	mov	r1, r4
 8023dd0:	a804      	add	r0, sp, #16
 8023dd2:	f7e8 ffa5 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023dd6:	2f01      	cmp	r7, #1
 8023dd8:	d05c      	beq.n	8023e94 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf0>
 8023dda:	d357      	bcc.n	8023e8c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xe8>
 8023ddc:	2f02      	cmp	r7, #2
 8023dde:	d163      	bne.n	8023ea8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x104>
 8023de0:	f04f 0910 	mov.w	r9, #16
 8023de4:	2504      	movs	r5, #4
 8023de6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8023dea:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8023dee:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8023df2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8023df6:	fb14 2403 	smlabb	r4, r4, r3, r2
 8023dfa:	4f2e      	ldr	r7, [pc, #184]	@ (8023eb4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x110>)
 8023dfc:	440a      	add	r2, r1
 8023dfe:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8023e02:	6838      	ldr	r0, [r7, #0]
 8023e04:	440b      	add	r3, r1
 8023e06:	fb05 8404 	mla	r4, r5, r4, r8
 8023e0a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8023e0e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8023e12:	2800      	cmp	r0, #0
 8023e14:	d042      	beq.n	8023e9c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf8>
 8023e16:	f7fc fea7 	bl	8020b68 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8023e1a:	6833      	ldr	r3, [r6, #0]
 8023e1c:	4630      	mov	r0, r6
 8023e1e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8023e20:	4798      	blx	r3
 8023e22:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8023e26:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8023e2a:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8023e2e:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8023e32:	f7ec ff21 	bl	8010c78 <nema_set_clip>
 8023e36:	2200      	movs	r2, #0
 8023e38:	2600      	movs	r6, #0
 8023e3a:	4611      	mov	r1, r2
 8023e3c:	4653      	mov	r3, sl
 8023e3e:	4610      	mov	r0, r2
 8023e40:	f7ec fff8 	bl	8010e34 <nema_rgba>
 8023e44:	f7fa fc7a 	bl	801e73c <nema_set_const_color>
 8023e48:	f04f 33ff 	mov.w	r3, #4294967295
 8023e4c:	2201      	movs	r2, #1
 8023e4e:	2100      	movs	r1, #0
 8023e50:	4819      	ldr	r0, [pc, #100]	@ (8023eb8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x114>)
 8023e52:	f7fa f8ad 	bl	801dfb0 <nema_set_blend>
 8023e56:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8023e5a:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 8023e5e:	fb05 f503 	mul.w	r5, r5, r3
 8023e62:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 8023e66:	464b      	mov	r3, r9
 8023e68:	4620      	mov	r0, r4
 8023e6a:	e9cd 5600 	strd	r5, r6, [sp]
 8023e6e:	f7ec ffe9 	bl	8010e44 <nema_bind_src_tex>
 8023e72:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8023e76:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8023e7a:	f7ed fa3d 	bl	80112f8 <nema_blit>
 8023e7e:	6838      	ldr	r0, [r7, #0]
 8023e80:	b160      	cbz	r0, 8023e9c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf8>
 8023e82:	f7fc fe91 	bl	8020ba8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8023e86:	b006      	add	sp, #24
 8023e88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023e8c:	f04f 0904 	mov.w	r9, #4
 8023e90:	2502      	movs	r5, #2
 8023e92:	e7a8      	b.n	8023de6 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x42>
 8023e94:	f04f 0939 	mov.w	r9, #57	@ 0x39
 8023e98:	2503      	movs	r5, #3
 8023e9a:	e7a4      	b.n	8023de6 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x42>
 8023e9c:	4b07      	ldr	r3, [pc, #28]	@ (8023ebc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x118>)
 8023e9e:	4a08      	ldr	r2, [pc, #32]	@ (8023ec0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x11c>)
 8023ea0:	217c      	movs	r1, #124	@ 0x7c
 8023ea2:	4808      	ldr	r0, [pc, #32]	@ (8023ec4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x120>)
 8023ea4:	f00e faf0 	bl	8032488 <__assert_func>
 8023ea8:	4b07      	ldr	r3, [pc, #28]	@ (8023ec8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x124>)
 8023eaa:	4a08      	ldr	r2, [pc, #32]	@ (8023ecc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x128>)
 8023eac:	21c9      	movs	r1, #201	@ 0xc9
 8023eae:	4808      	ldr	r0, [pc, #32]	@ (8023ed0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x12c>)
 8023eb0:	f00e faea 	bl	8032488 <__assert_func>
 8023eb4:	20083364 	.word	0x20083364
 8023eb8:	08000504 	.word	0x08000504
 8023ebc:	080361a4 	.word	0x080361a4
 8023ec0:	08036a10 	.word	0x08036a10
 8023ec4:	080361cc 	.word	0x080361cc
 8023ec8:	08036650 	.word	0x08036650
 8023ecc:	08037db4 	.word	0x08037db4
 8023ed0:	08036248 	.word	0x08036248

08023ed4 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>:
 8023ed4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023ed6:	680c      	ldr	r4, [r1, #0]
 8023ed8:	7805      	ldrb	r5, [r0, #0]
 8023eda:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8023ede:	7847      	ldrb	r7, [r0, #1]
 8023ee0:	7883      	ldrb	r3, [r0, #2]
 8023ee2:	d02e      	beq.n	8023f42 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19+0x6e>
 8023ee4:	fb02 f60c 	mul.w	r6, r2, ip
 8023ee8:	fb12 f303 	smulbb	r3, r2, r3
 8023eec:	1c70      	adds	r0, r6, #1
 8023eee:	fb15 f502 	smulbb	r5, r5, r2
 8023ef2:	eb00 2026 	add.w	r0, r0, r6, asr #8
 8023ef6:	1200      	asrs	r0, r0, #8
 8023ef8:	fb12 f707 	smulbb	r7, r2, r7
 8023efc:	ebac 0600 	sub.w	r6, ip, r0
 8023f00:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8023f04:	fb06 330e 	mla	r3, r6, lr, r3
 8023f08:	fa5f fe84 	uxtb.w	lr, r4
 8023f0c:	fb06 550e 	mla	r5, r6, lr, r5
 8023f10:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8023f14:	fb06 7404 	mla	r4, r6, r4, r7
 8023f18:	4462      	add	r2, ip
 8023f1a:	1a12      	subs	r2, r2, r0
 8023f1c:	b2d0      	uxtb	r0, r2
 8023f1e:	fbb3 f2f0 	udiv	r2, r3, r0
 8023f22:	fbb5 f5f0 	udiv	r5, r5, r0
 8023f26:	fbb4 f3f0 	udiv	r3, r4, r0
 8023f2a:	0412      	lsls	r2, r2, #16
 8023f2c:	b2ec      	uxtb	r4, r5
 8023f2e:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8023f32:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 8023f36:	021b      	lsls	r3, r3, #8
 8023f38:	4302      	orrs	r2, r0
 8023f3a:	b29b      	uxth	r3, r3
 8023f3c:	431a      	orrs	r2, r3
 8023f3e:	600a      	str	r2, [r1, #0]
 8023f40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023f42:	041b      	lsls	r3, r3, #16
 8023f44:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8023f48:	432a      	orrs	r2, r5
 8023f4a:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 8023f4e:	600a      	str	r2, [r1, #0]
 8023f50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023f52:	bf00      	nop

08023f54 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb>:
 8023f54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023f58:	4c1e      	ldr	r4, [pc, #120]	@ (8023fd4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x80>)
 8023f5a:	6806      	ldr	r6, [r0, #0]
 8023f5c:	6824      	ldr	r4, [r4, #0]
 8023f5e:	4605      	mov	r5, r0
 8023f60:	f894 0058 	ldrb.w	r0, [r4, #88]	@ 0x58
 8023f64:	b087      	sub	sp, #28
 8023f66:	6937      	ldr	r7, [r6, #16]
 8023f68:	4690      	mov	r8, r2
 8023f6a:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8023f6e:	f89d 903c 	ldrb.w	r9, [sp, #60]	@ 0x3c
 8023f72:	b170      	cbz	r0, 8023f92 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8023f74:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8023f76:	b160      	cbz	r0, 8023f92 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8023f78:	6804      	ldr	r4, [r0, #0]
 8023f7a:	4a17      	ldr	r2, [pc, #92]	@ (8023fd8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 8023f7c:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 8023f7e:	4294      	cmp	r4, r2
 8023f80:	d10d      	bne.n	8023f9e <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x4a>
 8023f82:	4c16      	ldr	r4, [pc, #88]	@ (8023fdc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 8023f84:	7b02      	ldrb	r2, [r0, #12]
 8023f86:	42a7      	cmp	r7, r4
 8023f88:	d112      	bne.n	8023fb0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x5c>
 8023f8a:	b9d6      	cbnz	r6, 8023fc2 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x6e>
 8023f8c:	b007      	add	sp, #28
 8023f8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023f92:	68a0      	ldr	r0, [r4, #8]
 8023f94:	4a10      	ldr	r2, [pc, #64]	@ (8023fd8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 8023f96:	6804      	ldr	r4, [r0, #0]
 8023f98:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 8023f9a:	4294      	cmp	r4, r2
 8023f9c:	d0f1      	beq.n	8023f82 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x2e>
 8023f9e:	e9cd 1304 	strd	r1, r3, [sp, #16]
 8023fa2:	47a0      	blx	r4
 8023fa4:	e9dd 1304 	ldrd	r1, r3, [sp, #16]
 8023fa8:	4c0c      	ldr	r4, [pc, #48]	@ (8023fdc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 8023faa:	4602      	mov	r2, r0
 8023fac:	42a7      	cmp	r7, r4
 8023fae:	d0ec      	beq.n	8023f8a <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x36>
 8023fb0:	9300      	str	r3, [sp, #0]
 8023fb2:	e9cd 6901 	strd	r6, r9, [sp, #4]
 8023fb6:	4643      	mov	r3, r8
 8023fb8:	4628      	mov	r0, r5
 8023fba:	47b8      	blx	r7
 8023fbc:	b007      	add	sp, #28
 8023fbe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023fc2:	e9cd 360e 	strd	r3, r6, [sp, #56]	@ 0x38
 8023fc6:	4628      	mov	r0, r5
 8023fc8:	4643      	mov	r3, r8
 8023fca:	b007      	add	sp, #28
 8023fcc:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023fd0:	f7ff bee8 	b.w	8023da4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>
 8023fd4:	20082ec4 	.word	0x20082ec4
 8023fd8:	08020c4d 	.word	0x08020c4d
 8023fdc:	08023fe1 	.word	0x08023fe1

08023fe0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8023fe0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023fe4:	b087      	sub	sp, #28
 8023fe6:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8023fea:	b915      	cbnz	r5, 8023ff2 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x12>
 8023fec:	b007      	add	sp, #28
 8023fee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023ff2:	461c      	mov	r4, r3
 8023ff4:	4617      	mov	r7, r2
 8023ff6:	4688      	mov	r8, r1
 8023ff8:	4606      	mov	r6, r0
 8023ffa:	6859      	ldr	r1, [r3, #4]
 8023ffc:	6818      	ldr	r0, [r3, #0]
 8023ffe:	ab02      	add	r3, sp, #8
 8024000:	c303      	stmia	r3!, {r0, r1}
 8024002:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8024004:	6818      	ldr	r0, [r3, #0]
 8024006:	6859      	ldr	r1, [r3, #4]
 8024008:	ab04      	add	r3, sp, #16
 802400a:	c303      	stmia	r3!, {r0, r1}
 802400c:	a802      	add	r0, sp, #8
 802400e:	f7e8 fe5f 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024012:	4621      	mov	r1, r4
 8024014:	a804      	add	r0, sp, #16
 8024016:	f7e8 fe83 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802401a:	2f01      	cmp	r7, #1
 802401c:	d05c      	beq.n	80240d8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xf8>
 802401e:	d357      	bcc.n	80240d0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xf0>
 8024020:	2f02      	cmp	r7, #2
 8024022:	d163      	bne.n	80240ec <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x10c>
 8024024:	f04f 0910 	mov.w	r9, #16
 8024028:	2404      	movs	r4, #4
 802402a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802402e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8024032:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8024036:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 802403a:	fb11 2103 	smlabb	r1, r1, r3, r2
 802403e:	4f2e      	ldr	r7, [pc, #184]	@ (80240f8 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x118>)
 8024040:	fb04 8801 	mla	r8, r4, r1, r8
 8024044:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8024048:	4402      	add	r2, r0
 802404a:	6838      	ldr	r0, [r7, #0]
 802404c:	440b      	add	r3, r1
 802404e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8024052:	f8ad 3012 	strh.w	r3, [sp, #18]
 8024056:	2800      	cmp	r0, #0
 8024058:	d042      	beq.n	80240e0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x100>
 802405a:	f7fc fd85 	bl	8020b68 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 802405e:	6833      	ldr	r3, [r6, #0]
 8024060:	4630      	mov	r0, r6
 8024062:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8024064:	4798      	blx	r3
 8024066:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 802406a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 802406e:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8024072:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8024076:	f7ec fdff 	bl	8010c78 <nema_set_clip>
 802407a:	2200      	movs	r2, #0
 802407c:	462b      	mov	r3, r5
 802407e:	2500      	movs	r5, #0
 8024080:	4611      	mov	r1, r2
 8024082:	4610      	mov	r0, r2
 8024084:	f7ec fed6 	bl	8010e34 <nema_rgba>
 8024088:	f7fa fb58 	bl	801e73c <nema_set_const_color>
 802408c:	f04f 33ff 	mov.w	r3, #4294967295
 8024090:	2201      	movs	r2, #1
 8024092:	2100      	movs	r1, #0
 8024094:	4819      	ldr	r0, [pc, #100]	@ (80240fc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x11c>)
 8024096:	f7f9 ff8b 	bl	801dfb0 <nema_set_blend>
 802409a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 802409e:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 80240a2:	fb04 f403 	mul.w	r4, r4, r3
 80240a6:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 80240aa:	464b      	mov	r3, r9
 80240ac:	4640      	mov	r0, r8
 80240ae:	e9cd 4500 	strd	r4, r5, [sp]
 80240b2:	f7ec fec7 	bl	8010e44 <nema_bind_src_tex>
 80240b6:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 80240ba:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80240be:	f7ed f91b 	bl	80112f8 <nema_blit>
 80240c2:	6838      	ldr	r0, [r7, #0]
 80240c4:	b160      	cbz	r0, 80240e0 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x100>
 80240c6:	f7fc fd6f 	bl	8020ba8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80240ca:	b007      	add	sp, #28
 80240cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80240d0:	f04f 0904 	mov.w	r9, #4
 80240d4:	2402      	movs	r4, #2
 80240d6:	e7a8      	b.n	802402a <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x4a>
 80240d8:	f04f 0939 	mov.w	r9, #57	@ 0x39
 80240dc:	2403      	movs	r4, #3
 80240de:	e7a4      	b.n	802402a <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x4a>
 80240e0:	4b07      	ldr	r3, [pc, #28]	@ (8024100 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x120>)
 80240e2:	4a08      	ldr	r2, [pc, #32]	@ (8024104 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x124>)
 80240e4:	217c      	movs	r1, #124	@ 0x7c
 80240e6:	4808      	ldr	r0, [pc, #32]	@ (8024108 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x128>)
 80240e8:	f00e f9ce 	bl	8032488 <__assert_func>
 80240ec:	4b07      	ldr	r3, [pc, #28]	@ (802410c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x12c>)
 80240ee:	4a08      	ldr	r2, [pc, #32]	@ (8024110 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x130>)
 80240f0:	21c9      	movs	r1, #201	@ 0xc9
 80240f2:	4808      	ldr	r0, [pc, #32]	@ (8024114 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x134>)
 80240f4:	f00e f9c8 	bl	8032488 <__assert_func>
 80240f8:	20083364 	.word	0x20083364
 80240fc:	08000504 	.word	0x08000504
 8024100:	080361a4 	.word	0x080361a4
 8024104:	08036a10 	.word	0x08036a10
 8024108:	080361cc 	.word	0x080361cc
 802410c:	08036650 	.word	0x08036650
 8024110:	08037db4 	.word	0x08037db4
 8024114:	08036248 	.word	0x08036248

08024118 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8024118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802411c:	4682      	mov	sl, r0
 802411e:	4851      	ldr	r0, [pc, #324]	@ (8024264 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x14c>)
 8024120:	b08f      	sub	sp, #60	@ 0x3c
 8024122:	6800      	ldr	r0, [r0, #0]
 8024124:	9104      	str	r1, [sp, #16]
 8024126:	f890 1048 	ldrb.w	r1, [r0, #72]	@ 0x48
 802412a:	f9bd 0064 	ldrsh.w	r0, [sp, #100]	@ 0x64
 802412e:	2902      	cmp	r1, #2
 8024130:	9003      	str	r0, [sp, #12]
 8024132:	f9bd 0068 	ldrsh.w	r0, [sp, #104]	@ 0x68
 8024136:	9006      	str	r0, [sp, #24]
 8024138:	f000 81cd 	beq.w	80244d6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3be>
 802413c:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802413e:	2900      	cmp	r1, #0
 8024140:	f000 81c3 	beq.w	80244ca <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3b2>
 8024144:	f9b3 5000 	ldrsh.w	r5, [r3]
 8024148:	8899      	ldrh	r1, [r3, #4]
 802414a:	b2ae      	uxth	r6, r5
 802414c:	4431      	add	r1, r6
 802414e:	b289      	uxth	r1, r1
 8024150:	fa0f fc81 	sxth.w	ip, r1
 8024154:	4565      	cmp	r5, ip
 8024156:	f9b3 4002 	ldrsh.w	r4, [r3, #2]
 802415a:	da28      	bge.n	80241ae <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 802415c:	9803      	ldr	r0, [sp, #12]
 802415e:	1830      	adds	r0, r6, r0
 8024160:	b280      	uxth	r0, r0
 8024162:	9005      	str	r0, [sp, #20]
 8024164:	f9bd e014 	ldrsh.w	lr, [sp, #20]
 8024168:	4575      	cmp	r5, lr
 802416a:	da20      	bge.n	80241ae <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 802416c:	f8b3 8006 	ldrh.w	r8, [r3, #6]
 8024170:	b2a7      	uxth	r7, r4
 8024172:	4638      	mov	r0, r7
 8024174:	4447      	add	r7, r8
 8024176:	b2bf      	uxth	r7, r7
 8024178:	fa0f f987 	sxth.w	r9, r7
 802417c:	454c      	cmp	r4, r9
 802417e:	da16      	bge.n	80241ae <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 8024180:	4680      	mov	r8, r0
 8024182:	9007      	str	r0, [sp, #28]
 8024184:	9806      	ldr	r0, [sp, #24]
 8024186:	4480      	add	r8, r0
 8024188:	fa1f f888 	uxth.w	r8, r8
 802418c:	fa0f fb88 	sxth.w	fp, r8
 8024190:	455c      	cmp	r4, fp
 8024192:	da0c      	bge.n	80241ae <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 8024194:	9805      	ldr	r0, [sp, #20]
 8024196:	45d9      	cmp	r9, fp
 8024198:	bfc8      	it	gt
 802419a:	4647      	movgt	r7, r8
 802419c:	45f4      	cmp	ip, lr
 802419e:	bfc8      	it	gt
 80241a0:	4601      	movgt	r1, r0
 80241a2:	9807      	ldr	r0, [sp, #28]
 80241a4:	1b89      	subs	r1, r1, r6
 80241a6:	1a3f      	subs	r7, r7, r0
 80241a8:	b209      	sxth	r1, r1
 80241aa:	b23f      	sxth	r7, r7
 80241ac:	e005      	b.n	80241ba <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xa2>
 80241ae:	2700      	movs	r7, #0
 80241b0:	463c      	mov	r4, r7
 80241b2:	4639      	mov	r1, r7
 80241b4:	463e      	mov	r6, r7
 80241b6:	463d      	mov	r5, r7
 80241b8:	9707      	str	r7, [sp, #28]
 80241ba:	f9b2 b000 	ldrsh.w	fp, [r2]
 80241be:	8890      	ldrh	r0, [r2, #4]
 80241c0:	4458      	add	r0, fp
 80241c2:	b280      	uxth	r0, r0
 80241c4:	fa0f fc80 	sxth.w	ip, r0
 80241c8:	45ac      	cmp	ip, r5
 80241ca:	dd51      	ble.n	8024270 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 80241cc:	4431      	add	r1, r6
 80241ce:	b289      	uxth	r1, r1
 80241d0:	fa0f fe81 	sxth.w	lr, r1
 80241d4:	45f3      	cmp	fp, lr
 80241d6:	da4b      	bge.n	8024270 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 80241d8:	f9b2 8002 	ldrsh.w	r8, [r2, #2]
 80241dc:	88d6      	ldrh	r6, [r2, #6]
 80241de:	4446      	add	r6, r8
 80241e0:	b2b6      	uxth	r6, r6
 80241e2:	fa0f f986 	sxth.w	r9, r6
 80241e6:	454c      	cmp	r4, r9
 80241e8:	da42      	bge.n	8024270 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 80241ea:	9a07      	ldr	r2, [sp, #28]
 80241ec:	443a      	add	r2, r7
 80241ee:	b297      	uxth	r7, r2
 80241f0:	b23a      	sxth	r2, r7
 80241f2:	4590      	cmp	r8, r2
 80241f4:	9205      	str	r2, [sp, #20]
 80241f6:	da3b      	bge.n	8024270 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 80241f8:	45ab      	cmp	fp, r5
 80241fa:	bfb8      	it	lt
 80241fc:	46ab      	movlt	fp, r5
 80241fe:	4544      	cmp	r4, r8
 8024200:	bfb8      	it	lt
 8024202:	4644      	movlt	r4, r8
 8024204:	45f4      	cmp	ip, lr
 8024206:	bfc8      	it	gt
 8024208:	4608      	movgt	r0, r1
 802420a:	9905      	ldr	r1, [sp, #20]
 802420c:	465a      	mov	r2, fp
 802420e:	4589      	cmp	r9, r1
 8024210:	bfc8      	it	gt
 8024212:	463e      	movgt	r6, r7
 8024214:	f8df c054 	ldr.w	ip, [pc, #84]	@ 802426c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x154>
 8024218:	4f13      	ldr	r7, [pc, #76]	@ (8024268 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x150>)
 802421a:	fa1f f58b 	uxth.w	r5, fp
 802421e:	1b36      	subs	r6, r6, r4
 8024220:	1b41      	subs	r1, r0, r5
 8024222:	f8bc c000 	ldrh.w	ip, [ip]
 8024226:	883f      	ldrh	r7, [r7, #0]
 8024228:	fa0f fb86 	sxth.w	fp, r6
 802422c:	fa0f f981 	sxth.w	r9, r1
 8024230:	2a00      	cmp	r2, #0
 8024232:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 8024236:	f8ad 2020 	strh.w	r2, [sp, #32]
 802423a:	f8ad 4022 	strh.w	r4, [sp, #34]	@ 0x22
 802423e:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 8024242:	fa0f f68c 	sxth.w	r6, ip
 8024246:	b239      	sxth	r1, r7
 8024248:	f280 812b 	bge.w	80244a2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x38a>
 802424c:	f04f 0e00 	mov.w	lr, #0
 8024250:	fa0f f980 	sxth.w	r9, r0
 8024254:	4675      	mov	r5, lr
 8024256:	4672      	mov	r2, lr
 8024258:	4648      	mov	r0, r9
 802425a:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 802425e:	f8ad e020 	strh.w	lr, [sp, #32]
 8024262:	e015      	b.n	8024290 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x178>
 8024264:	20082ec4 	.word	0x20082ec4
 8024268:	20082eba 	.word	0x20082eba
 802426c:	20082eb8 	.word	0x20082eb8
 8024270:	2200      	movs	r2, #0
 8024272:	48a3      	ldr	r0, [pc, #652]	@ (8024500 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e8>)
 8024274:	4615      	mov	r5, r2
 8024276:	f8b0 c000 	ldrh.w	ip, [r0]
 802427a:	4693      	mov	fp, r2
 802427c:	4614      	mov	r4, r2
 802427e:	4610      	mov	r0, r2
 8024280:	4691      	mov	r9, r2
 8024282:	49a0      	ldr	r1, [pc, #640]	@ (8024504 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3ec>)
 8024284:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8024288:	880f      	ldrh	r7, [r1, #0]
 802428a:	fa0f f68c 	sxth.w	r6, ip
 802428e:	b239      	sxth	r1, r7
 8024290:	1ab2      	subs	r2, r6, r2
 8024292:	4282      	cmp	r2, r0
 8024294:	da05      	bge.n	80242a2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x18a>
 8024296:	ebac 0c05 	sub.w	ip, ip, r5
 802429a:	fa0f f98c 	sxth.w	r9, ip
 802429e:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 80242a2:	2c00      	cmp	r4, #0
 80242a4:	f2c0 80e8 	blt.w	8024478 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x360>
 80242a8:	4622      	mov	r2, r4
 80242aa:	1a89      	subs	r1, r1, r2
 80242ac:	458b      	cmp	fp, r1
 80242ae:	dd04      	ble.n	80242ba <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a2>
 80242b0:	1b3f      	subs	r7, r7, r4
 80242b2:	fa0f fb87 	sxth.w	fp, r7
 80242b6:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 80242ba:	f1b9 0f00 	cmp.w	r9, #0
 80242be:	f340 80d2 	ble.w	8024466 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34e>
 80242c2:	f1bb 0f00 	cmp.w	fp, #0
 80242c6:	f340 80ce 	ble.w	8024466 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34e>
 80242ca:	2200      	movs	r2, #0
 80242cc:	8819      	ldrh	r1, [r3, #0]
 80242ce:	f8b3 8002 	ldrh.w	r8, [r3, #2]
 80242d2:	9b03      	ldr	r3, [sp, #12]
 80242d4:	1a6d      	subs	r5, r5, r1
 80242d6:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80242da:	eba4 0408 	sub.w	r4, r4, r8
 80242de:	9b06      	ldr	r3, [sp, #24]
 80242e0:	a90c      	add	r1, sp, #48	@ 0x30
 80242e2:	a80a      	add	r0, sp, #40	@ 0x28
 80242e4:	b22d      	sxth	r5, r5
 80242e6:	b224      	sxth	r4, r4
 80242e8:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80242ec:	920c      	str	r2, [sp, #48]	@ 0x30
 80242ee:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 80242f2:	f8ad b02e 	strh.w	fp, [sp, #46]	@ 0x2e
 80242f6:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 80242fa:	f8ad 402a 	strh.w	r4, [sp, #42]	@ 0x2a
 80242fe:	f7e8 fd0f 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024302:	a808      	add	r0, sp, #32
 8024304:	f7e8 fce4 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024308:	a80c      	add	r0, sp, #48	@ 0x30
 802430a:	f7e8 fce1 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802430e:	4b7e      	ldr	r3, [pc, #504]	@ (8024508 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f0>)
 8024310:	681b      	ldr	r3, [r3, #0]
 8024312:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8024316:	2a00      	cmp	r2, #0
 8024318:	f040 80ba 	bne.w	8024490 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x378>
 802431c:	6898      	ldr	r0, [r3, #8]
 802431e:	6803      	ldr	r3, [r0, #0]
 8024320:	4a7a      	ldr	r2, [pc, #488]	@ (802450c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f4>)
 8024322:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024324:	4293      	cmp	r3, r2
 8024326:	f040 80c4 	bne.w	80244b2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x39a>
 802432a:	7b00      	ldrb	r0, [r0, #12]
 802432c:	2801      	cmp	r0, #1
 802432e:	f000 80ba 	beq.w	80244a6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x38e>
 8024332:	f0c0 80b2 	bcc.w	802449a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x382>
 8024336:	2802      	cmp	r0, #2
 8024338:	f040 80da 	bne.w	80244f0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3d8>
 802433c:	2310      	movs	r3, #16
 802433e:	2604      	movs	r6, #4
 8024340:	9305      	str	r3, [sp, #20]
 8024342:	9b04      	ldr	r3, [sp, #16]
 8024344:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	@ 0x34
 8024348:	681b      	ldr	r3, [r3, #0]
 802434a:	fb06 f101 	mul.w	r1, r6, r1
 802434e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024350:	4a6f      	ldr	r2, [pc, #444]	@ (8024510 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f8>)
 8024352:	9103      	str	r1, [sp, #12]
 8024354:	4293      	cmp	r3, r2
 8024356:	f040 80ae 	bne.w	80244b6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x39e>
 802435a:	4b6e      	ldr	r3, [pc, #440]	@ (8024514 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3fc>)
 802435c:	881f      	ldrh	r7, [r3, #0]
 802435e:	2f00      	cmp	r7, #0
 8024360:	f000 80bf 	beq.w	80244e2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3ca>
 8024364:	9b04      	ldr	r3, [sp, #16]
 8024366:	7b1b      	ldrb	r3, [r3, #12]
 8024368:	2b02      	cmp	r3, #2
 802436a:	f000 80a0 	beq.w	80244ae <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x396>
 802436e:	2b01      	cmp	r3, #1
 8024370:	bf14      	ite	ne
 8024372:	2302      	movne	r3, #2
 8024374:	2303      	moveq	r3, #3
 8024376:	fb17 f703 	smulbb	r7, r7, r3
 802437a:	b2bf      	uxth	r7, r7
 802437c:	4a62      	ldr	r2, [pc, #392]	@ (8024508 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f0>)
 802437e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8024382:	6810      	ldr	r0, [r2, #0]
 8024384:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8024388:	9a03      	ldr	r2, [sp, #12]
 802438a:	fb02 3808 	mla	r8, r2, r8, r3
 802438e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8024390:	6803      	ldr	r3, [r0, #0]
 8024392:	4442      	add	r2, r8
 8024394:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024396:	9204      	str	r2, [sp, #16]
 8024398:	4798      	blx	r3
 802439a:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 802439e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80243a2:	fb07 f202 	mul.w	r2, r7, r2
 80243a6:	fb06 2303 	mla	r3, r6, r3, r2
 80243aa:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8024544 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x42c>
 80243ae:	18c3      	adds	r3, r0, r3
 80243b0:	f8d8 2000 	ldr.w	r2, [r8]
 80243b4:	9306      	str	r3, [sp, #24]
 80243b6:	2a00      	cmp	r2, #0
 80243b8:	f000 8081 	beq.w	80244be <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 80243bc:	2600      	movs	r6, #0
 80243be:	4610      	mov	r0, r2
 80243c0:	f7fc fbd2 	bl	8020b68 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80243c4:	9b03      	ldr	r3, [sp, #12]
 80243c6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80243ca:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 80243ce:	9300      	str	r3, [sp, #0]
 80243d0:	e9dd 0304 	ldrd	r0, r3, [sp, #16]
 80243d4:	f7ec fdba 	bl	8010f4c <nema_bind_dst_tex>
 80243d8:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80243dc:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80243e0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80243e4:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80243e8:	f7ec fc46 	bl	8010c78 <nema_set_clip>
 80243ec:	f04f 33ff 	mov.w	r3, #4294967295
 80243f0:	2201      	movs	r2, #1
 80243f2:	4631      	mov	r1, r6
 80243f4:	f240 5004 	movw	r0, #1284	@ 0x504
 80243f8:	f7f9 fdda 	bl	801dfb0 <nema_set_blend>
 80243fc:	e9dd 3005 	ldrd	r3, r0, [sp, #20]
 8024400:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	@ 0x26
 8024404:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	@ 0x24
 8024408:	9700      	str	r7, [sp, #0]
 802440a:	9601      	str	r6, [sp, #4]
 802440c:	f7ec fd1a 	bl	8010e44 <nema_bind_src_tex>
 8024410:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8024414:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8024418:	f7ec ff6e 	bl	80112f8 <nema_blit>
 802441c:	f8d8 0000 	ldr.w	r0, [r8]
 8024420:	2800      	cmp	r0, #0
 8024422:	d04c      	beq.n	80244be <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 8024424:	f7fc fbc0 	bl	8020ba8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8024428:	f8d8 0000 	ldr.w	r0, [r8]
 802442c:	2800      	cmp	r0, #0
 802442e:	d046      	beq.n	80244be <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 8024430:	6803      	ldr	r3, [r0, #0]
 8024432:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8024434:	4798      	blx	r3
 8024436:	f8d8 0000 	ldr.w	r0, [r8]
 802443a:	2800      	cmp	r0, #0
 802443c:	d03f      	beq.n	80244be <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 802443e:	6803      	ldr	r3, [r0, #0]
 8024440:	4637      	mov	r7, r6
 8024442:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024444:	4798      	blx	r3
 8024446:	4650      	mov	r0, sl
 8024448:	f365 060f 	bfi	r6, r5, #0, #16
 802444c:	f369 070f 	bfi	r7, r9, #0, #16
 8024450:	f364 461f 	bfi	r6, r4, #16, #16
 8024454:	f36b 471f 	bfi	r7, fp, #16, #16
 8024458:	f8ca 6000 	str.w	r6, [sl]
 802445c:	f8ca 7004 	str.w	r7, [sl, #4]
 8024460:	b00f      	add	sp, #60	@ 0x3c
 8024462:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024466:	2300      	movs	r3, #0
 8024468:	4650      	mov	r0, sl
 802446a:	f8ca 3000 	str.w	r3, [sl]
 802446e:	f8ca 3004 	str.w	r3, [sl, #4]
 8024472:	b00f      	add	sp, #60	@ 0x3c
 8024474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024478:	2000      	movs	r0, #0
 802447a:	eb0b 0604 	add.w	r6, fp, r4
 802447e:	fa0f fb86 	sxth.w	fp, r6
 8024482:	4604      	mov	r4, r0
 8024484:	4602      	mov	r2, r0
 8024486:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 802448a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 802448e:	e70c      	b.n	80242aa <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x192>
 8024490:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8024492:	2800      	cmp	r0, #0
 8024494:	f47f af43 	bne.w	802431e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x206>
 8024498:	e740      	b.n	802431c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x204>
 802449a:	2304      	movs	r3, #4
 802449c:	2602      	movs	r6, #2
 802449e:	9305      	str	r3, [sp, #20]
 80244a0:	e74f      	b.n	8024342 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22a>
 80244a2:	4648      	mov	r0, r9
 80244a4:	e6f4      	b.n	8024290 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x178>
 80244a6:	2339      	movs	r3, #57	@ 0x39
 80244a8:	2603      	movs	r6, #3
 80244aa:	9305      	str	r3, [sp, #20]
 80244ac:	e749      	b.n	8024342 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22a>
 80244ae:	2304      	movs	r3, #4
 80244b0:	e761      	b.n	8024376 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25e>
 80244b2:	4798      	blx	r3
 80244b4:	e73a      	b.n	802432c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>
 80244b6:	9804      	ldr	r0, [sp, #16]
 80244b8:	4798      	blx	r3
 80244ba:	4607      	mov	r7, r0
 80244bc:	e75e      	b.n	802437c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x264>
 80244be:	4b16      	ldr	r3, [pc, #88]	@ (8024518 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x400>)
 80244c0:	4a16      	ldr	r2, [pc, #88]	@ (802451c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x404>)
 80244c2:	217c      	movs	r1, #124	@ 0x7c
 80244c4:	4816      	ldr	r0, [pc, #88]	@ (8024520 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x408>)
 80244c6:	f00d ffdf 	bl	8032488 <__assert_func>
 80244ca:	4b16      	ldr	r3, [pc, #88]	@ (8024524 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x40c>)
 80244cc:	4a16      	ldr	r2, [pc, #88]	@ (8024528 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 80244ce:	21f9      	movs	r1, #249	@ 0xf9
 80244d0:	4816      	ldr	r0, [pc, #88]	@ (802452c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 80244d2:	f00d ffd9 	bl	8032488 <__assert_func>
 80244d6:	4b16      	ldr	r3, [pc, #88]	@ (8024530 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x418>)
 80244d8:	4a13      	ldr	r2, [pc, #76]	@ (8024528 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 80244da:	21f8      	movs	r1, #248	@ 0xf8
 80244dc:	4813      	ldr	r0, [pc, #76]	@ (802452c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 80244de:	f00d ffd3 	bl	8032488 <__assert_func>
 80244e2:	4b14      	ldr	r3, [pc, #80]	@ (8024534 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x41c>)
 80244e4:	4a14      	ldr	r2, [pc, #80]	@ (8024538 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x420>)
 80244e6:	f240 110f 	movw	r1, #271	@ 0x10f
 80244ea:	4814      	ldr	r0, [pc, #80]	@ (802453c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x424>)
 80244ec:	f00d ffcc 	bl	8032488 <__assert_func>
 80244f0:	4b13      	ldr	r3, [pc, #76]	@ (8024540 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x428>)
 80244f2:	4a0d      	ldr	r2, [pc, #52]	@ (8024528 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 80244f4:	f44f 7191 	mov.w	r1, #290	@ 0x122
 80244f8:	480c      	ldr	r0, [pc, #48]	@ (802452c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 80244fa:	f00d ffc5 	bl	8032488 <__assert_func>
 80244fe:	bf00      	nop
 8024500:	20082eb8 	.word	0x20082eb8
 8024504:	20082eba 	.word	0x20082eba
 8024508:	20082ec4 	.word	0x20082ec4
 802450c:	08020c4d 	.word	0x08020c4d
 8024510:	0802282d 	.word	0x0802282d
 8024514:	20082ebe 	.word	0x20082ebe
 8024518:	080361a4 	.word	0x080361a4
 802451c:	08036a10 	.word	0x08036a10
 8024520:	080361cc 	.word	0x080361cc
 8024524:	08036500 	.word	0x08036500
 8024528:	08037ae8 	.word	0x08037ae8
 802452c:	08036248 	.word	0x08036248
 8024530:	0803644c 	.word	0x0803644c
 8024534:	08036780 	.word	0x08036780
 8024538:	08037f44 	.word	0x08037f44
 802453c:	080367c4 	.word	0x080367c4
 8024540:	08036550 	.word	0x08036550
 8024544:	20083364 	.word	0x20083364

08024548 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8024548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802454c:	b085      	sub	sp, #20
 802454e:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8024552:	e9dd 950e 	ldrd	r9, r5, [sp, #56]	@ 0x38
 8024556:	f8bd 8040 	ldrh.w	r8, [sp, #64]	@ 0x40
 802455a:	f8bd a048 	ldrh.w	sl, [sp, #72]	@ 0x48
 802455e:	2e00      	cmp	r6, #0
 8024560:	d05b      	beq.n	802461a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 8024562:	f9b5 e004 	ldrsh.w	lr, [r5, #4]
 8024566:	f1be 0f00 	cmp.w	lr, #0
 802456a:	dd56      	ble.n	802461a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 802456c:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8024570:	f1be 0f00 	cmp.w	lr, #0
 8024574:	dd51      	ble.n	802461a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 8024576:	f3c8 0b87 	ubfx	fp, r8, #2, #8
 802457a:	f1bb 0f0b 	cmp.w	fp, #11
 802457e:	f000 815f 	beq.w	8024840 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2f8>
 8024582:	f1bb 0f0d 	cmp.w	fp, #13
 8024586:	4684      	mov	ip, r0
 8024588:	4614      	mov	r4, r2
 802458a:	461f      	mov	r7, r3
 802458c:	d03c      	beq.n	8024608 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xc0>
 802458e:	f8df a35c 	ldr.w	sl, [pc, #860]	@ 80248ec <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a4>
 8024592:	f8da 0000 	ldr.w	r0, [sl]
 8024596:	2800      	cmp	r0, #0
 8024598:	f000 8187 	beq.w	80248aa <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x362>
 802459c:	f8cd c00c 	str.w	ip, [sp, #12]
 80245a0:	f7fc fae2 	bl	8020b68 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80245a4:	9b03      	ldr	r3, [sp, #12]
 80245a6:	681a      	ldr	r2, [r3, #0]
 80245a8:	4618      	mov	r0, r3
 80245aa:	6d53      	ldr	r3, [r2, #84]	@ 0x54
 80245ac:	4798      	blx	r3
 80245ae:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80245b2:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80245b6:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80245ba:	f9b5 0000 	ldrsh.w	r0, [r5]
 80245be:	f7ec fb5b 	bl	8010c78 <nema_set_clip>
 80245c2:	2200      	movs	r2, #0
 80245c4:	4633      	mov	r3, r6
 80245c6:	4611      	mov	r1, r2
 80245c8:	4610      	mov	r0, r2
 80245ca:	f7ec fc33 	bl	8010e34 <nema_rgba>
 80245ce:	f7fa f8b5 	bl	801e73c <nema_set_const_color>
 80245d2:	f04f 33ff 	mov.w	r3, #4294967295
 80245d6:	2201      	movs	r2, #1
 80245d8:	2100      	movs	r1, #0
 80245da:	48ba      	ldr	r0, [pc, #744]	@ (80248c4 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x37c>)
 80245dc:	f7f9 fce8 	bl	801dfb0 <nema_set_blend>
 80245e0:	f1bb 0f0d 	cmp.w	fp, #13
 80245e4:	f200 8167 	bhi.w	80248b6 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80245e8:	e8df f01b 	tbh	[pc, fp, lsl #1]
 80245ec:	00c100cd 	.word	0x00c100cd
 80245f0:	016500d6 	.word	0x016500d6
 80245f4:	01650165 	.word	0x01650165
 80245f8:	01650165 	.word	0x01650165
 80245fc:	01650165 	.word	0x01650165
 8024600:	01650165 	.word	0x01650165
 8024604:	001a00ac 	.word	0x001a00ac
 8024608:	685b      	ldr	r3, [r3, #4]
 802460a:	b133      	cbz	r3, 802461a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 802460c:	781b      	ldrb	r3, [r3, #0]
 802460e:	f1a3 0216 	sub.w	r2, r3, #22
 8024612:	2a01      	cmp	r2, #1
 8024614:	d9bb      	bls.n	802458e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46>
 8024616:	2b12      	cmp	r3, #18
 8024618:	d0b9      	beq.n	802458e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46>
 802461a:	b005      	add	sp, #20
 802461c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024620:	f04f 36ff 	mov.w	r6, #4294967295
 8024624:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024628:	687b      	ldr	r3, [r7, #4]
 802462a:	6838      	ldr	r0, [r7, #0]
 802462c:	781b      	ldrb	r3, [r3, #0]
 802462e:	f008 0501 	and.w	r5, r8, #1
 8024632:	e9cd 6500 	strd	r6, r5, [sp]
 8024636:	f7ec fc05 	bl	8010e44 <nema_bind_src_tex>
 802463a:	2001      	movs	r0, #1
 802463c:	f7ed fc9e 	bl	8011f7c <nema_enable_tiling>
 8024640:	f9b9 3000 	ldrsh.w	r3, [r9]
 8024644:	edd4 7a00 	vldr	s15, [r4]
 8024648:	ee02 3a10 	vmov	s4, r3
 802464c:	f9b9 3002 	ldrsh.w	r3, [r9, #2]
 8024650:	eeb8 2ac2 	vcvt.f32.s32	s4, s4
 8024654:	ee02 3a90 	vmov	s5, r3
 8024658:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802465c:	eddf 6a9a 	vldr	s13, [pc, #616]	@ 80248c8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024660:	eef8 2ae2 	vcvt.f32.s32	s5, s5
 8024664:	edd4 7a01 	vldr	s15, [r4, #4]
 8024668:	eeb0 0a42 	vmov.f32	s0, s4
 802466c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024670:	eea7 0a26 	vfma.f32	s0, s14, s13
 8024674:	eef0 0a62 	vmov.f32	s1, s5
 8024678:	ed94 7a03 	vldr	s14, [r4, #12]
 802467c:	4b93      	ldr	r3, [pc, #588]	@ (80248cc <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x384>)
 802467e:	eee7 0aa6 	vfma.f32	s1, s15, s13
 8024682:	781b      	ldrb	r3, [r3, #0]
 8024684:	edd4 7a04 	vldr	s15, [r4, #16]
 8024688:	2b01      	cmp	r3, #1
 802468a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 802468e:	f000 808c 	beq.w	80247aa <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x262>
 8024692:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024696:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802469a:	f240 80ea 	bls.w	8024872 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32a>
 802469e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80246a2:	bf94      	ite	ls
 80246a4:	2001      	movls	r0, #1
 80246a6:	2002      	movhi	r0, #2
 80246a8:	edd4 7a05 	vldr	s15, [r4, #20]
 80246ac:	ed94 6a08 	vldr	s12, [r4, #32]
 80246b0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80246b4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80246b8:	edd4 7a06 	vldr	s15, [r4, #24]
 80246bc:	eddf 6a82 	vldr	s13, [pc, #520]	@ 80248c8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 80246c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80246c4:	eeb0 1a42 	vmov.f32	s2, s4
 80246c8:	eef0 1a62 	vmov.f32	s3, s5
 80246cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80246d0:	eee7 1aa6 	vfma.f32	s3, s15, s13
 80246d4:	eea7 1a26 	vfma.f32	s2, s14, s13
 80246d8:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 80246dc:	f240 80c1 	bls.w	8024862 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x31a>
 80246e0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80246e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80246e8:	bf94      	ite	ls
 80246ea:	2101      	movls	r1, #1
 80246ec:	2102      	movhi	r1, #2
 80246ee:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 80246f2:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 80246f6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80246fa:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80246fe:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8024702:	eddf 6a71 	vldr	s13, [pc, #452]	@ 80248c8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024706:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802470a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802470e:	eee7 2aa6 	vfma.f32	s5, s15, s13
 8024712:	eea7 2a26 	vfma.f32	s4, s14, s13
 8024716:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 802471a:	f240 809a 	bls.w	8024852 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30a>
 802471e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024722:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024726:	bf94      	ite	ls
 8024728:	2201      	movls	r2, #1
 802472a:	2202      	movhi	r2, #2
 802472c:	f7ec feda 	bl	80114e4 <nema_blit_tri_fit>
 8024730:	f8da 0000 	ldr.w	r0, [sl]
 8024734:	2800      	cmp	r0, #0
 8024736:	f000 80b8 	beq.w	80248aa <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x362>
 802473a:	b005      	add	sp, #20
 802473c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024740:	f7fc ba32 	b.w	8020ba8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8024744:	4a62      	ldr	r2, [pc, #392]	@ (80248d0 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x388>)
 8024746:	23ff      	movs	r3, #255	@ 0xff
 8024748:	6810      	ldr	r0, [r2, #0]
 802474a:	f008 0501 	and.w	r5, r8, #1
 802474e:	b2c2      	uxtb	r2, r0
 8024750:	f3c0 2107 	ubfx	r1, r0, #8, #8
 8024754:	f3c0 4007 	ubfx	r0, r0, #16, #8
 8024758:	f7ec fb6c 	bl	8010e34 <nema_rgba>
 802475c:	f7ec fa80 	bl	8010c60 <nema_set_tex_color>
 8024760:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024764:	6838      	ldr	r0, [r7, #0]
 8024766:	2329      	movs	r3, #41	@ 0x29
 8024768:	f04f 36ff 	mov.w	r6, #4294967295
 802476c:	e761      	b.n	8024632 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 802476e:	2339      	movs	r3, #57	@ 0x39
 8024770:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024774:	f04f 0c03 	mov.w	ip, #3
 8024778:	6838      	ldr	r0, [r7, #0]
 802477a:	f008 0501 	and.w	r5, r8, #1
 802477e:	693e      	ldr	r6, [r7, #16]
 8024780:	fb06 f60c 	mul.w	r6, r6, ip
 8024784:	e755      	b.n	8024632 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 8024786:	f008 0501 	and.w	r5, r8, #1
 802478a:	6838      	ldr	r0, [r7, #0]
 802478c:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024790:	2304      	movs	r3, #4
 8024792:	f04f 0c02 	mov.w	ip, #2
 8024796:	e7f2      	b.n	802477e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x236>
 8024798:	2310      	movs	r3, #16
 802479a:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 802479e:	f04f 0c04 	mov.w	ip, #4
 80247a2:	6838      	ldr	r0, [r7, #0]
 80247a4:	f008 0501 	and.w	r5, r8, #1
 80247a8:	e7e9      	b.n	802477e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x236>
 80247aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80247ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80247b2:	d974      	bls.n	802489e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x356>
 80247b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80247b8:	bf94      	ite	ls
 80247ba:	2002      	movls	r0, #2
 80247bc:	2003      	movhi	r0, #3
 80247be:	edd4 7a05 	vldr	s15, [r4, #20]
 80247c2:	ed94 6a08 	vldr	s12, [r4, #32]
 80247c6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80247ca:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80247ce:	edd4 7a06 	vldr	s15, [r4, #24]
 80247d2:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 80248c8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 80247d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80247da:	eeb0 1a42 	vmov.f32	s2, s4
 80247de:	eef0 1a62 	vmov.f32	s3, s5
 80247e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80247e6:	eee7 1aa6 	vfma.f32	s3, s15, s13
 80247ea:	eea7 1a26 	vfma.f32	s2, s14, s13
 80247ee:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 80247f2:	d94c      	bls.n	802488e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x346>
 80247f4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80247f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80247fc:	bf94      	ite	ls
 80247fe:	2102      	movls	r1, #2
 8024800:	2103      	movhi	r1, #3
 8024802:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 8024806:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 802480a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802480e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8024812:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8024816:	eddf 6a2c 	vldr	s13, [pc, #176]	@ 80248c8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 802481a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802481e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024822:	eee7 2aa6 	vfma.f32	s5, s15, s13
 8024826:	eea7 2a26 	vfma.f32	s4, s14, s13
 802482a:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 802482e:	d926      	bls.n	802487e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8024830:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024834:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024838:	bf94      	ite	ls
 802483a:	2202      	movls	r2, #2
 802483c:	2203      	movhi	r2, #3
 802483e:	e775      	b.n	802472c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 8024840:	e9cd 6a11 	strd	r6, sl, [sp, #68]	@ 0x44
 8024844:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 8024848:	b005      	add	sp, #20
 802484a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802484e:	f7e7 bcef 	b.w	800c230 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 8024852:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024856:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802485a:	bf94      	ite	ls
 802485c:	2200      	movls	r2, #0
 802485e:	2203      	movhi	r2, #3
 8024860:	e764      	b.n	802472c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 8024862:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024866:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802486a:	bf94      	ite	ls
 802486c:	2100      	movls	r1, #0
 802486e:	2103      	movhi	r1, #3
 8024870:	e73d      	b.n	80246ee <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a6>
 8024872:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024876:	bf94      	ite	ls
 8024878:	2000      	movls	r0, #0
 802487a:	2003      	movhi	r0, #3
 802487c:	e714      	b.n	80246a8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x160>
 802487e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024882:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024886:	bf94      	ite	ls
 8024888:	2201      	movls	r2, #1
 802488a:	2200      	movhi	r2, #0
 802488c:	e74e      	b.n	802472c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 802488e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024896:	bf94      	ite	ls
 8024898:	2101      	movls	r1, #1
 802489a:	2100      	movhi	r1, #0
 802489c:	e7b1      	b.n	8024802 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2ba>
 802489e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248a2:	bf94      	ite	ls
 80248a4:	2001      	movls	r0, #1
 80248a6:	2000      	movhi	r0, #0
 80248a8:	e789      	b.n	80247be <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x276>
 80248aa:	4b0a      	ldr	r3, [pc, #40]	@ (80248d4 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x38c>)
 80248ac:	4a0a      	ldr	r2, [pc, #40]	@ (80248d8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x390>)
 80248ae:	217c      	movs	r1, #124	@ 0x7c
 80248b0:	480a      	ldr	r0, [pc, #40]	@ (80248dc <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x394>)
 80248b2:	f00d fde9 	bl	8032488 <__assert_func>
 80248b6:	4b0a      	ldr	r3, [pc, #40]	@ (80248e0 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x398>)
 80248b8:	4a0a      	ldr	r2, [pc, #40]	@ (80248e4 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x39c>)
 80248ba:	f240 21e2 	movw	r1, #738	@ 0x2e2
 80248be:	480a      	ldr	r0, [pc, #40]	@ (80248e8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a0>)
 80248c0:	f00d fde2 	bl	8032488 <__assert_func>
 80248c4:	08000504 	.word	0x08000504
 80248c8:	3d800000 	.word	0x3d800000
 80248cc:	20082ebc 	.word	0x20082ebc
 80248d0:	20082ecc 	.word	0x20082ecc
 80248d4:	080361a4 	.word	0x080361a4
 80248d8:	08036a10 	.word	0x08036a10
 80248dc:	080361cc 	.word	0x080361cc
 80248e0:	0803609c 	.word	0x0803609c
 80248e4:	08036db4 	.word	0x08036db4
 80248e8:	08036248 	.word	0x08036248
 80248ec:	20083364 	.word	0x20083364

080248f0 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80248f0:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 80248f4:	2700      	movs	r7, #0
 80248f6:	4a2b      	ldr	r2, [pc, #172]	@ (80249a4 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb4>)
 80248f8:	4b2b      	ldr	r3, [pc, #172]	@ (80249a8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb8>)
 80248fa:	4d2c      	ldr	r5, [pc, #176]	@ (80249ac <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xbc>)
 80248fc:	8812      	ldrh	r2, [r2, #0]
 80248fe:	881b      	ldrh	r3, [r3, #0]
 8024900:	b088      	sub	sp, #32
 8024902:	4604      	mov	r4, r0
 8024904:	6828      	ldr	r0, [r5, #0]
 8024906:	f8ad 201c 	strh.w	r2, [sp, #28]
 802490a:	f8ad 301e 	strh.w	r3, [sp, #30]
 802490e:	9706      	str	r7, [sp, #24]
 8024910:	6803      	ldr	r3, [r0, #0]
 8024912:	4689      	mov	r9, r1
 8024914:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024916:	4798      	blx	r3
 8024918:	6823      	ldr	r3, [r4, #0]
 802491a:	4a25      	ldr	r2, [pc, #148]	@ (80249b0 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc0>)
 802491c:	68de      	ldr	r6, [r3, #12]
 802491e:	4601      	mov	r1, r0
 8024920:	4296      	cmp	r6, r2
 8024922:	d134      	bne.n	802498e <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x9e>
 8024924:	682a      	ldr	r2, [r5, #0]
 8024926:	691d      	ldr	r5, [r3, #16]
 8024928:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 802492c:	b9a3      	cbnz	r3, 8024958 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x68>
 802492e:	6890      	ldr	r0, [r2, #8]
 8024930:	4a20      	ldr	r2, [pc, #128]	@ (80249b4 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 8024932:	6803      	ldr	r3, [r0, #0]
 8024934:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024936:	4293      	cmp	r3, r2
 8024938:	d116      	bne.n	8024968 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x78>
 802493a:	4b1f      	ldr	r3, [pc, #124]	@ (80249b8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 802493c:	7b02      	ldrb	r2, [r0, #12]
 802493e:	429d      	cmp	r5, r3
 8024940:	d119      	bne.n	8024976 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x86>
 8024942:	23ff      	movs	r3, #255	@ 0xff
 8024944:	f8cd 9000 	str.w	r9, [sp]
 8024948:	9301      	str	r3, [sp, #4]
 802494a:	4620      	mov	r0, r4
 802494c:	ab06      	add	r3, sp, #24
 802494e:	f7ff fa29 	bl	8023da4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>
 8024952:	b008      	add	sp, #32
 8024954:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 8024958:	6cd0      	ldr	r0, [r2, #76]	@ 0x4c
 802495a:	2800      	cmp	r0, #0
 802495c:	d0e7      	beq.n	802492e <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x3e>
 802495e:	6803      	ldr	r3, [r0, #0]
 8024960:	4a14      	ldr	r2, [pc, #80]	@ (80249b4 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 8024962:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024964:	4293      	cmp	r3, r2
 8024966:	d0e8      	beq.n	802493a <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x4a>
 8024968:	9105      	str	r1, [sp, #20]
 802496a:	4798      	blx	r3
 802496c:	4b12      	ldr	r3, [pc, #72]	@ (80249b8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 802496e:	4602      	mov	r2, r0
 8024970:	429d      	cmp	r5, r3
 8024972:	9905      	ldr	r1, [sp, #20]
 8024974:	d0e5      	beq.n	8024942 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x52>
 8024976:	2600      	movs	r6, #0
 8024978:	23ff      	movs	r3, #255	@ 0xff
 802497a:	f8cd 9000 	str.w	r9, [sp]
 802497e:	e9cd 3601 	strd	r3, r6, [sp, #4]
 8024982:	4620      	mov	r0, r4
 8024984:	ab06      	add	r3, sp, #24
 8024986:	47a8      	blx	r5
 8024988:	b008      	add	sp, #32
 802498a:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 802498e:	22ff      	movs	r2, #255	@ 0xff
 8024990:	9701      	str	r7, [sp, #4]
 8024992:	9200      	str	r2, [sp, #0]
 8024994:	464b      	mov	r3, r9
 8024996:	4620      	mov	r0, r4
 8024998:	aa06      	add	r2, sp, #24
 802499a:	47b0      	blx	r6
 802499c:	b008      	add	sp, #32
 802499e:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 80249a2:	bf00      	nop
 80249a4:	20082ebe 	.word	0x20082ebe
 80249a8:	20082ec0 	.word	0x20082ec0
 80249ac:	20082ec4 	.word	0x20082ec4
 80249b0:	08023f55 	.word	0x08023f55
 80249b4:	08020c4d 	.word	0x08020c4d
 80249b8:	08023fe1 	.word	0x08023fe1

080249bc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80249bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80249c0:	4604      	mov	r4, r0
 80249c2:	4865      	ldr	r0, [pc, #404]	@ (8024b58 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x19c>)
 80249c4:	460f      	mov	r7, r1
 80249c6:	6800      	ldr	r0, [r0, #0]
 80249c8:	b093      	sub	sp, #76	@ 0x4c
 80249ca:	f890 1048 	ldrb.w	r1, [r0, #72]	@ 0x48
 80249ce:	2902      	cmp	r1, #2
 80249d0:	f000 81f2 	beq.w	8024db8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3fc>
 80249d4:	f10d 0948 	add.w	r9, sp, #72	@ 0x48
 80249d8:	f829 3d1c 	strh.w	r3, [r9, #-28]!
 80249dc:	4648      	mov	r0, r9
 80249de:	4615      	mov	r5, r2
 80249e0:	f7eb fbee 	bl	80101c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80249e4:	6823      	ldr	r3, [r4, #0]
 80249e6:	4a5d      	ldr	r2, [pc, #372]	@ (8024b5c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a0>)
 80249e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80249ea:	4680      	mov	r8, r0
 80249ec:	4293      	cmp	r3, r2
 80249ee:	f040 81b5 	bne.w	8024d5c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3a0>
 80249f2:	7b20      	ldrb	r0, [r4, #12]
 80249f4:	4580      	cmp	r8, r0
 80249f6:	f040 81d9 	bne.w	8024dac <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3f0>
 80249fa:	4648      	mov	r0, r9
 80249fc:	f7eb fb5c 	bl	80100b8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8024a00:	4683      	mov	fp, r0
 8024a02:	2800      	cmp	r0, #0
 8024a04:	f000 81cc 	beq.w	8024da0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3e4>
 8024a08:	6823      	ldr	r3, [r4, #0]
 8024a0a:	4648      	mov	r0, r9
 8024a0c:	f8d3 8018 	ldr.w	r8, [r3, #24]
 8024a10:	f7eb fa98 	bl	800ff44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8024a14:	9005      	str	r0, [sp, #20]
 8024a16:	4648      	mov	r0, r9
 8024a18:	f7eb fac8 	bl	800ffac <_ZNK8touchgfx6Bitmap9getHeightEv>
 8024a1c:	4b50      	ldr	r3, [pc, #320]	@ (8024b60 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a4>)
 8024a1e:	9006      	str	r0, [sp, #24]
 8024a20:	4598      	cmp	r8, r3
 8024a22:	f040 818e 	bne.w	8024d42 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x386>
 8024a26:	4b4c      	ldr	r3, [pc, #304]	@ (8024b58 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x19c>)
 8024a28:	681b      	ldr	r3, [r3, #0]
 8024a2a:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8024a2e:	2b02      	cmp	r3, #2
 8024a30:	f000 81c8 	beq.w	8024dc4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x408>
 8024a34:	f9b5 8000 	ldrsh.w	r8, [r5]
 8024a38:	88ab      	ldrh	r3, [r5, #4]
 8024a3a:	fa1f fe88 	uxth.w	lr, r8
 8024a3e:	4473      	add	r3, lr
 8024a40:	b29b      	uxth	r3, r3
 8024a42:	b218      	sxth	r0, r3
 8024a44:	4580      	cmp	r8, r0
 8024a46:	f9b5 a002 	ldrsh.w	sl, [r5, #2]
 8024a4a:	da2a      	bge.n	8024aa2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024a4c:	9a05      	ldr	r2, [sp, #20]
 8024a4e:	eb0e 0102 	add.w	r1, lr, r2
 8024a52:	b28a      	uxth	r2, r1
 8024a54:	9207      	str	r2, [sp, #28]
 8024a56:	f9bd c01c 	ldrsh.w	ip, [sp, #28]
 8024a5a:	45e0      	cmp	r8, ip
 8024a5c:	da21      	bge.n	8024aa2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024a5e:	88ea      	ldrh	r2, [r5, #6]
 8024a60:	fa1f f68a 	uxth.w	r6, sl
 8024a64:	4432      	add	r2, r6
 8024a66:	b292      	uxth	r2, r2
 8024a68:	b211      	sxth	r1, r2
 8024a6a:	458a      	cmp	sl, r1
 8024a6c:	9108      	str	r1, [sp, #32]
 8024a6e:	da18      	bge.n	8024aa2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024a70:	9906      	ldr	r1, [sp, #24]
 8024a72:	eb06 0901 	add.w	r9, r6, r1
 8024a76:	fa1f f989 	uxth.w	r9, r9
 8024a7a:	fa0f f189 	sxth.w	r1, r9
 8024a7e:	458a      	cmp	sl, r1
 8024a80:	9109      	str	r1, [sp, #36]	@ 0x24
 8024a82:	da0e      	bge.n	8024aa2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024a84:	9907      	ldr	r1, [sp, #28]
 8024a86:	4560      	cmp	r0, ip
 8024a88:	bfc8      	it	gt
 8024a8a:	460b      	movgt	r3, r1
 8024a8c:	e9dd 1008 	ldrd	r1, r0, [sp, #32]
 8024a90:	4281      	cmp	r1, r0
 8024a92:	bfc8      	it	gt
 8024a94:	464a      	movgt	r2, r9
 8024a96:	eba3 030e 	sub.w	r3, r3, lr
 8024a9a:	1b92      	subs	r2, r2, r6
 8024a9c:	b21b      	sxth	r3, r3
 8024a9e:	b212      	sxth	r2, r2
 8024aa0:	e005      	b.n	8024aae <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xf2>
 8024aa2:	2200      	movs	r2, #0
 8024aa4:	4616      	mov	r6, r2
 8024aa6:	4692      	mov	sl, r2
 8024aa8:	4613      	mov	r3, r2
 8024aaa:	4696      	mov	lr, r2
 8024aac:	4690      	mov	r8, r2
 8024aae:	f9b7 0000 	ldrsh.w	r0, [r7]
 8024ab2:	88b9      	ldrh	r1, [r7, #4]
 8024ab4:	4401      	add	r1, r0
 8024ab6:	b289      	uxth	r1, r1
 8024ab8:	fa0f f981 	sxth.w	r9, r1
 8024abc:	45c8      	cmp	r8, r9
 8024abe:	da55      	bge.n	8024b6c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024ac0:	449e      	add	lr, r3
 8024ac2:	fa1f fe8e 	uxth.w	lr, lr
 8024ac6:	fa0f f38e 	sxth.w	r3, lr
 8024aca:	4298      	cmp	r0, r3
 8024acc:	9307      	str	r3, [sp, #28]
 8024ace:	da4d      	bge.n	8024b6c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024ad0:	f9b7 c002 	ldrsh.w	ip, [r7, #2]
 8024ad4:	88fb      	ldrh	r3, [r7, #6]
 8024ad6:	4463      	add	r3, ip
 8024ad8:	b29b      	uxth	r3, r3
 8024ada:	b21f      	sxth	r7, r3
 8024adc:	45ba      	cmp	sl, r7
 8024ade:	da45      	bge.n	8024b6c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024ae0:	4416      	add	r6, r2
 8024ae2:	b2b2      	uxth	r2, r6
 8024ae4:	b216      	sxth	r6, r2
 8024ae6:	45b4      	cmp	ip, r6
 8024ae8:	9608      	str	r6, [sp, #32]
 8024aea:	da3f      	bge.n	8024b6c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024aec:	4540      	cmp	r0, r8
 8024aee:	9e07      	ldr	r6, [sp, #28]
 8024af0:	bfb8      	it	lt
 8024af2:	4640      	movlt	r0, r8
 8024af4:	45d4      	cmp	ip, sl
 8024af6:	bfb8      	it	lt
 8024af8:	46d4      	movlt	ip, sl
 8024afa:	45b1      	cmp	r9, r6
 8024afc:	bfc8      	it	gt
 8024afe:	4671      	movgt	r1, lr
 8024b00:	9e08      	ldr	r6, [sp, #32]
 8024b02:	f8df 8060 	ldr.w	r8, [pc, #96]	@ 8024b64 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a8>
 8024b06:	42b7      	cmp	r7, r6
 8024b08:	bfc8      	it	gt
 8024b0a:	4613      	movgt	r3, r2
 8024b0c:	f8df e058 	ldr.w	lr, [pc, #88]	@ 8024b68 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ac>
 8024b10:	b282      	uxth	r2, r0
 8024b12:	eba3 030c 	sub.w	r3, r3, ip
 8024b16:	1a8f      	subs	r7, r1, r2
 8024b18:	f8b8 a000 	ldrh.w	sl, [r8]
 8024b1c:	f8be 9000 	ldrh.w	r9, [lr]
 8024b20:	b21b      	sxth	r3, r3
 8024b22:	b23f      	sxth	r7, r7
 8024b24:	2800      	cmp	r0, #0
 8024b26:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024b2a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8024b2e:	f8ad c032 	strh.w	ip, [sp, #50]	@ 0x32
 8024b32:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024b36:	fa0f f88a 	sxth.w	r8, sl
 8024b3a:	fa0f fe89 	sxth.w	lr, r9
 8024b3e:	f280 8115 	bge.w	8024d6c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3b0>
 8024b42:	2200      	movs	r2, #0
 8024b44:	f04f 0600 	mov.w	r6, #0
 8024b48:	b20f      	sxth	r7, r1
 8024b4a:	4610      	mov	r0, r2
 8024b4c:	4639      	mov	r1, r7
 8024b4e:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024b52:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 8024b56:	e01b      	b.n	8024b90 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1d4>
 8024b58:	20082ec4 	.word	0x20082ec4
 8024b5c:	08020c4d 	.word	0x08020c4d
 8024b60:	08024119 	.word	0x08024119
 8024b64:	20082eb8 	.word	0x20082eb8
 8024b68:	20082eba 	.word	0x20082eba
 8024b6c:	2300      	movs	r3, #0
 8024b6e:	489f      	ldr	r0, [pc, #636]	@ (8024dec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x430>)
 8024b70:	499f      	ldr	r1, [pc, #636]	@ (8024df0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x434>)
 8024b72:	f8b0 a000 	ldrh.w	sl, [r0]
 8024b76:	f8b1 9000 	ldrh.w	r9, [r1]
 8024b7a:	461a      	mov	r2, r3
 8024b7c:	469c      	mov	ip, r3
 8024b7e:	4618      	mov	r0, r3
 8024b80:	4619      	mov	r1, r3
 8024b82:	461f      	mov	r7, r3
 8024b84:	e9cd 330c 	strd	r3, r3, [sp, #48]	@ 0x30
 8024b88:	fa0f f88a 	sxth.w	r8, sl
 8024b8c:	fa0f fe89 	sxth.w	lr, r9
 8024b90:	eba8 0000 	sub.w	r0, r8, r0
 8024b94:	4288      	cmp	r0, r1
 8024b96:	da04      	bge.n	8024ba2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1e6>
 8024b98:	ebaa 0702 	sub.w	r7, sl, r2
 8024b9c:	b23f      	sxth	r7, r7
 8024b9e:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024ba2:	f1bc 0f00 	cmp.w	ip, #0
 8024ba6:	f2c0 80c2 	blt.w	8024d2e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x372>
 8024baa:	4661      	mov	r1, ip
 8024bac:	ebae 0e01 	sub.w	lr, lr, r1
 8024bb0:	4573      	cmp	r3, lr
 8024bb2:	dd04      	ble.n	8024bbe <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x202>
 8024bb4:	eba9 030c 	sub.w	r3, r9, ip
 8024bb8:	b21b      	sxth	r3, r3
 8024bba:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024bbe:	2f00      	cmp	r7, #0
 8024bc0:	f340 80b1 	ble.w	8024d26 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x36a>
 8024bc4:	2b00      	cmp	r3, #0
 8024bc6:	f340 80ae 	ble.w	8024d26 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x36a>
 8024bca:	f04f 0e00 	mov.w	lr, #0
 8024bce:	f8ad 303e 	strh.w	r3, [sp, #62]	@ 0x3e
 8024bd2:	9b05      	ldr	r3, [sp, #20]
 8024bd4:	8868      	ldrh	r0, [r5, #2]
 8024bd6:	8829      	ldrh	r1, [r5, #0]
 8024bd8:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8024bdc:	9b06      	ldr	r3, [sp, #24]
 8024bde:	1a52      	subs	r2, r2, r1
 8024be0:	ebac 0c00 	sub.w	ip, ip, r0
 8024be4:	a910      	add	r1, sp, #64	@ 0x40
 8024be6:	a80e      	add	r0, sp, #56	@ 0x38
 8024be8:	f8ad 3046 	strh.w	r3, [sp, #70]	@ 0x46
 8024bec:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8024bf0:	f8ad c03a 	strh.w	ip, [sp, #58]	@ 0x3a
 8024bf4:	f8cd e040 	str.w	lr, [sp, #64]	@ 0x40
 8024bf8:	f8ad 703c 	strh.w	r7, [sp, #60]	@ 0x3c
 8024bfc:	f7e8 f890 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024c00:	a80c      	add	r0, sp, #48	@ 0x30
 8024c02:	f7e8 f865 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024c06:	a810      	add	r0, sp, #64	@ 0x40
 8024c08:	f7e8 f862 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024c0c:	4b79      	ldr	r3, [pc, #484]	@ (8024df4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x438>)
 8024c0e:	681b      	ldr	r3, [r3, #0]
 8024c10:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8024c14:	2a00      	cmp	r2, #0
 8024c16:	f040 80a4 	bne.w	8024d62 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3a6>
 8024c1a:	6898      	ldr	r0, [r3, #8]
 8024c1c:	6803      	ldr	r3, [r0, #0]
 8024c1e:	4a76      	ldr	r2, [pc, #472]	@ (8024df8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x43c>)
 8024c20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024c22:	4293      	cmp	r3, r2
 8024c24:	f040 80b0 	bne.w	8024d88 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3cc>
 8024c28:	7b00      	ldrb	r0, [r0, #12]
 8024c2a:	2801      	cmp	r0, #1
 8024c2c:	f000 80a5 	beq.w	8024d7a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3be>
 8024c30:	f0c0 809e 	bcc.w	8024d70 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3b4>
 8024c34:	2802      	cmp	r0, #2
 8024c36:	f040 80d2 	bne.w	8024dde <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x422>
 8024c3a:	f04f 0810 	mov.w	r8, #16
 8024c3e:	f04f 0a04 	mov.w	sl, #4
 8024c42:	6823      	ldr	r3, [r4, #0]
 8024c44:	4a6d      	ldr	r2, [pc, #436]	@ (8024dfc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x440>)
 8024c46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024c48:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	@ 0x44
 8024c4c:	4293      	cmp	r3, r2
 8024c4e:	fb0a f707 	mul.w	r7, sl, r7
 8024c52:	f040 809b 	bne.w	8024d8c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d0>
 8024c56:	4b6a      	ldr	r3, [pc, #424]	@ (8024e00 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x444>)
 8024c58:	881b      	ldrh	r3, [r3, #0]
 8024c5a:	2b00      	cmp	r3, #0
 8024c5c:	f000 80b8 	beq.w	8024dd0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x414>
 8024c60:	7b22      	ldrb	r2, [r4, #12]
 8024c62:	2a02      	cmp	r2, #2
 8024c64:	f000 808e 	beq.w	8024d84 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3c8>
 8024c68:	2a01      	cmp	r2, #1
 8024c6a:	bf14      	ite	ne
 8024c6c:	2402      	movne	r4, #2
 8024c6e:	2403      	moveq	r4, #3
 8024c70:	fb13 f404 	smulbb	r4, r3, r4
 8024c74:	b2a4      	uxth	r4, r4
 8024c76:	4a5f      	ldr	r2, [pc, #380]	@ (8024df4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x438>)
 8024c78:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8024c7c:	f9bd 903a 	ldrsh.w	r9, [sp, #58]	@ 0x3a
 8024c80:	6810      	ldr	r0, [r2, #0]
 8024c82:	fb07 3909 	mla	r9, r7, r9, r3
 8024c86:	6803      	ldr	r3, [r0, #0]
 8024c88:	4e5e      	ldr	r6, [pc, #376]	@ (8024e04 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x448>)
 8024c8a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024c8c:	4798      	blx	r3
 8024c8e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8024c92:	f9bd 5030 	ldrsh.w	r5, [sp, #48]	@ 0x30
 8024c96:	fb04 f303 	mul.w	r3, r4, r3
 8024c9a:	fb0a 3505 	mla	r5, sl, r5, r3
 8024c9e:	4405      	add	r5, r0
 8024ca0:	6830      	ldr	r0, [r6, #0]
 8024ca2:	44d9      	add	r9, fp
 8024ca4:	2800      	cmp	r0, #0
 8024ca6:	d075      	beq.n	8024d94 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024ca8:	f7fb ff5e 	bl	8020b68 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8024cac:	9700      	str	r7, [sp, #0]
 8024cae:	2700      	movs	r7, #0
 8024cb0:	f9bd 203e 	ldrsh.w	r2, [sp, #62]	@ 0x3e
 8024cb4:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8024cb8:	4648      	mov	r0, r9
 8024cba:	4643      	mov	r3, r8
 8024cbc:	f7ec f946 	bl	8010f4c <nema_bind_dst_tex>
 8024cc0:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8024cc4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8024cc8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8024ccc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8024cd0:	f7eb ffd2 	bl	8010c78 <nema_set_clip>
 8024cd4:	f04f 33ff 	mov.w	r3, #4294967295
 8024cd8:	2201      	movs	r2, #1
 8024cda:	2100      	movs	r1, #0
 8024cdc:	f240 5004 	movw	r0, #1284	@ 0x504
 8024ce0:	f7f9 f966 	bl	801dfb0 <nema_set_blend>
 8024ce4:	f9bd 2036 	ldrsh.w	r2, [sp, #54]	@ 0x36
 8024ce8:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	@ 0x34
 8024cec:	4643      	mov	r3, r8
 8024cee:	4628      	mov	r0, r5
 8024cf0:	9400      	str	r4, [sp, #0]
 8024cf2:	9701      	str	r7, [sp, #4]
 8024cf4:	f7ec f8a6 	bl	8010e44 <nema_bind_src_tex>
 8024cf8:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8024cfc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8024d00:	f7ec fafa 	bl	80112f8 <nema_blit>
 8024d04:	6830      	ldr	r0, [r6, #0]
 8024d06:	2800      	cmp	r0, #0
 8024d08:	d044      	beq.n	8024d94 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024d0a:	f7fb ff4d 	bl	8020ba8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8024d0e:	6830      	ldr	r0, [r6, #0]
 8024d10:	2800      	cmp	r0, #0
 8024d12:	d03f      	beq.n	8024d94 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024d14:	6803      	ldr	r3, [r0, #0]
 8024d16:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8024d18:	4798      	blx	r3
 8024d1a:	6830      	ldr	r0, [r6, #0]
 8024d1c:	2800      	cmp	r0, #0
 8024d1e:	d039      	beq.n	8024d94 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024d20:	6803      	ldr	r3, [r0, #0]
 8024d22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024d24:	4798      	blx	r3
 8024d26:	4658      	mov	r0, fp
 8024d28:	b013      	add	sp, #76	@ 0x4c
 8024d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024d2e:	2000      	movs	r0, #0
 8024d30:	4463      	add	r3, ip
 8024d32:	b21b      	sxth	r3, r3
 8024d34:	4684      	mov	ip, r0
 8024d36:	4601      	mov	r1, r0
 8024d38:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024d3c:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8024d40:	e734      	b.n	8024bac <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f0>
 8024d42:	9b05      	ldr	r3, [sp, #20]
 8024d44:	9002      	str	r0, [sp, #8]
 8024d46:	e9cd b300 	strd	fp, r3, [sp]
 8024d4a:	a810      	add	r0, sp, #64	@ 0x40
 8024d4c:	462b      	mov	r3, r5
 8024d4e:	463a      	mov	r2, r7
 8024d50:	4621      	mov	r1, r4
 8024d52:	47c0      	blx	r8
 8024d54:	4658      	mov	r0, fp
 8024d56:	b013      	add	sp, #76	@ 0x4c
 8024d58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024d5c:	4620      	mov	r0, r4
 8024d5e:	4798      	blx	r3
 8024d60:	e648      	b.n	80249f4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x38>
 8024d62:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8024d64:	2800      	cmp	r0, #0
 8024d66:	f47f af59 	bne.w	8024c1c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8024d6a:	e756      	b.n	8024c1a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x25e>
 8024d6c:	4639      	mov	r1, r7
 8024d6e:	e70f      	b.n	8024b90 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1d4>
 8024d70:	f04f 0804 	mov.w	r8, #4
 8024d74:	f04f 0a02 	mov.w	sl, #2
 8024d78:	e763      	b.n	8024c42 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x286>
 8024d7a:	f04f 0839 	mov.w	r8, #57	@ 0x39
 8024d7e:	f04f 0a03 	mov.w	sl, #3
 8024d82:	e75e      	b.n	8024c42 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x286>
 8024d84:	2404      	movs	r4, #4
 8024d86:	e773      	b.n	8024c70 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x2b4>
 8024d88:	4798      	blx	r3
 8024d8a:	e74e      	b.n	8024c2a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26e>
 8024d8c:	4620      	mov	r0, r4
 8024d8e:	4798      	blx	r3
 8024d90:	4604      	mov	r4, r0
 8024d92:	e770      	b.n	8024c76 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x2ba>
 8024d94:	4b1c      	ldr	r3, [pc, #112]	@ (8024e08 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x44c>)
 8024d96:	4a1d      	ldr	r2, [pc, #116]	@ (8024e0c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x450>)
 8024d98:	217c      	movs	r1, #124	@ 0x7c
 8024d9a:	481d      	ldr	r0, [pc, #116]	@ (8024e10 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x454>)
 8024d9c:	f00d fb74 	bl	8032488 <__assert_func>
 8024da0:	4b1c      	ldr	r3, [pc, #112]	@ (8024e14 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x458>)
 8024da2:	4a1d      	ldr	r2, [pc, #116]	@ (8024e18 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8024da4:	21f1      	movs	r1, #241	@ 0xf1
 8024da6:	481d      	ldr	r0, [pc, #116]	@ (8024e1c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024da8:	f00d fb6e 	bl	8032488 <__assert_func>
 8024dac:	4b1c      	ldr	r3, [pc, #112]	@ (8024e20 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x464>)
 8024dae:	4a1a      	ldr	r2, [pc, #104]	@ (8024e18 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8024db0:	21ef      	movs	r1, #239	@ 0xef
 8024db2:	481a      	ldr	r0, [pc, #104]	@ (8024e1c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024db4:	f00d fb68 	bl	8032488 <__assert_func>
 8024db8:	4b1a      	ldr	r3, [pc, #104]	@ (8024e24 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x468>)
 8024dba:	4a17      	ldr	r2, [pc, #92]	@ (8024e18 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8024dbc:	21ed      	movs	r1, #237	@ 0xed
 8024dbe:	4817      	ldr	r0, [pc, #92]	@ (8024e1c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024dc0:	f00d fb62 	bl	8032488 <__assert_func>
 8024dc4:	4b17      	ldr	r3, [pc, #92]	@ (8024e24 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x468>)
 8024dc6:	4a18      	ldr	r2, [pc, #96]	@ (8024e28 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x46c>)
 8024dc8:	21f8      	movs	r1, #248	@ 0xf8
 8024dca:	4814      	ldr	r0, [pc, #80]	@ (8024e1c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024dcc:	f00d fb5c 	bl	8032488 <__assert_func>
 8024dd0:	4b16      	ldr	r3, [pc, #88]	@ (8024e2c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x470>)
 8024dd2:	4a17      	ldr	r2, [pc, #92]	@ (8024e30 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x474>)
 8024dd4:	f240 110f 	movw	r1, #271	@ 0x10f
 8024dd8:	4816      	ldr	r0, [pc, #88]	@ (8024e34 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x478>)
 8024dda:	f00d fb55 	bl	8032488 <__assert_func>
 8024dde:	4b16      	ldr	r3, [pc, #88]	@ (8024e38 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x47c>)
 8024de0:	4a11      	ldr	r2, [pc, #68]	@ (8024e28 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x46c>)
 8024de2:	f44f 7191 	mov.w	r1, #290	@ 0x122
 8024de6:	480d      	ldr	r0, [pc, #52]	@ (8024e1c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024de8:	f00d fb4e 	bl	8032488 <__assert_func>
 8024dec:	20082eb8 	.word	0x20082eb8
 8024df0:	20082eba 	.word	0x20082eba
 8024df4:	20082ec4 	.word	0x20082ec4
 8024df8:	08020c4d 	.word	0x08020c4d
 8024dfc:	0802282d 	.word	0x0802282d
 8024e00:	20082ebe 	.word	0x20082ebe
 8024e04:	20083364 	.word	0x20083364
 8024e08:	080361a4 	.word	0x080361a4
 8024e0c:	08036a10 	.word	0x08036a10
 8024e10:	080361cc 	.word	0x080361cc
 8024e14:	080365fc 	.word	0x080365fc
 8024e18:	08037b7c 	.word	0x08037b7c
 8024e1c:	08036248 	.word	0x08036248
 8024e20:	080365a4 	.word	0x080365a4
 8024e24:	0803644c 	.word	0x0803644c
 8024e28:	08037ae8 	.word	0x08037ae8
 8024e2c:	08036780 	.word	0x08036780
 8024e30:	08037f44 	.word	0x08037f44
 8024e34:	080367c4 	.word	0x080367c4
 8024e38:	08036550 	.word	0x08036550

08024e3c <_ZN8touchgfx8LCDGPU2DC1Ev>:
 8024e3c:	b410      	push	{r4}
 8024e3e:	240d      	movs	r4, #13
 8024e40:	2200      	movs	r2, #0
 8024e42:	4904      	ldr	r1, [pc, #16]	@ (8024e54 <_ZN8touchgfx8LCDGPU2DC1Ev+0x18>)
 8024e44:	7304      	strb	r4, [r0, #12]
 8024e46:	e9c0 1200 	strd	r1, r2, [r0]
 8024e4a:	6082      	str	r2, [r0, #8]
 8024e4c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024e50:	4770      	bx	lr
 8024e52:	bf00      	nop
 8024e54:	080369b8 	.word	0x080369b8

08024e58 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>:
 8024e58:	2902      	cmp	r1, #2
 8024e5a:	d906      	bls.n	8024e6a <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x12>
 8024e5c:	b508      	push	{r3, lr}
 8024e5e:	4a04      	ldr	r2, [pc, #16]	@ (8024e70 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x18>)
 8024e60:	4b04      	ldr	r3, [pc, #16]	@ (8024e74 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x1c>)
 8024e62:	212b      	movs	r1, #43	@ 0x2b
 8024e64:	4804      	ldr	r0, [pc, #16]	@ (8024e78 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x20>)
 8024e66:	f00d fb0f 	bl	8032488 <__assert_func>
 8024e6a:	7301      	strb	r1, [r0, #12]
 8024e6c:	4770      	bx	lr
 8024e6e:	bf00      	nop
 8024e70:	08036d28 	.word	0x08036d28
 8024e74:	080360dc 	.word	0x080360dc
 8024e78:	08036248 	.word	0x08036248

08024e7c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8024e7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e80:	b093      	sub	sp, #76	@ 0x4c
 8024e82:	4691      	mov	r9, r2
 8024e84:	468a      	mov	sl, r1
 8024e86:	8812      	ldrh	r2, [r2, #0]
 8024e88:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 8024e8c:	461c      	mov	r4, r3
 8024e8e:	910a      	str	r1, [sp, #40]	@ 0x28
 8024e90:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024e92:	2a00      	cmp	r2, #0
 8024e94:	f040 8109 	bne.w	80250aa <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x22e>
 8024e98:	6820      	ldr	r0, [r4, #0]
 8024e9a:	6861      	ldr	r1, [r4, #4]
 8024e9c:	aa0e      	add	r2, sp, #56	@ 0x38
 8024e9e:	c203      	stmia	r2!, {r0, r1}
 8024ea0:	6818      	ldr	r0, [r3, #0]
 8024ea2:	6859      	ldr	r1, [r3, #4]
 8024ea4:	aa10      	add	r2, sp, #64	@ 0x40
 8024ea6:	c203      	stmia	r2!, {r0, r1}
 8024ea8:	a80e      	add	r0, sp, #56	@ 0x38
 8024eaa:	f7e7 ff11 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024eae:	4621      	mov	r1, r4
 8024eb0:	a810      	add	r0, sp, #64	@ 0x40
 8024eb2:	f7e7 ff35 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024eb6:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 8024eba:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 8024ebe:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8024ec2:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8024ec6:	487c      	ldr	r0, [pc, #496]	@ (80250b8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8024ec8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8024ecc:	4422      	add	r2, r4
 8024ece:	442b      	add	r3, r5
 8024ed0:	6800      	ldr	r0, [r0, #0]
 8024ed2:	fb11 4105 	smlabb	r1, r1, r5, r4
 8024ed6:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8024eda:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8024ede:	6802      	ldr	r2, [r0, #0]
 8024ee0:	4d76      	ldr	r5, [pc, #472]	@ (80250bc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8024ee2:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8024ee6:	448a      	add	sl, r1
 8024ee8:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8024eec:	42ab      	cmp	r3, r5
 8024eee:	910b      	str	r1, [sp, #44]	@ 0x2c
 8024ef0:	f9bd 4046 	ldrsh.w	r4, [sp, #70]	@ 0x46
 8024ef4:	f040 80a6 	bne.w	8025044 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c8>
 8024ef8:	6841      	ldr	r1, [r0, #4]
 8024efa:	4d71      	ldr	r5, [pc, #452]	@ (80250c0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8024efc:	680b      	ldr	r3, [r1, #0]
 8024efe:	699b      	ldr	r3, [r3, #24]
 8024f00:	42ab      	cmp	r3, r5
 8024f02:	f040 80c4 	bne.w	802508e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8024f06:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8024f08:	4798      	blx	r3
 8024f0a:	4b6e      	ldr	r3, [pc, #440]	@ (80250c4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8024f0c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8024f10:	881b      	ldrh	r3, [r3, #0]
 8024f12:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8024f16:	fb03 f404 	mul.w	r4, r3, r4
 8024f1a:	fb03 1202 	mla	r2, r3, r2, r1
 8024f1e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8024f22:	eb00 0244 	add.w	r2, r0, r4, lsl #1
 8024f26:	4290      	cmp	r0, r2
 8024f28:	920c      	str	r2, [sp, #48]	@ 0x30
 8024f2a:	f080 8083 	bcs.w	8025034 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 8024f2e:	f04f 0b04 	mov.w	fp, #4
 8024f32:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024f34:	0052      	lsls	r2, r2, #1
 8024f36:	920d      	str	r2, [sp, #52]	@ 0x34
 8024f38:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8024f3a:	eb00 0802 	add.w	r8, r0, r2
 8024f3e:	4580      	cmp	r8, r0
 8024f40:	d96d      	bls.n	802501e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 8024f42:	4684      	mov	ip, r0
 8024f44:	f10a 3eff 	add.w	lr, sl, #4294967295
 8024f48:	e03e      	b.n	8024fc8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x14c>
 8024f4a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024f4c:	f3c5 4707 	ubfx	r7, r5, #16, #8
 8024f50:	fb02 f303 	mul.w	r3, r2, r3
 8024f54:	1c59      	adds	r1, r3, #1
 8024f56:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8024f5a:	121b      	asrs	r3, r3, #8
 8024f5c:	43da      	mvns	r2, r3
 8024f5e:	b299      	uxth	r1, r3
 8024f60:	b2f6      	uxtb	r6, r6
 8024f62:	b2eb      	uxtb	r3, r5
 8024f64:	fb17 f701 	smulbb	r7, r7, r1
 8024f68:	f8bc 5000 	ldrh.w	r5, [ip]
 8024f6c:	fb13 f301 	smulbb	r3, r3, r1
 8024f70:	fb16 f601 	smulbb	r6, r6, r1
 8024f74:	122c      	asrs	r4, r5, #8
 8024f76:	10e9      	asrs	r1, r5, #3
 8024f78:	00ed      	lsls	r5, r5, #3
 8024f7a:	b2d2      	uxtb	r2, r2
 8024f7c:	b2ed      	uxtb	r5, r5
 8024f7e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8024f82:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8024f86:	fb04 7402 	mla	r4, r4, r2, r7
 8024f8a:	fb01 6102 	mla	r1, r1, r2, r6
 8024f8e:	fb05 3202 	mla	r2, r5, r2, r3
 8024f92:	b2a4      	uxth	r4, r4
 8024f94:	b292      	uxth	r2, r2
 8024f96:	b289      	uxth	r1, r1
 8024f98:	1c55      	adds	r5, r2, #1
 8024f9a:	1c67      	adds	r7, r4, #1
 8024f9c:	1c4b      	adds	r3, r1, #1
 8024f9e:	eb05 2512 	add.w	r5, r5, r2, lsr #8
 8024fa2:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8024fa6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024faa:	f404 4278 	and.w	r2, r4, #63488	@ 0xf800
 8024fae:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8024fb2:	095b      	lsrs	r3, r3, #5
 8024fb4:	432a      	orrs	r2, r5
 8024fb6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024fba:	431a      	orrs	r2, r3
 8024fbc:	f8ac 2000 	strh.w	r2, [ip]
 8024fc0:	f10c 0c02 	add.w	ip, ip, #2
 8024fc4:	45e0      	cmp	r8, ip
 8024fc6:	d91f      	bls.n	8025008 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8024fc8:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 8024fcc:	fb1b b303 	smlabb	r3, fp, r3, fp
 8024fd0:	f859 5003 	ldr.w	r5, [r9, r3]
 8024fd4:	0e2b      	lsrs	r3, r5, #24
 8024fd6:	d0f3      	beq.n	8024fc0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x144>
 8024fd8:	2bff      	cmp	r3, #255	@ 0xff
 8024fda:	ea4f 2615 	mov.w	r6, r5, lsr #8
 8024fde:	d1b4      	bne.n	8024f4a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8024fe0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024fe2:	2aff      	cmp	r2, #255	@ 0xff
 8024fe4:	d1b1      	bne.n	8024f4a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8024fe6:	096b      	lsrs	r3, r5, #5
 8024fe8:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8024fec:	f026 0607 	bic.w	r6, r6, #7
 8024ff0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024ff4:	431e      	orrs	r6, r3
 8024ff6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8024ffa:	4335      	orrs	r5, r6
 8024ffc:	f8ac 5000 	strh.w	r5, [ip]
 8025000:	f10c 0c02 	add.w	ip, ip, #2
 8025004:	45e0      	cmp	r8, ip
 8025006:	d8df      	bhi.n	8024fc8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x14c>
 8025008:	43c3      	mvns	r3, r0
 802500a:	4498      	add	r8, r3
 802500c:	4b2d      	ldr	r3, [pc, #180]	@ (80250c4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 802500e:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8025012:	f108 0801 	add.w	r8, r8, #1
 8025016:	881b      	ldrh	r3, [r3, #0]
 8025018:	eb00 0048 	add.w	r0, r0, r8, lsl #1
 802501c:	44c2      	add	sl, r8
 802501e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8025020:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8025024:	1b19      	subs	r1, r3, r4
 8025026:	1b12      	subs	r2, r2, r4
 8025028:	4492      	add	sl, r2
 802502a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802502c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8025030:	4282      	cmp	r2, r0
 8025032:	d881      	bhi.n	8024f38 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8025034:	4b20      	ldr	r3, [pc, #128]	@ (80250b8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8025036:	6818      	ldr	r0, [r3, #0]
 8025038:	6803      	ldr	r3, [r0, #0]
 802503a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802503c:	4798      	blx	r3
 802503e:	b013      	add	sp, #76	@ 0x4c
 8025040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025044:	4798      	blx	r3
 8025046:	4603      	mov	r3, r0
 8025048:	2b01      	cmp	r3, #1
 802504a:	d124      	bne.n	8025096 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 802504c:	4a1e      	ldr	r2, [pc, #120]	@ (80250c8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 802504e:	6810      	ldr	r0, [r2, #0]
 8025050:	b328      	cbz	r0, 802509e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x222>
 8025052:	2700      	movs	r7, #0
 8025054:	260b      	movs	r6, #11
 8025056:	4a1b      	ldr	r2, [pc, #108]	@ (80250c4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8025058:	b2a1      	uxth	r1, r4
 802505a:	8814      	ldrh	r4, [r2, #0]
 802505c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8025060:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8025064:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8025068:	9406      	str	r4, [sp, #24]
 802506a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802506c:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 8025070:	9305      	str	r3, [sp, #20]
 8025072:	9204      	str	r2, [sp, #16]
 8025074:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8025078:	464a      	mov	r2, r9
 802507a:	4651      	mov	r1, sl
 802507c:	e9cd 6707 	strd	r6, r7, [sp, #28]
 8025080:	9503      	str	r5, [sp, #12]
 8025082:	9400      	str	r4, [sp, #0]
 8025084:	f7fb fd98 	bl	8020bb8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8025088:	b013      	add	sp, #76	@ 0x4c
 802508a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802508e:	4608      	mov	r0, r1
 8025090:	4798      	blx	r3
 8025092:	4603      	mov	r3, r0
 8025094:	e7d8      	b.n	8025048 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1cc>
 8025096:	4b08      	ldr	r3, [pc, #32]	@ (80250b8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8025098:	6818      	ldr	r0, [r3, #0]
 802509a:	6802      	ldr	r2, [r0, #0]
 802509c:	e733      	b.n	8024f06 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 802509e:	4b0b      	ldr	r3, [pc, #44]	@ (80250cc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 80250a0:	4a0b      	ldr	r2, [pc, #44]	@ (80250d0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 80250a2:	217c      	movs	r1, #124	@ 0x7c
 80250a4:	480b      	ldr	r0, [pc, #44]	@ (80250d4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 80250a6:	f00d f9ef 	bl	8032488 <__assert_func>
 80250aa:	4b0b      	ldr	r3, [pc, #44]	@ (80250d8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 80250ac:	4a0b      	ldr	r2, [pc, #44]	@ (80250dc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x260>)
 80250ae:	f240 4182 	movw	r1, #1154	@ 0x482
 80250b2:	480b      	ldr	r0, [pc, #44]	@ (80250e0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 80250b4:	f00d f9e8 	bl	8032488 <__assert_func>
 80250b8:	20082ec4 	.word	0x20082ec4
 80250bc:	0800121d 	.word	0x0800121d
 80250c0:	0800ba75 	.word	0x0800ba75
 80250c4:	20082ebe 	.word	0x20082ebe
 80250c8:	20083364 	.word	0x20083364
 80250cc:	080361a4 	.word	0x080361a4
 80250d0:	08036a10 	.word	0x08036a10
 80250d4:	080361cc 	.word	0x080361cc
 80250d8:	080362bc 	.word	0x080362bc
 80250dc:	08037040 	.word	0x08037040
 80250e0:	08036248 	.word	0x08036248

080250e4 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>:
 80250e4:	b4f0      	push	{r4, r5, r6, r7}
 80250e6:	7b05      	ldrb	r5, [r0, #12]
 80250e8:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80250ec:	3d01      	subs	r5, #1
 80250ee:	2eff      	cmp	r6, #255	@ 0xff
 80250f0:	fa5f fc81 	uxtb.w	ip, r1
 80250f4:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80250f8:	b2ed      	uxtb	r5, r5
 80250fa:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80250fe:	d041      	beq.n	8025184 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xa0>
 8025100:	fb16 f603 	smulbb	r6, r6, r3
 8025104:	b2b6      	uxth	r6, r6
 8025106:	1c74      	adds	r4, r6, #1
 8025108:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 802510c:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8025110:	43e6      	mvns	r6, r4
 8025112:	b2a4      	uxth	r4, r4
 8025114:	fb1c fc04 	smulbb	ip, ip, r4
 8025118:	b2ff      	uxtb	r7, r7
 802511a:	fb17 f704 	smulbb	r7, r7, r4
 802511e:	00d0      	lsls	r0, r2, #3
 8025120:	b2c0      	uxtb	r0, r0
 8025122:	10d3      	asrs	r3, r2, #3
 8025124:	b2f6      	uxtb	r6, r6
 8025126:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 802512a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802512e:	fb00 c006 	mla	r0, r0, r6, ip
 8025132:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 8025136:	fb03 7306 	mla	r3, r3, r6, r7
 802513a:	b280      	uxth	r0, r0
 802513c:	b29b      	uxth	r3, r3
 802513e:	1c47      	adds	r7, r0, #1
 8025140:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8025144:	f103 0c01 	add.w	ip, r3, #1
 8025148:	2d01      	cmp	r5, #1
 802514a:	f3c0 2707 	ubfx	r7, r0, #8, #8
 802514e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025152:	d926      	bls.n	80251a2 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xbe>
 8025154:	b2c9      	uxtb	r1, r1
 8025156:	fb11 f404 	smulbb	r4, r1, r4
 802515a:	1212      	asrs	r2, r2, #8
 802515c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8025160:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025164:	fb02 4206 	mla	r2, r2, r6, r4
 8025168:	b292      	uxth	r2, r2
 802516a:	1c50      	adds	r0, r2, #1
 802516c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8025170:	095b      	lsrs	r3, r3, #5
 8025172:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8025176:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802517a:	ea40 00d7 	orr.w	r0, r0, r7, lsr #3
 802517e:	4318      	orrs	r0, r3
 8025180:	bcf0      	pop	{r4, r5, r6, r7}
 8025182:	4770      	bx	lr
 8025184:	2bff      	cmp	r3, #255	@ 0xff
 8025186:	d1bb      	bne.n	8025100 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x1c>
 8025188:	2d01      	cmp	r5, #1
 802518a:	d910      	bls.n	80251ae <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xca>
 802518c:	4a0a      	ldr	r2, [pc, #40]	@ (80251b8 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xd4>)
 802518e:	00f8      	lsls	r0, r7, #3
 8025190:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8025194:	f400 67fc 	and.w	r7, r0, #2016	@ 0x7e0
 8025198:	ea41 00dc 	orr.w	r0, r1, ip, lsr #3
 802519c:	4338      	orrs	r0, r7
 802519e:	b280      	uxth	r0, r0
 80251a0:	e7ee      	b.n	8025180 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 80251a2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80251a6:	ea43 0007 	orr.w	r0, r3, r7
 80251aa:	bcf0      	pop	{r4, r5, r6, r7}
 80251ac:	4770      	bx	lr
 80251ae:	ea4c 2007 	orr.w	r0, ip, r7, lsl #8
 80251b2:	b280      	uxth	r0, r0
 80251b4:	e7e4      	b.n	8025180 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 80251b6:	bf00      	nop
 80251b8:	fffff800 	.word	0xfffff800

080251bc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80251bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80251c0:	b093      	sub	sp, #76	@ 0x4c
 80251c2:	4614      	mov	r4, r2
 80251c4:	460d      	mov	r5, r1
 80251c6:	7812      	ldrb	r2, [r2, #0]
 80251c8:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 80251cc:	461e      	mov	r6, r3
 80251ce:	9002      	str	r0, [sp, #8]
 80251d0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80251d2:	9109      	str	r1, [sp, #36]	@ 0x24
 80251d4:	2a00      	cmp	r2, #0
 80251d6:	f040 81c9 	bne.w	802556c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3b0>
 80251da:	6830      	ldr	r0, [r6, #0]
 80251dc:	6871      	ldr	r1, [r6, #4]
 80251de:	aa0e      	add	r2, sp, #56	@ 0x38
 80251e0:	c203      	stmia	r2!, {r0, r1}
 80251e2:	6818      	ldr	r0, [r3, #0]
 80251e4:	6859      	ldr	r1, [r3, #4]
 80251e6:	aa10      	add	r2, sp, #64	@ 0x40
 80251e8:	c203      	stmia	r2!, {r0, r1}
 80251ea:	a80e      	add	r0, sp, #56	@ 0x38
 80251ec:	f7e7 fd70 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80251f0:	4631      	mov	r1, r6
 80251f2:	a810      	add	r0, sp, #64	@ 0x40
 80251f4:	f7e7 fd94 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80251f8:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 80251fc:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8025200:	f003 0201 	and.w	r2, r3, #1
 8025204:	4617      	mov	r7, r2
 8025206:	920a      	str	r2, [sp, #40]	@ 0x28
 8025208:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 802520c:	f8bd 003a 	ldrh.w	r0, [sp, #58]	@ 0x3a
 8025210:	443b      	add	r3, r7
 8025212:	fb02 1303 	mla	r3, r2, r3, r1
 8025216:	f8bd 6038 	ldrh.w	r6, [sp, #56]	@ 0x38
 802521a:	4402      	add	r2, r0
 802521c:	48d0      	ldr	r0, [pc, #832]	@ (8025560 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a4>)
 802521e:	440e      	add	r6, r1
 8025220:	6800      	ldr	r0, [r0, #0]
 8025222:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 8025226:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 802522a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802522e:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8025232:	6802      	ldr	r2, [r0, #0]
 8025234:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	@ 0x44
 8025238:	9304      	str	r3, [sp, #16]
 802523a:	f001 0301 	and.w	r3, r1, #1
 802523e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8025240:	930b      	str	r3, [sp, #44]	@ 0x2c
 8025242:	9608      	str	r6, [sp, #32]
 8025244:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8025248:	4790      	blx	r2
 802524a:	4ac6      	ldr	r2, [pc, #792]	@ (8025564 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a8>)
 802524c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8025250:	8812      	ldrh	r2, [r2, #0]
 8025252:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8025256:	fb05 f502 	mul.w	r5, r5, r2
 802525a:	fb02 1303 	mla	r3, r2, r3, r1
 802525e:	eb00 0843 	add.w	r8, r0, r3, lsl #1
 8025262:	eb08 0345 	add.w	r3, r8, r5, lsl #1
 8025266:	4598      	cmp	r8, r3
 8025268:	930c      	str	r3, [sp, #48]	@ 0x30
 802526a:	f104 0404 	add.w	r4, r4, #4
 802526e:	f080 8144 	bcs.w	80254fa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x33e>
 8025272:	1e73      	subs	r3, r6, #1
 8025274:	930d      	str	r3, [sp, #52]	@ 0x34
 8025276:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025278:	2b00      	cmp	r3, #0
 802527a:	f000 8164 	beq.w	8025546 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x38a>
 802527e:	9a04      	ldr	r2, [sp, #16]
 8025280:	7813      	ldrb	r3, [r2, #0]
 8025282:	3201      	adds	r2, #1
 8025284:	f003 030f 	and.w	r3, r3, #15
 8025288:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 802528c:	9203      	str	r2, [sp, #12]
 802528e:	0e0b      	lsrs	r3, r1, #24
 8025290:	d008      	beq.n	80252a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xe8>
 8025292:	f8b8 2000 	ldrh.w	r2, [r8]
 8025296:	9802      	ldr	r0, [sp, #8]
 8025298:	9300      	str	r3, [sp, #0]
 802529a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802529c:	f7ff ff22 	bl	80250e4 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 80252a0:	f8a8 0000 	strh.w	r0, [r8]
 80252a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80252a6:	f108 0802 	add.w	r8, r8, #2
 80252aa:	2b01      	cmp	r3, #1
 80252ac:	f340 80fd 	ble.w	80254aa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ee>
 80252b0:	3b02      	subs	r3, #2
 80252b2:	9a03      	ldr	r2, [sp, #12]
 80252b4:	9306      	str	r3, [sp, #24]
 80252b6:	085b      	lsrs	r3, r3, #1
 80252b8:	9305      	str	r3, [sp, #20]
 80252ba:	eb02 0e03 	add.w	lr, r2, r3
 80252be:	f108 0704 	add.w	r7, r8, #4
 80252c2:	f102 3cff 	add.w	ip, r2, #4294967295
 80252c6:	f8cd 801c 	str.w	r8, [sp, #28]
 80252ca:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 80252ce:	e0b2      	b.n	8025436 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x27a>
 80252d0:	fb05 f50a 	mul.w	r5, r5, sl
 80252d4:	1c6a      	adds	r2, r5, #1
 80252d6:	eb02 2525 	add.w	r5, r2, r5, asr #8
 80252da:	122d      	asrs	r5, r5, #8
 80252dc:	43ee      	mvns	r6, r5
 80252de:	b2ad      	uxth	r5, r5
 80252e0:	fa5f fb8b 	uxtb.w	fp, fp
 80252e4:	fb13 f305 	smulbb	r3, r3, r5
 80252e8:	fb1b fb05 	smulbb	fp, fp, r5
 80252ec:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 80252f0:	b2c0      	uxtb	r0, r0
 80252f2:	ea4f 02e8 	mov.w	r2, r8, asr #3
 80252f6:	b2f6      	uxtb	r6, r6
 80252f8:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80252fc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025300:	fb00 3306 	mla	r3, r0, r6, r3
 8025304:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8025308:	fb02 bb06 	mla	fp, r2, r6, fp
 802530c:	b29b      	uxth	r3, r3
 802530e:	fa1f fb8b 	uxth.w	fp, fp
 8025312:	1c58      	adds	r0, r3, #1
 8025314:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8025318:	f10b 0201 	add.w	r2, fp, #1
 802531c:	f1b9 0f01 	cmp.w	r9, #1
 8025320:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025324:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8025328:	f240 8108 	bls.w	802553c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x380>
 802532c:	b2c9      	uxtb	r1, r1
 802532e:	fb11 f505 	smulbb	r5, r1, r5
 8025332:	ea4f 2828 	mov.w	r8, r8, asr #8
 8025336:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 802533a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 802533e:	fb08 5806 	mla	r8, r8, r6, r5
 8025342:	fa1f f888 	uxth.w	r8, r8
 8025346:	f108 0101 	add.w	r1, r8, #1
 802534a:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 802534e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8025352:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025356:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 802535a:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 802535e:	ea43 030b 	orr.w	r3, r3, fp
 8025362:	f827 3c04 	strh.w	r3, [r7, #-4]
 8025366:	f89c 2000 	ldrb.w	r2, [ip]
 802536a:	f002 020f 	and.w	r2, r2, #15
 802536e:	f854 3022 	ldr.w	r3, [r4, r2, lsl #2]
 8025372:	0e1d      	lsrs	r5, r3, #24
 8025374:	d05b      	beq.n	802542e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x272>
 8025376:	9a02      	ldr	r2, [sp, #8]
 8025378:	2dff      	cmp	r5, #255	@ 0xff
 802537a:	f892 900c 	ldrb.w	r9, [r2, #12]
 802537e:	ea4f 4113 	mov.w	r1, r3, lsr #16
 8025382:	f109 39ff 	add.w	r9, r9, #4294967295
 8025386:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 802538a:	f837 8c02 	ldrh.w	r8, [r7, #-2]
 802538e:	fa5f f989 	uxtb.w	r9, r9
 8025392:	b2db      	uxtb	r3, r3
 8025394:	f000 80b9 	beq.w	802550a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x34e>
 8025398:	fb05 f50a 	mul.w	r5, r5, sl
 802539c:	1c6a      	adds	r2, r5, #1
 802539e:	eb02 2525 	add.w	r5, r2, r5, asr #8
 80253a2:	122d      	asrs	r5, r5, #8
 80253a4:	43ee      	mvns	r6, r5
 80253a6:	b2ad      	uxth	r5, r5
 80253a8:	fa5f fb8b 	uxtb.w	fp, fp
 80253ac:	fb13 f305 	smulbb	r3, r3, r5
 80253b0:	fb1b fb05 	smulbb	fp, fp, r5
 80253b4:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 80253b8:	b2c0      	uxtb	r0, r0
 80253ba:	ea4f 02e8 	mov.w	r2, r8, asr #3
 80253be:	b2f6      	uxtb	r6, r6
 80253c0:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80253c4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80253c8:	fb00 3306 	mla	r3, r0, r6, r3
 80253cc:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80253d0:	fb02 bb06 	mla	fp, r2, r6, fp
 80253d4:	b29b      	uxth	r3, r3
 80253d6:	fa1f fb8b 	uxth.w	fp, fp
 80253da:	1c58      	adds	r0, r3, #1
 80253dc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80253e0:	f10b 0201 	add.w	r2, fp, #1
 80253e4:	f1b9 0f01 	cmp.w	r9, #1
 80253e8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80253ec:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 80253f0:	f240 809f 	bls.w	8025532 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x376>
 80253f4:	b2c9      	uxtb	r1, r1
 80253f6:	fb11 f505 	smulbb	r5, r1, r5
 80253fa:	ea4f 2828 	mov.w	r8, r8, asr #8
 80253fe:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8025402:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8025406:	fb08 5806 	mla	r8, r8, r6, r5
 802540a:	fa1f f888 	uxth.w	r8, r8
 802540e:	f108 0101 	add.w	r1, r8, #1
 8025412:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 8025416:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 802541a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802541e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8025422:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025426:	ea43 030b 	orr.w	r3, r3, fp
 802542a:	f827 3c02 	strh.w	r3, [r7, #-2]
 802542e:	45e6      	cmp	lr, ip
 8025430:	f107 0704 	add.w	r7, r7, #4
 8025434:	d02b      	beq.n	802548e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8025436:	f81c 2f01 	ldrb.w	r2, [ip, #1]!
 802543a:	0913      	lsrs	r3, r2, #4
 802543c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8025440:	0e1d      	lsrs	r5, r3, #24
 8025442:	d092      	beq.n	802536a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ae>
 8025444:	9a02      	ldr	r2, [sp, #8]
 8025446:	2dff      	cmp	r5, #255	@ 0xff
 8025448:	f892 900c 	ldrb.w	r9, [r2, #12]
 802544c:	ea4f 4113 	mov.w	r1, r3, lsr #16
 8025450:	f109 39ff 	add.w	r9, r9, #4294967295
 8025454:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 8025458:	f837 8c04 	ldrh.w	r8, [r7, #-4]
 802545c:	fa5f f989 	uxtb.w	r9, r9
 8025460:	b2db      	uxtb	r3, r3
 8025462:	f47f af35 	bne.w	80252d0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8025466:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802546a:	f47f af31 	bne.w	80252d0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x114>
 802546e:	f1b9 0f01 	cmp.w	r9, #1
 8025472:	d970      	bls.n	8025556 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x39a>
 8025474:	4a3c      	ldr	r2, [pc, #240]	@ (8025568 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>)
 8025476:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 802547a:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 802547e:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025482:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8025486:	ea43 030b 	orr.w	r3, r3, fp
 802548a:	b29b      	uxth	r3, r3
 802548c:	e769      	b.n	8025362 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 802548e:	9b05      	ldr	r3, [sp, #20]
 8025490:	9903      	ldr	r1, [sp, #12]
 8025492:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8025496:	1c5a      	adds	r2, r3, #1
 8025498:	4411      	add	r1, r2
 802549a:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 802549e:	9a06      	ldr	r2, [sp, #24]
 80254a0:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 80254a4:	9103      	str	r1, [sp, #12]
 80254a6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80254aa:	2b01      	cmp	r3, #1
 80254ac:	d111      	bne.n	80254d2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x316>
 80254ae:	9b03      	ldr	r3, [sp, #12]
 80254b0:	781b      	ldrb	r3, [r3, #0]
 80254b2:	091b      	lsrs	r3, r3, #4
 80254b4:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 80254b8:	0e0b      	lsrs	r3, r1, #24
 80254ba:	d008      	beq.n	80254ce <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x312>
 80254bc:	f8b8 2000 	ldrh.w	r2, [r8]
 80254c0:	9802      	ldr	r0, [sp, #8]
 80254c2:	9300      	str	r3, [sp, #0]
 80254c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80254c6:	f7ff fe0d 	bl	80250e4 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 80254ca:	f8a8 0000 	strh.w	r0, [r8]
 80254ce:	f108 0802 	add.w	r8, r8, #2
 80254d2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80254d4:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 80254d8:	4a22      	ldr	r2, [pc, #136]	@ (8025564 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a8>)
 80254da:	440b      	add	r3, r1
 80254dc:	8812      	ldrh	r2, [r2, #0]
 80254de:	9908      	ldr	r1, [sp, #32]
 80254e0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80254e4:	1a52      	subs	r2, r2, r1
 80254e6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80254ea:	9a04      	ldr	r2, [sp, #16]
 80254ec:	eb02 0363 	add.w	r3, r2, r3, asr #1
 80254f0:	9304      	str	r3, [sp, #16]
 80254f2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80254f4:	4543      	cmp	r3, r8
 80254f6:	f63f aebe 	bhi.w	8025276 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xba>
 80254fa:	4b19      	ldr	r3, [pc, #100]	@ (8025560 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a4>)
 80254fc:	6818      	ldr	r0, [r3, #0]
 80254fe:	6803      	ldr	r3, [r0, #0]
 8025500:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025502:	4798      	blx	r3
 8025504:	b013      	add	sp, #76	@ 0x4c
 8025506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802550a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802550e:	f47f af43 	bne.w	8025398 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1dc>
 8025512:	f1b9 0f01 	cmp.w	r9, #1
 8025516:	d91a      	bls.n	802554e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x392>
 8025518:	4a13      	ldr	r2, [pc, #76]	@ (8025568 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>)
 802551a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 802551e:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8025522:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025526:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 802552a:	ea43 030b 	orr.w	r3, r3, fp
 802552e:	b29b      	uxth	r3, r3
 8025530:	e77b      	b.n	802542a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8025532:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 8025536:	ea4b 0303 	orr.w	r3, fp, r3
 802553a:	e776      	b.n	802542a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 802553c:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 8025540:	ea4b 0303 	orr.w	r3, fp, r3
 8025544:	e70d      	b.n	8025362 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 8025546:	9b04      	ldr	r3, [sp, #16]
 8025548:	9303      	str	r3, [sp, #12]
 802554a:	9b08      	ldr	r3, [sp, #32]
 802554c:	e6ad      	b.n	80252aa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xee>
 802554e:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8025552:	b29b      	uxth	r3, r3
 8025554:	e769      	b.n	802542a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8025556:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 802555a:	b29b      	uxth	r3, r3
 802555c:	e701      	b.n	8025362 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 802555e:	bf00      	nop
 8025560:	20082ec4 	.word	0x20082ec4
 8025564:	20082ebe 	.word	0x20082ebe
 8025568:	fffff800 	.word	0xfffff800
 802556c:	4b03      	ldr	r3, [pc, #12]	@ (802557c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c0>)
 802556e:	4a04      	ldr	r2, [pc, #16]	@ (8025580 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c4>)
 8025570:	f240 41f5 	movw	r1, #1269	@ 0x4f5
 8025574:	4803      	ldr	r0, [pc, #12]	@ (8025584 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c8>)
 8025576:	f00c ff87 	bl	8032488 <__assert_func>
 802557a:	bf00      	nop
 802557c:	0803633c 	.word	0x0803633c
 8025580:	0803752c 	.word	0x0803752c
 8025584:	08036248 	.word	0x08036248

08025588 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8025588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802558c:	b08f      	sub	sp, #60	@ 0x3c
 802558e:	9206      	str	r2, [sp, #24]
 8025590:	461c      	mov	r4, r3
 8025592:	7812      	ldrb	r2, [r2, #0]
 8025594:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8025598:	e9cd 1000 	strd	r1, r0, [sp]
 802559c:	9305      	str	r3, [sp, #20]
 802559e:	2a00      	cmp	r2, #0
 80255a0:	f040 81ad 	bne.w	80258fe <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x376>
 80255a4:	b913      	cbnz	r3, 80255ac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x24>
 80255a6:	b00f      	add	sp, #60	@ 0x3c
 80255a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80255ac:	6820      	ldr	r0, [r4, #0]
 80255ae:	6861      	ldr	r1, [r4, #4]
 80255b0:	ab0a      	add	r3, sp, #40	@ 0x28
 80255b2:	c303      	stmia	r3!, {r0, r1}
 80255b4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80255b6:	6818      	ldr	r0, [r3, #0]
 80255b8:	6859      	ldr	r1, [r3, #4]
 80255ba:	ab0c      	add	r3, sp, #48	@ 0x30
 80255bc:	c303      	stmia	r3!, {r0, r1}
 80255be:	a80a      	add	r0, sp, #40	@ 0x28
 80255c0:	f7e7 fb86 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80255c4:	4621      	mov	r1, r4
 80255c6:	a80c      	add	r0, sp, #48	@ 0x30
 80255c8:	f7e7 fbaa 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80255cc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80255d0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80255d4:	dd71      	ble.n	80256ba <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x132>
 80255d6:	2201      	movs	r2, #1
 80255d8:	b299      	uxth	r1, r3
 80255da:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80255de:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80255e2:	fb93 f6f2 	sdiv	r6, r3, r2
 80255e6:	b2b5      	uxth	r5, r6
 80255e8:	fb02 3415 	mls	r4, r2, r5, r3
 80255ec:	fb14 0101 	smlabb	r1, r4, r1, r0
 80255f0:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 80255f4:	fa1f fb81 	uxth.w	fp, r1
 80255f8:	4414      	add	r4, r2
 80255fa:	3c01      	subs	r4, #1
 80255fc:	fb94 f4f2 	sdiv	r4, r4, r2
 8025600:	b135      	cbz	r5, 8025610 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x88>
 8025602:	9a06      	ldr	r2, [sp, #24]
 8025604:	9900      	ldr	r1, [sp, #0]
 8025606:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 802560a:	ba12      	rev	r2, r2
 802560c:	4411      	add	r1, r2
 802560e:	9100      	str	r1, [sp, #0]
 8025610:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8025614:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 8025618:	4402      	add	r2, r0
 802561a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 802561e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8025622:	440b      	add	r3, r1
 8025624:	4616      	mov	r6, r2
 8025626:	49b9      	ldr	r1, [pc, #740]	@ (802590c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x384>)
 8025628:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 802562c:	6808      	ldr	r0, [r1, #0]
 802562e:	9209      	str	r2, [sp, #36]	@ 0x24
 8025630:	6803      	ldr	r3, [r0, #0]
 8025632:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8025636:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025638:	4798      	blx	r3
 802563a:	f1bb 0f00 	cmp.w	fp, #0
 802563e:	bf0c      	ite	eq
 8025640:	4633      	moveq	r3, r6
 8025642:	2300      	movne	r3, #0
 8025644:	49b2      	ldr	r1, [pc, #712]	@ (8025910 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x388>)
 8025646:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 802564a:	8809      	ldrh	r1, [r1, #0]
 802564c:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 8025650:	fb01 f505 	mul.w	r5, r1, r5
 8025654:	fb01 6202 	mla	r2, r1, r2, r6
 8025658:	b2a4      	uxth	r4, r4
 802565a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802565e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8025662:	00a4      	lsls	r4, r4, #2
 8025664:	1d21      	adds	r1, r4, #4
 8025666:	4290      	cmp	r0, r2
 8025668:	9202      	str	r2, [sp, #8]
 802566a:	9108      	str	r1, [sp, #32]
 802566c:	fa1f fa83 	uxth.w	sl, r3
 8025670:	d21b      	bcs.n	80256aa <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x122>
 8025672:	2300      	movs	r3, #0
 8025674:	465e      	mov	r6, fp
 8025676:	461d      	mov	r5, r3
 8025678:	9303      	str	r3, [sp, #12]
 802567a:	b965      	cbnz	r5, 8025696 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 802567c:	9900      	ldr	r1, [sp, #0]
 802567e:	780b      	ldrb	r3, [r1, #0]
 8025680:	099d      	lsrs	r5, r3, #6
 8025682:	1e6a      	subs	r2, r5, #1
 8025684:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8025688:	2a02      	cmp	r2, #2
 802568a:	9303      	str	r3, [sp, #12]
 802568c:	f200 80ce 	bhi.w	802582c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 8025690:	3101      	adds	r1, #1
 8025692:	9100      	str	r1, [sp, #0]
 8025694:	b2ad      	uxth	r5, r5
 8025696:	b1b6      	cbz	r6, 80256c6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x13e>
 8025698:	42b5      	cmp	r5, r6
 802569a:	f080 80c1 	bcs.w	8025820 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 802569e:	1b75      	subs	r5, r6, r5
 80256a0:	b2ae      	uxth	r6, r5
 80256a2:	2500      	movs	r5, #0
 80256a4:	9b02      	ldr	r3, [sp, #8]
 80256a6:	4283      	cmp	r3, r0
 80256a8:	d8e7      	bhi.n	802567a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xf2>
 80256aa:	4b98      	ldr	r3, [pc, #608]	@ (802590c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x384>)
 80256ac:	6818      	ldr	r0, [r3, #0]
 80256ae:	6803      	ldr	r3, [r0, #0]
 80256b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80256b2:	4798      	blx	r3
 80256b4:	b00f      	add	sp, #60	@ 0x3c
 80256b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80256ba:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80256be:	b299      	uxth	r1, r3
 80256c0:	fb94 f2f1 	sdiv	r2, r4, r1
 80256c4:	e789      	b.n	80255da <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x52>
 80256c6:	2304      	movs	r3, #4
 80256c8:	4619      	mov	r1, r3
 80256ca:	9a08      	ldr	r2, [sp, #32]
 80256cc:	9b03      	ldr	r3, [sp, #12]
 80256ce:	4555      	cmp	r5, sl
 80256d0:	fb11 2303 	smlabb	r3, r1, r3, r2
 80256d4:	9a06      	ldr	r2, [sp, #24]
 80256d6:	58d1      	ldr	r1, [r2, r3]
 80256d8:	ea4f 6211 	mov.w	r2, r1, lsr #24
 80256dc:	f0c0 8099 	bcc.w	8025812 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x28a>
 80256e0:	eba5 030a 	sub.w	r3, r5, sl
 80256e4:	b29b      	uxth	r3, r3
 80256e6:	9304      	str	r3, [sp, #16]
 80256e8:	4653      	mov	r3, sl
 80256ea:	9607      	str	r6, [sp, #28]
 80256ec:	2a00      	cmp	r2, #0
 80256ee:	f000 808d 	beq.w	802580c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x284>
 80256f2:	2aff      	cmp	r2, #255	@ 0xff
 80256f4:	ea4f 4b11 	mov.w	fp, r1, lsr #16
 80256f8:	ea4f 2911 	mov.w	r9, r1, lsr #8
 80256fc:	fa5f f881 	uxtb.w	r8, r1
 8025700:	d103      	bne.n	802570a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x182>
 8025702:	9905      	ldr	r1, [sp, #20]
 8025704:	29ff      	cmp	r1, #255	@ 0xff
 8025706:	f000 8096 	beq.w	8025836 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 802570a:	9905      	ldr	r1, [sp, #20]
 802570c:	fa5f fb8b 	uxtb.w	fp, fp
 8025710:	fb01 f202 	mul.w	r2, r1, r2
 8025714:	1c51      	adds	r1, r2, #1
 8025716:	eb01 2222 	add.w	r2, r1, r2, asr #8
 802571a:	1212      	asrs	r2, r2, #8
 802571c:	ea6f 0c02 	mvn.w	ip, r2
 8025720:	fa5f f989 	uxtb.w	r9, r9
 8025724:	fa5f fc8c 	uxtb.w	ip, ip
 8025728:	2b00      	cmp	r3, #0
 802572a:	d04d      	beq.n	80257c8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 802572c:	b292      	uxth	r2, r2
 802572e:	fb1b fb02 	smulbb	fp, fp, r2
 8025732:	fb19 f902 	smulbb	r9, r9, r2
 8025736:	fb18 f802 	smulbb	r8, r8, r2
 802573a:	f103 3eff 	add.w	lr, r3, #4294967295
 802573e:	fa1f fe8e 	uxth.w	lr, lr
 8025742:	f10e 0e01 	add.w	lr, lr, #1
 8025746:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 802574a:	fa1f fb8b 	uxth.w	fp, fp
 802574e:	fa1f f989 	uxth.w	r9, r9
 8025752:	fa1f f888 	uxth.w	r8, r8
 8025756:	fa1f fc8c 	uxth.w	ip, ip
 802575a:	f830 1b02 	ldrh.w	r1, [r0], #2
 802575e:	9b01      	ldr	r3, [sp, #4]
 8025760:	00ca      	lsls	r2, r1, #3
 8025762:	7b1f      	ldrb	r7, [r3, #12]
 8025764:	b2d2      	uxtb	r2, r2
 8025766:	10cb      	asrs	r3, r1, #3
 8025768:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802576c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8025770:	fb02 820c 	mla	r2, r2, ip, r8
 8025774:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 8025778:	fb03 930c 	mla	r3, r3, ip, r9
 802577c:	b292      	uxth	r2, r2
 802577e:	1c54      	adds	r4, r2, #1
 8025780:	b29b      	uxth	r3, r3
 8025782:	3f01      	subs	r7, #1
 8025784:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 8025788:	2f01      	cmp	r7, #1
 802578a:	f103 0401 	add.w	r4, r3, #1
 802578e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025792:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8025796:	d92d      	bls.n	80257f4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 8025798:	1209      	asrs	r1, r1, #8
 802579a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802579e:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80257a2:	fb01 b10c 	mla	r1, r1, ip, fp
 80257a6:	b289      	uxth	r1, r1
 80257a8:	1c4c      	adds	r4, r1, #1
 80257aa:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 80257ae:	095b      	lsrs	r3, r3, #5
 80257b0:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80257b4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80257b8:	ea41 02d2 	orr.w	r2, r1, r2, lsr #3
 80257bc:	431a      	orrs	r2, r3
 80257be:	4586      	cmp	lr, r0
 80257c0:	f820 2c02 	strh.w	r2, [r0, #-2]
 80257c4:	d1c9      	bne.n	802575a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 80257c6:	4670      	mov	r0, lr
 80257c8:	4555      	cmp	r5, sl
 80257ca:	d31b      	bcc.n	8025804 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x27c>
 80257cc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80257ce:	f8bd 602c 	ldrh.w	r6, [sp, #44]	@ 0x2c
 80257d2:	4b4f      	ldr	r3, [pc, #316]	@ (8025910 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x388>)
 80257d4:	fa1f fa82 	uxth.w	sl, r2
 80257d8:	eba6 060a 	sub.w	r6, r6, sl
 80257dc:	881b      	ldrh	r3, [r3, #0]
 80257de:	b2b6      	uxth	r6, r6
 80257e0:	2e00      	cmp	r6, #0
 80257e2:	eba3 0302 	sub.w	r3, r3, r2
 80257e6:	9d04      	ldr	r5, [sp, #16]
 80257e8:	bf18      	it	ne
 80257ea:	f04f 0a00 	movne.w	sl, #0
 80257ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80257f2:	e757      	b.n	80256a4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 80257f4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80257f8:	431a      	orrs	r2, r3
 80257fa:	4586      	cmp	lr, r0
 80257fc:	f820 2c02 	strh.w	r2, [r0, #-2]
 8025800:	d1ab      	bne.n	802575a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8025802:	e7e0      	b.n	80257c6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23e>
 8025804:	9d04      	ldr	r5, [sp, #16]
 8025806:	f8dd a01c 	ldr.w	sl, [sp, #28]
 802580a:	e74b      	b.n	80256a4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 802580c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8025810:	e7da      	b.n	80257c8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8025812:	ebaa 0405 	sub.w	r4, sl, r5
 8025816:	b2a4      	uxth	r4, r4
 8025818:	462b      	mov	r3, r5
 802581a:	9604      	str	r6, [sp, #16]
 802581c:	9407      	str	r4, [sp, #28]
 802581e:	e765      	b.n	80256ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x164>
 8025820:	1bad      	subs	r5, r5, r6
 8025822:	b2ad      	uxth	r5, r5
 8025824:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 8025828:	2600      	movs	r6, #0
 802582a:	e73b      	b.n	80256a4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 802582c:	460b      	mov	r3, r1
 802582e:	3302      	adds	r3, #2
 8025830:	784d      	ldrb	r5, [r1, #1]
 8025832:	9300      	str	r3, [sp, #0]
 8025834:	e72f      	b.n	8025696 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8025836:	9a01      	ldr	r2, [sp, #4]
 8025838:	7b12      	ldrb	r2, [r2, #12]
 802583a:	3a01      	subs	r2, #1
 802583c:	2a01      	cmp	r2, #1
 802583e:	d954      	bls.n	80258ea <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x362>
 8025840:	4a34      	ldr	r2, [pc, #208]	@ (8025914 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x38c>)
 8025842:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8025846:	ea02 2b0b 	and.w	fp, r2, fp, lsl #8
 802584a:	ea4b 08d8 	orr.w	r8, fp, r8, lsr #3
 802584e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8025852:	ea48 0809 	orr.w	r8, r8, r9
 8025856:	fa1f fe88 	uxth.w	lr, r8
 802585a:	2b00      	cmp	r3, #0
 802585c:	d0b4      	beq.n	80257c8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 802585e:	1e5a      	subs	r2, r3, #1
 8025860:	fa1f fb82 	uxth.w	fp, r2
 8025864:	f1bb 0f04 	cmp.w	fp, #4
 8025868:	f3c0 0140 	ubfx	r1, r0, #1, #1
 802586c:	d945      	bls.n	80258fa <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x372>
 802586e:	2900      	cmp	r1, #0
 8025870:	d040      	beq.n	80258f4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 8025872:	46d8      	mov	r8, fp
 8025874:	f8a0 e000 	strh.w	lr, [r0]
 8025878:	f100 0902 	add.w	r9, r0, #2
 802587c:	2700      	movs	r7, #0
 802587e:	1a5b      	subs	r3, r3, r1
 8025880:	463a      	mov	r2, r7
 8025882:	fa1f fc83 	uxth.w	ip, r3
 8025886:	f36e 070f 	bfi	r7, lr, #0, #16
 802588a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 802588e:	ea4f 035c 	mov.w	r3, ip, lsr #1
 8025892:	f36e 471f 	bfi	r7, lr, #16, #16
 8025896:	3201      	adds	r2, #1
 8025898:	b294      	uxth	r4, r2
 802589a:	42a3      	cmp	r3, r4
 802589c:	f841 7b04 	str.w	r7, [r1], #4
 80258a0:	d8f9      	bhi.n	8025896 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x30e>
 80258a2:	f02c 0201 	bic.w	r2, ip, #1
 80258a6:	b292      	uxth	r2, r2
 80258a8:	eba8 0302 	sub.w	r3, r8, r2
 80258ac:	4562      	cmp	r2, ip
 80258ae:	b29b      	uxth	r3, r3
 80258b0:	eb09 0142 	add.w	r1, r9, r2, lsl #1
 80258b4:	d014      	beq.n	80258e0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 80258b6:	1e5a      	subs	r2, r3, #1
 80258b8:	b292      	uxth	r2, r2
 80258ba:	f8a1 e000 	strh.w	lr, [r1]
 80258be:	b17a      	cbz	r2, 80258e0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 80258c0:	1e9a      	subs	r2, r3, #2
 80258c2:	b292      	uxth	r2, r2
 80258c4:	f8a1 e002 	strh.w	lr, [r1, #2]
 80258c8:	b152      	cbz	r2, 80258e0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 80258ca:	1eda      	subs	r2, r3, #3
 80258cc:	b292      	uxth	r2, r2
 80258ce:	f8a1 e004 	strh.w	lr, [r1, #4]
 80258d2:	b12a      	cbz	r2, 80258e0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 80258d4:	2b04      	cmp	r3, #4
 80258d6:	f8a1 e006 	strh.w	lr, [r1, #6]
 80258da:	d001      	beq.n	80258e0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 80258dc:	f8a1 e008 	strh.w	lr, [r1, #8]
 80258e0:	f10b 0b01 	add.w	fp, fp, #1
 80258e4:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 80258e8:	e76e      	b.n	80257c8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 80258ea:	ea48 2809 	orr.w	r8, r8, r9, lsl #8
 80258ee:	fa1f fe88 	uxth.w	lr, r8
 80258f2:	e7b2      	b.n	802585a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 80258f4:	4681      	mov	r9, r0
 80258f6:	4698      	mov	r8, r3
 80258f8:	e7c0      	b.n	802587c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f4>
 80258fa:	4601      	mov	r1, r0
 80258fc:	e7dc      	b.n	80258b8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x330>
 80258fe:	4b06      	ldr	r3, [pc, #24]	@ (8025918 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x390>)
 8025900:	4a06      	ldr	r2, [pc, #24]	@ (802591c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 8025902:	f44f 61aa 	mov.w	r1, #1360	@ 0x550
 8025906:	4806      	ldr	r0, [pc, #24]	@ (8025920 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 8025908:	f00c fdbe 	bl	8032488 <__assert_func>
 802590c:	20082ec4 	.word	0x20082ec4
 8025910:	20082ebe 	.word	0x20082ebe
 8025914:	fffff800 	.word	0xfffff800
 8025918:	0803633c 	.word	0x0803633c
 802591c:	08037938 	.word	0x08037938
 8025920:	08036248 	.word	0x08036248

08025924 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8025924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025928:	b09f      	sub	sp, #124	@ 0x7c
 802592a:	9201      	str	r2, [sp, #4]
 802592c:	461c      	mov	r4, r3
 802592e:	7812      	ldrb	r2, [r2, #0]
 8025930:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8025934:	9116      	str	r1, [sp, #88]	@ 0x58
 8025936:	9305      	str	r3, [sp, #20]
 8025938:	2a00      	cmp	r2, #0
 802593a:	f040 823c 	bne.w	8025db6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x492>
 802593e:	b913      	cbnz	r3, 8025946 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 8025940:	b01f      	add	sp, #124	@ 0x7c
 8025942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025946:	6861      	ldr	r1, [r4, #4]
 8025948:	4683      	mov	fp, r0
 802594a:	6820      	ldr	r0, [r4, #0]
 802594c:	ab1a      	add	r3, sp, #104	@ 0x68
 802594e:	c303      	stmia	r3!, {r0, r1}
 8025950:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8025952:	6818      	ldr	r0, [r3, #0]
 8025954:	6859      	ldr	r1, [r3, #4]
 8025956:	ab1c      	add	r3, sp, #112	@ 0x70
 8025958:	c303      	stmia	r3!, {r0, r1}
 802595a:	a81a      	add	r0, sp, #104	@ 0x68
 802595c:	f7e7 f9b8 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025960:	4621      	mov	r1, r4
 8025962:	a81c      	add	r0, sp, #112	@ 0x70
 8025964:	f7e7 f9dc 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025968:	f9bd 106c 	ldrsh.w	r1, [sp, #108]	@ 0x6c
 802596c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8025970:	f340 8152 	ble.w	8025c18 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f4>
 8025974:	2301      	movs	r3, #1
 8025976:	b289      	uxth	r1, r1
 8025978:	9318      	str	r3, [sp, #96]	@ 0x60
 802597a:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 802597e:	f9bd 206e 	ldrsh.w	r2, [sp, #110]	@ 0x6e
 8025982:	fb90 f4f3 	sdiv	r4, r0, r3
 8025986:	441a      	add	r2, r3
 8025988:	3a01      	subs	r2, #1
 802598a:	fb92 f2f3 	sdiv	r2, r2, r3
 802598e:	b2a4      	uxth	r4, r4
 8025990:	fb03 0314 	mls	r3, r3, r4, r0
 8025994:	9417      	str	r4, [sp, #92]	@ 0x5c
 8025996:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 802599a:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 802599e:	fb13 4101 	smlabb	r1, r3, r1, r4
 80259a2:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 80259a6:	4bbb      	ldr	r3, [pc, #748]	@ (8025c94 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 80259a8:	4434      	add	r4, r6
 80259aa:	4405      	add	r5, r0
 80259ac:	6818      	ldr	r0, [r3, #0]
 80259ae:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 80259b2:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 80259b6:	f9bd 6074 	ldrsh.w	r6, [sp, #116]	@ 0x74
 80259ba:	6803      	ldr	r3, [r0, #0]
 80259bc:	3201      	adds	r2, #1
 80259be:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80259c0:	960b      	str	r6, [sp, #44]	@ 0x2c
 80259c2:	fa1f fa81 	uxth.w	sl, r1
 80259c6:	b294      	uxth	r4, r2
 80259c8:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 80259cc:	4798      	blx	r3
 80259ce:	2300      	movs	r3, #0
 80259d0:	f1ba 0f00 	cmp.w	sl, #0
 80259d4:	bf0c      	ite	eq
 80259d6:	4632      	moveq	r2, r6
 80259d8:	2200      	movne	r2, #0
 80259da:	49af      	ldr	r1, [pc, #700]	@ (8025c98 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 80259dc:	9315      	str	r3, [sp, #84]	@ 0x54
 80259de:	8809      	ldrh	r1, [r1, #0]
 80259e0:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 80259e4:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 80259e8:	fb01 f505 	mul.w	r5, r1, r5
 80259ec:	fb01 6303 	mla	r3, r1, r3, r6
 80259f0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80259f4:	9300      	str	r3, [sp, #0]
 80259f6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80259fa:	9307      	str	r3, [sp, #28]
 80259fc:	b293      	uxth	r3, r2
 80259fe:	9302      	str	r3, [sp, #8]
 8025a00:	f10b 030e 	add.w	r3, fp, #14
 8025a04:	9319      	str	r3, [sp, #100]	@ 0x64
 8025a06:	465b      	mov	r3, fp
 8025a08:	46d3      	mov	fp, sl
 8025a0a:	469a      	mov	sl, r3
 8025a0c:	00a4      	lsls	r4, r4, #2
 8025a0e:	1d21      	adds	r1, r4, #4
 8025a10:	9113      	str	r1, [sp, #76]	@ 0x4c
 8025a12:	9b07      	ldr	r3, [sp, #28]
 8025a14:	9a00      	ldr	r2, [sp, #0]
 8025a16:	4293      	cmp	r3, r2
 8025a18:	f240 8134 	bls.w	8025c84 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025a1c:	2601      	movs	r6, #1
 8025a1e:	2700      	movs	r7, #0
 8025a20:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8025a22:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8025a24:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8025a28:	fa11 f482 	uxtah	r4, r1, r2
 8025a2c:	00a4      	lsls	r4, r4, #2
 8025a2e:	9a01      	ldr	r2, [sp, #4]
 8025a30:	3404      	adds	r4, #4
 8025a32:	1911      	adds	r1, r2, r4
 8025a34:	788a      	ldrb	r2, [r1, #2]
 8025a36:	784d      	ldrb	r5, [r1, #1]
 8025a38:	0212      	lsls	r2, r2, #8
 8025a3a:	78c9      	ldrb	r1, [r1, #3]
 8025a3c:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 8025a40:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8025a42:	4308      	orrs	r0, r1
 8025a44:	4629      	mov	r1, r5
 8025a46:	fbbb f3f3 	udiv	r3, fp, r3
 8025a4a:	46bc      	mov	ip, r7
 8025a4c:	46b1      	mov	r9, r6
 8025a4e:	4401      	add	r1, r0
 8025a50:	784a      	ldrb	r2, [r1, #1]
 8025a52:	5c28      	ldrb	r0, [r5, r0]
 8025a54:	0212      	lsls	r2, r2, #8
 8025a56:	9d01      	ldr	r5, [sp, #4]
 8025a58:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8025a5c:	4302      	orrs	r2, r0
 8025a5e:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8025a60:	5d2c      	ldrb	r4, [r5, r4]
 8025a62:	f88a 200d 	strb.w	r2, [sl, #13]
 8025a66:	b292      	uxth	r2, r2
 8025a68:	1ac3      	subs	r3, r0, r3
 8025a6a:	9209      	str	r2, [sp, #36]	@ 0x24
 8025a6c:	198a      	adds	r2, r1, r6
 8025a6e:	9203      	str	r2, [sp, #12]
 8025a70:	b29b      	uxth	r3, r3
 8025a72:	19a2      	adds	r2, r4, r6
 8025a74:	9712      	str	r7, [sp, #72]	@ 0x48
 8025a76:	960a      	str	r6, [sp, #40]	@ 0x28
 8025a78:	940e      	str	r4, [sp, #56]	@ 0x38
 8025a7a:	9206      	str	r2, [sp, #24]
 8025a7c:	9314      	str	r3, [sp, #80]	@ 0x50
 8025a7e:	9604      	str	r6, [sp, #16]
 8025a80:	f1bb 0f00 	cmp.w	fp, #0
 8025a84:	d037      	beq.n	8025af6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8025a86:	45d9      	cmp	r9, fp
 8025a88:	f080 80ce 	bcs.w	8025c28 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8025a8c:	ebab 0b09 	sub.w	fp, fp, r9
 8025a90:	fa1f fb8b 	uxth.w	fp, fp
 8025a94:	9b07      	ldr	r3, [sp, #28]
 8025a96:	9a00      	ldr	r2, [sp, #0]
 8025a98:	4293      	cmp	r3, r2
 8025a9a:	f240 80f3 	bls.w	8025c84 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025a9e:	9803      	ldr	r0, [sp, #12]
 8025aa0:	9c04      	ldr	r4, [sp, #16]
 8025aa2:	7842      	ldrb	r2, [r0, #1]
 8025aa4:	f1c4 0107 	rsb	r1, r4, #7
 8025aa8:	7803      	ldrb	r3, [r0, #0]
 8025aaa:	408a      	lsls	r2, r1
 8025aac:	0052      	lsls	r2, r2, #1
 8025aae:	4123      	asrs	r3, r4
 8025ab0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8025ab4:	1c61      	adds	r1, r4, #1
 8025ab6:	b2db      	uxtb	r3, r3
 8025ab8:	4313      	orrs	r3, r2
 8025aba:	b2ca      	uxtb	r2, r1
 8025abc:	4611      	mov	r1, r2
 8025abe:	2908      	cmp	r1, #8
 8025ac0:	9204      	str	r2, [sp, #16]
 8025ac2:	b29a      	uxth	r2, r3
 8025ac4:	f000 811a 	beq.w	8025cfc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 8025ac8:	3001      	adds	r0, #1
 8025aca:	9003      	str	r0, [sp, #12]
 8025acc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8025ace:	4291      	cmp	r1, r2
 8025ad0:	f0c0 80e6 	bcc.w	8025ca0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x37c>
 8025ad4:	f04f 0901 	mov.w	r9, #1
 8025ad8:	b2db      	uxtb	r3, r3
 8025ada:	f88a 300d 	strb.w	r3, [sl, #13]
 8025ade:	9906      	ldr	r1, [sp, #24]
 8025ae0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8025ae4:	f0c0 8132 	bcc.w	8025d4c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x428>
 8025ae8:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 8025aec:	f04f 0c00 	mov.w	ip, #0
 8025af0:	f1bb 0f00 	cmp.w	fp, #0
 8025af4:	d1c7      	bne.n	8025a86 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x162>
 8025af6:	9b02      	ldr	r3, [sp, #8]
 8025af8:	4599      	cmp	r9, r3
 8025afa:	461a      	mov	r2, r3
 8025afc:	f0c0 80f0 	bcc.w	8025ce0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3bc>
 8025b00:	eba9 0303 	sub.w	r3, r9, r3
 8025b04:	b29b      	uxth	r3, r3
 8025b06:	930c      	str	r3, [sp, #48]	@ 0x30
 8025b08:	2a00      	cmp	r2, #0
 8025b0a:	f000 80fd 	beq.w	8025d08 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3e4>
 8025b0e:	4613      	mov	r3, r2
 8025b10:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
 8025b14:	9208      	str	r2, [sp, #32]
 8025b16:	4463      	add	r3, ip
 8025b18:	b29b      	uxth	r3, r3
 8025b1a:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 8025b1e:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 8025b22:	f8dd e000 	ldr.w	lr, [sp]
 8025b26:	930d      	str	r3, [sp, #52]	@ 0x34
 8025b28:	f8dd 904c 	ldr.w	r9, [sp, #76]	@ 0x4c
 8025b2c:	469b      	mov	fp, r3
 8025b2e:	e048      	b.n	8025bc2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 8025b30:	9905      	ldr	r1, [sp, #20]
 8025b32:	f8be 5000 	ldrh.w	r5, [lr]
 8025b36:	fb01 f202 	mul.w	r2, r1, r2
 8025b3a:	1c50      	adds	r0, r2, #1
 8025b3c:	eb00 2022 	add.w	r0, r0, r2, asr #8
 8025b40:	1200      	asrs	r0, r0, #8
 8025b42:	43c4      	mvns	r4, r0
 8025b44:	b280      	uxth	r0, r0
 8025b46:	b2ff      	uxtb	r7, r7
 8025b48:	fb13 f300 	smulbb	r3, r3, r0
 8025b4c:	fb17 f700 	smulbb	r7, r7, r0
 8025b50:	00e9      	lsls	r1, r5, #3
 8025b52:	b2c9      	uxtb	r1, r1
 8025b54:	10ea      	asrs	r2, r5, #3
 8025b56:	b2e4      	uxtb	r4, r4
 8025b58:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8025b5c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025b60:	fb01 3304 	mla	r3, r1, r4, r3
 8025b64:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8025b68:	fb02 7704 	mla	r7, r2, r4, r7
 8025b6c:	b29b      	uxth	r3, r3
 8025b6e:	b2bf      	uxth	r7, r7
 8025b70:	1c59      	adds	r1, r3, #1
 8025b72:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025b76:	1c7a      	adds	r2, r7, #1
 8025b78:	2e01      	cmp	r6, #1
 8025b7a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025b7e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8025b82:	d966      	bls.n	8025c52 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x32e>
 8025b84:	fa5f f888 	uxtb.w	r8, r8
 8025b88:	fb18 f800 	smulbb	r8, r8, r0
 8025b8c:	122d      	asrs	r5, r5, #8
 8025b8e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8025b92:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8025b96:	fb05 8804 	mla	r8, r5, r4, r8
 8025b9a:	fa1f f888 	uxth.w	r8, r8
 8025b9e:	f108 0101 	add.w	r1, r8, #1
 8025ba2:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 8025ba6:	097f      	lsrs	r7, r7, #5
 8025ba8:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025bac:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025bb0:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025bb4:	433b      	orrs	r3, r7
 8025bb6:	f8ae 3000 	strh.w	r3, [lr]
 8025bba:	45dc      	cmp	ip, fp
 8025bbc:	f10e 0e02 	add.w	lr, lr, #2
 8025bc0:	d04b      	beq.n	8025c5a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x336>
 8025bc2:	2204      	movs	r2, #4
 8025bc4:	eb0a 030c 	add.w	r3, sl, ip
 8025bc8:	7b5b      	ldrb	r3, [r3, #13]
 8025bca:	f10c 0c01 	add.w	ip, ip, #1
 8025bce:	fb12 9303 	smlabb	r3, r2, r3, r9
 8025bd2:	9a01      	ldr	r2, [sp, #4]
 8025bd4:	fa1f fc8c 	uxth.w	ip, ip
 8025bd8:	58d3      	ldr	r3, [r2, r3]
 8025bda:	0e1a      	lsrs	r2, r3, #24
 8025bdc:	d0ed      	beq.n	8025bba <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x296>
 8025bde:	f89a 600c 	ldrb.w	r6, [sl, #12]
 8025be2:	2aff      	cmp	r2, #255	@ 0xff
 8025be4:	f106 36ff 	add.w	r6, r6, #4294967295
 8025be8:	ea4f 4813 	mov.w	r8, r3, lsr #16
 8025bec:	ea4f 2713 	mov.w	r7, r3, lsr #8
 8025bf0:	b2f6      	uxtb	r6, r6
 8025bf2:	b2db      	uxtb	r3, r3
 8025bf4:	d19c      	bne.n	8025b30 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8025bf6:	9905      	ldr	r1, [sp, #20]
 8025bf8:	29ff      	cmp	r1, #255	@ 0xff
 8025bfa:	d199      	bne.n	8025b30 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8025bfc:	2e01      	cmp	r6, #1
 8025bfe:	f240 80c4 	bls.w	8025d8a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x466>
 8025c02:	4a26      	ldr	r2, [pc, #152]	@ (8025c9c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 8025c04:	00ff      	lsls	r7, r7, #3
 8025c06:	ea02 2808 	and.w	r8, r2, r8, lsl #8
 8025c0a:	ea48 03d3 	orr.w	r3, r8, r3, lsr #3
 8025c0e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025c12:	433b      	orrs	r3, r7
 8025c14:	b29b      	uxth	r3, r3
 8025c16:	e7ce      	b.n	8025bb6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025c18:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8025c1c:	b289      	uxth	r1, r1
 8025c1e:	fb93 f3f1 	sdiv	r3, r3, r1
 8025c22:	b29a      	uxth	r2, r3
 8025c24:	9218      	str	r2, [sp, #96]	@ 0x60
 8025c26:	e6a8      	b.n	802597a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x56>
 8025c28:	eba9 090b 	sub.w	r9, r9, fp
 8025c2c:	44dc      	add	ip, fp
 8025c2e:	f04f 0b00 	mov.w	fp, #0
 8025c32:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8025c36:	fa1f f989 	uxth.w	r9, r9
 8025c3a:	fa1f fc8c 	uxth.w	ip, ip
 8025c3e:	9302      	str	r3, [sp, #8]
 8025c40:	9b07      	ldr	r3, [sp, #28]
 8025c42:	9a00      	ldr	r2, [sp, #0]
 8025c44:	4293      	cmp	r3, r2
 8025c46:	d91d      	bls.n	8025c84 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025c48:	f1b9 0f00 	cmp.w	r9, #0
 8025c4c:	f47f af18 	bne.w	8025a80 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8025c50:	e725      	b.n	8025a9e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8025c52:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8025c56:	433b      	orrs	r3, r7
 8025c58:	e7ad      	b.n	8025bb6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025c5a:	9b08      	ldr	r3, [sp, #32]
 8025c5c:	9a00      	ldr	r2, [sp, #0]
 8025c5e:	3b01      	subs	r3, #1
 8025c60:	b29b      	uxth	r3, r3
 8025c62:	3301      	adds	r3, #1
 8025c64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025c68:	9300      	str	r3, [sp, #0]
 8025c6a:	9b02      	ldr	r3, [sp, #8]
 8025c6c:	e9dd 9b0f 	ldrd	r9, fp, [sp, #60]	@ 0x3c
 8025c70:	4599      	cmp	r9, r3
 8025c72:	d24b      	bcs.n	8025d0c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3e8>
 8025c74:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 8025c78:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8025c7a:	9a00      	ldr	r2, [sp, #0]
 8025c7c:	9302      	str	r3, [sp, #8]
 8025c7e:	9b07      	ldr	r3, [sp, #28]
 8025c80:	4293      	cmp	r3, r2
 8025c82:	d8e1      	bhi.n	8025c48 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x324>
 8025c84:	4b03      	ldr	r3, [pc, #12]	@ (8025c94 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 8025c86:	6818      	ldr	r0, [r3, #0]
 8025c88:	6803      	ldr	r3, [r0, #0]
 8025c8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025c8c:	4798      	blx	r3
 8025c8e:	b01f      	add	sp, #124	@ 0x7c
 8025c90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025c94:	20082ec4 	.word	0x20082ec4
 8025c98:	20082ebe 	.word	0x20082ebe
 8025c9c:	fffff800 	.word	0xfffff800
 8025ca0:	9b06      	ldr	r3, [sp, #24]
 8025ca2:	429a      	cmp	r2, r3
 8025ca4:	d355      	bcc.n	8025d52 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x42e>
 8025ca6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8025ca8:	f89a 100d 	ldrb.w	r1, [sl, #13]
 8025cac:	eb0a 0300 	add.w	r3, sl, r0
 8025cb0:	7359      	strb	r1, [r3, #13]
 8025cb2:	f89a 300d 	ldrb.w	r3, [sl, #13]
 8025cb6:	1c41      	adds	r1, r0, #1
 8025cb8:	fa1f f981 	uxth.w	r9, r1
 8025cbc:	9c06      	ldr	r4, [sp, #24]
 8025cbe:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025cc0:	eb0a 0084 	add.w	r0, sl, r4, lsl #2
 8025cc4:	3401      	adds	r4, #1
 8025cc6:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8025cca:	b2a3      	uxth	r3, r4
 8025ccc:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8025cd0:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8025cd4:	9306      	str	r3, [sp, #24]
 8025cd6:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 8025cda:	f04f 0c00 	mov.w	ip, #0
 8025cde:	e6cf      	b.n	8025a80 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8025ce0:	eba3 0309 	sub.w	r3, r3, r9
 8025ce4:	b29b      	uxth	r3, r3
 8025ce6:	9311      	str	r3, [sp, #68]	@ 0x44
 8025ce8:	f1b9 0f00 	cmp.w	r9, #0
 8025cec:	f43f aed2 	beq.w	8025a94 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8025cf0:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8025cf4:	f8cd 9020 	str.w	r9, [sp, #32]
 8025cf8:	464b      	mov	r3, r9
 8025cfa:	e70c      	b.n	8025b16 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8025cfc:	2100      	movs	r1, #0
 8025cfe:	9104      	str	r1, [sp, #16]
 8025d00:	9903      	ldr	r1, [sp, #12]
 8025d02:	3102      	adds	r1, #2
 8025d04:	9103      	str	r1, [sp, #12]
 8025d06:	e6e1      	b.n	8025acc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8025d08:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 8025d0c:	4b2d      	ldr	r3, [pc, #180]	@ (8025dc4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a0>)
 8025d0e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8025d10:	881b      	ldrh	r3, [r3, #0]
 8025d12:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8025d14:	1a5b      	subs	r3, r3, r1
 8025d16:	9900      	ldr	r1, [sp, #0]
 8025d18:	3201      	adds	r2, #1
 8025d1a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8025d1e:	9300      	str	r3, [sp, #0]
 8025d20:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8025d22:	9212      	str	r2, [sp, #72]	@ 0x48
 8025d24:	429a      	cmp	r2, r3
 8025d26:	d034      	beq.n	8025d92 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x46e>
 8025d28:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 8025d2c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8025d30:	f8bd b06c 	ldrh.w	fp, [sp, #108]	@ 0x6c
 8025d34:	ebab 0b03 	sub.w	fp, fp, r3
 8025d38:	fa1f fb8b 	uxth.w	fp, fp
 8025d3c:	f1bb 0f00 	cmp.w	fp, #0
 8025d40:	bf14      	ite	ne
 8025d42:	2300      	movne	r3, #0
 8025d44:	f04f 0b00 	moveq.w	fp, #0
 8025d48:	9302      	str	r3, [sp, #8]
 8025d4a:	e779      	b.n	8025c40 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8025d4c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8025d4e:	3101      	adds	r1, #1
 8025d50:	e7b4      	b.n	8025cbc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>
 8025d52:	eb0a 0382 	add.w	r3, sl, r2, lsl #2
 8025d56:	f893 904f 	ldrb.w	r9, [r3, #79]	@ 0x4f
 8025d5a:	4613      	mov	r3, r2
 8025d5c:	f1b9 0f01 	cmp.w	r9, #1
 8025d60:	d90d      	bls.n	8025d7e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x45a>
 8025d62:	f109 010d 	add.w	r1, r9, #13
 8025d66:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8025d68:	4451      	add	r1, sl
 8025d6a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8025d6e:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8025d72:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8025d76:	428c      	cmp	r4, r1
 8025d78:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8025d7c:	d1f5      	bne.n	8025d6a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x446>
 8025d7e:	b2db      	uxtb	r3, r3
 8025d80:	f88a 300d 	strb.w	r3, [sl, #13]
 8025d84:	fa1f f989 	uxth.w	r9, r9
 8025d88:	e6a9      	b.n	8025ade <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8025d8a:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
 8025d8e:	b29b      	uxth	r3, r3
 8025d90:	e711      	b.n	8025bb6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025d92:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8025d96:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 8025d9a:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8025d9c:	1a9b      	subs	r3, r3, r2
 8025d9e:	fa1f fb83 	uxth.w	fp, r3
 8025da2:	f1bb 0f00 	cmp.w	fp, #0
 8025da6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025da8:	bf18      	it	ne
 8025daa:	2300      	movne	r3, #0
 8025dac:	3101      	adds	r1, #1
 8025dae:	b29b      	uxth	r3, r3
 8025db0:	9115      	str	r1, [sp, #84]	@ 0x54
 8025db2:	9302      	str	r3, [sp, #8]
 8025db4:	e62d      	b.n	8025a12 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xee>
 8025db6:	4b04      	ldr	r3, [pc, #16]	@ (8025dc8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a4>)
 8025db8:	4a04      	ldr	r2, [pc, #16]	@ (8025dcc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a8>)
 8025dba:	f240 51f3 	movw	r1, #1523	@ 0x5f3
 8025dbe:	4804      	ldr	r0, [pc, #16]	@ (8025dd0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4ac>)
 8025dc0:	f00c fb62 	bl	8032488 <__assert_func>
 8025dc4:	20082ebe 	.word	0x20082ebe
 8025dc8:	0803633c 	.word	0x0803633c
 8025dcc:	08037c04 	.word	0x08037c04
 8025dd0:	08036248 	.word	0x08036248

08025dd4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8025dd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025dd8:	4691      	mov	r9, r2
 8025dda:	8812      	ldrh	r2, [r2, #0]
 8025ddc:	b093      	sub	sp, #76	@ 0x4c
 8025dde:	2a01      	cmp	r2, #1
 8025de0:	f89d 4074 	ldrb.w	r4, [sp, #116]	@ 0x74
 8025de4:	f040 8129 	bne.w	802603a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x266>
 8025de8:	b914      	cbnz	r4, 8025df0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c>
 8025dea:	b013      	add	sp, #76	@ 0x4c
 8025dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025df0:	461d      	mov	r5, r3
 8025df2:	468a      	mov	sl, r1
 8025df4:	6818      	ldr	r0, [r3, #0]
 8025df6:	6859      	ldr	r1, [r3, #4]
 8025df8:	ab0e      	add	r3, sp, #56	@ 0x38
 8025dfa:	c303      	stmia	r3!, {r0, r1}
 8025dfc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025dfe:	6818      	ldr	r0, [r3, #0]
 8025e00:	6859      	ldr	r1, [r3, #4]
 8025e02:	ab10      	add	r3, sp, #64	@ 0x40
 8025e04:	c303      	stmia	r3!, {r0, r1}
 8025e06:	a80e      	add	r0, sp, #56	@ 0x38
 8025e08:	f7e6 ff62 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025e0c:	4629      	mov	r1, r5
 8025e0e:	a810      	add	r0, sp, #64	@ 0x40
 8025e10:	f7e6 ff86 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025e14:	f9bd 5040 	ldrsh.w	r5, [sp, #64]	@ 0x40
 8025e18:	f9bd 6042 	ldrsh.w	r6, [sp, #66]	@ 0x42
 8025e1c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8025e20:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8025e24:	488b      	ldr	r0, [pc, #556]	@ (8026054 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 8025e26:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8025e2a:	442a      	add	r2, r5
 8025e2c:	4433      	add	r3, r6
 8025e2e:	6800      	ldr	r0, [r0, #0]
 8025e30:	fb11 5106 	smlabb	r1, r1, r6, r5
 8025e34:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8025e38:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8025e3c:	6802      	ldr	r2, [r0, #0]
 8025e3e:	4e86      	ldr	r6, [pc, #536]	@ (8026058 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x284>)
 8025e40:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8025e44:	448a      	add	sl, r1
 8025e46:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8025e4a:	42b3      	cmp	r3, r6
 8025e4c:	910b      	str	r1, [sp, #44]	@ 0x2c
 8025e4e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8025e52:	f040 80c8 	bne.w	8025fe6 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8025e56:	6841      	ldr	r1, [r0, #4]
 8025e58:	4e80      	ldr	r6, [pc, #512]	@ (802605c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x288>)
 8025e5a:	680b      	ldr	r3, [r1, #0]
 8025e5c:	699b      	ldr	r3, [r3, #24]
 8025e5e:	42b3      	cmp	r3, r6
 8025e60:	f040 80e4 	bne.w	802602c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>
 8025e64:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8025e66:	4798      	blx	r3
 8025e68:	4b7d      	ldr	r3, [pc, #500]	@ (8026060 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8025e6a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8025e6e:	881b      	ldrh	r3, [r3, #0]
 8025e70:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8025e74:	2cff      	cmp	r4, #255	@ 0xff
 8025e76:	fb03 1202 	mla	r2, r3, r2, r1
 8025e7a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8025e7e:	d06f      	beq.n	8025f60 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8025e80:	43e2      	mvns	r2, r4
 8025e82:	fb05 f503 	mul.w	r5, r5, r3
 8025e86:	eb00 0145 	add.w	r1, r0, r5, lsl #1
 8025e8a:	4288      	cmp	r0, r1
 8025e8c:	910c      	str	r1, [sp, #48]	@ 0x30
 8025e8e:	b2d2      	uxtb	r2, r2
 8025e90:	d25e      	bcs.n	8025f50 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 8025e92:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8025e94:	fa1f f884 	uxth.w	r8, r4
 8025e98:	0049      	lsls	r1, r1, #1
 8025e9a:	b292      	uxth	r2, r2
 8025e9c:	910d      	str	r1, [sp, #52]	@ 0x34
 8025e9e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8025ea0:	eb00 0b01 	add.w	fp, r0, r1
 8025ea4:	4583      	cmp	fp, r0
 8025ea6:	d948      	bls.n	8025f3a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x166>
 8025ea8:	4684      	mov	ip, r0
 8025eaa:	f10a 3eff 	add.w	lr, sl, #4294967295
 8025eae:	2103      	movs	r1, #3
 8025eb0:	2404      	movs	r4, #4
 8025eb2:	f81e 6f01 	ldrb.w	r6, [lr, #1]!
 8025eb6:	f8bc 3000 	ldrh.w	r3, [ip]
 8025eba:	fb11 4606 	smlabb	r6, r1, r6, r4
 8025ebe:	eb09 0106 	add.w	r1, r9, r6
 8025ec2:	788d      	ldrb	r5, [r1, #2]
 8025ec4:	784f      	ldrb	r7, [r1, #1]
 8025ec6:	00dc      	lsls	r4, r3, #3
 8025ec8:	b2e4      	uxtb	r4, r4
 8025eca:	fb14 f402 	smulbb	r4, r4, r2
 8025ece:	fb15 f508 	smulbb	r5, r5, r8
 8025ed2:	fb17 f708 	smulbb	r7, r7, r8
 8025ed6:	f819 6006 	ldrb.w	r6, [r9, r6]
 8025eda:	1219      	asrs	r1, r3, #8
 8025edc:	10db      	asrs	r3, r3, #3
 8025ede:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025ee2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8025ee6:	fb06 4608 	mla	r6, r6, r8, r4
 8025eea:	fb01 5102 	mla	r1, r1, r2, r5
 8025eee:	fb03 7302 	mla	r3, r3, r2, r7
 8025ef2:	b2b6      	uxth	r6, r6
 8025ef4:	b29b      	uxth	r3, r3
 8025ef6:	b28d      	uxth	r5, r1
 8025ef8:	1c5c      	adds	r4, r3, #1
 8025efa:	1c69      	adds	r1, r5, #1
 8025efc:	1c77      	adds	r7, r6, #1
 8025efe:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8025f02:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 8025f06:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8025f0a:	f401 4378 	and.w	r3, r1, #63488	@ 0xf800
 8025f0e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8025f12:	0961      	lsrs	r1, r4, #5
 8025f14:	4333      	orrs	r3, r6
 8025f16:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025f1a:	430b      	orrs	r3, r1
 8025f1c:	f82c 3b02 	strh.w	r3, [ip], #2
 8025f20:	45e3      	cmp	fp, ip
 8025f22:	d8c4      	bhi.n	8025eae <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8025f24:	43c3      	mvns	r3, r0
 8025f26:	449b      	add	fp, r3
 8025f28:	4b4d      	ldr	r3, [pc, #308]	@ (8026060 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8025f2a:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
 8025f2e:	f10b 0b01 	add.w	fp, fp, #1
 8025f32:	881b      	ldrh	r3, [r3, #0]
 8025f34:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 8025f38:	44da      	add	sl, fp
 8025f3a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8025f3c:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8025f40:	1b5c      	subs	r4, r3, r5
 8025f42:	1b49      	subs	r1, r1, r5
 8025f44:	448a      	add	sl, r1
 8025f46:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8025f48:	eb00 0044 	add.w	r0, r0, r4, lsl #1
 8025f4c:	4281      	cmp	r1, r0
 8025f4e:	d8a6      	bhi.n	8025e9e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xca>
 8025f50:	4b40      	ldr	r3, [pc, #256]	@ (8026054 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 8025f52:	6818      	ldr	r0, [r3, #0]
 8025f54:	6803      	ldr	r3, [r0, #0]
 8025f56:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025f58:	4798      	blx	r3
 8025f5a:	b013      	add	sp, #76	@ 0x4c
 8025f5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025f60:	fb05 f503 	mul.w	r5, r5, r3
 8025f64:	eb00 0e45 	add.w	lr, r0, r5, lsl #1
 8025f68:	4570      	cmp	r0, lr
 8025f6a:	d2f1      	bcs.n	8025f50 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 8025f6c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025f6e:	f04f 0c03 	mov.w	ip, #3
 8025f72:	2704      	movs	r7, #4
 8025f74:	4693      	mov	fp, r2
 8025f76:	0051      	lsls	r1, r2, #1
 8025f78:	4e3a      	ldr	r6, [pc, #232]	@ (8026064 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 8025f7a:	910b      	str	r1, [sp, #44]	@ 0x2c
 8025f7c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025f7e:	eb00 0802 	add.w	r8, r0, r2
 8025f82:	4580      	cmp	r8, r0
 8025f84:	d923      	bls.n	8025fce <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1fa>
 8025f86:	4604      	mov	r4, r0
 8025f88:	f10a 35ff 	add.w	r5, sl, #4294967295
 8025f8c:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 8025f90:	fb1c 7202 	smlabb	r2, ip, r2, r7
 8025f94:	eb09 0302 	add.w	r3, r9, r2
 8025f98:	7859      	ldrb	r1, [r3, #1]
 8025f9a:	789b      	ldrb	r3, [r3, #2]
 8025f9c:	00c9      	lsls	r1, r1, #3
 8025f9e:	f819 2002 	ldrb.w	r2, [r9, r2]
 8025fa2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025fa6:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 8025faa:	430b      	orrs	r3, r1
 8025fac:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8025fb0:	f824 3b02 	strh.w	r3, [r4], #2
 8025fb4:	45a0      	cmp	r8, r4
 8025fb6:	d8e9      	bhi.n	8025f8c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 8025fb8:	43c3      	mvns	r3, r0
 8025fba:	4498      	add	r8, r3
 8025fbc:	4b28      	ldr	r3, [pc, #160]	@ (8026060 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8025fbe:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8025fc2:	f108 0801 	add.w	r8, r8, #1
 8025fc6:	881b      	ldrh	r3, [r3, #0]
 8025fc8:	eb00 0048 	add.w	r0, r0, r8, lsl #1
 8025fcc:	44c2      	add	sl, r8
 8025fce:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8025fd2:	eba3 010b 	sub.w	r1, r3, fp
 8025fd6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8025fda:	eba2 020b 	sub.w	r2, r2, fp
 8025fde:	4586      	cmp	lr, r0
 8025fe0:	4492      	add	sl, r2
 8025fe2:	d8cb      	bhi.n	8025f7c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8025fe4:	e7b4      	b.n	8025f50 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 8025fe6:	4798      	blx	r3
 8025fe8:	2801      	cmp	r0, #1
 8025fea:	d122      	bne.n	8026032 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x25e>
 8025fec:	4b1e      	ldr	r3, [pc, #120]	@ (8026068 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x294>)
 8025fee:	6818      	ldr	r0, [r3, #0]
 8025ff0:	b350      	cbz	r0, 8026048 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8025ff2:	2600      	movs	r6, #0
 8025ff4:	270b      	movs	r7, #11
 8025ff6:	4b1a      	ldr	r3, [pc, #104]	@ (8026060 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8025ff8:	b2aa      	uxth	r2, r5
 8025ffa:	881d      	ldrh	r5, [r3, #0]
 8025ffc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8026000:	9404      	str	r4, [sp, #16]
 8026002:	9506      	str	r5, [sp, #24]
 8026004:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 8026008:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 802600c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8026010:	4651      	mov	r1, sl
 8026012:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8026016:	464a      	mov	r2, r9
 8026018:	9608      	str	r6, [sp, #32]
 802601a:	9605      	str	r6, [sp, #20]
 802601c:	9707      	str	r7, [sp, #28]
 802601e:	9503      	str	r5, [sp, #12]
 8026020:	9400      	str	r4, [sp, #0]
 8026022:	f7fa fdc9 	bl	8020bb8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8026026:	b013      	add	sp, #76	@ 0x4c
 8026028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802602c:	4608      	mov	r0, r1
 802602e:	4798      	blx	r3
 8026030:	e7da      	b.n	8025fe8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x214>
 8026032:	4b08      	ldr	r3, [pc, #32]	@ (8026054 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 8026034:	6818      	ldr	r0, [r3, #0]
 8026036:	6802      	ldr	r2, [r0, #0]
 8026038:	e714      	b.n	8025e64 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x90>
 802603a:	4b0c      	ldr	r3, [pc, #48]	@ (802606c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>)
 802603c:	4a0c      	ldr	r2, [pc, #48]	@ (8026070 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x29c>)
 802603e:	f240 61d9 	movw	r1, #1753	@ 0x6d9
 8026042:	480c      	ldr	r0, [pc, #48]	@ (8026074 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a0>)
 8026044:	f00c fa20 	bl	8032488 <__assert_func>
 8026048:	4b0b      	ldr	r3, [pc, #44]	@ (8026078 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a4>)
 802604a:	4a0c      	ldr	r2, [pc, #48]	@ (802607c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a8>)
 802604c:	217c      	movs	r1, #124	@ 0x7c
 802604e:	480c      	ldr	r0, [pc, #48]	@ (8026080 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 8026050:	f00c fa1a 	bl	8032488 <__assert_func>
 8026054:	20082ec4 	.word	0x20082ec4
 8026058:	0800121d 	.word	0x0800121d
 802605c:	0800ba75 	.word	0x0800ba75
 8026060:	20082ebe 	.word	0x20082ebe
 8026064:	fffff800 	.word	0xfffff800
 8026068:	20083364 	.word	0x20083364
 802606c:	0803626c 	.word	0x0803626c
 8026070:	08036ea8 	.word	0x08036ea8
 8026074:	08036248 	.word	0x08036248
 8026078:	080361a4 	.word	0x080361a4
 802607c:	08036a10 	.word	0x08036a10
 8026080:	080361cc 	.word	0x080361cc

08026084 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8026084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026088:	4693      	mov	fp, r2
 802608a:	7812      	ldrb	r2, [r2, #0]
 802608c:	b08d      	sub	sp, #52	@ 0x34
 802608e:	2a01      	cmp	r2, #1
 8026090:	f89d 705c 	ldrb.w	r7, [sp, #92]	@ 0x5c
 8026094:	f040 8252 	bne.w	802653c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4b8>
 8026098:	b917      	cbnz	r7, 80260a0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c>
 802609a:	b00d      	add	sp, #52	@ 0x34
 802609c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80260a0:	461e      	mov	r6, r3
 80260a2:	6818      	ldr	r0, [r3, #0]
 80260a4:	460c      	mov	r4, r1
 80260a6:	6859      	ldr	r1, [r3, #4]
 80260a8:	ab08      	add	r3, sp, #32
 80260aa:	c303      	stmia	r3!, {r0, r1}
 80260ac:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80260ae:	f10b 0b04 	add.w	fp, fp, #4
 80260b2:	6818      	ldr	r0, [r3, #0]
 80260b4:	6859      	ldr	r1, [r3, #4]
 80260b6:	ab0a      	add	r3, sp, #40	@ 0x28
 80260b8:	c303      	stmia	r3!, {r0, r1}
 80260ba:	a808      	add	r0, sp, #32
 80260bc:	f7e6 fe08 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80260c0:	4631      	mov	r1, r6
 80260c2:	a80a      	add	r0, sp, #40	@ 0x28
 80260c4:	f7e6 fe2c 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80260c8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80260cc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80260d0:	f003 0201 	and.w	r2, r3, #1
 80260d4:	4615      	mov	r5, r2
 80260d6:	9204      	str	r2, [sp, #16]
 80260d8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80260dc:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 80260e0:	442b      	add	r3, r5
 80260e2:	fb02 1303 	mla	r3, r2, r3, r1
 80260e6:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 80260ea:	4402      	add	r2, r0
 80260ec:	48b9      	ldr	r0, [pc, #740]	@ (80263d4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x350>)
 80260ee:	440e      	add	r6, r1
 80260f0:	6800      	ldr	r0, [r0, #0]
 80260f2:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80260f6:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 80260fa:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80260fe:	eb04 0363 	add.w	r3, r4, r3, asr #1
 8026102:	6802      	ldr	r2, [r0, #0]
 8026104:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	@ 0x2c
 8026108:	9301      	str	r3, [sp, #4]
 802610a:	f001 0301 	and.w	r3, r1, #1
 802610e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8026110:	9303      	str	r3, [sp, #12]
 8026112:	9502      	str	r5, [sp, #8]
 8026114:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 8026118:	4790      	blx	r2
 802611a:	4baf      	ldr	r3, [pc, #700]	@ (80263d8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 802611c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8026120:	881b      	ldrh	r3, [r3, #0]
 8026122:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8026126:	2fff      	cmp	r7, #255	@ 0xff
 8026128:	fb03 1202 	mla	r2, r3, r2, r1
 802612c:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 8026130:	f000 8154 	beq.w	80263dc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8026134:	ea6f 0c07 	mvn.w	ip, r7
 8026138:	fb03 f404 	mul.w	r4, r3, r4
 802613c:	eb0a 0344 	add.w	r3, sl, r4, lsl #1
 8026140:	459a      	cmp	sl, r3
 8026142:	9306      	str	r3, [sp, #24]
 8026144:	fa5f fc8c 	uxtb.w	ip, ip
 8026148:	f080 80b6 	bcs.w	80262b8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 802614c:	1e6b      	subs	r3, r5, #1
 802614e:	b2bf      	uxth	r7, r7
 8026150:	fa1f fc8c 	uxth.w	ip, ip
 8026154:	9307      	str	r3, [sp, #28]
 8026156:	9b03      	ldr	r3, [sp, #12]
 8026158:	2b00      	cmp	r3, #0
 802615a:	f040 80fc 	bne.w	8026356 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 802615e:	9b01      	ldr	r3, [sp, #4]
 8026160:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8026164:	9300      	str	r3, [sp, #0]
 8026166:	f1b9 0f01 	cmp.w	r9, #1
 802616a:	f340 808e 	ble.w	802628a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x206>
 802616e:	f1a9 0302 	sub.w	r3, r9, #2
 8026172:	ea4f 0953 	mov.w	r9, r3, lsr #1
 8026176:	9305      	str	r3, [sp, #20]
 8026178:	9b00      	ldr	r3, [sp, #0]
 802617a:	f10a 0808 	add.w	r8, sl, #8
 802617e:	eb08 0889 	add.w	r8, r8, r9, lsl #2
 8026182:	f10a 0604 	add.w	r6, sl, #4
 8026186:	f103 3eff 	add.w	lr, r3, #4294967295
 802618a:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
 802618e:	f836 3c04 	ldrh.w	r3, [r6, #-4]
 8026192:	0909      	lsrs	r1, r1, #4
 8026194:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026198:	eb0b 0001 	add.w	r0, fp, r1
 802619c:	7882      	ldrb	r2, [r0, #2]
 802619e:	7844      	ldrb	r4, [r0, #1]
 80261a0:	00dd      	lsls	r5, r3, #3
 80261a2:	b2ed      	uxtb	r5, r5
 80261a4:	fb12 f207 	smulbb	r2, r2, r7
 80261a8:	fb15 f50c 	smulbb	r5, r5, ip
 80261ac:	fb14 f407 	smulbb	r4, r4, r7
 80261b0:	f81b 1001 	ldrb.w	r1, [fp, r1]
 80261b4:	1218      	asrs	r0, r3, #8
 80261b6:	10db      	asrs	r3, r3, #3
 80261b8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80261bc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80261c0:	fb00 200c 	mla	r0, r0, ip, r2
 80261c4:	fb01 5507 	mla	r5, r1, r7, r5
 80261c8:	fb03 440c 	mla	r4, r3, ip, r4
 80261cc:	b281      	uxth	r1, r0
 80261ce:	b2ad      	uxth	r5, r5
 80261d0:	b2a4      	uxth	r4, r4
 80261d2:	1c68      	adds	r0, r5, #1
 80261d4:	1c4b      	adds	r3, r1, #1
 80261d6:	1c62      	adds	r2, r4, #1
 80261d8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80261dc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80261e0:	eb00 2115 	add.w	r1, r0, r5, lsr #8
 80261e4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80261e8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80261ec:	0952      	lsrs	r2, r2, #5
 80261ee:	430b      	orrs	r3, r1
 80261f0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80261f4:	4313      	orrs	r3, r2
 80261f6:	f826 3c04 	strh.w	r3, [r6, #-4]
 80261fa:	f89e 1000 	ldrb.w	r1, [lr]
 80261fe:	f836 3c02 	ldrh.w	r3, [r6, #-2]
 8026202:	f001 010f 	and.w	r1, r1, #15
 8026206:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802620a:	eb0b 0001 	add.w	r0, fp, r1
 802620e:	7882      	ldrb	r2, [r0, #2]
 8026210:	00dd      	lsls	r5, r3, #3
 8026212:	7840      	ldrb	r0, [r0, #1]
 8026214:	b2ed      	uxtb	r5, r5
 8026216:	fb12 f207 	smulbb	r2, r2, r7
 802621a:	fb10 f007 	smulbb	r0, r0, r7
 802621e:	fb15 f50c 	smulbb	r5, r5, ip
 8026222:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8026226:	121c      	asrs	r4, r3, #8
 8026228:	10db      	asrs	r3, r3, #3
 802622a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802622e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8026232:	fb04 240c 	mla	r4, r4, ip, r2
 8026236:	fb01 5507 	mla	r5, r1, r7, r5
 802623a:	fb03 020c 	mla	r2, r3, ip, r0
 802623e:	b2a1      	uxth	r1, r4
 8026240:	b2ad      	uxth	r5, r5
 8026242:	b290      	uxth	r0, r2
 8026244:	1c4b      	adds	r3, r1, #1
 8026246:	1c6c      	adds	r4, r5, #1
 8026248:	1c42      	adds	r2, r0, #1
 802624a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802624e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8026252:	eb04 2115 	add.w	r1, r4, r5, lsr #8
 8026256:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802625a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802625e:	0952      	lsrs	r2, r2, #5
 8026260:	430b      	orrs	r3, r1
 8026262:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026266:	4313      	orrs	r3, r2
 8026268:	f826 3c02 	strh.w	r3, [r6, #-2]
 802626c:	3604      	adds	r6, #4
 802626e:	45b0      	cmp	r8, r6
 8026270:	d18b      	bne.n	802618a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x106>
 8026272:	9a00      	ldr	r2, [sp, #0]
 8026274:	f109 0301 	add.w	r3, r9, #1
 8026278:	441a      	add	r2, r3
 802627a:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 802627e:	9b05      	ldr	r3, [sp, #20]
 8026280:	ebc9 79c9 	rsb	r9, r9, r9, lsl #31
 8026284:	9200      	str	r2, [sp, #0]
 8026286:	eb03 0949 	add.w	r9, r3, r9, lsl #1
 802628a:	f1b9 0f01 	cmp.w	r9, #1
 802628e:	d01b      	beq.n	80262c8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8026290:	9904      	ldr	r1, [sp, #16]
 8026292:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8026296:	4a50      	ldr	r2, [pc, #320]	@ (80263d8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 8026298:	440b      	add	r3, r1
 802629a:	8812      	ldrh	r2, [r2, #0]
 802629c:	9902      	ldr	r1, [sp, #8]
 802629e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80262a2:	1a52      	subs	r2, r2, r1
 80262a4:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 80262a8:	9a01      	ldr	r2, [sp, #4]
 80262aa:	eb02 0363 	add.w	r3, r2, r3, asr #1
 80262ae:	9301      	str	r3, [sp, #4]
 80262b0:	9b06      	ldr	r3, [sp, #24]
 80262b2:	4553      	cmp	r3, sl
 80262b4:	f63f af4f 	bhi.w	8026156 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xd2>
 80262b8:	4b46      	ldr	r3, [pc, #280]	@ (80263d4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x350>)
 80262ba:	6818      	ldr	r0, [r3, #0]
 80262bc:	6803      	ldr	r3, [r0, #0]
 80262be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80262c0:	4798      	blx	r3
 80262c2:	b00d      	add	sp, #52	@ 0x34
 80262c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80262c8:	9b00      	ldr	r3, [sp, #0]
 80262ca:	781e      	ldrb	r6, [r3, #0]
 80262cc:	f8ba 3000 	ldrh.w	r3, [sl]
 80262d0:	0936      	lsrs	r6, r6, #4
 80262d2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80262d6:	eb0b 0006 	add.w	r0, fp, r6
 80262da:	7881      	ldrb	r1, [r0, #2]
 80262dc:	7845      	ldrb	r5, [r0, #1]
 80262de:	00dc      	lsls	r4, r3, #3
 80262e0:	b2e4      	uxtb	r4, r4
 80262e2:	fb14 f40c 	smulbb	r4, r4, ip
 80262e6:	fb11 f107 	smulbb	r1, r1, r7
 80262ea:	fb15 f507 	smulbb	r5, r5, r7
 80262ee:	f81b 0006 	ldrb.w	r0, [fp, r6]
 80262f2:	121a      	asrs	r2, r3, #8
 80262f4:	10db      	asrs	r3, r3, #3
 80262f6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80262fa:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80262fe:	fb00 4007 	mla	r0, r0, r7, r4
 8026302:	fb02 120c 	mla	r2, r2, ip, r1
 8026306:	fb03 530c 	mla	r3, r3, ip, r5
 802630a:	b291      	uxth	r1, r2
 802630c:	b29b      	uxth	r3, r3
 802630e:	b280      	uxth	r0, r0
 8026310:	1c4a      	adds	r2, r1, #1
 8026312:	1c5d      	adds	r5, r3, #1
 8026314:	1c44      	adds	r4, r0, #1
 8026316:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802631a:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 802631e:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 8026322:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026326:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 802632a:	094a      	lsrs	r2, r1, #5
 802632c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026330:	4303      	orrs	r3, r0
 8026332:	4313      	orrs	r3, r2
 8026334:	f8aa 3000 	strh.w	r3, [sl]
 8026338:	4b27      	ldr	r3, [pc, #156]	@ (80263d8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 802633a:	9902      	ldr	r1, [sp, #8]
 802633c:	881a      	ldrh	r2, [r3, #0]
 802633e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8026342:	1a52      	subs	r2, r2, r1
 8026344:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8026348:	9a04      	ldr	r2, [sp, #16]
 802634a:	f10a 0a02 	add.w	sl, sl, #2
 802634e:	4413      	add	r3, r2
 8026350:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026354:	e7a8      	b.n	80262a8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x224>
 8026356:	9b01      	ldr	r3, [sp, #4]
 8026358:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802635c:	781e      	ldrb	r6, [r3, #0]
 802635e:	f8ba 3000 	ldrh.w	r3, [sl]
 8026362:	f006 060f 	and.w	r6, r6, #15
 8026366:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802636a:	eb0b 0006 	add.w	r0, fp, r6
 802636e:	7881      	ldrb	r1, [r0, #2]
 8026370:	7845      	ldrb	r5, [r0, #1]
 8026372:	00dc      	lsls	r4, r3, #3
 8026374:	b2e4      	uxtb	r4, r4
 8026376:	fb14 f40c 	smulbb	r4, r4, ip
 802637a:	fb11 f107 	smulbb	r1, r1, r7
 802637e:	fb15 f507 	smulbb	r5, r5, r7
 8026382:	f81b 0006 	ldrb.w	r0, [fp, r6]
 8026386:	121a      	asrs	r2, r3, #8
 8026388:	10db      	asrs	r3, r3, #3
 802638a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802638e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8026392:	fb00 4007 	mla	r0, r0, r7, r4
 8026396:	fb02 120c 	mla	r2, r2, ip, r1
 802639a:	fb03 530c 	mla	r3, r3, ip, r5
 802639e:	b291      	uxth	r1, r2
 80263a0:	b29b      	uxth	r3, r3
 80263a2:	b280      	uxth	r0, r0
 80263a4:	1c4a      	adds	r2, r1, #1
 80263a6:	1c5d      	adds	r5, r3, #1
 80263a8:	1c44      	adds	r4, r0, #1
 80263aa:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80263ae:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 80263b2:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 80263b6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80263ba:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 80263be:	094a      	lsrs	r2, r1, #5
 80263c0:	4303      	orrs	r3, r0
 80263c2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80263c6:	4313      	orrs	r3, r2
 80263c8:	f82a 3b02 	strh.w	r3, [sl], #2
 80263cc:	9b01      	ldr	r3, [sp, #4]
 80263ce:	3301      	adds	r3, #1
 80263d0:	9300      	str	r3, [sp, #0]
 80263d2:	e6c8      	b.n	8026166 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xe2>
 80263d4:	20082ec4 	.word	0x20082ec4
 80263d8:	20082ebe 	.word	0x20082ebe
 80263dc:	fb03 f304 	mul.w	r3, r3, r4
 80263e0:	eb0a 0843 	add.w	r8, sl, r3, lsl #1
 80263e4:	45c2      	cmp	sl, r8
 80263e6:	f4bf af67 	bcs.w	80262b8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 80263ea:	9b02      	ldr	r3, [sp, #8]
 80263ec:	4f57      	ldr	r7, [pc, #348]	@ (802654c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4c8>)
 80263ee:	3b01      	subs	r3, #1
 80263f0:	f8dd 9004 	ldr.w	r9, [sp, #4]
 80263f4:	9300      	str	r3, [sp, #0]
 80263f6:	9b03      	ldr	r3, [sp, #12]
 80263f8:	2b00      	cmp	r3, #0
 80263fa:	f000 808a 	beq.w	8026512 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x48e>
 80263fe:	f899 2000 	ldrb.w	r2, [r9]
 8026402:	9e00      	ldr	r6, [sp, #0]
 8026404:	f002 020f 	and.w	r2, r2, #15
 8026408:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802640c:	eb0b 0302 	add.w	r3, fp, r2
 8026410:	7859      	ldrb	r1, [r3, #1]
 8026412:	789b      	ldrb	r3, [r3, #2]
 8026414:	00c9      	lsls	r1, r1, #3
 8026416:	f81b 0002 	ldrb.w	r0, [fp, r2]
 802641a:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 802641e:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 8026422:	4313      	orrs	r3, r2
 8026424:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 8026428:	f109 0e01 	add.w	lr, r9, #1
 802642c:	f82a 3b02 	strh.w	r3, [sl], #2
 8026430:	2e01      	cmp	r6, #1
 8026432:	dd40      	ble.n	80264b6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x432>
 8026434:	3e02      	subs	r6, #2
 8026436:	ea4f 0c56 	mov.w	ip, r6, lsr #1
 802643a:	f10a 0508 	add.w	r5, sl, #8
 802643e:	eb05 058c 	add.w	r5, r5, ip, lsl #2
 8026442:	f10a 0004 	add.w	r0, sl, #4
 8026446:	f10e 34ff 	add.w	r4, lr, #4294967295
 802644a:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 802644e:	3004      	adds	r0, #4
 8026450:	0912      	lsrs	r2, r2, #4
 8026452:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026456:	eb0b 0302 	add.w	r3, fp, r2
 802645a:	7859      	ldrb	r1, [r3, #1]
 802645c:	789b      	ldrb	r3, [r3, #2]
 802645e:	00c9      	lsls	r1, r1, #3
 8026460:	f81b 2002 	ldrb.w	r2, [fp, r2]
 8026464:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8026468:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 802646c:	430b      	orrs	r3, r1
 802646e:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8026472:	f820 3c08 	strh.w	r3, [r0, #-8]
 8026476:	7822      	ldrb	r2, [r4, #0]
 8026478:	f002 020f 	and.w	r2, r2, #15
 802647c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026480:	eb0b 0302 	add.w	r3, fp, r2
 8026484:	7859      	ldrb	r1, [r3, #1]
 8026486:	789b      	ldrb	r3, [r3, #2]
 8026488:	00c9      	lsls	r1, r1, #3
 802648a:	f81b 2002 	ldrb.w	r2, [fp, r2]
 802648e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8026492:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 8026496:	430b      	orrs	r3, r1
 8026498:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 802649c:	f820 3c06 	strh.w	r3, [r0, #-6]
 80264a0:	4285      	cmp	r5, r0
 80264a2:	d1d2      	bne.n	802644a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c6>
 80264a4:	f10c 0301 	add.w	r3, ip, #1
 80264a8:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 80264ac:	449e      	add	lr, r3
 80264ae:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 80264b2:	eb06 064c 	add.w	r6, r6, ip, lsl #1
 80264b6:	2e01      	cmp	r6, #1
 80264b8:	d12e      	bne.n	8026518 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x494>
 80264ba:	f89e 2000 	ldrb.w	r2, [lr]
 80264be:	0912      	lsrs	r2, r2, #4
 80264c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80264c4:	eb0b 0302 	add.w	r3, fp, r2
 80264c8:	7859      	ldrb	r1, [r3, #1]
 80264ca:	789b      	ldrb	r3, [r3, #2]
 80264cc:	00c9      	lsls	r1, r1, #3
 80264ce:	f81b 0002 	ldrb.w	r0, [fp, r2]
 80264d2:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 80264d6:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 80264da:	4313      	orrs	r3, r2
 80264dc:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 80264e0:	f8aa 3000 	strh.w	r3, [sl]
 80264e4:	4b1a      	ldr	r3, [pc, #104]	@ (8026550 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4cc>)
 80264e6:	9902      	ldr	r1, [sp, #8]
 80264e8:	881a      	ldrh	r2, [r3, #0]
 80264ea:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80264ee:	1a52      	subs	r2, r2, r1
 80264f0:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 80264f4:	9a04      	ldr	r2, [sp, #16]
 80264f6:	f10a 0a02 	add.w	sl, sl, #2
 80264fa:	4413      	add	r3, r2
 80264fc:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026500:	45d0      	cmp	r8, sl
 8026502:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8026506:	f67f aed7 	bls.w	80262b8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 802650a:	9b03      	ldr	r3, [sp, #12]
 802650c:	2b00      	cmp	r3, #0
 802650e:	f47f af76 	bne.w	80263fe <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x37a>
 8026512:	46ce      	mov	lr, r9
 8026514:	9e02      	ldr	r6, [sp, #8]
 8026516:	e78b      	b.n	8026430 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>
 8026518:	9904      	ldr	r1, [sp, #16]
 802651a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802651e:	4a0c      	ldr	r2, [pc, #48]	@ (8026550 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4cc>)
 8026520:	440b      	add	r3, r1
 8026522:	8812      	ldrh	r2, [r2, #0]
 8026524:	9902      	ldr	r1, [sp, #8]
 8026526:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802652a:	1a52      	subs	r2, r2, r1
 802652c:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8026530:	45d0      	cmp	r8, sl
 8026532:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8026536:	f63f af5e 	bhi.w	80263f6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x372>
 802653a:	e6bd      	b.n	80262b8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 802653c:	4b05      	ldr	r3, [pc, #20]	@ (8026554 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d0>)
 802653e:	4a06      	ldr	r2, [pc, #24]	@ (8026558 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d4>)
 8026540:	f44f 61e9 	mov.w	r1, #1864	@ 0x748
 8026544:	4805      	ldr	r0, [pc, #20]	@ (802655c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d8>)
 8026546:	f00b ff9f 	bl	8032488 <__assert_func>
 802654a:	bf00      	nop
 802654c:	fffff800 	.word	0xfffff800
 8026550:	20082ebe 	.word	0x20082ebe
 8026554:	0803630c 	.word	0x0803630c
 8026558:	080371e4 	.word	0x080371e4
 802655c:	08036248 	.word	0x08036248

08026560 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8026560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026564:	b08f      	sub	sp, #60	@ 0x3c
 8026566:	7814      	ldrb	r4, [r2, #0]
 8026568:	461d      	mov	r5, r3
 802656a:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 802656e:	2c01      	cmp	r4, #1
 8026570:	9206      	str	r2, [sp, #24]
 8026572:	9101      	str	r1, [sp, #4]
 8026574:	9304      	str	r3, [sp, #16]
 8026576:	f040 8142 	bne.w	80267fe <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 802657a:	b913      	cbnz	r3, 8026582 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 802657c:	b00f      	add	sp, #60	@ 0x3c
 802657e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026582:	6828      	ldr	r0, [r5, #0]
 8026584:	6869      	ldr	r1, [r5, #4]
 8026586:	ab0a      	add	r3, sp, #40	@ 0x28
 8026588:	c303      	stmia	r3!, {r0, r1}
 802658a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802658c:	6818      	ldr	r0, [r3, #0]
 802658e:	6859      	ldr	r1, [r3, #4]
 8026590:	ab0c      	add	r3, sp, #48	@ 0x30
 8026592:	c303      	stmia	r3!, {r0, r1}
 8026594:	a80a      	add	r0, sp, #40	@ 0x28
 8026596:	f7e6 fb9b 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802659a:	4629      	mov	r1, r5
 802659c:	a80c      	add	r0, sp, #48	@ 0x30
 802659e:	f7e6 fbbf 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80265a2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80265a6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80265aa:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80265ae:	bfdd      	ittte	le
 80265b0:	f44f 6480 	movle.w	r4, #1024	@ 0x400
 80265b4:	b29a      	uxthle	r2, r3
 80265b6:	fb94 f4f2 	sdivle	r4, r4, r2
 80265ba:	b29a      	uxthgt	r2, r3
 80265bc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80265c0:	fb93 f0f4 	sdiv	r0, r3, r4
 80265c4:	b285      	uxth	r5, r0
 80265c6:	fb04 3c15 	mls	ip, r4, r5, r3
 80265ca:	fb1c 1c02 	smlabb	ip, ip, r2, r1
 80265ce:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80265d2:	fa1f fb8c 	uxth.w	fp, ip
 80265d6:	4422      	add	r2, r4
 80265d8:	3a01      	subs	r2, #1
 80265da:	fb92 f4f4 	sdiv	r4, r2, r4
 80265de:	2d00      	cmp	r5, #0
 80265e0:	f040 8105 	bne.w	80267ee <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28e>
 80265e4:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80265e8:	f8bd 0028 	ldrh.w	r0, [sp, #40]	@ 0x28
 80265ec:	4413      	add	r3, r2
 80265ee:	4a87      	ldr	r2, [pc, #540]	@ (802680c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 80265f0:	4401      	add	r1, r0
 80265f2:	6810      	ldr	r0, [r2, #0]
 80265f4:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80265f8:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 80265fc:	4616      	mov	r6, r2
 80265fe:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8026602:	6803      	ldr	r3, [r0, #0]
 8026604:	9209      	str	r2, [sp, #36]	@ 0x24
 8026606:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8026608:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 802660c:	4798      	blx	r3
 802660e:	9f04      	ldr	r7, [sp, #16]
 8026610:	f1bb 0f00 	cmp.w	fp, #0
 8026614:	bf0c      	ite	eq
 8026616:	4633      	moveq	r3, r6
 8026618:	2300      	movne	r3, #0
 802661a:	ea6f 0807 	mvn.w	r8, r7
 802661e:	497c      	ldr	r1, [pc, #496]	@ (8026810 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b0>)
 8026620:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8026624:	8809      	ldrh	r1, [r1, #0]
 8026626:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 802662a:	fb01 f505 	mul.w	r5, r1, r5
 802662e:	fb01 6202 	mla	r2, r1, r2, r6
 8026632:	b2a4      	uxth	r4, r4
 8026634:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8026638:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 802663c:	00a4      	lsls	r4, r4, #2
 802663e:	1d21      	adds	r1, r4, #4
 8026640:	4290      	cmp	r0, r2
 8026642:	9202      	str	r2, [sp, #8]
 8026644:	9108      	str	r1, [sp, #32]
 8026646:	fa1f fa83 	uxth.w	sl, r3
 802664a:	fa5f f888 	uxtb.w	r8, r8
 802664e:	d228      	bcs.n	80266a2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x142>
 8026650:	2300      	movs	r3, #0
 8026652:	469c      	mov	ip, r3
 8026654:	9303      	str	r3, [sp, #12]
 8026656:	fa1f f888 	uxth.w	r8, r8
 802665a:	fa1f f987 	uxth.w	r9, r7
 802665e:	f1bc 0f00 	cmp.w	ip, #0
 8026662:	d10f      	bne.n	8026684 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x124>
 8026664:	9901      	ldr	r1, [sp, #4]
 8026666:	780a      	ldrb	r2, [r1, #0]
 8026668:	ea4f 1c92 	mov.w	ip, r2, lsr #6
 802666c:	f10c 33ff 	add.w	r3, ip, #4294967295
 8026670:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8026674:	2b02      	cmp	r3, #2
 8026676:	9203      	str	r2, [sp, #12]
 8026678:	f200 80b3 	bhi.w	80267e2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x282>
 802667c:	3101      	adds	r1, #1
 802667e:	9101      	str	r1, [sp, #4]
 8026680:	fa1f fc8c 	uxth.w	ip, ip
 8026684:	f1bb 0f00 	cmp.w	fp, #0
 8026688:	d013      	beq.n	80266b2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x152>
 802668a:	45dc      	cmp	ip, fp
 802668c:	f080 80a0 	bcs.w	80267d0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x270>
 8026690:	ebab 0c0c 	sub.w	ip, fp, ip
 8026694:	fa1f fb8c 	uxth.w	fp, ip
 8026698:	f04f 0c00 	mov.w	ip, #0
 802669c:	9b02      	ldr	r3, [sp, #8]
 802669e:	4283      	cmp	r3, r0
 80266a0:	d8dd      	bhi.n	802665e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xfe>
 80266a2:	4b5a      	ldr	r3, [pc, #360]	@ (802680c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 80266a4:	6818      	ldr	r0, [r3, #0]
 80266a6:	6803      	ldr	r3, [r0, #0]
 80266a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80266aa:	4798      	blx	r3
 80266ac:	b00f      	add	sp, #60	@ 0x3c
 80266ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80266b2:	2303      	movs	r3, #3
 80266b4:	4619      	mov	r1, r3
 80266b6:	9a08      	ldr	r2, [sp, #32]
 80266b8:	9b03      	ldr	r3, [sp, #12]
 80266ba:	45d4      	cmp	ip, sl
 80266bc:	fb11 2703 	smlabb	r7, r1, r3, r2
 80266c0:	9b06      	ldr	r3, [sp, #24]
 80266c2:	441f      	add	r7, r3
 80266c4:	d362      	bcc.n	802678c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 80266c6:	ebac 030a 	sub.w	r3, ip, sl
 80266ca:	b29b      	uxth	r3, r3
 80266cc:	9305      	str	r3, [sp, #20]
 80266ce:	9b04      	ldr	r3, [sp, #16]
 80266d0:	4654      	mov	r4, sl
 80266d2:	2bff      	cmp	r3, #255	@ 0xff
 80266d4:	f8cd b01c 	str.w	fp, [sp, #28]
 80266d8:	d062      	beq.n	80267a0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 80266da:	2c00      	cmp	r4, #0
 80266dc:	d038      	beq.n	8026750 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 80266de:	f104 3eff 	add.w	lr, r4, #4294967295
 80266e2:	fa1f fe8e 	uxth.w	lr, lr
 80266e6:	f10e 0e01 	add.w	lr, lr, #1
 80266ea:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 80266ee:	8802      	ldrh	r2, [r0, #0]
 80266f0:	78bd      	ldrb	r5, [r7, #2]
 80266f2:	00d4      	lsls	r4, r2, #3
 80266f4:	7879      	ldrb	r1, [r7, #1]
 80266f6:	b2e4      	uxtb	r4, r4
 80266f8:	fb14 f408 	smulbb	r4, r4, r8
 80266fc:	fb15 f509 	smulbb	r5, r5, r9
 8026700:	fb11 f109 	smulbb	r1, r1, r9
 8026704:	783e      	ldrb	r6, [r7, #0]
 8026706:	1213      	asrs	r3, r2, #8
 8026708:	10d2      	asrs	r2, r2, #3
 802670a:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802670e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8026712:	fb06 4409 	mla	r4, r6, r9, r4
 8026716:	fb03 5308 	mla	r3, r3, r8, r5
 802671a:	fb02 1208 	mla	r2, r2, r8, r1
 802671e:	b2a4      	uxth	r4, r4
 8026720:	b291      	uxth	r1, r2
 8026722:	b29d      	uxth	r5, r3
 8026724:	1c62      	adds	r2, r4, #1
 8026726:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802672a:	1c6b      	adds	r3, r5, #1
 802672c:	1c4a      	adds	r2, r1, #1
 802672e:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8026732:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8026736:	f3c4 21c4 	ubfx	r1, r4, #11, #5
 802673a:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802673e:	0952      	lsrs	r2, r2, #5
 8026740:	430b      	orrs	r3, r1
 8026742:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026746:	4313      	orrs	r3, r2
 8026748:	f820 3b02 	strh.w	r3, [r0], #2
 802674c:	4570      	cmp	r0, lr
 802674e:	d1ce      	bne.n	80266ee <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18e>
 8026750:	45d4      	cmp	ip, sl
 8026752:	d316      	bcc.n	8026782 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x222>
 8026754:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8026756:	f8bd b02c 	ldrh.w	fp, [sp, #44]	@ 0x2c
 802675a:	4b2d      	ldr	r3, [pc, #180]	@ (8026810 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b0>)
 802675c:	fa1f fa82 	uxth.w	sl, r2
 8026760:	ebab 0b0a 	sub.w	fp, fp, sl
 8026764:	881b      	ldrh	r3, [r3, #0]
 8026766:	fa1f fb8b 	uxth.w	fp, fp
 802676a:	f1bb 0f00 	cmp.w	fp, #0
 802676e:	eba3 0302 	sub.w	r3, r3, r2
 8026772:	f8dd c014 	ldr.w	ip, [sp, #20]
 8026776:	bf18      	it	ne
 8026778:	f04f 0a00 	movne.w	sl, #0
 802677c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8026780:	e78c      	b.n	802669c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026782:	f8dd c014 	ldr.w	ip, [sp, #20]
 8026786:	f8dd a01c 	ldr.w	sl, [sp, #28]
 802678a:	e787      	b.n	802669c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 802678c:	ebaa 020c 	sub.w	r2, sl, ip
 8026790:	b293      	uxth	r3, r2
 8026792:	9307      	str	r3, [sp, #28]
 8026794:	9b04      	ldr	r3, [sp, #16]
 8026796:	4664      	mov	r4, ip
 8026798:	2bff      	cmp	r3, #255	@ 0xff
 802679a:	f8cd b014 	str.w	fp, [sp, #20]
 802679e:	d19c      	bne.n	80266da <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 80267a0:	2c00      	cmp	r4, #0
 80267a2:	d0d5      	beq.n	8026750 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 80267a4:	3c01      	subs	r4, #1
 80267a6:	b2a4      	uxth	r4, r4
 80267a8:	3401      	adds	r4, #1
 80267aa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80267ae:	787a      	ldrb	r2, [r7, #1]
 80267b0:	78bb      	ldrb	r3, [r7, #2]
 80267b2:	4918      	ldr	r1, [pc, #96]	@ (8026814 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b4>)
 80267b4:	00d2      	lsls	r2, r2, #3
 80267b6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80267ba:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80267be:	7839      	ldrb	r1, [r7, #0]
 80267c0:	4313      	orrs	r3, r2
 80267c2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80267c6:	f820 3b02 	strh.w	r3, [r0], #2
 80267ca:	42a0      	cmp	r0, r4
 80267cc:	d1ef      	bne.n	80267ae <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x24e>
 80267ce:	e7bf      	b.n	8026750 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 80267d0:	ebac 0c0b 	sub.w	ip, ip, fp
 80267d4:	fa1f fc8c 	uxth.w	ip, ip
 80267d8:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 80267dc:	f04f 0b00 	mov.w	fp, #0
 80267e0:	e75c      	b.n	802669c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 80267e2:	460b      	mov	r3, r1
 80267e4:	3302      	adds	r3, #2
 80267e6:	f891 c001 	ldrb.w	ip, [r1, #1]
 80267ea:	9301      	str	r3, [sp, #4]
 80267ec:	e74a      	b.n	8026684 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x124>
 80267ee:	9a06      	ldr	r2, [sp, #24]
 80267f0:	9801      	ldr	r0, [sp, #4]
 80267f2:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 80267f6:	ba12      	rev	r2, r2
 80267f8:	4410      	add	r0, r2
 80267fa:	9001      	str	r0, [sp, #4]
 80267fc:	e6f2      	b.n	80265e4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x84>
 80267fe:	4b06      	ldr	r3, [pc, #24]	@ (8026818 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b8>)
 8026800:	4a06      	ldr	r2, [pc, #24]	@ (802681c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2bc>)
 8026802:	f240 71c2 	movw	r1, #1986	@ 0x7c2
 8026806:	4806      	ldr	r0, [pc, #24]	@ (8026820 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 8026808:	f00b fe3e 	bl	8032488 <__assert_func>
 802680c:	20082ec4 	.word	0x20082ec4
 8026810:	20082ebe 	.word	0x20082ebe
 8026814:	fffff800 	.word	0xfffff800
 8026818:	0803630c 	.word	0x0803630c
 802681c:	08037388 	.word	0x08037388
 8026820:	08036248 	.word	0x08036248

08026824 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8026824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026828:	b09d      	sub	sp, #116	@ 0x74
 802682a:	7814      	ldrb	r4, [r2, #0]
 802682c:	461d      	mov	r5, r3
 802682e:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8026832:	2c01      	cmp	r4, #1
 8026834:	9211      	str	r2, [sp, #68]	@ 0x44
 8026836:	9113      	str	r1, [sp, #76]	@ 0x4c
 8026838:	930f      	str	r3, [sp, #60]	@ 0x3c
 802683a:	f040 820a 	bne.w	8026c52 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x42e>
 802683e:	b913      	cbnz	r3, 8026846 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 8026840:	b01d      	add	sp, #116	@ 0x74
 8026842:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026846:	6869      	ldr	r1, [r5, #4]
 8026848:	4683      	mov	fp, r0
 802684a:	6828      	ldr	r0, [r5, #0]
 802684c:	ab18      	add	r3, sp, #96	@ 0x60
 802684e:	c303      	stmia	r3!, {r0, r1}
 8026850:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8026852:	6818      	ldr	r0, [r3, #0]
 8026854:	6859      	ldr	r1, [r3, #4]
 8026856:	ab1a      	add	r3, sp, #104	@ 0x68
 8026858:	c303      	stmia	r3!, {r0, r1}
 802685a:	a818      	add	r0, sp, #96	@ 0x60
 802685c:	f7e6 fa38 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026860:	4629      	mov	r1, r5
 8026862:	a81a      	add	r0, sp, #104	@ 0x68
 8026864:	f7e6 fa5c 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026868:	f9bd 6064 	ldrsh.w	r6, [sp, #100]	@ 0x64
 802686c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8026870:	f340 814b 	ble.w	8026b0a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2e6>
 8026874:	b2b0      	uxth	r0, r6
 8026876:	9416      	str	r4, [sp, #88]	@ 0x58
 8026878:	f9bd 306a 	ldrsh.w	r3, [sp, #106]	@ 0x6a
 802687c:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 8026880:	fb93 f1f4 	sdiv	r1, r3, r4
 8026884:	4422      	add	r2, r4
 8026886:	3a01      	subs	r2, #1
 8026888:	fb92 f2f4 	sdiv	r2, r2, r4
 802688c:	b289      	uxth	r1, r1
 802688e:	fb04 3411 	mls	r4, r4, r1, r3
 8026892:	9114      	str	r1, [sp, #80]	@ 0x50
 8026894:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8026898:	f8bd 7060 	ldrh.w	r7, [sp, #96]	@ 0x60
 802689c:	fb14 1600 	smlabb	r6, r4, r0, r1
 80268a0:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 80268a4:	48a4      	ldr	r0, [pc, #656]	@ (8026b38 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x314>)
 80268a6:	4439      	add	r1, r7
 80268a8:	442b      	add	r3, r5
 80268aa:	6800      	ldr	r0, [r0, #0]
 80268ac:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 80268b0:	f8ad 306a 	strh.w	r3, [sp, #106]	@ 0x6a
 80268b4:	f9bd 706c 	ldrsh.w	r7, [sp, #108]	@ 0x6c
 80268b8:	6803      	ldr	r3, [r0, #0]
 80268ba:	b2b5      	uxth	r5, r6
 80268bc:	3201      	adds	r2, #1
 80268be:	9501      	str	r5, [sp, #4]
 80268c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80268c2:	970b      	str	r7, [sp, #44]	@ 0x2c
 80268c4:	b294      	uxth	r4, r2
 80268c6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 80268ca:	4798      	blx	r3
 80268cc:	2100      	movs	r1, #0
 80268ce:	2d00      	cmp	r5, #0
 80268d0:	4d9a      	ldr	r5, [pc, #616]	@ (8026b3c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x318>)
 80268d2:	bf08      	it	eq
 80268d4:	463a      	moveq	r2, r7
 80268d6:	882d      	ldrh	r5, [r5, #0]
 80268d8:	9112      	str	r1, [sp, #72]	@ 0x48
 80268da:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 80268de:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 80268e2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80268e4:	fb05 7101 	mla	r1, r5, r1, r7
 80268e8:	ea6f 0c03 	mvn.w	ip, r3
 80268ec:	fb05 f306 	mul.w	r3, r5, r6
 80268f0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80268f4:	9100      	str	r1, [sp, #0]
 80268f6:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 80268fa:	f10b 030e 	add.w	r3, fp, #14
 80268fe:	9317      	str	r3, [sp, #92]	@ 0x5c
 8026900:	465b      	mov	r3, fp
 8026902:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026904:	bf18      	it	ne
 8026906:	2200      	movne	r2, #0
 8026908:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 802690c:	f104 0904 	add.w	r9, r4, #4
 8026910:	46cb      	mov	fp, r9
 8026912:	4699      	mov	r9, r3
 8026914:	460b      	mov	r3, r1
 8026916:	b292      	uxth	r2, r2
 8026918:	9202      	str	r2, [sp, #8]
 802691a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 802691e:	fa5f f28c 	uxtb.w	r2, ip
 8026922:	9107      	str	r1, [sp, #28]
 8026924:	9215      	str	r2, [sp, #84]	@ 0x54
 8026926:	9a00      	ldr	r2, [sp, #0]
 8026928:	4293      	cmp	r3, r2
 802692a:	f240 80fd 	bls.w	8026b28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 802692e:	9a01      	ldr	r2, [sp, #4]
 8026930:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8026934:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8026936:	fbb2 f3f3 	udiv	r3, r2, r3
 802693a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802693c:	2701      	movs	r7, #1
 802693e:	fa11 f482 	uxtah	r4, r1, r2
 8026942:	00a4      	lsls	r4, r4, #2
 8026944:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8026946:	3404      	adds	r4, #4
 8026948:	1911      	adds	r1, r2, r4
 802694a:	788a      	ldrb	r2, [r1, #2]
 802694c:	784d      	ldrb	r5, [r1, #1]
 802694e:	0212      	lsls	r2, r2, #8
 8026950:	78c9      	ldrb	r1, [r1, #3]
 8026952:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 8026956:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026958:	4308      	orrs	r0, r1
 802695a:	4629      	mov	r1, r5
 802695c:	2600      	movs	r6, #0
 802695e:	4401      	add	r1, r0
 8026960:	784a      	ldrb	r2, [r1, #1]
 8026962:	5c28      	ldrb	r0, [r5, r0]
 8026964:	0212      	lsls	r2, r2, #8
 8026966:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026968:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 802696c:	4302      	orrs	r2, r0
 802696e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8026970:	5d2c      	ldrb	r4, [r5, r4]
 8026972:	f889 200d 	strb.w	r2, [r9, #13]
 8026976:	b292      	uxth	r2, r2
 8026978:	1ac3      	subs	r3, r0, r3
 802697a:	9209      	str	r2, [sp, #36]	@ 0x24
 802697c:	19ca      	adds	r2, r1, r7
 802697e:	9205      	str	r2, [sp, #20]
 8026980:	b29b      	uxth	r3, r3
 8026982:	19e2      	adds	r2, r4, r7
 8026984:	f8bd e054 	ldrh.w	lr, [sp, #84]	@ 0x54
 8026988:	960e      	str	r6, [sp, #56]	@ 0x38
 802698a:	970a      	str	r7, [sp, #40]	@ 0x28
 802698c:	940d      	str	r4, [sp, #52]	@ 0x34
 802698e:	9206      	str	r2, [sp, #24]
 8026990:	9310      	str	r3, [sp, #64]	@ 0x40
 8026992:	9704      	str	r7, [sp, #16]
 8026994:	9b01      	ldr	r3, [sp, #4]
 8026996:	2b00      	cmp	r3, #0
 8026998:	d034      	beq.n	8026a04 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1e0>
 802699a:	42bb      	cmp	r3, r7
 802699c:	f240 811a 	bls.w	8026bd4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3b0>
 80269a0:	1bdf      	subs	r7, r3, r7
 80269a2:	b2bb      	uxth	r3, r7
 80269a4:	9301      	str	r3, [sp, #4]
 80269a6:	9a00      	ldr	r2, [sp, #0]
 80269a8:	9b07      	ldr	r3, [sp, #28]
 80269aa:	4293      	cmp	r3, r2
 80269ac:	f240 80bc 	bls.w	8026b28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 80269b0:	9805      	ldr	r0, [sp, #20]
 80269b2:	9c04      	ldr	r4, [sp, #16]
 80269b4:	7842      	ldrb	r2, [r0, #1]
 80269b6:	f1c4 0107 	rsb	r1, r4, #7
 80269ba:	7803      	ldrb	r3, [r0, #0]
 80269bc:	408a      	lsls	r2, r1
 80269be:	0052      	lsls	r2, r2, #1
 80269c0:	4123      	asrs	r3, r4
 80269c2:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80269c6:	1c61      	adds	r1, r4, #1
 80269c8:	b2db      	uxtb	r3, r3
 80269ca:	4313      	orrs	r3, r2
 80269cc:	b2ca      	uxtb	r2, r1
 80269ce:	4611      	mov	r1, r2
 80269d0:	2908      	cmp	r1, #8
 80269d2:	9204      	str	r2, [sp, #16]
 80269d4:	b29a      	uxth	r2, r3
 80269d6:	f000 8107 	beq.w	8026be8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 80269da:	3001      	adds	r0, #1
 80269dc:	9005      	str	r0, [sp, #20]
 80269de:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80269e0:	4291      	cmp	r1, r2
 80269e2:	f0c0 80d9 	bcc.w	8026b98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x374>
 80269e6:	2701      	movs	r7, #1
 80269e8:	b2db      	uxtb	r3, r3
 80269ea:	f889 300d 	strb.w	r3, [r9, #13]
 80269ee:	9906      	ldr	r1, [sp, #24]
 80269f0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80269f4:	f0c0 80fe 	bcc.w	8026bf4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d0>
 80269f8:	9b01      	ldr	r3, [sp, #4]
 80269fa:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 80269fe:	2600      	movs	r6, #0
 8026a00:	2b00      	cmp	r3, #0
 8026a02:	d1ca      	bne.n	802699a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x176>
 8026a04:	9b02      	ldr	r3, [sp, #8]
 8026a06:	429f      	cmp	r7, r3
 8026a08:	461a      	mov	r2, r3
 8026a0a:	f0c0 8099 	bcc.w	8026b40 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8026a0e:	1afb      	subs	r3, r7, r3
 8026a10:	b29b      	uxth	r3, r3
 8026a12:	9308      	str	r3, [sp, #32]
 8026a14:	9b01      	ldr	r3, [sp, #4]
 8026a16:	9203      	str	r2, [sp, #12]
 8026a18:	930c      	str	r3, [sp, #48]	@ 0x30
 8026a1a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026a1c:	2bff      	cmp	r3, #255	@ 0xff
 8026a1e:	9b03      	ldr	r3, [sp, #12]
 8026a20:	f000 809a 	beq.w	8026b58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x334>
 8026a24:	2b00      	cmp	r3, #0
 8026a26:	d049      	beq.n	8026abc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026a28:	eb06 0803 	add.w	r8, r6, r3
 8026a2c:	f8dd c000 	ldr.w	ip, [sp]
 8026a30:	fa1f f888 	uxth.w	r8, r8
 8026a34:	eb09 0306 	add.w	r3, r9, r6
 8026a38:	7b5c      	ldrb	r4, [r3, #13]
 8026a3a:	f8bc 3000 	ldrh.w	r3, [ip]
 8026a3e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8026a42:	eb0b 0204 	add.w	r2, fp, r4
 8026a46:	7890      	ldrb	r0, [r2, #2]
 8026a48:	7855      	ldrb	r5, [r2, #1]
 8026a4a:	00d9      	lsls	r1, r3, #3
 8026a4c:	b2c9      	uxtb	r1, r1
 8026a4e:	fb11 f10e 	smulbb	r1, r1, lr
 8026a52:	fb10 f00a 	smulbb	r0, r0, sl
 8026a56:	fb15 f50a 	smulbb	r5, r5, sl
 8026a5a:	f81b 4004 	ldrb.w	r4, [fp, r4]
 8026a5e:	121a      	asrs	r2, r3, #8
 8026a60:	10db      	asrs	r3, r3, #3
 8026a62:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8026a66:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8026a6a:	fb04 140a 	mla	r4, r4, sl, r1
 8026a6e:	fb02 020e 	mla	r2, r2, lr, r0
 8026a72:	fb03 530e 	mla	r3, r3, lr, r5
 8026a76:	b2a4      	uxth	r4, r4
 8026a78:	b29b      	uxth	r3, r3
 8026a7a:	b290      	uxth	r0, r2
 8026a7c:	1c59      	adds	r1, r3, #1
 8026a7e:	1c42      	adds	r2, r0, #1
 8026a80:	1c65      	adds	r5, r4, #1
 8026a82:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8026a86:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026a8a:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8026a8e:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 8026a92:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8026a96:	094a      	lsrs	r2, r1, #5
 8026a98:	3601      	adds	r6, #1
 8026a9a:	4323      	orrs	r3, r4
 8026a9c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026aa0:	b2b6      	uxth	r6, r6
 8026aa2:	4313      	orrs	r3, r2
 8026aa4:	4546      	cmp	r6, r8
 8026aa6:	f82c 3b02 	strh.w	r3, [ip], #2
 8026aaa:	d1c3      	bne.n	8026a34 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x210>
 8026aac:	9b03      	ldr	r3, [sp, #12]
 8026aae:	9a00      	ldr	r2, [sp, #0]
 8026ab0:	3b01      	subs	r3, #1
 8026ab2:	b29b      	uxth	r3, r3
 8026ab4:	3301      	adds	r3, #1
 8026ab6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026aba:	9300      	str	r3, [sp, #0]
 8026abc:	9b02      	ldr	r3, [sp, #8]
 8026abe:	429f      	cmp	r7, r3
 8026ac0:	d32b      	bcc.n	8026b1a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f6>
 8026ac2:	4b1e      	ldr	r3, [pc, #120]	@ (8026b3c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x318>)
 8026ac4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8026ac6:	881b      	ldrh	r3, [r3, #0]
 8026ac8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8026aca:	1a5b      	subs	r3, r3, r1
 8026acc:	9900      	ldr	r1, [sp, #0]
 8026ace:	3201      	adds	r2, #1
 8026ad0:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8026ad4:	9300      	str	r3, [sp, #0]
 8026ad6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8026ad8:	920e      	str	r2, [sp, #56]	@ 0x38
 8026ada:	429a      	cmp	r2, r3
 8026adc:	f000 80a7 	beq.w	8026c2e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x40a>
 8026ae0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8026ae4:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8026ae8:	9f08      	ldr	r7, [sp, #32]
 8026aea:	1a9b      	subs	r3, r3, r2
 8026aec:	b29b      	uxth	r3, r3
 8026aee:	2b00      	cmp	r3, #0
 8026af0:	bf14      	ite	ne
 8026af2:	2200      	movne	r2, #0
 8026af4:	2300      	moveq	r3, #0
 8026af6:	9202      	str	r2, [sp, #8]
 8026af8:	9301      	str	r3, [sp, #4]
 8026afa:	9b07      	ldr	r3, [sp, #28]
 8026afc:	9a00      	ldr	r2, [sp, #0]
 8026afe:	4293      	cmp	r3, r2
 8026b00:	d912      	bls.n	8026b28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8026b02:	2f00      	cmp	r7, #0
 8026b04:	f47f af46 	bne.w	8026994 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8026b08:	e752      	b.n	80269b0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8026b0a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8026b0e:	b2b0      	uxth	r0, r6
 8026b10:	fb94 f4f0 	sdiv	r4, r4, r0
 8026b14:	b2a3      	uxth	r3, r4
 8026b16:	9316      	str	r3, [sp, #88]	@ 0x58
 8026b18:	e6ae      	b.n	8026878 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x54>
 8026b1a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026b1c:	9a00      	ldr	r2, [sp, #0]
 8026b1e:	9302      	str	r3, [sp, #8]
 8026b20:	9b07      	ldr	r3, [sp, #28]
 8026b22:	9f08      	ldr	r7, [sp, #32]
 8026b24:	4293      	cmp	r3, r2
 8026b26:	d8ec      	bhi.n	8026b02 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2de>
 8026b28:	4b03      	ldr	r3, [pc, #12]	@ (8026b38 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x314>)
 8026b2a:	6818      	ldr	r0, [r3, #0]
 8026b2c:	6803      	ldr	r3, [r0, #0]
 8026b2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026b30:	4798      	blx	r3
 8026b32:	b01d      	add	sp, #116	@ 0x74
 8026b34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026b38:	20082ec4 	.word	0x20082ec4
 8026b3c:	20082ebe 	.word	0x20082ebe
 8026b40:	9b01      	ldr	r3, [sp, #4]
 8026b42:	9703      	str	r7, [sp, #12]
 8026b44:	9308      	str	r3, [sp, #32]
 8026b46:	9b02      	ldr	r3, [sp, #8]
 8026b48:	1bdb      	subs	r3, r3, r7
 8026b4a:	b29b      	uxth	r3, r3
 8026b4c:	930c      	str	r3, [sp, #48]	@ 0x30
 8026b4e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026b50:	2bff      	cmp	r3, #255	@ 0xff
 8026b52:	9b03      	ldr	r3, [sp, #12]
 8026b54:	f47f af66 	bne.w	8026a24 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x200>
 8026b58:	2b00      	cmp	r3, #0
 8026b5a:	d0af      	beq.n	8026abc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026b5c:	18f4      	adds	r4, r6, r3
 8026b5e:	9800      	ldr	r0, [sp, #0]
 8026b60:	b2a4      	uxth	r4, r4
 8026b62:	eb09 0306 	add.w	r3, r9, r6
 8026b66:	7b59      	ldrb	r1, [r3, #13]
 8026b68:	4d3d      	ldr	r5, [pc, #244]	@ (8026c60 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x43c>)
 8026b6a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026b6e:	eb0b 0301 	add.w	r3, fp, r1
 8026b72:	785a      	ldrb	r2, [r3, #1]
 8026b74:	789b      	ldrb	r3, [r3, #2]
 8026b76:	00d2      	lsls	r2, r2, #3
 8026b78:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8026b7c:	3601      	adds	r6, #1
 8026b7e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026b82:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 8026b86:	4313      	orrs	r3, r2
 8026b88:	b2b6      	uxth	r6, r6
 8026b8a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8026b8e:	42a6      	cmp	r6, r4
 8026b90:	f820 3b02 	strh.w	r3, [r0], #2
 8026b94:	d1e5      	bne.n	8026b62 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x33e>
 8026b96:	e789      	b.n	8026aac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x288>
 8026b98:	9b06      	ldr	r3, [sp, #24]
 8026b9a:	429a      	cmp	r2, r3
 8026b9c:	d32d      	bcc.n	8026bfa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d6>
 8026b9e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8026ba0:	f899 100d 	ldrb.w	r1, [r9, #13]
 8026ba4:	eb09 0300 	add.w	r3, r9, r0
 8026ba8:	7359      	strb	r1, [r3, #13]
 8026baa:	f899 300d 	ldrb.w	r3, [r9, #13]
 8026bae:	1c41      	adds	r1, r0, #1
 8026bb0:	b28f      	uxth	r7, r1
 8026bb2:	9c06      	ldr	r4, [sp, #24]
 8026bb4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8026bb6:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 8026bba:	3401      	adds	r4, #1
 8026bbc:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8026bc0:	b2a3      	uxth	r3, r4
 8026bc2:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8026bc6:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8026bca:	9306      	str	r3, [sp, #24]
 8026bcc:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 8026bd0:	2600      	movs	r6, #0
 8026bd2:	e6df      	b.n	8026994 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8026bd4:	1aff      	subs	r7, r7, r3
 8026bd6:	441e      	add	r6, r3
 8026bd8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8026bdc:	b2bf      	uxth	r7, r7
 8026bde:	9302      	str	r3, [sp, #8]
 8026be0:	2300      	movs	r3, #0
 8026be2:	b2b6      	uxth	r6, r6
 8026be4:	9301      	str	r3, [sp, #4]
 8026be6:	e788      	b.n	8026afa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d6>
 8026be8:	2100      	movs	r1, #0
 8026bea:	9104      	str	r1, [sp, #16]
 8026bec:	9905      	ldr	r1, [sp, #20]
 8026bee:	3102      	adds	r1, #2
 8026bf0:	9105      	str	r1, [sp, #20]
 8026bf2:	e6f4      	b.n	80269de <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8026bf4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8026bf6:	3101      	adds	r1, #1
 8026bf8:	e7db      	b.n	8026bb2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x38e>
 8026bfa:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 8026bfe:	f893 704f 	ldrb.w	r7, [r3, #79]	@ 0x4f
 8026c02:	4613      	mov	r3, r2
 8026c04:	2f01      	cmp	r7, #1
 8026c06:	d90d      	bls.n	8026c24 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x400>
 8026c08:	f107 010d 	add.w	r1, r7, #13
 8026c0c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8026c0e:	4449      	add	r1, r9
 8026c10:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8026c14:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8026c18:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8026c1c:	428c      	cmp	r4, r1
 8026c1e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8026c22:	d1f5      	bne.n	8026c10 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ec>
 8026c24:	b2db      	uxtb	r3, r3
 8026c26:	f889 300d 	strb.w	r3, [r9, #13]
 8026c2a:	b2bf      	uxth	r7, r7
 8026c2c:	e6df      	b.n	80269ee <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 8026c2e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8026c32:	f8bd 2060 	ldrh.w	r2, [sp, #96]	@ 0x60
 8026c36:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8026c38:	1a9b      	subs	r3, r3, r2
 8026c3a:	b29b      	uxth	r3, r3
 8026c3c:	2b00      	cmp	r3, #0
 8026c3e:	9301      	str	r3, [sp, #4]
 8026c40:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026c42:	bf18      	it	ne
 8026c44:	2300      	movne	r3, #0
 8026c46:	3101      	adds	r1, #1
 8026c48:	b29b      	uxth	r3, r3
 8026c4a:	9302      	str	r3, [sp, #8]
 8026c4c:	9112      	str	r1, [sp, #72]	@ 0x48
 8026c4e:	9b07      	ldr	r3, [sp, #28]
 8026c50:	e669      	b.n	8026926 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x102>
 8026c52:	4b04      	ldr	r3, [pc, #16]	@ (8026c64 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 8026c54:	4a04      	ldr	r2, [pc, #16]	@ (8026c68 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x444>)
 8026c56:	f640 0167 	movw	r1, #2151	@ 0x867
 8026c5a:	4804      	ldr	r0, [pc, #16]	@ (8026c6c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x448>)
 8026c5c:	f00b fc14 	bl	8032488 <__assert_func>
 8026c60:	fffff800 	.word	0xfffff800
 8026c64:	0803630c 	.word	0x0803630c
 8026c68:	080376dc 	.word	0x080376dc
 8026c6c:	08036248 	.word	0x08036248

08026c70 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8026c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026c74:	4690      	mov	r8, r2
 8026c76:	8812      	ldrh	r2, [r2, #0]
 8026c78:	b093      	sub	sp, #76	@ 0x4c
 8026c7a:	461c      	mov	r4, r3
 8026c7c:	f89d a074 	ldrb.w	sl, [sp, #116]	@ 0x74
 8026c80:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026c82:	2a00      	cmp	r2, #0
 8026c84:	f040 80fb 	bne.w	8026e7e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8026c88:	4689      	mov	r9, r1
 8026c8a:	6820      	ldr	r0, [r4, #0]
 8026c8c:	6861      	ldr	r1, [r4, #4]
 8026c8e:	aa0e      	add	r2, sp, #56	@ 0x38
 8026c90:	c203      	stmia	r2!, {r0, r1}
 8026c92:	6818      	ldr	r0, [r3, #0]
 8026c94:	6859      	ldr	r1, [r3, #4]
 8026c96:	aa10      	add	r2, sp, #64	@ 0x40
 8026c98:	c203      	stmia	r2!, {r0, r1}
 8026c9a:	a80e      	add	r0, sp, #56	@ 0x38
 8026c9c:	f7e6 f818 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026ca0:	4621      	mov	r1, r4
 8026ca2:	a810      	add	r0, sp, #64	@ 0x40
 8026ca4:	f7e6 f83c 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026ca8:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 8026cac:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 8026cb0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8026cb4:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8026cb8:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8026cbc:	4873      	ldr	r0, [pc, #460]	@ (8026e8c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8026cbe:	fb11 4105 	smlabb	r1, r1, r5, r4
 8026cc2:	4422      	add	r2, r4
 8026cc4:	442b      	add	r3, r5
 8026cc6:	6800      	ldr	r0, [r0, #0]
 8026cc8:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8026ccc:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8026cd0:	6802      	ldr	r2, [r0, #0]
 8026cd2:	4489      	add	r9, r1
 8026cd4:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8026cd8:	4c6d      	ldr	r4, [pc, #436]	@ (8026e90 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x220>)
 8026cda:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8026cde:	910a      	str	r1, [sp, #40]	@ 0x28
 8026ce0:	f9bd 1046 	ldrsh.w	r1, [sp, #70]	@ 0x46
 8026ce4:	42a3      	cmp	r3, r4
 8026ce6:	910c      	str	r1, [sp, #48]	@ 0x30
 8026ce8:	f040 8096 	bne.w	8026e18 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8026cec:	6841      	ldr	r1, [r0, #4]
 8026cee:	4c69      	ldr	r4, [pc, #420]	@ (8026e94 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x224>)
 8026cf0:	680b      	ldr	r3, [r1, #0]
 8026cf2:	699b      	ldr	r3, [r3, #24]
 8026cf4:	42a3      	cmp	r3, r4
 8026cf6:	f040 80b4 	bne.w	8026e62 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8026cfa:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8026cfc:	4798      	blx	r3
 8026cfe:	4b66      	ldr	r3, [pc, #408]	@ (8026e98 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8026d00:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8026d04:	881b      	ldrh	r3, [r3, #0]
 8026d06:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8026d0a:	fb01 2303 	mla	r3, r1, r3, r2
 8026d0e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026d12:	4418      	add	r0, r3
 8026d14:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026d16:	2b00      	cmp	r3, #0
 8026d18:	dd76      	ble.n	8026e08 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x198>
 8026d1a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026d1c:	2b00      	cmp	r3, #0
 8026d1e:	dd73      	ble.n	8026e08 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x198>
 8026d20:	2200      	movs	r2, #0
 8026d22:	2104      	movs	r1, #4
 8026d24:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026d28:	920b      	str	r2, [sp, #44]	@ 0x2c
 8026d2a:	930d      	str	r3, [sp, #52]	@ 0x34
 8026d2c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026d2e:	464e      	mov	r6, r9
 8026d30:	1cc5      	adds	r5, r0, #3
 8026d32:	eb09 0c03 	add.w	ip, r9, r3
 8026d36:	e039      	b.n	8026dac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026d38:	fb0a f303 	mul.w	r3, sl, r3
 8026d3c:	1c5a      	adds	r2, r3, #1
 8026d3e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026d42:	121b      	asrs	r3, r3, #8
 8026d44:	43df      	mvns	r7, r3
 8026d46:	b29b      	uxth	r3, r3
 8026d48:	fb1e f203 	smulbb	r2, lr, r3
 8026d4c:	f815 ec03 	ldrb.w	lr, [r5, #-3]
 8026d50:	b2ff      	uxtb	r7, r7
 8026d52:	fb0e 2e07 	mla	lr, lr, r7, r2
 8026d56:	fa1f fe8e 	uxth.w	lr, lr
 8026d5a:	f815 2c02 	ldrb.w	r2, [r5, #-2]
 8026d5e:	f10e 0b01 	add.w	fp, lr, #1
 8026d62:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 8026d66:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8026d6a:	fb12 fb07 	smulbb	fp, r2, r7
 8026d6e:	f805 ec03 	strb.w	lr, [r5, #-3]
 8026d72:	7862      	ldrb	r2, [r4, #1]
 8026d74:	f815 ec01 	ldrb.w	lr, [r5, #-1]
 8026d78:	fb02 b203 	mla	r2, r2, r3, fp
 8026d7c:	b292      	uxth	r2, r2
 8026d7e:	f102 0b01 	add.w	fp, r2, #1
 8026d82:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026d86:	1212      	asrs	r2, r2, #8
 8026d88:	fb1e f707 	smulbb	r7, lr, r7
 8026d8c:	f805 2c02 	strb.w	r2, [r5, #-2]
 8026d90:	78a2      	ldrb	r2, [r4, #2]
 8026d92:	fb02 7303 	mla	r3, r2, r3, r7
 8026d96:	b29b      	uxth	r3, r3
 8026d98:	1c5a      	adds	r2, r3, #1
 8026d9a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026d9e:	121b      	asrs	r3, r3, #8
 8026da0:	f805 3c01 	strb.w	r3, [r5, #-1]
 8026da4:	45b4      	cmp	ip, r6
 8026da6:	f105 0503 	add.w	r5, r5, #3
 8026daa:	d01b      	beq.n	8026de4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x174>
 8026dac:	f816 2b01 	ldrb.w	r2, [r6], #1
 8026db0:	fb11 1202 	smlabb	r2, r1, r2, r1
 8026db4:	eb08 0402 	add.w	r4, r8, r2
 8026db8:	78e3      	ldrb	r3, [r4, #3]
 8026dba:	2b00      	cmp	r3, #0
 8026dbc:	d0f2      	beq.n	8026da4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x134>
 8026dbe:	2bff      	cmp	r3, #255	@ 0xff
 8026dc0:	f818 e002 	ldrb.w	lr, [r8, r2]
 8026dc4:	d1b8      	bne.n	8026d38 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 8026dc6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8026dca:	d1b5      	bne.n	8026d38 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 8026dcc:	f805 ec03 	strb.w	lr, [r5, #-3]
 8026dd0:	7863      	ldrb	r3, [r4, #1]
 8026dd2:	45b4      	cmp	ip, r6
 8026dd4:	f805 3c02 	strb.w	r3, [r5, #-2]
 8026dd8:	78a3      	ldrb	r3, [r4, #2]
 8026dda:	f105 0503 	add.w	r5, r5, #3
 8026dde:	f805 3c04 	strb.w	r3, [r5, #-4]
 8026de2:	d1e3      	bne.n	8026dac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026de4:	4b2c      	ldr	r3, [pc, #176]	@ (8026e98 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8026de6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8026de8:	881b      	ldrh	r3, [r3, #0]
 8026dea:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8026dec:	1a9b      	subs	r3, r3, r2
 8026dee:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026df2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8026df4:	442b      	add	r3, r5
 8026df6:	4418      	add	r0, r3
 8026df8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026dfa:	3401      	adds	r4, #1
 8026dfc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8026e00:	42a3      	cmp	r3, r4
 8026e02:	940b      	str	r4, [sp, #44]	@ 0x2c
 8026e04:	4491      	add	r9, r2
 8026e06:	d191      	bne.n	8026d2c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8026e08:	4b20      	ldr	r3, [pc, #128]	@ (8026e8c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8026e0a:	6818      	ldr	r0, [r3, #0]
 8026e0c:	6803      	ldr	r3, [r0, #0]
 8026e0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026e10:	4798      	blx	r3
 8026e12:	b013      	add	sp, #76	@ 0x4c
 8026e14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e18:	4798      	blx	r3
 8026e1a:	4602      	mov	r2, r0
 8026e1c:	2a01      	cmp	r2, #1
 8026e1e:	d124      	bne.n	8026e6a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1fa>
 8026e20:	4b1e      	ldr	r3, [pc, #120]	@ (8026e9c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x22c>)
 8026e22:	6818      	ldr	r0, [r3, #0]
 8026e24:	b328      	cbz	r0, 8026e72 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8026e26:	260b      	movs	r6, #11
 8026e28:	4b1b      	ldr	r3, [pc, #108]	@ (8026e98 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8026e2a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8026e2e:	881f      	ldrh	r7, [r3, #0]
 8026e30:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8026e34:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8026e38:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 8026e3c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8026e40:	9208      	str	r2, [sp, #32]
 8026e42:	9205      	str	r2, [sp, #20]
 8026e44:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8026e48:	f8cd a010 	str.w	sl, [sp, #16]
 8026e4c:	4642      	mov	r2, r8
 8026e4e:	4649      	mov	r1, r9
 8026e50:	e9cd 7606 	strd	r7, r6, [sp, #24]
 8026e54:	9503      	str	r5, [sp, #12]
 8026e56:	9400      	str	r4, [sp, #0]
 8026e58:	f7f9 feae 	bl	8020bb8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8026e5c:	b013      	add	sp, #76	@ 0x4c
 8026e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e62:	4608      	mov	r0, r1
 8026e64:	4798      	blx	r3
 8026e66:	4602      	mov	r2, r0
 8026e68:	e7d8      	b.n	8026e1c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 8026e6a:	4b08      	ldr	r3, [pc, #32]	@ (8026e8c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8026e6c:	6818      	ldr	r0, [r3, #0]
 8026e6e:	6802      	ldr	r2, [r0, #0]
 8026e70:	e743      	b.n	8026cfa <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8026e72:	4b0b      	ldr	r3, [pc, #44]	@ (8026ea0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x230>)
 8026e74:	4a0b      	ldr	r2, [pc, #44]	@ (8026ea4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8026e76:	217c      	movs	r1, #124	@ 0x7c
 8026e78:	480b      	ldr	r0, [pc, #44]	@ (8026ea8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 8026e7a:	f00b fb05 	bl	8032488 <__assert_func>
 8026e7e:	4b0b      	ldr	r3, [pc, #44]	@ (8026eac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8026e80:	4a0b      	ldr	r2, [pc, #44]	@ (8026eb0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8026e82:	f640 1155 	movw	r1, #2389	@ 0x955
 8026e86:	480b      	ldr	r0, [pc, #44]	@ (8026eb4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8026e88:	f00b fafe 	bl	8032488 <__assert_func>
 8026e8c:	20082ec4 	.word	0x20082ec4
 8026e90:	0800121d 	.word	0x0800121d
 8026e94:	0800ba75 	.word	0x0800ba75
 8026e98:	20082ebe 	.word	0x20082ebe
 8026e9c:	20083364 	.word	0x20083364
 8026ea0:	080361a4 	.word	0x080361a4
 8026ea4:	08036a10 	.word	0x08036a10
 8026ea8:	080361cc 	.word	0x080361cc
 8026eac:	080362bc 	.word	0x080362bc
 8026eb0:	080370cc 	.word	0x080370cc
 8026eb4:	08036248 	.word	0x08036248

08026eb8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8026eb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ebc:	4614      	mov	r4, r2
 8026ebe:	7812      	ldrb	r2, [r2, #0]
 8026ec0:	b08d      	sub	sp, #52	@ 0x34
 8026ec2:	461e      	mov	r6, r3
 8026ec4:	f89d 805c 	ldrb.w	r8, [sp, #92]	@ 0x5c
 8026ec8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8026eca:	2a00      	cmp	r2, #0
 8026ecc:	f040 81e0 	bne.w	8027290 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 8026ed0:	6830      	ldr	r0, [r6, #0]
 8026ed2:	460d      	mov	r5, r1
 8026ed4:	6871      	ldr	r1, [r6, #4]
 8026ed6:	aa08      	add	r2, sp, #32
 8026ed8:	c203      	stmia	r2!, {r0, r1}
 8026eda:	6818      	ldr	r0, [r3, #0]
 8026edc:	6859      	ldr	r1, [r3, #4]
 8026ede:	aa0a      	add	r2, sp, #40	@ 0x28
 8026ee0:	c203      	stmia	r2!, {r0, r1}
 8026ee2:	a808      	add	r0, sp, #32
 8026ee4:	f7e5 fef4 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026ee8:	4631      	mov	r1, r6
 8026eea:	a80a      	add	r0, sp, #40	@ 0x28
 8026eec:	f7e5 ff18 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026ef0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8026ef4:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8026ef8:	f003 0201 	and.w	r2, r3, #1
 8026efc:	4617      	mov	r7, r2
 8026efe:	9204      	str	r2, [sp, #16]
 8026f00:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8026f04:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 8026f08:	443b      	add	r3, r7
 8026f0a:	fb02 1303 	mla	r3, r2, r3, r1
 8026f0e:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 8026f12:	4402      	add	r2, r0
 8026f14:	48d6      	ldr	r0, [pc, #856]	@ (8027270 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b8>)
 8026f16:	440e      	add	r6, r1
 8026f18:	6800      	ldr	r0, [r0, #0]
 8026f1a:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 8026f1e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8026f22:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026f26:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8026f2a:	6802      	ldr	r2, [r0, #0]
 8026f2c:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	@ 0x2c
 8026f30:	9301      	str	r3, [sp, #4]
 8026f32:	f001 0301 	and.w	r3, r1, #1
 8026f36:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8026f38:	9305      	str	r3, [sp, #20]
 8026f3a:	9703      	str	r7, [sp, #12]
 8026f3c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8026f40:	4790      	blx	r2
 8026f42:	4acc      	ldr	r2, [pc, #816]	@ (8027274 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3bc>)
 8026f44:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8026f48:	8811      	ldrh	r1, [r2, #0]
 8026f4a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8026f4e:	fb05 f201 	mul.w	r2, r5, r1
 8026f52:	fb01 6303 	mla	r3, r1, r3, r6
 8026f56:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026f5a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026f5e:	4418      	add	r0, r3
 8026f60:	1883      	adds	r3, r0, r2
 8026f62:	4298      	cmp	r0, r3
 8026f64:	9306      	str	r3, [sp, #24]
 8026f66:	f104 0204 	add.w	r2, r4, #4
 8026f6a:	f080 80f1 	bcs.w	8027150 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026f6e:	1e7b      	subs	r3, r7, #1
 8026f70:	4647      	mov	r7, r8
 8026f72:	9307      	str	r3, [sp, #28]
 8026f74:	9b05      	ldr	r3, [sp, #20]
 8026f76:	2b00      	cmp	r3, #0
 8026f78:	f000 8106 	beq.w	8027188 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2d0>
 8026f7c:	9901      	ldr	r1, [sp, #4]
 8026f7e:	780b      	ldrb	r3, [r1, #0]
 8026f80:	1c4d      	adds	r5, r1, #1
 8026f82:	f003 030f 	and.w	r3, r3, #15
 8026f86:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8026f8a:	0e19      	lsrs	r1, r3, #24
 8026f8c:	f040 8136 	bne.w	80271fc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x344>
 8026f90:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8026f94:	3003      	adds	r0, #3
 8026f96:	f1bc 0f01 	cmp.w	ip, #1
 8026f9a:	f340 80ba 	ble.w	8027112 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x25a>
 8026f9e:	f1ac 0302 	sub.w	r3, ip, #2
 8026fa2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026fa6:	f10c 0e01 	add.w	lr, ip, #1
 8026faa:	9302      	str	r3, [sp, #8]
 8026fac:	eb05 060e 	add.w	r6, r5, lr
 8026fb0:	1d84      	adds	r4, r0, #6
 8026fb2:	e00b      	b.n	8026fcc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8026fb4:	f003 030f 	and.w	r3, r3, #15
 8026fb8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8026fbc:	3501      	adds	r5, #1
 8026fbe:	0e19      	lsrs	r1, r3, #24
 8026fc0:	d155      	bne.n	802706e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 8026fc2:	42b5      	cmp	r5, r6
 8026fc4:	f104 0406 	add.w	r4, r4, #6
 8026fc8:	f000 809a 	beq.w	8027100 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x248>
 8026fcc:	782b      	ldrb	r3, [r5, #0]
 8026fce:	0919      	lsrs	r1, r3, #4
 8026fd0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8026fd4:	ea5f 6811 	movs.w	r8, r1, lsr #24
 8026fd8:	d0ec      	beq.n	8026fb4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 8026fda:	f3c1 2a07 	ubfx	sl, r1, #8, #8
 8026fde:	f3c1 4907 	ubfx	r9, r1, #16, #8
 8026fe2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8026fe6:	fa5f f38a 	uxtb.w	r3, sl
 8026fea:	b2c9      	uxtb	r1, r1
 8026fec:	fa5f fb89 	uxtb.w	fp, r9
 8026ff0:	f000 80bf 	beq.w	8027172 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ba>
 8026ff4:	fb08 f807 	mul.w	r8, r8, r7
 8026ff8:	f108 0901 	add.w	r9, r8, #1
 8026ffc:	eb09 2828 	add.w	r8, r9, r8, asr #8
 8027000:	ea4f 2828 	mov.w	r8, r8, asr #8
 8027004:	ea6f 0908 	mvn.w	r9, r8
 8027008:	fa1f f888 	uxth.w	r8, r8
 802700c:	fb11 f108 	smulbb	r1, r1, r8
 8027010:	fb13 f308 	smulbb	r3, r3, r8
 8027014:	fb1b f808 	smulbb	r8, fp, r8
 8027018:	f814 bc06 	ldrb.w	fp, [r4, #-6]
 802701c:	fa5f f989 	uxtb.w	r9, r9
 8027020:	f814 ac05 	ldrb.w	sl, [r4, #-5]
 8027024:	fb0b 1109 	mla	r1, fp, r9, r1
 8027028:	f814 bc04 	ldrb.w	fp, [r4, #-4]
 802702c:	fb0a 3309 	mla	r3, sl, r9, r3
 8027030:	fb0b 8809 	mla	r8, fp, r9, r8
 8027034:	b289      	uxth	r1, r1
 8027036:	fa1f fa83 	uxth.w	sl, r3
 802703a:	fa1f f888 	uxth.w	r8, r8
 802703e:	f101 0b01 	add.w	fp, r1, #1
 8027042:	f10a 0301 	add.w	r3, sl, #1
 8027046:	f108 0901 	add.w	r9, r8, #1
 802704a:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 802704e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8027052:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 8027056:	121b      	asrs	r3, r3, #8
 8027058:	1209      	asrs	r1, r1, #8
 802705a:	ea4f 2828 	mov.w	r8, r8, asr #8
 802705e:	f804 1c06 	strb.w	r1, [r4, #-6]
 8027062:	f804 3c05 	strb.w	r3, [r4, #-5]
 8027066:	f804 8c04 	strb.w	r8, [r4, #-4]
 802706a:	782b      	ldrb	r3, [r5, #0]
 802706c:	e7a2      	b.n	8026fb4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 802706e:	f3c3 2a07 	ubfx	sl, r3, #8, #8
 8027072:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8027076:	29ff      	cmp	r1, #255	@ 0xff
 8027078:	fa5f f88a 	uxtb.w	r8, sl
 802707c:	b2db      	uxtb	r3, r3
 802707e:	fa5f fb89 	uxtb.w	fp, r9
 8027082:	d06d      	beq.n	8027160 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2a8>
 8027084:	fb01 f107 	mul.w	r1, r1, r7
 8027088:	f101 0901 	add.w	r9, r1, #1
 802708c:	eb09 2121 	add.w	r1, r9, r1, asr #8
 8027090:	1209      	asrs	r1, r1, #8
 8027092:	ea6f 0901 	mvn.w	r9, r1
 8027096:	b289      	uxth	r1, r1
 8027098:	fb13 f301 	smulbb	r3, r3, r1
 802709c:	fb18 f801 	smulbb	r8, r8, r1
 80270a0:	fb1b f101 	smulbb	r1, fp, r1
 80270a4:	f814 bc03 	ldrb.w	fp, [r4, #-3]
 80270a8:	fa5f f989 	uxtb.w	r9, r9
 80270ac:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 80270b0:	fb0b 3309 	mla	r3, fp, r9, r3
 80270b4:	f814 bc01 	ldrb.w	fp, [r4, #-1]
 80270b8:	fb0a 8809 	mla	r8, sl, r9, r8
 80270bc:	fb0b 1109 	mla	r1, fp, r9, r1
 80270c0:	fa1f fa88 	uxth.w	sl, r8
 80270c4:	fa1f fb83 	uxth.w	fp, r3
 80270c8:	b289      	uxth	r1, r1
 80270ca:	f10b 0801 	add.w	r8, fp, #1
 80270ce:	f10a 0301 	add.w	r3, sl, #1
 80270d2:	f101 0901 	add.w	r9, r1, #1
 80270d6:	eb08 2b1b 	add.w	fp, r8, fp, lsr #8
 80270da:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80270de:	eb09 2111 	add.w	r1, r9, r1, lsr #8
 80270e2:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 80270e6:	121b      	asrs	r3, r3, #8
 80270e8:	1209      	asrs	r1, r1, #8
 80270ea:	42b5      	cmp	r5, r6
 80270ec:	f804 bc03 	strb.w	fp, [r4, #-3]
 80270f0:	f804 3c02 	strb.w	r3, [r4, #-2]
 80270f4:	f804 1c01 	strb.w	r1, [r4, #-1]
 80270f8:	f104 0406 	add.w	r4, r4, #6
 80270fc:	f47f af66 	bne.w	8026fcc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8027100:	9b02      	ldr	r3, [sp, #8]
 8027102:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8027106:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 802710a:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 802710e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8027112:	f1bc 0f01 	cmp.w	ip, #1
 8027116:	d106      	bne.n	8027126 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8027118:	782b      	ldrb	r3, [r5, #0]
 802711a:	091b      	lsrs	r3, r3, #4
 802711c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8027120:	0e19      	lsrs	r1, r3, #24
 8027122:	d135      	bne.n	8027190 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2d8>
 8027124:	3003      	adds	r0, #3
 8027126:	4b53      	ldr	r3, [pc, #332]	@ (8027274 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3bc>)
 8027128:	9c03      	ldr	r4, [sp, #12]
 802712a:	8819      	ldrh	r1, [r3, #0]
 802712c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8027130:	1b09      	subs	r1, r1, r4
 8027132:	9c04      	ldr	r4, [sp, #16]
 8027134:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027138:	4408      	add	r0, r1
 802713a:	4423      	add	r3, r4
 802713c:	9901      	ldr	r1, [sp, #4]
 802713e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8027142:	eb01 0363 	add.w	r3, r1, r3, asr #1
 8027146:	9301      	str	r3, [sp, #4]
 8027148:	9b06      	ldr	r3, [sp, #24]
 802714a:	4283      	cmp	r3, r0
 802714c:	f63f af12 	bhi.w	8026f74 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8027150:	4b47      	ldr	r3, [pc, #284]	@ (8027270 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b8>)
 8027152:	6818      	ldr	r0, [r3, #0]
 8027154:	6803      	ldr	r3, [r0, #0]
 8027156:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027158:	4798      	blx	r3
 802715a:	b00d      	add	sp, #52	@ 0x34
 802715c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027160:	2fff      	cmp	r7, #255	@ 0xff
 8027162:	d18f      	bne.n	8027084 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1cc>
 8027164:	f804 3c03 	strb.w	r3, [r4, #-3]
 8027168:	f804 ac02 	strb.w	sl, [r4, #-2]
 802716c:	f804 9c01 	strb.w	r9, [r4, #-1]
 8027170:	e727      	b.n	8026fc2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 8027172:	2fff      	cmp	r7, #255	@ 0xff
 8027174:	f47f af3e 	bne.w	8026ff4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8027178:	f804 1c06 	strb.w	r1, [r4, #-6]
 802717c:	f804 ac05 	strb.w	sl, [r4, #-5]
 8027180:	f804 9c04 	strb.w	r9, [r4, #-4]
 8027184:	782b      	ldrb	r3, [r5, #0]
 8027186:	e715      	b.n	8026fb4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 8027188:	9d01      	ldr	r5, [sp, #4]
 802718a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 802718e:	e702      	b.n	8026f96 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xde>
 8027190:	f3c3 2507 	ubfx	r5, r3, #8, #8
 8027194:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8027198:	29ff      	cmp	r1, #255	@ 0xff
 802719a:	fa5f fc85 	uxtb.w	ip, r5
 802719e:	b2db      	uxtb	r3, r3
 80271a0:	b2e6      	uxtb	r6, r4
 80271a2:	d069      	beq.n	8027278 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 80271a4:	fb01 f107 	mul.w	r1, r1, r7
 80271a8:	1c4c      	adds	r4, r1, #1
 80271aa:	eb04 2121 	add.w	r1, r4, r1, asr #8
 80271ae:	120c      	asrs	r4, r1, #8
 80271b0:	43e1      	mvns	r1, r4
 80271b2:	b2a4      	uxth	r4, r4
 80271b4:	fb13 f304 	smulbb	r3, r3, r4
 80271b8:	fb1c fc04 	smulbb	ip, ip, r4
 80271bc:	fb16 f404 	smulbb	r4, r6, r4
 80271c0:	7806      	ldrb	r6, [r0, #0]
 80271c2:	b2c9      	uxtb	r1, r1
 80271c4:	fb06 3301 	mla	r3, r6, r1, r3
 80271c8:	7845      	ldrb	r5, [r0, #1]
 80271ca:	7886      	ldrb	r6, [r0, #2]
 80271cc:	fb05 c501 	mla	r5, r5, r1, ip
 80271d0:	fb06 4401 	mla	r4, r6, r1, r4
 80271d4:	b29b      	uxth	r3, r3
 80271d6:	b2ad      	uxth	r5, r5
 80271d8:	b2a4      	uxth	r4, r4
 80271da:	1c5e      	adds	r6, r3, #1
 80271dc:	f105 0c01 	add.w	ip, r5, #1
 80271e0:	1c61      	adds	r1, r4, #1
 80271e2:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80271e6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80271ea:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 80271ee:	121b      	asrs	r3, r3, #8
 80271f0:	122d      	asrs	r5, r5, #8
 80271f2:	1209      	asrs	r1, r1, #8
 80271f4:	7003      	strb	r3, [r0, #0]
 80271f6:	7045      	strb	r5, [r0, #1]
 80271f8:	7081      	strb	r1, [r0, #2]
 80271fa:	e793      	b.n	8027124 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 80271fc:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8027200:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8027204:	29ff      	cmp	r1, #255	@ 0xff
 8027206:	fa5f fe86 	uxtb.w	lr, r6
 802720a:	b2db      	uxtb	r3, r3
 802720c:	fa5f fc84 	uxtb.w	ip, r4
 8027210:	d038      	beq.n	8027284 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3cc>
 8027212:	fb01 f107 	mul.w	r1, r1, r7
 8027216:	1c4c      	adds	r4, r1, #1
 8027218:	eb04 2421 	add.w	r4, r4, r1, asr #8
 802721c:	1224      	asrs	r4, r4, #8
 802721e:	43e1      	mvns	r1, r4
 8027220:	b2a4      	uxth	r4, r4
 8027222:	fb13 f304 	smulbb	r3, r3, r4
 8027226:	fb1e fe04 	smulbb	lr, lr, r4
 802722a:	fb1c f404 	smulbb	r4, ip, r4
 802722e:	f890 c000 	ldrb.w	ip, [r0]
 8027232:	b2c9      	uxtb	r1, r1
 8027234:	fb0c 3301 	mla	r3, ip, r1, r3
 8027238:	7846      	ldrb	r6, [r0, #1]
 802723a:	f890 c002 	ldrb.w	ip, [r0, #2]
 802723e:	fb06 e601 	mla	r6, r6, r1, lr
 8027242:	fb0c 4401 	mla	r4, ip, r1, r4
 8027246:	b29b      	uxth	r3, r3
 8027248:	b2b6      	uxth	r6, r6
 802724a:	b2a4      	uxth	r4, r4
 802724c:	f103 0c01 	add.w	ip, r3, #1
 8027250:	f106 0e01 	add.w	lr, r6, #1
 8027254:	1c61      	adds	r1, r4, #1
 8027256:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802725a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802725e:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 8027262:	121b      	asrs	r3, r3, #8
 8027264:	1236      	asrs	r6, r6, #8
 8027266:	1209      	asrs	r1, r1, #8
 8027268:	7003      	strb	r3, [r0, #0]
 802726a:	7046      	strb	r6, [r0, #1]
 802726c:	7081      	strb	r1, [r0, #2]
 802726e:	e68f      	b.n	8026f90 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xd8>
 8027270:	20082ec4 	.word	0x20082ec4
 8027274:	20082ebe 	.word	0x20082ebe
 8027278:	2fff      	cmp	r7, #255	@ 0xff
 802727a:	d193      	bne.n	80271a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ec>
 802727c:	7003      	strb	r3, [r0, #0]
 802727e:	7045      	strb	r5, [r0, #1]
 8027280:	7084      	strb	r4, [r0, #2]
 8027282:	e74f      	b.n	8027124 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 8027284:	2fff      	cmp	r7, #255	@ 0xff
 8027286:	d1c4      	bne.n	8027212 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x35a>
 8027288:	7003      	strb	r3, [r0, #0]
 802728a:	7046      	strb	r6, [r0, #1]
 802728c:	7084      	strb	r4, [r0, #2]
 802728e:	e67f      	b.n	8026f90 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xd8>
 8027290:	4b03      	ldr	r3, [pc, #12]	@ (80272a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3e8>)
 8027292:	4a04      	ldr	r2, [pc, #16]	@ (80272a4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ec>)
 8027294:	f640 11b5 	movw	r1, #2485	@ 0x9b5
 8027298:	4803      	ldr	r0, [pc, #12]	@ (80272a8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3f0>)
 802729a:	f00b f8f5 	bl	8032488 <__assert_func>
 802729e:	bf00      	nop
 80272a0:	0803633c 	.word	0x0803633c
 80272a4:	080375bc 	.word	0x080375bc
 80272a8:	08036248 	.word	0x08036248

080272ac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 80272ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80272b0:	b091      	sub	sp, #68	@ 0x44
 80272b2:	9208      	str	r2, [sp, #32]
 80272b4:	9100      	str	r1, [sp, #0]
 80272b6:	7812      	ldrb	r2, [r2, #0]
 80272b8:	f89d 106c 	ldrb.w	r1, [sp, #108]	@ 0x6c
 80272bc:	461c      	mov	r4, r3
 80272be:	9106      	str	r1, [sp, #24]
 80272c0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80272c2:	2a00      	cmp	r2, #0
 80272c4:	f040 8211 	bne.w	80276ea <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x43e>
 80272c8:	6820      	ldr	r0, [r4, #0]
 80272ca:	6861      	ldr	r1, [r4, #4]
 80272cc:	aa0c      	add	r2, sp, #48	@ 0x30
 80272ce:	c203      	stmia	r2!, {r0, r1}
 80272d0:	6818      	ldr	r0, [r3, #0]
 80272d2:	6859      	ldr	r1, [r3, #4]
 80272d4:	aa0e      	add	r2, sp, #56	@ 0x38
 80272d6:	c203      	stmia	r2!, {r0, r1}
 80272d8:	a80c      	add	r0, sp, #48	@ 0x30
 80272da:	f7e5 fcf9 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80272de:	4621      	mov	r1, r4
 80272e0:	a80e      	add	r0, sp, #56	@ 0x38
 80272e2:	f7e5 fd1d 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80272e6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80272ea:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80272ee:	f340 815b 	ble.w	80275a8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fc>
 80272f2:	2201      	movs	r2, #1
 80272f4:	b299      	uxth	r1, r3
 80272f6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80272fa:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 80272fe:	fb93 f5f2 	sdiv	r5, r3, r2
 8027302:	b2ae      	uxth	r6, r5
 8027304:	fb02 3416 	mls	r4, r2, r6, r3
 8027308:	fb14 0101 	smlabb	r1, r4, r1, r0
 802730c:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	@ 0x36
 8027310:	fa1f f881 	uxth.w	r8, r1
 8027314:	4414      	add	r4, r2
 8027316:	3c01      	subs	r4, #1
 8027318:	fb94 f4f2 	sdiv	r4, r4, r2
 802731c:	b136      	cbz	r6, 802732c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x80>
 802731e:	9a08      	ldr	r2, [sp, #32]
 8027320:	9900      	ldr	r1, [sp, #0]
 8027322:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8027326:	ba12      	rev	r2, r2
 8027328:	4411      	add	r1, r2
 802732a:	9100      	str	r1, [sp, #0]
 802732c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8027330:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8027334:	4402      	add	r2, r0
 8027336:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 802733a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 802733e:	440b      	add	r3, r1
 8027340:	4616      	mov	r6, r2
 8027342:	499c      	ldr	r1, [pc, #624]	@ (80275b4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8027344:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8027348:	6808      	ldr	r0, [r1, #0]
 802734a:	9205      	str	r2, [sp, #20]
 802734c:	6803      	ldr	r3, [r0, #0]
 802734e:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8027352:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8027354:	4798      	blx	r3
 8027356:	f1b8 0f00 	cmp.w	r8, #0
 802735a:	bf0c      	ite	eq
 802735c:	4633      	moveq	r3, r6
 802735e:	2300      	movne	r3, #0
 8027360:	4995      	ldr	r1, [pc, #596]	@ (80275b8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 8027362:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 8027366:	8809      	ldrh	r1, [r1, #0]
 8027368:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 802736c:	fb05 f501 	mul.w	r5, r5, r1
 8027370:	fb01 6202 	mla	r2, r1, r2, r6
 8027374:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027378:	4410      	add	r0, r2
 802737a:	b2a4      	uxth	r4, r4
 802737c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027380:	1942      	adds	r2, r0, r5
 8027382:	00a4      	lsls	r4, r4, #2
 8027384:	1d21      	adds	r1, r4, #4
 8027386:	4290      	cmp	r0, r2
 8027388:	9201      	str	r2, [sp, #4]
 802738a:	9109      	str	r1, [sp, #36]	@ 0x24
 802738c:	b29f      	uxth	r7, r3
 802738e:	d21a      	bcs.n	80273c6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x11a>
 8027390:	2300      	movs	r3, #0
 8027392:	4641      	mov	r1, r8
 8027394:	9302      	str	r3, [sp, #8]
 8027396:	b963      	cbnz	r3, 80273b2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 8027398:	9d00      	ldr	r5, [sp, #0]
 802739a:	782a      	ldrb	r2, [r5, #0]
 802739c:	0993      	lsrs	r3, r2, #6
 802739e:	1e5c      	subs	r4, r3, #1
 80273a0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80273a4:	2c02      	cmp	r4, #2
 80273a6:	9202      	str	r2, [sp, #8]
 80273a8:	f200 8099 	bhi.w	80274de <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x232>
 80273ac:	3501      	adds	r5, #1
 80273ae:	9500      	str	r5, [sp, #0]
 80273b0:	b29b      	uxth	r3, r3
 80273b2:	b181      	cbz	r1, 80273d6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x12a>
 80273b4:	428b      	cmp	r3, r1
 80273b6:	f080 808c 	bcs.w	80274d2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x226>
 80273ba:	1acb      	subs	r3, r1, r3
 80273bc:	b299      	uxth	r1, r3
 80273be:	2300      	movs	r3, #0
 80273c0:	9a01      	ldr	r2, [sp, #4]
 80273c2:	4290      	cmp	r0, r2
 80273c4:	d3e7      	bcc.n	8027396 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xea>
 80273c6:	4b7b      	ldr	r3, [pc, #492]	@ (80275b4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 80273c8:	6818      	ldr	r0, [r3, #0]
 80273ca:	6803      	ldr	r3, [r0, #0]
 80273cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80273ce:	4798      	blx	r3
 80273d0:	b011      	add	sp, #68	@ 0x44
 80273d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80273d6:	2204      	movs	r2, #4
 80273d8:	4615      	mov	r5, r2
 80273da:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80273dc:	9a02      	ldr	r2, [sp, #8]
 80273de:	42bb      	cmp	r3, r7
 80273e0:	fb15 4202 	smlabb	r2, r5, r2, r4
 80273e4:	9c08      	ldr	r4, [sp, #32]
 80273e6:	58a5      	ldr	r5, [r4, r2]
 80273e8:	ea4f 6815 	mov.w	r8, r5, lsr #24
 80273ec:	f0c0 808d 	bcc.w	802750a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x25e>
 80273f0:	1bda      	subs	r2, r3, r7
 80273f2:	b292      	uxth	r2, r2
 80273f4:	9203      	str	r2, [sp, #12]
 80273f6:	2f00      	cmp	r7, #0
 80273f8:	d076      	beq.n	80274e8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 80273fa:	9704      	str	r7, [sp, #16]
 80273fc:	9107      	str	r1, [sp, #28]
 80273fe:	9a06      	ldr	r2, [sp, #24]
 8027400:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8027404:	fb02 f408 	mul.w	r4, r2, r8
 8027408:	1c62      	adds	r2, r4, #1
 802740a:	eb02 2224 	add.w	r2, r2, r4, asr #8
 802740e:	1212      	asrs	r2, r2, #8
 8027410:	43d4      	mvns	r4, r2
 8027412:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 8027416:	b292      	uxth	r2, r2
 8027418:	b2ed      	uxtb	r5, r5
 802741a:	fa5f f98b 	uxtb.w	r9, fp
 802741e:	fa5f fa86 	uxtb.w	sl, r6
 8027422:	fb15 fc02 	smulbb	ip, r5, r2
 8027426:	fb19 fe02 	smulbb	lr, r9, r2
 802742a:	fb1a f202 	smulbb	r2, sl, r2
 802742e:	f88d 602b 	strb.w	r6, [sp, #43]	@ 0x2b
 8027432:	b2e4      	uxtb	r4, r4
 8027434:	fa1f fc8c 	uxth.w	ip, ip
 8027438:	fa1f fe8e 	uxth.w	lr, lr
 802743c:	b292      	uxth	r2, r2
 802743e:	f1b8 0f00 	cmp.w	r8, #0
 8027442:	d06b      	beq.n	802751c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x270>
 8027444:	9e06      	ldr	r6, [sp, #24]
 8027446:	2eff      	cmp	r6, #255	@ 0xff
 8027448:	d070      	beq.n	802752c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x280>
 802744a:	9d04      	ldr	r5, [sp, #16]
 802744c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8027450:	f105 36ff 	add.w	r6, r5, #4294967295
 8027454:	b2b5      	uxth	r5, r6
 8027456:	9504      	str	r5, [sp, #16]
 8027458:	f000 810e 	beq.w	8027678 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3cc>
 802745c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027460:	f100 0a06 	add.w	sl, r0, #6
 8027464:	44aa      	add	sl, r5
 8027466:	f100 0903 	add.w	r9, r0, #3
 802746a:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 802746e:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 8027472:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 8027476:	fb08 c804 	mla	r8, r8, r4, ip
 802747a:	fb06 e604 	mla	r6, r6, r4, lr
 802747e:	fb05 2504 	mla	r5, r5, r4, r2
 8027482:	fa1f f888 	uxth.w	r8, r8
 8027486:	b2b6      	uxth	r6, r6
 8027488:	f108 0b01 	add.w	fp, r8, #1
 802748c:	b2ad      	uxth	r5, r5
 802748e:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8027492:	f106 0b01 	add.w	fp, r6, #1
 8027496:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 802749a:	f105 0b01 	add.w	fp, r5, #1
 802749e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80274a2:	ea4f 2828 	mov.w	r8, r8, asr #8
 80274a6:	1236      	asrs	r6, r6, #8
 80274a8:	122d      	asrs	r5, r5, #8
 80274aa:	f809 8c03 	strb.w	r8, [r9, #-3]
 80274ae:	f809 6c02 	strb.w	r6, [r9, #-2]
 80274b2:	f809 5c01 	strb.w	r5, [r9, #-1]
 80274b6:	f109 0903 	add.w	r9, r9, #3
 80274ba:	45ca      	cmp	sl, r9
 80274bc:	d1d5      	bne.n	802746a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 80274be:	9e04      	ldr	r6, [sp, #16]
 80274c0:	3601      	adds	r6, #1
 80274c2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80274c6:	4430      	add	r0, r6
 80274c8:	42bb      	cmp	r3, r7
 80274ca:	d20d      	bcs.n	80274e8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 80274cc:	9b03      	ldr	r3, [sp, #12]
 80274ce:	9f07      	ldr	r7, [sp, #28]
 80274d0:	e776      	b.n	80273c0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80274d2:	1a5b      	subs	r3, r3, r1
 80274d4:	b29b      	uxth	r3, r3
 80274d6:	f8bd 7014 	ldrh.w	r7, [sp, #20]
 80274da:	2100      	movs	r1, #0
 80274dc:	e770      	b.n	80273c0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80274de:	462a      	mov	r2, r5
 80274e0:	3202      	adds	r2, #2
 80274e2:	786b      	ldrb	r3, [r5, #1]
 80274e4:	9200      	str	r2, [sp, #0]
 80274e6:	e764      	b.n	80273b2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 80274e8:	9c05      	ldr	r4, [sp, #20]
 80274ea:	4b33      	ldr	r3, [pc, #204]	@ (80275b8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 80274ec:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80274f0:	b2a7      	uxth	r7, r4
 80274f2:	881a      	ldrh	r2, [r3, #0]
 80274f4:	1bc9      	subs	r1, r1, r7
 80274f6:	b289      	uxth	r1, r1
 80274f8:	1b12      	subs	r2, r2, r4
 80274fa:	2900      	cmp	r1, #0
 80274fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027500:	9b03      	ldr	r3, [sp, #12]
 8027502:	bf18      	it	ne
 8027504:	2700      	movne	r7, #0
 8027506:	4410      	add	r0, r2
 8027508:	e75a      	b.n	80273c0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 802750a:	1afa      	subs	r2, r7, r3
 802750c:	b292      	uxth	r2, r2
 802750e:	9207      	str	r2, [sp, #28]
 8027510:	2b00      	cmp	r3, #0
 8027512:	f000 80f1 	beq.w	80276f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>
 8027516:	e9cd 1303 	strd	r1, r3, [sp, #12]
 802751a:	e770      	b.n	80273fe <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x152>
 802751c:	9a04      	ldr	r2, [sp, #16]
 802751e:	3a01      	subs	r2, #1
 8027520:	b292      	uxth	r2, r2
 8027522:	3201      	adds	r2, #1
 8027524:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027528:	4410      	add	r0, r2
 802752a:	e7cd      	b.n	80274c8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 802752c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8027530:	d044      	beq.n	80275bc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x310>
 8027532:	9d04      	ldr	r5, [sp, #16]
 8027534:	f100 0a06 	add.w	sl, r0, #6
 8027538:	1e6e      	subs	r6, r5, #1
 802753a:	b2b5      	uxth	r5, r6
 802753c:	9504      	str	r5, [sp, #16]
 802753e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027542:	44aa      	add	sl, r5
 8027544:	f100 0903 	add.w	r9, r0, #3
 8027548:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 802754c:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 8027550:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 8027554:	fb08 c804 	mla	r8, r8, r4, ip
 8027558:	fb06 e604 	mla	r6, r6, r4, lr
 802755c:	fb05 2504 	mla	r5, r5, r4, r2
 8027560:	fa1f f888 	uxth.w	r8, r8
 8027564:	b2b6      	uxth	r6, r6
 8027566:	f108 0b01 	add.w	fp, r8, #1
 802756a:	b2ad      	uxth	r5, r5
 802756c:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8027570:	f106 0b01 	add.w	fp, r6, #1
 8027574:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8027578:	f105 0b01 	add.w	fp, r5, #1
 802757c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027580:	ea4f 2828 	mov.w	r8, r8, asr #8
 8027584:	1236      	asrs	r6, r6, #8
 8027586:	122d      	asrs	r5, r5, #8
 8027588:	f809 8c03 	strb.w	r8, [r9, #-3]
 802758c:	f809 6c02 	strb.w	r6, [r9, #-2]
 8027590:	f809 5c01 	strb.w	r5, [r9, #-1]
 8027594:	f109 0903 	add.w	r9, r9, #3
 8027598:	45ca      	cmp	sl, r9
 802759a:	d1d5      	bne.n	8027548 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x29c>
 802759c:	9a04      	ldr	r2, [sp, #16]
 802759e:	3201      	adds	r2, #1
 80275a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80275a4:	4410      	add	r0, r2
 80275a6:	e78f      	b.n	80274c8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 80275a8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80275ac:	b299      	uxth	r1, r3
 80275ae:	fb94 f2f1 	sdiv	r2, r4, r1
 80275b2:	e6a0      	b.n	80272f6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x4a>
 80275b4:	20082ec4 	.word	0x20082ec4
 80275b8:	20082ebe 	.word	0x20082ebe
 80275bc:	9e04      	ldr	r6, [sp, #16]
 80275be:	1e72      	subs	r2, r6, #1
 80275c0:	b292      	uxth	r2, r2
 80275c2:	2a02      	cmp	r2, #2
 80275c4:	920b      	str	r2, [sp, #44]	@ 0x2c
 80275c6:	f240 808d 	bls.w	80276e4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>
 80275ca:	f04f 0800 	mov.w	r8, #0
 80275ce:	46c6      	mov	lr, r8
 80275d0:	46c4      	mov	ip, r8
 80275d2:	4602      	mov	r2, r0
 80275d4:	4644      	mov	r4, r8
 80275d6:	f369 0e07 	bfi	lr, r9, #0, #8
 80275da:	f36a 0807 	bfi	r8, sl, #0, #8
 80275de:	f365 0c07 	bfi	ip, r5, #0, #8
 80275e2:	f36a 2e0f 	bfi	lr, sl, #8, #8
 80275e6:	f365 280f 	bfi	r8, r5, #8, #8
 80275ea:	f369 2c0f 	bfi	ip, r9, #8, #8
 80275ee:	f36a 4c17 	bfi	ip, sl, #16, #8
 80275f2:	f369 4817 	bfi	r8, r9, #16, #8
 80275f6:	f365 4e17 	bfi	lr, r5, #16, #8
 80275fa:	f36a 681f 	bfi	r8, sl, #24, #8
 80275fe:	9004      	str	r0, [sp, #16]
 8027600:	f369 6e1f 	bfi	lr, r9, #24, #8
 8027604:	f365 6c1f 	bfi	ip, r5, #24, #8
 8027608:	f3c6 0a8f 	ubfx	sl, r6, #2, #16
 802760c:	3401      	adds	r4, #1
 802760e:	fa1f f984 	uxth.w	r9, r4
 8027612:	45d1      	cmp	r9, sl
 8027614:	f8c2 c000 	str.w	ip, [r2]
 8027618:	f8c2 e004 	str.w	lr, [r2, #4]
 802761c:	f8c2 8008 	str.w	r8, [r2, #8]
 8027620:	f102 020c 	add.w	r2, r2, #12
 8027624:	d3f2      	bcc.n	802760c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8027626:	f026 0403 	bic.w	r4, r6, #3
 802762a:	b2a4      	uxth	r4, r4
 802762c:	eb04 0e44 	add.w	lr, r4, r4, lsl #1
 8027630:	eba6 0c04 	sub.w	ip, r6, r4
 8027634:	42a6      	cmp	r6, r4
 8027636:	9604      	str	r6, [sp, #16]
 8027638:	eb0e 0200 	add.w	r2, lr, r0
 802763c:	fa1f fc8c 	uxth.w	ip, ip
 8027640:	d014      	beq.n	802766c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 8027642:	f10c 34ff 	add.w	r4, ip, #4294967295
 8027646:	f89d 602b 	ldrb.w	r6, [sp, #43]	@ 0x2b
 802764a:	b2a4      	uxth	r4, r4
 802764c:	7015      	strb	r5, [r2, #0]
 802764e:	f882 b001 	strb.w	fp, [r2, #1]
 8027652:	7096      	strb	r6, [r2, #2]
 8027654:	b154      	cbz	r4, 802766c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 8027656:	f1bc 0f02 	cmp.w	ip, #2
 802765a:	70d5      	strb	r5, [r2, #3]
 802765c:	f882 b004 	strb.w	fp, [r2, #4]
 8027660:	7156      	strb	r6, [r2, #5]
 8027662:	d003      	beq.n	802766c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 8027664:	7195      	strb	r5, [r2, #6]
 8027666:	f882 b007 	strb.w	fp, [r2, #7]
 802766a:	7216      	strb	r6, [r2, #8]
 802766c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802766e:	3201      	adds	r2, #1
 8027670:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027674:	4410      	add	r0, r2
 8027676:	e727      	b.n	80274c8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 8027678:	eb05 0a45 	add.w	sl, r5, r5, lsl #1
 802767c:	1d85      	adds	r5, r0, #6
 802767e:	44aa      	add	sl, r5
 8027680:	f100 0903 	add.w	r9, r0, #3
 8027684:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 8027688:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 802768c:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 8027690:	fb08 c804 	mla	r8, r8, r4, ip
 8027694:	fb06 e604 	mla	r6, r6, r4, lr
 8027698:	fb05 2504 	mla	r5, r5, r4, r2
 802769c:	fa1f f888 	uxth.w	r8, r8
 80276a0:	b2b6      	uxth	r6, r6
 80276a2:	f108 0b01 	add.w	fp, r8, #1
 80276a6:	b2ad      	uxth	r5, r5
 80276a8:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80276ac:	f106 0b01 	add.w	fp, r6, #1
 80276b0:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 80276b4:	f105 0b01 	add.w	fp, r5, #1
 80276b8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80276bc:	ea4f 2828 	mov.w	r8, r8, asr #8
 80276c0:	1236      	asrs	r6, r6, #8
 80276c2:	122d      	asrs	r5, r5, #8
 80276c4:	f809 8c03 	strb.w	r8, [r9, #-3]
 80276c8:	f809 6c02 	strb.w	r6, [r9, #-2]
 80276cc:	f809 5c01 	strb.w	r5, [r9, #-1]
 80276d0:	f109 0903 	add.w	r9, r9, #3
 80276d4:	45d1      	cmp	r9, sl
 80276d6:	d1d5      	bne.n	8027684 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 80276d8:	9a04      	ldr	r2, [sp, #16]
 80276da:	3201      	adds	r2, #1
 80276dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80276e0:	4410      	add	r0, r2
 80276e2:	e6f1      	b.n	80274c8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 80276e4:	46b4      	mov	ip, r6
 80276e6:	4602      	mov	r2, r0
 80276e8:	e7ab      	b.n	8027642 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x396>
 80276ea:	4b05      	ldr	r3, [pc, #20]	@ (8027700 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x454>)
 80276ec:	4a05      	ldr	r2, [pc, #20]	@ (8027704 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x458>)
 80276ee:	f640 2118 	movw	r1, #2584	@ 0xa18
 80276f2:	4805      	ldr	r0, [pc, #20]	@ (8027708 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x45c>)
 80276f4:	f00a fec8 	bl	8032488 <__assert_func>
 80276f8:	9f07      	ldr	r7, [sp, #28]
 80276fa:	4619      	mov	r1, r3
 80276fc:	e660      	b.n	80273c0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80276fe:	bf00      	nop
 8027700:	0803633c 	.word	0x0803633c
 8027704:	080379c8 	.word	0x080379c8
 8027708:	08036248 	.word	0x08036248

0802770c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 802770c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027710:	b09d      	sub	sp, #116	@ 0x74
 8027712:	920e      	str	r2, [sp, #56]	@ 0x38
 8027714:	461c      	mov	r4, r3
 8027716:	7812      	ldrb	r2, [r2, #0]
 8027718:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 802771c:	9114      	str	r1, [sp, #80]	@ 0x50
 802771e:	9304      	str	r3, [sp, #16]
 8027720:	2a00      	cmp	r2, #0
 8027722:	f040 8207 	bne.w	8027b34 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x428>
 8027726:	b913      	cbnz	r3, 802772e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x22>
 8027728:	b01d      	add	sp, #116	@ 0x74
 802772a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802772e:	6861      	ldr	r1, [r4, #4]
 8027730:	4681      	mov	r9, r0
 8027732:	6820      	ldr	r0, [r4, #0]
 8027734:	ab18      	add	r3, sp, #96	@ 0x60
 8027736:	c303      	stmia	r3!, {r0, r1}
 8027738:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802773a:	6818      	ldr	r0, [r3, #0]
 802773c:	6859      	ldr	r1, [r3, #4]
 802773e:	ab1a      	add	r3, sp, #104	@ 0x68
 8027740:	c303      	stmia	r3!, {r0, r1}
 8027742:	a818      	add	r0, sp, #96	@ 0x60
 8027744:	f7e5 fac4 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027748:	4621      	mov	r1, r4
 802774a:	a81a      	add	r0, sp, #104	@ 0x68
 802774c:	f7e5 fae8 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027750:	f9bd 1064 	ldrsh.w	r1, [sp, #100]	@ 0x64
 8027754:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8027758:	f340 8151 	ble.w	80279fe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2f2>
 802775c:	2301      	movs	r3, #1
 802775e:	b289      	uxth	r1, r1
 8027760:	9316      	str	r3, [sp, #88]	@ 0x58
 8027762:	f9bd 006a 	ldrsh.w	r0, [sp, #106]	@ 0x6a
 8027766:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 802776a:	fb90 f4f3 	sdiv	r4, r0, r3
 802776e:	441a      	add	r2, r3
 8027770:	3a01      	subs	r2, #1
 8027772:	fb92 f2f3 	sdiv	r2, r2, r3
 8027776:	b2a4      	uxth	r4, r4
 8027778:	fb03 0314 	mls	r3, r3, r4, r0
 802777c:	9415      	str	r4, [sp, #84]	@ 0x54
 802777e:	f8bd 4068 	ldrh.w	r4, [sp, #104]	@ 0x68
 8027782:	f8bd 6060 	ldrh.w	r6, [sp, #96]	@ 0x60
 8027786:	fb13 4101 	smlabb	r1, r3, r1, r4
 802778a:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 802778e:	4bba      	ldr	r3, [pc, #744]	@ (8027a78 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>)
 8027790:	4434      	add	r4, r6
 8027792:	4405      	add	r5, r0
 8027794:	6818      	ldr	r0, [r3, #0]
 8027796:	f8ad 4068 	strh.w	r4, [sp, #104]	@ 0x68
 802779a:	f8ad 506a 	strh.w	r5, [sp, #106]	@ 0x6a
 802779e:	f9bd 606c 	ldrsh.w	r6, [sp, #108]	@ 0x6c
 80277a2:	6803      	ldr	r3, [r0, #0]
 80277a4:	3201      	adds	r2, #1
 80277a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80277a8:	9609      	str	r6, [sp, #36]	@ 0x24
 80277aa:	fa1f f881 	uxth.w	r8, r1
 80277ae:	b294      	uxth	r4, r2
 80277b0:	f9bd 506e 	ldrsh.w	r5, [sp, #110]	@ 0x6e
 80277b4:	4798      	blx	r3
 80277b6:	2200      	movs	r2, #0
 80277b8:	f1b8 0f00 	cmp.w	r8, #0
 80277bc:	bf0c      	ite	eq
 80277be:	4633      	moveq	r3, r6
 80277c0:	2300      	movne	r3, #0
 80277c2:	49ae      	ldr	r1, [pc, #696]	@ (8027a7c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 80277c4:	9213      	str	r2, [sp, #76]	@ 0x4c
 80277c6:	8809      	ldrh	r1, [r1, #0]
 80277c8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 80277cc:	f9bd 6068 	ldrsh.w	r6, [sp, #104]	@ 0x68
 80277d0:	fb01 f505 	mul.w	r5, r1, r5
 80277d4:	fb01 6202 	mla	r2, r1, r2, r6
 80277d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80277dc:	1882      	adds	r2, r0, r2
 80277de:	b29b      	uxth	r3, r3
 80277e0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80277e4:	9200      	str	r2, [sp, #0]
 80277e6:	9302      	str	r3, [sp, #8]
 80277e8:	442a      	add	r2, r5
 80277ea:	f109 030e 	add.w	r3, r9, #14
 80277ee:	9317      	str	r3, [sp, #92]	@ 0x5c
 80277f0:	4647      	mov	r7, r8
 80277f2:	4613      	mov	r3, r2
 80277f4:	00a4      	lsls	r4, r4, #2
 80277f6:	1d21      	adds	r1, r4, #4
 80277f8:	9111      	str	r1, [sp, #68]	@ 0x44
 80277fa:	9206      	str	r2, [sp, #24]
 80277fc:	9a00      	ldr	r2, [sp, #0]
 80277fe:	4293      	cmp	r3, r2
 8027800:	f240 80f5 	bls.w	80279ee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8027804:	2301      	movs	r3, #1
 8027806:	2600      	movs	r6, #0
 8027808:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802780a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802780c:	9307      	str	r3, [sp, #28]
 802780e:	fa10 f282 	uxtah	r2, r0, r2
 8027812:	0092      	lsls	r2, r2, #2
 8027814:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8027816:	3204      	adds	r2, #4
 8027818:	4410      	add	r0, r2
 802781a:	7883      	ldrb	r3, [r0, #2]
 802781c:	7845      	ldrb	r5, [r0, #1]
 802781e:	021b      	lsls	r3, r3, #8
 8027820:	78c0      	ldrb	r0, [r0, #3]
 8027822:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8027826:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8027828:	4304      	orrs	r4, r0
 802782a:	1928      	adds	r0, r5, r4
 802782c:	7843      	ldrb	r3, [r0, #1]
 802782e:	3001      	adds	r0, #1
 8027830:	9610      	str	r6, [sp, #64]	@ 0x40
 8027832:	9003      	str	r0, [sp, #12]
 8027834:	4630      	mov	r0, r6
 8027836:	2601      	movs	r6, #1
 8027838:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 802783c:	46b0      	mov	r8, r6
 802783e:	fbb7 f1f1 	udiv	r1, r7, r1
 8027842:	5d2c      	ldrb	r4, [r5, r4]
 8027844:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8027846:	021b      	lsls	r3, r3, #8
 8027848:	5caa      	ldrb	r2, [r5, r2]
 802784a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802784c:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 8027850:	431c      	orrs	r4, r3
 8027852:	920b      	str	r2, [sp, #44]	@ 0x2c
 8027854:	1a69      	subs	r1, r5, r1
 8027856:	3201      	adds	r2, #1
 8027858:	f889 400d 	strb.w	r4, [r9, #13]
 802785c:	9205      	str	r2, [sp, #20]
 802785e:	b2a4      	uxth	r4, r4
 8027860:	b28a      	uxth	r2, r1
 8027862:	9408      	str	r4, [sp, #32]
 8027864:	9212      	str	r2, [sp, #72]	@ 0x48
 8027866:	2f00      	cmp	r7, #0
 8027868:	d034      	beq.n	80278d4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1c8>
 802786a:	42be      	cmp	r6, r7
 802786c:	f080 80cf 	bcs.w	8027a0e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x302>
 8027870:	1bbf      	subs	r7, r7, r6
 8027872:	b2bf      	uxth	r7, r7
 8027874:	9b06      	ldr	r3, [sp, #24]
 8027876:	9a00      	ldr	r2, [sp, #0]
 8027878:	4293      	cmp	r3, r2
 802787a:	f240 80b8 	bls.w	80279ee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 802787e:	9803      	ldr	r0, [sp, #12]
 8027880:	f1c8 0107 	rsb	r1, r8, #7
 8027884:	7842      	ldrb	r2, [r0, #1]
 8027886:	7803      	ldrb	r3, [r0, #0]
 8027888:	408a      	lsls	r2, r1
 802788a:	fa43 f308 	asr.w	r3, r3, r8
 802788e:	0052      	lsls	r2, r2, #1
 8027890:	f108 0801 	add.w	r8, r8, #1
 8027894:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8027898:	b2db      	uxtb	r3, r3
 802789a:	fa5f f888 	uxtb.w	r8, r8
 802789e:	4313      	orrs	r3, r2
 80278a0:	f1b8 0f08 	cmp.w	r8, #8
 80278a4:	b29a      	uxth	r2, r3
 80278a6:	f000 80e0 	beq.w	8027a6a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x35e>
 80278aa:	3001      	adds	r0, #1
 80278ac:	9003      	str	r0, [sp, #12]
 80278ae:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80278b0:	4291      	cmp	r1, r2
 80278b2:	f0c0 80bc 	bcc.w	8027a2e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x322>
 80278b6:	9905      	ldr	r1, [sp, #20]
 80278b8:	b2db      	uxtb	r3, r3
 80278ba:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80278be:	f889 300d 	strb.w	r3, [r9, #13]
 80278c2:	f04f 0601 	mov.w	r6, #1
 80278c6:	f0c0 8121 	bcc.w	8027b0c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x400>
 80278ca:	e9cd 6207 	strd	r6, r2, [sp, #28]
 80278ce:	2000      	movs	r0, #0
 80278d0:	2f00      	cmp	r7, #0
 80278d2:	d1ca      	bne.n	802786a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 80278d4:	9b02      	ldr	r3, [sp, #8]
 80278d6:	429e      	cmp	r6, r3
 80278d8:	461a      	mov	r2, r3
 80278da:	f0c0 80f0 	bcc.w	8027abe <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b2>
 80278de:	1af3      	subs	r3, r6, r3
 80278e0:	b29b      	uxth	r3, r3
 80278e2:	930a      	str	r3, [sp, #40]	@ 0x28
 80278e4:	2a00      	cmp	r2, #0
 80278e6:	f000 80cb 	beq.w	8027a80 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>
 80278ea:	4694      	mov	ip, r2
 80278ec:	970f      	str	r7, [sp, #60]	@ 0x3c
 80278ee:	9b00      	ldr	r3, [sp, #0]
 80278f0:	eb00 0e0c 	add.w	lr, r0, ip
 80278f4:	960c      	str	r6, [sp, #48]	@ 0x30
 80278f6:	970d      	str	r7, [sp, #52]	@ 0x34
 80278f8:	fa1f fe8e 	uxth.w	lr, lr
 80278fc:	1cdd      	adds	r5, r3, #3
 80278fe:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8027900:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8027902:	e037      	b.n	8027974 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x268>
 8027904:	9a04      	ldr	r2, [sp, #16]
 8027906:	9b01      	ldr	r3, [sp, #4]
 8027908:	fb02 f101 	mul.w	r1, r2, r1
 802790c:	1c4a      	adds	r2, r1, #1
 802790e:	eb02 2121 	add.w	r1, r2, r1, asr #8
 8027912:	1209      	asrs	r1, r1, #8
 8027914:	43ca      	mvns	r2, r1
 8027916:	b289      	uxth	r1, r1
 8027918:	fb13 f301 	smulbb	r3, r3, r1
 802791c:	fb1b fb01 	smulbb	fp, fp, r1
 8027920:	fb1a f101 	smulbb	r1, sl, r1
 8027924:	f815 ac03 	ldrb.w	sl, [r5, #-3]
 8027928:	b2d2      	uxtb	r2, r2
 802792a:	fb0a 3302 	mla	r3, sl, r2, r3
 802792e:	f815 4c02 	ldrb.w	r4, [r5, #-2]
 8027932:	f815 ac01 	ldrb.w	sl, [r5, #-1]
 8027936:	fb04 b402 	mla	r4, r4, r2, fp
 802793a:	fb0a 1102 	mla	r1, sl, r2, r1
 802793e:	b29b      	uxth	r3, r3
 8027940:	b2a4      	uxth	r4, r4
 8027942:	b289      	uxth	r1, r1
 8027944:	f103 0a01 	add.w	sl, r3, #1
 8027948:	f104 0b01 	add.w	fp, r4, #1
 802794c:	1c4a      	adds	r2, r1, #1
 802794e:	eb0a 2313 	add.w	r3, sl, r3, lsr #8
 8027952:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8027956:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802795a:	121b      	asrs	r3, r3, #8
 802795c:	1224      	asrs	r4, r4, #8
 802795e:	1209      	asrs	r1, r1, #8
 8027960:	f805 3c03 	strb.w	r3, [r5, #-3]
 8027964:	f805 4c02 	strb.w	r4, [r5, #-2]
 8027968:	f805 1c01 	strb.w	r1, [r5, #-1]
 802796c:	4570      	cmp	r0, lr
 802796e:	f105 0503 	add.w	r5, r5, #3
 8027972:	d024      	beq.n	80279be <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 8027974:	2204      	movs	r2, #4
 8027976:	eb09 0300 	add.w	r3, r9, r0
 802797a:	7b5b      	ldrb	r3, [r3, #13]
 802797c:	3001      	adds	r0, #1
 802797e:	fb12 6303 	smlabb	r3, r2, r3, r6
 8027982:	58fb      	ldr	r3, [r7, r3]
 8027984:	b280      	uxth	r0, r0
 8027986:	0e19      	lsrs	r1, r3, #24
 8027988:	d0f0      	beq.n	802796c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x260>
 802798a:	f3c3 2407 	ubfx	r4, r3, #8, #8
 802798e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8027992:	29ff      	cmp	r1, #255	@ 0xff
 8027994:	b2db      	uxtb	r3, r3
 8027996:	fa5f fb84 	uxtb.w	fp, r4
 802799a:	9301      	str	r3, [sp, #4]
 802799c:	fa5f fa82 	uxtb.w	sl, r2
 80279a0:	d1b0      	bne.n	8027904 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 80279a2:	9b04      	ldr	r3, [sp, #16]
 80279a4:	2bff      	cmp	r3, #255	@ 0xff
 80279a6:	d1ad      	bne.n	8027904 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 80279a8:	9b01      	ldr	r3, [sp, #4]
 80279aa:	4570      	cmp	r0, lr
 80279ac:	f805 3c03 	strb.w	r3, [r5, #-3]
 80279b0:	f805 4c02 	strb.w	r4, [r5, #-2]
 80279b4:	f805 2c01 	strb.w	r2, [r5, #-1]
 80279b8:	f105 0503 	add.w	r5, r5, #3
 80279bc:	d1da      	bne.n	8027974 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x268>
 80279be:	e9dd 670c 	ldrd	r6, r7, [sp, #48]	@ 0x30
 80279c2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80279c6:	fa1f fc8c 	uxth.w	ip, ip
 80279ca:	9b00      	ldr	r3, [sp, #0]
 80279cc:	f10c 0c01 	add.w	ip, ip, #1
 80279d0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80279d4:	4463      	add	r3, ip
 80279d6:	9300      	str	r3, [sp, #0]
 80279d8:	9b02      	ldr	r3, [sp, #8]
 80279da:	429e      	cmp	r6, r3
 80279dc:	d251      	bcs.n	8027a82 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x376>
 80279de:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80279e0:	9a00      	ldr	r2, [sp, #0]
 80279e2:	9302      	str	r3, [sp, #8]
 80279e4:	9b06      	ldr	r3, [sp, #24]
 80279e6:	4670      	mov	r0, lr
 80279e8:	4293      	cmp	r3, r2
 80279ea:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 80279ec:	d81b      	bhi.n	8027a26 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x31a>
 80279ee:	4b22      	ldr	r3, [pc, #136]	@ (8027a78 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>)
 80279f0:	6818      	ldr	r0, [r3, #0]
 80279f2:	6803      	ldr	r3, [r0, #0]
 80279f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80279f6:	4798      	blx	r3
 80279f8:	b01d      	add	sp, #116	@ 0x74
 80279fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80279fe:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8027a02:	b289      	uxth	r1, r1
 8027a04:	fb93 f3f1 	sdiv	r3, r3, r1
 8027a08:	b29a      	uxth	r2, r3
 8027a0a:	9216      	str	r2, [sp, #88]	@ 0x58
 8027a0c:	e6a9      	b.n	8027762 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x56>
 8027a0e:	1bf6      	subs	r6, r6, r7
 8027a10:	4438      	add	r0, r7
 8027a12:	2700      	movs	r7, #0
 8027a14:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8027a18:	b2b6      	uxth	r6, r6
 8027a1a:	b280      	uxth	r0, r0
 8027a1c:	9302      	str	r3, [sp, #8]
 8027a1e:	9b06      	ldr	r3, [sp, #24]
 8027a20:	9a00      	ldr	r2, [sp, #0]
 8027a22:	4293      	cmp	r3, r2
 8027a24:	d9e3      	bls.n	80279ee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8027a26:	2e00      	cmp	r6, #0
 8027a28:	f47f af1d 	bne.w	8027866 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15a>
 8027a2c:	e727      	b.n	802787e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x172>
 8027a2e:	9b05      	ldr	r3, [sp, #20]
 8027a30:	429a      	cmp	r2, r3
 8027a32:	d34d      	bcc.n	8027ad0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 8027a34:	9807      	ldr	r0, [sp, #28]
 8027a36:	f899 100d 	ldrb.w	r1, [r9, #13]
 8027a3a:	eb09 0300 	add.w	r3, r9, r0
 8027a3e:	7359      	strb	r1, [r3, #13]
 8027a40:	f899 300d 	ldrb.w	r3, [r9, #13]
 8027a44:	1c41      	adds	r1, r0, #1
 8027a46:	b28e      	uxth	r6, r1
 8027a48:	9c05      	ldr	r4, [sp, #20]
 8027a4a:	9d08      	ldr	r5, [sp, #32]
 8027a4c:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 8027a50:	3401      	adds	r4, #1
 8027a52:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8027a56:	b2a3      	uxth	r3, r4
 8027a58:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8027a5c:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8027a60:	9305      	str	r3, [sp, #20]
 8027a62:	e9cd 6207 	strd	r6, r2, [sp, #28]
 8027a66:	2000      	movs	r0, #0
 8027a68:	e6fd      	b.n	8027866 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15a>
 8027a6a:	4601      	mov	r1, r0
 8027a6c:	3102      	adds	r1, #2
 8027a6e:	f04f 0800 	mov.w	r8, #0
 8027a72:	9103      	str	r1, [sp, #12]
 8027a74:	e71b      	b.n	80278ae <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 8027a76:	bf00      	nop
 8027a78:	20082ec4 	.word	0x20082ec4
 8027a7c:	20082ebe 	.word	0x20082ebe
 8027a80:	4686      	mov	lr, r0
 8027a82:	4b30      	ldr	r3, [pc, #192]	@ (8027b44 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 8027a84:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8027a86:	881b      	ldrh	r3, [r3, #0]
 8027a88:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8027a8a:	1a5b      	subs	r3, r3, r1
 8027a8c:	9900      	ldr	r1, [sp, #0]
 8027a8e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027a92:	4419      	add	r1, r3
 8027a94:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8027a96:	3201      	adds	r2, #1
 8027a98:	429a      	cmp	r2, r3
 8027a9a:	9210      	str	r2, [sp, #64]	@ 0x40
 8027a9c:	9100      	str	r1, [sp, #0]
 8027a9e:	d038      	beq.n	8027b12 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x406>
 8027aa0:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8027aa4:	f8bd 7064 	ldrh.w	r7, [sp, #100]	@ 0x64
 8027aa8:	4670      	mov	r0, lr
 8027aaa:	1aff      	subs	r7, r7, r3
 8027aac:	b2bf      	uxth	r7, r7
 8027aae:	2f00      	cmp	r7, #0
 8027ab0:	bf18      	it	ne
 8027ab2:	2300      	movne	r3, #0
 8027ab4:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8027ab6:	9302      	str	r3, [sp, #8]
 8027ab8:	bf08      	it	eq
 8027aba:	2700      	moveq	r7, #0
 8027abc:	e7af      	b.n	8027a1e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x312>
 8027abe:	1b9b      	subs	r3, r3, r6
 8027ac0:	b29b      	uxth	r3, r3
 8027ac2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027ac4:	2e00      	cmp	r6, #0
 8027ac6:	f43f aed5 	beq.w	8027874 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x168>
 8027aca:	970a      	str	r7, [sp, #40]	@ 0x28
 8027acc:	46b4      	mov	ip, r6
 8027ace:	e70e      	b.n	80278ee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8027ad0:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 8027ad4:	f893 604f 	ldrb.w	r6, [r3, #79]	@ 0x4f
 8027ad8:	4613      	mov	r3, r2
 8027ada:	2e01      	cmp	r6, #1
 8027adc:	d90d      	bls.n	8027afa <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ee>
 8027ade:	f106 010d 	add.w	r1, r6, #13
 8027ae2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8027ae4:	4449      	add	r1, r9
 8027ae6:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8027aea:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8027aee:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8027af2:	428c      	cmp	r4, r1
 8027af4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8027af8:	d1f5      	bne.n	8027ae6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3da>
 8027afa:	9905      	ldr	r1, [sp, #20]
 8027afc:	b2db      	uxtb	r3, r3
 8027afe:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8027b02:	f889 300d 	strb.w	r3, [r9, #13]
 8027b06:	b2b6      	uxth	r6, r6
 8027b08:	f4bf aedf 	bcs.w	80278ca <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 8027b0c:	9907      	ldr	r1, [sp, #28]
 8027b0e:	3101      	adds	r1, #1
 8027b10:	e79a      	b.n	8027a48 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x33c>
 8027b12:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8027b16:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8027b1a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8027b1c:	1aff      	subs	r7, r7, r3
 8027b1e:	b2bf      	uxth	r7, r7
 8027b20:	2f00      	cmp	r7, #0
 8027b22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027b24:	bf18      	it	ne
 8027b26:	2300      	movne	r3, #0
 8027b28:	3201      	adds	r2, #1
 8027b2a:	b29b      	uxth	r3, r3
 8027b2c:	9302      	str	r3, [sp, #8]
 8027b2e:	9213      	str	r2, [sp, #76]	@ 0x4c
 8027b30:	9b06      	ldr	r3, [sp, #24]
 8027b32:	e663      	b.n	80277fc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xf0>
 8027b34:	4b04      	ldr	r3, [pc, #16]	@ (8027b48 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x43c>)
 8027b36:	4a05      	ldr	r2, [pc, #20]	@ (8027b4c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 8027b38:	f640 21ae 	movw	r1, #2734	@ 0xaae
 8027b3c:	4804      	ldr	r0, [pc, #16]	@ (8027b50 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x444>)
 8027b3e:	f00a fca3 	bl	8032488 <__assert_func>
 8027b42:	bf00      	nop
 8027b44:	20082ebe 	.word	0x20082ebe
 8027b48:	0803633c 	.word	0x0803633c
 8027b4c:	08037c94 	.word	0x08037c94
 8027b50:	08036248 	.word	0x08036248

08027b54 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8027b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027b58:	4617      	mov	r7, r2
 8027b5a:	b095      	sub	sp, #84	@ 0x54
 8027b5c:	8812      	ldrh	r2, [r2, #0]
 8027b5e:	4688      	mov	r8, r1
 8027b60:	f89d 107c 	ldrb.w	r1, [sp, #124]	@ 0x7c
 8027b64:	2a01      	cmp	r2, #1
 8027b66:	461c      	mov	r4, r3
 8027b68:	910d      	str	r1, [sp, #52]	@ 0x34
 8027b6a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8027b6c:	f040 8105 	bne.w	8027d7a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x226>
 8027b70:	6820      	ldr	r0, [r4, #0]
 8027b72:	6861      	ldr	r1, [r4, #4]
 8027b74:	aa10      	add	r2, sp, #64	@ 0x40
 8027b76:	c203      	stmia	r2!, {r0, r1}
 8027b78:	6818      	ldr	r0, [r3, #0]
 8027b7a:	6859      	ldr	r1, [r3, #4]
 8027b7c:	aa12      	add	r2, sp, #72	@ 0x48
 8027b7e:	c203      	stmia	r2!, {r0, r1}
 8027b80:	a810      	add	r0, sp, #64	@ 0x40
 8027b82:	f7e5 f8a5 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027b86:	4621      	mov	r1, r4
 8027b88:	a812      	add	r0, sp, #72	@ 0x48
 8027b8a:	f7e5 f8c9 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027b8e:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 8027b92:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 8027b96:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8027b9a:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 8027b9e:	487a      	ldr	r0, [pc, #488]	@ (8027d88 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027ba0:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8027ba4:	4422      	add	r2, r4
 8027ba6:	442b      	add	r3, r5
 8027ba8:	6800      	ldr	r0, [r0, #0]
 8027baa:	fb11 4105 	smlabb	r1, r1, r5, r4
 8027bae:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8027bb2:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 8027bb6:	6802      	ldr	r2, [r0, #0]
 8027bb8:	4c74      	ldr	r4, [pc, #464]	@ (8027d8c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 8027bba:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8027bbe:	4488      	add	r8, r1
 8027bc0:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 8027bc4:	42a3      	cmp	r3, r4
 8027bc6:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	@ 0x4c
 8027bca:	910c      	str	r1, [sp, #48]	@ 0x30
 8027bcc:	f040 809f 	bne.w	8027d0e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8027bd0:	6841      	ldr	r1, [r0, #4]
 8027bd2:	4c6f      	ldr	r4, [pc, #444]	@ (8027d90 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8027bd4:	680b      	ldr	r3, [r1, #0]
 8027bd6:	699b      	ldr	r3, [r3, #24]
 8027bd8:	42a3      	cmp	r3, r4
 8027bda:	f040 80c0 	bne.w	8027d5e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20a>
 8027bde:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8027be0:	4798      	blx	r3
 8027be2:	4a6c      	ldr	r2, [pc, #432]	@ (8027d94 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027be4:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 8027be8:	8814      	ldrh	r4, [r2, #0]
 8027bea:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 8027bee:	fb04 2303 	mla	r3, r4, r3, r2
 8027bf2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027bf6:	4418      	add	r0, r3
 8027bf8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027bfa:	2b00      	cmp	r3, #0
 8027bfc:	dd67      	ble.n	8027cce <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8027bfe:	2300      	movs	r3, #0
 8027c00:	f04f 0903 	mov.w	r9, #3
 8027c04:	2104      	movs	r1, #4
 8027c06:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8027c08:	930b      	str	r3, [sp, #44]	@ 0x2c
 8027c0a:	eb0a 034a 	add.w	r3, sl, sl, lsl #1
 8027c0e:	930e      	str	r3, [sp, #56]	@ 0x38
 8027c10:	f1c5 02ff 	rsb	r2, r5, #255	@ 0xff
 8027c14:	444b      	add	r3, r9
 8027c16:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027c18:	b292      	uxth	r2, r2
 8027c1a:	fa1f fc85 	uxth.w	ip, r5
 8027c1e:	f8cd a028 	str.w	sl, [sp, #40]	@ 0x28
 8027c22:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027c24:	2b00      	cmp	r3, #0
 8027c26:	dd43      	ble.n	8027cb0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8027c28:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8027c2a:	2bff      	cmp	r3, #255	@ 0xff
 8027c2c:	d057      	beq.n	8027cde <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x18a>
 8027c2e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027c30:	1cc5      	adds	r5, r0, #3
 8027c32:	f108 3eff 	add.w	lr, r8, #4294967295
 8027c36:	eb00 0a03 	add.w	sl, r0, r3
 8027c3a:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 8027c3e:	f815 6c03 	ldrb.w	r6, [r5, #-3]
 8027c42:	fb19 1303 	smlabb	r3, r9, r3, r1
 8027c46:	fb16 f402 	smulbb	r4, r6, r2
 8027c4a:	5cfe      	ldrb	r6, [r7, r3]
 8027c4c:	443b      	add	r3, r7
 8027c4e:	fb06 460c 	mla	r6, r6, ip, r4
 8027c52:	b2b6      	uxth	r6, r6
 8027c54:	f815 4c02 	ldrb.w	r4, [r5, #-2]
 8027c58:	f106 0b01 	add.w	fp, r6, #1
 8027c5c:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8027c60:	1236      	asrs	r6, r6, #8
 8027c62:	fb14 fb02 	smulbb	fp, r4, r2
 8027c66:	f805 6c03 	strb.w	r6, [r5, #-3]
 8027c6a:	785c      	ldrb	r4, [r3, #1]
 8027c6c:	f815 6c01 	ldrb.w	r6, [r5, #-1]
 8027c70:	fb04 b40c 	mla	r4, r4, ip, fp
 8027c74:	b2a4      	uxth	r4, r4
 8027c76:	f104 0b01 	add.w	fp, r4, #1
 8027c7a:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8027c7e:	1224      	asrs	r4, r4, #8
 8027c80:	fb16 f602 	smulbb	r6, r6, r2
 8027c84:	f805 4c02 	strb.w	r4, [r5, #-2]
 8027c88:	789b      	ldrb	r3, [r3, #2]
 8027c8a:	3503      	adds	r5, #3
 8027c8c:	fb03 630c 	mla	r3, r3, ip, r6
 8027c90:	b29b      	uxth	r3, r3
 8027c92:	1c5c      	adds	r4, r3, #1
 8027c94:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8027c98:	121b      	asrs	r3, r3, #8
 8027c9a:	f805 3c04 	strb.w	r3, [r5, #-4]
 8027c9e:	45aa      	cmp	sl, r5
 8027ca0:	d1cb      	bne.n	8027c3a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xe6>
 8027ca2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027ca4:	4418      	add	r0, r3
 8027ca6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027ca8:	4498      	add	r8, r3
 8027caa:	4b3a      	ldr	r3, [pc, #232]	@ (8027d94 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027cac:	881c      	ldrh	r4, [r3, #0]
 8027cae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027cb0:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	@ 0x44
 8027cb4:	eba4 0e03 	sub.w	lr, r4, r3
 8027cb8:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8027cba:	1aed      	subs	r5, r5, r3
 8027cbc:	eb0e 034e 	add.w	r3, lr, lr, lsl #1
 8027cc0:	4418      	add	r0, r3
 8027cc2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027cc4:	3601      	adds	r6, #1
 8027cc6:	42b3      	cmp	r3, r6
 8027cc8:	960b      	str	r6, [sp, #44]	@ 0x2c
 8027cca:	44a8      	add	r8, r5
 8027ccc:	d1a9      	bne.n	8027c22 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8027cce:	4b2e      	ldr	r3, [pc, #184]	@ (8027d88 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027cd0:	6818      	ldr	r0, [r3, #0]
 8027cd2:	6803      	ldr	r3, [r0, #0]
 8027cd4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027cd6:	4798      	blx	r3
 8027cd8:	b015      	add	sp, #84	@ 0x54
 8027cda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027cde:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027ce0:	1cc4      	adds	r4, r0, #3
 8027ce2:	f108 35ff 	add.w	r5, r8, #4294967295
 8027ce6:	eb00 0e03 	add.w	lr, r0, r3
 8027cea:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 8027cee:	3403      	adds	r4, #3
 8027cf0:	fb19 1303 	smlabb	r3, r9, r3, r1
 8027cf4:	5cfe      	ldrb	r6, [r7, r3]
 8027cf6:	443b      	add	r3, r7
 8027cf8:	f804 6c06 	strb.w	r6, [r4, #-6]
 8027cfc:	785e      	ldrb	r6, [r3, #1]
 8027cfe:	f804 6c05 	strb.w	r6, [r4, #-5]
 8027d02:	789b      	ldrb	r3, [r3, #2]
 8027d04:	f804 3c04 	strb.w	r3, [r4, #-4]
 8027d08:	45a6      	cmp	lr, r4
 8027d0a:	d1ee      	bne.n	8027cea <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x196>
 8027d0c:	e7c9      	b.n	8027ca2 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x14e>
 8027d0e:	4798      	blx	r3
 8027d10:	4603      	mov	r3, r0
 8027d12:	2b01      	cmp	r3, #1
 8027d14:	d127      	bne.n	8027d66 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8027d16:	4a20      	ldr	r2, [pc, #128]	@ (8027d98 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8027d18:	6810      	ldr	r0, [r2, #0]
 8027d1a:	b340      	cbz	r0, 8027d6e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 8027d1c:	f04f 0c0b 	mov.w	ip, #11
 8027d20:	2600      	movs	r6, #0
 8027d22:	4a1c      	ldr	r2, [pc, #112]	@ (8027d94 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027d24:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8027d28:	8814      	ldrh	r4, [r2, #0]
 8027d2a:	fa1f f28a 	uxth.w	r2, sl
 8027d2e:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8027d32:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 8027d36:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8027d38:	9406      	str	r4, [sp, #24]
 8027d3a:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8027d3e:	9308      	str	r3, [sp, #32]
 8027d40:	9204      	str	r2, [sp, #16]
 8027d42:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8027d46:	463a      	mov	r2, r7
 8027d48:	4641      	mov	r1, r8
 8027d4a:	f8cd c01c 	str.w	ip, [sp, #28]
 8027d4e:	9605      	str	r6, [sp, #20]
 8027d50:	9503      	str	r5, [sp, #12]
 8027d52:	9400      	str	r4, [sp, #0]
 8027d54:	f7f8 ff30 	bl	8020bb8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8027d58:	b015      	add	sp, #84	@ 0x54
 8027d5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027d5e:	4608      	mov	r0, r1
 8027d60:	4798      	blx	r3
 8027d62:	4603      	mov	r3, r0
 8027d64:	e7d5      	b.n	8027d12 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 8027d66:	4b08      	ldr	r3, [pc, #32]	@ (8027d88 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027d68:	6818      	ldr	r0, [r3, #0]
 8027d6a:	6802      	ldr	r2, [r0, #0]
 8027d6c:	e737      	b.n	8027bde <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8027d6e:	4b0b      	ldr	r3, [pc, #44]	@ (8027d9c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8027d70:	4a0b      	ldr	r2, [pc, #44]	@ (8027da0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8027d72:	217c      	movs	r1, #124	@ 0x7c
 8027d74:	480b      	ldr	r0, [pc, #44]	@ (8027da4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8027d76:	f00a fb87 	bl	8032488 <__assert_func>
 8027d7a:	4b0b      	ldr	r3, [pc, #44]	@ (8027da8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 8027d7c:	4a0b      	ldr	r2, [pc, #44]	@ (8027dac <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8027d7e:	f640 3191 	movw	r1, #2961	@ 0xb91
 8027d82:	480b      	ldr	r0, [pc, #44]	@ (8027db0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8027d84:	f00a fb80 	bl	8032488 <__assert_func>
 8027d88:	20082ec4 	.word	0x20082ec4
 8027d8c:	0800121d 	.word	0x0800121d
 8027d90:	0800ba75 	.word	0x0800ba75
 8027d94:	20082ebe 	.word	0x20082ebe
 8027d98:	20083364 	.word	0x20083364
 8027d9c:	080361a4 	.word	0x080361a4
 8027da0:	08036a10 	.word	0x08036a10
 8027da4:	080361cc 	.word	0x080361cc
 8027da8:	0803626c 	.word	0x0803626c
 8027dac:	08036f30 	.word	0x08036f30
 8027db0:	08036248 	.word	0x08036248

08027db4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8027db4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027db8:	4615      	mov	r5, r2
 8027dba:	7812      	ldrb	r2, [r2, #0]
 8027dbc:	b08b      	sub	sp, #44	@ 0x2c
 8027dbe:	2a01      	cmp	r2, #1
 8027dc0:	461f      	mov	r7, r3
 8027dc2:	f89d 6054 	ldrb.w	r6, [sp, #84]	@ 0x54
 8027dc6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8027dc8:	f040 8213 	bne.w	80281f2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x43e>
 8027dcc:	6838      	ldr	r0, [r7, #0]
 8027dce:	468a      	mov	sl, r1
 8027dd0:	6879      	ldr	r1, [r7, #4]
 8027dd2:	aa06      	add	r2, sp, #24
 8027dd4:	c203      	stmia	r2!, {r0, r1}
 8027dd6:	6818      	ldr	r0, [r3, #0]
 8027dd8:	6859      	ldr	r1, [r3, #4]
 8027dda:	aa08      	add	r2, sp, #32
 8027ddc:	c203      	stmia	r2!, {r0, r1}
 8027dde:	a806      	add	r0, sp, #24
 8027de0:	f7e4 ff76 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027de4:	4639      	mov	r1, r7
 8027de6:	a808      	add	r0, sp, #32
 8027de8:	f7e4 ff9a 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027dec:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8027df0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8027df4:	f003 0201 	and.w	r2, r3, #1
 8027df8:	4614      	mov	r4, r2
 8027dfa:	9202      	str	r2, [sp, #8]
 8027dfc:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 8027e00:	4423      	add	r3, r4
 8027e02:	fb02 1303 	mla	r3, r2, r3, r1
 8027e06:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8027e0a:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 8027e0e:	4402      	add	r2, r0
 8027e10:	48a9      	ldr	r0, [pc, #676]	@ (80280b8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8027e12:	440f      	add	r7, r1
 8027e14:	6800      	ldr	r0, [r0, #0]
 8027e16:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8027e1a:	f8ad 7020 	strh.w	r7, [sp, #32]
 8027e1e:	f8ad 2022 	strh.w	r2, [sp, #34]	@ 0x22
 8027e22:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 8027e26:	f001 0301 	and.w	r3, r1, #1
 8027e2a:	6802      	ldr	r2, [r0, #0]
 8027e2c:	9301      	str	r3, [sp, #4]
 8027e2e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8027e32:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8027e34:	9300      	str	r3, [sp, #0]
 8027e36:	f9bd 4026 	ldrsh.w	r4, [sp, #38]	@ 0x26
 8027e3a:	4790      	blx	r2
 8027e3c:	4a9f      	ldr	r2, [pc, #636]	@ (80280bc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8027e3e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8027e42:	8811      	ldrh	r1, [r2, #0]
 8027e44:	f9bd 7020 	ldrsh.w	r7, [sp, #32]
 8027e48:	2eff      	cmp	r6, #255	@ 0xff
 8027e4a:	fb01 7303 	mla	r3, r1, r3, r7
 8027e4e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027e52:	f105 0204 	add.w	r2, r5, #4
 8027e56:	4418      	add	r0, r3
 8027e58:	f000 8132 	beq.w	80280c0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 8027e5c:	fb04 f401 	mul.w	r4, r4, r1
 8027e60:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8027e64:	1901      	adds	r1, r0, r4
 8027e66:	4288      	cmp	r0, r1
 8027e68:	9104      	str	r1, [sp, #16]
 8027e6a:	f080 80aa 	bcs.w	8027fc2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8027e6e:	9b00      	ldr	r3, [sp, #0]
 8027e70:	f1c6 07ff 	rsb	r7, r6, #255	@ 0xff
 8027e74:	3b01      	subs	r3, #1
 8027e76:	b2bf      	uxth	r7, r7
 8027e78:	b2b6      	uxth	r6, r6
 8027e7a:	9305      	str	r3, [sp, #20]
 8027e7c:	9b01      	ldr	r3, [sp, #4]
 8027e7e:	2b00      	cmp	r3, #0
 8027e80:	f040 80e8 	bne.w	8028054 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 8027e84:	46d1      	mov	r9, sl
 8027e86:	f8dd 8000 	ldr.w	r8, [sp]
 8027e8a:	f1b8 0f01 	cmp.w	r8, #1
 8027e8e:	f340 8082 	ble.w	8027f96 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8027e92:	f1a8 0302 	sub.w	r3, r8, #2
 8027e96:	ea4f 0853 	mov.w	r8, r3, lsr #1
 8027e9a:	9303      	str	r3, [sp, #12]
 8027e9c:	f100 0e0c 	add.w	lr, r0, #12
 8027ea0:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 8027ea4:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8027ea8:	1d84      	adds	r4, r0, #6
 8027eaa:	f109 3cff 	add.w	ip, r9, #4294967295
 8027eae:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 8027eb2:	f814 5c06 	ldrb.w	r5, [r4, #-6]
 8027eb6:	091b      	lsrs	r3, r3, #4
 8027eb8:	fb15 f507 	smulbb	r5, r5, r7
 8027ebc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027ec0:	5cd1      	ldrb	r1, [r2, r3]
 8027ec2:	4413      	add	r3, r2
 8027ec4:	fb01 5506 	mla	r5, r1, r6, r5
 8027ec8:	b2ad      	uxth	r5, r5
 8027eca:	f814 1c05 	ldrb.w	r1, [r4, #-5]
 8027ece:	f105 0b01 	add.w	fp, r5, #1
 8027ed2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027ed6:	122d      	asrs	r5, r5, #8
 8027ed8:	fb11 fb07 	smulbb	fp, r1, r7
 8027edc:	f804 5c06 	strb.w	r5, [r4, #-6]
 8027ee0:	7859      	ldrb	r1, [r3, #1]
 8027ee2:	f814 5c04 	ldrb.w	r5, [r4, #-4]
 8027ee6:	fb01 b106 	mla	r1, r1, r6, fp
 8027eea:	b289      	uxth	r1, r1
 8027eec:	f101 0b01 	add.w	fp, r1, #1
 8027ef0:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8027ef4:	1209      	asrs	r1, r1, #8
 8027ef6:	fb15 f507 	smulbb	r5, r5, r7
 8027efa:	f804 1c05 	strb.w	r1, [r4, #-5]
 8027efe:	789b      	ldrb	r3, [r3, #2]
 8027f00:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8027f04:	fb03 5306 	mla	r3, r3, r6, r5
 8027f08:	b29b      	uxth	r3, r3
 8027f0a:	1c5d      	adds	r5, r3, #1
 8027f0c:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8027f10:	121b      	asrs	r3, r3, #8
 8027f12:	f804 3c04 	strb.w	r3, [r4, #-4]
 8027f16:	f89c 3000 	ldrb.w	r3, [ip]
 8027f1a:	fb11 f107 	smulbb	r1, r1, r7
 8027f1e:	f003 030f 	and.w	r3, r3, #15
 8027f22:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027f26:	5cd5      	ldrb	r5, [r2, r3]
 8027f28:	4413      	add	r3, r2
 8027f2a:	fb05 1106 	mla	r1, r5, r6, r1
 8027f2e:	b28d      	uxth	r5, r1
 8027f30:	f105 0b01 	add.w	fp, r5, #1
 8027f34:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8027f38:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027f3c:	122d      	asrs	r5, r5, #8
 8027f3e:	fb11 fb07 	smulbb	fp, r1, r7
 8027f42:	f804 5c03 	strb.w	r5, [r4, #-3]
 8027f46:	7859      	ldrb	r1, [r3, #1]
 8027f48:	f814 5c01 	ldrb.w	r5, [r4, #-1]
 8027f4c:	fb01 b106 	mla	r1, r1, r6, fp
 8027f50:	b289      	uxth	r1, r1
 8027f52:	f101 0b01 	add.w	fp, r1, #1
 8027f56:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8027f5a:	1209      	asrs	r1, r1, #8
 8027f5c:	fb15 f507 	smulbb	r5, r5, r7
 8027f60:	f804 1c02 	strb.w	r1, [r4, #-2]
 8027f64:	789b      	ldrb	r3, [r3, #2]
 8027f66:	3406      	adds	r4, #6
 8027f68:	fb03 5306 	mla	r3, r3, r6, r5
 8027f6c:	b29b      	uxth	r3, r3
 8027f6e:	1c59      	adds	r1, r3, #1
 8027f70:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8027f74:	121b      	asrs	r3, r3, #8
 8027f76:	f804 3c07 	strb.w	r3, [r4, #-7]
 8027f7a:	45a6      	cmp	lr, r4
 8027f7c:	d197      	bne.n	8027eae <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 8027f7e:	f108 0301 	add.w	r3, r8, #1
 8027f82:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8027f86:	4499      	add	r9, r3
 8027f88:	9b03      	ldr	r3, [sp, #12]
 8027f8a:	ebc8 78c8 	rsb	r8, r8, r8, lsl #31
 8027f8e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8027f92:	eb03 0848 	add.w	r8, r3, r8, lsl #1
 8027f96:	f1b8 0f01 	cmp.w	r8, #1
 8027f9a:	d01a      	beq.n	8027fd2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21e>
 8027f9c:	4b47      	ldr	r3, [pc, #284]	@ (80280bc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8027f9e:	9c00      	ldr	r4, [sp, #0]
 8027fa0:	8819      	ldrh	r1, [r3, #0]
 8027fa2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8027fa6:	1b09      	subs	r1, r1, r4
 8027fa8:	9c02      	ldr	r4, [sp, #8]
 8027faa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027fae:	4423      	add	r3, r4
 8027fb0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8027fb4:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 8027fb8:	9b04      	ldr	r3, [sp, #16]
 8027fba:	4408      	add	r0, r1
 8027fbc:	4283      	cmp	r3, r0
 8027fbe:	f63f af5d 	bhi.w	8027e7c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 8027fc2:	4b3d      	ldr	r3, [pc, #244]	@ (80280b8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8027fc4:	6818      	ldr	r0, [r3, #0]
 8027fc6:	6803      	ldr	r3, [r0, #0]
 8027fc8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027fca:	4798      	blx	r3
 8027fcc:	b00b      	add	sp, #44	@ 0x2c
 8027fce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027fd2:	f899 3000 	ldrb.w	r3, [r9]
 8027fd6:	7801      	ldrb	r1, [r0, #0]
 8027fd8:	091b      	lsrs	r3, r3, #4
 8027fda:	fb11 f407 	smulbb	r4, r1, r7
 8027fde:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027fe2:	5cd1      	ldrb	r1, [r2, r3]
 8027fe4:	4413      	add	r3, r2
 8027fe6:	fb01 4106 	mla	r1, r1, r6, r4
 8027fea:	b289      	uxth	r1, r1
 8027fec:	7844      	ldrb	r4, [r0, #1]
 8027fee:	1c4d      	adds	r5, r1, #1
 8027ff0:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8027ff4:	1209      	asrs	r1, r1, #8
 8027ff6:	fb14 f507 	smulbb	r5, r4, r7
 8027ffa:	7001      	strb	r1, [r0, #0]
 8027ffc:	785c      	ldrb	r4, [r3, #1]
 8027ffe:	7881      	ldrb	r1, [r0, #2]
 8028000:	fb04 5406 	mla	r4, r4, r6, r5
 8028004:	b2a4      	uxth	r4, r4
 8028006:	1c65      	adds	r5, r4, #1
 8028008:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 802800c:	1224      	asrs	r4, r4, #8
 802800e:	fb11 f507 	smulbb	r5, r1, r7
 8028012:	7044      	strb	r4, [r0, #1]
 8028014:	7899      	ldrb	r1, [r3, #2]
 8028016:	4b29      	ldr	r3, [pc, #164]	@ (80280bc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8028018:	fb01 5106 	mla	r1, r1, r6, r5
 802801c:	b289      	uxth	r1, r1
 802801e:	1c4c      	adds	r4, r1, #1
 8028020:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 8028024:	881b      	ldrh	r3, [r3, #0]
 8028026:	9c00      	ldr	r4, [sp, #0]
 8028028:	1209      	asrs	r1, r1, #8
 802802a:	1b1b      	subs	r3, r3, r4
 802802c:	7081      	strb	r1, [r0, #2]
 802802e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028032:	3303      	adds	r3, #3
 8028034:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 8028038:	9c02      	ldr	r4, [sp, #8]
 802803a:	4418      	add	r0, r3
 802803c:	9b04      	ldr	r3, [sp, #16]
 802803e:	4421      	add	r1, r4
 8028040:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8028044:	4283      	cmp	r3, r0
 8028046:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 802804a:	d9ba      	bls.n	8027fc2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 802804c:	9b01      	ldr	r3, [sp, #4]
 802804e:	2b00      	cmp	r3, #0
 8028050:	f43f af18 	beq.w	8027e84 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xd0>
 8028054:	f89a 3000 	ldrb.w	r3, [sl]
 8028058:	7804      	ldrb	r4, [r0, #0]
 802805a:	f003 030f 	and.w	r3, r3, #15
 802805e:	fb14 f107 	smulbb	r1, r4, r7
 8028062:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028066:	5cd4      	ldrb	r4, [r2, r3]
 8028068:	4413      	add	r3, r2
 802806a:	fb04 1406 	mla	r4, r4, r6, r1
 802806e:	b2a4      	uxth	r4, r4
 8028070:	7841      	ldrb	r1, [r0, #1]
 8028072:	1c65      	adds	r5, r4, #1
 8028074:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8028078:	1224      	asrs	r4, r4, #8
 802807a:	fb11 fc07 	smulbb	ip, r1, r7
 802807e:	7004      	strb	r4, [r0, #0]
 8028080:	7859      	ldrb	r1, [r3, #1]
 8028082:	7885      	ldrb	r5, [r0, #2]
 8028084:	fb01 c106 	mla	r1, r1, r6, ip
 8028088:	b289      	uxth	r1, r1
 802808a:	1c4c      	adds	r4, r1, #1
 802808c:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 8028090:	1209      	asrs	r1, r1, #8
 8028092:	fb15 f407 	smulbb	r4, r5, r7
 8028096:	7041      	strb	r1, [r0, #1]
 8028098:	789b      	ldrb	r3, [r3, #2]
 802809a:	f10a 0901 	add.w	r9, sl, #1
 802809e:	fb03 4306 	mla	r3, r3, r6, r4
 80280a2:	b29b      	uxth	r3, r3
 80280a4:	1c59      	adds	r1, r3, #1
 80280a6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80280aa:	121b      	asrs	r3, r3, #8
 80280ac:	7083      	strb	r3, [r0, #2]
 80280ae:	f8dd 8014 	ldr.w	r8, [sp, #20]
 80280b2:	3003      	adds	r0, #3
 80280b4:	e6e9      	b.n	8027e8a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xd6>
 80280b6:	bf00      	nop
 80280b8:	20082ec4 	.word	0x20082ec4
 80280bc:	20082ebe 	.word	0x20082ebe
 80280c0:	fb04 f101 	mul.w	r1, r4, r1
 80280c4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80280c8:	eb00 0e01 	add.w	lr, r0, r1
 80280cc:	4570      	cmp	r0, lr
 80280ce:	f4bf af78 	bcs.w	8027fc2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 80280d2:	9b00      	ldr	r3, [sp, #0]
 80280d4:	4698      	mov	r8, r3
 80280d6:	f103 39ff 	add.w	r9, r3, #4294967295
 80280da:	9b01      	ldr	r3, [sp, #4]
 80280dc:	2b00      	cmp	r3, #0
 80280de:	d072      	beq.n	80281c6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x412>
 80280e0:	464e      	mov	r6, r9
 80280e2:	f89a 3000 	ldrb.w	r3, [sl]
 80280e6:	f10a 0c01 	add.w	ip, sl, #1
 80280ea:	f003 030f 	and.w	r3, r3, #15
 80280ee:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80280f2:	5cd1      	ldrb	r1, [r2, r3]
 80280f4:	4413      	add	r3, r2
 80280f6:	7001      	strb	r1, [r0, #0]
 80280f8:	7859      	ldrb	r1, [r3, #1]
 80280fa:	3003      	adds	r0, #3
 80280fc:	f800 1c02 	strb.w	r1, [r0, #-2]
 8028100:	789b      	ldrb	r3, [r3, #2]
 8028102:	f800 3c01 	strb.w	r3, [r0, #-1]
 8028106:	2e01      	cmp	r6, #1
 8028108:	dd39      	ble.n	802817e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ca>
 802810a:	3e02      	subs	r6, #2
 802810c:	0877      	lsrs	r7, r6, #1
 802810e:	eb07 0347 	add.w	r3, r7, r7, lsl #1
 8028112:	f100 050c 	add.w	r5, r0, #12
 8028116:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 802811a:	1d81      	adds	r1, r0, #6
 802811c:	f10c 34ff 	add.w	r4, ip, #4294967295
 8028120:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8028124:	3106      	adds	r1, #6
 8028126:	091b      	lsrs	r3, r3, #4
 8028128:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802812c:	f812 b003 	ldrb.w	fp, [r2, r3]
 8028130:	4413      	add	r3, r2
 8028132:	f801 bc0c 	strb.w	fp, [r1, #-12]
 8028136:	f893 b001 	ldrb.w	fp, [r3, #1]
 802813a:	f801 bc0b 	strb.w	fp, [r1, #-11]
 802813e:	789b      	ldrb	r3, [r3, #2]
 8028140:	f801 3c0a 	strb.w	r3, [r1, #-10]
 8028144:	7823      	ldrb	r3, [r4, #0]
 8028146:	f003 030f 	and.w	r3, r3, #15
 802814a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802814e:	f812 b003 	ldrb.w	fp, [r2, r3]
 8028152:	4413      	add	r3, r2
 8028154:	f801 bc09 	strb.w	fp, [r1, #-9]
 8028158:	f893 b001 	ldrb.w	fp, [r3, #1]
 802815c:	f801 bc08 	strb.w	fp, [r1, #-8]
 8028160:	789b      	ldrb	r3, [r3, #2]
 8028162:	f801 3c07 	strb.w	r3, [r1, #-7]
 8028166:	428d      	cmp	r5, r1
 8028168:	d1da      	bne.n	8028120 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 802816a:	1c7b      	adds	r3, r7, #1
 802816c:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8028170:	ebc7 77c7 	rsb	r7, r7, r7, lsl #31
 8028174:	449c      	add	ip, r3
 8028176:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 802817a:	eb06 0647 	add.w	r6, r6, r7, lsl #1
 802817e:	2e01      	cmp	r6, #1
 8028180:	d124      	bne.n	80281cc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x418>
 8028182:	f89c 3000 	ldrb.w	r3, [ip]
 8028186:	9c02      	ldr	r4, [sp, #8]
 8028188:	091b      	lsrs	r3, r3, #4
 802818a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802818e:	5cd1      	ldrb	r1, [r2, r3]
 8028190:	4413      	add	r3, r2
 8028192:	7001      	strb	r1, [r0, #0]
 8028194:	7859      	ldrb	r1, [r3, #1]
 8028196:	7041      	strb	r1, [r0, #1]
 8028198:	7899      	ldrb	r1, [r3, #2]
 802819a:	4b19      	ldr	r3, [pc, #100]	@ (8028200 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 802819c:	7081      	strb	r1, [r0, #2]
 802819e:	881b      	ldrh	r3, [r3, #0]
 80281a0:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 80281a4:	eba3 0308 	sub.w	r3, r3, r8
 80281a8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80281ac:	3303      	adds	r3, #3
 80281ae:	4421      	add	r1, r4
 80281b0:	4418      	add	r0, r3
 80281b2:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80281b6:	4586      	cmp	lr, r0
 80281b8:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 80281bc:	f67f af01 	bls.w	8027fc2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 80281c0:	9b01      	ldr	r3, [sp, #4]
 80281c2:	2b00      	cmp	r3, #0
 80281c4:	d18c      	bne.n	80280e0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x32c>
 80281c6:	46d4      	mov	ip, sl
 80281c8:	4646      	mov	r6, r8
 80281ca:	e79c      	b.n	8028106 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x352>
 80281cc:	4b0c      	ldr	r3, [pc, #48]	@ (8028200 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 80281ce:	9c02      	ldr	r4, [sp, #8]
 80281d0:	8819      	ldrh	r1, [r3, #0]
 80281d2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80281d6:	eba1 0108 	sub.w	r1, r1, r8
 80281da:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80281de:	4423      	add	r3, r4
 80281e0:	4408      	add	r0, r1
 80281e2:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80281e6:	4586      	cmp	lr, r0
 80281e8:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 80281ec:	f63f af75 	bhi.w	80280da <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x326>
 80281f0:	e6e7      	b.n	8027fc2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 80281f2:	4b04      	ldr	r3, [pc, #16]	@ (8028204 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x450>)
 80281f4:	4a04      	ldr	r2, [pc, #16]	@ (8028208 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x454>)
 80281f6:	f640 31da 	movw	r1, #3034	@ 0xbda
 80281fa:	4804      	ldr	r0, [pc, #16]	@ (802820c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x458>)
 80281fc:	f00a f944 	bl	8032488 <__assert_func>
 8028200:	20082ebe 	.word	0x20082ebe
 8028204:	0803630c 	.word	0x0803630c
 8028208:	08037270 	.word	0x08037270
 802820c:	08036248 	.word	0x08036248

08028210 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8028210:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028214:	b08d      	sub	sp, #52	@ 0x34
 8028216:	7814      	ldrb	r4, [r2, #0]
 8028218:	461d      	mov	r5, r3
 802821a:	f89d 305c 	ldrb.w	r3, [sp, #92]	@ 0x5c
 802821e:	2c01      	cmp	r4, #1
 8028220:	9204      	str	r2, [sp, #16]
 8028222:	9302      	str	r3, [sp, #8]
 8028224:	f040 8133 	bne.w	802848e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x27e>
 8028228:	b913      	cbnz	r3, 8028230 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20>
 802822a:	b00d      	add	sp, #52	@ 0x34
 802822c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028230:	6828      	ldr	r0, [r5, #0]
 8028232:	4689      	mov	r9, r1
 8028234:	6869      	ldr	r1, [r5, #4]
 8028236:	ab08      	add	r3, sp, #32
 8028238:	c303      	stmia	r3!, {r0, r1}
 802823a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802823c:	6818      	ldr	r0, [r3, #0]
 802823e:	6859      	ldr	r1, [r3, #4]
 8028240:	ab0a      	add	r3, sp, #40	@ 0x28
 8028242:	c303      	stmia	r3!, {r0, r1}
 8028244:	a808      	add	r0, sp, #32
 8028246:	f7e4 fd43 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802824a:	4629      	mov	r1, r5
 802824c:	a80a      	add	r0, sp, #40	@ 0x28
 802824e:	f7e4 fd67 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028252:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8028256:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 802825a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 802825e:	bfdd      	ittte	le
 8028260:	f44f 6480 	movle.w	r4, #1024	@ 0x400
 8028264:	b29a      	uxthle	r2, r3
 8028266:	fb94 f4f2 	sdivle	r4, r4, r2
 802826a:	b29a      	uxthgt	r2, r3
 802826c:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8028270:	fb93 f0f4 	sdiv	r0, r3, r4
 8028274:	b286      	uxth	r6, r0
 8028276:	fb04 3816 	mls	r8, r4, r6, r3
 802827a:	fb18 1802 	smlabb	r8, r8, r2, r1
 802827e:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	@ 0x26
 8028282:	fa1f f888 	uxth.w	r8, r8
 8028286:	4422      	add	r2, r4
 8028288:	3a01      	subs	r2, #1
 802828a:	fb92 f4f4 	sdiv	r4, r2, r4
 802828e:	2e00      	cmp	r6, #0
 8028290:	f040 80f7 	bne.w	8028482 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x272>
 8028294:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8028298:	f8bd 0020 	ldrh.w	r0, [sp, #32]
 802829c:	4413      	add	r3, r2
 802829e:	4a7f      	ldr	r2, [pc, #508]	@ (802849c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 80282a0:	4401      	add	r1, r0
 80282a2:	6810      	ldr	r0, [r2, #0]
 80282a4:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80282a8:	f8ad 1028 	strh.w	r1, [sp, #40]	@ 0x28
 80282ac:	4616      	mov	r6, r2
 80282ae:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80282b2:	6803      	ldr	r3, [r0, #0]
 80282b4:	9207      	str	r2, [sp, #28]
 80282b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80282b8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80282bc:	4798      	blx	r3
 80282be:	f1b8 0f00 	cmp.w	r8, #0
 80282c2:	bf0c      	ite	eq
 80282c4:	4633      	moveq	r3, r6
 80282c6:	2300      	movne	r3, #0
 80282c8:	4975      	ldr	r1, [pc, #468]	@ (80284a0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 80282ca:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80282ce:	8809      	ldrh	r1, [r1, #0]
 80282d0:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 80282d4:	fb01 f505 	mul.w	r5, r1, r5
 80282d8:	fb01 6202 	mla	r2, r1, r2, r6
 80282dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80282e0:	4410      	add	r0, r2
 80282e2:	b2a4      	uxth	r4, r4
 80282e4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80282e8:	1942      	adds	r2, r0, r5
 80282ea:	00a4      	lsls	r4, r4, #2
 80282ec:	1d21      	adds	r1, r4, #4
 80282ee:	4290      	cmp	r0, r2
 80282f0:	9200      	str	r2, [sp, #0]
 80282f2:	9106      	str	r1, [sp, #24]
 80282f4:	fa1f fa83 	uxth.w	sl, r3
 80282f8:	d225      	bcs.n	8028346 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x136>
 80282fa:	2500      	movs	r5, #0
 80282fc:	4686      	mov	lr, r0
 80282fe:	4640      	mov	r0, r8
 8028300:	9b02      	ldr	r3, [sp, #8]
 8028302:	9501      	str	r5, [sp, #4]
 8028304:	f1c3 07ff 	rsb	r7, r3, #255	@ 0xff
 8028308:	b2bf      	uxth	r7, r7
 802830a:	fa1f fc83 	uxth.w	ip, r3
 802830e:	b985      	cbnz	r5, 8028332 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x122>
 8028310:	f899 2000 	ldrb.w	r2, [r9]
 8028314:	0995      	lsrs	r5, r2, #6
 8028316:	1e6b      	subs	r3, r5, #1
 8028318:	2b02      	cmp	r3, #2
 802831a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802831e:	bf88      	it	hi
 8028320:	f899 5001 	ldrbhi.w	r5, [r9, #1]
 8028324:	9201      	str	r2, [sp, #4]
 8028326:	bf9a      	itte	ls
 8028328:	f109 0901 	addls.w	r9, r9, #1
 802832c:	b2ad      	uxthls	r5, r5
 802832e:	f109 0902 	addhi.w	r9, r9, #2
 8028332:	b180      	cbz	r0, 8028356 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x146>
 8028334:	4285      	cmp	r5, r0
 8028336:	f080 809e 	bcs.w	8028476 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x266>
 802833a:	1b40      	subs	r0, r0, r5
 802833c:	2500      	movs	r5, #0
 802833e:	b280      	uxth	r0, r0
 8028340:	9b00      	ldr	r3, [sp, #0]
 8028342:	4573      	cmp	r3, lr
 8028344:	d8e3      	bhi.n	802830e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xfe>
 8028346:	4b55      	ldr	r3, [pc, #340]	@ (802849c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8028348:	6818      	ldr	r0, [r3, #0]
 802834a:	6803      	ldr	r3, [r0, #0]
 802834c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802834e:	4798      	blx	r3
 8028350:	b00d      	add	sp, #52	@ 0x34
 8028352:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028356:	2303      	movs	r3, #3
 8028358:	4619      	mov	r1, r3
 802835a:	9a06      	ldr	r2, [sp, #24]
 802835c:	9b01      	ldr	r3, [sp, #4]
 802835e:	4555      	cmp	r5, sl
 8028360:	fb11 2403 	smlabb	r4, r1, r3, r2
 8028364:	9b04      	ldr	r3, [sp, #16]
 8028366:	441c      	add	r4, r3
 8028368:	d360      	bcc.n	802842c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 802836a:	eba5 030a 	sub.w	r3, r5, sl
 802836e:	b29b      	uxth	r3, r3
 8028370:	9303      	str	r3, [sp, #12]
 8028372:	9b02      	ldr	r3, [sp, #8]
 8028374:	4656      	mov	r6, sl
 8028376:	2bff      	cmp	r3, #255	@ 0xff
 8028378:	9005      	str	r0, [sp, #20]
 802837a:	d060      	beq.n	802843e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x22e>
 802837c:	2e00      	cmp	r6, #0
 802837e:	d03b      	beq.n	80283f8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 8028380:	3e01      	subs	r6, #1
 8028382:	b2b6      	uxth	r6, r6
 8028384:	eb06 0346 	add.w	r3, r6, r6, lsl #1
 8028388:	f10e 0806 	add.w	r8, lr, #6
 802838c:	4498      	add	r8, r3
 802838e:	f10e 0103 	add.w	r1, lr, #3
 8028392:	f811 2c03 	ldrb.w	r2, [r1, #-3]
 8028396:	7823      	ldrb	r3, [r4, #0]
 8028398:	fb12 f207 	smulbb	r2, r2, r7
 802839c:	fb03 230c 	mla	r3, r3, ip, r2
 80283a0:	b29b      	uxth	r3, r3
 80283a2:	f811 2c02 	ldrb.w	r2, [r1, #-2]
 80283a6:	f103 0b01 	add.w	fp, r3, #1
 80283aa:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 80283ae:	121b      	asrs	r3, r3, #8
 80283b0:	fb12 fb07 	smulbb	fp, r2, r7
 80283b4:	f801 3c03 	strb.w	r3, [r1, #-3]
 80283b8:	7862      	ldrb	r2, [r4, #1]
 80283ba:	f811 3c01 	ldrb.w	r3, [r1, #-1]
 80283be:	fb02 b20c 	mla	r2, r2, ip, fp
 80283c2:	b292      	uxth	r2, r2
 80283c4:	f102 0b01 	add.w	fp, r2, #1
 80283c8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80283cc:	1212      	asrs	r2, r2, #8
 80283ce:	fb13 fb07 	smulbb	fp, r3, r7
 80283d2:	f801 2c02 	strb.w	r2, [r1, #-2]
 80283d6:	78a3      	ldrb	r3, [r4, #2]
 80283d8:	3103      	adds	r1, #3
 80283da:	fb03 b30c 	mla	r3, r3, ip, fp
 80283de:	b29b      	uxth	r3, r3
 80283e0:	1c5a      	adds	r2, r3, #1
 80283e2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80283e6:	121b      	asrs	r3, r3, #8
 80283e8:	f801 3c04 	strb.w	r3, [r1, #-4]
 80283ec:	4541      	cmp	r1, r8
 80283ee:	d1d0      	bne.n	8028392 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x182>
 80283f0:	3601      	adds	r6, #1
 80283f2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80283f6:	44b6      	add	lr, r6
 80283f8:	4555      	cmp	r5, sl
 80283fa:	d313      	bcc.n	8028424 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x214>
 80283fc:	9a07      	ldr	r2, [sp, #28]
 80283fe:	4b28      	ldr	r3, [pc, #160]	@ (80284a0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 8028400:	f8bd 0024 	ldrh.w	r0, [sp, #36]	@ 0x24
 8028404:	fa1f fa82 	uxth.w	sl, r2
 8028408:	881b      	ldrh	r3, [r3, #0]
 802840a:	eba0 000a 	sub.w	r0, r0, sl
 802840e:	b280      	uxth	r0, r0
 8028410:	1a9b      	subs	r3, r3, r2
 8028412:	2800      	cmp	r0, #0
 8028414:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028418:	9d03      	ldr	r5, [sp, #12]
 802841a:	bf18      	it	ne
 802841c:	f04f 0a00 	movne.w	sl, #0
 8028420:	449e      	add	lr, r3
 8028422:	e78d      	b.n	8028340 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 8028424:	9d03      	ldr	r5, [sp, #12]
 8028426:	f8dd a014 	ldr.w	sl, [sp, #20]
 802842a:	e789      	b.n	8028340 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 802842c:	ebaa 0305 	sub.w	r3, sl, r5
 8028430:	b29b      	uxth	r3, r3
 8028432:	9305      	str	r3, [sp, #20]
 8028434:	9b02      	ldr	r3, [sp, #8]
 8028436:	462e      	mov	r6, r5
 8028438:	2bff      	cmp	r3, #255	@ 0xff
 802843a:	9003      	str	r0, [sp, #12]
 802843c:	d19e      	bne.n	802837c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x16c>
 802843e:	2e00      	cmp	r6, #0
 8028440:	d0da      	beq.n	80283f8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 8028442:	3e01      	subs	r6, #1
 8028444:	b2b2      	uxth	r2, r6
 8028446:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 802844a:	f10e 0606 	add.w	r6, lr, #6
 802844e:	441e      	add	r6, r3
 8028450:	f10e 0303 	add.w	r3, lr, #3
 8028454:	7821      	ldrb	r1, [r4, #0]
 8028456:	3303      	adds	r3, #3
 8028458:	f803 1c06 	strb.w	r1, [r3, #-6]
 802845c:	7861      	ldrb	r1, [r4, #1]
 802845e:	f803 1c05 	strb.w	r1, [r3, #-5]
 8028462:	78a1      	ldrb	r1, [r4, #2]
 8028464:	f803 1c04 	strb.w	r1, [r3, #-4]
 8028468:	429e      	cmp	r6, r3
 802846a:	d1f3      	bne.n	8028454 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>
 802846c:	3201      	adds	r2, #1
 802846e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028472:	4496      	add	lr, r2
 8028474:	e7c0      	b.n	80283f8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 8028476:	1a2d      	subs	r5, r5, r0
 8028478:	b2ad      	uxth	r5, r5
 802847a:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 802847e:	2000      	movs	r0, #0
 8028480:	e75e      	b.n	8028340 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 8028482:	9a04      	ldr	r2, [sp, #16]
 8028484:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8028488:	ba12      	rev	r2, r2
 802848a:	4491      	add	r9, r2
 802848c:	e702      	b.n	8028294 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x84>
 802848e:	4b05      	ldr	r3, [pc, #20]	@ (80284a4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x294>)
 8028490:	4a05      	ldr	r2, [pc, #20]	@ (80284a8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>)
 8028492:	f44f 6146 	mov.w	r1, #3168	@ 0xc60
 8028496:	4805      	ldr	r0, [pc, #20]	@ (80284ac <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x29c>)
 8028498:	f009 fff6 	bl	8032488 <__assert_func>
 802849c:	20082ec4 	.word	0x20082ec4
 80284a0:	20082ebe 	.word	0x20082ebe
 80284a4:	0803630c 	.word	0x0803630c
 80284a8:	08037414 	.word	0x08037414
 80284ac:	08036248 	.word	0x08036248

080284b0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 80284b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80284b4:	b09b      	sub	sp, #108	@ 0x6c
 80284b6:	7814      	ldrb	r4, [r2, #0]
 80284b8:	461d      	mov	r5, r3
 80284ba:	f89d 3094 	ldrb.w	r3, [sp, #148]	@ 0x94
 80284be:	2c01      	cmp	r4, #1
 80284c0:	9210      	str	r2, [sp, #64]	@ 0x40
 80284c2:	9112      	str	r1, [sp, #72]	@ 0x48
 80284c4:	930d      	str	r3, [sp, #52]	@ 0x34
 80284c6:	f040 820f 	bne.w	80288e8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>
 80284ca:	b913      	cbnz	r3, 80284d2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x22>
 80284cc:	b01b      	add	sp, #108	@ 0x6c
 80284ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80284d2:	6869      	ldr	r1, [r5, #4]
 80284d4:	4681      	mov	r9, r0
 80284d6:	6828      	ldr	r0, [r5, #0]
 80284d8:	ab16      	add	r3, sp, #88	@ 0x58
 80284da:	c303      	stmia	r3!, {r0, r1}
 80284dc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80284de:	6818      	ldr	r0, [r3, #0]
 80284e0:	6859      	ldr	r1, [r3, #4]
 80284e2:	ab18      	add	r3, sp, #96	@ 0x60
 80284e4:	c303      	stmia	r3!, {r0, r1}
 80284e6:	a816      	add	r0, sp, #88	@ 0x58
 80284e8:	f7e4 fbf2 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80284ec:	4629      	mov	r1, r5
 80284ee:	a818      	add	r0, sp, #96	@ 0x60
 80284f0:	f7e4 fc16 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80284f4:	f9bd a05c 	ldrsh.w	sl, [sp, #92]	@ 0x5c
 80284f8:	f5ba 6f80 	cmp.w	sl, #1024	@ 0x400
 80284fc:	f340 814e 	ble.w	802879c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ec>
 8028500:	fa1f f08a 	uxth.w	r0, sl
 8028504:	9414      	str	r4, [sp, #80]	@ 0x50
 8028506:	f9bd 3062 	ldrsh.w	r3, [sp, #98]	@ 0x62
 802850a:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 802850e:	fb93 f1f4 	sdiv	r1, r3, r4
 8028512:	4422      	add	r2, r4
 8028514:	3a01      	subs	r2, #1
 8028516:	fb92 f2f4 	sdiv	r2, r2, r4
 802851a:	b289      	uxth	r1, r1
 802851c:	fb04 3411 	mls	r4, r4, r1, r3
 8028520:	9113      	str	r1, [sp, #76]	@ 0x4c
 8028522:	f8bd 1060 	ldrh.w	r1, [sp, #96]	@ 0x60
 8028526:	f8bd 6058 	ldrh.w	r6, [sp, #88]	@ 0x58
 802852a:	fb14 1a00 	smlabb	sl, r4, r0, r1
 802852e:	f8bd 505a 	ldrh.w	r5, [sp, #90]	@ 0x5a
 8028532:	48bc      	ldr	r0, [pc, #752]	@ (8028824 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 8028534:	4431      	add	r1, r6
 8028536:	442b      	add	r3, r5
 8028538:	6800      	ldr	r0, [r0, #0]
 802853a:	f8ad 1060 	strh.w	r1, [sp, #96]	@ 0x60
 802853e:	f8ad 3062 	strh.w	r3, [sp, #98]	@ 0x62
 8028542:	f9bd 7064 	ldrsh.w	r7, [sp, #100]	@ 0x64
 8028546:	6803      	ldr	r3, [r0, #0]
 8028548:	3201      	adds	r2, #1
 802854a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802854c:	970a      	str	r7, [sp, #40]	@ 0x28
 802854e:	b294      	uxth	r4, r2
 8028550:	f9bd 5066 	ldrsh.w	r5, [sp, #102]	@ 0x66
 8028554:	4798      	blx	r3
 8028556:	2200      	movs	r2, #0
 8028558:	fa1f f68a 	uxth.w	r6, sl
 802855c:	2e00      	cmp	r6, #0
 802855e:	bf0c      	ite	eq
 8028560:	463b      	moveq	r3, r7
 8028562:	2300      	movne	r3, #0
 8028564:	49b0      	ldr	r1, [pc, #704]	@ (8028828 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 8028566:	9602      	str	r6, [sp, #8]
 8028568:	8809      	ldrh	r1, [r1, #0]
 802856a:	9211      	str	r2, [sp, #68]	@ 0x44
 802856c:	f9bd 6060 	ldrsh.w	r6, [sp, #96]	@ 0x60
 8028570:	f9bd 2062 	ldrsh.w	r2, [sp, #98]	@ 0x62
 8028574:	fb01 f505 	mul.w	r5, r1, r5
 8028578:	fb01 6202 	mla	r2, r1, r2, r6
 802857c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802857e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028582:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8028586:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802858a:	1881      	adds	r1, r0, r2
 802858c:	9101      	str	r1, [sp, #4]
 802858e:	fa1f fe83 	uxth.w	lr, r3
 8028592:	4429      	add	r1, r5
 8028594:	f109 030e 	add.w	r3, r9, #14
 8028598:	9315      	str	r3, [sp, #84]	@ 0x54
 802859a:	460b      	mov	r3, r1
 802859c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802859e:	464f      	mov	r7, r9
 80285a0:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 80285a4:	f8dd 9008 	ldr.w	r9, [sp, #8]
 80285a8:	f104 0c04 	add.w	ip, r4, #4
 80285ac:	9106      	str	r1, [sp, #24]
 80285ae:	fa1f f882 	uxth.w	r8, r2
 80285b2:	9a01      	ldr	r2, [sp, #4]
 80285b4:	4293      	cmp	r3, r2
 80285b6:	f240 8101 	bls.w	80287bc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 80285ba:	2200      	movs	r2, #0
 80285bc:	2601      	movs	r6, #1
 80285be:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80285c0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80285c2:	920c      	str	r2, [sp, #48]	@ 0x30
 80285c4:	fa10 f481 	uxtah	r4, r0, r1
 80285c8:	00a4      	lsls	r4, r4, #2
 80285ca:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80285cc:	3404      	adds	r4, #4
 80285ce:	4421      	add	r1, r4
 80285d0:	788a      	ldrb	r2, [r1, #2]
 80285d2:	784d      	ldrb	r5, [r1, #1]
 80285d4:	0212      	lsls	r2, r2, #8
 80285d6:	78c9      	ldrb	r1, [r1, #3]
 80285d8:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 80285dc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80285de:	4308      	orrs	r0, r1
 80285e0:	f8bd 305c 	ldrh.w	r3, [sp, #92]	@ 0x5c
 80285e4:	1829      	adds	r1, r5, r0
 80285e6:	5c28      	ldrb	r0, [r5, r0]
 80285e8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80285ea:	fbb9 f3f3 	udiv	r3, r9, r3
 80285ee:	5d2c      	ldrb	r4, [r5, r4]
 80285f0:	784a      	ldrb	r2, [r1, #1]
 80285f2:	4431      	add	r1, r6
 80285f4:	940e      	str	r4, [sp, #56]	@ 0x38
 80285f6:	9104      	str	r1, [sp, #16]
 80285f8:	f04f 0a00 	mov.w	sl, #0
 80285fc:	19a1      	adds	r1, r4, r6
 80285fe:	4634      	mov	r4, r6
 8028600:	0212      	lsls	r2, r2, #8
 8028602:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8028606:	4302      	orrs	r2, r0
 8028608:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802860a:	f8bd 5034 	ldrh.w	r5, [sp, #52]	@ 0x34
 802860e:	1ac3      	subs	r3, r0, r3
 8028610:	b29b      	uxth	r3, r3
 8028612:	b290      	uxth	r0, r2
 8028614:	9609      	str	r6, [sp, #36]	@ 0x24
 8028616:	737a      	strb	r2, [r7, #13]
 8028618:	9008      	str	r0, [sp, #32]
 802861a:	9105      	str	r1, [sp, #20]
 802861c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802861e:	9603      	str	r6, [sp, #12]
 8028620:	f1b9 0f00 	cmp.w	r9, #0
 8028624:	d035      	beq.n	8028692 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8028626:	45a1      	cmp	r9, r4
 8028628:	f240 8100 	bls.w	802882c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x37c>
 802862c:	9b06      	ldr	r3, [sp, #24]
 802862e:	9a01      	ldr	r2, [sp, #4]
 8028630:	eba9 0904 	sub.w	r9, r9, r4
 8028634:	4293      	cmp	r3, r2
 8028636:	fa1f f989 	uxth.w	r9, r9
 802863a:	f240 80bf 	bls.w	80287bc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 802863e:	9804      	ldr	r0, [sp, #16]
 8028640:	9c03      	ldr	r4, [sp, #12]
 8028642:	7842      	ldrb	r2, [r0, #1]
 8028644:	f1c4 0107 	rsb	r1, r4, #7
 8028648:	7803      	ldrb	r3, [r0, #0]
 802864a:	408a      	lsls	r2, r1
 802864c:	0052      	lsls	r2, r2, #1
 802864e:	4123      	asrs	r3, r4
 8028650:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8028654:	1c61      	adds	r1, r4, #1
 8028656:	b2db      	uxtb	r3, r3
 8028658:	4313      	orrs	r3, r2
 802865a:	b2ca      	uxtb	r2, r1
 802865c:	4611      	mov	r1, r2
 802865e:	2908      	cmp	r1, #8
 8028660:	9203      	str	r2, [sp, #12]
 8028662:	b29a      	uxth	r2, r3
 8028664:	f000 810b 	beq.w	802887e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ce>
 8028668:	3001      	adds	r0, #1
 802866a:	9004      	str	r0, [sp, #16]
 802866c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802866e:	4291      	cmp	r1, r2
 8028670:	f0c0 80e7 	bcc.w	8028842 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x392>
 8028674:	2401      	movs	r4, #1
 8028676:	b2db      	uxtb	r3, r3
 8028678:	737b      	strb	r3, [r7, #13]
 802867a:	9905      	ldr	r1, [sp, #20]
 802867c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8028680:	f0c0 8103 	bcc.w	802888a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3da>
 8028684:	e9cd 2408 	strd	r2, r4, [sp, #32]
 8028688:	f04f 0a00 	mov.w	sl, #0
 802868c:	f1b9 0f00 	cmp.w	r9, #0
 8028690:	d1c9      	bne.n	8028626 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x176>
 8028692:	4574      	cmp	r4, lr
 8028694:	f0c0 809a 	bcc.w	80287cc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8028698:	eba4 030e 	sub.w	r3, r4, lr
 802869c:	b29b      	uxth	r3, r3
 802869e:	9307      	str	r3, [sp, #28]
 80286a0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80286a2:	f8cd e008 	str.w	lr, [sp, #8]
 80286a6:	2bff      	cmp	r3, #255	@ 0xff
 80286a8:	f8cd 902c 	str.w	r9, [sp, #44]	@ 0x2c
 80286ac:	9b02      	ldr	r3, [sp, #8]
 80286ae:	f000 8099 	beq.w	80287e4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x334>
 80286b2:	2b00      	cmp	r3, #0
 80286b4:	d048      	beq.n	8028748 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 80286b6:	eb0a 0603 	add.w	r6, sl, r3
 80286ba:	9b01      	ldr	r3, [sp, #4]
 80286bc:	b2b6      	uxth	r6, r6
 80286be:	1cd8      	adds	r0, r3, #3
 80286c0:	f810 1c03 	ldrb.w	r1, [r0, #-3]
 80286c4:	eb07 030a 	add.w	r3, r7, sl
 80286c8:	7b5b      	ldrb	r3, [r3, #13]
 80286ca:	fb11 f208 	smulbb	r2, r1, r8
 80286ce:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80286d2:	f81c 1003 	ldrb.w	r1, [ip, r3]
 80286d6:	4463      	add	r3, ip
 80286d8:	fb01 2105 	mla	r1, r1, r5, r2
 80286dc:	b289      	uxth	r1, r1
 80286de:	f810 2c02 	ldrb.w	r2, [r0, #-2]
 80286e2:	f101 0b01 	add.w	fp, r1, #1
 80286e6:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 80286ea:	1209      	asrs	r1, r1, #8
 80286ec:	fb12 fb08 	smulbb	fp, r2, r8
 80286f0:	f800 1c03 	strb.w	r1, [r0, #-3]
 80286f4:	785a      	ldrb	r2, [r3, #1]
 80286f6:	f810 1c01 	ldrb.w	r1, [r0, #-1]
 80286fa:	fb02 b205 	mla	r2, r2, r5, fp
 80286fe:	b292      	uxth	r2, r2
 8028700:	f102 0b01 	add.w	fp, r2, #1
 8028704:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028708:	1212      	asrs	r2, r2, #8
 802870a:	fb11 f108 	smulbb	r1, r1, r8
 802870e:	f800 2c02 	strb.w	r2, [r0, #-2]
 8028712:	789b      	ldrb	r3, [r3, #2]
 8028714:	f10a 0a01 	add.w	sl, sl, #1
 8028718:	fb03 1305 	mla	r3, r3, r5, r1
 802871c:	b29b      	uxth	r3, r3
 802871e:	1c5a      	adds	r2, r3, #1
 8028720:	fa1f fa8a 	uxth.w	sl, sl
 8028724:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028728:	121b      	asrs	r3, r3, #8
 802872a:	45b2      	cmp	sl, r6
 802872c:	f800 3c01 	strb.w	r3, [r0, #-1]
 8028730:	f100 0003 	add.w	r0, r0, #3
 8028734:	d1c4      	bne.n	80286c0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x210>
 8028736:	9b02      	ldr	r3, [sp, #8]
 8028738:	9a01      	ldr	r2, [sp, #4]
 802873a:	3b01      	subs	r3, #1
 802873c:	b29b      	uxth	r3, r3
 802873e:	3301      	adds	r3, #1
 8028740:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028744:	441a      	add	r2, r3
 8028746:	9201      	str	r2, [sp, #4]
 8028748:	4574      	cmp	r4, lr
 802874a:	d330      	bcc.n	80287ae <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802874c:	4b36      	ldr	r3, [pc, #216]	@ (8028828 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 802874e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8028750:	881b      	ldrh	r3, [r3, #0]
 8028752:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8028754:	1a5b      	subs	r3, r3, r1
 8028756:	9901      	ldr	r1, [sp, #4]
 8028758:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802875c:	4419      	add	r1, r3
 802875e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8028760:	3201      	adds	r2, #1
 8028762:	429a      	cmp	r2, r3
 8028764:	920c      	str	r2, [sp, #48]	@ 0x30
 8028766:	9101      	str	r1, [sp, #4]
 8028768:	f000 80ab 	beq.w	80288c2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x412>
 802876c:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 8028770:	f8bd 905c 	ldrh.w	r9, [sp, #92]	@ 0x5c
 8028774:	9c07      	ldr	r4, [sp, #28]
 8028776:	eba9 090e 	sub.w	r9, r9, lr
 802877a:	fa1f f989 	uxth.w	r9, r9
 802877e:	f1b9 0f00 	cmp.w	r9, #0
 8028782:	bf14      	ite	ne
 8028784:	f04f 0e00 	movne.w	lr, #0
 8028788:	f04f 0900 	moveq.w	r9, #0
 802878c:	9b06      	ldr	r3, [sp, #24]
 802878e:	9a01      	ldr	r2, [sp, #4]
 8028790:	4293      	cmp	r3, r2
 8028792:	d913      	bls.n	80287bc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 8028794:	2c00      	cmp	r4, #0
 8028796:	f47f af43 	bne.w	8028620 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x170>
 802879a:	e750      	b.n	802863e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x18e>
 802879c:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80287a0:	fa1f f08a 	uxth.w	r0, sl
 80287a4:	fb94 f4f0 	sdiv	r4, r4, r0
 80287a8:	b2a3      	uxth	r3, r4
 80287aa:	9314      	str	r3, [sp, #80]	@ 0x50
 80287ac:	e6ab      	b.n	8028506 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x56>
 80287ae:	9b06      	ldr	r3, [sp, #24]
 80287b0:	9a01      	ldr	r2, [sp, #4]
 80287b2:	9c07      	ldr	r4, [sp, #28]
 80287b4:	4293      	cmp	r3, r2
 80287b6:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 80287ba:	d8eb      	bhi.n	8028794 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e4>
 80287bc:	4b19      	ldr	r3, [pc, #100]	@ (8028824 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 80287be:	6818      	ldr	r0, [r3, #0]
 80287c0:	6803      	ldr	r3, [r0, #0]
 80287c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80287c4:	4798      	blx	r3
 80287c6:	b01b      	add	sp, #108	@ 0x6c
 80287c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80287cc:	ebae 0304 	sub.w	r3, lr, r4
 80287d0:	b29b      	uxth	r3, r3
 80287d2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80287d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80287d6:	9402      	str	r4, [sp, #8]
 80287d8:	2bff      	cmp	r3, #255	@ 0xff
 80287da:	f8cd 901c 	str.w	r9, [sp, #28]
 80287de:	9b02      	ldr	r3, [sp, #8]
 80287e0:	f47f af67 	bne.w	80286b2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x202>
 80287e4:	2b00      	cmp	r3, #0
 80287e6:	d0af      	beq.n	8028748 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 80287e8:	eb0a 0003 	add.w	r0, sl, r3
 80287ec:	9b01      	ldr	r3, [sp, #4]
 80287ee:	b280      	uxth	r0, r0
 80287f0:	1cda      	adds	r2, r3, #3
 80287f2:	eb07 030a 	add.w	r3, r7, sl
 80287f6:	7b5b      	ldrb	r3, [r3, #13]
 80287f8:	f10a 0a01 	add.w	sl, sl, #1
 80287fc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028800:	f81c 1003 	ldrb.w	r1, [ip, r3]
 8028804:	4463      	add	r3, ip
 8028806:	f802 1c03 	strb.w	r1, [r2, #-3]
 802880a:	7859      	ldrb	r1, [r3, #1]
 802880c:	fa1f fa8a 	uxth.w	sl, sl
 8028810:	f802 1c02 	strb.w	r1, [r2, #-2]
 8028814:	789b      	ldrb	r3, [r3, #2]
 8028816:	4582      	cmp	sl, r0
 8028818:	f802 3c01 	strb.w	r3, [r2, #-1]
 802881c:	f102 0203 	add.w	r2, r2, #3
 8028820:	d1e7      	bne.n	80287f2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x342>
 8028822:	e788      	b.n	8028736 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x286>
 8028824:	20082ec4 	.word	0x20082ec4
 8028828:	20082ebe 	.word	0x20082ebe
 802882c:	eba4 0409 	sub.w	r4, r4, r9
 8028830:	44ca      	add	sl, r9
 8028832:	b2a4      	uxth	r4, r4
 8028834:	fa1f fa8a 	uxth.w	sl, sl
 8028838:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 802883c:	f04f 0900 	mov.w	r9, #0
 8028840:	e7a4      	b.n	802878c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2dc>
 8028842:	9b05      	ldr	r3, [sp, #20]
 8028844:	429a      	cmp	r2, r3
 8028846:	d323      	bcc.n	8028890 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3e0>
 8028848:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802884a:	7b79      	ldrb	r1, [r7, #13]
 802884c:	183b      	adds	r3, r7, r0
 802884e:	7359      	strb	r1, [r3, #13]
 8028850:	7b7b      	ldrb	r3, [r7, #13]
 8028852:	1c41      	adds	r1, r0, #1
 8028854:	b28c      	uxth	r4, r1
 8028856:	9e05      	ldr	r6, [sp, #20]
 8028858:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 802885c:	f106 0a01 	add.w	sl, r6, #1
 8028860:	9e08      	ldr	r6, [sp, #32]
 8028862:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8028866:	fa1f f38a 	uxth.w	r3, sl
 802886a:	f8a0 6050 	strh.w	r6, [r0, #80]	@ 0x50
 802886e:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8028872:	9305      	str	r3, [sp, #20]
 8028874:	e9cd 2408 	strd	r2, r4, [sp, #32]
 8028878:	f04f 0a00 	mov.w	sl, #0
 802887c:	e6d0      	b.n	8028620 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x170>
 802887e:	2100      	movs	r1, #0
 8028880:	9103      	str	r1, [sp, #12]
 8028882:	9904      	ldr	r1, [sp, #16]
 8028884:	3102      	adds	r1, #2
 8028886:	9104      	str	r1, [sp, #16]
 8028888:	e6f0      	b.n	802866c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1bc>
 802888a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802888c:	3101      	adds	r1, #1
 802888e:	e7e2      	b.n	8028856 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3a6>
 8028890:	eb07 0382 	add.w	r3, r7, r2, lsl #2
 8028894:	f893 404f 	ldrb.w	r4, [r3, #79]	@ 0x4f
 8028898:	4613      	mov	r3, r2
 802889a:	2c01      	cmp	r4, #1
 802889c:	d90d      	bls.n	80288ba <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x40a>
 802889e:	f104 010d 	add.w	r1, r4, #13
 80288a2:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80288a4:	4439      	add	r1, r7
 80288a6:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 80288aa:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 80288ae:	f801 0d01 	strb.w	r0, [r1, #-1]!
 80288b2:	428e      	cmp	r6, r1
 80288b4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80288b8:	d1f5      	bne.n	80288a6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3f6>
 80288ba:	b2db      	uxtb	r3, r3
 80288bc:	737b      	strb	r3, [r7, #13]
 80288be:	b2a4      	uxth	r4, r4
 80288c0:	e6db      	b.n	802867a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 80288c2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 80288c6:	f8bd 2058 	ldrh.w	r2, [sp, #88]	@ 0x58
 80288ca:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80288cc:	1a9b      	subs	r3, r3, r2
 80288ce:	fa1f f983 	uxth.w	r9, r3
 80288d2:	f1b9 0f00 	cmp.w	r9, #0
 80288d6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80288d8:	bf18      	it	ne
 80288da:	2300      	movne	r3, #0
 80288dc:	3101      	adds	r1, #1
 80288de:	fa1f fe83 	uxth.w	lr, r3
 80288e2:	9111      	str	r1, [sp, #68]	@ 0x44
 80288e4:	9b06      	ldr	r3, [sp, #24]
 80288e6:	e664      	b.n	80285b2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x102>
 80288e8:	4b03      	ldr	r3, [pc, #12]	@ (80288f8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x448>)
 80288ea:	4a04      	ldr	r2, [pc, #16]	@ (80288fc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 80288ec:	f640 41f6 	movw	r1, #3318	@ 0xcf6
 80288f0:	4803      	ldr	r0, [pc, #12]	@ (8028900 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x450>)
 80288f2:	f009 fdc9 	bl	8032488 <__assert_func>
 80288f6:	bf00      	nop
 80288f8:	0803630c 	.word	0x0803630c
 80288fc:	0803776c 	.word	0x0803776c
 8028900:	08036248 	.word	0x08036248

08028904 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8028904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028908:	4690      	mov	r8, r2
 802890a:	8812      	ldrh	r2, [r2, #0]
 802890c:	b095      	sub	sp, #84	@ 0x54
 802890e:	2a01      	cmp	r2, #1
 8028910:	461c      	mov	r4, r3
 8028912:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 8028916:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8028918:	f040 8107 	bne.w	8028b2a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x226>
 802891c:	468a      	mov	sl, r1
 802891e:	6820      	ldr	r0, [r4, #0]
 8028920:	6861      	ldr	r1, [r4, #4]
 8028922:	aa10      	add	r2, sp, #64	@ 0x40
 8028924:	c203      	stmia	r2!, {r0, r1}
 8028926:	6818      	ldr	r0, [r3, #0]
 8028928:	6859      	ldr	r1, [r3, #4]
 802892a:	aa12      	add	r2, sp, #72	@ 0x48
 802892c:	c203      	stmia	r2!, {r0, r1}
 802892e:	a810      	add	r0, sp, #64	@ 0x40
 8028930:	f7e4 f9ce 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028934:	4621      	mov	r1, r4
 8028936:	a812      	add	r0, sp, #72	@ 0x48
 8028938:	f7e4 f9f2 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802893c:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 8028940:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 8028944:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8028948:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 802894c:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 8028950:	4879      	ldr	r0, [pc, #484]	@ (8028b38 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028952:	fb11 4105 	smlabb	r1, r1, r5, r4
 8028956:	4422      	add	r2, r4
 8028958:	442b      	add	r3, r5
 802895a:	6800      	ldr	r0, [r0, #0]
 802895c:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8028960:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 8028964:	6802      	ldr	r2, [r0, #0]
 8028966:	448a      	add	sl, r1
 8028968:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 802896c:	4c73      	ldr	r4, [pc, #460]	@ (8028b3c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 802896e:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8028972:	910c      	str	r1, [sp, #48]	@ 0x30
 8028974:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 8028978:	42a3      	cmp	r3, r4
 802897a:	910e      	str	r1, [sp, #56]	@ 0x38
 802897c:	f040 80a2 	bne.w	8028ac4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c0>
 8028980:	6841      	ldr	r1, [r0, #4]
 8028982:	4c6f      	ldr	r4, [pc, #444]	@ (8028b40 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8028984:	680b      	ldr	r3, [r1, #0]
 8028986:	699b      	ldr	r3, [r3, #24]
 8028988:	42a3      	cmp	r3, r4
 802898a:	f040 80c1 	bne.w	8028b10 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 802898e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8028990:	4798      	blx	r3
 8028992:	4b6c      	ldr	r3, [pc, #432]	@ (8028b44 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028994:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 8028998:	881b      	ldrh	r3, [r3, #0]
 802899a:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 802899e:	fb01 2303 	mla	r3, r1, r3, r2
 80289a2:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80289a6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80289a8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80289aa:	2b00      	cmp	r3, #0
 80289ac:	f340 8082 	ble.w	8028ab4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 80289b0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80289b2:	2b00      	cmp	r3, #0
 80289b4:	dd7e      	ble.n	8028ab4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 80289b6:	2200      	movs	r2, #0
 80289b8:	f04f 0e03 	mov.w	lr, #3
 80289bc:	f04f 0c04 	mov.w	ip, #4
 80289c0:	f1c9 07ff 	rsb	r7, r9, #255	@ 0xff
 80289c4:	009b      	lsls	r3, r3, #2
 80289c6:	920d      	str	r2, [sp, #52]	@ 0x34
 80289c8:	b2bf      	uxth	r7, r7
 80289ca:	930f      	str	r3, [sp, #60]	@ 0x3c
 80289cc:	fa1f f289 	uxth.w	r2, r9
 80289d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80289d2:	4655      	mov	r5, sl
 80289d4:	1d18      	adds	r0, r3, #4
 80289d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80289d8:	eb0a 0603 	add.w	r6, sl, r3
 80289dc:	e03e      	b.n	8028a5c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 80289de:	f810 3c04 	ldrb.w	r3, [r0, #-4]
 80289e2:	f810 4c03 	ldrb.w	r4, [r0, #-3]
 80289e6:	fb13 f307 	smulbb	r3, r3, r7
 80289ea:	fb0b 3302 	mla	r3, fp, r2, r3
 80289ee:	b29b      	uxth	r3, r3
 80289f0:	f103 0b01 	add.w	fp, r3, #1
 80289f4:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 80289f8:	121b      	asrs	r3, r3, #8
 80289fa:	fb14 f407 	smulbb	r4, r4, r7
 80289fe:	f800 3c04 	strb.w	r3, [r0, #-4]
 8028a02:	784b      	ldrb	r3, [r1, #1]
 8028a04:	f810 bc02 	ldrb.w	fp, [r0, #-2]
 8028a08:	fb03 4302 	mla	r3, r3, r2, r4
 8028a0c:	b29b      	uxth	r3, r3
 8028a0e:	1c5c      	adds	r4, r3, #1
 8028a10:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8028a14:	121b      	asrs	r3, r3, #8
 8028a16:	fb1b fb07 	smulbb	fp, fp, r7
 8028a1a:	f800 3c03 	strb.w	r3, [r0, #-3]
 8028a1e:	788c      	ldrb	r4, [r1, #2]
 8028a20:	f810 3c01 	ldrb.w	r3, [r0, #-1]
 8028a24:	fb04 b402 	mla	r4, r4, r2, fp
 8028a28:	b2a4      	uxth	r4, r4
 8028a2a:	f104 0b01 	add.w	fp, r4, #1
 8028a2e:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8028a32:	1224      	asrs	r4, r4, #8
 8028a34:	fb13 fb07 	smulbb	fp, r3, r7
 8028a38:	f800 4c02 	strb.w	r4, [r0, #-2]
 8028a3c:	78cb      	ldrb	r3, [r1, #3]
 8028a3e:	42ae      	cmp	r6, r5
 8028a40:	fb03 b302 	mla	r3, r3, r2, fp
 8028a44:	b29b      	uxth	r3, r3
 8028a46:	f103 0101 	add.w	r1, r3, #1
 8028a4a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8028a4e:	ea4f 2323 	mov.w	r3, r3, asr #8
 8028a52:	f800 3c01 	strb.w	r3, [r0, #-1]
 8028a56:	f100 0004 	add.w	r0, r0, #4
 8028a5a:	d018      	beq.n	8028a8e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x18a>
 8028a5c:	f815 3b01 	ldrb.w	r3, [r5], #1
 8028a60:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8028a64:	fb1e c303 	smlabb	r3, lr, r3, ip
 8028a68:	eb08 0103 	add.w	r1, r8, r3
 8028a6c:	f818 b003 	ldrb.w	fp, [r8, r3]
 8028a70:	d1b5      	bne.n	80289de <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8028a72:	f800 bc04 	strb.w	fp, [r0, #-4]
 8028a76:	784b      	ldrb	r3, [r1, #1]
 8028a78:	42ae      	cmp	r6, r5
 8028a7a:	f800 3c03 	strb.w	r3, [r0, #-3]
 8028a7e:	788b      	ldrb	r3, [r1, #2]
 8028a80:	f100 0004 	add.w	r0, r0, #4
 8028a84:	f800 9c05 	strb.w	r9, [r0, #-5]
 8028a88:	f800 3c06 	strb.w	r3, [r0, #-6]
 8028a8c:	d1e6      	bne.n	8028a5c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 8028a8e:	4b2d      	ldr	r3, [pc, #180]	@ (8028b44 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028a90:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8028a92:	881b      	ldrh	r3, [r3, #0]
 8028a94:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8028a96:	1a1b      	subs	r3, r3, r0
 8028a98:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8028a9c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8028a9e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8028aa0:	441c      	add	r4, r3
 8028aa2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028aa4:	3001      	adds	r0, #1
 8028aa6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8028aaa:	4283      	cmp	r3, r0
 8028aac:	900d      	str	r0, [sp, #52]	@ 0x34
 8028aae:	940b      	str	r4, [sp, #44]	@ 0x2c
 8028ab0:	448a      	add	sl, r1
 8028ab2:	d18d      	bne.n	80289d0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xcc>
 8028ab4:	4b20      	ldr	r3, [pc, #128]	@ (8028b38 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028ab6:	6818      	ldr	r0, [r3, #0]
 8028ab8:	6803      	ldr	r3, [r0, #0]
 8028aba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028abc:	4798      	blx	r3
 8028abe:	b015      	add	sp, #84	@ 0x54
 8028ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028ac4:	4798      	blx	r3
 8028ac6:	2801      	cmp	r0, #1
 8028ac8:	d125      	bne.n	8028b16 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8028aca:	4b1f      	ldr	r3, [pc, #124]	@ (8028b48 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8028acc:	6818      	ldr	r0, [r3, #0]
 8028ace:	b330      	cbz	r0, 8028b1e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 8028ad0:	2502      	movs	r5, #2
 8028ad2:	240b      	movs	r4, #11
 8028ad4:	2600      	movs	r6, #0
 8028ad6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8028ada:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8028ade:	9302      	str	r3, [sp, #8]
 8028ae0:	4b18      	ldr	r3, [pc, #96]	@ (8028b44 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028ae2:	9201      	str	r2, [sp, #4]
 8028ae4:	881b      	ldrh	r3, [r3, #0]
 8028ae6:	9508      	str	r5, [sp, #32]
 8028ae8:	9407      	str	r4, [sp, #28]
 8028aea:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 8028aee:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8028af2:	9306      	str	r3, [sp, #24]
 8028af4:	f8cd 9010 	str.w	r9, [sp, #16]
 8028af8:	4642      	mov	r2, r8
 8028afa:	4651      	mov	r1, sl
 8028afc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8028b00:	9605      	str	r6, [sp, #20]
 8028b02:	9503      	str	r5, [sp, #12]
 8028b04:	9400      	str	r4, [sp, #0]
 8028b06:	f7f8 f857 	bl	8020bb8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8028b0a:	b015      	add	sp, #84	@ 0x54
 8028b0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028b10:	4608      	mov	r0, r1
 8028b12:	4798      	blx	r3
 8028b14:	e7d7      	b.n	8028ac6 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 8028b16:	4b08      	ldr	r3, [pc, #32]	@ (8028b38 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028b18:	6818      	ldr	r0, [r3, #0]
 8028b1a:	6802      	ldr	r2, [r0, #0]
 8028b1c:	e737      	b.n	802898e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8028b1e:	4b0b      	ldr	r3, [pc, #44]	@ (8028b4c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8028b20:	4a0b      	ldr	r2, [pc, #44]	@ (8028b50 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8028b22:	217c      	movs	r1, #124	@ 0x7c
 8028b24:	480b      	ldr	r0, [pc, #44]	@ (8028b54 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8028b26:	f009 fcaf 	bl	8032488 <__assert_func>
 8028b2a:	4b0b      	ldr	r3, [pc, #44]	@ (8028b58 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 8028b2c:	4a0b      	ldr	r2, [pc, #44]	@ (8028b5c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8028b2e:	f640 51d3 	movw	r1, #3539	@ 0xdd3
 8028b32:	480b      	ldr	r0, [pc, #44]	@ (8028b60 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8028b34:	f009 fca8 	bl	8032488 <__assert_func>
 8028b38:	20082ec4 	.word	0x20082ec4
 8028b3c:	0800121d 	.word	0x0800121d
 8028b40:	0800ba75 	.word	0x0800ba75
 8028b44:	20082ebe 	.word	0x20082ebe
 8028b48:	20083364 	.word	0x20083364
 8028b4c:	080361a4 	.word	0x080361a4
 8028b50:	08036a10 	.word	0x08036a10
 8028b54:	080361cc 	.word	0x080361cc
 8028b58:	0803626c 	.word	0x0803626c
 8028b5c:	08036fb8 	.word	0x08036fb8
 8028b60:	08036248 	.word	0x08036248

08028b64 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8028b64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028b68:	4617      	mov	r7, r2
 8028b6a:	7812      	ldrb	r2, [r2, #0]
 8028b6c:	b08f      	sub	sp, #60	@ 0x3c
 8028b6e:	2a01      	cmp	r2, #1
 8028b70:	461e      	mov	r6, r3
 8028b72:	f89d 8064 	ldrb.w	r8, [sp, #100]	@ 0x64
 8028b76:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8028b78:	f040 8203 	bne.w	8028f82 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x41e>
 8028b7c:	6830      	ldr	r0, [r6, #0]
 8028b7e:	460d      	mov	r5, r1
 8028b80:	6871      	ldr	r1, [r6, #4]
 8028b82:	aa0a      	add	r2, sp, #40	@ 0x28
 8028b84:	c203      	stmia	r2!, {r0, r1}
 8028b86:	6818      	ldr	r0, [r3, #0]
 8028b88:	6859      	ldr	r1, [r3, #4]
 8028b8a:	aa0c      	add	r2, sp, #48	@ 0x30
 8028b8c:	c203      	stmia	r2!, {r0, r1}
 8028b8e:	a80a      	add	r0, sp, #40	@ 0x28
 8028b90:	f7e4 f89e 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028b94:	4631      	mov	r1, r6
 8028b96:	a80c      	add	r0, sp, #48	@ 0x30
 8028b98:	f7e4 f8c2 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028b9c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028ba0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8028ba4:	f003 0201 	and.w	r2, r3, #1
 8028ba8:	4614      	mov	r4, r2
 8028baa:	9206      	str	r2, [sp, #24]
 8028bac:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8028bb0:	4423      	add	r3, r4
 8028bb2:	fb02 1303 	mla	r3, r2, r3, r1
 8028bb6:	f8bd 002a 	ldrh.w	r0, [sp, #42]	@ 0x2a
 8028bba:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8028bbe:	4402      	add	r2, r0
 8028bc0:	489d      	ldr	r0, [pc, #628]	@ (8028e38 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>)
 8028bc2:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028bc6:	440e      	add	r6, r1
 8028bc8:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8028bcc:	6800      	ldr	r0, [r0, #0]
 8028bce:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8028bd2:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 8028bd6:	9302      	str	r3, [sp, #8]
 8028bd8:	f001 0301 	and.w	r3, r1, #1
 8028bdc:	6802      	ldr	r2, [r0, #0]
 8028bde:	9305      	str	r3, [sp, #20]
 8028be0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8028be4:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8028be6:	9303      	str	r3, [sp, #12]
 8028be8:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8028bec:	4790      	blx	r2
 8028bee:	4a93      	ldr	r2, [pc, #588]	@ (8028e3c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8028bf0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8028bf4:	8812      	ldrh	r2, [r2, #0]
 8028bf6:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8028bfa:	fb05 f502 	mul.w	r5, r5, r2
 8028bfe:	fb02 1303 	mla	r3, r2, r3, r1
 8028c02:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8028c06:	461a      	mov	r2, r3
 8028c08:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8028c0c:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8028c10:	f107 0704 	add.w	r7, r7, #4
 8028c14:	9304      	str	r3, [sp, #16]
 8028c16:	f000 8113 	beq.w	8028e40 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2dc>
 8028c1a:	4614      	mov	r4, r2
 8028c1c:	9a04      	ldr	r2, [sp, #16]
 8028c1e:	4294      	cmp	r4, r2
 8028c20:	f080 80c2 	bcs.w	8028da8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028c24:	ea4f 6308 	mov.w	r3, r8, lsl #24
 8028c28:	9300      	str	r3, [sp, #0]
 8028c2a:	9b03      	ldr	r3, [sp, #12]
 8028c2c:	3b01      	subs	r3, #1
 8028c2e:	9309      	str	r3, [sp, #36]	@ 0x24
 8028c30:	9b05      	ldr	r3, [sp, #20]
 8028c32:	2b00      	cmp	r3, #0
 8028c34:	f040 80ef 	bne.w	8028e16 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 8028c38:	9b02      	ldr	r3, [sp, #8]
 8028c3a:	9301      	str	r3, [sp, #4]
 8028c3c:	9b03      	ldr	r3, [sp, #12]
 8028c3e:	2b01      	cmp	r3, #1
 8028c40:	f340 809c 	ble.w	8028d7c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x218>
 8028c44:	3b02      	subs	r3, #2
 8028c46:	9308      	str	r3, [sp, #32]
 8028c48:	f104 0e10 	add.w	lr, r4, #16
 8028c4c:	085b      	lsrs	r3, r3, #1
 8028c4e:	9307      	str	r3, [sp, #28]
 8028c50:	eb0e 0ec3 	add.w	lr, lr, r3, lsl #3
 8028c54:	9b01      	ldr	r3, [sp, #4]
 8028c56:	f104 0608 	add.w	r6, r4, #8
 8028c5a:	f103 3cff 	add.w	ip, r3, #4294967295
 8028c5e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 8028c62:	f856 1c08 	ldr.w	r1, [r6, #-8]
 8028c66:	091b      	lsrs	r3, r3, #4
 8028c68:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028c6c:	18f8      	adds	r0, r7, r3
 8028c6e:	5cfa      	ldrb	r2, [r7, r3]
 8028c70:	f890 9001 	ldrb.w	r9, [r0, #1]
 8028c74:	7883      	ldrb	r3, [r0, #2]
 8028c76:	0e08      	lsrs	r0, r1, #24
 8028c78:	f000 80ae 	beq.w	8028dd8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8028c7c:	fb08 f500 	mul.w	r5, r8, r0
 8028c80:	fb18 fb03 	smulbb	fp, r8, r3
 8028c84:	1c6b      	adds	r3, r5, #1
 8028c86:	eb03 2525 	add.w	r5, r3, r5, asr #8
 8028c8a:	fb18 f202 	smulbb	r2, r8, r2
 8028c8e:	122d      	asrs	r5, r5, #8
 8028c90:	fb18 f909 	smulbb	r9, r8, r9
 8028c94:	eba0 0a05 	sub.w	sl, r0, r5
 8028c98:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8028c9c:	fb0a b303 	mla	r3, sl, r3, fp
 8028ca0:	fa5f fb81 	uxtb.w	fp, r1
 8028ca4:	fb0a 220b 	mla	r2, sl, fp, r2
 8028ca8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8028cac:	4440      	add	r0, r8
 8028cae:	fb0a 9101 	mla	r1, sl, r1, r9
 8028cb2:	1b40      	subs	r0, r0, r5
 8028cb4:	b2c0      	uxtb	r0, r0
 8028cb6:	fbb3 f3f0 	udiv	r3, r3, r0
 8028cba:	fbb2 f2f0 	udiv	r2, r2, r0
 8028cbe:	fbb1 f1f0 	udiv	r1, r1, r0
 8028cc2:	041b      	lsls	r3, r3, #16
 8028cc4:	b2d2      	uxtb	r2, r2
 8028cc6:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8028cca:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
 8028cce:	0209      	lsls	r1, r1, #8
 8028cd0:	4303      	orrs	r3, r0
 8028cd2:	b289      	uxth	r1, r1
 8028cd4:	430b      	orrs	r3, r1
 8028cd6:	f846 3c08 	str.w	r3, [r6, #-8]
 8028cda:	f89c 2000 	ldrb.w	r2, [ip]
 8028cde:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8028ce2:	f002 020f 	and.w	r2, r2, #15
 8028ce6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028cea:	0e18      	lsrs	r0, r3, #24
 8028cec:	eb07 0102 	add.w	r1, r7, r2
 8028cf0:	d062      	beq.n	8028db8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>
 8028cf2:	fb08 f500 	mul.w	r5, r8, r0
 8028cf6:	f105 0901 	add.w	r9, r5, #1
 8028cfa:	eb09 2925 	add.w	r9, r9, r5, asr #8
 8028cfe:	ea4f 2929 	mov.w	r9, r9, asr #8
 8028d02:	eba0 0b09 	sub.w	fp, r0, r9
 8028d06:	788d      	ldrb	r5, [r1, #2]
 8028d08:	f891 a001 	ldrb.w	sl, [r1, #1]
 8028d0c:	b2d9      	uxtb	r1, r3
 8028d0e:	fb0b f101 	mul.w	r1, fp, r1
 8028d12:	fb15 f508 	smulbb	r5, r5, r8
 8028d16:	5cba      	ldrb	r2, [r7, r2]
 8028d18:	fb1a fa08 	smulbb	sl, sl, r8
 8028d1c:	fb02 1108 	mla	r1, r2, r8, r1
 8028d20:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8028d24:	fb0b 5502 	mla	r5, fp, r2, r5
 8028d28:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8028d2c:	4440      	add	r0, r8
 8028d2e:	fb0b a202 	mla	r2, fp, r2, sl
 8028d32:	eba0 0009 	sub.w	r0, r0, r9
 8028d36:	b2c0      	uxtb	r0, r0
 8028d38:	fbb1 f3f0 	udiv	r3, r1, r0
 8028d3c:	fbb5 f5f0 	udiv	r5, r5, r0
 8028d40:	fbb2 f2f0 	udiv	r2, r2, r0
 8028d44:	b2db      	uxtb	r3, r3
 8028d46:	042d      	lsls	r5, r5, #16
 8028d48:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8028d4c:	f405 057f 	and.w	r5, r5, #16711680	@ 0xff0000
 8028d50:	0212      	lsls	r2, r2, #8
 8028d52:	432b      	orrs	r3, r5
 8028d54:	b292      	uxth	r2, r2
 8028d56:	4313      	orrs	r3, r2
 8028d58:	f846 3c04 	str.w	r3, [r6, #-4]
 8028d5c:	3608      	adds	r6, #8
 8028d5e:	4576      	cmp	r6, lr
 8028d60:	f47f af7d 	bne.w	8028c5e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 8028d64:	9b07      	ldr	r3, [sp, #28]
 8028d66:	9901      	ldr	r1, [sp, #4]
 8028d68:	1c5a      	adds	r2, r3, #1
 8028d6a:	4411      	add	r1, r2
 8028d6c:	eb04 04c2 	add.w	r4, r4, r2, lsl #3
 8028d70:	9a08      	ldr	r2, [sp, #32]
 8028d72:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 8028d76:	9101      	str	r1, [sp, #4]
 8028d78:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8028d7c:	2b01      	cmp	r3, #1
 8028d7e:	d032      	beq.n	8028de6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x282>
 8028d80:	9906      	ldr	r1, [sp, #24]
 8028d82:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028d86:	4a2d      	ldr	r2, [pc, #180]	@ (8028e3c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8028d88:	440b      	add	r3, r1
 8028d8a:	8812      	ldrh	r2, [r2, #0]
 8028d8c:	9903      	ldr	r1, [sp, #12]
 8028d8e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028d92:	1a52      	subs	r2, r2, r1
 8028d94:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8028d98:	9a02      	ldr	r2, [sp, #8]
 8028d9a:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8028d9e:	9302      	str	r3, [sp, #8]
 8028da0:	9b04      	ldr	r3, [sp, #16]
 8028da2:	42a3      	cmp	r3, r4
 8028da4:	f63f af44 	bhi.w	8028c30 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xcc>
 8028da8:	4b23      	ldr	r3, [pc, #140]	@ (8028e38 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>)
 8028daa:	6818      	ldr	r0, [r3, #0]
 8028dac:	6803      	ldr	r3, [r0, #0]
 8028dae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028db0:	4798      	blx	r3
 8028db2:	b00f      	add	sp, #60	@ 0x3c
 8028db4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028db8:	5cbb      	ldrb	r3, [r7, r2]
 8028dba:	9a00      	ldr	r2, [sp, #0]
 8028dbc:	7888      	ldrb	r0, [r1, #2]
 8028dbe:	4313      	orrs	r3, r2
 8028dc0:	784a      	ldrb	r2, [r1, #1]
 8028dc2:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8028dc6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8028dca:	f846 3c04 	str.w	r3, [r6, #-4]
 8028dce:	3608      	adds	r6, #8
 8028dd0:	45b6      	cmp	lr, r6
 8028dd2:	f47f af44 	bne.w	8028c5e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 8028dd6:	e7c5      	b.n	8028d64 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x200>
 8028dd8:	9900      	ldr	r1, [sp, #0]
 8028dda:	430a      	orrs	r2, r1
 8028ddc:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8028de0:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
 8028de4:	e777      	b.n	8028cd6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x172>
 8028de6:	9b01      	ldr	r3, [sp, #4]
 8028de8:	4621      	mov	r1, r4
 8028dea:	7818      	ldrb	r0, [r3, #0]
 8028dec:	4642      	mov	r2, r8
 8028dee:	0900      	lsrs	r0, r0, #4
 8028df0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8028df4:	4438      	add	r0, r7
 8028df6:	f7fb f86d 	bl	8023ed4 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>
 8028dfa:	4b10      	ldr	r3, [pc, #64]	@ (8028e3c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8028dfc:	9903      	ldr	r1, [sp, #12]
 8028dfe:	881a      	ldrh	r2, [r3, #0]
 8028e00:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028e04:	1a52      	subs	r2, r2, r1
 8028e06:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8028e0a:	9a06      	ldr	r2, [sp, #24]
 8028e0c:	3404      	adds	r4, #4
 8028e0e:	4413      	add	r3, r2
 8028e10:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028e14:	e7c0      	b.n	8028d98 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>
 8028e16:	9d02      	ldr	r5, [sp, #8]
 8028e18:	4621      	mov	r1, r4
 8028e1a:	7828      	ldrb	r0, [r5, #0]
 8028e1c:	4642      	mov	r2, r8
 8028e1e:	f000 000f 	and.w	r0, r0, #15
 8028e22:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8028e26:	4438      	add	r0, r7
 8028e28:	f7fb f854 	bl	8023ed4 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>
 8028e2c:	1c6b      	adds	r3, r5, #1
 8028e2e:	9301      	str	r3, [sp, #4]
 8028e30:	3404      	adds	r4, #4
 8028e32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028e34:	e703      	b.n	8028c3e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8028e36:	bf00      	nop
 8028e38:	20082ec4 	.word	0x20082ec4
 8028e3c:	20082ebe 	.word	0x20082ebe
 8028e40:	4615      	mov	r5, r2
 8028e42:	9a04      	ldr	r2, [sp, #16]
 8028e44:	4295      	cmp	r5, r2
 8028e46:	d2af      	bcs.n	8028da8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028e48:	9b03      	ldr	r3, [sp, #12]
 8028e4a:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8028e4e:	469a      	mov	sl, r3
 8028e50:	f103 38ff 	add.w	r8, r3, #4294967295
 8028e54:	9b05      	ldr	r3, [sp, #20]
 8028e56:	2b00      	cmp	r3, #0
 8028e58:	d07d      	beq.n	8028f56 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f2>
 8028e5a:	4646      	mov	r6, r8
 8028e5c:	f899 3000 	ldrb.w	r3, [r9]
 8028e60:	f109 0e01 	add.w	lr, r9, #1
 8028e64:	f003 030f 	and.w	r3, r3, #15
 8028e68:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028e6c:	18fa      	adds	r2, r7, r3
 8028e6e:	5cfb      	ldrb	r3, [r7, r3]
 8028e70:	7891      	ldrb	r1, [r2, #2]
 8028e72:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8028e76:	7852      	ldrb	r2, [r2, #1]
 8028e78:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8028e7c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8028e80:	f845 3b04 	str.w	r3, [r5], #4
 8028e84:	2e01      	cmp	r6, #1
 8028e86:	dd3e      	ble.n	8028f06 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3a2>
 8028e88:	3e02      	subs	r6, #2
 8028e8a:	ea4f 0c56 	mov.w	ip, r6, lsr #1
 8028e8e:	f105 0410 	add.w	r4, r5, #16
 8028e92:	eb04 04cc 	add.w	r4, r4, ip, lsl #3
 8028e96:	f105 0108 	add.w	r1, r5, #8
 8028e9a:	f10e 30ff 	add.w	r0, lr, #4294967295
 8028e9e:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8028ea2:	3108      	adds	r1, #8
 8028ea4:	091b      	lsrs	r3, r3, #4
 8028ea6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028eaa:	5cfa      	ldrb	r2, [r7, r3]
 8028eac:	eb07 0b03 	add.w	fp, r7, r3
 8028eb0:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8028eb4:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8028eb8:	f89b b001 	ldrb.w	fp, [fp, #1]
 8028ebc:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8028ec0:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8028ec4:	f841 3c10 	str.w	r3, [r1, #-16]
 8028ec8:	7803      	ldrb	r3, [r0, #0]
 8028eca:	f003 030f 	and.w	r3, r3, #15
 8028ece:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028ed2:	5cfa      	ldrb	r2, [r7, r3]
 8028ed4:	eb07 0b03 	add.w	fp, r7, r3
 8028ed8:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8028edc:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8028ee0:	f89b b001 	ldrb.w	fp, [fp, #1]
 8028ee4:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8028ee8:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8028eec:	f841 3c0c 	str.w	r3, [r1, #-12]
 8028ef0:	428c      	cmp	r4, r1
 8028ef2:	d1d4      	bne.n	8028e9e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x33a>
 8028ef4:	f10c 0301 	add.w	r3, ip, #1
 8028ef8:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 8028efc:	449e      	add	lr, r3
 8028efe:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8028f02:	eb06 064c 	add.w	r6, r6, ip, lsl #1
 8028f06:	2e01      	cmp	r6, #1
 8028f08:	d128      	bne.n	8028f5c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f8>
 8028f0a:	f89e 3000 	ldrb.w	r3, [lr]
 8028f0e:	091b      	lsrs	r3, r3, #4
 8028f10:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028f14:	18fa      	adds	r2, r7, r3
 8028f16:	5cfb      	ldrb	r3, [r7, r3]
 8028f18:	7891      	ldrb	r1, [r2, #2]
 8028f1a:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8028f1e:	7852      	ldrb	r2, [r2, #1]
 8028f20:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8028f24:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8028f28:	602b      	str	r3, [r5, #0]
 8028f2a:	4b19      	ldr	r3, [pc, #100]	@ (8028f90 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>)
 8028f2c:	881a      	ldrh	r2, [r3, #0]
 8028f2e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028f32:	eba2 020a 	sub.w	r2, r2, sl
 8028f36:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8028f3a:	9a06      	ldr	r2, [sp, #24]
 8028f3c:	3504      	adds	r5, #4
 8028f3e:	4413      	add	r3, r2
 8028f40:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028f44:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8028f48:	9b04      	ldr	r3, [sp, #16]
 8028f4a:	42ab      	cmp	r3, r5
 8028f4c:	f67f af2c 	bls.w	8028da8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028f50:	9b05      	ldr	r3, [sp, #20]
 8028f52:	2b00      	cmp	r3, #0
 8028f54:	d181      	bne.n	8028e5a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f6>
 8028f56:	46ce      	mov	lr, r9
 8028f58:	4656      	mov	r6, sl
 8028f5a:	e793      	b.n	8028e84 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x320>
 8028f5c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028f60:	4a0b      	ldr	r2, [pc, #44]	@ (8028f90 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>)
 8028f62:	9906      	ldr	r1, [sp, #24]
 8028f64:	8812      	ldrh	r2, [r2, #0]
 8028f66:	440b      	add	r3, r1
 8028f68:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028f6c:	eba2 020a 	sub.w	r2, r2, sl
 8028f70:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8028f74:	9b04      	ldr	r3, [sp, #16]
 8028f76:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8028f7a:	42ab      	cmp	r3, r5
 8028f7c:	f63f af6a 	bhi.w	8028e54 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>
 8028f80:	e712      	b.n	8028da8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028f82:	4b04      	ldr	r3, [pc, #16]	@ (8028f94 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x430>)
 8028f84:	4a04      	ldr	r2, [pc, #16]	@ (8028f98 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x434>)
 8028f86:	f640 612c 	movw	r1, #3628	@ 0xe2c
 8028f8a:	4804      	ldr	r0, [pc, #16]	@ (8028f9c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 8028f8c:	f009 fa7c 	bl	8032488 <__assert_func>
 8028f90:	20082ebe 	.word	0x20082ebe
 8028f94:	0803630c 	.word	0x0803630c
 8028f98:	080372fc 	.word	0x080372fc
 8028f9c:	08036248 	.word	0x08036248

08028fa0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8028fa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028fa4:	7814      	ldrb	r4, [r2, #0]
 8028fa6:	b091      	sub	sp, #68	@ 0x44
 8028fa8:	2c01      	cmp	r4, #1
 8028faa:	461d      	mov	r5, r3
 8028fac:	9208      	str	r2, [sp, #32]
 8028fae:	9102      	str	r1, [sp, #8]
 8028fb0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8028fb2:	f89d a06c 	ldrb.w	sl, [sp, #108]	@ 0x6c
 8028fb6:	f040 814b 	bne.w	8029250 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b0>
 8028fba:	6828      	ldr	r0, [r5, #0]
 8028fbc:	6869      	ldr	r1, [r5, #4]
 8028fbe:	aa0c      	add	r2, sp, #48	@ 0x30
 8028fc0:	c203      	stmia	r2!, {r0, r1}
 8028fc2:	6818      	ldr	r0, [r3, #0]
 8028fc4:	6859      	ldr	r1, [r3, #4]
 8028fc6:	aa0e      	add	r2, sp, #56	@ 0x38
 8028fc8:	c203      	stmia	r2!, {r0, r1}
 8028fca:	a80c      	add	r0, sp, #48	@ 0x30
 8028fcc:	f7e3 fe80 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028fd0:	4629      	mov	r1, r5
 8028fd2:	a80e      	add	r0, sp, #56	@ 0x38
 8028fd4:	f7e3 fea4 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028fd8:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8028fdc:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8028fe0:	f340 8130 	ble.w	8029244 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 8028fe4:	4623      	mov	r3, r4
 8028fe6:	b291      	uxth	r1, r2
 8028fe8:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 8028fec:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 8028ff0:	fb92 f5f3 	sdiv	r5, r2, r3
 8028ff4:	b2ae      	uxth	r6, r5
 8028ff6:	fb03 2416 	mls	r4, r3, r6, r2
 8028ffa:	fb14 0101 	smlabb	r1, r4, r1, r0
 8028ffe:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	@ 0x36
 8029002:	b289      	uxth	r1, r1
 8029004:	441c      	add	r4, r3
 8029006:	3c01      	subs	r4, #1
 8029008:	9100      	str	r1, [sp, #0]
 802900a:	fb94 f4f3 	sdiv	r4, r4, r3
 802900e:	b136      	cbz	r6, 802901e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x7e>
 8029010:	9b08      	ldr	r3, [sp, #32]
 8029012:	9902      	ldr	r1, [sp, #8]
 8029014:	f853 3026 	ldr.w	r3, [r3, r6, lsl #2]
 8029018:	ba1b      	rev	r3, r3
 802901a:	4419      	add	r1, r3
 802901c:	9102      	str	r1, [sp, #8]
 802901e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8029022:	f8bd 3030 	ldrh.w	r3, [sp, #48]	@ 0x30
 8029026:	440a      	add	r2, r1
 8029028:	498d      	ldr	r1, [pc, #564]	@ (8029260 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 802902a:	4403      	add	r3, r0
 802902c:	6808      	ldr	r0, [r1, #0]
 802902e:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8029032:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8029036:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 802903a:	6803      	ldr	r3, [r0, #0]
 802903c:	960a      	str	r6, [sp, #40]	@ 0x28
 802903e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8029040:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8029044:	4798      	blx	r3
 8029046:	9b00      	ldr	r3, [sp, #0]
 8029048:	4986      	ldr	r1, [pc, #536]	@ (8029264 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 802904a:	2b00      	cmp	r3, #0
 802904c:	bf0c      	ite	eq
 802904e:	4633      	moveq	r3, r6
 8029050:	2300      	movne	r3, #0
 8029052:	8809      	ldrh	r1, [r1, #0]
 8029054:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 8029058:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 802905c:	fb05 f501 	mul.w	r5, r5, r1
 8029060:	fb01 6202 	mla	r2, r1, r2, r6
 8029064:	b2a4      	uxth	r4, r4
 8029066:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 802906a:	eb08 0285 	add.w	r2, r8, r5, lsl #2
 802906e:	00a4      	lsls	r4, r4, #2
 8029070:	1d21      	adds	r1, r4, #4
 8029072:	4590      	cmp	r8, r2
 8029074:	9203      	str	r2, [sp, #12]
 8029076:	9109      	str	r1, [sp, #36]	@ 0x24
 8029078:	fa1f f983 	uxth.w	r9, r3
 802907c:	d227      	bcs.n	80290ce <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x12e>
 802907e:	2300      	movs	r3, #0
 8029080:	469b      	mov	fp, r3
 8029082:	ea4f 620a 	mov.w	r2, sl, lsl #24
 8029086:	9304      	str	r3, [sp, #16]
 8029088:	9205      	str	r2, [sp, #20]
 802908a:	f1bb 0f00 	cmp.w	fp, #0
 802908e:	d10f      	bne.n	80290b0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x110>
 8029090:	9902      	ldr	r1, [sp, #8]
 8029092:	780b      	ldrb	r3, [r1, #0]
 8029094:	ea4f 1b93 	mov.w	fp, r3, lsr #6
 8029098:	f10b 32ff 	add.w	r2, fp, #4294967295
 802909c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80290a0:	2a02      	cmp	r2, #2
 80290a2:	9304      	str	r3, [sp, #16]
 80290a4:	f200 80c8 	bhi.w	8029238 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x298>
 80290a8:	3101      	adds	r1, #1
 80290aa:	9102      	str	r1, [sp, #8]
 80290ac:	fa1f fb8b 	uxth.w	fp, fp
 80290b0:	9b00      	ldr	r3, [sp, #0]
 80290b2:	b1a3      	cbz	r3, 80290de <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x13e>
 80290b4:	459b      	cmp	fp, r3
 80290b6:	f080 80b6 	bcs.w	8029226 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x286>
 80290ba:	eba3 0b0b 	sub.w	fp, r3, fp
 80290be:	fa1f f38b 	uxth.w	r3, fp
 80290c2:	f04f 0b00 	mov.w	fp, #0
 80290c6:	9300      	str	r3, [sp, #0]
 80290c8:	9b03      	ldr	r3, [sp, #12]
 80290ca:	4543      	cmp	r3, r8
 80290cc:	d8dd      	bhi.n	802908a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xea>
 80290ce:	4b64      	ldr	r3, [pc, #400]	@ (8029260 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 80290d0:	6818      	ldr	r0, [r3, #0]
 80290d2:	6803      	ldr	r3, [r0, #0]
 80290d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80290d6:	4798      	blx	r3
 80290d8:	b011      	add	sp, #68	@ 0x44
 80290da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80290de:	2303      	movs	r3, #3
 80290e0:	4619      	mov	r1, r3
 80290e2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80290e4:	9b04      	ldr	r3, [sp, #16]
 80290e6:	45cb      	cmp	fp, r9
 80290e8:	fb11 2c03 	smlabb	ip, r1, r3, r2
 80290ec:	9b08      	ldr	r3, [sp, #32]
 80290ee:	449c      	add	ip, r3
 80290f0:	d377      	bcc.n	80291e2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x242>
 80290f2:	ebab 0309 	sub.w	r3, fp, r9
 80290f6:	9a00      	ldr	r2, [sp, #0]
 80290f8:	b29b      	uxth	r3, r3
 80290fa:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80290fe:	9306      	str	r3, [sp, #24]
 8029100:	9207      	str	r2, [sp, #28]
 8029102:	464b      	mov	r3, r9
 8029104:	d077      	beq.n	80291f6 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x256>
 8029106:	b303      	cbz	r3, 802914a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 8029108:	3b01      	subs	r3, #1
 802910a:	b29b      	uxth	r3, r3
 802910c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802910e:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8029112:	9301      	str	r3, [sp, #4]
 8029114:	f1a8 0e04 	sub.w	lr, r8, #4
 8029118:	f85e 3f04 	ldr.w	r3, [lr, #4]!
 802911c:	f89c 4000 	ldrb.w	r4, [ip]
 8029120:	0e18      	lsrs	r0, r3, #24
 8029122:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8029126:	f89c 1002 	ldrb.w	r1, [ip, #2]
 802912a:	d126      	bne.n	802917a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1da>
 802912c:	9b05      	ldr	r3, [sp, #20]
 802912e:	431c      	orrs	r4, r3
 8029130:	9b01      	ldr	r3, [sp, #4]
 8029132:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8029136:	ea44 2606 	orr.w	r6, r4, r6, lsl #8
 802913a:	459e      	cmp	lr, r3
 802913c:	f8ce 6000 	str.w	r6, [lr]
 8029140:	d1ea      	bne.n	8029118 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 8029142:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8029144:	3301      	adds	r3, #1
 8029146:	eb08 0883 	add.w	r8, r8, r3, lsl #2
 802914a:	45cb      	cmp	fp, r9
 802914c:	d346      	bcc.n	80291dc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 802914e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8029150:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8029154:	4b43      	ldr	r3, [pc, #268]	@ (8029264 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 8029156:	fa1f f981 	uxth.w	r9, r1
 802915a:	eba2 0209 	sub.w	r2, r2, r9
 802915e:	881b      	ldrh	r3, [r3, #0]
 8029160:	b292      	uxth	r2, r2
 8029162:	2a00      	cmp	r2, #0
 8029164:	eba3 0301 	sub.w	r3, r3, r1
 8029168:	f8dd b018 	ldr.w	fp, [sp, #24]
 802916c:	bf18      	it	ne
 802916e:	f04f 0900 	movne.w	r9, #0
 8029172:	9200      	str	r2, [sp, #0]
 8029174:	eb08 0883 	add.w	r8, r8, r3, lsl #2
 8029178:	e7a6      	b.n	80290c8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 802917a:	fb0a f200 	mul.w	r2, sl, r0
 802917e:	fb1a f101 	smulbb	r1, sl, r1
 8029182:	1c55      	adds	r5, r2, #1
 8029184:	eb05 2522 	add.w	r5, r5, r2, asr #8
 8029188:	fb1a f404 	smulbb	r4, sl, r4
 802918c:	122d      	asrs	r5, r5, #8
 802918e:	fb1a f606 	smulbb	r6, sl, r6
 8029192:	1b47      	subs	r7, r0, r5
 8029194:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8029198:	fb07 1102 	mla	r1, r7, r2, r1
 802919c:	b2da      	uxtb	r2, r3
 802919e:	fb07 4402 	mla	r4, r7, r2, r4
 80291a2:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80291a6:	4450      	add	r0, sl
 80291a8:	fb07 6202 	mla	r2, r7, r2, r6
 80291ac:	1b45      	subs	r5, r0, r5
 80291ae:	b2ed      	uxtb	r5, r5
 80291b0:	fbb1 f3f5 	udiv	r3, r1, r5
 80291b4:	fbb4 f4f5 	udiv	r4, r4, r5
 80291b8:	fbb2 f2f5 	udiv	r2, r2, r5
 80291bc:	041b      	lsls	r3, r3, #16
 80291be:	b2e4      	uxtb	r4, r4
 80291c0:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80291c4:	ea44 6505 	orr.w	r5, r4, r5, lsl #24
 80291c8:	0212      	lsls	r2, r2, #8
 80291ca:	432b      	orrs	r3, r5
 80291cc:	b292      	uxth	r2, r2
 80291ce:	4313      	orrs	r3, r2
 80291d0:	f8ce 3000 	str.w	r3, [lr]
 80291d4:	9b01      	ldr	r3, [sp, #4]
 80291d6:	459e      	cmp	lr, r3
 80291d8:	d19e      	bne.n	8029118 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 80291da:	e7b2      	b.n	8029142 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 80291dc:	e9dd b906 	ldrd	fp, r9, [sp, #24]
 80291e0:	e772      	b.n	80290c8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 80291e2:	9a00      	ldr	r2, [sp, #0]
 80291e4:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80291e8:	9206      	str	r2, [sp, #24]
 80291ea:	eba9 020b 	sub.w	r2, r9, fp
 80291ee:	b292      	uxth	r2, r2
 80291f0:	465b      	mov	r3, fp
 80291f2:	9207      	str	r2, [sp, #28]
 80291f4:	d187      	bne.n	8029106 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x166>
 80291f6:	2b00      	cmp	r3, #0
 80291f8:	d0a7      	beq.n	802914a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 80291fa:	1e58      	subs	r0, r3, #1
 80291fc:	b280      	uxth	r0, r0
 80291fe:	3001      	adds	r0, #1
 8029200:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 8029204:	f89c 3000 	ldrb.w	r3, [ip]
 8029208:	f89c 1002 	ldrb.w	r1, [ip, #2]
 802920c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8029210:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8029214:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8029218:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 802921c:	f848 3b04 	str.w	r3, [r8], #4
 8029220:	4540      	cmp	r0, r8
 8029222:	d1ef      	bne.n	8029204 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x264>
 8029224:	e791      	b.n	802914a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 8029226:	ebab 0b03 	sub.w	fp, fp, r3
 802922a:	2300      	movs	r3, #0
 802922c:	fa1f fb8b 	uxth.w	fp, fp
 8029230:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8029234:	9300      	str	r3, [sp, #0]
 8029236:	e747      	b.n	80290c8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 8029238:	460b      	mov	r3, r1
 802923a:	3302      	adds	r3, #2
 802923c:	f891 b001 	ldrb.w	fp, [r1, #1]
 8029240:	9302      	str	r3, [sp, #8]
 8029242:	e735      	b.n	80290b0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x110>
 8029244:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8029248:	b291      	uxth	r1, r2
 802924a:	fb94 f3f1 	sdiv	r3, r4, r1
 802924e:	e6cb      	b.n	8028fe8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x48>
 8029250:	4b05      	ldr	r3, [pc, #20]	@ (8029268 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c8>)
 8029252:	4a06      	ldr	r2, [pc, #24]	@ (802926c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>)
 8029254:	f640 61a3 	movw	r1, #3747	@ 0xea3
 8029258:	4805      	ldr	r0, [pc, #20]	@ (8029270 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d0>)
 802925a:	f009 f915 	bl	8032488 <__assert_func>
 802925e:	bf00      	nop
 8029260:	20082ec4 	.word	0x20082ec4
 8029264:	20082ebe 	.word	0x20082ebe
 8029268:	0803630c 	.word	0x0803630c
 802926c:	080374a0 	.word	0x080374a0
 8029270:	08036248 	.word	0x08036248

08029274 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029274:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029278:	7814      	ldrb	r4, [r2, #0]
 802927a:	b09f      	sub	sp, #124	@ 0x7c
 802927c:	2c01      	cmp	r4, #1
 802927e:	461d      	mov	r5, r3
 8029280:	9214      	str	r2, [sp, #80]	@ 0x50
 8029282:	9117      	str	r1, [sp, #92]	@ 0x5c
 8029284:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8029286:	f89d a0a4 	ldrb.w	sl, [sp, #164]	@ 0xa4
 802928a:	f040 8232 	bne.w	80296f2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x47e>
 802928e:	6869      	ldr	r1, [r5, #4]
 8029290:	4683      	mov	fp, r0
 8029292:	6828      	ldr	r0, [r5, #0]
 8029294:	aa1a      	add	r2, sp, #104	@ 0x68
 8029296:	c203      	stmia	r2!, {r0, r1}
 8029298:	6818      	ldr	r0, [r3, #0]
 802929a:	6859      	ldr	r1, [r3, #4]
 802929c:	aa1c      	add	r2, sp, #112	@ 0x70
 802929e:	c203      	stmia	r2!, {r0, r1}
 80292a0:	a81a      	add	r0, sp, #104	@ 0x68
 80292a2:	f7e3 fd15 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80292a6:	4629      	mov	r1, r5
 80292a8:	a81c      	add	r0, sp, #112	@ 0x70
 80292aa:	f7e3 fd39 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80292ae:	f9bd 206c 	ldrsh.w	r2, [sp, #108]	@ 0x6c
 80292b2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80292b6:	f340 8214 	ble.w	80296e2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x46e>
 80292ba:	4623      	mov	r3, r4
 80292bc:	b292      	uxth	r2, r2
 80292be:	9418      	str	r4, [sp, #96]	@ 0x60
 80292c0:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 80292c4:	f9bd 106e 	ldrsh.w	r1, [sp, #110]	@ 0x6e
 80292c8:	fb90 f4f3 	sdiv	r4, r0, r3
 80292cc:	4419      	add	r1, r3
 80292ce:	3901      	subs	r1, #1
 80292d0:	fb91 f1f3 	sdiv	r1, r1, r3
 80292d4:	b2a4      	uxth	r4, r4
 80292d6:	fb03 0314 	mls	r3, r3, r4, r0
 80292da:	9416      	str	r4, [sp, #88]	@ 0x58
 80292dc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 80292e0:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 80292e4:	fb13 4202 	smlabb	r2, r3, r2, r4
 80292e8:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 80292ec:	4bae      	ldr	r3, [pc, #696]	@ (80295a8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x334>)
 80292ee:	4434      	add	r4, r6
 80292f0:	4405      	add	r5, r0
 80292f2:	6818      	ldr	r0, [r3, #0]
 80292f4:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 80292f8:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 80292fc:	f9bd 7074 	ldrsh.w	r7, [sp, #116]	@ 0x74
 8029300:	6803      	ldr	r3, [r0, #0]
 8029302:	b296      	uxth	r6, r2
 8029304:	3101      	adds	r1, #1
 8029306:	9602      	str	r6, [sp, #8]
 8029308:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802930a:	970d      	str	r7, [sp, #52]	@ 0x34
 802930c:	b28c      	uxth	r4, r1
 802930e:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 8029312:	4798      	blx	r3
 8029314:	2300      	movs	r3, #0
 8029316:	2e00      	cmp	r6, #0
 8029318:	bf0c      	ite	eq
 802931a:	463a      	moveq	r2, r7
 802931c:	2200      	movne	r2, #0
 802931e:	49a3      	ldr	r1, [pc, #652]	@ (80295ac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x338>)
 8029320:	9315      	str	r3, [sp, #84]	@ 0x54
 8029322:	8809      	ldrh	r1, [r1, #0]
 8029324:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 8029328:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 802932c:	fb05 f501 	mul.w	r5, r5, r1
 8029330:	fb01 6303 	mla	r3, r1, r3, r6
 8029334:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8029338:	9301      	str	r3, [sp, #4]
 802933a:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 802933e:	9308      	str	r3, [sp, #32]
 8029340:	b293      	uxth	r3, r2
 8029342:	9303      	str	r3, [sp, #12]
 8029344:	ea4f 630a 	mov.w	r3, sl, lsl #24
 8029348:	930a      	str	r3, [sp, #40]	@ 0x28
 802934a:	f10b 030e 	add.w	r3, fp, #14
 802934e:	9319      	str	r3, [sp, #100]	@ 0x64
 8029350:	4653      	mov	r3, sl
 8029352:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8029354:	46da      	mov	sl, fp
 8029356:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 802935a:	f104 0904 	add.w	r9, r4, #4
 802935e:	46cb      	mov	fp, r9
 8029360:	4699      	mov	r9, r3
 8029362:	9b01      	ldr	r3, [sp, #4]
 8029364:	9a08      	ldr	r2, [sp, #32]
 8029366:	4293      	cmp	r3, r2
 8029368:	f080 8116 	bcs.w	8029598 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 802936c:	2601      	movs	r6, #1
 802936e:	2700      	movs	r7, #0
 8029370:	9b02      	ldr	r3, [sp, #8]
 8029372:	f8bd 106c 	ldrh.w	r1, [sp, #108]	@ 0x6c
 8029376:	46bc      	mov	ip, r7
 8029378:	fbb3 f1f1 	udiv	r1, r3, r1
 802937c:	e9dd 3215 	ldrd	r3, r2, [sp, #84]	@ 0x54
 8029380:	fa12 f283 	uxtah	r2, r2, r3
 8029384:	0092      	lsls	r2, r2, #2
 8029386:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8029388:	3204      	adds	r2, #4
 802938a:	1898      	adds	r0, r3, r2
 802938c:	7883      	ldrb	r3, [r0, #2]
 802938e:	7845      	ldrb	r5, [r0, #1]
 8029390:	021b      	lsls	r3, r3, #8
 8029392:	78c0      	ldrb	r0, [r0, #3]
 8029394:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8029398:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 802939a:	4304      	orrs	r4, r0
 802939c:	4628      	mov	r0, r5
 802939e:	46b0      	mov	r8, r6
 80293a0:	4420      	add	r0, r4
 80293a2:	7843      	ldrb	r3, [r0, #1]
 80293a4:	5d2c      	ldrb	r4, [r5, r4]
 80293a6:	021b      	lsls	r3, r3, #8
 80293a8:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 80293ac:	431c      	orrs	r4, r3
 80293ae:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80293b0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80293b2:	5caa      	ldrb	r2, [r5, r2]
 80293b4:	1a59      	subs	r1, r3, r1
 80293b6:	b2a3      	uxth	r3, r4
 80293b8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80293ba:	1983      	adds	r3, r0, r6
 80293bc:	9306      	str	r3, [sp, #24]
 80293be:	1993      	adds	r3, r2, r6
 80293c0:	9307      	str	r3, [sp, #28]
 80293c2:	b28b      	uxth	r3, r1
 80293c4:	9710      	str	r7, [sp, #64]	@ 0x40
 80293c6:	960c      	str	r6, [sp, #48]	@ 0x30
 80293c8:	920f      	str	r2, [sp, #60]	@ 0x3c
 80293ca:	f88a 400d 	strb.w	r4, [sl, #13]
 80293ce:	9313      	str	r3, [sp, #76]	@ 0x4c
 80293d0:	9605      	str	r6, [sp, #20]
 80293d2:	9b02      	ldr	r3, [sp, #8]
 80293d4:	2b00      	cmp	r3, #0
 80293d6:	d038      	beq.n	802944a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d6>
 80293d8:	4598      	cmp	r8, r3
 80293da:	f080 813f 	bcs.w	802965c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3e8>
 80293de:	eba3 0808 	sub.w	r8, r3, r8
 80293e2:	fa1f f388 	uxth.w	r3, r8
 80293e6:	9302      	str	r3, [sp, #8]
 80293e8:	9a08      	ldr	r2, [sp, #32]
 80293ea:	9b01      	ldr	r3, [sp, #4]
 80293ec:	4293      	cmp	r3, r2
 80293ee:	f080 80d3 	bcs.w	8029598 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 80293f2:	9806      	ldr	r0, [sp, #24]
 80293f4:	9c05      	ldr	r4, [sp, #20]
 80293f6:	7842      	ldrb	r2, [r0, #1]
 80293f8:	f1c4 0107 	rsb	r1, r4, #7
 80293fc:	7803      	ldrb	r3, [r0, #0]
 80293fe:	408a      	lsls	r2, r1
 8029400:	0052      	lsls	r2, r2, #1
 8029402:	4123      	asrs	r3, r4
 8029404:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8029408:	1c61      	adds	r1, r4, #1
 802940a:	b2db      	uxtb	r3, r3
 802940c:	4313      	orrs	r3, r2
 802940e:	b2ca      	uxtb	r2, r1
 8029410:	4611      	mov	r1, r2
 8029412:	2908      	cmp	r1, #8
 8029414:	9205      	str	r2, [sp, #20]
 8029416:	b29a      	uxth	r2, r3
 8029418:	f000 812d 	beq.w	8029676 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x402>
 802941c:	3001      	adds	r0, #1
 802941e:	9006      	str	r0, [sp, #24]
 8029420:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8029422:	4291      	cmp	r1, r2
 8029424:	f0c0 80fa 	bcc.w	802961c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3a8>
 8029428:	f04f 0801 	mov.w	r8, #1
 802942c:	b2db      	uxtb	r3, r3
 802942e:	f88a 300d 	strb.w	r3, [sl, #13]
 8029432:	9907      	ldr	r1, [sp, #28]
 8029434:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8029438:	f0c0 8123 	bcc.w	8029682 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x40e>
 802943c:	9b02      	ldr	r3, [sp, #8]
 802943e:	e9cd 280b 	strd	r2, r8, [sp, #44]	@ 0x2c
 8029442:	f04f 0c00 	mov.w	ip, #0
 8029446:	2b00      	cmp	r3, #0
 8029448:	d1c6      	bne.n	80293d8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x164>
 802944a:	9b03      	ldr	r3, [sp, #12]
 802944c:	4598      	cmp	r8, r3
 802944e:	461a      	mov	r2, r3
 8029450:	f0c0 80ae 	bcc.w	80295b0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x33c>
 8029454:	eba8 0303 	sub.w	r3, r8, r3
 8029458:	b29b      	uxth	r3, r3
 802945a:	9309      	str	r3, [sp, #36]	@ 0x24
 802945c:	9b02      	ldr	r3, [sp, #8]
 802945e:	9204      	str	r2, [sp, #16]
 8029460:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8029464:	930e      	str	r3, [sp, #56]	@ 0x38
 8029466:	9b04      	ldr	r3, [sp, #16]
 8029468:	f000 80b0 	beq.w	80295cc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x358>
 802946c:	b393      	cbz	r3, 80294d4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 802946e:	4463      	add	r3, ip
 8029470:	b29b      	uxth	r3, r3
 8029472:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 8029476:	4698      	mov	r8, r3
 8029478:	9a01      	ldr	r2, [sp, #4]
 802947a:	9311      	str	r3, [sp, #68]	@ 0x44
 802947c:	f1a2 0e04 	sub.w	lr, r2, #4
 8029480:	eb0a 030c 	add.w	r3, sl, ip
 8029484:	7b5a      	ldrb	r2, [r3, #13]
 8029486:	f85e 3f04 	ldr.w	r3, [lr, #4]!
 802948a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802948e:	eb0b 0102 	add.w	r1, fp, r2
 8029492:	f10c 0c01 	add.w	ip, ip, #1
 8029496:	f81b 0002 	ldrb.w	r0, [fp, r2]
 802949a:	784d      	ldrb	r5, [r1, #1]
 802949c:	788a      	ldrb	r2, [r1, #2]
 802949e:	0e19      	lsrs	r1, r3, #24
 80294a0:	fa1f fc8c 	uxth.w	ip, ip
 80294a4:	d13f      	bne.n	8029526 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 80294a6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80294a8:	45c4      	cmp	ip, r8
 80294aa:	ea40 0003 	orr.w	r0, r0, r3
 80294ae:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80294b2:	ea40 2505 	orr.w	r5, r0, r5, lsl #8
 80294b6:	f8ce 5000 	str.w	r5, [lr]
 80294ba:	d1e1      	bne.n	8029480 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 80294bc:	9b04      	ldr	r3, [sp, #16]
 80294be:	9a01      	ldr	r2, [sp, #4]
 80294c0:	3b01      	subs	r3, #1
 80294c2:	b29b      	uxth	r3, r3
 80294c4:	3301      	adds	r3, #1
 80294c6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80294ca:	f8dd 8048 	ldr.w	r8, [sp, #72]	@ 0x48
 80294ce:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 80294d2:	9301      	str	r3, [sp, #4]
 80294d4:	9b03      	ldr	r3, [sp, #12]
 80294d6:	4598      	cmp	r8, r3
 80294d8:	d356      	bcc.n	8029588 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x314>
 80294da:	4b34      	ldr	r3, [pc, #208]	@ (80295ac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x338>)
 80294dc:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80294de:	881b      	ldrh	r3, [r3, #0]
 80294e0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80294e2:	1a5b      	subs	r3, r3, r1
 80294e4:	9901      	ldr	r1, [sp, #4]
 80294e6:	3201      	adds	r2, #1
 80294e8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80294ec:	9301      	str	r3, [sp, #4]
 80294ee:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80294f0:	9210      	str	r2, [sp, #64]	@ 0x40
 80294f2:	4293      	cmp	r3, r2
 80294f4:	f000 80e4 	beq.w	80296c0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x44c>
 80294f8:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 80294fc:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8029500:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8029504:	1a9b      	subs	r3, r3, r2
 8029506:	b29b      	uxth	r3, r3
 8029508:	2b00      	cmp	r3, #0
 802950a:	bf14      	ite	ne
 802950c:	2200      	movne	r2, #0
 802950e:	2300      	moveq	r3, #0
 8029510:	9203      	str	r2, [sp, #12]
 8029512:	9302      	str	r3, [sp, #8]
 8029514:	9b01      	ldr	r3, [sp, #4]
 8029516:	9a08      	ldr	r2, [sp, #32]
 8029518:	4293      	cmp	r3, r2
 802951a:	d23d      	bcs.n	8029598 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 802951c:	f1b8 0f00 	cmp.w	r8, #0
 8029520:	f47f af57 	bne.w	80293d2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 8029524:	e765      	b.n	80293f2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x17e>
 8029526:	fb09 f601 	mul.w	r6, r9, r1
 802952a:	fb19 f702 	smulbb	r7, r9, r2
 802952e:	1c74      	adds	r4, r6, #1
 8029530:	eb04 2426 	add.w	r4, r4, r6, asr #8
 8029534:	fb19 f000 	smulbb	r0, r9, r0
 8029538:	1224      	asrs	r4, r4, #8
 802953a:	fb19 f505 	smulbb	r5, r9, r5
 802953e:	1b0e      	subs	r6, r1, r4
 8029540:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8029544:	fb06 7202 	mla	r2, r6, r2, r7
 8029548:	b2df      	uxtb	r7, r3
 802954a:	fb06 0007 	mla	r0, r6, r7, r0
 802954e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8029552:	fb06 5503 	mla	r5, r6, r3, r5
 8029556:	4449      	add	r1, r9
 8029558:	1b09      	subs	r1, r1, r4
 802955a:	b2c9      	uxtb	r1, r1
 802955c:	fbb2 f2f1 	udiv	r2, r2, r1
 8029560:	fbb0 f0f1 	udiv	r0, r0, r1
 8029564:	fbb5 f5f1 	udiv	r5, r5, r1
 8029568:	0413      	lsls	r3, r2, #16
 802956a:	b2c0      	uxtb	r0, r0
 802956c:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8029570:	ea40 6101 	orr.w	r1, r0, r1, lsl #24
 8029574:	022d      	lsls	r5, r5, #8
 8029576:	430b      	orrs	r3, r1
 8029578:	b2ad      	uxth	r5, r5
 802957a:	432b      	orrs	r3, r5
 802957c:	45c4      	cmp	ip, r8
 802957e:	f8ce 3000 	str.w	r3, [lr]
 8029582:	f47f af7d 	bne.w	8029480 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8029586:	e799      	b.n	80294bc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x248>
 8029588:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802958a:	9a08      	ldr	r2, [sp, #32]
 802958c:	9303      	str	r3, [sp, #12]
 802958e:	9b01      	ldr	r3, [sp, #4]
 8029590:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8029594:	4293      	cmp	r3, r2
 8029596:	d3c1      	bcc.n	802951c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a8>
 8029598:	4b03      	ldr	r3, [pc, #12]	@ (80295a8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x334>)
 802959a:	6818      	ldr	r0, [r3, #0]
 802959c:	6803      	ldr	r3, [r0, #0]
 802959e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80295a0:	4798      	blx	r3
 80295a2:	b01f      	add	sp, #124	@ 0x7c
 80295a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80295a8:	20082ec4 	.word	0x20082ec4
 80295ac:	20082ebe 	.word	0x20082ebe
 80295b0:	9b02      	ldr	r3, [sp, #8]
 80295b2:	f8cd 8010 	str.w	r8, [sp, #16]
 80295b6:	9309      	str	r3, [sp, #36]	@ 0x24
 80295b8:	9b03      	ldr	r3, [sp, #12]
 80295ba:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80295be:	eba3 0308 	sub.w	r3, r3, r8
 80295c2:	b29b      	uxth	r3, r3
 80295c4:	930e      	str	r3, [sp, #56]	@ 0x38
 80295c6:	9b04      	ldr	r3, [sp, #16]
 80295c8:	f47f af50 	bne.w	802946c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 80295cc:	2b00      	cmp	r3, #0
 80295ce:	d081      	beq.n	80294d4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 80295d0:	eb0c 0003 	add.w	r0, ip, r3
 80295d4:	9901      	ldr	r1, [sp, #4]
 80295d6:	b280      	uxth	r0, r0
 80295d8:	eb0a 030c 	add.w	r3, sl, ip
 80295dc:	7b5b      	ldrb	r3, [r3, #13]
 80295de:	f10c 0c01 	add.w	ip, ip, #1
 80295e2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80295e6:	eb0b 0203 	add.w	r2, fp, r3
 80295ea:	f81b 3003 	ldrb.w	r3, [fp, r3]
 80295ee:	7894      	ldrb	r4, [r2, #2]
 80295f0:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80295f4:	7852      	ldrb	r2, [r2, #1]
 80295f6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80295fa:	fa1f fc8c 	uxth.w	ip, ip
 80295fe:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8029602:	4584      	cmp	ip, r0
 8029604:	f841 3b04 	str.w	r3, [r1], #4
 8029608:	d1e6      	bne.n	80295d8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x364>
 802960a:	9b04      	ldr	r3, [sp, #16]
 802960c:	9a01      	ldr	r2, [sp, #4]
 802960e:	3b01      	subs	r3, #1
 8029610:	b29b      	uxth	r3, r3
 8029612:	3301      	adds	r3, #1
 8029614:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8029618:	9301      	str	r3, [sp, #4]
 802961a:	e75b      	b.n	80294d4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 802961c:	9b07      	ldr	r3, [sp, #28]
 802961e:	4293      	cmp	r3, r2
 8029620:	d832      	bhi.n	8029688 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x414>
 8029622:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8029624:	f89a 100d 	ldrb.w	r1, [sl, #13]
 8029628:	eb0a 0300 	add.w	r3, sl, r0
 802962c:	7359      	strb	r1, [r3, #13]
 802962e:	f89a 300d 	ldrb.w	r3, [sl, #13]
 8029632:	1c41      	adds	r1, r0, #1
 8029634:	fa1f f881 	uxth.w	r8, r1
 8029638:	9c07      	ldr	r4, [sp, #28]
 802963a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802963c:	eb0a 0084 	add.w	r0, sl, r4, lsl #2
 8029640:	3401      	adds	r4, #1
 8029642:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8029646:	b2a3      	uxth	r3, r4
 8029648:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 802964c:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8029650:	9307      	str	r3, [sp, #28]
 8029652:	e9cd 280b 	strd	r2, r8, [sp, #44]	@ 0x2c
 8029656:	f04f 0c00 	mov.w	ip, #0
 802965a:	e6ba      	b.n	80293d2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 802965c:	eba8 0803 	sub.w	r8, r8, r3
 8029660:	449c      	add	ip, r3
 8029662:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8029666:	fa1f f888 	uxth.w	r8, r8
 802966a:	9303      	str	r3, [sp, #12]
 802966c:	2300      	movs	r3, #0
 802966e:	fa1f fc8c 	uxth.w	ip, ip
 8029672:	9302      	str	r3, [sp, #8]
 8029674:	e74e      	b.n	8029514 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 8029676:	2100      	movs	r1, #0
 8029678:	9105      	str	r1, [sp, #20]
 802967a:	9906      	ldr	r1, [sp, #24]
 802967c:	3102      	adds	r1, #2
 802967e:	9106      	str	r1, [sp, #24]
 8029680:	e6ce      	b.n	8029420 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 8029682:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8029684:	3101      	adds	r1, #1
 8029686:	e7d7      	b.n	8029638 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 8029688:	eb0a 0382 	add.w	r3, sl, r2, lsl #2
 802968c:	f893 804f 	ldrb.w	r8, [r3, #79]	@ 0x4f
 8029690:	4613      	mov	r3, r2
 8029692:	f1b8 0f01 	cmp.w	r8, #1
 8029696:	d90d      	bls.n	80296b4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x440>
 8029698:	f108 010d 	add.w	r1, r8, #13
 802969c:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 802969e:	4451      	add	r1, sl
 80296a0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80296a4:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 80296a8:	f801 0d01 	strb.w	r0, [r1, #-1]!
 80296ac:	428c      	cmp	r4, r1
 80296ae:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80296b2:	d1f5      	bne.n	80296a0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>
 80296b4:	b2db      	uxtb	r3, r3
 80296b6:	f88a 300d 	strb.w	r3, [sl, #13]
 80296ba:	fa1f f888 	uxth.w	r8, r8
 80296be:	e6b8      	b.n	8029432 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 80296c0:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 80296c4:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 80296c8:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80296ca:	1a9b      	subs	r3, r3, r2
 80296cc:	b29b      	uxth	r3, r3
 80296ce:	2b00      	cmp	r3, #0
 80296d0:	9302      	str	r3, [sp, #8]
 80296d2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80296d4:	bf18      	it	ne
 80296d6:	2300      	movne	r3, #0
 80296d8:	3101      	adds	r1, #1
 80296da:	b29b      	uxth	r3, r3
 80296dc:	9115      	str	r1, [sp, #84]	@ 0x54
 80296de:	9303      	str	r3, [sp, #12]
 80296e0:	e63f      	b.n	8029362 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xee>
 80296e2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80296e6:	b292      	uxth	r2, r2
 80296e8:	fb93 f3f2 	sdiv	r3, r3, r2
 80296ec:	b299      	uxth	r1, r3
 80296ee:	9118      	str	r1, [sp, #96]	@ 0x60
 80296f0:	e5e6      	b.n	80292c0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x4c>
 80296f2:	4b03      	ldr	r3, [pc, #12]	@ (8029700 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x48c>)
 80296f4:	4a03      	ldr	r2, [pc, #12]	@ (8029704 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x490>)
 80296f6:	f640 7142 	movw	r1, #3906	@ 0xf42
 80296fa:	4803      	ldr	r0, [pc, #12]	@ (8029708 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x494>)
 80296fc:	f008 fec4 	bl	8032488 <__assert_func>
 8029700:	0803630c 	.word	0x0803630c
 8029704:	080377fc 	.word	0x080377fc
 8029708:	08036248 	.word	0x08036248

0802970c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 802970c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029710:	4617      	mov	r7, r2
 8029712:	8812      	ldrh	r2, [r2, #0]
 8029714:	b095      	sub	sp, #84	@ 0x54
 8029716:	461c      	mov	r4, r3
 8029718:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 802971c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802971e:	2a00      	cmp	r2, #0
 8029720:	f040 8112 	bne.w	8029948 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 8029724:	4688      	mov	r8, r1
 8029726:	6820      	ldr	r0, [r4, #0]
 8029728:	6861      	ldr	r1, [r4, #4]
 802972a:	aa10      	add	r2, sp, #64	@ 0x40
 802972c:	c203      	stmia	r2!, {r0, r1}
 802972e:	6818      	ldr	r0, [r3, #0]
 8029730:	6859      	ldr	r1, [r3, #4]
 8029732:	aa12      	add	r2, sp, #72	@ 0x48
 8029734:	c203      	stmia	r2!, {r0, r1}
 8029736:	a810      	add	r0, sp, #64	@ 0x40
 8029738:	f7e3 faca 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802973c:	4621      	mov	r1, r4
 802973e:	a812      	add	r0, sp, #72	@ 0x48
 8029740:	f7e3 faee 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029744:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 8029748:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 802974c:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8029750:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8029754:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 8029758:	487f      	ldr	r0, [pc, #508]	@ (8029958 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 802975a:	fb11 4105 	smlabb	r1, r1, r5, r4
 802975e:	4422      	add	r2, r4
 8029760:	442b      	add	r3, r5
 8029762:	6800      	ldr	r0, [r0, #0]
 8029764:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8029768:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 802976c:	6802      	ldr	r2, [r0, #0]
 802976e:	4488      	add	r8, r1
 8029770:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 8029774:	4c79      	ldr	r4, [pc, #484]	@ (802995c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8029776:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 802977a:	910c      	str	r1, [sp, #48]	@ 0x30
 802977c:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 8029780:	42a3      	cmp	r3, r4
 8029782:	910e      	str	r1, [sp, #56]	@ 0x38
 8029784:	f040 80ab 	bne.w	80298de <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8029788:	6841      	ldr	r1, [r0, #4]
 802978a:	4c75      	ldr	r4, [pc, #468]	@ (8029960 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 802978c:	680b      	ldr	r3, [r1, #0]
 802978e:	699b      	ldr	r3, [r3, #24]
 8029790:	42a3      	cmp	r3, r4
 8029792:	f040 80cb 	bne.w	802992c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x220>
 8029796:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8029798:	4798      	blx	r3
 802979a:	4b72      	ldr	r3, [pc, #456]	@ (8029964 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 802979c:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 80297a0:	881b      	ldrh	r3, [r3, #0]
 80297a2:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 80297a6:	fb01 2303 	mla	r3, r1, r3, r2
 80297aa:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80297ae:	930b      	str	r3, [sp, #44]	@ 0x2c
 80297b0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80297b2:	2b00      	cmp	r3, #0
 80297b4:	f340 808b 	ble.w	80298ce <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 80297b8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80297ba:	2b00      	cmp	r3, #0
 80297bc:	f340 8087 	ble.w	80298ce <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 80297c0:	2200      	movs	r2, #0
 80297c2:	f04f 0c04 	mov.w	ip, #4
 80297c6:	009b      	lsls	r3, r3, #2
 80297c8:	920d      	str	r2, [sp, #52]	@ 0x34
 80297ca:	930f      	str	r3, [sp, #60]	@ 0x3c
 80297cc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80297ce:	4645      	mov	r5, r8
 80297d0:	1d1c      	adds	r4, r3, #4
 80297d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80297d4:	eb08 0e03 	add.w	lr, r8, r3
 80297d8:	e048      	b.n	802986c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 80297da:	fb09 f303 	mul.w	r3, r9, r3
 80297de:	1c5a      	adds	r2, r3, #1
 80297e0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80297e4:	121b      	asrs	r3, r3, #8
 80297e6:	b2d8      	uxtb	r0, r3
 80297e8:	43c1      	mvns	r1, r0
 80297ea:	b29b      	uxth	r3, r3
 80297ec:	fb1a f203 	smulbb	r2, sl, r3
 80297f0:	f814 ac04 	ldrb.w	sl, [r4, #-4]
 80297f4:	b2c9      	uxtb	r1, r1
 80297f6:	fb0a 2a01 	mla	sl, sl, r1, r2
 80297fa:	fa1f fa8a 	uxth.w	sl, sl
 80297fe:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 8029802:	f10a 0b01 	add.w	fp, sl, #1
 8029806:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 802980a:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 802980e:	fb12 fb01 	smulbb	fp, r2, r1
 8029812:	f804 ac04 	strb.w	sl, [r4, #-4]
 8029816:	7872      	ldrb	r2, [r6, #1]
 8029818:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 802981c:	fb02 b203 	mla	r2, r2, r3, fp
 8029820:	b292      	uxth	r2, r2
 8029822:	f102 0b01 	add.w	fp, r2, #1
 8029826:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802982a:	fb1a fa01 	smulbb	sl, sl, r1
 802982e:	1212      	asrs	r2, r2, #8
 8029830:	f804 2c03 	strb.w	r2, [r4, #-3]
 8029834:	78b1      	ldrb	r1, [r6, #2]
 8029836:	f814 2c01 	ldrb.w	r2, [r4, #-1]
 802983a:	fb01 a103 	mla	r1, r1, r3, sl
 802983e:	fb12 f303 	smulbb	r3, r2, r3
 8029842:	b289      	uxth	r1, r1
 8029844:	b29b      	uxth	r3, r3
 8029846:	f101 0a01 	add.w	sl, r1, #1
 802984a:	1c5e      	adds	r6, r3, #1
 802984c:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 8029850:	4402      	add	r2, r0
 8029852:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8029856:	1209      	asrs	r1, r1, #8
 8029858:	eba2 2313 	sub.w	r3, r2, r3, lsr #8
 802985c:	f804 1c02 	strb.w	r1, [r4, #-2]
 8029860:	f804 3c01 	strb.w	r3, [r4, #-1]
 8029864:	45ae      	cmp	lr, r5
 8029866:	f104 0404 	add.w	r4, r4, #4
 802986a:	d01c      	beq.n	80298a6 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x19a>
 802986c:	f815 2b01 	ldrb.w	r2, [r5], #1
 8029870:	fb1c c202 	smlabb	r2, ip, r2, ip
 8029874:	18be      	adds	r6, r7, r2
 8029876:	78f3      	ldrb	r3, [r6, #3]
 8029878:	2b00      	cmp	r3, #0
 802987a:	d0f3      	beq.n	8029864 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 802987c:	2bff      	cmp	r3, #255	@ 0xff
 802987e:	f817 a002 	ldrb.w	sl, [r7, r2]
 8029882:	d1aa      	bne.n	80297da <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8029884:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8029888:	d1a7      	bne.n	80297da <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xce>
 802988a:	f804 ac04 	strb.w	sl, [r4, #-4]
 802988e:	7873      	ldrb	r3, [r6, #1]
 8029890:	45ae      	cmp	lr, r5
 8029892:	f804 3c03 	strb.w	r3, [r4, #-3]
 8029896:	78b3      	ldrb	r3, [r6, #2]
 8029898:	f104 0404 	add.w	r4, r4, #4
 802989c:	f804 9c05 	strb.w	r9, [r4, #-5]
 80298a0:	f804 3c06 	strb.w	r3, [r4, #-6]
 80298a4:	d1e2      	bne.n	802986c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 80298a6:	4b2f      	ldr	r3, [pc, #188]	@ (8029964 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 80298a8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80298aa:	881b      	ldrh	r3, [r3, #0]
 80298ac:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80298ae:	1a5b      	subs	r3, r3, r1
 80298b0:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80298b4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80298b6:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80298b8:	4418      	add	r0, r3
 80298ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80298bc:	3101      	adds	r1, #1
 80298be:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 80298c2:	428b      	cmp	r3, r1
 80298c4:	910d      	str	r1, [sp, #52]	@ 0x34
 80298c6:	900b      	str	r0, [sp, #44]	@ 0x2c
 80298c8:	4490      	add	r8, r2
 80298ca:	f47f af7f 	bne.w	80297cc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xc0>
 80298ce:	4b22      	ldr	r3, [pc, #136]	@ (8029958 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 80298d0:	6818      	ldr	r0, [r3, #0]
 80298d2:	6803      	ldr	r3, [r0, #0]
 80298d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80298d6:	4798      	blx	r3
 80298d8:	b015      	add	sp, #84	@ 0x54
 80298da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80298de:	4798      	blx	r3
 80298e0:	4603      	mov	r3, r0
 80298e2:	2b01      	cmp	r3, #1
 80298e4:	d126      	bne.n	8029934 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x228>
 80298e6:	4a20      	ldr	r2, [pc, #128]	@ (8029968 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 80298e8:	6810      	ldr	r0, [r2, #0]
 80298ea:	b338      	cbz	r0, 802993c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x230>
 80298ec:	f04f 0c02 	mov.w	ip, #2
 80298f0:	260b      	movs	r6, #11
 80298f2:	4a1c      	ldr	r2, [pc, #112]	@ (8029964 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 80298f4:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 80298f8:	8814      	ldrh	r4, [r2, #0]
 80298fa:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 80298fe:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8029902:	9406      	str	r4, [sp, #24]
 8029904:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8029908:	e9cd 2101 	strd	r2, r1, [sp, #4]
 802990c:	9305      	str	r3, [sp, #20]
 802990e:	f8cd 9010 	str.w	r9, [sp, #16]
 8029912:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8029916:	463a      	mov	r2, r7
 8029918:	4641      	mov	r1, r8
 802991a:	e9cd 6c07 	strd	r6, ip, [sp, #28]
 802991e:	9503      	str	r5, [sp, #12]
 8029920:	9400      	str	r4, [sp, #0]
 8029922:	f7f7 f949 	bl	8020bb8 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8029926:	b015      	add	sp, #84	@ 0x54
 8029928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802992c:	4608      	mov	r0, r1
 802992e:	4798      	blx	r3
 8029930:	4603      	mov	r3, r0
 8029932:	e7d6      	b.n	80298e2 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d6>
 8029934:	4b08      	ldr	r3, [pc, #32]	@ (8029958 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8029936:	6818      	ldr	r0, [r3, #0]
 8029938:	6802      	ldr	r2, [r0, #0]
 802993a:	e72c      	b.n	8029796 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 802993c:	4b0b      	ldr	r3, [pc, #44]	@ (802996c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>)
 802993e:	4a0c      	ldr	r2, [pc, #48]	@ (8029970 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 8029940:	217c      	movs	r1, #124	@ 0x7c
 8029942:	480c      	ldr	r0, [pc, #48]	@ (8029974 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x268>)
 8029944:	f008 fda0 	bl	8032488 <__assert_func>
 8029948:	4b0b      	ldr	r3, [pc, #44]	@ (8029978 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x26c>)
 802994a:	4a0c      	ldr	r2, [pc, #48]	@ (802997c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x270>)
 802994c:	f241 012a 	movw	r1, #4138	@ 0x102a
 8029950:	480b      	ldr	r0, [pc, #44]	@ (8029980 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>)
 8029952:	f008 fd99 	bl	8032488 <__assert_func>
 8029956:	bf00      	nop
 8029958:	20082ec4 	.word	0x20082ec4
 802995c:	0800121d 	.word	0x0800121d
 8029960:	0800ba75 	.word	0x0800ba75
 8029964:	20082ebe 	.word	0x20082ebe
 8029968:	20083364 	.word	0x20083364
 802996c:	080361a4 	.word	0x080361a4
 8029970:	08036a10 	.word	0x08036a10
 8029974:	080361cc 	.word	0x080361cc
 8029978:	080362bc 	.word	0x080362bc
 802997c:	08037158 	.word	0x08037158
 8029980:	08036248 	.word	0x08036248

08029984 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>:
 8029984:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029988:	f89d 0018 	ldrb.w	r0, [sp, #24]
 802998c:	fb03 f300 	mul.w	r3, r3, r0
 8029990:	1c58      	adds	r0, r3, #1
 8029992:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8029996:	121b      	asrs	r3, r3, #8
 8029998:	2bff      	cmp	r3, #255	@ 0xff
 802999a:	d039      	beq.n	8029a10 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 802999c:	6810      	ldr	r0, [r2, #0]
 802999e:	0e07      	lsrs	r7, r0, #24
 80299a0:	d036      	beq.n	8029a10 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 80299a2:	b2dc      	uxtb	r4, r3
 80299a4:	2b00      	cmp	r3, #0
 80299a6:	d03d      	beq.n	8029a24 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0xa0>
 80299a8:	fb04 f507 	mul.w	r5, r4, r7
 80299ac:	1c6e      	adds	r6, r5, #1
 80299ae:	eb06 2625 	add.w	r6, r6, r5, asr #8
 80299b2:	1236      	asrs	r6, r6, #8
 80299b4:	f891 8002 	ldrb.w	r8, [r1, #2]
 80299b8:	eba7 0e06 	sub.w	lr, r7, r6
 80299bc:	b2c5      	uxtb	r5, r0
 80299be:	f891 c001 	ldrb.w	ip, [r1, #1]
 80299c2:	fb0e f505 	mul.w	r5, lr, r5
 80299c6:	fb03 f808 	mul.w	r8, r3, r8
 80299ca:	7809      	ldrb	r1, [r1, #0]
 80299cc:	fb03 fc0c 	mul.w	ip, r3, ip
 80299d0:	fb03 5501 	mla	r5, r3, r1, r5
 80299d4:	f3c0 4107 	ubfx	r1, r0, #16, #8
 80299d8:	f3c0 2307 	ubfx	r3, r0, #8, #8
 80299dc:	fb0e 8101 	mla	r1, lr, r1, r8
 80299e0:	19e0      	adds	r0, r4, r7
 80299e2:	fb0e c303 	mla	r3, lr, r3, ip
 80299e6:	1b80      	subs	r0, r0, r6
 80299e8:	b2c0      	uxtb	r0, r0
 80299ea:	fbb1 f1f0 	udiv	r1, r1, r0
 80299ee:	fbb5 f4f0 	udiv	r4, r5, r0
 80299f2:	fbb3 f3f0 	udiv	r3, r3, r0
 80299f6:	0409      	lsls	r1, r1, #16
 80299f8:	b2e4      	uxtb	r4, r4
 80299fa:	f401 017f 	and.w	r1, r1, #16711680	@ 0xff0000
 80299fe:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 8029a02:	021b      	lsls	r3, r3, #8
 8029a04:	4301      	orrs	r1, r0
 8029a06:	b29b      	uxth	r3, r3
 8029a08:	430b      	orrs	r3, r1
 8029a0a:	6013      	str	r3, [r2, #0]
 8029a0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029a10:	7848      	ldrb	r0, [r1, #1]
 8029a12:	788d      	ldrb	r5, [r1, #2]
 8029a14:	780c      	ldrb	r4, [r1, #0]
 8029a16:	0200      	lsls	r0, r0, #8
 8029a18:	ea40 4105 	orr.w	r1, r0, r5, lsl #16
 8029a1c:	4321      	orrs	r1, r4
 8029a1e:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8029a22:	6013      	str	r3, [r2, #0]
 8029a24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08029a28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029a2c:	4692      	mov	sl, r2
 8029a2e:	7812      	ldrb	r2, [r2, #0]
 8029a30:	b095      	sub	sp, #84	@ 0x54
 8029a32:	460d      	mov	r5, r1
 8029a34:	461e      	mov	r6, r3
 8029a36:	900d      	str	r0, [sp, #52]	@ 0x34
 8029a38:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8029a3a:	f89d 107c 	ldrb.w	r1, [sp, #124]	@ 0x7c
 8029a3e:	2a00      	cmp	r2, #0
 8029a40:	f040 816b 	bne.w	8029d1a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f2>
 8029a44:	6830      	ldr	r0, [r6, #0]
 8029a46:	460f      	mov	r7, r1
 8029a48:	6871      	ldr	r1, [r6, #4]
 8029a4a:	aa10      	add	r2, sp, #64	@ 0x40
 8029a4c:	c203      	stmia	r2!, {r0, r1}
 8029a4e:	6818      	ldr	r0, [r3, #0]
 8029a50:	6859      	ldr	r1, [r3, #4]
 8029a52:	aa12      	add	r2, sp, #72	@ 0x48
 8029a54:	c203      	stmia	r2!, {r0, r1}
 8029a56:	a810      	add	r0, sp, #64	@ 0x40
 8029a58:	f7e3 f93a 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029a5c:	4631      	mov	r1, r6
 8029a5e:	a812      	add	r0, sp, #72	@ 0x48
 8029a60:	f7e3 f95e 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029a64:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8029a68:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 8029a6c:	f003 0201 	and.w	r2, r3, #1
 8029a70:	4614      	mov	r4, r2
 8029a72:	9208      	str	r2, [sp, #32]
 8029a74:	f9bd 204a 	ldrsh.w	r2, [sp, #74]	@ 0x4a
 8029a78:	f8bd 0042 	ldrh.w	r0, [sp, #66]	@ 0x42
 8029a7c:	4423      	add	r3, r4
 8029a7e:	fb02 1303 	mla	r3, r2, r3, r1
 8029a82:	f8bd 6040 	ldrh.w	r6, [sp, #64]	@ 0x40
 8029a86:	4402      	add	r2, r0
 8029a88:	48a7      	ldr	r0, [pc, #668]	@ (8029d28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 8029a8a:	440e      	add	r6, r1
 8029a8c:	6800      	ldr	r0, [r0, #0]
 8029a8e:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 8029a92:	f8ad 204a 	strh.w	r2, [sp, #74]	@ 0x4a
 8029a96:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8029a9a:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8029a9e:	6802      	ldr	r2, [r0, #0]
 8029aa0:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 8029aa4:	9302      	str	r3, [sp, #8]
 8029aa6:	f001 0301 	and.w	r3, r1, #1
 8029aaa:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8029aac:	9309      	str	r3, [sp, #36]	@ 0x24
 8029aae:	9607      	str	r6, [sp, #28]
 8029ab0:	f9bd 404e 	ldrsh.w	r4, [sp, #78]	@ 0x4e
 8029ab4:	4790      	blx	r2
 8029ab6:	4a9d      	ldr	r2, [pc, #628]	@ (8029d2c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8029ab8:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 8029abc:	8812      	ldrh	r2, [r2, #0]
 8029abe:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 8029ac2:	fb04 f402 	mul.w	r4, r4, r2
 8029ac6:	fb02 1303 	mla	r3, r2, r3, r1
 8029aca:	eb00 0583 	add.w	r5, r0, r3, lsl #2
 8029ace:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8029ad2:	429d      	cmp	r5, r3
 8029ad4:	930a      	str	r3, [sp, #40]	@ 0x28
 8029ad6:	f10a 0a04 	add.w	sl, sl, #4
 8029ada:	f080 80f4 	bcs.w	8029cc6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 8029ade:	46bb      	mov	fp, r7
 8029ae0:	1e73      	subs	r3, r6, #1
 8029ae2:	930c      	str	r3, [sp, #48]	@ 0x30
 8029ae4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8029ae6:	2b00      	cmp	r3, #0
 8029ae8:	f000 8104 	beq.w	8029cf4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>
 8029aec:	9a02      	ldr	r2, [sp, #8]
 8029aee:	7813      	ldrb	r3, [r2, #0]
 8029af0:	1c54      	adds	r4, r2, #1
 8029af2:	f003 030f 	and.w	r3, r3, #15
 8029af6:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029afa:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029afc:	0e1b      	lsrs	r3, r3, #24
 8029afe:	f040 8104 	bne.w	8029d0a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8029b02:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029b04:	3504      	adds	r5, #4
 8029b06:	2b01      	cmp	r3, #1
 8029b08:	f340 80bf 	ble.w	8029c8a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x262>
 8029b0c:	3b02      	subs	r3, #2
 8029b0e:	ea4f 0e53 	mov.w	lr, r3, lsr #1
 8029b12:	9304      	str	r3, [sp, #16]
 8029b14:	f10e 0301 	add.w	r3, lr, #1
 8029b18:	e9cd 5e05 	strd	r5, lr, [sp, #20]
 8029b1c:	9303      	str	r3, [sp, #12]
 8029b1e:	18e7      	adds	r7, r4, r3
 8029b20:	f105 0808 	add.w	r8, r5, #8
 8029b24:	46de      	mov	lr, fp
 8029b26:	e00b      	b.n	8029b40 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x118>
 8029b28:	f005 050f 	and.w	r5, r5, #15
 8029b2c:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
 8029b30:	3401      	adds	r4, #1
 8029b32:	0e1a      	lsrs	r2, r3, #24
 8029b34:	d153      	bne.n	8029bde <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 8029b36:	42bc      	cmp	r4, r7
 8029b38:	f108 0808 	add.w	r8, r8, #8
 8029b3c:	f000 8099 	beq.w	8029c72 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24a>
 8029b40:	7825      	ldrb	r5, [r4, #0]
 8029b42:	092b      	lsrs	r3, r5, #4
 8029b44:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029b48:	0e1a      	lsrs	r2, r3, #24
 8029b4a:	d0ed      	beq.n	8029b28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029b4c:	fb0e f202 	mul.w	r2, lr, r2
 8029b50:	1c51      	adds	r1, r2, #1
 8029b52:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8029b56:	1212      	asrs	r2, r2, #8
 8029b58:	2aff      	cmp	r2, #255	@ 0xff
 8029b5a:	f000 80bc 	beq.w	8029cd6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 8029b5e:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8029b62:	0e0e      	lsrs	r6, r1, #24
 8029b64:	f000 80b7 	beq.w	8029cd6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 8029b68:	b2d0      	uxtb	r0, r2
 8029b6a:	2a00      	cmp	r2, #0
 8029b6c:	d0dc      	beq.n	8029b28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029b6e:	fb00 fc06 	mul.w	ip, r0, r6
 8029b72:	f10c 0501 	add.w	r5, ip, #1
 8029b76:	eb05 252c 	add.w	r5, r5, ip, asr #8
 8029b7a:	122d      	asrs	r5, r5, #8
 8029b7c:	950b      	str	r5, [sp, #44]	@ 0x2c
 8029b7e:	fa5f fb81 	uxtb.w	fp, r1
 8029b82:	1b75      	subs	r5, r6, r5
 8029b84:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8029b88:	fb05 fb0b 	mul.w	fp, r5, fp
 8029b8c:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 8029b90:	fb02 f909 	mul.w	r9, r2, r9
 8029b94:	fb02 fc0c 	mul.w	ip, r2, ip
 8029b98:	b2db      	uxtb	r3, r3
 8029b9a:	fb02 b303 	mla	r3, r2, r3, fp
 8029b9e:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8029ba2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8029ba6:	fb05 9902 	mla	r9, r5, r2, r9
 8029baa:	fb05 c101 	mla	r1, r5, r1, ip
 8029bae:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8029bb0:	4430      	add	r0, r6
 8029bb2:	1b45      	subs	r5, r0, r5
 8029bb4:	b2ed      	uxtb	r5, r5
 8029bb6:	fbb9 f2f5 	udiv	r2, r9, r5
 8029bba:	fbb3 f3f5 	udiv	r3, r3, r5
 8029bbe:	fbb1 f1f5 	udiv	r1, r1, r5
 8029bc2:	0412      	lsls	r2, r2, #16
 8029bc4:	b2db      	uxtb	r3, r3
 8029bc6:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8029bca:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8029bce:	0209      	lsls	r1, r1, #8
 8029bd0:	4313      	orrs	r3, r2
 8029bd2:	b289      	uxth	r1, r1
 8029bd4:	430b      	orrs	r3, r1
 8029bd6:	f848 3c08 	str.w	r3, [r8, #-8]
 8029bda:	7825      	ldrb	r5, [r4, #0]
 8029bdc:	e7a4      	b.n	8029b28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029bde:	fb0e f202 	mul.w	r2, lr, r2
 8029be2:	1c51      	adds	r1, r2, #1
 8029be4:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8029be8:	1212      	asrs	r2, r2, #8
 8029bea:	2aff      	cmp	r2, #255	@ 0xff
 8029bec:	d07b      	beq.n	8029ce6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2be>
 8029bee:	f858 1c04 	ldr.w	r1, [r8, #-4]
 8029bf2:	0e0e      	lsrs	r6, r1, #24
 8029bf4:	d077      	beq.n	8029ce6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2be>
 8029bf6:	b2d0      	uxtb	r0, r2
 8029bf8:	2a00      	cmp	r2, #0
 8029bfa:	d09c      	beq.n	8029b36 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8029bfc:	fb00 fc06 	mul.w	ip, r0, r6
 8029c00:	f10c 0501 	add.w	r5, ip, #1
 8029c04:	eb05 252c 	add.w	r5, r5, ip, asr #8
 8029c08:	122d      	asrs	r5, r5, #8
 8029c0a:	950b      	str	r5, [sp, #44]	@ 0x2c
 8029c0c:	fa5f fb81 	uxtb.w	fp, r1
 8029c10:	1b75      	subs	r5, r6, r5
 8029c12:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8029c16:	fb05 fb0b 	mul.w	fp, r5, fp
 8029c1a:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 8029c1e:	fb02 f909 	mul.w	r9, r2, r9
 8029c22:	fb02 fc0c 	mul.w	ip, r2, ip
 8029c26:	b2db      	uxtb	r3, r3
 8029c28:	fb02 b303 	mla	r3, r2, r3, fp
 8029c2c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8029c30:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8029c34:	fb05 9902 	mla	r9, r5, r2, r9
 8029c38:	fb05 c101 	mla	r1, r5, r1, ip
 8029c3c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8029c3e:	4430      	add	r0, r6
 8029c40:	1b45      	subs	r5, r0, r5
 8029c42:	b2ed      	uxtb	r5, r5
 8029c44:	fbb9 f2f5 	udiv	r2, r9, r5
 8029c48:	fbb3 f3f5 	udiv	r3, r3, r5
 8029c4c:	fbb1 f1f5 	udiv	r1, r1, r5
 8029c50:	0412      	lsls	r2, r2, #16
 8029c52:	b2db      	uxtb	r3, r3
 8029c54:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8029c58:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8029c5c:	0209      	lsls	r1, r1, #8
 8029c5e:	4313      	orrs	r3, r2
 8029c60:	b289      	uxth	r1, r1
 8029c62:	430b      	orrs	r3, r1
 8029c64:	42bc      	cmp	r4, r7
 8029c66:	f848 3c04 	str.w	r3, [r8, #-4]
 8029c6a:	f108 0808 	add.w	r8, r8, #8
 8029c6e:	f47f af67 	bne.w	8029b40 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x118>
 8029c72:	46f3      	mov	fp, lr
 8029c74:	f8dd e018 	ldr.w	lr, [sp, #24]
 8029c78:	9a04      	ldr	r2, [sp, #16]
 8029c7a:	ebce 73ce 	rsb	r3, lr, lr, lsl #31
 8029c7e:	9d05      	ldr	r5, [sp, #20]
 8029c80:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8029c84:	9a03      	ldr	r2, [sp, #12]
 8029c86:	eb05 05c2 	add.w	r5, r5, r2, lsl #3
 8029c8a:	2b01      	cmp	r3, #1
 8029c8c:	d107      	bne.n	8029c9e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x276>
 8029c8e:	7823      	ldrb	r3, [r4, #0]
 8029c90:	091b      	lsrs	r3, r3, #4
 8029c92:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029c96:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029c98:	0e1b      	lsrs	r3, r3, #24
 8029c9a:	d12e      	bne.n	8029cfa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8029c9c:	3504      	adds	r5, #4
 8029c9e:	9908      	ldr	r1, [sp, #32]
 8029ca0:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8029ca4:	4a21      	ldr	r2, [pc, #132]	@ (8029d2c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8029ca6:	440b      	add	r3, r1
 8029ca8:	8812      	ldrh	r2, [r2, #0]
 8029caa:	9907      	ldr	r1, [sp, #28]
 8029cac:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8029cb0:	1a52      	subs	r2, r2, r1
 8029cb2:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8029cb6:	9a02      	ldr	r2, [sp, #8]
 8029cb8:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8029cbc:	9302      	str	r3, [sp, #8]
 8029cbe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029cc0:	42ab      	cmp	r3, r5
 8029cc2:	f63f af0f 	bhi.w	8029ae4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8029cc6:	4b18      	ldr	r3, [pc, #96]	@ (8029d28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 8029cc8:	6818      	ldr	r0, [r3, #0]
 8029cca:	6803      	ldr	r3, [r0, #0]
 8029ccc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029cce:	4798      	blx	r3
 8029cd0:	b015      	add	sp, #84	@ 0x54
 8029cd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029cd6:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8029cda:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8029cde:	f848 2c08 	str.w	r2, [r8, #-8]
 8029ce2:	7825      	ldrb	r5, [r4, #0]
 8029ce4:	e720      	b.n	8029b28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029ce6:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8029cea:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8029cee:	f848 2c04 	str.w	r2, [r8, #-4]
 8029cf2:	e720      	b.n	8029b36 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8029cf4:	9c02      	ldr	r4, [sp, #8]
 8029cf6:	9b07      	ldr	r3, [sp, #28]
 8029cf8:	e705      	b.n	8029b06 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xde>
 8029cfa:	9300      	str	r3, [sp, #0]
 8029cfc:	462a      	mov	r2, r5
 8029cfe:	465b      	mov	r3, fp
 8029d00:	a90f      	add	r1, sp, #60	@ 0x3c
 8029d02:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8029d04:	f7ff fe3e 	bl	8029984 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 8029d08:	e7c8      	b.n	8029c9c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8029d0a:	9300      	str	r3, [sp, #0]
 8029d0c:	462a      	mov	r2, r5
 8029d0e:	465b      	mov	r3, fp
 8029d10:	a90f      	add	r1, sp, #60	@ 0x3c
 8029d12:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8029d14:	f7ff fe36 	bl	8029984 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 8029d18:	e6f3      	b.n	8029b02 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8029d1a:	4b05      	ldr	r3, [pc, #20]	@ (8029d30 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8029d1c:	4a05      	ldr	r2, [pc, #20]	@ (8029d34 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 8029d1e:	f241 018c 	movw	r1, #4236	@ 0x108c
 8029d22:	4805      	ldr	r0, [pc, #20]	@ (8029d38 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x310>)
 8029d24:	f008 fbb0 	bl	8032488 <__assert_func>
 8029d28:	20082ec4 	.word	0x20082ec4
 8029d2c:	20082ebe 	.word	0x20082ebe
 8029d30:	0803633c 	.word	0x0803633c
 8029d34:	0803764c 	.word	0x0803764c
 8029d38:	08036248 	.word	0x08036248

08029d3c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029d40:	b093      	sub	sp, #76	@ 0x4c
 8029d42:	9206      	str	r2, [sp, #24]
 8029d44:	468b      	mov	fp, r1
 8029d46:	7812      	ldrb	r2, [r2, #0]
 8029d48:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 8029d4c:	461c      	mov	r4, r3
 8029d4e:	9108      	str	r1, [sp, #32]
 8029d50:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029d52:	2a00      	cmp	r2, #0
 8029d54:	f040 815f 	bne.w	802a016 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2da>
 8029d58:	6820      	ldr	r0, [r4, #0]
 8029d5a:	6861      	ldr	r1, [r4, #4]
 8029d5c:	aa0e      	add	r2, sp, #56	@ 0x38
 8029d5e:	c203      	stmia	r2!, {r0, r1}
 8029d60:	6818      	ldr	r0, [r3, #0]
 8029d62:	6859      	ldr	r1, [r3, #4]
 8029d64:	aa10      	add	r2, sp, #64	@ 0x40
 8029d66:	c203      	stmia	r2!, {r0, r1}
 8029d68:	a80e      	add	r0, sp, #56	@ 0x38
 8029d6a:	f7e2 ffb1 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029d6e:	4621      	mov	r1, r4
 8029d70:	a810      	add	r0, sp, #64	@ 0x40
 8029d72:	f7e2 ffd5 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029d76:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8029d7a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8029d7e:	f340 8137 	ble.w	8029ff0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b4>
 8029d82:	2201      	movs	r2, #1
 8029d84:	b299      	uxth	r1, r3
 8029d86:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8029d8a:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8029d8e:	fb93 f5f2 	sdiv	r5, r3, r2
 8029d92:	b2ae      	uxth	r6, r5
 8029d94:	fb02 3416 	mls	r4, r2, r6, r3
 8029d98:	fb14 0101 	smlabb	r1, r4, r1, r0
 8029d9c:	f9bd 403e 	ldrsh.w	r4, [sp, #62]	@ 0x3e
 8029da0:	fa1f fa81 	uxth.w	sl, r1
 8029da4:	4414      	add	r4, r2
 8029da6:	3c01      	subs	r4, #1
 8029da8:	fb94 f4f2 	sdiv	r4, r4, r2
 8029dac:	b126      	cbz	r6, 8029db8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x7c>
 8029dae:	9a06      	ldr	r2, [sp, #24]
 8029db0:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8029db4:	ba12      	rev	r2, r2
 8029db6:	4493      	add	fp, r2
 8029db8:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8029dbc:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8029dc0:	4402      	add	r2, r0
 8029dc2:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8029dc6:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 8029dca:	440b      	add	r3, r1
 8029dcc:	4616      	mov	r6, r2
 8029dce:	4995      	ldr	r1, [pc, #596]	@ (802a024 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 8029dd0:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8029dd4:	6808      	ldr	r0, [r1, #0]
 8029dd6:	9203      	str	r2, [sp, #12]
 8029dd8:	6803      	ldr	r3, [r0, #0]
 8029dda:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8029dde:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8029de0:	4798      	blx	r3
 8029de2:	f1ba 0f00 	cmp.w	sl, #0
 8029de6:	bf0c      	ite	eq
 8029de8:	4633      	moveq	r3, r6
 8029dea:	2300      	movne	r3, #0
 8029dec:	498e      	ldr	r1, [pc, #568]	@ (802a028 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 8029dee:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8029df2:	8809      	ldrh	r1, [r1, #0]
 8029df4:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 8029df8:	fb05 f501 	mul.w	r5, r5, r1
 8029dfc:	fb01 6202 	mla	r2, r1, r2, r6
 8029e00:	b2a4      	uxth	r4, r4
 8029e02:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 8029e06:	00a2      	lsls	r2, r4, #2
 8029e08:	eb08 0485 	add.w	r4, r8, r5, lsl #2
 8029e0c:	3204      	adds	r2, #4
 8029e0e:	45a0      	cmp	r8, r4
 8029e10:	9207      	str	r2, [sp, #28]
 8029e12:	fa1f f983 	uxth.w	r9, r3
 8029e16:	d21e      	bcs.n	8029e56 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x11a>
 8029e18:	2300      	movs	r3, #0
 8029e1a:	4648      	mov	r0, r9
 8029e1c:	9301      	str	r3, [sp, #4]
 8029e1e:	461d      	mov	r5, r3
 8029e20:	4653      	mov	r3, sl
 8029e22:	b985      	cbnz	r5, 8029e46 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 8029e24:	f89b 2000 	ldrb.w	r2, [fp]
 8029e28:	0995      	lsrs	r5, r2, #6
 8029e2a:	1e69      	subs	r1, r5, #1
 8029e2c:	2902      	cmp	r1, #2
 8029e2e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8029e32:	bf88      	it	hi
 8029e34:	f89b 5001 	ldrbhi.w	r5, [fp, #1]
 8029e38:	9201      	str	r2, [sp, #4]
 8029e3a:	bf9a      	itte	ls
 8029e3c:	f10b 0b01 	addls.w	fp, fp, #1
 8029e40:	b2ad      	uxthls	r5, r5
 8029e42:	f10b 0b02 	addhi.w	fp, fp, #2
 8029e46:	b173      	cbz	r3, 8029e66 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x12a>
 8029e48:	429d      	cmp	r5, r3
 8029e4a:	d259      	bcs.n	8029f00 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c4>
 8029e4c:	1b5b      	subs	r3, r3, r5
 8029e4e:	2500      	movs	r5, #0
 8029e50:	b29b      	uxth	r3, r3
 8029e52:	45a0      	cmp	r8, r4
 8029e54:	d3e5      	bcc.n	8029e22 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xe6>
 8029e56:	4b73      	ldr	r3, [pc, #460]	@ (802a024 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 8029e58:	6818      	ldr	r0, [r3, #0]
 8029e5a:	6803      	ldr	r3, [r0, #0]
 8029e5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029e5e:	4798      	blx	r3
 8029e60:	b013      	add	sp, #76	@ 0x4c
 8029e62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029e66:	2204      	movs	r2, #4
 8029e68:	4616      	mov	r6, r2
 8029e6a:	9907      	ldr	r1, [sp, #28]
 8029e6c:	9a01      	ldr	r2, [sp, #4]
 8029e6e:	4285      	cmp	r5, r0
 8029e70:	fb16 1202 	smlabb	r2, r6, r2, r1
 8029e74:	9906      	ldr	r1, [sp, #24]
 8029e76:	588e      	ldr	r6, [r1, r2]
 8029e78:	ea4f 6c16 	mov.w	ip, r6, lsr #24
 8029e7c:	d357      	bcc.n	8029f2e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8029e7e:	1a2a      	subs	r2, r5, r0
 8029e80:	b292      	uxth	r2, r2
 8029e82:	9202      	str	r2, [sp, #8]
 8029e84:	2800      	cmp	r0, #0
 8029e86:	d041      	beq.n	8029f0c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d0>
 8029e88:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8029e8c:	9a08      	ldr	r2, [sp, #32]
 8029e8e:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8029e92:	fb02 f20c 	mul.w	r2, r2, ip
 8029e96:	f102 0a01 	add.w	sl, r2, #1
 8029e9a:	eb0a 2222 	add.w	r2, sl, r2, asr #8
 8029e9e:	1212      	asrs	r2, r2, #8
 8029ea0:	b2d1      	uxtb	r1, r2
 8029ea2:	910a      	str	r1, [sp, #40]	@ 0x28
 8029ea4:	b291      	uxth	r1, r2
 8029ea6:	9109      	str	r1, [sp, #36]	@ 0x24
 8029ea8:	fb02 f109 	mul.w	r1, r2, r9
 8029eac:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8029eb0:	ea4f 2709 	mov.w	r7, r9, lsl #8
 8029eb4:	b2f6      	uxtb	r6, r6
 8029eb6:	ea47 470e 	orr.w	r7, r7, lr, lsl #16
 8029eba:	4337      	orrs	r7, r6
 8029ebc:	910b      	str	r1, [sp, #44]	@ 0x2c
 8029ebe:	fb06 f602 	mul.w	r6, r6, r2
 8029ec2:	fb02 fe0e 	mul.w	lr, r2, lr
 8029ec6:	ea47 6702 	orr.w	r7, r7, r2, lsl #24
 8029eca:	f1bc 0f00 	cmp.w	ip, #0
 8029ece:	d036      	beq.n	8029f3e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8029ed0:	2a00      	cmp	r2, #0
 8029ed2:	d13b      	bne.n	8029f4c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x210>
 8029ed4:	9a04      	ldr	r2, [sp, #16]
 8029ed6:	1e51      	subs	r1, r2, #1
 8029ed8:	b289      	uxth	r1, r1
 8029eda:	eb08 0c81 	add.w	ip, r8, r1, lsl #2
 8029ede:	f1a8 0204 	sub.w	r2, r8, #4
 8029ee2:	f852 6f04 	ldr.w	r6, [r2, #4]!
 8029ee6:	0e36      	lsrs	r6, r6, #24
 8029ee8:	bf08      	it	eq
 8029eea:	6017      	streq	r7, [r2, #0]
 8029eec:	4594      	cmp	ip, r2
 8029eee:	d1f8      	bne.n	8029ee2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 8029ef0:	3101      	adds	r1, #1
 8029ef2:	eb08 0881 	add.w	r8, r8, r1, lsl #2
 8029ef6:	4285      	cmp	r5, r0
 8029ef8:	d208      	bcs.n	8029f0c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d0>
 8029efa:	9d02      	ldr	r5, [sp, #8]
 8029efc:	9805      	ldr	r0, [sp, #20]
 8029efe:	e7a8      	b.n	8029e52 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 8029f00:	1aed      	subs	r5, r5, r3
 8029f02:	b2ad      	uxth	r5, r5
 8029f04:	f8bd 000c 	ldrh.w	r0, [sp, #12]
 8029f08:	2300      	movs	r3, #0
 8029f0a:	e7a2      	b.n	8029e52 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 8029f0c:	9903      	ldr	r1, [sp, #12]
 8029f0e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8029f12:	4a45      	ldr	r2, [pc, #276]	@ (802a028 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 8029f14:	b288      	uxth	r0, r1
 8029f16:	1a1b      	subs	r3, r3, r0
 8029f18:	8812      	ldrh	r2, [r2, #0]
 8029f1a:	b29b      	uxth	r3, r3
 8029f1c:	2b00      	cmp	r3, #0
 8029f1e:	eba2 0201 	sub.w	r2, r2, r1
 8029f22:	9d02      	ldr	r5, [sp, #8]
 8029f24:	bf18      	it	ne
 8029f26:	2000      	movne	r0, #0
 8029f28:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 8029f2c:	e791      	b.n	8029e52 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 8029f2e:	1b42      	subs	r2, r0, r5
 8029f30:	b292      	uxth	r2, r2
 8029f32:	9205      	str	r2, [sp, #20]
 8029f34:	2d00      	cmp	r5, #0
 8029f36:	d06b      	beq.n	802a010 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>
 8029f38:	9504      	str	r5, [sp, #16]
 8029f3a:	9302      	str	r3, [sp, #8]
 8029f3c:	e7a6      	b.n	8029e8c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x150>
 8029f3e:	9a04      	ldr	r2, [sp, #16]
 8029f40:	3a01      	subs	r2, #1
 8029f42:	b292      	uxth	r2, r2
 8029f44:	3201      	adds	r2, #1
 8029f46:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 8029f4a:	e7d4      	b.n	8029ef6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8029f4c:	2aff      	cmp	r2, #255	@ 0xff
 8029f4e:	9a04      	ldr	r2, [sp, #16]
 8029f50:	d054      	beq.n	8029ffc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>
 8029f52:	f102 3aff 	add.w	sl, r2, #4294967295
 8029f56:	fa1f fa8a 	uxth.w	sl, sl
 8029f5a:	e9cd 6e0c 	strd	r6, lr, [sp, #48]	@ 0x30
 8029f5e:	f10a 0a01 	add.w	sl, sl, #1
 8029f62:	eb08 0a8a 	add.w	sl, r8, sl, lsl #2
 8029f66:	9304      	str	r3, [sp, #16]
 8029f68:	f8d8 2000 	ldr.w	r2, [r8]
 8029f6c:	0e11      	lsrs	r1, r2, #24
 8029f6e:	d038      	beq.n	8029fe2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a6>
 8029f70:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8029f72:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029f74:	fb11 f606 	smulbb	r6, r1, r6
 8029f78:	b2b6      	uxth	r6, r6
 8029f7a:	f106 0e01 	add.w	lr, r6, #1
 8029f7e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8029f82:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8029f86:	eba1 090e 	sub.w	r9, r1, lr
 8029f8a:	b2d6      	uxtb	r6, r2
 8029f8c:	fb09 3606 	mla	r6, r9, r6, r3
 8029f90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8029f92:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8029f96:	fb09 3c0c 	mla	ip, r9, ip, r3
 8029f9a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029f9c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8029fa0:	4419      	add	r1, r3
 8029fa2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8029fa4:	eba1 010e 	sub.w	r1, r1, lr
 8029fa8:	fb09 3202 	mla	r2, r9, r2, r3
 8029fac:	b2c9      	uxtb	r1, r1
 8029fae:	fbb6 f6f1 	udiv	r6, r6, r1
 8029fb2:	fbbc fcf1 	udiv	ip, ip, r1
 8029fb6:	fbb2 f9f1 	udiv	r9, r2, r1
 8029fba:	b2f6      	uxtb	r6, r6
 8029fbc:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 8029fc0:	ea46 6601 	orr.w	r6, r6, r1, lsl #24
 8029fc4:	f40c 027f 	and.w	r2, ip, #16711680	@ 0xff0000
 8029fc8:	ea4f 2109 	mov.w	r1, r9, lsl #8
 8029fcc:	4332      	orrs	r2, r6
 8029fce:	b289      	uxth	r1, r1
 8029fd0:	430a      	orrs	r2, r1
 8029fd2:	f8c8 2000 	str.w	r2, [r8]
 8029fd6:	f108 0804 	add.w	r8, r8, #4
 8029fda:	45d0      	cmp	r8, sl
 8029fdc:	d1c4      	bne.n	8029f68 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 8029fde:	9b04      	ldr	r3, [sp, #16]
 8029fe0:	e789      	b.n	8029ef6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8029fe2:	f8c8 7000 	str.w	r7, [r8]
 8029fe6:	f108 0804 	add.w	r8, r8, #4
 8029fea:	45d0      	cmp	r8, sl
 8029fec:	d1bc      	bne.n	8029f68 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 8029fee:	e7f6      	b.n	8029fde <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a2>
 8029ff0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8029ff4:	b299      	uxth	r1, r3
 8029ff6:	fb94 f2f1 	sdiv	r2, r4, r1
 8029ffa:	e6c4      	b.n	8029d86 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x4a>
 8029ffc:	3a01      	subs	r2, #1
 8029ffe:	b292      	uxth	r2, r2
 802a000:	3201      	adds	r2, #1
 802a002:	eb08 0282 	add.w	r2, r8, r2, lsl #2
 802a006:	f848 7b04 	str.w	r7, [r8], #4
 802a00a:	4590      	cmp	r8, r2
 802a00c:	d1fb      	bne.n	802a006 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ca>
 802a00e:	e772      	b.n	8029ef6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 802a010:	9805      	ldr	r0, [sp, #20]
 802a012:	462b      	mov	r3, r5
 802a014:	e71d      	b.n	8029e52 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 802a016:	4b05      	ldr	r3, [pc, #20]	@ (802a02c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>)
 802a018:	4a05      	ldr	r2, [pc, #20]	@ (802a030 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f4>)
 802a01a:	f241 01eb 	movw	r1, #4331	@ 0x10eb
 802a01e:	4805      	ldr	r0, [pc, #20]	@ (802a034 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f8>)
 802a020:	f008 fa32 	bl	8032488 <__assert_func>
 802a024:	20082ec4 	.word	0x20082ec4
 802a028:	20082ebe 	.word	0x20082ebe
 802a02c:	0803633c 	.word	0x0803633c
 802a030:	08037a58 	.word	0x08037a58
 802a034:	08036248 	.word	0x08036248

0802a038 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 802a038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a03c:	b0a1      	sub	sp, #132	@ 0x84
 802a03e:	9210      	str	r2, [sp, #64]	@ 0x40
 802a040:	9119      	str	r1, [sp, #100]	@ 0x64
 802a042:	7812      	ldrb	r2, [r2, #0]
 802a044:	f89d 10ac 	ldrb.w	r1, [sp, #172]	@ 0xac
 802a048:	461c      	mov	r4, r3
 802a04a:	9104      	str	r1, [sp, #16]
 802a04c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802a04e:	2a00      	cmp	r2, #0
 802a050:	f040 8215 	bne.w	802a47e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x446>
 802a054:	6861      	ldr	r1, [r4, #4]
 802a056:	4683      	mov	fp, r0
 802a058:	6820      	ldr	r0, [r4, #0]
 802a05a:	aa1c      	add	r2, sp, #112	@ 0x70
 802a05c:	c203      	stmia	r2!, {r0, r1}
 802a05e:	6818      	ldr	r0, [r3, #0]
 802a060:	6859      	ldr	r1, [r3, #4]
 802a062:	aa1e      	add	r2, sp, #120	@ 0x78
 802a064:	c203      	stmia	r2!, {r0, r1}
 802a066:	a81c      	add	r0, sp, #112	@ 0x70
 802a068:	f7e2 fe32 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a06c:	4621      	mov	r1, r4
 802a06e:	a81e      	add	r0, sp, #120	@ 0x78
 802a070:	f7e2 fe56 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a074:	f9bd 1074 	ldrsh.w	r1, [sp, #116]	@ 0x74
 802a078:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 802a07c:	f340 81f7 	ble.w	802a46e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x436>
 802a080:	2301      	movs	r3, #1
 802a082:	b289      	uxth	r1, r1
 802a084:	931a      	str	r3, [sp, #104]	@ 0x68
 802a086:	f9bd 007a 	ldrsh.w	r0, [sp, #122]	@ 0x7a
 802a08a:	f9bd 2076 	ldrsh.w	r2, [sp, #118]	@ 0x76
 802a08e:	fb90 f4f3 	sdiv	r4, r0, r3
 802a092:	441a      	add	r2, r3
 802a094:	3a01      	subs	r2, #1
 802a096:	fb92 f2f3 	sdiv	r2, r2, r3
 802a09a:	b2a4      	uxth	r4, r4
 802a09c:	fb03 0314 	mls	r3, r3, r4, r0
 802a0a0:	9418      	str	r4, [sp, #96]	@ 0x60
 802a0a2:	f8bd 4078 	ldrh.w	r4, [sp, #120]	@ 0x78
 802a0a6:	f8bd 6070 	ldrh.w	r6, [sp, #112]	@ 0x70
 802a0aa:	fb13 4101 	smlabb	r1, r3, r1, r4
 802a0ae:	f8bd 5072 	ldrh.w	r5, [sp, #114]	@ 0x72
 802a0b2:	4bc6      	ldr	r3, [pc, #792]	@ (802a3cc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 802a0b4:	4434      	add	r4, r6
 802a0b6:	4405      	add	r5, r0
 802a0b8:	6818      	ldr	r0, [r3, #0]
 802a0ba:	f8ad 4078 	strh.w	r4, [sp, #120]	@ 0x78
 802a0be:	f8ad 507a 	strh.w	r5, [sp, #122]	@ 0x7a
 802a0c2:	f9bd 607c 	ldrsh.w	r6, [sp, #124]	@ 0x7c
 802a0c6:	6803      	ldr	r3, [r0, #0]
 802a0c8:	3201      	adds	r2, #1
 802a0ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802a0cc:	9608      	str	r6, [sp, #32]
 802a0ce:	fa1f f881 	uxth.w	r8, r1
 802a0d2:	b294      	uxth	r4, r2
 802a0d4:	f9bd 507e 	ldrsh.w	r5, [sp, #126]	@ 0x7e
 802a0d8:	4798      	blx	r3
 802a0da:	2300      	movs	r3, #0
 802a0dc:	49bc      	ldr	r1, [pc, #752]	@ (802a3d0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 802a0de:	f1b8 0f00 	cmp.w	r8, #0
 802a0e2:	bf08      	it	eq
 802a0e4:	4632      	moveq	r2, r6
 802a0e6:	8809      	ldrh	r1, [r1, #0]
 802a0e8:	f9bd 6078 	ldrsh.w	r6, [sp, #120]	@ 0x78
 802a0ec:	9317      	str	r3, [sp, #92]	@ 0x5c
 802a0ee:	f9bd 307a 	ldrsh.w	r3, [sp, #122]	@ 0x7a
 802a0f2:	fb05 f501 	mul.w	r5, r5, r1
 802a0f6:	fb01 6303 	mla	r3, r1, r3, r6
 802a0fa:	ea4f 0484 	mov.w	r4, r4, lsl #2
 802a0fe:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 802a102:	f104 0304 	add.w	r3, r4, #4
 802a106:	9315      	str	r3, [sp, #84]	@ 0x54
 802a108:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 802a10c:	bf18      	it	ne
 802a10e:	2200      	movne	r2, #0
 802a110:	9303      	str	r3, [sp, #12]
 802a112:	f10b 030e 	add.w	r3, fp, #14
 802a116:	931b      	str	r3, [sp, #108]	@ 0x6c
 802a118:	465b      	mov	r3, fp
 802a11a:	fa1f f982 	uxth.w	r9, r2
 802a11e:	46cb      	mov	fp, r9
 802a120:	46b4      	mov	ip, r6
 802a122:	4647      	mov	r7, r8
 802a124:	4699      	mov	r9, r3
 802a126:	9b03      	ldr	r3, [sp, #12]
 802a128:	459c      	cmp	ip, r3
 802a12a:	f080 8104 	bcs.w	802a336 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a12e:	e9dd 2017 	ldrd	r2, r0, [sp, #92]	@ 0x5c
 802a132:	2301      	movs	r3, #1
 802a134:	f8bd 1074 	ldrh.w	r1, [sp, #116]	@ 0x74
 802a138:	2500      	movs	r5, #0
 802a13a:	fbb7 f1f1 	udiv	r1, r7, r1
 802a13e:	f04f 0a01 	mov.w	sl, #1
 802a142:	fa10 f282 	uxtah	r2, r0, r2
 802a146:	0092      	lsls	r2, r2, #2
 802a148:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802a14a:	3204      	adds	r2, #4
 802a14c:	4410      	add	r0, r2
 802a14e:	9305      	str	r3, [sp, #20]
 802a150:	7883      	ldrb	r3, [r0, #2]
 802a152:	7844      	ldrb	r4, [r0, #1]
 802a154:	021b      	lsls	r3, r3, #8
 802a156:	78c0      	ldrb	r0, [r0, #3]
 802a158:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 802a15a:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 802a15e:	4304      	orrs	r4, r0
 802a160:	1930      	adds	r0, r6, r4
 802a162:	7843      	ldrb	r3, [r0, #1]
 802a164:	5d34      	ldrb	r4, [r6, r4]
 802a166:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802a168:	021b      	lsls	r3, r3, #8
 802a16a:	5cb2      	ldrb	r2, [r6, r2]
 802a16c:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 802a16e:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 802a172:	1a71      	subs	r1, r6, r1
 802a174:	431c      	orrs	r4, r3
 802a176:	920a      	str	r2, [sp, #40]	@ 0x28
 802a178:	3201      	adds	r2, #1
 802a17a:	f889 400d 	strb.w	r4, [r9, #13]
 802a17e:	9512      	str	r5, [sp, #72]	@ 0x48
 802a180:	9202      	str	r2, [sp, #8]
 802a182:	4666      	mov	r6, ip
 802a184:	b28a      	uxth	r2, r1
 802a186:	46d6      	mov	lr, sl
 802a188:	4629      	mov	r1, r5
 802a18a:	464d      	mov	r5, r9
 802a18c:	46d9      	mov	r9, fp
 802a18e:	b2a4      	uxth	r4, r4
 802a190:	3001      	adds	r0, #1
 802a192:	9407      	str	r4, [sp, #28]
 802a194:	9001      	str	r0, [sp, #4]
 802a196:	9216      	str	r2, [sp, #88]	@ 0x58
 802a198:	2f00      	cmp	r7, #0
 802a19a:	d034      	beq.n	802a206 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ce>
 802a19c:	45ba      	cmp	sl, r7
 802a19e:	f080 80d2 	bcs.w	802a346 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x30e>
 802a1a2:	9b03      	ldr	r3, [sp, #12]
 802a1a4:	eba7 070a 	sub.w	r7, r7, sl
 802a1a8:	429e      	cmp	r6, r3
 802a1aa:	b2bf      	uxth	r7, r7
 802a1ac:	f080 80c3 	bcs.w	802a336 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a1b0:	9801      	ldr	r0, [sp, #4]
 802a1b2:	f1ce 0107 	rsb	r1, lr, #7
 802a1b6:	7842      	ldrb	r2, [r0, #1]
 802a1b8:	7803      	ldrb	r3, [r0, #0]
 802a1ba:	408a      	lsls	r2, r1
 802a1bc:	fa43 f30e 	asr.w	r3, r3, lr
 802a1c0:	0052      	lsls	r2, r2, #1
 802a1c2:	f10e 0101 	add.w	r1, lr, #1
 802a1c6:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 802a1ca:	b2db      	uxtb	r3, r3
 802a1cc:	fa5f fe81 	uxtb.w	lr, r1
 802a1d0:	4313      	orrs	r3, r2
 802a1d2:	f1be 0f08 	cmp.w	lr, #8
 802a1d6:	b29a      	uxth	r2, r3
 802a1d8:	f000 80f1 	beq.w	802a3be <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x386>
 802a1dc:	3001      	adds	r0, #1
 802a1de:	9001      	str	r0, [sp, #4]
 802a1e0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802a1e2:	4291      	cmp	r1, r2
 802a1e4:	f0c0 80c0 	bcc.w	802a368 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x330>
 802a1e8:	f04f 0a01 	mov.w	sl, #1
 802a1ec:	b2db      	uxtb	r3, r3
 802a1ee:	736b      	strb	r3, [r5, #13]
 802a1f0:	9902      	ldr	r1, [sp, #8]
 802a1f2:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 802a1f6:	f0c0 810a 	bcc.w	802a40e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3d6>
 802a1fa:	9207      	str	r2, [sp, #28]
 802a1fc:	f8cd a014 	str.w	sl, [sp, #20]
 802a200:	2100      	movs	r1, #0
 802a202:	2f00      	cmp	r7, #0
 802a204:	d1ca      	bne.n	802a19c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x164>
 802a206:	45ca      	cmp	sl, r9
 802a208:	f0c0 80cd 	bcc.w	802a3a6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x36e>
 802a20c:	ebaa 0309 	sub.w	r3, sl, r9
 802a210:	b29b      	uxth	r3, r3
 802a212:	9309      	str	r3, [sp, #36]	@ 0x24
 802a214:	f1b9 0f00 	cmp.w	r9, #0
 802a218:	f000 80dc 	beq.w	802a3d4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x39c>
 802a21c:	464b      	mov	r3, r9
 802a21e:	f8cd 9018 	str.w	r9, [sp, #24]
 802a222:	9711      	str	r7, [sp, #68]	@ 0x44
 802a224:	18cb      	adds	r3, r1, r3
 802a226:	e9cd ea0d 	strd	lr, sl, [sp, #52]	@ 0x34
 802a22a:	46b3      	mov	fp, r6
 802a22c:	fa1f fc83 	uxth.w	ip, r3
 802a230:	e9cd 690b 	strd	r6, r9, [sp, #44]	@ 0x2c
 802a234:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 802a238:	970f      	str	r7, [sp, #60]	@ 0x3c
 802a23a:	f8dd 8040 	ldr.w	r8, [sp, #64]	@ 0x40
 802a23e:	e045      	b.n	802a2cc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x294>
 802a240:	f8db 0000 	ldr.w	r0, [fp]
 802a244:	0e07      	lsrs	r7, r0, #24
 802a246:	d055      	beq.n	802a2f4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2bc>
 802a248:	b2d4      	uxtb	r4, r2
 802a24a:	2a00      	cmp	r2, #0
 802a24c:	d03a      	beq.n	802a2c4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x28c>
 802a24e:	fb04 fe07 	mul.w	lr, r4, r7
 802a252:	f10e 0601 	add.w	r6, lr, #1
 802a256:	eb06 262e 	add.w	r6, r6, lr, asr #8
 802a25a:	1236      	asrs	r6, r6, #8
 802a25c:	fa5f fe80 	uxtb.w	lr, r0
 802a260:	9614      	str	r6, [sp, #80]	@ 0x50
 802a262:	1bbe      	subs	r6, r7, r6
 802a264:	9413      	str	r4, [sp, #76]	@ 0x4c
 802a266:	f3c3 4907 	ubfx	r9, r3, #16, #8
 802a26a:	fb06 f40e 	mul.w	r4, r6, lr
 802a26e:	fb02 f909 	mul.w	r9, r2, r9
 802a272:	f3c3 2e07 	ubfx	lr, r3, #8, #8
 802a276:	fb02 fe0e 	mul.w	lr, r2, lr
 802a27a:	b2db      	uxtb	r3, r3
 802a27c:	fb02 4303 	mla	r3, r2, r3, r4
 802a280:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802a284:	fb06 9902 	mla	r9, r6, r2, r9
 802a288:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802a28c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802a28e:	fb06 e000 	mla	r0, r6, r0, lr
 802a292:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 802a294:	443a      	add	r2, r7
 802a296:	1b94      	subs	r4, r2, r6
 802a298:	b2e4      	uxtb	r4, r4
 802a29a:	fbb9 f9f4 	udiv	r9, r9, r4
 802a29e:	fbb3 f3f4 	udiv	r3, r3, r4
 802a2a2:	fbb0 f0f4 	udiv	r0, r0, r4
 802a2a6:	ea4f 4909 	mov.w	r9, r9, lsl #16
 802a2aa:	b2db      	uxtb	r3, r3
 802a2ac:	f409 097f 	and.w	r9, r9, #16711680	@ 0xff0000
 802a2b0:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
 802a2b4:	0200      	lsls	r0, r0, #8
 802a2b6:	ea43 0909 	orr.w	r9, r3, r9
 802a2ba:	b280      	uxth	r0, r0
 802a2bc:	ea49 0000 	orr.w	r0, r9, r0
 802a2c0:	f8cb 0000 	str.w	r0, [fp]
 802a2c4:	4561      	cmp	r1, ip
 802a2c6:	f10b 0b04 	add.w	fp, fp, #4
 802a2ca:	d01d      	beq.n	802a308 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d0>
 802a2cc:	2204      	movs	r2, #4
 802a2ce:	186b      	adds	r3, r5, r1
 802a2d0:	7b5b      	ldrb	r3, [r3, #13]
 802a2d2:	3101      	adds	r1, #1
 802a2d4:	fb12 a303 	smlabb	r3, r2, r3, sl
 802a2d8:	f858 3003 	ldr.w	r3, [r8, r3]
 802a2dc:	b289      	uxth	r1, r1
 802a2de:	0e1a      	lsrs	r2, r3, #24
 802a2e0:	d0f0      	beq.n	802a2c4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x28c>
 802a2e2:	9804      	ldr	r0, [sp, #16]
 802a2e4:	fb00 f202 	mul.w	r2, r0, r2
 802a2e8:	1c50      	adds	r0, r2, #1
 802a2ea:	eb00 2222 	add.w	r2, r0, r2, asr #8
 802a2ee:	1212      	asrs	r2, r2, #8
 802a2f0:	2aff      	cmp	r2, #255	@ 0xff
 802a2f2:	d1a5      	bne.n	802a240 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x208>
 802a2f4:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 802a2f8:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 802a2fc:	4561      	cmp	r1, ip
 802a2fe:	f8cb 2000 	str.w	r2, [fp]
 802a302:	f10b 0b04 	add.w	fp, fp, #4
 802a306:	d1e1      	bne.n	802a2cc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x294>
 802a308:	e9dd 690b 	ldrd	r6, r9, [sp, #44]	@ 0x2c
 802a30c:	e9dd ea0d 	ldrd	lr, sl, [sp, #52]	@ 0x34
 802a310:	9b06      	ldr	r3, [sp, #24]
 802a312:	45ca      	cmp	sl, r9
 802a314:	f103 33ff 	add.w	r3, r3, #4294967295
 802a318:	b29b      	uxth	r3, r3
 802a31a:	f103 0301 	add.w	r3, r3, #1
 802a31e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 802a320:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 802a324:	d257      	bcs.n	802a3d6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x39e>
 802a326:	9b03      	ldr	r3, [sp, #12]
 802a328:	4661      	mov	r1, ip
 802a32a:	429e      	cmp	r6, r3
 802a32c:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802a330:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
 802a334:	d313      	bcc.n	802a35e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x326>
 802a336:	4b25      	ldr	r3, [pc, #148]	@ (802a3cc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 802a338:	6818      	ldr	r0, [r3, #0]
 802a33a:	6803      	ldr	r3, [r0, #0]
 802a33c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802a33e:	4798      	blx	r3
 802a340:	b021      	add	sp, #132	@ 0x84
 802a342:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a346:	ebaa 0a07 	sub.w	sl, sl, r7
 802a34a:	4439      	add	r1, r7
 802a34c:	2700      	movs	r7, #0
 802a34e:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 802a352:	fa1f fa8a 	uxth.w	sl, sl
 802a356:	b289      	uxth	r1, r1
 802a358:	9b03      	ldr	r3, [sp, #12]
 802a35a:	429e      	cmp	r6, r3
 802a35c:	d2eb      	bcs.n	802a336 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a35e:	f1ba 0f00 	cmp.w	sl, #0
 802a362:	f47f af19 	bne.w	802a198 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 802a366:	e723      	b.n	802a1b0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 802a368:	9b02      	ldr	r3, [sp, #8]
 802a36a:	4293      	cmp	r3, r2
 802a36c:	d852      	bhi.n	802a414 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3dc>
 802a36e:	9805      	ldr	r0, [sp, #20]
 802a370:	7b69      	ldrb	r1, [r5, #13]
 802a372:	182b      	adds	r3, r5, r0
 802a374:	7359      	strb	r1, [r3, #13]
 802a376:	7b6b      	ldrb	r3, [r5, #13]
 802a378:	1c41      	adds	r1, r0, #1
 802a37a:	fa1f fa81 	uxth.w	sl, r1
 802a37e:	9c02      	ldr	r4, [sp, #8]
 802a380:	f8cd a014 	str.w	sl, [sp, #20]
 802a384:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 802a388:	f104 0c01 	add.w	ip, r4, #1
 802a38c:	9c07      	ldr	r4, [sp, #28]
 802a38e:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 802a392:	fa1f f38c 	uxth.w	r3, ip
 802a396:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 802a39a:	f8a0 4050 	strh.w	r4, [r0, #80]	@ 0x50
 802a39e:	9302      	str	r3, [sp, #8]
 802a3a0:	9207      	str	r2, [sp, #28]
 802a3a2:	2100      	movs	r1, #0
 802a3a4:	e6f8      	b.n	802a198 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 802a3a6:	eba9 030a 	sub.w	r3, r9, sl
 802a3aa:	b29b      	uxth	r3, r3
 802a3ac:	9311      	str	r3, [sp, #68]	@ 0x44
 802a3ae:	f1ba 0f00 	cmp.w	sl, #0
 802a3b2:	d06b      	beq.n	802a48c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x454>
 802a3b4:	f8cd a018 	str.w	sl, [sp, #24]
 802a3b8:	9709      	str	r7, [sp, #36]	@ 0x24
 802a3ba:	4653      	mov	r3, sl
 802a3bc:	e732      	b.n	802a224 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ec>
 802a3be:	4601      	mov	r1, r0
 802a3c0:	3102      	adds	r1, #2
 802a3c2:	f04f 0e00 	mov.w	lr, #0
 802a3c6:	9101      	str	r1, [sp, #4]
 802a3c8:	e70a      	b.n	802a1e0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 802a3ca:	bf00      	nop
 802a3cc:	20082ec4 	.word	0x20082ec4
 802a3d0:	20082ebe 	.word	0x20082ebe
 802a3d4:	468c      	mov	ip, r1
 802a3d6:	4b31      	ldr	r3, [pc, #196]	@ (802a49c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x464>)
 802a3d8:	9908      	ldr	r1, [sp, #32]
 802a3da:	881b      	ldrh	r3, [r3, #0]
 802a3dc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802a3de:	1a5b      	subs	r3, r3, r1
 802a3e0:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 802a3e4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802a3e6:	3201      	adds	r2, #1
 802a3e8:	4293      	cmp	r3, r2
 802a3ea:	9212      	str	r2, [sp, #72]	@ 0x48
 802a3ec:	d02d      	beq.n	802a44a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x412>
 802a3ee:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 802a3f2:	f8bd 7074 	ldrh.w	r7, [sp, #116]	@ 0x74
 802a3f6:	4661      	mov	r1, ip
 802a3f8:	eba7 0709 	sub.w	r7, r7, r9
 802a3fc:	b2bf      	uxth	r7, r7
 802a3fe:	2f00      	cmp	r7, #0
 802a400:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802a404:	bf14      	ite	ne
 802a406:	f04f 0900 	movne.w	r9, #0
 802a40a:	2700      	moveq	r7, #0
 802a40c:	e7a4      	b.n	802a358 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x320>
 802a40e:	9905      	ldr	r1, [sp, #20]
 802a410:	3101      	adds	r1, #1
 802a412:	e7b4      	b.n	802a37e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x346>
 802a414:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 802a418:	f893 a04f 	ldrb.w	sl, [r3, #79]	@ 0x4f
 802a41c:	4613      	mov	r3, r2
 802a41e:	f1ba 0f01 	cmp.w	sl, #1
 802a422:	d90d      	bls.n	802a440 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x408>
 802a424:	f10a 010d 	add.w	r1, sl, #13
 802a428:	9c1b      	ldr	r4, [sp, #108]	@ 0x6c
 802a42a:	4429      	add	r1, r5
 802a42c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 802a430:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 802a434:	f801 0d01 	strb.w	r0, [r1, #-1]!
 802a438:	428c      	cmp	r4, r1
 802a43a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 802a43e:	d1f5      	bne.n	802a42c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f4>
 802a440:	b2db      	uxtb	r3, r3
 802a442:	736b      	strb	r3, [r5, #13]
 802a444:	fa1f fa8a 	uxth.w	sl, sl
 802a448:	e6d2      	b.n	802a1f0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 802a44a:	f8bd 3078 	ldrh.w	r3, [sp, #120]	@ 0x78
 802a44e:	f8bd 2070 	ldrh.w	r2, [sp, #112]	@ 0x70
 802a452:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802a454:	1a9b      	subs	r3, r3, r2
 802a456:	b29f      	uxth	r7, r3
 802a458:	2f00      	cmp	r7, #0
 802a45a:	9b08      	ldr	r3, [sp, #32]
 802a45c:	bf18      	it	ne
 802a45e:	2300      	movne	r3, #0
 802a460:	3101      	adds	r1, #1
 802a462:	46b4      	mov	ip, r6
 802a464:	46a9      	mov	r9, r5
 802a466:	9117      	str	r1, [sp, #92]	@ 0x5c
 802a468:	fa1f fb83 	uxth.w	fp, r3
 802a46c:	e65b      	b.n	802a126 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xee>
 802a46e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802a472:	b289      	uxth	r1, r1
 802a474:	fb93 f3f1 	sdiv	r3, r3, r1
 802a478:	b29a      	uxth	r2, r3
 802a47a:	921a      	str	r2, [sp, #104]	@ 0x68
 802a47c:	e603      	b.n	802a086 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x4e>
 802a47e:	4b08      	ldr	r3, [pc, #32]	@ (802a4a0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x468>)
 802a480:	4a08      	ldr	r2, [pc, #32]	@ (802a4a4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x46c>)
 802a482:	f241 1181 	movw	r1, #4481	@ 0x1181
 802a486:	4808      	ldr	r0, [pc, #32]	@ (802a4a8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x470>)
 802a488:	f007 fffe 	bl	8032488 <__assert_func>
 802a48c:	9b03      	ldr	r3, [sp, #12]
 802a48e:	429e      	cmp	r6, r3
 802a490:	f4bf af51 	bcs.w	802a336 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a494:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
 802a498:	e68a      	b.n	802a1b0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 802a49a:	bf00      	nop
 802a49c:	20082ebe 	.word	0x20082ebe
 802a4a0:	0803633c 	.word	0x0803633c
 802a4a4:	08037d24 	.word	0x08037d24
 802a4a8:	08036248 	.word	0x08036248

0802a4ac <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 802a4ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a4b0:	7814      	ldrb	r4, [r2, #0]
 802a4b2:	7855      	ldrb	r5, [r2, #1]
 802a4b4:	2c01      	cmp	r4, #1
 802a4b6:	9e06      	ldr	r6, [sp, #24]
 802a4b8:	f89d 701c 	ldrb.w	r7, [sp, #28]
 802a4bc:	d013      	beq.n	802a4e6 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x3a>
 802a4be:	d304      	bcc.n	802a4ca <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e>
 802a4c0:	2c02      	cmp	r4, #2
 802a4c2:	f000 80ca 	beq.w	802a65a <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1ae>
 802a4c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a4ca:	7b04      	ldrb	r4, [r0, #12]
 802a4cc:	2c01      	cmp	r4, #1
 802a4ce:	d02d      	beq.n	802a52c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x80>
 802a4d0:	d317      	bcc.n	802a502 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 802a4d2:	2c02      	cmp	r4, #2
 802a4d4:	f040 80cf 	bne.w	802a676 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1ca>
 802a4d8:	2d03      	cmp	r5, #3
 802a4da:	f200 80da 	bhi.w	802a692 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e6>
 802a4de:	e8df f005 	tbb	[pc, r5]
 802a4e2:	989e      	.short	0x989e
 802a4e4:	8c92      	.short	0x8c92
 802a4e6:	7b04      	ldrb	r4, [r0, #12]
 802a4e8:	2c01      	cmp	r4, #1
 802a4ea:	d018      	beq.n	802a51e <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x72>
 802a4ec:	d310      	bcc.n	802a510 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x64>
 802a4ee:	2c02      	cmp	r4, #2
 802a4f0:	f040 80ba 	bne.w	802a668 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1bc>
 802a4f4:	2d03      	cmp	r5, #3
 802a4f6:	f200 80c5 	bhi.w	802a684 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1d8>
 802a4fa:	e8df f005 	tbb	[pc, r5]
 802a4fe:	a2a8      	.short	0xa2a8
 802a500:	969c      	.short	0x969c
 802a502:	2d03      	cmp	r5, #3
 802a504:	f200 80d3 	bhi.w	802a6ae <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x202>
 802a508:	e8df f005 	tbb	[pc, r5]
 802a50c:	5f656b71 	.word	0x5f656b71
 802a510:	2d03      	cmp	r5, #3
 802a512:	f200 80c5 	bhi.w	802a6a0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1f4>
 802a516:	e8df f005 	tbb	[pc, r5]
 802a51a:	4c52      	.short	0x4c52
 802a51c:	4046      	.short	0x4046
 802a51e:	2d03      	cmp	r5, #3
 802a520:	f200 80d3 	bhi.w	802a6ca <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x21e>
 802a524:	e8df f005 	tbb	[pc, r5]
 802a528:	21272d33 	.word	0x21272d33
 802a52c:	2d03      	cmp	r5, #3
 802a52e:	f200 80c5 	bhi.w	802a6bc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x210>
 802a532:	e8df f005 	tbb	[pc, r5]
 802a536:	0e14      	.short	0x0e14
 802a538:	0208      	.short	0x0208
 802a53a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a53e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a542:	f7fd b8e3 	b.w	802770c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a546:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a54a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a54e:	f7fc bead 	b.w	80272ac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a552:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a556:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a55a:	f7fc bcad 	b.w	8026eb8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a55e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a562:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a566:	f7fc bb83 	b.w	8026c70 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a56a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a56e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a572:	f7fd bf9d 	b.w	80284b0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a576:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a57a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a57e:	f7fd be47 	b.w	8028210 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a582:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a586:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a58a:	f7fd bc13 	b.w	8027db4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a58e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a592:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a596:	f7fd badd 	b.w	8027b54 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a59a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a59e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5a2:	f7fc b93f 	b.w	8026824 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a5a6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5ae:	f7fb bfd7 	b.w	8026560 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a5b2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5ba:	f7fb bd63 	b.w	8026084 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a5be:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5c6:	f7fb bc05 	b.w	8025dd4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a5ca:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5d2:	f7fb b9a7 	b.w	8025924 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a5d6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5de:	f7fa bfd3 	b.w	8025588 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a5e2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5ea:	f7fa bde7 	b.w	80251bc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a5ee:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5f6:	f7fa bc41 	b.w	8024e7c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a5fa:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a602:	f7ff bd19 	b.w	802a038 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a606:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a60a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a60e:	f7ff bb95 	b.w	8029d3c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a612:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a616:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a61a:	f7ff ba05 	b.w	8029a28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a61e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a622:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a626:	f7ff b871 	b.w	802970c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a62a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a62e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a632:	f7fe be1f 	b.w	8029274 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a636:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a63a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a63e:	f7fe bcaf 	b.w	8028fa0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a642:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a646:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a64a:	f7fe ba8b 	b.w	8028b64 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a64e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a652:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a656:	f7fe b955 	b.w	8028904 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a65a:	4b1f      	ldr	r3, [pc, #124]	@ (802a6d8 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22c>)
 802a65c:	4a1f      	ldr	r2, [pc, #124]	@ (802a6dc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a65e:	f240 31f3 	movw	r1, #1011	@ 0x3f3
 802a662:	481f      	ldr	r0, [pc, #124]	@ (802a6e0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a664:	f007 ff10 	bl	8032488 <__assert_func>
 802a668:	4b1e      	ldr	r3, [pc, #120]	@ (802a6e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x238>)
 802a66a:	4a1c      	ldr	r2, [pc, #112]	@ (802a6dc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a66c:	f240 4179 	movw	r1, #1145	@ 0x479
 802a670:	481b      	ldr	r0, [pc, #108]	@ (802a6e0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a672:	f007 ff09 	bl	8032488 <__assert_func>
 802a676:	4b1b      	ldr	r3, [pc, #108]	@ (802a6e4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x238>)
 802a678:	4a18      	ldr	r2, [pc, #96]	@ (802a6dc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a67a:	f240 4135 	movw	r1, #1077	@ 0x435
 802a67e:	4818      	ldr	r0, [pc, #96]	@ (802a6e0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a680:	f007 ff02 	bl	8032488 <__assert_func>
 802a684:	4b18      	ldr	r3, [pc, #96]	@ (802a6e8 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x23c>)
 802a686:	4a15      	ldr	r2, [pc, #84]	@ (802a6dc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a688:	f240 4174 	movw	r1, #1140	@ 0x474
 802a68c:	4814      	ldr	r0, [pc, #80]	@ (802a6e0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a68e:	f007 fefb 	bl	8032488 <__assert_func>
 802a692:	4b15      	ldr	r3, [pc, #84]	@ (802a6e8 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x23c>)
 802a694:	4a11      	ldr	r2, [pc, #68]	@ (802a6dc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a696:	f44f 6186 	mov.w	r1, #1072	@ 0x430
 802a69a:	4811      	ldr	r0, [pc, #68]	@ (802a6e0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a69c:	f007 fef4 	bl	8032488 <__assert_func>
 802a6a0:	4b12      	ldr	r3, [pc, #72]	@ (802a6ec <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x240>)
 802a6a2:	4a0e      	ldr	r2, [pc, #56]	@ (802a6dc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6a4:	f240 414c 	movw	r1, #1100	@ 0x44c
 802a6a8:	480d      	ldr	r0, [pc, #52]	@ (802a6e0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6aa:	f007 feed 	bl	8032488 <__assert_func>
 802a6ae:	4b0f      	ldr	r3, [pc, #60]	@ (802a6ec <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x240>)
 802a6b0:	4a0a      	ldr	r2, [pc, #40]	@ (802a6dc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6b2:	f44f 6181 	mov.w	r1, #1032	@ 0x408
 802a6b6:	480a      	ldr	r0, [pc, #40]	@ (802a6e0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6b8:	f007 fee6 	bl	8032488 <__assert_func>
 802a6bc:	4b0c      	ldr	r3, [pc, #48]	@ (802a6f0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x244>)
 802a6be:	4a07      	ldr	r2, [pc, #28]	@ (802a6dc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6c0:	f240 411c 	movw	r1, #1052	@ 0x41c
 802a6c4:	4806      	ldr	r0, [pc, #24]	@ (802a6e0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6c6:	f007 fedf 	bl	8032488 <__assert_func>
 802a6ca:	4b09      	ldr	r3, [pc, #36]	@ (802a6f0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x244>)
 802a6cc:	4a03      	ldr	r2, [pc, #12]	@ (802a6dc <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6ce:	f44f 618c 	mov.w	r1, #1120	@ 0x460
 802a6d2:	4803      	ldr	r0, [pc, #12]	@ (802a6e0 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6d4:	f007 fed8 	bl	8032488 <__assert_func>
 802a6d8:	08035f00 	.word	0x08035f00
 802a6dc:	08036a50 	.word	0x08036a50
 802a6e0:	08036248 	.word	0x08036248
 802a6e4:	08036060 	.word	0x08036060
 802a6e8:	08035ffc 	.word	0x08035ffc
 802a6ec:	08035f3c 	.word	0x08035f3c
 802a6f0:	08035f9c 	.word	0x08035f9c

0802a6f4 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 802a6f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802a6f8:	b089      	sub	sp, #36	@ 0x24
 802a6fa:	f89d 4044 	ldrb.w	r4, [sp, #68]	@ 0x44
 802a6fe:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802a700:	b13c      	cbz	r4, 802a712 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a702:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 802a706:	2e00      	cmp	r6, #0
 802a708:	dd03      	ble.n	802a712 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a70a:	f9b5 6006 	ldrsh.w	r6, [r5, #6]
 802a70e:	2e00      	cmp	r6, #0
 802a710:	dc02      	bgt.n	802a718 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x24>
 802a712:	b009      	add	sp, #36	@ 0x24
 802a714:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802a718:	f04f 0800 	mov.w	r8, #0
 802a71c:	4606      	mov	r6, r0
 802a71e:	f362 080f 	bfi	r8, r2, #0, #16
 802a722:	4608      	mov	r0, r1
 802a724:	460f      	mov	r7, r1
 802a726:	f363 481f 	bfi	r8, r3, #16, #16
 802a72a:	f7e5 fc0b 	bl	800ff44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802a72e:	4681      	mov	r9, r0
 802a730:	4638      	mov	r0, r7
 802a732:	f7e5 fc3b 	bl	800ffac <_ZNK8touchgfx6Bitmap9getHeightEv>
 802a736:	2300      	movs	r3, #0
 802a738:	f369 030f 	bfi	r3, r9, #0, #16
 802a73c:	f360 431f 	bfi	r3, r0, #16, #16
 802a740:	4638      	mov	r0, r7
 802a742:	e9cd 8302 	strd	r8, r3, [sp, #8]
 802a746:	f7e5 fd3b 	bl	80101c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a74a:	280b      	cmp	r0, #11
 802a74c:	d024      	beq.n	802a798 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa4>
 802a74e:	aa04      	add	r2, sp, #16
 802a750:	f10d 0808 	add.w	r8, sp, #8
 802a754:	e898 0003 	ldmia.w	r8, {r0, r1}
 802a758:	e882 0003 	stmia.w	r2, {r0, r1}
 802a75c:	6828      	ldr	r0, [r5, #0]
 802a75e:	6869      	ldr	r1, [r5, #4]
 802a760:	ab06      	add	r3, sp, #24
 802a762:	c303      	stmia	r3!, {r0, r1}
 802a764:	4610      	mov	r0, r2
 802a766:	f7e2 fab3 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a76a:	4641      	mov	r1, r8
 802a76c:	a806      	add	r0, sp, #24
 802a76e:	f7e2 fad7 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a772:	4638      	mov	r0, r7
 802a774:	f7e5 fca0 	bl	80100b8 <_ZNK8touchgfx6Bitmap7getDataEv>
 802a778:	4680      	mov	r8, r0
 802a77a:	4638      	mov	r0, r7
 802a77c:	f7e5 fd20 	bl	80101c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a780:	280d      	cmp	r0, #13
 802a782:	f200 8083 	bhi.w	802a88c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x198>
 802a786:	e8df f000 	tbb	[pc, r0]
 802a78a:	6467      	.short	0x6467
 802a78c:	81818117 	.word	0x81818117
 802a790:	81818181 	.word	0x81818181
 802a794:	6a818181 	.word	0x6a818181
 802a798:	4638      	mov	r0, r7
 802a79a:	f7e5 fc8d 	bl	80100b8 <_ZNK8touchgfx6Bitmap7getDataEv>
 802a79e:	4680      	mov	r8, r0
 802a7a0:	4638      	mov	r0, r7
 802a7a2:	f7e5 fcb9 	bl	8010118 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802a7a6:	4641      	mov	r1, r8
 802a7a8:	4602      	mov	r2, r0
 802a7aa:	e9cd 5400 	strd	r5, r4, [sp]
 802a7ae:	4630      	mov	r0, r6
 802a7b0:	ab02      	add	r3, sp, #8
 802a7b2:	f7ff fe7b 	bl	802a4ac <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 802a7b6:	e7ac      	b.n	802a712 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a7b8:	f04f 0910 	mov.w	r9, #16
 802a7bc:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 802a7c0:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 802a7c4:	4d37      	ldr	r5, [pc, #220]	@ (802a8a4 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b0>)
 802a7c6:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 802a7ca:	440a      	add	r2, r1
 802a7cc:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 802a7d0:	6828      	ldr	r0, [r5, #0]
 802a7d2:	440b      	add	r3, r1
 802a7d4:	f8ad 2018 	strh.w	r2, [sp, #24]
 802a7d8:	f8ad 301a 	strh.w	r3, [sp, #26]
 802a7dc:	2800      	cmp	r0, #0
 802a7de:	d05b      	beq.n	802a898 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a4>
 802a7e0:	f7f6 f9c2 	bl	8020b68 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 802a7e4:	6833      	ldr	r3, [r6, #0]
 802a7e6:	4630      	mov	r0, r6
 802a7e8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 802a7ea:	4798      	blx	r3
 802a7ec:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 802a7f0:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 802a7f4:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 802a7f8:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 802a7fc:	f7e6 fa3c 	bl	8010c78 <nema_set_clip>
 802a800:	2200      	movs	r2, #0
 802a802:	4623      	mov	r3, r4
 802a804:	4611      	mov	r1, r2
 802a806:	4610      	mov	r0, r2
 802a808:	f7e6 fb14 	bl	8010e34 <nema_rgba>
 802a80c:	f7f3 ff96 	bl	801e73c <nema_set_const_color>
 802a810:	2cff      	cmp	r4, #255	@ 0xff
 802a812:	d02a      	beq.n	802a86a <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x176>
 802a814:	f04f 33ff 	mov.w	r3, #4294967295
 802a818:	2201      	movs	r2, #1
 802a81a:	2100      	movs	r1, #0
 802a81c:	4822      	ldr	r0, [pc, #136]	@ (802a8a8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b4>)
 802a81e:	f7f3 fbc7 	bl	801dfb0 <nema_set_blend>
 802a822:	2100      	movs	r1, #0
 802a824:	f04f 34ff 	mov.w	r4, #4294967295
 802a828:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 802a82c:	464b      	mov	r3, r9
 802a82e:	4640      	mov	r0, r8
 802a830:	9101      	str	r1, [sp, #4]
 802a832:	9400      	str	r4, [sp, #0]
 802a834:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 802a838:	f7e6 fb04 	bl	8010e44 <nema_bind_src_tex>
 802a83c:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 802a840:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 802a844:	f7e6 fd58 	bl	80112f8 <nema_blit>
 802a848:	6828      	ldr	r0, [r5, #0]
 802a84a:	b328      	cbz	r0, 802a898 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a4>
 802a84c:	f7f6 f9ac 	bl	8020ba8 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 802a850:	e75f      	b.n	802a712 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a852:	f04f 0939 	mov.w	r9, #57	@ 0x39
 802a856:	e7b1      	b.n	802a7bc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802a858:	f04f 0904 	mov.w	r9, #4
 802a85c:	e7ae      	b.n	802a7bc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802a85e:	4638      	mov	r0, r7
 802a860:	f7e5 fc5a 	bl	8010118 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802a864:	f890 9000 	ldrb.w	r9, [r0]
 802a868:	e7a8      	b.n	802a7bc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802a86a:	4638      	mov	r0, r7
 802a86c:	f7e5 fca8 	bl	80101c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a870:	b120      	cbz	r0, 802a87c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x188>
 802a872:	4638      	mov	r0, r7
 802a874:	f7e5 fca4 	bl	80101c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a878:	2801      	cmp	r0, #1
 802a87a:	d1cb      	bne.n	802a814 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x120>
 802a87c:	2201      	movs	r2, #1
 802a87e:	f04f 33ff 	mov.w	r3, #4294967295
 802a882:	4610      	mov	r0, r2
 802a884:	2100      	movs	r1, #0
 802a886:	f7f3 fb93 	bl	801dfb0 <nema_set_blend>
 802a88a:	e7ca      	b.n	802a822 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x12e>
 802a88c:	4b07      	ldr	r3, [pc, #28]	@ (802a8ac <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>)
 802a88e:	4a08      	ldr	r2, [pc, #32]	@ (802a8b0 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1bc>)
 802a890:	2175      	movs	r1, #117	@ 0x75
 802a892:	4808      	ldr	r0, [pc, #32]	@ (802a8b4 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c0>)
 802a894:	f007 fdf8 	bl	8032488 <__assert_func>
 802a898:	4b07      	ldr	r3, [pc, #28]	@ (802a8b8 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c4>)
 802a89a:	4a08      	ldr	r2, [pc, #32]	@ (802a8bc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c8>)
 802a89c:	217c      	movs	r1, #124	@ 0x7c
 802a89e:	4808      	ldr	r0, [pc, #32]	@ (802a8c0 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1cc>)
 802a8a0:	f007 fdf2 	bl	8032488 <__assert_func>
 802a8a4:	20083364 	.word	0x20083364
 802a8a8:	08000504 	.word	0x08000504
 802a8ac:	0803609c 	.word	0x0803609c
 802a8b0:	08036b44 	.word	0x08036b44
 802a8b4:	08036248 	.word	0x08036248
 802a8b8:	080361a4 	.word	0x080361a4
 802a8bc:	08036a10 	.word	0x08036a10
 802a8c0:	080361cc 	.word	0x080361cc

0802a8c4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 802a8c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a8c8:	b089      	sub	sp, #36	@ 0x24
 802a8ca:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 802a8cc:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 802a8ce:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 802a8d2:	9104      	str	r1, [sp, #16]
 802a8d4:	8809      	ldrh	r1, [r1, #0]
 802a8d6:	fb07 6c04 	mla	ip, r7, r4, r6
 802a8da:	10c8      	asrs	r0, r1, #3
 802a8dc:	120d      	asrs	r5, r1, #8
 802a8de:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802a8e2:	f005 0af8 	and.w	sl, r5, #248	@ 0xf8
 802a8e6:	9002      	str	r0, [sp, #8]
 802a8e8:	00c9      	lsls	r1, r1, #3
 802a8ea:	0200      	lsls	r0, r0, #8
 802a8ec:	b2c9      	uxtb	r1, r1
 802a8ee:	4690      	mov	r8, r2
 802a8f0:	ea40 400a 	orr.w	r0, r0, sl, lsl #16
 802a8f4:	469e      	mov	lr, r3
 802a8f6:	eb02 030c 	add.w	r3, r2, ip
 802a8fa:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 802a8fe:	4308      	orrs	r0, r1
 802a900:	2f00      	cmp	r7, #0
 802a902:	9103      	str	r1, [sp, #12]
 802a904:	9305      	str	r3, [sp, #20]
 802a906:	9007      	str	r0, [sp, #28]
 802a908:	f107 0501 	add.w	r5, r7, #1
 802a90c:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 802a910:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 802a914:	f89d 105c 	ldrb.w	r1, [sp, #92]	@ 0x5c
 802a918:	9200      	str	r2, [sp, #0]
 802a91a:	db02      	blt.n	802a922 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x5e>
 802a91c:	42be      	cmp	r6, r7
 802a91e:	f300 80a3 	bgt.w	802aa68 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1a4>
 802a922:	fa5f fb80 	uxtb.w	fp, r0
 802a926:	af07      	add	r7, sp, #28
 802a928:	465a      	mov	r2, fp
 802a92a:	46b8      	mov	r8, r7
 802a92c:	2d00      	cmp	r5, #0
 802a92e:	db01      	blt.n	802a934 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x70>
 802a930:	42ae      	cmp	r6, r5
 802a932:	dc79      	bgt.n	802aa28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x164>
 802a934:	f10d 0e1c 	add.w	lr, sp, #28
 802a938:	46f1      	mov	r9, lr
 802a93a:	b2c0      	uxtb	r0, r0
 802a93c:	9001      	str	r0, [sp, #4]
 802a93e:	2b0f      	cmp	r3, #15
 802a940:	f200 80ce 	bhi.w	802aae0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802a944:	290f      	cmp	r1, #15
 802a946:	f200 80cb 	bhi.w	802aae0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802a94a:	9c00      	ldr	r4, [sp, #0]
 802a94c:	b29b      	uxth	r3, r3
 802a94e:	43e4      	mvns	r4, r4
 802a950:	b289      	uxth	r1, r1
 802a952:	fb03 f501 	mul.w	r5, r3, r1
 802a956:	011b      	lsls	r3, r3, #4
 802a958:	1b5e      	subs	r6, r3, r5
 802a95a:	b2b6      	uxth	r6, r6
 802a95c:	f897 c002 	ldrb.w	ip, [r7, #2]
 802a960:	ebc5 1101 	rsb	r1, r5, r1, lsl #4
 802a964:	787f      	ldrb	r7, [r7, #1]
 802a966:	fb06 f202 	mul.w	r2, r6, r2
 802a96a:	b289      	uxth	r1, r1
 802a96c:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802a970:	fb06 fc0c 	mul.w	ip, r6, ip
 802a974:	1a5b      	subs	r3, r3, r1
 802a976:	fb06 f607 	mul.w	r6, r6, r7
 802a97a:	b29b      	uxth	r3, r3
 802a97c:	f898 7001 	ldrb.w	r7, [r8, #1]
 802a980:	fb03 220b 	mla	r2, r3, fp, r2
 802a984:	f898 b002 	ldrb.w	fp, [r8, #2]
 802a988:	fb03 6607 	mla	r6, r3, r7, r6
 802a98c:	fb03 cc0b 	mla	ip, r3, fp, ip
 802a990:	f899 8002 	ldrb.w	r8, [r9, #2]
 802a994:	f899 7001 	ldrb.w	r7, [r9, #1]
 802a998:	9b01      	ldr	r3, [sp, #4]
 802a99a:	fb01 cc08 	mla	ip, r1, r8, ip
 802a99e:	fb01 2203 	mla	r2, r1, r3, r2
 802a9a2:	fb01 6607 	mla	r6, r1, r7, r6
 802a9a6:	f89e 8002 	ldrb.w	r8, [lr, #2]
 802a9aa:	f89e 7001 	ldrb.w	r7, [lr, #1]
 802a9ae:	9b03      	ldr	r3, [sp, #12]
 802a9b0:	9902      	ldr	r1, [sp, #8]
 802a9b2:	fb05 2200 	mla	r2, r5, r0, r2
 802a9b6:	b2e4      	uxtb	r4, r4
 802a9b8:	fb05 cc08 	mla	ip, r5, r8, ip
 802a9bc:	fb05 6607 	mla	r6, r5, r7, r6
 802a9c0:	fb13 f004 	smulbb	r0, r3, r4
 802a9c4:	fb1a f304 	smulbb	r3, sl, r4
 802a9c8:	fb11 f404 	smulbb	r4, r1, r4
 802a9cc:	f8bd e000 	ldrh.w	lr, [sp]
 802a9d0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802a9d4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802a9d8:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802a9dc:	fb02 020e 	mla	r2, r2, lr, r0
 802a9e0:	fb0c 330e 	mla	r3, ip, lr, r3
 802a9e4:	fb06 4e0e 	mla	lr, r6, lr, r4
 802a9e8:	fa1f fc83 	uxth.w	ip, r3
 802a9ec:	b292      	uxth	r2, r2
 802a9ee:	fa1f fe8e 	uxth.w	lr, lr
 802a9f2:	f10c 0301 	add.w	r3, ip, #1
 802a9f6:	1c50      	adds	r0, r2, #1
 802a9f8:	f10e 0101 	add.w	r1, lr, #1
 802a9fc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802aa00:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802aa04:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802aa08:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802aa0c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802aa10:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802aa14:	4313      	orrs	r3, r2
 802aa16:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802aa1a:	9a04      	ldr	r2, [sp, #16]
 802aa1c:	ea43 030e 	orr.w	r3, r3, lr
 802aa20:	8013      	strh	r3, [r2, #0]
 802aa22:	b009      	add	sp, #36	@ 0x24
 802aa24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802aa28:	2900      	cmp	r1, #0
 802aa2a:	d036      	beq.n	802aa9a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d6>
 802aa2c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802aa2e:	2d00      	cmp	r5, #0
 802aa30:	db45      	blt.n	802aabe <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1fa>
 802aa32:	42ac      	cmp	r4, r5
 802aa34:	dd43      	ble.n	802aabe <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1fa>
 802aa36:	9d05      	ldr	r5, [sp, #20]
 802aa38:	f815 9004 	ldrb.w	r9, [r5, r4]
 802aa3c:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802aa40:	44f1      	add	r9, lr
 802aa42:	f899 5000 	ldrb.w	r5, [r9]
 802aa46:	9501      	str	r5, [sp, #4]
 802aa48:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802aa4a:	3501      	adds	r5, #1
 802aa4c:	d433      	bmi.n	802aab6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1f2>
 802aa4e:	42ac      	cmp	r4, r5
 802aa50:	dd31      	ble.n	802aab6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1f2>
 802aa52:	2b00      	cmp	r3, #0
 802aa54:	d040      	beq.n	802aad8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x214>
 802aa56:	9805      	ldr	r0, [sp, #20]
 802aa58:	4420      	add	r0, r4
 802aa5a:	7840      	ldrb	r0, [r0, #1]
 802aa5c:	eb00 0440 	add.w	r4, r0, r0, lsl #1
 802aa60:	f81e 0004 	ldrb.w	r0, [lr, r4]
 802aa64:	44a6      	add	lr, r4
 802aa66:	e76a      	b.n	802a93e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x7a>
 802aa68:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802aa6a:	2a00      	cmp	r2, #0
 802aa6c:	db01      	blt.n	802aa72 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ae>
 802aa6e:	4294      	cmp	r4, r2
 802aa70:	dc1b      	bgt.n	802aaaa <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1e6>
 802aa72:	f10d 081c 	add.w	r8, sp, #28
 802aa76:	3201      	adds	r2, #1
 802aa78:	f898 b000 	ldrb.w	fp, [r8]
 802aa7c:	d40a      	bmi.n	802aa94 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>
 802aa7e:	4294      	cmp	r4, r2
 802aa80:	dd08      	ble.n	802aa94 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>
 802aa82:	b1fb      	cbz	r3, 802aac4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x200>
 802aa84:	9a05      	ldr	r2, [sp, #20]
 802aa86:	7857      	ldrb	r7, [r2, #1]
 802aa88:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802aa8c:	f81e 2007 	ldrb.w	r2, [lr, r7]
 802aa90:	4477      	add	r7, lr
 802aa92:	e74b      	b.n	802a92c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x68>
 802aa94:	b2c2      	uxtb	r2, r0
 802aa96:	af07      	add	r7, sp, #28
 802aa98:	e748      	b.n	802a92c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x68>
 802aa9a:	b2c0      	uxtb	r0, r0
 802aa9c:	2b0f      	cmp	r3, #15
 802aa9e:	9001      	str	r0, [sp, #4]
 802aaa0:	d81e      	bhi.n	802aae0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802aaa2:	f10d 0e1c 	add.w	lr, sp, #28
 802aaa6:	46f1      	mov	r9, lr
 802aaa8:	e74f      	b.n	802a94a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x86>
 802aaaa:	f818 800c 	ldrb.w	r8, [r8, ip]
 802aaae:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802aab2:	44f0      	add	r8, lr
 802aab4:	e7df      	b.n	802aa76 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1b2>
 802aab6:	b2c0      	uxtb	r0, r0
 802aab8:	f10d 0e1c 	add.w	lr, sp, #28
 802aabc:	e73f      	b.n	802a93e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x7a>
 802aabe:	f10d 091c 	add.w	r9, sp, #28
 802aac2:	e7be      	b.n	802aa42 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x17e>
 802aac4:	2d00      	cmp	r5, #0
 802aac6:	b2c2      	uxtb	r2, r0
 802aac8:	af07      	add	r7, sp, #28
 802aaca:	f6bf af31 	bge.w	802a930 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6c>
 802aace:	46be      	mov	lr, r7
 802aad0:	46b9      	mov	r9, r7
 802aad2:	4610      	mov	r0, r2
 802aad4:	9201      	str	r2, [sp, #4]
 802aad6:	e735      	b.n	802a944 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802aad8:	b2c0      	uxtb	r0, r0
 802aada:	f10d 0e1c 	add.w	lr, sp, #28
 802aade:	e731      	b.n	802a944 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802aae0:	4b03      	ldr	r3, [pc, #12]	@ (802aaf0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x22c>)
 802aae2:	4a04      	ldr	r2, [pc, #16]	@ (802aaf4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x230>)
 802aae4:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802aae8:	4803      	ldr	r0, [pc, #12]	@ (802aaf8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x234>)
 802aaea:	f007 fccd 	bl	8032488 <__assert_func>
 802aaee:	bf00      	nop
 802aaf0:	0803663c 	.word	0x0803663c
 802aaf4:	08036cb8 	.word	0x08036cb8
 802aaf8:	080367c4 	.word	0x080367c4

0802aafc <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802aafc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ab00:	ed2d 8b08 	vpush	{d8-d11}
 802ab04:	b095      	sub	sp, #84	@ 0x54
 802ab06:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802ab0a:	e9dd 512b 	ldrd	r5, r1, [sp, #172]	@ 0xac
 802ab0e:	e9dd b827 	ldrd	fp, r8, [sp, #156]	@ 0x9c
 802ab12:	686c      	ldr	r4, [r5, #4]
 802ab14:	461a      	mov	r2, r3
 802ab16:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802ab18:	f89d 60bc 	ldrb.w	r6, [sp, #188]	@ 0xbc
 802ab1c:	fb04 1303 	mla	r3, r4, r3, r1
 802ab20:	682c      	ldr	r4, [r5, #0]
 802ab22:	e9cd 0612 	strd	r0, r6, [sp, #72]	@ 0x48
 802ab26:	43f0      	mvns	r0, r6
 802ab28:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802ab2c:	eeb0 aa40 	vmov.f32	s20, s0
 802ab30:	eef0 9a60 	vmov.f32	s19, s1
 802ab34:	eeb0 9a41 	vmov.f32	s18, s2
 802ab38:	eef0 8a62 	vmov.f32	s17, s5
 802ab3c:	eeb0 8a43 	vmov.f32	s16, s6
 802ab40:	eef0 ba44 	vmov.f32	s23, s8
 802ab44:	eeb0 ba64 	vmov.f32	s22, s9
 802ab48:	eef0 aa45 	vmov.f32	s21, s10
 802ab4c:	469a      	mov	sl, r3
 802ab4e:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 802ab50:	9d2e      	ldr	r5, [sp, #184]	@ 0xb8
 802ab52:	6849      	ldr	r1, [r1, #4]
 802ab54:	682d      	ldr	r5, [r5, #0]
 802ab56:	3104      	adds	r1, #4
 802ab58:	b2c0      	uxtb	r0, r0
 802ab5a:	9108      	str	r1, [sp, #32]
 802ab5c:	b2b1      	uxth	r1, r6
 802ab5e:	950b      	str	r5, [sp, #44]	@ 0x2c
 802ab60:	900c      	str	r0, [sp, #48]	@ 0x30
 802ab62:	910d      	str	r1, [sp, #52]	@ 0x34
 802ab64:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802ab66:	2b00      	cmp	r3, #0
 802ab68:	dc02      	bgt.n	802ab70 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802ab6a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802ab6c:	2b00      	cmp	r3, #0
 802ab6e:	dd65      	ble.n	802ac3c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802ab70:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802ab72:	2a00      	cmp	r2, #0
 802ab74:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802ab78:	b225      	sxth	r5, r4
 802ab7a:	fa0f f78e 	sxth.w	r7, lr
 802ab7e:	f340 8233 	ble.w	802afe8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ec>
 802ab82:	1e6e      	subs	r6, r5, #1
 802ab84:	f107 3cff 	add.w	ip, r7, #4294967295
 802ab88:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 802ab8c:	e9dd e929 	ldrd	lr, r9, [sp, #164]	@ 0xa4
 802ab90:	ea5f 432b 	movs.w	r3, fp, asr #16
 802ab94:	ea4f 4128 	mov.w	r1, r8, asr #16
 802ab98:	d405      	bmi.n	802aba6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802ab9a:	42b3      	cmp	r3, r6
 802ab9c:	da03      	bge.n	802aba6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802ab9e:	2900      	cmp	r1, #0
 802aba0:	db01      	blt.n	802aba6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802aba2:	4561      	cmp	r1, ip
 802aba4:	db4f      	blt.n	802ac46 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802aba6:	1c58      	adds	r0, r3, #1
 802aba8:	d406      	bmi.n	802abb8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802abaa:	42a8      	cmp	r0, r5
 802abac:	dc04      	bgt.n	802abb8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802abae:	1c48      	adds	r0, r1, #1
 802abb0:	d402      	bmi.n	802abb8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802abb2:	42b8      	cmp	r0, r7
 802abb4:	f340 817e 	ble.w	802aeb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b8>
 802abb8:	3a01      	subs	r2, #1
 802abba:	44f3      	add	fp, lr
 802abbc:	44c8      	add	r8, r9
 802abbe:	f10a 0a02 	add.w	sl, sl, #2
 802abc2:	d1e5      	bne.n	802ab90 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802abc4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802abc6:	2b00      	cmp	r3, #0
 802abc8:	dd38      	ble.n	802ac3c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802abca:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802abce:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802abd2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802abd6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802abda:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802abde:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802abe2:	ee69 7a27 	vmul.f32	s15, s18, s15
 802abe6:	ee76 6a68 	vsub.f32	s13, s12, s17
 802abea:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802abee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802abf2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802abf6:	ee16 2a90 	vmov	r2, s13
 802abfa:	3b01      	subs	r3, #1
 802abfc:	930e      	str	r3, [sp, #56]	@ 0x38
 802abfe:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802ac00:	fb92 f3f3 	sdiv	r3, r2, r3
 802ac04:	ee17 2a10 	vmov	r2, s14
 802ac08:	eeb0 7a48 	vmov.f32	s14, s16
 802ac0c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ac10:	ee17 8a10 	vmov	r8, s14
 802ac14:	eeb0 7a68 	vmov.f32	s14, s17
 802ac18:	9329      	str	r3, [sp, #164]	@ 0xa4
 802ac1a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802ac1c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ac20:	fb92 f3f3 	sdiv	r3, r2, r3
 802ac24:	932a      	str	r3, [sp, #168]	@ 0xa8
 802ac26:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802ac28:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802ac2a:	ee17 ba10 	vmov	fp, s14
 802ac2e:	eeb0 8a67 	vmov.f32	s16, s15
 802ac32:	eef0 8a46 	vmov.f32	s17, s12
 802ac36:	bf18      	it	ne
 802ac38:	461a      	movne	r2, r3
 802ac3a:	e793      	b.n	802ab64 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802ac3c:	b015      	add	sp, #84	@ 0x54
 802ac3e:	ecbd 8b08 	vpop	{d8-d11}
 802ac42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ac46:	46d4      	mov	ip, sl
 802ac48:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802ac4c:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802ac4e:	1e51      	subs	r1, r2, #1
 802ac50:	fb00 b301 	mla	r3, r0, r1, fp
 802ac54:	141b      	asrs	r3, r3, #16
 802ac56:	910a      	str	r1, [sp, #40]	@ 0x28
 802ac58:	f100 80cc 	bmi.w	802adf4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802ac5c:	42b3      	cmp	r3, r6
 802ac5e:	f280 80c9 	bge.w	802adf4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802ac62:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802ac64:	fb03 8301 	mla	r3, r3, r1, r8
 802ac68:	141b      	asrs	r3, r3, #16
 802ac6a:	f100 80c3 	bmi.w	802adf4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802ac6e:	3f01      	subs	r7, #1
 802ac70:	42bb      	cmp	r3, r7
 802ac72:	f280 80bf 	bge.w	802adf4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802ac76:	2a00      	cmp	r2, #0
 802ac78:	dda4      	ble.n	802abc4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802ac7a:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 802ac7e:	e9cd ca09 	strd	ip, sl, [sp, #36]	@ 0x24
 802ac82:	e08e      	b.n	802ada2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 802ac84:	f891 c001 	ldrb.w	ip, [r1, #1]
 802ac88:	194c      	adds	r4, r1, r5
 802ac8a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802ac8e:	44bc      	add	ip, r7
 802ac90:	2a00      	cmp	r2, #0
 802ac92:	f000 80a6 	beq.w	802ade2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 802ac96:	5d48      	ldrb	r0, [r1, r5]
 802ac98:	7865      	ldrb	r5, [r4, #1]
 802ac9a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802ac9e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802aca2:	4438      	add	r0, r7
 802aca4:	443d      	add	r5, r7
 802aca6:	b29b      	uxth	r3, r3
 802aca8:	b292      	uxth	r2, r2
 802acaa:	fb03 f402 	mul.w	r4, r3, r2
 802acae:	011b      	lsls	r3, r3, #4
 802acb0:	1b19      	subs	r1, r3, r4
 802acb2:	f89c 9000 	ldrb.w	r9, [ip]
 802acb6:	f89c e002 	ldrb.w	lr, [ip, #2]
 802acba:	b289      	uxth	r1, r1
 802acbc:	f89c c001 	ldrb.w	ip, [ip, #1]
 802acc0:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802acc4:	fb01 f909 	mul.w	r9, r1, r9
 802acc8:	b292      	uxth	r2, r2
 802acca:	fb01 fe0e 	mul.w	lr, r1, lr
 802acce:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802acd2:	fb01 f10c 	mul.w	r1, r1, ip
 802acd6:	f817 a00a 	ldrb.w	sl, [r7, sl]
 802acda:	1a9b      	subs	r3, r3, r2
 802acdc:	f896 c002 	ldrb.w	ip, [r6, #2]
 802ace0:	b29b      	uxth	r3, r3
 802ace2:	7876      	ldrb	r6, [r6, #1]
 802ace4:	fb03 990a 	mla	r9, r3, sl, r9
 802ace8:	fb03 ec0c 	mla	ip, r3, ip, lr
 802acec:	fb03 1306 	mla	r3, r3, r6, r1
 802acf0:	7801      	ldrb	r1, [r0, #0]
 802acf2:	f890 e002 	ldrb.w	lr, [r0, #2]
 802acf6:	fb02 9901 	mla	r9, r2, r1, r9
 802acfa:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802acfc:	fb02 ce0e 	mla	lr, r2, lr, ip
 802ad00:	7829      	ldrb	r1, [r5, #0]
 802ad02:	f8b7 c000 	ldrh.w	ip, [r7]
 802ad06:	7840      	ldrb	r0, [r0, #1]
 802ad08:	78ae      	ldrb	r6, [r5, #2]
 802ad0a:	fb02 3200 	mla	r2, r2, r0, r3
 802ad0e:	fb04 9901 	mla	r9, r4, r1, r9
 802ad12:	7868      	ldrb	r0, [r5, #1]
 802ad14:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802ad16:	ea4f 252c 	mov.w	r5, ip, asr #8
 802ad1a:	fb04 ee06 	mla	lr, r4, r6, lr
 802ad1e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802ad22:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802ad26:	fb15 f501 	smulbb	r5, r5, r1
 802ad2a:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802ad2e:	b2db      	uxtb	r3, r3
 802ad30:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 802ad34:	fb13 f301 	smulbb	r3, r3, r1
 802ad38:	fb1c fc01 	smulbb	ip, ip, r1
 802ad3c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802ad3e:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 802ad42:	fb04 2200 	mla	r2, r4, r0, r2
 802ad46:	fb0e 5501 	mla	r5, lr, r1, r5
 802ad4a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802ad4e:	b2ad      	uxth	r5, r5
 802ad50:	fb02 cc01 	mla	ip, r2, r1, ip
 802ad54:	1c6a      	adds	r2, r5, #1
 802ad56:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 802ad5a:	463a      	mov	r2, r7
 802ad5c:	f3c9 2907 	ubfx	r9, r9, #8, #8
 802ad60:	fb09 3301 	mla	r3, r9, r1, r3
 802ad64:	fa1f f18c 	uxth.w	r1, ip
 802ad68:	b29b      	uxth	r3, r3
 802ad6a:	1c5c      	adds	r4, r3, #1
 802ad6c:	1c48      	adds	r0, r1, #1
 802ad6e:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 802ad72:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802ad76:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802ad7a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802ad7e:	0949      	lsrs	r1, r1, #5
 802ad80:	432b      	orrs	r3, r5
 802ad82:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802ad86:	430b      	orrs	r3, r1
 802ad88:	f822 3b02 	strh.w	r3, [r2], #2
 802ad8c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802ad8e:	9209      	str	r2, [sp, #36]	@ 0x24
 802ad90:	449b      	add	fp, r3
 802ad92:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802ad94:	4498      	add	r8, r3
 802ad96:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802ad98:	429a      	cmp	r2, r3
 802ad9a:	d029      	beq.n	802adf0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802ad9c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802ad9e:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802ada2:	ea4f 432b 	mov.w	r3, fp, asr #16
 802ada6:	ea4f 4128 	mov.w	r1, r8, asr #16
 802adaa:	fb05 3101 	mla	r1, r5, r1, r3
 802adae:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802adb0:	9f08      	ldr	r7, [sp, #32]
 802adb2:	f812 a001 	ldrb.w	sl, [r2, r1]
 802adb6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802adba:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802adbe:	4411      	add	r1, r2
 802adc0:	eb07 060a 	add.w	r6, r7, sl
 802adc4:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802adc8:	2b00      	cmp	r3, #0
 802adca:	f47f af5b 	bne.w	802ac84 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802adce:	b15a      	cbz	r2, 802ade8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>
 802add0:	5d48      	ldrb	r0, [r1, r5]
 802add2:	9908      	ldr	r1, [sp, #32]
 802add4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802add8:	4635      	mov	r5, r6
 802adda:	4408      	add	r0, r1
 802addc:	46b4      	mov	ip, r6
 802adde:	460f      	mov	r7, r1
 802ade0:	e761      	b.n	802aca6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802ade2:	4635      	mov	r5, r6
 802ade4:	4630      	mov	r0, r6
 802ade6:	e75e      	b.n	802aca6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802ade8:	4635      	mov	r5, r6
 802adea:	4630      	mov	r0, r6
 802adec:	46b4      	mov	ip, r6
 802adee:	e75a      	b.n	802aca6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802adf0:	469a      	mov	sl, r3
 802adf2:	e6e7      	b.n	802abc4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802adf4:	2a00      	cmp	r2, #0
 802adf6:	f77f aee5 	ble.w	802abc4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802adfa:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802adfc:	ea4f 432b 	mov.w	r3, fp, asr #16
 802ae00:	ea4f 4128 	mov.w	r1, r8, asr #16
 802ae04:	4675      	mov	r5, lr
 802ae06:	46d1      	mov	r9, sl
 802ae08:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 802ae0c:	f8dd a0b8 	ldr.w	sl, [sp, #184]	@ 0xb8
 802ae10:	9609      	str	r6, [sp, #36]	@ 0x24
 802ae12:	2b00      	cmp	r3, #0
 802ae14:	f3cb 3703 	ubfx	r7, fp, #12, #4
 802ae18:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802ae1c:	db27      	blt.n	802ae6e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802ae1e:	1e60      	subs	r0, r4, #1
 802ae20:	4283      	cmp	r3, r0
 802ae22:	da24      	bge.n	802ae6e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802ae24:	2900      	cmp	r1, #0
 802ae26:	db22      	blt.n	802ae6e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802ae28:	1e68      	subs	r0, r5, #1
 802ae2a:	4281      	cmp	r1, r0
 802ae2c:	da1f      	bge.n	802ae6e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802ae2e:	b220      	sxth	r0, r4
 802ae30:	fb01 3300 	mla	r3, r1, r0, r3
 802ae34:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802ae36:	5ccd      	ldrb	r5, [r1, r3]
 802ae38:	440b      	add	r3, r1
 802ae3a:	9908      	ldr	r1, [sp, #32]
 802ae3c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802ae40:	460e      	mov	r6, r1
 802ae42:	eb01 0c05 	add.w	ip, r1, r5
 802ae46:	2f00      	cmp	r7, #0
 802ae48:	d04b      	beq.n	802aee2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802ae4a:	785c      	ldrb	r4, [r3, #1]
 802ae4c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802ae50:	440c      	add	r4, r1
 802ae52:	2a00      	cmp	r2, #0
 802ae54:	f000 80c4 	beq.w	802afe0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802ae58:	1819      	adds	r1, r3, r0
 802ae5a:	7849      	ldrb	r1, [r1, #1]
 802ae5c:	5c18      	ldrb	r0, [r3, r0]
 802ae5e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802ae62:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802ae66:	1873      	adds	r3, r6, r1
 802ae68:	9311      	str	r3, [sp, #68]	@ 0x44
 802ae6a:	4430      	add	r0, r6
 802ae6c:	e03f      	b.n	802aeee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802ae6e:	1c58      	adds	r0, r3, #1
 802ae70:	d405      	bmi.n	802ae7e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802ae72:	42a0      	cmp	r0, r4
 802ae74:	dc03      	bgt.n	802ae7e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802ae76:	1c48      	adds	r0, r1, #1
 802ae78:	d401      	bmi.n	802ae7e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802ae7a:	42a8      	cmp	r0, r5
 802ae7c:	dd20      	ble.n	802aec0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c4>
 802ae7e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802ae80:	f109 0902 	add.w	r9, r9, #2
 802ae84:	449b      	add	fp, r3
 802ae86:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802ae88:	4498      	add	r8, r3
 802ae8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802ae8c:	2b00      	cmp	r3, #0
 802ae8e:	dd08      	ble.n	802aea2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802ae90:	e9da 4502 	ldrd	r4, r5, [sl, #8]
 802ae94:	3b01      	subs	r3, #1
 802ae96:	9309      	str	r3, [sp, #36]	@ 0x24
 802ae98:	ea4f 4128 	mov.w	r1, r8, asr #16
 802ae9c:	ea4f 432b 	mov.w	r3, fp, asr #16
 802aea0:	e7b7      	b.n	802ae12 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802aea2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802aea4:	f8dd a040 	ldr.w	sl, [sp, #64]	@ 0x40
 802aea8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802aeac:	3301      	adds	r3, #1
 802aeae:	eb0a 0a43 	add.w	sl, sl, r3, lsl #1
 802aeb2:	e687      	b.n	802abc4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802aeb4:	3a01      	subs	r2, #1
 802aeb6:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802aeba:	920a      	str	r2, [sp, #40]	@ 0x28
 802aebc:	4616      	mov	r6, r2
 802aebe:	e7a1      	b.n	802ae04 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 802aec0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802aec2:	b22d      	sxth	r5, r5
 802aec4:	b224      	sxth	r4, r4
 802aec6:	e9cd 2005 	strd	r2, r0, [sp, #20]
 802aeca:	e9cd 1703 	strd	r1, r7, [sp, #12]
 802aece:	9302      	str	r3, [sp, #8]
 802aed0:	e9cd 4500 	strd	r4, r5, [sp]
 802aed4:	9b08      	ldr	r3, [sp, #32]
 802aed6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802aed8:	4649      	mov	r1, r9
 802aeda:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802aedc:	f7ff fcf2 	bl	802a8c4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 802aee0:	e7cd      	b.n	802ae7e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802aee2:	2a00      	cmp	r2, #0
 802aee4:	d173      	bne.n	802afce <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d2>
 802aee6:	4660      	mov	r0, ip
 802aee8:	4664      	mov	r4, ip
 802aeea:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802aeee:	b2bb      	uxth	r3, r7
 802aef0:	b292      	uxth	r2, r2
 802aef2:	fb03 f702 	mul.w	r7, r3, r2
 802aef6:	011b      	lsls	r3, r3, #4
 802aef8:	1bd9      	subs	r1, r3, r7
 802aefa:	7826      	ldrb	r6, [r4, #0]
 802aefc:	f894 e002 	ldrb.w	lr, [r4, #2]
 802af00:	7864      	ldrb	r4, [r4, #1]
 802af02:	b289      	uxth	r1, r1
 802af04:	fb01 f606 	mul.w	r6, r1, r6
 802af08:	fb01 fe0e 	mul.w	lr, r1, lr
 802af0c:	ebc7 1202 	rsb	r2, r7, r2, lsl #4
 802af10:	fb01 f104 	mul.w	r1, r1, r4
 802af14:	9c08      	ldr	r4, [sp, #32]
 802af16:	b292      	uxth	r2, r2
 802af18:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802af1c:	5d65      	ldrb	r5, [r4, r5]
 802af1e:	1a9b      	subs	r3, r3, r2
 802af20:	f89c 4002 	ldrb.w	r4, [ip, #2]
 802af24:	f89c c001 	ldrb.w	ip, [ip, #1]
 802af28:	b29b      	uxth	r3, r3
 802af2a:	fb03 e404 	mla	r4, r3, r4, lr
 802af2e:	fb03 6505 	mla	r5, r3, r5, r6
 802af32:	fb03 130c 	mla	r3, r3, ip, r1
 802af36:	f890 c001 	ldrb.w	ip, [r0, #1]
 802af3a:	7801      	ldrb	r1, [r0, #0]
 802af3c:	f890 e002 	ldrb.w	lr, [r0, #2]
 802af40:	fb02 3c0c 	mla	ip, r2, ip, r3
 802af44:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802af46:	fb02 5601 	mla	r6, r2, r1, r5
 802af4a:	fb02 4e0e 	mla	lr, r2, lr, r4
 802af4e:	7899      	ldrb	r1, [r3, #2]
 802af50:	781a      	ldrb	r2, [r3, #0]
 802af52:	785b      	ldrb	r3, [r3, #1]
 802af54:	f8b9 0000 	ldrh.w	r0, [r9]
 802af58:	fb07 c303 	mla	r3, r7, r3, ip
 802af5c:	fb07 6202 	mla	r2, r7, r2, r6
 802af60:	00c5      	lsls	r5, r0, #3
 802af62:	1204      	asrs	r4, r0, #8
 802af64:	fb07 e101 	mla	r1, r7, r1, lr
 802af68:	10c0      	asrs	r0, r0, #3
 802af6a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 802af6c:	b2ed      	uxtb	r5, r5
 802af6e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802af72:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802af76:	fb15 f507 	smulbb	r5, r5, r7
 802af7a:	fb14 f407 	smulbb	r4, r4, r7
 802af7e:	fb10 f007 	smulbb	r0, r0, r7
 802af82:	f3c3 2707 	ubfx	r7, r3, #8, #8
 802af86:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802af88:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802af8c:	461e      	mov	r6, r3
 802af8e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802af92:	fb02 5203 	mla	r2, r2, r3, r5
 802af96:	fb07 0006 	mla	r0, r7, r6, r0
 802af9a:	fb01 4303 	mla	r3, r1, r3, r4
 802af9e:	b281      	uxth	r1, r0
 802afa0:	b294      	uxth	r4, r2
 802afa2:	b29b      	uxth	r3, r3
 802afa4:	1c4a      	adds	r2, r1, #1
 802afa6:	1c5d      	adds	r5, r3, #1
 802afa8:	1c60      	adds	r0, r4, #1
 802afaa:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802afae:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802afb2:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 802afb6:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802afba:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 802afbe:	0952      	lsrs	r2, r2, #5
 802afc0:	430b      	orrs	r3, r1
 802afc2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802afc6:	4313      	orrs	r3, r2
 802afc8:	f8a9 3000 	strh.w	r3, [r9]
 802afcc:	e757      	b.n	802ae7e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802afce:	5c18      	ldrb	r0, [r3, r0]
 802afd0:	9b08      	ldr	r3, [sp, #32]
 802afd2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802afd6:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802afda:	4418      	add	r0, r3
 802afdc:	4664      	mov	r4, ip
 802afde:	e786      	b.n	802aeee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802afe0:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802afe4:	4660      	mov	r0, ip
 802afe6:	e782      	b.n	802aeee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802afe8:	f43f adec 	beq.w	802abc4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802afec:	1e6e      	subs	r6, r5, #1
 802afee:	46d4      	mov	ip, sl
 802aff0:	e62c      	b.n	802ac4c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 802aff2:	bf00      	nop

0802aff4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 802aff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802aff8:	4692      	mov	sl, r2
 802affa:	b083      	sub	sp, #12
 802affc:	880a      	ldrh	r2, [r1, #0]
 802affe:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 802b002:	e9dd 740e 	ldrd	r7, r4, [sp, #56]	@ 0x38
 802b006:	0215      	lsls	r5, r2, #8
 802b008:	0150      	lsls	r0, r2, #5
 802b00a:	fb04 7e0c 	mla	lr, r4, ip, r7
 802b00e:	f400 407c 	and.w	r0, r0, #64512	@ 0xfc00
 802b012:	f405 0578 	and.w	r5, r5, #16252928	@ 0xf80000
 802b016:	00d2      	lsls	r2, r2, #3
 802b018:	4305      	orrs	r5, r0
 802b01a:	b2d2      	uxtb	r2, r2
 802b01c:	4315      	orrs	r5, r2
 802b01e:	2c00      	cmp	r4, #0
 802b020:	9501      	str	r5, [sp, #4]
 802b022:	eb0a 020e 	add.w	r2, sl, lr
 802b026:	f104 0801 	add.w	r8, r4, #1
 802b02a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802b02e:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 802b032:	f89d 0044 	ldrb.w	r0, [sp, #68]	@ 0x44
 802b036:	db01      	blt.n	802b03c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x48>
 802b038:	45a1      	cmp	r9, r4
 802b03a:	dc71      	bgt.n	802b120 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x12c>
 802b03c:	fa5f fa85 	uxtb.w	sl, r5
 802b040:	f10d 0b04 	add.w	fp, sp, #4
 802b044:	4654      	mov	r4, sl
 802b046:	46de      	mov	lr, fp
 802b048:	f1b8 0f00 	cmp.w	r8, #0
 802b04c:	db01      	blt.n	802b052 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5e>
 802b04e:	45c1      	cmp	r9, r8
 802b050:	dc4c      	bgt.n	802b0ec <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xf8>
 802b052:	fa5f f985 	uxtb.w	r9, r5
 802b056:	ab01      	add	r3, sp, #4
 802b058:	464d      	mov	r5, r9
 802b05a:	4698      	mov	r8, r3
 802b05c:	2e0f      	cmp	r6, #15
 802b05e:	f200 809b 	bhi.w	802b198 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b062:	280f      	cmp	r0, #15
 802b064:	f200 8098 	bhi.w	802b198 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b068:	b2b2      	uxth	r2, r6
 802b06a:	b280      	uxth	r0, r0
 802b06c:	fb02 f700 	mul.w	r7, r2, r0
 802b070:	0112      	lsls	r2, r2, #4
 802b072:	f89b c002 	ldrb.w	ip, [fp, #2]
 802b076:	1bd6      	subs	r6, r2, r7
 802b078:	f89b b001 	ldrb.w	fp, [fp, #1]
 802b07c:	b2b6      	uxth	r6, r6
 802b07e:	ebc7 1000 	rsb	r0, r7, r0, lsl #4
 802b082:	fb06 f404 	mul.w	r4, r6, r4
 802b086:	fb06 fc0c 	mul.w	ip, r6, ip
 802b08a:	fb06 f60b 	mul.w	r6, r6, fp
 802b08e:	b280      	uxth	r0, r0
 802b090:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802b094:	f89e b002 	ldrb.w	fp, [lr, #2]
 802b098:	1a12      	subs	r2, r2, r0
 802b09a:	f89e e001 	ldrb.w	lr, [lr, #1]
 802b09e:	b292      	uxth	r2, r2
 802b0a0:	fb02 440a 	mla	r4, r2, sl, r4
 802b0a4:	fb02 660e 	mla	r6, r2, lr, r6
 802b0a8:	fb02 cc0b 	mla	ip, r2, fp, ip
 802b0ac:	f898 a002 	ldrb.w	sl, [r8, #2]
 802b0b0:	f898 8001 	ldrb.w	r8, [r8, #1]
 802b0b4:	fb00 4909 	mla	r9, r0, r9, r4
 802b0b8:	fb00 cc0a 	mla	ip, r0, sl, ip
 802b0bc:	fb00 6008 	mla	r0, r0, r8, r6
 802b0c0:	789e      	ldrb	r6, [r3, #2]
 802b0c2:	785b      	ldrb	r3, [r3, #1]
 802b0c4:	fb07 9905 	mla	r9, r7, r5, r9
 802b0c8:	fb07 c506 	mla	r5, r7, r6, ip
 802b0cc:	fb07 0703 	mla	r7, r7, r3, r0
 802b0d0:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 802b0d4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802b0d8:	097f      	lsrs	r7, r7, #5
 802b0da:	ea45 0509 	orr.w	r5, r5, r9
 802b0de:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802b0e2:	433d      	orrs	r5, r7
 802b0e4:	800d      	strh	r5, [r1, #0]
 802b0e6:	b003      	add	sp, #12
 802b0e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b0ec:	b388      	cbz	r0, 802b152 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x15e>
 802b0ee:	2f00      	cmp	r7, #0
 802b0f0:	db40      	blt.n	802b174 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x180>
 802b0f2:	45bc      	cmp	ip, r7
 802b0f4:	dd3e      	ble.n	802b174 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x180>
 802b0f6:	f812 800c 	ldrb.w	r8, [r2, ip]
 802b0fa:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802b0fe:	4498      	add	r8, r3
 802b100:	3701      	adds	r7, #1
 802b102:	f898 9000 	ldrb.w	r9, [r8]
 802b106:	d432      	bmi.n	802b16e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x17a>
 802b108:	45bc      	cmp	ip, r7
 802b10a:	dd30      	ble.n	802b16e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x17a>
 802b10c:	2e00      	cmp	r6, #0
 802b10e:	d040      	beq.n	802b192 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x19e>
 802b110:	4494      	add	ip, r2
 802b112:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802b116:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802b11a:	5c9d      	ldrb	r5, [r3, r2]
 802b11c:	4413      	add	r3, r2
 802b11e:	e79d      	b.n	802b05c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x68>
 802b120:	2f00      	cmp	r7, #0
 802b122:	db01      	blt.n	802b128 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x134>
 802b124:	45bc      	cmp	ip, r7
 802b126:	dc1c      	bgt.n	802b162 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16e>
 802b128:	f10d 0e04 	add.w	lr, sp, #4
 802b12c:	1c7c      	adds	r4, r7, #1
 802b12e:	f89e a000 	ldrb.w	sl, [lr]
 802b132:	d40a      	bmi.n	802b14a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x156>
 802b134:	45a4      	cmp	ip, r4
 802b136:	dd08      	ble.n	802b14a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x156>
 802b138:	b1fe      	cbz	r6, 802b17a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x186>
 802b13a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802b13e:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802b142:	f813 400b 	ldrb.w	r4, [r3, fp]
 802b146:	449b      	add	fp, r3
 802b148:	e77e      	b.n	802b048 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x54>
 802b14a:	b2ec      	uxtb	r4, r5
 802b14c:	f10d 0b04 	add.w	fp, sp, #4
 802b150:	e77a      	b.n	802b048 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x54>
 802b152:	2e0f      	cmp	r6, #15
 802b154:	fa5f f985 	uxtb.w	r9, r5
 802b158:	d81e      	bhi.n	802b198 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b15a:	ab01      	add	r3, sp, #4
 802b15c:	4698      	mov	r8, r3
 802b15e:	464d      	mov	r5, r9
 802b160:	e782      	b.n	802b068 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x74>
 802b162:	f81a e00e 	ldrb.w	lr, [sl, lr]
 802b166:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802b16a:	449e      	add	lr, r3
 802b16c:	e7de      	b.n	802b12c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802b16e:	b2ed      	uxtb	r5, r5
 802b170:	ab01      	add	r3, sp, #4
 802b172:	e773      	b.n	802b05c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x68>
 802b174:	f10d 0804 	add.w	r8, sp, #4
 802b178:	e7c2      	b.n	802b100 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x10c>
 802b17a:	f1b8 0f00 	cmp.w	r8, #0
 802b17e:	b2ec      	uxtb	r4, r5
 802b180:	f10d 0b04 	add.w	fp, sp, #4
 802b184:	f6bf af63 	bge.w	802b04e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 802b188:	465b      	mov	r3, fp
 802b18a:	46d8      	mov	r8, fp
 802b18c:	4625      	mov	r5, r4
 802b18e:	46a1      	mov	r9, r4
 802b190:	e767      	b.n	802b062 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802b192:	b2ed      	uxtb	r5, r5
 802b194:	ab01      	add	r3, sp, #4
 802b196:	e764      	b.n	802b062 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802b198:	4b03      	ldr	r3, [pc, #12]	@ (802b1a8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1b4>)
 802b19a:	4a04      	ldr	r2, [pc, #16]	@ (802b1ac <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1b8>)
 802b19c:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802b1a0:	4803      	ldr	r0, [pc, #12]	@ (802b1b0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1bc>)
 802b1a2:	f007 f971 	bl	8032488 <__assert_func>
 802b1a6:	bf00      	nop
 802b1a8:	0803663c 	.word	0x0803663c
 802b1ac:	08036cb8 	.word	0x08036cb8
 802b1b0:	080367c4 	.word	0x080367c4

0802b1b4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b1b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b1b8:	ed2d 8b0a 	vpush	{d8-d12}
 802b1bc:	eeb0 aa40 	vmov.f32	s20, s0
 802b1c0:	eef0 9a60 	vmov.f32	s19, s1
 802b1c4:	eeb0 9a41 	vmov.f32	s18, s2
 802b1c8:	eef0 8a62 	vmov.f32	s17, s5
 802b1cc:	eeb0 8a43 	vmov.f32	s16, s6
 802b1d0:	eeb0 ca44 	vmov.f32	s24, s8
 802b1d4:	eef0 ba64 	vmov.f32	s23, s9
 802b1d8:	eeb0 ba45 	vmov.f32	s22, s10
 802b1dc:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802b1e0:	b093      	sub	sp, #76	@ 0x4c
 802b1e2:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802b1e6:	e9dd 412b 	ldrd	r4, r1, [sp, #172]	@ 0xac
 802b1ea:	e9dd 9827 	ldrd	r9, r8, [sp, #156]	@ 0x9c
 802b1ee:	9011      	str	r0, [sp, #68]	@ 0x44
 802b1f0:	461a      	mov	r2, r3
 802b1f2:	6860      	ldr	r0, [r4, #4]
 802b1f4:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802b1f6:	f8dd a0a4 	ldr.w	sl, [sp, #164]	@ 0xa4
 802b1fa:	fb00 1303 	mla	r3, r0, r3, r1
 802b1fe:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 802b200:	6820      	ldr	r0, [r4, #0]
 802b202:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802b204:	6849      	ldr	r1, [r1, #4]
 802b206:	6824      	ldr	r4, [r4, #0]
 802b208:	eb00 0b43 	add.w	fp, r0, r3, lsl #1
 802b20c:	1d0b      	adds	r3, r1, #4
 802b20e:	9409      	str	r4, [sp, #36]	@ 0x24
 802b210:	930c      	str	r3, [sp, #48]	@ 0x30
 802b212:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b214:	2b00      	cmp	r3, #0
 802b216:	dc02      	bgt.n	802b21e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 802b218:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802b21a:	2b00      	cmp	r3, #0
 802b21c:	dd61      	ble.n	802b2e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802b21e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802b220:	2a00      	cmp	r2, #0
 802b222:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802b226:	b225      	sxth	r5, r4
 802b228:	fa0f f78e 	sxth.w	r7, lr
 802b22c:	f340 81d9 	ble.w	802b5e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 802b230:	f8cd e01c 	str.w	lr, [sp, #28]
 802b234:	f8dd e0a8 	ldr.w	lr, [sp, #168]	@ 0xa8
 802b238:	1e6e      	subs	r6, r5, #1
 802b23a:	f107 3cff 	add.w	ip, r7, #4294967295
 802b23e:	ea5f 4329 	movs.w	r3, r9, asr #16
 802b242:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b246:	d405      	bmi.n	802b254 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b248:	42b3      	cmp	r3, r6
 802b24a:	da03      	bge.n	802b254 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b24c:	2900      	cmp	r1, #0
 802b24e:	db01      	blt.n	802b254 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b250:	4561      	cmp	r1, ip
 802b252:	db4b      	blt.n	802b2ec <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802b254:	1c58      	adds	r0, r3, #1
 802b256:	d406      	bmi.n	802b266 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b258:	42a8      	cmp	r0, r5
 802b25a:	dc04      	bgt.n	802b266 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b25c:	1c48      	adds	r0, r1, #1
 802b25e:	d402      	bmi.n	802b266 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b260:	42b8      	cmp	r0, r7
 802b262:	f340 8149 	ble.w	802b4f8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802b266:	3a01      	subs	r2, #1
 802b268:	44d1      	add	r9, sl
 802b26a:	44f0      	add	r8, lr
 802b26c:	f10b 0b02 	add.w	fp, fp, #2
 802b270:	d1e5      	bne.n	802b23e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802b272:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b274:	2b00      	cmp	r3, #0
 802b276:	dd34      	ble.n	802b2e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802b278:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802b27c:	ee79 9aab 	vadd.f32	s19, s19, s23
 802b280:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802b284:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802b288:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802b28c:	ee69 7a27 	vmul.f32	s15, s18, s15
 802b290:	ee76 6a68 	vsub.f32	s13, s12, s17
 802b294:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802b298:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b29c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b2a0:	ee16 2a90 	vmov	r2, s13
 802b2a4:	3b01      	subs	r3, #1
 802b2a6:	930a      	str	r3, [sp, #40]	@ 0x28
 802b2a8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802b2aa:	fb92 faf3 	sdiv	sl, r2, r3
 802b2ae:	ee17 2a10 	vmov	r2, s14
 802b2b2:	eeb0 7a48 	vmov.f32	s14, s16
 802b2b6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b2ba:	ee17 8a10 	vmov	r8, s14
 802b2be:	eeb0 7a68 	vmov.f32	s14, s17
 802b2c2:	fb92 f3f3 	sdiv	r3, r2, r3
 802b2c6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b2ca:	932a      	str	r3, [sp, #168]	@ 0xa8
 802b2cc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802b2ce:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802b2d0:	ee17 9a10 	vmov	r9, s14
 802b2d4:	eeb0 8a67 	vmov.f32	s16, s15
 802b2d8:	eef0 8a46 	vmov.f32	s17, s12
 802b2dc:	bf18      	it	ne
 802b2de:	461a      	movne	r2, r3
 802b2e0:	e797      	b.n	802b212 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 802b2e2:	b013      	add	sp, #76	@ 0x4c
 802b2e4:	ecbd 8b0a 	vpop	{d8-d12}
 802b2e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b2ec:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802b2f0:	f8cd b01c 	str.w	fp, [sp, #28]
 802b2f4:	1e51      	subs	r1, r2, #1
 802b2f6:	fb0a 9301 	mla	r3, sl, r1, r9
 802b2fa:	141b      	asrs	r3, r3, #16
 802b2fc:	9108      	str	r1, [sp, #32]
 802b2fe:	f100 809e 	bmi.w	802b43e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b302:	42b3      	cmp	r3, r6
 802b304:	f280 809b 	bge.w	802b43e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b308:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802b30a:	fb03 8301 	mla	r3, r3, r1, r8
 802b30e:	141b      	asrs	r3, r3, #16
 802b310:	f100 8095 	bmi.w	802b43e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b314:	3f01      	subs	r7, #1
 802b316:	42bb      	cmp	r3, r7
 802b318:	f280 8091 	bge.w	802b43e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b31c:	2a00      	cmp	r2, #0
 802b31e:	dda8      	ble.n	802b272 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b320:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 802b324:	f8cd a0a4 	str.w	sl, [sp, #164]	@ 0xa4
 802b328:	f8cd b020 	str.w	fp, [sp, #32]
 802b32c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802b330:	e060      	b.n	802b3f4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802b332:	784f      	ldrb	r7, [r1, #1]
 802b334:	194c      	adds	r4, r1, r5
 802b336:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802b33a:	4457      	add	r7, sl
 802b33c:	2a00      	cmp	r2, #0
 802b33e:	d075      	beq.n	802b42c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802b340:	5d48      	ldrb	r0, [r1, r5]
 802b342:	7865      	ldrb	r5, [r4, #1]
 802b344:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b348:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802b34c:	4450      	add	r0, sl
 802b34e:	4455      	add	r5, sl
 802b350:	b29b      	uxth	r3, r3
 802b352:	b292      	uxth	r2, r2
 802b354:	fb03 f402 	mul.w	r4, r3, r2
 802b358:	011b      	lsls	r3, r3, #4
 802b35a:	f897 e000 	ldrb.w	lr, [r7]
 802b35e:	f897 c002 	ldrb.w	ip, [r7, #2]
 802b362:	1b19      	subs	r1, r3, r4
 802b364:	787f      	ldrb	r7, [r7, #1]
 802b366:	b289      	uxth	r1, r1
 802b368:	fb01 fc0c 	mul.w	ip, r1, ip
 802b36c:	fb01 fe0e 	mul.w	lr, r1, lr
 802b370:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802b374:	fb01 f107 	mul.w	r1, r1, r7
 802b378:	b292      	uxth	r2, r2
 802b37a:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802b37e:	f81a b00b 	ldrb.w	fp, [sl, fp]
 802b382:	78b7      	ldrb	r7, [r6, #2]
 802b384:	1a9b      	subs	r3, r3, r2
 802b386:	7876      	ldrb	r6, [r6, #1]
 802b388:	b29b      	uxth	r3, r3
 802b38a:	fb03 ee0b 	mla	lr, r3, fp, lr
 802b38e:	fb03 c707 	mla	r7, r3, r7, ip
 802b392:	fb03 1306 	mla	r3, r3, r6, r1
 802b396:	f890 b000 	ldrb.w	fp, [r0]
 802b39a:	f890 c002 	ldrb.w	ip, [r0, #2]
 802b39e:	7841      	ldrb	r1, [r0, #1]
 802b3a0:	fb02 ee0b 	mla	lr, r2, fp, lr
 802b3a4:	fb02 3301 	mla	r3, r2, r1, r3
 802b3a8:	fb02 770c 	mla	r7, r2, ip, r7
 802b3ac:	f895 b000 	ldrb.w	fp, [r5]
 802b3b0:	f895 c002 	ldrb.w	ip, [r5, #2]
 802b3b4:	7869      	ldrb	r1, [r5, #1]
 802b3b6:	fb04 ee0b 	mla	lr, r4, fp, lr
 802b3ba:	fb04 3101 	mla	r1, r4, r1, r3
 802b3be:	fb04 7c0c 	mla	ip, r4, ip, r7
 802b3c2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802b3c4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 802b3c8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 802b3cc:	0949      	lsrs	r1, r1, #5
 802b3ce:	4491      	add	r9, r2
 802b3d0:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 802b3d2:	9b07      	ldr	r3, [sp, #28]
 802b3d4:	ea4c 0e0e 	orr.w	lr, ip, lr
 802b3d8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802b3dc:	ea4e 0e01 	orr.w	lr, lr, r1
 802b3e0:	4490      	add	r8, r2
 802b3e2:	9a08      	ldr	r2, [sp, #32]
 802b3e4:	f823 eb02 	strh.w	lr, [r3], #2
 802b3e8:	4293      	cmp	r3, r2
 802b3ea:	9307      	str	r3, [sp, #28]
 802b3ec:	d025      	beq.n	802b43a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 802b3ee:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802b3f0:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802b3f4:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b3f8:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b3fc:	fb05 3101 	mla	r1, r5, r1, r3
 802b400:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b402:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802b406:	f812 b001 	ldrb.w	fp, [r2, r1]
 802b40a:	4411      	add	r1, r2
 802b40c:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802b410:	eb0a 060b 	add.w	r6, sl, fp
 802b414:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802b418:	2b00      	cmp	r3, #0
 802b41a:	d18a      	bne.n	802b332 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 802b41c:	b14a      	cbz	r2, 802b432 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 802b41e:	5d48      	ldrb	r0, [r1, r5]
 802b420:	4637      	mov	r7, r6
 802b422:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b426:	4635      	mov	r5, r6
 802b428:	4450      	add	r0, sl
 802b42a:	e791      	b.n	802b350 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b42c:	4635      	mov	r5, r6
 802b42e:	4630      	mov	r0, r6
 802b430:	e78e      	b.n	802b350 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b432:	4635      	mov	r5, r6
 802b434:	4630      	mov	r0, r6
 802b436:	4637      	mov	r7, r6
 802b438:	e78a      	b.n	802b350 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b43a:	4693      	mov	fp, r2
 802b43c:	e719      	b.n	802b272 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b43e:	2a00      	cmp	r2, #0
 802b440:	f77f af17 	ble.w	802b272 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b444:	9e08      	ldr	r6, [sp, #32]
 802b446:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b44a:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b44e:	465f      	mov	r7, fp
 802b450:	f8cd b01c 	str.w	fp, [sp, #28]
 802b454:	f8dd b0b8 	ldr.w	fp, [sp, #184]	@ 0xb8
 802b458:	2b00      	cmp	r3, #0
 802b45a:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802b45e:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802b462:	db2a      	blt.n	802b4ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b464:	1e65      	subs	r5, r4, #1
 802b466:	42ab      	cmp	r3, r5
 802b468:	da27      	bge.n	802b4ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b46a:	2900      	cmp	r1, #0
 802b46c:	db25      	blt.n	802b4ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b46e:	f10e 35ff 	add.w	r5, lr, #4294967295
 802b472:	42a9      	cmp	r1, r5
 802b474:	da21      	bge.n	802b4ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b476:	b224      	sxth	r4, r4
 802b478:	fb01 3304 	mla	r3, r1, r4, r3
 802b47c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802b47e:	f811 c003 	ldrb.w	ip, [r1, r3]
 802b482:	440b      	add	r3, r1
 802b484:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802b486:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802b48a:	eb01 0e0c 	add.w	lr, r1, ip
 802b48e:	2800      	cmp	r0, #0
 802b490:	d048      	beq.n	802b524 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802b492:	785d      	ldrb	r5, [r3, #1]
 802b494:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802b498:	440d      	add	r5, r1
 802b49a:	2a00      	cmp	r2, #0
 802b49c:	f000 809e 	beq.w	802b5dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 802b4a0:	1919      	adds	r1, r3, r4
 802b4a2:	7849      	ldrb	r1, [r1, #1]
 802b4a4:	5d1c      	ldrb	r4, [r3, r4]
 802b4a6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b4a8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802b4ac:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802b4b0:	1859      	adds	r1, r3, r1
 802b4b2:	18e3      	adds	r3, r4, r3
 802b4b4:	910f      	str	r1, [sp, #60]	@ 0x3c
 802b4b6:	9310      	str	r3, [sp, #64]	@ 0x40
 802b4b8:	e039      	b.n	802b52e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b4ba:	1c5d      	adds	r5, r3, #1
 802b4bc:	d405      	bmi.n	802b4ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b4be:	42a5      	cmp	r5, r4
 802b4c0:	dc03      	bgt.n	802b4ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b4c2:	1c4d      	adds	r5, r1, #1
 802b4c4:	d401      	bmi.n	802b4ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b4c6:	4575      	cmp	r5, lr
 802b4c8:	dd1c      	ble.n	802b504 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802b4ca:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802b4cc:	2e00      	cmp	r6, #0
 802b4ce:	f107 0702 	add.w	r7, r7, #2
 802b4d2:	44d1      	add	r9, sl
 802b4d4:	4498      	add	r8, r3
 802b4d6:	dd07      	ble.n	802b4e8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
 802b4d8:	e9db 4e02 	ldrd	r4, lr, [fp, #8]
 802b4dc:	3e01      	subs	r6, #1
 802b4de:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b4e2:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b4e6:	e7b7      	b.n	802b458 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802b4e8:	e9dd b307 	ldrd	fp, r3, [sp, #28]
 802b4ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802b4f0:	3301      	adds	r3, #1
 802b4f2:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802b4f6:	e6bc      	b.n	802b272 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b4f8:	3a01      	subs	r2, #1
 802b4fa:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802b4fe:	9208      	str	r2, [sp, #32]
 802b500:	4616      	mov	r6, r2
 802b502:	e7a4      	b.n	802b44e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 802b504:	fa0f f58e 	sxth.w	r5, lr
 802b508:	b224      	sxth	r4, r4
 802b50a:	e9cd 0204 	strd	r0, r2, [sp, #16]
 802b50e:	e9cd 3102 	strd	r3, r1, [sp, #8]
 802b512:	e9cd 4500 	strd	r4, r5, [sp]
 802b516:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b518:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b51a:	4639      	mov	r1, r7
 802b51c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802b51e:	f7ff fd69 	bl	802aff4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 802b522:	e7d2      	b.n	802b4ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b524:	2a00      	cmp	r2, #0
 802b526:	d14f      	bne.n	802b5c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x414>
 802b528:	4675      	mov	r5, lr
 802b52a:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 802b52e:	b283      	uxth	r3, r0
 802b530:	b292      	uxth	r2, r2
 802b532:	fb03 f002 	mul.w	r0, r3, r2
 802b536:	782c      	ldrb	r4, [r5, #0]
 802b538:	011b      	lsls	r3, r3, #4
 802b53a:	940e      	str	r4, [sp, #56]	@ 0x38
 802b53c:	78ac      	ldrb	r4, [r5, #2]
 802b53e:	1a19      	subs	r1, r3, r0
 802b540:	940d      	str	r4, [sp, #52]	@ 0x34
 802b542:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802b544:	b289      	uxth	r1, r1
 802b546:	fb01 f404 	mul.w	r4, r1, r4
 802b54a:	940e      	str	r4, [sp, #56]	@ 0x38
 802b54c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802b54e:	786d      	ldrb	r5, [r5, #1]
 802b550:	fb01 f404 	mul.w	r4, r1, r4
 802b554:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802b558:	fb01 f105 	mul.w	r1, r1, r5
 802b55c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802b55e:	b292      	uxth	r2, r2
 802b560:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802b564:	f815 c00c 	ldrb.w	ip, [r5, ip]
 802b568:	940d      	str	r4, [sp, #52]	@ 0x34
 802b56a:	1a9b      	subs	r3, r3, r2
 802b56c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802b56e:	b29b      	uxth	r3, r3
 802b570:	f89e 5002 	ldrb.w	r5, [lr, #2]
 802b574:	fb03 4c0c 	mla	ip, r3, ip, r4
 802b578:	f89e e001 	ldrb.w	lr, [lr, #1]
 802b57c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802b57e:	fb03 4505 	mla	r5, r3, r5, r4
 802b582:	fb03 130e 	mla	r3, r3, lr, r1
 802b586:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802b588:	78a1      	ldrb	r1, [r4, #2]
 802b58a:	f894 e000 	ldrb.w	lr, [r4]
 802b58e:	7864      	ldrb	r4, [r4, #1]
 802b590:	fb02 5501 	mla	r5, r2, r1, r5
 802b594:	fb02 cc0e 	mla	ip, r2, lr, ip
 802b598:	fb02 3104 	mla	r1, r2, r4, r3
 802b59c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802b59e:	7822      	ldrb	r2, [r4, #0]
 802b5a0:	78a3      	ldrb	r3, [r4, #2]
 802b5a2:	7864      	ldrb	r4, [r4, #1]
 802b5a4:	fb00 cc02 	mla	ip, r0, r2, ip
 802b5a8:	fb00 5303 	mla	r3, r0, r3, r5
 802b5ac:	fb00 1204 	mla	r2, r0, r4, r1
 802b5b0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802b5b4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802b5b8:	0952      	lsrs	r2, r2, #5
 802b5ba:	ea43 030c 	orr.w	r3, r3, ip
 802b5be:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b5c2:	4313      	orrs	r3, r2
 802b5c4:	803b      	strh	r3, [r7, #0]
 802b5c6:	e780      	b.n	802b4ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b5c8:	5d1c      	ldrb	r4, [r3, r4]
 802b5ca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b5cc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802b5d0:	18e3      	adds	r3, r4, r3
 802b5d2:	f8cd e03c 	str.w	lr, [sp, #60]	@ 0x3c
 802b5d6:	9310      	str	r3, [sp, #64]	@ 0x40
 802b5d8:	4675      	mov	r5, lr
 802b5da:	e7a8      	b.n	802b52e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b5dc:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 802b5e0:	e7a5      	b.n	802b52e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b5e2:	f43f ae46 	beq.w	802b272 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b5e6:	1e6e      	subs	r6, r5, #1
 802b5e8:	f8cd b01c 	str.w	fp, [sp, #28]
 802b5ec:	e682      	b.n	802b2f4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802b5ee:	bf00      	nop

0802b5f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 802b5f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b5f4:	b08b      	sub	sp, #44	@ 0x2c
 802b5f6:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	@ 0x50
 802b5fa:	f8b1 c000 	ldrh.w	ip, [r1]
 802b5fe:	e9dd 6416 	ldrd	r6, r4, [sp, #88]	@ 0x58
 802b602:	fb04 6507 	mla	r5, r4, r7, r6
 802b606:	9107      	str	r1, [sp, #28]
 802b608:	ea4f 01ec 	mov.w	r1, ip, asr #3
 802b60c:	ea4f 202c 	mov.w	r0, ip, asr #8
 802b610:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802b614:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802b618:	469a      	mov	sl, r3
 802b61a:	f89d 3068 	ldrb.w	r3, [sp, #104]	@ 0x68
 802b61e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802b622:	9105      	str	r1, [sp, #20]
 802b624:	2c00      	cmp	r4, #0
 802b626:	fa5f f18c 	uxtb.w	r1, ip
 802b62a:	9004      	str	r0, [sp, #16]
 802b62c:	9106      	str	r1, [sp, #24]
 802b62e:	eb02 0e05 	add.w	lr, r2, r5
 802b632:	f104 0801 	add.w	r8, r4, #1
 802b636:	f9bd 9054 	ldrsh.w	r9, [sp, #84]	@ 0x54
 802b63a:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 802b63e:	f89d 0064 	ldrb.w	r0, [sp, #100]	@ 0x64
 802b642:	9308      	str	r3, [sp, #32]
 802b644:	db02      	blt.n	802b64c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802b646:	45a1      	cmp	r9, r4
 802b648:	f300 8119 	bgt.w	802b87e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28e>
 802b64c:	f04f 0c00 	mov.w	ip, #0
 802b650:	4665      	mov	r5, ip
 802b652:	4662      	mov	r2, ip
 802b654:	4664      	mov	r4, ip
 802b656:	f1b8 0f00 	cmp.w	r8, #0
 802b65a:	db02      	blt.n	802b662 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x72>
 802b65c:	45c1      	cmp	r9, r8
 802b65e:	f300 8127 	bgt.w	802b8b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>
 802b662:	f04f 0e00 	mov.w	lr, #0
 802b666:	46f0      	mov	r8, lr
 802b668:	4676      	mov	r6, lr
 802b66a:	46f1      	mov	r9, lr
 802b66c:	290f      	cmp	r1, #15
 802b66e:	f200 815e 	bhi.w	802b92e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b672:	280f      	cmp	r0, #15
 802b674:	f200 815b 	bhi.w	802b92e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b678:	b280      	uxth	r0, r0
 802b67a:	b289      	uxth	r1, r1
 802b67c:	fb00 fa01 	mul.w	sl, r0, r1
 802b680:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 802b684:	b280      	uxth	r0, r0
 802b686:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 802b68a:	fb00 fb08 	mul.w	fp, r0, r8
 802b68e:	fb0a f70e 	mul.w	r7, sl, lr
 802b692:	9301      	str	r3, [sp, #4]
 802b694:	f009 13ff 	and.w	r3, r9, #16711935	@ 0xff00ff
 802b698:	9302      	str	r3, [sp, #8]
 802b69a:	f409 437f 	and.w	r3, r9, #65280	@ 0xff00
 802b69e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b6a2:	9303      	str	r3, [sp, #12]
 802b6a4:	0109      	lsls	r1, r1, #4
 802b6a6:	eba1 090a 	sub.w	r9, r1, sl
 802b6aa:	fa1f f989 	uxth.w	r9, r9
 802b6ae:	fb09 f30c 	mul.w	r3, r9, ip
 802b6b2:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802b6b6:	1a09      	subs	r1, r1, r0
 802b6b8:	b289      	uxth	r1, r1
 802b6ba:	fb01 3305 	mla	r3, r1, r5, r3
 802b6be:	445b      	add	r3, fp
 802b6c0:	443b      	add	r3, r7
 802b6c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b6c6:	2dff      	cmp	r5, #255	@ 0xff
 802b6c8:	9309      	str	r3, [sp, #36]	@ 0x24
 802b6ca:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 802b6ce:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b6d2:	d019      	beq.n	802b708 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x118>
 802b6d4:	fb03 f305 	mul.w	r3, r3, r5
 802b6d8:	fb04 f405 	mul.w	r4, r4, r5
 802b6dc:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 802b6e0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802b6e4:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802b6e8:	f504 7780 	add.w	r7, r4, #256	@ 0x100
 802b6ec:	445b      	add	r3, fp
 802b6ee:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 802b6f2:	0a1b      	lsrs	r3, r3, #8
 802b6f4:	0a24      	lsrs	r4, r4, #8
 802b6f6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802b6fa:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b6fe:	431c      	orrs	r4, r3
 802b700:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 802b704:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b708:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802b70c:	f002 15ff 	and.w	r5, r2, #16711935	@ 0xff00ff
 802b710:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b714:	d018      	beq.n	802b748 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x158>
 802b716:	fb05 f50c 	mul.w	r5, r5, ip
 802b71a:	fb02 f20c 	mul.w	r2, r2, ip
 802b71e:	0a2f      	lsrs	r7, r5, #8
 802b720:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802b724:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 802b728:	f502 7c80 	add.w	ip, r2, #256	@ 0x100
 802b72c:	443d      	add	r5, r7
 802b72e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802b732:	0a2d      	lsrs	r5, r5, #8
 802b734:	0a12      	lsrs	r2, r2, #8
 802b736:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802b73a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b73e:	432a      	orrs	r2, r5
 802b740:	f002 15ff 	and.w	r5, r2, #16711935	@ 0xff00ff
 802b744:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b748:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802b74c:	d01f      	beq.n	802b78e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x19e>
 802b74e:	9f02      	ldr	r7, [sp, #8]
 802b750:	fb07 fb08 	mul.w	fp, r7, r8
 802b754:	9f03      	ldr	r7, [sp, #12]
 802b756:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 802b75a:	fb07 f808 	mul.w	r8, r7, r8
 802b75e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b762:	f508 7780 	add.w	r7, r8, #256	@ 0x100
 802b766:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802b76a:	eb07 2718 	add.w	r7, r7, r8, lsr #8
 802b76e:	44dc      	add	ip, fp
 802b770:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b774:	0a3f      	lsrs	r7, r7, #8
 802b776:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802b77a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b77e:	ea4c 0807 	orr.w	r8, ip, r7
 802b782:	f008 17ff 	and.w	r7, r8, #16711935	@ 0xff00ff
 802b786:	9702      	str	r7, [sp, #8]
 802b788:	f408 477f 	and.w	r7, r8, #65280	@ 0xff00
 802b78c:	9703      	str	r7, [sp, #12]
 802b78e:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802b792:	d01d      	beq.n	802b7d0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1e0>
 802b794:	9f01      	ldr	r7, [sp, #4]
 802b796:	fb06 f60e 	mul.w	r6, r6, lr
 802b79a:	fb07 f80e 	mul.w	r8, r7, lr
 802b79e:	ea4f 2c18 	mov.w	ip, r8, lsr #8
 802b7a2:	f506 7780 	add.w	r7, r6, #256	@ 0x100
 802b7a6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b7aa:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 802b7ae:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 802b7b2:	44e0      	add	r8, ip
 802b7b4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802b7b8:	0a36      	lsrs	r6, r6, #8
 802b7ba:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802b7be:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b7c2:	ea48 0606 	orr.w	r6, r8, r6
 802b7c6:	f006 17ff 	and.w	r7, r6, #16711935	@ 0xff00ff
 802b7ca:	9701      	str	r7, [sp, #4]
 802b7cc:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b7d0:	f8bd e020 	ldrh.w	lr, [sp, #32]
 802b7d4:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802b7d6:	fb05 f509 	mul.w	r5, r5, r9
 802b7da:	fb07 f70e 	mul.w	r7, r7, lr
 802b7de:	f107 0c01 	add.w	ip, r7, #1
 802b7e2:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 802b7e6:	ea6f 2c1c 	mvn.w	ip, ip, lsr #8
 802b7ea:	fb02 f209 	mul.w	r2, r2, r9
 802b7ee:	fb03 5501 	mla	r5, r3, r1, r5
 802b7f2:	fb04 2201 	mla	r2, r4, r1, r2
 802b7f6:	9b02      	ldr	r3, [sp, #8]
 802b7f8:	fa5f fc8c 	uxtb.w	ip, ip
 802b7fc:	fb03 5500 	mla	r5, r3, r0, r5
 802b800:	9b03      	ldr	r3, [sp, #12]
 802b802:	fb03 2200 	mla	r2, r3, r0, r2
 802b806:	9b01      	ldr	r3, [sp, #4]
 802b808:	fb03 550a 	mla	r5, r3, sl, r5
 802b80c:	fb06 2a0a 	mla	sl, r6, sl, r2
 802b810:	9a05      	ldr	r2, [sp, #20]
 802b812:	9b04      	ldr	r3, [sp, #16]
 802b814:	fb12 f10c 	smulbb	r1, r2, ip
 802b818:	9a06      	ldr	r2, [sp, #24]
 802b81a:	0a2e      	lsrs	r6, r5, #8
 802b81c:	fb13 f30c 	smulbb	r3, r3, ip
 802b820:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b824:	fb12 fc0c 	smulbb	ip, r2, ip
 802b828:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b82c:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802b830:	ea46 060a 	orr.w	r6, r6, sl
 802b834:	0c30      	lsrs	r0, r6, #16
 802b836:	f3c6 2207 	ubfx	r2, r6, #8, #8
 802b83a:	b2f6      	uxtb	r6, r6
 802b83c:	fb00 330e 	mla	r3, r0, lr, r3
 802b840:	fb02 120e 	mla	r2, r2, lr, r1
 802b844:	fb06 c60e 	mla	r6, r6, lr, ip
 802b848:	b298      	uxth	r0, r3
 802b84a:	b291      	uxth	r1, r2
 802b84c:	b2b6      	uxth	r6, r6
 802b84e:	1c43      	adds	r3, r0, #1
 802b850:	f106 0e01 	add.w	lr, r6, #1
 802b854:	1c4a      	adds	r2, r1, #1
 802b856:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802b85a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802b85e:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802b862:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 802b866:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802b86a:	0952      	lsrs	r2, r2, #5
 802b86c:	4333      	orrs	r3, r6
 802b86e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b872:	4313      	orrs	r3, r2
 802b874:	9a07      	ldr	r2, [sp, #28]
 802b876:	8013      	strh	r3, [r2, #0]
 802b878:	b00b      	add	sp, #44	@ 0x2c
 802b87a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b87e:	2e00      	cmp	r6, #0
 802b880:	db01      	blt.n	802b886 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x296>
 802b882:	42b7      	cmp	r7, r6
 802b884:	dc3c      	bgt.n	802b900 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x310>
 802b886:	2500      	movs	r5, #0
 802b888:	462c      	mov	r4, r5
 802b88a:	1c72      	adds	r2, r6, #1
 802b88c:	d427      	bmi.n	802b8de <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2ee>
 802b88e:	4297      	cmp	r7, r2
 802b890:	dd25      	ble.n	802b8de <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2ee>
 802b892:	b131      	cbz	r1, 802b8a2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2b2>
 802b894:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802b898:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 802b89c:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 802b8a0:	e6d9      	b.n	802b656 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 802b8a2:	f1b8 0f00 	cmp.w	r8, #0
 802b8a6:	db3b      	blt.n	802b920 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x330>
 802b8a8:	45c1      	cmp	r9, r8
 802b8aa:	dd39      	ble.n	802b920 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x330>
 802b8ac:	468c      	mov	ip, r1
 802b8ae:	460a      	mov	r2, r1
 802b8b0:	b1c8      	cbz	r0, 802b8e6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2f6>
 802b8b2:	2e00      	cmp	r6, #0
 802b8b4:	db2d      	blt.n	802b912 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x322>
 802b8b6:	42b7      	cmp	r7, r6
 802b8b8:	dd2b      	ble.n	802b912 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x322>
 802b8ba:	f81e 8007 	ldrb.w	r8, [lr, r7]
 802b8be:	f85a 9028 	ldr.w	r9, [sl, r8, lsl #2]
 802b8c2:	ea4f 6819 	mov.w	r8, r9, lsr #24
 802b8c6:	3601      	adds	r6, #1
 802b8c8:	d41f      	bmi.n	802b90a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31a>
 802b8ca:	42b7      	cmp	r7, r6
 802b8cc:	dd1d      	ble.n	802b90a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31a>
 802b8ce:	b321      	cbz	r1, 802b91a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x32a>
 802b8d0:	4477      	add	r7, lr
 802b8d2:	787e      	ldrb	r6, [r7, #1]
 802b8d4:	f85a 6026 	ldr.w	r6, [sl, r6, lsl #2]
 802b8d8:	ea4f 6e16 	mov.w	lr, r6, lsr #24
 802b8dc:	e6c6      	b.n	802b66c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x7c>
 802b8de:	f04f 0c00 	mov.w	ip, #0
 802b8e2:	4662      	mov	r2, ip
 802b8e4:	e6b7      	b.n	802b656 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 802b8e6:	290f      	cmp	r1, #15
 802b8e8:	d821      	bhi.n	802b92e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b8ea:	b289      	uxth	r1, r1
 802b8ec:	4682      	mov	sl, r0
 802b8ee:	4607      	mov	r7, r0
 802b8f0:	4683      	mov	fp, r0
 802b8f2:	e9cd 0002 	strd	r0, r0, [sp, #8]
 802b8f6:	4606      	mov	r6, r0
 802b8f8:	9001      	str	r0, [sp, #4]
 802b8fa:	4686      	mov	lr, r0
 802b8fc:	4680      	mov	r8, r0
 802b8fe:	e6d1      	b.n	802b6a4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb4>
 802b900:	5d52      	ldrb	r2, [r2, r5]
 802b902:	f85a 4022 	ldr.w	r4, [sl, r2, lsl #2]
 802b906:	0e25      	lsrs	r5, r4, #24
 802b908:	e7bf      	b.n	802b88a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x29a>
 802b90a:	f04f 0e00 	mov.w	lr, #0
 802b90e:	4676      	mov	r6, lr
 802b910:	e6ac      	b.n	802b66c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x7c>
 802b912:	f04f 0800 	mov.w	r8, #0
 802b916:	46c1      	mov	r9, r8
 802b918:	e7d5      	b.n	802b8c6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2d6>
 802b91a:	460e      	mov	r6, r1
 802b91c:	468e      	mov	lr, r1
 802b91e:	e6a8      	b.n	802b672 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802b920:	460a      	mov	r2, r1
 802b922:	460e      	mov	r6, r1
 802b924:	4689      	mov	r9, r1
 802b926:	468e      	mov	lr, r1
 802b928:	4688      	mov	r8, r1
 802b92a:	468c      	mov	ip, r1
 802b92c:	e6a1      	b.n	802b672 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802b92e:	4b03      	ldr	r3, [pc, #12]	@ (802b93c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x34c>)
 802b930:	4a03      	ldr	r2, [pc, #12]	@ (802b940 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x350>)
 802b932:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802b936:	4803      	ldr	r0, [pc, #12]	@ (802b944 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x354>)
 802b938:	f006 fda6 	bl	8032488 <__assert_func>
 802b93c:	0803663c 	.word	0x0803663c
 802b940:	08036cb8 	.word	0x08036cb8
 802b944:	080367c4 	.word	0x080367c4

0802b948 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b94c:	ed2d 8b08 	vpush	{d8-d11}
 802b950:	b0a9      	sub	sp, #164	@ 0xa4
 802b952:	9c3f      	ldr	r4, [sp, #252]	@ 0xfc
 802b954:	9022      	str	r0, [sp, #136]	@ 0x88
 802b956:	9115      	str	r1, [sp, #84]	@ 0x54
 802b958:	6860      	ldr	r0, [r4, #4]
 802b95a:	9940      	ldr	r1, [sp, #256]	@ 0x100
 802b95c:	9219      	str	r2, [sp, #100]	@ 0x64
 802b95e:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 802b960:	e9dd ba3b 	ldrd	fp, sl, [sp, #236]	@ 0xec
 802b964:	fb00 1202 	mla	r2, r0, r2, r1
 802b968:	6820      	ldr	r0, [r4, #0]
 802b96a:	46d1      	mov	r9, sl
 802b96c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802b970:	46da      	mov	sl, fp
 802b972:	eeb0 aa40 	vmov.f32	s20, s0
 802b976:	eef0 9a60 	vmov.f32	s19, s1
 802b97a:	eeb0 9a41 	vmov.f32	s18, s2
 802b97e:	eef0 8a62 	vmov.f32	s17, s5
 802b982:	eeb0 8a43 	vmov.f32	s16, s6
 802b986:	eef0 ba44 	vmov.f32	s23, s8
 802b98a:	eeb0 ba64 	vmov.f32	s22, s9
 802b98e:	eef0 aa45 	vmov.f32	s21, s10
 802b992:	4693      	mov	fp, r2
 802b994:	9942      	ldr	r1, [sp, #264]	@ 0x108
 802b996:	9d42      	ldr	r5, [sp, #264]	@ 0x108
 802b998:	6849      	ldr	r1, [r1, #4]
 802b99a:	f89d 410c 	ldrb.w	r4, [sp, #268]	@ 0x10c
 802b99e:	3104      	adds	r1, #4
 802b9a0:	682d      	ldr	r5, [r5, #0]
 802b9a2:	910e      	str	r1, [sp, #56]	@ 0x38
 802b9a4:	b2a1      	uxth	r1, r4
 802b9a6:	9423      	str	r4, [sp, #140]	@ 0x8c
 802b9a8:	9511      	str	r5, [sp, #68]	@ 0x44
 802b9aa:	9112      	str	r1, [sp, #72]	@ 0x48
 802b9ac:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802b9ae:	2a00      	cmp	r2, #0
 802b9b0:	dc02      	bgt.n	802b9b8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802b9b2:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802b9b4:	2a00      	cmp	r2, #0
 802b9b6:	dd65      	ble.n	802ba84 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802b9b8:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802b9ba:	2b00      	cmp	r3, #0
 802b9bc:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802b9c0:	b234      	sxth	r4, r6
 802b9c2:	fa0f f78c 	sxth.w	r7, ip
 802b9c6:	f340 8396 	ble.w	802c0f6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ae>
 802b9ca:	1e65      	subs	r5, r4, #1
 802b9cc:	f107 3eff 	add.w	lr, r7, #4294967295
 802b9d0:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802b9d4:	e9dd c83d 	ldrd	ip, r8, [sp, #244]	@ 0xf4
 802b9d8:	ea5f 422a 	movs.w	r2, sl, asr #16
 802b9dc:	ea4f 4129 	mov.w	r1, r9, asr #16
 802b9e0:	d405      	bmi.n	802b9ee <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802b9e2:	42aa      	cmp	r2, r5
 802b9e4:	da03      	bge.n	802b9ee <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802b9e6:	2900      	cmp	r1, #0
 802b9e8:	db01      	blt.n	802b9ee <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802b9ea:	4571      	cmp	r1, lr
 802b9ec:	db4f      	blt.n	802ba8e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 802b9ee:	1c50      	adds	r0, r2, #1
 802b9f0:	d406      	bmi.n	802ba00 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802b9f2:	42a0      	cmp	r0, r4
 802b9f4:	dc04      	bgt.n	802ba00 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802b9f6:	1c48      	adds	r0, r1, #1
 802b9f8:	d402      	bmi.n	802ba00 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802b9fa:	42b8      	cmp	r0, r7
 802b9fc:	f340 834f 	ble.w	802c09e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x756>
 802ba00:	3b01      	subs	r3, #1
 802ba02:	44e2      	add	sl, ip
 802ba04:	44c1      	add	r9, r8
 802ba06:	f10b 0b02 	add.w	fp, fp, #2
 802ba0a:	d1e5      	bne.n	802b9d8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802ba0c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802ba0e:	2b00      	cmp	r3, #0
 802ba10:	dd38      	ble.n	802ba84 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802ba12:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802ba16:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802ba1a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802ba1e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802ba22:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802ba26:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802ba2a:	ee69 7a27 	vmul.f32	s15, s18, s15
 802ba2e:	ee76 6a68 	vsub.f32	s13, s12, s17
 802ba32:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802ba36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ba3a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ba3e:	ee16 2a90 	vmov	r2, s13
 802ba42:	3b01      	subs	r3, #1
 802ba44:	9315      	str	r3, [sp, #84]	@ 0x54
 802ba46:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ba48:	fb92 f3f3 	sdiv	r3, r2, r3
 802ba4c:	ee17 2a10 	vmov	r2, s14
 802ba50:	eeb0 7a48 	vmov.f32	s14, s16
 802ba54:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ba58:	ee17 9a10 	vmov	r9, s14
 802ba5c:	eeb0 7a68 	vmov.f32	s14, s17
 802ba60:	933d      	str	r3, [sp, #244]	@ 0xf4
 802ba62:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ba64:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ba68:	fb92 f3f3 	sdiv	r3, r2, r3
 802ba6c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802ba6e:	933e      	str	r3, [sp, #248]	@ 0xf8
 802ba70:	ee17 aa10 	vmov	sl, s14
 802ba74:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ba76:	eeb0 8a67 	vmov.f32	s16, s15
 802ba7a:	eef0 8a46 	vmov.f32	s17, s12
 802ba7e:	bf08      	it	eq
 802ba80:	4613      	moveq	r3, r2
 802ba82:	e793      	b.n	802b9ac <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 802ba84:	b029      	add	sp, #164	@ 0xa4
 802ba86:	ecbd 8b08 	vpop	{d8-d11}
 802ba8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ba8e:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802ba92:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802ba96:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 802ba98:	1e59      	subs	r1, r3, #1
 802ba9a:	fb00 a201 	mla	r2, r0, r1, sl
 802ba9e:	1412      	asrs	r2, r2, #16
 802baa0:	910d      	str	r1, [sp, #52]	@ 0x34
 802baa2:	f100 8161 	bmi.w	802bd68 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802baa6:	42aa      	cmp	r2, r5
 802baa8:	f280 815e 	bge.w	802bd68 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802baac:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802baae:	fb02 9201 	mla	r2, r2, r1, r9
 802bab2:	1412      	asrs	r2, r2, #16
 802bab4:	f100 8158 	bmi.w	802bd68 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bab8:	3f01      	subs	r7, #1
 802baba:	42ba      	cmp	r2, r7
 802babc:	f280 8154 	bge.w	802bd68 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bac0:	2b00      	cmp	r3, #0
 802bac2:	dda3      	ble.n	802ba0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802bac4:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802bac8:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802bacc:	46d0      	mov	r8, sl
 802bace:	4621      	mov	r1, r4
 802bad0:	e129      	b.n	802bd26 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 802bad2:	f893 c001 	ldrb.w	ip, [r3, #1]
 802bad6:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 802bada:	9513      	str	r5, [sp, #76]	@ 0x4c
 802badc:	0e2d      	lsrs	r5, r5, #24
 802bade:	950a      	str	r5, [sp, #40]	@ 0x28
 802bae0:	b162      	cbz	r2, 802bafc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802bae2:	185d      	adds	r5, r3, r1
 802bae4:	786d      	ldrb	r5, [r5, #1]
 802bae6:	5c5b      	ldrb	r3, [r3, r1]
 802bae8:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802baec:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802baf0:	9116      	str	r1, [sp, #88]	@ 0x58
 802baf2:	9314      	str	r3, [sp, #80]	@ 0x50
 802baf4:	0e09      	lsrs	r1, r1, #24
 802baf6:	0e1b      	lsrs	r3, r3, #24
 802baf8:	910c      	str	r1, [sp, #48]	@ 0x30
 802bafa:	930b      	str	r3, [sp, #44]	@ 0x2c
 802bafc:	b2a4      	uxth	r4, r4
 802bafe:	b292      	uxth	r2, r2
 802bb00:	fb04 f502 	mul.w	r5, r4, r2
 802bb04:	0124      	lsls	r4, r4, #4
 802bb06:	1b66      	subs	r6, r4, r5
 802bb08:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802bb0a:	b2b6      	uxth	r6, r6
 802bb0c:	fb06 f103 	mul.w	r1, r6, r3
 802bb10:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802bb14:	b292      	uxth	r2, r2
 802bb16:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802bb1a:	1a9b      	subs	r3, r3, r2
 802bb1c:	b29b      	uxth	r3, r3
 802bb1e:	fb03 1100 	mla	r1, r3, r0, r1
 802bb22:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802bb24:	fb02 1104 	mla	r1, r2, r4, r1
 802bb28:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802bb2a:	fb05 1104 	mla	r1, r5, r4, r1
 802bb2e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802bb32:	2900      	cmp	r1, #0
 802bb34:	f000 80ea 	beq.w	802bd0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c4>
 802bb38:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802bb3c:	28ff      	cmp	r0, #255	@ 0xff
 802bb3e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802bb42:	940f      	str	r4, [sp, #60]	@ 0x3c
 802bb44:	970d      	str	r7, [sp, #52]	@ 0x34
 802bb46:	d01c      	beq.n	802bb82 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802bb48:	fb04 f400 	mul.w	r4, r4, r0
 802bb4c:	4627      	mov	r7, r4
 802bb4e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802bb50:	fb04 fe00 	mul.w	lr, r4, r0
 802bb54:	0a3c      	lsrs	r4, r7, #8
 802bb56:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bb5a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802bb5e:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802bb62:	4427      	add	r7, r4
 802bb64:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 802bb68:	0a3f      	lsrs	r7, r7, #8
 802bb6a:	0a00      	lsrs	r0, r0, #8
 802bb6c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802bb70:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802bb74:	4307      	orrs	r7, r0
 802bb76:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 802bb7a:	900f      	str	r0, [sp, #60]	@ 0x3c
 802bb7c:	f407 407f 	and.w	r0, r7, #65280	@ 0xff00
 802bb80:	900d      	str	r0, [sp, #52]	@ 0x34
 802bb82:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802bb84:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 802bb88:	f400 4e7f 	and.w	lr, r0, #65280	@ 0xff00
 802bb8c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802bb8e:	28ff      	cmp	r0, #255	@ 0xff
 802bb90:	d01c      	beq.n	802bbcc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 802bb92:	fb0c fc00 	mul.w	ip, ip, r0
 802bb96:	fb0e fe00 	mul.w	lr, lr, r0
 802bb9a:	ea4f 241c 	mov.w	r4, ip, lsr #8
 802bb9e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bba2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802bba6:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802bbaa:	44a4      	add	ip, r4
 802bbac:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802bbb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bbb4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802bbb8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802bbbc:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802bbc0:	ea4c 0e0e 	orr.w	lr, ip, lr
 802bbc4:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 802bbc8:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802bbcc:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802bbce:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 802bbd2:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802bbd6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802bbd8:	28ff      	cmp	r0, #255	@ 0xff
 802bbda:	d01a      	beq.n	802bc12 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 802bbdc:	fb07 f700 	mul.w	r7, r7, r0
 802bbe0:	fb0a fa00 	mul.w	sl, sl, r0
 802bbe4:	0a3c      	lsrs	r4, r7, #8
 802bbe6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bbea:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802bbee:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802bbf2:	4427      	add	r7, r4
 802bbf4:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802bbf8:	0a3f      	lsrs	r7, r7, #8
 802bbfa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802bbfe:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802bc02:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802bc06:	ea47 0a0a 	orr.w	sl, r7, sl
 802bc0a:	f00a 17ff 	and.w	r7, sl, #16711935	@ 0xff00ff
 802bc0e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802bc12:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802bc14:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802bc18:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802bc1c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802bc1e:	2cff      	cmp	r4, #255	@ 0xff
 802bc20:	d01d      	beq.n	802bc5e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802bc22:	fb00 f004 	mul.w	r0, r0, r4
 802bc26:	fb0b fb04 	mul.w	fp, fp, r4
 802bc2a:	0a04      	lsrs	r4, r0, #8
 802bc2c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bc30:	9418      	str	r4, [sp, #96]	@ 0x60
 802bc32:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802bc36:	9417      	str	r4, [sp, #92]	@ 0x5c
 802bc38:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802bc3a:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802bc3e:	4420      	add	r0, r4
 802bc40:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 802bc42:	0a00      	lsrs	r0, r0, #8
 802bc44:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802bc48:	0a24      	lsrs	r4, r4, #8
 802bc4a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802bc4e:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802bc52:	ea40 0b0b 	orr.w	fp, r0, fp
 802bc56:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802bc5a:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802bc5e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802bc60:	fb0c fc06 	mul.w	ip, ip, r6
 802bc64:	fb01 f104 	mul.w	r1, r1, r4
 802bc68:	1c4c      	adds	r4, r1, #1
 802bc6a:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802bc6e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802bc72:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802bc74:	fb0e f606 	mul.w	r6, lr, r6
 802bc78:	fb04 cc03 	mla	ip, r4, r3, ip
 802bc7c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802bc7e:	fb07 cc02 	mla	ip, r7, r2, ip
 802bc82:	fb04 6603 	mla	r6, r4, r3, r6
 802bc86:	fb0a 6602 	mla	r6, sl, r2, r6
 802bc8a:	fb00 cc05 	mla	ip, r0, r5, ip
 802bc8e:	fb0b 6605 	mla	r6, fp, r5, r6
 802bc92:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bc96:	0a36      	lsrs	r6, r6, #8
 802bc98:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802bc9c:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 802bca0:	ea4c 0303 	orr.w	r3, ip, r3
 802bca4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802bca6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802bca8:	0c1f      	lsrs	r7, r3, #16
 802bcaa:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802bcae:	b2db      	uxtb	r3, r3
 802bcb0:	8805      	ldrh	r5, [r0, #0]
 802bcb2:	fb13 f302 	smulbb	r3, r3, r2
 802bcb6:	fb17 f702 	smulbb	r7, r7, r2
 802bcba:	fb16 f602 	smulbb	r6, r6, r2
 802bcbe:	1228      	asrs	r0, r5, #8
 802bcc0:	10ea      	asrs	r2, r5, #3
 802bcc2:	00ed      	lsls	r5, r5, #3
 802bcc4:	b2c9      	uxtb	r1, r1
 802bcc6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802bcca:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802bcce:	b2ed      	uxtb	r5, r5
 802bcd0:	fb00 7001 	mla	r0, r0, r1, r7
 802bcd4:	fb02 6201 	mla	r2, r2, r1, r6
 802bcd8:	fb05 3101 	mla	r1, r5, r1, r3
 802bcdc:	b280      	uxth	r0, r0
 802bcde:	b292      	uxth	r2, r2
 802bce0:	b289      	uxth	r1, r1
 802bce2:	1c43      	adds	r3, r0, #1
 802bce4:	1c4c      	adds	r4, r1, #1
 802bce6:	f102 0c01 	add.w	ip, r2, #1
 802bcea:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802bcee:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802bcf2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802bcf6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802bcfa:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802bcfe:	0952      	lsrs	r2, r2, #5
 802bd00:	4308      	orrs	r0, r1
 802bd02:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802bd06:	4302      	orrs	r2, r0
 802bd08:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802bd0a:	8002      	strh	r2, [r0, #0]
 802bd0c:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 802bd0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802bd10:	4490      	add	r8, r2
 802bd12:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802bd14:	3302      	adds	r3, #2
 802bd16:	4491      	add	r9, r2
 802bd18:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802bd1a:	9309      	str	r3, [sp, #36]	@ 0x24
 802bd1c:	4293      	cmp	r3, r2
 802bd1e:	d021      	beq.n	802bd64 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 802bd20:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802bd22:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802bd26:	ea4f 4228 	mov.w	r2, r8, asr #16
 802bd2a:	ea4f 4329 	mov.w	r3, r9, asr #16
 802bd2e:	fb01 2303 	mla	r3, r1, r3, r2
 802bd32:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802bd34:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802bd36:	5cc2      	ldrb	r2, [r0, r3]
 802bd38:	f3c8 3403 	ubfx	r4, r8, #12, #4
 802bd3c:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802bd40:	4403      	add	r3, r0
 802bd42:	f3c9 3203 	ubfx	r2, r9, #12, #4
 802bd46:	0e38      	lsrs	r0, r7, #24
 802bd48:	2c00      	cmp	r4, #0
 802bd4a:	f47f aec2 	bne.w	802bad2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802bd4e:	2a00      	cmp	r2, #0
 802bd50:	f43f aed4 	beq.w	802bafc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802bd54:	5c5b      	ldrb	r3, [r3, r1]
 802bd56:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802bd58:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802bd5c:	9314      	str	r3, [sp, #80]	@ 0x50
 802bd5e:	0e1b      	lsrs	r3, r3, #24
 802bd60:	930b      	str	r3, [sp, #44]	@ 0x2c
 802bd62:	e6cb      	b.n	802bafc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802bd64:	4693      	mov	fp, r2
 802bd66:	e651      	b.n	802ba0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802bd68:	2b00      	cmp	r3, #0
 802bd6a:	f77f ae4f 	ble.w	802ba0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802bd6e:	f8dd 8034 	ldr.w	r8, [sp, #52]	@ 0x34
 802bd72:	ea4f 422a 	mov.w	r2, sl, asr #16
 802bd76:	ea4f 4129 	mov.w	r1, r9, asr #16
 802bd7a:	2a00      	cmp	r2, #0
 802bd7c:	465f      	mov	r7, fp
 802bd7e:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802bd82:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 802bd84:	e9dd 5b3d 	ldrd	r5, fp, [sp, #244]	@ 0xf4
 802bd88:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802bd8c:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 802bd90:	f2c0 815c 	blt.w	802c04c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802bd94:	1e73      	subs	r3, r6, #1
 802bd96:	429a      	cmp	r2, r3
 802bd98:	f280 8158 	bge.w	802c04c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802bd9c:	2900      	cmp	r1, #0
 802bd9e:	f2c0 8155 	blt.w	802c04c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802bda2:	f10c 33ff 	add.w	r3, ip, #4294967295
 802bda6:	4299      	cmp	r1, r3
 802bda8:	f280 8150 	bge.w	802c04c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802bdac:	b233      	sxth	r3, r6
 802bdae:	fb01 2203 	mla	r2, r1, r3, r2
 802bdb2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802bdb4:	930f      	str	r3, [sp, #60]	@ 0x3c
 802bdb6:	5c8b      	ldrb	r3, [r1, r2]
 802bdb8:	440a      	add	r2, r1
 802bdba:	4616      	mov	r6, r2
 802bdbc:	9210      	str	r2, [sp, #64]	@ 0x40
 802bdbe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802bdc0:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 802bdc4:	0e0b      	lsrs	r3, r1, #24
 802bdc6:	2800      	cmp	r0, #0
 802bdc8:	f000 816f 	beq.w	802c0aa <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x762>
 802bdcc:	f896 c001 	ldrb.w	ip, [r6, #1]
 802bdd0:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802bdd4:	9224      	str	r2, [sp, #144]	@ 0x90
 802bdd6:	0e12      	lsrs	r2, r2, #24
 802bdd8:	921a      	str	r2, [sp, #104]	@ 0x68
 802bdda:	f1be 0f00 	cmp.w	lr, #0
 802bdde:	f040 8172 	bne.w	802c0c6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 802bde2:	b280      	uxth	r0, r0
 802bde4:	fa1f fc8e 	uxth.w	ip, lr
 802bde8:	fb00 f20c 	mul.w	r2, r0, ip
 802bdec:	0106      	lsls	r6, r0, #4
 802bdee:	1ab0      	subs	r0, r6, r2
 802bdf0:	b280      	uxth	r0, r0
 802bdf2:	4686      	mov	lr, r0
 802bdf4:	900f      	str	r0, [sp, #60]	@ 0x3c
 802bdf6:	981a      	ldr	r0, [sp, #104]	@ 0x68
 802bdf8:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 802bdfc:	fb0e f000 	mul.w	r0, lr, r0
 802be00:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802be04:	fa1f fe8c 	uxth.w	lr, ip
 802be08:	eba6 060e 	sub.w	r6, r6, lr
 802be0c:	b2b6      	uxth	r6, r6
 802be0e:	fb06 0003 	mla	r0, r6, r3, r0
 802be12:	9610      	str	r6, [sp, #64]	@ 0x40
 802be14:	9e1b      	ldr	r6, [sp, #108]	@ 0x6c
 802be16:	fb0e 0006 	mla	r0, lr, r6, r0
 802be1a:	9e1c      	ldr	r6, [sp, #112]	@ 0x70
 802be1c:	fb02 0006 	mla	r0, r2, r6, r0
 802be20:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802be24:	9017      	str	r0, [sp, #92]	@ 0x5c
 802be26:	2800      	cmp	r0, #0
 802be28:	f000 80fa 	beq.w	802c020 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802be2c:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 802be30:	2bff      	cmp	r3, #255	@ 0xff
 802be32:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802be36:	9018      	str	r0, [sp, #96]	@ 0x60
 802be38:	911d      	str	r1, [sp, #116]	@ 0x74
 802be3a:	d01b      	beq.n	802be74 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52c>
 802be3c:	fb01 f103 	mul.w	r1, r1, r3
 802be40:	fb00 f003 	mul.w	r0, r0, r3
 802be44:	460b      	mov	r3, r1
 802be46:	0a01      	lsrs	r1, r0, #8
 802be48:	f100 1601 	add.w	r6, r0, #65537	@ 0x10001
 802be4c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802be50:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 802be54:	4431      	add	r1, r6
 802be56:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802be5a:	0a09      	lsrs	r1, r1, #8
 802be5c:	0a1b      	lsrs	r3, r3, #8
 802be5e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802be62:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802be66:	430b      	orrs	r3, r1
 802be68:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802be6c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802be70:	9118      	str	r1, [sp, #96]	@ 0x60
 802be72:	931d      	str	r3, [sp, #116]	@ 0x74
 802be74:	9924      	ldr	r1, [sp, #144]	@ 0x90
 802be76:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 802be78:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802be7c:	2eff      	cmp	r6, #255	@ 0xff
 802be7e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802be82:	931e      	str	r3, [sp, #120]	@ 0x78
 802be84:	911f      	str	r1, [sp, #124]	@ 0x7c
 802be86:	d01b      	beq.n	802bec0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x578>
 802be88:	fb01 f106 	mul.w	r1, r1, r6
 802be8c:	fb03 f306 	mul.w	r3, r3, r6
 802be90:	460e      	mov	r6, r1
 802be92:	0a19      	lsrs	r1, r3, #8
 802be94:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802be98:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802be9c:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 802bea0:	4401      	add	r1, r0
 802bea2:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802bea6:	0a09      	lsrs	r1, r1, #8
 802bea8:	0a1b      	lsrs	r3, r3, #8
 802beaa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802beae:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802beb2:	4319      	orrs	r1, r3
 802beb4:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802beb8:	931e      	str	r3, [sp, #120]	@ 0x78
 802beba:	f401 437f 	and.w	r3, r1, #65280	@ 0xff00
 802bebe:	931f      	str	r3, [sp, #124]	@ 0x7c
 802bec0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802bec2:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802bec6:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 802beca:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802becc:	9120      	str	r1, [sp, #128]	@ 0x80
 802bece:	2bff      	cmp	r3, #255	@ 0xff
 802bed0:	d01c      	beq.n	802bf0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 802bed2:	fb01 f103 	mul.w	r1, r1, r3
 802bed6:	4608      	mov	r0, r1
 802bed8:	fb0c fc03 	mul.w	ip, ip, r3
 802bedc:	0a09      	lsrs	r1, r1, #8
 802bede:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 802bee2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bee6:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802beea:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802beee:	4408      	add	r0, r1
 802bef0:	0a00      	lsrs	r0, r0, #8
 802bef2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bef6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802befa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802befe:	ea40 0c0c 	orr.w	ip, r0, ip
 802bf02:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 802bf06:	9320      	str	r3, [sp, #128]	@ 0x80
 802bf08:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802bf0c:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 802bf0e:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802bf12:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802bf16:	991c      	ldr	r1, [sp, #112]	@ 0x70
 802bf18:	9321      	str	r3, [sp, #132]	@ 0x84
 802bf1a:	29ff      	cmp	r1, #255	@ 0xff
 802bf1c:	d019      	beq.n	802bf52 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60a>
 802bf1e:	fb03 f301 	mul.w	r3, r3, r1
 802bf22:	fb06 f601 	mul.w	r6, r6, r1
 802bf26:	0a19      	lsrs	r1, r3, #8
 802bf28:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bf2c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802bf30:	f506 7080 	add.w	r0, r6, #256	@ 0x100
 802bf34:	4419      	add	r1, r3
 802bf36:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 802bf3a:	0a09      	lsrs	r1, r1, #8
 802bf3c:	0a36      	lsrs	r6, r6, #8
 802bf3e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bf42:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802bf46:	430e      	orrs	r6, r1
 802bf48:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 802bf4c:	9321      	str	r3, [sp, #132]	@ 0x84
 802bf4e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802bf52:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 802bf54:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802bf56:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802bf58:	fb00 f001 	mul.w	r0, r0, r1
 802bf5c:	4601      	mov	r1, r0
 802bf5e:	3001      	adds	r0, #1
 802bf60:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802bf64:	ea6f 2011 	mvn.w	r0, r1, lsr #8
 802bf68:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802bf6a:	9025      	str	r0, [sp, #148]	@ 0x94
 802bf6c:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802bf6e:	fb00 f001 	mul.w	r0, r0, r1
 802bf72:	900f      	str	r0, [sp, #60]	@ 0x3c
 802bf74:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802bf76:	fb00 f001 	mul.w	r0, r0, r1
 802bf7a:	9017      	str	r0, [sp, #92]	@ 0x5c
 802bf7c:	9818      	ldr	r0, [sp, #96]	@ 0x60
 802bf7e:	4601      	mov	r1, r0
 802bf80:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802bf82:	fb01 0003 	mla	r0, r1, r3, r0
 802bf86:	900f      	str	r0, [sp, #60]	@ 0x3c
 802bf88:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802bf8a:	4601      	mov	r1, r0
 802bf8c:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 802bf8e:	fb01 0103 	mla	r1, r1, r3, r0
 802bf92:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802bf94:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802bf96:	fb0c 110e 	mla	r1, ip, lr, r1
 802bf9a:	fb03 000e 	mla	r0, r3, lr, r0
 802bf9e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802bfa0:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 802bfa4:	fb03 0002 	mla	r0, r3, r2, r0
 802bfa8:	fb06 1302 	mla	r3, r6, r2, r1
 802bfac:	0a02      	lsrs	r2, r0, #8
 802bfae:	0a1b      	lsrs	r3, r3, #8
 802bfb0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802bfb4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802bfb8:	4313      	orrs	r3, r2
 802bfba:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802bfbc:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 802bfc0:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802bfc4:	b2db      	uxtb	r3, r3
 802bfc6:	8838      	ldrh	r0, [r7, #0]
 802bfc8:	fb16 f602 	smulbb	r6, r6, r2
 802bfcc:	fb1c fc02 	smulbb	ip, ip, r2
 802bfd0:	fb13 f302 	smulbb	r3, r3, r2
 802bfd4:	1201      	asrs	r1, r0, #8
 802bfd6:	10c2      	asrs	r2, r0, #3
 802bfd8:	00c0      	lsls	r0, r0, #3
 802bfda:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802bfde:	b2c0      	uxtb	r0, r0
 802bfe0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802bfe4:	fb01 cc0e 	mla	ip, r1, lr, ip
 802bfe8:	fb02 620e 	mla	r2, r2, lr, r6
 802bfec:	fb00 330e 	mla	r3, r0, lr, r3
 802bff0:	b296      	uxth	r6, r2
 802bff2:	b29b      	uxth	r3, r3
 802bff4:	fa1f fc8c 	uxth.w	ip, ip
 802bff8:	1c58      	adds	r0, r3, #1
 802bffa:	f10c 0201 	add.w	r2, ip, #1
 802bffe:	1c71      	adds	r1, r6, #1
 802c000:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 802c004:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802c008:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802c00c:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 802c010:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802c014:	094a      	lsrs	r2, r1, #5
 802c016:	4303      	orrs	r3, r0
 802c018:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802c01c:	4313      	orrs	r3, r2
 802c01e:	803b      	strh	r3, [r7, #0]
 802c020:	f1b8 0f00 	cmp.w	r8, #0
 802c024:	f107 0702 	add.w	r7, r7, #2
 802c028:	44aa      	add	sl, r5
 802c02a:	44d9      	add	r9, fp
 802c02c:	dd2e      	ble.n	802c08c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 802c02e:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802c032:	ea4f 422a 	mov.w	r2, sl, asr #16
 802c036:	2a00      	cmp	r2, #0
 802c038:	f108 38ff 	add.w	r8, r8, #4294967295
 802c03c:	ea4f 4129 	mov.w	r1, r9, asr #16
 802c040:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802c044:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 802c048:	f6bf aea4 	bge.w	802bd94 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 802c04c:	1c53      	adds	r3, r2, #1
 802c04e:	d4e7      	bmi.n	802c020 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c050:	42b3      	cmp	r3, r6
 802c052:	dce5      	bgt.n	802c020 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c054:	1c4b      	adds	r3, r1, #1
 802c056:	d4e3      	bmi.n	802c020 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c058:	4563      	cmp	r3, ip
 802c05a:	dce1      	bgt.n	802c020 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c05c:	fa0f f38c 	sxth.w	r3, ip
 802c060:	b236      	sxth	r6, r6
 802c062:	e9cd 6300 	strd	r6, r3, [sp]
 802c066:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802c068:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802c06c:	e9cd e305 	strd	lr, r3, [sp, #20]
 802c070:	9202      	str	r2, [sp, #8]
 802c072:	4639      	mov	r1, r7
 802c074:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802c076:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802c078:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802c07a:	f7ff fab9 	bl	802b5f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802c07e:	f1b8 0f00 	cmp.w	r8, #0
 802c082:	f107 0702 	add.w	r7, r7, #2
 802c086:	44aa      	add	sl, r5
 802c088:	44d9      	add	r9, fp
 802c08a:	dcd0      	bgt.n	802c02e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e6>
 802c08c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802c08e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 802c092:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802c096:	3301      	adds	r3, #1
 802c098:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802c09c:	e4b6      	b.n	802ba0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802c09e:	3b01      	subs	r3, #1
 802c0a0:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802c0a4:	930d      	str	r3, [sp, #52]	@ 0x34
 802c0a6:	4698      	mov	r8, r3
 802c0a8:	e667      	b.n	802bd7a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802c0aa:	f1be 0f00 	cmp.w	lr, #0
 802c0ae:	f43f ae98 	beq.w	802bde2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c0b2:	4632      	mov	r2, r6
 802c0b4:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 802c0b6:	5d92      	ldrb	r2, [r2, r6]
 802c0b8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802c0ba:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 802c0be:	9226      	str	r2, [sp, #152]	@ 0x98
 802c0c0:	0e12      	lsrs	r2, r2, #24
 802c0c2:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c0c4:	e68d      	b.n	802bde2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c0c6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802c0c8:	eb06 0c02 	add.w	ip, r6, r2
 802c0cc:	4632      	mov	r2, r6
 802c0ce:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 802c0d0:	f89c c001 	ldrb.w	ip, [ip, #1]
 802c0d4:	5d92      	ldrb	r2, [r2, r6]
 802c0d6:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802c0d8:	9210      	str	r2, [sp, #64]	@ 0x40
 802c0da:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 802c0de:	920f      	str	r2, [sp, #60]	@ 0x3c
 802c0e0:	9227      	str	r2, [sp, #156]	@ 0x9c
 802c0e2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802c0e4:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 802c0e8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802c0ea:	9626      	str	r6, [sp, #152]	@ 0x98
 802c0ec:	0e12      	lsrs	r2, r2, #24
 802c0ee:	921c      	str	r2, [sp, #112]	@ 0x70
 802c0f0:	0e32      	lsrs	r2, r6, #24
 802c0f2:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c0f4:	e675      	b.n	802bde2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c0f6:	f43f ac89 	beq.w	802ba0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802c0fa:	1e65      	subs	r5, r4, #1
 802c0fc:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802c100:	e4c9      	b.n	802ba96 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 802c102:	bf00      	nop

0802c104 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802c104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c108:	b089      	sub	sp, #36	@ 0x24
 802c10a:	f9bd 8048 	ldrsh.w	r8, [sp, #72]	@ 0x48
 802c10e:	880f      	ldrh	r7, [r1, #0]
 802c110:	e9dd 5014 	ldrd	r5, r0, [sp, #80]	@ 0x50
 802c114:	fb00 5408 	mla	r4, r0, r8, r5
 802c118:	9106      	str	r1, [sp, #24]
 802c11a:	10f9      	asrs	r1, r7, #3
 802c11c:	123e      	asrs	r6, r7, #8
 802c11e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802c122:	00ff      	lsls	r7, r7, #3
 802c124:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 802c128:	9104      	str	r1, [sp, #16]
 802c12a:	2800      	cmp	r0, #0
 802c12c:	b2f9      	uxtb	r1, r7
 802c12e:	9105      	str	r1, [sp, #20]
 802c130:	9603      	str	r6, [sp, #12]
 802c132:	eb02 0704 	add.w	r7, r2, r4
 802c136:	f100 0c01 	add.w	ip, r0, #1
 802c13a:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	@ 0x4c
 802c13e:	f89d e058 	ldrb.w	lr, [sp, #88]	@ 0x58
 802c142:	f89d 105c 	ldrb.w	r1, [sp, #92]	@ 0x5c
 802c146:	db02      	blt.n	802c14e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x4a>
 802c148:	4582      	cmp	sl, r0
 802c14a:	f300 8113 	bgt.w	802c374 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802c14e:	2600      	movs	r6, #0
 802c150:	46b1      	mov	r9, r6
 802c152:	4630      	mov	r0, r6
 802c154:	4634      	mov	r4, r6
 802c156:	f1bc 0f00 	cmp.w	ip, #0
 802c15a:	db02      	blt.n	802c162 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5e>
 802c15c:	45e2      	cmp	sl, ip
 802c15e:	f300 8123 	bgt.w	802c3a8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>
 802c162:	2700      	movs	r7, #0
 802c164:	46bc      	mov	ip, r7
 802c166:	463d      	mov	r5, r7
 802c168:	9702      	str	r7, [sp, #8]
 802c16a:	f1be 0f0f 	cmp.w	lr, #15
 802c16e:	f200 8160 	bhi.w	802c432 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c172:	290f      	cmp	r1, #15
 802c174:	f200 815d 	bhi.w	802c432 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c178:	b289      	uxth	r1, r1
 802c17a:	fa1f f38e 	uxth.w	r3, lr
 802c17e:	fb01 f803 	mul.w	r8, r1, r3
 802c182:	f005 12ff 	and.w	r2, r5, #16711935	@ 0xff00ff
 802c186:	9200      	str	r2, [sp, #0]
 802c188:	9a02      	ldr	r2, [sp, #8]
 802c18a:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 802c18e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c192:	b289      	uxth	r1, r1
 802c194:	9201      	str	r2, [sp, #4]
 802c196:	fb01 fa0c 	mul.w	sl, r1, ip
 802c19a:	9a02      	ldr	r2, [sp, #8]
 802c19c:	fb08 fb07 	mul.w	fp, r8, r7
 802c1a0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802c1a4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c1a8:	9202      	str	r2, [sp, #8]
 802c1aa:	011b      	lsls	r3, r3, #4
 802c1ac:	eba3 0e08 	sub.w	lr, r3, r8
 802c1b0:	fa1f fe8e 	uxth.w	lr, lr
 802c1b4:	fb0e f206 	mul.w	r2, lr, r6
 802c1b8:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802c1bc:	1a5b      	subs	r3, r3, r1
 802c1be:	b29b      	uxth	r3, r3
 802c1c0:	fb03 2209 	mla	r2, r3, r9, r2
 802c1c4:	4452      	add	r2, sl
 802c1c6:	445a      	add	r2, fp
 802c1c8:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802c1cc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 802c1d0:	9207      	str	r2, [sp, #28]
 802c1d2:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802c1d6:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c1da:	d019      	beq.n	802c210 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x10c>
 802c1dc:	fb02 f209 	mul.w	r2, r2, r9
 802c1e0:	fb04 f409 	mul.w	r4, r4, r9
 802c1e4:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 802c1e8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c1ec:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802c1f0:	f504 7a80 	add.w	sl, r4, #256	@ 0x100
 802c1f4:	445a      	add	r2, fp
 802c1f6:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 802c1fa:	0a12      	lsrs	r2, r2, #8
 802c1fc:	0a24      	lsrs	r4, r4, #8
 802c1fe:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c202:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c206:	4314      	orrs	r4, r2
 802c208:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802c20c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c210:	2eff      	cmp	r6, #255	@ 0xff
 802c212:	f000 1aff 	and.w	sl, r0, #16711935	@ 0xff00ff
 802c216:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c21a:	d01b      	beq.n	802c254 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 802c21c:	fb0a fa06 	mul.w	sl, sl, r6
 802c220:	fb00 f006 	mul.w	r0, r0, r6
 802c224:	ea4f 2b1a 	mov.w	fp, sl, lsr #8
 802c228:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c22c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802c230:	f500 7980 	add.w	r9, r0, #256	@ 0x100
 802c234:	44da      	add	sl, fp
 802c236:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 802c23a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c23e:	0a00      	lsrs	r0, r0, #8
 802c240:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802c244:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c248:	ea4a 0000 	orr.w	r0, sl, r0
 802c24c:	f000 1aff 	and.w	sl, r0, #16711935	@ 0xff00ff
 802c250:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c254:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802c258:	d020      	beq.n	802c29c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x198>
 802c25a:	9e01      	ldr	r6, [sp, #4]
 802c25c:	fb06 fb0c 	mul.w	fp, r6, ip
 802c260:	9e02      	ldr	r6, [sp, #8]
 802c262:	ea4f 291b 	mov.w	r9, fp, lsr #8
 802c266:	fb06 fc0c 	mul.w	ip, r6, ip
 802c26a:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802c26e:	f50c 7680 	add.w	r6, ip, #256	@ 0x100
 802c272:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802c276:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 802c27a:	44cb      	add	fp, r9
 802c27c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802c280:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c284:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c288:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c28c:	ea4b 0c0c 	orr.w	ip, fp, ip
 802c290:	f00c 16ff 	and.w	r6, ip, #16711935	@ 0xff00ff
 802c294:	9601      	str	r6, [sp, #4]
 802c296:	f40c 467f 	and.w	r6, ip, #65280	@ 0xff00
 802c29a:	9602      	str	r6, [sp, #8]
 802c29c:	2fff      	cmp	r7, #255	@ 0xff
 802c29e:	d01d      	beq.n	802c2dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1d8>
 802c2a0:	9e00      	ldr	r6, [sp, #0]
 802c2a2:	fb05 f507 	mul.w	r5, r5, r7
 802c2a6:	fb06 fb07 	mul.w	fp, r6, r7
 802c2aa:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 802c2ae:	f505 7680 	add.w	r6, r5, #256	@ 0x100
 802c2b2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802c2b6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802c2ba:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 802c2be:	44e3      	add	fp, ip
 802c2c0:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802c2c4:	0a2d      	lsrs	r5, r5, #8
 802c2c6:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c2ca:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c2ce:	ea4b 0505 	orr.w	r5, fp, r5
 802c2d2:	f005 16ff 	and.w	r6, r5, #16711935	@ 0xff00ff
 802c2d6:	9600      	str	r6, [sp, #0]
 802c2d8:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c2dc:	9e07      	ldr	r6, [sp, #28]
 802c2de:	fb0a fa0e 	mul.w	sl, sl, lr
 802c2e2:	43f7      	mvns	r7, r6
 802c2e4:	fb00 f00e 	mul.w	r0, r0, lr
 802c2e8:	fb02 aa03 	mla	sl, r2, r3, sl
 802c2ec:	fb04 0003 	mla	r0, r4, r3, r0
 802c2f0:	9b01      	ldr	r3, [sp, #4]
 802c2f2:	b2ff      	uxtb	r7, r7
 802c2f4:	fb03 aa01 	mla	sl, r3, r1, sl
 802c2f8:	9b02      	ldr	r3, [sp, #8]
 802c2fa:	fb03 0c01 	mla	ip, r3, r1, r0
 802c2fe:	9b00      	ldr	r3, [sp, #0]
 802c300:	9803      	ldr	r0, [sp, #12]
 802c302:	fb03 aa08 	mla	sl, r3, r8, sl
 802c306:	9b05      	ldr	r3, [sp, #20]
 802c308:	9904      	ldr	r1, [sp, #16]
 802c30a:	fb03 f307 	mul.w	r3, r3, r7
 802c30e:	fb00 f007 	mul.w	r0, r0, r7
 802c312:	fb01 f107 	mul.w	r1, r1, r7
 802c316:	461f      	mov	r7, r3
 802c318:	fb05 c808 	mla	r8, r5, r8, ip
 802c31c:	ea4f 251a 	mov.w	r5, sl, lsr #8
 802c320:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802c324:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802c328:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802c32c:	ea45 0508 	orr.w	r5, r5, r8
 802c330:	f100 0c01 	add.w	ip, r0, #1
 802c334:	1c4e      	adds	r6, r1, #1
 802c336:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802c33a:	0c2c      	lsrs	r4, r5, #16
 802c33c:	f3c5 2207 	ubfx	r2, r5, #8, #8
 802c340:	1c78      	adds	r0, r7, #1
 802c342:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 802c346:	4b3e      	ldr	r3, [pc, #248]	@ (802c440 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x33c>)
 802c348:	eb04 241c 	add.w	r4, r4, ip, lsr #8
 802c34c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 802c350:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802c354:	b2ed      	uxtb	r5, r5
 802c356:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 802c35a:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 802c35e:	00d2      	lsls	r2, r2, #3
 802c360:	ea43 05d5 	orr.w	r5, r3, r5, lsr #3
 802c364:	f402 63fc 	and.w	r3, r2, #2016	@ 0x7e0
 802c368:	431d      	orrs	r5, r3
 802c36a:	9b06      	ldr	r3, [sp, #24]
 802c36c:	801d      	strh	r5, [r3, #0]
 802c36e:	b009      	add	sp, #36	@ 0x24
 802c370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c374:	2d00      	cmp	r5, #0
 802c376:	db01      	blt.n	802c37c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x278>
 802c378:	45a8      	cmp	r8, r5
 802c37a:	dc41      	bgt.n	802c400 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2fc>
 802c37c:	f04f 0900 	mov.w	r9, #0
 802c380:	464c      	mov	r4, r9
 802c382:	1c6a      	adds	r2, r5, #1
 802c384:	d42a      	bmi.n	802c3dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d8>
 802c386:	4590      	cmp	r8, r2
 802c388:	dd28      	ble.n	802c3dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d8>
 802c38a:	f1be 0f00 	cmp.w	lr, #0
 802c38e:	d004      	beq.n	802c39a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x296>
 802c390:	787a      	ldrb	r2, [r7, #1]
 802c392:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802c396:	0e06      	lsrs	r6, r0, #24
 802c398:	e6dd      	b.n	802c156 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x52>
 802c39a:	f1bc 0f00 	cmp.w	ip, #0
 802c39e:	db40      	blt.n	802c422 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x31e>
 802c3a0:	45e2      	cmp	sl, ip
 802c3a2:	dd3e      	ble.n	802c422 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x31e>
 802c3a4:	4676      	mov	r6, lr
 802c3a6:	4670      	mov	r0, lr
 802c3a8:	b1d9      	cbz	r1, 802c3e2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2de>
 802c3aa:	2d00      	cmp	r5, #0
 802c3ac:	db31      	blt.n	802c412 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x30e>
 802c3ae:	45a8      	cmp	r8, r5
 802c3b0:	dd2f      	ble.n	802c412 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x30e>
 802c3b2:	f817 2008 	ldrb.w	r2, [r7, r8]
 802c3b6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802c3ba:	9202      	str	r2, [sp, #8]
 802c3bc:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 802c3c0:	3501      	adds	r5, #1
 802c3c2:	d423      	bmi.n	802c40c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x308>
 802c3c4:	45a8      	cmp	r8, r5
 802c3c6:	dd21      	ble.n	802c40c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x308>
 802c3c8:	f1be 0f00 	cmp.w	lr, #0
 802c3cc:	d026      	beq.n	802c41c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x318>
 802c3ce:	44b8      	add	r8, r7
 802c3d0:	f898 5001 	ldrb.w	r5, [r8, #1]
 802c3d4:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
 802c3d8:	0e2f      	lsrs	r7, r5, #24
 802c3da:	e6c6      	b.n	802c16a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 802c3dc:	2600      	movs	r6, #0
 802c3de:	4630      	mov	r0, r6
 802c3e0:	e6b9      	b.n	802c156 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x52>
 802c3e2:	f1be 0f0f 	cmp.w	lr, #15
 802c3e6:	d824      	bhi.n	802c432 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c3e8:	fa1f f38e 	uxth.w	r3, lr
 802c3ec:	4688      	mov	r8, r1
 802c3ee:	468b      	mov	fp, r1
 802c3f0:	468a      	mov	sl, r1
 802c3f2:	e9cd 1101 	strd	r1, r1, [sp, #4]
 802c3f6:	460d      	mov	r5, r1
 802c3f8:	9100      	str	r1, [sp, #0]
 802c3fa:	460f      	mov	r7, r1
 802c3fc:	468c      	mov	ip, r1
 802c3fe:	e6d4      	b.n	802c1aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 802c400:	5d12      	ldrb	r2, [r2, r4]
 802c402:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802c406:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802c40a:	e7ba      	b.n	802c382 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27e>
 802c40c:	2700      	movs	r7, #0
 802c40e:	463d      	mov	r5, r7
 802c410:	e6ab      	b.n	802c16a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 802c412:	f04f 0c00 	mov.w	ip, #0
 802c416:	f8cd c008 	str.w	ip, [sp, #8]
 802c41a:	e7d1      	b.n	802c3c0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2bc>
 802c41c:	4675      	mov	r5, lr
 802c41e:	4677      	mov	r7, lr
 802c420:	e6a7      	b.n	802c172 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6e>
 802c422:	4670      	mov	r0, lr
 802c424:	4675      	mov	r5, lr
 802c426:	f8cd e008 	str.w	lr, [sp, #8]
 802c42a:	4677      	mov	r7, lr
 802c42c:	46f4      	mov	ip, lr
 802c42e:	4676      	mov	r6, lr
 802c430:	e69f      	b.n	802c172 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6e>
 802c432:	4b04      	ldr	r3, [pc, #16]	@ (802c444 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x340>)
 802c434:	4a04      	ldr	r2, [pc, #16]	@ (802c448 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x344>)
 802c436:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802c43a:	4804      	ldr	r0, [pc, #16]	@ (802c44c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x348>)
 802c43c:	f006 f824 	bl	8032488 <__assert_func>
 802c440:	fffff800 	.word	0xfffff800
 802c444:	0803663c 	.word	0x0803663c
 802c448:	08036cb8 	.word	0x08036cb8
 802c44c:	080367c4 	.word	0x080367c4

0802c450 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802c450:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c454:	ed2d 8b08 	vpush	{d8-d11}
 802c458:	b0a3      	sub	sp, #140	@ 0x8c
 802c45a:	901e      	str	r0, [sp, #120]	@ 0x78
 802c45c:	9111      	str	r1, [sp, #68]	@ 0x44
 802c45e:	9215      	str	r2, [sp, #84]	@ 0x54
 802c460:	e9dd 4139 	ldrd	r4, r1, [sp, #228]	@ 0xe4
 802c464:	9a3b      	ldr	r2, [sp, #236]	@ 0xec
 802c466:	6860      	ldr	r0, [r4, #4]
 802c468:	e9dd 8b35 	ldrd	r8, fp, [sp, #212]	@ 0xd4
 802c46c:	fb00 1202 	mla	r2, r0, r2, r1
 802c470:	6820      	ldr	r0, [r4, #0]
 802c472:	46c1      	mov	r9, r8
 802c474:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 802c478:	46d8      	mov	r8, fp
 802c47a:	eeb0 aa40 	vmov.f32	s20, s0
 802c47e:	eef0 9a60 	vmov.f32	s19, s1
 802c482:	eeb0 9a41 	vmov.f32	s18, s2
 802c486:	eef0 8a62 	vmov.f32	s17, s5
 802c48a:	eeb0 8a43 	vmov.f32	s16, s6
 802c48e:	eef0 ba44 	vmov.f32	s23, s8
 802c492:	eeb0 ba64 	vmov.f32	s22, s9
 802c496:	eef0 aa45 	vmov.f32	s21, s10
 802c49a:	46d3      	mov	fp, sl
 802c49c:	993c      	ldr	r1, [sp, #240]	@ 0xf0
 802c49e:	9c3c      	ldr	r4, [sp, #240]	@ 0xf0
 802c4a0:	6849      	ldr	r1, [r1, #4]
 802c4a2:	6824      	ldr	r4, [r4, #0]
 802c4a4:	1d0a      	adds	r2, r1, #4
 802c4a6:	940e      	str	r4, [sp, #56]	@ 0x38
 802c4a8:	920b      	str	r2, [sp, #44]	@ 0x2c
 802c4aa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802c4ac:	2a00      	cmp	r2, #0
 802c4ae:	dc02      	bgt.n	802c4b6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802c4b0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802c4b2:	2a00      	cmp	r2, #0
 802c4b4:	dd65      	ble.n	802c582 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802c4b6:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 802c4b8:	2b00      	cmp	r3, #0
 802c4ba:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802c4be:	b234      	sxth	r4, r6
 802c4c0:	fa0f f78c 	sxth.w	r7, ip
 802c4c4:	f340 836d 	ble.w	802cba2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x752>
 802c4c8:	1e65      	subs	r5, r4, #1
 802c4ca:	f107 3eff 	add.w	lr, r7, #4294967295
 802c4ce:	f8cd c01c 	str.w	ip, [sp, #28]
 802c4d2:	e9dd ca37 	ldrd	ip, sl, [sp, #220]	@ 0xdc
 802c4d6:	ea5f 4229 	movs.w	r2, r9, asr #16
 802c4da:	ea4f 4128 	mov.w	r1, r8, asr #16
 802c4de:	d405      	bmi.n	802c4ec <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c4e0:	42aa      	cmp	r2, r5
 802c4e2:	da03      	bge.n	802c4ec <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c4e4:	2900      	cmp	r1, #0
 802c4e6:	db01      	blt.n	802c4ec <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c4e8:	4571      	cmp	r1, lr
 802c4ea:	db4f      	blt.n	802c58c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802c4ec:	1c50      	adds	r0, r2, #1
 802c4ee:	d406      	bmi.n	802c4fe <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c4f0:	42a0      	cmp	r0, r4
 802c4f2:	dc04      	bgt.n	802c4fe <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c4f4:	1c48      	adds	r0, r1, #1
 802c4f6:	d402      	bmi.n	802c4fe <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c4f8:	42b8      	cmp	r0, r7
 802c4fa:	f340 832f 	ble.w	802cb5c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802c4fe:	3b01      	subs	r3, #1
 802c500:	44e1      	add	r9, ip
 802c502:	44d0      	add	r8, sl
 802c504:	f10b 0b02 	add.w	fp, fp, #2
 802c508:	d1e5      	bne.n	802c4d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802c50a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802c50c:	2b00      	cmp	r3, #0
 802c50e:	dd38      	ble.n	802c582 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802c510:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802c514:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802c518:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802c51c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802c520:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802c524:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802c528:	ee69 7a27 	vmul.f32	s15, s18, s15
 802c52c:	ee76 6a68 	vsub.f32	s13, s12, s17
 802c530:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802c534:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802c538:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c53c:	ee16 2a90 	vmov	r2, s13
 802c540:	3b01      	subs	r3, #1
 802c542:	9311      	str	r3, [sp, #68]	@ 0x44
 802c544:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c546:	fb92 f3f3 	sdiv	r3, r2, r3
 802c54a:	ee17 2a10 	vmov	r2, s14
 802c54e:	eeb0 7a48 	vmov.f32	s14, s16
 802c552:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c556:	ee17 8a10 	vmov	r8, s14
 802c55a:	eeb0 7a68 	vmov.f32	s14, s17
 802c55e:	9337      	str	r3, [sp, #220]	@ 0xdc
 802c560:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c562:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c566:	fb92 f3f3 	sdiv	r3, r2, r3
 802c56a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802c56c:	9338      	str	r3, [sp, #224]	@ 0xe0
 802c56e:	ee17 9a10 	vmov	r9, s14
 802c572:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c574:	eeb0 8a67 	vmov.f32	s16, s15
 802c578:	eef0 8a46 	vmov.f32	s17, s12
 802c57c:	bf08      	it	eq
 802c57e:	4613      	moveq	r3, r2
 802c580:	e793      	b.n	802c4aa <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 802c582:	b023      	add	sp, #140	@ 0x8c
 802c584:	ecbd 8b08 	vpop	{d8-d11}
 802c588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c58c:	f8dd c01c 	ldr.w	ip, [sp, #28]
 802c590:	f8cd b01c 	str.w	fp, [sp, #28]
 802c594:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 802c596:	1e59      	subs	r1, r3, #1
 802c598:	fb00 9201 	mla	r2, r0, r1, r9
 802c59c:	1412      	asrs	r2, r2, #16
 802c59e:	910c      	str	r1, [sp, #48]	@ 0x30
 802c5a0:	f100 815e 	bmi.w	802c860 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c5a4:	42aa      	cmp	r2, r5
 802c5a6:	f280 815b 	bge.w	802c860 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c5aa:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802c5ac:	fb02 8201 	mla	r2, r2, r1, r8
 802c5b0:	1412      	asrs	r2, r2, #16
 802c5b2:	f100 8155 	bmi.w	802c860 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c5b6:	3f01      	subs	r7, #1
 802c5b8:	42ba      	cmp	r2, r7
 802c5ba:	f280 8151 	bge.w	802c860 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c5be:	2b00      	cmp	r3, #0
 802c5c0:	dda3      	ble.n	802c50a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802c5c2:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802c5c6:	4621      	mov	r1, r4
 802c5c8:	f8cd b034 	str.w	fp, [sp, #52]	@ 0x34
 802c5cc:	f8cd 90d4 	str.w	r9, [sp, #212]	@ 0xd4
 802c5d0:	464a      	mov	r2, r9
 802c5d2:	464c      	mov	r4, r9
 802c5d4:	e122      	b.n	802c81c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802c5d6:	f893 c001 	ldrb.w	ip, [r3, #1]
 802c5da:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 802c5de:	950f      	str	r5, [sp, #60]	@ 0x3c
 802c5e0:	0e2d      	lsrs	r5, r5, #24
 802c5e2:	9508      	str	r5, [sp, #32]
 802c5e4:	b162      	cbz	r2, 802c600 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802c5e6:	185d      	adds	r5, r3, r1
 802c5e8:	786d      	ldrb	r5, [r5, #1]
 802c5ea:	5c5b      	ldrb	r3, [r3, r1]
 802c5ec:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802c5f0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802c5f4:	9112      	str	r1, [sp, #72]	@ 0x48
 802c5f6:	9310      	str	r3, [sp, #64]	@ 0x40
 802c5f8:	0e09      	lsrs	r1, r1, #24
 802c5fa:	0e1b      	lsrs	r3, r3, #24
 802c5fc:	910a      	str	r1, [sp, #40]	@ 0x28
 802c5fe:	9309      	str	r3, [sp, #36]	@ 0x24
 802c600:	b2a4      	uxth	r4, r4
 802c602:	b292      	uxth	r2, r2
 802c604:	fb04 f502 	mul.w	r5, r4, r2
 802c608:	0124      	lsls	r4, r4, #4
 802c60a:	1b66      	subs	r6, r4, r5
 802c60c:	9b08      	ldr	r3, [sp, #32]
 802c60e:	b2b6      	uxth	r6, r6
 802c610:	fb06 f103 	mul.w	r1, r6, r3
 802c614:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802c618:	b292      	uxth	r2, r2
 802c61a:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802c61e:	1a9b      	subs	r3, r3, r2
 802c620:	b29b      	uxth	r3, r3
 802c622:	fb03 1100 	mla	r1, r3, r0, r1
 802c626:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802c628:	fb02 1104 	mla	r1, r2, r4, r1
 802c62c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802c62e:	fb05 1104 	mla	r1, r5, r4, r1
 802c632:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802c636:	2900      	cmp	r1, #0
 802c638:	f000 80df 	beq.w	802c7fa <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802c63c:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802c640:	28ff      	cmp	r0, #255	@ 0xff
 802c642:	940c      	str	r4, [sp, #48]	@ 0x30
 802c644:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 802c648:	d01a      	beq.n	802c680 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 802c64a:	fb04 f400 	mul.w	r4, r4, r0
 802c64e:	4627      	mov	r7, r4
 802c650:	fb09 fc00 	mul.w	ip, r9, r0
 802c654:	0a24      	lsrs	r4, r4, #8
 802c656:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c65a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802c65e:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 802c662:	4427      	add	r7, r4
 802c664:	eb00 201c 	add.w	r0, r0, ip, lsr #8
 802c668:	0a3f      	lsrs	r7, r7, #8
 802c66a:	0a00      	lsrs	r0, r0, #8
 802c66c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c670:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802c674:	4307      	orrs	r7, r0
 802c676:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 802c67a:	900c      	str	r0, [sp, #48]	@ 0x30
 802c67c:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 802c680:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802c682:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 802c686:	f400 4c7f 	and.w	ip, r0, #65280	@ 0xff00
 802c68a:	9808      	ldr	r0, [sp, #32]
 802c68c:	28ff      	cmp	r0, #255	@ 0xff
 802c68e:	d01a      	beq.n	802c6c6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802c690:	fb07 f700 	mul.w	r7, r7, r0
 802c694:	fb0c fc00 	mul.w	ip, ip, r0
 802c698:	0a3c      	lsrs	r4, r7, #8
 802c69a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c69e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802c6a2:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 802c6a6:	4427      	add	r7, r4
 802c6a8:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 802c6ac:	0a3f      	lsrs	r7, r7, #8
 802c6ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c6b2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802c6b6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c6ba:	ea47 0c0c 	orr.w	ip, r7, ip
 802c6be:	f00c 17ff 	and.w	r7, ip, #16711935	@ 0xff00ff
 802c6c2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c6c6:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802c6c8:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 802c6cc:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802c6d0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802c6d2:	28ff      	cmp	r0, #255	@ 0xff
 802c6d4:	d01c      	beq.n	802c710 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 802c6d6:	fb0e fe00 	mul.w	lr, lr, r0
 802c6da:	fb0a fa00 	mul.w	sl, sl, r0
 802c6de:	ea4f 241e 	mov.w	r4, lr, lsr #8
 802c6e2:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c6e6:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802c6ea:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802c6ee:	44a6      	add	lr, r4
 802c6f0:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802c6f4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802c6f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c6fc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802c700:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802c704:	ea4e 0a0a 	orr.w	sl, lr, sl
 802c708:	f00a 1eff 	and.w	lr, sl, #16711935	@ 0xff00ff
 802c70c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802c710:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802c712:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802c716:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802c71a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802c71c:	2cff      	cmp	r4, #255	@ 0xff
 802c71e:	d01d      	beq.n	802c75c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802c720:	fb00 f004 	mul.w	r0, r0, r4
 802c724:	fb0b fb04 	mul.w	fp, fp, r4
 802c728:	0a04      	lsrs	r4, r0, #8
 802c72a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c72e:	9414      	str	r4, [sp, #80]	@ 0x50
 802c730:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802c734:	9413      	str	r4, [sp, #76]	@ 0x4c
 802c736:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802c738:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802c73c:	4420      	add	r0, r4
 802c73e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802c740:	0a00      	lsrs	r0, r0, #8
 802c742:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802c746:	0a24      	lsrs	r4, r4, #8
 802c748:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802c74c:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802c750:	ea40 0b0b 	orr.w	fp, r0, fp
 802c754:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802c758:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802c75c:	43c9      	mvns	r1, r1
 802c75e:	fb07 f706 	mul.w	r7, r7, r6
 802c762:	fb0c f606 	mul.w	r6, ip, r6
 802c766:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802c768:	fb09 6603 	mla	r6, r9, r3, r6
 802c76c:	fb04 7703 	mla	r7, r4, r3, r7
 802c770:	9b07      	ldr	r3, [sp, #28]
 802c772:	fb0e 7702 	mla	r7, lr, r2, r7
 802c776:	fb0a 6602 	mla	r6, sl, r2, r6
 802c77a:	f8b3 e000 	ldrh.w	lr, [r3]
 802c77e:	b2c9      	uxtb	r1, r1
 802c780:	ea4f 242e 	mov.w	r4, lr, asr #8
 802c784:	fb00 7005 	mla	r0, r0, r5, r7
 802c788:	fb0b 6605 	mla	r6, fp, r5, r6
 802c78c:	ea4f 09ee 	mov.w	r9, lr, asr #3
 802c790:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802c794:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802c798:	fb04 f401 	mul.w	r4, r4, r1
 802c79c:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 802c7a0:	fa5f fe8e 	uxtb.w	lr, lr
 802c7a4:	fb09 f901 	mul.w	r9, r9, r1
 802c7a8:	fb0e f101 	mul.w	r1, lr, r1
 802c7ac:	0a00      	lsrs	r0, r0, #8
 802c7ae:	0a36      	lsrs	r6, r6, #8
 802c7b0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802c7b4:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802c7b8:	1c62      	adds	r2, r4, #1
 802c7ba:	ea40 0306 	orr.w	r3, r0, r6
 802c7be:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802c7c2:	f109 0001 	add.w	r0, r9, #1
 802c7c6:	1c4a      	adds	r2, r1, #1
 802c7c8:	0c1e      	lsrs	r6, r3, #16
 802c7ca:	f3c3 2507 	ubfx	r5, r3, #8, #8
 802c7ce:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802c7d2:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 802c7d6:	4a21      	ldr	r2, [pc, #132]	@ (802c85c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40c>)
 802c7d8:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 802c7dc:	b2db      	uxtb	r3, r3
 802c7de:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802c7e2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802c7e6:	ea02 2404 	and.w	r4, r2, r4, lsl #8
 802c7ea:	00c0      	lsls	r0, r0, #3
 802c7ec:	ea44 04d3 	orr.w	r4, r4, r3, lsr #3
 802c7f0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802c7f4:	9b07      	ldr	r3, [sp, #28]
 802c7f6:	4320      	orrs	r0, r4
 802c7f8:	8018      	strh	r0, [r3, #0]
 802c7fa:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 802c7fc:	9937      	ldr	r1, [sp, #220]	@ 0xdc
 802c7fe:	9b07      	ldr	r3, [sp, #28]
 802c800:	440a      	add	r2, r1
 802c802:	9235      	str	r2, [sp, #212]	@ 0xd4
 802c804:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802c806:	3302      	adds	r3, #2
 802c808:	4490      	add	r8, r2
 802c80a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802c80c:	9307      	str	r3, [sp, #28]
 802c80e:	4293      	cmp	r3, r2
 802c810:	d022      	beq.n	802c858 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x408>
 802c812:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802c814:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 802c816:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802c81a:	9c35      	ldr	r4, [sp, #212]	@ 0xd4
 802c81c:	1412      	asrs	r2, r2, #16
 802c81e:	ea4f 4328 	mov.w	r3, r8, asr #16
 802c822:	fb01 2303 	mla	r3, r1, r3, r2
 802c826:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802c828:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802c82a:	5cc2      	ldrb	r2, [r0, r3]
 802c82c:	f3c4 3403 	ubfx	r4, r4, #12, #4
 802c830:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802c834:	4403      	add	r3, r0
 802c836:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802c83a:	0e38      	lsrs	r0, r7, #24
 802c83c:	2c00      	cmp	r4, #0
 802c83e:	f47f aeca 	bne.w	802c5d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802c842:	2a00      	cmp	r2, #0
 802c844:	f43f aedc 	beq.w	802c600 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802c848:	5c5b      	ldrb	r3, [r3, r1]
 802c84a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802c84c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802c850:	9310      	str	r3, [sp, #64]	@ 0x40
 802c852:	0e1b      	lsrs	r3, r3, #24
 802c854:	9309      	str	r3, [sp, #36]	@ 0x24
 802c856:	e6d3      	b.n	802c600 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802c858:	4693      	mov	fp, r2
 802c85a:	e656      	b.n	802c50a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802c85c:	fffff800 	.word	0xfffff800
 802c860:	2b00      	cmp	r3, #0
 802c862:	f77f ae52 	ble.w	802c50a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802c866:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802c86a:	ea4f 4229 	mov.w	r2, r9, asr #16
 802c86e:	ea4f 4128 	mov.w	r1, r8, asr #16
 802c872:	2a00      	cmp	r2, #0
 802c874:	465f      	mov	r7, fp
 802c876:	f8cd b01c 	str.w	fp, [sp, #28]
 802c87a:	9c3c      	ldr	r4, [sp, #240]	@ 0xf0
 802c87c:	e9dd b337 	ldrd	fp, r3, [sp, #220]	@ 0xdc
 802c880:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802c884:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 802c888:	f2c0 8147 	blt.w	802cb1a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c88c:	1e73      	subs	r3, r6, #1
 802c88e:	429a      	cmp	r2, r3
 802c890:	f280 8143 	bge.w	802cb1a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c894:	2900      	cmp	r1, #0
 802c896:	f2c0 8140 	blt.w	802cb1a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c89a:	f10c 33ff 	add.w	r3, ip, #4294967295
 802c89e:	4299      	cmp	r1, r3
 802c8a0:	f280 813b 	bge.w	802cb1a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c8a4:	b236      	sxth	r6, r6
 802c8a6:	fb01 2106 	mla	r1, r1, r6, r2
 802c8aa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802c8ac:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802c8ae:	5c53      	ldrb	r3, [r2, r1]
 802c8b0:	4411      	add	r1, r2
 802c8b2:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
 802c8b6:	910d      	str	r1, [sp, #52]	@ 0x34
 802c8b8:	0e13      	lsrs	r3, r2, #24
 802c8ba:	2800      	cmp	r0, #0
 802c8bc:	f000 8154 	beq.w	802cb68 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 802c8c0:	f891 c001 	ldrb.w	ip, [r1, #1]
 802c8c4:	9513      	str	r5, [sp, #76]	@ 0x4c
 802c8c6:	f855 102c 	ldr.w	r1, [r5, ip, lsl #2]
 802c8ca:	911f      	str	r1, [sp, #124]	@ 0x7c
 802c8cc:	0e09      	lsrs	r1, r1, #24
 802c8ce:	9116      	str	r1, [sp, #88]	@ 0x58
 802c8d0:	f1be 0f00 	cmp.w	lr, #0
 802c8d4:	f040 8153 	bne.w	802cb7e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 802c8d8:	b286      	uxth	r6, r0
 802c8da:	fa1f fc8e 	uxth.w	ip, lr
 802c8de:	fb06 f00c 	mul.w	r0, r6, ip
 802c8e2:	0136      	lsls	r6, r6, #4
 802c8e4:	1a31      	subs	r1, r6, r0
 802c8e6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802c8e8:	b289      	uxth	r1, r1
 802c8ea:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802c8ee:	9113      	str	r1, [sp, #76]	@ 0x4c
 802c8f0:	fb01 f105 	mul.w	r1, r1, r5
 802c8f4:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802c8f8:	fa1f f58c 	uxth.w	r5, ip
 802c8fc:	1b76      	subs	r6, r6, r5
 802c8fe:	b2b6      	uxth	r6, r6
 802c900:	fb06 1c03 	mla	ip, r6, r3, r1
 802c904:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802c906:	9514      	str	r5, [sp, #80]	@ 0x50
 802c908:	fb05 cc01 	mla	ip, r5, r1, ip
 802c90c:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802c90e:	9619      	str	r6, [sp, #100]	@ 0x64
 802c910:	fb00 cc01 	mla	ip, r0, r1, ip
 802c914:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802c918:	f1bc 0f00 	cmp.w	ip, #0
 802c91c:	f000 80e6 	beq.w	802caec <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802c920:	f002 11ff 	and.w	r1, r2, #16711935	@ 0xff00ff
 802c924:	2bff      	cmp	r3, #255	@ 0xff
 802c926:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802c92a:	911a      	str	r1, [sp, #104]	@ 0x68
 802c92c:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c92e:	d01b      	beq.n	802c968 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 802c930:	fb02 f203 	mul.w	r2, r2, r3
 802c934:	fb01 f103 	mul.w	r1, r1, r3
 802c938:	4613      	mov	r3, r2
 802c93a:	0a0a      	lsrs	r2, r1, #8
 802c93c:	f101 1601 	add.w	r6, r1, #65537	@ 0x10001
 802c940:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c944:	f503 7180 	add.w	r1, r3, #256	@ 0x100
 802c948:	4432      	add	r2, r6
 802c94a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802c94e:	0a12      	lsrs	r2, r2, #8
 802c950:	0a1b      	lsrs	r3, r3, #8
 802c952:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c956:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c95a:	4313      	orrs	r3, r2
 802c95c:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802c960:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c964:	921a      	str	r2, [sp, #104]	@ 0x68
 802c966:	931b      	str	r3, [sp, #108]	@ 0x6c
 802c968:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802c96a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802c96c:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802c970:	2aff      	cmp	r2, #255	@ 0xff
 802c972:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c976:	931c      	str	r3, [sp, #112]	@ 0x70
 802c978:	d01b      	beq.n	802c9b2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x562>
 802c97a:	fb03 f302 	mul.w	r3, r3, r2
 802c97e:	461e      	mov	r6, r3
 802c980:	fb01 f102 	mul.w	r1, r1, r2
 802c984:	0a0a      	lsrs	r2, r1, #8
 802c986:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c98a:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 802c98e:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 802c992:	440a      	add	r2, r1
 802c994:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802c998:	0a12      	lsrs	r2, r2, #8
 802c99a:	0a1b      	lsrs	r3, r3, #8
 802c99c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c9a0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c9a4:	ea42 0603 	orr.w	r6, r2, r3
 802c9a8:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 802c9ac:	f006 11ff 	and.w	r1, r6, #16711935	@ 0xff00ff
 802c9b0:	931c      	str	r3, [sp, #112]	@ 0x70
 802c9b2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802c9b4:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802c9b6:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802c9ba:	2aff      	cmp	r2, #255	@ 0xff
 802c9bc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c9c0:	931d      	str	r3, [sp, #116]	@ 0x74
 802c9c2:	d01b      	beq.n	802c9fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ac>
 802c9c4:	fb03 f302 	mul.w	r3, r3, r2
 802c9c8:	fb06 f602 	mul.w	r6, r6, r2
 802c9cc:	461a      	mov	r2, r3
 802c9ce:	0a33      	lsrs	r3, r6, #8
 802c9d0:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802c9d4:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802c9d8:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 802c9dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802c9e0:	4476      	add	r6, lr
 802c9e2:	0a36      	lsrs	r6, r6, #8
 802c9e4:	0a1b      	lsrs	r3, r3, #8
 802c9e6:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802c9ea:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c9ee:	ea46 0203 	orr.w	r2, r6, r3
 802c9f2:	f402 437f 	and.w	r3, r2, #65280	@ 0xff00
 802c9f6:	f002 16ff 	and.w	r6, r2, #16711935	@ 0xff00ff
 802c9fa:	931d      	str	r3, [sp, #116]	@ 0x74
 802c9fc:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802c9fe:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802ca02:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 802ca06:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802ca08:	930d      	str	r3, [sp, #52]	@ 0x34
 802ca0a:	2aff      	cmp	r2, #255	@ 0xff
 802ca0c:	d01b      	beq.n	802ca46 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f6>
 802ca0e:	fb03 f302 	mul.w	r3, r3, r2
 802ca12:	fb0e fe02 	mul.w	lr, lr, r2
 802ca16:	0a1a      	lsrs	r2, r3, #8
 802ca18:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802ca1c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802ca20:	f50e 7580 	add.w	r5, lr, #256	@ 0x100
 802ca24:	441a      	add	r2, r3
 802ca26:	eb05 2e1e 	add.w	lr, r5, lr, lsr #8
 802ca2a:	0a12      	lsrs	r2, r2, #8
 802ca2c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ca30:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802ca34:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ca38:	ea42 0e0e 	orr.w	lr, r2, lr
 802ca3c:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 802ca40:	930d      	str	r3, [sp, #52]	@ 0x34
 802ca42:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ca46:	ea6f 0c0c 	mvn.w	ip, ip
 802ca4a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802ca4c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802ca4e:	fb01 f305 	mul.w	r3, r1, r5
 802ca52:	991c      	ldr	r1, [sp, #112]	@ 0x70
 802ca54:	fa5f fc8c 	uxtb.w	ip, ip
 802ca58:	fb01 f105 	mul.w	r1, r1, r5
 802ca5c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 802ca5e:	fb02 3305 	mla	r3, r2, r5, r3
 802ca62:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 802ca64:	fb02 1105 	mla	r1, r2, r5, r1
 802ca68:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802ca6a:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 802ca6c:	fb06 3605 	mla	r6, r6, r5, r3
 802ca70:	fb02 1205 	mla	r2, r2, r5, r1
 802ca74:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802ca76:	8839      	ldrh	r1, [r7, #0]
 802ca78:	fb03 6300 	mla	r3, r3, r0, r6
 802ca7c:	fb0e 2e00 	mla	lr, lr, r0, r2
 802ca80:	10c8      	asrs	r0, r1, #3
 802ca82:	120a      	asrs	r2, r1, #8
 802ca84:	f000 06fc 	and.w	r6, r0, #252	@ 0xfc
 802ca88:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802ca8c:	00c9      	lsls	r1, r1, #3
 802ca8e:	fb02 f20c 	mul.w	r2, r2, ip
 802ca92:	fb06 f60c 	mul.w	r6, r6, ip
 802ca96:	b2c9      	uxtb	r1, r1
 802ca98:	fb01 f00c 	mul.w	r0, r1, ip
 802ca9c:	0a1b      	lsrs	r3, r3, #8
 802ca9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802caa2:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802caa6:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 802caaa:	430b      	orrs	r3, r1
 802caac:	f106 0e01 	add.w	lr, r6, #1
 802cab0:	1c51      	adds	r1, r2, #1
 802cab2:	0c1d      	lsrs	r5, r3, #16
 802cab4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802cab8:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802cabc:	f3c3 2107 	ubfx	r1, r3, #8, #8
 802cac0:	fa5f fe83 	uxtb.w	lr, r3
 802cac4:	f100 0c01 	add.w	ip, r0, #1
 802cac8:	4b39      	ldr	r3, [pc, #228]	@ (802cbb0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>)
 802caca:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 802cace:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802cad2:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802cad6:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 802cada:	00c9      	lsls	r1, r1, #3
 802cadc:	eb0e 2310 	add.w	r3, lr, r0, lsr #8
 802cae0:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 802cae4:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 802cae8:	4313      	orrs	r3, r2
 802caea:	803b      	strh	r3, [r7, #0]
 802caec:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802caee:	f1ba 0f00 	cmp.w	sl, #0
 802caf2:	f107 0702 	add.w	r7, r7, #2
 802caf6:	44d9      	add	r9, fp
 802caf8:	4498      	add	r8, r3
 802cafa:	dd26      	ble.n	802cb4a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802cafc:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802cb00:	ea4f 4229 	mov.w	r2, r9, asr #16
 802cb04:	2a00      	cmp	r2, #0
 802cb06:	f10a 3aff 	add.w	sl, sl, #4294967295
 802cb0a:	ea4f 4128 	mov.w	r1, r8, asr #16
 802cb0e:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802cb12:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 802cb16:	f6bf aeb9 	bge.w	802c88c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 802cb1a:	1c53      	adds	r3, r2, #1
 802cb1c:	d4e6      	bmi.n	802caec <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb1e:	42b3      	cmp	r3, r6
 802cb20:	dce4      	bgt.n	802caec <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb22:	1c4b      	adds	r3, r1, #1
 802cb24:	d4e2      	bmi.n	802caec <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb26:	4563      	cmp	r3, ip
 802cb28:	dce0      	bgt.n	802caec <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb2a:	fa0f f38c 	sxth.w	r3, ip
 802cb2e:	b236      	sxth	r6, r6
 802cb30:	e9cd 2102 	strd	r2, r1, [sp, #8]
 802cb34:	e9cd 6300 	strd	r6, r3, [sp]
 802cb38:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802cb3c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802cb3e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802cb40:	4639      	mov	r1, r7
 802cb42:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802cb44:	f7ff fade 	bl	802c104 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802cb48:	e7d0      	b.n	802caec <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb4a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802cb4c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802cb50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802cb54:	3301      	adds	r3, #1
 802cb56:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802cb5a:	e4d6      	b.n	802c50a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802cb5c:	3b01      	subs	r3, #1
 802cb5e:	f8dd c01c 	ldr.w	ip, [sp, #28]
 802cb62:	930c      	str	r3, [sp, #48]	@ 0x30
 802cb64:	469a      	mov	sl, r3
 802cb66:	e684      	b.n	802c872 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x422>
 802cb68:	f1be 0f00 	cmp.w	lr, #0
 802cb6c:	f43f aeb4 	beq.w	802c8d8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802cb70:	5d89      	ldrb	r1, [r1, r6]
 802cb72:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 802cb76:	9120      	str	r1, [sp, #128]	@ 0x80
 802cb78:	0e09      	lsrs	r1, r1, #24
 802cb7a:	9117      	str	r1, [sp, #92]	@ 0x5c
 802cb7c:	e6ac      	b.n	802c8d8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802cb7e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802cb80:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802cb82:	eb01 0c06 	add.w	ip, r1, r6
 802cb86:	f89c c001 	ldrb.w	ip, [ip, #1]
 802cb8a:	5d89      	ldrb	r1, [r1, r6]
 802cb8c:	f855 602c 	ldr.w	r6, [r5, ip, lsl #2]
 802cb90:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 802cb94:	0e35      	lsrs	r5, r6, #24
 802cb96:	9120      	str	r1, [sp, #128]	@ 0x80
 802cb98:	0e09      	lsrs	r1, r1, #24
 802cb9a:	9621      	str	r6, [sp, #132]	@ 0x84
 802cb9c:	9518      	str	r5, [sp, #96]	@ 0x60
 802cb9e:	9117      	str	r1, [sp, #92]	@ 0x5c
 802cba0:	e69a      	b.n	802c8d8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802cba2:	f43f acb2 	beq.w	802c50a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802cba6:	1e65      	subs	r5, r4, #1
 802cba8:	f8cd b01c 	str.w	fp, [sp, #28]
 802cbac:	e4f2      	b.n	802c594 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802cbae:	bf00      	nop
 802cbb0:	fffff800 	.word	0xfffff800

0802cbb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>:
 802cbb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802cbb8:	b08b      	sub	sp, #44	@ 0x2c
 802cbba:	f89d 0068 	ldrb.w	r0, [sp, #104]	@ 0x68
 802cbbe:	f8dd c05c 	ldr.w	ip, [sp, #92]	@ 0x5c
 802cbc2:	ea6f 0b00 	mvn.w	fp, r0
 802cbc6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802cbc8:	f9bd 5050 	ldrsh.w	r5, [sp, #80]	@ 0x50
 802cbcc:	9005      	str	r0, [sp, #20]
 802cbce:	fb0c 4805 	mla	r8, ip, r5, r4
 802cbd2:	7848      	ldrb	r0, [r1, #1]
 802cbd4:	788e      	ldrb	r6, [r1, #2]
 802cbd6:	0204      	lsls	r4, r0, #8
 802cbd8:	780f      	ldrb	r7, [r1, #0]
 802cbda:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 802cbde:	9306      	str	r3, [sp, #24]
 802cbe0:	fa5f f38b 	uxtb.w	r3, fp
 802cbe4:	433c      	orrs	r4, r7
 802cbe6:	9304      	str	r3, [sp, #16]
 802cbe8:	f1bc 0f00 	cmp.w	ip, #0
 802cbec:	eb02 0308 	add.w	r3, r2, r8
 802cbf0:	9003      	str	r0, [sp, #12]
 802cbf2:	9602      	str	r6, [sp, #8]
 802cbf4:	9307      	str	r3, [sp, #28]
 802cbf6:	9409      	str	r4, [sp, #36]	@ 0x24
 802cbf8:	f10c 0601 	add.w	r6, ip, #1
 802cbfc:	f9bd e054 	ldrsh.w	lr, [sp, #84]	@ 0x54
 802cc00:	f89d 3060 	ldrb.w	r3, [sp, #96]	@ 0x60
 802cc04:	f89d 0064 	ldrb.w	r0, [sp, #100]	@ 0x64
 802cc08:	db02      	blt.n	802cc10 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x5c>
 802cc0a:	45e6      	cmp	lr, ip
 802cc0c:	f300 80a0 	bgt.w	802cd50 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x19c>
 802cc10:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802cc14:	46e0      	mov	r8, ip
 802cc16:	fa5f fb84 	uxtb.w	fp, r4
 802cc1a:	f8cd b004 	str.w	fp, [sp, #4]
 802cc1e:	2e00      	cmp	r6, #0
 802cc20:	db01      	blt.n	802cc26 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x72>
 802cc22:	45b6      	cmp	lr, r6
 802cc24:	dc73      	bgt.n	802cd0e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x15a>
 802cc26:	fa5f fa84 	uxtb.w	sl, r4
 802cc2a:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802cc2e:	4654      	mov	r4, sl
 802cc30:	46f1      	mov	r9, lr
 802cc32:	2b0f      	cmp	r3, #15
 802cc34:	f200 80cb 	bhi.w	802cdce <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x21a>
 802cc38:	280f      	cmp	r0, #15
 802cc3a:	f200 80c8 	bhi.w	802cdce <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x21a>
 802cc3e:	b29b      	uxth	r3, r3
 802cc40:	b280      	uxth	r0, r0
 802cc42:	fb03 f600 	mul.w	r6, r3, r0
 802cc46:	011b      	lsls	r3, r3, #4
 802cc48:	1b9d      	subs	r5, r3, r6
 802cc4a:	9a01      	ldr	r2, [sp, #4]
 802cc4c:	b2ad      	uxth	r5, r5
 802cc4e:	ebc6 1000 	rsb	r0, r6, r0, lsl #4
 802cc52:	fb05 f202 	mul.w	r2, r5, r2
 802cc56:	b280      	uxth	r0, r0
 802cc58:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802cc5c:	1a1b      	subs	r3, r3, r0
 802cc5e:	b29b      	uxth	r3, r3
 802cc60:	fb03 220b 	mla	r2, r3, fp, r2
 802cc64:	fb00 2a0a 	mla	sl, r0, sl, r2
 802cc68:	f8bd b010 	ldrh.w	fp, [sp, #16]
 802cc6c:	fb06 a404 	mla	r4, r6, r4, sl
 802cc70:	fb17 f70b 	smulbb	r7, r7, fp
 802cc74:	f8bd a014 	ldrh.w	sl, [sp, #20]
 802cc78:	f3c4 2407 	ubfx	r4, r4, #8, #8
 802cc7c:	fb04 770a 	mla	r7, r4, sl, r7
 802cc80:	b2bf      	uxth	r7, r7
 802cc82:	1c7a      	adds	r2, r7, #1
 802cc84:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 802cc88:	123f      	asrs	r7, r7, #8
 802cc8a:	700f      	strb	r7, [r1, #0]
 802cc8c:	f89c 4001 	ldrb.w	r4, [ip, #1]
 802cc90:	f898 7001 	ldrb.w	r7, [r8, #1]
 802cc94:	fb05 f204 	mul.w	r2, r5, r4
 802cc98:	fb03 2407 	mla	r4, r3, r7, r2
 802cc9c:	f899 2001 	ldrb.w	r2, [r9, #1]
 802cca0:	f89e 7001 	ldrb.w	r7, [lr, #1]
 802cca4:	fb00 4202 	mla	r2, r0, r2, r4
 802cca8:	9c03      	ldr	r4, [sp, #12]
 802ccaa:	fb06 2207 	mla	r2, r6, r7, r2
 802ccae:	fb14 f40b 	smulbb	r4, r4, fp
 802ccb2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802ccb6:	fb02 420a 	mla	r2, r2, sl, r4
 802ccba:	b292      	uxth	r2, r2
 802ccbc:	1c54      	adds	r4, r2, #1
 802ccbe:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802ccc2:	1212      	asrs	r2, r2, #8
 802ccc4:	704a      	strb	r2, [r1, #1]
 802ccc6:	f89c 4002 	ldrb.w	r4, [ip, #2]
 802ccca:	f898 2002 	ldrb.w	r2, [r8, #2]
 802ccce:	fb05 f504 	mul.w	r5, r5, r4
 802ccd2:	fb03 5502 	mla	r5, r3, r2, r5
 802ccd6:	f899 4002 	ldrb.w	r4, [r9, #2]
 802ccda:	f89e 2002 	ldrb.w	r2, [lr, #2]
 802ccde:	fb00 5004 	mla	r0, r0, r4, r5
 802cce2:	9b02      	ldr	r3, [sp, #8]
 802cce4:	fb06 0602 	mla	r6, r6, r2, r0
 802cce8:	fb13 fb0b 	smulbb	fp, r3, fp
 802ccec:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802ccf0:	fb06 ba0a 	mla	sl, r6, sl, fp
 802ccf4:	fa1f fa8a 	uxth.w	sl, sl
 802ccf8:	f10a 0b01 	add.w	fp, sl, #1
 802ccfc:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 802cd00:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 802cd04:	f881 a002 	strb.w	sl, [r1, #2]
 802cd08:	b00b      	add	sp, #44	@ 0x2c
 802cd0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cd0e:	2800      	cmp	r0, #0
 802cd10:	d089      	beq.n	802cc26 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x72>
 802cd12:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 802cd14:	2e00      	cmp	r6, #0
 802cd16:	db47      	blt.n	802cda8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1f4>
 802cd18:	42b5      	cmp	r5, r6
 802cd1a:	dd45      	ble.n	802cda8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1f4>
 802cd1c:	9a07      	ldr	r2, [sp, #28]
 802cd1e:	f812 9005 	ldrb.w	r9, [r2, r5]
 802cd22:	9a06      	ldr	r2, [sp, #24]
 802cd24:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802cd28:	4491      	add	r9, r2
 802cd2a:	3601      	adds	r6, #1
 802cd2c:	f899 a000 	ldrb.w	sl, [r9]
 802cd30:	d436      	bmi.n	802cda0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ec>
 802cd32:	42b5      	cmp	r5, r6
 802cd34:	dd34      	ble.n	802cda0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ec>
 802cd36:	2b00      	cmp	r3, #0
 802cd38:	d045      	beq.n	802cdc6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x212>
 802cd3a:	9a07      	ldr	r2, [sp, #28]
 802cd3c:	442a      	add	r2, r5
 802cd3e:	f892 e001 	ldrb.w	lr, [r2, #1]
 802cd42:	9a06      	ldr	r2, [sp, #24]
 802cd44:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802cd48:	f812 400e 	ldrb.w	r4, [r2, lr]
 802cd4c:	4496      	add	lr, r2
 802cd4e:	e770      	b.n	802cc32 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7e>
 802cd50:	4691      	mov	r9, r2
 802cd52:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802cd54:	2a00      	cmp	r2, #0
 802cd56:	db01      	blt.n	802cd5c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1a8>
 802cd58:	4295      	cmp	r5, r2
 802cd5a:	dc19      	bgt.n	802cd90 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1dc>
 802cd5c:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 802cd60:	3201      	adds	r2, #1
 802cd62:	f898 b000 	ldrb.w	fp, [r8]
 802cd66:	d40e      	bmi.n	802cd86 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d2>
 802cd68:	4295      	cmp	r5, r2
 802cd6a:	dd0c      	ble.n	802cd86 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d2>
 802cd6c:	b1fb      	cbz	r3, 802cdae <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1fa>
 802cd6e:	9a07      	ldr	r2, [sp, #28]
 802cd70:	f892 c001 	ldrb.w	ip, [r2, #1]
 802cd74:	9a06      	ldr	r2, [sp, #24]
 802cd76:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802cd7a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802cd7e:	9201      	str	r2, [sp, #4]
 802cd80:	9a06      	ldr	r2, [sp, #24]
 802cd82:	4494      	add	ip, r2
 802cd84:	e74b      	b.n	802cc1e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6a>
 802cd86:	b2e2      	uxtb	r2, r4
 802cd88:	9201      	str	r2, [sp, #4]
 802cd8a:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802cd8e:	e746      	b.n	802cc1e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6a>
 802cd90:	f819 8008 	ldrb.w	r8, [r9, r8]
 802cd94:	9a06      	ldr	r2, [sp, #24]
 802cd96:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802cd9a:	4490      	add	r8, r2
 802cd9c:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802cd9e:	e7df      	b.n	802cd60 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ac>
 802cda0:	b2e4      	uxtb	r4, r4
 802cda2:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802cda6:	e744      	b.n	802cc32 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7e>
 802cda8:	f10d 0924 	add.w	r9, sp, #36	@ 0x24
 802cdac:	e7bd      	b.n	802cd2a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x176>
 802cdae:	b2e2      	uxtb	r2, r4
 802cdb0:	2e00      	cmp	r6, #0
 802cdb2:	9201      	str	r2, [sp, #4]
 802cdb4:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802cdb8:	f6bf af33 	bge.w	802cc22 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6e>
 802cdbc:	46e6      	mov	lr, ip
 802cdbe:	46e1      	mov	r9, ip
 802cdc0:	4692      	mov	sl, r2
 802cdc2:	4614      	mov	r4, r2
 802cdc4:	e738      	b.n	802cc38 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x84>
 802cdc6:	b2e4      	uxtb	r4, r4
 802cdc8:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802cdcc:	e734      	b.n	802cc38 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x84>
 802cdce:	4b03      	ldr	r3, [pc, #12]	@ (802cddc <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x228>)
 802cdd0:	4a03      	ldr	r2, [pc, #12]	@ (802cde0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x22c>)
 802cdd2:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802cdd6:	4803      	ldr	r0, [pc, #12]	@ (802cde4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x230>)
 802cdd8:	f005 fb56 	bl	8032488 <__assert_func>
 802cddc:	0803663c 	.word	0x0803663c
 802cde0:	08036cb8 	.word	0x08036cb8
 802cde4:	080367c4 	.word	0x080367c4

0802cde8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802cde8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802cdec:	ed2d 8b08 	vpush	{d8-d11}
 802cdf0:	b097      	sub	sp, #92	@ 0x5c
 802cdf2:	f89d 60c4 	ldrb.w	r6, [sp, #196]	@ 0xc4
 802cdf6:	eeb0 aa40 	vmov.f32	s20, s0
 802cdfa:	e9dd b729 	ldrd	fp, r7, [sp, #164]	@ 0xa4
 802cdfe:	e9cd 0614 	strd	r0, r6, [sp, #80]	@ 0x50
 802ce02:	43f0      	mvns	r0, r6
 802ce04:	eef0 9a60 	vmov.f32	s19, s1
 802ce08:	eeb0 9a41 	vmov.f32	s18, s2
 802ce0c:	eef0 8a62 	vmov.f32	s17, s5
 802ce10:	eeb0 8a43 	vmov.f32	s16, s6
 802ce14:	eef0 ba44 	vmov.f32	s23, s8
 802ce18:	eeb0 ba64 	vmov.f32	s22, s9
 802ce1c:	eef0 aa45 	vmov.f32	s21, s10
 802ce20:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802ce24:	e9dd 512d 	ldrd	r5, r1, [sp, #180]	@ 0xb4
 802ce28:	461a      	mov	r2, r3
 802ce2a:	686c      	ldr	r4, [r5, #4]
 802ce2c:	9b2f      	ldr	r3, [sp, #188]	@ 0xbc
 802ce2e:	f8dd 90ac 	ldr.w	r9, [sp, #172]	@ 0xac
 802ce32:	fb04 1303 	mla	r3, r4, r3, r1
 802ce36:	9c30      	ldr	r4, [sp, #192]	@ 0xc0
 802ce38:	6829      	ldr	r1, [r5, #0]
 802ce3a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802ce3e:	6865      	ldr	r5, [r4, #4]
 802ce40:	eb01 0a03 	add.w	sl, r1, r3
 802ce44:	b2c3      	uxtb	r3, r0
 802ce46:	6824      	ldr	r4, [r4, #0]
 802ce48:	9309      	str	r3, [sp, #36]	@ 0x24
 802ce4a:	1d2b      	adds	r3, r5, #4
 802ce4c:	930a      	str	r3, [sp, #40]	@ 0x28
 802ce4e:	b2b3      	uxth	r3, r6
 802ce50:	940d      	str	r4, [sp, #52]	@ 0x34
 802ce52:	930b      	str	r3, [sp, #44]	@ 0x2c
 802ce54:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802ce56:	2b00      	cmp	r3, #0
 802ce58:	dc02      	bgt.n	802ce60 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802ce5a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802ce5c:	2b00      	cmp	r3, #0
 802ce5e:	dd63      	ble.n	802cf28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802ce60:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802ce62:	2a00      	cmp	r2, #0
 802ce64:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 802ce68:	b234      	sxth	r4, r6
 802ce6a:	fa0f fc8e 	sxth.w	ip, lr
 802ce6e:	f340 825b 	ble.w	802d328 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 802ce72:	f8cd e020 	str.w	lr, [sp, #32]
 802ce76:	f8dd e0b0 	ldr.w	lr, [sp, #176]	@ 0xb0
 802ce7a:	1e65      	subs	r5, r4, #1
 802ce7c:	f10c 38ff 	add.w	r8, ip, #4294967295
 802ce80:	ea5f 432b 	movs.w	r3, fp, asr #16
 802ce84:	ea4f 4127 	mov.w	r1, r7, asr #16
 802ce88:	d405      	bmi.n	802ce96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802ce8a:	42ab      	cmp	r3, r5
 802ce8c:	da03      	bge.n	802ce96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802ce8e:	2900      	cmp	r1, #0
 802ce90:	db01      	blt.n	802ce96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802ce92:	4541      	cmp	r1, r8
 802ce94:	db4d      	blt.n	802cf32 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802ce96:	1c58      	adds	r0, r3, #1
 802ce98:	d406      	bmi.n	802cea8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802ce9a:	42a0      	cmp	r0, r4
 802ce9c:	dc04      	bgt.n	802cea8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802ce9e:	1c48      	adds	r0, r1, #1
 802cea0:	d402      	bmi.n	802cea8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802cea2:	4560      	cmp	r0, ip
 802cea4:	f340 819b 	ble.w	802d1de <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802cea8:	3a01      	subs	r2, #1
 802ceaa:	44cb      	add	fp, r9
 802ceac:	4477      	add	r7, lr
 802ceae:	f10a 0a03 	add.w	sl, sl, #3
 802ceb2:	d1e5      	bne.n	802ce80 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802ceb4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802ceb6:	2b00      	cmp	r3, #0
 802ceb8:	dd36      	ble.n	802cf28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802ceba:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802cebe:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802cec2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802cec6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802ceca:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802cece:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802ced2:	ee69 7a27 	vmul.f32	s15, s18, s15
 802ced6:	ee76 6a68 	vsub.f32	s13, s12, s17
 802ceda:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802cede:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802cee2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802cee6:	ee16 2a90 	vmov	r2, s13
 802ceea:	3b01      	subs	r3, #1
 802ceec:	930e      	str	r3, [sp, #56]	@ 0x38
 802ceee:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802cef0:	fb92 f9f3 	sdiv	r9, r2, r3
 802cef4:	ee17 2a10 	vmov	r2, s14
 802cef8:	eeb0 7a48 	vmov.f32	s14, s16
 802cefc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802cf00:	ee17 7a10 	vmov	r7, s14
 802cf04:	eeb0 7a68 	vmov.f32	s14, s17
 802cf08:	fb92 f3f3 	sdiv	r3, r2, r3
 802cf0c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802cf10:	932c      	str	r3, [sp, #176]	@ 0xb0
 802cf12:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802cf14:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802cf16:	ee17 ba10 	vmov	fp, s14
 802cf1a:	eeb0 8a67 	vmov.f32	s16, s15
 802cf1e:	eef0 8a46 	vmov.f32	s17, s12
 802cf22:	bf18      	it	ne
 802cf24:	461a      	movne	r2, r3
 802cf26:	e795      	b.n	802ce54 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802cf28:	b017      	add	sp, #92	@ 0x5c
 802cf2a:	ecbd 8b08 	vpop	{d8-d11}
 802cf2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cf32:	f8dd e020 	ldr.w	lr, [sp, #32]
 802cf36:	1e51      	subs	r1, r2, #1
 802cf38:	fb09 b301 	mla	r3, r9, r1, fp
 802cf3c:	141b      	asrs	r3, r3, #16
 802cf3e:	9108      	str	r1, [sp, #32]
 802cf40:	f100 80e7 	bmi.w	802d112 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cf44:	42ab      	cmp	r3, r5
 802cf46:	f280 80e4 	bge.w	802d112 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cf4a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802cf4c:	fb03 7301 	mla	r3, r3, r1, r7
 802cf50:	141b      	asrs	r3, r3, #16
 802cf52:	f100 80de 	bmi.w	802d112 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cf56:	f10c 3cff 	add.w	ip, ip, #4294967295
 802cf5a:	4563      	cmp	r3, ip
 802cf5c:	f280 80d9 	bge.w	802d112 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cf60:	2a00      	cmp	r2, #0
 802cf62:	dda7      	ble.n	802ceb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802cf64:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802cf68:	eb0a 0302 	add.w	r3, sl, r2
 802cf6c:	930c      	str	r3, [sp, #48]	@ 0x30
 802cf6e:	f10a 0c03 	add.w	ip, sl, #3
 802cf72:	e9cd 792a 	strd	r7, r9, [sp, #168]	@ 0xa8
 802cf76:	463b      	mov	r3, r7
 802cf78:	e09a      	b.n	802d0b0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 802cf7a:	784d      	ldrb	r5, [r1, #1]
 802cf7c:	1908      	adds	r0, r1, r4
 802cf7e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802cf82:	4435      	add	r5, r6
 802cf84:	2a00      	cmp	r2, #0
 802cf86:	f000 80b5 	beq.w	802d0f4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802cf8a:	5d0c      	ldrb	r4, [r1, r4]
 802cf8c:	f890 e001 	ldrb.w	lr, [r0, #1]
 802cf90:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802cf94:	19a1      	adds	r1, r4, r6
 802cf96:	9108      	str	r1, [sp, #32]
 802cf98:	4631      	mov	r1, r6
 802cf9a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802cf9e:	9f08      	ldr	r7, [sp, #32]
 802cfa0:	44b6      	add	lr, r6
 802cfa2:	b29b      	uxth	r3, r3
 802cfa4:	b292      	uxth	r2, r2
 802cfa6:	fb03 f602 	mul.w	r6, r3, r2
 802cfaa:	011b      	lsls	r3, r3, #4
 802cfac:	f895 9000 	ldrb.w	r9, [r5]
 802cfb0:	1b98      	subs	r0, r3, r6
 802cfb2:	b280      	uxth	r0, r0
 802cfb4:	fb00 f909 	mul.w	r9, r0, r9
 802cfb8:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802cfbc:	b292      	uxth	r2, r2
 802cfbe:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802cfc2:	f811 100a 	ldrb.w	r1, [r1, sl]
 802cfc6:	1a9b      	subs	r3, r3, r2
 802cfc8:	b29b      	uxth	r3, r3
 802cfca:	fb03 9101 	mla	r1, r3, r1, r9
 802cfce:	f897 9000 	ldrb.w	r9, [r7]
 802cfd2:	9c2b      	ldr	r4, [sp, #172]	@ 0xac
 802cfd4:	fb02 1109 	mla	r1, r2, r9, r1
 802cfd8:	f89e a000 	ldrb.w	sl, [lr]
 802cfdc:	f81c 9c03 	ldrb.w	r9, [ip, #-3]
 802cfe0:	44a3      	add	fp, r4
 802cfe2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802cfe4:	fb06 110a 	mla	r1, r6, sl, r1
 802cfe8:	fb19 f904 	smulbb	r9, r9, r4
 802cfec:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802cfee:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802cff2:	fb01 9904 	mla	r9, r1, r4, r9
 802cff6:	fa1f f989 	uxth.w	r9, r9
 802cffa:	f109 0101 	add.w	r1, r9, #1
 802cffe:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802d002:	ea4f 2929 	mov.w	r9, r9, asr #8
 802d006:	f80c 9c03 	strb.w	r9, [ip, #-3]
 802d00a:	7869      	ldrb	r1, [r5, #1]
 802d00c:	f898 9001 	ldrb.w	r9, [r8, #1]
 802d010:	fb00 f101 	mul.w	r1, r0, r1
 802d014:	9c08      	ldr	r4, [sp, #32]
 802d016:	fb03 1109 	mla	r1, r3, r9, r1
 802d01a:	f894 9001 	ldrb.w	r9, [r4, #1]
 802d01e:	9f2c      	ldr	r7, [sp, #176]	@ 0xb0
 802d020:	9c2a      	ldr	r4, [sp, #168]	@ 0xa8
 802d022:	fb02 1109 	mla	r1, r2, r9, r1
 802d026:	f89e a001 	ldrb.w	sl, [lr, #1]
 802d02a:	443c      	add	r4, r7
 802d02c:	f81c 9c02 	ldrb.w	r9, [ip, #-2]
 802d030:	942a      	str	r4, [sp, #168]	@ 0xa8
 802d032:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d034:	fb06 110a 	mla	r1, r6, sl, r1
 802d038:	fb19 f904 	smulbb	r9, r9, r4
 802d03c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 802d03e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d042:	fb01 9907 	mla	r9, r1, r7, r9
 802d046:	fa1f f989 	uxth.w	r9, r9
 802d04a:	f109 0101 	add.w	r1, r9, #1
 802d04e:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802d052:	ea4f 2929 	mov.w	r9, r9, asr #8
 802d056:	f80c 9c02 	strb.w	r9, [ip, #-2]
 802d05a:	78a9      	ldrb	r1, [r5, #2]
 802d05c:	f898 5002 	ldrb.w	r5, [r8, #2]
 802d060:	fb00 f001 	mul.w	r0, r0, r1
 802d064:	fb03 0005 	mla	r0, r3, r5, r0
 802d068:	9b08      	ldr	r3, [sp, #32]
 802d06a:	f89e 4002 	ldrb.w	r4, [lr, #2]
 802d06e:	789b      	ldrb	r3, [r3, #2]
 802d070:	f81c ec01 	ldrb.w	lr, [ip, #-1]
 802d074:	fb02 0003 	mla	r0, r2, r3, r0
 802d078:	fb06 0004 	mla	r0, r6, r4, r0
 802d07c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d07e:	fb1e f404 	smulbb	r4, lr, r4
 802d082:	f3c0 2e07 	ubfx	lr, r0, #8, #8
 802d086:	fb0e 4e07 	mla	lr, lr, r7, r4
 802d08a:	fa1f fe8e 	uxth.w	lr, lr
 802d08e:	f10e 0301 	add.w	r3, lr, #1
 802d092:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 802d096:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802d098:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802d09c:	4563      	cmp	r3, ip
 802d09e:	f80c ec01 	strb.w	lr, [ip, #-1]
 802d0a2:	d034      	beq.n	802d10e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 802d0a4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802d0a6:	f10c 0c03 	add.w	ip, ip, #3
 802d0aa:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 802d0ae:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802d0b0:	1419      	asrs	r1, r3, #16
 802d0b2:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d0b6:	fb04 3101 	mla	r1, r4, r1, r3
 802d0ba:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802d0bc:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802d0be:	f812 a001 	ldrb.w	sl, [r2, r1]
 802d0c2:	4411      	add	r1, r2
 802d0c4:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 802d0c6:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802d0ca:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802d0ce:	eb06 080a 	add.w	r8, r6, sl
 802d0d2:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802d0d6:	2b00      	cmp	r3, #0
 802d0d8:	f47f af4f 	bne.w	802cf7a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 802d0dc:	b182      	cbz	r2, 802d100 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802d0de:	5d0c      	ldrb	r4, [r1, r4]
 802d0e0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802d0e2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d0e6:	1861      	adds	r1, r4, r1
 802d0e8:	9108      	str	r1, [sp, #32]
 802d0ea:	46c6      	mov	lr, r8
 802d0ec:	4645      	mov	r5, r8
 802d0ee:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802d0f0:	9f08      	ldr	r7, [sp, #32]
 802d0f2:	e756      	b.n	802cfa2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d0f4:	46c6      	mov	lr, r8
 802d0f6:	f8cd 8020 	str.w	r8, [sp, #32]
 802d0fa:	4631      	mov	r1, r6
 802d0fc:	4647      	mov	r7, r8
 802d0fe:	e750      	b.n	802cfa2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d100:	46c6      	mov	lr, r8
 802d102:	f8cd 8020 	str.w	r8, [sp, #32]
 802d106:	4645      	mov	r5, r8
 802d108:	4631      	mov	r1, r6
 802d10a:	4647      	mov	r7, r8
 802d10c:	e749      	b.n	802cfa2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d10e:	469a      	mov	sl, r3
 802d110:	e6d0      	b.n	802ceb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d112:	2a00      	cmp	r2, #0
 802d114:	f77f aece 	ble.w	802ceb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d118:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802d11c:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d120:	1439      	asrs	r1, r7, #16
 802d122:	4654      	mov	r4, sl
 802d124:	9d30      	ldr	r5, [sp, #192]	@ 0xc0
 802d126:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
 802d12a:	2b00      	cmp	r3, #0
 802d12c:	f3cb 3003 	ubfx	r0, fp, #12, #4
 802d130:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802d134:	db2f      	blt.n	802d196 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d136:	f106 3cff 	add.w	ip, r6, #4294967295
 802d13a:	4563      	cmp	r3, ip
 802d13c:	da2b      	bge.n	802d196 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d13e:	2900      	cmp	r1, #0
 802d140:	db29      	blt.n	802d196 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d142:	f10e 3cff 	add.w	ip, lr, #4294967295
 802d146:	4561      	cmp	r1, ip
 802d148:	da25      	bge.n	802d196 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d14a:	fa0f fa86 	sxth.w	sl, r6
 802d14e:	fb01 330a 	mla	r3, r1, sl, r3
 802d152:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802d154:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802d156:	f811 e003 	ldrb.w	lr, [r1, r3]
 802d15a:	440b      	add	r3, r1
 802d15c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d160:	eb06 0c0e 	add.w	ip, r6, lr
 802d164:	2800      	cmp	r0, #0
 802d166:	d052      	beq.n	802d20e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x426>
 802d168:	7859      	ldrb	r1, [r3, #1]
 802d16a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d16e:	1871      	adds	r1, r6, r1
 802d170:	910c      	str	r1, [sp, #48]	@ 0x30
 802d172:	2a00      	cmp	r2, #0
 802d174:	f000 80d5 	beq.w	802d322 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53a>
 802d178:	eb03 010a 	add.w	r1, r3, sl
 802d17c:	7849      	ldrb	r1, [r1, #1]
 802d17e:	f813 300a 	ldrb.w	r3, [r3, sl]
 802d182:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d186:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d18a:	1871      	adds	r1, r6, r1
 802d18c:	18f3      	adds	r3, r6, r3
 802d18e:	9110      	str	r1, [sp, #64]	@ 0x40
 802d190:	9311      	str	r3, [sp, #68]	@ 0x44
 802d192:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d194:	e042      	b.n	802d21c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d196:	f113 0c01 	adds.w	ip, r3, #1
 802d19a:	d406      	bmi.n	802d1aa <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d19c:	45b4      	cmp	ip, r6
 802d19e:	dc04      	bgt.n	802d1aa <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d1a0:	f111 0c01 	adds.w	ip, r1, #1
 802d1a4:	d401      	bmi.n	802d1aa <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d1a6:	45f4      	cmp	ip, lr
 802d1a8:	dd1f      	ble.n	802d1ea <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x402>
 802d1aa:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802d1ac:	f1b8 0f00 	cmp.w	r8, #0
 802d1b0:	f104 0403 	add.w	r4, r4, #3
 802d1b4:	44cb      	add	fp, r9
 802d1b6:	441f      	add	r7, r3
 802d1b8:	dd07      	ble.n	802d1ca <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802d1ba:	e9d5 6e02 	ldrd	r6, lr, [r5, #8]
 802d1be:	f108 38ff 	add.w	r8, r8, #4294967295
 802d1c2:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d1c6:	1439      	asrs	r1, r7, #16
 802d1c8:	e7af      	b.n	802d12a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d1ca:	9b08      	ldr	r3, [sp, #32]
 802d1cc:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 802d1d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802d1d4:	3301      	adds	r3, #1
 802d1d6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d1da:	449a      	add	sl, r3
 802d1dc:	e66a      	b.n	802ceb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d1de:	3a01      	subs	r2, #1
 802d1e0:	f8dd e020 	ldr.w	lr, [sp, #32]
 802d1e4:	4690      	mov	r8, r2
 802d1e6:	9208      	str	r2, [sp, #32]
 802d1e8:	e79b      	b.n	802d122 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802d1ea:	fa0f fe8e 	sxth.w	lr, lr
 802d1ee:	b236      	sxth	r6, r6
 802d1f0:	e9cd 6e00 	strd	r6, lr, [sp]
 802d1f4:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 802d1f6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802d1fa:	e9cd 2605 	strd	r2, r6, [sp, #20]
 802d1fe:	9302      	str	r3, [sp, #8]
 802d200:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802d202:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d204:	4621      	mov	r1, r4
 802d206:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802d208:	f7ff fcd4 	bl	802cbb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>
 802d20c:	e7cd      	b.n	802d1aa <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d20e:	2a00      	cmp	r2, #0
 802d210:	d17b      	bne.n	802d30a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x522>
 802d212:	4661      	mov	r1, ip
 802d214:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 802d218:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802d21c:	b283      	uxth	r3, r0
 802d21e:	b292      	uxth	r2, r2
 802d220:	fb03 f602 	mul.w	r6, r3, r2
 802d224:	011b      	lsls	r3, r3, #4
 802d226:	7809      	ldrb	r1, [r1, #0]
 802d228:	1b98      	subs	r0, r3, r6
 802d22a:	b280      	uxth	r0, r0
 802d22c:	9012      	str	r0, [sp, #72]	@ 0x48
 802d22e:	fb00 f101 	mul.w	r1, r0, r1
 802d232:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802d236:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802d238:	b292      	uxth	r2, r2
 802d23a:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d23e:	f810 e00e 	ldrb.w	lr, [r0, lr]
 802d242:	1a9b      	subs	r3, r3, r2
 802d244:	b29b      	uxth	r3, r3
 802d246:	fb03 110e 	mla	r1, r3, lr, r1
 802d24a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d24c:	f890 a000 	ldrb.w	sl, [r0]
 802d250:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802d252:	fb02 110a 	mla	r1, r2, sl, r1
 802d256:	f890 e000 	ldrb.w	lr, [r0]
 802d25a:	f894 a000 	ldrb.w	sl, [r4]
 802d25e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d260:	fb06 110e 	mla	r1, r6, lr, r1
 802d264:	fb1a fa00 	smulbb	sl, sl, r0
 802d268:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d26a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d26e:	fb01 a100 	mla	r1, r1, r0, sl
 802d272:	b289      	uxth	r1, r1
 802d274:	f101 0e01 	add.w	lr, r1, #1
 802d278:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802d27c:	1209      	asrs	r1, r1, #8
 802d27e:	7021      	strb	r1, [r4, #0]
 802d280:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d282:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802d284:	7849      	ldrb	r1, [r1, #1]
 802d286:	f89c e001 	ldrb.w	lr, [ip, #1]
 802d28a:	fb00 f101 	mul.w	r1, r0, r1
 802d28e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d290:	fb03 110e 	mla	r1, r3, lr, r1
 802d294:	f890 a001 	ldrb.w	sl, [r0, #1]
 802d298:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802d29a:	fb02 110a 	mla	r1, r2, sl, r1
 802d29e:	f890 e001 	ldrb.w	lr, [r0, #1]
 802d2a2:	f894 a001 	ldrb.w	sl, [r4, #1]
 802d2a6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d2a8:	fb06 110e 	mla	r1, r6, lr, r1
 802d2ac:	fb1a fa00 	smulbb	sl, sl, r0
 802d2b0:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d2b2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d2b6:	fb01 a100 	mla	r1, r1, r0, sl
 802d2ba:	b289      	uxth	r1, r1
 802d2bc:	f101 0e01 	add.w	lr, r1, #1
 802d2c0:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802d2c4:	1209      	asrs	r1, r1, #8
 802d2c6:	7061      	strb	r1, [r4, #1]
 802d2c8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d2ca:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802d2cc:	7889      	ldrb	r1, [r1, #2]
 802d2ce:	f89c c002 	ldrb.w	ip, [ip, #2]
 802d2d2:	fb00 f001 	mul.w	r0, r0, r1
 802d2d6:	fb03 010c 	mla	r1, r3, ip, r0
 802d2da:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d2dc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802d2de:	7880      	ldrb	r0, [r0, #2]
 802d2e0:	789b      	ldrb	r3, [r3, #2]
 802d2e2:	fb02 1100 	mla	r1, r2, r0, r1
 802d2e6:	78a2      	ldrb	r2, [r4, #2]
 802d2e8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d2ea:	fb06 1303 	mla	r3, r6, r3, r1
 802d2ee:	fb12 f200 	smulbb	r2, r2, r0
 802d2f2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d2f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802d2f8:	fb03 2300 	mla	r3, r3, r0, r2
 802d2fc:	b29b      	uxth	r3, r3
 802d2fe:	1c5a      	adds	r2, r3, #1
 802d300:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802d304:	121b      	asrs	r3, r3, #8
 802d306:	70a3      	strb	r3, [r4, #2]
 802d308:	e74f      	b.n	802d1aa <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d30a:	f813 300a 	ldrb.w	r3, [r3, sl]
 802d30e:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802d312:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d316:	18f3      	adds	r3, r6, r3
 802d318:	9311      	str	r3, [sp, #68]	@ 0x44
 802d31a:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802d31e:	4661      	mov	r1, ip
 802d320:	e77c      	b.n	802d21c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d322:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 802d326:	e779      	b.n	802d21c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d328:	f43f adc4 	beq.w	802ceb4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d32c:	1e65      	subs	r5, r4, #1
 802d32e:	e602      	b.n	802cf36 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>

0802d330 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>:
 802d330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d334:	b083      	sub	sp, #12
 802d336:	f9bd 8030 	ldrsh.w	r8, [sp, #48]	@ 0x30
 802d33a:	f891 9001 	ldrb.w	r9, [r1, #1]
 802d33e:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	@ 0x38
 802d342:	7888      	ldrb	r0, [r1, #2]
 802d344:	fb07 6c08 	mla	ip, r7, r8, r6
 802d348:	ea4f 2909 	mov.w	r9, r9, lsl #8
 802d34c:	780c      	ldrb	r4, [r1, #0]
 802d34e:	ea49 4900 	orr.w	r9, r9, r0, lsl #16
 802d352:	ea49 0404 	orr.w	r4, r9, r4
 802d356:	2f00      	cmp	r7, #0
 802d358:	9401      	str	r4, [sp, #4]
 802d35a:	eb02 090c 	add.w	r9, r2, ip
 802d35e:	f107 0e01 	add.w	lr, r7, #1
 802d362:	f9bd a034 	ldrsh.w	sl, [sp, #52]	@ 0x34
 802d366:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 802d36a:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 802d36e:	db01      	blt.n	802d374 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x44>
 802d370:	45ba      	cmp	sl, r7
 802d372:	dc6e      	bgt.n	802d452 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x122>
 802d374:	fa5f fb84 	uxtb.w	fp, r4
 802d378:	af01      	add	r7, sp, #4
 802d37a:	465a      	mov	r2, fp
 802d37c:	46bc      	mov	ip, r7
 802d37e:	f1be 0f00 	cmp.w	lr, #0
 802d382:	db01      	blt.n	802d388 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x58>
 802d384:	45f2      	cmp	sl, lr
 802d386:	dc49      	bgt.n	802d41c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xec>
 802d388:	fa5f fa84 	uxtb.w	sl, r4
 802d38c:	ab01      	add	r3, sp, #4
 802d38e:	46d1      	mov	r9, sl
 802d390:	469e      	mov	lr, r3
 802d392:	280f      	cmp	r0, #15
 802d394:	f200 8098 	bhi.w	802d4c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d398:	2d0f      	cmp	r5, #15
 802d39a:	f200 8095 	bhi.w	802d4c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d39e:	b280      	uxth	r0, r0
 802d3a0:	b2ad      	uxth	r5, r5
 802d3a2:	fb00 f805 	mul.w	r8, r0, r5
 802d3a6:	0104      	lsls	r4, r0, #4
 802d3a8:	eba4 0608 	sub.w	r6, r4, r8
 802d3ac:	b2b6      	uxth	r6, r6
 802d3ae:	fb06 f002 	mul.w	r0, r6, r2
 802d3b2:	ebc8 1505 	rsb	r5, r8, r5, lsl #4
 802d3b6:	b2ad      	uxth	r5, r5
 802d3b8:	f5c4 7280 	rsb	r2, r4, #256	@ 0x100
 802d3bc:	1b52      	subs	r2, r2, r5
 802d3be:	b292      	uxth	r2, r2
 802d3c0:	fb02 000b 	mla	r0, r2, fp, r0
 802d3c4:	fb05 000a 	mla	r0, r5, sl, r0
 802d3c8:	fb08 0009 	mla	r0, r8, r9, r0
 802d3cc:	1200      	asrs	r0, r0, #8
 802d3ce:	7008      	strb	r0, [r1, #0]
 802d3d0:	f897 9001 	ldrb.w	r9, [r7, #1]
 802d3d4:	f89c 4001 	ldrb.w	r4, [ip, #1]
 802d3d8:	fb06 f909 	mul.w	r9, r6, r9
 802d3dc:	fb02 9904 	mla	r9, r2, r4, r9
 802d3e0:	f89e 4001 	ldrb.w	r4, [lr, #1]
 802d3e4:	7858      	ldrb	r0, [r3, #1]
 802d3e6:	fb05 9404 	mla	r4, r5, r4, r9
 802d3ea:	fb08 4000 	mla	r0, r8, r0, r4
 802d3ee:	1200      	asrs	r0, r0, #8
 802d3f0:	7048      	strb	r0, [r1, #1]
 802d3f2:	78bc      	ldrb	r4, [r7, #2]
 802d3f4:	f89c 0002 	ldrb.w	r0, [ip, #2]
 802d3f8:	fb06 f604 	mul.w	r6, r6, r4
 802d3fc:	fb02 6600 	mla	r6, r2, r0, r6
 802d400:	f89e 0002 	ldrb.w	r0, [lr, #2]
 802d404:	789b      	ldrb	r3, [r3, #2]
 802d406:	fb05 6500 	mla	r5, r5, r0, r6
 802d40a:	fb08 5803 	mla	r8, r8, r3, r5
 802d40e:	ea4f 2828 	mov.w	r8, r8, asr #8
 802d412:	f881 8002 	strb.w	r8, [r1, #2]
 802d416:	b003      	add	sp, #12
 802d418:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d41c:	b385      	cbz	r5, 802d480 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x150>
 802d41e:	2e00      	cmp	r6, #0
 802d420:	db40      	blt.n	802d4a4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x174>
 802d422:	45b0      	cmp	r8, r6
 802d424:	dd3e      	ble.n	802d4a4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x174>
 802d426:	f819 e008 	ldrb.w	lr, [r9, r8]
 802d42a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d42e:	449e      	add	lr, r3
 802d430:	3601      	adds	r6, #1
 802d432:	f89e a000 	ldrb.w	sl, [lr]
 802d436:	d431      	bmi.n	802d49c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x16c>
 802d438:	45b0      	cmp	r8, r6
 802d43a:	dd2f      	ble.n	802d49c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x16c>
 802d43c:	2800      	cmp	r0, #0
 802d43e:	d03f      	beq.n	802d4c0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x190>
 802d440:	44c8      	add	r8, r9
 802d442:	f898 4001 	ldrb.w	r4, [r8, #1]
 802d446:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d44a:	f813 9004 	ldrb.w	r9, [r3, r4]
 802d44e:	4423      	add	r3, r4
 802d450:	e79f      	b.n	802d392 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x62>
 802d452:	2e00      	cmp	r6, #0
 802d454:	db01      	blt.n	802d45a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12a>
 802d456:	45b0      	cmp	r8, r6
 802d458:	dc1a      	bgt.n	802d490 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x160>
 802d45a:	f10d 0c04 	add.w	ip, sp, #4
 802d45e:	1c72      	adds	r2, r6, #1
 802d460:	f89c b000 	ldrb.w	fp, [ip]
 802d464:	d409      	bmi.n	802d47a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x14a>
 802d466:	4590      	cmp	r8, r2
 802d468:	dd07      	ble.n	802d47a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x14a>
 802d46a:	b1f0      	cbz	r0, 802d4aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x17a>
 802d46c:	f899 7001 	ldrb.w	r7, [r9, #1]
 802d470:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802d474:	5dda      	ldrb	r2, [r3, r7]
 802d476:	441f      	add	r7, r3
 802d478:	e781      	b.n	802d37e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 802d47a:	b2e2      	uxtb	r2, r4
 802d47c:	af01      	add	r7, sp, #4
 802d47e:	e77e      	b.n	802d37e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 802d480:	280f      	cmp	r0, #15
 802d482:	fa5f fa84 	uxtb.w	sl, r4
 802d486:	d81f      	bhi.n	802d4c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d488:	ab01      	add	r3, sp, #4
 802d48a:	469e      	mov	lr, r3
 802d48c:	46d1      	mov	r9, sl
 802d48e:	e786      	b.n	802d39e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x6e>
 802d490:	f812 c00c 	ldrb.w	ip, [r2, ip]
 802d494:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802d498:	449c      	add	ip, r3
 802d49a:	e7e0      	b.n	802d45e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12e>
 802d49c:	fa5f f984 	uxtb.w	r9, r4
 802d4a0:	ab01      	add	r3, sp, #4
 802d4a2:	e776      	b.n	802d392 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x62>
 802d4a4:	f10d 0e04 	add.w	lr, sp, #4
 802d4a8:	e7c2      	b.n	802d430 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x100>
 802d4aa:	f1be 0f00 	cmp.w	lr, #0
 802d4ae:	b2e2      	uxtb	r2, r4
 802d4b0:	af01      	add	r7, sp, #4
 802d4b2:	f6bf af67 	bge.w	802d384 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x54>
 802d4b6:	463b      	mov	r3, r7
 802d4b8:	46be      	mov	lr, r7
 802d4ba:	4691      	mov	r9, r2
 802d4bc:	4692      	mov	sl, r2
 802d4be:	e76b      	b.n	802d398 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 802d4c0:	fa5f f984 	uxtb.w	r9, r4
 802d4c4:	ab01      	add	r3, sp, #4
 802d4c6:	e767      	b.n	802d398 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 802d4c8:	4b03      	ldr	r3, [pc, #12]	@ (802d4d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1a8>)
 802d4ca:	4a04      	ldr	r2, [pc, #16]	@ (802d4dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1ac>)
 802d4cc:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802d4d0:	4803      	ldr	r0, [pc, #12]	@ (802d4e0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1b0>)
 802d4d2:	f004 ffd9 	bl	8032488 <__assert_func>
 802d4d6:	bf00      	nop
 802d4d8:	0803663c 	.word	0x0803663c
 802d4dc:	08036cb8 	.word	0x08036cb8
 802d4e0:	080367c4 	.word	0x080367c4

0802d4e4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802d4e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d4e8:	ed2d 8b0a 	vpush	{d8-d12}
 802d4ec:	eeb0 aa40 	vmov.f32	s20, s0
 802d4f0:	eef0 9a60 	vmov.f32	s19, s1
 802d4f4:	eeb0 9a41 	vmov.f32	s18, s2
 802d4f8:	eef0 8a62 	vmov.f32	s17, s5
 802d4fc:	eeb0 8a43 	vmov.f32	s16, s6
 802d500:	eeb0 ca44 	vmov.f32	s24, s8
 802d504:	eef0 ba64 	vmov.f32	s23, s9
 802d508:	eeb0 ba45 	vmov.f32	s22, s10
 802d50c:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802d510:	b093      	sub	sp, #76	@ 0x4c
 802d512:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802d516:	e9dd 412b 	ldrd	r4, r1, [sp, #172]	@ 0xac
 802d51a:	e9dd 9b27 	ldrd	r9, fp, [sp, #156]	@ 0x9c
 802d51e:	9011      	str	r0, [sp, #68]	@ 0x44
 802d520:	461a      	mov	r2, r3
 802d522:	6860      	ldr	r0, [r4, #4]
 802d524:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802d526:	fb00 1803 	mla	r8, r0, r3, r1
 802d52a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d52c:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 802d52e:	6821      	ldr	r1, [r4, #0]
 802d530:	685b      	ldr	r3, [r3, #4]
 802d532:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802d536:	6800      	ldr	r0, [r0, #0]
 802d538:	eb01 0a08 	add.w	sl, r1, r8
 802d53c:	3304      	adds	r3, #4
 802d53e:	f8dd 80a4 	ldr.w	r8, [sp, #164]	@ 0xa4
 802d542:	9009      	str	r0, [sp, #36]	@ 0x24
 802d544:	9307      	str	r3, [sp, #28]
 802d546:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d548:	2b00      	cmp	r3, #0
 802d54a:	dc02      	bgt.n	802d552 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802d54c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802d54e:	2b00      	cmp	r3, #0
 802d550:	dd61      	ble.n	802d616 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802d552:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d554:	2a00      	cmp	r2, #0
 802d556:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 802d55a:	b230      	sxth	r0, r6
 802d55c:	fa0f f78e 	sxth.w	r7, lr
 802d560:	f340 81fe 	ble.w	802d960 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 802d564:	f8cd e018 	str.w	lr, [sp, #24]
 802d568:	f8dd e0a8 	ldr.w	lr, [sp, #168]	@ 0xa8
 802d56c:	1e45      	subs	r5, r0, #1
 802d56e:	f107 3cff 	add.w	ip, r7, #4294967295
 802d572:	ea5f 4329 	movs.w	r3, r9, asr #16
 802d576:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d57a:	d405      	bmi.n	802d588 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d57c:	42ab      	cmp	r3, r5
 802d57e:	da03      	bge.n	802d588 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d580:	2900      	cmp	r1, #0
 802d582:	db01      	blt.n	802d588 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d584:	4561      	cmp	r1, ip
 802d586:	db4b      	blt.n	802d620 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802d588:	1c5c      	adds	r4, r3, #1
 802d58a:	d406      	bmi.n	802d59a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d58c:	4284      	cmp	r4, r0
 802d58e:	dc04      	bgt.n	802d59a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d590:	1c4c      	adds	r4, r1, #1
 802d592:	d402      	bmi.n	802d59a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d594:	42bc      	cmp	r4, r7
 802d596:	f340 815e 	ble.w	802d856 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802d59a:	3a01      	subs	r2, #1
 802d59c:	44c1      	add	r9, r8
 802d59e:	44f3      	add	fp, lr
 802d5a0:	f10a 0a03 	add.w	sl, sl, #3
 802d5a4:	d1e5      	bne.n	802d572 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802d5a6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d5a8:	2b00      	cmp	r3, #0
 802d5aa:	dd34      	ble.n	802d616 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802d5ac:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802d5b0:	ee79 9aab 	vadd.f32	s19, s19, s23
 802d5b4:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802d5b8:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802d5bc:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802d5c0:	ee69 7a27 	vmul.f32	s15, s18, s15
 802d5c4:	ee76 6a68 	vsub.f32	s13, s12, s17
 802d5c8:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802d5cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802d5d0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d5d4:	ee16 2a90 	vmov	r2, s13
 802d5d8:	3b01      	subs	r3, #1
 802d5da:	930a      	str	r3, [sp, #40]	@ 0x28
 802d5dc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802d5de:	fb92 f8f3 	sdiv	r8, r2, r3
 802d5e2:	ee17 2a10 	vmov	r2, s14
 802d5e6:	eeb0 7a48 	vmov.f32	s14, s16
 802d5ea:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d5ee:	ee17 ba10 	vmov	fp, s14
 802d5f2:	eeb0 7a68 	vmov.f32	s14, s17
 802d5f6:	fb92 f3f3 	sdiv	r3, r2, r3
 802d5fa:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d5fe:	932a      	str	r3, [sp, #168]	@ 0xa8
 802d600:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802d602:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802d604:	ee17 9a10 	vmov	r9, s14
 802d608:	eeb0 8a67 	vmov.f32	s16, s15
 802d60c:	eef0 8a46 	vmov.f32	s17, s12
 802d610:	bf18      	it	ne
 802d612:	461a      	movne	r2, r3
 802d614:	e797      	b.n	802d546 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 802d616:	b013      	add	sp, #76	@ 0x4c
 802d618:	ecbd 8b0a 	vpop	{d8-d12}
 802d61c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d620:	f8dd e018 	ldr.w	lr, [sp, #24]
 802d624:	1e51      	subs	r1, r2, #1
 802d626:	fb08 9301 	mla	r3, r8, r1, r9
 802d62a:	141b      	asrs	r3, r3, #16
 802d62c:	9106      	str	r1, [sp, #24]
 802d62e:	f100 80aa 	bmi.w	802d786 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d632:	42ab      	cmp	r3, r5
 802d634:	f280 80a7 	bge.w	802d786 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d638:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802d63a:	fb03 b301 	mla	r3, r3, r1, fp
 802d63e:	141b      	asrs	r3, r3, #16
 802d640:	f100 80a1 	bmi.w	802d786 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d644:	3f01      	subs	r7, #1
 802d646:	42bb      	cmp	r3, r7
 802d648:	f280 809d 	bge.w	802d786 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d64c:	2a00      	cmp	r2, #0
 802d64e:	ddaa      	ble.n	802d5a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d650:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802d654:	eb0a 0302 	add.w	r3, sl, r2
 802d658:	9308      	str	r3, [sp, #32]
 802d65a:	f10a 0a03 	add.w	sl, sl, #3
 802d65e:	f8cd 80a4 	str.w	r8, [sp, #164]	@ 0xa4
 802d662:	e062      	b.n	802d72a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 802d664:	784c      	ldrb	r4, [r1, #1]
 802d666:	180d      	adds	r5, r1, r0
 802d668:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d66c:	4434      	add	r4, r6
 802d66e:	2a00      	cmp	r2, #0
 802d670:	d07c      	beq.n	802d76c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802d672:	5c08      	ldrb	r0, [r1, r0]
 802d674:	786f      	ldrb	r7, [r5, #1]
 802d676:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802d67a:	1981      	adds	r1, r0, r6
 802d67c:	4608      	mov	r0, r1
 802d67e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802d682:	9106      	str	r1, [sp, #24]
 802d684:	4437      	add	r7, r6
 802d686:	b29b      	uxth	r3, r3
 802d688:	b292      	uxth	r2, r2
 802d68a:	fb03 f502 	mul.w	r5, r3, r2
 802d68e:	011b      	lsls	r3, r3, #4
 802d690:	f894 e000 	ldrb.w	lr, [r4]
 802d694:	1b59      	subs	r1, r3, r5
 802d696:	b289      	uxth	r1, r1
 802d698:	fb01 fe0e 	mul.w	lr, r1, lr
 802d69c:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802d6a0:	b292      	uxth	r2, r2
 802d6a2:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d6a6:	f816 6008 	ldrb.w	r6, [r6, r8]
 802d6aa:	1a9b      	subs	r3, r3, r2
 802d6ac:	b29b      	uxth	r3, r3
 802d6ae:	fb03 e606 	mla	r6, r3, r6, lr
 802d6b2:	f890 e000 	ldrb.w	lr, [r0]
 802d6b6:	f897 8000 	ldrb.w	r8, [r7]
 802d6ba:	fb02 660e 	mla	r6, r2, lr, r6
 802d6be:	fb05 6808 	mla	r8, r5, r8, r6
 802d6c2:	ea4f 2828 	mov.w	r8, r8, asr #8
 802d6c6:	f80a 8c03 	strb.w	r8, [sl, #-3]
 802d6ca:	f894 8001 	ldrb.w	r8, [r4, #1]
 802d6ce:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802d6d0:	fb01 f608 	mul.w	r6, r1, r8
 802d6d4:	f89c e001 	ldrb.w	lr, [ip, #1]
 802d6d8:	4481      	add	r9, r0
 802d6da:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 802d6dc:	fb03 680e 	mla	r8, r3, lr, r6
 802d6e0:	4483      	add	fp, r0
 802d6e2:	9806      	ldr	r0, [sp, #24]
 802d6e4:	787e      	ldrb	r6, [r7, #1]
 802d6e6:	f890 e001 	ldrb.w	lr, [r0, #1]
 802d6ea:	fb02 8e0e 	mla	lr, r2, lr, r8
 802d6ee:	fb05 ee06 	mla	lr, r5, r6, lr
 802d6f2:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802d6f6:	f80a ec02 	strb.w	lr, [sl, #-2]
 802d6fa:	78a4      	ldrb	r4, [r4, #2]
 802d6fc:	f89c 6002 	ldrb.w	r6, [ip, #2]
 802d700:	fb01 f104 	mul.w	r1, r1, r4
 802d704:	fb03 1106 	mla	r1, r3, r6, r1
 802d708:	7883      	ldrb	r3, [r0, #2]
 802d70a:	78b8      	ldrb	r0, [r7, #2]
 802d70c:	fb02 1103 	mla	r1, r2, r3, r1
 802d710:	fb05 1500 	mla	r5, r5, r0, r1
 802d714:	9b08      	ldr	r3, [sp, #32]
 802d716:	122d      	asrs	r5, r5, #8
 802d718:	4553      	cmp	r3, sl
 802d71a:	f80a 5c01 	strb.w	r5, [sl, #-1]
 802d71e:	d030      	beq.n	802d782 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 802d720:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d722:	f10a 0a03 	add.w	sl, sl, #3
 802d726:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802d72a:	ea4f 4329 	mov.w	r3, r9, asr #16
 802d72e:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d732:	fb00 3101 	mla	r1, r0, r1, r3
 802d736:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802d738:	9e07      	ldr	r6, [sp, #28]
 802d73a:	f812 8001 	ldrb.w	r8, [r2, r1]
 802d73e:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802d742:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802d746:	4411      	add	r1, r2
 802d748:	eb06 0c08 	add.w	ip, r6, r8
 802d74c:	f3cb 3203 	ubfx	r2, fp, #12, #4
 802d750:	2b00      	cmp	r3, #0
 802d752:	d187      	bne.n	802d664 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x180>
 802d754:	b17a      	cbz	r2, 802d776 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 802d756:	5c08      	ldrb	r0, [r1, r0]
 802d758:	9907      	ldr	r1, [sp, #28]
 802d75a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802d75e:	1841      	adds	r1, r0, r1
 802d760:	4667      	mov	r7, ip
 802d762:	9106      	str	r1, [sp, #24]
 802d764:	4664      	mov	r4, ip
 802d766:	9e07      	ldr	r6, [sp, #28]
 802d768:	4608      	mov	r0, r1
 802d76a:	e78c      	b.n	802d686 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802d76c:	4667      	mov	r7, ip
 802d76e:	f8cd c018 	str.w	ip, [sp, #24]
 802d772:	4660      	mov	r0, ip
 802d774:	e787      	b.n	802d686 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802d776:	4667      	mov	r7, ip
 802d778:	f8cd c018 	str.w	ip, [sp, #24]
 802d77c:	4664      	mov	r4, ip
 802d77e:	4660      	mov	r0, ip
 802d780:	e781      	b.n	802d686 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802d782:	469a      	mov	sl, r3
 802d784:	e70f      	b.n	802d5a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d786:	2a00      	cmp	r2, #0
 802d788:	f77f af0d 	ble.w	802d5a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d78c:	9d06      	ldr	r5, [sp, #24]
 802d78e:	ea4f 4329 	mov.w	r3, r9, asr #16
 802d792:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d796:	4657      	mov	r7, sl
 802d798:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
 802d79c:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802d79e:	f8dd a0a8 	ldr.w	sl, [sp, #168]	@ 0xa8
 802d7a2:	2b00      	cmp	r3, #0
 802d7a4:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802d7a8:	f3cb 3203 	ubfx	r2, fp, #12, #4
 802d7ac:	db31      	blt.n	802d812 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d7ae:	f106 3cff 	add.w	ip, r6, #4294967295
 802d7b2:	4563      	cmp	r3, ip
 802d7b4:	da2d      	bge.n	802d812 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d7b6:	2900      	cmp	r1, #0
 802d7b8:	db2b      	blt.n	802d812 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d7ba:	f10e 3cff 	add.w	ip, lr, #4294967295
 802d7be:	4561      	cmp	r1, ip
 802d7c0:	da27      	bge.n	802d812 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d7c2:	fa0f fc86 	sxth.w	ip, r6
 802d7c6:	fb01 330c 	mla	r3, r1, ip, r3
 802d7ca:	9e07      	ldr	r6, [sp, #28]
 802d7cc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802d7ce:	f811 e003 	ldrb.w	lr, [r1, r3]
 802d7d2:	440b      	add	r3, r1
 802d7d4:	4631      	mov	r1, r6
 802d7d6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d7da:	4471      	add	r1, lr
 802d7dc:	910e      	str	r1, [sp, #56]	@ 0x38
 802d7de:	2800      	cmp	r0, #0
 802d7e0:	d04f      	beq.n	802d882 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802d7e2:	7859      	ldrb	r1, [r3, #1]
 802d7e4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d7e8:	1871      	adds	r1, r6, r1
 802d7ea:	9108      	str	r1, [sp, #32]
 802d7ec:	2a00      	cmp	r2, #0
 802d7ee:	f000 80b2 	beq.w	802d956 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 802d7f2:	eb03 010c 	add.w	r1, r3, ip
 802d7f6:	f813 600c 	ldrb.w	r6, [r3, ip]
 802d7fa:	7849      	ldrb	r1, [r1, #1]
 802d7fc:	9b07      	ldr	r3, [sp, #28]
 802d7fe:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802d802:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d806:	1859      	adds	r1, r3, r1
 802d808:	18f3      	adds	r3, r6, r3
 802d80a:	910c      	str	r1, [sp, #48]	@ 0x30
 802d80c:	930d      	str	r3, [sp, #52]	@ 0x34
 802d80e:	9e08      	ldr	r6, [sp, #32]
 802d810:	e03d      	b.n	802d88e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802d812:	f113 0c01 	adds.w	ip, r3, #1
 802d816:	d406      	bmi.n	802d826 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d818:	45b4      	cmp	ip, r6
 802d81a:	dc04      	bgt.n	802d826 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d81c:	f111 0c01 	adds.w	ip, r1, #1
 802d820:	d401      	bmi.n	802d826 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d822:	45f4      	cmp	ip, lr
 802d824:	dd1d      	ble.n	802d862 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802d826:	2d00      	cmp	r5, #0
 802d828:	f107 0703 	add.w	r7, r7, #3
 802d82c:	44c1      	add	r9, r8
 802d82e:	44d3      	add	fp, sl
 802d830:	dd07      	ble.n	802d842 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802d832:	e9d4 6e02 	ldrd	r6, lr, [r4, #8]
 802d836:	3d01      	subs	r5, #1
 802d838:	ea4f 4329 	mov.w	r3, r9, asr #16
 802d83c:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d840:	e7af      	b.n	802d7a2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802d842:	9b06      	ldr	r3, [sp, #24]
 802d844:	f8dd a03c 	ldr.w	sl, [sp, #60]	@ 0x3c
 802d848:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802d84c:	3301      	adds	r3, #1
 802d84e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d852:	449a      	add	sl, r3
 802d854:	e6a7      	b.n	802d5a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d856:	3a01      	subs	r2, #1
 802d858:	f8dd e018 	ldr.w	lr, [sp, #24]
 802d85c:	4615      	mov	r5, r2
 802d85e:	9206      	str	r2, [sp, #24]
 802d860:	e799      	b.n	802d796 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802d862:	fa0f fe8e 	sxth.w	lr, lr
 802d866:	b236      	sxth	r6, r6
 802d868:	e9cd 0204 	strd	r0, r2, [sp, #16]
 802d86c:	e9cd 3102 	strd	r3, r1, [sp, #8]
 802d870:	e9cd 6e00 	strd	r6, lr, [sp]
 802d874:	9b07      	ldr	r3, [sp, #28]
 802d876:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802d878:	4639      	mov	r1, r7
 802d87a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d87c:	f7ff fd58 	bl	802d330 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>
 802d880:	e7d1      	b.n	802d826 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d882:	2a00      	cmp	r2, #0
 802d884:	d15b      	bne.n	802d93e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45a>
 802d886:	460e      	mov	r6, r1
 802d888:	e9cd 110c 	strd	r1, r1, [sp, #48]	@ 0x30
 802d88c:	9108      	str	r1, [sp, #32]
 802d88e:	b283      	uxth	r3, r0
 802d890:	b292      	uxth	r2, r2
 802d892:	fb03 f002 	mul.w	r0, r3, r2
 802d896:	011b      	lsls	r3, r3, #4
 802d898:	f896 c000 	ldrb.w	ip, [r6]
 802d89c:	1a19      	subs	r1, r3, r0
 802d89e:	b289      	uxth	r1, r1
 802d8a0:	fb01 fc0c 	mul.w	ip, r1, ip
 802d8a4:	9e07      	ldr	r6, [sp, #28]
 802d8a6:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802d8aa:	b292      	uxth	r2, r2
 802d8ac:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d8b0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 802d8b4:	1a9b      	subs	r3, r3, r2
 802d8b6:	b29b      	uxth	r3, r3
 802d8b8:	fb03 cc0e 	mla	ip, r3, lr, ip
 802d8bc:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 802d8be:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802d8c2:	f896 e000 	ldrb.w	lr, [r6]
 802d8c6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802d8c8:	f896 c000 	ldrb.w	ip, [r6]
 802d8cc:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802d8ce:	fb02 6e0e 	mla	lr, r2, lr, r6
 802d8d2:	fb00 ec0c 	mla	ip, r0, ip, lr
 802d8d6:	9e08      	ldr	r6, [sp, #32]
 802d8d8:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 802d8dc:	f887 c000 	strb.w	ip, [r7]
 802d8e0:	f896 c001 	ldrb.w	ip, [r6, #1]
 802d8e4:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802d8e6:	fb01 fc0c 	mul.w	ip, r1, ip
 802d8ea:	f896 e001 	ldrb.w	lr, [r6, #1]
 802d8ee:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 802d8f0:	fb03 ce0e 	mla	lr, r3, lr, ip
 802d8f4:	f896 c001 	ldrb.w	ip, [r6, #1]
 802d8f8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802d8fa:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802d8fe:	f896 c001 	ldrb.w	ip, [r6, #1]
 802d902:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802d904:	fb02 ee06 	mla	lr, r2, r6, lr
 802d908:	fb00 ec0c 	mla	ip, r0, ip, lr
 802d90c:	9e08      	ldr	r6, [sp, #32]
 802d90e:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 802d912:	f887 c001 	strb.w	ip, [r7, #1]
 802d916:	f896 c002 	ldrb.w	ip, [r6, #2]
 802d91a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802d91c:	fb01 f10c 	mul.w	r1, r1, ip
 802d920:	f896 e002 	ldrb.w	lr, [r6, #2]
 802d924:	fb03 110e 	mla	r1, r3, lr, r1
 802d928:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802d92a:	789e      	ldrb	r6, [r3, #2]
 802d92c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802d92e:	fb02 1206 	mla	r2, r2, r6, r1
 802d932:	789b      	ldrb	r3, [r3, #2]
 802d934:	fb00 2303 	mla	r3, r0, r3, r2
 802d938:	121b      	asrs	r3, r3, #8
 802d93a:	70bb      	strb	r3, [r7, #2]
 802d93c:	e773      	b.n	802d826 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d93e:	4631      	mov	r1, r6
 802d940:	f813 600c 	ldrb.w	r6, [r3, ip]
 802d944:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802d946:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802d94a:	1871      	adds	r1, r6, r1
 802d94c:	930c      	str	r3, [sp, #48]	@ 0x30
 802d94e:	910d      	str	r1, [sp, #52]	@ 0x34
 802d950:	9308      	str	r3, [sp, #32]
 802d952:	461e      	mov	r6, r3
 802d954:	e79b      	b.n	802d88e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802d956:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802d958:	e9cd 660c 	strd	r6, r6, [sp, #48]	@ 0x30
 802d95c:	460e      	mov	r6, r1
 802d95e:	e796      	b.n	802d88e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802d960:	f43f ae21 	beq.w	802d5a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d964:	1e45      	subs	r5, r0, #1
 802d966:	e65d      	b.n	802d624 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>

0802d968 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>:
 802d968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d96c:	b087      	sub	sp, #28
 802d96e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 802d972:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 802d976:	fb06 080c 	mla	r8, r6, ip, r0
 802d97a:	2e00      	cmp	r6, #0
 802d97c:	4696      	mov	lr, r2
 802d97e:	eb02 0a08 	add.w	sl, r2, r8
 802d982:	f106 0b01 	add.w	fp, r6, #1
 802d986:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 802d98a:	f89d 7050 	ldrb.w	r7, [sp, #80]	@ 0x50
 802d98e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 802d992:	f89d 4058 	ldrb.w	r4, [sp, #88]	@ 0x58
 802d996:	db02      	blt.n	802d99e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x36>
 802d998:	42b2      	cmp	r2, r6
 802d99a:	f300 80f1 	bgt.w	802db80 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x218>
 802d99e:	2600      	movs	r6, #0
 802d9a0:	46b1      	mov	r9, r6
 802d9a2:	46b0      	mov	r8, r6
 802d9a4:	46b6      	mov	lr, r6
 802d9a6:	f1bb 0f00 	cmp.w	fp, #0
 802d9aa:	db02      	blt.n	802d9b2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x4a>
 802d9ac:	455a      	cmp	r2, fp
 802d9ae:	f300 8101 	bgt.w	802dbb4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x24c>
 802d9b2:	f04f 0c00 	mov.w	ip, #0
 802d9b6:	e9cd cc02 	strd	ip, ip, [sp, #8]
 802d9ba:	f8cd c004 	str.w	ip, [sp, #4]
 802d9be:	2f0f      	cmp	r7, #15
 802d9c0:	f200 813a 	bhi.w	802dc38 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802d9c4:	2d0f      	cmp	r5, #15
 802d9c6:	f200 8137 	bhi.w	802dc38 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802d9ca:	b2a8      	uxth	r0, r5
 802d9cc:	b2bb      	uxth	r3, r7
 802d9ce:	fb00 f503 	mul.w	r5, r0, r3
 802d9d2:	9a01      	ldr	r2, [sp, #4]
 802d9d4:	ebc5 1000 	rsb	r0, r5, r0, lsl #4
 802d9d8:	b280      	uxth	r0, r0
 802d9da:	fb00 fa02 	mul.w	sl, r0, r2
 802d9de:	fb05 fb0c 	mul.w	fp, r5, ip
 802d9e2:	011b      	lsls	r3, r3, #4
 802d9e4:	1b5f      	subs	r7, r3, r5
 802d9e6:	b2bf      	uxth	r7, r7
 802d9e8:	fb07 f206 	mul.w	r2, r7, r6
 802d9ec:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d9f0:	1a1b      	subs	r3, r3, r0
 802d9f2:	b29b      	uxth	r3, r3
 802d9f4:	fb03 2209 	mla	r2, r3, r9, r2
 802d9f8:	4452      	add	r2, sl
 802d9fa:	445a      	add	r2, fp
 802d9fc:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802da00:	2a00      	cmp	r2, #0
 802da02:	f000 80ba 	beq.w	802db7a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x212>
 802da06:	b2a4      	uxth	r4, r4
 802da08:	fb02 f204 	mul.w	r2, r2, r4
 802da0c:	f102 0a01 	add.w	sl, r2, #1
 802da10:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 802da14:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 802da18:	9205      	str	r2, [sp, #20]
 802da1a:	f008 12ff 	and.w	r2, r8, #16711935	@ 0xff00ff
 802da1e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802da22:	fb06 f202 	mul.w	r2, r6, r2
 802da26:	fb06 f608 	mul.w	r6, r6, r8
 802da2a:	f00e 1bff 	and.w	fp, lr, #16711935	@ 0xff00ff
 802da2e:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802da32:	fb09 fb0b 	mul.w	fp, r9, fp
 802da36:	fb09 fe0e 	mul.w	lr, r9, lr
 802da3a:	f506 7980 	add.w	r9, r6, #256	@ 0x100
 802da3e:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 802da42:	0a36      	lsrs	r6, r6, #8
 802da44:	ea4f 2812 	mov.w	r8, r2, lsr #8
 802da48:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802da4c:	fb07 f606 	mul.w	r6, r7, r6
 802da50:	9404      	str	r4, [sp, #16]
 802da52:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802da56:	9c03      	ldr	r4, [sp, #12]
 802da58:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802da5c:	4490      	add	r8, r2
 802da5e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802da62:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802da66:	fb0c f202 	mul.w	r2, ip, r2
 802da6a:	f404 497f 	and.w	r9, r4, #65280	@ 0xff00
 802da6e:	ea4f 2a1b 	mov.w	sl, fp, lsr #8
 802da72:	9c02      	ldr	r4, [sp, #8]
 802da74:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802da78:	fb0c fc09 	mul.w	ip, ip, r9
 802da7c:	fb08 f807 	mul.w	r8, r8, r7
 802da80:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802da84:	9603      	str	r6, [sp, #12]
 802da86:	f50e 7980 	add.w	r9, lr, #256	@ 0x100
 802da8a:	9e01      	ldr	r6, [sp, #4]
 802da8c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802da90:	44d3      	add	fp, sl
 802da92:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 802da96:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802da9a:	f404 497f 	and.w	r9, r4, #65280	@ 0xff00
 802da9e:	fb06 f707 	mul.w	r7, r6, r7
 802daa2:	fb06 f909 	mul.w	r9, r6, r9
 802daa6:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802daaa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802daae:	9e03      	ldr	r6, [sp, #12]
 802dab0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802dab4:	ea4f 2a12 	mov.w	sl, r2, lsr #8
 802dab8:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802dabc:	fb0b 8803 	mla	r8, fp, r3, r8
 802dac0:	fb03 660e 	mla	r6, r3, lr, r6
 802dac4:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802dac8:	f50c 7e80 	add.w	lr, ip, #256	@ 0x100
 802dacc:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802dad0:	4492      	add	sl, r2
 802dad2:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 802dad6:	ea4f 2b1a 	mov.w	fp, sl, lsr #8
 802dada:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 802dade:	0a3a      	lsrs	r2, r7, #8
 802dae0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802dae4:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802dae8:	fb0b 8b05 	mla	fp, fp, r5, r8
 802daec:	fb05 660e 	mla	r6, r5, lr, r6
 802daf0:	f002 18ff 	and.w	r8, r2, #16711935	@ 0xff00ff
 802daf4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802daf8:	f509 7580 	add.w	r5, r9, #256	@ 0x100
 802dafc:	44b8      	add	r8, r7
 802dafe:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 802db02:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802db06:	0a2d      	lsrs	r5, r5, #8
 802db08:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802db0c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802db10:	fb00 6505 	mla	r5, r0, r5, r6
 802db14:	fb08 b800 	mla	r8, r8, r0, fp
 802db18:	0a2d      	lsrs	r5, r5, #8
 802db1a:	ea4f 2018 	mov.w	r0, r8, lsr #8
 802db1e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802db22:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802db26:	4328      	orrs	r0, r5
 802db28:	784b      	ldrb	r3, [r1, #1]
 802db2a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 802db2e:	9c04      	ldr	r4, [sp, #16]
 802db30:	788d      	ldrb	r5, [r1, #2]
 802db32:	fa5f fa80 	uxtb.w	sl, r0
 802db36:	fb13 f602 	smulbb	r6, r3, r2
 802db3a:	fb15 f502 	smulbb	r5, r5, r2
 802db3e:	fb1a fa04 	smulbb	sl, sl, r4
 802db42:	780f      	ldrb	r7, [r1, #0]
 802db44:	f3c0 2c07 	ubfx	ip, r0, #8, #8
 802db48:	0c00      	lsrs	r0, r0, #16
 802db4a:	fb0c 6304 	mla	r3, ip, r4, r6
 802db4e:	fb07 a202 	mla	r2, r7, r2, sl
 802db52:	fb00 5404 	mla	r4, r0, r4, r5
 802db56:	b29b      	uxth	r3, r3
 802db58:	b292      	uxth	r2, r2
 802db5a:	b2a4      	uxth	r4, r4
 802db5c:	1c56      	adds	r6, r2, #1
 802db5e:	1c5d      	adds	r5, r3, #1
 802db60:	1c60      	adds	r0, r4, #1
 802db62:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 802db66:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802db6a:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802db6e:	1212      	asrs	r2, r2, #8
 802db70:	121b      	asrs	r3, r3, #8
 802db72:	1224      	asrs	r4, r4, #8
 802db74:	700a      	strb	r2, [r1, #0]
 802db76:	704b      	strb	r3, [r1, #1]
 802db78:	708c      	strb	r4, [r1, #2]
 802db7a:	b007      	add	sp, #28
 802db7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802db80:	2800      	cmp	r0, #0
 802db82:	db01      	blt.n	802db88 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x220>
 802db84:	4584      	cmp	ip, r0
 802db86:	dc3d      	bgt.n	802dc04 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x29c>
 802db88:	f04f 0900 	mov.w	r9, #0
 802db8c:	46ce      	mov	lr, r9
 802db8e:	1c46      	adds	r6, r0, #1
 802db90:	d42a      	bmi.n	802dbe8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 802db92:	45b4      	cmp	ip, r6
 802db94:	dd28      	ble.n	802dbe8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 802db96:	b137      	cbz	r7, 802dba6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x23e>
 802db98:	f89a 6001 	ldrb.w	r6, [sl, #1]
 802db9c:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
 802dba0:	ea4f 6618 	mov.w	r6, r8, lsr #24
 802dba4:	e6ff      	b.n	802d9a6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 802dba6:	f1bb 0f00 	cmp.w	fp, #0
 802dbaa:	db3e      	blt.n	802dc2a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2c2>
 802dbac:	455a      	cmp	r2, fp
 802dbae:	dd3c      	ble.n	802dc2a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2c2>
 802dbb0:	463e      	mov	r6, r7
 802dbb2:	46b8      	mov	r8, r7
 802dbb4:	b1dd      	cbz	r5, 802dbee <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x286>
 802dbb6:	2800      	cmp	r0, #0
 802dbb8:	db30      	blt.n	802dc1c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2b4>
 802dbba:	4584      	cmp	ip, r0
 802dbbc:	dd2e      	ble.n	802dc1c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2b4>
 802dbbe:	f81a 200c 	ldrb.w	r2, [sl, ip]
 802dbc2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802dbc6:	9202      	str	r2, [sp, #8]
 802dbc8:	0e12      	lsrs	r2, r2, #24
 802dbca:	9201      	str	r2, [sp, #4]
 802dbcc:	3001      	adds	r0, #1
 802dbce:	d420      	bmi.n	802dc12 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2aa>
 802dbd0:	4584      	cmp	ip, r0
 802dbd2:	dd1e      	ble.n	802dc12 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2aa>
 802dbd4:	b337      	cbz	r7, 802dc24 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2bc>
 802dbd6:	44d4      	add	ip, sl
 802dbd8:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802dbdc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802dbe0:	9303      	str	r3, [sp, #12]
 802dbe2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802dbe6:	e6ea      	b.n	802d9be <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x56>
 802dbe8:	2600      	movs	r6, #0
 802dbea:	46b0      	mov	r8, r6
 802dbec:	e6db      	b.n	802d9a6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 802dbee:	2f0f      	cmp	r7, #15
 802dbf0:	d822      	bhi.n	802dc38 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802dbf2:	b2bb      	uxth	r3, r7
 802dbf4:	4628      	mov	r0, r5
 802dbf6:	46ab      	mov	fp, r5
 802dbf8:	46aa      	mov	sl, r5
 802dbfa:	e9cd 5502 	strd	r5, r5, [sp, #8]
 802dbfe:	46ac      	mov	ip, r5
 802dc00:	9501      	str	r5, [sp, #4]
 802dc02:	e6ee      	b.n	802d9e2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 802dc04:	f81e 6008 	ldrb.w	r6, [lr, r8]
 802dc08:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
 802dc0c:	ea4f 691e 	mov.w	r9, lr, lsr #24
 802dc10:	e7bd      	b.n	802db8e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x226>
 802dc12:	f04f 0c00 	mov.w	ip, #0
 802dc16:	f8cd c00c 	str.w	ip, [sp, #12]
 802dc1a:	e6d0      	b.n	802d9be <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x56>
 802dc1c:	2200      	movs	r2, #0
 802dc1e:	e9cd 2201 	strd	r2, r2, [sp, #4]
 802dc22:	e7d3      	b.n	802dbcc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x264>
 802dc24:	9703      	str	r7, [sp, #12]
 802dc26:	46bc      	mov	ip, r7
 802dc28:	e6cc      	b.n	802d9c4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x5c>
 802dc2a:	46b8      	mov	r8, r7
 802dc2c:	e9cd 7702 	strd	r7, r7, [sp, #8]
 802dc30:	46bc      	mov	ip, r7
 802dc32:	9701      	str	r7, [sp, #4]
 802dc34:	463e      	mov	r6, r7
 802dc36:	e6c5      	b.n	802d9c4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x5c>
 802dc38:	4b03      	ldr	r3, [pc, #12]	@ (802dc48 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e0>)
 802dc3a:	4a04      	ldr	r2, [pc, #16]	@ (802dc4c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e4>)
 802dc3c:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802dc40:	4803      	ldr	r0, [pc, #12]	@ (802dc50 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e8>)
 802dc42:	f004 fc21 	bl	8032488 <__assert_func>
 802dc46:	bf00      	nop
 802dc48:	0803663c 	.word	0x0803663c
 802dc4c:	08036cb8 	.word	0x08036cb8
 802dc50:	080367c4 	.word	0x080367c4

0802dc54 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802dc54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802dc58:	ed2d 8b08 	vpush	{d8-d11}
 802dc5c:	b0a9      	sub	sp, #164	@ 0xa4
 802dc5e:	9c3f      	ldr	r4, [sp, #252]	@ 0xfc
 802dc60:	9022      	str	r0, [sp, #136]	@ 0x88
 802dc62:	9114      	str	r1, [sp, #80]	@ 0x50
 802dc64:	6860      	ldr	r0, [r4, #4]
 802dc66:	9940      	ldr	r1, [sp, #256]	@ 0x100
 802dc68:	9217      	str	r2, [sp, #92]	@ 0x5c
 802dc6a:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 802dc6c:	eeb0 aa40 	vmov.f32	s20, s0
 802dc70:	fb00 1b02 	mla	fp, r0, r2, r1
 802dc74:	6821      	ldr	r1, [r4, #0]
 802dc76:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 802dc7a:	eb01 0800 	add.w	r8, r1, r0
 802dc7e:	e9dd ab3b 	ldrd	sl, fp, [sp, #236]	@ 0xec
 802dc82:	eef0 9a60 	vmov.f32	s19, s1
 802dc86:	eeb0 9a41 	vmov.f32	s18, s2
 802dc8a:	eef0 8a62 	vmov.f32	s17, s5
 802dc8e:	eeb0 8a43 	vmov.f32	s16, s6
 802dc92:	eef0 ba44 	vmov.f32	s23, s8
 802dc96:	eeb0 ba64 	vmov.f32	s22, s9
 802dc9a:	eef0 aa45 	vmov.f32	s21, s10
 802dc9e:	46c1      	mov	r9, r8
 802dca0:	465f      	mov	r7, fp
 802dca2:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802dca4:	9d42      	ldr	r5, [sp, #264]	@ 0x108
 802dca6:	6852      	ldr	r2, [r2, #4]
 802dca8:	f89d 410c 	ldrb.w	r4, [sp, #268]	@ 0x10c
 802dcac:	3204      	adds	r2, #4
 802dcae:	682d      	ldr	r5, [r5, #0]
 802dcb0:	920a      	str	r2, [sp, #40]	@ 0x28
 802dcb2:	b2a2      	uxth	r2, r4
 802dcb4:	9423      	str	r4, [sp, #140]	@ 0x8c
 802dcb6:	9511      	str	r5, [sp, #68]	@ 0x44
 802dcb8:	9216      	str	r2, [sp, #88]	@ 0x58
 802dcba:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802dcbc:	2a00      	cmp	r2, #0
 802dcbe:	dc02      	bgt.n	802dcc6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802dcc0:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802dcc2:	2a00      	cmp	r2, #0
 802dcc4:	dd65      	ble.n	802dd92 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802dcc6:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802dcc8:	2b00      	cmp	r3, #0
 802dcca:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802dcce:	b235      	sxth	r5, r6
 802dcd0:	fa0f f88c 	sxth.w	r8, ip
 802dcd4:	f340 838b 	ble.w	802e3ee <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79a>
 802dcd8:	1e6c      	subs	r4, r5, #1
 802dcda:	f108 3eff 	add.w	lr, r8, #4294967295
 802dcde:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802dce2:	e9dd cb3d 	ldrd	ip, fp, [sp, #244]	@ 0xf4
 802dce6:	ea5f 422a 	movs.w	r2, sl, asr #16
 802dcea:	ea4f 4127 	mov.w	r1, r7, asr #16
 802dcee:	d405      	bmi.n	802dcfc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dcf0:	42a2      	cmp	r2, r4
 802dcf2:	da03      	bge.n	802dcfc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dcf4:	2900      	cmp	r1, #0
 802dcf6:	db01      	blt.n	802dcfc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dcf8:	4571      	cmp	r1, lr
 802dcfa:	db4f      	blt.n	802dd9c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 802dcfc:	1c50      	adds	r0, r2, #1
 802dcfe:	d406      	bmi.n	802dd0e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dd00:	42a8      	cmp	r0, r5
 802dd02:	dc04      	bgt.n	802dd0e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dd04:	1c48      	adds	r0, r1, #1
 802dd06:	d402      	bmi.n	802dd0e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dd08:	4540      	cmp	r0, r8
 802dd0a:	f340 834c 	ble.w	802e3a6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x752>
 802dd0e:	3b01      	subs	r3, #1
 802dd10:	44e2      	add	sl, ip
 802dd12:	445f      	add	r7, fp
 802dd14:	f109 0903 	add.w	r9, r9, #3
 802dd18:	d1e5      	bne.n	802dce6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802dd1a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802dd1c:	2b00      	cmp	r3, #0
 802dd1e:	dd38      	ble.n	802dd92 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802dd20:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802dd24:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802dd28:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802dd2c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802dd30:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802dd34:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802dd38:	ee69 7a27 	vmul.f32	s15, s18, s15
 802dd3c:	ee76 6a68 	vsub.f32	s13, s12, s17
 802dd40:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802dd44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802dd48:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802dd4c:	ee16 2a90 	vmov	r2, s13
 802dd50:	3b01      	subs	r3, #1
 802dd52:	9314      	str	r3, [sp, #80]	@ 0x50
 802dd54:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802dd56:	fb92 f3f3 	sdiv	r3, r2, r3
 802dd5a:	ee17 2a10 	vmov	r2, s14
 802dd5e:	eeb0 7a48 	vmov.f32	s14, s16
 802dd62:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802dd66:	ee17 7a10 	vmov	r7, s14
 802dd6a:	eeb0 7a68 	vmov.f32	s14, s17
 802dd6e:	933d      	str	r3, [sp, #244]	@ 0xf4
 802dd70:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802dd72:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802dd76:	fb92 f3f3 	sdiv	r3, r2, r3
 802dd7a:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802dd7c:	933e      	str	r3, [sp, #248]	@ 0xf8
 802dd7e:	ee17 aa10 	vmov	sl, s14
 802dd82:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802dd84:	eeb0 8a67 	vmov.f32	s16, s15
 802dd88:	eef0 8a46 	vmov.f32	s17, s12
 802dd8c:	bf08      	it	eq
 802dd8e:	4613      	moveq	r3, r2
 802dd90:	e793      	b.n	802dcba <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802dd92:	b029      	add	sp, #164	@ 0xa4
 802dd94:	ecbd 8b08 	vpop	{d8-d11}
 802dd98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802dd9c:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802dda0:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 802dda2:	1e59      	subs	r1, r3, #1
 802dda4:	fb00 a201 	mla	r2, r0, r1, sl
 802dda8:	1412      	asrs	r2, r2, #16
 802ddaa:	9109      	str	r1, [sp, #36]	@ 0x24
 802ddac:	f100 8168 	bmi.w	802e080 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802ddb0:	42a2      	cmp	r2, r4
 802ddb2:	f280 8165 	bge.w	802e080 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802ddb6:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802ddb8:	fb02 7201 	mla	r2, r2, r1, r7
 802ddbc:	1412      	asrs	r2, r2, #16
 802ddbe:	f100 815f 	bmi.w	802e080 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802ddc2:	f108 31ff 	add.w	r1, r8, #4294967295
 802ddc6:	428a      	cmp	r2, r1
 802ddc8:	f280 815a 	bge.w	802e080 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802ddcc:	2b00      	cmp	r3, #0
 802ddce:	dda4      	ble.n	802dd1a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802ddd0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802ddd4:	444b      	add	r3, r9
 802ddd6:	9310      	str	r3, [sp, #64]	@ 0x40
 802ddd8:	f109 0303 	add.w	r3, r9, #3
 802dddc:	9309      	str	r3, [sp, #36]	@ 0x24
 802ddde:	46d1      	mov	r9, sl
 802dde0:	973c      	str	r7, [sp, #240]	@ 0xf0
 802dde2:	462e      	mov	r6, r5
 802dde4:	463b      	mov	r3, r7
 802dde6:	e12b      	b.n	802e040 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802dde8:	785f      	ldrb	r7, [r3, #1]
 802ddea:	f854 7027 	ldr.w	r7, [r4, r7, lsl #2]
 802ddee:	9712      	str	r7, [sp, #72]	@ 0x48
 802ddf0:	0e3f      	lsrs	r7, r7, #24
 802ddf2:	970b      	str	r7, [sp, #44]	@ 0x2c
 802ddf4:	b16a      	cbz	r2, 802de12 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802ddf6:	199f      	adds	r7, r3, r6
 802ddf8:	5d9b      	ldrb	r3, [r3, r6]
 802ddfa:	4626      	mov	r6, r4
 802ddfc:	787f      	ldrb	r7, [r7, #1]
 802ddfe:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802de02:	f854 4027 	ldr.w	r4, [r4, r7, lsl #2]
 802de06:	9313      	str	r3, [sp, #76]	@ 0x4c
 802de08:	9415      	str	r4, [sp, #84]	@ 0x54
 802de0a:	0e1b      	lsrs	r3, r3, #24
 802de0c:	0e24      	lsrs	r4, r4, #24
 802de0e:	940d      	str	r4, [sp, #52]	@ 0x34
 802de10:	930c      	str	r3, [sp, #48]	@ 0x30
 802de12:	fa1f fc81 	uxth.w	ip, r1
 802de16:	b292      	uxth	r2, r2
 802de18:	fb0c f602 	mul.w	r6, ip, r2
 802de1c:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802de20:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802de22:	ebac 0706 	sub.w	r7, ip, r6
 802de26:	b2bf      	uxth	r7, r7
 802de28:	fb07 f103 	mul.w	r1, r7, r3
 802de2c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802de30:	b292      	uxth	r2, r2
 802de32:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 802de36:	1a9b      	subs	r3, r3, r2
 802de38:	b29b      	uxth	r3, r3
 802de3a:	fb03 1100 	mla	r1, r3, r0, r1
 802de3e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802de40:	fb02 1104 	mla	r1, r2, r4, r1
 802de44:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802de46:	fb06 1104 	mla	r1, r6, r4, r1
 802de4a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802de4e:	2900      	cmp	r1, #0
 802de50:	f000 80e5 	beq.w	802e01e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 802de54:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 802de58:	28ff      	cmp	r0, #255	@ 0xff
 802de5a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802de5e:	940e      	str	r4, [sp, #56]	@ 0x38
 802de60:	950f      	str	r5, [sp, #60]	@ 0x3c
 802de62:	d01d      	beq.n	802dea0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 802de64:	fb04 fe00 	mul.w	lr, r4, r0
 802de68:	fb05 f800 	mul.w	r8, r5, r0
 802de6c:	ea4f 251e 	mov.w	r5, lr, lsr #8
 802de70:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802de74:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802de78:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 802de7c:	44ae      	add	lr, r5
 802de7e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802de82:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802de86:	0a00      	lsrs	r0, r0, #8
 802de88:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802de8c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802de90:	ea4e 0e00 	orr.w	lr, lr, r0
 802de94:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802de98:	900e      	str	r0, [sp, #56]	@ 0x38
 802de9a:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 802de9e:	900f      	str	r0, [sp, #60]	@ 0x3c
 802dea0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802dea2:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 802dea6:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 802deaa:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802deac:	28ff      	cmp	r0, #255	@ 0xff
 802deae:	d01c      	beq.n	802deea <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802deb0:	fb0e fe00 	mul.w	lr, lr, r0
 802deb4:	fb08 f800 	mul.w	r8, r8, r0
 802deb8:	ea4f 251e 	mov.w	r5, lr, lsr #8
 802debc:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802dec0:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802dec4:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 802dec8:	44ae      	add	lr, r5
 802deca:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 802dece:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ded2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802ded6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802deda:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802dede:	ea4e 0808 	orr.w	r8, lr, r8
 802dee2:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 802dee6:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802deea:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802deec:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 802def0:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802def4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802def6:	28ff      	cmp	r0, #255	@ 0xff
 802def8:	d01c      	beq.n	802df34 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802defa:	fb0c fc00 	mul.w	ip, ip, r0
 802defe:	fb0a fa00 	mul.w	sl, sl, r0
 802df02:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802df06:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802df0a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802df0e:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802df12:	44ac      	add	ip, r5
 802df14:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802df18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802df1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802df20:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802df24:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802df28:	ea4c 0a0a 	orr.w	sl, ip, sl
 802df2c:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 802df30:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802df34:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802df36:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802df3a:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802df3e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802df40:	2cff      	cmp	r4, #255	@ 0xff
 802df42:	d019      	beq.n	802df78 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 802df44:	fb00 f004 	mul.w	r0, r0, r4
 802df48:	fb0b fb04 	mul.w	fp, fp, r4
 802df4c:	0a05      	lsrs	r5, r0, #8
 802df4e:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 802df52:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802df56:	f50b 7580 	add.w	r5, fp, #256	@ 0x100
 802df5a:	eb05 251b 	add.w	r5, r5, fp, lsr #8
 802df5e:	4420      	add	r0, r4
 802df60:	0a00      	lsrs	r0, r0, #8
 802df62:	0a2d      	lsrs	r5, r5, #8
 802df64:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802df68:	f405 4b7f 	and.w	fp, r5, #65280	@ 0xff00
 802df6c:	ea40 0b0b 	orr.w	fp, r0, fp
 802df70:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802df74:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802df78:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802df7a:	fb0e fe07 	mul.w	lr, lr, r7
 802df7e:	fb01 f104 	mul.w	r1, r1, r4
 802df82:	1c4d      	adds	r5, r1, #1
 802df84:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802df88:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802df8c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802df8e:	fb08 f707 	mul.w	r7, r8, r7
 802df92:	fb05 ee03 	mla	lr, r5, r3, lr
 802df96:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802df98:	fb0c ee02 	mla	lr, ip, r2, lr
 802df9c:	fb05 7703 	mla	r7, r5, r3, r7
 802dfa0:	fb0a 7702 	mla	r7, sl, r2, r7
 802dfa4:	fb00 ee06 	mla	lr, r0, r6, lr
 802dfa8:	fb0b 7706 	mla	r7, fp, r6, r7
 802dfac:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802dfae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802dfb2:	0a3f      	lsrs	r7, r7, #8
 802dfb4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802dfb8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802dfbc:	ea4e 0307 	orr.w	r3, lr, r7
 802dfc0:	f810 6c01 	ldrb.w	r6, [r0, #-1]
 802dfc4:	f810 7c02 	ldrb.w	r7, [r0, #-2]
 802dfc8:	b2c9      	uxtb	r1, r1
 802dfca:	fa5f fc83 	uxtb.w	ip, r3
 802dfce:	fb16 f601 	smulbb	r6, r6, r1
 802dfd2:	fb17 f701 	smulbb	r7, r7, r1
 802dfd6:	fb1c fc04 	smulbb	ip, ip, r4
 802dfda:	f810 0c03 	ldrb.w	r0, [r0, #-3]
 802dfde:	f3c3 2207 	ubfx	r2, r3, #8, #8
 802dfe2:	0c1b      	lsrs	r3, r3, #16
 802dfe4:	fb00 c101 	mla	r1, r0, r1, ip
 802dfe8:	fb03 6304 	mla	r3, r3, r4, r6
 802dfec:	fb02 7204 	mla	r2, r2, r4, r7
 802dff0:	b289      	uxth	r1, r1
 802dff2:	b292      	uxth	r2, r2
 802dff4:	b29b      	uxth	r3, r3
 802dff6:	f101 0e01 	add.w	lr, r1, #1
 802dffa:	1c56      	adds	r6, r2, #1
 802dffc:	1c5d      	adds	r5, r3, #1
 802dffe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802e000:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802e004:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 802e008:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802e00c:	1209      	asrs	r1, r1, #8
 802e00e:	1212      	asrs	r2, r2, #8
 802e010:	121b      	asrs	r3, r3, #8
 802e012:	f800 1c03 	strb.w	r1, [r0, #-3]
 802e016:	f800 2c02 	strb.w	r2, [r0, #-2]
 802e01a:	f800 3c01 	strb.w	r3, [r0, #-1]
 802e01e:	9b3d      	ldr	r3, [sp, #244]	@ 0xf4
 802e020:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e022:	4499      	add	r9, r3
 802e024:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802e026:	4413      	add	r3, r2
 802e028:	933c      	str	r3, [sp, #240]	@ 0xf0
 802e02a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802e02c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802e02e:	4293      	cmp	r3, r2
 802e030:	d024      	beq.n	802e07c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 802e032:	4613      	mov	r3, r2
 802e034:	3303      	adds	r3, #3
 802e036:	9309      	str	r3, [sp, #36]	@ 0x24
 802e038:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802e03a:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 802e03e:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802e040:	ea4f 4229 	mov.w	r2, r9, asr #16
 802e044:	141b      	asrs	r3, r3, #16
 802e046:	fb06 2303 	mla	r3, r6, r3, r2
 802e04a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802e04c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802e04e:	5cc2      	ldrb	r2, [r0, r3]
 802e050:	f3c9 3103 	ubfx	r1, r9, #12, #4
 802e054:	f854 5022 	ldr.w	r5, [r4, r2, lsl #2]
 802e058:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 802e05a:	4403      	add	r3, r0
 802e05c:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802e060:	0e28      	lsrs	r0, r5, #24
 802e062:	2900      	cmp	r1, #0
 802e064:	f47f aec0 	bne.w	802dde8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x194>
 802e068:	2a00      	cmp	r2, #0
 802e06a:	f43f aed2 	beq.w	802de12 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802e06e:	5d9b      	ldrb	r3, [r3, r6]
 802e070:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 802e074:	9313      	str	r3, [sp, #76]	@ 0x4c
 802e076:	0e1b      	lsrs	r3, r3, #24
 802e078:	930c      	str	r3, [sp, #48]	@ 0x30
 802e07a:	e6ca      	b.n	802de12 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802e07c:	4699      	mov	r9, r3
 802e07e:	e64c      	b.n	802dd1a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e080:	2b00      	cmp	r3, #0
 802e082:	f77f ae4a 	ble.w	802dd1a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e086:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 802e08a:	ea4f 422a 	mov.w	r2, sl, asr #16
 802e08e:	1439      	asrs	r1, r7, #16
 802e090:	2a00      	cmp	r2, #0
 802e092:	46cb      	mov	fp, r9
 802e094:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 802e098:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 802e09a:	e9dd 953d 	ldrd	r9, r5, [sp, #244]	@ 0xf4
 802e09e:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802e0a2:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802e0a6:	f2c0 8154 	blt.w	802e352 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e0aa:	1e73      	subs	r3, r6, #1
 802e0ac:	429a      	cmp	r2, r3
 802e0ae:	f280 8150 	bge.w	802e352 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e0b2:	2900      	cmp	r1, #0
 802e0b4:	f2c0 814d 	blt.w	802e352 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e0b8:	f10c 33ff 	add.w	r3, ip, #4294967295
 802e0bc:	4299      	cmp	r1, r3
 802e0be:	f280 8148 	bge.w	802e352 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e0c2:	b236      	sxth	r6, r6
 802e0c4:	fb01 2206 	mla	r2, r1, r6, r2
 802e0c8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802e0ca:	5c8b      	ldrb	r3, [r1, r2]
 802e0cc:	440a      	add	r2, r1
 802e0ce:	9210      	str	r2, [sp, #64]	@ 0x40
 802e0d0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802e0d2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 802e0d6:	930e      	str	r3, [sp, #56]	@ 0x38
 802e0d8:	0e1b      	lsrs	r3, r3, #24
 802e0da:	2800      	cmp	r0, #0
 802e0dc:	f000 8169 	beq.w	802e3b2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75e>
 802e0e0:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802e0e2:	f891 c001 	ldrb.w	ip, [r1, #1]
 802e0e6:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802e0ea:	9224      	str	r2, [sp, #144]	@ 0x90
 802e0ec:	0e12      	lsrs	r2, r2, #24
 802e0ee:	9218      	str	r2, [sp, #96]	@ 0x60
 802e0f0:	f1be 0f00 	cmp.w	lr, #0
 802e0f4:	f040 816a 	bne.w	802e3cc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x778>
 802e0f8:	b280      	uxth	r0, r0
 802e0fa:	fa1f fc8e 	uxth.w	ip, lr
 802e0fe:	fb00 f20c 	mul.w	r2, r0, ip
 802e102:	4611      	mov	r1, r2
 802e104:	0106      	lsls	r6, r0, #4
 802e106:	1ab0      	subs	r0, r6, r2
 802e108:	9210      	str	r2, [sp, #64]	@ 0x40
 802e10a:	b282      	uxth	r2, r0
 802e10c:	9818      	ldr	r0, [sp, #96]	@ 0x60
 802e10e:	ebc1 1c0c 	rsb	ip, r1, ip, lsl #4
 802e112:	fb02 f000 	mul.w	r0, r2, r0
 802e116:	921b      	str	r2, [sp, #108]	@ 0x6c
 802e118:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802e11c:	fa1f f28c 	uxth.w	r2, ip
 802e120:	1ab6      	subs	r6, r6, r2
 802e122:	b2b6      	uxth	r6, r6
 802e124:	fb06 0c03 	mla	ip, r6, r3, r0
 802e128:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802e12a:	921c      	str	r2, [sp, #112]	@ 0x70
 802e12c:	fb02 cc00 	mla	ip, r2, r0, ip
 802e130:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802e132:	961d      	str	r6, [sp, #116]	@ 0x74
 802e134:	fb01 cc02 	mla	ip, r1, r2, ip
 802e138:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802e13c:	f1bc 0f00 	cmp.w	ip, #0
 802e140:	f000 80f1 	beq.w	802e326 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e144:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802e146:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802e148:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802e14c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802e150:	2bff      	cmp	r3, #255	@ 0xff
 802e152:	921e      	str	r2, [sp, #120]	@ 0x78
 802e154:	910e      	str	r1, [sp, #56]	@ 0x38
 802e156:	d01b      	beq.n	802e190 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53c>
 802e158:	fb01 f103 	mul.w	r1, r1, r3
 802e15c:	fb02 f203 	mul.w	r2, r2, r3
 802e160:	460b      	mov	r3, r1
 802e162:	0a11      	lsrs	r1, r2, #8
 802e164:	f102 1601 	add.w	r6, r2, #65537	@ 0x10001
 802e168:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e16c:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 802e170:	4431      	add	r1, r6
 802e172:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802e176:	0a09      	lsrs	r1, r1, #8
 802e178:	0a1b      	lsrs	r3, r3, #8
 802e17a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e17e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e182:	430b      	orrs	r3, r1
 802e184:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802e188:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e18c:	921e      	str	r2, [sp, #120]	@ 0x78
 802e18e:	930e      	str	r3, [sp, #56]	@ 0x38
 802e190:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 802e192:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802e194:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802e198:	29ff      	cmp	r1, #255	@ 0xff
 802e19a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802e19e:	931f      	str	r3, [sp, #124]	@ 0x7c
 802e1a0:	9220      	str	r2, [sp, #128]	@ 0x80
 802e1a2:	d01b      	beq.n	802e1dc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x588>
 802e1a4:	fb03 f301 	mul.w	r3, r3, r1
 802e1a8:	fb02 f201 	mul.w	r2, r2, r1
 802e1ac:	0a19      	lsrs	r1, r3, #8
 802e1ae:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802e1b2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e1b6:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 802e1ba:	4401      	add	r1, r0
 802e1bc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802e1c0:	0a09      	lsrs	r1, r1, #8
 802e1c2:	0a1b      	lsrs	r3, r3, #8
 802e1c4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e1c8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e1cc:	ea41 0003 	orr.w	r0, r1, r3
 802e1d0:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 802e1d4:	931f      	str	r3, [sp, #124]	@ 0x7c
 802e1d6:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 802e1da:	9320      	str	r3, [sp, #128]	@ 0x80
 802e1dc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802e1de:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802e1e0:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802e1e4:	2aff      	cmp	r2, #255	@ 0xff
 802e1e6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e1ea:	9321      	str	r3, [sp, #132]	@ 0x84
 802e1ec:	d01a      	beq.n	802e224 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d0>
 802e1ee:	fb03 f302 	mul.w	r3, r3, r2
 802e1f2:	4618      	mov	r0, r3
 802e1f4:	fb06 f602 	mul.w	r6, r6, r2
 802e1f8:	0a31      	lsrs	r1, r6, #8
 802e1fa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e1fe:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802e202:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 802e206:	440e      	add	r6, r1
 802e208:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802e20c:	0a36      	lsrs	r6, r6, #8
 802e20e:	0a1b      	lsrs	r3, r3, #8
 802e210:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802e214:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e218:	4333      	orrs	r3, r6
 802e21a:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802e21e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e222:	9321      	str	r3, [sp, #132]	@ 0x84
 802e224:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 802e226:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802e22a:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 802e22e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802e230:	2aff      	cmp	r2, #255	@ 0xff
 802e232:	d01a      	beq.n	802e26a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x616>
 802e234:	fb03 f302 	mul.w	r3, r3, r2
 802e238:	fb0e fe02 	mul.w	lr, lr, r2
 802e23c:	0a19      	lsrs	r1, r3, #8
 802e23e:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802e242:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e246:	f50e 7380 	add.w	r3, lr, #256	@ 0x100
 802e24a:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 802e24e:	4401      	add	r1, r0
 802e250:	0a09      	lsrs	r1, r1, #8
 802e252:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802e256:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e25a:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e25e:	ea41 0e0e 	orr.w	lr, r1, lr
 802e262:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 802e266:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e26a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802e26c:	fb0c f102 	mul.w	r1, ip, r2
 802e270:	1c48      	adds	r0, r1, #1
 802e272:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802e276:	ea6f 2211 	mvn.w	r2, r1, lsr #8
 802e27a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802e27c:	9225      	str	r2, [sp, #148]	@ 0x94
 802e27e:	4684      	mov	ip, r0
 802e280:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 802e282:	9820      	ldr	r0, [sp, #128]	@ 0x80
 802e284:	fb0c fc02 	mul.w	ip, ip, r2
 802e288:	fb00 f002 	mul.w	r0, r0, r2
 802e28c:	4601      	mov	r1, r0
 802e28e:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 802e290:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802e292:	fb00 cc02 	mla	ip, r0, r2, ip
 802e296:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802e298:	fb00 1102 	mla	r1, r0, r2, r1
 802e29c:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 802e29e:	9821      	ldr	r0, [sp, #132]	@ 0x84
 802e2a0:	fb06 c602 	mla	r6, r6, r2, ip
 802e2a4:	fb00 1002 	mla	r0, r0, r2, r1
 802e2a8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802e2aa:	f89d 1094 	ldrb.w	r1, [sp, #148]	@ 0x94
 802e2ae:	fb03 6602 	mla	r6, r3, r2, r6
 802e2b2:	fb0e 0302 	mla	r3, lr, r2, r0
 802e2b6:	0a32      	lsrs	r2, r6, #8
 802e2b8:	0a1b      	lsrs	r3, r3, #8
 802e2ba:	f89b 6002 	ldrb.w	r6, [fp, #2]
 802e2be:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802e2c2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e2c6:	4313      	orrs	r3, r2
 802e2c8:	fb16 f001 	smulbb	r0, r6, r1
 802e2cc:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802e2ce:	fa5f fe83 	uxtb.w	lr, r3
 802e2d2:	fb1e fe02 	smulbb	lr, lr, r2
 802e2d6:	f89b c001 	ldrb.w	ip, [fp, #1]
 802e2da:	900e      	str	r0, [sp, #56]	@ 0x38
 802e2dc:	f89b 0000 	ldrb.w	r0, [fp]
 802e2e0:	fb1c fc01 	smulbb	ip, ip, r1
 802e2e4:	fb00 e001 	mla	r0, r0, r1, lr
 802e2e8:	4611      	mov	r1, r2
 802e2ea:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802e2ee:	fb06 c202 	mla	r2, r6, r2, ip
 802e2f2:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802e2f4:	0c1b      	lsrs	r3, r3, #16
 802e2f6:	fb03 6301 	mla	r3, r3, r1, r6
 802e2fa:	b280      	uxth	r0, r0
 802e2fc:	b296      	uxth	r6, r2
 802e2fe:	b29b      	uxth	r3, r3
 802e300:	1c5a      	adds	r2, r3, #1
 802e302:	f100 0c01 	add.w	ip, r0, #1
 802e306:	1c71      	adds	r1, r6, #1
 802e308:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802e30c:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802e310:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802e314:	1200      	asrs	r0, r0, #8
 802e316:	120a      	asrs	r2, r1, #8
 802e318:	121b      	asrs	r3, r3, #8
 802e31a:	f88b 0000 	strb.w	r0, [fp]
 802e31e:	f88b 2001 	strb.w	r2, [fp, #1]
 802e322:	f88b 3002 	strb.w	r3, [fp, #2]
 802e326:	f1b8 0f00 	cmp.w	r8, #0
 802e32a:	f10b 0b03 	add.w	fp, fp, #3
 802e32e:	44ca      	add	sl, r9
 802e330:	442f      	add	r7, r5
 802e332:	dd2e      	ble.n	802e392 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73e>
 802e334:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802e338:	ea4f 422a 	mov.w	r2, sl, asr #16
 802e33c:	2a00      	cmp	r2, #0
 802e33e:	f108 38ff 	add.w	r8, r8, #4294967295
 802e342:	ea4f 4127 	mov.w	r1, r7, asr #16
 802e346:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802e34a:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802e34e:	f6bf aeac 	bge.w	802e0aa <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802e352:	1c53      	adds	r3, r2, #1
 802e354:	d4e7      	bmi.n	802e326 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e356:	42b3      	cmp	r3, r6
 802e358:	dce5      	bgt.n	802e326 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e35a:	1c4b      	adds	r3, r1, #1
 802e35c:	d4e3      	bmi.n	802e326 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e35e:	4563      	cmp	r3, ip
 802e360:	dce1      	bgt.n	802e326 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e362:	fa0f f38c 	sxth.w	r3, ip
 802e366:	b236      	sxth	r6, r6
 802e368:	e9cd 6300 	strd	r6, r3, [sp]
 802e36c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802e36e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802e372:	e9cd e305 	strd	lr, r3, [sp, #20]
 802e376:	9202      	str	r2, [sp, #8]
 802e378:	4659      	mov	r1, fp
 802e37a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802e37c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802e37e:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802e380:	f7ff faf2 	bl	802d968 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>
 802e384:	f1b8 0f00 	cmp.w	r8, #0
 802e388:	f10b 0b03 	add.w	fp, fp, #3
 802e38c:	44ca      	add	sl, r9
 802e38e:	442f      	add	r7, r5
 802e390:	dcd0      	bgt.n	802e334 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802e392:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802e394:	f8dd 903c 	ldr.w	r9, [sp, #60]	@ 0x3c
 802e398:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802e39c:	3301      	adds	r3, #1
 802e39e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802e3a2:	4499      	add	r9, r3
 802e3a4:	e4b9      	b.n	802dd1a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e3a6:	3b01      	subs	r3, #1
 802e3a8:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802e3ac:	4698      	mov	r8, r3
 802e3ae:	9309      	str	r3, [sp, #36]	@ 0x24
 802e3b0:	e66e      	b.n	802e090 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 802e3b2:	f1be 0f00 	cmp.w	lr, #0
 802e3b6:	f43f ae9f 	beq.w	802e0f8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e3ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802e3bc:	5d92      	ldrb	r2, [r2, r6]
 802e3be:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802e3c0:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 802e3c4:	9226      	str	r2, [sp, #152]	@ 0x98
 802e3c6:	0e12      	lsrs	r2, r2, #24
 802e3c8:	9219      	str	r2, [sp, #100]	@ 0x64
 802e3ca:	e695      	b.n	802e0f8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e3cc:	eb01 0c06 	add.w	ip, r1, r6
 802e3d0:	f89c c001 	ldrb.w	ip, [ip, #1]
 802e3d4:	5d89      	ldrb	r1, [r1, r6]
 802e3d6:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802e3d8:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 802e3dc:	f856 6021 	ldr.w	r6, [r6, r1, lsl #2]
 802e3e0:	9227      	str	r2, [sp, #156]	@ 0x9c
 802e3e2:	0e12      	lsrs	r2, r2, #24
 802e3e4:	921a      	str	r2, [sp, #104]	@ 0x68
 802e3e6:	0e32      	lsrs	r2, r6, #24
 802e3e8:	9626      	str	r6, [sp, #152]	@ 0x98
 802e3ea:	9219      	str	r2, [sp, #100]	@ 0x64
 802e3ec:	e684      	b.n	802e0f8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e3ee:	f43f ac94 	beq.w	802dd1a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e3f2:	1e6c      	subs	r4, r5, #1
 802e3f4:	e4d4      	b.n	802dda0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 802e3f6:	bf00      	nop

0802e3f8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>:
 802e3f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e3fc:	b089      	sub	sp, #36	@ 0x24
 802e3fe:	f9bd b048 	ldrsh.w	fp, [sp, #72]	@ 0x48
 802e402:	e9dd 4014 	ldrd	r4, r0, [sp, #80]	@ 0x50
 802e406:	fb00 450b 	mla	r5, r0, fp, r4
 802e40a:	2800      	cmp	r0, #0
 802e40c:	4694      	mov	ip, r2
 802e40e:	f100 0601 	add.w	r6, r0, #1
 802e412:	442a      	add	r2, r5
 802e414:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 802e418:	f89d a058 	ldrb.w	sl, [sp, #88]	@ 0x58
 802e41c:	f89d 705c 	ldrb.w	r7, [sp, #92]	@ 0x5c
 802e420:	db02      	blt.n	802e428 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x30>
 802e422:	4580      	cmp	r8, r0
 802e424:	f300 810a 	bgt.w	802e63c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x244>
 802e428:	f04f 0c00 	mov.w	ip, #0
 802e42c:	46e6      	mov	lr, ip
 802e42e:	4665      	mov	r5, ip
 802e430:	46e1      	mov	r9, ip
 802e432:	2e00      	cmp	r6, #0
 802e434:	db02      	blt.n	802e43c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x44>
 802e436:	45b0      	cmp	r8, r6
 802e438:	f300 811a 	bgt.w	802e670 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x278>
 802e43c:	2400      	movs	r4, #0
 802e43e:	46a0      	mov	r8, r4
 802e440:	e9cd 4403 	strd	r4, r4, [sp, #12]
 802e444:	f1ba 0f0f 	cmp.w	sl, #15
 802e448:	f200 8158 	bhi.w	802e6fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e44c:	2f0f      	cmp	r7, #15
 802e44e:	f200 8155 	bhi.w	802e6fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e452:	b2ba      	uxth	r2, r7
 802e454:	fa1f f38a 	uxth.w	r3, sl
 802e458:	fb02 f703 	mul.w	r7, r2, r3
 802e45c:	ebc7 1202 	rsb	r2, r7, r2, lsl #4
 802e460:	b292      	uxth	r2, r2
 802e462:	fb02 fa08 	mul.w	sl, r2, r8
 802e466:	fb07 fb04 	mul.w	fp, r7, r4
 802e46a:	011b      	lsls	r3, r3, #4
 802e46c:	1bd8      	subs	r0, r3, r7
 802e46e:	b280      	uxth	r0, r0
 802e470:	9001      	str	r0, [sp, #4]
 802e472:	fb00 f00c 	mul.w	r0, r0, ip
 802e476:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802e47a:	1a9b      	subs	r3, r3, r2
 802e47c:	b29b      	uxth	r3, r3
 802e47e:	fb03 000e 	mla	r0, r3, lr, r0
 802e482:	4450      	add	r0, sl
 802e484:	4458      	add	r0, fp
 802e486:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802e48a:	9002      	str	r0, [sp, #8]
 802e48c:	2800      	cmp	r0, #0
 802e48e:	f000 80d2 	beq.w	802e636 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x23e>
 802e492:	f009 10ff 	and.w	r0, r9, #16711935	@ 0xff00ff
 802e496:	f409 467f 	and.w	r6, r9, #65280	@ 0xff00
 802e49a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802e49e:	9005      	str	r0, [sp, #20]
 802e4a0:	9606      	str	r6, [sp, #24]
 802e4a2:	d01e      	beq.n	802e4e2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xea>
 802e4a4:	fb00 fb0e 	mul.w	fp, r0, lr
 802e4a8:	fb06 fe0e 	mul.w	lr, r6, lr
 802e4ac:	ea4f 201b 	mov.w	r0, fp, lsr #8
 802e4b0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e4b4:	f50e 7a80 	add.w	sl, lr, #256	@ 0x100
 802e4b8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802e4bc:	4483      	add	fp, r0
 802e4be:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 802e4c2:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802e4c6:	ea4f 2a1e 	mov.w	sl, lr, lsr #8
 802e4ca:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802e4ce:	f40a 4e7f 	and.w	lr, sl, #65280	@ 0xff00
 802e4d2:	ea4b 0e0e 	orr.w	lr, fp, lr
 802e4d6:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802e4da:	9005      	str	r0, [sp, #20]
 802e4dc:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 802e4e0:	9006      	str	r0, [sp, #24]
 802e4e2:	f405 407f 	and.w	r0, r5, #65280	@ 0xff00
 802e4e6:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802e4ea:	f005 1aff 	and.w	sl, r5, #16711935	@ 0xff00ff
 802e4ee:	9007      	str	r0, [sp, #28]
 802e4f0:	d01d      	beq.n	802e52e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x136>
 802e4f2:	fb0a fa0c 	mul.w	sl, sl, ip
 802e4f6:	fb00 f50c 	mul.w	r5, r0, ip
 802e4fa:	ea4f 201a 	mov.w	r0, sl, lsr #8
 802e4fe:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e502:	f505 7b80 	add.w	fp, r5, #256	@ 0x100
 802e506:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802e50a:	4482      	add	sl, r0
 802e50c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802e510:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802e514:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802e518:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802e51c:	f40b 457f 	and.w	r5, fp, #65280	@ 0xff00
 802e520:	ea4a 0505 	orr.w	r5, sl, r5
 802e524:	f405 407f 	and.w	r0, r5, #65280	@ 0xff00
 802e528:	f005 1aff 	and.w	sl, r5, #16711935	@ 0xff00ff
 802e52c:	9007      	str	r0, [sp, #28]
 802e52e:	9803      	ldr	r0, [sp, #12]
 802e530:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802e534:	f000 19ff 	and.w	r9, r0, #16711935	@ 0xff00ff
 802e538:	f400 467f 	and.w	r6, r0, #65280	@ 0xff00
 802e53c:	d01b      	beq.n	802e576 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x17e>
 802e53e:	fb09 f908 	mul.w	r9, r9, r8
 802e542:	fb06 f608 	mul.w	r6, r6, r8
 802e546:	ea4f 2c19 	mov.w	ip, r9, lsr #8
 802e54a:	f506 7080 	add.w	r0, r6, #256	@ 0x100
 802e54e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802e552:	f109 1901 	add.w	r9, r9, #65537	@ 0x10001
 802e556:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 802e55a:	44e1      	add	r9, ip
 802e55c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802e560:	0a30      	lsrs	r0, r6, #8
 802e562:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802e566:	f400 467f 	and.w	r6, r0, #65280	@ 0xff00
 802e56a:	ea49 0606 	orr.w	r6, r9, r6
 802e56e:	f006 19ff 	and.w	r9, r6, #16711935	@ 0xff00ff
 802e572:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802e576:	9d04      	ldr	r5, [sp, #16]
 802e578:	2cff      	cmp	r4, #255	@ 0xff
 802e57a:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802e57e:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802e582:	d01a      	beq.n	802e5ba <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x1c2>
 802e584:	fb00 f004 	mul.w	r0, r0, r4
 802e588:	fb0e f404 	mul.w	r4, lr, r4
 802e58c:	ea4f 2c10 	mov.w	ip, r0, lsr #8
 802e590:	f504 7e80 	add.w	lr, r4, #256	@ 0x100
 802e594:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802e598:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802e59c:	eb0e 2414 	add.w	r4, lr, r4, lsr #8
 802e5a0:	4460      	add	r0, ip
 802e5a2:	0a00      	lsrs	r0, r0, #8
 802e5a4:	0a24      	lsrs	r4, r4, #8
 802e5a6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e5aa:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 802e5ae:	ea40 0e0e 	orr.w	lr, r0, lr
 802e5b2:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802e5b6:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e5ba:	9c02      	ldr	r4, [sp, #8]
 802e5bc:	9d07      	ldr	r5, [sp, #28]
 802e5be:	ea6f 0c04 	mvn.w	ip, r4
 802e5c2:	9c01      	ldr	r4, [sp, #4]
 802e5c4:	fa5f fc8c 	uxtb.w	ip, ip
 802e5c8:	fb0a fb04 	mul.w	fp, sl, r4
 802e5cc:	fb05 f504 	mul.w	r5, r5, r4
 802e5d0:	9c05      	ldr	r4, [sp, #20]
 802e5d2:	fb04 bb03 	mla	fp, r4, r3, fp
 802e5d6:	9c06      	ldr	r4, [sp, #24]
 802e5d8:	fb09 b902 	mla	r9, r9, r2, fp
 802e5dc:	fb04 5303 	mla	r3, r4, r3, r5
 802e5e0:	fb06 3602 	mla	r6, r6, r2, r3
 802e5e4:	780c      	ldrb	r4, [r1, #0]
 802e5e6:	fb00 9007 	mla	r0, r0, r7, r9
 802e5ea:	784a      	ldrb	r2, [r1, #1]
 802e5ec:	fb0e 6707 	mla	r7, lr, r7, r6
 802e5f0:	788b      	ldrb	r3, [r1, #2]
 802e5f2:	fb02 f20c 	mul.w	r2, r2, ip
 802e5f6:	fb03 f30c 	mul.w	r3, r3, ip
 802e5fa:	fb04 fc0c 	mul.w	ip, r4, ip
 802e5fe:	0a00      	lsrs	r0, r0, #8
 802e600:	0a3f      	lsrs	r7, r7, #8
 802e602:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802e606:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e60a:	4338      	orrs	r0, r7
 802e60c:	1c54      	adds	r4, r2, #1
 802e60e:	1c5f      	adds	r7, r3, #1
 802e610:	f10c 0601 	add.w	r6, ip, #1
 802e614:	0a05      	lsrs	r5, r0, #8
 802e616:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802e61a:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 802e61e:	0c04      	lsrs	r4, r0, #16
 802e620:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 802e624:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 802e628:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 802e62c:	eb00 201c 	add.w	r0, r0, ip, lsr #8
 802e630:	704a      	strb	r2, [r1, #1]
 802e632:	708b      	strb	r3, [r1, #2]
 802e634:	7008      	strb	r0, [r1, #0]
 802e636:	b009      	add	sp, #36	@ 0x24
 802e638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e63c:	2c00      	cmp	r4, #0
 802e63e:	db01      	blt.n	802e644 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x24c>
 802e640:	45a3      	cmp	fp, r4
 802e642:	dc41      	bgt.n	802e6c8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2d0>
 802e644:	f04f 0e00 	mov.w	lr, #0
 802e648:	46f1      	mov	r9, lr
 802e64a:	1c60      	adds	r0, r4, #1
 802e64c:	d42b      	bmi.n	802e6a6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ae>
 802e64e:	4583      	cmp	fp, r0
 802e650:	dd29      	ble.n	802e6a6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ae>
 802e652:	f1ba 0f00 	cmp.w	sl, #0
 802e656:	d005      	beq.n	802e664 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x26c>
 802e658:	7850      	ldrb	r0, [r2, #1]
 802e65a:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 802e65e:	ea4f 6c15 	mov.w	ip, r5, lsr #24
 802e662:	e6e6      	b.n	802e432 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3a>
 802e664:	2e00      	cmp	r6, #0
 802e666:	db42      	blt.n	802e6ee <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2f6>
 802e668:	45b0      	cmp	r8, r6
 802e66a:	dd40      	ble.n	802e6ee <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2f6>
 802e66c:	46d4      	mov	ip, sl
 802e66e:	4655      	mov	r5, sl
 802e670:	b1ef      	cbz	r7, 802e6ae <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2b6>
 802e672:	2c00      	cmp	r4, #0
 802e674:	db32      	blt.n	802e6dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2e4>
 802e676:	45a3      	cmp	fp, r4
 802e678:	dd30      	ble.n	802e6dc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2e4>
 802e67a:	f812 000b 	ldrb.w	r0, [r2, fp]
 802e67e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 802e682:	9003      	str	r0, [sp, #12]
 802e684:	ea4f 6810 	mov.w	r8, r0, lsr #24
 802e688:	3401      	adds	r4, #1
 802e68a:	d424      	bmi.n	802e6d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2de>
 802e68c:	45a3      	cmp	fp, r4
 802e68e:	dd22      	ble.n	802e6d6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2de>
 802e690:	f1ba 0f00 	cmp.w	sl, #0
 802e694:	d027      	beq.n	802e6e6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ee>
 802e696:	4493      	add	fp, r2
 802e698:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802e69c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802e6a0:	9304      	str	r3, [sp, #16]
 802e6a2:	0e1c      	lsrs	r4, r3, #24
 802e6a4:	e6ce      	b.n	802e444 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x4c>
 802e6a6:	f04f 0c00 	mov.w	ip, #0
 802e6aa:	4665      	mov	r5, ip
 802e6ac:	e6c1      	b.n	802e432 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3a>
 802e6ae:	f1ba 0f0f 	cmp.w	sl, #15
 802e6b2:	d823      	bhi.n	802e6fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e6b4:	fa1f f38a 	uxth.w	r3, sl
 802e6b8:	463a      	mov	r2, r7
 802e6ba:	46bb      	mov	fp, r7
 802e6bc:	46ba      	mov	sl, r7
 802e6be:	e9cd 7703 	strd	r7, r7, [sp, #12]
 802e6c2:	463c      	mov	r4, r7
 802e6c4:	46b8      	mov	r8, r7
 802e6c6:	e6d0      	b.n	802e46a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x72>
 802e6c8:	f81c 0005 	ldrb.w	r0, [ip, r5]
 802e6cc:	f853 9020 	ldr.w	r9, [r3, r0, lsl #2]
 802e6d0:	ea4f 6e19 	mov.w	lr, r9, lsr #24
 802e6d4:	e7b9      	b.n	802e64a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x252>
 802e6d6:	2400      	movs	r4, #0
 802e6d8:	9404      	str	r4, [sp, #16]
 802e6da:	e6b3      	b.n	802e444 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x4c>
 802e6dc:	f04f 0800 	mov.w	r8, #0
 802e6e0:	f8cd 800c 	str.w	r8, [sp, #12]
 802e6e4:	e7d0      	b.n	802e688 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x290>
 802e6e6:	f8cd a010 	str.w	sl, [sp, #16]
 802e6ea:	4654      	mov	r4, sl
 802e6ec:	e6ae      	b.n	802e44c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x54>
 802e6ee:	4655      	mov	r5, sl
 802e6f0:	e9cd aa03 	strd	sl, sl, [sp, #12]
 802e6f4:	4654      	mov	r4, sl
 802e6f6:	46d0      	mov	r8, sl
 802e6f8:	46d4      	mov	ip, sl
 802e6fa:	e6a7      	b.n	802e44c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x54>
 802e6fc:	4b03      	ldr	r3, [pc, #12]	@ (802e70c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x314>)
 802e6fe:	4a04      	ldr	r2, [pc, #16]	@ (802e710 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x318>)
 802e700:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802e704:	4803      	ldr	r0, [pc, #12]	@ (802e714 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x31c>)
 802e706:	f003 febf 	bl	8032488 <__assert_func>
 802e70a:	bf00      	nop
 802e70c:	0803663c 	.word	0x0803663c
 802e710:	08036cb8 	.word	0x08036cb8
 802e714:	080367c4 	.word	0x080367c4

0802e718 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802e718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e71c:	ed2d 8b0a 	vpush	{d8-d12}
 802e720:	eeb0 aa40 	vmov.f32	s20, s0
 802e724:	eef0 9a60 	vmov.f32	s19, s1
 802e728:	eeb0 9a41 	vmov.f32	s18, s2
 802e72c:	eef0 8a62 	vmov.f32	s17, s5
 802e730:	eeb0 8a43 	vmov.f32	s16, s6
 802e734:	eeb0 ca44 	vmov.f32	s24, s8
 802e738:	eef0 ba64 	vmov.f32	s23, s9
 802e73c:	eeb0 ba45 	vmov.f32	s22, s10
 802e740:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802e744:	b0a3      	sub	sp, #140	@ 0x8c
 802e746:	901e      	str	r0, [sp, #120]	@ 0x78
 802e748:	9111      	str	r1, [sp, #68]	@ 0x44
 802e74a:	9213      	str	r2, [sp, #76]	@ 0x4c
 802e74c:	e9dd 413b 	ldrd	r4, r1, [sp, #236]	@ 0xec
 802e750:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 802e752:	6860      	ldr	r0, [r4, #4]
 802e754:	fb00 1b02 	mla	fp, r0, r2, r1
 802e758:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e75a:	6821      	ldr	r1, [r4, #0]
 802e75c:	9c3e      	ldr	r4, [sp, #248]	@ 0xf8
 802e75e:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 802e762:	6852      	ldr	r2, [r2, #4]
 802e764:	eb01 0800 	add.w	r8, r1, r0
 802e768:	6824      	ldr	r4, [r4, #0]
 802e76a:	e9dd 7b37 	ldrd	r7, fp, [sp, #220]	@ 0xdc
 802e76e:	3204      	adds	r2, #4
 802e770:	46c3      	mov	fp, r8
 802e772:	46b8      	mov	r8, r7
 802e774:	9f38      	ldr	r7, [sp, #224]	@ 0xe0
 802e776:	940e      	str	r4, [sp, #56]	@ 0x38
 802e778:	920a      	str	r2, [sp, #40]	@ 0x28
 802e77a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802e77c:	2a00      	cmp	r2, #0
 802e77e:	dc02      	bgt.n	802e786 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802e780:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802e782:	2a00      	cmp	r2, #0
 802e784:	dd63      	ble.n	802e84e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 802e786:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e788:	2b00      	cmp	r3, #0
 802e78a:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802e78e:	b234      	sxth	r4, r6
 802e790:	fa0f f98c 	sxth.w	r9, ip
 802e794:	f340 835f 	ble.w	802ee56 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73e>
 802e798:	1e65      	subs	r5, r4, #1
 802e79a:	f109 3eff 	add.w	lr, r9, #4294967295
 802e79e:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802e7a2:	e9dd ca39 	ldrd	ip, sl, [sp, #228]	@ 0xe4
 802e7a6:	ea5f 4228 	movs.w	r2, r8, asr #16
 802e7aa:	ea4f 4127 	mov.w	r1, r7, asr #16
 802e7ae:	d405      	bmi.n	802e7bc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802e7b0:	42aa      	cmp	r2, r5
 802e7b2:	da03      	bge.n	802e7bc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802e7b4:	2900      	cmp	r1, #0
 802e7b6:	db01      	blt.n	802e7bc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802e7b8:	4571      	cmp	r1, lr
 802e7ba:	db4d      	blt.n	802e858 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802e7bc:	1c50      	adds	r0, r2, #1
 802e7be:	d406      	bmi.n	802e7ce <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802e7c0:	42a0      	cmp	r0, r4
 802e7c2:	dc04      	bgt.n	802e7ce <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802e7c4:	1c48      	adds	r0, r1, #1
 802e7c6:	d402      	bmi.n	802e7ce <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802e7c8:	4548      	cmp	r0, r9
 802e7ca:	f340 831e 	ble.w	802ee0a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f2>
 802e7ce:	3b01      	subs	r3, #1
 802e7d0:	44e0      	add	r8, ip
 802e7d2:	4457      	add	r7, sl
 802e7d4:	f10b 0b03 	add.w	fp, fp, #3
 802e7d8:	d1e5      	bne.n	802e7a6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802e7da:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802e7dc:	2b00      	cmp	r3, #0
 802e7de:	dd36      	ble.n	802e84e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 802e7e0:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802e7e4:	ee79 9aab 	vadd.f32	s19, s19, s23
 802e7e8:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802e7ec:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802e7f0:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802e7f4:	ee69 7a27 	vmul.f32	s15, s18, s15
 802e7f8:	ee76 6a68 	vsub.f32	s13, s12, s17
 802e7fc:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802e800:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802e804:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e808:	ee16 2a90 	vmov	r2, s13
 802e80c:	3b01      	subs	r3, #1
 802e80e:	9311      	str	r3, [sp, #68]	@ 0x44
 802e810:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802e812:	fb92 f3f3 	sdiv	r3, r2, r3
 802e816:	ee17 2a10 	vmov	r2, s14
 802e81a:	eeb0 7a48 	vmov.f32	s14, s16
 802e81e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e822:	ee17 7a10 	vmov	r7, s14
 802e826:	eeb0 7a68 	vmov.f32	s14, s17
 802e82a:	9339      	str	r3, [sp, #228]	@ 0xe4
 802e82c:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802e82e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e832:	fb92 f3f3 	sdiv	r3, r2, r3
 802e836:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802e838:	933a      	str	r3, [sp, #232]	@ 0xe8
 802e83a:	ee17 8a10 	vmov	r8, s14
 802e83e:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802e840:	eeb0 8a67 	vmov.f32	s16, s15
 802e844:	eef0 8a46 	vmov.f32	s17, s12
 802e848:	bf08      	it	eq
 802e84a:	4613      	moveq	r3, r2
 802e84c:	e795      	b.n	802e77a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 802e84e:	b023      	add	sp, #140	@ 0x8c
 802e850:	ecbd 8b0a 	vpop	{d8-d12}
 802e854:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e858:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802e85c:	9839      	ldr	r0, [sp, #228]	@ 0xe4
 802e85e:	1e59      	subs	r1, r3, #1
 802e860:	fb00 8201 	mla	r2, r0, r1, r8
 802e864:	1412      	asrs	r2, r2, #16
 802e866:	9109      	str	r1, [sp, #36]	@ 0x24
 802e868:	f100 8151 	bmi.w	802eb0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e86c:	42aa      	cmp	r2, r5
 802e86e:	f280 814e 	bge.w	802eb0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e872:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 802e874:	fb02 7201 	mla	r2, r2, r1, r7
 802e878:	1412      	asrs	r2, r2, #16
 802e87a:	f100 8148 	bmi.w	802eb0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e87e:	f109 31ff 	add.w	r1, r9, #4294967295
 802e882:	428a      	cmp	r2, r1
 802e884:	f280 8143 	bge.w	802eb0e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e888:	2b00      	cmp	r3, #0
 802e88a:	dda6      	ble.n	802e7da <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802e88c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802e890:	445b      	add	r3, fp
 802e892:	930d      	str	r3, [sp, #52]	@ 0x34
 802e894:	f10b 0c03 	add.w	ip, fp, #3
 802e898:	46c1      	mov	r9, r8
 802e89a:	9738      	str	r7, [sp, #224]	@ 0xe0
 802e89c:	4621      	mov	r1, r4
 802e89e:	463b      	mov	r3, r7
 802e8a0:	e114      	b.n	802eacc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802e8a2:	f893 e001 	ldrb.w	lr, [r3, #1]
 802e8a6:	f856 502e 	ldr.w	r5, [r6, lr, lsl #2]
 802e8aa:	950f      	str	r5, [sp, #60]	@ 0x3c
 802e8ac:	0e2d      	lsrs	r5, r5, #24
 802e8ae:	9506      	str	r5, [sp, #24]
 802e8b0:	b162      	cbz	r2, 802e8cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802e8b2:	185d      	adds	r5, r3, r1
 802e8b4:	786d      	ldrb	r5, [r5, #1]
 802e8b6:	5c5b      	ldrb	r3, [r3, r1]
 802e8b8:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802e8bc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802e8c0:	9112      	str	r1, [sp, #72]	@ 0x48
 802e8c2:	9310      	str	r3, [sp, #64]	@ 0x40
 802e8c4:	0e09      	lsrs	r1, r1, #24
 802e8c6:	0e1b      	lsrs	r3, r3, #24
 802e8c8:	9108      	str	r1, [sp, #32]
 802e8ca:	9307      	str	r3, [sp, #28]
 802e8cc:	b2a4      	uxth	r4, r4
 802e8ce:	b292      	uxth	r2, r2
 802e8d0:	fb04 f502 	mul.w	r5, r4, r2
 802e8d4:	0124      	lsls	r4, r4, #4
 802e8d6:	1b66      	subs	r6, r4, r5
 802e8d8:	9b06      	ldr	r3, [sp, #24]
 802e8da:	b2b6      	uxth	r6, r6
 802e8dc:	fb06 f103 	mul.w	r1, r6, r3
 802e8e0:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802e8e4:	b292      	uxth	r2, r2
 802e8e6:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802e8ea:	1a9b      	subs	r3, r3, r2
 802e8ec:	b29b      	uxth	r3, r3
 802e8ee:	fb03 1100 	mla	r1, r3, r0, r1
 802e8f2:	9c07      	ldr	r4, [sp, #28]
 802e8f4:	fb02 1104 	mla	r1, r2, r4, r1
 802e8f8:	9c08      	ldr	r4, [sp, #32]
 802e8fa:	fb05 1104 	mla	r1, r5, r4, r1
 802e8fe:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802e902:	9109      	str	r1, [sp, #36]	@ 0x24
 802e904:	2900      	cmp	r1, #0
 802e906:	f000 80d2 	beq.w	802eaae <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x396>
 802e90a:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802e90e:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 802e912:	28ff      	cmp	r0, #255	@ 0xff
 802e914:	940b      	str	r4, [sp, #44]	@ 0x2c
 802e916:	910c      	str	r1, [sp, #48]	@ 0x30
 802e918:	d01b      	beq.n	802e952 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802e91a:	fb04 f400 	mul.w	r4, r4, r0
 802e91e:	4627      	mov	r7, r4
 802e920:	fb01 fe00 	mul.w	lr, r1, r0
 802e924:	0a24      	lsrs	r4, r4, #8
 802e926:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802e92a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802e92e:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802e932:	4427      	add	r7, r4
 802e934:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 802e938:	0a3f      	lsrs	r7, r7, #8
 802e93a:	0a00      	lsrs	r0, r0, #8
 802e93c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802e940:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802e944:	4307      	orrs	r7, r0
 802e946:	f007 11ff 	and.w	r1, r7, #16711935	@ 0xff00ff
 802e94a:	910b      	str	r1, [sp, #44]	@ 0x2c
 802e94c:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 802e950:	910c      	str	r1, [sp, #48]	@ 0x30
 802e952:	9806      	ldr	r0, [sp, #24]
 802e954:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802e956:	28ff      	cmp	r0, #255	@ 0xff
 802e958:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 802e95c:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 802e960:	d01a      	beq.n	802e998 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 802e962:	fb07 f700 	mul.w	r7, r7, r0
 802e966:	fb0e fe00 	mul.w	lr, lr, r0
 802e96a:	0a3c      	lsrs	r4, r7, #8
 802e96c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802e970:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802e974:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802e978:	4427      	add	r7, r4
 802e97a:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802e97e:	0a3f      	lsrs	r7, r7, #8
 802e980:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802e984:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802e988:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e98c:	ea47 0e0e 	orr.w	lr, r7, lr
 802e990:	f00e 17ff 	and.w	r7, lr, #16711935	@ 0xff00ff
 802e994:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e998:	9c07      	ldr	r4, [sp, #28]
 802e99a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802e99c:	2cff      	cmp	r4, #255	@ 0xff
 802e99e:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 802e9a2:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802e9a6:	d01b      	beq.n	802e9e0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 802e9a8:	fb00 f004 	mul.w	r0, r0, r4
 802e9ac:	fb0a fa04 	mul.w	sl, sl, r4
 802e9b0:	ea4f 2810 	mov.w	r8, r0, lsr #8
 802e9b4:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802e9b8:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802e9bc:	f50a 7480 	add.w	r4, sl, #256	@ 0x100
 802e9c0:	4440      	add	r0, r8
 802e9c2:	eb04 2a1a 	add.w	sl, r4, sl, lsr #8
 802e9c6:	0a00      	lsrs	r0, r0, #8
 802e9c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802e9cc:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e9d0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802e9d4:	ea40 0a0a 	orr.w	sl, r0, sl
 802e9d8:	f00a 10ff 	and.w	r0, sl, #16711935	@ 0xff00ff
 802e9dc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802e9e0:	9c08      	ldr	r4, [sp, #32]
 802e9e2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802e9e4:	2cff      	cmp	r4, #255	@ 0xff
 802e9e6:	f001 18ff 	and.w	r8, r1, #16711935	@ 0xff00ff
 802e9ea:	f401 4b7f 	and.w	fp, r1, #65280	@ 0xff00
 802e9ee:	d01b      	beq.n	802ea28 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 802e9f0:	fb08 f804 	mul.w	r8, r8, r4
 802e9f4:	fb0b fb04 	mul.w	fp, fp, r4
 802e9f8:	ea4f 2418 	mov.w	r4, r8, lsr #8
 802e9fc:	f004 11ff 	and.w	r1, r4, #16711935	@ 0xff00ff
 802ea00:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 802ea04:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802ea08:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802ea0c:	4488      	add	r8, r1
 802ea0e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802ea12:	0a24      	lsrs	r4, r4, #8
 802ea14:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802ea18:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802ea1c:	ea48 0b0b 	orr.w	fp, r8, fp
 802ea20:	f00b 18ff 	and.w	r8, fp, #16711935	@ 0xff00ff
 802ea24:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802ea28:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802ea2a:	fb07 f706 	mul.w	r7, r7, r6
 802ea2e:	43c9      	mvns	r1, r1
 802ea30:	fb0e f606 	mul.w	r6, lr, r6
 802ea34:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802ea36:	f81c ec02 	ldrb.w	lr, [ip, #-2]
 802ea3a:	fb04 7703 	mla	r7, r4, r3, r7
 802ea3e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802ea40:	fb00 7702 	mla	r7, r0, r2, r7
 802ea44:	fb04 6603 	mla	r6, r4, r3, r6
 802ea48:	fb0a 6602 	mla	r6, sl, r2, r6
 802ea4c:	f81c 3c03 	ldrb.w	r3, [ip, #-3]
 802ea50:	fb0b 6b05 	mla	fp, fp, r5, r6
 802ea54:	fb08 7805 	mla	r8, r8, r5, r7
 802ea58:	f81c 4c01 	ldrb.w	r4, [ip, #-1]
 802ea5c:	b2c9      	uxtb	r1, r1
 802ea5e:	fb0e fe01 	mul.w	lr, lr, r1
 802ea62:	fb04 f401 	mul.w	r4, r4, r1
 802ea66:	fb03 f101 	mul.w	r1, r3, r1
 802ea6a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802ea6e:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802ea72:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802ea76:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802ea7a:	ea48 030b 	orr.w	r3, r8, fp
 802ea7e:	f10e 0201 	add.w	r2, lr, #1
 802ea82:	1c66      	adds	r6, r4, #1
 802ea84:	1c4d      	adds	r5, r1, #1
 802ea86:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 802ea8a:	0a18      	lsrs	r0, r3, #8
 802ea8c:	0c1a      	lsrs	r2, r3, #16
 802ea8e:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 802ea92:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802ea96:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802ea9a:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802ea9e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802eaa2:	f80c ec02 	strb.w	lr, [ip, #-2]
 802eaa6:	f80c 4c01 	strb.w	r4, [ip, #-1]
 802eaaa:	f80c 1c03 	strb.w	r1, [ip, #-3]
 802eaae:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 802eab0:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 802eab2:	4499      	add	r9, r3
 802eab4:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802eab6:	4413      	add	r3, r2
 802eab8:	9338      	str	r3, [sp, #224]	@ 0xe0
 802eaba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802eabc:	4563      	cmp	r3, ip
 802eabe:	d024      	beq.n	802eb0a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802eac0:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 802eac2:	f10c 0c03 	add.w	ip, ip, #3
 802eac6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802eaca:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802eacc:	ea4f 4229 	mov.w	r2, r9, asr #16
 802ead0:	141b      	asrs	r3, r3, #16
 802ead2:	fb01 2303 	mla	r3, r1, r3, r2
 802ead6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802ead8:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802eada:	5cc2      	ldrb	r2, [r0, r3]
 802eadc:	f3c9 3403 	ubfx	r4, r9, #12, #4
 802eae0:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802eae4:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802eae6:	4403      	add	r3, r0
 802eae8:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802eaec:	0e38      	lsrs	r0, r7, #24
 802eaee:	2c00      	cmp	r4, #0
 802eaf0:	f47f aed7 	bne.w	802e8a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802eaf4:	2a00      	cmp	r2, #0
 802eaf6:	f43f aee9 	beq.w	802e8cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802eafa:	5c5b      	ldrb	r3, [r3, r1]
 802eafc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802eafe:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802eb02:	9310      	str	r3, [sp, #64]	@ 0x40
 802eb04:	0e1b      	lsrs	r3, r3, #24
 802eb06:	9307      	str	r3, [sp, #28]
 802eb08:	e6e0      	b.n	802e8cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802eb0a:	469b      	mov	fp, r3
 802eb0c:	e665      	b.n	802e7da <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802eb0e:	2b00      	cmp	r3, #0
 802eb10:	f77f ae63 	ble.w	802e7da <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802eb14:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802eb18:	ea4f 4228 	mov.w	r2, r8, asr #16
 802eb1c:	1439      	asrs	r1, r7, #16
 802eb1e:	2a00      	cmp	r2, #0
 802eb20:	46d9      	mov	r9, fp
 802eb22:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
 802eb26:	9c3e      	ldr	r4, [sp, #248]	@ 0xf8
 802eb28:	e9dd b539 	ldrd	fp, r5, [sp, #228]	@ 0xe4
 802eb2c:	f3c8 3003 	ubfx	r0, r8, #12, #4
 802eb30:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802eb34:	f2c0 8141 	blt.w	802edba <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802eb38:	1e73      	subs	r3, r6, #1
 802eb3a:	429a      	cmp	r2, r3
 802eb3c:	f280 813d 	bge.w	802edba <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802eb40:	2900      	cmp	r1, #0
 802eb42:	f2c0 813a 	blt.w	802edba <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802eb46:	f10c 33ff 	add.w	r3, ip, #4294967295
 802eb4a:	4299      	cmp	r1, r3
 802eb4c:	f280 8135 	bge.w	802edba <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802eb50:	b233      	sxth	r3, r6
 802eb52:	fb01 2203 	mla	r2, r1, r3, r2
 802eb56:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802eb58:	930c      	str	r3, [sp, #48]	@ 0x30
 802eb5a:	5c8b      	ldrb	r3, [r1, r2]
 802eb5c:	440a      	add	r2, r1
 802eb5e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802eb60:	4616      	mov	r6, r2
 802eb62:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802eb66:	930d      	str	r3, [sp, #52]	@ 0x34
 802eb68:	0e1b      	lsrs	r3, r3, #24
 802eb6a:	2800      	cmp	r0, #0
 802eb6c:	f000 8153 	beq.w	802ee16 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802eb70:	f896 c001 	ldrb.w	ip, [r6, #1]
 802eb74:	f851 202c 	ldr.w	r2, [r1, ip, lsl #2]
 802eb78:	921f      	str	r2, [sp, #124]	@ 0x7c
 802eb7a:	0e12      	lsrs	r2, r2, #24
 802eb7c:	9214      	str	r2, [sp, #80]	@ 0x50
 802eb7e:	f1be 0f00 	cmp.w	lr, #0
 802eb82:	f040 8155 	bne.w	802ee30 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 802eb86:	b280      	uxth	r0, r0
 802eb88:	fa1f fc8e 	uxth.w	ip, lr
 802eb8c:	fb00 f20c 	mul.w	r2, r0, ip
 802eb90:	0106      	lsls	r6, r0, #4
 802eb92:	1ab0      	subs	r0, r6, r2
 802eb94:	b281      	uxth	r1, r0
 802eb96:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802eb98:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 802eb9c:	fb01 f000 	mul.w	r0, r1, r0
 802eba0:	9117      	str	r1, [sp, #92]	@ 0x5c
 802eba2:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802eba6:	fa1f f18c 	uxth.w	r1, ip
 802ebaa:	1a76      	subs	r6, r6, r1
 802ebac:	b2b6      	uxth	r6, r6
 802ebae:	9619      	str	r6, [sp, #100]	@ 0x64
 802ebb0:	fb06 0603 	mla	r6, r6, r3, r0
 802ebb4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802ebb6:	9118      	str	r1, [sp, #96]	@ 0x60
 802ebb8:	fb01 6600 	mla	r6, r1, r0, r6
 802ebbc:	9916      	ldr	r1, [sp, #88]	@ 0x58
 802ebbe:	fb02 6601 	mla	r6, r2, r1, r6
 802ebc2:	f3c6 2107 	ubfx	r1, r6, #8, #8
 802ebc6:	911a      	str	r1, [sp, #104]	@ 0x68
 802ebc8:	2900      	cmp	r1, #0
 802ebca:	f000 80e0 	beq.w	802ed8e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802ebce:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802ebd0:	2bff      	cmp	r3, #255	@ 0xff
 802ebd2:	f000 11ff 	and.w	r1, r0, #16711935	@ 0xff00ff
 802ebd6:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802ebda:	910d      	str	r1, [sp, #52]	@ 0x34
 802ebdc:	901b      	str	r0, [sp, #108]	@ 0x6c
 802ebde:	d01c      	beq.n	802ec1a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 802ebe0:	fb01 f103 	mul.w	r1, r1, r3
 802ebe4:	fb00 f003 	mul.w	r0, r0, r3
 802ebe8:	460e      	mov	r6, r1
 802ebea:	4603      	mov	r3, r0
 802ebec:	0a09      	lsrs	r1, r1, #8
 802ebee:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ebf2:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802ebf6:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 802ebfa:	4431      	add	r1, r6
 802ebfc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802ec00:	0a09      	lsrs	r1, r1, #8
 802ec02:	0a1b      	lsrs	r3, r3, #8
 802ec04:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ec08:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ec0c:	430b      	orrs	r3, r1
 802ec0e:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802ec12:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ec16:	910d      	str	r1, [sp, #52]	@ 0x34
 802ec18:	931b      	str	r3, [sp, #108]	@ 0x6c
 802ec1a:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 802ec1c:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ec20:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802ec24:	9914      	ldr	r1, [sp, #80]	@ 0x50
 802ec26:	931c      	str	r3, [sp, #112]	@ 0x70
 802ec28:	29ff      	cmp	r1, #255	@ 0xff
 802ec2a:	d019      	beq.n	802ec60 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802ec2c:	fb03 f301 	mul.w	r3, r3, r1
 802ec30:	fb06 f601 	mul.w	r6, r6, r1
 802ec34:	0a19      	lsrs	r1, r3, #8
 802ec36:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802ec3a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ec3e:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 802ec42:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802ec46:	4401      	add	r1, r0
 802ec48:	0a09      	lsrs	r1, r1, #8
 802ec4a:	0a1b      	lsrs	r3, r3, #8
 802ec4c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ec50:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ec54:	4319      	orrs	r1, r3
 802ec56:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ec5a:	931c      	str	r3, [sp, #112]	@ 0x70
 802ec5c:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802ec60:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802ec62:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ec66:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 802ec6a:	9915      	ldr	r1, [sp, #84]	@ 0x54
 802ec6c:	930c      	str	r3, [sp, #48]	@ 0x30
 802ec6e:	29ff      	cmp	r1, #255	@ 0xff
 802ec70:	901d      	str	r0, [sp, #116]	@ 0x74
 802ec72:	d01a      	beq.n	802ecaa <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x592>
 802ec74:	fb03 f301 	mul.w	r3, r3, r1
 802ec78:	fb00 fc01 	mul.w	ip, r0, r1
 802ec7c:	0a19      	lsrs	r1, r3, #8
 802ec7e:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802ec82:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ec86:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 802ec8a:	4401      	add	r1, r0
 802ec8c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802ec90:	0a09      	lsrs	r1, r1, #8
 802ec92:	0a1b      	lsrs	r3, r3, #8
 802ec94:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ec98:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ec9c:	4319      	orrs	r1, r3
 802ec9e:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802eca2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802eca6:	930c      	str	r3, [sp, #48]	@ 0x30
 802eca8:	911d      	str	r1, [sp, #116]	@ 0x74
 802ecaa:	9921      	ldr	r1, [sp, #132]	@ 0x84
 802ecac:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802ecb0:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 802ecb4:	9916      	ldr	r1, [sp, #88]	@ 0x58
 802ecb6:	29ff      	cmp	r1, #255	@ 0xff
 802ecb8:	d01c      	beq.n	802ecf4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 802ecba:	fb0c fc01 	mul.w	ip, ip, r1
 802ecbe:	fb0e fe01 	mul.w	lr, lr, r1
 802ecc2:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802ecc6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802ecca:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802ecce:	f50e 7180 	add.w	r1, lr, #256	@ 0x100
 802ecd2:	4484      	add	ip, r0
 802ecd4:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802ecd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802ecdc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ece0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ece4:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ece8:	ea4c 0e0e 	orr.w	lr, ip, lr
 802ecec:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 802ecf0:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ecf4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 802ecf6:	981c      	ldr	r0, [sp, #112]	@ 0x70
 802ecf8:	43c9      	mvns	r1, r1
 802ecfa:	911a      	str	r1, [sp, #104]	@ 0x68
 802ecfc:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802ecfe:	fb00 f001 	mul.w	r0, r0, r1
 802ed02:	fb06 f301 	mul.w	r3, r6, r1
 802ed06:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 802ed08:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802ed0a:	fb01 0006 	mla	r0, r1, r6, r0
 802ed0e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 802ed10:	fb01 3106 	mla	r1, r1, r6, r3
 802ed14:	9e18      	ldr	r6, [sp, #96]	@ 0x60
 802ed16:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802ed18:	910d      	str	r1, [sp, #52]	@ 0x34
 802ed1a:	fb03 0306 	mla	r3, r3, r6, r0
 802ed1e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802ed20:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802ed22:	fb0c 3302 	mla	r3, ip, r2, r3
 802ed26:	fb00 1106 	mla	r1, r0, r6, r1
 802ed2a:	f89d 6068 	ldrb.w	r6, [sp, #104]	@ 0x68
 802ed2e:	f899 0002 	ldrb.w	r0, [r9, #2]
 802ed32:	fb0e 1e02 	mla	lr, lr, r2, r1
 802ed36:	f899 2001 	ldrb.w	r2, [r9, #1]
 802ed3a:	f899 1000 	ldrb.w	r1, [r9]
 802ed3e:	fb00 f006 	mul.w	r0, r0, r6
 802ed42:	fb02 fc06 	mul.w	ip, r2, r6
 802ed46:	fb01 f106 	mul.w	r1, r1, r6
 802ed4a:	0a1b      	lsrs	r3, r3, #8
 802ed4c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ed50:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802ed54:	1c46      	adds	r6, r0, #1
 802ed56:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 802ed5a:	4313      	orrs	r3, r2
 802ed5c:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 802ed60:	f10c 0201 	add.w	r2, ip, #1
 802ed64:	1c4e      	adds	r6, r1, #1
 802ed66:	ea4f 2e13 	mov.w	lr, r3, lsr #8
 802ed6a:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 802ed6e:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 802ed72:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 802ed76:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 802ed7a:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802ed7e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802ed82:	f889 2001 	strb.w	r2, [r9, #1]
 802ed86:	f889 0002 	strb.w	r0, [r9, #2]
 802ed8a:	f889 3000 	strb.w	r3, [r9]
 802ed8e:	f1ba 0f00 	cmp.w	sl, #0
 802ed92:	f109 0903 	add.w	r9, r9, #3
 802ed96:	44d8      	add	r8, fp
 802ed98:	442f      	add	r7, r5
 802ed9a:	dd2c      	ble.n	802edf6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6de>
 802ed9c:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802eda0:	ea4f 4228 	mov.w	r2, r8, asr #16
 802eda4:	2a00      	cmp	r2, #0
 802eda6:	f10a 3aff 	add.w	sl, sl, #4294967295
 802edaa:	ea4f 4127 	mov.w	r1, r7, asr #16
 802edae:	f3c8 3003 	ubfx	r0, r8, #12, #4
 802edb2:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802edb6:	f6bf aebf 	bge.w	802eb38 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802edba:	1c53      	adds	r3, r2, #1
 802edbc:	d4e7      	bmi.n	802ed8e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802edbe:	42b3      	cmp	r3, r6
 802edc0:	dce5      	bgt.n	802ed8e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802edc2:	1c4b      	adds	r3, r1, #1
 802edc4:	d4e3      	bmi.n	802ed8e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802edc6:	4563      	cmp	r3, ip
 802edc8:	dce1      	bgt.n	802ed8e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802edca:	fa0f f38c 	sxth.w	r3, ip
 802edce:	b236      	sxth	r6, r6
 802edd0:	e9cd 2102 	strd	r2, r1, [sp, #8]
 802edd4:	e9cd 6300 	strd	r6, r3, [sp]
 802edd8:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802eddc:	4649      	mov	r1, r9
 802edde:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802ede0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802ede2:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802ede4:	f7ff fb08 	bl	802e3f8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>
 802ede8:	f1ba 0f00 	cmp.w	sl, #0
 802edec:	f109 0903 	add.w	r9, r9, #3
 802edf0:	44d8      	add	r8, fp
 802edf2:	442f      	add	r7, r5
 802edf4:	dcd2      	bgt.n	802ed9c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x684>
 802edf6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802edf8:	f8dd b02c 	ldr.w	fp, [sp, #44]	@ 0x2c
 802edfc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802ee00:	3301      	adds	r3, #1
 802ee02:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802ee06:	449b      	add	fp, r3
 802ee08:	e4e7      	b.n	802e7da <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802ee0a:	3b01      	subs	r3, #1
 802ee0c:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802ee10:	469a      	mov	sl, r3
 802ee12:	9309      	str	r3, [sp, #36]	@ 0x24
 802ee14:	e683      	b.n	802eb1e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 802ee16:	f1be 0f00 	cmp.w	lr, #0
 802ee1a:	f43f aeb4 	beq.w	802eb86 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802ee1e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802ee20:	5c72      	ldrb	r2, [r6, r1]
 802ee22:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802ee24:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 802ee28:	9220      	str	r2, [sp, #128]	@ 0x80
 802ee2a:	0e12      	lsrs	r2, r2, #24
 802ee2c:	9215      	str	r2, [sp, #84]	@ 0x54
 802ee2e:	e6aa      	b.n	802eb86 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802ee30:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802ee32:	eb06 0c02 	add.w	ip, r6, r2
 802ee36:	4632      	mov	r2, r6
 802ee38:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802ee3a:	f89c c001 	ldrb.w	ip, [ip, #1]
 802ee3e:	5d92      	ldrb	r2, [r2, r6]
 802ee40:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802ee44:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 802ee48:	0e31      	lsrs	r1, r6, #24
 802ee4a:	9220      	str	r2, [sp, #128]	@ 0x80
 802ee4c:	0e12      	lsrs	r2, r2, #24
 802ee4e:	9621      	str	r6, [sp, #132]	@ 0x84
 802ee50:	9116      	str	r1, [sp, #88]	@ 0x58
 802ee52:	9215      	str	r2, [sp, #84]	@ 0x54
 802ee54:	e697      	b.n	802eb86 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802ee56:	f43f acc0 	beq.w	802e7da <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802ee5a:	1e65      	subs	r5, r4, #1
 802ee5c:	e4fe      	b.n	802e85c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802ee5e:	bf00      	nop

0802ee60 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>:
 802ee60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ee64:	b087      	sub	sp, #28
 802ee66:	f89d b058 	ldrb.w	fp, [sp, #88]	@ 0x58
 802ee6a:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 802ee6e:	ea6f 000b 	mvn.w	r0, fp
 802ee72:	e9dd 4712 	ldrd	r4, r7, [sp, #72]	@ 0x48
 802ee76:	fb07 4c06 	mla	ip, r7, r6, r4
 802ee7a:	b2c0      	uxtb	r0, r0
 802ee7c:	2f00      	cmp	r7, #0
 802ee7e:	9002      	str	r0, [sp, #8]
 802ee80:	eb02 0e0c 	add.w	lr, r2, ip
 802ee84:	f107 0801 	add.w	r8, r7, #1
 802ee88:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	@ 0x44
 802ee8c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 802ee90:	f89d 0054 	ldrb.w	r0, [sp, #84]	@ 0x54
 802ee94:	db02      	blt.n	802ee9c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x3c>
 802ee96:	45b9      	cmp	r9, r7
 802ee98:	f300 80a0 	bgt.w	802efdc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x17c>
 802ee9c:	468c      	mov	ip, r1
 802ee9e:	460f      	mov	r7, r1
 802eea0:	780a      	ldrb	r2, [r1, #0]
 802eea2:	9203      	str	r2, [sp, #12]
 802eea4:	9201      	str	r2, [sp, #4]
 802eea6:	f1b8 0f00 	cmp.w	r8, #0
 802eeaa:	db01      	blt.n	802eeb0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x50>
 802eeac:	45c1      	cmp	r9, r8
 802eeae:	dc7b      	bgt.n	802efa8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x148>
 802eeb0:	460b      	mov	r3, r1
 802eeb2:	4689      	mov	r9, r1
 802eeb4:	f891 a000 	ldrb.w	sl, [r1]
 802eeb8:	f8cd a014 	str.w	sl, [sp, #20]
 802eebc:	2d0f      	cmp	r5, #15
 802eebe:	f200 80cd 	bhi.w	802f05c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802eec2:	280f      	cmp	r0, #15
 802eec4:	f200 80ca 	bhi.w	802f05c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802eec8:	780a      	ldrb	r2, [r1, #0]
 802eeca:	9204      	str	r2, [sp, #16]
 802eecc:	b2aa      	uxth	r2, r5
 802eece:	b280      	uxth	r0, r0
 802eed0:	fb02 f500 	mul.w	r5, r2, r0
 802eed4:	0112      	lsls	r2, r2, #4
 802eed6:	f89c 8001 	ldrb.w	r8, [ip, #1]
 802eeda:	f89c e002 	ldrb.w	lr, [ip, #2]
 802eede:	1b54      	subs	r4, r2, r5
 802eee0:	b2a4      	uxth	r4, r4
 802eee2:	fb04 f808 	mul.w	r8, r4, r8
 802eee6:	fb04 fe0e 	mul.w	lr, r4, lr
 802eeea:	ebc5 1000 	rsb	r0, r5, r0, lsl #4
 802eeee:	b280      	uxth	r0, r0
 802eef0:	9e01      	ldr	r6, [sp, #4]
 802eef2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802eef6:	f897 c001 	ldrb.w	ip, [r7, #1]
 802eefa:	1a12      	subs	r2, r2, r0
 802eefc:	78bf      	ldrb	r7, [r7, #2]
 802eefe:	b292      	uxth	r2, r2
 802ef00:	fb04 f406 	mul.w	r4, r4, r6
 802ef04:	fb02 8c0c 	mla	ip, r2, ip, r8
 802ef08:	fb02 e707 	mla	r7, r2, r7, lr
 802ef0c:	9e03      	ldr	r6, [sp, #12]
 802ef0e:	f899 8001 	ldrb.w	r8, [r9, #1]
 802ef12:	f899 e002 	ldrb.w	lr, [r9, #2]
 802ef16:	fb02 4206 	mla	r2, r2, r6, r4
 802ef1a:	fb00 cc08 	mla	ip, r0, r8, ip
 802ef1e:	fb00 770e 	mla	r7, r0, lr, r7
 802ef22:	f893 8001 	ldrb.w	r8, [r3, #1]
 802ef26:	f893 e002 	ldrb.w	lr, [r3, #2]
 802ef2a:	fb00 220a 	mla	r2, r0, sl, r2
 802ef2e:	fb05 c808 	mla	r8, r5, r8, ip
 802ef32:	fb05 7e0e 	mla	lr, r5, lr, r7
 802ef36:	9805      	ldr	r0, [sp, #20]
 802ef38:	f8bd 9008 	ldrh.w	r9, [sp, #8]
 802ef3c:	fb05 2500 	mla	r5, r5, r0, r2
 802ef40:	9a04      	ldr	r2, [sp, #16]
 802ef42:	fa1f f38b 	uxth.w	r3, fp
 802ef46:	f3c8 2807 	ubfx	r8, r8, #8, #8
 802ef4a:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 802ef4e:	fb12 f609 	smulbb	r6, r2, r9
 802ef52:	fb1e fe03 	smulbb	lr, lr, r3
 802ef56:	fb18 f803 	smulbb	r8, r8, r3
 802ef5a:	784a      	ldrb	r2, [r1, #1]
 802ef5c:	7888      	ldrb	r0, [r1, #2]
 802ef5e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802ef62:	fb05 6503 	mla	r5, r5, r3, r6
 802ef66:	fb02 8809 	mla	r8, r2, r9, r8
 802ef6a:	fb00 e909 	mla	r9, r0, r9, lr
 802ef6e:	b2ad      	uxth	r5, r5
 802ef70:	fa1f f888 	uxth.w	r8, r8
 802ef74:	fa1f f989 	uxth.w	r9, r9
 802ef78:	f108 0001 	add.w	r0, r8, #1
 802ef7c:	f109 0201 	add.w	r2, r9, #1
 802ef80:	1c6b      	adds	r3, r5, #1
 802ef82:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 802ef86:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802ef8a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802ef8e:	ea4f 2828 	mov.w	r8, r8, asr #8
 802ef92:	ea4f 2929 	mov.w	r9, r9, asr #8
 802ef96:	122d      	asrs	r5, r5, #8
 802ef98:	f881 8001 	strb.w	r8, [r1, #1]
 802ef9c:	f881 9002 	strb.w	r9, [r1, #2]
 802efa0:	700d      	strb	r5, [r1, #0]
 802efa2:	b007      	add	sp, #28
 802efa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802efa8:	b388      	cbz	r0, 802f00e <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1ae>
 802efaa:	2c00      	cmp	r4, #0
 802efac:	db44      	blt.n	802f038 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d8>
 802efae:	42a6      	cmp	r6, r4
 802efb0:	dd42      	ble.n	802f038 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d8>
 802efb2:	f81e 9006 	ldrb.w	r9, [lr, r6]
 802efb6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802efba:	4499      	add	r9, r3
 802efbc:	3401      	adds	r4, #1
 802efbe:	f899 a000 	ldrb.w	sl, [r9]
 802efc2:	d435      	bmi.n	802f030 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d0>
 802efc4:	42a6      	cmp	r6, r4
 802efc6:	dd33      	ble.n	802f030 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d0>
 802efc8:	2d00      	cmp	r5, #0
 802efca:	d043      	beq.n	802f054 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1f4>
 802efcc:	4476      	add	r6, lr
 802efce:	7872      	ldrb	r2, [r6, #1]
 802efd0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802efd4:	5c9c      	ldrb	r4, [r3, r2]
 802efd6:	4413      	add	r3, r2
 802efd8:	9405      	str	r4, [sp, #20]
 802efda:	e76f      	b.n	802eebc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x5c>
 802efdc:	2c00      	cmp	r4, #0
 802efde:	db01      	blt.n	802efe4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x184>
 802efe0:	42a6      	cmp	r6, r4
 802efe2:	dc1f      	bgt.n	802f024 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1c4>
 802efe4:	460f      	mov	r7, r1
 802efe6:	783a      	ldrb	r2, [r7, #0]
 802efe8:	9203      	str	r2, [sp, #12]
 802efea:	1c62      	adds	r2, r4, #1
 802efec:	d40b      	bmi.n	802f006 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1a6>
 802efee:	4296      	cmp	r6, r2
 802eff0:	dd09      	ble.n	802f006 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1a6>
 802eff2:	b31d      	cbz	r5, 802f03c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1dc>
 802eff4:	f89e c001 	ldrb.w	ip, [lr, #1]
 802eff8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802effc:	f813 200c 	ldrb.w	r2, [r3, ip]
 802f000:	449c      	add	ip, r3
 802f002:	9201      	str	r2, [sp, #4]
 802f004:	e74f      	b.n	802eea6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x46>
 802f006:	780a      	ldrb	r2, [r1, #0]
 802f008:	468c      	mov	ip, r1
 802f00a:	9201      	str	r2, [sp, #4]
 802f00c:	e74b      	b.n	802eea6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x46>
 802f00e:	2d0f      	cmp	r5, #15
 802f010:	f891 a000 	ldrb.w	sl, [r1]
 802f014:	d822      	bhi.n	802f05c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802f016:	f8cd a010 	str.w	sl, [sp, #16]
 802f01a:	460b      	mov	r3, r1
 802f01c:	4689      	mov	r9, r1
 802f01e:	f8cd a014 	str.w	sl, [sp, #20]
 802f022:	e753      	b.n	802eecc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x6c>
 802f024:	f812 700c 	ldrb.w	r7, [r2, ip]
 802f028:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802f02c:	441f      	add	r7, r3
 802f02e:	e7da      	b.n	802efe6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x186>
 802f030:	780b      	ldrb	r3, [r1, #0]
 802f032:	9305      	str	r3, [sp, #20]
 802f034:	460b      	mov	r3, r1
 802f036:	e741      	b.n	802eebc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x5c>
 802f038:	4689      	mov	r9, r1
 802f03a:	e7bf      	b.n	802efbc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x15c>
 802f03c:	780a      	ldrb	r2, [r1, #0]
 802f03e:	f1b8 0f00 	cmp.w	r8, #0
 802f042:	9201      	str	r2, [sp, #4]
 802f044:	468c      	mov	ip, r1
 802f046:	f6bf af31 	bge.w	802eeac <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x4c>
 802f04a:	460b      	mov	r3, r1
 802f04c:	4689      	mov	r9, r1
 802f04e:	9205      	str	r2, [sp, #20]
 802f050:	4692      	mov	sl, r2
 802f052:	e736      	b.n	802eec2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x62>
 802f054:	780b      	ldrb	r3, [r1, #0]
 802f056:	9305      	str	r3, [sp, #20]
 802f058:	460b      	mov	r3, r1
 802f05a:	e732      	b.n	802eec2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x62>
 802f05c:	4b03      	ldr	r3, [pc, #12]	@ (802f06c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x20c>)
 802f05e:	4a04      	ldr	r2, [pc, #16]	@ (802f070 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x210>)
 802f060:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802f064:	4803      	ldr	r0, [pc, #12]	@ (802f074 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x214>)
 802f066:	f003 fa0f 	bl	8032488 <__assert_func>
 802f06a:	bf00      	nop
 802f06c:	0803663c 	.word	0x0803663c
 802f070:	08036cb8 	.word	0x08036cb8
 802f074:	080367c4 	.word	0x080367c4

0802f078 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802f078:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f07c:	ed2d 8b08 	vpush	{d8-d11}
 802f080:	b095      	sub	sp, #84	@ 0x54
 802f082:	f89d 40bc 	ldrb.w	r4, [sp, #188]	@ 0xbc
 802f086:	9013      	str	r0, [sp, #76]	@ 0x4c
 802f088:	43e0      	mvns	r0, r4
 802f08a:	e9dd a727 	ldrd	sl, r7, [sp, #156]	@ 0x9c
 802f08e:	eeb0 aa40 	vmov.f32	s20, s0
 802f092:	eef0 9a60 	vmov.f32	s19, s1
 802f096:	eeb0 9a41 	vmov.f32	s18, s2
 802f09a:	eef0 8a62 	vmov.f32	s17, s5
 802f09e:	eeb0 8a43 	vmov.f32	s16, s6
 802f0a2:	eef0 ba44 	vmov.f32	s23, s8
 802f0a6:	eeb0 ba64 	vmov.f32	s22, s9
 802f0aa:	eef0 aa45 	vmov.f32	s21, s10
 802f0ae:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802f0b2:	9411      	str	r4, [sp, #68]	@ 0x44
 802f0b4:	469b      	mov	fp, r3
 802f0b6:	e9dd 422b 	ldrd	r4, r2, [sp, #172]	@ 0xac
 802f0ba:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802f0bc:	6861      	ldr	r1, [r4, #4]
 802f0be:	fb01 2303 	mla	r3, r1, r3, r2
 802f0c2:	6821      	ldr	r1, [r4, #0]
 802f0c4:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 802f0c6:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802f0c8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802f0cc:	6852      	ldr	r2, [r2, #4]
 802f0ce:	6824      	ldr	r4, [r4, #0]
 802f0d0:	930d      	str	r3, [sp, #52]	@ 0x34
 802f0d2:	b2c3      	uxtb	r3, r0
 802f0d4:	930b      	str	r3, [sp, #44]	@ 0x2c
 802f0d6:	1d13      	adds	r3, r2, #4
 802f0d8:	940a      	str	r4, [sp, #40]	@ 0x28
 802f0da:	9308      	str	r3, [sp, #32]
 802f0dc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802f0de:	2b00      	cmp	r3, #0
 802f0e0:	dc02      	bgt.n	802f0e8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802f0e2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802f0e4:	2b00      	cmp	r3, #0
 802f0e6:	dd6c      	ble.n	802f1c2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802f0e8:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802f0ea:	f1bb 0f00 	cmp.w	fp, #0
 802f0ee:	e9d3 5e02 	ldrd	r5, lr, [r3, #8]
 802f0f2:	b228      	sxth	r0, r5
 802f0f4:	fa0f f68e 	sxth.w	r6, lr
 802f0f8:	f340 8245 	ble.w	802f586 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 802f0fc:	e9dd 8929 	ldrd	r8, r9, [sp, #164]	@ 0xa4
 802f100:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802f102:	1e44      	subs	r4, r0, #1
 802f104:	f106 3cff 	add.w	ip, r6, #4294967295
 802f108:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 802f10c:	ea5f 432a 	movs.w	r3, sl, asr #16
 802f110:	ea4f 4127 	mov.w	r1, r7, asr #16
 802f114:	d405      	bmi.n	802f122 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f116:	42a3      	cmp	r3, r4
 802f118:	da03      	bge.n	802f122 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f11a:	2900      	cmp	r1, #0
 802f11c:	db01      	blt.n	802f122 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f11e:	4561      	cmp	r1, ip
 802f120:	db54      	blt.n	802f1cc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802f122:	f113 0e01 	adds.w	lr, r3, #1
 802f126:	d407      	bmi.n	802f138 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f128:	4586      	cmp	lr, r0
 802f12a:	dc05      	bgt.n	802f138 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f12c:	f111 0e01 	adds.w	lr, r1, #1
 802f130:	d402      	bmi.n	802f138 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f132:	45b6      	cmp	lr, r6
 802f134:	f340 8189 	ble.w	802f44a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 802f138:	f1bb 0b01 	subs.w	fp, fp, #1
 802f13c:	44c2      	add	sl, r8
 802f13e:	444f      	add	r7, r9
 802f140:	f102 0204 	add.w	r2, r2, #4
 802f144:	d1e2      	bne.n	802f10c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802f146:	920d      	str	r2, [sp, #52]	@ 0x34
 802f148:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802f14a:	2b00      	cmp	r3, #0
 802f14c:	dd39      	ble.n	802f1c2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802f14e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802f152:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802f156:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802f15a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802f15e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802f162:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802f166:	ee69 7a27 	vmul.f32	s15, s18, s15
 802f16a:	ee76 6a68 	vsub.f32	s13, s12, s17
 802f16e:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802f172:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802f176:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f17a:	ee16 2a90 	vmov	r2, s13
 802f17e:	3b01      	subs	r3, #1
 802f180:	930e      	str	r3, [sp, #56]	@ 0x38
 802f182:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f184:	fb92 f3f3 	sdiv	r3, r2, r3
 802f188:	ee17 2a10 	vmov	r2, s14
 802f18c:	eeb0 7a48 	vmov.f32	s14, s16
 802f190:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f194:	ee17 7a10 	vmov	r7, s14
 802f198:	eeb0 7a68 	vmov.f32	s14, s17
 802f19c:	9329      	str	r3, [sp, #164]	@ 0xa4
 802f19e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f1a0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f1a4:	fb92 f3f3 	sdiv	r3, r2, r3
 802f1a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802f1aa:	932a      	str	r3, [sp, #168]	@ 0xa8
 802f1ac:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f1ae:	ee17 aa10 	vmov	sl, s14
 802f1b2:	eeb0 8a67 	vmov.f32	s16, s15
 802f1b6:	eef0 8a46 	vmov.f32	s17, s12
 802f1ba:	bf14      	ite	ne
 802f1bc:	469b      	movne	fp, r3
 802f1be:	4693      	moveq	fp, r2
 802f1c0:	e78c      	b.n	802f0dc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 802f1c2:	b015      	add	sp, #84	@ 0x54
 802f1c4:	ecbd 8b08 	vpop	{d8-d11}
 802f1c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f1cc:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802f1d0:	920d      	str	r2, [sp, #52]	@ 0x34
 802f1d2:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 802f1d4:	f10b 32ff 	add.w	r2, fp, #4294967295
 802f1d8:	fb01 a302 	mla	r3, r1, r2, sl
 802f1dc:	141b      	asrs	r3, r3, #16
 802f1de:	9209      	str	r2, [sp, #36]	@ 0x24
 802f1e0:	f100 80d3 	bmi.w	802f38a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f1e4:	42a3      	cmp	r3, r4
 802f1e6:	f280 80d0 	bge.w	802f38a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f1ea:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802f1ec:	fb03 7302 	mla	r3, r3, r2, r7
 802f1f0:	141b      	asrs	r3, r3, #16
 802f1f2:	f100 80ca 	bmi.w	802f38a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f1f6:	3e01      	subs	r6, #1
 802f1f8:	42b3      	cmp	r3, r6
 802f1fa:	f280 80c6 	bge.w	802f38a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f1fe:	f1bb 0f00 	cmp.w	fp, #0
 802f202:	dda1      	ble.n	802f148 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f204:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 802f208:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802f20c:	930c      	str	r3, [sp, #48]	@ 0x30
 802f20e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802f210:	f103 0804 	add.w	r8, r3, #4
 802f214:	e08f      	b.n	802f336 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802f216:	7861      	ldrb	r1, [r4, #1]
 802f218:	eb04 0c00 	add.w	ip, r4, r0
 802f21c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f220:	4431      	add	r1, r6
 802f222:	2a00      	cmp	r2, #0
 802f224:	f000 80a3 	beq.w	802f36e <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 802f228:	5c20      	ldrb	r0, [r4, r0]
 802f22a:	f89c c001 	ldrb.w	ip, [ip, #1]
 802f22e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f232:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802f236:	4430      	add	r0, r6
 802f238:	44b4      	add	ip, r6
 802f23a:	b29b      	uxth	r3, r3
 802f23c:	b292      	uxth	r2, r2
 802f23e:	fb03 f402 	mul.w	r4, r3, r2
 802f242:	011b      	lsls	r3, r3, #4
 802f244:	f891 b001 	ldrb.w	fp, [r1, #1]
 802f248:	1b1e      	subs	r6, r3, r4
 802f24a:	f891 9002 	ldrb.w	r9, [r1, #2]
 802f24e:	b2b6      	uxth	r6, r6
 802f250:	7809      	ldrb	r1, [r1, #0]
 802f252:	fb06 fb0b 	mul.w	fp, r6, fp
 802f256:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802f25a:	b292      	uxth	r2, r2
 802f25c:	fb06 f909 	mul.w	r9, r6, r9
 802f260:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f264:	fb06 f601 	mul.w	r6, r6, r1
 802f268:	1a9b      	subs	r3, r3, r2
 802f26a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802f26e:	b29b      	uxth	r3, r3
 802f270:	f89e e002 	ldrb.w	lr, [lr, #2]
 802f274:	fb03 bb01 	mla	fp, r3, r1, fp
 802f278:	9908      	ldr	r1, [sp, #32]
 802f27a:	fb03 990e 	mla	r9, r3, lr, r9
 802f27e:	5d49      	ldrb	r1, [r1, r5]
 802f280:	7885      	ldrb	r5, [r0, #2]
 802f282:	fb03 6301 	mla	r3, r3, r1, r6
 802f286:	f890 e001 	ldrb.w	lr, [r0, #1]
 802f28a:	fb02 9905 	mla	r9, r2, r5, r9
 802f28e:	7801      	ldrb	r1, [r0, #0]
 802f290:	fb02 bb0e 	mla	fp, r2, lr, fp
 802f294:	f89c 0002 	ldrb.w	r0, [ip, #2]
 802f298:	fb02 3301 	mla	r3, r2, r1, r3
 802f29c:	f89c e001 	ldrb.w	lr, [ip, #1]
 802f2a0:	fb04 9900 	mla	r9, r4, r0, r9
 802f2a4:	f89c 1000 	ldrb.w	r1, [ip]
 802f2a8:	fb04 bb0e 	mla	fp, r4, lr, fp
 802f2ac:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802f2ae:	f818 cc04 	ldrb.w	ip, [r8, #-4]
 802f2b2:	fb04 3301 	mla	r3, r4, r1, r3
 802f2b6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802f2b8:	f3c9 2907 	ubfx	r9, r9, #8, #8
 802f2bc:	fb19 f902 	smulbb	r9, r9, r2
 802f2c0:	fb1c fc01 	smulbb	ip, ip, r1
 802f2c4:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 802f2c8:	f818 5c02 	ldrb.w	r5, [r8, #-2]
 802f2cc:	fb1b fb02 	smulbb	fp, fp, r2
 802f2d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802f2d4:	f818 6c03 	ldrb.w	r6, [r8, #-3]
 802f2d8:	fb05 9901 	mla	r9, r5, r1, r9
 802f2dc:	fb03 c302 	mla	r3, r3, r2, ip
 802f2e0:	fb06 bb01 	mla	fp, r6, r1, fp
 802f2e4:	fa1f f989 	uxth.w	r9, r9
 802f2e8:	b29b      	uxth	r3, r3
 802f2ea:	f109 0101 	add.w	r1, r9, #1
 802f2ee:	1c5a      	adds	r2, r3, #1
 802f2f0:	fa1f fb8b 	uxth.w	fp, fp
 802f2f4:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802f2f8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802f2fc:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 802f2fe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802f300:	f10b 0001 	add.w	r0, fp, #1
 802f304:	3a01      	subs	r2, #1
 802f306:	eb00 2b1b 	add.w	fp, r0, fp, lsr #8
 802f30a:	448a      	add	sl, r1
 802f30c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 802f30e:	9209      	str	r2, [sp, #36]	@ 0x24
 802f310:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 802f314:	ea4f 2929 	mov.w	r9, r9, asr #8
 802f318:	121b      	asrs	r3, r3, #8
 802f31a:	3201      	adds	r2, #1
 802f31c:	f808 bc03 	strb.w	fp, [r8, #-3]
 802f320:	f808 9c02 	strb.w	r9, [r8, #-2]
 802f324:	f808 3c04 	strb.w	r3, [r8, #-4]
 802f328:	440f      	add	r7, r1
 802f32a:	f108 0804 	add.w	r8, r8, #4
 802f32e:	d025      	beq.n	802f37c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802f330:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802f332:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802f336:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f33a:	143c      	asrs	r4, r7, #16
 802f33c:	fb00 3404 	mla	r4, r0, r4, r3
 802f340:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802f342:	9e08      	ldr	r6, [sp, #32]
 802f344:	5d15      	ldrb	r5, [r2, r4]
 802f346:	f3ca 3303 	ubfx	r3, sl, #12, #4
 802f34a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802f34e:	4414      	add	r4, r2
 802f350:	eb06 0e05 	add.w	lr, r6, r5
 802f354:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802f358:	2b00      	cmp	r3, #0
 802f35a:	f47f af5c 	bne.w	802f216 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 802f35e:	b14a      	cbz	r2, 802f374 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 802f360:	5c20      	ldrb	r0, [r4, r0]
 802f362:	46f4      	mov	ip, lr
 802f364:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f368:	4430      	add	r0, r6
 802f36a:	4671      	mov	r1, lr
 802f36c:	e765      	b.n	802f23a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f36e:	46f4      	mov	ip, lr
 802f370:	4670      	mov	r0, lr
 802f372:	e762      	b.n	802f23a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f374:	46f4      	mov	ip, lr
 802f376:	4670      	mov	r0, lr
 802f378:	4671      	mov	r1, lr
 802f37a:	e75e      	b.n	802f23a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f37c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802f37e:	f8dd b040 	ldr.w	fp, [sp, #64]	@ 0x40
 802f382:	eb03 038b 	add.w	r3, r3, fp, lsl #2
 802f386:	930d      	str	r3, [sp, #52]	@ 0x34
 802f388:	e6de      	b.n	802f148 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f38a:	f1bb 0f00 	cmp.w	fp, #0
 802f38e:	f77f aedb 	ble.w	802f148 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f392:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
 802f396:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f39a:	1439      	asrs	r1, r7, #16
 802f39c:	4676      	mov	r6, lr
 802f39e:	f8dd b034 	ldr.w	fp, [sp, #52]	@ 0x34
 802f3a2:	f8dd 80b8 	ldr.w	r8, [sp, #184]	@ 0xb8
 802f3a6:	2b00      	cmp	r3, #0
 802f3a8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802f3ac:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802f3b0:	db29      	blt.n	802f406 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f3b2:	1e6c      	subs	r4, r5, #1
 802f3b4:	42a3      	cmp	r3, r4
 802f3b6:	da26      	bge.n	802f406 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f3b8:	2900      	cmp	r1, #0
 802f3ba:	db24      	blt.n	802f406 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f3bc:	1e74      	subs	r4, r6, #1
 802f3be:	42a1      	cmp	r1, r4
 802f3c0:	da21      	bge.n	802f406 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f3c2:	b22c      	sxth	r4, r5
 802f3c4:	fb01 3304 	mla	r3, r1, r4, r3
 802f3c8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802f3ca:	5ce9      	ldrb	r1, [r5, r3]
 802f3cc:	442b      	add	r3, r5
 802f3ce:	9d08      	ldr	r5, [sp, #32]
 802f3d0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f3d4:	9112      	str	r1, [sp, #72]	@ 0x48
 802f3d6:	eb05 0c01 	add.w	ip, r5, r1
 802f3da:	2800      	cmp	r0, #0
 802f3dc:	d04e      	beq.n	802f47c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 802f3de:	f893 e001 	ldrb.w	lr, [r3, #1]
 802f3e2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802f3e6:	44ae      	add	lr, r5
 802f3e8:	2a00      	cmp	r2, #0
 802f3ea:	f000 80c7 	beq.w	802f57c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 802f3ee:	1919      	adds	r1, r3, r4
 802f3f0:	7849      	ldrb	r1, [r1, #1]
 802f3f2:	5d1c      	ldrb	r4, [r3, r4]
 802f3f4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f3f8:	186b      	adds	r3, r5, r1
 802f3fa:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802f3fe:	930c      	str	r3, [sp, #48]	@ 0x30
 802f400:	1963      	adds	r3, r4, r5
 802f402:	9310      	str	r3, [sp, #64]	@ 0x40
 802f404:	e041      	b.n	802f48a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f406:	1c5c      	adds	r4, r3, #1
 802f408:	d405      	bmi.n	802f416 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f40a:	42ac      	cmp	r4, r5
 802f40c:	dc03      	bgt.n	802f416 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f40e:	1c4c      	adds	r4, r1, #1
 802f410:	d401      	bmi.n	802f416 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f412:	42b4      	cmp	r4, r6
 802f414:	dd21      	ble.n	802f45a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802f416:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802f418:	f1b9 0f00 	cmp.w	r9, #0
 802f41c:	449a      	add	sl, r3
 802f41e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802f420:	f10b 0b04 	add.w	fp, fp, #4
 802f424:	441f      	add	r7, r3
 802f426:	dd07      	ble.n	802f438 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802f428:	e9d8 5602 	ldrd	r5, r6, [r8, #8]
 802f42c:	f109 39ff 	add.w	r9, r9, #4294967295
 802f430:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f434:	1439      	asrs	r1, r7, #16
 802f436:	e7b6      	b.n	802f3a6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802f438:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802f43a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802f43c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802f440:	3301      	adds	r3, #1
 802f442:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802f446:	930d      	str	r3, [sp, #52]	@ 0x34
 802f448:	e67e      	b.n	802f148 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f44a:	920d      	str	r2, [sp, #52]	@ 0x34
 802f44c:	f10b 32ff 	add.w	r2, fp, #4294967295
 802f450:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802f454:	4691      	mov	r9, r2
 802f456:	9209      	str	r2, [sp, #36]	@ 0x24
 802f458:	e7a0      	b.n	802f39c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 802f45a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802f45c:	b236      	sxth	r6, r6
 802f45e:	b22d      	sxth	r5, r5
 802f460:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802f464:	e9cd 2405 	strd	r2, r4, [sp, #20]
 802f468:	9302      	str	r3, [sp, #8]
 802f46a:	e9cd 5600 	strd	r5, r6, [sp]
 802f46e:	9b08      	ldr	r3, [sp, #32]
 802f470:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802f472:	4659      	mov	r1, fp
 802f474:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802f476:	f7ff fcf3 	bl	802ee60 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>
 802f47a:	e7cc      	b.n	802f416 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f47c:	2a00      	cmp	r2, #0
 802f47e:	d173      	bne.n	802f568 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802f480:	46e6      	mov	lr, ip
 802f482:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f486:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802f48a:	b283      	uxth	r3, r0
 802f48c:	b292      	uxth	r2, r2
 802f48e:	fb03 f002 	mul.w	r0, r3, r2
 802f492:	011b      	lsls	r3, r3, #4
 802f494:	f89e 6001 	ldrb.w	r6, [lr, #1]
 802f498:	f89e 5002 	ldrb.w	r5, [lr, #2]
 802f49c:	1a19      	subs	r1, r3, r0
 802f49e:	b289      	uxth	r1, r1
 802f4a0:	f89e e000 	ldrb.w	lr, [lr]
 802f4a4:	fb01 f505 	mul.w	r5, r1, r5
 802f4a8:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802f4ac:	fb01 f606 	mul.w	r6, r1, r6
 802f4b0:	b292      	uxth	r2, r2
 802f4b2:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f4b6:	fb01 f40e 	mul.w	r4, r1, lr
 802f4ba:	1a9b      	subs	r3, r3, r2
 802f4bc:	f89c 1001 	ldrb.w	r1, [ip, #1]
 802f4c0:	f89c e002 	ldrb.w	lr, [ip, #2]
 802f4c4:	b29b      	uxth	r3, r3
 802f4c6:	fb03 6601 	mla	r6, r3, r1, r6
 802f4ca:	fb03 5e0e 	mla	lr, r3, lr, r5
 802f4ce:	9908      	ldr	r1, [sp, #32]
 802f4d0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802f4d2:	5d49      	ldrb	r1, [r1, r5]
 802f4d4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802f4d6:	fb03 4301 	mla	r3, r3, r1, r4
 802f4da:	f895 c001 	ldrb.w	ip, [r5, #1]
 802f4de:	78ad      	ldrb	r5, [r5, #2]
 802f4e0:	fb02 6c0c 	mla	ip, r2, ip, r6
 802f4e4:	fb02 e505 	mla	r5, r2, r5, lr
 802f4e8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802f4ea:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802f4ec:	784e      	ldrb	r6, [r1, #1]
 802f4ee:	7824      	ldrb	r4, [r4, #0]
 802f4f0:	7889      	ldrb	r1, [r1, #2]
 802f4f2:	fb02 3204 	mla	r2, r2, r4, r3
 802f4f6:	fb00 cc06 	mla	ip, r0, r6, ip
 802f4fa:	fb00 5501 	mla	r5, r0, r1, r5
 802f4fe:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802f500:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802f502:	780b      	ldrb	r3, [r1, #0]
 802f504:	f89b 4000 	ldrb.w	r4, [fp]
 802f508:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 802f50c:	fb00 2003 	mla	r0, r0, r3, r2
 802f510:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802f514:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802f518:	fb15 f501 	smulbb	r5, r5, r1
 802f51c:	fb14 f406 	smulbb	r4, r4, r6
 802f520:	fb1c fc01 	smulbb	ip, ip, r1
 802f524:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802f528:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802f52c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802f530:	fb00 4001 	mla	r0, r0, r1, r4
 802f534:	fb03 5306 	mla	r3, r3, r6, r5
 802f538:	fb02 c106 	mla	r1, r2, r6, ip
 802f53c:	b29b      	uxth	r3, r3
 802f53e:	b280      	uxth	r0, r0
 802f540:	b289      	uxth	r1, r1
 802f542:	1c5a      	adds	r2, r3, #1
 802f544:	1c4d      	adds	r5, r1, #1
 802f546:	1c44      	adds	r4, r0, #1
 802f548:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802f54c:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802f550:	eb04 2310 	add.w	r3, r4, r0, lsr #8
 802f554:	1209      	asrs	r1, r1, #8
 802f556:	1212      	asrs	r2, r2, #8
 802f558:	121b      	asrs	r3, r3, #8
 802f55a:	f88b 1001 	strb.w	r1, [fp, #1]
 802f55e:	f88b 2002 	strb.w	r2, [fp, #2]
 802f562:	f88b 3000 	strb.w	r3, [fp]
 802f566:	e756      	b.n	802f416 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f568:	5d1c      	ldrb	r4, [r3, r4]
 802f56a:	9b08      	ldr	r3, [sp, #32]
 802f56c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802f570:	18e3      	adds	r3, r4, r3
 802f572:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f576:	9310      	str	r3, [sp, #64]	@ 0x40
 802f578:	46e6      	mov	lr, ip
 802f57a:	e786      	b.n	802f48a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f57c:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f580:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802f584:	e781      	b.n	802f48a <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f586:	f43f addf 	beq.w	802f148 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f58a:	1e44      	subs	r4, r0, #1
 802f58c:	e621      	b.n	802f1d2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 802f58e:	bf00      	nop

0802f590 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>:
 802f590:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f594:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802f598:	e9dd 640c 	ldrd	r6, r4, [sp, #48]	@ 0x30
 802f59c:	fb04 6e0c 	mla	lr, r4, ip, r6
 802f5a0:	2c00      	cmp	r4, #0
 802f5a2:	461f      	mov	r7, r3
 802f5a4:	eb02 0a0e 	add.w	sl, r2, lr
 802f5a8:	f104 0801 	add.w	r8, r4, #1
 802f5ac:	f9bd 902c 	ldrsh.w	r9, [sp, #44]	@ 0x2c
 802f5b0:	f89d 5038 	ldrb.w	r5, [sp, #56]	@ 0x38
 802f5b4:	f89d 003c 	ldrb.w	r0, [sp, #60]	@ 0x3c
 802f5b8:	db01      	blt.n	802f5be <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x2e>
 802f5ba:	45a1      	cmp	r9, r4
 802f5bc:	dc6f      	bgt.n	802f69e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x10e>
 802f5be:	f891 b000 	ldrb.w	fp, [r1]
 802f5c2:	460b      	mov	r3, r1
 802f5c4:	465c      	mov	r4, fp
 802f5c6:	468e      	mov	lr, r1
 802f5c8:	f1b8 0f00 	cmp.w	r8, #0
 802f5cc:	db01      	blt.n	802f5d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x42>
 802f5ce:	45c1      	cmp	r9, r8
 802f5d0:	dc4a      	bgt.n	802f668 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xd8>
 802f5d2:	f891 9000 	ldrb.w	r9, [r1]
 802f5d6:	460f      	mov	r7, r1
 802f5d8:	46ca      	mov	sl, r9
 802f5da:	4688      	mov	r8, r1
 802f5dc:	2d0f      	cmp	r5, #15
 802f5de:	f200 8097 	bhi.w	802f710 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f5e2:	280f      	cmp	r0, #15
 802f5e4:	f200 8094 	bhi.w	802f710 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f5e8:	b2aa      	uxth	r2, r5
 802f5ea:	b280      	uxth	r0, r0
 802f5ec:	fb02 f600 	mul.w	r6, r2, r0
 802f5f0:	0112      	lsls	r2, r2, #4
 802f5f2:	1b95      	subs	r5, r2, r6
 802f5f4:	f893 c001 	ldrb.w	ip, [r3, #1]
 802f5f8:	789b      	ldrb	r3, [r3, #2]
 802f5fa:	b2ad      	uxth	r5, r5
 802f5fc:	ebc6 1000 	rsb	r0, r6, r0, lsl #4
 802f600:	fb05 f404 	mul.w	r4, r5, r4
 802f604:	fb05 fc0c 	mul.w	ip, r5, ip
 802f608:	fb05 f503 	mul.w	r5, r5, r3
 802f60c:	b280      	uxth	r0, r0
 802f60e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802f612:	f89e 3001 	ldrb.w	r3, [lr, #1]
 802f616:	1a12      	subs	r2, r2, r0
 802f618:	f89e e002 	ldrb.w	lr, [lr, #2]
 802f61c:	b292      	uxth	r2, r2
 802f61e:	fb02 cc03 	mla	ip, r2, r3, ip
 802f622:	fb02 440b 	mla	r4, r2, fp, r4
 802f626:	fb02 520e 	mla	r2, r2, lr, r5
 802f62a:	f898 3001 	ldrb.w	r3, [r8, #1]
 802f62e:	f898 8002 	ldrb.w	r8, [r8, #2]
 802f632:	fb00 cc03 	mla	ip, r0, r3, ip
 802f636:	fb00 4909 	mla	r9, r0, r9, r4
 802f63a:	fb00 2008 	mla	r0, r0, r8, r2
 802f63e:	787b      	ldrb	r3, [r7, #1]
 802f640:	78ba      	ldrb	r2, [r7, #2]
 802f642:	fb06 9a0a 	mla	sl, r6, sl, r9
 802f646:	fb06 c303 	mla	r3, r6, r3, ip
 802f64a:	fb06 0602 	mla	r6, r6, r2, r0
 802f64e:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 802f652:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802f656:	0236      	lsls	r6, r6, #8
 802f658:	ea43 030a 	orr.w	r3, r3, sl
 802f65c:	f406 067f 	and.w	r6, r6, #16711680	@ 0xff0000
 802f660:	4333      	orrs	r3, r6
 802f662:	600b      	str	r3, [r1, #0]
 802f664:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f668:	b378      	cbz	r0, 802f6ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x13a>
 802f66a:	2e00      	cmp	r6, #0
 802f66c:	db3f      	blt.n	802f6ee <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x15e>
 802f66e:	45b4      	cmp	ip, r6
 802f670:	dd3d      	ble.n	802f6ee <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x15e>
 802f672:	f81a 800c 	ldrb.w	r8, [sl, ip]
 802f676:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802f67a:	44b8      	add	r8, r7
 802f67c:	3601      	adds	r6, #1
 802f67e:	f898 9000 	ldrb.w	r9, [r8]
 802f682:	d430      	bmi.n	802f6e6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x156>
 802f684:	45b4      	cmp	ip, r6
 802f686:	dd2e      	ble.n	802f6e6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x156>
 802f688:	2d00      	cmp	r5, #0
 802f68a:	d03d      	beq.n	802f708 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x178>
 802f68c:	44d4      	add	ip, sl
 802f68e:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802f692:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802f696:	f817 a002 	ldrb.w	sl, [r7, r2]
 802f69a:	4417      	add	r7, r2
 802f69c:	e79e      	b.n	802f5dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x4c>
 802f69e:	2e00      	cmp	r6, #0
 802f6a0:	db01      	blt.n	802f6a6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x116>
 802f6a2:	45b4      	cmp	ip, r6
 802f6a4:	dc19      	bgt.n	802f6da <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x14a>
 802f6a6:	468e      	mov	lr, r1
 802f6a8:	1c73      	adds	r3, r6, #1
 802f6aa:	f89e b000 	ldrb.w	fp, [lr]
 802f6ae:	d409      	bmi.n	802f6c4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x134>
 802f6b0:	459c      	cmp	ip, r3
 802f6b2:	dd07      	ble.n	802f6c4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x134>
 802f6b4:	b1ed      	cbz	r5, 802f6f2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x162>
 802f6b6:	f89a 3001 	ldrb.w	r3, [sl, #1]
 802f6ba:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802f6be:	5cfc      	ldrb	r4, [r7, r3]
 802f6c0:	443b      	add	r3, r7
 802f6c2:	e781      	b.n	802f5c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x38>
 802f6c4:	780c      	ldrb	r4, [r1, #0]
 802f6c6:	460b      	mov	r3, r1
 802f6c8:	e77e      	b.n	802f5c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x38>
 802f6ca:	2d0f      	cmp	r5, #15
 802f6cc:	f891 9000 	ldrb.w	r9, [r1]
 802f6d0:	d81e      	bhi.n	802f710 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f6d2:	460f      	mov	r7, r1
 802f6d4:	4688      	mov	r8, r1
 802f6d6:	46ca      	mov	sl, r9
 802f6d8:	e786      	b.n	802f5e8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x58>
 802f6da:	f812 e00e 	ldrb.w	lr, [r2, lr]
 802f6de:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802f6e2:	449e      	add	lr, r3
 802f6e4:	e7e0      	b.n	802f6a8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x118>
 802f6e6:	f891 a000 	ldrb.w	sl, [r1]
 802f6ea:	460f      	mov	r7, r1
 802f6ec:	e776      	b.n	802f5dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x4c>
 802f6ee:	4688      	mov	r8, r1
 802f6f0:	e7c4      	b.n	802f67c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xec>
 802f6f2:	f1b8 0f00 	cmp.w	r8, #0
 802f6f6:	780c      	ldrb	r4, [r1, #0]
 802f6f8:	460b      	mov	r3, r1
 802f6fa:	f6bf af68 	bge.w	802f5ce <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x3e>
 802f6fe:	460f      	mov	r7, r1
 802f700:	4688      	mov	r8, r1
 802f702:	46a2      	mov	sl, r4
 802f704:	46a1      	mov	r9, r4
 802f706:	e76c      	b.n	802f5e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x52>
 802f708:	f891 a000 	ldrb.w	sl, [r1]
 802f70c:	460f      	mov	r7, r1
 802f70e:	e768      	b.n	802f5e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x52>
 802f710:	4b03      	ldr	r3, [pc, #12]	@ (802f720 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x190>)
 802f712:	4a04      	ldr	r2, [pc, #16]	@ (802f724 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x194>)
 802f714:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802f718:	4803      	ldr	r0, [pc, #12]	@ (802f728 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x198>)
 802f71a:	f002 feb5 	bl	8032488 <__assert_func>
 802f71e:	bf00      	nop
 802f720:	0803663c 	.word	0x0803663c
 802f724:	08036cb8 	.word	0x08036cb8
 802f728:	080367c4 	.word	0x080367c4

0802f72c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802f72c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f730:	ed2d 8b0a 	vpush	{d8-d12}
 802f734:	eeb0 aa40 	vmov.f32	s20, s0
 802f738:	eef0 9a60 	vmov.f32	s19, s1
 802f73c:	eeb0 9a41 	vmov.f32	s18, s2
 802f740:	eef0 8a62 	vmov.f32	s17, s5
 802f744:	eeb0 8a43 	vmov.f32	s16, s6
 802f748:	eeb0 ca44 	vmov.f32	s24, s8
 802f74c:	eef0 ba64 	vmov.f32	s23, s9
 802f750:	eeb0 ba45 	vmov.f32	s22, s10
 802f754:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802f758:	b091      	sub	sp, #68	@ 0x44
 802f75a:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802f75e:	e9dd 9525 	ldrd	r9, r5, [sp, #148]	@ 0x94
 802f762:	900f      	str	r0, [sp, #60]	@ 0x3c
 802f764:	4698      	mov	r8, r3
 802f766:	e9dd 0229 	ldrd	r0, r2, [sp, #164]	@ 0xa4
 802f76a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802f76c:	6841      	ldr	r1, [r0, #4]
 802f76e:	fb01 2303 	mla	r3, r1, r3, r2
 802f772:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 802f774:	6801      	ldr	r1, [r0, #0]
 802f776:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 802f778:	6852      	ldr	r2, [r2, #4]
 802f77a:	6800      	ldr	r0, [r0, #0]
 802f77c:	eb01 0a83 	add.w	sl, r1, r3, lsl #2
 802f780:	1d13      	adds	r3, r2, #4
 802f782:	9009      	str	r0, [sp, #36]	@ 0x24
 802f784:	930c      	str	r3, [sp, #48]	@ 0x30
 802f786:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802f788:	2b00      	cmp	r3, #0
 802f78a:	dc02      	bgt.n	802f792 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802f78c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802f78e:	2b00      	cmp	r3, #0
 802f790:	dd66      	ble.n	802f860 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802f792:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802f794:	f1b8 0f00 	cmp.w	r8, #0
 802f798:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802f79c:	b221      	sxth	r1, r4
 802f79e:	fa0f f78e 	sxth.w	r7, lr
 802f7a2:	f340 81df 	ble.w	802fb64 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 802f7a6:	1e4e      	subs	r6, r1, #1
 802f7a8:	f107 3cff 	add.w	ip, r7, #4294967295
 802f7ac:	f8cd e01c 	str.w	lr, [sp, #28]
 802f7b0:	e9dd eb27 	ldrd	lr, fp, [sp, #156]	@ 0x9c
 802f7b4:	ea5f 4329 	movs.w	r3, r9, asr #16
 802f7b8:	ea4f 4025 	mov.w	r0, r5, asr #16
 802f7bc:	d405      	bmi.n	802f7ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802f7be:	42b3      	cmp	r3, r6
 802f7c0:	da03      	bge.n	802f7ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802f7c2:	2800      	cmp	r0, #0
 802f7c4:	db01      	blt.n	802f7ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802f7c6:	4560      	cmp	r0, ip
 802f7c8:	db4f      	blt.n	802f86a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802f7ca:	1c5a      	adds	r2, r3, #1
 802f7cc:	d406      	bmi.n	802f7dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802f7ce:	428a      	cmp	r2, r1
 802f7d0:	dc04      	bgt.n	802f7dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802f7d2:	1c42      	adds	r2, r0, #1
 802f7d4:	d402      	bmi.n	802f7dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802f7d6:	42ba      	cmp	r2, r7
 802f7d8:	f340 8157 	ble.w	802fa8a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802f7dc:	f1b8 0801 	subs.w	r8, r8, #1
 802f7e0:	44f1      	add	r9, lr
 802f7e2:	445d      	add	r5, fp
 802f7e4:	f10a 0a04 	add.w	sl, sl, #4
 802f7e8:	d1e4      	bne.n	802f7b4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802f7ea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802f7ec:	2b00      	cmp	r3, #0
 802f7ee:	dd37      	ble.n	802f860 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802f7f0:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802f7f4:	ee79 9aab 	vadd.f32	s19, s19, s23
 802f7f8:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802f7fc:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802f800:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802f804:	ee69 7a27 	vmul.f32	s15, s18, s15
 802f808:	ee76 6a68 	vsub.f32	s13, s12, s17
 802f80c:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802f810:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802f814:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f818:	ee16 2a90 	vmov	r2, s13
 802f81c:	3b01      	subs	r3, #1
 802f81e:	930a      	str	r3, [sp, #40]	@ 0x28
 802f820:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802f822:	fb92 f3f3 	sdiv	r3, r2, r3
 802f826:	ee17 2a10 	vmov	r2, s14
 802f82a:	eeb0 7a48 	vmov.f32	s14, s16
 802f82e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f832:	ee17 5a10 	vmov	r5, s14
 802f836:	eeb0 7a68 	vmov.f32	s14, s17
 802f83a:	9327      	str	r3, [sp, #156]	@ 0x9c
 802f83c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802f83e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f842:	fb92 f3f3 	sdiv	r3, r2, r3
 802f846:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802f848:	9328      	str	r3, [sp, #160]	@ 0xa0
 802f84a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802f84c:	ee17 9a10 	vmov	r9, s14
 802f850:	eeb0 8a67 	vmov.f32	s16, s15
 802f854:	eef0 8a46 	vmov.f32	s17, s12
 802f858:	bf14      	ite	ne
 802f85a:	4698      	movne	r8, r3
 802f85c:	4690      	moveq	r8, r2
 802f85e:	e792      	b.n	802f786 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 802f860:	b011      	add	sp, #68	@ 0x44
 802f862:	ecbd 8b0a 	vpop	{d8-d12}
 802f866:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f86a:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802f86e:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 802f870:	f108 32ff 	add.w	r2, r8, #4294967295
 802f874:	fb00 9302 	mla	r3, r0, r2, r9
 802f878:	141b      	asrs	r3, r3, #16
 802f87a:	9207      	str	r2, [sp, #28]
 802f87c:	f100 80a6 	bmi.w	802f9cc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f880:	42b3      	cmp	r3, r6
 802f882:	f280 80a3 	bge.w	802f9cc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f886:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802f888:	fb03 5302 	mla	r3, r3, r2, r5
 802f88c:	141b      	asrs	r3, r3, #16
 802f88e:	f100 809d 	bmi.w	802f9cc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f892:	3f01      	subs	r7, #1
 802f894:	42bb      	cmp	r3, r7
 802f896:	f280 8099 	bge.w	802f9cc <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f89a:	f1b8 0f00 	cmp.w	r8, #0
 802f89e:	dda4      	ble.n	802f7ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802f8a0:	f8cd a020 	str.w	sl, [sp, #32]
 802f8a4:	f8cd a034 	str.w	sl, [sp, #52]	@ 0x34
 802f8a8:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 802f8ac:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802f8b0:	e065      	b.n	802f97e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802f8b2:	f890 c001 	ldrb.w	ip, [r0, #1]
 802f8b6:	1844      	adds	r4, r0, r1
 802f8b8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802f8bc:	44d4      	add	ip, sl
 802f8be:	2a00      	cmp	r2, #0
 802f8c0:	d078      	beq.n	802f9b4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802f8c2:	5c40      	ldrb	r0, [r0, r1]
 802f8c4:	7866      	ldrb	r6, [r4, #1]
 802f8c6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f8ca:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802f8ce:	4450      	add	r0, sl
 802f8d0:	4456      	add	r6, sl
 802f8d2:	b29b      	uxth	r3, r3
 802f8d4:	b292      	uxth	r2, r2
 802f8d6:	fb03 f402 	mul.w	r4, r3, r2
 802f8da:	011b      	lsls	r3, r3, #4
 802f8dc:	f89c 8000 	ldrb.w	r8, [ip]
 802f8e0:	f89c e001 	ldrb.w	lr, [ip, #1]
 802f8e4:	1b19      	subs	r1, r3, r4
 802f8e6:	f89c c002 	ldrb.w	ip, [ip, #2]
 802f8ea:	b289      	uxth	r1, r1
 802f8ec:	fb01 fe0e 	mul.w	lr, r1, lr
 802f8f0:	fb01 f808 	mul.w	r8, r1, r8
 802f8f4:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802f8f8:	fb01 f10c 	mul.w	r1, r1, ip
 802f8fc:	b292      	uxth	r2, r2
 802f8fe:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f902:	f81a b00b 	ldrb.w	fp, [sl, fp]
 802f906:	f897 c001 	ldrb.w	ip, [r7, #1]
 802f90a:	1a9b      	subs	r3, r3, r2
 802f90c:	78bf      	ldrb	r7, [r7, #2]
 802f90e:	b29b      	uxth	r3, r3
 802f910:	fb03 880b 	mla	r8, r3, fp, r8
 802f914:	fb03 ec0c 	mla	ip, r3, ip, lr
 802f918:	fb03 1307 	mla	r3, r3, r7, r1
 802f91c:	7881      	ldrb	r1, [r0, #2]
 802f91e:	f890 b000 	ldrb.w	fp, [r0]
 802f922:	fb02 3301 	mla	r3, r2, r1, r3
 802f926:	f890 e001 	ldrb.w	lr, [r0, #1]
 802f92a:	78b1      	ldrb	r1, [r6, #2]
 802f92c:	fb02 880b 	mla	r8, r2, fp, r8
 802f930:	fb02 cc0e 	mla	ip, r2, lr, ip
 802f934:	fb04 3301 	mla	r3, r4, r1, r3
 802f938:	f896 b000 	ldrb.w	fp, [r6]
 802f93c:	f896 e001 	ldrb.w	lr, [r6, #1]
 802f940:	0219      	lsls	r1, r3, #8
 802f942:	fb04 880b 	mla	r8, r4, fp, r8
 802f946:	fb04 cc0e 	mla	ip, r4, lr, ip
 802f94a:	f401 037f 	and.w	r3, r1, #16711680	@ 0xff0000
 802f94e:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 802f950:	9a07      	ldr	r2, [sp, #28]
 802f952:	4489      	add	r9, r1
 802f954:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802f956:	f3c8 2807 	ubfx	r8, r8, #8, #8
 802f95a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802f95e:	ea48 080c 	orr.w	r8, r8, ip
 802f962:	440d      	add	r5, r1
 802f964:	9908      	ldr	r1, [sp, #32]
 802f966:	3a01      	subs	r2, #1
 802f968:	ea48 0303 	orr.w	r3, r8, r3
 802f96c:	9207      	str	r2, [sp, #28]
 802f96e:	f841 3b04 	str.w	r3, [r1], #4
 802f972:	3201      	adds	r2, #1
 802f974:	9108      	str	r1, [sp, #32]
 802f976:	d024      	beq.n	802f9c2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802f978:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802f97a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802f97e:	ea4f 4329 	mov.w	r3, r9, asr #16
 802f982:	1428      	asrs	r0, r5, #16
 802f984:	fb01 3000 	mla	r0, r1, r0, r3
 802f988:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802f98a:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802f98e:	f812 b000 	ldrb.w	fp, [r2, r0]
 802f992:	4410      	add	r0, r2
 802f994:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802f998:	eb0a 070b 	add.w	r7, sl, fp
 802f99c:	f3c5 3203 	ubfx	r2, r5, #12, #4
 802f9a0:	2b00      	cmp	r3, #0
 802f9a2:	d186      	bne.n	802f8b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802f9a4:	b14a      	cbz	r2, 802f9ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 802f9a6:	5c40      	ldrb	r0, [r0, r1]
 802f9a8:	463e      	mov	r6, r7
 802f9aa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f9ae:	4450      	add	r0, sl
 802f9b0:	46bc      	mov	ip, r7
 802f9b2:	e78e      	b.n	802f8d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802f9b4:	463e      	mov	r6, r7
 802f9b6:	4638      	mov	r0, r7
 802f9b8:	e78b      	b.n	802f8d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802f9ba:	463e      	mov	r6, r7
 802f9bc:	4638      	mov	r0, r7
 802f9be:	46bc      	mov	ip, r7
 802f9c0:	e787      	b.n	802f8d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802f9c2:	e9dd a80d 	ldrd	sl, r8, [sp, #52]	@ 0x34
 802f9c6:	eb0a 0a88 	add.w	sl, sl, r8, lsl #2
 802f9ca:	e70e      	b.n	802f7ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802f9cc:	f1b8 0f00 	cmp.w	r8, #0
 802f9d0:	f77f af0b 	ble.w	802f7ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802f9d4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802f9d8:	ea4f 4329 	mov.w	r3, r9, asr #16
 802f9dc:	1428      	asrs	r0, r5, #16
 802f9de:	4677      	mov	r7, lr
 802f9e0:	46d0      	mov	r8, sl
 802f9e2:	f8cd a020 	str.w	sl, [sp, #32]
 802f9e6:	f8dd a0b0 	ldr.w	sl, [sp, #176]	@ 0xb0
 802f9ea:	2b00      	cmp	r3, #0
 802f9ec:	f3c9 3103 	ubfx	r1, r9, #12, #4
 802f9f0:	f3c5 3203 	ubfx	r2, r5, #12, #4
 802f9f4:	db28      	blt.n	802fa48 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802f9f6:	1e66      	subs	r6, r4, #1
 802f9f8:	42b3      	cmp	r3, r6
 802f9fa:	da25      	bge.n	802fa48 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802f9fc:	2800      	cmp	r0, #0
 802f9fe:	db23      	blt.n	802fa48 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa00:	1e7e      	subs	r6, r7, #1
 802fa02:	42b0      	cmp	r0, r6
 802fa04:	da20      	bge.n	802fa48 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa06:	b224      	sxth	r4, r4
 802fa08:	fb00 3304 	mla	r3, r0, r4, r3
 802fa0c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802fa0e:	5cc7      	ldrb	r7, [r0, r3]
 802fa10:	4403      	add	r3, r0
 802fa12:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802fa14:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802fa18:	eb00 0c07 	add.w	ip, r0, r7
 802fa1c:	2900      	cmp	r1, #0
 802fa1e:	d04a      	beq.n	802fab6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802fa20:	785e      	ldrb	r6, [r3, #1]
 802fa22:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802fa26:	4406      	add	r6, r0
 802fa28:	2a00      	cmp	r2, #0
 802fa2a:	f000 8098 	beq.w	802fb5e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802fa2e:	1918      	adds	r0, r3, r4
 802fa30:	7840      	ldrb	r0, [r0, #1]
 802fa32:	5d1c      	ldrb	r4, [r3, r4]
 802fa34:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802fa36:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802fa3a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802fa3e:	1818      	adds	r0, r3, r0
 802fa40:	18e3      	adds	r3, r4, r3
 802fa42:	900d      	str	r0, [sp, #52]	@ 0x34
 802fa44:	930e      	str	r3, [sp, #56]	@ 0x38
 802fa46:	e03b      	b.n	802fac0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fa48:	1c5e      	adds	r6, r3, #1
 802fa4a:	d405      	bmi.n	802fa58 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fa4c:	42a6      	cmp	r6, r4
 802fa4e:	dc03      	bgt.n	802fa58 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fa50:	1c46      	adds	r6, r0, #1
 802fa52:	d401      	bmi.n	802fa58 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fa54:	42be      	cmp	r6, r7
 802fa56:	dd1f      	ble.n	802fa98 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802fa58:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802fa5a:	f1bb 0f00 	cmp.w	fp, #0
 802fa5e:	4499      	add	r9, r3
 802fa60:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802fa62:	f108 0804 	add.w	r8, r8, #4
 802fa66:	441d      	add	r5, r3
 802fa68:	dd07      	ble.n	802fa7a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 802fa6a:	e9da 4702 	ldrd	r4, r7, [sl, #8]
 802fa6e:	f10b 3bff 	add.w	fp, fp, #4294967295
 802fa72:	ea4f 4329 	mov.w	r3, r9, asr #16
 802fa76:	1428      	asrs	r0, r5, #16
 802fa78:	e7b7      	b.n	802f9ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802fa7a:	e9dd 3a07 	ldrd	r3, sl, [sp, #28]
 802fa7e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802fa82:	3301      	adds	r3, #1
 802fa84:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 802fa88:	e6af      	b.n	802f7ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fa8a:	f108 32ff 	add.w	r2, r8, #4294967295
 802fa8e:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802fa92:	4693      	mov	fp, r2
 802fa94:	9207      	str	r2, [sp, #28]
 802fa96:	e7a2      	b.n	802f9de <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802fa98:	b23f      	sxth	r7, r7
 802fa9a:	b224      	sxth	r4, r4
 802fa9c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 802faa0:	e9cd 3002 	strd	r3, r0, [sp, #8]
 802faa4:	e9cd 4700 	strd	r4, r7, [sp]
 802faa8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802faaa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802faac:	4641      	mov	r1, r8
 802faae:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802fab0:	f7ff fd6e 	bl	802f590 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>
 802fab4:	e7d0      	b.n	802fa58 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fab6:	2a00      	cmp	r2, #0
 802fab8:	d147      	bne.n	802fb4a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 802faba:	4666      	mov	r6, ip
 802fabc:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 802fac0:	b28b      	uxth	r3, r1
 802fac2:	b292      	uxth	r2, r2
 802fac4:	fb03 f002 	mul.w	r0, r3, r2
 802fac8:	011b      	lsls	r3, r3, #4
 802faca:	f896 e000 	ldrb.w	lr, [r6]
 802face:	7874      	ldrb	r4, [r6, #1]
 802fad0:	1a19      	subs	r1, r3, r0
 802fad2:	78b6      	ldrb	r6, [r6, #2]
 802fad4:	b289      	uxth	r1, r1
 802fad6:	fb01 f404 	mul.w	r4, r1, r4
 802fada:	fb01 fe0e 	mul.w	lr, r1, lr
 802fade:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802fae2:	fb01 f106 	mul.w	r1, r1, r6
 802fae6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802fae8:	b292      	uxth	r2, r2
 802faea:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802faee:	5df7      	ldrb	r7, [r6, r7]
 802faf0:	1a9b      	subs	r3, r3, r2
 802faf2:	f89c 6001 	ldrb.w	r6, [ip, #1]
 802faf6:	f89c c002 	ldrb.w	ip, [ip, #2]
 802fafa:	b29b      	uxth	r3, r3
 802fafc:	fb03 4606 	mla	r6, r3, r6, r4
 802fb00:	fb03 e707 	mla	r7, r3, r7, lr
 802fb04:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802fb06:	fb03 130c 	mla	r3, r3, ip, r1
 802fb0a:	7861      	ldrb	r1, [r4, #1]
 802fb0c:	f894 c000 	ldrb.w	ip, [r4]
 802fb10:	78a4      	ldrb	r4, [r4, #2]
 802fb12:	fb02 6601 	mla	r6, r2, r1, r6
 802fb16:	fb02 770c 	mla	r7, r2, ip, r7
 802fb1a:	fb02 3104 	mla	r1, r2, r4, r3
 802fb1e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802fb20:	7862      	ldrb	r2, [r4, #1]
 802fb22:	7823      	ldrb	r3, [r4, #0]
 802fb24:	78a4      	ldrb	r4, [r4, #2]
 802fb26:	fb00 6602 	mla	r6, r0, r2, r6
 802fb2a:	fb00 7303 	mla	r3, r0, r3, r7
 802fb2e:	fb00 1204 	mla	r2, r0, r4, r1
 802fb32:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802fb36:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802fb3a:	0212      	lsls	r2, r2, #8
 802fb3c:	4333      	orrs	r3, r6
 802fb3e:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 802fb42:	4313      	orrs	r3, r2
 802fb44:	f8c8 3000 	str.w	r3, [r8]
 802fb48:	e786      	b.n	802fa58 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fb4a:	5d1c      	ldrb	r4, [r3, r4]
 802fb4c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802fb4e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802fb52:	18e3      	adds	r3, r4, r3
 802fb54:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 802fb58:	930e      	str	r3, [sp, #56]	@ 0x38
 802fb5a:	4666      	mov	r6, ip
 802fb5c:	e7b0      	b.n	802fac0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fb5e:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 802fb62:	e7ad      	b.n	802fac0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fb64:	f43f ae41 	beq.w	802f7ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fb68:	1e4e      	subs	r6, r1, #1
 802fb6a:	e680      	b.n	802f86e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>

0802fb6c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>:
 802fb6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802fb70:	b087      	sub	sp, #28
 802fb72:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 802fb76:	e9dd 0412 	ldrd	r0, r4, [sp, #72]	@ 0x48
 802fb7a:	fb04 070c 	mla	r7, r4, ip, r0
 802fb7e:	9100      	str	r1, [sp, #0]
 802fb80:	f89d 1058 	ldrb.w	r1, [sp, #88]	@ 0x58
 802fb84:	2c00      	cmp	r4, #0
 802fb86:	eb02 0b07 	add.w	fp, r2, r7
 802fb8a:	f104 0501 	add.w	r5, r4, #1
 802fb8e:	f9bd 8044 	ldrsh.w	r8, [sp, #68]	@ 0x44
 802fb92:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 802fb96:	f89d 6054 	ldrb.w	r6, [sp, #84]	@ 0x54
 802fb9a:	9101      	str	r1, [sp, #4]
 802fb9c:	db02      	blt.n	802fba4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x38>
 802fb9e:	45a0      	cmp	r8, r4
 802fba0:	f300 811a 	bgt.w	802fdd8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x26c>
 802fba4:	2700      	movs	r7, #0
 802fba6:	46be      	mov	lr, r7
 802fba8:	46b9      	mov	r9, r7
 802fbaa:	463c      	mov	r4, r7
 802fbac:	2d00      	cmp	r5, #0
 802fbae:	db02      	blt.n	802fbb6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x4a>
 802fbb0:	45a8      	cmp	r8, r5
 802fbb2:	f300 812b 	bgt.w	802fe0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2a0>
 802fbb6:	f04f 0c00 	mov.w	ip, #0
 802fbba:	46e0      	mov	r8, ip
 802fbbc:	4665      	mov	r5, ip
 802fbbe:	f8cd c010 	str.w	ip, [sp, #16]
 802fbc2:	f1ba 0f0f 	cmp.w	sl, #15
 802fbc6:	f200 8167 	bhi.w	802fe98 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802fbca:	2e0f      	cmp	r6, #15
 802fbcc:	f200 8164 	bhi.w	802fe98 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802fbd0:	b2b2      	uxth	r2, r6
 802fbd2:	fa1f f38a 	uxth.w	r3, sl
 802fbd6:	fb02 f603 	mul.w	r6, r2, r3
 802fbda:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802fbde:	b292      	uxth	r2, r2
 802fbe0:	fb02 fa08 	mul.w	sl, r2, r8
 802fbe4:	fb06 fb0c 	mul.w	fp, r6, ip
 802fbe8:	011b      	lsls	r3, r3, #4
 802fbea:	1b98      	subs	r0, r3, r6
 802fbec:	b280      	uxth	r0, r0
 802fbee:	9002      	str	r0, [sp, #8]
 802fbf0:	fb00 f007 	mul.w	r0, r0, r7
 802fbf4:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802fbf8:	1a9b      	subs	r3, r3, r2
 802fbfa:	b29b      	uxth	r3, r3
 802fbfc:	fb03 000e 	mla	r0, r3, lr, r0
 802fc00:	4450      	add	r0, sl
 802fc02:	4458      	add	r0, fp
 802fc04:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802fc08:	9003      	str	r0, [sp, #12]
 802fc0a:	2800      	cmp	r0, #0
 802fc0c:	f000 80e1 	beq.w	802fdd2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x266>
 802fc10:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802fc14:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802fc18:	f009 1bff 	and.w	fp, r9, #16711935	@ 0xff00ff
 802fc1c:	9105      	str	r1, [sp, #20]
 802fc1e:	d01d      	beq.n	802fc5c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0xf0>
 802fc20:	fb0b fb0e 	mul.w	fp, fp, lr
 802fc24:	fb01 fe0e 	mul.w	lr, r1, lr
 802fc28:	ea4f 2a1b 	mov.w	sl, fp, lsr #8
 802fc2c:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802fc30:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802fc34:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802fc38:	44d3      	add	fp, sl
 802fc3a:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802fc3e:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802fc42:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802fc46:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802fc4a:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802fc4e:	ea4b 0e0e 	orr.w	lr, fp, lr
 802fc52:	f40e 417f 	and.w	r1, lr, #65280	@ 0xff00
 802fc56:	f00e 1bff 	and.w	fp, lr, #16711935	@ 0xff00ff
 802fc5a:	9105      	str	r1, [sp, #20]
 802fc5c:	2fff      	cmp	r7, #255	@ 0xff
 802fc5e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 802fc62:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802fc66:	d01b      	beq.n	802fca0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x134>
 802fc68:	fb0e fe07 	mul.w	lr, lr, r7
 802fc6c:	fb04 f407 	mul.w	r4, r4, r7
 802fc70:	ea4f 2a1e 	mov.w	sl, lr, lsr #8
 802fc74:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802fc78:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802fc7c:	f504 7080 	add.w	r0, r4, #256	@ 0x100
 802fc80:	44d6      	add	lr, sl
 802fc82:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802fc86:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802fc8a:	0a24      	lsrs	r4, r4, #8
 802fc8c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802fc90:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802fc94:	ea4e 0404 	orr.w	r4, lr, r4
 802fc98:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 802fc9c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802fca0:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802fca4:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802fca8:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802fcac:	d019      	beq.n	802fce2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x176>
 802fcae:	fb00 f008 	mul.w	r0, r0, r8
 802fcb2:	fb05 f508 	mul.w	r5, r5, r8
 802fcb6:	ea4f 2910 	mov.w	r9, r0, lsr #8
 802fcba:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802fcbe:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802fcc2:	f505 7780 	add.w	r7, r5, #256	@ 0x100
 802fcc6:	4448      	add	r0, r9
 802fcc8:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 802fccc:	0a00      	lsrs	r0, r0, #8
 802fcce:	0a2d      	lsrs	r5, r5, #8
 802fcd0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802fcd4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802fcd8:	4305      	orrs	r5, r0
 802fcda:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802fcde:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802fce2:	9904      	ldr	r1, [sp, #16]
 802fce4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802fce8:	f001 1aff 	and.w	sl, r1, #16711935	@ 0xff00ff
 802fcec:	f401 497f 	and.w	r9, r1, #65280	@ 0xff00
 802fcf0:	d01c      	beq.n	802fd2c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x1c0>
 802fcf2:	fb0a fa0c 	mul.w	sl, sl, ip
 802fcf6:	fb09 fc0c 	mul.w	ip, r9, ip
 802fcfa:	ea4f 281a 	mov.w	r8, sl, lsr #8
 802fcfe:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802fd02:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802fd06:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802fd0a:	44c2      	add	sl, r8
 802fd0c:	eb07 2c1c 	add.w	ip, r7, ip, lsr #8
 802fd10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802fd14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802fd18:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802fd1c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802fd20:	ea4a 090c 	orr.w	r9, sl, ip
 802fd24:	f009 1aff 	and.w	sl, r9, #16711935	@ 0xff00ff
 802fd28:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802fd2c:	f8bd 8004 	ldrh.w	r8, [sp, #4]
 802fd30:	9903      	ldr	r1, [sp, #12]
 802fd32:	fb01 fc08 	mul.w	ip, r1, r8
 802fd36:	f10c 0701 	add.w	r7, ip, #1
 802fd3a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802fd3e:	ea6f 2c17 	mvn.w	ip, r7, lsr #8
 802fd42:	9902      	ldr	r1, [sp, #8]
 802fd44:	fa5f f78c 	uxtb.w	r7, ip
 802fd48:	fb04 f401 	mul.w	r4, r4, r1
 802fd4c:	fb0e fe01 	mul.w	lr, lr, r1
 802fd50:	9905      	ldr	r1, [sp, #20]
 802fd52:	fb0b ee03 	mla	lr, fp, r3, lr
 802fd56:	fb01 4303 	mla	r3, r1, r3, r4
 802fd5a:	fb00 e002 	mla	r0, r0, r2, lr
 802fd5e:	fb05 3502 	mla	r5, r5, r2, r3
 802fd62:	fb0a 0a06 	mla	sl, sl, r6, r0
 802fd66:	fb09 5906 	mla	r9, r9, r6, r5
 802fd6a:	ea4f 261a 	mov.w	r6, sl, lsr #8
 802fd6e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802fd72:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802fd76:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802fd7a:	ea46 0609 	orr.w	r6, r6, r9
 802fd7e:	b2f2      	uxtb	r2, r6
 802fd80:	f3c6 2307 	ubfx	r3, r6, #8, #8
 802fd84:	0c36      	lsrs	r6, r6, #16
 802fd86:	9900      	ldr	r1, [sp, #0]
 802fd88:	fb12 f408 	smulbb	r4, r2, r8
 802fd8c:	fb13 f008 	smulbb	r0, r3, r8
 802fd90:	fb16 f808 	smulbb	r8, r6, r8
 802fd94:	780a      	ldrb	r2, [r1, #0]
 802fd96:	784b      	ldrb	r3, [r1, #1]
 802fd98:	788e      	ldrb	r6, [r1, #2]
 802fd9a:	fb02 4207 	mla	r2, r2, r7, r4
 802fd9e:	fb03 0307 	mla	r3, r3, r7, r0
 802fda2:	fb06 8807 	mla	r8, r6, r7, r8
 802fda6:	b292      	uxth	r2, r2
 802fda8:	b29b      	uxth	r3, r3
 802fdaa:	fa1f f888 	uxth.w	r8, r8
 802fdae:	1c54      	adds	r4, r2, #1
 802fdb0:	1c58      	adds	r0, r3, #1
 802fdb2:	f108 0701 	add.w	r7, r8, #1
 802fdb6:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802fdba:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802fdbe:	eb07 2818 	add.w	r8, r7, r8, lsr #8
 802fdc2:	1212      	asrs	r2, r2, #8
 802fdc4:	121b      	asrs	r3, r3, #8
 802fdc6:	ea4f 2828 	mov.w	r8, r8, asr #8
 802fdca:	700a      	strb	r2, [r1, #0]
 802fdcc:	704b      	strb	r3, [r1, #1]
 802fdce:	f881 8002 	strb.w	r8, [r1, #2]
 802fdd2:	b007      	add	sp, #28
 802fdd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802fdd8:	2800      	cmp	r0, #0
 802fdda:	db01      	blt.n	802fde0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x274>
 802fddc:	4584      	cmp	ip, r0
 802fdde:	dc40      	bgt.n	802fe62 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2f6>
 802fde0:	f04f 0e00 	mov.w	lr, #0
 802fde4:	46f1      	mov	r9, lr
 802fde6:	1c42      	adds	r2, r0, #1
 802fde8:	d42b      	bmi.n	802fe42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2d6>
 802fdea:	4594      	cmp	ip, r2
 802fdec:	dd29      	ble.n	802fe42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2d6>
 802fdee:	f1ba 0f00 	cmp.w	sl, #0
 802fdf2:	d005      	beq.n	802fe00 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x294>
 802fdf4:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802fdf8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802fdfc:	0e27      	lsrs	r7, r4, #24
 802fdfe:	e6d5      	b.n	802fbac <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x40>
 802fe00:	2d00      	cmp	r5, #0
 802fe02:	db41      	blt.n	802fe88 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x31c>
 802fe04:	45a8      	cmp	r8, r5
 802fe06:	dd3f      	ble.n	802fe88 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x31c>
 802fe08:	4657      	mov	r7, sl
 802fe0a:	4654      	mov	r4, sl
 802fe0c:	b1e6      	cbz	r6, 802fe48 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2dc>
 802fe0e:	2800      	cmp	r0, #0
 802fe10:	db32      	blt.n	802fe78 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x30c>
 802fe12:	4584      	cmp	ip, r0
 802fe14:	dd30      	ble.n	802fe78 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x30c>
 802fe16:	f81b 200c 	ldrb.w	r2, [fp, ip]
 802fe1a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 802fe1e:	ea4f 6815 	mov.w	r8, r5, lsr #24
 802fe22:	3001      	adds	r0, #1
 802fe24:	d423      	bmi.n	802fe6e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x302>
 802fe26:	4584      	cmp	ip, r0
 802fe28:	dd21      	ble.n	802fe6e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x302>
 802fe2a:	f1ba 0f00 	cmp.w	sl, #0
 802fe2e:	d027      	beq.n	802fe80 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x314>
 802fe30:	44dc      	add	ip, fp
 802fe32:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802fe36:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802fe3a:	9304      	str	r3, [sp, #16]
 802fe3c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802fe40:	e6bf      	b.n	802fbc2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x56>
 802fe42:	2700      	movs	r7, #0
 802fe44:	463c      	mov	r4, r7
 802fe46:	e6b1      	b.n	802fbac <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x40>
 802fe48:	f1ba 0f0f 	cmp.w	sl, #15
 802fe4c:	d824      	bhi.n	802fe98 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802fe4e:	fa1f f38a 	uxth.w	r3, sl
 802fe52:	4632      	mov	r2, r6
 802fe54:	46b3      	mov	fp, r6
 802fe56:	46b2      	mov	sl, r6
 802fe58:	9604      	str	r6, [sp, #16]
 802fe5a:	4635      	mov	r5, r6
 802fe5c:	46b4      	mov	ip, r6
 802fe5e:	46b0      	mov	r8, r6
 802fe60:	e6c2      	b.n	802fbe8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x7c>
 802fe62:	5dd2      	ldrb	r2, [r2, r7]
 802fe64:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
 802fe68:	ea4f 6e19 	mov.w	lr, r9, lsr #24
 802fe6c:	e7bb      	b.n	802fde6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x27a>
 802fe6e:	f04f 0c00 	mov.w	ip, #0
 802fe72:	f8cd c010 	str.w	ip, [sp, #16]
 802fe76:	e6a4      	b.n	802fbc2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x56>
 802fe78:	f04f 0800 	mov.w	r8, #0
 802fe7c:	4645      	mov	r5, r8
 802fe7e:	e7d0      	b.n	802fe22 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2b6>
 802fe80:	f8cd a010 	str.w	sl, [sp, #16]
 802fe84:	46d4      	mov	ip, sl
 802fe86:	e6a0      	b.n	802fbca <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x5e>
 802fe88:	4654      	mov	r4, sl
 802fe8a:	f8cd a010 	str.w	sl, [sp, #16]
 802fe8e:	4655      	mov	r5, sl
 802fe90:	46d4      	mov	ip, sl
 802fe92:	46d0      	mov	r8, sl
 802fe94:	4657      	mov	r7, sl
 802fe96:	e698      	b.n	802fbca <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x5e>
 802fe98:	4b03      	ldr	r3, [pc, #12]	@ (802fea8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x33c>)
 802fe9a:	4a04      	ldr	r2, [pc, #16]	@ (802feac <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x340>)
 802fe9c:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802fea0:	4803      	ldr	r0, [pc, #12]	@ (802feb0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x344>)
 802fea2:	f002 faf1 	bl	8032488 <__assert_func>
 802fea6:	bf00      	nop
 802fea8:	0803663c 	.word	0x0803663c
 802feac:	08036cb8 	.word	0x08036cb8
 802feb0:	080367c4 	.word	0x080367c4

0802feb4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802feb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802feb8:	ed2d 8b08 	vpush	{d8-d11}
 802febc:	b0a9      	sub	sp, #164	@ 0xa4
 802febe:	e9dd ba3b 	ldrd	fp, sl, [sp, #236]	@ 0xec
 802fec2:	eeb0 aa40 	vmov.f32	s20, s0
 802fec6:	46d9      	mov	r9, fp
 802fec8:	eef0 9a60 	vmov.f32	s19, s1
 802fecc:	eeb0 9a41 	vmov.f32	s18, s2
 802fed0:	eef0 8a62 	vmov.f32	s17, s5
 802fed4:	eeb0 8a43 	vmov.f32	s16, s6
 802fed8:	eef0 ba44 	vmov.f32	s23, s8
 802fedc:	eeb0 ba64 	vmov.f32	s22, s9
 802fee0:	eef0 aa45 	vmov.f32	s21, s10
 802fee4:	46d3      	mov	fp, sl
 802fee6:	9022      	str	r0, [sp, #136]	@ 0x88
 802fee8:	983f      	ldr	r0, [sp, #252]	@ 0xfc
 802feea:	9115      	str	r1, [sp, #84]	@ 0x54
 802feec:	9218      	str	r2, [sp, #96]	@ 0x60
 802feee:	6841      	ldr	r1, [r0, #4]
 802fef0:	9a40      	ldr	r2, [sp, #256]	@ 0x100
 802fef2:	469e      	mov	lr, r3
 802fef4:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 802fef6:	6807      	ldr	r7, [r0, #0]
 802fef8:	fb01 2303 	mla	r3, r1, r3, r2
 802fefc:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802fefe:	9842      	ldr	r0, [sp, #264]	@ 0x108
 802ff00:	6852      	ldr	r2, [r2, #4]
 802ff02:	f89d 110c 	ldrb.w	r1, [sp, #268]	@ 0x10c
 802ff06:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 802ff0a:	6800      	ldr	r0, [r0, #0]
 802ff0c:	1d13      	adds	r3, r2, #4
 802ff0e:	930b      	str	r3, [sp, #44]	@ 0x2c
 802ff10:	b28b      	uxth	r3, r1
 802ff12:	9123      	str	r1, [sp, #140]	@ 0x8c
 802ff14:	9011      	str	r0, [sp, #68]	@ 0x44
 802ff16:	9317      	str	r3, [sp, #92]	@ 0x5c
 802ff18:	9712      	str	r7, [sp, #72]	@ 0x48
 802ff1a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802ff1c:	2b00      	cmp	r3, #0
 802ff1e:	dc02      	bgt.n	802ff26 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802ff20:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802ff22:	2b00      	cmp	r3, #0
 802ff24:	dd68      	ble.n	802fff8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802ff26:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802ff28:	f1be 0f00 	cmp.w	lr, #0
 802ff2c:	e9d3 5702 	ldrd	r5, r7, [r3, #8]
 802ff30:	b228      	sxth	r0, r5
 802ff32:	b23e      	sxth	r6, r7
 802ff34:	f340 83a0 	ble.w	8030678 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c4>
 802ff38:	e9dd 8a3d 	ldrd	r8, sl, [sp, #244]	@ 0xf4
 802ff3c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802ff3e:	1e44      	subs	r4, r0, #1
 802ff40:	f106 3cff 	add.w	ip, r6, #4294967295
 802ff44:	9709      	str	r7, [sp, #36]	@ 0x24
 802ff46:	ea5f 4329 	movs.w	r3, r9, asr #16
 802ff4a:	ea4f 422b 	mov.w	r2, fp, asr #16
 802ff4e:	d405      	bmi.n	802ff5c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802ff50:	42a3      	cmp	r3, r4
 802ff52:	da03      	bge.n	802ff5c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802ff54:	2a00      	cmp	r2, #0
 802ff56:	db01      	blt.n	802ff5c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802ff58:	4562      	cmp	r2, ip
 802ff5a:	db52      	blt.n	8030002 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 802ff5c:	1c5f      	adds	r7, r3, #1
 802ff5e:	d406      	bmi.n	802ff6e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ff60:	4287      	cmp	r7, r0
 802ff62:	dc04      	bgt.n	802ff6e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ff64:	1c57      	adds	r7, r2, #1
 802ff66:	d402      	bmi.n	802ff6e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ff68:	42b7      	cmp	r7, r6
 802ff6a:	f340 835f 	ble.w	803062c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x778>
 802ff6e:	f1be 0e01 	subs.w	lr, lr, #1
 802ff72:	44c1      	add	r9, r8
 802ff74:	44d3      	add	fp, sl
 802ff76:	f101 0104 	add.w	r1, r1, #4
 802ff7a:	d1e4      	bne.n	802ff46 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802ff7c:	9112      	str	r1, [sp, #72]	@ 0x48
 802ff7e:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802ff80:	2b00      	cmp	r3, #0
 802ff82:	dd39      	ble.n	802fff8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802ff84:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802ff88:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802ff8c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802ff90:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802ff94:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802ff98:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802ff9c:	ee69 7a27 	vmul.f32	s15, s18, s15
 802ffa0:	ee76 6a68 	vsub.f32	s13, s12, s17
 802ffa4:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802ffa8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ffac:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ffb0:	ee16 2a90 	vmov	r2, s13
 802ffb4:	3b01      	subs	r3, #1
 802ffb6:	9315      	str	r3, [sp, #84]	@ 0x54
 802ffb8:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ffba:	fb92 f3f3 	sdiv	r3, r2, r3
 802ffbe:	ee17 2a10 	vmov	r2, s14
 802ffc2:	eeb0 7a48 	vmov.f32	s14, s16
 802ffc6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ffca:	ee17 ba10 	vmov	fp, s14
 802ffce:	eeb0 7a68 	vmov.f32	s14, s17
 802ffd2:	933d      	str	r3, [sp, #244]	@ 0xf4
 802ffd4:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ffd6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ffda:	fb92 f3f3 	sdiv	r3, r2, r3
 802ffde:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802ffe0:	933e      	str	r3, [sp, #248]	@ 0xf8
 802ffe2:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ffe4:	ee17 9a10 	vmov	r9, s14
 802ffe8:	eeb0 8a67 	vmov.f32	s16, s15
 802ffec:	eef0 8a46 	vmov.f32	s17, s12
 802fff0:	bf14      	ite	ne
 802fff2:	469e      	movne	lr, r3
 802fff4:	4696      	moveq	lr, r2
 802fff6:	e790      	b.n	802ff1a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802fff8:	b029      	add	sp, #164	@ 0xa4
 802fffa:	ecbd 8b08 	vpop	{d8-d11}
 802fffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8030002:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8030004:	9112      	str	r1, [sp, #72]	@ 0x48
 8030006:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 8030008:	f10e 32ff 	add.w	r2, lr, #4294967295
 803000c:	fb01 9302 	mla	r3, r1, r2, r9
 8030010:	141b      	asrs	r3, r3, #16
 8030012:	920a      	str	r2, [sp, #40]	@ 0x28
 8030014:	f100 816a 	bmi.w	80302ec <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8030018:	42a3      	cmp	r3, r4
 803001a:	f280 8167 	bge.w	80302ec <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 803001e:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 8030020:	fb03 b302 	mla	r3, r3, r2, fp
 8030024:	141b      	asrs	r3, r3, #16
 8030026:	f100 8161 	bmi.w	80302ec <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 803002a:	3e01      	subs	r6, #1
 803002c:	42b3      	cmp	r3, r6
 803002e:	f280 815d 	bge.w	80302ec <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8030032:	f1be 0f00 	cmp.w	lr, #0
 8030036:	dda2      	ble.n	802ff7e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8030038:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 803003a:	f8cd e064 	str.w	lr, [sp, #100]	@ 0x64
 803003e:	3304      	adds	r3, #4
 8030040:	9309      	str	r3, [sp, #36]	@ 0x24
 8030042:	f8cd b0f0 	str.w	fp, [sp, #240]	@ 0xf0
 8030046:	4606      	mov	r6, r0
 8030048:	465b      	mov	r3, fp
 803004a:	e12a      	b.n	80302a2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 803004c:	785f      	ldrb	r7, [r3, #1]
 803004e:	f855 7027 	ldr.w	r7, [r5, r7, lsl #2]
 8030052:	9713      	str	r7, [sp, #76]	@ 0x4c
 8030054:	0e3f      	lsrs	r7, r7, #24
 8030056:	970c      	str	r7, [sp, #48]	@ 0x30
 8030058:	b16a      	cbz	r2, 8030076 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 803005a:	199f      	adds	r7, r3, r6
 803005c:	5d9b      	ldrb	r3, [r3, r6]
 803005e:	462e      	mov	r6, r5
 8030060:	787f      	ldrb	r7, [r7, #1]
 8030062:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8030066:	f855 5027 	ldr.w	r5, [r5, r7, lsl #2]
 803006a:	9314      	str	r3, [sp, #80]	@ 0x50
 803006c:	9516      	str	r5, [sp, #88]	@ 0x58
 803006e:	0e1b      	lsrs	r3, r3, #24
 8030070:	0e2d      	lsrs	r5, r5, #24
 8030072:	950e      	str	r5, [sp, #56]	@ 0x38
 8030074:	930d      	str	r3, [sp, #52]	@ 0x34
 8030076:	fa1f fc81 	uxth.w	ip, r1
 803007a:	b292      	uxth	r2, r2
 803007c:	fb0c f602 	mul.w	r6, ip, r2
 8030080:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8030084:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8030086:	ebac 0706 	sub.w	r7, ip, r6
 803008a:	b2bf      	uxth	r7, r7
 803008c:	fb07 f103 	mul.w	r1, r7, r3
 8030090:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8030094:	b292      	uxth	r2, r2
 8030096:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 803009a:	1a9b      	subs	r3, r3, r2
 803009c:	b29b      	uxth	r3, r3
 803009e:	fb03 1104 	mla	r1, r3, r4, r1
 80300a2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80300a4:	fb02 1105 	mla	r1, r2, r5, r1
 80300a8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80300aa:	fb06 1105 	mla	r1, r6, r5, r1
 80300ae:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80300b2:	2900      	cmp	r1, #0
 80300b4:	f000 80e3 	beq.w	803027e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80300b8:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 80300bc:	2cff      	cmp	r4, #255	@ 0xff
 80300be:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80300c2:	950f      	str	r5, [sp, #60]	@ 0x3c
 80300c4:	9010      	str	r0, [sp, #64]	@ 0x40
 80300c6:	d01e      	beq.n	8030106 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80300c8:	fb00 f004 	mul.w	r0, r0, r4
 80300cc:	fb05 fe04 	mul.w	lr, r5, r4
 80300d0:	4604      	mov	r4, r0
 80300d2:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80300d6:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 80300da:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80300de:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 80300e2:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80300e6:	44e6      	add	lr, ip
 80300e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80300ec:	0a24      	lsrs	r4, r4, #8
 80300ee:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80300f2:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80300f6:	ea4e 0e04 	orr.w	lr, lr, r4
 80300fa:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 80300fe:	900f      	str	r0, [sp, #60]	@ 0x3c
 8030100:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 8030104:	9010      	str	r0, [sp, #64]	@ 0x40
 8030106:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8030108:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 803010c:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 8030110:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8030112:	28ff      	cmp	r0, #255	@ 0xff
 8030114:	d01c      	beq.n	8030150 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8030116:	fb0e fe00 	mul.w	lr, lr, r0
 803011a:	fb08 f800 	mul.w	r8, r8, r0
 803011e:	ea4f 241e 	mov.w	r4, lr, lsr #8
 8030122:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8030126:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 803012a:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 803012e:	44a6      	add	lr, r4
 8030130:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 8030134:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8030138:	ea4f 2818 	mov.w	r8, r8, lsr #8
 803013c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8030140:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8030144:	ea4e 0808 	orr.w	r8, lr, r8
 8030148:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 803014c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8030150:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8030152:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 8030156:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 803015a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 803015c:	28ff      	cmp	r0, #255	@ 0xff
 803015e:	d01c      	beq.n	803019a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8030160:	fb0c fc00 	mul.w	ip, ip, r0
 8030164:	fb0a fa00 	mul.w	sl, sl, r0
 8030168:	ea4f 241c 	mov.w	r4, ip, lsr #8
 803016c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8030170:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8030174:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 8030178:	44a4      	add	ip, r4
 803017a:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 803017e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8030182:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8030186:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 803018a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 803018e:	ea4c 0a0a 	orr.w	sl, ip, sl
 8030192:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 8030196:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 803019a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 803019c:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 80301a0:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 80301a4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80301a6:	2cff      	cmp	r4, #255	@ 0xff
 80301a8:	d019      	beq.n	80301de <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80301aa:	fb00 f004 	mul.w	r0, r0, r4
 80301ae:	fb0b fb04 	mul.w	fp, fp, r4
 80301b2:	0a04      	lsrs	r4, r0, #8
 80301b4:	f004 15ff 	and.w	r5, r4, #16711935	@ 0xff00ff
 80301b8:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 80301bc:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 80301c0:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 80301c4:	4428      	add	r0, r5
 80301c6:	0a00      	lsrs	r0, r0, #8
 80301c8:	0a24      	lsrs	r4, r4, #8
 80301ca:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80301ce:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 80301d2:	ea40 0b0b 	orr.w	fp, r0, fp
 80301d6:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 80301da:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 80301de:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 80301e0:	fb0e fe07 	mul.w	lr, lr, r7
 80301e4:	fb01 f105 	mul.w	r1, r1, r5
 80301e8:	1c4c      	adds	r4, r1, #1
 80301ea:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 80301ee:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80301f2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80301f4:	fb08 f707 	mul.w	r7, r8, r7
 80301f8:	fb04 ee03 	mla	lr, r4, r3, lr
 80301fc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80301fe:	fb0c ee02 	mla	lr, ip, r2, lr
 8030202:	fb04 7703 	mla	r7, r4, r3, r7
 8030206:	fb0a 7702 	mla	r7, sl, r2, r7
 803020a:	fb00 ee06 	mla	lr, r0, r6, lr
 803020e:	fb0b 7706 	mla	r7, fp, r6, r7
 8030212:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8030216:	0a3f      	lsrs	r7, r7, #8
 8030218:	f407 437f 	and.w	r3, r7, #65280	@ 0xff00
 803021c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8030220:	ea4e 0303 	orr.w	r3, lr, r3
 8030224:	b2df      	uxtb	r7, r3
 8030226:	f3c3 2607 	ubfx	r6, r3, #8, #8
 803022a:	0c1b      	lsrs	r3, r3, #16
 803022c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 803022e:	fb17 f705 	smulbb	r7, r7, r5
 8030232:	fb16 f605 	smulbb	r6, r6, r5
 8030236:	fb13 f305 	smulbb	r3, r3, r5
 803023a:	f814 0c04 	ldrb.w	r0, [r4, #-4]
 803023e:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 8030242:	f814 cc02 	ldrb.w	ip, [r4, #-2]
 8030246:	b2c9      	uxtb	r1, r1
 8030248:	fb00 7001 	mla	r0, r0, r1, r7
 803024c:	fb02 6201 	mla	r2, r2, r1, r6
 8030250:	fb0c 3101 	mla	r1, ip, r1, r3
 8030254:	b280      	uxth	r0, r0
 8030256:	b292      	uxth	r2, r2
 8030258:	b289      	uxth	r1, r1
 803025a:	1c47      	adds	r7, r0, #1
 803025c:	1c56      	adds	r6, r2, #1
 803025e:	1c4b      	adds	r3, r1, #1
 8030260:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8030264:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 8030268:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 803026c:	1200      	asrs	r0, r0, #8
 803026e:	1212      	asrs	r2, r2, #8
 8030270:	1209      	asrs	r1, r1, #8
 8030272:	f804 0c04 	strb.w	r0, [r4, #-4]
 8030276:	f804 2c03 	strb.w	r2, [r4, #-3]
 803027a:	f804 1c02 	strb.w	r1, [r4, #-2]
 803027e:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 8030280:	993e      	ldr	r1, [sp, #248]	@ 0xf8
 8030282:	4491      	add	r9, r2
 8030284:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 8030286:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8030288:	440a      	add	r2, r1
 803028a:	923c      	str	r2, [sp, #240]	@ 0xf0
 803028c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 803028e:	3b01      	subs	r3, #1
 8030290:	930a      	str	r3, [sp, #40]	@ 0x28
 8030292:	3204      	adds	r2, #4
 8030294:	3301      	adds	r3, #1
 8030296:	9209      	str	r2, [sp, #36]	@ 0x24
 8030298:	d021      	beq.n	80302de <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 803029a:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 803029c:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 80302a0:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 80302a2:	ea4f 4229 	mov.w	r2, r9, asr #16
 80302a6:	141b      	asrs	r3, r3, #16
 80302a8:	fb06 2303 	mla	r3, r6, r3, r2
 80302ac:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80302ae:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80302b0:	5ce2      	ldrb	r2, [r4, r3]
 80302b2:	f3c9 3103 	ubfx	r1, r9, #12, #4
 80302b6:	f855 0022 	ldr.w	r0, [r5, r2, lsl #2]
 80302ba:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 80302bc:	4423      	add	r3, r4
 80302be:	f3c2 3203 	ubfx	r2, r2, #12, #4
 80302c2:	0e04      	lsrs	r4, r0, #24
 80302c4:	2900      	cmp	r1, #0
 80302c6:	f47f aec1 	bne.w	803004c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80302ca:	2a00      	cmp	r2, #0
 80302cc:	f43f aed3 	beq.w	8030076 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80302d0:	5d9b      	ldrb	r3, [r3, r6]
 80302d2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80302d6:	9314      	str	r3, [sp, #80]	@ 0x50
 80302d8:	0e1b      	lsrs	r3, r3, #24
 80302da:	930d      	str	r3, [sp, #52]	@ 0x34
 80302dc:	e6cb      	b.n	8030076 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80302de:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80302e0:	f8dd e064 	ldr.w	lr, [sp, #100]	@ 0x64
 80302e4:	eb03 038e 	add.w	r3, r3, lr, lsl #2
 80302e8:	9312      	str	r3, [sp, #72]	@ 0x48
 80302ea:	e648      	b.n	802ff7e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 80302ec:	f1be 0f00 	cmp.w	lr, #0
 80302f0:	f77f ae45 	ble.w	802ff7e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 80302f4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 80302f8:	ea4f 4329 	mov.w	r3, r9, asr #16
 80302fc:	ea4f 422b 	mov.w	r2, fp, asr #16
 8030300:	2b00      	cmp	r3, #0
 8030302:	46be      	mov	lr, r7
 8030304:	4629      	mov	r1, r5
 8030306:	e9dd 653d 	ldrd	r6, r5, [sp, #244]	@ 0xf4
 803030a:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
 803030e:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 8030310:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8030314:	f3cb 3703 	ubfx	r7, fp, #12, #4
 8030318:	f2c0 815d 	blt.w	80305d6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 803031c:	f101 3cff 	add.w	ip, r1, #4294967295
 8030320:	4563      	cmp	r3, ip
 8030322:	f280 8158 	bge.w	80305d6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 8030326:	2a00      	cmp	r2, #0
 8030328:	f2c0 8155 	blt.w	80305d6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 803032c:	f10e 3cff 	add.w	ip, lr, #4294967295
 8030330:	4562      	cmp	r2, ip
 8030332:	f280 8150 	bge.w	80305d6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 8030336:	fa0f fc81 	sxth.w	ip, r1
 803033a:	fb02 330c 	mla	r3, r2, ip, r3
 803033e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8030340:	5cd1      	ldrb	r1, [r2, r3]
 8030342:	18d3      	adds	r3, r2, r3
 8030344:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8030346:	469e      	mov	lr, r3
 8030348:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 803034c:	0e19      	lsrs	r1, r3, #24
 803034e:	9309      	str	r3, [sp, #36]	@ 0x24
 8030350:	910f      	str	r1, [sp, #60]	@ 0x3c
 8030352:	2800      	cmp	r0, #0
 8030354:	f000 8171 	beq.w	803063a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x786>
 8030358:	4671      	mov	r1, lr
 803035a:	f89e e001 	ldrb.w	lr, [lr, #1]
 803035e:	4613      	mov	r3, r2
 8030360:	f852 202e 	ldr.w	r2, [r2, lr, lsl #2]
 8030364:	9224      	str	r2, [sp, #144]	@ 0x90
 8030366:	0e12      	lsrs	r2, r2, #24
 8030368:	921a      	str	r2, [sp, #104]	@ 0x68
 803036a:	2f00      	cmp	r7, #0
 803036c:	f040 8171 	bne.w	8030652 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79e>
 8030370:	b280      	uxth	r0, r0
 8030372:	b2bf      	uxth	r7, r7
 8030374:	fb00 f207 	mul.w	r2, r0, r7
 8030378:	ea4f 1c00 	mov.w	ip, r0, lsl #4
 803037c:	ebac 0002 	sub.w	r0, ip, r2
 8030380:	b280      	uxth	r0, r0
 8030382:	4603      	mov	r3, r0
 8030384:	9010      	str	r0, [sp, #64]	@ 0x40
 8030386:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8030388:	ebc2 1707 	rsb	r7, r2, r7, lsl #4
 803038c:	fb03 f000 	mul.w	r0, r3, r0
 8030390:	fa1f fe87 	uxth.w	lr, r7
 8030394:	f5cc 7780 	rsb	r7, ip, #256	@ 0x100
 8030398:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 803039a:	eba7 070e 	sub.w	r7, r7, lr
 803039e:	b2bf      	uxth	r7, r7
 80303a0:	fb07 0003 	mla	r0, r7, r3, r0
 80303a4:	9719      	str	r7, [sp, #100]	@ 0x64
 80303a6:	9f1b      	ldr	r7, [sp, #108]	@ 0x6c
 80303a8:	fb0e 0007 	mla	r0, lr, r7, r0
 80303ac:	9f1c      	ldr	r7, [sp, #112]	@ 0x70
 80303ae:	fb02 0007 	mla	r0, r2, r7, r0
 80303b2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80303b6:	900f      	str	r0, [sp, #60]	@ 0x3c
 80303b8:	2800      	cmp	r0, #0
 80303ba:	f000 80f6 	beq.w	80305aa <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 80303be:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80303c0:	2bff      	cmp	r3, #255	@ 0xff
 80303c2:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 80303c6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80303ca:	901d      	str	r0, [sp, #116]	@ 0x74
 80303cc:	9109      	str	r1, [sp, #36]	@ 0x24
 80303ce:	d01b      	beq.n	8030408 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x554>
 80303d0:	fb01 f103 	mul.w	r1, r1, r3
 80303d4:	fb00 f003 	mul.w	r0, r0, r3
 80303d8:	460b      	mov	r3, r1
 80303da:	0a01      	lsrs	r1, r0, #8
 80303dc:	f100 1701 	add.w	r7, r0, #65537	@ 0x10001
 80303e0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80303e4:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 80303e8:	4439      	add	r1, r7
 80303ea:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80303ee:	0a09      	lsrs	r1, r1, #8
 80303f0:	0a1b      	lsrs	r3, r3, #8
 80303f2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80303f6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80303fa:	430b      	orrs	r3, r1
 80303fc:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 8030400:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8030404:	911d      	str	r1, [sp, #116]	@ 0x74
 8030406:	9309      	str	r3, [sp, #36]	@ 0x24
 8030408:	9924      	ldr	r1, [sp, #144]	@ 0x90
 803040a:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 803040c:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 8030410:	2fff      	cmp	r7, #255	@ 0xff
 8030412:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8030416:	931e      	str	r3, [sp, #120]	@ 0x78
 8030418:	911f      	str	r1, [sp, #124]	@ 0x7c
 803041a:	d01c      	beq.n	8030456 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a2>
 803041c:	fb01 f107 	mul.w	r1, r1, r7
 8030420:	fb03 f307 	mul.w	r3, r3, r7
 8030424:	460f      	mov	r7, r1
 8030426:	0a19      	lsrs	r1, r3, #8
 8030428:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 803042c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8030430:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 8030434:	4401      	add	r1, r0
 8030436:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 803043a:	0a09      	lsrs	r1, r1, #8
 803043c:	0a1b      	lsrs	r3, r3, #8
 803043e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8030442:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8030446:	ea41 0003 	orr.w	r0, r1, r3
 803044a:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 803044e:	931e      	str	r3, [sp, #120]	@ 0x78
 8030450:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8030454:	931f      	str	r3, [sp, #124]	@ 0x7c
 8030456:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8030458:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 803045c:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 8030460:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8030462:	9120      	str	r1, [sp, #128]	@ 0x80
 8030464:	2bff      	cmp	r3, #255	@ 0xff
 8030466:	d01b      	beq.n	80304a0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8030468:	fb01 f103 	mul.w	r1, r1, r3
 803046c:	fb0c fc03 	mul.w	ip, ip, r3
 8030470:	0a08      	lsrs	r0, r1, #8
 8030472:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 8030476:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 803047a:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 803047e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8030482:	4401      	add	r1, r0
 8030484:	0a09      	lsrs	r1, r1, #8
 8030486:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 803048a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 803048e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8030492:	ea41 0c0c 	orr.w	ip, r1, ip
 8030496:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 803049a:	9320      	str	r3, [sp, #128]	@ 0x80
 803049c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80304a0:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80304a2:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 80304a6:	f400 477f 	and.w	r7, r0, #65280	@ 0xff00
 80304aa:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80304ac:	9321      	str	r3, [sp, #132]	@ 0x84
 80304ae:	28ff      	cmp	r0, #255	@ 0xff
 80304b0:	d019      	beq.n	80304e6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x632>
 80304b2:	fb03 f300 	mul.w	r3, r3, r0
 80304b6:	fb07 f700 	mul.w	r7, r7, r0
 80304ba:	0a18      	lsrs	r0, r3, #8
 80304bc:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80304c0:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 80304c4:	f507 7180 	add.w	r1, r7, #256	@ 0x100
 80304c8:	4418      	add	r0, r3
 80304ca:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80304ce:	0a00      	lsrs	r0, r0, #8
 80304d0:	0a3f      	lsrs	r7, r7, #8
 80304d2:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80304d6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80304da:	4307      	orrs	r7, r0
 80304dc:	f007 13ff 	and.w	r3, r7, #16711935	@ 0xff00ff
 80304e0:	9321      	str	r3, [sp, #132]	@ 0x84
 80304e2:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80304e6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80304e8:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80304ea:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80304ec:	fb01 f100 	mul.w	r1, r1, r0
 80304f0:	4608      	mov	r0, r1
 80304f2:	3101      	adds	r1, #1
 80304f4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80304f8:	ea6f 2110 	mvn.w	r1, r0, lsr #8
 80304fc:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80304fe:	9125      	str	r1, [sp, #148]	@ 0x94
 8030500:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8030502:	fb01 f100 	mul.w	r1, r1, r0
 8030506:	910f      	str	r1, [sp, #60]	@ 0x3c
 8030508:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 803050a:	fb01 f100 	mul.w	r1, r1, r0
 803050e:	9110      	str	r1, [sp, #64]	@ 0x40
 8030510:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8030512:	4608      	mov	r0, r1
 8030514:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8030516:	fb00 1103 	mla	r1, r0, r3, r1
 803051a:	910f      	str	r1, [sp, #60]	@ 0x3c
 803051c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 803051e:	4608      	mov	r0, r1
 8030520:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8030522:	fb00 1003 	mla	r0, r0, r3, r1
 8030526:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8030528:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 803052a:	fb0c 000e 	mla	r0, ip, lr, r0
 803052e:	fb03 110e 	mla	r1, r3, lr, r1
 8030532:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8030534:	f89a c002 	ldrb.w	ip, [sl, #2]
 8030538:	fb03 1102 	mla	r1, r3, r2, r1
 803053c:	fb07 0302 	mla	r3, r7, r2, r0
 8030540:	0a0a      	lsrs	r2, r1, #8
 8030542:	0a1b      	lsrs	r3, r3, #8
 8030544:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8030548:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 803054c:	4313      	orrs	r3, r2
 803054e:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8030550:	b2df      	uxtb	r7, r3
 8030552:	f3c3 2007 	ubfx	r0, r3, #8, #8
 8030556:	0c1b      	lsrs	r3, r3, #16
 8030558:	fb17 f702 	smulbb	r7, r7, r2
 803055c:	fb10 f002 	smulbb	r0, r0, r2
 8030560:	fb13 f302 	smulbb	r3, r3, r2
 8030564:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 8030568:	f89a 1000 	ldrb.w	r1, [sl]
 803056c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8030570:	fb01 710e 	mla	r1, r1, lr, r7
 8030574:	fb02 020e 	mla	r2, r2, lr, r0
 8030578:	fb0c 330e 	mla	r3, ip, lr, r3
 803057c:	b297      	uxth	r7, r2
 803057e:	fa1f fc81 	uxth.w	ip, r1
 8030582:	b298      	uxth	r0, r3
 8030584:	f10c 0101 	add.w	r1, ip, #1
 8030588:	1c7a      	adds	r2, r7, #1
 803058a:	1c43      	adds	r3, r0, #1
 803058c:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8030590:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8030594:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8030598:	1209      	asrs	r1, r1, #8
 803059a:	1212      	asrs	r2, r2, #8
 803059c:	121b      	asrs	r3, r3, #8
 803059e:	f88a 1000 	strb.w	r1, [sl]
 80305a2:	f88a 2001 	strb.w	r2, [sl, #1]
 80305a6:	f88a 3002 	strb.w	r3, [sl, #2]
 80305aa:	f1b8 0f00 	cmp.w	r8, #0
 80305ae:	f10a 0a04 	add.w	sl, sl, #4
 80305b2:	44b1      	add	r9, r6
 80305b4:	44ab      	add	fp, r5
 80305b6:	dd30      	ble.n	803061a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x766>
 80305b8:	e9d4 1e02 	ldrd	r1, lr, [r4, #8]
 80305bc:	ea4f 4329 	mov.w	r3, r9, asr #16
 80305c0:	2b00      	cmp	r3, #0
 80305c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80305c6:	ea4f 422b 	mov.w	r2, fp, asr #16
 80305ca:	f3c9 3003 	ubfx	r0, r9, #12, #4
 80305ce:	f3cb 3703 	ubfx	r7, fp, #12, #4
 80305d2:	f6bf aea3 	bge.w	803031c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 80305d6:	f113 0c01 	adds.w	ip, r3, #1
 80305da:	d4e6      	bmi.n	80305aa <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 80305dc:	458c      	cmp	ip, r1
 80305de:	dce4      	bgt.n	80305aa <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 80305e0:	f112 0c01 	adds.w	ip, r2, #1
 80305e4:	d4e1      	bmi.n	80305aa <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 80305e6:	45f4      	cmp	ip, lr
 80305e8:	dcdf      	bgt.n	80305aa <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 80305ea:	fa0f fe8e 	sxth.w	lr, lr
 80305ee:	b209      	sxth	r1, r1
 80305f0:	e9cd 1e00 	strd	r1, lr, [sp]
 80305f4:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 80305f6:	e9cd 2003 	strd	r2, r0, [sp, #12]
 80305fa:	e9cd 7105 	strd	r7, r1, [sp, #20]
 80305fe:	9302      	str	r3, [sp, #8]
 8030600:	4651      	mov	r1, sl
 8030602:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8030604:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8030606:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8030608:	f7ff fab0 	bl	802fb6c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>
 803060c:	f1b8 0f00 	cmp.w	r8, #0
 8030610:	f10a 0a04 	add.w	sl, sl, #4
 8030614:	44b1      	add	r9, r6
 8030616:	44ab      	add	fp, r5
 8030618:	dcce      	bgt.n	80305b8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 803061a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 803061c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 803061e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8030622:	3301      	adds	r3, #1
 8030624:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8030628:	9312      	str	r3, [sp, #72]	@ 0x48
 803062a:	e4a8      	b.n	802ff7e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 803062c:	9112      	str	r1, [sp, #72]	@ 0x48
 803062e:	f10e 31ff 	add.w	r1, lr, #4294967295
 8030632:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8030634:	910a      	str	r1, [sp, #40]	@ 0x28
 8030636:	4688      	mov	r8, r1
 8030638:	e662      	b.n	8030300 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 803063a:	2f00      	cmp	r7, #0
 803063c:	f43f ae98 	beq.w	8030370 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8030640:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8030642:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8030646:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 803064a:	0e13      	lsrs	r3, r2, #24
 803064c:	9226      	str	r2, [sp, #152]	@ 0x98
 803064e:	931b      	str	r3, [sp, #108]	@ 0x6c
 8030650:	e68e      	b.n	8030370 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8030652:	eb01 0e0c 	add.w	lr, r1, ip
 8030656:	f89e e001 	ldrb.w	lr, [lr, #1]
 803065a:	f811 c00c 	ldrb.w	ip, [r1, ip]
 803065e:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 8030662:	4611      	mov	r1, r2
 8030664:	9227      	str	r2, [sp, #156]	@ 0x9c
 8030666:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
 803066a:	4613      	mov	r3, r2
 803066c:	9226      	str	r2, [sp, #152]	@ 0x98
 803066e:	0e0a      	lsrs	r2, r1, #24
 8030670:	921c      	str	r2, [sp, #112]	@ 0x70
 8030672:	0e1a      	lsrs	r2, r3, #24
 8030674:	921b      	str	r2, [sp, #108]	@ 0x6c
 8030676:	e67b      	b.n	8030370 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8030678:	f43f ac81 	beq.w	802ff7e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 803067c:	1e44      	subs	r4, r0, #1
 803067e:	e4c2      	b.n	8030006 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>

08030680 <_ZN8touchgfx19GPU2DVectorRenderer19setStrokeMiterLimitEf>:
 8030680:	4770      	bx	lr
 8030682:	bf00      	nop

08030684 <_ZN8touchgfx19GPU2DVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:
 8030684:	4770      	bx	lr
 8030686:	bf00      	nop

08030688 <_ZN8touchgfx19GPU2DVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:
 8030688:	4770      	bx	lr
 803068a:	bf00      	nop

0803068c <_ZN8touchgfx19GPU2DVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 803068c:	680a      	ldr	r2, [r1, #0]
 803068e:	4b09      	ldr	r3, [pc, #36]	@ (80306b4 <_ZN8touchgfx19GPU2DVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E+0x28>)
 8030690:	601a      	str	r2, [r3, #0]
 8030692:	684a      	ldr	r2, [r1, #4]
 8030694:	605a      	str	r2, [r3, #4]
 8030696:	688a      	ldr	r2, [r1, #8]
 8030698:	609a      	str	r2, [r3, #8]
 803069a:	68ca      	ldr	r2, [r1, #12]
 803069c:	60da      	str	r2, [r3, #12]
 803069e:	690a      	ldr	r2, [r1, #16]
 80306a0:	611a      	str	r2, [r3, #16]
 80306a2:	694a      	ldr	r2, [r1, #20]
 80306a4:	615a      	str	r2, [r3, #20]
 80306a6:	698a      	ldr	r2, [r1, #24]
 80306a8:	619a      	str	r2, [r3, #24]
 80306aa:	69ca      	ldr	r2, [r1, #28]
 80306ac:	61da      	str	r2, [r3, #28]
 80306ae:	6a0a      	ldr	r2, [r1, #32]
 80306b0:	621a      	str	r2, [r3, #32]
 80306b2:	4770      	bx	lr
 80306b4:	200833c0 	.word	0x200833c0

080306b8 <_ZN8touchgfx19GPU2DVectorRendererD1Ev>:
 80306b8:	4770      	bx	lr
 80306ba:	bf00      	nop

080306bc <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_>:
 80306bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80306c0:	4f58      	ldr	r7, [pc, #352]	@ (8030824 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x168>)
 80306c2:	b08c      	sub	sp, #48	@ 0x30
 80306c4:	6838      	ldr	r0, [r7, #0]
 80306c6:	2800      	cmp	r0, #0
 80306c8:	f000 8093 	beq.w	80307f2 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x136>
 80306cc:	460e      	mov	r6, r1
 80306ce:	4615      	mov	r5, r2
 80306d0:	f7f0 fa4a 	bl	8020b68 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80306d4:	683c      	ldr	r4, [r7, #0]
 80306d6:	2c00      	cmp	r4, #0
 80306d8:	f000 808b 	beq.w	80307f2 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x136>
 80306dc:	4b52      	ldr	r3, [pc, #328]	@ (8030828 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x16c>)
 80306de:	781b      	ldrb	r3, [r3, #0]
 80306e0:	2b00      	cmp	r3, #0
 80306e2:	d178      	bne.n	80307d6 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x11a>
 80306e4:	f8d4 803c 	ldr.w	r8, [r4, #60]	@ 0x3c
 80306e8:	4b50      	ldr	r3, [pc, #320]	@ (803082c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x170>)
 80306ea:	681b      	ldr	r3, [r3, #0]
 80306ec:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80306f0:	2a00      	cmp	r2, #0
 80306f2:	d151      	bne.n	8030798 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xdc>
 80306f4:	6898      	ldr	r0, [r3, #8]
 80306f6:	6803      	ldr	r3, [r0, #0]
 80306f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80306fa:	4798      	blx	r3
 80306fc:	2801      	cmp	r0, #1
 80306fe:	d053      	beq.n	80307a8 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xec>
 8030700:	d35e      	bcc.n	80307c0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x104>
 8030702:	2802      	cmp	r0, #2
 8030704:	f040 8087 	bne.w	8030816 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x15a>
 8030708:	4a49      	ldr	r2, [pc, #292]	@ (8030830 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 803070a:	4b4a      	ldr	r3, [pc, #296]	@ (8030834 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 803070c:	8811      	ldrh	r1, [r2, #0]
 803070e:	881a      	ldrh	r2, [r3, #0]
 8030710:	008b      	lsls	r3, r1, #2
 8030712:	9300      	str	r3, [sp, #0]
 8030714:	4640      	mov	r0, r8
 8030716:	2310      	movs	r3, #16
 8030718:	f7e0 fc18 	bl	8010f4c <nema_bind_dst_tex>
 803071c:	4c46      	ldr	r4, [pc, #280]	@ (8030838 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x17c>)
 803071e:	4847      	ldr	r0, [pc, #284]	@ (803083c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x180>)
 8030720:	f7e1 f8be 	bl	80118a0 <nema_mat3x3_load_identity>
 8030724:	6823      	ldr	r3, [r4, #0]
 8030726:	2b00      	cmp	r3, #0
 8030728:	d069      	beq.n	80307fe <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x142>
 803072a:	882a      	ldrh	r2, [r5, #0]
 803072c:	886b      	ldrh	r3, [r5, #2]
 803072e:	8831      	ldrh	r1, [r6, #0]
 8030730:	8874      	ldrh	r4, [r6, #2]
 8030732:	4f43      	ldr	r7, [pc, #268]	@ (8030840 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x184>)
 8030734:	4411      	add	r1, r2
 8030736:	441c      	add	r4, r3
 8030738:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 803073c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8030740:	686d      	ldr	r5, [r5, #4]
 8030742:	b209      	sxth	r1, r1
 8030744:	b224      	sxth	r4, r4
 8030746:	4608      	mov	r0, r1
 8030748:	8039      	strh	r1, [r7, #0]
 803074a:	607d      	str	r5, [r7, #4]
 803074c:	4621      	mov	r1, r4
 803074e:	807c      	strh	r4, [r7, #2]
 8030750:	f7e0 fa92 	bl	8010c78 <nema_set_clip>
 8030754:	483b      	ldr	r0, [pc, #236]	@ (8030844 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x188>)
 8030756:	f7ec f95d 	bl	801ca14 <nema_vg_set_blend>
 803075a:	2002      	movs	r0, #2
 803075c:	f7ec f960 	bl	801ca20 <nema_vg_set_quality>
 8030760:	f7ed fa34 	bl	801dbcc <nema_cl_get_bound>
 8030764:	4b38      	ldr	r3, [pc, #224]	@ (8030848 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x18c>)
 8030766:	6018      	str	r0, [r3, #0]
 8030768:	a803      	add	r0, sp, #12
 803076a:	f7e1 f899 	bl	80118a0 <nema_mat3x3_load_identity>
 803076e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8030772:	a803      	add	r0, sp, #12
 8030774:	ee00 3a90 	vmov	s1, r3
 8030778:	f9b6 3000 	ldrsh.w	r3, [r6]
 803077c:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8030780:	ee00 3a10 	vmov	s0, r3
 8030784:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8030788:	f7e1 f8ac 	bl	80118e4 <nema_mat3x3_translate>
 803078c:	a803      	add	r0, sp, #12
 803078e:	f7ec f957 	bl	801ca40 <nema_vg_set_global_matrix>
 8030792:	b00c      	add	sp, #48	@ 0x30
 8030794:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8030798:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 803079a:	2800      	cmp	r0, #0
 803079c:	d0aa      	beq.n	80306f4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x38>
 803079e:	6803      	ldr	r3, [r0, #0]
 80307a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80307a2:	4798      	blx	r3
 80307a4:	2801      	cmp	r0, #1
 80307a6:	d1ab      	bne.n	8030700 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x44>
 80307a8:	4a21      	ldr	r2, [pc, #132]	@ (8030830 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 80307aa:	4b22      	ldr	r3, [pc, #136]	@ (8030834 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 80307ac:	8811      	ldrh	r1, [r2, #0]
 80307ae:	881a      	ldrh	r2, [r3, #0]
 80307b0:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 80307b4:	9300      	str	r3, [sp, #0]
 80307b6:	4640      	mov	r0, r8
 80307b8:	2339      	movs	r3, #57	@ 0x39
 80307ba:	f7e0 fbc7 	bl	8010f4c <nema_bind_dst_tex>
 80307be:	e7ad      	b.n	803071c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x60>
 80307c0:	4a1b      	ldr	r2, [pc, #108]	@ (8030830 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 80307c2:	4b1c      	ldr	r3, [pc, #112]	@ (8030834 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 80307c4:	8811      	ldrh	r1, [r2, #0]
 80307c6:	881a      	ldrh	r2, [r3, #0]
 80307c8:	004b      	lsls	r3, r1, #1
 80307ca:	9300      	str	r3, [sp, #0]
 80307cc:	4640      	mov	r0, r8
 80307ce:	2304      	movs	r3, #4
 80307d0:	f7e0 fbbc 	bl	8010f4c <nema_bind_dst_tex>
 80307d4:	e7a2      	b.n	803071c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x60>
 80307d6:	6823      	ldr	r3, [r4, #0]
 80307d8:	4620      	mov	r0, r4
 80307da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80307dc:	4798      	blx	r3
 80307de:	f8d4 803c 	ldr.w	r8, [r4, #60]	@ 0x3c
 80307e2:	683b      	ldr	r3, [r7, #0]
 80307e4:	4580      	cmp	r8, r0
 80307e6:	bf08      	it	eq
 80307e8:	f8d4 8040 	ldreq.w	r8, [r4, #64]	@ 0x40
 80307ec:	2b00      	cmp	r3, #0
 80307ee:	f47f af7b 	bne.w	80306e8 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x2c>
 80307f2:	4b16      	ldr	r3, [pc, #88]	@ (803084c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x190>)
 80307f4:	4a16      	ldr	r2, [pc, #88]	@ (8030850 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x194>)
 80307f6:	217c      	movs	r1, #124	@ 0x7c
 80307f8:	4816      	ldr	r0, [pc, #88]	@ (8030854 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x198>)
 80307fa:	f001 fe45 	bl	8032488 <__assert_func>
 80307fe:	f7ec f975 	bl	801caec <nema_vg_paint_create>
 8030802:	6020      	str	r0, [r4, #0]
 8030804:	f7ec fdc4 	bl	801d390 <nema_vg_path_create>
 8030808:	4b13      	ldr	r3, [pc, #76]	@ (8030858 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x19c>)
 803080a:	2101      	movs	r1, #1
 803080c:	6018      	str	r0, [r3, #0]
 803080e:	6820      	ldr	r0, [r4, #0]
 8030810:	f7ec f9a2 	bl	801cb58 <nema_vg_paint_lock_tran_to_path>
 8030814:	e789      	b.n	803072a <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x6e>
 8030816:	4b11      	ldr	r3, [pc, #68]	@ (803085c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a0>)
 8030818:	4a11      	ldr	r2, [pc, #68]	@ (8030860 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a4>)
 803081a:	212c      	movs	r1, #44	@ 0x2c
 803081c:	4811      	ldr	r0, [pc, #68]	@ (8030864 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a8>)
 803081e:	f001 fe33 	bl	8032488 <__assert_func>
 8030822:	bf00      	nop
 8030824:	20083364 	.word	0x20083364
 8030828:	20082ec2 	.word	0x20082ec2
 803082c:	20082ec4 	.word	0x20082ec4
 8030830:	20082ebe 	.word	0x20082ebe
 8030834:	20082ec0 	.word	0x20082ec0
 8030838:	200833f0 	.word	0x200833f0
 803083c:	200833c0 	.word	0x200833c0
 8030840:	200833f4 	.word	0x200833f4
 8030844:	04000501 	.word	0x04000501
 8030848:	200833e4 	.word	0x200833e4
 803084c:	080361a4 	.word	0x080361a4
 8030850:	0803819c 	.word	0x0803819c
 8030854:	080361cc 	.word	0x080361cc
 8030858:	200833ec 	.word	0x200833ec
 803085c:	08036200 	.word	0x08036200
 8030860:	0803813c 	.word	0x0803813c
 8030864:	08037f98 	.word	0x08037f98

08030868 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
 8030868:	2901      	cmp	r1, #1
 803086a:	d002      	beq.n	8030872 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0xa>
 803086c:	d305      	bcc.n	803087a <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0x12>
 803086e:	2902      	cmp	r1, #2
 8030870:	d102      	bne.n	8030878 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0x10>
 8030872:	4608      	mov	r0, r1
 8030874:	f7ec b8c0 	b.w	801c9f8 <nema_vg_set_fill_rule>
 8030878:	4770      	bx	lr
 803087a:	2000      	movs	r0, #0
 803087c:	f7ec b8bc 	b.w	801c9f8 <nema_vg_set_fill_rule>

08030880 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv>:
 8030880:	b510      	push	{r4, lr}
 8030882:	4b06      	ldr	r3, [pc, #24]	@ (803089c <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x1c>)
 8030884:	4c06      	ldr	r4, [pc, #24]	@ (80308a0 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x20>)
 8030886:	6818      	ldr	r0, [r3, #0]
 8030888:	f7ed fad2 	bl	801de30 <nema_cl_submit>
 803088c:	6820      	ldr	r0, [r4, #0]
 803088e:	b118      	cbz	r0, 8030898 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x18>
 8030890:	f7ec f988 	bl	801cba4 <nema_vg_grad_destroy>
 8030894:	2300      	movs	r3, #0
 8030896:	6023      	str	r3, [r4, #0]
 8030898:	bd10      	pop	{r4, pc}
 803089a:	bf00      	nop
 803089c:	200833e4 	.word	0x200833e4
 80308a0:	200833e8 	.word	0x200833e8

080308a4 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_>:
 80308a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80308a8:	4c13      	ldr	r4, [pc, #76]	@ (80308f8 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x54>)
 80308aa:	b083      	sub	sp, #12
 80308ac:	6820      	ldr	r0, [r4, #0]
 80308ae:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80308b0:	460f      	mov	r7, r1
 80308b2:	4616      	mov	r6, r2
 80308b4:	4699      	mov	r9, r3
 80308b6:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 80308ba:	f7ec fd61 	bl	801d380 <nema_vg_path_clear>
 80308be:	6820      	ldr	r0, [r4, #0]
 80308c0:	490e      	ldr	r1, [pc, #56]	@ (80308fc <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x58>)
 80308c2:	f7ec fdeb 	bl	801d49c <nema_vg_path_set_matrix>
 80308c6:	6820      	ldr	r0, [r4, #0]
 80308c8:	b175      	cbz	r5, 80308e8 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x44>
 80308ca:	e9cd 9500 	strd	r9, r5, [sp]
 80308ce:	4643      	mov	r3, r8
 80308d0:	463a      	mov	r2, r7
 80308d2:	4631      	mov	r1, r6
 80308d4:	f7ec fd64 	bl	801d3a0 <nema_vg_path_set_shape_and_bbox>
 80308d8:	4b09      	ldr	r3, [pc, #36]	@ (8030900 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x5c>)
 80308da:	6820      	ldr	r0, [r4, #0]
 80308dc:	6819      	ldr	r1, [r3, #0]
 80308de:	b003      	add	sp, #12
 80308e0:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80308e4:	f7e7 bd64 	b.w	80183b0 <nema_vg_draw_path>
 80308e8:	f8cd 9000 	str.w	r9, [sp]
 80308ec:	4643      	mov	r3, r8
 80308ee:	463a      	mov	r2, r7
 80308f0:	4631      	mov	r1, r6
 80308f2:	f7ec fdc5 	bl	801d480 <nema_vg_path_set_shape>
 80308f6:	e7ef      	b.n	80308d8 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
 80308f8:	200833ec 	.word	0x200833ec
 80308fc:	200833c0 	.word	0x200833c0
 8030900:	200833f0 	.word	0x200833f0

08030904 <_ZN8touchgfx19GPU2DVectorRenderer14setStrokeWidthEf>:
 8030904:	b510      	push	{r4, lr}
 8030906:	ed2d 8b02 	vpush	{d8}
 803090a:	eeb0 8a40 	vmov.f32	s16, s0
 803090e:	4c07      	ldr	r4, [pc, #28]	@ (803092c <_ZN8touchgfx19GPU2DVectorRenderer14setStrokeWidthEf+0x28>)
 8030910:	2100      	movs	r1, #0
 8030912:	6820      	ldr	r0, [r4, #0]
 8030914:	f7ec f914 	bl	801cb40 <nema_vg_paint_set_type>
 8030918:	eeb0 0a48 	vmov.f32	s0, s16
 803091c:	ecbd 8b02 	vpop	{d8}
 8030920:	6820      	ldr	r0, [r4, #0]
 8030922:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8030926:	f7ec bcbd 	b.w	801d2a4 <nema_vg_paint_set_stroke_width>
 803092a:	bf00      	nop
 803092c:	200833f0 	.word	0x200833f0

08030930 <_ZN8touchgfx19GPU2DVectorRenderer8setColorENS_9colortypeE>:
 8030930:	b538      	push	{r3, r4, r5, lr}
 8030932:	460c      	mov	r4, r1
 8030934:	4d09      	ldr	r5, [pc, #36]	@ (803095c <_ZN8touchgfx19GPU2DVectorRenderer8setColorENS_9colortypeE+0x2c>)
 8030936:	2100      	movs	r1, #0
 8030938:	6828      	ldr	r0, [r5, #0]
 803093a:	f7ec f901 	bl	801cb40 <nema_vg_paint_set_type>
 803093e:	f3c4 2107 	ubfx	r1, r4, #8, #8
 8030942:	0e23      	lsrs	r3, r4, #24
 8030944:	b2e2      	uxtb	r2, r4
 8030946:	f3c4 4007 	ubfx	r0, r4, #16, #8
 803094a:	682d      	ldr	r5, [r5, #0]
 803094c:	f7e0 fa72 	bl	8010e34 <nema_rgba>
 8030950:	4601      	mov	r1, r0
 8030952:	4628      	mov	r0, r5
 8030954:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8030958:	f7ec bc96 	b.w	801d288 <nema_vg_paint_set_paint_color>
 803095c:	200833f0 	.word	0x200833f0

08030960 <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh>:
 8030960:	29ff      	cmp	r1, #255	@ 0xff
 8030962:	d00b      	beq.n	803097c <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x1c>
 8030964:	ee07 1a90 	vmov	s15, r1
 8030968:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8030988 <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x28>
 803096c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030970:	4b06      	ldr	r3, [pc, #24]	@ (803098c <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x2c>)
 8030972:	ee87 0a87 	vdiv.f32	s0, s15, s14
 8030976:	6818      	ldr	r0, [r3, #0]
 8030978:	f7ec bc8c 	b.w	801d294 <nema_vg_paint_set_opacity>
 803097c:	4b03      	ldr	r3, [pc, #12]	@ (803098c <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x2c>)
 803097e:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8030982:	6818      	ldr	r0, [r3, #0]
 8030984:	f7ec bc86 	b.w	801d294 <nema_vg_paint_set_opacity>
 8030988:	437f0000 	.word	0x437f0000
 803098c:	200833f0 	.word	0x200833f0

08030990 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 8030990:	b570      	push	{r4, r5, r6, lr}
 8030992:	ed2d 8b08 	vpush	{d8-d11}
 8030996:	290a      	cmp	r1, #10
 8030998:	b0c4      	sub	sp, #272	@ 0x110
 803099a:	f200 8288 	bhi.w	8030eae <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x51e>
 803099e:	4dd8      	ldr	r5, [pc, #864]	@ (8030d00 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x370>)
 80309a0:	4616      	mov	r6, r2
 80309a2:	682a      	ldr	r2, [r5, #0]
 80309a4:	460c      	mov	r4, r1
 80309a6:	eeb0 9a40 	vmov.f32	s18, s0
 80309aa:	eef0 8a60 	vmov.f32	s17, s1
 80309ae:	eef0 aa41 	vmov.f32	s21, s2
 80309b2:	eeb0 8a61 	vmov.f32	s16, s3
 80309b6:	eef0 9a42 	vmov.f32	s19, s4
 80309ba:	eeb0 aa62 	vmov.f32	s20, s5
 80309be:	2a00      	cmp	r2, #0
 80309c0:	f000 8197 	beq.w	8030cf2 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x362>
 80309c4:	2c00      	cmp	r4, #0
 80309c6:	f000 8157 	beq.w	8030c78 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 80309ca:	681a      	ldr	r2, [r3, #0]
 80309cc:	2c01      	cmp	r4, #1
 80309ce:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80309d2:	ee06 1a10 	vmov	s12, r1
 80309d6:	f3c2 2107 	ubfx	r1, r2, #8, #8
 80309da:	ee06 1a90 	vmov	s13, r1
 80309de:	b2d1      	uxtb	r1, r2
 80309e0:	ea4f 6212 	mov.w	r2, r2, lsr #24
 80309e4:	ee07 1a10 	vmov	s14, r1
 80309e8:	ee07 2a90 	vmov	s15, r2
 80309ec:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 80309f0:	eef8 6a66 	vcvt.f32.u32	s13, s13
 80309f4:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 80309f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80309fc:	ed8d 6a1c 	vstr	s12, [sp, #112]	@ 0x70
 8030a00:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8030a04:	ed8d 7a1e 	vstr	s14, [sp, #120]	@ 0x78
 8030a08:	edcd 7a1f 	vstr	s15, [sp, #124]	@ 0x7c
 8030a0c:	f000 8134 	beq.w	8030c78 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030a10:	685a      	ldr	r2, [r3, #4]
 8030a12:	2c02      	cmp	r4, #2
 8030a14:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030a18:	ee06 1a10 	vmov	s12, r1
 8030a1c:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030a20:	ee06 1a90 	vmov	s13, r1
 8030a24:	b2d1      	uxtb	r1, r2
 8030a26:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030a2a:	ee07 1a10 	vmov	s14, r1
 8030a2e:	ee07 2a90 	vmov	s15, r2
 8030a32:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030a36:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030a3a:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030a3e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030a42:	ed8d 6a20 	vstr	s12, [sp, #128]	@ 0x80
 8030a46:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8030a4a:	ed8d 7a22 	vstr	s14, [sp, #136]	@ 0x88
 8030a4e:	edcd 7a23 	vstr	s15, [sp, #140]	@ 0x8c
 8030a52:	f000 8111 	beq.w	8030c78 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030a56:	689a      	ldr	r2, [r3, #8]
 8030a58:	2c03      	cmp	r4, #3
 8030a5a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030a5e:	ee06 1a10 	vmov	s12, r1
 8030a62:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030a66:	ee06 1a90 	vmov	s13, r1
 8030a6a:	b2d1      	uxtb	r1, r2
 8030a6c:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030a70:	ee07 1a10 	vmov	s14, r1
 8030a74:	ee07 2a90 	vmov	s15, r2
 8030a78:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030a7c:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030a80:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030a84:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030a88:	ed8d 6a24 	vstr	s12, [sp, #144]	@ 0x90
 8030a8c:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8030a90:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8030a94:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 8030a98:	f000 80ee 	beq.w	8030c78 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030a9c:	68da      	ldr	r2, [r3, #12]
 8030a9e:	2c04      	cmp	r4, #4
 8030aa0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030aa4:	ee06 1a10 	vmov	s12, r1
 8030aa8:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030aac:	ee06 1a90 	vmov	s13, r1
 8030ab0:	b2d1      	uxtb	r1, r2
 8030ab2:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030ab6:	ee07 1a10 	vmov	s14, r1
 8030aba:	ee07 2a90 	vmov	s15, r2
 8030abe:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030ac2:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030ac6:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030aca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030ace:	ed8d 6a28 	vstr	s12, [sp, #160]	@ 0xa0
 8030ad2:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8030ad6:	ed8d 7a2a 	vstr	s14, [sp, #168]	@ 0xa8
 8030ada:	edcd 7a2b 	vstr	s15, [sp, #172]	@ 0xac
 8030ade:	f000 80cb 	beq.w	8030c78 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030ae2:	691a      	ldr	r2, [r3, #16]
 8030ae4:	2c05      	cmp	r4, #5
 8030ae6:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030aea:	ee06 1a10 	vmov	s12, r1
 8030aee:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030af2:	ee06 1a90 	vmov	s13, r1
 8030af6:	b2d1      	uxtb	r1, r2
 8030af8:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030afc:	ee07 1a10 	vmov	s14, r1
 8030b00:	ee07 2a90 	vmov	s15, r2
 8030b04:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030b08:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030b0c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030b10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030b14:	ed8d 6a2c 	vstr	s12, [sp, #176]	@ 0xb0
 8030b18:	edcd 6a2d 	vstr	s13, [sp, #180]	@ 0xb4
 8030b1c:	ed8d 7a2e 	vstr	s14, [sp, #184]	@ 0xb8
 8030b20:	edcd 7a2f 	vstr	s15, [sp, #188]	@ 0xbc
 8030b24:	f000 80a8 	beq.w	8030c78 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030b28:	695a      	ldr	r2, [r3, #20]
 8030b2a:	2c06      	cmp	r4, #6
 8030b2c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030b30:	ee06 1a10 	vmov	s12, r1
 8030b34:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030b38:	ee06 1a90 	vmov	s13, r1
 8030b3c:	b2d1      	uxtb	r1, r2
 8030b3e:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030b42:	ee07 1a10 	vmov	s14, r1
 8030b46:	ee07 2a90 	vmov	s15, r2
 8030b4a:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030b4e:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030b52:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030b56:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030b5a:	ed8d 6a30 	vstr	s12, [sp, #192]	@ 0xc0
 8030b5e:	edcd 6a31 	vstr	s13, [sp, #196]	@ 0xc4
 8030b62:	ed8d 7a32 	vstr	s14, [sp, #200]	@ 0xc8
 8030b66:	edcd 7a33 	vstr	s15, [sp, #204]	@ 0xcc
 8030b6a:	f000 8085 	beq.w	8030c78 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030b6e:	699a      	ldr	r2, [r3, #24]
 8030b70:	2c07      	cmp	r4, #7
 8030b72:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030b76:	ee06 1a10 	vmov	s12, r1
 8030b7a:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030b7e:	ee06 1a90 	vmov	s13, r1
 8030b82:	b2d1      	uxtb	r1, r2
 8030b84:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030b88:	ee07 1a10 	vmov	s14, r1
 8030b8c:	ee07 2a90 	vmov	s15, r2
 8030b90:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030b94:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030b98:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030b9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030ba0:	ed8d 6a34 	vstr	s12, [sp, #208]	@ 0xd0
 8030ba4:	edcd 6a35 	vstr	s13, [sp, #212]	@ 0xd4
 8030ba8:	ed8d 7a36 	vstr	s14, [sp, #216]	@ 0xd8
 8030bac:	edcd 7a37 	vstr	s15, [sp, #220]	@ 0xdc
 8030bb0:	d062      	beq.n	8030c78 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030bb2:	69da      	ldr	r2, [r3, #28]
 8030bb4:	2c08      	cmp	r4, #8
 8030bb6:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030bba:	ee06 1a10 	vmov	s12, r1
 8030bbe:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030bc2:	ee06 1a90 	vmov	s13, r1
 8030bc6:	b2d1      	uxtb	r1, r2
 8030bc8:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030bcc:	ee07 1a10 	vmov	s14, r1
 8030bd0:	ee07 2a90 	vmov	s15, r2
 8030bd4:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030bd8:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030bdc:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030be0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030be4:	ed8d 6a38 	vstr	s12, [sp, #224]	@ 0xe0
 8030be8:	edcd 6a39 	vstr	s13, [sp, #228]	@ 0xe4
 8030bec:	ed8d 7a3a 	vstr	s14, [sp, #232]	@ 0xe8
 8030bf0:	edcd 7a3b 	vstr	s15, [sp, #236]	@ 0xec
 8030bf4:	d040      	beq.n	8030c78 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030bf6:	6a1a      	ldr	r2, [r3, #32]
 8030bf8:	2c09      	cmp	r4, #9
 8030bfa:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030bfe:	ee06 1a10 	vmov	s12, r1
 8030c02:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030c06:	ee06 1a90 	vmov	s13, r1
 8030c0a:	b2d1      	uxtb	r1, r2
 8030c0c:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030c10:	ee07 1a10 	vmov	s14, r1
 8030c14:	ee07 2a90 	vmov	s15, r2
 8030c18:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030c1c:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030c20:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030c24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030c28:	ed8d 6a3c 	vstr	s12, [sp, #240]	@ 0xf0
 8030c2c:	edcd 6a3d 	vstr	s13, [sp, #244]	@ 0xf4
 8030c30:	ed8d 7a3e 	vstr	s14, [sp, #248]	@ 0xf8
 8030c34:	edcd 7a3f 	vstr	s15, [sp, #252]	@ 0xfc
 8030c38:	d01e      	beq.n	8030c78 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030c3a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8030c3c:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8030c40:	ee06 2a10 	vmov	s12, r2
 8030c44:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8030c48:	ee06 2a90 	vmov	s13, r2
 8030c4c:	b2da      	uxtb	r2, r3
 8030c4e:	0e1b      	lsrs	r3, r3, #24
 8030c50:	ee07 2a10 	vmov	s14, r2
 8030c54:	ee07 3a90 	vmov	s15, r3
 8030c58:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030c5c:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030c60:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030c64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030c68:	ed8d 6a40 	vstr	s12, [sp, #256]	@ 0x100
 8030c6c:	edcd 6a41 	vstr	s13, [sp, #260]	@ 0x104
 8030c70:	ed8d 7a42 	vstr	s14, [sp, #264]	@ 0x108
 8030c74:	edcd 7a43 	vstr	s15, [sp, #268]	@ 0x10c
 8030c78:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8030c7c:	2100      	movs	r1, #0
 8030c7e:	461a      	mov	r2, r3
 8030c80:	4608      	mov	r0, r1
 8030c82:	f7df fff9 	bl	8010c78 <nema_set_clip>
 8030c86:	4621      	mov	r1, r4
 8030c88:	4632      	mov	r2, r6
 8030c8a:	ab1c      	add	r3, sp, #112	@ 0x70
 8030c8c:	6828      	ldr	r0, [r5, #0]
 8030c8e:	f7eb ff95 	bl	801cbbc <nema_vg_grad_set>
 8030c92:	481c      	ldr	r0, [pc, #112]	@ (8030d04 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x374>)
 8030c94:	4c1c      	ldr	r4, [pc, #112]	@ (8030d08 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x378>)
 8030c96:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8030c9a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8030c9e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8030ca2:	f9b0 0000 	ldrsh.w	r0, [r0]
 8030ca6:	f7df ffe7 	bl	8010c78 <nema_set_clip>
 8030caa:	6820      	ldr	r0, [r4, #0]
 8030cac:	2101      	movs	r1, #1
 8030cae:	f7eb ff47 	bl	801cb40 <nema_vg_paint_set_type>
 8030cb2:	eef4 9a4a 	vcmp.f32	s19, s20
 8030cb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030cba:	d009      	beq.n	8030cd0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x340>
 8030cbc:	eef4 8a48 	vcmp.f32	s17, s16
 8030cc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030cc4:	d004      	beq.n	8030cd0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x340>
 8030cc6:	eeb4 9a6a 	vcmp.f32	s18, s21
 8030cca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030cce:	d11f      	bne.n	8030d10 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x380>
 8030cd0:	eef0 1a48 	vmov.f32	s3, s16
 8030cd4:	eeb0 1a6a 	vmov.f32	s2, s21
 8030cd8:	eef0 0a68 	vmov.f32	s1, s17
 8030cdc:	eeb0 0a49 	vmov.f32	s0, s18
 8030ce0:	6829      	ldr	r1, [r5, #0]
 8030ce2:	6820      	ldr	r0, [r4, #0]
 8030ce4:	2201      	movs	r2, #1
 8030ce6:	f7ec fa11 	bl	801d10c <nema_vg_paint_set_grad_linear>
 8030cea:	b044      	add	sp, #272	@ 0x110
 8030cec:	ecbd 8b08 	vpop	{d8-d11}
 8030cf0:	bd70      	pop	{r4, r5, r6, pc}
 8030cf2:	9301      	str	r3, [sp, #4]
 8030cf4:	f7eb ff42 	bl	801cb7c <nema_vg_grad_create>
 8030cf8:	9b01      	ldr	r3, [sp, #4]
 8030cfa:	6028      	str	r0, [r5, #0]
 8030cfc:	e662      	b.n	80309c4 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x34>
 8030cfe:	bf00      	nop
 8030d00:	200833e8 	.word	0x200833e8
 8030d04:	200833f4 	.word	0x200833f4
 8030d08:	200833f0 	.word	0x200833f0
 8030d0c:	42c80000 	.word	0x42c80000
 8030d10:	ed1f ba02 	vldr	s22, [pc, #-8]	@ 8030d0c <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x37c>
 8030d14:	a813      	add	r0, sp, #76	@ 0x4c
 8030d16:	f7dd fcfe 	bl	800e716 <_ZN8touchgfx9Matrix3x3C1Ev>
 8030d1a:	a813      	add	r0, sp, #76	@ 0x4c
 8030d1c:	f7dd fcee 	bl	800e6fc <_ZN8touchgfx9Matrix3x35resetEv>
 8030d20:	ee8b 0a29 	vdiv.f32	s0, s22, s19
 8030d24:	eecb 0a0a 	vdiv.f32	s1, s22, s20
 8030d28:	a813      	add	r0, sp, #76	@ 0x4c
 8030d2a:	f7dd fcf8 	bl	800e71e <_ZN8touchgfx9Matrix3x35scaleEff>
 8030d2e:	a813      	add	r0, sp, #76	@ 0x4c
 8030d30:	a903      	add	r1, sp, #12
 8030d32:	edcd aa05 	vstr	s21, [sp, #20]
 8030d36:	ed8d 9a03 	vstr	s18, [sp, #12]
 8030d3a:	ed8d 8a06 	vstr	s16, [sp, #24]
 8030d3e:	edcd 8a04 	vstr	s17, [sp, #16]
 8030d42:	f7dd fd8a 	bl	800e85a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030d46:	a905      	add	r1, sp, #20
 8030d48:	a813      	add	r0, sp, #76	@ 0x4c
 8030d4a:	eef0 aa40 	vmov.f32	s21, s0
 8030d4e:	eeb0 9a60 	vmov.f32	s18, s1
 8030d52:	f7dd fd82 	bl	800e85a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030d56:	ee30 6ac9 	vsub.f32	s12, s1, s18
 8030d5a:	ee70 5a6a 	vsub.f32	s11, s0, s21
 8030d5e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8030d62:	ee86 5a25 	vdiv.f32	s10, s12, s11
 8030d66:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8030d6a:	ee87 7a85 	vdiv.f32	s14, s15, s10
 8030d6e:	eea6 9a26 	vfma.f32	s18, s12, s13
 8030d72:	ee77 0a20 	vadd.f32	s1, s14, s1
 8030d76:	ee70 7a27 	vadd.f32	s15, s0, s15
 8030d7a:	eee5 aaa6 	vfma.f32	s21, s11, s13
 8030d7e:	a813      	add	r0, sp, #76	@ 0x4c
 8030d80:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 8030d84:	ed8d 9a0c 	vstr	s18, [sp, #48]	@ 0x30
 8030d88:	edcd 0a0e 	vstr	s1, [sp, #56]	@ 0x38
 8030d8c:	edcd aa0b 	vstr	s21, [sp, #44]	@ 0x2c
 8030d90:	f7dd fcb4 	bl	800e6fc <_ZN8touchgfx9Matrix3x35resetEv>
 8030d94:	ee89 0a8b 	vdiv.f32	s0, s19, s22
 8030d98:	eeca 0a0b 	vdiv.f32	s1, s20, s22
 8030d9c:	a813      	add	r0, sp, #76	@ 0x4c
 8030d9e:	f7dd fcbe 	bl	800e71e <_ZN8touchgfx9Matrix3x35scaleEff>
 8030da2:	a813      	add	r0, sp, #76	@ 0x4c
 8030da4:	a90d      	add	r1, sp, #52	@ 0x34
 8030da6:	f7dd fd58 	bl	800e85a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030daa:	a813      	add	r0, sp, #76	@ 0x4c
 8030dac:	a90b      	add	r1, sp, #44	@ 0x2c
 8030dae:	ed8d 0a0f 	vstr	s0, [sp, #60]	@ 0x3c
 8030db2:	edcd 0a10 	vstr	s1, [sp, #64]	@ 0x40
 8030db6:	f7dd fd50 	bl	800e85a <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030dba:	eddd 7a04 	vldr	s15, [sp, #16]
 8030dbe:	ed9d 6a06 	vldr	s12, [sp, #24]
 8030dc2:	ed9d 7a03 	vldr	s14, [sp, #12]
 8030dc6:	ee76 7a67 	vsub.f32	s15, s12, s15
 8030dca:	eddd 6a05 	vldr	s13, [sp, #20]
 8030dce:	eef0 9a40 	vmov.f32	s19, s0
 8030dd2:	ee27 0aa7 	vmul.f32	s0, s15, s15
 8030dd6:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8030dda:	eea7 0aa7 	vfma.f32	s0, s15, s15
 8030dde:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8030de2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030de6:	eeb0 aa60 	vmov.f32	s20, s1
 8030dea:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8030dee:	d457      	bmi.n	8030ea0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x510>
 8030df0:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8030df4:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 8030df8:	ee37 7a46 	vsub.f32	s14, s14, s12
 8030dfc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8030e00:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8030e04:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8030e08:	eec6 aa26 	vdiv.f32	s21, s12, s13
 8030e0c:	eeb0 0a6a 	vmov.f32	s0, s21
 8030e10:	f000 f9f4 	bl	80311fc <atanf>
 8030e14:	eef0 ba40 	vmov.f32	s23, s0
 8030e18:	f000 fac4 	bl	80313a4 <cosf>
 8030e1c:	ee29 ba00 	vmul.f32	s22, s18, s0
 8030e20:	eeb0 0a6b 	vmov.f32	s0, s23
 8030e24:	f000 fb0a 	bl	803143c <sinf>
 8030e28:	eef5 aac0 	vcmpe.f32	s21, #0.0
 8030e2c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8030e30:	ee29 9a00 	vmul.f32	s18, s18, s0
 8030e34:	eef0 0a4a 	vmov.f32	s1, s20
 8030e38:	eeb0 0a69 	vmov.f32	s0, s19
 8030e3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030e40:	eeab 0a27 	vfma.f32	s0, s22, s15
 8030e44:	eeeb 9a67 	vfms.f32	s19, s22, s15
 8030e48:	eee9 0a27 	vfma.f32	s1, s18, s15
 8030e4c:	eea9 aa67 	vfms.f32	s20, s18, s15
 8030e50:	dc0b      	bgt.n	8030e6a <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x4da>
 8030e52:	eeb0 7a4a 	vmov.f32	s14, s20
 8030e56:	eef0 7a69 	vmov.f32	s15, s19
 8030e5a:	eeb0 aa60 	vmov.f32	s20, s1
 8030e5e:	eef0 9a40 	vmov.f32	s19, s0
 8030e62:	eef0 0a47 	vmov.f32	s1, s14
 8030e66:	eeb0 0a67 	vmov.f32	s0, s15
 8030e6a:	eef4 8ac8 	vcmpe.f32	s17, s16
 8030e6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030e72:	6820      	ldr	r0, [r4, #0]
 8030e74:	6829      	ldr	r1, [r5, #0]
 8030e76:	d50b      	bpl.n	8030e90 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x500>
 8030e78:	eef0 1a60 	vmov.f32	s3, s1
 8030e7c:	eeb0 1a40 	vmov.f32	s2, s0
 8030e80:	eef0 0a4a 	vmov.f32	s1, s20
 8030e84:	eeb0 0a69 	vmov.f32	s0, s19
 8030e88:	2201      	movs	r2, #1
 8030e8a:	f7ec f93f 	bl	801d10c <nema_vg_paint_set_grad_linear>
 8030e8e:	e72c      	b.n	8030cea <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x35a>
 8030e90:	eef0 1a4a 	vmov.f32	s3, s20
 8030e94:	eeb0 1a69 	vmov.f32	s2, s19
 8030e98:	2201      	movs	r2, #1
 8030e9a:	f7ec f937 	bl	801d10c <nema_vg_paint_set_grad_linear>
 8030e9e:	e724      	b.n	8030cea <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x35a>
 8030ea0:	f000 f98e 	bl	80311c0 <sqrtf>
 8030ea4:	ed9d 6a06 	vldr	s12, [sp, #24]
 8030ea8:	eddd 6a05 	vldr	s13, [sp, #20]
 8030eac:	e7a0      	b.n	8030df0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x460>
 8030eae:	4b03      	ldr	r3, [pc, #12]	@ (8030ebc <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x52c>)
 8030eb0:	4a03      	ldr	r2, [pc, #12]	@ (8030ec0 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x530>)
 8030eb2:	2194      	movs	r1, #148	@ 0x94
 8030eb4:	4803      	ldr	r0, [pc, #12]	@ (8030ec4 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x534>)
 8030eb6:	f001 fae7 	bl	8032488 <__assert_func>
 8030eba:	bf00      	nop
 8030ebc:	08037f80 	.word	0x08037f80
 8030ec0:	0803800c 	.word	0x0803800c
 8030ec4:	08037f98 	.word	0x08037f98

08030ec8 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE>:
 8030ec8:	b530      	push	{r4, r5, lr}
 8030eca:	ed2d 8b04 	vpush	{d8-d9}
 8030ece:	2905      	cmp	r1, #5
 8030ed0:	b099      	sub	sp, #100	@ 0x64
 8030ed2:	f200 80db 	bhi.w	803108c <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1c4>
 8030ed6:	4d70      	ldr	r5, [pc, #448]	@ (8031098 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d0>)
 8030ed8:	eeb0 8a40 	vmov.f32	s16, s0
 8030edc:	6828      	ldr	r0, [r5, #0]
 8030ede:	eef0 8a60 	vmov.f32	s17, s1
 8030ee2:	eeb0 9a41 	vmov.f32	s18, s2
 8030ee6:	2800      	cmp	r0, #0
 8030ee8:	f000 80c6 	beq.w	8031078 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1b0>
 8030eec:	2900      	cmp	r1, #0
 8030eee:	f000 80ac 	beq.w	803104a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8030ef2:	681c      	ldr	r4, [r3, #0]
 8030ef4:	2901      	cmp	r1, #1
 8030ef6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8030efa:	ee06 ca10 	vmov	s12, ip
 8030efe:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8030f02:	ee06 ca90 	vmov	s13, ip
 8030f06:	fa5f fc84 	uxtb.w	ip, r4
 8030f0a:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8030f0e:	ee07 ca10 	vmov	s14, ip
 8030f12:	ee07 4a90 	vmov	s15, r4
 8030f16:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030f1a:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030f1e:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030f22:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030f26:	ed8d 6a04 	vstr	s12, [sp, #16]
 8030f2a:	edcd 6a05 	vstr	s13, [sp, #20]
 8030f2e:	ed8d 7a06 	vstr	s14, [sp, #24]
 8030f32:	edcd 7a07 	vstr	s15, [sp, #28]
 8030f36:	f000 8088 	beq.w	803104a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8030f3a:	685c      	ldr	r4, [r3, #4]
 8030f3c:	2902      	cmp	r1, #2
 8030f3e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8030f42:	ee06 ca10 	vmov	s12, ip
 8030f46:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8030f4a:	ee06 ca90 	vmov	s13, ip
 8030f4e:	fa5f fc84 	uxtb.w	ip, r4
 8030f52:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8030f56:	ee07 ca10 	vmov	s14, ip
 8030f5a:	ee07 4a90 	vmov	s15, r4
 8030f5e:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030f62:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030f66:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030f6a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030f6e:	ed8d 6a08 	vstr	s12, [sp, #32]
 8030f72:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8030f76:	ed8d 7a0a 	vstr	s14, [sp, #40]	@ 0x28
 8030f7a:	edcd 7a0b 	vstr	s15, [sp, #44]	@ 0x2c
 8030f7e:	d064      	beq.n	803104a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8030f80:	689c      	ldr	r4, [r3, #8]
 8030f82:	2903      	cmp	r1, #3
 8030f84:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8030f88:	ee06 ca10 	vmov	s12, ip
 8030f8c:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8030f90:	ee06 ca90 	vmov	s13, ip
 8030f94:	fa5f fc84 	uxtb.w	ip, r4
 8030f98:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8030f9c:	ee07 ca10 	vmov	s14, ip
 8030fa0:	ee07 4a90 	vmov	s15, r4
 8030fa4:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030fa8:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030fac:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030fb0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030fb4:	ed8d 6a0c 	vstr	s12, [sp, #48]	@ 0x30
 8030fb8:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8030fbc:	ed8d 7a0e 	vstr	s14, [sp, #56]	@ 0x38
 8030fc0:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 8030fc4:	d041      	beq.n	803104a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8030fc6:	68dc      	ldr	r4, [r3, #12]
 8030fc8:	2904      	cmp	r1, #4
 8030fca:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8030fce:	ee06 ca10 	vmov	s12, ip
 8030fd2:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8030fd6:	ee06 ca90 	vmov	s13, ip
 8030fda:	fa5f fc84 	uxtb.w	ip, r4
 8030fde:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8030fe2:	ee07 ca10 	vmov	s14, ip
 8030fe6:	ee07 4a90 	vmov	s15, r4
 8030fea:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030fee:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030ff2:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030ff6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030ffa:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8030ffe:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8031002:	ed8d 7a12 	vstr	s14, [sp, #72]	@ 0x48
 8031006:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 803100a:	d01e      	beq.n	803104a <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 803100c:	691b      	ldr	r3, [r3, #16]
 803100e:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8031012:	ee06 4a10 	vmov	s12, r4
 8031016:	f3c3 2407 	ubfx	r4, r3, #8, #8
 803101a:	ee06 4a90 	vmov	s13, r4
 803101e:	b2dc      	uxtb	r4, r3
 8031020:	0e1b      	lsrs	r3, r3, #24
 8031022:	ee07 4a10 	vmov	s14, r4
 8031026:	ee07 3a90 	vmov	s15, r3
 803102a:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 803102e:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8031032:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8031036:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803103a:	ed8d 6a14 	vstr	s12, [sp, #80]	@ 0x50
 803103e:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 8031042:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 8031046:	edcd 7a17 	vstr	s15, [sp, #92]	@ 0x5c
 803104a:	4c14      	ldr	r4, [pc, #80]	@ (803109c <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d4>)
 803104c:	ab04      	add	r3, sp, #16
 803104e:	f7eb fdb5 	bl	801cbbc <nema_vg_grad_set>
 8031052:	6820      	ldr	r0, [r4, #0]
 8031054:	2103      	movs	r1, #3
 8031056:	f7eb fd73 	bl	801cb40 <nema_vg_paint_set_type>
 803105a:	6820      	ldr	r0, [r4, #0]
 803105c:	eeb0 1a49 	vmov.f32	s2, s18
 8031060:	eef0 0a68 	vmov.f32	s1, s17
 8031064:	eeb0 0a48 	vmov.f32	s0, s16
 8031068:	6829      	ldr	r1, [r5, #0]
 803106a:	2201      	movs	r2, #1
 803106c:	f7ec f8be 	bl	801d1ec <nema_vg_paint_set_grad_radial>
 8031070:	b019      	add	sp, #100	@ 0x64
 8031072:	ecbd 8b04 	vpop	{d8-d9}
 8031076:	bd30      	pop	{r4, r5, pc}
 8031078:	e9cd 2302 	strd	r2, r3, [sp, #8]
 803107c:	9101      	str	r1, [sp, #4]
 803107e:	f7eb fd7d 	bl	801cb7c <nema_vg_grad_create>
 8031082:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8031086:	6028      	str	r0, [r5, #0]
 8031088:	9901      	ldr	r1, [sp, #4]
 803108a:	e72f      	b.n	8030eec <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x24>
 803108c:	4b04      	ldr	r3, [pc, #16]	@ (80310a0 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d8>)
 803108e:	4a05      	ldr	r2, [pc, #20]	@ (80310a4 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1dc>)
 8031090:	21ed      	movs	r1, #237	@ 0xed
 8031092:	4805      	ldr	r0, [pc, #20]	@ (80310a8 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1e0>)
 8031094:	f001 f9f8 	bl	8032488 <__assert_func>
 8031098:	200833e8 	.word	0x200833e8
 803109c:	200833f0 	.word	0x200833f0
 80310a0:	08037f8c 	.word	0x08037f8c
 80310a4:	080380b4 	.word	0x080380b4
 80310a8:	08037f98 	.word	0x08037f98

080310ac <_ZN8touchgfx19GPU2DVectorRendererD0Ev>:
 80310ac:	b510      	push	{r4, lr}
 80310ae:	4604      	mov	r4, r0
 80310b0:	2104      	movs	r1, #4
 80310b2:	f000 f810 	bl	80310d6 <_ZdlPvj>
 80310b6:	4620      	mov	r0, r4
 80310b8:	bd10      	pop	{r4, pc}
 80310ba:	bf00      	nop

080310bc <_GLOBAL__sub_I__ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_>:
 80310bc:	2200      	movs	r2, #0
 80310be:	4b02      	ldr	r3, [pc, #8]	@ (80310c8 <_GLOBAL__sub_I__ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xc>)
 80310c0:	e9c3 2200 	strd	r2, r2, [r3]
 80310c4:	4770      	bx	lr
 80310c6:	bf00      	nop
 80310c8:	200833f4 	.word	0x200833f4

080310cc <__aeabi_atexit>:
 80310cc:	460b      	mov	r3, r1
 80310ce:	4601      	mov	r1, r0
 80310d0:	4618      	mov	r0, r3
 80310d2:	f001 babb 	b.w	803264c <__cxa_atexit>

080310d6 <_ZdlPvj>:
 80310d6:	f000 b812 	b.w	80310fe <_ZdlPv>

080310da <__cxa_guard_acquire>:
 80310da:	6802      	ldr	r2, [r0, #0]
 80310dc:	4603      	mov	r3, r0
 80310de:	07d2      	lsls	r2, r2, #31
 80310e0:	d405      	bmi.n	80310ee <__cxa_guard_acquire+0x14>
 80310e2:	7842      	ldrb	r2, [r0, #1]
 80310e4:	b102      	cbz	r2, 80310e8 <__cxa_guard_acquire+0xe>
 80310e6:	deff      	udf	#255	@ 0xff
 80310e8:	2001      	movs	r0, #1
 80310ea:	7058      	strb	r0, [r3, #1]
 80310ec:	4770      	bx	lr
 80310ee:	2000      	movs	r0, #0
 80310f0:	4770      	bx	lr

080310f2 <__cxa_guard_release>:
 80310f2:	2301      	movs	r3, #1
 80310f4:	6003      	str	r3, [r0, #0]
 80310f6:	4770      	bx	lr

080310f8 <__cxa_pure_virtual>:
 80310f8:	b508      	push	{r3, lr}
 80310fa:	f000 f80d 	bl	8031118 <_ZSt9terminatev>

080310fe <_ZdlPv>:
 80310fe:	f001 b9ef 	b.w	80324e0 <free>

08031102 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8031102:	b508      	push	{r3, lr}
 8031104:	4780      	blx	r0
 8031106:	f001 f9b8 	bl	803247a <abort>
	...

0803110c <_ZSt13get_terminatev>:
 803110c:	4b01      	ldr	r3, [pc, #4]	@ (8031114 <_ZSt13get_terminatev+0x8>)
 803110e:	e8d3 0faf 	lda	r0, [r3]
 8031112:	4770      	bx	lr
 8031114:	20000244 	.word	0x20000244

08031118 <_ZSt9terminatev>:
 8031118:	b508      	push	{r3, lr}
 803111a:	f7ff fff7 	bl	803110c <_ZSt13get_terminatev>
 803111e:	f7ff fff0 	bl	8031102 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08031124 <acosf>:
 8031124:	b508      	push	{r3, lr}
 8031126:	ed2d 8b02 	vpush	{d8}
 803112a:	eeb0 8a40 	vmov.f32	s16, s0
 803112e:	f000 fb81 	bl	8031834 <__ieee754_acosf>
 8031132:	eef0 8a40 	vmov.f32	s17, s0
 8031136:	eeb4 8a48 	vcmp.f32	s16, s16
 803113a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803113e:	d615      	bvs.n	803116c <acosf+0x48>
 8031140:	eeb0 0a48 	vmov.f32	s0, s16
 8031144:	f000 f972 	bl	803142c <fabsf>
 8031148:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 803114c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8031150:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031154:	dd0a      	ble.n	803116c <acosf+0x48>
 8031156:	f001 fc53 	bl	8032a00 <__errno>
 803115a:	2321      	movs	r3, #33	@ 0x21
 803115c:	ecbd 8b02 	vpop	{d8}
 8031160:	6003      	str	r3, [r0, #0]
 8031162:	4805      	ldr	r0, [pc, #20]	@ (8031178 <acosf+0x54>)
 8031164:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8031168:	f000 b9da 	b.w	8031520 <nanf>
 803116c:	eeb0 0a68 	vmov.f32	s0, s17
 8031170:	ecbd 8b02 	vpop	{d8}
 8031174:	bd08      	pop	{r3, pc}
 8031176:	bf00      	nop
 8031178:	08038627 	.word	0x08038627

0803117c <atan2f>:
 803117c:	f000 bc52 	b.w	8031a24 <__ieee754_atan2f>

08031180 <fmodf>:
 8031180:	b508      	push	{r3, lr}
 8031182:	ed2d 8b02 	vpush	{d8}
 8031186:	eef0 8a40 	vmov.f32	s17, s0
 803118a:	eeb0 8a60 	vmov.f32	s16, s1
 803118e:	f000 fce7 	bl	8031b60 <__ieee754_fmodf>
 8031192:	eef4 8a48 	vcmp.f32	s17, s16
 8031196:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803119a:	d60c      	bvs.n	80311b6 <fmodf+0x36>
 803119c:	eddf 8a07 	vldr	s17, [pc, #28]	@ 80311bc <fmodf+0x3c>
 80311a0:	eeb4 8a68 	vcmp.f32	s16, s17
 80311a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80311a8:	d105      	bne.n	80311b6 <fmodf+0x36>
 80311aa:	f001 fc29 	bl	8032a00 <__errno>
 80311ae:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80311b2:	2321      	movs	r3, #33	@ 0x21
 80311b4:	6003      	str	r3, [r0, #0]
 80311b6:	ecbd 8b02 	vpop	{d8}
 80311ba:	bd08      	pop	{r3, pc}
 80311bc:	00000000 	.word	0x00000000

080311c0 <sqrtf>:
 80311c0:	b508      	push	{r3, lr}
 80311c2:	ed2d 8b02 	vpush	{d8}
 80311c6:	eeb0 8a40 	vmov.f32	s16, s0
 80311ca:	f000 f9af 	bl	803152c <__ieee754_sqrtf>
 80311ce:	eeb4 8a48 	vcmp.f32	s16, s16
 80311d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80311d6:	d60c      	bvs.n	80311f2 <sqrtf+0x32>
 80311d8:	eddf 8a07 	vldr	s17, [pc, #28]	@ 80311f8 <sqrtf+0x38>
 80311dc:	eeb4 8ae8 	vcmpe.f32	s16, s17
 80311e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80311e4:	d505      	bpl.n	80311f2 <sqrtf+0x32>
 80311e6:	f001 fc0b 	bl	8032a00 <__errno>
 80311ea:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80311ee:	2321      	movs	r3, #33	@ 0x21
 80311f0:	6003      	str	r3, [r0, #0]
 80311f2:	ecbd 8b02 	vpop	{d8}
 80311f6:	bd08      	pop	{r3, pc}
 80311f8:	00000000 	.word	0x00000000

080311fc <atanf>:
 80311fc:	b538      	push	{r3, r4, r5, lr}
 80311fe:	ee10 5a10 	vmov	r5, s0
 8031202:	eef0 7a40 	vmov.f32	s15, s0
 8031206:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 803120a:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 803120e:	d30f      	bcc.n	8031230 <atanf+0x34>
 8031210:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8031214:	d904      	bls.n	8031220 <atanf+0x24>
 8031216:	ee70 7a00 	vadd.f32	s15, s0, s0
 803121a:	eeb0 0a67 	vmov.f32	s0, s15
 803121e:	bd38      	pop	{r3, r4, r5, pc}
 8031220:	2d00      	cmp	r5, #0
 8031222:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8031358 <atanf+0x15c>
 8031226:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 803135c <atanf+0x160>
 803122a:	fe77 7a27 	vselgt.f32	s15, s14, s15
 803122e:	e7f4      	b.n	803121a <atanf+0x1e>
 8031230:	4b4b      	ldr	r3, [pc, #300]	@ (8031360 <atanf+0x164>)
 8031232:	429c      	cmp	r4, r3
 8031234:	d810      	bhi.n	8031258 <atanf+0x5c>
 8031236:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 803123a:	d20a      	bcs.n	8031252 <atanf+0x56>
 803123c:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8031364 <atanf+0x168>
 8031240:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8031244:	ee30 7a07 	vadd.f32	s14, s0, s14
 8031248:	eeb4 7ae6 	vcmpe.f32	s14, s13
 803124c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031250:	dce3      	bgt.n	803121a <atanf+0x1e>
 8031252:	f04f 33ff 	mov.w	r3, #4294967295
 8031256:	e013      	b.n	8031280 <atanf+0x84>
 8031258:	f000 f8e8 	bl	803142c <fabsf>
 803125c:	4b42      	ldr	r3, [pc, #264]	@ (8031368 <atanf+0x16c>)
 803125e:	429c      	cmp	r4, r3
 8031260:	d84f      	bhi.n	8031302 <atanf+0x106>
 8031262:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8031266:	429c      	cmp	r4, r3
 8031268:	d841      	bhi.n	80312ee <atanf+0xf2>
 803126a:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 803126e:	2300      	movs	r3, #0
 8031270:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8031274:	eea0 7a27 	vfma.f32	s14, s0, s15
 8031278:	ee30 0a27 	vadd.f32	s0, s0, s15
 803127c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031280:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 803136c <atanf+0x170>
 8031284:	1c5a      	adds	r2, r3, #1
 8031286:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8031370 <atanf+0x174>
 803128a:	ed9f 5a3a 	vldr	s10, [pc, #232]	@ 8031374 <atanf+0x178>
 803128e:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8031292:	ee66 6a06 	vmul.f32	s13, s12, s12
 8031296:	eee6 5a87 	vfma.f32	s11, s13, s14
 803129a:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 8031378 <atanf+0x17c>
 803129e:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80312a2:	eddf 5a36 	vldr	s11, [pc, #216]	@ 803137c <atanf+0x180>
 80312a6:	eee7 5a26 	vfma.f32	s11, s14, s13
 80312aa:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 8031380 <atanf+0x184>
 80312ae:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80312b2:	eddf 5a34 	vldr	s11, [pc, #208]	@ 8031384 <atanf+0x188>
 80312b6:	eee7 5a26 	vfma.f32	s11, s14, s13
 80312ba:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 8031388 <atanf+0x18c>
 80312be:	eea6 5a87 	vfma.f32	s10, s13, s14
 80312c2:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 803138c <atanf+0x190>
 80312c6:	eea5 7a26 	vfma.f32	s14, s10, s13
 80312ca:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 8031390 <atanf+0x194>
 80312ce:	eea7 5a26 	vfma.f32	s10, s14, s13
 80312d2:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8031394 <atanf+0x198>
 80312d6:	eea5 7a26 	vfma.f32	s14, s10, s13
 80312da:	ee27 7a26 	vmul.f32	s14, s14, s13
 80312de:	eea5 7a86 	vfma.f32	s14, s11, s12
 80312e2:	ee27 7a87 	vmul.f32	s14, s15, s14
 80312e6:	d121      	bne.n	803132c <atanf+0x130>
 80312e8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80312ec:	e795      	b.n	803121a <atanf+0x1e>
 80312ee:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80312f2:	2301      	movs	r3, #1
 80312f4:	ee30 7a67 	vsub.f32	s14, s0, s15
 80312f8:	ee30 0a27 	vadd.f32	s0, s0, s15
 80312fc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031300:	e7be      	b.n	8031280 <atanf+0x84>
 8031302:	4b25      	ldr	r3, [pc, #148]	@ (8031398 <atanf+0x19c>)
 8031304:	429c      	cmp	r4, r3
 8031306:	d80b      	bhi.n	8031320 <atanf+0x124>
 8031308:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 803130c:	2302      	movs	r3, #2
 803130e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031312:	ee70 6a67 	vsub.f32	s13, s0, s15
 8031316:	eea0 7a27 	vfma.f32	s14, s0, s15
 803131a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 803131e:	e7af      	b.n	8031280 <atanf+0x84>
 8031320:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8031324:	2303      	movs	r3, #3
 8031326:	eec7 7a00 	vdiv.f32	s15, s14, s0
 803132a:	e7a9      	b.n	8031280 <atanf+0x84>
 803132c:	4a1b      	ldr	r2, [pc, #108]	@ (803139c <atanf+0x1a0>)
 803132e:	2d00      	cmp	r5, #0
 8031330:	491b      	ldr	r1, [pc, #108]	@ (80313a0 <atanf+0x1a4>)
 8031332:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8031336:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 803133a:	edd3 6a00 	vldr	s13, [r3]
 803133e:	ee37 7a66 	vsub.f32	s14, s14, s13
 8031342:	ee37 7a67 	vsub.f32	s14, s14, s15
 8031346:	edd2 7a00 	vldr	s15, [r2]
 803134a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 803134e:	bfb8      	it	lt
 8031350:	eef1 7a67 	vneglt.f32	s15, s15
 8031354:	e761      	b.n	803121a <atanf+0x1e>
 8031356:	bf00      	nop
 8031358:	bfc90fdb 	.word	0xbfc90fdb
 803135c:	3fc90fdb 	.word	0x3fc90fdb
 8031360:	3edfffff 	.word	0x3edfffff
 8031364:	7149f2ca 	.word	0x7149f2ca
 8031368:	3f97ffff 	.word	0x3f97ffff
 803136c:	3c8569d7 	.word	0x3c8569d7
 8031370:	3d4bda59 	.word	0x3d4bda59
 8031374:	bd6ef16b 	.word	0xbd6ef16b
 8031378:	3d886b35 	.word	0x3d886b35
 803137c:	3dba2e6e 	.word	0x3dba2e6e
 8031380:	3e124925 	.word	0x3e124925
 8031384:	3eaaaaab 	.word	0x3eaaaaab
 8031388:	bd15a221 	.word	0xbd15a221
 803138c:	bd9d8795 	.word	0xbd9d8795
 8031390:	bde38e38 	.word	0xbde38e38
 8031394:	be4ccccd 	.word	0xbe4ccccd
 8031398:	401bffff 	.word	0x401bffff
 803139c:	080381ec 	.word	0x080381ec
 80313a0:	080381dc 	.word	0x080381dc

080313a4 <cosf>:
 80313a4:	ee10 3a10 	vmov	r3, s0
 80313a8:	b507      	push	{r0, r1, r2, lr}
 80313aa:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80313ae:	4a1d      	ldr	r2, [pc, #116]	@ (8031424 <cosf+0x80>)
 80313b0:	4293      	cmp	r3, r2
 80313b2:	d806      	bhi.n	80313c2 <cosf+0x1e>
 80313b4:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8031428 <cosf+0x84>
 80313b8:	b003      	add	sp, #12
 80313ba:	f85d eb04 	ldr.w	lr, [sp], #4
 80313be:	f000 b8b9 	b.w	8031534 <__kernel_cosf>
 80313c2:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80313c6:	d304      	bcc.n	80313d2 <cosf+0x2e>
 80313c8:	ee30 0a40 	vsub.f32	s0, s0, s0
 80313cc:	b003      	add	sp, #12
 80313ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80313d2:	4668      	mov	r0, sp
 80313d4:	f000 fc48 	bl	8031c68 <__ieee754_rem_pio2f>
 80313d8:	f000 0003 	and.w	r0, r0, #3
 80313dc:	2801      	cmp	r0, #1
 80313de:	d009      	beq.n	80313f4 <cosf+0x50>
 80313e0:	2802      	cmp	r0, #2
 80313e2:	d010      	beq.n	8031406 <cosf+0x62>
 80313e4:	b9b0      	cbnz	r0, 8031414 <cosf+0x70>
 80313e6:	eddd 0a01 	vldr	s1, [sp, #4]
 80313ea:	ed9d 0a00 	vldr	s0, [sp]
 80313ee:	f000 f8a1 	bl	8031534 <__kernel_cosf>
 80313f2:	e7eb      	b.n	80313cc <cosf+0x28>
 80313f4:	eddd 0a01 	vldr	s1, [sp, #4]
 80313f8:	ed9d 0a00 	vldr	s0, [sp]
 80313fc:	f000 f8f2 	bl	80315e4 <__kernel_sinf>
 8031400:	eeb1 0a40 	vneg.f32	s0, s0
 8031404:	e7e2      	b.n	80313cc <cosf+0x28>
 8031406:	eddd 0a01 	vldr	s1, [sp, #4]
 803140a:	ed9d 0a00 	vldr	s0, [sp]
 803140e:	f000 f891 	bl	8031534 <__kernel_cosf>
 8031412:	e7f5      	b.n	8031400 <cosf+0x5c>
 8031414:	2001      	movs	r0, #1
 8031416:	eddd 0a01 	vldr	s1, [sp, #4]
 803141a:	ed9d 0a00 	vldr	s0, [sp]
 803141e:	f000 f8e1 	bl	80315e4 <__kernel_sinf>
 8031422:	e7d3      	b.n	80313cc <cosf+0x28>
 8031424:	3f490fd8 	.word	0x3f490fd8
 8031428:	00000000 	.word	0x00000000

0803142c <fabsf>:
 803142c:	ee10 3a10 	vmov	r3, s0
 8031430:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8031434:	ee00 3a10 	vmov	s0, r3
 8031438:	4770      	bx	lr
	...

0803143c <sinf>:
 803143c:	ee10 3a10 	vmov	r3, s0
 8031440:	b507      	push	{r0, r1, r2, lr}
 8031442:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8031446:	4a1e      	ldr	r2, [pc, #120]	@ (80314c0 <sinf+0x84>)
 8031448:	4293      	cmp	r3, r2
 803144a:	d807      	bhi.n	803145c <sinf+0x20>
 803144c:	2000      	movs	r0, #0
 803144e:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 80314c4 <sinf+0x88>
 8031452:	b003      	add	sp, #12
 8031454:	f85d eb04 	ldr.w	lr, [sp], #4
 8031458:	f000 b8c4 	b.w	80315e4 <__kernel_sinf>
 803145c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031460:	d304      	bcc.n	803146c <sinf+0x30>
 8031462:	ee30 0a40 	vsub.f32	s0, s0, s0
 8031466:	b003      	add	sp, #12
 8031468:	f85d fb04 	ldr.w	pc, [sp], #4
 803146c:	4668      	mov	r0, sp
 803146e:	f000 fbfb 	bl	8031c68 <__ieee754_rem_pio2f>
 8031472:	f000 0003 	and.w	r0, r0, #3
 8031476:	2801      	cmp	r0, #1
 8031478:	d00a      	beq.n	8031490 <sinf+0x54>
 803147a:	2802      	cmp	r0, #2
 803147c:	d00f      	beq.n	803149e <sinf+0x62>
 803147e:	b9c0      	cbnz	r0, 80314b2 <sinf+0x76>
 8031480:	2001      	movs	r0, #1
 8031482:	eddd 0a01 	vldr	s1, [sp, #4]
 8031486:	ed9d 0a00 	vldr	s0, [sp]
 803148a:	f000 f8ab 	bl	80315e4 <__kernel_sinf>
 803148e:	e7ea      	b.n	8031466 <sinf+0x2a>
 8031490:	eddd 0a01 	vldr	s1, [sp, #4]
 8031494:	ed9d 0a00 	vldr	s0, [sp]
 8031498:	f000 f84c 	bl	8031534 <__kernel_cosf>
 803149c:	e7e3      	b.n	8031466 <sinf+0x2a>
 803149e:	2001      	movs	r0, #1
 80314a0:	eddd 0a01 	vldr	s1, [sp, #4]
 80314a4:	ed9d 0a00 	vldr	s0, [sp]
 80314a8:	f000 f89c 	bl	80315e4 <__kernel_sinf>
 80314ac:	eeb1 0a40 	vneg.f32	s0, s0
 80314b0:	e7d9      	b.n	8031466 <sinf+0x2a>
 80314b2:	eddd 0a01 	vldr	s1, [sp, #4]
 80314b6:	ed9d 0a00 	vldr	s0, [sp]
 80314ba:	f000 f83b 	bl	8031534 <__kernel_cosf>
 80314be:	e7f5      	b.n	80314ac <sinf+0x70>
 80314c0:	3f490fd8 	.word	0x3f490fd8
 80314c4:	00000000 	.word	0x00000000

080314c8 <tanf>:
 80314c8:	ee10 3a10 	vmov	r3, s0
 80314cc:	b507      	push	{r0, r1, r2, lr}
 80314ce:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80314d2:	4a11      	ldr	r2, [pc, #68]	@ (8031518 <tanf+0x50>)
 80314d4:	4293      	cmp	r3, r2
 80314d6:	d807      	bhi.n	80314e8 <tanf+0x20>
 80314d8:	2001      	movs	r0, #1
 80314da:	eddf 0a10 	vldr	s1, [pc, #64]	@ 803151c <tanf+0x54>
 80314de:	b003      	add	sp, #12
 80314e0:	f85d eb04 	ldr.w	lr, [sp], #4
 80314e4:	f000 b8c6 	b.w	8031674 <__kernel_tanf>
 80314e8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80314ec:	d304      	bcc.n	80314f8 <tanf+0x30>
 80314ee:	ee30 0a40 	vsub.f32	s0, s0, s0
 80314f2:	b003      	add	sp, #12
 80314f4:	f85d fb04 	ldr.w	pc, [sp], #4
 80314f8:	4668      	mov	r0, sp
 80314fa:	f000 fbb5 	bl	8031c68 <__ieee754_rem_pio2f>
 80314fe:	eddd 0a01 	vldr	s1, [sp, #4]
 8031502:	0040      	lsls	r0, r0, #1
 8031504:	ed9d 0a00 	vldr	s0, [sp]
 8031508:	f000 0002 	and.w	r0, r0, #2
 803150c:	f1c0 0001 	rsb	r0, r0, #1
 8031510:	f000 f8b0 	bl	8031674 <__kernel_tanf>
 8031514:	e7ed      	b.n	80314f2 <tanf+0x2a>
 8031516:	bf00      	nop
 8031518:	3f490fda 	.word	0x3f490fda
 803151c:	00000000 	.word	0x00000000

08031520 <nanf>:
 8031520:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8031528 <nanf+0x8>
 8031524:	4770      	bx	lr
 8031526:	bf00      	nop
 8031528:	7fc00000 	.word	0x7fc00000

0803152c <__ieee754_sqrtf>:
 803152c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8031530:	4770      	bx	lr
	...

08031534 <__kernel_cosf>:
 8031534:	ee10 3a10 	vmov	r3, s0
 8031538:	eef0 6a40 	vmov.f32	s13, s0
 803153c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8031540:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8031544:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8031548:	d204      	bcs.n	8031554 <__kernel_cosf+0x20>
 803154a:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 803154e:	ee17 2a90 	vmov	r2, s15
 8031552:	b342      	cbz	r2, 80315a6 <__kernel_cosf+0x72>
 8031554:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8031558:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 80315c4 <__kernel_cosf+0x90>
 803155c:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 80315c8 <__kernel_cosf+0x94>
 8031560:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8031564:	4a19      	ldr	r2, [pc, #100]	@ (80315cc <__kernel_cosf+0x98>)
 8031566:	eea7 6a27 	vfma.f32	s12, s14, s15
 803156a:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80315d0 <__kernel_cosf+0x9c>
 803156e:	4293      	cmp	r3, r2
 8031570:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031574:	ed9f 6a17 	vldr	s12, [pc, #92]	@ 80315d4 <__kernel_cosf+0xa0>
 8031578:	eea7 6a87 	vfma.f32	s12, s15, s14
 803157c:	eddf 7a16 	vldr	s15, [pc, #88]	@ 80315d8 <__kernel_cosf+0xa4>
 8031580:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031584:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 80315dc <__kernel_cosf+0xa8>
 8031588:	eea7 6a87 	vfma.f32	s12, s15, s14
 803158c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031590:	ee67 7a27 	vmul.f32	s15, s14, s15
 8031594:	ee26 6a07 	vmul.f32	s12, s12, s14
 8031598:	eee7 0a06 	vfma.f32	s1, s14, s12
 803159c:	d804      	bhi.n	80315a8 <__kernel_cosf+0x74>
 803159e:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80315a2:	ee30 0a67 	vsub.f32	s0, s0, s15
 80315a6:	4770      	bx	lr
 80315a8:	4a0d      	ldr	r2, [pc, #52]	@ (80315e0 <__kernel_cosf+0xac>)
 80315aa:	4293      	cmp	r3, r2
 80315ac:	bf96      	itet	ls
 80315ae:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 80315b2:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 80315b6:	ee07 3a10 	vmovls	s14, r3
 80315ba:	ee30 0a47 	vsub.f32	s0, s0, s14
 80315be:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80315c2:	e7ec      	b.n	803159e <__kernel_cosf+0x6a>
 80315c4:	ad47d74e 	.word	0xad47d74e
 80315c8:	310f74f6 	.word	0x310f74f6
 80315cc:	3e999999 	.word	0x3e999999
 80315d0:	b493f27c 	.word	0xb493f27c
 80315d4:	37d00d01 	.word	0x37d00d01
 80315d8:	bab60b61 	.word	0xbab60b61
 80315dc:	3d2aaaab 	.word	0x3d2aaaab
 80315e0:	3f480000 	.word	0x3f480000

080315e4 <__kernel_sinf>:
 80315e4:	ee10 3a10 	vmov	r3, s0
 80315e8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80315ec:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80315f0:	d204      	bcs.n	80315fc <__kernel_sinf+0x18>
 80315f2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80315f6:	ee17 3a90 	vmov	r3, s15
 80315fa:	b35b      	cbz	r3, 8031654 <__kernel_sinf+0x70>
 80315fc:	ee20 7a00 	vmul.f32	s14, s0, s0
 8031600:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8031658 <__kernel_sinf+0x74>
 8031604:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 803165c <__kernel_sinf+0x78>
 8031608:	eea7 6a27 	vfma.f32	s12, s14, s15
 803160c:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8031660 <__kernel_sinf+0x7c>
 8031610:	ee60 6a07 	vmul.f32	s13, s0, s14
 8031614:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031618:	ed9f 6a12 	vldr	s12, [pc, #72]	@ 8031664 <__kernel_sinf+0x80>
 803161c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8031620:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8031668 <__kernel_sinf+0x84>
 8031624:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031628:	b930      	cbnz	r0, 8031638 <__kernel_sinf+0x54>
 803162a:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 803166c <__kernel_sinf+0x88>
 803162e:	eea7 6a27 	vfma.f32	s12, s14, s15
 8031632:	eea6 0a26 	vfma.f32	s0, s12, s13
 8031636:	4770      	bx	lr
 8031638:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 803163c:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8031640:	eee0 7a86 	vfma.f32	s15, s1, s12
 8031644:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8031648:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8031670 <__kernel_sinf+0x8c>
 803164c:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8031650:	ee30 0a60 	vsub.f32	s0, s0, s1
 8031654:	4770      	bx	lr
 8031656:	bf00      	nop
 8031658:	2f2ec9d3 	.word	0x2f2ec9d3
 803165c:	b2d72f34 	.word	0xb2d72f34
 8031660:	3638ef1b 	.word	0x3638ef1b
 8031664:	b9500d01 	.word	0xb9500d01
 8031668:	3c088889 	.word	0x3c088889
 803166c:	be2aaaab 	.word	0xbe2aaaab
 8031670:	3e2aaaab 	.word	0x3e2aaaab

08031674 <__kernel_tanf>:
 8031674:	b508      	push	{r3, lr}
 8031676:	ee10 3a10 	vmov	r3, s0
 803167a:	eef0 7a40 	vmov.f32	s15, s0
 803167e:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8031682:	f1b2 5f46 	cmp.w	r2, #830472192	@ 0x31800000
 8031686:	d217      	bcs.n	80316b8 <__kernel_tanf+0x44>
 8031688:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 803168c:	ee17 1a10 	vmov	r1, s14
 8031690:	bb39      	cbnz	r1, 80316e2 <__kernel_tanf+0x6e>
 8031692:	1c43      	adds	r3, r0, #1
 8031694:	4313      	orrs	r3, r2
 8031696:	d108      	bne.n	80316aa <__kernel_tanf+0x36>
 8031698:	f7ff fec8 	bl	803142c <fabsf>
 803169c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80316a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80316a4:	eeb0 0a67 	vmov.f32	s0, s15
 80316a8:	bd08      	pop	{r3, pc}
 80316aa:	2801      	cmp	r0, #1
 80316ac:	d0fa      	beq.n	80316a4 <__kernel_tanf+0x30>
 80316ae:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80316b2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80316b6:	e7f5      	b.n	80316a4 <__kernel_tanf+0x30>
 80316b8:	494c      	ldr	r1, [pc, #304]	@ (80317ec <__kernel_tanf+0x178>)
 80316ba:	428a      	cmp	r2, r1
 80316bc:	d311      	bcc.n	80316e2 <__kernel_tanf+0x6e>
 80316be:	2b00      	cmp	r3, #0
 80316c0:	ed9f 7a4b 	vldr	s14, [pc, #300]	@ 80317f0 <__kernel_tanf+0x17c>
 80316c4:	bfbc      	itt	lt
 80316c6:	eef1 7a40 	vneglt.f32	s15, s0
 80316ca:	eef1 0a60 	vneglt.f32	s1, s1
 80316ce:	ee37 7a67 	vsub.f32	s14, s14, s15
 80316d2:	eddf 7a48 	vldr	s15, [pc, #288]	@ 80317f4 <__kernel_tanf+0x180>
 80316d6:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80316da:	eddf 0a47 	vldr	s1, [pc, #284]	@ 80317f8 <__kernel_tanf+0x184>
 80316de:	ee77 7a87 	vadd.f32	s15, s15, s14
 80316e2:	ee67 6aa7 	vmul.f32	s13, s15, s15
 80316e6:	eddf 5a45 	vldr	s11, [pc, #276]	@ 80317fc <__kernel_tanf+0x188>
 80316ea:	ed9f 6a45 	vldr	s12, [pc, #276]	@ 8031800 <__kernel_tanf+0x18c>
 80316ee:	ed9f 5a45 	vldr	s10, [pc, #276]	@ 8031804 <__kernel_tanf+0x190>
 80316f2:	ee26 7aa6 	vmul.f32	s14, s13, s13
 80316f6:	493d      	ldr	r1, [pc, #244]	@ (80317ec <__kernel_tanf+0x178>)
 80316f8:	428a      	cmp	r2, r1
 80316fa:	eea7 6a25 	vfma.f32	s12, s14, s11
 80316fe:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8031808 <__kernel_tanf+0x194>
 8031702:	eee6 5a07 	vfma.f32	s11, s12, s14
 8031706:	ed9f 6a41 	vldr	s12, [pc, #260]	@ 803180c <__kernel_tanf+0x198>
 803170a:	eea5 6a87 	vfma.f32	s12, s11, s14
 803170e:	eddf 5a40 	vldr	s11, [pc, #256]	@ 8031810 <__kernel_tanf+0x19c>
 8031712:	eee6 5a07 	vfma.f32	s11, s12, s14
 8031716:	ed9f 6a3f 	vldr	s12, [pc, #252]	@ 8031814 <__kernel_tanf+0x1a0>
 803171a:	eea5 6a87 	vfma.f32	s12, s11, s14
 803171e:	eddf 5a3e 	vldr	s11, [pc, #248]	@ 8031818 <__kernel_tanf+0x1a4>
 8031722:	eee7 5a05 	vfma.f32	s11, s14, s10
 8031726:	ed9f 5a3d 	vldr	s10, [pc, #244]	@ 803181c <__kernel_tanf+0x1a8>
 803172a:	eea5 5a87 	vfma.f32	s10, s11, s14
 803172e:	eddf 5a3c 	vldr	s11, [pc, #240]	@ 8031820 <__kernel_tanf+0x1ac>
 8031732:	eee5 5a07 	vfma.f32	s11, s10, s14
 8031736:	ed9f 5a3b 	vldr	s10, [pc, #236]	@ 8031824 <__kernel_tanf+0x1b0>
 803173a:	eea5 5a87 	vfma.f32	s10, s11, s14
 803173e:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8031828 <__kernel_tanf+0x1b4>
 8031742:	eee5 5a07 	vfma.f32	s11, s10, s14
 8031746:	eeb0 7a46 	vmov.f32	s14, s12
 803174a:	ee27 5aa6 	vmul.f32	s10, s15, s13
 803174e:	eeb0 6a60 	vmov.f32	s12, s1
 8031752:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8031756:	eea7 6a05 	vfma.f32	s12, s14, s10
 803175a:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 803182c <__kernel_tanf+0x1b8>
 803175e:	eee6 0a26 	vfma.f32	s1, s12, s13
 8031762:	eee5 0a07 	vfma.f32	s1, s10, s14
 8031766:	ee37 6aa0 	vadd.f32	s12, s15, s1
 803176a:	d31d      	bcc.n	80317a8 <__kernel_tanf+0x134>
 803176c:	ee07 0a10 	vmov	s14, r0
 8031770:	ee26 5a06 	vmul.f32	s10, s12, s12
 8031774:	179b      	asrs	r3, r3, #30
 8031776:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 803177a:	f003 0302 	and.w	r3, r3, #2
 803177e:	ee36 6a07 	vadd.f32	s12, s12, s14
 8031782:	f1c3 0301 	rsb	r3, r3, #1
 8031786:	ee06 3a90 	vmov	s13, r3
 803178a:	eec5 5a06 	vdiv.f32	s11, s10, s12
 803178e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8031792:	ee35 6ae0 	vsub.f32	s12, s11, s1
 8031796:	ee77 7ac6 	vsub.f32	s15, s15, s12
 803179a:	eeb0 6a00 	vmov.f32	s12, #0	@ 0x40000000  2.0
 803179e:	eea7 7ac6 	vfms.f32	s14, s15, s12
 80317a2:	ee66 7a87 	vmul.f32	s15, s13, s14
 80317a6:	e77d      	b.n	80316a4 <__kernel_tanf+0x30>
 80317a8:	2801      	cmp	r0, #1
 80317aa:	d01b      	beq.n	80317e4 <__kernel_tanf+0x170>
 80317ac:	4b20      	ldr	r3, [pc, #128]	@ (8031830 <__kernel_tanf+0x1bc>)
 80317ae:	ee16 2a10 	vmov	r2, s12
 80317b2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80317b6:	401a      	ands	r2, r3
 80317b8:	ee05 2a90 	vmov	s11, r2
 80317bc:	ee75 7ae7 	vsub.f32	s15, s11, s15
 80317c0:	ee70 0ae7 	vsub.f32	s1, s1, s15
 80317c4:	eeff 7a00 	vmov.f32	s15, #240	@ 0xbf800000 -1.0
 80317c8:	eec7 6a86 	vdiv.f32	s13, s15, s12
 80317cc:	ee16 2a90 	vmov	r2, s13
 80317d0:	4013      	ands	r3, r2
 80317d2:	ee07 3a90 	vmov	s15, r3
 80317d6:	eea5 7aa7 	vfma.f32	s14, s11, s15
 80317da:	eea0 7aa7 	vfma.f32	s14, s1, s15
 80317de:	eee7 7a26 	vfma.f32	s15, s14, s13
 80317e2:	e75f      	b.n	80316a4 <__kernel_tanf+0x30>
 80317e4:	eef0 7a46 	vmov.f32	s15, s12
 80317e8:	e75c      	b.n	80316a4 <__kernel_tanf+0x30>
 80317ea:	bf00      	nop
 80317ec:	3f2ca140 	.word	0x3f2ca140
 80317f0:	3f490fda 	.word	0x3f490fda
 80317f4:	33222168 	.word	0x33222168
 80317f8:	00000000 	.word	0x00000000
 80317fc:	b79bae5f 	.word	0xb79bae5f
 8031800:	38a3f445 	.word	0x38a3f445
 8031804:	37d95384 	.word	0x37d95384
 8031808:	3a1a26c8 	.word	0x3a1a26c8
 803180c:	3b6b6916 	.word	0x3b6b6916
 8031810:	3cb327a4 	.word	0x3cb327a4
 8031814:	3e088889 	.word	0x3e088889
 8031818:	3895c07a 	.word	0x3895c07a
 803181c:	398137b9 	.word	0x398137b9
 8031820:	3abede48 	.word	0x3abede48
 8031824:	3c11371f 	.word	0x3c11371f
 8031828:	3d5d0dd1 	.word	0x3d5d0dd1
 803182c:	3eaaaaab 	.word	0x3eaaaaab
 8031830:	fffff000 	.word	0xfffff000

08031834 <__ieee754_acosf>:
 8031834:	b508      	push	{r3, lr}
 8031836:	ee10 3a10 	vmov	r3, s0
 803183a:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 803183e:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8031842:	ed2d 8b0c 	vpush	{d8-d13}
 8031846:	d109      	bne.n	803185c <__ieee754_acosf+0x28>
 8031848:	2b00      	cmp	r3, #0
 803184a:	ed9f 0a65 	vldr	s0, [pc, #404]	@ 80319e0 <__ieee754_acosf+0x1ac>
 803184e:	eddf 7a65 	vldr	s15, [pc, #404]	@ 80319e4 <__ieee754_acosf+0x1b0>
 8031852:	fe37 0a80 	vselgt.f32	s0, s15, s0
 8031856:	ecbd 8b0c 	vpop	{d8-d13}
 803185a:	bd08      	pop	{r3, pc}
 803185c:	d904      	bls.n	8031868 <__ieee754_acosf+0x34>
 803185e:	ee30 8a40 	vsub.f32	s16, s0, s0
 8031862:	ee88 0a08 	vdiv.f32	s0, s16, s16
 8031866:	e7f6      	b.n	8031856 <__ieee754_acosf+0x22>
 8031868:	f1b2 5f7c 	cmp.w	r2, #1056964608	@ 0x3f000000
 803186c:	d23c      	bcs.n	80318e8 <__ieee754_acosf+0xb4>
 803186e:	f1b2 5f0c 	cmp.w	r2, #587202560	@ 0x23000000
 8031872:	f240 80b1 	bls.w	80319d8 <__ieee754_acosf+0x1a4>
 8031876:	ee60 7a00 	vmul.f32	s15, s0, s0
 803187a:	eddf 6a5b 	vldr	s13, [pc, #364]	@ 80319e8 <__ieee754_acosf+0x1b4>
 803187e:	ed9f 7a5b 	vldr	s14, [pc, #364]	@ 80319ec <__ieee754_acosf+0x1b8>
 8031882:	ed9f 6a5b 	vldr	s12, [pc, #364]	@ 80319f0 <__ieee754_acosf+0x1bc>
 8031886:	eea7 7aa6 	vfma.f32	s14, s15, s13
 803188a:	eddf 6a5a 	vldr	s13, [pc, #360]	@ 80319f4 <__ieee754_acosf+0x1c0>
 803188e:	eee7 6a27 	vfma.f32	s13, s14, s15
 8031892:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 80319f8 <__ieee754_acosf+0x1c4>
 8031896:	eea6 7aa7 	vfma.f32	s14, s13, s15
 803189a:	eddf 6a58 	vldr	s13, [pc, #352]	@ 80319fc <__ieee754_acosf+0x1c8>
 803189e:	eee7 6a27 	vfma.f32	s13, s14, s15
 80318a2:	ed9f 7a57 	vldr	s14, [pc, #348]	@ 8031a00 <__ieee754_acosf+0x1cc>
 80318a6:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80318aa:	eddf 6a56 	vldr	s13, [pc, #344]	@ 8031a04 <__ieee754_acosf+0x1d0>
 80318ae:	eea7 6aa6 	vfma.f32	s12, s15, s13
 80318b2:	eddf 6a55 	vldr	s13, [pc, #340]	@ 8031a08 <__ieee754_acosf+0x1d4>
 80318b6:	ee27 7a27 	vmul.f32	s14, s14, s15
 80318ba:	eee6 6a27 	vfma.f32	s13, s12, s15
 80318be:	ed9f 6a53 	vldr	s12, [pc, #332]	@ 8031a0c <__ieee754_acosf+0x1d8>
 80318c2:	eea6 6aa7 	vfma.f32	s12, s13, s15
 80318c6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80318ca:	eee6 6a27 	vfma.f32	s13, s12, s15
 80318ce:	eddf 7a50 	vldr	s15, [pc, #320]	@ 8031a10 <__ieee754_acosf+0x1dc>
 80318d2:	ee87 6a26 	vdiv.f32	s12, s14, s13
 80318d6:	eee0 7a46 	vfms.f32	s15, s0, s12
 80318da:	ee70 7a67 	vsub.f32	s15, s0, s15
 80318de:	ed9f 0a4d 	vldr	s0, [pc, #308]	@ 8031a14 <__ieee754_acosf+0x1e0>
 80318e2:	ee30 0a67 	vsub.f32	s0, s0, s15
 80318e6:	e7b6      	b.n	8031856 <__ieee754_acosf+0x22>
 80318e8:	2b00      	cmp	r3, #0
 80318ea:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 80318ee:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80318f2:	eddf da3d 	vldr	s27, [pc, #244]	@ 80319e8 <__ieee754_acosf+0x1b4>
 80318f6:	eddf ca3d 	vldr	s25, [pc, #244]	@ 80319ec <__ieee754_acosf+0x1b8>
 80318fa:	ed9f ca3e 	vldr	s24, [pc, #248]	@ 80319f4 <__ieee754_acosf+0x1c0>
 80318fe:	eddf ba3e 	vldr	s23, [pc, #248]	@ 80319f8 <__ieee754_acosf+0x1c4>
 8031902:	ed9f ba3e 	vldr	s22, [pc, #248]	@ 80319fc <__ieee754_acosf+0x1c8>
 8031906:	eddf 8a3e 	vldr	s17, [pc, #248]	@ 8031a00 <__ieee754_acosf+0x1cc>
 803190a:	ed9f da3e 	vldr	s26, [pc, #248]	@ 8031a04 <__ieee754_acosf+0x1d0>
 803190e:	eddf aa38 	vldr	s21, [pc, #224]	@ 80319f0 <__ieee754_acosf+0x1bc>
 8031912:	ed9f aa3d 	vldr	s20, [pc, #244]	@ 8031a08 <__ieee754_acosf+0x1d4>
 8031916:	eddf 9a3d 	vldr	s19, [pc, #244]	@ 8031a0c <__ieee754_acosf+0x1d8>
 803191a:	da28      	bge.n	803196e <__ieee754_acosf+0x13a>
 803191c:	ee30 8a09 	vadd.f32	s16, s0, s18
 8031920:	ee28 0a27 	vmul.f32	s0, s16, s15
 8031924:	eee0 ca2d 	vfma.f32	s25, s0, s27
 8031928:	eee0 aa0d 	vfma.f32	s21, s0, s26
 803192c:	eeac ca80 	vfma.f32	s24, s25, s0
 8031930:	eeaa aa80 	vfma.f32	s20, s21, s0
 8031934:	eeec ba00 	vfma.f32	s23, s24, s0
 8031938:	eeea 9a00 	vfma.f32	s19, s20, s0
 803193c:	eeab ba80 	vfma.f32	s22, s23, s0
 8031940:	eea9 9a80 	vfma.f32	s18, s19, s0
 8031944:	eeeb 8a00 	vfma.f32	s17, s22, s0
 8031948:	ee68 8a80 	vmul.f32	s17, s17, s0
 803194c:	f7ff fdee 	bl	803152c <__ieee754_sqrtf>
 8031950:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8031a18 <__ieee754_acosf+0x1e4>
 8031954:	ee88 7a89 	vdiv.f32	s14, s17, s18
 8031958:	eee0 7a07 	vfma.f32	s15, s0, s14
 803195c:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 8031960:	ee77 7a80 	vadd.f32	s15, s15, s0
 8031964:	ed9f 0a2d 	vldr	s0, [pc, #180]	@ 8031a1c <__ieee754_acosf+0x1e8>
 8031968:	eea7 0ac7 	vfms.f32	s0, s15, s14
 803196c:	e773      	b.n	8031856 <__ieee754_acosf+0x22>
 803196e:	ee39 8a40 	vsub.f32	s16, s18, s0
 8031972:	ee28 8a27 	vmul.f32	s16, s16, s15
 8031976:	eeb0 0a48 	vmov.f32	s0, s16
 803197a:	f7ff fdd7 	bl	803152c <__ieee754_sqrtf>
 803197e:	eee8 ca2d 	vfma.f32	s25, s16, s27
 8031982:	eee8 aa0d 	vfma.f32	s21, s16, s26
 8031986:	ee10 3a10 	vmov	r3, s0
 803198a:	eeb0 6a48 	vmov.f32	s12, s16
 803198e:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 8031992:	f023 030f 	bic.w	r3, r3, #15
 8031996:	eeac ca88 	vfma.f32	s24, s25, s16
 803199a:	eeaa aa88 	vfma.f32	s20, s21, s16
 803199e:	ee07 3a90 	vmov	s15, r3
 80319a2:	eea7 6ae7 	vfms.f32	s12, s15, s15
 80319a6:	ee70 6a27 	vadd.f32	s13, s0, s15
 80319aa:	eeec ba08 	vfma.f32	s23, s24, s16
 80319ae:	eeea 9a08 	vfma.f32	s19, s20, s16
 80319b2:	ee86 7a26 	vdiv.f32	s14, s12, s13
 80319b6:	eeab ba88 	vfma.f32	s22, s23, s16
 80319ba:	eea9 9a88 	vfma.f32	s18, s19, s16
 80319be:	eeeb 8a08 	vfma.f32	s17, s22, s16
 80319c2:	ee68 8a88 	vmul.f32	s17, s17, s16
 80319c6:	eec8 6a89 	vdiv.f32	s13, s17, s18
 80319ca:	eea0 7a26 	vfma.f32	s14, s0, s13
 80319ce:	ee37 0a87 	vadd.f32	s0, s15, s14
 80319d2:	ee30 0a00 	vadd.f32	s0, s0, s0
 80319d6:	e73e      	b.n	8031856 <__ieee754_acosf+0x22>
 80319d8:	ed9f 0a11 	vldr	s0, [pc, #68]	@ 8031a20 <__ieee754_acosf+0x1ec>
 80319dc:	e73b      	b.n	8031856 <__ieee754_acosf+0x22>
 80319de:	bf00      	nop
 80319e0:	40490fdb 	.word	0x40490fdb
 80319e4:	00000000 	.word	0x00000000
 80319e8:	3811ef08 	.word	0x3811ef08
 80319ec:	3a4f7f04 	.word	0x3a4f7f04
 80319f0:	bf303361 	.word	0xbf303361
 80319f4:	bd241146 	.word	0xbd241146
 80319f8:	3e4e0aa8 	.word	0x3e4e0aa8
 80319fc:	bea6b090 	.word	0xbea6b090
 8031a00:	3e2aaaab 	.word	0x3e2aaaab
 8031a04:	3d9dc62e 	.word	0x3d9dc62e
 8031a08:	4001572d 	.word	0x4001572d
 8031a0c:	c019d139 	.word	0xc019d139
 8031a10:	33a22168 	.word	0x33a22168
 8031a14:	3fc90fda 	.word	0x3fc90fda
 8031a18:	b3a22168 	.word	0xb3a22168
 8031a1c:	40490fda 	.word	0x40490fda
 8031a20:	3fc90fdb 	.word	0x3fc90fdb

08031a24 <__ieee754_atan2f>:
 8031a24:	ee10 2a90 	vmov	r2, s1
 8031a28:	eef0 7a40 	vmov.f32	s15, s0
 8031a2c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8031a30:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8031a34:	b510      	push	{r4, lr}
 8031a36:	d806      	bhi.n	8031a46 <__ieee754_atan2f+0x22>
 8031a38:	ee10 0a10 	vmov	r0, s0
 8031a3c:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8031a40:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031a44:	d904      	bls.n	8031a50 <__ieee754_atan2f+0x2c>
 8031a46:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8031a4a:	eeb0 0a67 	vmov.f32	s0, s15
 8031a4e:	bd10      	pop	{r4, pc}
 8031a50:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8031a54:	d103      	bne.n	8031a5e <__ieee754_atan2f+0x3a>
 8031a56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8031a5a:	f7ff bbcf 	b.w	80311fc <atanf>
 8031a5e:	1794      	asrs	r4, r2, #30
 8031a60:	f004 0402 	and.w	r4, r4, #2
 8031a64:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8031a68:	b93b      	cbnz	r3, 8031a7a <__ieee754_atan2f+0x56>
 8031a6a:	2c02      	cmp	r4, #2
 8031a6c:	d05c      	beq.n	8031b28 <__ieee754_atan2f+0x104>
 8031a6e:	2c03      	cmp	r4, #3
 8031a70:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8031b3c <__ieee754_atan2f+0x118>
 8031a74:	fe47 7a00 	vseleq.f32	s15, s14, s0
 8031a78:	e7e7      	b.n	8031a4a <__ieee754_atan2f+0x26>
 8031a7a:	b939      	cbnz	r1, 8031a8c <__ieee754_atan2f+0x68>
 8031a7c:	2800      	cmp	r0, #0
 8031a7e:	eddf 7a30 	vldr	s15, [pc, #192]	@ 8031b40 <__ieee754_atan2f+0x11c>
 8031a82:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8031b44 <__ieee754_atan2f+0x120>
 8031a86:	fe67 7a87 	vselge.f32	s15, s15, s14
 8031a8a:	e7de      	b.n	8031a4a <__ieee754_atan2f+0x26>
 8031a8c:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8031a90:	d110      	bne.n	8031ab4 <__ieee754_atan2f+0x90>
 8031a92:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031a96:	f104 34ff 	add.w	r4, r4, #4294967295
 8031a9a:	d107      	bne.n	8031aac <__ieee754_atan2f+0x88>
 8031a9c:	2c02      	cmp	r4, #2
 8031a9e:	d846      	bhi.n	8031b2e <__ieee754_atan2f+0x10a>
 8031aa0:	4b29      	ldr	r3, [pc, #164]	@ (8031b48 <__ieee754_atan2f+0x124>)
 8031aa2:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8031aa6:	edd3 7a00 	vldr	s15, [r3]
 8031aaa:	e7ce      	b.n	8031a4a <__ieee754_atan2f+0x26>
 8031aac:	2c02      	cmp	r4, #2
 8031aae:	d841      	bhi.n	8031b34 <__ieee754_atan2f+0x110>
 8031ab0:	4b26      	ldr	r3, [pc, #152]	@ (8031b4c <__ieee754_atan2f+0x128>)
 8031ab2:	e7f6      	b.n	8031aa2 <__ieee754_atan2f+0x7e>
 8031ab4:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031ab8:	d0e0      	beq.n	8031a7c <__ieee754_atan2f+0x58>
 8031aba:	1a5b      	subs	r3, r3, r1
 8031abc:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8031ac0:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8031ac4:	da1a      	bge.n	8031afc <__ieee754_atan2f+0xd8>
 8031ac6:	2a00      	cmp	r2, #0
 8031ac8:	da01      	bge.n	8031ace <__ieee754_atan2f+0xaa>
 8031aca:	313c      	adds	r1, #60	@ 0x3c
 8031acc:	db19      	blt.n	8031b02 <__ieee754_atan2f+0xde>
 8031ace:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8031ad2:	f7ff fcab 	bl	803142c <fabsf>
 8031ad6:	f7ff fb91 	bl	80311fc <atanf>
 8031ada:	eef0 7a40 	vmov.f32	s15, s0
 8031ade:	2c01      	cmp	r4, #1
 8031ae0:	d012      	beq.n	8031b08 <__ieee754_atan2f+0xe4>
 8031ae2:	2c02      	cmp	r4, #2
 8031ae4:	d017      	beq.n	8031b16 <__ieee754_atan2f+0xf2>
 8031ae6:	2c00      	cmp	r4, #0
 8031ae8:	d0af      	beq.n	8031a4a <__ieee754_atan2f+0x26>
 8031aea:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8031b50 <__ieee754_atan2f+0x12c>
 8031aee:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031af2:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8031b54 <__ieee754_atan2f+0x130>
 8031af6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031afa:	e7a6      	b.n	8031a4a <__ieee754_atan2f+0x26>
 8031afc:	eddf 7a10 	vldr	s15, [pc, #64]	@ 8031b40 <__ieee754_atan2f+0x11c>
 8031b00:	e7ed      	b.n	8031ade <__ieee754_atan2f+0xba>
 8031b02:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8031b58 <__ieee754_atan2f+0x134>
 8031b06:	e7ea      	b.n	8031ade <__ieee754_atan2f+0xba>
 8031b08:	ee17 3a90 	vmov	r3, s15
 8031b0c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8031b10:	ee07 3a90 	vmov	s15, r3
 8031b14:	e799      	b.n	8031a4a <__ieee754_atan2f+0x26>
 8031b16:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8031b50 <__ieee754_atan2f+0x12c>
 8031b1a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031b1e:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8031b54 <__ieee754_atan2f+0x130>
 8031b22:	ee77 7a67 	vsub.f32	s15, s14, s15
 8031b26:	e790      	b.n	8031a4a <__ieee754_atan2f+0x26>
 8031b28:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8031b54 <__ieee754_atan2f+0x130>
 8031b2c:	e78d      	b.n	8031a4a <__ieee754_atan2f+0x26>
 8031b2e:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8031b5c <__ieee754_atan2f+0x138>
 8031b32:	e78a      	b.n	8031a4a <__ieee754_atan2f+0x26>
 8031b34:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8031b58 <__ieee754_atan2f+0x134>
 8031b38:	e787      	b.n	8031a4a <__ieee754_atan2f+0x26>
 8031b3a:	bf00      	nop
 8031b3c:	c0490fdb 	.word	0xc0490fdb
 8031b40:	3fc90fdb 	.word	0x3fc90fdb
 8031b44:	bfc90fdb 	.word	0xbfc90fdb
 8031b48:	08038208 	.word	0x08038208
 8031b4c:	080381fc 	.word	0x080381fc
 8031b50:	33bbbd2e 	.word	0x33bbbd2e
 8031b54:	40490fdb 	.word	0x40490fdb
 8031b58:	00000000 	.word	0x00000000
 8031b5c:	3f490fdb 	.word	0x3f490fdb

08031b60 <__ieee754_fmodf>:
 8031b60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8031b62:	ee10 5a90 	vmov	r5, s1
 8031b66:	f025 4000 	bic.w	r0, r5, #2147483648	@ 0x80000000
 8031b6a:	1e43      	subs	r3, r0, #1
 8031b6c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031b70:	d206      	bcs.n	8031b80 <__ieee754_fmodf+0x20>
 8031b72:	ee10 3a10 	vmov	r3, s0
 8031b76:	f023 4600 	bic.w	r6, r3, #2147483648	@ 0x80000000
 8031b7a:	f1b6 4fff 	cmp.w	r6, #2139095040	@ 0x7f800000
 8031b7e:	d304      	bcc.n	8031b8a <__ieee754_fmodf+0x2a>
 8031b80:	ee60 0a20 	vmul.f32	s1, s0, s1
 8031b84:	ee80 0aa0 	vdiv.f32	s0, s1, s1
 8031b88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8031b8a:	4286      	cmp	r6, r0
 8031b8c:	dbfc      	blt.n	8031b88 <__ieee754_fmodf+0x28>
 8031b8e:	f003 4400 	and.w	r4, r3, #2147483648	@ 0x80000000
 8031b92:	d105      	bne.n	8031ba0 <__ieee754_fmodf+0x40>
 8031b94:	4b33      	ldr	r3, [pc, #204]	@ (8031c64 <__ieee754_fmodf+0x104>)
 8031b96:	eb03 7354 	add.w	r3, r3, r4, lsr #29
 8031b9a:	ed93 0a00 	vldr	s0, [r3]
 8031b9e:	e7f3      	b.n	8031b88 <__ieee754_fmodf+0x28>
 8031ba0:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8031ba4:	d141      	bne.n	8031c2a <__ieee754_fmodf+0xca>
 8031ba6:	0232      	lsls	r2, r6, #8
 8031ba8:	f06f 017d 	mvn.w	r1, #125	@ 0x7d
 8031bac:	2a00      	cmp	r2, #0
 8031bae:	dc39      	bgt.n	8031c24 <__ieee754_fmodf+0xc4>
 8031bb0:	f015 4fff 	tst.w	r5, #2139095040	@ 0x7f800000
 8031bb4:	d13f      	bne.n	8031c36 <__ieee754_fmodf+0xd6>
 8031bb6:	0207      	lsls	r7, r0, #8
 8031bb8:	f06f 027d 	mvn.w	r2, #125	@ 0x7d
 8031bbc:	2f00      	cmp	r7, #0
 8031bbe:	da37      	bge.n	8031c30 <__ieee754_fmodf+0xd0>
 8031bc0:	f111 0f7e 	cmn.w	r1, #126	@ 0x7e
 8031bc4:	bfb5      	itete	lt
 8031bc6:	f06f 037d 	mvnlt.w	r3, #125	@ 0x7d
 8031bca:	f3c3 0316 	ubfxge	r3, r3, #0, #23
 8031bce:	1a5b      	sublt	r3, r3, r1
 8031bd0:	f443 0300 	orrge.w	r3, r3, #8388608	@ 0x800000
 8031bd4:	eba1 0102 	sub.w	r1, r1, r2
 8031bd8:	bfb8      	it	lt
 8031bda:	fa06 f303 	lsllt.w	r3, r6, r3
 8031bde:	f112 0f7e 	cmn.w	r2, #126	@ 0x7e
 8031be2:	bfb5      	itete	lt
 8031be4:	f06f 057d 	mvnlt.w	r5, #125	@ 0x7d
 8031be8:	f3c5 0516 	ubfxge	r5, r5, #0, #23
 8031bec:	1aad      	sublt	r5, r5, r2
 8031bee:	f445 0000 	orrge.w	r0, r5, #8388608	@ 0x800000
 8031bf2:	bfb8      	it	lt
 8031bf4:	40a8      	lsllt	r0, r5
 8031bf6:	1a1d      	subs	r5, r3, r0
 8031bf8:	bb01      	cbnz	r1, 8031c3c <__ieee754_fmodf+0xdc>
 8031bfa:	ea13 0325 	ands.w	r3, r3, r5, asr #32
 8031bfe:	bf38      	it	cc
 8031c00:	462b      	movcc	r3, r5
 8031c02:	2b00      	cmp	r3, #0
 8031c04:	d0c6      	beq.n	8031b94 <__ieee754_fmodf+0x34>
 8031c06:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8031c0a:	db1f      	blt.n	8031c4c <__ieee754_fmodf+0xec>
 8031c0c:	f112 0f7e 	cmn.w	r2, #126	@ 0x7e
 8031c10:	db1f      	blt.n	8031c52 <__ieee754_fmodf+0xf2>
 8031c12:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8031c16:	327f      	adds	r2, #127	@ 0x7f
 8031c18:	4323      	orrs	r3, r4
 8031c1a:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8031c1e:	ee00 3a10 	vmov	s0, r3
 8031c22:	e7b1      	b.n	8031b88 <__ieee754_fmodf+0x28>
 8031c24:	3901      	subs	r1, #1
 8031c26:	0052      	lsls	r2, r2, #1
 8031c28:	e7c0      	b.n	8031bac <__ieee754_fmodf+0x4c>
 8031c2a:	15f1      	asrs	r1, r6, #23
 8031c2c:	397f      	subs	r1, #127	@ 0x7f
 8031c2e:	e7bf      	b.n	8031bb0 <__ieee754_fmodf+0x50>
 8031c30:	3a01      	subs	r2, #1
 8031c32:	007f      	lsls	r7, r7, #1
 8031c34:	e7c2      	b.n	8031bbc <__ieee754_fmodf+0x5c>
 8031c36:	15c2      	asrs	r2, r0, #23
 8031c38:	3a7f      	subs	r2, #127	@ 0x7f
 8031c3a:	e7c1      	b.n	8031bc0 <__ieee754_fmodf+0x60>
 8031c3c:	2d00      	cmp	r5, #0
 8031c3e:	da02      	bge.n	8031c46 <__ieee754_fmodf+0xe6>
 8031c40:	005b      	lsls	r3, r3, #1
 8031c42:	3901      	subs	r1, #1
 8031c44:	e7d7      	b.n	8031bf6 <__ieee754_fmodf+0x96>
 8031c46:	d0a5      	beq.n	8031b94 <__ieee754_fmodf+0x34>
 8031c48:	006b      	lsls	r3, r5, #1
 8031c4a:	e7fa      	b.n	8031c42 <__ieee754_fmodf+0xe2>
 8031c4c:	005b      	lsls	r3, r3, #1
 8031c4e:	3a01      	subs	r2, #1
 8031c50:	e7d9      	b.n	8031c06 <__ieee754_fmodf+0xa6>
 8031c52:	f1c2 22ff 	rsb	r2, r2, #4278255360	@ 0xff00ff00
 8031c56:	f502 027f 	add.w	r2, r2, #16711680	@ 0xff0000
 8031c5a:	3282      	adds	r2, #130	@ 0x82
 8031c5c:	4113      	asrs	r3, r2
 8031c5e:	4323      	orrs	r3, r4
 8031c60:	e7dd      	b.n	8031c1e <__ieee754_fmodf+0xbe>
 8031c62:	bf00      	nop
 8031c64:	08038214 	.word	0x08038214

08031c68 <__ieee754_rem_pio2f>:
 8031c68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8031c6a:	ee10 6a10 	vmov	r6, s0
 8031c6e:	4b87      	ldr	r3, [pc, #540]	@ (8031e8c <__ieee754_rem_pio2f+0x224>)
 8031c70:	b087      	sub	sp, #28
 8031c72:	4604      	mov	r4, r0
 8031c74:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8031c78:	429d      	cmp	r5, r3
 8031c7a:	d805      	bhi.n	8031c88 <__ieee754_rem_pio2f+0x20>
 8031c7c:	2300      	movs	r3, #0
 8031c7e:	ed80 0a00 	vstr	s0, [r0]
 8031c82:	6043      	str	r3, [r0, #4]
 8031c84:	2000      	movs	r0, #0
 8031c86:	e022      	b.n	8031cce <__ieee754_rem_pio2f+0x66>
 8031c88:	4b81      	ldr	r3, [pc, #516]	@ (8031e90 <__ieee754_rem_pio2f+0x228>)
 8031c8a:	429d      	cmp	r5, r3
 8031c8c:	d83a      	bhi.n	8031d04 <__ieee754_rem_pio2f+0x9c>
 8031c8e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8031c92:	2e00      	cmp	r6, #0
 8031c94:	ed9f 7a7f 	vldr	s14, [pc, #508]	@ 8031e94 <__ieee754_rem_pio2f+0x22c>
 8031c98:	f023 030f 	bic.w	r3, r3, #15
 8031c9c:	4a7e      	ldr	r2, [pc, #504]	@ (8031e98 <__ieee754_rem_pio2f+0x230>)
 8031c9e:	dd18      	ble.n	8031cd2 <__ieee754_rem_pio2f+0x6a>
 8031ca0:	4293      	cmp	r3, r2
 8031ca2:	ee70 7a47 	vsub.f32	s15, s0, s14
 8031ca6:	bf09      	itett	eq
 8031ca8:	ed9f 7a7c 	vldreq	s14, [pc, #496]	@ 8031e9c <__ieee754_rem_pio2f+0x234>
 8031cac:	eddf 6a7c 	vldrne	s13, [pc, #496]	@ 8031ea0 <__ieee754_rem_pio2f+0x238>
 8031cb0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8031cb4:	eddf 6a7b 	vldreq	s13, [pc, #492]	@ 8031ea4 <__ieee754_rem_pio2f+0x23c>
 8031cb8:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8031cbc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031cc0:	ed80 7a00 	vstr	s14, [r0]
 8031cc4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8031cc8:	edc0 7a01 	vstr	s15, [r0, #4]
 8031ccc:	2001      	movs	r0, #1
 8031cce:	b007      	add	sp, #28
 8031cd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8031cd2:	4293      	cmp	r3, r2
 8031cd4:	ee70 7a07 	vadd.f32	s15, s0, s14
 8031cd8:	bf09      	itett	eq
 8031cda:	ed9f 7a70 	vldreq	s14, [pc, #448]	@ 8031e9c <__ieee754_rem_pio2f+0x234>
 8031cde:	eddf 6a70 	vldrne	s13, [pc, #448]	@ 8031ea0 <__ieee754_rem_pio2f+0x238>
 8031ce2:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8031ce6:	eddf 6a6f 	vldreq	s13, [pc, #444]	@ 8031ea4 <__ieee754_rem_pio2f+0x23c>
 8031cea:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8031cee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031cf2:	ed80 7a00 	vstr	s14, [r0]
 8031cf6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8031cfa:	edc0 7a01 	vstr	s15, [r0, #4]
 8031cfe:	f04f 30ff 	mov.w	r0, #4294967295
 8031d02:	e7e4      	b.n	8031cce <__ieee754_rem_pio2f+0x66>
 8031d04:	4b68      	ldr	r3, [pc, #416]	@ (8031ea8 <__ieee754_rem_pio2f+0x240>)
 8031d06:	429d      	cmp	r5, r3
 8031d08:	d872      	bhi.n	8031df0 <__ieee754_rem_pio2f+0x188>
 8031d0a:	f7ff fb8f 	bl	803142c <fabsf>
 8031d0e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031d12:	ed9f 7a66 	vldr	s14, [pc, #408]	@ 8031eac <__ieee754_rem_pio2f+0x244>
 8031d16:	eee0 7a07 	vfma.f32	s15, s0, s14
 8031d1a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8031d1e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8031d22:	ee17 0a90 	vmov	r0, s15
 8031d26:	eddf 7a5b 	vldr	s15, [pc, #364]	@ 8031e94 <__ieee754_rem_pio2f+0x22c>
 8031d2a:	281f      	cmp	r0, #31
 8031d2c:	eea7 0a67 	vfms.f32	s0, s14, s15
 8031d30:	eddf 7a5b 	vldr	s15, [pc, #364]	@ 8031ea0 <__ieee754_rem_pio2f+0x238>
 8031d34:	eeb1 6a47 	vneg.f32	s12, s14
 8031d38:	ee67 7a27 	vmul.f32	s15, s14, s15
 8031d3c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8031d40:	ee16 1a90 	vmov	r1, s13
 8031d44:	dc09      	bgt.n	8031d5a <__ieee754_rem_pio2f+0xf2>
 8031d46:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8031d4a:	1e47      	subs	r7, r0, #1
 8031d4c:	4a58      	ldr	r2, [pc, #352]	@ (8031eb0 <__ieee754_rem_pio2f+0x248>)
 8031d4e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8031d52:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8031d56:	4293      	cmp	r3, r2
 8031d58:	d106      	bne.n	8031d68 <__ieee754_rem_pio2f+0x100>
 8031d5a:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8031d5e:	15eb      	asrs	r3, r5, #23
 8031d60:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8031d64:	2a08      	cmp	r2, #8
 8031d66:	dc14      	bgt.n	8031d92 <__ieee754_rem_pio2f+0x12a>
 8031d68:	6021      	str	r1, [r4, #0]
 8031d6a:	ed94 7a00 	vldr	s14, [r4]
 8031d6e:	2e00      	cmp	r6, #0
 8031d70:	ee30 0a47 	vsub.f32	s0, s0, s14
 8031d74:	ee30 0a67 	vsub.f32	s0, s0, s15
 8031d78:	ed84 0a01 	vstr	s0, [r4, #4]
 8031d7c:	daa7      	bge.n	8031cce <__ieee754_rem_pio2f+0x66>
 8031d7e:	eeb1 7a47 	vneg.f32	s14, s14
 8031d82:	eeb1 0a40 	vneg.f32	s0, s0
 8031d86:	ed84 7a00 	vstr	s14, [r4]
 8031d8a:	ed84 0a01 	vstr	s0, [r4, #4]
 8031d8e:	4240      	negs	r0, r0
 8031d90:	e79d      	b.n	8031cce <__ieee754_rem_pio2f+0x66>
 8031d92:	eef0 6a40 	vmov.f32	s13, s0
 8031d96:	eddf 5a41 	vldr	s11, [pc, #260]	@ 8031e9c <__ieee754_rem_pio2f+0x234>
 8031d9a:	eee6 6a25 	vfma.f32	s13, s12, s11
 8031d9e:	ee70 7a66 	vsub.f32	s15, s0, s13
 8031da2:	eee6 7a25 	vfma.f32	s15, s12, s11
 8031da6:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8031ea4 <__ieee754_rem_pio2f+0x23c>
 8031daa:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8031dae:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8031db2:	ee15 2a90 	vmov	r2, s11
 8031db6:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8031dba:	1a5b      	subs	r3, r3, r1
 8031dbc:	2b19      	cmp	r3, #25
 8031dbe:	dc04      	bgt.n	8031dca <__ieee754_rem_pio2f+0x162>
 8031dc0:	eeb0 0a66 	vmov.f32	s0, s13
 8031dc4:	edc4 5a00 	vstr	s11, [r4]
 8031dc8:	e7cf      	b.n	8031d6a <__ieee754_rem_pio2f+0x102>
 8031dca:	eeb0 0a66 	vmov.f32	s0, s13
 8031dce:	eddf 5a39 	vldr	s11, [pc, #228]	@ 8031eb4 <__ieee754_rem_pio2f+0x24c>
 8031dd2:	eea6 0a25 	vfma.f32	s0, s12, s11
 8031dd6:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8031dda:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8031eb8 <__ieee754_rem_pio2f+0x250>
 8031dde:	eee6 7a25 	vfma.f32	s15, s12, s11
 8031de2:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8031de6:	ee30 7a67 	vsub.f32	s14, s0, s15
 8031dea:	ed84 7a00 	vstr	s14, [r4]
 8031dee:	e7bc      	b.n	8031d6a <__ieee754_rem_pio2f+0x102>
 8031df0:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8031df4:	d306      	bcc.n	8031e04 <__ieee754_rem_pio2f+0x19c>
 8031df6:	ee70 7a40 	vsub.f32	s15, s0, s0
 8031dfa:	edc0 7a01 	vstr	s15, [r0, #4]
 8031dfe:	edc0 7a00 	vstr	s15, [r0]
 8031e02:	e73f      	b.n	8031c84 <__ieee754_rem_pio2f+0x1c>
 8031e04:	15ea      	asrs	r2, r5, #23
 8031e06:	eddf 6a2d 	vldr	s13, [pc, #180]	@ 8031ebc <__ieee754_rem_pio2f+0x254>
 8031e0a:	3a86      	subs	r2, #134	@ 0x86
 8031e0c:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8031e10:	ee07 3a90 	vmov	s15, r3
 8031e14:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8031e18:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8031e1c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031e20:	ed8d 7a03 	vstr	s14, [sp, #12]
 8031e24:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8031e28:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8031e2c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8031e30:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031e34:	ed8d 7a04 	vstr	s14, [sp, #16]
 8031e38:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8031e3c:	eef5 7a40 	vcmp.f32	s15, #0.0
 8031e40:	edcd 7a05 	vstr	s15, [sp, #20]
 8031e44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031e48:	d11e      	bne.n	8031e88 <__ieee754_rem_pio2f+0x220>
 8031e4a:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8031e4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031e52:	bf0c      	ite	eq
 8031e54:	2301      	moveq	r3, #1
 8031e56:	2302      	movne	r3, #2
 8031e58:	4919      	ldr	r1, [pc, #100]	@ (8031ec0 <__ieee754_rem_pio2f+0x258>)
 8031e5a:	a803      	add	r0, sp, #12
 8031e5c:	9101      	str	r1, [sp, #4]
 8031e5e:	2102      	movs	r1, #2
 8031e60:	9100      	str	r1, [sp, #0]
 8031e62:	4621      	mov	r1, r4
 8031e64:	f000 f82e 	bl	8031ec4 <__kernel_rem_pio2f>
 8031e68:	2e00      	cmp	r6, #0
 8031e6a:	f6bf af30 	bge.w	8031cce <__ieee754_rem_pio2f+0x66>
 8031e6e:	edd4 7a00 	vldr	s15, [r4]
 8031e72:	eef1 7a67 	vneg.f32	s15, s15
 8031e76:	edc4 7a00 	vstr	s15, [r4]
 8031e7a:	edd4 7a01 	vldr	s15, [r4, #4]
 8031e7e:	eef1 7a67 	vneg.f32	s15, s15
 8031e82:	edc4 7a01 	vstr	s15, [r4, #4]
 8031e86:	e782      	b.n	8031d8e <__ieee754_rem_pio2f+0x126>
 8031e88:	2303      	movs	r3, #3
 8031e8a:	e7e5      	b.n	8031e58 <__ieee754_rem_pio2f+0x1f0>
 8031e8c:	3f490fd8 	.word	0x3f490fd8
 8031e90:	4016cbe3 	.word	0x4016cbe3
 8031e94:	3fc90f80 	.word	0x3fc90f80
 8031e98:	3fc90fd0 	.word	0x3fc90fd0
 8031e9c:	37354400 	.word	0x37354400
 8031ea0:	37354443 	.word	0x37354443
 8031ea4:	2e85a308 	.word	0x2e85a308
 8031ea8:	43490f80 	.word	0x43490f80
 8031eac:	3f22f984 	.word	0x3f22f984
 8031eb0:	0803821c 	.word	0x0803821c
 8031eb4:	2e85a300 	.word	0x2e85a300
 8031eb8:	248d3132 	.word	0x248d3132
 8031ebc:	43800000 	.word	0x43800000
 8031ec0:	0803829c 	.word	0x0803829c

08031ec4 <__kernel_rem_pio2f>:
 8031ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8031ec8:	4690      	mov	r8, r2
 8031eca:	4abc      	ldr	r2, [pc, #752]	@ (80321bc <__kernel_rem_pio2f+0x2f8>)
 8031ecc:	460f      	mov	r7, r1
 8031ece:	f103 3bff 	add.w	fp, r3, #4294967295
 8031ed2:	f118 0f04 	cmn.w	r8, #4
 8031ed6:	ed2d 8b04 	vpush	{d8-d9}
 8031eda:	b0d9      	sub	sp, #356	@ 0x164
 8031edc:	9001      	str	r0, [sp, #4]
 8031ede:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8031ee0:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8031ee4:	db27      	blt.n	8031f36 <__kernel_rem_pio2f+0x72>
 8031ee6:	f1b8 0203 	subs.w	r2, r8, #3
 8031eea:	bf48      	it	mi
 8031eec:	f108 0204 	addmi.w	r2, r8, #4
 8031ef0:	10d2      	asrs	r2, r2, #3
 8031ef2:	1c55      	adds	r5, r2, #1
 8031ef4:	eba2 060b 	sub.w	r6, r2, fp
 8031ef8:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8031efa:	eb0a 0c0b 	add.w	ip, sl, fp
 8031efe:	00e8      	lsls	r0, r5, #3
 8031f00:	ac1c      	add	r4, sp, #112	@ 0x70
 8031f02:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8031f06:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 80321cc <__kernel_rem_pio2f+0x308>
 8031f0a:	9002      	str	r0, [sp, #8]
 8031f0c:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8031f10:	2000      	movs	r0, #0
 8031f12:	4560      	cmp	r0, ip
 8031f14:	dd11      	ble.n	8031f3a <__kernel_rem_pio2f+0x76>
 8031f16:	a91c      	add	r1, sp, #112	@ 0x70
 8031f18:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8031f1c:	f04f 0c00 	mov.w	ip, #0
 8031f20:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8031f24:	45d4      	cmp	ip, sl
 8031f26:	dc29      	bgt.n	8031f7c <__kernel_rem_pio2f+0xb8>
 8031f28:	f8dd e004 	ldr.w	lr, [sp, #4]
 8031f2c:	4606      	mov	r6, r0
 8031f2e:	eddf 7aa7 	vldr	s15, [pc, #668]	@ 80321cc <__kernel_rem_pio2f+0x308>
 8031f32:	2400      	movs	r4, #0
 8031f34:	e018      	b.n	8031f68 <__kernel_rem_pio2f+0xa4>
 8031f36:	2200      	movs	r2, #0
 8031f38:	e7db      	b.n	8031ef2 <__kernel_rem_pio2f+0x2e>
 8031f3a:	42c6      	cmn	r6, r0
 8031f3c:	bf54      	ite	pl
 8031f3e:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8031f42:	eef0 7a47 	vmovmi.f32	s15, s14
 8031f46:	f100 0001 	add.w	r0, r0, #1
 8031f4a:	bf5c      	itt	pl
 8031f4c:	ee07 1a90 	vmovpl	s15, r1
 8031f50:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8031f54:	ece4 7a01 	vstmia	r4!, {s15}
 8031f58:	e7db      	b.n	8031f12 <__kernel_rem_pio2f+0x4e>
 8031f5a:	ecfe 6a01 	vldmia	lr!, {s13}
 8031f5e:	3401      	adds	r4, #1
 8031f60:	ed96 7a00 	vldr	s14, [r6]
 8031f64:	eee6 7a87 	vfma.f32	s15, s13, s14
 8031f68:	455c      	cmp	r4, fp
 8031f6a:	f1a6 0604 	sub.w	r6, r6, #4
 8031f6e:	ddf4      	ble.n	8031f5a <__kernel_rem_pio2f+0x96>
 8031f70:	f10c 0c01 	add.w	ip, ip, #1
 8031f74:	3004      	adds	r0, #4
 8031f76:	ece9 7a01 	vstmia	r9!, {s15}
 8031f7a:	e7d3      	b.n	8031f24 <__kernel_rem_pio2f+0x60>
 8031f7c:	a908      	add	r1, sp, #32
 8031f7e:	4654      	mov	r4, sl
 8031f80:	eddf 8a91 	vldr	s17, [pc, #580]	@ 80321c8 <__kernel_rem_pio2f+0x304>
 8031f84:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8031f88:	ed9f 9a8e 	vldr	s18, [pc, #568]	@ 80321c4 <__kernel_rem_pio2f+0x300>
 8031f8c:	9104      	str	r1, [sp, #16]
 8031f8e:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8031f90:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8031f94:	9203      	str	r2, [sp, #12]
 8031f96:	00a2      	lsls	r2, r4, #2
 8031f98:	a944      	add	r1, sp, #272	@ 0x110
 8031f9a:	4626      	mov	r6, r4
 8031f9c:	9205      	str	r2, [sp, #20]
 8031f9e:	aa58      	add	r2, sp, #352	@ 0x160
 8031fa0:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8031fa4:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8031fa8:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8031fac:	aa08      	add	r2, sp, #32
 8031fae:	4694      	mov	ip, r2
 8031fb0:	2e00      	cmp	r6, #0
 8031fb2:	f1a0 0004 	sub.w	r0, r0, #4
 8031fb6:	dc4c      	bgt.n	8032052 <__kernel_rem_pio2f+0x18e>
 8031fb8:	4628      	mov	r0, r5
 8031fba:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8031fbe:	f000 f9f5 	bl	80323ac <scalbnf>
 8031fc2:	eeb0 8a40 	vmov.f32	s16, s0
 8031fc6:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8031fca:	ee28 0a00 	vmul.f32	s0, s16, s0
 8031fce:	f000 fa51 	bl	8032474 <floorf>
 8031fd2:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8031fd6:	2d00      	cmp	r5, #0
 8031fd8:	eea0 8a67 	vfms.f32	s16, s0, s15
 8031fdc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8031fe0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8031fe4:	ee17 9a90 	vmov	r9, s15
 8031fe8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8031fec:	ee38 8a67 	vsub.f32	s16, s16, s15
 8031ff0:	dd41      	ble.n	8032076 <__kernel_rem_pio2f+0x1b2>
 8031ff2:	f104 3cff 	add.w	ip, r4, #4294967295
 8031ff6:	a908      	add	r1, sp, #32
 8031ff8:	f1c5 0e08 	rsb	lr, r5, #8
 8031ffc:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8032000:	fa46 f00e 	asr.w	r0, r6, lr
 8032004:	4481      	add	r9, r0
 8032006:	fa00 f00e 	lsl.w	r0, r0, lr
 803200a:	1a36      	subs	r6, r6, r0
 803200c:	f1c5 0007 	rsb	r0, r5, #7
 8032010:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8032014:	4106      	asrs	r6, r0
 8032016:	2e00      	cmp	r6, #0
 8032018:	dd3c      	ble.n	8032094 <__kernel_rem_pio2f+0x1d0>
 803201a:	f04f 0e00 	mov.w	lr, #0
 803201e:	f109 0901 	add.w	r9, r9, #1
 8032022:	4670      	mov	r0, lr
 8032024:	4574      	cmp	r4, lr
 8032026:	dc68      	bgt.n	80320fa <__kernel_rem_pio2f+0x236>
 8032028:	2d00      	cmp	r5, #0
 803202a:	dd03      	ble.n	8032034 <__kernel_rem_pio2f+0x170>
 803202c:	2d01      	cmp	r5, #1
 803202e:	d074      	beq.n	803211a <__kernel_rem_pio2f+0x256>
 8032030:	2d02      	cmp	r5, #2
 8032032:	d07d      	beq.n	8032130 <__kernel_rem_pio2f+0x26c>
 8032034:	2e02      	cmp	r6, #2
 8032036:	d12d      	bne.n	8032094 <__kernel_rem_pio2f+0x1d0>
 8032038:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 803203c:	ee30 8a48 	vsub.f32	s16, s0, s16
 8032040:	b340      	cbz	r0, 8032094 <__kernel_rem_pio2f+0x1d0>
 8032042:	4628      	mov	r0, r5
 8032044:	9306      	str	r3, [sp, #24]
 8032046:	f000 f9b1 	bl	80323ac <scalbnf>
 803204a:	9b06      	ldr	r3, [sp, #24]
 803204c:	ee38 8a40 	vsub.f32	s16, s16, s0
 8032050:	e020      	b.n	8032094 <__kernel_rem_pio2f+0x1d0>
 8032052:	ee60 7a28 	vmul.f32	s15, s0, s17
 8032056:	3e01      	subs	r6, #1
 8032058:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 803205c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8032060:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8032064:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8032068:	ecac 0a01 	vstmia	ip!, {s0}
 803206c:	ed90 0a00 	vldr	s0, [r0]
 8032070:	ee37 0a80 	vadd.f32	s0, s15, s0
 8032074:	e79c      	b.n	8031fb0 <__kernel_rem_pio2f+0xec>
 8032076:	d105      	bne.n	8032084 <__kernel_rem_pio2f+0x1c0>
 8032078:	1e60      	subs	r0, r4, #1
 803207a:	a908      	add	r1, sp, #32
 803207c:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8032080:	11f6      	asrs	r6, r6, #7
 8032082:	e7c8      	b.n	8032016 <__kernel_rem_pio2f+0x152>
 8032084:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8032088:	eeb4 8ae7 	vcmpe.f32	s16, s15
 803208c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8032090:	da31      	bge.n	80320f6 <__kernel_rem_pio2f+0x232>
 8032092:	2600      	movs	r6, #0
 8032094:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8032098:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803209c:	f040 8098 	bne.w	80321d0 <__kernel_rem_pio2f+0x30c>
 80320a0:	1e60      	subs	r0, r4, #1
 80320a2:	2200      	movs	r2, #0
 80320a4:	4550      	cmp	r0, sl
 80320a6:	da4b      	bge.n	8032140 <__kernel_rem_pio2f+0x27c>
 80320a8:	2a00      	cmp	r2, #0
 80320aa:	d065      	beq.n	8032178 <__kernel_rem_pio2f+0x2b4>
 80320ac:	3c01      	subs	r4, #1
 80320ae:	ab08      	add	r3, sp, #32
 80320b0:	3d08      	subs	r5, #8
 80320b2:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80320b6:	2b00      	cmp	r3, #0
 80320b8:	d0f8      	beq.n	80320ac <__kernel_rem_pio2f+0x1e8>
 80320ba:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80320be:	4628      	mov	r0, r5
 80320c0:	f000 f974 	bl	80323ac <scalbnf>
 80320c4:	1c63      	adds	r3, r4, #1
 80320c6:	aa44      	add	r2, sp, #272	@ 0x110
 80320c8:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 80321c8 <__kernel_rem_pio2f+0x304>
 80320cc:	0099      	lsls	r1, r3, #2
 80320ce:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80320d2:	4623      	mov	r3, r4
 80320d4:	2b00      	cmp	r3, #0
 80320d6:	f280 80a9 	bge.w	803222c <__kernel_rem_pio2f+0x368>
 80320da:	4623      	mov	r3, r4
 80320dc:	2b00      	cmp	r3, #0
 80320de:	f2c0 80c7 	blt.w	8032270 <__kernel_rem_pio2f+0x3ac>
 80320e2:	aa44      	add	r2, sp, #272	@ 0x110
 80320e4:	f8df c0d8 	ldr.w	ip, [pc, #216]	@ 80321c0 <__kernel_rem_pio2f+0x2fc>
 80320e8:	eddf 7a38 	vldr	s15, [pc, #224]	@ 80321cc <__kernel_rem_pio2f+0x308>
 80320ec:	2000      	movs	r0, #0
 80320ee:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80320f2:	1ae2      	subs	r2, r4, r3
 80320f4:	e0b1      	b.n	803225a <__kernel_rem_pio2f+0x396>
 80320f6:	2602      	movs	r6, #2
 80320f8:	e78f      	b.n	803201a <__kernel_rem_pio2f+0x156>
 80320fa:	f852 1b04 	ldr.w	r1, [r2], #4
 80320fe:	b948      	cbnz	r0, 8032114 <__kernel_rem_pio2f+0x250>
 8032100:	b121      	cbz	r1, 803210c <__kernel_rem_pio2f+0x248>
 8032102:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8032106:	f842 1c04 	str.w	r1, [r2, #-4]
 803210a:	2101      	movs	r1, #1
 803210c:	f10e 0e01 	add.w	lr, lr, #1
 8032110:	4608      	mov	r0, r1
 8032112:	e787      	b.n	8032024 <__kernel_rem_pio2f+0x160>
 8032114:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8032118:	e7f5      	b.n	8032106 <__kernel_rem_pio2f+0x242>
 803211a:	f104 3cff 	add.w	ip, r4, #4294967295
 803211e:	aa08      	add	r2, sp, #32
 8032120:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8032124:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8032128:	a908      	add	r1, sp, #32
 803212a:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 803212e:	e781      	b.n	8032034 <__kernel_rem_pio2f+0x170>
 8032130:	f104 3cff 	add.w	ip, r4, #4294967295
 8032134:	aa08      	add	r2, sp, #32
 8032136:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 803213a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 803213e:	e7f3      	b.n	8032128 <__kernel_rem_pio2f+0x264>
 8032140:	a908      	add	r1, sp, #32
 8032142:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8032146:	3801      	subs	r0, #1
 8032148:	430a      	orrs	r2, r1
 803214a:	e7ab      	b.n	80320a4 <__kernel_rem_pio2f+0x1e0>
 803214c:	3201      	adds	r2, #1
 803214e:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 8032152:	2e00      	cmp	r6, #0
 8032154:	d0fa      	beq.n	803214c <__kernel_rem_pio2f+0x288>
 8032156:	9905      	ldr	r1, [sp, #20]
 8032158:	18e6      	adds	r6, r4, r3
 803215a:	f104 0c01 	add.w	ip, r4, #1
 803215e:	4422      	add	r2, r4
 8032160:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 8032164:	eb0d 0001 	add.w	r0, sp, r1
 8032168:	a91c      	add	r1, sp, #112	@ 0x70
 803216a:	384c      	subs	r0, #76	@ 0x4c
 803216c:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8032170:	4562      	cmp	r2, ip
 8032172:	da04      	bge.n	803217e <__kernel_rem_pio2f+0x2ba>
 8032174:	4614      	mov	r4, r2
 8032176:	e70e      	b.n	8031f96 <__kernel_rem_pio2f+0xd2>
 8032178:	9804      	ldr	r0, [sp, #16]
 803217a:	2201      	movs	r2, #1
 803217c:	e7e7      	b.n	803214e <__kernel_rem_pio2f+0x28a>
 803217e:	9903      	ldr	r1, [sp, #12]
 8032180:	2400      	movs	r4, #0
 8032182:	f8dd e004 	ldr.w	lr, [sp, #4]
 8032186:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 803218a:	ee07 1a90 	vmov	s15, r1
 803218e:	9105      	str	r1, [sp, #20]
 8032190:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8032194:	ece6 7a01 	vstmia	r6!, {s15}
 8032198:	46b1      	mov	r9, r6
 803219a:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 80321cc <__kernel_rem_pio2f+0x308>
 803219e:	455c      	cmp	r4, fp
 80321a0:	dd04      	ble.n	80321ac <__kernel_rem_pio2f+0x2e8>
 80321a2:	f10c 0c01 	add.w	ip, ip, #1
 80321a6:	ece0 7a01 	vstmia	r0!, {s15}
 80321aa:	e7e1      	b.n	8032170 <__kernel_rem_pio2f+0x2ac>
 80321ac:	ecfe 6a01 	vldmia	lr!, {s13}
 80321b0:	3401      	adds	r4, #1
 80321b2:	ed39 7a01 	vldmdb	r9!, {s14}
 80321b6:	eee6 7a87 	vfma.f32	s15, s13, s14
 80321ba:	e7f0      	b.n	803219e <__kernel_rem_pio2f+0x2da>
 80321bc:	080385e0 	.word	0x080385e0
 80321c0:	080385b4 	.word	0x080385b4
 80321c4:	43800000 	.word	0x43800000
 80321c8:	3b800000 	.word	0x3b800000
 80321cc:	00000000 	.word	0x00000000
 80321d0:	9b02      	ldr	r3, [sp, #8]
 80321d2:	eeb0 0a48 	vmov.f32	s0, s16
 80321d6:	eba3 0008 	sub.w	r0, r3, r8
 80321da:	f000 f8e7 	bl	80323ac <scalbnf>
 80321de:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 80321c4 <__kernel_rem_pio2f+0x300>
 80321e2:	eeb4 0ac7 	vcmpe.f32	s0, s14
 80321e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80321ea:	db19      	blt.n	8032220 <__kernel_rem_pio2f+0x35c>
 80321ec:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 80321c8 <__kernel_rem_pio2f+0x304>
 80321f0:	aa08      	add	r2, sp, #32
 80321f2:	3508      	adds	r5, #8
 80321f4:	ee60 7a27 	vmul.f32	s15, s0, s15
 80321f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80321fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8032200:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8032204:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8032208:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 803220c:	ee10 3a10 	vmov	r3, s0
 8032210:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8032214:	3401      	adds	r4, #1
 8032216:	ee17 3a90 	vmov	r3, s15
 803221a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 803221e:	e74c      	b.n	80320ba <__kernel_rem_pio2f+0x1f6>
 8032220:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8032224:	aa08      	add	r2, sp, #32
 8032226:	ee10 3a10 	vmov	r3, s0
 803222a:	e7f6      	b.n	803221a <__kernel_rem_pio2f+0x356>
 803222c:	a808      	add	r0, sp, #32
 803222e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8032232:	3b01      	subs	r3, #1
 8032234:	ee07 0a90 	vmov	s15, r0
 8032238:	9001      	str	r0, [sp, #4]
 803223a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803223e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8032242:	ee20 0a07 	vmul.f32	s0, s0, s14
 8032246:	ed62 7a01 	vstmdb	r2!, {s15}
 803224a:	e743      	b.n	80320d4 <__kernel_rem_pio2f+0x210>
 803224c:	ecfc 6a01 	vldmia	ip!, {s13}
 8032250:	3001      	adds	r0, #1
 8032252:	ecb5 7a01 	vldmia	r5!, {s14}
 8032256:	eee6 7a87 	vfma.f32	s15, s13, s14
 803225a:	4550      	cmp	r0, sl
 803225c:	dc01      	bgt.n	8032262 <__kernel_rem_pio2f+0x39e>
 803225e:	4282      	cmp	r2, r0
 8032260:	daf4      	bge.n	803224c <__kernel_rem_pio2f+0x388>
 8032262:	a858      	add	r0, sp, #352	@ 0x160
 8032264:	3b01      	subs	r3, #1
 8032266:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 803226a:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 803226e:	e735      	b.n	80320dc <__kernel_rem_pio2f+0x218>
 8032270:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8032272:	2b02      	cmp	r3, #2
 8032274:	dc09      	bgt.n	803228a <__kernel_rem_pio2f+0x3c6>
 8032276:	2b00      	cmp	r3, #0
 8032278:	dc2b      	bgt.n	80322d2 <__kernel_rem_pio2f+0x40e>
 803227a:	d044      	beq.n	8032306 <__kernel_rem_pio2f+0x442>
 803227c:	f009 0007 	and.w	r0, r9, #7
 8032280:	b059      	add	sp, #356	@ 0x164
 8032282:	ecbd 8b04 	vpop	{d8-d9}
 8032286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803228a:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 803228c:	2b03      	cmp	r3, #3
 803228e:	d1f5      	bne.n	803227c <__kernel_rem_pio2f+0x3b8>
 8032290:	aa30      	add	r2, sp, #192	@ 0xc0
 8032292:	1f0b      	subs	r3, r1, #4
 8032294:	4620      	mov	r0, r4
 8032296:	4413      	add	r3, r2
 8032298:	461a      	mov	r2, r3
 803229a:	2800      	cmp	r0, #0
 803229c:	f1a2 0204 	sub.w	r2, r2, #4
 80322a0:	dc52      	bgt.n	8032348 <__kernel_rem_pio2f+0x484>
 80322a2:	4622      	mov	r2, r4
 80322a4:	2a01      	cmp	r2, #1
 80322a6:	f1a3 0304 	sub.w	r3, r3, #4
 80322aa:	dc5d      	bgt.n	8032368 <__kernel_rem_pio2f+0x4a4>
 80322ac:	ab30      	add	r3, sp, #192	@ 0xc0
 80322ae:	ed5f 7a39 	vldr	s15, [pc, #-228]	@ 80321cc <__kernel_rem_pio2f+0x308>
 80322b2:	440b      	add	r3, r1
 80322b4:	2c01      	cmp	r4, #1
 80322b6:	dc67      	bgt.n	8032388 <__kernel_rem_pio2f+0x4c4>
 80322b8:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 80322bc:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 80322c0:	2e00      	cmp	r6, #0
 80322c2:	d167      	bne.n	8032394 <__kernel_rem_pio2f+0x4d0>
 80322c4:	edc7 6a00 	vstr	s13, [r7]
 80322c8:	ed87 7a01 	vstr	s14, [r7, #4]
 80322cc:	edc7 7a02 	vstr	s15, [r7, #8]
 80322d0:	e7d4      	b.n	803227c <__kernel_rem_pio2f+0x3b8>
 80322d2:	ab30      	add	r3, sp, #192	@ 0xc0
 80322d4:	4622      	mov	r2, r4
 80322d6:	ed1f 7a43 	vldr	s14, [pc, #-268]	@ 80321cc <__kernel_rem_pio2f+0x308>
 80322da:	440b      	add	r3, r1
 80322dc:	2a00      	cmp	r2, #0
 80322de:	da24      	bge.n	803232a <__kernel_rem_pio2f+0x466>
 80322e0:	b34e      	cbz	r6, 8032336 <__kernel_rem_pio2f+0x472>
 80322e2:	eef1 7a47 	vneg.f32	s15, s14
 80322e6:	edc7 7a00 	vstr	s15, [r7]
 80322ea:	aa31      	add	r2, sp, #196	@ 0xc4
 80322ec:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 80322f0:	2301      	movs	r3, #1
 80322f2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80322f6:	429c      	cmp	r4, r3
 80322f8:	da20      	bge.n	803233c <__kernel_rem_pio2f+0x478>
 80322fa:	b10e      	cbz	r6, 8032300 <__kernel_rem_pio2f+0x43c>
 80322fc:	eef1 7a67 	vneg.f32	s15, s15
 8032300:	edc7 7a01 	vstr	s15, [r7, #4]
 8032304:	e7ba      	b.n	803227c <__kernel_rem_pio2f+0x3b8>
 8032306:	ab30      	add	r3, sp, #192	@ 0xc0
 8032308:	ed5f 7a50 	vldr	s15, [pc, #-320]	@ 80321cc <__kernel_rem_pio2f+0x308>
 803230c:	440b      	add	r3, r1
 803230e:	2c00      	cmp	r4, #0
 8032310:	da05      	bge.n	803231e <__kernel_rem_pio2f+0x45a>
 8032312:	b10e      	cbz	r6, 8032318 <__kernel_rem_pio2f+0x454>
 8032314:	eef1 7a67 	vneg.f32	s15, s15
 8032318:	edc7 7a00 	vstr	s15, [r7]
 803231c:	e7ae      	b.n	803227c <__kernel_rem_pio2f+0x3b8>
 803231e:	ed33 7a01 	vldmdb	r3!, {s14}
 8032322:	3c01      	subs	r4, #1
 8032324:	ee77 7a87 	vadd.f32	s15, s15, s14
 8032328:	e7f1      	b.n	803230e <__kernel_rem_pio2f+0x44a>
 803232a:	ed73 7a01 	vldmdb	r3!, {s15}
 803232e:	3a01      	subs	r2, #1
 8032330:	ee37 7a27 	vadd.f32	s14, s14, s15
 8032334:	e7d2      	b.n	80322dc <__kernel_rem_pio2f+0x418>
 8032336:	eef0 7a47 	vmov.f32	s15, s14
 803233a:	e7d4      	b.n	80322e6 <__kernel_rem_pio2f+0x422>
 803233c:	ecb2 7a01 	vldmia	r2!, {s14}
 8032340:	3301      	adds	r3, #1
 8032342:	ee77 7a87 	vadd.f32	s15, s15, s14
 8032346:	e7d6      	b.n	80322f6 <__kernel_rem_pio2f+0x432>
 8032348:	edd2 7a00 	vldr	s15, [r2]
 803234c:	3801      	subs	r0, #1
 803234e:	edd2 6a01 	vldr	s13, [r2, #4]
 8032352:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8032356:	ee77 7ac7 	vsub.f32	s15, s15, s14
 803235a:	ed82 7a00 	vstr	s14, [r2]
 803235e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8032362:	edc2 7a01 	vstr	s15, [r2, #4]
 8032366:	e798      	b.n	803229a <__kernel_rem_pio2f+0x3d6>
 8032368:	edd3 7a00 	vldr	s15, [r3]
 803236c:	3a01      	subs	r2, #1
 803236e:	edd3 6a01 	vldr	s13, [r3, #4]
 8032372:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8032376:	ee77 7ac7 	vsub.f32	s15, s15, s14
 803237a:	ed83 7a00 	vstr	s14, [r3]
 803237e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8032382:	edc3 7a01 	vstr	s15, [r3, #4]
 8032386:	e78d      	b.n	80322a4 <__kernel_rem_pio2f+0x3e0>
 8032388:	ed33 7a01 	vldmdb	r3!, {s14}
 803238c:	3c01      	subs	r4, #1
 803238e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8032392:	e78f      	b.n	80322b4 <__kernel_rem_pio2f+0x3f0>
 8032394:	eef1 6a66 	vneg.f32	s13, s13
 8032398:	eeb1 7a47 	vneg.f32	s14, s14
 803239c:	eef1 7a67 	vneg.f32	s15, s15
 80323a0:	edc7 6a00 	vstr	s13, [r7]
 80323a4:	ed87 7a01 	vstr	s14, [r7, #4]
 80323a8:	e790      	b.n	80322cc <__kernel_rem_pio2f+0x408>
 80323aa:	bf00      	nop

080323ac <scalbnf>:
 80323ac:	ee10 3a10 	vmov	r3, s0
 80323b0:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 80323b4:	d02a      	beq.n	803240c <scalbnf+0x60>
 80323b6:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 80323ba:	d302      	bcc.n	80323c2 <scalbnf+0x16>
 80323bc:	ee30 0a00 	vadd.f32	s0, s0, s0
 80323c0:	4770      	bx	lr
 80323c2:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 80323c6:	d122      	bne.n	803240e <scalbnf+0x62>
 80323c8:	4b23      	ldr	r3, [pc, #140]	@ (8032458 <scalbnf+0xac>)
 80323ca:	eddf 7a24 	vldr	s15, [pc, #144]	@ 803245c <scalbnf+0xb0>
 80323ce:	4298      	cmp	r0, r3
 80323d0:	ee20 0a27 	vmul.f32	s0, s0, s15
 80323d4:	db16      	blt.n	8032404 <scalbnf+0x58>
 80323d6:	ee10 3a10 	vmov	r3, s0
 80323da:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80323de:	3a19      	subs	r2, #25
 80323e0:	f24c 3150 	movw	r1, #50000	@ 0xc350
 80323e4:	4288      	cmp	r0, r1
 80323e6:	dd14      	ble.n	8032412 <scalbnf+0x66>
 80323e8:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 8032460 <scalbnf+0xb4>
 80323ec:	ee10 3a10 	vmov	r3, s0
 80323f0:	eddf 6a1c 	vldr	s13, [pc, #112]	@ 8032464 <scalbnf+0xb8>
 80323f4:	eeb0 7a67 	vmov.f32	s14, s15
 80323f8:	2b00      	cmp	r3, #0
 80323fa:	fe67 7aa6 	vselge.f32	s15, s15, s13
 80323fe:	ee27 0a87 	vmul.f32	s0, s15, s14
 8032402:	4770      	bx	lr
 8032404:	eddf 7a18 	vldr	s15, [pc, #96]	@ 8032468 <scalbnf+0xbc>
 8032408:	ee27 0a80 	vmul.f32	s0, s15, s0
 803240c:	4770      	bx	lr
 803240e:	0dd2      	lsrs	r2, r2, #23
 8032410:	e7e6      	b.n	80323e0 <scalbnf+0x34>
 8032412:	4410      	add	r0, r2
 8032414:	28fe      	cmp	r0, #254	@ 0xfe
 8032416:	dce7      	bgt.n	80323e8 <scalbnf+0x3c>
 8032418:	2800      	cmp	r0, #0
 803241a:	dd06      	ble.n	803242a <scalbnf+0x7e>
 803241c:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8032420:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8032424:	ee00 3a10 	vmov	s0, r3
 8032428:	4770      	bx	lr
 803242a:	f110 0f16 	cmn.w	r0, #22
 803242e:	da09      	bge.n	8032444 <scalbnf+0x98>
 8032430:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8032468 <scalbnf+0xbc>
 8032434:	ee10 3a10 	vmov	r3, s0
 8032438:	eddf 6a0c 	vldr	s13, [pc, #48]	@ 803246c <scalbnf+0xc0>
 803243c:	eeb0 7a67 	vmov.f32	s14, s15
 8032440:	2b00      	cmp	r3, #0
 8032442:	e7da      	b.n	80323fa <scalbnf+0x4e>
 8032444:	3019      	adds	r0, #25
 8032446:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 803244a:	ed9f 0a09 	vldr	s0, [pc, #36]	@ 8032470 <scalbnf+0xc4>
 803244e:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8032452:	ee07 3a90 	vmov	s15, r3
 8032456:	e7d7      	b.n	8032408 <scalbnf+0x5c>
 8032458:	ffff3cb0 	.word	0xffff3cb0
 803245c:	4c000000 	.word	0x4c000000
 8032460:	7149f2ca 	.word	0x7149f2ca
 8032464:	f149f2ca 	.word	0xf149f2ca
 8032468:	0da24260 	.word	0x0da24260
 803246c:	8da24260 	.word	0x8da24260
 8032470:	33000000 	.word	0x33000000

08032474 <floorf>:
 8032474:	febb 0a40 	vrintm.f32	s0, s0
 8032478:	4770      	bx	lr

0803247a <abort>:
 803247a:	2006      	movs	r0, #6
 803247c:	b508      	push	{r3, lr}
 803247e:	f000 fa4d 	bl	803291c <raise>
 8032482:	2001      	movs	r0, #1
 8032484:	f7ce fd1a 	bl	8000ebc <_exit>

08032488 <__assert_func>:
 8032488:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 803248a:	4614      	mov	r4, r2
 803248c:	461a      	mov	r2, r3
 803248e:	4b09      	ldr	r3, [pc, #36]	@ (80324b4 <__assert_func+0x2c>)
 8032490:	4605      	mov	r5, r0
 8032492:	681b      	ldr	r3, [r3, #0]
 8032494:	68d8      	ldr	r0, [r3, #12]
 8032496:	b954      	cbnz	r4, 80324ae <__assert_func+0x26>
 8032498:	4b07      	ldr	r3, [pc, #28]	@ (80324b8 <__assert_func+0x30>)
 803249a:	461c      	mov	r4, r3
 803249c:	9100      	str	r1, [sp, #0]
 803249e:	4907      	ldr	r1, [pc, #28]	@ (80324bc <__assert_func+0x34>)
 80324a0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80324a4:	462b      	mov	r3, r5
 80324a6:	f000 f983 	bl	80327b0 <fiprintf>
 80324aa:	f7ff ffe6 	bl	803247a <abort>
 80324ae:	4b04      	ldr	r3, [pc, #16]	@ (80324c0 <__assert_func+0x38>)
 80324b0:	e7f4      	b.n	803249c <__assert_func+0x14>
 80324b2:	bf00      	nop
 80324b4:	20000254 	.word	0x20000254
 80324b8:	08038627 	.word	0x08038627
 80324bc:	080385f9 	.word	0x080385f9
 80324c0:	080385ec 	.word	0x080385ec

080324c4 <atexit>:
 80324c4:	2300      	movs	r3, #0
 80324c6:	4601      	mov	r1, r0
 80324c8:	461a      	mov	r2, r3
 80324ca:	4618      	mov	r0, r3
 80324cc:	f000 bad2 	b.w	8032a74 <__register_exitproc>

080324d0 <malloc>:
 80324d0:	4b02      	ldr	r3, [pc, #8]	@ (80324dc <malloc+0xc>)
 80324d2:	4601      	mov	r1, r0
 80324d4:	6818      	ldr	r0, [r3, #0]
 80324d6:	f000 b82d 	b.w	8032534 <_malloc_r>
 80324da:	bf00      	nop
 80324dc:	20000254 	.word	0x20000254

080324e0 <free>:
 80324e0:	4b02      	ldr	r3, [pc, #8]	@ (80324ec <free+0xc>)
 80324e2:	4601      	mov	r1, r0
 80324e4:	6818      	ldr	r0, [r3, #0]
 80324e6:	f000 bb23 	b.w	8032b30 <_free_r>
 80324ea:	bf00      	nop
 80324ec:	20000254 	.word	0x20000254

080324f0 <sbrk_aligned>:
 80324f0:	b570      	push	{r4, r5, r6, lr}
 80324f2:	4e0f      	ldr	r6, [pc, #60]	@ (8032530 <sbrk_aligned+0x40>)
 80324f4:	460c      	mov	r4, r1
 80324f6:	4605      	mov	r5, r0
 80324f8:	6831      	ldr	r1, [r6, #0]
 80324fa:	b911      	cbnz	r1, 8032502 <sbrk_aligned+0x12>
 80324fc:	f000 fa5e 	bl	80329bc <_sbrk_r>
 8032500:	6030      	str	r0, [r6, #0]
 8032502:	4621      	mov	r1, r4
 8032504:	4628      	mov	r0, r5
 8032506:	f000 fa59 	bl	80329bc <_sbrk_r>
 803250a:	1c43      	adds	r3, r0, #1
 803250c:	d103      	bne.n	8032516 <sbrk_aligned+0x26>
 803250e:	f04f 34ff 	mov.w	r4, #4294967295
 8032512:	4620      	mov	r0, r4
 8032514:	bd70      	pop	{r4, r5, r6, pc}
 8032516:	1cc4      	adds	r4, r0, #3
 8032518:	f024 0403 	bic.w	r4, r4, #3
 803251c:	42a0      	cmp	r0, r4
 803251e:	d0f8      	beq.n	8032512 <sbrk_aligned+0x22>
 8032520:	1a21      	subs	r1, r4, r0
 8032522:	4628      	mov	r0, r5
 8032524:	f000 fa4a 	bl	80329bc <_sbrk_r>
 8032528:	3001      	adds	r0, #1
 803252a:	d1f2      	bne.n	8032512 <sbrk_aligned+0x22>
 803252c:	e7ef      	b.n	803250e <sbrk_aligned+0x1e>
 803252e:	bf00      	nop
 8032530:	200833fc 	.word	0x200833fc

08032534 <_malloc_r>:
 8032534:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032538:	1ccd      	adds	r5, r1, #3
 803253a:	4606      	mov	r6, r0
 803253c:	f025 0503 	bic.w	r5, r5, #3
 8032540:	3508      	adds	r5, #8
 8032542:	2d0c      	cmp	r5, #12
 8032544:	bf38      	it	cc
 8032546:	250c      	movcc	r5, #12
 8032548:	2d00      	cmp	r5, #0
 803254a:	db01      	blt.n	8032550 <_malloc_r+0x1c>
 803254c:	42a9      	cmp	r1, r5
 803254e:	d904      	bls.n	803255a <_malloc_r+0x26>
 8032550:	230c      	movs	r3, #12
 8032552:	6033      	str	r3, [r6, #0]
 8032554:	2000      	movs	r0, #0
 8032556:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 803255a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8032630 <_malloc_r+0xfc>
 803255e:	f000 f869 	bl	8032634 <__malloc_lock>
 8032562:	f8d8 3000 	ldr.w	r3, [r8]
 8032566:	461c      	mov	r4, r3
 8032568:	bb44      	cbnz	r4, 80325bc <_malloc_r+0x88>
 803256a:	4629      	mov	r1, r5
 803256c:	4630      	mov	r0, r6
 803256e:	f7ff ffbf 	bl	80324f0 <sbrk_aligned>
 8032572:	1c43      	adds	r3, r0, #1
 8032574:	4604      	mov	r4, r0
 8032576:	d158      	bne.n	803262a <_malloc_r+0xf6>
 8032578:	f8d8 4000 	ldr.w	r4, [r8]
 803257c:	4627      	mov	r7, r4
 803257e:	2f00      	cmp	r7, #0
 8032580:	d143      	bne.n	803260a <_malloc_r+0xd6>
 8032582:	2c00      	cmp	r4, #0
 8032584:	d04b      	beq.n	803261e <_malloc_r+0xea>
 8032586:	6823      	ldr	r3, [r4, #0]
 8032588:	4639      	mov	r1, r7
 803258a:	4630      	mov	r0, r6
 803258c:	eb04 0903 	add.w	r9, r4, r3
 8032590:	f000 fa14 	bl	80329bc <_sbrk_r>
 8032594:	4581      	cmp	r9, r0
 8032596:	d142      	bne.n	803261e <_malloc_r+0xea>
 8032598:	6821      	ldr	r1, [r4, #0]
 803259a:	4630      	mov	r0, r6
 803259c:	1a6d      	subs	r5, r5, r1
 803259e:	4629      	mov	r1, r5
 80325a0:	f7ff ffa6 	bl	80324f0 <sbrk_aligned>
 80325a4:	3001      	adds	r0, #1
 80325a6:	d03a      	beq.n	803261e <_malloc_r+0xea>
 80325a8:	6823      	ldr	r3, [r4, #0]
 80325aa:	442b      	add	r3, r5
 80325ac:	6023      	str	r3, [r4, #0]
 80325ae:	f8d8 3000 	ldr.w	r3, [r8]
 80325b2:	685a      	ldr	r2, [r3, #4]
 80325b4:	bb62      	cbnz	r2, 8032610 <_malloc_r+0xdc>
 80325b6:	f8c8 7000 	str.w	r7, [r8]
 80325ba:	e00f      	b.n	80325dc <_malloc_r+0xa8>
 80325bc:	6822      	ldr	r2, [r4, #0]
 80325be:	1b52      	subs	r2, r2, r5
 80325c0:	d420      	bmi.n	8032604 <_malloc_r+0xd0>
 80325c2:	2a0b      	cmp	r2, #11
 80325c4:	d917      	bls.n	80325f6 <_malloc_r+0xc2>
 80325c6:	1961      	adds	r1, r4, r5
 80325c8:	42a3      	cmp	r3, r4
 80325ca:	6025      	str	r5, [r4, #0]
 80325cc:	bf18      	it	ne
 80325ce:	6059      	strne	r1, [r3, #4]
 80325d0:	6863      	ldr	r3, [r4, #4]
 80325d2:	bf08      	it	eq
 80325d4:	f8c8 1000 	streq.w	r1, [r8]
 80325d8:	5162      	str	r2, [r4, r5]
 80325da:	604b      	str	r3, [r1, #4]
 80325dc:	4630      	mov	r0, r6
 80325de:	f000 f82f 	bl	8032640 <__malloc_unlock>
 80325e2:	f104 000b 	add.w	r0, r4, #11
 80325e6:	1d23      	adds	r3, r4, #4
 80325e8:	f020 0007 	bic.w	r0, r0, #7
 80325ec:	1ac2      	subs	r2, r0, r3
 80325ee:	bf1c      	itt	ne
 80325f0:	1a1b      	subne	r3, r3, r0
 80325f2:	50a3      	strne	r3, [r4, r2]
 80325f4:	e7af      	b.n	8032556 <_malloc_r+0x22>
 80325f6:	6862      	ldr	r2, [r4, #4]
 80325f8:	42a3      	cmp	r3, r4
 80325fa:	bf0c      	ite	eq
 80325fc:	f8c8 2000 	streq.w	r2, [r8]
 8032600:	605a      	strne	r2, [r3, #4]
 8032602:	e7eb      	b.n	80325dc <_malloc_r+0xa8>
 8032604:	4623      	mov	r3, r4
 8032606:	6864      	ldr	r4, [r4, #4]
 8032608:	e7ae      	b.n	8032568 <_malloc_r+0x34>
 803260a:	463c      	mov	r4, r7
 803260c:	687f      	ldr	r7, [r7, #4]
 803260e:	e7b6      	b.n	803257e <_malloc_r+0x4a>
 8032610:	461a      	mov	r2, r3
 8032612:	685b      	ldr	r3, [r3, #4]
 8032614:	42a3      	cmp	r3, r4
 8032616:	d1fb      	bne.n	8032610 <_malloc_r+0xdc>
 8032618:	2300      	movs	r3, #0
 803261a:	6053      	str	r3, [r2, #4]
 803261c:	e7de      	b.n	80325dc <_malloc_r+0xa8>
 803261e:	230c      	movs	r3, #12
 8032620:	4630      	mov	r0, r6
 8032622:	6033      	str	r3, [r6, #0]
 8032624:	f000 f80c 	bl	8032640 <__malloc_unlock>
 8032628:	e794      	b.n	8032554 <_malloc_r+0x20>
 803262a:	6005      	str	r5, [r0, #0]
 803262c:	e7d6      	b.n	80325dc <_malloc_r+0xa8>
 803262e:	bf00      	nop
 8032630:	20083400 	.word	0x20083400

08032634 <__malloc_lock>:
 8032634:	4801      	ldr	r0, [pc, #4]	@ (803263c <__malloc_lock+0x8>)
 8032636:	f000 ba0e 	b.w	8032a56 <__retarget_lock_acquire_recursive>
 803263a:	bf00      	nop
 803263c:	20083544 	.word	0x20083544

08032640 <__malloc_unlock>:
 8032640:	4801      	ldr	r0, [pc, #4]	@ (8032648 <__malloc_unlock+0x8>)
 8032642:	f000 ba09 	b.w	8032a58 <__retarget_lock_release_recursive>
 8032646:	bf00      	nop
 8032648:	20083544 	.word	0x20083544

0803264c <__cxa_atexit>:
 803264c:	b510      	push	{r4, lr}
 803264e:	4604      	mov	r4, r0
 8032650:	4804      	ldr	r0, [pc, #16]	@ (8032664 <__cxa_atexit+0x18>)
 8032652:	4613      	mov	r3, r2
 8032654:	b120      	cbz	r0, 8032660 <__cxa_atexit+0x14>
 8032656:	460a      	mov	r2, r1
 8032658:	2002      	movs	r0, #2
 803265a:	4621      	mov	r1, r4
 803265c:	f000 fa0a 	bl	8032a74 <__register_exitproc>
 8032660:	bd10      	pop	{r4, pc}
 8032662:	bf00      	nop
 8032664:	08032a75 	.word	0x08032a75

08032668 <std>:
 8032668:	2300      	movs	r3, #0
 803266a:	b510      	push	{r4, lr}
 803266c:	4604      	mov	r4, r0
 803266e:	6083      	str	r3, [r0, #8]
 8032670:	8181      	strh	r1, [r0, #12]
 8032672:	4619      	mov	r1, r3
 8032674:	6643      	str	r3, [r0, #100]	@ 0x64
 8032676:	81c2      	strh	r2, [r0, #14]
 8032678:	2208      	movs	r2, #8
 803267a:	6183      	str	r3, [r0, #24]
 803267c:	e9c0 3300 	strd	r3, r3, [r0]
 8032680:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8032684:	305c      	adds	r0, #92	@ 0x5c
 8032686:	f000 f906 	bl	8032896 <memset>
 803268a:	4b0d      	ldr	r3, [pc, #52]	@ (80326c0 <std+0x58>)
 803268c:	6224      	str	r4, [r4, #32]
 803268e:	6263      	str	r3, [r4, #36]	@ 0x24
 8032690:	4b0c      	ldr	r3, [pc, #48]	@ (80326c4 <std+0x5c>)
 8032692:	62a3      	str	r3, [r4, #40]	@ 0x28
 8032694:	4b0c      	ldr	r3, [pc, #48]	@ (80326c8 <std+0x60>)
 8032696:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8032698:	4b0c      	ldr	r3, [pc, #48]	@ (80326cc <std+0x64>)
 803269a:	6323      	str	r3, [r4, #48]	@ 0x30
 803269c:	4b0c      	ldr	r3, [pc, #48]	@ (80326d0 <std+0x68>)
 803269e:	429c      	cmp	r4, r3
 80326a0:	d006      	beq.n	80326b0 <std+0x48>
 80326a2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80326a6:	4294      	cmp	r4, r2
 80326a8:	d002      	beq.n	80326b0 <std+0x48>
 80326aa:	33d0      	adds	r3, #208	@ 0xd0
 80326ac:	429c      	cmp	r4, r3
 80326ae:	d105      	bne.n	80326bc <std+0x54>
 80326b0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80326b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80326b8:	f000 b9cc 	b.w	8032a54 <__retarget_lock_init_recursive>
 80326bc:	bd10      	pop	{r4, pc}
 80326be:	bf00      	nop
 80326c0:	08032811 	.word	0x08032811
 80326c4:	08032833 	.word	0x08032833
 80326c8:	0803286b 	.word	0x0803286b
 80326cc:	0803288f 	.word	0x0803288f
 80326d0:	20083404 	.word	0x20083404

080326d4 <stdio_exit_handler>:
 80326d4:	4a02      	ldr	r2, [pc, #8]	@ (80326e0 <stdio_exit_handler+0xc>)
 80326d6:	4903      	ldr	r1, [pc, #12]	@ (80326e4 <stdio_exit_handler+0x10>)
 80326d8:	4803      	ldr	r0, [pc, #12]	@ (80326e8 <stdio_exit_handler+0x14>)
 80326da:	f000 b87b 	b.w	80327d4 <_fwalk_sglue>
 80326de:	bf00      	nop
 80326e0:	20000248 	.word	0x20000248
 80326e4:	08033275 	.word	0x08033275
 80326e8:	20000258 	.word	0x20000258

080326ec <cleanup_stdio>:
 80326ec:	6841      	ldr	r1, [r0, #4]
 80326ee:	4b0c      	ldr	r3, [pc, #48]	@ (8032720 <cleanup_stdio+0x34>)
 80326f0:	4299      	cmp	r1, r3
 80326f2:	b510      	push	{r4, lr}
 80326f4:	4604      	mov	r4, r0
 80326f6:	d001      	beq.n	80326fc <cleanup_stdio+0x10>
 80326f8:	f000 fdbc 	bl	8033274 <_fflush_r>
 80326fc:	68a1      	ldr	r1, [r4, #8]
 80326fe:	4b09      	ldr	r3, [pc, #36]	@ (8032724 <cleanup_stdio+0x38>)
 8032700:	4299      	cmp	r1, r3
 8032702:	d002      	beq.n	803270a <cleanup_stdio+0x1e>
 8032704:	4620      	mov	r0, r4
 8032706:	f000 fdb5 	bl	8033274 <_fflush_r>
 803270a:	68e1      	ldr	r1, [r4, #12]
 803270c:	4b06      	ldr	r3, [pc, #24]	@ (8032728 <cleanup_stdio+0x3c>)
 803270e:	4299      	cmp	r1, r3
 8032710:	d004      	beq.n	803271c <cleanup_stdio+0x30>
 8032712:	4620      	mov	r0, r4
 8032714:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032718:	f000 bdac 	b.w	8033274 <_fflush_r>
 803271c:	bd10      	pop	{r4, pc}
 803271e:	bf00      	nop
 8032720:	20083404 	.word	0x20083404
 8032724:	2008346c 	.word	0x2008346c
 8032728:	200834d4 	.word	0x200834d4

0803272c <global_stdio_init.part.0>:
 803272c:	b510      	push	{r4, lr}
 803272e:	4b0b      	ldr	r3, [pc, #44]	@ (803275c <global_stdio_init.part.0+0x30>)
 8032730:	2104      	movs	r1, #4
 8032732:	4c0b      	ldr	r4, [pc, #44]	@ (8032760 <global_stdio_init.part.0+0x34>)
 8032734:	4a0b      	ldr	r2, [pc, #44]	@ (8032764 <global_stdio_init.part.0+0x38>)
 8032736:	4620      	mov	r0, r4
 8032738:	601a      	str	r2, [r3, #0]
 803273a:	2200      	movs	r2, #0
 803273c:	f7ff ff94 	bl	8032668 <std>
 8032740:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8032744:	2201      	movs	r2, #1
 8032746:	2109      	movs	r1, #9
 8032748:	f7ff ff8e 	bl	8032668 <std>
 803274c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8032750:	2202      	movs	r2, #2
 8032752:	2112      	movs	r1, #18
 8032754:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032758:	f7ff bf86 	b.w	8032668 <std>
 803275c:	2008353c 	.word	0x2008353c
 8032760:	20083404 	.word	0x20083404
 8032764:	080326d5 	.word	0x080326d5

08032768 <__sfp_lock_acquire>:
 8032768:	4801      	ldr	r0, [pc, #4]	@ (8032770 <__sfp_lock_acquire+0x8>)
 803276a:	f000 b974 	b.w	8032a56 <__retarget_lock_acquire_recursive>
 803276e:	bf00      	nop
 8032770:	20083546 	.word	0x20083546

08032774 <__sfp_lock_release>:
 8032774:	4801      	ldr	r0, [pc, #4]	@ (803277c <__sfp_lock_release+0x8>)
 8032776:	f000 b96f 	b.w	8032a58 <__retarget_lock_release_recursive>
 803277a:	bf00      	nop
 803277c:	20083546 	.word	0x20083546

08032780 <__sinit>:
 8032780:	b510      	push	{r4, lr}
 8032782:	4604      	mov	r4, r0
 8032784:	f7ff fff0 	bl	8032768 <__sfp_lock_acquire>
 8032788:	6a23      	ldr	r3, [r4, #32]
 803278a:	b11b      	cbz	r3, 8032794 <__sinit+0x14>
 803278c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032790:	f7ff bff0 	b.w	8032774 <__sfp_lock_release>
 8032794:	4b04      	ldr	r3, [pc, #16]	@ (80327a8 <__sinit+0x28>)
 8032796:	6223      	str	r3, [r4, #32]
 8032798:	4b04      	ldr	r3, [pc, #16]	@ (80327ac <__sinit+0x2c>)
 803279a:	681b      	ldr	r3, [r3, #0]
 803279c:	2b00      	cmp	r3, #0
 803279e:	d1f5      	bne.n	803278c <__sinit+0xc>
 80327a0:	f7ff ffc4 	bl	803272c <global_stdio_init.part.0>
 80327a4:	e7f2      	b.n	803278c <__sinit+0xc>
 80327a6:	bf00      	nop
 80327a8:	080326ed 	.word	0x080326ed
 80327ac:	2008353c 	.word	0x2008353c

080327b0 <fiprintf>:
 80327b0:	b40e      	push	{r1, r2, r3}
 80327b2:	b503      	push	{r0, r1, lr}
 80327b4:	ab03      	add	r3, sp, #12
 80327b6:	4601      	mov	r1, r0
 80327b8:	4805      	ldr	r0, [pc, #20]	@ (80327d0 <fiprintf+0x20>)
 80327ba:	f853 2b04 	ldr.w	r2, [r3], #4
 80327be:	6800      	ldr	r0, [r0, #0]
 80327c0:	9301      	str	r3, [sp, #4]
 80327c2:	f000 fa29 	bl	8032c18 <_vfiprintf_r>
 80327c6:	b002      	add	sp, #8
 80327c8:	f85d eb04 	ldr.w	lr, [sp], #4
 80327cc:	b003      	add	sp, #12
 80327ce:	4770      	bx	lr
 80327d0:	20000254 	.word	0x20000254

080327d4 <_fwalk_sglue>:
 80327d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80327d8:	4607      	mov	r7, r0
 80327da:	4688      	mov	r8, r1
 80327dc:	4614      	mov	r4, r2
 80327de:	2600      	movs	r6, #0
 80327e0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80327e4:	f1b9 0901 	subs.w	r9, r9, #1
 80327e8:	d505      	bpl.n	80327f6 <_fwalk_sglue+0x22>
 80327ea:	6824      	ldr	r4, [r4, #0]
 80327ec:	2c00      	cmp	r4, #0
 80327ee:	d1f7      	bne.n	80327e0 <_fwalk_sglue+0xc>
 80327f0:	4630      	mov	r0, r6
 80327f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80327f6:	89ab      	ldrh	r3, [r5, #12]
 80327f8:	2b01      	cmp	r3, #1
 80327fa:	d907      	bls.n	803280c <_fwalk_sglue+0x38>
 80327fc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8032800:	3301      	adds	r3, #1
 8032802:	d003      	beq.n	803280c <_fwalk_sglue+0x38>
 8032804:	4629      	mov	r1, r5
 8032806:	4638      	mov	r0, r7
 8032808:	47c0      	blx	r8
 803280a:	4306      	orrs	r6, r0
 803280c:	3568      	adds	r5, #104	@ 0x68
 803280e:	e7e9      	b.n	80327e4 <_fwalk_sglue+0x10>

08032810 <__sread>:
 8032810:	b510      	push	{r4, lr}
 8032812:	460c      	mov	r4, r1
 8032814:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8032818:	f000 f8aa 	bl	8032970 <_read_r>
 803281c:	2800      	cmp	r0, #0
 803281e:	bfab      	itete	ge
 8032820:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8032822:	89a3      	ldrhlt	r3, [r4, #12]
 8032824:	181b      	addge	r3, r3, r0
 8032826:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 803282a:	bfac      	ite	ge
 803282c:	6563      	strge	r3, [r4, #84]	@ 0x54
 803282e:	81a3      	strhlt	r3, [r4, #12]
 8032830:	bd10      	pop	{r4, pc}

08032832 <__swrite>:
 8032832:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8032836:	461f      	mov	r7, r3
 8032838:	898b      	ldrh	r3, [r1, #12]
 803283a:	4605      	mov	r5, r0
 803283c:	460c      	mov	r4, r1
 803283e:	05db      	lsls	r3, r3, #23
 8032840:	4616      	mov	r6, r2
 8032842:	d505      	bpl.n	8032850 <__swrite+0x1e>
 8032844:	2302      	movs	r3, #2
 8032846:	2200      	movs	r2, #0
 8032848:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 803284c:	f000 f87e 	bl	803294c <_lseek_r>
 8032850:	89a3      	ldrh	r3, [r4, #12]
 8032852:	4632      	mov	r2, r6
 8032854:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8032858:	4628      	mov	r0, r5
 803285a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 803285e:	81a3      	strh	r3, [r4, #12]
 8032860:	463b      	mov	r3, r7
 8032862:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8032866:	f000 b8b9 	b.w	80329dc <_write_r>

0803286a <__sseek>:
 803286a:	b510      	push	{r4, lr}
 803286c:	460c      	mov	r4, r1
 803286e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8032872:	f000 f86b 	bl	803294c <_lseek_r>
 8032876:	1c43      	adds	r3, r0, #1
 8032878:	89a3      	ldrh	r3, [r4, #12]
 803287a:	bf15      	itete	ne
 803287c:	6560      	strne	r0, [r4, #84]	@ 0x54
 803287e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8032882:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8032886:	81a3      	strheq	r3, [r4, #12]
 8032888:	bf18      	it	ne
 803288a:	81a3      	strhne	r3, [r4, #12]
 803288c:	bd10      	pop	{r4, pc}

0803288e <__sclose>:
 803288e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8032892:	f000 b84b 	b.w	803292c <_close_r>

08032896 <memset>:
 8032896:	4402      	add	r2, r0
 8032898:	4603      	mov	r3, r0
 803289a:	4293      	cmp	r3, r2
 803289c:	d100      	bne.n	80328a0 <memset+0xa>
 803289e:	4770      	bx	lr
 80328a0:	f803 1b01 	strb.w	r1, [r3], #1
 80328a4:	e7f9      	b.n	803289a <memset+0x4>

080328a6 <strncmp>:
 80328a6:	b510      	push	{r4, lr}
 80328a8:	b16a      	cbz	r2, 80328c6 <strncmp+0x20>
 80328aa:	3901      	subs	r1, #1
 80328ac:	1884      	adds	r4, r0, r2
 80328ae:	f810 2b01 	ldrb.w	r2, [r0], #1
 80328b2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80328b6:	429a      	cmp	r2, r3
 80328b8:	d103      	bne.n	80328c2 <strncmp+0x1c>
 80328ba:	42a0      	cmp	r0, r4
 80328bc:	d001      	beq.n	80328c2 <strncmp+0x1c>
 80328be:	2a00      	cmp	r2, #0
 80328c0:	d1f5      	bne.n	80328ae <strncmp+0x8>
 80328c2:	1ad0      	subs	r0, r2, r3
 80328c4:	bd10      	pop	{r4, pc}
 80328c6:	4610      	mov	r0, r2
 80328c8:	e7fc      	b.n	80328c4 <strncmp+0x1e>

080328ca <_raise_r>:
 80328ca:	291f      	cmp	r1, #31
 80328cc:	b538      	push	{r3, r4, r5, lr}
 80328ce:	4605      	mov	r5, r0
 80328d0:	460c      	mov	r4, r1
 80328d2:	d904      	bls.n	80328de <_raise_r+0x14>
 80328d4:	2316      	movs	r3, #22
 80328d6:	6003      	str	r3, [r0, #0]
 80328d8:	f04f 30ff 	mov.w	r0, #4294967295
 80328dc:	bd38      	pop	{r3, r4, r5, pc}
 80328de:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80328e0:	b112      	cbz	r2, 80328e8 <_raise_r+0x1e>
 80328e2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80328e6:	b94b      	cbnz	r3, 80328fc <_raise_r+0x32>
 80328e8:	4628      	mov	r0, r5
 80328ea:	f000 f865 	bl	80329b8 <_getpid_r>
 80328ee:	4622      	mov	r2, r4
 80328f0:	4601      	mov	r1, r0
 80328f2:	4628      	mov	r0, r5
 80328f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80328f8:	f000 b84c 	b.w	8032994 <_kill_r>
 80328fc:	2b01      	cmp	r3, #1
 80328fe:	d00a      	beq.n	8032916 <_raise_r+0x4c>
 8032900:	1c59      	adds	r1, r3, #1
 8032902:	d103      	bne.n	803290c <_raise_r+0x42>
 8032904:	2316      	movs	r3, #22
 8032906:	6003      	str	r3, [r0, #0]
 8032908:	2001      	movs	r0, #1
 803290a:	e7e7      	b.n	80328dc <_raise_r+0x12>
 803290c:	2100      	movs	r1, #0
 803290e:	4620      	mov	r0, r4
 8032910:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8032914:	4798      	blx	r3
 8032916:	2000      	movs	r0, #0
 8032918:	e7e0      	b.n	80328dc <_raise_r+0x12>
	...

0803291c <raise>:
 803291c:	4b02      	ldr	r3, [pc, #8]	@ (8032928 <raise+0xc>)
 803291e:	4601      	mov	r1, r0
 8032920:	6818      	ldr	r0, [r3, #0]
 8032922:	f7ff bfd2 	b.w	80328ca <_raise_r>
 8032926:	bf00      	nop
 8032928:	20000254 	.word	0x20000254

0803292c <_close_r>:
 803292c:	b538      	push	{r3, r4, r5, lr}
 803292e:	2300      	movs	r3, #0
 8032930:	4d05      	ldr	r5, [pc, #20]	@ (8032948 <_close_r+0x1c>)
 8032932:	4604      	mov	r4, r0
 8032934:	4608      	mov	r0, r1
 8032936:	602b      	str	r3, [r5, #0]
 8032938:	f7ce fae2 	bl	8000f00 <_close>
 803293c:	1c43      	adds	r3, r0, #1
 803293e:	d102      	bne.n	8032946 <_close_r+0x1a>
 8032940:	682b      	ldr	r3, [r5, #0]
 8032942:	b103      	cbz	r3, 8032946 <_close_r+0x1a>
 8032944:	6023      	str	r3, [r4, #0]
 8032946:	bd38      	pop	{r3, r4, r5, pc}
 8032948:	20083540 	.word	0x20083540

0803294c <_lseek_r>:
 803294c:	b538      	push	{r3, r4, r5, lr}
 803294e:	4604      	mov	r4, r0
 8032950:	4d06      	ldr	r5, [pc, #24]	@ (803296c <_lseek_r+0x20>)
 8032952:	4608      	mov	r0, r1
 8032954:	4611      	mov	r1, r2
 8032956:	2200      	movs	r2, #0
 8032958:	602a      	str	r2, [r5, #0]
 803295a:	461a      	mov	r2, r3
 803295c:	f7ce fada 	bl	8000f14 <_lseek>
 8032960:	1c43      	adds	r3, r0, #1
 8032962:	d102      	bne.n	803296a <_lseek_r+0x1e>
 8032964:	682b      	ldr	r3, [r5, #0]
 8032966:	b103      	cbz	r3, 803296a <_lseek_r+0x1e>
 8032968:	6023      	str	r3, [r4, #0]
 803296a:	bd38      	pop	{r3, r4, r5, pc}
 803296c:	20083540 	.word	0x20083540

08032970 <_read_r>:
 8032970:	b538      	push	{r3, r4, r5, lr}
 8032972:	4604      	mov	r4, r0
 8032974:	4d06      	ldr	r5, [pc, #24]	@ (8032990 <_read_r+0x20>)
 8032976:	4608      	mov	r0, r1
 8032978:	4611      	mov	r1, r2
 803297a:	2200      	movs	r2, #0
 803297c:	602a      	str	r2, [r5, #0]
 803297e:	461a      	mov	r2, r3
 8032980:	f7ce faa2 	bl	8000ec8 <_read>
 8032984:	1c43      	adds	r3, r0, #1
 8032986:	d102      	bne.n	803298e <_read_r+0x1e>
 8032988:	682b      	ldr	r3, [r5, #0]
 803298a:	b103      	cbz	r3, 803298e <_read_r+0x1e>
 803298c:	6023      	str	r3, [r4, #0]
 803298e:	bd38      	pop	{r3, r4, r5, pc}
 8032990:	20083540 	.word	0x20083540

08032994 <_kill_r>:
 8032994:	b538      	push	{r3, r4, r5, lr}
 8032996:	2300      	movs	r3, #0
 8032998:	4d06      	ldr	r5, [pc, #24]	@ (80329b4 <_kill_r+0x20>)
 803299a:	4604      	mov	r4, r0
 803299c:	4608      	mov	r0, r1
 803299e:	4611      	mov	r1, r2
 80329a0:	602b      	str	r3, [r5, #0]
 80329a2:	f7ce fa83 	bl	8000eac <_kill>
 80329a6:	1c43      	adds	r3, r0, #1
 80329a8:	d102      	bne.n	80329b0 <_kill_r+0x1c>
 80329aa:	682b      	ldr	r3, [r5, #0]
 80329ac:	b103      	cbz	r3, 80329b0 <_kill_r+0x1c>
 80329ae:	6023      	str	r3, [r4, #0]
 80329b0:	bd38      	pop	{r3, r4, r5, pc}
 80329b2:	bf00      	nop
 80329b4:	20083540 	.word	0x20083540

080329b8 <_getpid_r>:
 80329b8:	f7ce ba76 	b.w	8000ea8 <_getpid>

080329bc <_sbrk_r>:
 80329bc:	b538      	push	{r3, r4, r5, lr}
 80329be:	2300      	movs	r3, #0
 80329c0:	4d05      	ldr	r5, [pc, #20]	@ (80329d8 <_sbrk_r+0x1c>)
 80329c2:	4604      	mov	r4, r0
 80329c4:	4608      	mov	r0, r1
 80329c6:	602b      	str	r3, [r5, #0]
 80329c8:	f7ce faa6 	bl	8000f18 <_sbrk>
 80329cc:	1c43      	adds	r3, r0, #1
 80329ce:	d102      	bne.n	80329d6 <_sbrk_r+0x1a>
 80329d0:	682b      	ldr	r3, [r5, #0]
 80329d2:	b103      	cbz	r3, 80329d6 <_sbrk_r+0x1a>
 80329d4:	6023      	str	r3, [r4, #0]
 80329d6:	bd38      	pop	{r3, r4, r5, pc}
 80329d8:	20083540 	.word	0x20083540

080329dc <_write_r>:
 80329dc:	b538      	push	{r3, r4, r5, lr}
 80329de:	4604      	mov	r4, r0
 80329e0:	4d06      	ldr	r5, [pc, #24]	@ (80329fc <_write_r+0x20>)
 80329e2:	4608      	mov	r0, r1
 80329e4:	4611      	mov	r1, r2
 80329e6:	2200      	movs	r2, #0
 80329e8:	602a      	str	r2, [r5, #0]
 80329ea:	461a      	mov	r2, r3
 80329ec:	f7ce fa7a 	bl	8000ee4 <_write>
 80329f0:	1c43      	adds	r3, r0, #1
 80329f2:	d102      	bne.n	80329fa <_write_r+0x1e>
 80329f4:	682b      	ldr	r3, [r5, #0]
 80329f6:	b103      	cbz	r3, 80329fa <_write_r+0x1e>
 80329f8:	6023      	str	r3, [r4, #0]
 80329fa:	bd38      	pop	{r3, r4, r5, pc}
 80329fc:	20083540 	.word	0x20083540

08032a00 <__errno>:
 8032a00:	4b01      	ldr	r3, [pc, #4]	@ (8032a08 <__errno+0x8>)
 8032a02:	6818      	ldr	r0, [r3, #0]
 8032a04:	4770      	bx	lr
 8032a06:	bf00      	nop
 8032a08:	20000254 	.word	0x20000254

08032a0c <__libc_init_array>:
 8032a0c:	b570      	push	{r4, r5, r6, lr}
 8032a0e:	4d0d      	ldr	r5, [pc, #52]	@ (8032a44 <__libc_init_array+0x38>)
 8032a10:	2600      	movs	r6, #0
 8032a12:	4c0d      	ldr	r4, [pc, #52]	@ (8032a48 <__libc_init_array+0x3c>)
 8032a14:	1b64      	subs	r4, r4, r5
 8032a16:	10a4      	asrs	r4, r4, #2
 8032a18:	42a6      	cmp	r6, r4
 8032a1a:	d109      	bne.n	8032a30 <__libc_init_array+0x24>
 8032a1c:	4d0b      	ldr	r5, [pc, #44]	@ (8032a4c <__libc_init_array+0x40>)
 8032a1e:	2600      	movs	r6, #0
 8032a20:	4c0b      	ldr	r4, [pc, #44]	@ (8032a50 <__libc_init_array+0x44>)
 8032a22:	f000 fd75 	bl	8033510 <_init>
 8032a26:	1b64      	subs	r4, r4, r5
 8032a28:	10a4      	asrs	r4, r4, #2
 8032a2a:	42a6      	cmp	r6, r4
 8032a2c:	d105      	bne.n	8032a3a <__libc_init_array+0x2e>
 8032a2e:	bd70      	pop	{r4, r5, r6, pc}
 8032a30:	f855 3b04 	ldr.w	r3, [r5], #4
 8032a34:	3601      	adds	r6, #1
 8032a36:	4798      	blx	r3
 8032a38:	e7ee      	b.n	8032a18 <__libc_init_array+0xc>
 8032a3a:	f855 3b04 	ldr.w	r3, [r5], #4
 8032a3e:	3601      	adds	r6, #1
 8032a40:	4798      	blx	r3
 8032a42:	e7f2      	b.n	8032a2a <__libc_init_array+0x1e>
 8032a44:	08038830 	.word	0x08038830
 8032a48:	08038830 	.word	0x08038830
 8032a4c:	08038830 	.word	0x08038830
 8032a50:	08038850 	.word	0x08038850

08032a54 <__retarget_lock_init_recursive>:
 8032a54:	4770      	bx	lr

08032a56 <__retarget_lock_acquire_recursive>:
 8032a56:	4770      	bx	lr

08032a58 <__retarget_lock_release_recursive>:
 8032a58:	4770      	bx	lr

08032a5a <memcpy>:
 8032a5a:	440a      	add	r2, r1
 8032a5c:	1e43      	subs	r3, r0, #1
 8032a5e:	4291      	cmp	r1, r2
 8032a60:	d100      	bne.n	8032a64 <memcpy+0xa>
 8032a62:	4770      	bx	lr
 8032a64:	b510      	push	{r4, lr}
 8032a66:	f811 4b01 	ldrb.w	r4, [r1], #1
 8032a6a:	4291      	cmp	r1, r2
 8032a6c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8032a70:	d1f9      	bne.n	8032a66 <memcpy+0xc>
 8032a72:	bd10      	pop	{r4, pc}

08032a74 <__register_exitproc>:
 8032a74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032a78:	4d28      	ldr	r5, [pc, #160]	@ (8032b1c <__register_exitproc+0xa8>)
 8032a7a:	4607      	mov	r7, r0
 8032a7c:	4691      	mov	r9, r2
 8032a7e:	460e      	mov	r6, r1
 8032a80:	6828      	ldr	r0, [r5, #0]
 8032a82:	4698      	mov	r8, r3
 8032a84:	f7ff ffe7 	bl	8032a56 <__retarget_lock_acquire_recursive>
 8032a88:	4a25      	ldr	r2, [pc, #148]	@ (8032b20 <__register_exitproc+0xac>)
 8032a8a:	6814      	ldr	r4, [r2, #0]
 8032a8c:	b93c      	cbnz	r4, 8032a9e <__register_exitproc+0x2a>
 8032a8e:	4b25      	ldr	r3, [pc, #148]	@ (8032b24 <__register_exitproc+0xb0>)
 8032a90:	6013      	str	r3, [r2, #0]
 8032a92:	4a25      	ldr	r2, [pc, #148]	@ (8032b28 <__register_exitproc+0xb4>)
 8032a94:	b112      	cbz	r2, 8032a9c <__register_exitproc+0x28>
 8032a96:	6812      	ldr	r2, [r2, #0]
 8032a98:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8032a9c:	4c21      	ldr	r4, [pc, #132]	@ (8032b24 <__register_exitproc+0xb0>)
 8032a9e:	6863      	ldr	r3, [r4, #4]
 8032aa0:	2b1f      	cmp	r3, #31
 8032aa2:	dd06      	ble.n	8032ab2 <__register_exitproc+0x3e>
 8032aa4:	6828      	ldr	r0, [r5, #0]
 8032aa6:	f7ff ffd7 	bl	8032a58 <__retarget_lock_release_recursive>
 8032aaa:	f04f 30ff 	mov.w	r0, #4294967295
 8032aae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8032ab2:	b33f      	cbz	r7, 8032b04 <__register_exitproc+0x90>
 8032ab4:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8032ab8:	b968      	cbnz	r0, 8032ad6 <__register_exitproc+0x62>
 8032aba:	4b1c      	ldr	r3, [pc, #112]	@ (8032b2c <__register_exitproc+0xb8>)
 8032abc:	2b00      	cmp	r3, #0
 8032abe:	d0f1      	beq.n	8032aa4 <__register_exitproc+0x30>
 8032ac0:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8032ac4:	f7ff fd04 	bl	80324d0 <malloc>
 8032ac8:	2800      	cmp	r0, #0
 8032aca:	d0eb      	beq.n	8032aa4 <__register_exitproc+0x30>
 8032acc:	2300      	movs	r3, #0
 8032ace:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8032ad2:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8032ad6:	6863      	ldr	r3, [r4, #4]
 8032ad8:	2201      	movs	r2, #1
 8032ada:	2f02      	cmp	r7, #2
 8032adc:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8032ae0:	fa02 f203 	lsl.w	r2, r2, r3
 8032ae4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8032ae8:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8032aec:	ea43 0302 	orr.w	r3, r3, r2
 8032af0:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8032af4:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8032af8:	bf02      	ittt	eq
 8032afa:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8032afe:	4313      	orreq	r3, r2
 8032b00:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8032b04:	6863      	ldr	r3, [r4, #4]
 8032b06:	6828      	ldr	r0, [r5, #0]
 8032b08:	1c5a      	adds	r2, r3, #1
 8032b0a:	3302      	adds	r3, #2
 8032b0c:	6062      	str	r2, [r4, #4]
 8032b0e:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8032b12:	f7ff ffa1 	bl	8032a58 <__retarget_lock_release_recursive>
 8032b16:	2000      	movs	r0, #0
 8032b18:	e7c9      	b.n	8032aae <__register_exitproc+0x3a>
 8032b1a:	bf00      	nop
 8032b1c:	200002a4 	.word	0x200002a4
 8032b20:	200835d4 	.word	0x200835d4
 8032b24:	20083548 	.word	0x20083548
 8032b28:	08038628 	.word	0x08038628
 8032b2c:	080324d1 	.word	0x080324d1

08032b30 <_free_r>:
 8032b30:	b538      	push	{r3, r4, r5, lr}
 8032b32:	4605      	mov	r5, r0
 8032b34:	2900      	cmp	r1, #0
 8032b36:	d041      	beq.n	8032bbc <_free_r+0x8c>
 8032b38:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8032b3c:	1f0c      	subs	r4, r1, #4
 8032b3e:	2b00      	cmp	r3, #0
 8032b40:	bfb8      	it	lt
 8032b42:	18e4      	addlt	r4, r4, r3
 8032b44:	f7ff fd76 	bl	8032634 <__malloc_lock>
 8032b48:	4a1d      	ldr	r2, [pc, #116]	@ (8032bc0 <_free_r+0x90>)
 8032b4a:	6813      	ldr	r3, [r2, #0]
 8032b4c:	b933      	cbnz	r3, 8032b5c <_free_r+0x2c>
 8032b4e:	6063      	str	r3, [r4, #4]
 8032b50:	6014      	str	r4, [r2, #0]
 8032b52:	4628      	mov	r0, r5
 8032b54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8032b58:	f7ff bd72 	b.w	8032640 <__malloc_unlock>
 8032b5c:	42a3      	cmp	r3, r4
 8032b5e:	d908      	bls.n	8032b72 <_free_r+0x42>
 8032b60:	6820      	ldr	r0, [r4, #0]
 8032b62:	1821      	adds	r1, r4, r0
 8032b64:	428b      	cmp	r3, r1
 8032b66:	bf01      	itttt	eq
 8032b68:	6819      	ldreq	r1, [r3, #0]
 8032b6a:	685b      	ldreq	r3, [r3, #4]
 8032b6c:	1809      	addeq	r1, r1, r0
 8032b6e:	6021      	streq	r1, [r4, #0]
 8032b70:	e7ed      	b.n	8032b4e <_free_r+0x1e>
 8032b72:	461a      	mov	r2, r3
 8032b74:	685b      	ldr	r3, [r3, #4]
 8032b76:	b10b      	cbz	r3, 8032b7c <_free_r+0x4c>
 8032b78:	42a3      	cmp	r3, r4
 8032b7a:	d9fa      	bls.n	8032b72 <_free_r+0x42>
 8032b7c:	6811      	ldr	r1, [r2, #0]
 8032b7e:	1850      	adds	r0, r2, r1
 8032b80:	42a0      	cmp	r0, r4
 8032b82:	d10b      	bne.n	8032b9c <_free_r+0x6c>
 8032b84:	6820      	ldr	r0, [r4, #0]
 8032b86:	4401      	add	r1, r0
 8032b88:	1850      	adds	r0, r2, r1
 8032b8a:	6011      	str	r1, [r2, #0]
 8032b8c:	4283      	cmp	r3, r0
 8032b8e:	d1e0      	bne.n	8032b52 <_free_r+0x22>
 8032b90:	6818      	ldr	r0, [r3, #0]
 8032b92:	685b      	ldr	r3, [r3, #4]
 8032b94:	4408      	add	r0, r1
 8032b96:	6053      	str	r3, [r2, #4]
 8032b98:	6010      	str	r0, [r2, #0]
 8032b9a:	e7da      	b.n	8032b52 <_free_r+0x22>
 8032b9c:	d902      	bls.n	8032ba4 <_free_r+0x74>
 8032b9e:	230c      	movs	r3, #12
 8032ba0:	602b      	str	r3, [r5, #0]
 8032ba2:	e7d6      	b.n	8032b52 <_free_r+0x22>
 8032ba4:	6820      	ldr	r0, [r4, #0]
 8032ba6:	1821      	adds	r1, r4, r0
 8032ba8:	428b      	cmp	r3, r1
 8032baa:	bf02      	ittt	eq
 8032bac:	6819      	ldreq	r1, [r3, #0]
 8032bae:	685b      	ldreq	r3, [r3, #4]
 8032bb0:	1809      	addeq	r1, r1, r0
 8032bb2:	6063      	str	r3, [r4, #4]
 8032bb4:	bf08      	it	eq
 8032bb6:	6021      	streq	r1, [r4, #0]
 8032bb8:	6054      	str	r4, [r2, #4]
 8032bba:	e7ca      	b.n	8032b52 <_free_r+0x22>
 8032bbc:	bd38      	pop	{r3, r4, r5, pc}
 8032bbe:	bf00      	nop
 8032bc0:	20083400 	.word	0x20083400

08032bc4 <__sfputc_r>:
 8032bc4:	6893      	ldr	r3, [r2, #8]
 8032bc6:	3b01      	subs	r3, #1
 8032bc8:	2b00      	cmp	r3, #0
 8032bca:	6093      	str	r3, [r2, #8]
 8032bcc:	b410      	push	{r4}
 8032bce:	da08      	bge.n	8032be2 <__sfputc_r+0x1e>
 8032bd0:	6994      	ldr	r4, [r2, #24]
 8032bd2:	42a3      	cmp	r3, r4
 8032bd4:	db01      	blt.n	8032bda <__sfputc_r+0x16>
 8032bd6:	290a      	cmp	r1, #10
 8032bd8:	d103      	bne.n	8032be2 <__sfputc_r+0x1e>
 8032bda:	f85d 4b04 	ldr.w	r4, [sp], #4
 8032bde:	f000 bb71 	b.w	80332c4 <__swbuf_r>
 8032be2:	6813      	ldr	r3, [r2, #0]
 8032be4:	1c58      	adds	r0, r3, #1
 8032be6:	6010      	str	r0, [r2, #0]
 8032be8:	4608      	mov	r0, r1
 8032bea:	7019      	strb	r1, [r3, #0]
 8032bec:	f85d 4b04 	ldr.w	r4, [sp], #4
 8032bf0:	4770      	bx	lr

08032bf2 <__sfputs_r>:
 8032bf2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8032bf4:	4606      	mov	r6, r0
 8032bf6:	460f      	mov	r7, r1
 8032bf8:	4614      	mov	r4, r2
 8032bfa:	18d5      	adds	r5, r2, r3
 8032bfc:	42ac      	cmp	r4, r5
 8032bfe:	d101      	bne.n	8032c04 <__sfputs_r+0x12>
 8032c00:	2000      	movs	r0, #0
 8032c02:	e007      	b.n	8032c14 <__sfputs_r+0x22>
 8032c04:	463a      	mov	r2, r7
 8032c06:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032c0a:	4630      	mov	r0, r6
 8032c0c:	f7ff ffda 	bl	8032bc4 <__sfputc_r>
 8032c10:	1c43      	adds	r3, r0, #1
 8032c12:	d1f3      	bne.n	8032bfc <__sfputs_r+0xa>
 8032c14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08032c18 <_vfiprintf_r>:
 8032c18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8032c1c:	460d      	mov	r5, r1
 8032c1e:	b09d      	sub	sp, #116	@ 0x74
 8032c20:	4614      	mov	r4, r2
 8032c22:	4698      	mov	r8, r3
 8032c24:	4606      	mov	r6, r0
 8032c26:	b118      	cbz	r0, 8032c30 <_vfiprintf_r+0x18>
 8032c28:	6a03      	ldr	r3, [r0, #32]
 8032c2a:	b90b      	cbnz	r3, 8032c30 <_vfiprintf_r+0x18>
 8032c2c:	f7ff fda8 	bl	8032780 <__sinit>
 8032c30:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032c32:	07d9      	lsls	r1, r3, #31
 8032c34:	d405      	bmi.n	8032c42 <_vfiprintf_r+0x2a>
 8032c36:	89ab      	ldrh	r3, [r5, #12]
 8032c38:	059a      	lsls	r2, r3, #22
 8032c3a:	d402      	bmi.n	8032c42 <_vfiprintf_r+0x2a>
 8032c3c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032c3e:	f7ff ff0a 	bl	8032a56 <__retarget_lock_acquire_recursive>
 8032c42:	89ab      	ldrh	r3, [r5, #12]
 8032c44:	071b      	lsls	r3, r3, #28
 8032c46:	d501      	bpl.n	8032c4c <_vfiprintf_r+0x34>
 8032c48:	692b      	ldr	r3, [r5, #16]
 8032c4a:	b99b      	cbnz	r3, 8032c74 <_vfiprintf_r+0x5c>
 8032c4c:	4629      	mov	r1, r5
 8032c4e:	4630      	mov	r0, r6
 8032c50:	f000 fb76 	bl	8033340 <__swsetup_r>
 8032c54:	b170      	cbz	r0, 8032c74 <_vfiprintf_r+0x5c>
 8032c56:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032c58:	07dc      	lsls	r4, r3, #31
 8032c5a:	d504      	bpl.n	8032c66 <_vfiprintf_r+0x4e>
 8032c5c:	f04f 30ff 	mov.w	r0, #4294967295
 8032c60:	b01d      	add	sp, #116	@ 0x74
 8032c62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8032c66:	89ab      	ldrh	r3, [r5, #12]
 8032c68:	0598      	lsls	r0, r3, #22
 8032c6a:	d4f7      	bmi.n	8032c5c <_vfiprintf_r+0x44>
 8032c6c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032c6e:	f7ff fef3 	bl	8032a58 <__retarget_lock_release_recursive>
 8032c72:	e7f3      	b.n	8032c5c <_vfiprintf_r+0x44>
 8032c74:	2300      	movs	r3, #0
 8032c76:	f8cd 800c 	str.w	r8, [sp, #12]
 8032c7a:	f04f 0901 	mov.w	r9, #1
 8032c7e:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 8032e34 <_vfiprintf_r+0x21c>
 8032c82:	9309      	str	r3, [sp, #36]	@ 0x24
 8032c84:	2320      	movs	r3, #32
 8032c86:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8032c8a:	2330      	movs	r3, #48	@ 0x30
 8032c8c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8032c90:	4623      	mov	r3, r4
 8032c92:	469a      	mov	sl, r3
 8032c94:	f813 2b01 	ldrb.w	r2, [r3], #1
 8032c98:	b10a      	cbz	r2, 8032c9e <_vfiprintf_r+0x86>
 8032c9a:	2a25      	cmp	r2, #37	@ 0x25
 8032c9c:	d1f9      	bne.n	8032c92 <_vfiprintf_r+0x7a>
 8032c9e:	ebba 0b04 	subs.w	fp, sl, r4
 8032ca2:	d00b      	beq.n	8032cbc <_vfiprintf_r+0xa4>
 8032ca4:	465b      	mov	r3, fp
 8032ca6:	4622      	mov	r2, r4
 8032ca8:	4629      	mov	r1, r5
 8032caa:	4630      	mov	r0, r6
 8032cac:	f7ff ffa1 	bl	8032bf2 <__sfputs_r>
 8032cb0:	3001      	adds	r0, #1
 8032cb2:	f000 80a7 	beq.w	8032e04 <_vfiprintf_r+0x1ec>
 8032cb6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8032cb8:	445a      	add	r2, fp
 8032cba:	9209      	str	r2, [sp, #36]	@ 0x24
 8032cbc:	f89a 3000 	ldrb.w	r3, [sl]
 8032cc0:	2b00      	cmp	r3, #0
 8032cc2:	f000 809f 	beq.w	8032e04 <_vfiprintf_r+0x1ec>
 8032cc6:	2300      	movs	r3, #0
 8032cc8:	f04f 32ff 	mov.w	r2, #4294967295
 8032ccc:	f10a 0a01 	add.w	sl, sl, #1
 8032cd0:	9304      	str	r3, [sp, #16]
 8032cd2:	9307      	str	r3, [sp, #28]
 8032cd4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8032cd8:	931a      	str	r3, [sp, #104]	@ 0x68
 8032cda:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8032cde:	4654      	mov	r4, sl
 8032ce0:	2205      	movs	r2, #5
 8032ce2:	4854      	ldr	r0, [pc, #336]	@ (8032e34 <_vfiprintf_r+0x21c>)
 8032ce4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032ce8:	f000 fb80 	bl	80333ec <memchr>
 8032cec:	9a04      	ldr	r2, [sp, #16]
 8032cee:	b9d8      	cbnz	r0, 8032d28 <_vfiprintf_r+0x110>
 8032cf0:	06d1      	lsls	r1, r2, #27
 8032cf2:	bf44      	itt	mi
 8032cf4:	2320      	movmi	r3, #32
 8032cf6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8032cfa:	0713      	lsls	r3, r2, #28
 8032cfc:	bf44      	itt	mi
 8032cfe:	232b      	movmi	r3, #43	@ 0x2b
 8032d00:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8032d04:	f89a 3000 	ldrb.w	r3, [sl]
 8032d08:	2b2a      	cmp	r3, #42	@ 0x2a
 8032d0a:	d015      	beq.n	8032d38 <_vfiprintf_r+0x120>
 8032d0c:	9a07      	ldr	r2, [sp, #28]
 8032d0e:	4654      	mov	r4, sl
 8032d10:	2000      	movs	r0, #0
 8032d12:	f04f 0c0a 	mov.w	ip, #10
 8032d16:	4621      	mov	r1, r4
 8032d18:	f811 3b01 	ldrb.w	r3, [r1], #1
 8032d1c:	3b30      	subs	r3, #48	@ 0x30
 8032d1e:	2b09      	cmp	r3, #9
 8032d20:	d94b      	bls.n	8032dba <_vfiprintf_r+0x1a2>
 8032d22:	b1b0      	cbz	r0, 8032d52 <_vfiprintf_r+0x13a>
 8032d24:	9207      	str	r2, [sp, #28]
 8032d26:	e014      	b.n	8032d52 <_vfiprintf_r+0x13a>
 8032d28:	eba0 0308 	sub.w	r3, r0, r8
 8032d2c:	46a2      	mov	sl, r4
 8032d2e:	fa09 f303 	lsl.w	r3, r9, r3
 8032d32:	4313      	orrs	r3, r2
 8032d34:	9304      	str	r3, [sp, #16]
 8032d36:	e7d2      	b.n	8032cde <_vfiprintf_r+0xc6>
 8032d38:	9b03      	ldr	r3, [sp, #12]
 8032d3a:	1d19      	adds	r1, r3, #4
 8032d3c:	681b      	ldr	r3, [r3, #0]
 8032d3e:	2b00      	cmp	r3, #0
 8032d40:	9103      	str	r1, [sp, #12]
 8032d42:	bfbb      	ittet	lt
 8032d44:	425b      	neglt	r3, r3
 8032d46:	f042 0202 	orrlt.w	r2, r2, #2
 8032d4a:	9307      	strge	r3, [sp, #28]
 8032d4c:	9307      	strlt	r3, [sp, #28]
 8032d4e:	bfb8      	it	lt
 8032d50:	9204      	strlt	r2, [sp, #16]
 8032d52:	7823      	ldrb	r3, [r4, #0]
 8032d54:	2b2e      	cmp	r3, #46	@ 0x2e
 8032d56:	d10a      	bne.n	8032d6e <_vfiprintf_r+0x156>
 8032d58:	7863      	ldrb	r3, [r4, #1]
 8032d5a:	2b2a      	cmp	r3, #42	@ 0x2a
 8032d5c:	d132      	bne.n	8032dc4 <_vfiprintf_r+0x1ac>
 8032d5e:	9b03      	ldr	r3, [sp, #12]
 8032d60:	3402      	adds	r4, #2
 8032d62:	1d1a      	adds	r2, r3, #4
 8032d64:	681b      	ldr	r3, [r3, #0]
 8032d66:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8032d6a:	9203      	str	r2, [sp, #12]
 8032d6c:	9305      	str	r3, [sp, #20]
 8032d6e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8032e44 <_vfiprintf_r+0x22c>
 8032d72:	2203      	movs	r2, #3
 8032d74:	7821      	ldrb	r1, [r4, #0]
 8032d76:	4650      	mov	r0, sl
 8032d78:	f000 fb38 	bl	80333ec <memchr>
 8032d7c:	b138      	cbz	r0, 8032d8e <_vfiprintf_r+0x176>
 8032d7e:	eba0 000a 	sub.w	r0, r0, sl
 8032d82:	2240      	movs	r2, #64	@ 0x40
 8032d84:	9b04      	ldr	r3, [sp, #16]
 8032d86:	3401      	adds	r4, #1
 8032d88:	4082      	lsls	r2, r0
 8032d8a:	4313      	orrs	r3, r2
 8032d8c:	9304      	str	r3, [sp, #16]
 8032d8e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032d92:	2206      	movs	r2, #6
 8032d94:	4828      	ldr	r0, [pc, #160]	@ (8032e38 <_vfiprintf_r+0x220>)
 8032d96:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8032d9a:	f000 fb27 	bl	80333ec <memchr>
 8032d9e:	2800      	cmp	r0, #0
 8032da0:	d03f      	beq.n	8032e22 <_vfiprintf_r+0x20a>
 8032da2:	4b26      	ldr	r3, [pc, #152]	@ (8032e3c <_vfiprintf_r+0x224>)
 8032da4:	bb1b      	cbnz	r3, 8032dee <_vfiprintf_r+0x1d6>
 8032da6:	9b03      	ldr	r3, [sp, #12]
 8032da8:	3307      	adds	r3, #7
 8032daa:	f023 0307 	bic.w	r3, r3, #7
 8032dae:	3308      	adds	r3, #8
 8032db0:	9303      	str	r3, [sp, #12]
 8032db2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8032db4:	443b      	add	r3, r7
 8032db6:	9309      	str	r3, [sp, #36]	@ 0x24
 8032db8:	e76a      	b.n	8032c90 <_vfiprintf_r+0x78>
 8032dba:	fb0c 3202 	mla	r2, ip, r2, r3
 8032dbe:	460c      	mov	r4, r1
 8032dc0:	2001      	movs	r0, #1
 8032dc2:	e7a8      	b.n	8032d16 <_vfiprintf_r+0xfe>
 8032dc4:	2300      	movs	r3, #0
 8032dc6:	3401      	adds	r4, #1
 8032dc8:	f04f 0c0a 	mov.w	ip, #10
 8032dcc:	4619      	mov	r1, r3
 8032dce:	9305      	str	r3, [sp, #20]
 8032dd0:	4620      	mov	r0, r4
 8032dd2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8032dd6:	3a30      	subs	r2, #48	@ 0x30
 8032dd8:	2a09      	cmp	r2, #9
 8032dda:	d903      	bls.n	8032de4 <_vfiprintf_r+0x1cc>
 8032ddc:	2b00      	cmp	r3, #0
 8032dde:	d0c6      	beq.n	8032d6e <_vfiprintf_r+0x156>
 8032de0:	9105      	str	r1, [sp, #20]
 8032de2:	e7c4      	b.n	8032d6e <_vfiprintf_r+0x156>
 8032de4:	fb0c 2101 	mla	r1, ip, r1, r2
 8032de8:	4604      	mov	r4, r0
 8032dea:	2301      	movs	r3, #1
 8032dec:	e7f0      	b.n	8032dd0 <_vfiprintf_r+0x1b8>
 8032dee:	ab03      	add	r3, sp, #12
 8032df0:	462a      	mov	r2, r5
 8032df2:	a904      	add	r1, sp, #16
 8032df4:	4630      	mov	r0, r6
 8032df6:	9300      	str	r3, [sp, #0]
 8032df8:	4b11      	ldr	r3, [pc, #68]	@ (8032e40 <_vfiprintf_r+0x228>)
 8032dfa:	f3af 8000 	nop.w
 8032dfe:	4607      	mov	r7, r0
 8032e00:	1c78      	adds	r0, r7, #1
 8032e02:	d1d6      	bne.n	8032db2 <_vfiprintf_r+0x19a>
 8032e04:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032e06:	07d9      	lsls	r1, r3, #31
 8032e08:	d405      	bmi.n	8032e16 <_vfiprintf_r+0x1fe>
 8032e0a:	89ab      	ldrh	r3, [r5, #12]
 8032e0c:	059a      	lsls	r2, r3, #22
 8032e0e:	d402      	bmi.n	8032e16 <_vfiprintf_r+0x1fe>
 8032e10:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032e12:	f7ff fe21 	bl	8032a58 <__retarget_lock_release_recursive>
 8032e16:	89ab      	ldrh	r3, [r5, #12]
 8032e18:	065b      	lsls	r3, r3, #25
 8032e1a:	f53f af1f 	bmi.w	8032c5c <_vfiprintf_r+0x44>
 8032e1e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8032e20:	e71e      	b.n	8032c60 <_vfiprintf_r+0x48>
 8032e22:	ab03      	add	r3, sp, #12
 8032e24:	462a      	mov	r2, r5
 8032e26:	a904      	add	r1, sp, #16
 8032e28:	4630      	mov	r0, r6
 8032e2a:	9300      	str	r3, [sp, #0]
 8032e2c:	4b04      	ldr	r3, [pc, #16]	@ (8032e40 <_vfiprintf_r+0x228>)
 8032e2e:	f000 f87d 	bl	8032f2c <_printf_i>
 8032e32:	e7e4      	b.n	8032dfe <_vfiprintf_r+0x1e6>
 8032e34:	0803862c 	.word	0x0803862c
 8032e38:	08038636 	.word	0x08038636
 8032e3c:	00000000 	.word	0x00000000
 8032e40:	08032bf3 	.word	0x08032bf3
 8032e44:	08038632 	.word	0x08038632

08032e48 <_printf_common>:
 8032e48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8032e4c:	4616      	mov	r6, r2
 8032e4e:	4698      	mov	r8, r3
 8032e50:	688a      	ldr	r2, [r1, #8]
 8032e52:	4607      	mov	r7, r0
 8032e54:	690b      	ldr	r3, [r1, #16]
 8032e56:	460c      	mov	r4, r1
 8032e58:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8032e5c:	4293      	cmp	r3, r2
 8032e5e:	bfb8      	it	lt
 8032e60:	4613      	movlt	r3, r2
 8032e62:	6033      	str	r3, [r6, #0]
 8032e64:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8032e68:	b10a      	cbz	r2, 8032e6e <_printf_common+0x26>
 8032e6a:	3301      	adds	r3, #1
 8032e6c:	6033      	str	r3, [r6, #0]
 8032e6e:	6823      	ldr	r3, [r4, #0]
 8032e70:	0699      	lsls	r1, r3, #26
 8032e72:	bf42      	ittt	mi
 8032e74:	6833      	ldrmi	r3, [r6, #0]
 8032e76:	3302      	addmi	r3, #2
 8032e78:	6033      	strmi	r3, [r6, #0]
 8032e7a:	6825      	ldr	r5, [r4, #0]
 8032e7c:	f015 0506 	ands.w	r5, r5, #6
 8032e80:	d106      	bne.n	8032e90 <_printf_common+0x48>
 8032e82:	f104 0a19 	add.w	sl, r4, #25
 8032e86:	68e3      	ldr	r3, [r4, #12]
 8032e88:	6832      	ldr	r2, [r6, #0]
 8032e8a:	1a9b      	subs	r3, r3, r2
 8032e8c:	42ab      	cmp	r3, r5
 8032e8e:	dc2b      	bgt.n	8032ee8 <_printf_common+0xa0>
 8032e90:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8032e94:	6822      	ldr	r2, [r4, #0]
 8032e96:	3b00      	subs	r3, #0
 8032e98:	bf18      	it	ne
 8032e9a:	2301      	movne	r3, #1
 8032e9c:	0692      	lsls	r2, r2, #26
 8032e9e:	d430      	bmi.n	8032f02 <_printf_common+0xba>
 8032ea0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8032ea4:	4641      	mov	r1, r8
 8032ea6:	4638      	mov	r0, r7
 8032ea8:	47c8      	blx	r9
 8032eaa:	3001      	adds	r0, #1
 8032eac:	d023      	beq.n	8032ef6 <_printf_common+0xae>
 8032eae:	6823      	ldr	r3, [r4, #0]
 8032eb0:	341a      	adds	r4, #26
 8032eb2:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 8032eb6:	f003 0306 	and.w	r3, r3, #6
 8032eba:	2b04      	cmp	r3, #4
 8032ebc:	bf0a      	itet	eq
 8032ebe:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 8032ec2:	2500      	movne	r5, #0
 8032ec4:	6833      	ldreq	r3, [r6, #0]
 8032ec6:	f04f 0600 	mov.w	r6, #0
 8032eca:	bf08      	it	eq
 8032ecc:	1aed      	subeq	r5, r5, r3
 8032ece:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8032ed2:	bf08      	it	eq
 8032ed4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8032ed8:	4293      	cmp	r3, r2
 8032eda:	bfc4      	itt	gt
 8032edc:	1a9b      	subgt	r3, r3, r2
 8032ede:	18ed      	addgt	r5, r5, r3
 8032ee0:	42b5      	cmp	r5, r6
 8032ee2:	d11a      	bne.n	8032f1a <_printf_common+0xd2>
 8032ee4:	2000      	movs	r0, #0
 8032ee6:	e008      	b.n	8032efa <_printf_common+0xb2>
 8032ee8:	2301      	movs	r3, #1
 8032eea:	4652      	mov	r2, sl
 8032eec:	4641      	mov	r1, r8
 8032eee:	4638      	mov	r0, r7
 8032ef0:	47c8      	blx	r9
 8032ef2:	3001      	adds	r0, #1
 8032ef4:	d103      	bne.n	8032efe <_printf_common+0xb6>
 8032ef6:	f04f 30ff 	mov.w	r0, #4294967295
 8032efa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8032efe:	3501      	adds	r5, #1
 8032f00:	e7c1      	b.n	8032e86 <_printf_common+0x3e>
 8032f02:	18e1      	adds	r1, r4, r3
 8032f04:	1c5a      	adds	r2, r3, #1
 8032f06:	2030      	movs	r0, #48	@ 0x30
 8032f08:	3302      	adds	r3, #2
 8032f0a:	4422      	add	r2, r4
 8032f0c:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8032f10:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8032f14:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8032f18:	e7c2      	b.n	8032ea0 <_printf_common+0x58>
 8032f1a:	2301      	movs	r3, #1
 8032f1c:	4622      	mov	r2, r4
 8032f1e:	4641      	mov	r1, r8
 8032f20:	4638      	mov	r0, r7
 8032f22:	47c8      	blx	r9
 8032f24:	3001      	adds	r0, #1
 8032f26:	d0e6      	beq.n	8032ef6 <_printf_common+0xae>
 8032f28:	3601      	adds	r6, #1
 8032f2a:	e7d9      	b.n	8032ee0 <_printf_common+0x98>

08032f2c <_printf_i>:
 8032f2c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8032f30:	7e0f      	ldrb	r7, [r1, #24]
 8032f32:	4691      	mov	r9, r2
 8032f34:	4680      	mov	r8, r0
 8032f36:	460c      	mov	r4, r1
 8032f38:	2f78      	cmp	r7, #120	@ 0x78
 8032f3a:	469a      	mov	sl, r3
 8032f3c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8032f3e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8032f42:	d807      	bhi.n	8032f54 <_printf_i+0x28>
 8032f44:	2f62      	cmp	r7, #98	@ 0x62
 8032f46:	d80a      	bhi.n	8032f5e <_printf_i+0x32>
 8032f48:	2f00      	cmp	r7, #0
 8032f4a:	f000 80d2 	beq.w	80330f2 <_printf_i+0x1c6>
 8032f4e:	2f58      	cmp	r7, #88	@ 0x58
 8032f50:	f000 80b9 	beq.w	80330c6 <_printf_i+0x19a>
 8032f54:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8032f58:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8032f5c:	e03a      	b.n	8032fd4 <_printf_i+0xa8>
 8032f5e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8032f62:	2b15      	cmp	r3, #21
 8032f64:	d8f6      	bhi.n	8032f54 <_printf_i+0x28>
 8032f66:	a101      	add	r1, pc, #4	@ (adr r1, 8032f6c <_printf_i+0x40>)
 8032f68:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8032f6c:	08032fc5 	.word	0x08032fc5
 8032f70:	08032fd9 	.word	0x08032fd9
 8032f74:	08032f55 	.word	0x08032f55
 8032f78:	08032f55 	.word	0x08032f55
 8032f7c:	08032f55 	.word	0x08032f55
 8032f80:	08032f55 	.word	0x08032f55
 8032f84:	08032fd9 	.word	0x08032fd9
 8032f88:	08032f55 	.word	0x08032f55
 8032f8c:	08032f55 	.word	0x08032f55
 8032f90:	08032f55 	.word	0x08032f55
 8032f94:	08032f55 	.word	0x08032f55
 8032f98:	080330d9 	.word	0x080330d9
 8032f9c:	08033003 	.word	0x08033003
 8032fa0:	08033093 	.word	0x08033093
 8032fa4:	08032f55 	.word	0x08032f55
 8032fa8:	08032f55 	.word	0x08032f55
 8032fac:	080330fb 	.word	0x080330fb
 8032fb0:	08032f55 	.word	0x08032f55
 8032fb4:	08033003 	.word	0x08033003
 8032fb8:	08032f55 	.word	0x08032f55
 8032fbc:	08032f55 	.word	0x08032f55
 8032fc0:	0803309b 	.word	0x0803309b
 8032fc4:	6833      	ldr	r3, [r6, #0]
 8032fc6:	1d1a      	adds	r2, r3, #4
 8032fc8:	681b      	ldr	r3, [r3, #0]
 8032fca:	6032      	str	r2, [r6, #0]
 8032fcc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8032fd0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8032fd4:	2301      	movs	r3, #1
 8032fd6:	e09d      	b.n	8033114 <_printf_i+0x1e8>
 8032fd8:	6833      	ldr	r3, [r6, #0]
 8032fda:	6820      	ldr	r0, [r4, #0]
 8032fdc:	1d19      	adds	r1, r3, #4
 8032fde:	6031      	str	r1, [r6, #0]
 8032fe0:	0606      	lsls	r6, r0, #24
 8032fe2:	d501      	bpl.n	8032fe8 <_printf_i+0xbc>
 8032fe4:	681d      	ldr	r5, [r3, #0]
 8032fe6:	e003      	b.n	8032ff0 <_printf_i+0xc4>
 8032fe8:	0645      	lsls	r5, r0, #25
 8032fea:	d5fb      	bpl.n	8032fe4 <_printf_i+0xb8>
 8032fec:	f9b3 5000 	ldrsh.w	r5, [r3]
 8032ff0:	2d00      	cmp	r5, #0
 8032ff2:	da03      	bge.n	8032ffc <_printf_i+0xd0>
 8032ff4:	232d      	movs	r3, #45	@ 0x2d
 8032ff6:	426d      	negs	r5, r5
 8032ff8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8032ffc:	4859      	ldr	r0, [pc, #356]	@ (8033164 <_printf_i+0x238>)
 8032ffe:	230a      	movs	r3, #10
 8033000:	e011      	b.n	8033026 <_printf_i+0xfa>
 8033002:	6821      	ldr	r1, [r4, #0]
 8033004:	6833      	ldr	r3, [r6, #0]
 8033006:	0608      	lsls	r0, r1, #24
 8033008:	f853 5b04 	ldr.w	r5, [r3], #4
 803300c:	d402      	bmi.n	8033014 <_printf_i+0xe8>
 803300e:	0649      	lsls	r1, r1, #25
 8033010:	bf48      	it	mi
 8033012:	b2ad      	uxthmi	r5, r5
 8033014:	2f6f      	cmp	r7, #111	@ 0x6f
 8033016:	6033      	str	r3, [r6, #0]
 8033018:	4852      	ldr	r0, [pc, #328]	@ (8033164 <_printf_i+0x238>)
 803301a:	bf14      	ite	ne
 803301c:	230a      	movne	r3, #10
 803301e:	2308      	moveq	r3, #8
 8033020:	2100      	movs	r1, #0
 8033022:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8033026:	6866      	ldr	r6, [r4, #4]
 8033028:	2e00      	cmp	r6, #0
 803302a:	60a6      	str	r6, [r4, #8]
 803302c:	bfa2      	ittt	ge
 803302e:	6821      	ldrge	r1, [r4, #0]
 8033030:	f021 0104 	bicge.w	r1, r1, #4
 8033034:	6021      	strge	r1, [r4, #0]
 8033036:	b90d      	cbnz	r5, 803303c <_printf_i+0x110>
 8033038:	2e00      	cmp	r6, #0
 803303a:	d04b      	beq.n	80330d4 <_printf_i+0x1a8>
 803303c:	4616      	mov	r6, r2
 803303e:	fbb5 f1f3 	udiv	r1, r5, r3
 8033042:	fb03 5711 	mls	r7, r3, r1, r5
 8033046:	5dc7      	ldrb	r7, [r0, r7]
 8033048:	f806 7d01 	strb.w	r7, [r6, #-1]!
 803304c:	462f      	mov	r7, r5
 803304e:	460d      	mov	r5, r1
 8033050:	42bb      	cmp	r3, r7
 8033052:	d9f4      	bls.n	803303e <_printf_i+0x112>
 8033054:	2b08      	cmp	r3, #8
 8033056:	d10b      	bne.n	8033070 <_printf_i+0x144>
 8033058:	6823      	ldr	r3, [r4, #0]
 803305a:	07df      	lsls	r7, r3, #31
 803305c:	d508      	bpl.n	8033070 <_printf_i+0x144>
 803305e:	6923      	ldr	r3, [r4, #16]
 8033060:	6861      	ldr	r1, [r4, #4]
 8033062:	4299      	cmp	r1, r3
 8033064:	bfde      	ittt	le
 8033066:	2330      	movle	r3, #48	@ 0x30
 8033068:	f806 3c01 	strble.w	r3, [r6, #-1]
 803306c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8033070:	1b92      	subs	r2, r2, r6
 8033072:	6122      	str	r2, [r4, #16]
 8033074:	464b      	mov	r3, r9
 8033076:	aa03      	add	r2, sp, #12
 8033078:	4621      	mov	r1, r4
 803307a:	4640      	mov	r0, r8
 803307c:	f8cd a000 	str.w	sl, [sp]
 8033080:	f7ff fee2 	bl	8032e48 <_printf_common>
 8033084:	3001      	adds	r0, #1
 8033086:	d14a      	bne.n	803311e <_printf_i+0x1f2>
 8033088:	f04f 30ff 	mov.w	r0, #4294967295
 803308c:	b004      	add	sp, #16
 803308e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8033092:	6823      	ldr	r3, [r4, #0]
 8033094:	f043 0320 	orr.w	r3, r3, #32
 8033098:	6023      	str	r3, [r4, #0]
 803309a:	2778      	movs	r7, #120	@ 0x78
 803309c:	4832      	ldr	r0, [pc, #200]	@ (8033168 <_printf_i+0x23c>)
 803309e:	6823      	ldr	r3, [r4, #0]
 80330a0:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80330a4:	061f      	lsls	r7, r3, #24
 80330a6:	6831      	ldr	r1, [r6, #0]
 80330a8:	f851 5b04 	ldr.w	r5, [r1], #4
 80330ac:	d402      	bmi.n	80330b4 <_printf_i+0x188>
 80330ae:	065f      	lsls	r7, r3, #25
 80330b0:	bf48      	it	mi
 80330b2:	b2ad      	uxthmi	r5, r5
 80330b4:	6031      	str	r1, [r6, #0]
 80330b6:	07d9      	lsls	r1, r3, #31
 80330b8:	bf44      	itt	mi
 80330ba:	f043 0320 	orrmi.w	r3, r3, #32
 80330be:	6023      	strmi	r3, [r4, #0]
 80330c0:	b11d      	cbz	r5, 80330ca <_printf_i+0x19e>
 80330c2:	2310      	movs	r3, #16
 80330c4:	e7ac      	b.n	8033020 <_printf_i+0xf4>
 80330c6:	4827      	ldr	r0, [pc, #156]	@ (8033164 <_printf_i+0x238>)
 80330c8:	e7e9      	b.n	803309e <_printf_i+0x172>
 80330ca:	6823      	ldr	r3, [r4, #0]
 80330cc:	f023 0320 	bic.w	r3, r3, #32
 80330d0:	6023      	str	r3, [r4, #0]
 80330d2:	e7f6      	b.n	80330c2 <_printf_i+0x196>
 80330d4:	4616      	mov	r6, r2
 80330d6:	e7bd      	b.n	8033054 <_printf_i+0x128>
 80330d8:	6833      	ldr	r3, [r6, #0]
 80330da:	6825      	ldr	r5, [r4, #0]
 80330dc:	1d18      	adds	r0, r3, #4
 80330de:	6961      	ldr	r1, [r4, #20]
 80330e0:	6030      	str	r0, [r6, #0]
 80330e2:	062e      	lsls	r6, r5, #24
 80330e4:	681b      	ldr	r3, [r3, #0]
 80330e6:	d501      	bpl.n	80330ec <_printf_i+0x1c0>
 80330e8:	6019      	str	r1, [r3, #0]
 80330ea:	e002      	b.n	80330f2 <_printf_i+0x1c6>
 80330ec:	0668      	lsls	r0, r5, #25
 80330ee:	d5fb      	bpl.n	80330e8 <_printf_i+0x1bc>
 80330f0:	8019      	strh	r1, [r3, #0]
 80330f2:	2300      	movs	r3, #0
 80330f4:	4616      	mov	r6, r2
 80330f6:	6123      	str	r3, [r4, #16]
 80330f8:	e7bc      	b.n	8033074 <_printf_i+0x148>
 80330fa:	6833      	ldr	r3, [r6, #0]
 80330fc:	2100      	movs	r1, #0
 80330fe:	1d1a      	adds	r2, r3, #4
 8033100:	6032      	str	r2, [r6, #0]
 8033102:	681e      	ldr	r6, [r3, #0]
 8033104:	6862      	ldr	r2, [r4, #4]
 8033106:	4630      	mov	r0, r6
 8033108:	f000 f970 	bl	80333ec <memchr>
 803310c:	b108      	cbz	r0, 8033112 <_printf_i+0x1e6>
 803310e:	1b80      	subs	r0, r0, r6
 8033110:	6060      	str	r0, [r4, #4]
 8033112:	6863      	ldr	r3, [r4, #4]
 8033114:	6123      	str	r3, [r4, #16]
 8033116:	2300      	movs	r3, #0
 8033118:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 803311c:	e7aa      	b.n	8033074 <_printf_i+0x148>
 803311e:	6923      	ldr	r3, [r4, #16]
 8033120:	4632      	mov	r2, r6
 8033122:	4649      	mov	r1, r9
 8033124:	4640      	mov	r0, r8
 8033126:	47d0      	blx	sl
 8033128:	3001      	adds	r0, #1
 803312a:	d0ad      	beq.n	8033088 <_printf_i+0x15c>
 803312c:	6823      	ldr	r3, [r4, #0]
 803312e:	079b      	lsls	r3, r3, #30
 8033130:	d413      	bmi.n	803315a <_printf_i+0x22e>
 8033132:	68e0      	ldr	r0, [r4, #12]
 8033134:	9b03      	ldr	r3, [sp, #12]
 8033136:	4298      	cmp	r0, r3
 8033138:	bfb8      	it	lt
 803313a:	4618      	movlt	r0, r3
 803313c:	e7a6      	b.n	803308c <_printf_i+0x160>
 803313e:	2301      	movs	r3, #1
 8033140:	4632      	mov	r2, r6
 8033142:	4649      	mov	r1, r9
 8033144:	4640      	mov	r0, r8
 8033146:	47d0      	blx	sl
 8033148:	3001      	adds	r0, #1
 803314a:	d09d      	beq.n	8033088 <_printf_i+0x15c>
 803314c:	3501      	adds	r5, #1
 803314e:	68e3      	ldr	r3, [r4, #12]
 8033150:	9903      	ldr	r1, [sp, #12]
 8033152:	1a5b      	subs	r3, r3, r1
 8033154:	42ab      	cmp	r3, r5
 8033156:	dcf2      	bgt.n	803313e <_printf_i+0x212>
 8033158:	e7eb      	b.n	8033132 <_printf_i+0x206>
 803315a:	2500      	movs	r5, #0
 803315c:	f104 0619 	add.w	r6, r4, #25
 8033160:	e7f5      	b.n	803314e <_printf_i+0x222>
 8033162:	bf00      	nop
 8033164:	0803863d 	.word	0x0803863d
 8033168:	0803864e 	.word	0x0803864e

0803316c <__sflush_r>:
 803316c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8033170:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8033174:	0716      	lsls	r6, r2, #28
 8033176:	4605      	mov	r5, r0
 8033178:	460c      	mov	r4, r1
 803317a:	d454      	bmi.n	8033226 <__sflush_r+0xba>
 803317c:	684b      	ldr	r3, [r1, #4]
 803317e:	2b00      	cmp	r3, #0
 8033180:	dc02      	bgt.n	8033188 <__sflush_r+0x1c>
 8033182:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8033184:	2b00      	cmp	r3, #0
 8033186:	dd48      	ble.n	803321a <__sflush_r+0xae>
 8033188:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 803318a:	2e00      	cmp	r6, #0
 803318c:	d045      	beq.n	803321a <__sflush_r+0xae>
 803318e:	2300      	movs	r3, #0
 8033190:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8033194:	682f      	ldr	r7, [r5, #0]
 8033196:	6a21      	ldr	r1, [r4, #32]
 8033198:	602b      	str	r3, [r5, #0]
 803319a:	d030      	beq.n	80331fe <__sflush_r+0x92>
 803319c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 803319e:	89a3      	ldrh	r3, [r4, #12]
 80331a0:	0759      	lsls	r1, r3, #29
 80331a2:	d505      	bpl.n	80331b0 <__sflush_r+0x44>
 80331a4:	6863      	ldr	r3, [r4, #4]
 80331a6:	1ad2      	subs	r2, r2, r3
 80331a8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80331aa:	b10b      	cbz	r3, 80331b0 <__sflush_r+0x44>
 80331ac:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80331ae:	1ad2      	subs	r2, r2, r3
 80331b0:	2300      	movs	r3, #0
 80331b2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80331b4:	6a21      	ldr	r1, [r4, #32]
 80331b6:	4628      	mov	r0, r5
 80331b8:	47b0      	blx	r6
 80331ba:	1c43      	adds	r3, r0, #1
 80331bc:	89a3      	ldrh	r3, [r4, #12]
 80331be:	d106      	bne.n	80331ce <__sflush_r+0x62>
 80331c0:	6829      	ldr	r1, [r5, #0]
 80331c2:	291d      	cmp	r1, #29
 80331c4:	d82b      	bhi.n	803321e <__sflush_r+0xb2>
 80331c6:	4a2a      	ldr	r2, [pc, #168]	@ (8033270 <__sflush_r+0x104>)
 80331c8:	410a      	asrs	r2, r1
 80331ca:	07d6      	lsls	r6, r2, #31
 80331cc:	d427      	bmi.n	803321e <__sflush_r+0xb2>
 80331ce:	2200      	movs	r2, #0
 80331d0:	04d9      	lsls	r1, r3, #19
 80331d2:	6062      	str	r2, [r4, #4]
 80331d4:	6922      	ldr	r2, [r4, #16]
 80331d6:	6022      	str	r2, [r4, #0]
 80331d8:	d504      	bpl.n	80331e4 <__sflush_r+0x78>
 80331da:	1c42      	adds	r2, r0, #1
 80331dc:	d101      	bne.n	80331e2 <__sflush_r+0x76>
 80331de:	682b      	ldr	r3, [r5, #0]
 80331e0:	b903      	cbnz	r3, 80331e4 <__sflush_r+0x78>
 80331e2:	6560      	str	r0, [r4, #84]	@ 0x54
 80331e4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80331e6:	602f      	str	r7, [r5, #0]
 80331e8:	b1b9      	cbz	r1, 803321a <__sflush_r+0xae>
 80331ea:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80331ee:	4299      	cmp	r1, r3
 80331f0:	d002      	beq.n	80331f8 <__sflush_r+0x8c>
 80331f2:	4628      	mov	r0, r5
 80331f4:	f7ff fc9c 	bl	8032b30 <_free_r>
 80331f8:	2300      	movs	r3, #0
 80331fa:	6363      	str	r3, [r4, #52]	@ 0x34
 80331fc:	e00d      	b.n	803321a <__sflush_r+0xae>
 80331fe:	2301      	movs	r3, #1
 8033200:	4628      	mov	r0, r5
 8033202:	47b0      	blx	r6
 8033204:	4602      	mov	r2, r0
 8033206:	1c50      	adds	r0, r2, #1
 8033208:	d1c9      	bne.n	803319e <__sflush_r+0x32>
 803320a:	682b      	ldr	r3, [r5, #0]
 803320c:	2b00      	cmp	r3, #0
 803320e:	d0c6      	beq.n	803319e <__sflush_r+0x32>
 8033210:	2b1d      	cmp	r3, #29
 8033212:	d001      	beq.n	8033218 <__sflush_r+0xac>
 8033214:	2b16      	cmp	r3, #22
 8033216:	d11d      	bne.n	8033254 <__sflush_r+0xe8>
 8033218:	602f      	str	r7, [r5, #0]
 803321a:	2000      	movs	r0, #0
 803321c:	e021      	b.n	8033262 <__sflush_r+0xf6>
 803321e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8033222:	b21b      	sxth	r3, r3
 8033224:	e01a      	b.n	803325c <__sflush_r+0xf0>
 8033226:	690f      	ldr	r7, [r1, #16]
 8033228:	2f00      	cmp	r7, #0
 803322a:	d0f6      	beq.n	803321a <__sflush_r+0xae>
 803322c:	0793      	lsls	r3, r2, #30
 803322e:	680e      	ldr	r6, [r1, #0]
 8033230:	600f      	str	r7, [r1, #0]
 8033232:	bf0c      	ite	eq
 8033234:	694b      	ldreq	r3, [r1, #20]
 8033236:	2300      	movne	r3, #0
 8033238:	eba6 0807 	sub.w	r8, r6, r7
 803323c:	608b      	str	r3, [r1, #8]
 803323e:	f1b8 0f00 	cmp.w	r8, #0
 8033242:	ddea      	ble.n	803321a <__sflush_r+0xae>
 8033244:	4643      	mov	r3, r8
 8033246:	463a      	mov	r2, r7
 8033248:	6a21      	ldr	r1, [r4, #32]
 803324a:	4628      	mov	r0, r5
 803324c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 803324e:	47b0      	blx	r6
 8033250:	2800      	cmp	r0, #0
 8033252:	dc08      	bgt.n	8033266 <__sflush_r+0xfa>
 8033254:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8033258:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 803325c:	f04f 30ff 	mov.w	r0, #4294967295
 8033260:	81a3      	strh	r3, [r4, #12]
 8033262:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8033266:	4407      	add	r7, r0
 8033268:	eba8 0800 	sub.w	r8, r8, r0
 803326c:	e7e7      	b.n	803323e <__sflush_r+0xd2>
 803326e:	bf00      	nop
 8033270:	dfbffffe 	.word	0xdfbffffe

08033274 <_fflush_r>:
 8033274:	b538      	push	{r3, r4, r5, lr}
 8033276:	690b      	ldr	r3, [r1, #16]
 8033278:	4605      	mov	r5, r0
 803327a:	460c      	mov	r4, r1
 803327c:	b913      	cbnz	r3, 8033284 <_fflush_r+0x10>
 803327e:	2500      	movs	r5, #0
 8033280:	4628      	mov	r0, r5
 8033282:	bd38      	pop	{r3, r4, r5, pc}
 8033284:	b118      	cbz	r0, 803328e <_fflush_r+0x1a>
 8033286:	6a03      	ldr	r3, [r0, #32]
 8033288:	b90b      	cbnz	r3, 803328e <_fflush_r+0x1a>
 803328a:	f7ff fa79 	bl	8032780 <__sinit>
 803328e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8033292:	2b00      	cmp	r3, #0
 8033294:	d0f3      	beq.n	803327e <_fflush_r+0xa>
 8033296:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8033298:	07d0      	lsls	r0, r2, #31
 803329a:	d404      	bmi.n	80332a6 <_fflush_r+0x32>
 803329c:	0599      	lsls	r1, r3, #22
 803329e:	d402      	bmi.n	80332a6 <_fflush_r+0x32>
 80332a0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80332a2:	f7ff fbd8 	bl	8032a56 <__retarget_lock_acquire_recursive>
 80332a6:	4628      	mov	r0, r5
 80332a8:	4621      	mov	r1, r4
 80332aa:	f7ff ff5f 	bl	803316c <__sflush_r>
 80332ae:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80332b0:	4605      	mov	r5, r0
 80332b2:	07da      	lsls	r2, r3, #31
 80332b4:	d4e4      	bmi.n	8033280 <_fflush_r+0xc>
 80332b6:	89a3      	ldrh	r3, [r4, #12]
 80332b8:	059b      	lsls	r3, r3, #22
 80332ba:	d4e1      	bmi.n	8033280 <_fflush_r+0xc>
 80332bc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80332be:	f7ff fbcb 	bl	8032a58 <__retarget_lock_release_recursive>
 80332c2:	e7dd      	b.n	8033280 <_fflush_r+0xc>

080332c4 <__swbuf_r>:
 80332c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80332c6:	460e      	mov	r6, r1
 80332c8:	4614      	mov	r4, r2
 80332ca:	4605      	mov	r5, r0
 80332cc:	b118      	cbz	r0, 80332d6 <__swbuf_r+0x12>
 80332ce:	6a03      	ldr	r3, [r0, #32]
 80332d0:	b90b      	cbnz	r3, 80332d6 <__swbuf_r+0x12>
 80332d2:	f7ff fa55 	bl	8032780 <__sinit>
 80332d6:	69a3      	ldr	r3, [r4, #24]
 80332d8:	60a3      	str	r3, [r4, #8]
 80332da:	89a3      	ldrh	r3, [r4, #12]
 80332dc:	071a      	lsls	r2, r3, #28
 80332de:	d501      	bpl.n	80332e4 <__swbuf_r+0x20>
 80332e0:	6923      	ldr	r3, [r4, #16]
 80332e2:	b943      	cbnz	r3, 80332f6 <__swbuf_r+0x32>
 80332e4:	4621      	mov	r1, r4
 80332e6:	4628      	mov	r0, r5
 80332e8:	f000 f82a 	bl	8033340 <__swsetup_r>
 80332ec:	b118      	cbz	r0, 80332f6 <__swbuf_r+0x32>
 80332ee:	f04f 37ff 	mov.w	r7, #4294967295
 80332f2:	4638      	mov	r0, r7
 80332f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80332f6:	6823      	ldr	r3, [r4, #0]
 80332f8:	b2f6      	uxtb	r6, r6
 80332fa:	6922      	ldr	r2, [r4, #16]
 80332fc:	4637      	mov	r7, r6
 80332fe:	1a98      	subs	r0, r3, r2
 8033300:	6963      	ldr	r3, [r4, #20]
 8033302:	4283      	cmp	r3, r0
 8033304:	dc05      	bgt.n	8033312 <__swbuf_r+0x4e>
 8033306:	4621      	mov	r1, r4
 8033308:	4628      	mov	r0, r5
 803330a:	f7ff ffb3 	bl	8033274 <_fflush_r>
 803330e:	2800      	cmp	r0, #0
 8033310:	d1ed      	bne.n	80332ee <__swbuf_r+0x2a>
 8033312:	68a3      	ldr	r3, [r4, #8]
 8033314:	3b01      	subs	r3, #1
 8033316:	60a3      	str	r3, [r4, #8]
 8033318:	6823      	ldr	r3, [r4, #0]
 803331a:	1c5a      	adds	r2, r3, #1
 803331c:	6022      	str	r2, [r4, #0]
 803331e:	701e      	strb	r6, [r3, #0]
 8033320:	1c43      	adds	r3, r0, #1
 8033322:	6962      	ldr	r2, [r4, #20]
 8033324:	429a      	cmp	r2, r3
 8033326:	d004      	beq.n	8033332 <__swbuf_r+0x6e>
 8033328:	89a3      	ldrh	r3, [r4, #12]
 803332a:	07db      	lsls	r3, r3, #31
 803332c:	d5e1      	bpl.n	80332f2 <__swbuf_r+0x2e>
 803332e:	2e0a      	cmp	r6, #10
 8033330:	d1df      	bne.n	80332f2 <__swbuf_r+0x2e>
 8033332:	4621      	mov	r1, r4
 8033334:	4628      	mov	r0, r5
 8033336:	f7ff ff9d 	bl	8033274 <_fflush_r>
 803333a:	2800      	cmp	r0, #0
 803333c:	d0d9      	beq.n	80332f2 <__swbuf_r+0x2e>
 803333e:	e7d6      	b.n	80332ee <__swbuf_r+0x2a>

08033340 <__swsetup_r>:
 8033340:	b538      	push	{r3, r4, r5, lr}
 8033342:	4b29      	ldr	r3, [pc, #164]	@ (80333e8 <__swsetup_r+0xa8>)
 8033344:	4605      	mov	r5, r0
 8033346:	460c      	mov	r4, r1
 8033348:	6818      	ldr	r0, [r3, #0]
 803334a:	b118      	cbz	r0, 8033354 <__swsetup_r+0x14>
 803334c:	6a03      	ldr	r3, [r0, #32]
 803334e:	b90b      	cbnz	r3, 8033354 <__swsetup_r+0x14>
 8033350:	f7ff fa16 	bl	8032780 <__sinit>
 8033354:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8033358:	0719      	lsls	r1, r3, #28
 803335a:	d422      	bmi.n	80333a2 <__swsetup_r+0x62>
 803335c:	06da      	lsls	r2, r3, #27
 803335e:	d407      	bmi.n	8033370 <__swsetup_r+0x30>
 8033360:	2209      	movs	r2, #9
 8033362:	602a      	str	r2, [r5, #0]
 8033364:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8033368:	f04f 30ff 	mov.w	r0, #4294967295
 803336c:	81a3      	strh	r3, [r4, #12]
 803336e:	e033      	b.n	80333d8 <__swsetup_r+0x98>
 8033370:	0758      	lsls	r0, r3, #29
 8033372:	d512      	bpl.n	803339a <__swsetup_r+0x5a>
 8033374:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8033376:	b141      	cbz	r1, 803338a <__swsetup_r+0x4a>
 8033378:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 803337c:	4299      	cmp	r1, r3
 803337e:	d002      	beq.n	8033386 <__swsetup_r+0x46>
 8033380:	4628      	mov	r0, r5
 8033382:	f7ff fbd5 	bl	8032b30 <_free_r>
 8033386:	2300      	movs	r3, #0
 8033388:	6363      	str	r3, [r4, #52]	@ 0x34
 803338a:	89a3      	ldrh	r3, [r4, #12]
 803338c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8033390:	81a3      	strh	r3, [r4, #12]
 8033392:	2300      	movs	r3, #0
 8033394:	6063      	str	r3, [r4, #4]
 8033396:	6923      	ldr	r3, [r4, #16]
 8033398:	6023      	str	r3, [r4, #0]
 803339a:	89a3      	ldrh	r3, [r4, #12]
 803339c:	f043 0308 	orr.w	r3, r3, #8
 80333a0:	81a3      	strh	r3, [r4, #12]
 80333a2:	6923      	ldr	r3, [r4, #16]
 80333a4:	b94b      	cbnz	r3, 80333ba <__swsetup_r+0x7a>
 80333a6:	89a3      	ldrh	r3, [r4, #12]
 80333a8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80333ac:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80333b0:	d003      	beq.n	80333ba <__swsetup_r+0x7a>
 80333b2:	4621      	mov	r1, r4
 80333b4:	4628      	mov	r0, r5
 80333b6:	f000 f84c 	bl	8033452 <__smakebuf_r>
 80333ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80333be:	f013 0201 	ands.w	r2, r3, #1
 80333c2:	d00a      	beq.n	80333da <__swsetup_r+0x9a>
 80333c4:	2200      	movs	r2, #0
 80333c6:	60a2      	str	r2, [r4, #8]
 80333c8:	6962      	ldr	r2, [r4, #20]
 80333ca:	4252      	negs	r2, r2
 80333cc:	61a2      	str	r2, [r4, #24]
 80333ce:	6922      	ldr	r2, [r4, #16]
 80333d0:	b942      	cbnz	r2, 80333e4 <__swsetup_r+0xa4>
 80333d2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80333d6:	d1c5      	bne.n	8033364 <__swsetup_r+0x24>
 80333d8:	bd38      	pop	{r3, r4, r5, pc}
 80333da:	0799      	lsls	r1, r3, #30
 80333dc:	bf58      	it	pl
 80333de:	6962      	ldrpl	r2, [r4, #20]
 80333e0:	60a2      	str	r2, [r4, #8]
 80333e2:	e7f4      	b.n	80333ce <__swsetup_r+0x8e>
 80333e4:	2000      	movs	r0, #0
 80333e6:	e7f7      	b.n	80333d8 <__swsetup_r+0x98>
 80333e8:	20000254 	.word	0x20000254

080333ec <memchr>:
 80333ec:	b2c9      	uxtb	r1, r1
 80333ee:	4603      	mov	r3, r0
 80333f0:	4402      	add	r2, r0
 80333f2:	b510      	push	{r4, lr}
 80333f4:	4293      	cmp	r3, r2
 80333f6:	4618      	mov	r0, r3
 80333f8:	d101      	bne.n	80333fe <memchr+0x12>
 80333fa:	2000      	movs	r0, #0
 80333fc:	e003      	b.n	8033406 <memchr+0x1a>
 80333fe:	7804      	ldrb	r4, [r0, #0]
 8033400:	3301      	adds	r3, #1
 8033402:	428c      	cmp	r4, r1
 8033404:	d1f6      	bne.n	80333f4 <memchr+0x8>
 8033406:	bd10      	pop	{r4, pc}

08033408 <__swhatbuf_r>:
 8033408:	b570      	push	{r4, r5, r6, lr}
 803340a:	460c      	mov	r4, r1
 803340c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8033410:	b096      	sub	sp, #88	@ 0x58
 8033412:	4615      	mov	r5, r2
 8033414:	2900      	cmp	r1, #0
 8033416:	461e      	mov	r6, r3
 8033418:	da0c      	bge.n	8033434 <__swhatbuf_r+0x2c>
 803341a:	89a3      	ldrh	r3, [r4, #12]
 803341c:	2100      	movs	r1, #0
 803341e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8033422:	bf14      	ite	ne
 8033424:	2340      	movne	r3, #64	@ 0x40
 8033426:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 803342a:	2000      	movs	r0, #0
 803342c:	6031      	str	r1, [r6, #0]
 803342e:	602b      	str	r3, [r5, #0]
 8033430:	b016      	add	sp, #88	@ 0x58
 8033432:	bd70      	pop	{r4, r5, r6, pc}
 8033434:	466a      	mov	r2, sp
 8033436:	f000 f849 	bl	80334cc <_fstat_r>
 803343a:	2800      	cmp	r0, #0
 803343c:	dbed      	blt.n	803341a <__swhatbuf_r+0x12>
 803343e:	9901      	ldr	r1, [sp, #4]
 8033440:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8033444:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8033448:	4259      	negs	r1, r3
 803344a:	4159      	adcs	r1, r3
 803344c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8033450:	e7eb      	b.n	803342a <__swhatbuf_r+0x22>

08033452 <__smakebuf_r>:
 8033452:	898b      	ldrh	r3, [r1, #12]
 8033454:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8033456:	079d      	lsls	r5, r3, #30
 8033458:	4606      	mov	r6, r0
 803345a:	460c      	mov	r4, r1
 803345c:	d507      	bpl.n	803346e <__smakebuf_r+0x1c>
 803345e:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8033462:	6023      	str	r3, [r4, #0]
 8033464:	6123      	str	r3, [r4, #16]
 8033466:	2301      	movs	r3, #1
 8033468:	6163      	str	r3, [r4, #20]
 803346a:	b003      	add	sp, #12
 803346c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 803346e:	ab01      	add	r3, sp, #4
 8033470:	466a      	mov	r2, sp
 8033472:	f7ff ffc9 	bl	8033408 <__swhatbuf_r>
 8033476:	9f00      	ldr	r7, [sp, #0]
 8033478:	4605      	mov	r5, r0
 803347a:	4630      	mov	r0, r6
 803347c:	4639      	mov	r1, r7
 803347e:	f7ff f859 	bl	8032534 <_malloc_r>
 8033482:	b948      	cbnz	r0, 8033498 <__smakebuf_r+0x46>
 8033484:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8033488:	059a      	lsls	r2, r3, #22
 803348a:	d4ee      	bmi.n	803346a <__smakebuf_r+0x18>
 803348c:	f023 0303 	bic.w	r3, r3, #3
 8033490:	f043 0302 	orr.w	r3, r3, #2
 8033494:	81a3      	strh	r3, [r4, #12]
 8033496:	e7e2      	b.n	803345e <__smakebuf_r+0xc>
 8033498:	89a3      	ldrh	r3, [r4, #12]
 803349a:	6020      	str	r0, [r4, #0]
 803349c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80334a0:	81a3      	strh	r3, [r4, #12]
 80334a2:	9b01      	ldr	r3, [sp, #4]
 80334a4:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80334a8:	b15b      	cbz	r3, 80334c2 <__smakebuf_r+0x70>
 80334aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80334ae:	4630      	mov	r0, r6
 80334b0:	f000 f81e 	bl	80334f0 <_isatty_r>
 80334b4:	b128      	cbz	r0, 80334c2 <__smakebuf_r+0x70>
 80334b6:	89a3      	ldrh	r3, [r4, #12]
 80334b8:	f023 0303 	bic.w	r3, r3, #3
 80334bc:	f043 0301 	orr.w	r3, r3, #1
 80334c0:	81a3      	strh	r3, [r4, #12]
 80334c2:	89a3      	ldrh	r3, [r4, #12]
 80334c4:	431d      	orrs	r5, r3
 80334c6:	81a5      	strh	r5, [r4, #12]
 80334c8:	e7cf      	b.n	803346a <__smakebuf_r+0x18>
	...

080334cc <_fstat_r>:
 80334cc:	b538      	push	{r3, r4, r5, lr}
 80334ce:	2300      	movs	r3, #0
 80334d0:	4d06      	ldr	r5, [pc, #24]	@ (80334ec <_fstat_r+0x20>)
 80334d2:	4604      	mov	r4, r0
 80334d4:	4608      	mov	r0, r1
 80334d6:	4611      	mov	r1, r2
 80334d8:	602b      	str	r3, [r5, #0]
 80334da:	f7cd fd14 	bl	8000f06 <_fstat>
 80334de:	1c43      	adds	r3, r0, #1
 80334e0:	d102      	bne.n	80334e8 <_fstat_r+0x1c>
 80334e2:	682b      	ldr	r3, [r5, #0]
 80334e4:	b103      	cbz	r3, 80334e8 <_fstat_r+0x1c>
 80334e6:	6023      	str	r3, [r4, #0]
 80334e8:	bd38      	pop	{r3, r4, r5, pc}
 80334ea:	bf00      	nop
 80334ec:	20083540 	.word	0x20083540

080334f0 <_isatty_r>:
 80334f0:	b538      	push	{r3, r4, r5, lr}
 80334f2:	2300      	movs	r3, #0
 80334f4:	4d05      	ldr	r5, [pc, #20]	@ (803350c <_isatty_r+0x1c>)
 80334f6:	4604      	mov	r4, r0
 80334f8:	4608      	mov	r0, r1
 80334fa:	602b      	str	r3, [r5, #0]
 80334fc:	f7cd fd08 	bl	8000f10 <_isatty>
 8033500:	1c43      	adds	r3, r0, #1
 8033502:	d102      	bne.n	803350a <_isatty_r+0x1a>
 8033504:	682b      	ldr	r3, [r5, #0]
 8033506:	b103      	cbz	r3, 803350a <_isatty_r+0x1a>
 8033508:	6023      	str	r3, [r4, #0]
 803350a:	bd38      	pop	{r3, r4, r5, pc}
 803350c:	20083540 	.word	0x20083540

08033510 <_init>:
 8033510:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8033512:	bf00      	nop
 8033514:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8033516:	bc08      	pop	{r3}
 8033518:	469e      	mov	lr, r3
 803351a:	4770      	bx	lr

0803351c <_fini>:
 803351c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803351e:	bf00      	nop
 8033520:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8033522:	bc08      	pop	{r3}
 8033524:	469e      	mov	lr, r3
 8033526:	4770      	bx	lr
