
STM32U5G9J-DK2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000274  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00033318  08000280  08000280  00001280  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00005160  08033598  08033598  00034598  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  080386f8  080386f8  000396f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  080388a0  080388a0  000398a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000e  080388b8  080388b8  000398b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000002  080388c6  080388c6  000398c6  2**0
                  ALLOC
  7 .ARM          00000000  080388c8  080388c8  00107010  2**0
                  CONTENTS
  8 .preinit_array 00000000  080388c8  080388c8  00107010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000020  080388c8  080388c8  000398c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  080388e8  080388e8  000398e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         000002a8  20000000  080388f0  0003a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          0008347c  200002a8  08038b98  0003a2a8  2**2
                  ALLOC
 13 ._user_heap_stack 00002004  20083724  08038b98  0003a724  2**0
                  ALLOC
 14 .ARM.attributes 00000036  00000000  00000000  00107010  2**0
                  CONTENTS, READONLY
 15 FramebufferSection 00177000  20085728  20085728  0003a728  2**2
                  ALLOC
 16 VideobufferSection 00000000  201fc728  201fc728  00107046  2**0
                  CONTENTS
 17 ExtFlashSection 000cc010  a0000000  a0000000  0003b000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .debug_info   000aa63a  00000000  00000000  00107046  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00013f80  00000000  00000000  001b1680  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_loclists 0001ef34  00000000  00000000  001c5600  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_aranges 000035e8  00000000  00000000  001e4538  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_rnglists 00003415  00000000  00000000  001e7b20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0004fc89  00000000  00000000  001eaf35  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_line   0005d23e  00000000  00000000  0023abbe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001c1157  00000000  00000000  00297dfc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .comment      000000c2  00000000  00000000  00458f53  2**0
                  CONTENTS, READONLY
 27 .debug_frame  00009c78  00000000  00000000  00459018  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_line_str 0000007e  00000000  00000000  00462c90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000280 <__do_global_dtors_aux>:
 8000280:	b510      	push	{r4, lr}
 8000282:	4c05      	ldr	r4, [pc, #20]	@ (8000298 <__do_global_dtors_aux+0x18>)
 8000284:	7823      	ldrb	r3, [r4, #0]
 8000286:	b933      	cbnz	r3, 8000296 <__do_global_dtors_aux+0x16>
 8000288:	4b04      	ldr	r3, [pc, #16]	@ (800029c <__do_global_dtors_aux+0x1c>)
 800028a:	b113      	cbz	r3, 8000292 <__do_global_dtors_aux+0x12>
 800028c:	4804      	ldr	r0, [pc, #16]	@ (80002a0 <__do_global_dtors_aux+0x20>)
 800028e:	f3af 8000 	nop.w
 8000292:	2301      	movs	r3, #1
 8000294:	7023      	strb	r3, [r4, #0]
 8000296:	bd10      	pop	{r4, pc}
 8000298:	200002a8 	.word	0x200002a8
 800029c:	00000000 	.word	0x00000000
 80002a0:	08033580 	.word	0x08033580

080002a4 <frame_dummy>:
 80002a4:	b508      	push	{r3, lr}
 80002a6:	4b03      	ldr	r3, [pc, #12]	@ (80002b4 <frame_dummy+0x10>)
 80002a8:	b11b      	cbz	r3, 80002b2 <frame_dummy+0xe>
 80002aa:	4903      	ldr	r1, [pc, #12]	@ (80002b8 <frame_dummy+0x14>)
 80002ac:	4803      	ldr	r0, [pc, #12]	@ (80002bc <frame_dummy+0x18>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	bd08      	pop	{r3, pc}
 80002b4:	00000000 	.word	0x00000000
 80002b8:	200002ac 	.word	0x200002ac
 80002bc:	08033580 	.word	0x08033580

080002c0 <StartDefaultTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80002c0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN defaultTask */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80002c2:	2001      	movs	r0, #1
 80002c4:	f008 fc15 	bl	8008af2 <osDelay>
  for(;;)
 80002c8:	e7fb      	b.n	80002c2 <StartDefaultTask+0x2>
	...

080002cc <vApplicationIdleHook>:
   vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80002cc:	2000      	movs	r0, #0
 80002ce:	4901      	ldr	r1, [pc, #4]	@ (80002d4 <vApplicationIdleHook+0x8>)
 80002d0:	f009 be48 	b.w	8009f64 <vTaskSetApplicationTaskTag>
 80002d4:	08001385 	.word	0x08001385

080002d8 <MX_FREERTOS_Init>:
void MX_FREERTOS_Init(void) {
 80002d8:	b508      	push	{r3, lr}
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80002da:	2100      	movs	r1, #0
 80002dc:	4a06      	ldr	r2, [pc, #24]	@ (80002f8 <MX_FREERTOS_Init+0x20>)
 80002de:	4807      	ldr	r0, [pc, #28]	@ (80002fc <MX_FREERTOS_Init+0x24>)
 80002e0:	f008 fbbc 	bl	8008a5c <osThreadNew>
 80002e4:	4b06      	ldr	r3, [pc, #24]	@ (8000300 <MX_FREERTOS_Init+0x28>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80002e6:	2100      	movs	r1, #0
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80002e8:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80002ea:	4a06      	ldr	r2, [pc, #24]	@ (8000304 <MX_FREERTOS_Init+0x2c>)
 80002ec:	4806      	ldr	r0, [pc, #24]	@ (8000308 <MX_FREERTOS_Init+0x30>)
 80002ee:	f008 fbb5 	bl	8008a5c <osThreadNew>
 80002f2:	4b06      	ldr	r3, [pc, #24]	@ (800030c <MX_FREERTOS_Init+0x34>)
 80002f4:	6018      	str	r0, [r3, #0]
}
 80002f6:	bd08      	pop	{r3, pc}
 80002f8:	080336a4 	.word	0x080336a4
 80002fc:	080002c1 	.word	0x080002c1
 8000300:	200002c8 	.word	0x200002c8
 8000304:	08033680 	.word	0x08033680
 8000308:	08000fbb 	.word	0x08000fbb
 800030c:	200002c4 	.word	0x200002c4

08000310 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000310:	b530      	push	{r4, r5, lr}
 8000312:	b09f      	sub	sp, #124	@ 0x7c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000314:	2260      	movs	r2, #96	@ 0x60
 8000316:	2100      	movs	r1, #0
 8000318:	a806      	add	r0, sp, #24
 800031a:	f032 faf4 	bl	8032906 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800031e:	2218      	movs	r2, #24
 8000320:	2100      	movs	r1, #0
 8000322:	4668      	mov	r0, sp
 8000324:	f032 faef 	bl	8032906 <memset>

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8000328:	f44f 3040 	mov.w	r0, #196608	@ 0x30000
 800032c:	f006 f920 	bl	8006570 <HAL_PWREx_ControlVoltageScaling>
 8000330:	b108      	cbz	r0, 8000336 <SystemClock_Config+0x26>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000332:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000334:	e7fe      	b.n	8000334 <SystemClock_Config+0x24>
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000336:	2201      	movs	r2, #1
 8000338:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800033c:	2503      	movs	r5, #3
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800033e:	e9cd 2306 	strd	r2, r3, [sp, #24]
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000342:	2404      	movs	r4, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000344:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLN = 80;
 8000346:	2250      	movs	r2, #80	@ 0x50
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8000348:	e9cd 001c 	strd	r0, r0, [sp, #112]	@ 0x70
  RCC_OscInitStruct.PLL.PLLMBOOST = RCC_PLLMBOOST_DIV1;
 800034c:	9017      	str	r0, [sp, #92]	@ 0x5c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800034e:	a806      	add	r0, sp, #24
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000350:	e9cd 3514 	strd	r3, r5, [sp, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLP = 2;
 8000354:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000358:	e9cd 331a 	strd	r3, r3, [sp, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLM = 4;
 800035c:	9416      	str	r4, [sp, #88]	@ 0x58
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800035e:	f006 fbcd 	bl	8006afc <HAL_RCC_OscConfig>
 8000362:	b108      	cbz	r0, 8000368 <SystemClock_Config+0x58>
 8000364:	b672      	cpsid	i
  while (1)
 8000366:	e7fe      	b.n	8000366 <SystemClock_Config+0x56>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000368:	231f      	movs	r3, #31
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800036a:	e9cd 0002 	strd	r0, r0, [sp, #8]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 800036e:	e9cd 0004 	strd	r0, r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8000372:	4621      	mov	r1, r4
 8000374:	4668      	mov	r0, sp
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000376:	e9cd 3500 	strd	r3, r5, [sp]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800037a:	f006 fa5d 	bl	8006838 <HAL_RCC_ClockConfig>
 800037e:	b108      	cbz	r0, 8000384 <SystemClock_Config+0x74>
 8000380:	b672      	cpsid	i
  while (1)
 8000382:	e7fe      	b.n	8000382 <SystemClock_Config+0x72>
}
 8000384:	b01f      	add	sp, #124	@ 0x7c
 8000386:	bd30      	pop	{r4, r5, pc}

08000388 <main>:
{
 8000388:	b580      	push	{r7, lr}
 800038a:	b098      	sub	sp, #96	@ 0x60
  HAL_Init();
 800038c:	f003 fc74 	bl	8003c78 <HAL_Init>
  SystemClock_Config();
 8000390:	f7ff ffbe 	bl	8000310 <SystemClock_Config>
  HAL_PWREx_DisableUCPDDeadBattery();
 8000394:	f006 f960 	bl	8006658 <HAL_PWREx_DisableUCPDDeadBattery>
  if (HAL_PWREx_ConfigSupply(PWR_SMPS_SUPPLY) != HAL_OK)
 8000398:	2002      	movs	r0, #2
 800039a:	f006 f931 	bl	8006600 <HAL_PWREx_ConfigSupply>
 800039e:	4605      	mov	r5, r0
 80003a0:	b108      	cbz	r0, 80003a6 <main+0x1e>
 80003a2:	b672      	cpsid	i
  while (1)
 80003a4:	e7fe      	b.n	80003a4 <main+0x1c>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80003a6:	f04f 0914 	mov.w	r9, #20
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003aa:	4cc0      	ldr	r4, [pc, #768]	@ (80006ac <main+0x324>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80003ac:	4601      	mov	r1, r0
 80003ae:	464a      	mov	r2, r9
 80003b0:	a80b      	add	r0, sp, #44	@ 0x2c
 80003b2:	f032 faa8 	bl	8032906 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003b6:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80003ba:	2601      	movs	r6, #1
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003bc:	f043 0310 	orr.w	r3, r3, #16
 80003c0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 80003c4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80003c8:	f04f 0810 	mov.w	r8, #16
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80003cc:	f003 0310 	and.w	r3, r3, #16
 80003d0:	9304      	str	r3, [sp, #16]
 80003d2:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003d4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80003d8:	f04f 0a20 	mov.w	sl, #32
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003dc:	f043 0304 	orr.w	r3, r3, #4
 80003e0:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 80003e4:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80003e8:	2201      	movs	r2, #1
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80003ea:	f003 0304 	and.w	r3, r3, #4
 80003ee:	9305      	str	r3, [sp, #20]
 80003f0:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80003f2:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80003f6:	2150      	movs	r1, #80	@ 0x50
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80003f8:	f043 0320 	orr.w	r3, r3, #32
 80003fc:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000400:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000404:	48aa      	ldr	r0, [pc, #680]	@ (80006b0 <main+0x328>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000406:	f003 0320 	and.w	r3, r3, #32
 800040a:	9306      	str	r3, [sp, #24]
 800040c:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800040e:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000412:	2702      	movs	r7, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000414:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000418:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800041c:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000420:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000424:	9307      	str	r3, [sp, #28]
 8000426:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000428:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 800042c:	f043 0302 	orr.w	r3, r3, #2
 8000430:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000434:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000438:	f003 0302 	and.w	r3, r3, #2
 800043c:	9308      	str	r3, [sp, #32]
 800043e:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000440:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000444:	f043 0308 	orr.w	r3, r3, #8
 8000448:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800044c:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000450:	f003 0308 	and.w	r3, r3, #8
 8000454:	9309      	str	r3, [sp, #36]	@ 0x24
 8000456:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000458:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 800045c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000460:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000464:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8000468:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800046c:	930a      	str	r3, [sp, #40]	@ 0x28
 800046e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(GPIOE, LCD_DISP_EN_Pin|LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000470:	f004 fb22 	bl	8004ab8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000474:	462a      	mov	r2, r5
 8000476:	f641 4101 	movw	r1, #7169	@ 0x1c01
 800047a:	488e      	ldr	r0, [pc, #568]	@ (80006b4 <main+0x32c>)
 800047c:	f004 fb1c 	bl	8004ab8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, USER_LD2_RED_Pin|USER_LD3_GREEN_Pin, GPIO_PIN_SET);
 8000480:	2201      	movs	r2, #1
 8000482:	4649      	mov	r1, r9
 8000484:	488c      	ldr	r0, [pc, #560]	@ (80006b8 <main+0x330>)
 8000486:	f004 fb17 	bl	8004ab8 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(LCD_DISP_EN_GPIO_Port, &GPIO_InitStruct);
 800048a:	4889      	ldr	r0, [pc, #548]	@ (80006b0 <main+0x328>)
 800048c:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800048e:	e9cd 860b 	strd	r8, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000492:	e9cd 550d 	strd	r5, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_DISP_EN_GPIO_Port, &GPIO_InitStruct);
 8000496:	f004 f9fb 	bl	8004890 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800049a:	4b88      	ldr	r3, [pc, #544]	@ (80006bc <main+0x334>)
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 800049c:	4884      	ldr	r0, [pc, #528]	@ (80006b0 <main+0x328>)
 800049e:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80004a0:	e9cd a30b 	strd	sl, r3, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80004a4:	960d      	str	r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004a6:	f04f 0a11 	mov.w	sl, #17
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 80004aa:	f004 f9f1 	bl	8004890 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004ae:	2340      	movs	r3, #64	@ 0x40
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80004b0:	487f      	ldr	r0, [pc, #508]	@ (80006b0 <main+0x328>)
 80004b2:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004b4:	e9cd 3a0b 	strd	r3, sl, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80004b8:	e9cd 550d 	strd	r5, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80004bc:	f004 f9e8 	bl	8004890 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = USER_BUTTON_Pin;
 80004c0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 80004c4:	487b      	ldr	r0, [pc, #492]	@ (80006b4 <main+0x32c>)
 80004c6:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80004c8:	e9cd 350b 	strd	r3, r5, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80004cc:	970d      	str	r7, [sp, #52]	@ 0x34
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 80004ce:	f004 f9df 	bl	8004890 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin;
 80004d2:	f641 4301 	movw	r3, #7169	@ 0x1c01
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80004d6:	4877      	ldr	r0, [pc, #476]	@ (80006b4 <main+0x32c>)
 80004d8:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80004da:	e9cd 360b 	strd	r3, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80004de:	e9cd 560d 	strd	r5, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80004e2:	f004 f9d5 	bl	8004890 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80004e6:	4874      	ldr	r0, [pc, #464]	@ (80006b8 <main+0x330>)
 80004e8:	a90b      	add	r1, sp, #44	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004ea:	e9cd 9a0b 	strd	r9, sl, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80004ee:	e9cd 560d 	strd	r5, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80004f2:	f004 f9cd 	bl	8004890 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI5_IRQn, 5, 0);
 80004f6:	462a      	mov	r2, r5
 80004f8:	2105      	movs	r1, #5
 80004fa:	4640      	mov	r0, r8
 80004fc:	f003 fc24 	bl	8003d48 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI5_IRQn);
 8000500:	4640      	mov	r0, r8
 8000502:	f003 fc51 	bl	8003da8 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 8000506:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 800050a:	462a      	mov	r2, r5
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 800050c:	4333      	orrs	r3, r6
 800050e:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 8000512:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 8000516:	2105      	movs	r1, #5
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 8000518:	4033      	ands	r3, r6
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 800051a:	201d      	movs	r0, #29
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 800051c:	9303      	str	r3, [sp, #12]
 800051e:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 5, 0);
 8000520:	f003 fc12 	bl	8003d48 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPDMA1_Channel0_IRQn);
 8000524:	201d      	movs	r0, #29
 8000526:	f003 fc3f 	bl	8003da8 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(GPDMA1_Channel1_IRQn, 5, 0);
 800052a:	462a      	mov	r2, r5
 800052c:	2105      	movs	r1, #5
 800052e:	201e      	movs	r0, #30
 8000530:	f003 fc0a 	bl	8003d48 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPDMA1_Channel1_IRQn);
 8000534:	201e      	movs	r0, #30
 8000536:	f003 fc37 	bl	8003da8 <HAL_NVIC_EnableIRQ>
  if (HAL_ICACHE_ConfigAssociativityMode(ICACHE_1WAY) != HAL_OK)
 800053a:	4628      	mov	r0, r5
 800053c:	f004 fe9e 	bl	800527c <HAL_ICACHE_ConfigAssociativityMode>
 8000540:	b108      	cbz	r0, 8000546 <main+0x1be>
 8000542:	b672      	cpsid	i
  while (1)
 8000544:	e7fe      	b.n	8000544 <main+0x1bc>
  if (HAL_ICACHE_Enable() != HAL_OK)
 8000546:	f004 fea9 	bl	800529c <HAL_ICACHE_Enable>
 800054a:	b108      	cbz	r0, 8000550 <main+0x1c8>
 800054c:	b672      	cpsid	i
  while (1)
 800054e:	e7fe      	b.n	800054e <main+0x1c6>
  hdcache1.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000550:	f04f 4500 	mov.w	r5, #2147483648	@ 0x80000000
  hdcache1.Instance = DCACHE1;
 8000554:	485a      	ldr	r0, [pc, #360]	@ (80006c0 <main+0x338>)
  hdcache1.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 8000556:	4b5b      	ldr	r3, [pc, #364]	@ (80006c4 <main+0x33c>)
 8000558:	e9c0 3500 	strd	r3, r5, [r0]
  if (HAL_DCACHE_Init(&hdcache1) != HAL_OK)
 800055c:	f003 fce4 	bl	8003f28 <HAL_DCACHE_Init>
 8000560:	b108      	cbz	r0, 8000566 <main+0x1de>
 8000562:	b672      	cpsid	i
  while (1)
 8000564:	e7fe      	b.n	8000564 <main+0x1dc>
  hdcache2.Instance = DCACHE2;
 8000566:	4858      	ldr	r0, [pc, #352]	@ (80006c8 <main+0x340>)
 8000568:	4b58      	ldr	r3, [pc, #352]	@ (80006cc <main+0x344>)
  hdcache2.Init.ReadBurstType = DCACHE_READ_BURST_INCR;
 800056a:	e9c0 3500 	strd	r3, r5, [r0]
  if (HAL_DCACHE_Init(&hdcache2) != HAL_OK)
 800056e:	f003 fcdb 	bl	8003f28 <HAL_DCACHE_Init>
 8000572:	4605      	mov	r5, r0
 8000574:	b108      	cbz	r0, 800057a <main+0x1f2>
 8000576:	b672      	cpsid	i
  while (1)
 8000578:	e7fe      	b.n	8000578 <main+0x1f0>
   __HAL_RCC_SYSCFG_CLK_ENABLE();
 800057a:	f8d4 30a8 	ldr.w	r3, [r4, #168]	@ 0xa8
 800057e:	f043 0302 	orr.w	r3, r3, #2
 8000582:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
 8000586:	f8d4 30a8 	ldr.w	r3, [r4, #168]	@ 0xa8
 800058a:	f003 0302 	and.w	r3, r3, #2
 800058e:	9302      	str	r3, [sp, #8]
 8000590:	9b02      	ldr	r3, [sp, #8]
   HAL_SYSCFG_DisableSRAMCached();
 8000592:	f003 fbbf 	bl	8003d14 <HAL_SYSCFG_DisableSRAMCached>
  hcrc.Instance = CRC;
 8000596:	484e      	ldr	r0, [pc, #312]	@ (80006d0 <main+0x348>)
 8000598:	4b4e      	ldr	r3, [pc, #312]	@ (80006d4 <main+0x34c>)
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 800059a:	e9c0 5505 	strd	r5, r5, [r0, #20]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 800059e:	8085      	strh	r5, [r0, #4]
  hcrc.Instance = CRC;
 80005a0:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80005a2:	6206      	str	r6, [r0, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80005a4:	f003 fc48 	bl	8003e38 <HAL_CRC_Init>
 80005a8:	4605      	mov	r5, r0
 80005aa:	b108      	cbz	r0, 80005b0 <main+0x228>
 80005ac:	b672      	cpsid	i
  while (1)
 80005ae:	e7fe      	b.n	80005ae <main+0x226>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80005b0:	2234      	movs	r2, #52	@ 0x34
 80005b2:	4601      	mov	r1, r0
 80005b4:	a80b      	add	r0, sp, #44	@ 0x2c
 80005b6:	f032 f9a6 	bl	8032906 <memset>
  hltdc.Instance = LTDC;
 80005ba:	4c47      	ldr	r4, [pc, #284]	@ (80006d8 <main+0x350>)
 80005bc:	4b47      	ldr	r3, [pc, #284]	@ (80006dc <main+0x354>)
  hltdc.Init.AccumulatedActiveH = 492;
 80005be:	f44f 7c4b 	mov.w	ip, #812	@ 0x32c
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80005c2:	e9c4 3500 	strd	r3, r5, [r4]
  hltdc.Init.HorizontalSync = 4;
 80005c6:	2304      	movs	r3, #4
  hltdc.Init.VerticalSync = 4;
 80005c8:	e9c4 3305 	strd	r3, r3, [r4, #20]
  hltdc.Init.AccumulatedHBP = 12;
 80005cc:	230c      	movs	r3, #12
  hltdc.Init.AccumulatedVBP = 12;
 80005ce:	e9c4 3307 	strd	r3, r3, [r4, #28]
  hltdc.Init.AccumulatedActiveH = 492;
 80005d2:	f44f 73f6 	mov.w	r3, #492	@ 0x1ec
  hltdc.Init.TotalHeigh = 506;
 80005d6:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
  hltdc.Init.AccumulatedActiveH = 492;
 80005da:	e9c4 c309 	strd	ip, r3, [r4, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 506;
 80005de:	f44f 73fd 	mov.w	r3, #506	@ 0x1fa
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80005e2:	4620      	mov	r0, r4
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80005e4:	e9c4 5502 	strd	r5, r5, [r4, #8]
  hltdc.Init.TotalHeigh = 506;
 80005e8:	e9c4 e30b 	strd	lr, r3, [r4, #44]	@ 0x2c
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80005ec:	6125      	str	r5, [r4, #16]
  hltdc.Init.Backcolor.Blue = 0;
 80005ee:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 80005f0:	f884 5036 	strb.w	r5, [r4, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80005f4:	f005 fea6 	bl	8006344 <HAL_LTDC_Init>
 80005f8:	4602      	mov	r2, r0
 80005fa:	b108      	cbz	r0, 8000600 <main+0x278>
 80005fc:	b672      	cpsid	i
  while (1)
 80005fe:	e7fe      	b.n	80005fe <main+0x276>
  pLayerCfg.WindowX1 = 800;
 8000600:	f44f 7148 	mov.w	r1, #800	@ 0x320
  pLayerCfg.WindowX0 = 0;
 8000604:	900b      	str	r0, [sp, #44]	@ 0x2c
  pLayerCfg.WindowY0 = 0;
 8000606:	e9cd 100c 	strd	r1, r0, [sp, #48]	@ 0x30
  pLayerCfg.Alpha = 255;
 800060a:	20ff      	movs	r0, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800060c:	f44f 6580 	mov.w	r5, #1024	@ 0x400
  pLayerCfg.Alpha0 = 0;
 8000610:	e9cd 0210 	strd	r0, r2, [sp, #64]	@ 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000614:	2005      	movs	r0, #5
  pLayerCfg.WindowY1 = 480;
 8000616:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800061a:	e9cd 5012 	strd	r5, r0, [sp, #72]	@ 0x48
  pLayerCfg.ImageWidth = 800;
 800061e:	e9cd 2114 	strd	r2, r1, [sp, #80]	@ 0x50
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000622:	4620      	mov	r0, r4
 8000624:	a90b      	add	r1, sp, #44	@ 0x2c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000626:	e9cd 370e 	strd	r3, r7, [sp, #56]	@ 0x38
  pLayerCfg.ImageHeight = 480;
 800062a:	9316      	str	r3, [sp, #88]	@ 0x58
  pLayerCfg.Backcolor.Blue = 0;
 800062c:	f8ad 205c 	strh.w	r2, [sp, #92]	@ 0x5c
  pLayerCfg.Backcolor.Red = 0;
 8000630:	f88d 205e 	strb.w	r2, [sp, #94]	@ 0x5e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000634:	f005 ff51 	bl	80064da <HAL_LTDC_ConfigLayer>
 8000638:	4603      	mov	r3, r0
 800063a:	b108      	cbz	r0, 8000640 <main+0x2b8>
 800063c:	b672      	cpsid	i
  while (1)
 800063e:	e7fe      	b.n	800063e <main+0x2b6>
  hdma2d.Init.Mode = DMA2D_R2M;
 8000640:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
  hdma2d.Instance = DMA2D;
 8000644:	4826      	ldr	r0, [pc, #152]	@ (80006e0 <main+0x358>)
  hdma2d.Init.Mode = DMA2D_R2M;
 8000646:	4c27      	ldr	r4, [pc, #156]	@ (80006e4 <main+0x35c>)
  hdma2d.Init.OutputOffset = 0;
 8000648:	e9c0 6302 	strd	r6, r3, [r0, #8]
  hdma2d.Init.Mode = DMA2D_R2M;
 800064c:	e9c0 4200 	strd	r4, r2, [r0]
  hdma2d.Init.LineOffsetMode = DMA2D_LOM_PIXELS;
 8000650:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000654:	f003 ffcc 	bl	80045f0 <HAL_DMA2D_Init>
 8000658:	b108      	cbz	r0, 800065e <main+0x2d6>
 800065a:	b672      	cpsid	i
  while (1)
 800065c:	e7fe      	b.n	800065c <main+0x2d4>
  hgpu2d.Instance = GPU2D;
 800065e:	4822      	ldr	r0, [pc, #136]	@ (80006e8 <main+0x360>)
 8000660:	4b22      	ldr	r3, [pc, #136]	@ (80006ec <main+0x364>)
 8000662:	6003      	str	r3, [r0, #0]
  if (HAL_GPU2D_Init(&hgpu2d) != HAL_OK)
 8000664:	f004 fa4c 	bl	8004b00 <HAL_GPU2D_Init>
 8000668:	b108      	cbz	r0, 800066e <main+0x2e6>
 800066a:	b672      	cpsid	i
  while (1)
 800066c:	e7fe      	b.n	800066c <main+0x2e4>
  hxspi1.Init.FifoThresholdByte = 4;
 800066e:	2304      	movs	r3, #4
  hxspi1.Instance = HSPI1;
 8000670:	4c1f      	ldr	r4, [pc, #124]	@ (80006f0 <main+0x368>)
  hxspi1.Init.FifoThresholdByte = 4;
 8000672:	4920      	ldr	r1, [pc, #128]	@ (80006f4 <main+0x36c>)
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 8000674:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
  hxspi1.Init.FifoThresholdByte = 4;
 8000678:	e9c4 1300 	strd	r1, r3, [r4]
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 800067c:	2300      	movs	r3, #0
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 800067e:	2602      	movs	r6, #2
  hxspi1.Init.MemoryType = HAL_XSPI_MEMTYPE_MACRONIX;
 8000680:	e9c4 3202 	strd	r3, r2, [r4, #8]
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 8000684:	221a      	movs	r2, #26
  if (HAL_XSPI_Init(&hxspi1) != HAL_OK)
 8000686:	4620      	mov	r0, r4
  hxspi1.Init.ChipSelectHighTimeCycle = 2;
 8000688:	e9c4 2604 	strd	r2, r6, [r4, #16]
  hxspi1.Init.ClockMode = HAL_XSPI_CLOCK_MODE_0;
 800068c:	e9c4 3306 	strd	r3, r3, [r4, #24]
  hxspi1.Init.ClockPrescaler = 0;
 8000690:	e9c4 3308 	strd	r3, r3, [r4, #32]
  hxspi1.Init.DelayHoldQuarterCycle = HAL_XSPI_DHQC_DISABLE;
 8000694:	e9c4 330a 	strd	r3, r3, [r4, #40]	@ 0x28
  hxspi1.Init.Refresh = 0;
 8000698:	e9c4 330e 	strd	r3, r3, [r4, #56]	@ 0x38
  hxspi1.Init.ChipSelectBoundary = HAL_XSPI_BONDARYOF_NONE;
 800069c:	6323      	str	r3, [r4, #48]	@ 0x30
  if (HAL_XSPI_Init(&hxspi1) != HAL_OK)
 800069e:	f007 fe8f 	bl	80083c0 <HAL_XSPI_Init>
 80006a2:	4605      	mov	r5, r0
 80006a4:	b340      	cbz	r0, 80006f8 <main+0x370>
 80006a6:	b672      	cpsid	i
  while (1)
 80006a8:	e7fe      	b.n	80006a8 <main+0x320>
 80006aa:	bf00      	nop
 80006ac:	46020c00 	.word	0x46020c00
 80006b0:	42021000 	.word	0x42021000
 80006b4:	42020800 	.word	0x42020800
 80006b8:	42020c00 	.word	0x42020c00
 80006bc:	10210000 	.word	0x10210000
 80006c0:	20000610 	.word	0x20000610
 80006c4:	40031400 	.word	0x40031400
 80006c8:	200005e4 	.word	0x200005e4
 80006cc:	40031800 	.word	0x40031800
 80006d0:	2000063c 	.word	0x2000063c
 80006d4:	40023000 	.word	0x40023000
 80006d8:	200002cc 	.word	0x200002cc
 80006dc:	40016800 	.word	0x40016800
 80006e0:	2000057c 	.word	0x2000057c
 80006e4:	4002b000 	.word	0x4002b000
 80006e8:	20000570 	.word	0x20000570
 80006ec:	4002f000 	.word	0x4002f000
 80006f0:	20000510 	.word	0x20000510
 80006f4:	420d3400 	.word	0x420d3400
  MX66UW1G45G_ResetEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 80006f8:	4602      	mov	r2, r0
 80006fa:	4601      	mov	r1, r0
 80006fc:	4620      	mov	r0, r4
 80006fe:	f003 fa37 	bl	8003b70 <MX66UW1G45G_ResetEnable>
  MX66UW1G45G_ResetMemory(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 8000702:	462a      	mov	r2, r5
 8000704:	4629      	mov	r1, r5
 8000706:	4620      	mov	r0, r4
 8000708:	f003 fa63 	bl	8003bd2 <MX66UW1G45G_ResetMemory>
  HAL_Delay(MX66UW1G45G_RESET_MAX_TIME);
 800070c:	2064      	movs	r0, #100	@ 0x64
 800070e:	f003 faef 	bl	8003cf0 <HAL_Delay>
  MX66UW1G45G_WriteEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 8000712:	462a      	mov	r2, r5
 8000714:	4629      	mov	r1, r5
 8000716:	4620      	mov	r0, r4
 8000718:	f003 f958 	bl	80039cc <MX66UW1G45G_WriteEnable>
  MX66UW1G45G_WriteCfg2Register(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER, MX66UW1G45G_CR2_REG3_ADDR, MX66UW1G45G_CR2_DC_6_CYCLES);
 800071c:	2307      	movs	r3, #7
 800071e:	462a      	mov	r2, r5
 8000720:	4629      	mov	r1, r5
 8000722:	4620      	mov	r0, r4
 8000724:	9300      	str	r3, [sp, #0]
 8000726:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800072a:	f003 f9c9 	bl	8003ac0 <MX66UW1G45G_WriteCfg2Register>
  MX66UW1G45G_WriteEnable(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER);
 800072e:	462a      	mov	r2, r5
 8000730:	4629      	mov	r1, r5
 8000732:	4620      	mov	r0, r4
 8000734:	f003 f94a 	bl	80039cc <MX66UW1G45G_WriteEnable>
  MX66UW1G45G_WriteCfg2Register(&hxspi1, MX66UW1G45G_SPI_MODE, MX66UW1G45G_STR_TRANSFER, MX66UW1G45G_CR2_REG1_ADDR, MX66UW1G45G_CR2_DOPI);
 8000738:	462b      	mov	r3, r5
 800073a:	462a      	mov	r2, r5
 800073c:	4629      	mov	r1, r5
 800073e:	4620      	mov	r0, r4
 8000740:	9600      	str	r6, [sp, #0]
 8000742:	f003 f9bd 	bl	8003ac0 <MX66UW1G45G_WriteCfg2Register>
  HAL_Delay(MX66UW1G45G_WRITE_REG_MAX_TIME);
 8000746:	2028      	movs	r0, #40	@ 0x28
 8000748:	f003 fad2 	bl	8003cf0 <HAL_Delay>
  MX66UW1G45G_EnableDTRMemoryMappedMode(&hxspi1, MX66UW1G45G_OPI_MODE);
 800074c:	2101      	movs	r1, #1
 800074e:	4620      	mov	r0, r4
 8000750:	f003 f8ed 	bl	800392e <MX66UW1G45G_EnableDTRMemoryMappedMode>
  hi2c2.Instance = I2C2;
 8000754:	4c19      	ldr	r4, [pc, #100]	@ (80007bc <main+0x434>)
  hi2c2.Init.Timing = 0x00F07BFF;
 8000756:	4a1a      	ldr	r2, [pc, #104]	@ (80007c0 <main+0x438>)
 8000758:	4b1a      	ldr	r3, [pc, #104]	@ (80007c4 <main+0x43c>)
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 800075a:	4620      	mov	r0, r4
  hi2c2.Init.Timing = 0x00F07BFF;
 800075c:	e9c4 2300 	strd	r2, r3, [r4]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000760:	2301      	movs	r3, #1
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000762:	e9c4 5505 	strd	r5, r5, [r4, #20]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000766:	e9c4 3503 	strd	r3, r5, [r4, #12]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800076a:	e9c4 5507 	strd	r5, r5, [r4, #28]
  hi2c2.Init.OwnAddress1 = 0;
 800076e:	60a5      	str	r5, [r4, #8]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000770:	f004 fb2b 	bl	8004dca <HAL_I2C_Init>
 8000774:	4601      	mov	r1, r0
 8000776:	b108      	cbz	r0, 800077c <main+0x3f4>
 8000778:	b672      	cpsid	i
  while (1)
 800077a:	e7fe      	b.n	800077a <main+0x3f2>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800077c:	4620      	mov	r0, r4
 800077e:	f004 fd31 	bl	80051e4 <HAL_I2CEx_ConfigAnalogFilter>
 8000782:	4601      	mov	r1, r0
 8000784:	b108      	cbz	r0, 800078a <main+0x402>
 8000786:	b672      	cpsid	i
  while (1)
 8000788:	e7fe      	b.n	8000788 <main+0x400>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 800078a:	4620      	mov	r0, r4
 800078c:	f004 fd50 	bl	8005230 <HAL_I2CEx_ConfigDigitalFilter>
 8000790:	b108      	cbz	r0, 8000796 <main+0x40e>
 8000792:	b672      	cpsid	i
  while (1)
 8000794:	e7fe      	b.n	8000794 <main+0x40c>
  hjpeg.Instance = JPEG;
 8000796:	480c      	ldr	r0, [pc, #48]	@ (80007c8 <main+0x440>)
 8000798:	4b0c      	ldr	r3, [pc, #48]	@ (80007cc <main+0x444>)
 800079a:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
 800079c:	f004 ff4e 	bl	800563c <HAL_JPEG_Init>
 80007a0:	b108      	cbz	r0, 80007a6 <main+0x41e>
 80007a2:	b672      	cpsid	i
  while (1)
 80007a4:	e7fe      	b.n	80007a4 <main+0x41c>
  MX_TouchGFX_Init();
 80007a6:	f000 fc01 	bl	8000fac <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80007aa:	f000 fbfe 	bl	8000faa <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80007ae:	f008 f91f 	bl	80089f0 <osKernelInitialize>
  MX_FREERTOS_Init();
 80007b2:	f7ff fd91 	bl	80002d8 <MX_FREERTOS_Init>
  osKernelStart();
 80007b6:	f008 f931 	bl	8008a1c <osKernelStart>
  while (1)
 80007ba:	e7fe      	b.n	80007ba <main+0x432>
 80007bc:	200004bc 	.word	0x200004bc
 80007c0:	40005800 	.word	0x40005800
 80007c4:	00f07bff 	.word	0x00f07bff
 80007c8:	20000464 	.word	0x20000464
 80007cc:	4002a000 	.word	0x4002a000

080007d0 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 80007d0:	6802      	ldr	r2, [r0, #0]
 80007d2:	4b03      	ldr	r3, [pc, #12]	@ (80007e0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80007d4:	429a      	cmp	r2, r3
 80007d6:	d101      	bne.n	80007dc <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80007d8:	f003 ba78 	b.w	8003ccc <HAL_IncTick>
}
 80007dc:	4770      	bx	lr
 80007de:	bf00      	nop
 80007e0:	40001000 	.word	0x40001000

080007e4 <Error_Handler>:
 80007e4:	b672      	cpsid	i
  while (1)
 80007e6:	e7fe      	b.n	80007e6 <Error_Handler+0x2>

080007e8 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80007e8:	4b0a      	ldr	r3, [pc, #40]	@ (8000814 <HAL_MspInit+0x2c>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007ea:	210f      	movs	r1, #15
  __HAL_RCC_PWR_CLK_ENABLE();
 80007ec:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007f0:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 80007f4:	f042 0204 	orr.w	r2, r2, #4
 80007f8:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80007fc:	2200      	movs	r2, #0
  __HAL_RCC_PWR_CLK_ENABLE();
 80007fe:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
{
 8000802:	b082      	sub	sp, #8
  __HAL_RCC_PWR_CLK_ENABLE();
 8000804:	f003 0304 	and.w	r3, r3, #4
 8000808:	9301      	str	r3, [sp, #4]
 800080a:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800080c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800080e:	f003 ba9b 	b.w	8003d48 <HAL_NVIC_SetPriority>
 8000812:	bf00      	nop
 8000814:	46020c00 	.word	0x46020c00

08000818 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000818:	6802      	ldr	r2, [r0, #0]
 800081a:	4b09      	ldr	r3, [pc, #36]	@ (8000840 <HAL_CRC_MspInit+0x28>)
{
 800081c:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 800081e:	429a      	cmp	r2, r3
 8000820:	d10c      	bne.n	800083c <HAL_CRC_MspInit+0x24>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000822:	4b08      	ldr	r3, [pc, #32]	@ (8000844 <HAL_CRC_MspInit+0x2c>)
 8000824:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000828:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800082c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000830:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000834:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000838:	9301      	str	r3, [sp, #4]
 800083a:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800083c:	b002      	add	sp, #8
 800083e:	4770      	bx	lr
 8000840:	40023000 	.word	0x40023000
 8000844:	46020c00 	.word	0x46020c00

08000848 <HAL_DCACHE_MspInit>:
* @param hdcache: DCACHE handle pointer
* @retval None
*/
void HAL_DCACHE_MspInit(DCACHE_HandleTypeDef* hdcache)
{
  if(hdcache->Instance==DCACHE1)
 8000848:	6803      	ldr	r3, [r0, #0]
 800084a:	4a12      	ldr	r2, [pc, #72]	@ (8000894 <HAL_DCACHE_MspInit+0x4c>)
{
 800084c:	b082      	sub	sp, #8
  if(hdcache->Instance==DCACHE1)
 800084e:	4293      	cmp	r3, r2
 8000850:	d10e      	bne.n	8000870 <HAL_DCACHE_MspInit+0x28>
  {
  /* USER CODE BEGIN DCACHE1_MspInit 0 */

  /* USER CODE END DCACHE1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DCACHE1_CLK_ENABLE();
 8000852:	4b11      	ldr	r3, [pc, #68]	@ (8000898 <HAL_DCACHE_MspInit+0x50>)
 8000854:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000858:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800085c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000860:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000864:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8000868:	9300      	str	r3, [sp, #0]
 800086a:	9b00      	ldr	r3, [sp, #0]
  /* USER CODE BEGIN DCACHE2_MspInit 1 */

  /* USER CODE END DCACHE2_MspInit 1 */
  }

}
 800086c:	b002      	add	sp, #8
 800086e:	4770      	bx	lr
  else if(hdcache->Instance==DCACHE2)
 8000870:	4a0a      	ldr	r2, [pc, #40]	@ (800089c <HAL_DCACHE_MspInit+0x54>)
 8000872:	4293      	cmp	r3, r2
 8000874:	d1fa      	bne.n	800086c <HAL_DCACHE_MspInit+0x24>
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000876:	4b08      	ldr	r3, [pc, #32]	@ (8000898 <HAL_DCACHE_MspInit+0x50>)
 8000878:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800087c:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8000880:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000884:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000888:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800088c:	9301      	str	r3, [sp, #4]
 800088e:	9b01      	ldr	r3, [sp, #4]
}
 8000890:	e7ec      	b.n	800086c <HAL_DCACHE_MspInit+0x24>
 8000892:	bf00      	nop
 8000894:	40031400 	.word	0x40031400
 8000898:	46020c00 	.word	0x46020c00
 800089c:	40031800 	.word	0x40031800

080008a0 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80008a0:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80008a2:	4b0f      	ldr	r3, [pc, #60]	@ (80008e0 <HAL_DMA2D_MspInit+0x40>)
 80008a4:	6802      	ldr	r2, [r0, #0]
 80008a6:	429a      	cmp	r2, r3
 80008a8:	d117      	bne.n	80008da <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008aa:	4b0e      	ldr	r3, [pc, #56]	@ (80008e4 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008ac:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008ae:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008b2:	2076      	movs	r0, #118	@ 0x76
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008b4:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80008b8:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80008bc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008c0:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80008c2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80008c6:	9301      	str	r3, [sp, #4]
 80008c8:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80008ca:	f003 fa3d 	bl	8003d48 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80008ce:	2076      	movs	r0, #118	@ 0x76
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 80008d0:	b003      	add	sp, #12
 80008d2:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80008d6:	f003 ba67 	b.w	8003da8 <HAL_NVIC_EnableIRQ>
}
 80008da:	b003      	add	sp, #12
 80008dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80008e0:	4002b000 	.word	0x4002b000
 80008e4:	46020c00 	.word	0x46020c00

080008e8 <HAL_GPU2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hgpu2d: GPU2D handle pointer
* @retval None
*/
void HAL_GPU2D_MspInit(GPU2D_HandleTypeDef* hgpu2d)
{
 80008e8:	b507      	push	{r0, r1, r2, lr}
  if(hgpu2d->Instance==GPU2D)
 80008ea:	4b19      	ldr	r3, [pc, #100]	@ (8000950 <HAL_GPU2D_MspInit+0x68>)
 80008ec:	6802      	ldr	r2, [r0, #0]
 80008ee:	429a      	cmp	r2, r3
 80008f0:	d12b      	bne.n	800094a <HAL_GPU2D_MspInit+0x62>
  {
  /* USER CODE BEGIN GPU2D_MspInit 0 */

  /* USER CODE END GPU2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008f2:	4b18      	ldr	r3, [pc, #96]	@ (8000954 <HAL_GPU2D_MspInit+0x6c>)
    __HAL_RCC_DCACHE2_CLK_ENABLE();
    /* GPU2D interrupt Init */
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 80008f4:	2105      	movs	r1, #5
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008f6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 80008fa:	2084      	movs	r0, #132	@ 0x84
    __HAL_RCC_GPU2D_CLK_ENABLE();
 80008fc:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8000900:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8000904:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000908:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 800090c:	9200      	str	r2, [sp, #0]
 800090e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000910:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8000914:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8000918:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800091c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 8000920:	2200      	movs	r2, #0
    __HAL_RCC_DCACHE2_CLK_ENABLE();
 8000922:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000926:	9301      	str	r3, [sp, #4]
 8000928:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(GPU2D_IRQn, 5, 0);
 800092a:	f003 fa0d 	bl	8003d48 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPU2D_IRQn);
 800092e:	2084      	movs	r0, #132	@ 0x84
 8000930:	f003 fa3a 	bl	8003da8 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(GPU2D_ER_IRQn, 5, 0);
 8000934:	2200      	movs	r2, #0
 8000936:	2105      	movs	r1, #5
 8000938:	2085      	movs	r0, #133	@ 0x85
 800093a:	f003 fa05 	bl	8003d48 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPU2D_ER_IRQn);
 800093e:	2085      	movs	r0, #133	@ 0x85
  /* USER CODE BEGIN GPU2D_MspInit 1 */

  /* USER CODE END GPU2D_MspInit 1 */
  }

}
 8000940:	b003      	add	sp, #12
 8000942:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(GPU2D_ER_IRQn);
 8000946:	f003 ba2f 	b.w	8003da8 <HAL_NVIC_EnableIRQ>
}
 800094a:	b003      	add	sp, #12
 800094c:	f85d fb04 	ldr.w	pc, [sp], #4
 8000950:	4002f000 	.word	0x4002f000
 8000954:	46020c00 	.word	0x46020c00

08000958 <HAL_XSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hxspi: XSPI handle pointer
* @retval None
*/
void HAL_XSPI_MspInit(XSPI_HandleTypeDef* hxspi)
{
 8000958:	b5f0      	push	{r4, r5, r6, r7, lr}
 800095a:	4604      	mov	r4, r0
 800095c:	b0c1      	sub	sp, #260	@ 0x104
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800095e:	2214      	movs	r2, #20
 8000960:	2100      	movs	r1, #0
 8000962:	a803      	add	r0, sp, #12
 8000964:	f031 ffcf 	bl	8032906 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000968:	22e0      	movs	r2, #224	@ 0xe0
 800096a:	2100      	movs	r1, #0
 800096c:	a808      	add	r0, sp, #32
 800096e:	f031 ffca 	bl	8032906 <memset>
  if(hxspi->Instance==HSPI1)
 8000972:	6822      	ldr	r2, [r4, #0]
 8000974:	4b32      	ldr	r3, [pc, #200]	@ (8000a40 <HAL_XSPI_MspInit+0xe8>)
 8000976:	429a      	cmp	r2, r3
 8000978:	d15f      	bne.n	8000a3a <HAL_XSPI_MspInit+0xe2>

  /* USER CODE END HSPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_HSPI;
 800097a:	2301      	movs	r3, #1
 800097c:	2200      	movs	r2, #0
 800097e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    PeriphClkInit.HspiClockSelection = RCC_HSPICLKSOURCE_PLL2;
 8000982:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
    PeriphClkInit.PLL2.PLL2Source = RCC_PLLSOURCE_HSE;
    PeriphClkInit.PLL2.PLL2M = 4;
 8000986:	2103      	movs	r1, #3
    PeriphClkInit.HspiClockSelection = RCC_HSPICLKSOURCE_PLL2;
 8000988:	9338      	str	r3, [sp, #224]	@ 0xe0
    PeriphClkInit.PLL2.PLL2M = 4;
 800098a:	2304      	movs	r3, #4
    PeriphClkInit.PLL2.PLL2N = 66;
    PeriphClkInit.PLL2.PLL2P = 2;
 800098c:	2042      	movs	r0, #66	@ 0x42
    PeriphClkInit.PLL2.PLL2M = 4;
 800098e:	e9cd 130a 	strd	r1, r3, [sp, #40]	@ 0x28
    PeriphClkInit.PLL2.PLL2P = 2;
 8000992:	2302      	movs	r3, #2
 8000994:	e9cd 030c 	strd	r0, r3, [sp, #48]	@ 0x30
    PeriphClkInit.PLL2.PLL2Q = 2;
    PeriphClkInit.PLL2.PLL2R = 2;
 8000998:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
    PeriphClkInit.PLL2.PLL2RGE = RCC_PLLVCIRANGE_0;
    PeriphClkInit.PLL2.PLL2FRACN = 0;
    PeriphClkInit.PLL2.PLL2ClockOut = RCC_PLL2_DIVQ;
 800099c:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80009a0:	a808      	add	r0, sp, #32
    PeriphClkInit.PLL2.PLL2ClockOut = RCC_PLL2_DIVQ;
 80009a2:	9312      	str	r3, [sp, #72]	@ 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80009a4:	f006 fe14 	bl	80075d0 <HAL_RCCEx_PeriphCLKConfig>
 80009a8:	b108      	cbz	r0, 80009ae <HAL_XSPI_MspInit+0x56>
    {
      Error_Handler();
 80009aa:	f7ff ff1b 	bl	80007e4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009ae:	4b25      	ldr	r3, [pc, #148]	@ (8000a44 <HAL_XSPI_MspInit+0xec>)
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009b0:	2400      	movs	r4, #0
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009b2:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80009b6:	2702      	movs	r7, #2
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009b8:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80009bc:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80009c0:	f8d3 2090 	ldr.w	r2, [r3, #144]	@ 0x90
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009c4:	2603      	movs	r6, #3
    __HAL_RCC_HSPI1_CLK_ENABLE();
 80009c6:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 80009ca:	9200      	str	r2, [sp, #0]
 80009cc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009ce:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 80009d2:	2508      	movs	r5, #8
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009d4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80009d8:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80009dc:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80009e0:	4819      	ldr	r0, [pc, #100]	@ (8000a48 <HAL_XSPI_MspInit+0xf0>)
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80009e2:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 80009e6:	9201      	str	r2, [sp, #4]
 80009e8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80009ea:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80009ee:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80009f0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80009f4:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 80009f8:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009fc:	e9cd 4605 	strd	r4, r6, [sp, #20]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000a00:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000a04:	9302      	str	r3, [sp, #8]
 8000a06:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a08:	f44f 437e 	mov.w	r3, #65024	@ 0xfe00
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 8000a0c:	9507      	str	r5, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a0e:	e9cd 3703 	strd	r3, r7, [sp, #12]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000a12:	f003 ff3d 	bl	8004890 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8000a16:	230f      	movs	r3, #15
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000a18:	480c      	ldr	r0, [pc, #48]	@ (8000a4c <HAL_XSPI_MspInit+0xf4>)
 8000a1a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a1c:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a20:	e9cd 4605 	strd	r4, r6, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF8_HSPI1;
 8000a24:	9507      	str	r5, [sp, #28]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000a26:	f003 ff33 	bl	8004890 <HAL_GPIO_Init>

    /* HSPI1 interrupt Init */
    HAL_NVIC_SetPriority(HSPI1_IRQn, 5, 0);
 8000a2a:	2083      	movs	r0, #131	@ 0x83
 8000a2c:	4622      	mov	r2, r4
 8000a2e:	2105      	movs	r1, #5
 8000a30:	f003 f98a 	bl	8003d48 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(HSPI1_IRQn);
 8000a34:	2083      	movs	r0, #131	@ 0x83
 8000a36:	f003 f9b7 	bl	8003da8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN HSPI1_MspInit 1 */

  /* USER CODE END HSPI1_MspInit 1 */
  }

}
 8000a3a:	b041      	add	sp, #260	@ 0x104
 8000a3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a3e:	bf00      	nop
 8000a40:	420d3400 	.word	0x420d3400
 8000a44:	46020c00 	.word	0x46020c00
 8000a48:	42021c00 	.word	0x42021c00
 8000a4c:	42022000 	.word	0x42022000

08000a50 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000a50:	b510      	push	{r4, lr}
 8000a52:	4604      	mov	r4, r0
 8000a54:	b0c0      	sub	sp, #256	@ 0x100
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a56:	2214      	movs	r2, #20
 8000a58:	2100      	movs	r1, #0
 8000a5a:	a803      	add	r0, sp, #12
 8000a5c:	f031 ff53 	bl	8032906 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000a60:	22e0      	movs	r2, #224	@ 0xe0
 8000a62:	2100      	movs	r1, #0
 8000a64:	a808      	add	r0, sp, #32
 8000a66:	f031 ff4e 	bl	8032906 <memset>
  if(hi2c->Instance==I2C2)
 8000a6a:	6822      	ldr	r2, [r4, #0]
 8000a6c:	4b1a      	ldr	r3, [pc, #104]	@ (8000ad8 <HAL_I2C_MspInit+0x88>)
 8000a6e:	429a      	cmp	r2, r3
 8000a70:	d12f      	bne.n	8000ad2 <HAL_I2C_MspInit+0x82>

  /* USER CODE END I2C2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8000a72:	2280      	movs	r2, #128	@ 0x80
 8000a74:	2300      	movs	r3, #0
    PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000a76:	a808      	add	r0, sp, #32
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8000a78:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000a7c:	f006 fda8 	bl	80075d0 <HAL_RCCEx_PeriphCLKConfig>
 8000a80:	b108      	cbz	r0, 8000a86 <HAL_I2C_MspInit+0x36>
    {
      Error_Handler();
 8000a82:	f7ff feaf 	bl	80007e4 <Error_Handler>
    }

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a86:	4c15      	ldr	r4, [pc, #84]	@ (8000adc <HAL_I2C_MspInit+0x8c>)
    /**I2C2 GPIO Configuration
    PF0     ------> I2C2_SDA
    PF1     ------> I2C2_SCL
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000a88:	2203      	movs	r2, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a8a:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000a8e:	4814      	ldr	r0, [pc, #80]	@ (8000ae0 <HAL_I2C_MspInit+0x90>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a90:	f043 0320 	orr.w	r3, r3, #32
 8000a94:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 8000a98:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000a9c:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a9e:	f003 0320 	and.w	r3, r3, #32
 8000aa2:	9301      	str	r3, [sp, #4]
 8000aa4:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000aa6:	2312      	movs	r3, #18
 8000aa8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000aac:	2300      	movs	r3, #0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000aae:	e9cd 3305 	strd	r3, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8000ab2:	2304      	movs	r3, #4
 8000ab4:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000ab6:	f003 feeb 	bl	8004890 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8000aba:	f8d4 309c 	ldr.w	r3, [r4, #156]	@ 0x9c
 8000abe:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000ac2:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
 8000ac6:	f8d4 309c 	ldr.w	r3, [r4, #156]	@ 0x9c
 8000aca:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000ace:	9302      	str	r3, [sp, #8]
 8000ad0:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 8000ad2:	b040      	add	sp, #256	@ 0x100
 8000ad4:	bd10      	pop	{r4, pc}
 8000ad6:	bf00      	nop
 8000ad8:	40005800 	.word	0x40005800
 8000adc:	46020c00 	.word	0x46020c00
 8000ae0:	42021400 	.word	0x42021400

08000ae4 <HAL_JPEG_MspInit>:
* This function configures the hardware resources used in this example
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
 8000ae4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  DMA_DataHandlingConfTypeDef DataHandlingConfig;
  if(hjpeg->Instance==JPEG)
 8000ae6:	6802      	ldr	r2, [r0, #0]
 8000ae8:	4b3d      	ldr	r3, [pc, #244]	@ (8000be0 <HAL_JPEG_MspInit+0xfc>)
{
 8000aea:	4605      	mov	r5, r0
  if(hjpeg->Instance==JPEG)
 8000aec:	429a      	cmp	r2, r3
 8000aee:	d174      	bne.n	8000bda <HAL_JPEG_MspInit+0xf6>
  {
  /* USER CODE BEGIN JPEG_MspInit 0 */

  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000af0:	4b3c      	ldr	r3, [pc, #240]	@ (8000be4 <HAL_JPEG_MspInit+0x100>)
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
    handle_GPDMA1_Channel1.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
    handle_GPDMA1_Channel1.Init.Direction = DMA_PERIPH_TO_MEMORY;
    handle_GPDMA1_Channel1.Init.SrcInc = DMA_SINC_FIXED;
    handle_GPDMA1_Channel1.Init.DestInc = DMA_DINC_INCREMENTED;
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000af2:	f44f 2600 	mov.w	r6, #524288	@ 0x80000
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000af6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Instance = GPDMA1_Channel1;
 8000afa:	4c3b      	ldr	r4, [pc, #236]	@ (8000be8 <HAL_JPEG_MspInit+0x104>)
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000afc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8000b00:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000b04:	2202      	movs	r2, #2
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b06:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    handle_GPDMA1_Channel1.Init.DestDataWidth = DMA_DEST_DATAWIDTH_WORD;
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b0a:	f44f 3c00 	mov.w	ip, #131072	@ 0x20000
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_WORD;
 8000b0e:	e9c4 6205 	strd	r6, r2, [r4, #20]
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b12:	f44f 0240 	mov.w	r2, #12582912	@ 0xc00000
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b16:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8000b1a:	9301      	str	r3, [sp, #4]
    handle_GPDMA1_Channel1.Init.Priority = DMA_HIGH_PRIORITY;
 8000b1c:	e9c4 c207 	strd	ip, r2, [r4, #28]
    __HAL_RCC_JPEG_CLK_ENABLE();
 8000b20:	9b01      	ldr	r3, [sp, #4]
    handle_GPDMA1_Channel1.Init.SrcBurstLength = 8;
 8000b22:	2208      	movs	r2, #8
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
 8000b24:	237d      	movs	r3, #125	@ 0x7d
 8000b26:	4831      	ldr	r0, [pc, #196]	@ (8000bec <HAL_JPEG_MspInit+0x108>)
    handle_GPDMA1_Channel1.Init.DestBurstLength = 8;
 8000b28:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_JPEG_TX;
 8000b2c:	e9c4 0300 	strd	r0, r3, [r4]
    handle_GPDMA1_Channel1.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT0|DMA_DEST_ALLOCATED_PORT1;
 8000b30:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    handle_GPDMA1_Channel1.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
 8000b34:	2300      	movs	r3, #0
    handle_GPDMA1_Channel1.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
    handle_GPDMA1_Channel1.Init.Mode = DMA_NORMAL;
    if (HAL_DMA_Init(&handle_GPDMA1_Channel1) != HAL_OK)
 8000b36:	4620      	mov	r0, r4
    handle_GPDMA1_Channel1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8000b38:	e9c4 3302 	strd	r3, r3, [r4, #8]
    handle_GPDMA1_Channel1.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 8000b3c:	e9c4 230b 	strd	r2, r3, [r4, #44]	@ 0x2c
    handle_GPDMA1_Channel1.Init.SrcInc = DMA_SINC_FIXED;
 8000b40:	6123      	str	r3, [r4, #16]
    handle_GPDMA1_Channel1.Init.Mode = DMA_NORMAL;
 8000b42:	6363      	str	r3, [r4, #52]	@ 0x34
    if (HAL_DMA_Init(&handle_GPDMA1_Channel1) != HAL_OK)
 8000b44:	f003 fa26 	bl	8003f94 <HAL_DMA_Init>
 8000b48:	b108      	cbz	r0, 8000b4e <HAL_JPEG_MspInit+0x6a>
    {
      Error_Handler();
 8000b4a:	f7ff fe4b 	bl	80007e4 <Error_Handler>
    }

    __HAL_LINKDMA(hjpeg, hdmaout, handle_GPDMA1_Channel1);
 8000b4e:	636c      	str	r4, [r5, #52]	@ 0x34

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel1, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000b50:	2110      	movs	r1, #16
 8000b52:	4825      	ldr	r0, [pc, #148]	@ (8000be8 <HAL_JPEG_MspInit+0x104>)
    __HAL_LINKDMA(hjpeg, hdmaout, handle_GPDMA1_Channel1);
 8000b54:	65e5      	str	r5, [r4, #92]	@ 0x5c
    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel1, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000b56:	f003 fd2d 	bl	80045b4 <HAL_DMA_ConfigChannelAttributes>
 8000b5a:	b108      	cbz	r0, 8000b60 <HAL_JPEG_MspInit+0x7c>
    {
      Error_Handler();
 8000b5c:	f7ff fe42 	bl	80007e4 <Error_Handler>
    }

    /* GPDMA1_REQUEST_JPEG_RX Init */
    handle_GPDMA1_Channel0.Instance = GPDMA1_Channel0;
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b60:	237c      	movs	r3, #124	@ 0x7c
    handle_GPDMA1_Channel0.Instance = GPDMA1_Channel0;
 8000b62:	4c23      	ldr	r4, [pc, #140]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b64:	4a23      	ldr	r2, [pc, #140]	@ (8000bf4 <HAL_JPEG_MspInit+0x110>)
    handle_GPDMA1_Channel0.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
    handle_GPDMA1_Channel0.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000b66:	2600      	movs	r6, #0
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_JPEG_RX;
 8000b68:	e9c4 2300 	strd	r2, r3, [r4]
    handle_GPDMA1_Channel0.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000b6c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000b70:	e9c4 6302 	strd	r6, r3, [r4, #8]
    handle_GPDMA1_Channel0.Init.SrcInc = DMA_SINC_INCREMENTED;
 8000b74:	2308      	movs	r3, #8
    handle_GPDMA1_Channel0.Init.DestInc = DMA_DINC_FIXED;
    handle_GPDMA1_Channel0.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_BYTE;
    handle_GPDMA1_Channel0.Init.DestDataWidth = DMA_DEST_DATAWIDTH_WORD;
    handle_GPDMA1_Channel0.Init.Priority = DMA_HIGH_PRIORITY;
 8000b76:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
 8000b7a:	f44f 0240 	mov.w	r2, #12582912	@ 0xc00000
    handle_GPDMA1_Channel0.Init.DestInc = DMA_DINC_FIXED;
 8000b7e:	e9c4 3604 	strd	r3, r6, [r4, #16]
    handle_GPDMA1_Channel0.Init.SrcBurstLength = 8;
    handle_GPDMA1_Channel0.Init.DestBurstLength = 8;
 8000b82:	e9c4 3309 	strd	r3, r3, [r4, #36]	@ 0x24
    handle_GPDMA1_Channel0.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT1|DMA_DEST_ALLOCATED_PORT0;
 8000b86:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
    handle_GPDMA1_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
    handle_GPDMA1_Channel0.Init.Mode = DMA_NORMAL;
    if (HAL_DMA_Init(&handle_GPDMA1_Channel0) != HAL_OK)
 8000b8a:	4620      	mov	r0, r4
    handle_GPDMA1_Channel0.Init.Priority = DMA_HIGH_PRIORITY;
 8000b8c:	e9c4 1207 	strd	r1, r2, [r4, #28]
    handle_GPDMA1_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 8000b90:	e9c4 360b 	strd	r3, r6, [r4, #44]	@ 0x2c
    handle_GPDMA1_Channel0.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_BYTE;
 8000b94:	61a6      	str	r6, [r4, #24]
    handle_GPDMA1_Channel0.Init.Mode = DMA_NORMAL;
 8000b96:	6366      	str	r6, [r4, #52]	@ 0x34
    if (HAL_DMA_Init(&handle_GPDMA1_Channel0) != HAL_OK)
 8000b98:	f003 f9fc 	bl	8003f94 <HAL_DMA_Init>
 8000b9c:	b108      	cbz	r0, 8000ba2 <HAL_JPEG_MspInit+0xbe>
    {
      Error_Handler();
 8000b9e:	f7ff fe21 	bl	80007e4 <Error_Handler>
    }

    DataHandlingConfig.DataExchange = DMA_EXCHANGE_NONE;
    DataHandlingConfig.DataAlignment = DMA_DATA_PACK;
 8000ba2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
    if (HAL_DMAEx_ConfigDataHandling(&handle_GPDMA1_Channel0, &DataHandlingConfig) != HAL_OK)
 8000ba6:	4812      	ldr	r0, [pc, #72]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
 8000ba8:	a902      	add	r1, sp, #8
    DataHandlingConfig.DataExchange = DMA_EXCHANGE_NONE;
 8000baa:	9602      	str	r6, [sp, #8]
    DataHandlingConfig.DataAlignment = DMA_DATA_PACK;
 8000bac:	9303      	str	r3, [sp, #12]
    if (HAL_DMAEx_ConfigDataHandling(&handle_GPDMA1_Channel0, &DataHandlingConfig) != HAL_OK)
 8000bae:	f003 fe4f 	bl	8004850 <HAL_DMAEx_ConfigDataHandling>
 8000bb2:	b108      	cbz	r0, 8000bb8 <HAL_JPEG_MspInit+0xd4>
    {
      Error_Handler();
 8000bb4:	f7ff fe16 	bl	80007e4 <Error_Handler>
    }

    __HAL_LINKDMA(hjpeg, hdmain, handle_GPDMA1_Channel0);
 8000bb8:	632c      	str	r4, [r5, #48]	@ 0x30

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000bba:	2110      	movs	r1, #16
 8000bbc:	480c      	ldr	r0, [pc, #48]	@ (8000bf0 <HAL_JPEG_MspInit+0x10c>)
    __HAL_LINKDMA(hjpeg, hdmain, handle_GPDMA1_Channel0);
 8000bbe:	65e5      	str	r5, [r4, #92]	@ 0x5c
    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000bc0:	f003 fcf8 	bl	80045b4 <HAL_DMA_ConfigChannelAttributes>
 8000bc4:	b108      	cbz	r0, 8000bca <HAL_JPEG_MspInit+0xe6>
    {
      Error_Handler();
 8000bc6:	f7ff fe0d 	bl	80007e4 <Error_Handler>
    }

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 7, 0);
 8000bca:	208c      	movs	r0, #140	@ 0x8c
 8000bcc:	2200      	movs	r2, #0
 8000bce:	2107      	movs	r1, #7
 8000bd0:	f003 f8ba 	bl	8003d48 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
 8000bd4:	208c      	movs	r0, #140	@ 0x8c
 8000bd6:	f003 f8e7 	bl	8003da8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
 8000bda:	b004      	add	sp, #16
 8000bdc:	bd70      	pop	{r4, r5, r6, pc}
 8000bde:	bf00      	nop
 8000be0:	4002a000 	.word	0x4002a000
 8000be4:	46020c00 	.word	0x46020c00
 8000be8:	200003ec 	.word	0x200003ec
 8000bec:	400200d0 	.word	0x400200d0
 8000bf0:	20000374 	.word	0x20000374
 8000bf4:	40020050 	.word	0x40020050

08000bf8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bfa:	2514      	movs	r5, #20
{
 8000bfc:	4604      	mov	r4, r0
 8000bfe:	b0c3      	sub	sp, #268	@ 0x10c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c00:	462a      	mov	r2, r5
 8000c02:	2100      	movs	r1, #0
 8000c04:	eb0d 0005 	add.w	r0, sp, r5
 8000c08:	f031 fe7d 	bl	8032906 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000c0c:	22e0      	movs	r2, #224	@ 0xe0
 8000c0e:	2100      	movs	r1, #0
 8000c10:	a80a      	add	r0, sp, #40	@ 0x28
 8000c12:	f031 fe78 	bl	8032906 <memset>
  if(hltdc->Instance==LTDC)
 8000c16:	6822      	ldr	r2, [r4, #0]
 8000c18:	4b57      	ldr	r3, [pc, #348]	@ (8000d78 <HAL_LTDC_MspInit+0x180>)
 8000c1a:	429a      	cmp	r2, r3
 8000c1c:	f040 80a9 	bne.w	8000d72 <HAL_LTDC_MspInit+0x17a>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000c20:	2200      	movs	r2, #0
 8000c22:	2302      	movs	r3, #2
 8000c24:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
    PeriphClkInit.LtdcClockSelection = RCC_LTDCCLKSOURCE_PLL3;
    PeriphClkInit.PLL3.PLL3Source = RCC_PLLSOURCE_HSE;
    PeriphClkInit.PLL3.PLL3M = 4;
 8000c28:	2304      	movs	r3, #4
 8000c2a:	2203      	movs	r2, #3
    PeriphClkInit.PLL3.PLL3N = 125;
    PeriphClkInit.PLL3.PLL3P = 8;
 8000c2c:	217d      	movs	r1, #125	@ 0x7d
    PeriphClkInit.PLL3.PLL3M = 4;
 8000c2e:	e9cd 2315 	strd	r2, r3, [sp, #84]	@ 0x54
    PeriphClkInit.PLL3.PLL3P = 8;
 8000c32:	2308      	movs	r3, #8
 8000c34:	e9cd 1317 	strd	r1, r3, [sp, #92]	@ 0x5c
    PeriphClkInit.PLL3.PLL3Q = 2;
 8000c38:	2302      	movs	r3, #2
    PeriphClkInit.PLL3.PLL3R = 20;
 8000c3a:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
    PeriphClkInit.PLL3.PLL3RGE = RCC_PLLVCIRANGE_0;
    PeriphClkInit.PLL3.PLL3FRACN = 0;
    PeriphClkInit.PLL3.PLL3ClockOut = RCC_PLL3_DIVR;
 8000c3e:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000c42:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInit.PLL3.PLL3ClockOut = RCC_PLL3_DIVR;
 8000c44:	931d      	str	r3, [sp, #116]	@ 0x74
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000c46:	f006 fcc3 	bl	80075d0 <HAL_RCCEx_PeriphCLKConfig>
 8000c4a:	b108      	cbz	r0, 8000c50 <HAL_LTDC_MspInit+0x58>
    {
      Error_Handler();
 8000c4c:	f7ff fdca 	bl	80007e4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c50:	4b4a      	ldr	r3, [pc, #296]	@ (8000d7c <HAL_LTDC_MspInit+0x184>)
    PB9     ------> LTDC_B0
    PE0     ------> LTDC_HSYNC
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c52:	2400      	movs	r4, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c54:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c58:	2502      	movs	r5, #2
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c5a:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8000c5e:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 8000c62:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000c66:	2608      	movs	r6, #8
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c68:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8000c6c:	9200      	str	r2, [sp, #0]
 8000c6e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c70:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c74:	4842      	ldr	r0, [pc, #264]	@ (8000d80 <HAL_LTDC_MspInit+0x188>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c76:	f042 0202 	orr.w	r2, r2, #2
 8000c7a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000c7e:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c82:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c84:	f002 0202 	and.w	r2, r2, #2
 8000c88:	9201      	str	r2, [sp, #4]
 8000c8a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000c8c:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000c90:	2707      	movs	r7, #7
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000c92:	f042 0210 	orr.w	r2, r2, #16
 8000c96:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000c9a:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000c9e:	f002 0210 	and.w	r2, r2, #16
 8000ca2:	9202      	str	r2, [sp, #8]
 8000ca4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000ca6:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000caa:	f042 0208 	orr.w	r2, r2, #8
 8000cae:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000cb2:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000cb6:	f002 0208 	and.w	r2, r2, #8
 8000cba:	9203      	str	r2, [sp, #12]
 8000cbc:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cbe:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8000cc2:	f042 0204 	orr.w	r2, r2, #4
 8000cc6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8000cca:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cce:	e9cd 4407 	strd	r4, r4, [sp, #28]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cd2:	f003 0304 	and.w	r3, r3, #4
 8000cd6:	9304      	str	r3, [sp, #16]
 8000cd8:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cda:	2304      	movs	r3, #4
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000cdc:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cde:	e9cd 3505 	strd	r3, r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ce2:	f003 fdd5 	bl	8004890 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8000ce6:	f64f 7381 	movw	r3, #65409	@ 0xff81
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000cea:	4826      	ldr	r0, [pc, #152]	@ (8000d84 <HAL_LTDC_MspInit+0x18c>)
 8000cec:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cee:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cf2:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000cf6:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000cf8:	f003 fdca 	bl	8004890 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 8000cfc:	f64f 734b 	movw	r3, #65355	@ 0xff4b
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d00:	4821      	ldr	r0, [pc, #132]	@ (8000d88 <HAL_LTDC_MspInit+0x190>)
 8000d02:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d04:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d08:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000d0c:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d0e:	f003 fdbf 	bl	8004890 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8000d12:	23c0      	movs	r3, #192	@ 0xc0
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d14:	481d      	ldr	r0, [pc, #116]	@ (8000d8c <HAL_LTDC_MspInit+0x194>)
 8000d16:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d18:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d1c:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000d20:	9709      	str	r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d22:	f003 fdb5 	bl	8004890 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8000d26:	f44f 7340 	mov.w	r3, #768	@ 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d2a:	4818      	ldr	r0, [pc, #96]	@ (8000d8c <HAL_LTDC_MspInit+0x194>)
 8000d2c:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d2e:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d32:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF8_LTDC;
 8000d36:	9609      	str	r6, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d38:	f003 fdaa 	bl	8004890 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8000d3c:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d40:	480f      	ldr	r0, [pc, #60]	@ (8000d80 <HAL_LTDC_MspInit+0x188>)
 8000d42:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d44:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d48:	e9cd 4407 	strd	r4, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF7_LTDC;
 8000d4c:	9709      	str	r7, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d4e:	f003 fd9f 	bl	8004890 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000d52:	4622      	mov	r2, r4
 8000d54:	2105      	movs	r1, #5
 8000d56:	2087      	movs	r0, #135	@ 0x87
 8000d58:	f002 fff6 	bl	8003d48 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000d5c:	2087      	movs	r0, #135	@ 0x87
 8000d5e:	f003 f823 	bl	8003da8 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(LTDC_ER_IRQn, 5, 0);
 8000d62:	2088      	movs	r0, #136	@ 0x88
 8000d64:	4622      	mov	r2, r4
 8000d66:	2105      	movs	r1, #5
 8000d68:	f002 ffee 	bl	8003d48 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_ER_IRQn);
 8000d6c:	2088      	movs	r0, #136	@ 0x88
 8000d6e:	f003 f81b 	bl	8003da8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000d72:	b043      	add	sp, #268	@ 0x10c
 8000d74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d76:	bf00      	nop
 8000d78:	40016800 	.word	0x40016800
 8000d7c:	46020c00 	.word	0x46020c00
 8000d80:	42020400 	.word	0x42020400
 8000d84:	42021000 	.word	0x42021000
 8000d88:	42020c00 	.word	0x42020c00
 8000d8c:	42020800 	.word	0x42020800

08000d90 <HAL_InitTick>:
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d90:	4b1f      	ldr	r3, [pc, #124]	@ (8000e10 <HAL_InitTick+0x80>)
{
 8000d92:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d94:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
{
 8000d98:	b088      	sub	sp, #32
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000d9a:	f042 0210 	orr.w	r2, r2, #16
 8000d9e:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
 8000da2:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000da6:	4669      	mov	r1, sp
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000da8:	f003 0310 	and.w	r3, r3, #16
 8000dac:	9301      	str	r3, [sp, #4]
{
 8000dae:	4606      	mov	r6, r0
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000db0:	a802      	add	r0, sp, #8

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8000db2:	4d18      	ldr	r5, [pc, #96]	@ (8000e14 <HAL_InitTick+0x84>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000db4:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000db6:	f006 fb11 	bl	80073dc <HAL_RCC_GetClockConfig>
  uwTimclock = HAL_RCC_GetPCLK1Freq();
 8000dba:	f006 faff 	bl	80073bc <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8000dbe:	4b16      	ldr	r3, [pc, #88]	@ (8000e18 <HAL_InitTick+0x88>)
 8000dc0:	602b      	str	r3, [r5, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8000dc2:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8000dc6:	60eb      	str	r3, [r5, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000dc8:	4b14      	ldr	r3, [pc, #80]	@ (8000e1c <HAL_InitTick+0x8c>)
 8000dca:	fbb0 f0f3 	udiv	r0, r0, r3
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8000dce:	2300      	movs	r3, #0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000dd0:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8000dd2:	6068      	str	r0, [r5, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  status = HAL_TIM_Base_Init(&htim6);
 8000dd4:	4628      	mov	r0, r5
  htim6.Init.ClockDivision = 0;
 8000dd6:	612b      	str	r3, [r5, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000dd8:	60ab      	str	r3, [r5, #8]
  status = HAL_TIM_Base_Init(&htim6);
 8000dda:	f007 f987 	bl	80080ec <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8000dde:	4604      	mov	r4, r0
 8000de0:	b968      	cbnz	r0, 8000dfe <HAL_InitTick+0x6e>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8000de2:	4628      	mov	r0, r5
 8000de4:	f006 ff9c 	bl	8007d20 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8000de8:	4604      	mov	r4, r0
 8000dea:	b940      	cbnz	r0, 8000dfe <HAL_InitTick+0x6e>
    {
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000dec:	2e0f      	cmp	r6, #15
 8000dee:	d80c      	bhi.n	8000e0a <HAL_InitTick+0x7a>
      {
        /* Enable the TIM6 global Interrupt */
        HAL_NVIC_SetPriority(TIM6_IRQn, TickPriority, 0U);
 8000df0:	4602      	mov	r2, r0
 8000df2:	4631      	mov	r1, r6
 8000df4:	2031      	movs	r0, #49	@ 0x31
 8000df6:	f002 ffa7 	bl	8003d48 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8000dfa:	4b09      	ldr	r3, [pc, #36]	@ (8000e20 <HAL_InitTick+0x90>)
 8000dfc:	601e      	str	r6, [r3, #0]
      }
    }
  }

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_IRQn);
 8000dfe:	2031      	movs	r0, #49	@ 0x31
 8000e00:	f002 ffd2 	bl	8003da8 <HAL_NVIC_EnableIRQ>

 /* Return function status */
  return status;
}
 8000e04:	4620      	mov	r0, r4
 8000e06:	b008      	add	sp, #32
 8000e08:	bd70      	pop	{r4, r5, r6, pc}
        status = HAL_ERROR;
 8000e0a:	2401      	movs	r4, #1
 8000e0c:	e7f7      	b.n	8000dfe <HAL_InitTick+0x6e>
 8000e0e:	bf00      	nop
 8000e10:	46020c00 	.word	0x46020c00
 8000e14:	20000660 	.word	0x20000660
 8000e18:	40001000 	.word	0x40001000
 8000e1c:	000f4240 	.word	0x000f4240
 8000e20:	20000054 	.word	0x20000054

08000e24 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000e24:	e7fe      	b.n	8000e24 <NMI_Handler>

08000e26 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000e26:	e7fe      	b.n	8000e26 <HardFault_Handler>

08000e28 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000e28:	e7fe      	b.n	8000e28 <MemManage_Handler>

08000e2a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000e2a:	e7fe      	b.n	8000e2a <BusFault_Handler>

08000e2c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000e2c:	e7fe      	b.n	8000e2c <UsageFault_Handler>

08000e2e <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000e2e:	4770      	bx	lr

08000e30 <EXTI5_IRQHandler>:
void EXTI5_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI5_IRQn 0 */

  /* USER CODE END EXTI5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TP_IRQ_Pin);
 8000e30:	2020      	movs	r0, #32
 8000e32:	f003 be51 	b.w	8004ad8 <HAL_GPIO_EXTI_IRQHandler>
	...

08000e38 <GPDMA1_Channel0_IRQHandler>:
void GPDMA1_Channel0_IRQHandler(void)
{
  /* USER CODE BEGIN GPDMA1_Channel0_IRQn 0 */

  /* USER CODE END GPDMA1_Channel0_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA1_Channel0);
 8000e38:	4801      	ldr	r0, [pc, #4]	@ (8000e40 <GPDMA1_Channel0_IRQHandler+0x8>)
 8000e3a:	f003 bafa 	b.w	8004432 <HAL_DMA_IRQHandler>
 8000e3e:	bf00      	nop
 8000e40:	20000374 	.word	0x20000374

08000e44 <GPDMA1_Channel1_IRQHandler>:
void GPDMA1_Channel1_IRQHandler(void)
{
  /* USER CODE BEGIN GPDMA1_Channel1_IRQn 0 */

  /* USER CODE END GPDMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA1_Channel1);
 8000e44:	4801      	ldr	r0, [pc, #4]	@ (8000e4c <GPDMA1_Channel1_IRQHandler+0x8>)
 8000e46:	f003 baf4 	b.w	8004432 <HAL_DMA_IRQHandler>
 8000e4a:	bf00      	nop
 8000e4c:	200003ec 	.word	0x200003ec

08000e50 <TIM6_IRQHandler>:
void TIM6_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_IRQn 0 */

  /* USER CODE END TIM6_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8000e50:	4801      	ldr	r0, [pc, #4]	@ (8000e58 <TIM6_IRQHandler+0x8>)
 8000e52:	f006 bfc3 	b.w	8007ddc <HAL_TIM_IRQHandler>
 8000e56:	bf00      	nop
 8000e58:	20000660 	.word	0x20000660

08000e5c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8000e5c:	4801      	ldr	r0, [pc, #4]	@ (8000e64 <DMA2D_IRQHandler+0x8>)
 8000e5e:	f003 bc06 	b.w	800466e <HAL_DMA2D_IRQHandler>
 8000e62:	bf00      	nop
 8000e64:	2000057c 	.word	0x2000057c

08000e68 <HSPI1_IRQHandler>:
void HSPI1_IRQHandler(void)
{
  /* USER CODE BEGIN HSPI1_IRQn 0 */

  /* USER CODE END HSPI1_IRQn 0 */
  HAL_XSPI_IRQHandler(&hxspi1);
 8000e68:	4801      	ldr	r0, [pc, #4]	@ (8000e70 <HSPI1_IRQHandler+0x8>)
 8000e6a:	f007 bce9 	b.w	8008840 <HAL_XSPI_IRQHandler>
 8000e6e:	bf00      	nop
 8000e70:	20000510 	.word	0x20000510

08000e74 <GPU2D_IRQHandler>:
void GPU2D_IRQHandler(void)
{
  /* USER CODE BEGIN GPU2D_IRQn 0 */

  /* USER CODE END GPU2D_IRQn 0 */
  HAL_GPU2D_IRQHandler(&hgpu2d);
 8000e74:	4801      	ldr	r0, [pc, #4]	@ (8000e7c <GPU2D_IRQHandler+0x8>)
 8000e76:	f003 be5e 	b.w	8004b36 <HAL_GPU2D_IRQHandler>
 8000e7a:	bf00      	nop
 8000e7c:	20000570 	.word	0x20000570

08000e80 <GPU2D_ER_IRQHandler>:
void GPU2D_ER_IRQHandler(void)
{
  /* USER CODE BEGIN GPU2D_ER_IRQn 0 */

  /* USER CODE END GPU2D_ER_IRQn 0 */
  HAL_GPU2D_ER_IRQHandler(&hgpu2d);
 8000e80:	4801      	ldr	r0, [pc, #4]	@ (8000e88 <GPU2D_ER_IRQHandler+0x8>)
 8000e82:	f003 be6b 	b.w	8004b5c <HAL_GPU2D_ER_IRQHandler>
 8000e86:	bf00      	nop
 8000e88:	20000570 	.word	0x20000570

08000e8c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8000e8c:	4801      	ldr	r0, [pc, #4]	@ (8000e94 <LTDC_IRQHandler+0x8>)
 8000e8e:	f005 bac7 	b.w	8006420 <HAL_LTDC_IRQHandler>
 8000e92:	bf00      	nop
 8000e94:	200002cc 	.word	0x200002cc

08000e98 <LTDC_ER_IRQHandler>:
}

/**
  * @brief This function handles LCD-TFT Error interrupt.
  */
void LTDC_ER_IRQHandler(void)
 8000e98:	f7ff bff8 	b.w	8000e8c <LTDC_IRQHandler>

08000e9c <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
 8000e9c:	4801      	ldr	r0, [pc, #4]	@ (8000ea4 <JPEG_IRQHandler+0x8>)
 8000e9e:	f005 b972 	b.w	8006186 <HAL_JPEG_IRQHandler>
 8000ea2:	bf00      	nop
 8000ea4:	20000464 	.word	0x20000464

08000ea8 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 8000ea8:	2001      	movs	r0, #1
 8000eaa:	4770      	bx	lr

08000eac <_kill>:

int _kill(int pid, int sig)
{
 8000eac:	b508      	push	{r3, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000eae:	f031 fddf 	bl	8032a70 <__errno>
 8000eb2:	2316      	movs	r3, #22
 8000eb4:	6003      	str	r3, [r0, #0]
  return -1;
}
 8000eb6:	f04f 30ff 	mov.w	r0, #4294967295
 8000eba:	bd08      	pop	{r3, pc}

08000ebc <_exit>:

void _exit (int status)
{
 8000ebc:	b508      	push	{r3, lr}
  errno = EINVAL;
 8000ebe:	f031 fdd7 	bl	8032a70 <__errno>
 8000ec2:	2316      	movs	r3, #22
 8000ec4:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 8000ec6:	e7fe      	b.n	8000ec6 <_exit+0xa>

08000ec8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000ec8:	b570      	push	{r4, r5, r6, lr}
 8000eca:	460d      	mov	r5, r1
 8000ecc:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ece:	460e      	mov	r6, r1
 8000ed0:	1b73      	subs	r3, r6, r5
 8000ed2:	429c      	cmp	r4, r3
 8000ed4:	dc01      	bgt.n	8000eda <_read+0x12>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 8000ed6:	4620      	mov	r0, r4
 8000ed8:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 8000eda:	f3af 8000 	nop.w
 8000ede:	f806 0b01 	strb.w	r0, [r6], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ee2:	e7f5      	b.n	8000ed0 <_read+0x8>

08000ee4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000ee4:	b570      	push	{r4, r5, r6, lr}
 8000ee6:	460d      	mov	r5, r1
 8000ee8:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000eea:	460e      	mov	r6, r1
 8000eec:	1b73      	subs	r3, r6, r5
 8000eee:	429c      	cmp	r4, r3
 8000ef0:	dc01      	bgt.n	8000ef6 <_write+0x12>
  {
    __io_putchar(*ptr++);
  }
  return len;
}
 8000ef2:	4620      	mov	r0, r4
 8000ef4:	bd70      	pop	{r4, r5, r6, pc}
    __io_putchar(*ptr++);
 8000ef6:	f816 0b01 	ldrb.w	r0, [r6], #1
 8000efa:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000efe:	e7f5      	b.n	8000eec <_write+0x8>

08000f00 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8000f00:	f04f 30ff 	mov.w	r0, #4294967295
 8000f04:	4770      	bx	lr

08000f06 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8000f06:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  return 0;
}
 8000f0a:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 8000f0c:	604b      	str	r3, [r1, #4]
}
 8000f0e:	4770      	bx	lr

08000f10 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8000f10:	2001      	movs	r0, #1
 8000f12:	4770      	bx	lr

08000f14 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8000f14:	2000      	movs	r0, #0
 8000f16:	4770      	bx	lr

08000f18 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000f18:	4a0b      	ldr	r2, [pc, #44]	@ (8000f48 <_sbrk+0x30>)
{
 8000f1a:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 8000f1c:	6811      	ldr	r1, [r2, #0]
{
 8000f1e:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8000f20:	b909      	cbnz	r1, 8000f26 <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 8000f22:	490a      	ldr	r1, [pc, #40]	@ (8000f4c <_sbrk+0x34>)
 8000f24:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000f26:	6810      	ldr	r0, [r2, #0]
 8000f28:	4909      	ldr	r1, [pc, #36]	@ (8000f50 <_sbrk+0x38>)
 8000f2a:	4c0a      	ldr	r4, [pc, #40]	@ (8000f54 <_sbrk+0x3c>)
 8000f2c:	4403      	add	r3, r0
 8000f2e:	1b09      	subs	r1, r1, r4
 8000f30:	428b      	cmp	r3, r1
 8000f32:	d906      	bls.n	8000f42 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 8000f34:	f031 fd9c 	bl	8032a70 <__errno>
 8000f38:	230c      	movs	r3, #12
 8000f3a:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8000f3c:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8000f40:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8000f42:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 8000f44:	e7fc      	b.n	8000f40 <_sbrk+0x28>
 8000f46:	bf00      	nop
 8000f48:	200006ac 	.word	0x200006ac
 8000f4c:	20083728 	.word	0x20083728
 8000f50:	202f0000 	.word	0x202f0000
 8000f54:	00001000 	.word	0x00001000

08000f58 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* set stack pointer */
 8000f58:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000f90 <LoopForever+0x2>
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000f5c:	f002 fe6a 	bl	8003c34 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8000f60:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8000f62:	e003      	b.n	8000f6c <LoopCopyDataInit>

08000f64 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8000f64:	4b0b      	ldr	r3, [pc, #44]	@ (8000f94 <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 8000f66:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 8000f68:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 8000f6a:	3104      	adds	r1, #4

08000f6c <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8000f6c:	480a      	ldr	r0, [pc, #40]	@ (8000f98 <LoopForever+0xa>)
	ldr	r3, =_edata
 8000f6e:	4b0b      	ldr	r3, [pc, #44]	@ (8000f9c <LoopForever+0xe>)
	adds	r2, r0, r1
 8000f70:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8000f72:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8000f74:	d3f6      	bcc.n	8000f64 <CopyDataInit>
	ldr	r2, =_sbss
 8000f76:	4a0a      	ldr	r2, [pc, #40]	@ (8000fa0 <LoopForever+0x12>)
	b	LoopFillZerobss
 8000f78:	e002      	b.n	8000f80 <LoopFillZerobss>

08000f7a <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 8000f7a:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8000f7c:	f842 3b04 	str.w	r3, [r2], #4

08000f80 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8000f80:	4b08      	ldr	r3, [pc, #32]	@ (8000fa4 <LoopForever+0x16>)
	cmp	r2, r3
 8000f82:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8000f84:	d3f9      	bcc.n	8000f7a <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8000f86:	f031 fd79 	bl	8032a7c <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8000f8a:	f7ff f9fd 	bl	8000388 <main>

08000f8e <LoopForever>:

LoopForever:
    b LoopForever
 8000f8e:	e7fe      	b.n	8000f8e <LoopForever>
  ldr   sp, =_estack    /* set stack pointer */
 8000f90:	202f0000 	.word	0x202f0000
	ldr	r3, =_sidata
 8000f94:	080388f0 	.word	0x080388f0
	ldr	r0, =_sdata
 8000f98:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8000f9c:	200002a8 	.word	0x200002a8
	ldr	r2, =_sbss
 8000fa0:	200002a8 	.word	0x200002a8
	ldr	r3, = _ebss
 8000fa4:	20083724 	.word	0x20083724

08000fa8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8000fa8:	e7fe      	b.n	8000fa8 <ADC1_2_IRQHandler>

08000faa <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000faa:	4770      	bx	lr

08000fac <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000fac:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8000fae:	f001 fb6f 	bl	8002690 <touchgfx_components_init>
    touchgfx_init();
}
 8000fb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8000fb6:	f001 baf1 	b.w	800259c <touchgfx_init>

08000fba <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8000fba:	f001 bb79 	b.w	80026b0 <touchgfx_taskEntry>

08000fbe <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000fbe:	6840      	ldr	r0, [r0, #4]
    }
 8000fc0:	4770      	bx	lr

08000fc2 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000fc2:	6041      	str	r1, [r0, #4]
    }
 8000fc4:	4770      	bx	lr
	...

08000fc8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000fc8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8000fcc:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 8000fd0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000fd4:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 8000fd8:	4b05      	ldr	r3, [pc, #20]	@ (8000ff0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 8000fda:	4a06      	ldr	r2, [pc, #24]	@ (8000ff4 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 8000fdc:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
 8000fe0:	430a      	orrs	r2, r1
 8000fe2:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000fe6:	681a      	ldr	r2, [r3, #0]
 8000fe8:	f042 0201 	orr.w	r2, r2, #1
 8000fec:	601a      	str	r2, [r3, #0]
}
 8000fee:	4770      	bx	lr
 8000ff0:	e0001000 	.word	0xe0001000
 8000ff4:	c5acce55 	.word	0xc5acce55

08000ff8 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000ff8:	1a52      	subs	r2, r2, r1
 8000ffa:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 8000ffe:	fbb2 f0f3 	udiv	r0, r2, r3
 8001002:	4770      	bx	lr

08001004 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8001004:	4b01      	ldr	r3, [pc, #4]	@ (800100c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8001006:	6858      	ldr	r0, [r3, #4]
}
 8001008:	4770      	bx	lr
 800100a:	bf00      	nop
 800100c:	e0001000 	.word	0xe0001000

08001010 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8001010:	4770      	bx	lr

08001012 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8001012:	b510      	push	{r4, lr}
 8001014:	4604      	mov	r4, r0
 8001016:	210c      	movs	r1, #12
 8001018:	f030 f895 	bl	8031146 <_ZdlPvj>
 800101c:	4620      	mov	r0, r4
 800101e:	bd10      	pop	{r4, pc}

08001020 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001020:	6803      	ldr	r3, [r0, #0]
{
 8001022:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001024:	691b      	ldr	r3, [r3, #16]
{
 8001026:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8001028:	b131      	cbz	r1, 8001038 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800102a:	4798      	blx	r3
 800102c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800102e:	6863      	ldr	r3, [r4, #4]
 8001030:	1a9b      	subs	r3, r3, r2
 8001032:	4403      	add	r3, r0
 8001034:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8001036:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8001038:	4798      	blx	r3
 800103a:	60a0      	str	r0, [r4, #8]
}
 800103c:	e7fb      	b.n	8001036 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800103e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800103e:	4770      	bx	lr

08001040 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8001040:	4770      	bx	lr

08001042 <_ZN8touchgfx10KeySampler4initEv>:

using namespace touchgfx;

void KeySampler::init()
{
}
 8001042:	4770      	bx	lr

08001044 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8001044:	b510      	push	{r4, lr}
    bool buttonPressed = false;
    if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port, USER_BUTTON_Pin) != GPIO_PIN_RESET)
 8001046:	4805      	ldr	r0, [pc, #20]	@ (800105c <_ZN8touchgfx10KeySampler6sampleERh+0x18>)
{
 8001048:	460c      	mov	r4, r1
    if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port, USER_BUTTON_Pin) != GPIO_PIN_RESET)
 800104a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800104e:	f003 fd2d 	bl	8004aac <HAL_GPIO_ReadPin>
 8001052:	b108      	cbz	r0, 8001058 <_ZN8touchgfx10KeySampler6sampleERh+0x14>
    {
        buttonPressed = true;
        key = 1; // This is the "hardware button key" reffered in the TouchGFX Designer Interactions
 8001054:	2001      	movs	r0, #1
 8001056:	7020      	strb	r0, [r4, #0]
    }
    return buttonPressed;
}
 8001058:	bd10      	pop	{r4, pc}
 800105a:	bf00      	nop
 800105c:	42020800 	.word	0x42020800

08001060 <_ZN8touchgfx10KeySamplerD0Ev>:
 8001060:	b510      	push	{r4, lr}
 8001062:	4604      	mov	r4, r0
 8001064:	2108      	movs	r1, #8
 8001066:	f030 f86e 	bl	8031146 <_ZdlPvj>
 800106a:	4620      	mov	r0, r4
 800106c:	bd10      	pop	{r4, pc}

0800106e <_ZN20STM32TouchController4initEv>:
}

void STM32TouchController::init()
{
    // No init needed
}
 800106e:	4770      	bx	lr

08001070 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001070:	4770      	bx	lr

08001072 <_ZN20STM32TouchControllerD0Ev>:
 8001072:	b510      	push	{r4, lr}
 8001074:	4604      	mov	r4, r0
 8001076:	2104      	movs	r1, #4
 8001078:	f030 f865 	bl	8031146 <_ZdlPvj>
 800107c:	4620      	mov	r0, r4
 800107e:	bd10      	pop	{r4, pc}

08001080 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8001080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001084:	4615      	mov	r5, r2
    uint8_t touches = 0;
    uint8_t buf[6];
    const uint16_t STATUS_REG = 0x814E;
    const uint16_t TOUCH_POS_REG = 0x8150;
    uint8_t ZERO = 0;
 8001086:	f04f 0a00 	mov.w	sl, #0
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800108a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800108e:	4b28      	ldr	r3, [pc, #160]	@ (8001130 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb0>)
{
 8001090:	b089      	sub	sp, #36	@ 0x24
    uint8_t ZERO = 0;
 8001092:	f88d a017 	strb.w	sl, [sp, #23]
{
 8001096:	460e      	mov	r6, r1
 8001098:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
  __ASM volatile ("dsb 0xF":::"memory");
 800109c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010a0:	f3bf 8f6f 	isb	sy

    NVIC_DisableIRQ(EXTI5_IRQn);
    if (doSampleTouch)
 80010a4:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 8001138 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb8>
 80010a8:	f899 3000 	ldrb.w	r3, [r9]
 80010ac:	b30b      	cbz	r3, 80010f2 <_ZN20STM32TouchController11sampleTouchERlS0_+0x72>
    {
        HAL_I2C_Mem_Read(&hi2c2, 0xBA, STATUS_REG, 2, buf, 1, HAL_MAX_DELAY);
 80010ae:	f04f 0b01 	mov.w	fp, #1
 80010b2:	f04f 38ff 	mov.w	r8, #4294967295
 80010b6:	af06      	add	r7, sp, #24
 80010b8:	2302      	movs	r3, #2
 80010ba:	f248 124e 	movw	r2, #33102	@ 0x814e
 80010be:	21ba      	movs	r1, #186	@ 0xba
 80010c0:	e9cd b801 	strd	fp, r8, [sp, #4]
 80010c4:	481b      	ldr	r0, [pc, #108]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
 80010c6:	9700      	str	r7, [sp, #0]
 80010c8:	f003 ffae 	bl	8005028 <HAL_I2C_Mem_Read>
        touches = (0x0F & buf[0]);
 80010cc:	f89d 4018 	ldrb.w	r4, [sp, #24]

        HAL_I2C_Mem_Write(&hi2c2, 0xBA, STATUS_REG, 2, &ZERO, 1, HAL_MAX_DELAY);
 80010d0:	f10d 0317 	add.w	r3, sp, #23
 80010d4:	9300      	str	r3, [sp, #0]
 80010d6:	f248 124e 	movw	r2, #33102	@ 0x814e
 80010da:	2302      	movs	r3, #2
 80010dc:	21ba      	movs	r1, #186	@ 0xba
 80010de:	e9cd b801 	strd	fp, r8, [sp, #4]
 80010e2:	4814      	ldr	r0, [pc, #80]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
        touches = (0x0F & buf[0]);
 80010e4:	f004 040f 	and.w	r4, r4, #15
        HAL_I2C_Mem_Write(&hi2c2, 0xBA, STATUS_REG, 2, &ZERO, 1, HAL_MAX_DELAY);
 80010e8:	f003 fec4 	bl	8004e74 <HAL_I2C_Mem_Write>

        doSampleTouch = false;
 80010ec:	f889 a000 	strb.w	sl, [r9]

        if (touches > 0)
 80010f0:	b954      	cbnz	r4, 8001108 <_ZN20STM32TouchController11sampleTouchERlS0_+0x88>
    uint8_t touches = 0;
 80010f2:	2400      	movs	r4, #0
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010f4:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80010f8:	4b0d      	ldr	r3, [pc, #52]	@ (8001130 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb0>)
 80010fa:	601a      	str	r2, [r3, #0]
        }
    }
    NVIC_EnableIRQ(EXTI5_IRQn);

    return (touches > 0);
}
 80010fc:	1e20      	subs	r0, r4, #0
 80010fe:	bf18      	it	ne
 8001100:	2001      	movne	r0, #1
 8001102:	b009      	add	sp, #36	@ 0x24
 8001104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            HAL_I2C_Mem_Read(&hi2c2, 0xBA, TOUCH_POS_REG, 2, buf, 4, HAL_MAX_DELAY);
 8001108:	2304      	movs	r3, #4
 800110a:	f248 1250 	movw	r2, #33104	@ 0x8150
 800110e:	e9cd 7300 	strd	r7, r3, [sp]
 8001112:	21ba      	movs	r1, #186	@ 0xba
 8001114:	2302      	movs	r3, #2
 8001116:	4807      	ldr	r0, [pc, #28]	@ (8001134 <_ZN20STM32TouchController11sampleTouchERlS0_+0xb4>)
 8001118:	f8cd 8008 	str.w	r8, [sp, #8]
 800111c:	f003 ff84 	bl	8005028 <HAL_I2C_Mem_Read>
            x = buf[0] + (buf[1] << 8);
 8001120:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8001124:	6033      	str	r3, [r6, #0]
            y = buf[2] + (buf[3] << 8);
 8001126:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 800112a:	602b      	str	r3, [r5, #0]
 800112c:	e7e2      	b.n	80010f4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x74>
 800112e:	bf00      	nop
 8001130:	e000e100 	.word	0xe000e100
 8001134:	200004bc 	.word	0x200004bc
 8001138:	200006b0 	.word	0x200006b0

0800113c <HAL_GPIO_EXTI_Falling_Callback>:
        if (GPIO_Pin == TP_IRQ_Pin)
 800113c:	2820      	cmp	r0, #32
            doSampleTouch = true;
 800113e:	bf02      	ittt	eq
 8001140:	2201      	moveq	r2, #1
 8001142:	4b01      	ldreq	r3, [pc, #4]	@ (8001148 <HAL_GPIO_EXTI_Falling_Callback+0xc>)
 8001144:	701a      	strbeq	r2, [r3, #0]
    }
 8001146:	4770      	bx	lr
 8001148:	200006b0 	.word	0x200006b0

0800114c <_ZN8touchgfx4GPIO4initEv>:
 * Perform configuration of IO pins.
 */
void GPIO::init()
{

}
 800114c:	4770      	bx	lr
	...

08001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001150:	2803      	cmp	r0, #3
 8001152:	d814      	bhi.n	800117e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2e>
 8001154:	e8df f000 	tbb	[pc, r0]
 8001158:	0f0b0702 	.word	0x0f0b0702
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
 800115c:	2201      	movs	r2, #1
 800115e:	4611      	mov	r1, r2
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_SET);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
 8001160:	4807      	ldr	r0, [pc, #28]	@ (8001180 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8001162:	f003 bca9 	b.w	8004ab8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_SET);
 8001166:	2201      	movs	r2, #1
 8001168:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800116c:	e7f8      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_SET);
 800116e:	2201      	movs	r2, #1
 8001170:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001174:	e7f4      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
 8001176:	2201      	movs	r2, #1
 8001178:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800117c:	e7f0      	b.n	8001160 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 800117e:	4770      	bx	lr
 8001180:	42020800 	.word	0x42020800

08001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001184:	2803      	cmp	r0, #3
 8001186:	d814      	bhi.n	80011b2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2e>
 8001188:	e8df f000 	tbb	[pc, r0]
 800118c:	0f0b0702 	.word	0x0f0b0702
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8001190:	2200      	movs	r2, #0
 8001192:	2101      	movs	r1, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001194:	4807      	ldr	r0, [pc, #28]	@ (80011b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8001196:	f003 bc8f 	b.w	8004ab8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 800119a:	2200      	movs	r2, #0
 800119c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011a0:	e7f8      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
 80011a2:	2200      	movs	r2, #0
 80011a4:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80011a8:	e7f4      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80011aa:	2200      	movs	r2, #0
 80011ac:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80011b0:	e7f0      	b.n	8001194 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 80011b2:	4770      	bx	lr
 80011b4:	42020800 	.word	0x42020800

080011b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80011b8:	2803      	cmp	r0, #3
 80011ba:	d810      	bhi.n	80011de <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x26>
 80011bc:	e8df f000 	tbb	[pc, r0]
 80011c0:	0c090602 	.word	0x0c090602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80011c4:	2101      	movs	r1, #1
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80011c6:	4806      	ldr	r0, [pc, #24]	@ (80011e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
 80011c8:	f003 bc7b 	b.w	8004ac2 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80011cc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80011d0:	e7f9      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80011d2:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80011d6:	e7f6      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80011d8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80011dc:	e7f3      	b.n	80011c6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 80011de:	4770      	bx	lr
 80011e0:	42020800 	.word	0x42020800

080011e4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80011e4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80011e6:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 80011ea:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 80011ee:	4770      	bx	lr

080011f0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80011f0:	2000      	movs	r0, #0
 80011f2:	4770      	bx	lr

080011f4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80011f4:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80011f6:	3900      	subs	r1, #0
 80011f8:	bf18      	it	ne
 80011fa:	2101      	movne	r1, #1
 80011fc:	4b01      	ldr	r3, [pc, #4]	@ (8001204 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 80011fe:	7019      	strb	r1, [r3, #0]
    }
 8001200:	4770      	bx	lr
 8001202:	bf00      	nop
 8001204:	20082f07 	.word	0x20082f07

08001208 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001208:	2000      	movs	r0, #0
 800120a:	4770      	bx	lr

0800120c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800120c:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800120e:	b10b      	cbz	r3, 8001214 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001210:	4608      	mov	r0, r1
 8001212:	4718      	bx	r3
        }
    }
 8001214:	4770      	bx	lr

08001216 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001216:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800121a:	4770      	bx	lr

0800121c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800121c:	6840      	ldr	r0, [r0, #4]
 800121e:	6803      	ldr	r3, [r0, #0]
 8001220:	699b      	ldr	r3, [r3, #24]
 8001222:	4718      	bx	r3

08001224 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001224:	4770      	bx	lr

08001226 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001226:	4770      	bx	lr

08001228 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001228:	4770      	bx	lr
	...

0800122c <_ZN11TouchGFXHAL10initializeEv>:

KeySampler btnctrl;


void TouchGFXHAL::initialize()
{
 800122c:	b538      	push	{r3, r4, r5, lr}
 800122e:	4604      	mov	r4, r0
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
    instrumentation.init();
 8001230:	f104 05a8 	add.w	r5, r4, #168	@ 0xa8
    TouchGFXGeneratedHAL::initialize();
 8001234:	f001 fac8 	bl	80027c8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    instrumentation.init();
 8001238:	4628      	mov	r0, r5
 800123a:	f7ff fec5 	bl	8000fc8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 800123e:	2301      	movs	r3, #1
 8001240:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
        buttonController = btnCtrl;
 8001244:	4b01      	ldr	r3, [pc, #4]	@ (800124c <_ZN11TouchGFXHAL10initializeEv+0x20>)
        mcuInstrumentation = mcuInstr;
 8001246:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 8001248:	6163      	str	r3, [r4, #20]
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
    setButtonController(&btnctrl);

}
 800124a:	bd38      	pop	{r3, r4, r5, pc}
 800124c:	200006b4 	.word	0x200006b4

08001250 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001250:	f001 ba9a 	b.w	8002788 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001254 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001254:	f001 ba9e 	b.w	8002794 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001258 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001258:	f001 bb68 	b.w	800292c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800125c <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800125c:	f001 bb68 	b.w	8002930 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08001260 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001260:	f001 ba6c 	b.w	800273c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001264 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001264:	f001 bcd2 	b.w	8002c0c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001268 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001268:	f001 bcb6 	b.w	8002bd8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800126c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800126c:	f001 ba72 	b.w	8002754 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001270 <_ZN11TouchGFXHAL10beginFrameEv>:
}

bool TouchGFXHAL::beginFrame()
{
    return TouchGFXGeneratedHAL::beginFrame();
 8001270:	f001 bb58 	b.w	8002924 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>

08001274 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
    TouchGFXGeneratedHAL::endFrame();
 8001274:	f001 bb58 	b.w	8002928 <_ZN20TouchGFXGeneratedHAL8endFrameEv>

08001278 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001278:	b510      	push	{r4, lr}
 800127a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800127c:	f00a fbb6 	bl	800b9ec <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001280:	6823      	ldr	r3, [r4, #0]
 8001282:	4620      	mov	r0, r4
    }
 8001284:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001288:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800128c:	4718      	bx	r3

0800128e <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
 800128e:	f009 bf37 	b.w	800b100 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

08001292 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
 8001292:	f009 bdfd 	b.w	800ae90 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001296 <_ZN11TouchGFXHALD0Ev>:
 8001296:	b510      	push	{r4, lr}
 8001298:	4604      	mov	r4, r0
 800129a:	21b4      	movs	r1, #180	@ 0xb4
 800129c:	f02f ff53 	bl	8031146 <_ZdlPvj>
 80012a0:	4620      	mov	r0, r4
 80012a2:	bd10      	pop	{r4, pc}

080012a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80012a4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80012a6:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 80012aa:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 80012ae:	4b0c      	ldr	r3, [pc, #48]	@ (80012e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80012b0:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80012b2:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80012b4:	d009      	beq.n	80012ca <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80012b6:	b93a      	cbnz	r2, 80012c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                const uint16_t tmp = DISPLAY_HEIGHT;
 80012b8:	490a      	ldr	r1, [pc, #40]	@ (80012e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012ba:	4a0b      	ldr	r2, [pc, #44]	@ (80012e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80012bc:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012be:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 80012c0:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 80012c2:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012c4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80012c6:	701a      	strb	r2, [r3, #0]
    }
 80012c8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80012ca:	2a00      	cmp	r2, #0
 80012cc:	d0fc      	beq.n	80012c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012ce:	4a06      	ldr	r2, [pc, #24]	@ (80012e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80012d0:	4904      	ldr	r1, [pc, #16]	@ (80012e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012d2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80012d4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80012d6:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80012d8:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 80012da:	2200      	movs	r2, #0
 80012dc:	e7f3      	b.n	80012c6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80012de:	bf00      	nop
 80012e0:	20082f00 	.word	0x20082f00
 80012e4:	20082efe 	.word	0x20082efe
 80012e8:	20082efc 	.word	0x20082efc

080012ec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80012ec:	b570      	push	{r4, r5, r6, lr}
 80012ee:	460d      	mov	r5, r1
 80012f0:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80012f2:	b935      	cbnz	r5, 8001302 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80012f4:	f240 21d2 	movw	r1, #722	@ 0x2d2
 80012f8:	4b08      	ldr	r3, [pc, #32]	@ (800131c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80012fa:	4a09      	ldr	r2, [pc, #36]	@ (8001320 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80012fc:	4809      	ldr	r0, [pc, #36]	@ (8001324 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80012fe:	f031 f8fb 	bl	80324f8 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001302:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
    }
 8001306:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800130a:	3a00      	subs	r2, #0
 800130c:	bf18      	it	ne
 800130e:	2201      	movne	r2, #1
 8001310:	4b05      	ldr	r3, [pc, #20]	@ (8001328 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001312:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001314:	6803      	ldr	r3, [r0, #0]
 8001316:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800131a:	4718      	bx	r3
 800131c:	08033724 	.word	0x08033724
 8001320:	0803375c 	.word	0x0803375c
 8001324:	080337aa 	.word	0x080337aa
 8001328:	20082f06 	.word	0x20082f06

0800132c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800132c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800132e:	4b09      	ldr	r3, [pc, #36]	@ (8001354 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001330:	881b      	ldrh	r3, [r3, #0]
 8001332:	428b      	cmp	r3, r1
 8001334:	d803      	bhi.n	800133e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001336:	4b08      	ldr	r3, [pc, #32]	@ (8001358 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001338:	881b      	ldrh	r3, [r3, #0]
 800133a:	4293      	cmp	r3, r2
 800133c:	d905      	bls.n	800134a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800133e:	219e      	movs	r1, #158	@ 0x9e
 8001340:	4b06      	ldr	r3, [pc, #24]	@ (800135c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001342:	4a07      	ldr	r2, [pc, #28]	@ (8001360 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001344:	4807      	ldr	r0, [pc, #28]	@ (8001364 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001346:	f031 f8d7 	bl	80324f8 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800134a:	4b07      	ldr	r3, [pc, #28]	@ (8001368 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800134c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800134e:	4b07      	ldr	r3, [pc, #28]	@ (800136c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001350:	801a      	strh	r2, [r3, #0]
    }
 8001352:	bd08      	pop	{r3, pc}
 8001354:	20082efc 	.word	0x20082efc
 8001358:	20082efe 	.word	0x20082efe
 800135c:	080337ef 	.word	0x080337ef
 8001360:	08033852 	.word	0x08033852
 8001364:	080337aa 	.word	0x080337aa
 8001368:	20082f02 	.word	0x20082f02
 800136c:	20082f04 	.word	0x20082f04

08001370 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8001370:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8001372:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001376:	b118      	cbz	r0, 8001380 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001378:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 800137a:	6803      	ldr	r3, [r0, #0]
 800137c:	681b      	ldr	r3, [r3, #0]
 800137e:	4718      	bx	r3
    }
 8001380:	4770      	bx	lr
	...

08001384 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001384:	4601      	mov	r1, r0
 8001386:	b508      	push	{r3, lr}
        return instance;
 8001388:	4b03      	ldr	r3, [pc, #12]	@ (8001398 <IdleTaskHook+0x14>)
 800138a:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 800138c:	b101      	cbz	r1, 8001390 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 800138e:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8001390:	f00a fb46 	bl	800ba20 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001394:	2001      	movs	r0, #1
 8001396:	bd08      	pop	{r3, pc}
 8001398:	20082f08 	.word	0x20082f08

0800139c <_GLOBAL__sub_I_btnctrl>:
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 800139c:	4802      	ldr	r0, [pc, #8]	@ (80013a8 <_GLOBAL__sub_I_btnctrl+0xc>)
 800139e:	4b03      	ldr	r3, [pc, #12]	@ (80013ac <_GLOBAL__sub_I_btnctrl+0x10>)
 80013a0:	6003      	str	r3, [r0, #0]
        init();
 80013a2:	f7ff be4e 	b.w	8001042 <_ZN8touchgfx10KeySampler4initEv>
 80013a6:	bf00      	nop
 80013a8:	200006b4 	.word	0x200006b4
 80013ac:	080336f8 	.word	0x080336f8

080013b0 <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
 80013b0:	6940      	ldr	r0, [r0, #20]
 80013b2:	4770      	bx	lr

080013b4 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
 80013b4:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
 80013b8:	4770      	bx	lr

080013ba <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
 80013ba:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80013bc:	b923      	cbnz	r3, 80013c8 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0xe>
 80013be:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 80013c0:	3800      	subs	r0, #0
 80013c2:	bf18      	it	ne
 80013c4:	2001      	movne	r0, #1
 80013c6:	4770      	bx	lr
 80013c8:	2001      	movs	r0, #1
}
 80013ca:	4770      	bx	lr

080013cc <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
 80013cc:	6880      	ldr	r0, [r0, #8]
 80013ce:	4770      	bx	lr

080013d0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
 80013d0:	4770      	bx	lr

080013d2 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
 80013d2:	b510      	push	{r4, lr}
 80013d4:	460c      	mov	r4, r1
    *data = videoInfo;
 80013d6:	3004      	adds	r0, #4
 80013d8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 80013da:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 80013de:	bd10      	pop	{r4, pc}

080013e0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
 80013e0:	4770      	bx	lr
	...

080013e4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
 80013e4:	b508      	push	{r3, lr}
    assert(0);
 80013e6:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 80013ea:	4b02      	ldr	r3, [pc, #8]	@ (80013f4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
 80013ec:	4a02      	ldr	r2, [pc, #8]	@ (80013f8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
 80013ee:	4803      	ldr	r0, [pc, #12]	@ (80013fc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
 80013f0:	f031 f882 	bl	80324f8 <__assert_func>
 80013f4:	08034dd5 	.word	0x08034dd5
 80013f8:	08033970 	.word	0x08033970
 80013fc:	080339cb 	.word	0x080339cb

08001400 <_ZN20HardwareMJPEGDecoderD0Ev>:
 8001400:	b510      	push	{r4, lr}
 8001402:	4604      	mov	r4, r0
 8001404:	2148      	movs	r1, #72	@ 0x48
 8001406:	f02f fe9e 	bl	8031146 <_ZdlPvj>
 800140a:	4620      	mov	r0, r4
 800140c:	bd10      	pop	{r4, pc}
	...

08001410 <_ZN20HardwareMJPEGDecoderC1Ev>:
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
 8001410:	2200      	movs	r2, #0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001412:	4b0e      	ldr	r3, [pc, #56]	@ (800144c <_ZN20HardwareMJPEGDecoderC1Ev+0x3c>)
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
 8001414:	b510      	push	{r4, lr}
    semDecodingDone = SEM_CREATE();
 8001416:	4611      	mov	r1, r2
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
 8001418:	4604      	mov	r4, r0
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
 800141a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800141e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8001422:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001426:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 800142a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
    videoInfo.frame_width = 0;
 800142e:	e9c0 2203 	strd	r2, r2, [r0, #12]
    videoInfo.number_of_frames = 0;
 8001432:	e9c0 2201 	strd	r2, r2, [r0, #4]
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
 8001436:	6003      	str	r3, [r0, #0]
 8001438:	63c2      	str	r2, [r0, #60]	@ 0x3c
 800143a:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    semDecodingDone = SEM_CREATE();
 800143e:	2001      	movs	r0, #1
 8001440:	f007 fb65 	bl	8008b0e <osSemaphoreNew>
 8001444:	4b02      	ldr	r3, [pc, #8]	@ (8001450 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
 8001446:	6018      	str	r0, [r3, #0]
}
 8001448:	4620      	mov	r0, r4
 800144a:	bd10      	pop	{r4, pc}
 800144c:	08033c0c 	.word	0x08033c0c
 8001450:	20000704 	.word	0x20000704

08001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>:
{
 8001454:	b410      	push	{r4}
 8001456:	460c      	mov	r4, r1
 8001458:	4611      	mov	r1, r2
 800145a:	461a      	mov	r2, r3
    if (reader != 0)
 800145c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800145e:	b13b      	cbz	r3, 8001470 <_ZN20HardwareMJPEGDecoder7compareEmPKcm+0x1c>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
 8001460:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8001462:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8001464:	1ae4      	subs	r4, r4, r3
        src = (const char*)movieData + offset;
 8001466:	4420      	add	r0, r4
}
 8001468:	f85d 4b04 	ldr.w	r4, [sp], #4
    return strncmp(src, str, num);
 800146c:	f031 ba53 	b.w	8032916 <strncmp>
        src = (const char*)movieData + offset;
 8001470:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8001472:	e7f8      	b.n	8001466 <_ZN20HardwareMJPEGDecoder7compareEmPKcm+0x12>

08001474 <_ZN20HardwareMJPEGDecoder6getU32Em>:
    if (reader != 0)
 8001474:	6b03      	ldr	r3, [r0, #48]	@ 0x30
{
 8001476:	b510      	push	{r4, lr}
    if (reader != 0)
 8001478:	b173      	cbz	r3, 8001498 <_ZN20HardwareMJPEGDecoder6getU32Em+0x24>
        const uint32_t index = offset - aviBufferStartOffset;
 800147a:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
 800147c:	6b42      	ldr	r2, [r0, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
 800147e:	1ac9      	subs	r1, r1, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
 8001480:	1853      	adds	r3, r2, r1
 8001482:	7898      	ldrb	r0, [r3, #2]
 8001484:	785c      	ldrb	r4, [r3, #1]
 8001486:	0400      	lsls	r0, r0, #16
 8001488:	5c52      	ldrb	r2, [r2, r1]
 800148a:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
        val |= d[3] << 24;
 800148e:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
 8001490:	4310      	orrs	r0, r2
        val |= d[3] << 24;
 8001492:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
}
 8001496:	bd10      	pop	{r4, pc}
        volatile const uint8_t* const d = movieData + offset;
 8001498:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800149a:	1853      	adds	r3, r2, r1
        val |= d[0];
 800149c:	5c52      	ldrb	r2, [r2, r1]
        val |= d[1] << 8;
 800149e:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
 80014a0:	7898      	ldrb	r0, [r3, #2]
 80014a2:	0400      	lsls	r0, r0, #16
 80014a4:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 80014a8:	e7f1      	b.n	800148e <_ZN20HardwareMJPEGDecoder6getU32Em+0x1a>

080014aa <_ZN20HardwareMJPEGDecoder6getU16Em>:
    if (reader != 0)
 80014aa:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80014ac:	b143      	cbz	r3, 80014c0 <_ZN20HardwareMJPEGDecoder6getU16Em+0x16>
        const uint32_t index = offset - aviBufferStartOffset;
 80014ae:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80014b0:	1ac9      	subs	r1, r1, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
 80014b2:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 80014b4:	185a      	adds	r2, r3, r1
 80014b6:	7852      	ldrb	r2, [r2, #1]
 80014b8:	5c58      	ldrb	r0, [r3, r1]
 80014ba:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80014be:	4770      	bx	lr
        volatile const uint8_t* const d = movieData + offset;
 80014c0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80014c2:	185a      	adds	r2, r3, r1
        val |= d[0];
 80014c4:	5c58      	ldrb	r0, [r3, r1]
        val |= d[1] << 8;
 80014c6:	7853      	ldrb	r3, [r2, #1]
 80014c8:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
}
 80014cc:	4770      	bx	lr
	...

080014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>:
{
 80014d0:	b570      	push	{r4, r5, r6, lr}
 80014d2:	4604      	mov	r4, r0
    if (reader != 0)
 80014d4:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
 80014d6:	460d      	mov	r5, r1
 80014d8:	4616      	mov	r6, r2
    if (reader != 0)
 80014da:	b1d8      	cbz	r0, 8001514 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x44>
        if (length > aviBufferLength)
 80014dc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80014de:	4293      	cmp	r3, r2
 80014e0:	d208      	bcs.n	80014f4 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x24>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
 80014e2:	2309      	movs	r3, #9
            assert(!"Buffer to small");
 80014e4:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
 80014e6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
 80014ea:	4a0c      	ldr	r2, [pc, #48]	@ (800151c <_ZN20HardwareMJPEGDecoder8readDataEmm+0x4c>)
 80014ec:	4b0c      	ldr	r3, [pc, #48]	@ (8001520 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x50>)
 80014ee:	480d      	ldr	r0, [pc, #52]	@ (8001524 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x54>)
 80014f0:	f031 f802 	bl	80324f8 <__assert_func>
        reader->seek(offset);
 80014f4:	6803      	ldr	r3, [r0, #0]
 80014f6:	68db      	ldr	r3, [r3, #12]
 80014f8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
 80014fa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80014fc:	4632      	mov	r2, r6
 80014fe:	6803      	ldr	r3, [r0, #0]
 8001500:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001502:	691b      	ldr	r3, [r3, #16]
 8001504:	4798      	blx	r3
 8001506:	b910      	cbnz	r0, 800150e <_ZN20HardwareMJPEGDecoder8readDataEmm+0x3e>
            lastError = AVI_ERROR_EOF_REACHED;
 8001508:	230d      	movs	r3, #13
 800150a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
 800150e:	6b60      	ldr	r0, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
 8001510:	63e5      	str	r5, [r4, #60]	@ 0x3c
}
 8001512:	bd70      	pop	{r4, r5, r6, pc}
    return movieData + offset;
 8001514:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8001516:	4408      	add	r0, r1
 8001518:	e7fb      	b.n	8001512 <_ZN20HardwareMJPEGDecoder8readDataEmm+0x42>
 800151a:	bf00      	nop
 800151c:	08033a47 	.word	0x08033a47
 8001520:	08033a34 	.word	0x08033a34
 8001524:	080339cb 	.word	0x080339cb

08001528 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
{
 8001528:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 800152c:	6943      	ldr	r3, [r0, #20]
{
 800152e:	4604      	mov	r4, r0
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001530:	b92b      	cbnz	r3, 800153e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x16>
 8001532:	21f6      	movs	r1, #246	@ 0xf6
 8001534:	4b21      	ldr	r3, [pc, #132]	@ (80015bc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x94>)
 8001536:	4a22      	ldr	r2, [pc, #136]	@ (80015c0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x98>)
 8001538:	4822      	ldr	r0, [pc, #136]	@ (80015c4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x9c>)
 800153a:	f030 ffdd 	bl	80324f8 <__assert_func>
    readData(currentMovieOffset, 8);
 800153e:	2208      	movs	r2, #8
 8001540:	6981      	ldr	r1, [r0, #24]
 8001542:	f7ff ffc5 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001546:	69a1      	ldr	r1, [r4, #24]
 8001548:	4620      	mov	r0, r4
 800154a:	3104      	adds	r1, #4
 800154c:	f7ff ff92 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        if (streamNo == STREAM0 && chunkType == TYPEDC)
 8001550:	f243 0630 	movw	r6, #12336	@ 0x3030
 8001554:	f246 3764 	movw	r7, #25444	@ 0x6364
    while (currentMovieOffset + 8 + chunkSize < movieLength)
 8001558:	69a3      	ldr	r3, [r4, #24]
 800155a:	4418      	add	r0, r3
 800155c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800155e:	f100 0208 	add.w	r2, r0, #8
 8001562:	429a      	cmp	r2, r3
 8001564:	d306      	bcc.n	8001574 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x4c>
    frameNumber = 1;
 8001566:	2301      	movs	r3, #1
    return false;
 8001568:	2000      	movs	r0, #0
    frameNumber = 1;
 800156a:	6163      	str	r3, [r4, #20]
    currentMovieOffset = firstFrameOffset; /* start over */
 800156c:	6a23      	ldr	r3, [r4, #32]
 800156e:	61a3      	str	r3, [r4, #24]
}
 8001570:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        frameNumber++;
 8001574:	6963      	ldr	r3, [r4, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001576:	f100 0109 	add.w	r1, r0, #9
        frameNumber++;
 800157a:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 800157c:	f021 0101 	bic.w	r1, r1, #1
        readData(currentMovieOffset, 8);
 8001580:	2208      	movs	r2, #8
        frameNumber++;
 8001582:	6163      	str	r3, [r4, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001584:	61a1      	str	r1, [r4, #24]
        readData(currentMovieOffset, 8);
 8001586:	4620      	mov	r0, r4
 8001588:	f7ff ffa2 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
        uint32_t streamNo  = getU16(currentMovieOffset);
 800158c:	f8d4 9018 	ldr.w	r9, [r4, #24]
 8001590:	4620      	mov	r0, r4
 8001592:	4649      	mov	r1, r9
 8001594:	f7ff ff89 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001598:	f109 0102 	add.w	r1, r9, #2
        uint32_t streamNo  = getU16(currentMovieOffset);
 800159c:	4680      	mov	r8, r0
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 800159e:	4620      	mov	r0, r4
 80015a0:	f7ff ff83 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
        chunkSize = getU32(currentMovieOffset + 4);
 80015a4:	f109 0104 	add.w	r1, r9, #4
        uint32_t chunkType = getU16(currentMovieOffset + 2);
 80015a8:	4605      	mov	r5, r0
        chunkSize = getU32(currentMovieOffset + 4);
 80015aa:	4620      	mov	r0, r4
 80015ac:	f7ff ff62 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        if (streamNo == STREAM0 && chunkType == TYPEDC)
 80015b0:	45b0      	cmp	r8, r6
 80015b2:	d1d1      	bne.n	8001558 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x30>
 80015b4:	42bd      	cmp	r5, r7
 80015b6:	d1cf      	bne.n	8001558 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x30>
            return true;
 80015b8:	2001      	movs	r0, #1
 80015ba:	e7d9      	b.n	8001570 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x48>
 80015bc:	08033a89 	.word	0x08033a89
 80015c0:	08033ad2 	.word	0x08033ad2
 80015c4:	080339cb 	.word	0x080339cb

080015c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
    if (frameNumber == 0)
 80015c8:	2901      	cmp	r1, #1
 80015ca:	bf38      	it	cc
 80015cc:	2101      	movcc	r1, #1
    if (frameNumber > getNumberOfFrames())
 80015ce:	6803      	ldr	r3, [r0, #0]
{
 80015d0:	b570      	push	{r4, r5, r6, lr}
    if (frameNumber > getNumberOfFrames())
 80015d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80015d4:	460d      	mov	r5, r1
{
 80015d6:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
 80015d8:	4798      	blx	r3
 80015da:	42a8      	cmp	r0, r5
 80015dc:	d204      	bcs.n	80015e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x20>
        frameNumber = getNumberOfFrames();
 80015de:	6823      	ldr	r3, [r4, #0]
 80015e0:	4620      	mov	r0, r4
 80015e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80015e4:	4798      	blx	r3
 80015e6:	4605      	mov	r5, r0
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
 80015e8:	69e6      	ldr	r6, [r4, #28]
 80015ea:	1e6b      	subs	r3, r5, #1
 80015ec:	eb06 1603 	add.w	r6, r6, r3, lsl #4
    readData(offset, 16);
 80015f0:	2210      	movs	r2, #16
 80015f2:	f106 0108 	add.w	r1, r6, #8
 80015f6:	4620      	mov	r0, r4
 80015f8:	f7ff ff6a 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
 80015fc:	4620      	mov	r0, r4
 80015fe:	f106 0110 	add.w	r1, r6, #16
 8001602:	f7ff ff37 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001606:	6a23      	ldr	r3, [r4, #32]
 8001608:	3b04      	subs	r3, #4
 800160a:	4403      	add	r3, r0
    this->frameNumber = frameNumber;
 800160c:	e9c4 5305 	strd	r5, r3, [r4, #20]
}
 8001610:	bd70      	pop	{r4, r5, r6, pc}
	...

08001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
    currentMovieOffset = 0;
 8001614:	2100      	movs	r1, #0
{
 8001616:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800161a:	4604      	mov	r4, r0
    readData(0, 72);
 800161c:	2248      	movs	r2, #72	@ 0x48
    currentMovieOffset = 0;
 800161e:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
 8001620:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    readData(0, 72);
 8001624:	f7ff ff54 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    if (compare(currentMovieOffset, "RIFF", 4))
 8001628:	69a6      	ldr	r6, [r4, #24]
 800162a:	2304      	movs	r3, #4
 800162c:	4631      	mov	r1, r6
 800162e:	4620      	mov	r0, r4
 8001630:	4a62      	ldr	r2, [pc, #392]	@ (80017bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a8>)
 8001632:	f7ff ff0f 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 8001636:	b148      	cbz	r0, 800164c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
        lastError = AVI_ERROR_NOT_RIFF;
 8001638:	2303      	movs	r3, #3
        assert(!"RIFF header not found");
 800163a:	f44f 719f 	mov.w	r1, #318	@ 0x13e
        lastError = AVI_ERROR_NOT_RIFF;
 800163e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"RIFF header not found");
 8001642:	4a5f      	ldr	r2, [pc, #380]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 8001644:	4b5f      	ldr	r3, [pc, #380]	@ (80017c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b0>)
        assert(!"AVI header not found");
 8001646:	4860      	ldr	r0, [pc, #384]	@ (80017c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>)
 8001648:	f030 ff56 	bl	80324f8 <__assert_func>
    currentMovieOffset += 8;
 800164c:	f106 0108 	add.w	r1, r6, #8
    if (compare(currentMovieOffset, "AVI ", 4))
 8001650:	2304      	movs	r3, #4
 8001652:	4620      	mov	r0, r4
 8001654:	4a5d      	ldr	r2, [pc, #372]	@ (80017cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>)
    currentMovieOffset += 8;
 8001656:	61a1      	str	r1, [r4, #24]
    if (compare(currentMovieOffset, "AVI ", 4))
 8001658:	f7ff fefc 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 800165c:	b138      	cbz	r0, 800166e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x5a>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
 800165e:	2304      	movs	r3, #4
        assert(!"AVI header not found");
 8001660:	f44f 71a3 	mov.w	r1, #326	@ 0x146
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
 8001664:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"AVI header not found");
 8001668:	4a55      	ldr	r2, [pc, #340]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 800166a:	4b59      	ldr	r3, [pc, #356]	@ (80017d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1bc>)
 800166c:	e7eb      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    currentMovieOffset += 4;
 800166e:	f106 010c 	add.w	r1, r6, #12
    if (compare(currentMovieOffset, "LIST", 4))
 8001672:	2304      	movs	r3, #4
 8001674:	4620      	mov	r0, r4
 8001676:	4a57      	ldr	r2, [pc, #348]	@ (80017d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c0>)
    currentMovieOffset += 4;
 8001678:	61a1      	str	r1, [r4, #24]
    if (compare(currentMovieOffset, "LIST", 4))
 800167a:	f7ff feeb 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 800167e:	4607      	mov	r7, r0
 8001680:	b138      	cbz	r0, 8001692 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x7e>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
 8001682:	2305      	movs	r3, #5
        assert(!"AVI LIST not found");
 8001684:	f240 114d 	movw	r1, #333	@ 0x14d
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
 8001688:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        assert(!"AVI LIST not found");
 800168c:	4a4c      	ldr	r2, [pc, #304]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 800168e:	4b52      	ldr	r3, [pc, #328]	@ (80017d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>)
 8001690:	e7d9      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
 8001692:	4620      	mov	r0, r4
 8001694:	f106 0110 	add.w	r1, r6, #16
 8001698:	f7ff feec 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    assert(aviListSize);
 800169c:	4605      	mov	r5, r0
 800169e:	b920      	cbnz	r0, 80016aa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x96>
 80016a0:	f240 1153 	movw	r1, #339	@ 0x153
 80016a4:	4b4d      	ldr	r3, [pc, #308]	@ (80017dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c8>)
 80016a6:	4a46      	ldr	r2, [pc, #280]	@ (80017c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ac>)
 80016a8:	e7cd      	b.n	8001646 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32>
    uint32_t offset =  currentMovieOffset + 8;
 80016aa:	f106 0814 	add.w	r8, r6, #20
    if (compare(offset, "hdrl", 4))
 80016ae:	2304      	movs	r3, #4
 80016b0:	4641      	mov	r1, r8
 80016b2:	4620      	mov	r0, r4
 80016b4:	4a4a      	ldr	r2, [pc, #296]	@ (80017e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1cc>)
 80016b6:	f7ff fecd 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016ba:	2800      	cmp	r0, #0
 80016bc:	d049      	beq.n	8001752 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x13e>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
 80016be:	2306      	movs	r3, #6
 80016c0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    if (compare(offset, "avih", 4))
 80016c4:	2304      	movs	r3, #4
 80016c6:	4620      	mov	r0, r4
 80016c8:	4a46      	ldr	r2, [pc, #280]	@ (80017e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d0>)
 80016ca:	f106 0118 	add.w	r1, r6, #24
 80016ce:	f7ff fec1 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016d2:	2800      	cmp	r0, #0
 80016d4:	d03f      	beq.n	8001756 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x142>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
 80016d6:	2307      	movs	r3, #7
 80016d8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
 80016dc:	4445      	add	r5, r8
    readData(listOffset, 12);
 80016de:	220c      	movs	r2, #12
 80016e0:	4629      	mov	r1, r5
 80016e2:	4620      	mov	r0, r4
 80016e4:	f7ff fef4 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
 80016e8:	4f3f      	ldr	r7, [pc, #252]	@ (80017e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d4>)
 80016ea:	f105 0608 	add.w	r6, r5, #8
 80016ee:	2304      	movs	r3, #4
 80016f0:	463a      	mov	r2, r7
 80016f2:	4631      	mov	r1, r6
 80016f4:	4620      	mov	r0, r4
 80016f6:	f7ff fead 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 80016fa:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 80016fe:	2800      	cmp	r0, #0
 8001700:	d048      	beq.n	8001794 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x180>
 8001702:	2b00      	cmp	r3, #0
 8001704:	d148      	bne.n	8001798 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x184>
 8001706:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8001708:	42ab      	cmp	r3, r5
 800170a:	d849      	bhi.n	80017a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x18c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
 800170c:	f105 030c 	add.w	r3, r5, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001710:	3504      	adds	r5, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
 8001712:	61a3      	str	r3, [r4, #24]
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001714:	4629      	mov	r1, r5
 8001716:	4620      	mov	r0, r4
 8001718:	f7ff feac 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 800171c:	4430      	add	r0, r6
    const uint32_t listSize = getU32(listOffset + 4) + 8;
 800171e:	4629      	mov	r1, r5
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
 8001720:	6260      	str	r0, [r4, #36]	@ 0x24
    const uint32_t listSize = getU32(listOffset + 4) + 8;
 8001722:	4620      	mov	r0, r4
 8001724:	f7ff fea6 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    listOffset += listSize;
 8001728:	4406      	add	r6, r0
    readData(listOffset, 4);
 800172a:	2204      	movs	r2, #4
 800172c:	4631      	mov	r1, r6
 800172e:	4620      	mov	r0, r4
 8001730:	f7ff fece 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    if (!compare(listOffset, "idx1", 4))
 8001734:	2304      	movs	r3, #4
 8001736:	4631      	mov	r1, r6
 8001738:	4620      	mov	r0, r4
 800173a:	4a2c      	ldr	r2, [pc, #176]	@ (80017ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d8>)
 800173c:	f7ff fe8a 	bl	8001454 <_ZN20HardwareMJPEGDecoder7compareEmPKcm>
 8001740:	2800      	cmp	r0, #0
 8001742:	d138      	bne.n	80017b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a2>
    frameNumber = 1; /* next frame number is 1 */
 8001744:	2301      	movs	r3, #1
 8001746:	6163      	str	r3, [r4, #20]
    firstFrameOffset = currentMovieOffset;
 8001748:	69a3      	ldr	r3, [r4, #24]
        indexOffset = listOffset;
 800174a:	61e6      	str	r6, [r4, #28]
    firstFrameOffset = currentMovieOffset;
 800174c:	6223      	str	r3, [r4, #32]
}
 800174e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    bool foundFrame = true;
 8001752:	2701      	movs	r7, #1
 8001754:	e7b6      	b.n	80016c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xb0>
    if (foundFrame)
 8001756:	2f00      	cmp	r7, #0
 8001758:	d0c0      	beq.n	80016dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
        videoInfo.ms_between_frames = getU32(offset) / 1000;
 800175a:	f106 0120 	add.w	r1, r6, #32
 800175e:	4620      	mov	r0, r4
 8001760:	f7ff fe88 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001764:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001768:	fbb0 f0f3 	udiv	r0, r0, r3
        videoInfo.number_of_frames = getU32(offset + 16);
 800176c:	f106 0130 	add.w	r1, r6, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
 8001770:	6060      	str	r0, [r4, #4]
        videoInfo.number_of_frames = getU32(offset + 16);
 8001772:	4620      	mov	r0, r4
 8001774:	f7ff fe7e 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        videoInfo.frame_width = getU32(offset + 32);
 8001778:	f106 0140 	add.w	r1, r6, #64	@ 0x40
        videoInfo.number_of_frames = getU32(offset + 16);
 800177c:	60a0      	str	r0, [r4, #8]
        videoInfo.frame_width = getU32(offset + 32);
 800177e:	4620      	mov	r0, r4
 8001780:	f7ff fe78 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        videoInfo.frame_height = getU32(offset + 36);
 8001784:	f106 0144 	add.w	r1, r6, #68	@ 0x44
        videoInfo.frame_width = getU32(offset + 32);
 8001788:	60e0      	str	r0, [r4, #12]
        videoInfo.frame_height = getU32(offset + 36);
 800178a:	4620      	mov	r0, r4
 800178c:	f7ff fe72 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
 8001790:	6120      	str	r0, [r4, #16]
 8001792:	e7a3      	b.n	80016dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    if (lastError != AVI_NO_ERROR)
 8001794:	2b00      	cmp	r3, #0
 8001796:	d0b9      	beq.n	800170c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xf8>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
 8001798:	230a      	movs	r3, #10
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
 800179a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return;
 800179e:	e7d6      	b.n	800174e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x13a>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
 80017a0:	1d29      	adds	r1, r5, #4
 80017a2:	4620      	mov	r0, r4
 80017a4:	f7ff fe66 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
        listOffset += listSize;
 80017a8:	1985      	adds	r5, r0, r6
        readData(listOffset, 12);
 80017aa:	220c      	movs	r2, #12
 80017ac:	4629      	mov	r1, r5
 80017ae:	4620      	mov	r0, r4
 80017b0:	f7ff fe8e 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
 80017b4:	e799      	b.n	80016ea <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
 80017b6:	230b      	movs	r3, #11
 80017b8:	e7ef      	b.n	800179a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x186>
 80017ba:	bf00      	nop
 80017bc:	08033b05 	.word	0x08033b05
 80017c0:	08033b23 	.word	0x08033b23
 80017c4:	08033b0a 	.word	0x08033b0a
 80017c8:	080339cb 	.word	0x080339cb
 80017cc:	08033b50 	.word	0x08033b50
 80017d0:	08033b55 	.word	0x08033b55
 80017d4:	08033b6d 	.word	0x08033b6d
 80017d8:	08033b72 	.word	0x08033b72
 80017dc:	08033b88 	.word	0x08033b88
 80017e0:	08033b94 	.word	0x08033b94
 80017e4:	08033b99 	.word	0x08033b99
 80017e8:	08033b9e 	.word	0x08033b9e
 80017ec:	08033ba3 	.word	0x08033ba3

080017f0 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
    movieLength = length;
 80017f0:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
 80017f4:	2200      	movs	r2, #0
 80017f6:	6302      	str	r2, [r0, #48]	@ 0x30
    readVideoHeader();
 80017f8:	f7ff bf0c 	b.w	8001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

080017fc <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
 80017fc:	b510      	push	{r4, lr}
    movieData = 0;
 80017fe:	2300      	movs	r3, #0
{
 8001800:	4604      	mov	r4, r0
    movieData = 0;
 8001802:	62e3      	str	r3, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
 8001804:	680b      	ldr	r3, [r1, #0]
    this->reader = &reader;
 8001806:	6321      	str	r1, [r4, #48]	@ 0x30
{
 8001808:	4608      	mov	r0, r1
    movieLength = reader.getDataLength();
 800180a:	689b      	ldr	r3, [r3, #8]
 800180c:	4798      	blx	r3
 800180e:	62a0      	str	r0, [r4, #40]	@ 0x28
    readVideoHeader();
 8001810:	4620      	mov	r0, r4
}
 8001812:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
 8001816:	f7ff befd 	b.w	8001614 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
	...

0800181c <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
 800181c:	b573      	push	{r0, r1, r4, r5, r6, lr}
        FrameBufferAddress = output;
 800181e:	4c1d      	ldr	r4, [pc, #116]	@ (8001894 <JPEG_Decode_DMA+0x78>)
        JPEG_output_is_paused = 0;
        JPEG_OUT_Read_BufferIndex = 0;
        JPEG_OUT_Write_BufferIndex = 0;
 8001820:	4e1d      	ldr	r6, [pc, #116]	@ (8001898 <JPEG_Decode_DMA+0x7c>)
        FrameBufferAddress = output;
 8001822:	6023      	str	r3, [r4, #0]
        JPEG_output_is_paused = 0;
 8001824:	2400      	movs	r4, #0
 8001826:	4b1d      	ldr	r3, [pc, #116]	@ (800189c <JPEG_Decode_DMA+0x80>)
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 8001828:	4d1d      	ldr	r5, [pc, #116]	@ (80018a0 <JPEG_Decode_DMA+0x84>)
        JPEG_output_is_paused = 0;
 800182a:	601c      	str	r4, [r3, #0]
        JPEG_OUT_Read_BufferIndex = 0;
 800182c:	4b1d      	ldr	r3, [pc, #116]	@ (80018a4 <JPEG_Decode_DMA+0x88>)
 800182e:	601c      	str	r4, [r3, #0]
        JPEG_InputImageIndex = 0;
 8001830:	4b1d      	ldr	r3, [pc, #116]	@ (80018a8 <JPEG_Decode_DMA+0x8c>)
        JPEG_OUT_Write_BufferIndex = 0;
 8001832:	6034      	str	r4, [r6, #0]
        JPEG_InputImageIndex = 0;
 8001834:	601c      	str	r4, [r3, #0]
        JPEG_InputImageAddress = (uint32_t)input;
 8001836:	4b1d      	ldr	r3, [pc, #116]	@ (80018ac <JPEG_Decode_DMA+0x90>)
 8001838:	6019      	str	r1, [r3, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
 800183a:	4b1d      	ldr	r3, [pc, #116]	@ (80018b0 <JPEG_Decode_DMA+0x94>)
 800183c:	601a      	str	r2, [r3, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
 800183e:	2201      	movs	r2, #1
        MCU_BlockIndex = 0;
 8001840:	4b1c      	ldr	r3, [pc, #112]	@ (80018b4 <JPEG_Decode_DMA+0x98>)
 8001842:	601c      	str	r4, [r3, #0]
        line_count = 0;
 8001844:	4b1c      	ldr	r3, [pc, #112]	@ (80018b8 <JPEG_Decode_DMA+0x9c>)
 8001846:	601c      	str	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 8001848:	4b1c      	ldr	r3, [pc, #112]	@ (80018bc <JPEG_Decode_DMA+0xa0>)
        Jpeg_OUT_BufferTab[0].FirstJob = true;
 800184a:	765a      	strb	r2, [r3, #25]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 800184c:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
 800184e:	e9c3 4402 	strd	r4, r4, [r3, #8]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
 8001852:	1b12      	subs	r2, r2, r4
 8001854:	bf18      	it	ne
 8001856:	2201      	movne	r2, #1
 8001858:	761a      	strb	r2, [r3, #24]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 800185a:	6832      	ldr	r2, [r6, #0]
 800185c:	261c      	movs	r6, #28
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
 800185e:	e9c3 4404 	strd	r4, r4, [r3, #16]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
 8001862:	e9c3 4409 	strd	r4, r4, [r3, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
 8001866:	e9c3 440b 	strd	r4, r4, [r3, #44]	@ 0x2c
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 800186a:	701c      	strb	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].LastJob = false;
 800186c:	769c      	strb	r4, [r3, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
 800186e:	771c      	strb	r4, [r3, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
 8001870:	869c      	strh	r4, [r3, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
 8001872:	f883 4036 	strb.w	r4, [r3, #54]	@ 0x36
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 8001876:	fb06 3302 	mla	r3, r6, r2, r3
 800187a:	68ea      	ldr	r2, [r5, #12]
 800187c:	f44f 75c0 	mov.w	r5, #384	@ 0x180
 8001880:	436a      	muls	r2, r5
 8001882:	9200      	str	r2, [sp, #0]
 8001884:	685b      	ldr	r3, [r3, #4]
 8001886:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
 800188a:	f004 f88b 	bl	80059a4 <HAL_JPEG_Decode_DMA>

        return 0;
    }
 800188e:	4620      	mov	r0, r4
 8001890:	b002      	add	sp, #8
 8001892:	bd70      	pop	{r4, r5, r6, pc}
 8001894:	20009f34 	.word	0x20009f34
 8001898:	20009f14 	.word	0x20009f14
 800189c:	20009f20 	.word	0x20009f20
 80018a0:	200006bc 	.word	0x200006bc
 80018a4:	20000700 	.word	0x20000700
 80018a8:	20009f30 	.word	0x20009f30
 80018ac:	20009f28 	.word	0x20009f28
 80018b0:	20009f2c 	.word	0x20009f2c
 80018b4:	20000708 	.word	0x20000708
 80018b8:	20009f10 	.word	0x20009f10
 80018bc:	20000004 	.word	0x20000004

080018c0 <HAL_JPEG_InfoReadyCallback>:
     */
    void HAL_JPEG_InfoReadyCallback(JPEG_HandleTypeDef* hjpeg, JPEG_ConfTypeDef* pInfo)
    {
        uint32_t hMCU, vMCU;

        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
 80018c0:	684b      	ldr	r3, [r1, #4]
 80018c2:	2b01      	cmp	r3, #1
 80018c4:	d10e      	bne.n	80018e4 <HAL_JPEG_InfoReadyCallback+0x24>
        {
            if ((pInfo->ImageWidth % 16) != 0)
 80018c6:	68cb      	ldr	r3, [r1, #12]
 80018c8:	071a      	lsls	r2, r3, #28
            {
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
 80018ca:	bf1e      	ittt	ne
 80018cc:	f023 030f 	bicne.w	r3, r3, #15
 80018d0:	3310      	addne	r3, #16
 80018d2:	60cb      	strne	r3, [r1, #12]
            }

            if ((pInfo->ImageHeight % 16) != 0)
 80018d4:	688b      	ldr	r3, [r1, #8]
 80018d6:	0718      	lsls	r0, r3, #28
 80018d8:	d003      	beq.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
            {
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
 80018da:	f023 030f 	bic.w	r3, r3, #15
 80018de:	3310      	adds	r3, #16
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
                }

                if ((pInfo->ImageHeight % 8) != 0)
                {
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
 80018e0:	608b      	str	r3, [r1, #8]
                }
            }
        }
    }
 80018e2:	4770      	bx	lr
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
 80018e4:	2b02      	cmp	r3, #2
 80018e6:	d10d      	bne.n	8001904 <HAL_JPEG_InfoReadyCallback+0x44>
                if ((pInfo->ImageWidth % 16) != 0)
 80018e8:	68cb      	ldr	r3, [r1, #12]
 80018ea:	071a      	lsls	r2, r3, #28
 80018ec:	d003      	beq.n	80018f6 <HAL_JPEG_InfoReadyCallback+0x36>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
 80018ee:	f023 030f 	bic.w	r3, r3, #15
 80018f2:	3310      	adds	r3, #16
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
 80018f4:	60cb      	str	r3, [r1, #12]
                if ((pInfo->ImageHeight % 8) != 0)
 80018f6:	688b      	ldr	r3, [r1, #8]
 80018f8:	075a      	lsls	r2, r3, #29
 80018fa:	d0f2      	beq.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
 80018fc:	f023 0307 	bic.w	r3, r3, #7
 8001900:	3308      	adds	r3, #8
 8001902:	e7ed      	b.n	80018e0 <HAL_JPEG_InfoReadyCallback+0x20>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
 8001904:	2b00      	cmp	r3, #0
 8001906:	d1ec      	bne.n	80018e2 <HAL_JPEG_InfoReadyCallback+0x22>
                if ((pInfo->ImageWidth % 8) != 0)
 8001908:	68cb      	ldr	r3, [r1, #12]
 800190a:	0758      	lsls	r0, r3, #29
 800190c:	d0f3      	beq.n	80018f6 <HAL_JPEG_InfoReadyCallback+0x36>
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
 800190e:	f023 0307 	bic.w	r3, r3, #7
 8001912:	3308      	adds	r3, #8
 8001914:	e7ee      	b.n	80018f4 <HAL_JPEG_InfoReadyCallback+0x34>
	...

08001918 <HAL_JPEG_GetDataCallback>:
     * @retval None
     */
    void HAL_JPEG_GetDataCallback(JPEG_HandleTypeDef* hjpeg, uint32_t NbDecodedData)
    {
        /* Input buffer has been consumed by the peripheral and to ask for a new data chunk if the operation (encoding/decoding) has not been complete yet. */
        JPEG_InputImageIndex += NbDecodedData;
 8001918:	4a0b      	ldr	r2, [pc, #44]	@ (8001948 <HAL_JPEG_GetDataCallback+0x30>)
    {
 800191a:	b430      	push	{r4, r5}
        JPEG_InputImageIndex += NbDecodedData;
 800191c:	6813      	ldr	r3, [r2, #0]
 800191e:	440b      	add	r3, r1
 8001920:	6013      	str	r3, [r2, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
 8001922:	4a0a      	ldr	r2, [pc, #40]	@ (800194c <HAL_JPEG_GetDataCallback+0x34>)
 8001924:	6812      	ldr	r2, [r2, #0]
 8001926:	4293      	cmp	r3, r2
 8001928:	d20c      	bcs.n	8001944 <HAL_JPEG_GetDataCallback+0x2c>
        {
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 800192a:	4c09      	ldr	r4, [pc, #36]	@ (8001950 <HAL_JPEG_GetDataCallback+0x38>)
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
 800192c:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 800192e:	6825      	ldr	r5, [r4, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001930:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
 8001934:	4429      	add	r1, r5
 8001936:	6021      	str	r1, [r4, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001938:	bf28      	it	cs
 800193a:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
        }
    }
 800193e:	bc30      	pop	{r4, r5}
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
 8001940:	f004 b897 	b.w	8005a72 <HAL_JPEG_ConfigInputBuffer>
    }
 8001944:	bc30      	pop	{r4, r5}
 8001946:	4770      	bx	lr
 8001948:	20009f30 	.word	0x20009f30
 800194c:	20009f2c 	.word	0x20009f2c
 8001950:	20009f28 	.word	0x20009f28

08001954 <HAL_JPEG_DataReadyCallback>:
     * @param pDataOut: pointer to the output data buffer
     * @param OutDataLength: length of output buffer in bytes
     * @retval None
     */
    void HAL_JPEG_DataReadyCallback(JPEG_HandleTypeDef* hjpeg, uint8_t* pDataOut, uint32_t OutDataLength)
    {
 8001954:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
        line_count += MCU_HEIGHT_PIXELS;
 8001958:	f8df 8130 	ldr.w	r8, [pc, #304]	@ 8001a8c <HAL_JPEG_DataReadyCallback+0x138>

        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800195c:	4c43      	ldr	r4, [pc, #268]	@ (8001a6c <HAL_JPEG_DataReadyCallback+0x118>)
        line_count += MCU_HEIGHT_PIXELS;
 800195e:	f8d8 3000 	ldr.w	r3, [r8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 8001962:	4d43      	ldr	r5, [pc, #268]	@ (8001a70 <HAL_JPEG_DataReadyCallback+0x11c>)
        line_count += MCU_HEIGHT_PIXELS;
 8001964:	3310      	adds	r3, #16
 8001966:	f8c8 3000 	str.w	r3, [r8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800196a:	231c      	movs	r3, #28
 800196c:	6821      	ldr	r1, [r4, #0]
 800196e:	f8df e120 	ldr.w	lr, [pc, #288]	@ 8001a90 <HAL_JPEG_DataReadyCallback+0x13c>
 8001972:	fb03 5101 	mla	r1, r3, r1, r5
 8001976:	f8de 9000 	ldr.w	r9, [lr]

        /* Increment framebuffer */
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 800197a:	4e3e      	ldr	r6, [pc, #248]	@ (8001a74 <HAL_JPEG_DataReadyCallback+0x120>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
 800197c:	f8c1 9014 	str.w	r9, [r1, #20]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001980:	493d      	ldr	r1, [pc, #244]	@ (8001a78 <HAL_JPEG_DataReadyCallback+0x124>)
    {
 8001982:	4694      	mov	ip, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001984:	6809      	ldr	r1, [r1, #0]
 8001986:	6932      	ldr	r2, [r6, #16]
    {
 8001988:	4607      	mov	r7, r0
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 800198a:	4351      	muls	r1, r2
 800198c:	eb09 1101 	add.w	r1, r9, r1, lsl #4

        /* Decode until we reach area to draw */
        if (line_count <= JPEG_ConvertorParams.startY)
 8001990:	f8d8 2000 	ldr.w	r2, [r8]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
 8001994:	f8ce 1000 	str.w	r1, [lr]
        if (line_count <= JPEG_ConvertorParams.startY)
 8001998:	6971      	ldr	r1, [r6, #20]
 800199a:	4291      	cmp	r1, r2
 800199c:	d30b      	bcc.n	80019b6 <HAL_JPEG_DataReadyCallback+0x62>
        {
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 800199e:	6821      	ldr	r1, [r4, #0]
 80019a0:	68f2      	ldr	r2, [r6, #12]
 80019a2:	fb03 5301 	mla	r3, r3, r1, r5
 80019a6:	f44f 71c0 	mov.w	r1, #384	@ 0x180
 80019aa:	434a      	muls	r2, r1
 80019ac:	6859      	ldr	r1, [r3, #4]
        /* Signal Hardware Decoding to wake up */
        if (!DMA2D_reference->isDMARunning())
        {
            SEM_POST(semDecodingDone);
        }
    }
 80019ae:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 80019b2:	f004 b861 	b.w	8005a78 <HAL_JPEG_ConfigOutputBuffer>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019b6:	6822      	ldr	r2, [r4, #0]
 80019b8:	2001      	movs	r0, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
 80019ba:	6821      	ldr	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019bc:	435a      	muls	r2, r3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
 80019be:	fb03 5101 	mla	r1, r3, r1, r5
 80019c2:	f8c1 c008 	str.w	ip, [r1, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
 80019c6:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
 80019c8:	54a8      	strb	r0, [r5, r2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
 80019ca:	6822      	ldr	r2, [r4, #0]
 80019cc:	fb03 5202 	mla	r2, r3, r2, r5
 80019d0:	6111      	str	r1, [r2, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
 80019d2:	6b32      	ldr	r2, [r6, #48]	@ 0x30
 80019d4:	b11a      	cbz	r2, 80019de <HAL_JPEG_DataReadyCallback+0x8a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
 80019d6:	6822      	ldr	r2, [r4, #0]
 80019d8:	fb03 5302 	mla	r3, r3, r2, r5
 80019dc:	7618      	strb	r0, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
 80019de:	f8d8 3000 	ldr.w	r3, [r8]
 80019e2:	69b2      	ldr	r2, [r6, #24]
 80019e4:	429a      	cmp	r2, r3
 80019e6:	d924      	bls.n	8001a32 <HAL_JPEG_DataReadyCallback+0xde>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
 80019e8:	221c      	movs	r2, #28
 80019ea:	6823      	ldr	r3, [r4, #0]
 80019ec:	fb02 5303 	mla	r3, r2, r3, r5
 80019f0:	2200      	movs	r2, #0
 80019f2:	769a      	strb	r2, [r3, #26]
            JPEG_OUT_Write_BufferIndex++;
 80019f4:	6823      	ldr	r3, [r4, #0]
 80019f6:	3301      	adds	r3, #1
 80019f8:	6023      	str	r3, [r4, #0]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 80019fa:	6823      	ldr	r3, [r4, #0]
 80019fc:	2b01      	cmp	r3, #1
                JPEG_OUT_Write_BufferIndex = 0;
 80019fe:	bf88      	it	hi
 8001a00:	6022      	strhi	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
 8001a02:	221c      	movs	r2, #28
 8001a04:	6823      	ldr	r3, [r4, #0]
 8001a06:	4353      	muls	r3, r2
 8001a08:	5ceb      	ldrb	r3, [r5, r3]
 8001a0a:	b133      	cbz	r3, 8001a1a <HAL_JPEG_DataReadyCallback+0xc6>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a0c:	2102      	movs	r1, #2
 8001a0e:	4638      	mov	r0, r7
 8001a10:	f003 fffc 	bl	8005a0c <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
 8001a14:	2201      	movs	r2, #1
 8001a16:	4b19      	ldr	r3, [pc, #100]	@ (8001a7c <HAL_JPEG_DataReadyCallback+0x128>)
 8001a18:	601a      	str	r2, [r3, #0]
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
 8001a1a:	211c      	movs	r1, #28
 8001a1c:	6823      	ldr	r3, [r4, #0]
 8001a1e:	68f2      	ldr	r2, [r6, #12]
 8001a20:	fb01 5303 	mla	r3, r1, r3, r5
 8001a24:	f44f 71c0 	mov.w	r1, #384	@ 0x180
 8001a28:	4638      	mov	r0, r7
 8001a2a:	434a      	muls	r2, r1
 8001a2c:	6859      	ldr	r1, [r3, #4]
 8001a2e:	f004 f823 	bl	8005a78 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
 8001a32:	f8d8 3000 	ldr.w	r3, [r8]
 8001a36:	69b2      	ldr	r2, [r6, #24]
 8001a38:	429a      	cmp	r2, r3
 8001a3a:	d80b      	bhi.n	8001a54 <HAL_JPEG_DataReadyCallback+0x100>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a3c:	221c      	movs	r2, #28
 8001a3e:	6823      	ldr	r3, [r4, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a40:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a42:	fb02 5503 	mla	r5, r2, r3, r5
 8001a46:	2301      	movs	r3, #1
            Jpeg_HWDecodingEnd = 1;
 8001a48:	4a0d      	ldr	r2, [pc, #52]	@ (8001a80 <HAL_JPEG_DataReadyCallback+0x12c>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a4a:	4638      	mov	r0, r7
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
 8001a4c:	76ab      	strb	r3, [r5, #26]
            Jpeg_HWDecodingEnd = 1;
 8001a4e:	6013      	str	r3, [r2, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001a50:	f003 ffdc 	bl	8005a0c <HAL_JPEG_Pause>
     *
     * @return true if a DMA operation is currently in progress.
     */
    bool isDMARunning()
    {
        return isRunning;
 8001a54:	4b0b      	ldr	r3, [pc, #44]	@ (8001a84 <HAL_JPEG_DataReadyCallback+0x130>)
 8001a56:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
 8001a58:	7a1b      	ldrb	r3, [r3, #8]
 8001a5a:	b92b      	cbnz	r3, 8001a68 <HAL_JPEG_DataReadyCallback+0x114>
            SEM_POST(semDecodingDone);
 8001a5c:	4b0a      	ldr	r3, [pc, #40]	@ (8001a88 <HAL_JPEG_DataReadyCallback+0x134>)
 8001a5e:	6818      	ldr	r0, [r3, #0]
    }
 8001a60:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
            SEM_POST(semDecodingDone);
 8001a64:	f007 b8d0 	b.w	8008c08 <osSemaphoreRelease>
    }
 8001a68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001a6c:	20009f14 	.word	0x20009f14
 8001a70:	20000004 	.word	0x20000004
 8001a74:	200006bc 	.word	0x200006bc
 8001a78:	20009f0c 	.word	0x20009f0c
 8001a7c:	20009f20 	.word	0x20009f20
 8001a80:	20009f24 	.word	0x20009f24
 8001a84:	20009f18 	.word	0x20009f18
 8001a88:	20000704 	.word	0x20000704
 8001a8c:	20009f10 	.word	0x20009f10
 8001a90:	20009f34 	.word	0x20009f34

08001a94 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
 8001a94:	b672      	cpsid	i
     * @retval None
     */
    void HAL_JPEG_ErrorCallback(JPEG_HandleTypeDef* hjpeg)
    {
        __disable_irq();
        while (1)
 8001a96:	e7fe      	b.n	8001a96 <HAL_JPEG_ErrorCallback+0x2>

08001a98 <HAL_JPEG_DecodeCpltCallback>:
     * @param hjpeg: JPEG handle pointer
     * @retval None
     */
    void HAL_JPEG_DecodeCpltCallback(JPEG_HandleTypeDef* hjpeg)
    {
        Jpeg_HWDecodingEnd = 1;
 8001a98:	2201      	movs	r2, #1
 8001a9a:	4b01      	ldr	r3, [pc, #4]	@ (8001aa0 <HAL_JPEG_DecodeCpltCallback+0x8>)
 8001a9c:	601a      	str	r2, [r3, #0]
    }
 8001a9e:	4770      	bx	lr
 8001aa0:	20009f24 	.word	0x20009f24

08001aa4 <JPEG_OutputHandler>:
 * @brief  JPEG Ouput Data BackGround Postprocessing .
 * @param hjpeg: JPEG handle pointer
 * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
 */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
 8001aa4:	b538      	push	{r3, r4, r5, lr}
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
 8001aa6:	4d1c      	ldr	r5, [pc, #112]	@ (8001b18 <JPEG_OutputHandler+0x74>)
{
 8001aa8:	4604      	mov	r4, r0
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
 8001aaa:	682b      	ldr	r3, [r5, #0]
 8001aac:	b15b      	cbz	r3, 8001ac6 <JPEG_OutputHandler+0x22>
 8001aae:	4b1b      	ldr	r3, [pc, #108]	@ (8001b1c <JPEG_OutputHandler+0x78>)
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	b143      	cbz	r3, 8001ac6 <JPEG_OutputHandler+0x22>
    {
        /* Abort any ongoing operations */
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
 8001ab4:	f004 fbc2 	bl	800623c <HAL_JPEG_GetState>
 8001ab8:	2804      	cmp	r0, #4
 8001aba:	d102      	bne.n	8001ac2 <JPEG_OutputHandler+0x1e>
        {
            HAL_JPEG_Abort(hjpeg);
 8001abc:	4620      	mov	r0, r4
 8001abe:	f003 ffde 	bl	8005a7e <HAL_JPEG_Abort>
        }
        return 1;
 8001ac2:	2001      	movs	r0, #1
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
}
 8001ac4:	bd38      	pop	{r3, r4, r5, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
 8001ac6:	4b16      	ldr	r3, [pc, #88]	@ (8001b20 <JPEG_OutputHandler+0x7c>)
 8001ac8:	6818      	ldr	r0, [r3, #0]
 8001aca:	7a03      	ldrb	r3, [r0, #8]
 8001acc:	b96b      	cbnz	r3, 8001aea <JPEG_OutputHandler+0x46>
 8001ace:	221c      	movs	r2, #28
 8001ad0:	4b14      	ldr	r3, [pc, #80]	@ (8001b24 <JPEG_OutputHandler+0x80>)
 8001ad2:	681b      	ldr	r3, [r3, #0]
 8001ad4:	4353      	muls	r3, r2
 8001ad6:	4a14      	ldr	r2, [pc, #80]	@ (8001b28 <JPEG_OutputHandler+0x84>)
 8001ad8:	5cd3      	ldrb	r3, [r2, r3]
 8001ada:	2b01      	cmp	r3, #1
 8001adc:	d105      	bne.n	8001aea <JPEG_OutputHandler+0x46>
 8001ade:	4b0f      	ldr	r3, [pc, #60]	@ (8001b1c <JPEG_OutputHandler+0x78>)
 8001ae0:	681b      	ldr	r3, [r3, #0]
 8001ae2:	b913      	cbnz	r3, 8001aea <JPEG_OutputHandler+0x46>
        DMA2D_reference->start();
 8001ae4:	6803      	ldr	r3, [r0, #0]
 8001ae6:	691b      	ldr	r3, [r3, #16]
 8001ae8:	4798      	blx	r3
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
 8001aea:	4a10      	ldr	r2, [pc, #64]	@ (8001b2c <JPEG_OutputHandler+0x88>)
 8001aec:	6813      	ldr	r3, [r2, #0]
 8001aee:	2b01      	cmp	r3, #1
 8001af0:	d106      	bne.n	8001b00 <JPEG_OutputHandler+0x5c>
 8001af2:	211c      	movs	r1, #28
 8001af4:	4b0e      	ldr	r3, [pc, #56]	@ (8001b30 <JPEG_OutputHandler+0x8c>)
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	434b      	muls	r3, r1
 8001afa:	490b      	ldr	r1, [pc, #44]	@ (8001b28 <JPEG_OutputHandler+0x84>)
 8001afc:	5ccb      	ldrb	r3, [r1, r3]
 8001afe:	b10b      	cbz	r3, 8001b04 <JPEG_OutputHandler+0x60>
    return 2;
 8001b00:	2002      	movs	r0, #2
 8001b02:	e7df      	b.n	8001ac4 <JPEG_OutputHandler+0x20>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
 8001b04:	682b      	ldr	r3, [r5, #0]
 8001b06:	2b00      	cmp	r3, #0
 8001b08:	d1fa      	bne.n	8001b00 <JPEG_OutputHandler+0x5c>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001b0a:	2102      	movs	r1, #2
 8001b0c:	4620      	mov	r0, r4
        JPEG_output_is_paused = 0;
 8001b0e:	6013      	str	r3, [r2, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
 8001b10:	f004 fa40 	bl	8005f94 <HAL_JPEG_Resume>
 8001b14:	e7f4      	b.n	8001b00 <JPEG_OutputHandler+0x5c>
 8001b16:	bf00      	nop
 8001b18:	20009f24 	.word	0x20009f24
 8001b1c:	200006fc 	.word	0x200006fc
 8001b20:	20009f18 	.word	0x20009f18
 8001b24:	20000700 	.word	0x20000700
 8001b28:	20000004 	.word	0x20000004
 8001b2c:	20009f20 	.word	0x20009f20
 8001b30:	20009f14 	.word	0x20009f14

08001b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm>:
{
 8001b34:	b570      	push	{r4, r5, r6, lr}
 8001b36:	4605      	mov	r5, r0
    if (length == 0)
 8001b38:	2a00      	cmp	r2, #0
 8001b3a:	d034      	beq.n	8001ba6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x72>
    if (outputBuffer) /* only decode if buffers are assigned. */
 8001b3c:	2b00      	cmp	r3, #0
 8001b3e:	d032      	beq.n	8001ba6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x72>
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001b40:	2402      	movs	r4, #2
 8001b42:	4819      	ldr	r0, [pc, #100]	@ (8001ba8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x74>)
 8001b44:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001b46:	68ec      	ldr	r4, [r5, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
 8001b48:	0726      	lsls	r6, r4, #28
        JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001b4a:	f44f 66c8 	mov.w	r6, #1600	@ 0x640
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
 8001b4e:	bf1c      	itt	ne
 8001b50:	f024 040f 	bicne.w	r4, r4, #15
 8001b54:	3410      	addne	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001b56:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
 8001b58:	0924      	lsrs	r4, r4, #4
 8001b5a:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
 8001b5c:	692c      	ldr	r4, [r5, #16]
        JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001b5e:	6046      	str	r6, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
 8001b60:	f014 040f 	ands.w	r4, r4, #15
 8001b64:	bf18      	it	ne
 8001b66:	f1c4 0410 	rsbne	r4, r4, #16
 8001b6a:	6084      	str	r4, [r0, #8]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
 8001b6c:	480f      	ldr	r0, [pc, #60]	@ (8001bac <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x78>)
 8001b6e:	f7ff fe55 	bl	800181c <JPEG_Decode_DMA>
        DMA2D_reference = dma;
 8001b72:	6c6a      	ldr	r2, [r5, #68]	@ 0x44
 8001b74:	4b0e      	ldr	r3, [pc, #56]	@ (8001bb0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x7c>)
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001b76:	4d0d      	ldr	r5, [pc, #52]	@ (8001bac <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x78>)
 8001b78:	4c0e      	ldr	r4, [pc, #56]	@ (8001bb4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x80>)
        DMA2D_reference = dma;
 8001b7a:	601a      	str	r2, [r3, #0]
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001b7c:	4628      	mov	r0, r5
 8001b7e:	f7ff ff91 	bl	8001aa4 <JPEG_OutputHandler>
 8001b82:	6020      	str	r0, [r4, #0]
            if (JpegProcessing_End == 2)
 8001b84:	6823      	ldr	r3, [r4, #0]
 8001b86:	2b02      	cmp	r3, #2
 8001b88:	d105      	bne.n	8001b96 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x62>
                SEM_WAIT(semDecodingDone);
 8001b8a:	4b0b      	ldr	r3, [pc, #44]	@ (8001bb8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x84>)
 8001b8c:	f04f 31ff 	mov.w	r1, #4294967295
 8001b90:	6818      	ldr	r0, [r3, #0]
 8001b92:	f007 f80b 	bl	8008bac <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
 8001b96:	6823      	ldr	r3, [r4, #0]
 8001b98:	2b01      	cmp	r3, #1
 8001b9a:	d1ef      	bne.n	8001b7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x48>
        Jpeg_HWDecodingEnd = 0;
 8001b9c:	2300      	movs	r3, #0
 8001b9e:	4a07      	ldr	r2, [pc, #28]	@ (8001bbc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x88>)
 8001ba0:	6013      	str	r3, [r2, #0]
        DMA2D_CopyBufferEnd = 0;
 8001ba2:	4a07      	ldr	r2, [pc, #28]	@ (8001bc0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm+0x8c>)
 8001ba4:	6013      	str	r3, [r2, #0]
}
 8001ba6:	bd70      	pop	{r4, r5, r6, pc}
 8001ba8:	200006bc 	.word	0x200006bc
 8001bac:	20000464 	.word	0x20000464
 8001bb0:	20009f18 	.word	0x20009f18
 8001bb4:	20009f1c 	.word	0x20009f1c
 8001bb8:	20000704 	.word	0x20000704
 8001bbc:	20009f24 	.word	0x20009f24
 8001bc0:	200006fc 	.word	0x200006fc

08001bc4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
{
 8001bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001bc8:	4699      	mov	r9, r3
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001bca:	6943      	ldr	r3, [r0, #20]
{
 8001bcc:	4604      	mov	r4, r0
 8001bce:	460f      	mov	r7, r1
 8001bd0:	4690      	mov	r8, r2
 8001bd2:	b085      	sub	sp, #20
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
 8001bd4:	b92b      	cbnz	r3, 8001be2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x1e>
 8001bd6:	21c2      	movs	r1, #194	@ 0xc2
 8001bd8:	4b28      	ldr	r3, [pc, #160]	@ (8001c7c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb8>)
 8001bda:	4a29      	ldr	r2, [pc, #164]	@ (8001c80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xbc>)
 8001bdc:	4829      	ldr	r0, [pc, #164]	@ (8001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>)
 8001bde:	f030 fc8b 	bl	80324f8 <__assert_func>
    readData(currentMovieOffset, 8);
 8001be2:	2208      	movs	r2, #8
 8001be4:	6981      	ldr	r1, [r0, #24]
 8001be6:	f7ff fc73 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    uint32_t streamNo  = getU16(currentMovieOffset);
 8001bea:	69a6      	ldr	r6, [r4, #24]
 8001bec:	4620      	mov	r0, r4
 8001bee:	4631      	mov	r1, r6
 8001bf0:	f7ff fc5b 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001bf4:	1cb1      	adds	r1, r6, #2
    uint32_t streamNo  = getU16(currentMovieOffset);
 8001bf6:	4683      	mov	fp, r0
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001bf8:	4620      	mov	r0, r4
 8001bfa:	f7ff fc56 	bl	80014aa <_ZN20HardwareMJPEGDecoder6getU16Em>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001bfe:	1d31      	adds	r1, r6, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
 8001c00:	4682      	mov	sl, r0
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001c02:	4620      	mov	r0, r4
 8001c04:	f7ff fc36 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    if (currentMovieOffset + 8 + chunkSize < movieLength)
 8001c08:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8001c0a:	f106 0108 	add.w	r1, r6, #8
 8001c0e:	1842      	adds	r2, r0, r1
 8001c10:	429a      	cmp	r2, r3
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
 8001c12:	4605      	mov	r5, r0
    if (currentMovieOffset + 8 + chunkSize < movieLength)
 8001c14:	d226      	bcs.n	8001c64 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xa0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
 8001c16:	f243 0330 	movw	r3, #12336	@ 0x3030
 8001c1a:	459b      	cmp	fp, r3
 8001c1c:	d117      	bne.n	8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
 8001c1e:	f246 3364 	movw	r3, #25444	@ 0x6364
 8001c22:	459a      	cmp	sl, r3
 8001c24:	d113      	bne.n	8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
 8001c26:	b190      	cbz	r0, 8001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c28:	4602      	mov	r2, r0
            currentMovieOffset += 8;
 8001c2a:	61a1      	str	r1, [r4, #24]
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c2c:	4620      	mov	r0, r4
 8001c2e:	f7ff fc4f 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
            decodeMJPEGFrame(chunk, chunkSize, buffer, buffer_width, buffer_height, buffer_stride);
 8001c32:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
            const uint8_t* chunk = readData(currentMovieOffset, chunkSize);
 8001c34:	4601      	mov	r1, r0
            decodeMJPEGFrame(chunk, chunkSize, buffer, buffer_width, buffer_height, buffer_stride);
 8001c36:	e9cd 9301 	strd	r9, r3, [sp, #4]
 8001c3a:	462a      	mov	r2, r5
 8001c3c:	463b      	mov	r3, r7
 8001c3e:	4620      	mov	r0, r4
 8001c40:	f8cd 8000 	str.w	r8, [sp]
 8001c44:	f7ff ff76 	bl	8001b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm>
            frameNumber++;
 8001c48:	6963      	ldr	r3, [r4, #20]
 8001c4a:	3301      	adds	r3, #1
 8001c4c:	6163      	str	r3, [r4, #20]
        currentMovieOffset += chunkSize;
 8001c4e:	69a3      	ldr	r3, [r4, #24]
 8001c50:	442b      	add	r3, r5
        if (chunkSize == 0) /* Empty frame - Skip */
 8001c52:	b905      	cbnz	r5, 8001c56 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x92>
            currentMovieOffset += 8;
 8001c54:	3308      	adds	r3, #8
        if (currentMovieOffset == lastFrameEnd)
 8001c56:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001c58:	3301      	adds	r3, #1
 8001c5a:	f023 0301 	bic.w	r3, r3, #1
        if (currentMovieOffset == lastFrameEnd)
 8001c5e:	4293      	cmp	r3, r2
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
 8001c60:	61a3      	str	r3, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
 8001c62:	d109      	bne.n	8001c78 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb4>
        frameNumber = 1;
 8001c64:	2301      	movs	r3, #1
            isCurrentFrameLast = true;
 8001c66:	2001      	movs	r0, #1
        frameNumber = 1;
 8001c68:	6163      	str	r3, [r4, #20]
        currentMovieOffset = firstFrameOffset; /* start over */
 8001c6a:	6a23      	ldr	r3, [r4, #32]
 8001c6c:	61a3      	str	r3, [r4, #24]
}
 8001c6e:	f080 0001 	eor.w	r0, r0, #1
 8001c72:	b005      	add	sp, #20
 8001c74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        isCurrentFrameLast = false;
 8001c78:	2000      	movs	r0, #0
 8001c7a:	e7f8      	b.n	8001c6e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xaa>
 8001c7c:	08033a89 	.word	0x08033a89
 8001c80:	08033ba8 	.word	0x08033ba8
 8001c84:	080339cb 	.word	0x080339cb

08001c88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
 8001c88:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001c8c:	4607      	mov	r7, r0
 8001c8e:	468b      	mov	fp, r1
 8001c90:	4691      	mov	r9, r2
    readData(currentMovieOffset, 8);
 8001c92:	6981      	ldr	r1, [r0, #24]
 8001c94:	2208      	movs	r2, #8
{
 8001c96:	4698      	mov	r8, r3
    readData(currentMovieOffset, 8);
 8001c98:	f7ff fc1a 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    const uint32_t length = getU32(currentMovieOffset + 4);
 8001c9c:	69bc      	ldr	r4, [r7, #24]
 8001c9e:	4638      	mov	r0, r7
 8001ca0:	1d21      	adds	r1, r4, #4
 8001ca2:	f7ff fbe7 	bl	8001474 <_ZN20HardwareMJPEGDecoder6getU32Em>
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001ca6:	f104 0108 	add.w	r1, r4, #8
 8001caa:	4602      	mov	r2, r0
    const uint32_t length = getU32(currentMovieOffset + 4);
 8001cac:	4682      	mov	sl, r0
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001cae:	4638      	mov	r0, r7
 8001cb0:	f7ff fc0e 	bl	80014d0 <_ZN20HardwareMJPEGDecoder8readDataEmm>
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001cb4:	2302      	movs	r3, #2
 8001cb6:	4c34      	ldr	r4, [pc, #208]	@ (8001d88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x100>)
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001cb8:	68fa      	ldr	r2, [r7, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
 8001cba:	6123      	str	r3, [r4, #16]
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
 8001cbc:	4601      	mov	r1, r0
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
 8001cbe:	0713      	lsls	r3, r2, #28
    JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001cc0:	f44f 60c8 	mov.w	r0, #1600	@ 0x640
 8001cc4:	bf0e      	itee	eq
 8001cc6:	4613      	moveq	r3, r2
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
 8001cc8:	f022 030f 	bicne.w	r3, r2, #15
 8001ccc:	3310      	addne	r3, #16
    JPEG_ConvertorParams.ScaledWidth = 800 * JPEG_ConvertorParams.bytes_pr_pixel;
 8001cce:	6060      	str	r0, [r4, #4]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
 8001cd0:	f8bb 5006 	ldrh.w	r5, [fp, #6]
    JPEG_ConvertorParams.startY = area.y;
 8001cd4:	f9bb 0002 	ldrsh.w	r0, [fp, #2]
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
 8001cd8:	6023      	str	r3, [r4, #0]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
 8001cda:	091b      	lsrs	r3, r3, #4
 8001cdc:	60e3      	str	r3, [r4, #12]
 8001cde:	4405      	add	r5, r0
 8001ce0:	693b      	ldr	r3, [r7, #16]
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
 8001ce2:	b22d      	sxth	r5, r5
 8001ce4:	429d      	cmp	r5, r3
 8001ce6:	bf28      	it	cs
 8001ce8:	461d      	movcs	r5, r3
    JPEG_ConvertorParams.startX = area.x;
 8001cea:	f9bb 3000 	ldrsh.w	r3, [fp]
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
 8001cee:	61a5      	str	r5, [r4, #24]
 8001cf0:	462e      	mov	r6, r5
        return x + width;
 8001cf2:	f8bb 5004 	ldrh.w	r5, [fp, #4]
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
 8001cf6:	ea4f 1c13 	mov.w	ip, r3, lsr #4
 8001cfa:	441d      	add	r5, r3
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
 8001cfc:	b22d      	sxth	r5, r5
 8001cfe:	4295      	cmp	r5, r2
 8001d00:	bf28      	it	cs
 8001d02:	4615      	movcs	r5, r2
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d04:	f105 020f 	add.w	r2, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
 8001d08:	6225      	str	r5, [r4, #32]
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d0a:	0912      	lsrs	r2, r2, #4
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d0c:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.startY = area.y;
 8001d10:	6160      	str	r0, [r4, #20]
    JPEG_ConvertorParams.startX = area.x;
 8001d12:	61e3      	str	r3, [r4, #28]
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
 8001d14:	62a2      	str	r2, [r4, #40]	@ 0x28
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d16:	bf18      	it	ne
 8001d18:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
 8001d1c:	eba2 020c 	sub.w	r2, r2, ip
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d20:	f016 060f 	ands.w	r6, r6, #15
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
 8001d24:	f003 030f 	and.w	r3, r3, #15
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
 8001d28:	f000 000f 	and.w	r0, r0, #15
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
 8001d2c:	62e2      	str	r2, [r4, #44]	@ 0x2c
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
 8001d2e:	6323      	str	r3, [r4, #48]	@ 0x30
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
 8001d30:	6360      	str	r0, [r4, #52]	@ 0x34
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d32:	464b      	mov	r3, r9
 8001d34:	4652      	mov	r2, sl
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d36:	bf18      	it	ne
 8001d38:	f1c6 0610 	rsbne	r6, r6, #16
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d3c:	4813      	ldr	r0, [pc, #76]	@ (8001d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x104>)
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
 8001d3e:	63a5      	str	r5, [r4, #56]	@ 0x38
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
 8001d40:	f8c4 c024 	str.w	ip, [r4, #36]	@ 0x24
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
 8001d44:	63e6      	str	r6, [r4, #60]	@ 0x3c
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
 8001d46:	f7ff fd69 	bl	800181c <JPEG_Decode_DMA>
    DMA2D_reference = dma;
 8001d4a:	4b11      	ldr	r3, [pc, #68]	@ (8001d90 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x108>)
 8001d4c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d4e:	4d0f      	ldr	r5, [pc, #60]	@ (8001d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x104>)
    DMA2D_reference = dma;
 8001d50:	601a      	str	r2, [r3, #0]
    FrameBufferWidth = framebuffer_width;
 8001d52:	4b10      	ldr	r3, [pc, #64]	@ (8001d94 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>)
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d54:	4c10      	ldr	r4, [pc, #64]	@ (8001d98 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x110>)
    FrameBufferWidth = framebuffer_width;
 8001d56:	f8c3 8000 	str.w	r8, [r3]
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
 8001d5a:	4628      	mov	r0, r5
 8001d5c:	f7ff fea2 	bl	8001aa4 <JPEG_OutputHandler>
 8001d60:	6020      	str	r0, [r4, #0]
        if (JpegProcessing_End == 2)
 8001d62:	6823      	ldr	r3, [r4, #0]
 8001d64:	2b02      	cmp	r3, #2
 8001d66:	d105      	bne.n	8001d74 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xec>
            SEM_WAIT(semDecodingDone);
 8001d68:	4b0c      	ldr	r3, [pc, #48]	@ (8001d9c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x114>)
 8001d6a:	f04f 31ff 	mov.w	r1, #4294967295
 8001d6e:	6818      	ldr	r0, [r3, #0]
 8001d70:	f006 ff1c 	bl	8008bac <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
 8001d74:	6820      	ldr	r0, [r4, #0]
 8001d76:	2801      	cmp	r0, #1
 8001d78:	d1ef      	bne.n	8001d5a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xd2>
    Jpeg_HWDecodingEnd = 0;
 8001d7a:	2300      	movs	r3, #0
 8001d7c:	4a08      	ldr	r2, [pc, #32]	@ (8001da0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x118>)
 8001d7e:	6013      	str	r3, [r2, #0]
    DMA2D_CopyBufferEnd = 0;
 8001d80:	4a08      	ldr	r2, [pc, #32]	@ (8001da4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x11c>)
 8001d82:	6013      	str	r3, [r2, #0]
}
 8001d84:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001d88:	200006bc 	.word	0x200006bc
 8001d8c:	20000464 	.word	0x20000464
 8001d90:	20009f18 	.word	0x20009f18
 8001d94:	20009f0c 	.word	0x20009f0c
 8001d98:	20009f1c 	.word	0x20009f1c
 8001d9c:	20000704 	.word	0x20000704
 8001da0:	20009f24 	.word	0x20009f24
 8001da4:	200006fc 	.word	0x200006fc

08001da8 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
 8001da8:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001daa:	f44f 75c0 	mov.w	r5, #384	@ 0x180
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dae:	f8df c08c 	ldr.w	ip, [pc, #140]	@ 8001e3c <DMA2D_CopyBuffer+0x94>
 8001db2:	6902      	ldr	r2, [r0, #16]
 8001db4:	f8dc e02c 	ldr.w	lr, [ip, #44]	@ 0x2c
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001db8:	f8dc 1024 	ldr.w	r1, [ip, #36]	@ 0x24
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dbc:	ebae 0302 	sub.w	r3, lr, r2
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
 8001dc0:	f8c0 e010 	str.w	lr, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001dc4:	f04f 0e02 	mov.w	lr, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001dc8:	440a      	add	r2, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dca:	f8dc 1010 	ldr.w	r1, [ip, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001dce:	4355      	muls	r5, r2
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dd0:	434a      	muls	r2, r1
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dd2:	f8dc 4038 	ldr.w	r4, [ip, #56]	@ 0x38
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001dd6:	0111      	lsls	r1, r2, #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001dd8:	4a15      	ldr	r2, [pc, #84]	@ (8001e30 <DMA2D_CopyBuffer+0x88>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001dda:	011f      	lsls	r7, r3, #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001ddc:	f8c2 e034 	str.w	lr, [r2, #52]	@ 0x34
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
 8001de0:	ebc4 1303 	rsb	r3, r4, r3, lsl #4

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
 8001de4:	f890 e01a 	ldrb.w	lr, [r0, #26]
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
 8001de8:	f013 060f 	ands.w	r6, r3, #15
 8001dec:	bf18      	it	ne
 8001dee:	f1c6 0610 	rsbne	r6, r6, #16
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
 8001df2:	041b      	lsls	r3, r3, #16
    if (job.LastJob)  /* Last line of frame */
 8001df4:	f1be 0f00 	cmp.w	lr, #0
 8001df8:	d016      	beq.n	8001e28 <DMA2D_CopyBuffer+0x80>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
 8001dfa:	f8dc c03c 	ldr.w	ip, [ip, #60]	@ 0x3c
 8001dfe:	f1cc 0c10 	rsb	ip, ip, #16
 8001e02:	ea4c 0303 	orr.w	r3, ip, r3
    }
    else
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
 8001e06:	6453      	str	r3, [r2, #68]	@ 0x44
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
 8001e08:	6943      	ldr	r3, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 800 - width);
 8001e0a:	f504 7448 	add.w	r4, r4, #800	@ 0x320
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
 8001e0e:	440b      	add	r3, r1
 8001e10:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, scaledWidth);

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001e12:	4b08      	ldr	r3, [pc, #32]	@ (8001e34 <DMA2D_CopyBuffer+0x8c>)
    WRITE_REG(DMA2D->OOR, 800 - width);
 8001e14:	1be4      	subs	r4, r4, r7
 8001e16:	6414      	str	r4, [r2, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, scaledWidth);
 8001e18:	6116      	str	r6, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001e1a:	61d3      	str	r3, [r2, #28]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
 8001e1c:	6843      	ldr	r3, [r0, #4]
 8001e1e:	442b      	add	r3, r5
 8001e20:	60d3      	str	r3, [r2, #12]

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001e22:	4b05      	ldr	r3, [pc, #20]	@ (8001e38 <DMA2D_CopyBuffer+0x90>)
 8001e24:	6013      	str	r3, [r2, #0]
}
 8001e26:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
 8001e28:	f043 0310 	orr.w	r3, r3, #16
 8001e2c:	e7eb      	b.n	8001e06 <DMA2D_CopyBuffer+0x5e>
 8001e2e:	bf00      	nop
 8001e30:	4002b000 	.word	0x4002b000
 8001e34:	ff09000b 	.word	0xff09000b
 8001e38:	00010201 	.word	0x00010201
 8001e3c:	200006bc 	.word	0x200006bc

08001e40 <DMA2D_CropBuffer>:
 * @brief  Configures external DMA2D job to copy and crop YCbCr data to an RGB cropping buffer
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
 8001e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001e44:	6905      	ldr	r5, [r0, #16]
{
 8001e46:	4604      	mov	r4, r0
 8001e48:	4937      	ldr	r1, [pc, #220]	@ (8001f28 <DMA2D_CropBuffer+0xe8>)
 8001e4a:	b08b      	sub	sp, #44	@ 0x2c
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001e4c:	2d00      	cmp	r5, #0
 8001e4e:	d166      	bne.n	8001f1e <DMA2D_CropBuffer+0xde>
 8001e50:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e52:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e54:	7e67      	ldrb	r7, [r4, #25]
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e56:	3b01      	subs	r3, #1
 8001e58:	429d      	cmp	r5, r3
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e5a:	f8d1 8034 	ldr.w	r8, [r1, #52]	@ 0x34
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001e5e:	7ea3      	ldrb	r3, [r4, #26]
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
 8001e60:	bf14      	ite	ne
 8001e62:	f04f 0e00 	movne.w	lr, #0
 8001e66:	f8d1 e038 	ldreq.w	lr, [r1, #56]	@ 0x38
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
 8001e6a:	2f00      	cmp	r7, #0
 8001e6c:	bf14      	ite	ne
 8001e6e:	4640      	movne	r0, r8
 8001e70:	2000      	moveq	r0, #0
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001e72:	2b00      	cmp	r3, #0
 8001e74:	d055      	beq.n	8001f22 <DMA2D_CropBuffer+0xe2>
 8001e76:	f8d1 c03c 	ldr.w	ip, [r1, #60]	@ 0x3c
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001e7a:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 8001e7c:	f44f 76c0 	mov.w	r6, #384	@ 0x180
 8001e80:	eb05 0a03 	add.w	sl, r5, r3
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e84:	2332      	movs	r3, #50	@ 0x32
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001e86:	f8d1 b010 	ldr.w	fp, [r1, #16]
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
                                   + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * MCU_HEIGHT_PIXELS;

    /* Update job and assert if more cropping is needed */
    job.MCU_drawn++;
 8001e8a:	3501      	adds	r5, #1
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e8c:	fb00 f90b 	mul.w	r9, r0, fp
 8001e90:	fb03 f309 	mul.w	r3, r3, r9
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
 8001e94:	fb02 f10b 	mul.w	r1, r2, fp
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 800
 8001e98:	fb0b 330a 	mla	r3, fp, sl, r3
    job.MCU_drawn++;
 8001e9c:	6125      	str	r5, [r4, #16]
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
 8001e9e:	eb01 1303 	add.w	r3, r1, r3, lsl #4
 8001ea2:	2500      	movs	r5, #0
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
 8001ea4:	fb06 f60a 	mul.w	r6, r6, sl
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
 8001ea8:	eb01 1109 	add.w	r1, r1, r9, lsl #4
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
 8001eac:	f1b8 0f00 	cmp.w	r8, #0
 8001eb0:	d000      	beq.n	8001eb4 <DMA2D_CropBuffer+0x74>
 8001eb2:	b907      	cbnz	r7, 8001eb6 <DMA2D_CropBuffer+0x76>
    {
        job.DoCropping = false;
 8001eb4:	7625      	strb	r5, [r4, #24]
    }

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
 8001eb6:	2701      	movs	r7, #1
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
 8001eb8:	f1c2 0210 	rsb	r2, r2, #16
 8001ebc:	eba2 020e 	sub.w	r2, r2, lr
 8001ec0:	f8ad 2018 	strh.w	r2, [sp, #24]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
 8001ec4:	4a19      	ldr	r2, [pc, #100]	@ (8001f2c <DMA2D_CropBuffer+0xec>)
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ec6:	f1c0 0010 	rsb	r0, r0, #16
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
 8001eca:	9207      	str	r2, [sp, #28]
    blitOp.dstLoopStride = 800;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001ecc:	6962      	ldr	r2, [r4, #20]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ece:	eba0 000c 	sub.w	r0, r0, ip
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001ed2:	441a      	add	r2, r3
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
 8001ed4:	4b16      	ldr	r3, [pc, #88]	@ (8001f30 <DMA2D_CropBuffer+0xf0>)
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
 8001ed6:	f8ad 001a 	strh.w	r0, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
 8001eda:	6818      	ldr	r0, [r3, #0]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
 8001edc:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
 8001ee0:	f88d 5022 	strb.w	r5, [sp, #34]	@ 0x22
    blitOp.operation = touchgfx::BLIT_OP_COPY;
 8001ee4:	9701      	str	r7, [sp, #4]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
 8001ee6:	4f13      	ldr	r7, [pc, #76]	@ (8001f34 <DMA2D_CropBuffer+0xf4>)
    DMA2D_reference->addToQueue(blitOp);
 8001ee8:	6803      	ldr	r3, [r0, #0]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
 8001eea:	4439      	add	r1, r7
 8001eec:	9102      	str	r1, [sp, #8]
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
 8001eee:	9205      	str	r2, [sp, #20]
    DMA2D_reference->addToQueue(blitOp);
 8001ef0:	685b      	ldr	r3, [r3, #4]
        : color(0)
 8001ef2:	9504      	str	r5, [sp, #16]
 8001ef4:	a901      	add	r1, sp, #4
 8001ef6:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001ef8:	2202      	movs	r2, #2
 8001efa:	4b0f      	ldr	r3, [pc, #60]	@ (8001f38 <DMA2D_CropBuffer+0xf8>)
 8001efc:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
 8001efe:	f04f 1210 	mov.w	r2, #1048592	@ 0x100010
 8001f02:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, 0);

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001f04:	4a0d      	ldr	r2, [pc, #52]	@ (8001f3c <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
 8001f06:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
 8001f08:	641d      	str	r5, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
 8001f0a:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
 8001f0c:	61da      	str	r2, [r3, #28]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
 8001f0e:	6862      	ldr	r2, [r4, #4]
 8001f10:	4432      	add	r2, r6
 8001f12:	60da      	str	r2, [r3, #12]

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001f14:	4a0a      	ldr	r2, [pc, #40]	@ (8001f40 <DMA2D_CropBuffer+0x100>)
 8001f16:	601a      	str	r2, [r3, #0]
}
 8001f18:	b00b      	add	sp, #44	@ 0x2c
 8001f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
 8001f1e:	2200      	movs	r2, #0
 8001f20:	e797      	b.n	8001e52 <DMA2D_CropBuffer+0x12>
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
 8001f22:	469c      	mov	ip, r3
 8001f24:	e7a9      	b.n	8001e7a <DMA2D_CropBuffer+0x3a>
 8001f26:	bf00      	nop
 8001f28:	200006bc 	.word	0x200006bc
 8001f2c:	03200010 	.word	0x03200010
 8001f30:	20009f18 	.word	0x20009f18
 8001f34:	2000070c 	.word	0x2000070c
 8001f38:	4002b000 	.word	0x4002b000
 8001f3c:	ff09000b 	.word	0xff09000b
 8001f40:	00010201 	.word	0x00010201

08001f44 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
 8001f44:	4b0d      	ldr	r3, [pc, #52]	@ (8001f7c <DMA2D_ExternalJobCompleted+0x38>)
 8001f46:	6902      	ldr	r2, [r0, #16]
 8001f48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001f4a:	429a      	cmp	r2, r3
 8001f4c:	d114      	bne.n	8001f78 <DMA2D_ExternalJobCompleted+0x34>
    {
        job.State = JPEG_BUFFER_EMPTY;
 8001f4e:	2200      	movs	r2, #0
        job.DataBufferSize = 0;
        job.DoCropping = false;
        job.FirstJob = false;

        JPEG_OUT_Read_BufferIndex++;
 8001f50:	4b0b      	ldr	r3, [pc, #44]	@ (8001f80 <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
 8001f52:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
 8001f54:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
 8001f56:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
 8001f58:	3101      	adds	r1, #1
 8001f5a:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 8001f5c:	6819      	ldr	r1, [r3, #0]
        job.DoCropping = false;
 8001f5e:	8302      	strh	r2, [r0, #24]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
 8001f60:	2901      	cmp	r1, #1
        {
            JPEG_OUT_Read_BufferIndex = 0;
 8001f62:	bf88      	it	hi
 8001f64:	601a      	strhi	r2, [r3, #0]
        }

        /* Check if last line */
        if (job.LastJob)
 8001f66:	7e83      	ldrb	r3, [r0, #26]
 8001f68:	b113      	cbz	r3, 8001f70 <DMA2D_ExternalJobCompleted+0x2c>
        {
            DMA2D_CopyBufferEnd = 1;
 8001f6a:	2201      	movs	r2, #1
 8001f6c:	4b05      	ldr	r3, [pc, #20]	@ (8001f84 <DMA2D_ExternalJobCompleted+0x40>)
 8001f6e:	601a      	str	r2, [r3, #0]
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
 8001f70:	4b05      	ldr	r3, [pc, #20]	@ (8001f88 <DMA2D_ExternalJobCompleted+0x44>)
 8001f72:	6818      	ldr	r0, [r3, #0]
 8001f74:	f006 be48 	b.w	8008c08 <osSemaphoreRelease>
    }
}
 8001f78:	4770      	bx	lr
 8001f7a:	bf00      	nop
 8001f7c:	200006bc 	.word	0x200006bc
 8001f80:	20000700 	.word	0x20000700
 8001f84:	200006fc 	.word	0x200006fc
 8001f88:	20000704 	.word	0x20000704

08001f8c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001f8c:	2101      	movs	r1, #1
{
 8001f8e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001f90:	2200      	movs	r2, #0
 8001f92:	4608      	mov	r0, r1
 8001f94:	f006 fdbb 	bl	8008b0e <osSemaphoreNew>
 8001f98:	4b0a      	ldr	r3, [pc, #40]	@ (8001fc4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001f9a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001f9c:	b928      	cbnz	r0, 8001faa <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001f9e:	2128      	movs	r1, #40	@ 0x28
 8001fa0:	4b09      	ldr	r3, [pc, #36]	@ (8001fc8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001fa2:	4a0a      	ldr	r2, [pc, #40]	@ (8001fcc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001fa4:	480a      	ldr	r0, [pc, #40]	@ (8001fd0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001fa6:	f030 faa7 	bl	80324f8 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001faa:	2200      	movs	r2, #0
 8001fac:	2104      	movs	r1, #4
 8001fae:	2001      	movs	r0, #1
 8001fb0:	f006 fe52 	bl	8008c58 <osMessageQueueNew>
 8001fb4:	4b07      	ldr	r3, [pc, #28]	@ (8001fd4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001fb6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001fb8:	b918      	cbnz	r0, 8001fc2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001fba:	212c      	movs	r1, #44	@ 0x2c
 8001fbc:	4b06      	ldr	r3, [pc, #24]	@ (8001fd8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001fbe:	4a03      	ldr	r2, [pc, #12]	@ (8001fcc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001fc0:	e7f0      	b.n	8001fa4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001fc2:	bd08      	pop	{r3, pc}
 8001fc4:	20009f3c 	.word	0x20009f3c
 8001fc8:	08033c48 	.word	0x08033c48
 8001fcc:	08033c91 	.word	0x08033c91
 8001fd0:	08033cc0 	.word	0x08033cc0
 8001fd4:	20009f38 	.word	0x20009f38
 8001fd8:	08033d1f 	.word	0x08033d1f

08001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001fdc:	4b02      	ldr	r3, [pc, #8]	@ (8001fe8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001fde:	f04f 31ff 	mov.w	r1, #4294967295
 8001fe2:	6818      	ldr	r0, [r3, #0]
 8001fe4:	f006 bde2 	b.w	8008bac <osSemaphoreAcquire>
 8001fe8:	20009f3c 	.word	0x20009f3c

08001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001fec:	4b01      	ldr	r3, [pc, #4]	@ (8001ff4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001fee:	6818      	ldr	r0, [r3, #0]
 8001ff0:	f006 be0a 	b.w	8008c08 <osSemaphoreRelease>
 8001ff4:	20009f3c 	.word	0x20009f3c

08001ff8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001ff8:	4b02      	ldr	r3, [pc, #8]	@ (8002004 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001ffa:	2100      	movs	r1, #0
 8001ffc:	6818      	ldr	r0, [r3, #0]
 8001ffe:	f006 bdd5 	b.w	8008bac <osSemaphoreAcquire>
 8002002:	bf00      	nop
 8002004:	20009f3c 	.word	0x20009f3c

08002008 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8002008:	f7ff bff0 	b.w	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800200c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 800200c:	2300      	movs	r3, #0
 800200e:	4803      	ldr	r0, [pc, #12]	@ (800201c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002010:	461a      	mov	r2, r3
 8002012:	4903      	ldr	r1, [pc, #12]	@ (8002020 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002014:	6800      	ldr	r0, [r0, #0]
 8002016:	f006 be5e 	b.w	8008cd6 <osMessageQueuePut>
 800201a:	bf00      	nop
 800201c:	20009f38 	.word	0x20009f38
 8002020:	2000003c 	.word	0x2000003c

08002024 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 */
void OSWrappers::waitForVSync()
{
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002024:	2300      	movs	r3, #0
{
 8002026:	b513      	push	{r0, r1, r4, lr}
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002028:	4c07      	ldr	r4, [pc, #28]	@ (8002048 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800202a:	461a      	mov	r2, r3
 800202c:	a901      	add	r1, sp, #4
 800202e:	6820      	ldr	r0, [r4, #0]
 8002030:	f006 fe85 	bl	8008d3e <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002034:	f04f 33ff 	mov.w	r3, #4294967295
 8002038:	2200      	movs	r2, #0
 800203a:	6820      	ldr	r0, [r4, #0]
 800203c:	a901      	add	r1, sp, #4
 800203e:	f006 fe7e 	bl	8008d3e <osMessageQueueGet>
}
 8002042:	b002      	add	sp, #8
 8002044:	bd10      	pop	{r4, pc}
 8002046:	bf00      	nop
 8002048:	20009f38 	.word	0x20009f38

0800204c <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
 800204c:	6803      	ldr	r3, [r0, #0]
 800204e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002050:	4718      	bx	r3

08002052 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8002052:	2001      	movs	r0, #1
 8002054:	4770      	bx	lr

08002056 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8002056:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 800205a:	4770      	bx	lr

0800205c <_ZN8STM32DMAD1Ev>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800205c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
STM32DMA::~STM32DMA()
 8002060:	4b04      	ldr	r3, [pc, #16]	@ (8002074 <_ZN8STM32DMAD1Ev+0x18>)
 8002062:	6003      	str	r3, [r0, #0]
 8002064:	4b04      	ldr	r3, [pc, #16]	@ (8002078 <_ZN8STM32DMAD1Ev+0x1c>)
 8002066:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __ASM volatile ("dsb 0xF":::"memory");
 800206a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800206e:	f3bf 8f6f 	isb	sy
}
 8002072:	4770      	bx	lr
 8002074:	08033ed0 	.word	0x08033ed0
 8002078:	e000e100 	.word	0xe000e100

0800207c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800207c:	b510      	push	{r4, lr}
 800207e:	4604      	mov	r4, r0
}
 8002080:	f640 51a4 	movw	r1, #3492	@ 0xda4
 8002084:	f7ff ffea 	bl	800205c <_ZN8STM32DMAD1Ev>
 8002088:	4620      	mov	r0, r4
 800208a:	f02f f85c 	bl	8031146 <_ZdlPvj>
 800208e:	4620      	mov	r0, r4
 8002090:	bd10      	pop	{r4, pc}
	...

08002094 <_ZN8STM32DMA10initializeEv>:
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002094:	4b0f      	ldr	r3, [pc, #60]	@ (80020d4 <_ZN8STM32DMA10initializeEv+0x40>)
{
 8002096:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002098:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800209c:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80020a0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80020a4:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 80020a8:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
 80020ac:	9201      	str	r2, [sp, #4]
 80020ae:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80020b0:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80020b2:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80020b6:	661a      	str	r2, [r3, #96]	@ 0x60
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80020b8:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 80020ba:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80020be:	661a      	str	r2, [r3, #96]	@ 0x60
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80020c0:	4b05      	ldr	r3, [pc, #20]	@ (80020d8 <_ZN8STM32DMA10initializeEv+0x44>)
 80020c2:	4a06      	ldr	r2, [pc, #24]	@ (80020dc <_ZN8STM32DMA10initializeEv+0x48>)
 80020c4:	621a      	str	r2, [r3, #32]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020c6:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 80020ca:	4b05      	ldr	r3, [pc, #20]	@ (80020e0 <_ZN8STM32DMA10initializeEv+0x4c>)
 80020cc:	60da      	str	r2, [r3, #12]
}
 80020ce:	b002      	add	sp, #8
 80020d0:	4770      	bx	lr
 80020d2:	bf00      	nop
 80020d4:	46020c00 	.word	0x46020c00
 80020d8:	2000057c 	.word	0x2000057c
 80020dc:	08002331 	.word	0x08002331
 80020e0:	e000e100 	.word	0xe000e100

080020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 80020e4:	b508      	push	{r3, lr}
    switch (format)
 80020e6:	280a      	cmp	r0, #10
 80020e8:	d809      	bhi.n	80020fe <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 80020ea:	e8df f000 	tbb	[pc, r0]
 80020ee:	1006      	.short	0x1006
 80020f0:	0808080e 	.word	0x0808080e
 80020f4:	10101008 	.word	0x10101008
 80020f8:	10          	.byte	0x10
 80020f9:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80020fa:	2002      	movs	r0, #2
}
 80020fc:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80020fe:	2187      	movs	r1, #135	@ 0x87
 8002100:	4b04      	ldr	r3, [pc, #16]	@ (8002114 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8002102:	4a05      	ldr	r2, [pc, #20]	@ (8002118 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8002104:	4805      	ldr	r0, [pc, #20]	@ (800211c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8002106:	f030 f9f7 	bl	80324f8 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800210a:	2000      	movs	r0, #0
 800210c:	e7f6      	b.n	80020fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 800210e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8002110:	e7f4      	b.n	80020fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8002112:	bf00      	nop
 8002114:	08033d61 	.word	0x08033d61
 8002118:	08033d7c 	.word	0x08033d7c
 800211c:	08033dc7 	.word	0x08033dc7

08002120 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8002120:	b538      	push	{r3, r4, r5, lr}
 8002122:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002124:	7f88      	ldrb	r0, [r1, #30]
 8002126:	f7ff ffdd 	bl	80020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800212a:	8aa5      	ldrh	r5, [r4, #20]
 800212c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800212e:	4b16      	ldr	r3, [pc, #88]	@ (8002188 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002130:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8002134:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002136:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002138:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800213a:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800213c:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800213e:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002140:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8002142:	6825      	ldr	r5, [r4, #0]
 8002144:	2d08      	cmp	r5, #8
 8002146:	d10e      	bne.n	8002166 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002148:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800214a:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800214c:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 800214e:	7f20      	ldrb	r0, [r4, #28]
 8002150:	4a0e      	ldr	r2, [pc, #56]	@ (800218c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8002152:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8002156:	61da      	str	r2, [r3, #28]
        return color;
 8002158:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800215a:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 800215c:	4a0c      	ldr	r2, [pc, #48]	@ (8002190 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800215e:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002160:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002162:	601a      	str	r2, [r3, #0]
    }
}
 8002164:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8002166:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8002168:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800216a:	611a      	str	r2, [r3, #16]
 800216c:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 800216e:	0a0a      	lsrs	r2, r1, #8
 8002170:	0948      	lsrs	r0, r1, #5
 8002172:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8002176:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800217a:	4302      	orrs	r2, r0
 800217c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8002180:	430a      	orrs	r2, r1
 8002182:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002184:	4a03      	ldr	r2, [pc, #12]	@ (8002194 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8002186:	e7ec      	b.n	8002162 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8002188:	4002b000 	.word	0x4002b000
 800218c:	00010009 	.word	0x00010009
 8002190:	00020201 	.word	0x00020201
 8002194:	00030201 	.word	0x00030201

08002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8002198:	b508      	push	{r3, lr}
    switch (format)
 800219a:	280b      	cmp	r0, #11
 800219c:	d80b      	bhi.n	80021b6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 800219e:	e8df f000 	tbb	[pc, r0]
 80021a2:	1206      	.short	0x1206
 80021a4:	0a0a0a10 	.word	0x0a0a0a10
 80021a8:	0808080a 	.word	0x0808080a
 80021ac:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 80021ae:	2002      	movs	r0, #2
}
 80021b0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 80021b2:	2005      	movs	r0, #5
        break;
 80021b4:	e7fc      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 80021b6:	2166      	movs	r1, #102	@ 0x66
 80021b8:	4b04      	ldr	r3, [pc, #16]	@ (80021cc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80021ba:	4a05      	ldr	r2, [pc, #20]	@ (80021d0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80021bc:	4805      	ldr	r0, [pc, #20]	@ (80021d4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 80021be:	f030 f99b 	bl	80324f8 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 80021c2:	2000      	movs	r0, #0
 80021c4:	e7f4      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 80021c6:	2001      	movs	r0, #1
    return dma2dColorMode;
 80021c8:	e7f2      	b.n	80021b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80021ca:	bf00      	nop
 80021cc:	08033d61 	.word	0x08033d61
 80021d0:	08033e24 	.word	0x08033e24
 80021d4:	08033dc7 	.word	0x08033dc7

080021d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 80021d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021dc:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 80021e0:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021e2:	4640      	mov	r0, r8
 80021e4:	f7ff ffd8 	bl	8002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021e8:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80021ea:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021ec:	4638      	mov	r0, r7
 80021ee:	f7ff ffd3 	bl	8002198 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 80021f2:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021f4:	4638      	mov	r0, r7
 80021f6:	f7ff ff75 	bl	80020e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80021fa:	8aa1      	ldrh	r1, [r4, #20]
 80021fc:	8b62      	ldrh	r2, [r4, #26]
 80021fe:	4b44      	ldr	r3, [pc, #272]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002200:	1a52      	subs	r2, r2, r1
 8002202:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002204:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8002206:	8b22      	ldrh	r2, [r4, #24]
 8002208:	1a52      	subs	r2, r2, r1
 800220a:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800220c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800220e:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002210:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002214:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002216:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8002218:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800221a:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800221c:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 800221e:	6820      	ldr	r0, [r4, #0]
 8002220:	2880      	cmp	r0, #128	@ 0x80
 8002222:	d028      	beq.n	8002276 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8002224:	7f22      	ldrb	r2, [r4, #28]
 8002226:	d80f      	bhi.n	8002248 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8002228:	2820      	cmp	r0, #32
 800222a:	d067      	beq.n	80022fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 800222c:	2840      	cmp	r0, #64	@ 0x40
 800222e:	d065      	beq.n	80022fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8002230:	2804      	cmp	r0, #4
 8002232:	d01a      	beq.n	800226a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002234:	4b36      	ldr	r3, [pc, #216]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002236:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800223a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 800223e:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002240:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8002242:	d061      	beq.n	8002308 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8002244:	4a33      	ldr	r2, [pc, #204]	@ (8002314 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8002246:	e044      	b.n	80022d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8002248:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 800224c:	d004      	beq.n	8002258 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 800224e:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8002252:	d1ef      	bne.n	8002234 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002254:	4830      	ldr	r0, [pc, #192]	@ (8002318 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8002256:	e000      	b.n	800225a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002258:	4830      	ldr	r0, [pc, #192]	@ (800231c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800225a:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 800225e:	61da      	str	r2, [r3, #28]
 8002260:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8002262:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002264:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002266:	6159      	str	r1, [r3, #20]
 8002268:	e032      	b.n	80022d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800226a:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 800226e:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002272:	61da      	str	r2, [r3, #28]
 8002274:	e7f6      	b.n	8002264 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8002276:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8002278:	1d02      	adds	r2, r0, #4
 800227a:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800227c:	7f22      	ldrb	r2, [r4, #28]
 800227e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8002282:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8002286:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002288:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800228a:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 800228c:	7801      	ldrb	r1, [r0, #0]
 800228e:	b141      	cbz	r1, 80022a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8002290:	2901      	cmp	r1, #1
 8002292:	d021      	beq.n	80022d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8002294:	f240 1111 	movw	r1, #273	@ 0x111
 8002298:	4b21      	ldr	r3, [pc, #132]	@ (8002320 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 800229a:	4a22      	ldr	r2, [pc, #136]	@ (8002324 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 800229c:	4822      	ldr	r0, [pc, #136]	@ (8002328 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 800229e:	f030 f92b 	bl	80324f8 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022a2:	69da      	ldr	r2, [r3, #28]
 80022a4:	8841      	ldrh	r1, [r0, #2]
 80022a6:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80022aa:	3901      	subs	r1, #1
 80022ac:	f022 0210 	bic.w	r2, r2, #16
 80022b0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 80022b4:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022b6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80022b8:	4b15      	ldr	r3, [pc, #84]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80022ba:	69da      	ldr	r2, [r3, #28]
 80022bc:	f042 0220 	orr.w	r2, r2, #32
 80022c0:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80022c2:	69da      	ldr	r2, [r3, #28]
 80022c4:	0692      	lsls	r2, r2, #26
 80022c6:	d4fc      	bmi.n	80022c2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 80022c8:	2210      	movs	r2, #16
 80022ca:	609a      	str	r2, [r3, #8]
            if (blend)
 80022cc:	2900      	cmp	r1, #0
 80022ce:	d0b9      	beq.n	8002244 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 80022d0:	4a16      	ldr	r2, [pc, #88]	@ (800232c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 80022d2:	601a      	str	r2, [r3, #0]
}
 80022d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 80022d8:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022dc:	69da      	ldr	r2, [r3, #28]
 80022de:	8840      	ldrh	r0, [r0, #2]
 80022e0:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80022e4:	f100 30ff 	add.w	r0, r0, #4294967295
 80022e8:	f022 0210 	bic.w	r2, r2, #16
 80022ec:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80022f0:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 80022f4:	bf18      	it	ne
 80022f6:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80022f8:	61da      	str	r2, [r3, #28]
                break;
 80022fa:	e7dd      	b.n	80022b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80022fc:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8002300:	4b03      	ldr	r3, [pc, #12]	@ (8002310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002302:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8002306:	e7b4      	b.n	8002272 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8002308:	f240 2201 	movw	r2, #513	@ 0x201
 800230c:	e7e1      	b.n	80022d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 800230e:	bf00      	nop
 8002310:	4002b000 	.word	0x4002b000
 8002314:	00010201 	.word	0x00010201
 8002318:	00020009 	.word	0x00020009
 800231c:	0002000a 	.word	0x0002000a
 8002320:	08033e6e 	.word	0x08033e6e
 8002324:	08033e88 	.word	0x08033e88
 8002328:	08033dc7 	.word	0x08033dc7
 800232c:	00020201 	.word	0x00020201

08002330 <DMA2D_XferCpltCallback>:
 8002330:	4b02      	ldr	r3, [pc, #8]	@ (800233c <DMA2D_XferCpltCallback+0xc>)
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8002336:	6803      	ldr	r3, [r0, #0]
 8002338:	695b      	ldr	r3, [r3, #20]
 800233a:	4718      	bx	r3
 800233c:	20082f08 	.word	0x20082f08

08002340 <_ZN8STM32DMA18externalJobExecuteEv>:
     *
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
 8002340:	2301      	movs	r3, #1
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
 8002342:	221c      	movs	r2, #28
 8002344:	4908      	ldr	r1, [pc, #32]	@ (8002368 <_ZN8STM32DMA18externalJobExecuteEv+0x28>)
        isRunning = true;
 8002346:	7203      	strb	r3, [r0, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
 8002348:	6808      	ldr	r0, [r1, #0]
 800234a:	4b08      	ldr	r3, [pc, #32]	@ (800236c <_ZN8STM32DMA18externalJobExecuteEv+0x2c>)
 800234c:	fb02 3000 	mla	r0, r2, r0, r3
 8002350:	7e00      	ldrb	r0, [r0, #24]
 8002352:	b120      	cbz	r0, 800235e <_ZN8STM32DMA18externalJobExecuteEv+0x1e>
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 8002354:	6808      	ldr	r0, [r1, #0]
 8002356:	fb02 3000 	mla	r0, r2, r0, r3
 800235a:	f7ff bd71 	b.w	8001e40 <DMA2D_CropBuffer>
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 800235e:	6808      	ldr	r0, [r1, #0]
 8002360:	fb02 3000 	mla	r0, r2, r0, r3
 8002364:	f7ff bd20 	b.w	8001da8 <DMA2D_CopyBuffer>
 8002368:	20000700 	.word	0x20000700
 800236c:	20000004 	.word	0x20000004

08002370 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
 8002370:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
 8002374:	b510      	push	{r4, lr}
 8002376:	4604      	mov	r4, r0
        if (!started_by_external_job)
 8002378:	b9ab      	cbnz	r3, 80023a6 <_ZN8STM32DMA18signalDMAInterruptEv+0x36>
            executeCompleted();
 800237a:	6803      	ldr	r3, [r0, #0]
 800237c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800237e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
 8002380:	221c      	movs	r2, #28
 8002382:	4b17      	ldr	r3, [pc, #92]	@ (80023e0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	4353      	muls	r3, r2
 8002388:	4a16      	ldr	r2, [pc, #88]	@ (80023e4 <_ZN8STM32DMA18signalDMAInterruptEv+0x74>)
 800238a:	5cd3      	ldrb	r3, [r2, r3]
 800238c:	2b01      	cmp	r3, #1
 800238e:	d109      	bne.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 8002390:	4a15      	ldr	r2, [pc, #84]	@ (80023e8 <_ZN8STM32DMA18signalDMAInterruptEv+0x78>)
 8002392:	6812      	ldr	r2, [r2, #0]
 8002394:	b932      	cbnz	r2, 80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 8002396:	7a22      	ldrb	r2, [r4, #8]
 8002398:	b922      	cbnz	r2, 80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
                externalJobExecute();
 800239a:	4620      	mov	r0, r4
                started_by_external_job = true;
 800239c:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                externalJobExecute();
 80023a0:	f7ff ffce 	bl	8002340 <_ZN8STM32DMA18externalJobExecuteEv>
    }
 80023a4:	bd10      	pop	{r4, pc}
        if (isRunning)
 80023a6:	7a03      	ldrb	r3, [r0, #8]
 80023a8:	b14b      	cbz	r3, 80023be <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            isRunning = false;
 80023aa:	2300      	movs	r3, #0
 80023ac:	7203      	strb	r3, [r0, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
 80023ae:	201c      	movs	r0, #28
 80023b0:	4b0b      	ldr	r3, [pc, #44]	@ (80023e0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>)
 80023b2:	681a      	ldr	r2, [r3, #0]
 80023b4:	4b0b      	ldr	r3, [pc, #44]	@ (80023e4 <_ZN8STM32DMA18signalDMAInterruptEv+0x74>)
 80023b6:	fb00 3002 	mla	r0, r0, r2, r3
 80023ba:	f7ff fdc3 	bl	8001f44 <DMA2D_ExternalJobCompleted>
            if (!queue.isEmpty() && isAllowed)
 80023be:	6860      	ldr	r0, [r4, #4]
 80023c0:	6803      	ldr	r3, [r0, #0]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	4798      	blx	r3
 80023c6:	2800      	cmp	r0, #0
 80023c8:	d1ec      	bne.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
 80023ca:	7a63      	ldrb	r3, [r4, #9]
 80023cc:	2b00      	cmp	r3, #0
 80023ce:	d0e9      	beq.n	80023a4 <_ZN8STM32DMA18signalDMAInterruptEv+0x34>
                execute();
 80023d0:	6823      	ldr	r3, [r4, #0]
                started_by_external_job = false;
 80023d2:	f884 0da0 	strb.w	r0, [r4, #3488]	@ 0xda0
                execute();
 80023d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80023d8:	4620      	mov	r0, r4
    }
 80023da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
 80023de:	4718      	bx	r3
 80023e0:	20000700 	.word	0x20000700
 80023e4:	20000004 	.word	0x20000004
 80023e8:	200006fc 	.word	0x200006fc

080023ec <_ZN8STM32DMA5startEv>:
    virtual void start()
 80023ec:	b510      	push	{r4, lr}
 80023ee:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
 80023f0:	6840      	ldr	r0, [r0, #4]
 80023f2:	6803      	ldr	r3, [r0, #0]
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	4798      	blx	r3
 80023f8:	b958      	cbnz	r0, 8002412 <_ZN8STM32DMA5startEv+0x26>
 80023fa:	7a63      	ldrb	r3, [r4, #9]
 80023fc:	b14b      	cbz	r3, 8002412 <_ZN8STM32DMA5startEv+0x26>
 80023fe:	7a23      	ldrb	r3, [r4, #8]
 8002400:	b93b      	cbnz	r3, 8002412 <_ZN8STM32DMA5startEv+0x26>
                started_by_external_job = false;
 8002402:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
 8002406:	6823      	ldr	r3, [r4, #0]
 8002408:	4620      	mov	r0, r4
    }
 800240a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
 800240e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002410:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
 8002412:	221c      	movs	r2, #28
 8002414:	4b07      	ldr	r3, [pc, #28]	@ (8002434 <_ZN8STM32DMA5startEv+0x48>)
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	4353      	muls	r3, r2
 800241a:	4a07      	ldr	r2, [pc, #28]	@ (8002438 <_ZN8STM32DMA5startEv+0x4c>)
 800241c:	5cd3      	ldrb	r3, [r2, r3]
 800241e:	2b01      	cmp	r3, #1
 8002420:	d106      	bne.n	8002430 <_ZN8STM32DMA5startEv+0x44>
 8002422:	7a22      	ldrb	r2, [r4, #8]
 8002424:	b922      	cbnz	r2, 8002430 <_ZN8STM32DMA5startEv+0x44>
            externalJobExecute();
 8002426:	4620      	mov	r0, r4
            started_by_external_job = true;
 8002428:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            externalJobExecute();
 800242c:	f7ff ff88 	bl	8002340 <_ZN8STM32DMA18externalJobExecuteEv>
    }
 8002430:	bd10      	pop	{r4, pc}
 8002432:	bf00      	nop
 8002434:	20000700 	.word	0x20000700
 8002438:	20000004 	.word	0x20000004

0800243c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 800243c:	b570      	push	{r4, r5, r6, lr}
 800243e:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002440:	2600      	movs	r6, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
 8002442:	4625      	mov	r5, r4
 8002444:	4b0a      	ldr	r3, [pc, #40]	@ (8002470 <_ZN8STM32DMAC1Ev+0x34>)
 8002446:	300c      	adds	r0, #12
 8002448:	6060      	str	r0, [r4, #4]
 800244a:	7226      	strb	r6, [r4, #8]
 800244c:	7266      	strb	r6, [r4, #9]
 800244e:	f845 3b20 	str.w	r3, [r5], #32
 8002452:	2260      	movs	r2, #96	@ 0x60
 8002454:	4629      	mov	r1, r5
 8002456:	f009 fc29 	bl	800bcac <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800245a:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 800245e:	60ee      	str	r6, [r5, #12]
 8002460:	3524      	adds	r5, #36	@ 0x24
 8002462:	429d      	cmp	r5, r3
 8002464:	d1fb      	bne.n	800245e <_ZN8STM32DMAC1Ev+0x22>
}
 8002466:	4620      	mov	r0, r4
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
 8002468:	f884 6da0 	strb.w	r6, [r4, #3488]	@ 0xda0
}
 800246c:	bd70      	pop	{r4, r5, r6, pc}
 800246e:	bf00      	nop
 8002470:	08033ed0 	.word	0x08033ed0

08002474 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002474:	2001      	movs	r0, #1
 8002476:	4770      	bx	lr

08002478 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002478:	200c      	movs	r0, #12
 800247a:	4770      	bx	lr

0800247c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800247c:	230c      	movs	r3, #12
 800247e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002482:	3008      	adds	r0, #8
 8002484:	4770      	bx	lr

08002486 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002486:	230c      	movs	r3, #12
 8002488:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800248c:	3008      	adds	r0, #8
 800248e:	4770      	bx	lr

08002490 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002490:	2001      	movs	r0, #1
 8002492:	4770      	bx	lr

08002494 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002494:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8002498:	4770      	bx	lr

0800249a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800249a:	f44f 7396 	mov.w	r3, #300	@ 0x12c
 800249e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80024a2:	3008      	adds	r0, #8
 80024a4:	4770      	bx	lr

080024a6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024a6:	f44f 7396 	mov.w	r3, #300	@ 0x12c
 80024aa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80024ae:	3008      	adds	r0, #8
 80024b0:	4770      	bx	lr

080024b2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80024b2:	2001      	movs	r0, #1
 80024b4:	4770      	bx	lr

080024b6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80024b6:	2010      	movs	r0, #16
 80024b8:	4770      	bx	lr

080024ba <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024ba:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80024be:	3008      	adds	r0, #8
 80024c0:	4770      	bx	lr

080024c2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80024c2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80024c6:	3008      	adds	r0, #8
 80024c8:	4770      	bx	lr

080024ca <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoGameScreen1ScreenNoTransition();
 80024ca:	4608      	mov	r0, r1
 80024cc:	f000 be82 	b.w	80031d4 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>

080024d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80024d0:	b510      	push	{r4, lr}
 80024d2:	4604      	mov	r4, r0
 80024d4:	4b02      	ldr	r3, [pc, #8]	@ (80024e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80024d6:	6003      	str	r3, [r0, #0]
 80024d8:	f008 fa33 	bl	800a942 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80024dc:	4620      	mov	r0, r4
 80024de:	bd10      	pop	{r4, pc}
 80024e0:	08033f88 	.word	0x08033f88

080024e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80024e4:	b510      	push	{r4, lr}
 80024e6:	4604      	mov	r4, r0
 80024e8:	f7ff fff2 	bl	80024d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80024ec:	4620      	mov	r0, r4
 80024ee:	2114      	movs	r1, #20
 80024f0:	f02e fe29 	bl	8031146 <_ZdlPvj>
 80024f4:	4620      	mov	r0, r4
 80024f6:	bd10      	pop	{r4, pc}

080024f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80024f8:	b510      	push	{r4, lr}
 80024fa:	4604      	mov	r4, r0
 80024fc:	4b02      	ldr	r3, [pc, #8]	@ (8002508 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80024fe:	6003      	str	r3, [r0, #0]
 8002500:	f008 fa1f 	bl	800a942 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002504:	4620      	mov	r0, r4
 8002506:	bd10      	pop	{r4, pc}
 8002508:	08033f54 	.word	0x08033f54

0800250c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800250c:	b510      	push	{r4, lr}
 800250e:	4604      	mov	r4, r0
 8002510:	f7ff fff2 	bl	80024f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002514:	4620      	mov	r0, r4
 8002516:	f44f 719a 	mov.w	r1, #308	@ 0x134
 800251a:	f02e fe14 	bl	8031146 <_ZdlPvj>
 800251e:	4620      	mov	r0, r4
 8002520:	bd10      	pop	{r4, pc}
	...

08002524 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002524:	b510      	push	{r4, lr}
 8002526:	4604      	mov	r4, r0
 8002528:	4b02      	ldr	r3, [pc, #8]	@ (8002534 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800252a:	6003      	str	r3, [r0, #0]
 800252c:	f008 fa09 	bl	800a942 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002530:	4620      	mov	r0, r4
 8002532:	bd10      	pop	{r4, pc}
 8002534:	08033f20 	.word	0x08033f20

08002538 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002538:	b510      	push	{r4, lr}
 800253a:	4604      	mov	r4, r0
 800253c:	f7ff fff2 	bl	8002524 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002540:	4620      	mov	r0, r4
 8002542:	2118      	movs	r1, #24
 8002544:	f02e fdff 	bl	8031146 <_ZdlPvj>
 8002548:	4620      	mov	r0, r4
 800254a:	bd10      	pop	{r4, pc}

0800254c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800254c:	b510      	push	{r4, lr}
 800254e:	4604      	mov	r4, r0
 8002550:	4b07      	ldr	r3, [pc, #28]	@ (8002570 <_ZN12FrontendHeapD1Ev+0x24>)
 8002552:	6003      	str	r3, [r0, #0]
 8002554:	f500 70b0 	add.w	r0, r0, #352	@ 0x160
 8002558:	f7ff ffba 	bl	80024d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800255c:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8002560:	f7ff ffca 	bl	80024f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002564:	f104 0014 	add.w	r0, r4, #20
 8002568:	f7ff ffdc 	bl	8002524 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800256c:	4620      	mov	r0, r4
 800256e:	bd10      	pop	{r4, pc}
 8002570:	08033fbc 	.word	0x08033fbc

08002574 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002574:	b508      	push	{r3, lr}
 8002576:	4802      	ldr	r0, [pc, #8]	@ (8002580 <__tcf_0+0xc>)
 8002578:	f7ff ffe8 	bl	800254c <_ZN12FrontendHeapD1Ev>
 800257c:	bd08      	pop	{r3, pc}
 800257e:	bf00      	nop
 8002580:	2000b610 	.word	0x2000b610

08002584 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002584:	b510      	push	{r4, lr}
 8002586:	4604      	mov	r4, r0
 8002588:	f7ff ffe0 	bl	800254c <_ZN12FrontendHeapD1Ev>
 800258c:	4620      	mov	r0, r4
 800258e:	f44f 7135 	mov.w	r1, #724	@ 0x2d4
 8002592:	f02e fdd8 	bl	8031146 <_ZdlPvj>
 8002596:	4620      	mov	r0, r4
 8002598:	bd10      	pop	{r4, pc}
	...

0800259c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 800259c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80025a0:	f000 fcb4 	bl	8002f0c <_ZN14BitmapDatabase11getInstanceEv>
 80025a4:	2400      	movs	r4, #0
 80025a6:	4605      	mov	r5, r0
 80025a8:	f000 fcb4 	bl	8002f14 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80025ac:	4623      	mov	r3, r4
 80025ae:	4601      	mov	r1, r0
 80025b0:	4622      	mov	r2, r4
 80025b2:	4628      	mov	r0, r5
 80025b4:	9400      	str	r4, [sp, #0]
 80025b6:	f00d fce9 	bl	800ff8c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);

    display.setFrameBufferFormat(Bitmap::RGB565);
 80025ba:	4d28      	ldr	r5, [pc, #160]	@ (800265c <touchgfx_init+0xc0>)
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80025bc:	4a28      	ldr	r2, [pc, #160]	@ (8002660 <touchgfx_init+0xc4>)
 80025be:	4b29      	ldr	r3, [pc, #164]	@ (8002664 <touchgfx_init+0xc8>)
    Texts::setLanguage(0);
 80025c0:	4620      	mov	r0, r4
 80025c2:	601a      	str	r2, [r3, #0]
 80025c4:	f001 f8a2 	bl	800370c <_ZN8touchgfx5Texts11setLanguageEt>
    display.setFrameBufferFormat(Bitmap::RGB565);
 80025c8:	4621      	mov	r1, r4
 80025ca:	4628      	mov	r0, r5
 80025cc:	f022 fc7c 	bl	8024ec8 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 80025d0:	4b25      	ldr	r3, [pc, #148]	@ (8002668 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 80025d2:	4826      	ldr	r0, [pc, #152]	@ (800266c <touchgfx_init+0xd0>)
 80025d4:	60ab      	str	r3, [r5, #8]
 80025d6:	f00d fc41 	bl	800fe5c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
        static FrontendHeap instance;
 80025da:	4d25      	ldr	r5, [pc, #148]	@ (8002670 <touchgfx_init+0xd4>)
 80025dc:	e8d5 3faf 	lda	r3, [r5]
 80025e0:	07db      	lsls	r3, r3, #31
 80025e2:	d435      	bmi.n	8002650 <touchgfx_init+0xb4>
 80025e4:	4628      	mov	r0, r5
 80025e6:	f02e fdb0 	bl	803114a <__cxa_guard_acquire>
 80025ea:	b388      	cbz	r0, 8002650 <touchgfx_init+0xb4>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80025ec:	4c21      	ldr	r4, [pc, #132]	@ (8002674 <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80025ee:	4b22      	ldr	r3, [pc, #136]	@ (8002678 <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80025f0:	f504 76bc 	add.w	r6, r4, #376	@ 0x178
        : presenterStorage(pres),
 80025f4:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80025f8:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 80025fc:	f504 77b0 	add.w	r7, r4, #352	@ 0x160
 8002600:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 8002602:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002604:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002608:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 800260a:	6126      	str	r6, [r4, #16]
 800260c:	f008 f99a 	bl	800a944 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002610:	4b1a      	ldr	r3, [pc, #104]	@ (800267c <touchgfx_init+0xe0>)
 8002612:	4640      	mov	r0, r8
 8002614:	6163      	str	r3, [r4, #20]
 8002616:	f008 f995 	bl	800a944 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800261a:	4b19      	ldr	r3, [pc, #100]	@ (8002680 <touchgfx_init+0xe4>)
 800261c:	4638      	mov	r0, r7
 800261e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002620:	f008 f990 	bl	800a944 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002624:	4b17      	ldr	r3, [pc, #92]	@ (8002684 <touchgfx_init+0xe8>)
 8002626:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800262a:	f8c4 3160 	str.w	r3, [r4, #352]	@ 0x160
 800262e:	f001 f97a 	bl	8003926 <_ZN5ModelC1Ev>
 8002632:	4622      	mov	r2, r4
 8002634:	f504 71ba 	add.w	r1, r4, #372	@ 0x174
 8002638:	4630      	mov	r0, r6
 800263a:	f001 f8d3 	bl	80037e4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800263e:	4630      	mov	r0, r6
 8002640:	f000 fdc8 	bl	80031d4 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8002644:	4810      	ldr	r0, [pc, #64]	@ (8002688 <touchgfx_init+0xec>)
 8002646:	f02f ff75 	bl	8032534 <atexit>
 800264a:	4628      	mov	r0, r5
 800264c:	f02e fd89 	bl	8031162 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002650:	480e      	ldr	r0, [pc, #56]	@ (800268c <touchgfx_init+0xf0>)
}
 8002652:	b002      	add	sp, #8
 8002654:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002658:	f7fe bde8 	b.w	800122c <_ZN11TouchGFXHAL10initializeEv>
 800265c:	2000a014 	.word	0x2000a014
 8002660:	20009ff4 	.word	0x20009ff4
 8002664:	20082f64 	.word	0x20082f64
 8002668:	20009ff8 	.word	0x20009ff8
 800266c:	20000040 	.word	0x20000040
 8002670:	2000b60c 	.word	0x2000b60c
 8002674:	2000b610 	.word	0x2000b610
 8002678:	08033fbc 	.word	0x08033fbc
 800267c:	08033f20 	.word	0x08033f20
 8002680:	08033f54 	.word	0x08033f54
 8002684:	08033f88 	.word	0x08033f88
 8002688:	08002575 	.word	0x08002575
 800268c:	20009f40 	.word	0x20009f40

08002690 <touchgfx_components_init>:

void touchgfx_components_init()
{
 8002690:	b508      	push	{r3, lr}
    nema_init();
 8002692:	f00e fa31 	bl	8010af8 <nema_init>
    nema_vg_init_stencil_pool(800, 480, 1);
 8002696:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 800269a:	f44f 7048 	mov.w	r0, #800	@ 0x320
 800269e:	2201      	movs	r2, #1
 80026a0:	f016 fc8e 	bl	8018fc0 <nema_vg_init_stencil_pool>
    nema_vg_handle_large_coords(1, 1);
}
 80026a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    nema_vg_handle_large_coords(1, 1);
 80026a8:	2101      	movs	r1, #1
 80026aa:	4608      	mov	r0, r1
 80026ac:	f01a ba42 	b.w	801cb34 <nema_vg_handle_large_coords>

080026b0 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80026b0:	4801      	ldr	r0, [pc, #4]	@ (80026b8 <touchgfx_taskEntry+0x8>)
 80026b2:	f008 bc56 	b.w	800af62 <_ZN8touchgfx3HAL9taskEntryEv>
 80026b6:	bf00      	nop
 80026b8:	20009f40 	.word	0x20009f40

080026bc <_GLOBAL__sub_I_touchgfx_init>:
}
 80026bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
static STM32DMA dma;
 80026be:	4d13      	ldr	r5, [pc, #76]	@ (800270c <_GLOBAL__sub_I_touchgfx_init+0x50>)
{
public:

    STM32TouchController() {}
 80026c0:	4b13      	ldr	r3, [pc, #76]	@ (8002710 <_GLOBAL__sub_I_touchgfx_init+0x54>)
 80026c2:	4f14      	ldr	r7, [pc, #80]	@ (8002714 <_GLOBAL__sub_I_touchgfx_init+0x58>)
static LCDGPU2D display;
 80026c4:	4e14      	ldr	r6, [pc, #80]	@ (8002718 <_GLOBAL__sub_I_touchgfx_init+0x5c>)
static STM32DMA dma;
 80026c6:	4628      	mov	r0, r5
 80026c8:	603b      	str	r3, [r7, #0]
 80026ca:	f7ff feb7 	bl	800243c <_ZN8STM32DMAC1Ev>
static LCDGPU2D display;
 80026ce:	4630      	mov	r0, r6
 80026d0:	f022 fbec 	bl	8024eac <_ZN8touchgfx8LCDGPU2DC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 80026d4:	4811      	ldr	r0, [pc, #68]	@ (800271c <_GLOBAL__sub_I_touchgfx_init+0x60>)
 80026d6:	f00b fdf7 	bl	800e2c8 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        touchgfx::HALGPU2D(dma, display, tc, width, height)
 80026da:	f44f 7348 	mov.w	r3, #800	@ 0x320
 80026de:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80026e2:	4c0f      	ldr	r4, [pc, #60]	@ (8002720 <_GLOBAL__sub_I_touchgfx_init+0x64>)
 80026e4:	e9cd 3200 	strd	r3, r2, [sp]
 80026e8:	4629      	mov	r1, r5
 80026ea:	463b      	mov	r3, r7
 80026ec:	4632      	mov	r2, r6
 80026ee:	4620      	mov	r0, r4
 80026f0:	f01e f9ee 	bl	8020ad0 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80026f4:	4b0b      	ldr	r3, [pc, #44]	@ (8002724 <_GLOBAL__sub_I_touchgfx_init+0x68>)
 80026f6:	6023      	str	r3, [r4, #0]
        : cc_consumed(0),
 80026f8:	2300      	movs	r3, #0
 80026fa:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
          cc_in(0)
 80026fe:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 8002702:	4b09      	ldr	r3, [pc, #36]	@ (8002728 <_GLOBAL__sub_I_touchgfx_init+0x6c>)
 8002704:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
}
 8002708:	b003      	add	sp, #12
 800270a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800270c:	2000a864 	.word	0x2000a864
 8002710:	08033714 	.word	0x08033714
 8002714:	2000b608 	.word	0x2000b608
 8002718:	2000a014 	.word	0x2000a014
 800271c:	20009ff8 	.word	0x20009ff8
 8002720:	20009f40 	.word	0x20009f40
 8002724:	080338a0 	.word	0x080338a0
 8002728:	080336d0 	.word	0x080336d0

0800272c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 800272c:	4801      	ldr	r0, [pc, #4]	@ (8002734 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800272e:	f7ff bc95 	b.w	800205c <_ZN8STM32DMAD1Ev>
 8002732:	bf00      	nop
 8002734:	2000a864 	.word	0x2000a864

08002738 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static GPU2DVectorRenderer renderer;
 8002738:	4770      	bx	lr
	...

0800273c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800273c:	2290      	movs	r2, #144	@ 0x90
 800273e:	4b04      	ldr	r3, [pc, #16]	@ (8002750 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x14>)
 8002740:	f883 2376 	strb.w	r2, [r3, #886]	@ 0x376
 8002744:	f883 2387 	strb.w	r2, [r3, #903]	@ 0x387
 8002748:	f883 2384 	strb.w	r2, [r3, #900]	@ 0x384
void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
    NVIC_SetPriority(GPU2D_IRQn, 9);
}
 800274c:	4770      	bx	lr
 800274e:	bf00      	nop
 8002750:	e000e100 	.word	0xe000e100

08002754 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(GPU2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002754:	4a09      	ldr	r2, [pc, #36]	@ (800277c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8002756:	490a      	ldr	r1, [pc, #40]	@ (8002780 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8002758:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800275a:	480a      	ldr	r0, [pc, #40]	@ (8002784 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800275c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002760:	3b01      	subs	r3, #1
 8002762:	b29b      	uxth	r3, r3
 8002764:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002766:	6911      	ldr	r1, [r2, #16]
 8002768:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800276c:	3901      	subs	r1, #1
 800276e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002770:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002772:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8002774:	f043 0301 	orr.w	r3, r3, #1
 8002778:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800277a:	4770      	bx	lr
 800277c:	40016800 	.word	0x40016800
 8002780:	2000b8e6 	.word	0x2000b8e6
 8002784:	2000b8e4 	.word	0x2000b8e4

08002788 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HALGPU2D::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002788:	4b01      	ldr	r3, [pc, #4]	@ (8002790 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800278a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 800278e:	4770      	bx	lr
 8002790:	40016800 	.word	0x40016800

08002794 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002794:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002796:	4b02      	ldr	r3, [pc, #8]	@ (80027a0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)
 8002798:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800279c:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800279e:	4770      	bx	lr
 80027a0:	40016800 	.word	0x40016800

080027a4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
 80027a4:	4770      	bx	lr

080027a6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
 80027a6:	2324      	movs	r3, #36	@ 0x24
 80027a8:	fb03 0001 	mla	r0, r3, r1, r0
 80027ac:	2300      	movs	r3, #0
 80027ae:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
 80027b2:	4770      	bx	lr

080027b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
 80027b4:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
 80027b8:	4770      	bx	lr

080027ba <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
 80027ba:	b510      	push	{r4, lr}
 80027bc:	4604      	mov	r4, r0
 80027be:	2130      	movs	r1, #48	@ 0x30
 80027c0:	f02e fcc1 	bl	8031146 <_ZdlPvj>
 80027c4:	4620      	mov	r0, r4
 80027c6:	bd10      	pop	{r4, pc}

080027c8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80027c8:	b538      	push	{r3, r4, r5, lr}
 80027ca:	4604      	mov	r4, r0
    HALGPU2D::initialize(8192);
 80027cc:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80027d0:	f01e f9e6 	bl	8020ba0 <_ZN8touchgfx8HALGPU2D10initializeEi>
    registerEventListener(*(Application::getInstance()));
 80027d4:	6823      	ldr	r3, [r4, #0]
 80027d6:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 80027d8:	f00a fc4a 	bl	800d070 <_ZN8touchgfx11Application11getInstanceEv>
 80027dc:	4601      	mov	r1, r0
 80027de:	4620      	mov	r0, r4
 80027e0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80027e2:	6823      	ldr	r3, [r4, #0]
 80027e4:	4a06      	ldr	r2, [pc, #24]	@ (8002800 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x38>)
 80027e6:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 80027ea:	4620      	mov	r0, r4
 80027ec:	2300      	movs	r3, #0
 80027ee:	4905      	ldr	r1, [pc, #20]	@ (8002804 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x3c>)
 80027f0:	47a8      	blx	r5
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
 80027f2:	6862      	ldr	r2, [r4, #4]
 80027f4:	4b04      	ldr	r3, [pc, #16]	@ (8002808 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x40>)
 80027f6:	645a      	str	r2, [r3, #68]	@ 0x44
        mjpegDecoders[index] = &decoder;
 80027f8:	4a04      	ldr	r2, [pc, #16]	@ (800280c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>)
 80027fa:	6053      	str	r3, [r2, #4]
}
 80027fc:	bd38      	pop	{r3, r4, r5, pc}
 80027fe:	bf00      	nop
 8002800:	20140f28 	.word	0x20140f28
 8002804:	20085728 	.word	0x20085728
 8002808:	2000b91c 	.word	0x2000b91c
 800280c:	2000b8ec 	.word	0x2000b8ec

08002810 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
 8002810:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002812:	4604      	mov	r4, r0
 8002814:	4610      	mov	r0, r2
        assert(handle < no_streams);
 8002816:	b129      	cbz	r1, 8002824 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
 8002818:	21a9      	movs	r1, #169	@ 0xa9
 800281a:	4b3e      	ldr	r3, [pc, #248]	@ (8002914 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x104>)
 800281c:	4a3e      	ldr	r2, [pc, #248]	@ (8002918 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x108>)
 800281e:	483f      	ldr	r0, [pc, #252]	@ (800291c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x10c>)
 8002820:	f02f fe6a 	bl	80324f8 <__assert_func>
        if (stream.isPlaying || stream.isShowingOneFrame)
 8002824:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8002828:	b91b      	cbnz	r3, 8002832 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x22>
 800282a:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800282e:	2b00      	cmp	r3, #0
 8002830:	d06e      	beq.n	8002910 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x100>
            stream.isShowingOneFrame = false;
 8002832:	2700      	movs	r7, #0
        return vSyncForFrame;
 8002834:	4b3a      	ldr	r3, [pc, #232]	@ (8002920 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x110>)
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	f893 206b 	ldrb.w	r2, [r3, #107]	@ 0x6b
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
 800283c:	6923      	ldr	r3, [r4, #16]
            stream.isShowingOneFrame = false;
 800283e:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
 8002842:	4413      	add	r3, r2
 8002844:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
 8002846:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800284a:	2b00      	cmp	r3, #0
 800284c:	d05c      	beq.n	8002908 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf8>
                widget.invalidate();
 800284e:	6803      	ldr	r3, [r0, #0]
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
 8002850:	6865      	ldr	r5, [r4, #4]
                widget.invalidate();
 8002852:	695b      	ldr	r3, [r3, #20]
 8002854:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
 8002856:	69e6      	ldr	r6, [r4, #28]
 8002858:	682b      	ldr	r3, [r5, #0]
 800285a:	2e00      	cmp	r6, #0
 800285c:	d02d      	beq.n	80028ba <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xaa>
                    decoder->gotoFrame(stream.seek_to_frame);
 800285e:	4631      	mov	r1, r6
 8002860:	4628      	mov	r0, r5
 8002862:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002864:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
 8002866:	682b      	ldr	r3, [r5, #0]
 8002868:	4628      	mov	r0, r5
 800286a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800286c:	69e6      	ldr	r6, [r4, #28]
 800286e:	4798      	blx	r3
 8002870:	4286      	cmp	r6, r0
 8002872:	bf2c      	ite	cs
 8002874:	2600      	movcs	r6, #0
 8002876:	2601      	movcc	r6, #1
                    stream.seek_to_frame = 0;
 8002878:	61e7      	str	r7, [r4, #28]
                stream.frameNumber = decoder->getCurrentFrameNumber();
 800287a:	682b      	ldr	r3, [r5, #0]
 800287c:	4628      	mov	r0, r5
 800287e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002880:	4798      	blx	r3
                stream.frameCount++;
 8002882:	68a3      	ldr	r3, [r4, #8]
                stream.frameNumber = decoder->getCurrentFrameNumber();
 8002884:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
 8002886:	3301      	adds	r3, #1
 8002888:	60a3      	str	r3, [r4, #8]
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameNumber to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
 800288a:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 800288e:	69a1      	ldr	r1, [r4, #24]
 8002890:	4353      	muls	r3, r2
 8002892:	68a2      	ldr	r2, [r4, #8]
 8002894:	434a      	muls	r2, r1
 8002896:	4293      	cmp	r3, r2
 8002898:	d938      	bls.n	800290c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xfc>
        {
            if (allowSkipFrames)
 800289a:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
 800289e:	b138      	cbz	r0, 80028b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa0>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
 80028a0:	1a9b      	subs	r3, r3, r2
 80028a2:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
 80028a6:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
 80028a8:	bf98      	it	ls
 80028aa:	f102 32ff 	addls.w	r2, r2, #4294967295
 80028ae:	6222      	str	r2, [r4, #32]
                }
            }
            return true;
 80028b0:	2301      	movs	r3, #1
            stream.doDecodeNextFrame = decodeForNextTick(stream);
 80028b2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
 80028b6:	4630      	mov	r0, r6
 80028b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                    if (stream.skip_frames > 0)
 80028ba:	6a22      	ldr	r2, [r4, #32]
 80028bc:	b162      	cbz	r2, 80028d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xc8>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
 80028be:	e9d3 7309 	ldrd	r7, r3, [r3, #36]	@ 0x24
 80028c2:	4628      	mov	r0, r5
 80028c4:	4798      	blx	r3
 80028c6:	6a21      	ldr	r1, [r4, #32]
 80028c8:	4401      	add	r1, r0
 80028ca:	4628      	mov	r0, r5
 80028cc:	47b8      	blx	r7
                        stream.frameCount += stream.skip_frames;
 80028ce:	68a3      	ldr	r3, [r4, #8]
 80028d0:	6a22      	ldr	r2, [r4, #32]
                        stream.skip_frames = 0;
 80028d2:	6226      	str	r6, [r4, #32]
                        stream.frameCount += stream.skip_frames;
 80028d4:	4413      	add	r3, r2
 80028d6:	60a3      	str	r3, [r4, #8]
                    if (stream.repeat)
 80028d8:	f894 6027 	ldrb.w	r6, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
 80028dc:	682b      	ldr	r3, [r5, #0]
                    if (stream.repeat)
 80028de:	b126      	cbz	r6, 80028ea <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xda>
                            hasMoreFrames = decoder->gotoNextFrame();
 80028e0:	4628      	mov	r0, r5
 80028e2:	699b      	ldr	r3, [r3, #24]
 80028e4:	4798      	blx	r3
 80028e6:	4606      	mov	r6, r0
 80028e8:	e7c7      	b.n	800287a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6a>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
 80028ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80028ec:	4628      	mov	r0, r5
 80028ee:	4798      	blx	r3
 80028f0:	682b      	ldr	r3, [r5, #0]
 80028f2:	4607      	mov	r7, r0
 80028f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80028f6:	4628      	mov	r0, r5
 80028f8:	4798      	blx	r3
 80028fa:	4287      	cmp	r7, r0
 80028fc:	d201      	bcs.n	8002902 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf2>
                            hasMoreFrames = decoder->gotoNextFrame();
 80028fe:	682b      	ldr	r3, [r5, #0]
 8002900:	e7ee      	b.n	80028e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd0>
                            stream.isPlaying = false;
 8002902:	f884 6025 	strb.w	r6, [r4, #37]	@ 0x25
 8002906:	e7b8      	b.n	800287a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6a>
        bool hasMoreFrames = true;
 8002908:	2601      	movs	r6, #1
 800290a:	e7be      	b.n	800288a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x7a>
        }
        return false;
 800290c:	2300      	movs	r3, #0
 800290e:	e7d0      	b.n	80028b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa2>
        bool hasMoreFrames = true;
 8002910:	2601      	movs	r6, #1
 8002912:	e7d0      	b.n	80028b6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xa6>
 8002914:	08033fc8 	.word	0x08033fc8
 8002918:	08033fdc 	.word	0x08033fdc
 800291c:	0803410d 	.word	0x0803410d
 8002920:	20082f08 	.word	0x20082f08

08002924 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HALGPU2D::beginFrame();
 8002924:	f01e b866 	b.w	80209f4 <_ZN8touchgfx8HALGPU2D10beginFrameEv>

08002928 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HALGPU2D::endFrame();
 8002928:	f01e b890 	b.w	8020a4c <_ZN8touchgfx8HALGPU2D8endFrameEv>

0800292c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HALGPU2D::flushFrameBuffer(rect);
 800292c:	f008 bab6 	b.w	800ae9c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002930 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HALGPU2D::blockCopy(dest, src, numBytes);
 8002930:	f008 bc25 	b.w	800b17e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002934 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
    virtual bool getIsPlaying(const Handle handle)
 8002934:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 8002936:	b131      	cbz	r1, 8002946 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x12>
 8002938:	f44f 7191 	mov.w	r1, #290	@ 0x122
 800293c:	4b03      	ldr	r3, [pc, #12]	@ (800294c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
 800293e:	4a04      	ldr	r2, [pc, #16]	@ (8002950 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
 8002940:	4804      	ldr	r0, [pc, #16]	@ (8002954 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
 8002942:	f02f fdd9 	bl	80324f8 <__assert_func>
    }
 8002946:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
 800294a:	bd08      	pop	{r3, pc}
 800294c:	08033fc8 	.word	0x08033fc8
 8002950:	08034152 	.word	0x08034152
 8002954:	0803410d 	.word	0x0803410d

08002958 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
 8002958:	b510      	push	{r4, lr}
        assert(handle < no_streams);
 800295a:	b131      	cbz	r1, 800296a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x12>
 800295c:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 8002960:	4b05      	ldr	r3, [pc, #20]	@ (8002978 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
 8002962:	4a06      	ldr	r2, [pc, #24]	@ (800297c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
 8002964:	4806      	ldr	r0, [pc, #24]	@ (8002980 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x28>)
 8002966:	f02f fdc7 	bl	80324f8 <__assert_func>
        mjpegDecoders[handle]->getVideoInfo(data);
 800296a:	6840      	ldr	r0, [r0, #4]
 800296c:	4611      	mov	r1, r2
    }
 800296e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->getVideoInfo(data);
 8002972:	6803      	ldr	r3, [r0, #0]
 8002974:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002976:	4718      	bx	r3
 8002978:	08033fc8 	.word	0x08033fc8
 800297c:	0803426c 	.word	0x0803426c
 8002980:	0803410d 	.word	0x0803410d

08002984 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
 8002984:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 8002986:	b131      	cbz	r1, 8002996 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x12>
 8002988:	f44f 718a 	mov.w	r1, #276	@ 0x114
 800298c:	4b03      	ldr	r3, [pc, #12]	@ (800299c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
 800298e:	4a04      	ldr	r2, [pc, #16]	@ (80029a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
 8002990:	4804      	ldr	r0, [pc, #16]	@ (80029a4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
 8002992:	f02f fdb1 	bl	80324f8 <__assert_func>
    }
 8002996:	68c0      	ldr	r0, [r0, #12]
 8002998:	bd08      	pop	{r3, pc}
 800299a:	bf00      	nop
 800299c:	08033fc8 	.word	0x08033fc8
 80029a0:	080343aa 	.word	0x080343aa
 80029a4:	0803410d 	.word	0x0803410d

080029a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
 80029a8:	b570      	push	{r4, r5, r6, lr}
 80029aa:	4604      	mov	r4, r0
        assert(handle < no_streams);
 80029ac:	b129      	cbz	r1, 80029ba <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x12>
 80029ae:	216e      	movs	r1, #110	@ 0x6e
 80029b0:	4b26      	ldr	r3, [pc, #152]	@ (8002a4c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa4>)
 80029b2:	4a27      	ldr	r2, [pc, #156]	@ (8002a50 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa8>)
 80029b4:	4827      	ldr	r0, [pc, #156]	@ (8002a54 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xac>)
 80029b6:	f02f fd9f 	bl	80324f8 <__assert_func>
        switch (cmd)
 80029ba:	2a05      	cmp	r2, #5
 80029bc:	d82b      	bhi.n	8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
 80029be:	e8df f002 	tbb	[pc, r2]
 80029c2:	2503      	.short	0x2503
 80029c4:	3f37302b 	.word	0x3f37302b
            if (mjpegDecoders[handle]->hasVideo())
 80029c8:	6840      	ldr	r0, [r0, #4]
 80029ca:	6803      	ldr	r3, [r0, #0]
 80029cc:	691b      	ldr	r3, [r3, #16]
 80029ce:	4798      	blx	r3
 80029d0:	b308      	cbz	r0, 8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                stream.isPlaying = true;
 80029d2:	2301      	movs	r3, #1
 80029d4:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
                stream.isShowingOneFrame = false;
 80029d8:	2300      	movs	r3, #0
 80029da:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
                stream.frameCount = 0;
 80029de:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
 80029e0:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
 80029e2:	f894 3027 	ldrb.w	r3, [r4, #39]	@ 0x27
 80029e6:	b9b3      	cbnz	r3, 8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                    MJPEGDecoder* const decoder = mjpegDecoders[handle];
 80029e8:	6864      	ldr	r4, [r4, #4]
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
 80029ea:	6823      	ldr	r3, [r4, #0]
 80029ec:	4620      	mov	r0, r4
 80029ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80029f0:	4798      	blx	r3
 80029f2:	6823      	ldr	r3, [r4, #0]
 80029f4:	4605      	mov	r5, r0
 80029f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80029f8:	4620      	mov	r0, r4
 80029fa:	4798      	blx	r3
 80029fc:	4285      	cmp	r5, r0
 80029fe:	d10a      	bne.n	8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
                        decoder->gotoNextFrame();
 8002a00:	6823      	ldr	r3, [r4, #0]
 8002a02:	4620      	mov	r0, r4
    }
 8002a04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
 8002a08:	699b      	ldr	r3, [r3, #24]
 8002a0a:	4718      	bx	r3
            stream.isPlaying = false;
 8002a0c:	2300      	movs	r3, #0
 8002a0e:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
            stream.isShowingOneFrame = false;
 8002a12:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
    }
 8002a16:	bd70      	pop	{r4, r5, r6, pc}
            stream.seek_to_frame = param;
 8002a18:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
 8002a1a:	2300      	movs	r3, #0
            stream.frameCount = 0;
 8002a1c:	60a3      	str	r3, [r4, #8]
            stream.tickCount = 0;
 8002a1e:	6123      	str	r3, [r4, #16]
            break;
 8002a20:	e7f9      	b.n	8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
            stream.seek_to_frame = param;
 8002a22:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
 8002a24:	2301      	movs	r3, #1
 8002a26:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
 8002a2a:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8002a2e:	e7f4      	b.n	8002a1a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x72>
            stream.isPlaying = false;
 8002a30:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
 8002a32:	2201      	movs	r2, #1
            stream.isPlaying = false;
 8002a34:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
            stream.isShowingOneFrame = false;
 8002a38:	f880 3026 	strb.w	r3, [r0, #38]	@ 0x26
            stream.seek_to_frame = 1;
 8002a3c:	61c2      	str	r2, [r0, #28]
 8002a3e:	e7ed      	b.n	8002a1c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x74>
            stream.repeat = (param > 0);
 8002a40:	3b00      	subs	r3, #0
 8002a42:	bf18      	it	ne
 8002a44:	2301      	movne	r3, #1
 8002a46:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
 8002a4a:	e7e4      	b.n	8002a16 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
 8002a4c:	08033fc8 	.word	0x08033fc8
 8002a50:	080344ef 	.word	0x080344ef
 8002a54:	0803410d 	.word	0x0803410d

08002a58 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
 8002a58:	b570      	push	{r4, r5, r6, lr}
 8002a5a:	4604      	mov	r4, r0
        assert(handle < no_streams);
 8002a5c:	460d      	mov	r5, r1
 8002a5e:	b129      	cbz	r1, 8002a6c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x14>
 8002a60:	215e      	movs	r1, #94	@ 0x5e
 8002a62:	4b0d      	ldr	r3, [pc, #52]	@ (8002a98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x40>)
 8002a64:	4a0d      	ldr	r2, [pc, #52]	@ (8002a9c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x44>)
 8002a66:	480e      	ldr	r0, [pc, #56]	@ (8002aa0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>)
 8002a68:	f02f fd46 	bl	80324f8 <__assert_func>
        mjpegDecoders[handle]->setVideoData(reader);
 8002a6c:	6840      	ldr	r0, [r0, #4]
 8002a6e:	4611      	mov	r1, r2
 8002a70:	6803      	ldr	r3, [r0, #0]
 8002a72:	68db      	ldr	r3, [r3, #12]
 8002a74:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002a76:	6860      	ldr	r0, [r4, #4]
 8002a78:	6803      	ldr	r3, [r0, #0]
 8002a7a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002a7c:	4798      	blx	r3
        setCommand(handle, PAUSE, 0);
 8002a7e:	6823      	ldr	r3, [r4, #0]
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002a80:	60e0      	str	r0, [r4, #12]
        setCommand(handle, PAUSE, 0);
 8002a82:	6a5e      	ldr	r6, [r3, #36]	@ 0x24
 8002a84:	4629      	mov	r1, r5
 8002a86:	462b      	mov	r3, r5
 8002a88:	4620      	mov	r0, r4
 8002a8a:	46b4      	mov	ip, r6
        stream.doDecodeNextFrame = false;
 8002a8c:	f884 5028 	strb.w	r5, [r4, #40]	@ 0x28
        setCommand(handle, PAUSE, 0);
 8002a90:	2201      	movs	r2, #1
    }
 8002a92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
 8002a96:	4760      	bx	ip
 8002a98:	08033fc8 	.word	0x08033fc8
 8002a9c:	08034653 	.word	0x08034653
 8002aa0:	0803410d 	.word	0x0803410d

08002aa4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
 8002aa4:	b570      	push	{r4, r5, r6, lr}
 8002aa6:	460d      	mov	r5, r1
 8002aa8:	4604      	mov	r4, r0
 8002aaa:	4611      	mov	r1, r2
 8002aac:	461a      	mov	r2, r3
        assert(handle < no_streams);
 8002aae:	b12d      	cbz	r5, 8002abc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x18>
 8002ab0:	214e      	movs	r1, #78	@ 0x4e
 8002ab2:	4b0d      	ldr	r3, [pc, #52]	@ (8002ae8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x44>)
 8002ab4:	4a0d      	ldr	r2, [pc, #52]	@ (8002aec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x48>)
 8002ab6:	480e      	ldr	r0, [pc, #56]	@ (8002af0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4c>)
 8002ab8:	f02f fd1e 	bl	80324f8 <__assert_func>
        mjpegDecoders[handle]->setVideoData(movie, length);
 8002abc:	6840      	ldr	r0, [r0, #4]
 8002abe:	6803      	ldr	r3, [r0, #0]
 8002ac0:	689b      	ldr	r3, [r3, #8]
 8002ac2:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002ac4:	6860      	ldr	r0, [r4, #4]
 8002ac6:	6803      	ldr	r3, [r0, #0]
 8002ac8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002aca:	4798      	blx	r3
        setCommand(handle, PAUSE, 0);
 8002acc:	6823      	ldr	r3, [r4, #0]
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
 8002ace:	60e0      	str	r0, [r4, #12]
        setCommand(handle, PAUSE, 0);
 8002ad0:	6a5e      	ldr	r6, [r3, #36]	@ 0x24
 8002ad2:	4629      	mov	r1, r5
 8002ad4:	462b      	mov	r3, r5
 8002ad6:	4620      	mov	r0, r4
 8002ad8:	46b4      	mov	ip, r6
        stream.doDecodeNextFrame = false;
 8002ada:	f884 5028 	strb.w	r5, [r4, #40]	@ 0x28
        setCommand(handle, PAUSE, 0);
 8002ade:	2201      	movs	r2, #1
    }
 8002ae0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
 8002ae4:	4760      	bx	ip
 8002ae6:	bf00      	nop
 8002ae8:	08033fc8 	.word	0x08033fc8
 8002aec:	08034789 	.word	0x08034789
 8002af0:	0803410d 	.word	0x0803410d

08002af4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
 8002af4:	b508      	push	{r3, lr}
        assert(handle < no_streams);
 8002af6:	b129      	cbz	r1, 8002b04 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x10>
 8002af8:	2140      	movs	r1, #64	@ 0x40
 8002afa:	4b05      	ldr	r3, [pc, #20]	@ (8002b10 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
 8002afc:	4a05      	ldr	r2, [pc, #20]	@ (8002b14 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
 8002afe:	4806      	ldr	r0, [pc, #24]	@ (8002b18 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
 8002b00:	f02f fcfa 	bl	80324f8 <__assert_func>
        stream.frame_rate_video = video_frames;
 8002b04:	e9c0 3205 	strd	r3, r2, [r0, #20]
        stream.frameCount = 0;
 8002b08:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
 8002b0a:	6101      	str	r1, [r0, #16]
    }
 8002b0c:	bd08      	pop	{r3, pc}
 8002b0e:	bf00      	nop
 8002b10:	08033fc8 	.word	0x08033fc8
 8002b14:	080348f4 	.word	0x080348f4
 8002b18:	0803410d 	.word	0x0803410d

08002b1c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
 8002b1c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8002b20:	4604      	mov	r4, r0
 8002b22:	4615      	mov	r5, r2
 8002b24:	461f      	mov	r7, r3
        assert(handle < no_streams);
 8002b26:	b129      	cbz	r1, 8002b34 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x18>
 8002b28:	21e9      	movs	r1, #233	@ 0xe9
 8002b2a:	4b18      	ldr	r3, [pc, #96]	@ (8002b8c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
 8002b2c:	4a18      	ldr	r2, [pc, #96]	@ (8002b90 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
 8002b2e:	4819      	ldr	r0, [pc, #100]	@ (8002b94 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
 8002b30:	f02f fce2 	bl	80324f8 <__assert_func>
        if (mjpegDecoders[handle]->hasVideo())
 8002b34:	6840      	ldr	r0, [r0, #4]
 8002b36:	6803      	ldr	r3, [r0, #0]
 8002b38:	691b      	ldr	r3, [r3, #16]
 8002b3a:	4798      	blx	r3
 8002b3c:	b310      	cbz	r0, 8002b84 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x68>
        return instance;
 8002b3e:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 8002b9c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x80>
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
 8002b42:	2101      	movs	r1, #1
 8002b44:	f8d8 0000 	ldr.w	r0, [r8]
 8002b48:	f008 ffb2 	bl	800bab0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8002b4c:	4606      	mov	r6, r0
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
 8002b4e:	4639      	mov	r1, r7
 8002b50:	4668      	mov	r0, sp
 8002b52:	f00b fb9f 	bl	800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
 8002b56:	4b10      	ldr	r3, [pc, #64]	@ (8002b98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x7c>)
 8002b58:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8002b5c:	881b      	ldrh	r3, [r3, #0]
 8002b5e:	f9bd 2000 	ldrsh.w	r2, [sp]
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
 8002b62:	6860      	ldr	r0, [r4, #4]
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
 8002b64:	fb03 2201 	mla	r2, r3, r1, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
 8002b68:	6801      	ldr	r1, [r0, #0]
 8002b6a:	eb06 0242 	add.w	r2, r6, r2, lsl #1
 8002b6e:	69cc      	ldr	r4, [r1, #28]
 8002b70:	4629      	mov	r1, r5
 8002b72:	47a0      	blx	r4
 8002b74:	f8d8 0000 	ldr.w	r0, [r8]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
 8002b78:	6803      	ldr	r3, [r0, #0]
 8002b7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    }
 8002b7c:	b002      	add	sp, #8
 8002b7e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
 8002b82:	4718      	bx	r3
    }
 8002b84:	b002      	add	sp, #8
 8002b86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002b8a:	bf00      	nop
 8002b8c:	08033fc8 	.word	0x08033fc8
 8002b90:	08034a40 	.word	0x08034a40
 8002b94:	0803410d 	.word	0x0803410d
 8002b98:	20082f02 	.word	0x20082f02
 8002b9c:	20082f08 	.word	0x20082f08

08002ba0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
 8002ba0:	b508      	push	{r3, lr}
 8002ba2:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
 8002ba4:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
 8002ba8:	b130      	cbz	r0, 8002bb8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x18>
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
 8002baa:	f240 116b 	movw	r1, #363	@ 0x16b
 8002bae:	4b07      	ldr	r3, [pc, #28]	@ (8002bcc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
 8002bb0:	4a07      	ldr	r2, [pc, #28]	@ (8002bd0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
 8002bb2:	4808      	ldr	r0, [pc, #32]	@ (8002bd4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
 8002bb4:	f02f fca0 	bl	80324f8 <__assert_func>
        streams[handle].isActive = true;
 8002bb8:	2201      	movs	r2, #1
 8002bba:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
 8002bbe:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
 8002bc2:	86c8      	strh	r0, [r1, #54]	@ 0x36
        bufferHeight = height;
 8002bc4:	8708      	strh	r0, [r1, #56]	@ 0x38
        buffer = videoBuffer;
 8002bc6:	6308      	str	r0, [r1, #48]	@ 0x30
    }
 8002bc8:	bd08      	pop	{r3, pc}
 8002bca:	bf00      	nop
 8002bcc:	08034b87 	.word	0x08034b87
 8002bd0:	08034bb7 	.word	0x08034bb7
 8002bd4:	0803410d 	.word	0x0803410d

08002bd8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002bd8:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8002bdc:	4b0a      	ldr	r3, [pc, #40]	@ (8002c08 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x30>)
 8002bde:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __ASM volatile ("dsb 0xF":::"memory");
 8002be2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002be6:	f3bf 8f6f 	isb	sy
 8002bea:	2280      	movs	r2, #128	@ 0x80
 8002bec:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  __ASM volatile ("dsb 0xF":::"memory");
 8002bf0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002bf4:	f3bf 8f6f 	isb	sy
 8002bf8:	2210      	movs	r2, #16
 8002bfa:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  __ASM volatile ("dsb 0xF":::"memory");
 8002bfe:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002c02:	f3bf 8f6f 	isb	sy
}
 8002c06:	4770      	bx	lr
 8002c08:	e000e100 	.word	0xe000e100

08002c0c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002c0c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8002c10:	4b03      	ldr	r3, [pc, #12]	@ (8002c20 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x14>)
 8002c12:	60da      	str	r2, [r3, #12]
 8002c14:	2280      	movs	r2, #128	@ 0x80
 8002c16:	611a      	str	r2, [r3, #16]
 8002c18:	2210      	movs	r2, #16
 8002c1a:	611a      	str	r2, [r3, #16]
}
 8002c1c:	4770      	bx	lr
 8002c1e:	bf00      	nop
 8002c20:	e000e100 	.word	0xe000e100

08002c24 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8002c24:	b510      	push	{r4, lr}
    static GPU2DVectorRenderer renderer;
 8002c26:	4c08      	ldr	r4, [pc, #32]	@ (8002c48 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x24>)
 8002c28:	e8d4 3faf 	lda	r3, [r4]
 8002c2c:	07db      	lsls	r3, r3, #31
 8002c2e:	d409      	bmi.n	8002c44 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x20>
 8002c30:	4620      	mov	r0, r4
 8002c32:	f02e fa8a 	bl	803114a <__cxa_guard_acquire>
 8002c36:	b128      	cbz	r0, 8002c44 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x20>
 8002c38:	4804      	ldr	r0, [pc, #16]	@ (8002c4c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x28>)
 8002c3a:	f02f fc7b 	bl	8032534 <atexit>
 8002c3e:	4620      	mov	r0, r4
 8002c40:	f02e fa8f 	bl	8031162 <__cxa_guard_release>
}
 8002c44:	4802      	ldr	r0, [pc, #8]	@ (8002c50 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x2c>)
 8002c46:	bd10      	pop	{r4, pc}
 8002c48:	2000b8e8 	.word	0x2000b8e8
 8002c4c:	08002739 	.word	0x08002739
 8002c50:	20000044 	.word	0x20000044

08002c54 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002c54:	b510      	push	{r4, lr}
 8002c56:	4c14      	ldr	r4, [pc, #80]	@ (8002ca8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002c58:	6823      	ldr	r3, [r4, #0]
 8002c5a:	b323      	cbz	r3, 8002ca6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002c5c:	4b13      	ldr	r3, [pc, #76]	@ (8002cac <HAL_LTDC_LineEventCallback+0x58>)
 8002c5e:	4a14      	ldr	r2, [pc, #80]	@ (8002cb0 <HAL_LTDC_LineEventCallback+0x5c>)
 8002c60:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c62:	8811      	ldrh	r1, [r2, #0]
 8002c64:	428b      	cmp	r3, r1
 8002c66:	d113      	bne.n	8002c90 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002c68:	4b12      	ldr	r3, [pc, #72]	@ (8002cb4 <HAL_LTDC_LineEventCallback+0x60>)
 8002c6a:	8819      	ldrh	r1, [r3, #0]
 8002c6c:	f003 fc62 	bl	8006534 <HAL_LTDC_ProgramLineEvent>
 8002c70:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002c72:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 8002c76:	3301      	adds	r3, #1
 8002c78:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002c7c:	f7ff f9c6 	bl	800200c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002c80:	6820      	ldr	r0, [r4, #0]
 8002c82:	f008 feb3 	bl	800b9ec <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002c86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002c8a:	2000      	movs	r0, #0
 8002c8c:	f7fe ba60 	b.w	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002c90:	f003 fc50 	bl	8006534 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002c94:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8002c96:	6803      	ldr	r3, [r0, #0]
 8002c98:	6a1b      	ldr	r3, [r3, #32]
 8002c9a:	4798      	blx	r3
    }
 8002c9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002ca0:	2000      	movs	r0, #0
 8002ca2:	f7fe ba6f 	b.w	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002ca6:	bd10      	pop	{r4, pc}
 8002ca8:	20082f08 	.word	0x20082f08
 8002cac:	40016800 	.word	0x40016800
 8002cb0:	2000b8e6 	.word	0x2000b8e6
 8002cb4:	2000b8e4 	.word	0x2000b8e4

08002cb8 <_GLOBAL__sub_I_mjpegdecoder1>:
}
 8002cb8:	b508      	push	{r3, lr}
HardwareMJPEGDecoder mjpegdecoder1;
 8002cba:	480b      	ldr	r0, [pc, #44]	@ (8002ce8 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
 8002cbc:	f7fe fba8 	bl	8001410 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
 8002cc0:	4b0a      	ldr	r3, [pc, #40]	@ (8002cec <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
 8002cc2:	4a0b      	ldr	r2, [pc, #44]	@ (8002cf0 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
        Stream()
 8002cc4:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
 8002cc8:	601a      	str	r2, [r3, #0]
 8002cca:	2201      	movs	r2, #1
 8002ccc:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
 8002cd0:	2200      	movs	r2, #0
            : frameCount(0), frameNumber(0), tickCount(0),
 8002cd2:	e9c3 2201 	strd	r2, r2, [r3, #4]
        Stream()
 8002cd6:	6259      	str	r1, [r3, #36]	@ 0x24
            : frameCount(0), frameNumber(0), tickCount(0),
 8002cd8:	e9c3 2203 	strd	r2, r2, [r3, #12]
              frame_rate_video(0), frame_rate_ticks(0),
 8002cdc:	e9c3 2205 	strd	r2, r2, [r3, #20]
              seek_to_frame(0),
 8002ce0:	61da      	str	r2, [r3, #28]
              doDecodeNextFrame(false)
 8002ce2:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
}
 8002ce6:	bd08      	pop	{r3, pc}
 8002ce8:	2000b91c 	.word	0x2000b91c
 8002cec:	2000b8ec 	.word	0x2000b8ec
 8002cf0:	08034cd8 	.word	0x08034cd8

08002cf4 <HAL_GPU2D_CommandListCpltCallback>:
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */
{
    /* Prevent unused argument(s) compilation warning */
    UNUSED(hgpu2d);

    last_cl_id = CmdListID;
 8002cf4:	4b02      	ldr	r3, [pc, #8]	@ (8002d00 <HAL_GPU2D_CommandListCpltCallback+0xc>)
 8002cf6:	6019      	str	r1, [r3, #0]

    /* Return a token back to a semaphore */
    osSemaphoreRelease(nema_irq_sem);
 8002cf8:	4b02      	ldr	r3, [pc, #8]	@ (8002d04 <HAL_GPU2D_CommandListCpltCallback+0x10>)
 8002cfa:	6818      	ldr	r0, [r3, #0]
 8002cfc:	f005 bf84 	b.w	8008c08 <osSemaphoreRelease>
 8002d00:	20000048 	.word	0x20000048
 8002d04:	2000b964 	.word	0x2000b964

08002d08 <nema_reg_read>:

    return error_code;
}

uint32_t nema_reg_read(uint32_t reg)
{
 8002d08:	4601      	mov	r1, r0
    return HAL_GPU2D_ReadRegister(&hgpu2d, reg);
 8002d0a:	4801      	ldr	r0, [pc, #4]	@ (8002d10 <nema_reg_read+0x8>)
 8002d0c:	f001 bf0c 	b.w	8004b28 <HAL_GPU2D_ReadRegister>
 8002d10:	20000570 	.word	0x20000570

08002d14 <nema_reg_write>:
}

void nema_reg_write(uint32_t reg, uint32_t value)
{
 8002d14:	460a      	mov	r2, r1
    HAL_GPU2D_WriteRegister(&hgpu2d, reg, value);
 8002d16:	4601      	mov	r1, r0
 8002d18:	4801      	ldr	r0, [pc, #4]	@ (8002d20 <nema_reg_write+0xc>)
 8002d1a:	f001 bf08 	b.w	8004b2e <HAL_GPU2D_WriteRegister>
 8002d1e:	bf00      	nop
 8002d20:	20000570 	.word	0x20000570

08002d24 <nema_wait_irq>:
}

int nema_wait_irq(void)
{
 8002d24:	b508      	push	{r3, lr}
    /* Wait indefinitely for a free semaphore */
    osSemaphoreAcquire(nema_irq_sem, osWaitForever);
 8002d26:	4b04      	ldr	r3, [pc, #16]	@ (8002d38 <nema_wait_irq+0x14>)
 8002d28:	f04f 31ff 	mov.w	r1, #4294967295
 8002d2c:	6818      	ldr	r0, [r3, #0]
 8002d2e:	f005 ff3d 	bl	8008bac <osSemaphoreAcquire>

    return 0;
}
 8002d32:	2000      	movs	r0, #0
 8002d34:	bd08      	pop	{r3, pc}
 8002d36:	bf00      	nop
 8002d38:	2000b964 	.word	0x2000b964

08002d3c <nema_wait_irq_cl>:

int nema_wait_irq_cl(int cl_id)
{
 8002d3c:	b538      	push	{r3, r4, r5, lr}
 8002d3e:	4604      	mov	r4, r0
    while (last_cl_id < cl_id)
 8002d40:	4d04      	ldr	r5, [pc, #16]	@ (8002d54 <nema_wait_irq_cl+0x18>)
 8002d42:	682b      	ldr	r3, [r5, #0]
 8002d44:	42a3      	cmp	r3, r4
 8002d46:	db01      	blt.n	8002d4c <nema_wait_irq_cl+0x10>
    {
        (void)nema_wait_irq();
    }

    return 0;
}
 8002d48:	2000      	movs	r0, #0
 8002d4a:	bd38      	pop	{r3, r4, r5, pc}
        (void)nema_wait_irq();
 8002d4c:	f7ff ffea 	bl	8002d24 <nema_wait_irq>
 8002d50:	e7f7      	b.n	8002d42 <nema_wait_irq_cl+0x6>
 8002d52:	bf00      	nop
 8002d54:	20000048 	.word	0x20000048

08002d58 <nema_host_free>:
    return 0;
}

void nema_host_free(void* ptr)
{
    tsi_free(ptr);
 8002d58:	f01a bd1a 	b.w	801d790 <tsi_free>

08002d5c <nema_host_malloc>:
}

void* nema_host_malloc(unsigned size)
{
 8002d5c:	4601      	mov	r1, r0
    return tsi_malloc(size);
 8002d5e:	2000      	movs	r0, #0
 8002d60:	f01a bcb8 	b.w	801d6d4 <tsi_malloc_pool>

08002d64 <nema_buffer_create>:
}

nema_buffer_t nema_buffer_create(int size)
{
 8002d64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002d66:	4604      	mov	r4, r0
    nema_buffer_t bo;
    memset(&bo, 0, sizeof(bo));
 8002d68:	2000      	movs	r0, #0
{
 8002d6a:	460e      	mov	r6, r1
    memset(&bo, 0, sizeof(bo));
 8002d6c:	9001      	str	r0, [sp, #4]
    bo.base_virt = tsi_malloc(size);
 8002d6e:	f01a fcb1 	bl	801d6d4 <tsi_malloc_pool>
    memset(&bo, 0, sizeof(bo));
 8002d72:	466d      	mov	r5, sp
    bo.base_phys = (uint32_t)bo.base_virt;
 8002d74:	e9cd 0002 	strd	r0, r0, [sp, #8]
    bo.size      = size;
 8002d78:	9600      	str	r6, [sp, #0]
    assert(bo.base_virt != 0 && "Unable to allocate memory in nema_buffer_create");
 8002d7a:	b928      	cbnz	r0, 8002d88 <nema_buffer_create+0x24>
 8002d7c:	21a6      	movs	r1, #166	@ 0xa6
 8002d7e:	4b06      	ldr	r3, [pc, #24]	@ (8002d98 <nema_buffer_create+0x34>)
 8002d80:	4a06      	ldr	r2, [pc, #24]	@ (8002d9c <nema_buffer_create+0x38>)
 8002d82:	4807      	ldr	r0, [pc, #28]	@ (8002da0 <nema_buffer_create+0x3c>)
 8002d84:	f02f fbb8 	bl	80324f8 <__assert_func>

    return bo;
 8002d88:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002d8c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 8002d90:	4620      	mov	r0, r4
 8002d92:	b004      	add	sp, #16
 8002d94:	bd70      	pop	{r4, r5, r6, pc}
 8002d96:	bf00      	nop
 8002d98:	08034d10 	.word	0x08034d10
 8002d9c:	08034e58 	.word	0x08034e58
 8002da0:	08034d57 	.word	0x08034d57

08002da4 <nema_sys_init>:
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002da4:	2101      	movs	r1, #1
{
 8002da6:	b5f0      	push	{r4, r5, r6, r7, lr}
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002da8:	2200      	movs	r2, #0
 8002daa:	4608      	mov	r0, r1
{
 8002dac:	b087      	sub	sp, #28
    nema_irq_sem = osSemaphoreNew(1, 1, NULL);
 8002dae:	f005 feae 	bl	8008b0e <osSemaphoreNew>
 8002db2:	4b21      	ldr	r3, [pc, #132]	@ (8002e38 <nema_sys_init+0x94>)
 8002db4:	6018      	str	r0, [r3, #0]
    assert(nema_irq_sem != NULL);
 8002db6:	b928      	cbnz	r0, 8002dc4 <nema_sys_init+0x20>
 8002db8:	2156      	movs	r1, #86	@ 0x56
 8002dba:	4b20      	ldr	r3, [pc, #128]	@ (8002e3c <nema_sys_init+0x98>)
 8002dbc:	4a20      	ldr	r2, [pc, #128]	@ (8002e40 <nema_sys_init+0x9c>)
    assert(error_code == 0);
 8002dbe:	4821      	ldr	r0, [pc, #132]	@ (8002e44 <nema_sys_init+0xa0>)
 8002dc0:	f02f fb9a 	bl	80324f8 <__assert_func>
    error_code = tsi_malloc_init_pool_aligned(0, (void*)nemagfx_pool_mem, (uintptr_t)nemagfx_pool_mem, NEMAGFX_MEM_POOL_SIZE, 1, 8);
 8002dc4:	2701      	movs	r7, #1
 8002dc6:	2408      	movs	r4, #8
 8002dc8:	4a1f      	ldr	r2, [pc, #124]	@ (8002e48 <nema_sys_init+0xa4>)
 8002dca:	f44f 537c 	mov.w	r3, #16128	@ 0x3f00
 8002dce:	4611      	mov	r1, r2
 8002dd0:	2000      	movs	r0, #0
 8002dd2:	e9cd 7400 	strd	r7, r4, [sp]
 8002dd6:	f01a fc21 	bl	801d61c <tsi_malloc_init_pool_aligned>
    assert(error_code == 0);
 8002dda:	b118      	cbz	r0, 8002de4 <nema_sys_init+0x40>
 8002ddc:	215a      	movs	r1, #90	@ 0x5a
 8002dde:	4b1b      	ldr	r3, [pc, #108]	@ (8002e4c <nema_sys_init+0xa8>)
 8002de0:	4a17      	ldr	r2, [pc, #92]	@ (8002e40 <nema_sys_init+0x9c>)
 8002de2:	e7ec      	b.n	8002dbe <nema_sys_init+0x1a>
    error_code = tsi_malloc_init_pool_aligned(1, (void*)nemagfx_stencil_buffer_mem, (uintptr_t)nemagfx_stencil_buffer_mem, NEMAGFX_STENCIL_POOL_SIZE, 1, 8);
 8002de4:	4a1a      	ldr	r2, [pc, #104]	@ (8002e50 <nema_sys_init+0xac>)
 8002de6:	f44f 23be 	mov.w	r3, #389120	@ 0x5f000
 8002dea:	4611      	mov	r1, r2
 8002dec:	4638      	mov	r0, r7
 8002dee:	e9cd 7400 	strd	r7, r4, [sp]
 8002df2:	f01a fc13 	bl	801d61c <tsi_malloc_init_pool_aligned>
    assert(error_code == 0);
 8002df6:	4606      	mov	r6, r0
 8002df8:	b118      	cbz	r0, 8002e02 <nema_sys_init+0x5e>
 8002dfa:	215c      	movs	r1, #92	@ 0x5c
 8002dfc:	4b13      	ldr	r3, [pc, #76]	@ (8002e4c <nema_sys_init+0xa8>)
 8002dfe:	4a10      	ldr	r2, [pc, #64]	@ (8002e40 <nema_sys_init+0x9c>)
 8002e00:	e7dd      	b.n	8002dbe <nema_sys_init+0x1a>
    ring_buffer_str.bo = nema_buffer_create(RING_SIZE);
 8002e02:	ad02      	add	r5, sp, #8
 8002e04:	4c13      	ldr	r4, [pc, #76]	@ (8002e54 <nema_sys_init+0xb0>)
 8002e06:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002e0a:	4628      	mov	r0, r5
 8002e0c:	f7ff ffaa 	bl	8002d64 <nema_buffer_create>
 8002e10:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002e14:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    assert(ring_buffer_str.bo.base_virt);
 8002e18:	b91a      	cbnz	r2, 8002e22 <nema_sys_init+0x7e>
 8002e1a:	2160      	movs	r1, #96	@ 0x60
 8002e1c:	4b0e      	ldr	r3, [pc, #56]	@ (8002e58 <nema_sys_init+0xb4>)
 8002e1e:	4a08      	ldr	r2, [pc, #32]	@ (8002e40 <nema_sys_init+0x9c>)
 8002e20:	e7cd      	b.n	8002dbe <nema_sys_init+0x1a>
    error_code = nema_rb_init(&ring_buffer_str, 1);
 8002e22:	4639      	mov	r1, r7
 8002e24:	4620      	mov	r0, r4
 8002e26:	f00d fc29 	bl	801067c <nema_rb_init>
    if (error_code < 0)
 8002e2a:	2800      	cmp	r0, #0
    last_cl_id = 0;
 8002e2c:	bfa4      	itt	ge
 8002e2e:	4b0b      	ldrge	r3, [pc, #44]	@ (8002e5c <nema_sys_init+0xb8>)
 8002e30:	601e      	strge	r6, [r3, #0]
}
 8002e32:	b007      	add	sp, #28
 8002e34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e36:	bf00      	nop
 8002e38:	2000b964 	.word	0x2000b964
 8002e3c:	08034db2 	.word	0x08034db2
 8002e40:	08034e6b 	.word	0x08034e6b
 8002e44:	08034d57 	.word	0x08034d57
 8002e48:	2006a980 	.word	0x2006a980
 8002e4c:	08034dc7 	.word	0x08034dc7
 8002e50:	2000b980 	.word	0x2000b980
 8002e54:	2000b968 	.word	0x2000b968
 8002e58:	08034dd7 	.word	0x08034dd7
 8002e5c:	20000048 	.word	0x20000048

08002e60 <nema_buffer_create_pool>:

nema_buffer_t nema_buffer_create_pool(int pool, int size)
{
 8002e60:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    nema_buffer_t bo;
    memset(&bo, 0, sizeof(bo));
 8002e62:	2300      	movs	r3, #0
{
 8002e64:	4604      	mov	r4, r0
 8002e66:	4608      	mov	r0, r1
    bo.base_virt = tsi_malloc_pool(pool, size);
 8002e68:	4611      	mov	r1, r2
{
 8002e6a:	4616      	mov	r6, r2
    memset(&bo, 0, sizeof(bo));
 8002e6c:	9301      	str	r3, [sp, #4]
    bo.base_virt = tsi_malloc_pool(pool, size);
 8002e6e:	f01a fc31 	bl	801d6d4 <tsi_malloc_pool>
    memset(&bo, 0, sizeof(bo));
 8002e72:	466d      	mov	r5, sp
    bo.base_phys = (uint32_t)bo.base_virt;
 8002e74:	e9cd 0002 	strd	r0, r0, [sp, #8]
    bo.size      = size;
 8002e78:	9600      	str	r6, [sp, #0]
    bo.fd        = 0;
    assert(bo.base_virt != 0 && "Unable to allocate memory in nema_buffer_create_pool");
 8002e7a:	b928      	cbnz	r0, 8002e88 <nema_buffer_create_pool+0x28>
 8002e7c:	21b3      	movs	r1, #179	@ 0xb3
 8002e7e:	4b06      	ldr	r3, [pc, #24]	@ (8002e98 <nema_buffer_create_pool+0x38>)
 8002e80:	4a06      	ldr	r2, [pc, #24]	@ (8002e9c <nema_buffer_create_pool+0x3c>)
 8002e82:	4807      	ldr	r0, [pc, #28]	@ (8002ea0 <nema_buffer_create_pool+0x40>)
 8002e84:	f02f fb38 	bl	80324f8 <__assert_func>

    return bo;
 8002e88:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002e8c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
 8002e90:	4620      	mov	r0, r4
 8002e92:	b004      	add	sp, #16
 8002e94:	bd70      	pop	{r4, r5, r6, pc}
 8002e96:	bf00      	nop
 8002e98:	08034df4 	.word	0x08034df4
 8002e9c:	08034e40 	.word	0x08034e40
 8002ea0:	08034d57 	.word	0x08034d57

08002ea4 <nema_buffer_map>:

void* nema_buffer_map(nema_buffer_t* bo)
{
    return bo->base_virt;
}
 8002ea4:	6880      	ldr	r0, [r0, #8]
 8002ea6:	4770      	bx	lr

08002ea8 <nema_buffer_destroy>:
    UNUSED(bo);
}

void nema_buffer_destroy(nema_buffer_t* bo)
{
    if (bo->fd == -1)
 8002ea8:	6843      	ldr	r3, [r0, #4]
{
 8002eaa:	b510      	push	{r4, lr}
    if (bo->fd == -1)
 8002eac:	3301      	adds	r3, #1
{
 8002eae:	4604      	mov	r4, r0
    if (bo->fd == -1)
 8002eb0:	d009      	beq.n	8002ec6 <nema_buffer_destroy+0x1e>
    {
        return; /* Buffer weren't allocated! */
    }

    tsi_free(bo->base_virt);
 8002eb2:	6880      	ldr	r0, [r0, #8]
 8002eb4:	f01a fc6c 	bl	801d790 <tsi_free>

    bo->base_virt = (void*)0;
 8002eb8:	2300      	movs	r3, #0
    bo->base_phys = 0;
 8002eba:	e9c4 3302 	strd	r3, r3, [r4, #8]
    bo->size      = 0;
 8002ebe:	6023      	str	r3, [r4, #0]
    bo->fd        = -1; /* Buffer not allocated */
 8002ec0:	f04f 33ff 	mov.w	r3, #4294967295
 8002ec4:	6063      	str	r3, [r4, #4]
}
 8002ec6:	bd10      	pop	{r4, pc}

08002ec8 <nema_buffer_flush>:
uintptr_t nema_buffer_phys(nema_buffer_t* bo)
{
    return bo->base_phys;
}

void nema_buffer_flush(nema_buffer_t* bo)
 8002ec8:	4770      	bx	lr

08002eca <nema_mutex_lock>:
    /* Prevent unused argument(s) compilation warning */
    UNUSED(mutex_id);
    /* USER CODE END nema_mutex_lock */

    return retval;
}
 8002eca:	2000      	movs	r0, #0
 8002ecc:	4770      	bx	lr

08002ece <nema_mutex_unlock>:

int nema_mutex_unlock(int mutex_id)
 8002ece:	2000      	movs	r0, #0
 8002ed0:	4770      	bx	lr

08002ed2 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002ed2:	4770      	bx	lr

08002ed4 <_ZN23ApplicationFontProviderD0Ev>:
 8002ed4:	b510      	push	{r4, lr}
 8002ed6:	4604      	mov	r4, r0
 8002ed8:	2104      	movs	r1, #4
 8002eda:	f02e f934 	bl	8031146 <_ZdlPvj>
 8002ede:	4620      	mov	r0, r4
 8002ee0:	bd10      	pop	{r4, pc}

08002ee2 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002ee2:	2901      	cmp	r1, #1
{
 8002ee4:	b508      	push	{r3, lr}
    switch (typography)
 8002ee6:	d006      	beq.n	8002ef6 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002ee8:	2902      	cmp	r1, #2
 8002eea:	d008      	beq.n	8002efe <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002eec:	b959      	cbnz	r1, 8002f06 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002eee:	f000 fc4b 	bl	8003788 <_ZN17TypedTextDatabase8getFontsEv>
 8002ef2:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002ef4:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002ef6:	f000 fc47 	bl	8003788 <_ZN17TypedTextDatabase8getFontsEv>
 8002efa:	6840      	ldr	r0, [r0, #4]
 8002efc:	e7fa      	b.n	8002ef4 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002efe:	f000 fc43 	bl	8003788 <_ZN17TypedTextDatabase8getFontsEv>
 8002f02:	6880      	ldr	r0, [r0, #8]
 8002f04:	e7f6      	b.n	8002ef4 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002f06:	2000      	movs	r0, #0
 8002f08:	e7f4      	b.n	8002ef4 <_ZN23ApplicationFontProvider7getFontEt+0x12>
	...

08002f0c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002f0c:	4800      	ldr	r0, [pc, #0]	@ (8002f10 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002f0e:	4770      	bx	lr
 8002f10:	08034e90 	.word	0x08034e90

08002f14 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002f14:	2006      	movs	r0, #6
 8002f16:	4770      	bx	lr

08002f18 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002f18:	b513      	push	{r0, r1, r4, lr}
 8002f1a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002f1c:	b151      	cbz	r1, 8002f34 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f1e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002f20:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002f22:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f26:	aa01      	add	r2, sp, #4
 8002f28:	689c      	ldr	r4, [r3, #8]
 8002f2a:	f10d 0303 	add.w	r3, sp, #3
 8002f2e:	47a0      	blx	r4
        return glyph;
    }
 8002f30:	b002      	add	sp, #8
 8002f32:	bd10      	pop	{r4, pc}
            return 0;
 8002f34:	4608      	mov	r0, r1
 8002f36:	e7fb      	b.n	8002f30 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002f38 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002f38:	89c0      	ldrh	r0, [r0, #14]
 8002f3a:	4770      	bx	lr

08002f3c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002f3c:	8a00      	ldrh	r0, [r0, #16]
 8002f3e:	4770      	bx	lr

08002f40 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002f40:	88c0      	ldrh	r0, [r0, #6]
 8002f42:	4770      	bx	lr

08002f44 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002f44:	8880      	ldrh	r0, [r0, #4]
 8002f46:	4770      	bx	lr

08002f48 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002f48:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f4a:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002f4e:	4770      	bx	lr

08002f50 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002f50:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f52:	09c0      	lsrs	r0, r0, #7
 8002f54:	4770      	bx	lr

08002f56 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002f56:	2000      	movs	r0, #0
 8002f58:	4770      	bx	lr
	...

08002f5c <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002f5c:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002f64 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002f60:	4770      	bx	lr
 8002f62:	bf00      	nop
 8002f64:	00000000 	.word	0x00000000

08002f68 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002f68:	4770      	bx	lr

08002f6a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002f6a:	4770      	bx	lr

08002f6c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002f6c:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002f70:	6808      	ldr	r0, [r1, #0]
 8002f72:	6849      	ldr	r1, [r1, #4]
 8002f74:	c303      	stmia	r3!, {r0, r1}
    }
 8002f76:	4770      	bx	lr

08002f78 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002f78:	4770      	bx	lr

08002f7a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002f7a:	4770      	bx	lr

08002f7c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002f7c:	6041      	str	r1, [r0, #4]
    }
 8002f7e:	4770      	bx	lr

08002f80 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002f80:	4770      	bx	lr
	...

08002f84 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002f84:	4b06      	ldr	r3, [pc, #24]	@ (8002fa0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002f86:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002f8a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002f8e:	2300      	movs	r3, #0
 8002f90:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// GameScreen1

void FrontendApplicationBase::gotoGameScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGameScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002f94:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002f98:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoGameScreen1ScreenNoTransition();
    }
 8002f9c:	4770      	bx	lr
 8002f9e:	bf00      	nop
 8002fa0:	08003045 	.word	0x08003045

08002fa4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002fa4:	2301      	movs	r3, #1
 8002fa6:	7203      	strb	r3, [r0, #8]
    }
 8002fa8:	4770      	bx	lr

08002faa <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002faa:	4770      	bx	lr

08002fac <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002fac:	4770      	bx	lr

08002fae <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002fae:	4603      	mov	r3, r0
 8002fb0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002fb2:	6841      	ldr	r1, [r0, #4]
 8002fb4:	68c2      	ldr	r2, [r0, #12]
 8002fb6:	689b      	ldr	r3, [r3, #8]
 8002fb8:	1054      	asrs	r4, r2, #1
 8002fba:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002fbe:	07d2      	lsls	r2, r2, #31
 8002fc0:	bf48      	it	mi
 8002fc2:	590a      	ldrmi	r2, [r1, r4]
    }
 8002fc4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002fc8:	bf48      	it	mi
 8002fca:	58d3      	ldrmi	r3, [r2, r3]
 8002fcc:	4718      	bx	r3

08002fce <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002fce:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002fd0:	6840      	ldr	r0, [r0, #4]
 8002fd2:	b130      	cbz	r0, 8002fe2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002fd4:	689a      	ldr	r2, [r3, #8]
 8002fd6:	b91a      	cbnz	r2, 8002fe0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002fd8:	68d8      	ldr	r0, [r3, #12]
 8002fda:	f000 0001 	and.w	r0, r0, #1
 8002fde:	4770      	bx	lr
 8002fe0:	2001      	movs	r0, #1
    }
 8002fe2:	4770      	bx	lr

08002fe4 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002fe4:	b510      	push	{r4, lr}
 8002fe6:	4604      	mov	r4, r0
 8002fe8:	210c      	movs	r1, #12
 8002fea:	f02e f8ac 	bl	8031146 <_ZdlPvj>
 8002fee:	4620      	mov	r0, r4
 8002ff0:	bd10      	pop	{r4, pc}

08002ff2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002ff2:	b510      	push	{r4, lr}
 8002ff4:	4604      	mov	r4, r0
 8002ff6:	2110      	movs	r1, #16
 8002ff8:	f02e f8a5 	bl	8031146 <_ZdlPvj>
 8002ffc:	4620      	mov	r0, r4
 8002ffe:	bd10      	pop	{r4, pc}

08003000 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003000:	b510      	push	{r4, lr}
 8003002:	4604      	mov	r4, r0
 8003004:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003008:	f02e f89d 	bl	8031146 <_ZdlPvj>
 800300c:	4620      	mov	r0, r4
 800300e:	bd10      	pop	{r4, pc}

08003010 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003010:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003012:	f00a f82d 	bl	800d070 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003016:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800301a:	6803      	ldr	r3, [r0, #0]
 800301c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800301e:	4718      	bx	r3

08003020 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003020:	b510      	push	{r4, lr}
 8003022:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003024:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8003028:	b158      	cbz	r0, 8003042 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800302a:	6803      	ldr	r3, [r0, #0]
 800302c:	68db      	ldr	r3, [r3, #12]
 800302e:	4798      	blx	r3
 8003030:	b138      	cbz	r0, 8003042 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003032:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8003036:	6803      	ldr	r3, [r0, #0]
 8003038:	689b      	ldr	r3, [r3, #8]
 800303a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800303c:	2300      	movs	r3, #0
 800303e:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8003042:	bd10      	pop	{r4, pc}

08003044 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoGameScreen1ScreenNoTransitionImpl()
{
 8003044:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<GameScreen1View, GameScreen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003048:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800304c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800304e:	68b0      	ldr	r0, [r6, #8]
 8003050:	6803      	ldr	r3, [r0, #0]
 8003052:	6a1b      	ldr	r3, [r3, #32]
 8003054:	4798      	blx	r3
 8003056:	28e7      	cmp	r0, #231	@ 0xe7
 8003058:	d805      	bhi.n	8003066 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x22>
 800305a:	21a3      	movs	r1, #163	@ 0xa3
 800305c:	4b43      	ldr	r3, [pc, #268]	@ (800316c <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x128>)
 800305e:	4a44      	ldr	r2, [pc, #272]	@ (8003170 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003060:	4844      	ldr	r0, [pc, #272]	@ (8003174 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x130>)
 8003062:	f02f fa49 	bl	80324f8 <__assert_func>
 8003066:	6870      	ldr	r0, [r6, #4]
 8003068:	6803      	ldr	r3, [r0, #0]
 800306a:	6a1b      	ldr	r3, [r3, #32]
 800306c:	4798      	blx	r3
 800306e:	280f      	cmp	r0, #15
 8003070:	d803      	bhi.n	800307a <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x36>
 8003072:	21a4      	movs	r1, #164	@ 0xa4
 8003074:	4b40      	ldr	r3, [pc, #256]	@ (8003178 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x134>)
 8003076:	4a3e      	ldr	r2, [pc, #248]	@ (8003170 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x12c>)
 8003078:	e7f2      	b.n	8003060 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800307a:	68f0      	ldr	r0, [r6, #12]
 800307c:	6803      	ldr	r3, [r0, #0]
 800307e:	6a1b      	ldr	r3, [r3, #32]
 8003080:	4798      	blx	r3
 8003082:	280b      	cmp	r0, #11
 8003084:	d803      	bhi.n	800308e <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x4a>
 8003086:	21a5      	movs	r1, #165	@ 0xa5
 8003088:	4b3c      	ldr	r3, [pc, #240]	@ (800317c <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x138>)
 800308a:	4a39      	ldr	r2, [pc, #228]	@ (8003170 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x12c>)
 800308c:	e7e8      	b.n	8003060 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 800308e:	f009 ffef 	bl	800d070 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003092:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8003184 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x140>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8003096:	3004      	adds	r0, #4
 8003098:	f00a f80f 	bl	800d0ba <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800309c:	f8d9 0000 	ldr.w	r0, [r9]
 80030a0:	b110      	cbz	r0, 80030a8 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80030a2:	6803      	ldr	r3, [r0, #0]
 80030a4:	68db      	ldr	r3, [r3, #12]
 80030a6:	4798      	blx	r3
    if (*currentTrans)
 80030a8:	f8d9 0000 	ldr.w	r0, [r9]
 80030ac:	b110      	cbz	r0, 80030b4 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80030ae:	6803      	ldr	r3, [r0, #0]
 80030b0:	681b      	ldr	r3, [r3, #0]
 80030b2:	4798      	blx	r3
    if (*currentScreen)
 80030b4:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003188 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x144>
 80030b8:	f8d8 0000 	ldr.w	r0, [r8]
 80030bc:	b110      	cbz	r0, 80030c4 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80030be:	6803      	ldr	r3, [r0, #0]
 80030c0:	695b      	ldr	r3, [r3, #20]
 80030c2:	4798      	blx	r3
    if (*currentPresenter)
 80030c4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80030c8:	b110      	cbz	r0, 80030d0 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80030ca:	6803      	ldr	r3, [r0, #0]
 80030cc:	685b      	ldr	r3, [r3, #4]
 80030ce:	4798      	blx	r3
    if (*currentScreen)
 80030d0:	f8d8 0000 	ldr.w	r0, [r8]
 80030d4:	b110      	cbz	r0, 80030dc <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80030d6:	6803      	ldr	r3, [r0, #0]
 80030d8:	681b      	ldr	r3, [r3, #0]
 80030da:	4798      	blx	r3
    if (*currentPresenter)
 80030dc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80030e0:	b110      	cbz	r0, 80030e8 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80030e2:	6803      	ldr	r3, [r0, #0]
 80030e4:	689b      	ldr	r3, [r3, #8]
 80030e6:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80030e8:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80030ea:	2100      	movs	r1, #0
 80030ec:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
 80030ee:	f04f 0b00 	mov.w	fp, #0
 80030f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80030f4:	4798      	blx	r3
 80030f6:	4b22      	ldr	r3, [pc, #136]	@ (8003180 <_ZN23FrontendApplicationBase37gotoGameScreen1ScreenNoTransitionImplEv+0x13c>)
 80030f8:	4604      	mov	r4, r0
 80030fa:	f8c0 b004 	str.w	fp, [r0, #4]
 80030fe:	f880 b008 	strb.w	fp, [r0, #8]
 8003102:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003104:	68b0      	ldr	r0, [r6, #8]
 8003106:	4659      	mov	r1, fp
 8003108:	6803      	ldr	r3, [r0, #0]
 800310a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800310c:	4798      	blx	r3
 800310e:	4605      	mov	r5, r0
 8003110:	f000 fba0 	bl	8003854 <_ZN15GameScreen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003114:	6870      	ldr	r0, [r6, #4]
 8003116:	4659      	mov	r1, fp
 8003118:	6803      	ldr	r3, [r0, #0]
 800311a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800311c:	4798      	blx	r3
 800311e:	4606      	mov	r6, r0
 8003120:	4629      	mov	r1, r5
 8003122:	f000 fb77 	bl	8003814 <_ZN20GameScreen1PresenterC1ER15GameScreen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8003126:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003128:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800312c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003130:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003134:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003138:	682b      	ldr	r3, [r5, #0]
 800313a:	4628      	mov	r0, r5
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800313c:	f8c6 a008 	str.w	sl, [r6, #8]
 8003140:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003142:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003144:	4798      	blx	r3
    newPresenter->activate();
 8003146:	6833      	ldr	r3, [r6, #0]
 8003148:	4630      	mov	r0, r6
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800314e:	4621      	mov	r1, r4
 8003150:	4628      	mov	r0, r5
 8003152:	f00b ff7f 	bl	800f054 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003156:	6823      	ldr	r3, [r4, #0]
 8003158:	4620      	mov	r0, r4
 800315a:	691b      	ldr	r3, [r3, #16]
 800315c:	4798      	blx	r3
    newTransition->invalidate();
 800315e:	4620      	mov	r0, r4
 8003160:	6823      	ldr	r3, [r4, #0]
 8003162:	695b      	ldr	r3, [r3, #20]
}
 8003164:	b001      	add	sp, #4
 8003166:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800316a:	4718      	bx	r3
 800316c:	08034f08 	.word	0x08034f08
 8003170:	08034f96 	.word	0x08034f96
 8003174:	08035070 	.word	0x08035070
 8003178:	080350b7 	.word	0x080350b7
 800317c:	0803515a 	.word	0x0803515a
 8003180:	08035274 	.word	0x08035274
 8003184:	20082f48 	.word	0x20082f48
 8003188:	20082f44 	.word	0x20082f44

0800318c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800318c:	b570      	push	{r4, r5, r6, lr}
 800318e:	4604      	mov	r4, r0
 8003190:	460d      	mov	r5, r1
 8003192:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 8003194:	f00a f82e 	bl	800d1f4 <_ZN8touchgfx11ApplicationC1Ev>
        : currentPresenter(0),
 8003198:	2100      	movs	r1, #0
        instance = this;
 800319a:	4b0a      	ldr	r3, [pc, #40]	@ (80031c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x38>)
        : pobject(0), pmemfun(0)
 800319c:	e9c4 1153 	strd	r1, r1, [r4, #332]	@ 0x14c
 80031a0:	601c      	str	r4, [r3, #0]
      model(m)
 80031a2:	4b09      	ldr	r3, [pc, #36]	@ (80031c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x3c>)
          pendingScreenTransitionCallback(0)
 80031a4:	e9c4 114f 	strd	r1, r1, [r4, #316]	@ 0x13c
 80031a8:	6023      	str	r3, [r4, #0]
 80031aa:	4b08      	ldr	r3, [pc, #32]	@ (80031cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x40>)
 80031ac:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
 80031b0:	e9c4 3151 	strd	r3, r1, [r4, #324]	@ 0x144
        return instance;
 80031b4:	4b06      	ldr	r3, [pc, #24]	@ (80031d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x44>)
 80031b6:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80031b8:	6803      	ldr	r3, [r0, #0]
 80031ba:	689b      	ldr	r3, [r3, #8]
 80031bc:	4798      	blx	r3
}
 80031be:	4620      	mov	r0, r4
 80031c0:	bd70      	pop	{r4, r5, r6, pc}
 80031c2:	bf00      	nop
 80031c4:	20082f54 	.word	0x20082f54
 80031c8:	08035220 	.word	0x08035220
 80031cc:	08035208 	.word	0x08035208
 80031d0:	20082f08 	.word	0x20082f08

080031d4 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80031d4:	4b06      	ldr	r3, [pc, #24]	@ (80031f0 <_ZN23FrontendApplicationBase33gotoGameScreen1ScreenNoTransitionEv+0x1c>)
 80031d6:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80031da:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80031de:	2300      	movs	r3, #0
 80031e0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80031e4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80031e8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80031ec:	4770      	bx	lr
 80031ee:	bf00      	nop
 80031f0:	08003045 	.word	0x08003045

080031f4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80031f4:	2000      	movs	r0, #0
 80031f6:	4770      	bx	lr

080031f8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80031f8:	8081      	strh	r1, [r0, #4]
    }
 80031fa:	4770      	bx	lr

080031fc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80031fc:	80c1      	strh	r1, [r0, #6]
    }
 80031fe:	4770      	bx	lr

08003200 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003200:	8101      	strh	r1, [r0, #8]
    }
 8003202:	4770      	bx	lr

08003204 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8003204:	8141      	strh	r1, [r0, #10]
    }
 8003206:	4770      	bx	lr

08003208 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8003208:	4770      	bx	lr

0800320a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800320a:	4770      	bx	lr

0800320c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800320c:	4770      	bx	lr

0800320e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800320e:	4770      	bx	lr

08003210 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003210:	4770      	bx	lr

08003212 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8003212:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8003214:	88c4      	ldrh	r4, [r0, #6]
 8003216:	6803      	ldr	r3, [r0, #0]
 8003218:	1b12      	subs	r2, r2, r4
 800321a:	8884      	ldrh	r4, [r0, #4]
 800321c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800321e:	1b09      	subs	r1, r1, r4
 8003220:	b212      	sxth	r2, r2
    }
 8003222:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8003226:	b209      	sxth	r1, r1
 8003228:	4718      	bx	r3

0800322a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800322a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800322e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003230:	f04f 33ff 	mov.w	r3, #4294967295
 8003234:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8003236:	6813      	ldr	r3, [r2, #0]
 8003238:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800323a:	6010      	str	r0, [r2, #0]
    }
 800323c:	4770      	bx	lr

0800323e <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800323e:	4770      	bx	lr

08003240 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003240:	4770      	bx	lr

08003242 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003242:	4770      	bx	lr

08003244 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003244:	4770      	bx	lr

08003246 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8003246:	4770      	bx	lr

08003248 <_ZN19GameScreen1ViewBase16Block1_1_ClickedEv>:
     * Virtual Action Handlers
     */
    virtual void Block1_1_Clicked()
    {
        // Override and implement this function in GameScreen1
    }
 8003248:	4770      	bx	lr

0800324a <_ZN19GameScreen1ViewBaseD1Ev>:
}

GameScreen1ViewBase::~GameScreen1ViewBase()
{

}
 800324a:	4770      	bx	lr

0800324c <_ZN19GameScreen1ViewBase11setupScreenEv>:

void GameScreen1ViewBase::setupScreen()
{

}
 800324c:	4770      	bx	lr

0800324e <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800324e:	4770      	bx	lr

08003250 <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003250:	4603      	mov	r3, r0
 8003252:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003254:	6844      	ldr	r4, [r0, #4]
 8003256:	68c2      	ldr	r2, [r0, #12]
 8003258:	689b      	ldr	r3, [r3, #8]
 800325a:	1055      	asrs	r5, r2, #1
 800325c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003260:	07d2      	lsls	r2, r2, #31
 8003262:	bf48      	it	mi
 8003264:	5962      	ldrmi	r2, [r4, r5]
    }
 8003266:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003268:	bf48      	it	mi
 800326a:	58d3      	ldrmi	r3, [r2, r3]
 800326c:	4718      	bx	r3

0800326e <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800326e:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003270:	6840      	ldr	r0, [r0, #4]
 8003272:	b130      	cbz	r0, 8003282 <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003274:	689a      	ldr	r2, [r3, #8]
 8003276:	b91a      	cbnz	r2, 8003280 <_ZNK8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8003278:	68d8      	ldr	r0, [r3, #12]
 800327a:	f000 0001 	and.w	r0, r0, #1
 800327e:	4770      	bx	lr
 8003280:	2001      	movs	r0, #1
    }
 8003282:	4770      	bx	lr

08003284 <_ZN8touchgfx8CallbackI19GameScreen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003284:	b510      	push	{r4, lr}
 8003286:	4604      	mov	r4, r0
 8003288:	2110      	movs	r1, #16
 800328a:	f02d ff5c 	bl	8031146 <_ZdlPvj>
 800328e:	4620      	mov	r0, r4
 8003290:	bd10      	pop	{r4, pc}

08003292 <_ZN19GameScreen1ViewBaseD0Ev>:
GameScreen1ViewBase::~GameScreen1ViewBase()
 8003292:	b510      	push	{r4, lr}
 8003294:	4604      	mov	r4, r0
}
 8003296:	21e4      	movs	r1, #228	@ 0xe4
 8003298:	f02d ff55 	bl	8031146 <_ZdlPvj>
 800329c:	4620      	mov	r0, r4
 800329e:	bd10      	pop	{r4, pc}

080032a0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80032a0:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80032a4:	b112      	cbz	r2, 80032ac <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80032a6:	6803      	ldr	r3, [r0, #0]
 80032a8:	695b      	ldr	r3, [r3, #20]
 80032aa:	4718      	bx	r3
    }
 80032ac:	4770      	bx	lr

080032ae <_ZN19GameScreen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void GameScreen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Block1_1)
 80032ae:	f100 0298 	add.w	r2, r0, #152	@ 0x98
 80032b2:	428a      	cmp	r2, r1
 80032b4:	d102      	bne.n	80032bc <_ZN19GameScreen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //Block1_1_Interaction
        //When Block1_1 clicked call virtual function
        //Call Block1_1_Clicked
        Block1_1_Clicked();
 80032b6:	6803      	ldr	r3, [r0, #0]
 80032b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80032ba:	4718      	bx	r3
    }
}
 80032bc:	4770      	bx	lr

080032be <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80032be:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80032c2:	b11a      	cbz	r2, 80032cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80032c4:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80032c8:	b102      	cbz	r2, 80032cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80032ca:	6018      	str	r0, [r3, #0]
        }
    }
 80032cc:	4770      	bx	lr

080032ce <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80032ce:	b570      	push	{r4, r5, r6, lr}
 80032d0:	4604      	mov	r4, r0
 80032d2:	4615      	mov	r5, r2
        setX(x);
 80032d4:	6803      	ldr	r3, [r0, #0]
 80032d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032d8:	4798      	blx	r3
        setY(y);
 80032da:	6823      	ldr	r3, [r4, #0]
 80032dc:	4629      	mov	r1, r5
 80032de:	4620      	mov	r0, r4
    }
 80032e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80032e4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80032e6:	4718      	bx	r3

080032e8 <_ZN19GameScreen1ViewBaseC1Ev>:
GameScreen1ViewBase::GameScreen1ViewBase() :
 80032e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80032ec:	4604      	mov	r4, r0
        : presenter(0)
 80032ee:	2500      	movs	r5, #0
    buttonCallback(this, &GameScreen1ViewBase::buttonCallbackHandler)
 80032f0:	4626      	mov	r6, r4
GameScreen1ViewBase::GameScreen1ViewBase() :
 80032f2:	b086      	sub	sp, #24
 80032f4:	f00b fd02 	bl	800ecfc <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &GameScreen1ViewBase::buttonCallbackHandler)
 80032f8:	4b45      	ldr	r3, [pc, #276]	@ (8003410 <_ZN19GameScreen1ViewBaseC1Ev+0x128>)
 80032fa:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80032fc:	f846 3b40 	str.w	r3, [r6], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003300:	4b44      	ldr	r3, [pc, #272]	@ (8003414 <_ZN19GameScreen1ViewBaseC1Ev+0x12c>)
          touchable(false),
 8003302:	f44f 7280 	mov.w	r2, #256	@ 0x100
        : x(0), y(0), width(0), height(0)
 8003306:	e9c4 3510 	strd	r3, r5, [r4, #64]	@ 0x40
 800330a:	23ff      	movs	r3, #255	@ 0xff
 800330c:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003310:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003314:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
 8003318:	f8a4 2090 	strh.w	r2, [r4, #144]	@ 0x90
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 800331c:	4a3e      	ldr	r2, [pc, #248]	@ (8003418 <_ZN19GameScreen1ViewBaseC1Ev+0x130>)
 800331e:	f104 086c 	add.w	r8, r4, #108	@ 0x6c
    {
        Image::setBitmap(bmp);
 8003322:	f10d 0a14 	add.w	sl, sp, #20
 8003326:	f104 0798 	add.w	r7, r4, #152	@ 0x98
 800332a:	4651      	mov	r1, sl
        : Widget(), bitmap(bmp), alpha(255)
 800332c:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800332e:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
 8003332:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
        Image::setBitmap(bmp);
 8003336:	4640      	mov	r0, r8
 8003338:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
 800333c:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
 8003340:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
 8003344:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
 8003348:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
 800334c:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
 8003350:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
 8003354:	6625      	str	r5, [r4, #96]	@ 0x60
        : color(col)
 8003356:	66a5      	str	r5, [r4, #104]	@ 0x68
 8003358:	f8ad 3014 	strh.w	r3, [sp, #20]
 800335c:	f008 fdd3 	bl	800bf06 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003360:	4638      	mov	r0, r7
 8003362:	f008 fda9 	bl	800beb8 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003366:	4b2d      	ldr	r3, [pc, #180]	@ (800341c <_ZN19GameScreen1ViewBaseC1Ev+0x134>)
        setXY(x, y);
 8003368:	462a      	mov	r2, r5
 800336a:	e9c4 3435 	strd	r3, r4, [r4, #212]	@ 0xd4
 800336e:	4b2c      	ldr	r3, [pc, #176]	@ (8003420 <_ZN19GameScreen1ViewBaseC1Ev+0x138>)
 8003370:	4629      	mov	r1, r5
 8003372:	e9c4 3537 	strd	r3, r5, [r4, #220]	@ 0xdc
 8003376:	4630      	mov	r0, r6
 8003378:	f7ff ffa9 	bl	80032ce <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800337c:	4630      	mov	r0, r6
 800337e:	f44f 7148 	mov.w	r1, #800	@ 0x320
 8003382:	f7ff ff3d 	bl	8003200 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003386:	4630      	mov	r0, r6
 8003388:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
 800338c:	f7ff ff3a 	bl	8003204 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003390:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003394:	f104 0904 	add.w	r9, r4, #4
 8003398:	66a3      	str	r3, [r4, #104]	@ 0x68
 800339a:	4631      	mov	r1, r6
 800339c:	4648      	mov	r0, r9
 800339e:	f007 fae5 	bl	800a96c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BackScreen.setXY(0, 0);
 80033a2:	462a      	mov	r2, r5
 80033a4:	4629      	mov	r1, r5
 80033a6:	4640      	mov	r0, r8
 80033a8:	f7ff ff91 	bl	80032ce <_ZN8touchgfx8Drawable5setXYEss>
 80033ac:	2302      	movs	r3, #2
    BackScreen.setBitmap(touchgfx::Bitmap(BITMAP_BACKSCREEN_ID));
 80033ae:	4651      	mov	r1, sl
 80033b0:	4640      	mov	r0, r8
 80033b2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80033b6:	f008 fda6 	bl	800bf06 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80033ba:	4641      	mov	r1, r8
 80033bc:	4648      	mov	r0, r9
 80033be:	f007 fad5 	bl	800a96c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Block1_1.setXY(20, 19);
 80033c2:	4638      	mov	r0, r7
 80033c4:	2213      	movs	r2, #19
 80033c6:	2114      	movs	r1, #20
 80033c8:	f7ff ff81 	bl	80032ce <_ZN8touchgfx8Drawable5setXYEss>
 80033cc:	2303      	movs	r3, #3
    Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_OUTLINED_FLAG_50_50_E8F6FB_SVG_ID));
 80033ce:	4638      	mov	r0, r7
 80033d0:	f8ad 3010 	strh.w	r3, [sp, #16]
 80033d4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80033d8:	aa03      	add	r2, sp, #12
 80033da:	ab04      	add	r3, sp, #16
 80033dc:	a902      	add	r1, sp, #8
 80033de:	f8cd a000 	str.w	sl, [sp]
 80033e2:	f8ad 5008 	strh.w	r5, [sp, #8]
 80033e6:	f8ad 500c 	strh.w	r5, [sp, #12]
 80033ea:	f008 fcc0 	bl	800bd6e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80033ee:	f04f 1305 	mov.w	r3, #327685	@ 0x50005
 80033f2:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
    Block1_1.setAction(buttonCallback);
 80033f6:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
 80033fa:	4648      	mov	r0, r9
 80033fc:	4639      	mov	r1, r7
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80033fe:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8003402:	f007 fab3 	bl	800a96c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003406:	4620      	mov	r0, r4
 8003408:	b006      	add	sp, #24
 800340a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800340e:	bf00      	nop
 8003410:	080352b0 	.word	0x080352b0
 8003414:	08035a20 	.word	0x08035a20
 8003418:	08035b00 	.word	0x08035b00
 800341c:	08035298 	.word	0x08035298
 8003420:	080032af 	.word	0x080032af

08003424 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8003424:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8003426:	4770      	bx	lr

08003428 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8003428:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800342a:	4770      	bx	lr

0800342c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800342c:	4770      	bx	lr

0800342e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800342e:	888b      	ldrh	r3, [r1, #4]
 8003430:	69c0      	ldr	r0, [r0, #28]
 8003432:	0adb      	lsrs	r3, r3, #11
 8003434:	680a      	ldr	r2, [r1, #0]
 8003436:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800343a:	4410      	add	r0, r2
 800343c:	4770      	bx	lr

0800343e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800343e:	b510      	push	{r4, lr}
 8003440:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8003442:	b1ba      	cbz	r2, 8003474 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8003444:	7b10      	ldrb	r0, [r2, #12]
 8003446:	b168      	cbz	r0, 8003464 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8003448:	7b53      	ldrb	r3, [r2, #13]
 800344a:	7ad2      	ldrb	r2, [r2, #11]
 800344c:	021b      	lsls	r3, r3, #8
 800344e:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003452:	431a      	orrs	r2, r3
 8003454:	6a23      	ldr	r3, [r4, #32]
 8003456:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 800345a:	881a      	ldrh	r2, [r3, #0]
 800345c:	428a      	cmp	r2, r1
 800345e:	d102      	bne.n	8003466 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8003460:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8003464:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8003466:	d805      	bhi.n	8003474 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003468:	3801      	subs	r0, #1
 800346a:	b280      	uxth	r0, r0
 800346c:	3304      	adds	r3, #4
 800346e:	2800      	cmp	r0, #0
 8003470:	d1f3      	bne.n	800345a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8003472:	e7f7      	b.n	8003464 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8003474:	2000      	movs	r0, #0
 8003476:	e7f5      	b.n	8003464 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08003478 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8003478:	b510      	push	{r4, lr}
 800347a:	4604      	mov	r4, r0
 800347c:	212c      	movs	r1, #44	@ 0x2c
 800347e:	f02d fe62 	bl	8031146 <_ZdlPvj>
 8003482:	4620      	mov	r0, r4
 8003484:	bd10      	pop	{r4, pc}
	...

08003488 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8003488:	b530      	push	{r4, r5, lr}
 800348a:	4604      	mov	r4, r0
 800348c:	b08b      	sub	sp, #44	@ 0x2c
      arabicTable(formsTable)
 800348e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8003492:	9508      	str	r5, [sp, #32]
 8003494:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8003498:	9507      	str	r5, [sp, #28]
 800349a:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800349e:	9506      	str	r5, [sp, #24]
 80034a0:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 80034a4:	9505      	str	r5, [sp, #20]
 80034a6:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 80034aa:	9504      	str	r5, [sp, #16]
 80034ac:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80034b0:	9503      	str	r5, [sp, #12]
 80034b2:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 80034b6:	9502      	str	r5, [sp, #8]
 80034b8:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 80034bc:	9501      	str	r5, [sp, #4]
 80034be:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80034c2:	9500      	str	r5, [sp, #0]
 80034c4:	f00b fa20 	bl	800e908 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
}
 80034c8:	4620      	mov	r0, r4
      arabicTable(formsTable)
 80034ca:	4b06      	ldr	r3, [pc, #24]	@ (80034e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80034cc:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80034ce:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80034d0:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80034d2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80034d4:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80034d6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80034d8:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80034da:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80034dc:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80034de:	b00b      	add	sp, #44	@ 0x2c
 80034e0:	bd30      	pop	{r4, r5, pc}
 80034e2:	bf00      	nop
 80034e4:	080352e8 	.word	0x080352e8

080034e8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80034e8:	4770      	bx	lr
	...

080034ec <_Z23getFont_verdana_10_4bppv>:
{
 80034ec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80034ee:	4d15      	ldr	r5, [pc, #84]	@ (8003544 <_Z23getFont_verdana_10_4bppv+0x58>)
{
 80034f0:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80034f2:	e8d5 4faf 	lda	r4, [r5]
 80034f6:	f014 0401 	ands.w	r4, r4, #1
 80034fa:	d120      	bne.n	800353e <_Z23getFont_verdana_10_4bppv+0x52>
 80034fc:	4628      	mov	r0, r5
 80034fe:	f02d fe24 	bl	803114a <__cxa_guard_acquire>
 8003502:	b1e0      	cbz	r0, 800353e <_Z23getFont_verdana_10_4bppv+0x52>
 8003504:	233f      	movs	r3, #63	@ 0x3f
 8003506:	9309      	str	r3, [sp, #36]	@ 0x24
 8003508:	4b0f      	ldr	r3, [pc, #60]	@ (8003548 <_Z23getFont_verdana_10_4bppv+0x5c>)
 800350a:	2201      	movs	r2, #1
 800350c:	9308      	str	r3, [sp, #32]
 800350e:	4b0f      	ldr	r3, [pc, #60]	@ (800354c <_Z23getFont_verdana_10_4bppv+0x60>)
 8003510:	490f      	ldr	r1, [pc, #60]	@ (8003550 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003512:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003516:	2304      	movs	r3, #4
 8003518:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800351c:	230a      	movs	r3, #10
 800351e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003522:	9300      	str	r3, [sp, #0]
 8003524:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003528:	480a      	ldr	r0, [pc, #40]	@ (8003554 <_Z23getFont_verdana_10_4bppv+0x68>)
 800352a:	940a      	str	r4, [sp, #40]	@ 0x28
 800352c:	9405      	str	r4, [sp, #20]
 800352e:	f7ff ffab 	bl	8003488 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003532:	4809      	ldr	r0, [pc, #36]	@ (8003558 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003534:	f02e fffe 	bl	8032534 <atexit>
 8003538:	4628      	mov	r0, r5
 800353a:	f02d fe12 	bl	8031162 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800353e:	4805      	ldr	r0, [pc, #20]	@ (8003554 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003540:	b00f      	add	sp, #60	@ 0x3c
 8003542:	bd30      	pop	{r4, r5, pc}
 8003544:	2006e880 	.word	0x2006e880
 8003548:	080388a0 	.word	0x080388a0
 800354c:	080388ac 	.word	0x080388ac
 8003550:	08038870 	.word	0x08038870
 8003554:	2006e884 	.word	0x2006e884
 8003558:	080034e9 	.word	0x080034e9

0800355c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800355c:	4770      	bx	lr
	...

08003560 <_Z23getFont_verdana_20_4bppv>:
{
 8003560:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003562:	4d15      	ldr	r5, [pc, #84]	@ (80035b8 <_Z23getFont_verdana_20_4bppv+0x58>)
{
 8003564:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003566:	e8d5 4faf 	lda	r4, [r5]
 800356a:	f014 0401 	ands.w	r4, r4, #1
 800356e:	d120      	bne.n	80035b2 <_Z23getFont_verdana_20_4bppv+0x52>
 8003570:	4628      	mov	r0, r5
 8003572:	f02d fdea 	bl	803114a <__cxa_guard_acquire>
 8003576:	b1e0      	cbz	r0, 80035b2 <_Z23getFont_verdana_20_4bppv+0x52>
 8003578:	233f      	movs	r3, #63	@ 0x3f
 800357a:	9309      	str	r3, [sp, #36]	@ 0x24
 800357c:	4b0f      	ldr	r3, [pc, #60]	@ (80035bc <_Z23getFont_verdana_20_4bppv+0x5c>)
 800357e:	2201      	movs	r2, #1
 8003580:	9308      	str	r3, [sp, #32]
 8003582:	4b0f      	ldr	r3, [pc, #60]	@ (80035c0 <_Z23getFont_verdana_20_4bppv+0x60>)
 8003584:	490f      	ldr	r1, [pc, #60]	@ (80035c4 <_Z23getFont_verdana_20_4bppv+0x64>)
 8003586:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800358a:	2304      	movs	r3, #4
 800358c:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003590:	2314      	movs	r3, #20
 8003592:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003596:	9300      	str	r3, [sp, #0]
 8003598:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800359c:	480a      	ldr	r0, [pc, #40]	@ (80035c8 <_Z23getFont_verdana_20_4bppv+0x68>)
 800359e:	940a      	str	r4, [sp, #40]	@ 0x28
 80035a0:	9405      	str	r4, [sp, #20]
 80035a2:	f7ff ff71 	bl	8003488 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80035a6:	4809      	ldr	r0, [pc, #36]	@ (80035cc <_Z23getFont_verdana_20_4bppv+0x6c>)
 80035a8:	f02e ffc4 	bl	8032534 <atexit>
 80035ac:	4628      	mov	r0, r5
 80035ae:	f02d fdd8 	bl	8031162 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 80035b2:	4805      	ldr	r0, [pc, #20]	@ (80035c8 <_Z23getFont_verdana_20_4bppv+0x68>)
 80035b4:	b00f      	add	sp, #60	@ 0x3c
 80035b6:	bd30      	pop	{r4, r5, pc}
 80035b8:	2006e8b0 	.word	0x2006e8b0
 80035bc:	080388a4 	.word	0x080388a4
 80035c0:	080388b0 	.word	0x080388b0
 80035c4:	08038880 	.word	0x08038880
 80035c8:	2006e8b4 	.word	0x2006e8b4
 80035cc:	0800355d 	.word	0x0800355d

080035d0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80035d0:	4770      	bx	lr
	...

080035d4 <_Z23getFont_verdana_40_4bppv>:
{
 80035d4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80035d6:	4d15      	ldr	r5, [pc, #84]	@ (800362c <_Z23getFont_verdana_40_4bppv+0x58>)
{
 80035d8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80035da:	e8d5 4faf 	lda	r4, [r5]
 80035de:	f014 0401 	ands.w	r4, r4, #1
 80035e2:	d120      	bne.n	8003626 <_Z23getFont_verdana_40_4bppv+0x52>
 80035e4:	4628      	mov	r0, r5
 80035e6:	f02d fdb0 	bl	803114a <__cxa_guard_acquire>
 80035ea:	b1e0      	cbz	r0, 8003626 <_Z23getFont_verdana_40_4bppv+0x52>
 80035ec:	233f      	movs	r3, #63	@ 0x3f
 80035ee:	9309      	str	r3, [sp, #36]	@ 0x24
 80035f0:	4b0f      	ldr	r3, [pc, #60]	@ (8003630 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80035f2:	2201      	movs	r2, #1
 80035f4:	9308      	str	r3, [sp, #32]
 80035f6:	4b0f      	ldr	r3, [pc, #60]	@ (8003634 <_Z23getFont_verdana_40_4bppv+0x60>)
 80035f8:	490f      	ldr	r1, [pc, #60]	@ (8003638 <_Z23getFont_verdana_40_4bppv+0x64>)
 80035fa:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80035fe:	2304      	movs	r3, #4
 8003600:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003604:	2328      	movs	r3, #40	@ 0x28
 8003606:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800360a:	9300      	str	r3, [sp, #0]
 800360c:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003610:	480a      	ldr	r0, [pc, #40]	@ (800363c <_Z23getFont_verdana_40_4bppv+0x68>)
 8003612:	940a      	str	r4, [sp, #40]	@ 0x28
 8003614:	9405      	str	r4, [sp, #20]
 8003616:	f7ff ff37 	bl	8003488 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800361a:	4809      	ldr	r0, [pc, #36]	@ (8003640 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800361c:	f02e ff8a 	bl	8032534 <atexit>
 8003620:	4628      	mov	r0, r5
 8003622:	f02d fd9e 	bl	8031162 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003626:	4805      	ldr	r0, [pc, #20]	@ (800363c <_Z23getFont_verdana_40_4bppv+0x68>)
 8003628:	b00f      	add	sp, #60	@ 0x3c
 800362a:	bd30      	pop	{r4, r5, pc}
 800362c:	2006e8e0 	.word	0x2006e8e0
 8003630:	080388a8 	.word	0x080388a8
 8003634:	080388b4 	.word	0x080388b4
 8003638:	08038890 	.word	0x08038890
 800363c:	2006e8e4 	.word	0x2006e8e4
 8003640:	080035d1 	.word	0x080035d1

08003644 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8003644:	2000      	movs	r0, #0
 8003646:	4770      	bx	lr

08003648 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8003648:	2000      	movs	r0, #0
 800364a:	4770      	bx	lr

0800364c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800364c:	b40e      	push	{r1, r2, r3}
 800364e:	b503      	push	{r0, r1, lr}
 8003650:	ab03      	add	r3, sp, #12
 8003652:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003656:	2100      	movs	r1, #0
    va_start(pArg, text);
 8003658:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800365a:	f00a fc55 	bl	800df08 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800365e:	b002      	add	sp, #8
 8003660:	f85d eb04 	ldr.w	lr, [sp], #4
 8003664:	b003      	add	sp, #12
 8003666:	4770      	bx	lr

08003668 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003668:	b40c      	push	{r2, r3}
 800366a:	b507      	push	{r0, r1, r2, lr}
 800366c:	ab04      	add	r3, sp, #16
 800366e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003672:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003674:	f00a fc48 	bl	800df08 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003678:	b003      	add	sp, #12
 800367a:	f85d eb04 	ldr.w	lr, [sp], #4
 800367e:	b002      	add	sp, #8
 8003680:	4770      	bx	lr
	...

08003684 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003684:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8003686:	b510      	push	{r4, lr}
 8003688:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800368a:	b373      	cbz	r3, 80036ea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800368c:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 800368e:	b92b      	cbnz	r3, 800369c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003690:	21c5      	movs	r1, #197	@ 0xc5
 8003692:	4b18      	ldr	r3, [pc, #96]	@ (80036f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8003694:	4a18      	ldr	r2, [pc, #96]	@ (80036f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8003696:	4819      	ldr	r0, [pc, #100]	@ (80036fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8003698:	f02e ff2e 	bl	80324f8 <__assert_func>
            return buffer[pos];
 800369c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800369e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80036a2:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 80036a4:	b30b      	cbz	r3, 80036ea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80036a6:	f00c f99c 	bl	800f9e2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80036aa:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80036ac:	2b01      	cmp	r3, #1
 80036ae:	d803      	bhi.n	80036b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80036b0:	21cb      	movs	r1, #203	@ 0xcb
 80036b2:	4b13      	ldr	r3, [pc, #76]	@ (8003700 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80036b4:	4a13      	ldr	r2, [pc, #76]	@ (8003704 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80036b6:	e7ee      	b.n	8003696 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80036b8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80036ba:	f640 103f 	movw	r0, #2367	@ 0x93f
 80036be:	1c53      	adds	r3, r2, #1
 80036c0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80036c2:	4619      	mov	r1, r3
 80036c4:	2b09      	cmp	r3, #9
 80036c6:	bf88      	it	hi
 80036c8:	f1a3 010a 	subhi.w	r1, r3, #10
 80036cc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80036d0:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 80036d2:	4281      	cmp	r1, r0
 80036d4:	d109      	bne.n	80036ea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80036d6:	2b0a      	cmp	r3, #10
 80036d8:	bf28      	it	cs
 80036da:	2300      	movcs	r3, #0
 80036dc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
            return buffer[pos];
 80036e0:	8c50      	ldrh	r0, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80036e2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80036e6:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 80036e8:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80036ea:	4620      	mov	r0, r4
}
 80036ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80036f0:	f00c b87a 	b.w	800f7e8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80036f4:	08035348 	.word	0x08035348
 80036f8:	08035351 	.word	0x08035351
 80036fc:	080353fc 	.word	0x080353fc
 8003700:	08035446 	.word	0x08035446
 8003704:	08035454 	.word	0x08035454

08003708 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003708:	f00c b835 	b.w	800f776 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800370c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800370c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800370e:	bb18      	cbnz	r0, 8003758 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003710:	4b12      	ldr	r3, [pc, #72]	@ (800375c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003712:	4813      	ldr	r0, [pc, #76]	@ (8003760 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003714:	681c      	ldr	r4, [r3, #0]
 8003716:	4913      	ldr	r1, [pc, #76]	@ (8003764 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003718:	b1b4      	cbz	r4, 8003748 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800371a:	6822      	ldr	r2, [r4, #0]
 800371c:	4422      	add	r2, r4
 800371e:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003720:	6862      	ldr	r2, [r4, #4]
 8003722:	4422      	add	r2, r4
 8003724:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003726:	68a2      	ldr	r2, [r4, #8]
 8003728:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800372a:	2200      	movs	r2, #0
 800372c:	4b0e      	ldr	r3, [pc, #56]	@ (8003768 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800372e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003730:	f000 f82a 	bl	8003788 <_ZN17TypedTextDatabase8getFontsEv>
 8003734:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003736:	f000 f825 	bl	8003784 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800373a:	4b0c      	ldr	r3, [pc, #48]	@ (800376c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800373c:	601c      	str	r4, [r3, #0]
        fonts = f;
 800373e:	4b0c      	ldr	r3, [pc, #48]	@ (8003770 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003740:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003742:	4b0c      	ldr	r3, [pc, #48]	@ (8003774 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003744:	8018      	strh	r0, [r3, #0]
    }
}
 8003746:	e007      	b.n	8003758 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003748:	4b0b      	ldr	r3, [pc, #44]	@ (8003778 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800374a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800374c:	4b0b      	ldr	r3, [pc, #44]	@ (800377c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800374e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003750:	4b0b      	ldr	r3, [pc, #44]	@ (8003780 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003752:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003754:	2c00      	cmp	r4, #0
 8003756:	d1e8      	bne.n	800372a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003758:	bd38      	pop	{r3, r4, r5, pc}
 800375a:	bf00      	nop
 800375c:	2006e91c 	.word	0x2006e91c
 8003760:	2006e914 	.word	0x2006e914
 8003764:	2006e910 	.word	0x2006e910
 8003768:	2006e918 	.word	0x2006e918
 800376c:	20082f58 	.word	0x20082f58
 8003770:	20082f60 	.word	0x20082f60
 8003774:	20082f5c 	.word	0x20082f5c
 8003778:	080388bc 	.word	0x080388bc
 800377c:	080388b8 	.word	0x080388b8
 8003780:	080388c0 	.word	0x080388c0

08003784 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 8003784:	2000      	movs	r0, #0
 8003786:	4770      	bx	lr

08003788 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003788:	4800      	ldr	r0, [pc, #0]	@ (800378c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800378a:	4770      	bx	lr
 800378c:	2006e920 	.word	0x2006e920

08003790 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003790:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8003792:	f7ff fee5 	bl	8003560 <_Z23getFont_verdana_20_4bppv>
};
 8003796:	4c04      	ldr	r4, [pc, #16]	@ (80037a8 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8003798:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800379a:	f7ff ff1b 	bl	80035d4 <_Z23getFont_verdana_40_4bppv>
};
 800379e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80037a0:	f7ff fea4 	bl	80034ec <_Z23getFont_verdana_10_4bppv>
};
 80037a4:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80037a6:	bd10      	pop	{r4, pc}
 80037a8:	2006e920 	.word	0x2006e920

080037ac <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 80037ac:	b510      	push	{r4, lr}
    pointArray = 0;
 80037ae:	2400      	movs	r4, #0
 80037b0:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 80037b2:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 80037b4:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 80037b6:	601c      	str	r4, [r3, #0]
}
 80037b8:	bd10      	pop	{r4, pc}

080037ba <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80037ba:	4770      	bx	lr

080037bc <_ZN19FrontendApplicationD0Ev>:
 80037bc:	b510      	push	{r4, lr}
 80037be:	4604      	mov	r4, r0
 80037c0:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80037c4:	f02d fcbf 	bl	8031146 <_ZdlPvj>
 80037c8:	4620      	mov	r0, r4
 80037ca:	bd10      	pop	{r4, pc}

080037cc <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80037cc:	b510      	push	{r4, lr}
 80037ce:	4604      	mov	r4, r0
    {
        model.tick();
 80037d0:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 80037d4:	f000 f8aa 	bl	800392c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80037d8:	4620      	mov	r0, r4
    }
 80037da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80037de:	f009 bcc9 	b.w	800d174 <_ZN8touchgfx11Application15handleTickEventEv>
	...

080037e4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80037e4:	b510      	push	{r4, lr}
 80037e6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80037e8:	f7ff fcd0 	bl	800318c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80037ec:	4b01      	ldr	r3, [pc, #4]	@ (80037f4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 80037ee:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 80037f0:	6023      	str	r3, [r4, #0]
}
 80037f2:	bd10      	pop	{r4, pc}
 80037f4:	08035530 	.word	0x08035530

080037f8 <_ZN20GameScreen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~GameScreen1Presenter() {}
 80037f8:	4770      	bx	lr

080037fa <_ZThn4_N20GameScreen1PresenterD1Ev>:
 80037fa:	3804      	subs	r0, #4
 80037fc:	4770      	bx	lr

080037fe <_ZN20GameScreen1Presenter10deactivateEv>:
}

void GameScreen1Presenter::activate()
{

}
 80037fe:	4770      	bx	lr

08003800 <_ZN20GameScreen1PresenterD0Ev>:
 8003800:	b510      	push	{r4, lr}
 8003802:	4604      	mov	r4, r0
 8003804:	2110      	movs	r1, #16
 8003806:	f02d fc9e 	bl	8031146 <_ZdlPvj>
 800380a:	4620      	mov	r0, r4
 800380c:	bd10      	pop	{r4, pc}

0800380e <_ZThn4_N20GameScreen1PresenterD0Ev>:
 800380e:	f1a0 0004 	sub.w	r0, r0, #4
 8003812:	e7f5      	b.n	8003800 <_ZN20GameScreen1PresenterD0Ev>

08003814 <_ZN20GameScreen1PresenterC1ER15GameScreen1View>:
    ModelListener() : model(0) {}
 8003814:	2200      	movs	r2, #0
 8003816:	6082      	str	r2, [r0, #8]
    : view(v)
 8003818:	4a02      	ldr	r2, [pc, #8]	@ (8003824 <_ZN20GameScreen1PresenterC1ER15GameScreen1View+0x10>)
 800381a:	60c1      	str	r1, [r0, #12]
 800381c:	6002      	str	r2, [r0, #0]
 800381e:	3218      	adds	r2, #24
 8003820:	6042      	str	r2, [r0, #4]
}
 8003822:	4770      	bx	lr
 8003824:	08035584 	.word	0x08035584

08003828 <_ZN15GameScreen1View14tearDownScreenEv>:
}

void GameScreen1View::tearDownScreen()
{
    GameScreen1ViewBase::tearDownScreen();
}
 8003828:	4770      	bx	lr
	...

0800382c <_ZN15GameScreen1ViewD1Ev>:

class GameScreen1View : public GameScreen1ViewBase
{
public:
    GameScreen1View();
    virtual ~GameScreen1View() {}
 800382c:	b510      	push	{r4, lr}
 800382e:	4604      	mov	r4, r0
 8003830:	4b02      	ldr	r3, [pc, #8]	@ (800383c <_ZN15GameScreen1ViewD1Ev+0x10>)
 8003832:	6003      	str	r3, [r0, #0]
 8003834:	f7ff fd09 	bl	800324a <_ZN19GameScreen1ViewBaseD1Ev>
 8003838:	4620      	mov	r0, r4
 800383a:	bd10      	pop	{r4, pc}
 800383c:	080355ac 	.word	0x080355ac

08003840 <_ZN15GameScreen1ViewD0Ev>:
 8003840:	b510      	push	{r4, lr}
 8003842:	4604      	mov	r4, r0
 8003844:	f7ff fff2 	bl	800382c <_ZN15GameScreen1ViewD1Ev>
 8003848:	4620      	mov	r0, r4
 800384a:	21e8      	movs	r1, #232	@ 0xe8
 800384c:	f02d fc7b 	bl	8031146 <_ZdlPvj>
 8003850:	4620      	mov	r0, r4
 8003852:	bd10      	pop	{r4, pc}

08003854 <_ZN15GameScreen1ViewC1Ev>:
GameScreen1View::GameScreen1View()
 8003854:	b530      	push	{r4, r5, lr}
 8003856:	4604      	mov	r4, r0
 8003858:	b087      	sub	sp, #28
 800385a:	f7ff fd45 	bl	80032e8 <_ZN19GameScreen1ViewBaseC1Ev>
 800385e:	4620      	mov	r0, r4
 8003860:	4b0c      	ldr	r3, [pc, #48]	@ (8003894 <_ZN15GameScreen1ViewC1Ev+0x40>)
 8003862:	2500      	movs	r5, #0
 8003864:	f840 3b98 	str.w	r3, [r0], #152
 8003868:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800386c:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003870:	f8ad 3014 	strh.w	r3, [sp, #20]
	Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID),
 8003874:	ab05      	add	r3, sp, #20
 8003876:	9300      	str	r3, [sp, #0]
 8003878:	aa03      	add	r2, sp, #12
 800387a:	ab04      	add	r3, sp, #16
 800387c:	a902      	add	r1, sp, #8
 800387e:	f8ad 5008 	strh.w	r5, [sp, #8]
 8003882:	f8ad 500c 	strh.w	r5, [sp, #12]
 8003886:	f008 fa72 	bl	800bd6e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
}
 800388a:	4620      	mov	r0, r4
	GameScreen1View::block1_1_Cliecked_number = 0;
 800388c:	f8c4 50e4 	str.w	r5, [r4, #228]	@ 0xe4
}
 8003890:	b007      	add	sp, #28
 8003892:	bd30      	pop	{r4, r5, pc}
 8003894:	080355ac 	.word	0x080355ac

08003898 <_ZN15GameScreen1View11setupScreenEv>:
    GameScreen1ViewBase::setupScreen();
 8003898:	f7ff bcd8 	b.w	800324c <_ZN19GameScreen1ViewBase11setupScreenEv>

0800389c <_ZN15GameScreen1View16Block1_1_ClickedEv>:


void GameScreen1View::Block1_1_Clicked()
{
 800389c:	b530      	push	{r4, r5, lr}
	if(GameScreen1View::block1_1_Cliecked_number == 0)
 800389e:	f8d0 30e4 	ldr.w	r3, [r0, #228]	@ 0xe4
{
 80038a2:	4604      	mov	r4, r0
 80038a4:	b087      	sub	sp, #28
	{
		Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_DISABLED_ID),
 80038a6:	f100 0598 	add.w	r5, r0, #152	@ 0x98
	if(GameScreen1View::block1_1_Cliecked_number == 0)
 80038aa:	b9eb      	cbnz	r3, 80038e8 <_ZN15GameScreen1View16Block1_1_ClickedEv+0x4c>
 80038ac:	2301      	movs	r3, #1
 80038ae:	f8ad 3008 	strh.w	r3, [sp, #8]
 80038b2:	f8ad 300c 	strh.w	r3, [sp, #12]
 80038b6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80038ba:	f8ad 3010 	strh.w	r3, [sp, #16]
 80038be:	f8ad 3014 	strh.w	r3, [sp, #20]
						touchgfx::Bitmap(BITMAP_INVALID));
		GameScreen1View::block1_1_Cliecked_number++;
	}
	else if(GameScreen1View::block1_1_Cliecked_number == 2)
	{
		Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_TINY_OUTLINE_DISABLED_NUMBER1_ID),
 80038c2:	ab05      	add	r3, sp, #20
 80038c4:	9300      	str	r3, [sp, #0]
 80038c6:	4628      	mov	r0, r5
 80038c8:	ab04      	add	r3, sp, #16
 80038ca:	aa03      	add	r2, sp, #12
 80038cc:	a902      	add	r1, sp, #8
 80038ce:	f008 fa4e 	bl	800bd6e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
						touchgfx::Bitmap(BITMAP_TINY_OUTLINE_DISABLED_NUMBER1_ID),
						touchgfx::Bitmap(BITMAP_INVALID),
						touchgfx::Bitmap(BITMAP_INVALID));
		GameScreen1View::block1_1_Cliecked_number++;
 80038d2:	f8d4 30e4 	ldr.w	r3, [r4, #228]	@ 0xe4
 80038d6:	3301      	adds	r3, #1
	{
		Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_TINY_OUTLINE_DISABLED_NUMBER2_ID),
						touchgfx::Bitmap(BITMAP_TINY_OUTLINE_DISABLED_NUMBER2_ID),
						touchgfx::Bitmap(BITMAP_INVALID),
						touchgfx::Bitmap(BITMAP_INVALID));
		GameScreen1View::block1_1_Cliecked_number=0;
 80038d8:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
	}

	Block1_1.invalidate();
 80038dc:	4628      	mov	r0, r5
}
 80038de:	b007      	add	sp, #28
 80038e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	Block1_1.invalidate();
 80038e4:	f00a bc3a 	b.w	800e15c <_ZNK8touchgfx8Drawable10invalidateEv>
	else if(GameScreen1View::block1_1_Cliecked_number == 1)
 80038e8:	2b01      	cmp	r3, #1
 80038ea:	d101      	bne.n	80038f0 <_ZN15GameScreen1View16Block1_1_ClickedEv+0x54>
 80038ec:	2300      	movs	r3, #0
 80038ee:	e7de      	b.n	80038ae <_ZN15GameScreen1View16Block1_1_ClickedEv+0x12>
	else if(GameScreen1View::block1_1_Cliecked_number == 2)
 80038f0:	2b02      	cmp	r3, #2
 80038f2:	d101      	bne.n	80038f8 <_ZN15GameScreen1View16Block1_1_ClickedEv+0x5c>
 80038f4:	2304      	movs	r3, #4
 80038f6:	e7da      	b.n	80038ae <_ZN15GameScreen1View16Block1_1_ClickedEv+0x12>
	else if(GameScreen1View::block1_1_Cliecked_number == 3)
 80038f8:	2b03      	cmp	r3, #3
 80038fa:	d1ef      	bne.n	80038dc <_ZN15GameScreen1View16Block1_1_ClickedEv+0x40>
 80038fc:	2305      	movs	r3, #5
 80038fe:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003902:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003906:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800390a:	f8ad 3010 	strh.w	r3, [sp, #16]
 800390e:	f8ad 3014 	strh.w	r3, [sp, #20]
		Block1_1.setBitmaps(touchgfx::Bitmap(BITMAP_TINY_OUTLINE_DISABLED_NUMBER2_ID),
 8003912:	ab05      	add	r3, sp, #20
 8003914:	9300      	str	r3, [sp, #0]
 8003916:	4628      	mov	r0, r5
 8003918:	ab04      	add	r3, sp, #16
 800391a:	aa03      	add	r2, sp, #12
 800391c:	a902      	add	r1, sp, #8
 800391e:	f008 fa26 	bl	800bd6e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
		GameScreen1View::block1_1_Cliecked_number=0;
 8003922:	2300      	movs	r3, #0
 8003924:	e7d8      	b.n	80038d8 <_ZN15GameScreen1View16Block1_1_ClickedEv+0x3c>

08003926 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003926:	2200      	movs	r2, #0
 8003928:	6002      	str	r2, [r0, #0]
{

}
 800392a:	4770      	bx	lr

0800392c <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800392c:	4770      	bx	lr

0800392e <MX66UW1G45G_EnableDTRMemoryMappedMode>:
  * @param  AddressWidth Address size
  * @note   Only OPI mode support DTR transfer rate
  * @retval XSPI memory status
  */
int32_t MX66UW1G45G_EnableDTRMemoryMappedMode(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode)
{
 800392e:	b510      	push	{r4, lr}
 8003930:	b096      	sub	sp, #88	@ 0x58
 8003932:	4604      	mov	r4, r0
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Mode);

  XSPI_RegularCmdTypeDef s_command = {0};
 8003934:	224c      	movs	r2, #76	@ 0x4c
 8003936:	2100      	movs	r1, #0
 8003938:	a803      	add	r0, sp, #12
 800393a:	f02e ffe4 	bl	8032906 <memset>
  XSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 800393e:	2300      	movs	r3, #0
 8003940:	e9cd 3300 	strd	r3, r3, [sp]

  /* Initialize the read command */
  s_command.OperationType = HAL_XSPI_OPTYPE_READ_CFG;
 8003944:	2301      	movs	r3, #1
 8003946:	9302      	str	r3, [sp, #8]
  s_command.InstructionMode = HAL_XSPI_INSTRUCTION_8_LINES;
 8003948:	2304      	movs	r3, #4
  s_command.InstructionDTRMode = HAL_XSPI_INSTRUCTION_DTR_ENABLE;
  s_command.InstructionWidth = HAL_XSPI_INSTRUCTION_16_BITS;
 800394a:	f04f 0c08 	mov.w	ip, #8
  s_command.InstructionMode = HAL_XSPI_INSTRUCTION_8_LINES;
 800394e:	9305      	str	r3, [sp, #20]
  s_command.InstructionWidth = HAL_XSPI_INSTRUCTION_16_BITS;
 8003950:	2310      	movs	r3, #16
 8003952:	e9cd 3c06 	strd	r3, ip, [sp, #24]
  s_command.Instruction = MX66UW1G45G_OCTA_READ_DTR_CMD;
 8003956:	f64e 6311 	movw	r3, #60945	@ 0xee11
 800395a:	9304      	str	r3, [sp, #16]
  s_command.AddressMode = HAL_XSPI_ADDRESS_8_LINES;
 800395c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  s_command.AddressDTRMode = HAL_XSPI_ADDRESS_DTR_ENABLE;
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003960:	f44f 6100 	mov.w	r1, #2048	@ 0x800
  s_command.AddressMode = HAL_XSPI_ADDRESS_8_LINES;
 8003964:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003966:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 800396a:	e9cd 310a 	strd	r3, r1, [sp, #40]	@ 0x28
  s_command.AlternateBytesMode = HAL_XSPI_ALT_BYTES_NONE;
  s_command.DataMode = HAL_XSPI_DATA_8_LINES;
 800396e:	f04f 6380 	mov.w	r3, #67108864	@ 0x4000000
  s_command.DataDTRMode = HAL_XSPI_DATA_DTR_ENABLE;
  s_command.DummyCycles = DUMMY_CYCLES_READ_OCTAL_DTR;
 8003972:	f04f 6c00 	mov.w	ip, #134217728	@ 0x8000000
  s_command.DataMode = HAL_XSPI_DATA_8_LINES;
 8003976:	9310      	str	r3, [sp, #64]	@ 0x40
  s_command.DummyCycles = DUMMY_CYCLES_READ_OCTAL_DTR;
 8003978:	2306      	movs	r3, #6
 800397a:	e9cd c312 	strd	ip, r3, [sp, #72]	@ 0x48
  s_command.DQSMode = HAL_XSPI_DQS_ENABLE;
 800397e:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 #if defined (XSPI_CCR_SIOO)
  s_command.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
 #endif

  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003982:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003986:	4620      	mov	r0, r4
 8003988:	a902      	add	r1, sp, #8
  s_command.DQSMode = HAL_XSPI_DQS_ENABLE;
 800398a:	9314      	str	r3, [sp, #80]	@ 0x50
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800398c:	f004 fdd2 	bl	8008534 <HAL_XSPI_Command>
 8003990:	b118      	cbz	r0, 800399a <MX66UW1G45G_EnableDTRMemoryMappedMode+0x6c>
  {
    return MX66UW1G45G_ERROR;
 8003992:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003996:	b016      	add	sp, #88	@ 0x58
 8003998:	bd10      	pop	{r4, pc}
  s_command.OperationType = HAL_XSPI_OPTYPE_WRITE_CFG;
 800399a:	2302      	movs	r3, #2
 800399c:	9302      	str	r3, [sp, #8]
  s_command.Instruction = MX66UW1G45G_OCTA_PAGE_PROG_CMD;
 800399e:	f241 23ed 	movw	r3, #4845	@ 0x12ed
  s_command.DQSMode = HAL_XSPI_DQS_DISABLE;
 80039a2:	e9cd 0013 	strd	r0, r0, [sp, #76]	@ 0x4c
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80039a6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80039aa:	4620      	mov	r0, r4
 80039ac:	a902      	add	r1, sp, #8
  s_command.Instruction = MX66UW1G45G_OCTA_PAGE_PROG_CMD;
 80039ae:	9304      	str	r3, [sp, #16]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80039b0:	f004 fdc0 	bl	8008534 <HAL_XSPI_Command>
 80039b4:	2800      	cmp	r0, #0
 80039b6:	d1ec      	bne.n	8003992 <MX66UW1G45G_EnableDTRMemoryMappedMode+0x64>
  s_mem_mapped_cfg.TimeOutActivation = HAL_XSPI_TIMEOUT_COUNTER_DISABLE;
 80039b8:	9000      	str	r0, [sp, #0]
  if (HAL_XSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
 80039ba:	4669      	mov	r1, sp
 80039bc:	4620      	mov	r0, r4
 80039be:	f004 fee6 	bl	800878e <HAL_XSPI_MemoryMapped>
 80039c2:	3800      	subs	r0, #0
 80039c4:	bf18      	it	ne
 80039c6:	2001      	movne	r0, #1
 80039c8:	4240      	negs	r0, r0
 80039ca:	e7e4      	b.n	8003996 <MX66UW1G45G_EnableDTRMemoryMappedMode+0x68>

080039cc <MX66UW1G45G_WriteEnable>:
  * @param  Mode Interface mode
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_WriteEnable(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 80039cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80039d0:	460c      	mov	r4, r1
 80039d2:	b09a      	sub	sp, #104	@ 0x68
  XSPI_RegularCmdTypeDef s_command = {0};
 80039d4:	2100      	movs	r1, #0
{
 80039d6:	4607      	mov	r7, r0
 80039d8:	4616      	mov	r6, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 80039da:	a806      	add	r0, sp, #24
 80039dc:	2250      	movs	r2, #80	@ 0x50
 80039de:	f02e ff92 	bl	8032906 <memset>
  XSPI_AutoPollingTypeDef s_config = {0};
 80039e2:	2214      	movs	r2, #20
 80039e4:	2100      	movs	r1, #0
 80039e6:	a801      	add	r0, sp, #4
 80039e8:	f02e ff8d 	bl	8032906 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 80039ec:	b934      	cbnz	r4, 80039fc <MX66UW1G45G_WriteEnable+0x30>
 80039ee:	2e01      	cmp	r6, #1
 80039f0:	d164      	bne.n	8003abc <MX66UW1G45G_WriteEnable+0xf0>
  {
    return MX66UW1G45G_ERROR;
 80039f2:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 80039f6:	b01a      	add	sp, #104	@ 0x68
 80039f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 80039fc:	2304      	movs	r3, #4
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 80039fe:	1e71      	subs	r1, r6, #1
 8003a00:	424d      	negs	r5, r1
 8003a02:	414d      	adcs	r5, r1
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003a04:	2c00      	cmp	r4, #0
 8003a06:	bf14      	ite	ne
 8003a08:	f04f 0801 	movne.w	r8, #1
 8003a0c:	f04f 0800 	moveq.w	r8, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003a10:	9309      	str	r3, [sp, #36]	@ 0x24
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003a12:	ea4f 03c5 	mov.w	r3, r5, lsl #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003a16:	930b      	str	r3, [sp, #44]	@ 0x2c
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003a18:	ea4f 1308 	mov.w	r3, r8, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003a1c:	930a      	str	r3, [sp, #40]	@ 0x28
                              : MX66UW1G45G_OCTA_WRITE_ENABLE_CMD;
 8003a1e:	f240 63f9 	movw	r3, #1785	@ 0x6f9
 8003a22:	bf08      	it	eq
 8003a24:	2306      	moveq	r3, #6
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a26:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003a2a:	4638      	mov	r0, r7
 8003a2c:	a906      	add	r1, sp, #24
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003a2e:	9308      	str	r3, [sp, #32]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a30:	f004 fd80 	bl	8008534 <HAL_XSPI_Command>
 8003a34:	2800      	cmp	r0, #0
 8003a36:	d1dc      	bne.n	80039f2 <MX66UW1G45G_WriteEnable+0x26>
                              : MX66UW1G45G_OCTA_READ_STATUS_REG_CMD;
 8003a38:	2c00      	cmp	r4, #0
 8003a3a:	f240 53fa 	movw	r3, #1530	@ 0x5fa
 8003a3e:	bf08      	it	eq
 8003a40:	2305      	moveq	r3, #5
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003a42:	9308      	str	r3, [sp, #32]
  s_command.AddressMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_ADDRESS_NONE : HAL_XSPI_ADDRESS_8_LINES;
 8003a44:	ea4f 2388 	mov.w	r3, r8, lsl #10
 8003a48:	930d      	str	r3, [sp, #52]	@ 0x34
                                 : HAL_XSPI_ADDRESS_DTR_DISABLE;
 8003a4a:	ea4f 23c5 	mov.w	r3, r5, lsl #11
  s_command.AddressDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003a4e:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003a50:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003a54:	930e      	str	r3, [sp, #56]	@ 0x38
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003a56:	bf0c      	ite	eq
 8003a58:	f04f 7380 	moveq.w	r3, #16777216	@ 0x1000000
 8003a5c:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
 8003a60:	9314      	str	r3, [sp, #80]	@ 0x50
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DATA_DTR_ENABLE : HAL_XSPI_DATA_DTR_DISABLE;
 8003a62:	ea4f 63c5 	mov.w	r3, r5, lsl #27
  s_command.Address = 0U;
 8003a66:	900c      	str	r0, [sp, #48]	@ 0x30
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DATA_DTR_ENABLE : HAL_XSPI_DATA_DTR_DISABLE;
 8003a68:	9316      	str	r3, [sp, #88]	@ 0x58
                              : ((Rate == MX66UW1G45G_DTR_TRANSFER)
 8003a6a:	d003      	beq.n	8003a74 <MX66UW1G45G_WriteEnable+0xa8>
 8003a6c:	2e01      	cmp	r6, #1
 8003a6e:	bf0c      	ite	eq
 8003a70:	2405      	moveq	r4, #5
 8003a72:	2404      	movne	r4, #4
  s_command.DataLength = (Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U;
 8003a74:	2e01      	cmp	r6, #1
 8003a76:	bf0c      	ite	eq
 8003a78:	2302      	moveq	r3, #2
 8003a7a:	2301      	movne	r3, #1
  s_command.DQSMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DQS_ENABLE : HAL_XSPI_DQS_DISABLE;
 8003a7c:	076d      	lsls	r5, r5, #29
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a7e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003a82:	4638      	mov	r0, r7
 8003a84:	a906      	add	r1, sp, #24
  s_command.DummyCycles = (Mode == MX66UW1G45G_SPI_MODE)
 8003a86:	9417      	str	r4, [sp, #92]	@ 0x5c
  s_command.DataLength = (Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U;
 8003a88:	9315      	str	r3, [sp, #84]	@ 0x54
  s_command.DQSMode = (Rate == MX66UW1G45G_DTR_TRANSFER) ? HAL_XSPI_DQS_ENABLE : HAL_XSPI_DQS_DISABLE;
 8003a8a:	9518      	str	r5, [sp, #96]	@ 0x60
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003a8c:	f004 fd52 	bl	8008534 <HAL_XSPI_Command>
 8003a90:	2800      	cmp	r0, #0
 8003a92:	d1ae      	bne.n	80039f2 <MX66UW1G45G_WriteEnable+0x26>
  s_config.MatchValue = 2U;
 8003a94:	2302      	movs	r3, #2
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003a96:	2210      	movs	r2, #16
  s_config.MatchMask = 2U;
 8003a98:	e9cd 3301 	strd	r3, r3, [sp, #4]
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003a9c:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  s_config.MatchMode = HAL_XSPI_MATCH_MODE_AND;
 8003aa0:	9003      	str	r0, [sp, #12]
  s_config.AutomaticStop = HAL_XSPI_AUTOMATIC_STOP_ENABLE;
 8003aa2:	e9cd 3204 	strd	r3, r2, [sp, #16]
  if (HAL_XSPI_AutoPolling(Ctx, &s_config, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003aa6:	4638      	mov	r0, r7
 8003aa8:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003aac:	a901      	add	r1, sp, #4
 8003aae:	f004 fe19 	bl	80086e4 <HAL_XSPI_AutoPolling>
 8003ab2:	3800      	subs	r0, #0
 8003ab4:	bf18      	it	ne
 8003ab6:	2001      	movne	r0, #1
 8003ab8:	4240      	negs	r0, r0
 8003aba:	e79c      	b.n	80039f6 <MX66UW1G45G_WriteEnable+0x2a>
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003abc:	2301      	movs	r3, #1
 8003abe:	e79e      	b.n	80039fe <MX66UW1G45G_WriteEnable+0x32>

08003ac0 <MX66UW1G45G_WriteCfg2Register>:
  * @param  Value Value to write to configuration register
  * @retval error status
  */
int32_t MX66UW1G45G_WriteCfg2Register(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode,
                                      MX66UW1G45G_Transfer_t Rate, uint32_t WriteAddr, uint8_t Value)
{
 8003ac0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003ac2:	460e      	mov	r6, r1
 8003ac4:	b095      	sub	sp, #84	@ 0x54
 8003ac6:	4605      	mov	r5, r0
 8003ac8:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003aca:	2100      	movs	r1, #0
 8003acc:	2250      	movs	r2, #80	@ 0x50
 8003ace:	4668      	mov	r0, sp
{
 8003ad0:	461f      	mov	r7, r3
  XSPI_RegularCmdTypeDef s_command = {0};
 8003ad2:	f02e ff18 	bl	8032906 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003ad6:	b92e      	cbnz	r6, 8003ae4 <MX66UW1G45G_WriteCfg2Register+0x24>
 8003ad8:	2c01      	cmp	r4, #1
 8003ada:	d145      	bne.n	8003b68 <MX66UW1G45G_WriteCfg2Register+0xa8>
  {
    return MX66UW1G45G_ERROR;
 8003adc:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003ae0:	b015      	add	sp, #84	@ 0x54
 8003ae2:	bdf0      	pop	{r4, r5, r6, r7, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003ae4:	2304      	movs	r3, #4
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003ae6:	9303      	str	r3, [sp, #12]
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003ae8:	1e63      	subs	r3, r4, #1
 8003aea:	425a      	negs	r2, r3
 8003aec:	415a      	adcs	r2, r3
 8003aee:	00d3      	lsls	r3, r2, #3
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003af0:	2e00      	cmp	r6, #0
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003af2:	9305      	str	r3, [sp, #20]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003af4:	bf14      	ite	ne
 8003af6:	2301      	movne	r3, #1
 8003af8:	2300      	moveq	r3, #0
 8003afa:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003afe:	9304      	str	r3, [sp, #16]
                              : MX66UW1G45G_OCTA_WRITE_CFG_REG2_CMD;
 8003b00:	f247 238d 	movw	r3, #29325	@ 0x728d
 8003b04:	bf08      	it	eq
 8003b06:	2372      	moveq	r3, #114	@ 0x72
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003b08:	9302      	str	r3, [sp, #8]
  s_command.AddressMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_ADDRESS_1_LINE : HAL_XSPI_ADDRESS_8_LINES;
 8003b0a:	bf0c      	ite	eq
 8003b0c:	f44f 7380 	moveq.w	r3, #256	@ 0x100
 8003b10:	f44f 6380 	movne.w	r3, #1024	@ 0x400
 8003b14:	9307      	str	r3, [sp, #28]
                                 : HAL_XSPI_ADDRESS_DTR_DISABLE;
 8003b16:	ea4f 23c2 	mov.w	r3, r2, lsl #11
  s_command.AddressDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003b1a:	9309      	str	r3, [sp, #36]	@ 0x24
  s_command.AddressWidth = HAL_XSPI_ADDRESS_32_BITS;
 8003b1c:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8003b20:	9308      	str	r3, [sp, #32]
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003b22:	bf0c      	ite	eq
 8003b24:	f04f 7380 	moveq.w	r3, #16777216	@ 0x1000000
 8003b28:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
                              : HAL_XSPI_DATA_DTR_DISABLE;
 8003b2c:	ea4f 62c2 	mov.w	r2, r2, lsl #27
  s_command.Address = WriteAddr;
 8003b30:	9706      	str	r7, [sp, #24]
  s_command.DataMode = (Mode == MX66UW1G45G_SPI_MODE) ? HAL_XSPI_DATA_1_LINE : HAL_XSPI_DATA_8_LINES;
 8003b32:	930e      	str	r3, [sp, #56]	@ 0x38
  s_command.DataDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003b34:	9210      	str	r2, [sp, #64]	@ 0x40
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003b36:	d019      	beq.n	8003b6c <MX66UW1G45G_WriteCfg2Register+0xac>
 8003b38:	2c01      	cmp	r4, #1
 8003b3a:	bf14      	ite	ne
 8003b3c:	2301      	movne	r3, #1
 8003b3e:	2302      	moveq	r3, #2
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b40:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003b44:	4669      	mov	r1, sp
 8003b46:	4628      	mov	r0, r5
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003b48:	930f      	str	r3, [sp, #60]	@ 0x3c
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b4a:	f004 fcf3 	bl	8008534 <HAL_XSPI_Command>
 8003b4e:	2800      	cmp	r0, #0
 8003b50:	d1c4      	bne.n	8003adc <MX66UW1G45G_WriteCfg2Register+0x1c>
  if (HAL_XSPI_Transmit(Ctx, &Value, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b52:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003b56:	4628      	mov	r0, r5
 8003b58:	a91a      	add	r1, sp, #104	@ 0x68
 8003b5a:	f004 fd7f 	bl	800865c <HAL_XSPI_Transmit>
 8003b5e:	3800      	subs	r0, #0
 8003b60:	bf18      	it	ne
 8003b62:	2001      	movne	r0, #1
 8003b64:	4240      	negs	r0, r0
 8003b66:	e7bb      	b.n	8003ae0 <MX66UW1G45G_WriteCfg2Register+0x20>
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003b68:	2301      	movs	r3, #1
 8003b6a:	e7bc      	b.n	8003ae6 <MX66UW1G45G_WriteCfg2Register+0x26>
  s_command.DataLength = (Mode == MX66UW1G45G_SPI_MODE) ? 1U : ((Rate == MX66UW1G45G_DTR_TRANSFER) ? 2U : 1U);
 8003b6c:	2301      	movs	r3, #1
 8003b6e:	e7e7      	b.n	8003b40 <MX66UW1G45G_WriteCfg2Register+0x80>

08003b70 <MX66UW1G45G_ResetEnable>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_ResetEnable(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 8003b70:	b570      	push	{r4, r5, r6, lr}
 8003b72:	460d      	mov	r5, r1
 8003b74:	b094      	sub	sp, #80	@ 0x50
 8003b76:	4606      	mov	r6, r0
 8003b78:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003b7a:	2100      	movs	r1, #0
 8003b7c:	2250      	movs	r2, #80	@ 0x50
 8003b7e:	4668      	mov	r0, sp
 8003b80:	f02e fec1 	bl	8032906 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003b84:	bb05      	cbnz	r5, 8003bc8 <MX66UW1G45G_ResetEnable+0x58>
 8003b86:	2c01      	cmp	r4, #1
 8003b88:	d020      	beq.n	8003bcc <MX66UW1G45G_ResetEnable+0x5c>
  /* Initialize the reset enable command */
  s_command.OperationType = HAL_XSPI_OPTYPE_COMMON_CFG;
  s_command.IOSelect =  HAL_XSPI_SELECT_IO_3_0;
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
                                  ? HAL_XSPI_INSTRUCTION_1_LINE
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003b8a:	2301      	movs	r3, #1
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
                                     ? HAL_XSPI_INSTRUCTION_DTR_ENABLE
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003b8c:	1e62      	subs	r2, r4, #1
 8003b8e:	4254      	negs	r4, r2
 8003b90:	4154      	adcs	r4, r2
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
                                   ? HAL_XSPI_INSTRUCTION_8_BITS
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003b92:	2d00      	cmp	r5, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003b94:	9303      	str	r3, [sp, #12]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003b96:	bf14      	ite	ne
 8003b98:	2301      	movne	r3, #1
 8003b9a:	2300      	moveq	r3, #0
 8003b9c:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003ba0:	9304      	str	r3, [sp, #16]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
                              ? MX66UW1G45G_RESET_ENABLE_CMD
                              : MX66UW1G45G_OCTA_RESET_ENABLE_CMD;
 8003ba2:	f246 6399 	movw	r3, #26265	@ 0x6699
 8003ba6:	bf08      	it	eq
 8003ba8:	2366      	moveq	r3, #102	@ 0x66
  s_command.DummyCycles = 0U;
  s_command.DQSMode = HAL_XSPI_DQS_DISABLE;


  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003baa:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003bae:	4669      	mov	r1, sp
 8003bb0:	4630      	mov	r0, r6
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003bb2:	00e4      	lsls	r4, r4, #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003bb4:	9405      	str	r4, [sp, #20]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003bb6:	9302      	str	r3, [sp, #8]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003bb8:	f004 fcbc 	bl	8008534 <HAL_XSPI_Command>
 8003bbc:	3800      	subs	r0, #0
 8003bbe:	bf18      	it	ne
 8003bc0:	2001      	movne	r0, #1
 8003bc2:	4240      	negs	r0, r0
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003bc4:	b014      	add	sp, #80	@ 0x50
 8003bc6:	bd70      	pop	{r4, r5, r6, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003bc8:	2304      	movs	r3, #4
 8003bca:	e7df      	b.n	8003b8c <MX66UW1G45G_ResetEnable+0x1c>
    return MX66UW1G45G_ERROR;
 8003bcc:	f04f 30ff 	mov.w	r0, #4294967295
 8003bd0:	e7f8      	b.n	8003bc4 <MX66UW1G45G_ResetEnable+0x54>

08003bd2 <MX66UW1G45G_ResetMemory>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX66UW1G45G_ResetMemory(XSPI_HandleTypeDef *Ctx, MX66UW1G45G_Interface_t Mode, MX66UW1G45G_Transfer_t Rate)
{
 8003bd2:	b570      	push	{r4, r5, r6, lr}
 8003bd4:	460d      	mov	r5, r1
 8003bd6:	b094      	sub	sp, #80	@ 0x50
 8003bd8:	4606      	mov	r6, r0
 8003bda:	4614      	mov	r4, r2
  XSPI_RegularCmdTypeDef s_command = {0};
 8003bdc:	2100      	movs	r1, #0
 8003bde:	2250      	movs	r2, #80	@ 0x50
 8003be0:	4668      	mov	r0, sp
 8003be2:	f02e fe90 	bl	8032906 <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX66UW1G45G_SPI_MODE) && (Rate == MX66UW1G45G_DTR_TRANSFER))
 8003be6:	bb05      	cbnz	r5, 8003c2a <MX66UW1G45G_ResetMemory+0x58>
 8003be8:	2c01      	cmp	r4, #1
 8003bea:	d020      	beq.n	8003c2e <MX66UW1G45G_ResetMemory+0x5c>

  /* Initialize the reset enable command */
  s_command.OperationType = HAL_XSPI_OPTYPE_COMMON_CFG;
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
                                  ? HAL_XSPI_INSTRUCTION_1_LINE
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003bec:	2301      	movs	r3, #1
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
                                     ? HAL_XSPI_INSTRUCTION_DTR_ENABLE
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003bee:	1e62      	subs	r2, r4, #1
 8003bf0:	4254      	negs	r4, r2
 8003bf2:	4154      	adcs	r4, r2
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
                                   ? HAL_XSPI_INSTRUCTION_8_BITS
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003bf4:	2d00      	cmp	r5, #0
  s_command.InstructionMode = (Mode == MX66UW1G45G_SPI_MODE)
 8003bf6:	9303      	str	r3, [sp, #12]
                                   : HAL_XSPI_INSTRUCTION_16_BITS;
 8003bf8:	bf14      	ite	ne
 8003bfa:	2301      	movne	r3, #1
 8003bfc:	2300      	moveq	r3, #0
 8003bfe:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionWidth = (Mode == MX66UW1G45G_SPI_MODE)
 8003c02:	9304      	str	r3, [sp, #16]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
                              ? MX66UW1G45G_RESET_MEMORY_CMD
                              : MX66UW1G45G_OCTA_RESET_MEMORY_CMD;
 8003c04:	f649 1366 	movw	r3, #39270	@ 0x9966
 8003c08:	bf08      	it	eq
 8003c0a:	2399      	moveq	r3, #153	@ 0x99
 #if defined (XSPI_CCR_SIOO)
  s_command.SIOOMode            = HAL_XSPI_SIOO_INST_EVERY_CMD;
 #endif

  /* Send the command */
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c0c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003c10:	4669      	mov	r1, sp
 8003c12:	4630      	mov	r0, r6
                                     : HAL_XSPI_INSTRUCTION_DTR_DISABLE;
 8003c14:	00e4      	lsls	r4, r4, #3
  s_command.InstructionDTRMode = (Rate == MX66UW1G45G_DTR_TRANSFER)
 8003c16:	9405      	str	r4, [sp, #20]
  s_command.Instruction = (Mode == MX66UW1G45G_SPI_MODE)
 8003c18:	9302      	str	r3, [sp, #8]
  if (HAL_XSPI_Command(Ctx, &s_command, HAL_XSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c1a:	f004 fc8b 	bl	8008534 <HAL_XSPI_Command>
 8003c1e:	3800      	subs	r0, #0
 8003c20:	bf18      	it	ne
 8003c22:	2001      	movne	r0, #1
 8003c24:	4240      	negs	r0, r0
  {
    return MX66UW1G45G_ERROR;
  }

  return MX66UW1G45G_OK;
}
 8003c26:	b014      	add	sp, #80	@ 0x50
 8003c28:	bd70      	pop	{r4, r5, r6, pc}
                                  : HAL_XSPI_INSTRUCTION_8_LINES;
 8003c2a:	2304      	movs	r3, #4
 8003c2c:	e7df      	b.n	8003bee <MX66UW1G45G_ResetMemory+0x1c>
    return MX66UW1G45G_ERROR;
 8003c2e:	f04f 30ff 	mov.w	r0, #4294967295
 8003c32:	e7f8      	b.n	8003c26 <MX66UW1G45G_ResetMemory+0x54>

08003c34 <SystemInit>:
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR = RCC_CR_MSISON;
 8003c34:	2201      	movs	r2, #1
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8003c36:	480e      	ldr	r0, [pc, #56]	@ (8003c70 <SystemInit+0x3c>)
 8003c38:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 8003c3c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003c40:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
  RCC->CR = RCC_CR_MSISON;
 8003c44:	4b0b      	ldr	r3, [pc, #44]	@ (8003c74 <SystemInit+0x40>)
 8003c46:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR1 = 0U;
 8003c48:	2200      	movs	r2, #0
 8003c4a:	61da      	str	r2, [r3, #28]
  RCC->CFGR2 = 0U;
 8003c4c:	621a      	str	r2, [r3, #32]
  RCC->CFGR3 = 0U;
 8003c4e:	625a      	str	r2, [r3, #36]	@ 0x24

  /* Reset HSEON, CSSON , HSION, PLLxON bits */
  RCC->CR &= ~(RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLL1ON | RCC_CR_PLL2ON | RCC_CR_PLL3ON);
 8003c50:	6819      	ldr	r1, [r3, #0]
 8003c52:	f021 51a8 	bic.w	r1, r1, #352321536	@ 0x15000000
 8003c56:	f421 2110 	bic.w	r1, r1, #589824	@ 0x90000
 8003c5a:	6019      	str	r1, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLL1CFGR = 0U;
 8003c5c:	629a      	str	r2, [r3, #40]	@ 0x28

  /* Reset HSEBYP bit */
  RCC->CR &= ~(RCC_CR_HSEBYP);
 8003c5e:	6819      	ldr	r1, [r3, #0]
 8003c60:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
 8003c64:	6019      	str	r1, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0U;
 8003c66:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Configure the Vector Table location add offset address ------------------*/
  #ifdef VECT_TAB_SRAM
    SCB->VTOR = SRAM1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
  #else
    SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003c68:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8003c6c:	6083      	str	r3, [r0, #8]
  #endif
}
 8003c6e:	4770      	bx	lr
 8003c70:	e000ed00 	.word	0xe000ed00
 8003c74:	46020c00 	.word	0x46020c00

08003c78 <HAL_Init>:
  */
HAL_StatusTypeDef HAL_Init(void)
{
  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003c78:	4a10      	ldr	r2, [pc, #64]	@ (8003cbc <HAL_Init+0x44>)
{
 8003c7a:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003c7c:	6813      	ldr	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003c7e:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003c80:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003c84:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003c86:	f000 f84d 	bl	8003d24 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8003c8a:	f002 fd49 	bl	8006720 <HAL_RCC_GetSysClockFreq>
 8003c8e:	4b0c      	ldr	r3, [pc, #48]	@ (8003cc0 <HAL_Init+0x48>)
 8003c90:	4a0c      	ldr	r2, [pc, #48]	@ (8003cc4 <HAL_Init+0x4c>)
 8003c92:	6a1b      	ldr	r3, [r3, #32]
 8003c94:	f003 030f 	and.w	r3, r3, #15
 8003c98:	5cd3      	ldrb	r3, [r2, r3]
 8003c9a:	40d8      	lsrs	r0, r3
 8003c9c:	4b0a      	ldr	r3, [pc, #40]	@ (8003cc8 <HAL_Init+0x50>)
 8003c9e:	6018      	str	r0, [r3, #0]

  /* Select HCLK as SysTick clock source */
  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 8003ca0:	2004      	movs	r0, #4
 8003ca2:	f000 f88f 	bl	8003dc4 <HAL_SYSTICK_CLKSourceConfig>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8003ca6:	2000      	movs	r0, #0
 8003ca8:	f7fd f872 	bl	8000d90 <HAL_InitTick>
 8003cac:	4604      	mov	r4, r0
 8003cae:	b918      	cbnz	r0, 8003cb8 <HAL_Init+0x40>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8003cb0:	f7fc fd9a 	bl	80007e8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003cb4:	4620      	mov	r0, r4
 8003cb6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003cb8:	2401      	movs	r4, #1
 8003cba:	e7fb      	b.n	8003cb4 <HAL_Init+0x3c>
 8003cbc:	40022000 	.word	0x40022000
 8003cc0:	46020c00 	.word	0x46020c00
 8003cc4:	08035624 	.word	0x08035624
 8003cc8:	2000004c 	.word	0x2000004c

08003ccc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 8003ccc:	4a03      	ldr	r2, [pc, #12]	@ (8003cdc <HAL_IncTick+0x10>)
 8003cce:	4b04      	ldr	r3, [pc, #16]	@ (8003ce0 <HAL_IncTick+0x14>)
 8003cd0:	6811      	ldr	r1, [r2, #0]
 8003cd2:	781b      	ldrb	r3, [r3, #0]
 8003cd4:	440b      	add	r3, r1
 8003cd6:	6013      	str	r3, [r2, #0]
}
 8003cd8:	4770      	bx	lr
 8003cda:	bf00      	nop
 8003cdc:	2006e92c 	.word	0x2006e92c
 8003ce0:	20000050 	.word	0x20000050

08003ce4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003ce4:	4b01      	ldr	r3, [pc, #4]	@ (8003cec <HAL_GetTick+0x8>)
 8003ce6:	6818      	ldr	r0, [r3, #0]
}
 8003ce8:	4770      	bx	lr
 8003cea:	bf00      	nop
 8003cec:	2006e92c 	.word	0x2006e92c

08003cf0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003cf0:	b538      	push	{r3, r4, r5, lr}
 8003cf2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003cf4:	f7ff fff6 	bl	8003ce4 <HAL_GetTick>
 8003cf8:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003cfa:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003cfc:	bf1e      	ittt	ne
 8003cfe:	4b04      	ldrne	r3, [pc, #16]	@ (8003d10 <HAL_Delay+0x20>)
 8003d00:	781b      	ldrbne	r3, [r3, #0]
 8003d02:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8003d04:	f7ff ffee 	bl	8003ce4 <HAL_GetTick>
 8003d08:	1b43      	subs	r3, r0, r5
 8003d0a:	42a3      	cmp	r3, r4
 8003d0c:	d3fa      	bcc.n	8003d04 <HAL_Delay+0x14>
  {
  }
}
 8003d0e:	bd38      	pop	{r3, r4, r5, pc}
 8003d10:	20000050 	.word	0x20000050

08003d14 <HAL_SYSCFG_DisableSRAMCached>:
  *
  * @retval None
  */
void HAL_SYSCFG_DisableSRAMCached(void)
{
  CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_SRAMCACHED);
 8003d14:	4a02      	ldr	r2, [pc, #8]	@ (8003d20 <HAL_SYSCFG_DisableSRAMCached+0xc>)
 8003d16:	6853      	ldr	r3, [r2, #4]
 8003d18:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003d1c:	6053      	str	r3, [r2, #4]
}
 8003d1e:	4770      	bx	lr
 8003d20:	46000400 	.word	0x46000400

08003d24 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003d24:	4907      	ldr	r1, [pc, #28]	@ (8003d44 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003d26:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003d28:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003d2a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003d2e:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8003d32:	0412      	lsls	r2, r2, #16
 8003d34:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003d36:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003d38:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003d3c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8003d40:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003d42:	4770      	bx	lr
 8003d44:	e000ed00 	.word	0xe000ed00

08003d48 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003d48:	4b15      	ldr	r3, [pc, #84]	@ (8003da0 <HAL_NVIC_SetPriority+0x58>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003d4a:	b530      	push	{r4, r5, lr}
 8003d4c:	68dc      	ldr	r4, [r3, #12]
 8003d4e:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003d52:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003d56:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003d58:	2b04      	cmp	r3, #4
 8003d5a:	bf28      	it	cs
 8003d5c:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003d5e:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d60:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003d64:	bf94      	ite	ls
 8003d66:	2400      	movls	r4, #0
 8003d68:	3c03      	subhi	r4, #3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d6a:	fa05 f303 	lsl.w	r3, r5, r3
 8003d6e:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003d72:	40a5      	lsls	r5, r4
 8003d74:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d78:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8003d7a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d7c:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d80:	bfac      	ite	ge
 8003d82:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d86:	4a07      	ldrlt	r2, [pc, #28]	@ (8003da4 <HAL_NVIC_SetPriority+0x5c>)
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d88:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8003d8c:	b2db      	uxtb	r3, r3
 8003d8e:	bfab      	itete	ge
 8003d90:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d94:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d98:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d9c:	5413      	strblt	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003d9e:	bd30      	pop	{r4, r5, pc}
 8003da0:	e000ed00 	.word	0xe000ed00
 8003da4:	e000ed14 	.word	0xe000ed14

08003da8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003da8:	2800      	cmp	r0, #0
 8003daa:	db07      	blt.n	8003dbc <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003dac:	2301      	movs	r3, #1
 8003dae:	0941      	lsrs	r1, r0, #5
 8003db0:	4a03      	ldr	r2, [pc, #12]	@ (8003dc0 <HAL_NVIC_EnableIRQ+0x18>)
 8003db2:	f000 001f 	and.w	r0, r0, #31
 8003db6:	4083      	lsls	r3, r0
 8003db8:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003dbc:	4770      	bx	lr
 8003dbe:	bf00      	nop
 8003dc0:	e000e100 	.word	0xe000e100

08003dc4 <HAL_SYSTICK_CLKSourceConfig>:
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  switch (CLKSource)
 8003dc4:	2804      	cmp	r0, #4
 8003dc6:	d818      	bhi.n	8003dfa <HAL_SYSTICK_CLKSourceConfig+0x36>
 8003dc8:	e8df f000 	tbb	[pc, r0]
 8003dcc:	1726180a 	.word	0x1726180a
 8003dd0:	03          	.byte	0x03
 8003dd1:	00          	.byte	0x00
  {
    /* Select HCLK as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK:
      SET_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003dd2:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003dd6:	6913      	ldr	r3, [r2, #16]
 8003dd8:	f043 0304 	orr.w	r3, r3, #4
 8003ddc:	6113      	str	r3, [r2, #16]
      break;
 8003dde:	4770      	bx	lr
    /* Select HCLK_DIV8 as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK_DIV8:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003de0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003de4:	6913      	ldr	r3, [r2, #16]
 8003de6:	f023 0304 	bic.w	r3, r3, #4
 8003dea:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, (0x00000000U));
 8003dec:	4a11      	ldr	r2, [pc, #68]	@ (8003e34 <HAL_SYSTICK_CLKSourceConfig+0x70>)
 8003dee:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8003df2:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_0);
      break;
    /* Select LSE as Systick clock source */
    case SYSTICK_CLKSOURCE_LSE:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_1);
 8003df6:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
      break;
    default:
      /* Nothing to do */
      break;
  }
}
 8003dfa:	4770      	bx	lr
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003dfc:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003e00:	6913      	ldr	r3, [r2, #16]
 8003e02:	f023 0304 	bic.w	r3, r3, #4
 8003e06:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_0);
 8003e08:	4a0a      	ldr	r2, [pc, #40]	@ (8003e34 <HAL_SYSTICK_CLKSourceConfig+0x70>)
 8003e0a:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8003e0e:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8003e12:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8003e16:	e7ee      	b.n	8003df6 <HAL_SYSTICK_CLKSourceConfig+0x32>
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8003e18:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003e1c:	6913      	ldr	r3, [r2, #16]
 8003e1e:	f023 0304 	bic.w	r3, r3, #4
 8003e22:	6113      	str	r3, [r2, #16]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_1);
 8003e24:	4a03      	ldr	r2, [pc, #12]	@ (8003e34 <HAL_SYSTICK_CLKSourceConfig+0x70>)
 8003e26:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8003e2a:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8003e2e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8003e32:	e7e0      	b.n	8003df6 <HAL_SYSTICK_CLKSourceConfig+0x32>
 8003e34:	46020c00 	.word	0x46020c00

08003e38 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003e38:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003e3a:	4604      	mov	r4, r0
 8003e3c:	b908      	cbnz	r0, 8003e42 <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8003e3e:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8003e40:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003e42:	7f43      	ldrb	r3, [r0, #29]
 8003e44:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003e48:	b913      	cbnz	r3, 8003e50 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8003e4a:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8003e4c:	f7fc fce4 	bl	8000818 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8003e50:	2302      	movs	r3, #2
 8003e52:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8003e54:	7923      	ldrb	r3, [r4, #4]
 8003e56:	b9e3      	cbnz	r3, 8003e92 <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8003e58:	6823      	ldr	r3, [r4, #0]
 8003e5a:	4a13      	ldr	r2, [pc, #76]	@ (8003ea8 <HAL_CRC_Init+0x70>)
 8003e5c:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8003e5e:	689a      	ldr	r2, [r3, #8]
 8003e60:	f022 0218 	bic.w	r2, r2, #24
 8003e64:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003e66:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8003e68:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003e6a:	b9d2      	cbnz	r2, 8003ea2 <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8003e6c:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003e70:	611a      	str	r2, [r3, #16]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8003e72:	689a      	ldr	r2, [r3, #8]
 8003e74:	6961      	ldr	r1, [r4, #20]
 8003e76:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8003e7a:	430a      	orrs	r2, r1
 8003e7c:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8003e7e:	689a      	ldr	r2, [r3, #8]
 8003e80:	69a1      	ldr	r1, [r4, #24]
 8003e82:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003e86:	430a      	orrs	r2, r1
 8003e88:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8003e8a:	2301      	movs	r3, #1
  return HAL_OK;
 8003e8c:	2000      	movs	r0, #0
  hcrc->State = HAL_CRC_STATE_READY;
 8003e8e:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8003e90:	e7d6      	b.n	8003e40 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8003e92:	4620      	mov	r0, r4
 8003e94:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8003e98:	f000 f808 	bl	8003eac <HAL_CRCEx_Polynomial_Set>
 8003e9c:	2800      	cmp	r0, #0
 8003e9e:	d0e2      	beq.n	8003e66 <HAL_CRC_Init+0x2e>
 8003ea0:	e7cd      	b.n	8003e3e <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003ea2:	6922      	ldr	r2, [r4, #16]
 8003ea4:	e7e4      	b.n	8003e70 <HAL_CRC_Init+0x38>
 8003ea6:	bf00      	nop
 8003ea8:	04c11db7 	.word	0x04c11db7

08003eac <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8003eac:	07cb      	lsls	r3, r1, #31
{
 8003eae:	b510      	push	{r4, lr}
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8003eb0:	d50d      	bpl.n	8003ece <HAL_CRCEx_Polynomial_Set+0x22>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8003eb2:	231f      	movs	r3, #31
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8003eb4:	3b01      	subs	r3, #1
 8003eb6:	d31d      	bcc.n	8003ef4 <HAL_CRCEx_Polynomial_Set+0x48>
 8003eb8:	fa21 f403 	lsr.w	r4, r1, r3
 8003ebc:	07e4      	lsls	r4, r4, #31
 8003ebe:	d5f9      	bpl.n	8003eb4 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
 8003ec0:	2a10      	cmp	r2, #16
 8003ec2:	d013      	beq.n	8003eec <HAL_CRCEx_Polynomial_Set+0x40>
 8003ec4:	2a10      	cmp	r2, #16
 8003ec6:	d804      	bhi.n	8003ed2 <HAL_CRCEx_Polynomial_Set+0x26>
 8003ec8:	b13a      	cbz	r2, 8003eda <HAL_CRCEx_Polynomial_Set+0x2e>
 8003eca:	2a08      	cmp	r2, #8
 8003ecc:	d010      	beq.n	8003ef0 <HAL_CRCEx_Polynomial_Set+0x44>
 8003ece:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8003ed0:	e00b      	b.n	8003eea <HAL_CRCEx_Polynomial_Set+0x3e>
    switch (PolyLength)
 8003ed2:	2a18      	cmp	r2, #24
 8003ed4:	d1fb      	bne.n	8003ece <HAL_CRCEx_Polynomial_Set+0x22>
        if (msb >= HAL_CRC_LENGTH_7B)
 8003ed6:	2b06      	cmp	r3, #6
        if (msb >= HAL_CRC_LENGTH_16B)
 8003ed8:	d8f9      	bhi.n	8003ece <HAL_CRCEx_Polynomial_Set+0x22>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8003eda:	6800      	ldr	r0, [r0, #0]
 8003edc:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8003ede:	6883      	ldr	r3, [r0, #8]
 8003ee0:	f023 0318 	bic.w	r3, r3, #24
 8003ee4:	4313      	orrs	r3, r2
 8003ee6:	6083      	str	r3, [r0, #8]
 8003ee8:	2000      	movs	r0, #0
}
 8003eea:	bd10      	pop	{r4, pc}
        if (msb >= HAL_CRC_LENGTH_8B)
 8003eec:	2b07      	cmp	r3, #7
 8003eee:	e7f3      	b.n	8003ed8 <HAL_CRCEx_Polynomial_Set+0x2c>
        if (msb >= HAL_CRC_LENGTH_16B)
 8003ef0:	2b0f      	cmp	r3, #15
 8003ef2:	e7f1      	b.n	8003ed8 <HAL_CRCEx_Polynomial_Set+0x2c>
    switch (PolyLength)
 8003ef4:	2a10      	cmp	r2, #16
 8003ef6:	d1e5      	bne.n	8003ec4 <HAL_CRCEx_Polynomial_Set+0x18>
 8003ef8:	e7e9      	b.n	8003ece <HAL_CRCEx_Polynomial_Set+0x22>

08003efa <HAL_DCACHE_ErrorCallback>:
  * @brief  Error callback.
  * @param  hdcache Pointer to a DCACHE_HandleTypeDef structure that contains
  *                 the configuration information for the specified DCACHEx peripheral.
  * @retval None
  */
__weak void HAL_DCACHE_ErrorCallback(DCACHE_HandleTypeDef *hdcache)
 8003efa:	4770      	bx	lr

08003efc <HAL_DCACHE_CleanByAddrCallback>:
__weak void HAL_DCACHE_CleanByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8003efc:	4770      	bx	lr

08003efe <HAL_DCACHE_InvalidateByAddrCallback>:
__weak void HAL_DCACHE_InvalidateByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8003efe:	4770      	bx	lr

08003f00 <HAL_DCACHE_CleanAndInvalidateByAddrCallback>:
__weak void HAL_DCACHE_CleanAndInvalidateByAddrCallback(DCACHE_HandleTypeDef *hdcache)
 8003f00:	4770      	bx	lr

08003f02 <HAL_DCACHE_InvalidateCompleteCallback>:
__weak void HAL_DCACHE_InvalidateCompleteCallback(DCACHE_HandleTypeDef *hdcache)
 8003f02:	4770      	bx	lr

08003f04 <HAL_DCACHE_Enable>:
  if (hdcache == NULL)
 8003f04:	4602      	mov	r2, r0
 8003f06:	b150      	cbz	r0, 8003f1e <HAL_DCACHE_Enable+0x1a>
  if (READ_BIT(hdcache->Instance->SR, (DCACHE_SR_BUSYF | DCACHE_SR_BUSYCMDF)) != 0U)
 8003f08:	6801      	ldr	r1, [r0, #0]
 8003f0a:	6848      	ldr	r0, [r1, #4]
 8003f0c:	f010 0009 	ands.w	r0, r0, #9
 8003f10:	d107      	bne.n	8003f22 <HAL_DCACHE_Enable+0x1e>
    hdcache->ErrorCode = HAL_DCACHE_ERROR_NONE;
 8003f12:	6290      	str	r0, [r2, #40]	@ 0x28
    SET_BIT(hdcache->Instance->CR, DCACHE_CR_EN);
 8003f14:	680b      	ldr	r3, [r1, #0]
 8003f16:	f043 0301 	orr.w	r3, r3, #1
 8003f1a:	600b      	str	r3, [r1, #0]
 8003f1c:	4770      	bx	lr
    return HAL_ERROR;
 8003f1e:	2001      	movs	r0, #1
 8003f20:	4770      	bx	lr
    status =  HAL_BUSY;
 8003f22:	2002      	movs	r0, #2
}
 8003f24:	4770      	bx	lr
	...

08003f28 <HAL_DCACHE_Init>:
{
 8003f28:	b510      	push	{r4, lr}
  if (hdcache == NULL)
 8003f2a:	4604      	mov	r4, r0
 8003f2c:	b320      	cbz	r0, 8003f78 <HAL_DCACHE_Init+0x50>
  if (hdcache->State == HAL_DCACHE_STATE_RESET)
 8003f2e:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 8003f32:	b983      	cbnz	r3, 8003f56 <HAL_DCACHE_Init+0x2e>
    hdcache->ErrorCallback                      = HAL_DCACHE_ErrorCallback;
 8003f34:	4b11      	ldr	r3, [pc, #68]	@ (8003f7c <HAL_DCACHE_Init+0x54>)
 8003f36:	6083      	str	r3, [r0, #8]
    hdcache->CleanByAddrCallback                = HAL_DCACHE_CleanByAddrCallback;
 8003f38:	4b11      	ldr	r3, [pc, #68]	@ (8003f80 <HAL_DCACHE_Init+0x58>)
 8003f3a:	60c3      	str	r3, [r0, #12]
    hdcache->InvalidateByAddrCallback           = HAL_DCACHE_InvalidateByAddrCallback;
 8003f3c:	4b11      	ldr	r3, [pc, #68]	@ (8003f84 <HAL_DCACHE_Init+0x5c>)
 8003f3e:	6103      	str	r3, [r0, #16]
    hdcache->InvalidateCompleteCallback         = HAL_DCACHE_InvalidateCompleteCallback;
 8003f40:	4b11      	ldr	r3, [pc, #68]	@ (8003f88 <HAL_DCACHE_Init+0x60>)
 8003f42:	6143      	str	r3, [r0, #20]
    hdcache->CleanAndInvalidateByAddrCallback   = HAL_DCACHE_CleanAndInvalidateByAddrCallback;
 8003f44:	4b11      	ldr	r3, [pc, #68]	@ (8003f8c <HAL_DCACHE_Init+0x64>)
 8003f46:	6183      	str	r3, [r0, #24]
    if (hdcache->MspInitCallback == NULL)
 8003f48:	69c3      	ldr	r3, [r0, #28]
 8003f4a:	b90b      	cbnz	r3, 8003f50 <HAL_DCACHE_Init+0x28>
      hdcache->MspInitCallback = HAL_DCACHE_MspInit;
 8003f4c:	4b10      	ldr	r3, [pc, #64]	@ (8003f90 <HAL_DCACHE_Init+0x68>)
 8003f4e:	61c3      	str	r3, [r0, #28]
    hdcache->MspInitCallback(hdcache);
 8003f50:	4620      	mov	r0, r4
 8003f52:	69e3      	ldr	r3, [r4, #28]
 8003f54:	4798      	blx	r3
  hdcache->ErrorCode = HAL_DCACHE_ERROR_NONE;
 8003f56:	2300      	movs	r3, #0
 8003f58:	62a3      	str	r3, [r4, #40]	@ 0x28
  hdcache->State = HAL_DCACHE_STATE_READY;
 8003f5a:	2301      	movs	r3, #1
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 8003f5c:	6822      	ldr	r2, [r4, #0]
  hdcache->State = HAL_DCACHE_STATE_READY;
 8003f5e:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 8003f62:	6813      	ldr	r3, [r2, #0]
 8003f64:	6861      	ldr	r1, [r4, #4]
 8003f66:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003f6a:	430b      	orrs	r3, r1
  status = HAL_DCACHE_Enable(hdcache);
 8003f6c:	4620      	mov	r0, r4
}
 8003f6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  MODIFY_REG(hdcache->Instance->CR, DCACHE_CR_HBURST, hdcache->Init.ReadBurstType);
 8003f72:	6013      	str	r3, [r2, #0]
  status = HAL_DCACHE_Enable(hdcache);
 8003f74:	f7ff bfc6 	b.w	8003f04 <HAL_DCACHE_Enable>
}
 8003f78:	2001      	movs	r0, #1
 8003f7a:	bd10      	pop	{r4, pc}
 8003f7c:	08003efb 	.word	0x08003efb
 8003f80:	08003efd 	.word	0x08003efd
 8003f84:	08003eff 	.word	0x08003eff
 8003f88:	08003f03 	.word	0x08003f03
 8003f8c:	08003f01 	.word	0x08003f01
 8003f90:	08000849 	.word	0x08000849

08003f94 <HAL_DMA_Init>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *const hdma)
{
 8003f94:	b538      	push	{r3, r4, r5, lr}
 8003f96:	4604      	mov	r4, r0
  /* Get tick number */
  uint32_t tickstart = HAL_GetTick();
 8003f98:	f7ff fea4 	bl	8003ce4 <HAL_GetTick>
 8003f9c:	4605      	mov	r5, r0

  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 8003f9e:	2c00      	cmp	r4, #0
 8003fa0:	f000 81a2 	beq.w	80042e8 <HAL_DMA_Init+0x354>
    assert_param(IS_DMA_BURST_LENGTH(hdma->Init.DestBurstLength));
    assert_param(IS_DMA_TRANSFER_ALLOCATED_PORT(hdma->Init.TransferAllocatedPort));
  }

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 8003fa4:	2300      	movs	r3, #0
 8003fa6:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c

  /* Update the DMA channel state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8003faa:	2302      	movs	r3, #2
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003fac:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 8003fae:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54

  /* Disable the DMA channel */
  __HAL_DMA_DISABLE(hdma);
 8003fb2:	6953      	ldr	r3, [r2, #20]
 8003fb4:	f043 0306 	orr.w	r3, r3, #6
 8003fb8:	6153      	str	r3, [r2, #20]

  /* Check if the DMA channel is effectively disabled */
  while ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 8003fba:	6823      	ldr	r3, [r4, #0]
 8003fbc:	695a      	ldr	r2, [r3, #20]
 8003fbe:	07d2      	lsls	r2, r2, #31
 8003fc0:	f100 8187 	bmi.w	80042d2 <HAL_DMA_Init+0x33e>

  /* Prepare DMA Channel Control Register (CCR) value *****************************************************************/
  tmpreg = hdma->Init.Priority;

  /* Write DMA Channel Control Register (CCR) */
  MODIFY_REG(hdma->Instance->CCR, DMA_CCR_PRIO | DMA_CCR_LAP | DMA_CCR_LSM, tmpreg);
 8003fc4:	695a      	ldr	r2, [r3, #20]
 8003fc6:	6a21      	ldr	r1, [r4, #32]
 8003fc8:	f422 0243 	bic.w	r2, r2, #12779520	@ 0xc30000
 8003fcc:	430a      	orrs	r2, r1
 8003fce:	615a      	str	r2, [r3, #20]

  /* Prepare DMA Channel Transfer Register (CTR1) value ***************************************************************/
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8003fd0:	69e1      	ldr	r1, [r4, #28]
 8003fd2:	6962      	ldr	r2, [r4, #20]

  /* Add parameters specific to GPDMA */
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003fd4:	4daf      	ldr	r5, [pc, #700]	@ (8004294 <HAL_DMA_Init+0x300>)
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8003fd6:	430a      	orrs	r2, r1
 8003fd8:	6921      	ldr	r1, [r4, #16]
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003fda:	42ab      	cmp	r3, r5
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8003fdc:	ea42 0201 	orr.w	r2, r2, r1
 8003fe0:	69a1      	ldr	r1, [r4, #24]
 8003fe2:	48ad      	ldr	r0, [pc, #692]	@ (8004298 <HAL_DMA_Init+0x304>)
 8003fe4:	ea42 0201 	orr.w	r2, r2, r1
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8003fe8:	f000 8087 	beq.w	80040fa <HAL_DMA_Init+0x166>
 8003fec:	49ab      	ldr	r1, [pc, #684]	@ (800429c <HAL_DMA_Init+0x308>)
 8003fee:	428b      	cmp	r3, r1
 8003ff0:	f000 8083 	beq.w	80040fa <HAL_DMA_Init+0x166>
 8003ff4:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8003ff8:	3180      	adds	r1, #128	@ 0x80
 8003ffa:	428b      	cmp	r3, r1
 8003ffc:	d07d      	beq.n	80040fa <HAL_DMA_Init+0x166>
 8003ffe:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004002:	428b      	cmp	r3, r1
 8004004:	d079      	beq.n	80040fa <HAL_DMA_Init+0x166>
 8004006:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800400a:	3180      	adds	r1, #128	@ 0x80
 800400c:	428b      	cmp	r3, r1
 800400e:	d074      	beq.n	80040fa <HAL_DMA_Init+0x166>
 8004010:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004014:	428b      	cmp	r3, r1
 8004016:	d070      	beq.n	80040fa <HAL_DMA_Init+0x166>
 8004018:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800401c:	3180      	adds	r1, #128	@ 0x80
 800401e:	428b      	cmp	r3, r1
 8004020:	d06b      	beq.n	80040fa <HAL_DMA_Init+0x166>
 8004022:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004026:	428b      	cmp	r3, r1
 8004028:	d067      	beq.n	80040fa <HAL_DMA_Init+0x166>
 800402a:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800402e:	3180      	adds	r1, #128	@ 0x80
 8004030:	428b      	cmp	r3, r1
 8004032:	d062      	beq.n	80040fa <HAL_DMA_Init+0x166>
 8004034:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004038:	428b      	cmp	r3, r1
 800403a:	d05e      	beq.n	80040fa <HAL_DMA_Init+0x166>
 800403c:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004040:	3180      	adds	r1, #128	@ 0x80
 8004042:	428b      	cmp	r3, r1
 8004044:	d059      	beq.n	80040fa <HAL_DMA_Init+0x166>
 8004046:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800404a:	428b      	cmp	r3, r1
 800404c:	d055      	beq.n	80040fa <HAL_DMA_Init+0x166>
 800404e:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004052:	3180      	adds	r1, #128	@ 0x80
 8004054:	428b      	cmp	r3, r1
 8004056:	d050      	beq.n	80040fa <HAL_DMA_Init+0x166>
 8004058:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800405c:	428b      	cmp	r3, r1
 800405e:	d04c      	beq.n	80040fa <HAL_DMA_Init+0x166>
 8004060:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004064:	3180      	adds	r1, #128	@ 0x80
 8004066:	428b      	cmp	r3, r1
 8004068:	d047      	beq.n	80040fa <HAL_DMA_Init+0x166>
 800406a:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 800406e:	428b      	cmp	r3, r1
 8004070:	d043      	beq.n	80040fa <HAL_DMA_Init+0x166>
 8004072:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004076:	3180      	adds	r1, #128	@ 0x80
 8004078:	428b      	cmp	r3, r1
 800407a:	d03e      	beq.n	80040fa <HAL_DMA_Init+0x166>
 800407c:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004080:	428b      	cmp	r3, r1
 8004082:	d03a      	beq.n	80040fa <HAL_DMA_Init+0x166>
 8004084:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 8004088:	3180      	adds	r1, #128	@ 0x80
 800408a:	428b      	cmp	r3, r1
 800408c:	d035      	beq.n	80040fa <HAL_DMA_Init+0x166>
 800408e:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 8004092:	428b      	cmp	r3, r1
 8004094:	d031      	beq.n	80040fa <HAL_DMA_Init+0x166>
 8004096:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 800409a:	3180      	adds	r1, #128	@ 0x80
 800409c:	428b      	cmp	r3, r1
 800409e:	d02c      	beq.n	80040fa <HAL_DMA_Init+0x166>
 80040a0:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80040a4:	428b      	cmp	r3, r1
 80040a6:	d028      	beq.n	80040fa <HAL_DMA_Init+0x166>
 80040a8:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80040ac:	3180      	adds	r1, #128	@ 0x80
 80040ae:	428b      	cmp	r3, r1
 80040b0:	d023      	beq.n	80040fa <HAL_DMA_Init+0x166>
 80040b2:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80040b6:	428b      	cmp	r3, r1
 80040b8:	d01f      	beq.n	80040fa <HAL_DMA_Init+0x166>
 80040ba:	4283      	cmp	r3, r0
 80040bc:	d01d      	beq.n	80040fa <HAL_DMA_Init+0x166>
 80040be:	3180      	adds	r1, #128	@ 0x80
 80040c0:	428b      	cmp	r3, r1
 80040c2:	d01a      	beq.n	80040fa <HAL_DMA_Init+0x166>
 80040c4:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80040c8:	3180      	adds	r1, #128	@ 0x80
 80040ca:	428b      	cmp	r3, r1
 80040cc:	d015      	beq.n	80040fa <HAL_DMA_Init+0x166>
 80040ce:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80040d2:	428b      	cmp	r3, r1
 80040d4:	d011      	beq.n	80040fa <HAL_DMA_Init+0x166>
 80040d6:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80040da:	3180      	adds	r1, #128	@ 0x80
 80040dc:	428b      	cmp	r3, r1
 80040de:	d00c      	beq.n	80040fa <HAL_DMA_Init+0x166>
 80040e0:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80040e4:	428b      	cmp	r3, r1
 80040e6:	d008      	beq.n	80040fa <HAL_DMA_Init+0x166>
 80040e8:	f101 4170 	add.w	r1, r1, #4026531840	@ 0xf0000000
 80040ec:	3180      	adds	r1, #128	@ 0x80
 80040ee:	428b      	cmp	r3, r1
 80040f0:	d003      	beq.n	80040fa <HAL_DMA_Init+0x166>
 80040f2:	f101 5180 	add.w	r1, r1, #268435456	@ 0x10000000
 80040f6:	428b      	cmp	r3, r1
 80040f8:	d10d      	bne.n	8004116 <HAL_DMA_Init+0x182>
  {
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
               (((hdma->Init.DestBurstLength - 1U) << DMA_CTR1_DBL_1_Pos) & DMA_CTR1_DBL_1) |
 80040fa:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 80040fc:	3901      	subs	r1, #1
 80040fe:	0509      	lsls	r1, r1, #20
 8004100:	f001 717c 	and.w	r1, r1, #66060288	@ 0x3f00000
 8004104:	4311      	orrs	r1, r2
 8004106:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8004108:	4311      	orrs	r1, r2
               (((hdma->Init.SrcBurstLength - 1U) << DMA_CTR1_SBL_1_Pos) & DMA_CTR1_SBL_1));
 800410a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800410c:	3a01      	subs	r2, #1
 800410e:	0112      	lsls	r2, r2, #4
 8004110:	f402 727c 	and.w	r2, r2, #1008	@ 0x3f0
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
 8004114:	430a      	orrs	r2, r1
  }

  /* Write DMA Channel Transfer Register 1 (CTR1) */
  MODIFY_REG(hdma->Instance->CTR1, ~(DMA_CTR1_SSEC | DMA_CTR1_DSEC), tmpreg);
 8004116:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8004118:	f001 2180 	and.w	r1, r1, #2147516416	@ 0x80008000
 800411c:	430a      	orrs	r2, r1
 800411e:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Prepare DMA Channel Transfer Register 2 (CTR2) value *************************************************************/
  tmpreg = hdma->Init.BlkHWRequest | (hdma->Init.Request & DMA_CTR2_REQSEL) | hdma->Init.TransferEventMode;
 8004120:	68a1      	ldr	r1, [r4, #8]
 8004122:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8004124:	4311      	orrs	r1, r2
 8004126:	6862      	ldr	r2, [r4, #4]
 8004128:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800412c:	4311      	orrs	r1, r2

  /* Memory to Peripheral Transfer */
  if ((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 800412e:	68e2      	ldr	r2, [r4, #12]
 8004130:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8004134:	f040 80da 	bne.w	80042ec <HAL_DMA_Init+0x358>
  {
    if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8004138:	42ab      	cmp	r3, r5
 800413a:	f000 8087 	beq.w	800424c <HAL_DMA_Init+0x2b8>
 800413e:	4a57      	ldr	r2, [pc, #348]	@ (800429c <HAL_DMA_Init+0x308>)
 8004140:	4293      	cmp	r3, r2
 8004142:	f000 8083 	beq.w	800424c <HAL_DMA_Init+0x2b8>
 8004146:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800414a:	3280      	adds	r2, #128	@ 0x80
 800414c:	4293      	cmp	r3, r2
 800414e:	d07d      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 8004150:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004154:	4293      	cmp	r3, r2
 8004156:	d079      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 8004158:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800415c:	3280      	adds	r2, #128	@ 0x80
 800415e:	4293      	cmp	r3, r2
 8004160:	d074      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 8004162:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004166:	4293      	cmp	r3, r2
 8004168:	d070      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 800416a:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800416e:	3280      	adds	r2, #128	@ 0x80
 8004170:	4293      	cmp	r3, r2
 8004172:	d06b      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 8004174:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004178:	4293      	cmp	r3, r2
 800417a:	d067      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 800417c:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004180:	3280      	adds	r2, #128	@ 0x80
 8004182:	4293      	cmp	r3, r2
 8004184:	d062      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 8004186:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800418a:	4293      	cmp	r3, r2
 800418c:	d05e      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 800418e:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004192:	3280      	adds	r2, #128	@ 0x80
 8004194:	4293      	cmp	r3, r2
 8004196:	d059      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 8004198:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800419c:	4293      	cmp	r3, r2
 800419e:	d055      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 80041a0:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041a4:	3280      	adds	r2, #128	@ 0x80
 80041a6:	4293      	cmp	r3, r2
 80041a8:	d050      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 80041aa:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041ae:	4293      	cmp	r3, r2
 80041b0:	d04c      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 80041b2:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041b6:	3280      	adds	r2, #128	@ 0x80
 80041b8:	4293      	cmp	r3, r2
 80041ba:	d047      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 80041bc:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041c0:	4293      	cmp	r3, r2
 80041c2:	d043      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 80041c4:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041c8:	3280      	adds	r2, #128	@ 0x80
 80041ca:	4293      	cmp	r3, r2
 80041cc:	d03e      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 80041ce:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041d2:	4293      	cmp	r3, r2
 80041d4:	d03a      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 80041d6:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041da:	3280      	adds	r2, #128	@ 0x80
 80041dc:	4293      	cmp	r3, r2
 80041de:	d035      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 80041e0:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041e4:	4293      	cmp	r3, r2
 80041e6:	d031      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 80041e8:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041ec:	3280      	adds	r2, #128	@ 0x80
 80041ee:	4293      	cmp	r3, r2
 80041f0:	d02c      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 80041f2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80041f6:	4293      	cmp	r3, r2
 80041f8:	d028      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 80041fa:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80041fe:	3280      	adds	r2, #128	@ 0x80
 8004200:	4293      	cmp	r3, r2
 8004202:	d023      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 8004204:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004208:	4293      	cmp	r3, r2
 800420a:	d01f      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 800420c:	4283      	cmp	r3, r0
 800420e:	d01d      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 8004210:	3280      	adds	r2, #128	@ 0x80
 8004212:	4293      	cmp	r3, r2
 8004214:	d01a      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 8004216:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800421a:	3280      	adds	r2, #128	@ 0x80
 800421c:	4293      	cmp	r3, r2
 800421e:	d015      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 8004220:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004224:	4293      	cmp	r3, r2
 8004226:	d011      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 8004228:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800422c:	3280      	adds	r2, #128	@ 0x80
 800422e:	4293      	cmp	r3, r2
 8004230:	d00c      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 8004232:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004236:	4293      	cmp	r3, r2
 8004238:	d008      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 800423a:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800423e:	3280      	adds	r2, #128	@ 0x80
 8004240:	4293      	cmp	r3, r2
 8004242:	d003      	beq.n	800424c <HAL_DMA_Init+0x2b8>
 8004244:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8004248:	4293      	cmp	r3, r2
 800424a:	d101      	bne.n	8004250 <HAL_DMA_Init+0x2bc>
    {
      tmpreg |= DMA_CTR2_DREQ;
 800424c:	f441 6180 	orr.w	r1, r1, #1024	@ 0x400
  {
    /* Nothing to do */
  }

  /* Write DMA Channel Transfer Register 2 (CTR2) */
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 8004250:	6c5d      	ldr	r5, [r3, #68]	@ 0x44
 8004252:	4a13      	ldr	r2, [pc, #76]	@ (80042a0 <HAL_DMA_Init+0x30c>)

  /* Write DMA Channel Block Register 1 (CBR1) ************************************************************************/
  WRITE_REG(hdma->Instance->CBR1, 0U);

  /* If 2D Addressing is supported by current channel */
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 8004254:	4283      	cmp	r3, r0
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 8004256:	ea02 0205 	and.w	r2, r2, r5
 800425a:	ea42 0201 	orr.w	r2, r2, r1
 800425e:	645a      	str	r2, [r3, #68]	@ 0x44
  WRITE_REG(hdma->Instance->CBR1, 0U);
 8004260:	f04f 0200 	mov.w	r2, #0
 8004264:	649a      	str	r2, [r3, #72]	@ 0x48
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 8004266:	d028      	beq.n	80042ba <HAL_DMA_Init+0x326>
 8004268:	4a0e      	ldr	r2, [pc, #56]	@ (80042a4 <HAL_DMA_Init+0x310>)
 800426a:	4293      	cmp	r3, r2
 800426c:	d025      	beq.n	80042ba <HAL_DMA_Init+0x326>
 800426e:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004272:	3280      	adds	r2, #128	@ 0x80
 8004274:	4293      	cmp	r3, r2
 8004276:	d020      	beq.n	80042ba <HAL_DMA_Init+0x326>
 8004278:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800427c:	4293      	cmp	r3, r2
 800427e:	d01c      	beq.n	80042ba <HAL_DMA_Init+0x326>
 8004280:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 8004284:	3280      	adds	r2, #128	@ 0x80
 8004286:	4293      	cmp	r3, r2
 8004288:	d017      	beq.n	80042ba <HAL_DMA_Init+0x326>
 800428a:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800428e:	4293      	cmp	r3, r2
 8004290:	d013      	beq.n	80042ba <HAL_DMA_Init+0x326>
 8004292:	e009      	b.n	80042a8 <HAL_DMA_Init+0x314>
 8004294:	40020050 	.word	0x40020050
 8004298:	40020650 	.word	0x40020650
 800429c:	50020050 	.word	0x50020050
 80042a0:	3c803180 	.word	0x3c803180
 80042a4:	50020650 	.word	0x50020650
 80042a8:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 80042ac:	3280      	adds	r2, #128	@ 0x80
 80042ae:	4293      	cmp	r3, r2
 80042b0:	d003      	beq.n	80042ba <HAL_DMA_Init+0x326>
 80042b2:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 80042b6:	4293      	cmp	r3, r2
 80042b8:	d102      	bne.n	80042c0 <HAL_DMA_Init+0x32c>
  {
    /* Write DMA Channel Transfer Register 3 (CTR3) *******************************************************************/
    WRITE_REG(hdma->Instance->CTR3, 0U);
 80042ba:	2200      	movs	r2, #0
 80042bc:	655a      	str	r2, [r3, #84]	@ 0x54

    /* Write DMA Channel Block Register 2 (CBR2) **********************************************************************/
    WRITE_REG(hdma->Instance->CBR2, 0U);
 80042be:	659a      	str	r2, [r3, #88]	@ 0x58
  }

  /* Write DMA Channel linked-list address register (CLLR) ************************************************************/
  WRITE_REG(hdma->Instance->CLLR, 0U);
 80042c0:	2000      	movs	r0, #0
 80042c2:	67d8      	str	r0, [r3, #124]	@ 0x7c
  hdma->Mode = hdma->Init.Mode;
 80042c4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80042c6:	65a0      	str	r0, [r4, #88]	@ 0x58
  hdma->Mode = hdma->Init.Mode;
 80042c8:	6523      	str	r3, [r4, #80]	@ 0x50
  hdma->State = HAL_DMA_STATE_READY;
 80042ca:	2301      	movs	r3, #1
 80042cc:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
  return HAL_OK;
 80042d0:	e00b      	b.n	80042ea <HAL_DMA_Init+0x356>
    if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 80042d2:	f7ff fd07 	bl	8003ce4 <HAL_GetTick>
 80042d6:	1b40      	subs	r0, r0, r5
 80042d8:	2805      	cmp	r0, #5
 80042da:	f67f ae6e 	bls.w	8003fba <HAL_DMA_Init+0x26>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80042de:	2310      	movs	r3, #16
 80042e0:	65a3      	str	r3, [r4, #88]	@ 0x58
      hdma->State = HAL_DMA_STATE_ERROR;
 80042e2:	2303      	movs	r3, #3
 80042e4:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    return HAL_ERROR;
 80042e8:	2001      	movs	r0, #1
}
 80042ea:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hdma->Init.Direction) == DMA_MEMORY_TO_MEMORY)
 80042ec:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
    tmpreg |= DMA_CTR2_SWREQ;
 80042f0:	bf08      	it	eq
 80042f2:	f441 7100 	orreq.w	r1, r1, #512	@ 0x200
 80042f6:	e7ab      	b.n	8004250 <HAL_DMA_Init+0x2bc>

080042f8 <HAL_DMA_Start_IT>:
{
 80042f8:	b530      	push	{r4, r5, lr}
  if (hdma == NULL)
 80042fa:	2800      	cmp	r0, #0
 80042fc:	d036      	beq.n	800436c <HAL_DMA_Start_IT+0x74>
  __HAL_LOCK(hdma);
 80042fe:	f890 404c 	ldrb.w	r4, [r0, #76]	@ 0x4c
 8004302:	2c01      	cmp	r4, #1
 8004304:	d034      	beq.n	8004370 <HAL_DMA_Start_IT+0x78>
 8004306:	2401      	movs	r4, #1
 8004308:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
  if (hdma->State == HAL_DMA_STATE_READY)
 800430c:	f890 4054 	ldrb.w	r4, [r0, #84]	@ 0x54
 8004310:	2c01      	cmp	r4, #1
 8004312:	f04f 0400 	mov.w	r4, #0
 8004316:	d125      	bne.n	8004364 <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 8004318:	2502      	movs	r5, #2
 800431a:	f880 5054 	strb.w	r5, [r0, #84]	@ 0x54
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800431e:	6584      	str	r4, [r0, #88]	@ 0x58
  MODIFY_REG(hdma->Instance->CBR1, DMA_CBR1_BNDT, (SrcDataSize & DMA_CBR1_BNDT));
 8004320:	6804      	ldr	r4, [r0, #0]
 8004322:	b29b      	uxth	r3, r3
 8004324:	6ca5      	ldr	r5, [r4, #72]	@ 0x48
 8004326:	0c2d      	lsrs	r5, r5, #16
 8004328:	042d      	lsls	r5, r5, #16
 800432a:	431d      	orrs	r5, r3
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 800432c:	f44f 43fe 	mov.w	r3, #32512	@ 0x7f00
  MODIFY_REG(hdma->Instance->CBR1, DMA_CBR1_BNDT, (SrcDataSize & DMA_CBR1_BNDT));
 8004330:	64a5      	str	r5, [r4, #72]	@ 0x48
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 8004332:	60e3      	str	r3, [r4, #12]
  hdma->Instance->CSAR = SrcAddress;
 8004334:	64e1      	str	r1, [r4, #76]	@ 0x4c
  hdma->Instance->CDAR = DstAddress;
 8004336:	6522      	str	r2, [r4, #80]	@ 0x50
    __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 8004338:	6963      	ldr	r3, [r4, #20]
 800433a:	f443 43ba 	orr.w	r3, r3, #23808	@ 0x5d00
 800433e:	6163      	str	r3, [r4, #20]
    if (hdma->XferHalfCpltCallback != NULL)
 8004340:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8004342:	b11b      	cbz	r3, 800434c <HAL_DMA_Start_IT+0x54>
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 8004344:	6963      	ldr	r3, [r4, #20]
 8004346:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800434a:	6163      	str	r3, [r4, #20]
    if (hdma->XferSuspendCallback != NULL)
 800434c:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 800434e:	b11b      	cbz	r3, 8004358 <HAL_DMA_Start_IT+0x60>
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 8004350:	6963      	ldr	r3, [r4, #20]
 8004352:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8004356:	6163      	str	r3, [r4, #20]
  return HAL_OK;
 8004358:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 800435a:	6963      	ldr	r3, [r4, #20]
 800435c:	f043 0301 	orr.w	r3, r3, #1
 8004360:	6163      	str	r3, [r4, #20]
}
 8004362:	bd30      	pop	{r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 8004364:	2340      	movs	r3, #64	@ 0x40
    __HAL_UNLOCK(hdma);
 8004366:	f880 404c 	strb.w	r4, [r0, #76]	@ 0x4c
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 800436a:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 800436c:	2001      	movs	r0, #1
 800436e:	e7f8      	b.n	8004362 <HAL_DMA_Start_IT+0x6a>
  __HAL_LOCK(hdma);
 8004370:	2002      	movs	r0, #2
 8004372:	e7f6      	b.n	8004362 <HAL_DMA_Start_IT+0x6a>

08004374 <HAL_DMA_Abort>:
{
 8004374:	b538      	push	{r3, r4, r5, lr}
 8004376:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
 8004378:	f7ff fcb4 	bl	8003ce4 <HAL_GetTick>
 800437c:	4605      	mov	r5, r0
  if (hdma == NULL)
 800437e:	b144      	cbz	r4, 8004392 <HAL_DMA_Abort+0x1e>
  if (hdma->State != HAL_DMA_STATE_BUSY)
 8004380:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8004384:	2b02      	cmp	r3, #2
 8004386:	d006      	beq.n	8004396 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004388:	2320      	movs	r3, #32
 800438a:	65a3      	str	r3, [r4, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 800438c:	2300      	movs	r3, #0
 800438e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    return HAL_ERROR;
 8004392:	2001      	movs	r0, #1
}
 8004394:	bd38      	pop	{r3, r4, r5, pc}
    hdma->Instance->CCR |= DMA_CCR_SUSP;
 8004396:	6822      	ldr	r2, [r4, #0]
 8004398:	6953      	ldr	r3, [r2, #20]
 800439a:	f043 0304 	orr.w	r3, r3, #4
 800439e:	6153      	str	r3, [r2, #20]
    hdma->State = HAL_DMA_STATE_SUSPEND;
 80043a0:	2305      	movs	r3, #5
 80043a2:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    while ((hdma->Instance->CSR & DMA_CSR_SUSPF) == 0U)
 80043a6:	6823      	ldr	r3, [r4, #0]
 80043a8:	691a      	ldr	r2, [r3, #16]
 80043aa:	0490      	lsls	r0, r2, #18
 80043ac:	d519      	bpl.n	80043e2 <HAL_DMA_Abort+0x6e>
    hdma->Instance->CCR |= DMA_CCR_RESET;
 80043ae:	695a      	ldr	r2, [r3, #20]
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80043b0:	6d21      	ldr	r1, [r4, #80]	@ 0x50
    hdma->Instance->CCR |= DMA_CCR_RESET;
 80043b2:	f042 0202 	orr.w	r2, r2, #2
 80043b6:	615a      	str	r2, [r3, #20]
    hdma->State = HAL_DMA_STATE_ABORT;
 80043b8:	2204      	movs	r2, #4
 80043ba:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
    __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 80043be:	f44f 42fe 	mov.w	r2, #32512	@ 0x7f00
 80043c2:	60da      	str	r2, [r3, #12]
    hdma->State = HAL_DMA_STATE_READY;
 80043c4:	2201      	movs	r2, #1
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80043c6:	0609      	lsls	r1, r1, #24
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 80043c8:	bf48      	it	mi
 80043ca:	6f61      	ldrmi	r1, [r4, #116]	@ 0x74
    hdma->State = HAL_DMA_STATE_READY;
 80043cc:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
 80043d0:	f04f 0000 	mov.w	r0, #0
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 80043d4:	bf42      	ittt	mi
 80043d6:	730a      	strbmi	r2, [r1, #12]
      hdma->Instance->CBR1 = 0U;
 80043d8:	2200      	movmi	r2, #0
 80043da:	649a      	strmi	r2, [r3, #72]	@ 0x48
    __HAL_UNLOCK(hdma);
 80043dc:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
  return HAL_OK;
 80043e0:	e7d8      	b.n	8004394 <HAL_DMA_Abort+0x20>
      if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 80043e2:	f7ff fc7f 	bl	8003ce4 <HAL_GetTick>
 80043e6:	1b40      	subs	r0, r0, r5
 80043e8:	2805      	cmp	r0, #5
 80043ea:	d9dc      	bls.n	80043a6 <HAL_DMA_Abort+0x32>
        hdma->ErrorCode |= HAL_DMA_ERROR_TIMEOUT;
 80043ec:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80043ee:	f043 0310 	orr.w	r3, r3, #16
 80043f2:	65a3      	str	r3, [r4, #88]	@ 0x58
        hdma->State = HAL_DMA_STATE_ERROR;
 80043f4:	2303      	movs	r3, #3
 80043f6:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80043fa:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80043fc:	061d      	lsls	r5, r3, #24
 80043fe:	d5c5      	bpl.n	800438c <HAL_DMA_Abort+0x18>
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004400:	2201      	movs	r2, #1
 8004402:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8004404:	731a      	strb	r2, [r3, #12]
        __HAL_UNLOCK(hdma);
 8004406:	e7c1      	b.n	800438c <HAL_DMA_Abort+0x18>

08004408 <HAL_DMA_Abort_IT>:
  if (hdma == NULL)
 8004408:	b128      	cbz	r0, 8004416 <HAL_DMA_Abort_IT+0xe>
  if (hdma->State != HAL_DMA_STATE_BUSY)
 800440a:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 800440e:	2b02      	cmp	r3, #2
 8004410:	d003      	beq.n	800441a <HAL_DMA_Abort_IT+0x12>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004412:	2320      	movs	r3, #32
 8004414:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 8004416:	2001      	movs	r0, #1
 8004418:	4770      	bx	lr
    hdma->State = HAL_DMA_STATE_ABORT;
 800441a:	2304      	movs	r3, #4
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 800441c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800441e:	f880 3054 	strb.w	r3, [r0, #84]	@ 0x54
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 8004422:	6953      	ldr	r3, [r2, #20]
  return HAL_OK;
 8004424:	2000      	movs	r0, #0
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 8004426:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800442a:	f043 0304 	orr.w	r3, r3, #4
 800442e:	6153      	str	r3, [r2, #20]
}
 8004430:	4770      	bx	lr

08004432 <HAL_DMA_IRQHandler>:
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8004432:	2101      	movs	r1, #1
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 8004434:	6803      	ldr	r3, [r0, #0]
{
 8004436:	b510      	push	{r4, lr}
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 8004438:	f423 627f 	bic.w	r2, r3, #4080	@ 0xff0
 800443c:	f022 020f 	bic.w	r2, r2, #15
{
 8004440:	4604      	mov	r4, r0
  uint32_t global_active_flag_ns = IS_DMA_GLOBAL_ACTIVE_FLAG_NS(p_dma_instance, global_it_flag);
 8004442:	68d0      	ldr	r0, [r2, #12]
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8004444:	f3c3 020b 	ubfx	r2, r3, #0, #12
 8004448:	3a50      	subs	r2, #80	@ 0x50
 800444a:	f3c2 12c4 	ubfx	r2, r2, #7, #5
 800444e:	fa01 f202 	lsl.w	r2, r1, r2
  if (global_active_flag_ns == 0U)
 8004452:	4202      	tst	r2, r0
 8004454:	f000 80ab 	beq.w	80045ae <HAL_DMA_IRQHandler+0x17c>
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_DTE) != 0U))
 8004458:	691a      	ldr	r2, [r3, #16]
 800445a:	0550      	lsls	r0, r2, #21
 800445c:	d508      	bpl.n	8004470 <HAL_DMA_IRQHandler+0x3e>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DTE) != 0U)
 800445e:	695a      	ldr	r2, [r3, #20]
 8004460:	0552      	lsls	r2, r2, #21
 8004462:	d505      	bpl.n	8004470 <HAL_DMA_IRQHandler+0x3e>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_DTE);
 8004464:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8004468:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_DTE;
 800446a:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 800446c:	430a      	orrs	r2, r1
 800446e:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_ULE) != 0U))
 8004470:	691a      	ldr	r2, [r3, #16]
 8004472:	0510      	lsls	r0, r2, #20
 8004474:	d509      	bpl.n	800448a <HAL_DMA_IRQHandler+0x58>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_ULE) != 0U)
 8004476:	695a      	ldr	r2, [r3, #20]
 8004478:	0511      	lsls	r1, r2, #20
 800447a:	d506      	bpl.n	800448a <HAL_DMA_IRQHandler+0x58>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_ULE);
 800447c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8004480:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_ULE;
 8004482:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 8004484:	f042 0202 	orr.w	r2, r2, #2
 8004488:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_USE) != 0U))
 800448a:	691a      	ldr	r2, [r3, #16]
 800448c:	04d2      	lsls	r2, r2, #19
 800448e:	d509      	bpl.n	80044a4 <HAL_DMA_IRQHandler+0x72>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_USE) != 0U)
 8004490:	695a      	ldr	r2, [r3, #20]
 8004492:	04d0      	lsls	r0, r2, #19
 8004494:	d506      	bpl.n	80044a4 <HAL_DMA_IRQHandler+0x72>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_USE);
 8004496:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800449a:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_USE;
 800449c:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 800449e:	f042 0204 	orr.w	r2, r2, #4
 80044a2:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TO) != 0U))
 80044a4:	691a      	ldr	r2, [r3, #16]
 80044a6:	0451      	lsls	r1, r2, #17
 80044a8:	d509      	bpl.n	80044be <HAL_DMA_IRQHandler+0x8c>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TO) != 0U)
 80044aa:	695a      	ldr	r2, [r3, #20]
 80044ac:	0452      	lsls	r2, r2, #17
 80044ae:	d506      	bpl.n	80044be <HAL_DMA_IRQHandler+0x8c>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TO);
 80044b0:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80044b4:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_TO;
 80044b6:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 80044b8:	f042 0208 	orr.w	r2, r2, #8
 80044bc:	65a2      	str	r2, [r4, #88]	@ 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_HT) != 0U))
 80044be:	691a      	ldr	r2, [r3, #16]
 80044c0:	0590      	lsls	r0, r2, #22
 80044c2:	d509      	bpl.n	80044d8 <HAL_DMA_IRQHandler+0xa6>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != 0U)
 80044c4:	695a      	ldr	r2, [r3, #20]
 80044c6:	0591      	lsls	r1, r2, #22
 80044c8:	d506      	bpl.n	80044d8 <HAL_DMA_IRQHandler+0xa6>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_HT);
 80044ca:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80044ce:	60da      	str	r2, [r3, #12]
      if (hdma->XferHalfCpltCallback != NULL)
 80044d0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80044d2:	b10b      	cbz	r3, 80044d8 <HAL_DMA_IRQHandler+0xa6>
        hdma->XferHalfCpltCallback(hdma);
 80044d4:	4620      	mov	r0, r4
 80044d6:	4798      	blx	r3
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_SUSP) != 0U))
 80044d8:	6823      	ldr	r3, [r4, #0]
 80044da:	691a      	ldr	r2, [r3, #16]
 80044dc:	0492      	lsls	r2, r2, #18
 80044de:	d52e      	bpl.n	800453e <HAL_DMA_IRQHandler+0x10c>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_SUSP) != 0U)
 80044e0:	695a      	ldr	r2, [r3, #20]
 80044e2:	0490      	lsls	r0, r2, #18
 80044e4:	d52b      	bpl.n	800453e <HAL_DMA_IRQHandler+0x10c>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_SUSP);
 80044e6:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80044ea:	60da      	str	r2, [r3, #12]
      if (hdma->State == HAL_DMA_STATE_ABORT)
 80044ec:	f894 2054 	ldrb.w	r2, [r4, #84]	@ 0x54
 80044f0:	2a04      	cmp	r2, #4
 80044f2:	d11d      	bne.n	8004530 <HAL_DMA_IRQHandler+0xfe>
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_SUSP);
 80044f4:	695a      	ldr	r2, [r3, #20]
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80044f6:	6d21      	ldr	r1, [r4, #80]	@ 0x50
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_SUSP);
 80044f8:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80044fc:	615a      	str	r2, [r3, #20]
        hdma->Instance->CCR |= DMA_CCR_RESET;
 80044fe:	695a      	ldr	r2, [r3, #20]
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004500:	0609      	lsls	r1, r1, #24
        hdma->Instance->CCR |= DMA_CCR_RESET;
 8004502:	f042 0202 	orr.w	r2, r2, #2
 8004506:	615a      	str	r2, [r3, #20]
        hdma->State = HAL_DMA_STATE_READY;
 8004508:	f04f 0201 	mov.w	r2, #1
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 800450c:	bf48      	it	mi
 800450e:	6f61      	ldrmi	r1, [r4, #116]	@ 0x74
        hdma->State = HAL_DMA_STATE_READY;
 8004510:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004514:	bf42      	ittt	mi
 8004516:	730a      	strbmi	r2, [r1, #12]
          hdma->Instance->CBR1 = 0U;
 8004518:	2200      	movmi	r2, #0
 800451a:	649a      	strmi	r2, [r3, #72]	@ 0x48
        __HAL_UNLOCK(hdma);
 800451c:	2300      	movs	r3, #0
 800451e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
        if (hdma->XferAbortCallback != NULL)
 8004522:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
    if (hdma->XferErrorCallback != NULL)
 8004524:	2b00      	cmp	r3, #0
 8004526:	d042      	beq.n	80045ae <HAL_DMA_IRQHandler+0x17c>
      hdma->XferErrorCallback(hdma);
 8004528:	4620      	mov	r0, r4
}
 800452a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      hdma->XferErrorCallback(hdma);
 800452e:	4718      	bx	r3
        hdma->State = HAL_DMA_STATE_SUSPEND;
 8004530:	2305      	movs	r3, #5
 8004532:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
        if (hdma->XferSuspendCallback != NULL)
 8004536:	6f23      	ldr	r3, [r4, #112]	@ 0x70
 8004538:	b10b      	cbz	r3, 800453e <HAL_DMA_IRQHandler+0x10c>
          hdma->XferSuspendCallback(hdma);
 800453a:	4620      	mov	r0, r4
 800453c:	4798      	blx	r3
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TC) != 0U))
 800453e:	6823      	ldr	r3, [r4, #0]
 8004540:	691a      	ldr	r2, [r3, #16]
 8004542:	05d2      	lsls	r2, r2, #23
 8004544:	d518      	bpl.n	8004578 <HAL_DMA_IRQHandler+0x146>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != 0U)
 8004546:	695a      	ldr	r2, [r3, #20]
 8004548:	05d0      	lsls	r0, r2, #23
 800454a:	d515      	bpl.n	8004578 <HAL_DMA_IRQHandler+0x146>
      if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 800454c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 800454e:	0611      	lsls	r1, r2, #24
 8004550:	d526      	bpl.n	80045a0 <HAL_DMA_IRQHandler+0x16e>
        if (hdma->Instance->CLLR == 0U)
 8004552:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
 8004554:	b932      	cbnz	r2, 8004564 <HAL_DMA_IRQHandler+0x132>
          if (hdma->Instance->CBR1 == 0U)
 8004556:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8004558:	b922      	cbnz	r2, 8004564 <HAL_DMA_IRQHandler+0x132>
            hdma->State = HAL_DMA_STATE_READY;
 800455a:	2201      	movs	r2, #1
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 800455c:	6f61      	ldr	r1, [r4, #116]	@ 0x74
            hdma->State = HAL_DMA_STATE_READY;
 800455e:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004562:	730a      	strb	r2, [r1, #12]
      __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT));
 8004564:	f44f 7240 	mov.w	r2, #768	@ 0x300
 8004568:	60da      	str	r2, [r3, #12]
      __HAL_UNLOCK(hdma);
 800456a:	2300      	movs	r3, #0
 800456c:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
      if (hdma->XferCpltCallback != NULL)
 8004570:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 8004572:	b10b      	cbz	r3, 8004578 <HAL_DMA_IRQHandler+0x146>
        hdma->XferCpltCallback(hdma);
 8004574:	4620      	mov	r0, r4
 8004576:	4798      	blx	r3
  if (hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8004578:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800457a:	b1c3      	cbz	r3, 80045ae <HAL_DMA_IRQHandler+0x17c>
    hdma->Instance->CCR |= DMA_CCR_RESET;
 800457c:	6822      	ldr	r2, [r4, #0]
 800457e:	6953      	ldr	r3, [r2, #20]
 8004580:	f043 0302 	orr.w	r3, r3, #2
 8004584:	6153      	str	r3, [r2, #20]
    hdma->State = HAL_DMA_STATE_READY;
 8004586:	2301      	movs	r3, #1
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8004588:	6d22      	ldr	r2, [r4, #80]	@ 0x50
    hdma->State = HAL_DMA_STATE_READY;
 800458a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 800458e:	0612      	lsls	r2, r2, #24
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8004590:	bf44      	itt	mi
 8004592:	6f62      	ldrmi	r2, [r4, #116]	@ 0x74
 8004594:	7313      	strbmi	r3, [r2, #12]
    __HAL_UNLOCK(hdma);
 8004596:	2300      	movs	r3, #0
 8004598:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    if (hdma->XferErrorCallback != NULL)
 800459c:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 800459e:	e7c1      	b.n	8004524 <HAL_DMA_IRQHandler+0xf2>
        if (hdma->Instance->CBR1 == 0U)
 80045a0:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80045a2:	2a00      	cmp	r2, #0
 80045a4:	d1de      	bne.n	8004564 <HAL_DMA_IRQHandler+0x132>
          hdma->State = HAL_DMA_STATE_READY;
 80045a6:	2201      	movs	r2, #1
 80045a8:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 80045ac:	e7da      	b.n	8004564 <HAL_DMA_IRQHandler+0x132>
}
 80045ae:	bd10      	pop	{r4, pc}

080045b0 <HAL_DMA_GetError>:
  return hdma->ErrorCode;
 80045b0:	6d80      	ldr	r0, [r0, #88]	@ 0x58
}
 80045b2:	4770      	bx	lr

080045b4 <HAL_DMA_ConfigChannelAttributes>:
  if (hdma == NULL)
 80045b4:	b1d0      	cbz	r0, 80045ec <HAL_DMA_ConfigChannelAttributes+0x38>
  if ((ChannelAttributes & DMA_CHANNEL_ATTR_PRIV_MASK) == DMA_CHANNEL_ATTR_PRIV_MASK)
 80045b6:	06cb      	lsls	r3, r1, #27
 80045b8:	d401      	bmi.n	80045be <HAL_DMA_ConfigChannelAttributes+0xa>
  return HAL_OK;
 80045ba:	2000      	movs	r0, #0
 80045bc:	4770      	bx	lr
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 80045be:	6803      	ldr	r3, [r0, #0]
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80045c0:	2001      	movs	r0, #1
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 80045c2:	f423 627f 	bic.w	r2, r3, #4080	@ 0xff0
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80045c6:	f3c3 030b 	ubfx	r3, r3, #0, #12
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 80045ca:	f022 020f 	bic.w	r2, r2, #15
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 80045ce:	f001 0111 	and.w	r1, r1, #17
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80045d2:	3b50      	subs	r3, #80	@ 0x50
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 80045d4:	2911      	cmp	r1, #17
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80045d6:	f3c3 13c4 	ubfx	r3, r3, #7, #5
      p_dma_instance->PRIVCFGR |= channel_idx;
 80045da:	6851      	ldr	r1, [r2, #4]
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 80045dc:	fa00 f303 	lsl.w	r3, r0, r3
      p_dma_instance->PRIVCFGR |= channel_idx;
 80045e0:	bf0c      	ite	eq
 80045e2:	430b      	orreq	r3, r1
      p_dma_instance->PRIVCFGR &= (~channel_idx);
 80045e4:	ea21 0303 	bicne.w	r3, r1, r3
 80045e8:	6053      	str	r3, [r2, #4]
 80045ea:	e7e6      	b.n	80045ba <HAL_DMA_ConfigChannelAttributes+0x6>
    return HAL_ERROR;
 80045ec:	2001      	movs	r0, #1
}
 80045ee:	4770      	bx	lr

080045f0 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 80045f0:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80045f2:	4604      	mov	r4, r0
 80045f4:	2800      	cmp	r0, #0
 80045f6:	d036      	beq.n	8004666 <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80045f8:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
 80045fc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004600:	b91b      	cbnz	r3, 800460a <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004602:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004606:	f7fc f94b 	bl	80008a0 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800460a:	2302      	movs	r3, #2
 800460c:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8004610:	6823      	ldr	r3, [r4, #0]
 8004612:	69e0      	ldr	r0, [r4, #28]
 8004614:	6819      	ldr	r1, [r3, #0]
 8004616:	6862      	ldr	r2, [r4, #4]
 8004618:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
 800461c:	4302      	orrs	r2, r0
 800461e:	f021 0140 	bic.w	r1, r1, #64	@ 0x40
 8004622:	430a      	orrs	r2, r1
 8004624:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8004626:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004628:	69a0      	ldr	r0, [r4, #24]
 800462a:	68a2      	ldr	r2, [r4, #8]
 800462c:	f421 7183 	bic.w	r1, r1, #262	@ 0x106
 8004630:	4302      	orrs	r2, r0
 8004632:	f021 0101 	bic.w	r1, r1, #1
 8004636:	430a      	orrs	r2, r1
 8004638:	635a      	str	r2, [r3, #52]	@ 0x34
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800463a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800463c:	68e1      	ldr	r1, [r4, #12]
 800463e:	0c12      	lsrs	r2, r2, #16
 8004640:	0412      	lsls	r2, r2, #16
 8004642:	430a      	orrs	r2, r1
 8004644:	641a      	str	r2, [r3, #64]	@ 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8004646:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004648:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 800464c:	0552      	lsls	r2, r2, #21
 800464e:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
 8004652:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
 8004656:	430a      	orrs	r2, r1
 8004658:	635a      	str	r2, [r3, #52]	@ 0x34
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800465a:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800465c:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800465e:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004660:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
 8004664:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004666:	2001      	movs	r0, #1
 8004668:	e7fc      	b.n	8004664 <HAL_DMA2D_Init+0x74>

0800466a <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 800466a:	4770      	bx	lr

0800466c <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 800466c:	4770      	bx	lr

0800466e <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800466e:	6803      	ldr	r3, [r0, #0]
{
 8004670:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004672:	685e      	ldr	r6, [r3, #4]
{
 8004674:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004676:	07f2      	lsls	r2, r6, #31
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004678:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800467a:	d514      	bpl.n	80046a6 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 800467c:	05e9      	lsls	r1, r5, #23
 800467e:	d512      	bpl.n	80046a6 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004680:	681a      	ldr	r2, [r3, #0]
 8004682:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004686:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004688:	6e42      	ldr	r2, [r0, #100]	@ 0x64
 800468a:	f042 0201 	orr.w	r2, r2, #1
 800468e:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004690:	2201      	movs	r2, #1
 8004692:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004694:	2304      	movs	r3, #4
 8004696:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 800469a:	2300      	movs	r3, #0
 800469c:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 80046a0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80046a2:	b103      	cbz	r3, 80046a6 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80046a4:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80046a6:	06b2      	lsls	r2, r6, #26
 80046a8:	d516      	bpl.n	80046d8 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80046aa:	04ab      	lsls	r3, r5, #18
 80046ac:	d514      	bpl.n	80046d8 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80046ae:	6823      	ldr	r3, [r4, #0]
 80046b0:	681a      	ldr	r2, [r3, #0]
 80046b2:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80046b6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80046b8:	2220      	movs	r2, #32
 80046ba:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80046bc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80046be:	f043 0302 	orr.w	r3, r3, #2
 80046c2:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80046c4:	2304      	movs	r3, #4
 80046c6:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 80046ca:	2300      	movs	r3, #0
 80046cc:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 80046d0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80046d2:	b10b      	cbz	r3, 80046d8 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 80046d4:	4620      	mov	r0, r4
 80046d6:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80046d8:	0730      	lsls	r0, r6, #28
 80046da:	d516      	bpl.n	800470a <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80046dc:	0529      	lsls	r1, r5, #20
 80046de:	d514      	bpl.n	800470a <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80046e0:	6823      	ldr	r3, [r4, #0]
 80046e2:	681a      	ldr	r2, [r3, #0]
 80046e4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80046e8:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80046ea:	2208      	movs	r2, #8
 80046ec:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80046ee:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80046f0:	f043 0304 	orr.w	r3, r3, #4
 80046f4:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80046f6:	2304      	movs	r3, #4
 80046f8:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 80046fc:	2300      	movs	r3, #0
 80046fe:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
 8004702:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004704:	b10b      	cbz	r3, 800470a <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004706:	4620      	mov	r0, r4
 8004708:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800470a:	0772      	lsls	r2, r6, #29
 800470c:	d50b      	bpl.n	8004726 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800470e:	056b      	lsls	r3, r5, #21
 8004710:	d509      	bpl.n	8004726 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004712:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004714:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004716:	681a      	ldr	r2, [r3, #0]
 8004718:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800471c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800471e:	2204      	movs	r2, #4
 8004720:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004722:	f7ff ffa2 	bl	800466a <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004726:	07b0      	lsls	r0, r6, #30
 8004728:	d514      	bpl.n	8004754 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 800472a:	05a9      	lsls	r1, r5, #22
 800472c:	d512      	bpl.n	8004754 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800472e:	6823      	ldr	r3, [r4, #0]
 8004730:	681a      	ldr	r2, [r3, #0]
 8004732:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004736:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004738:	2202      	movs	r2, #2
 800473a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800473c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800473e:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004740:	2301      	movs	r3, #1
 8004742:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 8004746:	2300      	movs	r3, #0
 8004748:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
 800474c:	6a23      	ldr	r3, [r4, #32]
 800474e:	b10b      	cbz	r3, 8004754 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004750:	4620      	mov	r0, r4
 8004752:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004754:	06f2      	lsls	r2, r6, #27
 8004756:	d513      	bpl.n	8004780 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004758:	04eb      	lsls	r3, r5, #19
 800475a:	d511      	bpl.n	8004780 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800475c:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800475e:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004760:	681a      	ldr	r2, [r3, #0]
 8004762:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004766:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004768:	2210      	movs	r2, #16
 800476a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800476c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800476e:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004770:	2301      	movs	r3, #1
 8004772:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
 8004776:	2300      	movs	r3, #0
 8004778:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800477c:	f7ff ff76 	bl	800466c <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004780:	bd70      	pop	{r4, r5, r6, pc}
	...

08004784 <DMA_List_GetCLLRNodeInfo.isra.0>:
static void DMA_List_GetCLLRNodeInfo(DMA_NodeTypeDef const *const pNode,
                                     uint32_t *const cllr_mask,
                                     uint32_t *const cllr_offset)
{
  /* Check node type */
  if ((pNode->NodeInfo & DMA_CHANNEL_TYPE_2D_ADDR) == DMA_CHANNEL_TYPE_2D_ADDR)
 8004784:	0783      	lsls	r3, r0, #30
 8004786:	d506      	bpl.n	8004796 <DMA_List_GetCLLRNodeInfo.isra.0+0x12>
  {
    /* Update CLLR register mask value */
    if (cllr_mask != NULL)
 8004788:	b109      	cbz	r1, 800478e <DMA_List_GetCLLRNodeInfo.isra.0+0xa>
    {
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_UT3 |
 800478a:	4b06      	ldr	r3, [pc, #24]	@ (80047a4 <DMA_List_GetCLLRNodeInfo.isra.0+0x20>)
 800478c:	600b      	str	r3, [r1, #0]
                   DMA_CLLR_UB2 | DMA_CLLR_ULL;
    }

    /* Update CLLR register offset */
    if (cllr_offset != NULL)
 800478e:	b10a      	cbz	r2, 8004794 <DMA_List_GetCLLRNodeInfo.isra.0+0x10>
    {
      *cllr_offset = NODE_CLLR_2D_DEFAULT_OFFSET;
 8004790:	2307      	movs	r3, #7
    }

    /* Update CLLR register offset */
    if (cllr_offset != NULL)
    {
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
 8004792:	6013      	str	r3, [r2, #0]
    }
  }
}
 8004794:	4770      	bx	lr
    if (cllr_mask != NULL)
 8004796:	b109      	cbz	r1, 800479c <DMA_List_GetCLLRNodeInfo.isra.0+0x18>
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_ULL;
 8004798:	4b03      	ldr	r3, [pc, #12]	@ (80047a8 <DMA_List_GetCLLRNodeInfo.isra.0+0x24>)
 800479a:	600b      	str	r3, [r1, #0]
    if (cllr_offset != NULL)
 800479c:	2a00      	cmp	r2, #0
 800479e:	d0f9      	beq.n	8004794 <DMA_List_GetCLLRNodeInfo.isra.0+0x10>
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
 80047a0:	2305      	movs	r3, #5
 80047a2:	e7f6      	b.n	8004792 <DMA_List_GetCLLRNodeInfo.isra.0+0xe>
 80047a4:	fe010000 	.word	0xfe010000
 80047a8:	f8010000 	.word	0xf8010000

080047ac <HAL_DMAEx_List_Start_IT>:
  if ((hdma == NULL) || (hdma->LinkedListQueue == NULL))
 80047ac:	4603      	mov	r3, r0
{
 80047ae:	b537      	push	{r0, r1, r2, r4, r5, lr}
  if ((hdma == NULL) || (hdma->LinkedListQueue == NULL))
 80047b0:	2800      	cmp	r0, #0
 80047b2:	d04b      	beq.n	800484c <HAL_DMAEx_List_Start_IT+0xa0>
 80047b4:	6f42      	ldr	r2, [r0, #116]	@ 0x74
 80047b6:	2a00      	cmp	r2, #0
 80047b8:	d048      	beq.n	800484c <HAL_DMAEx_List_Start_IT+0xa0>
  dma_state = hdma->State;
 80047ba:	f890 1054 	ldrb.w	r1, [r0, #84]	@ 0x54
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 80047be:	6804      	ldr	r4, [r0, #0]
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 80047c0:	2901      	cmp	r1, #1
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 80047c2:	6960      	ldr	r0, [r4, #20]
  dma_state = hdma->State;
 80047c4:	b2cd      	uxtb	r5, r1
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 80047c6:	d003      	beq.n	80047d0 <HAL_DMAEx_List_Start_IT+0x24>
 80047c8:	2d02      	cmp	r5, #2
 80047ca:	d13a      	bne.n	8004842 <HAL_DMAEx_List_Start_IT+0x96>
 80047cc:	03c1      	lsls	r1, r0, #15
 80047ce:	d538      	bpl.n	8004842 <HAL_DMAEx_List_Start_IT+0x96>
    if (hdma->State == HAL_DMA_STATE_READY)
 80047d0:	f893 1054 	ldrb.w	r1, [r3, #84]	@ 0x54
 80047d4:	2901      	cmp	r1, #1
 80047d6:	b2cd      	uxtb	r5, r1
 80047d8:	d12c      	bne.n	8004834 <HAL_DMAEx_List_Start_IT+0x88>
      __HAL_LOCK(hdma);
 80047da:	f893 104c 	ldrb.w	r1, [r3, #76]	@ 0x4c
 80047de:	2002      	movs	r0, #2
 80047e0:	2901      	cmp	r1, #1
 80047e2:	d02c      	beq.n	800483e <HAL_DMAEx_List_Start_IT+0x92>
      hdma->ErrorCode                  = HAL_DMA_ERROR_NONE;
 80047e4:	2100      	movs	r1, #0
      hdma->State                  = HAL_DMA_STATE_BUSY;
 80047e6:	f883 0054 	strb.w	r0, [r3, #84]	@ 0x54
      __HAL_LOCK(hdma);
 80047ea:	f883 504c 	strb.w	r5, [r3, #76]	@ 0x4c
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_BUSY;
 80047ee:	7310      	strb	r0, [r2, #12]
      hdma->ErrorCode                  = HAL_DMA_ERROR_NONE;
 80047f0:	6599      	str	r1, [r3, #88]	@ 0x58
      hdma->LinkedListQueue->ErrorCode = HAL_DMA_QUEUE_ERROR_NONE;
 80047f2:	6111      	str	r1, [r2, #16]
      __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 80047f4:	6961      	ldr	r1, [r4, #20]
 80047f6:	f441 41ba 	orr.w	r1, r1, #23808	@ 0x5d00
 80047fa:	6161      	str	r1, [r4, #20]
      if (hdma->XferHalfCpltCallback != NULL)
 80047fc:	6e59      	ldr	r1, [r3, #100]	@ 0x64
 80047fe:	b119      	cbz	r1, 8004808 <HAL_DMAEx_List_Start_IT+0x5c>
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 8004800:	6961      	ldr	r1, [r4, #20]
 8004802:	f441 7100 	orr.w	r1, r1, #512	@ 0x200
 8004806:	6161      	str	r1, [r4, #20]
      if (hdma->XferSuspendCallback != NULL)
 8004808:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800480a:	b11b      	cbz	r3, 8004814 <HAL_DMAEx_List_Start_IT+0x68>
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 800480c:	6963      	ldr	r3, [r4, #20]
 800480e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8004812:	6163      	str	r3, [r4, #20]
      DMA_List_GetCLLRNodeInfo(hdma->LinkedListQueue->Head, &cllr_mask, NULL);
 8004814:	6815      	ldr	r5, [r2, #0]
 8004816:	a901      	add	r1, sp, #4
 8004818:	6a28      	ldr	r0, [r5, #32]
 800481a:	2200      	movs	r2, #0
 800481c:	f7ff ffb2 	bl	8004784 <DMA_List_GetCLLRNodeInfo.isra.0>
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 8004820:	0c2b      	lsrs	r3, r5, #16
 8004822:	041b      	lsls	r3, r3, #16
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 8004824:	f025 0503 	bic.w	r5, r5, #3
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 8004828:	6023      	str	r3, [r4, #0]
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 800482a:	042d      	lsls	r5, r5, #16
 800482c:	9b01      	ldr	r3, [sp, #4]
 800482e:	0c2d      	lsrs	r5, r5, #16
 8004830:	431d      	orrs	r5, r3
 8004832:	67e5      	str	r5, [r4, #124]	@ 0x7c
  return HAL_OK;
 8004834:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 8004836:	6963      	ldr	r3, [r4, #20]
 8004838:	f043 0301 	orr.w	r3, r3, #1
 800483c:	6163      	str	r3, [r4, #20]
}
 800483e:	b003      	add	sp, #12
 8004840:	bd30      	pop	{r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 8004842:	2240      	movs	r2, #64	@ 0x40
 8004844:	659a      	str	r2, [r3, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 8004846:	2200      	movs	r2, #0
 8004848:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
    return HAL_ERROR;
 800484c:	2001      	movs	r0, #1
 800484e:	e7f6      	b.n	800483e <HAL_DMAEx_List_Start_IT+0x92>

08004850 <HAL_DMAEx_ConfigDataHandling>:
  if ((hdma == NULL) || (pConfigDataHandling == NULL))
 8004850:	b1b0      	cbz	r0, 8004880 <HAL_DMAEx_ConfigDataHandling+0x30>
 8004852:	b1a9      	cbz	r1, 8004880 <HAL_DMAEx_ConfigDataHandling+0x30>
  if (hdma->State == HAL_DMA_STATE_READY)
 8004854:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 8004858:	2b01      	cmp	r3, #1
 800485a:	d10c      	bne.n	8004876 <HAL_DMAEx_ConfigDataHandling+0x26>
    MODIFY_REG(hdma->Instance->CTR1, (DMA_CTR1_DHX | DMA_CTR1_DBX | DMA_CTR1_SBX | DMA_CTR1_PAM),
 800485c:	e9d1 1300 	ldrd	r1, r3, [r1]
 8004860:	6800      	ldr	r0, [r0, #0]
 8004862:	430b      	orrs	r3, r1
 8004864:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 8004866:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 800486a:	f422 5260 	bic.w	r2, r2, #14336	@ 0x3800
 800486e:	4313      	orrs	r3, r2
 8004870:	6403      	str	r3, [r0, #64]	@ 0x40
  return HAL_OK;
 8004872:	2000      	movs	r0, #0
 8004874:	4770      	bx	lr
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 8004876:	2340      	movs	r3, #64	@ 0x40
 8004878:	6583      	str	r3, [r0, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 800487a:	2300      	movs	r3, #0
 800487c:	f880 304c 	strb.w	r3, [r0, #76]	@ 0x4c
    return HAL_ERROR;
 8004880:	2001      	movs	r0, #1
}
 8004882:	4770      	bx	lr

08004884 <HAL_DMAEx_GetFifoLevel>:
  return ((hdma->Instance->CSR & DMA_CSR_FIFOL) >> DMA_CSR_FIFOL_Pos);
 8004884:	6803      	ldr	r3, [r0, #0]
 8004886:	6918      	ldr	r0, [r3, #16]
}
 8004888:	f3c0 4007 	ubfx	r0, r0, #16, #8
 800488c:	4770      	bx	lr
	...

08004890 <HAL_GPIO_Init>:
  * @param  pGPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, const GPIO_InitTypeDef *pGPIO_Init)
{
 8004890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /* Configure the External Interrupt or event for the current IO */
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        tmp = EXTI->EXTICR[position >> 2U];
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004894:	4b81      	ldr	r3, [pc, #516]	@ (8004a9c <HAL_GPIO_Init+0x20c>)
{
 8004896:	b085      	sub	sp, #20
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004898:	ea03 2390 	and.w	r3, r3, r0, lsr #10
 800489c:	9303      	str	r3, [sp, #12]
 800489e:	4b80      	ldr	r3, [pc, #512]	@ (8004aa0 <HAL_GPIO_Init+0x210>)
  uint32_t position = 0U;
 80048a0:	2200      	movs	r2, #0
 80048a2:	9302      	str	r3, [sp, #8]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 80048a4:	f04f 0e03 	mov.w	lr, #3
  while (((pGPIO_Init->Pin) >> position) != 0U)
 80048a8:	4603      	mov	r3, r0
        EXTI->EXTICR[position >> 2U] = tmp;

        /* Clear Rising Falling edge configuration */
        tmp = EXTI->RTSR1;
 80048aa:	4f7e      	ldr	r7, [pc, #504]	@ (8004aa4 <HAL_GPIO_Init+0x214>)
  while (((pGPIO_Init->Pin) >> position) != 0U)
 80048ac:	680e      	ldr	r6, [r1, #0]
 80048ae:	fa36 f402 	lsrs.w	r4, r6, r2
 80048b2:	d102      	bne.n	80048ba <HAL_GPIO_Init+0x2a>
        EXTI->IMR1 = tmp;
      }
    }
    position++;
  }
}
 80048b4:	b005      	add	sp, #20
 80048b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (pGPIO_Init->Pin) & (1UL << position);
 80048ba:	2401      	movs	r4, #1
 80048bc:	fa04 fc02 	lsl.w	ip, r4, r2
    if (iocurrent != 0U)
 80048c0:	ea1c 0406 	ands.w	r4, ip, r6
 80048c4:	9401      	str	r4, [sp, #4]
 80048c6:	f000 808e 	beq.w	80049e6 <HAL_GPIO_Init+0x156>
      if (GPIOx == LPGPIO1)
 80048ca:	4c77      	ldr	r4, [pc, #476]	@ (8004aa8 <HAL_GPIO_Init+0x218>)
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 80048cc:	684d      	ldr	r5, [r1, #4]
      if (GPIOx == LPGPIO1)
 80048ce:	42a0      	cmp	r0, r4
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80048d0:	f025 0810 	bic.w	r8, r5, #16
      if (GPIOx == LPGPIO1)
 80048d4:	f040 808c 	bne.w	80049f0 <HAL_GPIO_Init+0x160>
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 80048d8:	260f      	movs	r6, #15
        tmp = GPIOx->MODER;
 80048da:	6804      	ldr	r4, [r0, #0]
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 80048dc:	f005 0301 	and.w	r3, r5, #1
        tmp &= ~(LPGPIO_MODER_MOD0 << position);
 80048e0:	ea24 040c 	bic.w	r4, r4, ip
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE_OUTPUT_PP) << position);
 80048e4:	4093      	lsls	r3, r2
 80048e6:	4323      	orrs	r3, r4
        pin_position = LPGPIO_Map[position].Pin_Pos;
 80048e8:	9c02      	ldr	r4, [sp, #8]
        GPIOx->MODER = tmp;
 80048ea:	6003      	str	r3, [r0, #0]
        pin_position = LPGPIO_Map[position].Pin_Pos;
 80048ec:	6864      	ldr	r4, [r4, #4]
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 80048ee:	9b02      	ldr	r3, [sp, #8]
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 80048f0:	f004 0c07 	and.w	ip, r4, #7
 80048f4:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80048f8:	fa06 fa0c 	lsl.w	sl, r6, ip
        tmp |= ((GPIO_AF11_LPGPIO1 & 0x0FUL) << (((pin_position) & 0x07U) * 4U));
 80048fc:	260b      	movs	r6, #11
 80048fe:	fa06 fc0c 	lsl.w	ip, r6, ip
        tmp |= ((GPIO_MODE_AF_PP & 0x0FUL) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004902:	2602      	movs	r6, #2
        p_gpio = LPGPIO_Map[position].GPIO_PORT;
 8004904:	681b      	ldr	r3, [r3, #0]
        tmp = p_gpio->AFR[(pin_position) >> 3U];
 8004906:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 800490a:	eb03 0989 	add.w	r9, r3, r9, lsl #2
 800490e:	f8d9 b020 	ldr.w	fp, [r9, #32]
        tmp &= ~(0x0FUL << (((pin_position) & 0x07U) * 4U));
 8004912:	ea2b 0a0a 	bic.w	sl, fp, sl
        tmp |= ((GPIO_AF11_LPGPIO1 & 0x0FUL) << (((pin_position) & 0x07U) * 4U));
 8004916:	ea4c 0c0a 	orr.w	ip, ip, sl
        p_gpio->AFR[(pin_position) >> 3U] = tmp;
 800491a:	f8c9 c020 	str.w	ip, [r9, #32]
        tmp = p_gpio->MODER;
 800491e:	f8d3 9000 	ldr.w	r9, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004922:	ea4f 0c44 	mov.w	ip, r4, lsl #1
 8004926:	fa0e fa0c 	lsl.w	sl, lr, ip
 800492a:	ea29 090a 	bic.w	r9, r9, sl
        tmp |= ((GPIO_MODE_AF_PP & 0x0FUL) << (pin_position * GPIO_MODER_MODE1_Pos));
 800492e:	fa06 fc0c 	lsl.w	ip, r6, ip
 8004932:	ea4c 0c09 	orr.w	ip, ip, r9
        p_gpio->MODER = tmp;
 8004936:	f8c3 c000 	str.w	ip, [r3]
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800493a:	f108 38ff 	add.w	r8, r8, #4294967295
 800493e:	f1b8 0f01 	cmp.w	r8, #1
 8004942:	f240 8082 	bls.w	8004a4a <HAL_GPIO_Init+0x1ba>
      if (pGPIO_Init->Mode != GPIO_MODE_ANALOG)
 8004946:	2d03      	cmp	r5, #3
 8004948:	d04d      	beq.n	80049e6 <HAL_GPIO_Init+0x156>
        tmp = p_gpio->PUPDR;
 800494a:	f8d3 800c 	ldr.w	r8, [r3, #12]
        tmp |= ((pGPIO_Init->Pull) << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 800494e:	688e      	ldr	r6, [r1, #8]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 8004950:	0064      	lsls	r4, r4, #1
 8004952:	fa0e fc04 	lsl.w	ip, lr, r4
 8004956:	ea28 0c0c 	bic.w	ip, r8, ip
        tmp |= ((pGPIO_Init->Pull) << (pin_position * GPIO_PUPDR_PUPD1_Pos));
 800495a:	fa06 f404 	lsl.w	r4, r6, r4
 800495e:	ea44 040c 	orr.w	r4, r4, ip
        p_gpio->PUPDR = tmp;
 8004962:	60dc      	str	r4, [r3, #12]
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8004964:	00ec      	lsls	r4, r5, #3
 8004966:	d53e      	bpl.n	80049e6 <HAL_GPIO_Init+0x156>
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004968:	260f      	movs	r6, #15
 800496a:	f022 0c03 	bic.w	ip, r2, #3
 800496e:	f10c 4c8c 	add.w	ip, ip, #1174405120	@ 0x46000000
 8004972:	f002 0403 	and.w	r4, r2, #3
 8004976:	f50c 3c08 	add.w	ip, ip, #139264	@ 0x22000
 800497a:	00e4      	lsls	r4, r4, #3
        tmp = EXTI->EXTICR[position >> 2U];
 800497c:	f8dc 9060 	ldr.w	r9, [ip, #96]	@ 0x60
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004980:	fa06 f804 	lsl.w	r8, r6, r4
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004984:	9e03      	ldr	r6, [sp, #12]
        tmp &= ~((0x0FUL) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004986:	ea29 0808 	bic.w	r8, r9, r8
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 800498a:	fa06 f404 	lsl.w	r4, r6, r4
        tmp &= ~((uint32_t)iocurrent);
 800498e:	9e01      	ldr	r6, [sp, #4]
        tmp |= (GPIO_GET_INDEX(GPIOx) << (EXTI_EXTICR1_EXTI1_Pos * (position & 0x03U)));
 8004990:	ea44 0408 	orr.w	r4, r4, r8
        EXTI->EXTICR[position >> 2U] = tmp;
 8004994:	f8cc 4060 	str.w	r4, [ip, #96]	@ 0x60
        tmp &= ~((uint32_t)iocurrent);
 8004998:	ea6f 0c06 	mvn.w	ip, r6
        if ((pGPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800499c:	02ee      	lsls	r6, r5, #11
          tmp |= iocurrent;
 800499e:	bf48      	it	mi
 80049a0:	9e01      	ldrmi	r6, [sp, #4]
        tmp = EXTI->RTSR1;
 80049a2:	683c      	ldr	r4, [r7, #0]
          tmp |= iocurrent;
 80049a4:	bf4c      	ite	mi
 80049a6:	4334      	orrmi	r4, r6
        tmp &= ~((uint32_t)iocurrent);
 80049a8:	ea0c 0404 	andpl.w	r4, ip, r4
        EXTI->RTSR1 = tmp;
 80049ac:	603c      	str	r4, [r7, #0]
        if ((pGPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80049ae:	02ae      	lsls	r6, r5, #10
        tmp = EXTI->FTSR1;
 80049b0:	687c      	ldr	r4, [r7, #4]
          tmp |= iocurrent;
 80049b2:	bf4a      	itet	mi
 80049b4:	9e01      	ldrmi	r6, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 80049b6:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 80049ba:	4334      	orrmi	r4, r6
        EXTI->FTSR1 = tmp;
 80049bc:	607c      	str	r4, [r7, #4]
        if ((pGPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80049be:	03ae      	lsls	r6, r5, #14
        tmp = EXTI->EMR1;
 80049c0:	f8d7 4084 	ldr.w	r4, [r7, #132]	@ 0x84
          tmp |= iocurrent;
 80049c4:	bf4a      	itet	mi
 80049c6:	9e01      	ldrmi	r6, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 80049c8:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 80049cc:	4334      	orrmi	r4, r6
        EXTI->EMR1 = tmp;
 80049ce:	f8c7 4084 	str.w	r4, [r7, #132]	@ 0x84
        if ((pGPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80049d2:	03ed      	lsls	r5, r5, #15
        tmp = EXTI->IMR1;
 80049d4:	f8d7 4080 	ldr.w	r4, [r7, #128]	@ 0x80
          tmp |= iocurrent;
 80049d8:	bf4a      	itet	mi
 80049da:	9d01      	ldrmi	r5, [sp, #4]
        tmp &= ~((uint32_t)iocurrent);
 80049dc:	ea0c 0404 	andpl.w	r4, ip, r4
          tmp |= iocurrent;
 80049e0:	432c      	orrmi	r4, r5
        EXTI->IMR1 = tmp;
 80049e2:	f8c7 4080 	str.w	r4, [r7, #128]	@ 0x80
    position++;
 80049e6:	9c02      	ldr	r4, [sp, #8]
 80049e8:	3201      	adds	r2, #1
 80049ea:	3408      	adds	r4, #8
 80049ec:	9402      	str	r4, [sp, #8]
 80049ee:	e75d      	b.n	80048ac <HAL_GPIO_Init+0x1c>
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80049f0:	ea4f 0942 	mov.w	r9, r2, lsl #1
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 80049f4:	fa0e f409 	lsl.w	r4, lr, r9
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 80049f8:	f005 0c03 	and.w	ip, r5, #3
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80049fc:	f1b8 0f02 	cmp.w	r8, #2
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a00:	ea6f 0404 	mvn.w	r4, r4
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a04:	fa0c fc09 	lsl.w	ip, ip, r9
      else if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004a08:	d13e      	bne.n	8004a88 <HAL_GPIO_Init+0x1f8>
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004a0a:	260f      	movs	r6, #15
        tmp = GPIOx->AFR[position >> 3U];
 8004a0c:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004a10:	f002 0907 	and.w	r9, r2, #7
 8004a14:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 8004a18:	ea4f 0989 	mov.w	r9, r9, lsl #2
        tmp = GPIOx->AFR[position >> 3U];
 8004a1c:	f8d8 a020 	ldr.w	sl, [r8, #32]
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004a20:	fa06 fb09 	lsl.w	fp, r6, r9
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004a24:	690e      	ldr	r6, [r1, #16]
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004a26:	ea2a 0a0b 	bic.w	sl, sl, fp
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8004a2a:	f006 0b0f 	and.w	fp, r6, #15
 8004a2e:	fa0b fb09 	lsl.w	fp, fp, r9
 8004a32:	ea4b 0b0a 	orr.w	fp, fp, sl
        GPIOx->AFR[position >> 3U] = tmp;
 8004a36:	f8c8 b020 	str.w	fp, [r8, #32]
        tmp = p_gpio->MODER;
 8004a3a:	f8d3 8000 	ldr.w	r8, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a3e:	ea04 0808 	and.w	r8, r4, r8
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a42:	ea48 040c 	orr.w	r4, r8, ip
        p_gpio->MODER = tmp;
 8004a46:	601c      	str	r4, [r3, #0]
    pin_position = position;
 8004a48:	4614      	mov	r4, r2
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a4a:	68ce      	ldr	r6, [r1, #12]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a4c:	ea4f 0844 	mov.w	r8, r4, lsl #1
 8004a50:	fa0e f908 	lsl.w	r9, lr, r8
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a54:	fa06 f808 	lsl.w	r8, r6, r8
        tmp &= ~(GPIO_OTYPER_OT0 << pin_position);
 8004a58:	2601      	movs	r6, #1
        tmp = p_gpio->OSPEEDR;
 8004a5a:	f8d3 c008 	ldr.w	ip, [r3, #8]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a5e:	ea2c 0c09 	bic.w	ip, ip, r9
        tmp |= (pGPIO_Init->Speed << (pin_position * GPIO_OSPEEDR_OSPEED1_Pos));
 8004a62:	ea48 080c 	orr.w	r8, r8, ip
        p_gpio->OSPEEDR = tmp;
 8004a66:	f8c3 8008 	str.w	r8, [r3, #8]
        tmp = p_gpio->OTYPER;
 8004a6a:	f8d3 8004 	ldr.w	r8, [r3, #4]
        tmp &= ~(GPIO_OTYPER_OT0 << pin_position);
 8004a6e:	fa06 fc04 	lsl.w	ip, r6, r4
 8004a72:	ea28 080c 	bic.w	r8, r8, ip
        tmp |= (((pGPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << pin_position);
 8004a76:	f3c5 1c00 	ubfx	ip, r5, #4, #1
 8004a7a:	fa0c fc04 	lsl.w	ip, ip, r4
 8004a7e:	ea4c 0c08 	orr.w	ip, ip, r8
        p_gpio->OTYPER = tmp;
 8004a82:	f8c3 c004 	str.w	ip, [r3, #4]
 8004a86:	e75e      	b.n	8004946 <HAL_GPIO_Init+0xb6>
        tmp = p_gpio->MODER;
 8004a88:	f8d3 9000 	ldr.w	r9, [r3]
        tmp &= ~(GPIO_MODER_MODE0 << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a8c:	ea04 0409 	and.w	r4, r4, r9
        tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (pin_position * GPIO_MODER_MODE1_Pos));
 8004a90:	ea44 040c 	orr.w	r4, r4, ip
        p_gpio->MODER = tmp;
 8004a94:	601c      	str	r4, [r3, #0]
    pin_position = position;
 8004a96:	4614      	mov	r4, r2
 8004a98:	e74f      	b.n	800493a <HAL_GPIO_Init+0xaa>
 8004a9a:	bf00      	nop
 8004a9c:	002f7f7f 	.word	0x002f7f7f
 8004aa0:	08035634 	.word	0x08035634
 8004aa4:	46022000 	.word	0x46022000
 8004aa8:	46020000 	.word	0x46020000

08004aac <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0U)
 8004aac:	6903      	ldr	r3, [r0, #16]
 8004aae:	4219      	tst	r1, r3
  {
    bitstatus = GPIO_PIN_RESET;
  }

  return bitstatus;
}
 8004ab0:	bf14      	ite	ne
 8004ab2:	2001      	movne	r0, #1
 8004ab4:	2000      	moveq	r0, #0
 8004ab6:	4770      	bx	lr

08004ab8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8004ab8:	b10a      	cbz	r2, 8004abe <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8004aba:	6181      	str	r1, [r0, #24]
 8004abc:	4770      	bx	lr
  }
  else
  {
    GPIOx->BRR  = (uint32_t)GPIO_Pin;
 8004abe:	6281      	str	r1, [r0, #40]	@ 0x28
  }
}
 8004ac0:	4770      	bx	lr

08004ac2 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004ac2:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004ac4:	ea01 0203 	and.w	r2, r1, r3
 8004ac8:	ea21 0103 	bic.w	r1, r1, r3
 8004acc:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004ad0:	6181      	str	r1, [r0, #24]
}
 8004ad2:	4770      	bx	lr

08004ad4 <HAL_GPIO_EXTI_Rising_Callback>:
  UNUSED(GPIO_Pin);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Rising_Callback could be implemented in the user file
   */
}
 8004ad4:	4770      	bx	lr
	...

08004ad8 <HAL_GPIO_EXTI_IRQHandler>:
{
 8004ad8:	b538      	push	{r3, r4, r5, lr}
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0U)
 8004ada:	4d08      	ldr	r5, [pc, #32]	@ (8004afc <HAL_GPIO_EXTI_IRQHandler+0x24>)
{
 8004adc:	4604      	mov	r4, r0
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0U)
 8004ade:	68eb      	ldr	r3, [r5, #12]
 8004ae0:	4203      	tst	r3, r0
 8004ae2:	d002      	beq.n	8004aea <HAL_GPIO_EXTI_IRQHandler+0x12>
    __HAL_GPIO_EXTI_CLEAR_RISING_IT(GPIO_Pin);
 8004ae4:	60e8      	str	r0, [r5, #12]
    HAL_GPIO_EXTI_Rising_Callback(GPIO_Pin);
 8004ae6:	f7ff fff5 	bl	8004ad4 <HAL_GPIO_EXTI_Rising_Callback>
  if (__HAL_GPIO_EXTI_GET_FALLING_IT(GPIO_Pin) != 0U)
 8004aea:	692b      	ldr	r3, [r5, #16]
 8004aec:	421c      	tst	r4, r3
 8004aee:	d003      	beq.n	8004af8 <HAL_GPIO_EXTI_IRQHandler+0x20>
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8004af0:	4620      	mov	r0, r4
    __HAL_GPIO_EXTI_CLEAR_FALLING_IT(GPIO_Pin);
 8004af2:	612c      	str	r4, [r5, #16]
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 8004af4:	f7fc fb22 	bl	800113c <HAL_GPIO_EXTI_Falling_Callback>
}
 8004af8:	bd38      	pop	{r3, r4, r5, pc}
 8004afa:	bf00      	nop
 8004afc:	46022000 	.word	0x46022000

08004b00 <HAL_GPU2D_Init>:
  * @param  hgpu2d pointer to a GPU2D_HandleTypeDef structure that contains
  *                the configuration information for the GPU2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_GPU2D_Init(GPU2D_HandleTypeDef *hgpu2d)
{
 8004b00:	b510      	push	{r4, lr}
  /* Check the GPU2D handle validity */
  if (hgpu2d == NULL)
 8004b02:	4604      	mov	r4, r0
 8004b04:	b170      	cbz	r0, 8004b24 <HAL_GPU2D_Init+0x24>
  }

  /* Check the parameters */
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));

  if (hgpu2d->State == HAL_GPU2D_STATE_RESET)
 8004b06:	7943      	ldrb	r3, [r0, #5]
 8004b08:	b93b      	cbnz	r3, 8004b1a <HAL_GPU2D_Init+0x1a>

    /* Init the low level hardware */
    hgpu2d->MspInitCallback(hgpu2d);
#else /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 0 */
    /* Init the low level hardware */
    HAL_GPU2D_MspInit(hgpu2d);
 8004b0a:	f7fb feed 	bl	80008e8 <HAL_GPU2D_MspInit>
  /* Reset the CommandListCpltCallback handler */
  hgpu2d->CommandListCpltCallback = NULL;
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */

  /* Update error code */
  hgpu2d->ErrorCode = HAL_GPU2D_ERROR_NONE;
 8004b0e:	2000      	movs	r0, #0

  /* Initialize the GPU2D state*/
  hgpu2d->State = HAL_GPU2D_STATE_READY;

  /* Release Lock */
  __HAL_UNLOCK(hgpu2d);
 8004b10:	f44f 7380 	mov.w	r3, #256	@ 0x100
  hgpu2d->ErrorCode = HAL_GPU2D_ERROR_NONE;
 8004b14:	60a0      	str	r0, [r4, #8]
  __HAL_UNLOCK(hgpu2d);
 8004b16:	80a3      	strh	r3, [r4, #4]

  return HAL_OK;
}
 8004b18:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hgpu2d);
 8004b1a:	7903      	ldrb	r3, [r0, #4]
 8004b1c:	2b01      	cmp	r3, #1
 8004b1e:	d1f6      	bne.n	8004b0e <HAL_GPU2D_Init+0xe>
 8004b20:	2002      	movs	r0, #2
 8004b22:	e7f9      	b.n	8004b18 <HAL_GPU2D_Init+0x18>
    return HAL_ERROR;
 8004b24:	2001      	movs	r0, #1
 8004b26:	e7f7      	b.n	8004b18 <HAL_GPU2D_Init+0x18>

08004b28 <HAL_GPU2D_ReadRegister>:
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since reading a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  value = GPU2D_ReadReg(hgpu2d->Instance, offset);
 8004b28:	6803      	ldr	r3, [r0, #0]
 8004b2a:	58c8      	ldr	r0, [r1, r3]

  return value;
}
 8004b2c:	4770      	bx	lr

08004b2e <HAL_GPU2D_WriteRegister>:
  assert_param(IS_GPU2D_ALL_INSTANCE(hgpu2d->Instance));
  assert_param(IS_GPU2D_OFFSET(offset));

  /* No locking is required since writing a register is an atomic operation
   * and doesn't incur a state change in hal_gpu2d. */
  GPU2D_WriteReg(hgpu2d->Instance, offset, value);
 8004b2e:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8004b30:	2000      	movs	r0, #0
  GPU2D_WriteReg(hgpu2d->Instance, offset, value);
 8004b32:	50ca      	str	r2, [r1, r3]
}
 8004b34:	4770      	bx	lr

08004b36 <HAL_GPU2D_IRQHandler>:
  *                the configuration information for the GPU2D.
  * @retval None
  */
void HAL_GPU2D_IRQHandler(GPU2D_HandleTypeDef *hgpu2d)
{
  uint32_t isr_flags = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_ITCTRL);
 8004b36:	6802      	ldr	r2, [r0, #0]
{
 8004b38:	b508      	push	{r3, lr}
  uint32_t isr_flags = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_ITCTRL);
 8004b3a:	f8d2 10f8 	ldr.w	r1, [r2, #248]	@ 0xf8

  /* Command List Complete Interrupt management */
  if ((isr_flags & GPU2D_FLAG_CLC) != 0U)
 8004b3e:	07c9      	lsls	r1, r1, #31
 8004b40:	d50a      	bpl.n	8004b58 <HAL_GPU2D_IRQHandler+0x22>
  {
    uint32_t last_cl_id;

    /* Clear the completion flag */
    __HAL_GPU2D_CLEAR_FLAG(hgpu2d, GPU2D_FLAG_CLC);
 8004b42:	f8d2 10f8 	ldr.w	r1, [r2, #248]	@ 0xf8
 8004b46:	f021 0101 	bic.w	r1, r1, #1
 8004b4a:	f8c2 10f8 	str.w	r1, [r2, #248]	@ 0xf8

    last_cl_id = GPU2D_ReadReg(hgpu2d->Instance, GPU2D_CLID);
 8004b4e:	6803      	ldr	r3, [r0, #0]
 8004b50:	f8d3 1148 	ldr.w	r1, [r3, #328]	@ 0x148
    if (hgpu2d->CommandListCpltCallback != NULL)
    {
      hgpu2d->CommandListCpltCallback(hgpu2d, last_cl_id);
    }
#else /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 0 */
    HAL_GPU2D_CommandListCpltCallback(hgpu2d, last_cl_id);
 8004b54:	f7fe f8ce 	bl	8002cf4 <HAL_GPU2D_CommandListCpltCallback>
#endif /* USE_HAL_GPU2D_REGISTER_CALLBACKS = 1 */
  }
}
 8004b58:	bd08      	pop	{r3, pc}

08004b5a <HAL_GPU2D_ErrorCallback>:
            the HAL_GPU2D_ErrorCallback can be implemented in the user file.
            The default implementation stops the execution as an error is considered
            fatal and non recoverable.
   */

  for (;;)
 8004b5a:	e7fe      	b.n	8004b5a <HAL_GPU2D_ErrorCallback>

08004b5c <HAL_GPU2D_ER_IRQHandler>:
{
 8004b5c:	b508      	push	{r3, lr}
  HAL_GPU2D_ErrorCallback(hgpu2d);
 8004b5e:	f7ff fffc 	bl	8004b5a <HAL_GPU2D_ErrorCallback>
}
 8004b62:	bd08      	pop	{r3, pc}

08004b64 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8004b64:	6803      	ldr	r3, [r0, #0]
 8004b66:	699a      	ldr	r2, [r3, #24]
 8004b68:	0791      	lsls	r1, r2, #30
  {
    hi2c->Instance->TXDR = 0x00U;
 8004b6a:	bf44      	itt	mi
 8004b6c:	2200      	movmi	r2, #0
 8004b6e:	629a      	strmi	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004b70:	699a      	ldr	r2, [r3, #24]
 8004b72:	07d2      	lsls	r2, r2, #31
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8004b74:	bf5e      	ittt	pl
 8004b76:	699a      	ldrpl	r2, [r3, #24]
 8004b78:	f042 0201 	orrpl.w	r2, r2, #1
 8004b7c:	619a      	strpl	r2, [r3, #24]
  }
}
 8004b7e:	4770      	bx	lr

08004b80 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8004b80:	b530      	push	{r4, r5, lr}
 8004b82:	9d03      	ldr	r5, [sp, #12]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b84:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004b86:	432b      	orrs	r3, r5
 8004b88:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b8c:	4a06      	ldr	r2, [pc, #24]	@ (8004ba8 <I2C_TransferConfig+0x28>)
 8004b8e:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004b90:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8004b94:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b96:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004b9a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 8004b9e:	ea20 0002 	bic.w	r0, r0, r2
 8004ba2:	4303      	orrs	r3, r0
 8004ba4:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8004ba6:	bd30      	pop	{r4, r5, pc}
 8004ba8:	03ff63ff 	.word	0x03ff63ff

08004bac <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 8004bac:	6803      	ldr	r3, [r0, #0]
{
 8004bae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 8004bb2:	699c      	ldr	r4, [r3, #24]
{
 8004bb4:	4605      	mov	r5, r0
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004bb6:	f014 0410 	ands.w	r4, r4, #16
{
 8004bba:	460f      	mov	r7, r1
 8004bbc:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004bbe:	d06f      	beq.n	8004ca0 <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 8004bc0:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004bc2:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 8004bc4:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004bc6:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8004bc8:	682b      	ldr	r3, [r5, #0]
 8004bca:	699a      	ldr	r2, [r3, #24]
 8004bcc:	0690      	lsls	r0, r2, #26
 8004bce:	d461      	bmi.n	8004c94 <I2C_IsErrorOccurred+0xe8>
 8004bd0:	f1b8 0f00 	cmp.w	r8, #0
 8004bd4:	d035      	beq.n	8004c42 <I2C_IsErrorOccurred+0x96>
    status = HAL_ERROR;
 8004bd6:	2001      	movs	r0, #1
    error_code |= HAL_I2C_ERROR_AF;
 8004bd8:	f044 0404 	orr.w	r4, r4, #4
  itflag = hi2c->Instance->ISR;
 8004bdc:	682e      	ldr	r6, [r5, #0]
 8004bde:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8004be0:	05d9      	lsls	r1, r3, #23
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004be2:	bf41      	itttt	mi
 8004be4:	f44f 7280 	movmi.w	r2, #256	@ 0x100
    status = HAL_ERROR;
 8004be8:	2001      	movmi	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004bea:	61f2      	strmi	r2, [r6, #28]
    error_code |= HAL_I2C_ERROR_BERR;
 8004bec:	f044 0401 	orrmi.w	r4, r4, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8004bf0:	055a      	lsls	r2, r3, #21
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004bf2:	bf41      	itttt	mi
 8004bf4:	f44f 6280 	movmi.w	r2, #1024	@ 0x400
    status = HAL_ERROR;
 8004bf8:	2001      	movmi	r0, #1
    error_code |= HAL_I2C_ERROR_OVR;
 8004bfa:	f044 0408 	orrmi.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004bfe:	61f2      	strmi	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8004c00:	059b      	lsls	r3, r3, #22
 8004c02:	d54f      	bpl.n	8004ca4 <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004c04:	f44f 7300 	mov.w	r3, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8004c08:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004c0c:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 8004c0e:	4628      	mov	r0, r5
 8004c10:	f7ff ffa8 	bl	8004b64 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8004c14:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 8004c16:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8004c18:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
 8004c1c:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
 8004c20:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
 8004c24:	f023 0301 	bic.w	r3, r3, #1
 8004c28:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 8004c2a:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8004c2c:	4323      	orrs	r3, r4
 8004c2e:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8004c30:	2320      	movs	r3, #32
 8004c32:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004c36:	2300      	movs	r3, #0
 8004c38:	f885 3042 	strb.w	r3, [r5, #66]	@ 0x42
    __HAL_UNLOCK(hi2c);
 8004c3c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
 8004c40:	e032      	b.n	8004ca8 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 8004c42:	1c7a      	adds	r2, r7, #1
 8004c44:	d0c1      	beq.n	8004bca <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004c46:	f7ff f84d 	bl	8003ce4 <HAL_GetTick>
 8004c4a:	1b80      	subs	r0, r0, r6
 8004c4c:	42b8      	cmp	r0, r7
 8004c4e:	d801      	bhi.n	8004c54 <I2C_IsErrorOccurred+0xa8>
 8004c50:	2f00      	cmp	r7, #0
 8004c52:	d1b9      	bne.n	8004bc8 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8004c54:	682b      	ldr	r3, [r5, #0]
 8004c56:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8004c58:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004c5c:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8004c5e:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004c60:	0400      	lsls	r0, r0, #16
 8004c62:	d50a      	bpl.n	8004c7a <I2C_IsErrorOccurred+0xce>
 8004c64:	0449      	lsls	r1, r1, #17
 8004c66:	d408      	bmi.n	8004c7a <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 8004c68:	2a20      	cmp	r2, #32
 8004c6a:	d006      	beq.n	8004c7a <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8004c6c:	685a      	ldr	r2, [r3, #4]
 8004c6e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004c72:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8004c74:	f7ff f836 	bl	8003ce4 <HAL_GetTick>
 8004c78:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004c7a:	682b      	ldr	r3, [r5, #0]
 8004c7c:	699b      	ldr	r3, [r3, #24]
 8004c7e:	069b      	lsls	r3, r3, #26
 8004c80:	d4a2      	bmi.n	8004bc8 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8004c82:	f7ff f82f 	bl	8003ce4 <HAL_GetTick>
 8004c86:	1b80      	subs	r0, r0, r6
 8004c88:	2819      	cmp	r0, #25
 8004c8a:	d9f6      	bls.n	8004c7a <I2C_IsErrorOccurred+0xce>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8004c8c:	2420      	movs	r4, #32
              status = HAL_ERROR;
 8004c8e:	f04f 0801 	mov.w	r8, #1
 8004c92:	e799      	b.n	8004bc8 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 8004c94:	f1b8 0f00 	cmp.w	r8, #0
 8004c98:	d19d      	bne.n	8004bd6 <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004c9a:	2220      	movs	r2, #32
 8004c9c:	61da      	str	r2, [r3, #28]
 8004c9e:	e79a      	b.n	8004bd6 <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 8004ca0:	4620      	mov	r0, r4
 8004ca2:	e79b      	b.n	8004bdc <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 8004ca4:	2800      	cmp	r0, #0
 8004ca6:	d1b2      	bne.n	8004c0e <I2C_IsErrorOccurred+0x62>
}
 8004ca8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004cac <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8004cac:	b570      	push	{r4, r5, r6, lr}
 8004cae:	4604      	mov	r4, r0
 8004cb0:	460d      	mov	r5, r1
 8004cb2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004cb4:	6823      	ldr	r3, [r4, #0]
 8004cb6:	699b      	ldr	r3, [r3, #24]
 8004cb8:	079b      	lsls	r3, r3, #30
 8004cba:	d501      	bpl.n	8004cc0 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8004cbc:	2000      	movs	r0, #0
 8004cbe:	e01f      	b.n	8004d00 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004cc0:	4632      	mov	r2, r6
 8004cc2:	4629      	mov	r1, r5
 8004cc4:	4620      	mov	r0, r4
 8004cc6:	f7ff ff71 	bl	8004bac <I2C_IsErrorOccurred>
 8004cca:	b9c0      	cbnz	r0, 8004cfe <I2C_WaitOnTXISFlagUntilTimeout+0x52>
    if (Timeout != HAL_MAX_DELAY)
 8004ccc:	1c6a      	adds	r2, r5, #1
 8004cce:	d0f1      	beq.n	8004cb4 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004cd0:	f7ff f808 	bl	8003ce4 <HAL_GetTick>
 8004cd4:	1b80      	subs	r0, r0, r6
 8004cd6:	42a8      	cmp	r0, r5
 8004cd8:	d801      	bhi.n	8004cde <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8004cda:	2d00      	cmp	r5, #0
 8004cdc:	d1ea      	bne.n	8004cb4 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 8004cde:	6823      	ldr	r3, [r4, #0]
 8004ce0:	699b      	ldr	r3, [r3, #24]
 8004ce2:	f013 0302 	ands.w	r3, r3, #2
 8004ce6:	d1e5      	bne.n	8004cb4 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004ce8:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          __HAL_UNLOCK(hi2c);
 8004cea:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004cee:	f042 0220 	orr.w	r2, r2, #32
 8004cf2:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004cf4:	2220      	movs	r2, #32
 8004cf6:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8004cfa:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
 8004cfe:	2001      	movs	r0, #1
}
 8004d00:	bd70      	pop	{r4, r5, r6, pc}

08004d02 <I2C_WaitOnFlagUntilTimeout>:
{
 8004d02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004d06:	4604      	mov	r4, r0
 8004d08:	460f      	mov	r7, r1
 8004d0a:	4616      	mov	r6, r2
 8004d0c:	461d      	mov	r5, r3
 8004d0e:	f8dd 8018 	ldr.w	r8, [sp, #24]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004d12:	6823      	ldr	r3, [r4, #0]
 8004d14:	699b      	ldr	r3, [r3, #24]
 8004d16:	ea37 0303 	bics.w	r3, r7, r3
 8004d1a:	bf0c      	ite	eq
 8004d1c:	2301      	moveq	r3, #1
 8004d1e:	2300      	movne	r3, #0
 8004d20:	42b3      	cmp	r3, r6
 8004d22:	d001      	beq.n	8004d28 <I2C_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
 8004d24:	2000      	movs	r0, #0
 8004d26:	e025      	b.n	8004d74 <I2C_WaitOnFlagUntilTimeout+0x72>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d28:	4642      	mov	r2, r8
 8004d2a:	4629      	mov	r1, r5
 8004d2c:	4620      	mov	r0, r4
 8004d2e:	f7ff ff3d 	bl	8004bac <I2C_IsErrorOccurred>
 8004d32:	b9f0      	cbnz	r0, 8004d72 <I2C_WaitOnFlagUntilTimeout+0x70>
    if (Timeout != HAL_MAX_DELAY)
 8004d34:	1c6b      	adds	r3, r5, #1
 8004d36:	d0ec      	beq.n	8004d12 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004d38:	f7fe ffd4 	bl	8003ce4 <HAL_GetTick>
 8004d3c:	eba0 0008 	sub.w	r0, r0, r8
 8004d40:	42a8      	cmp	r0, r5
 8004d42:	d801      	bhi.n	8004d48 <I2C_WaitOnFlagUntilTimeout+0x46>
 8004d44:	2d00      	cmp	r5, #0
 8004d46:	d1e4      	bne.n	8004d12 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004d48:	6823      	ldr	r3, [r4, #0]
 8004d4a:	699b      	ldr	r3, [r3, #24]
 8004d4c:	ea37 0303 	bics.w	r3, r7, r3
 8004d50:	bf0c      	ite	eq
 8004d52:	2301      	moveq	r3, #1
 8004d54:	2300      	movne	r3, #0
 8004d56:	42b3      	cmp	r3, r6
 8004d58:	d1db      	bne.n	8004d12 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004d5a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8004d5c:	f043 0320 	orr.w	r3, r3, #32
 8004d60:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004d62:	2320      	movs	r3, #32
 8004d64:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8004d68:	2300      	movs	r3, #0
 8004d6a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
 8004d6e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004d72:	2001      	movs	r0, #1
}
 8004d74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004d78 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8004d78:	b570      	push	{r4, r5, r6, lr}
 8004d7a:	4604      	mov	r4, r0
 8004d7c:	460d      	mov	r5, r1
 8004d7e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004d80:	6823      	ldr	r3, [r4, #0]
 8004d82:	699b      	ldr	r3, [r3, #24]
 8004d84:	069b      	lsls	r3, r3, #26
 8004d86:	d501      	bpl.n	8004d8c <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 8004d88:	2000      	movs	r0, #0
 8004d8a:	e01d      	b.n	8004dc8 <I2C_WaitOnSTOPFlagUntilTimeout+0x50>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d8c:	4632      	mov	r2, r6
 8004d8e:	4629      	mov	r1, r5
 8004d90:	4620      	mov	r0, r4
 8004d92:	f7ff ff0b 	bl	8004bac <I2C_IsErrorOccurred>
 8004d96:	b9b0      	cbnz	r0, 8004dc6 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004d98:	f7fe ffa4 	bl	8003ce4 <HAL_GetTick>
 8004d9c:	1b80      	subs	r0, r0, r6
 8004d9e:	42a8      	cmp	r0, r5
 8004da0:	d801      	bhi.n	8004da6 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8004da2:	2d00      	cmp	r5, #0
 8004da4:	d1ec      	bne.n	8004d80 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 8004da6:	6823      	ldr	r3, [r4, #0]
 8004da8:	699b      	ldr	r3, [r3, #24]
 8004daa:	f013 0320 	ands.w	r3, r3, #32
 8004dae:	d1e7      	bne.n	8004d80 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004db0:	6c62      	ldr	r2, [r4, #68]	@ 0x44
        __HAL_UNLOCK(hi2c);
 8004db2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004db6:	f042 0220 	orr.w	r2, r2, #32
 8004dba:	6462      	str	r2, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8004dbc:	2220      	movs	r2, #32
 8004dbe:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8004dc2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      return HAL_ERROR;
 8004dc6:	2001      	movs	r0, #1
}
 8004dc8:	bd70      	pop	{r4, r5, r6, pc}

08004dca <HAL_I2C_Init>:
{
 8004dca:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004dcc:	4604      	mov	r4, r0
 8004dce:	2800      	cmp	r0, #0
 8004dd0:	d04e      	beq.n	8004e70 <HAL_I2C_Init+0xa6>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004dd2:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8004dd6:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004dda:	b91b      	cbnz	r3, 8004de4 <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8004ddc:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
 8004de0:	f7fb fe36 	bl	8000a50 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004de4:	2324      	movs	r3, #36	@ 0x24
 8004de6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
 8004dea:	6823      	ldr	r3, [r4, #0]
 8004dec:	681a      	ldr	r2, [r3, #0]
 8004dee:	f022 0201 	bic.w	r2, r2, #1
 8004df2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8004df4:	6862      	ldr	r2, [r4, #4]
 8004df6:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8004dfa:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8004dfc:	689a      	ldr	r2, [r3, #8]
 8004dfe:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004e02:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8004e04:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004e08:	2901      	cmp	r1, #1
 8004e0a:	d106      	bne.n	8004e1a <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8004e0c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004e10:	609a      	str	r2, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8004e12:	685a      	ldr	r2, [r3, #4]
 8004e14:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004e18:	e007      	b.n	8004e2a <HAL_I2C_Init+0x60>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004e1a:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004e1e:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8004e20:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004e22:	d1f6      	bne.n	8004e12 <HAL_I2C_Init+0x48>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8004e24:	685a      	ldr	r2, [r3, #4]
 8004e26:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8004e2a:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8004e2c:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e2e:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8004e30:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 8004e34:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004e38:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8004e3a:	68da      	ldr	r2, [r3, #12]
 8004e3c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004e40:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8004e42:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8004e46:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8004e48:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8004e4a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004e4e:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8004e50:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8004e54:	430a      	orrs	r2, r1
 8004e56:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8004e58:	681a      	ldr	r2, [r3, #0]
 8004e5a:	f042 0201 	orr.w	r2, r2, #1
 8004e5e:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8004e60:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e62:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8004e64:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8004e68:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004e6a:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
}
 8004e6e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004e70:	2001      	movs	r0, #1
 8004e72:	e7fc      	b.n	8004e6e <HAL_I2C_Init+0xa4>

08004e74 <HAL_I2C_Mem_Write>:
{
 8004e74:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e78:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e7a:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8004e7e:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e80:	2b20      	cmp	r3, #32
{
 8004e82:	460f      	mov	r7, r1
 8004e84:	4616      	mov	r6, r2
 8004e86:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 8004e8a:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e8e:	f040 80c6 	bne.w	800501e <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 8004e92:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004e94:	b113      	cbz	r3, 8004e9c <HAL_I2C_Mem_Write+0x28>
 8004e96:	f1ba 0f00 	cmp.w	sl, #0
 8004e9a:	d106      	bne.n	8004eaa <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8004e9c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004ea0:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8004ea2:	2001      	movs	r0, #1
}
 8004ea4:	b003      	add	sp, #12
 8004ea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8004eaa:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8004eae:	2b01      	cmp	r3, #1
 8004eb0:	f000 80b5 	beq.w	800501e <HAL_I2C_Mem_Write+0x1aa>
 8004eb4:	f04f 0b01 	mov.w	fp, #1
 8004eb8:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8004ebc:	f7fe ff12 	bl	8003ce4 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004ec0:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 8004ec2:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004ec4:	9000      	str	r0, [sp, #0]
 8004ec6:	465a      	mov	r2, fp
 8004ec8:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8004ecc:	4620      	mov	r0, r4
 8004ece:	f7ff ff18 	bl	8004d02 <I2C_WaitOnFlagUntilTimeout>
 8004ed2:	2800      	cmp	r0, #0
 8004ed4:	d1e5      	bne.n	8004ea2 <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004ed6:	2321      	movs	r3, #33	@ 0x21
 8004ed8:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004edc:	2340      	movs	r3, #64	@ 0x40
 8004ede:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8004ee2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004ee4:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 8004ee6:	6263      	str	r3, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004ee8:	4b4e      	ldr	r3, [pc, #312]	@ (8005024 <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferISR   = NULL;
 8004eea:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004eec:	4639      	mov	r1, r7
 8004eee:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
 8004ef0:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004ef4:	fa5f f289 	uxtb.w	r2, r9
 8004ef8:	9300      	str	r3, [sp, #0]
 8004efa:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8004efe:	f7ff fe3f 	bl	8004b80 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004f02:	462a      	mov	r2, r5
 8004f04:	4641      	mov	r1, r8
 8004f06:	4620      	mov	r0, r4
 8004f08:	f7ff fed0 	bl	8004cac <I2C_WaitOnTXISFlagUntilTimeout>
 8004f0c:	bb18      	cbnz	r0, 8004f56 <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004f0e:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004f12:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004f14:	d115      	bne.n	8004f42 <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004f16:	b2f6      	uxtb	r6, r6
 8004f18:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8004f1a:	2200      	movs	r2, #0
 8004f1c:	4643      	mov	r3, r8
 8004f1e:	2180      	movs	r1, #128	@ 0x80
 8004f20:	4620      	mov	r0, r4
 8004f22:	9500      	str	r5, [sp, #0]
 8004f24:	f7ff feed 	bl	8004d02 <I2C_WaitOnFlagUntilTimeout>
 8004f28:	b9a8      	cbnz	r0, 8004f56 <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004f2a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004f2c:	b29b      	uxth	r3, r3
 8004f2e:	2bff      	cmp	r3, #255	@ 0xff
 8004f30:	d815      	bhi.n	8004f5e <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8004f32:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004f34:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 8004f38:	b292      	uxth	r2, r2
 8004f3a:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004f3c:	9000      	str	r0, [sp, #0]
 8004f3e:	b2d2      	uxtb	r2, r2
 8004f40:	e012      	b.n	8004f68 <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004f42:	0a32      	lsrs	r2, r6, #8
 8004f44:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004f46:	4641      	mov	r1, r8
 8004f48:	462a      	mov	r2, r5
 8004f4a:	4620      	mov	r0, r4
 8004f4c:	f7ff feae 	bl	8004cac <I2C_WaitOnTXISFlagUntilTimeout>
 8004f50:	b908      	cbnz	r0, 8004f56 <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004f52:	6823      	ldr	r3, [r4, #0]
 8004f54:	e7df      	b.n	8004f16 <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 8004f56:	2300      	movs	r3, #0
 8004f58:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004f5c:	e7a1      	b.n	8004ea2 <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004f5e:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8004f60:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004f64:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8004f66:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8004f68:	4639      	mov	r1, r7
 8004f6a:	4620      	mov	r0, r4
 8004f6c:	f7ff fe08 	bl	8004b80 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f70:	462a      	mov	r2, r5
 8004f72:	4641      	mov	r1, r8
 8004f74:	4620      	mov	r0, r4
 8004f76:	f7ff fe99 	bl	8004cac <I2C_WaitOnTXISFlagUntilTimeout>
 8004f7a:	2800      	cmp	r0, #0
 8004f7c:	d191      	bne.n	8004ea2 <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8004f7e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004f80:	6822      	ldr	r2, [r4, #0]
 8004f82:	f813 1b01 	ldrb.w	r1, [r3], #1
 8004f86:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8004f88:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8004f8a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004f8c:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8004f8e:	3b01      	subs	r3, #1
 8004f90:	b29b      	uxth	r3, r3
 8004f92:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004f94:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004f96:	3a01      	subs	r2, #1
 8004f98:	b292      	uxth	r2, r2
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004f9a:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8004f9c:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004f9e:	b1b3      	cbz	r3, 8004fce <HAL_I2C_Mem_Write+0x15a>
 8004fa0:	b9aa      	cbnz	r2, 8004fce <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8004fa2:	4643      	mov	r3, r8
 8004fa4:	2180      	movs	r1, #128	@ 0x80
 8004fa6:	4620      	mov	r0, r4
 8004fa8:	9500      	str	r5, [sp, #0]
 8004faa:	f7ff feaa 	bl	8004d02 <I2C_WaitOnFlagUntilTimeout>
 8004fae:	2800      	cmp	r0, #0
 8004fb0:	f47f af77 	bne.w	8004ea2 <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004fb4:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004fb6:	b29b      	uxth	r3, r3
 8004fb8:	2bff      	cmp	r3, #255	@ 0xff
 8004fba:	d928      	bls.n	800500e <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004fbc:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004fbe:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004fc2:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004fc4:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004fc6:	4639      	mov	r1, r7
 8004fc8:	4620      	mov	r0, r4
 8004fca:	f7ff fdd9 	bl	8004b80 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8004fce:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004fd0:	b29b      	uxth	r3, r3
 8004fd2:	2b00      	cmp	r3, #0
 8004fd4:	d1cc      	bne.n	8004f70 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004fd6:	462a      	mov	r2, r5
 8004fd8:	4641      	mov	r1, r8
 8004fda:	4620      	mov	r0, r4
 8004fdc:	f7ff fecc 	bl	8004d78 <I2C_WaitOnSTOPFlagUntilTimeout>
 8004fe0:	2800      	cmp	r0, #0
 8004fe2:	f47f af5e 	bne.w	8004ea2 <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004fe6:	2120      	movs	r1, #32
 8004fe8:	6823      	ldr	r3, [r4, #0]
 8004fea:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8004fec:	685a      	ldr	r2, [r3, #4]
 8004fee:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 8004ff2:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 8004ff6:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 8004ffa:	f022 0201 	bic.w	r2, r2, #1
 8004ffe:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005000:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005004:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005008:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 800500c:	e74a      	b.n	8004ea4 <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 800500e:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005010:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 8005014:	b292      	uxth	r2, r2
 8005016:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005018:	9000      	str	r0, [sp, #0]
 800501a:	b2d2      	uxtb	r2, r2
 800501c:	e7d3      	b.n	8004fc6 <HAL_I2C_Mem_Write+0x152>
    __HAL_LOCK(hi2c);
 800501e:	2002      	movs	r0, #2
 8005020:	e740      	b.n	8004ea4 <HAL_I2C_Mem_Write+0x30>
 8005022:	bf00      	nop
 8005024:	80002000 	.word	0x80002000

08005028 <HAL_I2C_Mem_Read>:
{
 8005028:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800502c:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 800502e:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
 8005032:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005034:	2b20      	cmp	r3, #32
{
 8005036:	460f      	mov	r7, r1
 8005038:	4616      	mov	r6, r2
 800503a:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
 800503e:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005042:	f040 80c9 	bne.w	80051d8 <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 8005046:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005048:	b113      	cbz	r3, 8005050 <HAL_I2C_Mem_Read+0x28>
 800504a:	f1ba 0f00 	cmp.w	sl, #0
 800504e:	d106      	bne.n	800505e <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005050:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8005054:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 8005056:	2001      	movs	r0, #1
}
 8005058:	b003      	add	sp, #12
 800505a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 800505e:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
 8005062:	2b01      	cmp	r3, #1
 8005064:	f000 80b8 	beq.w	80051d8 <HAL_I2C_Mem_Read+0x1b0>
 8005068:	f04f 0b01 	mov.w	fp, #1
 800506c:	f880 b040 	strb.w	fp, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
 8005070:	f7fe fe38 	bl	8003ce4 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005074:	2319      	movs	r3, #25
 8005076:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8005078:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800507a:	465a      	mov	r2, fp
 800507c:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005080:	4620      	mov	r0, r4
 8005082:	f7ff fe3e 	bl	8004d02 <I2C_WaitOnFlagUntilTimeout>
 8005086:	4603      	mov	r3, r0
 8005088:	2800      	cmp	r0, #0
 800508a:	d1e4      	bne.n	8005056 <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800508c:	2222      	movs	r2, #34	@ 0x22
 800508e:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005092:	2240      	movs	r2, #64	@ 0x40
 8005094:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
    hi2c->pBuffPtr  = pData;
 8005098:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800509a:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 800509c:	6262      	str	r2, [r4, #36]	@ 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800509e:	4a4f      	ldr	r2, [pc, #316]	@ (80051dc <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferISR   = NULL;
 80050a0:	6360      	str	r0, [r4, #52]	@ 0x34
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80050a2:	4639      	mov	r1, r7
 80050a4:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
 80050a6:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80050aa:	9200      	str	r2, [sp, #0]
 80050ac:	fa5f f289 	uxtb.w	r2, r9
 80050b0:	f7ff fd66 	bl	8004b80 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80050b4:	462a      	mov	r2, r5
 80050b6:	4641      	mov	r1, r8
 80050b8:	4620      	mov	r0, r4
 80050ba:	f7ff fdf7 	bl	8004cac <I2C_WaitOnTXISFlagUntilTimeout>
 80050be:	bb20      	cbnz	r0, 800510a <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80050c0:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80050c4:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80050c6:	d116      	bne.n	80050f6 <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80050c8:	b2f6      	uxtb	r6, r6
 80050ca:	629e      	str	r6, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 80050cc:	2200      	movs	r2, #0
 80050ce:	4643      	mov	r3, r8
 80050d0:	2140      	movs	r1, #64	@ 0x40
 80050d2:	4620      	mov	r0, r4
 80050d4:	9500      	str	r5, [sp, #0]
 80050d6:	f7ff fe14 	bl	8004d02 <I2C_WaitOnFlagUntilTimeout>
 80050da:	b9b0      	cbnz	r0, 800510a <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80050dc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80050de:	b29b      	uxth	r3, r3
 80050e0:	2bff      	cmp	r3, #255	@ 0xff
 80050e2:	4b3f      	ldr	r3, [pc, #252]	@ (80051e0 <HAL_I2C_Mem_Read+0x1b8>)
 80050e4:	d815      	bhi.n	8005112 <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 80050e6:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 80050e8:	b292      	uxth	r2, r2
 80050ea:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80050ec:	9300      	str	r3, [sp, #0]
 80050ee:	b2d2      	uxtb	r2, r2
 80050f0:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80050f4:	e012      	b.n	800511c <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80050f6:	0a32      	lsrs	r2, r6, #8
 80050f8:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80050fa:	4641      	mov	r1, r8
 80050fc:	462a      	mov	r2, r5
 80050fe:	4620      	mov	r0, r4
 8005100:	f7ff fdd4 	bl	8004cac <I2C_WaitOnTXISFlagUntilTimeout>
 8005104:	b908      	cbnz	r0, 800510a <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005106:	6823      	ldr	r3, [r4, #0]
 8005108:	e7de      	b.n	80050c8 <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 800510a:	2300      	movs	r3, #0
 800510c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005110:	e7a1      	b.n	8005056 <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005112:	22ff      	movs	r2, #255	@ 0xff
 8005114:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005116:	9300      	str	r3, [sp, #0]
 8005118:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800511c:	4639      	mov	r1, r7
 800511e:	4620      	mov	r0, r4
 8005120:	f7ff fd2e 	bl	8004b80 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8005124:	4643      	mov	r3, r8
 8005126:	2200      	movs	r2, #0
 8005128:	2104      	movs	r1, #4
 800512a:	4620      	mov	r0, r4
 800512c:	9500      	str	r5, [sp, #0]
 800512e:	f7ff fde8 	bl	8004d02 <I2C_WaitOnFlagUntilTimeout>
 8005132:	2800      	cmp	r0, #0
 8005134:	d18f      	bne.n	8005056 <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8005136:	6823      	ldr	r3, [r4, #0]
 8005138:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800513a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800513c:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 800513e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 8005140:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8005142:	3301      	adds	r3, #1
 8005144:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8005146:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005148:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 800514a:	3b01      	subs	r3, #1
 800514c:	b29b      	uxth	r3, r3
 800514e:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005150:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005152:	b292      	uxth	r2, r2
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005154:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8005156:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005158:	b1b3      	cbz	r3, 8005188 <HAL_I2C_Mem_Read+0x160>
 800515a:	b9aa      	cbnz	r2, 8005188 <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 800515c:	4643      	mov	r3, r8
 800515e:	2180      	movs	r1, #128	@ 0x80
 8005160:	4620      	mov	r0, r4
 8005162:	9500      	str	r5, [sp, #0]
 8005164:	f7ff fdcd 	bl	8004d02 <I2C_WaitOnFlagUntilTimeout>
 8005168:	2800      	cmp	r0, #0
 800516a:	f47f af74 	bne.w	8005056 <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800516e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005170:	b29b      	uxth	r3, r3
 8005172:	2bff      	cmp	r3, #255	@ 0xff
 8005174:	d928      	bls.n	80051c8 <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005176:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005178:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800517c:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 800517e:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005180:	4639      	mov	r1, r7
 8005182:	4620      	mov	r0, r4
 8005184:	f7ff fcfc 	bl	8004b80 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005188:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800518a:	b29b      	uxth	r3, r3
 800518c:	2b00      	cmp	r3, #0
 800518e:	d1c9      	bne.n	8005124 <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005190:	462a      	mov	r2, r5
 8005192:	4641      	mov	r1, r8
 8005194:	4620      	mov	r0, r4
 8005196:	f7ff fdef 	bl	8004d78 <I2C_WaitOnSTOPFlagUntilTimeout>
 800519a:	2800      	cmp	r0, #0
 800519c:	f47f af5b 	bne.w	8005056 <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80051a0:	2120      	movs	r1, #32
 80051a2:	6823      	ldr	r3, [r4, #0]
 80051a4:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80051a6:	685a      	ldr	r2, [r3, #4]
 80051a8:	f022 72ff 	bic.w	r2, r2, #33423360	@ 0x1fe0000
 80051ac:	f422 328b 	bic.w	r2, r2, #71168	@ 0x11600
 80051b0:	f422 72ff 	bic.w	r2, r2, #510	@ 0x1fe
 80051b4:	f022 0201 	bic.w	r2, r2, #1
 80051b8:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80051ba:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 80051be:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80051c2:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
 80051c6:	e747      	b.n	8005058 <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 80051c8:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80051ca:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
          hi2c->XferSize = hi2c->XferCount;
 80051ce:	b292      	uxth	r2, r2
 80051d0:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80051d2:	9000      	str	r0, [sp, #0]
 80051d4:	b2d2      	uxtb	r2, r2
 80051d6:	e7d3      	b.n	8005180 <HAL_I2C_Mem_Read+0x158>
    __HAL_LOCK(hi2c);
 80051d8:	2002      	movs	r0, #2
 80051da:	e73d      	b.n	8005058 <HAL_I2C_Mem_Read+0x30>
 80051dc:	80002000 	.word	0x80002000
 80051e0:	80002400 	.word	0x80002400

080051e4 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80051e4:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80051e6:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 80051ea:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80051ec:	2a20      	cmp	r2, #32
 80051ee:	b2d4      	uxtb	r4, r2
 80051f0:	d11c      	bne.n	800522c <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80051f2:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 80051f6:	2a01      	cmp	r2, #1
 80051f8:	d018      	beq.n	800522c <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80051fa:	2224      	movs	r2, #36	@ 0x24
 80051fc:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005200:	6802      	ldr	r2, [r0, #0]
 8005202:	6810      	ldr	r0, [r2, #0]
 8005204:	f020 0001 	bic.w	r0, r0, #1
 8005208:	6010      	str	r0, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 800520a:	6810      	ldr	r0, [r2, #0]
 800520c:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
 8005210:	6010      	str	r0, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8005212:	6810      	ldr	r0, [r2, #0]
 8005214:	4301      	orrs	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005216:	2000      	movs	r0, #0
    hi2c->Instance->CR1 |= AnalogFilter;
 8005218:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 800521a:	6811      	ldr	r1, [r2, #0]
 800521c:	f041 0101 	orr.w	r1, r1, #1
 8005220:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005222:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005226:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 800522a:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 800522c:	2002      	movs	r0, #2
 800522e:	e7fc      	b.n	800522a <HAL_I2CEx_ConfigAnalogFilter+0x46>

08005230 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005230:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005232:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
{
 8005236:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005238:	2a20      	cmp	r2, #32
 800523a:	b2d4      	uxtb	r4, r2
 800523c:	d11b      	bne.n	8005276 <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 800523e:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
 8005242:	2a01      	cmp	r2, #1
 8005244:	d017      	beq.n	8005276 <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005246:	2224      	movs	r2, #36	@ 0x24
 8005248:	f880 2041 	strb.w	r2, [r0, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800524c:	6802      	ldr	r2, [r0, #0]
 800524e:	6810      	ldr	r0, [r2, #0]
 8005250:	f020 0001 	bic.w	r0, r0, #1
 8005254:	6010      	str	r0, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8005256:	6810      	ldr	r0, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8005258:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 800525c:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005260:	2000      	movs	r0, #0
    hi2c->Instance->CR1 = tmpreg;
 8005262:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
 8005264:	6811      	ldr	r1, [r2, #0]
 8005266:	f041 0101 	orr.w	r1, r1, #1
 800526a:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800526c:	f883 4041 	strb.w	r4, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
 8005270:	f883 0040 	strb.w	r0, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005274:	bd10      	pop	{r4, pc}
    __HAL_LOCK(hi2c);
 8005276:	2002      	movs	r0, #2
 8005278:	e7fc      	b.n	8005274 <HAL_I2CEx_ConfigDigitalFilter+0x44>
	...

0800527c <HAL_ICACHE_ConfigAssociativityMode>:
  *            @arg ICACHE_1WAY   1-way cache (direct mapped cache)
  *            @arg ICACHE_2WAYS  2-ways set associative cache (default)
  * @retval HAL status (HAL_OK/HAL_ERROR)
  */
HAL_StatusTypeDef HAL_ICACHE_ConfigAssociativityMode(uint32_t AssociativityMode)
{
 800527c:	4601      	mov	r1, r0

  /* Check the parameters */
  assert_param(IS_ICACHE_ASSOCIATIVITY_MODE(AssociativityMode));

  /* Check cache is not enabled */
  if (READ_BIT(ICACHE->CR, ICACHE_CR_EN) != 0U)
 800527e:	4a06      	ldr	r2, [pc, #24]	@ (8005298 <HAL_ICACHE_ConfigAssociativityMode+0x1c>)
 8005280:	6810      	ldr	r0, [r2, #0]
 8005282:	f010 0001 	ands.w	r0, r0, #1
  {
    status = HAL_ERROR;
  }
  else
  {
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 8005286:	bf09      	itett	eq
 8005288:	6813      	ldreq	r3, [r2, #0]
    status = HAL_ERROR;
 800528a:	2001      	movne	r0, #1
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 800528c:	f023 0304 	biceq.w	r3, r3, #4
 8005290:	430b      	orreq	r3, r1
 8005292:	bf08      	it	eq
 8005294:	6013      	streq	r3, [r2, #0]
  }

  return status;
}
 8005296:	4770      	bx	lr
 8005298:	40030400 	.word	0x40030400

0800529c <HAL_ICACHE_Enable>:
  *         cache operation completes.
  * @retval HAL status (HAL_OK)
  */
HAL_StatusTypeDef HAL_ICACHE_Enable(void)
{
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 800529c:	4a03      	ldr	r2, [pc, #12]	@ (80052ac <HAL_ICACHE_Enable+0x10>)

  return HAL_OK;
}
 800529e:	2000      	movs	r0, #0
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 80052a0:	6813      	ldr	r3, [r2, #0]
 80052a2:	f043 0301 	orr.w	r3, r3, #1
 80052a6:	6013      	str	r3, [r2, #0]
}
 80052a8:	4770      	bx	lr
 80052aa:	bf00      	nop
 80052ac:	40030400 	.word	0x40030400

080052b0 <JPEG_Bits_To_SizeCodes>:
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(const uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode,
                                                uint32_t *LastK)
{
 80052b0:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Figure C.1: Generation of table of Huffman code sizes */
  j = 0;
  for (k = 0; k < 16UL; k++)
  {
    i = (uint32_t)Bits[k];
 80052b2:	2401      	movs	r4, #1
  j = 0;
 80052b4:	2500      	movs	r5, #0
    i = (uint32_t)Bits[k];
 80052b6:	7807      	ldrb	r7, [r0, #0]
    if ((j + i) > 256UL)
 80052b8:	194e      	adds	r6, r1, r5
 80052ba:	443d      	add	r5, r7
 80052bc:	194f      	adds	r7, r1, r5
    {
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
 80052be:	42be      	cmp	r6, r7
 80052c0:	d112      	bne.n	80052e8 <JPEG_Bits_To_SizeCodes+0x38>
  for (k = 0; k < 16UL; k++)
 80052c2:	2c10      	cmp	r4, #16
 80052c4:	d108      	bne.n	80052d8 <JPEG_Bits_To_SizeCodes+0x28>
      Huffsize[j] = (uint8_t) k + 1U;
      j++;
      i--;
    }
  }
  Huffsize[j] = 0;
 80052c6:	2400      	movs	r4, #0
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if (si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
 80052c8:	2601      	movs	r6, #1
  Huffsize[j] = 0;
 80052ca:	554c      	strb	r4, [r1, r5]
  *LastK = j;
 80052cc:	601d      	str	r5, [r3, #0]
  j = 0;
 80052ce:	4623      	mov	r3, r4
  si = Huffsize[0];
 80052d0:	780d      	ldrb	r5, [r1, #0]
  while (Huffsize[j] != 0U)
 80052d2:	5cc8      	ldrb	r0, [r1, r3]
 80052d4:	b9d8      	cbnz	r0, 800530e <JPEG_Bits_To_SizeCodes+0x5e>
    code <<= 1;
    si++;
  }
  /* Return function status */
  return HAL_OK;
}
 80052d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    i = (uint32_t)Bits[k];
 80052d8:	5d07      	ldrb	r7, [r0, r4]
    if ((j + i) > 256UL)
 80052da:	3401      	adds	r4, #1
 80052dc:	19ee      	adds	r6, r5, r7
 80052de:	f5b6 7f80 	cmp.w	r6, #256	@ 0x100
 80052e2:	d9e9      	bls.n	80052b8 <JPEG_Bits_To_SizeCodes+0x8>
      return HAL_ERROR;
 80052e4:	2001      	movs	r0, #1
 80052e6:	e7f6      	b.n	80052d6 <JPEG_Bits_To_SizeCodes+0x26>
      Huffsize[j] = (uint8_t) k + 1U;
 80052e8:	f806 4b01 	strb.w	r4, [r6], #1
      i--;
 80052ec:	e7e7      	b.n	80052be <JPEG_Bits_To_SizeCodes+0xe>
      Huffcode[j] = code;
 80052ee:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
      j++;
 80052f2:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[j]) == si)
 80052f4:	5cc8      	ldrb	r0, [r1, r3]
 80052f6:	19dc      	adds	r4, r3, r7
 80052f8:	42a8      	cmp	r0, r5
 80052fa:	d0f8      	beq.n	80052ee <JPEG_Bits_To_SizeCodes+0x3e>
    if (si > 31UL)
 80052fc:	2d1f      	cmp	r5, #31
 80052fe:	d8f1      	bhi.n	80052e4 <JPEG_Bits_To_SizeCodes+0x34>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
 8005300:	fa06 f005 	lsl.w	r0, r6, r5
 8005304:	42a0      	cmp	r0, r4
 8005306:	d9ed      	bls.n	80052e4 <JPEG_Bits_To_SizeCodes+0x34>
    code <<= 1;
 8005308:	0064      	lsls	r4, r4, #1
    si++;
 800530a:	3501      	adds	r5, #1
 800530c:	e7e1      	b.n	80052d2 <JPEG_Bits_To_SizeCodes+0x22>
 800530e:	1ae7      	subs	r7, r4, r3
 8005310:	e7f0      	b.n	80052f4 <JPEG_Bits_To_SizeCodes+0x44>

08005312 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
 8005312:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005314:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
 8005318:	460d      	mov	r5, r1
  uint32_t k;
  uint32_t i;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 800531a:	ab01      	add	r3, sp, #4
 800531c:	aa43      	add	r2, sp, #268	@ 0x10c
 800531e:	a902      	add	r1, sp, #8
{
 8005320:	4604      	mov	r4, r0
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 8005322:	f7ff ffc5 	bl	80052b0 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
 8005326:	b938      	cbnz	r0, 8005338 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x26>
 8005328:	9e01      	ldr	r6, [sp, #4]
 800532a:	460b      	mov	r3, r1
 800532c:	360f      	adds	r6, #15
 800532e:	f104 010f 	add.w	r1, r4, #15
 8005332:	4434      	add	r4, r6
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
 8005334:	42a1      	cmp	r1, r4
 8005336:	d102      	bne.n	800533e <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2c>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 8005338:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
 800533c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    i = DC_BitsValsTable->HuffVal[k];
 800533e:	f811 6f01 	ldrb.w	r6, [r1, #1]!
    if (i >= JPEG_DC_HUFF_TABLE_SIZE)
 8005342:	2e0b      	cmp	r6, #11
 8005344:	d80a      	bhi.n	800535c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4a>
      DC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 8005346:	f852 cb04 	ldr.w	ip, [r2], #4
 800534a:	eb05 0786 	add.w	r7, r5, r6, lsl #2
 800534e:	f8c7 c00c 	str.w	ip, [r7, #12]
      DC_SizeCodesTable->CodeLength[i] = huffsize[k] - 1U;
 8005352:	f813 7b01 	ldrb.w	r7, [r3], #1
 8005356:	3f01      	subs	r7, #1
 8005358:	55af      	strb	r7, [r5, r6]
      k++;
 800535a:	e7eb      	b.n	8005334 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x22>
      return HAL_ERROR; /* Huffman Table overflow error*/
 800535c:	2001      	movs	r0, #1
 800535e:	e7eb      	b.n	8005338 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x26>

08005360 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(const JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
 8005360:	4603      	mov	r3, r0
 8005362:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address;
  __IO uint32_t *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 8005364:	681c      	ldr	r4, [r3, #0]
{
 8005366:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 8005368:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
 800536c:	429a      	cmp	r2, r3
{
 800536e:	b091      	sub	sp, #68	@ 0x44
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
 8005370:	d127      	bne.n	80053c2 <JPEG_Set_HuffDC_Mem+0x62>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
 8005372:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
    return HAL_ERROR;
  }

  if (HuffTableDC != NULL)
  {
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
 8005376:	a901      	add	r1, sp, #4
 8005378:	f7ff ffcb 	bl	8005312 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
 800537c:	b9f8      	cbnz	r0, 80053be <JPEG_Set_HuffDC_Mem+0x5e>
    {
      return  error;
    }
    addressDef = address;
    *addressDef = 0x0FFF0FFF;
 800537e:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
 8005382:	aa01      	add	r2, sp, #4
    addressDef++;
    *addressDef = 0x0FFF0FFF;
 8005384:	4615      	mov	r5, r2
    *addressDef = 0x0FFF0FFF;
 8005386:	6023      	str	r3, [r4, #0]
    *addressDef = 0x0FFF0FFF;
 8005388:	f1a4 0618 	sub.w	r6, r4, #24
 800538c:	6063      	str	r3, [r4, #4]
    i = JPEG_DC_HUFF_TABLE_SIZE;
    while (i > 1UL)
    {
      i--;
      address --;
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800538e:	7ad1      	ldrb	r1, [r2, #11]
            ((uint32_t)dcSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 8005390:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005394:	0209      	lsls	r1, r1, #8
 8005396:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
 800539a:	4319      	orrs	r1, r3
      i--;
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800539c:	7a93      	ldrb	r3, [r2, #10]
            ((uint32_t)dcSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 800539e:	f895 7034 	ldrb.w	r7, [r5, #52]	@ 0x34
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 80053a2:	021b      	lsls	r3, r3, #8
 80053a4:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 80053a8:	433b      	orrs	r3, r7

      *address = lsb | (msb << 16);
 80053aa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80053ae:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
 80053b2:	42b4      	cmp	r4, r6
 80053b4:	f1a2 0202 	sub.w	r2, r2, #2
 80053b8:	f1a5 0508 	sub.w	r5, r5, #8
 80053bc:	d1e7      	bne.n	800538e <JPEG_Set_HuffDC_Mem+0x2e>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 80053be:	b011      	add	sp, #68	@ 0x44
 80053c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
 80053c2:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
 80053c6:	429a      	cmp	r2, r3
 80053c8:	d102      	bne.n	80053d0 <JPEG_Set_HuffDC_Mem+0x70>
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
 80053ca:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
  if (HuffTableDC != NULL)
 80053ce:	e7d2      	b.n	8005376 <JPEG_Set_HuffDC_Mem+0x16>
    return HAL_ERROR;
 80053d0:	2001      	movs	r0, #1
 80053d2:	e7f4      	b.n	80053be <JPEG_Set_HuffDC_Mem+0x5e>

080053d4 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(const JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
 80053d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address;
  __IO uint32_t *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 80053d8:	6804      	ldr	r4, [r0, #0]
{
 80053da:	460e      	mov	r6, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 80053dc:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
 80053e0:	429a      	cmp	r2, r3
{
 80053e2:	f6ad 0d38 	subw	sp, sp, #2104	@ 0x838
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
 80053e6:	d14b      	bne.n	8005480 <JPEG_Set_HuffAC_Mem+0xac>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
 80053e8:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 80053ec:	466b      	mov	r3, sp
 80053ee:	4630      	mov	r0, r6
 80053f0:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
 80053f4:	a901      	add	r1, sp, #4
 80053f6:	f7ff ff5b 	bl	80052b0 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
 80053fa:	2800      	cmp	r0, #0
 80053fc:	d13c      	bne.n	8005478 <JPEG_Set_HuffAC_Mem+0xa4>
 80053fe:	4617      	mov	r7, r2
      i = (msb * 10UL) + lsb - 1UL;
 8005400:	f04f 0e0a 	mov.w	lr, #10
 8005404:	9b00      	ldr	r3, [sp, #0]
 8005406:	460d      	mov	r5, r1
 8005408:	330f      	adds	r3, #15
 800540a:	f106 0c0f 	add.w	ip, r6, #15
 800540e:	18f1      	adds	r1, r6, r3
      AC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 8005410:	ae42      	add	r6, sp, #264	@ 0x108
  while (k < lastK)
 8005412:	4561      	cmp	r1, ip
 8005414:	d13b      	bne.n	800548e <JPEG_Set_HuffAC_Mem+0xba>
    /* Locations 162:175 of each AC table contain information used internally by the core */

    addressDef = address;
    for (i = 0; i < 3UL; i++)
    {
      *addressDef = 0x0FFF0FFF;
 8005416:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
 800541a:	a942      	add	r1, sp, #264	@ 0x108
    addressDef++;
    *addressDef = 0x0FD30FD2;
    addressDef++;
    *addressDef = 0x0FD50FD4;
    addressDef++;
    *addressDef = 0x0FD70FD6;
 800541c:	460d      	mov	r5, r1
      *addressDef = 0x0FFF0FFF;
 800541e:	6023      	str	r3, [r4, #0]
 8005420:	6063      	str	r3, [r4, #4]
 8005422:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD10FD0;
 8005424:	f103 33d1 	add.w	r3, r3, #3520188881	@ 0xd1d1d1d1
 8005428:	f103 232e 	add.w	r3, r3, #771763712	@ 0x2e002e00
 800542c:	60e3      	str	r3, [r4, #12]
    *addressDef = 0x0FD30FD2;
 800542e:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 8005432:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
 8005434:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 8005438:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
 800543a:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
 800543e:	61a3      	str	r3, [r4, #24]
    /* end of Locations 162:175  */


    i = JPEG_AC_HUFF_TABLE_SIZE;
    while (i > 1UL)
 8005440:	f5a4 76a2 	sub.w	r6, r4, #324	@ 0x144
    {
      i--;
      address--;
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005444:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
            ((uint32_t)acSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 8005448:	f895 3328 	ldrb.w	r3, [r5, #808]	@ 0x328
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800544c:	0212      	lsls	r2, r2, #8
 800544e:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
 8005452:	431a      	orrs	r2, r3
      i--;
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 8005454:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
            ((uint32_t)acSizeCodesTable.HuffmanCode[i] & 0xFFUL);
 8005458:	f895 7324 	ldrb.w	r7, [r5, #804]	@ 0x324
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) |
 800545c:	021b      	lsls	r3, r3, #8
 800545e:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8005462:	433b      	orrs	r3, r7

      *address = lsb | (msb << 16);
 8005464:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005468:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
 800546c:	42b4      	cmp	r4, r6
 800546e:	f1a1 0102 	sub.w	r1, r1, #2
 8005472:	f1a5 0508 	sub.w	r5, r5, #8
 8005476:	d1e5      	bne.n	8005444 <JPEG_Set_HuffAC_Mem+0x70>
    }
  }

  /* Return function status */
  return HAL_OK;
}
 8005478:	f60d 0d38 	addw	sp, sp, #2104	@ 0x838
 800547c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
 8005480:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
 8005484:	429a      	cmp	r2, r3
 8005486:	d10f      	bne.n	80054a8 <JPEG_Set_HuffAC_Mem+0xd4>
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
 8005488:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  if (HuffTableAC != NULL)
 800548c:	e7ae      	b.n	80053ec <JPEG_Set_HuffAC_Mem+0x18>
    i = AC_BitsValsTable->HuffVal[k];
 800548e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (i == 0UL)
 8005492:	b15b      	cbz	r3, 80054ac <JPEG_Set_HuffAC_Mem+0xd8>
    else if (i == 0xF0UL) /* i = 0xF0 ZRL code*/
 8005494:	2bf0      	cmp	r3, #240	@ 0xf0
 8005496:	d015      	beq.n	80054c4 <JPEG_Set_HuffAC_Mem+0xf0>
      msb = (i & 0xF0UL) >> 4;
 8005498:	091a      	lsrs	r2, r3, #4
      lsb = (i & 0x0FUL);
 800549a:	f003 030f 	and.w	r3, r3, #15
      i = (msb * 10UL) + lsb - 1UL;
 800549e:	3b01      	subs	r3, #1
 80054a0:	fb0e 3302 	mla	r3, lr, r2, r3
    if (i >= JPEG_AC_HUFF_TABLE_SIZE)
 80054a4:	2ba1      	cmp	r3, #161	@ 0xa1
 80054a6:	d902      	bls.n	80054ae <JPEG_Set_HuffAC_Mem+0xda>
    return HAL_ERROR;
 80054a8:	2001      	movs	r0, #1
 80054aa:	e7e5      	b.n	8005478 <JPEG_Set_HuffAC_Mem+0xa4>
      i = JPEG_AC_HUFF_TABLE_SIZE - 2UL; /*i = 0x00 EOB code*/
 80054ac:	23a0      	movs	r3, #160	@ 0xa0
      AC_SizeCodesTable->HuffmanCode[i] = huffcode[k];
 80054ae:	f857 8b04 	ldr.w	r8, [r7], #4
 80054b2:	eb06 0283 	add.w	r2, r6, r3, lsl #2
 80054b6:	f8c2 80a4 	str.w	r8, [r2, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[i] = huffsize[k] - 1U;
 80054ba:	f815 2b01 	ldrb.w	r2, [r5], #1
 80054be:	3a01      	subs	r2, #1
 80054c0:	54f2      	strb	r2, [r6, r3]
      k++;
 80054c2:	e7a6      	b.n	8005412 <JPEG_Set_HuffAC_Mem+0x3e>
      i = JPEG_AC_HUFF_TABLE_SIZE - 1UL;
 80054c4:	23a1      	movs	r3, #161	@ 0xa1
 80054c6:	e7f2      	b.n	80054ae <JPEG_Set_HuffAC_Mem+0xda>

080054c8 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
 80054c8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80054ca:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80054ce:	6543      	str	r3, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80054d0:	6d42      	ldr	r2, [r0, #84]	@ 0x54
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
 80054d2:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80054d4:	f002 0203 	and.w	r2, r2, #3
 80054d8:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
 80054da:	685a      	ldr	r2, [r3, #4]
 80054dc:	bf0c      	ite	eq
 80054de:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
 80054e2:	f022 0208 	bicne.w	r2, r2, #8
 80054e6:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80054e8:	681a      	ldr	r2, [r3, #0]
 80054ea:	f022 0201 	bic.w	r2, r2, #1
 80054ee:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 80054f0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80054f2:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 80054f6:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Disable All DMA requests */
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 80054f8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80054fa:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 80054fe:	631a      	str	r2, [r3, #48]	@ 0x30
  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 8005500:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005502:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005506:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 8005508:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800550a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800550e:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8005510:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005512:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8005516:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
 8005518:	681a      	ldr	r2, [r3, #0]
 800551a:	f042 0201 	orr.w	r2, r2, #1
 800551e:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8005520:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 8005522:	f002 020c 	and.w	r2, r2, #12
 8005526:	2a08      	cmp	r2, #8
 8005528:	d104      	bne.n	8005534 <JPEG_Init_Process+0x6c>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
 800552a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800552c:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
  {
    /*Enable End Of Conversation, and End Of Header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 8005530:	631a      	str	r2, [r3, #48]	@ 0x30
  }
  else
  {
    /* Nothing to do */
  }
}
 8005532:	4770      	bx	lr
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8005534:	6d42      	ldr	r2, [r0, #84]	@ 0x54
 8005536:	f002 020c 	and.w	r2, r2, #12
 800553a:	2a0c      	cmp	r2, #12
 800553c:	d1f9      	bne.n	8005532 <JPEG_Init_Process+0x6a>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 800553e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005540:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8005544:	e7f4      	b.n	8005530 <JPEG_Init_Process+0x68>
	...

08005548 <JPEG_DMA_StartProcess>:
  * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
  *         the configuration information for JPEG module
  * @retval JPEG_PROCESS_DONE if process ends else JPEG_PROCESS_ONGOING
  */
static HAL_StatusTypeDef JPEG_DMA_StartProcess(JPEG_HandleTypeDef *hjpeg)
{
 8005548:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if ((hjpeg->InDataLength < 4UL) || (hjpeg->OutDataLength < 4UL))
 800554a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
{
 800554c:	4604      	mov	r4, r0
  if ((hjpeg->InDataLength < 4UL) || (hjpeg->OutDataLength < 4UL))
 800554e:	2b03      	cmp	r3, #3
 8005550:	d92a      	bls.n	80055a8 <JPEG_DMA_StartProcess+0x60>
 8005552:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8005554:	2903      	cmp	r1, #3
 8005556:	d927      	bls.n	80055a8 <JPEG_DMA_StartProcess+0x60>
  {
    return HAL_ERROR;
  }
  /* Reset Ending DMA internal context flag*/
  hjpeg->Context &= ~JPEG_CONTEXT_ENDING_DMA;
 8005558:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  /* Disable DMA In/Out Request*/
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);

  /* Set the JPEG DMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 800555a:	4d34      	ldr	r5, [pc, #208]	@ (800562c <JPEG_DMA_StartProcess+0xe4>)
  hjpeg->Context &= ~JPEG_CONTEXT_ENDING_DMA;
 800555c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005560:	6542      	str	r2, [r0, #84]	@ 0x54
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 8005562:	6802      	ldr	r2, [r0, #0]
  /* Set the DMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_DMAErrorCallback;
 8005564:	4e32      	ldr	r6, [pc, #200]	@ (8005630 <JPEG_DMA_StartProcess+0xe8>)
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 8005566:	6b10      	ldr	r0, [r2, #48]	@ 0x30

  /* Set the JPEG DMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 8005568:	4f32      	ldr	r7, [pc, #200]	@ (8005634 <JPEG_DMA_StartProcess+0xec>)
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 800556a:	f420 50c0 	bic.w	r0, r0, #6144	@ 0x1800
 800556e:	6310      	str	r0, [r2, #48]	@ 0x30
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 8005570:	6b20      	ldr	r0, [r4, #48]	@ 0x30

  /*DMA transfer size must be a multiple of 4 bytes i.e multiple of 32bits words*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);

  /*DMA transfer size must be a multiple of 4 bytes i.e multiple of 32bits words*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % 4UL);
 8005572:	f021 0103 	bic.w	r1, r1, #3
  hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback;
 8005576:	6605      	str	r5, [r0, #96]	@ 0x60
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 8005578:	6b65      	ldr	r5, [r4, #52]	@ 0x34
  hjpeg->hdmain->XferErrorCallback = JPEG_DMAErrorCallback;
 800557a:	6686      	str	r6, [r0, #104]	@ 0x68
  hjpeg->hdmaout->XferErrorCallback = JPEG_DMAErrorCallback;
 800557c:	66ae      	str	r6, [r5, #104]	@ 0x68
  hjpeg->hdmaout->XferAbortCallback = JPEG_DMAOutAbortCallback;
 800557e:	4e2e      	ldr	r6, [pc, #184]	@ (8005638 <JPEG_DMA_StartProcess+0xf0>)
  hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
 8005580:	662f      	str	r7, [r5, #96]	@ 0x60
  hjpeg->hdmaout->XferAbortCallback = JPEG_DMAOutAbortCallback;
 8005582:	66ee      	str	r6, [r5, #108]	@ 0x6c
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % 4UL);
 8005584:	62e1      	str	r1, [r4, #44]	@ 0x2c

  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8005586:	6d01      	ldr	r1, [r0, #80]	@ 0x50
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 8005588:	f023 0303 	bic.w	r3, r3, #3
  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 800558c:	0609      	lsls	r1, r1, #24
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 800558e:	62a3      	str	r3, [r4, #40]	@ 0x28
  if ((hjpeg->hdmain->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8005590:	d516      	bpl.n	80055c0 <JPEG_DMA_StartProcess+0x78>
  {
    if (hjpeg->hdmain->LinkedListQueue != NULL)
 8005592:	6f41      	ldr	r1, [r0, #116]	@ 0x74
 8005594:	b151      	cbz	r1, 80055ac <JPEG_DMA_StartProcess+0x64>
    {
      /* Set DMA data size */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->InDataLength;
 8005596:	6809      	ldr	r1, [r1, #0]

      /* Set DMA source address */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;

      /* Set DMA destination address */
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DIR;
 8005598:	3240      	adds	r2, #64	@ 0x40
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->InDataLength;
 800559a:	608b      	str	r3, [r1, #8]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;
 800559c:	69a3      	ldr	r3, [r4, #24]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DIR;
 800559e:	610a      	str	r2, [r1, #16]
      hjpeg->hdmain->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegInBuffPtr;
 80055a0:	60cb      	str	r3, [r1, #12]

      if (HAL_DMAEx_List_Start_IT(hjpeg->hdmain) != HAL_OK)
 80055a2:	f7ff f903 	bl	80047ac <HAL_DMAEx_List_Start_IT>
 80055a6:	b1a8      	cbz	r0, 80055d4 <JPEG_DMA_StartProcess+0x8c>
    return HAL_ERROR;
 80055a8:	2001      	movs	r0, #1

  /* Enable JPEG In/Out DMA requests*/
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);

  return HAL_OK;
}
 80055aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      hjpeg->State = HAL_JPEG_STATE_READY;
 80055ac:	2301      	movs	r3, #1
 80055ae:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 80055b2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
      __HAL_UNLOCK(hjpeg);
 80055b4:	f884 104c 	strb.w	r1, [r4, #76]	@ 0x4c
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 80055b8:	f043 0304 	orr.w	r3, r3, #4
 80055bc:	6523      	str	r3, [r4, #80]	@ 0x50
      return HAL_ERROR;
 80055be:	e7f3      	b.n	80055a8 <JPEG_DMA_StartProcess+0x60>
    if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 80055c0:	69a1      	ldr	r1, [r4, #24]
 80055c2:	3240      	adds	r2, #64	@ 0x40
 80055c4:	f7fe fe98 	bl	80042f8 <HAL_DMA_Start_IT>
 80055c8:	b120      	cbz	r0, 80055d4 <JPEG_DMA_StartProcess+0x8c>
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 80055ca:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80055cc:	f043 0304 	orr.w	r3, r3, #4
 80055d0:	6523      	str	r3, [r4, #80]	@ 0x50
      return HAL_ERROR;
 80055d2:	e7e9      	b.n	80055a8 <JPEG_DMA_StartProcess+0x60>
  if ((hjpeg->hdmaout->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80055d4:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80055d6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 80055d8:	061b      	lsls	r3, r3, #24
 80055da:	d51e      	bpl.n	800561a <JPEG_DMA_StartProcess+0xd2>
    if (hjpeg->hdmaout->LinkedListQueue != NULL)
 80055dc:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 80055de:	b193      	cbz	r3, 8005606 <JPEG_DMA_StartProcess+0xbe>
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hjpeg->OutDataLength;
 80055e0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80055e2:	681b      	ldr	r3, [r3, #0]
 80055e4:	609a      	str	r2, [r3, #8]
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)&hjpeg->Instance->DOR;
 80055e6:	6822      	ldr	r2, [r4, #0]
 80055e8:	3244      	adds	r2, #68	@ 0x44
 80055ea:	60da      	str	r2, [r3, #12]
      hjpeg->hdmaout->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)hjpeg->pJpegOutBuffPtr;
 80055ec:	69e2      	ldr	r2, [r4, #28]
 80055ee:	611a      	str	r2, [r3, #16]
      if (HAL_DMAEx_List_Start_IT(hjpeg->hdmaout) != HAL_OK)
 80055f0:	f7ff f8dc 	bl	80047ac <HAL_DMAEx_List_Start_IT>
 80055f4:	2800      	cmp	r0, #0
 80055f6:	d1d7      	bne.n	80055a8 <JPEG_DMA_StartProcess+0x60>
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);
 80055f8:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
 80055fa:	2000      	movs	r0, #0
  JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA | JPEG_DMA_ODMA);
 80055fc:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 80055fe:	f443 53c0 	orr.w	r3, r3, #6144	@ 0x1800
 8005602:	6313      	str	r3, [r2, #48]	@ 0x30
  return HAL_OK;
 8005604:	e7d1      	b.n	80055aa <JPEG_DMA_StartProcess+0x62>
      hjpeg->State = HAL_JPEG_STATE_READY;
 8005606:	2201      	movs	r2, #1
 8005608:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 800560c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_UNLOCK(hjpeg);
 800560e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005612:	f042 0204 	orr.w	r2, r2, #4
 8005616:	6522      	str	r2, [r4, #80]	@ 0x50
      return HAL_ERROR;
 8005618:	e7c6      	b.n	80055a8 <JPEG_DMA_StartProcess+0x60>
    if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 800561a:	6821      	ldr	r1, [r4, #0]
 800561c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800561e:	69e2      	ldr	r2, [r4, #28]
 8005620:	3144      	adds	r1, #68	@ 0x44
 8005622:	f7fe fe69 	bl	80042f8 <HAL_DMA_Start_IT>
 8005626:	2800      	cmp	r0, #0
 8005628:	d0e6      	beq.n	80055f8 <JPEG_DMA_StartProcess+0xb0>
 800562a:	e7ce      	b.n	80055ca <JPEG_DMA_StartProcess+0x82>
 800562c:	08005c5d 	.word	0x08005c5d
 8005630:	08005b4f 	.word	0x08005b4f
 8005634:	080060fb 	.word	0x080060fb
 8005638:	080060ed 	.word	0x080060ed

0800563c <HAL_JPEG_Init>:
{
 800563c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hjpeg == NULL)
 800563e:	4605      	mov	r5, r0
 8005640:	2800      	cmp	r0, #0
 8005642:	f000 80f6 	beq.w	8005832 <HAL_JPEG_Init+0x1f6>
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
 8005646:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
 800564a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800564e:	b91b      	cbnz	r3, 8005658 <HAL_JPEG_Init+0x1c>
    hjpeg->Lock = HAL_UNLOCKED;
 8005650:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
 8005654:	f7fb fa46 	bl	8000ae4 <HAL_JPEG_MspInit>
  hjpeg->State = HAL_JPEG_STATE_BUSY;
 8005658:	2302      	movs	r3, #2
  __HAL_JPEG_ENABLE(hjpeg);
 800565a:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
 800565c:	f885 304d 	strb.w	r3, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
 8005660:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005662:	4a87      	ldr	r2, [pc, #540]	@ (8005880 <HAL_JPEG_Init+0x244>)
 8005664:	f043 0301 	orr.w	r3, r3, #1
 8005668:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 800566a:	6823      	ldr	r3, [r4, #0]
  address = (hjpeg->Instance->DHTMEM + 3);
 800566c:	f504 715b 	add.w	r1, r4, #876	@ 0x36c
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005670:	f023 0301 	bic.w	r3, r3, #1
 8005674:	6023      	str	r3, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005676:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005678:	f504 7057 	add.w	r0, r4, #860	@ 0x35c
 800567c:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
 8005680:	6323      	str	r3, [r4, #48]	@ 0x30
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005682:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005684:	f423 53c0 	bic.w	r3, r3, #6144	@ 0x1800
 8005688:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 800568a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800568c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8005690:	6323      	str	r3, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 8005692:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005694:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005698:	6323      	str	r3, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 800569a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800569c:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 80056a0:	63a3      	str	r3, [r4, #56]	@ 0x38
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
 80056a2:	4b78      	ldr	r3, [pc, #480]	@ (8005884 <HAL_JPEG_Init+0x248>)
 80056a4:	63eb      	str	r3, [r5, #60]	@ 0x3c
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
 80056a6:	4b78      	ldr	r3, [pc, #480]	@ (8005888 <HAL_JPEG_Init+0x24c>)
 80056a8:	642b      	str	r3, [r5, #64]	@ 0x40
  hjpeg->QuantTable2 = NULL;
 80056aa:	2300      	movs	r3, #0
  hjpeg->QuantTable3 = NULL;
 80056ac:	e9c5 3311 	strd	r3, r3, [r5, #68]	@ 0x44
               (((uint32_t)HuffTableDC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 80056b0:	7b93      	ldrb	r3, [r2, #14]
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 80056b2:	7bd6      	ldrb	r6, [r2, #15]
               (((uint32_t)HuffTableDC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 80056b4:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 80056b6:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableDC0->Bits[index - 4UL] & 0xFFUL);
 80056ba:	7b16      	ldrb	r6, [r2, #12]
  while (index > 3UL)
 80056bc:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableDC0->Bits[index - 3UL] & 0xFFUL) << 8) |
 80056be:	4333      	orrs	r3, r6
 80056c0:	7c56      	ldrb	r6, [r2, #17]
 80056c2:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 80056c6:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
 80056ca:	4281      	cmp	r1, r0
 80056cc:	d1f0      	bne.n	80056b0 <HAL_JPEG_Init+0x74>
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 80056ce:	4a6f      	ldr	r2, [pc, #444]	@ (800588c <HAL_JPEG_Init+0x250>)
  address = (hjpeg->Instance->DHTMEM + 10UL);
 80056d0:	f504 7162 	add.w	r1, r4, #904	@ 0x388
 80056d4:	4610      	mov	r0, r2
 80056d6:	460e      	mov	r6, r1
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 80056d8:	4b6d      	ldr	r3, [pc, #436]	@ (8005890 <HAL_JPEG_Init+0x254>)
 80056da:	f504 775e 	add.w	r7, r4, #888	@ 0x378
 80056de:	f8c4 3378 	str.w	r3, [r4, #888]	@ 0x378
 80056e2:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 80056e6:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
 80056ea:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 80056ee:	f8c4 3370 	str.w	r3, [r4, #880]	@ 0x370
               (((uint32_t)HuffTableAC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 80056f2:	7b83      	ldrb	r3, [r0, #14]
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 80056f4:	f890 c00f 	ldrb.w	ip, [r0, #15]
               (((uint32_t)HuffTableAC0->Bits[index - 2UL] & 0xFFUL) << 16) |
 80056f8:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 80056fa:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
               ((uint32_t)HuffTableAC0->Bits[index - 4UL] & 0xFFUL);
 80056fe:	f890 c00c 	ldrb.w	ip, [r0, #12]
  while (index > 3UL)
 8005702:	3804      	subs	r0, #4
               (((uint32_t)HuffTableAC0->Bits[index - 3UL] & 0xFFUL) << 8) |
 8005704:	ea43 030c 	orr.w	r3, r3, ip
 8005708:	f890 c011 	ldrb.w	ip, [r0, #17]
 800570c:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
 8005710:	f846 3904 	str.w	r3, [r6], #-4
  while (index > 3UL)
 8005714:	42be      	cmp	r6, r7
 8005716:	d1ec      	bne.n	80056f2 <HAL_JPEG_Init+0xb6>
  value = *address & 0xFFFF0000U;
 8005718:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
 800571c:	f504 6085 	add.w	r0, r4, #1064	@ 0x428
  value = *address & 0xFFFF0000U;
 8005720:	0c1b      	lsrs	r3, r3, #16
 8005722:	041b      	lsls	r3, r3, #16
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) |
 8005724:	f443 437a 	orr.w	r3, r3, #64000	@ 0xfa00
 8005728:	f043 03f9 	orr.w	r3, r3, #249	@ 0xf9
  *address = value;
 800572c:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
 8005730:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 8005734:	f892 60af 	ldrb.w	r6, [r2, #175]	@ 0xaf
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
 8005738:	041b      	lsls	r3, r3, #16
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 800573a:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
 800573e:	f892 60ac 	ldrb.w	r6, [r2, #172]	@ 0xac
  while (index > 3UL)
 8005742:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
 8005744:	4333      	orrs	r3, r6
 8005746:	f892 60b1 	ldrb.w	r6, [r2, #177]	@ 0xb1
 800574a:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
 800574e:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
 8005752:	4281      	cmp	r1, r0
 8005754:	d1ec      	bne.n	8005730 <HAL_JPEG_Init+0xf4>
  value = *address & 0x0000FFFFU;
 8005756:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
 800575a:	4a4e      	ldr	r2, [pc, #312]	@ (8005894 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFU;
 800575c:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) |
 800575e:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
 8005762:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
 8005766:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
  address = (hjpeg->Instance->DHTMEM + 102);
 800576a:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
  value = *address & 0xFFFF0000U;
 800576e:	4013      	ands	r3, r2
  *address = value;
 8005770:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
 8005774:	2301      	movs	r3, #1
 8005776:	f8c4 3438 	str.w	r3, [r4, #1080]	@ 0x438
 800577a:	f04f 3301 	mov.w	r3, #16843009	@ 0x1010101
 800577e:	f8c4 3434 	str.w	r3, [r4, #1076]	@ 0x434
 8005782:	f8c4 3430 	str.w	r3, [r4, #1072]	@ 0x430
  value = *address & 0x0000FFFFUL;
 8005786:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) |
 800578a:	f504 608b 	add.w	r0, r4, #1112	@ 0x458
  value = *address & 0x0000FFFFUL;
 800578e:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) |
 8005790:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
 8005794:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
 8005798:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
 800579c:	4013      	ands	r3, r2
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) |
 800579e:	f443 6330 	orr.w	r3, r3, #2816	@ 0xb00
 80057a2:	f043 030a 	orr.w	r3, r3, #10
  *address = value;
 80057a6:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 80057aa:	4b3b      	ldr	r3, [pc, #236]	@ (8005898 <HAL_JPEG_Init+0x25c>)
 80057ac:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
 80057b0:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
 80057b4:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
 80057b8:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
 80057bc:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) |
 80057be:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
 80057c2:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
 80057c6:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
 80057ca:	4013      	ands	r3, r2
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
 80057cc:	f443 43ee 	orr.w	r3, r3, #30464	@ 0x7700
 80057d0:	f043 0302 	orr.w	r3, r3, #2
  *address = value;
 80057d4:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
 80057d8:	4b30      	ldr	r3, [pc, #192]	@ (800589c <HAL_JPEG_Init+0x260>)
 80057da:	4a31      	ldr	r2, [pc, #196]	@ (80058a0 <HAL_JPEG_Init+0x264>)
 80057dc:	f8c4 3454 	str.w	r3, [r4, #1108]	@ 0x454
 80057e0:	4b30      	ldr	r3, [pc, #192]	@ (80058a4 <HAL_JPEG_Init+0x268>)
 80057e2:	f8c4 3450 	str.w	r3, [r4, #1104]	@ 0x450
 80057e6:	4b30      	ldr	r3, [pc, #192]	@ (80058a8 <HAL_JPEG_Init+0x26c>)
 80057e8:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
 80057ec:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
 80057f0:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) |
 80057f2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
 80057f6:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
 80057fa:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 80057fe:	f892 60b1 	ldrb.w	r6, [r2, #177]	@ 0xb1
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
 8005802:	041b      	lsls	r3, r3, #16
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
 8005804:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
 8005808:	f892 60ae 	ldrb.w	r6, [r2, #174]	@ 0xae
  while (index > 3UL)
 800580c:	3a04      	subs	r2, #4
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
 800580e:	4333      	orrs	r3, r6
 8005810:	f892 60b3 	ldrb.w	r6, [r2, #179]	@ 0xb3
 8005814:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
 8005818:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
 800581c:	4281      	cmp	r1, r0
 800581e:	d1ec      	bne.n	80057fa <HAL_JPEG_Init+0x1be>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
 8005820:	4628      	mov	r0, r5
 8005822:	491a      	ldr	r1, [pc, #104]	@ (800588c <HAL_JPEG_Init+0x250>)
 8005824:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
 8005828:	f7ff fdd4 	bl	80053d4 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
 800582c:	b118      	cbz	r0, 8005836 <HAL_JPEG_Init+0x1fa>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
 800582e:	2301      	movs	r3, #1
 8005830:	652b      	str	r3, [r5, #80]	@ 0x50
    return HAL_ERROR;
 8005832:	2001      	movs	r0, #1
}
 8005834:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
 8005836:	4628      	mov	r0, r5
 8005838:	4919      	ldr	r1, [pc, #100]	@ (80058a0 <HAL_JPEG_Init+0x264>)
 800583a:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
 800583e:	f7ff fdc9 	bl	80053d4 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
 8005842:	2800      	cmp	r0, #0
 8005844:	d1f3      	bne.n	800582e <HAL_JPEG_Init+0x1f2>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
 8005846:	4628      	mov	r0, r5
 8005848:	490d      	ldr	r1, [pc, #52]	@ (8005880 <HAL_JPEG_Init+0x244>)
 800584a:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
 800584e:	f7ff fd87 	bl	8005360 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
 8005852:	2800      	cmp	r0, #0
 8005854:	d1eb      	bne.n	800582e <HAL_JPEG_Init+0x1f2>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
 8005856:	4628      	mov	r0, r5
 8005858:	4914      	ldr	r1, [pc, #80]	@ (80058ac <HAL_JPEG_Init+0x270>)
 800585a:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
 800585e:	f7ff fd7f 	bl	8005360 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
 8005862:	2800      	cmp	r0, #0
 8005864:	d1e3      	bne.n	800582e <HAL_JPEG_Init+0x1f2>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
 8005866:	6863      	ldr	r3, [r4, #4]
 8005868:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800586c:	6063      	str	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
 800586e:	2301      	movs	r3, #1
  hjpeg->JpegInCount = 0;
 8005870:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
 8005872:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
 8005874:	f885 304d 	strb.w	r3, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
 8005878:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
 800587a:	6568      	str	r0, [r5, #84]	@ 0x54
  return HAL_OK;
 800587c:	e7da      	b.n	8005834 <HAL_JPEG_Init+0x1f8>
 800587e:	bf00      	nop
 8005880:	080358f4 	.word	0x080358f4
 8005884:	080356f4 	.word	0x080356f4
 8005888:	080356b4 	.word	0x080356b4
 800588c:	08035826 	.word	0x08035826
 8005890:	0b0a0908 	.word	0x0b0a0908
 8005894:	ffff0000 	.word	0xffff0000
 8005898:	09080706 	.word	0x09080706
 800589c:	01000404 	.word	0x01000404
 80058a0:	08035774 	.word	0x08035774
 80058a4:	05070403 	.word	0x05070403
 80058a8:	04040201 	.word	0x04040201
 80058ac:	080358d8 	.word	0x080358d8

080058b0 <HAL_JPEG_GetInfo>:
{
 80058b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if ((hjpeg == NULL) || (pInfo == NULL))
 80058b4:	2800      	cmp	r0, #0
 80058b6:	d070      	beq.n	800599a <HAL_JPEG_GetInfo+0xea>
 80058b8:	2900      	cmp	r1, #0
 80058ba:	d06e      	beq.n	800599a <HAL_JPEG_GetInfo+0xea>
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
 80058bc:	6804      	ldr	r4, [r0, #0]
 80058be:	6863      	ldr	r3, [r4, #4]
 80058c0:	f003 0303 	and.w	r3, r3, #3
 80058c4:	2b02      	cmp	r3, #2
 80058c6:	d048      	beq.n	800595a <HAL_JPEG_GetInfo+0xaa>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
 80058c8:	6863      	ldr	r3, [r4, #4]
 80058ca:	f013 0303 	ands.w	r3, r3, #3
 80058ce:	d005      	beq.n	80058dc <HAL_JPEG_GetInfo+0x2c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
 80058d0:	6863      	ldr	r3, [r4, #4]
 80058d2:	f003 0303 	and.w	r3, r3, #3
 80058d6:	2b03      	cmp	r3, #3
 80058d8:	d15f      	bne.n	800599a <HAL_JPEG_GetInfo+0xea>
 80058da:	2330      	movs	r3, #48	@ 0x30
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
 80058dc:	6862      	ldr	r2, [r4, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
 80058de:	600b      	str	r3, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
 80058e0:	0c12      	lsrs	r2, r2, #16
 80058e2:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 80058e4:	68e2      	ldr	r2, [r4, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 80058e6:	f023 0320 	bic.w	r3, r3, #32
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 80058ea:	0c12      	lsrs	r2, r2, #16
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 80058ec:	2b10      	cmp	r3, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
 80058ee:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 80058f0:	d13e      	bne.n	8005970 <HAL_JPEG_GetInfo+0xc0>
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
 80058f2:	6925      	ldr	r5, [r4, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
 80058f4:	6963      	ldr	r3, [r4, #20]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
 80058f6:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
 80058fa:	69a2      	ldr	r2, [r4, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 80058fc:	2d01      	cmp	r5, #1
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
 80058fe:	ea4f 1313 	mov.w	r3, r3, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
 8005902:	ea4f 1212 	mov.w	r2, r2, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 8005906:	d12a      	bne.n	800595e <HAL_JPEG_GetInfo+0xae>
 8005908:	4313      	orrs	r3, r2
 800590a:	f013 0f0f 	tst.w	r3, #15
 800590e:	bf0c      	ite	eq
 8005910:	2301      	moveq	r3, #1
 8005912:	2300      	movne	r3, #0
 8005914:	005b      	lsls	r3, r3, #1
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
 8005916:	604b      	str	r3, [r1, #4]
  *         the configuration information for JPEG module
  * @retval JPEG image quality from 1 to 100.
  */
static uint32_t JPEG_GetQuality(const JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
 8005918:	2300      	movs	r3, #0
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
 800591a:	f04f 0e64 	mov.w	lr, #100	@ 0x64
  i = 0;
 800591e:	461d      	mov	r5, r3
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
 8005920:	f241 3888 	movw	r8, #5000	@ 0x1388
 8005924:	f8df c078 	ldr.w	ip, [pc, #120]	@ 80059a0 <HAL_JPEG_GetInfo+0xf0>
 8005928:	3450      	adds	r4, #80	@ 0x50
    quantRow = *tableAddress;
 800592a:	2600      	movs	r6, #0
 800592c:	f854 9005 	ldr.w	r9, [r4, r5]
    for (j = 0; j < 4UL; j++)
 8005930:	eb05 070c 	add.w	r7, r5, ip
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
 8005934:	fa29 f206 	lsr.w	r2, r9, r6
 8005938:	b2d2      	uxtb	r2, r2
      if (quantVal == 1UL)
 800593a:	2a01      	cmp	r2, #1
 800593c:	d11a      	bne.n	8005974 <HAL_JPEG_GetInfo+0xc4>
        quality += 100UL;
 800593e:	3364      	adds	r3, #100	@ 0x64
    for (j = 0; j < 4UL; j++)
 8005940:	3608      	adds	r6, #8
 8005942:	2e20      	cmp	r6, #32
 8005944:	f107 0701 	add.w	r7, r7, #1
 8005948:	d1f4      	bne.n	8005934 <HAL_JPEG_GetInfo+0x84>
        }
      }
    }

    i += 4UL;
 800594a:	3504      	adds	r5, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
 800594c:	2d40      	cmp	r5, #64	@ 0x40
 800594e:	d1ec      	bne.n	800592a <HAL_JPEG_GetInfo+0x7a>
  return HAL_OK;
 8005950:	2000      	movs	r0, #0
    tableAddress ++;
  }

  return (quality / 64UL);
 8005952:	099b      	lsrs	r3, r3, #6
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
 8005954:	610b      	str	r3, [r1, #16]
}
 8005956:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800595a:	2310      	movs	r3, #16
 800595c:	e7be      	b.n	80058dc <HAL_JPEG_GetInfo+0x2c>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 800595e:	2d03      	cmp	r5, #3
 8005960:	d106      	bne.n	8005970 <HAL_JPEG_GetInfo+0xc0>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
 8005962:	4313      	orrs	r3, r2
 8005964:	f013 0f0f 	tst.w	r3, #15
 8005968:	bf0c      	ite	eq
 800596a:	2301      	moveq	r3, #1
 800596c:	2300      	movne	r3, #0
 800596e:	e7d2      	b.n	8005916 <HAL_JPEG_GetInfo+0x66>
 8005970:	2300      	movs	r3, #0
 8005972:	e7d0      	b.n	8005916 <HAL_JPEG_GetInfo+0x66>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
 8005974:	fb0e fb02 	mul.w	fp, lr, r2
 8005978:	f897 a000 	ldrb.w	sl, [r7]
 800597c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800597e:	f812 a00a 	ldrb.w	sl, [r2, sl]
 8005982:	fbbb f2fa 	udiv	r2, fp, sl
        if (scale <= 100UL)
 8005986:	2a64      	cmp	r2, #100	@ 0x64
          quality += 5000UL / scale;
 8005988:	bf8d      	iteet	hi
 800598a:	fbb8 f2f2 	udivhi	r2, r8, r2
          quality += (200UL - scale) / 2UL;
 800598e:	f1c2 02c8 	rsbls	r2, r2, #200	@ 0xc8
 8005992:	eb03 0352 	addls.w	r3, r3, r2, lsr #1
          quality += 5000UL / scale;
 8005996:	189b      	addhi	r3, r3, r2
 8005998:	e7d2      	b.n	8005940 <HAL_JPEG_GetInfo+0x90>
    return HAL_ERROR;
 800599a:	2001      	movs	r0, #1
 800599c:	e7db      	b.n	8005956 <HAL_JPEG_GetInfo+0xa6>
 800599e:	bf00      	nop
 80059a0:	08035734 	.word	0x08035734

080059a4 <HAL_JPEG_Decode_DMA>:
{
 80059a4:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
 80059a6:	4604      	mov	r4, r0
 80059a8:	b348      	cbz	r0, 80059fe <HAL_JPEG_Decode_DMA+0x5a>
 80059aa:	b341      	cbz	r1, 80059fe <HAL_JPEG_Decode_DMA+0x5a>
 80059ac:	b33b      	cbz	r3, 80059fe <HAL_JPEG_Decode_DMA+0x5a>
  __HAL_LOCK(hjpeg);
 80059ae:	f890 504c 	ldrb.w	r5, [r0, #76]	@ 0x4c
 80059b2:	2d01      	cmp	r5, #1
 80059b4:	d028      	beq.n	8005a08 <HAL_JPEG_Decode_DMA+0x64>
 80059b6:	2501      	movs	r5, #1
 80059b8:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
 80059bc:	f890 504d 	ldrb.w	r5, [r0, #77]	@ 0x4d
 80059c0:	2d01      	cmp	r5, #1
 80059c2:	d11e      	bne.n	8005a02 <HAL_JPEG_Decode_DMA+0x5e>
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
 80059c4:	2504      	movs	r5, #4
 80059c6:	f880 504d 	strb.w	r5, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
 80059ca:	6d45      	ldr	r5, [r0, #84]	@ 0x54
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
 80059cc:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
 80059d0:	f025 050f 	bic.w	r5, r5, #15
 80059d4:	6545      	str	r5, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
 80059d6:	6d45      	ldr	r5, [r0, #84]	@ 0x54
    hjpeg->OutDataLength = OutDataLength;
 80059d8:	9b04      	ldr	r3, [sp, #16]
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
 80059da:	f045 050e 	orr.w	r5, r5, #14
 80059de:	6545      	str	r5, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
 80059e0:	2500      	movs	r5, #0
    hjpeg->InDataLength = InDataLength;
 80059e2:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 80059e4:	6205      	str	r5, [r0, #32]
    hjpeg->OutDataLength = OutDataLength;
 80059e6:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->JpegOutCount = 0;
 80059e8:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
 80059ea:	f7ff fd6d 	bl	80054c8 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
 80059ee:	f7ff fdab 	bl	8005548 <JPEG_DMA_StartProcess>
 80059f2:	b128      	cbz	r0, 8005a00 <HAL_JPEG_Decode_DMA+0x5c>
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 80059f4:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
 80059f6:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 80059fa:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
 80059fe:	2001      	movs	r0, #1
}
 8005a00:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
 8005a02:	2300      	movs	r3, #0
 8005a04:	f880 304c 	strb.w	r3, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
 8005a08:	2002      	movs	r0, #2
 8005a0a:	e7f9      	b.n	8005a00 <HAL_JPEG_Decode_DMA+0x5c>

08005a0c <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8005a0c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005a0e:	f003 030c 	and.w	r3, r3, #12
 8005a12:	2b0c      	cmp	r3, #12
 8005a14:	d117      	bne.n	8005a46 <HAL_JPEG_Pause+0x3a>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8005a16:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
 8005a1a:	bf1f      	itttt	ne
 8005a1c:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 8005a1e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8005a22:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= JPEG_DMA_IDMA;
 8005a24:	f44f 6300 	movne.w	r3, #2048	@ 0x800
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8005a28:	0789      	lsls	r1, r1, #30
 8005a2a:	d505      	bpl.n	8005a38 <HAL_JPEG_Pause+0x2c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005a2c:	6d42      	ldr	r2, [r0, #84]	@ 0x54
      mask |= JPEG_DMA_ODMA;
 8005a2e:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005a32:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005a36:	6542      	str	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
 8005a38:	6801      	ldr	r1, [r0, #0]
 8005a3a:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 8005a3c:	ea22 0303 	bic.w	r3, r2, r3
 8005a40:	630b      	str	r3, [r1, #48]	@ 0x30
}
 8005a42:	2000      	movs	r0, #0
 8005a44:	4770      	bx	lr
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8005a46:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005a48:	f003 030c 	and.w	r3, r3, #12
 8005a4c:	2b08      	cmp	r3, #8
 8005a4e:	d1f8      	bne.n	8005a42 <HAL_JPEG_Pause+0x36>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8005a50:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
 8005a54:	bf1f      	itttt	ne
 8005a56:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 8005a58:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8005a5c:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
 8005a5e:	2306      	movne	r3, #6
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8005a60:	078a      	lsls	r2, r1, #30
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005a62:	bf41      	itttt	mi
 8005a64:	6d42      	ldrmi	r2, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 8005a66:	f043 0328 	orrmi.w	r3, r3, #40	@ 0x28
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
 8005a6a:	f442 5200 	orrmi.w	r2, r2, #8192	@ 0x2000
 8005a6e:	6542      	strmi	r2, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 8005a70:	e7e2      	b.n	8005a38 <HAL_JPEG_Pause+0x2c>

08005a72 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
 8005a72:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
 8005a74:	6282      	str	r2, [r0, #40]	@ 0x28
}
 8005a76:	4770      	bx	lr

08005a78 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
 8005a78:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
 8005a7a:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
 8005a7c:	4770      	bx	lr

08005a7e <HAL_JPEG_Abort>:
{
 8005a7e:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
 8005a80:	6d42      	ldr	r2, [r0, #84]	@ 0x54
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
 8005a82:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8005a84:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
 8005a86:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8005a8a:	f023 030f 	bic.w	r3, r3, #15
 8005a8e:	6543      	str	r3, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8005a90:	f002 030c 	and.w	r3, r2, #12
 8005a94:	2b0c      	cmp	r3, #12
 8005a96:	d117      	bne.n	8005ac8 <HAL_JPEG_Abort+0x4a>
    if (HAL_DMA_Abort(hjpeg->hdmaout) != HAL_OK)
 8005a98:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8005a9a:	f7fe fc6b 	bl	8004374 <HAL_DMA_Abort>
 8005a9e:	b138      	cbz	r0, 8005ab0 <HAL_JPEG_Abort+0x32>
      if (hjpeg->hdmaout->ErrorCode == HAL_DMA_ERROR_TIMEOUT)
 8005aa0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005aa2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005aa4:	2b10      	cmp	r3, #16
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005aa6:	bf02      	ittt	eq
 8005aa8:	6d23      	ldreq	r3, [r4, #80]	@ 0x50
 8005aaa:	f043 0304 	orreq.w	r3, r3, #4
 8005aae:	6523      	streq	r3, [r4, #80]	@ 0x50
    if (HAL_DMA_Abort(hjpeg->hdmain) != HAL_OK)
 8005ab0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8005ab2:	f7fe fc5f 	bl	8004374 <HAL_DMA_Abort>
 8005ab6:	b138      	cbz	r0, 8005ac8 <HAL_JPEG_Abort+0x4a>
      if (hjpeg->hdmain->ErrorCode == HAL_DMA_ERROR_TIMEOUT)
 8005ab8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005aba:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005abc:	2b10      	cmp	r3, #16
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005abe:	bf02      	ittt	eq
 8005ac0:	6d23      	ldreq	r3, [r4, #80]	@ 0x50
 8005ac2:	f043 0304 	orreq.w	r3, r3, #4
 8005ac6:	6523      	streq	r3, [r4, #80]	@ 0x50
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005ac8:	6822      	ldr	r2, [r4, #0]
 8005aca:	6813      	ldr	r3, [r2, #0]
 8005acc:	f023 0301 	bic.w	r3, r3, #1
 8005ad0:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
 8005ad2:	f7fe f907 	bl	8003ce4 <HAL_GetTick>
 8005ad6:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
 8005ad8:	6823      	ldr	r3, [r4, #0]
 8005ada:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005adc:	061b      	lsls	r3, r3, #24
 8005ade:	d50c      	bpl.n	8005afa <HAL_JPEG_Abort+0x7c>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
 8005ae0:	f7fe f900 	bl	8003ce4 <HAL_GetTick>
 8005ae4:	1b40      	subs	r0, r0, r5
 8005ae6:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8005aea:	d9f5      	bls.n	8005ad8 <HAL_JPEG_Abort+0x5a>
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
 8005aec:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005aee:	f043 0308 	orr.w	r3, r3, #8
 8005af2:	6523      	str	r3, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005af4:	2306      	movs	r3, #6
 8005af6:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005afa:	6823      	ldr	r3, [r4, #0]
 8005afc:	2001      	movs	r0, #1
 8005afe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b00:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 8005b04:	631a      	str	r2, [r3, #48]	@ 0x30
  JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005b06:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b08:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 8005b0c:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
 8005b0e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b10:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005b14:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
 8005b16:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b18:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005b1c:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8005b1e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005b20:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8005b24:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
 8005b26:	2300      	movs	r3, #0
 8005b28:	6223      	str	r3, [r4, #32]
  hjpeg->JpegOutCount = 0;
 8005b2a:	6263      	str	r3, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
 8005b2c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005b2e:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8005b32:	6562      	str	r2, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
 8005b34:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 8005b36:	b12a      	cbz	r2, 8005b44 <HAL_JPEG_Abort+0xc6>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005b38:	2206      	movs	r2, #6
 8005b3a:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    __HAL_UNLOCK(hjpeg);
 8005b3e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
 8005b42:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005b44:	f884 004d 	strb.w	r0, [r4, #77]	@ 0x4d
    return HAL_OK;
 8005b48:	4618      	mov	r0, r3
 8005b4a:	e7f8      	b.n	8005b3e <HAL_JPEG_Abort+0xc0>

08005b4c <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
 8005b4c:	4770      	bx	lr

08005b4e <JPEG_DMAErrorCallback>:
{
 8005b4e:	b510      	push	{r4, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005b50:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_NONE)
 8005b52:	f7fe fd2d 	bl	80045b0 <HAL_DMA_GetError>
 8005b56:	b1b0      	cbz	r0, 8005b86 <JPEG_DMAErrorCallback+0x38>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005b58:	6823      	ldr	r3, [r4, #0]
    HAL_JPEG_ErrorCallback(hjpeg);
 8005b5a:	4620      	mov	r0, r4
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005b5c:	681a      	ldr	r2, [r3, #0]
 8005b5e:	f022 0201 	bic.w	r2, r2, #1
 8005b62:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005b64:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b66:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 8005b6a:	631a      	str	r2, [r3, #48]	@ 0x30
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_MASK);
 8005b6c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005b6e:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 8005b72:	631a      	str	r2, [r3, #48]	@ 0x30
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005b74:	2301      	movs	r3, #1
 8005b76:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005b7a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005b7c:	f043 0304 	orr.w	r3, r3, #4
 8005b80:	6523      	str	r3, [r4, #80]	@ 0x50
    HAL_JPEG_ErrorCallback(hjpeg);
 8005b82:	f7fb ff87 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 8005b86:	bd10      	pop	{r4, pc}

08005b88 <JPEG_ReadInputData>:
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
 8005b88:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
 8005b8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005b8c:	4604      	mov	r4, r0
 8005b8e:	460d      	mov	r5, r1
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
 8005b90:	b922      	cbnz	r2, 8005b9c <JPEG_ReadInputData+0x14>
    (void) HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_INPUT);
 8005b92:	2101      	movs	r1, #1
 8005b94:	f7ff ff3a 	bl	8005a0c <HAL_JPEG_Pause>
  uint32_t nb_bytes = 0;
 8005b98:	2200      	movs	r2, #0
 8005b9a:	e004      	b.n	8005ba6 <JPEG_ReadInputData+0x1e>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
 8005b9c:	6a03      	ldr	r3, [r0, #32]
 8005b9e:	429a      	cmp	r2, r3
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
 8005ba0:	6a03      	ldr	r3, [r0, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
 8005ba2:	d922      	bls.n	8005bea <JPEG_ReadInputData+0x62>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
 8005ba4:	1ad2      	subs	r2, r2, r3
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
 8005ba6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005ba8:	f413 5380 	ands.w	r3, r3, #4096	@ 0x1000
 8005bac:	d11c      	bne.n	8005be8 <JPEG_ReadInputData+0x60>
 8005bae:	b1da      	cbz	r2, 8005be8 <JPEG_ReadInputData+0x60>
    if (nb_words >= nbRequestWords)
 8005bb0:	ebb5 0f92 	cmp.w	r5, r2, lsr #2
 8005bb4:	69a1      	ldr	r1, [r4, #24]
    nb_words = nb_bytes / 4UL;
 8005bb6:	ea4f 0692 	mov.w	r6, r2, lsr #2
    if (nb_words >= nbRequestWords)
 8005bba:	d826      	bhi.n	8005c0a <JPEG_ReadInputData+0x82>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005bbc:	6827      	ldr	r7, [r4, #0]
        input_count = hjpeg->JpegInCount;
 8005bbe:	6a26      	ldr	r6, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005bc0:	3301      	adds	r3, #1
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005bc2:	1988      	adds	r0, r1, r6
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005bc4:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005bc6:	f890 c001 	ldrb.w	ip, [r0, #1]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005bca:	5d8e      	ldrb	r6, [r1, r6]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005bcc:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
 8005bce:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005bd0:	ea42 220c 	orr.w	r2, r2, ip, lsl #8
 8005bd4:	4332      	orrs	r2, r6
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005bd6:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005bda:	643a      	str	r2, [r7, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
 8005bdc:	6a22      	ldr	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005bde:	429d      	cmp	r5, r3
        hjpeg->JpegInCount += 4UL;
 8005be0:	f102 0204 	add.w	r2, r2, #4
 8005be4:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
 8005be6:	d1ea      	bne.n	8005bbe <JPEG_ReadInputData+0x36>
}
 8005be8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
 8005bea:	429a      	cmp	r2, r3
 8005bec:	d1d4      	bne.n	8005b98 <JPEG_ReadInputData+0x10>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
 8005bee:	6a01      	ldr	r1, [r0, #32]
 8005bf0:	f7fb fe92 	bl	8001918 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
 8005bf4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005bf6:	2b04      	cmp	r3, #4
      hjpeg->InDataLength = ((hjpeg->InDataLength + 3UL) / 4UL) * 4UL;
 8005bf8:	bf82      	ittt	hi
 8005bfa:	3303      	addhi	r3, #3
 8005bfc:	f023 0303 	bichi.w	r3, r3, #3
 8005c00:	62a3      	strhi	r3, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 8005c02:	2300      	movs	r3, #0
    nb_bytes = hjpeg->InDataLength;
 8005c04:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
 8005c06:	6223      	str	r3, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
 8005c08:	e7cd      	b.n	8005ba6 <JPEG_ReadInputData+0x1e>
      if (nb_words > 0UL)
 8005c0a:	2a03      	cmp	r2, #3
 8005c0c:	d916      	bls.n	8005c3c <JPEG_ReadInputData+0xb4>
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005c0e:	6827      	ldr	r7, [r4, #0]
          input_count = hjpeg->JpegInCount;
 8005c10:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005c12:	3301      	adds	r3, #1
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005c14:	1948      	adds	r0, r1, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005c16:	7882      	ldrb	r2, [r0, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005c18:	f890 c001 	ldrb.w	ip, [r0, #1]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005c1c:	5d4d      	ldrb	r5, [r1, r5]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005c1e:	0412      	lsls	r2, r2, #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
 8005c20:	78c0      	ldrb	r0, [r0, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
 8005c22:	ea42 220c 	orr.w	r2, r2, ip, lsl #8
 8005c26:	432a      	orrs	r2, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
 8005c28:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
 8005c2c:	643a      	str	r2, [r7, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
 8005c2e:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005c30:	429e      	cmp	r6, r3
          hjpeg->JpegInCount += 4UL;
 8005c32:	f102 0204 	add.w	r2, r2, #4
 8005c36:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
 8005c38:	d1ea      	bne.n	8005c10 <JPEG_ReadInputData+0x88>
 8005c3a:	e7d5      	b.n	8005be8 <JPEG_ReadInputData+0x60>
        for (index = 0; index < nb_bytes; index++)
 8005c3c:	4618      	mov	r0, r3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
 8005c3e:	6a25      	ldr	r5, [r4, #32]
 8005c40:	00c6      	lsls	r6, r0, #3
 8005c42:	5d4d      	ldrb	r5, [r1, r5]
        for (index = 0; index < nb_bytes; index++)
 8005c44:	3001      	adds	r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
 8005c46:	40b5      	lsls	r5, r6
 8005c48:	432b      	orrs	r3, r5
          hjpeg->JpegInCount++;
 8005c4a:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
 8005c4c:	4282      	cmp	r2, r0
          hjpeg->JpegInCount++;
 8005c4e:	f105 0501 	add.w	r5, r5, #1
 8005c52:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
 8005c54:	d1f3      	bne.n	8005c3e <JPEG_ReadInputData+0xb6>
        hjpeg->Instance->DIR = dataword;
 8005c56:	6822      	ldr	r2, [r4, #0]
 8005c58:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8005c5a:	e7c5      	b.n	8005be8 <JPEG_ReadInputData+0x60>

08005c5c <JPEG_DMAInCpltCallback>:
{
 8005c5c:	b570      	push	{r4, r5, r6, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005c5e:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005c60:	6822      	ldr	r2, [r4, #0]
 8005c62:	6b11      	ldr	r1, [r2, #48]	@ 0x30
 8005c64:	f021 017e 	bic.w	r1, r1, #126	@ 0x7e
 8005c68:	6311      	str	r1, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
 8005c6a:	6d61      	ldr	r1, [r4, #84]	@ 0x54
 8005c6c:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8005c70:	f021 0173 	bic.w	r1, r1, #115	@ 0x73
 8005c74:	0409      	lsls	r1, r1, #16
 8005c76:	0c09      	lsrs	r1, r1, #16
 8005c78:	290c      	cmp	r1, #12
 8005c7a:	d12d      	bne.n	8005cd8 <JPEG_DMAInCpltCallback+0x7c>
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005c7c:	6b11      	ldr	r1, [r2, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 8005c7e:	6803      	ldr	r3, [r0, #0]
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005c80:	f421 6100 	bic.w	r1, r1, #2048	@ 0x800
 8005c84:	6311      	str	r1, [r2, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 8005c86:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 8005c88:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
 8005c8a:	f7fe fdfb 	bl	8004884 <HAL_DMAEx_GetFifoLevel>
 8005c8e:	b2b6      	uxth	r6, r6
 8005c90:	1bad      	subs	r5, r5, r6
 8005c92:	1a2d      	subs	r5, r5, r0
 8005c94:	6225      	str	r5, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
 8005c96:	4620      	mov	r0, r4
 8005c98:	6a21      	ldr	r1, [r4, #32]
 8005c9a:	f7fb fe3d 	bl	8001918 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= 4UL)
 8005c9e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
      if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005ca0:	6822      	ldr	r2, [r4, #0]
    if (hjpeg->InDataLength >= 4UL)
 8005ca2:	2b03      	cmp	r3, #3
      hjpeg->InDataLength = ((hjpeg->InDataLength + 3UL) / 4UL) * 4UL;
 8005ca4:	bf82      	ittt	hi
 8005ca6:	3303      	addhi	r3, #3
 8005ca8:	f023 0303 	bichi.w	r3, r3, #3
 8005cac:	62a3      	strhi	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
 8005cae:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005cb0:	04db      	lsls	r3, r3, #19
 8005cb2:	d417      	bmi.n	8005ce4 <JPEG_DMAInCpltCallback+0x88>
 8005cb4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005cb6:	b1ab      	cbz	r3, 8005ce4 <JPEG_DMAInCpltCallback+0x88>
      if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005cb8:	69a1      	ldr	r1, [r4, #24]
 8005cba:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8005cbc:	3240      	adds	r2, #64	@ 0x40
 8005cbe:	f7fe fb1b 	bl	80042f8 <HAL_DMA_Start_IT>
 8005cc2:	b150      	cbz	r0, 8005cda <JPEG_DMAInCpltCallback+0x7e>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005cc4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        HAL_JPEG_ErrorCallback(hjpeg);
 8005cc6:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005cc8:	f043 0304 	orr.w	r3, r3, #4
 8005ccc:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
 8005cce:	2306      	movs	r3, #6
 8005cd0:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
 8005cd4:	f7fb fede 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 8005cd8:	bd70      	pop	{r4, r5, r6, pc}
      JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_IDMA);
 8005cda:	6822      	ldr	r2, [r4, #0]
 8005cdc:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005cde:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8005ce2:	6313      	str	r3, [r2, #48]	@ 0x30
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 8005ce4:	6822      	ldr	r2, [r4, #0]
 8005ce6:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005ce8:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8005cec:	6313      	str	r3, [r2, #48]	@ 0x30
 8005cee:	e7f3      	b.n	8005cd8 <JPEG_DMAInCpltCallback+0x7c>

08005cf0 <JPEG_StoreOutputData>:
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005cf0:	6a42      	ldr	r2, [r0, #36]	@ 0x24
{
 8005cf2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005cf4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8005cf6:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8005cfa:	4293      	cmp	r3, r2
{
 8005cfc:	4604      	mov	r4, r0
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
 8005cfe:	d32a      	bcc.n	8005d56 <JPEG_StoreOutputData+0x66>
    for (index = 0; index < nbOutputWords; index++)
 8005d00:	2200      	movs	r2, #0
      dataword = hjpeg->Instance->DOR;
 8005d02:	6823      	ldr	r3, [r4, #0]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005d04:	69e5      	ldr	r5, [r4, #28]
      dataword = hjpeg->Instance->DOR;
 8005d06:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005d08:	6a60      	ldr	r0, [r4, #36]	@ 0x24
    for (index = 0; index < nbOutputWords; index++)
 8005d0a:	3201      	adds	r2, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005d0c:	542b      	strb	r3, [r5, r0]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005d0e:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d10:	69e0      	ldr	r0, [r4, #28]
    for (index = 0; index < nbOutputWords; index++)
 8005d12:	4291      	cmp	r1, r2
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005d14:	4428      	add	r0, r5
 8005d16:	ea4f 2513 	mov.w	r5, r3, lsr #8
 8005d1a:	7045      	strb	r5, [r0, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
 8005d1c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d1e:	69e0      	ldr	r0, [r4, #28]
 8005d20:	4428      	add	r0, r5
 8005d22:	ea4f 4513 	mov.w	r5, r3, lsr #16
 8005d26:	7085      	strb	r5, [r0, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
 8005d28:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d2a:	69e0      	ldr	r0, [r4, #28]
 8005d2c:	ea4f 6313 	mov.w	r3, r3, lsr #24
 8005d30:	4428      	add	r0, r5
 8005d32:	70c3      	strb	r3, [r0, #3]
      hjpeg->JpegOutCount += 4UL;
 8005d34:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005d36:	f103 0304 	add.w	r3, r3, #4
 8005d3a:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nbOutputWords; index++)
 8005d3c:	d1e1      	bne.n	8005d02 <JPEG_StoreOutputData+0x12>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
 8005d3e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005d40:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005d42:	429a      	cmp	r2, r3
 8005d44:	d106      	bne.n	8005d54 <JPEG_StoreOutputData+0x64>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005d46:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005d48:	69e1      	ldr	r1, [r4, #28]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005d4a:	4620      	mov	r0, r4
 8005d4c:	f7fb fe02 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005d50:	2300      	movs	r3, #0
 8005d52:	6263      	str	r3, [r4, #36]	@ 0x24
}
 8005d54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
 8005d56:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 8005d58:	4293      	cmp	r3, r2
 8005d5a:	d9fb      	bls.n	8005d54 <JPEG_StoreOutputData+0x64>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
 8005d5c:	6a42      	ldr	r2, [r0, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
 8005d5e:	2000      	movs	r0, #0
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
 8005d60:	1a9b      	subs	r3, r3, r2
 8005d62:	089a      	lsrs	r2, r3, #2
    for (index = 0; index < nb_words; index++)
 8005d64:	4290      	cmp	r0, r2
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005d66:	69e1      	ldr	r1, [r4, #28]
    for (index = 0; index < nb_words; index++)
 8005d68:	d105      	bne.n	8005d76 <JPEG_StoreOutputData+0x86>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
 8005d6a:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8005d6c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005d6e:	429f      	cmp	r7, r3
 8005d70:	d119      	bne.n	8005da6 <JPEG_StoreOutputData+0xb6>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005d72:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005d74:	e7e9      	b.n	8005d4a <JPEG_StoreOutputData+0x5a>
      dataword = hjpeg->Instance->DOR;
 8005d76:	6823      	ldr	r3, [r4, #0]
    for (index = 0; index < nb_words; index++)
 8005d78:	3001      	adds	r0, #1
      dataword = hjpeg->Instance->DOR;
 8005d7a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
 8005d7c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d7e:	554b      	strb	r3, [r1, r5]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
 8005d80:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d82:	69e1      	ldr	r1, [r4, #28]
 8005d84:	4429      	add	r1, r5
 8005d86:	0a1d      	lsrs	r5, r3, #8
 8005d88:	704d      	strb	r5, [r1, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
 8005d8a:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d8c:	69e1      	ldr	r1, [r4, #28]
 8005d8e:	4429      	add	r1, r5
 8005d90:	0c1d      	lsrs	r5, r3, #16
 8005d92:	708d      	strb	r5, [r1, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
 8005d94:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8005d96:	69e1      	ldr	r1, [r4, #28]
 8005d98:	0e1b      	lsrs	r3, r3, #24
 8005d9a:	4429      	add	r1, r5
 8005d9c:	70cb      	strb	r3, [r1, #3]
      hjpeg->JpegOutCount += 4UL;
 8005d9e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005da0:	3304      	adds	r3, #4
 8005da2:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
 8005da4:	e7de      	b.n	8005d64 <JPEG_StoreOutputData+0x74>
      for (index = 0; index < nb_bytes; index++)
 8005da6:	2200      	movs	r2, #0
      dataword = hjpeg->Instance->DOR;
 8005da8:	6823      	ldr	r3, [r4, #0]
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
 8005daa:	6a65      	ldr	r5, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
 8005dac:	6c5e      	ldr	r6, [r3, #68]	@ 0x44
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
 8005dae:	1b78      	subs	r0, r7, r5
      for (index = 0; index < nb_bytes; index++)
 8005db0:	4282      	cmp	r2, r0
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
 8005db2:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
 8005db4:	d114      	bne.n	8005de0 <JPEG_StoreOutputData+0xf0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005db6:	4620      	mov	r0, r4
 8005db8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005dba:	f7fb fdcb 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005dbe:	2300      	movs	r3, #0
 8005dc0:	6263      	str	r3, [r4, #36]	@ 0x24
      nb_bytes = 4UL - nb_bytes;
 8005dc2:	1d2b      	adds	r3, r5, #4
 8005dc4:	1bdb      	subs	r3, r3, r7
      for (index = nb_bytes; index < 4UL; index++)
 8005dc6:	2b03      	cmp	r3, #3
 8005dc8:	d8c4      	bhi.n	8005d54 <JPEG_StoreOutputData+0x64>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
 8005dca:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005dcc:	00da      	lsls	r2, r3, #3
 8005dce:	69e0      	ldr	r0, [r4, #28]
 8005dd0:	fa26 f202 	lsr.w	r2, r6, r2
 8005dd4:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
 8005dd6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
 8005dd8:	3301      	adds	r3, #1
        hjpeg->JpegOutCount++;
 8005dda:	3201      	adds	r2, #1
 8005ddc:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
 8005dde:	e7f2      	b.n	8005dc6 <JPEG_StoreOutputData+0xd6>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
 8005de0:	f002 0303 	and.w	r3, r2, #3
 8005de4:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
 8005de8:	00db      	lsls	r3, r3, #3
 8005dea:	fa26 f303 	lsr.w	r3, r6, r3
 8005dee:	f801 300c 	strb.w	r3, [r1, ip]
        hjpeg->JpegOutCount++;
 8005df2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
 8005df4:	3201      	adds	r2, #1
        hjpeg->JpegOutCount++;
 8005df6:	3301      	adds	r3, #1
 8005df8:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
 8005dfa:	e7d9      	b.n	8005db0 <JPEG_StoreOutputData+0xc0>

08005dfc <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005dfc:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8005dfe:	b510      	push	{r4, lr}
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005e00:	f003 0303 	and.w	r3, r3, #3
 8005e04:	2b02      	cmp	r3, #2
{
 8005e06:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005e08:	d114      	bne.n	8005e34 <JPEG_Process+0x38>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
 8005e0a:	6803      	ldr	r3, [r0, #0]
 8005e0c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005e0e:	065b      	lsls	r3, r3, #25
 8005e10:	d510      	bpl.n	8005e34 <JPEG_Process+0x38>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
 8005e12:	1d01      	adds	r1, r0, #4
 8005e14:	f7ff fd4c 	bl	80058b0 <HAL_JPEG_GetInfo>
      hjpeg->Conf.ImageQuality = 0;
 8005e18:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 8005e1a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
 8005e1c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 8005e1e:	f7fb fd4f 	bl	80018c0 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
 8005e22:	6823      	ldr	r3, [r4, #0]
 8005e24:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005e26:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005e2a:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
 8005e2c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005e2e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005e32:	639a      	str	r2, [r3, #56]	@ 0x38
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
 8005e34:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005e36:	04d9      	lsls	r1, r3, #19
 8005e38:	d407      	bmi.n	8005e4a <JPEG_Process+0x4e>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
 8005e3a:	6823      	ldr	r3, [r4, #0]
 8005e3c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005e3e:	0792      	lsls	r2, r2, #30
 8005e40:	d542      	bpl.n	8005ec8 <JPEG_Process+0xcc>
      JPEG_ReadInputData(hjpeg, JPEG_FIFO_TH_SIZE);
 8005e42:	2104      	movs	r1, #4
      JPEG_ReadInputData(hjpeg, 1);
 8005e44:	4620      	mov	r0, r4
 8005e46:	f7ff fe9f 	bl	8005b88 <JPEG_ReadInputData>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8005e4a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005e4c:	0499      	lsls	r1, r3, #18
 8005e4e:	d407      	bmi.n	8005e60 <JPEG_Process+0x64>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
 8005e50:	6823      	ldr	r3, [r4, #0]
 8005e52:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005e54:	0712      	lsls	r2, r2, #28
 8005e56:	d53c      	bpl.n	8005ed2 <JPEG_Process+0xd6>
      JPEG_StoreOutputData(hjpeg, JPEG_FIFO_TH_SIZE);
 8005e58:	2104      	movs	r1, #4
      JPEG_StoreOutputData(hjpeg, 1);
 8005e5a:	4620      	mov	r0, r4
 8005e5c:	f7ff ff48 	bl	8005cf0 <JPEG_StoreOutputData>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
 8005e60:	6823      	ldr	r3, [r4, #0]
 8005e62:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005e64:	f002 0238 	and.w	r2, r2, #56	@ 0x38
 8005e68:	2a20      	cmp	r2, #32
 8005e6a:	d13a      	bne.n	8005ee2 <JPEG_Process+0xe6>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005e6c:	681a      	ldr	r2, [r3, #0]
 8005e6e:	f022 0201 	bic.w	r2, r2, #1
 8005e72:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8005e74:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005e76:	f002 020c 	and.w	r2, r2, #12
 8005e7a:	2a08      	cmp	r2, #8
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8005e7c:	bf02      	ittt	eq
 8005e7e:	6b1a      	ldreq	r2, [r3, #48]	@ 0x30
 8005e80:	f022 027e 	biceq.w	r2, r2, #126	@ 0x7e
 8005e84:	631a      	streq	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 8005e86:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005e88:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8005e8c:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
 8005e8e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005e90:	b133      	cbz	r3, 8005ea0 <JPEG_Process+0xa4>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005e92:	4620      	mov	r0, r4
 8005e94:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005e96:	69e1      	ldr	r1, [r4, #28]
 8005e98:	f7fb fd5c 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005e9c:	2300      	movs	r3, #0
 8005e9e:	6263      	str	r3, [r4, #36]	@ 0x24
    tmpContext = hjpeg->Context;
 8005ea0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005ea2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005ea4:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005ea8:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 8005eac:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 8005eae:	2200      	movs	r2, #0
 8005eb0:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005eb4:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005eb6:	2b02      	cmp	r3, #2
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005eb8:	4620      	mov	r0, r4
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005eba:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005ebe:	d10d      	bne.n	8005edc <JPEG_Process+0xe0>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005ec0:	f7fb fdea 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
 8005ec4:	2001      	movs	r0, #1
}
 8005ec6:	bd10      	pop	{r4, pc}
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
 8005ec8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005eca:	0758      	lsls	r0, r3, #29
 8005ecc:	d5bd      	bpl.n	8005e4a <JPEG_Process+0x4e>
      JPEG_ReadInputData(hjpeg, 1);
 8005ece:	2101      	movs	r1, #1
 8005ed0:	e7b8      	b.n	8005e44 <JPEG_Process+0x48>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8005ed2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005ed4:	06db      	lsls	r3, r3, #27
 8005ed6:	d5c3      	bpl.n	8005e60 <JPEG_Process+0x64>
      JPEG_StoreOutputData(hjpeg, 1);
 8005ed8:	2101      	movs	r1, #1
 8005eda:	e7be      	b.n	8005e5a <JPEG_Process+0x5e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 8005edc:	f7ff fe36 	bl	8005b4c <HAL_JPEG_EncodeCpltCallback>
 8005ee0:	e7f0      	b.n	8005ec4 <JPEG_Process+0xc8>
  return JPEG_PROCESS_ONGOING;
 8005ee2:	2000      	movs	r0, #0
 8005ee4:	e7ef      	b.n	8005ec6 <JPEG_Process+0xca>

08005ee6 <JPEG_DMA_PollResidualData>:
{
 8005ee6:	b570      	push	{r4, r5, r6, lr}
 8005ee8:	4604      	mov	r4, r0
 8005eea:	2610      	movs	r6, #16
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8005eec:	6d65      	ldr	r5, [r4, #84]	@ 0x54
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8005eee:	6823      	ldr	r3, [r4, #0]
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8005ef0:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
 8005ef4:	d122      	bne.n	8005f3c <JPEG_DMA_PollResidualData+0x56>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
 8005ef6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005ef8:	06d0      	lsls	r0, r2, #27
 8005efa:	d51f      	bpl.n	8005f3c <JPEG_DMA_PollResidualData+0x56>
        dataOut = hjpeg->Instance->DOR;
 8005efc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
 8005efe:	69e1      	ldr	r1, [r4, #28]
 8005f00:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005f02:	548b      	strb	r3, [r1, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
 8005f04:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005f06:	69e2      	ldr	r2, [r4, #28]
 8005f08:	440a      	add	r2, r1
 8005f0a:	0a19      	lsrs	r1, r3, #8
 8005f0c:	7051      	strb	r1, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
 8005f0e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005f10:	69e2      	ldr	r2, [r4, #28]
 8005f12:	440a      	add	r2, r1
 8005f14:	0c19      	lsrs	r1, r3, #16
 8005f16:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
 8005f18:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005f1a:	69e2      	ldr	r2, [r4, #28]
 8005f1c:	0e1b      	lsrs	r3, r3, #24
 8005f1e:	440a      	add	r2, r1
 8005f20:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
 8005f22:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005f24:	3304      	adds	r3, #4
 8005f26:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
 8005f28:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005f2a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8005f2c:	429a      	cmp	r2, r3
 8005f2e:	d105      	bne.n	8005f3c <JPEG_DMA_PollResidualData+0x56>
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005f30:	4620      	mov	r0, r4
 8005f32:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005f34:	69e1      	ldr	r1, [r4, #28]
 8005f36:	f7fb fd0d 	bl	8001954 <HAL_JPEG_DataReadyCallback>
          hjpeg->JpegOutCount = 0;
 8005f3a:	6265      	str	r5, [r4, #36]	@ 0x24
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
 8005f3c:	3e01      	subs	r6, #1
 8005f3e:	d1d5      	bne.n	8005eec <JPEG_DMA_PollResidualData+0x6>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
 8005f40:	6823      	ldr	r3, [r4, #0]
  tmpContext = hjpeg->Context;
 8005f42:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
 8005f44:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8005f46:	06c9      	lsls	r1, r1, #27
 8005f48:	d501      	bpl.n	8005f4e <JPEG_DMA_PollResidualData+0x68>
 8005f4a:	0492      	lsls	r2, r2, #18
 8005f4c:	d41e      	bmi.n	8005f8c <JPEG_DMA_PollResidualData+0xa6>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 8005f4e:	681a      	ldr	r2, [r3, #0]
 8005f50:	f022 0201 	bic.w	r2, r2, #1
 8005f54:	601a      	str	r2, [r3, #0]
    if (hjpeg->JpegOutCount > 0UL)
 8005f56:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005f58:	b133      	cbz	r3, 8005f68 <JPEG_DMA_PollResidualData+0x82>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 8005f5a:	4620      	mov	r0, r4
 8005f5c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005f5e:	69e1      	ldr	r1, [r4, #28]
 8005f60:	f7fb fcf8 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 8005f64:	2300      	movs	r3, #0
 8005f66:	6263      	str	r3, [r4, #36]	@ 0x24
    tmpContext = hjpeg->Context;
 8005f68:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005f6a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005f6c:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 8005f70:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 8005f74:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 8005f76:	2200      	movs	r2, #0
 8005f78:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005f7c:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005f7e:	2b02      	cmp	r3, #2
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005f80:	4620      	mov	r0, r4
    hjpeg->State = HAL_JPEG_STATE_READY;
 8005f82:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 8005f86:	d102      	bne.n	8005f8e <JPEG_DMA_PollResidualData+0xa8>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 8005f88:	f7fb fd86 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
}
 8005f8c:	bd70      	pop	{r4, r5, r6, pc}
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 8005f8e:	f7ff fddd 	bl	8005b4c <HAL_JPEG_EncodeCpltCallback>
}
 8005f92:	e7fb      	b.n	8005f8c <JPEG_DMA_PollResidualData+0xa6>

08005f94 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8005f94:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
 8005f96:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8005f98:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
{
 8005f9c:	4604      	mov	r4, r0
 8005f9e:	460d      	mov	r5, r1
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
 8005fa0:	d033      	beq.n	800600a <HAL_JPEG_Resume+0x76>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 8005fa2:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005fa4:	f003 030c 	and.w	r3, r3, #12
 8005fa8:	2b0c      	cmp	r3, #12
 8005faa:	d13c      	bne.n	8006026 <HAL_JPEG_Resume+0x92>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8005fac:	f011 0601 	ands.w	r6, r1, #1
 8005fb0:	d00a      	beq.n	8005fc8 <HAL_JPEG_Resume+0x34>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
 8005fb2:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8005fb4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005fb8:	6543      	str	r3, [r0, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
 8005fba:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8005fbc:	f023 0303 	bic.w	r3, r3, #3
 8005fc0:	6283      	str	r3, [r0, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
 8005fc2:	b99b      	cbnz	r3, 8005fec <HAL_JPEG_Resume+0x58>
      mask |= JPEG_DMA_IDMA;
 8005fc4:	f44f 6600 	mov.w	r6, #2048	@ 0x800
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8005fc8:	07a8      	lsls	r0, r5, #30
 8005fca:	d509      	bpl.n	8005fe0 <HAL_JPEG_Resume+0x4c>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 8005fcc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005fce:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005fd2:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
 8005fd4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005fd6:	0419      	lsls	r1, r3, #16
 8005fd8:	d519      	bpl.n	800600e <HAL_JPEG_Resume+0x7a>
        JPEG_DMA_PollResidualData(hjpeg);
 8005fda:	4620      	mov	r0, r4
 8005fdc:	f7ff ff83 	bl	8005ee6 <JPEG_DMA_PollResidualData>
    JPEG_ENABLE_DMA(hjpeg, mask);
 8005fe0:	6822      	ldr	r2, [r4, #0]
 8005fe2:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8005fe4:	4333      	orrs	r3, r6
 8005fe6:	6313      	str	r3, [r2, #48]	@ 0x30
  return HAL_OK;
 8005fe8:	2000      	movs	r0, #0
}
 8005fea:	bd70      	pop	{r4, r5, r6, pc}
        if (HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
 8005fec:	6802      	ldr	r2, [r0, #0]
 8005fee:	6981      	ldr	r1, [r0, #24]
 8005ff0:	3240      	adds	r2, #64	@ 0x40
 8005ff2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8005ff4:	f7fe f980 	bl	80042f8 <HAL_DMA_Start_IT>
 8005ff8:	2800      	cmp	r0, #0
 8005ffa:	d0e3      	beq.n	8005fc4 <HAL_JPEG_Resume+0x30>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 8005ffc:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8005ffe:	f043 0304 	orr.w	r3, r3, #4
 8006002:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
 8006004:	2306      	movs	r3, #6
 8006006:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
 800600a:	2001      	movs	r0, #1
 800600c:	e7ed      	b.n	8005fea <HAL_JPEG_Resume+0x56>
        if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 800600e:	6821      	ldr	r1, [r4, #0]
 8006010:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8006012:	69e2      	ldr	r2, [r4, #28]
 8006014:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8006016:	3144      	adds	r1, #68	@ 0x44
 8006018:	f7fe f96e 	bl	80042f8 <HAL_DMA_Start_IT>
 800601c:	2800      	cmp	r0, #0
 800601e:	d1ed      	bne.n	8005ffc <HAL_JPEG_Resume+0x68>
        mask |= JPEG_DMA_ODMA;
 8006020:	f446 5680 	orr.w	r6, r6, #4096	@ 0x1000
 8006024:	e7dc      	b.n	8005fe0 <HAL_JPEG_Resume+0x4c>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8006026:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006028:	f003 030c 	and.w	r3, r3, #12
 800602c:	2b08      	cmp	r3, #8
 800602e:	d1db      	bne.n	8005fe8 <HAL_JPEG_Resume+0x54>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
 8006030:	f011 0301 	ands.w	r3, r1, #1
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
 8006034:	bf1f      	itttt	ne
 8006036:	6d43      	ldrne	r3, [r0, #84]	@ 0x54
 8006038:	f423 5380 	bicne.w	r3, r3, #4096	@ 0x1000
 800603c:	6543      	strne	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
 800603e:	2306      	movne	r3, #6
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
 8006040:	078a      	lsls	r2, r1, #30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 8006042:	bf48      	it	mi
 8006044:	6d42      	ldrmi	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 8006046:	6801      	ldr	r1, [r0, #0]
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
 8006048:	bf44      	itt	mi
 800604a:	f422 5200 	bicmi.w	r2, r2, #8192	@ 0x2000
 800604e:	6542      	strmi	r2, [r0, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 8006050:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
 8006052:	bf48      	it	mi
 8006054:	f043 0328 	orrmi.w	r3, r3, #40	@ 0x28
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
 8006058:	4313      	orrs	r3, r2
 800605a:	630b      	str	r3, [r1, #48]	@ 0x30
 800605c:	e7c4      	b.n	8005fe8 <HAL_JPEG_Resume+0x54>

0800605e <JPEG_DMA_EndProcess>:
{
 800605e:	b570      	push	{r4, r5, r6, lr}
 8006060:	4604      	mov	r4, r0
  hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hjpeg->hdmaout);
 8006062:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
 8006064:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8006066:	6803      	ldr	r3, [r0, #0]
 8006068:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 800606a:	f7fe fc0b 	bl	8004884 <HAL_DMAEx_GetFifoLevel>
 800606e:	b2b6      	uxth	r6, r6
 8006070:	1bad      	subs	r5, r5, r6
 8006072:	1a2d      	subs	r5, r5, r0
 8006074:	6265      	str	r5, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
 8006076:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006078:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800607a:	429a      	cmp	r2, r3
 800607c:	d106      	bne.n	800608c <JPEG_DMA_EndProcess+0x2e>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 800607e:	4620      	mov	r0, r4
 8006080:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006082:	69e1      	ldr	r1, [r4, #28]
 8006084:	f7fb fc66 	bl	8001954 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
 8006088:	2300      	movs	r3, #0
 800608a:	6263      	str	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
 800608c:	6823      	ldr	r3, [r4, #0]
 800608e:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
 8006090:	f015 0510 	ands.w	r5, r5, #16
 8006094:	d122      	bne.n	80060dc <JPEG_DMA_EndProcess+0x7e>
    if (hjpeg->JpegOutCount > 0UL)
 8006096:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006098:	b12b      	cbz	r3, 80060a6 <JPEG_DMA_EndProcess+0x48>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 800609a:	4620      	mov	r0, r4
 800609c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800609e:	69e1      	ldr	r1, [r4, #28]
 80060a0:	f7fb fc58 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
 80060a4:	6265      	str	r5, [r4, #36]	@ 0x24
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80060a6:	6822      	ldr	r2, [r4, #0]
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 80060a8:	4620      	mov	r0, r4
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80060aa:	6813      	ldr	r3, [r2, #0]
 80060ac:	f023 0301 	bic.w	r3, r3, #1
 80060b0:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
 80060b2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 80060b4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80060b6:	f003 0303 	and.w	r3, r3, #3
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
 80060ba:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
 80060be:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
 80060c0:	2200      	movs	r2, #0
 80060c2:	f884 204c 	strb.w	r2, [r4, #76]	@ 0x4c
    hjpeg->State = HAL_JPEG_STATE_READY;
 80060c6:	2201      	movs	r2, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80060c8:	2b02      	cmp	r3, #2
    hjpeg->State = HAL_JPEG_STATE_READY;
 80060ca:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80060ce:	d102      	bne.n	80060d6 <JPEG_DMA_EndProcess+0x78>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
 80060d0:	f7fb fce2 	bl	8001a98 <HAL_JPEG_DecodeCpltCallback>
}
 80060d4:	bd70      	pop	{r4, r5, r6, pc}
      HAL_JPEG_EncodeCpltCallback(hjpeg);
 80060d6:	f7ff fd39 	bl	8005b4c <HAL_JPEG_EncodeCpltCallback>
 80060da:	e7fb      	b.n	80060d4 <JPEG_DMA_EndProcess+0x76>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 80060dc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80060de:	049b      	lsls	r3, r3, #18
 80060e0:	d4f8      	bmi.n	80060d4 <JPEG_DMA_EndProcess+0x76>
    JPEG_DMA_PollResidualData(hjpeg);
 80060e2:	4620      	mov	r0, r4
}
 80060e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    JPEG_DMA_PollResidualData(hjpeg);
 80060e8:	f7ff befd 	b.w	8005ee6 <JPEG_DMA_PollResidualData>

080060ec <JPEG_DMAOutAbortCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80060ec:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
 80060ee:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80060f0:	041b      	lsls	r3, r3, #16
 80060f2:	d501      	bpl.n	80060f8 <JPEG_DMAOutAbortCallback+0xc>
    JPEG_DMA_EndProcess(hjpeg);
 80060f4:	f7ff bfb3 	b.w	800605e <JPEG_DMA_EndProcess>
}
 80060f8:	4770      	bx	lr

080060fa <JPEG_DMAOutCpltCallback>:
{
 80060fa:	b570      	push	{r4, r5, r6, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80060fc:	6dc4      	ldr	r4, [r0, #92]	@ 0x5c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 80060fe:	6823      	ldr	r3, [r4, #0]
 8006100:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8006102:	f021 017e 	bic.w	r1, r1, #126	@ 0x7e
 8006106:	6319      	str	r1, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
 8006108:	6d61      	ldr	r1, [r4, #84]	@ 0x54
 800610a:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 800610e:	f021 0173 	bic.w	r1, r1, #115	@ 0x73
 8006112:	0409      	lsls	r1, r1, #16
 8006114:	0c09      	lsrs	r1, r1, #16
 8006116:	290c      	cmp	r1, #12
 8006118:	d129      	bne.n	800616e <JPEG_DMAOutCpltCallback+0x74>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
 800611a:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800611c:	0689      	lsls	r1, r1, #26
 800611e:	d42c      	bmi.n	800617a <JPEG_DMAOutCpltCallback+0x80>
      JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 8006120:	6b19      	ldr	r1, [r3, #48]	@ 0x30
      hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 8006122:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
      JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 8006124:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
 8006128:	6319      	str	r1, [r3, #48]	@ 0x30
      hjpeg->JpegOutCount = hjpeg->OutDataLength - JPEG_GET_DMA_REMAIN_DATA(hdma);
 800612a:	6803      	ldr	r3, [r0, #0]
 800612c:	6c9e      	ldr	r6, [r3, #72]	@ 0x48
 800612e:	f7fe fba9 	bl	8004884 <HAL_DMAEx_GetFifoLevel>
 8006132:	b2b6      	uxth	r6, r6
 8006134:	1bad      	subs	r5, r5, r6
 8006136:	1a2d      	subs	r5, r5, r0
 8006138:	6265      	str	r5, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
 800613a:	4620      	mov	r0, r4
 800613c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800613e:	69e1      	ldr	r1, [r4, #28]
 8006140:	f7fb fc08 	bl	8001954 <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
 8006144:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006146:	049b      	lsls	r3, r3, #18
 8006148:	d417      	bmi.n	800617a <JPEG_DMAOutCpltCallback+0x80>
        if (HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
 800614a:	6821      	ldr	r1, [r4, #0]
 800614c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800614e:	69e2      	ldr	r2, [r4, #28]
 8006150:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8006152:	3144      	adds	r1, #68	@ 0x44
 8006154:	f7fe f8d0 	bl	80042f8 <HAL_DMA_Start_IT>
 8006158:	b150      	cbz	r0, 8006170 <JPEG_DMAOutCpltCallback+0x76>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 800615a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          HAL_JPEG_ErrorCallback(hjpeg);
 800615c:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
 800615e:	f043 0304 	orr.w	r3, r3, #4
 8006162:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
 8006164:	2306      	movs	r3, #6
 8006166:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
 800616a:	f7fb fc93 	bl	8001a94 <HAL_JPEG_ErrorCallback>
}
 800616e:	bd70      	pop	{r4, r5, r6, pc}
        JPEG_ENABLE_DMA(hjpeg, JPEG_DMA_ODMA);
 8006170:	6822      	ldr	r2, [r4, #0]
 8006172:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8006174:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8006178:	6313      	str	r3, [r2, #48]	@ 0x30
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
 800617a:	6822      	ldr	r2, [r4, #0]
 800617c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 800617e:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8006182:	6313      	str	r3, [r2, #48]	@ 0x30
 8006184:	e7f3      	b.n	800616e <JPEG_DMAOutCpltCallback+0x74>

08006186 <HAL_JPEG_IRQHandler>:
{
 8006186:	b510      	push	{r4, lr}
  switch (hjpeg->State)
 8006188:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
{
 800618c:	4604      	mov	r4, r0
  switch (hjpeg->State)
 800618e:	3b03      	subs	r3, #3
 8006190:	2b01      	cmp	r3, #1
 8006192:	d852      	bhi.n	800623a <HAL_JPEG_IRQHandler+0xb4>
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 8006194:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8006196:	f003 030c 	and.w	r3, r3, #12
 800619a:	2b08      	cmp	r3, #8
 800619c:	d103      	bne.n	80061a6 <HAL_JPEG_IRQHandler+0x20>
}
 800619e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        (void) JPEG_Process(hjpeg);
 80061a2:	f7ff be2b 	b.w	8005dfc <JPEG_Process>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
 80061a6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80061a8:	f003 030c 	and.w	r3, r3, #12
 80061ac:	2b0c      	cmp	r3, #12
 80061ae:	d144      	bne.n	800623a <HAL_JPEG_IRQHandler+0xb4>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 80061b0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80061b2:	f003 0303 	and.w	r3, r3, #3
 80061b6:	2b02      	cmp	r3, #2
 80061b8:	d114      	bne.n	80061e4 <HAL_JPEG_IRQHandler+0x5e>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
 80061ba:	6803      	ldr	r3, [r0, #0]
 80061bc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80061be:	0659      	lsls	r1, r3, #25
 80061c0:	d510      	bpl.n	80061e4 <HAL_JPEG_IRQHandler+0x5e>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
 80061c2:	1d01      	adds	r1, r0, #4
 80061c4:	f7ff fb74 	bl	80058b0 <HAL_JPEG_GetInfo>
      hjpeg->Conf.ImageQuality = 0;
 80061c8:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 80061ca:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
 80061cc:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
 80061ce:	f7fb fb77 	bl	80018c0 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
 80061d2:	6823      	ldr	r3, [r4, #0]
 80061d4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80061d6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80061da:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
 80061dc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80061de:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80061e2:	639a      	str	r2, [r3, #56]	@ 0x38
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
 80061e4:	6823      	ldr	r3, [r4, #0]
 80061e6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80061e8:	0692      	lsls	r2, r2, #26
 80061ea:	d526      	bpl.n	800623a <HAL_JPEG_IRQHandler+0xb4>
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 80061ec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    if (hjpeg->hdmain->State == HAL_DMA_STATE_BUSY)
 80061ee:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    JPEG_DISABLE_DMA(hjpeg, JPEG_DMA_ODMA | JPEG_DMA_IDMA);
 80061f0:	f422 52c0 	bic.w	r2, r2, #6144	@ 0x1800
 80061f4:	631a      	str	r2, [r3, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
 80061f6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80061f8:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80061fc:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 80061fe:	681a      	ldr	r2, [r3, #0]
 8006200:	f022 0201 	bic.w	r2, r2, #1
 8006204:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
 8006206:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006208:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
 800620c:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
 800620e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8006210:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
 8006214:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_DMA_STATE_BUSY)
 8006216:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 800621a:	2b02      	cmp	r3, #2
 800621c:	d101      	bne.n	8006222 <HAL_JPEG_IRQHandler+0x9c>
      (void) HAL_DMA_Abort(hjpeg->hdmain);
 800621e:	f7fe f8a9 	bl	8004374 <HAL_DMA_Abort>
    if (hjpeg->hdmaout->State == HAL_DMA_STATE_BUSY)
 8006222:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8006224:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
 8006228:	2b02      	cmp	r3, #2
 800622a:	d101      	bne.n	8006230 <HAL_JPEG_IRQHandler+0xaa>
      (void) HAL_DMA_Abort(hjpeg->hdmaout);
 800622c:	f7fe f8a2 	bl	8004374 <HAL_DMA_Abort>
    JPEG_DMA_EndProcess(hjpeg);
 8006230:	4620      	mov	r0, r4
}
 8006232:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    JPEG_DMA_EndProcess(hjpeg);
 8006236:	f7ff bf12 	b.w	800605e <JPEG_DMA_EndProcess>
}
 800623a:	bd10      	pop	{r4, pc}

0800623c <HAL_JPEG_GetState>:
  return hjpeg->State;
 800623c:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
 8006240:	4770      	bx	lr

08006242 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006242:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006244:	01d2      	lsls	r2, r2, #7
 8006246:	3284      	adds	r2, #132	@ 0x84
 8006248:	1883      	adds	r3, r0, r2
{
 800624a:	b5f0      	push	{r4, r5, r6, r7, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800624c:	68c7      	ldr	r7, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800624e:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006250:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006252:	f005 25f0 	and.w	r5, r5, #4026593280	@ 0xf000f000
 8006256:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006258:	68c5      	ldr	r5, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800625a:	680e      	ldr	r6, [r1, #0]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800625c:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8006260:	f106 0c01 	add.w	ip, r6, #1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006264:	f3c7 470b 	ubfx	r7, r7, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006268:	4465      	add	r5, ip
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800626a:	4427      	add	r7, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800626c:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006270:	605d      	str	r5, [r3, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006272:	68c7      	ldr	r7, [r0, #12]
 8006274:	68cd      	ldr	r5, [r1, #12]
 8006276:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800627a:	442f      	add	r7, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800627c:	689d      	ldr	r5, [r3, #8]
 800627e:	f005 25f0 	and.w	r5, r5, #4026593280	@ 0xf000f000
 8006282:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006284:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8006288:	688d      	ldr	r5, [r1, #8]
 800628a:	f3cc 0c0a 	ubfx	ip, ip, #0, #11
 800628e:	3501      	adds	r5, #1
 8006290:	4465      	add	r5, ip
 8006292:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006296:	609d      	str	r5, [r3, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006298:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800629a:	f8d1 c010 	ldr.w	ip, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800629e:	f025 0507 	bic.w	r5, r5, #7
 80062a2:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80062a4:	f8c3 c010 	str.w	ip, [r3, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80062a8:	698f      	ldr	r7, [r1, #24]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 80062aa:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 80062ae:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80062b2:	f891 7031 	ldrb.w	r7, [r1, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 80062b6:	ea45 2507 	orr.w	r5, r5, r7, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80062ba:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 80062be:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80062c2:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80062c4:	695d      	ldr	r5, [r3, #20]
 80062c6:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 80062ca:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80062cc:	694d      	ldr	r5, [r1, #20]
 80062ce:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80062d0:	69dd      	ldr	r5, [r3, #28]
 80062d2:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 80062d6:	f025 0507 	bic.w	r5, r5, #7
 80062da:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80062dc:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80062e0:	433d      	orrs	r5, r7
 80062e2:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 80062e4:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
 80062e6:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80062e8:	f1bc 0f00 	cmp.w	ip, #0
 80062ec:	d024      	beq.n	8006338 <LTDC_SetConfig+0xf6>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80062ee:	f1bc 0f01 	cmp.w	ip, #1
 80062f2:	d023      	beq.n	800633c <LTDC_SetConfig+0xfa>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80062f4:	f1ac 0502 	sub.w	r5, ip, #2
 80062f8:	2d02      	cmp	r5, #2
 80062fa:	d921      	bls.n	8006340 <LTDC_SetConfig+0xfe>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 80062fc:	f1bc 0f07 	cmp.w	ip, #7
 8006300:	bf14      	ite	ne
 8006302:	2501      	movne	r5, #1
 8006304:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006306:	6adf      	ldr	r7, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006308:	1ba4      	subs	r4, r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800630a:	f007 27e0 	and.w	r7, r7, #3758153728	@ 0xe000e000
 800630e:	62df      	str	r7, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006310:	6a8f      	ldr	r7, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006312:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006314:	436f      	muls	r7, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006316:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006318:	ea44 4407 	orr.w	r4, r4, r7, lsl #16
 800631c:	62dc      	str	r4, [r3, #44]	@ 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800631e:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006320:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8006322:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 8006326:	f024 0407 	bic.w	r4, r4, #7
 800632a:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800632c:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800632e:	5883      	ldr	r3, [r0, r2]
 8006330:	f043 0301 	orr.w	r3, r3, #1
 8006334:	5083      	str	r3, [r0, r2]
}
 8006336:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmp = 4U;
 8006338:	2504      	movs	r5, #4
 800633a:	e7e4      	b.n	8006306 <LTDC_SetConfig+0xc4>
    tmp = 3U;
 800633c:	2503      	movs	r5, #3
 800633e:	e7e2      	b.n	8006306 <LTDC_SetConfig+0xc4>
    tmp = 2U;
 8006340:	2502      	movs	r5, #2
 8006342:	e7e0      	b.n	8006306 <LTDC_SetConfig+0xc4>

08006344 <HAL_LTDC_Init>:
{
 8006344:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006346:	4604      	mov	r4, r0
 8006348:	2800      	cmp	r0, #0
 800634a:	d063      	beq.n	8006414 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800634c:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8006350:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006354:	b91b      	cbnz	r3, 800635e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006356:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 800635a:	f7fa fc4d 	bl	8000bf8 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800635e:	2302      	movs	r3, #2
 8006360:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8006364:	6823      	ldr	r3, [r4, #0]
 8006366:	699a      	ldr	r2, [r3, #24]
 8006368:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 800636c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800636e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8006372:	4302      	orrs	r2, r0
 8006374:	68e0      	ldr	r0, [r4, #12]
 8006376:	6999      	ldr	r1, [r3, #24]
 8006378:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800637a:	6920      	ldr	r0, [r4, #16]
 800637c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800637e:	430a      	orrs	r2, r1
 8006380:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006382:	689a      	ldr	r2, [r3, #8]
 8006384:	4924      	ldr	r1, [pc, #144]	@ (8006418 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006386:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006388:	400a      	ands	r2, r1
 800638a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800638c:	689a      	ldr	r2, [r3, #8]
 800638e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006392:	69a0      	ldr	r0, [r4, #24]
 8006394:	4302      	orrs	r2, r0
 8006396:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006398:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800639a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800639c:	400a      	ands	r2, r1
 800639e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80063a0:	68da      	ldr	r2, [r3, #12]
 80063a2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80063a6:	6a20      	ldr	r0, [r4, #32]
 80063a8:	4302      	orrs	r2, r0
 80063aa:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80063ac:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80063ae:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80063b0:	400a      	ands	r2, r1
 80063b2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80063b4:	691a      	ldr	r2, [r3, #16]
 80063b6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80063ba:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80063bc:	4302      	orrs	r2, r0
 80063be:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80063c0:	695a      	ldr	r2, [r3, #20]
 80063c2:	400a      	ands	r2, r1
 80063c4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80063c6:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80063c8:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80063ca:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80063ce:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80063d0:	430a      	orrs	r2, r1
 80063d2:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80063d4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80063d6:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80063da:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80063de:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80063e2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80063e4:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80063e6:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 80063ea:	432a      	orrs	r2, r5
 80063ec:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80063f0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80063f4:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80063f6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80063f8:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80063fa:	f042 0206 	orr.w	r2, r2, #6
 80063fe:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8006400:	699a      	ldr	r2, [r3, #24]
 8006402:	f042 0201 	orr.w	r2, r2, #1
 8006406:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8006408:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800640a:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800640e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8006412:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006414:	2001      	movs	r0, #1
 8006416:	e7fc      	b.n	8006412 <HAL_LTDC_Init+0xce>
 8006418:	f000f800 	.word	0xf000f800

0800641c <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 800641c:	4770      	bx	lr

0800641e <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 800641e:	4770      	bx	lr

08006420 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006420:	6803      	ldr	r3, [r0, #0]
{
 8006422:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006424:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
{
 8006426:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006428:	0772      	lsls	r2, r6, #29
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800642a:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800642c:	d514      	bpl.n	8006458 <HAL_LTDC_IRQHandler+0x38>
 800642e:	0769      	lsls	r1, r5, #29
 8006430:	d512      	bpl.n	8006458 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8006432:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006434:	f022 0204 	bic.w	r2, r2, #4
 8006438:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800643a:	2204      	movs	r2, #4
 800643c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800643e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8006442:	f043 0301 	orr.w	r3, r3, #1
 8006446:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 800644a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800644c:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006450:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006454:	f7ff ffe2 	bl	800641c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006458:	07b2      	lsls	r2, r6, #30
 800645a:	d516      	bpl.n	800648a <HAL_LTDC_IRQHandler+0x6a>
 800645c:	07ab      	lsls	r3, r5, #30
 800645e:	d514      	bpl.n	800648a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006460:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 8006462:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006464:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006466:	f022 0202 	bic.w	r2, r2, #2
 800646a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800646c:	2202      	movs	r2, #2
 800646e:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8006470:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8006474:	4313      	orrs	r3, r2
 8006476:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800647a:	2304      	movs	r3, #4
 800647c:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8006480:	2300      	movs	r3, #0
 8006482:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006486:	f7ff ffc9 	bl	800641c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800648a:	07f0      	lsls	r0, r6, #31
 800648c:	d510      	bpl.n	80064b0 <HAL_LTDC_IRQHandler+0x90>
 800648e:	07e9      	lsls	r1, r5, #31
 8006490:	d50e      	bpl.n	80064b0 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006492:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 8006494:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006496:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006498:	f022 0201 	bic.w	r2, r2, #1
 800649c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800649e:	2201      	movs	r2, #1
 80064a0:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 80064a2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80064a4:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80064a8:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80064ac:	f7fc fbd2 	bl	8002c54 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80064b0:	0732      	lsls	r2, r6, #28
 80064b2:	d511      	bpl.n	80064d8 <HAL_LTDC_IRQHandler+0xb8>
 80064b4:	072b      	lsls	r3, r5, #28
 80064b6:	d50f      	bpl.n	80064d8 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80064b8:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 80064ba:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80064bc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80064be:	f022 0208 	bic.w	r2, r2, #8
 80064c2:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80064c4:	2208      	movs	r2, #8
 80064c6:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80064c8:	2301      	movs	r3, #1
 80064ca:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80064ce:	2300      	movs	r3, #0
 80064d0:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80064d4:	f7ff ffa3 	bl	800641e <HAL_LTDC_ReloadEventCallback>
}
 80064d8:	bd70      	pop	{r4, r5, r6, pc}

080064da <HAL_LTDC_ConfigLayer>:
{
 80064da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80064de:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
{
 80064e2:	4606      	mov	r6, r0
  __HAL_LOCK(hltdc);
 80064e4:	2b01      	cmp	r3, #1
{
 80064e6:	460f      	mov	r7, r1
 80064e8:	4694      	mov	ip, r2
 80064ea:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80064ee:	d01f      	beq.n	8006530 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80064f0:	2434      	movs	r4, #52	@ 0x34
  __HAL_LOCK(hltdc);
 80064f2:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80064f6:	460d      	mov	r5, r1
 80064f8:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 80064fc:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006500:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006504:	3438      	adds	r4, #56	@ 0x38
 8006506:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006508:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800650a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800650c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800650e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006510:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006512:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006514:	4630      	mov	r0, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006516:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006518:	4662      	mov	r2, ip
 800651a:	4639      	mov	r1, r7
 800651c:	f7ff fe91 	bl	8006242 <LTDC_SetConfig>
  __HAL_UNLOCK(hltdc);
 8006520:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006522:	6833      	ldr	r3, [r6, #0]
 8006524:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8006528:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800652c:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8006530:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006534 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8006534:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
{
 8006538:	4603      	mov	r3, r0
  __HAL_LOCK(hltdc);
 800653a:	2a01      	cmp	r2, #1
 800653c:	f04f 0002 	mov.w	r0, #2
 8006540:	d012      	beq.n	8006568 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006542:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006544:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006548:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 800654a:	f020 0001 	bic.w	r0, r0, #1
 800654e:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8006550:	4806      	ldr	r0, [pc, #24]	@ (800656c <HAL_LTDC_ProgramLineEvent+0x38>)
 8006552:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8006554:	6b51      	ldr	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8006556:	2000      	movs	r0, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8006558:	f041 0101 	orr.w	r1, r1, #1
 800655c:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800655e:	2201      	movs	r2, #1
  __HAL_UNLOCK(hltdc);
 8006560:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_READY;
 8006564:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
}
 8006568:	4770      	bx	lr
 800656a:	bf00      	nop
 800656c:	40016800 	.word	0x40016800

08006570 <HAL_PWREx_ControlVoltageScaling>:

  /* Check the parameter */
  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  /* Get the current voltage scale applied */
  vos_old = READ_BIT(PWR->SVMSR, PWR_SVMSR_ACTVOS);
 8006570:	4b1d      	ldr	r3, [pc, #116]	@ (80065e8 <HAL_PWREx_ControlVoltageScaling+0x78>)
 8006572:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8006574:	f402 3240 	and.w	r2, r2, #196608	@ 0x30000

  /* No change, nothing to do */
  if (vos_old == VoltageScaling)
 8006578:	4282      	cmp	r2, r0
 800657a:	d108      	bne.n	800658e <HAL_PWREx_ControlVoltageScaling+0x1e>
  {
    /* Enable USB BOOST after wake up from Stop mode */
    if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 800657c:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8006580:	d903      	bls.n	800658a <HAL_PWREx_ControlVoltageScaling+0x1a>
    {
      /* Enable USB BOOST */
      SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8006582:	68da      	ldr	r2, [r3, #12]
 8006584:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8006588:	60da      	str	r2, [r3, #12]
    }

    return HAL_OK;
 800658a:	2000      	movs	r0, #0
 800658c:	4770      	bx	lr
   *  The Embedded power distribution (EPOD) must be enabled before switching to
   *  voltage scale 1 / 2 from voltage scale lower.
   */
  if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), (VoltageScaling | PWR_VOSR_BOOSTEN));
 800658e:	68da      	ldr	r2, [r3, #12]
  if (VoltageScaling > PWR_REGULATOR_VOLTAGE_SCALE3)
 8006590:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), (VoltageScaling | PWR_VOSR_BOOSTEN));
 8006594:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 8006598:	ea42 0200 	orr.w	r2, r2, r0
 800659c:	bf88      	it	hi
 800659e:	f442 2280 	orrhi.w	r2, r2, #262144	@ 0x40000
  }
  else
  {
    MODIFY_REG(PWR->VOSR, (PWR_VOSR_VOS | PWR_VOSR_BOOSTEN), VoltageScaling);
 80065a2:	60da      	str	r2, [r3, #12]
  }

  /* Wait until VOSRDY is raised */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 80065a4:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80065a8:	4b10      	ldr	r3, [pc, #64]	@ (80065ec <HAL_PWREx_ControlVoltageScaling+0x7c>)
 80065aa:	2132      	movs	r1, #50	@ 0x32
 80065ac:	681b      	ldr	r3, [r3, #0]
 80065ae:	fbb3 f3f2 	udiv	r3, r3, r2
 80065b2:	434b      	muls	r3, r1
 80065b4:	fbb3 f3f2 	udiv	r3, r3, r2
 80065b8:	3301      	adds	r3, #1
 80065ba:	461a      	mov	r2, r3
  while (HAL_IS_BIT_CLR(PWR->VOSR, PWR_VOSR_VOSRDY) && (timeout != 0U))
 80065bc:	490a      	ldr	r1, [pc, #40]	@ (80065e8 <HAL_PWREx_ControlVoltageScaling+0x78>)
 80065be:	68c8      	ldr	r0, [r1, #12]
 80065c0:	0400      	lsls	r0, r0, #16
 80065c2:	d404      	bmi.n	80065ce <HAL_PWREx_ControlVoltageScaling+0x5e>
 80065c4:	b90a      	cbnz	r2, 80065ca <HAL_PWREx_ControlVoltageScaling+0x5a>
  }

  /* Check time out */
  if (timeout == 0U)
  {
    return HAL_TIMEOUT;
 80065c6:	2003      	movs	r0, #3
  }

  return HAL_OK;
}
 80065c8:	4770      	bx	lr
    timeout--;
 80065ca:	3a01      	subs	r2, #1
 80065cc:	e7f7      	b.n	80065be <HAL_PWREx_ControlVoltageScaling+0x4e>
  if (timeout != 0U)
 80065ce:	2a00      	cmp	r2, #0
 80065d0:	d0f9      	beq.n	80065c6 <HAL_PWREx_ControlVoltageScaling+0x56>
    while ((HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_ACTVOSRDY)) && (timeout != 0U))
 80065d2:	4a05      	ldr	r2, [pc, #20]	@ (80065e8 <HAL_PWREx_ControlVoltageScaling+0x78>)
 80065d4:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 80065d6:	0409      	lsls	r1, r1, #16
 80065d8:	d403      	bmi.n	80065e2 <HAL_PWREx_ControlVoltageScaling+0x72>
 80065da:	2b00      	cmp	r3, #0
 80065dc:	d0f3      	beq.n	80065c6 <HAL_PWREx_ControlVoltageScaling+0x56>
      timeout--;
 80065de:	3b01      	subs	r3, #1
 80065e0:	e7f8      	b.n	80065d4 <HAL_PWREx_ControlVoltageScaling+0x64>
  if (timeout == 0U)
 80065e2:	2b00      	cmp	r3, #0
 80065e4:	d1d1      	bne.n	800658a <HAL_PWREx_ControlVoltageScaling+0x1a>
 80065e6:	e7ee      	b.n	80065c6 <HAL_PWREx_ControlVoltageScaling+0x56>
 80065e8:	46020800 	.word	0x46020800
 80065ec:	2000004c 	.word	0x2000004c

080065f0 <HAL_PWREx_GetVoltageRange>:
  * @brief  Return Voltage Scaling Range.
  * @retval Applied voltage scaling value.
  */
uint32_t HAL_PWREx_GetVoltageRange(void)
{
  return (PWR->SVMSR & PWR_SVMSR_ACTVOS);
 80065f0:	4b02      	ldr	r3, [pc, #8]	@ (80065fc <HAL_PWREx_GetVoltageRange+0xc>)
 80065f2:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
}
 80065f4:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
 80065f8:	4770      	bx	lr
 80065fa:	bf00      	nop
 80065fc:	46020800 	.word	0x46020800

08006600 <HAL_PWREx_ConfigSupply>:

  /* Check the parameter */
  assert_param(IS_PWR_SUPPLY(SupplySource));

  /* Set maximum time out */
  timeout = ((PWR_FLAG_SETTING_DELAY * (SystemCoreClock / 1000U)) / 1000U) + 1U;
 8006600:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006604:	4b12      	ldr	r3, [pc, #72]	@ (8006650 <HAL_PWREx_ConfigSupply+0x50>)
 8006606:	2132      	movs	r1, #50	@ 0x32
 8006608:	681b      	ldr	r3, [r3, #0]
 800660a:	fbb3 f3f2 	udiv	r3, r3, r2
 800660e:	434b      	muls	r3, r1
 8006610:	fbb3 f3f2 	udiv	r3, r3, r2
 8006614:	4a0f      	ldr	r2, [pc, #60]	@ (8006654 <HAL_PWREx_ConfigSupply+0x54>)
 8006616:	3301      	adds	r3, #1

  /* Configure the LDO as system regulator supply */
  if (SupplySource == PWR_LDO_SUPPLY)
  {
    /* Set the power supply configuration */
    CLEAR_BIT(PWR->CR3, PWR_CR3_REGSEL);
 8006618:	6891      	ldr	r1, [r2, #8]
  if (SupplySource == PWR_LDO_SUPPLY)
 800661a:	b950      	cbnz	r0, 8006632 <HAL_PWREx_ConfigSupply+0x32>
    CLEAR_BIT(PWR->CR3, PWR_CR3_REGSEL);
 800661c:	f021 0102 	bic.w	r1, r1, #2
 8006620:	6091      	str	r1, [r2, #8]

    /* Wait until system switch on new regulator */
    while (HAL_IS_BIT_SET(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 8006622:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 8006624:	0788      	lsls	r0, r1, #30
 8006626:	d50e      	bpl.n	8006646 <HAL_PWREx_ConfigSupply+0x46>
 8006628:	b90b      	cbnz	r3, 800662e <HAL_PWREx_ConfigSupply+0x2e>
  }

  /* Check time out */
  if (timeout == 0U)
  {
    return HAL_TIMEOUT;
 800662a:	2003      	movs	r0, #3
 800662c:	4770      	bx	lr
      timeout--;
 800662e:	3b01      	subs	r3, #1
 8006630:	e7f7      	b.n	8006622 <HAL_PWREx_ConfigSupply+0x22>
    SET_BIT(PWR->CR3, PWR_CR3_REGSEL);
 8006632:	f041 0102 	orr.w	r1, r1, #2
 8006636:	6091      	str	r1, [r2, #8]
    while (HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_REGS) && (timeout != 0U))
 8006638:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 800663a:	0789      	lsls	r1, r1, #30
 800663c:	d403      	bmi.n	8006646 <HAL_PWREx_ConfigSupply+0x46>
 800663e:	2b00      	cmp	r3, #0
 8006640:	d0f3      	beq.n	800662a <HAL_PWREx_ConfigSupply+0x2a>
      timeout--;
 8006642:	3b01      	subs	r3, #1
 8006644:	e7f8      	b.n	8006638 <HAL_PWREx_ConfigSupply+0x38>
  if (timeout == 0U)
 8006646:	2b00      	cmp	r3, #0
 8006648:	d0ef      	beq.n	800662a <HAL_PWREx_ConfigSupply+0x2a>
  }

  return HAL_OK;
 800664a:	2000      	movs	r0, #0
}
 800664c:	4770      	bx	lr
 800664e:	bf00      	nop
 8006650:	2000004c 	.word	0x2000004c
 8006654:	46020800 	.word	0x46020800

08006658 <HAL_PWREx_DisableUCPDDeadBattery>:
  *         initialized before doing the disable).
  * @retval None.
  */
void HAL_PWREx_DisableUCPDDeadBattery(void)
{
  SET_BIT(PWR->UCPDR, PWR_UCPDR_UCPD_DBDIS);
 8006658:	4a02      	ldr	r2, [pc, #8]	@ (8006664 <HAL_PWREx_DisableUCPDDeadBattery+0xc>)
 800665a:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
 800665c:	f043 0301 	orr.w	r3, r3, #1
 8006660:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 8006662:	4770      	bx	lr
 8006664:	46020800 	.word	0x46020800

08006668 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_15
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 8006668:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t vos;
  uint32_t latency;  /* default value 0WS */

  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 800666a:	4d2b      	ldr	r5, [pc, #172]	@ (8006718 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
{
 800666c:	4604      	mov	r4, r0
  if (__HAL_RCC_PWR_IS_CLK_ENABLED())
 800666e:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8006672:	075b      	lsls	r3, r3, #29
 8006674:	d518      	bpl.n	80066a8 <RCC_SetFlashLatencyFromMSIRange+0x40>
  {
    vos = HAL_PWREx_GetVoltageRange();
 8006676:	f7ff ffbb 	bl	80065f0 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_ENABLE();
    vos = HAL_PWREx_GetVoltageRange();
    __HAL_RCC_PWR_CLK_DISABLE();
  }

  if ((vos == PWR_REGULATOR_VOLTAGE_SCALE1) || (vos == PWR_REGULATOR_VOLTAGE_SCALE2))
 800667a:	f420 3380 	bic.w	r3, r0, #65536	@ 0x10000
 800667e:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006682:	d126      	bne.n	80066d2 <RCC_SetFlashLatencyFromMSIRange+0x6a>
  {

    if (msirange < RCC_MSIRANGE_1)
 8006684:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 8006688:	bf2c      	ite	cs
 800668a:	2000      	movcs	r0, #0
 800668c:	2001      	movcc	r0, #1
        }
      }
    }
  }

  __HAL_FLASH_SET_LATENCY(latency);
 800668e:	4a23      	ldr	r2, [pc, #140]	@ (800671c <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8006690:	6813      	ldr	r3, [r2, #0]
 8006692:	f023 030f 	bic.w	r3, r3, #15
 8006696:	4303      	orrs	r3, r0
 8006698:	6013      	str	r3, [r2, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
  memory by reading the FLASH_ACR register */
  if ((FLASH->ACR & FLASH_ACR_LATENCY) != latency)
 800669a:	6813      	ldr	r3, [r2, #0]
 800669c:	f003 030f 	and.w	r3, r3, #15
 80066a0:	1a18      	subs	r0, r3, r0
 80066a2:	bf18      	it	ne
 80066a4:	2001      	movne	r0, #1
 80066a6:	e01b      	b.n	80066e0 <RCC_SetFlashLatencyFromMSIRange+0x78>
    __HAL_RCC_PWR_CLK_ENABLE();
 80066a8:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80066ac:	f043 0304 	orr.w	r3, r3, #4
 80066b0:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 80066b4:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80066b8:	f003 0304 	and.w	r3, r3, #4
 80066bc:	9301      	str	r3, [sp, #4]
 80066be:	9b01      	ldr	r3, [sp, #4]
    vos = HAL_PWREx_GetVoltageRange();
 80066c0:	f7ff ff96 	bl	80065f0 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_DISABLE();
 80066c4:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80066c8:	f023 0304 	bic.w	r3, r3, #4
 80066cc:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 80066d0:	e7d3      	b.n	800667a <RCC_SetFlashLatencyFromMSIRange+0x12>
    if (msirange < RCC_MSIRANGE_1)
 80066d2:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 80066d6:	d205      	bcs.n	80066e4 <RCC_SetFlashLatencyFromMSIRange+0x7c>
      if (vos == PWR_REGULATOR_VOLTAGE_SCALE3)
 80066d8:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80066dc:	d015      	beq.n	800670a <RCC_SetFlashLatencyFromMSIRange+0xa2>
        return HAL_ERROR;
 80066de:	2001      	movs	r0, #1
  {
    return HAL_ERROR;
  }

  return HAL_OK;
}
 80066e0:	b003      	add	sp, #12
 80066e2:	bd30      	pop	{r4, r5, pc}
      if (msirange > RCC_MSIRANGE_2)
 80066e4:	f1b4 5f00 	cmp.w	r4, #536870912	@ 0x20000000
 80066e8:	d906      	bls.n	80066f8 <RCC_SetFlashLatencyFromMSIRange+0x90>
        if (vos == PWR_REGULATOR_VOLTAGE_SCALE4)
 80066ea:	b980      	cbnz	r0, 800670e <RCC_SetFlashLatencyFromMSIRange+0xa6>
          if (msirange > RCC_MSIRANGE_3)
 80066ec:	f1b4 5f40 	cmp.w	r4, #805306368	@ 0x30000000
 80066f0:	bf8c      	ite	hi
 80066f2:	2000      	movhi	r0, #0
 80066f4:	2001      	movls	r0, #1
 80066f6:	e7ca      	b.n	800668e <RCC_SetFlashLatencyFromMSIRange+0x26>
        if (msirange == RCC_MSIRANGE_1)
 80066f8:	f1b4 5f80 	cmp.w	r4, #268435456	@ 0x10000000
 80066fc:	d109      	bne.n	8006712 <RCC_SetFlashLatencyFromMSIRange+0xaa>
          latency = FLASH_LATENCY_1; /* 1WS */
 80066fe:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8006702:	bf14      	ite	ne
 8006704:	2002      	movne	r0, #2
 8006706:	2001      	moveq	r0, #1
 8006708:	e7c1      	b.n	800668e <RCC_SetFlashLatencyFromMSIRange+0x26>
        latency = FLASH_LATENCY_3; /* 3WS */
 800670a:	2003      	movs	r0, #3
 800670c:	e7bf      	b.n	800668e <RCC_SetFlashLatencyFromMSIRange+0x26>
      latency = FLASH_LATENCY_0; /* 0WS */
 800670e:	2000      	movs	r0, #0
 8006710:	e7bd      	b.n	800668e <RCC_SetFlashLatencyFromMSIRange+0x26>
          latency = FLASH_LATENCY_1; /* 1WS */
 8006712:	2001      	movs	r0, #1
 8006714:	e7bb      	b.n	800668e <RCC_SetFlashLatencyFromMSIRange+0x26>
 8006716:	bf00      	nop
 8006718:	46020c00 	.word	0x46020c00
 800671c:	40022000 	.word	0x40022000

08006720 <HAL_RCC_GetSysClockFreq>:
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006720:	4a40      	ldr	r2, [pc, #256]	@ (8006824 <HAL_RCC_GetSysClockFreq+0x104>)
{
 8006722:	b510      	push	{r4, lr}
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006724:	69d3      	ldr	r3, [r2, #28]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 8006726:	6a91      	ldr	r1, [r2, #40]	@ 0x28
  if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 8006728:	f013 030c 	ands.w	r3, r3, #12
 800672c:	d005      	beq.n	800673a <HAL_RCC_GetSysClockFreq+0x1a>
 800672e:	2b0c      	cmp	r3, #12
 8006730:	d148      	bne.n	80067c4 <HAL_RCC_GetSysClockFreq+0xa4>
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 8006732:	f001 0103 	and.w	r1, r1, #3
      ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 8006736:	2901      	cmp	r1, #1
 8006738:	d144      	bne.n	80067c4 <HAL_RCC_GetSysClockFreq+0xa4>
    if (READ_BIT(RCC->ICSCR1, RCC_ICSCR1_MSIRGSEL) == 0U)
 800673a:	6891      	ldr	r1, [r2, #8]
 800673c:	0209      	lsls	r1, r1, #8
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 800673e:	bf54      	ite	pl
 8006740:	f8d2 20f4 	ldrpl.w	r2, [r2, #244]	@ 0xf4
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 8006744:	6892      	ldrmi	r2, [r2, #8]
    msirange = MSIRangeTable[msirange];
 8006746:	4938      	ldr	r1, [pc, #224]	@ (8006828 <HAL_RCC_GetSysClockFreq+0x108>)
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 8006748:	bf54      	ite	pl
 800674a:	f3c2 3203 	ubfxpl	r2, r2, #12, #4
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 800674e:	0f12      	lsrmi	r2, r2, #28
    msirange = MSIRangeTable[msirange];
 8006750:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8006754:	2b00      	cmp	r3, #0
 8006756:	d063      	beq.n	8006820 <HAL_RCC_GetSysClockFreq+0x100>
  uint32_t sysclockfreq = 0U;
 8006758:	2000      	movs	r0, #0
  if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800675a:	2b0c      	cmp	r3, #12
 800675c:	d15e      	bne.n	800681c <HAL_RCC_GetSysClockFreq+0xfc>
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 800675e:	4931      	ldr	r1, [pc, #196]	@ (8006824 <HAL_RCC_GetSysClockFreq+0x104>)
 8006760:	eddf 5a32 	vldr	s11, [pc, #200]	@ 800682c <HAL_RCC_GetSysClockFreq+0x10c>
 8006764:	6a88      	ldr	r0, [r1, #40]	@ 0x28
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 8006766:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 8006768:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 800676a:	f3c3 2303 	ubfx	r3, r3, #8, #4
 800676e:	3301      	adds	r3, #1
 8006770:	ee07 3a90 	vmov	s15, r3
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 8006774:	6b8b      	ldr	r3, [r1, #56]	@ 0x38
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 8006776:	f3c4 1400 	ubfx	r4, r4, #4, #1
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 800677a:	f3c3 03cc 	ubfx	r3, r3, #3, #13
 800677e:	4363      	muls	r3, r4
 8006780:	ee07 3a10 	vmov	s14, r3
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 8006784:	f000 0003 	and.w	r0, r0, #3
    switch (pllsource)
 8006788:	2802      	cmp	r0, #2
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 800678a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
    switch (pllsource)
 800678e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006792:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8006796:	d021      	beq.n	80067dc <HAL_RCC_GetSysClockFreq+0xbc>
 8006798:	2803      	cmp	r0, #3
 800679a:	d01f      	beq.n	80067dc <HAL_RCC_GetSysClockFreq+0xbc>
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 800679c:	ee06 2a90 	vmov	s13, r2
 80067a0:	eef8 6a66 	vcvt.f32.u32	s13, s13
 80067a4:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80067a6:	ee86 5aa7 	vdiv.f32	s10, s13, s15
 80067aa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80067ae:	ee07 3a90 	vmov	s15, r3
 80067b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80067b6:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 80067ba:	ee77 7a86 	vadd.f32	s15, s15, s12
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80067be:	ee67 7a85 	vmul.f32	s15, s15, s10
        break;
 80067c2:	e01c      	b.n	80067fe <HAL_RCC_GetSysClockFreq+0xde>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 80067c4:	69d2      	ldr	r2, [r2, #28]
 80067c6:	f002 020c 	and.w	r2, r2, #12
 80067ca:	2a04      	cmp	r2, #4
 80067cc:	d004      	beq.n	80067d8 <HAL_RCC_GetSysClockFreq+0xb8>
  else if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 80067ce:	2b08      	cmp	r3, #8
 80067d0:	d025      	beq.n	800681e <HAL_RCC_GetSysClockFreq+0xfe>
  uint32_t sysclockfreq = 0U;
 80067d2:	2000      	movs	r0, #0
  uint32_t msirange = 0U;
 80067d4:	2200      	movs	r2, #0
 80067d6:	e7c0      	b.n	800675a <HAL_RCC_GetSysClockFreq+0x3a>
    sysclockfreq = HSI_VALUE;
 80067d8:	4815      	ldr	r0, [pc, #84]	@ (8006830 <HAL_RCC_GetSysClockFreq+0x110>)
 80067da:	e7fb      	b.n	80067d4 <HAL_RCC_GetSysClockFreq+0xb4>
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80067dc:	ed9f 5a15 	vldr	s10, [pc, #84]	@ 8006834 <HAL_RCC_GetSysClockFreq+0x114>
 80067e0:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80067e2:	eec5 6a27 	vdiv.f32	s13, s10, s15
 80067e6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80067ea:	ee07 3a90 	vmov	s15, r3
 80067ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80067f2:	eee7 7a25 	vfma.f32	s15, s14, s11
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 80067f6:	ee77 7a86 	vadd.f32	s15, s15, s12
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80067fa:	ee67 7aa6 	vmul.f32	s15, s15, s13
    pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U);
 80067fe:	4b09      	ldr	r3, [pc, #36]	@ (8006824 <HAL_RCC_GetSysClockFreq+0x104>)
 8006800:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006802:	f3c3 6306 	ubfx	r3, r3, #24, #7
 8006806:	3301      	adds	r3, #1
    sysclockfreq = (uint32_t)(float_t)((float_t)pllvco / (float_t)pllr);
 8006808:	ee07 3a10 	vmov	s14, r3
 800680c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006810:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8006814:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 8006818:	ee17 0a90 	vmov	r0, s15
}
 800681c:	bd10      	pop	{r4, pc}
    sysclockfreq = HSE_VALUE;
 800681e:	4a04      	ldr	r2, [pc, #16]	@ (8006830 <HAL_RCC_GetSysClockFreq+0x110>)
  uint32_t msirange = 0U;
 8006820:	4610      	mov	r0, r2
 8006822:	e7fb      	b.n	800681c <HAL_RCC_GetSysClockFreq+0xfc>
 8006824:	46020c00 	.word	0x46020c00
 8006828:	080355dc 	.word	0x080355dc
 800682c:	39000000 	.word	0x39000000
 8006830:	00f42400 	.word	0x00f42400
 8006834:	4b742400 	.word	0x4b742400

08006838 <HAL_RCC_ClockConfig>:
{
 8006838:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800683c:	460d      	mov	r5, r1
  if (pRCC_ClkInitStruct == NULL)
 800683e:	4604      	mov	r4, r0
 8006840:	b918      	cbnz	r0, 800684a <HAL_RCC_ClockConfig+0x12>
    return HAL_ERROR;
 8006842:	2001      	movs	r0, #1
}
 8006844:	b002      	add	sp, #8
 8006846:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800684a:	4a9c      	ldr	r2, [pc, #624]	@ (8006abc <HAL_RCC_ClockConfig+0x284>)
 800684c:	6813      	ldr	r3, [r2, #0]
 800684e:	f003 030f 	and.w	r3, r3, #15
 8006852:	428b      	cmp	r3, r1
 8006854:	d36e      	bcc.n	8006934 <HAL_RCC_ClockConfig+0xfc>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 8006856:	6823      	ldr	r3, [r4, #0]
 8006858:	06d8      	lsls	r0, r3, #27
 800685a:	d477      	bmi.n	800694c <HAL_RCC_ClockConfig+0x114>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800685c:	0719      	lsls	r1, r3, #28
 800685e:	d50d      	bpl.n	800687c <HAL_RCC_ClockConfig+0x44>
    if ((pRCC_ClkInitStruct->APB2CLKDivider) > ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 8006860:	4997      	ldr	r1, [pc, #604]	@ (8006ac0 <HAL_RCC_ClockConfig+0x288>)
 8006862:	6920      	ldr	r0, [r4, #16]
 8006864:	6a0a      	ldr	r2, [r1, #32]
 8006866:	0912      	lsrs	r2, r2, #4
 8006868:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 800686c:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 800686e:	bf81      	itttt	hi
 8006870:	6a0a      	ldrhi	r2, [r1, #32]
 8006872:	f422 62e0 	bichi.w	r2, r2, #1792	@ 0x700
 8006876:	ea42 1200 	orrhi.w	r2, r2, r0, lsl #4
 800687a:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800687c:	075a      	lsls	r2, r3, #29
 800687e:	d50b      	bpl.n	8006898 <HAL_RCC_ClockConfig+0x60>
    if ((pRCC_ClkInitStruct->APB1CLKDivider) > (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 8006880:	498f      	ldr	r1, [pc, #572]	@ (8006ac0 <HAL_RCC_ClockConfig+0x288>)
 8006882:	68e0      	ldr	r0, [r4, #12]
 8006884:	6a0a      	ldr	r2, [r1, #32]
 8006886:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 800688a:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 800688c:	bf81      	itttt	hi
 800688e:	6a0a      	ldrhi	r2, [r1, #32]
 8006890:	f022 0270 	bichi.w	r2, r2, #112	@ 0x70
 8006894:	4302      	orrhi	r2, r0
 8006896:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006898:	079f      	lsls	r7, r3, #30
 800689a:	d50b      	bpl.n	80068b4 <HAL_RCC_ClockConfig+0x7c>
    if ((pRCC_ClkInitStruct->AHBCLKDivider) > (RCC->CFGR2 & RCC_CFGR2_HPRE))
 800689c:	4988      	ldr	r1, [pc, #544]	@ (8006ac0 <HAL_RCC_ClockConfig+0x288>)
 800689e:	68a0      	ldr	r0, [r4, #8]
 80068a0:	6a0a      	ldr	r2, [r1, #32]
 80068a2:	f002 020f 	and.w	r2, r2, #15
 80068a6:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 80068a8:	bf81      	itttt	hi
 80068aa:	6a0a      	ldrhi	r2, [r1, #32]
 80068ac:	f022 020f 	bichi.w	r2, r2, #15
 80068b0:	4302      	orrhi	r2, r0
 80068b2:	620a      	strhi	r2, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80068b4:	07de      	lsls	r6, r3, #31
 80068b6:	d456      	bmi.n	8006966 <HAL_RCC_ClockConfig+0x12e>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80068b8:	6822      	ldr	r2, [r4, #0]
 80068ba:	0790      	lsls	r0, r2, #30
 80068bc:	f100 80d8 	bmi.w	8006a70 <HAL_RCC_ClockConfig+0x238>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80068c0:	497e      	ldr	r1, [pc, #504]	@ (8006abc <HAL_RCC_ClockConfig+0x284>)
 80068c2:	680b      	ldr	r3, [r1, #0]
 80068c4:	f003 030f 	and.w	r3, r3, #15
 80068c8:	42ab      	cmp	r3, r5
 80068ca:	f200 80de 	bhi.w	8006a8a <HAL_RCC_ClockConfig+0x252>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80068ce:	0750      	lsls	r0, r2, #29
 80068d0:	f100 80e7 	bmi.w	8006aa2 <HAL_RCC_ClockConfig+0x26a>
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80068d4:	0711      	lsls	r1, r2, #28
 80068d6:	d50d      	bpl.n	80068f4 <HAL_RCC_ClockConfig+0xbc>
    if ((pRCC_ClkInitStruct->APB2CLKDivider) < ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 80068d8:	4979      	ldr	r1, [pc, #484]	@ (8006ac0 <HAL_RCC_ClockConfig+0x288>)
 80068da:	6920      	ldr	r0, [r4, #16]
 80068dc:	6a0b      	ldr	r3, [r1, #32]
 80068de:	091b      	lsrs	r3, r3, #4
 80068e0:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80068e4:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pRCC_ClkInitStruct->APB2CLKDivider) << 4));
 80068e6:	bf3f      	itttt	cc
 80068e8:	6a0b      	ldrcc	r3, [r1, #32]
 80068ea:	f423 63e0 	biccc.w	r3, r3, #1792	@ 0x700
 80068ee:	ea43 1300 	orrcc.w	r3, r3, r0, lsl #4
 80068f2:	620b      	strcc	r3, [r1, #32]
  if (((pRCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 80068f4:	06d3      	lsls	r3, r2, #27
 80068f6:	d50b      	bpl.n	8006910 <HAL_RCC_ClockConfig+0xd8>
    if ((pRCC_ClkInitStruct->APB3CLKDivider) < (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 80068f8:	4a71      	ldr	r2, [pc, #452]	@ (8006ac0 <HAL_RCC_ClockConfig+0x288>)
 80068fa:	6961      	ldr	r1, [r4, #20]
 80068fc:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 80068fe:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8006902:	4299      	cmp	r1, r3
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, (pRCC_ClkInitStruct->APB3CLKDivider));
 8006904:	bf3f      	itttt	cc
 8006906:	6a53      	ldrcc	r3, [r2, #36]	@ 0x24
 8006908:	f023 0370 	biccc.w	r3, r3, #112	@ 0x70
 800690c:	430b      	orrcc	r3, r1
 800690e:	6253      	strcc	r3, [r2, #36]	@ 0x24
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8006910:	f7ff ff06 	bl	8006720 <HAL_RCC_GetSysClockFreq>
 8006914:	4b6a      	ldr	r3, [pc, #424]	@ (8006ac0 <HAL_RCC_ClockConfig+0x288>)
 8006916:	4a6b      	ldr	r2, [pc, #428]	@ (8006ac4 <HAL_RCC_ClockConfig+0x28c>)
 8006918:	6a1b      	ldr	r3, [r3, #32]
 800691a:	f003 030f 	and.w	r3, r3, #15
 800691e:	5cd3      	ldrb	r3, [r2, r3]
 8006920:	40d8      	lsrs	r0, r3
 8006922:	4b69      	ldr	r3, [pc, #420]	@ (8006ac8 <HAL_RCC_ClockConfig+0x290>)
 8006924:	6018      	str	r0, [r3, #0]
  status = HAL_InitTick(uwTickPrio);
 8006926:	4b69      	ldr	r3, [pc, #420]	@ (8006acc <HAL_RCC_ClockConfig+0x294>)
 8006928:	6818      	ldr	r0, [r3, #0]
}
 800692a:	b002      	add	sp, #8
 800692c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  status = HAL_InitTick(uwTickPrio);
 8006930:	f7fa ba2e 	b.w	8000d90 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006934:	6813      	ldr	r3, [r2, #0]
 8006936:	f023 030f 	bic.w	r3, r3, #15
 800693a:	430b      	orrs	r3, r1
 800693c:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800693e:	6813      	ldr	r3, [r2, #0]
 8006940:	f003 030f 	and.w	r3, r3, #15
 8006944:	428b      	cmp	r3, r1
 8006946:	f47f af7c 	bne.w	8006842 <HAL_RCC_ClockConfig+0xa>
 800694a:	e784      	b.n	8006856 <HAL_RCC_ClockConfig+0x1e>
    if ((pRCC_ClkInitStruct->APB3CLKDivider) > (RCC->CFGR3 & RCC_CFGR3_PPRE3))
 800694c:	495c      	ldr	r1, [pc, #368]	@ (8006ac0 <HAL_RCC_ClockConfig+0x288>)
 800694e:	6960      	ldr	r0, [r4, #20]
 8006950:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8006952:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8006956:	4290      	cmp	r0, r2
      MODIFY_REG(RCC->CFGR3, RCC_CFGR3_PPRE3, pRCC_ClkInitStruct->APB3CLKDivider);
 8006958:	bf81      	itttt	hi
 800695a:	6a4a      	ldrhi	r2, [r1, #36]	@ 0x24
 800695c:	f022 0270 	bichi.w	r2, r2, #112	@ 0x70
 8006960:	4302      	orrhi	r2, r0
 8006962:	624a      	strhi	r2, [r1, #36]	@ 0x24
 8006964:	e77a      	b.n	800685c <HAL_RCC_ClockConfig+0x24>
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8006966:	6862      	ldr	r2, [r4, #4]
 8006968:	4b55      	ldr	r3, [pc, #340]	@ (8006ac0 <HAL_RCC_ClockConfig+0x288>)
 800696a:	2a03      	cmp	r2, #3
 800696c:	d14e      	bne.n	8006a0c <HAL_RCC_ClockConfig+0x1d4>
      if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800696e:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006972:	0751      	lsls	r1, r2, #29
 8006974:	d43d      	bmi.n	80069f2 <HAL_RCC_ClockConfig+0x1ba>
        pwrclkchanged = SET;
 8006976:	2701      	movs	r7, #1
        __HAL_RCC_PWR_CLK_ENABLE();
 8006978:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 800697c:	f042 0204 	orr.w	r2, r2, #4
 8006980:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8006984:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006988:	f003 0304 	and.w	r3, r3, #4
 800698c:	9301      	str	r3, [sp, #4]
 800698e:	9b01      	ldr	r3, [sp, #4]
      tickstart = HAL_GetTick();
 8006990:	f7fd f9a8 	bl	8003ce4 <HAL_GetTick>
      if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) != 0U)
 8006994:	f8df 8138 	ldr.w	r8, [pc, #312]	@ 8006ad0 <HAL_RCC_ClockConfig+0x298>
      tickstart = HAL_GetTick();
 8006998:	4606      	mov	r6, r0
      if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) != 0U)
 800699a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800699e:	035a      	lsls	r2, r3, #13
 80069a0:	d429      	bmi.n	80069f6 <HAL_RCC_ClockConfig+0x1be>
      if (pwrclkchanged == SET)
 80069a2:	4b47      	ldr	r3, [pc, #284]	@ (8006ac0 <HAL_RCC_ClockConfig+0x288>)
 80069a4:	b12f      	cbz	r7, 80069b2 <HAL_RCC_ClockConfig+0x17a>
        __HAL_RCC_PWR_CLK_DISABLE();
 80069a6:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 80069aa:	f022 0204 	bic.w	r2, r2, #4
 80069ae:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
      if (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 80069b2:	681b      	ldr	r3, [r3, #0]
 80069b4:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80069b8:	f43f af43 	beq.w	8006842 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pRCC_ClkInitStruct->SYSCLKSource);
 80069bc:	4e40      	ldr	r6, [pc, #256]	@ (8006ac0 <HAL_RCC_ClockConfig+0x288>)
 80069be:	6862      	ldr	r2, [r4, #4]
 80069c0:	69f3      	ldr	r3, [r6, #28]
        if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80069c2:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pRCC_ClkInitStruct->SYSCLKSource);
 80069c6:	f023 0303 	bic.w	r3, r3, #3
 80069ca:	4313      	orrs	r3, r2
 80069cc:	61f3      	str	r3, [r6, #28]
    tickstart = HAL_GetTick();
 80069ce:	f7fd f989 	bl	8003ce4 <HAL_GetTick>
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80069d2:	6863      	ldr	r3, [r4, #4]
    tickstart = HAL_GetTick();
 80069d4:	4607      	mov	r7, r0
    if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80069d6:	2b03      	cmp	r3, #3
 80069d8:	d125      	bne.n	8006a26 <HAL_RCC_ClockConfig+0x1ee>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80069da:	69f3      	ldr	r3, [r6, #28]
 80069dc:	f003 030c 	and.w	r3, r3, #12
 80069e0:	2b0c      	cmp	r3, #12
 80069e2:	f43f af69 	beq.w	80068b8 <HAL_RCC_ClockConfig+0x80>
        if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80069e6:	f7fd f97d 	bl	8003ce4 <HAL_GetTick>
 80069ea:	1bc0      	subs	r0, r0, r7
 80069ec:	4540      	cmp	r0, r8
 80069ee:	d9f4      	bls.n	80069da <HAL_RCC_ClockConfig+0x1a2>
 80069f0:	e00a      	b.n	8006a08 <HAL_RCC_ClockConfig+0x1d0>
    FlagStatus  pwrclkchanged = RESET;
 80069f2:	2700      	movs	r7, #0
 80069f4:	e7cc      	b.n	8006990 <HAL_RCC_ClockConfig+0x158>
        while (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTRDY) == 0U)
 80069f6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80069fa:	045b      	lsls	r3, r3, #17
 80069fc:	d4d1      	bmi.n	80069a2 <HAL_RCC_ClockConfig+0x16a>
          if ((HAL_GetTick() - tickstart) > EPOD_TIMEOUT_VALUE)
 80069fe:	f7fd f971 	bl	8003ce4 <HAL_GetTick>
 8006a02:	1b80      	subs	r0, r0, r6
 8006a04:	2802      	cmp	r0, #2
 8006a06:	d9f6      	bls.n	80069f6 <HAL_RCC_ClockConfig+0x1be>
            return HAL_TIMEOUT;
 8006a08:	2003      	movs	r0, #3
 8006a0a:	e71b      	b.n	8006844 <HAL_RCC_ClockConfig+0xc>
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006a0c:	2a02      	cmp	r2, #2
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8006a0e:	681b      	ldr	r3, [r3, #0]
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006a10:	d102      	bne.n	8006a18 <HAL_RCC_ClockConfig+0x1e0>
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8006a12:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
 8006a16:	e7cf      	b.n	80069b8 <HAL_RCC_ClockConfig+0x180>
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 8006a18:	b912      	cbnz	r2, 8006a20 <HAL_RCC_ClockConfig+0x1e8>
        if (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 8006a1a:	f013 0f04 	tst.w	r3, #4
 8006a1e:	e7cb      	b.n	80069b8 <HAL_RCC_ClockConfig+0x180>
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8006a20:	f413 6f80 	tst.w	r3, #1024	@ 0x400
 8006a24:	e7c8      	b.n	80069b8 <HAL_RCC_ClockConfig+0x180>
      if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006a26:	2b02      	cmp	r3, #2
 8006a28:	d10b      	bne.n	8006a42 <HAL_RCC_ClockConfig+0x20a>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8006a2a:	69f3      	ldr	r3, [r6, #28]
 8006a2c:	f003 030c 	and.w	r3, r3, #12
 8006a30:	2b08      	cmp	r3, #8
 8006a32:	f43f af41 	beq.w	80068b8 <HAL_RCC_ClockConfig+0x80>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006a36:	f7fd f955 	bl	8003ce4 <HAL_GetTick>
 8006a3a:	1bc0      	subs	r0, r0, r7
 8006a3c:	4540      	cmp	r0, r8
 8006a3e:	d9f4      	bls.n	8006a2a <HAL_RCC_ClockConfig+0x1f2>
 8006a40:	e7e2      	b.n	8006a08 <HAL_RCC_ClockConfig+0x1d0>
      else if (pRCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 8006a42:	b97b      	cbnz	r3, 8006a64 <HAL_RCC_ClockConfig+0x22c>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 8006a44:	69f3      	ldr	r3, [r6, #28]
 8006a46:	f013 0f0c 	tst.w	r3, #12
 8006a4a:	f43f af35 	beq.w	80068b8 <HAL_RCC_ClockConfig+0x80>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006a4e:	f7fd f949 	bl	8003ce4 <HAL_GetTick>
 8006a52:	1bc0      	subs	r0, r0, r7
 8006a54:	4540      	cmp	r0, r8
 8006a56:	d9f5      	bls.n	8006a44 <HAL_RCC_ClockConfig+0x20c>
 8006a58:	e7d6      	b.n	8006a08 <HAL_RCC_ClockConfig+0x1d0>
          if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006a5a:	f7fd f943 	bl	8003ce4 <HAL_GetTick>
 8006a5e:	1bc0      	subs	r0, r0, r7
 8006a60:	4540      	cmp	r0, r8
 8006a62:	d8d1      	bhi.n	8006a08 <HAL_RCC_ClockConfig+0x1d0>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8006a64:	69f3      	ldr	r3, [r6, #28]
 8006a66:	f003 030c 	and.w	r3, r3, #12
 8006a6a:	2b04      	cmp	r3, #4
 8006a6c:	d1f5      	bne.n	8006a5a <HAL_RCC_ClockConfig+0x222>
 8006a6e:	e723      	b.n	80068b8 <HAL_RCC_ClockConfig+0x80>
    if ((pRCC_ClkInitStruct->AHBCLKDivider) < (RCC->CFGR2 & RCC_CFGR2_HPRE))
 8006a70:	4913      	ldr	r1, [pc, #76]	@ (8006ac0 <HAL_RCC_ClockConfig+0x288>)
 8006a72:	68a0      	ldr	r0, [r4, #8]
 8006a74:	6a0b      	ldr	r3, [r1, #32]
 8006a76:	f003 030f 	and.w	r3, r3, #15
 8006a7a:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pRCC_ClkInitStruct->AHBCLKDivider);
 8006a7c:	bf3f      	itttt	cc
 8006a7e:	6a0b      	ldrcc	r3, [r1, #32]
 8006a80:	f023 030f 	biccc.w	r3, r3, #15
 8006a84:	4303      	orrcc	r3, r0
 8006a86:	620b      	strcc	r3, [r1, #32]
 8006a88:	e71a      	b.n	80068c0 <HAL_RCC_ClockConfig+0x88>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006a8a:	680b      	ldr	r3, [r1, #0]
 8006a8c:	f023 030f 	bic.w	r3, r3, #15
 8006a90:	432b      	orrs	r3, r5
 8006a92:	600b      	str	r3, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006a94:	680b      	ldr	r3, [r1, #0]
 8006a96:	f003 030f 	and.w	r3, r3, #15
 8006a9a:	42ab      	cmp	r3, r5
 8006a9c:	f47f aed1 	bne.w	8006842 <HAL_RCC_ClockConfig+0xa>
 8006aa0:	e715      	b.n	80068ce <HAL_RCC_ClockConfig+0x96>
    if ((pRCC_ClkInitStruct->APB1CLKDivider) < (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 8006aa2:	4907      	ldr	r1, [pc, #28]	@ (8006ac0 <HAL_RCC_ClockConfig+0x288>)
 8006aa4:	68e0      	ldr	r0, [r4, #12]
 8006aa6:	6a0b      	ldr	r3, [r1, #32]
 8006aa8:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8006aac:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pRCC_ClkInitStruct->APB1CLKDivider);
 8006aae:	bf3f      	itttt	cc
 8006ab0:	6a0b      	ldrcc	r3, [r1, #32]
 8006ab2:	f023 0370 	biccc.w	r3, r3, #112	@ 0x70
 8006ab6:	4303      	orrcc	r3, r0
 8006ab8:	620b      	strcc	r3, [r1, #32]
 8006aba:	e70b      	b.n	80068d4 <HAL_RCC_ClockConfig+0x9c>
 8006abc:	40022000 	.word	0x40022000
 8006ac0:	46020c00 	.word	0x46020c00
 8006ac4:	08035624 	.word	0x08035624
 8006ac8:	2000004c 	.word	0x2000004c
 8006acc:	20000054 	.word	0x20000054
 8006ad0:	46020800 	.word	0x46020800

08006ad4 <HAL_RCC_GetHCLKFreq>:
{
 8006ad4:	b508      	push	{r3, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8006ad6:	f7ff fe23 	bl	8006720 <HAL_RCC_GetSysClockFreq>
 8006ada:	4b05      	ldr	r3, [pc, #20]	@ (8006af0 <HAL_RCC_GetHCLKFreq+0x1c>)
 8006adc:	4a05      	ldr	r2, [pc, #20]	@ (8006af4 <HAL_RCC_GetHCLKFreq+0x20>)
 8006ade:	6a1b      	ldr	r3, [r3, #32]
 8006ae0:	f003 030f 	and.w	r3, r3, #15
 8006ae4:	5cd3      	ldrb	r3, [r2, r3]
 8006ae6:	40d8      	lsrs	r0, r3
 8006ae8:	4b03      	ldr	r3, [pc, #12]	@ (8006af8 <HAL_RCC_GetHCLKFreq+0x24>)
 8006aea:	6018      	str	r0, [r3, #0]
}
 8006aec:	bd08      	pop	{r3, pc}
 8006aee:	bf00      	nop
 8006af0:	46020c00 	.word	0x46020c00
 8006af4:	08035624 	.word	0x08035624
 8006af8:	2000004c 	.word	0x2000004c

08006afc <HAL_RCC_OscConfig>:
{
 8006afc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  if (pRCC_OscInitStruct == NULL)
 8006b00:	4604      	mov	r4, r0
 8006b02:	2800      	cmp	r0, #0
 8006b04:	d039      	beq.n	8006b7a <HAL_RCC_OscConfig+0x7e>
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006b06:	4ba3      	ldr	r3, [pc, #652]	@ (8006d94 <HAL_RCC_OscConfig+0x298>)
 8006b08:	69de      	ldr	r6, [r3, #28]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8006b0a:	6a9f      	ldr	r7, [r3, #40]	@ 0x28
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006b0c:	6803      	ldr	r3, [r0, #0]
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006b0e:	f006 060c 	and.w	r6, r6, #12
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006b12:	06d8      	lsls	r0, r3, #27
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8006b14:	f007 0703 	and.w	r7, r7, #3
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8006b18:	f140 809a 	bpl.w	8006c50 <HAL_RCC_OscConfig+0x154>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 8006b1c:	69e3      	ldr	r3, [r4, #28]
 8006b1e:	b11e      	cbz	r6, 8006b28 <HAL_RCC_OscConfig+0x2c>
 8006b20:	2e0c      	cmp	r6, #12
 8006b22:	d175      	bne.n	8006c10 <HAL_RCC_OscConfig+0x114>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_MSI)))
 8006b24:	2f01      	cmp	r7, #1
 8006b26:	d173      	bne.n	8006c10 <HAL_RCC_OscConfig+0x114>
      if (pRCC_OscInitStruct->MSIState == RCC_MSI_OFF)
 8006b28:	b33b      	cbz	r3, 8006b7a <HAL_RCC_OscConfig+0x7e>
        if (pRCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 8006b2a:	4d9a      	ldr	r5, [pc, #616]	@ (8006d94 <HAL_RCC_OscConfig+0x298>)
 8006b2c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 8006b2e:	68ab      	ldr	r3, [r5, #8]
 8006b30:	0219      	lsls	r1, r3, #8
 8006b32:	bf56      	itet	pl
 8006b34:	f8d5 30f4 	ldrpl.w	r3, [r5, #244]	@ 0xf4
 8006b38:	68ab      	ldrmi	r3, [r5, #8]
 8006b3a:	041b      	lslpl	r3, r3, #16
 8006b3c:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 8006b40:	4298      	cmp	r0, r3
 8006b42:	d938      	bls.n	8006bb6 <HAL_RCC_OscConfig+0xba>
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8006b44:	b1ae      	cbz	r6, 8006b72 <HAL_RCC_OscConfig+0x76>
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006b46:	68ab      	ldr	r3, [r5, #8]
 8006b48:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006b4c:	60ab      	str	r3, [r5, #8]
 8006b4e:	68ab      	ldr	r3, [r5, #8]
 8006b50:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006b52:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006b56:	430b      	orrs	r3, r1
 8006b58:	60ab      	str	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b5a:	f1b1 4f40 	cmp.w	r1, #3221225472	@ 0xc0000000
 8006b5e:	6a22      	ldr	r2, [r4, #32]
 8006b60:	d20d      	bcs.n	8006b7e <HAL_RCC_OscConfig+0x82>
 8006b62:	2900      	cmp	r1, #0
 8006b64:	68eb      	ldr	r3, [r5, #12]
 8006b66:	da1a      	bge.n	8006b9e <HAL_RCC_OscConfig+0xa2>
 8006b68:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006b6c:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006b70:	e009      	b.n	8006b86 <HAL_RCC_OscConfig+0x8a>
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8006b72:	f7ff fd79 	bl	8006668 <RCC_SetFlashLatencyFromMSIRange>
 8006b76:	2800      	cmp	r0, #0
 8006b78:	d0e5      	beq.n	8006b46 <HAL_RCC_OscConfig+0x4a>
    return HAL_ERROR;
 8006b7a:	2001      	movs	r0, #1
 8006b7c:	e00c      	b.n	8006b98 <HAL_RCC_OscConfig+0x9c>
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b7e:	68eb      	ldr	r3, [r5, #12]
 8006b80:	f023 031f 	bic.w	r3, r3, #31
 8006b84:	4313      	orrs	r3, r2
 8006b86:	60eb      	str	r3, [r5, #12]
        (void) HAL_RCC_GetHCLKFreq();
 8006b88:	f7ff ffa4 	bl	8006ad4 <HAL_RCC_GetHCLKFreq>
        status = HAL_InitTick(uwTickPrio);
 8006b8c:	4b82      	ldr	r3, [pc, #520]	@ (8006d98 <HAL_RCC_OscConfig+0x29c>)
 8006b8e:	6818      	ldr	r0, [r3, #0]
 8006b90:	f7fa f8fe 	bl	8000d90 <HAL_InitTick>
        if (status != HAL_OK)
 8006b94:	2800      	cmp	r0, #0
 8006b96:	d05b      	beq.n	8006c50 <HAL_RCC_OscConfig+0x154>
}
 8006b98:	b004      	add	sp, #16
 8006b9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006b9e:	f1b1 4f80 	cmp.w	r1, #1073741824	@ 0x40000000
 8006ba2:	bf2b      	itete	cs
 8006ba4:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8006ba8:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 8006bac:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8006bb0:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8006bb4:	e7e7      	b.n	8006b86 <HAL_RCC_OscConfig+0x8a>
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006bb6:	68ab      	ldr	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006bb8:	f1b0 4f40 	cmp.w	r0, #3221225472	@ 0xc0000000
          __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006bbc:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006bc0:	60ab      	str	r3, [r5, #8]
 8006bc2:	68ab      	ldr	r3, [r5, #8]
 8006bc4:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006bc8:	ea43 0300 	orr.w	r3, r3, r0
 8006bcc:	60ab      	str	r3, [r5, #8]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006bce:	6a22      	ldr	r2, [r4, #32]
 8006bd0:	68eb      	ldr	r3, [r5, #12]
 8006bd2:	d30a      	bcc.n	8006bea <HAL_RCC_OscConfig+0xee>
 8006bd4:	f023 031f 	bic.w	r3, r3, #31
 8006bd8:	4313      	orrs	r3, r2
 8006bda:	60eb      	str	r3, [r5, #12]
          if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8006bdc:	2e00      	cmp	r6, #0
 8006bde:	d1d3      	bne.n	8006b88 <HAL_RCC_OscConfig+0x8c>
            if (RCC_SetFlashLatencyFromMSIRange(pRCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8006be0:	f7ff fd42 	bl	8006668 <RCC_SetFlashLatencyFromMSIRange>
 8006be4:	2800      	cmp	r0, #0
 8006be6:	d0cf      	beq.n	8006b88 <HAL_RCC_OscConfig+0x8c>
 8006be8:	e7c7      	b.n	8006b7a <HAL_RCC_OscConfig+0x7e>
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006bea:	2800      	cmp	r0, #0
 8006bec:	da04      	bge.n	8006bf8 <HAL_RCC_OscConfig+0xfc>
 8006bee:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006bf2:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006bf6:	e7f0      	b.n	8006bda <HAL_RCC_OscConfig+0xde>
 8006bf8:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006bfc:	bf2b      	itete	cs
 8006bfe:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8006c02:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 8006c06:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 8006c0a:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 8006c0e:	e7e4      	b.n	8006bda <HAL_RCC_OscConfig+0xde>
      if (pRCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8006c10:	4d60      	ldr	r5, [pc, #384]	@ (8006d94 <HAL_RCC_OscConfig+0x298>)
 8006c12:	2b00      	cmp	r3, #0
 8006c14:	d074      	beq.n	8006d00 <HAL_RCC_OscConfig+0x204>
        __HAL_RCC_MSI_ENABLE();
 8006c16:	682b      	ldr	r3, [r5, #0]
 8006c18:	f043 0301 	orr.w	r3, r3, #1
 8006c1c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006c1e:	f7fd f861 	bl	8003ce4 <HAL_GetTick>
 8006c22:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) == 0U)
 8006c24:	682b      	ldr	r3, [r5, #0]
 8006c26:	075a      	lsls	r2, r3, #29
 8006c28:	d54e      	bpl.n	8006cc8 <HAL_RCC_OscConfig+0x1cc>
        __HAL_RCC_MSI_RANGE_CONFIG(pRCC_OscInitStruct->MSIClockRange);
 8006c2a:	68ab      	ldr	r3, [r5, #8]
 8006c2c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8006c30:	60ab      	str	r3, [r5, #8]
 8006c32:	68ab      	ldr	r3, [r5, #8]
 8006c34:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006c36:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006c3a:	430b      	orrs	r3, r1
 8006c3c:	60ab      	str	r3, [r5, #8]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006c3e:	f1b1 4f40 	cmp.w	r1, #3221225472	@ 0xc0000000
 8006c42:	6a22      	ldr	r2, [r4, #32]
 8006c44:	68eb      	ldr	r3, [r5, #12]
 8006c46:	d347      	bcc.n	8006cd8 <HAL_RCC_OscConfig+0x1dc>
 8006c48:	f023 031f 	bic.w	r3, r3, #31
 8006c4c:	4313      	orrs	r3, r2
 8006c4e:	60eb      	str	r3, [r5, #12]
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006c50:	6823      	ldr	r3, [r4, #0]
 8006c52:	07dd      	lsls	r5, r3, #31
 8006c54:	d465      	bmi.n	8006d22 <HAL_RCC_OscConfig+0x226>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006c56:	6823      	ldr	r3, [r4, #0]
 8006c58:	0798      	lsls	r0, r3, #30
 8006c5a:	f100 80bd 	bmi.w	8006dd8 <HAL_RCC_OscConfig+0x2dc>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006c5e:	6823      	ldr	r3, [r4, #0]
 8006c60:	0718      	lsls	r0, r3, #28
 8006c62:	f140 8138 	bpl.w	8006ed6 <HAL_RCC_OscConfig+0x3da>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006c66:	4b4b      	ldr	r3, [pc, #300]	@ (8006d94 <HAL_RCC_OscConfig+0x298>)
 8006c68:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006c6c:	0751      	lsls	r1, r2, #29
 8006c6e:	f100 80f1 	bmi.w	8006e54 <HAL_RCC_OscConfig+0x358>
      pwrclkchanged = SET;
 8006c72:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8006c74:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006c78:	f042 0204 	orr.w	r2, r2, #4
 8006c7c:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8006c80:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006c84:	f003 0304 	and.w	r3, r3, #4
 8006c88:	9301      	str	r3, [sp, #4]
 8006c8a:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006c8c:	4d43      	ldr	r5, [pc, #268]	@ (8006d9c <HAL_RCC_OscConfig+0x2a0>)
 8006c8e:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006c90:	07da      	lsls	r2, r3, #31
 8006c92:	f140 80e1 	bpl.w	8006e58 <HAL_RCC_OscConfig+0x35c>
    if (pRCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8006c96:	6963      	ldr	r3, [r4, #20]
 8006c98:	4d3e      	ldr	r5, [pc, #248]	@ (8006d94 <HAL_RCC_OscConfig+0x298>)
 8006c9a:	2b00      	cmp	r3, #0
 8006c9c:	f040 80ed 	bne.w	8006e7a <HAL_RCC_OscConfig+0x37e>
      __HAL_RCC_LSI_DISABLE();
 8006ca0:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006ca4:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 8006ca8:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8006cac:	f7fd f81a 	bl	8003ce4 <HAL_GetTick>
 8006cb0:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8006cb2:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006cb6:	011b      	lsls	r3, r3, #4
 8006cb8:	f140 8105 	bpl.w	8006ec6 <HAL_RCC_OscConfig+0x3ca>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006cbc:	f7fd f812 	bl	8003ce4 <HAL_GetTick>
 8006cc0:	1b80      	subs	r0, r0, r6
 8006cc2:	2805      	cmp	r0, #5
 8006cc4:	d9f5      	bls.n	8006cb2 <HAL_RCC_OscConfig+0x1b6>
 8006cc6:	e005      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8006cc8:	f7fd f80c 	bl	8003ce4 <HAL_GetTick>
 8006ccc:	eba0 0008 	sub.w	r0, r0, r8
 8006cd0:	2802      	cmp	r0, #2
 8006cd2:	d9a7      	bls.n	8006c24 <HAL_RCC_OscConfig+0x128>
            return HAL_TIMEOUT;
 8006cd4:	2003      	movs	r0, #3
 8006cd6:	e75f      	b.n	8006b98 <HAL_RCC_OscConfig+0x9c>
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8006cd8:	2900      	cmp	r1, #0
 8006cda:	da04      	bge.n	8006ce6 <HAL_RCC_OscConfig+0x1ea>
 8006cdc:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8006ce0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006ce4:	e7b3      	b.n	8006c4e <HAL_RCC_OscConfig+0x152>
 8006ce6:	f1b1 4f80 	cmp.w	r1, #1073741824	@ 0x40000000
 8006cea:	d304      	bcc.n	8006cf6 <HAL_RCC_OscConfig+0x1fa>
 8006cec:	f423 43f8 	bic.w	r3, r3, #31744	@ 0x7c00
 8006cf0:	ea43 2382 	orr.w	r3, r3, r2, lsl #10
 8006cf4:	e7ab      	b.n	8006c4e <HAL_RCC_OscConfig+0x152>
 8006cf6:	f423 2378 	bic.w	r3, r3, #1015808	@ 0xf8000
 8006cfa:	ea43 33c2 	orr.w	r3, r3, r2, lsl #15
 8006cfe:	e7a6      	b.n	8006c4e <HAL_RCC_OscConfig+0x152>
        __HAL_RCC_MSI_DISABLE();
 8006d00:	682b      	ldr	r3, [r5, #0]
 8006d02:	f023 0301 	bic.w	r3, r3, #1
 8006d06:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006d08:	f7fc ffec 	bl	8003ce4 <HAL_GetTick>
 8006d0c:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_MSISRDY) != 0U)
 8006d0e:	682b      	ldr	r3, [r5, #0]
 8006d10:	075b      	lsls	r3, r3, #29
 8006d12:	d59d      	bpl.n	8006c50 <HAL_RCC_OscConfig+0x154>
          if ((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8006d14:	f7fc ffe6 	bl	8003ce4 <HAL_GetTick>
 8006d18:	eba0 0008 	sub.w	r0, r0, r8
 8006d1c:	2802      	cmp	r0, #2
 8006d1e:	d9f6      	bls.n	8006d0e <HAL_RCC_OscConfig+0x212>
 8006d20:	e7d8      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE) ||
 8006d22:	2e08      	cmp	r6, #8
 8006d24:	6863      	ldr	r3, [r4, #4]
 8006d26:	d003      	beq.n	8006d30 <HAL_RCC_OscConfig+0x234>
 8006d28:	2e0c      	cmp	r6, #12
 8006d2a:	d104      	bne.n	8006d36 <HAL_RCC_OscConfig+0x23a>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 8006d2c:	2f03      	cmp	r7, #3
 8006d2e:	d102      	bne.n	8006d36 <HAL_RCC_OscConfig+0x23a>
      if (pRCC_OscInitStruct->HSEState == RCC_HSE_OFF)
 8006d30:	2b00      	cmp	r3, #0
 8006d32:	d190      	bne.n	8006c56 <HAL_RCC_OscConfig+0x15a>
 8006d34:	e721      	b.n	8006b7a <HAL_RCC_OscConfig+0x7e>
      __HAL_RCC_HSE_CONFIG(pRCC_OscInitStruct->HSEState);
 8006d36:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006d3a:	4d16      	ldr	r5, [pc, #88]	@ (8006d94 <HAL_RCC_OscConfig+0x298>)
 8006d3c:	d113      	bne.n	8006d66 <HAL_RCC_OscConfig+0x26a>
 8006d3e:	682b      	ldr	r3, [r5, #0]
 8006d40:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006d44:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006d46:	f7fc ffcd 	bl	8003ce4 <HAL_GetTick>
 8006d4a:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8006d4c:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 8006d94 <HAL_RCC_OscConfig+0x298>
 8006d50:	f8d8 3000 	ldr.w	r3, [r8]
 8006d54:	0399      	lsls	r1, r3, #14
 8006d56:	f53f af7e 	bmi.w	8006c56 <HAL_RCC_OscConfig+0x15a>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006d5a:	f7fc ffc3 	bl	8003ce4 <HAL_GetTick>
 8006d5e:	1b40      	subs	r0, r0, r5
 8006d60:	2864      	cmp	r0, #100	@ 0x64
 8006d62:	d9f5      	bls.n	8006d50 <HAL_RCC_OscConfig+0x254>
 8006d64:	e7b6      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_HSE_CONFIG(pRCC_OscInitStruct->HSEState);
 8006d66:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006d6a:	d108      	bne.n	8006d7e <HAL_RCC_OscConfig+0x282>
 8006d6c:	682b      	ldr	r3, [r5, #0]
 8006d6e:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006d72:	602b      	str	r3, [r5, #0]
 8006d74:	682b      	ldr	r3, [r5, #0]
 8006d76:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8006d7a:	602b      	str	r3, [r5, #0]
 8006d7c:	e7df      	b.n	8006d3e <HAL_RCC_OscConfig+0x242>
 8006d7e:	f5b3 1fa8 	cmp.w	r3, #1376256	@ 0x150000
 8006d82:	d10d      	bne.n	8006da0 <HAL_RCC_OscConfig+0x2a4>
 8006d84:	682b      	ldr	r3, [r5, #0]
 8006d86:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006d8a:	602b      	str	r3, [r5, #0]
 8006d8c:	682b      	ldr	r3, [r5, #0]
 8006d8e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8006d92:	e7f2      	b.n	8006d7a <HAL_RCC_OscConfig+0x27e>
 8006d94:	46020c00 	.word	0x46020c00
 8006d98:	20000054 	.word	0x20000054
 8006d9c:	46020800 	.word	0x46020800
 8006da0:	682a      	ldr	r2, [r5, #0]
 8006da2:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8006da6:	602a      	str	r2, [r5, #0]
 8006da8:	682a      	ldr	r2, [r5, #0]
 8006daa:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8006dae:	602a      	str	r2, [r5, #0]
 8006db0:	682a      	ldr	r2, [r5, #0]
 8006db2:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 8006db6:	602a      	str	r2, [r5, #0]
      if (pRCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8006db8:	2b00      	cmp	r3, #0
 8006dba:	d1c4      	bne.n	8006d46 <HAL_RCC_OscConfig+0x24a>
        tickstart = HAL_GetTick();
 8006dbc:	f7fc ff92 	bl	8003ce4 <HAL_GetTick>
 8006dc0:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8006dc2:	682b      	ldr	r3, [r5, #0]
 8006dc4:	039a      	lsls	r2, r3, #14
 8006dc6:	f57f af46 	bpl.w	8006c56 <HAL_RCC_OscConfig+0x15a>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006dca:	f7fc ff8b 	bl	8003ce4 <HAL_GetTick>
 8006dce:	eba0 0008 	sub.w	r0, r0, r8
 8006dd2:	2864      	cmp	r0, #100	@ 0x64
 8006dd4:	d9f5      	bls.n	8006dc2 <HAL_RCC_OscConfig+0x2c6>
 8006dd6:	e77d      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
    if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI) ||
 8006dd8:	2e04      	cmp	r6, #4
 8006dda:	68e3      	ldr	r3, [r4, #12]
 8006ddc:	d003      	beq.n	8006de6 <HAL_RCC_OscConfig+0x2ea>
 8006dde:	2e0c      	cmp	r6, #12
 8006de0:	d10d      	bne.n	8006dfe <HAL_RCC_OscConfig+0x302>
        ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 8006de2:	2f02      	cmp	r7, #2
 8006de4:	d10b      	bne.n	8006dfe <HAL_RCC_OscConfig+0x302>
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 8006de6:	2b00      	cmp	r3, #0
 8006de8:	f43f aec7 	beq.w	8006b7a <HAL_RCC_OscConfig+0x7e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 8006dec:	4aa9      	ldr	r2, [pc, #676]	@ (8007094 <HAL_RCC_OscConfig+0x598>)
 8006dee:	6921      	ldr	r1, [r4, #16]
 8006df0:	6913      	ldr	r3, [r2, #16]
 8006df2:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8006df6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006dfa:	6113      	str	r3, [r2, #16]
      if (pRCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 8006dfc:	e72f      	b.n	8006c5e <HAL_RCC_OscConfig+0x162>
      if (pRCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8006dfe:	4da5      	ldr	r5, [pc, #660]	@ (8007094 <HAL_RCC_OscConfig+0x598>)
 8006e00:	b1bb      	cbz	r3, 8006e32 <HAL_RCC_OscConfig+0x336>
        __HAL_RCC_HSI_ENABLE();
 8006e02:	682b      	ldr	r3, [r5, #0]
 8006e04:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006e08:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006e0a:	f7fc ff6b 	bl	8003ce4 <HAL_GetTick>
 8006e0e:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8006e10:	682b      	ldr	r3, [r5, #0]
 8006e12:	055b      	lsls	r3, r3, #21
 8006e14:	d507      	bpl.n	8006e26 <HAL_RCC_OscConfig+0x32a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pRCC_OscInitStruct->HSICalibrationValue);
 8006e16:	692b      	ldr	r3, [r5, #16]
 8006e18:	6922      	ldr	r2, [r4, #16]
 8006e1a:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8006e1e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006e22:	612b      	str	r3, [r5, #16]
 8006e24:	e71b      	b.n	8006c5e <HAL_RCC_OscConfig+0x162>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006e26:	f7fc ff5d 	bl	8003ce4 <HAL_GetTick>
 8006e2a:	1b80      	subs	r0, r0, r6
 8006e2c:	2802      	cmp	r0, #2
 8006e2e:	d9ef      	bls.n	8006e10 <HAL_RCC_OscConfig+0x314>
 8006e30:	e750      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
        __HAL_RCC_HSI_DISABLE();
 8006e32:	682b      	ldr	r3, [r5, #0]
 8006e34:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006e38:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006e3a:	f7fc ff53 	bl	8003ce4 <HAL_GetTick>
 8006e3e:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8006e40:	682b      	ldr	r3, [r5, #0]
 8006e42:	055f      	lsls	r7, r3, #21
 8006e44:	f57f af0b 	bpl.w	8006c5e <HAL_RCC_OscConfig+0x162>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006e48:	f7fc ff4c 	bl	8003ce4 <HAL_GetTick>
 8006e4c:	1b80      	subs	r0, r0, r6
 8006e4e:	2802      	cmp	r0, #2
 8006e50:	d9f6      	bls.n	8006e40 <HAL_RCC_OscConfig+0x344>
 8006e52:	e73f      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
    FlagStatus  pwrclkchanged = RESET;
 8006e54:	2700      	movs	r7, #0
 8006e56:	e719      	b.n	8006c8c <HAL_RCC_OscConfig+0x190>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8006e58:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006e5a:	f043 0301 	orr.w	r3, r3, #1
 8006e5e:	62ab      	str	r3, [r5, #40]	@ 0x28
      tickstart = HAL_GetTick();
 8006e60:	f7fc ff40 	bl	8003ce4 <HAL_GetTick>
 8006e64:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006e66:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006e68:	07db      	lsls	r3, r3, #31
 8006e6a:	f53f af14 	bmi.w	8006c96 <HAL_RCC_OscConfig+0x19a>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006e6e:	f7fc ff39 	bl	8003ce4 <HAL_GetTick>
 8006e72:	1b80      	subs	r0, r0, r6
 8006e74:	2802      	cmp	r0, #2
 8006e76:	d9f6      	bls.n	8006e66 <HAL_RCC_OscConfig+0x36a>
 8006e78:	e72c      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
      uint32_t bdcr_temp = RCC->BDCR;
 8006e7a:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
      if (pRCC_OscInitStruct->LSIDiv != (bdcr_temp & RCC_BDCR_LSIPREDIV))
 8006e7e:	69a1      	ldr	r1, [r4, #24]
 8006e80:	f003 5280 	and.w	r2, r3, #268435456	@ 0x10000000
 8006e84:	4291      	cmp	r1, r2
 8006e86:	d010      	beq.n	8006eaa <HAL_RCC_OscConfig+0x3ae>
        if (((bdcr_temp & RCC_BDCR_LSIRDY) == RCC_BDCR_LSIRDY) && \
 8006e88:	f003 6240 	and.w	r2, r3, #201326592	@ 0xc000000
 8006e8c:	f1b2 6f00 	cmp.w	r2, #134217728	@ 0x8000000
 8006e90:	f43f ae73 	beq.w	8006b7a <HAL_RCC_OscConfig+0x7e>
        if ((bdcr_temp & RCC_BDCR_LSION) == RCC_BDCR_LSION)
 8006e94:	0158      	lsls	r0, r3, #5
 8006e96:	d46c      	bmi.n	8006f72 <HAL_RCC_OscConfig+0x476>
        MODIFY_REG(RCC->BDCR, RCC_BDCR_LSIPREDIV, pRCC_OscInitStruct->LSIDiv);
 8006e98:	4a7e      	ldr	r2, [pc, #504]	@ (8007094 <HAL_RCC_OscConfig+0x598>)
 8006e9a:	69a1      	ldr	r1, [r4, #24]
 8006e9c:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
 8006ea0:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006ea4:	430b      	orrs	r3, r1
 8006ea6:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
      __HAL_RCC_LSI_ENABLE();
 8006eaa:	4d7a      	ldr	r5, [pc, #488]	@ (8007094 <HAL_RCC_OscConfig+0x598>)
 8006eac:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006eb0:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8006eb4:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8006eb8:	f7fc ff14 	bl	8003ce4 <HAL_GetTick>
 8006ebc:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) == 0U)
 8006ebe:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006ec2:	011a      	lsls	r2, r3, #4
 8006ec4:	d568      	bpl.n	8006f98 <HAL_RCC_OscConfig+0x49c>
    if (pwrclkchanged == SET)
 8006ec6:	b137      	cbz	r7, 8006ed6 <HAL_RCC_OscConfig+0x3da>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006ec8:	4a72      	ldr	r2, [pc, #456]	@ (8007094 <HAL_RCC_OscConfig+0x598>)
 8006eca:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 8006ece:	f023 0304 	bic.w	r3, r3, #4
 8006ed2:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006ed6:	6823      	ldr	r3, [r4, #0]
 8006ed8:	075d      	lsls	r5, r3, #29
 8006eda:	f140 80a7 	bpl.w	800702c <HAL_RCC_OscConfig+0x530>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006ede:	4b6d      	ldr	r3, [pc, #436]	@ (8007094 <HAL_RCC_OscConfig+0x598>)
 8006ee0:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006ee4:	0750      	lsls	r0, r2, #29
 8006ee6:	d45d      	bmi.n	8006fa4 <HAL_RCC_OscConfig+0x4a8>
      pwrclkchanged = SET;
 8006ee8:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8006eea:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8006eee:	f042 0204 	orr.w	r2, r2, #4
 8006ef2:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8006ef6:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006efa:	f003 0304 	and.w	r3, r3, #4
 8006efe:	9302      	str	r3, [sp, #8]
 8006f00:	9b02      	ldr	r3, [sp, #8]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006f02:	4d65      	ldr	r5, [pc, #404]	@ (8007098 <HAL_RCC_OscConfig+0x59c>)
 8006f04:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006f06:	07d9      	lsls	r1, r3, #31
 8006f08:	d54e      	bpl.n	8006fa8 <HAL_RCC_OscConfig+0x4ac>
    if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEON) != 0U)
 8006f0a:	68a3      	ldr	r3, [r4, #8]
 8006f0c:	4d61      	ldr	r5, [pc, #388]	@ (8007094 <HAL_RCC_OscConfig+0x598>)
 8006f0e:	f013 0f01 	tst.w	r3, #1
 8006f12:	d159      	bne.n	8006fc8 <HAL_RCC_OscConfig+0x4cc>
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8006f14:	f8d5 20f0 	ldr.w	r2, [r5, #240]	@ 0xf0
 8006f18:	f022 0201 	bic.w	r2, r2, #1
 8006f1c:	f8c5 20f0 	str.w	r2, [r5, #240]	@ 0xf0
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 8006f20:	f8d5 20f0 	ldr.w	r2, [r5, #240]	@ 0xf0
 8006f24:	f022 0204 	bic.w	r2, r2, #4
 8006f28:	f8c5 20f0 	str.w	r2, [r5, #240]	@ 0xf0
    if (pRCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8006f2c:	2b00      	cmp	r3, #0
 8006f2e:	d15a      	bne.n	8006fe6 <HAL_RCC_OscConfig+0x4ea>
      tickstart = HAL_GetTick();
 8006f30:	f7fc fed8 	bl	8003ce4 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006f34:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8006f38:	4606      	mov	r6, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8006f3a:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f3e:	079a      	lsls	r2, r3, #30
 8006f40:	f100 80a0 	bmi.w	8007084 <HAL_RCC_OscConfig+0x588>
      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN) != 0U)
 8006f44:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f48:	061b      	lsls	r3, r3, #24
 8006f4a:	d567      	bpl.n	800701c <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006f4c:	f241 3888 	movw	r8, #5000	@ 0x1388
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8006f50:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f54:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006f58:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 8006f5c:	4d4d      	ldr	r5, [pc, #308]	@ (8007094 <HAL_RCC_OscConfig+0x598>)
 8006f5e:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f62:	0518      	lsls	r0, r3, #20
 8006f64:	d55a      	bpl.n	800701c <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006f66:	f7fc febd 	bl	8003ce4 <HAL_GetTick>
 8006f6a:	1b80      	subs	r0, r0, r6
 8006f6c:	4540      	cmp	r0, r8
 8006f6e:	d9f6      	bls.n	8006f5e <HAL_RCC_OscConfig+0x462>
 8006f70:	e6b0      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
          __HAL_RCC_LSI_DISABLE();
 8006f72:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f76:	f023 53a0 	bic.w	r3, r3, #335544320	@ 0x14000000
 8006f7a:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
          tickstart = HAL_GetTick();
 8006f7e:	f7fc feb1 	bl	8003ce4 <HAL_GetTick>
 8006f82:	4606      	mov	r6, r0
          while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8006f84:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006f88:	0119      	lsls	r1, r3, #4
 8006f8a:	d585      	bpl.n	8006e98 <HAL_RCC_OscConfig+0x39c>
            if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006f8c:	f7fc feaa 	bl	8003ce4 <HAL_GetTick>
 8006f90:	1b80      	subs	r0, r0, r6
 8006f92:	2805      	cmp	r0, #5
 8006f94:	d9f6      	bls.n	8006f84 <HAL_RCC_OscConfig+0x488>
 8006f96:	e69d      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006f98:	f7fc fea4 	bl	8003ce4 <HAL_GetTick>
 8006f9c:	1b80      	subs	r0, r0, r6
 8006f9e:	2805      	cmp	r0, #5
 8006fa0:	d98d      	bls.n	8006ebe <HAL_RCC_OscConfig+0x3c2>
 8006fa2:	e697      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
    FlagStatus pwrclkchanged = RESET;
 8006fa4:	2700      	movs	r7, #0
 8006fa6:	e7ac      	b.n	8006f02 <HAL_RCC_OscConfig+0x406>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 8006fa8:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006faa:	f043 0301 	orr.w	r3, r3, #1
 8006fae:	62ab      	str	r3, [r5, #40]	@ 0x28
      tickstart = HAL_GetTick();
 8006fb0:	f7fc fe98 	bl	8003ce4 <HAL_GetTick>
 8006fb4:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8006fb6:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8006fb8:	07da      	lsls	r2, r3, #31
 8006fba:	d4a6      	bmi.n	8006f0a <HAL_RCC_OscConfig+0x40e>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006fbc:	f7fc fe92 	bl	8003ce4 <HAL_GetTick>
 8006fc0:	1b80      	subs	r0, r0, r6
 8006fc2:	2802      	cmp	r0, #2
 8006fc4:	d9f7      	bls.n	8006fb6 <HAL_RCC_OscConfig+0x4ba>
 8006fc6:	e685      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSEBYP) != 0U)
 8006fc8:	f013 0f04 	tst.w	r3, #4
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 8006fcc:	f8d5 30f0 	ldr.w	r3, [r5, #240]	@ 0xf0
 8006fd0:	bf1e      	ittt	ne
 8006fd2:	f043 0304 	orrne.w	r3, r3, #4
 8006fd6:	f8c5 30f0 	strne.w	r3, [r5, #240]	@ 0xf0
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8006fda:	f8d5 30f0 	ldrne.w	r3, [r5, #240]	@ 0xf0
        SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 8006fde:	f043 0301 	orr.w	r3, r3, #1
 8006fe2:	f8c5 30f0 	str.w	r3, [r5, #240]	@ 0xf0
      tickstart = HAL_GetTick();
 8006fe6:	f7fc fe7d 	bl	8003ce4 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006fea:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8006fee:	4605      	mov	r5, r0
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8006ff0:	4e28      	ldr	r6, [pc, #160]	@ (8007094 <HAL_RCC_OscConfig+0x598>)
 8006ff2:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 8006ff6:	079b      	lsls	r3, r3, #30
 8006ff8:	d527      	bpl.n	800704a <HAL_RCC_OscConfig+0x54e>
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 8006ffa:	68a3      	ldr	r3, [r4, #8]
 8006ffc:	f013 0f80 	tst.w	r3, #128	@ 0x80
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8007000:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
      if ((pRCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSEN) != 0U)
 8007004:	d02d      	beq.n	8007062 <HAL_RCC_OscConfig+0x566>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007006:	f241 3888 	movw	r8, #5000	@ 0x1388
        SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 800700a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800700e:	f8c6 30f0 	str.w	r3, [r6, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) == 0U)
 8007012:	4e20      	ldr	r6, [pc, #128]	@ (8007094 <HAL_RCC_OscConfig+0x598>)
 8007014:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 8007018:	0518      	lsls	r0, r3, #20
 800701a:	d51c      	bpl.n	8007056 <HAL_RCC_OscConfig+0x55a>
    if (pwrclkchanged == SET)
 800701c:	b137      	cbz	r7, 800702c <HAL_RCC_OscConfig+0x530>
      __HAL_RCC_PWR_CLK_DISABLE();
 800701e:	4a1d      	ldr	r2, [pc, #116]	@ (8007094 <HAL_RCC_OscConfig+0x598>)
 8007020:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 8007024:	f023 0304 	bic.w	r3, r3, #4
 8007028:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 800702c:	6823      	ldr	r3, [r4, #0]
 800702e:	0699      	lsls	r1, r3, #26
 8007030:	d434      	bmi.n	800709c <HAL_RCC_OscConfig+0x5a0>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_SHSI) == RCC_OSCILLATORTYPE_SHSI)
 8007032:	6823      	ldr	r3, [r4, #0]
 8007034:	061a      	lsls	r2, r3, #24
 8007036:	d454      	bmi.n	80070e2 <HAL_RCC_OscConfig+0x5e6>
  if (((pRCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSIK) == RCC_OSCILLATORTYPE_MSIK)
 8007038:	6823      	ldr	r3, [r4, #0]
 800703a:	0658      	lsls	r0, r3, #25
 800703c:	d474      	bmi.n	8007128 <HAL_RCC_OscConfig+0x62c>
  if ((pRCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800703e:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8007040:	2900      	cmp	r1, #0
 8007042:	f040 80c1 	bne.w	80071c8 <HAL_RCC_OscConfig+0x6cc>
  return HAL_OK;
 8007046:	2000      	movs	r0, #0
 8007048:	e5a6      	b.n	8006b98 <HAL_RCC_OscConfig+0x9c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800704a:	f7fc fe4b 	bl	8003ce4 <HAL_GetTick>
 800704e:	1b40      	subs	r0, r0, r5
 8007050:	4540      	cmp	r0, r8
 8007052:	d9ce      	bls.n	8006ff2 <HAL_RCC_OscConfig+0x4f6>
 8007054:	e63e      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007056:	f7fc fe45 	bl	8003ce4 <HAL_GetTick>
 800705a:	1b40      	subs	r0, r0, r5
 800705c:	4540      	cmp	r0, r8
 800705e:	d9d9      	bls.n	8007014 <HAL_RCC_OscConfig+0x518>
 8007060:	e638      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007062:	f241 3888 	movw	r8, #5000	@ 0x1388
        CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSEN);
 8007066:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800706a:	f8c6 30f0 	str.w	r3, [r6, #240]	@ 0xf0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSRDY) != 0U)
 800706e:	4e09      	ldr	r6, [pc, #36]	@ (8007094 <HAL_RCC_OscConfig+0x598>)
 8007070:	f8d6 30f0 	ldr.w	r3, [r6, #240]	@ 0xf0
 8007074:	0519      	lsls	r1, r3, #20
 8007076:	d5d1      	bpl.n	800701c <HAL_RCC_OscConfig+0x520>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007078:	f7fc fe34 	bl	8003ce4 <HAL_GetTick>
 800707c:	1b40      	subs	r0, r0, r5
 800707e:	4540      	cmp	r0, r8
 8007080:	d9f6      	bls.n	8007070 <HAL_RCC_OscConfig+0x574>
 8007082:	e627      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007084:	f7fc fe2e 	bl	8003ce4 <HAL_GetTick>
 8007088:	1b80      	subs	r0, r0, r6
 800708a:	4540      	cmp	r0, r8
 800708c:	f67f af55 	bls.w	8006f3a <HAL_RCC_OscConfig+0x43e>
 8007090:	e620      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
 8007092:	bf00      	nop
 8007094:	46020c00 	.word	0x46020c00
 8007098:	46020800 	.word	0x46020800
    if (pRCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 800709c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800709e:	4d9b      	ldr	r5, [pc, #620]	@ (800730c <HAL_RCC_OscConfig+0x810>)
 80070a0:	b17b      	cbz	r3, 80070c2 <HAL_RCC_OscConfig+0x5c6>
      __HAL_RCC_HSI48_ENABLE();
 80070a2:	682b      	ldr	r3, [r5, #0]
 80070a4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80070a8:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80070aa:	f7fc fe1b 	bl	8003ce4 <HAL_GetTick>
 80070ae:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) == 0U)
 80070b0:	682b      	ldr	r3, [r5, #0]
 80070b2:	049b      	lsls	r3, r3, #18
 80070b4:	d4bd      	bmi.n	8007032 <HAL_RCC_OscConfig+0x536>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80070b6:	f7fc fe15 	bl	8003ce4 <HAL_GetTick>
 80070ba:	1b80      	subs	r0, r0, r6
 80070bc:	2802      	cmp	r0, #2
 80070be:	d9f7      	bls.n	80070b0 <HAL_RCC_OscConfig+0x5b4>
 80070c0:	e608      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_HSI48_DISABLE();
 80070c2:	682b      	ldr	r3, [r5, #0]
 80070c4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80070c8:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80070ca:	f7fc fe0b 	bl	8003ce4 <HAL_GetTick>
 80070ce:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) != 0U)
 80070d0:	682b      	ldr	r3, [r5, #0]
 80070d2:	049f      	lsls	r7, r3, #18
 80070d4:	d5ad      	bpl.n	8007032 <HAL_RCC_OscConfig+0x536>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80070d6:	f7fc fe05 	bl	8003ce4 <HAL_GetTick>
 80070da:	1b80      	subs	r0, r0, r6
 80070dc:	2802      	cmp	r0, #2
 80070de:	d9f7      	bls.n	80070d0 <HAL_RCC_OscConfig+0x5d4>
 80070e0:	e5f8      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
    if (pRCC_OscInitStruct->SHSIState != RCC_SHSI_OFF)
 80070e2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80070e4:	4d89      	ldr	r5, [pc, #548]	@ (800730c <HAL_RCC_OscConfig+0x810>)
 80070e6:	b17b      	cbz	r3, 8007108 <HAL_RCC_OscConfig+0x60c>
      __HAL_RCC_SHSI_ENABLE();
 80070e8:	682b      	ldr	r3, [r5, #0]
 80070ea:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80070ee:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80070f0:	f7fc fdf8 	bl	8003ce4 <HAL_GetTick>
 80070f4:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) == 0U)
 80070f6:	682b      	ldr	r3, [r5, #0]
 80070f8:	0419      	lsls	r1, r3, #16
 80070fa:	d49d      	bmi.n	8007038 <HAL_RCC_OscConfig+0x53c>
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 80070fc:	f7fc fdf2 	bl	8003ce4 <HAL_GetTick>
 8007100:	1b80      	subs	r0, r0, r6
 8007102:	2802      	cmp	r0, #2
 8007104:	d9f7      	bls.n	80070f6 <HAL_RCC_OscConfig+0x5fa>
 8007106:	e5e5      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_SHSI_DISABLE();
 8007108:	682b      	ldr	r3, [r5, #0]
 800710a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800710e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007110:	f7fc fde8 	bl	8003ce4 <HAL_GetTick>
 8007114:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_SHSIRDY) != 0U)
 8007116:	682b      	ldr	r3, [r5, #0]
 8007118:	041a      	lsls	r2, r3, #16
 800711a:	d58d      	bpl.n	8007038 <HAL_RCC_OscConfig+0x53c>
        if ((HAL_GetTick() - tickstart) > SHSI_TIMEOUT_VALUE)
 800711c:	f7fc fde2 	bl	8003ce4 <HAL_GetTick>
 8007120:	1b80      	subs	r0, r0, r6
 8007122:	2802      	cmp	r0, #2
 8007124:	d9f7      	bls.n	8007116 <HAL_RCC_OscConfig+0x61a>
 8007126:	e5d5      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
    if (pRCC_OscInitStruct->MSIKState != RCC_MSIK_OFF)
 8007128:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800712a:	4d78      	ldr	r5, [pc, #480]	@ (800730c <HAL_RCC_OscConfig+0x810>)
 800712c:	2b00      	cmp	r3, #0
 800712e:	d03a      	beq.n	80071a6 <HAL_RCC_OscConfig+0x6aa>
      __HAL_RCC_MSIK_RANGE_CONFIG(pRCC_OscInitStruct->MSIKClockRange);
 8007130:	68ab      	ldr	r3, [r5, #8]
 8007132:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8007136:	60ab      	str	r3, [r5, #8]
 8007138:	68ab      	ldr	r3, [r5, #8]
 800713a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800713c:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 8007140:	4313      	orrs	r3, r2
 8007142:	60ab      	str	r3, [r5, #8]
      __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 8007144:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
 8007148:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 800714c:	d316      	bcc.n	800717c <HAL_RCC_OscConfig+0x680>
 800714e:	68eb      	ldr	r3, [r5, #12]
 8007150:	f023 031f 	bic.w	r3, r3, #31
 8007154:	4313      	orrs	r3, r2
 8007156:	60eb      	str	r3, [r5, #12]
      __HAL_RCC_MSIK_ENABLE();
 8007158:	4d6c      	ldr	r5, [pc, #432]	@ (800730c <HAL_RCC_OscConfig+0x810>)
 800715a:	682b      	ldr	r3, [r5, #0]
 800715c:	f043 0310 	orr.w	r3, r3, #16
 8007160:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007162:	f7fc fdbf 	bl	8003ce4 <HAL_GetTick>
 8007166:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) == 0U)
 8007168:	682b      	ldr	r3, [r5, #0]
 800716a:	069b      	lsls	r3, r3, #26
 800716c:	f53f af67 	bmi.w	800703e <HAL_RCC_OscConfig+0x542>
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 8007170:	f7fc fdb8 	bl	8003ce4 <HAL_GetTick>
 8007174:	1b80      	subs	r0, r0, r6
 8007176:	2802      	cmp	r0, #2
 8007178:	d9f6      	bls.n	8007168 <HAL_RCC_OscConfig+0x66c>
 800717a:	e5ab      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
      __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST((pRCC_OscInitStruct->MSICalibrationValue), \
 800717c:	2b00      	cmp	r3, #0
 800717e:	da05      	bge.n	800718c <HAL_RCC_OscConfig+0x690>
 8007180:	68eb      	ldr	r3, [r5, #12]
 8007182:	f423 7378 	bic.w	r3, r3, #992	@ 0x3e0
 8007186:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800718a:	e7e4      	b.n	8007156 <HAL_RCC_OscConfig+0x65a>
 800718c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007190:	68eb      	ldr	r3, [r5, #12]
 8007192:	bf2b      	itete	cs
 8007194:	f423 43f8 	biccs.w	r3, r3, #31744	@ 0x7c00
 8007198:	f423 2378 	biccc.w	r3, r3, #1015808	@ 0xf8000
 800719c:	ea43 2382 	orrcs.w	r3, r3, r2, lsl #10
 80071a0:	ea43 33c2 	orrcc.w	r3, r3, r2, lsl #15
 80071a4:	e7d7      	b.n	8007156 <HAL_RCC_OscConfig+0x65a>
      __HAL_RCC_MSIK_DISABLE();
 80071a6:	682b      	ldr	r3, [r5, #0]
 80071a8:	f023 0310 	bic.w	r3, r3, #16
 80071ac:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80071ae:	f7fc fd99 	bl	8003ce4 <HAL_GetTick>
 80071b2:	4606      	mov	r6, r0
      while (READ_BIT(RCC->CR, RCC_CR_MSIKRDY) != 0U)
 80071b4:	682b      	ldr	r3, [r5, #0]
 80071b6:	069f      	lsls	r7, r3, #26
 80071b8:	f57f af41 	bpl.w	800703e <HAL_RCC_OscConfig+0x542>
        if ((HAL_GetTick() - tickstart) > MSIK_TIMEOUT_VALUE)
 80071bc:	f7fc fd92 	bl	8003ce4 <HAL_GetTick>
 80071c0:	1b80      	subs	r0, r0, r6
 80071c2:	2802      	cmp	r0, #2
 80071c4:	d9f6      	bls.n	80071b4 <HAL_RCC_OscConfig+0x6b8>
 80071c6:	e585      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80071c8:	4d50      	ldr	r5, [pc, #320]	@ (800730c <HAL_RCC_OscConfig+0x810>)
 80071ca:	69eb      	ldr	r3, [r5, #28]
 80071cc:	f003 030c 	and.w	r3, r3, #12
 80071d0:	2b0c      	cmp	r3, #12
 80071d2:	f000 80a1 	beq.w	8007318 <HAL_RCC_OscConfig+0x81c>
        __HAL_RCC_PLL_DISABLE();
 80071d6:	682b      	ldr	r3, [r5, #0]
      if ((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80071d8:	2902      	cmp	r1, #2
        __HAL_RCC_PLL_DISABLE();
 80071da:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80071de:	602b      	str	r3, [r5, #0]
      if ((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80071e0:	f040 8081 	bne.w	80072e6 <HAL_RCC_OscConfig+0x7ea>
        tickstart = HAL_GetTick();
 80071e4:	f7fc fd7e 	bl	8003ce4 <HAL_GetTick>
 80071e8:	4606      	mov	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 80071ea:	6829      	ldr	r1, [r5, #0]
 80071ec:	f011 7100 	ands.w	r1, r1, #33554432	@ 0x2000000
 80071f0:	d16d      	bne.n	80072ce <HAL_RCC_OscConfig+0x7d2>
        if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80071f2:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 80071f6:	075e      	lsls	r6, r3, #29
 80071f8:	d40c      	bmi.n	8007214 <HAL_RCC_OscConfig+0x718>
          pwrclkchanged = SET;
 80071fa:	2101      	movs	r1, #1
          __HAL_RCC_PWR_CLK_ENABLE();
 80071fc:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 8007200:	f043 0304 	orr.w	r3, r3, #4
 8007204:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
 8007208:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800720c:	f003 0304 	and.w	r3, r3, #4
 8007210:	9303      	str	r3, [sp, #12]
 8007212:	9b03      	ldr	r3, [sp, #12]
        if (READ_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN) == PWR_VOSR_BOOSTEN)
 8007214:	4d3e      	ldr	r5, [pc, #248]	@ (8007310 <HAL_RCC_OscConfig+0x814>)
 8007216:	68ee      	ldr	r6, [r5, #12]
        CLEAR_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8007218:	68eb      	ldr	r3, [r5, #12]
 800721a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800721e:	60eb      	str	r3, [r5, #12]
        __HAL_RCC_PLL_CONFIG(pRCC_OscInitStruct->PLL.PLLSource,
 8007220:	4b3a      	ldr	r3, [pc, #232]	@ (800730c <HAL_RCC_OscConfig+0x810>)
 8007222:	6c67      	ldr	r7, [r4, #68]	@ 0x44
 8007224:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 8007226:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8007228:	f420 407f 	bic.w	r0, r0, #65280	@ 0xff00
 800722c:	433a      	orrs	r2, r7
 800722e:	f020 0003 	bic.w	r0, r0, #3
 8007232:	4302      	orrs	r2, r0
 8007234:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8007236:	3801      	subs	r0, #1
 8007238:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800723c:	629a      	str	r2, [r3, #40]	@ 0x28
 800723e:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 8007240:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
 8007242:	4834      	ldr	r0, [pc, #208]	@ (8007314 <HAL_RCC_OscConfig+0x818>)
 8007244:	3a01      	subs	r2, #1
 8007246:	4038      	ands	r0, r7
 8007248:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800724c:	4302      	orrs	r2, r0
 800724e:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8007250:	3801      	subs	r0, #1
 8007252:	0240      	lsls	r0, r0, #9
 8007254:	b280      	uxth	r0, r0
 8007256:	4302      	orrs	r2, r0
 8007258:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 800725a:	3801      	subs	r0, #1
 800725c:	0400      	lsls	r0, r0, #16
 800725e:	f400 00fe 	and.w	r0, r0, #8323072	@ 0x7f0000
 8007262:	4302      	orrs	r2, r0
 8007264:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8007266:	3801      	subs	r0, #1
 8007268:	0600      	lsls	r0, r0, #24
 800726a:	f000 40fe 	and.w	r0, r0, #2130706432	@ 0x7f000000
 800726e:	4302      	orrs	r2, r0
 8007270:	635a      	str	r2, [r3, #52]	@ 0x34
        __HAL_RCC_PLL_FRACN_DISABLE();
 8007272:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007274:	f022 0210 	bic.w	r2, r2, #16
 8007278:	629a      	str	r2, [r3, #40]	@ 0x28
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 800727a:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 800727c:	00d2      	lsls	r2, r2, #3
 800727e:	639a      	str	r2, [r3, #56]	@ 0x38
        __HAL_RCC_PLL_FRACN_ENABLE();
 8007280:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007282:	f042 0210 	orr.w	r2, r2, #16
 8007286:	629a      	str	r2, [r3, #40]	@ 0x28
        __HAL_RCC_PLL_VCIRANGE(pRCC_OscInitStruct->PLL.PLLRGE);
 8007288:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800728a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800728c:	f022 020c 	bic.w	r2, r2, #12
 8007290:	4302      	orrs	r2, r0
 8007292:	629a      	str	r2, [r3, #40]	@ 0x28
        if (pwrboosten == SET)
 8007294:	0370      	lsls	r0, r6, #13
          SET_BIT(PWR->VOSR, PWR_VOSR_BOOSTEN);
 8007296:	bf42      	ittt	mi
 8007298:	68ea      	ldrmi	r2, [r5, #12]
 800729a:	f442 2280 	orrmi.w	r2, r2, #262144	@ 0x40000
 800729e:	60ea      	strmi	r2, [r5, #12]
        if (pwrclkchanged == SET)
 80072a0:	b129      	cbz	r1, 80072ae <HAL_RCC_OscConfig+0x7b2>
          __HAL_RCC_PWR_CLK_DISABLE();
 80072a2:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 80072a6:	f022 0204 	bic.w	r2, r2, #4
 80072aa:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
        __HAL_RCC_PLL_ENABLE();
 80072ae:	681a      	ldr	r2, [r3, #0]
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 80072b0:	4c16      	ldr	r4, [pc, #88]	@ (800730c <HAL_RCC_OscConfig+0x810>)
        __HAL_RCC_PLL_ENABLE();
 80072b2:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 80072b6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80072b8:	f7fc fd14 	bl	8003ce4 <HAL_GetTick>
 80072bc:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 80072be:	6823      	ldr	r3, [r4, #0]
 80072c0:	019a      	lsls	r2, r3, #6
 80072c2:	d50a      	bpl.n	80072da <HAL_RCC_OscConfig+0x7de>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 80072c4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80072c6:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80072ca:	62a3      	str	r3, [r4, #40]	@ 0x28
 80072cc:	e6bb      	b.n	8007046 <HAL_RCC_OscConfig+0x54a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80072ce:	f7fc fd09 	bl	8003ce4 <HAL_GetTick>
 80072d2:	1b80      	subs	r0, r0, r6
 80072d4:	2802      	cmp	r0, #2
 80072d6:	d988      	bls.n	80071ea <HAL_RCC_OscConfig+0x6ee>
 80072d8:	e4fc      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80072da:	f7fc fd03 	bl	8003ce4 <HAL_GetTick>
 80072de:	1b40      	subs	r0, r0, r5
 80072e0:	2802      	cmp	r0, #2
 80072e2:	d9ec      	bls.n	80072be <HAL_RCC_OscConfig+0x7c2>
 80072e4:	e4f6      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
        tickstart = HAL_GetTick();
 80072e6:	f7fc fcfd 	bl	8003ce4 <HAL_GetTick>
 80072ea:	4604      	mov	r4, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 80072ec:	682b      	ldr	r3, [r5, #0]
 80072ee:	019b      	lsls	r3, r3, #6
 80072f0:	d406      	bmi.n	8007300 <HAL_RCC_OscConfig+0x804>
        RCC->PLL1CFGR &= ~(RCC_PLL1CFGR_PLL1SRC | RCC_PLL1CFGR_PLL1PEN | RCC_PLL1CFGR_PLL1QEN | RCC_PLL1CFGR_PLL1REN);
 80072f2:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 80072f4:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 80072f8:	f023 0303 	bic.w	r3, r3, #3
 80072fc:	62ab      	str	r3, [r5, #40]	@ 0x28
 80072fe:	e6a2      	b.n	8007046 <HAL_RCC_OscConfig+0x54a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007300:	f7fc fcf0 	bl	8003ce4 <HAL_GetTick>
 8007304:	1b00      	subs	r0, r0, r4
 8007306:	2802      	cmp	r0, #2
 8007308:	d9f0      	bls.n	80072ec <HAL_RCC_OscConfig+0x7f0>
 800730a:	e4e3      	b.n	8006cd4 <HAL_RCC_OscConfig+0x1d8>
 800730c:	46020c00 	.word	0x46020c00
 8007310:	46020800 	.word	0x46020800
 8007314:	80800000 	.word	0x80800000
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007318:	2901      	cmp	r1, #1
      temp1_pllckcfg = RCC->PLL1CFGR;
 800731a:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
 800731c:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800731e:	f43f ac2c 	beq.w	8006b7a <HAL_RCC_OscConfig+0x7e>
 8007322:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 8007324:	f002 0103 	and.w	r1, r2, #3
      if (((pRCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007328:	4281      	cmp	r1, r0
 800732a:	f47f ac26 	bne.w	8006b7a <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 800732e:	6c21      	ldr	r1, [r4, #64]	@ 0x40
          ((READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1M) >> \
 8007330:	f3c2 2003 	ubfx	r0, r2, #8, #4
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 8007334:	3901      	subs	r1, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pRCC_OscInitStruct->PLL.PLLSource) ||
 8007336:	4288      	cmp	r0, r1
 8007338:	f47f ac1f 	bne.w	8006b7a <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 800733c:	6c61      	ldr	r1, [r4, #68]	@ 0x44
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 800733e:	f402 4270 	and.w	r2, r2, #61440	@ 0xf000
            RCC_PLL1CFGR_PLL1M_Pos) != (pRCC_OscInitStruct->PLL.PLLM - 1U)) ||
 8007342:	428a      	cmp	r2, r1
 8007344:	f47f ac19 	bne.w	8006b7a <HAL_RCC_OscConfig+0x7e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8007348:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 800734a:	f3c3 0108 	ubfx	r1, r3, #0, #9
 800734e:	3a01      	subs	r2, #1
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1MBOOST) != pRCC_OscInitStruct->PLL.PLLMBOOST) ||
 8007350:	4291      	cmp	r1, r2
 8007352:	f47f ac12 	bne.w	8006b7a <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8007356:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1P) >> \
 8007358:	f3c3 2146 	ubfx	r1, r3, #9, #7
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 800735c:	3a01      	subs	r2, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pRCC_OscInitStruct->PLL.PLLN - 1U)) ||
 800735e:	4291      	cmp	r1, r2
 8007360:	f47f ac0b 	bne.w	8006b7a <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007364:	6d22      	ldr	r2, [r4, #80]	@ 0x50
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1Q) >> \
 8007366:	f3c3 4106 	ubfx	r1, r3, #16, #7
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 800736a:	3a01      	subs	r2, #1
            RCC_PLL1DIVR_PLL1P_Pos) != (pRCC_OscInitStruct->PLL.PLLP - 1U)) ||
 800736c:	4291      	cmp	r1, r2
 800736e:	f47f ac04 	bne.w	8006b7a <HAL_RCC_OscConfig+0x7e>
            RCC_PLL1DIVR_PLL1R_Pos) != (pRCC_OscInitStruct->PLL.PLLR - 1U)))
 8007372:	6d62      	ldr	r2, [r4, #84]	@ 0x54
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1R) >> \
 8007374:	f3c3 6306 	ubfx	r3, r3, #24, #7
            RCC_PLL1DIVR_PLL1R_Pos) != (pRCC_OscInitStruct->PLL.PLLR - 1U)))
 8007378:	3a01      	subs	r2, #1
            RCC_PLL1DIVR_PLL1Q_Pos) != (pRCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 800737a:	4293      	cmp	r3, r2
 800737c:	f47f abfd 	bne.w	8006b7a <HAL_RCC_OscConfig+0x7e>
      if ((READ_BIT(RCC->PLL1FRACR, RCC_PLL1FRACR_PLL1FRACN) >> \
 8007380:	4b0d      	ldr	r3, [pc, #52]	@ (80073b8 <HAL_RCC_OscConfig+0x8bc>)
 8007382:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 8007384:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007386:	f3c2 02cc 	ubfx	r2, r2, #3, #13
 800738a:	428a      	cmp	r2, r1
 800738c:	f43f ae5b 	beq.w	8007046 <HAL_RCC_OscConfig+0x54a>
        __HAL_RCC_PLL_FRACN_DISABLE();
 8007390:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007392:	f022 0210 	bic.w	r2, r2, #16
 8007396:	629a      	str	r2, [r3, #40]	@ 0x28
        tickstart = HAL_GetTick();
 8007398:	f7fc fca4 	bl	8003ce4 <HAL_GetTick>
 800739c:	4605      	mov	r5, r0
        while ((HAL_GetTick() - tickstart) < PLL_FRAC_WAIT_VALUE)
 800739e:	f7fc fca1 	bl	8003ce4 <HAL_GetTick>
 80073a2:	42a8      	cmp	r0, r5
 80073a4:	d0fb      	beq.n	800739e <HAL_RCC_OscConfig+0x8a2>
        __HAL_RCC_PLL_FRACN_CONFIG(pRCC_OscInitStruct->PLL.PLLFRACN);
 80073a6:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 80073a8:	4b03      	ldr	r3, [pc, #12]	@ (80073b8 <HAL_RCC_OscConfig+0x8bc>)
 80073aa:	00d2      	lsls	r2, r2, #3
 80073ac:	639a      	str	r2, [r3, #56]	@ 0x38
        __HAL_RCC_PLL_FRACN_ENABLE();
 80073ae:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80073b0:	f042 0210 	orr.w	r2, r2, #16
 80073b4:	629a      	str	r2, [r3, #40]	@ 0x28
 80073b6:	e646      	b.n	8007046 <HAL_RCC_OscConfig+0x54a>
 80073b8:	46020c00 	.word	0x46020c00

080073bc <HAL_RCC_GetPCLK1Freq>:
{
 80073bc:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR2 & RCC_CFGR2_PPRE1) >> RCC_CFGR2_PPRE1_Pos]);
 80073be:	f7ff fb89 	bl	8006ad4 <HAL_RCC_GetHCLKFreq>
 80073c2:	4b04      	ldr	r3, [pc, #16]	@ (80073d4 <HAL_RCC_GetPCLK1Freq+0x18>)
 80073c4:	4a04      	ldr	r2, [pc, #16]	@ (80073d8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80073c6:	6a1b      	ldr	r3, [r3, #32]
 80073c8:	f3c3 1302 	ubfx	r3, r3, #4, #3
 80073cc:	5cd3      	ldrb	r3, [r2, r3]
}
 80073ce:	40d8      	lsrs	r0, r3
 80073d0:	bd08      	pop	{r3, pc}
 80073d2:	bf00      	nop
 80073d4:	46020c00 	.word	0x46020c00
 80073d8:	0803561c 	.word	0x0803561c

080073dc <HAL_RCC_GetClockConfig>:
  pRCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | \
 80073dc:	231f      	movs	r3, #31
 80073de:	6003      	str	r3, [r0, #0]
  pRCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR1 & RCC_CFGR1_SW);
 80073e0:	4b0d      	ldr	r3, [pc, #52]	@ (8007418 <HAL_RCC_GetClockConfig+0x3c>)
 80073e2:	69da      	ldr	r2, [r3, #28]
 80073e4:	f002 0203 	and.w	r2, r2, #3
 80073e8:	6042      	str	r2, [r0, #4]
  pRCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_HPRE);
 80073ea:	6a1a      	ldr	r2, [r3, #32]
 80073ec:	f002 020f 	and.w	r2, r2, #15
 80073f0:	6082      	str	r2, [r0, #8]
  pRCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PPRE1);
 80073f2:	6a1a      	ldr	r2, [r3, #32]
 80073f4:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 80073f8:	60c2      	str	r2, [r0, #12]
  pRCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4);
 80073fa:	6a1a      	ldr	r2, [r3, #32]
 80073fc:	0912      	lsrs	r2, r2, #4
 80073fe:	f002 0270 	and.w	r2, r2, #112	@ 0x70
 8007402:	6102      	str	r2, [r0, #16]
  pRCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->CFGR3 & RCC_CFGR3_PPRE3);
 8007404:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007406:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800740a:	6143      	str	r3, [r0, #20]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800740c:	4b03      	ldr	r3, [pc, #12]	@ (800741c <HAL_RCC_GetClockConfig+0x40>)
 800740e:	681b      	ldr	r3, [r3, #0]
 8007410:	f003 030f 	and.w	r3, r3, #15
 8007414:	600b      	str	r3, [r1, #0]
}
 8007416:	4770      	bx	lr
 8007418:	46020c00 	.word	0x46020c00
 800741c:	40022000 	.word	0x40022000

08007420 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2)
{
 8007420:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_RCC_PLLP_VALUE(pll2->PLL2P));
  assert_param(IS_RCC_PLLQ_VALUE(pll2->PLL2Q));
  assert_param(IS_RCC_PLLR_VALUE(pll2->PLL2R));

  /* Disable  PLL2 */
  __HAL_RCC_PLL2_DISABLE();
 8007422:	4c33      	ldr	r4, [pc, #204]	@ (80074f0 <RCCEx_PLL2_Config+0xd0>)
{
 8007424:	4605      	mov	r5, r0
  __HAL_RCC_PLL2_DISABLE();
 8007426:	6823      	ldr	r3, [r4, #0]
 8007428:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800742c:	6023      	str	r3, [r4, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 800742e:	f7fc fc59 	bl	8003ce4 <HAL_GetTick>
 8007432:	4606      	mov	r6, r0

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 8007434:	6823      	ldr	r3, [r4, #0]
 8007436:	011a      	lsls	r2, r3, #4
 8007438:	d44d      	bmi.n	80074d6 <RCCEx_PLL2_Config+0xb6>
      return HAL_TIMEOUT;
    }
  }

  /* Configure PLL2 multiplication and division factors */
  __HAL_RCC_PLL2_CONFIG(pll2->PLL2Source,
 800743a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800743c:	6829      	ldr	r1, [r5, #0]
 800743e:	686a      	ldr	r2, [r5, #4]
 8007440:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8007444:	f023 0303 	bic.w	r3, r3, #3
 8007448:	3a01      	subs	r2, #1
 800744a:	430b      	orrs	r3, r1
 800744c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007450:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8007452:	68ab      	ldr	r3, [r5, #8]
 8007454:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8007456:	4a27      	ldr	r2, [pc, #156]	@ (80074f4 <RCCEx_PLL2_Config+0xd4>)
 8007458:	3b01      	subs	r3, #1
 800745a:	400a      	ands	r2, r1
 800745c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007460:	4313      	orrs	r3, r2
 8007462:	68ea      	ldr	r2, [r5, #12]
 8007464:	3a01      	subs	r2, #1
 8007466:	0252      	lsls	r2, r2, #9
 8007468:	b292      	uxth	r2, r2
 800746a:	4313      	orrs	r3, r2
 800746c:	692a      	ldr	r2, [r5, #16]
 800746e:	3a01      	subs	r2, #1
 8007470:	0412      	lsls	r2, r2, #16
 8007472:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 8007476:	4313      	orrs	r3, r2
 8007478:	696a      	ldr	r2, [r5, #20]
 800747a:	3a01      	subs	r2, #1
 800747c:	0612      	lsls	r2, r2, #24
 800747e:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 8007482:	4313      	orrs	r3, r2
 8007484:	63e3      	str	r3, [r4, #60]	@ 0x3c
                        pll2->PLL2P,
                        pll2->PLL2Q,
                        pll2->PLL2R);

  /* Select PLL2 input reference frequency range: VCI */
  __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE);
 8007486:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007488:	69aa      	ldr	r2, [r5, #24]
 800748a:	f023 030c 	bic.w	r3, r3, #12
 800748e:	4313      	orrs	r3, r2
 8007490:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Configure the PLL2 Clock output(s) */
  __HAL_RCC_PLL2CLKOUT_ENABLE(pll2->PLL2ClockOut);
 8007492:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007494:	6a2a      	ldr	r2, [r5, #32]
 8007496:	4313      	orrs	r3, r2
 8007498:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Disable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_DISABLE();
 800749a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800749c:	f023 0310 	bic.w	r3, r3, #16
 80074a0:	62e3      	str	r3, [r4, #44]	@ 0x2c

  /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 80074a2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80074a4:	69ea      	ldr	r2, [r5, #28]
 80074a6:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80074aa:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80074ae:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80074b2:	6423      	str	r3, [r4, #64]	@ 0x40

  /* Enable PLL2FRACN  */
  __HAL_RCC_PLL2FRACN_ENABLE();
 80074b4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c

  /* Get Start Tick*/
  tickstart = HAL_GetTick();

  /* Wait till PLL2 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 80074b6:	4d0e      	ldr	r5, [pc, #56]	@ (80074f0 <RCCEx_PLL2_Config+0xd0>)
  __HAL_RCC_PLL2FRACN_ENABLE();
 80074b8:	f043 0310 	orr.w	r3, r3, #16
 80074bc:	62e3      	str	r3, [r4, #44]	@ 0x2c
  __HAL_RCC_PLL2_ENABLE();
 80074be:	6823      	ldr	r3, [r4, #0]
 80074c0:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80074c4:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 80074c6:	f7fc fc0d 	bl	8003ce4 <HAL_GetTick>
 80074ca:	4604      	mov	r4, r0
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 80074cc:	682b      	ldr	r3, [r5, #0]
 80074ce:	011b      	lsls	r3, r3, #4
 80074d0:	d508      	bpl.n	80074e4 <RCCEx_PLL2_Config+0xc4>
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80074d2:	2000      	movs	r0, #0
 80074d4:	e005      	b.n	80074e2 <RCCEx_PLL2_Config+0xc2>
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 80074d6:	f7fc fc05 	bl	8003ce4 <HAL_GetTick>
 80074da:	1b80      	subs	r0, r0, r6
 80074dc:	2802      	cmp	r0, #2
 80074de:	d9a9      	bls.n	8007434 <RCCEx_PLL2_Config+0x14>
      return HAL_TIMEOUT;
 80074e0:	2003      	movs	r0, #3

}
 80074e2:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 80074e4:	f7fc fbfe 	bl	8003ce4 <HAL_GetTick>
 80074e8:	1b00      	subs	r0, r0, r4
 80074ea:	2802      	cmp	r0, #2
 80074ec:	d9ee      	bls.n	80074cc <RCCEx_PLL2_Config+0xac>
 80074ee:	e7f7      	b.n	80074e0 <RCCEx_PLL2_Config+0xc0>
 80074f0:	46020c00 	.word	0x46020c00
 80074f4:	80800000 	.word	0x80800000

080074f8 <RCCEx_PLL3_Config>:
  *         contains the configuration parameters as well as VCI clock ranges.
  * @note   PLL3 is temporary disabled to apply new parameters
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3)
{
 80074f8:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_RCC_PLLP_VALUE(pll3->PLL3P));
  assert_param(IS_RCC_PLLQ_VALUE(pll3->PLL3Q));
  assert_param(IS_RCC_PLLR_VALUE(pll3->PLL3R));

  /* Disable  PLL3 */
  __HAL_RCC_PLL3_DISABLE();
 80074fa:	4c33      	ldr	r4, [pc, #204]	@ (80075c8 <RCCEx_PLL3_Config+0xd0>)
{
 80074fc:	4605      	mov	r5, r0
  __HAL_RCC_PLL3_DISABLE();
 80074fe:	6823      	ldr	r3, [r4, #0]
 8007500:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007504:	6023      	str	r3, [r4, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 8007506:	f7fc fbed 	bl	8003ce4 <HAL_GetTick>
 800750a:	4606      	mov	r6, r0

  /* Wait till PLL is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800750c:	6823      	ldr	r3, [r4, #0]
 800750e:	009a      	lsls	r2, r3, #2
 8007510:	d44d      	bmi.n	80075ae <RCCEx_PLL3_Config+0xb6>
      return HAL_TIMEOUT;
    }
  }

  /* Configure PLL3 multiplication and division factors */
  __HAL_RCC_PLL3_CONFIG(pll3->PLL3Source,
 8007512:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007514:	6829      	ldr	r1, [r5, #0]
 8007516:	686a      	ldr	r2, [r5, #4]
 8007518:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 800751c:	f023 0303 	bic.w	r3, r3, #3
 8007520:	3a01      	subs	r2, #1
 8007522:	430b      	orrs	r3, r1
 8007524:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007528:	6323      	str	r3, [r4, #48]	@ 0x30
 800752a:	68ab      	ldr	r3, [r5, #8]
 800752c:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 800752e:	4a27      	ldr	r2, [pc, #156]	@ (80075cc <RCCEx_PLL3_Config+0xd4>)
 8007530:	3b01      	subs	r3, #1
 8007532:	400a      	ands	r2, r1
 8007534:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007538:	4313      	orrs	r3, r2
 800753a:	68ea      	ldr	r2, [r5, #12]
 800753c:	3a01      	subs	r2, #1
 800753e:	0252      	lsls	r2, r2, #9
 8007540:	b292      	uxth	r2, r2
 8007542:	4313      	orrs	r3, r2
 8007544:	692a      	ldr	r2, [r5, #16]
 8007546:	3a01      	subs	r2, #1
 8007548:	0412      	lsls	r2, r2, #16
 800754a:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
 800754e:	4313      	orrs	r3, r2
 8007550:	696a      	ldr	r2, [r5, #20]
 8007552:	3a01      	subs	r2, #1
 8007554:	0612      	lsls	r2, r2, #24
 8007556:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
 800755a:	4313      	orrs	r3, r2
 800755c:	6463      	str	r3, [r4, #68]	@ 0x44
                        pll3->PLL3P,
                        pll3->PLL3Q,
                        pll3->PLL3R);

  /* Select PLL3 input reference frequency range: VCI */
  __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE);
 800755e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007560:	69aa      	ldr	r2, [r5, #24]
 8007562:	f023 030c 	bic.w	r3, r3, #12
 8007566:	4313      	orrs	r3, r2
 8007568:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Configure the PLL3 Clock output(s) */
  __HAL_RCC_PLL3CLKOUT_ENABLE(pll3->PLL3ClockOut);
 800756a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800756c:	6a2a      	ldr	r2, [r5, #32]
 800756e:	4313      	orrs	r3, r2
 8007570:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Disable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_DISABLE();
 8007572:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007574:	f023 0310 	bic.w	r3, r3, #16
 8007578:	6323      	str	r3, [r4, #48]	@ 0x30

  /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 800757a:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800757c:	69ea      	ldr	r2, [r5, #28]
 800757e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007582:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8007586:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800758a:	64a3      	str	r3, [r4, #72]	@ 0x48

  /* Enable PLL3FRACN  */
  __HAL_RCC_PLL3FRACN_ENABLE();
 800758c:	6b23      	ldr	r3, [r4, #48]	@ 0x30

  /* Get Start Tick*/
  tickstart = HAL_GetTick();

  /* Wait till PLL3 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 800758e:	4d0e      	ldr	r5, [pc, #56]	@ (80075c8 <RCCEx_PLL3_Config+0xd0>)
  __HAL_RCC_PLL3FRACN_ENABLE();
 8007590:	f043 0310 	orr.w	r3, r3, #16
 8007594:	6323      	str	r3, [r4, #48]	@ 0x30
  __HAL_RCC_PLL3_ENABLE();
 8007596:	6823      	ldr	r3, [r4, #0]
 8007598:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800759c:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 800759e:	f7fc fba1 	bl	8003ce4 <HAL_GetTick>
 80075a2:	4604      	mov	r4, r0
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 80075a4:	682b      	ldr	r3, [r5, #0]
 80075a6:	009b      	lsls	r3, r3, #2
 80075a8:	d508      	bpl.n	80075bc <RCCEx_PLL3_Config+0xc4>
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80075aa:	2000      	movs	r0, #0
 80075ac:	e005      	b.n	80075ba <RCCEx_PLL3_Config+0xc2>
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 80075ae:	f7fc fb99 	bl	8003ce4 <HAL_GetTick>
 80075b2:	1b80      	subs	r0, r0, r6
 80075b4:	2802      	cmp	r0, #2
 80075b6:	d9a9      	bls.n	800750c <RCCEx_PLL3_Config+0x14>
      return HAL_TIMEOUT;
 80075b8:	2003      	movs	r0, #3
}
 80075ba:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 80075bc:	f7fc fb92 	bl	8003ce4 <HAL_GetTick>
 80075c0:	1b00      	subs	r0, r0, r4
 80075c2:	2802      	cmp	r0, #2
 80075c4:	d9ee      	bls.n	80075a4 <RCCEx_PLL3_Config+0xac>
 80075c6:	e7f7      	b.n	80075b8 <RCCEx_PLL3_Config+0xc0>
 80075c8:	46020c00 	.word	0x46020c00
 80075cc:	80800000 	.word	0x80800000

080075d0 <HAL_RCCEx_PeriphCLKConfig>:
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 80075d0:	6803      	ldr	r3, [r0, #0]
{
 80075d2:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 80075d6:	07da      	lsls	r2, r3, #31
{
 80075d8:	4605      	mov	r5, r0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 80075da:	d508      	bpl.n	80075ee <HAL_RCCEx_PeriphCLKConfig+0x1e>
    __HAL_RCC_USART1_CONFIG(pPeriphClkInit->Usart1ClockSelection);
 80075dc:	49a5      	ldr	r1, [pc, #660]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80075de:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 80075e0:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80075e4:	f022 0203 	bic.w	r2, r2, #3
 80075e8:	4302      	orrs	r2, r0
 80075ea:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 80075ee:	079f      	lsls	r7, r3, #30
 80075f0:	d508      	bpl.n	8007604 <HAL_RCCEx_PeriphCLKConfig+0x34>
    __HAL_RCC_USART2_CONFIG(pPeriphClkInit->Usart2ClockSelection);
 80075f2:	49a0      	ldr	r1, [pc, #640]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80075f4:	6d68      	ldr	r0, [r5, #84]	@ 0x54
 80075f6:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80075fa:	f022 020c 	bic.w	r2, r2, #12
 80075fe:	4302      	orrs	r2, r0
 8007600:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8007604:	075e      	lsls	r6, r3, #29
 8007606:	d508      	bpl.n	800761a <HAL_RCCEx_PeriphCLKConfig+0x4a>
    __HAL_RCC_USART3_CONFIG(pPeriphClkInit->Usart3ClockSelection);
 8007608:	499a      	ldr	r1, [pc, #616]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800760a:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800760c:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007610:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
 8007614:	4302      	orrs	r2, r0
 8007616:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 800761a:	071c      	lsls	r4, r3, #28
 800761c:	d508      	bpl.n	8007630 <HAL_RCCEx_PeriphCLKConfig+0x60>
    __HAL_RCC_UART4_CONFIG(pPeriphClkInit->Uart4ClockSelection);
 800761e:	4995      	ldr	r1, [pc, #596]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007620:	6de8      	ldr	r0, [r5, #92]	@ 0x5c
 8007622:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007626:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 800762a:	4302      	orrs	r2, r0
 800762c:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8007630:	06d8      	lsls	r0, r3, #27
 8007632:	d508      	bpl.n	8007646 <HAL_RCCEx_PeriphCLKConfig+0x76>
    __HAL_RCC_UART5_CONFIG(pPeriphClkInit->Uart5ClockSelection);
 8007634:	498f      	ldr	r1, [pc, #572]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007636:	6e28      	ldr	r0, [r5, #96]	@ 0x60
 8007638:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 800763c:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8007640:	4302      	orrs	r2, r0
 8007642:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8007646:	0099      	lsls	r1, r3, #2
 8007648:	d508      	bpl.n	800765c <HAL_RCCEx_PeriphCLKConfig+0x8c>
    __HAL_RCC_USART6_CONFIG(pPeriphClkInit->Usart6ClockSelection);
 800764a:	498a      	ldr	r1, [pc, #552]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800764c:	6e68      	ldr	r0, [r5, #100]	@ 0x64
 800764e:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007652:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8007656:	4302      	orrs	r2, r0
 8007658:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 800765c:	069a      	lsls	r2, r3, #26
 800765e:	d508      	bpl.n	8007672 <HAL_RCCEx_PeriphCLKConfig+0xa2>
    __HAL_RCC_LPUART1_CONFIG(pPeriphClkInit->Lpuart1ClockSelection);
 8007660:	4984      	ldr	r1, [pc, #528]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007662:	6ea8      	ldr	r0, [r5, #104]	@ 0x68
 8007664:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007668:	f022 0207 	bic.w	r2, r2, #7
 800766c:	4302      	orrs	r2, r0
 800766e:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8007672:	065f      	lsls	r7, r3, #25
 8007674:	d508      	bpl.n	8007688 <HAL_RCCEx_PeriphCLKConfig+0xb8>
    __HAL_RCC_I2C1_CONFIG(pPeriphClkInit->I2c1ClockSelection);
 8007676:	497f      	ldr	r1, [pc, #508]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007678:	6ee8      	ldr	r0, [r5, #108]	@ 0x6c
 800767a:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 800767e:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 8007682:	4302      	orrs	r2, r0
 8007684:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8007688:	061e      	lsls	r6, r3, #24
 800768a:	d508      	bpl.n	800769e <HAL_RCCEx_PeriphCLKConfig+0xce>
    __HAL_RCC_I2C2_CONFIG(pPeriphClkInit->I2c2ClockSelection);
 800768c:	4979      	ldr	r1, [pc, #484]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800768e:	6f28      	ldr	r0, [r5, #112]	@ 0x70
 8007690:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007694:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8007698:	4302      	orrs	r2, r0
 800769a:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 800769e:	05dc      	lsls	r4, r3, #23
 80076a0:	d508      	bpl.n	80076b4 <HAL_RCCEx_PeriphCLKConfig+0xe4>
    __HAL_RCC_I2C3_CONFIG(pPeriphClkInit->I2c3ClockSelection);
 80076a2:	4974      	ldr	r1, [pc, #464]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076a4:	6f68      	ldr	r0, [r5, #116]	@ 0x74
 80076a6:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 80076aa:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 80076ae:	4302      	orrs	r2, r0
 80076b0:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 80076b4:	0258      	lsls	r0, r3, #9
 80076b6:	d508      	bpl.n	80076ca <HAL_RCCEx_PeriphCLKConfig+0xfa>
    __HAL_RCC_I2C4_CONFIG(pPeriphClkInit->I2c4ClockSelection);
 80076b8:	496e      	ldr	r1, [pc, #440]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076ba:	6fa8      	ldr	r0, [r5, #120]	@ 0x78
 80076bc:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 80076c0:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 80076c4:	4302      	orrs	r2, r0
 80076c6:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C5) == RCC_PERIPHCLK_I2C5)
 80076ca:	0059      	lsls	r1, r3, #1
 80076cc:	d508      	bpl.n	80076e0 <HAL_RCCEx_PeriphCLKConfig+0x110>
    __HAL_RCC_I2C5_CONFIG(pPeriphClkInit->I2c5ClockSelection);
 80076ce:	4969      	ldr	r1, [pc, #420]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076d0:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
 80076d2:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 80076d6:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 80076da:	4302      	orrs	r2, r0
 80076dc:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C6) == RCC_PERIPHCLK_I2C6)
 80076e0:	2b00      	cmp	r3, #0
 80076e2:	da09      	bge.n	80076f8 <HAL_RCCEx_PeriphCLKConfig+0x128>
    __HAL_RCC_I2C6_CONFIG(pPeriphClkInit->I2c6ClockSelection);
 80076e4:	4963      	ldr	r1, [pc, #396]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076e6:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
 80076ea:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 80076ee:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 80076f2:	4302      	orrs	r2, r0
 80076f4:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 80076f8:	059a      	lsls	r2, r3, #22
 80076fa:	d509      	bpl.n	8007710 <HAL_RCCEx_PeriphCLKConfig+0x140>
    __HAL_RCC_LPTIM1_CONFIG(pPeriphClkInit->Lptim1ClockSelection);
 80076fc:	495d      	ldr	r1, [pc, #372]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80076fe:	f8d5 0084 	ldr.w	r0, [r5, #132]	@ 0x84
 8007702:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007706:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 800770a:	4302      	orrs	r2, r0
 800770c:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 8007710:	055f      	lsls	r7, r3, #21
 8007712:	d509      	bpl.n	8007728 <HAL_RCCEx_PeriphCLKConfig+0x158>
    __HAL_RCC_LPTIM2_CONFIG(pPeriphClkInit->Lptim2ClockSelection);
 8007714:	4957      	ldr	r1, [pc, #348]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007716:	f8d5 0088 	ldr.w	r0, [r5, #136]	@ 0x88
 800771a:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 800771e:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 8007722:	4302      	orrs	r2, r0
 8007724:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM34) == (RCC_PERIPHCLK_LPTIM34))
 8007728:	051e      	lsls	r6, r3, #20
 800772a:	d509      	bpl.n	8007740 <HAL_RCCEx_PeriphCLKConfig+0x170>
    __HAL_RCC_LPTIM34_CONFIG(pPeriphClkInit->Lptim34ClockSelection);
 800772c:	4951      	ldr	r1, [pc, #324]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800772e:	f8d5 008c 	ldr.w	r0, [r5, #140]	@ 0x8c
 8007732:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007736:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800773a:	4302      	orrs	r2, r0
 800773c:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 8007740:	049c      	lsls	r4, r3, #18
 8007742:	d527      	bpl.n	8007794 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    switch (pPeriphClkInit->Sai1ClockSelection)
 8007744:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
 8007748:	2b40      	cmp	r3, #64	@ 0x40
 800774a:	d025      	beq.n	8007798 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 800774c:	d814      	bhi.n	8007778 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 800774e:	b34b      	cbz	r3, 80077a4 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 8007750:	2b20      	cmp	r3, #32
 8007752:	d02f      	beq.n	80077b4 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 8007754:	2601      	movs	r6, #1
  if ((((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 8007756:	682b      	ldr	r3, [r5, #0]
 8007758:	0458      	lsls	r0, r3, #17
 800775a:	d50b      	bpl.n	8007774 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
    switch (pPeriphClkInit->Sai2ClockSelection)
 800775c:	f8d5 30a0 	ldr.w	r3, [r5, #160]	@ 0xa0
 8007760:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8007764:	d058      	beq.n	8007818 <HAL_RCCEx_PeriphCLKConfig+0x248>
 8007766:	d82a      	bhi.n	80077be <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 8007768:	2b00      	cmp	r3, #0
 800776a:	d05b      	beq.n	8007824 <HAL_RCCEx_PeriphCLKConfig+0x254>
 800776c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8007770:	d05e      	beq.n	8007830 <HAL_RCCEx_PeriphCLKConfig+0x260>
 8007772:	2601      	movs	r6, #1
 8007774:	4634      	mov	r4, r6
 8007776:	e035      	b.n	80077e4 <HAL_RCCEx_PeriphCLKConfig+0x214>
    switch (pPeriphClkInit->Sai1ClockSelection)
 8007778:	2b60      	cmp	r3, #96	@ 0x60
 800777a:	d001      	beq.n	8007780 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
 800777c:	2b80      	cmp	r3, #128	@ 0x80
 800777e:	d1e9      	bne.n	8007754 <HAL_RCCEx_PeriphCLKConfig+0x184>
      __HAL_RCC_SAI1_CONFIG(pPeriphClkInit->Sai1ClockSelection);
 8007780:	4a3c      	ldr	r2, [pc, #240]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 8007782:	f8d5 109c 	ldr.w	r1, [r5, #156]	@ 0x9c
 8007786:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 800778a:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 800778e:	430b      	orrs	r3, r1
 8007790:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 8007794:	2600      	movs	r6, #0
 8007796:	e7de      	b.n	8007756 <HAL_RCCEx_PeriphCLKConfig+0x186>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007798:	4a36      	ldr	r2, [pc, #216]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800779a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 800779c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80077a0:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 80077a2:	e7ed      	b.n	8007780 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80077a4:	f105 0008 	add.w	r0, r5, #8
 80077a8:	f7ff fe3a 	bl	8007420 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80077ac:	4606      	mov	r6, r0
    if (ret == HAL_OK)
 80077ae:	2800      	cmp	r0, #0
 80077b0:	d1d1      	bne.n	8007756 <HAL_RCCEx_PeriphCLKConfig+0x186>
 80077b2:	e7e5      	b.n	8007780 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80077b4:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 80077b8:	f7ff fe9e 	bl	80074f8 <RCCEx_PLL3_Config>
 80077bc:	e7f6      	b.n	80077ac <HAL_RCCEx_PeriphCLKConfig+0x1dc>
    switch (pPeriphClkInit->Sai2ClockSelection)
 80077be:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80077c2:	d002      	beq.n	80077ca <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 80077c4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80077c8:	d1d3      	bne.n	8007772 <HAL_RCCEx_PeriphCLKConfig+0x1a2>
    switch (pPeriphClkInit->Sai1ClockSelection)
 80077ca:	4634      	mov	r4, r6
    if (ret == HAL_OK)
 80077cc:	2c00      	cmp	r4, #0
 80077ce:	d134      	bne.n	800783a <HAL_RCCEx_PeriphCLKConfig+0x26a>
      __HAL_RCC_SAI2_CONFIG(pPeriphClkInit->Sai2ClockSelection);
 80077d0:	4a28      	ldr	r2, [pc, #160]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 80077d2:	f8d5 10a0 	ldr.w	r1, [r5, #160]	@ 0xa0
 80077d6:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 80077da:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 80077de:	430b      	orrs	r3, r1
 80077e0:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADCDAC) == RCC_PERIPHCLK_ADCDAC)
 80077e4:	682b      	ldr	r3, [r5, #0]
 80077e6:	0419      	lsls	r1, r3, #16
 80077e8:	d50a      	bpl.n	8007800 <HAL_RCCEx_PeriphCLKConfig+0x230>
    switch (pPeriphClkInit->AdcDacClockSelection)
 80077ea:	f8d5 30b4 	ldr.w	r3, [r5, #180]	@ 0xb4
 80077ee:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80077f2:	d036      	beq.n	8007862 <HAL_RCCEx_PeriphCLKConfig+0x292>
 80077f4:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80077f8:	d821      	bhi.n	800783e <HAL_RCCEx_PeriphCLKConfig+0x26e>
 80077fa:	b332      	cbz	r2, 800784a <HAL_RCCEx_PeriphCLKConfig+0x27a>
 80077fc:	2601      	movs	r6, #1
 80077fe:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_MDF1) == RCC_PERIPHCLK_MDF1)
 8007800:	682b      	ldr	r3, [r5, #0]
 8007802:	03da      	lsls	r2, r3, #15
 8007804:	d548      	bpl.n	8007898 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
    switch (pPeriphClkInit->Mdf1ClockSelection)
 8007806:	f8d5 3094 	ldr.w	r3, [r5, #148]	@ 0x94
 800780a:	2b04      	cmp	r3, #4
 800780c:	d85a      	bhi.n	80078c4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 800780e:	e8df f003 	tbb	[pc, r3]
 8007812:	3338      	.short	0x3338
 8007814:	3853      	.short	0x3853
 8007816:	38          	.byte	0x38
 8007817:	00          	.byte	0x00
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007818:	4a16      	ldr	r2, [pc, #88]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800781a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 800781c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007820:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 8007822:	e7d2      	b.n	80077ca <HAL_RCCEx_PeriphCLKConfig+0x1fa>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007824:	f105 0008 	add.w	r0, r5, #8
 8007828:	f7ff fdfa 	bl	8007420 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800782c:	4604      	mov	r4, r0
        break;
 800782e:	e7cd      	b.n	80077cc <HAL_RCCEx_PeriphCLKConfig+0x1fc>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007830:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007834:	f7ff fe60 	bl	80074f8 <RCCEx_PLL3_Config>
 8007838:	e7f8      	b.n	800782c <HAL_RCCEx_PeriphCLKConfig+0x25c>
 800783a:	4626      	mov	r6, r4
 800783c:	e7d2      	b.n	80077e4 <HAL_RCCEx_PeriphCLKConfig+0x214>
    switch (pPeriphClkInit->AdcDacClockSelection)
 800783e:	f5b2 4f80 	cmp.w	r2, #16384	@ 0x4000
 8007842:	d002      	beq.n	800784a <HAL_RCCEx_PeriphCLKConfig+0x27a>
 8007844:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8007848:	d1d8      	bne.n	80077fc <HAL_RCCEx_PeriphCLKConfig+0x22c>
    if (ret == HAL_OK)
 800784a:	b984      	cbnz	r4, 800786e <HAL_RCCEx_PeriphCLKConfig+0x29e>
      __HAL_RCC_ADCDAC_CONFIG(pPeriphClkInit->AdcDacClockSelection);
 800784c:	4a09      	ldr	r2, [pc, #36]	@ (8007874 <HAL_RCCEx_PeriphCLKConfig+0x2a4>)
 800784e:	f8d5 10b4 	ldr.w	r1, [r5, #180]	@ 0xb4
 8007852:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 8007856:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800785a:	430b      	orrs	r3, r1
 800785c:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8007860:	e7ce      	b.n	8007800 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007862:	f105 0008 	add.w	r0, r5, #8
 8007866:	f7ff fddb 	bl	8007420 <RCCEx_PLL2_Config>
 800786a:	4604      	mov	r4, r0
        break;
 800786c:	e7ed      	b.n	800784a <HAL_RCCEx_PeriphCLKConfig+0x27a>
 800786e:	4626      	mov	r6, r4
 8007870:	e7c6      	b.n	8007800 <HAL_RCCEx_PeriphCLKConfig+0x230>
 8007872:	bf00      	nop
 8007874:	46020c00 	.word	0x46020c00
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007878:	4a69      	ldr	r2, [pc, #420]	@ (8007a20 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800787a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 800787c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007880:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007882:	bb14      	cbnz	r4, 80078ca <HAL_RCCEx_PeriphCLKConfig+0x2fa>
      __HAL_RCC_MDF1_CONFIG(pPeriphClkInit->Mdf1ClockSelection);
 8007884:	4a66      	ldr	r2, [pc, #408]	@ (8007a20 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007886:	f8d5 1094 	ldr.w	r1, [r5, #148]	@ 0x94
 800788a:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 800788e:	f023 0307 	bic.w	r3, r3, #7
 8007892:	430b      	orrs	r3, r1
 8007894:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADF1) == RCC_PERIPHCLK_ADF1)
 8007898:	682b      	ldr	r3, [r5, #0]
 800789a:	039b      	lsls	r3, r3, #14
 800789c:	d529      	bpl.n	80078f2 <HAL_RCCEx_PeriphCLKConfig+0x322>
    switch (pPeriphClkInit->Adf1ClockSelection)
 800789e:	f8d5 3098 	ldr.w	r3, [r5, #152]	@ 0x98
 80078a2:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80078a6:	d07d      	beq.n	80079a4 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
 80078a8:	d811      	bhi.n	80078ce <HAL_RCCEx_PeriphCLKConfig+0x2fe>
 80078aa:	b1b3      	cbz	r3, 80078da <HAL_RCCEx_PeriphCLKConfig+0x30a>
 80078ac:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80078b0:	d072      	beq.n	8007998 <HAL_RCCEx_PeriphCLKConfig+0x3c8>
 80078b2:	2601      	movs	r6, #1
 80078b4:	4634      	mov	r4, r6
 80078b6:	e01c      	b.n	80078f2 <HAL_RCCEx_PeriphCLKConfig+0x322>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80078b8:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 80078bc:	f7ff fe1c 	bl	80074f8 <RCCEx_PLL3_Config>
 80078c0:	4604      	mov	r4, r0
        break;
 80078c2:	e7de      	b.n	8007882 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
    switch (pPeriphClkInit->Mdf1ClockSelection)
 80078c4:	2601      	movs	r6, #1
 80078c6:	4634      	mov	r4, r6
 80078c8:	e7e6      	b.n	8007898 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 80078ca:	4626      	mov	r6, r4
 80078cc:	e7e4      	b.n	8007898 <HAL_RCCEx_PeriphCLKConfig+0x2c8>
    switch (pPeriphClkInit->Adf1ClockSelection)
 80078ce:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 80078d2:	d002      	beq.n	80078da <HAL_RCCEx_PeriphCLKConfig+0x30a>
 80078d4:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 80078d8:	d1eb      	bne.n	80078b2 <HAL_RCCEx_PeriphCLKConfig+0x2e2>
    if (ret == HAL_OK)
 80078da:	2c00      	cmp	r4, #0
 80078dc:	d168      	bne.n	80079b0 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
      __HAL_RCC_ADF1_CONFIG(pPeriphClkInit->Adf1ClockSelection);
 80078de:	4a50      	ldr	r2, [pc, #320]	@ (8007a20 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80078e0:	f8d5 1098 	ldr.w	r1, [r5, #152]	@ 0x98
 80078e4:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 80078e8:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 80078ec:	430b      	orrs	r3, r1
 80078ee:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  if ((pPeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 80078f2:	682b      	ldr	r3, [r5, #0]
 80078f4:	035f      	lsls	r7, r3, #13
 80078f6:	d53c      	bpl.n	8007972 <HAL_RCCEx_PeriphCLKConfig+0x3a2>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80078f8:	4b49      	ldr	r3, [pc, #292]	@ (8007a20 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 80078fa:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 80078fe:	0750      	lsls	r0, r2, #29
 8007900:	d458      	bmi.n	80079b4 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
      pwrclkchanged = SET;
 8007902:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8007904:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 8007908:	f042 0204 	orr.w	r2, r2, #4
 800790c:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8007910:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8007914:	f003 0304 	and.w	r3, r3, #4
 8007918:	9301      	str	r3, [sp, #4]
 800791a:	9b01      	ldr	r3, [sp, #4]
    SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 800791c:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 8007a24 <HAL_RCCEx_PeriphCLKConfig+0x454>
 8007920:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 8007924:	f043 0301 	orr.w	r3, r3, #1
 8007928:	f8c8 3028 	str.w	r3, [r8, #40]	@ 0x28
    tickstart = HAL_GetTick();
 800792c:	f7fc f9da 	bl	8003ce4 <HAL_GetTick>
 8007930:	4681      	mov	r9, r0
    while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 8007932:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 8007936:	07d9      	lsls	r1, r3, #31
 8007938:	d53e      	bpl.n	80079b8 <HAL_RCCEx_PeriphCLKConfig+0x3e8>
    if (ret == HAL_OK)
 800793a:	2c00      	cmp	r4, #0
 800793c:	d16d      	bne.n	8007a1a <HAL_RCCEx_PeriphCLKConfig+0x44a>
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 800793e:	4b38      	ldr	r3, [pc, #224]	@ (8007a20 <HAL_RCCEx_PeriphCLKConfig+0x450>)
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 8007940:	f8d5 20d0 	ldr.w	r2, [r5, #208]	@ 0xd0
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 8007944:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 8007948:	f411 7140 	ands.w	r1, r1, #768	@ 0x300
 800794c:	d13d      	bne.n	80079ca <HAL_RCCEx_PeriphCLKConfig+0x3fa>
        __HAL_RCC_RTC_CONFIG(pPeriphClkInit->RTCClockSelection);
 800794e:	4a34      	ldr	r2, [pc, #208]	@ (8007a20 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007950:	f8d5 10d0 	ldr.w	r1, [r5, #208]	@ 0xd0
 8007954:	f8d2 30f0 	ldr.w	r3, [r2, #240]	@ 0xf0
 8007958:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800795c:	430b      	orrs	r3, r1
 800795e:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
    if (pwrclkchanged == SET)
 8007962:	b137      	cbz	r7, 8007972 <HAL_RCCEx_PeriphCLKConfig+0x3a2>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007964:	4a2e      	ldr	r2, [pc, #184]	@ (8007a20 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 8007966:	f8d2 3094 	ldr.w	r3, [r2, #148]	@ 0x94
 800796a:	f023 0304 	bic.w	r3, r3, #4
 800796e:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ICLK) == RCC_PERIPHCLK_ICLK)
 8007972:	682b      	ldr	r3, [r5, #0]
 8007974:	02df      	lsls	r7, r3, #11
 8007976:	d567      	bpl.n	8007a48 <HAL_RCCEx_PeriphCLKConfig+0x478>
    switch (pPeriphClkInit->IclkClockSelection)
 8007978:	f8d5 30ac 	ldr.w	r3, [r5, #172]	@ 0xac
 800797c:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007980:	f000 8165 	beq.w	8007c4e <HAL_RCCEx_PeriphCLKConfig+0x67e>
 8007984:	d850      	bhi.n	8007a28 <HAL_RCCEx_PeriphCLKConfig+0x458>
 8007986:	2b00      	cmp	r3, #0
 8007988:	d051      	beq.n	8007a2e <HAL_RCCEx_PeriphCLKConfig+0x45e>
 800798a:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800798e:	f000 8158 	beq.w	8007c42 <HAL_RCCEx_PeriphCLKConfig+0x672>
 8007992:	2601      	movs	r6, #1
 8007994:	4634      	mov	r4, r6
 8007996:	e057      	b.n	8007a48 <HAL_RCCEx_PeriphCLKConfig+0x478>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007998:	4a21      	ldr	r2, [pc, #132]	@ (8007a20 <HAL_RCCEx_PeriphCLKConfig+0x450>)
 800799a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 800799c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80079a0:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 80079a2:	e79a      	b.n	80078da <HAL_RCCEx_PeriphCLKConfig+0x30a>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80079a4:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 80079a8:	f7ff fda6 	bl	80074f8 <RCCEx_PLL3_Config>
 80079ac:	4604      	mov	r4, r0
        break;
 80079ae:	e794      	b.n	80078da <HAL_RCCEx_PeriphCLKConfig+0x30a>
 80079b0:	4626      	mov	r6, r4
 80079b2:	e79e      	b.n	80078f2 <HAL_RCCEx_PeriphCLKConfig+0x322>
    FlagStatus       pwrclkchanged = RESET;
 80079b4:	2700      	movs	r7, #0
 80079b6:	e7b1      	b.n	800791c <HAL_RCCEx_PeriphCLKConfig+0x34c>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80079b8:	f7fc f994 	bl	8003ce4 <HAL_GetTick>
 80079bc:	eba0 0009 	sub.w	r0, r0, r9
 80079c0:	2802      	cmp	r0, #2
 80079c2:	d9b6      	bls.n	8007932 <HAL_RCCEx_PeriphCLKConfig+0x362>
        ret = HAL_TIMEOUT;
 80079c4:	2603      	movs	r6, #3
 80079c6:	4634      	mov	r4, r6
 80079c8:	e7cb      	b.n	8007962 <HAL_RCCEx_PeriphCLKConfig+0x392>
      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 80079ca:	4291      	cmp	r1, r2
 80079cc:	d011      	beq.n	80079f2 <HAL_RCCEx_PeriphCLKConfig+0x422>
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 80079ce:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_FORCE();
 80079d2:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 80079d6:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
 80079da:	f441 3180 	orr.w	r1, r1, #65536	@ 0x10000
 80079de:	f8c3 10f0 	str.w	r1, [r3, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_RELEASE();
 80079e2:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
 80079e6:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
 80079ea:	f8c3 10f0 	str.w	r1, [r3, #240]	@ 0xf0
        RCC->BDCR = tmpregister;
 80079ee:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 80079f2:	07d2      	lsls	r2, r2, #31
 80079f4:	d5ab      	bpl.n	800794e <HAL_RCCEx_PeriphCLKConfig+0x37e>
        tickstart = HAL_GetTick();
 80079f6:	f7fc f975 	bl	8003ce4 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80079fa:	f241 3a88 	movw	sl, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 80079fe:	4680      	mov	r8, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8007a00:	f8df 901c 	ldr.w	r9, [pc, #28]	@ 8007a20 <HAL_RCCEx_PeriphCLKConfig+0x450>
 8007a04:	f8d9 30f0 	ldr.w	r3, [r9, #240]	@ 0xf0
 8007a08:	079b      	lsls	r3, r3, #30
 8007a0a:	d4a0      	bmi.n	800794e <HAL_RCCEx_PeriphCLKConfig+0x37e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007a0c:	f7fc f96a 	bl	8003ce4 <HAL_GetTick>
 8007a10:	eba0 0008 	sub.w	r0, r0, r8
 8007a14:	4550      	cmp	r0, sl
 8007a16:	d9f5      	bls.n	8007a04 <HAL_RCCEx_PeriphCLKConfig+0x434>
 8007a18:	e7d4      	b.n	80079c4 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 8007a1a:	4626      	mov	r6, r4
 8007a1c:	e7a1      	b.n	8007962 <HAL_RCCEx_PeriphCLKConfig+0x392>
 8007a1e:	bf00      	nop
 8007a20:	46020c00 	.word	0x46020c00
 8007a24:	46020800 	.word	0x46020800
    switch (pPeriphClkInit->IclkClockSelection)
 8007a28:	f1b3 6f40 	cmp.w	r3, #201326592	@ 0xc000000
 8007a2c:	d1b1      	bne.n	8007992 <HAL_RCCEx_PeriphCLKConfig+0x3c2>
    if (ret == HAL_OK)
 8007a2e:	2c00      	cmp	r4, #0
 8007a30:	f040 8113 	bne.w	8007c5a <HAL_RCCEx_PeriphCLKConfig+0x68a>
      __HAL_RCC_CLK48_CONFIG(pPeriphClkInit->IclkClockSelection);
 8007a34:	4ab8      	ldr	r2, [pc, #736]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a36:	f8d5 10ac 	ldr.w	r1, [r5, #172]	@ 0xac
 8007a3a:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8007a3e:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8007a42:	430b      	orrs	r3, r1
 8007a44:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8007a48:	682b      	ldr	r3, [r5, #0]
 8007a4a:	0318      	lsls	r0, r3, #12
 8007a4c:	d513      	bpl.n	8007a76 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (pPeriphClkInit->RngClockSelection)
 8007a4e:	f8d5 10a4 	ldr.w	r1, [r5, #164]	@ 0xa4
 8007a52:	f431 5280 	bics.w	r2, r1, #4096	@ 0x1000
 8007a56:	d003      	beq.n	8007a60 <HAL_RCCEx_PeriphCLKConfig+0x490>
 8007a58:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
 8007a5c:	f040 80ff 	bne.w	8007c5e <HAL_RCCEx_PeriphCLKConfig+0x68e>
    if (ret == HAL_OK)
 8007a60:	2c00      	cmp	r4, #0
 8007a62:	f040 80ff 	bne.w	8007c64 <HAL_RCCEx_PeriphCLKConfig+0x694>
      __HAL_RCC_RNG_CONFIG(pPeriphClkInit->RngClockSelection);
 8007a66:	48ac      	ldr	r0, [pc, #688]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a68:	f8d0 20e4 	ldr.w	r2, [r0, #228]	@ 0xe4
 8007a6c:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8007a70:	430a      	orrs	r2, r1
 8007a72:	f8c0 20e4 	str.w	r2, [r0, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAES) == RCC_PERIPHCLK_SAES)
 8007a76:	04d9      	lsls	r1, r3, #19
 8007a78:	d509      	bpl.n	8007a8e <HAL_RCCEx_PeriphCLKConfig+0x4be>
    __HAL_RCC_SAES_CONFIG(pPeriphClkInit->SaesClockSelection);
 8007a7a:	49a7      	ldr	r1, [pc, #668]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a7c:	f8d5 00a8 	ldr.w	r0, [r5, #168]	@ 0xa8
 8007a80:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007a84:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8007a88:	4302      	orrs	r2, r0
 8007a8a:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == (RCC_PERIPHCLK_SDMMC))
 8007a8e:	029a      	lsls	r2, r3, #10
 8007a90:	d510      	bpl.n	8007ab4 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    if (pPeriphClkInit->SdmmcClockSelection == RCC_SDMMCCLKSOURCE_PLL1)
 8007a92:	f8d5 00b0 	ldr.w	r0, [r5, #176]	@ 0xb0
 8007a96:	49a0      	ldr	r1, [pc, #640]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007a98:	f5b0 4f80 	cmp.w	r0, #16384	@ 0x4000
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007a9c:	bf02      	ittt	eq
 8007a9e:	6a8a      	ldreq	r2, [r1, #40]	@ 0x28
 8007aa0:	f442 3280 	orreq.w	r2, r2, #65536	@ 0x10000
 8007aa4:	628a      	streq	r2, [r1, #40]	@ 0x28
    __HAL_RCC_SDMMC_CONFIG(pPeriphClkInit->SdmmcClockSelection);
 8007aa6:	f8d1 20e4 	ldr.w	r2, [r1, #228]	@ 0xe4
 8007aaa:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007aae:	4302      	orrs	r2, r0
 8007ab0:	f8c1 20e4 	str.w	r2, [r1, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI1) == RCC_PERIPHCLK_SPI1)
 8007ab4:	021f      	lsls	r7, r3, #8
 8007ab6:	d509      	bpl.n	8007acc <HAL_RCCEx_PeriphCLKConfig+0x4fc>
    __HAL_RCC_SPI1_CONFIG(pPeriphClkInit->Spi1ClockSelection);
 8007ab8:	4997      	ldr	r1, [pc, #604]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007aba:	f8d5 00c4 	ldr.w	r0, [r5, #196]	@ 0xc4
 8007abe:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007ac2:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 8007ac6:	4302      	orrs	r2, r0
 8007ac8:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI2) == RCC_PERIPHCLK_SPI2)
 8007acc:	01d8      	lsls	r0, r3, #7
 8007ace:	d509      	bpl.n	8007ae4 <HAL_RCCEx_PeriphCLKConfig+0x514>
    __HAL_RCC_SPI2_CONFIG(pPeriphClkInit->Spi2ClockSelection);
 8007ad0:	4991      	ldr	r1, [pc, #580]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007ad2:	f8d5 00c8 	ldr.w	r0, [r5, #200]	@ 0xc8
 8007ad6:	f8d1 20e0 	ldr.w	r2, [r1, #224]	@ 0xe0
 8007ada:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8007ade:	4302      	orrs	r2, r0
 8007ae0:	f8c1 20e0 	str.w	r2, [r1, #224]	@ 0xe0
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI3) == RCC_PERIPHCLK_SPI3)
 8007ae4:	0199      	lsls	r1, r3, #6
 8007ae6:	d509      	bpl.n	8007afc <HAL_RCCEx_PeriphCLKConfig+0x52c>
    __HAL_RCC_SPI3_CONFIG(pPeriphClkInit->Spi3ClockSelection);
 8007ae8:	498b      	ldr	r1, [pc, #556]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007aea:	f8d5 00cc 	ldr.w	r0, [r5, #204]	@ 0xcc
 8007aee:	f8d1 20e8 	ldr.w	r2, [r1, #232]	@ 0xe8
 8007af2:	f022 0218 	bic.w	r2, r2, #24
 8007af6:	4302      	orrs	r2, r0
 8007af8:	f8c1 20e8 	str.w	r2, [r1, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 8007afc:	015a      	lsls	r2, r3, #5
 8007afe:	d517      	bpl.n	8007b30 <HAL_RCCEx_PeriphCLKConfig+0x560>
    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL1)
 8007b00:	f8d5 30bc 	ldr.w	r3, [r5, #188]	@ 0xbc
 8007b04:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8007b08:	f040 80ae 	bne.w	8007c68 <HAL_RCCEx_PeriphCLKConfig+0x698>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007b0c:	4a82      	ldr	r2, [pc, #520]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007b0e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007b10:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007b14:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007b16:	2c00      	cmp	r4, #0
 8007b18:	f040 80b0 	bne.w	8007c7c <HAL_RCCEx_PeriphCLKConfig+0x6ac>
      __HAL_RCC_OSPI_CONFIG(pPeriphClkInit->OspiClockSelection);
 8007b1c:	4a7e      	ldr	r2, [pc, #504]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007b1e:	f8d5 10bc 	ldr.w	r1, [r5, #188]	@ 0xbc
 8007b22:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007b26:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8007b2a:	430b      	orrs	r3, r1
 8007b2c:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HSPI) == RCC_PERIPHCLK_HSPI)
 8007b30:	686b      	ldr	r3, [r5, #4]
 8007b32:	07db      	lsls	r3, r3, #31
 8007b34:	d510      	bpl.n	8007b58 <HAL_RCCEx_PeriphCLKConfig+0x588>
    switch (pPeriphClkInit->HspiClockSelection)
 8007b36:	f8d5 30c0 	ldr.w	r3, [r5, #192]	@ 0xc0
 8007b3a:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8007b3e:	f000 80b9 	beq.w	8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x6e4>
 8007b42:	f200 809d 	bhi.w	8007c80 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
 8007b46:	2b00      	cmp	r3, #0
 8007b48:	f000 80a8 	beq.w	8007c9c <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 8007b4c:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007b50:	f000 809f 	beq.w	8007c92 <HAL_RCCEx_PeriphCLKConfig+0x6c2>
 8007b54:	2601      	movs	r6, #1
 8007b56:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN1) == (RCC_PERIPHCLK_FDCAN1))
 8007b58:	682b      	ldr	r3, [r5, #0]
 8007b5a:	011f      	lsls	r7, r3, #4
 8007b5c:	d50e      	bpl.n	8007b7c <HAL_RCCEx_PeriphCLKConfig+0x5ac>
    switch (pPeriphClkInit->Fdcan1ClockSelection)
 8007b5e:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8007b62:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007b66:	f000 80ad 	beq.w	8007cc4 <HAL_RCCEx_PeriphCLKConfig+0x6f4>
 8007b6a:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8007b6e:	f000 80ba 	beq.w	8007ce6 <HAL_RCCEx_PeriphCLKConfig+0x716>
 8007b72:	2b00      	cmp	r3, #0
 8007b74:	f000 80ab 	beq.w	8007cce <HAL_RCCEx_PeriphCLKConfig+0x6fe>
 8007b78:	2601      	movs	r6, #1
 8007b7a:	4634      	mov	r4, r6
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DAC1) == RCC_PERIPHCLK_DAC1)
 8007b7c:	e9d5 3100 	ldrd	r3, r1, [r5]
 8007b80:	00d8      	lsls	r0, r3, #3
 8007b82:	d509      	bpl.n	8007b98 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
    __HAL_RCC_DAC1_CONFIG(pPeriphClkInit->Dac1ClockSelection);
 8007b84:	4a64      	ldr	r2, [pc, #400]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007b86:	f8d5 00b8 	ldr.w	r0, [r5, #184]	@ 0xb8
 8007b8a:	f8d2 30e8 	ldr.w	r3, [r2, #232]	@ 0xe8
 8007b8e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8007b92:	4303      	orrs	r3, r0
 8007b94:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8007b98:	0789      	lsls	r1, r1, #30
 8007b9a:	d51a      	bpl.n	8007bd2 <HAL_RCCEx_PeriphCLKConfig+0x602>
    switch (pPeriphClkInit->LtdcClockSelection)
 8007b9c:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
 8007ba0:	2b00      	cmp	r3, #0
 8007ba2:	f000 80a8 	beq.w	8007cf6 <HAL_RCCEx_PeriphCLKConfig+0x726>
 8007ba6:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8007baa:	f040 80a9 	bne.w	8007d00 <HAL_RCCEx_PeriphCLKConfig+0x730>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007bae:	f105 0008 	add.w	r0, r5, #8
 8007bb2:	f7ff fc35 	bl	8007420 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007bb6:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007bb8:	2800      	cmp	r0, #0
 8007bba:	f040 80a4 	bne.w	8007d06 <HAL_RCCEx_PeriphCLKConfig+0x736>
      __HAL_RCC_LTDC_CONFIG(pPeriphClkInit->LtdcClockSelection);
 8007bbe:	4a56      	ldr	r2, [pc, #344]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007bc0:	f8d5 10d4 	ldr.w	r1, [r5, #212]	@ 0xd4
 8007bc4:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007bc8:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8007bcc:	430b      	orrs	r3, r1
 8007bce:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DSI) == RCC_PERIPHCLK_DSI)
 8007bd2:	686b      	ldr	r3, [r5, #4]
 8007bd4:	075a      	lsls	r2, r3, #29
 8007bd6:	d514      	bpl.n	8007c02 <HAL_RCCEx_PeriphCLKConfig+0x632>
    if (pPeriphClkInit->DsiClockSelection == RCC_DSICLKSOURCE_PLL3)
 8007bd8:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
 8007bdc:	b923      	cbnz	r3, 8007be8 <HAL_RCCEx_PeriphCLKConfig+0x618>
      ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007bde:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007be2:	f7ff fc89 	bl	80074f8 <RCCEx_PLL3_Config>
 8007be6:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007be8:	2c00      	cmp	r4, #0
 8007bea:	f040 808e 	bne.w	8007d0a <HAL_RCCEx_PeriphCLKConfig+0x73a>
      __HAL_RCC_DSI_CONFIG(pPeriphClkInit->DsiClockSelection);
 8007bee:	4a4a      	ldr	r2, [pc, #296]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007bf0:	f8d5 10d8 	ldr.w	r1, [r5, #216]	@ 0xd8
 8007bf4:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007bf8:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8007bfc:	430b      	orrs	r3, r1
 8007bfe:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USBPHY) == RCC_PERIPHCLK_USBPHY)
 8007c02:	686b      	ldr	r3, [r5, #4]
 8007c04:	071b      	lsls	r3, r3, #28
 8007c06:	d517      	bpl.n	8007c38 <HAL_RCCEx_PeriphCLKConfig+0x668>
    switch (pPeriphClkInit->UsbPhyClockSelection)
 8007c08:	f8d5 20dc 	ldr.w	r2, [r5, #220]	@ 0xdc
 8007c0c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8007c10:	d009      	beq.n	8007c26 <HAL_RCCEx_PeriphCLKConfig+0x656>
 8007c12:	d87c      	bhi.n	8007d0e <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8007c14:	b13a      	cbz	r2, 8007c26 <HAL_RCCEx_PeriphCLKConfig+0x656>
 8007c16:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 8007c1a:	d17b      	bne.n	8007d14 <HAL_RCCEx_PeriphCLKConfig+0x744>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007c1c:	493e      	ldr	r1, [pc, #248]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c1e:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 8007c20:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007c24:	628b      	str	r3, [r1, #40]	@ 0x28
    if (ret == HAL_OK)
 8007c26:	b944      	cbnz	r4, 8007c3a <HAL_RCCEx_PeriphCLKConfig+0x66a>
      __HAL_RCC_USBPHY_CONFIG(pPeriphClkInit->UsbPhyClockSelection);
 8007c28:	493b      	ldr	r1, [pc, #236]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c2a:	f8d1 30e4 	ldr.w	r3, [r1, #228]	@ 0xe4
 8007c2e:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8007c32:	4313      	orrs	r3, r2
 8007c34:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 8007c38:	4634      	mov	r4, r6
}
 8007c3a:	4620      	mov	r0, r4
 8007c3c:	b002      	add	sp, #8
 8007c3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007c42:	f105 0008 	add.w	r0, r5, #8
 8007c46:	f7ff fbeb 	bl	8007420 <RCCEx_PLL2_Config>
 8007c4a:	4604      	mov	r4, r0
        break;
 8007c4c:	e6ef      	b.n	8007a2e <HAL_RCCEx_PeriphCLKConfig+0x45e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c4e:	4a32      	ldr	r2, [pc, #200]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c50:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007c52:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007c56:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 8007c58:	e6e9      	b.n	8007a2e <HAL_RCCEx_PeriphCLKConfig+0x45e>
 8007c5a:	4626      	mov	r6, r4
 8007c5c:	e6f4      	b.n	8007a48 <HAL_RCCEx_PeriphCLKConfig+0x478>
    switch (pPeriphClkInit->RngClockSelection)
 8007c5e:	2601      	movs	r6, #1
 8007c60:	4634      	mov	r4, r6
 8007c62:	e708      	b.n	8007a76 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 8007c64:	4626      	mov	r6, r4
 8007c66:	e706      	b.n	8007a76 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    if (pPeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL2)
 8007c68:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8007c6c:	f47f af53 	bne.w	8007b16 <HAL_RCCEx_PeriphCLKConfig+0x546>
      ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007c70:	f105 0008 	add.w	r0, r5, #8
 8007c74:	f7ff fbd4 	bl	8007420 <RCCEx_PLL2_Config>
 8007c78:	4604      	mov	r4, r0
 8007c7a:	e74c      	b.n	8007b16 <HAL_RCCEx_PeriphCLKConfig+0x546>
 8007c7c:	4626      	mov	r6, r4
 8007c7e:	e757      	b.n	8007b30 <HAL_RCCEx_PeriphCLKConfig+0x560>
    switch (pPeriphClkInit->HspiClockSelection)
 8007c80:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8007c84:	f47f af66 	bne.w	8007b54 <HAL_RCCEx_PeriphCLKConfig+0x584>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007c88:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007c8c:	f7ff fc34 	bl	80074f8 <RCCEx_PLL3_Config>
 8007c90:	e014      	b.n	8007cbc <HAL_RCCEx_PeriphCLKConfig+0x6ec>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c92:	4a21      	ldr	r2, [pc, #132]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007c94:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007c96:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007c9a:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007c9c:	b984      	cbnz	r4, 8007cc0 <HAL_RCCEx_PeriphCLKConfig+0x6f0>
      __HAL_RCC_HSPI_CONFIG(pPeriphClkInit->HspiClockSelection);
 8007c9e:	4a1e      	ldr	r2, [pc, #120]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007ca0:	f8d5 10c0 	ldr.w	r1, [r5, #192]	@ 0xc0
 8007ca4:	f8d2 30e4 	ldr.w	r3, [r2, #228]	@ 0xe4
 8007ca8:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8007cac:	430b      	orrs	r3, r1
 8007cae:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8007cb2:	e751      	b.n	8007b58 <HAL_RCCEx_PeriphCLKConfig+0x588>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007cb4:	f105 0008 	add.w	r0, r5, #8
 8007cb8:	f7ff fbb2 	bl	8007420 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007cbc:	4604      	mov	r4, r0
        break;
 8007cbe:	e7ed      	b.n	8007c9c <HAL_RCCEx_PeriphCLKConfig+0x6cc>
 8007cc0:	4626      	mov	r6, r4
 8007cc2:	e749      	b.n	8007b58 <HAL_RCCEx_PeriphCLKConfig+0x588>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007cc4:	4a14      	ldr	r2, [pc, #80]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007cc6:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8007cc8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007ccc:	6293      	str	r3, [r2, #40]	@ 0x28
    if (ret == HAL_OK)
 8007cce:	b984      	cbnz	r4, 8007cf2 <HAL_RCCEx_PeriphCLKConfig+0x722>
      __HAL_RCC_FDCAN1_CONFIG(pPeriphClkInit->Fdcan1ClockSelection);
 8007cd0:	4a11      	ldr	r2, [pc, #68]	@ (8007d18 <HAL_RCCEx_PeriphCLKConfig+0x748>)
 8007cd2:	f8d5 1090 	ldr.w	r1, [r5, #144]	@ 0x90
 8007cd6:	f8d2 30e0 	ldr.w	r3, [r2, #224]	@ 0xe0
 8007cda:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 8007cde:	430b      	orrs	r3, r1
 8007ce0:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8007ce4:	e74a      	b.n	8007b7c <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8007ce6:	f105 0008 	add.w	r0, r5, #8
 8007cea:	f7ff fb99 	bl	8007420 <RCCEx_PLL2_Config>
 8007cee:	4604      	mov	r4, r0
        break;
 8007cf0:	e7ed      	b.n	8007cce <HAL_RCCEx_PeriphCLKConfig+0x6fe>
 8007cf2:	4626      	mov	r6, r4
 8007cf4:	e742      	b.n	8007b7c <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8007cf6:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
 8007cfa:	f7ff fbfd 	bl	80074f8 <RCCEx_PLL3_Config>
 8007cfe:	e75a      	b.n	8007bb6 <HAL_RCCEx_PeriphCLKConfig+0x5e6>
    switch (pPeriphClkInit->LtdcClockSelection)
 8007d00:	2601      	movs	r6, #1
 8007d02:	4634      	mov	r4, r6
 8007d04:	e765      	b.n	8007bd2 <HAL_RCCEx_PeriphCLKConfig+0x602>
 8007d06:	4606      	mov	r6, r0
 8007d08:	e763      	b.n	8007bd2 <HAL_RCCEx_PeriphCLKConfig+0x602>
 8007d0a:	4626      	mov	r6, r4
 8007d0c:	e779      	b.n	8007c02 <HAL_RCCEx_PeriphCLKConfig+0x632>
    switch (pPeriphClkInit->UsbPhyClockSelection)
 8007d0e:	f1b2 4f40 	cmp.w	r2, #3221225472	@ 0xc0000000
 8007d12:	e782      	b.n	8007c1a <HAL_RCCEx_PeriphCLKConfig+0x64a>
 8007d14:	2401      	movs	r4, #1
 8007d16:	e790      	b.n	8007c3a <HAL_RCCEx_PeriphCLKConfig+0x66a>
 8007d18:	46020c00 	.word	0x46020c00

08007d1c <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8007d1c:	4770      	bx	lr
	...

08007d20 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007d20:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8007d24:	2b01      	cmp	r3, #1
 8007d26:	d145      	bne.n	8007db4 <HAL_TIM_Base_Start_IT+0x94>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007d28:	2302      	movs	r3, #2
 8007d2a:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007d2e:	6803      	ldr	r3, [r0, #0]
 8007d30:	68da      	ldr	r2, [r3, #12]
 8007d32:	f042 0201 	orr.w	r2, r2, #1
 8007d36:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007d38:	4a1f      	ldr	r2, [pc, #124]	@ (8007db8 <HAL_TIM_Base_Start_IT+0x98>)
 8007d3a:	4293      	cmp	r3, r2
 8007d3c:	d02c      	beq.n	8007d98 <HAL_TIM_Base_Start_IT+0x78>
 8007d3e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d42:	4293      	cmp	r3, r2
 8007d44:	d028      	beq.n	8007d98 <HAL_TIM_Base_Start_IT+0x78>
 8007d46:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007d4a:	d025      	beq.n	8007d98 <HAL_TIM_Base_Start_IT+0x78>
 8007d4c:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8007d50:	d022      	beq.n	8007d98 <HAL_TIM_Base_Start_IT+0x78>
 8007d52:	4a1a      	ldr	r2, [pc, #104]	@ (8007dbc <HAL_TIM_Base_Start_IT+0x9c>)
 8007d54:	4293      	cmp	r3, r2
 8007d56:	d01f      	beq.n	8007d98 <HAL_TIM_Base_Start_IT+0x78>
 8007d58:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d5c:	4293      	cmp	r3, r2
 8007d5e:	d01b      	beq.n	8007d98 <HAL_TIM_Base_Start_IT+0x78>
 8007d60:	4a17      	ldr	r2, [pc, #92]	@ (8007dc0 <HAL_TIM_Base_Start_IT+0xa0>)
 8007d62:	4293      	cmp	r3, r2
 8007d64:	d018      	beq.n	8007d98 <HAL_TIM_Base_Start_IT+0x78>
 8007d66:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d6a:	4293      	cmp	r3, r2
 8007d6c:	d014      	beq.n	8007d98 <HAL_TIM_Base_Start_IT+0x78>
 8007d6e:	4a15      	ldr	r2, [pc, #84]	@ (8007dc4 <HAL_TIM_Base_Start_IT+0xa4>)
 8007d70:	4293      	cmp	r3, r2
 8007d72:	d011      	beq.n	8007d98 <HAL_TIM_Base_Start_IT+0x78>
 8007d74:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d78:	4293      	cmp	r3, r2
 8007d7a:	d00d      	beq.n	8007d98 <HAL_TIM_Base_Start_IT+0x78>
 8007d7c:	4a12      	ldr	r2, [pc, #72]	@ (8007dc8 <HAL_TIM_Base_Start_IT+0xa8>)
 8007d7e:	4293      	cmp	r3, r2
 8007d80:	d00a      	beq.n	8007d98 <HAL_TIM_Base_Start_IT+0x78>
 8007d82:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d86:	4293      	cmp	r3, r2
 8007d88:	d006      	beq.n	8007d98 <HAL_TIM_Base_Start_IT+0x78>
 8007d8a:	4a10      	ldr	r2, [pc, #64]	@ (8007dcc <HAL_TIM_Base_Start_IT+0xac>)
 8007d8c:	4293      	cmp	r3, r2
 8007d8e:	d003      	beq.n	8007d98 <HAL_TIM_Base_Start_IT+0x78>
 8007d90:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007d94:	4293      	cmp	r3, r2
 8007d96:	d107      	bne.n	8007da8 <HAL_TIM_Base_Start_IT+0x88>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007d98:	6899      	ldr	r1, [r3, #8]
 8007d9a:	4a0d      	ldr	r2, [pc, #52]	@ (8007dd0 <HAL_TIM_Base_Start_IT+0xb0>)
 8007d9c:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007d9e:	2a06      	cmp	r2, #6
 8007da0:	d006      	beq.n	8007db0 <HAL_TIM_Base_Start_IT+0x90>
 8007da2:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
 8007da6:	d003      	beq.n	8007db0 <HAL_TIM_Base_Start_IT+0x90>
    {
      __HAL_TIM_ENABLE(htim);
 8007da8:	681a      	ldr	r2, [r3, #0]
 8007daa:	f042 0201 	orr.w	r2, r2, #1
 8007dae:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8007db0:	2000      	movs	r0, #0
 8007db2:	4770      	bx	lr
    return HAL_ERROR;
 8007db4:	2001      	movs	r0, #1
}
 8007db6:	4770      	bx	lr
 8007db8:	40012c00 	.word	0x40012c00
 8007dbc:	40000400 	.word	0x40000400
 8007dc0:	40000800 	.word	0x40000800
 8007dc4:	40000c00 	.word	0x40000c00
 8007dc8:	40013400 	.word	0x40013400
 8007dcc:	40014000 	.word	0x40014000
 8007dd0:	00010007 	.word	0x00010007

08007dd4 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8007dd4:	4770      	bx	lr

08007dd6 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8007dd6:	4770      	bx	lr

08007dd8 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8007dd8:	4770      	bx	lr

08007dda <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8007dda:	4770      	bx	lr

08007ddc <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8007ddc:	6803      	ldr	r3, [r0, #0]
{
 8007dde:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8007de0:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8007de2:	691e      	ldr	r6, [r3, #16]
{
 8007de4:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007de6:	07b2      	lsls	r2, r6, #30
 8007de8:	d50e      	bpl.n	8007e08 <HAL_TIM_IRQHandler+0x2c>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8007dea:	07a9      	lsls	r1, r5, #30
 8007dec:	d50c      	bpl.n	8007e08 <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8007dee:	f06f 0202 	mvn.w	r2, #2
 8007df2:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007df4:	2201      	movs	r2, #1
 8007df6:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007df8:	699b      	ldr	r3, [r3, #24]
 8007dfa:	079a      	lsls	r2, r3, #30
 8007dfc:	f000 80a4 	beq.w	8007f48 <HAL_TIM_IRQHandler+0x16c>
          HAL_TIM_IC_CaptureCallback(htim);
 8007e00:	f7ff ffe9 	bl	8007dd6 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e04:	2300      	movs	r3, #0
 8007e06:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8007e08:	0773      	lsls	r3, r6, #29
 8007e0a:	d511      	bpl.n	8007e30 <HAL_TIM_IRQHandler+0x54>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8007e0c:	0768      	lsls	r0, r5, #29
 8007e0e:	d50f      	bpl.n	8007e30 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007e10:	f06f 0204 	mvn.w	r2, #4
 8007e14:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8007e16:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007e18:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007e1a:	2202      	movs	r2, #2
 8007e1c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007e1e:	699b      	ldr	r3, [r3, #24]
 8007e20:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8007e24:	f000 8096 	beq.w	8007f54 <HAL_TIM_IRQHandler+0x178>
        HAL_TIM_IC_CaptureCallback(htim);
 8007e28:	f7ff ffd5 	bl	8007dd6 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e2c:	2300      	movs	r3, #0
 8007e2e:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8007e30:	0731      	lsls	r1, r6, #28
 8007e32:	d510      	bpl.n	8007e56 <HAL_TIM_IRQHandler+0x7a>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8007e34:	072a      	lsls	r2, r5, #28
 8007e36:	d50e      	bpl.n	8007e56 <HAL_TIM_IRQHandler+0x7a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007e38:	f06f 0208 	mvn.w	r2, #8
 8007e3c:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8007e3e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007e40:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007e42:	2204      	movs	r2, #4
 8007e44:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007e46:	69db      	ldr	r3, [r3, #28]
 8007e48:	079b      	lsls	r3, r3, #30
 8007e4a:	f000 8089 	beq.w	8007f60 <HAL_TIM_IRQHandler+0x184>
        HAL_TIM_IC_CaptureCallback(htim);
 8007e4e:	f7ff ffc2 	bl	8007dd6 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e52:	2300      	movs	r3, #0
 8007e54:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8007e56:	06f1      	lsls	r1, r6, #27
 8007e58:	d510      	bpl.n	8007e7c <HAL_TIM_IRQHandler+0xa0>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8007e5a:	06ea      	lsls	r2, r5, #27
 8007e5c:	d50e      	bpl.n	8007e7c <HAL_TIM_IRQHandler+0xa0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8007e5e:	f06f 0210 	mvn.w	r2, #16
 8007e62:	6823      	ldr	r3, [r4, #0]
        HAL_TIM_IC_CaptureCallback(htim);
 8007e64:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8007e66:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007e68:	2208      	movs	r2, #8
 8007e6a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007e6c:	69db      	ldr	r3, [r3, #28]
 8007e6e:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8007e72:	d07b      	beq.n	8007f6c <HAL_TIM_IRQHandler+0x190>
        HAL_TIM_IC_CaptureCallback(htim);
 8007e74:	f7ff ffaf 	bl	8007dd6 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e78:	2300      	movs	r3, #0
 8007e7a:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8007e7c:	07f3      	lsls	r3, r6, #31
 8007e7e:	d508      	bpl.n	8007e92 <HAL_TIM_IRQHandler+0xb6>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8007e80:	07e8      	lsls	r0, r5, #31
 8007e82:	d506      	bpl.n	8007e92 <HAL_TIM_IRQHandler+0xb6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007e84:	f06f 0201 	mvn.w	r2, #1
 8007e88:	6823      	ldr	r3, [r4, #0]
      HAL_TIM_PeriodElapsedCallback(htim);
 8007e8a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007e8c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8007e8e:	f7f8 fc9f 	bl	80007d0 <HAL_TIM_PeriodElapsedCallback>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 8007e92:	f416 5f02 	tst.w	r6, #8320	@ 0x2080
 8007e96:	d008      	beq.n	8007eaa <HAL_TIM_IRQHandler+0xce>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007e98:	0629      	lsls	r1, r5, #24
 8007e9a:	d506      	bpl.n	8007eaa <HAL_TIM_IRQHandler+0xce>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8007e9c:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8007ea0:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_BreakCallback(htim);
 8007ea2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8007ea4:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8007ea6:	f000 f952 	bl	800814e <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
 8007eaa:	05f2      	lsls	r2, r6, #23
 8007eac:	d508      	bpl.n	8007ec0 <HAL_TIM_IRQHandler+0xe4>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007eae:	062b      	lsls	r3, r5, #24
 8007eb0:	d506      	bpl.n	8007ec0 <HAL_TIM_IRQHandler+0xe4>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007eb2:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8007eb6:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_Break2Callback(htim);
 8007eb8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007eba:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 8007ebc:	f000 f948 	bl	8008150 <HAL_TIMEx_Break2Callback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8007ec0:	0670      	lsls	r0, r6, #25
 8007ec2:	d508      	bpl.n	8007ed6 <HAL_TIM_IRQHandler+0xfa>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8007ec4:	0669      	lsls	r1, r5, #25
 8007ec6:	d506      	bpl.n	8007ed6 <HAL_TIM_IRQHandler+0xfa>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007ec8:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8007ecc:	6823      	ldr	r3, [r4, #0]
      HAL_TIM_TriggerCallback(htim);
 8007ece:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007ed0:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8007ed2:	f7ff ff82 	bl	8007dda <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8007ed6:	06b2      	lsls	r2, r6, #26
 8007ed8:	d508      	bpl.n	8007eec <HAL_TIM_IRQHandler+0x110>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8007eda:	06ab      	lsls	r3, r5, #26
 8007edc:	d506      	bpl.n	8007eec <HAL_TIM_IRQHandler+0x110>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007ede:	f06f 0220 	mvn.w	r2, #32
 8007ee2:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_CommutCallback(htim);
 8007ee4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007ee6:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_CommutCallback(htim);
 8007ee8:	f000 f930 	bl	800814c <HAL_TIMEx_CommutCallback>
  if ((itflag & (TIM_FLAG_IDX)) == (TIM_FLAG_IDX))
 8007eec:	02f0      	lsls	r0, r6, #11
 8007eee:	d508      	bpl.n	8007f02 <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_IDX)) == (TIM_IT_IDX))
 8007ef0:	02e9      	lsls	r1, r5, #11
 8007ef2:	d506      	bpl.n	8007f02 <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 8007ef4:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 8007ef8:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_EncoderIndexCallback(htim);
 8007efa:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 8007efc:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_EncoderIndexCallback(htim);
 8007efe:	f000 f928 	bl	8008152 <HAL_TIMEx_EncoderIndexCallback>
  if ((itflag & (TIM_FLAG_DIR)) == (TIM_FLAG_DIR))
 8007f02:	02b2      	lsls	r2, r6, #10
 8007f04:	d508      	bpl.n	8007f18 <HAL_TIM_IRQHandler+0x13c>
    if ((itsource & (TIM_IT_DIR)) == (TIM_IT_DIR))
 8007f06:	02ab      	lsls	r3, r5, #10
 8007f08:	d506      	bpl.n	8007f18 <HAL_TIM_IRQHandler+0x13c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 8007f0a:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 8007f0e:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_DirectionChangeCallback(htim);
 8007f10:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 8007f12:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_DirectionChangeCallback(htim);
 8007f14:	f000 f91e 	bl	8008154 <HAL_TIMEx_DirectionChangeCallback>
  if ((itflag & (TIM_FLAG_IERR)) == (TIM_FLAG_IERR))
 8007f18:	0270      	lsls	r0, r6, #9
 8007f1a:	d508      	bpl.n	8007f2e <HAL_TIM_IRQHandler+0x152>
    if ((itsource & (TIM_IT_IERR)) == (TIM_IT_IERR))
 8007f1c:	0269      	lsls	r1, r5, #9
 8007f1e:	d506      	bpl.n	8007f2e <HAL_TIM_IRQHandler+0x152>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 8007f20:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 8007f24:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_IndexErrorCallback(htim);
 8007f26:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 8007f28:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_IndexErrorCallback(htim);
 8007f2a:	f000 f914 	bl	8008156 <HAL_TIMEx_IndexErrorCallback>
  if ((itflag & (TIM_FLAG_TERR)) == (TIM_FLAG_TERR))
 8007f2e:	0232      	lsls	r2, r6, #8
 8007f30:	d522      	bpl.n	8007f78 <HAL_TIM_IRQHandler+0x19c>
    if ((itsource & (TIM_IT_TERR)) == (TIM_IT_TERR))
 8007f32:	022b      	lsls	r3, r5, #8
 8007f34:	d520      	bpl.n	8007f78 <HAL_TIM_IRQHandler+0x19c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 8007f36:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 8007f3a:	6823      	ldr	r3, [r4, #0]
      HAL_TIMEx_TransitionErrorCallback(htim);
 8007f3c:	4620      	mov	r0, r4
}
 8007f3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 8007f42:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_TransitionErrorCallback(htim);
 8007f44:	f000 b908 	b.w	8008158 <HAL_TIMEx_TransitionErrorCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f48:	f7ff ff44 	bl	8007dd4 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f4c:	4620      	mov	r0, r4
 8007f4e:	f7ff ff43 	bl	8007dd8 <HAL_TIM_PWM_PulseFinishedCallback>
 8007f52:	e757      	b.n	8007e04 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f54:	f7ff ff3e 	bl	8007dd4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f58:	4620      	mov	r0, r4
 8007f5a:	f7ff ff3d 	bl	8007dd8 <HAL_TIM_PWM_PulseFinishedCallback>
 8007f5e:	e765      	b.n	8007e2c <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f60:	f7ff ff38 	bl	8007dd4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f64:	4620      	mov	r0, r4
 8007f66:	f7ff ff37 	bl	8007dd8 <HAL_TIM_PWM_PulseFinishedCallback>
 8007f6a:	e772      	b.n	8007e52 <HAL_TIM_IRQHandler+0x76>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007f6c:	f7ff ff32 	bl	8007dd4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007f70:	4620      	mov	r0, r4
 8007f72:	f7ff ff31 	bl	8007dd8 <HAL_TIM_PWM_PulseFinishedCallback>
 8007f76:	e77f      	b.n	8007e78 <HAL_TIM_IRQHandler+0x9c>
}
 8007f78:	bd70      	pop	{r4, r5, r6, pc}
	...

08007f7c <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007f7c:	4a53      	ldr	r2, [pc, #332]	@ (80080cc <TIM_Base_SetConfig+0x150>)
  tmpcr1 = TIMx->CR1;
 8007f7e:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007f80:	4290      	cmp	r0, r2
 8007f82:	d025      	beq.n	8007fd0 <TIM_Base_SetConfig+0x54>
 8007f84:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007f88:	4290      	cmp	r0, r2
 8007f8a:	d021      	beq.n	8007fd0 <TIM_Base_SetConfig+0x54>
 8007f8c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007f90:	d01e      	beq.n	8007fd0 <TIM_Base_SetConfig+0x54>
 8007f92:	f1b0 4fa0 	cmp.w	r0, #1342177280	@ 0x50000000
 8007f96:	d01b      	beq.n	8007fd0 <TIM_Base_SetConfig+0x54>
 8007f98:	4a4d      	ldr	r2, [pc, #308]	@ (80080d0 <TIM_Base_SetConfig+0x154>)
 8007f9a:	4290      	cmp	r0, r2
 8007f9c:	d018      	beq.n	8007fd0 <TIM_Base_SetConfig+0x54>
 8007f9e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fa2:	4290      	cmp	r0, r2
 8007fa4:	d014      	beq.n	8007fd0 <TIM_Base_SetConfig+0x54>
 8007fa6:	4a4b      	ldr	r2, [pc, #300]	@ (80080d4 <TIM_Base_SetConfig+0x158>)
 8007fa8:	4290      	cmp	r0, r2
 8007faa:	d011      	beq.n	8007fd0 <TIM_Base_SetConfig+0x54>
 8007fac:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fb0:	4290      	cmp	r0, r2
 8007fb2:	d00d      	beq.n	8007fd0 <TIM_Base_SetConfig+0x54>
 8007fb4:	4a48      	ldr	r2, [pc, #288]	@ (80080d8 <TIM_Base_SetConfig+0x15c>)
 8007fb6:	4290      	cmp	r0, r2
 8007fb8:	d00a      	beq.n	8007fd0 <TIM_Base_SetConfig+0x54>
 8007fba:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fbe:	4290      	cmp	r0, r2
 8007fc0:	d006      	beq.n	8007fd0 <TIM_Base_SetConfig+0x54>
 8007fc2:	4a46      	ldr	r2, [pc, #280]	@ (80080dc <TIM_Base_SetConfig+0x160>)
 8007fc4:	4290      	cmp	r0, r2
 8007fc6:	d003      	beq.n	8007fd0 <TIM_Base_SetConfig+0x54>
 8007fc8:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fcc:	4290      	cmp	r0, r2
 8007fce:	d12c      	bne.n	800802a <TIM_Base_SetConfig+0xae>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007fd0:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007fd2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8007fd6:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007fd8:	4a3c      	ldr	r2, [pc, #240]	@ (80080cc <TIM_Base_SetConfig+0x150>)
 8007fda:	4290      	cmp	r0, r2
 8007fdc:	d03a      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 8007fde:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007fe2:	4290      	cmp	r0, r2
 8007fe4:	d036      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 8007fe6:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007fea:	d033      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 8007fec:	f1b0 4fa0 	cmp.w	r0, #1342177280	@ 0x50000000
 8007ff0:	d030      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 8007ff2:	4a37      	ldr	r2, [pc, #220]	@ (80080d0 <TIM_Base_SetConfig+0x154>)
 8007ff4:	4290      	cmp	r0, r2
 8007ff6:	d02d      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 8007ff8:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8007ffc:	4290      	cmp	r0, r2
 8007ffe:	d029      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 8008000:	4a34      	ldr	r2, [pc, #208]	@ (80080d4 <TIM_Base_SetConfig+0x158>)
 8008002:	4290      	cmp	r0, r2
 8008004:	d026      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 8008006:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800800a:	4290      	cmp	r0, r2
 800800c:	d022      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 800800e:	4a32      	ldr	r2, [pc, #200]	@ (80080d8 <TIM_Base_SetConfig+0x15c>)
 8008010:	4290      	cmp	r0, r2
 8008012:	d01f      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 8008014:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008018:	4290      	cmp	r0, r2
 800801a:	d01b      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 800801c:	4a2f      	ldr	r2, [pc, #188]	@ (80080dc <TIM_Base_SetConfig+0x160>)
 800801e:	4290      	cmp	r0, r2
 8008020:	d018      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 8008022:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008026:	4290      	cmp	r0, r2
 8008028:	d014      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 800802a:	4a2d      	ldr	r2, [pc, #180]	@ (80080e0 <TIM_Base_SetConfig+0x164>)
 800802c:	4290      	cmp	r0, r2
 800802e:	d011      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 8008030:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008034:	4290      	cmp	r0, r2
 8008036:	d00d      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 8008038:	4a2a      	ldr	r2, [pc, #168]	@ (80080e4 <TIM_Base_SetConfig+0x168>)
 800803a:	4290      	cmp	r0, r2
 800803c:	d00a      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 800803e:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008042:	4290      	cmp	r0, r2
 8008044:	d006      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 8008046:	4a28      	ldr	r2, [pc, #160]	@ (80080e8 <TIM_Base_SetConfig+0x16c>)
 8008048:	4290      	cmp	r0, r2
 800804a:	d003      	beq.n	8008054 <TIM_Base_SetConfig+0xd8>
 800804c:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008050:	4290      	cmp	r0, r2
 8008052:	d103      	bne.n	800805c <TIM_Base_SetConfig+0xe0>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008054:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8008056:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800805a:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800805c:	694a      	ldr	r2, [r1, #20]
 800805e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8008062:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8008064:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008066:	688b      	ldr	r3, [r1, #8]
 8008068:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800806a:	680b      	ldr	r3, [r1, #0]
 800806c:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800806e:	4b17      	ldr	r3, [pc, #92]	@ (80080cc <TIM_Base_SetConfig+0x150>)
 8008070:	4298      	cmp	r0, r3
 8008072:	d01f      	beq.n	80080b4 <TIM_Base_SetConfig+0x138>
 8008074:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008078:	4298      	cmp	r0, r3
 800807a:	d01b      	beq.n	80080b4 <TIM_Base_SetConfig+0x138>
 800807c:	4b17      	ldr	r3, [pc, #92]	@ (80080dc <TIM_Base_SetConfig+0x160>)
 800807e:	4298      	cmp	r0, r3
 8008080:	d018      	beq.n	80080b4 <TIM_Base_SetConfig+0x138>
 8008082:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008086:	4298      	cmp	r0, r3
 8008088:	d014      	beq.n	80080b4 <TIM_Base_SetConfig+0x138>
 800808a:	4b15      	ldr	r3, [pc, #84]	@ (80080e0 <TIM_Base_SetConfig+0x164>)
 800808c:	4298      	cmp	r0, r3
 800808e:	d011      	beq.n	80080b4 <TIM_Base_SetConfig+0x138>
 8008090:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008094:	4298      	cmp	r0, r3
 8008096:	d00d      	beq.n	80080b4 <TIM_Base_SetConfig+0x138>
 8008098:	4b12      	ldr	r3, [pc, #72]	@ (80080e4 <TIM_Base_SetConfig+0x168>)
 800809a:	4298      	cmp	r0, r3
 800809c:	d00a      	beq.n	80080b4 <TIM_Base_SetConfig+0x138>
 800809e:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80080a2:	4298      	cmp	r0, r3
 80080a4:	d006      	beq.n	80080b4 <TIM_Base_SetConfig+0x138>
 80080a6:	4b10      	ldr	r3, [pc, #64]	@ (80080e8 <TIM_Base_SetConfig+0x16c>)
 80080a8:	4298      	cmp	r0, r3
 80080aa:	d003      	beq.n	80080b4 <TIM_Base_SetConfig+0x138>
 80080ac:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80080b0:	4298      	cmp	r0, r3
 80080b2:	d101      	bne.n	80080b8 <TIM_Base_SetConfig+0x13c>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80080b4:	690b      	ldr	r3, [r1, #16]
 80080b6:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80080b8:	2301      	movs	r3, #1
 80080ba:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 80080bc:	6903      	ldr	r3, [r0, #16]
 80080be:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 80080c0:	bf42      	ittt	mi
 80080c2:	6903      	ldrmi	r3, [r0, #16]
 80080c4:	f023 0301 	bicmi.w	r3, r3, #1
 80080c8:	6103      	strmi	r3, [r0, #16]
  }
}
 80080ca:	4770      	bx	lr
 80080cc:	40012c00 	.word	0x40012c00
 80080d0:	40000400 	.word	0x40000400
 80080d4:	40000800 	.word	0x40000800
 80080d8:	40000c00 	.word	0x40000c00
 80080dc:	40013400 	.word	0x40013400
 80080e0:	40014000 	.word	0x40014000
 80080e4:	40014400 	.word	0x40014400
 80080e8:	40014800 	.word	0x40014800

080080ec <HAL_TIM_Base_Init>:
{
 80080ec:	b510      	push	{r4, lr}
  if (htim == NULL)
 80080ee:	4604      	mov	r4, r0
 80080f0:	b350      	cbz	r0, 8008148 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 80080f2:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80080f6:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80080fa:	b91b      	cbnz	r3, 8008104 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80080fc:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8008100:	f7ff fe0c 	bl	8007d1c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8008104:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008106:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8008108:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800810c:	1d21      	adds	r1, r4, #4
 800810e:	f7ff ff35 	bl	8007f7c <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008112:	2301      	movs	r3, #1
  return HAL_OK;
 8008114:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008116:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800811a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800811e:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8008122:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8008126:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 800812a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800812e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008132:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8008136:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800813a:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
 800813e:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
 8008142:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 8008146:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008148:	2001      	movs	r0, #1
 800814a:	e7fc      	b.n	8008146 <HAL_TIM_Base_Init+0x5a>

0800814c <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 800814c:	4770      	bx	lr

0800814e <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 800814e:	4770      	bx	lr

08008150 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
 8008150:	4770      	bx	lr

08008152 <HAL_TIMEx_EncoderIndexCallback>:
/**
  * @brief  Encoder index callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_EncoderIndexCallback(TIM_HandleTypeDef *htim)
 8008152:	4770      	bx	lr

08008154 <HAL_TIMEx_DirectionChangeCallback>:
/**
  * @brief  Direction change callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_DirectionChangeCallback(TIM_HandleTypeDef *htim)
 8008154:	4770      	bx	lr

08008156 <HAL_TIMEx_IndexErrorCallback>:
/**
  * @brief  Index error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_IndexErrorCallback(TIM_HandleTypeDef *htim)
 8008156:	4770      	bx	lr

08008158 <HAL_TIMEx_TransitionErrorCallback>:
/**
  * @brief  Transition error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_TransitionErrorCallback(TIM_HandleTypeDef *htim)
 8008158:	4770      	bx	lr
	...

0800815c <XSPI_ConfigCmd>:
  __IO uint32_t *tcr_reg;
  __IO uint32_t *ir_reg;
  __IO uint32_t *abr_reg;

  /* Re-initialize the value of the functional mode */
  MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, 0U);
 800815c:	6802      	ldr	r2, [r0, #0]
{
 800815e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, 0U);
 8008162:	6813      	ldr	r3, [r2, #0]
 8008164:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 8008168:	6013      	str	r3, [r2, #0]

  if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800816a:	4b7e      	ldr	r3, [pc, #504]	@ (8008364 <XSPI_ConfigCmd+0x208>)
 800816c:	429a      	cmp	r2, r3
 800816e:	d00d      	beq.n	800818c <XSPI_ConfigCmd+0x30>
 8008170:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008174:	429a      	cmp	r2, r3
 8008176:	d009      	beq.n	800818c <XSPI_ConfigCmd+0x30>
 8008178:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 800817c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008180:	429a      	cmp	r2, r3
 8008182:	d003      	beq.n	800818c <XSPI_ConfigCmd+0x30>
 8008184:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008188:	429a      	cmp	r2, r3
 800818a:	d15c      	bne.n	8008246 <XSPI_ConfigCmd+0xea>
  {
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 800818c:	6883      	ldr	r3, [r0, #8]
 800818e:	b92b      	cbnz	r3, 800819c <XSPI_ConfigCmd+0x40>
    {
      assert_param(IS_OCTOSPI_IO_SELECT(pCmd->IOSelect));
      MODIFY_REG(hxspi->Instance->CR, OCTOSPI_CR_MSEL, pCmd->IOSelect);
 8008190:	6813      	ldr	r3, [r2, #0]
 8008192:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
  {
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
    {
      assert_param(IS_HSPI_IO_SELECT(pCmd->IOSelect));
      MODIFY_REG(hxspi->Instance->CR, HSPI_CR_MSEL, pCmd->IOSelect);
 8008196:	684c      	ldr	r4, [r1, #4]
 8008198:	4323      	orrs	r3, r4
 800819a:	6013      	str	r3, [r2, #0]
  {
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
    return HAL_ERROR;
  }

  if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG)
 800819c:	680b      	ldr	r3, [r1, #0]
 800819e:	2b02      	cmp	r3, #2
 80081a0:	d165      	bne.n	800826e <XSPI_ConfigCmd+0x112>
  {
    ccr_reg = &(hxspi->Instance->WCCR);
 80081a2:	f502 74c0 	add.w	r4, r2, #384	@ 0x180
    tcr_reg = &(hxspi->Instance->WTCR);
 80081a6:	f502 76c4 	add.w	r6, r2, #392	@ 0x188
    ir_reg  = &(hxspi->Instance->WIR);
 80081aa:	f502 75c8 	add.w	r5, r2, #400	@ 0x190
    abr_reg = &(hxspi->Instance->WABR);
 80081ae:	f502 7cd0 	add.w	ip, r2, #416	@ 0x1a0
    ir_reg  = &(hxspi->Instance->IR);
    abr_reg = &(hxspi->Instance->ABR);
  }

  /* Configure the CCR register with DQS and SIOO modes */
  *ccr_reg = (pCmd->DQSMode | pCmd->SIOOMode);
 80081b2:	e9d1 3712 	ldrd	r3, r7, [r1, #72]	@ 0x48
 80081b6:	433b      	orrs	r3, r7
 80081b8:	6023      	str	r3, [r4, #0]

  if (pCmd->AlternateBytesMode != HAL_XSPI_ALT_BYTES_NONE)
 80081ba:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 80081bc:	b16b      	cbz	r3, 80081da <XSPI_ConfigCmd+0x7e>
  {
    /* Configure the ABR register with alternate bytes value */
    *abr_reg = pCmd->AlternateBytes;
 80081be:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
 80081c0:	f8cc 3000 	str.w	r3, [ip]

    /* Configure the CCR register with alternate bytes communication parameters */
    MODIFY_REG((*ccr_reg), (XSPI_CCR_ABMODE | XSPI_CCR_ABDTR | XSPI_CCR_ABSIZE),
 80081c4:	6b4f      	ldr	r7, [r1, #52]	@ 0x34
 80081c6:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 80081c8:	f8d4 c000 	ldr.w	ip, [r4]
 80081cc:	433b      	orrs	r3, r7
 80081ce:	6b0f      	ldr	r7, [r1, #48]	@ 0x30
 80081d0:	433b      	orrs	r3, r7
 80081d2:	f42c 177c 	bic.w	r7, ip, #4128768	@ 0x3f0000
 80081d6:	433b      	orrs	r3, r7
 80081d8:	6023      	str	r3, [r4, #0]
               (pCmd->AlternateBytesMode | pCmd->AlternateBytesDTRMode | pCmd->AlternateBytesWidth));
  }

  /* Configure the TCR register with the number of dummy cycles */
  MODIFY_REG((*tcr_reg), XSPI_TCR_DCYC, pCmd->DummyCycles);
 80081da:	6833      	ldr	r3, [r6, #0]
 80081dc:	6c4f      	ldr	r7, [r1, #68]	@ 0x44
 80081de:	f023 031f 	bic.w	r3, r3, #31
 80081e2:	433b      	orrs	r3, r7
 80081e4:	6033      	str	r3, [r6, #0]

  if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 80081e6:	f8d1 e038 	ldr.w	lr, [r1, #56]	@ 0x38
 80081ea:	f1be 0f00 	cmp.w	lr, #0
 80081ee:	d004      	beq.n	80081fa <XSPI_ConfigCmd+0x9e>
  {
    if (pCmd->OperationType == HAL_XSPI_OPTYPE_COMMON_CFG)
 80081f0:	680b      	ldr	r3, [r1, #0]
 80081f2:	b913      	cbnz	r3, 80081fa <XSPI_ConfigCmd+0x9e>
    {
      /* Configure the DLR register with the number of data */
      hxspi->Instance->DLR = (pCmd->DataLength - 1U);
 80081f4:	6bcb      	ldr	r3, [r1, #60]	@ 0x3c
 80081f6:	3b01      	subs	r3, #1
 80081f8:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }

  if (pCmd->InstructionMode != HAL_XSPI_INSTRUCTION_NONE)
 80081fa:	68cb      	ldr	r3, [r1, #12]
  {
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 80081fc:	f8d1 901c 	ldr.w	r9, [r1, #28]
  if (pCmd->InstructionMode != HAL_XSPI_INSTRUCTION_NONE)
 8008200:	2b00      	cmp	r3, #0
 8008202:	f000 808e 	beq.w	8008322 <XSPI_ConfigCmd+0x1c6>
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
      {
        /* ---- Command with instruction, address and data ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 8008206:	e9d1 c804 	ldrd	ip, r8, [r1, #16]
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 800820a:	f1b9 0f00 	cmp.w	r9, #0
 800820e:	d05e      	beq.n	80082ce <XSPI_ConfigCmd+0x172>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 8008210:	e9d1 6708 	ldrd	r6, r7, [r1, #32]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 8008214:	f1be 0f00 	cmp.w	lr, #0
 8008218:	d03d      	beq.n	8008296 <XSPI_ConfigCmd+0x13a>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 800821a:	ea4e 0303 	orr.w	r3, lr, r3
 800821e:	ea43 0309 	orr.w	r3, r3, r9
 8008222:	ea43 0308 	orr.w	r3, r3, r8
 8008226:	ea43 030c 	orr.w	r3, r3, ip
 800822a:	433b      	orrs	r3, r7
 800822c:	4333      	orrs	r3, r6
 800822e:	6c0e      	ldr	r6, [r1, #64]	@ 0x40
 8008230:	6820      	ldr	r0, [r4, #0]
 8008232:	4333      	orrs	r3, r6
 8008234:	4e4c      	ldr	r6, [pc, #304]	@ (8008368 <XSPI_ConfigCmd+0x20c>)
 8008236:	4006      	ands	r6, r0
 8008238:	4333      	orrs	r3, r6

        /* The DHQC bit is linked with DDTR bit which should be activated */
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
            (pCmd->InstructionDTRMode == HAL_XSPI_INSTRUCTION_DTR_ENABLE))
        {
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 800823a:	6023      	str	r3, [r4, #0]
        }
      }
      /* Configure the IR register with the instruction value */
      *ir_reg = pCmd->Instruction;
 800823c:	688b      	ldr	r3, [r1, #8]
 800823e:	602b      	str	r3, [r5, #0]
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE),
                   (pCmd->AddressMode | pCmd->AddressDTRMode | pCmd->AddressWidth));
      }

      /* Configure the AR register with the instruction value */
      hxspi->Instance->AR = pCmd->Address;
 8008240:	698b      	ldr	r3, [r1, #24]
 8008242:	6493      	str	r3, [r2, #72]	@ 0x48
 8008244:	e057      	b.n	80082f6 <XSPI_ConfigCmd+0x19a>
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 8008246:	4b49      	ldr	r3, [pc, #292]	@ (800836c <XSPI_ConfigCmd+0x210>)
 8008248:	429a      	cmp	r2, r3
 800824a:	d003      	beq.n	8008254 <XSPI_ConfigCmd+0xf8>
 800824c:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008250:	429a      	cmp	r2, r3
 8008252:	d106      	bne.n	8008262 <XSPI_ConfigCmd+0x106>
    if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 8008254:	6883      	ldr	r3, [r0, #8]
 8008256:	2b00      	cmp	r3, #0
 8008258:	d1a0      	bne.n	800819c <XSPI_ConfigCmd+0x40>
      MODIFY_REG(hxspi->Instance->CR, HSPI_CR_MSEL, pCmd->IOSelect);
 800825a:	6813      	ldr	r3, [r2, #0]
 800825c:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8008260:	e799      	b.n	8008196 <XSPI_ConfigCmd+0x3a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 8008262:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8008264:	f043 0308 	orr.w	r3, r3, #8
    }
    else
    {
      /* ---- Invalid command configuration (no instruction, no address) ---- */
      status = HAL_ERROR;
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 8008268:	6583      	str	r3, [r0, #88]	@ 0x58
    return HAL_ERROR;
 800826a:	2001      	movs	r0, #1
 800826c:	e044      	b.n	80082f8 <XSPI_ConfigCmd+0x19c>
  else if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRAP_CFG)
 800826e:	2b03      	cmp	r3, #3
    ccr_reg = &(hxspi->Instance->WPCCR);
 8008270:	bf01      	itttt	eq
 8008272:	f502 74a0 	addeq.w	r4, r2, #320	@ 0x140
    tcr_reg = &(hxspi->Instance->WPTCR);
 8008276:	f502 76a4 	addeq.w	r6, r2, #328	@ 0x148
    ir_reg  = &(hxspi->Instance->WPIR);
 800827a:	f502 75a8 	addeq.w	r5, r2, #336	@ 0x150
    abr_reg = &(hxspi->Instance->WPABR);
 800827e:	f502 7cb0 	addeq.w	ip, r2, #352	@ 0x160
    ccr_reg = &(hxspi->Instance->CCR);
 8008282:	bf1f      	itttt	ne
 8008284:	f502 7480 	addne.w	r4, r2, #256	@ 0x100
    tcr_reg = &(hxspi->Instance->TCR);
 8008288:	f502 7684 	addne.w	r6, r2, #264	@ 0x108
    ir_reg  = &(hxspi->Instance->IR);
 800828c:	f502 7588 	addne.w	r5, r2, #272	@ 0x110
    abr_reg = &(hxspi->Instance->ABR);
 8008290:	f502 7c90 	addne.w	ip, r2, #288	@ 0x120
 8008294:	e78d      	b.n	80081b2 <XSPI_ConfigCmd+0x56>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 8008296:	ea43 0309 	orr.w	r3, r3, r9
 800829a:	f8d4 e000 	ldr.w	lr, [r4]
 800829e:	ea43 0308 	orr.w	r3, r3, r8
 80082a2:	ea43 030c 	orr.w	r3, r3, ip
 80082a6:	433b      	orrs	r3, r7
 80082a8:	f42e 5e7c 	bic.w	lr, lr, #16128	@ 0x3f00
 80082ac:	4333      	orrs	r3, r6
 80082ae:	f02e 0e3f 	bic.w	lr, lr, #63	@ 0x3f
 80082b2:	ea43 030e 	orr.w	r3, r3, lr
 80082b6:	6023      	str	r3, [r4, #0]
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
 80082b8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80082ba:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80082be:	d1bd      	bne.n	800823c <XSPI_ConfigCmd+0xe0>
 80082c0:	694b      	ldr	r3, [r1, #20]
 80082c2:	2b08      	cmp	r3, #8
 80082c4:	d1ba      	bne.n	800823c <XSPI_ConfigCmd+0xe0>
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 80082c6:	6823      	ldr	r3, [r4, #0]
 80082c8:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 80082cc:	e7b5      	b.n	800823a <XSPI_ConfigCmd+0xde>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE |
 80082ce:	6822      	ldr	r2, [r4, #0]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 80082d0:	f1be 0f00 	cmp.w	lr, #0
 80082d4:	d012      	beq.n	80082fc <XSPI_ConfigCmd+0x1a0>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE |
 80082d6:	ea4e 0303 	orr.w	r3, lr, r3
 80082da:	6c08      	ldr	r0, [r1, #64]	@ 0x40
 80082dc:	ea43 0308 	orr.w	r3, r3, r8
 80082e0:	ea43 030c 	orr.w	r3, r3, ip
 80082e4:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80082e8:	4303      	orrs	r3, r0
 80082ea:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 80082ee:	4313      	orrs	r3, r2
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 80082f0:	6023      	str	r3, [r4, #0]
      *ir_reg = pCmd->Instruction;
 80082f2:	688b      	ldr	r3, [r1, #8]
 80082f4:	602b      	str	r3, [r5, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80082f6:	2000      	movs	r0, #0
    }
  }

  return status;
}
 80082f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE | XSPI_CCR_IDTR | XSPI_CCR_ISIZE),
 80082fc:	ea43 0308 	orr.w	r3, r3, r8
 8008300:	ea43 030c 	orr.w	r3, r3, ip
 8008304:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 8008308:	4313      	orrs	r3, r2
 800830a:	6023      	str	r3, [r4, #0]
        if ((hxspi->Init.DelayHoldQuarterCycle == HAL_XSPI_DHQC_ENABLE) &&
 800830c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800830e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8008312:	d1ee      	bne.n	80082f2 <XSPI_ConfigCmd+0x196>
 8008314:	694b      	ldr	r3, [r1, #20]
 8008316:	2b08      	cmp	r3, #8
 8008318:	d1eb      	bne.n	80082f2 <XSPI_ConfigCmd+0x196>
          MODIFY_REG((*ccr_reg), XSPI_CCR_DDTR, HAL_XSPI_DATA_DTR_ENABLE);
 800831a:	6823      	ldr	r3, [r4, #0]
 800831c:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8008320:	e7e6      	b.n	80082f0 <XSPI_ConfigCmd+0x194>
    if (pCmd->AddressMode != HAL_XSPI_ADDRESS_NONE)
 8008322:	f1b9 0f00 	cmp.w	r9, #0
 8008326:	d01b      	beq.n	8008360 <XSPI_ConfigCmd+0x204>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_IMODE  | XSPI_CCR_IDTR  | XSPI_CCR_ISIZE  |
 8008328:	e9d1 6008 	ldrd	r6, r0, [r1, #32]
      if (pCmd->DataMode != HAL_XSPI_DATA_NONE)
 800832c:	f1be 0f00 	cmp.w	lr, #0
 8008330:	d00d      	beq.n	800834e <XSPI_ConfigCmd+0x1f2>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE |
 8008332:	ea4e 0309 	orr.w	r3, lr, r9
 8008336:	6825      	ldr	r5, [r4, #0]
 8008338:	4303      	orrs	r3, r0
 800833a:	6c08      	ldr	r0, [r1, #64]	@ 0x40
 800833c:	4333      	orrs	r3, r6
 800833e:	4303      	orrs	r3, r0
 8008340:	f025 6070 	bic.w	r0, r5, #251658240	@ 0xf000000
 8008344:	f420 507c 	bic.w	r0, r0, #16128	@ 0x3f00
 8008348:	4303      	orrs	r3, r0
 800834a:	6023      	str	r3, [r4, #0]
 800834c:	e778      	b.n	8008240 <XSPI_ConfigCmd+0xe4>
        MODIFY_REG((*ccr_reg), (XSPI_CCR_ADMODE | XSPI_CCR_ADDTR | XSPI_CCR_ADSIZE),
 800834e:	6823      	ldr	r3, [r4, #0]
 8008350:	ea40 0009 	orr.w	r0, r0, r9
 8008354:	4330      	orrs	r0, r6
 8008356:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 800835a:	4318      	orrs	r0, r3
 800835c:	6020      	str	r0, [r4, #0]
 800835e:	e76f      	b.n	8008240 <XSPI_ConfigCmd+0xe4>
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 8008360:	2308      	movs	r3, #8
 8008362:	e781      	b.n	8008268 <XSPI_ConfigCmd+0x10c>
 8008364:	420d1400 	.word	0x420d1400
 8008368:	f0ffc0c0 	.word	0xf0ffc0c0
 800836c:	420d3400 	.word	0x420d3400

08008370 <XSPI_WaitFlagStateUntilTimeout>:
{
 8008370:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008374:	4604      	mov	r4, r0
 8008376:	460e      	mov	r6, r1
 8008378:	4615      	mov	r5, r2
 800837a:	461f      	mov	r7, r3
 800837c:	f8dd 8018 	ldr.w	r8, [sp, #24]
  while ((HAL_XSPI_GET_FLAG(hxspi, Flag)) != State)
 8008380:	6822      	ldr	r2, [r4, #0]
 8008382:	6a13      	ldr	r3, [r2, #32]
 8008384:	4233      	tst	r3, r6
 8008386:	bf14      	ite	ne
 8008388:	2301      	movne	r3, #1
 800838a:	2300      	moveq	r3, #0
 800838c:	42ab      	cmp	r3, r5
 800838e:	d101      	bne.n	8008394 <XSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8008390:	2000      	movs	r0, #0
 8008392:	e012      	b.n	80083ba <XSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8008394:	f1b8 3fff 	cmp.w	r8, #4294967295
 8008398:	d0f3      	beq.n	8008382 <XSPI_WaitFlagStateUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800839a:	f7fb fca3 	bl	8003ce4 <HAL_GetTick>
 800839e:	1bc0      	subs	r0, r0, r7
 80083a0:	4540      	cmp	r0, r8
 80083a2:	d802      	bhi.n	80083aa <XSPI_WaitFlagStateUntilTimeout+0x3a>
 80083a4:	f1b8 0f00 	cmp.w	r8, #0
 80083a8:	d1ea      	bne.n	8008380 <XSPI_WaitFlagStateUntilTimeout+0x10>
        hxspi->State     = HAL_XSPI_STATE_ERROR;
 80083aa:	f44f 7300 	mov.w	r3, #512	@ 0x200
        hxspi->ErrorCode |= HAL_XSPI_ERROR_TIMEOUT;
 80083ae:	2003      	movs	r0, #3
        hxspi->State     = HAL_XSPI_STATE_ERROR;
 80083b0:	6563      	str	r3, [r4, #84]	@ 0x54
        hxspi->ErrorCode |= HAL_XSPI_ERROR_TIMEOUT;
 80083b2:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80083b4:	f043 0301 	orr.w	r3, r3, #1
 80083b8:	65a3      	str	r3, [r4, #88]	@ 0x58
}
 80083ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080083c0 <HAL_XSPI_Init>:
{
 80083c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80083c2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80083c4:	f7fb fc8e 	bl	8003ce4 <HAL_GetTick>
 80083c8:	4605      	mov	r5, r0
  if (hxspi == NULL)
 80083ca:	2c00      	cmp	r4, #0
 80083cc:	f000 80a8 	beq.w	8008520 <HAL_XSPI_Init+0x160>
    hxspi->ErrorCode = HAL_XSPI_ERROR_NONE;
 80083d0:	2300      	movs	r3, #0
 80083d2:	65a3      	str	r3, [r4, #88]	@ 0x58
    if (hxspi->State == HAL_XSPI_STATE_RESET)
 80083d4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80083d6:	2b00      	cmp	r3, #0
 80083d8:	f040 8094 	bne.w	8008504 <HAL_XSPI_Init+0x144>
      HAL_XSPI_MspInit(hxspi);
 80083dc:	4620      	mov	r0, r4
 80083de:	f7f8 fabb 	bl	8000958 <HAL_XSPI_MspInit>
  hxspi->Timeout = Timeout;
 80083e2:	f241 3388 	movw	r3, #5000	@ 0x1388
      MODIFY_REG(hxspi->Instance->DCR1,
 80083e6:	68e1      	ldr	r1, [r4, #12]
  hxspi->Timeout = Timeout;
 80083e8:	65e3      	str	r3, [r4, #92]	@ 0x5c
      MODIFY_REG(hxspi->Instance->DCR1,
 80083ea:	69e3      	ldr	r3, [r4, #28]
 80083ec:	6822      	ldr	r2, [r4, #0]
 80083ee:	4319      	orrs	r1, r3
 80083f0:	6923      	ldr	r3, [r4, #16]
 80083f2:	6890      	ldr	r0, [r2, #8]
 80083f4:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80083f8:	4b4a      	ldr	r3, [pc, #296]	@ (8008524 <HAL_XSPI_Init+0x164>)
 80083fa:	4003      	ands	r3, r0
 80083fc:	4319      	orrs	r1, r3
 80083fe:	6963      	ldr	r3, [r4, #20]
 8008400:	3b01      	subs	r3, #1
 8008402:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 8008406:	6091      	str	r1, [r2, #8]
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008408:	4947      	ldr	r1, [pc, #284]	@ (8008528 <HAL_XSPI_Init+0x168>)
 800840a:	428a      	cmp	r2, r1
 800840c:	d00c      	beq.n	8008428 <HAL_XSPI_Init+0x68>
 800840e:	4b47      	ldr	r3, [pc, #284]	@ (800852c <HAL_XSPI_Init+0x16c>)
 8008410:	429a      	cmp	r2, r3
 8008412:	d009      	beq.n	8008428 <HAL_XSPI_Init+0x68>
 8008414:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 8008418:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800841c:	429a      	cmp	r2, r3
 800841e:	d003      	beq.n	8008428 <HAL_XSPI_Init+0x68>
 8008420:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008424:	429a      	cmp	r2, r3
 8008426:	d105      	bne.n	8008434 <HAL_XSPI_Init+0x74>
        MODIFY_REG(hxspi->Instance->DCR1, OCTOSPI_DCR1_DLYBYP, hxspi->Init.DelayBlockBypass);
 8008428:	6893      	ldr	r3, [r2, #8]
 800842a:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800842c:	f023 0308 	bic.w	r3, r3, #8
 8008430:	4303      	orrs	r3, r0
 8008432:	6093      	str	r3, [r2, #8]
      MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_WRAPSIZE, hxspi->Init.WrapSize);
 8008434:	68d3      	ldr	r3, [r2, #12]
 8008436:	6a20      	ldr	r0, [r4, #32]
 8008438:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 800843c:	4303      	orrs	r3, r0
 800843e:	60d3      	str	r3, [r2, #12]
      MODIFY_REG(hxspi->Instance->DCR3, XSPI_DCR3_CSBOUND, (hxspi->Init.ChipSelectBoundary << XSPI_DCR3_CSBOUND_Pos));
 8008440:	6913      	ldr	r3, [r2, #16]
 8008442:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8008444:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8008448:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800844c:	428a      	cmp	r2, r1
      MODIFY_REG(hxspi->Instance->DCR3, XSPI_DCR3_CSBOUND, (hxspi->Init.ChipSelectBoundary << XSPI_DCR3_CSBOUND_Pos));
 800844e:	6113      	str	r3, [r2, #16]
      if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 8008450:	d00c      	beq.n	800846c <HAL_XSPI_Init+0xac>
 8008452:	4b36      	ldr	r3, [pc, #216]	@ (800852c <HAL_XSPI_Init+0x16c>)
 8008454:	429a      	cmp	r2, r3
 8008456:	d009      	beq.n	800846c <HAL_XSPI_Init+0xac>
 8008458:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 800845c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8008460:	429a      	cmp	r2, r3
 8008462:	d003      	beq.n	800846c <HAL_XSPI_Init+0xac>
 8008464:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 8008468:	429a      	cmp	r2, r3
 800846a:	d105      	bne.n	8008478 <HAL_XSPI_Init+0xb8>
        MODIFY_REG(hxspi->Instance->DCR3, OCTOSPI_DCR3_MAXTRAN, \
 800846c:	6913      	ldr	r3, [r2, #16]
 800846e:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8008470:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8008474:	430b      	orrs	r3, r1
 8008476:	6113      	str	r3, [r2, #16]
      hxspi->Instance->DCR4 = hxspi->Init.Refresh;
 8008478:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FTHRES, ((hxspi->Init.FifoThresholdByte - 1U) << XSPI_CR_FTHRES_Pos));
 800847a:	6861      	ldr	r1, [r4, #4]
      hxspi->Instance->DCR4 = hxspi->Init.Refresh;
 800847c:	6153      	str	r3, [r2, #20]
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FTHRES, ((hxspi->Init.FifoThresholdByte - 1U) << XSPI_CR_FTHRES_Pos));
 800847e:	6813      	ldr	r3, [r2, #0]
 8008480:	3901      	subs	r1, #1
 8008482:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8008486:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800848a:	6013      	str	r3, [r2, #0]
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 800848c:	f241 3388 	movw	r3, #5000	@ 0x1388
 8008490:	2200      	movs	r2, #0
 8008492:	9300      	str	r3, [sp, #0]
 8008494:	2120      	movs	r1, #32
 8008496:	462b      	mov	r3, r5
 8008498:	4620      	mov	r0, r4
 800849a:	f7ff ff69 	bl	8008370 <XSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800849e:	2800      	cmp	r0, #0
 80084a0:	d13c      	bne.n	800851c <HAL_XSPI_Init+0x15c>
        MODIFY_REG(hxspi->Instance->DCR2, XSPI_DCR2_PRESCALER,
 80084a2:	6822      	ldr	r2, [r4, #0]
 80084a4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80084a6:	68d3      	ldr	r3, [r2, #12]
 80084a8:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80084ac:	430b      	orrs	r3, r1
 80084ae:	60d3      	str	r3, [r2, #12]
        if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 80084b0:	4b1f      	ldr	r3, [pc, #124]	@ (8008530 <HAL_XSPI_Init+0x170>)
 80084b2:	429a      	cmp	r2, r3
 80084b4:	d028      	beq.n	8008508 <HAL_XSPI_Init+0x148>
 80084b6:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80084ba:	429a      	cmp	r2, r3
 80084bc:	d024      	beq.n	8008508 <HAL_XSPI_Init+0x148>
        MODIFY_REG(hxspi->Instance->CR, XSPI_CR_DMM, hxspi->Init.MemoryMode);
 80084be:	6823      	ldr	r3, [r4, #0]
 80084c0:	68a1      	ldr	r1, [r4, #8]
 80084c2:	681a      	ldr	r2, [r3, #0]
 80084c4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80084c8:	430a      	orrs	r2, r1
 80084ca:	601a      	str	r2, [r3, #0]
        MODIFY_REG(hxspi->Instance->TCR, (XSPI_TCR_SSHIFT | XSPI_TCR_DHQC),
 80084cc:	f8d3 1108 	ldr.w	r1, [r3, #264]	@ 0x108
 80084d0:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 80084d4:	f021 41a0 	bic.w	r1, r1, #1342177280	@ 0x50000000
 80084d8:	4302      	orrs	r2, r0
 80084da:	430a      	orrs	r2, r1
 80084dc:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108
        HAL_XSPI_ENABLE(hxspi);
 80084e0:	681a      	ldr	r2, [r3, #0]
 80084e2:	f042 0201 	orr.w	r2, r2, #1
 80084e6:	601a      	str	r2, [r3, #0]
        if (hxspi->Init.FreeRunningClock == HAL_XSPI_FREERUNCLK_ENABLE)
 80084e8:	69a2      	ldr	r2, [r4, #24]
 80084ea:	2a02      	cmp	r2, #2
 80084ec:	d103      	bne.n	80084f6 <HAL_XSPI_Init+0x136>
          SET_BIT(hxspi->Instance->DCR1, XSPI_DCR1_FRCK);
 80084ee:	689a      	ldr	r2, [r3, #8]
 80084f0:	f042 0202 	orr.w	r2, r2, #2
 80084f4:	609a      	str	r2, [r3, #8]
        if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 80084f6:	68e3      	ldr	r3, [r4, #12]
 80084f8:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
          hxspi->State = HAL_XSPI_STATE_HYPERBUS_INIT;
 80084fc:	bf0c      	ite	eq
 80084fe:	2301      	moveq	r3, #1
          hxspi->State = HAL_XSPI_STATE_READY;
 8008500:	2302      	movne	r3, #2
 8008502:	6563      	str	r3, [r4, #84]	@ 0x54
  HAL_StatusTypeDef status = HAL_OK;
 8008504:	2000      	movs	r0, #0
 8008506:	e009      	b.n	800851c <HAL_XSPI_Init+0x15c>
          status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 8008508:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 800850a:	2200      	movs	r2, #0
 800850c:	9300      	str	r3, [sp, #0]
 800850e:	2120      	movs	r1, #32
 8008510:	462b      	mov	r3, r5
 8008512:	4620      	mov	r0, r4
 8008514:	f7ff ff2c 	bl	8008370 <XSPI_WaitFlagStateUntilTimeout>
          if (status != HAL_OK)
 8008518:	2800      	cmp	r0, #0
 800851a:	d0d0      	beq.n	80084be <HAL_XSPI_Init+0xfe>
}
 800851c:	b003      	add	sp, #12
 800851e:	bd30      	pop	{r4, r5, pc}
    status = HAL_ERROR;
 8008520:	2001      	movs	r0, #1
 8008522:	e7fb      	b.n	800851c <HAL_XSPI_Init+0x15c>
 8008524:	f8e0c0fc 	.word	0xf8e0c0fc
 8008528:	420d1400 	.word	0x420d1400
 800852c:	520d1400 	.word	0x520d1400
 8008530:	420d3400 	.word	0x420d3400

08008534 <HAL_XSPI_Command>:
{
 8008534:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008538:	4604      	mov	r4, r0
 800853a:	4690      	mov	r8, r2
 800853c:	460e      	mov	r6, r1
  uint32_t tickstart = HAL_GetTick();
 800853e:	f7fb fbd1 	bl	8003ce4 <HAL_GetTick>
  if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 8008542:	68a2      	ldr	r2, [r4, #8]
  uint32_t tickstart = HAL_GetTick();
 8008544:	4607      	mov	r7, r0
  if (hxspi->Init.MemoryMode == HAL_XSPI_SINGLE_MEM)
 8008546:	6825      	ldr	r5, [r4, #0]
 8008548:	4b42      	ldr	r3, [pc, #264]	@ (8008654 <HAL_XSPI_Command+0x120>)
 800854a:	bb02      	cbnz	r2, 800858e <HAL_XSPI_Command+0x5a>
    if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800854c:	429d      	cmp	r5, r3
 800854e:	d037      	beq.n	80085c0 <HAL_XSPI_Command+0x8c>
 8008550:	4a41      	ldr	r2, [pc, #260]	@ (8008658 <HAL_XSPI_Command+0x124>)
 8008552:	4295      	cmp	r5, r2
 8008554:	d01b      	beq.n	800858e <HAL_XSPI_Command+0x5a>
 8008556:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800855a:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 800855e:	4295      	cmp	r5, r2
 8008560:	d015      	beq.n	800858e <HAL_XSPI_Command+0x5a>
 8008562:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 8008566:	4295      	cmp	r5, r2
 8008568:	d011      	beq.n	800858e <HAL_XSPI_Command+0x5a>
    else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 800856a:	f102 4270 	add.w	r2, r2, #4026531840	@ 0xf0000000
 800856e:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 8008572:	4295      	cmp	r5, r2
 8008574:	d00b      	beq.n	800858e <HAL_XSPI_Command+0x5a>
 8008576:	f102 5280 	add.w	r2, r2, #268435456	@ 0x10000000
 800857a:	4295      	cmp	r5, r2
 800857c:	d007      	beq.n	800858e <HAL_XSPI_Command+0x5a>
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 800857e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8008580:	f043 0308 	orr.w	r3, r3, #8
      return HAL_ERROR;
 8008584:	2001      	movs	r0, #1
    hxspi->ErrorCode |= HAL_XSPI_ERROR_INVALID_PARAM;
 8008586:	65a3      	str	r3, [r4, #88]	@ 0x58
}
 8008588:	b002      	add	sp, #8
 800858a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (IS_OSPI_ALL_INSTANCE(hxspi->Instance))
 800858e:	429d      	cmp	r5, r3
 8008590:	d016      	beq.n	80085c0 <HAL_XSPI_Command+0x8c>
 8008592:	4b31      	ldr	r3, [pc, #196]	@ (8008658 <HAL_XSPI_Command+0x124>)
 8008594:	429d      	cmp	r5, r3
 8008596:	d013      	beq.n	80085c0 <HAL_XSPI_Command+0x8c>
 8008598:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 800859c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80085a0:	429d      	cmp	r5, r3
 80085a2:	d00d      	beq.n	80085c0 <HAL_XSPI_Command+0x8c>
 80085a4:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80085a8:	429d      	cmp	r5, r3
 80085aa:	d009      	beq.n	80085c0 <HAL_XSPI_Command+0x8c>
  else if (IS_HSPI_ALL_INSTANCE(hxspi->Instance))
 80085ac:	f103 4370 	add.w	r3, r3, #4026531840	@ 0xf0000000
 80085b0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80085b4:	429d      	cmp	r5, r3
 80085b6:	d003      	beq.n	80085c0 <HAL_XSPI_Command+0x8c>
 80085b8:	f103 5380 	add.w	r3, r3, #268435456	@ 0x10000000
 80085bc:	429d      	cmp	r5, r3
 80085be:	d1de      	bne.n	800857e <HAL_XSPI_Command+0x4a>
  state = hxspi->State;
 80085c0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
  if (((state == HAL_XSPI_STATE_READY)         && (hxspi->Init.MemoryType != HAL_XSPI_MEMTYPE_HYPERBUS)) ||
 80085c2:	2b02      	cmp	r3, #2
 80085c4:	d105      	bne.n	80085d2 <HAL_XSPI_Command+0x9e>
 80085c6:	68e3      	ldr	r3, [r4, #12]
 80085c8:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80085cc:	d107      	bne.n	80085de <HAL_XSPI_Command+0xaa>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 80085ce:	2310      	movs	r3, #16
 80085d0:	e7d8      	b.n	8008584 <HAL_XSPI_Command+0x50>
  if (((state == HAL_XSPI_STATE_READY)         && (hxspi->Init.MemoryType != HAL_XSPI_MEMTYPE_HYPERBUS)) ||
 80085d2:	2b14      	cmp	r3, #20
 80085d4:	d121      	bne.n	800861a <HAL_XSPI_Command+0xe6>
      ((state == HAL_XSPI_STATE_READ_CMD_CFG)  && ((pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG) ||
 80085d6:	6833      	ldr	r3, [r6, #0]
 80085d8:	3b02      	subs	r3, #2
 80085da:	2b01      	cmp	r3, #1
 80085dc:	d8f7      	bhi.n	80085ce <HAL_XSPI_Command+0x9a>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80085de:	463b      	mov	r3, r7
 80085e0:	2200      	movs	r2, #0
 80085e2:	2120      	movs	r1, #32
 80085e4:	4620      	mov	r0, r4
 80085e6:	f8cd 8000 	str.w	r8, [sp]
 80085ea:	f7ff fec1 	bl	8008370 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80085ee:	bb78      	cbnz	r0, 8008650 <HAL_XSPI_Command+0x11c>
      hxspi->ErrorCode = HAL_XSPI_ERROR_NONE;
 80085f0:	65a0      	str	r0, [r4, #88]	@ 0x58
      status = XSPI_ConfigCmd(hxspi, pCmd);
 80085f2:	4631      	mov	r1, r6
 80085f4:	4620      	mov	r0, r4
 80085f6:	f7ff fdb1 	bl	800815c <XSPI_ConfigCmd>
      if (status == HAL_OK)
 80085fa:	2800      	cmp	r0, #0
 80085fc:	d1c4      	bne.n	8008588 <HAL_XSPI_Command+0x54>
        if (pCmd->DataMode == HAL_XSPI_DATA_NONE)
 80085fe:	6bb3      	ldr	r3, [r6, #56]	@ 0x38
 8008600:	b99b      	cbnz	r3, 800862a <HAL_XSPI_Command+0xf6>
          status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, Timeout);
 8008602:	463b      	mov	r3, r7
 8008604:	2201      	movs	r2, #1
 8008606:	2102      	movs	r1, #2
 8008608:	4620      	mov	r0, r4
 800860a:	f8cd 8000 	str.w	r8, [sp]
 800860e:	f7ff feaf 	bl	8008370 <XSPI_WaitFlagStateUntilTimeout>
          HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 8008612:	2202      	movs	r2, #2
 8008614:	6823      	ldr	r3, [r4, #0]
 8008616:	625a      	str	r2, [r3, #36]	@ 0x24
 8008618:	e7b6      	b.n	8008588 <HAL_XSPI_Command+0x54>
                                                   (pCmd->OperationType == HAL_XSPI_OPTYPE_WRAP_CFG))) ||
 800861a:	2b24      	cmp	r3, #36	@ 0x24
 800861c:	d1d7      	bne.n	80085ce <HAL_XSPI_Command+0x9a>
      ((state == HAL_XSPI_STATE_WRITE_CMD_CFG) &&
 800861e:	6833      	ldr	r3, [r6, #0]
 8008620:	f023 0302 	bic.w	r3, r3, #2
 8008624:	2b01      	cmp	r3, #1
 8008626:	d1d2      	bne.n	80085ce <HAL_XSPI_Command+0x9a>
 8008628:	e7d9      	b.n	80085de <HAL_XSPI_Command+0xaa>
          if (pCmd->OperationType == HAL_XSPI_OPTYPE_COMMON_CFG)
 800862a:	6833      	ldr	r3, [r6, #0]
 800862c:	b90b      	cbnz	r3, 8008632 <HAL_XSPI_Command+0xfe>
              hxspi->State = HAL_XSPI_STATE_CMD_CFG;
 800862e:	2304      	movs	r3, #4
 8008630:	e005      	b.n	800863e <HAL_XSPI_Command+0x10a>
          else if (pCmd->OperationType == HAL_XSPI_OPTYPE_READ_CFG)
 8008632:	2b01      	cmp	r3, #1
 8008634:	d105      	bne.n	8008642 <HAL_XSPI_Command+0x10e>
            if (hxspi->State == HAL_XSPI_STATE_WRITE_CMD_CFG)
 8008636:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8008638:	2b24      	cmp	r3, #36	@ 0x24
 800863a:	d0f8      	beq.n	800862e <HAL_XSPI_Command+0xfa>
              hxspi->State = HAL_XSPI_STATE_READ_CMD_CFG;
 800863c:	2314      	movs	r3, #20
              hxspi->State = HAL_XSPI_STATE_WRITE_CMD_CFG;
 800863e:	6563      	str	r3, [r4, #84]	@ 0x54
 8008640:	e7a2      	b.n	8008588 <HAL_XSPI_Command+0x54>
          else if (pCmd->OperationType == HAL_XSPI_OPTYPE_WRITE_CFG)
 8008642:	2b02      	cmp	r3, #2
 8008644:	d1a0      	bne.n	8008588 <HAL_XSPI_Command+0x54>
            if (hxspi->State == HAL_XSPI_STATE_READ_CMD_CFG)
 8008646:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8008648:	2b14      	cmp	r3, #20
 800864a:	d0f0      	beq.n	800862e <HAL_XSPI_Command+0xfa>
              hxspi->State = HAL_XSPI_STATE_WRITE_CMD_CFG;
 800864c:	2324      	movs	r3, #36	@ 0x24
 800864e:	e7f6      	b.n	800863e <HAL_XSPI_Command+0x10a>
      status = HAL_BUSY;
 8008650:	2002      	movs	r0, #2
 8008652:	e799      	b.n	8008588 <HAL_XSPI_Command+0x54>
 8008654:	420d1400 	.word	0x420d1400
 8008658:	520d1400 	.word	0x520d1400

0800865c <HAL_XSPI_Transmit>:
{
 800865c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008660:	4604      	mov	r4, r0
 8008662:	4688      	mov	r8, r1
 8008664:	4616      	mov	r6, r2
  uint32_t tickstart = HAL_GetTick();
 8008666:	f7fb fb3d 	bl	8003ce4 <HAL_GetTick>
  __IO uint32_t *data_reg = &hxspi->Instance->DR;
 800866a:	6827      	ldr	r7, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 800866c:	4605      	mov	r5, r0
  if (pData == NULL)
 800866e:	f1b8 0f00 	cmp.w	r8, #0
 8008672:	d103      	bne.n	800867c <HAL_XSPI_Transmit+0x20>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_PARAM;
 8008674:	2308      	movs	r3, #8
    status = HAL_ERROR;
 8008676:	2001      	movs	r0, #1
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008678:	65a3      	str	r3, [r4, #88]	@ 0x58
 800867a:	e02e      	b.n	80086da <HAL_XSPI_Transmit+0x7e>
    if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 800867c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800867e:	2b04      	cmp	r3, #4
 8008680:	d12e      	bne.n	80086e0 <HAL_XSPI_Transmit+0x84>
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 8008682:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
      hxspi->pBuffPtr  = pData;
 8008684:	f8c4 8040 	str.w	r8, [r4, #64]	@ 0x40
      hxspi->XferCount = READ_REG(hxspi->Instance->DLR) + 1U;
 8008688:	3301      	adds	r3, #1
 800868a:	64a3      	str	r3, [r4, #72]	@ 0x48
      hxspi->XferSize  = hxspi->XferCount;
 800868c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800868e:	6463      	str	r3, [r4, #68]	@ 0x44
      MODIFY_REG(hxspi->Instance->CR, XSPI_CR_FMODE, XSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8008690:	683b      	ldr	r3, [r7, #0]
 8008692:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 8008696:	603b      	str	r3, [r7, #0]
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_FT, SET, tickstart, Timeout);
 8008698:	462b      	mov	r3, r5
 800869a:	2201      	movs	r2, #1
 800869c:	2104      	movs	r1, #4
 800869e:	4620      	mov	r0, r4
 80086a0:	9600      	str	r6, [sp, #0]
 80086a2:	f7ff fe65 	bl	8008370 <XSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 80086a6:	b9c0      	cbnz	r0, 80086da <HAL_XSPI_Transmit+0x7e>
        *((__IO uint8_t *)data_reg) = *hxspi->pBuffPtr;
 80086a8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80086aa:	781b      	ldrb	r3, [r3, #0]
 80086ac:	f887 3050 	strb.w	r3, [r7, #80]	@ 0x50
        hxspi->pBuffPtr++;
 80086b0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80086b2:	3301      	adds	r3, #1
 80086b4:	6423      	str	r3, [r4, #64]	@ 0x40
        hxspi->XferCount--;
 80086b6:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80086b8:	3b01      	subs	r3, #1
 80086ba:	64a3      	str	r3, [r4, #72]	@ 0x48
      } while (hxspi->XferCount > 0U);
 80086bc:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80086be:	2b00      	cmp	r3, #0
 80086c0:	d1ea      	bne.n	8008698 <HAL_XSPI_Transmit+0x3c>
        status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_TC, SET, tickstart, Timeout);
 80086c2:	462b      	mov	r3, r5
 80086c4:	2201      	movs	r2, #1
 80086c6:	2102      	movs	r1, #2
 80086c8:	4620      	mov	r0, r4
 80086ca:	9600      	str	r6, [sp, #0]
 80086cc:	f7ff fe50 	bl	8008370 <XSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80086d0:	b918      	cbnz	r0, 80086da <HAL_XSPI_Transmit+0x7e>
          HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 80086d2:	2302      	movs	r3, #2
 80086d4:	6822      	ldr	r2, [r4, #0]
 80086d6:	6253      	str	r3, [r2, #36]	@ 0x24
          hxspi->State = HAL_XSPI_STATE_READY;
 80086d8:	6563      	str	r3, [r4, #84]	@ 0x54
}
 80086da:	b002      	add	sp, #8
 80086dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 80086e0:	2310      	movs	r3, #16
 80086e2:	e7c8      	b.n	8008676 <HAL_XSPI_Transmit+0x1a>

080086e4 <HAL_XSPI_AutoPolling>:
{
 80086e4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80086e8:	4604      	mov	r4, r0
 80086ea:	460e      	mov	r6, r1
 80086ec:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 80086ee:	f7fb faf9 	bl	8003ce4 <HAL_GetTick>
  uint32_t addr_reg = hxspi->Instance->AR;
 80086f2:	6823      	ldr	r3, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 80086f4:	4682      	mov	sl, r0
  uint32_t addr_reg = hxspi->Instance->AR;
 80086f6:	f8d3 8048 	ldr.w	r8, [r3, #72]	@ 0x48
  uint32_t ir_reg = hxspi->Instance->IR;
 80086fa:	f8d3 9110 	ldr.w	r9, [r3, #272]	@ 0x110
  if ((hxspi->State == HAL_XSPI_STATE_CMD_CFG) && (pCfg->AutomaticStop == HAL_XSPI_AUTOMATIC_STOP_ENABLE))
 80086fe:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8008700:	2b04      	cmp	r3, #4
 8008702:	d13e      	bne.n	8008782 <HAL_XSPI_AutoPolling+0x9e>
 8008704:	68f3      	ldr	r3, [r6, #12]
 8008706:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800870a:	d13a      	bne.n	8008782 <HAL_XSPI_AutoPolling+0x9e>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800870c:	4603      	mov	r3, r0
 800870e:	2200      	movs	r2, #0
 8008710:	2120      	movs	r1, #32
 8008712:	4620      	mov	r0, r4
 8008714:	9700      	str	r7, [sp, #0]
 8008716:	f7ff fe2b 	bl	8008370 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800871a:	2800      	cmp	r0, #0
 800871c:	d135      	bne.n	800878a <HAL_XSPI_AutoPolling+0xa6>
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 800871e:	e9d6 1202 	ldrd	r1, r2, [r6, #8]
      WRITE_REG(hxspi->Instance->PSMAR, pCfg->MatchValue);
 8008722:	6825      	ldr	r5, [r4, #0]
 8008724:	6833      	ldr	r3, [r6, #0]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 8008726:	4311      	orrs	r1, r2
      WRITE_REG(hxspi->Instance->PSMAR, pCfg->MatchValue);
 8008728:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      WRITE_REG(hxspi->Instance->PSMKR, pCfg->MatchMask);
 800872c:	6873      	ldr	r3, [r6, #4]
 800872e:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
      WRITE_REG(hxspi->Instance->PIR,   pCfg->IntervalTime);
 8008732:	6933      	ldr	r3, [r6, #16]
 8008734:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 8008738:	682b      	ldr	r3, [r5, #0]
 800873a:	f023 5343 	bic.w	r3, r3, #817889280	@ 0x30c00000
 800873e:	4319      	orrs	r1, r3
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 8008740:	68e3      	ldr	r3, [r4, #12]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 8008742:	f041 5100 	orr.w	r1, r1, #536870912	@ 0x20000000
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 8008746:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_PMM | XSPI_CR_APMS | XSPI_CR_FMODE),
 800874a:	6029      	str	r1, [r5, #0]
      if (hxspi->Init.MemoryType == HAL_XSPI_MEMTYPE_HYPERBUS)
 800874c:	d111      	bne.n	8008772 <HAL_XSPI_AutoPolling+0x8e>
          WRITE_REG(hxspi->Instance->AR, addr_reg);
 800874e:	f8c5 8048 	str.w	r8, [r5, #72]	@ 0x48
      status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_SM, SET, tickstart, Timeout);
 8008752:	4653      	mov	r3, sl
 8008754:	2201      	movs	r2, #1
 8008756:	2108      	movs	r1, #8
 8008758:	4620      	mov	r0, r4
 800875a:	9700      	str	r7, [sp, #0]
 800875c:	f7ff fe08 	bl	8008370 <XSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8008760:	b920      	cbnz	r0, 800876c <HAL_XSPI_AutoPolling+0x88>
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_SM);
 8008762:	2208      	movs	r2, #8
 8008764:	6823      	ldr	r3, [r4, #0]
 8008766:	625a      	str	r2, [r3, #36]	@ 0x24
        hxspi->State = HAL_XSPI_STATE_READY;
 8008768:	2302      	movs	r3, #2
 800876a:	6563      	str	r3, [r4, #84]	@ 0x54
}
 800876c:	b002      	add	sp, #8
 800876e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        if (READ_BIT(hxspi->Instance->CCR, XSPI_CCR_ADMODE) != HAL_XSPI_ADDRESS_NONE)
 8008772:	f8d5 3100 	ldr.w	r3, [r5, #256]	@ 0x100
 8008776:	f413 6fe0 	tst.w	r3, #1792	@ 0x700
 800877a:	d1e8      	bne.n	800874e <HAL_XSPI_AutoPolling+0x6a>
          WRITE_REG(hxspi->Instance->IR, ir_reg);
 800877c:	f8c5 9110 	str.w	r9, [r5, #272]	@ 0x110
 8008780:	e7e7      	b.n	8008752 <HAL_XSPI_AutoPolling+0x6e>
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008782:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8008784:	2001      	movs	r0, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 8008786:	65a3      	str	r3, [r4, #88]	@ 0x58
 8008788:	e7f0      	b.n	800876c <HAL_XSPI_AutoPolling+0x88>
      status = HAL_BUSY;
 800878a:	2002      	movs	r0, #2
 800878c:	e7ee      	b.n	800876c <HAL_XSPI_AutoPolling+0x88>

0800878e <HAL_XSPI_MemoryMapped>:
{
 800878e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008790:	4604      	mov	r4, r0
 8008792:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 8008794:	f7fb faa6 	bl	8003ce4 <HAL_GetTick>
  if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 8008798:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  uint32_t tickstart = HAL_GetTick();
 800879a:	4603      	mov	r3, r0
  if (hxspi->State == HAL_XSPI_STATE_CMD_CFG)
 800879c:	2a04      	cmp	r2, #4
 800879e:	d121      	bne.n	80087e4 <HAL_XSPI_MemoryMapped+0x56>
    status = XSPI_WaitFlagStateUntilTimeout(hxspi, HAL_XSPI_FLAG_BUSY, RESET, tickstart, hxspi->Timeout);
 80087a0:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 80087a2:	2120      	movs	r1, #32
 80087a4:	9200      	str	r2, [sp, #0]
 80087a6:	4620      	mov	r0, r4
 80087a8:	2200      	movs	r2, #0
 80087aa:	f7ff fde1 	bl	8008370 <XSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80087ae:	b9b8      	cbnz	r0, 80087e0 <HAL_XSPI_MemoryMapped+0x52>
      hxspi->State = HAL_XSPI_STATE_BUSY_MEM_MAPPED;
 80087b0:	2388      	movs	r3, #136	@ 0x88
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 80087b2:	6829      	ldr	r1, [r5, #0]
        WRITE_REG(hxspi->Instance->LPTR, pCfg->TimeoutPeriodClock);
 80087b4:	6822      	ldr	r2, [r4, #0]
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 80087b6:	2908      	cmp	r1, #8
      hxspi->State = HAL_XSPI_STATE_BUSY_MEM_MAPPED;
 80087b8:	6563      	str	r3, [r4, #84]	@ 0x54
      if (pCfg->TimeOutActivation == HAL_XSPI_TIMEOUT_COUNTER_ENABLE)
 80087ba:	d108      	bne.n	80087ce <HAL_XSPI_MemoryMapped+0x40>
        WRITE_REG(hxspi->Instance->LPTR, pCfg->TimeoutPeriodClock);
 80087bc:	686b      	ldr	r3, [r5, #4]
 80087be:	f8c2 3130 	str.w	r3, [r2, #304]	@ 0x130
        HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TO);
 80087c2:	2310      	movs	r3, #16
 80087c4:	6253      	str	r3, [r2, #36]	@ 0x24
        HAL_XSPI_ENABLE_IT(hxspi, HAL_XSPI_IT_TO);
 80087c6:	6813      	ldr	r3, [r2, #0]
 80087c8:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80087cc:	6013      	str	r3, [r2, #0]
      MODIFY_REG(hxspi->Instance->CR, (XSPI_CR_TCEN | XSPI_CR_FMODE),
 80087ce:	6813      	ldr	r3, [r2, #0]
 80087d0:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 80087d4:	f023 0308 	bic.w	r3, r3, #8
 80087d8:	430b      	orrs	r3, r1
 80087da:	f043 5340 	orr.w	r3, r3, #805306368	@ 0x30000000
 80087de:	6013      	str	r3, [r2, #0]
}
 80087e0:	b003      	add	sp, #12
 80087e2:	bd30      	pop	{r4, r5, pc}
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 80087e4:	2310      	movs	r3, #16
    status = HAL_ERROR;
 80087e6:	2001      	movs	r0, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_INVALID_SEQUENCE;
 80087e8:	65a3      	str	r3, [r4, #88]	@ 0x58
 80087ea:	e7f9      	b.n	80087e0 <HAL_XSPI_MemoryMapped+0x52>

080087ec <HAL_XSPI_ErrorCallback>:
__weak void HAL_XSPI_ErrorCallback(XSPI_HandleTypeDef *hxspi)
 80087ec:	4770      	bx	lr

080087ee <HAL_XSPI_AbortCpltCallback>:
__weak void HAL_XSPI_AbortCpltCallback(XSPI_HandleTypeDef *hxspi)
 80087ee:	4770      	bx	lr

080087f0 <XSPI_DMAAbortCplt>:
{
 80087f0:	b508      	push	{r3, lr}
  hxspi->XferCount = 0;
 80087f2:	2300      	movs	r3, #0
  XSPI_HandleTypeDef *hxspi = (XSPI_HandleTypeDef *)(hdma->Parent);
 80087f4:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
  hxspi->XferCount = 0;
 80087f6:	6483      	str	r3, [r0, #72]	@ 0x48
  if (hxspi->State == HAL_XSPI_STATE_ABORT)
 80087f8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80087fa:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80087fe:	d114      	bne.n	800882a <XSPI_DMAAbortCplt+0x3a>
    if (HAL_XSPI_GET_FLAG(hxspi, HAL_XSPI_FLAG_BUSY) != RESET)
 8008800:	6803      	ldr	r3, [r0, #0]
 8008802:	6a1a      	ldr	r2, [r3, #32]
 8008804:	f012 0f20 	tst.w	r2, #32
 8008808:	f04f 0202 	mov.w	r2, #2
 800880c:	d009      	beq.n	8008822 <XSPI_DMAAbortCplt+0x32>
      HAL_XSPI_CLEAR_FLAG(hxspi, HAL_XSPI_FLAG_TC);
 800880e:	625a      	str	r2, [r3, #36]	@ 0x24
      HAL_XSPI_ENABLE_IT(hxspi, HAL_XSPI_IT_TC);
 8008810:	681a      	ldr	r2, [r3, #0]
 8008812:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8008816:	601a      	str	r2, [r3, #0]
      SET_BIT(hxspi->Instance->CR, XSPI_CR_ABORT);
 8008818:	681a      	ldr	r2, [r3, #0]
 800881a:	f042 0202 	orr.w	r2, r2, #2
 800881e:	601a      	str	r2, [r3, #0]
}
 8008820:	bd08      	pop	{r3, pc}
      hxspi->State = HAL_XSPI_STATE_READY;
 8008822:	6542      	str	r2, [r0, #84]	@ 0x54
      HAL_XSPI_AbortCpltCallback(hxspi);
 8008824:	f7ff ffe3 	bl	80087ee <HAL_XSPI_AbortCpltCallback>
 8008828:	e7fa      	b.n	8008820 <XSPI_DMAAbortCplt+0x30>
    hxspi->State = HAL_XSPI_STATE_READY;
 800882a:	2302      	movs	r3, #2
 800882c:	6543      	str	r3, [r0, #84]	@ 0x54
    HAL_XSPI_ErrorCallback(hxspi);
 800882e:	f7ff ffdd 	bl	80087ec <HAL_XSPI_ErrorCallback>
}
 8008832:	e7f5      	b.n	8008820 <XSPI_DMAAbortCplt+0x30>

08008834 <HAL_XSPI_FifoThresholdCallback>:
__weak void HAL_XSPI_FifoThresholdCallback(XSPI_HandleTypeDef *hxspi)
 8008834:	4770      	bx	lr

08008836 <HAL_XSPI_CmdCpltCallback>:
__weak void HAL_XSPI_CmdCpltCallback(XSPI_HandleTypeDef *hxspi)
 8008836:	4770      	bx	lr

08008838 <HAL_XSPI_RxCpltCallback>:
__weak void HAL_XSPI_RxCpltCallback(XSPI_HandleTypeDef *hxspi)
 8008838:	4770      	bx	lr

0800883a <HAL_XSPI_TxCpltCallback>:
__weak void HAL_XSPI_TxCpltCallback(XSPI_HandleTypeDef *hxspi)
 800883a:	4770      	bx	lr

0800883c <HAL_XSPI_StatusMatchCallback>:
__weak void HAL_XSPI_StatusMatchCallback(XSPI_HandleTypeDef *hxspi)
 800883c:	4770      	bx	lr

0800883e <HAL_XSPI_TimeOutCallback>:
__weak void HAL_XSPI_TimeOutCallback(XSPI_HandleTypeDef *hxspi)
 800883e:	4770      	bx	lr

08008840 <HAL_XSPI_IRQHandler>:
{
 8008840:	b570      	push	{r4, r5, r6, lr}
 8008842:	4604      	mov	r4, r0
  __IO uint32_t *data_reg = &hxspi->Instance->DR;
 8008844:	6803      	ldr	r3, [r0, #0]
  uint32_t flag           = hxspi->Instance->SR;
 8008846:	6a1a      	ldr	r2, [r3, #32]
  uint32_t itsource       = hxspi->Instance->CR;
 8008848:	6818      	ldr	r0, [r3, #0]
  if (((flag & HAL_XSPI_FLAG_FT) != 0U) && ((itsource & HAL_XSPI_IT_FT) != 0U))
 800884a:	0755      	lsls	r5, r2, #29
  uint32_t currentstate   = hxspi->State;
 800884c:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if (((flag & HAL_XSPI_FLAG_FT) != 0U) && ((itsource & HAL_XSPI_IT_FT) != 0U))
 800884e:	d51f      	bpl.n	8008890 <HAL_XSPI_IRQHandler+0x50>
 8008850:	0346      	lsls	r6, r0, #13
 8008852:	d51d      	bpl.n	8008890 <HAL_XSPI_IRQHandler+0x50>
    if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 8008854:	2918      	cmp	r1, #24
 8008856:	d114      	bne.n	8008882 <HAL_XSPI_IRQHandler+0x42>
      *((__IO uint8_t *)data_reg) = *hxspi->pBuffPtr;
 8008858:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800885a:	7812      	ldrb	r2, [r2, #0]
 800885c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
      hxspi->pBuffPtr++;
 8008860:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008862:	3301      	adds	r3, #1
 8008864:	6423      	str	r3, [r4, #64]	@ 0x40
      hxspi->XferCount--;
 8008866:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 8008868:	3b01      	subs	r3, #1
 800886a:	64a3      	str	r3, [r4, #72]	@ 0x48
    if (hxspi->XferCount == 0U)
 800886c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 800886e:	b923      	cbnz	r3, 800887a <HAL_XSPI_IRQHandler+0x3a>
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_FT);
 8008870:	6822      	ldr	r2, [r4, #0]
 8008872:	6813      	ldr	r3, [r2, #0]
 8008874:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8008878:	6013      	str	r3, [r2, #0]
    HAL_XSPI_FifoThresholdCallback(hxspi);
 800887a:	4620      	mov	r0, r4
 800887c:	f7ff ffda 	bl	8008834 <HAL_XSPI_FifoThresholdCallback>
}
 8008880:	bd70      	pop	{r4, r5, r6, pc}
    else if (currentstate == HAL_XSPI_STATE_BUSY_RX)
 8008882:	2928      	cmp	r1, #40	@ 0x28
 8008884:	d1f2      	bne.n	800886c <HAL_XSPI_IRQHandler+0x2c>
      *hxspi->pBuffPtr = *((__IO uint8_t *)data_reg);
 8008886:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008888:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800888c:	7013      	strb	r3, [r2, #0]
 800888e:	e7e7      	b.n	8008860 <HAL_XSPI_IRQHandler+0x20>
  else if (((flag & HAL_XSPI_FLAG_TC) != 0U) && ((itsource & HAL_XSPI_IT_TC) != 0U))
 8008890:	0795      	lsls	r5, r2, #30
 8008892:	d53e      	bpl.n	8008912 <HAL_XSPI_IRQHandler+0xd2>
 8008894:	0386      	lsls	r6, r0, #14
 8008896:	d53c      	bpl.n	8008912 <HAL_XSPI_IRQHandler+0xd2>
    if (currentstate == HAL_XSPI_STATE_BUSY_RX)
 8008898:	2928      	cmp	r1, #40	@ 0x28
 800889a:	d11d      	bne.n	80088d8 <HAL_XSPI_IRQHandler+0x98>
      if ((hxspi->XferCount > 0U) && ((flag & XSPI_SR_FLEVEL) != 0U))
 800889c:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 800889e:	b169      	cbz	r1, 80088bc <HAL_XSPI_IRQHandler+0x7c>
 80088a0:	f412 4ffe 	tst.w	r2, #32512	@ 0x7f00
 80088a4:	d00a      	beq.n	80088bc <HAL_XSPI_IRQHandler+0x7c>
        *hxspi->pBuffPtr = *((__IO uint8_t *)data_reg);
 80088a6:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80088aa:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80088ac:	7013      	strb	r3, [r2, #0]
        hxspi->pBuffPtr++;
 80088ae:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80088b0:	3301      	adds	r3, #1
 80088b2:	6423      	str	r3, [r4, #64]	@ 0x40
        hxspi->XferCount--;
 80088b4:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 80088b6:	3b01      	subs	r3, #1
 80088b8:	64a3      	str	r3, [r4, #72]	@ 0x48
 80088ba:	e7e1      	b.n	8008880 <HAL_XSPI_IRQHandler+0x40>
      else if (hxspi->XferCount == 0U)
 80088bc:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 80088be:	2a00      	cmp	r2, #0
 80088c0:	d1de      	bne.n	8008880 <HAL_XSPI_IRQHandler+0x40>
        hxspi->Instance->FCR = HAL_XSPI_FLAG_TC;
 80088c2:	2102      	movs	r1, #2
 80088c4:	6259      	str	r1, [r3, #36]	@ 0x24
        HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 80088c6:	681a      	ldr	r2, [r3, #0]
        HAL_XSPI_RxCpltCallback(hxspi);
 80088c8:	4620      	mov	r0, r4
        HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 80088ca:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 80088ce:	601a      	str	r2, [r3, #0]
        hxspi->State = HAL_XSPI_STATE_READY;
 80088d0:	6561      	str	r1, [r4, #84]	@ 0x54
        HAL_XSPI_RxCpltCallback(hxspi);
 80088d2:	f7ff ffb1 	bl	8008838 <HAL_XSPI_RxCpltCallback>
 80088d6:	e7d3      	b.n	8008880 <HAL_XSPI_IRQHandler+0x40>
      hxspi->Instance->FCR = HAL_XSPI_FLAG_TC;
 80088d8:	2002      	movs	r0, #2
 80088da:	6258      	str	r0, [r3, #36]	@ 0x24
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 80088dc:	681a      	ldr	r2, [r3, #0]
      if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 80088de:	2918      	cmp	r1, #24
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_TC | HAL_XSPI_IT_FT | HAL_XSPI_IT_TE);
 80088e0:	f422 22e0 	bic.w	r2, r2, #458752	@ 0x70000
 80088e4:	601a      	str	r2, [r3, #0]
      hxspi->State = HAL_XSPI_STATE_READY;
 80088e6:	6560      	str	r0, [r4, #84]	@ 0x54
      if (currentstate == HAL_XSPI_STATE_BUSY_TX)
 80088e8:	d103      	bne.n	80088f2 <HAL_XSPI_IRQHandler+0xb2>
        HAL_XSPI_TxCpltCallback(hxspi);
 80088ea:	4620      	mov	r0, r4
 80088ec:	f7ff ffa5 	bl	800883a <HAL_XSPI_TxCpltCallback>
 80088f0:	e7c6      	b.n	8008880 <HAL_XSPI_IRQHandler+0x40>
      else if (currentstate == HAL_XSPI_STATE_BUSY_CMD)
 80088f2:	2908      	cmp	r1, #8
 80088f4:	d103      	bne.n	80088fe <HAL_XSPI_IRQHandler+0xbe>
        HAL_XSPI_CmdCpltCallback(hxspi);
 80088f6:	4620      	mov	r0, r4
 80088f8:	f7ff ff9d 	bl	8008836 <HAL_XSPI_CmdCpltCallback>
 80088fc:	e7c0      	b.n	8008880 <HAL_XSPI_IRQHandler+0x40>
      else if (currentstate == HAL_XSPI_STATE_ABORT)
 80088fe:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
 8008902:	d1bd      	bne.n	8008880 <HAL_XSPI_IRQHandler+0x40>
        if (hxspi->ErrorCode == HAL_XSPI_ERROR_NONE)
 8008904:	6da3      	ldr	r3, [r4, #88]	@ 0x58
          HAL_XSPI_AbortCpltCallback(hxspi);
 8008906:	4620      	mov	r0, r4
        if (hxspi->ErrorCode == HAL_XSPI_ERROR_NONE)
 8008908:	2b00      	cmp	r3, #0
 800890a:	d13b      	bne.n	8008984 <HAL_XSPI_IRQHandler+0x144>
          HAL_XSPI_AbortCpltCallback(hxspi);
 800890c:	f7ff ff6f 	bl	80087ee <HAL_XSPI_AbortCpltCallback>
 8008910:	e7b6      	b.n	8008880 <HAL_XSPI_IRQHandler+0x40>
  else if (((flag & HAL_XSPI_FLAG_SM) != 0U) && ((itsource & HAL_XSPI_IT_SM) != 0U))
 8008912:	0715      	lsls	r5, r2, #28
 8008914:	d510      	bpl.n	8008938 <HAL_XSPI_IRQHandler+0xf8>
 8008916:	0301      	lsls	r1, r0, #12
 8008918:	d50e      	bpl.n	8008938 <HAL_XSPI_IRQHandler+0xf8>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_SM;
 800891a:	2208      	movs	r2, #8
 800891c:	625a      	str	r2, [r3, #36]	@ 0x24
    if ((hxspi->Instance->CR & XSPI_CR_APMS) != 0U)
 800891e:	681a      	ldr	r2, [r3, #0]
 8008920:	0252      	lsls	r2, r2, #9
 8008922:	d505      	bpl.n	8008930 <HAL_XSPI_IRQHandler+0xf0>
      HAL_XSPI_DISABLE_IT(hxspi, HAL_XSPI_IT_SM | HAL_XSPI_IT_TE);
 8008924:	681a      	ldr	r2, [r3, #0]
 8008926:	f422 2210 	bic.w	r2, r2, #589824	@ 0x90000
 800892a:	601a      	str	r2, [r3, #0]
      hxspi->State = HAL_XSPI_STATE_READY;
 800892c:	2302      	movs	r3, #2
 800892e:	6563      	str	r3, [r4, #84]	@ 0x54
    HAL_XSPI_StatusMatchCallback(hxspi);
 8008930:	4620      	mov	r0, r4
 8008932:	f7ff ff83 	bl	800883c <HAL_XSPI_StatusMatchCallback>
 8008936:	e7a3      	b.n	8008880 <HAL_XSPI_IRQHandler+0x40>
  else if (((flag & HAL_XSPI_FLAG_TE) != 0U) && ((itsource & HAL_XSPI_IT_TE) != 0U))
 8008938:	07d6      	lsls	r6, r2, #31
 800893a:	d528      	bpl.n	800898e <HAL_XSPI_IRQHandler+0x14e>
 800893c:	03c5      	lsls	r5, r0, #15
 800893e:	d526      	bpl.n	800898e <HAL_XSPI_IRQHandler+0x14e>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TE;
 8008940:	2201      	movs	r2, #1
    hxspi->ErrorCode = HAL_XSPI_ERROR_TRANSFER;
 8008942:	2502      	movs	r5, #2
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TE;
 8008944:	625a      	str	r2, [r3, #36]	@ 0x24
    HAL_XSPI_DISABLE_IT(hxspi, (HAL_XSPI_IT_TO | HAL_XSPI_IT_SM | HAL_XSPI_IT_FT | HAL_XSPI_IT_TC | HAL_XSPI_IT_TE));
 8008946:	681a      	ldr	r2, [r3, #0]
 8008948:	f422 12f8 	bic.w	r2, r2, #2031616	@ 0x1f0000
 800894c:	601a      	str	r2, [r3, #0]
    hxspi->ErrorCode = HAL_XSPI_ERROR_TRANSFER;
 800894e:	65a5      	str	r5, [r4, #88]	@ 0x58
    if ((hxspi->Instance->CR & XSPI_CR_DMAEN) != 0U)
 8008950:	681a      	ldr	r2, [r3, #0]
 8008952:	0750      	lsls	r0, r2, #29
 8008954:	d519      	bpl.n	800898a <HAL_XSPI_IRQHandler+0x14a>
      CLEAR_BIT(hxspi->Instance->CR, XSPI_CR_DMAEN);
 8008956:	681a      	ldr	r2, [r3, #0]
      hxspi->hdmatx->XferAbortCallback = XSPI_DMAAbortCplt;
 8008958:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800895a:	4e13      	ldr	r6, [pc, #76]	@ (80089a8 <HAL_XSPI_IRQHandler+0x168>)
      CLEAR_BIT(hxspi->Instance->CR, XSPI_CR_DMAEN);
 800895c:	f022 0204 	bic.w	r2, r2, #4
 8008960:	601a      	str	r2, [r3, #0]
      hxspi->hdmatx->XferAbortCallback = XSPI_DMAAbortCplt;
 8008962:	66c6      	str	r6, [r0, #108]	@ 0x6c
      if (HAL_DMA_Abort_IT(hxspi->hdmatx) != HAL_OK)
 8008964:	f7fb fd50 	bl	8004408 <HAL_DMA_Abort_IT>
 8008968:	b118      	cbz	r0, 8008972 <HAL_XSPI_IRQHandler+0x132>
        HAL_XSPI_ErrorCallback(hxspi);
 800896a:	4620      	mov	r0, r4
        hxspi->State = HAL_XSPI_STATE_READY;
 800896c:	6565      	str	r5, [r4, #84]	@ 0x54
        HAL_XSPI_ErrorCallback(hxspi);
 800896e:	f7ff ff3d 	bl	80087ec <HAL_XSPI_ErrorCallback>
      hxspi->hdmarx->XferAbortCallback = XSPI_DMAAbortCplt;
 8008972:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 8008974:	66c6      	str	r6, [r0, #108]	@ 0x6c
      if (HAL_DMA_Abort_IT(hxspi->hdmarx) != HAL_OK)
 8008976:	f7fb fd47 	bl	8004408 <HAL_DMA_Abort_IT>
 800897a:	2800      	cmp	r0, #0
 800897c:	d080      	beq.n	8008880 <HAL_XSPI_IRQHandler+0x40>
        hxspi->State = HAL_XSPI_STATE_READY;
 800897e:	2302      	movs	r3, #2
 8008980:	6563      	str	r3, [r4, #84]	@ 0x54
        HAL_XSPI_ErrorCallback(hxspi);
 8008982:	4620      	mov	r0, r4
 8008984:	f7ff ff32 	bl	80087ec <HAL_XSPI_ErrorCallback>
 8008988:	e77a      	b.n	8008880 <HAL_XSPI_IRQHandler+0x40>
      hxspi->State = HAL_XSPI_STATE_READY;
 800898a:	6565      	str	r5, [r4, #84]	@ 0x54
      HAL_XSPI_ErrorCallback(hxspi);
 800898c:	e7f9      	b.n	8008982 <HAL_XSPI_IRQHandler+0x142>
  else if (((flag & HAL_XSPI_FLAG_TO) != 0U) && ((itsource & HAL_XSPI_IT_TO) != 0U))
 800898e:	06d1      	lsls	r1, r2, #27
 8008990:	f57f af76 	bpl.w	8008880 <HAL_XSPI_IRQHandler+0x40>
 8008994:	02c2      	lsls	r2, r0, #11
 8008996:	f57f af73 	bpl.w	8008880 <HAL_XSPI_IRQHandler+0x40>
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TO;
 800899a:	2210      	movs	r2, #16
    HAL_XSPI_TimeOutCallback(hxspi);
 800899c:	4620      	mov	r0, r4
    hxspi->Instance->FCR = HAL_XSPI_FLAG_TO;
 800899e:	625a      	str	r2, [r3, #36]	@ 0x24
    HAL_XSPI_TimeOutCallback(hxspi);
 80089a0:	f7ff ff4d 	bl	800883e <HAL_XSPI_TimeOutCallback>
}
 80089a4:	e76c      	b.n	8008880 <HAL_XSPI_IRQHandler+0x40>
 80089a6:	bf00      	nop
 80089a8:	080087f1 	.word	0x080087f1

080089ac <IRQ_Context>:
#endif

/*
  Determine if CPU executes from interrupt context or if interrupts are masked.
*/
__STATIC_INLINE uint32_t IRQ_Context (void) {
 80089ac:	b510      	push	{r4, lr}
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80089ae:	f3ef 8405 	mrs	r4, IPSR
  uint32_t irq;
  BaseType_t state;

  irq = 0U;

  if (IS_IRQ_MODE()) {
 80089b2:	b114      	cbz	r4, 80089ba <IRQ_Context+0xe>
    /* Called from interrupt context */
    irq = 1U;
 80089b4:	2401      	movs	r4, #1
    }
  }

  /* Return context, 0: thread context, 1: IRQ context */
  return (irq);
}
 80089b6:	4620      	mov	r0, r4
 80089b8:	bd10      	pop	{r4, pc}
    state = xTaskGetSchedulerState();
 80089ba:	f001 fc4d 	bl	800a258 <xTaskGetSchedulerState>
    if (state != taskSCHEDULER_NOT_STARTED) {
 80089be:	2801      	cmp	r0, #1
 80089c0:	d0f9      	beq.n	80089b6 <IRQ_Context+0xa>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
 80089c2:	f3ef 8310 	mrs	r3, PRIMASK
      if (IS_IRQ_MASKED()) {
 80089c6:	2b00      	cmp	r3, #0
 80089c8:	d1f4      	bne.n	80089b4 <IRQ_Context+0x8>
 */
__STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80089ca:	f3ef 8411 	mrs	r4, BASEPRI
 80089ce:	3c00      	subs	r4, #0
 80089d0:	bf18      	it	ne
 80089d2:	2401      	movne	r4, #1
  return (irq);
 80089d4:	e7ef      	b.n	80089b6 <IRQ_Context+0xa>

080089d6 <SysTick_Handler>:
void SysTick_Handler (void) {
 80089d6:	b508      	push	{r3, lr}
  SysTick->CTRL;
 80089d8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80089dc:	691b      	ldr	r3, [r3, #16]
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 80089de:	f001 fc3b 	bl	800a258 <xTaskGetSchedulerState>
 80089e2:	2801      	cmp	r0, #1
 80089e4:	d003      	beq.n	80089ee <SysTick_Handler+0x18>
}
 80089e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 80089ea:	f000 ba7d 	b.w	8008ee8 <xPortSysTickHandler>
}
 80089ee:	bd08      	pop	{r3, pc}

080089f0 <osKernelInitialize>:
/* ==== Kernel Management Functions ==== */

/*
  Initialize the RTOS Kernel.
*/
osStatus_t osKernelInitialize (void) {
 80089f0:	b508      	push	{r3, lr}
  osStatus_t stat;
  BaseType_t state;

  if (IRQ_Context() != 0U) {
 80089f2:	f7ff ffdb 	bl	80089ac <IRQ_Context>
 80089f6:	b948      	cbnz	r0, 8008a0c <osKernelInitialize+0x1c>
    stat = osErrorISR;
  }
  else {
    state = xTaskGetSchedulerState();
 80089f8:	f001 fc2e 	bl	800a258 <xTaskGetSchedulerState>

    /* Initialize if scheduler not started and not initialized before */
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelInactive)) {
 80089fc:	2801      	cmp	r0, #1
    state = xTaskGetSchedulerState();
 80089fe:	4603      	mov	r3, r0
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelInactive)) {
 8008a00:	d107      	bne.n	8008a12 <osKernelInitialize+0x22>
 8008a02:	4a05      	ldr	r2, [pc, #20]	@ (8008a18 <osKernelInitialize+0x28>)
 8008a04:	6810      	ldr	r0, [r2, #0]
 8008a06:	b920      	cbnz	r0, 8008a12 <osKernelInitialize+0x22>
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        /* Initialize the memory regions when using heap_5 variant */
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008a08:	6013      	str	r3, [r2, #0]
    }
  }

  /* Return execution status */
  return (stat);
}
 8008a0a:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8008a0c:	f06f 0005 	mvn.w	r0, #5
 8008a10:	e7fb      	b.n	8008a0a <osKernelInitialize+0x1a>
      stat = osError;
 8008a12:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008a16:	e7f8      	b.n	8008a0a <osKernelInitialize+0x1a>
 8008a18:	2006eff0 	.word	0x2006eff0

08008a1c <osKernelStart>:
}

/*
  Start the RTOS Kernel scheduler.
*/
osStatus_t osKernelStart (void) {
 8008a1c:	b510      	push	{r4, lr}
  osStatus_t stat;
  BaseType_t state;

  if (IRQ_Context() != 0U) {
 8008a1e:	f7ff ffc5 	bl	80089ac <IRQ_Context>
 8008a22:	4604      	mov	r4, r0
 8008a24:	b978      	cbnz	r0, 8008a46 <osKernelStart+0x2a>
    stat = osErrorISR;
  }
  else {
    state = xTaskGetSchedulerState();
 8008a26:	f001 fc17 	bl	800a258 <xTaskGetSchedulerState>

    /* Start scheduler if initialized and not started before */
    if ((state == taskSCHEDULER_NOT_STARTED) && (KernelState == osKernelReady)) {
 8008a2a:	2801      	cmp	r0, #1
 8008a2c:	d10e      	bne.n	8008a4c <osKernelStart+0x30>
 8008a2e:	4b09      	ldr	r3, [pc, #36]	@ (8008a54 <osKernelStart+0x38>)
 8008a30:	681a      	ldr	r2, [r3, #0]
 8008a32:	2a01      	cmp	r2, #1
 8008a34:	d10a      	bne.n	8008a4c <osKernelStart+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008a36:	4a08      	ldr	r2, [pc, #32]	@ (8008a58 <osKernelStart+0x3c>)
 8008a38:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to ensure correct API flow */
      KernelState = osKernelRunning;
 8008a3a:	2202      	movs	r2, #2
 8008a3c:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8008a3e:	f001 faad 	bl	8009f9c <vTaskStartScheduler>
      stat = osOK;
 8008a42:	4620      	mov	r0, r4
    }
  }

  /* Return execution status */
  return (stat);
}
 8008a44:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008a46:	f06f 0005 	mvn.w	r0, #5
 8008a4a:	e7fb      	b.n	8008a44 <osKernelStart+0x28>
      stat = osError;
 8008a4c:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008a50:	e7f8      	b.n	8008a44 <osKernelStart+0x28>
 8008a52:	bf00      	nop
 8008a54:	2006eff0 	.word	0x2006eff0
 8008a58:	e000ed00 	.word	0xe000ed00

08008a5c <osThreadNew>:
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8008a5c:	2300      	movs	r3, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008a5e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008a60:	b087      	sub	sp, #28
 8008a62:	4606      	mov	r6, r0
 8008a64:	460f      	mov	r7, r1
 8008a66:	4614      	mov	r4, r2
  hTask = NULL;
 8008a68:	9305      	str	r3, [sp, #20]

  if ((IRQ_Context() == 0U) && (func != NULL)) {
 8008a6a:	f7ff ff9f 	bl	80089ac <IRQ_Context>
 8008a6e:	b9d8      	cbnz	r0, 8008aa8 <osThreadNew+0x4c>
 8008a70:	b1d6      	cbz	r6, 8008aa8 <osThreadNew+0x4c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008a72:	2c00      	cmp	r4, #0
 8008a74:	d02f      	beq.n	8008ad6 <osThreadNew+0x7a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008a76:	69a5      	ldr	r5, [r4, #24]
 8008a78:	2d00      	cmp	r5, #0
 8008a7a:	bf08      	it	eq
 8008a7c:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008a7e:	1e6b      	subs	r3, r5, #1
 8008a80:	2b37      	cmp	r3, #55	@ 0x37
 8008a82:	46ae      	mov	lr, r5
 8008a84:	d811      	bhi.n	8008aaa <osThreadNew+0x4e>
 8008a86:	6863      	ldr	r3, [r4, #4]
 8008a88:	07db      	lsls	r3, r3, #31
 8008a8a:	d40e      	bmi.n	8008aaa <osThreadNew+0x4e>
        /* Invalid priority or unsupported osThreadJoinable attribute used */
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008a8c:	6963      	ldr	r3, [r4, #20]
 8008a8e:	b173      	cbz	r3, 8008aae <osThreadNew+0x52>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008a90:	089a      	lsrs	r2, r3, #2
      if (attr->name != NULL) {
 8008a92:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008a94:	e9d4 c002 	ldrd	ip, r0, [r4, #8]
 8008a98:	f1bc 0f00 	cmp.w	ip, #0
 8008a9c:	d009      	beq.n	8008ab2 <osThreadNew+0x56>
 8008a9e:	285f      	cmp	r0, #95	@ 0x5f
 8008aa0:	d902      	bls.n	8008aa8 <osThreadNew+0x4c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008aa2:	6920      	ldr	r0, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008aa4:	b100      	cbz	r0, 8008aa8 <osThreadNew+0x4c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008aa6:	b9db      	cbnz	r3, 8008ae0 <osThreadNew+0x84>
      }
    }
  }

  /* Return thread ID */
  return ((osThreadId_t)hTask);
 8008aa8:	9805      	ldr	r0, [sp, #20]
}
 8008aaa:	b007      	add	sp, #28
 8008aac:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008aae:	2280      	movs	r2, #128	@ 0x80
 8008ab0:	e7ef      	b.n	8008a92 <osThreadNew+0x36>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008ab2:	2800      	cmp	r0, #0
 8008ab4:	d1f8      	bne.n	8008aa8 <osThreadNew+0x4c>
      if (mem == 0) {
 8008ab6:	6923      	ldr	r3, [r4, #16]
 8008ab8:	2b00      	cmp	r3, #0
 8008aba:	d1f5      	bne.n	8008aa8 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (configSTACK_DEPTH_TYPE)stack, argument, prio, &hTask) != pdPASS) {
 8008abc:	ab05      	add	r3, sp, #20
 8008abe:	e9cd e300 	strd	lr, r3, [sp]
 8008ac2:	4630      	mov	r0, r6
 8008ac4:	463b      	mov	r3, r7
 8008ac6:	b292      	uxth	r2, r2
 8008ac8:	f001 f8b9 	bl	8009c3e <xTaskCreate>
 8008acc:	2801      	cmp	r0, #1
            hTask = NULL;
 8008ace:	bf1c      	itt	ne
 8008ad0:	2300      	movne	r3, #0
 8008ad2:	9305      	strne	r3, [sp, #20]
 8008ad4:	e7e8      	b.n	8008aa8 <osThreadNew+0x4c>
    name = NULL;
 8008ad6:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 8008ad8:	f04f 0e18 	mov.w	lr, #24
    stack = configMINIMAL_STACK_SIZE;
 8008adc:	2280      	movs	r2, #128	@ 0x80
 8008ade:	e7ed      	b.n	8008abc <osThreadNew+0x60>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008ae0:	e9cd 0c01 	strd	r0, ip, [sp, #4]
 8008ae4:	463b      	mov	r3, r7
 8008ae6:	4630      	mov	r0, r6
 8008ae8:	9500      	str	r5, [sp, #0]
 8008aea:	f001 f882 	bl	8009bf2 <xTaskCreateStatic>
 8008aee:	9005      	str	r0, [sp, #20]
 8008af0:	e7da      	b.n	8008aa8 <osThreadNew+0x4c>

08008af2 <osDelay>:
/* ==== Generic Wait Functions ==== */

/*
  Wait for Timeout (Time Delay).
*/
osStatus_t osDelay (uint32_t ticks) {
 8008af2:	b510      	push	{r4, lr}
 8008af4:	4604      	mov	r4, r0
  osStatus_t stat;

  if (IRQ_Context() != 0U) {
 8008af6:	f7ff ff59 	bl	80089ac <IRQ_Context>
 8008afa:	b928      	cbnz	r0, 8008b08 <osDelay+0x16>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8008afc:	b114      	cbz	r4, 8008b04 <osDelay+0x12>
      vTaskDelay(ticks);
 8008afe:	4620      	mov	r0, r4
 8008b00:	f001 fa18 	bl	8009f34 <vTaskDelay>
    stat = osOK;
 8008b04:	2000      	movs	r0, #0
    }
  }

  /* Return execution status */
  return (stat);
}
 8008b06:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008b08:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8008b0c:	e7fb      	b.n	8008b06 <osDelay+0x14>

08008b0e <osSemaphoreNew>:
/* ==== Semaphore Management Functions ==== */

/*
  Create and Initialize a Semaphore object.
*/
osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008b0e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008b10:	4604      	mov	r4, r0
 8008b12:	460e      	mov	r6, r1
 8008b14:	4615      	mov	r5, r2
  SemaphoreHandle_t hSemaphore;
  int32_t mem;

  hSemaphore = NULL;

  if ((IRQ_Context() == 0U) && (max_count > 0U) && (initial_count <= max_count)) {
 8008b16:	f7ff ff49 	bl	80089ac <IRQ_Context>
 8008b1a:	b940      	cbnz	r0, 8008b2e <osSemaphoreNew+0x20>
 8008b1c:	b13c      	cbz	r4, 8008b2e <osSemaphoreNew+0x20>
 8008b1e:	42b4      	cmp	r4, r6
 8008b20:	d305      	bcc.n	8008b2e <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8008b22:	b155      	cbz	r5, 8008b3a <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008b24:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8008b28:	b12b      	cbz	r3, 8008b36 <osSemaphoreNew+0x28>
 8008b2a:	2a4f      	cmp	r2, #79	@ 0x4f
 8008b2c:	d825      	bhi.n	8008b7a <osSemaphoreNew+0x6c>
  hSemaphore = NULL;
 8008b2e:	2400      	movs	r4, #0
    }
  }

  /* Return semaphore ID */
  return ((osSemaphoreId_t)hSemaphore);
}
 8008b30:	4620      	mov	r0, r4
 8008b32:	b002      	add	sp, #8
 8008b34:	bd70      	pop	{r4, r5, r6, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008b36:	2a00      	cmp	r2, #0
 8008b38:	d1f9      	bne.n	8008b2e <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8008b3a:	2c01      	cmp	r4, #1
 8008b3c:	d008      	beq.n	8008b50 <osSemaphoreNew+0x42>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008b3e:	4620      	mov	r0, r4
 8008b40:	4631      	mov	r1, r6
 8008b42:	f000 fc14 	bl	800936e <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008b46:	4604      	mov	r4, r0
 8008b48:	2800      	cmp	r0, #0
 8008b4a:	d0f0      	beq.n	8008b2e <osSemaphoreNew+0x20>
        if ((attr != NULL) && (attr->name != NULL)) {
 8008b4c:	b975      	cbnz	r5, 8008b6c <osSemaphoreNew+0x5e>
 8008b4e:	e7ef      	b.n	8008b30 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 8008b50:	2203      	movs	r2, #3
 8008b52:	2100      	movs	r1, #0
 8008b54:	2001      	movs	r0, #1
 8008b56:	f000 fbcd 	bl	80092f4 <xQueueGenericCreate>
 8008b5a:	e017      	b.n	8008b8c <osSemaphoreNew+0x7e>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008b5c:	4620      	mov	r0, r4
 8008b5e:	461a      	mov	r2, r3
 8008b60:	4631      	mov	r1, r6
 8008b62:	f000 fbf1 	bl	8009348 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008b66:	4604      	mov	r4, r0
 8008b68:	2800      	cmp	r0, #0
 8008b6a:	d0e0      	beq.n	8008b2e <osSemaphoreNew+0x20>
        if ((attr != NULL) && (attr->name != NULL)) {
 8008b6c:	6829      	ldr	r1, [r5, #0]
 8008b6e:	2900      	cmp	r1, #0
 8008b70:	d0de      	beq.n	8008b30 <osSemaphoreNew+0x22>
          vQueueAddToRegistry (hSemaphore, attr->name);
 8008b72:	4620      	mov	r0, r4
 8008b74:	f000 fe68 	bl	8009848 <vQueueAddToRegistry>
 8008b78:	e7da      	b.n	8008b30 <osSemaphoreNew+0x22>
      if (max_count == 1U) {
 8008b7a:	2c01      	cmp	r4, #1
 8008b7c:	d1ee      	bne.n	8008b5c <osSemaphoreNew+0x4e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008b7e:	2203      	movs	r2, #3
 8008b80:	4601      	mov	r1, r0
 8008b82:	9200      	str	r2, [sp, #0]
 8008b84:	4602      	mov	r2, r0
 8008b86:	4620      	mov	r0, r4
 8008b88:	f000 fb89 	bl	800929e <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8008b8c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008b8e:	2800      	cmp	r0, #0
 8008b90:	d0cd      	beq.n	8008b2e <osSemaphoreNew+0x20>
 8008b92:	2e00      	cmp	r6, #0
 8008b94:	d0da      	beq.n	8008b4c <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008b96:	2300      	movs	r3, #0
 8008b98:	461a      	mov	r2, r3
 8008b9a:	4619      	mov	r1, r3
 8008b9c:	f000 fbf6 	bl	800938c <xQueueGenericSend>
 8008ba0:	2801      	cmp	r0, #1
 8008ba2:	d0d3      	beq.n	8008b4c <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8008ba4:	4620      	mov	r0, r4
 8008ba6:	f000 fe8d 	bl	80098c4 <vQueueDelete>
      if (hSemaphore != NULL) {
 8008baa:	e7c0      	b.n	8008b2e <osSemaphoreNew+0x20>

08008bac <osSemaphoreAcquire>:

/*
  Acquire a Semaphore token or timeout if no tokens are available.
*/
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008bac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008bae:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008bb0:	4605      	mov	r5, r0
 8008bb2:	b918      	cbnz	r0, 8008bbc <osSemaphoreAcquire+0x10>
    stat = osErrorParameter;
 8008bb4:	f06f 0003 	mvn.w	r0, #3
    }
  }

  /* Return execution status */
  return (stat);
}
 8008bb8:	b003      	add	sp, #12
 8008bba:	bd30      	pop	{r4, r5, pc}
  else if (IRQ_Context() != 0U) {
 8008bbc:	f7ff fef6 	bl	80089ac <IRQ_Context>
 8008bc0:	b1b8      	cbz	r0, 8008bf2 <osSemaphoreAcquire+0x46>
    if (timeout != 0U) {
 8008bc2:	2c00      	cmp	r4, #0
 8008bc4:	d1f6      	bne.n	8008bb4 <osSemaphoreAcquire+0x8>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008bc6:	4621      	mov	r1, r4
 8008bc8:	4628      	mov	r0, r5
 8008bca:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008bcc:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008bce:	f000 fdfd 	bl	80097cc <xQueueReceiveFromISR>
 8008bd2:	2801      	cmp	r0, #1
 8008bd4:	d002      	beq.n	8008bdc <osSemaphoreAcquire+0x30>
        stat = osErrorResource;
 8008bd6:	f06f 0002 	mvn.w	r0, #2
 8008bda:	e7ed      	b.n	8008bb8 <osSemaphoreAcquire+0xc>
        portYIELD_FROM_ISR (yield);
 8008bdc:	9b01      	ldr	r3, [sp, #4]
 8008bde:	b90b      	cbnz	r3, 8008be4 <osSemaphoreAcquire+0x38>
  stat = osOK;
 8008be0:	2000      	movs	r0, #0
 8008be2:	e7e9      	b.n	8008bb8 <osSemaphoreAcquire+0xc>
        portYIELD_FROM_ISR (yield);
 8008be4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008be8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008bec:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008bf0:	e7f6      	b.n	8008be0 <osSemaphoreAcquire+0x34>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008bf2:	4621      	mov	r1, r4
 8008bf4:	4628      	mov	r0, r5
 8008bf6:	f000 fd54 	bl	80096a2 <xQueueSemaphoreTake>
 8008bfa:	2801      	cmp	r0, #1
 8008bfc:	d0f0      	beq.n	8008be0 <osSemaphoreAcquire+0x34>
      if (timeout != 0U) {
 8008bfe:	2c00      	cmp	r4, #0
 8008c00:	d0e9      	beq.n	8008bd6 <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8008c02:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008c06:	e7d7      	b.n	8008bb8 <osSemaphoreAcquire+0xc>

08008c08 <osSemaphoreRelease>:

/*
  Release a Semaphore token up to the initial maximum count.
*/
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008c08:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008c0a:	4604      	mov	r4, r0
 8008c0c:	b308      	cbz	r0, 8008c52 <osSemaphoreRelease+0x4a>
    stat = osErrorParameter;
  }
  else if (IRQ_Context() != 0U) {
 8008c0e:	f7ff fecd 	bl	80089ac <IRQ_Context>
 8008c12:	4603      	mov	r3, r0
 8008c14:	b1a8      	cbz	r0, 8008c42 <osSemaphoreRelease+0x3a>
    yield = pdFALSE;
 8008c16:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008c18:	4620      	mov	r0, r4
 8008c1a:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008c1c:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008c1e:	f000 fc87 	bl	8009530 <xQueueGiveFromISR>
 8008c22:	2801      	cmp	r0, #1
 8008c24:	d003      	beq.n	8008c2e <osSemaphoreRelease+0x26>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008c26:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008c2a:	b002      	add	sp, #8
 8008c2c:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008c2e:	9b01      	ldr	r3, [sp, #4]
 8008c30:	b12b      	cbz	r3, 8008c3e <osSemaphoreRelease+0x36>
 8008c32:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008c36:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008c3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
  stat = osOK;
 8008c3e:	2000      	movs	r0, #0
 8008c40:	e7f3      	b.n	8008c2a <osSemaphoreRelease+0x22>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008c42:	4602      	mov	r2, r0
 8008c44:	4601      	mov	r1, r0
 8008c46:	4620      	mov	r0, r4
 8008c48:	f000 fba0 	bl	800938c <xQueueGenericSend>
 8008c4c:	2801      	cmp	r0, #1
 8008c4e:	d0f6      	beq.n	8008c3e <osSemaphoreRelease+0x36>
 8008c50:	e7e9      	b.n	8008c26 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8008c52:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008c56:	e7e8      	b.n	8008c2a <osSemaphoreRelease+0x22>

08008c58 <osMessageQueueNew>:

  Limitations:
  - The memory for control block and and message data must be provided in the
    osThreadAttr_t structure in order to allocate object statically.
*/
osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008c58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008c5a:	4605      	mov	r5, r0
 8008c5c:	460e      	mov	r6, r1
 8008c5e:	4614      	mov	r4, r2
  QueueHandle_t hQueue;
  int32_t mem;

  hQueue = NULL;

  if ((IRQ_Context() == 0U) && (msg_count > 0U) && (msg_size > 0U)) {
 8008c60:	f7ff fea4 	bl	80089ac <IRQ_Context>
 8008c64:	b118      	cbz	r0, 8008c6e <osMessageQueueNew+0x16>
  hQueue = NULL;
 8008c66:	2500      	movs	r5, #0

  }

  /* Return message queue ID */
  return ((osMessageQueueId_t)hQueue);
}
 8008c68:	4628      	mov	r0, r5
 8008c6a:	b003      	add	sp, #12
 8008c6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if ((IRQ_Context() == 0U) && (msg_count > 0U) && (msg_size > 0U)) {
 8008c6e:	2d00      	cmp	r5, #0
 8008c70:	d0f9      	beq.n	8008c66 <osMessageQueueNew+0xe>
 8008c72:	2e00      	cmp	r6, #0
 8008c74:	d0f7      	beq.n	8008c66 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8008c76:	b31c      	cbz	r4, 8008cc0 <osMessageQueueNew+0x68>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008c78:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008c7c:	b1c3      	cbz	r3, 8008cb0 <osMessageQueueNew+0x58>
 8008c7e:	2a4f      	cmp	r2, #79	@ 0x4f
 8008c80:	d9f1      	bls.n	8008c66 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008c82:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008c84:	2a00      	cmp	r2, #0
 8008c86:	d0ee      	beq.n	8008c66 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008c88:	fb06 f105 	mul.w	r1, r6, r5
 8008c8c:	6967      	ldr	r7, [r4, #20]
 8008c8e:	428f      	cmp	r7, r1
 8008c90:	d3e9      	bcc.n	8008c66 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008c92:	9000      	str	r0, [sp, #0]
 8008c94:	4631      	mov	r1, r6
 8008c96:	4628      	mov	r0, r5
 8008c98:	f000 fb01 	bl	800929e <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008c9c:	4605      	mov	r5, r0
 8008c9e:	2800      	cmp	r0, #0
 8008ca0:	d0e1      	beq.n	8008c66 <osMessageQueueNew+0xe>
      if ((attr != NULL) && (attr->name != NULL)) {
 8008ca2:	6821      	ldr	r1, [r4, #0]
 8008ca4:	2900      	cmp	r1, #0
 8008ca6:	d0df      	beq.n	8008c68 <osMessageQueueNew+0x10>
        vQueueAddToRegistry (hQueue, attr->name);
 8008ca8:	4628      	mov	r0, r5
 8008caa:	f000 fdcd 	bl	8009848 <vQueueAddToRegistry>
 8008cae:	e7db      	b.n	8008c68 <osMessageQueueNew+0x10>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008cb0:	2a00      	cmp	r2, #0
 8008cb2:	d1d8      	bne.n	8008c66 <osMessageQueueNew+0xe>
 8008cb4:	6923      	ldr	r3, [r4, #16]
 8008cb6:	2b00      	cmp	r3, #0
 8008cb8:	d1d5      	bne.n	8008c66 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008cba:	6963      	ldr	r3, [r4, #20]
 8008cbc:	2b00      	cmp	r3, #0
 8008cbe:	d1d2      	bne.n	8008c66 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8008cc0:	4628      	mov	r0, r5
 8008cc2:	2200      	movs	r2, #0
 8008cc4:	4631      	mov	r1, r6
 8008cc6:	f000 fb15 	bl	80092f4 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008cca:	4605      	mov	r5, r0
 8008ccc:	2800      	cmp	r0, #0
 8008cce:	d0ca      	beq.n	8008c66 <osMessageQueueNew+0xe>
      if ((attr != NULL) && (attr->name != NULL)) {
 8008cd0:	2c00      	cmp	r4, #0
 8008cd2:	d1e6      	bne.n	8008ca2 <osMessageQueueNew+0x4a>
 8008cd4:	e7c8      	b.n	8008c68 <osMessageQueueNew+0x10>

08008cd6 <osMessageQueuePut>:
  Put a Message into a Queue or timeout if Queue is full.

  Limitations:
  - Message priority is ignored
*/
osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008cd6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008cd8:	461c      	mov	r4, r3
 8008cda:	4605      	mov	r5, r0
 8008cdc:	460e      	mov	r6, r1

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IRQ_Context() != 0U) {
 8008cde:	f7ff fe65 	bl	80089ac <IRQ_Context>
 8008ce2:	4603      	mov	r3, r0
 8008ce4:	b1d0      	cbz	r0, 8008d1c <osMessageQueuePut+0x46>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008ce6:	b33d      	cbz	r5, 8008d38 <osMessageQueuePut+0x62>
 8008ce8:	b336      	cbz	r6, 8008d38 <osMessageQueuePut+0x62>
 8008cea:	bb2c      	cbnz	r4, 8008d38 <osMessageQueuePut+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008cec:	4623      	mov	r3, r4
 8008cee:	4631      	mov	r1, r6
 8008cf0:	4628      	mov	r0, r5
 8008cf2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008cf4:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008cf6:	f000 fbd2 	bl	800949e <xQueueGenericSendFromISR>
 8008cfa:	2801      	cmp	r0, #1
 8008cfc:	d003      	beq.n	8008d06 <osMessageQueuePut+0x30>
        stat = osErrorResource;
 8008cfe:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008d02:	b002      	add	sp, #8
 8008d04:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008d06:	9b01      	ldr	r3, [sp, #4]
 8008d08:	b90b      	cbnz	r3, 8008d0e <osMessageQueuePut+0x38>
  stat = osOK;
 8008d0a:	2000      	movs	r0, #0
 8008d0c:	e7f9      	b.n	8008d02 <osMessageQueuePut+0x2c>
        portYIELD_FROM_ISR (yield);
 8008d0e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008d12:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008d16:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008d1a:	e7f6      	b.n	8008d0a <osMessageQueuePut+0x34>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008d1c:	b165      	cbz	r5, 8008d38 <osMessageQueuePut+0x62>
 8008d1e:	b15e      	cbz	r6, 8008d38 <osMessageQueuePut+0x62>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008d20:	4622      	mov	r2, r4
 8008d22:	4631      	mov	r1, r6
 8008d24:	4628      	mov	r0, r5
 8008d26:	f000 fb31 	bl	800938c <xQueueGenericSend>
 8008d2a:	2801      	cmp	r0, #1
 8008d2c:	d0ed      	beq.n	8008d0a <osMessageQueuePut+0x34>
        if (timeout != 0U) {
 8008d2e:	2c00      	cmp	r4, #0
 8008d30:	d0e5      	beq.n	8008cfe <osMessageQueuePut+0x28>
          stat = osErrorTimeout;
 8008d32:	f06f 0001 	mvn.w	r0, #1
 8008d36:	e7e4      	b.n	8008d02 <osMessageQueuePut+0x2c>
      stat = osErrorParameter;
 8008d38:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008d3c:	e7e1      	b.n	8008d02 <osMessageQueuePut+0x2c>

08008d3e <osMessageQueueGet>:
  Get a Message from a Queue or timeout if Queue is empty.

  Limitations:
  - Message priority is ignored
*/
osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008d3e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008d40:	4605      	mov	r5, r0
 8008d42:	460e      	mov	r6, r1
 8008d44:	461c      	mov	r4, r3

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IRQ_Context() != 0U) {
 8008d46:	f7ff fe31 	bl	80089ac <IRQ_Context>
 8008d4a:	b1c8      	cbz	r0, 8008d80 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008d4c:	b335      	cbz	r5, 8008d9c <osMessageQueueGet+0x5e>
 8008d4e:	b32e      	cbz	r6, 8008d9c <osMessageQueueGet+0x5e>
 8008d50:	bb24      	cbnz	r4, 8008d9c <osMessageQueueGet+0x5e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008d52:	4631      	mov	r1, r6
 8008d54:	4628      	mov	r0, r5
 8008d56:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008d58:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008d5a:	f000 fd37 	bl	80097cc <xQueueReceiveFromISR>
 8008d5e:	2801      	cmp	r0, #1
 8008d60:	d003      	beq.n	8008d6a <osMessageQueueGet+0x2c>
        stat = osErrorResource;
 8008d62:	f06f 0002 	mvn.w	r0, #2
    }
  }

  /* Return execution status */
  return (stat);
}
 8008d66:	b002      	add	sp, #8
 8008d68:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008d6a:	9b01      	ldr	r3, [sp, #4]
 8008d6c:	b90b      	cbnz	r3, 8008d72 <osMessageQueueGet+0x34>
  stat = osOK;
 8008d6e:	2000      	movs	r0, #0
 8008d70:	e7f9      	b.n	8008d66 <osMessageQueueGet+0x28>
        portYIELD_FROM_ISR (yield);
 8008d72:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008d76:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008d7a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008d7e:	e7f6      	b.n	8008d6e <osMessageQueueGet+0x30>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008d80:	b165      	cbz	r5, 8008d9c <osMessageQueueGet+0x5e>
 8008d82:	b15e      	cbz	r6, 8008d9c <osMessageQueueGet+0x5e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008d84:	4622      	mov	r2, r4
 8008d86:	4631      	mov	r1, r6
 8008d88:	4628      	mov	r0, r5
 8008d8a:	f000 fc0e 	bl	80095aa <xQueueReceive>
 8008d8e:	2801      	cmp	r0, #1
 8008d90:	d0ed      	beq.n	8008d6e <osMessageQueueGet+0x30>
        if (timeout != 0U) {
 8008d92:	2c00      	cmp	r4, #0
 8008d94:	d0e5      	beq.n	8008d62 <osMessageQueueGet+0x24>
          stat = osErrorTimeout;
 8008d96:	f06f 0001 	mvn.w	r0, #1
 8008d9a:	e7e4      	b.n	8008d66 <osMessageQueueGet+0x28>
      stat = osErrorParameter;
 8008d9c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008da0:	e7e1      	b.n	8008d66 <osMessageQueueGet+0x28>
	...

08008da4 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008da4:	4b03      	ldr	r3, [pc, #12]	@ (8008db4 <vApplicationGetIdleTaskMemory+0x10>)
 8008da6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008da8:	4b03      	ldr	r3, [pc, #12]	@ (8008db8 <vApplicationGetIdleTaskMemory+0x14>)
 8008daa:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008dac:	2380      	movs	r3, #128	@ 0x80
 8008dae:	6013      	str	r3, [r2, #0]
}
 8008db0:	4770      	bx	lr
 8008db2:	bf00      	nop
 8008db4:	2006ef90 	.word	0x2006ef90
 8008db8:	2006ed90 	.word	0x2006ed90

08008dbc <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008dbc:	4b03      	ldr	r3, [pc, #12]	@ (8008dcc <vApplicationGetTimerTaskMemory+0x10>)
 8008dbe:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008dc0:	4b03      	ldr	r3, [pc, #12]	@ (8008dd0 <vApplicationGetTimerTaskMemory+0x14>)
 8008dc2:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008dc4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8008dc8:	6013      	str	r3, [r2, #0]
}
 8008dca:	4770      	bx	lr
 8008dcc:	2006ed30 	.word	0x2006ed30
 8008dd0:	2006e930 	.word	0x2006e930

08008dd4 <vListInitialise>:
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008dd4:	f04f 32ff 	mov.w	r2, #4294967295
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008dd8:	f100 0308 	add.w	r3, r0, #8

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );     /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008ddc:	e9c0 2302 	strd	r2, r3, [r0, #8]
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008de0:	6043      	str	r3, [r0, #4]
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008de2:	6103      	str	r3, [r0, #16]

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008de4:	2300      	movs	r3, #0
 8008de6:	6003      	str	r3, [r0, #0]

    /* Write known values into the list if
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008de8:	4770      	bx	lr

08008dea <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
 8008dea:	2300      	movs	r3, #0
 8008dec:	6103      	str	r3, [r0, #16]

    /* Write known values into the list item if
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008dee:	4770      	bx	lr

08008df0 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
 8008df0:	b530      	push	{r4, r5, lr}
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008df2:	680c      	ldr	r4, [r1, #0]
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
 8008df4:	1c63      	adds	r3, r4, #1
 8008df6:	d10a      	bne.n	8008e0e <vListInsert+0x1e>
    {
        pxIterator = pxList->xListEnd.pxPrevious;
 8008df8:	6903      	ldr	r3, [r0, #16]
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
 8008dfa:	685a      	ldr	r2, [r3, #4]
 8008dfc:	604a      	str	r2, [r1, #4]
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008dfe:	6091      	str	r1, [r2, #8]
    pxNewListItem->pxPrevious = pxIterator;
 8008e00:	608b      	str	r3, [r1, #8]
    pxIterator->pxNext = pxNewListItem;
 8008e02:	6059      	str	r1, [r3, #4]

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;

    ( pxList->uxNumberOfItems )++;
 8008e04:	6803      	ldr	r3, [r0, #0]
    pxNewListItem->pxContainer = pxList;
 8008e06:	6108      	str	r0, [r1, #16]
    ( pxList->uxNumberOfItems )++;
 8008e08:	3301      	adds	r3, #1
 8008e0a:	6003      	str	r3, [r0, #0]
}
 8008e0c:	bd30      	pop	{r4, r5, pc}
        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008e0e:	f100 0208 	add.w	r2, r0, #8
 8008e12:	4613      	mov	r3, r2
 8008e14:	6852      	ldr	r2, [r2, #4]
 8008e16:	6815      	ldr	r5, [r2, #0]
 8008e18:	42a5      	cmp	r5, r4
 8008e1a:	d9fa      	bls.n	8008e12 <vListInsert+0x22>
 8008e1c:	e7ed      	b.n	8008dfa <vListInsert+0xa>

08008e1e <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
 * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
 8008e1e:	6903      	ldr	r3, [r0, #16]

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008e20:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8008e24:	608a      	str	r2, [r1, #8]
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008e26:	6051      	str	r1, [r2, #4]

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
 8008e28:	6859      	ldr	r1, [r3, #4]
 8008e2a:	4281      	cmp	r1, r0
    {
        pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008e2c:	bf08      	it	eq
 8008e2e:	605a      	streq	r2, [r3, #4]
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
 8008e30:	2200      	movs	r2, #0
 8008e32:	6102      	str	r2, [r0, #16]
    ( pxList->uxNumberOfItems )--;
 8008e34:	681a      	ldr	r2, [r3, #0]
 8008e36:	3a01      	subs	r2, #1
 8008e38:	601a      	str	r2, [r3, #0]

    return pxList->uxNumberOfItems;
 8008e3a:	6818      	ldr	r0, [r3, #0]
}
 8008e3c:	4770      	bx	lr
	...

08008e40 <prvTaskExitError>:
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
    volatile uint32_t ulDummy = 0UL;
 8008e40:	2300      	movs	r3, #0
{
 8008e42:	b507      	push	{r0, r1, r2, lr}
    volatile uint32_t ulDummy = 0UL;
 8008e44:	9301      	str	r3, [sp, #4]
    /* A function that implements a task must not exit or attempt to return to
     * its caller as there is nothing to return to. If a task wants to exit it
     * should instead call vTaskDelete( NULL ). Artificially force an assert()
     * to be triggered if configASSERT() is defined, then stop here so
     * application writers can catch the error. */
    configASSERT( ulCriticalNesting == ~0UL );
 8008e46:	4b07      	ldr	r3, [pc, #28]	@ (8008e64 <prvTaskExitError+0x24>)
 8008e48:	681b      	ldr	r3, [r3, #0]
 8008e4a:	3301      	adds	r3, #1
 8008e4c:	d002      	beq.n	8008e54 <prvTaskExitError+0x14>
 8008e4e:	f000 f901 	bl	8009054 <ulSetInterruptMask>
 8008e52:	e7fe      	b.n	8008e52 <prvTaskExitError+0x12>
    portDISABLE_INTERRUPTS();
 8008e54:	f000 f8fe 	bl	8009054 <ulSetInterruptMask>

    while( ulDummy == 0 )
 8008e58:	9b01      	ldr	r3, [sp, #4]
 8008e5a:	2b00      	cmp	r3, #0
 8008e5c:	d0fc      	beq.n	8008e58 <prvTaskExitError+0x18>
         * warnings about code appearing after this function is called - making
         * ulDummy volatile makes the compiler think the function could return
         * and therefore not output an 'unreachable code' warning for code that
         * appears after it. */
    }
}
 8008e5e:	b003      	add	sp, #12
 8008e60:	f85d fb04 	ldr.w	pc, [sp], #4
 8008e64:	20000058 	.word	0x20000058

08008e68 <vPortSetupTimerInterrupt>:
    portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008e68:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8008e6c:	2300      	movs	r3, #0
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008e6e:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
    portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008e72:	6113      	str	r3, [r2, #16]
    portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008e74:	6193      	str	r3, [r2, #24]
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008e76:	4b04      	ldr	r3, [pc, #16]	@ (8008e88 <vPortSetupTimerInterrupt+0x20>)
 8008e78:	681b      	ldr	r3, [r3, #0]
 8008e7a:	fbb3 f3f1 	udiv	r3, r3, r1
 8008e7e:	3b01      	subs	r3, #1
 8008e80:	6153      	str	r3, [r2, #20]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
 8008e82:	2307      	movs	r3, #7
 8008e84:	6113      	str	r3, [r2, #16]
}
 8008e86:	4770      	bx	lr
 8008e88:	2000004c 	.word	0x2000004c

08008e8c <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void ) /* PRIVILEGED_FUNCTION */
{
    /* Set a PendSV to request a context switch. */
    portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008e8c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008e90:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008e94:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
 8008e98:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
 8008e9c:	f3bf 8f6f 	isb	sy
}
 8008ea0:	4770      	bx	lr
	...

08008ea4 <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void ) /* PRIVILEGED_FUNCTION */
{
 8008ea4:	b508      	push	{r3, lr}
    portDISABLE_INTERRUPTS();
 8008ea6:	f000 f8d5 	bl	8009054 <ulSetInterruptMask>
    ulCriticalNesting++;
 8008eaa:	4a04      	ldr	r2, [pc, #16]	@ (8008ebc <vPortEnterCritical+0x18>)
 8008eac:	6813      	ldr	r3, [r2, #0]
 8008eae:	3301      	adds	r3, #1
 8008eb0:	6013      	str	r3, [r2, #0]

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
 8008eb2:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
 8008eb6:	f3bf 8f6f 	isb	sy
}
 8008eba:	bd08      	pop	{r3, pc}
 8008ebc:	20000058 	.word	0x20000058

08008ec0 <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void ) /* PRIVILEGED_FUNCTION */
{
 8008ec0:	b508      	push	{r3, lr}
    configASSERT( ulCriticalNesting );
 8008ec2:	4b08      	ldr	r3, [pc, #32]	@ (8008ee4 <vPortExitCritical+0x24>)
 8008ec4:	681a      	ldr	r2, [r3, #0]
 8008ec6:	b912      	cbnz	r2, 8008ece <vPortExitCritical+0xe>
 8008ec8:	f000 f8c4 	bl	8009054 <ulSetInterruptMask>
 8008ecc:	e7fe      	b.n	8008ecc <vPortExitCritical+0xc>
    ulCriticalNesting--;
 8008ece:	681a      	ldr	r2, [r3, #0]
 8008ed0:	3a01      	subs	r2, #1
 8008ed2:	601a      	str	r2, [r3, #0]

    if( ulCriticalNesting == 0 )
 8008ed4:	6818      	ldr	r0, [r3, #0]
 8008ed6:	b918      	cbnz	r0, 8008ee0 <vPortExitCritical+0x20>
    {
        portENABLE_INTERRUPTS();
    }
}
 8008ed8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        portENABLE_INTERRUPTS();
 8008edc:	f000 b8c5 	b.w	800906a <vClearInterruptMask>
}
 8008ee0:	bd08      	pop	{r3, pc}
 8008ee2:	bf00      	nop
 8008ee4:	20000058 	.word	0x20000058

08008ee8 <xPortSysTickHandler>:
/*-----------------------------------------------------------*/

void SysTick_Handler( void ) /* PRIVILEGED_FUNCTION */
{
 8008ee8:	b510      	push	{r4, lr}
    uint32_t ulPreviousMask;

    ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
 8008eea:	f000 f8b3 	bl	8009054 <ulSetInterruptMask>
 8008eee:	4604      	mov	r4, r0
    {
        /* Increment the RTOS tick. */
        if( xTaskIncrementTick() != pdFALSE )
 8008ef0:	f000 fee2 	bl	8009cb8 <xTaskIncrementTick>
 8008ef4:	b128      	cbz	r0, 8008f02 <xPortSysTickHandler+0x1a>
        {
            /* Pend a context switch. */
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008ef6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008efa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008efe:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 8008f02:	4620      	mov	r0, r4
}
 8008f04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 8008f08:	f000 b8af 	b.w	800906a <vClearInterruptMask>

08008f0c <vPortSVCHandler_C>:
/*-----------------------------------------------------------*/

void vPortSVCHandler_C( uint32_t * pulCallerStackAddress ) /* PRIVILEGED_FUNCTION portDONT_DISCARD */
{
 8008f0c:	b508      	push	{r3, lr}
    uint8_t ucSVCNumber;

    /* Register are stored on the stack in the following order - R0, R1, R2, R3,
     * R12, LR, PC, xPSR. */
    ulPC = pulCallerStackAddress[ 6 ];
    ucSVCNumber = ( ( uint8_t * ) ulPC )[ -2 ];
 8008f0e:	6983      	ldr	r3, [r0, #24]

    switch( ucSVCNumber )
 8008f10:	f813 3c02 	ldrb.w	r3, [r3, #-2]
 8008f14:	2b02      	cmp	r3, #2
 8008f16:	d111      	bne.n	8008f3c <vPortSVCHandler_C+0x30>
        *( portCPACR ) |= ( ( portCPACR_CP10_VALUE << portCPACR_CP10_POS ) |
 8008f18:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008f1c:	f8d3 2d88 	ldr.w	r2, [r3, #3464]	@ 0xd88
 8008f20:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8008f24:	f8c3 2d88 	str.w	r2, [r3, #3464]	@ 0xd88
        *( portFPCCR ) |= ( portFPCCR_ASPEN_MASK | portFPCCR_LSPEN_MASK );
 8008f28:	f8d3 2f34 	ldr.w	r2, [r3, #3892]	@ 0xf34
 8008f2c:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
 8008f30:	f8c3 2f34 	str.w	r2, [r3, #3892]	@ 0xf34

        default:
            /* Incorrect SVC call. */
            configASSERT( pdFALSE );
    }
}
 8008f34:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            vRestoreContextOfFirstTask();
 8008f38:	f000 b85a 	b.w	8008ff0 <vRestoreContextOfFirstTask>
            configASSERT( pdFALSE );
 8008f3c:	f000 f88a 	bl	8009054 <ulSetInterruptMask>
 8008f40:	e7fe      	b.n	8008f40 <vPortSVCHandler_C+0x34>
	...

08008f44 <pxPortInitialiseStack>:
                                         StackType_t * pxEndOfStack,
                                         TaskFunction_t pxCode,
                                         void * pvParameters ) /* PRIVILEGED_FUNCTION */
#endif /* configENABLE_MPU */
/* *INDENT-ON* */
{
 8008f44:	b510      	push	{r4, lr}
            #endif /* configENABLE_TRUSTZONE */
        }
    #else /* portPRELOAD_REGISTERS */
        {
            pxTopOfStack--;                                          /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
            *pxTopOfStack = portINITIAL_XPSR;                        /* xPSR */
 8008f46:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxCode;                  /* PC */
 8008f4a:	e940 2402 	strd	r2, r4, [r0, #-8]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR */
 8008f4e:	4a18      	ldr	r2, [pc, #96]	@ (8008fb0 <pxPortInitialiseStack+0x6c>)
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x12121212UL;            /* R12 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 8008f50:	f04f 3412 	mov.w	r4, #303174162	@ 0x12121212
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR */
 8008f54:	f840 2c0c 	str.w	r2, [r0, #-12]
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 8008f58:	f04f 3203 	mov.w	r2, #50529027	@ 0x3030303
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x02020202UL;            /* R2 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 8008f5c:	f04f 3c02 	mov.w	ip, #33686018	@ 0x2020202
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3 */
 8008f60:	e940 2405 	strd	r2, r4, [r0, #-20]
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 8008f64:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pvParameters;            /* R0 */
 8008f68:	f840 3c20 	str.w	r3, [r0, #-32]
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1 */
 8008f6c:	e940 2c07 	strd	r2, ip, [r0, #-28]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x11111111UL;            /* R11 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10 */
 8008f70:	f04f 3310 	mov.w	r3, #269488144	@ 0x10101010
 8008f74:	f04f 3211 	mov.w	r2, #286331153	@ 0x11111111
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x09090909UL;            /* R09 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8008f78:	f04f 3409 	mov.w	r4, #151587081	@ 0x9090909
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10 */
 8008f7c:	e940 320a 	strd	r3, r2, [r0, #-40]	@ 0x28
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8008f80:	f04f 3308 	mov.w	r3, #134744072	@ 0x8080808
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x07070707UL;            /* R07 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8008f84:	f04f 3c07 	mov.w	ip, #117901063	@ 0x7070707
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08 */
 8008f88:	e940 340c 	strd	r3, r4, [r0, #-48]	@ 0x30
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8008f8c:	f04f 3306 	mov.w	r3, #101058054	@ 0x6060606
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x05050505UL;            /* R05 */
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04 */
 8008f90:	f04f 3205 	mov.w	r2, #84215045	@ 0x5050505
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06 */
 8008f94:	e940 3c0e 	strd	r3, ip, [r0, #-56]	@ 0x38
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04 */
 8008f98:	f04f 3304 	mov.w	r3, #67372036	@ 0x4040404
 8008f9c:	e940 3210 	strd	r3, r2, [r0, #-64]	@ 0x40
            pxTopOfStack--;
            *pxTopOfStack = portINITIAL_EXC_RETURN;                  /* EXC_RETURN */
 8008fa0:	f06f 0343 	mvn.w	r3, #67	@ 0x43
 8008fa4:	f840 3c44 	str.w	r3, [r0, #-68]
                    }
                }
            #endif /* configENABLE_MPU */

            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxEndOfStack; /* Slot used to hold this task's PSPLIM value. */
 8008fa8:	f840 1d48 	str.w	r1, [r0, #-72]!
            #endif /* configENABLE_TRUSTZONE */
        }
    #endif /* portPRELOAD_REGISTERS */

    return pxTopOfStack;
}
 8008fac:	bd10      	pop	{r4, pc}
 8008fae:	bf00      	nop
 8008fb0:	08008e41 	.word	0x08008e41

08008fb4 <xPortStartScheduler>:
/*-----------------------------------------------------------*/

BaseType_t xPortStartScheduler( void ) /* PRIVILEGED_FUNCTION */
{
    /* Make PendSV, CallSV and SysTick the same priority as the kernel. */
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 8008fb4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8008fb8:	b510      	push	{r4, lr}
    /* Start the timer that generates the tick ISR. Interrupts are disabled
     * here already. */
    vPortSetupTimerInterrupt();

    /* Initialize the critical nesting count ready for the first task. */
    ulCriticalNesting = 0;
 8008fba:	2400      	movs	r4, #0
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 8008fbc:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	@ 0xd20
 8008fc0:	f442 027f 	orr.w	r2, r2, #16711680	@ 0xff0000
 8008fc4:	f8c3 2d20 	str.w	r2, [r3, #3360]	@ 0xd20
    portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 8008fc8:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	@ 0xd20
 8008fcc:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8008fd0:	f8c3 2d20 	str.w	r2, [r3, #3360]	@ 0xd20
    vPortSetupTimerInterrupt();
 8008fd4:	f7ff ff48 	bl	8008e68 <vPortSetupTimerInterrupt>
    ulCriticalNesting = 0;
 8008fd8:	4b04      	ldr	r3, [pc, #16]	@ (8008fec <xPortStartScheduler+0x38>)
 8008fda:	601c      	str	r4, [r3, #0]

    /* Start the first task. */
    vStartFirstTask();
 8008fdc:	f000 f828 	bl	8009030 <vStartFirstTask>
     * exit error function to prevent compiler warnings about a static function
     * not being called in the case that the application writer overrides this
     * functionality by defining configTASK_RETURN_ADDRESS. Call
     * vTaskSwitchContext() so link time optimization does not remove the
     * symbol. */
    vTaskSwitchContext();
 8008fe0:	f001 f820 	bl	800a024 <vTaskSwitchContext>
    prvTaskExitError();
 8008fe4:	f7ff ff2c 	bl	8008e40 <prvTaskExitError>

    /* Should not get here. */
    return 0;
}
 8008fe8:	4620      	mov	r0, r4
 8008fea:	bd10      	pop	{r4, pc}
 8008fec:	20000058 	.word	0x20000058

08008ff0 <vRestoreContextOfFirstTask>:
 * header files. */
#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE

void vRestoreContextOfFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8008ff0:	4a0b      	ldr	r2, [pc, #44]	@ (8009020 <pxCurrentTCBConst2>)
 8008ff2:	6811      	ldr	r1, [r2, #0]
 8008ff4:	6808      	ldr	r0, [r1, #0]
 8008ff6:	c806      	ldmia	r0!, {r1, r2}
 8008ff8:	f381 880b 	msr	PSPLIM, r1
 8008ffc:	2102      	movs	r1, #2
 8008ffe:	f381 8814 	msr	CONTROL, r1
 8009002:	3020      	adds	r0, #32
 8009004:	f380 8809 	msr	PSP, r0
 8009008:	f3bf 8f6f 	isb	sy
 800900c:	f04f 0000 	mov.w	r0, #0
 8009010:	f380 8811 	msr	BASEPRI, r0
 8009014:	4710      	bx	r2
 8009016:	bf00      	nop
 8009018:	f3af 8000 	nop.w
 800901c:	f3af 8000 	nop.w

08009020 <pxCurrentTCBConst2>:
 8009020:	2006f52c 	.word	0x2006f52c
	...

08009030 <vStartFirstTask>:
}
/*-----------------------------------------------------------*/

void vStartFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009030:	4807      	ldr	r0, [pc, #28]	@ (8009050 <xVTORConst>)
 8009032:	6800      	ldr	r0, [r0, #0]
 8009034:	6800      	ldr	r0, [r0, #0]
 8009036:	f380 8808 	msr	MSP, r0
 800903a:	b662      	cpsie	i
 800903c:	b661      	cpsie	f
 800903e:	f3bf 8f4f 	dsb	sy
 8009042:	f3bf 8f6f 	isb	sy
 8009046:	df02      	svc	2
 8009048:	bf00      	nop
 800904a:	bf00      	nop
 800904c:	f3af 8000 	nop.w

08009050 <xVTORConst>:
 8009050:	e000ed08 	.word	0xe000ed08

08009054 <ulSetInterruptMask>:
}
/*-----------------------------------------------------------*/

uint32_t ulSetInterruptMask( void ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009054:	f3ef 8011 	mrs	r0, BASEPRI
 8009058:	f04f 0150 	mov.w	r1, #80	@ 0x50
 800905c:	f381 8811 	msr	BASEPRI, r1
 8009060:	f3bf 8f4f 	dsb	sy
 8009064:	f3bf 8f6f 	isb	sy
 8009068:	4770      	bx	lr

0800906a <vClearInterruptMask>:
}
/*-----------------------------------------------------------*/

void vClearInterruptMask( __attribute__( ( unused ) ) uint32_t ulMask ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 800906a:	f380 8811 	msr	BASEPRI, r0
 800906e:	f3bf 8f4f 	dsb	sy
 8009072:	f3bf 8f6f 	isb	sy
 8009076:	4770      	bx	lr
	...

08009080 <PendSV_Handler>:
}
/*-----------------------------------------------------------*/

void PendSV_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 8009080:	f3ef 8009 	mrs	r0, PSP
 8009084:	f01e 0f10 	tst.w	lr, #16
 8009088:	bf08      	it	eq
 800908a:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800908e:	f3ef 820b 	mrs	r2, PSPLIM
 8009092:	4673      	mov	r3, lr
 8009094:	e920 0ffc 	stmdb	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8009098:	4a11      	ldr	r2, [pc, #68]	@ (80090e0 <pxCurrentTCBConst>)
 800909a:	6811      	ldr	r1, [r2, #0]
 800909c:	6008      	str	r0, [r1, #0]
 800909e:	f04f 0050 	mov.w	r0, #80	@ 0x50
 80090a2:	f380 8811 	msr	BASEPRI, r0
 80090a6:	f3bf 8f4f 	dsb	sy
 80090aa:	f3bf 8f6f 	isb	sy
 80090ae:	f000 ffb9 	bl	800a024 <vTaskSwitchContext>
 80090b2:	f04f 0000 	mov.w	r0, #0
 80090b6:	f380 8811 	msr	BASEPRI, r0
 80090ba:	4a09      	ldr	r2, [pc, #36]	@ (80090e0 <pxCurrentTCBConst>)
 80090bc:	6811      	ldr	r1, [r2, #0]
 80090be:	6808      	ldr	r0, [r1, #0]
 80090c0:	e8b0 0ffc 	ldmia.w	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 80090c4:	f013 0f10 	tst.w	r3, #16
 80090c8:	bf08      	it	eq
 80090ca:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80090ce:	f382 880b 	msr	PSPLIM, r2
 80090d2:	f380 8809 	msr	PSP, r0
 80090d6:	4718      	bx	r3
 80090d8:	f3af 8000 	nop.w
 80090dc:	f3af 8000 	nop.w

080090e0 <pxCurrentTCBConst>:
 80090e0:	2006f52c 	.word	0x2006f52c
	...

080090f0 <SVC_Handler>:
}
/*-----------------------------------------------------------*/

void SVC_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
 80090f0:	f01e 0f04 	tst.w	lr, #4
 80090f4:	bf0c      	ite	eq
 80090f6:	f3ef 8008 	mrseq	r0, MSP
 80090fa:	f3ef 8009 	mrsne	r0, PSP
 80090fe:	4904      	ldr	r1, [pc, #16]	@ (8009110 <svchandler_address_const>)
 8009100:	4708      	bx	r1
 8009102:	bf00      	nop
 8009104:	f3af 8000 	nop.w
 8009108:	f3af 8000 	nop.w
 800910c:	f3af 8000 	nop.w

08009110 <svchandler_address_const>:
 8009110:	08008f0d 	.word	0x08008f0d

08009114 <prvIsQueueEmpty>:
    taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
 8009114:	b510      	push	{r4, lr}
 8009116:	4604      	mov	r4, r0
    BaseType_t xReturn;

    taskENTER_CRITICAL();
 8009118:	f7ff fec4 	bl	8008ea4 <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 800911c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
 800911e:	f7ff fecf 	bl	8008ec0 <vPortExitCritical>

    return xReturn;
}
 8009122:	fab4 f084 	clz	r0, r4
 8009126:	0940      	lsrs	r0, r0, #5
 8009128:	bd10      	pop	{r4, pc}

0800912a <prvCopyDataToQueue>:
{
 800912a:	b570      	push	{r4, r5, r6, lr}
 800912c:	4616      	mov	r6, r2
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800912e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
 8009130:	4604      	mov	r4, r0
    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009132:	6b85      	ldr	r5, [r0, #56]	@ 0x38
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8009134:	b942      	cbnz	r2, 8009148 <prvCopyDataToQueue+0x1e>
                if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009136:	6806      	ldr	r6, [r0, #0]
 8009138:	b99e      	cbnz	r6, 8009162 <prvCopyDataToQueue+0x38>
                    xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800913a:	6880      	ldr	r0, [r0, #8]
 800913c:	f001 f8e2 	bl	800a304 <xTaskPriorityDisinherit>
                    pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8009140:	60a6      	str	r6, [r4, #8]
    pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009142:	3501      	adds	r5, #1
 8009144:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8009146:	bd70      	pop	{r4, r5, r6, pc}
    else if( xPosition == queueSEND_TO_BACK )
 8009148:	b96e      	cbnz	r6, 8009166 <prvCopyDataToQueue+0x3c>
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800914a:	6840      	ldr	r0, [r0, #4]
 800914c:	f029 fcbd 	bl	8032aca <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                       /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009150:	6863      	ldr	r3, [r4, #4]
 8009152:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8009154:	4413      	add	r3, r2
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                             /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009156:	68a2      	ldr	r2, [r4, #8]
        pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                       /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009158:	6063      	str	r3, [r4, #4]
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                             /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800915a:	4293      	cmp	r3, r2
            pxQueue->pcWriteTo = pxQueue->pcHead;
 800915c:	bf24      	itt	cs
 800915e:	6823      	ldrcs	r3, [r4, #0]
 8009160:	6063      	strcs	r3, [r4, #4]
    BaseType_t xReturn = pdFALSE;
 8009162:	2000      	movs	r0, #0
 8009164:	e7ed      	b.n	8009142 <prvCopyDataToQueue+0x18>
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8009166:	68c0      	ldr	r0, [r0, #12]
 8009168:	f029 fcaf 	bl	8032aca <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800916c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800916e:	68e3      	ldr	r3, [r4, #12]
 8009170:	4251      	negs	r1, r2
 8009172:	1a9b      	subs	r3, r3, r2
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009174:	6822      	ldr	r2, [r4, #0]
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009176:	60e3      	str	r3, [r4, #12]
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009178:	4293      	cmp	r3, r2
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800917a:	bf3e      	ittt	cc
 800917c:	68a3      	ldrcc	r3, [r4, #8]
 800917e:	185b      	addcc	r3, r3, r1
 8009180:	60e3      	strcc	r3, [r4, #12]
        if( xPosition == queueOVERWRITE )
 8009182:	2e02      	cmp	r6, #2
 8009184:	d1ed      	bne.n	8009162 <prvCopyDataToQueue+0x38>
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009186:	b10d      	cbz	r5, 800918c <prvCopyDataToQueue+0x62>
                --uxMessagesWaiting;
 8009188:	3d01      	subs	r5, #1
 800918a:	e7ea      	b.n	8009162 <prvCopyDataToQueue+0x38>
    BaseType_t xReturn = pdFALSE;
 800918c:	4628      	mov	r0, r5
 800918e:	e7d8      	b.n	8009142 <prvCopyDataToQueue+0x18>

08009190 <prvCopyDataFromQueue>:
{
 8009190:	4603      	mov	r3, r0
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009192:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8009194:	4608      	mov	r0, r1
 8009196:	b410      	push	{r4}
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009198:	b16a      	cbz	r2, 80091b6 <prvCopyDataFromQueue+0x26>
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800919a:	68dc      	ldr	r4, [r3, #12]
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800919c:	6899      	ldr	r1, [r3, #8]
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800919e:	4414      	add	r4, r2
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80091a0:	428c      	cmp	r4, r1
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80091a2:	bf28      	it	cs
 80091a4:	6819      	ldrcs	r1, [r3, #0]
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;           /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80091a6:	60dc      	str	r4, [r3, #12]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80091a8:	bf28      	it	cs
 80091aa:	60d9      	strcs	r1, [r3, #12]
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80091ac:	68d9      	ldr	r1, [r3, #12]
}
 80091ae:	f85d 4b04 	ldr.w	r4, [sp], #4
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80091b2:	f029 bc8a 	b.w	8032aca <memcpy>
}
 80091b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80091ba:	4770      	bx	lr

080091bc <prvUnlockQueue>:
{
 80091bc:	b570      	push	{r4, r5, r6, lr}
 80091be:	4604      	mov	r4, r0
    taskENTER_CRITICAL();
 80091c0:	f7ff fe70 	bl	8008ea4 <vPortEnterCritical>
        int8_t cTxLock = pxQueue->cTxLock;
 80091c4:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80091c8:	f104 0624 	add.w	r6, r4, #36	@ 0x24
        int8_t cTxLock = pxQueue->cTxLock;
 80091cc:	b26d      	sxtb	r5, r5
        while( cTxLock > queueLOCKED_UNMODIFIED )
 80091ce:	2d00      	cmp	r5, #0
 80091d0:	dc14      	bgt.n	80091fc <prvUnlockQueue+0x40>
        pxQueue->cTxLock = queueUNLOCKED;
 80091d2:	23ff      	movs	r3, #255	@ 0xff
 80091d4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
    taskEXIT_CRITICAL();
 80091d8:	f7ff fe72 	bl	8008ec0 <vPortExitCritical>
    taskENTER_CRITICAL();
 80091dc:	f7ff fe62 	bl	8008ea4 <vPortEnterCritical>
        int8_t cRxLock = pxQueue->cRxLock;
 80091e0:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80091e4:	f104 0610 	add.w	r6, r4, #16
        int8_t cRxLock = pxQueue->cRxLock;
 80091e8:	b26d      	sxtb	r5, r5
        while( cRxLock > queueLOCKED_UNMODIFIED )
 80091ea:	2d00      	cmp	r5, #0
 80091ec:	dc12      	bgt.n	8009214 <prvUnlockQueue+0x58>
        pxQueue->cRxLock = queueUNLOCKED;
 80091ee:	23ff      	movs	r3, #255	@ 0xff
 80091f0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 80091f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    taskEXIT_CRITICAL();
 80091f8:	f7ff be62 	b.w	8008ec0 <vPortExitCritical>
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80091fc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80091fe:	2b00      	cmp	r3, #0
 8009200:	d0e7      	beq.n	80091d2 <prvUnlockQueue+0x16>
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009202:	4630      	mov	r0, r6
 8009204:	f000 ff88 	bl	800a118 <xTaskRemoveFromEventList>
 8009208:	b108      	cbz	r0, 800920e <prvUnlockQueue+0x52>
                            vTaskMissedYield();
 800920a:	f001 f81f 	bl	800a24c <vTaskMissedYield>
            --cTxLock;
 800920e:	3d01      	subs	r5, #1
 8009210:	b26d      	sxtb	r5, r5
 8009212:	e7dc      	b.n	80091ce <prvUnlockQueue+0x12>
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009214:	6923      	ldr	r3, [r4, #16]
 8009216:	2b00      	cmp	r3, #0
 8009218:	d0e9      	beq.n	80091ee <prvUnlockQueue+0x32>
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800921a:	4630      	mov	r0, r6
 800921c:	f000 ff7c 	bl	800a118 <xTaskRemoveFromEventList>
 8009220:	b108      	cbz	r0, 8009226 <prvUnlockQueue+0x6a>
                    vTaskMissedYield();
 8009222:	f001 f813 	bl	800a24c <vTaskMissedYield>
                --cRxLock;
 8009226:	3d01      	subs	r5, #1
 8009228:	b26d      	sxtb	r5, r5
 800922a:	e7de      	b.n	80091ea <prvUnlockQueue+0x2e>

0800922c <xQueueGenericReset>:
{
 800922c:	b570      	push	{r4, r5, r6, lr}
 800922e:	460e      	mov	r6, r1
    configASSERT( pxQueue );
 8009230:	4604      	mov	r4, r0
 8009232:	b910      	cbnz	r0, 800923a <xQueueGenericReset+0xe>
 8009234:	f7ff ff0e 	bl	8009054 <ulSetInterruptMask>
 8009238:	e7fe      	b.n	8009238 <xQueueGenericReset+0xc>
        ( pxQueue->uxLength >= 1U ) &&
 800923a:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
    if( ( pxQueue != NULL ) &&
 800923c:	b365      	cbz	r5, 8009298 <xQueueGenericReset+0x6c>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
 800923e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009240:	fba3 3505 	umull	r3, r5, r3, r5
 8009244:	bb45      	cbnz	r5, 8009298 <xQueueGenericReset+0x6c>
        taskENTER_CRITICAL();
 8009246:	f7ff fe2d 	bl	8008ea4 <vPortEnterCritical>
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800924a:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 800924e:	434b      	muls	r3, r1
 8009250:	6822      	ldr	r2, [r4, #0]
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8009252:	63a5      	str	r5, [r4, #56]	@ 0x38
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009254:	18d0      	adds	r0, r2, r3
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009256:	1a5b      	subs	r3, r3, r1
            pxQueue->pcWriteTo = pxQueue->pcHead;
 8009258:	6062      	str	r2, [r4, #4]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800925a:	441a      	add	r2, r3
            pxQueue->cRxLock = queueUNLOCKED;
 800925c:	23ff      	movs	r3, #255	@ 0xff
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800925e:	60a0      	str	r0, [r4, #8]
            pxQueue->cRxLock = queueUNLOCKED;
 8009260:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009264:	60e2      	str	r2, [r4, #12]
            pxQueue->cTxLock = queueUNLOCKED;
 8009266:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
            if( xNewQueue == pdFALSE )
 800926a:	b966      	cbnz	r6, 8009286 <xQueueGenericReset+0x5a>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800926c:	6923      	ldr	r3, [r4, #16]
 800926e:	b133      	cbz	r3, 800927e <xQueueGenericReset+0x52>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009270:	f104 0010 	add.w	r0, r4, #16
 8009274:	f000 ff50 	bl	800a118 <xTaskRemoveFromEventList>
 8009278:	b108      	cbz	r0, 800927e <xQueueGenericReset+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
 800927a:	f7ff fe07 	bl	8008e8c <vPortYield>
        taskEXIT_CRITICAL();
 800927e:	f7ff fe1f 	bl	8008ec0 <vPortExitCritical>
}
 8009282:	2001      	movs	r0, #1
 8009284:	bd70      	pop	{r4, r5, r6, pc}
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009286:	f104 0010 	add.w	r0, r4, #16
 800928a:	f7ff fda3 	bl	8008dd4 <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800928e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009292:	f7ff fd9f 	bl	8008dd4 <vListInitialise>
 8009296:	e7f2      	b.n	800927e <xQueueGenericReset+0x52>
    configASSERT( xReturn != pdFAIL );
 8009298:	f7ff fedc 	bl	8009054 <ulSetInterruptMask>
 800929c:	e7fe      	b.n	800929c <xQueueGenericReset+0x70>

0800929e <xQueueGenericCreateStatic>:
    {
 800929e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80092a0:	460d      	mov	r5, r1
        configASSERT( pxStaticQueue );
 80092a2:	461c      	mov	r4, r3
 80092a4:	b913      	cbnz	r3, 80092ac <xQueueGenericCreateStatic+0xe>
 80092a6:	f7ff fed5 	bl	8009054 <ulSetInterruptMask>
 80092aa:	e7fe      	b.n	80092aa <xQueueGenericCreateStatic+0xc>
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 80092ac:	b108      	cbz	r0, 80092b2 <xQueueGenericCreateStatic+0x14>
            ( pxStaticQueue != NULL ) &&
 80092ae:	b11a      	cbz	r2, 80092b8 <xQueueGenericCreateStatic+0x1a>
            ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) ) &&
 80092b0:	b921      	cbnz	r1, 80092bc <xQueueGenericCreateStatic+0x1e>
            configASSERT( pxNewQueue );
 80092b2:	f7ff fecf 	bl	8009054 <ulSetInterruptMask>
 80092b6:	e7fe      	b.n	80092b6 <xQueueGenericCreateStatic+0x18>
            ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) ) )
 80092b8:	2900      	cmp	r1, #0
 80092ba:	d1fa      	bne.n	80092b2 <xQueueGenericCreateStatic+0x14>
                    volatile size_t xSize = sizeof( StaticQueue_t );
 80092bc:	2350      	movs	r3, #80	@ 0x50
 80092be:	9301      	str	r3, [sp, #4]
                    configASSERT( xSize == sizeof( Queue_t ) ); /* LCOV_EXCL_BR_LINE */
 80092c0:	9b01      	ldr	r3, [sp, #4]
 80092c2:	2b50      	cmp	r3, #80	@ 0x50
 80092c4:	d002      	beq.n	80092cc <xQueueGenericCreateStatic+0x2e>
 80092c6:	f7ff fec5 	bl	8009054 <ulSetInterruptMask>
 80092ca:	e7fe      	b.n	80092ca <xQueueGenericCreateStatic+0x2c>
                    pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80092cc:	2101      	movs	r1, #1
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80092ce:	2d00      	cmp	r5, #0
 80092d0:	bf08      	it	eq
 80092d2:	4622      	moveq	r2, r4
    pxNewQueue->uxItemSize = uxItemSize;
 80092d4:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
                    pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80092d8:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80092dc:	4620      	mov	r0, r4
 80092de:	6022      	str	r2, [r4, #0]
                    ( void ) xSize;                             /* Keeps lint quiet when configASSERT() is not defined. */
 80092e0:	9b01      	ldr	r3, [sp, #4]
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80092e2:	f7ff ffa3 	bl	800922c <xQueueGenericReset>
    }
 80092e6:	4620      	mov	r0, r4
            pxNewQueue->ucQueueType = ucQueueType;
 80092e8:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80092ec:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
    }
 80092f0:	b003      	add	sp, #12
 80092f2:	bd30      	pop	{r4, r5, pc}

080092f4 <xQueueGenericCreate>:
    {
 80092f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80092f8:	460d      	mov	r5, r1
 80092fa:	4617      	mov	r7, r2
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 80092fc:	4606      	mov	r6, r0
 80092fe:	b300      	cbz	r0, 8009342 <xQueueGenericCreate+0x4e>
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
 8009300:	fba1 3800 	umull	r3, r8, r1, r0
 8009304:	f1b8 0f00 	cmp.w	r8, #0
 8009308:	d11b      	bne.n	8009342 <xQueueGenericCreate+0x4e>
            ( ( SIZE_MAX - sizeof( Queue_t ) ) >= ( uxQueueLength * uxItemSize ) ) )
 800930a:	4348      	muls	r0, r1
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
 800930c:	f110 0f51 	cmn.w	r0, #81	@ 0x51
 8009310:	d817      	bhi.n	8009342 <xQueueGenericCreate+0x4e>
            pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009312:	3050      	adds	r0, #80	@ 0x50
 8009314:	f001 fa30 	bl	800a778 <pvPortMalloc>
            if( pxNewQueue != NULL )
 8009318:	4604      	mov	r4, r0
 800931a:	b168      	cbz	r0, 8009338 <xQueueGenericCreate+0x44>
                        pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800931c:	f880 8046 	strb.w	r8, [r0, #70]	@ 0x46
    if( uxItemSize == ( UBaseType_t ) 0 )
 8009320:	b16d      	cbz	r5, 800933e <xQueueGenericCreate+0x4a>
                pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009322:	f100 0350 	add.w	r3, r0, #80	@ 0x50
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009326:	2101      	movs	r1, #1
 8009328:	4620      	mov	r0, r4
    pxNewQueue->uxItemSize = uxItemSize;
 800932a:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800932e:	6023      	str	r3, [r4, #0]
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009330:	f7ff ff7c 	bl	800922c <xQueueGenericReset>
            pxNewQueue->ucQueueType = ucQueueType;
 8009334:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
    }
 8009338:	4620      	mov	r0, r4
 800933a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800933e:	4603      	mov	r3, r0
 8009340:	e7f1      	b.n	8009326 <xQueueGenericCreate+0x32>
            configASSERT( pxNewQueue );
 8009342:	f7ff fe87 	bl	8009054 <ulSetInterruptMask>
 8009346:	e7fe      	b.n	8009346 <xQueueGenericCreate+0x52>

08009348 <xQueueCreateCountingSemaphoreStatic>:
    {
 8009348:	b513      	push	{r0, r1, r4, lr}
 800934a:	4613      	mov	r3, r2
 800934c:	460c      	mov	r4, r1
        if( ( uxMaxCount != 0 ) &&
 800934e:	b158      	cbz	r0, 8009368 <xQueueCreateCountingSemaphoreStatic+0x20>
 8009350:	4288      	cmp	r0, r1
 8009352:	d309      	bcc.n	8009368 <xQueueCreateCountingSemaphoreStatic+0x20>
            xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009354:	2202      	movs	r2, #2
 8009356:	9200      	str	r2, [sp, #0]
 8009358:	2200      	movs	r2, #0
 800935a:	4611      	mov	r1, r2
 800935c:	f7ff ff9f 	bl	800929e <xQueueGenericCreateStatic>
            if( xHandle != NULL )
 8009360:	b100      	cbz	r0, 8009364 <xQueueCreateCountingSemaphoreStatic+0x1c>
                ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8009362:	6384      	str	r4, [r0, #56]	@ 0x38
    }
 8009364:	b002      	add	sp, #8
 8009366:	bd10      	pop	{r4, pc}
            configASSERT( xHandle );
 8009368:	f7ff fe74 	bl	8009054 <ulSetInterruptMask>
 800936c:	e7fe      	b.n	800936c <xQueueCreateCountingSemaphoreStatic+0x24>

0800936e <xQueueCreateCountingSemaphore>:
    {
 800936e:	b510      	push	{r4, lr}
 8009370:	460c      	mov	r4, r1
        if( ( uxMaxCount != 0 ) &&
 8009372:	b140      	cbz	r0, 8009386 <xQueueCreateCountingSemaphore+0x18>
 8009374:	4288      	cmp	r0, r1
 8009376:	d306      	bcc.n	8009386 <xQueueCreateCountingSemaphore+0x18>
            xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009378:	2202      	movs	r2, #2
 800937a:	2100      	movs	r1, #0
 800937c:	f7ff ffba 	bl	80092f4 <xQueueGenericCreate>
            if( xHandle != NULL )
 8009380:	b100      	cbz	r0, 8009384 <xQueueCreateCountingSemaphore+0x16>
                ( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8009382:	6384      	str	r4, [r0, #56]	@ 0x38
    }
 8009384:	bd10      	pop	{r4, pc}
            configASSERT( xHandle );
 8009386:	f7ff fe65 	bl	8009054 <ulSetInterruptMask>
 800938a:	e7fe      	b.n	800938a <xQueueCreateCountingSemaphore+0x1c>

0800938c <xQueueGenericSend>:
{
 800938c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009390:	460f      	mov	r7, r1
 8009392:	461e      	mov	r6, r3
    configASSERT( pxQueue );
 8009394:	4604      	mov	r4, r0
{
 8009396:	9201      	str	r2, [sp, #4]
    configASSERT( pxQueue );
 8009398:	b910      	cbnz	r0, 80093a0 <xQueueGenericSend+0x14>
 800939a:	f7ff fe5b 	bl	8009054 <ulSetInterruptMask>
 800939e:	e7fe      	b.n	800939e <xQueueGenericSend+0x12>
    configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80093a0:	b921      	cbnz	r1, 80093ac <xQueueGenericSend+0x20>
 80093a2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80093a4:	b113      	cbz	r3, 80093ac <xQueueGenericSend+0x20>
 80093a6:	f7ff fe55 	bl	8009054 <ulSetInterruptMask>
 80093aa:	e7fe      	b.n	80093aa <xQueueGenericSend+0x1e>
    configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80093ac:	2e02      	cmp	r6, #2
 80093ae:	d105      	bne.n	80093bc <xQueueGenericSend+0x30>
 80093b0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80093b2:	2b01      	cmp	r3, #1
 80093b4:	d002      	beq.n	80093bc <xQueueGenericSend+0x30>
 80093b6:	f7ff fe4d 	bl	8009054 <ulSetInterruptMask>
 80093ba:	e7fe      	b.n	80093ba <xQueueGenericSend+0x2e>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80093bc:	f000 ff4c 	bl	800a258 <xTaskGetSchedulerState>
 80093c0:	4605      	mov	r5, r0
 80093c2:	b1f0      	cbz	r0, 8009402 <xQueueGenericSend+0x76>
 80093c4:	2500      	movs	r5, #0
        prvLockQueue( pxQueue );
 80093c6:	f04f 0800 	mov.w	r8, #0
        taskENTER_CRITICAL();
 80093ca:	f7ff fd6b 	bl	8008ea4 <vPortEnterCritical>
            if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80093ce:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80093d0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80093d2:	429a      	cmp	r2, r3
 80093d4:	d301      	bcc.n	80093da <xQueueGenericSend+0x4e>
 80093d6:	2e02      	cmp	r6, #2
 80093d8:	d119      	bne.n	800940e <xQueueGenericSend+0x82>
                        xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80093da:	4632      	mov	r2, r6
 80093dc:	4639      	mov	r1, r7
 80093de:	4620      	mov	r0, r4
 80093e0:	f7ff fea3 	bl	800912a <prvCopyDataToQueue>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80093e4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80093e6:	b11b      	cbz	r3, 80093f0 <xQueueGenericSend+0x64>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80093e8:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80093ec:	f000 fe94 	bl	800a118 <xTaskRemoveFromEventList>
 80093f0:	b108      	cbz	r0, 80093f6 <xQueueGenericSend+0x6a>
                                queueYIELD_IF_USING_PREEMPTION();
 80093f2:	f7ff fd4b 	bl	8008e8c <vPortYield>
                taskEXIT_CRITICAL();
 80093f6:	f7ff fd63 	bl	8008ec0 <vPortExitCritical>
                return pdPASS;
 80093fa:	2001      	movs	r0, #1
}
 80093fc:	b004      	add	sp, #16
 80093fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009402:	9b01      	ldr	r3, [sp, #4]
 8009404:	2b00      	cmp	r3, #0
 8009406:	d0de      	beq.n	80093c6 <xQueueGenericSend+0x3a>
 8009408:	f7ff fe24 	bl	8009054 <ulSetInterruptMask>
 800940c:	e7fe      	b.n	800940c <xQueueGenericSend+0x80>
                if( xTicksToWait == ( TickType_t ) 0 )
 800940e:	9b01      	ldr	r3, [sp, #4]
 8009410:	b91b      	cbnz	r3, 800941a <xQueueGenericSend+0x8e>
                    taskEXIT_CRITICAL();
 8009412:	f7ff fd55 	bl	8008ec0 <vPortExitCritical>
                    return errQUEUE_FULL;
 8009416:	2000      	movs	r0, #0
 8009418:	e7f0      	b.n	80093fc <xQueueGenericSend+0x70>
                else if( xEntryTimeSet == pdFALSE )
 800941a:	b915      	cbnz	r5, 8009422 <xQueueGenericSend+0x96>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 800941c:	a802      	add	r0, sp, #8
 800941e:	f000 fed9 	bl	800a1d4 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 8009422:	f7ff fd4d 	bl	8008ec0 <vPortExitCritical>
        vTaskSuspendAll();
 8009426:	f000 fc39 	bl	8009c9c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 800942a:	f7ff fd3b 	bl	8008ea4 <vPortEnterCritical>
 800942e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009432:	2bff      	cmp	r3, #255	@ 0xff
 8009434:	bf08      	it	eq
 8009436:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800943a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800943e:	2bff      	cmp	r3, #255	@ 0xff
 8009440:	bf08      	it	eq
 8009442:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8009446:	f7ff fd3b 	bl	8008ec0 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800944a:	a901      	add	r1, sp, #4
 800944c:	a802      	add	r0, sp, #8
 800944e:	f000 fecd 	bl	800a1ec <xTaskCheckForTimeOut>
 8009452:	b9f0      	cbnz	r0, 8009492 <xQueueGenericSend+0x106>

static BaseType_t prvIsQueueFull( const Queue_t * pxQueue )
{
    BaseType_t xReturn;

    taskENTER_CRITICAL();
 8009454:	f7ff fd26 	bl	8008ea4 <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8009458:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800945a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800945c:	429a      	cmp	r2, r3
 800945e:	d10f      	bne.n	8009480 <xQueueGenericSend+0xf4>
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
 8009460:	f7ff fd2e 	bl	8008ec0 <vPortExitCritical>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8009464:	9901      	ldr	r1, [sp, #4]
 8009466:	f104 0010 	add.w	r0, r4, #16
 800946a:	f000 fe19 	bl	800a0a0 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 800946e:	4620      	mov	r0, r4
 8009470:	f7ff fea4 	bl	80091bc <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 8009474:	f000 fcd0 	bl	8009e18 <xTaskResumeAll>
 8009478:	b948      	cbnz	r0, 800948e <xQueueGenericSend+0x102>
                    portYIELD_WITHIN_API();
 800947a:	f7ff fd07 	bl	8008e8c <vPortYield>
 800947e:	e006      	b.n	800948e <xQueueGenericSend+0x102>
    taskEXIT_CRITICAL();
 8009480:	f7ff fd1e 	bl	8008ec0 <vPortExitCritical>
                prvUnlockQueue( pxQueue );
 8009484:	4620      	mov	r0, r4
 8009486:	f7ff fe99 	bl	80091bc <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 800948a:	f000 fcc5 	bl	8009e18 <xTaskResumeAll>
 800948e:	2501      	movs	r5, #1
 8009490:	e79b      	b.n	80093ca <xQueueGenericSend+0x3e>
            prvUnlockQueue( pxQueue );
 8009492:	4620      	mov	r0, r4
 8009494:	f7ff fe92 	bl	80091bc <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 8009498:	f000 fcbe 	bl	8009e18 <xTaskResumeAll>
            return errQUEUE_FULL;
 800949c:	e7bb      	b.n	8009416 <xQueueGenericSend+0x8a>

0800949e <xQueueGenericSendFromISR>:
{
 800949e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80094a2:	4689      	mov	r9, r1
 80094a4:	4617      	mov	r7, r2
 80094a6:	461e      	mov	r6, r3
    configASSERT( pxQueue );
 80094a8:	4604      	mov	r4, r0
 80094aa:	b910      	cbnz	r0, 80094b2 <xQueueGenericSendFromISR+0x14>
 80094ac:	f7ff fdd2 	bl	8009054 <ulSetInterruptMask>
 80094b0:	e7fe      	b.n	80094b0 <xQueueGenericSendFromISR+0x12>
    configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80094b2:	b921      	cbnz	r1, 80094be <xQueueGenericSendFromISR+0x20>
 80094b4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80094b6:	b113      	cbz	r3, 80094be <xQueueGenericSendFromISR+0x20>
 80094b8:	f7ff fdcc 	bl	8009054 <ulSetInterruptMask>
 80094bc:	e7fe      	b.n	80094bc <xQueueGenericSendFromISR+0x1e>
    configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80094be:	2e02      	cmp	r6, #2
 80094c0:	d105      	bne.n	80094ce <xQueueGenericSendFromISR+0x30>
 80094c2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80094c4:	2b01      	cmp	r3, #1
 80094c6:	d002      	beq.n	80094ce <xQueueGenericSendFromISR+0x30>
 80094c8:	f7ff fdc4 	bl	8009054 <ulSetInterruptMask>
 80094cc:	e7fe      	b.n	80094cc <xQueueGenericSendFromISR+0x2e>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 80094ce:	f7ff fdc1 	bl	8009054 <ulSetInterruptMask>
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80094d2:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80094d4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 80094d6:	4680      	mov	r8, r0
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80094d8:	429a      	cmp	r2, r3
 80094da:	d301      	bcc.n	80094e0 <xQueueGenericSendFromISR+0x42>
 80094dc:	2e02      	cmp	r6, #2
 80094de:	d125      	bne.n	800952c <xQueueGenericSendFromISR+0x8e>
            const int8_t cTxLock = pxQueue->cTxLock;
 80094e0:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80094e4:	4632      	mov	r2, r6
 80094e6:	4649      	mov	r1, r9
 80094e8:	4620      	mov	r0, r4
            const int8_t cTxLock = pxQueue->cTxLock;
 80094ea:	b26d      	sxtb	r5, r5
            const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80094ec:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80094ee:	f7ff fe1c 	bl	800912a <prvCopyDataToQueue>
            if( cTxLock == queueUNLOCKED )
 80094f2:	1c6b      	adds	r3, r5, #1
 80094f4:	d110      	bne.n	8009518 <xQueueGenericSendFromISR+0x7a>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80094f6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80094f8:	b13b      	cbz	r3, 800950a <xQueueGenericSendFromISR+0x6c>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80094fa:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80094fe:	f000 fe0b 	bl	800a118 <xTaskRemoveFromEventList>
 8009502:	b110      	cbz	r0, 800950a <xQueueGenericSendFromISR+0x6c>
                                if( pxHigherPriorityTaskWoken != NULL )
 8009504:	b10f      	cbz	r7, 800950a <xQueueGenericSendFromISR+0x6c>
                                    *pxHigherPriorityTaskWoken = pdTRUE;
 8009506:	2301      	movs	r3, #1
 8009508:	603b      	str	r3, [r7, #0]
            xReturn = pdPASS;
 800950a:	2401      	movs	r4, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 800950c:	4640      	mov	r0, r8
 800950e:	f7ff fdac 	bl	800906a <vClearInterruptMask>
}
 8009512:	4620      	mov	r0, r4
 8009514:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                configASSERT( cTxLock != queueINT8_MAX );
 8009518:	2d7f      	cmp	r5, #127	@ 0x7f
 800951a:	d102      	bne.n	8009522 <xQueueGenericSendFromISR+0x84>
 800951c:	f7ff fd9a 	bl	8009054 <ulSetInterruptMask>
 8009520:	e7fe      	b.n	8009520 <xQueueGenericSendFromISR+0x82>
                pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009522:	3501      	adds	r5, #1
 8009524:	b26d      	sxtb	r5, r5
 8009526:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 800952a:	e7ee      	b.n	800950a <xQueueGenericSendFromISR+0x6c>
            xReturn = errQUEUE_FULL;
 800952c:	2400      	movs	r4, #0
 800952e:	e7ed      	b.n	800950c <xQueueGenericSendFromISR+0x6e>

08009530 <xQueueGiveFromISR>:
{
 8009530:	b570      	push	{r4, r5, r6, lr}
 8009532:	460d      	mov	r5, r1
    configASSERT( pxQueue );
 8009534:	4604      	mov	r4, r0
 8009536:	b910      	cbnz	r0, 800953e <xQueueGiveFromISR+0xe>
 8009538:	f7ff fd8c 	bl	8009054 <ulSetInterruptMask>
 800953c:	e7fe      	b.n	800953c <xQueueGiveFromISR+0xc>
    configASSERT( pxQueue->uxItemSize == 0 );
 800953e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009540:	b113      	cbz	r3, 8009548 <xQueueGiveFromISR+0x18>
 8009542:	f7ff fd87 	bl	8009054 <ulSetInterruptMask>
 8009546:	e7fe      	b.n	8009546 <xQueueGiveFromISR+0x16>
    configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009548:	6803      	ldr	r3, [r0, #0]
 800954a:	b923      	cbnz	r3, 8009556 <xQueueGiveFromISR+0x26>
 800954c:	6883      	ldr	r3, [r0, #8]
 800954e:	b113      	cbz	r3, 8009556 <xQueueGiveFromISR+0x26>
 8009550:	f7ff fd80 	bl	8009054 <ulSetInterruptMask>
 8009554:	e7fe      	b.n	8009554 <xQueueGiveFromISR+0x24>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8009556:	f7ff fd7d 	bl	8009054 <ulSetInterruptMask>
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800955a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
        if( uxMessagesWaiting < pxQueue->uxLength )
 800955c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 800955e:	4606      	mov	r6, r0
        if( uxMessagesWaiting < pxQueue->uxLength )
 8009560:	4293      	cmp	r3, r2
 8009562:	d920      	bls.n	80095a6 <xQueueGiveFromISR+0x76>
            const int8_t cTxLock = pxQueue->cTxLock;
 8009564:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
            pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009568:	3201      	adds	r2, #1
            if( cTxLock == queueUNLOCKED )
 800956a:	29ff      	cmp	r1, #255	@ 0xff
            const int8_t cTxLock = pxQueue->cTxLock;
 800956c:	b24b      	sxtb	r3, r1
            pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800956e:	63a2      	str	r2, [r4, #56]	@ 0x38
            if( cTxLock == queueUNLOCKED )
 8009570:	d10f      	bne.n	8009592 <xQueueGiveFromISR+0x62>
                        if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009572:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009574:	b13b      	cbz	r3, 8009586 <xQueueGiveFromISR+0x56>
                            if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009576:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800957a:	f000 fdcd 	bl	800a118 <xTaskRemoveFromEventList>
 800957e:	b110      	cbz	r0, 8009586 <xQueueGiveFromISR+0x56>
                                if( pxHigherPriorityTaskWoken != NULL )
 8009580:	b10d      	cbz	r5, 8009586 <xQueueGiveFromISR+0x56>
                                    *pxHigherPriorityTaskWoken = pdTRUE;
 8009582:	2301      	movs	r3, #1
 8009584:	602b      	str	r3, [r5, #0]
            xReturn = pdPASS;
 8009586:	2401      	movs	r4, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 8009588:	4630      	mov	r0, r6
 800958a:	f7ff fd6e 	bl	800906a <vClearInterruptMask>
}
 800958e:	4620      	mov	r0, r4
 8009590:	bd70      	pop	{r4, r5, r6, pc}
                configASSERT( cTxLock != queueINT8_MAX );
 8009592:	2b7f      	cmp	r3, #127	@ 0x7f
 8009594:	d102      	bne.n	800959c <xQueueGiveFromISR+0x6c>
 8009596:	f7ff fd5d 	bl	8009054 <ulSetInterruptMask>
 800959a:	e7fe      	b.n	800959a <xQueueGiveFromISR+0x6a>
                pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800959c:	3301      	adds	r3, #1
 800959e:	b25b      	sxtb	r3, r3
 80095a0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 80095a4:	e7ef      	b.n	8009586 <xQueueGiveFromISR+0x56>
            xReturn = errQUEUE_FULL;
 80095a6:	2400      	movs	r4, #0
 80095a8:	e7ee      	b.n	8009588 <xQueueGiveFromISR+0x58>

080095aa <xQueueReceive>:
{
 80095aa:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80095ae:	460e      	mov	r6, r1
    configASSERT( ( pxQueue ) );
 80095b0:	4604      	mov	r4, r0
{
 80095b2:	9201      	str	r2, [sp, #4]
    configASSERT( ( pxQueue ) );
 80095b4:	b910      	cbnz	r0, 80095bc <xQueueReceive+0x12>
 80095b6:	f7ff fd4d 	bl	8009054 <ulSetInterruptMask>
 80095ba:	e7fe      	b.n	80095ba <xQueueReceive+0x10>
    configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80095bc:	b921      	cbnz	r1, 80095c8 <xQueueReceive+0x1e>
 80095be:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80095c0:	b113      	cbz	r3, 80095c8 <xQueueReceive+0x1e>
 80095c2:	f7ff fd47 	bl	8009054 <ulSetInterruptMask>
 80095c6:	e7fe      	b.n	80095c6 <xQueueReceive+0x1c>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80095c8:	f000 fe46 	bl	800a258 <xTaskGetSchedulerState>
 80095cc:	4605      	mov	r5, r0
 80095ce:	b1d8      	cbz	r0, 8009608 <xQueueReceive+0x5e>
 80095d0:	2500      	movs	r5, #0
        prvLockQueue( pxQueue );
 80095d2:	f04f 0800 	mov.w	r8, #0
        taskENTER_CRITICAL();
 80095d6:	f7ff fc65 	bl	8008ea4 <vPortEnterCritical>
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80095da:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80095dc:	b1d7      	cbz	r7, 8009614 <xQueueReceive+0x6a>
                prvCopyDataFromQueue( pxQueue, pvBuffer );
 80095de:	4631      	mov	r1, r6
 80095e0:	4620      	mov	r0, r4
                pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095e2:	3f01      	subs	r7, #1
                prvCopyDataFromQueue( pxQueue, pvBuffer );
 80095e4:	f7ff fdd4 	bl	8009190 <prvCopyDataFromQueue>
                pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095e8:	63a7      	str	r7, [r4, #56]	@ 0x38
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80095ea:	6923      	ldr	r3, [r4, #16]
 80095ec:	b133      	cbz	r3, 80095fc <xQueueReceive+0x52>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80095ee:	f104 0010 	add.w	r0, r4, #16
 80095f2:	f000 fd91 	bl	800a118 <xTaskRemoveFromEventList>
 80095f6:	b108      	cbz	r0, 80095fc <xQueueReceive+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
 80095f8:	f7ff fc48 	bl	8008e8c <vPortYield>
                taskEXIT_CRITICAL();
 80095fc:	f7ff fc60 	bl	8008ec0 <vPortExitCritical>
                return pdPASS;
 8009600:	2001      	movs	r0, #1
}
 8009602:	b004      	add	sp, #16
 8009604:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009608:	9b01      	ldr	r3, [sp, #4]
 800960a:	2b00      	cmp	r3, #0
 800960c:	d0e1      	beq.n	80095d2 <xQueueReceive+0x28>
 800960e:	f7ff fd21 	bl	8009054 <ulSetInterruptMask>
 8009612:	e7fe      	b.n	8009612 <xQueueReceive+0x68>
                if( xTicksToWait == ( TickType_t ) 0 )
 8009614:	9b01      	ldr	r3, [sp, #4]
 8009616:	b91b      	cbnz	r3, 8009620 <xQueueReceive+0x76>
                    taskEXIT_CRITICAL();
 8009618:	f7ff fc52 	bl	8008ec0 <vPortExitCritical>
                    return errQUEUE_EMPTY;
 800961c:	2000      	movs	r0, #0
 800961e:	e7f0      	b.n	8009602 <xQueueReceive+0x58>
                else if( xEntryTimeSet == pdFALSE )
 8009620:	b915      	cbnz	r5, 8009628 <xQueueReceive+0x7e>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 8009622:	a802      	add	r0, sp, #8
 8009624:	f000 fdd6 	bl	800a1d4 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 8009628:	f7ff fc4a 	bl	8008ec0 <vPortExitCritical>
        vTaskSuspendAll();
 800962c:	f000 fb36 	bl	8009c9c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 8009630:	f7ff fc38 	bl	8008ea4 <vPortEnterCritical>
 8009634:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009638:	2bff      	cmp	r3, #255	@ 0xff
 800963a:	bf08      	it	eq
 800963c:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8009640:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8009644:	2bff      	cmp	r3, #255	@ 0xff
 8009646:	bf08      	it	eq
 8009648:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800964c:	f7ff fc38 	bl	8008ec0 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009650:	a901      	add	r1, sp, #4
 8009652:	a802      	add	r0, sp, #8
 8009654:	f000 fdca 	bl	800a1ec <xTaskCheckForTimeOut>
 8009658:	b9c0      	cbnz	r0, 800968c <xQueueReceive+0xe2>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800965a:	4620      	mov	r0, r4
 800965c:	f7ff fd5a 	bl	8009114 <prvIsQueueEmpty>
 8009660:	b170      	cbz	r0, 8009680 <xQueueReceive+0xd6>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009662:	9901      	ldr	r1, [sp, #4]
 8009664:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009668:	f000 fd1a 	bl	800a0a0 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 800966c:	4620      	mov	r0, r4
 800966e:	f7ff fda5 	bl	80091bc <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 8009672:	f000 fbd1 	bl	8009e18 <xTaskResumeAll>
 8009676:	b908      	cbnz	r0, 800967c <xQueueReceive+0xd2>
                    portYIELD_WITHIN_API();
 8009678:	f7ff fc08 	bl	8008e8c <vPortYield>
 800967c:	2501      	movs	r5, #1
 800967e:	e7aa      	b.n	80095d6 <xQueueReceive+0x2c>
                prvUnlockQueue( pxQueue );
 8009680:	4620      	mov	r0, r4
 8009682:	f7ff fd9b 	bl	80091bc <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 8009686:	f000 fbc7 	bl	8009e18 <xTaskResumeAll>
 800968a:	e7f7      	b.n	800967c <xQueueReceive+0xd2>
            prvUnlockQueue( pxQueue );
 800968c:	4620      	mov	r0, r4
 800968e:	f7ff fd95 	bl	80091bc <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 8009692:	f000 fbc1 	bl	8009e18 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009696:	4620      	mov	r0, r4
 8009698:	f7ff fd3c 	bl	8009114 <prvIsQueueEmpty>
 800969c:	2800      	cmp	r0, #0
 800969e:	d0ed      	beq.n	800967c <xQueueReceive+0xd2>
 80096a0:	e7bc      	b.n	800961c <xQueueReceive+0x72>

080096a2 <xQueueSemaphoreTake>:
{
 80096a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80096a4:	b085      	sub	sp, #20
    configASSERT( ( pxQueue ) );
 80096a6:	4604      	mov	r4, r0
{
 80096a8:	9101      	str	r1, [sp, #4]
    configASSERT( ( pxQueue ) );
 80096aa:	b910      	cbnz	r0, 80096b2 <xQueueSemaphoreTake+0x10>
 80096ac:	f7ff fcd2 	bl	8009054 <ulSetInterruptMask>
 80096b0:	e7fe      	b.n	80096b0 <xQueueSemaphoreTake+0xe>
    configASSERT( pxQueue->uxItemSize == 0 );
 80096b2:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 80096b4:	b115      	cbz	r5, 80096bc <xQueueSemaphoreTake+0x1a>
 80096b6:	f7ff fccd 	bl	8009054 <ulSetInterruptMask>
 80096ba:	e7fe      	b.n	80096ba <xQueueSemaphoreTake+0x18>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80096bc:	f000 fdcc 	bl	800a258 <xTaskGetSchedulerState>
 80096c0:	4606      	mov	r6, r0
 80096c2:	b1e0      	cbz	r0, 80096fe <xQueueSemaphoreTake+0x5c>
 80096c4:	462e      	mov	r6, r5
        prvLockQueue( pxQueue );
 80096c6:	2700      	movs	r7, #0
        taskENTER_CRITICAL();
 80096c8:	f7ff fbec 	bl	8008ea4 <vPortEnterCritical>
            const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80096cc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80096ce:	b1e3      	cbz	r3, 800970a <xQueueSemaphoreTake+0x68>
                pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80096d0:	3b01      	subs	r3, #1
 80096d2:	63a3      	str	r3, [r4, #56]	@ 0x38
                        if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80096d4:	6823      	ldr	r3, [r4, #0]
 80096d6:	b913      	cbnz	r3, 80096de <xQueueSemaphoreTake+0x3c>
                            pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80096d8:	f000 fe98 	bl	800a40c <pvTaskIncrementMutexHeldCount>
 80096dc:	60a0      	str	r0, [r4, #8]
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80096de:	6923      	ldr	r3, [r4, #16]
 80096e0:	b133      	cbz	r3, 80096f0 <xQueueSemaphoreTake+0x4e>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096e2:	f104 0010 	add.w	r0, r4, #16
 80096e6:	f000 fd17 	bl	800a118 <xTaskRemoveFromEventList>
 80096ea:	b108      	cbz	r0, 80096f0 <xQueueSemaphoreTake+0x4e>
                        queueYIELD_IF_USING_PREEMPTION();
 80096ec:	f7ff fbce 	bl	8008e8c <vPortYield>
                taskEXIT_CRITICAL();
 80096f0:	f7ff fbe6 	bl	8008ec0 <vPortExitCritical>
                return pdPASS;
 80096f4:	2001      	movs	r0, #1
}
 80096f6:	b005      	add	sp, #20
 80096f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80096fa:	4635      	mov	r5, r6
 80096fc:	e7e3      	b.n	80096c6 <xQueueSemaphoreTake+0x24>
            configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80096fe:	9b01      	ldr	r3, [sp, #4]
 8009700:	2b00      	cmp	r3, #0
 8009702:	d0fa      	beq.n	80096fa <xQueueSemaphoreTake+0x58>
 8009704:	f7ff fca6 	bl	8009054 <ulSetInterruptMask>
 8009708:	e7fe      	b.n	8009708 <xQueueSemaphoreTake+0x66>
                if( xTicksToWait == ( TickType_t ) 0 )
 800970a:	9b01      	ldr	r3, [sp, #4]
 800970c:	b923      	cbnz	r3, 8009718 <xQueueSemaphoreTake+0x76>
                            configASSERT( xInheritanceOccurred == pdFALSE );
 800970e:	2d00      	cmp	r5, #0
 8009710:	d058      	beq.n	80097c4 <xQueueSemaphoreTake+0x122>
 8009712:	f7ff fc9f 	bl	8009054 <ulSetInterruptMask>
 8009716:	e7fe      	b.n	8009716 <xQueueSemaphoreTake+0x74>
                else if( xEntryTimeSet == pdFALSE )
 8009718:	b916      	cbnz	r6, 8009720 <xQueueSemaphoreTake+0x7e>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 800971a:	a802      	add	r0, sp, #8
 800971c:	f000 fd5a 	bl	800a1d4 <vTaskInternalSetTimeOutState>
        taskEXIT_CRITICAL();
 8009720:	f7ff fbce 	bl	8008ec0 <vPortExitCritical>
        vTaskSuspendAll();
 8009724:	f000 faba 	bl	8009c9c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 8009728:	f7ff fbbc 	bl	8008ea4 <vPortEnterCritical>
 800972c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009730:	2bff      	cmp	r3, #255	@ 0xff
 8009732:	bf08      	it	eq
 8009734:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8009738:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800973c:	2bff      	cmp	r3, #255	@ 0xff
 800973e:	bf08      	it	eq
 8009740:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 8009744:	f7ff fbbc 	bl	8008ec0 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009748:	a901      	add	r1, sp, #4
 800974a:	a802      	add	r0, sp, #8
 800974c:	f000 fd4e 	bl	800a1ec <xTaskCheckForTimeOut>
 8009750:	bb10      	cbnz	r0, 8009798 <xQueueSemaphoreTake+0xf6>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009752:	4620      	mov	r0, r4
 8009754:	f7ff fcde 	bl	8009114 <prvIsQueueEmpty>
 8009758:	b1c0      	cbz	r0, 800978c <xQueueSemaphoreTake+0xea>
                        if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800975a:	6823      	ldr	r3, [r4, #0]
 800975c:	b93b      	cbnz	r3, 800976e <xQueueSemaphoreTake+0xcc>
                            taskENTER_CRITICAL();
 800975e:	f7ff fba1 	bl	8008ea4 <vPortEnterCritical>
                                xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009762:	68a0      	ldr	r0, [r4, #8]
 8009764:	f000 fd88 	bl	800a278 <xTaskPriorityInherit>
 8009768:	4605      	mov	r5, r0
                            taskEXIT_CRITICAL();
 800976a:	f7ff fba9 	bl	8008ec0 <vPortExitCritical>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800976e:	9901      	ldr	r1, [sp, #4]
 8009770:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009774:	f000 fc94 	bl	800a0a0 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 8009778:	4620      	mov	r0, r4
 800977a:	f7ff fd1f 	bl	80091bc <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 800977e:	f000 fb4b 	bl	8009e18 <xTaskResumeAll>
 8009782:	b908      	cbnz	r0, 8009788 <xQueueSemaphoreTake+0xe6>
                    portYIELD_WITHIN_API();
 8009784:	f7ff fb82 	bl	8008e8c <vPortYield>
 8009788:	2601      	movs	r6, #1
 800978a:	e79d      	b.n	80096c8 <xQueueSemaphoreTake+0x26>
                prvUnlockQueue( pxQueue );
 800978c:	4620      	mov	r0, r4
 800978e:	f7ff fd15 	bl	80091bc <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 8009792:	f000 fb41 	bl	8009e18 <xTaskResumeAll>
 8009796:	e7f7      	b.n	8009788 <xQueueSemaphoreTake+0xe6>
            prvUnlockQueue( pxQueue );
 8009798:	4620      	mov	r0, r4
 800979a:	f7ff fd0f 	bl	80091bc <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 800979e:	f000 fb3b 	bl	8009e18 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80097a2:	4620      	mov	r0, r4
 80097a4:	f7ff fcb6 	bl	8009114 <prvIsQueueEmpty>
 80097a8:	2800      	cmp	r0, #0
 80097aa:	d0ed      	beq.n	8009788 <xQueueSemaphoreTake+0xe6>
                        if( xInheritanceOccurred != pdFALSE )
 80097ac:	b165      	cbz	r5, 80097c8 <xQueueSemaphoreTake+0x126>
                            taskENTER_CRITICAL();
 80097ae:	f7ff fb79 	bl	8008ea4 <vPortEnterCritical>
        if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80097b2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80097b4:	b119      	cbz	r1, 80097be <xQueueSemaphoreTake+0x11c>
            uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80097b6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80097b8:	6819      	ldr	r1, [r3, #0]
 80097ba:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
                                vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80097be:	68a0      	ldr	r0, [r4, #8]
 80097c0:	f000 fdde 	bl	800a380 <vTaskPriorityDisinheritAfterTimeout>
                            taskEXIT_CRITICAL();
 80097c4:	f7ff fb7c 	bl	8008ec0 <vPortExitCritical>
                    return errQUEUE_EMPTY;
 80097c8:	2000      	movs	r0, #0
 80097ca:	e794      	b.n	80096f6 <xQueueSemaphoreTake+0x54>

080097cc <xQueueReceiveFromISR>:
{
 80097cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80097d0:	4689      	mov	r9, r1
 80097d2:	4690      	mov	r8, r2
    configASSERT( pxQueue );
 80097d4:	4604      	mov	r4, r0
 80097d6:	b910      	cbnz	r0, 80097de <xQueueReceiveFromISR+0x12>
 80097d8:	f7ff fc3c 	bl	8009054 <ulSetInterruptMask>
 80097dc:	e7fe      	b.n	80097dc <xQueueReceiveFromISR+0x10>
    configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80097de:	b921      	cbnz	r1, 80097ea <xQueueReceiveFromISR+0x1e>
 80097e0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80097e2:	b113      	cbz	r3, 80097ea <xQueueReceiveFromISR+0x1e>
 80097e4:	f7ff fc36 	bl	8009054 <ulSetInterruptMask>
 80097e8:	e7fe      	b.n	80097e8 <xQueueReceiveFromISR+0x1c>
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 80097ea:	f7ff fc33 	bl	8009054 <ulSetInterruptMask>
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80097ee:	6ba6      	ldr	r6, [r4, #56]	@ 0x38
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 80097f0:	4607      	mov	r7, r0
        if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80097f2:	b1c6      	cbz	r6, 8009826 <xQueueReceiveFromISR+0x5a>
            const int8_t cRxLock = pxQueue->cRxLock;
 80097f4:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
            prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097f8:	4649      	mov	r1, r9
 80097fa:	4620      	mov	r0, r4
            const int8_t cRxLock = pxQueue->cRxLock;
 80097fc:	b26d      	sxtb	r5, r5
            prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097fe:	f7ff fcc7 	bl	8009190 <prvCopyDataFromQueue>
            pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009802:	3e01      	subs	r6, #1
            if( cRxLock == queueUNLOCKED )
 8009804:	1c6b      	adds	r3, r5, #1
            pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009806:	63a6      	str	r6, [r4, #56]	@ 0x38
            if( cRxLock == queueUNLOCKED )
 8009808:	d113      	bne.n	8009832 <xQueueReceiveFromISR+0x66>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800980a:	6923      	ldr	r3, [r4, #16]
 800980c:	b153      	cbz	r3, 8009824 <xQueueReceiveFromISR+0x58>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800980e:	f104 0010 	add.w	r0, r4, #16
 8009812:	f000 fc81 	bl	800a118 <xTaskRemoveFromEventList>
 8009816:	b128      	cbz	r0, 8009824 <xQueueReceiveFromISR+0x58>
                        if( pxHigherPriorityTaskWoken != NULL )
 8009818:	f1b8 0f00 	cmp.w	r8, #0
 800981c:	d002      	beq.n	8009824 <xQueueReceiveFromISR+0x58>
                            *pxHigherPriorityTaskWoken = pdTRUE;
 800981e:	2301      	movs	r3, #1
 8009820:	f8c8 3000 	str.w	r3, [r8]
            xReturn = pdPASS;
 8009824:	2601      	movs	r6, #1
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 8009826:	4638      	mov	r0, r7
 8009828:	f7ff fc1f 	bl	800906a <vClearInterruptMask>
}
 800982c:	4630      	mov	r0, r6
 800982e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                configASSERT( cRxLock != queueINT8_MAX );
 8009832:	2d7f      	cmp	r5, #127	@ 0x7f
 8009834:	d102      	bne.n	800983c <xQueueReceiveFromISR+0x70>
 8009836:	f7ff fc0d 	bl	8009054 <ulSetInterruptMask>
 800983a:	e7fe      	b.n	800983a <xQueueReceiveFromISR+0x6e>
                pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800983c:	3501      	adds	r5, #1
 800983e:	b26d      	sxtb	r5, r5
 8009840:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8009844:	e7ee      	b.n	8009824 <xQueueReceiveFromISR+0x58>
	...

08009848 <vQueueAddToRegistry>:

#if ( configQUEUE_REGISTRY_SIZE > 0 )

    void vQueueAddToRegistry( QueueHandle_t xQueue,
                              const char * pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
    {
 8009848:	b570      	push	{r4, r5, r6, lr}
        UBaseType_t ux;

        configASSERT( xQueue );
 800984a:	b910      	cbnz	r0, 8009852 <vQueueAddToRegistry+0xa>
 800984c:	f7ff fc02 	bl	8009054 <ulSetInterruptMask>
 8009850:	e7fe      	b.n	8009850 <vQueueAddToRegistry+0x8>

        QueueRegistryItem_t * pxEntryToWrite = NULL;

        if( pcQueueName != NULL )
 8009852:	b1b9      	cbz	r1, 8009884 <vQueueAddToRegistry+0x3c>
        QueueRegistryItem_t * pxEntryToWrite = NULL;
 8009854:	2300      	movs	r3, #0
 8009856:	4a0c      	ldr	r2, [pc, #48]	@ (8009888 <vQueueAddToRegistry+0x40>)
        {
            /* See if there is an empty space in the registry.  A NULL name denotes
             * a free slot. */
            for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009858:	461c      	mov	r4, r3
 800985a:	4615      	mov	r5, r2
            {
                /* Replace an existing entry if the queue is already in the registry. */
                if( xQueue == xQueueRegistry[ ux ].xHandle )
 800985c:	6856      	ldr	r6, [r2, #4]
 800985e:	4286      	cmp	r6, r0
 8009860:	d104      	bne.n	800986c <vQueueAddToRegistry+0x24>
                {
                    pxEntryToWrite = &( xQueueRegistry[ ux ] );
 8009862:	eb05 03c4 	add.w	r3, r5, r4, lsl #3

        if( pxEntryToWrite != NULL )
        {
            /* Store the information on this queue. */
            pxEntryToWrite->pcQueueName = pcQueueName;
            pxEntryToWrite->xHandle = xQueue;
 8009866:	e9c3 1000 	strd	r1, r0, [r3]

            traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
        }
    }
 800986a:	e00b      	b.n	8009884 <vQueueAddToRegistry+0x3c>
                else if( ( pxEntryToWrite == NULL ) && ( xQueueRegistry[ ux ].pcQueueName == NULL ) )
 800986c:	b91b      	cbnz	r3, 8009876 <vQueueAddToRegistry+0x2e>
 800986e:	6816      	ldr	r6, [r2, #0]
                    pxEntryToWrite = &( xQueueRegistry[ ux ] );
 8009870:	2e00      	cmp	r6, #0
 8009872:	bf08      	it	eq
 8009874:	4613      	moveq	r3, r2
            for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009876:	3401      	adds	r4, #1
 8009878:	2c08      	cmp	r4, #8
 800987a:	f102 0208 	add.w	r2, r2, #8
 800987e:	d1ed      	bne.n	800985c <vQueueAddToRegistry+0x14>
        if( pxEntryToWrite != NULL )
 8009880:	2b00      	cmp	r3, #0
 8009882:	d1f0      	bne.n	8009866 <vQueueAddToRegistry+0x1e>
    }
 8009884:	bd70      	pop	{r4, r5, r6, pc}
 8009886:	bf00      	nop
 8009888:	2006eff4 	.word	0x2006eff4

0800988c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

    void vQueueUnregisterQueue( QueueHandle_t xQueue )
    {
 800988c:	b510      	push	{r4, lr}
        UBaseType_t ux;

        configASSERT( xQueue );
 800988e:	b910      	cbnz	r0, 8009896 <vQueueUnregisterQueue+0xa>
 8009890:	f7ff fbe0 	bl	8009054 <ulSetInterruptMask>
 8009894:	e7fe      	b.n	8009894 <vQueueUnregisterQueue+0x8>

        /* See if the handle of the queue being unregistered in actually in the
         * registry. */
        for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009896:	2300      	movs	r3, #0
        {
            if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009898:	4a08      	ldr	r2, [pc, #32]	@ (80098bc <vQueueUnregisterQueue+0x30>)
 800989a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800989e:	00dc      	lsls	r4, r3, #3
 80098a0:	4288      	cmp	r0, r1
 80098a2:	d106      	bne.n	80098b2 <vQueueUnregisterQueue+0x26>
            {
                /* Set the name to NULL to show that this slot if free again. */
                xQueueRegistry[ ux ].pcQueueName = NULL;
 80098a4:	2100      	movs	r1, #0
 80098a6:	4a06      	ldr	r2, [pc, #24]	@ (80098c0 <vQueueUnregisterQueue+0x34>)
 80098a8:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

                /* Set the handle to NULL to ensure the same queue handle cannot
                 * appear in the registry twice if it is added, removed, then
                 * added again. */
                xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80098ac:	4422      	add	r2, r4
 80098ae:	6051      	str	r1, [r2, #4]
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
    } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80098b0:	bd10      	pop	{r4, pc}
        for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80098b2:	3301      	adds	r3, #1
 80098b4:	2b08      	cmp	r3, #8
 80098b6:	d1f0      	bne.n	800989a <vQueueUnregisterQueue+0xe>
 80098b8:	e7fa      	b.n	80098b0 <vQueueUnregisterQueue+0x24>
 80098ba:	bf00      	nop
 80098bc:	2006eff8 	.word	0x2006eff8
 80098c0:	2006eff4 	.word	0x2006eff4

080098c4 <vQueueDelete>:
{
 80098c4:	b510      	push	{r4, lr}
    configASSERT( pxQueue );
 80098c6:	4604      	mov	r4, r0
 80098c8:	b910      	cbnz	r0, 80098d0 <vQueueDelete+0xc>
 80098ca:	f7ff fbc3 	bl	8009054 <ulSetInterruptMask>
 80098ce:	e7fe      	b.n	80098ce <vQueueDelete+0xa>
            vQueueUnregisterQueue( pxQueue );
 80098d0:	f7ff ffdc 	bl	800988c <vQueueUnregisterQueue>
            if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80098d4:	f894 3046 	ldrb.w	r3, [r4, #70]	@ 0x46
 80098d8:	b923      	cbnz	r3, 80098e4 <vQueueDelete+0x20>
                vPortFree( pxQueue );
 80098da:	4620      	mov	r0, r4
}
 80098dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                vPortFree( pxQueue );
 80098e0:	f000 bfda 	b.w	800a898 <vPortFree>
}
 80098e4:	bd10      	pop	{r4, pc}

080098e6 <vQueueWaitForMessageRestricted>:
#if ( configUSE_TIMERS == 1 )

    void vQueueWaitForMessageRestricted( QueueHandle_t xQueue,
                                         TickType_t xTicksToWait,
                                         const BaseType_t xWaitIndefinitely )
    {
 80098e6:	b570      	push	{r4, r5, r6, lr}
 80098e8:	4604      	mov	r4, r0
 80098ea:	460d      	mov	r5, r1
 80098ec:	4616      	mov	r6, r2
         *  will not actually cause the task to block, just place it on a blocked
         *  list.  It will not block until the scheduler is unlocked - at which
         *  time a yield will be performed.  If an item is added to the queue while
         *  the queue is locked, and the calling task blocks on the queue, then the
         *  calling task will be immediately unblocked when the queue is unlocked. */
        prvLockQueue( pxQueue );
 80098ee:	f7ff fad9 	bl	8008ea4 <vPortEnterCritical>
 80098f2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80098f6:	2bff      	cmp	r3, #255	@ 0xff
 80098f8:	bf04      	itt	eq
 80098fa:	2300      	moveq	r3, #0
 80098fc:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8009900:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8009904:	2bff      	cmp	r3, #255	@ 0xff
 8009906:	bf04      	itt	eq
 8009908:	2300      	moveq	r3, #0
 800990a:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 800990e:	f7ff fad7 	bl	8008ec0 <vPortExitCritical>

        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8009912:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8009914:	b92b      	cbnz	r3, 8009922 <vQueueWaitForMessageRestricted+0x3c>
        {
            /* There is nothing in the queue, block for the specified period. */
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8009916:	4632      	mov	r2, r6
 8009918:	4629      	mov	r1, r5
 800991a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800991e:	f000 fbd3 	bl	800a0c8 <vTaskPlaceOnEventListRestricted>
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }

        prvUnlockQueue( pxQueue );
 8009922:	4620      	mov	r0, r4
    }
 8009924:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        prvUnlockQueue( pxQueue );
 8009928:	f7ff bc48 	b.w	80091bc <prvUnlockQueue>

0800992c <prvAddNewTaskToReadyList>:
    }
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
{
 800992c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009930:	4604      	mov	r4, r0
    /* Ensure interrupts don't access the task lists while the lists are being
     * updated. */
    taskENTER_CRITICAL();
 8009932:	f7ff fab7 	bl	8008ea4 <vPortEnterCritical>
    {
        uxCurrentNumberOfTasks++;
 8009936:	4b30      	ldr	r3, [pc, #192]	@ (80099f8 <prvAddNewTaskToReadyList+0xcc>)

        if( pxCurrentTCB == NULL )
 8009938:	4e30      	ldr	r6, [pc, #192]	@ (80099fc <prvAddNewTaskToReadyList+0xd0>)
        uxCurrentNumberOfTasks++;
 800993a:	681a      	ldr	r2, [r3, #0]
 800993c:	4f30      	ldr	r7, [pc, #192]	@ (8009a00 <prvAddNewTaskToReadyList+0xd4>)
 800993e:	3201      	adds	r2, #1
 8009940:	601a      	str	r2, [r3, #0]
        if( pxCurrentTCB == NULL )
 8009942:	6835      	ldr	r5, [r6, #0]
 8009944:	2d00      	cmp	r5, #0
 8009946:	d14a      	bne.n	80099de <prvAddNewTaskToReadyList+0xb2>
        {
            /* There are no other tasks, or all the other tasks are in
             * the suspended state - make this the current task. */
            pxCurrentTCB = pxNewTCB;
 8009948:	6034      	str	r4, [r6, #0]

            if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800994a:	681b      	ldr	r3, [r3, #0]
 800994c:	2b01      	cmp	r3, #1
 800994e:	d11f      	bne.n	8009990 <prvAddNewTaskToReadyList+0x64>
 8009950:	46b8      	mov	r8, r7
{
    UBaseType_t uxPriority;

    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    {
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009952:	4640      	mov	r0, r8
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009954:	3501      	adds	r5, #1
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009956:	f7ff fa3d 	bl	8008dd4 <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800995a:	2d38      	cmp	r5, #56	@ 0x38
 800995c:	f108 0814 	add.w	r8, r8, #20
 8009960:	d1f7      	bne.n	8009952 <prvAddNewTaskToReadyList+0x26>
    }

    vListInitialise( &xDelayedTaskList1 );
 8009962:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8009a28 <prvAddNewTaskToReadyList+0xfc>
    vListInitialise( &xDelayedTaskList2 );
 8009966:	4d27      	ldr	r5, [pc, #156]	@ (8009a04 <prvAddNewTaskToReadyList+0xd8>)
    vListInitialise( &xDelayedTaskList1 );
 8009968:	4640      	mov	r0, r8
 800996a:	f7ff fa33 	bl	8008dd4 <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
 800996e:	4628      	mov	r0, r5
 8009970:	f7ff fa30 	bl	8008dd4 <vListInitialise>
    vListInitialise( &xPendingReadyList );
 8009974:	4824      	ldr	r0, [pc, #144]	@ (8009a08 <prvAddNewTaskToReadyList+0xdc>)
 8009976:	f7ff fa2d 	bl	8008dd4 <vListInitialise>

    #if ( INCLUDE_vTaskDelete == 1 )
        {
            vListInitialise( &xTasksWaitingTermination );
 800997a:	4824      	ldr	r0, [pc, #144]	@ (8009a0c <prvAddNewTaskToReadyList+0xe0>)
 800997c:	f7ff fa2a 	bl	8008dd4 <vListInitialise>
        }
    #endif /* INCLUDE_vTaskDelete */

    #if ( INCLUDE_vTaskSuspend == 1 )
        {
            vListInitialise( &xSuspendedTaskList );
 8009980:	4823      	ldr	r0, [pc, #140]	@ (8009a10 <prvAddNewTaskToReadyList+0xe4>)
 8009982:	f7ff fa27 	bl	8008dd4 <vListInitialise>
        }
    #endif /* INCLUDE_vTaskSuspend */

    /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
     * using list2. */
    pxDelayedTaskList = &xDelayedTaskList1;
 8009986:	4b23      	ldr	r3, [pc, #140]	@ (8009a14 <prvAddNewTaskToReadyList+0xe8>)
 8009988:	f8c3 8000 	str.w	r8, [r3]
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800998c:	4b22      	ldr	r3, [pc, #136]	@ (8009a18 <prvAddNewTaskToReadyList+0xec>)
 800998e:	601d      	str	r5, [r3, #0]
        uxTaskNumber++;
 8009990:	4a22      	ldr	r2, [pc, #136]	@ (8009a1c <prvAddNewTaskToReadyList+0xf0>)
        prvAddTaskToReadyList( pxNewTCB );
 8009992:	1d20      	adds	r0, r4, #4
        uxTaskNumber++;
 8009994:	6813      	ldr	r3, [r2, #0]
 8009996:	3301      	adds	r3, #1
 8009998:	6013      	str	r3, [r2, #0]
        prvAddTaskToReadyList( pxNewTCB );
 800999a:	4a21      	ldr	r2, [pc, #132]	@ (8009a20 <prvAddNewTaskToReadyList+0xf4>)
                pxNewTCB->uxTCBNumber = uxTaskNumber;
 800999c:	6463      	str	r3, [r4, #68]	@ 0x44
        prvAddTaskToReadyList( pxNewTCB );
 800999e:	6811      	ldr	r1, [r2, #0]
 80099a0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80099a2:	428b      	cmp	r3, r1
 80099a4:	bf88      	it	hi
 80099a6:	6013      	strhi	r3, [r2, #0]
 80099a8:	2214      	movs	r2, #20
 80099aa:	4353      	muls	r3, r2
 80099ac:	18f9      	adds	r1, r7, r3
 80099ae:	684a      	ldr	r2, [r1, #4]
 80099b0:	6895      	ldr	r5, [r2, #8]
 80099b2:	60a2      	str	r2, [r4, #8]
 80099b4:	60e5      	str	r5, [r4, #12]
 80099b6:	6068      	str	r0, [r5, #4]
 80099b8:	6090      	str	r0, [r2, #8]
 80099ba:	58fa      	ldr	r2, [r7, r3]
 80099bc:	6161      	str	r1, [r4, #20]
 80099be:	3201      	adds	r2, #1
 80099c0:	50fa      	str	r2, [r7, r3]
    taskEXIT_CRITICAL();
 80099c2:	f7ff fa7d 	bl	8008ec0 <vPortExitCritical>
    if( xSchedulerRunning != pdFALSE )
 80099c6:	4b17      	ldr	r3, [pc, #92]	@ (8009a24 <prvAddNewTaskToReadyList+0xf8>)
 80099c8:	681b      	ldr	r3, [r3, #0]
 80099ca:	b19b      	cbz	r3, 80099f4 <prvAddNewTaskToReadyList+0xc8>
        if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80099cc:	6833      	ldr	r3, [r6, #0]
 80099ce:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80099d0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80099d2:	429a      	cmp	r2, r3
 80099d4:	d20e      	bcs.n	80099f4 <prvAddNewTaskToReadyList+0xc8>
}
 80099d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            taskYIELD_IF_USING_PREEMPTION();
 80099da:	f7ff ba57 	b.w	8008e8c <vPortYield>
            if( xSchedulerRunning == pdFALSE )
 80099de:	4b11      	ldr	r3, [pc, #68]	@ (8009a24 <prvAddNewTaskToReadyList+0xf8>)
 80099e0:	681a      	ldr	r2, [r3, #0]
                if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80099e2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
            if( xSchedulerRunning == pdFALSE )
 80099e4:	2a00      	cmp	r2, #0
 80099e6:	d1d3      	bne.n	8009990 <prvAddNewTaskToReadyList+0x64>
                if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80099e8:	6832      	ldr	r2, [r6, #0]
 80099ea:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80099ec:	429a      	cmp	r2, r3
                    pxCurrentTCB = pxNewTCB;
 80099ee:	bf98      	it	ls
 80099f0:	6034      	strls	r4, [r6, #0]
 80099f2:	e7cd      	b.n	8009990 <prvAddNewTaskToReadyList+0x64>
}
 80099f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80099f8:	2006f058 	.word	0x2006f058
 80099fc:	2006f52c 	.word	0x2006f52c
 8009a00:	2006f0cc 	.word	0x2006f0cc
 8009a04:	2006f0a4 	.word	0x2006f0a4
 8009a08:	2006f088 	.word	0x2006f088
 8009a0c:	2006f074 	.word	0x2006f074
 8009a10:	2006f05c 	.word	0x2006f05c
 8009a14:	2006f0a0 	.word	0x2006f0a0
 8009a18:	2006f09c 	.word	0x2006f09c
 8009a1c:	2006f03c 	.word	0x2006f03c
 8009a20:	2006f050 	.word	0x2006f050
 8009a24:	2006f04c 	.word	0x2006f04c
 8009a28:	2006f0b8 	.word	0x2006f0b8

08009a2c <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
 8009a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009a2e:	4606      	mov	r6, r0
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
 8009a30:	4b1a      	ldr	r3, [pc, #104]	@ (8009a9c <prvAddCurrentTaskToDelayedList+0x70>)
        }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a32:	4c1b      	ldr	r4, [pc, #108]	@ (8009aa0 <prvAddCurrentTaskToDelayedList+0x74>)
    const TickType_t xConstTickCount = xTickCount;
 8009a34:	681d      	ldr	r5, [r3, #0]
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a36:	6820      	ldr	r0, [r4, #0]
{
 8009a38:	460f      	mov	r7, r1
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a3a:	3004      	adds	r0, #4
 8009a3c:	f7ff f9ef 	bl	8008e1e <uxListRemove>
        mtCOVERAGE_TEST_MARKER();
    }

    #if ( INCLUDE_vTaskSuspend == 1 )
        {
            if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009a40:	1c73      	adds	r3, r6, #1
 8009a42:	d113      	bne.n	8009a6c <prvAddCurrentTaskToDelayedList+0x40>
 8009a44:	b197      	cbz	r7, 8009a6c <prvAddCurrentTaskToDelayedList+0x40>
            {
                /* Add the task to the suspended task list instead of a delayed task
                 * list to ensure it is not woken by a timing event.  It will block
                 * indefinitely. */
                listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a46:	4b17      	ldr	r3, [pc, #92]	@ (8009aa4 <prvAddCurrentTaskToDelayedList+0x78>)
 8009a48:	6821      	ldr	r1, [r4, #0]
 8009a4a:	685a      	ldr	r2, [r3, #4]
 8009a4c:	608a      	str	r2, [r1, #8]
 8009a4e:	6890      	ldr	r0, [r2, #8]
 8009a50:	6821      	ldr	r1, [r4, #0]
 8009a52:	60c8      	str	r0, [r1, #12]
 8009a54:	6821      	ldr	r1, [r4, #0]
 8009a56:	3104      	adds	r1, #4
 8009a58:	6041      	str	r1, [r0, #4]
 8009a5a:	6821      	ldr	r1, [r4, #0]
 8009a5c:	3104      	adds	r1, #4
 8009a5e:	6091      	str	r1, [r2, #8]
 8009a60:	6822      	ldr	r2, [r4, #0]
 8009a62:	6153      	str	r3, [r2, #20]
 8009a64:	681a      	ldr	r2, [r3, #0]
 8009a66:	3201      	adds	r2, #1
 8009a68:	601a      	str	r2, [r3, #0]

            /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
            ( void ) xCanBlockIndefinitely;
        }
    #endif /* INCLUDE_vTaskSuspend */
}
 8009a6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009a6c:	6823      	ldr	r3, [r4, #0]
 8009a6e:	19ad      	adds	r5, r5, r6
 8009a70:	605d      	str	r5, [r3, #4]
                if( xTimeToWake < xConstTickCount )
 8009a72:	d307      	bcc.n	8009a84 <prvAddCurrentTaskToDelayedList+0x58>
                    vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a74:	4b0c      	ldr	r3, [pc, #48]	@ (8009aa8 <prvAddCurrentTaskToDelayedList+0x7c>)
 8009a76:	6818      	ldr	r0, [r3, #0]
 8009a78:	6821      	ldr	r1, [r4, #0]
}
 8009a7a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
                    vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a7e:	3104      	adds	r1, #4
 8009a80:	f7ff b9b6 	b.w	8008df0 <vListInsert>
                    vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a84:	4b09      	ldr	r3, [pc, #36]	@ (8009aac <prvAddCurrentTaskToDelayedList+0x80>)
 8009a86:	6818      	ldr	r0, [r3, #0]
 8009a88:	6821      	ldr	r1, [r4, #0]
 8009a8a:	3104      	adds	r1, #4
 8009a8c:	f7ff f9b0 	bl	8008df0 <vListInsert>
                    if( xTimeToWake < xNextTaskUnblockTime )
 8009a90:	4b07      	ldr	r3, [pc, #28]	@ (8009ab0 <prvAddCurrentTaskToDelayedList+0x84>)
 8009a92:	681a      	ldr	r2, [r3, #0]
 8009a94:	42aa      	cmp	r2, r5
                        xNextTaskUnblockTime = xTimeToWake;
 8009a96:	bf88      	it	hi
 8009a98:	601d      	strhi	r5, [r3, #0]
}
 8009a9a:	e7e6      	b.n	8009a6a <prvAddCurrentTaskToDelayedList+0x3e>
 8009a9c:	2006f054 	.word	0x2006f054
 8009aa0:	2006f52c 	.word	0x2006f52c
 8009aa4:	2006f05c 	.word	0x2006f05c
 8009aa8:	2006f09c 	.word	0x2006f09c
 8009aac:	2006f0a0 	.word	0x2006f0a0
 8009ab0:	2006f038 	.word	0x2006f038

08009ab4 <prvResetNextTaskUnblockTime>:
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009ab4:	4a06      	ldr	r2, [pc, #24]	@ (8009ad0 <prvResetNextTaskUnblockTime+0x1c>)
 8009ab6:	6813      	ldr	r3, [r2, #0]
 8009ab8:	6819      	ldr	r1, [r3, #0]
 8009aba:	4b06      	ldr	r3, [pc, #24]	@ (8009ad4 <prvResetNextTaskUnblockTime+0x20>)
 8009abc:	b919      	cbnz	r1, 8009ac6 <prvResetNextTaskUnblockTime+0x12>
        xNextTaskUnblockTime = portMAX_DELAY;
 8009abe:	f04f 32ff 	mov.w	r2, #4294967295
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 8009ac2:	601a      	str	r2, [r3, #0]
}
 8009ac4:	4770      	bx	lr
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 8009ac6:	6812      	ldr	r2, [r2, #0]
 8009ac8:	68d2      	ldr	r2, [r2, #12]
 8009aca:	6812      	ldr	r2, [r2, #0]
 8009acc:	e7f9      	b.n	8009ac2 <prvResetNextTaskUnblockTime+0xe>
 8009ace:	bf00      	nop
 8009ad0:	2006f0a0 	.word	0x2006f0a0
 8009ad4:	2006f038 	.word	0x2006f038

08009ad8 <prvDeleteTCB>:
    {
 8009ad8:	b510      	push	{r4, lr}
                if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009ada:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
    {
 8009ade:	4604      	mov	r4, r0
                if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009ae0:	b93b      	cbnz	r3, 8009af2 <prvDeleteTCB+0x1a>
                    vPortFreeStack( pxTCB->pxStack );
 8009ae2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8009ae4:	f000 fed8 	bl	800a898 <vPortFree>
                    vPortFree( pxTCB );
 8009ae8:	4620      	mov	r0, r4
    }
 8009aea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                    vPortFree( pxTCB );
 8009aee:	f000 bed3 	b.w	800a898 <vPortFree>
                else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009af2:	2b01      	cmp	r3, #1
 8009af4:	d0f9      	beq.n	8009aea <prvDeleteTCB+0x12>
                    configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB );
 8009af6:	2b02      	cmp	r3, #2
 8009af8:	d002      	beq.n	8009b00 <prvDeleteTCB+0x28>
 8009afa:	f7ff faab 	bl	8009054 <ulSetInterruptMask>
 8009afe:	e7fe      	b.n	8009afe <prvDeleteTCB+0x26>
    }
 8009b00:	bd10      	pop	{r4, pc}
	...

08009b04 <prvIdleTask>:
{
 8009b04:	b580      	push	{r7, lr}
            while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009b06:	4c10      	ldr	r4, [pc, #64]	@ (8009b48 <prvIdleTask+0x44>)
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b08:	4f10      	ldr	r7, [pc, #64]	@ (8009b4c <prvIdleTask+0x48>)
                    --uxCurrentNumberOfTasks;
 8009b0a:	4d11      	ldr	r5, [pc, #68]	@ (8009b50 <prvIdleTask+0x4c>)
            while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009b0c:	6823      	ldr	r3, [r4, #0]
 8009b0e:	b943      	cbnz	r3, 8009b22 <prvIdleTask+0x1e>
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009b10:	4b10      	ldr	r3, [pc, #64]	@ (8009b54 <prvIdleTask+0x50>)
 8009b12:	681b      	ldr	r3, [r3, #0]
 8009b14:	2b01      	cmp	r3, #1
 8009b16:	d901      	bls.n	8009b1c <prvIdleTask+0x18>
                    taskYIELD();
 8009b18:	f7ff f9b8 	bl	8008e8c <vPortYield>
                vApplicationIdleHook();
 8009b1c:	f7f6 fbd6 	bl	80002cc <vApplicationIdleHook>
        prvCheckTasksWaitingTermination();
 8009b20:	e7f3      	b.n	8009b0a <prvIdleTask+0x6>
                taskENTER_CRITICAL();
 8009b22:	f7ff f9bf 	bl	8008ea4 <vPortEnterCritical>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b26:	68fb      	ldr	r3, [r7, #12]
 8009b28:	68de      	ldr	r6, [r3, #12]
                    ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009b2a:	1d30      	adds	r0, r6, #4
 8009b2c:	f7ff f977 	bl	8008e1e <uxListRemove>
                    --uxCurrentNumberOfTasks;
 8009b30:	682b      	ldr	r3, [r5, #0]
 8009b32:	3b01      	subs	r3, #1
 8009b34:	602b      	str	r3, [r5, #0]
                    --uxDeletedTasksWaitingCleanUp;
 8009b36:	6823      	ldr	r3, [r4, #0]
 8009b38:	3b01      	subs	r3, #1
 8009b3a:	6023      	str	r3, [r4, #0]
                taskEXIT_CRITICAL();
 8009b3c:	f7ff f9c0 	bl	8008ec0 <vPortExitCritical>
                prvDeleteTCB( pxTCB );
 8009b40:	4630      	mov	r0, r6
 8009b42:	f7ff ffc9 	bl	8009ad8 <prvDeleteTCB>
 8009b46:	e7e1      	b.n	8009b0c <prvIdleTask+0x8>
 8009b48:	2006f070 	.word	0x2006f070
 8009b4c:	2006f074 	.word	0x2006f074
 8009b50:	2006f058 	.word	0x2006f058
 8009b54:	2006f0cc 	.word	0x2006f0cc

08009b58 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009b58:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b5c:	460d      	mov	r5, r1
 8009b5e:	e9dd 7a0a 	ldrd	r7, sl, [sp, #40]	@ 0x28
 8009b62:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b64:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009b66:	4680      	mov	r8, r0
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b68:	4632      	mov	r2, r6
 8009b6a:	21a5      	movs	r1, #165	@ 0xa5
 8009b6c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 8009b6e:	4699      	mov	r9, r3
            ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b70:	f028 fec9 	bl	8032906 <memset>
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b74:	f8d4 b030 	ldr.w	fp, [r4, #48]	@ 0x30
    if( pcName != NULL )
 8009b78:	b195      	cbz	r5, 8009ba0 <prvInitialiseNewTask.constprop.0+0x48>
 8009b7a:	1e6b      	subs	r3, r5, #1
 8009b7c:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8009b80:	350f      	adds	r5, #15
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009b82:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009b86:	f802 1f01 	strb.w	r1, [r2, #1]!
            if( pcName[ x ] == ( char ) 0x00 )
 8009b8a:	b109      	cbz	r1, 8009b90 <prvInitialiseNewTask.constprop.0+0x38>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009b8c:	42ab      	cmp	r3, r5
 8009b8e:	d1f8      	bne.n	8009b82 <prvInitialiseNewTask.constprop.0+0x2a>
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009b90:	2300      	movs	r3, #0
 8009b92:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
    configASSERT( uxPriority < configMAX_PRIORITIES );
 8009b96:	2f37      	cmp	r7, #55	@ 0x37
 8009b98:	d905      	bls.n	8009ba6 <prvInitialiseNewTask.constprop.0+0x4e>
 8009b9a:	f7ff fa5b 	bl	8009054 <ulSetInterruptMask>
 8009b9e:	e7fe      	b.n	8009b9e <prvInitialiseNewTask.constprop.0+0x46>
        pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009ba0:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8009ba4:	e7f7      	b.n	8009b96 <prvInitialiseNewTask.constprop.0+0x3e>
            pxNewTCB->uxMutexesHeld = 0;
 8009ba6:	2500      	movs	r5, #0
    pxNewTCB->uxPriority = uxPriority;
 8009ba8:	62e7      	str	r7, [r4, #44]	@ 0x2c
            pxNewTCB->uxBasePriority = uxPriority;
 8009baa:	64e7      	str	r7, [r4, #76]	@ 0x4c
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009bac:	1d20      	adds	r0, r4, #4
            pxNewTCB->uxMutexesHeld = 0;
 8009bae:	6525      	str	r5, [r4, #80]	@ 0x50
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009bb0:	f7ff f91b 	bl	8008dea <vListInitialiseItem>
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009bb4:	3e04      	subs	r6, #4
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009bb6:	f104 0018 	add.w	r0, r4, #24
 8009bba:	f7ff f916 	bl	8008dea <vListInitialiseItem>
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009bbe:	f1c7 0738 	rsb	r7, r7, #56	@ 0x38
            pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009bc2:	eb0b 0006 	add.w	r0, fp, r6
                            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
 8009bc6:	464b      	mov	r3, r9
 8009bc8:	4642      	mov	r2, r8
 8009bca:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009bcc:	6124      	str	r4, [r4, #16]
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009bce:	61a7      	str	r7, [r4, #24]
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009bd0:	6264      	str	r4, [r4, #36]	@ 0x24
            pxNewTCB->pxTaskTag = NULL;
 8009bd2:	6565      	str	r5, [r4, #84]	@ 0x54
            memset( ( void * ) &( pxNewTCB->ulNotifiedValue[ 0 ] ), 0x00, sizeof( pxNewTCB->ulNotifiedValue ) );
 8009bd4:	65a5      	str	r5, [r4, #88]	@ 0x58
            memset( ( void * ) &( pxNewTCB->ucNotifyState[ 0 ] ), 0x00, sizeof( pxNewTCB->ucNotifyState ) );
 8009bd6:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
                            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
 8009bda:	f020 0007 	bic.w	r0, r0, #7
 8009bde:	f7ff f9b1 	bl	8008f44 <pxPortInitialiseStack>
 8009be2:	6020      	str	r0, [r4, #0]
    if( pxCreatedTask != NULL )
 8009be4:	f1ba 0f00 	cmp.w	sl, #0
 8009be8:	d001      	beq.n	8009bee <prvInitialiseNewTask.constprop.0+0x96>
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009bea:	f8ca 4000 	str.w	r4, [sl]
}
 8009bee:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009bf2 <xTaskCreateStatic>:
    {
 8009bf2:	b570      	push	{r4, r5, r6, lr}
 8009bf4:	b086      	sub	sp, #24
 8009bf6:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
        configASSERT( puxStackBuffer != NULL );
 8009bfa:	b915      	cbnz	r5, 8009c02 <xTaskCreateStatic+0x10>
 8009bfc:	f7ff fa2a 	bl	8009054 <ulSetInterruptMask>
 8009c00:	e7fe      	b.n	8009c00 <xTaskCreateStatic+0xe>
        configASSERT( pxTaskBuffer != NULL );
 8009c02:	b914      	cbnz	r4, 8009c0a <xTaskCreateStatic+0x18>
 8009c04:	f7ff fa26 	bl	8009054 <ulSetInterruptMask>
 8009c08:	e7fe      	b.n	8009c08 <xTaskCreateStatic+0x16>
                volatile size_t xSize = sizeof( StaticTask_t );
 8009c0a:	2660      	movs	r6, #96	@ 0x60
 8009c0c:	9605      	str	r6, [sp, #20]
                configASSERT( xSize == sizeof( TCB_t ) );
 8009c0e:	9e05      	ldr	r6, [sp, #20]
 8009c10:	2e60      	cmp	r6, #96	@ 0x60
 8009c12:	d002      	beq.n	8009c1a <xTaskCreateStatic+0x28>
 8009c14:	f7ff fa1e 	bl	8009054 <ulSetInterruptMask>
 8009c18:	e7fe      	b.n	8009c18 <xTaskCreateStatic+0x26>
            pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009c1a:	6325      	str	r5, [r4, #48]	@ 0x30
                    pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009c1c:	2502      	movs	r5, #2
 8009c1e:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
            prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c22:	ad04      	add	r5, sp, #16
 8009c24:	9501      	str	r5, [sp, #4]
 8009c26:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8009c28:	9402      	str	r4, [sp, #8]
 8009c2a:	9500      	str	r5, [sp, #0]
                ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009c2c:	9e05      	ldr	r6, [sp, #20]
            prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c2e:	f7ff ff93 	bl	8009b58 <prvInitialiseNewTask.constprop.0>
            prvAddNewTaskToReadyList( pxNewTCB );
 8009c32:	4620      	mov	r0, r4
 8009c34:	f7ff fe7a 	bl	800992c <prvAddNewTaskToReadyList>
    }
 8009c38:	9804      	ldr	r0, [sp, #16]
 8009c3a:	b006      	add	sp, #24
 8009c3c:	bd70      	pop	{r4, r5, r6, pc}

08009c3e <xTaskCreate>:
    {
 8009c3e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c42:	4607      	mov	r7, r0
 8009c44:	b085      	sub	sp, #20
                pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c46:	0090      	lsls	r0, r2, #2
    {
 8009c48:	4688      	mov	r8, r1
 8009c4a:	4616      	mov	r6, r2
 8009c4c:	4699      	mov	r9, r3
                pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c4e:	f000 fd93 	bl	800a778 <pvPortMalloc>
                if( pxStack != NULL )
 8009c52:	4605      	mov	r5, r0
 8009c54:	b920      	cbnz	r0, 8009c60 <xTaskCreate+0x22>
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009c56:	f04f 30ff 	mov.w	r0, #4294967295
    }
 8009c5a:	b005      	add	sp, #20
 8009c5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                    pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009c60:	2060      	movs	r0, #96	@ 0x60
 8009c62:	f000 fd89 	bl	800a778 <pvPortMalloc>
                    if( pxNewTCB != NULL )
 8009c66:	4604      	mov	r4, r0
 8009c68:	b198      	cbz	r0, 8009c92 <xTaskCreate+0x54>
                    pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009c6a:	2300      	movs	r3, #0
 8009c6c:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
            prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c70:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
                        pxNewTCB->pxStack = pxStack;
 8009c72:	6305      	str	r5, [r0, #48]	@ 0x30
            prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c74:	9301      	str	r3, [sp, #4]
 8009c76:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009c78:	4632      	mov	r2, r6
 8009c7a:	4641      	mov	r1, r8
 8009c7c:	9002      	str	r0, [sp, #8]
 8009c7e:	9300      	str	r3, [sp, #0]
 8009c80:	4638      	mov	r0, r7
 8009c82:	464b      	mov	r3, r9
 8009c84:	f7ff ff68 	bl	8009b58 <prvInitialiseNewTask.constprop.0>
            prvAddNewTaskToReadyList( pxNewTCB );
 8009c88:	4620      	mov	r0, r4
 8009c8a:	f7ff fe4f 	bl	800992c <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
 8009c8e:	2001      	movs	r0, #1
 8009c90:	e7e3      	b.n	8009c5a <xTaskCreate+0x1c>
                        vPortFreeStack( pxStack );
 8009c92:	4628      	mov	r0, r5
 8009c94:	f000 fe00 	bl	800a898 <vPortFree>
        if( pxNewTCB != NULL )
 8009c98:	e7dd      	b.n	8009c56 <xTaskCreate+0x18>
	...

08009c9c <vTaskSuspendAll>:
    ++uxSchedulerSuspended;
 8009c9c:	4a02      	ldr	r2, [pc, #8]	@ (8009ca8 <vTaskSuspendAll+0xc>)
 8009c9e:	6813      	ldr	r3, [r2, #0]
 8009ca0:	3301      	adds	r3, #1
 8009ca2:	6013      	str	r3, [r2, #0]
}
 8009ca4:	4770      	bx	lr
 8009ca6:	bf00      	nop
 8009ca8:	2006f034 	.word	0x2006f034

08009cac <xTaskGetTickCount>:
        xTicks = xTickCount;
 8009cac:	4b01      	ldr	r3, [pc, #4]	@ (8009cb4 <xTaskGetTickCount+0x8>)
 8009cae:	6818      	ldr	r0, [r3, #0]
}
 8009cb0:	4770      	bx	lr
 8009cb2:	bf00      	nop
 8009cb4:	2006f054 	.word	0x2006f054

08009cb8 <xTaskIncrementTick>:
{
 8009cb8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009cbc:	4b4b      	ldr	r3, [pc, #300]	@ (8009dec <xTaskIncrementTick+0x134>)
 8009cbe:	681b      	ldr	r3, [r3, #0]
 8009cc0:	2b00      	cmp	r3, #0
 8009cc2:	f040 808d 	bne.w	8009de0 <xTaskIncrementTick+0x128>
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009cc6:	4b4a      	ldr	r3, [pc, #296]	@ (8009df0 <xTaskIncrementTick+0x138>)
 8009cc8:	681c      	ldr	r4, [r3, #0]
 8009cca:	3401      	adds	r4, #1
        xTickCount = xConstTickCount;
 8009ccc:	601c      	str	r4, [r3, #0]
        if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009cce:	b98c      	cbnz	r4, 8009cf4 <xTaskIncrementTick+0x3c>
            taskSWITCH_DELAYED_LISTS();
 8009cd0:	4b48      	ldr	r3, [pc, #288]	@ (8009df4 <xTaskIncrementTick+0x13c>)
 8009cd2:	681a      	ldr	r2, [r3, #0]
 8009cd4:	6812      	ldr	r2, [r2, #0]
 8009cd6:	b112      	cbz	r2, 8009cde <xTaskIncrementTick+0x26>
 8009cd8:	f7ff f9bc 	bl	8009054 <ulSetInterruptMask>
 8009cdc:	e7fe      	b.n	8009cdc <xTaskIncrementTick+0x24>
 8009cde:	4a46      	ldr	r2, [pc, #280]	@ (8009df8 <xTaskIncrementTick+0x140>)
 8009ce0:	6819      	ldr	r1, [r3, #0]
 8009ce2:	6810      	ldr	r0, [r2, #0]
 8009ce4:	6018      	str	r0, [r3, #0]
 8009ce6:	6011      	str	r1, [r2, #0]
 8009ce8:	4a44      	ldr	r2, [pc, #272]	@ (8009dfc <xTaskIncrementTick+0x144>)
 8009cea:	6813      	ldr	r3, [r2, #0]
 8009cec:	3301      	adds	r3, #1
 8009cee:	6013      	str	r3, [r2, #0]
 8009cf0:	f7ff fee0 	bl	8009ab4 <prvResetNextTaskUnblockTime>
        if( xConstTickCount >= xNextTaskUnblockTime )
 8009cf4:	f8df c114 	ldr.w	ip, [pc, #276]	@ 8009e0c <xTaskIncrementTick+0x154>
    BaseType_t xSwitchRequired = pdFALSE;
 8009cf8:	2000      	movs	r0, #0
        if( xConstTickCount >= xNextTaskUnblockTime )
 8009cfa:	f8dc 3000 	ldr.w	r3, [ip]
 8009cfe:	4a40      	ldr	r2, [pc, #256]	@ (8009e00 <xTaskIncrementTick+0x148>)
 8009d00:	429c      	cmp	r4, r3
 8009d02:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 8009e10 <xTaskIncrementTick+0x158>
 8009d06:	d20f      	bcs.n	8009d28 <xTaskIncrementTick+0x70>
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009d08:	2114      	movs	r1, #20
 8009d0a:	f8d8 3000 	ldr.w	r3, [r8]
 8009d0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009d10:	434b      	muls	r3, r1
 8009d12:	58d3      	ldr	r3, [r2, r3]
                    xSwitchRequired = pdTRUE;
 8009d14:	2b02      	cmp	r3, #2
                if( xYieldPending != pdFALSE )
 8009d16:	4b3b      	ldr	r3, [pc, #236]	@ (8009e04 <xTaskIncrementTick+0x14c>)
                    xSwitchRequired = pdTRUE;
 8009d18:	bf28      	it	cs
 8009d1a:	2001      	movcs	r0, #1
                if( xYieldPending != pdFALSE )
 8009d1c:	681b      	ldr	r3, [r3, #0]
                    xSwitchRequired = pdTRUE;
 8009d1e:	2b00      	cmp	r3, #0
 8009d20:	bf18      	it	ne
 8009d22:	2001      	movne	r0, #1
}
 8009d24:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009d28:	f8df e0c8 	ldr.w	lr, [pc, #200]	@ 8009df4 <xTaskIncrementTick+0x13c>
                    prvAddTaskToReadyList( pxTCB );
 8009d2c:	f8df 90e4 	ldr.w	r9, [pc, #228]	@ 8009e14 <xTaskIncrementTick+0x15c>
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009d30:	f8de 3000 	ldr.w	r3, [lr]
 8009d34:	681b      	ldr	r3, [r3, #0]
 8009d36:	b923      	cbnz	r3, 8009d42 <xTaskIncrementTick+0x8a>
                    xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009d38:	f04f 33ff 	mov.w	r3, #4294967295
 8009d3c:	f8cc 3000 	str.w	r3, [ip]
                    break;
 8009d40:	e7e2      	b.n	8009d08 <xTaskIncrementTick+0x50>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d42:	f8de 3000 	ldr.w	r3, [lr]
 8009d46:	68db      	ldr	r3, [r3, #12]
 8009d48:	68db      	ldr	r3, [r3, #12]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009d4a:	6859      	ldr	r1, [r3, #4]
                    if( xConstTickCount < xItemValue )
 8009d4c:	428c      	cmp	r4, r1
 8009d4e:	d202      	bcs.n	8009d56 <xTaskIncrementTick+0x9e>
                        xNextTaskUnblockTime = xItemValue;
 8009d50:	f8cc 1000 	str.w	r1, [ip]
                        break; /*lint !e9011 Code structure here is deemed easier to understand with multiple breaks. */
 8009d54:	e7d8      	b.n	8009d08 <xTaskIncrementTick+0x50>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 8009d56:	695d      	ldr	r5, [r3, #20]
 8009d58:	e9d3 1602 	ldrd	r1, r6, [r3, #8]
 8009d5c:	608e      	str	r6, [r1, #8]
 8009d5e:	6071      	str	r1, [r6, #4]
 8009d60:	6869      	ldr	r1, [r5, #4]
 8009d62:	1d1f      	adds	r7, r3, #4
 8009d64:	42b9      	cmp	r1, r7
 8009d66:	f04f 0100 	mov.w	r1, #0
 8009d6a:	bf08      	it	eq
 8009d6c:	606e      	streq	r6, [r5, #4]
 8009d6e:	6159      	str	r1, [r3, #20]
 8009d70:	6829      	ldr	r1, [r5, #0]
 8009d72:	3901      	subs	r1, #1
 8009d74:	6029      	str	r1, [r5, #0]
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009d76:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
 8009d78:	b17d      	cbz	r5, 8009d9a <xTaskIncrementTick+0xe2>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 8009d7a:	e9d3 1607 	ldrd	r1, r6, [r3, #28]
 8009d7e:	608e      	str	r6, [r1, #8]
 8009d80:	6071      	str	r1, [r6, #4]
 8009d82:	6869      	ldr	r1, [r5, #4]
 8009d84:	f103 0a18 	add.w	sl, r3, #24
 8009d88:	4551      	cmp	r1, sl
 8009d8a:	f04f 0100 	mov.w	r1, #0
 8009d8e:	bf08      	it	eq
 8009d90:	606e      	streq	r6, [r5, #4]
 8009d92:	6299      	str	r1, [r3, #40]	@ 0x28
 8009d94:	6829      	ldr	r1, [r5, #0]
 8009d96:	3901      	subs	r1, #1
 8009d98:	6029      	str	r1, [r5, #0]
                    prvAddTaskToReadyList( pxTCB );
 8009d9a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8009d9c:	f8d9 5000 	ldr.w	r5, [r9]
 8009da0:	42a9      	cmp	r1, r5
 8009da2:	f04f 0514 	mov.w	r5, #20
 8009da6:	fb05 f501 	mul.w	r5, r5, r1
 8009daa:	eb02 0a05 	add.w	sl, r2, r5
 8009dae:	f8da 6004 	ldr.w	r6, [sl, #4]
 8009db2:	bf88      	it	hi
 8009db4:	f8c9 1000 	strhi.w	r1, [r9]
 8009db8:	f8d6 b008 	ldr.w	fp, [r6, #8]
 8009dbc:	609e      	str	r6, [r3, #8]
 8009dbe:	f8c3 b00c 	str.w	fp, [r3, #12]
 8009dc2:	f8cb 7004 	str.w	r7, [fp, #4]
 8009dc6:	60b7      	str	r7, [r6, #8]
 8009dc8:	f8c3 a014 	str.w	sl, [r3, #20]
 8009dcc:	5953      	ldr	r3, [r2, r5]
 8009dce:	3301      	adds	r3, #1
 8009dd0:	5153      	str	r3, [r2, r5]
                            if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009dd2:	f8d8 3000 	ldr.w	r3, [r8]
 8009dd6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
                                xSwitchRequired = pdTRUE;
 8009dd8:	4299      	cmp	r1, r3
 8009dda:	bf28      	it	cs
 8009ddc:	2001      	movcs	r0, #1
 8009dde:	e7a7      	b.n	8009d30 <xTaskIncrementTick+0x78>
        ++xPendedTicks;
 8009de0:	4a09      	ldr	r2, [pc, #36]	@ (8009e08 <xTaskIncrementTick+0x150>)
    BaseType_t xSwitchRequired = pdFALSE;
 8009de2:	2000      	movs	r0, #0
        ++xPendedTicks;
 8009de4:	6813      	ldr	r3, [r2, #0]
 8009de6:	3301      	adds	r3, #1
 8009de8:	6013      	str	r3, [r2, #0]
 8009dea:	e79b      	b.n	8009d24 <xTaskIncrementTick+0x6c>
 8009dec:	2006f034 	.word	0x2006f034
 8009df0:	2006f054 	.word	0x2006f054
 8009df4:	2006f0a0 	.word	0x2006f0a0
 8009df8:	2006f09c 	.word	0x2006f09c
 8009dfc:	2006f040 	.word	0x2006f040
 8009e00:	2006f0cc 	.word	0x2006f0cc
 8009e04:	2006f044 	.word	0x2006f044
 8009e08:	2006f048 	.word	0x2006f048
 8009e0c:	2006f038 	.word	0x2006f038
 8009e10:	2006f52c 	.word	0x2006f52c
 8009e14:	2006f050 	.word	0x2006f050

08009e18 <xTaskResumeAll>:
{
 8009e18:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    configASSERT( uxSchedulerSuspended );
 8009e1c:	4c3d      	ldr	r4, [pc, #244]	@ (8009f14 <xTaskResumeAll+0xfc>)
 8009e1e:	6823      	ldr	r3, [r4, #0]
 8009e20:	b913      	cbnz	r3, 8009e28 <xTaskResumeAll+0x10>
 8009e22:	f7ff f917 	bl	8009054 <ulSetInterruptMask>
 8009e26:	e7fe      	b.n	8009e26 <xTaskResumeAll+0xe>
    taskENTER_CRITICAL();
 8009e28:	f7ff f83c 	bl	8008ea4 <vPortEnterCritical>
        --uxSchedulerSuspended;
 8009e2c:	6823      	ldr	r3, [r4, #0]
 8009e2e:	3b01      	subs	r3, #1
 8009e30:	6023      	str	r3, [r4, #0]
        if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009e32:	6823      	ldr	r3, [r4, #0]
 8009e34:	b12b      	cbz	r3, 8009e42 <xTaskResumeAll+0x2a>
    BaseType_t xAlreadyYielded = pdFALSE;
 8009e36:	2400      	movs	r4, #0
    taskEXIT_CRITICAL();
 8009e38:	f7ff f842 	bl	8008ec0 <vPortExitCritical>
}
 8009e3c:	4620      	mov	r0, r4
 8009e3e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
            if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009e42:	4a35      	ldr	r2, [pc, #212]	@ (8009f18 <xTaskResumeAll+0x100>)
 8009e44:	6812      	ldr	r2, [r2, #0]
 8009e46:	2a00      	cmp	r2, #0
 8009e48:	d0f5      	beq.n	8009e36 <xTaskResumeAll+0x1e>
                    prvAddTaskToReadyList( pxTCB );
 8009e4a:	f04f 0c14 	mov.w	ip, #20
                        xYieldPending = pdTRUE;
 8009e4e:	f04f 0901 	mov.w	r9, #1
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009e52:	4e32      	ldr	r6, [pc, #200]	@ (8009f1c <xTaskResumeAll+0x104>)
                    prvAddTaskToReadyList( pxTCB );
 8009e54:	4f32      	ldr	r7, [pc, #200]	@ (8009f20 <xTaskResumeAll+0x108>)
 8009e56:	4933      	ldr	r1, [pc, #204]	@ (8009f24 <xTaskResumeAll+0x10c>)
                    if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009e58:	f8df e0d4 	ldr.w	lr, [pc, #212]	@ 8009f30 <xTaskResumeAll+0x118>
                        xYieldPending = pdTRUE;
 8009e5c:	f8df 80cc 	ldr.w	r8, [pc, #204]	@ 8009f2c <xTaskResumeAll+0x114>
 8009e60:	e03e      	b.n	8009ee0 <xTaskResumeAll+0xc8>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009e62:	68f3      	ldr	r3, [r6, #12]
 8009e64:	68db      	ldr	r3, [r3, #12]
                    listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 8009e66:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 8009e68:	e9d3 2407 	ldrd	r2, r4, [r3, #28]
 8009e6c:	6094      	str	r4, [r2, #8]
 8009e6e:	6062      	str	r2, [r4, #4]
 8009e70:	6842      	ldr	r2, [r0, #4]
 8009e72:	f103 0518 	add.w	r5, r3, #24
 8009e76:	42aa      	cmp	r2, r5
 8009e78:	f04f 0200 	mov.w	r2, #0
 8009e7c:	bf08      	it	eq
 8009e7e:	6044      	streq	r4, [r0, #4]
 8009e80:	629a      	str	r2, [r3, #40]	@ 0x28
 8009e82:	6802      	ldr	r2, [r0, #0]
 8009e84:	3a01      	subs	r2, #1
 8009e86:	6002      	str	r2, [r0, #0]
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 8009e88:	6958      	ldr	r0, [r3, #20]
 8009e8a:	e9d3 2402 	ldrd	r2, r4, [r3, #8]
 8009e8e:	6094      	str	r4, [r2, #8]
 8009e90:	6062      	str	r2, [r4, #4]
 8009e92:	6842      	ldr	r2, [r0, #4]
 8009e94:	1d1d      	adds	r5, r3, #4
 8009e96:	42aa      	cmp	r2, r5
 8009e98:	6802      	ldr	r2, [r0, #0]
 8009e9a:	bf08      	it	eq
 8009e9c:	6044      	streq	r4, [r0, #4]
 8009e9e:	3a01      	subs	r2, #1
 8009ea0:	6002      	str	r2, [r0, #0]
                    prvAddTaskToReadyList( pxTCB );
 8009ea2:	6838      	ldr	r0, [r7, #0]
 8009ea4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009ea6:	4282      	cmp	r2, r0
 8009ea8:	fb0c f002 	mul.w	r0, ip, r2
 8009eac:	eb01 0a00 	add.w	sl, r1, r0
 8009eb0:	f8da 4004 	ldr.w	r4, [sl, #4]
 8009eb4:	bf88      	it	hi
 8009eb6:	603a      	strhi	r2, [r7, #0]
 8009eb8:	f8d4 b008 	ldr.w	fp, [r4, #8]
 8009ebc:	609c      	str	r4, [r3, #8]
 8009ebe:	f8c3 b00c 	str.w	fp, [r3, #12]
 8009ec2:	f8cb 5004 	str.w	r5, [fp, #4]
 8009ec6:	60a5      	str	r5, [r4, #8]
 8009ec8:	580c      	ldr	r4, [r1, r0]
 8009eca:	f8c3 a014 	str.w	sl, [r3, #20]
 8009ece:	3401      	adds	r4, #1
 8009ed0:	500c      	str	r4, [r1, r0]
                    if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009ed2:	f8de 0000 	ldr.w	r0, [lr]
 8009ed6:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8009ed8:	4282      	cmp	r2, r0
 8009eda:	d301      	bcc.n	8009ee0 <xTaskResumeAll+0xc8>
                        xYieldPending = pdTRUE;
 8009edc:	f8c8 9000 	str.w	r9, [r8]
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009ee0:	6832      	ldr	r2, [r6, #0]
 8009ee2:	2a00      	cmp	r2, #0
 8009ee4:	d1bd      	bne.n	8009e62 <xTaskResumeAll+0x4a>
                if( pxTCB != NULL )
 8009ee6:	b10b      	cbz	r3, 8009eec <xTaskResumeAll+0xd4>
                    prvResetNextTaskUnblockTime();
 8009ee8:	f7ff fde4 	bl	8009ab4 <prvResetNextTaskUnblockTime>
                    TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8009eec:	4d0e      	ldr	r5, [pc, #56]	@ (8009f28 <xTaskResumeAll+0x110>)
 8009eee:	682c      	ldr	r4, [r5, #0]
                    if( xPendedCounts > ( TickType_t ) 0U )
 8009ef0:	b144      	cbz	r4, 8009f04 <xTaskResumeAll+0xec>
                                xYieldPending = pdTRUE;
 8009ef2:	2701      	movs	r7, #1
 8009ef4:	4e0d      	ldr	r6, [pc, #52]	@ (8009f2c <xTaskResumeAll+0x114>)
                            if( xTaskIncrementTick() != pdFALSE )
 8009ef6:	f7ff fedf 	bl	8009cb8 <xTaskIncrementTick>
 8009efa:	b100      	cbz	r0, 8009efe <xTaskResumeAll+0xe6>
                                xYieldPending = pdTRUE;
 8009efc:	6037      	str	r7, [r6, #0]
                        } while( xPendedCounts > ( TickType_t ) 0U );
 8009efe:	3c01      	subs	r4, #1
 8009f00:	d1f9      	bne.n	8009ef6 <xTaskResumeAll+0xde>
                        xPendedTicks = 0;
 8009f02:	602c      	str	r4, [r5, #0]
                if( xYieldPending != pdFALSE )
 8009f04:	4b09      	ldr	r3, [pc, #36]	@ (8009f2c <xTaskResumeAll+0x114>)
 8009f06:	681b      	ldr	r3, [r3, #0]
 8009f08:	2b00      	cmp	r3, #0
 8009f0a:	d094      	beq.n	8009e36 <xTaskResumeAll+0x1e>
                    taskYIELD_IF_USING_PREEMPTION();
 8009f0c:	f7fe ffbe 	bl	8008e8c <vPortYield>
                            xAlreadyYielded = pdTRUE;
 8009f10:	2401      	movs	r4, #1
 8009f12:	e791      	b.n	8009e38 <xTaskResumeAll+0x20>
 8009f14:	2006f034 	.word	0x2006f034
 8009f18:	2006f058 	.word	0x2006f058
 8009f1c:	2006f088 	.word	0x2006f088
 8009f20:	2006f050 	.word	0x2006f050
 8009f24:	2006f0cc 	.word	0x2006f0cc
 8009f28:	2006f048 	.word	0x2006f048
 8009f2c:	2006f044 	.word	0x2006f044
 8009f30:	2006f52c 	.word	0x2006f52c

08009f34 <vTaskDelay>:
    {
 8009f34:	b508      	push	{r3, lr}
        if( xTicksToDelay > ( TickType_t ) 0U )
 8009f36:	b918      	cbnz	r0, 8009f40 <vTaskDelay+0xc>
    }
 8009f38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            portYIELD_WITHIN_API();
 8009f3c:	f7fe bfa6 	b.w	8008e8c <vPortYield>
            configASSERT( uxSchedulerSuspended == 0 );
 8009f40:	4b07      	ldr	r3, [pc, #28]	@ (8009f60 <vTaskDelay+0x2c>)
 8009f42:	6819      	ldr	r1, [r3, #0]
 8009f44:	b111      	cbz	r1, 8009f4c <vTaskDelay+0x18>
 8009f46:	f7ff f885 	bl	8009054 <ulSetInterruptMask>
 8009f4a:	e7fe      	b.n	8009f4a <vTaskDelay+0x16>
            vTaskSuspendAll();
 8009f4c:	f7ff fea6 	bl	8009c9c <vTaskSuspendAll>
                prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009f50:	f7ff fd6c 	bl	8009a2c <prvAddCurrentTaskToDelayedList>
            xAlreadyYielded = xTaskResumeAll();
 8009f54:	f7ff ff60 	bl	8009e18 <xTaskResumeAll>
        if( xAlreadyYielded == pdFALSE )
 8009f58:	2800      	cmp	r0, #0
 8009f5a:	d0ed      	beq.n	8009f38 <vTaskDelay+0x4>
    }
 8009f5c:	bd08      	pop	{r3, pc}
 8009f5e:	bf00      	nop
 8009f60:	2006f034 	.word	0x2006f034

08009f64 <vTaskSetApplicationTaskTag>:
    {
 8009f64:	b538      	push	{r3, r4, r5, lr}
 8009f66:	460d      	mov	r5, r1
        if( xTask == NULL )
 8009f68:	4604      	mov	r4, r0
 8009f6a:	b908      	cbnz	r0, 8009f70 <vTaskSetApplicationTaskTag+0xc>
            xTCB = ( TCB_t * ) pxCurrentTCB;
 8009f6c:	4b04      	ldr	r3, [pc, #16]	@ (8009f80 <vTaskSetApplicationTaskTag+0x1c>)
 8009f6e:	681c      	ldr	r4, [r3, #0]
        taskENTER_CRITICAL();
 8009f70:	f7fe ff98 	bl	8008ea4 <vPortEnterCritical>
            xTCB->pxTaskTag = pxHookFunction;
 8009f74:	6565      	str	r5, [r4, #84]	@ 0x54
    }
 8009f76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        taskEXIT_CRITICAL();
 8009f7a:	f7fe bfa1 	b.w	8008ec0 <vPortExitCritical>
 8009f7e:	bf00      	nop
 8009f80:	2006f52c 	.word	0x2006f52c

08009f84 <xTaskCallApplicationTaskHook>:
    {
 8009f84:	4603      	mov	r3, r0
 8009f86:	4608      	mov	r0, r1
        if( xTask == NULL )
 8009f88:	b90b      	cbnz	r3, 8009f8e <xTaskCallApplicationTaskHook+0xa>
            xTCB = pxCurrentTCB;
 8009f8a:	4b03      	ldr	r3, [pc, #12]	@ (8009f98 <xTaskCallApplicationTaskHook+0x14>)
 8009f8c:	681b      	ldr	r3, [r3, #0]
        if( xTCB->pxTaskTag != NULL )
 8009f8e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009f90:	b103      	cbz	r3, 8009f94 <xTaskCallApplicationTaskHook+0x10>
            xReturn = xTCB->pxTaskTag( pvParameter );
 8009f92:	4718      	bx	r3
    }
 8009f94:	4618      	mov	r0, r3
 8009f96:	4770      	bx	lr
 8009f98:	2006f52c 	.word	0x2006f52c

08009f9c <vTaskStartScheduler>:
{
 8009f9c:	b530      	push	{r4, r5, lr}
            StaticTask_t * pxIdleTaskTCBBuffer = NULL;
 8009f9e:	2400      	movs	r4, #0
{
 8009fa0:	b089      	sub	sp, #36	@ 0x24
            vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009fa2:	aa07      	add	r2, sp, #28
 8009fa4:	a906      	add	r1, sp, #24
 8009fa6:	a805      	add	r0, sp, #20
            StackType_t * pxIdleTaskStackBuffer = NULL;
 8009fa8:	e9cd 4405 	strd	r4, r4, [sp, #20]
            vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009fac:	f7fe fefa 	bl	8008da4 <vApplicationGetIdleTaskMemory>
            xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
 8009fb0:	9b05      	ldr	r3, [sp, #20]
 8009fb2:	9a07      	ldr	r2, [sp, #28]
 8009fb4:	9302      	str	r3, [sp, #8]
 8009fb6:	9b06      	ldr	r3, [sp, #24]
 8009fb8:	4913      	ldr	r1, [pc, #76]	@ (800a008 <vTaskStartScheduler+0x6c>)
 8009fba:	e9cd 4300 	strd	r4, r3, [sp]
 8009fbe:	4813      	ldr	r0, [pc, #76]	@ (800a00c <vTaskStartScheduler+0x70>)
 8009fc0:	4623      	mov	r3, r4
 8009fc2:	f7ff fe16 	bl	8009bf2 <xTaskCreateStatic>
            if( xIdleTaskHandle != NULL )
 8009fc6:	b1a8      	cbz	r0, 8009ff4 <vTaskStartScheduler+0x58>
                xReturn = xTimerCreateTimerTask();
 8009fc8:	f000 fb84 	bl	800a6d4 <xTimerCreateTimerTask>
    if( xReturn == pdPASS )
 8009fcc:	2801      	cmp	r0, #1
                xReturn = xTimerCreateTimerTask();
 8009fce:	4605      	mov	r5, r0
    if( xReturn == pdPASS )
 8009fd0:	d114      	bne.n	8009ffc <vTaskStartScheduler+0x60>
        portDISABLE_INTERRUPTS();
 8009fd2:	f7ff f83f 	bl	8009054 <ulSetInterruptMask>
        xNextTaskUnblockTime = portMAX_DELAY;
 8009fd6:	f04f 32ff 	mov.w	r2, #4294967295
 8009fda:	4b0d      	ldr	r3, [pc, #52]	@ (800a010 <vTaskStartScheduler+0x74>)
        traceTASK_SWITCHED_IN();
 8009fdc:	4621      	mov	r1, r4
        xNextTaskUnblockTime = portMAX_DELAY;
 8009fde:	601a      	str	r2, [r3, #0]
        xSchedulerRunning = pdTRUE;
 8009fe0:	4b0c      	ldr	r3, [pc, #48]	@ (800a014 <vTaskStartScheduler+0x78>)
 8009fe2:	601d      	str	r5, [r3, #0]
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009fe4:	4b0c      	ldr	r3, [pc, #48]	@ (800a018 <vTaskStartScheduler+0x7c>)
 8009fe6:	601c      	str	r4, [r3, #0]
        traceTASK_SWITCHED_IN();
 8009fe8:	4b0c      	ldr	r3, [pc, #48]	@ (800a01c <vTaskStartScheduler+0x80>)
 8009fea:	6818      	ldr	r0, [r3, #0]
 8009fec:	f7ff ffca 	bl	8009f84 <xTaskCallApplicationTaskHook>
        if( xPortStartScheduler() != pdFALSE )
 8009ff0:	f7fe ffe0 	bl	8008fb4 <xPortStartScheduler>
    ( void ) uxTopUsedPriority;
 8009ff4:	4b0a      	ldr	r3, [pc, #40]	@ (800a020 <vTaskStartScheduler+0x84>)
 8009ff6:	681b      	ldr	r3, [r3, #0]
}
 8009ff8:	b009      	add	sp, #36	@ 0x24
 8009ffa:	bd30      	pop	{r4, r5, pc}
        configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009ffc:	3501      	adds	r5, #1
 8009ffe:	d1f9      	bne.n	8009ff4 <vTaskStartScheduler+0x58>
 800a000:	f7ff f828 	bl	8009054 <ulSetInterruptMask>
 800a004:	e7fe      	b.n	800a004 <vTaskStartScheduler+0x68>
 800a006:	bf00      	nop
 800a008:	08035910 	.word	0x08035910
 800a00c:	08009b05 	.word	0x08009b05
 800a010:	2006f038 	.word	0x2006f038
 800a014:	2006f04c 	.word	0x2006f04c
 800a018:	2006f054 	.word	0x2006f054
 800a01c:	2006f52c 	.word	0x2006f52c
 800a020:	2000005c 	.word	0x2000005c

0800a024 <vTaskSwitchContext>:
{
 800a024:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a026:	4b19      	ldr	r3, [pc, #100]	@ (800a08c <vTaskSwitchContext+0x68>)
 800a028:	681a      	ldr	r2, [r3, #0]
 800a02a:	4b19      	ldr	r3, [pc, #100]	@ (800a090 <vTaskSwitchContext+0x6c>)
 800a02c:	b112      	cbz	r2, 800a034 <vTaskSwitchContext+0x10>
        xYieldPending = pdTRUE;
 800a02e:	2201      	movs	r2, #1
 800a030:	601a      	str	r2, [r3, #0]
}
 800a032:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a034:	2714      	movs	r7, #20
        traceTASK_SWITCHED_OUT();
 800a036:	4c17      	ldr	r4, [pc, #92]	@ (800a094 <vTaskSwitchContext+0x70>)
        xYieldPending = pdFALSE;
 800a038:	601a      	str	r2, [r3, #0]
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a03a:	4e17      	ldr	r6, [pc, #92]	@ (800a098 <vTaskSwitchContext+0x74>)
        traceTASK_SWITCHED_OUT();
 800a03c:	2101      	movs	r1, #1
 800a03e:	6820      	ldr	r0, [r4, #0]
 800a040:	f7ff ffa0 	bl	8009f84 <xTaskCallApplicationTaskHook>
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a044:	6832      	ldr	r2, [r6, #0]
 800a046:	4915      	ldr	r1, [pc, #84]	@ (800a09c <vTaskSwitchContext+0x78>)
 800a048:	fb07 f302 	mul.w	r3, r7, r2
 800a04c:	58cd      	ldr	r5, [r1, r3]
 800a04e:	18c8      	adds	r0, r1, r3
 800a050:	b1b5      	cbz	r5, 800a080 <vTaskSwitchContext+0x5c>
 800a052:	6845      	ldr	r5, [r0, #4]
 800a054:	3308      	adds	r3, #8
 800a056:	686d      	ldr	r5, [r5, #4]
 800a058:	440b      	add	r3, r1
 800a05a:	429d      	cmp	r5, r3
 800a05c:	bf08      	it	eq
 800a05e:	686b      	ldreq	r3, [r5, #4]
 800a060:	6045      	str	r5, [r0, #4]
 800a062:	bf08      	it	eq
 800a064:	6043      	streq	r3, [r0, #4]
 800a066:	2314      	movs	r3, #20
 800a068:	fb03 1102 	mla	r1, r3, r2, r1
 800a06c:	684b      	ldr	r3, [r1, #4]
        traceTASK_SWITCHED_IN();
 800a06e:	2100      	movs	r1, #0
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a070:	68db      	ldr	r3, [r3, #12]
 800a072:	6023      	str	r3, [r4, #0]
 800a074:	6032      	str	r2, [r6, #0]
        traceTASK_SWITCHED_IN();
 800a076:	6820      	ldr	r0, [r4, #0]
}
 800a078:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
        traceTASK_SWITCHED_IN();
 800a07c:	f7ff bf82 	b.w	8009f84 <xTaskCallApplicationTaskHook>
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a080:	b912      	cbnz	r2, 800a088 <vTaskSwitchContext+0x64>
 800a082:	f7fe ffe7 	bl	8009054 <ulSetInterruptMask>
 800a086:	e7fe      	b.n	800a086 <vTaskSwitchContext+0x62>
 800a088:	3a01      	subs	r2, #1
 800a08a:	e7dd      	b.n	800a048 <vTaskSwitchContext+0x24>
 800a08c:	2006f034 	.word	0x2006f034
 800a090:	2006f044 	.word	0x2006f044
 800a094:	2006f52c 	.word	0x2006f52c
 800a098:	2006f050 	.word	0x2006f050
 800a09c:	2006f0cc 	.word	0x2006f0cc

0800a0a0 <vTaskPlaceOnEventList>:
{
 800a0a0:	b510      	push	{r4, lr}
 800a0a2:	460c      	mov	r4, r1
    configASSERT( pxEventList );
 800a0a4:	b910      	cbnz	r0, 800a0ac <vTaskPlaceOnEventList+0xc>
 800a0a6:	f7fe ffd5 	bl	8009054 <ulSetInterruptMask>
 800a0aa:	e7fe      	b.n	800a0aa <vTaskPlaceOnEventList+0xa>
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a0ac:	4b05      	ldr	r3, [pc, #20]	@ (800a0c4 <vTaskPlaceOnEventList+0x24>)
 800a0ae:	6819      	ldr	r1, [r3, #0]
 800a0b0:	3118      	adds	r1, #24
 800a0b2:	f7fe fe9d 	bl	8008df0 <vListInsert>
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a0b6:	4620      	mov	r0, r4
}
 800a0b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a0bc:	2101      	movs	r1, #1
 800a0be:	f7ff bcb5 	b.w	8009a2c <prvAddCurrentTaskToDelayedList>
 800a0c2:	bf00      	nop
 800a0c4:	2006f52c 	.word	0x2006f52c

0800a0c8 <vTaskPlaceOnEventListRestricted>:
    {
 800a0c8:	b570      	push	{r4, r5, r6, lr}
 800a0ca:	460c      	mov	r4, r1
 800a0cc:	4611      	mov	r1, r2
        configASSERT( pxEventList );
 800a0ce:	b910      	cbnz	r0, 800a0d6 <vTaskPlaceOnEventListRestricted+0xe>
 800a0d0:	f7fe ffc0 	bl	8009054 <ulSetInterruptMask>
 800a0d4:	e7fe      	b.n	800a0d4 <vTaskPlaceOnEventListRestricted+0xc>
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a0d6:	4b0f      	ldr	r3, [pc, #60]	@ (800a114 <vTaskPlaceOnEventListRestricted+0x4c>)
 800a0d8:	6842      	ldr	r2, [r0, #4]
 800a0da:	681d      	ldr	r5, [r3, #0]
 800a0dc:	6896      	ldr	r6, [r2, #8]
 800a0de:	61ea      	str	r2, [r5, #28]
 800a0e0:	681d      	ldr	r5, [r3, #0]
            xTicksToWait = portMAX_DELAY;
 800a0e2:	2900      	cmp	r1, #0
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a0e4:	622e      	str	r6, [r5, #32]
 800a0e6:	681d      	ldr	r5, [r3, #0]
 800a0e8:	f105 0518 	add.w	r5, r5, #24
 800a0ec:	6075      	str	r5, [r6, #4]
 800a0ee:	681d      	ldr	r5, [r3, #0]
 800a0f0:	681b      	ldr	r3, [r3, #0]
 800a0f2:	f105 0518 	add.w	r5, r5, #24
 800a0f6:	6095      	str	r5, [r2, #8]
 800a0f8:	6298      	str	r0, [r3, #40]	@ 0x28
 800a0fa:	6803      	ldr	r3, [r0, #0]
 800a0fc:	f103 0301 	add.w	r3, r3, #1
 800a100:	6003      	str	r3, [r0, #0]
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a102:	bf08      	it	eq
 800a104:	4620      	moveq	r0, r4
    }
 800a106:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a10a:	bf18      	it	ne
 800a10c:	f04f 30ff 	movne.w	r0, #4294967295
 800a110:	f7ff bc8c 	b.w	8009a2c <prvAddCurrentTaskToDelayedList>
 800a114:	2006f52c 	.word	0x2006f52c

0800a118 <xTaskRemoveFromEventList>:
{
 800a118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a11a:	68c3      	ldr	r3, [r0, #12]
 800a11c:	68db      	ldr	r3, [r3, #12]
    configASSERT( pxUnblockedTCB );
 800a11e:	b913      	cbnz	r3, 800a126 <xTaskRemoveFromEventList+0xe>
 800a120:	f7fe ff98 	bl	8009054 <ulSetInterruptMask>
 800a124:	e7fe      	b.n	800a124 <xTaskRemoveFromEventList+0xc>
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 800a126:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800a128:	e9d3 0107 	ldrd	r0, r1, [r3, #28]
 800a12c:	6081      	str	r1, [r0, #8]
 800a12e:	6048      	str	r0, [r1, #4]
 800a130:	6850      	ldr	r0, [r2, #4]
 800a132:	f103 0418 	add.w	r4, r3, #24
 800a136:	42a0      	cmp	r0, r4
 800a138:	bf08      	it	eq
 800a13a:	6051      	streq	r1, [r2, #4]
 800a13c:	2100      	movs	r1, #0
 800a13e:	6299      	str	r1, [r3, #40]	@ 0x28
 800a140:	6811      	ldr	r1, [r2, #0]
 800a142:	3901      	subs	r1, #1
 800a144:	6011      	str	r1, [r2, #0]
    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a146:	4a1d      	ldr	r2, [pc, #116]	@ (800a1bc <xTaskRemoveFromEventList+0xa4>)
 800a148:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800a14a:	6812      	ldr	r2, [r2, #0]
 800a14c:	2a00      	cmp	r2, #0
 800a14e:	d129      	bne.n	800a1a4 <xTaskRemoveFromEventList+0x8c>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
 800a150:	e9d3 4002 	ldrd	r4, r0, [r3, #8]
 800a154:	695a      	ldr	r2, [r3, #20]
 800a156:	60a0      	str	r0, [r4, #8]
 800a158:	6044      	str	r4, [r0, #4]
 800a15a:	6854      	ldr	r4, [r2, #4]
 800a15c:	1d1d      	adds	r5, r3, #4
 800a15e:	42ac      	cmp	r4, r5
 800a160:	bf08      	it	eq
 800a162:	6050      	streq	r0, [r2, #4]
 800a164:	6810      	ldr	r0, [r2, #0]
 800a166:	3801      	subs	r0, #1
 800a168:	6010      	str	r0, [r2, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
 800a16a:	4a15      	ldr	r2, [pc, #84]	@ (800a1c0 <xTaskRemoveFromEventList+0xa8>)
 800a16c:	6810      	ldr	r0, [r2, #0]
 800a16e:	4281      	cmp	r1, r0
 800a170:	bf88      	it	hi
 800a172:	6011      	strhi	r1, [r2, #0]
 800a174:	2214      	movs	r2, #20
 800a176:	434a      	muls	r2, r1
 800a178:	4812      	ldr	r0, [pc, #72]	@ (800a1c4 <xTaskRemoveFromEventList+0xac>)
 800a17a:	1886      	adds	r6, r0, r2
 800a17c:	6874      	ldr	r4, [r6, #4]
 800a17e:	68a7      	ldr	r7, [r4, #8]
 800a180:	609c      	str	r4, [r3, #8]
 800a182:	60df      	str	r7, [r3, #12]
 800a184:	607d      	str	r5, [r7, #4]
 800a186:	60a5      	str	r5, [r4, #8]
 800a188:	615e      	str	r6, [r3, #20]
 800a18a:	5883      	ldr	r3, [r0, r2]
 800a18c:	3301      	adds	r3, #1
 800a18e:	5083      	str	r3, [r0, r2]
    if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a190:	4b0d      	ldr	r3, [pc, #52]	@ (800a1c8 <xTaskRemoveFromEventList+0xb0>)
 800a192:	681b      	ldr	r3, [r3, #0]
 800a194:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a196:	4299      	cmp	r1, r3
        xYieldPending = pdTRUE;
 800a198:	bf85      	ittet	hi
 800a19a:	2001      	movhi	r0, #1
 800a19c:	4b0b      	ldrhi	r3, [pc, #44]	@ (800a1cc <xTaskRemoveFromEventList+0xb4>)
        xReturn = pdFALSE;
 800a19e:	2000      	movls	r0, #0
        xYieldPending = pdTRUE;
 800a1a0:	6018      	strhi	r0, [r3, #0]
}
 800a1a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a1a4:	4a0a      	ldr	r2, [pc, #40]	@ (800a1d0 <xTaskRemoveFromEventList+0xb8>)
 800a1a6:	6850      	ldr	r0, [r2, #4]
 800a1a8:	6885      	ldr	r5, [r0, #8]
 800a1aa:	61d8      	str	r0, [r3, #28]
 800a1ac:	621d      	str	r5, [r3, #32]
 800a1ae:	606c      	str	r4, [r5, #4]
 800a1b0:	6084      	str	r4, [r0, #8]
 800a1b2:	629a      	str	r2, [r3, #40]	@ 0x28
 800a1b4:	6813      	ldr	r3, [r2, #0]
 800a1b6:	3301      	adds	r3, #1
 800a1b8:	6013      	str	r3, [r2, #0]
 800a1ba:	e7e9      	b.n	800a190 <xTaskRemoveFromEventList+0x78>
 800a1bc:	2006f034 	.word	0x2006f034
 800a1c0:	2006f050 	.word	0x2006f050
 800a1c4:	2006f0cc 	.word	0x2006f0cc
 800a1c8:	2006f52c 	.word	0x2006f52c
 800a1cc:	2006f044 	.word	0x2006f044
 800a1d0:	2006f088 	.word	0x2006f088

0800a1d4 <vTaskInternalSetTimeOutState>:
    pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a1d4:	4b03      	ldr	r3, [pc, #12]	@ (800a1e4 <vTaskInternalSetTimeOutState+0x10>)
 800a1d6:	681b      	ldr	r3, [r3, #0]
 800a1d8:	6003      	str	r3, [r0, #0]
    pxTimeOut->xTimeOnEntering = xTickCount;
 800a1da:	4b03      	ldr	r3, [pc, #12]	@ (800a1e8 <vTaskInternalSetTimeOutState+0x14>)
 800a1dc:	681b      	ldr	r3, [r3, #0]
 800a1de:	6043      	str	r3, [r0, #4]
}
 800a1e0:	4770      	bx	lr
 800a1e2:	bf00      	nop
 800a1e4:	2006f040 	.word	0x2006f040
 800a1e8:	2006f054 	.word	0x2006f054

0800a1ec <xTaskCheckForTimeOut>:
{
 800a1ec:	b570      	push	{r4, r5, r6, lr}
 800a1ee:	460d      	mov	r5, r1
    configASSERT( pxTimeOut );
 800a1f0:	4604      	mov	r4, r0
 800a1f2:	b910      	cbnz	r0, 800a1fa <xTaskCheckForTimeOut+0xe>
 800a1f4:	f7fe ff2e 	bl	8009054 <ulSetInterruptMask>
 800a1f8:	e7fe      	b.n	800a1f8 <xTaskCheckForTimeOut+0xc>
    configASSERT( pxTicksToWait );
 800a1fa:	b911      	cbnz	r1, 800a202 <xTaskCheckForTimeOut+0x16>
 800a1fc:	f7fe ff2a 	bl	8009054 <ulSetInterruptMask>
 800a200:	e7fe      	b.n	800a200 <xTaskCheckForTimeOut+0x14>
    taskENTER_CRITICAL();
 800a202:	f7fe fe4f 	bl	8008ea4 <vPortEnterCritical>
        const TickType_t xConstTickCount = xTickCount;
 800a206:	4b0f      	ldr	r3, [pc, #60]	@ (800a244 <xTaskCheckForTimeOut+0x58>)
 800a208:	6819      	ldr	r1, [r3, #0]
            if( *pxTicksToWait == portMAX_DELAY )
 800a20a:	682b      	ldr	r3, [r5, #0]
 800a20c:	1c5a      	adds	r2, r3, #1
 800a20e:	d017      	beq.n	800a240 <xTaskCheckForTimeOut+0x54>
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a210:	480d      	ldr	r0, [pc, #52]	@ (800a248 <xTaskCheckForTimeOut+0x5c>)
 800a212:	6826      	ldr	r6, [r4, #0]
 800a214:	6800      	ldr	r0, [r0, #0]
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a216:	6862      	ldr	r2, [r4, #4]
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a218:	4286      	cmp	r6, r0
 800a21a:	d008      	beq.n	800a22e <xTaskCheckForTimeOut+0x42>
 800a21c:	428a      	cmp	r2, r1
 800a21e:	d806      	bhi.n	800a22e <xTaskCheckForTimeOut+0x42>
            *pxTicksToWait = ( TickType_t ) 0;
 800a220:	2300      	movs	r3, #0
            xReturn = pdTRUE;
 800a222:	2401      	movs	r4, #1
            *pxTicksToWait = ( TickType_t ) 0;
 800a224:	602b      	str	r3, [r5, #0]
    taskEXIT_CRITICAL();
 800a226:	f7fe fe4b 	bl	8008ec0 <vPortExitCritical>
}
 800a22a:	4620      	mov	r0, r4
 800a22c:	bd70      	pop	{r4, r5, r6, pc}
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a22e:	1a88      	subs	r0, r1, r2
        else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a230:	4283      	cmp	r3, r0
 800a232:	d9f5      	bls.n	800a220 <xTaskCheckForTimeOut+0x34>
            *pxTicksToWait -= xElapsedTime;
 800a234:	1a5b      	subs	r3, r3, r1
 800a236:	4413      	add	r3, r2
            vTaskInternalSetTimeOutState( pxTimeOut );
 800a238:	4620      	mov	r0, r4
            *pxTicksToWait -= xElapsedTime;
 800a23a:	602b      	str	r3, [r5, #0]
            vTaskInternalSetTimeOutState( pxTimeOut );
 800a23c:	f7ff ffca 	bl	800a1d4 <vTaskInternalSetTimeOutState>
                xReturn = pdFALSE;
 800a240:	2400      	movs	r4, #0
 800a242:	e7f0      	b.n	800a226 <xTaskCheckForTimeOut+0x3a>
 800a244:	2006f054 	.word	0x2006f054
 800a248:	2006f040 	.word	0x2006f040

0800a24c <vTaskMissedYield>:
    xYieldPending = pdTRUE;
 800a24c:	2201      	movs	r2, #1
 800a24e:	4b01      	ldr	r3, [pc, #4]	@ (800a254 <vTaskMissedYield+0x8>)
 800a250:	601a      	str	r2, [r3, #0]
}
 800a252:	4770      	bx	lr
 800a254:	2006f044 	.word	0x2006f044

0800a258 <xTaskGetSchedulerState>:
        if( xSchedulerRunning == pdFALSE )
 800a258:	4b05      	ldr	r3, [pc, #20]	@ (800a270 <xTaskGetSchedulerState+0x18>)
 800a25a:	681b      	ldr	r3, [r3, #0]
 800a25c:	b133      	cbz	r3, 800a26c <xTaskGetSchedulerState+0x14>
            if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a25e:	4b05      	ldr	r3, [pc, #20]	@ (800a274 <xTaskGetSchedulerState+0x1c>)
 800a260:	6818      	ldr	r0, [r3, #0]
 800a262:	fab0 f080 	clz	r0, r0
 800a266:	0940      	lsrs	r0, r0, #5
 800a268:	0040      	lsls	r0, r0, #1
 800a26a:	4770      	bx	lr
            xReturn = taskSCHEDULER_NOT_STARTED;
 800a26c:	2001      	movs	r0, #1
    }
 800a26e:	4770      	bx	lr
 800a270:	2006f04c 	.word	0x2006f04c
 800a274:	2006f034 	.word	0x2006f034

0800a278 <xTaskPriorityInherit>:
    {
 800a278:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if( pxMutexHolder != NULL )
 800a27a:	4604      	mov	r4, r0
 800a27c:	2800      	cmp	r0, #0
 800a27e:	d02e      	beq.n	800a2de <xTaskPriorityInherit+0x66>
            if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a280:	4d1d      	ldr	r5, [pc, #116]	@ (800a2f8 <xTaskPriorityInherit+0x80>)
 800a282:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a284:	682a      	ldr	r2, [r5, #0]
 800a286:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800a288:	4293      	cmp	r3, r2
 800a28a:	d22d      	bcs.n	800a2e8 <xTaskPriorityInherit+0x70>
                if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a28c:	6982      	ldr	r2, [r0, #24]
                if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a28e:	4e1b      	ldr	r6, [pc, #108]	@ (800a2fc <xTaskPriorityInherit+0x84>)
                if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a290:	2a00      	cmp	r2, #0
                    listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a292:	bfa1      	itttt	ge
 800a294:	682a      	ldrge	r2, [r5, #0]
 800a296:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800a298:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800a29c:	6182      	strge	r2, [r0, #24]
                if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a29e:	2214      	movs	r2, #20
 800a2a0:	fb02 6303 	mla	r3, r2, r3, r6
 800a2a4:	6942      	ldr	r2, [r0, #20]
 800a2a6:	429a      	cmp	r2, r3
 800a2a8:	d11a      	bne.n	800a2e0 <xTaskPriorityInherit+0x68>
                    if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a2aa:	1d07      	adds	r7, r0, #4
 800a2ac:	4638      	mov	r0, r7
 800a2ae:	f7fe fdb6 	bl	8008e1e <uxListRemove>
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a2b2:	682b      	ldr	r3, [r5, #0]
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a2b4:	4a12      	ldr	r2, [pc, #72]	@ (800a300 <xTaskPriorityInherit+0x88>)
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a2b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a2b8:	6811      	ldr	r1, [r2, #0]
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a2ba:	62e3      	str	r3, [r4, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxMutexHolderTCB );
 800a2bc:	428b      	cmp	r3, r1
 800a2be:	bf88      	it	hi
 800a2c0:	6013      	strhi	r3, [r2, #0]
 800a2c2:	2214      	movs	r2, #20
 800a2c4:	4353      	muls	r3, r2
 800a2c6:	18f1      	adds	r1, r6, r3
 800a2c8:	684a      	ldr	r2, [r1, #4]
 800a2ca:	6890      	ldr	r0, [r2, #8]
 800a2cc:	60a2      	str	r2, [r4, #8]
 800a2ce:	60e0      	str	r0, [r4, #12]
 800a2d0:	6047      	str	r7, [r0, #4]
 800a2d2:	6097      	str	r7, [r2, #8]
 800a2d4:	58f2      	ldr	r2, [r6, r3]
 800a2d6:	6161      	str	r1, [r4, #20]
 800a2d8:	3201      	adds	r2, #1
 800a2da:	50f2      	str	r2, [r6, r3]
                xReturn = pdTRUE;
 800a2dc:	2001      	movs	r0, #1
    }
 800a2de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                    pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a2e0:	682b      	ldr	r3, [r5, #0]
 800a2e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a2e4:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800a2e6:	e7f9      	b.n	800a2dc <xTaskPriorityInherit+0x64>
                if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a2e8:	682b      	ldr	r3, [r5, #0]
 800a2ea:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800a2ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a2ee:	4298      	cmp	r0, r3
 800a2f0:	bf2c      	ite	cs
 800a2f2:	2000      	movcs	r0, #0
 800a2f4:	2001      	movcc	r0, #1
 800a2f6:	e7f2      	b.n	800a2de <xTaskPriorityInherit+0x66>
 800a2f8:	2006f52c 	.word	0x2006f52c
 800a2fc:	2006f0cc 	.word	0x2006f0cc
 800a300:	2006f050 	.word	0x2006f050

0800a304 <xTaskPriorityDisinherit>:
    {
 800a304:	b570      	push	{r4, r5, r6, lr}
        if( pxMutexHolder != NULL )
 800a306:	4604      	mov	r4, r0
 800a308:	b908      	cbnz	r0, 800a30e <xTaskPriorityDisinherit+0xa>
        BaseType_t xReturn = pdFALSE;
 800a30a:	2000      	movs	r0, #0
    }
 800a30c:	bd70      	pop	{r4, r5, r6, pc}
            configASSERT( pxTCB == pxCurrentTCB );
 800a30e:	4b19      	ldr	r3, [pc, #100]	@ (800a374 <xTaskPriorityDisinherit+0x70>)
 800a310:	681b      	ldr	r3, [r3, #0]
 800a312:	4283      	cmp	r3, r0
 800a314:	d002      	beq.n	800a31c <xTaskPriorityDisinherit+0x18>
 800a316:	f7fe fe9d 	bl	8009054 <ulSetInterruptMask>
 800a31a:	e7fe      	b.n	800a31a <xTaskPriorityDisinherit+0x16>
            configASSERT( pxTCB->uxMutexesHeld );
 800a31c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800a31e:	b913      	cbnz	r3, 800a326 <xTaskPriorityDisinherit+0x22>
 800a320:	f7fe fe98 	bl	8009054 <ulSetInterruptMask>
 800a324:	e7fe      	b.n	800a324 <xTaskPriorityDisinherit+0x20>
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a326:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800a328:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
            ( pxTCB->uxMutexesHeld )--;
 800a32a:	3b01      	subs	r3, #1
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a32c:	4291      	cmp	r1, r2
            ( pxTCB->uxMutexesHeld )--;
 800a32e:	6503      	str	r3, [r0, #80]	@ 0x50
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a330:	d0eb      	beq.n	800a30a <xTaskPriorityDisinherit+0x6>
                if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a332:	2b00      	cmp	r3, #0
 800a334:	d1e9      	bne.n	800a30a <xTaskPriorityDisinherit+0x6>
                    if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a336:	1d05      	adds	r5, r0, #4
 800a338:	4628      	mov	r0, r5
 800a33a:	f7fe fd70 	bl	8008e1e <uxListRemove>
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a33e:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
                    listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a340:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800a344:	61a2      	str	r2, [r4, #24]
                    prvAddTaskToReadyList( pxTCB );
 800a346:	4a0c      	ldr	r2, [pc, #48]	@ (800a378 <xTaskPriorityDisinherit+0x74>)
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a348:	62e3      	str	r3, [r4, #44]	@ 0x2c
                    prvAddTaskToReadyList( pxTCB );
 800a34a:	6811      	ldr	r1, [r2, #0]
 800a34c:	428b      	cmp	r3, r1
 800a34e:	f04f 0114 	mov.w	r1, #20
 800a352:	bf88      	it	hi
 800a354:	6013      	strhi	r3, [r2, #0]
 800a356:	434b      	muls	r3, r1
 800a358:	4a08      	ldr	r2, [pc, #32]	@ (800a37c <xTaskPriorityDisinherit+0x78>)
 800a35a:	18d0      	adds	r0, r2, r3
 800a35c:	6841      	ldr	r1, [r0, #4]
 800a35e:	688e      	ldr	r6, [r1, #8]
 800a360:	60a1      	str	r1, [r4, #8]
 800a362:	60e6      	str	r6, [r4, #12]
 800a364:	6075      	str	r5, [r6, #4]
 800a366:	608d      	str	r5, [r1, #8]
 800a368:	58d1      	ldr	r1, [r2, r3]
 800a36a:	6160      	str	r0, [r4, #20]
 800a36c:	3101      	adds	r1, #1
                    xReturn = pdTRUE;
 800a36e:	2001      	movs	r0, #1
                    prvAddTaskToReadyList( pxTCB );
 800a370:	50d1      	str	r1, [r2, r3]
        return xReturn;
 800a372:	e7cb      	b.n	800a30c <xTaskPriorityDisinherit+0x8>
 800a374:	2006f52c 	.word	0x2006f52c
 800a378:	2006f050 	.word	0x2006f050
 800a37c:	2006f0cc 	.word	0x2006f0cc

0800a380 <vTaskPriorityDisinheritAfterTimeout>:
    {
 800a380:	b570      	push	{r4, r5, r6, lr}
        if( pxMutexHolder != NULL )
 800a382:	4604      	mov	r4, r0
 800a384:	2800      	cmp	r0, #0
 800a386:	d03a      	beq.n	800a3fe <vTaskPriorityDisinheritAfterTimeout+0x7e>
            configASSERT( pxTCB->uxMutexesHeld );
 800a388:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800a38a:	b912      	cbnz	r2, 800a392 <vTaskPriorityDisinheritAfterTimeout+0x12>
 800a38c:	f7fe fe62 	bl	8009054 <ulSetInterruptMask>
 800a390:	e7fe      	b.n	800a390 <vTaskPriorityDisinheritAfterTimeout+0x10>
            if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a392:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800a394:	4299      	cmp	r1, r3
 800a396:	bf38      	it	cc
 800a398:	4619      	movcc	r1, r3
            if( pxTCB->uxPriority != uxPriorityToUse )
 800a39a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a39c:	428b      	cmp	r3, r1
 800a39e:	d02e      	beq.n	800a3fe <vTaskPriorityDisinheritAfterTimeout+0x7e>
                if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a3a0:	2a01      	cmp	r2, #1
 800a3a2:	d12c      	bne.n	800a3fe <vTaskPriorityDisinheritAfterTimeout+0x7e>
                    configASSERT( pxTCB != pxCurrentTCB );
 800a3a4:	4a16      	ldr	r2, [pc, #88]	@ (800a400 <vTaskPriorityDisinheritAfterTimeout+0x80>)
 800a3a6:	6812      	ldr	r2, [r2, #0]
 800a3a8:	4282      	cmp	r2, r0
 800a3aa:	d102      	bne.n	800a3b2 <vTaskPriorityDisinheritAfterTimeout+0x32>
 800a3ac:	f7fe fe52 	bl	8009054 <ulSetInterruptMask>
 800a3b0:	e7fe      	b.n	800a3b0 <vTaskPriorityDisinheritAfterTimeout+0x30>
                    if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a3b2:	6982      	ldr	r2, [r0, #24]
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a3b4:	4d13      	ldr	r5, [pc, #76]	@ (800a404 <vTaskPriorityDisinheritAfterTimeout+0x84>)
                    if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a3b6:	2a00      	cmp	r2, #0
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a3b8:	f04f 0214 	mov.w	r2, #20
 800a3bc:	fb02 5303 	mla	r3, r2, r3, r5
 800a3c0:	6942      	ldr	r2, [r0, #20]
                    pxTCB->uxPriority = uxPriorityToUse;
 800a3c2:	62c1      	str	r1, [r0, #44]	@ 0x2c
                        listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a3c4:	bfa4      	itt	ge
 800a3c6:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800a3ca:	6181      	strge	r1, [r0, #24]
                    if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a3cc:	429a      	cmp	r2, r3
 800a3ce:	d116      	bne.n	800a3fe <vTaskPriorityDisinheritAfterTimeout+0x7e>
                        if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a3d0:	1d06      	adds	r6, r0, #4
 800a3d2:	4630      	mov	r0, r6
 800a3d4:	f7fe fd23 	bl	8008e1e <uxListRemove>
                        prvAddTaskToReadyList( pxTCB );
 800a3d8:	4a0b      	ldr	r2, [pc, #44]	@ (800a408 <vTaskPriorityDisinheritAfterTimeout+0x88>)
 800a3da:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a3dc:	6811      	ldr	r1, [r2, #0]
 800a3de:	428b      	cmp	r3, r1
 800a3e0:	bf88      	it	hi
 800a3e2:	6013      	strhi	r3, [r2, #0]
 800a3e4:	2214      	movs	r2, #20
 800a3e6:	4353      	muls	r3, r2
 800a3e8:	18e9      	adds	r1, r5, r3
 800a3ea:	684a      	ldr	r2, [r1, #4]
 800a3ec:	6890      	ldr	r0, [r2, #8]
 800a3ee:	60a2      	str	r2, [r4, #8]
 800a3f0:	60e0      	str	r0, [r4, #12]
 800a3f2:	6046      	str	r6, [r0, #4]
 800a3f4:	6096      	str	r6, [r2, #8]
 800a3f6:	58ea      	ldr	r2, [r5, r3]
 800a3f8:	6161      	str	r1, [r4, #20]
 800a3fa:	3201      	adds	r2, #1
 800a3fc:	50ea      	str	r2, [r5, r3]
    }
 800a3fe:	bd70      	pop	{r4, r5, r6, pc}
 800a400:	2006f52c 	.word	0x2006f52c
 800a404:	2006f0cc 	.word	0x2006f0cc
 800a408:	2006f050 	.word	0x2006f050

0800a40c <pvTaskIncrementMutexHeldCount>:
        if( pxCurrentTCB != NULL )
 800a40c:	4b04      	ldr	r3, [pc, #16]	@ (800a420 <pvTaskIncrementMutexHeldCount+0x14>)
 800a40e:	681a      	ldr	r2, [r3, #0]
 800a410:	b11a      	cbz	r2, 800a41a <pvTaskIncrementMutexHeldCount+0xe>
            ( pxCurrentTCB->uxMutexesHeld )++;
 800a412:	6819      	ldr	r1, [r3, #0]
 800a414:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800a416:	3201      	adds	r2, #1
 800a418:	650a      	str	r2, [r1, #80]	@ 0x50
        return pxCurrentTCB;
 800a41a:	6818      	ldr	r0, [r3, #0]
    }
 800a41c:	4770      	bx	lr
 800a41e:	bf00      	nop
 800a420:	2006f52c 	.word	0x2006f52c

0800a424 <prvInsertTimerInActiveList>:
        BaseType_t xProcessTimerNow = pdFALSE;

        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

        if( xNextExpiryTime <= xTimeNow )
 800a424:	4291      	cmp	r1, r2
    {
 800a426:	b508      	push	{r3, lr}
        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a428:	6041      	str	r1, [r0, #4]
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a42a:	6100      	str	r0, [r0, #16]
        if( xNextExpiryTime <= xTimeNow )
 800a42c:	d80a      	bhi.n	800a444 <prvInsertTimerInActiveList+0x20>
        {
            /* Has the expiry time elapsed between the command to start/reset a
             * timer was issued, and the time the command was processed? */
            if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a42e:	1ad2      	subs	r2, r2, r3
 800a430:	6983      	ldr	r3, [r0, #24]
 800a432:	429a      	cmp	r2, r3
 800a434:	d20d      	bcs.n	800a452 <prvInsertTimerInActiveList+0x2e>
                 * processed actually exceeds the timers period.  */
                xProcessTimerNow = pdTRUE;
            }
            else
            {
                vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a436:	4b08      	ldr	r3, [pc, #32]	@ (800a458 <prvInsertTimerInActiveList+0x34>)
 800a438:	1d01      	adds	r1, r0, #4
                 * its expiry time and should be processed immediately. */
                xProcessTimerNow = pdTRUE;
            }
            else
            {
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a43a:	6818      	ldr	r0, [r3, #0]
 800a43c:	f7fe fcd8 	bl	8008df0 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
 800a440:	2000      	movs	r0, #0
            }
        }

        return xProcessTimerNow;
    }
 800a442:	bd08      	pop	{r3, pc}
            if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a444:	429a      	cmp	r2, r3
 800a446:	d201      	bcs.n	800a44c <prvInsertTimerInActiveList+0x28>
 800a448:	4299      	cmp	r1, r3
 800a44a:	d202      	bcs.n	800a452 <prvInsertTimerInActiveList+0x2e>
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a44c:	4b03      	ldr	r3, [pc, #12]	@ (800a45c <prvInsertTimerInActiveList+0x38>)
 800a44e:	1d01      	adds	r1, r0, #4
 800a450:	e7f3      	b.n	800a43a <prvInsertTimerInActiveList+0x16>
                xProcessTimerNow = pdTRUE;
 800a452:	2001      	movs	r0, #1
        return xProcessTimerNow;
 800a454:	e7f5      	b.n	800a442 <prvInsertTimerInActiveList+0x1e>
 800a456:	bf00      	nop
 800a458:	2006f62c 	.word	0x2006f62c
 800a45c:	2006f630 	.word	0x2006f630

0800a460 <prvReloadTimer>:
    {
 800a460:	b570      	push	{r4, r5, r6, lr}
 800a462:	4604      	mov	r4, r0
 800a464:	460d      	mov	r5, r1
 800a466:	4616      	mov	r6, r2
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
 800a468:	69a1      	ldr	r1, [r4, #24]
 800a46a:	462b      	mov	r3, r5
 800a46c:	4632      	mov	r2, r6
 800a46e:	4620      	mov	r0, r4
 800a470:	4429      	add	r1, r5
 800a472:	f7ff ffd7 	bl	800a424 <prvInsertTimerInActiveList>
 800a476:	b900      	cbnz	r0, 800a47a <prvReloadTimer+0x1a>
    }
 800a478:	bd70      	pop	{r4, r5, r6, pc}
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
 800a47a:	69a3      	ldr	r3, [r4, #24]
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a47c:	4620      	mov	r0, r4
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
 800a47e:	441d      	add	r5, r3
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a480:	6a23      	ldr	r3, [r4, #32]
 800a482:	4798      	blx	r3
 800a484:	e7f0      	b.n	800a468 <prvReloadTimer+0x8>
	...

0800a488 <prvProcessExpiredTimer>:
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a488:	4b0e      	ldr	r3, [pc, #56]	@ (800a4c4 <prvProcessExpiredTimer+0x3c>)
    {
 800a48a:	b570      	push	{r4, r5, r6, lr}
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a48c:	681b      	ldr	r3, [r3, #0]
    {
 800a48e:	4605      	mov	r5, r0
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a490:	68db      	ldr	r3, [r3, #12]
    {
 800a492:	460e      	mov	r6, r1
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a494:	68dc      	ldr	r4, [r3, #12]
        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a496:	1d20      	adds	r0, r4, #4
 800a498:	f7fe fcc1 	bl	8008e1e <uxListRemove>
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a49c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a4a0:	075a      	lsls	r2, r3, #29
 800a4a2:	d509      	bpl.n	800a4b8 <prvProcessExpiredTimer+0x30>
            prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
 800a4a4:	4632      	mov	r2, r6
 800a4a6:	4629      	mov	r1, r5
 800a4a8:	4620      	mov	r0, r4
 800a4aa:	f7ff ffd9 	bl	800a460 <prvReloadTimer>
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a4ae:	4620      	mov	r0, r4
 800a4b0:	6a23      	ldr	r3, [r4, #32]
    }
 800a4b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a4b6:	4718      	bx	r3
            pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a4b8:	f023 0301 	bic.w	r3, r3, #1
 800a4bc:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a4c0:	e7f5      	b.n	800a4ae <prvProcessExpiredTimer+0x26>
 800a4c2:	bf00      	nop
 800a4c4:	2006f630 	.word	0x2006f630

0800a4c8 <prvSampleTimeNow>:
    {
 800a4c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a4ca:	4605      	mov	r5, r0
        xTimeNow = xTaskGetTickCount();
 800a4cc:	f7ff fbee 	bl	8009cac <xTaskGetTickCount>
        if( xTimeNow < xLastTime )
 800a4d0:	4e0d      	ldr	r6, [pc, #52]	@ (800a508 <prvSampleTimeNow+0x40>)
        xTimeNow = xTaskGetTickCount();
 800a4d2:	4604      	mov	r4, r0
        if( xTimeNow < xLastTime )
 800a4d4:	6833      	ldr	r3, [r6, #0]
 800a4d6:	4283      	cmp	r3, r0
 800a4d8:	d909      	bls.n	800a4ee <prvSampleTimeNow+0x26>

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a4da:	4f0c      	ldr	r7, [pc, #48]	@ (800a50c <prvSampleTimeNow+0x44>)
 800a4dc:	683b      	ldr	r3, [r7, #0]
 800a4de:	681a      	ldr	r2, [r3, #0]
 800a4e0:	b952      	cbnz	r2, 800a4f8 <prvSampleTimeNow+0x30>
             * expirations must wait until after the lists are switched. */
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
 800a4e2:	4a0b      	ldr	r2, [pc, #44]	@ (800a510 <prvSampleTimeNow+0x48>)
 800a4e4:	6811      	ldr	r1, [r2, #0]
        pxOverflowTimerList = pxTemp;
 800a4e6:	6013      	str	r3, [r2, #0]
        pxCurrentTimerList = pxOverflowTimerList;
 800a4e8:	6039      	str	r1, [r7, #0]
            *pxTimerListsWereSwitched = pdTRUE;
 800a4ea:	2301      	movs	r3, #1
 800a4ec:	e000      	b.n	800a4f0 <prvSampleTimeNow+0x28>
 800a4ee:	2300      	movs	r3, #0
    }
 800a4f0:	4620      	mov	r0, r4
            *pxTimerListsWereSwitched = pdTRUE;
 800a4f2:	602b      	str	r3, [r5, #0]
        xLastTime = xTimeNow;
 800a4f4:	6034      	str	r4, [r6, #0]
    }
 800a4f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a4f8:	68db      	ldr	r3, [r3, #12]
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
 800a4fa:	f04f 31ff 	mov.w	r1, #4294967295
 800a4fe:	6818      	ldr	r0, [r3, #0]
 800a500:	f7ff ffc2 	bl	800a488 <prvProcessExpiredTimer>
 800a504:	e7ea      	b.n	800a4dc <prvSampleTimeNow+0x14>
 800a506:	bf00      	nop
 800a508:	2006f620 	.word	0x2006f620
 800a50c:	2006f630 	.word	0x2006f630
 800a510:	2006f62c 	.word	0x2006f62c

0800a514 <prvTimerTask>:
    {
 800a514:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a518:	4f51      	ldr	r7, [pc, #324]	@ (800a660 <prvTimerTask+0x14c>)
 800a51a:	4e52      	ldr	r6, [pc, #328]	@ (800a664 <prvTimerTask+0x150>)
    {
 800a51c:	b086      	sub	sp, #24
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a51e:	683b      	ldr	r3, [r7, #0]
 800a520:	f8d3 8000 	ldr.w	r8, [r3]
 800a524:	f1b8 0f00 	cmp.w	r8, #0
 800a528:	d032      	beq.n	800a590 <prvTimerTask+0x7c>
 800a52a:	2400      	movs	r4, #0
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a52c:	68db      	ldr	r3, [r3, #12]
 800a52e:	f8d3 8000 	ldr.w	r8, [r3]
        vTaskSuspendAll();
 800a532:	f7ff fbb3 	bl	8009c9c <vTaskSuspendAll>
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a536:	a802      	add	r0, sp, #8
 800a538:	f7ff ffc6 	bl	800a4c8 <prvSampleTimeNow>
            if( xTimerListsWereSwitched == pdFALSE )
 800a53c:	9b02      	ldr	r3, [sp, #8]
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a53e:	4605      	mov	r5, r0
            if( xTimerListsWereSwitched == pdFALSE )
 800a540:	2b00      	cmp	r3, #0
 800a542:	d13a      	bne.n	800a5ba <prvTimerTask+0xa6>
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a544:	bb34      	cbnz	r4, 800a594 <prvTimerTask+0x80>
 800a546:	4540      	cmp	r0, r8
 800a548:	d32a      	bcc.n	800a5a0 <prvTimerTask+0x8c>
                    ( void ) xTaskResumeAll();
 800a54a:	f7ff fc65 	bl	8009e18 <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 800a54e:	4629      	mov	r1, r5
 800a550:	4640      	mov	r0, r8
 800a552:	f7ff ff99 	bl	800a488 <prvProcessExpiredTimer>
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a556:	2200      	movs	r2, #0
 800a558:	6830      	ldr	r0, [r6, #0]
 800a55a:	a902      	add	r1, sp, #8
 800a55c:	f7ff f825 	bl	80095aa <xQueueReceive>
 800a560:	2800      	cmp	r0, #0
 800a562:	d0dc      	beq.n	800a51e <prvTimerTask+0xa>
                    if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a564:	9b02      	ldr	r3, [sp, #8]
                        pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a566:	9804      	ldr	r0, [sp, #16]
                    if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a568:	2b00      	cmp	r3, #0
 800a56a:	db29      	blt.n	800a5c0 <prvTimerTask+0xac>
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a56c:	9c04      	ldr	r4, [sp, #16]
                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a56e:	6963      	ldr	r3, [r4, #20]
 800a570:	bb6b      	cbnz	r3, 800a5ce <prvTimerTask+0xba>
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a572:	a801      	add	r0, sp, #4
 800a574:	f7ff ffa8 	bl	800a4c8 <prvSampleTimeNow>
                switch( xMessage.xMessageID )
 800a578:	9b02      	ldr	r3, [sp, #8]
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a57a:	4605      	mov	r5, r0
                switch( xMessage.xMessageID )
 800a57c:	3b01      	subs	r3, #1
 800a57e:	2b08      	cmp	r3, #8
 800a580:	d8e9      	bhi.n	800a556 <prvTimerTask+0x42>
 800a582:	e8df f003 	tbb	[pc, r3]
 800a586:	2828      	.short	0x2828
 800a588:	2865524b 	.word	0x2865524b
 800a58c:	4b28      	.short	0x4b28
 800a58e:	52          	.byte	0x52
 800a58f:	00          	.byte	0x00
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a590:	2401      	movs	r4, #1
 800a592:	e7ce      	b.n	800a532 <prvTimerTask+0x1e>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a594:	4b34      	ldr	r3, [pc, #208]	@ (800a668 <prvTimerTask+0x154>)
 800a596:	681b      	ldr	r3, [r3, #0]
 800a598:	681c      	ldr	r4, [r3, #0]
 800a59a:	fab4 f484 	clz	r4, r4
 800a59e:	0964      	lsrs	r4, r4, #5
                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a5a0:	4622      	mov	r2, r4
 800a5a2:	6830      	ldr	r0, [r6, #0]
 800a5a4:	eba8 0105 	sub.w	r1, r8, r5
 800a5a8:	f7ff f99d 	bl	80098e6 <vQueueWaitForMessageRestricted>
                    if( xTaskResumeAll() == pdFALSE )
 800a5ac:	f7ff fc34 	bl	8009e18 <xTaskResumeAll>
 800a5b0:	2800      	cmp	r0, #0
 800a5b2:	d1d0      	bne.n	800a556 <prvTimerTask+0x42>
                        portYIELD_WITHIN_API();
 800a5b4:	f7fe fc6a 	bl	8008e8c <vPortYield>
 800a5b8:	e7cd      	b.n	800a556 <prvTimerTask+0x42>
                ( void ) xTaskResumeAll();
 800a5ba:	f7ff fc2d 	bl	8009e18 <xTaskResumeAll>
    }
 800a5be:	e7ca      	b.n	800a556 <prvTimerTask+0x42>
                        pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a5c0:	9b03      	ldr	r3, [sp, #12]
 800a5c2:	9905      	ldr	r1, [sp, #20]
 800a5c4:	4798      	blx	r3
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a5c6:	9b02      	ldr	r3, [sp, #8]
 800a5c8:	2b00      	cmp	r3, #0
 800a5ca:	dbc4      	blt.n	800a556 <prvTimerTask+0x42>
 800a5cc:	e7ce      	b.n	800a56c <prvTimerTask+0x58>
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a5ce:	1d20      	adds	r0, r4, #4
 800a5d0:	f7fe fc25 	bl	8008e1e <uxListRemove>
 800a5d4:	e7cd      	b.n	800a572 <prvTimerTask+0x5e>
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a5d6:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a5da:	69a1      	ldr	r1, [r4, #24]
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a5dc:	f043 0301 	orr.w	r3, r3, #1
 800a5e0:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a5e4:	9b03      	ldr	r3, [sp, #12]
 800a5e6:	4602      	mov	r2, r0
 800a5e8:	4419      	add	r1, r3
 800a5ea:	4620      	mov	r0, r4
 800a5ec:	f7ff ff1a 	bl	800a424 <prvInsertTimerInActiveList>
 800a5f0:	2800      	cmp	r0, #0
 800a5f2:	d0b0      	beq.n	800a556 <prvTimerTask+0x42>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a5f4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a5f8:	0759      	lsls	r1, r3, #29
 800a5fa:	d50a      	bpl.n	800a612 <prvTimerTask+0xfe>
                                prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow );
 800a5fc:	69a3      	ldr	r3, [r4, #24]
 800a5fe:	9903      	ldr	r1, [sp, #12]
 800a600:	462a      	mov	r2, r5
 800a602:	4620      	mov	r0, r4
 800a604:	4419      	add	r1, r3
 800a606:	f7ff ff2b 	bl	800a460 <prvReloadTimer>
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a60a:	4620      	mov	r0, r4
 800a60c:	6a23      	ldr	r3, [r4, #32]
 800a60e:	4798      	blx	r3
 800a610:	e7a1      	b.n	800a556 <prvTimerTask+0x42>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a612:	f023 0301 	bic.w	r3, r3, #1
 800a616:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a61a:	e7f6      	b.n	800a60a <prvTimerTask+0xf6>
                        pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a61c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
                                    pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 800a620:	f023 0301 	bic.w	r3, r3, #1
 800a624:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a628:	e795      	b.n	800a556 <prvTimerTask+0x42>
                        pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a62a:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a62e:	f043 0301 	orr.w	r3, r3, #1
 800a632:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a636:	9903      	ldr	r1, [sp, #12]
 800a638:	61a1      	str	r1, [r4, #24]
                        configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a63a:	b911      	cbnz	r1, 800a642 <prvTimerTask+0x12e>
 800a63c:	f7fe fd0a 	bl	8009054 <ulSetInterruptMask>
 800a640:	e7fe      	b.n	800a640 <prvTimerTask+0x12c>
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a642:	4603      	mov	r3, r0
 800a644:	4602      	mov	r2, r0
 800a646:	4401      	add	r1, r0
 800a648:	4620      	mov	r0, r4
 800a64a:	f7ff feeb 	bl	800a424 <prvInsertTimerInActiveList>
                        break;
 800a64e:	e782      	b.n	800a556 <prvTimerTask+0x42>
                                if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a650:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a654:	079a      	lsls	r2, r3, #30
 800a656:	d4e3      	bmi.n	800a620 <prvTimerTask+0x10c>
                                    vPortFree( pxTimer );
 800a658:	4620      	mov	r0, r4
 800a65a:	f000 f91d 	bl	800a898 <vPortFree>
 800a65e:	e77a      	b.n	800a556 <prvTimerTask+0x42>
 800a660:	2006f630 	.word	0x2006f630
 800a664:	2006f628 	.word	0x2006f628
 800a668:	2006f62c 	.word	0x2006f62c

0800a66c <prvCheckForValidListAndQueue>:
    }
/*-----------------------------------------------------------*/

    static void prvCheckForValidListAndQueue( void )
    {
 800a66c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        /* Check that the list from which active timers are referenced, and the
         * queue used to communicate with the timer service, have been
         * initialised. */
        taskENTER_CRITICAL();
        {
            if( xTimerQueue == NULL )
 800a66e:	4c11      	ldr	r4, [pc, #68]	@ (800a6b4 <prvCheckForValidListAndQueue+0x48>)
        taskENTER_CRITICAL();
 800a670:	f7fe fc18 	bl	8008ea4 <vPortEnterCritical>
            if( xTimerQueue == NULL )
 800a674:	6825      	ldr	r5, [r4, #0]
 800a676:	b9bd      	cbnz	r5, 800a6a8 <prvCheckForValidListAndQueue+0x3c>
            {
                vListInitialise( &xActiveTimerList1 );
 800a678:	4f0f      	ldr	r7, [pc, #60]	@ (800a6b8 <prvCheckForValidListAndQueue+0x4c>)
                vListInitialise( &xActiveTimerList2 );
 800a67a:	4e10      	ldr	r6, [pc, #64]	@ (800a6bc <prvCheckForValidListAndQueue+0x50>)
                vListInitialise( &xActiveTimerList1 );
 800a67c:	4638      	mov	r0, r7
 800a67e:	f7fe fba9 	bl	8008dd4 <vListInitialise>
                vListInitialise( &xActiveTimerList2 );
 800a682:	4630      	mov	r0, r6
 800a684:	f7fe fba6 	bl	8008dd4 <vListInitialise>
                pxCurrentTimerList = &xActiveTimerList1;
 800a688:	4b0d      	ldr	r3, [pc, #52]	@ (800a6c0 <prvCheckForValidListAndQueue+0x54>)
                        /* The timer queue is allocated statically in case
                         * configSUPPORT_DYNAMIC_ALLOCATION is 0. */
                        PRIVILEGED_DATA static StaticQueue_t xStaticTimerQueue;                                                                          /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
                        PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a68a:	2110      	movs	r1, #16
                pxCurrentTimerList = &xActiveTimerList1;
 800a68c:	601f      	str	r7, [r3, #0]
                pxOverflowTimerList = &xActiveTimerList2;
 800a68e:	4b0d      	ldr	r3, [pc, #52]	@ (800a6c4 <prvCheckForValidListAndQueue+0x58>)
                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a690:	200a      	movs	r0, #10
                pxOverflowTimerList = &xActiveTimerList2;
 800a692:	601e      	str	r6, [r3, #0]
                        xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a694:	4a0c      	ldr	r2, [pc, #48]	@ (800a6c8 <prvCheckForValidListAndQueue+0x5c>)
 800a696:	4b0d      	ldr	r3, [pc, #52]	@ (800a6cc <prvCheckForValidListAndQueue+0x60>)
 800a698:	9500      	str	r5, [sp, #0]
 800a69a:	f7fe fe00 	bl	800929e <xQueueGenericCreateStatic>
 800a69e:	6020      	str	r0, [r4, #0]
                    }
                #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */

                #if ( configQUEUE_REGISTRY_SIZE > 0 )
                    {
                        if( xTimerQueue != NULL )
 800a6a0:	b110      	cbz	r0, 800a6a8 <prvCheckForValidListAndQueue+0x3c>
                        {
                            vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a6a2:	490b      	ldr	r1, [pc, #44]	@ (800a6d0 <prvCheckForValidListAndQueue+0x64>)
 800a6a4:	f7ff f8d0 	bl	8009848 <vQueueAddToRegistry>
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
    }
 800a6a8:	b003      	add	sp, #12
 800a6aa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        taskEXIT_CRITICAL();
 800a6ae:	f7fe bc07 	b.w	8008ec0 <vPortExitCritical>
 800a6b2:	bf00      	nop
 800a6b4:	2006f628 	.word	0x2006f628
 800a6b8:	2006f648 	.word	0x2006f648
 800a6bc:	2006f634 	.word	0x2006f634
 800a6c0:	2006f630 	.word	0x2006f630
 800a6c4:	2006f62c 	.word	0x2006f62c
 800a6c8:	2006f580 	.word	0x2006f580
 800a6cc:	2006f530 	.word	0x2006f530
 800a6d0:	08035915 	.word	0x08035915

0800a6d4 <xTimerCreateTimerTask>:
    {
 800a6d4:	b510      	push	{r4, lr}
 800a6d6:	b088      	sub	sp, #32
        prvCheckForValidListAndQueue();
 800a6d8:	f7ff ffc8 	bl	800a66c <prvCheckForValidListAndQueue>
        if( xTimerQueue != NULL )
 800a6dc:	4b0f      	ldr	r3, [pc, #60]	@ (800a71c <xTimerCreateTimerTask+0x48>)
 800a6de:	681b      	ldr	r3, [r3, #0]
 800a6e0:	b1b3      	cbz	r3, 800a710 <xTimerCreateTimerTask+0x3c>
                    StaticTask_t * pxTimerTaskTCBBuffer = NULL;
 800a6e2:	2400      	movs	r4, #0
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a6e4:	aa07      	add	r2, sp, #28
 800a6e6:	a906      	add	r1, sp, #24
 800a6e8:	a805      	add	r0, sp, #20
                    StackType_t * pxTimerTaskStackBuffer = NULL;
 800a6ea:	e9cd 4405 	strd	r4, r4, [sp, #20]
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a6ee:	f7fe fb65 	bl	8008dbc <vApplicationGetTimerTaskMemory>
                    xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 800a6f2:	9b05      	ldr	r3, [sp, #20]
 800a6f4:	9a07      	ldr	r2, [sp, #28]
 800a6f6:	9302      	str	r3, [sp, #8]
 800a6f8:	9b06      	ldr	r3, [sp, #24]
 800a6fa:	4909      	ldr	r1, [pc, #36]	@ (800a720 <xTimerCreateTimerTask+0x4c>)
 800a6fc:	9301      	str	r3, [sp, #4]
 800a6fe:	2302      	movs	r3, #2
 800a700:	4808      	ldr	r0, [pc, #32]	@ (800a724 <xTimerCreateTimerTask+0x50>)
 800a702:	9300      	str	r3, [sp, #0]
 800a704:	4623      	mov	r3, r4
 800a706:	f7ff fa74 	bl	8009bf2 <xTaskCreateStatic>
 800a70a:	4b07      	ldr	r3, [pc, #28]	@ (800a728 <xTimerCreateTimerTask+0x54>)
 800a70c:	6018      	str	r0, [r3, #0]
                    if( xTimerTaskHandle != NULL )
 800a70e:	b910      	cbnz	r0, 800a716 <xTimerCreateTimerTask+0x42>
        configASSERT( xReturn );
 800a710:	f7fe fca0 	bl	8009054 <ulSetInterruptMask>
 800a714:	e7fe      	b.n	800a714 <xTimerCreateTimerTask+0x40>
    }
 800a716:	2001      	movs	r0, #1
 800a718:	b008      	add	sp, #32
 800a71a:	bd10      	pop	{r4, pc}
 800a71c:	2006f628 	.word	0x2006f628
 800a720:	0803591a 	.word	0x0803591a
 800a724:	0800a515 	.word	0x0800a515
 800a728:	2006f624 	.word	0x2006f624

0800a72c <prvInsertBlockIntoFreeList>:
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t * pxBlockToInsert ) /* PRIVILEGED_FUNCTION */
{
 800a72c:	b510      	push	{r4, lr}
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a72e:	4b10      	ldr	r3, [pc, #64]	@ (800a770 <prvInsertBlockIntoFreeList+0x44>)
 800a730:	461a      	mov	r2, r3
 800a732:	681b      	ldr	r3, [r3, #0]
 800a734:	4283      	cmp	r3, r0
 800a736:	d3fb      	bcc.n	800a730 <prvInsertBlockIntoFreeList+0x4>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800a738:	6854      	ldr	r4, [r2, #4]
 800a73a:	1911      	adds	r1, r2, r4
 800a73c:	4288      	cmp	r0, r1
    {
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800a73e:	bf01      	itttt	eq
 800a740:	6841      	ldreq	r1, [r0, #4]
 800a742:	4610      	moveq	r0, r2
 800a744:	1909      	addeq	r1, r1, r4
 800a746:	6051      	streq	r1, [r2, #4]

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800a748:	6844      	ldr	r4, [r0, #4]
 800a74a:	1901      	adds	r1, r0, r4
 800a74c:	428b      	cmp	r3, r1
 800a74e:	d10c      	bne.n	800a76a <prvInsertBlockIntoFreeList+0x3e>
    {
        if( pxIterator->pxNextFreeBlock != pxEnd )
 800a750:	4908      	ldr	r1, [pc, #32]	@ (800a774 <prvInsertBlockIntoFreeList+0x48>)
 800a752:	6809      	ldr	r1, [r1, #0]
 800a754:	428b      	cmp	r3, r1
 800a756:	d003      	beq.n	800a760 <prvInsertBlockIntoFreeList+0x34>
        {
            /* Form one big block from the two blocks. */
            pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800a758:	6859      	ldr	r1, [r3, #4]
 800a75a:	4421      	add	r1, r4
 800a75c:	6041      	str	r1, [r0, #4]
            pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800a75e:	6819      	ldr	r1, [r3, #0]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
 800a760:	4290      	cmp	r0, r2
            pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800a762:	6001      	str	r1, [r0, #0]
    {
        pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800a764:	bf18      	it	ne
 800a766:	6010      	strne	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }
}
 800a768:	bd10      	pop	{r4, pc}
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a76a:	4619      	mov	r1, r3
 800a76c:	e7f8      	b.n	800a760 <prvInsertBlockIntoFreeList+0x34>
 800a76e:	bf00      	nop
 800a770:	2006f674 	.word	0x2006f674
 800a774:	2006f670 	.word	0x2006f670

0800a778 <pvPortMalloc>:
{
 800a778:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a77c:	4605      	mov	r5, r0
    vTaskSuspendAll();
 800a77e:	f7ff fa8d 	bl	8009c9c <vTaskSuspendAll>
        if( pxEnd == NULL )
 800a782:	493c      	ldr	r1, [pc, #240]	@ (800a874 <pvPortMalloc+0xfc>)
 800a784:	4c3c      	ldr	r4, [pc, #240]	@ (800a878 <pvPortMalloc+0x100>)
 800a786:	680b      	ldr	r3, [r1, #0]
 800a788:	b9f3      	cbnz	r3, 800a7c8 <pvPortMalloc+0x50>
    xStart.xBlockSize = ( size_t ) 0;
 800a78a:	2000      	movs	r0, #0
    uxAddress = ( size_t ) ucHeap;
 800a78c:	4a3b      	ldr	r2, [pc, #236]	@ (800a87c <pvPortMalloc+0x104>)
    if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800a78e:	0756      	lsls	r6, r2, #29
        uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800a790:	bf1d      	ittte	ne
 800a792:	3207      	addne	r2, #7
        xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800a794:	4b3a      	ldrne	r3, [pc, #232]	@ (800a880 <pvPortMalloc+0x108>)
        uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a796:	f022 0207 	bicne.w	r2, r2, #7
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800a79a:	4b3a      	ldreq	r3, [pc, #232]	@ (800a884 <pvPortMalloc+0x10c>)
        xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800a79c:	bf18      	it	ne
 800a79e:	1a9b      	subne	r3, r3, r2
    uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800a7a0:	4413      	add	r3, r2
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a7a2:	4e39      	ldr	r6, [pc, #228]	@ (800a888 <pvPortMalloc+0x110>)
    uxAddress -= xHeapStructSize;
 800a7a4:	3b08      	subs	r3, #8
    uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a7a6:	f023 0307 	bic.w	r3, r3, #7
    xStart.xBlockSize = ( size_t ) 0;
 800a7aa:	6070      	str	r0, [r6, #4]
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a7ac:	6032      	str	r2, [r6, #0]
    pxEnd->pxNextFreeBlock = NULL;
 800a7ae:	e9c3 0000 	strd	r0, r0, [r3]
    pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800a7b2:	1a98      	subs	r0, r3, r2
    pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800a7b4:	e9c2 3000 	strd	r3, r0, [r2]
    pxEnd = ( void * ) uxAddress;
 800a7b8:	600b      	str	r3, [r1, #0]
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a7ba:	4b34      	ldr	r3, [pc, #208]	@ (800a88c <pvPortMalloc+0x114>)
 800a7bc:	6018      	str	r0, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a7be:	4b34      	ldr	r3, [pc, #208]	@ (800a890 <pvPortMalloc+0x118>)
 800a7c0:	6018      	str	r0, [r3, #0]
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800a7c2:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800a7c6:	6023      	str	r3, [r4, #0]
        if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800a7c8:	6827      	ldr	r7, [r4, #0]
 800a7ca:	ea17 0405 	ands.w	r4, r7, r5
 800a7ce:	d14b      	bne.n	800a868 <pvPortMalloc+0xf0>
            if( ( xWantedSize > 0 ) &&
 800a7d0:	1e6b      	subs	r3, r5, #1
 800a7d2:	330a      	adds	r3, #10
 800a7d4:	d808      	bhi.n	800a7e8 <pvPortMalloc+0x70>
                if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800a7d6:	0768      	lsls	r0, r5, #29
                xWantedSize += xHeapStructSize;
 800a7d8:	f105 0208 	add.w	r2, r5, #8
                if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800a7dc:	d00b      	beq.n	800a7f6 <pvPortMalloc+0x7e>
                    if( ( xWantedSize + ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) ) )
 800a7de:	f022 0307 	bic.w	r3, r2, #7
 800a7e2:	3308      	adds	r3, #8
 800a7e4:	4293      	cmp	r3, r2
 800a7e6:	d807      	bhi.n	800a7f8 <pvPortMalloc+0x80>
    ( void ) xTaskResumeAll();
 800a7e8:	f7ff fb16 	bl	8009e18 <xTaskResumeAll>
    configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800a7ec:	0763      	lsls	r3, r4, #29
 800a7ee:	d03d      	beq.n	800a86c <pvPortMalloc+0xf4>
 800a7f0:	f7fe fc30 	bl	8009054 <ulSetInterruptMask>
 800a7f4:	e7fe      	b.n	800a7f4 <pvPortMalloc+0x7c>
 800a7f6:	4613      	mov	r3, r2
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800a7f8:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 800a890 <pvPortMalloc+0x118>
 800a7fc:	f8d8 6000 	ldr.w	r6, [r8]
 800a800:	429e      	cmp	r6, r3
 800a802:	d331      	bcc.n	800a868 <pvPortMalloc+0xf0>
                pxBlock = xStart.pxNextFreeBlock;
 800a804:	4a20      	ldr	r2, [pc, #128]	@ (800a888 <pvPortMalloc+0x110>)
 800a806:	6815      	ldr	r5, [r2, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800a808:	6868      	ldr	r0, [r5, #4]
 800a80a:	4298      	cmp	r0, r3
 800a80c:	d201      	bcs.n	800a812 <pvPortMalloc+0x9a>
 800a80e:	682c      	ldr	r4, [r5, #0]
 800a810:	b984      	cbnz	r4, 800a834 <pvPortMalloc+0xbc>
                if( pxBlock != pxEnd )
 800a812:	6809      	ldr	r1, [r1, #0]
 800a814:	42a9      	cmp	r1, r5
 800a816:	d027      	beq.n	800a868 <pvPortMalloc+0xf0>
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a818:	6829      	ldr	r1, [r5, #0]
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a81a:	6814      	ldr	r4, [r2, #0]
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a81c:	6011      	str	r1, [r2, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a81e:	1ac2      	subs	r2, r0, r3
 800a820:	2a10      	cmp	r2, #16
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a822:	f104 0408 	add.w	r4, r4, #8
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a826:	d90c      	bls.n	800a842 <pvPortMalloc+0xca>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800a828:	18e8      	adds	r0, r5, r3
                        configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800a82a:	0741      	lsls	r1, r0, #29
 800a82c:	d005      	beq.n	800a83a <pvPortMalloc+0xc2>
 800a82e:	f7fe fc11 	bl	8009054 <ulSetInterruptMask>
 800a832:	e7fe      	b.n	800a832 <pvPortMalloc+0xba>
 800a834:	462a      	mov	r2, r5
 800a836:	4625      	mov	r5, r4
 800a838:	e7e6      	b.n	800a808 <pvPortMalloc+0x90>
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800a83a:	6042      	str	r2, [r0, #4]
                        pxBlock->xBlockSize = xWantedSize;
 800a83c:	606b      	str	r3, [r5, #4]
                        prvInsertBlockIntoFreeList( pxNewBlockLink );
 800a83e:	f7ff ff75 	bl	800a72c <prvInsertBlockIntoFreeList>
                    pxBlock->pxNextFreeBlock = NULL;
 800a842:	2300      	movs	r3, #0
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a844:	686a      	ldr	r2, [r5, #4]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a846:	4911      	ldr	r1, [pc, #68]	@ (800a88c <pvPortMalloc+0x114>)
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a848:	1ab6      	subs	r6, r6, r2
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a84a:	4317      	orrs	r7, r2
                    xNumberOfSuccessfulAllocations++;
 800a84c:	4a11      	ldr	r2, [pc, #68]	@ (800a894 <pvPortMalloc+0x11c>)
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a84e:	6808      	ldr	r0, [r1, #0]
                    pxBlock->pxNextFreeBlock = NULL;
 800a850:	602b      	str	r3, [r5, #0]
                    xNumberOfSuccessfulAllocations++;
 800a852:	6813      	ldr	r3, [r2, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a854:	4286      	cmp	r6, r0
                    xNumberOfSuccessfulAllocations++;
 800a856:	f103 0301 	add.w	r3, r3, #1
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a85a:	f8c8 6000 	str.w	r6, [r8]
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800a85e:	bf38      	it	cc
 800a860:	600e      	strcc	r6, [r1, #0]
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a862:	606f      	str	r7, [r5, #4]
                    xNumberOfSuccessfulAllocations++;
 800a864:	6013      	str	r3, [r2, #0]
 800a866:	e7bf      	b.n	800a7e8 <pvPortMalloc+0x70>
    void * pvReturn = NULL;
 800a868:	2400      	movs	r4, #0
 800a86a:	e7bd      	b.n	800a7e8 <pvPortMalloc+0x70>
}
 800a86c:	4620      	mov	r0, r4
 800a86e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a872:	bf00      	nop
 800a874:	2006f670 	.word	0x2006f670
 800a878:	2006f65c 	.word	0x2006f65c
 800a87c:	2006f67c 	.word	0x2006f67c
 800a880:	20082efc 	.word	0x20082efc
 800a884:	00013880 	.word	0x00013880
 800a888:	2006f674 	.word	0x2006f674
 800a88c:	2006f668 	.word	0x2006f668
 800a890:	2006f66c 	.word	0x2006f66c
 800a894:	2006f664 	.word	0x2006f664

0800a898 <vPortFree>:
{
 800a898:	b510      	push	{r4, lr}
    if( pv != NULL )
 800a89a:	4604      	mov	r4, r0
 800a89c:	b330      	cbz	r0, 800a8ec <vPortFree+0x54>
        configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800a89e:	4a14      	ldr	r2, [pc, #80]	@ (800a8f0 <vPortFree+0x58>)
 800a8a0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800a8a4:	6812      	ldr	r2, [r2, #0]
 800a8a6:	4213      	tst	r3, r2
 800a8a8:	d102      	bne.n	800a8b0 <vPortFree+0x18>
 800a8aa:	f7fe fbd3 	bl	8009054 <ulSetInterruptMask>
 800a8ae:	e7fe      	b.n	800a8ae <vPortFree+0x16>
        configASSERT( pxLink->pxNextFreeBlock == NULL );
 800a8b0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800a8b4:	b111      	cbz	r1, 800a8bc <vPortFree+0x24>
 800a8b6:	f7fe fbcd 	bl	8009054 <ulSetInterruptMask>
 800a8ba:	e7fe      	b.n	800a8ba <vPortFree+0x22>
                pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800a8bc:	ea23 0302 	bic.w	r3, r3, r2
 800a8c0:	f840 3c04 	str.w	r3, [r0, #-4]
                vTaskSuspendAll();
 800a8c4:	f7ff f9ea 	bl	8009c9c <vTaskSuspendAll>
                    xFreeBytesRemaining += pxLink->xBlockSize;
 800a8c8:	4a0a      	ldr	r2, [pc, #40]	@ (800a8f4 <vPortFree+0x5c>)
 800a8ca:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a8ce:	6811      	ldr	r1, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a8d0:	f1a4 0008 	sub.w	r0, r4, #8
                    xFreeBytesRemaining += pxLink->xBlockSize;
 800a8d4:	440b      	add	r3, r1
 800a8d6:	6013      	str	r3, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a8d8:	f7ff ff28 	bl	800a72c <prvInsertBlockIntoFreeList>
}
 800a8dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                    xNumberOfSuccessfulFrees++;
 800a8e0:	4a05      	ldr	r2, [pc, #20]	@ (800a8f8 <vPortFree+0x60>)
 800a8e2:	6813      	ldr	r3, [r2, #0]
 800a8e4:	3301      	adds	r3, #1
 800a8e6:	6013      	str	r3, [r2, #0]
                ( void ) xTaskResumeAll();
 800a8e8:	f7ff ba96 	b.w	8009e18 <xTaskResumeAll>
}
 800a8ec:	bd10      	pop	{r4, pc}
 800a8ee:	bf00      	nop
 800a8f0:	2006f65c 	.word	0x2006f65c
 800a8f4:	2006f66c 	.word	0x2006f66c
 800a8f8:	2006f660 	.word	0x2006f660

0800a8fc <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a8fc:	8880      	ldrh	r0, [r0, #4]
 800a8fe:	4770      	bx	lr

0800a900 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a900:	b570      	push	{r4, r5, r6, lr}
 800a902:	6803      	ldr	r3, [r0, #0]
 800a904:	4605      	mov	r5, r0
 800a906:	460c      	mov	r4, r1
 800a908:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a90a:	2100      	movs	r1, #0
 800a90c:	4798      	blx	r3
 800a90e:	682b      	ldr	r3, [r5, #0]
 800a910:	4606      	mov	r6, r0
 800a912:	6a1b      	ldr	r3, [r3, #32]
 800a914:	4628      	mov	r0, r5
 800a916:	4798      	blx	r3
 800a918:	1ba4      	subs	r4, r4, r6
 800a91a:	b2a4      	uxth	r4, r4
 800a91c:	fbb4 f0f0 	udiv	r0, r4, r0
 800a920:	bd70      	pop	{r4, r5, r6, pc}

0800a922 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a922:	2300      	movs	r3, #0
 800a924:	8083      	strh	r3, [r0, #4]
 800a926:	4770      	bx	lr

0800a928 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a928:	b510      	push	{r4, lr}
 800a92a:	4604      	mov	r4, r0
 800a92c:	6803      	ldr	r3, [r0, #0]
 800a92e:	8881      	ldrh	r1, [r0, #4]
 800a930:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a932:	4798      	blx	r3
 800a934:	88a3      	ldrh	r3, [r4, #4]
 800a936:	3301      	adds	r3, #1
 800a938:	80a3      	strh	r3, [r4, #4]
 800a93a:	bd10      	pop	{r4, pc}

0800a93c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a93c:	6803      	ldr	r3, [r0, #0]
 800a93e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a940:	4718      	bx	r3

0800a942 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a942:	4770      	bx	lr

0800a944 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a944:	4a02      	ldr	r2, [pc, #8]	@ (800a950 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a946:	6002      	str	r2, [r0, #0]
 800a948:	2200      	movs	r2, #0
 800a94a:	8082      	strh	r2, [r0, #4]
 800a94c:	4770      	bx	lr
 800a94e:	bf00      	nop
 800a950:	0803592c 	.word	0x0803592c

0800a954 <_ZN8touchgfx9Container13getFirstChildEv>:
 800a954:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800a956:	4770      	bx	lr

0800a958 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a958:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a95a:	2000      	movs	r0, #0
 800a95c:	b12b      	cbz	r3, 800a96a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a95e:	b920      	cbnz	r0, 800a96a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a960:	1a5a      	subs	r2, r3, r1
 800a962:	4250      	negs	r0, r2
 800a964:	4150      	adcs	r0, r2
 800a966:	699b      	ldr	r3, [r3, #24]
 800a968:	e7f8      	b.n	800a95c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a96a:	4770      	bx	lr

0800a96c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a96c:	2300      	movs	r3, #0
 800a96e:	6148      	str	r0, [r1, #20]
 800a970:	618b      	str	r3, [r1, #24]
 800a972:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a974:	b913      	cbnz	r3, 800a97c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a976:	6281      	str	r1, [r0, #40]	@ 0x28
 800a978:	4770      	bx	lr
 800a97a:	4613      	mov	r3, r2
 800a97c:	699a      	ldr	r2, [r3, #24]
 800a97e:	2a00      	cmp	r2, #0
 800a980:	d1fb      	bne.n	800a97a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a982:	6199      	str	r1, [r3, #24]
 800a984:	4770      	bx	lr

0800a986 <_ZN8touchgfx9Container9removeAllEv>:
 800a986:	2200      	movs	r2, #0
 800a988:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a98a:	b123      	cbz	r3, 800a996 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a98c:	6999      	ldr	r1, [r3, #24]
 800a98e:	6281      	str	r1, [r0, #40]	@ 0x28
 800a990:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a994:	e7f8      	b.n	800a988 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a996:	4770      	bx	lr

0800a998 <_ZN8touchgfx9Container6unlinkEv>:
 800a998:	2300      	movs	r3, #0
 800a99a:	6283      	str	r3, [r0, #40]	@ 0x28
 800a99c:	4770      	bx	lr

0800a99e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a99e:	2200      	movs	r2, #0
 800a9a0:	8002      	strh	r2, [r0, #0]
 800a9a2:	8042      	strh	r2, [r0, #2]
 800a9a4:	8082      	strh	r2, [r0, #4]
 800a9a6:	80c2      	strh	r2, [r0, #6]
 800a9a8:	4770      	bx	lr

0800a9aa <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a9aa:	b570      	push	{r4, r5, r6, lr}
 800a9ac:	460d      	mov	r5, r1
 800a9ae:	4616      	mov	r6, r2
 800a9b0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a9b2:	b13c      	cbz	r4, 800a9c4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a9b4:	6823      	ldr	r3, [r4, #0]
 800a9b6:	4620      	mov	r0, r4
 800a9b8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a9ba:	4632      	mov	r2, r6
 800a9bc:	4629      	mov	r1, r5
 800a9be:	4798      	blx	r3
 800a9c0:	69a4      	ldr	r4, [r4, #24]
 800a9c2:	e7f6      	b.n	800a9b2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a9c4:	bd70      	pop	{r4, r5, r6, pc}

0800a9c6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a9c6:	b538      	push	{r3, r4, r5, lr}
 800a9c8:	460d      	mov	r5, r1
 800a9ca:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a9cc:	b134      	cbz	r4, 800a9dc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a9ce:	682b      	ldr	r3, [r5, #0]
 800a9d0:	4621      	mov	r1, r4
 800a9d2:	689b      	ldr	r3, [r3, #8]
 800a9d4:	4628      	mov	r0, r5
 800a9d6:	4798      	blx	r3
 800a9d8:	69a4      	ldr	r4, [r4, #24]
 800a9da:	e7f7      	b.n	800a9cc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a9dc:	bd38      	pop	{r3, r4, r5, pc}

0800a9de <_ZN8touchgfx9ContainerD1Ev>:
 800a9de:	4770      	bx	lr

0800a9e0 <_ZN8touchgfx9ContainerD0Ev>:
 800a9e0:	b510      	push	{r4, lr}
 800a9e2:	4604      	mov	r4, r0
 800a9e4:	212c      	movs	r1, #44	@ 0x2c
 800a9e6:	f026 fbae 	bl	8031146 <_ZdlPvj>
 800a9ea:	4620      	mov	r0, r4
 800a9ec:	bd10      	pop	{r4, pc}

0800a9ee <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a9ee:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a9f0:	b19b      	cbz	r3, 800aa1a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a9f2:	428b      	cmp	r3, r1
 800a9f4:	d109      	bne.n	800aa0a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a9f6:	2100      	movs	r1, #0
 800a9f8:	699a      	ldr	r2, [r3, #24]
 800a9fa:	6159      	str	r1, [r3, #20]
 800a9fc:	6282      	str	r2, [r0, #40]	@ 0x28
 800a9fe:	b902      	cbnz	r2, 800aa02 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800aa00:	4770      	bx	lr
 800aa02:	6199      	str	r1, [r3, #24]
 800aa04:	4770      	bx	lr
 800aa06:	4613      	mov	r3, r2
 800aa08:	b13a      	cbz	r2, 800aa1a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aa0a:	699a      	ldr	r2, [r3, #24]
 800aa0c:	428a      	cmp	r2, r1
 800aa0e:	d1fa      	bne.n	800aa06 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800aa10:	698a      	ldr	r2, [r1, #24]
 800aa12:	619a      	str	r2, [r3, #24]
 800aa14:	2300      	movs	r3, #0
 800aa16:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800aa1a:	4770      	bx	lr

0800aa1c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800aa1c:	b410      	push	{r4}
 800aa1e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aa20:	4604      	mov	r4, r0
 800aa22:	b92b      	cbnz	r3, 800aa30 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800aa24:	6803      	ldr	r3, [r0, #0]
 800aa26:	4611      	mov	r1, r2
 800aa28:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800aa2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aa2e:	4718      	bx	r3
 800aa30:	b941      	cbnz	r1, 800aa44 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800aa32:	6193      	str	r3, [r2, #24]
 800aa34:	6282      	str	r2, [r0, #40]	@ 0x28
 800aa36:	6154      	str	r4, [r2, #20]
 800aa38:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aa3c:	4770      	bx	lr
 800aa3e:	4603      	mov	r3, r0
 800aa40:	2800      	cmp	r0, #0
 800aa42:	d0f9      	beq.n	800aa38 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800aa44:	4299      	cmp	r1, r3
 800aa46:	6998      	ldr	r0, [r3, #24]
 800aa48:	d1f9      	bne.n	800aa3e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800aa4a:	6190      	str	r0, [r2, #24]
 800aa4c:	618a      	str	r2, [r1, #24]
 800aa4e:	e7f2      	b.n	800aa36 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800aa50 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800aa50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa54:	461f      	mov	r7, r3
 800aa56:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800aa5a:	460d      	mov	r5, r1
 800aa5c:	4616      	mov	r6, r2
 800aa5e:	b103      	cbz	r3, 800aa62 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800aa60:	6038      	str	r0, [r7, #0]
 800aa62:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aa64:	b314      	cbz	r4, 800aaac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800aa66:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800aa6a:	b1eb      	cbz	r3, 800aaa8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa6c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800aa70:	428d      	cmp	r5, r1
 800aa72:	db19      	blt.n	800aaa8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa74:	8923      	ldrh	r3, [r4, #8]
 800aa76:	b289      	uxth	r1, r1
 800aa78:	440b      	add	r3, r1
 800aa7a:	b21b      	sxth	r3, r3
 800aa7c:	429d      	cmp	r5, r3
 800aa7e:	da13      	bge.n	800aaa8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa80:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800aa84:	4296      	cmp	r6, r2
 800aa86:	db0f      	blt.n	800aaa8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa88:	8963      	ldrh	r3, [r4, #10]
 800aa8a:	b292      	uxth	r2, r2
 800aa8c:	4413      	add	r3, r2
 800aa8e:	b21b      	sxth	r3, r3
 800aa90:	429e      	cmp	r6, r3
 800aa92:	da09      	bge.n	800aaa8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa94:	6823      	ldr	r3, [r4, #0]
 800aa96:	1ab2      	subs	r2, r6, r2
 800aa98:	1a69      	subs	r1, r5, r1
 800aa9a:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800aa9e:	b212      	sxth	r2, r2
 800aaa0:	463b      	mov	r3, r7
 800aaa2:	b209      	sxth	r1, r1
 800aaa4:	4620      	mov	r0, r4
 800aaa6:	47c0      	blx	r8
 800aaa8:	69a4      	ldr	r4, [r4, #24]
 800aaaa:	e7db      	b.n	800aa64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800aaac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aab0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800aab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aab4:	4c6c      	ldr	r4, [pc, #432]	@ (800ac68 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>)
 800aab6:	b0a1      	sub	sp, #132	@ 0x84
 800aab8:	6824      	ldr	r4, [r4, #0]
 800aaba:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800aabc:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800aac0:	2400      	movs	r4, #0
 800aac2:	802c      	strh	r4, [r5, #0]
 800aac4:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800aac6:	4606      	mov	r6, r0
 800aac8:	802c      	strh	r4, [r5, #0]
 800aaca:	601c      	str	r4, [r3, #0]
 800aacc:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800aad0:	9303      	str	r3, [sp, #12]
 800aad2:	f7ff ffbd 	bl	800aa50 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800aad6:	f1b9 0f03 	cmp.w	r9, #3
 800aada:	f340 80bf 	ble.w	800ac5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1ac>
 800aade:	4631      	mov	r1, r6
 800aae0:	a80c      	add	r0, sp, #48	@ 0x30
 800aae2:	f003 fbd7 	bl	800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800aae6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800aaea:	9306      	str	r3, [sp, #24]
 800aaec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800aaf0:	9307      	str	r3, [sp, #28]
 800aaf2:	9b03      	ldr	r3, [sp, #12]
 800aaf4:	f8d3 a000 	ldr.w	sl, [r3]
 800aaf8:	f1ba 0f00 	cmp.w	sl, #0
 800aafc:	f000 80b1 	beq.w	800ac62 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800ab00:	4651      	mov	r1, sl
 800ab02:	a810      	add	r0, sp, #64	@ 0x40
 800ab04:	f003 fbc6 	bl	800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ab08:	2002      	movs	r0, #2
 800ab0a:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800ab0e:	9b01      	ldr	r3, [sp, #4]
 800ab10:	fb91 f1f0 	sdiv	r1, r1, r0
 800ab14:	9a06      	ldr	r2, [sp, #24]
 800ab16:	189d      	adds	r5, r3, r2
 800ab18:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800ab1c:	9a07      	ldr	r2, [sp, #28]
 800ab1e:	4419      	add	r1, r3
 800ab20:	9b02      	ldr	r3, [sp, #8]
 800ab22:	1a6d      	subs	r5, r5, r1
 800ab24:	4413      	add	r3, r2
 800ab26:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800ab2a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800ab2e:	fb92 f2f0 	sdiv	r2, r2, r0
 800ab32:	440a      	add	r2, r1
 800ab34:	1a9b      	subs	r3, r3, r2
 800ab36:	435b      	muls	r3, r3
 800ab38:	fb05 3505 	mla	r5, r5, r5, r3
 800ab3c:	4f4b      	ldr	r7, [pc, #300]	@ (800ac6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800ab3e:	ac10      	add	r4, sp, #64	@ 0x40
 800ab40:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ab42:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab44:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ab46:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab48:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ab4a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab4c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ab50:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ab54:	2303      	movs	r3, #3
 800ab56:	f1b9 0f0c 	cmp.w	r9, #12
 800ab5a:	bfda      	itte	le
 800ab5c:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ab60:	fb92 f8f3 	sdivle	r8, r2, r3
 800ab64:	4698      	movgt	r8, r3
 800ab66:	2400      	movs	r4, #0
 800ab68:	f8cd 9000 	str.w	r9, [sp]
 800ab6c:	1c63      	adds	r3, r4, #1
 800ab6e:	9308      	str	r3, [sp, #32]
 800ab70:	9b00      	ldr	r3, [sp, #0]
 800ab72:	f04f 0b00 	mov.w	fp, #0
 800ab76:	fb93 f3f8 	sdiv	r3, r3, r8
 800ab7a:	f004 0401 	and.w	r4, r4, #1
 800ab7e:	aa10      	add	r2, sp, #64	@ 0x40
 800ab80:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ab84:	b29b      	uxth	r3, r3
 800ab86:	3404      	adds	r4, #4
 800ab88:	9304      	str	r3, [sp, #16]
 800ab8a:	9a04      	ldr	r2, [sp, #16]
 800ab8c:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ab90:	fb13 f302 	smulbb	r3, r3, r2
 800ab94:	9a01      	ldr	r2, [sp, #4]
 800ab96:	b29b      	uxth	r3, r3
 800ab98:	1899      	adds	r1, r3, r2
 800ab9a:	9305      	str	r3, [sp, #20]
 800ab9c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800aba0:	b209      	sxth	r1, r1
 800aba2:	4299      	cmp	r1, r3
 800aba4:	db4d      	blt.n	800ac42 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800aba6:	8932      	ldrh	r2, [r6, #8]
 800aba8:	4413      	add	r3, r2
 800abaa:	b21b      	sxth	r3, r3
 800abac:	4299      	cmp	r1, r3
 800abae:	da48      	bge.n	800ac42 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800abb0:	9b04      	ldr	r3, [sp, #16]
 800abb2:	6827      	ldr	r7, [r4, #0]
 800abb4:	fb17 f703 	smulbb	r7, r7, r3
 800abb8:	9b02      	ldr	r3, [sp, #8]
 800abba:	b2bf      	uxth	r7, r7
 800abbc:	18fa      	adds	r2, r7, r3
 800abbe:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800abc2:	b212      	sxth	r2, r2
 800abc4:	429a      	cmp	r2, r3
 800abc6:	db3c      	blt.n	800ac42 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800abc8:	8970      	ldrh	r0, [r6, #10]
 800abca:	4403      	add	r3, r0
 800abcc:	b21b      	sxth	r3, r3
 800abce:	429a      	cmp	r2, r3
 800abd0:	da37      	bge.n	800ac42 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800abd2:	2300      	movs	r3, #0
 800abd4:	4630      	mov	r0, r6
 800abd6:	930b      	str	r3, [sp, #44]	@ 0x2c
 800abd8:	ab0b      	add	r3, sp, #44	@ 0x2c
 800abda:	f7ff ff39 	bl	800aa50 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800abde:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800abe0:	b37a      	cbz	r2, 800ac42 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800abe2:	4552      	cmp	r2, sl
 800abe4:	d02d      	beq.n	800ac42 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800abe6:	4611      	mov	r1, r2
 800abe8:	a80e      	add	r0, sp, #56	@ 0x38
 800abea:	9209      	str	r2, [sp, #36]	@ 0x24
 800abec:	f003 fb52 	bl	800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800abf0:	f04f 0e02 	mov.w	lr, #2
 800abf4:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800abf8:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800abfc:	fb91 f1fe 	sdiv	r1, r1, lr
 800ac00:	fb9c fcfe 	sdiv	ip, ip, lr
 800ac04:	9a06      	ldr	r2, [sp, #24]
 800ac06:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800ac0a:	9b01      	ldr	r3, [sp, #4]
 800ac0c:	4401      	add	r1, r0
 800ac0e:	4413      	add	r3, r2
 800ac10:	1a58      	subs	r0, r3, r1
 800ac12:	9a07      	ldr	r2, [sp, #28]
 800ac14:	9b02      	ldr	r3, [sp, #8]
 800ac16:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800ac1a:	4413      	add	r3, r2
 800ac1c:	448c      	add	ip, r1
 800ac1e:	eba3 030c 	sub.w	r3, r3, ip
 800ac22:	435b      	muls	r3, r3
 800ac24:	fb00 3300 	mla	r3, r0, r0, r3
 800ac28:	42ab      	cmp	r3, r5
 800ac2a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800ac2c:	d208      	bcs.n	800ac40 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x190>
 800ac2e:	461d      	mov	r5, r3
 800ac30:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800ac32:	9803      	ldr	r0, [sp, #12]
 800ac34:	6001      	str	r1, [r0, #0]
 800ac36:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800ac38:	9805      	ldr	r0, [sp, #20]
 800ac3a:	8008      	strh	r0, [r1, #0]
 800ac3c:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800ac3e:	800f      	strh	r7, [r1, #0]
 800ac40:	4692      	mov	sl, r2
 800ac42:	f10b 0b01 	add.w	fp, fp, #1
 800ac46:	f1bb 0f04 	cmp.w	fp, #4
 800ac4a:	f104 0408 	add.w	r4, r4, #8
 800ac4e:	d19c      	bne.n	800ab8a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xda>
 800ac50:	9b00      	ldr	r3, [sp, #0]
 800ac52:	9c08      	ldr	r4, [sp, #32]
 800ac54:	444b      	add	r3, r9
 800ac56:	4544      	cmp	r4, r8
 800ac58:	9300      	str	r3, [sp, #0]
 800ac5a:	d187      	bne.n	800ab6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xbc>
 800ac5c:	b021      	add	sp, #132	@ 0x84
 800ac5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac62:	f04f 35ff 	mov.w	r5, #4294967295
 800ac66:	e769      	b.n	800ab3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ac68:	20082f08 	.word	0x20082f08
 800ac6c:	08033598 	.word	0x08033598

0800ac70 <_ZN8touchgfx4RectaNERKS0_>:
 800ac70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ac74:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ac78:	888c      	ldrh	r4, [r1, #4]
 800ac7a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ac7e:	443c      	add	r4, r7
 800ac80:	b2a4      	uxth	r4, r4
 800ac82:	fa0f f884 	sxth.w	r8, r4
 800ac86:	45c1      	cmp	r9, r8
 800ac88:	da2f      	bge.n	800acea <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ac8a:	8882      	ldrh	r2, [r0, #4]
 800ac8c:	444a      	add	r2, r9
 800ac8e:	b292      	uxth	r2, r2
 800ac90:	fa0f fe82 	sxth.w	lr, r2
 800ac94:	4577      	cmp	r7, lr
 800ac96:	da28      	bge.n	800acea <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ac98:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ac9c:	88cb      	ldrh	r3, [r1, #6]
 800ac9e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800aca2:	442b      	add	r3, r5
 800aca4:	b21b      	sxth	r3, r3
 800aca6:	429e      	cmp	r6, r3
 800aca8:	da1f      	bge.n	800acea <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800acaa:	88c3      	ldrh	r3, [r0, #6]
 800acac:	4433      	add	r3, r6
 800acae:	b29b      	uxth	r3, r3
 800acb0:	fa0f fc83 	sxth.w	ip, r3
 800acb4:	4565      	cmp	r5, ip
 800acb6:	da18      	bge.n	800acea <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800acb8:	454f      	cmp	r7, r9
 800acba:	bfb8      	it	lt
 800acbc:	464f      	movlt	r7, r9
 800acbe:	42b5      	cmp	r5, r6
 800acc0:	bfb8      	it	lt
 800acc2:	4635      	movlt	r5, r6
 800acc4:	45f0      	cmp	r8, lr
 800acc6:	bfd8      	it	le
 800acc8:	4622      	movle	r2, r4
 800acca:	1bd2      	subs	r2, r2, r7
 800accc:	8082      	strh	r2, [r0, #4]
 800acce:	884a      	ldrh	r2, [r1, #2]
 800acd0:	88c9      	ldrh	r1, [r1, #6]
 800acd2:	8007      	strh	r7, [r0, #0]
 800acd4:	440a      	add	r2, r1
 800acd6:	b292      	uxth	r2, r2
 800acd8:	b211      	sxth	r1, r2
 800acda:	458c      	cmp	ip, r1
 800acdc:	bfa8      	it	ge
 800acde:	4613      	movge	r3, r2
 800ace0:	1b5b      	subs	r3, r3, r5
 800ace2:	80c3      	strh	r3, [r0, #6]
 800ace4:	8045      	strh	r5, [r0, #2]
 800ace6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800acea:	2300      	movs	r3, #0
 800acec:	8003      	strh	r3, [r0, #0]
 800acee:	8043      	strh	r3, [r0, #2]
 800acf0:	8083      	strh	r3, [r0, #4]
 800acf2:	80c3      	strh	r3, [r0, #6]
 800acf4:	e7f7      	b.n	800ace6 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800acf6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800acfa:	2b00      	cmp	r3, #0
 800acfc:	dd06      	ble.n	800ad0c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800acfe:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ad02:	2800      	cmp	r0, #0
 800ad04:	bfcc      	ite	gt
 800ad06:	2000      	movgt	r0, #0
 800ad08:	2001      	movle	r0, #1
 800ad0a:	4770      	bx	lr
 800ad0c:	2001      	movs	r0, #1
 800ad0e:	4770      	bx	lr

0800ad10 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ad10:	2300      	movs	r3, #0
 800ad12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ad16:	4604      	mov	r4, r0
 800ad18:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800ad1a:	8003      	strh	r3, [r0, #0]
 800ad1c:	8043      	strh	r3, [r0, #2]
 800ad1e:	8083      	strh	r3, [r0, #4]
 800ad20:	80c3      	strh	r3, [r0, #6]
 800ad22:	2d00      	cmp	r5, #0
 800ad24:	d040      	beq.n	800ada8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ad26:	1d28      	adds	r0, r5, #4
 800ad28:	f7ff ffe5 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad2c:	b988      	cbnz	r0, 800ad52 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ad2e:	4620      	mov	r0, r4
 800ad30:	f7ff ffe1 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad34:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ad38:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ad3c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ad40:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ad44:	b138      	cbz	r0, 800ad56 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ad46:	8022      	strh	r2, [r4, #0]
 800ad48:	8063      	strh	r3, [r4, #2]
 800ad4a:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ad4e:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ad52:	69ad      	ldr	r5, [r5, #24]
 800ad54:	e7e5      	b.n	800ad22 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ad56:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ad5a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ad5e:	4290      	cmp	r0, r2
 800ad60:	4607      	mov	r7, r0
 800ad62:	bfa8      	it	ge
 800ad64:	4617      	movge	r7, r2
 800ad66:	4299      	cmp	r1, r3
 800ad68:	460e      	mov	r6, r1
 800ad6a:	bfa8      	it	ge
 800ad6c:	461e      	movge	r6, r3
 800ad6e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ad72:	4472      	add	r2, lr
 800ad74:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ad78:	4440      	add	r0, r8
 800ad7a:	4471      	add	r1, lr
 800ad7c:	4463      	add	r3, ip
 800ad7e:	b200      	sxth	r0, r0
 800ad80:	b212      	sxth	r2, r2
 800ad82:	b209      	sxth	r1, r1
 800ad84:	b21b      	sxth	r3, r3
 800ad86:	4290      	cmp	r0, r2
 800ad88:	bfac      	ite	ge
 800ad8a:	ebc7 0200 	rsbge	r2, r7, r0
 800ad8e:	ebc7 0202 	rsblt	r2, r7, r2
 800ad92:	4299      	cmp	r1, r3
 800ad94:	bfac      	ite	ge
 800ad96:	ebc6 0301 	rsbge	r3, r6, r1
 800ad9a:	ebc6 0303 	rsblt	r3, r6, r3
 800ad9e:	8027      	strh	r7, [r4, #0]
 800ada0:	8066      	strh	r6, [r4, #2]
 800ada2:	80a2      	strh	r2, [r4, #4]
 800ada4:	80e3      	strh	r3, [r4, #6]
 800ada6:	e7d4      	b.n	800ad52 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ada8:	4620      	mov	r0, r4
 800adaa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800adae <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800adae:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800adb2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800adb6:	b383      	cbz	r3, 800ae1a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800adb8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800adba:	b374      	cbz	r4, 800ae1a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800adbc:	f9b1 5000 	ldrsh.w	r5, [r1]
 800adc0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800adc4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800adc8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800adcc:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800add0:	b303      	cbz	r3, 800ae14 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800add2:	4668      	mov	r0, sp
 800add4:	1d21      	adds	r1, r4, #4
 800add6:	f8ad 5000 	strh.w	r5, [sp]
 800adda:	f8ad 6002 	strh.w	r6, [sp, #2]
 800adde:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ade2:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ade6:	f7ff ff43 	bl	800ac70 <_ZN8touchgfx4RectaNERKS0_>
 800adea:	4668      	mov	r0, sp
 800adec:	f7ff ff83 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800adf0:	b980      	cbnz	r0, 800ae14 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800adf2:	f8bd 3000 	ldrh.w	r3, [sp]
 800adf6:	88a2      	ldrh	r2, [r4, #4]
 800adf8:	4669      	mov	r1, sp
 800adfa:	1a9b      	subs	r3, r3, r2
 800adfc:	f8ad 3000 	strh.w	r3, [sp]
 800ae00:	88e2      	ldrh	r2, [r4, #6]
 800ae02:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ae06:	4620      	mov	r0, r4
 800ae08:	1a9b      	subs	r3, r3, r2
 800ae0a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ae0e:	6823      	ldr	r3, [r4, #0]
 800ae10:	689b      	ldr	r3, [r3, #8]
 800ae12:	4798      	blx	r3
 800ae14:	69a4      	ldr	r4, [r4, #24]
 800ae16:	2c00      	cmp	r4, #0
 800ae18:	d1d8      	bne.n	800adcc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800ae1a:	b002      	add	sp, #8
 800ae1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ae20 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800ae20:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ae22:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800ae26:	460d      	mov	r5, r1
 800ae28:	4616      	mov	r6, r2
 800ae2a:	b323      	cbz	r3, 800ae76 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ae2c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ae2e:	b314      	cbz	r4, 800ae76 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ae30:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ae34:	b1eb      	cbz	r3, 800ae72 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ae36:	466b      	mov	r3, sp
 800ae38:	6828      	ldr	r0, [r5, #0]
 800ae3a:	6869      	ldr	r1, [r5, #4]
 800ae3c:	c303      	stmia	r3!, {r0, r1}
 800ae3e:	4668      	mov	r0, sp
 800ae40:	1d21      	adds	r1, r4, #4
 800ae42:	f7ff ff15 	bl	800ac70 <_ZN8touchgfx4RectaNERKS0_>
 800ae46:	4668      	mov	r0, sp
 800ae48:	f7ff ff55 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ae4c:	b988      	cbnz	r0, 800ae72 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ae4e:	f8bd 3000 	ldrh.w	r3, [sp]
 800ae52:	88a2      	ldrh	r2, [r4, #4]
 800ae54:	4669      	mov	r1, sp
 800ae56:	1a9b      	subs	r3, r3, r2
 800ae58:	f8ad 3000 	strh.w	r3, [sp]
 800ae5c:	88e2      	ldrh	r2, [r4, #6]
 800ae5e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ae62:	4620      	mov	r0, r4
 800ae64:	1a9b      	subs	r3, r3, r2
 800ae66:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ae6a:	6823      	ldr	r3, [r4, #0]
 800ae6c:	4632      	mov	r2, r6
 800ae6e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ae70:	4798      	blx	r3
 800ae72:	69a4      	ldr	r4, [r4, #24]
 800ae74:	e7db      	b.n	800ae2e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ae76:	b002      	add	sp, #8
 800ae78:	bd70      	pop	{r4, r5, r6, pc}

0800ae7a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800ae7a:	b513      	push	{r0, r1, r4, lr}
 800ae7c:	6803      	ldr	r3, [r0, #0]
 800ae7e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800ae82:	2300      	movs	r3, #0
 800ae84:	e9cd 3300 	strd	r3, r3, [sp]
 800ae88:	466b      	mov	r3, sp
 800ae8a:	47a0      	blx	r4
 800ae8c:	b002      	add	sp, #8
 800ae8e:	bd10      	pop	{r4, pc}

0800ae90 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800ae90:	2301      	movs	r3, #1
 800ae92:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800ae96:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800ae9a:	4770      	bx	lr

0800ae9c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800ae9c:	2301      	movs	r3, #1
 800ae9e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800aea2:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800aea6:	4770      	bx	lr

0800aea8 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800aea8:	2201      	movs	r2, #1
 800aeaa:	6843      	ldr	r3, [r0, #4]
 800aeac:	725a      	strb	r2, [r3, #9]
 800aeae:	6840      	ldr	r0, [r0, #4]
 800aeb0:	6803      	ldr	r3, [r0, #0]
 800aeb2:	691b      	ldr	r3, [r3, #16]
 800aeb4:	4718      	bx	r3

0800aeb6 <_ZN8touchgfx3HAL8flushDMAEv>:
 800aeb6:	6840      	ldr	r0, [r0, #4]
 800aeb8:	6803      	ldr	r3, [r0, #0]
 800aeba:	689b      	ldr	r3, [r3, #8]
 800aebc:	4718      	bx	r3

0800aebe <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800aebe:	b530      	push	{r4, r5, lr}
 800aec0:	b08b      	sub	sp, #44	@ 0x2c
 800aec2:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800aec6:	6804      	ldr	r4, [r0, #0]
 800aec8:	9509      	str	r5, [sp, #36]	@ 0x24
 800aeca:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800aece:	9508      	str	r5, [sp, #32]
 800aed0:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800aed4:	9507      	str	r5, [sp, #28]
 800aed6:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800aeda:	9506      	str	r5, [sp, #24]
 800aedc:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800aee0:	9505      	str	r5, [sp, #20]
 800aee2:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800aee6:	9504      	str	r5, [sp, #16]
 800aee8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800aeec:	9503      	str	r5, [sp, #12]
 800aeee:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800aef2:	9502      	str	r5, [sp, #8]
 800aef4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800aef8:	e9cd 3500 	strd	r3, r5, [sp]
 800aefc:	4613      	mov	r3, r2
 800aefe:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800af00:	2200      	movs	r2, #0
 800af02:	47a0      	blx	r4
 800af04:	b00b      	add	sp, #44	@ 0x2c
 800af06:	bd30      	pop	{r4, r5, pc}

0800af08 <_ZN8touchgfx3HAL10beginFrameEv>:
 800af08:	4b04      	ldr	r3, [pc, #16]	@ (800af1c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800af0a:	781b      	ldrb	r3, [r3, #0]
 800af0c:	b123      	cbz	r3, 800af18 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800af0e:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800af12:	f080 0001 	eor.w	r0, r0, #1
 800af16:	4770      	bx	lr
 800af18:	2001      	movs	r0, #1
 800af1a:	4770      	bx	lr
 800af1c:	20082f06 	.word	0x20082f06

0800af20 <_ZN8touchgfx3HAL8endFrameEv>:
 800af20:	b510      	push	{r4, lr}
 800af22:	4604      	mov	r4, r0
 800af24:	6840      	ldr	r0, [r0, #4]
 800af26:	6803      	ldr	r3, [r0, #0]
 800af28:	689b      	ldr	r3, [r3, #8]
 800af2a:	4798      	blx	r3
 800af2c:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800af30:	b113      	cbz	r3, 800af38 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800af32:	2301      	movs	r3, #1
 800af34:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800af38:	bd10      	pop	{r4, pc}

0800af3a <_ZN8touchgfx3HAL10initializeEv>:
 800af3a:	b510      	push	{r4, lr}
 800af3c:	4604      	mov	r4, r0
 800af3e:	f7f7 f825 	bl	8001f8c <_ZN8touchgfx10OSWrappers10initializeEv>
 800af42:	f7f6 f903 	bl	800114c <_ZN8touchgfx4GPIO4initEv>
 800af46:	6860      	ldr	r0, [r4, #4]
 800af48:	6803      	ldr	r3, [r0, #0]
 800af4a:	68db      	ldr	r3, [r3, #12]
 800af4c:	4798      	blx	r3
 800af4e:	68e0      	ldr	r0, [r4, #12]
 800af50:	6803      	ldr	r3, [r0, #0]
 800af52:	689b      	ldr	r3, [r3, #8]
 800af54:	4798      	blx	r3
 800af56:	6823      	ldr	r3, [r4, #0]
 800af58:	4620      	mov	r0, r4
 800af5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800af5e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800af60:	4718      	bx	r3

0800af62 <_ZN8touchgfx3HAL9taskEntryEv>:
 800af62:	4604      	mov	r4, r0
 800af64:	b508      	push	{r3, lr}
 800af66:	6803      	ldr	r3, [r0, #0]
 800af68:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800af6c:	4798      	blx	r3
 800af6e:	6823      	ldr	r3, [r4, #0]
 800af70:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800af72:	4620      	mov	r0, r4
 800af74:	4798      	blx	r3
 800af76:	f7f7 f855 	bl	8002024 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800af7a:	6823      	ldr	r3, [r4, #0]
 800af7c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800af7e:	e7f8      	b.n	800af72 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800af80 <_ZN8touchgfx3HAL4tickEv>:
 800af80:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800af82:	6803      	ldr	r3, [r0, #0]
 800af84:	4604      	mov	r4, r0
 800af86:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800af8a:	4798      	blx	r3
 800af8c:	4d59      	ldr	r5, [pc, #356]	@ (800b0f4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800af8e:	2800      	cmp	r0, #0
 800af90:	f000 8095 	beq.w	800b0be <_ZN8touchgfx3HAL4tickEv+0x13e>
 800af94:	2600      	movs	r6, #0
 800af96:	2001      	movs	r0, #1
 800af98:	f7f6 f8da 	bl	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800af9c:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800afa0:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800afa4:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800afa8:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800afac:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800afb0:	b133      	cbz	r3, 800afc0 <_ZN8touchgfx3HAL4tickEv+0x40>
 800afb2:	6823      	ldr	r3, [r4, #0]
 800afb4:	4620      	mov	r0, r4
 800afb6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800afba:	4798      	blx	r3
 800afbc:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800afc0:	2601      	movs	r6, #1
 800afc2:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800afc6:	6862      	ldr	r2, [r4, #4]
 800afc8:	f083 0301 	eor.w	r3, r3, #1
 800afcc:	7253      	strb	r3, [r2, #9]
 800afce:	702e      	strb	r6, [r5, #0]
 800afd0:	f002 f84e 	bl	800d070 <_ZN8touchgfx11Application11getInstanceEv>
 800afd4:	6803      	ldr	r3, [r0, #0]
 800afd6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800afd8:	4798      	blx	r3
 800afda:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800afde:	b90b      	cbnz	r3, 800afe4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800afe0:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800afe4:	f002 f844 	bl	800d070 <_ZN8touchgfx11Application11getInstanceEv>
 800afe8:	6803      	ldr	r3, [r0, #0]
 800afea:	695b      	ldr	r3, [r3, #20]
 800afec:	4798      	blx	r3
 800afee:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800aff0:	6803      	ldr	r3, [r0, #0]
 800aff2:	691b      	ldr	r3, [r3, #16]
 800aff4:	4798      	blx	r3
 800aff6:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800affa:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800affe:	3b01      	subs	r3, #1
 800b000:	b2db      	uxtb	r3, r3
 800b002:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800b006:	b10a      	cbz	r2, 800b00c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b008:	2b00      	cmp	r3, #0
 800b00a:	d1eb      	bne.n	800afe4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b00c:	4a3a      	ldr	r2, [pc, #232]	@ (800b0f8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b00e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800b012:	7813      	ldrb	r3, [r2, #0]
 800b014:	3301      	adds	r3, #1
 800b016:	b25b      	sxtb	r3, r3
 800b018:	4299      	cmp	r1, r3
 800b01a:	7013      	strb	r3, [r2, #0]
 800b01c:	dc10      	bgt.n	800b040 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b01e:	2300      	movs	r3, #0
 800b020:	68e0      	ldr	r0, [r4, #12]
 800b022:	7013      	strb	r3, [r2, #0]
 800b024:	6803      	ldr	r3, [r0, #0]
 800b026:	aa03      	add	r2, sp, #12
 800b028:	68db      	ldr	r3, [r3, #12]
 800b02a:	a902      	add	r1, sp, #8
 800b02c:	4798      	blx	r3
 800b02e:	6823      	ldr	r3, [r4, #0]
 800b030:	2800      	cmp	r0, #0
 800b032:	d050      	beq.n	800b0d6 <_ZN8touchgfx3HAL4tickEv+0x156>
 800b034:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b038:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800b03c:	4620      	mov	r0, r4
 800b03e:	4798      	blx	r3
 800b040:	2300      	movs	r3, #0
 800b042:	6960      	ldr	r0, [r4, #20]
 800b044:	f88d 3007 	strb.w	r3, [sp, #7]
 800b048:	b158      	cbz	r0, 800b062 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b04a:	6803      	ldr	r3, [r0, #0]
 800b04c:	f10d 0107 	add.w	r1, sp, #7
 800b050:	68db      	ldr	r3, [r3, #12]
 800b052:	4798      	blx	r3
 800b054:	b128      	cbz	r0, 800b062 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b056:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b058:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b05c:	6803      	ldr	r3, [r0, #0]
 800b05e:	68db      	ldr	r3, [r3, #12]
 800b060:	4798      	blx	r3
 800b062:	f104 001c 	add.w	r0, r4, #28
 800b066:	f005 f98f 	bl	8010388 <_ZN8touchgfx8Gestures4tickEv>
 800b06a:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800b06e:	b30b      	cbz	r3, 800b0b4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b070:	6920      	ldr	r0, [r4, #16]
 800b072:	6803      	ldr	r3, [r0, #0]
 800b074:	691b      	ldr	r3, [r3, #16]
 800b076:	4798      	blx	r3
 800b078:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b07a:	4606      	mov	r6, r0
 800b07c:	b903      	cbnz	r3, 800b080 <_ZN8touchgfx3HAL4tickEv+0x100>
 800b07e:	6760      	str	r0, [r4, #116]	@ 0x74
 800b080:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b082:	4a1e      	ldr	r2, [pc, #120]	@ (800b0fc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b084:	1af3      	subs	r3, r6, r3
 800b086:	4293      	cmp	r3, r2
 800b088:	d914      	bls.n	800b0b4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b08a:	6920      	ldr	r0, [r4, #16]
 800b08c:	6803      	ldr	r3, [r0, #0]
 800b08e:	699b      	ldr	r3, [r3, #24]
 800b090:	4798      	blx	r3
 800b092:	2264      	movs	r2, #100	@ 0x64
 800b094:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b096:	1af3      	subs	r3, r6, r3
 800b098:	fbb3 f3f2 	udiv	r3, r3, r2
 800b09c:	fbb0 f0f3 	udiv	r0, r0, r3
 800b0a0:	2800      	cmp	r0, #0
 800b0a2:	dc1d      	bgt.n	800b0e0 <_ZN8touchgfx3HAL4tickEv+0x160>
 800b0a4:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800b0a8:	6920      	ldr	r0, [r4, #16]
 800b0aa:	2100      	movs	r1, #0
 800b0ac:	6803      	ldr	r3, [r0, #0]
 800b0ae:	69db      	ldr	r3, [r3, #28]
 800b0b0:	4798      	blx	r3
 800b0b2:	6766      	str	r6, [r4, #116]	@ 0x74
 800b0b4:	f001 ffdc 	bl	800d070 <_ZN8touchgfx11Application11getInstanceEv>
 800b0b8:	6803      	ldr	r3, [r0, #0]
 800b0ba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b0bc:	4798      	blx	r3
 800b0be:	6823      	ldr	r3, [r4, #0]
 800b0c0:	4620      	mov	r0, r4
 800b0c2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800b0c6:	4798      	blx	r3
 800b0c8:	2001      	movs	r0, #1
 800b0ca:	f7f6 f85b 	bl	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b0ce:	2300      	movs	r3, #0
 800b0d0:	702b      	strb	r3, [r5, #0]
 800b0d2:	b004      	add	sp, #16
 800b0d4:	bd70      	pop	{r4, r5, r6, pc}
 800b0d6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800b0da:	4620      	mov	r0, r4
 800b0dc:	4798      	blx	r3
 800b0de:	e7af      	b.n	800b040 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b0e0:	2863      	cmp	r0, #99	@ 0x63
 800b0e2:	bfcb      	itete	gt
 800b0e4:	2300      	movgt	r3, #0
 800b0e6:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800b0ea:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800b0ee:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800b0f2:	e7d9      	b.n	800b0a8 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b0f4:	20082f0c 	.word	0x20082f0c
 800b0f8:	20082f0d 	.word	0x20082f0d
 800b0fc:	05f5e100 	.word	0x05f5e100

0800b100 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b100:	b510      	push	{r4, lr}
 800b102:	4604      	mov	r4, r0
 800b104:	f7f6 ff72 	bl	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800b108:	2200      	movs	r2, #0
 800b10a:	6863      	ldr	r3, [r4, #4]
 800b10c:	729a      	strb	r2, [r3, #10]
 800b10e:	bd10      	pop	{r4, pc}

0800b110 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b110:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800b112:	301c      	adds	r0, #28
 800b114:	f005 b936 	b.w	8010384 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b118 <_ZN8touchgfx3HAL5touchEll>:
 800b118:	b530      	push	{r4, r5, lr}
 800b11a:	4604      	mov	r4, r0
 800b11c:	b087      	sub	sp, #28
 800b11e:	a804      	add	r0, sp, #16
 800b120:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b124:	f001 fd8c 	bl	800cc40 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b128:	9b04      	ldr	r3, [sp, #16]
 800b12a:	a906      	add	r1, sp, #24
 800b12c:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b130:	9b05      	ldr	r3, [sp, #20]
 800b132:	a803      	add	r0, sp, #12
 800b134:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b138:	f001 fdd4 	bl	800cce4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b13c:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800b140:	f104 001c 	add.w	r0, r4, #28
 800b144:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b148:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b14c:	b189      	cbz	r1, 800b172 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b14e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800b152:	9300      	str	r3, [sp, #0]
 800b154:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800b158:	4613      	mov	r3, r2
 800b15a:	462a      	mov	r2, r5
 800b15c:	f005 f922 	bl	80103a4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b160:	b128      	cbz	r0, 800b16e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b162:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b166:	6623      	str	r3, [r4, #96]	@ 0x60
 800b168:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b16c:	6663      	str	r3, [r4, #100]	@ 0x64
 800b16e:	b007      	add	sp, #28
 800b170:	bd30      	pop	{r4, r5, pc}
 800b172:	f005 f957 	bl	8010424 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b176:	2301      	movs	r3, #1
 800b178:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b17c:	e7f1      	b.n	800b162 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b17e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b17e:	b510      	push	{r4, lr}
 800b180:	2b00      	cmp	r3, #0
 800b182:	d046      	beq.n	800b212 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b184:	ea81 0002 	eor.w	r0, r1, r2
 800b188:	07c4      	lsls	r4, r0, #31
 800b18a:	d508      	bpl.n	800b19e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b18c:	440b      	add	r3, r1
 800b18e:	3a01      	subs	r2, #1
 800b190:	428b      	cmp	r3, r1
 800b192:	d93e      	bls.n	800b212 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b194:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b198:	f801 0b01 	strb.w	r0, [r1], #1
 800b19c:	e7f8      	b.n	800b190 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b19e:	07d0      	lsls	r0, r2, #31
 800b1a0:	bf42      	ittt	mi
 800b1a2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b1a6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b1aa:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b1ae:	2b01      	cmp	r3, #1
 800b1b0:	d911      	bls.n	800b1d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b1b2:	ea81 0402 	eor.w	r4, r1, r2
 800b1b6:	07a4      	lsls	r4, r4, #30
 800b1b8:	4610      	mov	r0, r2
 800b1ba:	d022      	beq.n	800b202 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b1bc:	f023 0401 	bic.w	r4, r3, #1
 800b1c0:	440c      	add	r4, r1
 800b1c2:	428c      	cmp	r4, r1
 800b1c4:	4602      	mov	r2, r0
 800b1c6:	d904      	bls.n	800b1d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b1c8:	8812      	ldrh	r2, [r2, #0]
 800b1ca:	3002      	adds	r0, #2
 800b1cc:	f821 2b02 	strh.w	r2, [r1], #2
 800b1d0:	e7f7      	b.n	800b1c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b1d2:	f003 0301 	and.w	r3, r3, #1
 800b1d6:	f023 0003 	bic.w	r0, r3, #3
 800b1da:	4408      	add	r0, r1
 800b1dc:	4288      	cmp	r0, r1
 800b1de:	4614      	mov	r4, r2
 800b1e0:	d904      	bls.n	800b1ec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b1e2:	6824      	ldr	r4, [r4, #0]
 800b1e4:	3204      	adds	r2, #4
 800b1e6:	f841 4b04 	str.w	r4, [r1], #4
 800b1ea:	e7f7      	b.n	800b1dc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b1ec:	f003 0303 	and.w	r3, r3, #3
 800b1f0:	440b      	add	r3, r1
 800b1f2:	3a01      	subs	r2, #1
 800b1f4:	428b      	cmp	r3, r1
 800b1f6:	d90c      	bls.n	800b212 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b1f8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b1fc:	f801 0b01 	strb.w	r0, [r1], #1
 800b200:	e7f8      	b.n	800b1f4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b202:	0790      	lsls	r0, r2, #30
 800b204:	d0e7      	beq.n	800b1d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b206:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b20a:	3b02      	subs	r3, #2
 800b20c:	f821 0b02 	strh.w	r0, [r1], #2
 800b210:	e7e1      	b.n	800b1d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b212:	2001      	movs	r0, #1
 800b214:	bd10      	pop	{r4, pc}

0800b216 <_ZN8touchgfx3HAL7noTouchEv>:
 800b216:	b510      	push	{r4, lr}
 800b218:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800b21c:	4604      	mov	r4, r0
 800b21e:	b153      	cbz	r3, 800b236 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b220:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800b224:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800b228:	2101      	movs	r1, #1
 800b22a:	301c      	adds	r0, #28
 800b22c:	f005 f8fa 	bl	8010424 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b230:	2300      	movs	r3, #0
 800b232:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b236:	bd10      	pop	{r4, pc}

0800b238 <_ZN8touchgfx3HAL3lcdEv>:
 800b238:	4b04      	ldr	r3, [pc, #16]	@ (800b24c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800b23a:	681b      	ldr	r3, [r3, #0]
 800b23c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800b240:	b10a      	cbz	r2, 800b246 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800b242:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800b244:	b900      	cbnz	r0, 800b248 <_ZN8touchgfx3HAL3lcdEv+0x10>
 800b246:	6898      	ldr	r0, [r3, #8]
 800b248:	4770      	bx	lr
 800b24a:	bf00      	nop
 800b24c:	20082f08 	.word	0x20082f08

0800b250 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b250:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b254:	4604      	mov	r4, r0
 800b256:	2000      	movs	r0, #0
 800b258:	b085      	sub	sp, #20
 800b25a:	ad04      	add	r5, sp, #16
 800b25c:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b260:	69a0      	ldr	r0, [r4, #24]
 800b262:	4699      	mov	r9, r3
 800b264:	6806      	ldr	r6, [r0, #0]
 800b266:	9501      	str	r5, [sp, #4]
 800b268:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800b26c:	460f      	mov	r7, r1
 800b26e:	9500      	str	r5, [sp, #0]
 800b270:	6835      	ldr	r5, [r6, #0]
 800b272:	4690      	mov	r8, r2
 800b274:	47a8      	blx	r5
 800b276:	4d10      	ldr	r5, [pc, #64]	@ (800b2b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b278:	4606      	mov	r6, r0
 800b27a:	f8a5 9000 	strh.w	r9, [r5]
 800b27e:	f7ff ffdb 	bl	800b238 <_ZN8touchgfx3HAL3lcdEv>
 800b282:	6803      	ldr	r3, [r0, #0]
 800b284:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b286:	4798      	blx	r3
 800b288:	b128      	cbz	r0, 800b296 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b28a:	2801      	cmp	r0, #1
 800b28c:	d00b      	beq.n	800b2a6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b28e:	4630      	mov	r0, r6
 800b290:	b005      	add	sp, #20
 800b292:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b296:	882b      	ldrh	r3, [r5, #0]
 800b298:	fb08 7203 	mla	r2, r8, r3, r7
 800b29c:	9b03      	ldr	r3, [sp, #12]
 800b29e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b2a2:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800b2a4:	e7f3      	b.n	800b28e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b2a6:	882a      	ldrh	r2, [r5, #0]
 800b2a8:	9b03      	ldr	r3, [sp, #12]
 800b2aa:	fb08 7202 	mla	r2, r8, r2, r7
 800b2ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b2b2:	1a9a      	subs	r2, r3, r2
 800b2b4:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800b2b6:	e7ea      	b.n	800b28e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b2b8:	20082f02 	.word	0x20082f02

0800b2bc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b2bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b2be:	b08b      	sub	sp, #44	@ 0x2c
 800b2c0:	4617      	mov	r7, r2
 800b2c2:	4604      	mov	r4, r0
 800b2c4:	460e      	mov	r6, r1
 800b2c6:	461d      	mov	r5, r3
 800b2c8:	f7ff ffb6 	bl	800b238 <_ZN8touchgfx3HAL3lcdEv>
 800b2cc:	6803      	ldr	r3, [r0, #0]
 800b2ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b2d0:	4798      	blx	r3
 800b2d2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b2d6:	9007      	str	r0, [sp, #28]
 800b2d8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b2dc:	4b0d      	ldr	r3, [pc, #52]	@ (800b314 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b2de:	6822      	ldr	r2, [r4, #0]
 800b2e0:	881b      	ldrh	r3, [r3, #0]
 800b2e2:	4631      	mov	r1, r6
 800b2e4:	9306      	str	r3, [sp, #24]
 800b2e6:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b2ea:	4620      	mov	r0, r4
 800b2ec:	9305      	str	r3, [sp, #20]
 800b2ee:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800b2f2:	9304      	str	r3, [sp, #16]
 800b2f4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b2f8:	9303      	str	r3, [sp, #12]
 800b2fa:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b2fe:	9302      	str	r3, [sp, #8]
 800b300:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b304:	e9cd 5300 	strd	r5, r3, [sp]
 800b308:	463b      	mov	r3, r7
 800b30a:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800b30c:	2200      	movs	r2, #0
 800b30e:	47a8      	blx	r5
 800b310:	b00b      	add	sp, #44	@ 0x2c
 800b312:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b314:	20082f02 	.word	0x20082f02

0800b318 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b318:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b31c:	4698      	mov	r8, r3
 800b31e:	6803      	ldr	r3, [r0, #0]
 800b320:	b08b      	sub	sp, #44	@ 0x2c
 800b322:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800b324:	4b14      	ldr	r3, [pc, #80]	@ (800b378 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b326:	4617      	mov	r7, r2
 800b328:	f8b3 9000 	ldrh.w	r9, [r3]
 800b32c:	460e      	mov	r6, r1
 800b32e:	4604      	mov	r4, r0
 800b330:	f7ff ff82 	bl	800b238 <_ZN8touchgfx3HAL3lcdEv>
 800b334:	6803      	ldr	r3, [r0, #0]
 800b336:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b338:	4798      	blx	r3
 800b33a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b33e:	2200      	movs	r2, #0
 800b340:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b344:	2302      	movs	r3, #2
 800b346:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b34a:	2301      	movs	r3, #1
 800b34c:	9305      	str	r3, [sp, #20]
 800b34e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b352:	4631      	mov	r1, r6
 800b354:	9304      	str	r3, [sp, #16]
 800b356:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b35a:	4620      	mov	r0, r4
 800b35c:	9303      	str	r3, [sp, #12]
 800b35e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b362:	9302      	str	r3, [sp, #8]
 800b364:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b368:	e9cd 8300 	strd	r8, r3, [sp]
 800b36c:	463b      	mov	r3, r7
 800b36e:	47a8      	blx	r5
 800b370:	b00b      	add	sp, #44	@ 0x2c
 800b372:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b376:	bf00      	nop
 800b378:	20082f02 	.word	0x20082f02

0800b37c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b37c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b380:	4698      	mov	r8, r3
 800b382:	6803      	ldr	r3, [r0, #0]
 800b384:	b087      	sub	sp, #28
 800b386:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800b388:	4b10      	ldr	r3, [pc, #64]	@ (800b3cc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b38a:	460e      	mov	r6, r1
 800b38c:	f8b3 9000 	ldrh.w	r9, [r3]
 800b390:	4617      	mov	r7, r2
 800b392:	4604      	mov	r4, r0
 800b394:	f7ff ff50 	bl	800b238 <_ZN8touchgfx3HAL3lcdEv>
 800b398:	6803      	ldr	r3, [r0, #0]
 800b39a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b39c:	4798      	blx	r3
 800b39e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800b3a2:	f8cd 900c 	str.w	r9, [sp, #12]
 800b3a6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b3aa:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800b3ae:	463a      	mov	r2, r7
 800b3b0:	9302      	str	r3, [sp, #8]
 800b3b2:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800b3b6:	4631      	mov	r1, r6
 800b3b8:	9301      	str	r3, [sp, #4]
 800b3ba:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800b3be:	4620      	mov	r0, r4
 800b3c0:	9300      	str	r3, [sp, #0]
 800b3c2:	4643      	mov	r3, r8
 800b3c4:	47a8      	blx	r5
 800b3c6:	b007      	add	sp, #28
 800b3c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b3cc:	20082f02 	.word	0x20082f02

0800b3d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b3d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b3d4:	4604      	mov	r4, r0
 800b3d6:	b08f      	sub	sp, #60	@ 0x3c
 800b3d8:	4610      	mov	r0, r2
 800b3da:	460d      	mov	r5, r1
 800b3dc:	4691      	mov	r9, r2
 800b3de:	461e      	mov	r6, r3
 800b3e0:	f004 fd54 	bl	800fe8c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b3e4:	2800      	cmp	r0, #0
 800b3e6:	f000 809d 	beq.w	800b524 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b3ea:	6823      	ldr	r3, [r4, #0]
 800b3ec:	4620      	mov	r0, r4
 800b3ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b3f0:	4798      	blx	r3
 800b3f2:	6823      	ldr	r3, [r4, #0]
 800b3f4:	f8df b190 	ldr.w	fp, [pc, #400]	@ 800b588 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b3f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b3fa:	4620      	mov	r0, r4
 800b3fc:	4798      	blx	r3
 800b3fe:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800b58c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b402:	f8bb 3000 	ldrh.w	r3, [fp]
 800b406:	4f5d      	ldr	r7, [pc, #372]	@ (800b57c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b408:	9301      	str	r3, [sp, #4]
 800b40a:	f8ba 3000 	ldrh.w	r3, [sl]
 800b40e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800b412:	9302      	str	r3, [sp, #8]
 800b414:	883b      	ldrh	r3, [r7, #0]
 800b416:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b41a:	9303      	str	r3, [sp, #12]
 800b41c:	4b58      	ldr	r3, [pc, #352]	@ (800b580 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b41e:	4640      	mov	r0, r8
 800b420:	881a      	ldrh	r2, [r3, #0]
 800b422:	9305      	str	r3, [sp, #20]
 800b424:	9204      	str	r2, [sp, #16]
 800b426:	f004 fdc5 	bl	800ffb4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b42a:	8038      	strh	r0, [r7, #0]
 800b42c:	4640      	mov	r0, r8
 800b42e:	f004 fdf5 	bl	801001c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b432:	9b05      	ldr	r3, [sp, #20]
 800b434:	b280      	uxth	r0, r0
 800b436:	8018      	strh	r0, [r3, #0]
 800b438:	4b52      	ldr	r3, [pc, #328]	@ (800b584 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b43a:	781b      	ldrb	r3, [r3, #0]
 800b43c:	2b00      	cmp	r3, #0
 800b43e:	d174      	bne.n	800b52a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b440:	883b      	ldrh	r3, [r7, #0]
 800b442:	f8aa 0000 	strh.w	r0, [sl]
 800b446:	f8ab 3000 	strh.w	r3, [fp]
 800b44a:	4648      	mov	r0, r9
 800b44c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800b450:	f004 fd1c 	bl	800fe8c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b454:	2200      	movs	r2, #0
 800b456:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800b45a:	4611      	mov	r1, r2
 800b45c:	4628      	mov	r0, r5
 800b45e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b462:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b466:	f7f7 ff32 	bl	80032ce <_ZN8touchgfx8Drawable5setXYEss>
 800b46a:	2301      	movs	r3, #1
 800b46c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800b470:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800b474:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b478:	2b00      	cmp	r3, #0
 800b47a:	dd5c      	ble.n	800b536 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b47c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b480:	2b00      	cmp	r3, #0
 800b482:	dd58      	ble.n	800b536 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b484:	462a      	mov	r2, r5
 800b486:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b48a:	ab0a      	add	r3, sp, #40	@ 0x28
 800b48c:	6851      	ldr	r1, [r2, #4]
 800b48e:	c303      	stmia	r3!, {r0, r1}
 800b490:	4631      	mov	r1, r6
 800b492:	a80a      	add	r0, sp, #40	@ 0x28
 800b494:	f7ff fbec 	bl	800ac70 <_ZN8touchgfx4RectaNERKS0_>
 800b498:	2100      	movs	r1, #0
 800b49a:	4b38      	ldr	r3, [pc, #224]	@ (800b57c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b49c:	910c      	str	r1, [sp, #48]	@ 0x30
 800b49e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b4a2:	4b37      	ldr	r3, [pc, #220]	@ (800b580 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b4a4:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800b4a8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b4ac:	aa0a      	add	r2, sp, #40	@ 0x28
 800b4ae:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800b4b2:	ab08      	add	r3, sp, #32
 800b4b4:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b4b8:	e883 0003 	stmia.w	r3, {r0, r1}
 800b4bc:	4618      	mov	r0, r3
 800b4be:	a90c      	add	r1, sp, #48	@ 0x30
 800b4c0:	f7ff fbd6 	bl	800ac70 <_ZN8touchgfx4RectaNERKS0_>
 800b4c4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800b4c6:	2b00      	cmp	r3, #0
 800b4c8:	d13c      	bne.n	800b544 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b4ca:	2000      	movs	r0, #0
 800b4cc:	2600      	movs	r6, #0
 800b4ce:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800b4d2:	696b      	ldr	r3, [r5, #20]
 800b4d4:	682a      	ldr	r2, [r5, #0]
 800b4d6:	616e      	str	r6, [r5, #20]
 800b4d8:	9305      	str	r3, [sp, #20]
 800b4da:	6892      	ldr	r2, [r2, #8]
 800b4dc:	a908      	add	r1, sp, #32
 800b4de:	4628      	mov	r0, r5
 800b4e0:	4790      	blx	r2
 800b4e2:	9b05      	ldr	r3, [sp, #20]
 800b4e4:	4652      	mov	r2, sl
 800b4e6:	616b      	str	r3, [r5, #20]
 800b4e8:	4649      	mov	r1, r9
 800b4ea:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800b4ee:	4628      	mov	r0, r5
 800b4f0:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800b4f4:	f7f7 feeb 	bl	80032ce <_ZN8touchgfx8Drawable5setXYEss>
 800b4f8:	9a01      	ldr	r2, [sp, #4]
 800b4fa:	4b23      	ldr	r3, [pc, #140]	@ (800b588 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b4fc:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800b500:	801a      	strh	r2, [r3, #0]
 800b502:	9a02      	ldr	r2, [sp, #8]
 800b504:	4b21      	ldr	r3, [pc, #132]	@ (800b58c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b506:	4620      	mov	r0, r4
 800b508:	801a      	strh	r2, [r3, #0]
 800b50a:	9a03      	ldr	r2, [sp, #12]
 800b50c:	4b1b      	ldr	r3, [pc, #108]	@ (800b57c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b50e:	801a      	strh	r2, [r3, #0]
 800b510:	4b1b      	ldr	r3, [pc, #108]	@ (800b580 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b512:	9a04      	ldr	r2, [sp, #16]
 800b514:	801a      	strh	r2, [r3, #0]
 800b516:	6823      	ldr	r3, [r4, #0]
 800b518:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b51a:	4798      	blx	r3
 800b51c:	6823      	ldr	r3, [r4, #0]
 800b51e:	4620      	mov	r0, r4
 800b520:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b522:	4798      	blx	r3
 800b524:	b00f      	add	sp, #60	@ 0x3c
 800b526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b52a:	883b      	ldrh	r3, [r7, #0]
 800b52c:	f8ab 0000 	strh.w	r0, [fp]
 800b530:	f8aa 3000 	strh.w	r3, [sl]
 800b534:	e789      	b.n	800b44a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b536:	462a      	mov	r2, r5
 800b538:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b53c:	ab0a      	add	r3, sp, #40	@ 0x28
 800b53e:	6851      	ldr	r1, [r2, #4]
 800b540:	c303      	stmia	r3!, {r0, r1}
 800b542:	e7a9      	b.n	800b498 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b544:	a807      	add	r0, sp, #28
 800b546:	f004 fe73 	bl	8010230 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b54a:	4606      	mov	r6, r0
 800b54c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800b54e:	6803      	ldr	r3, [r0, #0]
 800b550:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b552:	4798      	blx	r3
 800b554:	4286      	cmp	r6, r0
 800b556:	d1b8      	bne.n	800b4ca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b558:	f7ff fe6e 	bl	800b238 <_ZN8touchgfx3HAL3lcdEv>
 800b55c:	6803      	ldr	r3, [r0, #0]
 800b55e:	4606      	mov	r6, r0
 800b560:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b562:	a807      	add	r0, sp, #28
 800b564:	9305      	str	r3, [sp, #20]
 800b566:	f004 fe63 	bl	8010230 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b56a:	9b05      	ldr	r3, [sp, #20]
 800b56c:	4601      	mov	r1, r0
 800b56e:	4630      	mov	r0, r6
 800b570:	4798      	blx	r3
 800b572:	f080 0001 	eor.w	r0, r0, #1
 800b576:	b2c0      	uxtb	r0, r0
 800b578:	e7a8      	b.n	800b4cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b57a:	bf00      	nop
 800b57c:	20082efc 	.word	0x20082efc
 800b580:	20082efe 	.word	0x20082efe
 800b584:	20082f00 	.word	0x20082f00
 800b588:	20082f02 	.word	0x20082f02
 800b58c:	20082f04 	.word	0x20082f04

0800b590 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b590:	b510      	push	{r4, lr}
 800b592:	4b07      	ldr	r3, [pc, #28]	@ (800b5b0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b594:	4604      	mov	r4, r0
 800b596:	781b      	ldrb	r3, [r3, #0]
 800b598:	b13b      	cbz	r3, 800b5aa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b59a:	6803      	ldr	r3, [r0, #0]
 800b59c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b59e:	4798      	blx	r3
 800b5a0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b5a2:	4283      	cmp	r3, r0
 800b5a4:	d101      	bne.n	800b5aa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b5a6:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800b5a8:	bd10      	pop	{r4, pc}
 800b5aa:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800b5ac:	e7fc      	b.n	800b5a8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b5ae:	bf00      	nop
 800b5b0:	20082f06 	.word	0x20082f06

0800b5b4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b5b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b5b8:	461d      	mov	r5, r3
 800b5ba:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b5be:	2400      	movs	r4, #0
 800b5c0:	b08a      	sub	sp, #40	@ 0x28
 800b5c2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b5c6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b5ca:	4690      	mov	r8, r2
 800b5cc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b5d0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b5d4:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800b5d8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b5dc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b5e0:	4607      	mov	r7, r0
 800b5e2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b5e6:	9404      	str	r4, [sp, #16]
 800b5e8:	f88d 4020 	strb.w	r4, [sp, #32]
 800b5ec:	f7ff ffd0 	bl	800b590 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b5f0:	fb06 8505 	mla	r5, r6, r5, r8
 800b5f4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b5f8:	6878      	ldr	r0, [r7, #4]
 800b5fa:	9505      	str	r5, [sp, #20]
 800b5fc:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b600:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b604:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800b608:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b60c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b610:	6803      	ldr	r3, [r0, #0]
 800b612:	a901      	add	r1, sp, #4
 800b614:	685b      	ldr	r3, [r3, #4]
 800b616:	4798      	blx	r3
 800b618:	b00a      	add	sp, #40	@ 0x28
 800b61a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b61e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b61e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b622:	2400      	movs	r4, #0
 800b624:	461d      	mov	r5, r3
 800b626:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800b62a:	4691      	mov	r9, r2
 800b62c:	b08b      	sub	sp, #44	@ 0x2c
 800b62e:	4688      	mov	r8, r1
 800b630:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800b634:	4607      	mov	r7, r0
 800b636:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b63a:	9404      	str	r4, [sp, #16]
 800b63c:	f7ff ffa8 	bl	800b590 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b640:	fb06 9505 	mla	r5, r6, r5, r9
 800b644:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b648:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b64c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b650:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b654:	6878      	ldr	r0, [r7, #4]
 800b656:	9505      	str	r5, [sp, #20]
 800b658:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b65c:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b660:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b664:	f8cd 8010 	str.w	r8, [sp, #16]
 800b668:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b66c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b670:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b674:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b678:	6803      	ldr	r3, [r0, #0]
 800b67a:	a901      	add	r1, sp, #4
 800b67c:	685b      	ldr	r3, [r3, #4]
 800b67e:	4798      	blx	r3
 800b680:	b00b      	add	sp, #44	@ 0x2c
 800b682:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b688 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b688:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b68c:	4698      	mov	r8, r3
 800b68e:	2300      	movs	r3, #0
 800b690:	b08a      	sub	sp, #40	@ 0x28
 800b692:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800b696:	4606      	mov	r6, r0
 800b698:	2d0b      	cmp	r5, #11
 800b69a:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800b69e:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800b6a2:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800b6a6:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800b6aa:	9304      	str	r3, [sp, #16]
 800b6ac:	d137      	bne.n	800b71e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b6ae:	2380      	movs	r3, #128	@ 0x80
 800b6b0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b6b4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b6b8:	f88d 0020 	strb.w	r0, [sp, #32]
 800b6bc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b6c0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b6c4:	4630      	mov	r0, r6
 800b6c6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b6ca:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b6ce:	9203      	str	r2, [sp, #12]
 800b6d0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b6d4:	f7ff ff5c 	bl	800b590 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6d8:	2c0b      	cmp	r4, #11
 800b6da:	bf8c      	ite	hi
 800b6dc:	2100      	movhi	r1, #0
 800b6de:	4b1b      	ldrls	r3, [pc, #108]	@ (800b74c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b6e0:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800b6e4:	bf98      	it	ls
 800b6e6:	5d19      	ldrbls	r1, [r3, r4]
 800b6e8:	fb02 8307 	mla	r3, r2, r7, r8
 800b6ec:	10c9      	asrs	r1, r1, #3
 800b6ee:	fb01 0003 	mla	r0, r1, r3, r0
 800b6f2:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800b6f6:	9005      	str	r0, [sp, #20]
 800b6f8:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b6fc:	2300      	movs	r3, #0
 800b6fe:	6870      	ldr	r0, [r6, #4]
 800b700:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b704:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800b708:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b70c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b710:	6803      	ldr	r3, [r0, #0]
 800b712:	a901      	add	r1, sp, #4
 800b714:	685b      	ldr	r3, [r3, #4]
 800b716:	4798      	blx	r3
 800b718:	b00a      	add	sp, #40	@ 0x28
 800b71a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b71e:	2d02      	cmp	r5, #2
 800b720:	d109      	bne.n	800b736 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b722:	28ff      	cmp	r0, #255	@ 0xff
 800b724:	d105      	bne.n	800b732 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b726:	f1bc 0f00 	cmp.w	ip, #0
 800b72a:	bf14      	ite	ne
 800b72c:	2340      	movne	r3, #64	@ 0x40
 800b72e:	2320      	moveq	r3, #32
 800b730:	e7be      	b.n	800b6b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b732:	2340      	movs	r3, #64	@ 0x40
 800b734:	e7bc      	b.n	800b6b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b736:	28ff      	cmp	r0, #255	@ 0xff
 800b738:	d105      	bne.n	800b746 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b73a:	f1bc 0f00 	cmp.w	ip, #0
 800b73e:	bf14      	ite	ne
 800b740:	2304      	movne	r3, #4
 800b742:	2301      	moveq	r3, #1
 800b744:	e7b4      	b.n	800b6b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b746:	2304      	movs	r3, #4
 800b748:	e7b2      	b.n	800b6b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b74a:	bf00      	nop
 800b74c:	080359e8 	.word	0x080359e8

0800b750 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b754:	b08b      	sub	sp, #44	@ 0x2c
 800b756:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800b75a:	461d      	mov	r5, r3
 800b75c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800b760:	bf14      	ite	ne
 800b762:	2308      	movne	r3, #8
 800b764:	2302      	moveq	r3, #2
 800b766:	2400      	movs	r4, #0
 800b768:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b76c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b770:	4688      	mov	r8, r1
 800b772:	4693      	mov	fp, r2
 800b774:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800b778:	9404      	str	r4, [sp, #16]
 800b77a:	4607      	mov	r7, r0
 800b77c:	f7ff ff08 	bl	800b590 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b780:	2e0b      	cmp	r6, #11
 800b782:	bf98      	it	ls
 800b784:	4b15      	ldrls	r3, [pc, #84]	@ (800b7dc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b786:	fb05 b50a 	mla	r5, r5, sl, fp
 800b78a:	bf98      	it	ls
 800b78c:	5d9c      	ldrbls	r4, [r3, r6]
 800b78e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b792:	10e4      	asrs	r4, r4, #3
 800b794:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b798:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b79c:	fb04 0405 	mla	r4, r4, r5, r0
 800b7a0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b7a4:	2300      	movs	r3, #0
 800b7a6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800b7aa:	6878      	ldr	r0, [r7, #4]
 800b7ac:	9405      	str	r4, [sp, #20]
 800b7ae:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b7b2:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b7b6:	f8cd 8010 	str.w	r8, [sp, #16]
 800b7ba:	f88d 9020 	strb.w	r9, [sp, #32]
 800b7be:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800b7c2:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b7c6:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800b7ca:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800b7ce:	6803      	ldr	r3, [r0, #0]
 800b7d0:	a901      	add	r1, sp, #4
 800b7d2:	685b      	ldr	r3, [r3, #4]
 800b7d4:	4798      	blx	r3
 800b7d6:	b00b      	add	sp, #44	@ 0x2c
 800b7d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b7dc:	080359e8 	.word	0x080359e8

0800b7e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b7e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b7e4:	461e      	mov	r6, r3
 800b7e6:	4b0a      	ldr	r3, [pc, #40]	@ (800b810 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b7e8:	460f      	mov	r7, r1
 800b7ea:	881d      	ldrh	r5, [r3, #0]
 800b7ec:	4690      	mov	r8, r2
 800b7ee:	f7ff fd23 	bl	800b238 <_ZN8touchgfx3HAL3lcdEv>
 800b7f2:	6803      	ldr	r3, [r0, #0]
 800b7f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b7f6:	4798      	blx	r3
 800b7f8:	280b      	cmp	r0, #11
 800b7fa:	bf8e      	itee	hi
 800b7fc:	2400      	movhi	r4, #0
 800b7fe:	4b05      	ldrls	r3, [pc, #20]	@ (800b814 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b800:	5c1c      	ldrbls	r4, [r3, r0]
 800b802:	fb08 7005 	mla	r0, r8, r5, r7
 800b806:	10e4      	asrs	r4, r4, #3
 800b808:	fb04 6000 	mla	r0, r4, r0, r6
 800b80c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b810:	20082f02 	.word	0x20082f02
 800b814:	080359e8 	.word	0x080359e8

0800b818 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b818:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b81a:	2500      	movs	r5, #0
 800b81c:	b08b      	sub	sp, #44	@ 0x2c
 800b81e:	461f      	mov	r7, r3
 800b820:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b824:	4604      	mov	r4, r0
 800b826:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b82a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b82e:	4616      	mov	r6, r2
 800b830:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b834:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b838:	9504      	str	r5, [sp, #16]
 800b83a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b83e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b842:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b846:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b84a:	f88d 3020 	strb.w	r3, [sp, #32]
 800b84e:	f7ff fe9f 	bl	800b590 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b852:	463a      	mov	r2, r7
 800b854:	4631      	mov	r1, r6
 800b856:	4603      	mov	r3, r0
 800b858:	4620      	mov	r0, r4
 800b85a:	f7ff ffc1 	bl	800b7e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b85e:	4b0e      	ldr	r3, [pc, #56]	@ (800b898 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b860:	9005      	str	r0, [sp, #20]
 800b862:	881b      	ldrh	r3, [r3, #0]
 800b864:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b868:	f7ff fce6 	bl	800b238 <_ZN8touchgfx3HAL3lcdEv>
 800b86c:	6803      	ldr	r3, [r0, #0]
 800b86e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b870:	4798      	blx	r3
 800b872:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800b874:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800b878:	9304      	str	r3, [sp, #16]
 800b87a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b87e:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800b882:	6860      	ldr	r0, [r4, #4]
 800b884:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b888:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800b88c:	6803      	ldr	r3, [r0, #0]
 800b88e:	a901      	add	r1, sp, #4
 800b890:	685b      	ldr	r3, [r3, #4]
 800b892:	4798      	blx	r3
 800b894:	b00b      	add	sp, #44	@ 0x2c
 800b896:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b898:	20082f02 	.word	0x20082f02

0800b89c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b89c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b89e:	b08d      	sub	sp, #52	@ 0x34
 800b8a0:	466b      	mov	r3, sp
 800b8a2:	e883 0006 	stmia.w	r3, {r1, r2}
 800b8a6:	2300      	movs	r3, #0
 800b8a8:	2501      	movs	r5, #1
 800b8aa:	9306      	str	r3, [sp, #24]
 800b8ac:	6803      	ldr	r3, [r0, #0]
 800b8ae:	9503      	str	r5, [sp, #12]
 800b8b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b8b2:	4604      	mov	r4, r0
 800b8b4:	f8bd 6000 	ldrh.w	r6, [sp]
 800b8b8:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b8bc:	4798      	blx	r3
 800b8be:	463a      	mov	r2, r7
 800b8c0:	4631      	mov	r1, r6
 800b8c2:	4603      	mov	r3, r0
 800b8c4:	4620      	mov	r0, r4
 800b8c6:	f7ff ff8b 	bl	800b7e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b8ca:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800b8cc:	9004      	str	r0, [sp, #16]
 800b8ce:	9307      	str	r3, [sp, #28]
 800b8d0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b8d4:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b8d8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b8dc:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b8e0:	4b0e      	ldr	r3, [pc, #56]	@ (800b91c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b8e2:	881b      	ldrh	r3, [r3, #0]
 800b8e4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b8e8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b8ec:	f7ff fca4 	bl	800b238 <_ZN8touchgfx3HAL3lcdEv>
 800b8f0:	6803      	ldr	r3, [r0, #0]
 800b8f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b8f4:	4798      	blx	r3
 800b8f6:	23ff      	movs	r3, #255	@ 0xff
 800b8f8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b8fc:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b900:	6860      	ldr	r0, [r4, #4]
 800b902:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b906:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b90a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b90e:	6803      	ldr	r3, [r0, #0]
 800b910:	a903      	add	r1, sp, #12
 800b912:	685b      	ldr	r3, [r3, #4]
 800b914:	4798      	blx	r3
 800b916:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800b918:	b00d      	add	sp, #52	@ 0x34
 800b91a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b91c:	20082f02 	.word	0x20082f02

0800b920 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b920:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b924:	b08c      	sub	sp, #48	@ 0x30
 800b926:	466d      	mov	r5, sp
 800b928:	461e      	mov	r6, r3
 800b92a:	2300      	movs	r3, #0
 800b92c:	e885 0006 	stmia.w	r5, {r1, r2}
 800b930:	2501      	movs	r5, #1
 800b932:	9306      	str	r3, [sp, #24]
 800b934:	6803      	ldr	r3, [r0, #0]
 800b936:	9503      	str	r5, [sp, #12]
 800b938:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b93a:	4604      	mov	r4, r0
 800b93c:	f8bd 7000 	ldrh.w	r7, [sp]
 800b940:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b944:	4798      	blx	r3
 800b946:	4642      	mov	r2, r8
 800b948:	4639      	mov	r1, r7
 800b94a:	4603      	mov	r3, r0
 800b94c:	4620      	mov	r0, r4
 800b94e:	f7ff ff47 	bl	800b7e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b952:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b956:	9004      	str	r0, [sp, #16]
 800b958:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b95c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b960:	9607      	str	r6, [sp, #28]
 800b962:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b966:	4b10      	ldr	r3, [pc, #64]	@ (800b9a8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b968:	881b      	ldrh	r3, [r3, #0]
 800b96a:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b96e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b970:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b974:	f7ff fc60 	bl	800b238 <_ZN8touchgfx3HAL3lcdEv>
 800b978:	6803      	ldr	r3, [r0, #0]
 800b97a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b97c:	4798      	blx	r3
 800b97e:	23ff      	movs	r3, #255	@ 0xff
 800b980:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b984:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b988:	6860      	ldr	r0, [r4, #4]
 800b98a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b98e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b992:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b996:	6803      	ldr	r3, [r0, #0]
 800b998:	a903      	add	r1, sp, #12
 800b99a:	685b      	ldr	r3, [r3, #4]
 800b99c:	4798      	blx	r3
 800b99e:	4630      	mov	r0, r6
 800b9a0:	b00c      	add	sp, #48	@ 0x30
 800b9a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b9a6:	bf00      	nop
 800b9a8:	20082f02 	.word	0x20082f02

0800b9ac <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b9ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b9ae:	b085      	sub	sp, #20
 800b9b0:	ac02      	add	r4, sp, #8
 800b9b2:	e884 0006 	stmia.w	r4, {r1, r2}
 800b9b6:	4605      	mov	r5, r0
 800b9b8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b9bc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b9c0:	f7ff fde6 	bl	800b590 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b9c4:	463a      	mov	r2, r7
 800b9c6:	4603      	mov	r3, r0
 800b9c8:	4631      	mov	r1, r6
 800b9ca:	4628      	mov	r0, r5
 800b9cc:	f7ff ff08 	bl	800b7e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b9d0:	4a05      	ldr	r2, [pc, #20]	@ (800b9e8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b9d2:	682b      	ldr	r3, [r5, #0]
 800b9d4:	8812      	ldrh	r2, [r2, #0]
 800b9d6:	9200      	str	r2, [sp, #0]
 800b9d8:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800b9da:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b9de:	4603      	mov	r3, r0
 800b9e0:	4628      	mov	r0, r5
 800b9e2:	47b0      	blx	r6
 800b9e4:	b005      	add	sp, #20
 800b9e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9e8:	20082f02 	.word	0x20082f02

0800b9ec <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b9ec:	b570      	push	{r4, r5, r6, lr}
 800b9ee:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800b9f2:	4604      	mov	r4, r0
 800b9f4:	b19b      	cbz	r3, 800ba1e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b9f6:	2002      	movs	r0, #2
 800b9f8:	f7f5 fbde 	bl	80011b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b9fc:	2300      	movs	r3, #0
 800b9fe:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800ba02:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800ba06:	6823      	ldr	r3, [r4, #0]
 800ba08:	4620      	mov	r0, r4
 800ba0a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800ba0e:	f7ff fdbf 	bl	800b590 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba12:	462b      	mov	r3, r5
 800ba14:	4601      	mov	r1, r0
 800ba16:	4620      	mov	r0, r4
 800ba18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba1c:	4718      	bx	r3
 800ba1e:	bd70      	pop	{r4, r5, r6, pc}

0800ba20 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800ba20:	b570      	push	{r4, r5, r6, lr}
 800ba22:	4605      	mov	r5, r0
 800ba24:	460c      	mov	r4, r1
 800ba26:	2003      	movs	r0, #3
 800ba28:	b149      	cbz	r1, 800ba3e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800ba2a:	f7f5 fb91 	bl	8001150 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800ba2e:	6928      	ldr	r0, [r5, #16]
 800ba30:	b168      	cbz	r0, 800ba4e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800ba32:	2101      	movs	r1, #1
 800ba34:	6803      	ldr	r3, [r0, #0]
 800ba36:	695b      	ldr	r3, [r3, #20]
 800ba38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba3c:	4718      	bx	r3
 800ba3e:	f7f5 fba1 	bl	8001184 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ba42:	6928      	ldr	r0, [r5, #16]
 800ba44:	b118      	cbz	r0, 800ba4e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800ba46:	6803      	ldr	r3, [r0, #0]
 800ba48:	4621      	mov	r1, r4
 800ba4a:	695b      	ldr	r3, [r3, #20]
 800ba4c:	e7f4      	b.n	800ba38 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800ba4e:	bd70      	pop	{r4, r5, r6, pc}

0800ba50 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800ba50:	b538      	push	{r3, r4, r5, lr}
 800ba52:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800ba56:	4604      	mov	r4, r0
 800ba58:	428b      	cmp	r3, r1
 800ba5a:	460d      	mov	r5, r1
 800ba5c:	d006      	beq.n	800ba6c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800ba5e:	6803      	ldr	r3, [r0, #0]
 800ba60:	b929      	cbnz	r1, 800ba6e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800ba62:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800ba66:	4798      	blx	r3
 800ba68:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800ba6c:	bd38      	pop	{r3, r4, r5, pc}
 800ba6e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800ba72:	e7f8      	b.n	800ba66 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800ba74 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800ba74:	b510      	push	{r4, lr}
 800ba76:	4b0d      	ldr	r3, [pc, #52]	@ (800baac <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800ba78:	4604      	mov	r4, r0
 800ba7a:	781b      	ldrb	r3, [r3, #0]
 800ba7c:	b95b      	cbnz	r3, 800ba96 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ba7e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800ba82:	2b02      	cmp	r3, #2
 800ba84:	d007      	beq.n	800ba96 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ba86:	6840      	ldr	r0, [r0, #4]
 800ba88:	f000 f91c 	bl	800bcc4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800ba8c:	b118      	cbz	r0, 800ba96 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ba8e:	6862      	ldr	r2, [r4, #4]
 800ba90:	7a53      	ldrb	r3, [r2, #9]
 800ba92:	2b00      	cmp	r3, #0
 800ba94:	d0fc      	beq.n	800ba90 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800ba96:	f7f6 faa1 	bl	8001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ba9a:	4620      	mov	r0, r4
 800ba9c:	2100      	movs	r1, #0
 800ba9e:	f7ff ffd7 	bl	800ba50 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800baa2:	4620      	mov	r0, r4
 800baa4:	f7ff fd74 	bl	800b590 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800baa8:	bd10      	pop	{r4, pc}
 800baaa:	bf00      	nop
 800baac:	20082f06 	.word	0x20082f06

0800bab0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800bab0:	b570      	push	{r4, r5, r6, lr}
 800bab2:	4604      	mov	r4, r0
 800bab4:	6803      	ldr	r3, [r0, #0]
 800bab6:	b919      	cbnz	r1, 800bac0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bab8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800babc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800babe:	4718      	bx	r3
 800bac0:	2200      	movs	r2, #0
 800bac2:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800bac6:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800baca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800bacc:	4798      	blx	r3
 800bace:	2101      	movs	r1, #1
 800bad0:	4605      	mov	r5, r0
 800bad2:	6863      	ldr	r3, [r4, #4]
 800bad4:	4620      	mov	r0, r4
 800bad6:	7299      	strb	r1, [r3, #10]
 800bad8:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800badc:	f7ff ffb8 	bl	800ba50 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bae0:	4628      	mov	r0, r5
 800bae2:	bd70      	pop	{r4, r5, r6, pc}

0800bae4 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800bae4:	2000      	movs	r0, #0
 800bae6:	4770      	bx	lr

0800bae8 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bae8:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800baec:	1a13      	subs	r3, r2, r0
 800baee:	4258      	negs	r0, r3
 800baf0:	4158      	adcs	r0, r3
 800baf2:	4770      	bx	lr

0800baf4 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800baf4:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800baf8:	1a9b      	subs	r3, r3, r2
 800bafa:	2b00      	cmp	r3, #0
 800bafc:	bfdc      	itt	le
 800bafe:	6882      	ldrle	r2, [r0, #8]
 800bb00:	189b      	addle	r3, r3, r2
 800bb02:	2b01      	cmp	r3, #1
 800bb04:	bfcc      	ite	gt
 800bb06:	2000      	movgt	r0, #0
 800bb08:	2001      	movle	r0, #1
 800bb0a:	4770      	bx	lr

0800bb0c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bb0c:	6902      	ldr	r2, [r0, #16]
 800bb0e:	6843      	ldr	r3, [r0, #4]
 800bb10:	2024      	movs	r0, #36	@ 0x24
 800bb12:	fb00 3002 	mla	r0, r0, r2, r3
 800bb16:	4770      	bx	lr

0800bb18 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bb18:	6803      	ldr	r3, [r0, #0]
 800bb1a:	691b      	ldr	r3, [r3, #16]
 800bb1c:	4718      	bx	r3

0800bb1e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bb1e:	2301      	movs	r3, #1
 800bb20:	b570      	push	{r4, r5, r6, lr}
 800bb22:	7203      	strb	r3, [r0, #8]
 800bb24:	4604      	mov	r4, r0
 800bb26:	6840      	ldr	r0, [r0, #4]
 800bb28:	6803      	ldr	r3, [r0, #0]
 800bb2a:	699b      	ldr	r3, [r3, #24]
 800bb2c:	4798      	blx	r3
 800bb2e:	6803      	ldr	r3, [r0, #0]
 800bb30:	4605      	mov	r5, r0
 800bb32:	2b40      	cmp	r3, #64	@ 0x40
 800bb34:	d00c      	beq.n	800bb50 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb36:	d810      	bhi.n	800bb5a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bb38:	2b04      	cmp	r3, #4
 800bb3a:	d01d      	beq.n	800bb78 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bb3c:	d804      	bhi.n	800bb48 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bb3e:	2b01      	cmp	r3, #1
 800bb40:	d006      	beq.n	800bb50 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb42:	2b02      	cmp	r3, #2
 800bb44:	d02c      	beq.n	800bba0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bb46:	bd70      	pop	{r4, r5, r6, pc}
 800bb48:	2b08      	cmp	r3, #8
 800bb4a:	d01d      	beq.n	800bb88 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bb4c:	2b20      	cmp	r3, #32
 800bb4e:	d1fa      	bne.n	800bb46 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bb50:	6823      	ldr	r3, [r4, #0]
 800bb52:	4620      	mov	r0, r4
 800bb54:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bb56:	4798      	blx	r3
 800bb58:	e013      	b.n	800bb82 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bb5a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800bb5e:	d0f7      	beq.n	800bb50 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb60:	d804      	bhi.n	800bb6c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bb62:	2b80      	cmp	r3, #128	@ 0x80
 800bb64:	d0f4      	beq.n	800bb50 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb66:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800bb6a:	e7f0      	b.n	800bb4e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bb6c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800bb70:	d0ee      	beq.n	800bb50 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb72:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800bb76:	e7e5      	b.n	800bb44 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bb78:	6823      	ldr	r3, [r4, #0]
 800bb7a:	7f01      	ldrb	r1, [r0, #28]
 800bb7c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bb7e:	4620      	mov	r0, r4
 800bb80:	4798      	blx	r3
 800bb82:	6823      	ldr	r3, [r4, #0]
 800bb84:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bb86:	e006      	b.n	800bb96 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bb88:	6823      	ldr	r3, [r4, #0]
 800bb8a:	7f01      	ldrb	r1, [r0, #28]
 800bb8c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bb8e:	4620      	mov	r0, r4
 800bb90:	4798      	blx	r3
 800bb92:	6823      	ldr	r3, [r4, #0]
 800bb94:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bb96:	4629      	mov	r1, r5
 800bb98:	4620      	mov	r0, r4
 800bb9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb9e:	4718      	bx	r3
 800bba0:	6823      	ldr	r3, [r4, #0]
 800bba2:	4620      	mov	r0, r4
 800bba4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bba6:	4798      	blx	r3
 800bba8:	e7f3      	b.n	800bb92 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bbaa <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bbaa:	4770      	bx	lr

0800bbac <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bbac:	4770      	bx	lr

0800bbae <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bbae:	4770      	bx	lr

0800bbb0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bbb0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bbb4:	1ad2      	subs	r2, r2, r3
 800bbb6:	2a00      	cmp	r2, #0
 800bbb8:	b510      	push	{r4, lr}
 800bbba:	bfdc      	itt	le
 800bbbc:	6884      	ldrle	r4, [r0, #8]
 800bbbe:	1912      	addle	r2, r2, r4
 800bbc0:	2a01      	cmp	r2, #1
 800bbc2:	dd16      	ble.n	800bbf2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bbc4:	2424      	movs	r4, #36	@ 0x24
 800bbc6:	6842      	ldr	r2, [r0, #4]
 800bbc8:	fb04 2303 	mla	r3, r4, r3, r2
 800bbcc:	f101 0220 	add.w	r2, r1, #32
 800bbd0:	f851 4b04 	ldr.w	r4, [r1], #4
 800bbd4:	4291      	cmp	r1, r2
 800bbd6:	f843 4b04 	str.w	r4, [r3], #4
 800bbda:	d1f9      	bne.n	800bbd0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bbdc:	780a      	ldrb	r2, [r1, #0]
 800bbde:	701a      	strb	r2, [r3, #0]
 800bbe0:	68c3      	ldr	r3, [r0, #12]
 800bbe2:	6882      	ldr	r2, [r0, #8]
 800bbe4:	3301      	adds	r3, #1
 800bbe6:	429a      	cmp	r2, r3
 800bbe8:	bfd8      	it	le
 800bbea:	1a9b      	suble	r3, r3, r2
 800bbec:	f3bf 8f5b 	dmb	ish
 800bbf0:	60c3      	str	r3, [r0, #12]
 800bbf2:	bd10      	pop	{r4, pc}

0800bbf4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bbf4:	6903      	ldr	r3, [r0, #16]
 800bbf6:	6882      	ldr	r2, [r0, #8]
 800bbf8:	3301      	adds	r3, #1
 800bbfa:	429a      	cmp	r2, r3
 800bbfc:	bfd8      	it	le
 800bbfe:	1a9b      	suble	r3, r3, r2
 800bc00:	f3bf 8f5b 	dmb	ish
 800bc04:	6103      	str	r3, [r0, #16]
 800bc06:	4770      	bx	lr

0800bc08 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bc08:	b570      	push	{r4, r5, r6, lr}
 800bc0a:	4604      	mov	r4, r0
 800bc0c:	460e      	mov	r6, r1
 800bc0e:	6860      	ldr	r0, [r4, #4]
 800bc10:	6803      	ldr	r3, [r0, #0]
 800bc12:	685b      	ldr	r3, [r3, #4]
 800bc14:	4798      	blx	r3
 800bc16:	2800      	cmp	r0, #0
 800bc18:	d1f9      	bne.n	800bc0e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bc1a:	4d0d      	ldr	r5, [pc, #52]	@ (800bc50 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bc1c:	6828      	ldr	r0, [r5, #0]
 800bc1e:	6803      	ldr	r3, [r0, #0]
 800bc20:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bc22:	4798      	blx	r3
 800bc24:	f7f6 f9e8 	bl	8001ff8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bc28:	6828      	ldr	r0, [r5, #0]
 800bc2a:	2101      	movs	r1, #1
 800bc2c:	f7ff ff10 	bl	800ba50 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bc30:	6860      	ldr	r0, [r4, #4]
 800bc32:	4631      	mov	r1, r6
 800bc34:	6803      	ldr	r3, [r0, #0]
 800bc36:	689b      	ldr	r3, [r3, #8]
 800bc38:	4798      	blx	r3
 800bc3a:	6823      	ldr	r3, [r4, #0]
 800bc3c:	4620      	mov	r0, r4
 800bc3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bc40:	4798      	blx	r3
 800bc42:	6828      	ldr	r0, [r5, #0]
 800bc44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc48:	6803      	ldr	r3, [r0, #0]
 800bc4a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800bc4c:	4718      	bx	r3
 800bc4e:	bf00      	nop
 800bc50:	20082f08 	.word	0x20082f08

0800bc54 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bc54:	b508      	push	{r3, lr}
 800bc56:	f7f6 f9c1 	bl	8001fdc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bc5a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bc5e:	f7f6 b9c5 	b.w	8001fec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bc62 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bc62:	b510      	push	{r4, lr}
 800bc64:	4604      	mov	r4, r0
 800bc66:	2114      	movs	r1, #20
 800bc68:	f025 fa6d 	bl	8031146 <_ZdlPvj>
 800bc6c:	4620      	mov	r0, r4
 800bc6e:	bd10      	pop	{r4, pc}

0800bc70 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bc70:	b570      	push	{r4, r5, r6, lr}
 800bc72:	4604      	mov	r4, r0
 800bc74:	6840      	ldr	r0, [r0, #4]
 800bc76:	6803      	ldr	r3, [r0, #0]
 800bc78:	681b      	ldr	r3, [r3, #0]
 800bc7a:	4798      	blx	r3
 800bc7c:	4605      	mov	r5, r0
 800bc7e:	b930      	cbnz	r0, 800bc8e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bc80:	7a23      	ldrb	r3, [r4, #8]
 800bc82:	b123      	cbz	r3, 800bc8e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bc84:	6860      	ldr	r0, [r4, #4]
 800bc86:	6803      	ldr	r3, [r0, #0]
 800bc88:	695b      	ldr	r3, [r3, #20]
 800bc8a:	4798      	blx	r3
 800bc8c:	7225      	strb	r5, [r4, #8]
 800bc8e:	6860      	ldr	r0, [r4, #4]
 800bc90:	6803      	ldr	r3, [r0, #0]
 800bc92:	681b      	ldr	r3, [r3, #0]
 800bc94:	4798      	blx	r3
 800bc96:	b928      	cbnz	r0, 800bca4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bc98:	6823      	ldr	r3, [r4, #0]
 800bc9a:	4620      	mov	r0, r4
 800bc9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bca0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bca2:	4718      	bx	r3
 800bca4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bca8:	f7f6 b9ae 	b.w	8002008 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bcac <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bcac:	6082      	str	r2, [r0, #8]
 800bcae:	2200      	movs	r2, #0
 800bcb0:	b510      	push	{r4, lr}
 800bcb2:	4c03      	ldr	r4, [pc, #12]	@ (800bcc0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bcb4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bcb8:	e9c0 4100 	strd	r4, r1, [r0]
 800bcbc:	bd10      	pop	{r4, pc}
 800bcbe:	bf00      	nop
 800bcc0:	080359fc 	.word	0x080359fc

0800bcc4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bcc4:	6840      	ldr	r0, [r0, #4]
 800bcc6:	6803      	ldr	r3, [r0, #0]
 800bcc8:	681b      	ldr	r3, [r3, #0]
 800bcca:	4718      	bx	r3

0800bccc <_ZNK8touchgfx3Box12getSolidRectEv>:
 800bccc:	2300      	movs	r3, #0
 800bcce:	8083      	strh	r3, [r0, #4]
 800bcd0:	80c3      	strh	r3, [r0, #6]
 800bcd2:	8003      	strh	r3, [r0, #0]
 800bcd4:	8043      	strh	r3, [r0, #2]
 800bcd6:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800bcda:	2bff      	cmp	r3, #255	@ 0xff
 800bcdc:	bf01      	itttt	eq
 800bcde:	890b      	ldrheq	r3, [r1, #8]
 800bce0:	8083      	strheq	r3, [r0, #4]
 800bce2:	894b      	ldrheq	r3, [r1, #10]
 800bce4:	80c3      	strheq	r3, [r0, #6]
 800bce6:	4770      	bx	lr

0800bce8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800bce8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bcea:	4604      	mov	r4, r0
 800bcec:	466b      	mov	r3, sp
 800bcee:	6808      	ldr	r0, [r1, #0]
 800bcf0:	6849      	ldr	r1, [r1, #4]
 800bcf2:	c303      	stmia	r3!, {r0, r1}
 800bcf4:	6823      	ldr	r3, [r4, #0]
 800bcf6:	4669      	mov	r1, sp
 800bcf8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bcfa:	4620      	mov	r0, r4
 800bcfc:	4798      	blx	r3
 800bcfe:	4b08      	ldr	r3, [pc, #32]	@ (800bd20 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800bd00:	681b      	ldr	r3, [r3, #0]
 800bd02:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bd06:	b10a      	cbz	r2, 800bd0c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800bd08:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800bd0a:	b900      	cbnz	r0, 800bd0e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800bd0c:	6898      	ldr	r0, [r3, #8]
 800bd0e:	6803      	ldr	r3, [r0, #0]
 800bd10:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800bd12:	6a1d      	ldr	r5, [r3, #32]
 800bd14:	4669      	mov	r1, sp
 800bd16:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800bd1a:	47a8      	blx	r5
 800bd1c:	b003      	add	sp, #12
 800bd1e:	bd30      	pop	{r4, r5, pc}
 800bd20:	20082f08 	.word	0x20082f08

0800bd24 <_ZN8touchgfx3BoxD1Ev>:
 800bd24:	4770      	bx	lr

0800bd26 <_ZN8touchgfx3BoxD0Ev>:
 800bd26:	b510      	push	{r4, lr}
 800bd28:	4604      	mov	r4, r0
 800bd2a:	212c      	movs	r1, #44	@ 0x2c
 800bd2c:	f025 fa0b 	bl	8031146 <_ZdlPvj>
 800bd30:	4620      	mov	r0, r4
 800bd32:	bd10      	pop	{r4, pc}

0800bd34 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800bd34:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800bd38:	b12a      	cbz	r2, 800bd46 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800bd3a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800bd3e:	b112      	cbz	r2, 800bd46 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800bd40:	6803      	ldr	r3, [r0, #0]
 800bd42:	695b      	ldr	r3, [r3, #20]
 800bd44:	4718      	bx	r3
 800bd46:	4770      	bx	lr

0800bd48 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800bd48:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800bd4c:	4770      	bx	lr

0800bd4e <_ZNK8touchgfx6Button17invalidateContentEv>:
 800bd4e:	b508      	push	{r3, lr}
 800bd50:	f890 3032 	ldrb.w	r3, [r0, #50]	@ 0x32
 800bd54:	b10b      	cbz	r3, 800bd5a <_ZNK8touchgfx6Button17invalidateContentEv+0xc>
 800bd56:	f7f7 faa3 	bl	80032a0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800bd5a:	bd08      	pop	{r3, pc}

0800bd5c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 800bd5c:	4770      	bx	lr

0800bd5e <_ZN8touchgfx14ButtonWithIconD1Ev>:
 800bd5e:	4770      	bx	lr

0800bd60 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800bd60:	b510      	push	{r4, lr}
 800bd62:	4604      	mov	r4, r0
 800bd64:	213c      	movs	r1, #60	@ 0x3c
 800bd66:	f025 f9ee 	bl	8031146 <_ZdlPvj>
 800bd6a:	4620      	mov	r0, r4
 800bd6c:	bd10      	pop	{r4, pc}

0800bd6e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 800bd6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd72:	461c      	mov	r4, r3
 800bd74:	4606      	mov	r6, r0
 800bd76:	9f06      	ldr	r7, [sp, #24]
 800bd78:	f004 fbd5 	bl	8010526 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800bd7c:	8823      	ldrh	r3, [r4, #0]
 800bd7e:	f04f 0802 	mov.w	r8, #2
 800bd82:	86b3      	strh	r3, [r6, #52]	@ 0x34
 800bd84:	883b      	ldrh	r3, [r7, #0]
 800bd86:	4638      	mov	r0, r7
 800bd88:	86f3      	strh	r3, [r6, #54]	@ 0x36
 800bd8a:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 800bd8e:	f004 f911 	bl	800ffb4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bd92:	fb95 f5f8 	sdiv	r5, r5, r8
 800bd96:	fb90 f0f8 	sdiv	r0, r0, r8
 800bd9a:	b2ad      	uxth	r5, r5
 800bd9c:	1a2d      	subs	r5, r5, r0
 800bd9e:	8735      	strh	r5, [r6, #56]	@ 0x38
 800bda0:	4638      	mov	r0, r7
 800bda2:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 800bda6:	f004 f939 	bl	801001c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bdaa:	fb94 f4f8 	sdiv	r4, r4, r8
 800bdae:	fb90 f0f8 	sdiv	r0, r0, r8
 800bdb2:	b2a4      	uxth	r4, r4
 800bdb4:	1a24      	subs	r4, r4, r0
 800bdb6:	8774      	strh	r4, [r6, #58]	@ 0x3a
 800bdb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bdbc <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800bdbc:	b510      	push	{r4, lr}
 800bdbe:	4604      	mov	r4, r0
 800bdc0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800bdc2:	b150      	cbz	r0, 800bdda <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800bdc4:	6803      	ldr	r3, [r0, #0]
 800bdc6:	68db      	ldr	r3, [r3, #12]
 800bdc8:	4798      	blx	r3
 800bdca:	b130      	cbz	r0, 800bdda <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800bdcc:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800bdce:	4621      	mov	r1, r4
 800bdd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bdd4:	6803      	ldr	r3, [r0, #0]
 800bdd6:	689b      	ldr	r3, [r3, #8]
 800bdd8:	4718      	bx	r3
 800bdda:	bd10      	pop	{r4, pc}

0800bddc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 800bddc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bde0:	4604      	mov	r4, r0
 800bde2:	b08c      	sub	sp, #48	@ 0x30
 800bde4:	460d      	mov	r5, r1
 800bde6:	f004 fbd1 	bl	801058c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800bdea:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800bdee:	2b00      	cmp	r3, #0
 800bdf0:	d05d      	beq.n	800beae <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 800bdf2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800bdf4:	a805      	add	r0, sp, #20
 800bdf6:	f8ad 3014 	strh.w	r3, [sp, #20]
 800bdfa:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	@ 0x38
 800bdfe:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	@ 0x3a
 800be02:	f004 f8d7 	bl	800ffb4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800be06:	4606      	mov	r6, r0
 800be08:	a805      	add	r0, sp, #20
 800be0a:	f004 f907 	bl	801001c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800be0e:	6869      	ldr	r1, [r5, #4]
 800be10:	f8ad 001e 	strh.w	r0, [sp, #30]
 800be14:	6828      	ldr	r0, [r5, #0]
 800be16:	ab08      	add	r3, sp, #32
 800be18:	ad08      	add	r5, sp, #32
 800be1a:	c303      	stmia	r3!, {r0, r1}
 800be1c:	a906      	add	r1, sp, #24
 800be1e:	4628      	mov	r0, r5
 800be20:	f8ad 8018 	strh.w	r8, [sp, #24]
 800be24:	f8ad 701a 	strh.w	r7, [sp, #26]
 800be28:	f8ad 601c 	strh.w	r6, [sp, #28]
 800be2c:	f7fe ff20 	bl	800ac70 <_ZN8touchgfx4RectaNERKS0_>
 800be30:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800be34:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800be38:	429a      	cmp	r2, r3
 800be3a:	d035      	beq.n	800bea8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800be3c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 800be40:	2b00      	cmp	r3, #0
 800be42:	dd31      	ble.n	800bea8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800be44:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	@ 0x26
 800be48:	2b00      	cmp	r3, #0
 800be4a:	dd2d      	ble.n	800bea8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800be4c:	2300      	movs	r3, #0
 800be4e:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
 800be52:	6823      	ldr	r3, [r4, #0]
 800be54:	a90a      	add	r1, sp, #40	@ 0x28
 800be56:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800be58:	4620      	mov	r0, r4
 800be5a:	4798      	blx	r3
 800be5c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800be60:	8f22      	ldrh	r2, [r4, #56]	@ 0x38
 800be62:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800be66:	1a9b      	subs	r3, r3, r2
 800be68:	f8ad 3020 	strh.w	r3, [sp, #32]
 800be6c:	8f63      	ldrh	r3, [r4, #58]	@ 0x3a
 800be6e:	1ac9      	subs	r1, r1, r3
 800be70:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 800be74:	490f      	ldr	r1, [pc, #60]	@ (800beb4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 800be76:	6809      	ldr	r1, [r1, #0]
 800be78:	f891 0058 	ldrb.w	r0, [r1, #88]	@ 0x58
 800be7c:	b108      	cbz	r0, 800be82 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 800be7e:	6cc8      	ldr	r0, [r1, #76]	@ 0x4c
 800be80:	b900      	cbnz	r0, 800be84 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 800be82:	6888      	ldr	r0, [r1, #8]
 800be84:	2601      	movs	r6, #1
 800be86:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 800be8a:	440b      	add	r3, r1
 800be8c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 800be90:	b21b      	sxth	r3, r3
 800be92:	440a      	add	r2, r1
 800be94:	6801      	ldr	r1, [r0, #0]
 800be96:	9602      	str	r6, [sp, #8]
 800be98:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800be9c:	b212      	sxth	r2, r2
 800be9e:	e9cd 5400 	strd	r5, r4, [sp]
 800bea2:	688c      	ldr	r4, [r1, #8]
 800bea4:	a905      	add	r1, sp, #20
 800bea6:	47a0      	blx	r4
 800bea8:	b00c      	add	sp, #48	@ 0x30
 800beaa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800beae:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800beb0:	e7a0      	b.n	800bdf4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 800beb2:	bf00      	nop
 800beb4:	20082f08 	.word	0x20082f08

0800beb8 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 800beb8:	2101      	movs	r1, #1
 800beba:	2200      	movs	r2, #0
 800bebc:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800bec0:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800bec4:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800bec8:	b510      	push	{r4, lr}
 800beca:	4c0d      	ldr	r4, [pc, #52]	@ (800bf00 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 800becc:	8082      	strh	r2, [r0, #4]
 800bece:	80c2      	strh	r2, [r0, #6]
 800bed0:	8102      	strh	r2, [r0, #8]
 800bed2:	8142      	strh	r2, [r0, #10]
 800bed4:	8182      	strh	r2, [r0, #12]
 800bed6:	81c2      	strh	r2, [r0, #14]
 800bed8:	8202      	strh	r2, [r0, #16]
 800beda:	8242      	strh	r2, [r0, #18]
 800bedc:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bee0:	61c2      	str	r2, [r0, #28]
 800bee2:	8402      	strh	r2, [r0, #32]
 800bee4:	8442      	strh	r2, [r0, #34]	@ 0x22
 800bee6:	6282      	str	r2, [r0, #40]	@ 0x28
 800bee8:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 800beec:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 800beee:	8601      	strh	r1, [r0, #48]	@ 0x30
 800bef0:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 800bef4:	6004      	str	r4, [r0, #0]
 800bef6:	8681      	strh	r1, [r0, #52]	@ 0x34
 800bef8:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800befa:	8702      	strh	r2, [r0, #56]	@ 0x38
 800befc:	8742      	strh	r2, [r0, #58]	@ 0x3a
 800befe:	bd10      	pop	{r4, pc}
 800bf00:	08035a88 	.word	0x08035a88

0800bf04 <_ZN8touchgfx5ImageD1Ev>:
 800bf04:	4770      	bx	lr

0800bf06 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800bf06:	b570      	push	{r4, r5, r6, lr}
 800bf08:	880b      	ldrh	r3, [r1, #0]
 800bf0a:	4604      	mov	r4, r0
 800bf0c:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800bf0e:	4608      	mov	r0, r1
 800bf10:	460d      	mov	r5, r1
 800bf12:	f004 f84f 	bl	800ffb4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bf16:	4606      	mov	r6, r0
 800bf18:	4628      	mov	r0, r5
 800bf1a:	f004 f87f 	bl	801001c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bf1e:	4605      	mov	r5, r0
 800bf20:	6823      	ldr	r3, [r4, #0]
 800bf22:	4631      	mov	r1, r6
 800bf24:	4620      	mov	r0, r4
 800bf26:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bf28:	4798      	blx	r3
 800bf2a:	6823      	ldr	r3, [r4, #0]
 800bf2c:	4629      	mov	r1, r5
 800bf2e:	4620      	mov	r0, r4
 800bf30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf34:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bf36:	4718      	bx	r3

0800bf38 <_ZN8touchgfx5ImageD0Ev>:
 800bf38:	b510      	push	{r4, lr}
 800bf3a:	4604      	mov	r4, r0
 800bf3c:	212c      	movs	r1, #44	@ 0x2c
 800bf3e:	f025 f902 	bl	8031146 <_ZdlPvj>
 800bf42:	4620      	mov	r0, r4
 800bf44:	bd10      	pop	{r4, pc}

0800bf46 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800bf46:	b510      	push	{r4, lr}
 800bf48:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800bf4c:	4604      	mov	r4, r0
 800bf4e:	2bff      	cmp	r3, #255	@ 0xff
 800bf50:	d006      	beq.n	800bf60 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800bf52:	2300      	movs	r3, #0
 800bf54:	8003      	strh	r3, [r0, #0]
 800bf56:	8043      	strh	r3, [r0, #2]
 800bf58:	8083      	strh	r3, [r0, #4]
 800bf5a:	80c3      	strh	r3, [r0, #6]
 800bf5c:	4620      	mov	r0, r4
 800bf5e:	bd10      	pop	{r4, pc}
 800bf60:	3126      	adds	r1, #38	@ 0x26
 800bf62:	f004 f88f 	bl	8010084 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800bf66:	e7f9      	b.n	800bf5c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800bf68 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800bf68:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800bf6c:	b12a      	cbz	r2, 800bf7a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800bf6e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800bf72:	b112      	cbz	r2, 800bf7a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800bf74:	6803      	ldr	r3, [r0, #0]
 800bf76:	695b      	ldr	r3, [r3, #20]
 800bf78:	4718      	bx	r3
 800bf7a:	4770      	bx	lr

0800bf7c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800bf7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf80:	4604      	mov	r4, r0
 800bf82:	2500      	movs	r5, #0
 800bf84:	f854 3b26 	ldr.w	r3, [r4], #38
 800bf88:	b088      	sub	sp, #32
 800bf8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bf8c:	460f      	mov	r7, r1
 800bf8e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800bf92:	a904      	add	r1, sp, #16
 800bf94:	4606      	mov	r6, r0
 800bf96:	4798      	blx	r3
 800bf98:	4620      	mov	r0, r4
 800bf9a:	f004 f80b 	bl	800ffb4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bf9e:	4680      	mov	r8, r0
 800bfa0:	4620      	mov	r0, r4
 800bfa2:	f004 f83b 	bl	801001c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bfa6:	9506      	str	r5, [sp, #24]
 800bfa8:	ad06      	add	r5, sp, #24
 800bfaa:	f8ad 001e 	strh.w	r0, [sp, #30]
 800bfae:	4639      	mov	r1, r7
 800bfb0:	4628      	mov	r0, r5
 800bfb2:	f8ad 801c 	strh.w	r8, [sp, #28]
 800bfb6:	f7fe fe5b 	bl	800ac70 <_ZN8touchgfx4RectaNERKS0_>
 800bfba:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800bfbe:	2b00      	cmp	r3, #0
 800bfc0:	dd19      	ble.n	800bff6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800bfc2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800bfc6:	2b00      	cmp	r3, #0
 800bfc8:	dd15      	ble.n	800bff6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800bfca:	4b0c      	ldr	r3, [pc, #48]	@ (800bffc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800bfcc:	681b      	ldr	r3, [r3, #0]
 800bfce:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800bfd2:	b10a      	cbz	r2, 800bfd8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800bfd4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800bfd6:	b900      	cbnz	r0, 800bfda <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800bfd8:	6898      	ldr	r0, [r3, #8]
 800bfda:	2701      	movs	r7, #1
 800bfdc:	6801      	ldr	r1, [r0, #0]
 800bfde:	9702      	str	r7, [sp, #8]
 800bfe0:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800bfe4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800bfe8:	e9cd 5600 	strd	r5, r6, [sp]
 800bfec:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800bff0:	688d      	ldr	r5, [r1, #8]
 800bff2:	4621      	mov	r1, r4
 800bff4:	47a8      	blx	r5
 800bff6:	b008      	add	sp, #32
 800bff8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bffc:	20082f08 	.word	0x20082f08

0800c000 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800c000:	b510      	push	{r4, lr}
 800c002:	6803      	ldr	r3, [r0, #0]
 800c004:	460c      	mov	r4, r1
 800c006:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c008:	4798      	blx	r3
 800c00a:	1b03      	subs	r3, r0, r4
 800c00c:	4258      	negs	r0, r3
 800c00e:	4158      	adcs	r0, r3
 800c010:	bd10      	pop	{r4, pc}
	...

0800c014 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800c014:	4b01      	ldr	r3, [pc, #4]	@ (800c01c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800c016:	6019      	str	r1, [r3, #0]
 800c018:	4770      	bx	lr
 800c01a:	bf00      	nop
 800c01c:	20082f10 	.word	0x20082f10

0800c020 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c024:	4696      	mov	lr, r2
 800c026:	4614      	mov	r4, r2
 800c028:	4605      	mov	r5, r0
 800c02a:	460e      	mov	r6, r1
 800c02c:	461f      	mov	r7, r3
 800c02e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c032:	b097      	sub	sp, #92	@ 0x5c
 800c034:	f10d 0c1c 	add.w	ip, sp, #28
 800c038:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c03c:	f8de 3000 	ldr.w	r3, [lr]
 800c040:	f104 0e14 	add.w	lr, r4, #20
 800c044:	f8cc 3000 	str.w	r3, [ip]
 800c048:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c04c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c050:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c054:	f8de 3000 	ldr.w	r3, [lr]
 800c058:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c05c:	f8cc 3000 	str.w	r3, [ip]
 800c060:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c064:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c068:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c06c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800c070:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800c074:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800c078:	f8de 3000 	ldr.w	r3, [lr]
 800c07c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c07e:	f8cc 3000 	str.w	r3, [ip]
 800c082:	9201      	str	r2, [sp, #4]
 800c084:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c088:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c08a:	682b      	ldr	r3, [r5, #0]
 800c08c:	9200      	str	r2, [sp, #0]
 800c08e:	f8cd 8008 	str.w	r8, [sp, #8]
 800c092:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800c096:	aa07      	add	r2, sp, #28
 800c098:	463b      	mov	r3, r7
 800c09a:	4631      	mov	r1, r6
 800c09c:	4628      	mov	r0, r5
 800c09e:	47d8      	blx	fp
 800c0a0:	46a6      	mov	lr, r4
 800c0a2:	f10d 0c1c 	add.w	ip, sp, #28
 800c0a6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c0aa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c0ae:	f8de 3000 	ldr.w	r3, [lr]
 800c0b2:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800c0b6:	f8cc 3000 	str.w	r3, [ip]
 800c0ba:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800c0be:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c0c2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c0c6:	f8de 3000 	ldr.w	r3, [lr]
 800c0ca:	343c      	adds	r4, #60	@ 0x3c
 800c0cc:	f8cc 3000 	str.w	r3, [ip]
 800c0d0:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800c0d4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c0d6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c0da:	6823      	ldr	r3, [r4, #0]
 800c0dc:	4631      	mov	r1, r6
 800c0de:	f8cc 3000 	str.w	r3, [ip]
 800c0e2:	682b      	ldr	r3, [r5, #0]
 800c0e4:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c0e8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c0ea:	f8cd 8008 	str.w	r8, [sp, #8]
 800c0ee:	9201      	str	r2, [sp, #4]
 800c0f0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800c0f2:	4628      	mov	r0, r5
 800c0f4:	9200      	str	r2, [sp, #0]
 800c0f6:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800c0f8:	aa07      	add	r2, sp, #28
 800c0fa:	463b      	mov	r3, r7
 800c0fc:	47a0      	blx	r4
 800c0fe:	b017      	add	sp, #92	@ 0x5c
 800c100:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c104 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c108:	b08d      	sub	sp, #52	@ 0x34
 800c10a:	4688      	mov	r8, r1
 800c10c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800c10e:	f8d3 c000 	ldr.w	ip, [r3]
 800c112:	680f      	ldr	r7, [r1, #0]
 800c114:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800c118:	eba7 070c 	sub.w	r7, r7, ip
 800c11c:	42bc      	cmp	r4, r7
 800c11e:	bfa8      	it	ge
 800c120:	463c      	movge	r4, r7
 800c122:	ee07 4a90 	vmov	s15, r4
 800c126:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800c12a:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c12e:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800c132:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800c136:	edd3 6a07 	vldr	s13, [r3, #28]
 800c13a:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c13e:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c142:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c146:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800c14a:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800c14e:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800c152:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c156:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800c158:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800c15c:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c160:	f9ba 1000 	ldrsh.w	r1, [sl]
 800c164:	eb09 0e0c 	add.w	lr, r9, ip
 800c168:	4571      	cmp	r1, lr
 800c16a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c16e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c172:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c176:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c17a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c17e:	f340 808c 	ble.w	800c29a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800c182:	eba1 060e 	sub.w	r6, r1, lr
 800c186:	fb96 f5f4 	sdiv	r5, r6, r4
 800c18a:	ee07 5a10 	vmov	s14, r5
 800c18e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c192:	2d00      	cmp	r5, #0
 800c194:	fb04 6615 	mls	r6, r4, r5, r6
 800c198:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c19c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c1a0:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c1a4:	dd12      	ble.n	800c1cc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800c1a6:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c1aa:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c1ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c1b2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c1b6:	bf14      	ite	ne
 800c1b8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c1bc:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c1c0:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c1c4:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c1c8:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c1cc:	fb05 f204 	mul.w	r2, r5, r4
 800c1d0:	1abf      	subs	r7, r7, r2
 800c1d2:	4494      	add	ip, r2
 800c1d4:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800c1d8:	4411      	add	r1, r2
 800c1da:	eb09 020c 	add.w	r2, r9, ip
 800c1de:	443a      	add	r2, r7
 800c1e0:	b209      	sxth	r1, r1
 800c1e2:	428a      	cmp	r2, r1
 800c1e4:	bfc4      	itt	gt
 800c1e6:	eba1 0209 	subgt.w	r2, r1, r9
 800c1ea:	eba2 070c 	subgt.w	r7, r2, ip
 800c1ee:	2f00      	cmp	r7, #0
 800c1f0:	dd50      	ble.n	800c294 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800c1f2:	fb97 f1f4 	sdiv	r1, r7, r4
 800c1f6:	fb04 7211 	mls	r2, r4, r1, r7
 800c1fa:	b90a      	cbnz	r2, 800c200 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800c1fc:	4622      	mov	r2, r4
 800c1fe:	3901      	subs	r1, #1
 800c200:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c204:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c208:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c20c:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c210:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c214:	ee17 7a90 	vmov	r7, s15
 800c218:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c21c:	eef0 6a42 	vmov.f32	s13, s4
 800c220:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c224:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c228:	ee17 ca90 	vmov	ip, s15
 800c22c:	eeb0 7a61 	vmov.f32	s14, s3
 800c230:	6840      	ldr	r0, [r0, #4]
 800c232:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800c236:	f8d0 a000 	ldr.w	sl, [r0]
 800c23a:	900b      	str	r0, [sp, #44]	@ 0x2c
 800c23c:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800c23e:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800c242:	9008      	str	r0, [sp, #32]
 800c244:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800c246:	695b      	ldr	r3, [r3, #20]
 800c248:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800c24c:	fb9c fcf4 	sdiv	ip, ip, r4
 800c250:	445b      	add	r3, fp
 800c252:	9307      	str	r3, [sp, #28]
 800c254:	ee16 3a90 	vmov	r3, s13
 800c258:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c25c:	fb0c 3306 	mla	r3, ip, r6, r3
 800c260:	fb97 f7f4 	sdiv	r7, r7, r4
 800c264:	9302      	str	r3, [sp, #8]
 800c266:	ee17 3a10 	vmov	r3, s14
 800c26a:	2900      	cmp	r1, #0
 800c26c:	bfcc      	ite	gt
 800c26e:	46a1      	movgt	r9, r4
 800c270:	4691      	movle	r9, r2
 800c272:	44b6      	add	lr, r6
 800c274:	fb04 e505 	mla	r5, r4, r5, lr
 800c278:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800c27c:	fb07 3706 	mla	r7, r7, r6, r3
 800c280:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800c284:	e9cd 4700 	strd	r4, r7, [sp]
 800c288:	eba9 0306 	sub.w	r3, r9, r6
 800c28c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800c290:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800c292:	47a0      	blx	r4
 800c294:	b00d      	add	sp, #52	@ 0x34
 800c296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c29a:	2500      	movs	r5, #0
 800c29c:	462e      	mov	r6, r5
 800c29e:	e799      	b.n	800c1d4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800c2a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c2a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2a4:	461d      	mov	r5, r3
 800c2a6:	b0db      	sub	sp, #364	@ 0x16c
 800c2a8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800c2ac:	910f      	str	r1, [sp, #60]	@ 0x3c
 800c2ae:	930a      	str	r3, [sp, #40]	@ 0x28
 800c2b0:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800c2b4:	9009      	str	r0, [sp, #36]	@ 0x24
 800c2b6:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c2b8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800c2bc:	4614      	mov	r4, r2
 800c2be:	9310      	str	r3, [sp, #64]	@ 0x40
 800c2c0:	6803      	ldr	r3, [r0, #0]
 800c2c2:	4629      	mov	r1, r5
 800c2c4:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800c2c6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800c2ca:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800c2ce:	47b8      	blx	r7
 800c2d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c2d2:	6058      	str	r0, [r3, #4]
 800c2d4:	2800      	cmp	r0, #0
 800c2d6:	f000 83a1 	beq.w	800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c2da:	ed94 7a02 	vldr	s14, [r4, #8]
 800c2de:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800c2e2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c2e6:	682b      	ldr	r3, [r5, #0]
 800c2e8:	9314      	str	r3, [sp, #80]	@ 0x50
 800c2ea:	686b      	ldr	r3, [r5, #4]
 800c2ec:	9315      	str	r3, [sp, #84]	@ 0x54
 800c2ee:	4bc1      	ldr	r3, [pc, #772]	@ (800c5f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800c2f0:	7819      	ldrb	r1, [r3, #0]
 800c2f2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800c2f6:	2900      	cmp	r1, #0
 800c2f8:	bf16      	itet	ne
 800c2fa:	4619      	movne	r1, r3
 800c2fc:	4611      	moveq	r1, r2
 800c2fe:	4613      	movne	r3, r2
 800c300:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c304:	9116      	str	r1, [sp, #88]	@ 0x58
 800c306:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800c30a:	f240 8387 	bls.w	800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c30e:	ed94 7a07 	vldr	s14, [r4, #28]
 800c312:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c316:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c31a:	f240 837f 	bls.w	800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c31e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800c322:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c326:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c32a:	f240 8377 	bls.w	800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c32e:	6822      	ldr	r2, [r4, #0]
 800c330:	4bb1      	ldr	r3, [pc, #708]	@ (800c5f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800c332:	429a      	cmp	r2, r3
 800c334:	f2c0 8372 	blt.w	800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c338:	49b0      	ldr	r1, [pc, #704]	@ (800c5fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800c33a:	6963      	ldr	r3, [r4, #20]
 800c33c:	428a      	cmp	r2, r1
 800c33e:	f300 836d 	bgt.w	800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c342:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c346:	48ae      	ldr	r0, [pc, #696]	@ (800c600 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800c348:	33ff      	adds	r3, #255	@ 0xff
 800c34a:	4283      	cmp	r3, r0
 800c34c:	f200 8366 	bhi.w	800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c350:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800c352:	4dac      	ldr	r5, [pc, #688]	@ (800c604 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800c354:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800c358:	33ff      	adds	r3, #255	@ 0xff
 800c35a:	42ab      	cmp	r3, r5
 800c35c:	f200 835e 	bhi.w	800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c360:	6862      	ldr	r2, [r4, #4]
 800c362:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800c366:	33ff      	adds	r3, #255	@ 0xff
 800c368:	4283      	cmp	r3, r0
 800c36a:	f200 8357 	bhi.w	800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c36e:	69a1      	ldr	r1, [r4, #24]
 800c370:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800c374:	33ff      	adds	r3, #255	@ 0xff
 800c376:	4283      	cmp	r3, r0
 800c378:	f200 8350 	bhi.w	800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c37c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800c37e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800c382:	30ff      	adds	r0, #255	@ 0xff
 800c384:	42a8      	cmp	r0, r5
 800c386:	f200 8349 	bhi.w	800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c38a:	428a      	cmp	r2, r1
 800c38c:	f280 8110 	bge.w	800c5b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800c390:	429a      	cmp	r2, r3
 800c392:	f300 8119 	bgt.w	800c5c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800c396:	4299      	cmp	r1, r3
 800c398:	f280 811d 	bge.w	800c5d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800c39c:	2502      	movs	r5, #2
 800c39e:	2701      	movs	r7, #1
 800c3a0:	46a9      	mov	r9, r5
 800c3a2:	46b8      	mov	r8, r7
 800c3a4:	f04f 0a00 	mov.w	sl, #0
 800c3a8:	4621      	mov	r1, r4
 800c3aa:	a849      	add	r0, sp, #292	@ 0x124
 800c3ac:	f003 fb38 	bl	800fa20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800c3b0:	4622      	mov	r2, r4
 800c3b2:	4653      	mov	r3, sl
 800c3b4:	a949      	add	r1, sp, #292	@ 0x124
 800c3b6:	f8cd 9000 	str.w	r9, [sp]
 800c3ba:	a819      	add	r0, sp, #100	@ 0x64
 800c3bc:	f003 fc62 	bl	800fc84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c3c0:	4622      	mov	r2, r4
 800c3c2:	4653      	mov	r3, sl
 800c3c4:	a949      	add	r1, sp, #292	@ 0x124
 800c3c6:	f8cd 8000 	str.w	r8, [sp]
 800c3ca:	a829      	add	r0, sp, #164	@ 0xa4
 800c3cc:	f003 fc5a 	bl	800fc84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c3d0:	4643      	mov	r3, r8
 800c3d2:	4622      	mov	r2, r4
 800c3d4:	a949      	add	r1, sp, #292	@ 0x124
 800c3d6:	f8cd 9000 	str.w	r9, [sp]
 800c3da:	a839      	add	r0, sp, #228	@ 0xe4
 800c3dc:	f003 fc52 	bl	800fc84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c3e0:	42af      	cmp	r7, r5
 800c3e2:	bfb5      	itete	lt
 800c3e4:	2300      	movlt	r3, #0
 800c3e6:	2301      	movge	r3, #1
 800c3e8:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800c3ea:	930e      	strge	r3, [sp, #56]	@ 0x38
 800c3ec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c3ee:	af12      	add	r7, sp, #72	@ 0x48
 800c3f0:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c3f4:	bfb9      	ittee	lt
 800c3f6:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800c3f8:	ac19      	addlt	r4, sp, #100	@ 0x64
 800c3fa:	ad19      	addge	r5, sp, #100	@ 0x64
 800c3fc:	ac29      	addge	r4, sp, #164	@ 0xa4
 800c3fe:	e887 0003 	stmia.w	r7, {r0, r1}
 800c402:	b928      	cbnz	r0, 800c410 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800c404:	4b80      	ldr	r3, [pc, #512]	@ (800c608 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800c406:	6818      	ldr	r0, [r3, #0]
 800c408:	6803      	ldr	r3, [r0, #0]
 800c40a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c40c:	4798      	blx	r3
 800c40e:	6038      	str	r0, [r7, #0]
 800c410:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c412:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800c416:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c41a:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800c41c:	930c      	str	r3, [sp, #48]	@ 0x30
 800c41e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c420:	6963      	ldr	r3, [r4, #20]
 800c422:	440b      	add	r3, r1
 800c424:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c428:	4408      	add	r0, r1
 800c42a:	b200      	sxth	r0, r0
 800c42c:	4283      	cmp	r3, r0
 800c42e:	900d      	str	r0, [sp, #52]	@ 0x34
 800c430:	f280 80dd 	bge.w	800c5ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800c434:	428b      	cmp	r3, r1
 800c436:	da08      	bge.n	800c44a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c438:	2a00      	cmp	r2, #0
 800c43a:	dd06      	ble.n	800c44a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c43c:	1acb      	subs	r3, r1, r3
 800c43e:	429a      	cmp	r2, r3
 800c440:	f2c0 80e4 	blt.w	800c60c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800c444:	2b00      	cmp	r3, #0
 800c446:	f300 80e2 	bgt.w	800c60e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800c44a:	6967      	ldr	r7, [r4, #20]
 800c44c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c44e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800c452:	443b      	add	r3, r7
 800c454:	461f      	mov	r7, r3
 800c456:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c458:	1bdf      	subs	r7, r3, r7
 800c45a:	4297      	cmp	r7, r2
 800c45c:	bfa8      	it	ge
 800c45e:	4617      	movge	r7, r2
 800c460:	2f00      	cmp	r7, #0
 800c462:	f340 8166 	ble.w	800c732 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800c466:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c468:	6829      	ldr	r1, [r5, #0]
 800c46a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c46e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800c472:	4411      	add	r1, r2
 800c474:	4299      	cmp	r1, r3
 800c476:	6820      	ldr	r0, [r4, #0]
 800c478:	dd1a      	ble.n	800c4b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c47a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800c47e:	4402      	add	r2, r0
 800c480:	440b      	add	r3, r1
 800c482:	b21b      	sxth	r3, r3
 800c484:	429a      	cmp	r2, r3
 800c486:	dc13      	bgt.n	800c4b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c488:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800c48a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c48c:	a912      	add	r1, sp, #72	@ 0x48
 800c48e:	681b      	ldr	r3, [r3, #0]
 800c490:	9206      	str	r2, [sp, #24]
 800c492:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c494:	9500      	str	r5, [sp, #0]
 800c496:	9205      	str	r2, [sp, #20]
 800c498:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c49a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c49c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800c4a0:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800c4a2:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800c4a6:	aa49      	add	r2, sp, #292	@ 0x124
 800c4a8:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800c4ac:	4623      	mov	r3, r4
 800c4ae:	47c8      	blx	r9
 800c4b0:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c4b4:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800c4b8:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800c4bc:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800c4c0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c4c4:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800c4c8:	ed94 6a08 	vldr	s12, [r4, #32]
 800c4cc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c4d0:	edd4 6a07 	vldr	s13, [r4, #28]
 800c4d4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c4d8:	441a      	add	r2, r3
 800c4da:	6963      	ldr	r3, [r4, #20]
 800c4dc:	68a1      	ldr	r1, [r4, #8]
 800c4de:	3301      	adds	r3, #1
 800c4e0:	6163      	str	r3, [r4, #20]
 800c4e2:	69a3      	ldr	r3, [r4, #24]
 800c4e4:	6022      	str	r2, [r4, #0]
 800c4e6:	3b01      	subs	r3, #1
 800c4e8:	61a3      	str	r3, [r4, #24]
 800c4ea:	6923      	ldr	r3, [r4, #16]
 800c4ec:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c4f0:	440b      	add	r3, r1
 800c4f2:	68e1      	ldr	r1, [r4, #12]
 800c4f4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c4f8:	428b      	cmp	r3, r1
 800c4fa:	edc4 6a07 	vstr	s13, [r4, #28]
 800c4fe:	6123      	str	r3, [r4, #16]
 800c500:	db15      	blt.n	800c52e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800c502:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800c506:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c50a:	edc4 6a07 	vstr	s13, [r4, #28]
 800c50e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800c512:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c516:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c51a:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800c51e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c522:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c526:	3201      	adds	r2, #1
 800c528:	1a5b      	subs	r3, r3, r1
 800c52a:	6022      	str	r2, [r4, #0]
 800c52c:	6123      	str	r3, [r4, #16]
 800c52e:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800c532:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c536:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800c53a:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800c53e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c542:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800c546:	ed95 6a08 	vldr	s12, [r5, #32]
 800c54a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c54e:	edd5 6a07 	vldr	s13, [r5, #28]
 800c552:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c556:	441a      	add	r2, r3
 800c558:	696b      	ldr	r3, [r5, #20]
 800c55a:	68a9      	ldr	r1, [r5, #8]
 800c55c:	3301      	adds	r3, #1
 800c55e:	616b      	str	r3, [r5, #20]
 800c560:	69ab      	ldr	r3, [r5, #24]
 800c562:	602a      	str	r2, [r5, #0]
 800c564:	3b01      	subs	r3, #1
 800c566:	61ab      	str	r3, [r5, #24]
 800c568:	692b      	ldr	r3, [r5, #16]
 800c56a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c56e:	440b      	add	r3, r1
 800c570:	68e9      	ldr	r1, [r5, #12]
 800c572:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c576:	428b      	cmp	r3, r1
 800c578:	edc5 6a07 	vstr	s13, [r5, #28]
 800c57c:	612b      	str	r3, [r5, #16]
 800c57e:	db15      	blt.n	800c5ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800c580:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800c584:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c588:	edc5 6a07 	vstr	s13, [r5, #28]
 800c58c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800c590:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c594:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c598:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800c59c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c5a0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c5a4:	3201      	adds	r2, #1
 800c5a6:	1a5b      	subs	r3, r3, r1
 800c5a8:	602a      	str	r2, [r5, #0]
 800c5aa:	612b      	str	r3, [r5, #16]
 800c5ac:	3f01      	subs	r7, #1
 800c5ae:	e757      	b.n	800c460 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800c5b0:	4299      	cmp	r1, r3
 800c5b2:	dc13      	bgt.n	800c5dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800c5b4:	429a      	cmp	r2, r3
 800c5b6:	da14      	bge.n	800c5e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800c5b8:	2502      	movs	r5, #2
 800c5ba:	2703      	movs	r7, #3
 800c5bc:	46a9      	mov	r9, r5
 800c5be:	f04f 0800 	mov.w	r8, #0
 800c5c2:	f04f 0a01 	mov.w	sl, #1
 800c5c6:	e6ef      	b.n	800c3a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800c5c8:	2501      	movs	r5, #1
 800c5ca:	2700      	movs	r7, #0
 800c5cc:	46a9      	mov	r9, r5
 800c5ce:	46b8      	mov	r8, r7
 800c5d0:	f04f 0a02 	mov.w	sl, #2
 800c5d4:	e6e8      	b.n	800c3a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800c5d6:	2501      	movs	r5, #1
 800c5d8:	2702      	movs	r7, #2
 800c5da:	e6e1      	b.n	800c3a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800c5dc:	2500      	movs	r5, #0
 800c5de:	2701      	movs	r7, #1
 800c5e0:	e7f4      	b.n	800c5cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800c5e2:	2702      	movs	r7, #2
 800c5e4:	2503      	movs	r5, #3
 800c5e6:	f04f 0900 	mov.w	r9, #0
 800c5ea:	46b8      	mov	r8, r7
 800c5ec:	e7e9      	b.n	800c5c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800c5ee:	4613      	mov	r3, r2
 800c5f0:	e728      	b.n	800c444 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800c5f2:	bf00      	nop
 800c5f4:	20082f00 	.word	0x20082f00
 800c5f8:	fffd8f01 	.word	0xfffd8f01
 800c5fc:	00027100 	.word	0x00027100
 800c600:	0004e1ff 	.word	0x0004e1ff
 800c604:	0004e1fe 	.word	0x0004e1fe
 800c608:	20082f08 	.word	0x20082f08
 800c60c:	4613      	mov	r3, r2
 800c60e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800c612:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800c616:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800c61a:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800c61e:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800c622:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800c626:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800c62a:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800c62e:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800c632:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800c636:	469e      	mov	lr, r3
 800c638:	469c      	mov	ip, r3
 800c63a:	f04f 0900 	mov.w	r9, #0
 800c63e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800c640:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800c642:	9111      	str	r1, [sp, #68]	@ 0x44
 800c644:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800c648:	f1bc 0f00 	cmp.w	ip, #0
 800c64c:	d147      	bne.n	800c6de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800c64e:	eb03 0c07 	add.w	ip, r3, r7
 800c652:	1ad7      	subs	r7, r2, r3
 800c654:	f1b9 0f00 	cmp.w	r9, #0
 800c658:	d009      	beq.n	800c66e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800c65a:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800c65e:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800c662:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800c666:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800c66a:	9029      	str	r0, [sp, #164]	@ 0xa4
 800c66c:	912d      	str	r1, [sp, #180]	@ 0xb4
 800c66e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800c672:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800c676:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800c67a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800c67e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800c682:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800c686:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800c68a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800c68e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800c692:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800c696:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800c69a:	f04f 0800 	mov.w	r8, #0
 800c69e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800c6a0:	9111      	str	r1, [sp, #68]	@ 0x44
 800c6a2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800c6a6:	f1be 0f00 	cmp.w	lr, #0
 800c6aa:	d031      	beq.n	800c710 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800c6ac:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800c6ae:	4450      	add	r0, sl
 800c6b0:	4431      	add	r1, r6
 800c6b2:	4549      	cmp	r1, r9
 800c6b4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800c6b8:	ee37 7a04 	vadd.f32	s14, s14, s8
 800c6bc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800c6c0:	db08      	blt.n	800c6d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800c6c2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800c6c6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800c6ca:	ee37 7a06 	vadd.f32	s14, s14, s12
 800c6ce:	3001      	adds	r0, #1
 800c6d0:	eba1 0109 	sub.w	r1, r1, r9
 800c6d4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c6d8:	f04f 0801 	mov.w	r8, #1
 800c6dc:	e7e3      	b.n	800c6a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800c6de:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800c6e0:	4450      	add	r0, sl
 800c6e2:	4431      	add	r1, r6
 800c6e4:	4541      	cmp	r1, r8
 800c6e6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800c6ea:	ee77 7a84 	vadd.f32	s15, s15, s8
 800c6ee:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800c6f2:	db08      	blt.n	800c706 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800c6f4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800c6f8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800c6fc:	ee77 7a86 	vadd.f32	s15, s15, s12
 800c700:	3001      	adds	r0, #1
 800c702:	eba1 0108 	sub.w	r1, r1, r8
 800c706:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c70a:	f04f 0901 	mov.w	r9, #1
 800c70e:	e79b      	b.n	800c648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800c710:	449c      	add	ip, r3
 800c712:	1aff      	subs	r7, r7, r3
 800c714:	f1b8 0f00 	cmp.w	r8, #0
 800c718:	d009      	beq.n	800c72e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800c71a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800c71e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800c722:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800c726:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800c72a:	9019      	str	r0, [sp, #100]	@ 0x64
 800c72c:	911d      	str	r1, [sp, #116]	@ 0x74
 800c72e:	1ad2      	subs	r2, r2, r3
 800c730:	e68b      	b.n	800c44a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c732:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c734:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800c736:	2b00      	cmp	r3, #0
 800c738:	f000 80d1 	beq.w	800c8de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800c73c:	ad19      	add	r5, sp, #100	@ 0x64
 800c73e:	ac39      	add	r4, sp, #228	@ 0xe4
 800c740:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c742:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800c746:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c74a:	930c      	str	r3, [sp, #48]	@ 0x30
 800c74c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c74e:	6963      	ldr	r3, [r4, #20]
 800c750:	440b      	add	r3, r1
 800c752:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c756:	4408      	add	r0, r1
 800c758:	b200      	sxth	r0, r0
 800c75a:	4283      	cmp	r3, r0
 800c75c:	900d      	str	r0, [sp, #52]	@ 0x34
 800c75e:	f280 80c1 	bge.w	800c8e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800c762:	428b      	cmp	r3, r1
 800c764:	da08      	bge.n	800c778 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c766:	2a00      	cmp	r2, #0
 800c768:	dd06      	ble.n	800c778 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c76a:	1acb      	subs	r3, r1, r3
 800c76c:	429a      	cmp	r2, r3
 800c76e:	f2c0 80bb 	blt.w	800c8e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800c772:	2b00      	cmp	r3, #0
 800c774:	f300 80b9 	bgt.w	800c8ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800c778:	6967      	ldr	r7, [r4, #20]
 800c77a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c77c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800c780:	443b      	add	r3, r7
 800c782:	461f      	mov	r7, r3
 800c784:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c786:	1bdf      	subs	r7, r3, r7
 800c788:	4297      	cmp	r7, r2
 800c78a:	bfa8      	it	ge
 800c78c:	4617      	movge	r7, r2
 800c78e:	2f00      	cmp	r7, #0
 800c790:	f340 813c 	ble.w	800ca0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800c794:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800c796:	6829      	ldr	r1, [r5, #0]
 800c798:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c79c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800c7a0:	4411      	add	r1, r2
 800c7a2:	4299      	cmp	r1, r3
 800c7a4:	6820      	ldr	r0, [r4, #0]
 800c7a6:	dd1a      	ble.n	800c7de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800c7a8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800c7ac:	4402      	add	r2, r0
 800c7ae:	440b      	add	r3, r1
 800c7b0:	b21b      	sxth	r3, r3
 800c7b2:	429a      	cmp	r2, r3
 800c7b4:	dc13      	bgt.n	800c7de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800c7b6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800c7b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c7ba:	a912      	add	r1, sp, #72	@ 0x48
 800c7bc:	681b      	ldr	r3, [r3, #0]
 800c7be:	9206      	str	r2, [sp, #24]
 800c7c0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c7c2:	9500      	str	r5, [sp, #0]
 800c7c4:	9205      	str	r2, [sp, #20]
 800c7c6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c7c8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c7ca:	e9cd b203 	strd	fp, r2, [sp, #12]
 800c7ce:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800c7d0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800c7d4:	aa49      	add	r2, sp, #292	@ 0x124
 800c7d6:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800c7da:	4623      	mov	r3, r4
 800c7dc:	47c8      	blx	r9
 800c7de:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c7e2:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800c7e6:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800c7ea:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800c7ee:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c7f2:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800c7f6:	ed94 6a08 	vldr	s12, [r4, #32]
 800c7fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c7fe:	edd4 6a07 	vldr	s13, [r4, #28]
 800c802:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c806:	441a      	add	r2, r3
 800c808:	6963      	ldr	r3, [r4, #20]
 800c80a:	68a1      	ldr	r1, [r4, #8]
 800c80c:	3301      	adds	r3, #1
 800c80e:	6163      	str	r3, [r4, #20]
 800c810:	69a3      	ldr	r3, [r4, #24]
 800c812:	6022      	str	r2, [r4, #0]
 800c814:	3b01      	subs	r3, #1
 800c816:	61a3      	str	r3, [r4, #24]
 800c818:	6923      	ldr	r3, [r4, #16]
 800c81a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c81e:	440b      	add	r3, r1
 800c820:	68e1      	ldr	r1, [r4, #12]
 800c822:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c826:	428b      	cmp	r3, r1
 800c828:	edc4 6a07 	vstr	s13, [r4, #28]
 800c82c:	6123      	str	r3, [r4, #16]
 800c82e:	db15      	blt.n	800c85c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800c830:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800c834:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c838:	edc4 6a07 	vstr	s13, [r4, #28]
 800c83c:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800c840:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c844:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800c848:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800c84c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c850:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800c854:	3201      	adds	r2, #1
 800c856:	1a5b      	subs	r3, r3, r1
 800c858:	6022      	str	r2, [r4, #0]
 800c85a:	6123      	str	r3, [r4, #16]
 800c85c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800c860:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c864:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800c868:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800c86c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c870:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800c874:	ed95 6a08 	vldr	s12, [r5, #32]
 800c878:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c87c:	edd5 6a07 	vldr	s13, [r5, #28]
 800c880:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c884:	441a      	add	r2, r3
 800c886:	696b      	ldr	r3, [r5, #20]
 800c888:	68a9      	ldr	r1, [r5, #8]
 800c88a:	3301      	adds	r3, #1
 800c88c:	616b      	str	r3, [r5, #20]
 800c88e:	69ab      	ldr	r3, [r5, #24]
 800c890:	602a      	str	r2, [r5, #0]
 800c892:	3b01      	subs	r3, #1
 800c894:	61ab      	str	r3, [r5, #24]
 800c896:	692b      	ldr	r3, [r5, #16]
 800c898:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c89c:	440b      	add	r3, r1
 800c89e:	68e9      	ldr	r1, [r5, #12]
 800c8a0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c8a4:	428b      	cmp	r3, r1
 800c8a6:	edc5 6a07 	vstr	s13, [r5, #28]
 800c8aa:	612b      	str	r3, [r5, #16]
 800c8ac:	db15      	blt.n	800c8da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800c8ae:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800c8b2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c8b6:	edc5 6a07 	vstr	s13, [r5, #28]
 800c8ba:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800c8be:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c8c2:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800c8c6:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800c8ca:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c8ce:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800c8d2:	3201      	adds	r2, #1
 800c8d4:	1a5b      	subs	r3, r3, r1
 800c8d6:	602a      	str	r2, [r5, #0]
 800c8d8:	612b      	str	r3, [r5, #16]
 800c8da:	3f01      	subs	r7, #1
 800c8dc:	e757      	b.n	800c78e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800c8de:	ad39      	add	r5, sp, #228	@ 0xe4
 800c8e0:	ac19      	add	r4, sp, #100	@ 0x64
 800c8e2:	e72d      	b.n	800c740 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800c8e4:	4613      	mov	r3, r2
 800c8e6:	e744      	b.n	800c772 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800c8e8:	4613      	mov	r3, r2
 800c8ea:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800c8ee:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800c8f2:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800c8f6:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800c8fa:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800c8fe:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800c902:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800c906:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800c90a:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800c90e:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800c912:	469e      	mov	lr, r3
 800c914:	461f      	mov	r7, r3
 800c916:	f04f 0900 	mov.w	r9, #0
 800c91a:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800c91c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800c920:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800c922:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800c926:	960e      	str	r6, [sp, #56]	@ 0x38
 800c928:	2f00      	cmp	r7, #0
 800c92a:	d146      	bne.n	800c9ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800c92c:	449c      	add	ip, r3
 800c92e:	1ad7      	subs	r7, r2, r3
 800c930:	f1b9 0f00 	cmp.w	r9, #0
 800c934:	d009      	beq.n	800c94a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800c936:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800c93a:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800c93e:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800c942:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800c946:	9039      	str	r0, [sp, #228]	@ 0xe4
 800c948:	913d      	str	r1, [sp, #244]	@ 0xf4
 800c94a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800c94e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800c952:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800c956:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800c95a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800c95e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800c962:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800c966:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800c96a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800c96e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800c972:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800c976:	f04f 0800 	mov.w	r8, #0
 800c97a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800c97c:	910e      	str	r1, [sp, #56]	@ 0x38
 800c97e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800c982:	f1be 0f00 	cmp.w	lr, #0
 800c986:	d030      	beq.n	800c9ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800c988:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800c98a:	4450      	add	r0, sl
 800c98c:	4431      	add	r1, r6
 800c98e:	4549      	cmp	r1, r9
 800c990:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800c994:	ee37 7a04 	vadd.f32	s14, s14, s8
 800c998:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800c99c:	db08      	blt.n	800c9b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800c99e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800c9a2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800c9a6:	ee37 7a06 	vadd.f32	s14, s14, s12
 800c9aa:	3001      	adds	r0, #1
 800c9ac:	eba1 0109 	sub.w	r1, r1, r9
 800c9b0:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c9b4:	f04f 0801 	mov.w	r8, #1
 800c9b8:	e7e3      	b.n	800c982 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800c9ba:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800c9bc:	4450      	add	r0, sl
 800c9be:	4431      	add	r1, r6
 800c9c0:	4541      	cmp	r1, r8
 800c9c2:	ee37 7a24 	vadd.f32	s14, s14, s9
 800c9c6:	ee77 7a84 	vadd.f32	s15, s15, s8
 800c9ca:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800c9ce:	db08      	blt.n	800c9e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800c9d0:	ee76 6a85 	vadd.f32	s13, s13, s10
 800c9d4:	ee37 7a25 	vadd.f32	s14, s14, s11
 800c9d8:	ee77 7a86 	vadd.f32	s15, s15, s12
 800c9dc:	3001      	adds	r0, #1
 800c9de:	eba1 0108 	sub.w	r1, r1, r8
 800c9e2:	3f01      	subs	r7, #1
 800c9e4:	f04f 0901 	mov.w	r9, #1
 800c9e8:	e79e      	b.n	800c928 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800c9ea:	449c      	add	ip, r3
 800c9ec:	1aff      	subs	r7, r7, r3
 800c9ee:	f1b8 0f00 	cmp.w	r8, #0
 800c9f2:	d009      	beq.n	800ca08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800c9f4:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800c9f8:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800c9fc:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800ca00:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800ca04:	9019      	str	r0, [sp, #100]	@ 0x64
 800ca06:	911d      	str	r1, [sp, #116]	@ 0x74
 800ca08:	1ad2      	subs	r2, r2, r3
 800ca0a:	e6b5      	b.n	800c778 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ca0c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ca0e:	681b      	ldr	r3, [r3, #0]
 800ca10:	b923      	cbnz	r3, 800ca1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ca12:	4b04      	ldr	r3, [pc, #16]	@ (800ca24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800ca14:	6818      	ldr	r0, [r3, #0]
 800ca16:	6803      	ldr	r3, [r0, #0]
 800ca18:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ca1a:	4798      	blx	r3
 800ca1c:	b05b      	add	sp, #364	@ 0x16c
 800ca1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ca22:	bf00      	nop
 800ca24:	20082f08 	.word	0x20082f08

0800ca28 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800ca28:	2b03      	cmp	r3, #3
 800ca2a:	d818      	bhi.n	800ca5e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800ca2c:	e8df f003 	tbb	[pc, r3]
 800ca30:	130d0602 	.word	0x130d0602
 800ca34:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ca38:	1850      	adds	r0, r2, r1
 800ca3a:	4770      	bx	lr
 800ca3c:	8803      	ldrh	r3, [r0, #0]
 800ca3e:	8880      	ldrh	r0, [r0, #4]
 800ca40:	4418      	add	r0, r3
 800ca42:	b200      	sxth	r0, r0
 800ca44:	1a80      	subs	r0, r0, r2
 800ca46:	3801      	subs	r0, #1
 800ca48:	4770      	bx	lr
 800ca4a:	8803      	ldrh	r3, [r0, #0]
 800ca4c:	8880      	ldrh	r0, [r0, #4]
 800ca4e:	4418      	add	r0, r3
 800ca50:	b200      	sxth	r0, r0
 800ca52:	1a40      	subs	r0, r0, r1
 800ca54:	e7f7      	b.n	800ca46 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800ca56:	f9b0 0000 	ldrsh.w	r0, [r0]
 800ca5a:	4410      	add	r0, r2
 800ca5c:	4770      	bx	lr
 800ca5e:	2000      	movs	r0, #0
 800ca60:	4770      	bx	lr

0800ca62 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800ca62:	2b03      	cmp	r3, #3
 800ca64:	d817      	bhi.n	800ca96 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800ca66:	e8df f003 	tbb	[pc, r3]
 800ca6a:	0602      	.short	0x0602
 800ca6c:	1009      	.short	0x1009
 800ca6e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800ca72:	1850      	adds	r0, r2, r1
 800ca74:	4770      	bx	lr
 800ca76:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ca7a:	e7fa      	b.n	800ca72 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800ca7c:	8843      	ldrh	r3, [r0, #2]
 800ca7e:	88c0      	ldrh	r0, [r0, #6]
 800ca80:	4418      	add	r0, r3
 800ca82:	b200      	sxth	r0, r0
 800ca84:	1a80      	subs	r0, r0, r2
 800ca86:	3801      	subs	r0, #1
 800ca88:	4770      	bx	lr
 800ca8a:	8843      	ldrh	r3, [r0, #2]
 800ca8c:	88c0      	ldrh	r0, [r0, #6]
 800ca8e:	4418      	add	r0, r3
 800ca90:	b200      	sxth	r0, r0
 800ca92:	1a40      	subs	r0, r0, r1
 800ca94:	e7f7      	b.n	800ca86 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800ca96:	2000      	movs	r0, #0
 800ca98:	4770      	bx	lr
	...

0800ca9c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800ca9c:	2200      	movs	r2, #0
 800ca9e:	4b01      	ldr	r3, [pc, #4]	@ (800caa4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800caa0:	601a      	str	r2, [r3, #0]
 800caa2:	4770      	bx	lr
 800caa4:	20082f10 	.word	0x20082f10

0800caa8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800caa8:	4603      	mov	r3, r0
 800caaa:	b1c8      	cbz	r0, 800cae0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800caac:	0c02      	lsrs	r2, r0, #16
 800caae:	0412      	lsls	r2, r2, #16
 800cab0:	b9a2      	cbnz	r2, 800cadc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800cab2:	0403      	lsls	r3, r0, #16
 800cab4:	2010      	movs	r0, #16
 800cab6:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800caba:	bf04      	itt	eq
 800cabc:	021b      	lsleq	r3, r3, #8
 800cabe:	3008      	addeq	r0, #8
 800cac0:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800cac4:	bf04      	itt	eq
 800cac6:	011b      	lsleq	r3, r3, #4
 800cac8:	3004      	addeq	r0, #4
 800caca:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800cace:	bf04      	itt	eq
 800cad0:	009b      	lsleq	r3, r3, #2
 800cad2:	3002      	addeq	r0, #2
 800cad4:	2b00      	cmp	r3, #0
 800cad6:	db04      	blt.n	800cae2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800cad8:	3001      	adds	r0, #1
 800cada:	4770      	bx	lr
 800cadc:	2000      	movs	r0, #0
 800cade:	e7ea      	b.n	800cab6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800cae0:	2020      	movs	r0, #32
 800cae2:	4770      	bx	lr

0800cae4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800cae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cae8:	b087      	sub	sp, #28
 800caea:	460d      	mov	r5, r1
 800caec:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800caf0:	4616      	mov	r6, r2
 800caf2:	4698      	mov	r8, r3
 800caf4:	4601      	mov	r1, r0
 800caf6:	b120      	cbz	r0, 800cb02 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800caf8:	b11a      	cbz	r2, 800cb02 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800cafa:	2d1f      	cmp	r5, #31
 800cafc:	d801      	bhi.n	800cb02 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800cafe:	2b1f      	cmp	r3, #31
 800cb00:	d904      	bls.n	800cb0c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800cb02:	2000      	movs	r0, #0
 800cb04:	6038      	str	r0, [r7, #0]
 800cb06:	b007      	add	sp, #28
 800cb08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb0c:	b97d      	cbnz	r5, 800cb2e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800cb0e:	b143      	cbz	r3, 800cb22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800cb10:	4602      	mov	r2, r0
 800cb12:	e9cd 4700 	strd	r4, r7, [sp]
 800cb16:	462b      	mov	r3, r5
 800cb18:	4641      	mov	r1, r8
 800cb1a:	4630      	mov	r0, r6
 800cb1c:	f7ff ffe2 	bl	800cae4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb20:	e7f1      	b.n	800cb06 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cb22:	f04f 33ff 	mov.w	r3, #4294967295
 800cb26:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800cb2a:	603b      	str	r3, [r7, #0]
 800cb2c:	e7eb      	b.n	800cb06 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cb2e:	fa32 fa05 	lsrs.w	sl, r2, r5
 800cb32:	d106      	bne.n	800cb42 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800cb34:	4346      	muls	r6, r0
 800cb36:	fbb6 f0f4 	udiv	r0, r6, r4
 800cb3a:	fb04 6610 	mls	r6, r4, r0, r6
 800cb3e:	603e      	str	r6, [r7, #0]
 800cb40:	e7e1      	b.n	800cb06 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800cb42:	fa00 fb05 	lsl.w	fp, r0, r5
 800cb46:	fbbb f9f4 	udiv	r9, fp, r4
 800cb4a:	2201      	movs	r2, #1
 800cb4c:	fb0a f309 	mul.w	r3, sl, r9
 800cb50:	40aa      	lsls	r2, r5
 800cb52:	3a01      	subs	r2, #1
 800cb54:	4016      	ands	r6, r2
 800cb56:	4630      	mov	r0, r6
 800cb58:	9303      	str	r3, [sp, #12]
 800cb5a:	f7ff ffa5 	bl	800caa8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cb5e:	462b      	mov	r3, r5
 800cb60:	460a      	mov	r2, r1
 800cb62:	e9cd 4700 	strd	r4, r7, [sp]
 800cb66:	4601      	mov	r1, r0
 800cb68:	4630      	mov	r0, r6
 800cb6a:	f7ff ffbb 	bl	800cae4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb6e:	fb04 b919 	mls	r9, r4, r9, fp
 800cb72:	4606      	mov	r6, r0
 800cb74:	4648      	mov	r0, r9
 800cb76:	eb05 0108 	add.w	r1, r5, r8
 800cb7a:	f7ff ff95 	bl	800caa8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cb7e:	ab05      	add	r3, sp, #20
 800cb80:	e9cd 4300 	strd	r4, r3, [sp]
 800cb84:	464a      	mov	r2, r9
 800cb86:	4603      	mov	r3, r0
 800cb88:	4650      	mov	r0, sl
 800cb8a:	f7ff ffab 	bl	800cae4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb8e:	6839      	ldr	r1, [r7, #0]
 800cb90:	9a05      	ldr	r2, [sp, #20]
 800cb92:	9b03      	ldr	r3, [sp, #12]
 800cb94:	4411      	add	r1, r2
 800cb96:	fbb1 f2f4 	udiv	r2, r1, r4
 800cb9a:	fb04 1412 	mls	r4, r4, r2, r1
 800cb9e:	18d3      	adds	r3, r2, r3
 800cba0:	441e      	add	r6, r3
 800cba2:	4430      	add	r0, r6
 800cba4:	603c      	str	r4, [r7, #0]
 800cba6:	e7ae      	b.n	800cb06 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800cba8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800cba8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cbac:	b085      	sub	sp, #20
 800cbae:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800cbb0:	f1b0 0900 	subs.w	r9, r0, #0
 800cbb4:	461d      	mov	r5, r3
 800cbb6:	bfbf      	itttt	lt
 800cbb8:	6823      	ldrlt	r3, [r4, #0]
 800cbba:	f1c9 0900 	rsblt	r9, r9, #0
 800cbbe:	425b      	neglt	r3, r3
 800cbc0:	6023      	strlt	r3, [r4, #0]
 800cbc2:	bfb4      	ite	lt
 800cbc4:	f04f 36ff 	movlt.w	r6, #4294967295
 800cbc8:	2601      	movge	r6, #1
 800cbca:	2a00      	cmp	r2, #0
 800cbcc:	4617      	mov	r7, r2
 800cbce:	da04      	bge.n	800cbda <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800cbd0:	6823      	ldr	r3, [r4, #0]
 800cbd2:	4257      	negs	r7, r2
 800cbd4:	425b      	negs	r3, r3
 800cbd6:	4276      	negs	r6, r6
 800cbd8:	6023      	str	r3, [r4, #0]
 800cbda:	2d00      	cmp	r5, #0
 800cbdc:	4638      	mov	r0, r7
 800cbde:	bfba      	itte	lt
 800cbe0:	426d      	neglt	r5, r5
 800cbe2:	f04f 38ff 	movlt.w	r8, #4294967295
 800cbe6:	f04f 0801 	movge.w	r8, #1
 800cbea:	f7ff ff5d 	bl	800caa8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cbee:	ab03      	add	r3, sp, #12
 800cbf0:	e9cd 5300 	strd	r5, r3, [sp]
 800cbf4:	463a      	mov	r2, r7
 800cbf6:	4603      	mov	r3, r0
 800cbf8:	4648      	mov	r0, r9
 800cbfa:	f7ff ff73 	bl	800cae4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cbfe:	6823      	ldr	r3, [r4, #0]
 800cc00:	9a03      	ldr	r2, [sp, #12]
 800cc02:	4546      	cmp	r6, r8
 800cc04:	441a      	add	r2, r3
 800cc06:	fb92 f3f5 	sdiv	r3, r2, r5
 800cc0a:	4418      	add	r0, r3
 800cc0c:	fb05 2313 	mls	r3, r5, r3, r2
 800cc10:	bf18      	it	ne
 800cc12:	4240      	negne	r0, r0
 800cc14:	1c72      	adds	r2, r6, #1
 800cc16:	6023      	str	r3, [r4, #0]
 800cc18:	d105      	bne.n	800cc26 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800cc1a:	2b00      	cmp	r3, #0
 800cc1c:	f1c3 0200 	rsb	r2, r3, #0
 800cc20:	db0b      	blt.n	800cc3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800cc22:	6022      	str	r2, [r4, #0]
 800cc24:	e006      	b.n	800cc34 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cc26:	2e01      	cmp	r6, #1
 800cc28:	d104      	bne.n	800cc34 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cc2a:	2b00      	cmp	r3, #0
 800cc2c:	da02      	bge.n	800cc34 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cc2e:	442b      	add	r3, r5
 800cc30:	3801      	subs	r0, #1
 800cc32:	6023      	str	r3, [r4, #0]
 800cc34:	b005      	add	sp, #20
 800cc36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cc3a:	3801      	subs	r0, #1
 800cc3c:	1b52      	subs	r2, r2, r5
 800cc3e:	e7f0      	b.n	800cc22 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800cc40 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800cc40:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800cc44:	4c1c      	ldr	r4, [pc, #112]	@ (800ccb8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800cc46:	4605      	mov	r5, r0
 800cc48:	69a3      	ldr	r3, [r4, #24]
 800cc4a:	6807      	ldr	r7, [r0, #0]
 800cc4c:	b92b      	cbnz	r3, 800cc5a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800cc4e:	6840      	ldr	r0, [r0, #4]
 800cc50:	e9c5 7000 	strd	r7, r0, [r5]
 800cc54:	b004      	add	sp, #16
 800cc56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc5a:	f04f 0802 	mov.w	r8, #2
 800cc5e:	fb93 f1f8 	sdiv	r1, r3, r8
 800cc62:	68a2      	ldr	r2, [r4, #8]
 800cc64:	ae04      	add	r6, sp, #16
 800cc66:	440a      	add	r2, r1
 800cc68:	f846 2d04 	str.w	r2, [r6, #-4]!
 800cc6c:	69e1      	ldr	r1, [r4, #28]
 800cc6e:	463a      	mov	r2, r7
 800cc70:	9600      	str	r6, [sp, #0]
 800cc72:	6820      	ldr	r0, [r4, #0]
 800cc74:	f7ff ff98 	bl	800cba8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc78:	69a3      	ldr	r3, [r4, #24]
 800cc7a:	4607      	mov	r7, r0
 800cc7c:	686a      	ldr	r2, [r5, #4]
 800cc7e:	6a21      	ldr	r1, [r4, #32]
 800cc80:	9600      	str	r6, [sp, #0]
 800cc82:	6860      	ldr	r0, [r4, #4]
 800cc84:	f7ff ff90 	bl	800cba8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc88:	69a3      	ldr	r3, [r4, #24]
 800cc8a:	6962      	ldr	r2, [r4, #20]
 800cc8c:	fb93 f8f8 	sdiv	r8, r3, r8
 800cc90:	4442      	add	r2, r8
 800cc92:	9203      	str	r2, [sp, #12]
 800cc94:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800cc96:	682a      	ldr	r2, [r5, #0]
 800cc98:	4407      	add	r7, r0
 800cc9a:	9600      	str	r6, [sp, #0]
 800cc9c:	68e0      	ldr	r0, [r4, #12]
 800cc9e:	f7ff ff83 	bl	800cba8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cca2:	9600      	str	r6, [sp, #0]
 800cca4:	4680      	mov	r8, r0
 800cca6:	69a3      	ldr	r3, [r4, #24]
 800cca8:	686a      	ldr	r2, [r5, #4]
 800ccaa:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800ccac:	6920      	ldr	r0, [r4, #16]
 800ccae:	f7ff ff7b 	bl	800cba8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ccb2:	4440      	add	r0, r8
 800ccb4:	e7cc      	b.n	800cc50 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800ccb6:	bf00      	nop
 800ccb8:	20082f14 	.word	0x20082f14

0800ccbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800ccbc:	4b07      	ldr	r3, [pc, #28]	@ (800ccdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800ccbe:	781b      	ldrb	r3, [r3, #0]
 800ccc0:	2b01      	cmp	r3, #1
 800ccc2:	d109      	bne.n	800ccd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800ccc4:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ccc8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800cccc:	8003      	strh	r3, [r0, #0]
 800ccce:	4b04      	ldr	r3, [pc, #16]	@ (800cce0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800ccd0:	881b      	ldrh	r3, [r3, #0]
 800ccd2:	3b01      	subs	r3, #1
 800ccd4:	1a9b      	subs	r3, r3, r2
 800ccd6:	800b      	strh	r3, [r1, #0]
 800ccd8:	4770      	bx	lr
 800ccda:	bf00      	nop
 800ccdc:	20082f00 	.word	0x20082f00
 800cce0:	20082efc 	.word	0x20082efc

0800cce4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800cce4:	b510      	push	{r4, lr}
 800cce6:	4b07      	ldr	r3, [pc, #28]	@ (800cd04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800cce8:	781b      	ldrb	r3, [r3, #0]
 800ccea:	2b01      	cmp	r3, #1
 800ccec:	d108      	bne.n	800cd00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800ccee:	4b06      	ldr	r3, [pc, #24]	@ (800cd08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800ccf0:	880c      	ldrh	r4, [r1, #0]
 800ccf2:	881b      	ldrh	r3, [r3, #0]
 800ccf4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ccf8:	3b01      	subs	r3, #1
 800ccfa:	1b1b      	subs	r3, r3, r4
 800ccfc:	8003      	strh	r3, [r0, #0]
 800ccfe:	800a      	strh	r2, [r1, #0]
 800cd00:	bd10      	pop	{r4, pc}
 800cd02:	bf00      	nop
 800cd04:	20082f00 	.word	0x20082f00
 800cd08:	20082efc 	.word	0x20082efc

0800cd0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800cd0c:	b510      	push	{r4, lr}
 800cd0e:	4b0a      	ldr	r3, [pc, #40]	@ (800cd38 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800cd10:	781b      	ldrb	r3, [r3, #0]
 800cd12:	2b01      	cmp	r3, #1
 800cd14:	d10e      	bne.n	800cd34 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800cd16:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800cd1a:	8843      	ldrh	r3, [r0, #2]
 800cd1c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cd20:	18ca      	adds	r2, r1, r3
 800cd22:	4b06      	ldr	r3, [pc, #24]	@ (800cd3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800cd24:	8044      	strh	r4, [r0, #2]
 800cd26:	881b      	ldrh	r3, [r3, #0]
 800cd28:	1a9b      	subs	r3, r3, r2
 800cd2a:	8003      	strh	r3, [r0, #0]
 800cd2c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cd30:	8081      	strh	r1, [r0, #4]
 800cd32:	80c3      	strh	r3, [r0, #6]
 800cd34:	bd10      	pop	{r4, pc}
 800cd36:	bf00      	nop
 800cd38:	20082f00 	.word	0x20082f00
 800cd3c:	20082efc 	.word	0x20082efc

0800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800cd40:	4b08      	ldr	r3, [pc, #32]	@ (800cd64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800cd42:	781b      	ldrb	r3, [r3, #0]
 800cd44:	2b01      	cmp	r3, #1
 800cd46:	d10c      	bne.n	800cd62 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800cd48:	8803      	ldrh	r3, [r0, #0]
 800cd4a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800cd4e:	8842      	ldrh	r2, [r0, #2]
 800cd50:	8002      	strh	r2, [r0, #0]
 800cd52:	185a      	adds	r2, r3, r1
 800cd54:	4b04      	ldr	r3, [pc, #16]	@ (800cd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800cd56:	881b      	ldrh	r3, [r3, #0]
 800cd58:	1a9b      	subs	r3, r3, r2
 800cd5a:	8043      	strh	r3, [r0, #2]
 800cd5c:	88c3      	ldrh	r3, [r0, #6]
 800cd5e:	80c1      	strh	r1, [r0, #6]
 800cd60:	8083      	strh	r3, [r0, #4]
 800cd62:	4770      	bx	lr
 800cd64:	20082f00 	.word	0x20082f00
 800cd68:	20082efc 	.word	0x20082efc

0800cd6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800cd6c:	b510      	push	{r4, lr}
 800cd6e:	4b07      	ldr	r3, [pc, #28]	@ (800cd8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800cd70:	781b      	ldrb	r3, [r3, #0]
 800cd72:	2b01      	cmp	r3, #1
 800cd74:	d108      	bne.n	800cd88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800cd76:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cd7a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cd7e:	8003      	strh	r3, [r0, #0]
 800cd80:	8893      	ldrh	r3, [r2, #4]
 800cd82:	3b01      	subs	r3, #1
 800cd84:	1b1b      	subs	r3, r3, r4
 800cd86:	800b      	strh	r3, [r1, #0]
 800cd88:	bd10      	pop	{r4, pc}
 800cd8a:	bf00      	nop
 800cd8c:	20082f00 	.word	0x20082f00

0800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800cd90:	b510      	push	{r4, lr}
 800cd92:	4b0a      	ldr	r3, [pc, #40]	@ (800cdbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800cd94:	460a      	mov	r2, r1
 800cd96:	781b      	ldrb	r3, [r3, #0]
 800cd98:	2b01      	cmp	r3, #1
 800cd9a:	d10d      	bne.n	800cdb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800cd9c:	8881      	ldrh	r1, [r0, #4]
 800cd9e:	8803      	ldrh	r3, [r0, #0]
 800cda0:	440b      	add	r3, r1
 800cda2:	4601      	mov	r1, r0
 800cda4:	3b01      	subs	r3, #1
 800cda6:	f821 3b02 	strh.w	r3, [r1], #2
 800cdaa:	f7ff ffdf 	bl	800cd6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800cdae:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cdb2:	88c2      	ldrh	r2, [r0, #6]
 800cdb4:	80c3      	strh	r3, [r0, #6]
 800cdb6:	8082      	strh	r2, [r0, #4]
 800cdb8:	bd10      	pop	{r4, pc}
 800cdba:	bf00      	nop
 800cdbc:	20082f00 	.word	0x20082f00

0800cdc0 <_ZN8touchgfx11Application13requestRedrawEv>:
 800cdc0:	2100      	movs	r1, #0
 800cdc2:	4b06      	ldr	r3, [pc, #24]	@ (800cddc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800cdc4:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800cdc8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cdcc:	4b04      	ldr	r3, [pc, #16]	@ (800cde0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800cdce:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800cdd2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cdd6:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800cdda:	4770      	bx	lr
 800cddc:	20082efc 	.word	0x20082efc
 800cde0:	20082efe 	.word	0x20082efe

0800cde4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800cde4:	4b03      	ldr	r3, [pc, #12]	@ (800cdf4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800cde6:	6818      	ldr	r0, [r3, #0]
 800cde8:	b110      	cbz	r0, 800cdf0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800cdea:	6803      	ldr	r3, [r0, #0]
 800cdec:	699b      	ldr	r3, [r3, #24]
 800cdee:	4718      	bx	r3
 800cdf0:	4770      	bx	lr
 800cdf2:	bf00      	nop
 800cdf4:	20082f44 	.word	0x20082f44

0800cdf8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800cdf8:	4770      	bx	lr
	...

0800cdfc <_ZN8touchgfx11Application4drawEv>:
 800cdfc:	b507      	push	{r0, r1, r2, lr}
 800cdfe:	2100      	movs	r1, #0
 800ce00:	4b08      	ldr	r3, [pc, #32]	@ (800ce24 <_ZN8touchgfx11Application4drawEv+0x28>)
 800ce02:	9100      	str	r1, [sp, #0]
 800ce04:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ce08:	4b07      	ldr	r3, [pc, #28]	@ (800ce28 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800ce0a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ce0e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ce12:	4669      	mov	r1, sp
 800ce14:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ce18:	6803      	ldr	r3, [r0, #0]
 800ce1a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ce1c:	4798      	blx	r3
 800ce1e:	b003      	add	sp, #12
 800ce20:	f85d fb04 	ldr.w	pc, [sp], #4
 800ce24:	20082efc 	.word	0x20082efc
 800ce28:	20082efe 	.word	0x20082efe

0800ce2c <_ZN8touchgfx11Application10invalidateEv>:
 800ce2c:	2100      	movs	r1, #0
 800ce2e:	4b09      	ldr	r3, [pc, #36]	@ (800ce54 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800ce30:	b082      	sub	sp, #8
 800ce32:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ce36:	4b08      	ldr	r3, [pc, #32]	@ (800ce58 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800ce38:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ce3c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ce40:	9100      	str	r1, [sp, #0]
 800ce42:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ce46:	6803      	ldr	r3, [r0, #0]
 800ce48:	aa02      	add	r2, sp, #8
 800ce4a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ce4c:	e912 0006 	ldmdb	r2, {r1, r2}
 800ce50:	b002      	add	sp, #8
 800ce52:	4718      	bx	r3
 800ce54:	20082efc 	.word	0x20082efc
 800ce58:	20082efe 	.word	0x20082efe

0800ce5c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ce5c:	4b03      	ldr	r3, [pc, #12]	@ (800ce6c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ce5e:	6818      	ldr	r0, [r3, #0]
 800ce60:	b110      	cbz	r0, 800ce68 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ce62:	6803      	ldr	r3, [r0, #0]
 800ce64:	69db      	ldr	r3, [r3, #28]
 800ce66:	4718      	bx	r3
 800ce68:	4770      	bx	lr
 800ce6a:	bf00      	nop
 800ce6c:	20082f44 	.word	0x20082f44

0800ce70 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ce70:	4b03      	ldr	r3, [pc, #12]	@ (800ce80 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ce72:	6818      	ldr	r0, [r3, #0]
 800ce74:	b110      	cbz	r0, 800ce7c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ce76:	6803      	ldr	r3, [r0, #0]
 800ce78:	6a1b      	ldr	r3, [r3, #32]
 800ce7a:	4718      	bx	r3
 800ce7c:	4770      	bx	lr
 800ce7e:	bf00      	nop
 800ce80:	20082f44 	.word	0x20082f44

0800ce84 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800ce84:	2300      	movs	r3, #0
 800ce86:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800ce8a:	4770      	bx	lr

0800ce8c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ce8c:	4b03      	ldr	r3, [pc, #12]	@ (800ce9c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ce8e:	6818      	ldr	r0, [r3, #0]
 800ce90:	b110      	cbz	r0, 800ce98 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ce92:	6803      	ldr	r3, [r0, #0]
 800ce94:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ce96:	4718      	bx	r3
 800ce98:	4770      	bx	lr
 800ce9a:	bf00      	nop
 800ce9c:	20082f44 	.word	0x20082f44

0800cea0 <_ZN8touchgfx11ApplicationD1Ev>:
 800cea0:	4770      	bx	lr

0800cea2 <_ZN8touchgfx11ApplicationD0Ev>:
 800cea2:	b510      	push	{r4, lr}
 800cea4:	4604      	mov	r4, r0
 800cea6:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800ceaa:	f024 f94c 	bl	8031146 <_ZdlPvj>
 800ceae:	4620      	mov	r0, r4
 800ceb0:	bd10      	pop	{r4, pc}

0800ceb2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ceb2:	b510      	push	{r4, lr}
 800ceb4:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ceb8:	888a      	ldrh	r2, [r1, #4]
 800ceba:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cebe:	4422      	add	r2, r4
 800cec0:	b212      	sxth	r2, r2
 800cec2:	4293      	cmp	r3, r2
 800cec4:	da15      	bge.n	800cef2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cec6:	8882      	ldrh	r2, [r0, #4]
 800cec8:	4413      	add	r3, r2
 800ceca:	b21b      	sxth	r3, r3
 800cecc:	429c      	cmp	r4, r3
 800cece:	da10      	bge.n	800cef2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ced0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ced4:	88c9      	ldrh	r1, [r1, #6]
 800ced6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ceda:	4419      	add	r1, r3
 800cedc:	b209      	sxth	r1, r1
 800cede:	428a      	cmp	r2, r1
 800cee0:	da07      	bge.n	800cef2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cee2:	88c0      	ldrh	r0, [r0, #6]
 800cee4:	4410      	add	r0, r2
 800cee6:	b200      	sxth	r0, r0
 800cee8:	4283      	cmp	r3, r0
 800ceea:	bfac      	ite	ge
 800ceec:	2000      	movge	r0, #0
 800ceee:	2001      	movlt	r0, #1
 800cef0:	bd10      	pop	{r4, pc}
 800cef2:	2000      	movs	r0, #0
 800cef4:	e7fc      	b.n	800cef0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800cef6 <_ZN8touchgfx4Rect10restrictToEss>:
 800cef6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cefa:	b510      	push	{r4, lr}
 800cefc:	2b00      	cmp	r3, #0
 800cefe:	da04      	bge.n	800cf0a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800cf00:	8884      	ldrh	r4, [r0, #4]
 800cf02:	4423      	add	r3, r4
 800cf04:	8083      	strh	r3, [r0, #4]
 800cf06:	2300      	movs	r3, #0
 800cf08:	8003      	strh	r3, [r0, #0]
 800cf0a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cf0e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cf12:	1b09      	subs	r1, r1, r4
 800cf14:	428b      	cmp	r3, r1
 800cf16:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cf1a:	bfc8      	it	gt
 800cf1c:	8081      	strhgt	r1, [r0, #4]
 800cf1e:	2b00      	cmp	r3, #0
 800cf20:	da04      	bge.n	800cf2c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800cf22:	88c1      	ldrh	r1, [r0, #6]
 800cf24:	440b      	add	r3, r1
 800cf26:	80c3      	strh	r3, [r0, #6]
 800cf28:	2300      	movs	r3, #0
 800cf2a:	8043      	strh	r3, [r0, #2]
 800cf2c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800cf30:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800cf34:	1a52      	subs	r2, r2, r1
 800cf36:	4293      	cmp	r3, r2
 800cf38:	bfc8      	it	gt
 800cf3a:	80c2      	strhgt	r2, [r0, #6]
 800cf3c:	bd10      	pop	{r4, pc}
	...

0800cf40 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800cf40:	b510      	push	{r4, lr}
 800cf42:	460c      	mov	r4, r1
 800cf44:	4b0f      	ldr	r3, [pc, #60]	@ (800cf84 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800cf46:	4620      	mov	r0, r4
 800cf48:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cf4c:	4b0e      	ldr	r3, [pc, #56]	@ (800cf88 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800cf4e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800cf52:	f7ff ffd0 	bl	800cef6 <_ZN8touchgfx4Rect10restrictToEss>
 800cf56:	4b0d      	ldr	r3, [pc, #52]	@ (800cf8c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800cf58:	6818      	ldr	r0, [r3, #0]
 800cf5a:	b190      	cbz	r0, 800cf82 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800cf5c:	6803      	ldr	r3, [r0, #0]
 800cf5e:	4621      	mov	r1, r4
 800cf60:	689b      	ldr	r3, [r3, #8]
 800cf62:	4798      	blx	r3
 800cf64:	4b0a      	ldr	r3, [pc, #40]	@ (800cf90 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800cf66:	6818      	ldr	r0, [r3, #0]
 800cf68:	b118      	cbz	r0, 800cf72 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800cf6a:	6803      	ldr	r3, [r0, #0]
 800cf6c:	4621      	mov	r1, r4
 800cf6e:	689b      	ldr	r3, [r3, #8]
 800cf70:	4798      	blx	r3
 800cf72:	4b08      	ldr	r3, [pc, #32]	@ (800cf94 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800cf74:	4621      	mov	r1, r4
 800cf76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cf7a:	6818      	ldr	r0, [r3, #0]
 800cf7c:	6803      	ldr	r3, [r0, #0]
 800cf7e:	69db      	ldr	r3, [r3, #28]
 800cf80:	4718      	bx	r3
 800cf82:	bd10      	pop	{r4, pc}
 800cf84:	20082efe 	.word	0x20082efe
 800cf88:	20082efc 	.word	0x20082efc
 800cf8c:	20082f44 	.word	0x20082f44
 800cf90:	20082f40 	.word	0x20082f40
 800cf94:	20082f08 	.word	0x20082f08

0800cf98 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800cf98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cf9a:	4606      	mov	r6, r0
 800cf9c:	4608      	mov	r0, r1
 800cf9e:	460f      	mov	r7, r1
 800cfa0:	f7fd fea9 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cfa4:	b9e8      	cbnz	r0, 800cfe2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cfa6:	f9b7 5000 	ldrsh.w	r5, [r7]
 800cfaa:	f9b6 4000 	ldrsh.w	r4, [r6]
 800cfae:	42a5      	cmp	r5, r4
 800cfb0:	db17      	blt.n	800cfe2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cfb2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800cfb6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800cfba:	429a      	cmp	r2, r3
 800cfbc:	db11      	blt.n	800cfe2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cfbe:	88b9      	ldrh	r1, [r7, #4]
 800cfc0:	440d      	add	r5, r1
 800cfc2:	88b1      	ldrh	r1, [r6, #4]
 800cfc4:	b22d      	sxth	r5, r5
 800cfc6:	440c      	add	r4, r1
 800cfc8:	b224      	sxth	r4, r4
 800cfca:	42a5      	cmp	r5, r4
 800cfcc:	dc09      	bgt.n	800cfe2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cfce:	88f8      	ldrh	r0, [r7, #6]
 800cfd0:	4410      	add	r0, r2
 800cfd2:	88f2      	ldrh	r2, [r6, #6]
 800cfd4:	b200      	sxth	r0, r0
 800cfd6:	4413      	add	r3, r2
 800cfd8:	b21b      	sxth	r3, r3
 800cfda:	4298      	cmp	r0, r3
 800cfdc:	bfcc      	ite	gt
 800cfde:	2000      	movgt	r0, #0
 800cfe0:	2001      	movle	r0, #1
 800cfe2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cfe4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cfe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cfe6:	4604      	mov	r4, r0
 800cfe8:	4608      	mov	r0, r1
 800cfea:	460d      	mov	r5, r1
 800cfec:	f7fd fe83 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cff0:	b978      	cbnz	r0, 800d012 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800cff2:	4620      	mov	r0, r4
 800cff4:	f7fd fe7f 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cff8:	f9b5 6000 	ldrsh.w	r6, [r5]
 800cffc:	b150      	cbz	r0, 800d014 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800cffe:	8026      	strh	r6, [r4, #0]
 800d000:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800d004:	8063      	strh	r3, [r4, #2]
 800d006:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800d00a:	80a3      	strh	r3, [r4, #4]
 800d00c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800d010:	80e3      	strh	r3, [r4, #6]
 800d012:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d014:	f9b4 1000 	ldrsh.w	r1, [r4]
 800d018:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d01c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800d020:	42b1      	cmp	r1, r6
 800d022:	460f      	mov	r7, r1
 800d024:	bfa8      	it	ge
 800d026:	4637      	movge	r7, r6
 800d028:	4293      	cmp	r3, r2
 800d02a:	4618      	mov	r0, r3
 800d02c:	bfa8      	it	ge
 800d02e:	4610      	movge	r0, r2
 800d030:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800d034:	88ed      	ldrh	r5, [r5, #6]
 800d036:	4466      	add	r6, ip
 800d038:	442a      	add	r2, r5
 800d03a:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d03e:	88e5      	ldrh	r5, [r4, #6]
 800d040:	4461      	add	r1, ip
 800d042:	442b      	add	r3, r5
 800d044:	b236      	sxth	r6, r6
 800d046:	b209      	sxth	r1, r1
 800d048:	b212      	sxth	r2, r2
 800d04a:	b21b      	sxth	r3, r3
 800d04c:	428e      	cmp	r6, r1
 800d04e:	bfac      	ite	ge
 800d050:	ebc7 0106 	rsbge	r1, r7, r6
 800d054:	ebc7 0101 	rsblt	r1, r7, r1
 800d058:	429a      	cmp	r2, r3
 800d05a:	bfac      	ite	ge
 800d05c:	ebc0 0202 	rsbge	r2, r0, r2
 800d060:	ebc0 0203 	rsblt	r2, r0, r3
 800d064:	8027      	strh	r7, [r4, #0]
 800d066:	8060      	strh	r0, [r4, #2]
 800d068:	80a1      	strh	r1, [r4, #4]
 800d06a:	80e2      	strh	r2, [r4, #6]
 800d06c:	e7d1      	b.n	800d012 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800d070 <_ZN8touchgfx11Application11getInstanceEv>:
 800d070:	4b01      	ldr	r3, [pc, #4]	@ (800d078 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800d072:	6818      	ldr	r0, [r3, #0]
 800d074:	4770      	bx	lr
 800d076:	bf00      	nop
 800d078:	20082f54 	.word	0x20082f54

0800d07c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800d07c:	2300      	movs	r3, #0
 800d07e:	b510      	push	{r4, lr}
 800d080:	4604      	mov	r4, r0
 800d082:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800d086:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800d08a:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800d08e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800d092:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800d096:	429a      	cmp	r2, r3
 800d098:	d90e      	bls.n	800d0b8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800d09a:	18e2      	adds	r2, r4, r3
 800d09c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800d0a0:	b122      	cbz	r2, 800d0ac <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800d0a2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800d0a6:	6803      	ldr	r3, [r0, #0]
 800d0a8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d0aa:	4798      	blx	r3
 800d0ac:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800d0b0:	3301      	adds	r3, #1
 800d0b2:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800d0b6:	e7ea      	b.n	800d08e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800d0b8:	bd10      	pop	{r4, pc}

0800d0ba <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800d0ba:	2300      	movs	r3, #0
 800d0bc:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800d0c0:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800d0c4:	30a4      	adds	r0, #164	@ 0xa4
 800d0c6:	f802 3b01 	strb.w	r3, [r2], #1
 800d0ca:	4282      	cmp	r2, r0
 800d0cc:	d1fb      	bne.n	800d0c6 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800d0ce:	4770      	bx	lr

0800d0d0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800d0d0:	b570      	push	{r4, r5, r6, lr}
 800d0d2:	4c0b      	ldr	r4, [pc, #44]	@ (800d100 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800d0d4:	4605      	mov	r5, r0
 800d0d6:	6820      	ldr	r0, [r4, #0]
 800d0d8:	460e      	mov	r6, r1
 800d0da:	b110      	cbz	r0, 800d0e2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800d0dc:	6803      	ldr	r3, [r0, #0]
 800d0de:	695b      	ldr	r3, [r3, #20]
 800d0e0:	4798      	blx	r3
 800d0e2:	1d28      	adds	r0, r5, #4
 800d0e4:	f7ff ffe9 	bl	800d0ba <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800d0e8:	6026      	str	r6, [r4, #0]
 800d0ea:	6833      	ldr	r3, [r6, #0]
 800d0ec:	4630      	mov	r0, r6
 800d0ee:	68db      	ldr	r3, [r3, #12]
 800d0f0:	4798      	blx	r3
 800d0f2:	682b      	ldr	r3, [r5, #0]
 800d0f4:	4628      	mov	r0, r5
 800d0f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0fa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d0fc:	4718      	bx	r3
 800d0fe:	bf00      	nop
 800d100:	20082f44 	.word	0x20082f44

0800d104 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800d104:	2300      	movs	r3, #0
 800d106:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d108:	461a      	mov	r2, r3
 800d10a:	461c      	mov	r4, r3
 800d10c:	461d      	mov	r5, r3
 800d10e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800d112:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800d116:	459c      	cmp	ip, r3
 800d118:	dd1a      	ble.n	800d150 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800d11a:	18c6      	adds	r6, r0, r3
 800d11c:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800d120:	b16e      	cbz	r6, 800d13e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800d122:	429a      	cmp	r2, r3
 800d124:	d008      	beq.n	800d138 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800d126:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800d12a:	fa1f fe82 	uxth.w	lr, r2
 800d12e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800d132:	1887      	adds	r7, r0, r2
 800d134:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800d138:	3201      	adds	r2, #1
 800d13a:	3301      	adds	r3, #1
 800d13c:	e7eb      	b.n	800d116 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800d13e:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800d142:	4299      	cmp	r1, r3
 800d144:	bfa8      	it	ge
 800d146:	3501      	addge	r5, #1
 800d148:	429e      	cmp	r6, r3
 800d14a:	bfc8      	it	gt
 800d14c:	3401      	addgt	r4, #1
 800d14e:	e7f4      	b.n	800d13a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800d150:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800d154:	1b49      	subs	r1, r1, r5
 800d156:	1b1b      	subs	r3, r3, r4
 800d158:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800d15c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800d160:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800d164:	4293      	cmp	r3, r2
 800d166:	dd03      	ble.n	800d170 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800d168:	3b01      	subs	r3, #1
 800d16a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800d16e:	e7f7      	b.n	800d160 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800d170:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800d174 <_ZN8touchgfx11Application15handleTickEventEv>:
 800d174:	b570      	push	{r4, r5, r6, lr}
 800d176:	4d16      	ldr	r5, [pc, #88]	@ (800d1d0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800d178:	4604      	mov	r4, r0
 800d17a:	6828      	ldr	r0, [r5, #0]
 800d17c:	b140      	cbz	r0, 800d190 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800d17e:	7a03      	ldrb	r3, [r0, #8]
 800d180:	b933      	cbnz	r3, 800d190 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800d182:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800d186:	6803      	ldr	r3, [r0, #0]
 800d188:	689b      	ldr	r3, [r3, #8]
 800d18a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d18e:	4718      	bx	r3
 800d190:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800d194:	4e0f      	ldr	r6, [pc, #60]	@ (800d1d4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800d196:	b973      	cbnz	r3, 800d1b6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d198:	b168      	cbz	r0, 800d1b6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d19a:	7a03      	ldrb	r3, [r0, #8]
 800d19c:	b15b      	cbz	r3, 800d1b6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d19e:	6830      	ldr	r0, [r6, #0]
 800d1a0:	b110      	cbz	r0, 800d1a8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800d1a2:	6803      	ldr	r3, [r0, #0]
 800d1a4:	691b      	ldr	r3, [r3, #16]
 800d1a6:	4798      	blx	r3
 800d1a8:	6828      	ldr	r0, [r5, #0]
 800d1aa:	6803      	ldr	r3, [r0, #0]
 800d1ac:	68db      	ldr	r3, [r3, #12]
 800d1ae:	4798      	blx	r3
 800d1b0:	2301      	movs	r3, #1
 800d1b2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800d1b6:	3404      	adds	r4, #4
 800d1b8:	4620      	mov	r0, r4
 800d1ba:	f7ff ff5f 	bl	800d07c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800d1be:	4620      	mov	r0, r4
 800d1c0:	f7ff ffa0 	bl	800d104 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800d1c4:	6830      	ldr	r0, [r6, #0]
 800d1c6:	b110      	cbz	r0, 800d1ce <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800d1c8:	6803      	ldr	r3, [r0, #0]
 800d1ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d1cc:	e7dd      	b.n	800d18a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800d1ce:	bd70      	pop	{r4, r5, r6, pc}
 800d1d0:	20082f48 	.word	0x20082f48
 800d1d4:	20082f44 	.word	0x20082f44

0800d1d8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800d1d8:	4603      	mov	r3, r0
 800d1da:	2200      	movs	r2, #0
 800d1dc:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800d1e0:	801a      	strh	r2, [r3, #0]
 800d1e2:	805a      	strh	r2, [r3, #2]
 800d1e4:	809a      	strh	r2, [r3, #4]
 800d1e6:	80da      	strh	r2, [r3, #6]
 800d1e8:	3308      	adds	r3, #8
 800d1ea:	428b      	cmp	r3, r1
 800d1ec:	d1f8      	bne.n	800d1e0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800d1ee:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800d1f2:	4770      	bx	lr

0800d1f4 <_ZN8touchgfx11ApplicationC1Ev>:
 800d1f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d1f6:	4606      	mov	r6, r0
 800d1f8:	4604      	mov	r4, r0
 800d1fa:	2500      	movs	r5, #0
 800d1fc:	4b1b      	ldr	r3, [pc, #108]	@ (800d26c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800d1fe:	22a8      	movs	r2, #168	@ 0xa8
 800d200:	f846 3b04 	str.w	r3, [r6], #4
 800d204:	2100      	movs	r1, #0
 800d206:	4630      	mov	r0, r6
 800d208:	f025 fb7d 	bl	8032906 <memset>
 800d20c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800d210:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800d214:	f7ff ffe0 	bl	800d1d8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d218:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800d21c:	f7ff ffdc 	bl	800d1d8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d220:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800d224:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800d228:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800d22c:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800d230:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800d234:	490e      	ldr	r1, [pc, #56]	@ (800d270 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800d236:	480f      	ldr	r0, [pc, #60]	@ (800d274 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800d238:	f003 f832 	bl	80102a0 <CRC_Lock>
 800d23c:	4f0e      	ldr	r7, [pc, #56]	@ (800d278 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800d23e:	4b0f      	ldr	r3, [pc, #60]	@ (800d27c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800d240:	b158      	cbz	r0, 800d25a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800d242:	801d      	strh	r5, [r3, #0]
 800d244:	2300      	movs	r3, #0
 800d246:	4a0e      	ldr	r2, [pc, #56]	@ (800d280 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800d248:	4630      	mov	r0, r6
 800d24a:	6013      	str	r3, [r2, #0]
 800d24c:	4a0d      	ldr	r2, [pc, #52]	@ (800d284 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800d24e:	603b      	str	r3, [r7, #0]
 800d250:	6013      	str	r3, [r2, #0]
 800d252:	f7ff ff32 	bl	800d0ba <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800d256:	4620      	mov	r0, r4
 800d258:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d25a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800d25e:	2002      	movs	r0, #2
 800d260:	801a      	strh	r2, [r3, #0]
 800d262:	6038      	str	r0, [r7, #0]
 800d264:	f001 fd82 	bl	800ed6c <_ZN8touchgfx6Screen4drawEv>
 800d268:	e7ec      	b.n	800d244 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800d26a:	bf00      	nop
 800d26c:	08035b6c 	.word	0x08035b6c
 800d270:	b5e8b5cd 	.word	0xb5e8b5cd
 800d274:	f407a5c2 	.word	0xf407a5c2
 800d278:	20082f44 	.word	0x20082f44
 800d27c:	20000060 	.word	0x20000060
 800d280:	20082f54 	.word	0x20082f54
 800d284:	20082f48 	.word	0x20082f48

0800d288 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800d288:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800d28c:	b510      	push	{r4, lr}
 800d28e:	3b01      	subs	r3, #1
 800d290:	b29b      	uxth	r3, r3
 800d292:	428b      	cmp	r3, r1
 800d294:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800d298:	d908      	bls.n	800d2ac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800d29a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800d29e:	681a      	ldr	r2, [r3, #0]
 800d2a0:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800d2a4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800d2a8:	685a      	ldr	r2, [r3, #4]
 800d2aa:	6062      	str	r2, [r4, #4]
 800d2ac:	bd10      	pop	{r4, pc}
	...

0800d2b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800d2b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2b4:	4b8f      	ldr	r3, [pc, #572]	@ (800d4f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800d2b6:	b08f      	sub	sp, #60	@ 0x3c
 800d2b8:	ac0a      	add	r4, sp, #40	@ 0x28
 800d2ba:	e884 0006 	stmia.w	r4, {r1, r2}
 800d2be:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d2c2:	4b8d      	ldr	r3, [pc, #564]	@ (800d4f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800d2c4:	4683      	mov	fp, r0
 800d2c6:	f9b3 1000 	ldrsh.w	r1, [r3]
 800d2ca:	4620      	mov	r0, r4
 800d2cc:	f7ff fe13 	bl	800cef6 <_ZN8touchgfx4Rect10restrictToEss>
 800d2d0:	4620      	mov	r0, r4
 800d2d2:	f7fd fd10 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d2d6:	2800      	cmp	r0, #0
 800d2d8:	d16a      	bne.n	800d3b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d2da:	9403      	str	r4, [sp, #12]
 800d2dc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800d2e0:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800d2e4:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800d2e8:	35a4      	adds	r5, #164	@ 0xa4
 800d2ea:	9301      	str	r3, [sp, #4]
 800d2ec:	b15c      	cbz	r4, 800d306 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d2ee:	4629      	mov	r1, r5
 800d2f0:	9803      	ldr	r0, [sp, #12]
 800d2f2:	f7ff fe51 	bl	800cf98 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d2f6:	3c01      	subs	r4, #1
 800d2f8:	b118      	cbz	r0, 800d302 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800d2fa:	b2a1      	uxth	r1, r4
 800d2fc:	9801      	ldr	r0, [sp, #4]
 800d2fe:	f7ff ffc3 	bl	800d288 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d302:	3d08      	subs	r5, #8
 800d304:	e7f2      	b.n	800d2ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800d306:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800d30a:	f10a 33ff 	add.w	r3, sl, #4294967295
 800d30e:	9302      	str	r3, [sp, #8]
 800d310:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800d314:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800d318:	f8cd a010 	str.w	sl, [sp, #16]
 800d31c:	9306      	str	r3, [sp, #24]
 800d31e:	445c      	add	r4, fp
 800d320:	2500      	movs	r5, #0
 800d322:	4626      	mov	r6, r4
 800d324:	462f      	mov	r7, r5
 800d326:	f8cd a014 	str.w	sl, [sp, #20]
 800d32a:	9b05      	ldr	r3, [sp, #20]
 800d32c:	2b00      	cmp	r3, #0
 800d32e:	d073      	beq.n	800d418 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800d330:	9903      	ldr	r1, [sp, #12]
 800d332:	4630      	mov	r0, r6
 800d334:	f7ff fdbd 	bl	800ceb2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d338:	b350      	cbz	r0, 800d390 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d33a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800d33e:	f9b6 c000 	ldrsh.w	ip, [r6]
 800d342:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800d346:	45e6      	cmp	lr, ip
 800d348:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800d34c:	db33      	blt.n	800d3b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d34e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800d352:	88b3      	ldrh	r3, [r6, #4]
 800d354:	4472      	add	r2, lr
 800d356:	4463      	add	r3, ip
 800d358:	b212      	sxth	r2, r2
 800d35a:	b21b      	sxth	r3, r3
 800d35c:	429a      	cmp	r2, r3
 800d35e:	dc2a      	bgt.n	800d3b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d360:	88f3      	ldrh	r3, [r6, #6]
 800d362:	fa1f f289 	uxth.w	r2, r9
 800d366:	4413      	add	r3, r2
 800d368:	b29b      	uxth	r3, r3
 800d36a:	45c8      	cmp	r8, r9
 800d36c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800d370:	fa1f fc88 	uxth.w	ip, r8
 800d374:	fa0f fe83 	sxth.w	lr, r3
 800d378:	db0f      	blt.n	800d39a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800d37a:	eba3 030c 	sub.w	r3, r3, ip
 800d37e:	1ac9      	subs	r1, r1, r3
 800d380:	b209      	sxth	r1, r1
 800d382:	2900      	cmp	r1, #0
 800d384:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d388:	dd12      	ble.n	800d3b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d38a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800d38e:	4605      	mov	r5, r0
 800d390:	9b05      	ldr	r3, [sp, #20]
 800d392:	3e08      	subs	r6, #8
 800d394:	3b01      	subs	r3, #1
 800d396:	9305      	str	r3, [sp, #20]
 800d398:	e7c7      	b.n	800d32a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800d39a:	4461      	add	r1, ip
 800d39c:	b209      	sxth	r1, r1
 800d39e:	4571      	cmp	r1, lr
 800d3a0:	dc38      	bgt.n	800d414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d3a2:	eba2 020c 	sub.w	r2, r2, ip
 800d3a6:	b212      	sxth	r2, r2
 800d3a8:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800d3ac:	2a00      	cmp	r2, #0
 800d3ae:	dcee      	bgt.n	800d38e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d3b0:	b00f      	add	sp, #60	@ 0x3c
 800d3b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d3b6:	45c8      	cmp	r8, r9
 800d3b8:	db2c      	blt.n	800d414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d3ba:	88f3      	ldrh	r3, [r6, #6]
 800d3bc:	4499      	add	r9, r3
 800d3be:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800d3c2:	fa0f f989 	sxth.w	r9, r9
 800d3c6:	4498      	add	r8, r3
 800d3c8:	fa0f f888 	sxth.w	r8, r8
 800d3cc:	45c1      	cmp	r9, r8
 800d3ce:	db21      	blt.n	800d414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d3d0:	88b3      	ldrh	r3, [r6, #4]
 800d3d2:	fa1f f28c 	uxth.w	r2, ip
 800d3d6:	4413      	add	r3, r2
 800d3d8:	b29b      	uxth	r3, r3
 800d3da:	45e6      	cmp	lr, ip
 800d3dc:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800d3e0:	fa1f f88e 	uxth.w	r8, lr
 800d3e4:	fa0f f983 	sxth.w	r9, r3
 800d3e8:	db0a      	blt.n	800d400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800d3ea:	eba3 0308 	sub.w	r3, r3, r8
 800d3ee:	1ac9      	subs	r1, r1, r3
 800d3f0:	b209      	sxth	r1, r1
 800d3f2:	2900      	cmp	r1, #0
 800d3f4:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800d3f8:	ddda      	ble.n	800d3b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d3fa:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d3fe:	e7c6      	b.n	800d38e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d400:	4441      	add	r1, r8
 800d402:	b209      	sxth	r1, r1
 800d404:	4549      	cmp	r1, r9
 800d406:	dc05      	bgt.n	800d414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d408:	eba2 0208 	sub.w	r2, r2, r8
 800d40c:	b212      	sxth	r2, r2
 800d40e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800d412:	e7cb      	b.n	800d3ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800d414:	4607      	mov	r7, r0
 800d416:	e7bb      	b.n	800d390 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d418:	2d00      	cmp	r5, #0
 800d41a:	d181      	bne.n	800d320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800d41c:	2f00      	cmp	r7, #0
 800d41e:	f000 81de 	beq.w	800d7de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d422:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800d426:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800d42a:	b2b3      	uxth	r3, r6
 800d42c:	9305      	str	r3, [sp, #20]
 800d42e:	9a05      	ldr	r2, [sp, #20]
 800d430:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800d434:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800d438:	4413      	add	r3, r2
 800d43a:	b2ba      	uxth	r2, r7
 800d43c:	4492      	add	sl, r2
 800d43e:	b29b      	uxth	r3, r3
 800d440:	fa1f fa8a 	uxth.w	sl, sl
 800d444:	fa0f f883 	sxth.w	r8, r3
 800d448:	fa0f f98a 	sxth.w	r9, sl
 800d44c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800d450:	9b04      	ldr	r3, [sp, #16]
 800d452:	2b00      	cmp	r3, #0
 800d454:	d052      	beq.n	800d4fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800d456:	9903      	ldr	r1, [sp, #12]
 800d458:	4620      	mov	r0, r4
 800d45a:	f7ff fd2a 	bl	800ceb2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d45e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800d462:	b1c0      	cbz	r0, 800d496 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d464:	f9b4 e000 	ldrsh.w	lr, [r4]
 800d468:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800d46c:	4576      	cmp	r6, lr
 800d46e:	dc22      	bgt.n	800d4b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d470:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d474:	44f4      	add	ip, lr
 800d476:	fa0f fc8c 	sxth.w	ip, ip
 800d47a:	45e0      	cmp	r8, ip
 800d47c:	db1b      	blt.n	800d4b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d47e:	428f      	cmp	r7, r1
 800d480:	fa1f fc81 	uxth.w	ip, r1
 800d484:	88e1      	ldrh	r1, [r4, #6]
 800d486:	dc0d      	bgt.n	800d4a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800d488:	ebaa 0c0c 	sub.w	ip, sl, ip
 800d48c:	eba1 010c 	sub.w	r1, r1, ip
 800d490:	f8a4 9002 	strh.w	r9, [r4, #2]
 800d494:	80e1      	strh	r1, [r4, #6]
 800d496:	4628      	mov	r0, r5
 800d498:	9904      	ldr	r1, [sp, #16]
 800d49a:	3c08      	subs	r4, #8
 800d49c:	3901      	subs	r1, #1
 800d49e:	9104      	str	r1, [sp, #16]
 800d4a0:	4605      	mov	r5, r0
 800d4a2:	e7d3      	b.n	800d44c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800d4a4:	4461      	add	r1, ip
 800d4a6:	b209      	sxth	r1, r1
 800d4a8:	4549      	cmp	r1, r9
 800d4aa:	dcf5      	bgt.n	800d498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d4ac:	eba2 0c0c 	sub.w	ip, r2, ip
 800d4b0:	f8a4 c006 	strh.w	ip, [r4, #6]
 800d4b4:	e7ef      	b.n	800d496 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d4b6:	428f      	cmp	r7, r1
 800d4b8:	dcee      	bgt.n	800d498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d4ba:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800d4be:	4461      	add	r1, ip
 800d4c0:	b209      	sxth	r1, r1
 800d4c2:	4589      	cmp	r9, r1
 800d4c4:	dbe8      	blt.n	800d498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d4c6:	4576      	cmp	r6, lr
 800d4c8:	fa1f fc8e 	uxth.w	ip, lr
 800d4cc:	88a1      	ldrh	r1, [r4, #4]
 800d4ce:	dc07      	bgt.n	800d4e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800d4d0:	eba3 0c0c 	sub.w	ip, r3, ip
 800d4d4:	eba1 010c 	sub.w	r1, r1, ip
 800d4d8:	f8a4 8000 	strh.w	r8, [r4]
 800d4dc:	80a1      	strh	r1, [r4, #4]
 800d4de:	e7da      	b.n	800d496 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d4e0:	4461      	add	r1, ip
 800d4e2:	b209      	sxth	r1, r1
 800d4e4:	4588      	cmp	r8, r1
 800d4e6:	dbd7      	blt.n	800d498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d4e8:	9905      	ldr	r1, [sp, #20]
 800d4ea:	eba1 0c0c 	sub.w	ip, r1, ip
 800d4ee:	f8a4 c004 	strh.w	ip, [r4, #4]
 800d4f2:	e7d0      	b.n	800d496 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d4f4:	20082efe 	.word	0x20082efe
 800d4f8:	20082efc 	.word	0x20082efc
 800d4fc:	2d00      	cmp	r5, #0
 800d4fe:	f000 816e 	beq.w	800d7de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d502:	9b06      	ldr	r3, [sp, #24]
 800d504:	445b      	add	r3, fp
 800d506:	461c      	mov	r4, r3
 800d508:	9b02      	ldr	r3, [sp, #8]
 800d50a:	3301      	adds	r3, #1
 800d50c:	f000 8167 	beq.w	800d7de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52e>
 800d510:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800d514:	4629      	mov	r1, r5
 800d516:	9803      	ldr	r0, [sp, #12]
 800d518:	f7ff fd3e 	bl	800cf98 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d51c:	b120      	cbz	r0, 800d528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800d51e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800d522:	9801      	ldr	r0, [sp, #4]
 800d524:	f7ff feb0 	bl	800d288 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d528:	9903      	ldr	r1, [sp, #12]
 800d52a:	4628      	mov	r0, r5
 800d52c:	f7ff fcc1 	bl	800ceb2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d530:	2800      	cmp	r0, #0
 800d532:	f000 809c 	beq.w	800d66e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d536:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800d53a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d53e:	fa1f f189 	uxth.w	r1, r9
 800d542:	eb01 0c03 	add.w	ip, r1, r3
 800d546:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800d54a:	fa1f fa8c 	uxth.w	sl, ip
 800d54e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800d552:	9309      	str	r3, [sp, #36]	@ 0x24
 800d554:	b283      	uxth	r3, r0
 800d556:	eb03 050c 	add.w	r5, r3, ip
 800d55a:	b2ad      	uxth	r5, r5
 800d55c:	9505      	str	r5, [sp, #20]
 800d55e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800d562:	4548      	cmp	r0, r9
 800d564:	9504      	str	r5, [sp, #16]
 800d566:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800d56a:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800d56e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800d572:	f340 8099 	ble.w	800d6a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800d576:	1a5b      	subs	r3, r3, r1
 800d578:	b29b      	uxth	r3, r3
 800d57a:	4596      	cmp	lr, r2
 800d57c:	fa0f f08a 	sxth.w	r0, sl
 800d580:	b21e      	sxth	r6, r3
 800d582:	dd2e      	ble.n	800d5e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800d584:	9f02      	ldr	r7, [sp, #8]
 800d586:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800d58a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800d58e:	9f04      	ldr	r7, [sp, #16]
 800d590:	fa1f fe8e 	uxth.w	lr, lr
 800d594:	1a3f      	subs	r7, r7, r0
 800d596:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800d59a:	b292      	uxth	r2, r2
 800d59c:	ebae 0102 	sub.w	r1, lr, r2
 800d5a0:	44a6      	add	lr, r4
 800d5a2:	4402      	add	r2, r0
 800d5a4:	b289      	uxth	r1, r1
 800d5a6:	fa0f fe8e 	sxth.w	lr, lr
 800d5aa:	b212      	sxth	r2, r2
 800d5ac:	b20d      	sxth	r5, r1
 800d5ae:	ebae 0202 	sub.w	r2, lr, r2
 800d5b2:	436f      	muls	r7, r5
 800d5b4:	4372      	muls	r2, r6
 800d5b6:	4297      	cmp	r7, r2
 800d5b8:	db09      	blt.n	800d5ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800d5ba:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800d5be:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800d5c2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800d5c6:	449c      	add	ip, r3
 800d5c8:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d5cc:	e686      	b.n	800d2dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d5ce:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800d5d2:	4421      	add	r1, r4
 800d5d4:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800d5d8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d5dc:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d5e0:	e67c      	b.n	800d2dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d5e2:	9f04      	ldr	r7, [sp, #16]
 800d5e4:	42b8      	cmp	r0, r7
 800d5e6:	da27      	bge.n	800d638 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800d5e8:	9902      	ldr	r1, [sp, #8]
 800d5ea:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800d5ee:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800d5f2:	eb05 010e 	add.w	r1, r5, lr
 800d5f6:	fa1f f881 	uxth.w	r8, r1
 800d5fa:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800d5fe:	fa0f f988 	sxth.w	r9, r8
 800d602:	4411      	add	r1, r2
 800d604:	eba1 0108 	sub.w	r1, r1, r8
 800d608:	b289      	uxth	r1, r1
 800d60a:	fa0f f881 	sxth.w	r8, r1
 800d60e:	eba2 020e 	sub.w	r2, r2, lr
 800d612:	1a3f      	subs	r7, r7, r0
 800d614:	4372      	muls	r2, r6
 800d616:	fb08 f707 	mul.w	r7, r8, r7
 800d61a:	42ba      	cmp	r2, r7
 800d61c:	dc06      	bgt.n	800d62c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800d61e:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800d622:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800d626:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800d62a:	e7ca      	b.n	800d5c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800d62c:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800d630:	4429      	add	r1, r5
 800d632:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d636:	e651      	b.n	800d2dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d638:	9805      	ldr	r0, [sp, #20]
 800d63a:	2d06      	cmp	r5, #6
 800d63c:	ebaa 0000 	sub.w	r0, sl, r0
 800d640:	b280      	uxth	r0, r0
 800d642:	fa0f fe80 	sxth.w	lr, r0
 800d646:	d817      	bhi.n	800d678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800d648:	9b04      	ldr	r3, [sp, #16]
 800d64a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800d64e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800d652:	1c6b      	adds	r3, r5, #1
 800d654:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800d658:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800d65c:	9b01      	ldr	r3, [sp, #4]
 800d65e:	9801      	ldr	r0, [sp, #4]
 800d660:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d664:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800d668:	805a      	strh	r2, [r3, #2]
 800d66a:	809e      	strh	r6, [r3, #4]
 800d66c:	80d9      	strh	r1, [r3, #6]
 800d66e:	9b02      	ldr	r3, [sp, #8]
 800d670:	3c08      	subs	r4, #8
 800d672:	3b01      	subs	r3, #1
 800d674:	9302      	str	r3, [sp, #8]
 800d676:	e747      	b.n	800d508 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800d678:	9a02      	ldr	r2, [sp, #8]
 800d67a:	45b6      	cmp	lr, r6
 800d67c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d680:	db0d      	blt.n	800d69e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800d682:	449c      	add	ip, r3
 800d684:	fa1f fc8c 	uxth.w	ip, ip
 800d688:	445a      	add	r2, fp
 800d68a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d68e:	448c      	add	ip, r1
 800d690:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d694:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800d698:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800d69c:	e61e      	b.n	800d2dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d69e:	445a      	add	r2, fp
 800d6a0:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800d6a4:	4484      	add	ip, r0
 800d6a6:	e78f      	b.n	800d5c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d6a8:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800d6ac:	fa1f f18e 	uxth.w	r1, lr
 800d6b0:	eb01 0806 	add.w	r8, r1, r6
 800d6b4:	b293      	uxth	r3, r2
 800d6b6:	fa1f f888 	uxth.w	r8, r8
 800d6ba:	9306      	str	r3, [sp, #24]
 800d6bc:	fa0f f388 	sxth.w	r3, r8
 800d6c0:	9307      	str	r3, [sp, #28]
 800d6c2:	9f06      	ldr	r7, [sp, #24]
 800d6c4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800d6c8:	4596      	cmp	lr, r2
 800d6ca:	443b      	add	r3, r7
 800d6cc:	b29b      	uxth	r3, r3
 800d6ce:	9308      	str	r3, [sp, #32]
 800d6d0:	da24      	bge.n	800d71c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800d6d2:	9905      	ldr	r1, [sp, #20]
 800d6d4:	eba3 0308 	sub.w	r3, r3, r8
 800d6d8:	ebaa 0401 	sub.w	r4, sl, r1
 800d6dc:	b2a4      	uxth	r4, r4
 800d6de:	b29b      	uxth	r3, r3
 800d6e0:	b225      	sxth	r5, r4
 800d6e2:	b219      	sxth	r1, r3
 800d6e4:	eba2 020e 	sub.w	r2, r2, lr
 800d6e8:	eba9 0000 	sub.w	r0, r9, r0
 800d6ec:	436a      	muls	r2, r5
 800d6ee:	4348      	muls	r0, r1
 800d6f0:	4282      	cmp	r2, r0
 800d6f2:	9a02      	ldr	r2, [sp, #8]
 800d6f4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d6f8:	445a      	add	r2, fp
 800d6fa:	dc06      	bgt.n	800d70a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800d6fc:	9b07      	ldr	r3, [sp, #28]
 800d6fe:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800d702:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800d706:	44a4      	add	ip, r4
 800d708:	e75e      	b.n	800d5c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d70a:	9904      	ldr	r1, [sp, #16]
 800d70c:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800d710:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800d714:	4433      	add	r3, r6
 800d716:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d71a:	e5df      	b.n	800d2dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d71c:	9f06      	ldr	r7, [sp, #24]
 800d71e:	9b04      	ldr	r3, [sp, #16]
 800d720:	1bc9      	subs	r1, r1, r7
 800d722:	fa0f f78a 	sxth.w	r7, sl
 800d726:	b289      	uxth	r1, r1
 800d728:	429f      	cmp	r7, r3
 800d72a:	fa0f fe81 	sxth.w	lr, r1
 800d72e:	dd24      	ble.n	800d77a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4ca>
 800d730:	9a05      	ldr	r2, [sp, #20]
 800d732:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d736:	ebaa 0202 	sub.w	r2, sl, r2
 800d73a:	9d07      	ldr	r5, [sp, #28]
 800d73c:	b292      	uxth	r2, r2
 800d73e:	eba5 0a03 	sub.w	sl, r5, r3
 800d742:	b214      	sxth	r4, r2
 800d744:	eba9 0000 	sub.w	r0, r9, r0
 800d748:	fb0e f000 	mul.w	r0, lr, r0
 800d74c:	fb04 fa0a 	mul.w	sl, r4, sl
 800d750:	9b02      	ldr	r3, [sp, #8]
 800d752:	4550      	cmp	r0, sl
 800d754:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800d758:	445b      	add	r3, fp
 800d75a:	db03      	blt.n	800d764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b4>
 800d75c:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800d760:	4494      	add	ip, r2
 800d762:	e731      	b.n	800d5c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d764:	9a04      	ldr	r2, [sp, #16]
 800d766:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800d76a:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800d76e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800d772:	4431      	add	r1, r6
 800d774:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d778:	e75b      	b.n	800d632 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800d77a:	9b08      	ldr	r3, [sp, #32]
 800d77c:	2d06      	cmp	r5, #6
 800d77e:	eba3 0308 	sub.w	r3, r3, r8
 800d782:	b29b      	uxth	r3, r3
 800d784:	b218      	sxth	r0, r3
 800d786:	d813      	bhi.n	800d7b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x500>
 800d788:	9b07      	ldr	r3, [sp, #28]
 800d78a:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800d78e:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800d792:	1c6b      	adds	r3, r5, #1
 800d794:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800d798:	9b01      	ldr	r3, [sp, #4]
 800d79a:	9901      	ldr	r1, [sp, #4]
 800d79c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d7a0:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800d7a4:	805a      	strh	r2, [r3, #2]
 800d7a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d7a8:	f8a3 e006 	strh.w	lr, [r3, #6]
 800d7ac:	809a      	strh	r2, [r3, #4]
 800d7ae:	e75e      	b.n	800d66e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d7b0:	9c02      	ldr	r4, [sp, #8]
 800d7b2:	4570      	cmp	r0, lr
 800d7b4:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d7b8:	db0d      	blt.n	800d7d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x526>
 800d7ba:	4431      	add	r1, r6
 800d7bc:	9b06      	ldr	r3, [sp, #24]
 800d7be:	b289      	uxth	r1, r1
 800d7c0:	445c      	add	r4, fp
 800d7c2:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d7c6:	4419      	add	r1, r3
 800d7c8:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800d7cc:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800d7d0:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800d7d4:	e582      	b.n	800d2dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d7d6:	445c      	add	r4, fp
 800d7d8:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800d7dc:	e79a      	b.n	800d714 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800d7de:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800d7e2:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800d7e6:	1e65      	subs	r5, r4, #1
 800d7e8:	b2ad      	uxth	r5, r5
 800d7ea:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800d7ee:	42b5      	cmp	r5, r6
 800d7f0:	d044      	beq.n	800d87c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5cc>
 800d7f2:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800d7f6:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800d7fa:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800d7fe:	4282      	cmp	r2, r0
 800d800:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800d804:	d11f      	bne.n	800d846 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 800d806:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800d80a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800d80e:	459c      	cmp	ip, r3
 800d810:	d119      	bne.n	800d846 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 800d812:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800d816:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800d81a:	19d8      	adds	r0, r3, r7
 800d81c:	b200      	sxth	r0, r0
 800d81e:	4288      	cmp	r0, r1
 800d820:	d109      	bne.n	800d836 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 800d822:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800d826:	4413      	add	r3, r2
 800d828:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800d82c:	4629      	mov	r1, r5
 800d82e:	9801      	ldr	r0, [sp, #4]
 800d830:	f7ff fd2a 	bl	800d288 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d834:	e003      	b.n	800d83e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d836:	4411      	add	r1, r2
 800d838:	b209      	sxth	r1, r1
 800d83a:	42b9      	cmp	r1, r7
 800d83c:	d0f3      	beq.n	800d826 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x576>
 800d83e:	3d01      	subs	r5, #1
 800d840:	b2ad      	uxth	r5, r5
 800d842:	3c08      	subs	r4, #8
 800d844:	e7d3      	b.n	800d7ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53e>
 800d846:	42b9      	cmp	r1, r7
 800d848:	d1f9      	bne.n	800d83e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d84a:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800d84e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d852:	4299      	cmp	r1, r3
 800d854:	d1f3      	bne.n	800d83e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d856:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800d85a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800d85e:	181f      	adds	r7, r3, r0
 800d860:	b23f      	sxth	r7, r7
 800d862:	42ba      	cmp	r2, r7
 800d864:	d105      	bne.n	800d872 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c2>
 800d866:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800d86a:	440b      	add	r3, r1
 800d86c:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d870:	e7dc      	b.n	800d82c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57c>
 800d872:	440a      	add	r2, r1
 800d874:	b212      	sxth	r2, r2
 800d876:	4290      	cmp	r0, r2
 800d878:	d1e1      	bne.n	800d83e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58e>
 800d87a:	e7f6      	b.n	800d86a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ba>
 800d87c:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800d880:	2e07      	cmp	r6, #7
 800d882:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800d886:	d812      	bhi.n	800d8ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d888:	1c75      	adds	r5, r6, #1
 800d88a:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800d88e:	9d01      	ldr	r5, [sp, #4]
 800d890:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800d894:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800d898:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800d89c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800d8a0:	442c      	add	r4, r5
 800d8a2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800d8a6:	8061      	strh	r1, [r4, #2]
 800d8a8:	80a2      	strh	r2, [r4, #4]
 800d8aa:	80e3      	strh	r3, [r4, #6]
 800d8ac:	e580      	b.n	800d3b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d8ae:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800d8b2:	f04f 37ff 	mov.w	r7, #4294967295
 800d8b6:	2500      	movs	r5, #0
 800d8b8:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800d8bc:	3e01      	subs	r6, #1
 800d8be:	445c      	add	r4, fp
 800d8c0:	9305      	str	r3, [sp, #20]
 800d8c2:	1e72      	subs	r2, r6, #1
 800d8c4:	4691      	mov	r9, r2
 800d8c6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d8ca:	9302      	str	r3, [sp, #8]
 800d8cc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800d8d0:	9304      	str	r3, [sp, #16]
 800d8d2:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800d8d6:	f1b9 3fff 	cmp.w	r9, #4294967295
 800d8da:	bf16      	itet	ne
 800d8dc:	9905      	ldrne	r1, [sp, #20]
 800d8de:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800d8e2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800d8e6:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d8ea:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800d8ee:	6818      	ldr	r0, [r3, #0]
 800d8f0:	fb18 f801 	smulbb	r8, r8, r1
 800d8f4:	6859      	ldr	r1, [r3, #4]
 800d8f6:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800d8fa:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d8fe:	4671      	mov	r1, lr
 800d900:	a80c      	add	r0, sp, #48	@ 0x30
 800d902:	9207      	str	r2, [sp, #28]
 800d904:	9306      	str	r3, [sp, #24]
 800d906:	f7ff fb6d 	bl	800cfe4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d90a:	f04f 0c08 	mov.w	ip, #8
 800d90e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800d912:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800d916:	9b04      	ldr	r3, [sp, #16]
 800d918:	9a02      	ldr	r2, [sp, #8]
 800d91a:	fb10 f001 	smulbb	r0, r0, r1
 800d91e:	fb02 8803 	mla	r8, r2, r3, r8
 800d922:	eba0 0108 	sub.w	r1, r0, r8
 800d926:	fb90 f0fc 	sdiv	r0, r0, ip
 800d92a:	4288      	cmp	r0, r1
 800d92c:	dc20      	bgt.n	800d970 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d92e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d932:	4551      	cmp	r1, sl
 800d934:	da03      	bge.n	800d93e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 800d936:	b1d9      	cbz	r1, 800d970 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d938:	468a      	mov	sl, r1
 800d93a:	464f      	mov	r7, r9
 800d93c:	4635      	mov	r5, r6
 800d93e:	f109 39ff 	add.w	r9, r9, #4294967295
 800d942:	f119 0f02 	cmn.w	r9, #2
 800d946:	d1c6      	bne.n	800d8d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>
 800d948:	4616      	mov	r6, r2
 800d94a:	3201      	adds	r2, #1
 800d94c:	f1a4 0408 	sub.w	r4, r4, #8
 800d950:	d1b7      	bne.n	800d8c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 800d952:	9b01      	ldr	r3, [sp, #4]
 800d954:	b2ac      	uxth	r4, r5
 800d956:	00ed      	lsls	r5, r5, #3
 800d958:	1958      	adds	r0, r3, r5
 800d95a:	1c7b      	adds	r3, r7, #1
 800d95c:	d10b      	bne.n	800d976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 800d95e:	4601      	mov	r1, r0
 800d960:	9803      	ldr	r0, [sp, #12]
 800d962:	f7ff fb3f 	bl	800cfe4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d966:	4621      	mov	r1, r4
 800d968:	9801      	ldr	r0, [sp, #4]
 800d96a:	f7ff fc8d 	bl	800d288 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d96e:	e4b5      	b.n	800d2dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d970:	464f      	mov	r7, r9
 800d972:	4635      	mov	r5, r6
 800d974:	e7ed      	b.n	800d952 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 800d976:	9b01      	ldr	r3, [sp, #4]
 800d978:	00ff      	lsls	r7, r7, #3
 800d97a:	19d9      	adds	r1, r3, r7
 800d97c:	f7ff fb32 	bl	800cfe4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d980:	9b03      	ldr	r3, [sp, #12]
 800d982:	445f      	add	r7, fp
 800d984:	cb03      	ldmia	r3!, {r0, r1}
 800d986:	445d      	add	r5, fp
 800d988:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800d98c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800d990:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800d994:	9b03      	ldr	r3, [sp, #12]
 800d996:	6869      	ldr	r1, [r5, #4]
 800d998:	c303      	stmia	r3!, {r0, r1}
 800d99a:	e7e4      	b.n	800d966 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

0800d99c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800d99c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d9a0:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800d9a4:	b09b      	sub	sp, #108	@ 0x6c
 800d9a6:	4604      	mov	r4, r0
 800d9a8:	4630      	mov	r0, r6
 800d9aa:	f7fd f9a4 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d9ae:	4605      	mov	r5, r0
 800d9b0:	b948      	cbnz	r0, 800d9c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800d9b2:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d9b6:	6823      	ldr	r3, [r4, #0]
 800d9b8:	4620      	mov	r0, r4
 800d9ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d9bc:	4798      	blx	r3
 800d9be:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800d9c2:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800d9c6:	4bc6      	ldr	r3, [pc, #792]	@ (800dce0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800d9c8:	681b      	ldr	r3, [r3, #0]
 800d9ca:	2b00      	cmp	r3, #0
 800d9cc:	d03f      	beq.n	800da4e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d9ce:	4dc5      	ldr	r5, [pc, #788]	@ (800dce4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800d9d0:	4628      	mov	r0, r5
 800d9d2:	f7fd f990 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d9d6:	4606      	mov	r6, r0
 800d9d8:	2800      	cmp	r0, #0
 800d9da:	d138      	bne.n	800da4e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d9dc:	4628      	mov	r0, r5
 800d9de:	f7ff f995 	bl	800cd0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d9e2:	6823      	ldr	r3, [r4, #0]
 800d9e4:	6829      	ldr	r1, [r5, #0]
 800d9e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d9e8:	686a      	ldr	r2, [r5, #4]
 800d9ea:	4620      	mov	r0, r4
 800d9ec:	4798      	blx	r3
 800d9ee:	802e      	strh	r6, [r5, #0]
 800d9f0:	806e      	strh	r6, [r5, #2]
 800d9f2:	80ae      	strh	r6, [r5, #4]
 800d9f4:	80ee      	strh	r6, [r5, #6]
 800d9f6:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800d9fa:	4dbb      	ldr	r5, [pc, #748]	@ (800dce8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800d9fc:	4640      	mov	r0, r8
 800d9fe:	f7ff fbeb 	bl	800d1d8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800da02:	882e      	ldrh	r6, [r5, #0]
 800da04:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800da08:	4633      	mov	r3, r6
 800da0a:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800da0e:	42bb      	cmp	r3, r7
 800da10:	d224      	bcs.n	800da5c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800da12:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800da16:	2907      	cmp	r1, #7
 800da18:	d816      	bhi.n	800da48 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800da1a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800da1e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800da22:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800da26:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800da2a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800da2e:	1c4a      	adds	r2, r1, #1
 800da30:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800da34:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800da38:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800da3c:	f8a2 a002 	strh.w	sl, [r2, #2]
 800da40:	f8a2 e004 	strh.w	lr, [r2, #4]
 800da44:	f8a2 c006 	strh.w	ip, [r2, #6]
 800da48:	3301      	adds	r3, #1
 800da4a:	b29b      	uxth	r3, r3
 800da4c:	e7df      	b.n	800da0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800da4e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800da52:	2b00      	cmp	r3, #0
 800da54:	d1cf      	bne.n	800d9f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800da56:	b01b      	add	sp, #108	@ 0x6c
 800da58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da5c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800da60:	42b3      	cmp	r3, r6
 800da62:	d90c      	bls.n	800da7e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800da64:	6822      	ldr	r2, [r4, #0]
 800da66:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800da6a:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800da6c:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800da70:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800da74:	4620      	mov	r0, r4
 800da76:	3601      	adds	r6, #1
 800da78:	47b8      	blx	r7
 800da7a:	b2b6      	uxth	r6, r6
 800da7c:	e7ee      	b.n	800da5c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800da7e:	4a9b      	ldr	r2, [pc, #620]	@ (800dcec <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800da80:	6813      	ldr	r3, [r2, #0]
 800da82:	4691      	mov	r9, r2
 800da84:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800da88:	2b01      	cmp	r3, #1
 800da8a:	f040 80e2 	bne.w	800dc52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 800da8e:	2600      	movs	r6, #0
 800da90:	8829      	ldrh	r1, [r5, #0]
 800da92:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800da96:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800da9a:	33ae      	adds	r3, #174	@ 0xae
 800da9c:	428f      	cmp	r7, r1
 800da9e:	f103 0308 	add.w	r3, r3, #8
 800daa2:	dd0a      	ble.n	800daba <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800daa4:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800daa8:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800daac:	3101      	adds	r1, #1
 800daae:	4402      	add	r2, r0
 800dab0:	b212      	sxth	r2, r2
 800dab2:	4296      	cmp	r6, r2
 800dab4:	bfb8      	it	lt
 800dab6:	4616      	movlt	r6, r2
 800dab8:	e7f0      	b.n	800da9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800daba:	4b8d      	ldr	r3, [pc, #564]	@ (800dcf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800dabc:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 800dcec <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 800dac0:	881b      	ldrh	r3, [r3, #0]
 800dac2:	2b0f      	cmp	r3, #15
 800dac4:	bf88      	it	hi
 800dac6:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800daca:	f04f 0300 	mov.w	r3, #0
 800dace:	bf98      	it	ls
 800dad0:	f04f 0b01 	movls.w	fp, #1
 800dad4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800dad8:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800dadc:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800dae0:	4b82      	ldr	r3, [pc, #520]	@ (800dcec <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800dae2:	4438      	add	r0, r7
 800dae4:	b207      	sxth	r7, r0
 800dae6:	6818      	ldr	r0, [r3, #0]
 800dae8:	42b7      	cmp	r7, r6
 800daea:	6803      	ldr	r3, [r0, #0]
 800daec:	f280 8083 	bge.w	800dbf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800daf0:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800daf4:	4798      	blx	r3
 800daf6:	eb07 030b 	add.w	r3, r7, fp
 800dafa:	4298      	cmp	r0, r3
 800dafc:	da07      	bge.n	800db0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800dafe:	42b0      	cmp	r0, r6
 800db00:	da05      	bge.n	800db0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800db02:	4287      	cmp	r7, r0
 800db04:	dd6c      	ble.n	800dbe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800db06:	2f00      	cmp	r7, #0
 800db08:	dd6a      	ble.n	800dbe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800db0a:	4630      	mov	r0, r6
 800db0c:	e004      	b.n	800db18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 800db0e:	4287      	cmp	r7, r0
 800db10:	dcfb      	bgt.n	800db0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800db12:	42b0      	cmp	r0, r6
 800db14:	bfa8      	it	ge
 800db16:	4630      	movge	r0, r6
 800db18:	2200      	movs	r2, #0
 800db1a:	4b76      	ldr	r3, [pc, #472]	@ (800dcf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800db1c:	1bc0      	subs	r0, r0, r7
 800db1e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800db22:	f8ad 7016 	strh.w	r7, [sp, #22]
 800db26:	882f      	ldrh	r7, [r5, #0]
 800db28:	f8ad 2014 	strh.w	r2, [sp, #20]
 800db2c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800db30:	f8ad 001a 	strh.w	r0, [sp, #26]
 800db34:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800db38:	42bb      	cmp	r3, r7
 800db3a:	d9cd      	bls.n	800dad8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800db3c:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800db40:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800db44:	ab07      	add	r3, sp, #28
 800db46:	6851      	ldr	r1, [r2, #4]
 800db48:	c303      	stmia	r3!, {r0, r1}
 800db4a:	a905      	add	r1, sp, #20
 800db4c:	a807      	add	r0, sp, #28
 800db4e:	f7ff f9b0 	bl	800ceb2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800db52:	2800      	cmp	r0, #0
 800db54:	d04c      	beq.n	800dbf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800db56:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800db5a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800db5e:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800db62:	4686      	mov	lr, r0
 800db64:	4290      	cmp	r0, r2
 800db66:	4450      	add	r0, sl
 800db68:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800db6c:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800db70:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800db74:	bfb8      	it	lt
 800db76:	4696      	movlt	lr, r2
 800db78:	4452      	add	r2, sl
 800db7a:	4299      	cmp	r1, r3
 800db7c:	b280      	uxth	r0, r0
 800db7e:	b292      	uxth	r2, r2
 800db80:	468c      	mov	ip, r1
 800db82:	9302      	str	r3, [sp, #8]
 800db84:	bfb8      	it	lt
 800db86:	469c      	movlt	ip, r3
 800db88:	fa0f fa82 	sxth.w	sl, r2
 800db8c:	b203      	sxth	r3, r0
 800db8e:	4553      	cmp	r3, sl
 800db90:	bfb8      	it	lt
 800db92:	4602      	movlt	r2, r0
 800db94:	eba2 020e 	sub.w	r2, r2, lr
 800db98:	f8ad 2020 	strh.w	r2, [sp, #32]
 800db9c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800dba0:	9b02      	ldr	r3, [sp, #8]
 800dba2:	4411      	add	r1, r2
 800dba4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800dba8:	b289      	uxth	r1, r1
 800dbaa:	4413      	add	r3, r2
 800dbac:	b29b      	uxth	r3, r3
 800dbae:	b208      	sxth	r0, r1
 800dbb0:	b21a      	sxth	r2, r3
 800dbb2:	4290      	cmp	r0, r2
 800dbb4:	bfb8      	it	lt
 800dbb6:	460b      	movlt	r3, r1
 800dbb8:	eba3 030c 	sub.w	r3, r3, ip
 800dbbc:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800dbc0:	f8ad e01c 	strh.w	lr, [sp, #28]
 800dbc4:	f8ad c01e 	strh.w	ip, [sp, #30]
 800dbc8:	a807      	add	r0, sp, #28
 800dbca:	f7fd f894 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dbce:	b920      	cbnz	r0, 800dbda <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800dbd0:	6823      	ldr	r3, [r4, #0]
 800dbd2:	a907      	add	r1, sp, #28
 800dbd4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800dbd6:	4620      	mov	r0, r4
 800dbd8:	4798      	blx	r3
 800dbda:	3701      	adds	r7, #1
 800dbdc:	b2bf      	uxth	r7, r7
 800dbde:	e7a9      	b.n	800db34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800dbe0:	f8d9 0000 	ldr.w	r0, [r9]
 800dbe4:	2101      	movs	r1, #1
 800dbe6:	6803      	ldr	r3, [r0, #0]
 800dbe8:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800dbec:	4798      	blx	r3
 800dbee:	e773      	b.n	800dad8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800dbf0:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800dbf4:	e7e8      	b.n	800dbc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800dbf6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800dbf8:	4798      	blx	r3
 800dbfa:	4b3f      	ldr	r3, [pc, #252]	@ (800dcf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800dbfc:	781b      	ldrb	r3, [r3, #0]
 800dbfe:	2b00      	cmp	r3, #0
 800dc00:	f43f af29 	beq.w	800da56 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800dc04:	2300      	movs	r3, #0
 800dc06:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800dc0a:	882b      	ldrh	r3, [r5, #0]
 800dc0c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800dc10:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800dc14:	42ab      	cmp	r3, r5
 800dc16:	f4bf af1e 	bcs.w	800da56 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800dc1a:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800dc1e:	2907      	cmp	r1, #7
 800dc20:	d814      	bhi.n	800dc4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 800dc22:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800dc26:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800dc2a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800dc2e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800dc32:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800dc36:	1c4a      	adds	r2, r1, #1
 800dc38:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800dc3c:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800dc40:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800dc44:	f8a2 c002 	strh.w	ip, [r2, #2]
 800dc48:	8097      	strh	r7, [r2, #4]
 800dc4a:	80d6      	strh	r6, [r2, #6]
 800dc4c:	3301      	adds	r3, #1
 800dc4e:	b29b      	uxth	r3, r3
 800dc50:	e7e0      	b.n	800dc14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 800dc52:	2b02      	cmp	r3, #2
 800dc54:	f040 8133 	bne.w	800debe <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 800dc58:	4b28      	ldr	r3, [pc, #160]	@ (800dcfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800dc5a:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800dc5e:	781b      	ldrb	r3, [r3, #0]
 800dc60:	2b01      	cmp	r3, #1
 800dc62:	f000 8098 	beq.w	800dd96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dc66:	882a      	ldrh	r2, [r5, #0]
 800dc68:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800dc6c:	3201      	adds	r2, #1
 800dc6e:	b292      	uxth	r2, r2
 800dc70:	2900      	cmp	r1, #0
 800dc72:	d0c2      	beq.n	800dbfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800dc74:	4694      	mov	ip, r2
 800dc76:	f04f 0900 	mov.w	r9, #0
 800dc7a:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800dc7e:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800dc82:	441e      	add	r6, r3
 800dc84:	b236      	sxth	r6, r6
 800dc86:	fa1f f38c 	uxth.w	r3, ip
 800dc8a:	4299      	cmp	r1, r3
 800dc8c:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800dc90:	f240 80bf 	bls.w	800de12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 800dc94:	4427      	add	r7, r4
 800dc96:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800dc9a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800dc9e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800dca2:	4283      	cmp	r3, r0
 800dca4:	f340 80a1 	ble.w	800ddea <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 800dca8:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800dcac:	46e1      	mov	r9, ip
 800dcae:	4406      	add	r6, r0
 800dcb0:	b236      	sxth	r6, r6
 800dcb2:	429e      	cmp	r6, r3
 800dcb4:	bfa8      	it	ge
 800dcb6:	461e      	movge	r6, r3
 800dcb8:	f10c 0c01 	add.w	ip, ip, #1
 800dcbc:	e7e3      	b.n	800dc86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 800dcbe:	d10a      	bne.n	800dcd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800dcc0:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800dcc4:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800dcc8:	4562      	cmp	r2, ip
 800dcca:	bfb8      	it	lt
 800dccc:	4662      	movlt	r2, ip
 800dcce:	4288      	cmp	r0, r1
 800dcd0:	bfb8      	it	lt
 800dcd2:	461f      	movlt	r7, r3
 800dcd4:	e087      	b.n	800dde6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800dcd6:	428a      	cmp	r2, r1
 800dcd8:	bfb8      	it	lt
 800dcda:	460a      	movlt	r2, r1
 800dcdc:	e083      	b.n	800dde6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800dcde:	bf00      	nop
 800dce0:	20082f40 	.word	0x20082f40
 800dce4:	20082f4c 	.word	0x20082f4c
 800dce8:	20000060 	.word	0x20000060
 800dcec:	20082f08 	.word	0x20082f08
 800dcf0:	20082efe 	.word	0x20082efe
 800dcf4:	20082efc 	.word	0x20082efc
 800dcf8:	20082f06 	.word	0x20082f06
 800dcfc:	20082f00 	.word	0x20082f00
 800dd00:	19a1      	adds	r1, r4, r6
 800dd02:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800dd06:	ab07      	add	r3, sp, #28
 800dd08:	6849      	ldr	r1, [r1, #4]
 800dd0a:	c303      	stmia	r3!, {r0, r1}
 800dd0c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800dd10:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dd14:	2b13      	cmp	r3, #19
 800dd16:	bfd8      	it	le
 800dd18:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800dd1c:	440b      	add	r3, r1
 800dd1e:	1a9b      	subs	r3, r3, r2
 800dd20:	a807      	add	r0, sp, #28
 800dd22:	f8ad 3020 	strh.w	r3, [sp, #32]
 800dd26:	f8ad 201c 	strh.w	r2, [sp, #28]
 800dd2a:	f7ff f809 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800dd2e:	a807      	add	r0, sp, #28
 800dd30:	f7fc ffe1 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dd34:	bb78      	cbnz	r0, 800dd96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dd36:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800dd3a:	f8d9 0000 	ldr.w	r0, [r9]
 800dd3e:	f1bc 0f14 	cmp.w	ip, #20
 800dd42:	bfa8      	it	ge
 800dd44:	f04f 0c14 	movge.w	ip, #20
 800dd48:	f8d0 e000 	ldr.w	lr, [r0]
 800dd4c:	fa1f fc8c 	uxth.w	ip, ip
 800dd50:	f8cd c000 	str.w	ip, [sp]
 800dd54:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800dd58:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800dd5c:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800dd60:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dd64:	47d8      	blx	fp
 800dd66:	4683      	mov	fp, r0
 800dd68:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800dd6c:	a807      	add	r0, sp, #28
 800dd6e:	f7fe ffcd 	bl	800cd0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800dd72:	6823      	ldr	r3, [r4, #0]
 800dd74:	4620      	mov	r0, r4
 800dd76:	4426      	add	r6, r4
 800dd78:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800dd7a:	a907      	add	r1, sp, #28
 800dd7c:	4798      	blx	r3
 800dd7e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800dd82:	eba0 000b 	sub.w	r0, r0, fp
 800dd86:	b200      	sxth	r0, r0
 800dd88:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800dd8c:	b918      	cbnz	r0, 800dd96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dd8e:	b2b9      	uxth	r1, r7
 800dd90:	4650      	mov	r0, sl
 800dd92:	f7ff fa79 	bl	800d288 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dd96:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800dd9a:	f1bb 0f00 	cmp.w	fp, #0
 800dd9e:	f43f af2c 	beq.w	800dbfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800dda2:	2700      	movs	r7, #0
 800dda4:	882b      	ldrh	r3, [r5, #0]
 800dda6:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800ddaa:	3301      	adds	r3, #1
 800ddac:	b29b      	uxth	r3, r3
 800ddae:	b299      	uxth	r1, r3
 800ddb0:	458b      	cmp	fp, r1
 800ddb2:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 800ddb6:	d9a3      	bls.n	800dd00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800ddb8:	4426      	add	r6, r4
 800ddba:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800ddbe:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800ddc2:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800ddc6:	4408      	add	r0, r1
 800ddc8:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800ddcc:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800ddd0:	b200      	sxth	r0, r0
 800ddd2:	4461      	add	r1, ip
 800ddd4:	b209      	sxth	r1, r1
 800ddd6:	4288      	cmp	r0, r1
 800ddd8:	f6bf af71 	bge.w	800dcbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 800dddc:	4584      	cmp	ip, r0
 800ddde:	4662      	mov	r2, ip
 800dde0:	461f      	mov	r7, r3
 800dde2:	bfb8      	it	lt
 800dde4:	4602      	movlt	r2, r0
 800dde6:	3301      	adds	r3, #1
 800dde8:	e7e1      	b.n	800ddae <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 800ddea:	d10e      	bne.n	800de0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 800ddec:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800ddf0:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800ddf4:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800ddf8:	4473      	add	r3, lr
 800ddfa:	b21b      	sxth	r3, r3
 800ddfc:	429e      	cmp	r6, r3
 800ddfe:	bfa8      	it	ge
 800de00:	461e      	movge	r6, r3
 800de02:	4287      	cmp	r7, r0
 800de04:	bfb8      	it	lt
 800de06:	46e1      	movlt	r9, ip
 800de08:	e756      	b.n	800dcb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800de0a:	4286      	cmp	r6, r0
 800de0c:	bfa8      	it	ge
 800de0e:	4606      	movge	r6, r0
 800de10:	e752      	b.n	800dcb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800de12:	eb0a 0007 	add.w	r0, sl, r7
 800de16:	4427      	add	r7, r4
 800de18:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800de1c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800de20:	f1bb 0f13 	cmp.w	fp, #19
 800de24:	bfde      	ittt	le
 800de26:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800de2a:	445e      	addle	r6, fp
 800de2c:	b236      	sxthle	r6, r6
 800de2e:	f7fc ff62 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800de32:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800de36:	2800      	cmp	r0, #0
 800de38:	f47f af1a 	bne.w	800dc70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 800de3c:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800de40:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800de44:	1ab6      	subs	r6, r6, r2
 800de46:	2e14      	cmp	r6, #20
 800de48:	bfa8      	it	ge
 800de4a:	2614      	movge	r6, #20
 800de4c:	4828      	ldr	r0, [pc, #160]	@ (800def0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 800de4e:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800de52:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800de56:	6800      	ldr	r0, [r0, #0]
 800de58:	f8ad 101c 	strh.w	r1, [sp, #28]
 800de5c:	f8ad 201e 	strh.w	r2, [sp, #30]
 800de60:	f8ad 3020 	strh.w	r3, [sp, #32]
 800de64:	f8d0 c000 	ldr.w	ip, [r0]
 800de68:	b2b6      	uxth	r6, r6
 800de6a:	fa1f fb8b 	uxth.w	fp, fp
 800de6e:	455e      	cmp	r6, fp
 800de70:	bf94      	ite	ls
 800de72:	9600      	strls	r6, [sp, #0]
 800de74:	f8cd b000 	strhi.w	fp, [sp]
 800de78:	b292      	uxth	r2, r2
 800de7a:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800de7e:	b29b      	uxth	r3, r3
 800de80:	b289      	uxth	r1, r1
 800de82:	47b0      	blx	r6
 800de84:	6823      	ldr	r3, [r4, #0]
 800de86:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800de8a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800de8c:	a907      	add	r1, sp, #28
 800de8e:	4620      	mov	r0, r4
 800de90:	4798      	blx	r3
 800de92:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800de96:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800de9a:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800de9e:	1a5b      	subs	r3, r3, r1
 800dea0:	440a      	add	r2, r1
 800dea2:	b21b      	sxth	r3, r3
 800dea4:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800dea8:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800deac:	2b00      	cmp	r3, #0
 800deae:	f47f aeda 	bne.w	800dc66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800deb2:	fa1f f189 	uxth.w	r1, r9
 800deb6:	4650      	mov	r0, sl
 800deb8:	f7ff f9e6 	bl	800d288 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800debc:	e6d3      	b.n	800dc66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800debe:	882e      	ldrh	r6, [r5, #0]
 800dec0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800dec4:	42b3      	cmp	r3, r6
 800dec6:	f67f ae98 	bls.w	800dbfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800deca:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800dece:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800ded2:	ab07      	add	r3, sp, #28
 800ded4:	6851      	ldr	r1, [r2, #4]
 800ded6:	c303      	stmia	r3!, {r0, r1}
 800ded8:	a807      	add	r0, sp, #28
 800deda:	f7fc ff0c 	bl	800acf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dede:	b920      	cbnz	r0, 800deea <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 800dee0:	6823      	ldr	r3, [r4, #0]
 800dee2:	a907      	add	r1, sp, #28
 800dee4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800dee6:	4620      	mov	r0, r4
 800dee8:	4798      	blx	r3
 800deea:	3601      	adds	r6, #1
 800deec:	b2b6      	uxth	r6, r6
 800deee:	e7e7      	b.n	800dec0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 800def0:	20082f08 	.word	0x20082f08

0800def4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800def4:	2200      	movs	r2, #0
 800def6:	4b03      	ldr	r3, [pc, #12]	@ (800df04 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800def8:	801a      	strh	r2, [r3, #0]
 800defa:	805a      	strh	r2, [r3, #2]
 800defc:	809a      	strh	r2, [r3, #4]
 800defe:	80da      	strh	r2, [r3, #6]
 800df00:	4770      	bx	lr
 800df02:	bf00      	nop
 800df04:	20082f4c 	.word	0x20082f4c

0800df08 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800df08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df0c:	4606      	mov	r6, r0
 800df0e:	b09d      	sub	sp, #116	@ 0x74
 800df10:	a803      	add	r0, sp, #12
 800df12:	4614      	mov	r4, r2
 800df14:	468a      	mov	sl, r1
 800df16:	461d      	mov	r5, r3
 800df18:	f001 f8a2 	bl	800f060 <_ZN8touchgfx12TextProviderC1Ev>
 800df1c:	6833      	ldr	r3, [r6, #0]
 800df1e:	4630      	mov	r0, r6
 800df20:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800df22:	4798      	blx	r3
 800df24:	6833      	ldr	r3, [r6, #0]
 800df26:	4607      	mov	r7, r0
 800df28:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800df2a:	4630      	mov	r0, r6
 800df2c:	4798      	blx	r3
 800df2e:	462a      	mov	r2, r5
 800df30:	2500      	movs	r5, #0
 800df32:	9000      	str	r0, [sp, #0]
 800df34:	4621      	mov	r1, r4
 800df36:	463b      	mov	r3, r7
 800df38:	a803      	add	r0, sp, #12
 800df3a:	f001 f8e4 	bl	800f106 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800df3e:	462c      	mov	r4, r5
 800df40:	46a9      	mov	r9, r5
 800df42:	46a8      	mov	r8, r5
 800df44:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800df48:	2300      	movs	r3, #0
 800df4a:	9302      	str	r3, [sp, #8]
 800df4c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800df50:	429c      	cmp	r4, r3
 800df52:	d002      	beq.n	800df5a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800df54:	455c      	cmp	r4, fp
 800df56:	bf18      	it	ne
 800df58:	4625      	movne	r5, r4
 800df5a:	ab02      	add	r3, sp, #8
 800df5c:	4632      	mov	r2, r6
 800df5e:	4651      	mov	r1, sl
 800df60:	a803      	add	r0, sp, #12
 800df62:	f001 fbbf 	bl	800f6e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800df66:	4604      	mov	r4, r0
 800df68:	b108      	cbz	r0, 800df6e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800df6a:	280a      	cmp	r0, #10
 800df6c:	d10a      	bne.n	800df84 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800df6e:	45c1      	cmp	r9, r8
 800df70:	bf38      	it	cc
 800df72:	46c1      	movcc	r9, r8
 800df74:	f04f 0800 	mov.w	r8, #0
 800df78:	2c00      	cmp	r4, #0
 800df7a:	d1e5      	bne.n	800df48 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800df7c:	4648      	mov	r0, r9
 800df7e:	b01d      	add	sp, #116	@ 0x74
 800df80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df84:	9a02      	ldr	r2, [sp, #8]
 800df86:	2a00      	cmp	r2, #0
 800df88:	d0de      	beq.n	800df48 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800df8a:	7b57      	ldrb	r7, [r2, #13]
 800df8c:	6833      	ldr	r3, [r6, #0]
 800df8e:	007f      	lsls	r7, r7, #1
 800df90:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 800df94:	7a97      	ldrb	r7, [r2, #10]
 800df96:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800df98:	4307      	orrs	r7, r0
 800df9a:	4629      	mov	r1, r5
 800df9c:	4630      	mov	r0, r6
 800df9e:	8894      	ldrh	r4, [r2, #4]
 800dfa0:	4798      	blx	r3
 800dfa2:	4438      	add	r0, r7
 800dfa4:	4480      	add	r8, r0
 800dfa6:	fa1f f888 	uxth.w	r8, r8
 800dfaa:	e7e5      	b.n	800df78 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800dfac <_ZNK8touchgfx4Font12getCharWidthEt>:
 800dfac:	b508      	push	{r3, lr}
 800dfae:	6803      	ldr	r3, [r0, #0]
 800dfb0:	68db      	ldr	r3, [r3, #12]
 800dfb2:	4798      	blx	r3
 800dfb4:	b128      	cbz	r0, 800dfc2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800dfb6:	7b43      	ldrb	r3, [r0, #13]
 800dfb8:	7a80      	ldrb	r0, [r0, #10]
 800dfba:	005b      	lsls	r3, r3, #1
 800dfbc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dfc0:	4318      	orrs	r0, r3
 800dfc2:	bd08      	pop	{r3, pc}

0800dfc4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800dfc4:	b40e      	push	{r1, r2, r3}
 800dfc6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfc8:	4605      	mov	r5, r0
 800dfca:	b09e      	sub	sp, #120	@ 0x78
 800dfcc:	ab23      	add	r3, sp, #140	@ 0x8c
 800dfce:	f853 4b04 	ldr.w	r4, [r3], #4
 800dfd2:	a805      	add	r0, sp, #20
 800dfd4:	9303      	str	r3, [sp, #12]
 800dfd6:	f001 f843 	bl	800f060 <_ZN8touchgfx12TextProviderC1Ev>
 800dfda:	682b      	ldr	r3, [r5, #0]
 800dfdc:	4628      	mov	r0, r5
 800dfde:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800dfe0:	4798      	blx	r3
 800dfe2:	682b      	ldr	r3, [r5, #0]
 800dfe4:	4606      	mov	r6, r0
 800dfe6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800dfe8:	4628      	mov	r0, r5
 800dfea:	4798      	blx	r3
 800dfec:	4621      	mov	r1, r4
 800dfee:	2400      	movs	r4, #0
 800dff0:	4633      	mov	r3, r6
 800dff2:	9000      	str	r0, [sp, #0]
 800dff4:	9a03      	ldr	r2, [sp, #12]
 800dff6:	ae1e      	add	r6, sp, #120	@ 0x78
 800dff8:	a805      	add	r0, sp, #20
 800dffa:	f001 f884 	bl	800f106 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dffe:	f846 4d68 	str.w	r4, [r6, #-104]!
 800e002:	4633      	mov	r3, r6
 800e004:	462a      	mov	r2, r5
 800e006:	4621      	mov	r1, r4
 800e008:	a805      	add	r0, sp, #20
 800e00a:	f001 fb6b 	bl	800f6e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e00e:	b1f0      	cbz	r0, 800e04e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800e010:	280a      	cmp	r0, #10
 800e012:	d018      	beq.n	800e046 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800e014:	9f04      	ldr	r7, [sp, #16]
 800e016:	b1b7      	cbz	r7, 800e046 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800e018:	7b78      	ldrb	r0, [r7, #13]
 800e01a:	7a3b      	ldrb	r3, [r7, #8]
 800e01c:	00c1      	lsls	r1, r0, #3
 800e01e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800e022:	4319      	orrs	r1, r3
 800e024:	0643      	lsls	r3, r0, #25
 800e026:	bf44      	itt	mi
 800e028:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 800e02c:	b219      	sxthmi	r1, r3
 800e02e:	0100      	lsls	r0, r0, #4
 800e030:	79fb      	ldrb	r3, [r7, #7]
 800e032:	88ea      	ldrh	r2, [r5, #6]
 800e034:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800e038:	4303      	orrs	r3, r0
 800e03a:	4413      	add	r3, r2
 800e03c:	1a5b      	subs	r3, r3, r1
 800e03e:	b21b      	sxth	r3, r3
 800e040:	429c      	cmp	r4, r3
 800e042:	bfb8      	it	lt
 800e044:	461c      	movlt	r4, r3
 800e046:	4633      	mov	r3, r6
 800e048:	462a      	mov	r2, r5
 800e04a:	2100      	movs	r1, #0
 800e04c:	e7dc      	b.n	800e008 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800e04e:	b2a0      	uxth	r0, r4
 800e050:	b01e      	add	sp, #120	@ 0x78
 800e052:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e056:	b003      	add	sp, #12
 800e058:	4770      	bx	lr

0800e05a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800e05a:	7a43      	ldrb	r3, [r0, #9]
 800e05c:	8880      	ldrh	r0, [r0, #4]
 800e05e:	4418      	add	r0, r3
 800e060:	b280      	uxth	r0, r0
 800e062:	4770      	bx	lr

0800e064 <_ZNK8touchgfx4Font13getFontHeightEv>:
 800e064:	6803      	ldr	r3, [r0, #0]
 800e066:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e068:	4718      	bx	r3

0800e06a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800e06a:	b40e      	push	{r1, r2, r3}
 800e06c:	b570      	push	{r4, r5, r6, lr}
 800e06e:	4604      	mov	r4, r0
 800e070:	b09d      	sub	sp, #116	@ 0x74
 800e072:	ab21      	add	r3, sp, #132	@ 0x84
 800e074:	f853 5b04 	ldr.w	r5, [r3], #4
 800e078:	a803      	add	r0, sp, #12
 800e07a:	9302      	str	r3, [sp, #8]
 800e07c:	f000 fff0 	bl	800f060 <_ZN8touchgfx12TextProviderC1Ev>
 800e080:	6823      	ldr	r3, [r4, #0]
 800e082:	4620      	mov	r0, r4
 800e084:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e086:	4798      	blx	r3
 800e088:	6823      	ldr	r3, [r4, #0]
 800e08a:	4606      	mov	r6, r0
 800e08c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e08e:	4620      	mov	r0, r4
 800e090:	4798      	blx	r3
 800e092:	4633      	mov	r3, r6
 800e094:	9000      	str	r0, [sp, #0]
 800e096:	9a02      	ldr	r2, [sp, #8]
 800e098:	4629      	mov	r1, r5
 800e09a:	a803      	add	r0, sp, #12
 800e09c:	f001 f833 	bl	800f106 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e0a0:	a803      	add	r0, sp, #12
 800e0a2:	f001 fba1 	bl	800f7e8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e0a6:	2401      	movs	r4, #1
 800e0a8:	b2a3      	uxth	r3, r4
 800e0aa:	b140      	cbz	r0, 800e0be <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800e0ac:	280a      	cmp	r0, #10
 800e0ae:	bf08      	it	eq
 800e0b0:	3301      	addeq	r3, #1
 800e0b2:	a803      	add	r0, sp, #12
 800e0b4:	bf08      	it	eq
 800e0b6:	b21c      	sxtheq	r4, r3
 800e0b8:	f001 fb96 	bl	800f7e8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e0bc:	e7f4      	b.n	800e0a8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800e0be:	4618      	mov	r0, r3
 800e0c0:	b01d      	add	sp, #116	@ 0x74
 800e0c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e0c6:	b003      	add	sp, #12
 800e0c8:	4770      	bx	lr

0800e0ca <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800e0ca:	b40e      	push	{r1, r2, r3}
 800e0cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e0ce:	4604      	mov	r4, r0
 800e0d0:	b09e      	sub	sp, #120	@ 0x78
 800e0d2:	ab23      	add	r3, sp, #140	@ 0x8c
 800e0d4:	f853 5b04 	ldr.w	r5, [r3], #4
 800e0d8:	a805      	add	r0, sp, #20
 800e0da:	9303      	str	r3, [sp, #12]
 800e0dc:	f000 ffc0 	bl	800f060 <_ZN8touchgfx12TextProviderC1Ev>
 800e0e0:	6823      	ldr	r3, [r4, #0]
 800e0e2:	4620      	mov	r0, r4
 800e0e4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e0e6:	4798      	blx	r3
 800e0e8:	6823      	ldr	r3, [r4, #0]
 800e0ea:	4606      	mov	r6, r0
 800e0ec:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e0ee:	4620      	mov	r0, r4
 800e0f0:	4798      	blx	r3
 800e0f2:	4633      	mov	r3, r6
 800e0f4:	4629      	mov	r1, r5
 800e0f6:	9000      	str	r0, [sp, #0]
 800e0f8:	9a03      	ldr	r2, [sp, #12]
 800e0fa:	a805      	add	r0, sp, #20
 800e0fc:	f001 f803 	bl	800f106 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e100:	2100      	movs	r1, #0
 800e102:	ad1e      	add	r5, sp, #120	@ 0x78
 800e104:	f845 1d68 	str.w	r1, [r5, #-104]!
 800e108:	462b      	mov	r3, r5
 800e10a:	4622      	mov	r2, r4
 800e10c:	a805      	add	r0, sp, #20
 800e10e:	f001 fae9 	bl	800f6e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e112:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 800e116:	b1d8      	cbz	r0, 800e150 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800e118:	280a      	cmp	r0, #10
 800e11a:	d012      	beq.n	800e142 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800e11c:	9804      	ldr	r0, [sp, #16]
 800e11e:	b180      	cbz	r0, 800e142 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800e120:	7b47      	ldrb	r7, [r0, #13]
 800e122:	88e2      	ldrh	r2, [r4, #6]
 800e124:	00fb      	lsls	r3, r7, #3
 800e126:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800e12a:	7a03      	ldrb	r3, [r0, #8]
 800e12c:	430b      	orrs	r3, r1
 800e12e:	0679      	lsls	r1, r7, #25
 800e130:	bf44      	itt	mi
 800e132:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e136:	b21b      	sxthmi	r3, r3
 800e138:	1ad3      	subs	r3, r2, r3
 800e13a:	b21b      	sxth	r3, r3
 800e13c:	429e      	cmp	r6, r3
 800e13e:	bfa8      	it	ge
 800e140:	461e      	movge	r6, r3
 800e142:	462b      	mov	r3, r5
 800e144:	4622      	mov	r2, r4
 800e146:	2100      	movs	r1, #0
 800e148:	a805      	add	r0, sp, #20
 800e14a:	f001 facb 	bl	800f6e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e14e:	e7e2      	b.n	800e116 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800e150:	4630      	mov	r0, r6
 800e152:	b01e      	add	sp, #120	@ 0x78
 800e154:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e158:	b003      	add	sp, #12
 800e15a:	4770      	bx	lr

0800e15c <_ZNK8touchgfx8Drawable10invalidateEv>:
 800e15c:	b513      	push	{r0, r1, r4, lr}
 800e15e:	2400      	movs	r4, #0
 800e160:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e164:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e168:	6803      	ldr	r3, [r0, #0]
 800e16a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e16e:	9400      	str	r4, [sp, #0]
 800e170:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e174:	691b      	ldr	r3, [r3, #16]
 800e176:	4669      	mov	r1, sp
 800e178:	4798      	blx	r3
 800e17a:	b002      	add	sp, #8
 800e17c:	bd10      	pop	{r4, pc}

0800e17e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800e17e:	b538      	push	{r3, r4, r5, lr}
 800e180:	460c      	mov	r4, r1
 800e182:	4605      	mov	r5, r0
 800e184:	680b      	ldr	r3, [r1, #0]
 800e186:	68db      	ldr	r3, [r3, #12]
 800e188:	4798      	blx	r3
 800e18a:	6823      	ldr	r3, [r4, #0]
 800e18c:	4620      	mov	r0, r4
 800e18e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e190:	4629      	mov	r1, r5
 800e192:	4798      	blx	r3
 800e194:	4628      	mov	r0, r5
 800e196:	bd38      	pop	{r3, r4, r5, pc}

0800e198 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800e198:	b410      	push	{r4}
 800e19a:	880a      	ldrh	r2, [r1, #0]
 800e19c:	8884      	ldrh	r4, [r0, #4]
 800e19e:	4422      	add	r2, r4
 800e1a0:	800a      	strh	r2, [r1, #0]
 800e1a2:	88c4      	ldrh	r4, [r0, #6]
 800e1a4:	884a      	ldrh	r2, [r1, #2]
 800e1a6:	4422      	add	r2, r4
 800e1a8:	804a      	strh	r2, [r1, #2]
 800e1aa:	6940      	ldr	r0, [r0, #20]
 800e1ac:	b120      	cbz	r0, 800e1b8 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800e1ae:	6803      	ldr	r3, [r0, #0]
 800e1b0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e1b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e1b6:	4718      	bx	r3
 800e1b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e1bc:	4770      	bx	lr

0800e1be <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800e1be:	b570      	push	{r4, r5, r6, lr}
 800e1c0:	460c      	mov	r4, r1
 800e1c2:	8882      	ldrh	r2, [r0, #4]
 800e1c4:	880b      	ldrh	r3, [r1, #0]
 800e1c6:	4605      	mov	r5, r0
 800e1c8:	4413      	add	r3, r2
 800e1ca:	800b      	strh	r3, [r1, #0]
 800e1cc:	88c2      	ldrh	r2, [r0, #6]
 800e1ce:	884b      	ldrh	r3, [r1, #2]
 800e1d0:	4413      	add	r3, r2
 800e1d2:	804b      	strh	r3, [r1, #2]
 800e1d4:	1d01      	adds	r1, r0, #4
 800e1d6:	4620      	mov	r0, r4
 800e1d8:	f7fc fd4a 	bl	800ac70 <_ZN8touchgfx4RectaNERKS0_>
 800e1dc:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e1e0:	2b00      	cmp	r3, #0
 800e1e2:	dd0b      	ble.n	800e1fc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e1e4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e1e8:	2b00      	cmp	r3, #0
 800e1ea:	dd07      	ble.n	800e1fc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e1ec:	6968      	ldr	r0, [r5, #20]
 800e1ee:	b128      	cbz	r0, 800e1fc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e1f0:	6803      	ldr	r3, [r0, #0]
 800e1f2:	4621      	mov	r1, r4
 800e1f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e1f8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e1fa:	4718      	bx	r3
 800e1fc:	bd70      	pop	{r4, r5, r6, pc}
	...

0800e200 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800e200:	b570      	push	{r4, r5, r6, lr}
 800e202:	460c      	mov	r4, r1
 800e204:	8882      	ldrh	r2, [r0, #4]
 800e206:	880b      	ldrh	r3, [r1, #0]
 800e208:	4605      	mov	r5, r0
 800e20a:	4413      	add	r3, r2
 800e20c:	800b      	strh	r3, [r1, #0]
 800e20e:	88c2      	ldrh	r2, [r0, #6]
 800e210:	884b      	ldrh	r3, [r1, #2]
 800e212:	4413      	add	r3, r2
 800e214:	804b      	strh	r3, [r1, #2]
 800e216:	1d01      	adds	r1, r0, #4
 800e218:	4620      	mov	r0, r4
 800e21a:	f7fc fd29 	bl	800ac70 <_ZN8touchgfx4RectaNERKS0_>
 800e21e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e222:	2b00      	cmp	r3, #0
 800e224:	dd19      	ble.n	800e25a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e226:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e22a:	2b00      	cmp	r3, #0
 800e22c:	dd15      	ble.n	800e25a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e22e:	6968      	ldr	r0, [r5, #20]
 800e230:	b128      	cbz	r0, 800e23e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800e232:	6803      	ldr	r3, [r0, #0]
 800e234:	4621      	mov	r1, r4
 800e236:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e23a:	691b      	ldr	r3, [r3, #16]
 800e23c:	4718      	bx	r3
 800e23e:	4b07      	ldr	r3, [pc, #28]	@ (800e25c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800e240:	681b      	ldr	r3, [r3, #0]
 800e242:	3304      	adds	r3, #4
 800e244:	429d      	cmp	r5, r3
 800e246:	d108      	bne.n	800e25a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e248:	f7fe ff12 	bl	800d070 <_ZN8touchgfx11Application11getInstanceEv>
 800e24c:	6803      	ldr	r3, [r0, #0]
 800e24e:	6821      	ldr	r1, [r4, #0]
 800e250:	6862      	ldr	r2, [r4, #4]
 800e252:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e254:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e258:	4718      	bx	r3
 800e25a:	bd70      	pop	{r4, r5, r6, pc}
 800e25c:	20082f44 	.word	0x20082f44

0800e260 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800e260:	b570      	push	{r4, r5, r6, lr}
 800e262:	4604      	mov	r4, r0
 800e264:	4616      	mov	r6, r2
 800e266:	460d      	mov	r5, r1
 800e268:	b901      	cbnz	r1, 800e26c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800e26a:	b192      	cbz	r2, 800e292 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800e26c:	6823      	ldr	r3, [r4, #0]
 800e26e:	4620      	mov	r0, r4
 800e270:	699b      	ldr	r3, [r3, #24]
 800e272:	4798      	blx	r3
 800e274:	88e2      	ldrh	r2, [r4, #6]
 800e276:	88a1      	ldrh	r1, [r4, #4]
 800e278:	4432      	add	r2, r6
 800e27a:	4429      	add	r1, r5
 800e27c:	4620      	mov	r0, r4
 800e27e:	b212      	sxth	r2, r2
 800e280:	b209      	sxth	r1, r1
 800e282:	f7f5 f824 	bl	80032ce <_ZN8touchgfx8Drawable5setXYEss>
 800e286:	6823      	ldr	r3, [r4, #0]
 800e288:	4620      	mov	r0, r4
 800e28a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e28e:	699b      	ldr	r3, [r3, #24]
 800e290:	4718      	bx	r3
 800e292:	bd70      	pop	{r4, r5, r6, pc}

0800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800e294:	b510      	push	{r4, lr}
 800e296:	2300      	movs	r3, #0
 800e298:	4604      	mov	r4, r0
 800e29a:	4608      	mov	r0, r1
 800e29c:	8023      	strh	r3, [r4, #0]
 800e29e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e2a2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800e2a6:	8063      	strh	r3, [r4, #2]
 800e2a8:	6803      	ldr	r3, [r0, #0]
 800e2aa:	80a1      	strh	r1, [r4, #4]
 800e2ac:	80e2      	strh	r2, [r4, #6]
 800e2ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e2b0:	4621      	mov	r1, r4
 800e2b2:	4798      	blx	r3
 800e2b4:	4620      	mov	r0, r4
 800e2b6:	bd10      	pop	{r4, pc}

0800e2b8 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 800e2b8:	4770      	bx	lr

0800e2ba <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 800e2ba:	b510      	push	{r4, lr}
 800e2bc:	4604      	mov	r4, r0
 800e2be:	211c      	movs	r1, #28
 800e2c0:	f022 ff41 	bl	8031146 <_ZdlPvj>
 800e2c4:	4620      	mov	r0, r4
 800e2c6:	bd10      	pop	{r4, pc}

0800e2c8 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 800e2c8:	4a04      	ldr	r2, [pc, #16]	@ (800e2dc <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 800e2ca:	6002      	str	r2, [r0, #0]
 800e2cc:	2200      	movs	r2, #0
 800e2ce:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800e2d2:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800e2d6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e2da:	4770      	bx	lr
 800e2dc:	08035bc0 	.word	0x08035bc0

0800e2e0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 800e2e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2e4:	4604      	mov	r4, r0
 800e2e6:	4696      	mov	lr, r2
 800e2e8:	8b22      	ldrh	r2, [r4, #24]
 800e2ea:	b087      	sub	sp, #28
 800e2ec:	9105      	str	r1, [sp, #20]
 800e2ee:	1c51      	adds	r1, r2, #1
 800e2f0:	6880      	ldr	r0, [r0, #8]
 800e2f2:	8321      	strh	r1, [r4, #24]
 800e2f4:	2101      	movs	r1, #1
 800e2f6:	5481      	strb	r1, [r0, r2]
 800e2f8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e2fc:	8b60      	ldrh	r0, [r4, #26]
 800e2fe:	ee06 2a90 	vmov	s13, r2
 800e302:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800e306:	68e2      	ldr	r2, [r4, #12]
 800e308:	1845      	adds	r5, r0, r1
 800e30a:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 800e30e:	8365      	strh	r5, [r4, #26]
 800e310:	edc2 6a00 	vstr	s13, [r2]
 800e314:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e318:	8b60      	ldrh	r0, [r4, #26]
 800e31a:	ee07 2a10 	vmov	s14, r2
 800e31e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e322:	68e2      	ldr	r2, [r4, #12]
 800e324:	1845      	adds	r5, r0, r1
 800e326:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 800e32a:	8365      	strh	r5, [r4, #26]
 800e32c:	ed82 7a00 	vstr	s14, [r2]
 800e330:	f8be 2000 	ldrh.w	r2, [lr]
 800e334:	1d18      	adds	r0, r3, #4
 800e336:	9203      	str	r2, [sp, #12]
 800e338:	2200      	movs	r2, #0
 800e33a:	4689      	mov	r9, r1
 800e33c:	4613      	mov	r3, r2
 800e33e:	4694      	mov	ip, r2
 800e340:	460d      	mov	r5, r1
 800e342:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800e346:	9201      	str	r2, [sp, #4]
 800e348:	9202      	str	r2, [sp, #8]
 800e34a:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 800e34e:	9e05      	ldr	r6, [sp, #20]
 800e350:	f8d4 a008 	ldr.w	sl, [r4, #8]
 800e354:	f108 0701 	add.w	r7, r8, #1
 800e358:	428e      	cmp	r6, r1
 800e35a:	b2bf      	uxth	r7, r7
 800e35c:	eb0a 0b08 	add.w	fp, sl, r8
 800e360:	f340 80b6 	ble.w	800e4d0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
 800e364:	9b03      	ldr	r3, [sp, #12]
 800e366:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e36a:	fa43 fb05 	asr.w	fp, r3, r5
 800e36e:	f00b 0b01 	and.w	fp, fp, #1
 800e372:	fa5f f38b 	uxtb.w	r3, fp
 800e376:	9304      	str	r3, [sp, #16]
 800e378:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e37c:	f1bb 0f00 	cmp.w	fp, #0
 800e380:	d057      	beq.n	800e432 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
 800e382:	ee07 ca90 	vmov	s15, ip
 800e386:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 800e38a:	ee07 3a90 	vmov	s15, r3
 800e38e:	8327      	strh	r7, [r4, #24]
 800e390:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e394:	f1b9 0f00 	cmp.w	r9, #0
 800e398:	d028      	beq.n	800e3ec <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
 800e39a:	f04f 0602 	mov.w	r6, #2
 800e39e:	f80a 6008 	strb.w	r6, [sl, r8]
 800e3a2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e3a6:	68e7      	ldr	r7, [r4, #12]
 800e3a8:	f108 0901 	add.w	r9, r8, #1
 800e3ac:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e3b0:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e3b4:	edc7 5a00 	vstr	s11, [r7]
 800e3b8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e3bc:	68e7      	ldr	r7, [r4, #12]
 800e3be:	f108 0901 	add.w	r9, r8, #1
 800e3c2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e3c6:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e3ca:	edc7 7a00 	vstr	s15, [r7]
 800e3ce:	3501      	adds	r5, #1
 800e3d0:	2d10      	cmp	r5, #16
 800e3d2:	d106      	bne.n	800e3e2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 800e3d4:	9d02      	ldr	r5, [sp, #8]
 800e3d6:	3501      	adds	r5, #1
 800e3d8:	9502      	str	r5, [sp, #8]
 800e3da:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
 800e3de:	9503      	str	r5, [sp, #12]
 800e3e0:	2500      	movs	r5, #0
 800e3e2:	3101      	adds	r1, #1
 800e3e4:	3004      	adds	r0, #4
 800e3e6:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800e3ea:	e7ae      	b.n	800e34a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
 800e3ec:	ed9d 5a01 	vldr	s10, [sp, #4]
 800e3f0:	f04f 0605 	mov.w	r6, #5
 800e3f4:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 800e3f8:	f80a 6008 	strb.w	r6, [sl, r8]
 800e3fc:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e400:	68e7      	ldr	r7, [r4, #12]
 800e402:	f108 0901 	add.w	r9, r8, #1
 800e406:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e40a:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e40e:	ed87 5a00 	vstr	s10, [r7]
 800e412:	ee05 2a10 	vmov	s10, r2
 800e416:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 800e41a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e41e:	68e7      	ldr	r7, [r4, #12]
 800e420:	f108 0901 	add.w	r9, r8, #1
 800e424:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e428:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e42c:	ed87 5a00 	vstr	s10, [r7]
 800e430:	e7b7      	b.n	800e3a2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
 800e432:	f1b9 0f00 	cmp.w	r9, #0
 800e436:	d147      	bne.n	800e4c8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
 800e438:	eddd 7a01 	vldr	s15, [sp, #4]
 800e43c:	f04f 0605 	mov.w	r6, #5
 800e440:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e444:	8327      	strh	r7, [r4, #24]
 800e446:	f80a 6008 	strb.w	r6, [sl, r8]
 800e44a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e44e:	68e7      	ldr	r7, [r4, #12]
 800e450:	f108 0901 	add.w	r9, r8, #1
 800e454:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e458:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e45c:	edc7 7a00 	vstr	s15, [r7]
 800e460:	ee07 2a90 	vmov	s15, r2
 800e464:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e468:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e46c:	68e7      	ldr	r7, [r4, #12]
 800e46e:	9e01      	ldr	r6, [sp, #4]
 800e470:	f108 0901 	add.w	r9, r8, #1
 800e474:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e478:	4466      	add	r6, ip
 800e47a:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e47e:	edc7 7a00 	vstr	s15, [r7]
 800e482:	ee07 6a90 	vmov	s15, r6
 800e486:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e48a:	ee67 7a86 	vmul.f32	s15, s15, s12
 800e48e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e492:	68e7      	ldr	r7, [r4, #12]
 800e494:	f108 0901 	add.w	r9, r8, #1
 800e498:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e49c:	441a      	add	r2, r3
 800e49e:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e4a2:	edc7 7a00 	vstr	s15, [r7]
 800e4a6:	ee07 2a90 	vmov	s15, r2
 800e4aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e4ae:	ee67 7a86 	vmul.f32	s15, s15, s12
 800e4b2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800e4b6:	68e7      	ldr	r7, [r4, #12]
 800e4b8:	f108 0901 	add.w	r9, r8, #1
 800e4bc:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800e4c0:	f8a4 901a 	strh.w	r9, [r4, #26]
 800e4c4:	edc7 7a00 	vstr	s15, [r7]
 800e4c8:	461a      	mov	r2, r3
 800e4ca:	f8cd c004 	str.w	ip, [sp, #4]
 800e4ce:	e77e      	b.n	800e3ce <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
 800e4d0:	f1b9 0f00 	cmp.w	r9, #0
 800e4d4:	d028      	beq.n	800e528 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 800e4d6:	ee07 ca90 	vmov	s15, ip
 800e4da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e4de:	eef4 6a67 	vcmp.f32	s13, s15
 800e4e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4e6:	d108      	bne.n	800e4fa <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
 800e4e8:	ee07 3a90 	vmov	s15, r3
 800e4ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e4f0:	eeb4 7a67 	vcmp.f32	s14, s15
 800e4f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4f8:	d016      	beq.n	800e528 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 800e4fa:	2302      	movs	r3, #2
 800e4fc:	8327      	strh	r7, [r4, #24]
 800e4fe:	f88b 3000 	strb.w	r3, [fp]
 800e502:	8b62      	ldrh	r2, [r4, #26]
 800e504:	68e3      	ldr	r3, [r4, #12]
 800e506:	1c51      	adds	r1, r2, #1
 800e508:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800e50c:	8361      	strh	r1, [r4, #26]
 800e50e:	edc3 6a00 	vstr	s13, [r3]
 800e512:	8b62      	ldrh	r2, [r4, #26]
 800e514:	68e3      	ldr	r3, [r4, #12]
 800e516:	1c51      	adds	r1, r2, #1
 800e518:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800e51c:	8361      	strh	r1, [r4, #26]
 800e51e:	ed83 7a00 	vstr	s14, [r3]
 800e522:	b007      	add	sp, #28
 800e524:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e528:	eddd 7a01 	vldr	s15, [sp, #4]
 800e52c:	2305      	movs	r3, #5
 800e52e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e532:	8327      	strh	r7, [r4, #24]
 800e534:	f88b 3000 	strb.w	r3, [fp]
 800e538:	8b61      	ldrh	r1, [r4, #26]
 800e53a:	68e3      	ldr	r3, [r4, #12]
 800e53c:	1c4d      	adds	r5, r1, #1
 800e53e:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800e542:	8365      	strh	r5, [r4, #26]
 800e544:	edc3 7a00 	vstr	s15, [r3]
 800e548:	ee07 2a90 	vmov	s15, r2
 800e54c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e550:	8b61      	ldrh	r1, [r4, #26]
 800e552:	68e3      	ldr	r3, [r4, #12]
 800e554:	1c4d      	adds	r5, r1, #1
 800e556:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800e55a:	8365      	strh	r5, [r4, #26]
 800e55c:	edc3 7a00 	vstr	s15, [r3]
 800e560:	e7cf      	b.n	800e502 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

0800e564 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 800e564:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e568:	b08e      	sub	sp, #56	@ 0x38
 800e56a:	4604      	mov	r4, r0
 800e56c:	4688      	mov	r8, r1
 800e56e:	4615      	mov	r5, r2
 800e570:	4699      	mov	r9, r3
 800e572:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 800e574:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 800e578:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 800e57a:	f7f4 fb53 	bl	8002c24 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 800e57e:	6060      	str	r0, [r4, #4]
 800e580:	f1b9 0f00 	cmp.w	r9, #0
 800e584:	f000 80e8 	beq.w	800e758 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 800e588:	2800      	cmp	r0, #0
 800e58a:	f000 80e5 	beq.w	800e758 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 800e58e:	a805      	add	r0, sp, #20
 800e590:	f000 f8f9 	bl	800e786 <_ZN8touchgfx9Matrix3x3C1Ev>
 800e594:	6833      	ldr	r3, [r6, #0]
 800e596:	4630      	mov	r0, r6
 800e598:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800e59a:	4798      	blx	r3
 800e59c:	a805      	add	r0, sp, #20
 800e59e:	eef0 0a40 	vmov.f32	s1, s0
 800e5a2:	f000 f8f4 	bl	800e78e <_ZN8touchgfx9Matrix3x35scaleEff>
 800e5a6:	6860      	ldr	r0, [r4, #4]
 800e5a8:	f1ba 0f03 	cmp.w	sl, #3
 800e5ac:	d83b      	bhi.n	800e626 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 800e5ae:	e8df f00a 	tbb	[pc, sl]
 800e5b2:	1002      	.short	0x1002
 800e5b4:	9f71      	.short	0x9f71
 800e5b6:	6803      	ldr	r3, [r0, #0]
 800e5b8:	462a      	mov	r2, r5
 800e5ba:	689b      	ldr	r3, [r3, #8]
 800e5bc:	4641      	mov	r1, r8
 800e5be:	4798      	blx	r3
 800e5c0:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 800e5c4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800e5c8:	ee07 7a90 	vmov	s15, r7
 800e5cc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800e5d0:	e026      	b.n	800e620 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 800e5d2:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 800e5d6:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800e5da:	8869      	ldrh	r1, [r5, #2]
 800e5dc:	1a9b      	subs	r3, r3, r2
 800e5de:	1a5b      	subs	r3, r3, r1
 800e5e0:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e5e4:	882b      	ldrh	r3, [r5, #0]
 800e5e6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e5ea:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e5ee:	88ab      	ldrh	r3, [r5, #4]
 800e5f0:	aa03      	add	r2, sp, #12
 800e5f2:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e5f6:	6803      	ldr	r3, [r0, #0]
 800e5f8:	4641      	mov	r1, r8
 800e5fa:	689b      	ldr	r3, [r3, #8]
 800e5fc:	4798      	blx	r3
 800e5fe:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 800e760 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 800e602:	a805      	add	r0, sp, #20
 800e604:	f000 f8e8 	bl	800e7d8 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e608:	ee07 7a90 	vmov	s15, r7
 800e60c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 800e610:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800e612:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800e616:	1a9b      	subs	r3, r3, r2
 800e618:	ee00 3a10 	vmov	s0, r3
 800e61c:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800e620:	a805      	add	r0, sp, #20
 800e622:	f000 f927 	bl	800e874 <_ZN8touchgfx9Matrix3x39translateEff>
 800e626:	2500      	movs	r5, #0
 800e628:	6860      	ldr	r0, [r4, #4]
 800e62a:	a905      	add	r1, sp, #20
 800e62c:	6803      	ldr	r3, [r0, #0]
 800e62e:	f109 0602 	add.w	r6, r9, #2
 800e632:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e634:	4798      	blx	r3
 800e636:	6860      	ldr	r0, [r4, #4]
 800e638:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800e63a:	6803      	ldr	r3, [r0, #0]
 800e63c:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 800e640:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e642:	4798      	blx	r3
 800e644:	6860      	ldr	r0, [r4, #4]
 800e646:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 800e64a:	6803      	ldr	r3, [r0, #0]
 800e64c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e64e:	4798      	blx	r3
 800e650:	6860      	ldr	r0, [r4, #4]
 800e652:	2101      	movs	r1, #1
 800e654:	6803      	ldr	r3, [r0, #0]
 800e656:	68db      	ldr	r3, [r3, #12]
 800e658:	4798      	blx	r3
 800e65a:	f8b9 7000 	ldrh.w	r7, [r9]
 800e65e:	f104 0310 	add.w	r3, r4, #16
 800e662:	61a5      	str	r5, [r4, #24]
 800e664:	f104 0208 	add.w	r2, r4, #8
 800e668:	f104 0114 	add.w	r1, r4, #20
 800e66c:	f104 000c 	add.w	r0, r4, #12
 800e670:	f7f5 f89c 	bl	80037ac <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 800e674:	42af      	cmp	r7, r5
 800e676:	dd60      	ble.n	800e73a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 800e678:	8831      	ldrh	r1, [r6, #0]
 800e67a:	1cb2      	adds	r2, r6, #2
 800e67c:	f101 030f 	add.w	r3, r1, #15
 800e680:	f3c3 1307 	ubfx	r3, r3, #4, #8
 800e684:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800e688:	4620      	mov	r0, r4
 800e68a:	f7ff fe29 	bl	800e2e0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 800e68e:	3501      	adds	r5, #1
 800e690:	4606      	mov	r6, r0
 800e692:	e7ef      	b.n	800e674 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 800e694:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800e698:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800e69c:	8829      	ldrh	r1, [r5, #0]
 800e69e:	1a9b      	subs	r3, r3, r2
 800e6a0:	1a5b      	subs	r3, r3, r1
 800e6a2:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e6a6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e6aa:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e6ae:	886d      	ldrh	r5, [r5, #2]
 800e6b0:	1a5b      	subs	r3, r3, r1
 800e6b2:	1b5b      	subs	r3, r3, r5
 800e6b4:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e6b8:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e6bc:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e6c0:	6803      	ldr	r3, [r0, #0]
 800e6c2:	aa03      	add	r2, sp, #12
 800e6c4:	689b      	ldr	r3, [r3, #8]
 800e6c6:	4641      	mov	r1, r8
 800e6c8:	4798      	blx	r3
 800e6ca:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 800e764 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 800e6ce:	a805      	add	r0, sp, #20
 800e6d0:	f000 f882 	bl	800e7d8 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e6d4:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800e6d8:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800e6da:	1a9b      	subs	r3, r3, r2
 800e6dc:	ee00 3a90 	vmov	s1, r3
 800e6e0:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 800e6e4:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 800e6e8:	1bdb      	subs	r3, r3, r7
 800e6ea:	ee00 3a10 	vmov	s0, r3
 800e6ee:	e795      	b.n	800e61c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 800e6f0:	886b      	ldrh	r3, [r5, #2]
 800e6f2:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800e6f6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e6fa:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e6fe:	8829      	ldrh	r1, [r5, #0]
 800e700:	1a9b      	subs	r3, r3, r2
 800e702:	1a5b      	subs	r3, r3, r1
 800e704:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e708:	88eb      	ldrh	r3, [r5, #6]
 800e70a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e70e:	f8ad 3010 	strh.w	r3, [sp, #16]
 800e712:	6803      	ldr	r3, [r0, #0]
 800e714:	aa03      	add	r2, sp, #12
 800e716:	689b      	ldr	r3, [r3, #8]
 800e718:	4641      	mov	r1, r8
 800e71a:	4798      	blx	r3
 800e71c:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 800e768 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 800e720:	a805      	add	r0, sp, #20
 800e722:	f000 f859 	bl	800e7d8 <_ZN8touchgfx9Matrix3x36rotateEf>
 800e726:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800e72a:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 800e72e:	1bdb      	subs	r3, r3, r7
 800e730:	ee00 3a90 	vmov	s1, r3
 800e734:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 800e738:	e748      	b.n	800e5cc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 800e73a:	2100      	movs	r1, #0
 800e73c:	6860      	ldr	r0, [r4, #4]
 800e73e:	8b22      	ldrh	r2, [r4, #24]
 800e740:	6803      	ldr	r3, [r0, #0]
 800e742:	9101      	str	r1, [sp, #4]
 800e744:	8b61      	ldrh	r1, [r4, #26]
 800e746:	9100      	str	r1, [sp, #0]
 800e748:	6a1d      	ldr	r5, [r3, #32]
 800e74a:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 800e74e:	47a8      	blx	r5
 800e750:	6860      	ldr	r0, [r4, #4]
 800e752:	6803      	ldr	r3, [r0, #0]
 800e754:	69db      	ldr	r3, [r3, #28]
 800e756:	4798      	blx	r3
 800e758:	b00e      	add	sp, #56	@ 0x38
 800e75a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e75e:	bf00      	nop
 800e760:	42b40000 	.word	0x42b40000
 800e764:	43340000 	.word	0x43340000
 800e768:	43870000 	.word	0x43870000

0800e76c <_ZN8touchgfx9Matrix3x35resetEv>:
 800e76c:	2300      	movs	r3, #0
 800e76e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800e772:	6043      	str	r3, [r0, #4]
 800e774:	6002      	str	r2, [r0, #0]
 800e776:	6083      	str	r3, [r0, #8]
 800e778:	60c3      	str	r3, [r0, #12]
 800e77a:	6102      	str	r2, [r0, #16]
 800e77c:	6143      	str	r3, [r0, #20]
 800e77e:	6183      	str	r3, [r0, #24]
 800e780:	61c3      	str	r3, [r0, #28]
 800e782:	6202      	str	r2, [r0, #32]
 800e784:	4770      	bx	lr

0800e786 <_ZN8touchgfx9Matrix3x3C1Ev>:
 800e786:	b508      	push	{r3, lr}
 800e788:	f7ff fff0 	bl	800e76c <_ZN8touchgfx9Matrix3x35resetEv>
 800e78c:	bd08      	pop	{r3, pc}

0800e78e <_ZN8touchgfx9Matrix3x35scaleEff>:
 800e78e:	edd0 7a00 	vldr	s15, [r0]
 800e792:	ee67 7a80 	vmul.f32	s15, s15, s0
 800e796:	edc0 7a00 	vstr	s15, [r0]
 800e79a:	edd0 7a01 	vldr	s15, [r0, #4]
 800e79e:	ee67 7a80 	vmul.f32	s15, s15, s0
 800e7a2:	edc0 7a01 	vstr	s15, [r0, #4]
 800e7a6:	edd0 7a02 	vldr	s15, [r0, #8]
 800e7aa:	ee27 0a80 	vmul.f32	s0, s15, s0
 800e7ae:	edd0 7a03 	vldr	s15, [r0, #12]
 800e7b2:	ee67 7aa0 	vmul.f32	s15, s15, s1
 800e7b6:	edc0 7a03 	vstr	s15, [r0, #12]
 800e7ba:	edd0 7a04 	vldr	s15, [r0, #16]
 800e7be:	ee67 7aa0 	vmul.f32	s15, s15, s1
 800e7c2:	edc0 7a04 	vstr	s15, [r0, #16]
 800e7c6:	edd0 7a05 	vldr	s15, [r0, #20]
 800e7ca:	ee67 0aa0 	vmul.f32	s1, s15, s1
 800e7ce:	ed80 0a02 	vstr	s0, [r0, #8]
 800e7d2:	edc0 0a05 	vstr	s1, [r0, #20]
 800e7d6:	4770      	bx	lr

0800e7d8 <_ZN8touchgfx9Matrix3x36rotateEf>:
 800e7d8:	eddf 7a24 	vldr	s15, [pc, #144]	@ 800e86c <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 800e7dc:	ee20 0a27 	vmul.f32	s0, s0, s15
 800e7e0:	eddf 7a23 	vldr	s15, [pc, #140]	@ 800e870 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 800e7e4:	b510      	push	{r4, lr}
 800e7e6:	ed2d 8b02 	vpush	{d8}
 800e7ea:	eec0 8a27 	vdiv.f32	s17, s0, s15
 800e7ee:	eeb0 0a68 	vmov.f32	s0, s17
 800e7f2:	4604      	mov	r4, r0
 800e7f4:	f022 fe0e 	bl	8031414 <cosf>
 800e7f8:	eeb0 8a40 	vmov.f32	s16, s0
 800e7fc:	eeb0 0a68 	vmov.f32	s0, s17
 800e800:	f022 fe54 	bl	80314ac <sinf>
 800e804:	edd4 6a03 	vldr	s13, [r4, #12]
 800e808:	edd4 4a00 	vldr	s9, [r4]
 800e80c:	ee60 7a66 	vnmul.f32	s15, s0, s13
 800e810:	ed94 7a04 	vldr	s14, [r4, #16]
 800e814:	eee8 7a24 	vfma.f32	s15, s16, s9
 800e818:	ed94 5a01 	vldr	s10, [r4, #4]
 800e81c:	edc4 7a00 	vstr	s15, [r4]
 800e820:	ee60 7a47 	vnmul.f32	s15, s0, s14
 800e824:	eee8 7a05 	vfma.f32	s15, s16, s10
 800e828:	edc4 7a01 	vstr	s15, [r4, #4]
 800e82c:	edd4 7a05 	vldr	s15, [r4, #20]
 800e830:	edd4 5a02 	vldr	s11, [r4, #8]
 800e834:	ee20 6a67 	vnmul.f32	s12, s0, s15
 800e838:	ee66 6a88 	vmul.f32	s13, s13, s16
 800e83c:	ee27 7a08 	vmul.f32	s14, s14, s16
 800e840:	ee67 7a88 	vmul.f32	s15, s15, s16
 800e844:	eea8 6a25 	vfma.f32	s12, s16, s11
 800e848:	ecbd 8b02 	vpop	{d8}
 800e84c:	eee0 6a24 	vfma.f32	s13, s0, s9
 800e850:	eea0 7a05 	vfma.f32	s14, s0, s10
 800e854:	eee0 7a25 	vfma.f32	s15, s0, s11
 800e858:	ed84 6a02 	vstr	s12, [r4, #8]
 800e85c:	edc4 6a03 	vstr	s13, [r4, #12]
 800e860:	ed84 7a04 	vstr	s14, [r4, #16]
 800e864:	edc4 7a05 	vstr	s15, [r4, #20]
 800e868:	bd10      	pop	{r4, pc}
 800e86a:	bf00      	nop
 800e86c:	40490fdb 	.word	0x40490fdb
 800e870:	43340000 	.word	0x43340000

0800e874 <_ZN8touchgfx9Matrix3x39translateEff>:
 800e874:	ed90 6a06 	vldr	s12, [r0, #24]
 800e878:	edd0 7a00 	vldr	s15, [r0]
 800e87c:	eee6 7a00 	vfma.f32	s15, s12, s0
 800e880:	edd0 6a07 	vldr	s13, [r0, #28]
 800e884:	edc0 7a00 	vstr	s15, [r0]
 800e888:	edd0 7a01 	vldr	s15, [r0, #4]
 800e88c:	eee6 7a80 	vfma.f32	s15, s13, s0
 800e890:	ed90 7a08 	vldr	s14, [r0, #32]
 800e894:	edc0 7a01 	vstr	s15, [r0, #4]
 800e898:	edd0 7a02 	vldr	s15, [r0, #8]
 800e89c:	eee7 7a00 	vfma.f32	s15, s14, s0
 800e8a0:	edc0 7a02 	vstr	s15, [r0, #8]
 800e8a4:	edd0 7a03 	vldr	s15, [r0, #12]
 800e8a8:	eee6 7a20 	vfma.f32	s15, s12, s1
 800e8ac:	edc0 7a03 	vstr	s15, [r0, #12]
 800e8b0:	edd0 7a04 	vldr	s15, [r0, #16]
 800e8b4:	eee6 7aa0 	vfma.f32	s15, s13, s1
 800e8b8:	edc0 7a04 	vstr	s15, [r0, #16]
 800e8bc:	edd0 7a05 	vldr	s15, [r0, #20]
 800e8c0:	eee7 7a20 	vfma.f32	s15, s14, s1
 800e8c4:	edc0 7a05 	vstr	s15, [r0, #20]
 800e8c8:	4770      	bx	lr

0800e8ca <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>:
 800e8ca:	ed91 0a01 	vldr	s0, [r1, #4]
 800e8ce:	edd0 6a01 	vldr	s13, [r0, #4]
 800e8d2:	edd0 0a04 	vldr	s1, [r0, #16]
 800e8d6:	edd1 7a00 	vldr	s15, [r1]
 800e8da:	ed90 7a03 	vldr	s14, [r0, #12]
 800e8de:	ee60 0a20 	vmul.f32	s1, s0, s1
 800e8e2:	ee20 0a26 	vmul.f32	s0, s0, s13
 800e8e6:	edd0 6a00 	vldr	s13, [r0]
 800e8ea:	eee7 0a27 	vfma.f32	s1, s14, s15
 800e8ee:	eea6 0aa7 	vfma.f32	s0, s13, s15
 800e8f2:	ed90 7a05 	vldr	s14, [r0, #20]
 800e8f6:	edd0 7a02 	vldr	s15, [r0, #8]
 800e8fa:	ee70 0a87 	vadd.f32	s1, s1, s14
 800e8fe:	ee30 0a27 	vadd.f32	s0, s0, s15
 800e902:	b084      	sub	sp, #16
 800e904:	b004      	add	sp, #16
 800e906:	4770      	bx	lr

0800e908 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800e908:	b530      	push	{r4, r5, lr}
 800e90a:	8083      	strh	r3, [r0, #4]
 800e90c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800e910:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800e914:	80c3      	strh	r3, [r0, #6]
 800e916:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800e91a:	6141      	str	r1, [r0, #20]
 800e91c:	7203      	strb	r3, [r0, #8]
 800e91e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e922:	8302      	strh	r2, [r0, #24]
 800e924:	7243      	strb	r3, [r0, #9]
 800e926:	7a83      	ldrb	r3, [r0, #10]
 800e928:	f365 0306 	bfi	r3, r5, #0, #7
 800e92c:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800e930:	f365 13c7 	bfi	r3, r5, #7, #1
 800e934:	7283      	strb	r3, [r0, #10]
 800e936:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800e93a:	72c3      	strb	r3, [r0, #11]
 800e93c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 800e940:	7303      	strb	r3, [r0, #12]
 800e942:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 800e946:	81c3      	strh	r3, [r0, #14]
 800e948:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800e94c:	8203      	strh	r3, [r0, #16]
 800e94e:	4b01      	ldr	r3, [pc, #4]	@ (800e954 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800e950:	6003      	str	r3, [r0, #0]
 800e952:	bd30      	pop	{r4, r5, pc}
 800e954:	08035bd4 	.word	0x08035bd4

0800e958 <_ZNK8touchgfx9ConstFont4findEt>:
 800e958:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e95a:	6944      	ldr	r4, [r0, #20]
 800e95c:	b3bc      	cbz	r4, 800e9ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e95e:	88a3      	ldrh	r3, [r4, #4]
 800e960:	8b02      	ldrh	r2, [r0, #24]
 800e962:	1acb      	subs	r3, r1, r3
 800e964:	f102 32ff 	add.w	r2, r2, #4294967295
 800e968:	d431      	bmi.n	800e9ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e96a:	4293      	cmp	r3, r2
 800e96c:	dd0c      	ble.n	800e988 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800e96e:	230e      	movs	r3, #14
 800e970:	fb03 4302 	mla	r3, r3, r2, r4
 800e974:	889b      	ldrh	r3, [r3, #4]
 800e976:	1a5b      	subs	r3, r3, r1
 800e978:	1ad3      	subs	r3, r2, r3
 800e97a:	429a      	cmp	r2, r3
 800e97c:	db27      	blt.n	800e9ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e97e:	2b00      	cmp	r3, #0
 800e980:	bfbc      	itt	lt
 800e982:	2302      	movlt	r3, #2
 800e984:	fb92 f3f3 	sdivlt	r3, r2, r3
 800e988:	2500      	movs	r5, #0
 800e98a:	260e      	movs	r6, #14
 800e98c:	4295      	cmp	r5, r2
 800e98e:	dc1e      	bgt.n	800e9ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e990:	fb06 4003 	mla	r0, r6, r3, r4
 800e994:	8887      	ldrh	r7, [r0, #4]
 800e996:	42b9      	cmp	r1, r7
 800e998:	d01a      	beq.n	800e9d0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800e99a:	d20d      	bcs.n	800e9b8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800e99c:	1e5a      	subs	r2, r3, #1
 800e99e:	4295      	cmp	r5, r2
 800e9a0:	dc15      	bgt.n	800e9ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e9a2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800e9a6:	1a5b      	subs	r3, r3, r1
 800e9a8:	1ad3      	subs	r3, r2, r3
 800e9aa:	429a      	cmp	r2, r3
 800e9ac:	db0f      	blt.n	800e9ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e9ae:	429d      	cmp	r5, r3
 800e9b0:	ddec      	ble.n	800e98c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e9b2:	1953      	adds	r3, r2, r5
 800e9b4:	105b      	asrs	r3, r3, #1
 800e9b6:	e7e9      	b.n	800e98c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e9b8:	1c5d      	adds	r5, r3, #1
 800e9ba:	42aa      	cmp	r2, r5
 800e9bc:	db07      	blt.n	800e9ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e9be:	8a43      	ldrh	r3, [r0, #18]
 800e9c0:	1acb      	subs	r3, r1, r3
 800e9c2:	442b      	add	r3, r5
 800e9c4:	429d      	cmp	r5, r3
 800e9c6:	dc02      	bgt.n	800e9ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e9c8:	429a      	cmp	r2, r3
 800e9ca:	dadf      	bge.n	800e98c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e9cc:	e7f1      	b.n	800e9b2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800e9ce:	2000      	movs	r0, #0
 800e9d0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e9d2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800e9d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e9d4:	4604      	mov	r4, r0
 800e9d6:	4617      	mov	r7, r2
 800e9d8:	461e      	mov	r6, r3
 800e9da:	b911      	cbnz	r1, 800e9e2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800e9dc:	2500      	movs	r5, #0
 800e9de:	4628      	mov	r0, r5
 800e9e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e9e2:	290a      	cmp	r1, #10
 800e9e4:	d0fa      	beq.n	800e9dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e9e6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800e9ea:	4291      	cmp	r1, r2
 800e9ec:	d0f6      	beq.n	800e9dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e9ee:	f242 020b 	movw	r2, #8203	@ 0x200b
 800e9f2:	4291      	cmp	r1, r2
 800e9f4:	d0f2      	beq.n	800e9dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e9f6:	f7ff ffaf 	bl	800e958 <_ZNK8touchgfx9ConstFont4findEt>
 800e9fa:	4605      	mov	r5, r0
 800e9fc:	b950      	cbnz	r0, 800ea14 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800e9fe:	6823      	ldr	r3, [r4, #0]
 800ea00:	4620      	mov	r0, r4
 800ea02:	691b      	ldr	r3, [r3, #16]
 800ea04:	4798      	blx	r3
 800ea06:	4601      	mov	r1, r0
 800ea08:	4620      	mov	r0, r4
 800ea0a:	f7ff ffa5 	bl	800e958 <_ZNK8touchgfx9ConstFont4findEt>
 800ea0e:	4605      	mov	r5, r0
 800ea10:	2800      	cmp	r0, #0
 800ea12:	d0e3      	beq.n	800e9dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ea14:	6823      	ldr	r3, [r4, #0]
 800ea16:	4629      	mov	r1, r5
 800ea18:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ea1a:	4620      	mov	r0, r4
 800ea1c:	4798      	blx	r3
 800ea1e:	6038      	str	r0, [r7, #0]
 800ea20:	6823      	ldr	r3, [r4, #0]
 800ea22:	4620      	mov	r0, r4
 800ea24:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ea26:	4798      	blx	r3
 800ea28:	7030      	strb	r0, [r6, #0]
 800ea2a:	e7d8      	b.n	800e9de <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800ea2c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800ea2c:	2000      	movs	r0, #0
 800ea2e:	4770      	bx	lr

0800ea30 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800ea30:	2001      	movs	r0, #1
 800ea32:	4770      	bx	lr

0800ea34 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800ea34:	2002      	movs	r0, #2
 800ea36:	4770      	bx	lr

0800ea38 <_ZN8touchgfx6ScreenD1Ev>:
 800ea38:	4770      	bx	lr

0800ea3a <_ZN8touchgfx12GestureEventD1Ev>:
 800ea3a:	4770      	bx	lr

0800ea3c <_ZN8touchgfx9DragEventD1Ev>:
 800ea3c:	4770      	bx	lr

0800ea3e <_ZN8touchgfx10ClickEventD1Ev>:
 800ea3e:	4770      	bx	lr

0800ea40 <_ZN8touchgfx10ClickEventD0Ev>:
 800ea40:	b510      	push	{r4, lr}
 800ea42:	4604      	mov	r4, r0
 800ea44:	210c      	movs	r1, #12
 800ea46:	f022 fb7e 	bl	8031146 <_ZdlPvj>
 800ea4a:	4620      	mov	r0, r4
 800ea4c:	bd10      	pop	{r4, pc}

0800ea4e <_ZN8touchgfx9DragEventD0Ev>:
 800ea4e:	b510      	push	{r4, lr}
 800ea50:	4604      	mov	r4, r0
 800ea52:	2110      	movs	r1, #16
 800ea54:	f022 fb77 	bl	8031146 <_ZdlPvj>
 800ea58:	4620      	mov	r0, r4
 800ea5a:	bd10      	pop	{r4, pc}

0800ea5c <_ZN8touchgfx12GestureEventD0Ev>:
 800ea5c:	b510      	push	{r4, lr}
 800ea5e:	4604      	mov	r4, r0
 800ea60:	210c      	movs	r1, #12
 800ea62:	f022 fb70 	bl	8031146 <_ZdlPvj>
 800ea66:	4620      	mov	r0, r4
 800ea68:	bd10      	pop	{r4, pc}

0800ea6a <_ZN8touchgfx6ScreenD0Ev>:
 800ea6a:	b510      	push	{r4, lr}
 800ea6c:	4604      	mov	r4, r0
 800ea6e:	213c      	movs	r1, #60	@ 0x3c
 800ea70:	f022 fb69 	bl	8031146 <_ZdlPvj>
 800ea74:	4620      	mov	r0, r4
 800ea76:	bd10      	pop	{r4, pc}

0800ea78 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800ea78:	b530      	push	{r4, r5, lr}
 800ea7a:	460d      	mov	r5, r1
 800ea7c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800ea7e:	b087      	sub	sp, #28
 800ea80:	4604      	mov	r4, r0
 800ea82:	b301      	cbz	r1, 800eac6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800ea84:	a801      	add	r0, sp, #4
 800ea86:	f7ff fc05 	bl	800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ea8a:	892a      	ldrh	r2, [r5, #8]
 800ea8c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ea90:	7928      	ldrb	r0, [r5, #4]
 800ea92:	1ad2      	subs	r2, r2, r3
 800ea94:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800ea96:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800ea9a:	441a      	add	r2, r3
 800ea9c:	896b      	ldrh	r3, [r5, #10]
 800ea9e:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800eaa2:	f88d 0010 	strb.w	r0, [sp, #16]
 800eaa6:	1b5b      	subs	r3, r3, r5
 800eaa8:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 800eaaa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800eaac:	442b      	add	r3, r5
 800eaae:	4d07      	ldr	r5, [pc, #28]	@ (800eacc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800eab0:	f8ad 1012 	strh.w	r1, [sp, #18]
 800eab4:	9503      	str	r5, [sp, #12]
 800eab6:	f8ad 2014 	strh.w	r2, [sp, #20]
 800eaba:	f8ad 3016 	strh.w	r3, [sp, #22]
 800eabe:	6803      	ldr	r3, [r0, #0]
 800eac0:	a903      	add	r1, sp, #12
 800eac2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800eac4:	4798      	blx	r3
 800eac6:	b007      	add	sp, #28
 800eac8:	bd30      	pop	{r4, r5, pc}
 800eaca:	bf00      	nop
 800eacc:	08035c64 	.word	0x08035c64

0800ead0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800ead0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ead4:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800ead6:	b08a      	sub	sp, #40	@ 0x28
 800ead8:	4604      	mov	r4, r0
 800eada:	460d      	mov	r5, r1
 800eadc:	b113      	cbz	r3, 800eae4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800eade:	790b      	ldrb	r3, [r1, #4]
 800eae0:	2b00      	cmp	r3, #0
 800eae2:	d044      	beq.n	800eb6e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800eae4:	f104 0804 	add.w	r8, r4, #4
 800eae8:	4641      	mov	r1, r8
 800eaea:	a803      	add	r0, sp, #12
 800eaec:	f7ff fbd2 	bl	800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eaf0:	792b      	ldrb	r3, [r5, #4]
 800eaf2:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800eaf6:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800eafa:	b983      	cbnz	r3, 800eb1e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800eafc:	892a      	ldrh	r2, [r5, #8]
 800eafe:	88e9      	ldrh	r1, [r5, #6]
 800eb00:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 800eb04:	1b92      	subs	r2, r2, r6
 800eb06:	1bc9      	subs	r1, r1, r7
 800eb08:	9301      	str	r3, [sp, #4]
 800eb0a:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 800eb0e:	9300      	str	r3, [sp, #0]
 800eb10:	b212      	sxth	r2, r2
 800eb12:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 800eb16:	b209      	sxth	r1, r1
 800eb18:	4640      	mov	r0, r8
 800eb1a:	f7fb ffc9 	bl	800aab0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800eb1e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800eb20:	b329      	cbz	r1, 800eb6e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800eb22:	a805      	add	r0, sp, #20
 800eb24:	f7ff fbb6 	bl	800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eb28:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800eb2c:	792b      	ldrb	r3, [r5, #4]
 800eb2e:	1abf      	subs	r7, r7, r2
 800eb30:	88ea      	ldrh	r2, [r5, #6]
 800eb32:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800eb34:	4417      	add	r7, r2
 800eb36:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 800eb38:	f88d 3020 	strb.w	r3, [sp, #32]
 800eb3c:	4417      	add	r7, r2
 800eb3e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800eb42:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800eb46:	1ab6      	subs	r6, r6, r2
 800eb48:	892a      	ldrh	r2, [r5, #8]
 800eb4a:	a907      	add	r1, sp, #28
 800eb4c:	4416      	add	r6, r2
 800eb4e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800eb50:	4416      	add	r6, r2
 800eb52:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800eb56:	2600      	movs	r6, #0
 800eb58:	4a06      	ldr	r2, [pc, #24]	@ (800eb74 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800eb5a:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 800eb5e:	9207      	str	r2, [sp, #28]
 800eb60:	6803      	ldr	r3, [r0, #0]
 800eb62:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800eb64:	4798      	blx	r3
 800eb66:	792b      	ldrb	r3, [r5, #4]
 800eb68:	b10b      	cbz	r3, 800eb6e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800eb6a:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800eb6e:	b00a      	add	sp, #40	@ 0x28
 800eb70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eb74:	08035c3c 	.word	0x08035c3c

0800eb78 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800eb78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb7c:	460c      	mov	r4, r1
 800eb7e:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800eb80:	b088      	sub	sp, #32
 800eb82:	4605      	mov	r5, r0
 800eb84:	2900      	cmp	r1, #0
 800eb86:	d06d      	beq.n	800ec64 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800eb88:	4668      	mov	r0, sp
 800eb8a:	f7ff fb83 	bl	800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eb8e:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 800eb90:	88e3      	ldrh	r3, [r4, #6]
 800eb92:	f9bd 8000 	ldrsh.w	r8, [sp]
 800eb96:	440b      	add	r3, r1
 800eb98:	b21b      	sxth	r3, r3
 800eb9a:	4543      	cmp	r3, r8
 800eb9c:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800eba0:	db31      	blt.n	800ec06 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800eba2:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800eba6:	44c4      	add	ip, r8
 800eba8:	fa0f fc8c 	sxth.w	ip, ip
 800ebac:	4563      	cmp	r3, ip
 800ebae:	da2a      	bge.n	800ec06 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ebb0:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 800ebb2:	8926      	ldrh	r6, [r4, #8]
 800ebb4:	4416      	add	r6, r2
 800ebb6:	b236      	sxth	r6, r6
 800ebb8:	42be      	cmp	r6, r7
 800ebba:	db24      	blt.n	800ec06 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ebbc:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800ebc0:	4438      	add	r0, r7
 800ebc2:	b200      	sxth	r0, r0
 800ebc4:	4286      	cmp	r6, r0
 800ebc6:	da1e      	bge.n	800ec06 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ebc8:	8963      	ldrh	r3, [r4, #10]
 800ebca:	4419      	add	r1, r3
 800ebcc:	b209      	sxth	r1, r1
 800ebce:	4541      	cmp	r1, r8
 800ebd0:	db08      	blt.n	800ebe4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800ebd2:	4561      	cmp	r1, ip
 800ebd4:	da06      	bge.n	800ebe4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800ebd6:	89a3      	ldrh	r3, [r4, #12]
 800ebd8:	441a      	add	r2, r3
 800ebda:	b212      	sxth	r2, r2
 800ebdc:	42ba      	cmp	r2, r7
 800ebde:	db01      	blt.n	800ebe4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800ebe0:	4282      	cmp	r2, r0
 800ebe2:	db10      	blt.n	800ec06 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ebe4:	4b21      	ldr	r3, [pc, #132]	@ (800ec6c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800ebe6:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800ebe8:	9304      	str	r3, [sp, #16]
 800ebea:	2302      	movs	r3, #2
 800ebec:	f88d 3014 	strb.w	r3, [sp, #20]
 800ebf0:	2300      	movs	r3, #0
 800ebf2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ebf6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ebfa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ebfe:	6803      	ldr	r3, [r0, #0]
 800ec00:	a904      	add	r1, sp, #16
 800ec02:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ec04:	4798      	blx	r3
 800ec06:	1d29      	adds	r1, r5, #4
 800ec08:	a802      	add	r0, sp, #8
 800ec0a:	f7ff fb43 	bl	800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ec0e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800ec12:	88e0      	ldrh	r0, [r4, #6]
 800ec14:	eba3 0808 	sub.w	r8, r3, r8
 800ec18:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800ec1c:	7921      	ldrb	r1, [r4, #4]
 800ec1e:	1bdf      	subs	r7, r3, r7
 800ec20:	b2bb      	uxth	r3, r7
 800ec22:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 800ec26:	fa1f f888 	uxth.w	r8, r8
 800ec2a:	8922      	ldrh	r2, [r4, #8]
 800ec2c:	8967      	ldrh	r7, [r4, #10]
 800ec2e:	89a4      	ldrh	r4, [r4, #12]
 800ec30:	4440      	add	r0, r8
 800ec32:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 800ec34:	4460      	add	r0, ip
 800ec36:	441a      	add	r2, r3
 800ec38:	44b8      	add	r8, r7
 800ec3a:	4423      	add	r3, r4
 800ec3c:	4c0c      	ldr	r4, [pc, #48]	@ (800ec70 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800ec3e:	f8ad 0016 	strh.w	r0, [sp, #22]
 800ec42:	4433      	add	r3, r6
 800ec44:	4432      	add	r2, r6
 800ec46:	44e0      	add	r8, ip
 800ec48:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800ec4a:	f88d 1014 	strb.w	r1, [sp, #20]
 800ec4e:	9404      	str	r4, [sp, #16]
 800ec50:	f8ad 2018 	strh.w	r2, [sp, #24]
 800ec54:	f8ad 801a 	strh.w	r8, [sp, #26]
 800ec58:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ec5c:	6803      	ldr	r3, [r0, #0]
 800ec5e:	a904      	add	r1, sp, #16
 800ec60:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ec62:	4798      	blx	r3
 800ec64:	b008      	add	sp, #32
 800ec66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ec6a:	bf00      	nop
 800ec6c:	08035c3c 	.word	0x08035c3c
 800ec70:	08035c50 	.word	0x08035c50

0800ec74 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800ec74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ec76:	4604      	mov	r4, r0
 800ec78:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800ec7c:	3201      	adds	r2, #1
 800ec7e:	d112      	bne.n	800eca6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800ec80:	2500      	movs	r5, #0
 800ec82:	9500      	str	r5, [sp, #0]
 800ec84:	466d      	mov	r5, sp
 800ec86:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ec8a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ec8e:	6803      	ldr	r3, [r0, #0]
 800ec90:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ec94:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ec98:	4629      	mov	r1, r5
 800ec9a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ec9c:	4798      	blx	r3
 800ec9e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800eca2:	e884 0003 	stmia.w	r4, {r0, r1}
 800eca6:	4620      	mov	r0, r4
 800eca8:	b003      	add	sp, #12
 800ecaa:	bd30      	pop	{r4, r5, pc}

0800ecac <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800ecac:	b513      	push	{r0, r1, r4, lr}
 800ecae:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800ecb2:	4604      	mov	r4, r0
 800ecb4:	3301      	adds	r3, #1
 800ecb6:	d109      	bne.n	800eccc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800ecb8:	4601      	mov	r1, r0
 800ecba:	4668      	mov	r0, sp
 800ecbc:	f7ff faea 	bl	800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ecc0:	f8bd 3000 	ldrh.w	r3, [sp]
 800ecc4:	8423      	strh	r3, [r4, #32]
 800ecc6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ecca:	8463      	strh	r3, [r4, #34]	@ 0x22
 800eccc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800ecd0:	b002      	add	sp, #8
 800ecd2:	bd10      	pop	{r4, pc}

0800ecd4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800ecd4:	b513      	push	{r0, r1, r4, lr}
 800ecd6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 800ecda:	4604      	mov	r4, r0
 800ecdc:	3301      	adds	r3, #1
 800ecde:	d109      	bne.n	800ecf4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800ece0:	4601      	mov	r1, r0
 800ece2:	4668      	mov	r0, sp
 800ece4:	f7ff fad6 	bl	800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ece8:	f8bd 3000 	ldrh.w	r3, [sp]
 800ecec:	8423      	strh	r3, [r4, #32]
 800ecee:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ecf2:	8463      	strh	r3, [r4, #34]	@ 0x22
 800ecf4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 800ecf8:	b002      	add	sp, #8
 800ecfa:	bd10      	pop	{r4, pc}

0800ecfc <_ZN8touchgfx6ScreenC1Ev>:
 800ecfc:	b570      	push	{r4, r5, r6, lr}
 800ecfe:	4605      	mov	r5, r0
 800ed00:	4b16      	ldr	r3, [pc, #88]	@ (800ed5c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800ed02:	2101      	movs	r1, #1
 800ed04:	f845 3b04 	str.w	r3, [r5], #4
 800ed08:	2300      	movs	r3, #0
 800ed0a:	4604      	mov	r4, r0
 800ed0c:	8103      	strh	r3, [r0, #8]
 800ed0e:	8143      	strh	r3, [r0, #10]
 800ed10:	8183      	strh	r3, [r0, #12]
 800ed12:	81c3      	strh	r3, [r0, #14]
 800ed14:	8203      	strh	r3, [r0, #16]
 800ed16:	8243      	strh	r3, [r0, #18]
 800ed18:	8283      	strh	r3, [r0, #20]
 800ed1a:	82c3      	strh	r3, [r0, #22]
 800ed1c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800ed20:	6203      	str	r3, [r0, #32]
 800ed22:	8483      	strh	r3, [r0, #36]	@ 0x24
 800ed24:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800ed26:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 800ed2a:	4a0d      	ldr	r2, [pc, #52]	@ (800ed60 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800ed2c:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 800ed30:	6343      	str	r3, [r0, #52]	@ 0x34
 800ed32:	4b0c      	ldr	r3, [pc, #48]	@ (800ed64 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800ed34:	6042      	str	r2, [r0, #4]
 800ed36:	f9b3 6000 	ldrsh.w	r6, [r3]
 800ed3a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800ed3c:	4a0a      	ldr	r2, [pc, #40]	@ (800ed68 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800ed3e:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800ed42:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 800ed46:	f9b2 1000 	ldrsh.w	r1, [r2]
 800ed4a:	4628      	mov	r0, r5
 800ed4c:	4798      	blx	r3
 800ed4e:	6863      	ldr	r3, [r4, #4]
 800ed50:	4628      	mov	r0, r5
 800ed52:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ed54:	4631      	mov	r1, r6
 800ed56:	4798      	blx	r3
 800ed58:	4620      	mov	r0, r4
 800ed5a:	bd70      	pop	{r4, r5, r6, pc}
 800ed5c:	08035c78 	.word	0x08035c78
 800ed60:	08035960 	.word	0x08035960
 800ed64:	20082efe 	.word	0x20082efe
 800ed68:	20082efc 	.word	0x20082efc

0800ed6c <_ZN8touchgfx6Screen4drawEv>:
 800ed6c:	b507      	push	{r0, r1, r2, lr}
 800ed6e:	2100      	movs	r1, #0
 800ed70:	4b08      	ldr	r3, [pc, #32]	@ (800ed94 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800ed72:	9100      	str	r1, [sp, #0]
 800ed74:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ed78:	4b07      	ldr	r3, [pc, #28]	@ (800ed98 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800ed7a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ed7e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ed82:	4669      	mov	r1, sp
 800ed84:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ed88:	6803      	ldr	r3, [r0, #0]
 800ed8a:	689b      	ldr	r3, [r3, #8]
 800ed8c:	4798      	blx	r3
 800ed8e:	b003      	add	sp, #12
 800ed90:	f85d fb04 	ldr.w	pc, [sp], #4
 800ed94:	20082efc 	.word	0x20082efc
 800ed98:	20082efe 	.word	0x20082efe

0800ed9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800ed9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eda0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800eda4:	b089      	sub	sp, #36	@ 0x24
 800eda6:	2b00      	cmp	r3, #0
 800eda8:	4680      	mov	r8, r0
 800edaa:	460c      	mov	r4, r1
 800edac:	4615      	mov	r5, r2
 800edae:	dd0e      	ble.n	800edce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800edb0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800edb4:	2b00      	cmp	r3, #0
 800edb6:	dd0a      	ble.n	800edce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800edb8:	4628      	mov	r0, r5
 800edba:	f7ff ff5b 	bl	800ec74 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800edbe:	4621      	mov	r1, r4
 800edc0:	f7fe f877 	bl	800ceb2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800edc4:	69eb      	ldr	r3, [r5, #28]
 800edc6:	b928      	cbnz	r0, 800edd4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800edc8:	461d      	mov	r5, r3
 800edca:	2b00      	cmp	r3, #0
 800edcc:	d1f4      	bne.n	800edb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800edce:	b009      	add	sp, #36	@ 0x24
 800edd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800edd4:	ae04      	add	r6, sp, #16
 800edd6:	2b00      	cmp	r3, #0
 800edd8:	f000 80b5 	beq.w	800ef46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800eddc:	682b      	ldr	r3, [r5, #0]
 800edde:	4629      	mov	r1, r5
 800ede0:	68db      	ldr	r3, [r3, #12]
 800ede2:	a802      	add	r0, sp, #8
 800ede4:	4798      	blx	r3
 800ede6:	4628      	mov	r0, r5
 800ede8:	f7ff ff60 	bl	800ecac <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800edec:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800edf0:	4407      	add	r7, r0
 800edf2:	4628      	mov	r0, r5
 800edf4:	f7ff ff6e 	bl	800ecd4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800edf8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800edfc:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800ee00:	4418      	add	r0, r3
 800ee02:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ee06:	4621      	mov	r1, r4
 800ee08:	f8ad 0012 	strh.w	r0, [sp, #18]
 800ee0c:	b23f      	sxth	r7, r7
 800ee0e:	4630      	mov	r0, r6
 800ee10:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ee14:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ee18:	f8ad 7010 	strh.w	r7, [sp, #16]
 800ee1c:	f7fb ff28 	bl	800ac70 <_ZN8touchgfx4RectaNERKS0_>
 800ee20:	4628      	mov	r0, r5
 800ee22:	f7ff ff27 	bl	800ec74 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800ee26:	4602      	mov	r2, r0
 800ee28:	e896 0003 	ldmia.w	r6, {r0, r1}
 800ee2c:	ab06      	add	r3, sp, #24
 800ee2e:	e883 0003 	stmia.w	r3, {r0, r1}
 800ee32:	4611      	mov	r1, r2
 800ee34:	4618      	mov	r0, r3
 800ee36:	f7fb ff1b 	bl	800ac70 <_ZN8touchgfx4RectaNERKS0_>
 800ee3a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800ee3e:	f9b4 1000 	ldrsh.w	r1, [r4]
 800ee42:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800ee46:	4299      	cmp	r1, r3
 800ee48:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800ee4c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800ee50:	d10b      	bne.n	800ee6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800ee52:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800ee56:	4552      	cmp	r2, sl
 800ee58:	d107      	bne.n	800ee6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800ee5a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800ee5e:	455a      	cmp	r2, fp
 800ee60:	d103      	bne.n	800ee6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800ee62:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ee66:	454a      	cmp	r2, r9
 800ee68:	d06d      	beq.n	800ef46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800ee6a:	f1bb 0f00 	cmp.w	fp, #0
 800ee6e:	dd65      	ble.n	800ef3c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800ee70:	f1b9 0f00 	cmp.w	r9, #0
 800ee74:	dd62      	ble.n	800ef3c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800ee76:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800ee7a:	fa1f f08a 	uxth.w	r0, sl
 800ee7e:	4552      	cmp	r2, sl
 800ee80:	9000      	str	r0, [sp, #0]
 800ee82:	da12      	bge.n	800eeaa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800ee84:	9301      	str	r3, [sp, #4]
 800ee86:	9b00      	ldr	r3, [sp, #0]
 800ee88:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800ee8c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800ee90:	1a9a      	subs	r2, r3, r2
 800ee92:	f8ad 1010 	strh.w	r1, [sp, #16]
 800ee96:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ee9a:	f8ad 2016 	strh.w	r2, [sp, #22]
 800ee9e:	69ea      	ldr	r2, [r5, #28]
 800eea0:	4631      	mov	r1, r6
 800eea2:	4640      	mov	r0, r8
 800eea4:	f7ff ff7a 	bl	800ed9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800eea8:	9b01      	ldr	r3, [sp, #4]
 800eeaa:	f9b4 2000 	ldrsh.w	r2, [r4]
 800eeae:	b29f      	uxth	r7, r3
 800eeb0:	429a      	cmp	r2, r3
 800eeb2:	da0d      	bge.n	800eed0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800eeb4:	f8ad 2010 	strh.w	r2, [sp, #16]
 800eeb8:	1aba      	subs	r2, r7, r2
 800eeba:	f8ad a012 	strh.w	sl, [sp, #18]
 800eebe:	f8ad 2014 	strh.w	r2, [sp, #20]
 800eec2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800eec6:	69ea      	ldr	r2, [r5, #28]
 800eec8:	4631      	mov	r1, r6
 800eeca:	4640      	mov	r0, r8
 800eecc:	f7ff ff66 	bl	800ed9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800eed0:	8822      	ldrh	r2, [r4, #0]
 800eed2:	88a3      	ldrh	r3, [r4, #4]
 800eed4:	445f      	add	r7, fp
 800eed6:	4413      	add	r3, r2
 800eed8:	b29b      	uxth	r3, r3
 800eeda:	b2bf      	uxth	r7, r7
 800eedc:	b23a      	sxth	r2, r7
 800eede:	b219      	sxth	r1, r3
 800eee0:	4291      	cmp	r1, r2
 800eee2:	dd0d      	ble.n	800ef00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800eee4:	1bdb      	subs	r3, r3, r7
 800eee6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800eeea:	f8ad a012 	strh.w	sl, [sp, #18]
 800eeee:	f8ad 3014 	strh.w	r3, [sp, #20]
 800eef2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800eef6:	69ea      	ldr	r2, [r5, #28]
 800eef8:	4631      	mov	r1, r6
 800eefa:	4640      	mov	r0, r8
 800eefc:	f7ff ff4e 	bl	800ed9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ef00:	88e2      	ldrh	r2, [r4, #6]
 800ef02:	8863      	ldrh	r3, [r4, #2]
 800ef04:	4413      	add	r3, r2
 800ef06:	9a00      	ldr	r2, [sp, #0]
 800ef08:	b29b      	uxth	r3, r3
 800ef0a:	444a      	add	r2, r9
 800ef0c:	fa1f f982 	uxth.w	r9, r2
 800ef10:	fa0f f289 	sxth.w	r2, r9
 800ef14:	b219      	sxth	r1, r3
 800ef16:	428a      	cmp	r2, r1
 800ef18:	da15      	bge.n	800ef46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800ef1a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ef1e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ef22:	eba3 0309 	sub.w	r3, r3, r9
 800ef26:	f8ad 1014 	strh.w	r1, [sp, #20]
 800ef2a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800ef2e:	f8ad 2012 	strh.w	r2, [sp, #18]
 800ef32:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ef36:	69ea      	ldr	r2, [r5, #28]
 800ef38:	4631      	mov	r1, r6
 800ef3a:	e001      	b.n	800ef40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800ef3c:	4621      	mov	r1, r4
 800ef3e:	69ea      	ldr	r2, [r5, #28]
 800ef40:	4640      	mov	r0, r8
 800ef42:	f7ff ff2b 	bl	800ed9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ef46:	4628      	mov	r0, r5
 800ef48:	f7ff fe94 	bl	800ec74 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800ef4c:	4633      	mov	r3, r6
 800ef4e:	4602      	mov	r2, r0
 800ef50:	6861      	ldr	r1, [r4, #4]
 800ef52:	6820      	ldr	r0, [r4, #0]
 800ef54:	c303      	stmia	r3!, {r0, r1}
 800ef56:	4611      	mov	r1, r2
 800ef58:	4630      	mov	r0, r6
 800ef5a:	f7fb fe89 	bl	800ac70 <_ZN8touchgfx4RectaNERKS0_>
 800ef5e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800ef62:	2b00      	cmp	r3, #0
 800ef64:	f77f af33 	ble.w	800edce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ef68:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800ef6c:	2b00      	cmp	r3, #0
 800ef6e:	f77f af2e 	ble.w	800edce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ef72:	4628      	mov	r0, r5
 800ef74:	f7ff fe9a 	bl	800ecac <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800ef78:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800ef7c:	1a18      	subs	r0, r3, r0
 800ef7e:	f8ad 0010 	strh.w	r0, [sp, #16]
 800ef82:	4628      	mov	r0, r5
 800ef84:	f7ff fea6 	bl	800ecd4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800ef88:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ef8c:	4631      	mov	r1, r6
 800ef8e:	1a18      	subs	r0, r3, r0
 800ef90:	f8ad 0012 	strh.w	r0, [sp, #18]
 800ef94:	682b      	ldr	r3, [r5, #0]
 800ef96:	4628      	mov	r0, r5
 800ef98:	689b      	ldr	r3, [r3, #8]
 800ef9a:	4798      	blx	r3
 800ef9c:	e717      	b.n	800edce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800ef9e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800ef9e:	b570      	push	{r4, r5, r6, lr}
 800efa0:	2300      	movs	r3, #0
 800efa2:	460c      	mov	r4, r1
 800efa4:	b086      	sub	sp, #24
 800efa6:	1d06      	adds	r6, r0, #4
 800efa8:	4631      	mov	r1, r6
 800efaa:	4605      	mov	r5, r0
 800efac:	a802      	add	r0, sp, #8
 800efae:	9301      	str	r3, [sp, #4]
 800efb0:	f7ff f970 	bl	800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800efb4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800efb8:	8822      	ldrh	r2, [r4, #0]
 800efba:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800efbe:	1ad2      	subs	r2, r2, r3
 800efc0:	8863      	ldrh	r3, [r4, #2]
 800efc2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800efc6:	1a5b      	subs	r3, r3, r1
 800efc8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800efcc:	f8ad 2010 	strh.w	r2, [sp, #16]
 800efd0:	f8ad 0014 	strh.w	r0, [sp, #20]
 800efd4:	f8ad 1016 	strh.w	r1, [sp, #22]
 800efd8:	aa01      	add	r2, sp, #4
 800efda:	a904      	add	r1, sp, #16
 800efdc:	4630      	mov	r0, r6
 800efde:	f8ad 3012 	strh.w	r3, [sp, #18]
 800efe2:	f7fb ff1d 	bl	800ae20 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800efe6:	9a01      	ldr	r2, [sp, #4]
 800efe8:	b11a      	cbz	r2, 800eff2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800efea:	4621      	mov	r1, r4
 800efec:	4628      	mov	r0, r5
 800efee:	f7ff fed5 	bl	800ed9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800eff2:	b006      	add	sp, #24
 800eff4:	bd70      	pop	{r4, r5, r6, pc}

0800eff6 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800eff6:	b530      	push	{r4, r5, lr}
 800eff8:	4602      	mov	r2, r0
 800effa:	b085      	sub	sp, #20
 800effc:	460d      	mov	r5, r1
 800effe:	466b      	mov	r3, sp
 800f000:	4604      	mov	r4, r0
 800f002:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f006:	6851      	ldr	r1, [r2, #4]
 800f008:	c303      	stmia	r3!, {r0, r1}
 800f00a:	4629      	mov	r1, r5
 800f00c:	4668      	mov	r0, sp
 800f00e:	f7fb fe2f 	bl	800ac70 <_ZN8touchgfx4RectaNERKS0_>
 800f012:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800f016:	b12b      	cbz	r3, 800f024 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800f018:	4669      	mov	r1, sp
 800f01a:	4620      	mov	r0, r4
 800f01c:	f7ff ffbf 	bl	800ef9e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f020:	b005      	add	sp, #20
 800f022:	bd30      	pop	{r4, r5, pc}
 800f024:	3404      	adds	r4, #4
 800f026:	4621      	mov	r1, r4
 800f028:	a802      	add	r0, sp, #8
 800f02a:	f7ff f933 	bl	800e294 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f02e:	f8bd 3000 	ldrh.w	r3, [sp]
 800f032:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f036:	4669      	mov	r1, sp
 800f038:	1a9b      	subs	r3, r3, r2
 800f03a:	f8ad 3000 	strh.w	r3, [sp]
 800f03e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800f042:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f046:	4620      	mov	r0, r4
 800f048:	1a9b      	subs	r3, r3, r2
 800f04a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f04e:	f7fb feae 	bl	800adae <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f052:	e7e5      	b.n	800f020 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800f054 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f054:	460b      	mov	r3, r1
 800f056:	680a      	ldr	r2, [r1, #0]
 800f058:	1d01      	adds	r1, r0, #4
 800f05a:	6992      	ldr	r2, [r2, #24]
 800f05c:	4618      	mov	r0, r3
 800f05e:	4710      	bx	r2

0800f060 <_ZN8touchgfx12TextProviderC1Ev>:
 800f060:	b538      	push	{r3, r4, r5, lr}
 800f062:	2500      	movs	r5, #0
 800f064:	2302      	movs	r3, #2
 800f066:	4604      	mov	r4, r0
 800f068:	e9c0 5500 	strd	r5, r5, [r0]
 800f06c:	7403      	strb	r3, [r0, #16]
 800f06e:	6145      	str	r5, [r0, #20]
 800f070:	7605      	strb	r5, [r0, #24]
 800f072:	83c5      	strh	r5, [r0, #30]
 800f074:	8405      	strh	r5, [r0, #32]
 800f076:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800f078:	8705      	strh	r5, [r0, #56]	@ 0x38
 800f07a:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 800f07c:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 800f080:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 800f084:	220e      	movs	r2, #14
 800f086:	4629      	mov	r1, r5
 800f088:	304c      	adds	r0, #76	@ 0x4c
 800f08a:	f023 fc3c 	bl	8032906 <memset>
 800f08e:	2301      	movs	r3, #1
 800f090:	4620      	mov	r0, r4
 800f092:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 800f096:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f09a:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 800f09e:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 800f0a2:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 800f0a6:	f7f4 fb2f 	bl	8003708 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800f0aa:	4620      	mov	r0, r4
 800f0ac:	bd38      	pop	{r3, r4, r5, pc}

0800f0ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800f0ae:	b530      	push	{r4, r5, lr}
 800f0b0:	2500      	movs	r5, #0
 800f0b2:	2401      	movs	r4, #1
 800f0b4:	6843      	ldr	r3, [r0, #4]
 800f0b6:	b913      	cbnz	r3, 800f0be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800f0b8:	6803      	ldr	r3, [r0, #0]
 800f0ba:	b313      	cbz	r3, 800f102 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f0bc:	6043      	str	r3, [r0, #4]
 800f0be:	7e03      	ldrb	r3, [r0, #24]
 800f0c0:	b143      	cbz	r3, 800f0d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800f0c2:	6943      	ldr	r3, [r0, #20]
 800f0c4:	b12b      	cbz	r3, 800f0d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f0c6:	881a      	ldrh	r2, [r3, #0]
 800f0c8:	b11a      	cbz	r2, 800f0d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f0ca:	1c9a      	adds	r2, r3, #2
 800f0cc:	6142      	str	r2, [r0, #20]
 800f0ce:	8818      	ldrh	r0, [r3, #0]
 800f0d0:	bd30      	pop	{r4, r5, pc}
 800f0d2:	7605      	strb	r5, [r0, #24]
 800f0d4:	6843      	ldr	r3, [r0, #4]
 800f0d6:	8819      	ldrh	r1, [r3, #0]
 800f0d8:	b199      	cbz	r1, 800f102 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f0da:	1c9a      	adds	r2, r3, #2
 800f0dc:	2902      	cmp	r1, #2
 800f0de:	6042      	str	r2, [r0, #4]
 800f0e0:	d1f5      	bne.n	800f0ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800f0e2:	7c03      	ldrb	r3, [r0, #16]
 800f0e4:	2b01      	cmp	r3, #1
 800f0e6:	d8e5      	bhi.n	800f0b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f0e8:	1c5a      	adds	r2, r3, #1
 800f0ea:	7402      	strb	r2, [r0, #16]
 800f0ec:	3302      	adds	r3, #2
 800f0ee:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800f0f2:	6143      	str	r3, [r0, #20]
 800f0f4:	2b00      	cmp	r3, #0
 800f0f6:	d0dd      	beq.n	800f0b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f0f8:	881b      	ldrh	r3, [r3, #0]
 800f0fa:	2b00      	cmp	r3, #0
 800f0fc:	d0da      	beq.n	800f0b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f0fe:	7604      	strb	r4, [r0, #24]
 800f100:	e7d8      	b.n	800f0b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f102:	2000      	movs	r0, #0
 800f104:	e7e4      	b.n	800f0d0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800f106 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800f106:	6001      	str	r1, [r0, #0]
 800f108:	2100      	movs	r1, #0
 800f10a:	b430      	push	{r4, r5}
 800f10c:	6041      	str	r1, [r0, #4]
 800f10e:	6815      	ldr	r5, [r2, #0]
 800f110:	6085      	str	r5, [r0, #8]
 800f112:	6852      	ldr	r2, [r2, #4]
 800f114:	6443      	str	r3, [r0, #68]	@ 0x44
 800f116:	9b02      	ldr	r3, [sp, #8]
 800f118:	60c2      	str	r2, [r0, #12]
 800f11a:	7401      	strb	r1, [r0, #16]
 800f11c:	6141      	str	r1, [r0, #20]
 800f11e:	7601      	strb	r1, [r0, #24]
 800f120:	8701      	strh	r1, [r0, #56]	@ 0x38
 800f122:	8401      	strh	r1, [r0, #32]
 800f124:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 800f128:	6483      	str	r3, [r0, #72]	@ 0x48
 800f12a:	bc30      	pop	{r4, r5}
 800f12c:	f7f4 baec 	b.w	8003708 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800f130 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800f130:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f132:	4605      	mov	r5, r0
 800f134:	4608      	mov	r0, r1
 800f136:	b1e9      	cbz	r1, 800f174 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800f138:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 800f13c:	460b      	mov	r3, r1
 800f13e:	4622      	mov	r2, r4
 800f140:	f101 0708 	add.w	r7, r1, #8
 800f144:	4626      	mov	r6, r4
 800f146:	6818      	ldr	r0, [r3, #0]
 800f148:	6859      	ldr	r1, [r3, #4]
 800f14a:	3308      	adds	r3, #8
 800f14c:	c603      	stmia	r6!, {r0, r1}
 800f14e:	42bb      	cmp	r3, r7
 800f150:	4634      	mov	r4, r6
 800f152:	d1f7      	bne.n	800f144 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800f154:	6818      	ldr	r0, [r3, #0]
 800f156:	6030      	str	r0, [r6, #0]
 800f158:	4610      	mov	r0, r2
 800f15a:	889b      	ldrh	r3, [r3, #4]
 800f15c:	80b3      	strh	r3, [r6, #4]
 800f15e:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 800f162:	015b      	lsls	r3, r3, #5
 800f164:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f168:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 800f16c:	430b      	orrs	r3, r1
 800f16e:	425b      	negs	r3, r3
 800f170:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 800f174:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f176 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800f176:	b538      	push	{r3, r4, r5, lr}
 800f178:	460c      	mov	r4, r1
 800f17a:	6811      	ldr	r1, [r2, #0]
 800f17c:	4610      	mov	r0, r2
 800f17e:	68cd      	ldr	r5, [r1, #12]
 800f180:	4619      	mov	r1, r3
 800f182:	47a8      	blx	r5
 800f184:	2800      	cmp	r0, #0
 800f186:	bf08      	it	eq
 800f188:	4620      	moveq	r0, r4
 800f18a:	bd38      	pop	{r3, r4, r5, pc}

0800f18c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800f18c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f18e:	4604      	mov	r4, r0
 800f190:	4615      	mov	r5, r2
 800f192:	4608      	mov	r0, r1
 800f194:	b93a      	cbnz	r2, 800f1a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f196:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800f19a:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 800f19e:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 800f1a2:	4628      	mov	r0, r5
 800f1a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f1a6:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 800f1aa:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800f1ae:	8893      	ldrh	r3, [r2, #4]
 800f1b0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800f1b4:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800f1b8:	79ee      	ldrb	r6, [r5, #7]
 800f1ba:	4316      	orrs	r6, r2
 800f1bc:	19da      	adds	r2, r3, r7
 800f1be:	b291      	uxth	r1, r2
 800f1c0:	291d      	cmp	r1, #29
 800f1c2:	b2b7      	uxth	r7, r6
 800f1c4:	d879      	bhi.n	800f2ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x12e>
 800f1c6:	2201      	movs	r2, #1
 800f1c8:	408a      	lsls	r2, r1
 800f1ca:	4974      	ldr	r1, [pc, #464]	@ (800f39c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x210>)
 800f1cc:	10f6      	asrs	r6, r6, #3
 800f1ce:	420a      	tst	r2, r1
 800f1d0:	d12d      	bne.n	800f22e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa2>
 800f1d2:	f412 7f60 	tst.w	r2, #896	@ 0x380
 800f1d6:	d070      	beq.n	800f2ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x12e>
 800f1d8:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 800f1dc:	462b      	mov	r3, r5
 800f1de:	f105 0e08 	add.w	lr, r5, #8
 800f1e2:	4615      	mov	r5, r2
 800f1e4:	4694      	mov	ip, r2
 800f1e6:	6818      	ldr	r0, [r3, #0]
 800f1e8:	6859      	ldr	r1, [r3, #4]
 800f1ea:	3308      	adds	r3, #8
 800f1ec:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800f1f0:	4573      	cmp	r3, lr
 800f1f2:	4662      	mov	r2, ip
 800f1f4:	d1f6      	bne.n	800f1e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 800f1f6:	6818      	ldr	r0, [r3, #0]
 800f1f8:	f8cc 0000 	str.w	r0, [ip]
 800f1fc:	889b      	ldrh	r3, [r3, #4]
 800f1fe:	f8ac 3004 	strh.w	r3, [ip, #4]
 800f202:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 800f206:	b2b3      	uxth	r3, r6
 800f208:	1aca      	subs	r2, r1, r3
 800f20a:	b292      	uxth	r2, r2
 800f20c:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 800f210:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800f214:	10d2      	asrs	r2, r2, #3
 800f216:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 800f21a:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 800f21e:	4302      	orrs	r2, r0
 800f220:	1bcf      	subs	r7, r1, r7
 800f222:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 800f226:	1afb      	subs	r3, r7, r3
 800f228:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800f22c:	e7b9      	b.n	800f1a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f22e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800f230:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f234:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 800f236:	f640 6333 	movw	r3, #3635	@ 0xe33
 800f23a:	4299      	cmp	r1, r3
 800f23c:	d110      	bne.n	800f260 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd4>
 800f23e:	6803      	ldr	r3, [r0, #0]
 800f240:	68db      	ldr	r3, [r3, #12]
 800f242:	4798      	blx	r3
 800f244:	7b41      	ldrb	r1, [r0, #13]
 800f246:	00cb      	lsls	r3, r1, #3
 800f248:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f24c:	7a03      	ldrb	r3, [r0, #8]
 800f24e:	0648      	lsls	r0, r1, #25
 800f250:	ea43 0302 	orr.w	r3, r3, r2
 800f254:	bf44      	itt	mi
 800f256:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f25a:	b21b      	sxthmi	r3, r3
 800f25c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f260:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 800f264:	462a      	mov	r2, r5
 800f266:	443b      	add	r3, r7
 800f268:	4433      	add	r3, r6
 800f26a:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 800f26e:	f105 0c08 	add.w	ip, r5, #8
 800f272:	4635      	mov	r5, r6
 800f274:	b29b      	uxth	r3, r3
 800f276:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f27a:	4637      	mov	r7, r6
 800f27c:	6810      	ldr	r0, [r2, #0]
 800f27e:	6851      	ldr	r1, [r2, #4]
 800f280:	3208      	adds	r2, #8
 800f282:	c703      	stmia	r7!, {r0, r1}
 800f284:	4562      	cmp	r2, ip
 800f286:	463e      	mov	r6, r7
 800f288:	d1f7      	bne.n	800f27a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xee>
 800f28a:	6810      	ldr	r0, [r2, #0]
 800f28c:	6038      	str	r0, [r7, #0]
 800f28e:	8892      	ldrh	r2, [r2, #4]
 800f290:	80ba      	strh	r2, [r7, #4]
 800f292:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f296:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f29a:	10db      	asrs	r3, r3, #3
 800f29c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f2a0:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f2a4:	4313      	orrs	r3, r2
 800f2a6:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f2aa:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 800f2ae:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800f2b2:	1a9b      	subs	r3, r3, r2
 800f2b4:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 800f2b8:	e773      	b.n	800f1a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f2ba:	f640 611b 	movw	r1, #3611	@ 0xe1b
 800f2be:	f023 0204 	bic.w	r2, r3, #4
 800f2c2:	428a      	cmp	r2, r1
 800f2c4:	d003      	beq.n	800f2ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800f2c6:	f640 621d 	movw	r2, #3613	@ 0xe1d
 800f2ca:	4293      	cmp	r3, r2
 800f2cc:	d120      	bne.n	800f310 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x184>
 800f2ce:	3b01      	subs	r3, #1
 800f2d0:	4602      	mov	r2, r0
 800f2d2:	b29b      	uxth	r3, r3
 800f2d4:	4629      	mov	r1, r5
 800f2d6:	4620      	mov	r0, r4
 800f2d8:	f7ff ff4d 	bl	800f176 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f2dc:	7b41      	ldrb	r1, [r0, #13]
 800f2de:	00cb      	lsls	r3, r1, #3
 800f2e0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f2e4:	7a03      	ldrb	r3, [r0, #8]
 800f2e6:	0649      	lsls	r1, r1, #25
 800f2e8:	ea43 0302 	orr.w	r3, r3, r2
 800f2ec:	bf44      	itt	mi
 800f2ee:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f2f2:	b21b      	sxthmi	r3, r3
 800f2f4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f2f8:	7b6b      	ldrb	r3, [r5, #13]
 800f2fa:	7aaa      	ldrb	r2, [r5, #10]
 800f2fc:	005b      	lsls	r3, r3, #1
 800f2fe:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f302:	4313      	orrs	r3, r2
 800f304:	115a      	asrs	r2, r3, #5
 800f306:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800f30a:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800f30e:	e036      	b.n	800f37e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 800f310:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800f314:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 800f318:	7a2a      	ldrb	r2, [r5, #8]
 800f31a:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 800f31e:	ea42 0201 	orr.w	r2, r2, r1
 800f322:	f640 6109 	movw	r1, #3593	@ 0xe09
 800f326:	bf1c      	itt	ne
 800f328:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 800f32c:	b212      	sxthne	r2, r2
 800f32e:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800f332:	f023 0210 	bic.w	r2, r3, #16
 800f336:	428a      	cmp	r2, r1
 800f338:	d003      	beq.n	800f342 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 800f33a:	f640 6213 	movw	r2, #3603	@ 0xe13
 800f33e:	4293      	cmp	r3, r2
 800f340:	d12a      	bne.n	800f398 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20c>
 800f342:	7b6e      	ldrb	r6, [r5, #13]
 800f344:	4629      	mov	r1, r5
 800f346:	0076      	lsls	r6, r6, #1
 800f348:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800f34c:	7aae      	ldrb	r6, [r5, #10]
 800f34e:	4316      	orrs	r6, r2
 800f350:	f640 6213 	movw	r2, #3603	@ 0xe13
 800f354:	4293      	cmp	r3, r2
 800f356:	bf18      	it	ne
 800f358:	f103 33ff 	addne.w	r3, r3, #4294967295
 800f35c:	4602      	mov	r2, r0
 800f35e:	bf14      	ite	ne
 800f360:	b29b      	uxthne	r3, r3
 800f362:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 800f366:	4620      	mov	r0, r4
 800f368:	f7ff ff05 	bl	800f176 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f36c:	7b43      	ldrb	r3, [r0, #13]
 800f36e:	7a82      	ldrb	r2, [r0, #10]
 800f370:	005b      	lsls	r3, r3, #1
 800f372:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f376:	4313      	orrs	r3, r2
 800f378:	1af6      	subs	r6, r6, r3
 800f37a:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 800f37e:	7b69      	ldrb	r1, [r5, #13]
 800f380:	00cb      	lsls	r3, r1, #3
 800f382:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f386:	7a2b      	ldrb	r3, [r5, #8]
 800f388:	4313      	orrs	r3, r2
 800f38a:	064a      	lsls	r2, r1, #25
 800f38c:	bf44      	itt	mi
 800f38e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f392:	b21b      	sxthmi	r3, r3
 800f394:	1bdb      	subs	r3, r3, r7
 800f396:	e747      	b.n	800f228 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9c>
 800f398:	2300      	movs	r3, #0
 800f39a:	e7b6      	b.n	800f30a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x17e>
 800f39c:	3fc00079 	.word	0x3fc00079

0800f3a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800f3a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f3a4:	4604      	mov	r4, r0
 800f3a6:	b942      	cbnz	r2, 800f3ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800f3a8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800f3ac:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 800f3b0:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 800f3b4:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800f3b8:	e047      	b.n	800f44a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800f3ba:	7b51      	ldrb	r1, [r2, #13]
 800f3bc:	8893      	ldrh	r3, [r2, #4]
 800f3be:	010d      	lsls	r5, r1, #4
 800f3c0:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 800f3c4:	79d5      	ldrb	r5, [r2, #7]
 800f3c6:	4305      	orrs	r5, r0
 800f3c8:	2d04      	cmp	r5, #4
 800f3ca:	bfcc      	ite	gt
 800f3cc:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800f3d0:	f04f 0e01 	movle.w	lr, #1
 800f3d4:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 800f3d8:	f200 80ab 	bhi.w	800f532 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800f3dc:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 800f3e0:	4283      	cmp	r3, r0
 800f3e2:	d216      	bcs.n	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f3e4:	f240 605b 	movw	r0, #1627	@ 0x65b
 800f3e8:	4283      	cmp	r3, r0
 800f3ea:	d859      	bhi.n	800f4a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800f3ec:	f240 6057 	movw	r0, #1623	@ 0x657
 800f3f0:	4283      	cmp	r3, r0
 800f3f2:	d20e      	bcs.n	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f3f4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800f3f8:	d24a      	bcs.n	800f490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800f3fa:	f240 604e 	movw	r0, #1614	@ 0x64e
 800f3fe:	4283      	cmp	r3, r0
 800f400:	d207      	bcs.n	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f402:	f240 601a 	movw	r0, #1562	@ 0x61a
 800f406:	4283      	cmp	r3, r0
 800f408:	d02a      	beq.n	800f460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f40a:	d821      	bhi.n	800f450 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800f40c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 800f410:	d35b      	bcc.n	800f4ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f412:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 800f416:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f41a:	f040 80d0 	bne.w	800f5be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800f41e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 800f422:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f426:	f040 80ca 	bne.w	800f5be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800f42a:	00cb      	lsls	r3, r1, #3
 800f42c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f430:	7a13      	ldrb	r3, [r2, #8]
 800f432:	0649      	lsls	r1, r1, #25
 800f434:	ea43 0300 	orr.w	r3, r3, r0
 800f438:	bf44      	itt	mi
 800f43a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f43e:	b21b      	sxthmi	r3, r3
 800f440:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f444:	1b5d      	subs	r5, r3, r5
 800f446:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f44a:	4610      	mov	r0, r2
 800f44c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f450:	f240 604b 	movw	r0, #1611	@ 0x64b
 800f454:	4283      	cmp	r3, r0
 800f456:	d338      	bcc.n	800f4ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f458:	f240 604c 	movw	r0, #1612	@ 0x64c
 800f45c:	4283      	cmp	r3, r0
 800f45e:	d9d8      	bls.n	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f460:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 800f464:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 800f468:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f46c:	f040 80f2 	bne.w	800f654 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800f470:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f474:	f040 80ee 	bne.w	800f654 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800f478:	00cb      	lsls	r3, r1, #3
 800f47a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f47e:	7a13      	ldrb	r3, [r2, #8]
 800f480:	064e      	lsls	r6, r1, #25
 800f482:	ea43 0300 	orr.w	r3, r3, r0
 800f486:	bf44      	itt	mi
 800f488:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f48c:	b21b      	sxthmi	r3, r3
 800f48e:	e7d9      	b.n	800f444 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800f490:	f240 6054 	movw	r0, #1620	@ 0x654
 800f494:	4283      	cmp	r3, r0
 800f496:	d8e3      	bhi.n	800f460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f498:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800f49c:	d9e0      	bls.n	800f460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f49e:	e7b8      	b.n	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4a0:	f240 6074 	movw	r0, #1652	@ 0x674
 800f4a4:	4283      	cmp	r3, r0
 800f4a6:	d0b4      	beq.n	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4a8:	d82d      	bhi.n	800f506 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800f4aa:	f240 605e 	movw	r0, #1630	@ 0x65e
 800f4ae:	4283      	cmp	r3, r0
 800f4b0:	d804      	bhi.n	800f4bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800f4b2:	f240 605d 	movw	r0, #1629	@ 0x65d
 800f4b6:	4283      	cmp	r3, r0
 800f4b8:	d3d2      	bcc.n	800f460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f4ba:	e7aa      	b.n	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4bc:	f240 605f 	movw	r0, #1631	@ 0x65f
 800f4c0:	4283      	cmp	r3, r0
 800f4c2:	d0cd      	beq.n	800f460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f4c4:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 800f4c8:	d0a3      	beq.n	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f4ca:	00cb      	lsls	r3, r1, #3
 800f4cc:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800f4d0:	7a13      	ldrb	r3, [r2, #8]
 800f4d2:	0649      	lsls	r1, r1, #25
 800f4d4:	ea43 0300 	orr.w	r3, r3, r0
 800f4d8:	bf44      	itt	mi
 800f4da:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f4de:	b21b      	sxthmi	r3, r3
 800f4e0:	1b5d      	subs	r5, r3, r5
 800f4e2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f4e6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f4ea:	7b53      	ldrb	r3, [r2, #13]
 800f4ec:	015b      	lsls	r3, r3, #5
 800f4ee:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f4f2:	7993      	ldrb	r3, [r2, #6]
 800f4f4:	430b      	orrs	r3, r1
 800f4f6:	2105      	movs	r1, #5
 800f4f8:	005b      	lsls	r3, r3, #1
 800f4fa:	fb93 f3f1 	sdiv	r3, r3, r1
 800f4fe:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800f502:	440b      	add	r3, r1
 800f504:	e756      	b.n	800f3b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800f506:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 800f50a:	4283      	cmp	r3, r0
 800f50c:	d809      	bhi.n	800f522 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800f50e:	f240 60df 	movw	r0, #1759	@ 0x6df
 800f512:	4283      	cmp	r3, r0
 800f514:	f4bf af7d 	bcs.w	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f518:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 800f51c:	2b05      	cmp	r3, #5
 800f51e:	d8d4      	bhi.n	800f4ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f520:	e777      	b.n	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f522:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 800f526:	4283      	cmp	r3, r0
 800f528:	d09a      	beq.n	800f460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f52a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 800f52e:	4283      	cmp	r3, r0
 800f530:	e7ca      	b.n	800f4c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800f532:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 800f536:	d22b      	bcs.n	800f590 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800f538:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 800f53c:	4283      	cmp	r3, r0
 800f53e:	d28f      	bcs.n	800f460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f540:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 800f544:	4283      	cmp	r3, r0
 800f546:	d816      	bhi.n	800f576 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800f548:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 800f54c:	4283      	cmp	r3, r0
 800f54e:	f4bf af60 	bcs.w	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f552:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 800f556:	4283      	cmp	r3, r0
 800f558:	d80a      	bhi.n	800f570 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800f55a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 800f55e:	4283      	cmp	r3, r0
 800f560:	f4bf af57 	bcs.w	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f564:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 800f568:	4283      	cmp	r3, r0
 800f56a:	f43f af79 	beq.w	800f460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f56e:	e7ac      	b.n	800f4ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800f570:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 800f574:	e7f8      	b.n	800f568 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800f576:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 800f57a:	4283      	cmp	r3, r0
 800f57c:	d802      	bhi.n	800f584 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800f57e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 800f582:	e798      	b.n	800f4b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800f584:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 800f588:	4283      	cmp	r3, r0
 800f58a:	f47f af42 	bne.w	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f58e:	e767      	b.n	800f460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f590:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 800f594:	4283      	cmp	r3, r0
 800f596:	f43f af63 	beq.w	800f460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f59a:	d802      	bhi.n	800f5a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800f59c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 800f5a0:	e7f2      	b.n	800f588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800f5a2:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 800f5a6:	4283      	cmp	r3, r0
 800f5a8:	d805      	bhi.n	800f5b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800f5aa:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 800f5ae:	4283      	cmp	r3, r0
 800f5b0:	f4ff af2f 	bcc.w	800f412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800f5b4:	e754      	b.n	800f460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800f5b6:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 800f5ba:	4283      	cmp	r3, r0
 800f5bc:	e7af      	b.n	800f51e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800f5be:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800f5c2:	4617      	mov	r7, r2
 800f5c4:	4666      	mov	r6, ip
 800f5c6:	f102 0808 	add.w	r8, r2, #8
 800f5ca:	46e6      	mov	lr, ip
 800f5cc:	6838      	ldr	r0, [r7, #0]
 800f5ce:	6879      	ldr	r1, [r7, #4]
 800f5d0:	3708      	adds	r7, #8
 800f5d2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800f5d6:	4547      	cmp	r7, r8
 800f5d8:	46f4      	mov	ip, lr
 800f5da:	d1f6      	bne.n	800f5ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800f5dc:	6838      	ldr	r0, [r7, #0]
 800f5de:	f8ce 0000 	str.w	r0, [lr]
 800f5e2:	88b9      	ldrh	r1, [r7, #4]
 800f5e4:	f8ae 1004 	strh.w	r1, [lr, #4]
 800f5e8:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800f5ec:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f5f0:	d009      	beq.n	800f606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 800f5f2:	7b51      	ldrb	r1, [r2, #13]
 800f5f4:	7992      	ldrb	r2, [r2, #6]
 800f5f6:	0149      	lsls	r1, r1, #5
 800f5f8:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800f5fc:	4311      	orrs	r1, r2
 800f5fe:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800f602:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800f606:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f60a:	b2ad      	uxth	r5, r5
 800f60c:	d00d      	beq.n	800f62a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 800f60e:	442b      	add	r3, r5
 800f610:	b29b      	uxth	r3, r3
 800f612:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f616:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f61a:	10db      	asrs	r3, r3, #3
 800f61c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f620:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f624:	4313      	orrs	r3, r2
 800f626:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f62a:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800f62e:	00cb      	lsls	r3, r1, #3
 800f630:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f634:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800f638:	064f      	lsls	r7, r1, #25
 800f63a:	ea43 0302 	orr.w	r3, r3, r2
 800f63e:	bf44      	itt	mi
 800f640:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f644:	b21b      	sxthmi	r3, r3
 800f646:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f64a:	1b5b      	subs	r3, r3, r5
 800f64c:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800f650:	4632      	mov	r2, r6
 800f652:	e6fa      	b.n	800f44a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800f654:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800f658:	4617      	mov	r7, r2
 800f65a:	4666      	mov	r6, ip
 800f65c:	f102 0908 	add.w	r9, r2, #8
 800f660:	46e0      	mov	r8, ip
 800f662:	6838      	ldr	r0, [r7, #0]
 800f664:	6879      	ldr	r1, [r7, #4]
 800f666:	3708      	adds	r7, #8
 800f668:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800f66c:	454f      	cmp	r7, r9
 800f66e:	46c4      	mov	ip, r8
 800f670:	d1f6      	bne.n	800f660 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 800f672:	6838      	ldr	r0, [r7, #0]
 800f674:	f8c8 0000 	str.w	r0, [r8]
 800f678:	88b9      	ldrh	r1, [r7, #4]
 800f67a:	f8a8 1004 	strh.w	r1, [r8, #4]
 800f67e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800f682:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f686:	d009      	beq.n	800f69c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 800f688:	7b51      	ldrb	r1, [r2, #13]
 800f68a:	7992      	ldrb	r2, [r2, #6]
 800f68c:	0149      	lsls	r1, r1, #5
 800f68e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800f692:	4311      	orrs	r1, r2
 800f694:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800f698:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800f69c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f6a0:	d00e      	beq.n	800f6c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 800f6a2:	eba3 030e 	sub.w	r3, r3, lr
 800f6a6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f6aa:	b29b      	uxth	r3, r3
 800f6ac:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f6b0:	10db      	asrs	r3, r3, #3
 800f6b2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f6b6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f6ba:	4313      	orrs	r3, r2
 800f6bc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f6c0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800f6c4:	00cb      	lsls	r3, r1, #3
 800f6c6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f6ca:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800f6ce:	0648      	lsls	r0, r1, #25
 800f6d0:	ea43 0302 	orr.w	r3, r3, r2
 800f6d4:	bf44      	itt	mi
 800f6d6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f6da:	b21b      	sxthmi	r3, r3
 800f6dc:	1b5d      	subs	r5, r3, r5
 800f6de:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f6e2:	e7b5      	b.n	800f650 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0800f6e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800f6e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f6e8:	461e      	mov	r6, r3
 800f6ea:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f6ec:	4604      	mov	r4, r0
 800f6ee:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800f6f2:	4617      	mov	r7, r2
 800f6f4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800f6f8:	f7f3 ffc4 	bl	8003684 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f6fc:	4605      	mov	r5, r0
 800f6fe:	b918      	cbnz	r0, 800f708 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800f700:	6030      	str	r0, [r6, #0]
 800f702:	4628      	mov	r0, r5
 800f704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f708:	683b      	ldr	r3, [r7, #0]
 800f70a:	4601      	mov	r1, r0
 800f70c:	68db      	ldr	r3, [r3, #12]
 800f70e:	4638      	mov	r0, r7
 800f710:	4798      	blx	r3
 800f712:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 800f716:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800f71a:	4602      	mov	r2, r0
 800f71c:	6030      	str	r0, [r6, #0]
 800f71e:	d213      	bcs.n	800f748 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800f720:	4643      	mov	r3, r8
 800f722:	4639      	mov	r1, r7
 800f724:	4620      	mov	r0, r4
 800f726:	f7ff fe3b 	bl	800f3a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800f72a:	6030      	str	r0, [r6, #0]
 800f72c:	6833      	ldr	r3, [r6, #0]
 800f72e:	b143      	cbz	r3, 800f742 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800f730:	7b5a      	ldrb	r2, [r3, #13]
 800f732:	7a9b      	ldrb	r3, [r3, #10]
 800f734:	0052      	lsls	r2, r2, #1
 800f736:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800f73a:	4313      	orrs	r3, r2
 800f73c:	bf0c      	ite	eq
 800f73e:	2301      	moveq	r3, #1
 800f740:	2300      	movne	r3, #0
 800f742:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 800f746:	e7dc      	b.n	800f702 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800f748:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 800f74c:	b29b      	uxth	r3, r3
 800f74e:	2b7f      	cmp	r3, #127	@ 0x7f
 800f750:	d804      	bhi.n	800f75c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800f752:	4639      	mov	r1, r7
 800f754:	4620      	mov	r0, r4
 800f756:	f7ff fd19 	bl	800f18c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800f75a:	e7e6      	b.n	800f72a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800f75c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 800f760:	2b00      	cmp	r3, #0
 800f762:	d0e3      	beq.n	800f72c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800f764:	f640 1302 	movw	r3, #2306	@ 0x902
 800f768:	429d      	cmp	r5, r3
 800f76a:	d1df      	bne.n	800f72c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800f76c:	4601      	mov	r1, r0
 800f76e:	4620      	mov	r0, r4
 800f770:	f7ff fcde 	bl	800f130 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f774:	e7d9      	b.n	800f72a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800f776 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800f776:	b510      	push	{r4, lr}
 800f778:	4604      	mov	r4, r0
 800f77a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800f77e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f780:	b1f1      	cbz	r1, 800f7c0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800f782:	2b0a      	cmp	r3, #10
 800f784:	d02f      	beq.n	800f7e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800f786:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800f788:	3901      	subs	r1, #1
 800f78a:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800f78e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 800f790:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 800f794:	1c51      	adds	r1, r2, #1
 800f796:	b289      	uxth	r1, r1
 800f798:	2901      	cmp	r1, #1
 800f79a:	bf84      	itt	hi
 800f79c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800f7a0:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 800f7a2:	f103 0201 	add.w	r2, r3, #1
 800f7a6:	8722      	strh	r2, [r4, #56]	@ 0x38
 800f7a8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800f7aa:	bf98      	it	ls
 800f7ac:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 800f7ae:	4413      	add	r3, r2
 800f7b0:	b29b      	uxth	r3, r3
 800f7b2:	2b09      	cmp	r3, #9
 800f7b4:	bf88      	it	hi
 800f7b6:	3b0a      	subhi	r3, #10
 800f7b8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f7bc:	8458      	strh	r0, [r3, #34]	@ 0x22
 800f7be:	e7dc      	b.n	800f77a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800f7c0:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f7c2:	2b0a      	cmp	r3, #10
 800f7c4:	d00f      	beq.n	800f7e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800f7c6:	4620      	mov	r0, r4
 800f7c8:	f7ff fc71 	bl	800f0ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800f7cc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f7ce:	1c5a      	adds	r2, r3, #1
 800f7d0:	8722      	strh	r2, [r4, #56]	@ 0x38
 800f7d2:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800f7d4:	4413      	add	r3, r2
 800f7d6:	b29b      	uxth	r3, r3
 800f7d8:	2b09      	cmp	r3, #9
 800f7da:	bf88      	it	hi
 800f7dc:	3b0a      	subhi	r3, #10
 800f7de:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f7e2:	8458      	strh	r0, [r3, #34]	@ 0x22
 800f7e4:	e7ec      	b.n	800f7c0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800f7e6:	bd10      	pop	{r4, pc}

0800f7e8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800f7e8:	b538      	push	{r3, r4, r5, lr}
 800f7ea:	4604      	mov	r4, r0
 800f7ec:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f7ee:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 800f7f2:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 800f7f4:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 800f7f6:	3a01      	subs	r2, #1
 800f7f8:	8702      	strh	r2, [r0, #56]	@ 0x38
 800f7fa:	1c5a      	adds	r2, r3, #1
 800f7fc:	b292      	uxth	r2, r2
 800f7fe:	2a09      	cmp	r2, #9
 800f800:	bf86      	itte	hi
 800f802:	3b09      	subhi	r3, #9
 800f804:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 800f806:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 800f808:	f7ff ffb5 	bl	800f776 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f80c:	8c23      	ldrh	r3, [r4, #32]
 800f80e:	2b01      	cmp	r3, #1
 800f810:	bf9c      	itt	ls
 800f812:	3301      	addls	r3, #1
 800f814:	8423      	strhls	r3, [r4, #32]
 800f816:	8be3      	ldrh	r3, [r4, #30]
 800f818:	b90b      	cbnz	r3, 800f81e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 800f81a:	2302      	movs	r3, #2
 800f81c:	83e3      	strh	r3, [r4, #30]
 800f81e:	8be3      	ldrh	r3, [r4, #30]
 800f820:	4628      	mov	r0, r5
 800f822:	3b01      	subs	r3, #1
 800f824:	b29b      	uxth	r3, r3
 800f826:	83e3      	strh	r3, [r4, #30]
 800f828:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f82c:	8365      	strh	r5, [r4, #26]
 800f82e:	bd38      	pop	{r3, r4, r5, pc}

0800f830 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800f830:	428a      	cmp	r2, r1
 800f832:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f836:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 800f838:	d931      	bls.n	800f89e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 800f83a:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 800f83c:	1a54      	subs	r4, r2, r1
 800f83e:	19ee      	adds	r6, r5, r7
 800f840:	3e01      	subs	r6, #1
 800f842:	fa1f fe84 	uxth.w	lr, r4
 800f846:	b2b4      	uxth	r4, r6
 800f848:	eba4 090e 	sub.w	r9, r4, lr
 800f84c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 800f850:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 800f854:	fa1f f989 	uxth.w	r9, r9
 800f858:	2c09      	cmp	r4, #9
 800f85a:	4626      	mov	r6, r4
 800f85c:	bf88      	it	hi
 800f85e:	f1a4 060a 	subhi.w	r6, r4, #10
 800f862:	f1bc 0f00 	cmp.w	ip, #0
 800f866:	bf08      	it	eq
 800f868:	f04f 0c02 	moveq.w	ip, #2
 800f86c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 800f870:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f874:	3c01      	subs	r4, #1
 800f876:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 800f87a:	fa1f fc8c 	uxth.w	ip, ip
 800f87e:	b2a4      	uxth	r4, r4
 800f880:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 800f884:	454c      	cmp	r4, r9
 800f886:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 800f88a:	d1e5      	bne.n	800f858 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 800f88c:	eba5 050e 	sub.w	r5, r5, lr
 800f890:	eb0e 0408 	add.w	r4, lr, r8
 800f894:	8705      	strh	r5, [r0, #56]	@ 0x38
 800f896:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 800f89a:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 800f89e:	250a      	movs	r5, #10
 800f8a0:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 800f8a2:	1a64      	subs	r4, r4, r1
 800f8a4:	4439      	add	r1, r7
 800f8a6:	b289      	uxth	r1, r1
 800f8a8:	2909      	cmp	r1, #9
 800f8aa:	bf88      	it	hi
 800f8ac:	390a      	subhi	r1, #10
 800f8ae:	8704      	strh	r4, [r0, #56]	@ 0x38
 800f8b0:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800f8b2:	b18a      	cbz	r2, 800f8d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 800f8b4:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 800f8b6:	3a01      	subs	r2, #1
 800f8b8:	3101      	adds	r1, #1
 800f8ba:	b292      	uxth	r2, r2
 800f8bc:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800f8c0:	8701      	strh	r1, [r0, #56]	@ 0x38
 800f8c2:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800f8c4:	b901      	cbnz	r1, 800f8c8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 800f8c6:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800f8c8:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800f8ca:	3901      	subs	r1, #1
 800f8cc:	b289      	uxth	r1, r1
 800f8ce:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800f8d0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f8d4:	844c      	strh	r4, [r1, #34]	@ 0x22
 800f8d6:	e7ec      	b.n	800f8b2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 800f8d8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f8dc:	f7ff bf4b 	b.w	800f776 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800f8e0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f8e0:	b570      	push	{r4, r5, r6, lr}
 800f8e2:	2500      	movs	r5, #0
 800f8e4:	4295      	cmp	r5, r2
 800f8e6:	d011      	beq.n	800f90c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 800f8e8:	8bc4      	ldrh	r4, [r0, #30]
 800f8ea:	f831 6b02 	ldrh.w	r6, [r1], #2
 800f8ee:	4414      	add	r4, r2
 800f8f0:	3c01      	subs	r4, #1
 800f8f2:	1b64      	subs	r4, r4, r5
 800f8f4:	b2a4      	uxth	r4, r4
 800f8f6:	2c01      	cmp	r4, #1
 800f8f8:	bf88      	it	hi
 800f8fa:	3c02      	subhi	r4, #2
 800f8fc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800f900:	8b64      	ldrh	r4, [r4, #26]
 800f902:	42b4      	cmp	r4, r6
 800f904:	d117      	bne.n	800f936 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 800f906:	3501      	adds	r5, #1
 800f908:	b2ad      	uxth	r5, r5
 800f90a:	e7eb      	b.n	800f8e4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 800f90c:	2400      	movs	r4, #0
 800f90e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800f912:	4413      	add	r3, r2
 800f914:	b2a2      	uxth	r2, r4
 800f916:	429a      	cmp	r2, r3
 800f918:	da0f      	bge.n	800f93a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 800f91a:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 800f91c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800f920:	4432      	add	r2, r6
 800f922:	b292      	uxth	r2, r2
 800f924:	2a09      	cmp	r2, #9
 800f926:	bf88      	it	hi
 800f928:	3a0a      	subhi	r2, #10
 800f92a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800f92e:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 800f930:	3401      	adds	r4, #1
 800f932:	42aa      	cmp	r2, r5
 800f934:	d0ee      	beq.n	800f914 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 800f936:	2000      	movs	r0, #0
 800f938:	bd70      	pop	{r4, r5, r6, pc}
 800f93a:	2001      	movs	r0, #1
 800f93c:	e7fc      	b.n	800f938 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0800f93e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800f93e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f942:	4605      	mov	r5, r0
 800f944:	4616      	mov	r6, r2
 800f946:	1c8c      	adds	r4, r1, #2
 800f948:	8809      	ldrh	r1, [r1, #0]
 800f94a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800f94e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800f952:	42b3      	cmp	r3, r6
 800f954:	d124      	bne.n	800f9a0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800f956:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800f95a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800f95e:	f001 070f 	and.w	r7, r1, #15
 800f962:	f8cd 8000 	str.w	r8, [sp]
 800f966:	464b      	mov	r3, r9
 800f968:	4652      	mov	r2, sl
 800f96a:	4621      	mov	r1, r4
 800f96c:	4628      	mov	r0, r5
 800f96e:	f7ff ffb7 	bl	800f8e0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800f972:	4683      	mov	fp, r0
 800f974:	b168      	cbz	r0, 800f992 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800f976:	eb0a 0109 	add.w	r1, sl, r9
 800f97a:	4441      	add	r1, r8
 800f97c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800f980:	463a      	mov	r2, r7
 800f982:	4649      	mov	r1, r9
 800f984:	4628      	mov	r0, r5
 800f986:	f7ff ff53 	bl	800f830 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800f98a:	4658      	mov	r0, fp
 800f98c:	b003      	add	sp, #12
 800f98e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f992:	eb07 010a 	add.w	r1, r7, sl
 800f996:	4449      	add	r1, r9
 800f998:	4441      	add	r1, r8
 800f99a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800f99e:	e7d2      	b.n	800f946 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800f9a0:	f04f 0b00 	mov.w	fp, #0
 800f9a4:	e7f1      	b.n	800f98a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800f9a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f9a6:	b570      	push	{r4, r5, r6, lr}
 800f9a8:	8810      	ldrh	r0, [r2, #0]
 800f9aa:	4298      	cmp	r0, r3
 800f9ac:	d817      	bhi.n	800f9de <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f9ae:	1e48      	subs	r0, r1, #1
 800f9b0:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f9b4:	4298      	cmp	r0, r3
 800f9b6:	d312      	bcc.n	800f9de <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f9b8:	2400      	movs	r4, #0
 800f9ba:	428c      	cmp	r4, r1
 800f9bc:	d20f      	bcs.n	800f9de <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f9be:	1860      	adds	r0, r4, r1
 800f9c0:	1040      	asrs	r0, r0, #1
 800f9c2:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f9c6:	0085      	lsls	r5, r0, #2
 800f9c8:	42b3      	cmp	r3, r6
 800f9ca:	d902      	bls.n	800f9d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f9cc:	3001      	adds	r0, #1
 800f9ce:	b284      	uxth	r4, r0
 800f9d0:	e7f3      	b.n	800f9ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f9d2:	d201      	bcs.n	800f9d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800f9d4:	b281      	uxth	r1, r0
 800f9d6:	e7f0      	b.n	800f9ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f9d8:	442a      	add	r2, r5
 800f9da:	8850      	ldrh	r0, [r2, #2]
 800f9dc:	bd70      	pop	{r4, r5, r6, pc}
 800f9de:	2000      	movs	r0, #0
 800f9e0:	e7fc      	b.n	800f9dc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800f9e2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800f9e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f9e6:	4604      	mov	r4, r0
 800f9e8:	260b      	movs	r6, #11
 800f9ea:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 800f9ec:	886f      	ldrh	r7, [r5, #2]
 800f9ee:	087f      	lsrs	r7, r7, #1
 800f9f0:	3e01      	subs	r6, #1
 800f9f2:	d013      	beq.n	800fa1c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800f9f4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800f9f6:	462a      	mov	r2, r5
 800f9f8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f9fc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800fa00:	4639      	mov	r1, r7
 800fa02:	4643      	mov	r3, r8
 800fa04:	4620      	mov	r0, r4
 800fa06:	f7ff ffce 	bl	800f9a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800fa0a:	b138      	cbz	r0, 800fa1c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800fa0c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800fa10:	4642      	mov	r2, r8
 800fa12:	4620      	mov	r0, r4
 800fa14:	f7ff ff93 	bl	800f93e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800fa18:	2800      	cmp	r0, #0
 800fa1a:	d1e9      	bne.n	800f9f0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800fa1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fa20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800fa20:	b570      	push	{r4, r5, r6, lr}
 800fa22:	694a      	ldr	r2, [r1, #20]
 800fa24:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800fa26:	684b      	ldr	r3, [r1, #4]
 800fa28:	1b54      	subs	r4, r2, r5
 800fa2a:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 800fa2c:	f000 8107 	beq.w	800fc3e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21e>
 800fa30:	1b9b      	subs	r3, r3, r6
 800fa32:	d003      	beq.n	800fa3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800fa34:	2210      	movs	r2, #16
 800fa36:	4363      	muls	r3, r4
 800fa38:	fb93 f3f2 	sdiv	r3, r3, r2
 800fa3c:	680c      	ldr	r4, [r1, #0]
 800fa3e:	698a      	ldr	r2, [r1, #24]
 800fa40:	1b65      	subs	r5, r4, r5
 800fa42:	f000 80fe 	beq.w	800fc42 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x222>
 800fa46:	1b92      	subs	r2, r2, r6
 800fa48:	d003      	beq.n	800fa52 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800fa4a:	2410      	movs	r4, #16
 800fa4c:	436a      	muls	r2, r5
 800fa4e:	fb92 f2f4 	sdiv	r2, r2, r4
 800fa52:	1a9b      	subs	r3, r3, r2
 800fa54:	ee07 3a90 	vmov	s15, r3
 800fa58:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 800fc80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x260>
 800fa5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fa60:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800fa64:	ee67 7a84 	vmul.f32	s15, s15, s8
 800fa68:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800fa6c:	460a      	mov	r2, r1
 800fa6e:	eeb1 6a43 	vneg.f32	s12, s6
 800fa72:	4603      	mov	r3, r0
 800fa74:	f100 040c 	add.w	r4, r0, #12
 800fa78:	edd2 7a02 	vldr	s15, [r2, #8]
 800fa7c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800fa80:	ece3 6a01 	vstmia	r3!, {s13}
 800fa84:	edd2 7a03 	vldr	s15, [r2, #12]
 800fa88:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fa8c:	edc3 7a02 	vstr	s15, [r3, #8]
 800fa90:	edd2 7a04 	vldr	s15, [r2, #16]
 800fa94:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fa98:	429c      	cmp	r4, r3
 800fa9a:	edc3 7a05 	vstr	s15, [r3, #20]
 800fa9e:	f102 0214 	add.w	r2, r2, #20
 800faa2:	d1e9      	bne.n	800fa78 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800faa4:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800faa6:	698b      	ldr	r3, [r1, #24]
 800faa8:	edd0 4a02 	vldr	s9, [r0, #8]
 800faac:	1a9b      	subs	r3, r3, r2
 800faae:	ee07 3a90 	vmov	s15, r3
 800fab2:	684b      	ldr	r3, [r1, #4]
 800fab4:	edd0 3a00 	vldr	s7, [r0]
 800fab8:	1a9b      	subs	r3, r3, r2
 800faba:	edd0 6a01 	vldr	s13, [r0, #4]
 800fabe:	ee07 3a10 	vmov	s14, r3
 800fac2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fac6:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800faca:	ee67 7a84 	vmul.f32	s15, s15, s8
 800face:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800fad2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fad6:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800fada:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fade:	eee6 7a87 	vfma.f32	s15, s13, s14
 800fae2:	ee67 7a83 	vmul.f32	s15, s15, s6
 800fae6:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 800faea:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800faec:	694a      	ldr	r2, [r1, #20]
 800faee:	ed90 5a05 	vldr	s10, [r0, #20]
 800faf2:	1b13      	subs	r3, r2, r4
 800faf4:	ee07 3a10 	vmov	s14, r3
 800faf8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fafc:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb00:	680b      	ldr	r3, [r1, #0]
 800fb02:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800fb06:	1b1b      	subs	r3, r3, r4
 800fb08:	ee07 3a10 	vmov	s14, r3
 800fb0c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb10:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb14:	eee6 4a87 	vfma.f32	s9, s13, s14
 800fb18:	ee64 4a86 	vmul.f32	s9, s9, s12
 800fb1c:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 800fb20:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fb22:	698b      	ldr	r3, [r1, #24]
 800fb24:	ed90 2a03 	vldr	s4, [r0, #12]
 800fb28:	1a9b      	subs	r3, r3, r2
 800fb2a:	ee06 3a90 	vmov	s13, r3
 800fb2e:	684b      	ldr	r3, [r1, #4]
 800fb30:	edd0 5a04 	vldr	s11, [r0, #16]
 800fb34:	1a9b      	subs	r3, r3, r2
 800fb36:	ee07 3a10 	vmov	s14, r3
 800fb3a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800fb3e:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800fb42:	ee66 6a84 	vmul.f32	s13, s13, s8
 800fb46:	ee32 5a45 	vsub.f32	s10, s4, s10
 800fb4a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb4e:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800fb52:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb56:	eee5 6a87 	vfma.f32	s13, s11, s14
 800fb5a:	ee66 6a83 	vmul.f32	s13, s13, s6
 800fb5e:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 800fb62:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800fb64:	694a      	ldr	r2, [r1, #20]
 800fb66:	ed90 1a07 	vldr	s2, [r0, #28]
 800fb6a:	1b13      	subs	r3, r2, r4
 800fb6c:	ee07 3a10 	vmov	s14, r3
 800fb70:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb74:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb78:	680b      	ldr	r3, [r1, #0]
 800fb7a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800fb7e:	1b1b      	subs	r3, r3, r4
 800fb80:	ee07 3a10 	vmov	s14, r3
 800fb84:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fb88:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fb8c:	eea5 5a87 	vfma.f32	s10, s11, s14
 800fb90:	ee25 5a06 	vmul.f32	s10, s10, s12
 800fb94:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 800fb98:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fb9a:	698b      	ldr	r3, [r1, #24]
 800fb9c:	edd0 5a08 	vldr	s11, [r0, #32]
 800fba0:	1a9b      	subs	r3, r3, r2
 800fba2:	ee07 3a10 	vmov	s14, r3
 800fba6:	684b      	ldr	r3, [r1, #4]
 800fba8:	edd0 2a06 	vldr	s5, [r0, #24]
 800fbac:	1a9b      	subs	r3, r3, r2
 800fbae:	ee01 3a90 	vmov	s3, r3
 800fbb2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fbb6:	ee31 1a65 	vsub.f32	s2, s2, s11
 800fbba:	ee27 7a04 	vmul.f32	s14, s14, s8
 800fbbe:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800fbc2:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800fbc6:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800fbca:	ee61 1a84 	vmul.f32	s3, s3, s8
 800fbce:	eea1 7a21 	vfma.f32	s14, s2, s3
 800fbd2:	ee27 7a03 	vmul.f32	s14, s14, s6
 800fbd6:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800fbda:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800fbdc:	694a      	ldr	r2, [r1, #20]
 800fbde:	1b13      	subs	r3, r2, r4
 800fbe0:	ee03 3a10 	vmov	s6, r3
 800fbe4:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800fbe8:	ee23 3a04 	vmul.f32	s6, s6, s8
 800fbec:	680b      	ldr	r3, [r1, #0]
 800fbee:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800fbf2:	1b1b      	subs	r3, r3, r4
 800fbf4:	ee03 3a10 	vmov	s6, r3
 800fbf8:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800fbfc:	ee23 4a04 	vmul.f32	s8, s6, s8
 800fc00:	eee1 5a04 	vfma.f32	s11, s2, s8
 800fc04:	ee25 6a86 	vmul.f32	s12, s11, s12
 800fc08:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800fc0c:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800fc10:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800fc14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc18:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 800fc1c:	dd13      	ble.n	800fc46 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800fc1e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fc22:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800fc26:	eee3 7a87 	vfma.f32	s15, s7, s14
 800fc2a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800fc2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc32:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800fc34:	dd15      	ble.n	800fc62 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800fc36:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fc3a:	6403      	str	r3, [r0, #64]	@ 0x40
 800fc3c:	bd70      	pop	{r4, r5, r6, pc}
 800fc3e:	4623      	mov	r3, r4
 800fc40:	e6fc      	b.n	800fa3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800fc42:	462a      	mov	r2, r5
 800fc44:	e705      	b.n	800fa52 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800fc46:	d502      	bpl.n	800fc4e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22e>
 800fc48:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800fc4c:	e7e9      	b.n	800fc22 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x202>
 800fc4e:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800fc52:	eea3 2a85 	vfma.f32	s4, s7, s10
 800fc56:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800fc5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc5e:	dade      	bge.n	800fc1e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fe>
 800fc60:	e7f2      	b.n	800fc48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x228>
 800fc62:	d502      	bpl.n	800fc6a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x24a>
 800fc64:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800fc68:	e7e7      	b.n	800fc3a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21a>
 800fc6a:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800fc6e:	eee3 4a86 	vfma.f32	s9, s7, s12
 800fc72:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800fc76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc7a:	dadc      	bge.n	800fc36 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x216>
 800fc7c:	e7f2      	b.n	800fc64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x244>
 800fc7e:	bf00      	nop
 800fc80:	3d800000 	.word	0x3d800000

0800fc84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800fc84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fc88:	2714      	movs	r7, #20
 800fc8a:	435f      	muls	r7, r3
 800fc8c:	eb02 0c07 	add.w	ip, r2, r7
 800fc90:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800fc94:	f115 0e0f 	adds.w	lr, r5, #15
 800fc98:	f100 80a2 	bmi.w	800fde0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800fc9c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800fca0:	2614      	movs	r6, #20
 800fca2:	9c08      	ldr	r4, [sp, #32]
 800fca4:	f8c0 e014 	str.w	lr, [r0, #20]
 800fca8:	4366      	muls	r6, r4
 800fcaa:	eb02 0806 	add.w	r8, r2, r6
 800fcae:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800fcb2:	f115 040f 	adds.w	r4, r5, #15
 800fcb6:	f100 809f 	bmi.w	800fdf8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 800fcba:	1124      	asrs	r4, r4, #4
 800fcbc:	eba4 040e 	sub.w	r4, r4, lr
 800fcc0:	6184      	str	r4, [r0, #24]
 800fcc2:	2c00      	cmp	r4, #0
 800fcc4:	f000 808a 	beq.w	800fddc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 800fcc8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800fccc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800fcd0:	5995      	ldr	r5, [r2, r6]
 800fcd2:	eba4 0809 	sub.w	r8, r4, r9
 800fcd6:	59d4      	ldr	r4, [r2, r7]
 800fcd8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800fcdc:	eba5 0a04 	sub.w	sl, r5, r4
 800fce0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800fce4:	fb0e fe05 	mul.w	lr, lr, r5
 800fce8:	fb0a ee19 	mls	lr, sl, r9, lr
 800fcec:	fb08 e404 	mla	r4, r8, r4, lr
 800fcf0:	3c01      	subs	r4, #1
 800fcf2:	19a4      	adds	r4, r4, r6
 800fcf4:	f100 808c 	bmi.w	800fe10 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 800fcf8:	fb94 fef6 	sdiv	lr, r4, r6
 800fcfc:	fb06 441e 	mls	r4, r6, lr, r4
 800fd00:	f8c0 e000 	str.w	lr, [r0]
 800fd04:	6104      	str	r4, [r0, #16]
 800fd06:	2d00      	cmp	r5, #0
 800fd08:	f2c0 8095 	blt.w	800fe36 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 800fd0c:	fb95 f4f6 	sdiv	r4, r5, r6
 800fd10:	fb06 5514 	mls	r5, r6, r4, r5
 800fd14:	6044      	str	r4, [r0, #4]
 800fd16:	6085      	str	r5, [r0, #8]
 800fd18:	60c6      	str	r6, [r0, #12]
 800fd1a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800fd1e:	6945      	ldr	r5, [r0, #20]
 800fd20:	59d2      	ldr	r2, [r2, r7]
 800fd22:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800fd26:	ee07 4a10 	vmov	s14, r4
 800fd2a:	6804      	ldr	r4, [r0, #0]
 800fd2c:	eddf 6a4a 	vldr	s13, [pc, #296]	@ 800fe58 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 800fd30:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800fd34:	ee07 2a90 	vmov	s15, r2
 800fd38:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fd3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fd40:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800fd44:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800fd48:	ee27 7a26 	vmul.f32	s14, s14, s13
 800fd4c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fd50:	edd3 6a00 	vldr	s13, [r3]
 800fd54:	eee6 6a07 	vfma.f32	s13, s12, s14
 800fd58:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 800fd5c:	eee6 6a27 	vfma.f32	s13, s12, s15
 800fd60:	edc0 6a07 	vstr	s13, [r0, #28]
 800fd64:	edd0 6a01 	vldr	s13, [r0, #4]
 800fd68:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 800fd6c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800fd70:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800fd74:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800fd78:	ed80 6a08 	vstr	s12, [r0, #32]
 800fd7c:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 800fd7e:	6242      	str	r2, [r0, #36]	@ 0x24
 800fd80:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 800fd84:	ed93 6a03 	vldr	s12, [r3, #12]
 800fd88:	eea5 6a87 	vfma.f32	s12, s11, s14
 800fd8c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800fd90:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800fd94:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 800fd98:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800fd9c:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 800fda0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800fda4:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 800fda8:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800fdaa:	6302      	str	r2, [r0, #48]	@ 0x30
 800fdac:	ed93 6a06 	vldr	s12, [r3, #24]
 800fdb0:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 800fdb4:	eea5 6a87 	vfma.f32	s12, s11, s14
 800fdb8:	eeb0 7a46 	vmov.f32	s14, s12
 800fdbc:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 800fdc0:	eea6 7a27 	vfma.f32	s14, s12, s15
 800fdc4:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800fdc8:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 800fdcc:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 800fdd0:	eee6 7a87 	vfma.f32	s15, s13, s14
 800fdd4:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 800fdd8:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 800fdda:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800fddc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fde0:	2410      	movs	r4, #16
 800fde2:	f1c5 0501 	rsb	r5, r5, #1
 800fde6:	f015 050f 	ands.w	r5, r5, #15
 800fdea:	fb9e fef4 	sdiv	lr, lr, r4
 800fdee:	bf18      	it	ne
 800fdf0:	2501      	movne	r5, #1
 800fdf2:	ebae 0e05 	sub.w	lr, lr, r5
 800fdf6:	e753      	b.n	800fca0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 800fdf8:	f04f 0910 	mov.w	r9, #16
 800fdfc:	f1c5 0501 	rsb	r5, r5, #1
 800fe00:	f015 050f 	ands.w	r5, r5, #15
 800fe04:	fb94 f4f9 	sdiv	r4, r4, r9
 800fe08:	bf18      	it	ne
 800fe0a:	2501      	movne	r5, #1
 800fe0c:	1b64      	subs	r4, r4, r5
 800fe0e:	e755      	b.n	800fcbc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 800fe10:	4264      	negs	r4, r4
 800fe12:	fb94 fef6 	sdiv	lr, r4, r6
 800fe16:	fb06 441e 	mls	r4, r6, lr, r4
 800fe1a:	f1ce 0800 	rsb	r8, lr, #0
 800fe1e:	f8c0 8000 	str.w	r8, [r0]
 800fe22:	6104      	str	r4, [r0, #16]
 800fe24:	2c00      	cmp	r4, #0
 800fe26:	f43f af6e 	beq.w	800fd06 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 800fe2a:	ea6f 0e0e 	mvn.w	lr, lr
 800fe2e:	1b34      	subs	r4, r6, r4
 800fe30:	f8c0 e000 	str.w	lr, [r0]
 800fe34:	e766      	b.n	800fd04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 800fe36:	426d      	negs	r5, r5
 800fe38:	fb95 f4f6 	sdiv	r4, r5, r6
 800fe3c:	fb06 5514 	mls	r5, r6, r4, r5
 800fe40:	f1c4 0e00 	rsb	lr, r4, #0
 800fe44:	f8c0 e004 	str.w	lr, [r0, #4]
 800fe48:	6085      	str	r5, [r0, #8]
 800fe4a:	2d00      	cmp	r5, #0
 800fe4c:	f43f af64 	beq.w	800fd18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800fe50:	43e4      	mvns	r4, r4
 800fe52:	1b75      	subs	r5, r6, r5
 800fe54:	6044      	str	r4, [r0, #4]
 800fe56:	e75e      	b.n	800fd16 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 800fe58:	3d800000 	.word	0x3d800000

0800fe5c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800fe5c:	4b01      	ldr	r3, [pc, #4]	@ (800fe64 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800fe5e:	6018      	str	r0, [r3, #0]
 800fe60:	4770      	bx	lr
 800fe62:	bf00      	nop
 800fe64:	20082f68 	.word	0x20082f68

0800fe68 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800fe68:	4b06      	ldr	r3, [pc, #24]	@ (800fe84 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800fe6a:	881a      	ldrh	r2, [r3, #0]
 800fe6c:	4282      	cmp	r2, r0
 800fe6e:	d807      	bhi.n	800fe80 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800fe70:	4b05      	ldr	r3, [pc, #20]	@ (800fe88 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800fe72:	881b      	ldrh	r3, [r3, #0]
 800fe74:	4413      	add	r3, r2
 800fe76:	4298      	cmp	r0, r3
 800fe78:	bfac      	ite	ge
 800fe7a:	2000      	movge	r0, #0
 800fe7c:	2001      	movlt	r0, #1
 800fe7e:	4770      	bx	lr
 800fe80:	2000      	movs	r0, #0
 800fe82:	4770      	bx	lr
 800fe84:	20082f88 	.word	0x20082f88
 800fe88:	20082f8c 	.word	0x20082f8c

0800fe8c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800fe8c:	b508      	push	{r3, lr}
 800fe8e:	4601      	mov	r1, r0
 800fe90:	f7ff ffea 	bl	800fe68 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800fe94:	b118      	cbz	r0, 800fe9e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800fe96:	4b02      	ldr	r3, [pc, #8]	@ (800fea0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800fe98:	681b      	ldr	r3, [r3, #0]
 800fe9a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800fe9e:	bd08      	pop	{r3, pc}
 800fea0:	20082f6c 	.word	0x20082f6c

0800fea4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800fea4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fea6:	4c24      	ldr	r4, [pc, #144]	@ (800ff38 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800fea8:	6823      	ldr	r3, [r4, #0]
 800feaa:	2b00      	cmp	r3, #0
 800feac:	d042      	beq.n	800ff34 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800feae:	4a23      	ldr	r2, [pc, #140]	@ (800ff3c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800feb0:	4d23      	ldr	r5, [pc, #140]	@ (800ff40 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800feb2:	8811      	ldrh	r1, [r2, #0]
 800feb4:	f8b5 c000 	ldrh.w	ip, [r5]
 800feb8:	4822      	ldr	r0, [pc, #136]	@ (800ff44 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800feba:	4461      	add	r1, ip
 800febc:	1c4a      	adds	r2, r1, #1
 800febe:	f022 0201 	bic.w	r2, r2, #1
 800fec2:	008f      	lsls	r7, r1, #2
 800fec4:	0412      	lsls	r2, r2, #16
 800fec6:	19de      	adds	r6, r3, r7
 800fec8:	0c12      	lsrs	r2, r2, #16
 800feca:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800fece:	6006      	str	r6, [r0, #0]
 800fed0:	4e1d      	ldr	r6, [pc, #116]	@ (800ff48 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800fed2:	19da      	adds	r2, r3, r7
 800fed4:	6032      	str	r2, [r6, #0]
 800fed6:	220e      	movs	r2, #14
 800fed8:	fb02 f20c 	mul.w	r2, r2, ip
 800fedc:	3203      	adds	r2, #3
 800fede:	f022 0203 	bic.w	r2, r2, #3
 800fee2:	443a      	add	r2, r7
 800fee4:	4f19      	ldr	r7, [pc, #100]	@ (800ff4c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800fee6:	4413      	add	r3, r2
 800fee8:	603b      	str	r3, [r7, #0]
 800feea:	2300      	movs	r3, #0
 800feec:	4f18      	ldr	r7, [pc, #96]	@ (800ff50 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800feee:	469c      	mov	ip, r3
 800fef0:	803b      	strh	r3, [r7, #0]
 800fef2:	4f18      	ldr	r7, [pc, #96]	@ (800ff54 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800fef4:	683f      	ldr	r7, [r7, #0]
 800fef6:	1aba      	subs	r2, r7, r2
 800fef8:	4f17      	ldr	r7, [pc, #92]	@ (800ff58 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800fefa:	603a      	str	r2, [r7, #0]
 800fefc:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 800ff00:	4a16      	ldr	r2, [pc, #88]	@ (800ff5c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800ff02:	8013      	strh	r3, [r2, #0]
 800ff04:	428b      	cmp	r3, r1
 800ff06:	d10d      	bne.n	800ff24 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800ff08:	2300      	movs	r3, #0
 800ff0a:	240e      	movs	r4, #14
 800ff0c:	882d      	ldrh	r5, [r5, #0]
 800ff0e:	6830      	ldr	r0, [r6, #0]
 800ff10:	429d      	cmp	r5, r3
 800ff12:	d90f      	bls.n	800ff34 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800ff14:	fb04 0203 	mla	r2, r4, r3, r0
 800ff18:	7b11      	ldrb	r1, [r2, #12]
 800ff1a:	3301      	adds	r3, #1
 800ff1c:	f36f 1145 	bfc	r1, #5, #1
 800ff20:	7311      	strb	r1, [r2, #12]
 800ff22:	e7f5      	b.n	800ff10 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800ff24:	6822      	ldr	r2, [r4, #0]
 800ff26:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800ff2a:	6802      	ldr	r2, [r0, #0]
 800ff2c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800ff30:	3301      	adds	r3, #1
 800ff32:	e7e7      	b.n	800ff04 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800ff34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ff36:	bf00      	nop
 800ff38:	20082f6c 	.word	0x20082f6c
 800ff3c:	20082f88 	.word	0x20082f88
 800ff40:	20082f8c 	.word	0x20082f8c
 800ff44:	20082f80 	.word	0x20082f80
 800ff48:	20082f70 	.word	0x20082f70
 800ff4c:	20082f78 	.word	0x20082f78
 800ff50:	20082f8a 	.word	0x20082f8a
 800ff54:	20082f74 	.word	0x20082f74
 800ff58:	20082f84 	.word	0x20082f84
 800ff5c:	20082f7c 	.word	0x20082f7c

0800ff60 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800ff60:	4b06      	ldr	r3, [pc, #24]	@ (800ff7c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 800ff62:	681b      	ldr	r3, [r3, #0]
 800ff64:	b943      	cbnz	r3, 800ff78 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800ff66:	b139      	cbz	r1, 800ff78 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800ff68:	4b05      	ldr	r3, [pc, #20]	@ (800ff80 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 800ff6a:	801a      	strh	r2, [r3, #0]
 800ff6c:	4b05      	ldr	r3, [pc, #20]	@ (800ff84 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 800ff6e:	6019      	str	r1, [r3, #0]
 800ff70:	4b05      	ldr	r3, [pc, #20]	@ (800ff88 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 800ff72:	6018      	str	r0, [r3, #0]
 800ff74:	f7ff bf96 	b.w	800fea4 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800ff78:	4770      	bx	lr
 800ff7a:	bf00      	nop
 800ff7c:	20082f78 	.word	0x20082f78
 800ff80:	20082f8c 	.word	0x20082f8c
 800ff84:	20082f74 	.word	0x20082f74
 800ff88:	20082f6c 	.word	0x20082f6c

0800ff8c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800ff8c:	b470      	push	{r4, r5, r6}
 800ff8e:	4c07      	ldr	r4, [pc, #28]	@ (800ffac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800ff90:	4605      	mov	r5, r0
 800ff92:	6826      	ldr	r6, [r4, #0]
 800ff94:	4610      	mov	r0, r2
 800ff96:	9a03      	ldr	r2, [sp, #12]
 800ff98:	b936      	cbnz	r6, 800ffa8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800ff9a:	6025      	str	r5, [r4, #0]
 800ff9c:	4c04      	ldr	r4, [pc, #16]	@ (800ffb0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800ff9e:	8021      	strh	r1, [r4, #0]
 800ffa0:	bc70      	pop	{r4, r5, r6}
 800ffa2:	4619      	mov	r1, r3
 800ffa4:	f7ff bfdc 	b.w	800ff60 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800ffa8:	bc70      	pop	{r4, r5, r6}
 800ffaa:	4770      	bx	lr
 800ffac:	20082f90 	.word	0x20082f90
 800ffb0:	20082f88 	.word	0x20082f88

0800ffb4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800ffb4:	4a12      	ldr	r2, [pc, #72]	@ (8010000 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 800ffb6:	8803      	ldrh	r3, [r0, #0]
 800ffb8:	8812      	ldrh	r2, [r2, #0]
 800ffba:	4293      	cmp	r3, r2
 800ffbc:	d207      	bcs.n	800ffce <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 800ffbe:	2114      	movs	r1, #20
 800ffc0:	4a10      	ldr	r2, [pc, #64]	@ (8010004 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 800ffc2:	6812      	ldr	r2, [r2, #0]
 800ffc4:	fb01 2303 	mla	r3, r1, r3, r2
 800ffc8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 800ffcc:	4770      	bx	lr
 800ffce:	490e      	ldr	r1, [pc, #56]	@ (8010008 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800ffd0:	8809      	ldrh	r1, [r1, #0]
 800ffd2:	4411      	add	r1, r2
 800ffd4:	428b      	cmp	r3, r1
 800ffd6:	da04      	bge.n	800ffe2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 800ffd8:	1a9b      	subs	r3, r3, r2
 800ffda:	4a0c      	ldr	r2, [pc, #48]	@ (801000c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800ffdc:	210e      	movs	r1, #14
 800ffde:	6812      	ldr	r2, [r2, #0]
 800ffe0:	e7f0      	b.n	800ffc4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 800ffe2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800ffe6:	4293      	cmp	r3, r2
 800ffe8:	d108      	bne.n	800fffc <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 800ffea:	4b09      	ldr	r3, [pc, #36]	@ (8010010 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800ffec:	781b      	ldrb	r3, [r3, #0]
 800ffee:	b91b      	cbnz	r3, 800fff8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 800fff0:	4b08      	ldr	r3, [pc, #32]	@ (8010014 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800fff2:	f9b3 0000 	ldrsh.w	r0, [r3]
 800fff6:	4770      	bx	lr
 800fff8:	4b07      	ldr	r3, [pc, #28]	@ (8010018 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800fffa:	e7fa      	b.n	800fff2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 800fffc:	2000      	movs	r0, #0
 800fffe:	4770      	bx	lr
 8010000:	20082f88 	.word	0x20082f88
 8010004:	20082f90 	.word	0x20082f90
 8010008:	20082f8c 	.word	0x20082f8c
 801000c:	20082f70 	.word	0x20082f70
 8010010:	20082f00 	.word	0x20082f00
 8010014:	20082f02 	.word	0x20082f02
 8010018:	20082f04 	.word	0x20082f04

0801001c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801001c:	4a12      	ldr	r2, [pc, #72]	@ (8010068 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801001e:	8803      	ldrh	r3, [r0, #0]
 8010020:	8812      	ldrh	r2, [r2, #0]
 8010022:	4293      	cmp	r3, r2
 8010024:	d207      	bcs.n	8010036 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8010026:	2114      	movs	r1, #20
 8010028:	4a10      	ldr	r2, [pc, #64]	@ (801006c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801002a:	6812      	ldr	r2, [r2, #0]
 801002c:	fb01 2303 	mla	r3, r1, r3, r2
 8010030:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8010034:	4770      	bx	lr
 8010036:	490e      	ldr	r1, [pc, #56]	@ (8010070 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8010038:	8809      	ldrh	r1, [r1, #0]
 801003a:	4411      	add	r1, r2
 801003c:	428b      	cmp	r3, r1
 801003e:	da04      	bge.n	801004a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8010040:	1a9b      	subs	r3, r3, r2
 8010042:	4a0c      	ldr	r2, [pc, #48]	@ (8010074 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8010044:	210e      	movs	r1, #14
 8010046:	6812      	ldr	r2, [r2, #0]
 8010048:	e7f0      	b.n	801002c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801004a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801004e:	4293      	cmp	r3, r2
 8010050:	d108      	bne.n	8010064 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8010052:	4b09      	ldr	r3, [pc, #36]	@ (8010078 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8010054:	781b      	ldrb	r3, [r3, #0]
 8010056:	b91b      	cbnz	r3, 8010060 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8010058:	4b08      	ldr	r3, [pc, #32]	@ (801007c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801005a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801005e:	4770      	bx	lr
 8010060:	4b07      	ldr	r3, [pc, #28]	@ (8010080 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8010062:	e7fa      	b.n	801005a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8010064:	2000      	movs	r0, #0
 8010066:	4770      	bx	lr
 8010068:	20082f88 	.word	0x20082f88
 801006c:	20082f90 	.word	0x20082f90
 8010070:	20082f8c 	.word	0x20082f8c
 8010074:	20082f70 	.word	0x20082f70
 8010078:	20082f00 	.word	0x20082f00
 801007c:	20082f04 	.word	0x20082f04
 8010080:	20082f02 	.word	0x20082f02

08010084 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8010084:	b530      	push	{r4, r5, lr}
 8010086:	4a22      	ldr	r2, [pc, #136]	@ (8010110 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8010088:	880b      	ldrh	r3, [r1, #0]
 801008a:	8812      	ldrh	r2, [r2, #0]
 801008c:	4293      	cmp	r3, r2
 801008e:	d213      	bcs.n	80100b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8010090:	2114      	movs	r1, #20
 8010092:	4a20      	ldr	r2, [pc, #128]	@ (8010114 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8010094:	6812      	ldr	r2, [r2, #0]
 8010096:	fb01 2303 	mla	r3, r1, r3, r2
 801009a:	8a1a      	ldrh	r2, [r3, #16]
 801009c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80100a0:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80100a4:	8a5b      	ldrh	r3, [r3, #18]
 80100a6:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80100aa:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80100ae:	8004      	strh	r4, [r0, #0]
 80100b0:	8041      	strh	r1, [r0, #2]
 80100b2:	8082      	strh	r2, [r0, #4]
 80100b4:	80c3      	strh	r3, [r0, #6]
 80100b6:	e024      	b.n	8010102 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 80100b8:	4917      	ldr	r1, [pc, #92]	@ (8010118 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80100ba:	8809      	ldrh	r1, [r1, #0]
 80100bc:	4411      	add	r1, r2
 80100be:	428b      	cmp	r3, r1
 80100c0:	da10      	bge.n	80100e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 80100c2:	1a9b      	subs	r3, r3, r2
 80100c4:	220e      	movs	r2, #14
 80100c6:	4353      	muls	r3, r2
 80100c8:	4a14      	ldr	r2, [pc, #80]	@ (801011c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 80100ca:	6811      	ldr	r1, [r2, #0]
 80100cc:	18ca      	adds	r2, r1, r3
 80100ce:	5ecd      	ldrsh	r5, [r1, r3]
 80100d0:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 80100d4:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 80100d8:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 80100dc:	8005      	strh	r5, [r0, #0]
 80100de:	8044      	strh	r4, [r0, #2]
 80100e0:	8081      	strh	r1, [r0, #4]
 80100e2:	e7e7      	b.n	80100b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80100e4:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80100e8:	4293      	cmp	r3, r2
 80100ea:	d10b      	bne.n	8010104 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 80100ec:	4b0c      	ldr	r3, [pc, #48]	@ (8010120 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80100ee:	f9b3 1000 	ldrsh.w	r1, [r3]
 80100f2:	4b0c      	ldr	r3, [pc, #48]	@ (8010124 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 80100f4:	8081      	strh	r1, [r0, #4]
 80100f6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80100fa:	2300      	movs	r3, #0
 80100fc:	80c2      	strh	r2, [r0, #6]
 80100fe:	8003      	strh	r3, [r0, #0]
 8010100:	8043      	strh	r3, [r0, #2]
 8010102:	bd30      	pop	{r4, r5, pc}
 8010104:	2300      	movs	r3, #0
 8010106:	8003      	strh	r3, [r0, #0]
 8010108:	8043      	strh	r3, [r0, #2]
 801010a:	8083      	strh	r3, [r0, #4]
 801010c:	e7d2      	b.n	80100b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801010e:	bf00      	nop
 8010110:	20082f88 	.word	0x20082f88
 8010114:	20082f90 	.word	0x20082f90
 8010118:	20082f8c 	.word	0x20082f8c
 801011c:	20082f70 	.word	0x20082f70
 8010120:	20082efc 	.word	0x20082efc
 8010124:	20082efe 	.word	0x20082efe

08010128 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8010128:	4a12      	ldr	r2, [pc, #72]	@ (8010174 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801012a:	8803      	ldrh	r3, [r0, #0]
 801012c:	8811      	ldrh	r1, [r2, #0]
 801012e:	428b      	cmp	r3, r1
 8010130:	d20b      	bcs.n	801014a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8010132:	4a11      	ldr	r2, [pc, #68]	@ (8010178 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010134:	6812      	ldr	r2, [r2, #0]
 8010136:	b112      	cbz	r2, 801013e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8010138:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801013c:	b9c0      	cbnz	r0, 8010170 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801013e:	4a0f      	ldr	r2, [pc, #60]	@ (801017c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8010140:	6811      	ldr	r1, [r2, #0]
 8010142:	2214      	movs	r2, #20
 8010144:	4353      	muls	r3, r2
 8010146:	58c8      	ldr	r0, [r1, r3]
 8010148:	4770      	bx	lr
 801014a:	4a0d      	ldr	r2, [pc, #52]	@ (8010180 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801014c:	8812      	ldrh	r2, [r2, #0]
 801014e:	440a      	add	r2, r1
 8010150:	4293      	cmp	r3, r2
 8010152:	da04      	bge.n	801015e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8010154:	4a08      	ldr	r2, [pc, #32]	@ (8010178 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010156:	6812      	ldr	r2, [r2, #0]
 8010158:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801015c:	4770      	bx	lr
 801015e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010162:	4293      	cmp	r3, r2
 8010164:	d103      	bne.n	801016e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8010166:	4b07      	ldr	r3, [pc, #28]	@ (8010184 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8010168:	681b      	ldr	r3, [r3, #0]
 801016a:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 801016c:	4770      	bx	lr
 801016e:	2000      	movs	r0, #0
 8010170:	4770      	bx	lr
 8010172:	bf00      	nop
 8010174:	20082f88 	.word	0x20082f88
 8010178:	20082f6c 	.word	0x20082f6c
 801017c:	20082f90 	.word	0x20082f90
 8010180:	20082f8c 	.word	0x20082f8c
 8010184:	20082f08 	.word	0x20082f08

08010188 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8010188:	4b24      	ldr	r3, [pc, #144]	@ (801021c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801018a:	8802      	ldrh	r2, [r0, #0]
 801018c:	8818      	ldrh	r0, [r3, #0]
 801018e:	4282      	cmp	r2, r0
 8010190:	d221      	bcs.n	80101d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8010192:	4b23      	ldr	r3, [pc, #140]	@ (8010220 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8010194:	6819      	ldr	r1, [r3, #0]
 8010196:	2314      	movs	r3, #20
 8010198:	fb03 1302 	mla	r3, r3, r2, r1
 801019c:	6858      	ldr	r0, [r3, #4]
 801019e:	2800      	cmp	r0, #0
 80101a0:	d03a      	beq.n	8010218 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80101a2:	4920      	ldr	r1, [pc, #128]	@ (8010224 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80101a4:	6809      	ldr	r1, [r1, #0]
 80101a6:	2900      	cmp	r1, #0
 80101a8:	d036      	beq.n	8010218 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80101aa:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80101ae:	2900      	cmp	r1, #0
 80101b0:	d032      	beq.n	8010218 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80101b2:	891a      	ldrh	r2, [r3, #8]
 80101b4:	8958      	ldrh	r0, [r3, #10]
 80101b6:	4350      	muls	r0, r2
 80101b8:	7c5a      	ldrb	r2, [r3, #17]
 80101ba:	7cdb      	ldrb	r3, [r3, #19]
 80101bc:	0952      	lsrs	r2, r2, #5
 80101be:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80101c2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80101c6:	2b0b      	cmp	r3, #11
 80101c8:	bf18      	it	ne
 80101ca:	0040      	lslne	r0, r0, #1
 80101cc:	3003      	adds	r0, #3
 80101ce:	f020 0003 	bic.w	r0, r0, #3
 80101d2:	4408      	add	r0, r1
 80101d4:	4770      	bx	lr
 80101d6:	4b14      	ldr	r3, [pc, #80]	@ (8010228 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80101d8:	881b      	ldrh	r3, [r3, #0]
 80101da:	4403      	add	r3, r0
 80101dc:	429a      	cmp	r2, r3
 80101de:	da1a      	bge.n	8010216 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80101e0:	210e      	movs	r1, #14
 80101e2:	4b12      	ldr	r3, [pc, #72]	@ (801022c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80101e4:	1a10      	subs	r0, r2, r0
 80101e6:	681b      	ldr	r3, [r3, #0]
 80101e8:	fb01 3000 	mla	r0, r1, r0, r3
 80101ec:	7b03      	ldrb	r3, [r0, #12]
 80101ee:	f003 031f 	and.w	r3, r3, #31
 80101f2:	2b0b      	cmp	r3, #11
 80101f4:	d10b      	bne.n	801020e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80101f6:	8903      	ldrh	r3, [r0, #8]
 80101f8:	8940      	ldrh	r0, [r0, #10]
 80101fa:	4358      	muls	r0, r3
 80101fc:	4b09      	ldr	r3, [pc, #36]	@ (8010224 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80101fe:	3003      	adds	r0, #3
 8010200:	6819      	ldr	r1, [r3, #0]
 8010202:	f020 0303 	bic.w	r3, r0, #3
 8010206:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801020a:	4418      	add	r0, r3
 801020c:	4770      	bx	lr
 801020e:	2b0d      	cmp	r3, #13
 8010210:	d101      	bne.n	8010216 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010212:	300d      	adds	r0, #13
 8010214:	4770      	bx	lr
 8010216:	2000      	movs	r0, #0
 8010218:	4770      	bx	lr
 801021a:	bf00      	nop
 801021c:	20082f88 	.word	0x20082f88
 8010220:	20082f90 	.word	0x20082f90
 8010224:	20082f6c 	.word	0x20082f6c
 8010228:	20082f8c 	.word	0x20082f8c
 801022c:	20082f70 	.word	0x20082f70

08010230 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8010230:	b510      	push	{r4, lr}
 8010232:	4a17      	ldr	r2, [pc, #92]	@ (8010290 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8010234:	8803      	ldrh	r3, [r0, #0]
 8010236:	8812      	ldrh	r2, [r2, #0]
 8010238:	4293      	cmp	r3, r2
 801023a:	d20c      	bcs.n	8010256 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801023c:	2114      	movs	r1, #20
 801023e:	4a15      	ldr	r2, [pc, #84]	@ (8010294 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8010240:	6812      	ldr	r2, [r2, #0]
 8010242:	fb01 2303 	mla	r3, r1, r3, r2
 8010246:	7c58      	ldrb	r0, [r3, #17]
 8010248:	0942      	lsrs	r2, r0, #5
 801024a:	7cd8      	ldrb	r0, [r3, #19]
 801024c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8010250:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8010254:	bd10      	pop	{r4, pc}
 8010256:	4910      	ldr	r1, [pc, #64]	@ (8010298 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8010258:	8809      	ldrh	r1, [r1, #0]
 801025a:	4411      	add	r1, r2
 801025c:	428b      	cmp	r3, r1
 801025e:	da09      	bge.n	8010274 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8010260:	210e      	movs	r1, #14
 8010262:	1a9b      	subs	r3, r3, r2
 8010264:	4a0d      	ldr	r2, [pc, #52]	@ (801029c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8010266:	6812      	ldr	r2, [r2, #0]
 8010268:	fb01 2303 	mla	r3, r1, r3, r2
 801026c:	7b18      	ldrb	r0, [r3, #12]
 801026e:	f000 001f 	and.w	r0, r0, #31
 8010272:	e7ef      	b.n	8010254 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8010274:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010278:	4293      	cmp	r3, r2
 801027a:	d106      	bne.n	801028a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801027c:	f7fa ffdc 	bl	800b238 <_ZN8touchgfx3HAL3lcdEv>
 8010280:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010284:	6803      	ldr	r3, [r0, #0]
 8010286:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010288:	4718      	bx	r3
 801028a:	2000      	movs	r0, #0
 801028c:	e7e2      	b.n	8010254 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801028e:	bf00      	nop
 8010290:	20082f88 	.word	0x20082f88
 8010294:	20082f90 	.word	0x20082f90
 8010298:	20082f8c 	.word	0x20082f8c
 801029c:	20082f70 	.word	0x20082f70

080102a0 <CRC_Lock>:
 80102a0:	b530      	push	{r4, r5, lr}
 80102a2:	4a2d      	ldr	r2, [pc, #180]	@ (8010358 <CRC_Lock+0xb8>)
 80102a4:	f24c 2540 	movw	r5, #49728	@ 0xc240
 80102a8:	6813      	ldr	r3, [r2, #0]
 80102aa:	f023 0301 	bic.w	r3, r3, #1
 80102ae:	6013      	str	r3, [r2, #0]
 80102b0:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 80102b4:	4b29      	ldr	r3, [pc, #164]	@ (801035c <CRC_Lock+0xbc>)
 80102b6:	681c      	ldr	r4, [r3, #0]
 80102b8:	4014      	ands	r4, r2
 80102ba:	42ac      	cmp	r4, r5
 80102bc:	d005      	beq.n	80102ca <CRC_Lock+0x2a>
 80102be:	f24c 2570 	movw	r5, #49776	@ 0xc270
 80102c2:	681c      	ldr	r4, [r3, #0]
 80102c4:	4014      	ands	r4, r2
 80102c6:	42ac      	cmp	r4, r5
 80102c8:	d125      	bne.n	8010316 <CRC_Lock+0x76>
 80102ca:	4b25      	ldr	r3, [pc, #148]	@ (8010360 <CRC_Lock+0xc0>)
 80102cc:	681b      	ldr	r3, [r3, #0]
 80102ce:	2b00      	cmp	r3, #0
 80102d0:	d139      	bne.n	8010346 <CRC_Lock+0xa6>
 80102d2:	4b24      	ldr	r3, [pc, #144]	@ (8010364 <CRC_Lock+0xc4>)
 80102d4:	681a      	ldr	r2, [r3, #0]
 80102d6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80102da:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 80102de:	d00d      	beq.n	80102fc <CRC_Lock+0x5c>
 80102e0:	f240 4483 	movw	r4, #1155	@ 0x483
 80102e4:	681a      	ldr	r2, [r3, #0]
 80102e6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80102ea:	42a2      	cmp	r2, r4
 80102ec:	d006      	beq.n	80102fc <CRC_Lock+0x5c>
 80102ee:	f240 4285 	movw	r2, #1157	@ 0x485
 80102f2:	681b      	ldr	r3, [r3, #0]
 80102f4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80102f8:	4293      	cmp	r3, r2
 80102fa:	d124      	bne.n	8010346 <CRC_Lock+0xa6>
 80102fc:	2201      	movs	r2, #1
 80102fe:	4b1a      	ldr	r3, [pc, #104]	@ (8010368 <CRC_Lock+0xc8>)
 8010300:	601a      	str	r2, [r3, #0]
 8010302:	681a      	ldr	r2, [r3, #0]
 8010304:	2a00      	cmp	r2, #0
 8010306:	d1fc      	bne.n	8010302 <CRC_Lock+0x62>
 8010308:	4b18      	ldr	r3, [pc, #96]	@ (801036c <CRC_Lock+0xcc>)
 801030a:	6018      	str	r0, [r3, #0]
 801030c:	6818      	ldr	r0, [r3, #0]
 801030e:	1a43      	subs	r3, r0, r1
 8010310:	4258      	negs	r0, r3
 8010312:	4158      	adcs	r0, r3
 8010314:	e00e      	b.n	8010334 <CRC_Lock+0x94>
 8010316:	681b      	ldr	r3, [r3, #0]
 8010318:	4013      	ands	r3, r2
 801031a:	f24d 2220 	movw	r2, #53792	@ 0xd220
 801031e:	4293      	cmp	r3, r2
 8010320:	d111      	bne.n	8010346 <CRC_Lock+0xa6>
 8010322:	f240 4286 	movw	r2, #1158	@ 0x486
 8010326:	4b12      	ldr	r3, [pc, #72]	@ (8010370 <CRC_Lock+0xd0>)
 8010328:	681b      	ldr	r3, [r3, #0]
 801032a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801032e:	4293      	cmp	r3, r2
 8010330:	d001      	beq.n	8010336 <CRC_Lock+0x96>
 8010332:	2000      	movs	r0, #0
 8010334:	bd30      	pop	{r4, r5, pc}
 8010336:	2201      	movs	r2, #1
 8010338:	4b0e      	ldr	r3, [pc, #56]	@ (8010374 <CRC_Lock+0xd4>)
 801033a:	601a      	str	r2, [r3, #0]
 801033c:	681a      	ldr	r2, [r3, #0]
 801033e:	2a00      	cmp	r2, #0
 8010340:	d1fc      	bne.n	801033c <CRC_Lock+0x9c>
 8010342:	4b0d      	ldr	r3, [pc, #52]	@ (8010378 <CRC_Lock+0xd8>)
 8010344:	e7e1      	b.n	801030a <CRC_Lock+0x6a>
 8010346:	2201      	movs	r2, #1
 8010348:	4b0c      	ldr	r3, [pc, #48]	@ (801037c <CRC_Lock+0xdc>)
 801034a:	601a      	str	r2, [r3, #0]
 801034c:	681a      	ldr	r2, [r3, #0]
 801034e:	2a00      	cmp	r2, #0
 8010350:	d1fc      	bne.n	801034c <CRC_Lock+0xac>
 8010352:	4b0b      	ldr	r3, [pc, #44]	@ (8010380 <CRC_Lock+0xe0>)
 8010354:	e7d9      	b.n	801030a <CRC_Lock+0x6a>
 8010356:	bf00      	nop
 8010358:	e0002000 	.word	0xe0002000
 801035c:	e000ed00 	.word	0xe000ed00
 8010360:	e0042000 	.word	0xe0042000
 8010364:	5c001000 	.word	0x5c001000
 8010368:	58024c08 	.word	0x58024c08
 801036c:	58024c00 	.word	0x58024c00
 8010370:	46008ff0 	.word	0x46008ff0
 8010374:	46024c08 	.word	0x46024c08
 8010378:	46024c00 	.word	0x46024c00
 801037c:	40023008 	.word	0x40023008
 8010380:	40023000 	.word	0x40023000

08010384 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8010384:	6101      	str	r1, [r0, #16]
 8010386:	4770      	bx	lr

08010388 <_ZN8touchgfx8Gestures4tickEv>:
 8010388:	7b83      	ldrb	r3, [r0, #14]
 801038a:	b14b      	cbz	r3, 80103a0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801038c:	8903      	ldrh	r3, [r0, #8]
 801038e:	3301      	adds	r3, #1
 8010390:	b29b      	uxth	r3, r3
 8010392:	2b07      	cmp	r3, #7
 8010394:	8103      	strh	r3, [r0, #8]
 8010396:	bf81      	itttt	hi
 8010398:	2300      	movhi	r3, #0
 801039a:	8143      	strhhi	r3, [r0, #10]
 801039c:	8183      	strhhi	r3, [r0, #12]
 801039e:	7383      	strbhi	r3, [r0, #14]
 80103a0:	4770      	bx	lr
	...

080103a4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80103a4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80103a8:	4698      	mov	r8, r3
 80103aa:	4604      	mov	r4, r0
 80103ac:	8883      	ldrh	r3, [r0, #4]
 80103ae:	460e      	mov	r6, r1
 80103b0:	88c1      	ldrh	r1, [r0, #6]
 80103b2:	2000      	movs	r0, #0
 80103b4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80103b8:	eba8 0303 	sub.w	r3, r8, r3
 80103bc:	b21b      	sxth	r3, r3
 80103be:	4617      	mov	r7, r2
 80103c0:	4a17      	ldr	r2, [pc, #92]	@ (8010420 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80103c2:	2b00      	cmp	r3, #0
 80103c4:	bfb8      	it	lt
 80103c6:	425b      	neglt	r3, r3
 80103c8:	9200      	str	r2, [sp, #0]
 80103ca:	8aa2      	ldrh	r2, [r4, #20]
 80103cc:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 80103d0:	b21b      	sxth	r3, r3
 80103d2:	4293      	cmp	r3, r2
 80103d4:	f88d 0004 	strb.w	r0, [sp, #4]
 80103d8:	f8ad 1008 	strh.w	r1, [sp, #8]
 80103dc:	f8ad 800a 	strh.w	r8, [sp, #10]
 80103e0:	f8ad 500c 	strh.w	r5, [sp, #12]
 80103e4:	dc07      	bgt.n	80103f6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 80103e6:	1a69      	subs	r1, r5, r1
 80103e8:	b209      	sxth	r1, r1
 80103ea:	2900      	cmp	r1, #0
 80103ec:	bfb8      	it	lt
 80103ee:	4249      	neglt	r1, r1
 80103f0:	b209      	sxth	r1, r1
 80103f2:	428a      	cmp	r2, r1
 80103f4:	da10      	bge.n	8010418 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 80103f6:	6920      	ldr	r0, [r4, #16]
 80103f8:	4669      	mov	r1, sp
 80103fa:	6803      	ldr	r3, [r0, #0]
 80103fc:	eba8 0606 	sub.w	r6, r8, r6
 8010400:	685b      	ldr	r3, [r3, #4]
 8010402:	4798      	blx	r3
 8010404:	2300      	movs	r3, #0
 8010406:	2001      	movs	r0, #1
 8010408:	1bef      	subs	r7, r5, r7
 801040a:	8123      	strh	r3, [r4, #8]
 801040c:	8166      	strh	r6, [r4, #10]
 801040e:	81a7      	strh	r7, [r4, #12]
 8010410:	f8a4 8004 	strh.w	r8, [r4, #4]
 8010414:	80e5      	strh	r5, [r4, #6]
 8010416:	73a0      	strb	r0, [r4, #14]
 8010418:	b004      	add	sp, #16
 801041a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801041e:	bf00      	nop
 8010420:	08035c50 	.word	0x08035c50

08010424 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8010424:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010426:	461e      	mov	r6, r3
 8010428:	1e4b      	subs	r3, r1, #1
 801042a:	2b01      	cmp	r3, #1
 801042c:	b085      	sub	sp, #20
 801042e:	4604      	mov	r4, r0
 8010430:	460d      	mov	r5, r1
 8010432:	4617      	mov	r7, r2
 8010434:	d84b      	bhi.n	80104ce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8010436:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801043a:	1cd3      	adds	r3, r2, #3
 801043c:	b29b      	uxth	r3, r3
 801043e:	2b06      	cmp	r3, #6
 8010440:	d916      	bls.n	8010470 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8010442:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80104e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8010446:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801044a:	f8cd c004 	str.w	ip, [sp, #4]
 801044e:	f04f 0c00 	mov.w	ip, #0
 8010452:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010456:	6900      	ldr	r0, [r0, #16]
 8010458:	f8ad 100c 	strh.w	r1, [sp, #12]
 801045c:	f88d c008 	strb.w	ip, [sp, #8]
 8010460:	f8ad 200a 	strh.w	r2, [sp, #10]
 8010464:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010468:	6803      	ldr	r3, [r0, #0]
 801046a:	a901      	add	r1, sp, #4
 801046c:	689b      	ldr	r3, [r3, #8]
 801046e:	4798      	blx	r3
 8010470:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8010474:	1cd3      	adds	r3, r2, #3
 8010476:	b29b      	uxth	r3, r3
 8010478:	2b06      	cmp	r3, #6
 801047a:	d916      	bls.n	80104aa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801047c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80104e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8010480:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010484:	f8cd c004 	str.w	ip, [sp, #4]
 8010488:	f04f 0c01 	mov.w	ip, #1
 801048c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010490:	6920      	ldr	r0, [r4, #16]
 8010492:	f8ad 100c 	strh.w	r1, [sp, #12]
 8010496:	f88d c008 	strb.w	ip, [sp, #8]
 801049a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801049e:	f8ad 300e 	strh.w	r3, [sp, #14]
 80104a2:	6803      	ldr	r3, [r0, #0]
 80104a4:	a901      	add	r1, sp, #4
 80104a6:	689b      	ldr	r3, [r3, #8]
 80104a8:	4798      	blx	r3
 80104aa:	4b0d      	ldr	r3, [pc, #52]	@ (80104e0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80104ac:	6920      	ldr	r0, [r4, #16]
 80104ae:	9301      	str	r3, [sp, #4]
 80104b0:	2300      	movs	r3, #0
 80104b2:	f88d 5008 	strb.w	r5, [sp, #8]
 80104b6:	f8ad 700a 	strh.w	r7, [sp, #10]
 80104ba:	f8ad 600c 	strh.w	r6, [sp, #12]
 80104be:	f8ad 300e 	strh.w	r3, [sp, #14]
 80104c2:	6803      	ldr	r3, [r0, #0]
 80104c4:	a901      	add	r1, sp, #4
 80104c6:	681b      	ldr	r3, [r3, #0]
 80104c8:	4798      	blx	r3
 80104ca:	b005      	add	sp, #20
 80104cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80104ce:	2900      	cmp	r1, #0
 80104d0:	d1eb      	bne.n	80104aa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80104d2:	80a2      	strh	r2, [r4, #4]
 80104d4:	80c6      	strh	r6, [r0, #6]
 80104d6:	60a1      	str	r1, [r4, #8]
 80104d8:	81a1      	strh	r1, [r4, #12]
 80104da:	73a1      	strb	r1, [r4, #14]
 80104dc:	e7e5      	b.n	80104aa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80104de:	bf00      	nop
 80104e0:	08035c3c 	.word	0x08035c3c
 80104e4:	08035c64 	.word	0x08035c64

080104e8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80104e8:	790b      	ldrb	r3, [r1, #4]
 80104ea:	b570      	push	{r4, r5, r6, lr}
 80104ec:	2b00      	cmp	r3, #0
 80104ee:	bf0c      	ite	eq
 80104f0:	2301      	moveq	r3, #1
 80104f2:	2300      	movne	r3, #0
 80104f4:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 80104f8:	4604      	mov	r4, r0
 80104fa:	460e      	mov	r6, r1
 80104fc:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8010500:	d109      	bne.n	8010516 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8010502:	b14d      	cbz	r5, 8010518 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8010504:	7933      	ldrb	r3, [r6, #4]
 8010506:	2b01      	cmp	r3, #1
 8010508:	d10c      	bne.n	8010524 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801050a:	6823      	ldr	r3, [r4, #0]
 801050c:	4620      	mov	r0, r4
 801050e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010512:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8010514:	4718      	bx	r3
 8010516:	b12d      	cbz	r5, 8010524 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8010518:	6823      	ldr	r3, [r4, #0]
 801051a:	4620      	mov	r0, r4
 801051c:	695b      	ldr	r3, [r3, #20]
 801051e:	4798      	blx	r3
 8010520:	2d00      	cmp	r5, #0
 8010522:	d1ef      	bne.n	8010504 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8010524:	bd70      	pop	{r4, r5, r6, pc}

08010526 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8010526:	b570      	push	{r4, r5, r6, lr}
 8010528:	4605      	mov	r5, r0
 801052a:	880b      	ldrh	r3, [r1, #0]
 801052c:	4604      	mov	r4, r0
 801052e:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 8010530:	8813      	ldrh	r3, [r2, #0]
 8010532:	f825 3f30 	strh.w	r3, [r5, #48]!
 8010536:	4628      	mov	r0, r5
 8010538:	f7ff fd3c 	bl	800ffb4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801053c:	4606      	mov	r6, r0
 801053e:	4628      	mov	r0, r5
 8010540:	f7ff fd6c 	bl	801001c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010544:	4605      	mov	r5, r0
 8010546:	6823      	ldr	r3, [r4, #0]
 8010548:	4631      	mov	r1, r6
 801054a:	4620      	mov	r0, r4
 801054c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801054e:	4798      	blx	r3
 8010550:	6823      	ldr	r3, [r4, #0]
 8010552:	4629      	mov	r1, r5
 8010554:	4620      	mov	r0, r4
 8010556:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801055a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801055c:	4718      	bx	r3

0801055e <_ZNK8touchgfx6Button12getSolidRectEv>:
 801055e:	b510      	push	{r4, lr}
 8010560:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 8010564:	4604      	mov	r4, r0
 8010566:	2bff      	cmp	r3, #255	@ 0xff
 8010568:	d006      	beq.n	8010578 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 801056a:	2300      	movs	r3, #0
 801056c:	8003      	strh	r3, [r0, #0]
 801056e:	8043      	strh	r3, [r0, #2]
 8010570:	8083      	strh	r3, [r0, #4]
 8010572:	80c3      	strh	r3, [r0, #6]
 8010574:	4620      	mov	r0, r4
 8010576:	bd10      	pop	{r4, pc}
 8010578:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 801057c:	b11b      	cbz	r3, 8010586 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801057e:	3130      	adds	r1, #48	@ 0x30
 8010580:	f7ff fd80 	bl	8010084 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8010584:	e7f6      	b.n	8010574 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8010586:	312e      	adds	r1, #46	@ 0x2e
 8010588:	e7fa      	b.n	8010580 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0801058c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 801058c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010590:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8010594:	b08a      	sub	sp, #40	@ 0x28
 8010596:	4604      	mov	r4, r0
 8010598:	4688      	mov	r8, r1
 801059a:	2b00      	cmp	r3, #0
 801059c:	d066      	beq.n	801066c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801059e:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 80105a0:	a805      	add	r0, sp, #20
 80105a2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80105a6:	f7ff fd05 	bl	800ffb4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80105aa:	4607      	mov	r7, r0
 80105ac:	a805      	add	r0, sp, #20
 80105ae:	f7ff fd35 	bl	801001c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80105b2:	2300      	movs	r3, #0
 80105b4:	f9b8 6000 	ldrsh.w	r6, [r8]
 80105b8:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80105bc:	9306      	str	r3, [sp, #24]
 80105be:	4432      	add	r2, r6
 80105c0:	b292      	uxth	r2, r2
 80105c2:	fa0f fc82 	sxth.w	ip, r2
 80105c6:	459c      	cmp	ip, r3
 80105c8:	dd52      	ble.n	8010670 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80105ca:	42b7      	cmp	r7, r6
 80105cc:	dd50      	ble.n	8010670 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80105ce:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 80105d2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80105d6:	442b      	add	r3, r5
 80105d8:	b29b      	uxth	r3, r3
 80105da:	b219      	sxth	r1, r3
 80105dc:	2900      	cmp	r1, #0
 80105de:	dd47      	ble.n	8010670 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80105e0:	42a8      	cmp	r0, r5
 80105e2:	dd45      	ble.n	8010670 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80105e4:	4567      	cmp	r7, ip
 80105e6:	bfb8      	it	lt
 80105e8:	b2ba      	uxthlt	r2, r7
 80105ea:	4288      	cmp	r0, r1
 80105ec:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80105f0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80105f4:	bfb8      	it	lt
 80105f6:	b283      	uxthlt	r3, r0
 80105f8:	1b92      	subs	r2, r2, r6
 80105fa:	1b5b      	subs	r3, r3, r5
 80105fc:	f8ad 201c 	strh.w	r2, [sp, #28]
 8010600:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010604:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010608:	f8ad 501a 	strh.w	r5, [sp, #26]
 801060c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8010610:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8010614:	429a      	cmp	r2, r3
 8010616:	d026      	beq.n	8010666 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8010618:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801061c:	2b00      	cmp	r3, #0
 801061e:	dd22      	ble.n	8010666 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8010620:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8010624:	2b00      	cmp	r3, #0
 8010626:	dd1e      	ble.n	8010666 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8010628:	2300      	movs	r3, #0
 801062a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801062e:	6823      	ldr	r3, [r4, #0]
 8010630:	a908      	add	r1, sp, #32
 8010632:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010634:	4620      	mov	r0, r4
 8010636:	4798      	blx	r3
 8010638:	4b0f      	ldr	r3, [pc, #60]	@ (8010678 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801063a:	681b      	ldr	r3, [r3, #0]
 801063c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8010640:	b10a      	cbz	r2, 8010646 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8010642:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8010644:	b900      	cbnz	r0, 8010648 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8010646:	6898      	ldr	r0, [r3, #8]
 8010648:	2501      	movs	r5, #1
 801064a:	6801      	ldr	r1, [r0, #0]
 801064c:	9502      	str	r5, [sp, #8]
 801064e:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 8010652:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8010656:	9401      	str	r4, [sp, #4]
 8010658:	ac06      	add	r4, sp, #24
 801065a:	9400      	str	r4, [sp, #0]
 801065c:	688c      	ldr	r4, [r1, #8]
 801065e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8010662:	a905      	add	r1, sp, #20
 8010664:	47a0      	blx	r4
 8010666:	b00a      	add	sp, #40	@ 0x28
 8010668:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801066c:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 801066e:	e797      	b.n	80105a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8010670:	2300      	movs	r3, #0
 8010672:	9307      	str	r3, [sp, #28]
 8010674:	e7ca      	b.n	801060c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8010676:	bf00      	nop
 8010678:	20082f08 	.word	0x20082f08

0801067c <nema_rb_init>:
 801067c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010680:	6805      	ldr	r5, [r0, #0]
 8010682:	4f23      	ldr	r7, [pc, #140]	@ (8010710 <nema_rb_init+0x94>)
 8010684:	2d00      	cmp	r5, #0
 8010686:	603d      	str	r5, [r7, #0]
 8010688:	dd3c      	ble.n	8010704 <nema_rb_init+0x88>
 801068a:	f8df c090 	ldr.w	ip, [pc, #144]	@ 801071c <nema_rb_init+0xa0>
 801068e:	10ab      	asrs	r3, r5, #2
 8010690:	3b04      	subs	r3, #4
 8010692:	f8df e08c 	ldr.w	lr, [pc, #140]	@ 8010720 <nema_rb_init+0xa4>
 8010696:	6886      	ldr	r6, [r0, #8]
 8010698:	4c1e      	ldr	r4, [pc, #120]	@ (8010714 <nema_rb_init+0x98>)
 801069a:	f8cc 3000 	str.w	r3, [ip]
 801069e:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 8010724 <nema_rb_init+0xa8>
 80106a2:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 80106a6:	f8ce 0000 	str.w	r0, [lr]
 80106aa:	6026      	str	r6, [r4, #0]
 80106ac:	f8c8 c000 	str.w	ip, [r8]
 80106b0:	b329      	cbz	r1, 80106fe <nema_rb_init+0x82>
 80106b2:	2400      	movs	r4, #0
 80106b4:	f8df e070 	ldr.w	lr, [pc, #112]	@ 8010728 <nema_rb_init+0xac>
 80106b8:	4917      	ldr	r1, [pc, #92]	@ (8010718 <nema_rb_init+0x9c>)
 80106ba:	e9c0 4404 	strd	r4, r4, [r0, #16]
 80106be:	f846 e023 	str.w	lr, [r6, r3, lsl #2]
 80106c2:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80106c6:	e9c3 1502 	strd	r1, r5, [r3, #8]
 80106ca:	f8c3 c004 	str.w	ip, [r3, #4]
 80106ce:	f7f2 fbfb 	bl	8002ec8 <nema_buffer_flush>
 80106d2:	4621      	mov	r1, r4
 80106d4:	f44f 70a4 	mov.w	r0, #328	@ 0x148
 80106d8:	f7f2 fb1c 	bl	8002d14 <nema_reg_write>
 80106dc:	f8d8 1000 	ldr.w	r1, [r8]
 80106e0:	20ec      	movs	r0, #236	@ 0xec
 80106e2:	f041 0106 	orr.w	r1, r1, #6
 80106e6:	f7f2 fb15 	bl	8002d14 <nema_reg_write>
 80106ea:	f8d8 1000 	ldr.w	r1, [r8]
 80106ee:	20f0      	movs	r0, #240	@ 0xf0
 80106f0:	f7f2 fb10 	bl	8002d14 <nema_reg_write>
 80106f4:	6839      	ldr	r1, [r7, #0]
 80106f6:	20f4      	movs	r0, #244	@ 0xf4
 80106f8:	f7f2 fb0c 	bl	8002d14 <nema_reg_write>
 80106fc:	4621      	mov	r1, r4
 80106fe:	4608      	mov	r0, r1
 8010700:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010704:	2004      	movs	r0, #4
 8010706:	f000 fa25 	bl	8010b54 <nema_set_error>
 801070a:	f04f 31ff 	mov.w	r1, #4294967295
 801070e:	e7f6      	b.n	80106fe <nema_rb_init+0x82>
 8010710:	20082fa4 	.word	0x20082fa4
 8010714:	20082f9c 	.word	0x20082f9c
 8010718:	ff0000f4 	.word	0xff0000f4
 801071c:	20082fa0 	.word	0x20082fa0
 8010720:	20082f94 	.word	0x20082f94
 8010724:	20082f98 	.word	0x20082f98
 8010728:	ff0000f0 	.word	0xff0000f0

0801072c <nema_rb_submit_cmdlist2>:
 801072c:	2900      	cmp	r1, #0
 801072e:	d074      	beq.n	801081a <nema_rb_submit_cmdlist2+0xee>
 8010730:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010734:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 8010830 <nema_rb_submit_cmdlist2+0x104>
 8010738:	4b39      	ldr	r3, [pc, #228]	@ (8010820 <nema_rb_submit_cmdlist2+0xf4>)
 801073a:	f8d8 2000 	ldr.w	r2, [r8]
 801073e:	681d      	ldr	r5, [r3, #0]
 8010740:	6913      	ldr	r3, [r2, #16]
 8010742:	468c      	mov	ip, r1
 8010744:	4c37      	ldr	r4, [pc, #220]	@ (8010824 <nema_rb_submit_cmdlist2+0xf8>)
 8010746:	1d19      	adds	r1, r3, #4
 8010748:	42a9      	cmp	r1, r5
 801074a:	6824      	ldr	r4, [r4, #0]
 801074c:	db0a      	blt.n	8010764 <nema_rb_submit_cmdlist2+0x38>
 801074e:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 8010752:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8010756:	6913      	ldr	r3, [r2, #16]
 8010758:	3301      	adds	r3, #1
 801075a:	429d      	cmp	r5, r3
 801075c:	6113      	str	r3, [r2, #16]
 801075e:	dc59      	bgt.n	8010814 <nema_rb_submit_cmdlist2+0xe8>
 8010760:	2300      	movs	r3, #0
 8010762:	6113      	str	r3, [r2, #16]
 8010764:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 8010768:	f04f 0e00 	mov.w	lr, #0
 801076c:	e009      	b.n	8010782 <nema_rb_submit_cmdlist2+0x56>
 801076e:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8010772:	6913      	ldr	r3, [r2, #16]
 8010774:	3301      	adds	r3, #1
 8010776:	429d      	cmp	r5, r3
 8010778:	6113      	str	r3, [r2, #16]
 801077a:	bfdc      	itt	le
 801077c:	2300      	movle	r3, #0
 801077e:	f8c2 e010 	strle.w	lr, [r2, #16]
 8010782:	f013 0703 	ands.w	r7, r3, #3
 8010786:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 801078a:	d1f0      	bne.n	801076e <nema_rb_submit_cmdlist2+0x42>
 801078c:	23f0      	movs	r3, #240	@ 0xf0
 801078e:	6033      	str	r3, [r6, #0]
 8010790:	6913      	ldr	r3, [r2, #16]
 8010792:	3301      	adds	r3, #1
 8010794:	429d      	cmp	r5, r3
 8010796:	bfd3      	iteet	le
 8010798:	4623      	movle	r3, r4
 801079a:	6113      	strgt	r3, [r2, #16]
 801079c:	eb04 0383 	addgt.w	r3, r4, r3, lsl #2
 80107a0:	6117      	strle	r7, [r2, #16]
 80107a2:	6018      	str	r0, [r3, #0]
 80107a4:	6913      	ldr	r3, [r2, #16]
 80107a6:	3301      	adds	r3, #1
 80107a8:	429d      	cmp	r5, r3
 80107aa:	dd2f      	ble.n	801080c <nema_rb_submit_cmdlist2+0xe0>
 80107ac:	6113      	str	r3, [r2, #16]
 80107ae:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80107b2:	491d      	ldr	r1, [pc, #116]	@ (8010828 <nema_rb_submit_cmdlist2+0xfc>)
 80107b4:	4610      	mov	r0, r2
 80107b6:	6019      	str	r1, [r3, #0]
 80107b8:	6913      	ldr	r3, [r2, #16]
 80107ba:	3301      	adds	r3, #1
 80107bc:	429d      	cmp	r5, r3
 80107be:	bfd3      	iteet	le
 80107c0:	2300      	movle	r3, #0
 80107c2:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 80107c6:	6113      	strgt	r3, [r2, #16]
 80107c8:	6113      	strle	r3, [r2, #16]
 80107ca:	f8c4 c000 	str.w	ip, [r4]
 80107ce:	6913      	ldr	r3, [r2, #16]
 80107d0:	3301      	adds	r3, #1
 80107d2:	429d      	cmp	r5, r3
 80107d4:	bfd8      	it	le
 80107d6:	2300      	movle	r3, #0
 80107d8:	6113      	str	r3, [r2, #16]
 80107da:	f7f2 fb75 	bl	8002ec8 <nema_buffer_flush>
 80107de:	4a13      	ldr	r2, [pc, #76]	@ (801082c <nema_rb_submit_cmdlist2+0x100>)
 80107e0:	f8d8 3000 	ldr.w	r3, [r8]
 80107e4:	6811      	ldr	r1, [r2, #0]
 80107e6:	691b      	ldr	r3, [r3, #16]
 80107e8:	20ec      	movs	r0, #236	@ 0xec
 80107ea:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80107ee:	f041 0104 	orr.w	r1, r1, #4
 80107f2:	f7f2 fa8f 	bl	8002d14 <nema_reg_write>
 80107f6:	f8d8 3000 	ldr.w	r3, [r8]
 80107fa:	6958      	ldr	r0, [r3, #20]
 80107fc:	3001      	adds	r0, #1
 80107fe:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8010802:	bfa8      	it	ge
 8010804:	2000      	movge	r0, #0
 8010806:	6158      	str	r0, [r3, #20]
 8010808:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801080c:	2100      	movs	r1, #0
 801080e:	4623      	mov	r3, r4
 8010810:	6111      	str	r1, [r2, #16]
 8010812:	e7ce      	b.n	80107b2 <nema_rb_submit_cmdlist2+0x86>
 8010814:	2b00      	cmp	r3, #0
 8010816:	d19c      	bne.n	8010752 <nema_rb_submit_cmdlist2+0x26>
 8010818:	e7a4      	b.n	8010764 <nema_rb_submit_cmdlist2+0x38>
 801081a:	f04f 30ff 	mov.w	r0, #4294967295
 801081e:	4770      	bx	lr
 8010820:	20082fa0 	.word	0x20082fa0
 8010824:	20082f9c 	.word	0x20082f9c
 8010828:	000200f4 	.word	0x000200f4
 801082c:	20082f98 	.word	0x20082f98
 8010830:	20082f94 	.word	0x20082f94

08010834 <nema_rb_submit_cmdlist>:
 8010834:	68c0      	ldr	r0, [r0, #12]
 8010836:	f7ff bf79 	b.w	801072c <nema_rb_submit_cmdlist2>
 801083a:	bf00      	nop

0801083c <nema_rb_inline_cmd>:
 801083c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801083e:	4e21      	ldr	r6, [pc, #132]	@ (80108c4 <nema_rb_inline_cmd+0x88>)
 8010840:	4b21      	ldr	r3, [pc, #132]	@ (80108c8 <nema_rb_inline_cmd+0x8c>)
 8010842:	6832      	ldr	r2, [r6, #0]
 8010844:	681d      	ldr	r5, [r3, #0]
 8010846:	6913      	ldr	r3, [r2, #16]
 8010848:	4c20      	ldr	r4, [pc, #128]	@ (80108cc <nema_rb_inline_cmd+0x90>)
 801084a:	1c5f      	adds	r7, r3, #1
 801084c:	42af      	cmp	r7, r5
 801084e:	6824      	ldr	r4, [r4, #0]
 8010850:	db24      	blt.n	801089c <nema_rb_inline_cmd+0x60>
 8010852:	f44f 3780 	mov.w	r7, #65536	@ 0x10000
 8010856:	f844 7023 	str.w	r7, [r4, r3, lsl #2]
 801085a:	6913      	ldr	r3, [r2, #16]
 801085c:	3301      	adds	r3, #1
 801085e:	429d      	cmp	r5, r3
 8010860:	6113      	str	r3, [r2, #16]
 8010862:	dc17      	bgt.n	8010894 <nema_rb_inline_cmd+0x58>
 8010864:	2700      	movs	r7, #0
 8010866:	4623      	mov	r3, r4
 8010868:	6117      	str	r7, [r2, #16]
 801086a:	6018      	str	r0, [r3, #0]
 801086c:	6913      	ldr	r3, [r2, #16]
 801086e:	3301      	adds	r3, #1
 8010870:	429d      	cmp	r5, r3
 8010872:	bfd3      	iteet	le
 8010874:	2300      	movle	r3, #0
 8010876:	eb04 0483 	addgt.w	r4, r4, r3, lsl #2
 801087a:	6113      	strgt	r3, [r2, #16]
 801087c:	6113      	strle	r3, [r2, #16]
 801087e:	6021      	str	r1, [r4, #0]
 8010880:	6913      	ldr	r3, [r2, #16]
 8010882:	3301      	adds	r3, #1
 8010884:	429d      	cmp	r5, r3
 8010886:	bfd8      	it	le
 8010888:	2300      	movle	r3, #0
 801088a:	f010 4f7f 	tst.w	r0, #4278190080	@ 0xff000000
 801088e:	6113      	str	r3, [r2, #16]
 8010890:	d107      	bne.n	80108a2 <nema_rb_inline_cmd+0x66>
 8010892:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010894:	2b00      	cmp	r3, #0
 8010896:	d1de      	bne.n	8010856 <nema_rb_inline_cmd+0x1a>
 8010898:	4623      	mov	r3, r4
 801089a:	e7e6      	b.n	801086a <nema_rb_inline_cmd+0x2e>
 801089c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80108a0:	e7e3      	b.n	801086a <nema_rb_inline_cmd+0x2e>
 80108a2:	4610      	mov	r0, r2
 80108a4:	f7f2 fb10 	bl	8002ec8 <nema_buffer_flush>
 80108a8:	6833      	ldr	r3, [r6, #0]
 80108aa:	4a09      	ldr	r2, [pc, #36]	@ (80108d0 <nema_rb_inline_cmd+0x94>)
 80108ac:	691b      	ldr	r3, [r3, #16]
 80108ae:	6811      	ldr	r1, [r2, #0]
 80108b0:	20ec      	movs	r0, #236	@ 0xec
 80108b2:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80108b6:	f041 0104 	orr.w	r1, r1, #4
 80108ba:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80108be:	f7f2 ba29 	b.w	8002d14 <nema_reg_write>
 80108c2:	bf00      	nop
 80108c4:	20082f94 	.word	0x20082f94
 80108c8:	20082fa0 	.word	0x20082fa0
 80108cc:	20082f9c 	.word	0x20082f9c
 80108d0:	20082f98 	.word	0x20082f98

080108d4 <nema_rb_force_flush>:
 80108d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80108d6:	4e36      	ldr	r6, [pc, #216]	@ (80109b0 <nema_rb_force_flush+0xdc>)
 80108d8:	4b36      	ldr	r3, [pc, #216]	@ (80109b4 <nema_rb_force_flush+0xe0>)
 80108da:	6830      	ldr	r0, [r6, #0]
 80108dc:	6819      	ldr	r1, [r3, #0]
 80108de:	6903      	ldr	r3, [r0, #16]
 80108e0:	4a35      	ldr	r2, [pc, #212]	@ (80109b8 <nema_rb_force_flush+0xe4>)
 80108e2:	1d1c      	adds	r4, r3, #4
 80108e4:	428c      	cmp	r4, r1
 80108e6:	6812      	ldr	r2, [r2, #0]
 80108e8:	db0a      	blt.n	8010900 <nema_rb_force_flush+0x2c>
 80108ea:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 80108ee:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 80108f2:	6903      	ldr	r3, [r0, #16]
 80108f4:	3301      	adds	r3, #1
 80108f6:	4299      	cmp	r1, r3
 80108f8:	6103      	str	r3, [r0, #16]
 80108fa:	dc51      	bgt.n	80109a0 <nema_rb_force_flush+0xcc>
 80108fc:	2300      	movs	r3, #0
 80108fe:	6103      	str	r3, [r0, #16]
 8010900:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
 8010904:	2700      	movs	r7, #0
 8010906:	e008      	b.n	801091a <nema_rb_force_flush+0x46>
 8010908:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 801090c:	6903      	ldr	r3, [r0, #16]
 801090e:	3301      	adds	r3, #1
 8010910:	4299      	cmp	r1, r3
 8010912:	6103      	str	r3, [r0, #16]
 8010914:	bfdc      	itt	le
 8010916:	2300      	movle	r3, #0
 8010918:	6107      	strle	r7, [r0, #16]
 801091a:	f013 0c03 	ands.w	ip, r3, #3
 801091e:	eb02 0483 	add.w	r4, r2, r3, lsl #2
 8010922:	d1f1      	bne.n	8010908 <nema_rb_force_flush+0x34>
 8010924:	4d25      	ldr	r5, [pc, #148]	@ (80109bc <nema_rb_force_flush+0xe8>)
 8010926:	4f26      	ldr	r7, [pc, #152]	@ (80109c0 <nema_rb_force_flush+0xec>)
 8010928:	6025      	str	r5, [r4, #0]
 801092a:	6904      	ldr	r4, [r0, #16]
 801092c:	683d      	ldr	r5, [r7, #0]
 801092e:	3401      	adds	r4, #1
 8010930:	42a1      	cmp	r1, r4
 8010932:	bfd8      	it	le
 8010934:	4614      	movle	r4, r2
 8010936:	f103 0304 	add.w	r3, r3, #4
 801093a:	bfc8      	it	gt
 801093c:	6104      	strgt	r4, [r0, #16]
 801093e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8010942:	bfcc      	ite	gt
 8010944:	eb02 0484 	addgt.w	r4, r2, r4, lsl #2
 8010948:	f8c0 c010 	strle.w	ip, [r0, #16]
 801094c:	6023      	str	r3, [r4, #0]
 801094e:	6903      	ldr	r3, [r0, #16]
 8010950:	3301      	adds	r3, #1
 8010952:	4299      	cmp	r1, r3
 8010954:	dd27      	ble.n	80109a6 <nema_rb_force_flush+0xd2>
 8010956:	6103      	str	r3, [r0, #16]
 8010958:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801095c:	4c19      	ldr	r4, [pc, #100]	@ (80109c4 <nema_rb_force_flush+0xf0>)
 801095e:	601c      	str	r4, [r3, #0]
 8010960:	6903      	ldr	r3, [r0, #16]
 8010962:	3301      	adds	r3, #1
 8010964:	4299      	cmp	r1, r3
 8010966:	bfd5      	itete	le
 8010968:	2300      	movle	r3, #0
 801096a:	6103      	strgt	r3, [r0, #16]
 801096c:	6103      	strle	r3, [r0, #16]
 801096e:	eb02 0283 	addgt.w	r2, r2, r3, lsl #2
 8010972:	4b15      	ldr	r3, [pc, #84]	@ (80109c8 <nema_rb_force_flush+0xf4>)
 8010974:	681b      	ldr	r3, [r3, #0]
 8010976:	6013      	str	r3, [r2, #0]
 8010978:	6903      	ldr	r3, [r0, #16]
 801097a:	3301      	adds	r3, #1
 801097c:	4299      	cmp	r1, r3
 801097e:	bfd8      	it	le
 8010980:	2300      	movle	r3, #0
 8010982:	6103      	str	r3, [r0, #16]
 8010984:	f7f2 faa0 	bl	8002ec8 <nema_buffer_flush>
 8010988:	6833      	ldr	r3, [r6, #0]
 801098a:	6839      	ldr	r1, [r7, #0]
 801098c:	691b      	ldr	r3, [r3, #16]
 801098e:	20ec      	movs	r0, #236	@ 0xec
 8010990:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8010994:	f041 0104 	orr.w	r1, r1, #4
 8010998:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801099c:	f7f2 b9ba 	b.w	8002d14 <nema_reg_write>
 80109a0:	2b00      	cmp	r3, #0
 80109a2:	d1a4      	bne.n	80108ee <nema_rb_force_flush+0x1a>
 80109a4:	e7ac      	b.n	8010900 <nema_rb_force_flush+0x2c>
 80109a6:	2400      	movs	r4, #0
 80109a8:	4613      	mov	r3, r2
 80109aa:	6104      	str	r4, [r0, #16]
 80109ac:	e7d6      	b.n	801095c <nema_rb_force_flush+0x88>
 80109ae:	bf00      	nop
 80109b0:	20082f94 	.word	0x20082f94
 80109b4:	20082fa0 	.word	0x20082fa0
 80109b8:	20082f9c 	.word	0x20082f9c
 80109bc:	ff0000f0 	.word	0xff0000f0
 80109c0:	20082f98 	.word	0x20082f98
 80109c4:	ff0000f4 	.word	0xff0000f4
 80109c8:	20082fa4 	.word	0x20082fa4

080109cc <nema_rb_submit_cl_id>:
 80109cc:	b510      	push	{r4, lr}
 80109ce:	1e04      	subs	r4, r0, #0
 80109d0:	dd40      	ble.n	8010a54 <nema_rb_submit_cl_id+0x88>
 80109d2:	2000      	movs	r0, #0
 80109d4:	f7f2 fa79 	bl	8002eca <nema_mutex_lock>
 80109d8:	4621      	mov	r1, r4
 80109da:	f44f 70a4 	mov.w	r0, #328	@ 0x148
 80109de:	f7ff ff2d 	bl	801083c <nema_rb_inline_cmd>
 80109e2:	4a1d      	ldr	r2, [pc, #116]	@ (8010a58 <nema_rb_submit_cl_id+0x8c>)
 80109e4:	4b1d      	ldr	r3, [pc, #116]	@ (8010a5c <nema_rb_submit_cl_id+0x90>)
 80109e6:	6812      	ldr	r2, [r2, #0]
 80109e8:	6818      	ldr	r0, [r3, #0]
 80109ea:	6913      	ldr	r3, [r2, #16]
 80109ec:	1c59      	adds	r1, r3, #1
 80109ee:	4281      	cmp	r1, r0
 80109f0:	db0e      	blt.n	8010a10 <nema_rb_submit_cl_id+0x44>
 80109f2:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 80109f6:	491a      	ldr	r1, [pc, #104]	@ (8010a60 <nema_rb_submit_cl_id+0x94>)
 80109f8:	6809      	ldr	r1, [r1, #0]
 80109fa:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 80109fe:	6913      	ldr	r3, [r2, #16]
 8010a00:	3301      	adds	r3, #1
 8010a02:	4298      	cmp	r0, r3
 8010a04:	6113      	str	r3, [r2, #16]
 8010a06:	dc21      	bgt.n	8010a4c <nema_rb_submit_cl_id+0x80>
 8010a08:	2400      	movs	r4, #0
 8010a0a:	460b      	mov	r3, r1
 8010a0c:	6114      	str	r4, [r2, #16]
 8010a0e:	e003      	b.n	8010a18 <nema_rb_submit_cl_id+0x4c>
 8010a10:	4913      	ldr	r1, [pc, #76]	@ (8010a60 <nema_rb_submit_cl_id+0x94>)
 8010a12:	6809      	ldr	r1, [r1, #0]
 8010a14:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8010a18:	24f8      	movs	r4, #248	@ 0xf8
 8010a1a:	601c      	str	r4, [r3, #0]
 8010a1c:	6913      	ldr	r3, [r2, #16]
 8010a1e:	3301      	adds	r3, #1
 8010a20:	4298      	cmp	r0, r3
 8010a22:	bfd5      	itete	le
 8010a24:	2300      	movle	r3, #0
 8010a26:	6113      	strgt	r3, [r2, #16]
 8010a28:	6113      	strle	r3, [r2, #16]
 8010a2a:	eb01 0183 	addgt.w	r1, r1, r3, lsl #2
 8010a2e:	2301      	movs	r3, #1
 8010a30:	600b      	str	r3, [r1, #0]
 8010a32:	6913      	ldr	r3, [r2, #16]
 8010a34:	3301      	adds	r3, #1
 8010a36:	4298      	cmp	r0, r3
 8010a38:	bfd8      	it	le
 8010a3a:	2300      	movle	r3, #0
 8010a3c:	6113      	str	r3, [r2, #16]
 8010a3e:	f7ff ff49 	bl	80108d4 <nema_rb_force_flush>
 8010a42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010a46:	2000      	movs	r0, #0
 8010a48:	f7f2 ba41 	b.w	8002ece <nema_mutex_unlock>
 8010a4c:	2b00      	cmp	r3, #0
 8010a4e:	d1d4      	bne.n	80109fa <nema_rb_submit_cl_id+0x2e>
 8010a50:	460b      	mov	r3, r1
 8010a52:	e7e1      	b.n	8010a18 <nema_rb_submit_cl_id+0x4c>
 8010a54:	bd10      	pop	{r4, pc}
 8010a56:	bf00      	nop
 8010a58:	20082f94 	.word	0x20082f94
 8010a5c:	20082fa0 	.word	0x20082fa0
 8010a60:	20082f9c 	.word	0x20082f9c

08010a64 <init_nema_regs>:
 8010a64:	b538      	push	{r3, r4, r5, lr}
 8010a66:	2100      	movs	r1, #0
 8010a68:	20e8      	movs	r0, #232	@ 0xe8
 8010a6a:	f7f2 f953 	bl	8002d14 <nema_reg_write>
 8010a6e:	2100      	movs	r1, #0
 8010a70:	20fc      	movs	r0, #252	@ 0xfc
 8010a72:	f7f2 f94f 	bl	8002d14 <nema_reg_write>
 8010a76:	2101      	movs	r1, #1
 8010a78:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8010a7c:	f7f2 f94a 	bl	8002d14 <nema_reg_write>
 8010a80:	2000      	movs	r0, #0
 8010a82:	f001 fd35 	bl	80124f0 <nema_set_interrupt_ctrl>
 8010a86:	f00d fa9d 	bl	801dfc4 <nema_blender_init>
 8010a8a:	2100      	movs	r1, #0
 8010a8c:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8010a90:	f00d f9a4 	bl	801dddc <nema_cl_add_cmd>
 8010a94:	f04f 31ff 	mov.w	r1, #4294967295
 8010a98:	f44f 7001 	mov.w	r0, #516	@ 0x204
 8010a9c:	f00d f99e 	bl	801dddc <nema_cl_add_cmd>
 8010aa0:	f001 fa92 	bl	8011fc8 <nema_readHwConfig>
 8010aa4:	f410 2080 	ands.w	r0, r0, #262144	@ 0x40000
 8010aa8:	d015      	beq.n	8010ad6 <init_nema_regs+0x72>
 8010aaa:	2007      	movs	r0, #7
 8010aac:	f001 fc20 	bl	80122f0 <nema_set_depth_ctrl>
 8010ab0:	2300      	movs	r3, #0
 8010ab2:	4c10      	ldr	r4, [pc, #64]	@ (8010af4 <init_nema_regs+0x90>)
 8010ab4:	7820      	ldrb	r0, [r4, #0]
 8010ab6:	7063      	strb	r3, [r4, #1]
 8010ab8:	f001 fa98 	bl	8011fec <nema_enable_tiling>
 8010abc:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8010ac0:	2500      	movs	r5, #0
 8010ac2:	6962      	ldr	r2, [r4, #20]
 8010ac4:	430b      	orrs	r3, r1
 8010ac6:	4313      	orrs	r3, r2
 8010ac8:	e9c4 5303 	strd	r5, r3, [r4, #12]
 8010acc:	f001 fa8a 	bl	8011fe4 <nema_readHwConfigH>
 8010ad0:	0583      	lsls	r3, r0, #22
 8010ad2:	d403      	bmi.n	8010adc <init_nema_regs+0x78>
 8010ad4:	bd38      	pop	{r3, r4, r5, pc}
 8010ad6:	4c07      	ldr	r4, [pc, #28]	@ (8010af4 <init_nema_regs+0x90>)
 8010ad8:	70a0      	strb	r0, [r4, #2]
 8010ada:	e7ef      	b.n	8010abc <init_nema_regs+0x58>
 8010adc:	4629      	mov	r1, r5
 8010ade:	f44f 705d 	mov.w	r0, #884	@ 0x374
 8010ae2:	f7f2 f917 	bl	8002d14 <nema_reg_write>
 8010ae6:	4629      	mov	r1, r5
 8010ae8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010aec:	f44f 705a 	mov.w	r0, #872	@ 0x368
 8010af0:	f7f2 b910 	b.w	8002d14 <nema_reg_write>
 8010af4:	20000064 	.word	0x20000064

08010af8 <nema_init>:
 8010af8:	b510      	push	{r4, lr}
 8010afa:	f7f2 f953 	bl	8002da4 <nema_sys_init>
 8010afe:	1e04      	subs	r4, r0, #0
 8010b00:	db11      	blt.n	8010b26 <nema_init+0x2e>
 8010b02:	f44f 70f6 	mov.w	r0, #492	@ 0x1ec
 8010b06:	f7f2 f8ff 	bl	8002d08 <nema_reg_read>
 8010b0a:	4b10      	ldr	r3, [pc, #64]	@ (8010b4c <nema_init+0x54>)
 8010b0c:	4298      	cmp	r0, r3
 8010b0e:	d114      	bne.n	8010b3a <nema_init+0x42>
 8010b10:	f00d f870 	bl	801dbf4 <nema_cl_unbind>
 8010b14:	22d0      	movs	r2, #208	@ 0xd0
 8010b16:	2100      	movs	r1, #0
 8010b18:	480d      	ldr	r0, [pc, #52]	@ (8010b50 <nema_init+0x58>)
 8010b1a:	f021 fef4 	bl	8032906 <memset>
 8010b1e:	b14c      	cbz	r4, 8010b34 <nema_init+0x3c>
 8010b20:	2400      	movs	r4, #0
 8010b22:	4620      	mov	r0, r4
 8010b24:	bd10      	pop	{r4, pc}
 8010b26:	4a0a      	ldr	r2, [pc, #40]	@ (8010b50 <nema_init+0x58>)
 8010b28:	4620      	mov	r0, r4
 8010b2a:	6993      	ldr	r3, [r2, #24]
 8010b2c:	f043 0301 	orr.w	r3, r3, #1
 8010b30:	6193      	str	r3, [r2, #24]
 8010b32:	bd10      	pop	{r4, pc}
 8010b34:	f7ff ff96 	bl	8010a64 <init_nema_regs>
 8010b38:	e7f3      	b.n	8010b22 <nema_init+0x2a>
 8010b3a:	4a05      	ldr	r2, [pc, #20]	@ (8010b50 <nema_init+0x58>)
 8010b3c:	f04f 34ff 	mov.w	r4, #4294967295
 8010b40:	6993      	ldr	r3, [r2, #24]
 8010b42:	f043 0302 	orr.w	r3, r3, #2
 8010b46:	6193      	str	r3, [r2, #24]
 8010b48:	e7eb      	b.n	8010b22 <nema_init+0x2a>
 8010b4a:	bf00      	nop
 8010b4c:	86362000 	.word	0x86362000
 8010b50:	20000064 	.word	0x20000064

08010b54 <nema_set_error>:
 8010b54:	4a02      	ldr	r2, [pc, #8]	@ (8010b60 <nema_set_error+0xc>)
 8010b56:	6993      	ldr	r3, [r2, #24]
 8010b58:	4318      	orrs	r0, r3
 8010b5a:	6190      	str	r0, [r2, #24]
 8010b5c:	4770      	bx	lr
 8010b5e:	bf00      	nop
 8010b60:	20000064 	.word	0x20000064

08010b64 <nema_bind_tex>:
 8010b64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010b68:	1c44      	adds	r4, r0, #1
 8010b6a:	f8dd a020 	ldr.w	sl, [sp, #32]
 8010b6e:	f89d 6028 	ldrb.w	r6, [sp, #40]	@ 0x28
 8010b72:	d029      	beq.n	8010bc8 <nema_bind_tex+0x64>
 8010b74:	4698      	mov	r8, r3
 8010b76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010b78:	4617      	mov	r7, r2
 8010b7a:	3301      	adds	r3, #1
 8010b7c:	4689      	mov	r9, r1
 8010b7e:	4604      	mov	r4, r0
 8010b80:	d035      	beq.n	8010bee <nema_bind_tex+0x8a>
 8010b82:	b31c      	cbz	r4, 8010bcc <nema_bind_tex+0x68>
 8010b84:	4d50      	ldr	r5, [pc, #320]	@ (8010cc8 <nema_bind_tex+0x164>)
 8010b86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010b88:	2201      	movs	r2, #1
 8010b8a:	0436      	lsls	r6, r6, #16
 8010b8c:	b29b      	uxth	r3, r3
 8010b8e:	ea46 660a 	orr.w	r6, r6, sl, lsl #24
 8010b92:	431e      	orrs	r6, r3
 8010b94:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 8010b98:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8010b9c:	2003      	movs	r0, #3
 8010b9e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8010ba0:	e9c5 970c 	strd	r9, r7, [r5, #48]	@ 0x30
 8010ba4:	f8c5 8038 	str.w	r8, [r5, #56]	@ 0x38
 8010ba8:	642a      	str	r2, [r5, #64]	@ 0x40
 8010baa:	f00d f8bb 	bl	801dd24 <nema_cl_get_space>
 8010bae:	b158      	cbz	r0, 8010bc8 <nema_bind_tex+0x64>
 8010bb0:	0124      	lsls	r4, r4, #4
 8010bb2:	e9c0 4900 	strd	r4, r9, [r0]
 8010bb6:	1d23      	adds	r3, r4, #4
 8010bb8:	6083      	str	r3, [r0, #8]
 8010bba:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
 8010bbc:	3408      	adds	r4, #8
 8010bbe:	e9c0 3403 	strd	r3, r4, [r0, #12]
 8010bc2:	ea47 4708 	orr.w	r7, r7, r8, lsl #16
 8010bc6:	6147      	str	r7, [r0, #20]
 8010bc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010bcc:	f00a 037f 	and.w	r3, sl, #127	@ 0x7f
 8010bd0:	2b12      	cmp	r3, #18
 8010bd2:	d03d      	beq.n	8010c50 <nema_bind_tex+0xec>
 8010bd4:	f1a3 0216 	sub.w	r2, r3, #22
 8010bd8:	2a01      	cmp	r2, #1
 8010bda:	d939      	bls.n	8010c50 <nema_bind_tex+0xec>
 8010bdc:	3b4c      	subs	r3, #76	@ 0x4c
 8010bde:	2b01      	cmp	r3, #1
 8010be0:	d96a      	bls.n	8010cb8 <nema_bind_tex+0x154>
 8010be2:	4d39      	ldr	r5, [pc, #228]	@ (8010cc8 <nema_bind_tex+0x164>)
 8010be4:	7868      	ldrb	r0, [r5, #1]
 8010be6:	f001 fa01 	bl	8011fec <nema_enable_tiling>
 8010bea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010bec:	e7cc      	b.n	8010b88 <nema_bind_tex+0x24>
 8010bee:	06f3      	lsls	r3, r6, #27
 8010bf0:	f00a 017f 	and.w	r1, sl, #127	@ 0x7f
 8010bf4:	d434      	bmi.n	8010c60 <nema_bind_tex+0xfc>
 8010bf6:	4613      	mov	r3, r2
 8010bf8:	f1a1 020b 	sub.w	r2, r1, #11
 8010bfc:	2a42      	cmp	r2, #66	@ 0x42
 8010bfe:	d84f      	bhi.n	8010ca0 <nema_bind_tex+0x13c>
 8010c00:	e8df f002 	tbb	[pc, r2]
 8010c04:	4e4e3535 	.word	0x4e4e3535
 8010c08:	484e4e4e 	.word	0x484e4e4e
 8010c0c:	224e4e4e 	.word	0x224e4e4e
 8010c10:	4e4e4e22 	.word	0x4e4e4e22
 8010c14:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c18:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c1c:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c20:	35343c35 	.word	0x35343c35
 8010c24:	4e4e343c 	.word	0x4e4e343c
 8010c28:	4e3c3c4e 	.word	0x4e3c3c4e
 8010c2c:	4e34344e 	.word	0x4e34344e
 8010c30:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c34:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c38:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c3c:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c40:	4e4e4e4e 	.word	0x4e4e4e4e
 8010c44:	424e      	.short	0x424e
 8010c46:	42          	.byte	0x42
 8010c47:	00          	.byte	0x00
 8010c48:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010c4c:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c4e:	bb2c      	cbnz	r4, 8010c9c <nema_bind_tex+0x138>
 8010c50:	2301      	movs	r3, #1
 8010c52:	4d1d      	ldr	r5, [pc, #116]	@ (8010cc8 <nema_bind_tex+0x164>)
 8010c54:	4618      	mov	r0, r3
 8010c56:	702b      	strb	r3, [r5, #0]
 8010c58:	f001 f9c8 	bl	8011fec <nema_enable_tiling>
 8010c5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010c5e:	e793      	b.n	8010b88 <nema_bind_tex+0x24>
 8010c60:	1cd3      	adds	r3, r2, #3
 8010c62:	bf48      	it	mi
 8010c64:	1d93      	addmi	r3, r2, #6
 8010c66:	f023 0303 	bic.w	r3, r3, #3
 8010c6a:	e7c5      	b.n	8010bf8 <nema_bind_tex+0x94>
 8010c6c:	009b      	lsls	r3, r3, #2
 8010c6e:	1dda      	adds	r2, r3, #7
 8010c70:	d407      	bmi.n	8010c82 <nema_bind_tex+0x11e>
 8010c72:	10d3      	asrs	r3, r2, #3
 8010c74:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c76:	2c00      	cmp	r4, #0
 8010c78:	d0a8      	beq.n	8010bcc <nema_bind_tex+0x68>
 8010c7a:	e783      	b.n	8010b84 <nema_bind_tex+0x20>
 8010c7c:	005b      	lsls	r3, r3, #1
 8010c7e:	1dda      	adds	r2, r3, #7
 8010c80:	d5f7      	bpl.n	8010c72 <nema_bind_tex+0x10e>
 8010c82:	f103 020e 	add.w	r2, r3, #14
 8010c86:	e7f4      	b.n	8010c72 <nema_bind_tex+0x10e>
 8010c88:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010c8c:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c8e:	2c00      	cmp	r4, #0
 8010c90:	d09c      	beq.n	8010bcc <nema_bind_tex+0x68>
 8010c92:	e777      	b.n	8010b84 <nema_bind_tex+0x20>
 8010c94:	005b      	lsls	r3, r3, #1
 8010c96:	9309      	str	r3, [sp, #36]	@ 0x24
 8010c98:	2c00      	cmp	r4, #0
 8010c9a:	d0d9      	beq.n	8010c50 <nema_bind_tex+0xec>
 8010c9c:	4d0a      	ldr	r5, [pc, #40]	@ (8010cc8 <nema_bind_tex+0x164>)
 8010c9e:	e773      	b.n	8010b88 <nema_bind_tex+0x24>
 8010ca0:	3904      	subs	r1, #4
 8010ca2:	2949      	cmp	r1, #73	@ 0x49
 8010ca4:	bf8e      	itee	hi
 8010ca6:	2204      	movhi	r2, #4
 8010ca8:	4a08      	ldrls	r2, [pc, #32]	@ (8010ccc <nema_bind_tex+0x168>)
 8010caa:	5652      	ldrsbls	r2, [r2, r1]
 8010cac:	fb02 f303 	mul.w	r3, r2, r3
 8010cb0:	9309      	str	r3, [sp, #36]	@ 0x24
 8010cb2:	2c00      	cmp	r4, #0
 8010cb4:	d08a      	beq.n	8010bcc <nema_bind_tex+0x68>
 8010cb6:	e765      	b.n	8010b84 <nema_bind_tex+0x20>
 8010cb8:	2301      	movs	r3, #1
 8010cba:	4d03      	ldr	r5, [pc, #12]	@ (8010cc8 <nema_bind_tex+0x164>)
 8010cbc:	4618      	mov	r0, r3
 8010cbe:	702b      	strb	r3, [r5, #0]
 8010cc0:	f001 f9a8 	bl	8012014 <nema_enable_tiling_2x2>
 8010cc4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010cc6:	e75f      	b.n	8010b88 <nema_bind_tex+0x24>
 8010cc8:	20000064 	.word	0x20000064
 8010ccc:	08035ca4 	.word	0x08035ca4

08010cd0 <nema_set_tex_color>:
 8010cd0:	4601      	mov	r1, r0
 8010cd2:	201c      	movs	r0, #28
 8010cd4:	f00d b882 	b.w	801dddc <nema_cl_add_cmd>

08010cd8 <nema_set_const_reg>:
 8010cd8:	3080      	adds	r0, #128	@ 0x80
 8010cda:	0080      	lsls	r0, r0, #2
 8010cdc:	f5b0 7f03 	cmp.w	r0, #524	@ 0x20c
 8010ce0:	d900      	bls.n	8010ce4 <nema_set_const_reg+0xc>
 8010ce2:	4770      	bx	lr
 8010ce4:	f00d b87a 	b.w	801dddc <nema_cl_add_cmd>

08010ce8 <nema_set_clip>:
 8010ce8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010cea:	460c      	mov	r4, r1
 8010cec:	4607      	mov	r7, r0
 8010cee:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010cf2:	4d0c      	ldr	r5, [pc, #48]	@ (8010d24 <nema_set_clip+0x3c>)
 8010cf4:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
 8010cf8:	b289      	uxth	r1, r1
 8010cfa:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8010cfe:	19d6      	adds	r6, r2, r7
 8010d00:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8010d04:	e9c5 7407 	strd	r7, r4, [r5, #28]
 8010d08:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
 8010d0c:	441c      	add	r4, r3
 8010d0e:	f00d f865 	bl	801dddc <nema_cl_add_cmd>
 8010d12:	b2b1      	uxth	r1, r6
 8010d14:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8010d18:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8010d1c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8010d20:	f00d b85c 	b.w	801dddc <nema_cl_add_cmd>
 8010d24:	20000064 	.word	0x20000064

08010d28 <nema_set_clip2>:
 8010d28:	b570      	push	{r4, r5, r6, lr}
 8010d2a:	460d      	mov	r5, r1
 8010d2c:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010d30:	ea25 76e5 	bic.w	r6, r5, r5, asr #31
 8010d34:	b289      	uxth	r1, r1
 8010d36:	1814      	adds	r4, r2, r0
 8010d38:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
 8010d3c:	f44f 70ac 	mov.w	r0, #344	@ 0x158
 8010d40:	441d      	add	r5, r3
 8010d42:	f00d f84b 	bl	801dddc <nema_cl_add_cmd>
 8010d46:	b2a1      	uxth	r1, r4
 8010d48:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8010d4c:	f44f 70ae 	mov.w	r0, #348	@ 0x15c
 8010d50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d54:	f00d b842 	b.w	801dddc <nema_cl_add_cmd>

08010d58 <nema_supports_clip2>:
 8010d58:	b508      	push	{r3, lr}
 8010d5a:	f44f 70ae 	mov.w	r0, #348	@ 0x15c
 8010d5e:	f7f1 ffd3 	bl	8002d08 <nema_reg_read>
 8010d62:	3000      	adds	r0, #0
 8010d64:	bf18      	it	ne
 8010d66:	2001      	movne	r0, #1
 8010d68:	bd08      	pop	{r3, pc}
 8010d6a:	bf00      	nop

08010d6c <nema_set_clip_temp>:
 8010d6c:	b570      	push	{r4, r5, r6, lr}
 8010d6e:	460d      	mov	r5, r1
 8010d70:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8010d74:	ea25 76e5 	bic.w	r6, r5, r5, asr #31
 8010d78:	b289      	uxth	r1, r1
 8010d7a:	1814      	adds	r4, r2, r0
 8010d7c:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
 8010d80:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8010d84:	441d      	add	r5, r3
 8010d86:	f00d f829 	bl	801dddc <nema_cl_add_cmd>
 8010d8a:	b2a1      	uxth	r1, r4
 8010d8c:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8010d90:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8010d94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d98:	f00d b820 	b.w	801dddc <nema_cl_add_cmd>

08010d9c <nema_set_clip_pop>:
 8010d9c:	b538      	push	{r3, r4, r5, lr}
 8010d9e:	4d0d      	ldr	r5, [pc, #52]	@ (8010dd4 <nema_set_clip_pop+0x38>)
 8010da0:	f44f 7088 	mov.w	r0, #272	@ 0x110
 8010da4:	e9d5 3207 	ldrd	r3, r2, [r5, #28]
 8010da8:	ea23 71e3 	bic.w	r1, r3, r3, asr #31
 8010dac:	ea22 74e2 	bic.w	r4, r2, r2, asr #31
 8010db0:	b289      	uxth	r1, r1
 8010db2:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8010db6:	e9d5 4509 	ldrd	r4, r5, [r5, #36]	@ 0x24
 8010dba:	441c      	add	r4, r3
 8010dbc:	4415      	add	r5, r2
 8010dbe:	f00d f80d 	bl	801dddc <nema_cl_add_cmd>
 8010dc2:	b2a1      	uxth	r1, r4
 8010dc4:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8010dc8:	f44f 708a 	mov.w	r0, #276	@ 0x114
 8010dcc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010dd0:	f00d b804 	b.w	801dddc <nema_cl_add_cmd>
 8010dd4:	20000064 	.word	0x20000064

08010dd8 <nema_enable_gradient>:
 8010dd8:	2800      	cmp	r0, #0
 8010dda:	bf14      	ite	ne
 8010ddc:	f04f 6100 	movne.w	r1, #134217728	@ 0x8000000
 8010de0:	2100      	moveq	r1, #0
 8010de2:	b410      	push	{r4}
 8010de4:	4a05      	ldr	r2, [pc, #20]	@ (8010dfc <nema_enable_gradient+0x24>)
 8010de6:	6950      	ldr	r0, [r2, #20]
 8010de8:	e9d2 3401 	ldrd	r3, r4, [r2, #4]
 8010dec:	4323      	orrs	r3, r4
 8010dee:	4303      	orrs	r3, r0
 8010df0:	430b      	orrs	r3, r1
 8010df2:	e9c2 1303 	strd	r1, r3, [r2, #12]
 8010df6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010dfa:	4770      	bx	lr
 8010dfc:	20000064 	.word	0x20000064

08010e00 <nema_stride_size>:
 8010e00:	06cb      	lsls	r3, r1, #27
 8010e02:	d504      	bpl.n	8010e0e <nema_stride_size+0xe>
 8010e04:	1cd3      	adds	r3, r2, #3
 8010e06:	bf48      	it	mi
 8010e08:	1d93      	addmi	r3, r2, #6
 8010e0a:	f023 0203 	bic.w	r2, r3, #3
 8010e0e:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8010e12:	f1a0 030b 	sub.w	r3, r0, #11
 8010e16:	2b42      	cmp	r3, #66	@ 0x42
 8010e18:	d839      	bhi.n	8010e8e <nema_stride_size+0x8e>
 8010e1a:	e8df f003 	tbb	[pc, r3]
 8010e1e:	3232      	.short	0x3232
 8010e20:	38383838 	.word	0x38383838
 8010e24:	38382538 	.word	0x38382538
 8010e28:	38222238 	.word	0x38222238
 8010e2c:	38383838 	.word	0x38383838
 8010e30:	38383838 	.word	0x38383838
 8010e34:	38383838 	.word	0x38383838
 8010e38:	2c323838 	.word	0x2c323838
 8010e3c:	272c3227 	.word	0x272c3227
 8010e40:	2c383838 	.word	0x2c383838
 8010e44:	2738382c 	.word	0x2738382c
 8010e48:	38383827 	.word	0x38383827
 8010e4c:	38383838 	.word	0x38383838
 8010e50:	38383838 	.word	0x38383838
 8010e54:	38383838 	.word	0x38383838
 8010e58:	38383838 	.word	0x38383838
 8010e5c:	22383838 	.word	0x22383838
 8010e60:	22          	.byte	0x22
 8010e61:	00          	.byte	0x00
 8010e62:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8010e66:	4770      	bx	lr
 8010e68:	0050      	lsls	r0, r2, #1
 8010e6a:	4770      	bx	lr
 8010e6c:	0090      	lsls	r0, r2, #2
 8010e6e:	1dc2      	adds	r2, r0, #7
 8010e70:	d404      	bmi.n	8010e7c <nema_stride_size+0x7c>
 8010e72:	10d0      	asrs	r0, r2, #3
 8010e74:	4770      	bx	lr
 8010e76:	0050      	lsls	r0, r2, #1
 8010e78:	1dc2      	adds	r2, r0, #7
 8010e7a:	d5fa      	bpl.n	8010e72 <nema_stride_size+0x72>
 8010e7c:	f100 020e 	add.w	r2, r0, #14
 8010e80:	e7f7      	b.n	8010e72 <nema_stride_size+0x72>
 8010e82:	1dd0      	adds	r0, r2, #7
 8010e84:	bf48      	it	mi
 8010e86:	f102 000e 	addmi.w	r0, r2, #14
 8010e8a:	10c0      	asrs	r0, r0, #3
 8010e8c:	4770      	bx	lr
 8010e8e:	3804      	subs	r0, #4
 8010e90:	2849      	cmp	r0, #73	@ 0x49
 8010e92:	bf8e      	itee	hi
 8010e94:	2004      	movhi	r0, #4
 8010e96:	4b02      	ldrls	r3, [pc, #8]	@ (8010ea0 <nema_stride_size+0xa0>)
 8010e98:	5618      	ldrsbls	r0, [r3, r0]
 8010e9a:	fb00 f002 	mul.w	r0, r0, r2
 8010e9e:	4770      	bx	lr
 8010ea0:	08035ca4 	.word	0x08035ca4

08010ea4 <nema_rgba>:
 8010ea4:	061b      	lsls	r3, r3, #24
 8010ea6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8010eaa:	4318      	orrs	r0, r3
 8010eac:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 8010eb0:	4770      	bx	lr
 8010eb2:	bf00      	nop

08010eb4 <nema_bind_src_tex>:
 8010eb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010eb8:	9c06      	ldr	r4, [sp, #24]
 8010eba:	460e      	mov	r6, r1
 8010ebc:	1c61      	adds	r1, r4, #1
 8010ebe:	4605      	mov	r5, r0
 8010ec0:	4617      	mov	r7, r2
 8010ec2:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8010ec6:	d022      	beq.n	8010f0e <nema_bind_src_tex+0x5a>
 8010ec8:	2201      	movs	r2, #1
 8010eca:	0400      	lsls	r0, r0, #16
 8010ecc:	f8df 80e8 	ldr.w	r8, [pc, #232]	@ 8010fb8 <nema_bind_src_tex+0x104>
 8010ed0:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
 8010ed4:	b2a4      	uxth	r4, r4
 8010ed6:	4323      	orrs	r3, r4
 8010ed8:	2003      	movs	r0, #3
 8010eda:	f8c8 3050 	str.w	r3, [r8, #80]	@ 0x50
 8010ede:	e9c8 5611 	strd	r5, r6, [r8, #68]	@ 0x44
 8010ee2:	f8c8 704c 	str.w	r7, [r8, #76]	@ 0x4c
 8010ee6:	f8c8 2054 	str.w	r2, [r8, #84]	@ 0x54
 8010eea:	f00c ff1b 	bl	801dd24 <nema_cl_get_space>
 8010eee:	b160      	cbz	r0, 8010f0a <nema_bind_src_tex+0x56>
 8010ef0:	2110      	movs	r1, #16
 8010ef2:	2214      	movs	r2, #20
 8010ef4:	2318      	movs	r3, #24
 8010ef6:	e9c0 1500 	strd	r1, r5, [r0]
 8010efa:	6082      	str	r2, [r0, #8]
 8010efc:	f8d8 2050 	ldr.w	r2, [r8, #80]	@ 0x50
 8010f00:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8010f04:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8010f08:	6146      	str	r6, [r0, #20]
 8010f0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f0e:	06c2      	lsls	r2, r0, #27
 8010f10:	f003 017f 	and.w	r1, r3, #127	@ 0x7f
 8010f14:	d428      	bmi.n	8010f68 <nema_bind_src_tex+0xb4>
 8010f16:	4634      	mov	r4, r6
 8010f18:	f1a1 020b 	sub.w	r2, r1, #11
 8010f1c:	2a42      	cmp	r2, #66	@ 0x42
 8010f1e:	d83f      	bhi.n	8010fa0 <nema_bind_src_tex+0xec>
 8010f20:	e8df f002 	tbb	[pc, r2]
 8010f24:	3e3e3636 	.word	0x3e3e3636
 8010f28:	3c3e3e3e 	.word	0x3c3e3e3e
 8010f2c:	283e3e3e 	.word	0x283e3e3e
 8010f30:	3e3e3e28 	.word	0x3e3e3e28
 8010f34:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f38:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f3c:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f40:	36302b36 	.word	0x36302b36
 8010f44:	3e3e302b 	.word	0x3e3e302b
 8010f48:	3e2b2b3e 	.word	0x3e2b2b3e
 8010f4c:	3e30303e 	.word	0x3e30303e
 8010f50:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f54:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f58:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f5c:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f60:	3e3e3e3e 	.word	0x3e3e3e3e
 8010f64:	283e      	.short	0x283e
 8010f66:	28          	.byte	0x28
 8010f67:	00          	.byte	0x00
 8010f68:	1cf4      	adds	r4, r6, #3
 8010f6a:	bf48      	it	mi
 8010f6c:	1db4      	addmi	r4, r6, #6
 8010f6e:	f024 0403 	bic.w	r4, r4, #3
 8010f72:	e7d1      	b.n	8010f18 <nema_bind_src_tex+0x64>
 8010f74:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8010f78:	e7a6      	b.n	8010ec8 <nema_bind_src_tex+0x14>
 8010f7a:	0062      	lsls	r2, r4, #1
 8010f7c:	1dd4      	adds	r4, r2, #7
 8010f7e:	d404      	bmi.n	8010f8a <nema_bind_src_tex+0xd6>
 8010f80:	10e4      	asrs	r4, r4, #3
 8010f82:	e7a1      	b.n	8010ec8 <nema_bind_src_tex+0x14>
 8010f84:	00a2      	lsls	r2, r4, #2
 8010f86:	1dd4      	adds	r4, r2, #7
 8010f88:	d5fa      	bpl.n	8010f80 <nema_bind_src_tex+0xcc>
 8010f8a:	f102 040e 	add.w	r4, r2, #14
 8010f8e:	e7f7      	b.n	8010f80 <nema_bind_src_tex+0xcc>
 8010f90:	1de2      	adds	r2, r4, #7
 8010f92:	bf48      	it	mi
 8010f94:	f104 020e 	addmi.w	r2, r4, #14
 8010f98:	10d4      	asrs	r4, r2, #3
 8010f9a:	e795      	b.n	8010ec8 <nema_bind_src_tex+0x14>
 8010f9c:	0064      	lsls	r4, r4, #1
 8010f9e:	e793      	b.n	8010ec8 <nema_bind_src_tex+0x14>
 8010fa0:	3904      	subs	r1, #4
 8010fa2:	2949      	cmp	r1, #73	@ 0x49
 8010fa4:	bf8e      	itee	hi
 8010fa6:	2204      	movhi	r2, #4
 8010fa8:	4a02      	ldrls	r2, [pc, #8]	@ (8010fb4 <nema_bind_src_tex+0x100>)
 8010faa:	5652      	ldrsbls	r2, [r2, r1]
 8010fac:	fb02 f404 	mul.w	r4, r2, r4
 8010fb0:	e78a      	b.n	8010ec8 <nema_bind_src_tex+0x14>
 8010fb2:	bf00      	nop
 8010fb4:	08035ca4 	.word	0x08035ca4
 8010fb8:	20000064 	.word	0x20000064

08010fbc <nema_bind_dst_tex>:
 8010fbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010fc0:	9d08      	ldr	r5, [sp, #32]
 8010fc2:	4699      	mov	r9, r3
 8010fc4:	4617      	mov	r7, r2
 8010fc6:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8010fca:	1c6b      	adds	r3, r5, #1
 8010fcc:	4680      	mov	r8, r0
 8010fce:	460e      	mov	r6, r1
 8010fd0:	d031      	beq.n	8011036 <nema_bind_dst_tex+0x7a>
 8010fd2:	2a12      	cmp	r2, #18
 8010fd4:	d00e      	beq.n	8010ff4 <nema_bind_dst_tex+0x38>
 8010fd6:	f1a2 0316 	sub.w	r3, r2, #22
 8010fda:	2b01      	cmp	r3, #1
 8010fdc:	d90a      	bls.n	8010ff4 <nema_bind_dst_tex+0x38>
 8010fde:	3a4c      	subs	r2, #76	@ 0x4c
 8010fe0:	2a01      	cmp	r2, #1
 8010fe2:	f240 80b7 	bls.w	8011154 <nema_bind_dst_tex+0x198>
 8010fe6:	4c6e      	ldr	r4, [pc, #440]	@ (80111a0 <nema_bind_dst_tex+0x1e4>)
 8010fe8:	7860      	ldrb	r0, [r4, #1]
 8010fea:	f000 ffff 	bl	8011fec <nema_enable_tiling>
 8010fee:	e007      	b.n	8011000 <nema_bind_dst_tex+0x44>
 8010ff0:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8010ff4:	2301      	movs	r3, #1
 8010ff6:	4c6a      	ldr	r4, [pc, #424]	@ (80111a0 <nema_bind_dst_tex+0x1e4>)
 8010ff8:	4618      	mov	r0, r3
 8010ffa:	7023      	strb	r3, [r4, #0]
 8010ffc:	f000 fff6 	bl	8011fec <nema_enable_tiling>
 8011000:	2201      	movs	r2, #1
 8011002:	b2ad      	uxth	r5, r5
 8011004:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8011008:	2003      	movs	r0, #3
 801100a:	63e5      	str	r5, [r4, #60]	@ 0x3c
 801100c:	e9c4 860c 	strd	r8, r6, [r4, #48]	@ 0x30
 8011010:	63a7      	str	r7, [r4, #56]	@ 0x38
 8011012:	6422      	str	r2, [r4, #64]	@ 0x40
 8011014:	f00c fe86 	bl	801dd24 <nema_cl_get_space>
 8011018:	b158      	cbz	r0, 8011032 <nema_bind_dst_tex+0x76>
 801101a:	2100      	movs	r1, #0
 801101c:	2204      	movs	r2, #4
 801101e:	2308      	movs	r3, #8
 8011020:	e9c0 1800 	strd	r1, r8, [r0]
 8011024:	6082      	str	r2, [r0, #8]
 8011026:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8011028:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 801102c:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8011030:	6146      	str	r6, [r0, #20]
 8011032:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011036:	f1a2 030b 	sub.w	r3, r2, #11
 801103a:	2b42      	cmp	r3, #66	@ 0x42
 801103c:	f200 80a6 	bhi.w	801118c <nema_bind_dst_tex+0x1d0>
 8011040:	a101      	add	r1, pc, #4	@ (adr r1, 8011048 <nema_bind_dst_tex+0x8c>)
 8011042:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8011046:	bf00      	nop
 8011048:	0801117f 	.word	0x0801117f
 801104c:	0801117f 	.word	0x0801117f
 8011050:	0801118d 	.word	0x0801118d
 8011054:	0801118d 	.word	0x0801118d
 8011058:	0801118d 	.word	0x0801118d
 801105c:	0801118d 	.word	0x0801118d
 8011060:	0801118d 	.word	0x0801118d
 8011064:	08011189 	.word	0x08011189
 8011068:	0801118d 	.word	0x0801118d
 801106c:	0801118d 	.word	0x0801118d
 8011070:	0801118d 	.word	0x0801118d
 8011074:	08010ff1 	.word	0x08010ff1
 8011078:	08010ff1 	.word	0x08010ff1
 801107c:	0801118d 	.word	0x0801118d
 8011080:	0801118d 	.word	0x0801118d
 8011084:	0801118d 	.word	0x0801118d
 8011088:	0801118d 	.word	0x0801118d
 801108c:	0801118d 	.word	0x0801118d
 8011090:	0801118d 	.word	0x0801118d
 8011094:	0801118d 	.word	0x0801118d
 8011098:	0801118d 	.word	0x0801118d
 801109c:	0801118d 	.word	0x0801118d
 80110a0:	0801118d 	.word	0x0801118d
 80110a4:	0801118d 	.word	0x0801118d
 80110a8:	0801118d 	.word	0x0801118d
 80110ac:	0801118d 	.word	0x0801118d
 80110b0:	0801118d 	.word	0x0801118d
 80110b4:	0801118d 	.word	0x0801118d
 80110b8:	0801117f 	.word	0x0801117f
 80110bc:	08011169 	.word	0x08011169
 80110c0:	08011173 	.word	0x08011173
 80110c4:	0801117f 	.word	0x0801117f
 80110c8:	08011169 	.word	0x08011169
 80110cc:	08011173 	.word	0x08011173
 80110d0:	0801118d 	.word	0x0801118d
 80110d4:	0801118d 	.word	0x0801118d
 80110d8:	0801118d 	.word	0x0801118d
 80110dc:	08011169 	.word	0x08011169
 80110e0:	08011169 	.word	0x08011169
 80110e4:	0801118d 	.word	0x0801118d
 80110e8:	0801118d 	.word	0x0801118d
 80110ec:	08011173 	.word	0x08011173
 80110f0:	08011173 	.word	0x08011173
 80110f4:	0801118d 	.word	0x0801118d
 80110f8:	0801118d 	.word	0x0801118d
 80110fc:	0801118d 	.word	0x0801118d
 8011100:	0801118d 	.word	0x0801118d
 8011104:	0801118d 	.word	0x0801118d
 8011108:	0801118d 	.word	0x0801118d
 801110c:	0801118d 	.word	0x0801118d
 8011110:	0801118d 	.word	0x0801118d
 8011114:	0801118d 	.word	0x0801118d
 8011118:	0801118d 	.word	0x0801118d
 801111c:	0801118d 	.word	0x0801118d
 8011120:	0801118d 	.word	0x0801118d
 8011124:	0801118d 	.word	0x0801118d
 8011128:	0801118d 	.word	0x0801118d
 801112c:	0801118d 	.word	0x0801118d
 8011130:	0801118d 	.word	0x0801118d
 8011134:	0801118d 	.word	0x0801118d
 8011138:	0801118d 	.word	0x0801118d
 801113c:	0801118d 	.word	0x0801118d
 8011140:	0801118d 	.word	0x0801118d
 8011144:	0801118d 	.word	0x0801118d
 8011148:	0801118d 	.word	0x0801118d
 801114c:	08011163 	.word	0x08011163
 8011150:	08011163 	.word	0x08011163
 8011154:	2301      	movs	r3, #1
 8011156:	4c12      	ldr	r4, [pc, #72]	@ (80111a0 <nema_bind_dst_tex+0x1e4>)
 8011158:	4618      	mov	r0, r3
 801115a:	7023      	strb	r3, [r4, #0]
 801115c:	f000 ff5a 	bl	8012014 <nema_enable_tiling_2x2>
 8011160:	e74e      	b.n	8011000 <nema_bind_dst_tex+0x44>
 8011162:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8011166:	e734      	b.n	8010fd2 <nema_bind_dst_tex+0x16>
 8011168:	0073      	lsls	r3, r6, #1
 801116a:	1ddd      	adds	r5, r3, #7
 801116c:	d404      	bmi.n	8011178 <nema_bind_dst_tex+0x1bc>
 801116e:	10ed      	asrs	r5, r5, #3
 8011170:	e72f      	b.n	8010fd2 <nema_bind_dst_tex+0x16>
 8011172:	00b3      	lsls	r3, r6, #2
 8011174:	1ddd      	adds	r5, r3, #7
 8011176:	d5fa      	bpl.n	801116e <nema_bind_dst_tex+0x1b2>
 8011178:	f103 050e 	add.w	r5, r3, #14
 801117c:	e7f7      	b.n	801116e <nema_bind_dst_tex+0x1b2>
 801117e:	1df5      	adds	r5, r6, #7
 8011180:	d5f5      	bpl.n	801116e <nema_bind_dst_tex+0x1b2>
 8011182:	f106 050e 	add.w	r5, r6, #14
 8011186:	e7f2      	b.n	801116e <nema_bind_dst_tex+0x1b2>
 8011188:	0075      	lsls	r5, r6, #1
 801118a:	e733      	b.n	8010ff4 <nema_bind_dst_tex+0x38>
 801118c:	1f13      	subs	r3, r2, #4
 801118e:	2b49      	cmp	r3, #73	@ 0x49
 8011190:	bf8e      	itee	hi
 8011192:	2504      	movhi	r5, #4
 8011194:	4903      	ldrls	r1, [pc, #12]	@ (80111a4 <nema_bind_dst_tex+0x1e8>)
 8011196:	56cd      	ldrsbls	r5, [r1, r3]
 8011198:	fb05 f506 	mul.w	r5, r5, r6
 801119c:	e719      	b.n	8010fd2 <nema_bind_dst_tex+0x16>
 801119e:	bf00      	nop
 80111a0:	20000064 	.word	0x20000064
 80111a4:	08035ca4 	.word	0x08035ca4

080111a8 <nema_bind_lut_tex>:
 80111a8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80111ac:	f1a3 040b 	sub.w	r4, r3, #11
 80111b0:	2c2a      	cmp	r4, #42	@ 0x2a
 80111b2:	469a      	mov	sl, r3
 80111b4:	4680      	mov	r8, r0
 80111b6:	460e      	mov	r6, r1
 80111b8:	4617      	mov	r7, r2
 80111ba:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 80111be:	f89d 502c 	ldrb.w	r5, [sp, #44]	@ 0x2c
 80111c2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80111c4:	d84a      	bhi.n	801125c <nema_bind_lut_tex+0xb4>
 80111c6:	4a27      	ldr	r2, [pc, #156]	@ (8011264 <nema_bind_lut_tex+0xbc>)
 80111c8:	f832 b014 	ldrh.w	fp, [r2, r4, lsl #1]
 80111cc:	465a      	mov	r2, fp
 80111ce:	2101      	movs	r1, #1
 80111d0:	4c25      	ldr	r4, [pc, #148]	@ (8011268 <nema_bind_lut_tex+0xc0>)
 80111d2:	061b      	lsls	r3, r3, #24
 80111d4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80111d8:	6663      	str	r3, [r4, #100]	@ 0x64
 80111da:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80111dc:	2003      	movs	r0, #3
 80111de:	e9c4 3216 	strd	r3, r2, [r4, #88]	@ 0x58
 80111e2:	6621      	str	r1, [r4, #96]	@ 0x60
 80111e4:	66a1      	str	r1, [r4, #104]	@ 0x68
 80111e6:	f00c fd9d 	bl	801dd24 <nema_cl_get_space>
 80111ea:	b170      	cbz	r0, 801120a <nema_bind_lut_tex+0x62>
 80111ec:	2220      	movs	r2, #32
 80111ee:	f04f 0c24 	mov.w	ip, #36	@ 0x24
 80111f2:	2128      	movs	r1, #40	@ 0x28
 80111f4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80111f6:	f8c0 c008 	str.w	ip, [r0, #8]
 80111fa:	e9c0 2300 	strd	r2, r3, [r0]
 80111fe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8011200:	f44b 3280 	orr.w	r2, fp, #65536	@ 0x10000
 8011204:	e9c0 3103 	strd	r3, r1, [r0, #12]
 8011208:	6142      	str	r2, [r0, #20]
 801120a:	f1b9 3fff 	cmp.w	r9, #4294967295
 801120e:	d106      	bne.n	801121e <nema_bind_lut_tex+0x76>
 8011210:	4632      	mov	r2, r6
 8011212:	4629      	mov	r1, r5
 8011214:	f00a 007f 	and.w	r0, sl, #127	@ 0x7f
 8011218:	f7ff fdf2 	bl	8010e00 <nema_stride_size>
 801121c:	4681      	mov	r9, r0
 801121e:	2201      	movs	r2, #1
 8011220:	042d      	lsls	r5, r5, #16
 8011222:	ea45 630a 	orr.w	r3, r5, sl, lsl #24
 8011226:	fa1f f989 	uxth.w	r9, r9
 801122a:	ea43 0309 	orr.w	r3, r3, r9
 801122e:	2003      	movs	r0, #3
 8011230:	6523      	str	r3, [r4, #80]	@ 0x50
 8011232:	e9c4 8611 	strd	r8, r6, [r4, #68]	@ 0x44
 8011236:	64e7      	str	r7, [r4, #76]	@ 0x4c
 8011238:	6562      	str	r2, [r4, #84]	@ 0x54
 801123a:	f00c fd73 	bl	801dd24 <nema_cl_get_space>
 801123e:	b158      	cbz	r0, 8011258 <nema_bind_lut_tex+0xb0>
 8011240:	2110      	movs	r1, #16
 8011242:	2214      	movs	r2, #20
 8011244:	2318      	movs	r3, #24
 8011246:	e9c0 1800 	strd	r1, r8, [r0]
 801124a:	6082      	str	r2, [r0, #8]
 801124c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 801124e:	ea46 4607 	orr.w	r6, r6, r7, lsl #16
 8011252:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8011256:	6146      	str	r6, [r0, #20]
 8011258:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801125c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8011260:	4693      	mov	fp, r2
 8011262:	e7b4      	b.n	80111ce <nema_bind_lut_tex+0x26>
 8011264:	08035cf0 	.word	0x08035cf0
 8011268:	20000064 	.word	0x20000064

0801126c <nema_set_gradient>:
 801126c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011270:	ed2d 8b0c 	vpush	{d8-d13}
 8011274:	eeb0 da60 	vmov.f32	s26, s1
 8011278:	b08d      	sub	sp, #52	@ 0x34
 801127a:	eef0 ca41 	vmov.f32	s25, s2
 801127e:	eeb0 ca61 	vmov.f32	s24, s3
 8011282:	eef0 ba42 	vmov.f32	s23, s4
 8011286:	eeb0 ba62 	vmov.f32	s22, s5
 801128a:	eef0 aa43 	vmov.f32	s21, s6
 801128e:	eeb0 aa63 	vmov.f32	s20, s7
 8011292:	eef0 9a44 	vmov.f32	s19, s8
 8011296:	eeb0 9a64 	vmov.f32	s18, s9
 801129a:	eef0 8a45 	vmov.f32	s17, s10
 801129e:	eeb0 8a65 	vmov.f32	s16, s11
 80112a2:	f000 fb25 	bl	80118f0 <nema_f2fx>
 80112a6:	eeb0 0a4d 	vmov.f32	s0, s26
 80112aa:	4604      	mov	r4, r0
 80112ac:	f000 fb20 	bl	80118f0 <nema_f2fx>
 80112b0:	eeb0 0a6c 	vmov.f32	s0, s25
 80112b4:	4605      	mov	r5, r0
 80112b6:	f000 fb1b 	bl	80118f0 <nema_f2fx>
 80112ba:	eeb0 0a4c 	vmov.f32	s0, s24
 80112be:	4606      	mov	r6, r0
 80112c0:	f000 fb16 	bl	80118f0 <nema_f2fx>
 80112c4:	eeb0 0a6b 	vmov.f32	s0, s23
 80112c8:	4607      	mov	r7, r0
 80112ca:	f000 fb11 	bl	80118f0 <nema_f2fx>
 80112ce:	eeb0 0a4b 	vmov.f32	s0, s22
 80112d2:	900b      	str	r0, [sp, #44]	@ 0x2c
 80112d4:	f000 fb0c 	bl	80118f0 <nema_f2fx>
 80112d8:	eeb0 0a6a 	vmov.f32	s0, s21
 80112dc:	4680      	mov	r8, r0
 80112de:	f000 fb07 	bl	80118f0 <nema_f2fx>
 80112e2:	eeb0 0a4a 	vmov.f32	s0, s20
 80112e6:	4681      	mov	r9, r0
 80112e8:	f000 fb02 	bl	80118f0 <nema_f2fx>
 80112ec:	eeb0 0a69 	vmov.f32	s0, s19
 80112f0:	4682      	mov	sl, r0
 80112f2:	f000 fafd 	bl	80118f0 <nema_f2fx>
 80112f6:	eeb0 0a49 	vmov.f32	s0, s18
 80112fa:	4683      	mov	fp, r0
 80112fc:	f000 faf8 	bl	80118f0 <nema_f2fx>
 8011300:	eeb0 0a68 	vmov.f32	s0, s17
 8011304:	900a      	str	r0, [sp, #40]	@ 0x28
 8011306:	f000 faf3 	bl	80118f0 <nema_f2fx>
 801130a:	eeb0 0a48 	vmov.f32	s0, s16
 801130e:	9009      	str	r0, [sp, #36]	@ 0x24
 8011310:	f000 faee 	bl	80118f0 <nema_f2fx>
 8011314:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8011316:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011318:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801131a:	9100      	str	r1, [sp, #0]
 801131c:	9007      	str	r0, [sp, #28]
 801131e:	9206      	str	r2, [sp, #24]
 8011320:	e9cd b304 	strd	fp, r3, [sp, #16]
 8011324:	e9cd 9a02 	strd	r9, sl, [sp, #8]
 8011328:	f8cd 8004 	str.w	r8, [sp, #4]
 801132c:	463b      	mov	r3, r7
 801132e:	4632      	mov	r2, r6
 8011330:	4629      	mov	r1, r5
 8011332:	4620      	mov	r0, r4
 8011334:	f000 ffe2 	bl	80122fc <nema_set_gradient_fx>
 8011338:	b00d      	add	sp, #52	@ 0x34
 801133a:	ecbd 8b0c 	vpop	{d8-d13}
 801133e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011342:	bf00      	nop

08011344 <nema_fill_rect>:
 8011344:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011348:	4604      	mov	r4, r0
 801134a:	460d      	mov	r5, r1
 801134c:	4616      	mov	r6, r2
 801134e:	461f      	mov	r7, r3
 8011350:	9806      	ldr	r0, [sp, #24]
 8011352:	f001 f81f 	bl	8012394 <nema_set_raster_color>
 8011356:	463b      	mov	r3, r7
 8011358:	4632      	mov	r2, r6
 801135a:	4629      	mov	r1, r5
 801135c:	4620      	mov	r0, r4
 801135e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011362:	f001 b859 	b.w	8012418 <nema_raster_rect>
 8011366:	bf00      	nop

08011368 <nema_blit>:
 8011368:	ee07 0a90 	vmov	s15, r0
 801136c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8011370:	ee07 1a90 	vmov	s15, r1
 8011374:	b500      	push	{lr}
 8011376:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801137a:	b083      	sub	sp, #12
 801137c:	e9cd 0100 	strd	r0, r1, [sp]
 8011380:	f000 ff56 	bl	8012230 <nema_set_matrix_translate>
 8011384:	e9dd 0100 	ldrd	r0, r1, [sp]
 8011388:	4a03      	ldr	r2, [pc, #12]	@ (8011398 <nema_blit+0x30>)
 801138a:	e9d2 2312 	ldrd	r2, r3, [r2, #72]	@ 0x48
 801138e:	b003      	add	sp, #12
 8011390:	f85d eb04 	ldr.w	lr, [sp], #4
 8011394:	f001 b840 	b.w	8012418 <nema_raster_rect>
 8011398:	20000064 	.word	0x20000064

0801139c <nema_blit_rotate>:
 801139c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801139e:	2600      	movs	r6, #0
 80113a0:	f04f 577e 	mov.w	r7, #1065353216	@ 0x3f800000
 80113a4:	4b68      	ldr	r3, [pc, #416]	@ (8011548 <nema_blit_rotate+0x1ac>)
 80113a6:	b08b      	sub	sp, #44	@ 0x2c
 80113a8:	3a01      	subs	r2, #1
 80113aa:	9607      	str	r6, [sp, #28]
 80113ac:	9608      	str	r6, [sp, #32]
 80113ae:	9709      	str	r7, [sp, #36]	@ 0x24
 80113b0:	4604      	mov	r4, r0
 80113b2:	e9d3 6712 	ldrd	r6, r7, [r3, #72]	@ 0x48
 80113b6:	460d      	mov	r5, r1
 80113b8:	2a0e      	cmp	r2, #14
 80113ba:	f200 80b0 	bhi.w	801151e <nema_blit_rotate+0x182>
 80113be:	e8df f002 	tbb	[pc, r2]
 80113c2:	4730      	.short	0x4730
 80113c4:	9a836f58 	.word	0x9a836f58
 80113c8:	6f089a08 	.word	0x6f089a08
 80113cc:	ae584783 	.word	0xae584783
 80113d0:	30          	.byte	0x30
 80113d1:	00          	.byte	0x00
 80113d2:	1970      	adds	r0, r6, r5
 80113d4:	ee07 0a10 	vmov	s14, r0
 80113d8:	1938      	adds	r0, r7, r4
 80113da:	4631      	mov	r1, r6
 80113dc:	ee07 0a90 	vmov	s15, r0
 80113e0:	2200      	movs	r2, #0
 80113e2:	463e      	mov	r6, r7
 80113e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80113e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80113ec:	460f      	mov	r7, r1
 80113ee:	4b57      	ldr	r3, [pc, #348]	@ (801154c <nema_blit_rotate+0x1b0>)
 80113f0:	9201      	str	r2, [sp, #4]
 80113f2:	9205      	str	r2, [sp, #20]
 80113f4:	9302      	str	r3, [sp, #8]
 80113f6:	9304      	str	r3, [sp, #16]
 80113f8:	eddf 6a55 	vldr	s13, [pc, #340]	@ 8011550 <nema_blit_rotate+0x1b4>
 80113fc:	ee37 7a26 	vadd.f32	s14, s14, s13
 8011400:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011404:	a801      	add	r0, sp, #4
 8011406:	ed8d 7a03 	vstr	s14, [sp, #12]
 801140a:	edcd 7a06 	vstr	s15, [sp, #24]
 801140e:	f000 fe55 	bl	80120bc <nema_set_matrix>
 8011412:	463b      	mov	r3, r7
 8011414:	4632      	mov	r2, r6
 8011416:	4629      	mov	r1, r5
 8011418:	4620      	mov	r0, r4
 801141a:	f000 fffd 	bl	8012418 <nema_raster_rect>
 801141e:	b00b      	add	sp, #44	@ 0x2c
 8011420:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011422:	ee07 4a90 	vmov	s15, r4
 8011426:	4630      	mov	r0, r6
 8011428:	442e      	add	r6, r5
 801142a:	2300      	movs	r3, #0
 801142c:	ee07 6a10 	vmov	s14, r6
 8011430:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8011434:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011438:	4944      	ldr	r1, [pc, #272]	@ (801154c <nema_blit_rotate+0x1b0>)
 801143a:	463e      	mov	r6, r7
 801143c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011440:	9301      	str	r3, [sp, #4]
 8011442:	4607      	mov	r7, r0
 8011444:	9305      	str	r3, [sp, #20]
 8011446:	9102      	str	r1, [sp, #8]
 8011448:	9204      	str	r2, [sp, #16]
 801144a:	eef1 7a67 	vneg.f32	s15, s15
 801144e:	e7d3      	b.n	80113f8 <nema_blit_rotate+0x5c>
 8011450:	4b3e      	ldr	r3, [pc, #248]	@ (801154c <nema_blit_rotate+0x1b0>)
 8011452:	2200      	movs	r2, #0
 8011454:	9301      	str	r3, [sp, #4]
 8011456:	9305      	str	r3, [sp, #20]
 8011458:	1833      	adds	r3, r6, r0
 801145a:	ee07 3a90 	vmov	s15, r3
 801145e:	1878      	adds	r0, r7, r1
 8011460:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011464:	ee07 0a90 	vmov	s15, r0
 8011468:	9202      	str	r2, [sp, #8]
 801146a:	9204      	str	r2, [sp, #16]
 801146c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011470:	e7c2      	b.n	80113f8 <nema_blit_rotate+0x5c>
 8011472:	ee07 5a10 	vmov	s14, r5
 8011476:	4630      	mov	r0, r6
 8011478:	193e      	adds	r6, r7, r4
 801147a:	2300      	movs	r3, #0
 801147c:	ee07 6a90 	vmov	s15, r6
 8011480:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8011484:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011488:	4a30      	ldr	r2, [pc, #192]	@ (801154c <nema_blit_rotate+0x1b0>)
 801148a:	463e      	mov	r6, r7
 801148c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011490:	4607      	mov	r7, r0
 8011492:	9301      	str	r3, [sp, #4]
 8011494:	9305      	str	r3, [sp, #20]
 8011496:	9102      	str	r1, [sp, #8]
 8011498:	eeb1 7a47 	vneg.f32	s14, s14
 801149c:	9204      	str	r2, [sp, #16]
 801149e:	e7ab      	b.n	80113f8 <nema_blit_rotate+0x5c>
 80114a0:	ee07 4a90 	vmov	s15, r4
 80114a4:	1978      	adds	r0, r7, r5
 80114a6:	2300      	movs	r3, #0
 80114a8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80114ac:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 80114b0:	ee07 0a90 	vmov	s15, r0
 80114b4:	4a25      	ldr	r2, [pc, #148]	@ (801154c <nema_blit_rotate+0x1b0>)
 80114b6:	9101      	str	r1, [sp, #4]
 80114b8:	9302      	str	r3, [sp, #8]
 80114ba:	9304      	str	r3, [sp, #16]
 80114bc:	eeb1 7a47 	vneg.f32	s14, s14
 80114c0:	9205      	str	r2, [sp, #20]
 80114c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80114c6:	e797      	b.n	80113f8 <nema_blit_rotate+0x5c>
 80114c8:	ee07 5a90 	vmov	s15, r5
 80114cc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80114d0:	ee07 0a90 	vmov	s15, r0
 80114d4:	4631      	mov	r1, r6
 80114d6:	2200      	movs	r2, #0
 80114d8:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 80114dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80114e0:	463e      	mov	r6, r7
 80114e2:	eeb1 7a47 	vneg.f32	s14, s14
 80114e6:	460f      	mov	r7, r1
 80114e8:	eef1 7a67 	vneg.f32	s15, s15
 80114ec:	9201      	str	r2, [sp, #4]
 80114ee:	9205      	str	r2, [sp, #20]
 80114f0:	9302      	str	r3, [sp, #8]
 80114f2:	9304      	str	r3, [sp, #16]
 80114f4:	e780      	b.n	80113f8 <nema_blit_rotate+0x5c>
 80114f6:	ee07 5a90 	vmov	s15, r5
 80114fa:	1830      	adds	r0, r6, r0
 80114fc:	2300      	movs	r3, #0
 80114fe:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8011502:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011506:	ee07 0a10 	vmov	s14, r0
 801150a:	4910      	ldr	r1, [pc, #64]	@ (801154c <nema_blit_rotate+0x1b0>)
 801150c:	9302      	str	r3, [sp, #8]
 801150e:	9101      	str	r1, [sp, #4]
 8011510:	9304      	str	r3, [sp, #16]
 8011512:	9205      	str	r2, [sp, #20]
 8011514:	eef1 7a67 	vneg.f32	s15, s15
 8011518:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801151c:	e76c      	b.n	80113f8 <nema_blit_rotate+0x5c>
 801151e:	ee07 0a90 	vmov	s15, r0
 8011522:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011526:	ee07 1a90 	vmov	s15, r1
 801152a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801152e:	2300      	movs	r3, #0
 8011530:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011534:	9201      	str	r2, [sp, #4]
 8011536:	9205      	str	r2, [sp, #20]
 8011538:	9302      	str	r3, [sp, #8]
 801153a:	9304      	str	r3, [sp, #16]
 801153c:	eeb1 7a47 	vneg.f32	s14, s14
 8011540:	eef1 7a67 	vneg.f32	s15, s15
 8011544:	e758      	b.n	80113f8 <nema_blit_rotate+0x5c>
 8011546:	bf00      	nop
 8011548:	20000064 	.word	0x20000064
 801154c:	bf800000 	.word	0xbf800000
 8011550:	00000000 	.word	0x00000000

08011554 <nema_blit_tri_fit>:
 8011554:	2803      	cmp	r0, #3
 8011556:	d801      	bhi.n	801155c <nema_blit_tri_fit+0x8>
 8011558:	2903      	cmp	r1, #3
 801155a:	d900      	bls.n	801155e <nema_blit_tri_fit+0xa>
 801155c:	4770      	bx	lr
 801155e:	2a03      	cmp	r2, #3
 8011560:	d8fc      	bhi.n	801155c <nema_blit_tri_fit+0x8>
 8011562:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011566:	460c      	mov	r4, r1
 8011568:	493b      	ldr	r1, [pc, #236]	@ (8011658 <nema_blit_tri_fit+0x104>)
 801156a:	4603      	mov	r3, r0
 801156c:	e9d1 0112 	ldrd	r0, r1, [r1, #72]	@ 0x48
 8011570:	ee07 0a90 	vmov	s15, r0
 8011574:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011578:	ee07 1a90 	vmov	s15, r1
 801157c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011580:	b08a      	sub	sp, #40	@ 0x28
 8011582:	f04f 0c00 	mov.w	ip, #0
 8011586:	edcd 7a08 	vstr	s15, [sp, #32]
 801158a:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 801158e:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8011592:	ed8d 7a03 	vstr	s14, [sp, #12]
 8011596:	ed8d 7a04 	vstr	s14, [sp, #16]
 801159a:	ee12 8a10 	vmov	r8, s4
 801159e:	ee11 9a90 	vmov	r9, s3
 80115a2:	ee11 aa10 	vmov	sl, s2
 80115a6:	ee10 6a10 	vmov	r6, s0
 80115aa:	f10d 0e28 	add.w	lr, sp, #40	@ 0x28
 80115ae:	eb0e 0282 	add.w	r2, lr, r2, lsl #2
 80115b2:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
 80115b6:	eb0e 0383 	add.w	r3, lr, r3, lsl #2
 80115ba:	f8cd c008 	str.w	ip, [sp, #8]
 80115be:	f8cd c014 	str.w	ip, [sp, #20]
 80115c2:	f8cd c018 	str.w	ip, [sp, #24]
 80115c6:	f8cd c01c 	str.w	ip, [sp, #28]
 80115ca:	ed52 6a08 	vldr	s13, [r2, #-32]	@ 0xffffffe0
 80115ce:	ed14 4a08 	vldr	s8, [r4, #-32]	@ 0xffffffe0
 80115d2:	ed53 1a08 	vldr	s3, [r3, #-32]	@ 0xffffffe0
 80115d6:	ed12 7a04 	vldr	s14, [r2, #-16]
 80115da:	ed54 4a04 	vldr	s9, [r4, #-16]
 80115de:	ed13 2a04 	vldr	s4, [r3, #-16]
 80115e2:	eef0 5a62 	vmov.f32	s11, s5
 80115e6:	ee05 8a10 	vmov	s10, r8
 80115ea:	ee03 9a10 	vmov	s6, r9
 80115ee:	eef0 3a46 	vmov.f32	s7, s12
 80115f2:	eeb0 1a46 	vmov.f32	s2, s12
 80115f6:	ee12 7a90 	vmov	r7, s5
 80115fa:	ee02 aa90 	vmov	s5, sl
 80115fe:	ee10 5a90 	vmov	r5, s1
 8011602:	f000 f8d1 	bl	80117a8 <nema_interpolate_tx_ty>
 8011606:	ee00 6a10 	vmov	s0, r6
 801160a:	f000 f971 	bl	80118f0 <nema_f2fx>
 801160e:	ee00 5a10 	vmov	s0, r5
 8011612:	4604      	mov	r4, r0
 8011614:	f000 f96c 	bl	80118f0 <nema_f2fx>
 8011618:	ee00 aa10 	vmov	s0, sl
 801161c:	4605      	mov	r5, r0
 801161e:	f000 f967 	bl	80118f0 <nema_f2fx>
 8011622:	ee00 9a10 	vmov	s0, r9
 8011626:	4606      	mov	r6, r0
 8011628:	f000 f962 	bl	80118f0 <nema_f2fx>
 801162c:	ee00 8a10 	vmov	s0, r8
 8011630:	4681      	mov	r9, r0
 8011632:	f000 f95d 	bl	80118f0 <nema_f2fx>
 8011636:	ee00 7a10 	vmov	s0, r7
 801163a:	4680      	mov	r8, r0
 801163c:	f000 f958 	bl	80118f0 <nema_f2fx>
 8011640:	464b      	mov	r3, r9
 8011642:	e9cd 8000 	strd	r8, r0, [sp]
 8011646:	4632      	mov	r2, r6
 8011648:	4629      	mov	r1, r5
 801164a:	4620      	mov	r0, r4
 801164c:	f000 fea8 	bl	80123a0 <nema_raster_triangle_fx>
 8011650:	b00a      	add	sp, #40	@ 0x28
 8011652:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011656:	bf00      	nop
 8011658:	20000064 	.word	0x20000064

0801165c <nema_blit_quad_fit>:
 801165c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011660:	ed2d 8b08 	vpush	{d8-d11}
 8011664:	4b2b      	ldr	r3, [pc, #172]	@ (8011714 <nema_blit_quad_fit+0xb8>)
 8011666:	b08e      	sub	sp, #56	@ 0x38
 8011668:	e9d3 0112 	ldrd	r0, r1, [r3, #72]	@ 0x48
 801166c:	aa05      	add	r2, sp, #20
 801166e:	eef0 ba40 	vmov.f32	s23, s0
 8011672:	eeb0 ba60 	vmov.f32	s22, s1
 8011676:	eef0 aa41 	vmov.f32	s21, s2
 801167a:	eeb0 aa61 	vmov.f32	s20, s3
 801167e:	eef0 9a42 	vmov.f32	s19, s4
 8011682:	eeb0 9a62 	vmov.f32	s18, s5
 8011686:	eef0 8a43 	vmov.f32	s17, s6
 801168a:	eeb0 8a63 	vmov.f32	s16, s7
 801168e:	f000 fb33 	bl	8011cf8 <nema_mat3x3_quad_to_rect>
 8011692:	b120      	cbz	r0, 801169e <nema_blit_quad_fit+0x42>
 8011694:	b00e      	add	sp, #56	@ 0x38
 8011696:	ecbd 8b08 	vpop	{d8-d11}
 801169a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801169e:	a805      	add	r0, sp, #20
 80116a0:	f000 fd0c 	bl	80120bc <nema_set_matrix>
 80116a4:	eeb0 0a6b 	vmov.f32	s0, s23
 80116a8:	f000 f922 	bl	80118f0 <nema_f2fx>
 80116ac:	eeb0 0a4b 	vmov.f32	s0, s22
 80116b0:	4604      	mov	r4, r0
 80116b2:	f000 f91d 	bl	80118f0 <nema_f2fx>
 80116b6:	eeb0 0a6a 	vmov.f32	s0, s21
 80116ba:	4605      	mov	r5, r0
 80116bc:	f000 f918 	bl	80118f0 <nema_f2fx>
 80116c0:	eeb0 0a4a 	vmov.f32	s0, s20
 80116c4:	4606      	mov	r6, r0
 80116c6:	f000 f913 	bl	80118f0 <nema_f2fx>
 80116ca:	eeb0 0a69 	vmov.f32	s0, s19
 80116ce:	4607      	mov	r7, r0
 80116d0:	f000 f90e 	bl	80118f0 <nema_f2fx>
 80116d4:	eeb0 0a49 	vmov.f32	s0, s18
 80116d8:	4682      	mov	sl, r0
 80116da:	f000 f909 	bl	80118f0 <nema_f2fx>
 80116de:	eeb0 0a68 	vmov.f32	s0, s17
 80116e2:	4680      	mov	r8, r0
 80116e4:	f000 f904 	bl	80118f0 <nema_f2fx>
 80116e8:	eeb0 0a48 	vmov.f32	s0, s16
 80116ec:	4681      	mov	r9, r0
 80116ee:	f000 f8ff 	bl	80118f0 <nema_f2fx>
 80116f2:	f8cd a000 	str.w	sl, [sp]
 80116f6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80116fa:	f8cd 8004 	str.w	r8, [sp, #4]
 80116fe:	463b      	mov	r3, r7
 8011700:	4632      	mov	r2, r6
 8011702:	4629      	mov	r1, r5
 8011704:	4620      	mov	r0, r4
 8011706:	f000 feb1 	bl	801246c <nema_raster_quad_fx>
 801170a:	b00e      	add	sp, #56	@ 0x38
 801170c:	ecbd 8b08 	vpop	{d8-d11}
 8011710:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011714:	20000064 	.word	0x20000064

08011718 <nema_interpolate_rect_colors>:
 8011718:	b410      	push	{r4}
 801171a:	9803      	ldr	r0, [sp, #12]
 801171c:	e9dd 1401 	ldrd	r1, r4, [sp, #4]
 8011720:	edd0 2a00 	vldr	s5, [r0]
 8011724:	edd4 7a00 	vldr	s15, [r4]
 8011728:	ed91 0a00 	vldr	s0, [r1]
 801172c:	ee72 2ae7 	vsub.f32	s5, s5, s15
 8011730:	ee37 2ac0 	vsub.f32	s4, s15, s0
 8011734:	ee07 3a90 	vmov	s15, r3
 8011738:	ed94 3a01 	vldr	s6, [r4, #4]
 801173c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011740:	ed94 4a02 	vldr	s8, [r4, #8]
 8011744:	ed94 5a03 	vldr	s10, [r4, #12]
 8011748:	edd0 3a01 	vldr	s7, [r0, #4]
 801174c:	edd1 0a01 	vldr	s1, [r1, #4]
 8011750:	edd0 4a02 	vldr	s9, [r0, #8]
 8011754:	edd0 5a03 	vldr	s11, [r0, #12]
 8011758:	edd1 1a03 	vldr	s3, [r1, #12]
 801175c:	ed91 1a02 	vldr	s2, [r1, #8]
 8011760:	ee07 2a90 	vmov	s15, r2
 8011764:	ee73 3ac3 	vsub.f32	s7, s7, s6
 8011768:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801176c:	ee74 4ac4 	vsub.f32	s9, s9, s8
 8011770:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011774:	ee33 3a60 	vsub.f32	s6, s6, s1
 8011778:	ee35 5a61 	vsub.f32	s10, s10, s3
 801177c:	ee34 4a41 	vsub.f32	s8, s8, s2
 8011780:	eec2 2a87 	vdiv.f32	s5, s5, s14
 8011784:	ee82 2a27 	vdiv.f32	s4, s4, s15
 8011788:	eec3 3a87 	vdiv.f32	s7, s7, s14
 801178c:	ee83 3a27 	vdiv.f32	s6, s6, s15
 8011790:	eec4 4a87 	vdiv.f32	s9, s9, s14
 8011794:	eec5 5a87 	vdiv.f32	s11, s11, s14
 8011798:	ee85 5a27 	vdiv.f32	s10, s10, s15
 801179c:	ee84 4a27 	vdiv.f32	s8, s8, s15
 80117a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80117a4:	f7ff bd62 	b.w	801126c <nema_set_gradient>

080117a8 <nema_interpolate_tx_ty>:
 80117a8:	eeb5 1ac0 	vcmpe.f32	s2, #0.0
 80117ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117b0:	d407      	bmi.n	80117c2 <nema_interpolate_tx_ty+0x1a>
 80117b2:	eddf 7a40 	vldr	s15, [pc, #256]	@ 80118b4 <nema_interpolate_tx_ty+0x10c>
 80117b6:	eeb4 1ae7 	vcmpe.f32	s2, s15
 80117ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117be:	d807      	bhi.n	80117d0 <nema_interpolate_tx_ty+0x28>
 80117c0:	4770      	bx	lr
 80117c2:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 80118b8 <nema_interpolate_tx_ty+0x110>
 80117c6:	eeb4 1ae7 	vcmpe.f32	s2, s15
 80117ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117ce:	daf7      	bge.n	80117c0 <nema_interpolate_tx_ty+0x18>
 80117d0:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 80117d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117d8:	d45b      	bmi.n	8011892 <nema_interpolate_tx_ty+0xea>
 80117da:	eddf 7a36 	vldr	s15, [pc, #216]	@ 80118b4 <nema_interpolate_tx_ty+0x10c>
 80117de:	eef4 3ae7 	vcmpe.f32	s7, s15
 80117e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117e6:	d9eb      	bls.n	80117c0 <nema_interpolate_tx_ty+0x18>
 80117e8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80117ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117f0:	d457      	bmi.n	80118a2 <nema_interpolate_tx_ty+0xfa>
 80117f2:	eddf 7a30 	vldr	s15, [pc, #192]	@ 80118b4 <nema_interpolate_tx_ty+0x10c>
 80117f6:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80117fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117fe:	d9df      	bls.n	80117c0 <nema_interpolate_tx_ty+0x18>
 8011800:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8011804:	b570      	push	{r4, r5, r6, lr}
 8011806:	ee15 3a90 	vmov	r3, s11
 801180a:	ee13 2a10 	vmov	r2, s6
 801180e:	eec7 5a86 	vdiv.f32	s11, s15, s12
 8011812:	ee87 3a81 	vdiv.f32	s6, s15, s2
 8011816:	ee15 4a10 	vmov	r4, s10
 801181a:	ee87 5aa3 	vdiv.f32	s10, s15, s7
 801181e:	ee63 1a21 	vmul.f32	s3, s6, s3
 8011822:	ee23 2a02 	vmul.f32	s4, s6, s4
 8011826:	ee25 4a04 	vmul.f32	s8, s10, s8
 801182a:	ee65 4a24 	vmul.f32	s9, s10, s9
 801182e:	ee65 6aa6 	vmul.f32	s13, s11, s13
 8011832:	ee25 7a87 	vmul.f32	s14, s11, s14
 8011836:	b092      	sub	sp, #72	@ 0x48
 8011838:	a809      	add	r0, sp, #36	@ 0x24
 801183a:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 801183e:	edcd 2a0a 	vstr	s5, [sp, #40]	@ 0x28
 8011842:	edcd 0a0c 	vstr	s1, [sp, #48]	@ 0x30
 8011846:	920d      	str	r2, [sp, #52]	@ 0x34
 8011848:	930e      	str	r3, [sp, #56]	@ 0x38
 801184a:	edcd 1a00 	vstr	s3, [sp]
 801184e:	ed8d 2a03 	vstr	s4, [sp, #12]
 8011852:	ed8d 4a01 	vstr	s8, [sp, #4]
 8011856:	edcd 4a04 	vstr	s9, [sp, #16]
 801185a:	edcd 6a02 	vstr	s13, [sp, #8]
 801185e:	ed8d 7a05 	vstr	s14, [sp, #20]
 8011862:	ed8d 3a06 	vstr	s6, [sp, #24]
 8011866:	ed8d 5a07 	vstr	s10, [sp, #28]
 801186a:	edcd 5a08 	vstr	s11, [sp, #32]
 801186e:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 8011872:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8011876:	edcd 7a11 	vstr	s15, [sp, #68]	@ 0x44
 801187a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801187c:	f000 f938 	bl	8011af0 <nema_mat3x3_adj>
 8011880:	a909      	add	r1, sp, #36	@ 0x24
 8011882:	4668      	mov	r0, sp
 8011884:	f000 f89e 	bl	80119c4 <nema_mat3x3_mul>
 8011888:	4668      	mov	r0, sp
 801188a:	f000 fc17 	bl	80120bc <nema_set_matrix>
 801188e:	b012      	add	sp, #72	@ 0x48
 8011890:	bd70      	pop	{r4, r5, r6, pc}
 8011892:	eddf 7a09 	vldr	s15, [pc, #36]	@ 80118b8 <nema_interpolate_tx_ty+0x110>
 8011896:	eef4 3ae7 	vcmpe.f32	s7, s15
 801189a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801189e:	da8f      	bge.n	80117c0 <nema_interpolate_tx_ty+0x18>
 80118a0:	e7a2      	b.n	80117e8 <nema_interpolate_tx_ty+0x40>
 80118a2:	eddf 7a05 	vldr	s15, [pc, #20]	@ 80118b8 <nema_interpolate_tx_ty+0x110>
 80118a6:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80118aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80118ae:	da87      	bge.n	80117c0 <nema_interpolate_tx_ty+0x18>
 80118b0:	e7a6      	b.n	8011800 <nema_interpolate_tx_ty+0x58>
 80118b2:	bf00      	nop
 80118b4:	3727c5ac 	.word	0x3727c5ac
 80118b8:	b727c5ac 	.word	0xb727c5ac

080118bc <nema_sqrt>:
 80118bc:	ee10 2a10 	vmov	r2, s0
 80118c0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80118c4:	4b09      	ldr	r3, [pc, #36]	@ (80118ec <nema_sqrt+0x30>)
 80118c6:	ee20 7a07 	vmul.f32	s14, s0, s14
 80118ca:	eba3 0352 	sub.w	r3, r3, r2, lsr #1
 80118ce:	ee07 3a90 	vmov	s15, r3
 80118d2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80118d6:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 80118da:	ee27 7a27 	vmul.f32	s14, s14, s15
 80118de:	ee67 7a80 	vmul.f32	s15, s15, s0
 80118e2:	ee36 0ac7 	vsub.f32	s0, s13, s14
 80118e6:	ee20 0a27 	vmul.f32	s0, s0, s15
 80118ea:	4770      	bx	lr
 80118ec:	5f3759df 	.word	0x5f3759df

080118f0 <nema_f2fx>:
 80118f0:	eddf 7a06 	vldr	s15, [pc, #24]	@ 801190c <nema_f2fx+0x1c>
 80118f4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80118f8:	ee20 0a27 	vmul.f32	s0, s0, s15
 80118fc:	ee30 0a07 	vadd.f32	s0, s0, s14
 8011900:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8011904:	ee17 0a90 	vmov	r0, s15
 8011908:	4770      	bx	lr
 801190a:	bf00      	nop
 801190c:	47800000 	.word	0x47800000

08011910 <nema_mat3x3_load_identity>:
 8011910:	2300      	movs	r3, #0
 8011912:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8011916:	61c3      	str	r3, [r0, #28]
 8011918:	6202      	str	r2, [r0, #32]
 801191a:	6102      	str	r2, [r0, #16]
 801191c:	6002      	str	r2, [r0, #0]
 801191e:	6183      	str	r3, [r0, #24]
 8011920:	6143      	str	r3, [r0, #20]
 8011922:	60c3      	str	r3, [r0, #12]
 8011924:	6083      	str	r3, [r0, #8]
 8011926:	6043      	str	r3, [r0, #4]
 8011928:	4770      	bx	lr
 801192a:	bf00      	nop

0801192c <nema_mat3x3_copy>:
 801192c:	680b      	ldr	r3, [r1, #0]
 801192e:	6003      	str	r3, [r0, #0]
 8011930:	684b      	ldr	r3, [r1, #4]
 8011932:	6043      	str	r3, [r0, #4]
 8011934:	688b      	ldr	r3, [r1, #8]
 8011936:	6083      	str	r3, [r0, #8]
 8011938:	68cb      	ldr	r3, [r1, #12]
 801193a:	60c3      	str	r3, [r0, #12]
 801193c:	690b      	ldr	r3, [r1, #16]
 801193e:	6103      	str	r3, [r0, #16]
 8011940:	694b      	ldr	r3, [r1, #20]
 8011942:	6143      	str	r3, [r0, #20]
 8011944:	698b      	ldr	r3, [r1, #24]
 8011946:	6183      	str	r3, [r0, #24]
 8011948:	69cb      	ldr	r3, [r1, #28]
 801194a:	61c3      	str	r3, [r0, #28]
 801194c:	6a0b      	ldr	r3, [r1, #32]
 801194e:	6203      	str	r3, [r0, #32]
 8011950:	4770      	bx	lr
 8011952:	bf00      	nop

08011954 <nema_mat3x3_translate>:
 8011954:	edd0 6a06 	vldr	s13, [r0, #24]
 8011958:	ed90 7a07 	vldr	s14, [r0, #28]
 801195c:	edd0 7a08 	vldr	s15, [r0, #32]
 8011960:	ee26 3a80 	vmul.f32	s6, s13, s0
 8011964:	ee67 3a00 	vmul.f32	s7, s14, s0
 8011968:	ee66 6aa0 	vmul.f32	s13, s13, s1
 801196c:	ed90 4a00 	vldr	s8, [r0]
 8011970:	edd0 4a03 	vldr	s9, [r0, #12]
 8011974:	ee27 7a20 	vmul.f32	s14, s14, s1
 8011978:	ed90 5a01 	vldr	s10, [r0, #4]
 801197c:	edd0 5a04 	vldr	s11, [r0, #16]
 8011980:	ee27 0a80 	vmul.f32	s0, s15, s0
 8011984:	ed90 6a02 	vldr	s12, [r0, #8]
 8011988:	ee67 7aa0 	vmul.f32	s15, s15, s1
 801198c:	edd0 0a05 	vldr	s1, [r0, #20]
 8011990:	ee34 4a03 	vadd.f32	s8, s8, s6
 8011994:	ee74 6aa6 	vadd.f32	s13, s9, s13
 8011998:	ee35 5a23 	vadd.f32	s10, s10, s7
 801199c:	ee35 7a87 	vadd.f32	s14, s11, s14
 80119a0:	ee36 0a00 	vadd.f32	s0, s12, s0
 80119a4:	ee70 7aa7 	vadd.f32	s15, s1, s15
 80119a8:	ed80 4a00 	vstr	s8, [r0]
 80119ac:	edc0 6a03 	vstr	s13, [r0, #12]
 80119b0:	ed80 5a01 	vstr	s10, [r0, #4]
 80119b4:	ed80 7a04 	vstr	s14, [r0, #16]
 80119b8:	ed80 0a02 	vstr	s0, [r0, #8]
 80119bc:	edc0 7a05 	vstr	s15, [r0, #20]
 80119c0:	4770      	bx	lr
 80119c2:	bf00      	nop

080119c4 <nema_mat3x3_mul>:
 80119c4:	edd1 4a01 	vldr	s9, [r1, #4]
 80119c8:	ed91 0a04 	vldr	s0, [r1, #16]
 80119cc:	edd1 0a05 	vldr	s1, [r1, #20]
 80119d0:	ed2d 8b0c 	vpush	{d8-d13}
 80119d4:	ed91 6a00 	vldr	s12, [r1]
 80119d8:	ed91 4a03 	vldr	s8, [r1, #12]
 80119dc:	ed91 aa02 	vldr	s20, [r1, #8]
 80119e0:	edd0 3a03 	vldr	s7, [r0, #12]
 80119e4:	ed90 8a04 	vldr	s16, [r0, #16]
 80119e8:	ed90 9a00 	vldr	s18, [r0]
 80119ec:	edd0 8a01 	vldr	s17, [r0, #4]
 80119f0:	edd0 9a06 	vldr	s19, [r0, #24]
 80119f4:	ed90 1a07 	vldr	s2, [r0, #28]
 80119f8:	edd1 aa06 	vldr	s21, [r1, #24]
 80119fc:	edd1 6a07 	vldr	s13, [r1, #28]
 8011a00:	ed91 7a08 	vldr	s14, [r1, #32]
 8011a04:	ed90 5a02 	vldr	s10, [r0, #8]
 8011a08:	edd0 5a05 	vldr	s11, [r0, #20]
 8011a0c:	ee69 da06 	vmul.f32	s27, s18, s12
 8011a10:	ee29 da24 	vmul.f32	s26, s18, s9
 8011a14:	ee66 ca23 	vmul.f32	s25, s12, s7
 8011a18:	ee24 caa3 	vmul.f32	s24, s9, s7
 8011a1c:	ee68 1a84 	vmul.f32	s3, s17, s8
 8011a20:	ee29 9a0a 	vmul.f32	s18, s18, s20
 8011a24:	ee28 2a80 	vmul.f32	s4, s17, s0
 8011a28:	ee26 6a29 	vmul.f32	s12, s12, s19
 8011a2c:	ee64 2a08 	vmul.f32	s5, s8, s16
 8011a30:	ee6a ba23 	vmul.f32	s23, s20, s7
 8011a34:	ee24 baa9 	vmul.f32	s22, s9, s19
 8011a38:	ee20 3a08 	vmul.f32	s6, s0, s16
 8011a3c:	ee60 3a88 	vmul.f32	s7, s1, s16
 8011a40:	ee60 4a01 	vmul.f32	s9, s0, s2
 8011a44:	ee68 8aa0 	vmul.f32	s17, s17, s1
 8011a48:	ee24 4a01 	vmul.f32	s8, s8, s2
 8011a4c:	ee6a 7a29 	vmul.f32	s15, s20, s19
 8011a50:	ee20 1a81 	vmul.f32	s2, s1, s2
 8011a54:	edd0 0a08 	vldr	s1, [r0, #32]
 8011a58:	ee25 0a2a 	vmul.f32	s0, s10, s21
 8011a5c:	ee79 8a28 	vadd.f32	s17, s18, s17
 8011a60:	ee2a 8aa5 	vmul.f32	s16, s21, s11
 8011a64:	ee25 9a26 	vmul.f32	s18, s10, s13
 8011a68:	ee7d 1aa1 	vadd.f32	s3, s27, s3
 8011a6c:	ee3d 2a02 	vadd.f32	s4, s26, s4
 8011a70:	ee7c 2aa2 	vadd.f32	s5, s25, s5
 8011a74:	ee3c 3a03 	vadd.f32	s6, s24, s6
 8011a78:	ee7b 3aa3 	vadd.f32	s7, s23, s7
 8011a7c:	ee36 4a04 	vadd.f32	s8, s12, s8
 8011a80:	ee7b 4a24 	vadd.f32	s9, s22, s9
 8011a84:	ee77 7a81 	vadd.f32	s15, s15, s2
 8011a88:	ee25 5a07 	vmul.f32	s10, s10, s14
 8011a8c:	ee26 1aa5 	vmul.f32	s2, s13, s11
 8011a90:	ee2a 6aa0 	vmul.f32	s12, s21, s1
 8011a94:	ee67 5a25 	vmul.f32	s11, s14, s11
 8011a98:	ee66 6aa0 	vmul.f32	s13, s13, s1
 8011a9c:	ee27 7a20 	vmul.f32	s14, s14, s1
 8011aa0:	ee32 2a09 	vadd.f32	s4, s4, s18
 8011aa4:	ee38 5a85 	vadd.f32	s10, s17, s10
 8011aa8:	ee72 2a88 	vadd.f32	s5, s5, s16
 8011aac:	ee71 1a80 	vadd.f32	s3, s3, s0
 8011ab0:	ee33 3a01 	vadd.f32	s6, s6, s2
 8011ab4:	ee73 5aa5 	vadd.f32	s11, s7, s11
 8011ab8:	ee34 6a06 	vadd.f32	s12, s8, s12
 8011abc:	ee74 6aa6 	vadd.f32	s13, s9, s13
 8011ac0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8011ac4:	edc0 1a00 	vstr	s3, [r0]
 8011ac8:	ed80 2a01 	vstr	s4, [r0, #4]
 8011acc:	ed80 5a02 	vstr	s10, [r0, #8]
 8011ad0:	edc0 2a03 	vstr	s5, [r0, #12]
 8011ad4:	ed80 3a04 	vstr	s6, [r0, #16]
 8011ad8:	edc0 5a05 	vstr	s11, [r0, #20]
 8011adc:	ed80 6a06 	vstr	s12, [r0, #24]
 8011ae0:	edc0 6a07 	vstr	s13, [r0, #28]
 8011ae4:	edc0 7a08 	vstr	s15, [r0, #32]
 8011ae8:	ecbd 8b0c 	vpop	{d8-d13}
 8011aec:	4770      	bx	lr
 8011aee:	bf00      	nop

08011af0 <nema_mat3x3_adj>:
 8011af0:	edd0 3a03 	vldr	s7, [r0, #12]
 8011af4:	edd0 4a04 	vldr	s9, [r0, #16]
 8011af8:	ed90 6a08 	vldr	s12, [r0, #32]
 8011afc:	ed90 5a07 	vldr	s10, [r0, #28]
 8011b00:	ed90 4a05 	vldr	s8, [r0, #20]
 8011b04:	edd0 7a00 	vldr	s15, [r0]
 8011b08:	edd0 6a02 	vldr	s13, [r0, #8]
 8011b0c:	edd0 5a01 	vldr	s11, [r0, #4]
 8011b10:	ed90 7a06 	vldr	s14, [r0, #24]
 8011b14:	ed2d 8b04 	vpush	{d8-d9}
 8011b18:	ee24 1a86 	vmul.f32	s2, s9, s12
 8011b1c:	ee25 9a04 	vmul.f32	s18, s10, s8
 8011b20:	ee66 8a25 	vmul.f32	s17, s12, s11
 8011b24:	ee24 8aa6 	vmul.f32	s16, s9, s13
 8011b28:	ee65 1a26 	vmul.f32	s3, s10, s13
 8011b2c:	ee24 2a25 	vmul.f32	s4, s8, s11
 8011b30:	ee64 2a07 	vmul.f32	s5, s8, s14
 8011b34:	ee66 0a87 	vmul.f32	s1, s13, s14
 8011b38:	ee25 3a23 	vmul.f32	s6, s10, s7
 8011b3c:	ee24 4a27 	vmul.f32	s8, s8, s15
 8011b40:	ee26 0a23 	vmul.f32	s0, s12, s7
 8011b44:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8011b48:	ee26 6a27 	vmul.f32	s12, s12, s15
 8011b4c:	ee25 5a27 	vmul.f32	s10, s10, s15
 8011b50:	ee64 7aa7 	vmul.f32	s15, s9, s15
 8011b54:	ee64 4a87 	vmul.f32	s9, s9, s14
 8011b58:	ee25 7a87 	vmul.f32	s14, s11, s14
 8011b5c:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8011b60:	ee31 1a49 	vsub.f32	s2, s2, s18
 8011b64:	ee71 1ae8 	vsub.f32	s3, s3, s17
 8011b68:	ee32 2a48 	vsub.f32	s4, s4, s16
 8011b6c:	ecbd 8b04 	vpop	{d8-d9}
 8011b70:	ee72 3ac0 	vsub.f32	s7, s5, s0
 8011b74:	ee36 6a60 	vsub.f32	s12, s12, s1
 8011b78:	ee76 6ac4 	vsub.f32	s13, s13, s8
 8011b7c:	ee73 4a64 	vsub.f32	s9, s6, s9
 8011b80:	ee37 7a45 	vsub.f32	s14, s14, s10
 8011b84:	ee77 7ae5 	vsub.f32	s15, s15, s11
 8011b88:	ed80 1a00 	vstr	s2, [r0]
 8011b8c:	edc0 1a01 	vstr	s3, [r0, #4]
 8011b90:	ed80 2a02 	vstr	s4, [r0, #8]
 8011b94:	edc0 3a03 	vstr	s7, [r0, #12]
 8011b98:	ed80 6a04 	vstr	s12, [r0, #16]
 8011b9c:	edc0 6a05 	vstr	s13, [r0, #20]
 8011ba0:	edc0 4a06 	vstr	s9, [r0, #24]
 8011ba4:	ed80 7a07 	vstr	s14, [r0, #28]
 8011ba8:	edc0 7a08 	vstr	s15, [r0, #32]
 8011bac:	4770      	bx	lr
 8011bae:	bf00      	nop

08011bb0 <nema_mat3x3_invert>:
 8011bb0:	ed90 6a08 	vldr	s12, [r0, #32]
 8011bb4:	edd0 2a04 	vldr	s5, [r0, #16]
 8011bb8:	ed90 3a05 	vldr	s6, [r0, #20]
 8011bbc:	ed90 2a07 	vldr	s4, [r0, #28]
 8011bc0:	edd0 4a03 	vldr	s9, [r0, #12]
 8011bc4:	edd0 6a06 	vldr	s13, [r0, #24]
 8011bc8:	ee63 7a02 	vmul.f32	s15, s6, s4
 8011bcc:	ee66 3a22 	vmul.f32	s7, s12, s5
 8011bd0:	ee26 0a24 	vmul.f32	s0, s12, s9
 8011bd4:	ee63 1a26 	vmul.f32	s3, s6, s13
 8011bd8:	ee73 3ae7 	vsub.f32	s7, s7, s15
 8011bdc:	ee22 7aa6 	vmul.f32	s14, s5, s13
 8011be0:	edd0 7a00 	vldr	s15, [r0]
 8011be4:	ee30 1a61 	vsub.f32	s2, s0, s3
 8011be8:	edd0 5a01 	vldr	s11, [r0, #4]
 8011bec:	ee22 4a24 	vmul.f32	s8, s4, s9
 8011bf0:	ee21 1a25 	vmul.f32	s2, s2, s11
 8011bf4:	ee34 4a47 	vsub.f32	s8, s8, s14
 8011bf8:	ee27 5aa3 	vmul.f32	s10, s15, s7
 8011bfc:	ed90 7a02 	vldr	s14, [r0, #8]
 8011c00:	ee35 5a41 	vsub.f32	s10, s10, s2
 8011c04:	ee27 1a04 	vmul.f32	s2, s14, s8
 8011c08:	ee35 5a01 	vadd.f32	s10, s10, s2
 8011c0c:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8011c10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c14:	4603      	mov	r3, r0
 8011c16:	d45d      	bmi.n	8011cd4 <nema_mat3x3_invert+0x124>
 8011c18:	ed9f 1a35 	vldr	s2, [pc, #212]	@ 8011cf0 <nema_mat3x3_invert+0x140>
 8011c1c:	eeb4 5ac1 	vcmpe.f32	s10, s2
 8011c20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c24:	bf94      	ite	ls
 8011c26:	2001      	movls	r0, #1
 8011c28:	2000      	movhi	r0, #0
 8011c2a:	2800      	cmp	r0, #0
 8011c2c:	d15c      	bne.n	8011ce8 <nema_mat3x3_invert+0x138>
 8011c2e:	ed2d 8b04 	vpush	{d8-d9}
 8011c32:	ee62 0a07 	vmul.f32	s1, s4, s14
 8011c36:	ee66 8a25 	vmul.f32	s17, s12, s11
 8011c3a:	ee26 8a87 	vmul.f32	s16, s13, s14
 8011c3e:	ee23 1a25 	vmul.f32	s2, s6, s11
 8011c42:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 8011c46:	ee27 2a82 	vmul.f32	s4, s15, s4
 8011c4a:	ee27 6a86 	vmul.f32	s12, s15, s12
 8011c4e:	ee65 6aa6 	vmul.f32	s13, s11, s13
 8011c52:	ee27 3a83 	vmul.f32	s6, s15, s6
 8011c56:	ee67 7aa2 	vmul.f32	s15, s15, s5
 8011c5a:	ee62 2a87 	vmul.f32	s5, s5, s14
 8011c5e:	ee24 7a87 	vmul.f32	s14, s9, s14
 8011c62:	ee65 4aa4 	vmul.f32	s9, s11, s9
 8011c66:	ee36 6a48 	vsub.f32	s12, s12, s16
 8011c6a:	eec9 5a05 	vdiv.f32	s11, s18, s10
 8011c6e:	ee71 1ac0 	vsub.f32	s3, s3, s0
 8011c72:	ee30 5ae8 	vsub.f32	s10, s1, s17
 8011c76:	ee76 6ac2 	vsub.f32	s13, s13, s4
 8011c7a:	ee71 2a62 	vsub.f32	s5, s2, s5
 8011c7e:	ee37 7a43 	vsub.f32	s14, s14, s6
 8011c82:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8011c86:	ee63 3aa5 	vmul.f32	s7, s7, s11
 8011c8a:	ee61 1aa5 	vmul.f32	s3, s3, s11
 8011c8e:	ee24 4a25 	vmul.f32	s8, s8, s11
 8011c92:	ee25 5a25 	vmul.f32	s10, s10, s11
 8011c96:	ee26 6a25 	vmul.f32	s12, s12, s11
 8011c9a:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8011c9e:	ee62 2aa5 	vmul.f32	s5, s5, s11
 8011ca2:	ee27 7a25 	vmul.f32	s14, s14, s11
 8011ca6:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8011caa:	edc3 3a00 	vstr	s7, [r3]
 8011cae:	edc3 1a03 	vstr	s3, [r3, #12]
 8011cb2:	ed83 4a06 	vstr	s8, [r3, #24]
 8011cb6:	ed83 5a01 	vstr	s10, [r3, #4]
 8011cba:	ed83 6a04 	vstr	s12, [r3, #16]
 8011cbe:	edc3 6a07 	vstr	s13, [r3, #28]
 8011cc2:	edc3 2a02 	vstr	s5, [r3, #8]
 8011cc6:	ed83 7a05 	vstr	s14, [r3, #20]
 8011cca:	edc3 7a08 	vstr	s15, [r3, #32]
 8011cce:	ecbd 8b04 	vpop	{d8-d9}
 8011cd2:	4770      	bx	lr
 8011cd4:	ed9f 1a07 	vldr	s2, [pc, #28]	@ 8011cf4 <nema_mat3x3_invert+0x144>
 8011cd8:	eeb4 5ac1 	vcmpe.f32	s10, s2
 8011cdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011ce0:	bfac      	ite	ge
 8011ce2:	2001      	movge	r0, #1
 8011ce4:	2000      	movlt	r0, #0
 8011ce6:	e7a0      	b.n	8011c2a <nema_mat3x3_invert+0x7a>
 8011ce8:	f04f 30ff 	mov.w	r0, #4294967295
 8011cec:	4770      	bx	lr
 8011cee:	bf00      	nop
 8011cf0:	3727c5ac 	.word	0x3727c5ac
 8011cf4:	b727c5ac 	.word	0xb727c5ac

08011cf8 <nema_mat3x3_quad_to_rect>:
 8011cf8:	ee70 6a41 	vsub.f32	s13, s0, s2
 8011cfc:	ee76 6a82 	vadd.f32	s13, s13, s4
 8011d00:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8011d04:	ee30 6ae1 	vsub.f32	s12, s1, s3
 8011d08:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8011d0c:	ee36 6a22 	vadd.f32	s12, s12, s5
 8011d10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d14:	ed2d 8b06 	vpush	{d8-d10}
 8011d18:	ee36 6a63 	vsub.f32	s12, s12, s7
 8011d1c:	ee09 0a10 	vmov	s18, r0
 8011d20:	ee08 1a90 	vmov	s17, r1
 8011d24:	f100 812e 	bmi.w	8011f84 <nema_mat3x3_quad_to_rect+0x28c>
 8011d28:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8011fbc <nema_mat3x3_quad_to_rect+0x2c4>
 8011d2c:	eef4 6ae7 	vcmpe.f32	s13, s15
 8011d30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d34:	d80d      	bhi.n	8011d52 <nema_mat3x3_quad_to_rect+0x5a>
 8011d36:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8011d3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d3e:	f100 80f7 	bmi.w	8011f30 <nema_mat3x3_quad_to_rect+0x238>
 8011d42:	eddf 7a9e 	vldr	s15, [pc, #632]	@ 8011fbc <nema_mat3x3_quad_to_rect+0x2c4>
 8011d46:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8011d4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d4e:	f240 80f7 	bls.w	8011f40 <nema_mat3x3_quad_to_rect+0x248>
 8011d52:	ee31 7a42 	vsub.f32	s14, s2, s4
 8011d56:	ee73 7ae2 	vsub.f32	s15, s7, s5
 8011d5a:	ee33 2a42 	vsub.f32	s4, s6, s4
 8011d5e:	ee71 2ae2 	vsub.f32	s5, s3, s5
 8011d62:	ee67 5a27 	vmul.f32	s11, s14, s15
 8011d66:	ee22 5a22 	vmul.f32	s10, s4, s5
 8011d6a:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011d6e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8011d72:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8011d76:	ee26 7a07 	vmul.f32	s14, s12, s14
 8011d7a:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8011d7e:	ee26 6a02 	vmul.f32	s12, s12, s4
 8011d82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d86:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8011d8a:	ee77 6a66 	vsub.f32	s13, s14, s13
 8011d8e:	f100 80c5 	bmi.w	8011f1c <nema_mat3x3_quad_to_rect+0x224>
 8011d92:	ed9f 7a8a 	vldr	s14, [pc, #552]	@ 8011fbc <nema_mat3x3_quad_to_rect+0x2c4>
 8011d96:	eef4 5ac7 	vcmpe.f32	s11, s14
 8011d9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d9e:	bf94      	ite	ls
 8011da0:	2301      	movls	r3, #1
 8011da2:	2300      	movhi	r3, #0
 8011da4:	2b00      	cmp	r3, #0
 8011da6:	f040 8106 	bne.w	8011fb6 <nema_mat3x3_quad_to_rect+0x2be>
 8011daa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011dae:	ee87 6a25 	vdiv.f32	s12, s14, s11
 8011db2:	ee67 7a86 	vmul.f32	s15, s15, s12
 8011db6:	ee66 6a86 	vmul.f32	s13, s13, s12
 8011dba:	ee21 5a27 	vmul.f32	s10, s2, s15
 8011dbe:	ee61 5aa7 	vmul.f32	s11, s3, s15
 8011dc2:	ee63 2aa6 	vmul.f32	s5, s7, s13
 8011dc6:	ee31 1a40 	vsub.f32	s2, s2, s0
 8011dca:	ee23 6a26 	vmul.f32	s12, s6, s13
 8011dce:	ee33 2a40 	vsub.f32	s4, s6, s0
 8011dd2:	ee71 1ae0 	vsub.f32	s3, s3, s1
 8011dd6:	ee73 3ae0 	vsub.f32	s7, s7, s1
 8011dda:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011dde:	ee32 2a06 	vadd.f32	s4, s4, s12
 8011de2:	ee71 1aa5 	vadd.f32	s3, s3, s11
 8011de6:	ee73 2aa2 	vadd.f32	s5, s7, s5
 8011dea:	ed82 0a02 	vstr	s0, [r2, #8]
 8011dee:	edc2 0a05 	vstr	s1, [r2, #20]
 8011df2:	edc2 7a06 	vstr	s15, [r2, #24]
 8011df6:	edc2 6a07 	vstr	s13, [r2, #28]
 8011dfa:	ed82 7a08 	vstr	s14, [r2, #32]
 8011dfe:	ed82 1a00 	vstr	s2, [r2]
 8011e02:	ed82 2a01 	vstr	s4, [r2, #4]
 8011e06:	edc2 1a03 	vstr	s3, [r2, #12]
 8011e0a:	edc2 2a04 	vstr	s5, [r2, #16]
 8011e0e:	ee20 4aa6 	vmul.f32	s8, s1, s13
 8011e12:	ee60 5aa7 	vmul.f32	s11, s1, s15
 8011e16:	ee32 3ac4 	vsub.f32	s6, s5, s8
 8011e1a:	ee31 7ae5 	vsub.f32	s14, s3, s11
 8011e1e:	ee21 8aa6 	vmul.f32	s16, s3, s13
 8011e22:	ee22 6aa7 	vmul.f32	s12, s5, s15
 8011e26:	ee27 7a02 	vmul.f32	s14, s14, s4
 8011e2a:	ee23 4a01 	vmul.f32	s8, s6, s2
 8011e2e:	ee38 8a46 	vsub.f32	s16, s16, s12
 8011e32:	ee34 4a47 	vsub.f32	s8, s8, s14
 8011e36:	ee20 7a08 	vmul.f32	s14, s0, s16
 8011e3a:	ee34 4a07 	vadd.f32	s8, s8, s14
 8011e3e:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 8011e42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011e46:	f100 80ac 	bmi.w	8011fa2 <nema_mat3x3_quad_to_rect+0x2aa>
 8011e4a:	ed9f 7a5c 	vldr	s14, [pc, #368]	@ 8011fbc <nema_mat3x3_quad_to_rect+0x2c4>
 8011e4e:	eeb4 4ac7 	vcmpe.f32	s8, s14
 8011e52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011e56:	bf94      	ite	ls
 8011e58:	2001      	movls	r0, #1
 8011e5a:	2000      	movhi	r0, #0
 8011e5c:	2800      	cmp	r0, #0
 8011e5e:	f040 80aa 	bne.w	8011fb6 <nema_mat3x3_quad_to_rect+0x2be>
 8011e62:	ee20 5a82 	vmul.f32	s10, s1, s4
 8011e66:	ee60 4a26 	vmul.f32	s9, s0, s13
 8011e6a:	ee20 6a27 	vmul.f32	s12, s0, s15
 8011e6e:	ee60 9a22 	vmul.f32	s19, s0, s5
 8011e72:	eeb7 aa00 	vmov.f32	s20, #112	@ 0x3f800000  1.0
 8011e76:	ee60 0a81 	vmul.f32	s1, s1, s2
 8011e7a:	ee20 7a21 	vmul.f32	s14, s0, s3
 8011e7e:	eeca 3a04 	vdiv.f32	s7, s20, s8
 8011e82:	ee74 4ac2 	vsub.f32	s9, s9, s4
 8011e86:	ee61 6a26 	vmul.f32	s13, s2, s13
 8011e8a:	ee67 7a82 	vmul.f32	s15, s15, s4
 8011e8e:	ee35 5a69 	vsub.f32	s10, s10, s19
 8011e92:	ee75 5ae1 	vsub.f32	s11, s11, s3
 8011e96:	ee31 6a46 	vsub.f32	s12, s2, s12
 8011e9a:	ee62 2a81 	vmul.f32	s5, s5, s2
 8011e9e:	ee37 7a60 	vsub.f32	s14, s14, s1
 8011ea2:	ee21 2a82 	vmul.f32	s4, s3, s4
 8011ea6:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 8011eaa:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8011eae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011eb2:	ee23 4a23 	vmul.f32	s8, s6, s7
 8011eb6:	ee65 6a23 	vmul.f32	s13, s10, s7
 8011eba:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8011ebe:	ee64 4aa3 	vmul.f32	s9, s9, s7
 8011ec2:	ee26 6a23 	vmul.f32	s12, s12, s7
 8011ec6:	ee27 7a23 	vmul.f32	s14, s14, s7
 8011eca:	ee72 2ac2 	vsub.f32	s5, s5, s4
 8011ece:	ee24 4a09 	vmul.f32	s8, s8, s18
 8011ed2:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8011ed6:	ee28 8a23 	vmul.f32	s16, s16, s7
 8011eda:	ee24 5a89 	vmul.f32	s10, s9, s18
 8011ede:	ee26 6a28 	vmul.f32	s12, s12, s17
 8011ee2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8011ee6:	ee66 6a89 	vmul.f32	s13, s13, s18
 8011eea:	ee27 7a28 	vmul.f32	s14, s14, s17
 8011eee:	ee62 2aa3 	vmul.f32	s5, s5, s7
 8011ef2:	ed82 4a00 	vstr	s8, [r2]
 8011ef6:	edc2 5a03 	vstr	s11, [r2, #12]
 8011efa:	ed82 8a06 	vstr	s16, [r2, #24]
 8011efe:	ed82 5a01 	vstr	s10, [r2, #4]
 8011f02:	ed82 6a04 	vstr	s12, [r2, #16]
 8011f06:	edc2 7a07 	vstr	s15, [r2, #28]
 8011f0a:	edc2 6a02 	vstr	s13, [r2, #8]
 8011f0e:	ed82 7a05 	vstr	s14, [r2, #20]
 8011f12:	edc2 2a08 	vstr	s5, [r2, #32]
 8011f16:	ecbd 8b06 	vpop	{d8-d10}
 8011f1a:	4770      	bx	lr
 8011f1c:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 8011fc0 <nema_mat3x3_quad_to_rect+0x2c8>
 8011f20:	eef4 5ac7 	vcmpe.f32	s11, s14
 8011f24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f28:	bfac      	ite	ge
 8011f2a:	2301      	movge	r3, #1
 8011f2c:	2300      	movlt	r3, #0
 8011f2e:	e739      	b.n	8011da4 <nema_mat3x3_quad_to_rect+0xac>
 8011f30:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8011fc0 <nema_mat3x3_quad_to_rect+0x2c8>
 8011f34:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8011f38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f3c:	f6ff af09 	blt.w	8011d52 <nema_mat3x3_quad_to_rect+0x5a>
 8011f40:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8011fc4 <nema_mat3x3_quad_to_rect+0x2cc>
 8011f44:	ee32 2a41 	vsub.f32	s4, s4, s2
 8011f48:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8011f4c:	ee31 1a40 	vsub.f32	s2, s2, s0
 8011f50:	ee71 1ae0 	vsub.f32	s3, s3, s1
 8011f54:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8011f58:	eef0 7a47 	vmov.f32	s15, s14
 8011f5c:	ed82 2a01 	vstr	s4, [r2, #4]
 8011f60:	ed82 1a00 	vstr	s2, [r2]
 8011f64:	edc2 2a04 	vstr	s5, [r2, #16]
 8011f68:	edc2 1a03 	vstr	s3, [r2, #12]
 8011f6c:	ed82 0a02 	vstr	s0, [r2, #8]
 8011f70:	edc2 0a05 	vstr	s1, [r2, #20]
 8011f74:	ed82 7a06 	vstr	s14, [r2, #24]
 8011f78:	ed82 7a07 	vstr	s14, [r2, #28]
 8011f7c:	eef0 6a47 	vmov.f32	s13, s14
 8011f80:	6213      	str	r3, [r2, #32]
 8011f82:	e744      	b.n	8011e0e <nema_mat3x3_quad_to_rect+0x116>
 8011f84:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8011fc0 <nema_mat3x3_quad_to_rect+0x2c8>
 8011f88:	eef4 6ae7 	vcmpe.f32	s13, s15
 8011f8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f90:	f6ff aedf 	blt.w	8011d52 <nema_mat3x3_quad_to_rect+0x5a>
 8011f94:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8011f98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f9c:	f57f aed1 	bpl.w	8011d42 <nema_mat3x3_quad_to_rect+0x4a>
 8011fa0:	e7c6      	b.n	8011f30 <nema_mat3x3_quad_to_rect+0x238>
 8011fa2:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8011fc0 <nema_mat3x3_quad_to_rect+0x2c8>
 8011fa6:	eeb4 4ac7 	vcmpe.f32	s8, s14
 8011faa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011fae:	bfac      	ite	ge
 8011fb0:	2001      	movge	r0, #1
 8011fb2:	2000      	movlt	r0, #0
 8011fb4:	e752      	b.n	8011e5c <nema_mat3x3_quad_to_rect+0x164>
 8011fb6:	f04f 30ff 	mov.w	r0, #4294967295
 8011fba:	e7ac      	b.n	8011f16 <nema_mat3x3_quad_to_rect+0x21e>
 8011fbc:	3727c5ac 	.word	0x3727c5ac
 8011fc0:	b727c5ac 	.word	0xb727c5ac
 8011fc4:	00000000 	.word	0x00000000

08011fc8 <nema_readHwConfig>:
 8011fc8:	b510      	push	{r4, lr}
 8011fca:	4c05      	ldr	r4, [pc, #20]	@ (8011fe0 <nema_readHwConfig+0x18>)
 8011fcc:	6820      	ldr	r0, [r4, #0]
 8011fce:	b100      	cbz	r0, 8011fd2 <nema_readHwConfig+0xa>
 8011fd0:	bd10      	pop	{r4, pc}
 8011fd2:	f44f 70f8 	mov.w	r0, #496	@ 0x1f0
 8011fd6:	f7f0 fe97 	bl	8002d08 <nema_reg_read>
 8011fda:	6020      	str	r0, [r4, #0]
 8011fdc:	bd10      	pop	{r4, pc}
 8011fde:	bf00      	nop
 8011fe0:	20082fa8 	.word	0x20082fa8

08011fe4 <nema_readHwConfigH>:
 8011fe4:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8011fe8:	f7f0 be8e 	b.w	8002d08 <nema_reg_read>

08011fec <nema_enable_tiling>:
 8011fec:	2800      	cmp	r0, #0
 8011fee:	bf14      	ite	ne
 8011ff0:	f04f 4080 	movne.w	r0, #1073741824	@ 0x40000000
 8011ff4:	2000      	moveq	r0, #0
 8011ff6:	b410      	push	{r4}
 8011ff8:	4a05      	ldr	r2, [pc, #20]	@ (8012010 <nema_enable_tiling+0x24>)
 8011ffa:	6951      	ldr	r1, [r2, #20]
 8011ffc:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 8012000:	4323      	orrs	r3, r4
 8012002:	430b      	orrs	r3, r1
 8012004:	4303      	orrs	r3, r0
 8012006:	6050      	str	r0, [r2, #4]
 8012008:	6113      	str	r3, [r2, #16]
 801200a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801200e:	4770      	bx	lr
 8012010:	20000064 	.word	0x20000064

08012014 <nema_enable_tiling_2x2>:
 8012014:	2800      	cmp	r0, #0
 8012016:	bf14      	ite	ne
 8012018:	f04f 4040 	movne.w	r0, #3221225472	@ 0xc0000000
 801201c:	2000      	moveq	r0, #0
 801201e:	b410      	push	{r4}
 8012020:	4a05      	ldr	r2, [pc, #20]	@ (8012038 <nema_enable_tiling_2x2+0x24>)
 8012022:	6951      	ldr	r1, [r2, #20]
 8012024:	e9d2 4302 	ldrd	r4, r3, [r2, #8]
 8012028:	4323      	orrs	r3, r4
 801202a:	430b      	orrs	r3, r1
 801202c:	4303      	orrs	r3, r0
 801202e:	6050      	str	r0, [r2, #4]
 8012030:	6113      	str	r3, [r2, #16]
 8012032:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012036:	4770      	bx	lr
 8012038:	20000064 	.word	0x20000064

0801203c <nema_enable_aa>:
 801203c:	2800      	cmp	r0, #0
 801203e:	b410      	push	{r4}
 8012040:	bf19      	ittee	ne
 8012042:	f04f 6080 	movne.w	r0, #67108864	@ 0x4000000
 8012046:	f04f 64c0 	movne.w	r4, #100663296	@ 0x6000000
 801204a:	f04f 7400 	moveq.w	r4, #33554432	@ 0x2000000
 801204e:	2000      	moveq	r0, #0
 8012050:	2900      	cmp	r1, #0
 8012052:	bf08      	it	eq
 8012054:	4604      	moveq	r4, r0
 8012056:	b10a      	cbz	r2, 801205c <nema_enable_aa+0x20>
 8012058:	f044 7480 	orr.w	r4, r4, #16777216	@ 0x1000000
 801205c:	b10b      	cbz	r3, 8012062 <nema_enable_aa+0x26>
 801205e:	f444 0400 	orr.w	r4, r4, #8388608	@ 0x800000
 8012062:	4a06      	ldr	r2, [pc, #24]	@ (801207c <nema_enable_aa+0x40>)
 8012064:	6853      	ldr	r3, [r2, #4]
 8012066:	e9d2 1002 	ldrd	r1, r0, [r2, #8]
 801206a:	4303      	orrs	r3, r0
 801206c:	430b      	orrs	r3, r1
 801206e:	4323      	orrs	r3, r4
 8012070:	6950      	ldr	r0, [r2, #20]
 8012072:	e9c2 3404 	strd	r3, r4, [r2, #16]
 8012076:	f85d 4b04 	ldr.w	r4, [sp], #4
 801207a:	4770      	bx	lr
 801207c:	20000064 	.word	0x20000064

08012080 <nema_enable_aa_flags>:
 8012080:	b410      	push	{r4}
 8012082:	4a07      	ldr	r2, [pc, #28]	@ (80120a0 <nema_enable_aa_flags+0x20>)
 8012084:	f000 61f0 	and.w	r1, r0, #125829120	@ 0x7800000
 8012088:	6853      	ldr	r3, [r2, #4]
 801208a:	e9d2 0402 	ldrd	r0, r4, [r2, #8]
 801208e:	4323      	orrs	r3, r4
 8012090:	4303      	orrs	r3, r0
 8012092:	430b      	orrs	r3, r1
 8012094:	6950      	ldr	r0, [r2, #20]
 8012096:	e9c2 3104 	strd	r3, r1, [r2, #16]
 801209a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801209e:	4770      	bx	lr
 80120a0:	20000064 	.word	0x20000064

080120a4 <nema_matmul_bypass>:
 80120a4:	b920      	cbnz	r0, 80120b0 <nema_matmul_bypass+0xc>
 80120a6:	4601      	mov	r1, r0
 80120a8:	f44f 708c 	mov.w	r0, #280	@ 0x118
 80120ac:	f00b be96 	b.w	801dddc <nema_cl_add_cmd>
 80120b0:	f04f 4110 	mov.w	r1, #2415919104	@ 0x90000000
 80120b4:	f44f 708c 	mov.w	r0, #280	@ 0x118
 80120b8:	f00b be90 	b.w	801dddc <nema_cl_add_cmd>

080120bc <nema_set_matrix>:
 80120bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80120c0:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 8012228 <nema_set_matrix+0x16c>
 80120c4:	edd0 7a06 	vldr	s15, [r0, #24]
 80120c8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80120cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80120d0:	4604      	mov	r4, r0
 80120d2:	d506      	bpl.n	80120e2 <nema_set_matrix+0x26>
 80120d4:	eddf 6a55 	vldr	s13, [pc, #340]	@ 801222c <nema_set_matrix+0x170>
 80120d8:	eef4 7ae6 	vcmpe.f32	s15, s13
 80120dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80120e0:	dc47      	bgt.n	8012172 <nema_set_matrix+0xb6>
 80120e2:	2009      	movs	r0, #9
 80120e4:	f00b fe1e 	bl	801dd24 <nema_cl_get_space>
 80120e8:	2800      	cmp	r0, #0
 80120ea:	d040      	beq.n	801216e <nema_set_matrix+0xb2>
 80120ec:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 80120f0:	6003      	str	r3, [r0, #0]
 80120f2:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 80120f6:	6962      	ldr	r2, [r4, #20]
 80120f8:	6083      	str	r3, [r0, #8]
 80120fa:	f44f 73bc 	mov.w	r3, #376	@ 0x178
 80120fe:	6042      	str	r2, [r0, #4]
 8012100:	68a2      	ldr	r2, [r4, #8]
 8012102:	6103      	str	r3, [r0, #16]
 8012104:	f44f 73be 	mov.w	r3, #380	@ 0x17c
 8012108:	60c2      	str	r2, [r0, #12]
 801210a:	69a2      	ldr	r2, [r4, #24]
 801210c:	6183      	str	r3, [r0, #24]
 801210e:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8012112:	6142      	str	r2, [r0, #20]
 8012114:	69e2      	ldr	r2, [r4, #28]
 8012116:	6203      	str	r3, [r0, #32]
 8012118:	61c2      	str	r2, [r0, #28]
 801211a:	6a23      	ldr	r3, [r4, #32]
 801211c:	2544      	movs	r5, #68	@ 0x44
 801211e:	6243      	str	r3, [r0, #36]	@ 0x24
 8012120:	2640      	movs	r6, #64	@ 0x40
 8012122:	233c      	movs	r3, #60	@ 0x3c
 8012124:	2738      	movs	r7, #56	@ 0x38
 8012126:	2234      	movs	r2, #52	@ 0x34
 8012128:	f04f 0c30 	mov.w	ip, #48	@ 0x30
 801212c:	212c      	movs	r1, #44	@ 0x2c
 801212e:	f04f 0e28 	mov.w	lr, #40	@ 0x28
 8012132:	f44f 78b0 	mov.w	r8, #352	@ 0x160
 8012136:	f840 800e 	str.w	r8, [r0, lr]
 801213a:	f44f 7eb2 	mov.w	lr, #356	@ 0x164
 801213e:	f8d4 8000 	ldr.w	r8, [r4]
 8012142:	4401      	add	r1, r0
 8012144:	f8c1 8000 	str.w	r8, [r1]
 8012148:	f840 e00c 	str.w	lr, [r0, ip]
 801214c:	f44f 71b6 	mov.w	r1, #364	@ 0x16c
 8012150:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8012154:	4402      	add	r2, r0
 8012156:	f8c2 c000 	str.w	ip, [r2]
 801215a:	f44f 72b8 	mov.w	r2, #368	@ 0x170
 801215e:	51c1      	str	r1, [r0, r7]
 8012160:	68e1      	ldr	r1, [r4, #12]
 8012162:	4403      	add	r3, r0
 8012164:	6019      	str	r1, [r3, #0]
 8012166:	5182      	str	r2, [r0, r6]
 8012168:	6923      	ldr	r3, [r4, #16]
 801216a:	4428      	add	r0, r5
 801216c:	6003      	str	r3, [r0, #0]
 801216e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012172:	ed90 6a07 	vldr	s12, [r0, #28]
 8012176:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801217a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801217e:	d5b0      	bpl.n	80120e2 <nema_set_matrix+0x26>
 8012180:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8012184:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012188:	ddab      	ble.n	80120e2 <nema_set_matrix+0x26>
 801218a:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 801218e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8012192:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012196:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801219a:	d43f      	bmi.n	801221c <nema_set_matrix+0x160>
 801219c:	edd4 7a08 	vldr	s15, [r4, #32]
 80121a0:	ed94 5a00 	vldr	s10, [r4]
 80121a4:	edd4 5a01 	vldr	s11, [r4, #4]
 80121a8:	ed94 6a02 	vldr	s12, [r4, #8]
 80121ac:	edd4 6a03 	vldr	s13, [r4, #12]
 80121b0:	ed94 7a04 	vldr	s14, [r4, #16]
 80121b4:	ed94 4a05 	vldr	s8, [r4, #20]
 80121b8:	eec5 4a27 	vdiv.f32	s9, s10, s15
 80121bc:	ee85 5aa7 	vdiv.f32	s10, s11, s15
 80121c0:	eec6 5a27 	vdiv.f32	s11, s12, s15
 80121c4:	ee86 6aa7 	vdiv.f32	s12, s13, s15
 80121c8:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80121cc:	ee84 7a27 	vdiv.f32	s14, s8, s15
 80121d0:	edc4 4a00 	vstr	s9, [r4]
 80121d4:	ed84 5a01 	vstr	s10, [r4, #4]
 80121d8:	edc4 5a02 	vstr	s11, [r4, #8]
 80121dc:	ed84 6a03 	vstr	s12, [r4, #12]
 80121e0:	edc4 6a04 	vstr	s13, [r4, #16]
 80121e4:	ed84 7a05 	vstr	s14, [r4, #20]
 80121e8:	2006      	movs	r0, #6
 80121ea:	f00b fd9b 	bl	801dd24 <nema_cl_get_space>
 80121ee:	2800      	cmp	r0, #0
 80121f0:	d0bd      	beq.n	801216e <nema_set_matrix+0xb2>
 80121f2:	f44f 73ba 	mov.w	r3, #372	@ 0x174
 80121f6:	6003      	str	r3, [r0, #0]
 80121f8:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 80121fc:	6962      	ldr	r2, [r4, #20]
 80121fe:	6083      	str	r3, [r0, #8]
 8012200:	6042      	str	r2, [r0, #4]
 8012202:	68a3      	ldr	r3, [r4, #8]
 8012204:	252c      	movs	r5, #44	@ 0x2c
 8012206:	60c3      	str	r3, [r0, #12]
 8012208:	2628      	movs	r6, #40	@ 0x28
 801220a:	2324      	movs	r3, #36	@ 0x24
 801220c:	2720      	movs	r7, #32
 801220e:	221c      	movs	r2, #28
 8012210:	f04f 0c18 	mov.w	ip, #24
 8012214:	2114      	movs	r1, #20
 8012216:	f04f 0e10 	mov.w	lr, #16
 801221a:	e78a      	b.n	8012132 <nema_set_matrix+0x76>
 801221c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8012220:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012224:	dce0      	bgt.n	80121e8 <nema_set_matrix+0x12c>
 8012226:	e7b9      	b.n	801219c <nema_set_matrix+0xe0>
 8012228:	33d6bf95 	.word	0x33d6bf95
 801222c:	b3d6bf95 	.word	0xb3d6bf95

08012230 <nema_set_matrix_translate>:
 8012230:	b508      	push	{r3, lr}
 8012232:	2002      	movs	r0, #2
 8012234:	ed2d 8b02 	vpush	{d8}
 8012238:	eeb0 8a40 	vmov.f32	s16, s0
 801223c:	eef0 8a60 	vmov.f32	s17, s1
 8012240:	f00b fd70 	bl	801dd24 <nema_cl_get_space>
 8012244:	b1c8      	cbz	r0, 801227a <nema_set_matrix_translate+0x4a>
 8012246:	eddf 7a13 	vldr	s15, [pc, #76]	@ 8012294 <nema_set_matrix_translate+0x64>
 801224a:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801224e:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 8012252:	eef1 6a68 	vneg.f32	s13, s17
 8012256:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 801225a:	eeb1 7a48 	vneg.f32	s14, s16
 801225e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012262:	6002      	str	r2, [r0, #0]
 8012264:	edc0 6a01 	vstr	s13, [r0, #4]
 8012268:	6083      	str	r3, [r0, #8]
 801226a:	ed80 7a03 	vstr	s14, [r0, #12]
 801226e:	dc07      	bgt.n	8012280 <nema_set_matrix_translate+0x50>
 8012270:	eef4 8ae7 	vcmpe.f32	s17, s15
 8012274:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012278:	dc02      	bgt.n	8012280 <nema_set_matrix_translate+0x50>
 801227a:	ecbd 8b02 	vpop	{d8}
 801227e:	bd08      	pop	{r3, pc}
 8012280:	ecbd 8b02 	vpop	{d8}
 8012284:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 8012288:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801228c:	f44f 708c 	mov.w	r0, #280	@ 0x118
 8012290:	f00b bda4 	b.w	801dddc <nema_cl_add_cmd>
 8012294:	45000000 	.word	0x45000000

08012298 <nema_load_frag_shader>:
 8012298:	b570      	push	{r4, r5, r6, lr}
 801229a:	460e      	mov	r6, r1
 801229c:	4604      	mov	r4, r0
 801229e:	4611      	mov	r1, r2
 80122a0:	20c4      	movs	r0, #196	@ 0xc4
 80122a2:	f00b fd9b 	bl	801dddc <nema_cl_add_cmd>
 80122a6:	b186      	cbz	r6, 80122ca <nema_load_frag_shader+0x32>
 80122a8:	2500      	movs	r5, #0
 80122aa:	3408      	adds	r4, #8
 80122ac:	f854 1c08 	ldr.w	r1, [r4, #-8]
 80122b0:	20c8      	movs	r0, #200	@ 0xc8
 80122b2:	f00b fd93 	bl	801dddc <nema_cl_add_cmd>
 80122b6:	3501      	adds	r5, #1
 80122b8:	f854 1c04 	ldr.w	r1, [r4, #-4]
 80122bc:	20cc      	movs	r0, #204	@ 0xcc
 80122be:	f00b fd8d 	bl	801dddc <nema_cl_add_cmd>
 80122c2:	42ae      	cmp	r6, r5
 80122c4:	f104 0408 	add.w	r4, r4, #8
 80122c8:	d1f0      	bne.n	80122ac <nema_load_frag_shader+0x14>
 80122ca:	bd70      	pop	{r4, r5, r6, pc}

080122cc <nema_set_frag_ptr>:
 80122cc:	4601      	mov	r1, r0
 80122ce:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 80122d2:	f00b bd83 	b.w	801dddc <nema_cl_add_cmd>
 80122d6:	bf00      	nop

080122d8 <nema_set_rop_blend_mode>:
 80122d8:	4601      	mov	r1, r0
 80122da:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 80122de:	f00b bd7d 	b.w	801dddc <nema_cl_add_cmd>
 80122e2:	bf00      	nop

080122e4 <nema_set_rop_const_color>:
 80122e4:	4601      	mov	r1, r0
 80122e6:	f44f 70ec 	mov.w	r0, #472	@ 0x1d8
 80122ea:	f00b bd77 	b.w	801dddc <nema_cl_add_cmd>
 80122ee:	bf00      	nop

080122f0 <nema_set_depth_ctrl>:
 80122f0:	4601      	mov	r1, r0
 80122f2:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 80122f6:	f00b bd71 	b.w	801dddc <nema_cl_add_cmd>
 80122fa:	bf00      	nop

080122fc <nema_set_gradient_fx>:
 80122fc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012300:	4607      	mov	r7, r0
 8012302:	200c      	movs	r0, #12
 8012304:	460e      	mov	r6, r1
 8012306:	4615      	mov	r5, r2
 8012308:	461c      	mov	r4, r3
 801230a:	f00b fd0b 	bl	801dd24 <nema_cl_get_space>
 801230e:	2800      	cmp	r0, #0
 8012310:	d03d      	beq.n	801238e <nema_set_gradient_fx+0x92>
 8012312:	f44f 71d4 	mov.w	r1, #424	@ 0x1a8
 8012316:	6301      	str	r1, [r0, #48]	@ 0x30
 8012318:	f44f 71d6 	mov.w	r1, #428	@ 0x1ac
 801231c:	6381      	str	r1, [r0, #56]	@ 0x38
 801231e:	f44f 71d8 	mov.w	r1, #432	@ 0x1b0
 8012322:	f44f 7be0 	mov.w	fp, #448	@ 0x1c0
 8012326:	f44f 7ae2 	mov.w	sl, #452	@ 0x1c4
 801232a:	f44f 79e4 	mov.w	r9, #456	@ 0x1c8
 801232e:	f44f 78e6 	mov.w	r8, #460	@ 0x1cc
 8012332:	f44f 7ed0 	mov.w	lr, #416	@ 0x1a0
 8012336:	f44f 7cd2 	mov.w	ip, #420	@ 0x1a4
 801233a:	f44f 72dc 	mov.w	r2, #440	@ 0x1b8
 801233e:	f44f 73de 	mov.w	r3, #444	@ 0x1bc
 8012342:	6401      	str	r1, [r0, #64]	@ 0x40
 8012344:	f44f 71da 	mov.w	r1, #436	@ 0x1b4
 8012348:	61c4      	str	r4, [r0, #28]
 801234a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801234c:	6047      	str	r7, [r0, #4]
 801234e:	6244      	str	r4, [r0, #36]	@ 0x24
 8012350:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8012352:	60c6      	str	r6, [r0, #12]
 8012354:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8012356:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8012358:	6145      	str	r5, [r0, #20]
 801235a:	6344      	str	r4, [r0, #52]	@ 0x34
 801235c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801235e:	f8c0 b000 	str.w	fp, [r0]
 8012362:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8012364:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8012366:	f8c0 a008 	str.w	sl, [r0, #8]
 801236a:	6444      	str	r4, [r0, #68]	@ 0x44
 801236c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801236e:	f8c0 9010 	str.w	r9, [r0, #16]
 8012372:	64c4      	str	r4, [r0, #76]	@ 0x4c
 8012374:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8012376:	f8c0 8018 	str.w	r8, [r0, #24]
 801237a:	6544      	str	r4, [r0, #84]	@ 0x54
 801237c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801237e:	f8c0 e020 	str.w	lr, [r0, #32]
 8012382:	65c4      	str	r4, [r0, #92]	@ 0x5c
 8012384:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8012388:	6481      	str	r1, [r0, #72]	@ 0x48
 801238a:	6502      	str	r2, [r0, #80]	@ 0x50
 801238c:	6583      	str	r3, [r0, #88]	@ 0x58
 801238e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012392:	bf00      	nop

08012394 <nema_set_raster_color>:
 8012394:	4601      	mov	r1, r0
 8012396:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 801239a:	f00b bd1f 	b.w	801dddc <nema_cl_add_cmd>
 801239e:	bf00      	nop

080123a0 <nema_raster_triangle_fx>:
 80123a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123a4:	4607      	mov	r7, r0
 80123a6:	2007      	movs	r0, #7
 80123a8:	460e      	mov	r6, r1
 80123aa:	4615      	mov	r5, r2
 80123ac:	461c      	mov	r4, r3
 80123ae:	f00b fcb9 	bl	801dd24 <nema_cl_get_space>
 80123b2:	b350      	cbz	r0, 801240a <nema_raster_triangle_fx+0x6a>
 80123b4:	f44f 7398 	mov.w	r3, #304	@ 0x130
 80123b8:	f44f 7292 	mov.w	r2, #292	@ 0x124
 80123bc:	f44f 7890 	mov.w	r8, #288	@ 0x120
 80123c0:	f44f 7e9a 	mov.w	lr, #308	@ 0x134
 80123c4:	f44f 7ca0 	mov.w	ip, #320	@ 0x140
 80123c8:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 80123cc:	6103      	str	r3, [r0, #16]
 80123ce:	4b10      	ldr	r3, [pc, #64]	@ (8012410 <nema_raster_triangle_fx+0x70>)
 80123d0:	6047      	str	r7, [r0, #4]
 80123d2:	60c6      	str	r6, [r0, #12]
 80123d4:	f8c0 8000 	str.w	r8, [r0]
 80123d8:	6082      	str	r2, [r0, #8]
 80123da:	691a      	ldr	r2, [r3, #16]
 80123dc:	4b0d      	ldr	r3, [pc, #52]	@ (8012414 <nema_raster_triangle_fx+0x74>)
 80123de:	61c4      	str	r4, [r0, #28]
 80123e0:	9c06      	ldr	r4, [sp, #24]
 80123e2:	6303      	str	r3, [r0, #48]	@ 0x30
 80123e4:	01d3      	lsls	r3, r2, #7
 80123e6:	6244      	str	r4, [r0, #36]	@ 0x24
 80123e8:	bf48      	it	mi
 80123ea:	f442 0200 	orrmi.w	r2, r2, #8388608	@ 0x800000
 80123ee:	9c07      	ldr	r4, [sp, #28]
 80123f0:	bf58      	it	pl
 80123f2:	f422 0200 	bicpl.w	r2, r2, #8388608	@ 0x800000
 80123f6:	f042 0204 	orr.w	r2, r2, #4
 80123fa:	6145      	str	r5, [r0, #20]
 80123fc:	62c4      	str	r4, [r0, #44]	@ 0x2c
 80123fe:	f8c0 e018 	str.w	lr, [r0, #24]
 8012402:	f8c0 c020 	str.w	ip, [r0, #32]
 8012406:	6281      	str	r1, [r0, #40]	@ 0x28
 8012408:	6342      	str	r2, [r0, #52]	@ 0x34
 801240a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801240e:	bf00      	nop
 8012410:	20000064 	.word	0x20000064
 8012414:	ff000100 	.word	0xff000100

08012418 <nema_raster_rect>:
 8012418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801241a:	1e17      	subs	r7, r2, #0
 801241c:	dd20      	ble.n	8012460 <nema_raster_rect+0x48>
 801241e:	2b00      	cmp	r3, #0
 8012420:	dd1e      	ble.n	8012460 <nema_raster_rect+0x48>
 8012422:	4604      	mov	r4, r0
 8012424:	2003      	movs	r0, #3
 8012426:	461d      	mov	r5, r3
 8012428:	460e      	mov	r6, r1
 801242a:	f00b fc7b 	bl	801dd24 <nema_cl_get_space>
 801242e:	b1b8      	cbz	r0, 8012460 <nema_raster_rect+0x48>
 8012430:	f44f 7c82 	mov.w	ip, #260	@ 0x104
 8012434:	f44f 7184 	mov.w	r1, #264	@ 0x108
 8012438:	193a      	adds	r2, r7, r4
 801243a:	b292      	uxth	r2, r2
 801243c:	19ab      	adds	r3, r5, r6
 801243e:	b2a4      	uxth	r4, r4
 8012440:	4d08      	ldr	r5, [pc, #32]	@ (8012464 <nema_raster_rect+0x4c>)
 8012442:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8012446:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 801244a:	4a07      	ldr	r2, [pc, #28]	@ (8012468 <nema_raster_rect+0x50>)
 801244c:	6044      	str	r4, [r0, #4]
 801244e:	60c3      	str	r3, [r0, #12]
 8012450:	f8c0 c000 	str.w	ip, [r0]
 8012454:	6081      	str	r1, [r0, #8]
 8012456:	6105      	str	r5, [r0, #16]
 8012458:	6913      	ldr	r3, [r2, #16]
 801245a:	f043 0302 	orr.w	r3, r3, #2
 801245e:	6143      	str	r3, [r0, #20]
 8012460:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012462:	bf00      	nop
 8012464:	ff000100 	.word	0xff000100
 8012468:	20000064 	.word	0x20000064

0801246c <nema_raster_quad_fx>:
 801246c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012470:	4607      	mov	r7, r0
 8012472:	2009      	movs	r0, #9
 8012474:	460e      	mov	r6, r1
 8012476:	4615      	mov	r5, r2
 8012478:	461c      	mov	r4, r3
 801247a:	f00b fc53 	bl	801dd24 <nema_cl_get_space>
 801247e:	2800      	cmp	r0, #0
 8012480:	d02f      	beq.n	80124e2 <nema_raster_quad_fx+0x76>
 8012482:	f44f 7398 	mov.w	r3, #304	@ 0x130
 8012486:	f44f 7292 	mov.w	r2, #292	@ 0x124
 801248a:	f44f 7a90 	mov.w	sl, #288	@ 0x120
 801248e:	f44f 799a 	mov.w	r9, #308	@ 0x134
 8012492:	f44f 78a0 	mov.w	r8, #320	@ 0x140
 8012496:	f44f 7ea2 	mov.w	lr, #324	@ 0x144
 801249a:	f44f 7ca8 	mov.w	ip, #336	@ 0x150
 801249e:	f44f 71aa 	mov.w	r1, #340	@ 0x154
 80124a2:	6103      	str	r3, [r0, #16]
 80124a4:	4b10      	ldr	r3, [pc, #64]	@ (80124e8 <nema_raster_quad_fx+0x7c>)
 80124a6:	6047      	str	r7, [r0, #4]
 80124a8:	60c6      	str	r6, [r0, #12]
 80124aa:	f8c0 a000 	str.w	sl, [r0]
 80124ae:	6082      	str	r2, [r0, #8]
 80124b0:	691a      	ldr	r2, [r3, #16]
 80124b2:	9b08      	ldr	r3, [sp, #32]
 80124b4:	f042 0205 	orr.w	r2, r2, #5
 80124b8:	6243      	str	r3, [r0, #36]	@ 0x24
 80124ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80124bc:	6145      	str	r5, [r0, #20]
 80124be:	62c3      	str	r3, [r0, #44]	@ 0x2c
 80124c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80124c2:	61c4      	str	r4, [r0, #28]
 80124c4:	6343      	str	r3, [r0, #52]	@ 0x34
 80124c6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80124c8:	6442      	str	r2, [r0, #68]	@ 0x44
 80124ca:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80124cc:	4b07      	ldr	r3, [pc, #28]	@ (80124ec <nema_raster_quad_fx+0x80>)
 80124ce:	f8c0 9018 	str.w	r9, [r0, #24]
 80124d2:	f8c0 8020 	str.w	r8, [r0, #32]
 80124d6:	f8c0 e028 	str.w	lr, [r0, #40]	@ 0x28
 80124da:	f8c0 c030 	str.w	ip, [r0, #48]	@ 0x30
 80124de:	6381      	str	r1, [r0, #56]	@ 0x38
 80124e0:	6403      	str	r3, [r0, #64]	@ 0x40
 80124e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80124e6:	bf00      	nop
 80124e8:	20000064 	.word	0x20000064
 80124ec:	ff000100 	.word	0xff000100

080124f0 <nema_set_interrupt_ctrl>:
 80124f0:	4601      	mov	r1, r0
 80124f2:	20f8      	movs	r0, #248	@ 0xf8
 80124f4:	f00b bc72 	b.w	801dddc <nema_cl_add_cmd>

080124f8 <flush_lines_>:
 80124f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124fc:	ed2d 8b06 	vpush	{d8-d10}
 8012500:	4fbc      	ldr	r7, [pc, #752]	@ (80127f4 <flush_lines_+0x2fc>)
 8012502:	b083      	sub	sp, #12
 8012504:	683b      	ldr	r3, [r7, #0]
 8012506:	4680      	mov	r8, r0
 8012508:	7f5e      	ldrb	r6, [r3, #29]
 801250a:	9101      	str	r1, [sp, #4]
 801250c:	f016 0610 	ands.w	r6, r6, #16
 8012510:	f040 8167 	bne.w	80127e2 <flush_lines_+0x2ea>
 8012514:	4cb8      	ldr	r4, [pc, #736]	@ (80127f8 <flush_lines_+0x300>)
 8012516:	f1b8 0f01 	cmp.w	r8, #1
 801251a:	edd4 7a08 	vldr	s15, [r4, #32]
 801251e:	4db7      	ldr	r5, [pc, #732]	@ (80127fc <flush_lines_+0x304>)
 8012520:	f000 80f1 	beq.w	8012706 <flush_lines_+0x20e>
 8012524:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012528:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801252c:	dd61      	ble.n	80125f2 <flush_lines_+0xfa>
 801252e:	683b      	ldr	r3, [r7, #0]
 8012530:	7f5b      	ldrb	r3, [r3, #29]
 8012532:	f013 0310 	ands.w	r3, r3, #16
 8012536:	d109      	bne.n	801254c <flush_lines_+0x54>
 8012538:	f1b8 0f01 	cmp.w	r8, #1
 801253c:	f000 81d1 	beq.w	80128e2 <flush_lines_+0x3ea>
 8012540:	2201      	movs	r2, #1
 8012542:	4611      	mov	r1, r2
 8012544:	4610      	mov	r0, r2
 8012546:	f7ff fd79 	bl	801203c <nema_enable_aa>
 801254a:	4606      	mov	r6, r0
 801254c:	2009      	movs	r0, #9
 801254e:	f8d4 b000 	ldr.w	fp, [r4]
 8012552:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8012556:	ed94 aa01 	vldr	s20, [r4, #4]
 801255a:	edd4 9a05 	vldr	s19, [r4, #20]
 801255e:	ed94 9a02 	vldr	s18, [r4, #8]
 8012562:	edd4 8a06 	vldr	s17, [r4, #24]
 8012566:	ed94 8a03 	vldr	s16, [r4, #12]
 801256a:	f8d4 901c 	ldr.w	r9, [r4, #28]
 801256e:	f00b fbd9 	bl	801dd24 <nema_cl_get_space>
 8012572:	b3b8      	cbz	r0, 80125e4 <flush_lines_+0xec>
 8012574:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8012578:	f8c0 b004 	str.w	fp, [r0, #4]
 801257c:	f8c0 a00c 	str.w	sl, [r0, #12]
 8012580:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8012584:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 8012588:	6003      	str	r3, [r0, #0]
 801258a:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801258e:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012592:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8012596:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801259a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801259e:	ed80 aa05 	vstr	s20, [r0, #20]
 80125a2:	edc0 9a07 	vstr	s19, [r0, #28]
 80125a6:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 80125aa:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 80125ae:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 80125b2:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 80125b6:	f8df 9248 	ldr.w	r9, [pc, #584]	@ 8012800 <flush_lines_+0x308>
 80125ba:	f8c0 a010 	str.w	sl, [r0, #16]
 80125be:	f8c0 b008 	str.w	fp, [r0, #8]
 80125c2:	f8d9 9010 	ldr.w	r9, [r9, #16]
 80125c6:	f8df a23c 	ldr.w	sl, [pc, #572]	@ 8012804 <flush_lines_+0x30c>
 80125ca:	f049 0905 	orr.w	r9, r9, #5
 80125ce:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 80125d2:	f8c0 e018 	str.w	lr, [r0, #24]
 80125d6:	f8c0 c020 	str.w	ip, [r0, #32]
 80125da:	6281      	str	r1, [r0, #40]	@ 0x28
 80125dc:	6302      	str	r2, [r0, #48]	@ 0x30
 80125de:	6383      	str	r3, [r0, #56]	@ 0x38
 80125e0:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 80125e4:	2200      	movs	r2, #0
 80125e6:	683b      	ldr	r3, [r7, #0]
 80125e8:	6222      	str	r2, [r4, #32]
 80125ea:	7f5b      	ldrb	r3, [r3, #29]
 80125ec:	06d8      	lsls	r0, r3, #27
 80125ee:	f140 8086 	bpl.w	80126fe <flush_lines_+0x206>
 80125f2:	edd5 7a08 	vldr	s15, [r5, #32]
 80125f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80125fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125fe:	dd1b      	ble.n	8012638 <flush_lines_+0x140>
 8012600:	9b01      	ldr	r3, [sp, #4]
 8012602:	0619      	lsls	r1, r3, #24
 8012604:	d418      	bmi.n	8012638 <flush_lines_+0x140>
 8012606:	683b      	ldr	r3, [r7, #0]
 8012608:	7f59      	ldrb	r1, [r3, #29]
 801260a:	f011 0110 	ands.w	r1, r1, #16
 801260e:	f040 8103 	bne.w	8012818 <flush_lines_+0x320>
 8012612:	f1b8 0f01 	cmp.w	r8, #1
 8012616:	f000 80f9 	beq.w	801280c <flush_lines_+0x314>
 801261a:	f8df 81ec 	ldr.w	r8, [pc, #492]	@ 8012808 <flush_lines_+0x310>
 801261e:	f8d8 3000 	ldr.w	r3, [r8]
 8012622:	2b01      	cmp	r3, #1
 8012624:	bf13      	iteet	ne
 8012626:	2301      	movne	r3, #1
 8012628:	461a      	moveq	r2, r3
 801262a:	4619      	moveq	r1, r3
 801262c:	461a      	movne	r2, r3
 801262e:	4618      	mov	r0, r3
 8012630:	f7ff fd04 	bl	801203c <nema_enable_aa>
 8012634:	4606      	mov	r6, r0
 8012636:	e0f1      	b.n	801281c <flush_lines_+0x324>
 8012638:	f8df 81cc 	ldr.w	r8, [pc, #460]	@ 8012808 <flush_lines_+0x310>
 801263c:	f8d8 3000 	ldr.w	r3, [r8]
 8012640:	2b02      	cmp	r3, #2
 8012642:	d00a      	beq.n	801265a <flush_lines_+0x162>
 8012644:	4630      	mov	r0, r6
 8012646:	f7ff fd1b 	bl	8012080 <nema_enable_aa_flags>
 801264a:	2300      	movs	r3, #0
 801264c:	f8c8 3000 	str.w	r3, [r8]
 8012650:	b003      	add	sp, #12
 8012652:	ecbd 8b06 	vpop	{d8-d10}
 8012656:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801265a:	683b      	ldr	r3, [r7, #0]
 801265c:	7f5b      	ldrb	r3, [r3, #29]
 801265e:	f013 0310 	ands.w	r3, r3, #16
 8012662:	f000 8133 	beq.w	80128cc <flush_lines_+0x3d4>
 8012666:	2009      	movs	r0, #9
 8012668:	f8d5 a004 	ldr.w	sl, [r5, #4]
 801266c:	edd5 9a05 	vldr	s19, [r5, #20]
 8012670:	f8d4 9000 	ldr.w	r9, [r4]
 8012674:	ed94 9a04 	vldr	s18, [r4, #16]
 8012678:	edd5 8a02 	vldr	s17, [r5, #8]
 801267c:	ed95 8a06 	vldr	s16, [r5, #24]
 8012680:	68e5      	ldr	r5, [r4, #12]
 8012682:	69e4      	ldr	r4, [r4, #28]
 8012684:	f00b fb4e 	bl	801dd24 <nema_cl_get_space>
 8012688:	b388      	cbz	r0, 80126ee <flush_lines_+0x1f6>
 801268a:	f8c0 a004 	str.w	sl, [r0, #4]
 801268e:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012692:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 8012696:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 801269a:	edc0 9a03 	vstr	s19, [r0, #12]
 801269e:	f8c0 9014 	str.w	r9, [r0, #20]
 80126a2:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 80126a6:	f44f 794d 	mov.w	r9, #820	@ 0x334
 80126aa:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 80126ae:	f44f 7154 	mov.w	r1, #848	@ 0x350
 80126b2:	f44f 7255 	mov.w	r2, #852	@ 0x354
 80126b6:	ed80 9a07 	vstr	s18, [r0, #28]
 80126ba:	edc0 8a09 	vstr	s17, [r0, #36]	@ 0x24
 80126be:	ed80 8a0b 	vstr	s16, [r0, #44]	@ 0x2c
 80126c2:	63c4      	str	r4, [r0, #60]	@ 0x3c
 80126c4:	4c4e      	ldr	r4, [pc, #312]	@ (8012800 <flush_lines_+0x308>)
 80126c6:	f8c0 b000 	str.w	fp, [r0]
 80126ca:	f8c0 a008 	str.w	sl, [r0, #8]
 80126ce:	6103      	str	r3, [r0, #16]
 80126d0:	6923      	ldr	r3, [r4, #16]
 80126d2:	4c4c      	ldr	r4, [pc, #304]	@ (8012804 <flush_lines_+0x30c>)
 80126d4:	f043 0305 	orr.w	r3, r3, #5
 80126d8:	6345      	str	r5, [r0, #52]	@ 0x34
 80126da:	6443      	str	r3, [r0, #68]	@ 0x44
 80126dc:	f8c0 9018 	str.w	r9, [r0, #24]
 80126e0:	f8c0 e020 	str.w	lr, [r0, #32]
 80126e4:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 80126e8:	6301      	str	r1, [r0, #48]	@ 0x30
 80126ea:	6382      	str	r2, [r0, #56]	@ 0x38
 80126ec:	6404      	str	r4, [r0, #64]	@ 0x40
 80126ee:	683b      	ldr	r3, [r7, #0]
 80126f0:	7f5b      	ldrb	r3, [r3, #29]
 80126f2:	06db      	lsls	r3, r3, #27
 80126f4:	d4a6      	bmi.n	8012644 <flush_lines_+0x14c>
 80126f6:	4630      	mov	r0, r6
 80126f8:	f7ff fcc2 	bl	8012080 <nema_enable_aa_flags>
 80126fc:	e7a2      	b.n	8012644 <flush_lines_+0x14c>
 80126fe:	4630      	mov	r0, r6
 8012700:	f7ff fcbe 	bl	8012080 <nema_enable_aa_flags>
 8012704:	e775      	b.n	80125f2 <flush_lines_+0xfa>
 8012706:	ed95 7a08 	vldr	s14, [r5, #32]
 801270a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801270e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012712:	f77f af07 	ble.w	8012524 <flush_lines_+0x2c>
 8012716:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801271a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801271e:	f77f af6f 	ble.w	8012600 <flush_lines_+0x108>
 8012722:	683b      	ldr	r3, [r7, #0]
 8012724:	7f5b      	ldrb	r3, [r3, #29]
 8012726:	f013 0310 	ands.w	r3, r3, #16
 801272a:	f000 80e7 	beq.w	80128fc <flush_lines_+0x404>
 801272e:	2009      	movs	r0, #9
 8012730:	f8d4 b004 	ldr.w	fp, [r4, #4]
 8012734:	f8d4 a014 	ldr.w	sl, [r4, #20]
 8012738:	ed95 aa00 	vldr	s20, [r5]
 801273c:	edd5 9a04 	vldr	s19, [r5, #16]
 8012740:	ed94 9a02 	vldr	s18, [r4, #8]
 8012744:	edd4 8a06 	vldr	s17, [r4, #24]
 8012748:	ed95 8a03 	vldr	s16, [r5, #12]
 801274c:	f8d5 901c 	ldr.w	r9, [r5, #28]
 8012750:	f00b fae8 	bl	801dd24 <nema_cl_get_space>
 8012754:	b3b8      	cbz	r0, 80127c6 <flush_lines_+0x2ce>
 8012756:	f44f 7348 	mov.w	r3, #800	@ 0x320
 801275a:	f8c0 b004 	str.w	fp, [r0, #4]
 801275e:	f8c0 a00c 	str.w	sl, [r0, #12]
 8012762:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8012766:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 801276a:	6003      	str	r3, [r0, #0]
 801276c:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8012770:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012774:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8012778:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801277c:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8012780:	ed80 aa05 	vstr	s20, [r0, #20]
 8012784:	edc0 9a07 	vstr	s19, [r0, #28]
 8012788:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 801278c:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8012790:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012794:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 8012798:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 8012800 <flush_lines_+0x308>
 801279c:	f8c0 a010 	str.w	sl, [r0, #16]
 80127a0:	f8c0 b008 	str.w	fp, [r0, #8]
 80127a4:	f8d9 9010 	ldr.w	r9, [r9, #16]
 80127a8:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8012804 <flush_lines_+0x30c>
 80127ac:	f049 0905 	orr.w	r9, r9, #5
 80127b0:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 80127b4:	f8c0 e018 	str.w	lr, [r0, #24]
 80127b8:	f8c0 c020 	str.w	ip, [r0, #32]
 80127bc:	6281      	str	r1, [r0, #40]	@ 0x28
 80127be:	6302      	str	r2, [r0, #48]	@ 0x30
 80127c0:	6383      	str	r3, [r0, #56]	@ 0x38
 80127c2:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 80127c6:	683b      	ldr	r3, [r7, #0]
 80127c8:	7f5b      	ldrb	r3, [r3, #29]
 80127ca:	06db      	lsls	r3, r3, #27
 80127cc:	f140 8090 	bpl.w	80128f0 <flush_lines_+0x3f8>
 80127d0:	edd4 7a08 	vldr	s15, [r4, #32]
 80127d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80127d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80127dc:	f73f aeb6 	bgt.w	801254c <flush_lines_+0x54>
 80127e0:	e707      	b.n	80125f2 <flush_lines_+0xfa>
 80127e2:	2300      	movs	r3, #0
 80127e4:	461a      	mov	r2, r3
 80127e6:	4619      	mov	r1, r3
 80127e8:	4618      	mov	r0, r3
 80127ea:	f7ff fc27 	bl	801203c <nema_enable_aa>
 80127ee:	4606      	mov	r6, r0
 80127f0:	e690      	b.n	8012514 <flush_lines_+0x1c>
 80127f2:	bf00      	nop
 80127f4:	20082fac 	.word	0x20082fac
 80127f8:	20082ffc 	.word	0x20082ffc
 80127fc:	20082fc4 	.word	0x20082fc4
 8012800:	20000064 	.word	0x20000064
 8012804:	ff000100 	.word	0xff000100
 8012808:	20083028 	.word	0x20083028
 801280c:	460b      	mov	r3, r1
 801280e:	4642      	mov	r2, r8
 8012810:	4640      	mov	r0, r8
 8012812:	f7ff fc13 	bl	801203c <nema_enable_aa>
 8012816:	4606      	mov	r6, r0
 8012818:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 801290c <flush_lines_+0x414>
 801281c:	2009      	movs	r0, #9
 801281e:	f8d5 b000 	ldr.w	fp, [r5]
 8012822:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8012826:	ed95 aa01 	vldr	s20, [r5, #4]
 801282a:	edd5 9a05 	vldr	s19, [r5, #20]
 801282e:	ed95 9a02 	vldr	s18, [r5, #8]
 8012832:	edd5 8a06 	vldr	s17, [r5, #24]
 8012836:	ed95 8a03 	vldr	s16, [r5, #12]
 801283a:	f8d5 901c 	ldr.w	r9, [r5, #28]
 801283e:	f00b fa71 	bl	801dd24 <nema_cl_get_space>
 8012842:	b3b8      	cbz	r0, 80128b4 <flush_lines_+0x3bc>
 8012844:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8012848:	f8c0 b004 	str.w	fp, [r0, #4]
 801284c:	f8c0 a00c 	str.w	sl, [r0, #12]
 8012850:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8012854:	f44f 7a4c 	mov.w	sl, #816	@ 0x330
 8012858:	6003      	str	r3, [r0, #0]
 801285a:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801285e:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012862:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8012866:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801286a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801286e:	ed80 aa05 	vstr	s20, [r0, #20]
 8012872:	edc0 9a07 	vstr	s19, [r0, #28]
 8012876:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 801287a:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 801287e:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012882:	f8c0 903c 	str.w	r9, [r0, #60]	@ 0x3c
 8012886:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8012910 <flush_lines_+0x418>
 801288a:	f8c0 a010 	str.w	sl, [r0, #16]
 801288e:	f8c0 b008 	str.w	fp, [r0, #8]
 8012892:	f8d9 9010 	ldr.w	r9, [r9, #16]
 8012896:	f8df a07c 	ldr.w	sl, [pc, #124]	@ 8012914 <flush_lines_+0x41c>
 801289a:	f049 0905 	orr.w	r9, r9, #5
 801289e:	f8c0 9044 	str.w	r9, [r0, #68]	@ 0x44
 80128a2:	f8c0 e018 	str.w	lr, [r0, #24]
 80128a6:	f8c0 c020 	str.w	ip, [r0, #32]
 80128aa:	6281      	str	r1, [r0, #40]	@ 0x28
 80128ac:	6302      	str	r2, [r0, #48]	@ 0x30
 80128ae:	6383      	str	r3, [r0, #56]	@ 0x38
 80128b0:	f8c0 a040 	str.w	sl, [r0, #64]	@ 0x40
 80128b4:	2200      	movs	r2, #0
 80128b6:	683b      	ldr	r3, [r7, #0]
 80128b8:	622a      	str	r2, [r5, #32]
 80128ba:	7f5b      	ldrb	r3, [r3, #29]
 80128bc:	06da      	lsls	r2, r3, #27
 80128be:	d50c      	bpl.n	80128da <flush_lines_+0x3e2>
 80128c0:	f8d8 3000 	ldr.w	r3, [r8]
 80128c4:	2b02      	cmp	r3, #2
 80128c6:	f47f aebd 	bne.w	8012644 <flush_lines_+0x14c>
 80128ca:	e6cc      	b.n	8012666 <flush_lines_+0x16e>
 80128cc:	2201      	movs	r2, #1
 80128ce:	4619      	mov	r1, r3
 80128d0:	4610      	mov	r0, r2
 80128d2:	f7ff fbb3 	bl	801203c <nema_enable_aa>
 80128d6:	4606      	mov	r6, r0
 80128d8:	e6c5      	b.n	8012666 <flush_lines_+0x16e>
 80128da:	4630      	mov	r0, r6
 80128dc:	f7ff fbd0 	bl	8012080 <nema_enable_aa_flags>
 80128e0:	e6ac      	b.n	801263c <flush_lines_+0x144>
 80128e2:	4619      	mov	r1, r3
 80128e4:	4642      	mov	r2, r8
 80128e6:	4640      	mov	r0, r8
 80128e8:	f7ff fba8 	bl	801203c <nema_enable_aa>
 80128ec:	4606      	mov	r6, r0
 80128ee:	e62d      	b.n	801254c <flush_lines_+0x54>
 80128f0:	4630      	mov	r0, r6
 80128f2:	f7ff fbc5 	bl	8012080 <nema_enable_aa_flags>
 80128f6:	edd4 7a08 	vldr	s15, [r4, #32]
 80128fa:	e613      	b.n	8012524 <flush_lines_+0x2c>
 80128fc:	4619      	mov	r1, r3
 80128fe:	4642      	mov	r2, r8
 8012900:	4640      	mov	r0, r8
 8012902:	f7ff fb9b 	bl	801203c <nema_enable_aa>
 8012906:	4606      	mov	r6, r0
 8012908:	e711      	b.n	801272e <flush_lines_+0x236>
 801290a:	bf00      	nop
 801290c:	20083028 	.word	0x20083028
 8012910:	20000064 	.word	0x20000064
 8012914:	ff000100 	.word	0xff000100

08012918 <raster_stroked_line_>:
 8012918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801291c:	ed2d 8b10 	vpush	{d8-d15}
 8012920:	ee31 9a40 	vsub.f32	s18, s2, s0
 8012924:	ee71 8ae0 	vsub.f32	s17, s3, s1
 8012928:	ee69 7a09 	vmul.f32	s15, s18, s18
 801292c:	ee68 6aa8 	vmul.f32	s13, s17, s17
 8012930:	ed9f 7ac0 	vldr	s14, [pc, #768]	@ 8012c34 <raster_stroked_line_+0x31c>
 8012934:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012938:	eef4 7ac7 	vcmpe.f32	s15, s14
 801293c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012940:	b085      	sub	sp, #20
 8012942:	d804      	bhi.n	801294e <raster_stroked_line_+0x36>
 8012944:	b005      	add	sp, #20
 8012946:	ecbd 8b10 	vpop	{d8-d15}
 801294a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801294e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8012952:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012956:	eeb0 8a40 	vmov.f32	s16, s0
 801295a:	eeb1 bae7 	vsqrt.f32	s22, s15
 801295e:	f100 8206 	bmi.w	8012d6e <raster_stroked_line_+0x456>
 8012962:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8012966:	4ab4      	ldr	r2, [pc, #720]	@ (8012c38 <raster_stroked_line_+0x320>)
 8012968:	4bb4      	ldr	r3, [pc, #720]	@ (8012c3c <raster_stroked_line_+0x324>)
 801296a:	eec7 6a8b 	vdiv.f32	s13, s15, s22
 801296e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8012972:	edd2 7a00 	vldr	s15, [r2]
 8012976:	ed93 aa00 	vldr	s20, [r3]
 801297a:	ee29 9a26 	vmul.f32	s18, s18, s13
 801297e:	ee68 8aa6 	vmul.f32	s17, s17, s13
 8012982:	ee67 7a87 	vmul.f32	s15, s15, s14
 8012986:	ee2a aa07 	vmul.f32	s20, s20, s14
 801298a:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801298e:	ee2a aa09 	vmul.f32	s20, s20, s18
 8012992:	4aab      	ldr	r2, [pc, #684]	@ (8012c40 <raster_stroked_line_+0x328>)
 8012994:	4bab      	ldr	r3, [pc, #684]	@ (8012c44 <raster_stroked_line_+0x32c>)
 8012996:	6812      	ldr	r2, [r2, #0]
 8012998:	ee78 ba67 	vsub.f32	s23, s16, s15
 801299c:	ee3a ca20 	vadd.f32	s24, s20, s1
 80129a0:	ee70 9aca 	vsub.f32	s19, s1, s20
 80129a4:	ee3a da21 	vadd.f32	s26, s20, s3
 80129a8:	ee37 8a88 	vadd.f32	s16, s15, s16
 80129ac:	ee71 ca67 	vsub.f32	s25, s2, s15
 80129b0:	ee77 aa81 	vadd.f32	s21, s15, s2
 80129b4:	ee31 aaca 	vsub.f32	s20, s3, s20
 80129b8:	681b      	ldr	r3, [r3, #0]
 80129ba:	2a00      	cmp	r2, #0
 80129bc:	f000 8150 	beq.w	8012c60 <raster_stroked_line_+0x348>
 80129c0:	7f5b      	ldrb	r3, [r3, #29]
 80129c2:	f013 0310 	ands.w	r3, r3, #16
 80129c6:	d13b      	bne.n	8012a40 <raster_stroked_line_+0x128>
 80129c8:	2201      	movs	r2, #1
 80129ca:	4619      	mov	r1, r3
 80129cc:	4610      	mov	r0, r2
 80129ce:	f7ff fb35 	bl	801203c <nema_enable_aa>
 80129d2:	4607      	mov	r7, r0
 80129d4:	4c9c      	ldr	r4, [pc, #624]	@ (8012c48 <raster_stroked_line_+0x330>)
 80129d6:	edd4 7a08 	vldr	s15, [r4, #32]
 80129da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80129de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80129e2:	dc35      	bgt.n	8012a50 <raster_stroked_line_+0x138>
 80129e4:	4d99      	ldr	r5, [pc, #612]	@ (8012c4c <raster_stroked_line_+0x334>)
 80129e6:	4e9a      	ldr	r6, [pc, #616]	@ (8012c50 <raster_stroked_line_+0x338>)
 80129e8:	edd5 7a08 	vldr	s15, [r5, #32]
 80129ec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80129f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80129f4:	6833      	ldr	r3, [r6, #0]
 80129f6:	f340 80f6 	ble.w	8012be6 <raster_stroked_line_+0x2ce>
 80129fa:	2b01      	cmp	r3, #1
 80129fc:	f000 8095 	beq.w	8012b2a <raster_stroked_line_+0x212>
 8012a00:	3301      	adds	r3, #1
 8012a02:	6033      	str	r3, [r6, #0]
 8012a04:	4638      	mov	r0, r7
 8012a06:	edc4 ba00 	vstr	s23, [r4]
 8012a0a:	ed84 ca04 	vstr	s24, [r4, #16]
 8012a0e:	edc4 ca01 	vstr	s25, [r4, #4]
 8012a12:	ed84 da05 	vstr	s26, [r4, #20]
 8012a16:	edc4 aa02 	vstr	s21, [r4, #8]
 8012a1a:	ed84 aa06 	vstr	s20, [r4, #24]
 8012a1e:	ed84 8a03 	vstr	s16, [r4, #12]
 8012a22:	edc4 9a07 	vstr	s19, [r4, #28]
 8012a26:	ed84 ba08 	vstr	s22, [r4, #32]
 8012a2a:	ed84 9a09 	vstr	s18, [r4, #36]	@ 0x24
 8012a2e:	edc4 8a0a 	vstr	s17, [r4, #40]	@ 0x28
 8012a32:	b005      	add	sp, #20
 8012a34:	ecbd 8b10 	vpop	{d8-d15}
 8012a38:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a3c:	f7ff bb20 	b.w	8012080 <nema_enable_aa_flags>
 8012a40:	2300      	movs	r3, #0
 8012a42:	461a      	mov	r2, r3
 8012a44:	4619      	mov	r1, r3
 8012a46:	4618      	mov	r0, r3
 8012a48:	f7ff faf8 	bl	801203c <nema_enable_aa>
 8012a4c:	4607      	mov	r7, r0
 8012a4e:	e7c1      	b.n	80129d4 <raster_stroked_line_+0xbc>
 8012a50:	2009      	movs	r0, #9
 8012a52:	ed94 ea00 	vldr	s28, [r4]
 8012a56:	edd4 da04 	vldr	s27, [r4, #16]
 8012a5a:	f8d4 b004 	ldr.w	fp, [r4, #4]
 8012a5e:	f8d4 a014 	ldr.w	sl, [r4, #20]
 8012a62:	f8d4 9008 	ldr.w	r9, [r4, #8]
 8012a66:	f8d4 8018 	ldr.w	r8, [r4, #24]
 8012a6a:	68e6      	ldr	r6, [r4, #12]
 8012a6c:	69e5      	ldr	r5, [r4, #28]
 8012a6e:	f00b f959 	bl	801dd24 <nema_cl_get_space>
 8012a72:	b380      	cbz	r0, 8012ad6 <raster_stroked_line_+0x1be>
 8012a74:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8012a78:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8012a7c:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8012a80:	ed80 ea01 	vstr	s28, [r0, #4]
 8012a84:	edc0 da03 	vstr	s27, [r0, #12]
 8012a88:	f44f 714d 	mov.w	r1, #820	@ 0x334
 8012a8c:	f44f 7250 	mov.w	r2, #832	@ 0x340
 8012a90:	f8c0 9024 	str.w	r9, [r0, #36]	@ 0x24
 8012a94:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 8012a98:	f44f 7951 	mov.w	r9, #836	@ 0x344
 8012a9c:	f44f 7854 	mov.w	r8, #848	@ 0x350
 8012aa0:	6346      	str	r6, [r0, #52]	@ 0x34
 8012aa2:	f44f 7655 	mov.w	r6, #852	@ 0x354
 8012aa6:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8012aa8:	4d6a      	ldr	r5, [pc, #424]	@ (8012c54 <raster_stroked_line_+0x33c>)
 8012aaa:	6003      	str	r3, [r0, #0]
 8012aac:	f8c0 c008 	str.w	ip, [r0, #8]
 8012ab0:	f8c0 e010 	str.w	lr, [r0, #16]
 8012ab4:	692b      	ldr	r3, [r5, #16]
 8012ab6:	4d68      	ldr	r5, [pc, #416]	@ (8012c58 <raster_stroked_line_+0x340>)
 8012ab8:	f043 0305 	orr.w	r3, r3, #5
 8012abc:	f8c0 b014 	str.w	fp, [r0, #20]
 8012ac0:	f8c0 a01c 	str.w	sl, [r0, #28]
 8012ac4:	6443      	str	r3, [r0, #68]	@ 0x44
 8012ac6:	6181      	str	r1, [r0, #24]
 8012ac8:	6202      	str	r2, [r0, #32]
 8012aca:	f8c0 9028 	str.w	r9, [r0, #40]	@ 0x28
 8012ace:	f8c0 8030 	str.w	r8, [r0, #48]	@ 0x30
 8012ad2:	6386      	str	r6, [r0, #56]	@ 0x38
 8012ad4:	6405      	str	r5, [r0, #64]	@ 0x40
 8012ad6:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 8012ada:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8012ade:	ee68 7aa7 	vmul.f32	s15, s17, s15
 8012ae2:	ee29 7a07 	vmul.f32	s14, s18, s14
 8012ae6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8012aea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012aee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012af2:	ed9f 7a5a 	vldr	s14, [pc, #360]	@ 8012c5c <raster_stroked_line_+0x344>
 8012af6:	bf48      	it	mi
 8012af8:	eef1 7a67 	vnegmi.f32	s15, s15
 8012afc:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012b00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b04:	edd4 da01 	vldr	s27, [r4, #4]
 8012b08:	edd4 ea05 	vldr	s29, [r4, #20]
 8012b0c:	ed94 ea02 	vldr	s28, [r4, #8]
 8012b10:	ed94 fa06 	vldr	s30, [r4, #24]
 8012b14:	f200 80ee 	bhi.w	8012cf4 <raster_stroked_line_+0x3dc>
 8012b18:	eef0 9a4f 	vmov.f32	s19, s30
 8012b1c:	eeb0 ca6e 	vmov.f32	s24, s29
 8012b20:	eeb0 8a4e 	vmov.f32	s16, s28
 8012b24:	eef0 ba6d 	vmov.f32	s23, s27
 8012b28:	e75c      	b.n	80129e4 <raster_stroked_line_+0xcc>
 8012b2a:	edd5 7a09 	vldr	s15, [r5, #36]	@ 0x24
 8012b2e:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8012b32:	ee68 7aa7 	vmul.f32	s15, s17, s15
 8012b36:	ee29 7a07 	vmul.f32	s14, s18, s14
 8012b3a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8012b3e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012b42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b46:	ed9f 7a45 	vldr	s14, [pc, #276]	@ 8012c5c <raster_stroked_line_+0x344>
 8012b4a:	bf48      	it	mi
 8012b4c:	eef1 7a67 	vnegmi.f32	s15, s15
 8012b50:	eef4 7ac7 	vcmpe.f32	s15, s14
 8012b54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b58:	edd5 da01 	vldr	s27, [r5, #4]
 8012b5c:	edd5 ea05 	vldr	s29, [r5, #20]
 8012b60:	ed95 ea02 	vldr	s28, [r5, #8]
 8012b64:	ed95 fa06 	vldr	s30, [r5, #24]
 8012b68:	f240 80bb 	bls.w	8012ce2 <raster_stroked_line_+0x3ca>
 8012b6c:	2009      	movs	r0, #9
 8012b6e:	f00b f8d9 	bl	801dd24 <nema_cl_get_space>
 8012b72:	2800      	cmp	r0, #0
 8012b74:	f000 80f7 	beq.w	8012d66 <raster_stroked_line_+0x44e>
 8012b78:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012b7c:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8012b80:	f44f 7949 	mov.w	r9, #804	@ 0x324
 8012b84:	edc0 da01 	vstr	s27, [r0, #4]
 8012b88:	edc0 ea03 	vstr	s29, [r0, #12]
 8012b8c:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8012b90:	f44f 784d 	mov.w	r8, #820	@ 0x334
 8012b94:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8012b98:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 8012b9c:	f44f 7155 	mov.w	r1, #852	@ 0x354
 8012ba0:	edc0 ba05 	vstr	s23, [r0, #20]
 8012ba4:	ed80 ca07 	vstr	s24, [r0, #28]
 8012ba8:	ed80 ea09 	vstr	s28, [r0, #36]	@ 0x24
 8012bac:	ed80 fa0b 	vstr	s30, [r0, #44]	@ 0x2c
 8012bb0:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012bb4:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012bb8:	edd5 7a08 	vldr	s15, [r5, #32]
 8012bbc:	6103      	str	r3, [r0, #16]
 8012bbe:	4b25      	ldr	r3, [pc, #148]	@ (8012c54 <raster_stroked_line_+0x33c>)
 8012bc0:	f8c0 a000 	str.w	sl, [r0]
 8012bc4:	f8c0 9008 	str.w	r9, [r0, #8]
 8012bc8:	691b      	ldr	r3, [r3, #16]
 8012bca:	6302      	str	r2, [r0, #48]	@ 0x30
 8012bcc:	f043 0305 	orr.w	r3, r3, #5
 8012bd0:	4a21      	ldr	r2, [pc, #132]	@ (8012c58 <raster_stroked_line_+0x340>)
 8012bd2:	6443      	str	r3, [r0, #68]	@ 0x44
 8012bd4:	6833      	ldr	r3, [r6, #0]
 8012bd6:	f8c0 8018 	str.w	r8, [r0, #24]
 8012bda:	f8c0 e020 	str.w	lr, [r0, #32]
 8012bde:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8012be2:	6381      	str	r1, [r0, #56]	@ 0x38
 8012be4:	6402      	str	r2, [r0, #64]	@ 0x40
 8012be6:	eef5 7a40 	vcmp.f32	s15, #0.0
 8012bea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012bee:	f103 0301 	add.w	r3, r3, #1
 8012bf2:	6033      	str	r3, [r6, #0]
 8012bf4:	f47f af06 	bne.w	8012a04 <raster_stroked_line_+0xec>
 8012bf8:	4638      	mov	r0, r7
 8012bfa:	edc5 ba00 	vstr	s23, [r5]
 8012bfe:	ed85 ca04 	vstr	s24, [r5, #16]
 8012c02:	edc5 ca01 	vstr	s25, [r5, #4]
 8012c06:	ed85 da05 	vstr	s26, [r5, #20]
 8012c0a:	edc5 aa02 	vstr	s21, [r5, #8]
 8012c0e:	ed85 aa06 	vstr	s20, [r5, #24]
 8012c12:	ed85 8a03 	vstr	s16, [r5, #12]
 8012c16:	edc5 9a07 	vstr	s19, [r5, #28]
 8012c1a:	ed85 ba08 	vstr	s22, [r5, #32]
 8012c1e:	ed85 9a09 	vstr	s18, [r5, #36]	@ 0x24
 8012c22:	edc5 8a0a 	vstr	s17, [r5, #40]	@ 0x28
 8012c26:	b005      	add	sp, #20
 8012c28:	ecbd 8b10 	vpop	{d8-d15}
 8012c2c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c30:	f7ff ba26 	b.w	8012080 <nema_enable_aa_flags>
 8012c34:	3727c5ac 	.word	0x3727c5ac
 8012c38:	20000138 	.word	0x20000138
 8012c3c:	2000013c 	.word	0x2000013c
 8012c40:	20082fb4 	.word	0x20082fb4
 8012c44:	20082fac 	.word	0x20082fac
 8012c48:	20082ffc 	.word	0x20082ffc
 8012c4c:	20082fc4 	.word	0x20082fc4
 8012c50:	20083028 	.word	0x20083028
 8012c54:	20000064 	.word	0x20000064
 8012c58:	ff000100 	.word	0xff000100
 8012c5c:	3d4ccccd 	.word	0x3d4ccccd
 8012c60:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 8012c62:	f7ff fa0d 	bl	8012080 <nema_enable_aa_flags>
 8012c66:	4604      	mov	r4, r0
 8012c68:	2009      	movs	r0, #9
 8012c6a:	f00b f85b 	bl	801dd24 <nema_cl_get_space>
 8012c6e:	b380      	cbz	r0, 8012cd2 <raster_stroked_line_+0x3ba>
 8012c70:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012c74:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8012c78:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8012c7c:	edc0 ba01 	vstr	s23, [r0, #4]
 8012c80:	ed80 ca03 	vstr	s24, [r0, #12]
 8012c84:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8012c88:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8012c8c:	f44f 7551 	mov.w	r5, #836	@ 0x344
 8012c90:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8012c94:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8012c98:	edc0 ca05 	vstr	s25, [r0, #20]
 8012c9c:	ed80 da07 	vstr	s26, [r0, #28]
 8012ca0:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 8012ca4:	ed80 aa0b 	vstr	s20, [r0, #44]	@ 0x2c
 8012ca8:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012cac:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012cb0:	6103      	str	r3, [r0, #16]
 8012cb2:	4b37      	ldr	r3, [pc, #220]	@ (8012d90 <raster_stroked_line_+0x478>)
 8012cb4:	f8c0 e000 	str.w	lr, [r0]
 8012cb8:	f8c0 c008 	str.w	ip, [r0, #8]
 8012cbc:	691b      	ldr	r3, [r3, #16]
 8012cbe:	6187      	str	r7, [r0, #24]
 8012cc0:	f043 0305 	orr.w	r3, r3, #5
 8012cc4:	6443      	str	r3, [r0, #68]	@ 0x44
 8012cc6:	4b33      	ldr	r3, [pc, #204]	@ (8012d94 <raster_stroked_line_+0x47c>)
 8012cc8:	6206      	str	r6, [r0, #32]
 8012cca:	6285      	str	r5, [r0, #40]	@ 0x28
 8012ccc:	6301      	str	r1, [r0, #48]	@ 0x30
 8012cce:	6382      	str	r2, [r0, #56]	@ 0x38
 8012cd0:	6403      	str	r3, [r0, #64]	@ 0x40
 8012cd2:	4620      	mov	r0, r4
 8012cd4:	b005      	add	sp, #20
 8012cd6:	ecbd 8b10 	vpop	{d8-d15}
 8012cda:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012cde:	f7ff b9cf 	b.w	8012080 <nema_enable_aa_flags>
 8012ce2:	eef0 9a4f 	vmov.f32	s19, s30
 8012ce6:	eeb0 ca6e 	vmov.f32	s24, s29
 8012cea:	eeb0 8a4e 	vmov.f32	s16, s28
 8012cee:	eef0 ba6d 	vmov.f32	s23, s27
 8012cf2:	e685      	b.n	8012a00 <raster_stroked_line_+0xe8>
 8012cf4:	2009      	movs	r0, #9
 8012cf6:	f00b f815 	bl	801dd24 <nema_cl_get_space>
 8012cfa:	2800      	cmp	r0, #0
 8012cfc:	f43f ae72 	beq.w	80129e4 <raster_stroked_line_+0xcc>
 8012d00:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8012d04:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8012d08:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8012d0c:	edc0 da01 	vstr	s27, [r0, #4]
 8012d10:	edc0 ea03 	vstr	s29, [r0, #12]
 8012d14:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8012d18:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8012d1c:	f44f 7551 	mov.w	r5, #836	@ 0x344
 8012d20:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8012d24:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8012d28:	6103      	str	r3, [r0, #16]
 8012d2a:	4b19      	ldr	r3, [pc, #100]	@ (8012d90 <raster_stroked_line_+0x478>)
 8012d2c:	f8c0 8000 	str.w	r8, [r0]
 8012d30:	f8c0 e008 	str.w	lr, [r0, #8]
 8012d34:	691b      	ldr	r3, [r3, #16]
 8012d36:	edc0 ba05 	vstr	s23, [r0, #20]
 8012d3a:	f043 0305 	orr.w	r3, r3, #5
 8012d3e:	6443      	str	r3, [r0, #68]	@ 0x44
 8012d40:	4b14      	ldr	r3, [pc, #80]	@ (8012d94 <raster_stroked_line_+0x47c>)
 8012d42:	ed80 ca07 	vstr	s24, [r0, #28]
 8012d46:	ed80 ea09 	vstr	s28, [r0, #36]	@ 0x24
 8012d4a:	ed80 fa0b 	vstr	s30, [r0, #44]	@ 0x2c
 8012d4e:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8012d52:	edc0 9a0f 	vstr	s19, [r0, #60]	@ 0x3c
 8012d56:	f8c0 c018 	str.w	ip, [r0, #24]
 8012d5a:	6206      	str	r6, [r0, #32]
 8012d5c:	6285      	str	r5, [r0, #40]	@ 0x28
 8012d5e:	6301      	str	r1, [r0, #48]	@ 0x30
 8012d60:	6382      	str	r2, [r0, #56]	@ 0x38
 8012d62:	6403      	str	r3, [r0, #64]	@ 0x40
 8012d64:	e63e      	b.n	80129e4 <raster_stroked_line_+0xcc>
 8012d66:	6833      	ldr	r3, [r6, #0]
 8012d68:	edd5 7a08 	vldr	s15, [r5, #32]
 8012d6c:	e73b      	b.n	8012be6 <raster_stroked_line_+0x2ce>
 8012d6e:	eeb0 0a67 	vmov.f32	s0, s15
 8012d72:	edcd 1a03 	vstr	s3, [sp, #12]
 8012d76:	ed8d 1a02 	vstr	s2, [sp, #8]
 8012d7a:	edcd 0a01 	vstr	s1, [sp, #4]
 8012d7e:	f01e fa57 	bl	8031230 <sqrtf>
 8012d82:	eddd 1a03 	vldr	s3, [sp, #12]
 8012d86:	ed9d 1a02 	vldr	s2, [sp, #8]
 8012d8a:	eddd 0a01 	vldr	s1, [sp, #4]
 8012d8e:	e5e8      	b.n	8012962 <raster_stroked_line_+0x4a>
 8012d90:	20000064 	.word	0x20000064
 8012d94:	ff000100 	.word	0xff000100

08012d98 <render_arc.isra.6>:
 8012d98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012d9c:	ed2d 8b10 	vpush	{d8-d15}
 8012da0:	eddf 8aa8 	vldr	s17, [pc, #672]	@ 8013044 <render_arc.isra.6+0x2ac>
 8012da4:	ee20 aa28 	vmul.f32	s20, s0, s17
 8012da8:	ee60 8aa8 	vmul.f32	s17, s1, s17
 8012dac:	eeb5 0a00 	vmov.f32	s0, #80	@ 0x3e800000  0.250
 8012db0:	ee78 8aca 	vsub.f32	s17, s17, s20
 8012db4:	ee28 0a80 	vmul.f32	s0, s17, s0
 8012db8:	4604      	mov	r4, r0
 8012dba:	460d      	mov	r5, r1
 8012dbc:	eef0 ca41 	vmov.f32	s25, s2
 8012dc0:	eeb0 da61 	vmov.f32	s26, s3
 8012dc4:	eef0 da42 	vmov.f32	s27, s4
 8012dc8:	eeb0 ea62 	vmov.f32	s28, s5
 8012dcc:	ed9f 8a9e 	vldr	s16, [pc, #632]	@ 8013048 <render_arc.isra.6+0x2b0>
 8012dd0:	f01e fbb2 	bl	8031538 <tanf>
 8012dd4:	ee20 8a08 	vmul.f32	s16, s0, s16
 8012dd8:	eeb0 0a68 	vmov.f32	s0, s17
 8012ddc:	f01e fb1a 	bl	8031414 <cosf>
 8012de0:	eef0 9a40 	vmov.f32	s19, s0
 8012de4:	eeb0 0a68 	vmov.f32	s0, s17
 8012de8:	f01e fb60 	bl	80314ac <sinf>
 8012dec:	eddf 7a97 	vldr	s15, [pc, #604]	@ 801304c <render_arc.isra.6+0x2b4>
 8012df0:	ed94 7a09 	vldr	s14, [r4, #36]	@ 0x24
 8012df4:	ee87 9a27 	vdiv.f32	s18, s14, s15
 8012df8:	ed9f 7a95 	vldr	s14, [pc, #596]	@ 8013050 <render_arc.isra.6+0x2b8>
 8012dfc:	eeb0 ca40 	vmov.f32	s24, s0
 8012e00:	ee68 8a00 	vmul.f32	s17, s16, s0
 8012e04:	eeb0 0a4a 	vmov.f32	s0, s20
 8012e08:	ee29 9a07 	vmul.f32	s18, s18, s14
 8012e0c:	f01e fb02 	bl	8031414 <cosf>
 8012e10:	eeb0 ba40 	vmov.f32	s22, s0
 8012e14:	eeb0 0a4a 	vmov.f32	s0, s20
 8012e18:	f01e fb48 	bl	80314ac <sinf>
 8012e1c:	eef0 aa40 	vmov.f32	s21, s0
 8012e20:	eeb0 0a49 	vmov.f32	s0, s18
 8012e24:	f01e faf6 	bl	8031414 <cosf>
 8012e28:	ee68 ea29 	vmul.f32	s29, s16, s19
 8012e2c:	eeb0 aa40 	vmov.f32	s20, s0
 8012e30:	eeb0 0a49 	vmov.f32	s0, s18
 8012e34:	f01e fb3a 	bl	80314ac <sinf>
 8012e38:	07ea      	lsls	r2, r5, #31
 8012e3a:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8012e3e:	ee7c ea6e 	vsub.f32	s29, s24, s29
 8012e42:	f140 80c1 	bpl.w	8012fc8 <render_arc.isra.6+0x230>
 8012e46:	edd4 ba03 	vldr	s23, [r4, #12]
 8012e4a:	ed94 9a04 	vldr	s18, [r4, #16]
 8012e4e:	ee28 7a8b 	vmul.f32	s14, s17, s22
 8012e52:	ee68 6a2a 	vmul.f32	s13, s16, s21
 8012e56:	ee68 7aaa 	vmul.f32	s15, s17, s21
 8012e5a:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8012e5e:	ee6e 8aaa 	vmul.f32	s17, s29, s21
 8012e62:	ee6e ea8b 	vmul.f32	s29, s29, s22
 8012e66:	eddf 2a7b 	vldr	s5, [pc, #492]	@ 8013054 <render_arc.isra.6+0x2bc>
 8012e6a:	ee7b 6a66 	vsub.f32	s13, s22, s13
 8012e6e:	ee77 8a68 	vsub.f32	s17, s14, s17
 8012e72:	ee77 7aae 	vadd.f32	s15, s15, s29
 8012e76:	ee38 8a2a 	vadd.f32	s16, s16, s21
 8012e7a:	ee36 7aa2 	vadd.f32	s14, s13, s5
 8012e7e:	ee38 8a22 	vadd.f32	s16, s16, s5
 8012e82:	ee78 8aa2 	vadd.f32	s17, s17, s5
 8012e86:	ee77 7aa2 	vadd.f32	s15, s15, s5
 8012e8a:	ee27 7a2d 	vmul.f32	s14, s14, s27
 8012e8e:	ee28 8a0e 	vmul.f32	s16, s16, s28
 8012e92:	ee68 8aad 	vmul.f32	s17, s17, s27
 8012e96:	ee67 7a8e 	vmul.f32	s15, s15, s28
 8012e9a:	ee2a fa07 	vmul.f32	s30, s20, s14
 8012e9e:	ee20 6a08 	vmul.f32	s12, s0, s16
 8012ea2:	ee6a ea28 	vmul.f32	s29, s20, s17
 8012ea6:	ee60 6a27 	vmul.f32	s13, s0, s15
 8012eaa:	ee60 8a28 	vmul.f32	s17, s0, s17
 8012eae:	ee20 7a07 	vmul.f32	s14, s0, s14
 8012eb2:	ee2a 8a08 	vmul.f32	s16, s20, s16
 8012eb6:	ee6a 7a27 	vmul.f32	s15, s20, s15
 8012eba:	ee3f fa46 	vsub.f32	s30, s30, s12
 8012ebe:	ee37 8a08 	vadd.f32	s16, s14, s16
 8012ec2:	ee7e eae6 	vsub.f32	s29, s29, s13
 8012ec6:	ee78 7aa7 	vadd.f32	s15, s17, s15
 8012eca:	07ab      	lsls	r3, r5, #30
 8012ecc:	ee3f fa2c 	vadd.f32	s30, s30, s25
 8012ed0:	ee38 8a0d 	vadd.f32	s16, s16, s26
 8012ed4:	ee7e eaac 	vadd.f32	s29, s29, s25
 8012ed8:	ee77 8a8d 	vadd.f32	s17, s15, s26
 8012edc:	f100 809a 	bmi.w	8013014 <render_arc.isra.6+0x27c>
 8012ee0:	ee29 2a8b 	vmul.f32	s4, s19, s22
 8012ee4:	ee69 9aaa 	vmul.f32	s19, s19, s21
 8012ee8:	ee2c ba0b 	vmul.f32	s22, s24, s22
 8012eec:	ee6c aa2a 	vmul.f32	s21, s24, s21
 8012ef0:	ee39 ba8b 	vadd.f32	s22, s19, s22
 8012ef4:	ee72 aa6a 	vsub.f32	s21, s4, s21
 8012ef8:	ee7a aaa2 	vadd.f32	s21, s21, s5
 8012efc:	ee7b 2a22 	vadd.f32	s5, s22, s5
 8012f00:	ee6a daad 	vmul.f32	s27, s21, s27
 8012f04:	ee22 ea8e 	vmul.f32	s28, s5, s28
 8012f08:	ee2a 1a2d 	vmul.f32	s2, s20, s27
 8012f0c:	ee60 da2d 	vmul.f32	s27, s0, s27
 8012f10:	ee20 0a0e 	vmul.f32	s0, s0, s28
 8012f14:	ee2a ea0e 	vmul.f32	s28, s20, s28
 8012f18:	ee31 0a40 	vsub.f32	s0, s2, s0
 8012f1c:	ee3d ea8e 	vadd.f32	s28, s27, s28
 8012f20:	4b4d      	ldr	r3, [pc, #308]	@ (8013058 <render_arc.isra.6+0x2c0>)
 8012f22:	ee70 ca2c 	vadd.f32	s25, s0, s25
 8012f26:	681b      	ldr	r3, [r3, #0]
 8012f28:	ee3e da0d 	vadd.f32	s26, s28, s26
 8012f2c:	7f1a      	ldrb	r2, [r3, #28]
 8012f2e:	2a00      	cmp	r2, #0
 8012f30:	d179      	bne.n	8013026 <render_arc.isra.6+0x28e>
 8012f32:	4a4a      	ldr	r2, [pc, #296]	@ (801305c <render_arc.isra.6+0x2c4>)
 8012f34:	6814      	ldr	r4, [r2, #0]
 8012f36:	2c01      	cmp	r4, #1
 8012f38:	f000 8098 	beq.w	801306c <render_arc.isra.6+0x2d4>
 8012f3c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8012f3e:	2509      	movs	r5, #9
 8012f40:	2a00      	cmp	r2, #0
 8012f42:	d164      	bne.n	801300e <render_arc.isra.6+0x276>
 8012f44:	4946      	ldr	r1, [pc, #280]	@ (8013060 <render_arc.isra.6+0x2c8>)
 8012f46:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8012f48:	780b      	ldrb	r3, [r1, #0]
 8012f4a:	4014      	ands	r4, r2
 8012f4c:	2b01      	cmp	r3, #1
 8012f4e:	d103      	bne.n	8012f58 <render_arc.isra.6+0x1c0>
 8012f50:	684b      	ldr	r3, [r1, #4]
 8012f52:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8012f56:	431c      	orrs	r4, r3
 8012f58:	2009      	movs	r0, #9
 8012f5a:	f00a fee3 	bl	801dd24 <nema_cl_get_space>
 8012f5e:	b378      	cbz	r0, 8012fc0 <render_arc.isra.6+0x228>
 8012f60:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8012f64:	f44f 7948 	mov.w	r9, #800	@ 0x320
 8012f68:	f44f 7849 	mov.w	r8, #804	@ 0x324
 8012f6c:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8012f70:	f44f 7c50 	mov.w	ip, #832	@ 0x340
 8012f74:	f44f 7751 	mov.w	r7, #836	@ 0x344
 8012f78:	f44f 7654 	mov.w	r6, #848	@ 0x350
 8012f7c:	f44f 7155 	mov.w	r1, #852	@ 0x354
 8012f80:	edc0 ba01 	vstr	s23, [r0, #4]
 8012f84:	ed80 9a03 	vstr	s18, [r0, #12]
 8012f88:	ed80 fa05 	vstr	s30, [r0, #20]
 8012f8c:	ed80 8a07 	vstr	s16, [r0, #28]
 8012f90:	edc0 ea09 	vstr	s29, [r0, #36]	@ 0x24
 8012f94:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8012f98:	edc0 ca0d 	vstr	s25, [r0, #52]	@ 0x34
 8012f9c:	ed80 da0f 	vstr	s26, [r0, #60]	@ 0x3c
 8012fa0:	6183      	str	r3, [r0, #24]
 8012fa2:	4b30      	ldr	r3, [pc, #192]	@ (8013064 <render_arc.isra.6+0x2cc>)
 8012fa4:	432c      	orrs	r4, r5
 8012fa6:	6444      	str	r4, [r0, #68]	@ 0x44
 8012fa8:	f8c0 9000 	str.w	r9, [r0]
 8012fac:	f8c0 8008 	str.w	r8, [r0, #8]
 8012fb0:	f8c0 e010 	str.w	lr, [r0, #16]
 8012fb4:	f8c0 c020 	str.w	ip, [r0, #32]
 8012fb8:	6287      	str	r7, [r0, #40]	@ 0x28
 8012fba:	6306      	str	r6, [r0, #48]	@ 0x30
 8012fbc:	6381      	str	r1, [r0, #56]	@ 0x38
 8012fbe:	6403      	str	r3, [r0, #64]	@ 0x40
 8012fc0:	ecbd 8b10 	vpop	{d8-d15}
 8012fc4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012fc8:	ed9f 9a22 	vldr	s18, [pc, #136]	@ 8013054 <render_arc.isra.6+0x2bc>
 8012fcc:	ee2a 7a89 	vmul.f32	s14, s21, s18
 8012fd0:	ee6b 7a09 	vmul.f32	s15, s22, s18
 8012fd4:	ee3b 7a47 	vsub.f32	s14, s22, s14
 8012fd8:	ee77 7aaa 	vadd.f32	s15, s15, s21
 8012fdc:	ee37 7a09 	vadd.f32	s14, s14, s18
 8012fe0:	ee77 7a89 	vadd.f32	s15, s15, s18
 8012fe4:	ee27 7a2d 	vmul.f32	s14, s14, s27
 8012fe8:	ee67 7a8e 	vmul.f32	s15, s15, s28
 8012fec:	ee6a ba07 	vmul.f32	s23, s20, s14
 8012ff0:	ee20 9a07 	vmul.f32	s18, s0, s14
 8012ff4:	ee20 7a27 	vmul.f32	s14, s0, s15
 8012ff8:	ee6a 7a27 	vmul.f32	s15, s20, s15
 8012ffc:	ee7b bac7 	vsub.f32	s23, s23, s14
 8013000:	ee39 9a27 	vadd.f32	s18, s18, s15
 8013004:	ee7b baac 	vadd.f32	s23, s23, s25
 8013008:	ee39 9a0d 	vadd.f32	s18, s18, s26
 801300c:	e71f      	b.n	8012e4e <render_arc.isra.6+0xb6>
 801300e:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8013012:	e797      	b.n	8012f44 <render_arc.isra.6+0x1ac>
 8013014:	4b10      	ldr	r3, [pc, #64]	@ (8013058 <render_arc.isra.6+0x2c0>)
 8013016:	edd4 ca05 	vldr	s25, [r4, #20]
 801301a:	681b      	ldr	r3, [r3, #0]
 801301c:	ed94 da06 	vldr	s26, [r4, #24]
 8013020:	7f1a      	ldrb	r2, [r3, #28]
 8013022:	2a00      	cmp	r2, #0
 8013024:	d085      	beq.n	8012f32 <render_arc.isra.6+0x19a>
 8013026:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013028:	b90a      	cbnz	r2, 801302e <render_arc.isra.6+0x296>
 801302a:	2507      	movs	r5, #7
 801302c:	e78a      	b.n	8012f44 <render_arc.isra.6+0x1ac>
 801302e:	4a0e      	ldr	r2, [pc, #56]	@ (8013068 <render_arc.isra.6+0x2d0>)
 8013030:	2507      	movs	r5, #7
 8013032:	6812      	ldr	r2, [r2, #0]
 8013034:	2a00      	cmp	r2, #0
 8013036:	bf0c      	ite	eq
 8013038:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 801303c:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8013040:	e780      	b.n	8012f44 <render_arc.isra.6+0x1ac>
 8013042:	bf00      	nop
 8013044:	3c8efa35 	.word	0x3c8efa35
 8013048:	3faaaaab 	.word	0x3faaaaab
 801304c:	43340000 	.word	0x43340000
 8013050:	40490fdb 	.word	0x40490fdb
 8013054:	00000000 	.word	0x00000000
 8013058:	20082fac 	.word	0x20082fac
 801305c:	20082fb4 	.word	0x20082fb4
 8013060:	20000064 	.word	0x20000064
 8013064:	ff000100 	.word	0xff000100
 8013068:	20082fb0 	.word	0x20082fb0
 801306c:	4626      	mov	r6, r4
 801306e:	eef6 9a00 	vmov.f32	s19, #96	@ 0x3f000000  0.5
 8013072:	4d57      	ldr	r5, [pc, #348]	@ (80131d0 <render_arc.isra.6+0x438>)
 8013074:	4f57      	ldr	r7, [pc, #348]	@ (80131d4 <render_arc.isra.6+0x43c>)
 8013076:	ee7b 4a8f 	vadd.f32	s9, s23, s30
 801307a:	ee7f 7a2e 	vadd.f32	s15, s30, s29
 801307e:	ee3e 5aac 	vadd.f32	s10, s29, s25
 8013082:	ee67 7aa9 	vmul.f32	s15, s15, s19
 8013086:	ee64 4aa9 	vmul.f32	s9, s9, s19
 801308a:	ee25 5a29 	vmul.f32	s10, s10, s19
 801308e:	ee74 3aa7 	vadd.f32	s7, s9, s15
 8013092:	ee37 6a85 	vadd.f32	s12, s15, s10
 8013096:	ee39 4a08 	vadd.f32	s8, s18, s16
 801309a:	ee78 7a28 	vadd.f32	s15, s16, s17
 801309e:	ee78 5a8d 	vadd.f32	s11, s17, s26
 80130a2:	ee67 7aa9 	vmul.f32	s15, s15, s19
 80130a6:	ee24 4a29 	vmul.f32	s8, s8, s19
 80130aa:	ee65 5aa9 	vmul.f32	s11, s11, s19
 80130ae:	ee34 3a27 	vadd.f32	s6, s8, s15
 80130b2:	ee63 3aa9 	vmul.f32	s7, s7, s19
 80130b6:	ee26 6a29 	vmul.f32	s12, s12, s19
 80130ba:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80130be:	ee33 aa86 	vadd.f32	s20, s7, s12
 80130c2:	ee3b 7aac 	vadd.f32	s14, s23, s25
 80130c6:	ee23 3a29 	vmul.f32	s6, s6, s19
 80130ca:	ee67 7aa9 	vmul.f32	s15, s15, s19
 80130ce:	ee2a aa29 	vmul.f32	s20, s20, s19
 80130d2:	ee27 7a29 	vmul.f32	s14, s14, s19
 80130d6:	ee73 aa27 	vadd.f32	s21, s6, s15
 80130da:	ee79 6a0d 	vadd.f32	s13, s18, s26
 80130de:	ee37 7a4a 	vsub.f32	s14, s14, s20
 80130e2:	ee6a aaa9 	vmul.f32	s21, s21, s19
 80130e6:	ee66 6aa9 	vmul.f32	s13, s13, s19
 80130ea:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80130ee:	ee76 6aea 	vsub.f32	s13, s13, s21
 80130f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80130f6:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80130fa:	bf48      	it	mi
 80130fc:	eeb1 7a47 	vnegmi.f32	s14, s14
 8013100:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013104:	bf48      	it	mi
 8013106:	eef1 6a66 	vnegmi.f32	s13, s13
 801310a:	b94e      	cbnz	r6, 8013120 <render_arc.isra.6+0x388>
 801310c:	eeb4 7ae9 	vcmpe.f32	s14, s19
 8013110:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013114:	d504      	bpl.n	8013120 <render_arc.isra.6+0x388>
 8013116:	eef4 6ae9 	vcmpe.f32	s13, s19
 801311a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801311e:	d423      	bmi.n	8013168 <render_arc.isra.6+0x3d0>
 8013120:	682a      	ldr	r2, [r5, #0]
 8013122:	2a09      	cmp	r2, #9
 8013124:	dc20      	bgt.n	8013168 <render_arc.isra.6+0x3d0>
 8013126:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801312a:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
 801312e:	3201      	adds	r2, #1
 8013130:	edc3 ca04 	vstr	s25, [r3, #16]
 8013134:	ed83 da05 	vstr	s26, [r3, #20]
 8013138:	3401      	adds	r4, #1
 801313a:	eef0 8a43 	vmov.f32	s17, s6
 801313e:	eef0 ea63 	vmov.f32	s29, s7
 8013142:	eeb0 8a44 	vmov.f32	s16, s8
 8013146:	eeb0 fa64 	vmov.f32	s30, s9
 801314a:	ed83 6a00 	vstr	s12, [r3]
 801314e:	edc3 7a01 	vstr	s15, [r3, #4]
 8013152:	ed83 5a02 	vstr	s10, [r3, #8]
 8013156:	edc3 5a03 	vstr	s11, [r3, #12]
 801315a:	602a      	str	r2, [r5, #0]
 801315c:	eeb0 da6a 	vmov.f32	s26, s21
 8013160:	eef0 ca4a 	vmov.f32	s25, s20
 8013164:	2600      	movs	r6, #0
 8013166:	e786      	b.n	8013076 <render_arc.isra.6+0x2de>
 8013168:	eef0 1a6a 	vmov.f32	s3, s21
 801316c:	eeb0 1a4a 	vmov.f32	s2, s20
 8013170:	eef0 0a49 	vmov.f32	s1, s18
 8013174:	eeb0 0a6b 	vmov.f32	s0, s23
 8013178:	f7ff fbce 	bl	8012918 <raster_stroked_line_>
 801317c:	eef0 1a4d 	vmov.f32	s3, s26
 8013180:	eeb0 1a6c 	vmov.f32	s2, s25
 8013184:	eef0 0a6a 	vmov.f32	s1, s21
 8013188:	eeb0 0a4a 	vmov.f32	s0, s20
 801318c:	f7ff fbc4 	bl	8012918 <raster_stroked_line_>
 8013190:	682b      	ldr	r3, [r5, #0]
 8013192:	3c01      	subs	r4, #1
 8013194:	b1ab      	cbz	r3, 80131c2 <render_arc.isra.6+0x42a>
 8013196:	3b01      	subs	r3, #1
 8013198:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801319c:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 80131a0:	eeb0 9a4d 	vmov.f32	s18, s26
 80131a4:	eef0 ba6c 	vmov.f32	s23, s25
 80131a8:	ed92 fa00 	vldr	s30, [r2]
 80131ac:	ed92 8a01 	vldr	s16, [r2, #4]
 80131b0:	edd2 ea02 	vldr	s29, [r2, #8]
 80131b4:	edd2 8a03 	vldr	s17, [r2, #12]
 80131b8:	ed92 da05 	vldr	s26, [r2, #20]
 80131bc:	edd2 ca04 	vldr	s25, [r2, #16]
 80131c0:	602b      	str	r3, [r5, #0]
 80131c2:	2c00      	cmp	r4, #0
 80131c4:	f47f af57 	bne.w	8013076 <render_arc.isra.6+0x2de>
 80131c8:	ecbd 8b10 	vpop	{d8-d15}
 80131cc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80131d0:	20083148 	.word	0x20083148
 80131d4:	20083058 	.word	0x20083058

080131d8 <fill_arc.isra.7>:
 80131d8:	b570      	push	{r4, r5, r6, lr}
 80131da:	ed2d 8b10 	vpush	{d8-d15}
 80131de:	ed90 8a07 	vldr	s16, [r0, #28]
 80131e2:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80131e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131ea:	b082      	sub	sp, #8
 80131ec:	4604      	mov	r4, r0
 80131ee:	d42a      	bmi.n	8013246 <fill_arc.isra.7+0x6e>
 80131f0:	eddf 7adf 	vldr	s15, [pc, #892]	@ 8013570 <fill_arc.isra.7+0x398>
 80131f4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80131f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131fc:	d92a      	bls.n	8013254 <fill_arc.isra.7+0x7c>
 80131fe:	edd4 9a08 	vldr	s19, [r4, #32]
 8013202:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 8013206:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801320a:	d47a      	bmi.n	8013302 <fill_arc.isra.7+0x12a>
 801320c:	eddf 7ad8 	vldr	s15, [pc, #864]	@ 8013570 <fill_arc.isra.7+0x398>
 8013210:	eef4 9ae7 	vcmpe.f32	s19, s15
 8013214:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013218:	d91c      	bls.n	8013254 <fill_arc.isra.7+0x7c>
 801321a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801321e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013222:	edd4 aa09 	vldr	s21, [r4, #36]	@ 0x24
 8013226:	edd4 ba0d 	vldr	s23, [r4, #52]	@ 0x34
 801322a:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 801322e:	edd4 8a0b 	vldr	s17, [r4, #44]	@ 0x2c
 8013232:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 8013236:	f100 81b5 	bmi.w	80135a4 <fill_arc.isra.7+0x3cc>
 801323a:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 801323e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013242:	d577      	bpl.n	8013334 <fill_arc.isra.7+0x15c>
 8013244:	e074      	b.n	8013330 <fill_arc.isra.7+0x158>
 8013246:	eddf 7acb 	vldr	s15, [pc, #812]	@ 8013574 <fill_arc.isra.7+0x39c>
 801324a:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801324e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013252:	dbd4      	blt.n	80131fe <fill_arc.isra.7+0x26>
 8013254:	4bc8      	ldr	r3, [pc, #800]	@ (8013578 <fill_arc.isra.7+0x3a0>)
 8013256:	edd4 9a03 	vldr	s19, [r4, #12]
 801325a:	681a      	ldr	r2, [r3, #0]
 801325c:	ed94 9a04 	vldr	s18, [r4, #16]
 8013260:	7f15      	ldrb	r5, [r2, #28]
 8013262:	edd4 8a05 	vldr	s17, [r4, #20]
 8013266:	ed94 8a06 	vldr	s16, [r4, #24]
 801326a:	2d00      	cmp	r5, #0
 801326c:	d035      	beq.n	80132da <fill_arc.isra.7+0x102>
 801326e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8013270:	b13b      	cbz	r3, 8013282 <fill_arc.isra.7+0xaa>
 8013272:	4bc2      	ldr	r3, [pc, #776]	@ (801357c <fill_arc.isra.7+0x3a4>)
 8013274:	681b      	ldr	r3, [r3, #0]
 8013276:	2b00      	cmp	r3, #0
 8013278:	bf14      	ite	ne
 801327a:	f04f 6380 	movne.w	r3, #67108864	@ 0x4000000
 801327e:	f04f 63f0 	moveq.w	r3, #125829120	@ 0x7800000
 8013282:	49bf      	ldr	r1, [pc, #764]	@ (8013580 <fill_arc.isra.7+0x3a8>)
 8013284:	6ad4      	ldr	r4, [r2, #44]	@ 0x2c
 8013286:	780a      	ldrb	r2, [r1, #0]
 8013288:	401c      	ands	r4, r3
 801328a:	2a01      	cmp	r2, #1
 801328c:	d103      	bne.n	8013296 <fill_arc.isra.7+0xbe>
 801328e:	684b      	ldr	r3, [r1, #4]
 8013290:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013294:	431c      	orrs	r4, r3
 8013296:	2005      	movs	r0, #5
 8013298:	f00a fd44 	bl	801dd24 <nema_cl_get_space>
 801329c:	b1c0      	cbz	r0, 80132d0 <fill_arc.isra.7+0xf8>
 801329e:	f44f 7648 	mov.w	r6, #800	@ 0x320
 80132a2:	f44f 7549 	mov.w	r5, #804	@ 0x324
 80132a6:	f44f 714c 	mov.w	r1, #816	@ 0x330
 80132aa:	f44f 724d 	mov.w	r2, #820	@ 0x334
 80132ae:	f044 040b 	orr.w	r4, r4, #11
 80132b2:	edc0 9a01 	vstr	s19, [r0, #4]
 80132b6:	ed80 9a03 	vstr	s18, [r0, #12]
 80132ba:	edc0 8a05 	vstr	s17, [r0, #20]
 80132be:	ed80 8a07 	vstr	s16, [r0, #28]
 80132c2:	4bb0      	ldr	r3, [pc, #704]	@ (8013584 <fill_arc.isra.7+0x3ac>)
 80132c4:	6244      	str	r4, [r0, #36]	@ 0x24
 80132c6:	6006      	str	r6, [r0, #0]
 80132c8:	6085      	str	r5, [r0, #8]
 80132ca:	6101      	str	r1, [r0, #16]
 80132cc:	6182      	str	r2, [r0, #24]
 80132ce:	6203      	str	r3, [r0, #32]
 80132d0:	2000      	movs	r0, #0
 80132d2:	b002      	add	sp, #8
 80132d4:	ecbd 8b10 	vpop	{d8-d15}
 80132d8:	bd70      	pop	{r4, r5, r6, pc}
 80132da:	4bab      	ldr	r3, [pc, #684]	@ (8013588 <fill_arc.isra.7+0x3b0>)
 80132dc:	681b      	ldr	r3, [r3, #0]
 80132de:	2b00      	cmp	r3, #0
 80132e0:	f000 8115 	beq.w	801350e <fill_arc.isra.7+0x336>
 80132e4:	eef0 1a48 	vmov.f32	s3, s16
 80132e8:	eeb0 1a68 	vmov.f32	s2, s17
 80132ec:	eef0 0a49 	vmov.f32	s1, s18
 80132f0:	eeb0 0a69 	vmov.f32	s0, s19
 80132f4:	f7ff fb10 	bl	8012918 <raster_stroked_line_>
 80132f8:	4628      	mov	r0, r5
 80132fa:	b002      	add	sp, #8
 80132fc:	ecbd 8b10 	vpop	{d8-d15}
 8013300:	bd70      	pop	{r4, r5, r6, pc}
 8013302:	eddf 7a9c 	vldr	s15, [pc, #624]	@ 8013574 <fill_arc.isra.7+0x39c>
 8013306:	eef4 9ae7 	vcmpe.f32	s19, s15
 801330a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801330e:	daa1      	bge.n	8013254 <fill_arc.isra.7+0x7c>
 8013310:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8013314:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013318:	edd4 aa09 	vldr	s21, [r4, #36]	@ 0x24
 801331c:	edd4 ba0d 	vldr	s23, [r4, #52]	@ 0x34
 8013320:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 8013324:	edd4 8a0b 	vldr	s17, [r4, #44]	@ 0x2c
 8013328:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 801332c:	f100 813a 	bmi.w	80135a4 <fill_arc.isra.7+0x3cc>
 8013330:	eef1 9a69 	vneg.f32	s19, s19
 8013334:	eddf 7a95 	vldr	s15, [pc, #596]	@ 801358c <fill_arc.isra.7+0x3b4>
 8013338:	ee6a aaa7 	vmul.f32	s21, s21, s15
 801333c:	eeb0 0a6a 	vmov.f32	s0, s21
 8013340:	f01e f868 	bl	8031414 <cosf>
 8013344:	eeb0 ca40 	vmov.f32	s24, s0
 8013348:	eeb0 0a6a 	vmov.f32	s0, s21
 801334c:	f01e f8ae 	bl	80314ac <sinf>
 8013350:	ee6c aa28 	vmul.f32	s21, s24, s17
 8013354:	ee20 7a0a 	vmul.f32	s14, s0, s20
 8013358:	ee60 7a09 	vmul.f32	s15, s0, s18
 801335c:	ee6c 6a2b 	vmul.f32	s13, s24, s23
 8013360:	ee68 8ac0 	vnmul.f32	s17, s17, s0
 8013364:	ee6b bac0 	vnmul.f32	s23, s23, s0
 8013368:	ee2c aa0a 	vmul.f32	s20, s24, s20
 801336c:	ee2c 9a09 	vmul.f32	s18, s24, s18
 8013370:	ee76 fa87 	vadd.f32	s31, s13, s14
 8013374:	ee3b aa8a 	vadd.f32	s20, s23, s20
 8013378:	ee7a aaa7 	vadd.f32	s21, s21, s15
 801337c:	ee78 8a89 	vadd.f32	s17, s17, s18
 8013380:	ee8f da88 	vdiv.f32	s26, s31, s16
 8013384:	ee8a ea88 	vdiv.f32	s28, s21, s16
 8013388:	eeca ca29 	vdiv.f32	s25, s20, s19
 801338c:	eec8 daa9 	vdiv.f32	s27, s17, s19
 8013390:	ee7d ba4e 	vsub.f32	s23, s26, s28
 8013394:	ee7c eaed 	vsub.f32	s29, s25, s27
 8013398:	eeb0 ba40 	vmov.f32	s22, s0
 801339c:	ee6b 7aab 	vmul.f32	s15, s23, s23
 80133a0:	ee2e 0aae 	vmul.f32	s0, s29, s29
 80133a4:	ee77 7a80 	vadd.f32	s15, s15, s0
 80133a8:	eef5 7a40 	vcmp.f32	s15, #0.0
 80133ac:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80133b0:	ee3d 6a0e 	vadd.f32	s12, s26, s28
 80133b4:	ee7c 6aad 	vadd.f32	s13, s25, s27
 80133b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133bc:	ee26 fa07 	vmul.f32	s30, s12, s14
 80133c0:	ee26 7a87 	vmul.f32	s14, s13, s14
 80133c4:	f000 8117 	beq.w	80135f6 <fill_arc.isra.7+0x41e>
 80133c8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80133cc:	eef5 5a00 	vmov.f32	s11, #80	@ 0x3e800000  0.250
 80133d0:	ee86 0aa7 	vdiv.f32	s0, s13, s15
 80133d4:	ee30 0a65 	vsub.f32	s0, s0, s11
 80133d8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80133dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133e0:	78e5      	ldrb	r5, [r4, #3]
 80133e2:	f100 814f 	bmi.w	8013684 <fill_arc.isra.7+0x4ac>
 80133e6:	eeb5 0a40 	vcmp.f32	s0, #0.0
 80133ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133ee:	eef1 8ac0 	vsqrt.f32	s17, s0
 80133f2:	f100 8174 	bmi.w	80136de <fill_arc.isra.7+0x506>
 80133f6:	ee68 baab 	vmul.f32	s23, s17, s23
 80133fa:	ee68 eaae 	vmul.f32	s29, s17, s29
 80133fe:	ee77 aa6b 	vsub.f32	s21, s14, s23
 8013402:	ee3f aa2e 	vadd.f32	s20, s30, s29
 8013406:	ee3c 0aea 	vsub.f32	s0, s25, s21
 801340a:	ee7d 0a4a 	vsub.f32	s1, s26, s20
 801340e:	ed8d 7a01 	vstr	s14, [sp, #4]
 8013412:	f01d feeb 	bl	80311ec <atan2f>
 8013416:	ee7e 0a4a 	vsub.f32	s1, s28, s20
 801341a:	eeb0 9a40 	vmov.f32	s18, s0
 801341e:	ee3d 0aea 	vsub.f32	s0, s27, s21
 8013422:	f01d fee3 	bl	80311ec <atan2f>
 8013426:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8013598 <fill_arc.isra.7+0x3c0>
 801342a:	ee60 8a27 	vmul.f32	s17, s0, s15
 801342e:	ee29 9a27 	vmul.f32	s18, s18, s15
 8013432:	ee78 7ac9 	vsub.f32	s15, s17, s18
 8013436:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801343a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801343e:	bf48      	it	mi
 8013440:	eddf 6a53 	vldrmi	s13, [pc, #332]	@ 8013590 <fill_arc.isra.7+0x3b8>
 8013444:	eddf 5a53 	vldr	s11, [pc, #332]	@ 8013594 <fill_arc.isra.7+0x3bc>
 8013448:	bf48      	it	mi
 801344a:	ee77 7aa6 	vaddmi.f32	s15, s15, s13
 801344e:	eef4 7ae5 	vcmpe.f32	s15, s11
 8013452:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013456:	f005 0640 	and.w	r6, r5, #64	@ 0x40
 801345a:	f3c5 1380 	ubfx	r3, r5, #6, #1
 801345e:	ed9d 7a01 	vldr	s14, [sp, #4]
 8013462:	f3c5 1540 	ubfx	r5, r5, #5, #1
 8013466:	f140 80ab 	bpl.w	80135c0 <fill_arc.isra.7+0x3e8>
 801346a:	429d      	cmp	r5, r3
 801346c:	f000 8130 	beq.w	80136d0 <fill_arc.isra.7+0x4f8>
 8013470:	ee28 aa0a 	vmul.f32	s20, s16, s20
 8013474:	ee69 aaaa 	vmul.f32	s21, s19, s21
 8013478:	ee6c 7a0a 	vmul.f32	s15, s24, s20
 801347c:	ee2b aa0a 	vmul.f32	s20, s22, s20
 8013480:	ee2b ba2a 	vmul.f32	s22, s22, s21
 8013484:	ee6c aa2a 	vmul.f32	s21, s24, s21
 8013488:	ee37 bacb 	vsub.f32	s22, s15, s22
 801348c:	ee7a aa2a 	vadd.f32	s21, s20, s21
 8013490:	eeb4 9ae8 	vcmpe.f32	s18, s17
 8013494:	2e00      	cmp	r6, #0
 8013496:	f000 8088 	beq.w	80135aa <fill_arc.isra.7+0x3d2>
 801349a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801349e:	dd03      	ble.n	80134a8 <fill_arc.isra.7+0x2d0>
 80134a0:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 8013590 <fill_arc.isra.7+0x3b8>
 80134a4:	ee78 8aa7 	vadd.f32	s17, s17, s15
 80134a8:	2e00      	cmp	r6, #0
 80134aa:	f040 80ab 	bne.w	8013604 <fill_arc.isra.7+0x42c>
 80134ae:	eef4 8ac9 	vcmpe.f32	s17, s18
 80134b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134b6:	f77f af0b 	ble.w	80132d0 <fill_arc.isra.7+0xf8>
 80134ba:	2101      	movs	r1, #1
 80134bc:	eddf ba37 	vldr	s23, [pc, #220]	@ 801359c <fill_arc.isra.7+0x3c4>
 80134c0:	e01a      	b.n	80134f8 <fill_arc.isra.7+0x320>
 80134c2:	eef0 0a49 	vmov.f32	s1, s18
 80134c6:	d801      	bhi.n	80134cc <fill_arc.isra.7+0x2f4>
 80134c8:	3102      	adds	r1, #2
 80134ca:	b2c9      	uxtb	r1, r1
 80134cc:	eeb0 0a68 	vmov.f32	s0, s17
 80134d0:	eef0 2a69 	vmov.f32	s5, s19
 80134d4:	eeb0 2a48 	vmov.f32	s4, s16
 80134d8:	eef0 1a6a 	vmov.f32	s3, s21
 80134dc:	eeb0 1a4b 	vmov.f32	s2, s22
 80134e0:	4620      	mov	r0, r4
 80134e2:	f7ff fc59 	bl	8012d98 <render_arc.isra.6>
 80134e6:	eeb4 aac9 	vcmpe.f32	s20, s18
 80134ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134ee:	f77f aeef 	ble.w	80132d0 <fill_arc.isra.7+0xf8>
 80134f2:	eef0 8a4a 	vmov.f32	s17, s20
 80134f6:	2100      	movs	r1, #0
 80134f8:	ee38 aaeb 	vsub.f32	s20, s17, s23
 80134fc:	eeb4 aac9 	vcmpe.f32	s20, s18
 8013500:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013504:	dddd      	ble.n	80134c2 <fill_arc.isra.7+0x2ea>
 8013506:	d822      	bhi.n	801354e <fill_arc.isra.7+0x376>
 8013508:	eef0 0a4a 	vmov.f32	s1, s20
 801350c:	e7dc      	b.n	80134c8 <fill_arc.isra.7+0x2f0>
 801350e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8013510:	491b      	ldr	r1, [pc, #108]	@ (8013580 <fill_arc.isra.7+0x3a8>)
 8013512:	2b00      	cmp	r3, #0
 8013514:	bf18      	it	ne
 8013516:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 801351a:	6ad4      	ldr	r4, [r2, #44]	@ 0x2c
 801351c:	780a      	ldrb	r2, [r1, #0]
 801351e:	401c      	ands	r4, r3
 8013520:	2a01      	cmp	r2, #1
 8013522:	d103      	bne.n	801352c <fill_arc.isra.7+0x354>
 8013524:	684b      	ldr	r3, [r1, #4]
 8013526:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801352a:	431c      	orrs	r4, r3
 801352c:	2005      	movs	r0, #5
 801352e:	f00a fbf9 	bl	801dd24 <nema_cl_get_space>
 8013532:	2800      	cmp	r0, #0
 8013534:	f43f aecc 	beq.w	80132d0 <fill_arc.isra.7+0xf8>
 8013538:	f44f 7648 	mov.w	r6, #800	@ 0x320
 801353c:	f44f 7549 	mov.w	r5, #804	@ 0x324
 8013540:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8013544:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8013548:	f044 040a 	orr.w	r4, r4, #10
 801354c:	e6b1      	b.n	80132b2 <fill_arc.isra.7+0xda>
 801354e:	eeb0 0a68 	vmov.f32	s0, s17
 8013552:	eef0 2a69 	vmov.f32	s5, s19
 8013556:	eeb0 2a48 	vmov.f32	s4, s16
 801355a:	eef0 1a6a 	vmov.f32	s3, s21
 801355e:	eeb0 1a4b 	vmov.f32	s2, s22
 8013562:	eef0 0a4a 	vmov.f32	s1, s20
 8013566:	4620      	mov	r0, r4
 8013568:	f7ff fc16 	bl	8012d98 <render_arc.isra.6>
 801356c:	e7c1      	b.n	80134f2 <fill_arc.isra.7+0x31a>
 801356e:	bf00      	nop
 8013570:	3727c5ac 	.word	0x3727c5ac
 8013574:	b727c5ac 	.word	0xb727c5ac
 8013578:	20082fac 	.word	0x20082fac
 801357c:	20082fb0 	.word	0x20082fb0
 8013580:	20000064 	.word	0x20000064
 8013584:	ff000100 	.word	0xff000100
 8013588:	20082fb4 	.word	0x20082fb4
 801358c:	3c8efa35 	.word	0x3c8efa35
 8013590:	43b40000 	.word	0x43b40000
 8013594:	43340000 	.word	0x43340000
 8013598:	42652ee1 	.word	0x42652ee1
 801359c:	42b40000 	.word	0x42b40000
 80135a0:	00000000 	.word	0x00000000
 80135a4:	eeb1 8a48 	vneg.f32	s16, s16
 80135a8:	e647      	b.n	801323a <fill_arc.isra.7+0x62>
 80135aa:	eef0 7a49 	vmov.f32	s15, s18
 80135ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80135b2:	eeb0 9a68 	vmov.f32	s18, s17
 80135b6:	eef0 8a67 	vmov.f32	s17, s15
 80135ba:	f53f af71 	bmi.w	80134a0 <fill_arc.isra.7+0x2c8>
 80135be:	e776      	b.n	80134ae <fill_arc.isra.7+0x2d6>
 80135c0:	db02      	blt.n	80135c8 <fill_arc.isra.7+0x3f0>
 80135c2:	429d      	cmp	r5, r3
 80135c4:	f43f af54 	beq.w	8013470 <fill_arc.isra.7+0x298>
 80135c8:	ee77 aa2b 	vadd.f32	s21, s14, s23
 80135cc:	ee3f aa6e 	vsub.f32	s20, s30, s29
 80135d0:	ee3c 0aea 	vsub.f32	s0, s25, s21
 80135d4:	ee7d 0a4a 	vsub.f32	s1, s26, s20
 80135d8:	f01d fe08 	bl	80311ec <atan2f>
 80135dc:	ed5f 8a12 	vldr	s17, [pc, #-72]	@ 8013598 <fill_arc.isra.7+0x3c0>
 80135e0:	ee7e 0a4a 	vsub.f32	s1, s28, s20
 80135e4:	ee20 9a28 	vmul.f32	s18, s0, s17
 80135e8:	ee3d 0aea 	vsub.f32	s0, s27, s21
 80135ec:	f01d fdfe 	bl	80311ec <atan2f>
 80135f0:	ee60 8a28 	vmul.f32	s17, s0, s17
 80135f4:	e73c      	b.n	8013470 <fill_arc.isra.7+0x298>
 80135f6:	f44f 7080 	mov.w	r0, #256	@ 0x100
 80135fa:	f009 fa3b 	bl	801ca74 <nema_vg_set_error>
 80135fe:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8013602:	e666      	b.n	80132d2 <fill_arc.isra.7+0xfa>
 8013604:	eeb4 9ae8 	vcmpe.f32	s18, s17
 8013608:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801360c:	f57f ae60 	bpl.w	80132d0 <fill_arc.isra.7+0xf8>
 8013610:	2101      	movs	r1, #1
 8013612:	ed5f ba1e 	vldr	s23, [pc, #-120]	@ 801359c <fill_arc.isra.7+0x3c4>
 8013616:	e01a      	b.n	801364e <fill_arc.isra.7+0x476>
 8013618:	eef0 0a68 	vmov.f32	s1, s17
 801361c:	db01      	blt.n	8013622 <fill_arc.isra.7+0x44a>
 801361e:	3102      	adds	r1, #2
 8013620:	b2c9      	uxtb	r1, r1
 8013622:	eeb0 0a49 	vmov.f32	s0, s18
 8013626:	eef0 2a69 	vmov.f32	s5, s19
 801362a:	eeb0 2a48 	vmov.f32	s4, s16
 801362e:	eef0 1a6a 	vmov.f32	s3, s21
 8013632:	eeb0 1a4b 	vmov.f32	s2, s22
 8013636:	4620      	mov	r0, r4
 8013638:	f7ff fbae 	bl	8012d98 <render_arc.isra.6>
 801363c:	eeb4 aae8 	vcmpe.f32	s20, s17
 8013640:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013644:	f57f ae44 	bpl.w	80132d0 <fill_arc.isra.7+0xf8>
 8013648:	eeb0 9a4a 	vmov.f32	s18, s20
 801364c:	2100      	movs	r1, #0
 801364e:	ee39 aa2b 	vadd.f32	s20, s18, s23
 8013652:	eeb4 aae8 	vcmpe.f32	s20, s17
 8013656:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801365a:	d5dd      	bpl.n	8013618 <fill_arc.isra.7+0x440>
 801365c:	db02      	blt.n	8013664 <fill_arc.isra.7+0x48c>
 801365e:	eef0 0a4a 	vmov.f32	s1, s20
 8013662:	e7dc      	b.n	801361e <fill_arc.isra.7+0x446>
 8013664:	eeb0 0a49 	vmov.f32	s0, s18
 8013668:	eef0 2a69 	vmov.f32	s5, s19
 801366c:	eeb0 2a48 	vmov.f32	s4, s16
 8013670:	eef0 1a6a 	vmov.f32	s3, s21
 8013674:	eeb0 1a4b 	vmov.f32	s2, s22
 8013678:	eef0 0a4a 	vmov.f32	s1, s20
 801367c:	4620      	mov	r0, r4
 801367e:	f7ff fb8b 	bl	8012d98 <render_arc.isra.6>
 8013682:	e7e1      	b.n	8013648 <fill_arc.isra.7+0x470>
 8013684:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8013688:	eef5 7a40 	vcmp.f32	s15, #0.0
 801368c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013690:	eeb1 9ae7 	vsqrt.f32	s18, s15
 8013694:	d42a      	bmi.n	80136ec <fill_arc.isra.7+0x514>
 8013696:	ee28 8a09 	vmul.f32	s16, s16, s18
 801369a:	ee69 9a89 	vmul.f32	s19, s19, s18
 801369e:	ee8f da88 	vdiv.f32	s26, s31, s16
 80136a2:	eec8 daa9 	vdiv.f32	s27, s17, s19
 80136a6:	ee8a ea88 	vdiv.f32	s28, s21, s16
 80136aa:	eeca ca29 	vdiv.f32	s25, s20, s19
 80136ae:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80136b2:	ee3d 6a0e 	vadd.f32	s12, s26, s28
 80136b6:	ee3c 7aad 	vadd.f32	s14, s25, s27
 80136ba:	ee26 fa27 	vmul.f32	s30, s12, s15
 80136be:	ee27 7a27 	vmul.f32	s14, s14, s15
 80136c2:	ee7d ba4e 	vsub.f32	s23, s26, s28
 80136c6:	ee7c eaed 	vsub.f32	s29, s25, s27
 80136ca:	ed5f 8a4b 	vldr	s17, [pc, #-300]	@ 80135a0 <fill_arc.isra.7+0x3c8>
 80136ce:	e692      	b.n	80133f6 <fill_arc.isra.7+0x21e>
 80136d0:	eef4 7ae5 	vcmpe.f32	s15, s11
 80136d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136d8:	f6bf aeca 	bge.w	8013470 <fill_arc.isra.7+0x298>
 80136dc:	e774      	b.n	80135c8 <fill_arc.isra.7+0x3f0>
 80136de:	ed8d 7a01 	vstr	s14, [sp, #4]
 80136e2:	f01d fda5 	bl	8031230 <sqrtf>
 80136e6:	ed9d 7a01 	vldr	s14, [sp, #4]
 80136ea:	e684      	b.n	80133f6 <fill_arc.isra.7+0x21e>
 80136ec:	eeb0 0a67 	vmov.f32	s0, s15
 80136f0:	f01d fd9e 	bl	8031230 <sqrtf>
 80136f4:	e7cf      	b.n	8013696 <fill_arc.isra.7+0x4be>
 80136f6:	bf00      	nop

080136f8 <stroke_thin_path>:
 80136f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136fc:	ed2d 8b0c 	vpush	{d8-d13}
 8013700:	4682      	mov	sl, r0
 8013702:	b097      	sub	sp, #92	@ 0x5c
 8013704:	2248      	movs	r2, #72	@ 0x48
 8013706:	a804      	add	r0, sp, #16
 8013708:	2100      	movs	r1, #0
 801370a:	2400      	movs	r4, #0
 801370c:	f01f f8fb 	bl	8032906 <memset>
 8013710:	2201      	movs	r2, #1
 8013712:	f8da 3000 	ldr.w	r3, [sl]
 8013716:	f88d 2010 	strb.w	r2, [sp, #16]
 801371a:	42a3      	cmp	r3, r4
 801371c:	f88d 2012 	strb.w	r2, [sp, #18]
 8013720:	f8df b344 	ldr.w	fp, [pc, #836]	@ 8013a68 <stroke_thin_path+0x370>
 8013724:	ed9f 8aca 	vldr	s16, [pc, #808]	@ 8013a50 <stroke_thin_path+0x358>
 8013728:	f240 8092 	bls.w	8013850 <stroke_thin_path+0x158>
 801372c:	f8da 2008 	ldr.w	r2, [sl, #8]
 8013730:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 8013734:	5d15      	ldrb	r5, [r2, r4]
 8013736:	af07      	add	r7, sp, #28
 8013738:	f005 066f 	and.w	r6, r5, #111	@ 0x6f
 801373c:	f005 0210 	and.w	r2, r5, #16
 8013740:	2e01      	cmp	r6, #1
 8013742:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013746:	f104 0901 	add.w	r9, r4, #1
 801374a:	9200      	str	r2, [sp, #0]
 801374c:	e887 0003 	stmia.w	r7, {r0, r1}
 8013750:	f000 809d 	beq.w	801388e <stroke_thin_path+0x196>
 8013754:	066a      	lsls	r2, r5, #25
 8013756:	f000 8082 	beq.w	801385e <stroke_thin_path+0x166>
 801375a:	9905      	ldr	r1, [sp, #20]
 801375c:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 8013760:	b911      	cbnz	r1, 8013768 <stroke_thin_path+0x70>
 8013762:	2301      	movs	r3, #1
 8013764:	f88d 3010 	strb.w	r3, [sp, #16]
 8013768:	2200      	movs	r2, #0
 801376a:	f8da 300c 	ldr.w	r3, [sl, #12]
 801376e:	0088      	lsls	r0, r1, #2
 8013770:	181c      	adds	r4, r3, r0
 8013772:	9001      	str	r0, [sp, #4]
 8013774:	2e06      	cmp	r6, #6
 8013776:	f101 0001 	add.w	r0, r1, #1
 801377a:	f88d 2012 	strb.w	r2, [sp, #18]
 801377e:	46a6      	mov	lr, r4
 8013780:	4602      	mov	r2, r0
 8013782:	f000 81ca 	beq.w	8013b1a <stroke_thin_path+0x422>
 8013786:	2e05      	cmp	r6, #5
 8013788:	f000 8295 	beq.w	8013cb6 <stroke_thin_path+0x5be>
 801378c:	2e07      	cmp	r6, #7
 801378e:	f00c 0c6f 	and.w	ip, ip, #111	@ 0x6f
 8013792:	f000 8315 	beq.w	8013dc0 <stroke_thin_path+0x6c8>
 8013796:	2e08      	cmp	r6, #8
 8013798:	f000 83be 	beq.w	8013f18 <stroke_thin_path+0x820>
 801379c:	f005 0c0f 	and.w	ip, r5, #15
 80137a0:	f1bc 0f09 	cmp.w	ip, #9
 80137a4:	f000 84f7 	beq.w	8014196 <stroke_thin_path+0xa9e>
 80137a8:	2e04      	cmp	r6, #4
 80137aa:	f040 8205 	bne.w	8013bb8 <stroke_thin_path+0x4c0>
 80137ae:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 80137b2:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 80137b6:	9b00      	ldr	r3, [sp, #0]
 80137b8:	9005      	str	r0, [sp, #20]
 80137ba:	edde 7a00 	vldr	s15, [lr]
 80137be:	2b00      	cmp	r3, #0
 80137c0:	f000 8266 	beq.w	8013c90 <stroke_thin_path+0x598>
 80137c4:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 80137c8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80137cc:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 80137d0:	f8db 3000 	ldr.w	r3, [fp]
 80137d4:	7f1b      	ldrb	r3, [r3, #28]
 80137d6:	2b00      	cmp	r3, #0
 80137d8:	f000 8148 	beq.w	8013a6c <stroke_thin_path+0x374>
 80137dc:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 80137e0:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80137e4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80137e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137ec:	d109      	bne.n	8013802 <stroke_thin_path+0x10a>
 80137ee:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 80137f2:	ee37 7ac7 	vsub.f32	s14, s15, s14
 80137f6:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80137fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137fe:	f000 828e 	beq.w	8013d1e <stroke_thin_path+0x626>
 8013802:	2301      	movs	r3, #1
 8013804:	f88d 3011 	strb.w	r3, [sp, #17]
 8013808:	f89d 3012 	ldrb.w	r3, [sp, #18]
 801380c:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8013810:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8013814:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 8013818:	b9a3      	cbnz	r3, 8013844 <stroke_thin_path+0x14c>
 801381a:	062b      	lsls	r3, r5, #24
 801381c:	d412      	bmi.n	8013844 <stroke_thin_path+0x14c>
 801381e:	f005 036d 	and.w	r3, r5, #109	@ 0x6d
 8013822:	2b05      	cmp	r3, #5
 8013824:	d072      	beq.n	801390c <stroke_thin_path+0x214>
 8013826:	2e06      	cmp	r6, #6
 8013828:	f000 8126 	beq.w	8013a78 <stroke_thin_path+0x380>
 801382c:	2e08      	cmp	r6, #8
 801382e:	f000 8123 	beq.w	8013a78 <stroke_thin_path+0x380>
 8013832:	f005 050f 	and.w	r5, r5, #15
 8013836:	2d09      	cmp	r5, #9
 8013838:	f000 8440 	beq.w	80140bc <stroke_thin_path+0x9c4>
 801383c:	3e0a      	subs	r6, #10
 801383e:	2e01      	cmp	r6, #1
 8013840:	f200 834c 	bhi.w	8013edc <stroke_thin_path+0x7e4>
 8013844:	464c      	mov	r4, r9
 8013846:	f8da 3000 	ldr.w	r3, [sl]
 801384a:	42a3      	cmp	r3, r4
 801384c:	f63f af6e 	bhi.w	801372c <stroke_thin_path+0x34>
 8013850:	2500      	movs	r5, #0
 8013852:	4628      	mov	r0, r5
 8013854:	b017      	add	sp, #92	@ 0x5c
 8013856:	ecbd 8b0c 	vpop	{d8-d13}
 801385a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801385e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8013862:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 8013866:	2b01      	cmp	r3, #1
 8013868:	bf04      	itt	eq
 801386a:	ee18 2a10 	vmoveq	r2, s16
 801386e:	ee18 1a10 	vmoveq	r1, s16
 8013872:	f04f 0300 	mov.w	r3, #0
 8013876:	bf1c      	itt	ne
 8013878:	9913      	ldrne	r1, [sp, #76]	@ 0x4c
 801387a:	9a14      	ldrne	r2, [sp, #80]	@ 0x50
 801387c:	9109      	str	r1, [sp, #36]	@ 0x24
 801387e:	920a      	str	r2, [sp, #40]	@ 0x28
 8013880:	910f      	str	r1, [sp, #60]	@ 0x3c
 8013882:	9210      	str	r2, [sp, #64]	@ 0x40
 8013884:	f88d 3012 	strb.w	r3, [sp, #18]
 8013888:	f88d 3011 	strb.w	r3, [sp, #17]
 801388c:	e7c5      	b.n	801381a <stroke_thin_path+0x122>
 801388e:	f89d 1011 	ldrb.w	r1, [sp, #17]
 8013892:	9a05      	ldr	r2, [sp, #20]
 8013894:	2901      	cmp	r1, #1
 8013896:	f000 808d 	beq.w	80139b4 <stroke_thin_path+0x2bc>
 801389a:	2401      	movs	r4, #1
 801389c:	2600      	movs	r6, #0
 801389e:	0090      	lsls	r0, r2, #2
 80138a0:	f8da 100c 	ldr.w	r1, [sl, #12]
 80138a4:	1d07      	adds	r7, r0, #4
 80138a6:	440f      	add	r7, r1
 80138a8:	f88d 4012 	strb.w	r4, [sp, #18]
 80138ac:	4401      	add	r1, r0
 80138ae:	1910      	adds	r0, r2, r4
 80138b0:	9c00      	ldr	r4, [sp, #0]
 80138b2:	9206      	str	r2, [sp, #24]
 80138b4:	f88d 6010 	strb.w	r6, [sp, #16]
 80138b8:	3202      	adds	r2, #2
 80138ba:	9005      	str	r0, [sp, #20]
 80138bc:	b1e4      	cbz	r4, 80138f8 <stroke_thin_path+0x200>
 80138be:	edd1 7a00 	vldr	s15, [r1]
 80138c2:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 80138c6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 80138ca:	9205      	str	r2, [sp, #20]
 80138cc:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 80138d0:	edd7 7a00 	vldr	s15, [r7]
 80138d4:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 80138d8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80138dc:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 80138e0:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 80138e4:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 80138e8:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80138ec:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 80138f0:	f88d 5054 	strb.w	r5, [sp, #84]	@ 0x54
 80138f4:	464c      	mov	r4, r9
 80138f6:	e7a8      	b.n	801384a <stroke_thin_path+0x152>
 80138f8:	edd1 6a00 	vldr	s13, [r1]
 80138fc:	9205      	str	r2, [sp, #20]
 80138fe:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013902:	edd7 7a00 	vldr	s15, [r7]
 8013906:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 801390a:	e7e9      	b.n	80138e0 <stroke_thin_path+0x1e8>
 801390c:	f8db 3000 	ldr.w	r3, [fp]
 8013910:	eddd aa0b 	vldr	s21, [sp, #44]	@ 0x2c
 8013914:	7f1a      	ldrb	r2, [r3, #28]
 8013916:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 801391a:	ed9d ca07 	vldr	s24, [sp, #28]
 801391e:	eddd ba08 	vldr	s23, [sp, #32]
 8013922:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8013926:	ed9d 9a0a 	vldr	s18, [sp, #40]	@ 0x28
 801392a:	2a00      	cmp	r2, #0
 801392c:	f040 81df 	bne.w	8013cee <stroke_thin_path+0x5f6>
 8013930:	4a48      	ldr	r2, [pc, #288]	@ (8013a54 <stroke_thin_path+0x35c>)
 8013932:	6816      	ldr	r6, [r2, #0]
 8013934:	2e01      	cmp	r6, #1
 8013936:	f000 8319 	beq.w	8013f6c <stroke_thin_path+0x874>
 801393a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 801393c:	2508      	movs	r5, #8
 801393e:	b10a      	cbz	r2, 8013944 <stroke_thin_path+0x24c>
 8013940:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8013944:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8013946:	4b44      	ldr	r3, [pc, #272]	@ (8013a58 <stroke_thin_path+0x360>)
 8013948:	4014      	ands	r4, r2
 801394a:	7819      	ldrb	r1, [r3, #0]
 801394c:	2901      	cmp	r1, #1
 801394e:	d103      	bne.n	8013958 <stroke_thin_path+0x260>
 8013950:	685b      	ldr	r3, [r3, #4]
 8013952:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013956:	431c      	orrs	r4, r3
 8013958:	2007      	movs	r0, #7
 801395a:	f00a f9e3 	bl	801dd24 <nema_cl_get_space>
 801395e:	2800      	cmp	r0, #0
 8013960:	f43f af70 	beq.w	8013844 <stroke_thin_path+0x14c>
 8013964:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8013968:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 801396c:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8013970:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8013974:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8013978:	f44f 7251 	mov.w	r2, #836	@ 0x344
 801397c:	ed80 ca01 	vstr	s24, [r0, #4]
 8013980:	edc0 ba03 	vstr	s23, [r0, #12]
 8013984:	edc0 aa05 	vstr	s21, [r0, #20]
 8013988:	ed80 aa07 	vstr	s20, [r0, #28]
 801398c:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 8013990:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 8013994:	4b31      	ldr	r3, [pc, #196]	@ (8013a5c <stroke_thin_path+0x364>)
 8013996:	432c      	orrs	r4, r5
 8013998:	6344      	str	r4, [r0, #52]	@ 0x34
 801399a:	f8c0 e000 	str.w	lr, [r0]
 801399e:	f8c0 c008 	str.w	ip, [r0, #8]
 80139a2:	6107      	str	r7, [r0, #16]
 80139a4:	6186      	str	r6, [r0, #24]
 80139a6:	6201      	str	r1, [r0, #32]
 80139a8:	6282      	str	r2, [r0, #40]	@ 0x28
 80139aa:	6303      	str	r3, [r0, #48]	@ 0x30
 80139ac:	f8da 3000 	ldr.w	r3, [sl]
 80139b0:	464c      	mov	r4, r9
 80139b2:	e74a      	b.n	801384a <stroke_thin_path+0x152>
 80139b4:	2a00      	cmp	r2, #0
 80139b6:	f43f af70 	beq.w	801389a <stroke_thin_path+0x1a2>
 80139ba:	f8db 1000 	ldr.w	r1, [fp]
 80139be:	7f09      	ldrb	r1, [r1, #28]
 80139c0:	2900      	cmp	r1, #0
 80139c2:	f43f af6a 	beq.w	801389a <stroke_thin_path+0x1a2>
 80139c6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80139ca:	2b00      	cmp	r3, #0
 80139cc:	f040 83c0 	bne.w	8014150 <stroke_thin_path+0xa58>
 80139d0:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
 80139d4:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 80139d6:	4a22      	ldr	r2, [pc, #136]	@ (8013a60 <stroke_thin_path+0x368>)
 80139d8:	4b22      	ldr	r3, [pc, #136]	@ (8013a64 <stroke_thin_path+0x36c>)
 80139da:	2007      	movs	r0, #7
 80139dc:	6816      	ldr	r6, [r2, #0]
 80139de:	681c      	ldr	r4, [r3, #0]
 80139e0:	f00a f9a0 	bl	801dd24 <nema_cl_get_space>
 80139e4:	2800      	cmp	r0, #0
 80139e6:	d02e      	beq.n	8013a46 <stroke_thin_path+0x34e>
 80139e8:	4a1b      	ldr	r2, [pc, #108]	@ (8013a58 <stroke_thin_path+0x360>)
 80139ea:	f8db 3000 	ldr.w	r3, [fp]
 80139ee:	7811      	ldrb	r1, [r2, #0]
 80139f0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80139f2:	2901      	cmp	r1, #1
 80139f4:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 80139f8:	d104      	bne.n	8013a04 <stroke_thin_path+0x30c>
 80139fa:	4b17      	ldr	r3, [pc, #92]	@ (8013a58 <stroke_thin_path+0x360>)
 80139fc:	685b      	ldr	r3, [r3, #4]
 80139fe:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013a02:	431a      	orrs	r2, r3
 8013a04:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8013a08:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8013a0c:	6003      	str	r3, [r0, #0]
 8013a0e:	9b07      	ldr	r3, [sp, #28]
 8013a10:	6081      	str	r1, [r0, #8]
 8013a12:	6043      	str	r3, [r0, #4]
 8013a14:	9b08      	ldr	r3, [sp, #32]
 8013a16:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8013a1a:	61c7      	str	r7, [r0, #28]
 8013a1c:	60c3      	str	r3, [r0, #12]
 8013a1e:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8013a22:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8013a26:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8013a2a:	f042 0204 	orr.w	r2, r2, #4
 8013a2e:	6342      	str	r2, [r0, #52]	@ 0x34
 8013a30:	4a0a      	ldr	r2, [pc, #40]	@ (8013a5c <stroke_thin_path+0x364>)
 8013a32:	f8c0 8014 	str.w	r8, [r0, #20]
 8013a36:	6246      	str	r6, [r0, #36]	@ 0x24
 8013a38:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8013a3a:	f8c0 c010 	str.w	ip, [r0, #16]
 8013a3e:	6187      	str	r7, [r0, #24]
 8013a40:	6201      	str	r1, [r0, #32]
 8013a42:	6283      	str	r3, [r0, #40]	@ 0x28
 8013a44:	6302      	str	r2, [r0, #48]	@ 0x30
 8013a46:	9a05      	ldr	r2, [sp, #20]
 8013a48:	f8da 3000 	ldr.w	r3, [sl]
 8013a4c:	e725      	b.n	801389a <stroke_thin_path+0x1a2>
 8013a4e:	bf00      	nop
 8013a50:	00000000 	.word	0x00000000
 8013a54:	20082fb4 	.word	0x20082fb4
 8013a58:	20000064 	.word	0x20000064
 8013a5c:	ff000100 	.word	0xff000100
 8013a60:	20082fb8 	.word	0x20082fb8
 8013a64:	20082fbc 	.word	0x20082fbc
 8013a68:	20082fac 	.word	0x20082fac
 8013a6c:	2201      	movs	r2, #1
 8013a6e:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013a72:	f88d 2011 	strb.w	r2, [sp, #17]
 8013a76:	e6c9      	b.n	801380c <stroke_thin_path+0x114>
 8013a78:	f8db 3000 	ldr.w	r3, [fp]
 8013a7c:	7f1a      	ldrb	r2, [r3, #28]
 8013a7e:	2a00      	cmp	r2, #0
 8013a80:	f040 8244 	bne.w	8013f0c <stroke_thin_path+0x814>
 8013a84:	4aa9      	ldr	r2, [pc, #676]	@ (8013d2c <stroke_thin_path+0x634>)
 8013a86:	6814      	ldr	r4, [r2, #0]
 8013a88:	2c01      	cmp	r4, #1
 8013a8a:	f000 83e7 	beq.w	801425c <stroke_thin_path+0xb64>
 8013a8e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013a90:	2509      	movs	r5, #9
 8013a92:	2a00      	cmp	r2, #0
 8013a94:	f040 8140 	bne.w	8013d18 <stroke_thin_path+0x620>
 8013a98:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8013a9a:	4ba5      	ldr	r3, [pc, #660]	@ (8013d30 <stroke_thin_path+0x638>)
 8013a9c:	4014      	ands	r4, r2
 8013a9e:	7819      	ldrb	r1, [r3, #0]
 8013aa0:	2901      	cmp	r1, #1
 8013aa2:	d103      	bne.n	8013aac <stroke_thin_path+0x3b4>
 8013aa4:	685b      	ldr	r3, [r3, #4]
 8013aa6:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013aaa:	431c      	orrs	r4, r3
 8013aac:	2009      	movs	r0, #9
 8013aae:	f00a f939 	bl	801dd24 <nema_cl_get_space>
 8013ab2:	2800      	cmp	r0, #0
 8013ab4:	f43f aec6 	beq.w	8013844 <stroke_thin_path+0x14c>
 8013ab8:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8013abc:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8013ac0:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8013ac4:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8013ac8:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8013acc:	f44f 7351 	mov.w	r3, #836	@ 0x344
 8013ad0:	6002      	str	r2, [r0, #0]
 8013ad2:	9a07      	ldr	r2, [sp, #28]
 8013ad4:	f8c0 c008 	str.w	ip, [r0, #8]
 8013ad8:	6042      	str	r2, [r0, #4]
 8013ada:	9a08      	ldr	r2, [sp, #32]
 8013adc:	6107      	str	r7, [r0, #16]
 8013ade:	60c2      	str	r2, [r0, #12]
 8013ae0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013ae2:	6186      	str	r6, [r0, #24]
 8013ae4:	6142      	str	r2, [r0, #20]
 8013ae6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8013ae8:	6201      	str	r1, [r0, #32]
 8013aea:	61c2      	str	r2, [r0, #28]
 8013aec:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013aee:	6283      	str	r3, [r0, #40]	@ 0x28
 8013af0:	6242      	str	r2, [r0, #36]	@ 0x24
 8013af2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013af4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8013af6:	62c2      	str	r2, [r0, #44]	@ 0x2c
 8013af8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013afa:	6341      	str	r1, [r0, #52]	@ 0x34
 8013afc:	63c2      	str	r2, [r0, #60]	@ 0x3c
 8013afe:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8013b02:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8013b06:	4b8b      	ldr	r3, [pc, #556]	@ (8013d34 <stroke_thin_path+0x63c>)
 8013b08:	432c      	orrs	r4, r5
 8013b0a:	6444      	str	r4, [r0, #68]	@ 0x44
 8013b0c:	6301      	str	r1, [r0, #48]	@ 0x30
 8013b0e:	6382      	str	r2, [r0, #56]	@ 0x38
 8013b10:	6403      	str	r3, [r0, #64]	@ 0x40
 8013b12:	f8da 3000 	ldr.w	r3, [sl]
 8013b16:	464c      	mov	r4, r9
 8013b18:	e697      	b.n	801384a <stroke_thin_path+0x152>
 8013b1a:	9005      	str	r0, [sp, #20]
 8013b1c:	ed94 6a00 	vldr	s12, [r4]
 8013b20:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8013b24:	1c8a      	adds	r2, r1, #2
 8013b26:	9205      	str	r2, [sp, #20]
 8013b28:	edd4 6a01 	vldr	s13, [r4, #4]
 8013b2c:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8013b30:	1cca      	adds	r2, r1, #3
 8013b32:	9205      	str	r2, [sp, #20]
 8013b34:	ed94 7a02 	vldr	s14, [r4, #8]
 8013b38:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013b3c:	3104      	adds	r1, #4
 8013b3e:	9105      	str	r1, [sp, #20]
 8013b40:	edd4 7a03 	vldr	s15, [r4, #12]
 8013b44:	9a00      	ldr	r2, [sp, #0]
 8013b46:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013b4a:	b19a      	cbz	r2, 8013b74 <stroke_thin_path+0x47c>
 8013b4c:	ed9d 5a0f 	vldr	s10, [sp, #60]	@ 0x3c
 8013b50:	eddd 5a10 	vldr	s11, [sp, #64]	@ 0x40
 8013b54:	ee36 6a05 	vadd.f32	s12, s12, s10
 8013b58:	ee37 7a05 	vadd.f32	s14, s14, s10
 8013b5c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013b60:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8013b64:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8013b68:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013b6c:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8013b70:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013b74:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8013b78:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8013b7c:	008a      	lsls	r2, r1, #2
 8013b7e:	1c48      	adds	r0, r1, #1
 8013b80:	9201      	str	r2, [sp, #4]
 8013b82:	9c01      	ldr	r4, [sp, #4]
 8013b84:	9005      	str	r0, [sp, #20]
 8013b86:	1d22      	adds	r2, r4, #4
 8013b88:	441a      	add	r2, r3
 8013b8a:	4423      	add	r3, r4
 8013b8c:	9c00      	ldr	r4, [sp, #0]
 8013b8e:	3102      	adds	r1, #2
 8013b90:	edd3 6a00 	vldr	s13, [r3]
 8013b94:	2c00      	cmp	r4, #0
 8013b96:	d076      	beq.n	8013c86 <stroke_thin_path+0x58e>
 8013b98:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 8013b9c:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8013ba0:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013ba4:	9105      	str	r1, [sp, #20]
 8013ba6:	ed92 7a00 	vldr	s14, [r2]
 8013baa:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013bae:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013bb2:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013bb6:	e60b      	b.n	80137d0 <stroke_thin_path+0xd8>
 8013bb8:	2e03      	cmp	r6, #3
 8013bba:	d06c      	beq.n	8013c96 <stroke_thin_path+0x59e>
 8013bbc:	2e0a      	cmp	r6, #10
 8013bbe:	f040 841d 	bne.w	80143fc <stroke_thin_path+0xd04>
 8013bc2:	9005      	str	r0, [sp, #20]
 8013bc4:	edde 7a00 	vldr	s15, [lr]
 8013bc8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013bcc:	ee17 1a90 	vmov	r1, s15
 8013bd0:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8013bd4:	1049      	asrs	r1, r1, #1
 8013bd6:	2900      	cmp	r1, #0
 8013bd8:	9101      	str	r1, [sp, #4]
 8013bda:	f340 8112 	ble.w	8013e02 <stroke_thin_path+0x70a>
 8013bde:	f8cd 9008 	str.w	r9, [sp, #8]
 8013be2:	2400      	movs	r4, #0
 8013be4:	46a9      	mov	r9, r5
 8013be6:	9603      	str	r6, [sp, #12]
 8013be8:	e039      	b.n	8013c5e <stroke_thin_path+0x566>
 8013bea:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 8013bee:	ee78 8a81 	vadd.f32	s17, s17, s2
 8013bf2:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013bf6:	9205      	str	r2, [sp, #20]
 8013bf8:	ed91 9a00 	vldr	s18, [r1]
 8013bfc:	eddd 1a10 	vldr	s3, [sp, #64]	@ 0x40
 8013c00:	ee39 9a21 	vadd.f32	s18, s18, s3
 8013c04:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013c08:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 8013c0c:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 8013c10:	f8db 3000 	ldr.w	r3, [fp]
 8013c14:	f88d 9054 	strb.w	r9, [sp, #84]	@ 0x54
 8013c18:	7f1a      	ldrb	r2, [r3, #28]
 8013c1a:	2a00      	cmp	r2, #0
 8013c1c:	f040 808e 	bne.w	8013d3c <stroke_thin_path+0x644>
 8013c20:	4a42      	ldr	r2, [pc, #264]	@ (8013d2c <stroke_thin_path+0x634>)
 8013c22:	eddd 9a07 	vldr	s19, [sp, #28]
 8013c26:	6812      	ldr	r2, [r2, #0]
 8013c28:	ed9d aa08 	vldr	s20, [sp, #32]
 8013c2c:	2a00      	cmp	r2, #0
 8013c2e:	f000 82e5 	beq.w	80141fc <stroke_thin_path+0xb04>
 8013c32:	eef0 1a49 	vmov.f32	s3, s18
 8013c36:	eeb0 1a68 	vmov.f32	s2, s17
 8013c3a:	eef0 0a4a 	vmov.f32	s1, s20
 8013c3e:	eeb0 0a69 	vmov.f32	s0, s19
 8013c42:	f7fe fe69 	bl	8012918 <raster_stroked_line_>
 8013c46:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013c4a:	9b01      	ldr	r3, [sp, #4]
 8013c4c:	3401      	adds	r4, #1
 8013c4e:	429c      	cmp	r4, r3
 8013c50:	e887 0003 	stmia.w	r7, {r0, r1}
 8013c54:	f000 80d2 	beq.w	8013dfc <stroke_thin_path+0x704>
 8013c58:	f8da 300c 	ldr.w	r3, [sl, #12]
 8013c5c:	9a05      	ldr	r2, [sp, #20]
 8013c5e:	0090      	lsls	r0, r2, #2
 8013c60:	1d01      	adds	r1, r0, #4
 8013c62:	4419      	add	r1, r3
 8013c64:	9d00      	ldr	r5, [sp, #0]
 8013c66:	4403      	add	r3, r0
 8013c68:	1c50      	adds	r0, r2, #1
 8013c6a:	9005      	str	r0, [sp, #20]
 8013c6c:	3202      	adds	r2, #2
 8013c6e:	edd3 8a00 	vldr	s17, [r3]
 8013c72:	2d00      	cmp	r5, #0
 8013c74:	d1b9      	bne.n	8013bea <stroke_thin_path+0x4f2>
 8013c76:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013c7a:	9205      	str	r2, [sp, #20]
 8013c7c:	ed91 9a00 	vldr	s18, [r1]
 8013c80:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013c84:	e7c0      	b.n	8013c08 <stroke_thin_path+0x510>
 8013c86:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013c8a:	9105      	str	r1, [sp, #20]
 8013c8c:	edd2 7a00 	vldr	s15, [r2]
 8013c90:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013c94:	e59c      	b.n	80137d0 <stroke_thin_path+0xd8>
 8013c96:	9b00      	ldr	r3, [sp, #0]
 8013c98:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013c9c:	9005      	str	r0, [sp, #20]
 8013c9e:	b353      	cbz	r3, 8013cf6 <stroke_thin_path+0x5fe>
 8013ca0:	ed9e 7a00 	vldr	s14, [lr]
 8013ca4:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013ca8:	ee76 6a87 	vadd.f32	s13, s13, s14
 8013cac:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013cb0:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013cb4:	e58c      	b.n	80137d0 <stroke_thin_path+0xd8>
 8013cb6:	9005      	str	r0, [sp, #20]
 8013cb8:	ed94 7a00 	vldr	s14, [r4]
 8013cbc:	ed8d 7a0b 	vstr	s14, [sp, #44]	@ 0x2c
 8013cc0:	3102      	adds	r1, #2
 8013cc2:	9105      	str	r1, [sp, #20]
 8013cc4:	edd4 7a01 	vldr	s15, [r4, #4]
 8013cc8:	9a00      	ldr	r2, [sp, #0]
 8013cca:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013cce:	2a00      	cmp	r2, #0
 8013cd0:	f43f af50 	beq.w	8013b74 <stroke_thin_path+0x47c>
 8013cd4:	ed9d 6a0f 	vldr	s12, [sp, #60]	@ 0x3c
 8013cd8:	eddd 6a10 	vldr	s13, [sp, #64]	@ 0x40
 8013cdc:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013ce0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013ce4:	ed8d 7a0b 	vstr	s14, [sp, #44]	@ 0x2c
 8013ce8:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013cec:	e742      	b.n	8013b74 <stroke_thin_path+0x47c>
 8013cee:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013cf0:	b942      	cbnz	r2, 8013d04 <stroke_thin_path+0x60c>
 8013cf2:	2506      	movs	r5, #6
 8013cf4:	e626      	b.n	8013944 <stroke_thin_path+0x24c>
 8013cf6:	edde 6a00 	vldr	s13, [lr]
 8013cfa:	edcd 7a0a 	vstr	s15, [sp, #40]	@ 0x28
 8013cfe:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8013d02:	e565      	b.n	80137d0 <stroke_thin_path+0xd8>
 8013d04:	4a0c      	ldr	r2, [pc, #48]	@ (8013d38 <stroke_thin_path+0x640>)
 8013d06:	2506      	movs	r5, #6
 8013d08:	6812      	ldr	r2, [r2, #0]
 8013d0a:	2a00      	cmp	r2, #0
 8013d0c:	bf14      	ite	ne
 8013d0e:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8013d12:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8013d16:	e615      	b.n	8013944 <stroke_thin_path+0x24c>
 8013d18:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8013d1c:	e6bc      	b.n	8013a98 <stroke_thin_path+0x3a0>
 8013d1e:	2300      	movs	r3, #0
 8013d20:	f88d 3011 	strb.w	r3, [sp, #17]
 8013d24:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013d28:	e570      	b.n	801380c <stroke_thin_path+0x114>
 8013d2a:	bf00      	nop
 8013d2c:	20082fb4 	.word	0x20082fb4
 8013d30:	20000064 	.word	0x20000064
 8013d34:	ff000100 	.word	0xff000100
 8013d38:	20082fb0 	.word	0x20082fb0
 8013d3c:	4aba      	ldr	r2, [pc, #744]	@ (8014028 <stroke_thin_path+0x930>)
 8013d3e:	4bbb      	ldr	r3, [pc, #748]	@ (801402c <stroke_thin_path+0x934>)
 8013d40:	2007      	movs	r0, #7
 8013d42:	6816      	ldr	r6, [r2, #0]
 8013d44:	681d      	ldr	r5, [r3, #0]
 8013d46:	f009 ffed 	bl	801dd24 <nema_cl_get_space>
 8013d4a:	2800      	cmp	r0, #0
 8013d4c:	f43f af7b 	beq.w	8013c46 <stroke_thin_path+0x54e>
 8013d50:	4ab7      	ldr	r2, [pc, #732]	@ (8014030 <stroke_thin_path+0x938>)
 8013d52:	f8db 3000 	ldr.w	r3, [fp]
 8013d56:	7812      	ldrb	r2, [r2, #0]
 8013d58:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013d5a:	2a01      	cmp	r2, #1
 8013d5c:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8013d60:	d104      	bne.n	8013d6c <stroke_thin_path+0x674>
 8013d62:	4ab3      	ldr	r2, [pc, #716]	@ (8014030 <stroke_thin_path+0x938>)
 8013d64:	6852      	ldr	r2, [r2, #4]
 8013d66:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8013d6a:	4313      	orrs	r3, r2
 8013d6c:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8013d70:	6002      	str	r2, [r0, #0]
 8013d72:	eddd 7a07 	vldr	s15, [sp, #28]
 8013d76:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8013d7a:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8013d7e:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8013d82:	6082      	str	r2, [r0, #8]
 8013d84:	edc0 7a01 	vstr	s15, [r0, #4]
 8013d88:	f8c0 e018 	str.w	lr, [r0, #24]
 8013d8c:	f8dd e020 	ldr.w	lr, [sp, #32]
 8013d90:	f8c0 c010 	str.w	ip, [r0, #16]
 8013d94:	f8c0 e00c 	str.w	lr, [r0, #12]
 8013d98:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8013d9c:	f043 0304 	orr.w	r3, r3, #4
 8013da0:	f8c0 c014 	str.w	ip, [r0, #20]
 8013da4:	6343      	str	r3, [r0, #52]	@ 0x34
 8013da6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8013da8:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8013dac:	61c3      	str	r3, [r0, #28]
 8013dae:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8013db2:	4aa0      	ldr	r2, [pc, #640]	@ (8014034 <stroke_thin_path+0x93c>)
 8013db4:	6246      	str	r6, [r0, #36]	@ 0x24
 8013db6:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8013db8:	6302      	str	r2, [r0, #48]	@ 0x30
 8013dba:	6201      	str	r1, [r0, #32]
 8013dbc:	6283      	str	r3, [r0, #40]	@ 0x28
 8013dbe:	e742      	b.n	8013c46 <stroke_thin_path+0x54e>
 8013dc0:	f1ac 0c05 	sub.w	ip, ip, #5
 8013dc4:	f1bc 0f03 	cmp.w	ip, #3
 8013dc8:	eddd 6a0f 	vldr	s13, [sp, #60]	@ 0x3c
 8013dcc:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013dd0:	d80b      	bhi.n	8013dea <stroke_thin_path+0x6f2>
 8013dd2:	ee76 6aa6 	vadd.f32	s13, s13, s13
 8013dd6:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8013dda:	ed9d 6a11 	vldr	s12, [sp, #68]	@ 0x44
 8013dde:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8013de2:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8013de6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8013dea:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8013dee:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8013df2:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013df6:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8013dfa:	e6c2      	b.n	8013b82 <stroke_thin_path+0x48a>
 8013dfc:	464d      	mov	r5, r9
 8013dfe:	e9dd 9602 	ldrd	r9, r6, [sp, #8]
 8013e02:	eddd 8a13 	vldr	s17, [sp, #76]	@ 0x4c
 8013e06:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 8013e0a:	ee77 7ae8 	vsub.f32	s15, s15, s17
 8013e0e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8013e12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e16:	ed9d 9a14 	vldr	s18, [sp, #80]	@ 0x50
 8013e1a:	d108      	bne.n	8013e2e <stroke_thin_path+0x736>
 8013e1c:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8013e20:	ee77 7ac9 	vsub.f32	s15, s15, s18
 8013e24:	eef5 7a40 	vcmp.f32	s15, #0.0
 8013e28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e2c:	d050      	beq.n	8013ed0 <stroke_thin_path+0x7d8>
 8013e2e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013e32:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 8013e36:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 8013e3a:	f8db 3000 	ldr.w	r3, [fp]
 8013e3e:	e887 0003 	stmia.w	r7, {r0, r1}
 8013e42:	7f1a      	ldrb	r2, [r3, #28]
 8013e44:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 8013e48:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 8013e4c:	2a00      	cmp	r2, #0
 8013e4e:	f000 818e 	beq.w	801416e <stroke_thin_path+0xa76>
 8013e52:	4a75      	ldr	r2, [pc, #468]	@ (8014028 <stroke_thin_path+0x930>)
 8013e54:	4b75      	ldr	r3, [pc, #468]	@ (801402c <stroke_thin_path+0x934>)
 8013e56:	2007      	movs	r0, #7
 8013e58:	6817      	ldr	r7, [r2, #0]
 8013e5a:	681c      	ldr	r4, [r3, #0]
 8013e5c:	f009 ff62 	bl	801dd24 <nema_cl_get_space>
 8013e60:	2800      	cmp	r0, #0
 8013e62:	d035      	beq.n	8013ed0 <stroke_thin_path+0x7d8>
 8013e64:	4a72      	ldr	r2, [pc, #456]	@ (8014030 <stroke_thin_path+0x938>)
 8013e66:	f8db 3000 	ldr.w	r3, [fp]
 8013e6a:	7811      	ldrb	r1, [r2, #0]
 8013e6c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8013e6e:	2901      	cmp	r1, #1
 8013e70:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 8013e74:	d104      	bne.n	8013e80 <stroke_thin_path+0x788>
 8013e76:	4b6e      	ldr	r3, [pc, #440]	@ (8014030 <stroke_thin_path+0x938>)
 8013e78:	685b      	ldr	r3, [r3, #4]
 8013e7a:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8013e7e:	431a      	orrs	r2, r3
 8013e80:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8013e84:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8013e88:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8013e8c:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8013e90:	f8c0 8000 	str.w	r8, [r0]
 8013e94:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8013e98:	f8c0 e008 	str.w	lr, [r0, #8]
 8013e9c:	f8c0 8004 	str.w	r8, [r0, #4]
 8013ea0:	f8c0 c018 	str.w	ip, [r0, #24]
 8013ea4:	f8dd c020 	ldr.w	ip, [sp, #32]
 8013ea8:	6101      	str	r1, [r0, #16]
 8013eaa:	f8c0 c00c 	str.w	ip, [r0, #12]
 8013eae:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8013eb0:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8013eb4:	6141      	str	r1, [r0, #20]
 8013eb6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8013eb8:	f042 0204 	orr.w	r2, r2, #4
 8013ebc:	61c1      	str	r1, [r0, #28]
 8013ebe:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8013ec2:	6342      	str	r2, [r0, #52]	@ 0x34
 8013ec4:	4a5b      	ldr	r2, [pc, #364]	@ (8014034 <stroke_thin_path+0x93c>)
 8013ec6:	6247      	str	r7, [r0, #36]	@ 0x24
 8013ec8:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8013eca:	6201      	str	r1, [r0, #32]
 8013ecc:	6283      	str	r3, [r0, #40]	@ 0x28
 8013ece:	6302      	str	r2, [r0, #48]	@ 0x30
 8013ed0:	2300      	movs	r3, #0
 8013ed2:	f88d 3011 	strb.w	r3, [sp, #17]
 8013ed6:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8013eda:	e49d      	b.n	8013818 <stroke_thin_path+0x120>
 8013edc:	4b56      	ldr	r3, [pc, #344]	@ (8014038 <stroke_thin_path+0x940>)
 8013ede:	eddd 8a07 	vldr	s17, [sp, #28]
 8013ee2:	681b      	ldr	r3, [r3, #0]
 8013ee4:	ed9d 9a08 	vldr	s18, [sp, #32]
 8013ee8:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8013eec:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8013ef0:	2b00      	cmp	r3, #0
 8013ef2:	f000 80fb 	beq.w	80140ec <stroke_thin_path+0x9f4>
 8013ef6:	eef0 1a4a 	vmov.f32	s3, s20
 8013efa:	eeb0 1a69 	vmov.f32	s2, s19
 8013efe:	eef0 0a49 	vmov.f32	s1, s18
 8013f02:	eeb0 0a68 	vmov.f32	s0, s17
 8013f06:	f7fe fd07 	bl	8012918 <raster_stroked_line_>
 8013f0a:	e49b      	b.n	8013844 <stroke_thin_path+0x14c>
 8013f0c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8013f0e:	2a00      	cmp	r2, #0
 8013f10:	f040 8123 	bne.w	801415a <stroke_thin_path+0xa62>
 8013f14:	2507      	movs	r5, #7
 8013f16:	e5bf      	b.n	8013a98 <stroke_thin_path+0x3a0>
 8013f18:	f1ac 0c05 	sub.w	ip, ip, #5
 8013f1c:	f1bc 0f03 	cmp.w	ip, #3
 8013f20:	ed9d 5a0f 	vldr	s10, [sp, #60]	@ 0x3c
 8013f24:	eddd 5a10 	vldr	s11, [sp, #64]	@ 0x40
 8013f28:	f240 80d3 	bls.w	80140d2 <stroke_thin_path+0x9da>
 8013f2c:	eeb0 7a65 	vmov.f32	s14, s11
 8013f30:	eef0 7a45 	vmov.f32	s15, s10
 8013f34:	ed8d 7a0c 	vstr	s14, [sp, #48]	@ 0x30
 8013f38:	edcd 7a0b 	vstr	s15, [sp, #44]	@ 0x2c
 8013f3c:	9005      	str	r0, [sp, #20]
 8013f3e:	ed94 7a00 	vldr	s14, [r4]
 8013f42:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013f46:	3102      	adds	r1, #2
 8013f48:	9105      	str	r1, [sp, #20]
 8013f4a:	edd4 7a01 	vldr	s15, [r4, #4]
 8013f4e:	9a00      	ldr	r2, [sp, #0]
 8013f50:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013f54:	2a00      	cmp	r2, #0
 8013f56:	f43f ae0d 	beq.w	8013b74 <stroke_thin_path+0x47c>
 8013f5a:	ee37 7a05 	vadd.f32	s14, s14, s10
 8013f5e:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8013f62:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8013f66:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8013f6a:	e603      	b.n	8013b74 <stroke_thin_path+0x47c>
 8013f6c:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8013f70:	4c32      	ldr	r4, [pc, #200]	@ (801403c <stroke_thin_path+0x944>)
 8013f72:	4d33      	ldr	r5, [pc, #204]	@ (8014040 <stroke_thin_path+0x948>)
 8013f74:	7821      	ldrb	r1, [r4, #0]
 8013f76:	ee39 7acc 	vsub.f32	s14, s19, s24
 8013f7a:	ee79 7a6b 	vsub.f32	s15, s18, s23
 8013f7e:	ee7c 5a2a 	vadd.f32	s11, s24, s21
 8013f82:	ee3a 4aa9 	vadd.f32	s8, s21, s19
 8013f86:	ee3b 5a8a 	vadd.f32	s10, s23, s20
 8013f8a:	ee7a 4a09 	vadd.f32	s9, s20, s18
 8013f8e:	ee3a 6a49 	vsub.f32	s12, s20, s18
 8013f92:	ee7a 6ae9 	vsub.f32	s13, s21, s19
 8013f96:	ee26 6a07 	vmul.f32	s12, s12, s14
 8013f9a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8013f9e:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8013fa2:	ee24 4a28 	vmul.f32	s8, s8, s17
 8013fa6:	ee25 5a28 	vmul.f32	s10, s10, s17
 8013faa:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8013fae:	ee35 ba84 	vadd.f32	s22, s11, s8
 8013fb2:	ee75 ca24 	vadd.f32	s25, s10, s9
 8013fb6:	ee27 7a07 	vmul.f32	s14, s14, s14
 8013fba:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8013fbe:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8013fc2:	ee2b ba28 	vmul.f32	s22, s22, s17
 8013fc6:	ee6c caa8 	vmul.f32	s25, s25, s17
 8013fca:	ee66 6aa6 	vmul.f32	s13, s13, s13
 8013fce:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013fd2:	2900      	cmp	r1, #0
 8013fd4:	d038      	beq.n	8014048 <stroke_thin_path+0x950>
 8013fd6:	eef4 6ae7 	vcmpe.f32	s13, s15
 8013fda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013fde:	bfcc      	ite	gt
 8013fe0:	2301      	movgt	r3, #1
 8013fe2:	2300      	movle	r3, #0
 8013fe4:	2b00      	cmp	r3, #0
 8013fe6:	d03a      	beq.n	801405e <stroke_thin_path+0x966>
 8013fe8:	682b      	ldr	r3, [r5, #0]
 8013fea:	2b09      	cmp	r3, #9
 8013fec:	dc12      	bgt.n	8014014 <stroke_thin_path+0x91c>
 8013fee:	4815      	ldr	r0, [pc, #84]	@ (8014044 <stroke_thin_path+0x94c>)
 8013ff0:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8013ff4:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 8013ff8:	ed82 ba00 	vstr	s22, [r2]
 8013ffc:	edc2 ca01 	vstr	s25, [r2, #4]
 8014000:	ed82 4a02 	vstr	s8, [r2, #8]
 8014004:	edc2 4a03 	vstr	s9, [r2, #12]
 8014008:	edc2 9a04 	vstr	s19, [r2, #16]
 801400c:	ed82 9a05 	vstr	s18, [r2, #20]
 8014010:	3301      	adds	r3, #1
 8014012:	602b      	str	r3, [r5, #0]
 8014014:	3601      	adds	r6, #1
 8014016:	eeb0 9a6c 	vmov.f32	s18, s25
 801401a:	eef0 9a4b 	vmov.f32	s19, s22
 801401e:	eeb0 aa45 	vmov.f32	s20, s10
 8014022:	eef0 aa65 	vmov.f32	s21, s11
 8014026:	e7a6      	b.n	8013f76 <stroke_thin_path+0x87e>
 8014028:	20082fb8 	.word	0x20082fb8
 801402c:	20082fbc 	.word	0x20082fbc
 8014030:	20000064 	.word	0x20000064
 8014034:	ff000100 	.word	0xff000100
 8014038:	20082fb4 	.word	0x20082fb4
 801403c:	20082fc0 	.word	0x20082fc0
 8014040:	20083148 	.word	0x20083148
 8014044:	20083058 	.word	0x20083058
 8014048:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801404c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8014050:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014054:	bf4c      	ite	mi
 8014056:	2301      	movmi	r3, #1
 8014058:	2300      	movpl	r3, #0
 801405a:	2b00      	cmp	r3, #0
 801405c:	d1c4      	bne.n	8013fe8 <stroke_thin_path+0x8f0>
 801405e:	eef0 1a6c 	vmov.f32	s3, s25
 8014062:	eeb0 1a4b 	vmov.f32	s2, s22
 8014066:	eef0 0a6b 	vmov.f32	s1, s23
 801406a:	eeb0 0a4c 	vmov.f32	s0, s24
 801406e:	f7fe fc53 	bl	8012918 <raster_stroked_line_>
 8014072:	eef0 1a49 	vmov.f32	s3, s18
 8014076:	eeb0 1a69 	vmov.f32	s2, s19
 801407a:	eef0 0a6c 	vmov.f32	s1, s25
 801407e:	eeb0 0a4b 	vmov.f32	s0, s22
 8014082:	f7fe fc49 	bl	8012918 <raster_stroked_line_>
 8014086:	682b      	ldr	r3, [r5, #0]
 8014088:	3e01      	subs	r6, #1
 801408a:	b193      	cbz	r3, 80140b2 <stroke_thin_path+0x9ba>
 801408c:	3b01      	subs	r3, #1
 801408e:	49d4      	ldr	r1, [pc, #848]	@ (80143e0 <stroke_thin_path+0xce8>)
 8014090:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8014094:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 8014098:	ed92 ca00 	vldr	s24, [r2]
 801409c:	edd2 ba01 	vldr	s23, [r2, #4]
 80140a0:	edd2 aa02 	vldr	s21, [r2, #8]
 80140a4:	ed92 aa03 	vldr	s20, [r2, #12]
 80140a8:	edd2 9a04 	vldr	s19, [r2, #16]
 80140ac:	ed92 9a05 	vldr	s18, [r2, #20]
 80140b0:	602b      	str	r3, [r5, #0]
 80140b2:	2e00      	cmp	r6, #0
 80140b4:	f43f abc6 	beq.w	8013844 <stroke_thin_path+0x14c>
 80140b8:	7821      	ldrb	r1, [r4, #0]
 80140ba:	e75c      	b.n	8013f76 <stroke_thin_path+0x87e>
 80140bc:	a804      	add	r0, sp, #16
 80140be:	f7ff f88b 	bl	80131d8 <fill_arc.isra.7>
 80140c2:	4605      	mov	r5, r0
 80140c4:	2800      	cmp	r0, #0
 80140c6:	f43f abbd 	beq.w	8013844 <stroke_thin_path+0x14c>
 80140ca:	f008 fcd3 	bl	801ca74 <nema_vg_set_error>
 80140ce:	f7ff bbc0 	b.w	8013852 <stroke_thin_path+0x15a>
 80140d2:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 80140d6:	ee75 7a05 	vadd.f32	s15, s10, s10
 80140da:	ee35 6aa5 	vadd.f32	s12, s11, s11
 80140de:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 80140e2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80140e6:	ee36 7a66 	vsub.f32	s14, s12, s13
 80140ea:	e723      	b.n	8013f34 <stroke_thin_path+0x83c>
 80140ec:	4bbd      	ldr	r3, [pc, #756]	@ (80143e4 <stroke_thin_path+0xcec>)
 80140ee:	f8db 2000 	ldr.w	r2, [fp]
 80140f2:	7819      	ldrb	r1, [r3, #0]
 80140f4:	e9d2 340a 	ldrd	r3, r4, [r2, #40]	@ 0x28
 80140f8:	2b00      	cmp	r3, #0
 80140fa:	bf18      	it	ne
 80140fc:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 8014100:	2901      	cmp	r1, #1
 8014102:	ea04 0403 	and.w	r4, r4, r3
 8014106:	d073      	beq.n	80141f0 <stroke_thin_path+0xaf8>
 8014108:	2005      	movs	r0, #5
 801410a:	f009 fe0b 	bl	801dd24 <nema_cl_get_space>
 801410e:	2800      	cmp	r0, #0
 8014110:	f43f ab98 	beq.w	8013844 <stroke_thin_path+0x14c>
 8014114:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8014118:	f44f 7549 	mov.w	r5, #804	@ 0x324
 801411c:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8014120:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8014124:	edc0 8a01 	vstr	s17, [r0, #4]
 8014128:	ed80 9a03 	vstr	s18, [r0, #12]
 801412c:	edc0 9a05 	vstr	s19, [r0, #20]
 8014130:	ed80 aa07 	vstr	s20, [r0, #28]
 8014134:	4bac      	ldr	r3, [pc, #688]	@ (80143e8 <stroke_thin_path+0xcf0>)
 8014136:	f044 040a 	orr.w	r4, r4, #10
 801413a:	6244      	str	r4, [r0, #36]	@ 0x24
 801413c:	6006      	str	r6, [r0, #0]
 801413e:	6085      	str	r5, [r0, #8]
 8014140:	6101      	str	r1, [r0, #16]
 8014142:	6182      	str	r2, [r0, #24]
 8014144:	6203      	str	r3, [r0, #32]
 8014146:	f8da 3000 	ldr.w	r3, [sl]
 801414a:	464c      	mov	r4, r9
 801414c:	f7ff bb7d 	b.w	801384a <stroke_thin_path+0x152>
 8014150:	ee18 7a10 	vmov	r7, s16
 8014154:	ee18 8a10 	vmov	r8, s16
 8014158:	e43d      	b.n	80139d6 <stroke_thin_path+0x2de>
 801415a:	4aa4      	ldr	r2, [pc, #656]	@ (80143ec <stroke_thin_path+0xcf4>)
 801415c:	2507      	movs	r5, #7
 801415e:	6812      	ldr	r2, [r2, #0]
 8014160:	2a00      	cmp	r2, #0
 8014162:	bf14      	ite	ne
 8014164:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8014168:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 801416c:	e494      	b.n	8013a98 <stroke_thin_path+0x3a0>
 801416e:	4aa0      	ldr	r2, [pc, #640]	@ (80143f0 <stroke_thin_path+0xcf8>)
 8014170:	eddd 9a07 	vldr	s19, [sp, #28]
 8014174:	6812      	ldr	r2, [r2, #0]
 8014176:	ed9d aa08 	vldr	s20, [sp, #32]
 801417a:	2a00      	cmp	r2, #0
 801417c:	f000 81a2 	beq.w	80144c4 <stroke_thin_path+0xdcc>
 8014180:	eef0 1a49 	vmov.f32	s3, s18
 8014184:	eeb0 1a68 	vmov.f32	s2, s17
 8014188:	eef0 0a4a 	vmov.f32	s1, s20
 801418c:	eeb0 0a69 	vmov.f32	s0, s19
 8014190:	f7fe fbc2 	bl	8012918 <raster_stroked_line_>
 8014194:	e69c      	b.n	8013ed0 <stroke_thin_path+0x7d8>
 8014196:	9005      	str	r0, [sp, #20]
 8014198:	6822      	ldr	r2, [r4, #0]
 801419a:	1c8b      	adds	r3, r1, #2
 801419c:	9305      	str	r3, [sp, #20]
 801419e:	920b      	str	r2, [sp, #44]	@ 0x2c
 80141a0:	6863      	ldr	r3, [r4, #4]
 80141a2:	3103      	adds	r1, #3
 80141a4:	930c      	str	r3, [sp, #48]	@ 0x30
 80141a6:	9105      	str	r1, [sp, #20]
 80141a8:	4b92      	ldr	r3, [pc, #584]	@ (80143f4 <stroke_thin_path+0xcfc>)
 80141aa:	68a2      	ldr	r2, [r4, #8]
 80141ac:	edd3 0a00 	vldr	s1, [r3]
 80141b0:	ed93 0a03 	vldr	s0, [r3, #12]
 80141b4:	920d      	str	r2, [sp, #52]	@ 0x34
 80141b6:	f01d f819 	bl	80311ec <atan2f>
 80141ba:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
 80141be:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 80141c2:	ee77 7a80 	vadd.f32	s15, s15, s0
 80141c6:	9905      	ldr	r1, [sp, #20]
 80141c8:	f8da 300c 	ldr.w	r3, [sl, #12]
 80141cc:	f8dd c03c 	ldr.w	ip, [sp, #60]	@ 0x3c
 80141d0:	008c      	lsls	r4, r1, #2
 80141d2:	1c48      	adds	r0, r1, #1
 80141d4:	4602      	mov	r2, r0
 80141d6:	9401      	str	r4, [sp, #4]
 80141d8:	f88d 5013 	strb.w	r5, [sp, #19]
 80141dc:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 80141e0:	eb03 0e04 	add.w	lr, r3, r4
 80141e4:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 80141e8:	ed8d 7a12 	vstr	s14, [sp, #72]	@ 0x48
 80141ec:	f7ff badc 	b.w	80137a8 <stroke_thin_path+0xb0>
 80141f0:	4b7c      	ldr	r3, [pc, #496]	@ (80143e4 <stroke_thin_path+0xcec>)
 80141f2:	685b      	ldr	r3, [r3, #4]
 80141f4:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80141f8:	431c      	orrs	r4, r3
 80141fa:	e785      	b.n	8014108 <stroke_thin_path+0xa10>
 80141fc:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8014200:	2d00      	cmp	r5, #0
 8014202:	bf18      	it	ne
 8014204:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 8014208:	4b76      	ldr	r3, [pc, #472]	@ (80143e4 <stroke_thin_path+0xcec>)
 801420a:	4015      	ands	r5, r2
 801420c:	781b      	ldrb	r3, [r3, #0]
 801420e:	2b01      	cmp	r3, #1
 8014210:	d104      	bne.n	801421c <stroke_thin_path+0xb24>
 8014212:	4b74      	ldr	r3, [pc, #464]	@ (80143e4 <stroke_thin_path+0xcec>)
 8014214:	685b      	ldr	r3, [r3, #4]
 8014216:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801421a:	431d      	orrs	r5, r3
 801421c:	2005      	movs	r0, #5
 801421e:	f009 fd81 	bl	801dd24 <nema_cl_get_space>
 8014222:	2800      	cmp	r0, #0
 8014224:	f43f ad0f 	beq.w	8013c46 <stroke_thin_path+0x54e>
 8014228:	f44f 7648 	mov.w	r6, #800	@ 0x320
 801422c:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8014230:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8014234:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8014238:	f045 050a 	orr.w	r5, r5, #10
 801423c:	6245      	str	r5, [r0, #36]	@ 0x24
 801423e:	4d6a      	ldr	r5, [pc, #424]	@ (80143e8 <stroke_thin_path+0xcf0>)
 8014240:	edc0 9a01 	vstr	s19, [r0, #4]
 8014244:	ed80 aa03 	vstr	s20, [r0, #12]
 8014248:	edc0 8a05 	vstr	s17, [r0, #20]
 801424c:	ed80 9a07 	vstr	s18, [r0, #28]
 8014250:	6205      	str	r5, [r0, #32]
 8014252:	6006      	str	r6, [r0, #0]
 8014254:	6081      	str	r1, [r0, #8]
 8014256:	6102      	str	r2, [r0, #16]
 8014258:	6183      	str	r3, [r0, #24]
 801425a:	e4f4      	b.n	8013c46 <stroke_thin_path+0x54e>
 801425c:	4626      	mov	r6, r4
 801425e:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8014262:	eddd da07 	vldr	s27, [sp, #28]
 8014266:	ed9d da08 	vldr	s26, [sp, #32]
 801426a:	eddd ca0b 	vldr	s25, [sp, #44]	@ 0x2c
 801426e:	ed9d ca0c 	vldr	s24, [sp, #48]	@ 0x30
 8014272:	eddd ba0d 	vldr	s23, [sp, #52]	@ 0x34
 8014276:	ed9d ba0e 	vldr	s22, [sp, #56]	@ 0x38
 801427a:	eddd aa09 	vldr	s21, [sp, #36]	@ 0x24
 801427e:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8014282:	4d5d      	ldr	r5, [pc, #372]	@ (80143f8 <stroke_thin_path+0xd00>)
 8014284:	ee7d 4aac 	vadd.f32	s9, s27, s25
 8014288:	ee7c 7aab 	vadd.f32	s15, s25, s23
 801428c:	ee3b 5aaa 	vadd.f32	s10, s23, s21
 8014290:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8014294:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8014298:	ee25 5a28 	vmul.f32	s10, s10, s17
 801429c:	ee74 3aa7 	vadd.f32	s7, s9, s15
 80142a0:	ee37 6a85 	vadd.f32	s12, s15, s10
 80142a4:	ee3d 4a0c 	vadd.f32	s8, s26, s24
 80142a8:	ee7c 7a0b 	vadd.f32	s15, s24, s22
 80142ac:	ee7b 5a0a 	vadd.f32	s11, s22, s20
 80142b0:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80142b4:	ee24 4a28 	vmul.f32	s8, s8, s17
 80142b8:	ee65 5aa8 	vmul.f32	s11, s11, s17
 80142bc:	ee34 3a27 	vadd.f32	s6, s8, s15
 80142c0:	ee63 3aa8 	vmul.f32	s7, s7, s17
 80142c4:	ee26 6a28 	vmul.f32	s12, s12, s17
 80142c8:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80142cc:	ee33 9a86 	vadd.f32	s18, s7, s12
 80142d0:	ee3d 7aaa 	vadd.f32	s14, s27, s21
 80142d4:	ee23 3a28 	vmul.f32	s6, s6, s17
 80142d8:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80142dc:	ee29 9a28 	vmul.f32	s18, s18, s17
 80142e0:	ee27 7a28 	vmul.f32	s14, s14, s17
 80142e4:	ee73 9a27 	vadd.f32	s19, s6, s15
 80142e8:	ee7d 6a0a 	vadd.f32	s13, s26, s20
 80142ec:	ee37 7a49 	vsub.f32	s14, s14, s18
 80142f0:	ee69 9aa8 	vmul.f32	s19, s19, s17
 80142f4:	ee66 6aa8 	vmul.f32	s13, s13, s17
 80142f8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80142fc:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8014300:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014304:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8014308:	bf48      	it	mi
 801430a:	eeb1 7a47 	vnegmi.f32	s14, s14
 801430e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014312:	bf48      	it	mi
 8014314:	eef1 6a66 	vnegmi.f32	s13, s13
 8014318:	b94e      	cbnz	r6, 801432e <stroke_thin_path+0xc36>
 801431a:	eeb4 7ae8 	vcmpe.f32	s14, s17
 801431e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014322:	d504      	bpl.n	801432e <stroke_thin_path+0xc36>
 8014324:	eef4 6ae8 	vcmpe.f32	s13, s17
 8014328:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801432c:	d424      	bmi.n	8014378 <stroke_thin_path+0xc80>
 801432e:	682a      	ldr	r2, [r5, #0]
 8014330:	2a09      	cmp	r2, #9
 8014332:	dc21      	bgt.n	8014378 <stroke_thin_path+0xc80>
 8014334:	492a      	ldr	r1, [pc, #168]	@ (80143e0 <stroke_thin_path+0xce8>)
 8014336:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801433a:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 801433e:	3201      	adds	r2, #1
 8014340:	edc3 aa04 	vstr	s21, [r3, #16]
 8014344:	ed83 aa05 	vstr	s20, [r3, #20]
 8014348:	3401      	adds	r4, #1
 801434a:	eeb0 ba43 	vmov.f32	s22, s6
 801434e:	eef0 ba63 	vmov.f32	s23, s7
 8014352:	eeb0 ca44 	vmov.f32	s24, s8
 8014356:	eef0 ca64 	vmov.f32	s25, s9
 801435a:	ed83 6a00 	vstr	s12, [r3]
 801435e:	edc3 7a01 	vstr	s15, [r3, #4]
 8014362:	ed83 5a02 	vstr	s10, [r3, #8]
 8014366:	edc3 5a03 	vstr	s11, [r3, #12]
 801436a:	602a      	str	r2, [r5, #0]
 801436c:	eeb0 aa69 	vmov.f32	s20, s19
 8014370:	eef0 aa49 	vmov.f32	s21, s18
 8014374:	2600      	movs	r6, #0
 8014376:	e785      	b.n	8014284 <stroke_thin_path+0xb8c>
 8014378:	eef0 1a69 	vmov.f32	s3, s19
 801437c:	eeb0 1a49 	vmov.f32	s2, s18
 8014380:	eef0 0a4d 	vmov.f32	s1, s26
 8014384:	eeb0 0a6d 	vmov.f32	s0, s27
 8014388:	f7fe fac6 	bl	8012918 <raster_stroked_line_>
 801438c:	eef0 1a4a 	vmov.f32	s3, s20
 8014390:	eeb0 1a6a 	vmov.f32	s2, s21
 8014394:	eef0 0a69 	vmov.f32	s1, s19
 8014398:	eeb0 0a49 	vmov.f32	s0, s18
 801439c:	f7fe fabc 	bl	8012918 <raster_stroked_line_>
 80143a0:	682a      	ldr	r2, [r5, #0]
 80143a2:	3c01      	subs	r4, #1
 80143a4:	b1b2      	cbz	r2, 80143d4 <stroke_thin_path+0xcdc>
 80143a6:	3a01      	subs	r2, #1
 80143a8:	490d      	ldr	r1, [pc, #52]	@ (80143e0 <stroke_thin_path+0xce8>)
 80143aa:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80143ae:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80143b2:	eeb0 da4a 	vmov.f32	s26, s20
 80143b6:	eef0 da6a 	vmov.f32	s27, s21
 80143ba:	edd3 ca00 	vldr	s25, [r3]
 80143be:	ed93 ca01 	vldr	s24, [r3, #4]
 80143c2:	edd3 ba02 	vldr	s23, [r3, #8]
 80143c6:	ed93 ba03 	vldr	s22, [r3, #12]
 80143ca:	ed93 aa05 	vldr	s20, [r3, #20]
 80143ce:	edd3 aa04 	vldr	s21, [r3, #16]
 80143d2:	602a      	str	r2, [r5, #0]
 80143d4:	2c00      	cmp	r4, #0
 80143d6:	f47f af55 	bne.w	8014284 <stroke_thin_path+0xb8c>
 80143da:	f7ff ba33 	b.w	8013844 <stroke_thin_path+0x14c>
 80143de:	bf00      	nop
 80143e0:	20083058 	.word	0x20083058
 80143e4:	20000064 	.word	0x20000064
 80143e8:	ff000100 	.word	0xff000100
 80143ec:	20082fb0 	.word	0x20082fb0
 80143f0:	20082fb4 	.word	0x20082fb4
 80143f4:	20083030 	.word	0x20083030
 80143f8:	20083148 	.word	0x20083148
 80143fc:	2e0b      	cmp	r6, #11
 80143fe:	f47f abc0 	bne.w	8013b82 <stroke_thin_path+0x48a>
 8014402:	9005      	str	r0, [sp, #20]
 8014404:	edde 7a00 	vldr	s15, [lr]
 8014408:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801440c:	ee17 1a90 	vmov	r1, s15
 8014410:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8014414:	104c      	asrs	r4, r1, #1
 8014416:	2c00      	cmp	r4, #0
 8014418:	f340 80d4 	ble.w	80145c4 <stroke_thin_path+0xecc>
 801441c:	2100      	movs	r1, #0
 801441e:	f8cd 9008 	str.w	r9, [sp, #8]
 8014422:	9603      	str	r6, [sp, #12]
 8014424:	46a9      	mov	r9, r5
 8014426:	4656      	mov	r6, sl
 8014428:	46a2      	mov	sl, r4
 801442a:	460c      	mov	r4, r1
 801442c:	e036      	b.n	801449c <stroke_thin_path+0xda4>
 801442e:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 8014432:	ee78 8a81 	vadd.f32	s17, s17, s2
 8014436:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 801443a:	9205      	str	r2, [sp, #20]
 801443c:	ed91 9a00 	vldr	s18, [r1]
 8014440:	eddd 1a10 	vldr	s3, [sp, #64]	@ 0x40
 8014444:	ee39 9a21 	vadd.f32	s18, s18, s3
 8014448:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 801444c:	edcd 8a0f 	vstr	s17, [sp, #60]	@ 0x3c
 8014450:	ed8d 9a10 	vstr	s18, [sp, #64]	@ 0x40
 8014454:	f8db 3000 	ldr.w	r3, [fp]
 8014458:	f88d 9054 	strb.w	r9, [sp, #84]	@ 0x54
 801445c:	7f1a      	ldrb	r2, [r3, #28]
 801445e:	2a00      	cmp	r2, #0
 8014460:	d161      	bne.n	8014526 <stroke_thin_path+0xe2e>
 8014462:	4a82      	ldr	r2, [pc, #520]	@ (801466c <stroke_thin_path+0xf74>)
 8014464:	eddd 9a07 	vldr	s19, [sp, #28]
 8014468:	6812      	ldr	r2, [r2, #0]
 801446a:	ed9d aa08 	vldr	s20, [sp, #32]
 801446e:	2a00      	cmp	r2, #0
 8014470:	f000 80ca 	beq.w	8014608 <stroke_thin_path+0xf10>
 8014474:	eef0 1a49 	vmov.f32	s3, s18
 8014478:	eeb0 1a68 	vmov.f32	s2, s17
 801447c:	eef0 0a4a 	vmov.f32	s1, s20
 8014480:	eeb0 0a69 	vmov.f32	s0, s19
 8014484:	f7fe fa48 	bl	8012918 <raster_stroked_line_>
 8014488:	e898 0003 	ldmia.w	r8, {r0, r1}
 801448c:	3401      	adds	r4, #1
 801448e:	4554      	cmp	r4, sl
 8014490:	e887 0003 	stmia.w	r7, {r0, r1}
 8014494:	f000 8091 	beq.w	80145ba <stroke_thin_path+0xec2>
 8014498:	68f3      	ldr	r3, [r6, #12]
 801449a:	9a05      	ldr	r2, [sp, #20]
 801449c:	0090      	lsls	r0, r2, #2
 801449e:	1d01      	adds	r1, r0, #4
 80144a0:	4419      	add	r1, r3
 80144a2:	9d00      	ldr	r5, [sp, #0]
 80144a4:	4403      	add	r3, r0
 80144a6:	1c50      	adds	r0, r2, #1
 80144a8:	9005      	str	r0, [sp, #20]
 80144aa:	3202      	adds	r2, #2
 80144ac:	edd3 8a00 	vldr	s17, [r3]
 80144b0:	2d00      	cmp	r5, #0
 80144b2:	d1bc      	bne.n	801442e <stroke_thin_path+0xd36>
 80144b4:	edcd 8a09 	vstr	s17, [sp, #36]	@ 0x24
 80144b8:	9205      	str	r2, [sp, #20]
 80144ba:	ed91 9a00 	vldr	s18, [r1]
 80144be:	ed8d 9a0a 	vstr	s18, [sp, #40]	@ 0x28
 80144c2:	e7c3      	b.n	801444c <stroke_thin_path+0xd54>
 80144c4:	e9d3 240a 	ldrd	r2, r4, [r3, #40]	@ 0x28
 80144c8:	2a00      	cmp	r2, #0
 80144ca:	bf18      	it	ne
 80144cc:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 80144d0:	4b67      	ldr	r3, [pc, #412]	@ (8014670 <stroke_thin_path+0xf78>)
 80144d2:	4014      	ands	r4, r2
 80144d4:	781b      	ldrb	r3, [r3, #0]
 80144d6:	2b01      	cmp	r3, #1
 80144d8:	d104      	bne.n	80144e4 <stroke_thin_path+0xdec>
 80144da:	4b65      	ldr	r3, [pc, #404]	@ (8014670 <stroke_thin_path+0xf78>)
 80144dc:	685b      	ldr	r3, [r3, #4]
 80144de:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80144e2:	431c      	orrs	r4, r3
 80144e4:	2005      	movs	r0, #5
 80144e6:	f009 fc1d 	bl	801dd24 <nema_cl_get_space>
 80144ea:	2800      	cmp	r0, #0
 80144ec:	f43f acf0 	beq.w	8013ed0 <stroke_thin_path+0x7d8>
 80144f0:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 80144f4:	f44f 7749 	mov.w	r7, #804	@ 0x324
 80144f8:	f44f 714c 	mov.w	r1, #816	@ 0x330
 80144fc:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8014500:	4b5c      	ldr	r3, [pc, #368]	@ (8014674 <stroke_thin_path+0xf7c>)
 8014502:	f044 040a 	orr.w	r4, r4, #10
 8014506:	6244      	str	r4, [r0, #36]	@ 0x24
 8014508:	edc0 9a01 	vstr	s19, [r0, #4]
 801450c:	ed80 aa03 	vstr	s20, [r0, #12]
 8014510:	edc0 8a05 	vstr	s17, [r0, #20]
 8014514:	ed80 9a07 	vstr	s18, [r0, #28]
 8014518:	f8c0 c000 	str.w	ip, [r0]
 801451c:	6087      	str	r7, [r0, #8]
 801451e:	6101      	str	r1, [r0, #16]
 8014520:	6182      	str	r2, [r0, #24]
 8014522:	6203      	str	r3, [r0, #32]
 8014524:	e4d4      	b.n	8013ed0 <stroke_thin_path+0x7d8>
 8014526:	4a54      	ldr	r2, [pc, #336]	@ (8014678 <stroke_thin_path+0xf80>)
 8014528:	4b54      	ldr	r3, [pc, #336]	@ (801467c <stroke_thin_path+0xf84>)
 801452a:	6812      	ldr	r2, [r2, #0]
 801452c:	2007      	movs	r0, #7
 801452e:	9201      	str	r2, [sp, #4]
 8014530:	681d      	ldr	r5, [r3, #0]
 8014532:	f009 fbf7 	bl	801dd24 <nema_cl_get_space>
 8014536:	2800      	cmp	r0, #0
 8014538:	d0a6      	beq.n	8014488 <stroke_thin_path+0xd90>
 801453a:	4a4d      	ldr	r2, [pc, #308]	@ (8014670 <stroke_thin_path+0xf78>)
 801453c:	f8db 3000 	ldr.w	r3, [fp]
 8014540:	7812      	ldrb	r2, [r2, #0]
 8014542:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014544:	2a01      	cmp	r2, #1
 8014546:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 801454a:	d104      	bne.n	8014556 <stroke_thin_path+0xe5e>
 801454c:	4a48      	ldr	r2, [pc, #288]	@ (8014670 <stroke_thin_path+0xf78>)
 801454e:	6852      	ldr	r2, [r2, #4]
 8014550:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8014554:	4313      	orrs	r3, r2
 8014556:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801455a:	6002      	str	r2, [r0, #0]
 801455c:	eddd 7a07 	vldr	s15, [sp, #28]
 8014560:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8014564:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8014568:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801456c:	6082      	str	r2, [r0, #8]
 801456e:	edc0 7a01 	vstr	s15, [r0, #4]
 8014572:	f8c0 e018 	str.w	lr, [r0, #24]
 8014576:	f8dd e020 	ldr.w	lr, [sp, #32]
 801457a:	f8c0 c010 	str.w	ip, [r0, #16]
 801457e:	f8c0 e00c 	str.w	lr, [r0, #12]
 8014582:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 8014586:	f043 0304 	orr.w	r3, r3, #4
 801458a:	6343      	str	r3, [r0, #52]	@ 0x34
 801458c:	9b01      	ldr	r3, [sp, #4]
 801458e:	f8c0 c014 	str.w	ip, [r0, #20]
 8014592:	6243      	str	r3, [r0, #36]	@ 0x24
 8014594:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014596:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801459a:	61c3      	str	r3, [r0, #28]
 801459c:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 80145a0:	4a34      	ldr	r2, [pc, #208]	@ (8014674 <stroke_thin_path+0xf7c>)
 80145a2:	3401      	adds	r4, #1
 80145a4:	4554      	cmp	r4, sl
 80145a6:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80145a8:	6302      	str	r2, [r0, #48]	@ 0x30
 80145aa:	6201      	str	r1, [r0, #32]
 80145ac:	6283      	str	r3, [r0, #40]	@ 0x28
 80145ae:	e898 0003 	ldmia.w	r8, {r0, r1}
 80145b2:	e887 0003 	stmia.w	r7, {r0, r1}
 80145b6:	f47f af6f 	bne.w	8014498 <stroke_thin_path+0xda0>
 80145ba:	464d      	mov	r5, r9
 80145bc:	46b2      	mov	sl, r6
 80145be:	f8dd 9008 	ldr.w	r9, [sp, #8]
 80145c2:	9e03      	ldr	r6, [sp, #12]
 80145c4:	f8db 3000 	ldr.w	r3, [fp]
 80145c8:	7f1b      	ldrb	r3, [r3, #28]
 80145ca:	b1b3      	cbz	r3, 80145fa <stroke_thin_path+0xf02>
 80145cc:	ed9d 7a0f 	vldr	s14, [sp, #60]	@ 0x3c
 80145d0:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 80145d4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80145d8:	eef5 7a40 	vcmp.f32	s15, #0.0
 80145dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145e0:	d10b      	bne.n	80145fa <stroke_thin_path+0xf02>
 80145e2:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 80145e6:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 80145ea:	ee77 7a67 	vsub.f32	s15, s14, s15
 80145ee:	eef5 7a40 	vcmp.f32	s15, #0.0
 80145f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145f6:	f43f ac6b 	beq.w	8013ed0 <stroke_thin_path+0x7d8>
 80145fa:	2301      	movs	r3, #1
 80145fc:	f88d 3011 	strb.w	r3, [sp, #17]
 8014600:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8014604:	f7ff b908 	b.w	8013818 <stroke_thin_path+0x120>
 8014608:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 801460c:	2d00      	cmp	r5, #0
 801460e:	bf18      	it	ne
 8014610:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 8014614:	4b16      	ldr	r3, [pc, #88]	@ (8014670 <stroke_thin_path+0xf78>)
 8014616:	4015      	ands	r5, r2
 8014618:	781b      	ldrb	r3, [r3, #0]
 801461a:	2b01      	cmp	r3, #1
 801461c:	d104      	bne.n	8014628 <stroke_thin_path+0xf30>
 801461e:	4b14      	ldr	r3, [pc, #80]	@ (8014670 <stroke_thin_path+0xf78>)
 8014620:	685b      	ldr	r3, [r3, #4]
 8014622:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014626:	431d      	orrs	r5, r3
 8014628:	2005      	movs	r0, #5
 801462a:	f009 fb7b 	bl	801dd24 <nema_cl_get_space>
 801462e:	2800      	cmp	r0, #0
 8014630:	f43f af2a 	beq.w	8014488 <stroke_thin_path+0xd90>
 8014634:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8014638:	f44f 7149 	mov.w	r1, #804	@ 0x324
 801463c:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8014640:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8014644:	f045 050a 	orr.w	r5, r5, #10
 8014648:	6245      	str	r5, [r0, #36]	@ 0x24
 801464a:	4d0a      	ldr	r5, [pc, #40]	@ (8014674 <stroke_thin_path+0xf7c>)
 801464c:	edc0 9a01 	vstr	s19, [r0, #4]
 8014650:	ed80 aa03 	vstr	s20, [r0, #12]
 8014654:	edc0 8a05 	vstr	s17, [r0, #20]
 8014658:	ed80 9a07 	vstr	s18, [r0, #28]
 801465c:	6205      	str	r5, [r0, #32]
 801465e:	f8c0 c000 	str.w	ip, [r0]
 8014662:	6081      	str	r1, [r0, #8]
 8014664:	6102      	str	r2, [r0, #16]
 8014666:	6183      	str	r3, [r0, #24]
 8014668:	e70e      	b.n	8014488 <stroke_thin_path+0xd90>
 801466a:	bf00      	nop
 801466c:	20082fb4 	.word	0x20082fb4
 8014670:	20000064 	.word	0x20000064
 8014674:	ff000100 	.word	0xff000100
 8014678:	20082fb8 	.word	0x20082fb8
 801467c:	20082fbc 	.word	0x20082fbc

08014680 <stroke_path>:
 8014680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014684:	ed2d 8b0c 	vpush	{d8-d13}
 8014688:	4682      	mov	sl, r0
 801468a:	b09b      	sub	sp, #108	@ 0x6c
 801468c:	2246      	movs	r2, #70	@ 0x46
 801468e:	2100      	movs	r1, #0
 8014690:	f10d 0022 	add.w	r0, sp, #34	@ 0x22
 8014694:	f01e f937 	bl	8032906 <memset>
 8014698:	46d1      	mov	r9, sl
 801469a:	2301      	movs	r3, #1
 801469c:	2500      	movs	r5, #0
 801469e:	f240 1201 	movw	r2, #257	@ 0x101
 80146a2:	f88d 3022 	strb.w	r3, [sp, #34]	@ 0x22
 80146a6:	f8d9 3000 	ldr.w	r3, [r9]
 80146aa:	f8ad 2020 	strh.w	r2, [sp, #32]
 80146ae:	42ab      	cmp	r3, r5
 80146b0:	f8df b1cc 	ldr.w	fp, [pc, #460]	@ 8014880 <stroke_path+0x200>
 80146b4:	ed9f 8a70 	vldr	s16, [pc, #448]	@ 8014878 <stroke_path+0x1f8>
 80146b8:	f240 809c 	bls.w	80147f4 <stroke_path+0x174>
 80146bc:	f8d9 3008 	ldr.w	r3, [r9, #8]
 80146c0:	af0d      	add	r7, sp, #52	@ 0x34
 80146c2:	5d5c      	ldrb	r4, [r3, r5]
 80146c4:	ae0b      	add	r6, sp, #44	@ 0x2c
 80146c6:	f004 0a6f 	and.w	sl, r4, #111	@ 0x6f
 80146ca:	1c6b      	adds	r3, r5, #1
 80146cc:	f1ba 0f01 	cmp.w	sl, #1
 80146d0:	e897 0003 	ldmia.w	r7, {r0, r1}
 80146d4:	9301      	str	r3, [sp, #4]
 80146d6:	f004 0810 	and.w	r8, r4, #16
 80146da:	e886 0003 	stmia.w	r6, {r0, r1}
 80146de:	f000 80d1 	beq.w	8014884 <stroke_path+0x204>
 80146e2:	0662      	lsls	r2, r4, #25
 80146e4:	f000 8095 	beq.w	8014812 <stroke_path+0x192>
 80146e8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80146ea:	f89d e064 	ldrb.w	lr, [sp, #100]	@ 0x64
 80146ee:	b911      	cbnz	r1, 80146f6 <stroke_path+0x76>
 80146f0:	2301      	movs	r3, #1
 80146f2:	f88d 3020 	strb.w	r3, [sp, #32]
 80146f6:	2200      	movs	r2, #0
 80146f8:	f8d9 300c 	ldr.w	r3, [r9, #12]
 80146fc:	0088      	lsls	r0, r1, #2
 80146fe:	181d      	adds	r5, r3, r0
 8014700:	9002      	str	r0, [sp, #8]
 8014702:	f1ba 0f06 	cmp.w	sl, #6
 8014706:	f101 0001 	add.w	r0, r1, #1
 801470a:	f88d 2022 	strb.w	r2, [sp, #34]	@ 0x22
 801470e:	46ac      	mov	ip, r5
 8014710:	4602      	mov	r2, r0
 8014712:	f000 8337 	beq.w	8014d84 <stroke_path+0x704>
 8014716:	f1ba 0f05 	cmp.w	sl, #5
 801471a:	f000 840c 	beq.w	8014f36 <stroke_path+0x8b6>
 801471e:	f1ba 0f07 	cmp.w	sl, #7
 8014722:	f00e 0e6f 	and.w	lr, lr, #111	@ 0x6f
 8014726:	f000 8565 	beq.w	80151f4 <stroke_path+0xb74>
 801472a:	f1ba 0f08 	cmp.w	sl, #8
 801472e:	f000 861f 	beq.w	8015370 <stroke_path+0xcf0>
 8014732:	f004 0e0f 	and.w	lr, r4, #15
 8014736:	f1be 0f09 	cmp.w	lr, #9
 801473a:	f000 8669 	beq.w	8015410 <stroke_path+0xd90>
 801473e:	f1ba 0f04 	cmp.w	sl, #4
 8014742:	f040 8370 	bne.w	8014e26 <stroke_path+0x7a6>
 8014746:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801474a:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801474e:	9009      	str	r0, [sp, #36]	@ 0x24
 8014750:	eddc 7a00 	vldr	s15, [ip]
 8014754:	f1b8 0f00 	cmp.w	r8, #0
 8014758:	f000 83ea 	beq.w	8014f30 <stroke_path+0x8b0>
 801475c:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8014760:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014764:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014768:	4d44      	ldr	r5, [pc, #272]	@ (801487c <stroke_path+0x1fc>)
 801476a:	682b      	ldr	r3, [r5, #0]
 801476c:	7f1b      	ldrb	r3, [r3, #28]
 801476e:	2b00      	cmp	r3, #0
 8014770:	f000 82fe 	beq.w	8014d70 <stroke_path+0x6f0>
 8014774:	ed9d 7a17 	vldr	s14, [sp, #92]	@ 0x5c
 8014778:	ee36 7ac7 	vsub.f32	s14, s13, s14
 801477c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8014780:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014784:	d109      	bne.n	801479a <stroke_path+0x11a>
 8014786:	ed9d 7a18 	vldr	s14, [sp, #96]	@ 0x60
 801478a:	ee37 7ac7 	vsub.f32	s14, s15, s14
 801478e:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8014792:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014796:	f000 8427 	beq.w	8014fe8 <stroke_path+0x968>
 801479a:	2301      	movs	r3, #1
 801479c:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 80147a0:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 80147a4:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 80147a8:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 80147ac:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 80147b0:	2b00      	cmp	r3, #0
 80147b2:	d146      	bne.n	8014842 <stroke_path+0x1c2>
 80147b4:	0623      	lsls	r3, r4, #24
 80147b6:	d444      	bmi.n	8014842 <stroke_path+0x1c2>
 80147b8:	f004 036d 	and.w	r3, r4, #109	@ 0x6d
 80147bc:	2b05      	cmp	r3, #5
 80147be:	f000 81dd 	beq.w	8014b7c <stroke_path+0x4fc>
 80147c2:	f1ba 0f06 	cmp.w	sl, #6
 80147c6:	f000 8283 	beq.w	8014cd0 <stroke_path+0x650>
 80147ca:	f1ba 0f08 	cmp.w	sl, #8
 80147ce:	f000 827f 	beq.w	8014cd0 <stroke_path+0x650>
 80147d2:	f004 040f 	and.w	r4, r4, #15
 80147d6:	2c09      	cmp	r4, #9
 80147d8:	f000 85bf 	beq.w	801535a <stroke_path+0xcda>
 80147dc:	f1aa 0a0a 	sub.w	sl, sl, #10
 80147e0:	f1ba 0f01 	cmp.w	sl, #1
 80147e4:	f200 83d5 	bhi.w	8014f92 <stroke_path+0x912>
 80147e8:	9d01      	ldr	r5, [sp, #4]
 80147ea:	f8d9 3000 	ldr.w	r3, [r9]
 80147ee:	42ab      	cmp	r3, r5
 80147f0:	f63f af64 	bhi.w	80146bc <stroke_path+0x3c>
 80147f4:	f89d 0021 	ldrb.w	r0, [sp, #33]	@ 0x21
 80147f8:	2100      	movs	r1, #0
 80147fa:	fab0 f080 	clz	r0, r0
 80147fe:	0940      	lsrs	r0, r0, #5
 8014800:	f7fd fe7a 	bl	80124f8 <flush_lines_>
 8014804:	2400      	movs	r4, #0
 8014806:	4620      	mov	r0, r4
 8014808:	b01b      	add	sp, #108	@ 0x6c
 801480a:	ecbd 8b0c 	vpop	{d8-d13}
 801480e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014812:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8014816:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 801481a:	2b01      	cmp	r3, #1
 801481c:	f04f 0300 	mov.w	r3, #0
 8014820:	bf07      	ittee	eq
 8014822:	ee18 2a10 	vmoveq	r2, s16
 8014826:	ee18 1a10 	vmoveq	r1, s16
 801482a:	9917      	ldrne	r1, [sp, #92]	@ 0x5c
 801482c:	9a18      	ldrne	r2, [sp, #96]	@ 0x60
 801482e:	f88d 3022 	strb.w	r3, [sp, #34]	@ 0x22
 8014832:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8014836:	0623      	lsls	r3, r4, #24
 8014838:	920e      	str	r2, [sp, #56]	@ 0x38
 801483a:	910d      	str	r1, [sp, #52]	@ 0x34
 801483c:	9113      	str	r1, [sp, #76]	@ 0x4c
 801483e:	9214      	str	r2, [sp, #80]	@ 0x50
 8014840:	d5ba      	bpl.n	80147b8 <stroke_path+0x138>
 8014842:	4d0e      	ldr	r5, [pc, #56]	@ (801487c <stroke_path+0x1fc>)
 8014844:	682b      	ldr	r3, [r5, #0]
 8014846:	7f5e      	ldrb	r6, [r3, #29]
 8014848:	f016 0610 	ands.w	r6, r6, #16
 801484c:	d055      	beq.n	80148fa <stroke_path+0x27a>
 801484e:	2300      	movs	r3, #0
 8014850:	461a      	mov	r2, r3
 8014852:	4619      	mov	r1, r3
 8014854:	4618      	mov	r0, r3
 8014856:	f7fd fbf1 	bl	801203c <nema_enable_aa>
 801485a:	eddb 7a08 	vldr	s15, [fp, #32]
 801485e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014862:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014866:	4606      	mov	r6, r0
 8014868:	f340 80a6 	ble.w	80149b8 <stroke_path+0x338>
 801486c:	682b      	ldr	r3, [r5, #0]
 801486e:	7f5b      	ldrb	r3, [r3, #29]
 8014870:	06df      	lsls	r7, r3, #27
 8014872:	d450      	bmi.n	8014916 <stroke_path+0x296>
 8014874:	e048      	b.n	8014908 <stroke_path+0x288>
 8014876:	bf00      	nop
 8014878:	00000000 	.word	0x00000000
 801487c:	20082fac 	.word	0x20082fac
 8014880:	20082ffc 	.word	0x20082ffc
 8014884:	f89d 2021 	ldrb.w	r2, [sp, #33]	@ 0x21
 8014888:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801488a:	2a01      	cmp	r2, #1
 801488c:	4db6      	ldr	r5, [pc, #728]	@ (8014b68 <stroke_path+0x4e8>)
 801488e:	f000 81d4 	beq.w	8014c3a <stroke_path+0x5ba>
 8014892:	2001      	movs	r0, #1
 8014894:	2600      	movs	r6, #0
 8014896:	0099      	lsls	r1, r3, #2
 8014898:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801489c:	1d0f      	adds	r7, r1, #4
 801489e:	4417      	add	r7, r2
 80148a0:	440a      	add	r2, r1
 80148a2:	1819      	adds	r1, r3, r0
 80148a4:	930a      	str	r3, [sp, #40]	@ 0x28
 80148a6:	f88d 6020 	strb.w	r6, [sp, #32]
 80148aa:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 80148ae:	3302      	adds	r3, #2
 80148b0:	9109      	str	r1, [sp, #36]	@ 0x24
 80148b2:	f1b8 0f00 	cmp.w	r8, #0
 80148b6:	f000 81b2 	beq.w	8014c1e <stroke_path+0x59e>
 80148ba:	edd2 7a00 	vldr	s15, [r2]
 80148be:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 80148c2:	ee76 6aa7 	vadd.f32	s13, s13, s15
 80148c6:	9309      	str	r3, [sp, #36]	@ 0x24
 80148c8:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80148cc:	edd7 7a00 	vldr	s15, [r7]
 80148d0:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 80148d4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80148d8:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 80148dc:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
 80148e0:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 80148e4:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 80148e8:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 80148ec:	682b      	ldr	r3, [r5, #0]
 80148ee:	f88d 4064 	strb.w	r4, [sp, #100]	@ 0x64
 80148f2:	7f5e      	ldrb	r6, [r3, #29]
 80148f4:	f016 0610 	ands.w	r6, r6, #16
 80148f8:	d1a9      	bne.n	801484e <stroke_path+0x1ce>
 80148fa:	eddb 7a08 	vldr	s15, [fp, #32]
 80148fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014902:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014906:	dd57      	ble.n	80149b8 <stroke_path+0x338>
 8014908:	2201      	movs	r2, #1
 801490a:	2300      	movs	r3, #0
 801490c:	4611      	mov	r1, r2
 801490e:	4610      	mov	r0, r2
 8014910:	f7fd fb94 	bl	801203c <nema_enable_aa>
 8014914:	4606      	mov	r6, r0
 8014916:	2009      	movs	r0, #9
 8014918:	ed9b ba00 	vldr	s22, [fp]
 801491c:	f8db 8010 	ldr.w	r8, [fp, #16]
 8014920:	eddb aa01 	vldr	s21, [fp, #4]
 8014924:	f8db 7014 	ldr.w	r7, [fp, #20]
 8014928:	ed9b aa02 	vldr	s20, [fp, #8]
 801492c:	eddb 9a06 	vldr	s19, [fp, #24]
 8014930:	ed9b 9a03 	vldr	s18, [fp, #12]
 8014934:	eddb 8a07 	vldr	s17, [fp, #28]
 8014938:	f009 f9f4 	bl	801dd24 <nema_cl_get_space>
 801493c:	b3a8      	cbz	r0, 80149aa <stroke_path+0x32a>
 801493e:	f44f 7349 	mov.w	r3, #804	@ 0x324
 8014942:	f8c0 800c 	str.w	r8, [r0, #12]
 8014946:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 801494a:	f44f 784c 	mov.w	r8, #816	@ 0x330
 801494e:	ed80 ba01 	vstr	s22, [r0, #4]
 8014952:	6083      	str	r3, [r0, #8]
 8014954:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014958:	61c7      	str	r7, [r0, #28]
 801495a:	f44f 7151 	mov.w	r1, #836	@ 0x344
 801495e:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8014962:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8014966:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801496a:	edc0 aa05 	vstr	s21, [r0, #20]
 801496e:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014972:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014976:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 801497a:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 801497e:	f8df e1f4 	ldr.w	lr, [pc, #500]	@ 8014b74 <stroke_path+0x4f4>
 8014982:	f8c0 8010 	str.w	r8, [r0, #16]
 8014986:	f8c0 a000 	str.w	sl, [r0]
 801498a:	f8de e010 	ldr.w	lr, [lr, #16]
 801498e:	f8df 81e8 	ldr.w	r8, [pc, #488]	@ 8014b78 <stroke_path+0x4f8>
 8014992:	f04e 0e05 	orr.w	lr, lr, #5
 8014996:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 801499a:	f8c0 c018 	str.w	ip, [r0, #24]
 801499e:	6207      	str	r7, [r0, #32]
 80149a0:	6281      	str	r1, [r0, #40]	@ 0x28
 80149a2:	6302      	str	r2, [r0, #48]	@ 0x30
 80149a4:	6383      	str	r3, [r0, #56]	@ 0x38
 80149a6:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 80149aa:	682b      	ldr	r3, [r5, #0]
 80149ac:	ed8b 8a08 	vstr	s16, [fp, #32]
 80149b0:	7f5b      	ldrb	r3, [r3, #29]
 80149b2:	06d8      	lsls	r0, r3, #27
 80149b4:	f140 813d 	bpl.w	8014c32 <stroke_path+0x5b2>
 80149b8:	4b6c      	ldr	r3, [pc, #432]	@ (8014b6c <stroke_path+0x4ec>)
 80149ba:	edd3 7a08 	vldr	s15, [r3, #32]
 80149be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80149c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80149c6:	dd6d      	ble.n	8014aa4 <stroke_path+0x424>
 80149c8:	0621      	lsls	r1, r4, #24
 80149ca:	d46b      	bmi.n	8014aa4 <stroke_path+0x424>
 80149cc:	682b      	ldr	r3, [r5, #0]
 80149ce:	4c68      	ldr	r4, [pc, #416]	@ (8014b70 <stroke_path+0x4f0>)
 80149d0:	7f59      	ldrb	r1, [r3, #29]
 80149d2:	f011 0110 	ands.w	r1, r1, #16
 80149d6:	d10a      	bne.n	80149ee <stroke_path+0x36e>
 80149d8:	6823      	ldr	r3, [r4, #0]
 80149da:	2b01      	cmp	r3, #1
 80149dc:	bf13      	iteet	ne
 80149de:	2301      	movne	r3, #1
 80149e0:	461a      	moveq	r2, r3
 80149e2:	4619      	moveq	r1, r3
 80149e4:	461a      	movne	r2, r3
 80149e6:	4618      	mov	r0, r3
 80149e8:	f7fd fb28 	bl	801203c <nema_enable_aa>
 80149ec:	4606      	mov	r6, r0
 80149ee:	4b5f      	ldr	r3, [pc, #380]	@ (8014b6c <stroke_path+0x4ec>)
 80149f0:	2009      	movs	r0, #9
 80149f2:	ed93 ba00 	vldr	s22, [r3]
 80149f6:	f8d3 8010 	ldr.w	r8, [r3, #16]
 80149fa:	edd3 aa01 	vldr	s21, [r3, #4]
 80149fe:	695f      	ldr	r7, [r3, #20]
 8014a00:	ed93 aa02 	vldr	s20, [r3, #8]
 8014a04:	edd3 9a06 	vldr	s19, [r3, #24]
 8014a08:	ed93 9a03 	vldr	s18, [r3, #12]
 8014a0c:	edd3 8a07 	vldr	s17, [r3, #28]
 8014a10:	f009 f988 	bl	801dd24 <nema_cl_get_space>
 8014a14:	b3a8      	cbz	r0, 8014a82 <stroke_path+0x402>
 8014a16:	f44f 7349 	mov.w	r3, #804	@ 0x324
 8014a1a:	f8c0 800c 	str.w	r8, [r0, #12]
 8014a1e:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8014a22:	f44f 784c 	mov.w	r8, #816	@ 0x330
 8014a26:	ed80 ba01 	vstr	s22, [r0, #4]
 8014a2a:	6083      	str	r3, [r0, #8]
 8014a2c:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014a30:	61c7      	str	r7, [r0, #28]
 8014a32:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8014a36:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8014a3a:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8014a3e:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8014a42:	edc0 aa05 	vstr	s21, [r0, #20]
 8014a46:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014a4a:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014a4e:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 8014a52:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 8014a56:	f8df e11c 	ldr.w	lr, [pc, #284]	@ 8014b74 <stroke_path+0x4f4>
 8014a5a:	f8c0 8010 	str.w	r8, [r0, #16]
 8014a5e:	f8c0 a000 	str.w	sl, [r0]
 8014a62:	f8de e010 	ldr.w	lr, [lr, #16]
 8014a66:	f8df 8110 	ldr.w	r8, [pc, #272]	@ 8014b78 <stroke_path+0x4f8>
 8014a6a:	f04e 0e05 	orr.w	lr, lr, #5
 8014a6e:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 8014a72:	f8c0 c018 	str.w	ip, [r0, #24]
 8014a76:	6207      	str	r7, [r0, #32]
 8014a78:	6281      	str	r1, [r0, #40]	@ 0x28
 8014a7a:	6302      	str	r2, [r0, #48]	@ 0x30
 8014a7c:	6383      	str	r3, [r0, #56]	@ 0x38
 8014a7e:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 8014a82:	682b      	ldr	r3, [r5, #0]
 8014a84:	4a39      	ldr	r2, [pc, #228]	@ (8014b6c <stroke_path+0x4ec>)
 8014a86:	7f5b      	ldrb	r3, [r3, #29]
 8014a88:	ed82 8a08 	vstr	s16, [r2, #32]
 8014a8c:	06da      	lsls	r2, r3, #27
 8014a8e:	f140 8175 	bpl.w	8014d7c <stroke_path+0x6fc>
 8014a92:	6823      	ldr	r3, [r4, #0]
 8014a94:	2b02      	cmp	r3, #2
 8014a96:	d014      	beq.n	8014ac2 <stroke_path+0x442>
 8014a98:	4630      	mov	r0, r6
 8014a9a:	f7fd faf1 	bl	8012080 <nema_enable_aa_flags>
 8014a9e:	2300      	movs	r3, #0
 8014aa0:	6023      	str	r3, [r4, #0]
 8014aa2:	e6a1      	b.n	80147e8 <stroke_path+0x168>
 8014aa4:	4c32      	ldr	r4, [pc, #200]	@ (8014b70 <stroke_path+0x4f0>)
 8014aa6:	6823      	ldr	r3, [r4, #0]
 8014aa8:	2b02      	cmp	r3, #2
 8014aaa:	d1f5      	bne.n	8014a98 <stroke_path+0x418>
 8014aac:	682b      	ldr	r3, [r5, #0]
 8014aae:	7f5b      	ldrb	r3, [r3, #29]
 8014ab0:	f013 0310 	ands.w	r3, r3, #16
 8014ab4:	d105      	bne.n	8014ac2 <stroke_path+0x442>
 8014ab6:	2201      	movs	r2, #1
 8014ab8:	4619      	mov	r1, r3
 8014aba:	4610      	mov	r0, r2
 8014abc:	f7fd fabe 	bl	801203c <nema_enable_aa>
 8014ac0:	4606      	mov	r6, r0
 8014ac2:	4b2a      	ldr	r3, [pc, #168]	@ (8014b6c <stroke_path+0x4ec>)
 8014ac4:	2009      	movs	r0, #9
 8014ac6:	ed93 ba01 	vldr	s22, [r3, #4]
 8014aca:	f8d3 8014 	ldr.w	r8, [r3, #20]
 8014ace:	eddb aa00 	vldr	s21, [fp]
 8014ad2:	f8db 7010 	ldr.w	r7, [fp, #16]
 8014ad6:	ed93 aa02 	vldr	s20, [r3, #8]
 8014ada:	edd3 9a06 	vldr	s19, [r3, #24]
 8014ade:	ed9b 9a03 	vldr	s18, [fp, #12]
 8014ae2:	eddb 8a07 	vldr	s17, [fp, #28]
 8014ae6:	f009 f91d 	bl	801dd24 <nema_cl_get_space>
 8014aea:	b3a8      	cbz	r0, 8014b58 <stroke_path+0x4d8>
 8014aec:	f44f 7349 	mov.w	r3, #804	@ 0x324
 8014af0:	f8c0 800c 	str.w	r8, [r0, #12]
 8014af4:	f44f 7a48 	mov.w	sl, #800	@ 0x320
 8014af8:	f44f 784c 	mov.w	r8, #816	@ 0x330
 8014afc:	ed80 ba01 	vstr	s22, [r0, #4]
 8014b00:	6083      	str	r3, [r0, #8]
 8014b02:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014b06:	61c7      	str	r7, [r0, #28]
 8014b08:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8014b0c:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8014b10:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8014b14:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8014b18:	edc0 aa05 	vstr	s21, [r0, #20]
 8014b1c:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 8014b20:	edc0 9a0b 	vstr	s19, [r0, #44]	@ 0x2c
 8014b24:	ed80 9a0d 	vstr	s18, [r0, #52]	@ 0x34
 8014b28:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 8014b2c:	f8df e044 	ldr.w	lr, [pc, #68]	@ 8014b74 <stroke_path+0x4f4>
 8014b30:	f8c0 8010 	str.w	r8, [r0, #16]
 8014b34:	f8c0 a000 	str.w	sl, [r0]
 8014b38:	f8de e010 	ldr.w	lr, [lr, #16]
 8014b3c:	f8df 8038 	ldr.w	r8, [pc, #56]	@ 8014b78 <stroke_path+0x4f8>
 8014b40:	f04e 0e05 	orr.w	lr, lr, #5
 8014b44:	f8c0 e044 	str.w	lr, [r0, #68]	@ 0x44
 8014b48:	f8c0 c018 	str.w	ip, [r0, #24]
 8014b4c:	6207      	str	r7, [r0, #32]
 8014b4e:	6281      	str	r1, [r0, #40]	@ 0x28
 8014b50:	6302      	str	r2, [r0, #48]	@ 0x30
 8014b52:	6383      	str	r3, [r0, #56]	@ 0x38
 8014b54:	f8c0 8040 	str.w	r8, [r0, #64]	@ 0x40
 8014b58:	682b      	ldr	r3, [r5, #0]
 8014b5a:	7f5b      	ldrb	r3, [r3, #29]
 8014b5c:	06db      	lsls	r3, r3, #27
 8014b5e:	d49b      	bmi.n	8014a98 <stroke_path+0x418>
 8014b60:	4630      	mov	r0, r6
 8014b62:	f7fd fa8d 	bl	8012080 <nema_enable_aa_flags>
 8014b66:	e797      	b.n	8014a98 <stroke_path+0x418>
 8014b68:	20082fac 	.word	0x20082fac
 8014b6c:	20082fc4 	.word	0x20082fc4
 8014b70:	20083028 	.word	0x20083028
 8014b74:	20000064 	.word	0x20000064
 8014b78:	ff000100 	.word	0xff000100
 8014b7c:	4dba      	ldr	r5, [pc, #744]	@ (8014e68 <stroke_path+0x7e8>)
 8014b7e:	eddd aa0f 	vldr	s21, [sp, #60]	@ 0x3c
 8014b82:	682b      	ldr	r3, [r5, #0]
 8014b84:	ed9d aa10 	vldr	s20, [sp, #64]	@ 0x40
 8014b88:	7f1a      	ldrb	r2, [r3, #28]
 8014b8a:	ed9d ca0b 	vldr	s24, [sp, #44]	@ 0x2c
 8014b8e:	eddd ba0c 	vldr	s23, [sp, #48]	@ 0x30
 8014b92:	eddd 9a0d 	vldr	s19, [sp, #52]	@ 0x34
 8014b96:	ed9d 9a0e 	vldr	s18, [sp, #56]	@ 0x38
 8014b9a:	2a00      	cmp	r2, #0
 8014b9c:	f040 81be 	bne.w	8014f1c <stroke_path+0x89c>
 8014ba0:	4ab2      	ldr	r2, [pc, #712]	@ (8014e6c <stroke_path+0x7ec>)
 8014ba2:	6816      	ldr	r6, [r2, #0]
 8014ba4:	2e01      	cmp	r6, #1
 8014ba6:	f000 8342 	beq.w	801522e <stroke_path+0xbae>
 8014baa:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014bac:	2508      	movs	r5, #8
 8014bae:	b10a      	cbz	r2, 8014bb4 <stroke_path+0x534>
 8014bb0:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8014bb4:	49ae      	ldr	r1, [pc, #696]	@ (8014e70 <stroke_path+0x7f0>)
 8014bb6:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8014bb8:	7808      	ldrb	r0, [r1, #0]
 8014bba:	4014      	ands	r4, r2
 8014bbc:	2801      	cmp	r0, #1
 8014bbe:	d103      	bne.n	8014bc8 <stroke_path+0x548>
 8014bc0:	684b      	ldr	r3, [r1, #4]
 8014bc2:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014bc6:	431c      	orrs	r4, r3
 8014bc8:	2007      	movs	r0, #7
 8014bca:	f009 f8ab 	bl	801dd24 <nema_cl_get_space>
 8014bce:	2800      	cmp	r0, #0
 8014bd0:	f43f ae0a 	beq.w	80147e8 <stroke_path+0x168>
 8014bd4:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8014bd8:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8014bdc:	f44f 774c 	mov.w	r7, #816	@ 0x330
 8014be0:	f44f 764d 	mov.w	r6, #820	@ 0x334
 8014be4:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8014be8:	f44f 7251 	mov.w	r2, #836	@ 0x344
 8014bec:	4ba1      	ldr	r3, [pc, #644]	@ (8014e74 <stroke_path+0x7f4>)
 8014bee:	432c      	orrs	r4, r5
 8014bf0:	6344      	str	r4, [r0, #52]	@ 0x34
 8014bf2:	ed80 ca01 	vstr	s24, [r0, #4]
 8014bf6:	edc0 ba03 	vstr	s23, [r0, #12]
 8014bfa:	edc0 aa05 	vstr	s21, [r0, #20]
 8014bfe:	ed80 aa07 	vstr	s20, [r0, #28]
 8014c02:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 8014c06:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 8014c0a:	f8c0 e000 	str.w	lr, [r0]
 8014c0e:	f8c0 c008 	str.w	ip, [r0, #8]
 8014c12:	6107      	str	r7, [r0, #16]
 8014c14:	6186      	str	r6, [r0, #24]
 8014c16:	6201      	str	r1, [r0, #32]
 8014c18:	6282      	str	r2, [r0, #40]	@ 0x28
 8014c1a:	6303      	str	r3, [r0, #48]	@ 0x30
 8014c1c:	e5e4      	b.n	80147e8 <stroke_path+0x168>
 8014c1e:	edd2 6a00 	vldr	s13, [r2]
 8014c22:	9309      	str	r3, [sp, #36]	@ 0x24
 8014c24:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014c28:	edd7 7a00 	vldr	s15, [r7]
 8014c2c:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014c30:	e654      	b.n	80148dc <stroke_path+0x25c>
 8014c32:	4630      	mov	r0, r6
 8014c34:	f7fd fa24 	bl	8012080 <nema_enable_aa_flags>
 8014c38:	e6be      	b.n	80149b8 <stroke_path+0x338>
 8014c3a:	2b00      	cmp	r3, #0
 8014c3c:	f43f ae29 	beq.w	8014892 <stroke_path+0x212>
 8014c40:	682a      	ldr	r2, [r5, #0]
 8014c42:	7f12      	ldrb	r2, [r2, #28]
 8014c44:	2a00      	cmp	r2, #0
 8014c46:	f43f ae24 	beq.w	8014892 <stroke_path+0x212>
 8014c4a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8014c4e:	2b00      	cmp	r3, #0
 8014c50:	f040 83c5 	bne.w	80153de <stroke_path+0xd5e>
 8014c54:	eddd 8a17 	vldr	s17, [sp, #92]	@ 0x5c
 8014c58:	f8dd a060 	ldr.w	sl, [sp, #96]	@ 0x60
 8014c5c:	4a86      	ldr	r2, [pc, #536]	@ (8014e78 <stroke_path+0x7f8>)
 8014c5e:	4b87      	ldr	r3, [pc, #540]	@ (8014e7c <stroke_path+0x7fc>)
 8014c60:	2007      	movs	r0, #7
 8014c62:	edcd 8a06 	vstr	s17, [sp, #24]
 8014c66:	f8cd a01c 	str.w	sl, [sp, #28]
 8014c6a:	6817      	ldr	r7, [r2, #0]
 8014c6c:	681e      	ldr	r6, [r3, #0]
 8014c6e:	f009 f859 	bl	801dd24 <nema_cl_get_space>
 8014c72:	b358      	cbz	r0, 8014ccc <stroke_path+0x64c>
 8014c74:	4a7e      	ldr	r2, [pc, #504]	@ (8014e70 <stroke_path+0x7f0>)
 8014c76:	682b      	ldr	r3, [r5, #0]
 8014c78:	7811      	ldrb	r1, [r2, #0]
 8014c7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014c7c:	2901      	cmp	r1, #1
 8014c7e:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8014c82:	f000 83f2 	beq.w	801546a <stroke_path+0xdea>
 8014c86:	f44f 7248 	mov.w	r2, #800	@ 0x320
 8014c8a:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8014c8e:	6002      	str	r2, [r0, #0]
 8014c90:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8014c92:	6081      	str	r1, [r0, #8]
 8014c94:	6042      	str	r2, [r0, #4]
 8014c96:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8014c98:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8014c9c:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014ca0:	60c2      	str	r2, [r0, #12]
 8014ca2:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8014ca6:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8014caa:	edc0 8a05 	vstr	s17, [r0, #20]
 8014cae:	f043 0304 	orr.w	r3, r3, #4
 8014cb2:	6343      	str	r3, [r0, #52]	@ 0x34
 8014cb4:	4b6f      	ldr	r3, [pc, #444]	@ (8014e74 <stroke_path+0x7f4>)
 8014cb6:	f8c0 a01c 	str.w	sl, [r0, #28]
 8014cba:	6247      	str	r7, [r0, #36]	@ 0x24
 8014cbc:	62c6      	str	r6, [r0, #44]	@ 0x2c
 8014cbe:	f8c0 e010 	str.w	lr, [r0, #16]
 8014cc2:	f8c0 c018 	str.w	ip, [r0, #24]
 8014cc6:	6201      	str	r1, [r0, #32]
 8014cc8:	6282      	str	r2, [r0, #40]	@ 0x28
 8014cca:	6303      	str	r3, [r0, #48]	@ 0x30
 8014ccc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014cce:	e5e0      	b.n	8014892 <stroke_path+0x212>
 8014cd0:	4d65      	ldr	r5, [pc, #404]	@ (8014e68 <stroke_path+0x7e8>)
 8014cd2:	682b      	ldr	r3, [r5, #0]
 8014cd4:	7f1a      	ldrb	r2, [r3, #28]
 8014cd6:	2a00      	cmp	r2, #0
 8014cd8:	f040 8201 	bne.w	80150de <stroke_path+0xa5e>
 8014cdc:	4a63      	ldr	r2, [pc, #396]	@ (8014e6c <stroke_path+0x7ec>)
 8014cde:	6814      	ldr	r4, [r2, #0]
 8014ce0:	2c01      	cmp	r4, #1
 8014ce2:	f000 840b 	beq.w	80154fc <stroke_path+0xe7c>
 8014ce6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014ce8:	2509      	movs	r5, #9
 8014cea:	2a00      	cmp	r2, #0
 8014cec:	f040 8171 	bne.w	8014fd2 <stroke_path+0x952>
 8014cf0:	495f      	ldr	r1, [pc, #380]	@ (8014e70 <stroke_path+0x7f0>)
 8014cf2:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 8014cf4:	7808      	ldrb	r0, [r1, #0]
 8014cf6:	4014      	ands	r4, r2
 8014cf8:	2801      	cmp	r0, #1
 8014cfa:	d103      	bne.n	8014d04 <stroke_path+0x684>
 8014cfc:	684b      	ldr	r3, [r1, #4]
 8014cfe:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8014d02:	431c      	orrs	r4, r3
 8014d04:	2009      	movs	r0, #9
 8014d06:	f009 f80d 	bl	801dd24 <nema_cl_get_space>
 8014d0a:	2800      	cmp	r0, #0
 8014d0c:	f43f ad6c 	beq.w	80147e8 <stroke_path+0x168>
 8014d10:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8014d14:	f44f 7849 	mov.w	r8, #804	@ 0x324
 8014d18:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8014d1c:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8014d20:	f44f 7351 	mov.w	r3, #836	@ 0x344
 8014d24:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8014d28:	f44f 7654 	mov.w	r6, #848	@ 0x350
 8014d2c:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8014d30:	6007      	str	r7, [r0, #0]
 8014d32:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8014d34:	f8c0 8008 	str.w	r8, [r0, #8]
 8014d38:	6047      	str	r7, [r0, #4]
 8014d3a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8014d3c:	f8c0 e010 	str.w	lr, [r0, #16]
 8014d40:	60c7      	str	r7, [r0, #12]
 8014d42:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8014d44:	f8c0 c018 	str.w	ip, [r0, #24]
 8014d48:	6147      	str	r7, [r0, #20]
 8014d4a:	6283      	str	r3, [r0, #40]	@ 0x28
 8014d4c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d4e:	6201      	str	r1, [r0, #32]
 8014d50:	61c3      	str	r3, [r0, #28]
 8014d52:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014d54:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014d56:	6241      	str	r1, [r0, #36]	@ 0x24
 8014d58:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8014d5a:	6343      	str	r3, [r0, #52]	@ 0x34
 8014d5c:	62c1      	str	r1, [r0, #44]	@ 0x2c
 8014d5e:	4b45      	ldr	r3, [pc, #276]	@ (8014e74 <stroke_path+0x7f4>)
 8014d60:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8014d62:	432c      	orrs	r4, r5
 8014d64:	6444      	str	r4, [r0, #68]	@ 0x44
 8014d66:	6306      	str	r6, [r0, #48]	@ 0x30
 8014d68:	63c1      	str	r1, [r0, #60]	@ 0x3c
 8014d6a:	6382      	str	r2, [r0, #56]	@ 0x38
 8014d6c:	6403      	str	r3, [r0, #64]	@ 0x40
 8014d6e:	e53b      	b.n	80147e8 <stroke_path+0x168>
 8014d70:	2201      	movs	r2, #1
 8014d72:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8014d76:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8014d7a:	e513      	b.n	80147a4 <stroke_path+0x124>
 8014d7c:	4630      	mov	r0, r6
 8014d7e:	f7fd f97f 	bl	8012080 <nema_enable_aa_flags>
 8014d82:	e690      	b.n	8014aa6 <stroke_path+0x426>
 8014d84:	9009      	str	r0, [sp, #36]	@ 0x24
 8014d86:	ed95 6a00 	vldr	s12, [r5]
 8014d8a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014d8e:	1c8a      	adds	r2, r1, #2
 8014d90:	9209      	str	r2, [sp, #36]	@ 0x24
 8014d92:	edd5 6a01 	vldr	s13, [r5, #4]
 8014d96:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014d9a:	1cca      	adds	r2, r1, #3
 8014d9c:	9209      	str	r2, [sp, #36]	@ 0x24
 8014d9e:	ed95 7a02 	vldr	s14, [r5, #8]
 8014da2:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8014da6:	3104      	adds	r1, #4
 8014da8:	9109      	str	r1, [sp, #36]	@ 0x24
 8014daa:	edd5 7a03 	vldr	s15, [r5, #12]
 8014dae:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8014db2:	f1b8 0f00 	cmp.w	r8, #0
 8014db6:	d013      	beq.n	8014de0 <stroke_path+0x760>
 8014db8:	ed9d 5a13 	vldr	s10, [sp, #76]	@ 0x4c
 8014dbc:	eddd 5a14 	vldr	s11, [sp, #80]	@ 0x50
 8014dc0:	ee36 6a05 	vadd.f32	s12, s12, s10
 8014dc4:	ee37 7a05 	vadd.f32	s14, s14, s10
 8014dc8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014dcc:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8014dd0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014dd4:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 8014dd8:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014ddc:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8014de0:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 8014de4:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 8014de8:	008a      	lsls	r2, r1, #2
 8014dea:	1c48      	adds	r0, r1, #1
 8014dec:	9202      	str	r2, [sp, #8]
 8014dee:	9d02      	ldr	r5, [sp, #8]
 8014df0:	9009      	str	r0, [sp, #36]	@ 0x24
 8014df2:	1d2a      	adds	r2, r5, #4
 8014df4:	441a      	add	r2, r3
 8014df6:	442b      	add	r3, r5
 8014df8:	3102      	adds	r1, #2
 8014dfa:	edd3 6a00 	vldr	s13, [r3]
 8014dfe:	f1b8 0f00 	cmp.w	r8, #0
 8014e02:	f000 8090 	beq.w	8014f26 <stroke_path+0x8a6>
 8014e06:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 8014e0a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8014e0e:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014e12:	9109      	str	r1, [sp, #36]	@ 0x24
 8014e14:	ed92 7a00 	vldr	s14, [r2]
 8014e18:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8014e1c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014e20:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014e24:	e4a0      	b.n	8014768 <stroke_path+0xe8>
 8014e26:	f1ba 0f03 	cmp.w	sl, #3
 8014e2a:	f000 80a0 	beq.w	8014f6e <stroke_path+0x8ee>
 8014e2e:	f1ba 0f0a 	cmp.w	sl, #10
 8014e32:	f040 8424 	bne.w	801567e <stroke_path+0xffe>
 8014e36:	9009      	str	r0, [sp, #36]	@ 0x24
 8014e38:	eddc 7a00 	vldr	s15, [ip]
 8014e3c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014e40:	ee17 1a90 	vmov	r1, s15
 8014e44:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8014e48:	1049      	asrs	r1, r1, #1
 8014e4a:	2900      	cmp	r1, #0
 8014e4c:	9102      	str	r1, [sp, #8]
 8014e4e:	f340 8158 	ble.w	8015102 <stroke_path+0xa82>
 8014e52:	2100      	movs	r1, #0
 8014e54:	4d04      	ldr	r5, [pc, #16]	@ (8014e68 <stroke_path+0x7e8>)
 8014e56:	f8cd a014 	str.w	sl, [sp, #20]
 8014e5a:	f8cd 800c 	str.w	r8, [sp, #12]
 8014e5e:	46aa      	mov	sl, r5
 8014e60:	46c8      	mov	r8, r9
 8014e62:	46a1      	mov	r9, r4
 8014e64:	460c      	mov	r4, r1
 8014e66:	e045      	b.n	8014ef4 <stroke_path+0x874>
 8014e68:	20082fac 	.word	0x20082fac
 8014e6c:	20082fb4 	.word	0x20082fb4
 8014e70:	20000064 	.word	0x20000064
 8014e74:	ff000100 	.word	0xff000100
 8014e78:	20082fb8 	.word	0x20082fb8
 8014e7c:	20082fbc 	.word	0x20082fbc
 8014e80:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 8014e84:	ee78 8a81 	vadd.f32	s17, s17, s2
 8014e88:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8014e8c:	9209      	str	r2, [sp, #36]	@ 0x24
 8014e8e:	ed91 9a00 	vldr	s18, [r1]
 8014e92:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 8014e96:	ee39 9a21 	vadd.f32	s18, s18, s3
 8014e9a:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8014e9e:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 8014ea2:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 8014ea6:	f8da 3000 	ldr.w	r3, [sl]
 8014eaa:	f88d 9064 	strb.w	r9, [sp, #100]	@ 0x64
 8014eae:	7f1a      	ldrb	r2, [r3, #28]
 8014eb0:	2a00      	cmp	r2, #0
 8014eb2:	f040 80d0 	bne.w	8015056 <stroke_path+0x9d6>
 8014eb6:	4ac8      	ldr	r2, [pc, #800]	@ (80151d8 <stroke_path+0xb58>)
 8014eb8:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 8014ebc:	6812      	ldr	r2, [r2, #0]
 8014ebe:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 8014ec2:	2a00      	cmp	r2, #0
 8014ec4:	f000 82db 	beq.w	801547e <stroke_path+0xdfe>
 8014ec8:	eef0 1a49 	vmov.f32	s3, s18
 8014ecc:	eeb0 1a68 	vmov.f32	s2, s17
 8014ed0:	eef0 0a4a 	vmov.f32	s1, s20
 8014ed4:	eeb0 0a69 	vmov.f32	s0, s19
 8014ed8:	f7fd fd1e 	bl	8012918 <raster_stroked_line_>
 8014edc:	e897 0003 	ldmia.w	r7, {r0, r1}
 8014ee0:	9b02      	ldr	r3, [sp, #8]
 8014ee2:	3401      	adds	r4, #1
 8014ee4:	429c      	cmp	r4, r3
 8014ee6:	e886 0003 	stmia.w	r6, {r0, r1}
 8014eea:	f000 8106 	beq.w	80150fa <stroke_path+0xa7a>
 8014eee:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8014ef2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014ef4:	0090      	lsls	r0, r2, #2
 8014ef6:	1d01      	adds	r1, r0, #4
 8014ef8:	4419      	add	r1, r3
 8014efa:	9d03      	ldr	r5, [sp, #12]
 8014efc:	4403      	add	r3, r0
 8014efe:	1c50      	adds	r0, r2, #1
 8014f00:	9009      	str	r0, [sp, #36]	@ 0x24
 8014f02:	3202      	adds	r2, #2
 8014f04:	edd3 8a00 	vldr	s17, [r3]
 8014f08:	2d00      	cmp	r5, #0
 8014f0a:	d1b9      	bne.n	8014e80 <stroke_path+0x800>
 8014f0c:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8014f10:	9209      	str	r2, [sp, #36]	@ 0x24
 8014f12:	ed91 9a00 	vldr	s18, [r1]
 8014f16:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8014f1a:	e7c0      	b.n	8014e9e <stroke_path+0x81e>
 8014f1c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8014f1e:	2a00      	cmp	r2, #0
 8014f20:	d14d      	bne.n	8014fbe <stroke_path+0x93e>
 8014f22:	2506      	movs	r5, #6
 8014f24:	e646      	b.n	8014bb4 <stroke_path+0x534>
 8014f26:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014f2a:	9109      	str	r1, [sp, #36]	@ 0x24
 8014f2c:	edd2 7a00 	vldr	s15, [r2]
 8014f30:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014f34:	e418      	b.n	8014768 <stroke_path+0xe8>
 8014f36:	9009      	str	r0, [sp, #36]	@ 0x24
 8014f38:	ed95 7a00 	vldr	s14, [r5]
 8014f3c:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8014f40:	3102      	adds	r1, #2
 8014f42:	9109      	str	r1, [sp, #36]	@ 0x24
 8014f44:	edd5 7a01 	vldr	s15, [r5, #4]
 8014f48:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8014f4c:	f1b8 0f00 	cmp.w	r8, #0
 8014f50:	f43f af46 	beq.w	8014de0 <stroke_path+0x760>
 8014f54:	ed9d 6a13 	vldr	s12, [sp, #76]	@ 0x4c
 8014f58:	eddd 6a14 	vldr	s13, [sp, #80]	@ 0x50
 8014f5c:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014f60:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014f64:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8014f68:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8014f6c:	e738      	b.n	8014de0 <stroke_path+0x760>
 8014f6e:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8014f72:	9009      	str	r0, [sp, #36]	@ 0x24
 8014f74:	f1b8 0f00 	cmp.w	r8, #0
 8014f78:	d02e      	beq.n	8014fd8 <stroke_path+0x958>
 8014f7a:	ed9c 7a00 	vldr	s14, [ip]
 8014f7e:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 8014f82:	ee76 6a87 	vadd.f32	s13, s13, s14
 8014f86:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014f8a:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014f8e:	f7ff bbeb 	b.w	8014768 <stroke_path+0xe8>
 8014f92:	4b91      	ldr	r3, [pc, #580]	@ (80151d8 <stroke_path+0xb58>)
 8014f94:	eddd 8a0b 	vldr	s17, [sp, #44]	@ 0x2c
 8014f98:	681b      	ldr	r3, [r3, #0]
 8014f9a:	ed9d 9a0c 	vldr	s18, [sp, #48]	@ 0x30
 8014f9e:	eddd 9a0d 	vldr	s19, [sp, #52]	@ 0x34
 8014fa2:	ed9d aa0e 	vldr	s20, [sp, #56]	@ 0x38
 8014fa6:	b333      	cbz	r3, 8014ff6 <stroke_path+0x976>
 8014fa8:	eef0 1a4a 	vmov.f32	s3, s20
 8014fac:	eeb0 1a69 	vmov.f32	s2, s19
 8014fb0:	eef0 0a49 	vmov.f32	s1, s18
 8014fb4:	eeb0 0a68 	vmov.f32	s0, s17
 8014fb8:	f7fd fcae 	bl	8012918 <raster_stroked_line_>
 8014fbc:	e414      	b.n	80147e8 <stroke_path+0x168>
 8014fbe:	4a87      	ldr	r2, [pc, #540]	@ (80151dc <stroke_path+0xb5c>)
 8014fc0:	2506      	movs	r5, #6
 8014fc2:	6812      	ldr	r2, [r2, #0]
 8014fc4:	2a00      	cmp	r2, #0
 8014fc6:	bf14      	ite	ne
 8014fc8:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 8014fcc:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 8014fd0:	e5f0      	b.n	8014bb4 <stroke_path+0x534>
 8014fd2:	f04f 62f0 	mov.w	r2, #125829120	@ 0x7800000
 8014fd6:	e68b      	b.n	8014cf0 <stroke_path+0x670>
 8014fd8:	eddc 6a00 	vldr	s13, [ip]
 8014fdc:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 8014fe0:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8014fe4:	f7ff bbc0 	b.w	8014768 <stroke_path+0xe8>
 8014fe8:	2300      	movs	r3, #0
 8014fea:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8014fee:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 8014ff2:	f7ff bbd7 	b.w	80147a4 <stroke_path+0x124>
 8014ff6:	4d7a      	ldr	r5, [pc, #488]	@ (80151e0 <stroke_path+0xb60>)
 8014ff8:	497a      	ldr	r1, [pc, #488]	@ (80151e4 <stroke_path+0xb64>)
 8014ffa:	682a      	ldr	r2, [r5, #0]
 8014ffc:	7808      	ldrb	r0, [r1, #0]
 8014ffe:	e9d2 340a 	ldrd	r3, r4, [r2, #40]	@ 0x28
 8015002:	2b00      	cmp	r3, #0
 8015004:	bf18      	it	ne
 8015006:	f04f 63f0 	movne.w	r3, #125829120	@ 0x7800000
 801500a:	2801      	cmp	r0, #1
 801500c:	ea04 0403 	and.w	r4, r4, r3
 8015010:	f000 8230 	beq.w	8015474 <stroke_path+0xdf4>
 8015014:	2005      	movs	r0, #5
 8015016:	f008 fe85 	bl	801dd24 <nema_cl_get_space>
 801501a:	2800      	cmp	r0, #0
 801501c:	f43f abe4 	beq.w	80147e8 <stroke_path+0x168>
 8015020:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8015024:	f44f 7549 	mov.w	r5, #804	@ 0x324
 8015028:	f44f 714c 	mov.w	r1, #816	@ 0x330
 801502c:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8015030:	4b6d      	ldr	r3, [pc, #436]	@ (80151e8 <stroke_path+0xb68>)
 8015032:	f044 040a 	orr.w	r4, r4, #10
 8015036:	6244      	str	r4, [r0, #36]	@ 0x24
 8015038:	edc0 8a01 	vstr	s17, [r0, #4]
 801503c:	ed80 9a03 	vstr	s18, [r0, #12]
 8015040:	edc0 9a05 	vstr	s19, [r0, #20]
 8015044:	ed80 aa07 	vstr	s20, [r0, #28]
 8015048:	6006      	str	r6, [r0, #0]
 801504a:	6085      	str	r5, [r0, #8]
 801504c:	6101      	str	r1, [r0, #16]
 801504e:	6182      	str	r2, [r0, #24]
 8015050:	6203      	str	r3, [r0, #32]
 8015052:	f7ff bbc9 	b.w	80147e8 <stroke_path+0x168>
 8015056:	4a65      	ldr	r2, [pc, #404]	@ (80151ec <stroke_path+0xb6c>)
 8015058:	4b65      	ldr	r3, [pc, #404]	@ (80151f0 <stroke_path+0xb70>)
 801505a:	6812      	ldr	r2, [r2, #0]
 801505c:	2007      	movs	r0, #7
 801505e:	9204      	str	r2, [sp, #16]
 8015060:	681d      	ldr	r5, [r3, #0]
 8015062:	f008 fe5f 	bl	801dd24 <nema_cl_get_space>
 8015066:	2800      	cmp	r0, #0
 8015068:	f43f af38 	beq.w	8014edc <stroke_path+0x85c>
 801506c:	4a5d      	ldr	r2, [pc, #372]	@ (80151e4 <stroke_path+0xb64>)
 801506e:	f8da 3000 	ldr.w	r3, [sl]
 8015072:	7812      	ldrb	r2, [r2, #0]
 8015074:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015076:	2a01      	cmp	r2, #1
 8015078:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 801507c:	d104      	bne.n	8015088 <stroke_path+0xa08>
 801507e:	4a59      	ldr	r2, [pc, #356]	@ (80151e4 <stroke_path+0xb64>)
 8015080:	6852      	ldr	r2, [r2, #4]
 8015082:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015086:	4313      	orrs	r3, r2
 8015088:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801508c:	6002      	str	r2, [r0, #0]
 801508e:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 8015092:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8015096:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801509a:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801509e:	6082      	str	r2, [r0, #8]
 80150a0:	edc0 7a01 	vstr	s15, [r0, #4]
 80150a4:	f8c0 e018 	str.w	lr, [r0, #24]
 80150a8:	f8dd e030 	ldr.w	lr, [sp, #48]	@ 0x30
 80150ac:	f8c0 c010 	str.w	ip, [r0, #16]
 80150b0:	f8c0 e00c 	str.w	lr, [r0, #12]
 80150b4:	f043 0304 	orr.w	r3, r3, #4
 80150b8:	f8dd c034 	ldr.w	ip, [sp, #52]	@ 0x34
 80150bc:	6343      	str	r3, [r0, #52]	@ 0x34
 80150be:	9b04      	ldr	r3, [sp, #16]
 80150c0:	f8c0 c014 	str.w	ip, [r0, #20]
 80150c4:	6243      	str	r3, [r0, #36]	@ 0x24
 80150c6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80150c8:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80150cc:	61c3      	str	r3, [r0, #28]
 80150ce:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 80150d2:	4a45      	ldr	r2, [pc, #276]	@ (80151e8 <stroke_path+0xb68>)
 80150d4:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80150d6:	6302      	str	r2, [r0, #48]	@ 0x30
 80150d8:	6201      	str	r1, [r0, #32]
 80150da:	6283      	str	r3, [r0, #40]	@ 0x28
 80150dc:	e6fe      	b.n	8014edc <stroke_path+0x85c>
 80150de:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80150e0:	2a00      	cmp	r2, #0
 80150e2:	f000 817a 	beq.w	80153da <stroke_path+0xd5a>
 80150e6:	4a3d      	ldr	r2, [pc, #244]	@ (80151dc <stroke_path+0xb5c>)
 80150e8:	2507      	movs	r5, #7
 80150ea:	6812      	ldr	r2, [r2, #0]
 80150ec:	2a00      	cmp	r2, #0
 80150ee:	bf14      	ite	ne
 80150f0:	f04f 6280 	movne.w	r2, #67108864	@ 0x4000000
 80150f4:	f04f 62f0 	moveq.w	r2, #125829120	@ 0x7800000
 80150f8:	e5fa      	b.n	8014cf0 <stroke_path+0x670>
 80150fa:	464c      	mov	r4, r9
 80150fc:	46c1      	mov	r9, r8
 80150fe:	f8dd a014 	ldr.w	sl, [sp, #20]
 8015102:	eddd 8a17 	vldr	s17, [sp, #92]	@ 0x5c
 8015106:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 801510a:	ee77 7ae8 	vsub.f32	s15, s15, s17
 801510e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8015112:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015116:	ed9d 9a18 	vldr	s18, [sp, #96]	@ 0x60
 801511a:	d108      	bne.n	801512e <stroke_path+0xaae>
 801511c:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8015120:	ee77 7ac9 	vsub.f32	s15, s15, s18
 8015124:	eef5 7a40 	vcmp.f32	s15, #0.0
 8015128:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801512c:	d04c      	beq.n	80151c8 <stroke_path+0xb48>
 801512e:	e897 0003 	ldmia.w	r7, {r0, r1}
 8015132:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 8015136:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 801513a:	4d29      	ldr	r5, [pc, #164]	@ (80151e0 <stroke_path+0xb60>)
 801513c:	e886 0003 	stmia.w	r6, {r0, r1}
 8015140:	682b      	ldr	r3, [r5, #0]
 8015142:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8015146:	7f1a      	ldrb	r2, [r3, #28]
 8015148:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 801514c:	2a00      	cmp	r2, #0
 801514e:	f000 814b 	beq.w	80153e8 <stroke_path+0xd68>
 8015152:	4a26      	ldr	r2, [pc, #152]	@ (80151ec <stroke_path+0xb6c>)
 8015154:	4b26      	ldr	r3, [pc, #152]	@ (80151f0 <stroke_path+0xb70>)
 8015156:	2007      	movs	r0, #7
 8015158:	6817      	ldr	r7, [r2, #0]
 801515a:	681e      	ldr	r6, [r3, #0]
 801515c:	f008 fde2 	bl	801dd24 <nema_cl_get_space>
 8015160:	2800      	cmp	r0, #0
 8015162:	d031      	beq.n	80151c8 <stroke_path+0xb48>
 8015164:	4a1f      	ldr	r2, [pc, #124]	@ (80151e4 <stroke_path+0xb64>)
 8015166:	682b      	ldr	r3, [r5, #0]
 8015168:	7811      	ldrb	r1, [r2, #0]
 801516a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801516c:	2901      	cmp	r1, #1
 801516e:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8015172:	d103      	bne.n	801517c <stroke_path+0xafc>
 8015174:	6852      	ldr	r2, [r2, #4]
 8015176:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 801517a:	4313      	orrs	r3, r2
 801517c:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8015180:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8015184:	f44f 754d 	mov.w	r5, #820	@ 0x334
 8015188:	f44f 714c 	mov.w	r1, #816	@ 0x330
 801518c:	f44f 78a0 	mov.w	r8, #320	@ 0x140
 8015190:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015194:	f8c0 e000 	str.w	lr, [r0]
 8015198:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 801519c:	f8c0 c008 	str.w	ip, [r0, #8]
 80151a0:	f8c0 e004 	str.w	lr, [r0, #4]
 80151a4:	6185      	str	r5, [r0, #24]
 80151a6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80151a8:	6101      	str	r1, [r0, #16]
 80151aa:	60c5      	str	r5, [r0, #12]
 80151ac:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80151ae:	f043 0304 	orr.w	r3, r3, #4
 80151b2:	6141      	str	r1, [r0, #20]
 80151b4:	6343      	str	r3, [r0, #52]	@ 0x34
 80151b6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80151b8:	4b0b      	ldr	r3, [pc, #44]	@ (80151e8 <stroke_path+0xb68>)
 80151ba:	6247      	str	r7, [r0, #36]	@ 0x24
 80151bc:	62c6      	str	r6, [r0, #44]	@ 0x2c
 80151be:	61c1      	str	r1, [r0, #28]
 80151c0:	f8c0 8020 	str.w	r8, [r0, #32]
 80151c4:	6282      	str	r2, [r0, #40]	@ 0x28
 80151c6:	6303      	str	r3, [r0, #48]	@ 0x30
 80151c8:	2300      	movs	r3, #0
 80151ca:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 80151ce:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 80151d2:	f7ff baed 	b.w	80147b0 <stroke_path+0x130>
 80151d6:	bf00      	nop
 80151d8:	20082fb4 	.word	0x20082fb4
 80151dc:	20082fb0 	.word	0x20082fb0
 80151e0:	20082fac 	.word	0x20082fac
 80151e4:	20000064 	.word	0x20000064
 80151e8:	ff000100 	.word	0xff000100
 80151ec:	20082fb8 	.word	0x20082fb8
 80151f0:	20082fbc 	.word	0x20082fbc
 80151f4:	f1ae 0705 	sub.w	r7, lr, #5
 80151f8:	2f03      	cmp	r7, #3
 80151fa:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 80151fe:	eddd 7a14 	vldr	s15, [sp, #80]	@ 0x50
 8015202:	d80b      	bhi.n	801521c <stroke_path+0xb9c>
 8015204:	ee76 6aa6 	vadd.f32	s13, s13, s13
 8015208:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801520c:	ed9d 6a15 	vldr	s12, [sp, #84]	@ 0x54
 8015210:	ed9d 7a16 	vldr	s14, [sp, #88]	@ 0x58
 8015214:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8015218:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801521c:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015220:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8015224:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 8015228:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801522c:	e5df      	b.n	8014dee <stroke_path+0x76e>
 801522e:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8015232:	4cab      	ldr	r4, [pc, #684]	@ (80154e0 <stroke_path+0xe60>)
 8015234:	4dab      	ldr	r5, [pc, #684]	@ (80154e4 <stroke_path+0xe64>)
 8015236:	7821      	ldrb	r1, [r4, #0]
 8015238:	ee39 7acc 	vsub.f32	s14, s19, s24
 801523c:	ee79 7a6b 	vsub.f32	s15, s18, s23
 8015240:	ee7c 5a2a 	vadd.f32	s11, s24, s21
 8015244:	ee3a 4aa9 	vadd.f32	s8, s21, s19
 8015248:	ee3b 5a8a 	vadd.f32	s10, s23, s20
 801524c:	ee7a 4a09 	vadd.f32	s9, s20, s18
 8015250:	ee3a 6a49 	vsub.f32	s12, s20, s18
 8015254:	ee7a 6ae9 	vsub.f32	s13, s21, s19
 8015258:	ee26 6a07 	vmul.f32	s12, s12, s14
 801525c:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8015260:	ee65 5aa8 	vmul.f32	s11, s11, s17
 8015264:	ee24 4a28 	vmul.f32	s8, s8, s17
 8015268:	ee25 5a28 	vmul.f32	s10, s10, s17
 801526c:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8015270:	ee35 ba84 	vadd.f32	s22, s11, s8
 8015274:	ee75 ca24 	vadd.f32	s25, s10, s9
 8015278:	ee27 7a07 	vmul.f32	s14, s14, s14
 801527c:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8015280:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8015284:	ee2b ba28 	vmul.f32	s22, s22, s17
 8015288:	ee6c caa8 	vmul.f32	s25, s25, s17
 801528c:	ee66 6aa6 	vmul.f32	s13, s13, s13
 8015290:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015294:	b339      	cbz	r1, 80152e6 <stroke_path+0xc66>
 8015296:	eef4 6ae7 	vcmpe.f32	s13, s15
 801529a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801529e:	bfcc      	ite	gt
 80152a0:	2301      	movgt	r3, #1
 80152a2:	2300      	movle	r3, #0
 80152a4:	b353      	cbz	r3, 80152fc <stroke_path+0xc7c>
 80152a6:	682b      	ldr	r3, [r5, #0]
 80152a8:	2b09      	cmp	r3, #9
 80152aa:	dc12      	bgt.n	80152d2 <stroke_path+0xc52>
 80152ac:	488e      	ldr	r0, [pc, #568]	@ (80154e8 <stroke_path+0xe68>)
 80152ae:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 80152b2:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 80152b6:	ed82 ba00 	vstr	s22, [r2]
 80152ba:	edc2 ca01 	vstr	s25, [r2, #4]
 80152be:	ed82 4a02 	vstr	s8, [r2, #8]
 80152c2:	edc2 4a03 	vstr	s9, [r2, #12]
 80152c6:	edc2 9a04 	vstr	s19, [r2, #16]
 80152ca:	ed82 9a05 	vstr	s18, [r2, #20]
 80152ce:	3301      	adds	r3, #1
 80152d0:	602b      	str	r3, [r5, #0]
 80152d2:	3601      	adds	r6, #1
 80152d4:	eeb0 9a6c 	vmov.f32	s18, s25
 80152d8:	eef0 9a4b 	vmov.f32	s19, s22
 80152dc:	eeb0 aa45 	vmov.f32	s20, s10
 80152e0:	eef0 aa65 	vmov.f32	s21, s11
 80152e4:	e7a8      	b.n	8015238 <stroke_path+0xbb8>
 80152e6:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80152ea:	eef4 7ae6 	vcmpe.f32	s15, s13
 80152ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80152f2:	bf4c      	ite	mi
 80152f4:	2301      	movmi	r3, #1
 80152f6:	2300      	movpl	r3, #0
 80152f8:	2b00      	cmp	r3, #0
 80152fa:	d1d4      	bne.n	80152a6 <stroke_path+0xc26>
 80152fc:	eef0 1a6c 	vmov.f32	s3, s25
 8015300:	eeb0 1a4b 	vmov.f32	s2, s22
 8015304:	eef0 0a6b 	vmov.f32	s1, s23
 8015308:	eeb0 0a4c 	vmov.f32	s0, s24
 801530c:	f7fd fb04 	bl	8012918 <raster_stroked_line_>
 8015310:	eef0 1a49 	vmov.f32	s3, s18
 8015314:	eeb0 1a69 	vmov.f32	s2, s19
 8015318:	eef0 0a6c 	vmov.f32	s1, s25
 801531c:	eeb0 0a4b 	vmov.f32	s0, s22
 8015320:	f7fd fafa 	bl	8012918 <raster_stroked_line_>
 8015324:	682b      	ldr	r3, [r5, #0]
 8015326:	3e01      	subs	r6, #1
 8015328:	b193      	cbz	r3, 8015350 <stroke_path+0xcd0>
 801532a:	3b01      	subs	r3, #1
 801532c:	496e      	ldr	r1, [pc, #440]	@ (80154e8 <stroke_path+0xe68>)
 801532e:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8015332:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 8015336:	ed92 ca00 	vldr	s24, [r2]
 801533a:	edd2 ba01 	vldr	s23, [r2, #4]
 801533e:	edd2 aa02 	vldr	s21, [r2, #8]
 8015342:	ed92 aa03 	vldr	s20, [r2, #12]
 8015346:	edd2 9a04 	vldr	s19, [r2, #16]
 801534a:	ed92 9a05 	vldr	s18, [r2, #20]
 801534e:	602b      	str	r3, [r5, #0]
 8015350:	2e00      	cmp	r6, #0
 8015352:	f43f aa49 	beq.w	80147e8 <stroke_path+0x168>
 8015356:	7821      	ldrb	r1, [r4, #0]
 8015358:	e76e      	b.n	8015238 <stroke_path+0xbb8>
 801535a:	a808      	add	r0, sp, #32
 801535c:	f7fd ff3c 	bl	80131d8 <fill_arc.isra.7>
 8015360:	4604      	mov	r4, r0
 8015362:	2800      	cmp	r0, #0
 8015364:	f43f aa40 	beq.w	80147e8 <stroke_path+0x168>
 8015368:	f007 fb84 	bl	801ca74 <nema_vg_set_error>
 801536c:	f7ff ba4b 	b.w	8014806 <stroke_path+0x186>
 8015370:	f1ae 0705 	sub.w	r7, lr, #5
 8015374:	2f03      	cmp	r7, #3
 8015376:	ed9d 5a13 	vldr	s10, [sp, #76]	@ 0x4c
 801537a:	eddd 5a14 	vldr	s11, [sp, #80]	@ 0x50
 801537e:	d91f      	bls.n	80153c0 <stroke_path+0xd40>
 8015380:	eeb0 7a65 	vmov.f32	s14, s11
 8015384:	eef0 7a45 	vmov.f32	s15, s10
 8015388:	ed8d 7a10 	vstr	s14, [sp, #64]	@ 0x40
 801538c:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 8015390:	9009      	str	r0, [sp, #36]	@ 0x24
 8015392:	ed95 7a00 	vldr	s14, [r5]
 8015396:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 801539a:	3102      	adds	r1, #2
 801539c:	9109      	str	r1, [sp, #36]	@ 0x24
 801539e:	edd5 7a01 	vldr	s15, [r5, #4]
 80153a2:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 80153a6:	f1b8 0f00 	cmp.w	r8, #0
 80153aa:	f43f ad19 	beq.w	8014de0 <stroke_path+0x760>
 80153ae:	ee37 7a05 	vadd.f32	s14, s14, s10
 80153b2:	ee77 7aa5 	vadd.f32	s15, s15, s11
 80153b6:	ed8d 7a11 	vstr	s14, [sp, #68]	@ 0x44
 80153ba:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 80153be:	e50f      	b.n	8014de0 <stroke_path+0x760>
 80153c0:	ed9d 7a15 	vldr	s14, [sp, #84]	@ 0x54
 80153c4:	ee75 7a05 	vadd.f32	s15, s10, s10
 80153c8:	ee35 6aa5 	vadd.f32	s12, s11, s11
 80153cc:	eddd 6a16 	vldr	s13, [sp, #88]	@ 0x58
 80153d0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80153d4:	ee36 7a66 	vsub.f32	s14, s12, s13
 80153d8:	e7d6      	b.n	8015388 <stroke_path+0xd08>
 80153da:	2507      	movs	r5, #7
 80153dc:	e488      	b.n	8014cf0 <stroke_path+0x670>
 80153de:	ee18 aa10 	vmov	sl, s16
 80153e2:	eef0 8a48 	vmov.f32	s17, s16
 80153e6:	e439      	b.n	8014c5c <stroke_path+0x5dc>
 80153e8:	4a40      	ldr	r2, [pc, #256]	@ (80154ec <stroke_path+0xe6c>)
 80153ea:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 80153ee:	6812      	ldr	r2, [r2, #0]
 80153f0:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 80153f4:	2a00      	cmp	r2, #0
 80153f6:	f000 81ac 	beq.w	8015752 <stroke_path+0x10d2>
 80153fa:	eef0 1a49 	vmov.f32	s3, s18
 80153fe:	eeb0 1a68 	vmov.f32	s2, s17
 8015402:	eef0 0a4a 	vmov.f32	s1, s20
 8015406:	eeb0 0a69 	vmov.f32	s0, s19
 801540a:	f7fd fa85 	bl	8012918 <raster_stroked_line_>
 801540e:	e6db      	b.n	80151c8 <stroke_path+0xb48>
 8015410:	9009      	str	r0, [sp, #36]	@ 0x24
 8015412:	682a      	ldr	r2, [r5, #0]
 8015414:	1c8b      	adds	r3, r1, #2
 8015416:	9309      	str	r3, [sp, #36]	@ 0x24
 8015418:	920f      	str	r2, [sp, #60]	@ 0x3c
 801541a:	686b      	ldr	r3, [r5, #4]
 801541c:	3103      	adds	r1, #3
 801541e:	9310      	str	r3, [sp, #64]	@ 0x40
 8015420:	9109      	str	r1, [sp, #36]	@ 0x24
 8015422:	4b33      	ldr	r3, [pc, #204]	@ (80154f0 <stroke_path+0xe70>)
 8015424:	68aa      	ldr	r2, [r5, #8]
 8015426:	edd3 0a00 	vldr	s1, [r3]
 801542a:	ed93 0a03 	vldr	s0, [r3, #12]
 801542e:	9211      	str	r2, [sp, #68]	@ 0x44
 8015430:	f01b fedc 	bl	80311ec <atan2f>
 8015434:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 8015438:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 801543c:	ee77 7a80 	vadd.f32	s15, s15, s0
 8015440:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015442:	f8d9 300c 	ldr.w	r3, [r9, #12]
 8015446:	f8dd e04c 	ldr.w	lr, [sp, #76]	@ 0x4c
 801544a:	008d      	lsls	r5, r1, #2
 801544c:	1c48      	adds	r0, r1, #1
 801544e:	4602      	mov	r2, r0
 8015450:	9502      	str	r5, [sp, #8]
 8015452:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8015456:	edcd 7a11 	vstr	s15, [sp, #68]	@ 0x44
 801545a:	eb03 0c05 	add.w	ip, r3, r5
 801545e:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 8015462:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 8015466:	f7ff b96a 	b.w	801473e <stroke_path+0xbe>
 801546a:	6852      	ldr	r2, [r2, #4]
 801546c:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015470:	4313      	orrs	r3, r2
 8015472:	e408      	b.n	8014c86 <stroke_path+0x606>
 8015474:	684b      	ldr	r3, [r1, #4]
 8015476:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801547a:	431c      	orrs	r4, r3
 801547c:	e5ca      	b.n	8015014 <stroke_path+0x994>
 801547e:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8015482:	2d00      	cmp	r5, #0
 8015484:	bf18      	it	ne
 8015486:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 801548a:	4b1a      	ldr	r3, [pc, #104]	@ (80154f4 <stroke_path+0xe74>)
 801548c:	4015      	ands	r5, r2
 801548e:	781b      	ldrb	r3, [r3, #0]
 8015490:	2b01      	cmp	r3, #1
 8015492:	d104      	bne.n	801549e <stroke_path+0xe1e>
 8015494:	4b17      	ldr	r3, [pc, #92]	@ (80154f4 <stroke_path+0xe74>)
 8015496:	685b      	ldr	r3, [r3, #4]
 8015498:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801549c:	431d      	orrs	r5, r3
 801549e:	2005      	movs	r0, #5
 80154a0:	f008 fc40 	bl	801dd24 <nema_cl_get_space>
 80154a4:	2800      	cmp	r0, #0
 80154a6:	f43f ad19 	beq.w	8014edc <stroke_path+0x85c>
 80154aa:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 80154ae:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80154b2:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80154b6:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80154ba:	f045 050a 	orr.w	r5, r5, #10
 80154be:	6245      	str	r5, [r0, #36]	@ 0x24
 80154c0:	4d0d      	ldr	r5, [pc, #52]	@ (80154f8 <stroke_path+0xe78>)
 80154c2:	edc0 9a01 	vstr	s19, [r0, #4]
 80154c6:	ed80 aa03 	vstr	s20, [r0, #12]
 80154ca:	edc0 8a05 	vstr	s17, [r0, #20]
 80154ce:	ed80 9a07 	vstr	s18, [r0, #28]
 80154d2:	6205      	str	r5, [r0, #32]
 80154d4:	f8c0 c000 	str.w	ip, [r0]
 80154d8:	6081      	str	r1, [r0, #8]
 80154da:	6102      	str	r2, [r0, #16]
 80154dc:	6183      	str	r3, [r0, #24]
 80154de:	e4fd      	b.n	8014edc <stroke_path+0x85c>
 80154e0:	20082fc0 	.word	0x20082fc0
 80154e4:	20083148 	.word	0x20083148
 80154e8:	20083058 	.word	0x20083058
 80154ec:	20082fb4 	.word	0x20082fb4
 80154f0:	20083030 	.word	0x20083030
 80154f4:	20000064 	.word	0x20000064
 80154f8:	ff000100 	.word	0xff000100
 80154fc:	4626      	mov	r6, r4
 80154fe:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 8015502:	eddd da0b 	vldr	s27, [sp, #44]	@ 0x2c
 8015506:	ed9d da0c 	vldr	s26, [sp, #48]	@ 0x30
 801550a:	eddd ca0f 	vldr	s25, [sp, #60]	@ 0x3c
 801550e:	ed9d ca10 	vldr	s24, [sp, #64]	@ 0x40
 8015512:	eddd ba11 	vldr	s23, [sp, #68]	@ 0x44
 8015516:	ed9d ba12 	vldr	s22, [sp, #72]	@ 0x48
 801551a:	eddd aa0d 	vldr	s21, [sp, #52]	@ 0x34
 801551e:	ed9d aa0e 	vldr	s20, [sp, #56]	@ 0x38
 8015522:	4dc5      	ldr	r5, [pc, #788]	@ (8015838 <stroke_path+0x11b8>)
 8015524:	ee7d 4aac 	vadd.f32	s9, s27, s25
 8015528:	ee7c 7aab 	vadd.f32	s15, s25, s23
 801552c:	ee3b 5aaa 	vadd.f32	s10, s23, s21
 8015530:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8015534:	ee64 4aa8 	vmul.f32	s9, s9, s17
 8015538:	ee25 5a28 	vmul.f32	s10, s10, s17
 801553c:	ee74 3aa7 	vadd.f32	s7, s9, s15
 8015540:	ee37 6a85 	vadd.f32	s12, s15, s10
 8015544:	ee3d 4a0c 	vadd.f32	s8, s26, s24
 8015548:	ee7c 7a0b 	vadd.f32	s15, s24, s22
 801554c:	ee7b 5a0a 	vadd.f32	s11, s22, s20
 8015550:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8015554:	ee24 4a28 	vmul.f32	s8, s8, s17
 8015558:	ee65 5aa8 	vmul.f32	s11, s11, s17
 801555c:	ee34 3a27 	vadd.f32	s6, s8, s15
 8015560:	ee63 3aa8 	vmul.f32	s7, s7, s17
 8015564:	ee26 6a28 	vmul.f32	s12, s12, s17
 8015568:	ee77 7aa5 	vadd.f32	s15, s15, s11
 801556c:	ee33 9a86 	vadd.f32	s18, s7, s12
 8015570:	ee3d 7aaa 	vadd.f32	s14, s27, s21
 8015574:	ee23 3a28 	vmul.f32	s6, s6, s17
 8015578:	ee67 7aa8 	vmul.f32	s15, s15, s17
 801557c:	ee29 9a28 	vmul.f32	s18, s18, s17
 8015580:	ee27 7a28 	vmul.f32	s14, s14, s17
 8015584:	ee73 9a27 	vadd.f32	s19, s6, s15
 8015588:	ee7d 6a0a 	vadd.f32	s13, s26, s20
 801558c:	ee37 7a49 	vsub.f32	s14, s14, s18
 8015590:	ee69 9aa8 	vmul.f32	s19, s19, s17
 8015594:	ee66 6aa8 	vmul.f32	s13, s13, s17
 8015598:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801559c:	ee76 6ae9 	vsub.f32	s13, s13, s19
 80155a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155a4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80155a8:	bf48      	it	mi
 80155aa:	eeb1 7a47 	vnegmi.f32	s14, s14
 80155ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155b2:	bf48      	it	mi
 80155b4:	eef1 6a66 	vnegmi.f32	s13, s13
 80155b8:	b94e      	cbnz	r6, 80155ce <stroke_path+0xf4e>
 80155ba:	eeb4 7ae8 	vcmpe.f32	s14, s17
 80155be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155c2:	d504      	bpl.n	80155ce <stroke_path+0xf4e>
 80155c4:	eef4 6ae8 	vcmpe.f32	s13, s17
 80155c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155cc:	d424      	bmi.n	8015618 <stroke_path+0xf98>
 80155ce:	682a      	ldr	r2, [r5, #0]
 80155d0:	2a09      	cmp	r2, #9
 80155d2:	dc21      	bgt.n	8015618 <stroke_path+0xf98>
 80155d4:	4999      	ldr	r1, [pc, #612]	@ (801583c <stroke_path+0x11bc>)
 80155d6:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80155da:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80155de:	3201      	adds	r2, #1
 80155e0:	edc3 aa04 	vstr	s21, [r3, #16]
 80155e4:	ed83 aa05 	vstr	s20, [r3, #20]
 80155e8:	3401      	adds	r4, #1
 80155ea:	eeb0 ba43 	vmov.f32	s22, s6
 80155ee:	eef0 ba63 	vmov.f32	s23, s7
 80155f2:	eeb0 ca44 	vmov.f32	s24, s8
 80155f6:	eef0 ca64 	vmov.f32	s25, s9
 80155fa:	ed83 6a00 	vstr	s12, [r3]
 80155fe:	edc3 7a01 	vstr	s15, [r3, #4]
 8015602:	ed83 5a02 	vstr	s10, [r3, #8]
 8015606:	edc3 5a03 	vstr	s11, [r3, #12]
 801560a:	602a      	str	r2, [r5, #0]
 801560c:	eeb0 aa69 	vmov.f32	s20, s19
 8015610:	eef0 aa49 	vmov.f32	s21, s18
 8015614:	2600      	movs	r6, #0
 8015616:	e785      	b.n	8015524 <stroke_path+0xea4>
 8015618:	eef0 1a69 	vmov.f32	s3, s19
 801561c:	eeb0 1a49 	vmov.f32	s2, s18
 8015620:	eef0 0a4d 	vmov.f32	s1, s26
 8015624:	eeb0 0a6d 	vmov.f32	s0, s27
 8015628:	f7fd f976 	bl	8012918 <raster_stroked_line_>
 801562c:	eef0 1a4a 	vmov.f32	s3, s20
 8015630:	eeb0 1a6a 	vmov.f32	s2, s21
 8015634:	eef0 0a69 	vmov.f32	s1, s19
 8015638:	eeb0 0a49 	vmov.f32	s0, s18
 801563c:	f7fd f96c 	bl	8012918 <raster_stroked_line_>
 8015640:	682a      	ldr	r2, [r5, #0]
 8015642:	3c01      	subs	r4, #1
 8015644:	b1b2      	cbz	r2, 8015674 <stroke_path+0xff4>
 8015646:	3a01      	subs	r2, #1
 8015648:	497c      	ldr	r1, [pc, #496]	@ (801583c <stroke_path+0x11bc>)
 801564a:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801564e:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8015652:	eeb0 da4a 	vmov.f32	s26, s20
 8015656:	eef0 da6a 	vmov.f32	s27, s21
 801565a:	edd3 ca00 	vldr	s25, [r3]
 801565e:	ed93 ca01 	vldr	s24, [r3, #4]
 8015662:	edd3 ba02 	vldr	s23, [r3, #8]
 8015666:	ed93 ba03 	vldr	s22, [r3, #12]
 801566a:	ed93 aa05 	vldr	s20, [r3, #20]
 801566e:	edd3 aa04 	vldr	s21, [r3, #16]
 8015672:	602a      	str	r2, [r5, #0]
 8015674:	2c00      	cmp	r4, #0
 8015676:	f47f af55 	bne.w	8015524 <stroke_path+0xea4>
 801567a:	f7ff b8b5 	b.w	80147e8 <stroke_path+0x168>
 801567e:	f1ba 0f0b 	cmp.w	sl, #11
 8015682:	f47f abb4 	bne.w	8014dee <stroke_path+0x76e>
 8015686:	9009      	str	r0, [sp, #36]	@ 0x24
 8015688:	eddc 7a00 	vldr	s15, [ip]
 801568c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015690:	ee17 1a90 	vmov	r1, s15
 8015694:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8015698:	1049      	asrs	r1, r1, #1
 801569a:	2900      	cmp	r1, #0
 801569c:	9102      	str	r1, [sp, #8]
 801569e:	f340 8132 	ble.w	8015906 <stroke_path+0x1286>
 80156a2:	2100      	movs	r1, #0
 80156a4:	4d66      	ldr	r5, [pc, #408]	@ (8015840 <stroke_path+0x11c0>)
 80156a6:	f8cd a014 	str.w	sl, [sp, #20]
 80156aa:	f8cd 800c 	str.w	r8, [sp, #12]
 80156ae:	46aa      	mov	sl, r5
 80156b0:	46c8      	mov	r8, r9
 80156b2:	46a1      	mov	r9, r4
 80156b4:	460c      	mov	r4, r1
 80156b6:	e038      	b.n	801572a <stroke_path+0x10aa>
 80156b8:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 80156bc:	ee78 8a81 	vadd.f32	s17, s17, s2
 80156c0:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 80156c4:	9209      	str	r2, [sp, #36]	@ 0x24
 80156c6:	ed91 9a00 	vldr	s18, [r1]
 80156ca:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 80156ce:	ee39 9a21 	vadd.f32	s18, s18, s3
 80156d2:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 80156d6:	edcd 8a13 	vstr	s17, [sp, #76]	@ 0x4c
 80156da:	ed8d 9a14 	vstr	s18, [sp, #80]	@ 0x50
 80156de:	f8da 3000 	ldr.w	r3, [sl]
 80156e2:	f88d 9064 	strb.w	r9, [sp, #100]	@ 0x64
 80156e6:	7f1a      	ldrb	r2, [r3, #28]
 80156e8:	2a00      	cmp	r2, #0
 80156ea:	d161      	bne.n	80157b0 <stroke_path+0x1130>
 80156ec:	4a55      	ldr	r2, [pc, #340]	@ (8015844 <stroke_path+0x11c4>)
 80156ee:	eddd 9a0b 	vldr	s19, [sp, #44]	@ 0x2c
 80156f2:	6812      	ldr	r2, [r2, #0]
 80156f4:	ed9d aa0c 	vldr	s20, [sp, #48]	@ 0x30
 80156f8:	2a00      	cmp	r2, #0
 80156fa:	f000 80d3 	beq.w	80158a4 <stroke_path+0x1224>
 80156fe:	eef0 1a49 	vmov.f32	s3, s18
 8015702:	eeb0 1a68 	vmov.f32	s2, s17
 8015706:	eef0 0a4a 	vmov.f32	s1, s20
 801570a:	eeb0 0a69 	vmov.f32	s0, s19
 801570e:	f7fd f903 	bl	8012918 <raster_stroked_line_>
 8015712:	e897 0003 	ldmia.w	r7, {r0, r1}
 8015716:	9b02      	ldr	r3, [sp, #8]
 8015718:	3401      	adds	r4, #1
 801571a:	429c      	cmp	r4, r3
 801571c:	e886 0003 	stmia.w	r6, {r0, r1}
 8015720:	f000 809a 	beq.w	8015858 <stroke_path+0x11d8>
 8015724:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8015728:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801572a:	0090      	lsls	r0, r2, #2
 801572c:	1d01      	adds	r1, r0, #4
 801572e:	4419      	add	r1, r3
 8015730:	9d03      	ldr	r5, [sp, #12]
 8015732:	4403      	add	r3, r0
 8015734:	1c50      	adds	r0, r2, #1
 8015736:	9009      	str	r0, [sp, #36]	@ 0x24
 8015738:	3202      	adds	r2, #2
 801573a:	edd3 8a00 	vldr	s17, [r3]
 801573e:	2d00      	cmp	r5, #0
 8015740:	d1ba      	bne.n	80156b8 <stroke_path+0x1038>
 8015742:	edcd 8a0d 	vstr	s17, [sp, #52]	@ 0x34
 8015746:	9209      	str	r2, [sp, #36]	@ 0x24
 8015748:	ed91 9a00 	vldr	s18, [r1]
 801574c:	ed8d 9a0e 	vstr	s18, [sp, #56]	@ 0x38
 8015750:	e7c1      	b.n	80156d6 <stroke_path+0x1056>
 8015752:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8015754:	493c      	ldr	r1, [pc, #240]	@ (8015848 <stroke_path+0x11c8>)
 8015756:	2a00      	cmp	r2, #0
 8015758:	bf18      	it	ne
 801575a:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 801575e:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8015760:	780b      	ldrb	r3, [r1, #0]
 8015762:	4015      	ands	r5, r2
 8015764:	2b01      	cmp	r3, #1
 8015766:	d103      	bne.n	8015770 <stroke_path+0x10f0>
 8015768:	684b      	ldr	r3, [r1, #4]
 801576a:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801576e:	431d      	orrs	r5, r3
 8015770:	2005      	movs	r0, #5
 8015772:	f008 fad7 	bl	801dd24 <nema_cl_get_space>
 8015776:	2800      	cmp	r0, #0
 8015778:	f43f ad26 	beq.w	80151c8 <stroke_path+0xb48>
 801577c:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8015780:	f44f 7649 	mov.w	r6, #804	@ 0x324
 8015784:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8015788:	f44f 724d 	mov.w	r2, #820	@ 0x334
 801578c:	4b2f      	ldr	r3, [pc, #188]	@ (801584c <stroke_path+0x11cc>)
 801578e:	f045 050a 	orr.w	r5, r5, #10
 8015792:	6245      	str	r5, [r0, #36]	@ 0x24
 8015794:	edc0 9a01 	vstr	s19, [r0, #4]
 8015798:	ed80 aa03 	vstr	s20, [r0, #12]
 801579c:	edc0 8a05 	vstr	s17, [r0, #20]
 80157a0:	ed80 9a07 	vstr	s18, [r0, #28]
 80157a4:	6007      	str	r7, [r0, #0]
 80157a6:	6086      	str	r6, [r0, #8]
 80157a8:	6101      	str	r1, [r0, #16]
 80157aa:	6182      	str	r2, [r0, #24]
 80157ac:	6203      	str	r3, [r0, #32]
 80157ae:	e50b      	b.n	80151c8 <stroke_path+0xb48>
 80157b0:	4a27      	ldr	r2, [pc, #156]	@ (8015850 <stroke_path+0x11d0>)
 80157b2:	4b28      	ldr	r3, [pc, #160]	@ (8015854 <stroke_path+0x11d4>)
 80157b4:	6812      	ldr	r2, [r2, #0]
 80157b6:	2007      	movs	r0, #7
 80157b8:	9204      	str	r2, [sp, #16]
 80157ba:	681d      	ldr	r5, [r3, #0]
 80157bc:	f008 fab2 	bl	801dd24 <nema_cl_get_space>
 80157c0:	2800      	cmp	r0, #0
 80157c2:	d0a6      	beq.n	8015712 <stroke_path+0x1092>
 80157c4:	4a20      	ldr	r2, [pc, #128]	@ (8015848 <stroke_path+0x11c8>)
 80157c6:	f8da 3000 	ldr.w	r3, [sl]
 80157ca:	7812      	ldrb	r2, [r2, #0]
 80157cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80157ce:	2a01      	cmp	r2, #1
 80157d0:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 80157d4:	d104      	bne.n	80157e0 <stroke_path+0x1160>
 80157d6:	4a1c      	ldr	r2, [pc, #112]	@ (8015848 <stroke_path+0x11c8>)
 80157d8:	6852      	ldr	r2, [r2, #4]
 80157da:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 80157de:	4313      	orrs	r3, r2
 80157e0:	f44f 7248 	mov.w	r2, #800	@ 0x320
 80157e4:	6002      	str	r2, [r0, #0]
 80157e6:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 80157ea:	f44f 7249 	mov.w	r2, #804	@ 0x324
 80157ee:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 80157f2:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80157f6:	6082      	str	r2, [r0, #8]
 80157f8:	edc0 7a01 	vstr	s15, [r0, #4]
 80157fc:	f8c0 e018 	str.w	lr, [r0, #24]
 8015800:	f8dd e030 	ldr.w	lr, [sp, #48]	@ 0x30
 8015804:	f8c0 c010 	str.w	ip, [r0, #16]
 8015808:	f8c0 e00c 	str.w	lr, [r0, #12]
 801580c:	f043 0304 	orr.w	r3, r3, #4
 8015810:	f8dd c034 	ldr.w	ip, [sp, #52]	@ 0x34
 8015814:	6343      	str	r3, [r0, #52]	@ 0x34
 8015816:	9b04      	ldr	r3, [sp, #16]
 8015818:	f8c0 c014 	str.w	ip, [r0, #20]
 801581c:	6243      	str	r3, [r0, #36]	@ 0x24
 801581e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015820:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8015824:	61c3      	str	r3, [r0, #28]
 8015826:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 801582a:	4a08      	ldr	r2, [pc, #32]	@ (801584c <stroke_path+0x11cc>)
 801582c:	62c5      	str	r5, [r0, #44]	@ 0x2c
 801582e:	6302      	str	r2, [r0, #48]	@ 0x30
 8015830:	6201      	str	r1, [r0, #32]
 8015832:	6283      	str	r3, [r0, #40]	@ 0x28
 8015834:	e76d      	b.n	8015712 <stroke_path+0x1092>
 8015836:	bf00      	nop
 8015838:	20083148 	.word	0x20083148
 801583c:	20083058 	.word	0x20083058
 8015840:	20082fac 	.word	0x20082fac
 8015844:	20082fb4 	.word	0x20082fb4
 8015848:	20000064 	.word	0x20000064
 801584c:	ff000100 	.word	0xff000100
 8015850:	20082fb8 	.word	0x20082fb8
 8015854:	20082fbc 	.word	0x20082fbc
 8015858:	464c      	mov	r4, r9
 801585a:	46c1      	mov	r9, r8
 801585c:	4655      	mov	r5, sl
 801585e:	f8dd a014 	ldr.w	sl, [sp, #20]
 8015862:	682b      	ldr	r3, [r5, #0]
 8015864:	7f1b      	ldrb	r3, [r3, #28]
 8015866:	b1b3      	cbz	r3, 8015896 <stroke_path+0x1216>
 8015868:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801586c:	eddd 7a17 	vldr	s15, [sp, #92]	@ 0x5c
 8015870:	ee77 7a67 	vsub.f32	s15, s14, s15
 8015874:	eef5 7a40 	vcmp.f32	s15, #0.0
 8015878:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801587c:	d10b      	bne.n	8015896 <stroke_path+0x1216>
 801587e:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8015882:	eddd 7a18 	vldr	s15, [sp, #96]	@ 0x60
 8015886:	ee77 7a67 	vsub.f32	s15, s14, s15
 801588a:	eef5 7a40 	vcmp.f32	s15, #0.0
 801588e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015892:	f43f ac99 	beq.w	80151c8 <stroke_path+0xb48>
 8015896:	2301      	movs	r3, #1
 8015898:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 801589c:	f89d 3022 	ldrb.w	r3, [sp, #34]	@ 0x22
 80158a0:	f7fe bf86 	b.w	80147b0 <stroke_path+0x130>
 80158a4:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 80158a8:	2d00      	cmp	r5, #0
 80158aa:	bf18      	it	ne
 80158ac:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 80158b0:	4b16      	ldr	r3, [pc, #88]	@ (801590c <stroke_path+0x128c>)
 80158b2:	4015      	ands	r5, r2
 80158b4:	781b      	ldrb	r3, [r3, #0]
 80158b6:	2b01      	cmp	r3, #1
 80158b8:	d104      	bne.n	80158c4 <stroke_path+0x1244>
 80158ba:	4b14      	ldr	r3, [pc, #80]	@ (801590c <stroke_path+0x128c>)
 80158bc:	685b      	ldr	r3, [r3, #4]
 80158be:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80158c2:	431d      	orrs	r5, r3
 80158c4:	2005      	movs	r0, #5
 80158c6:	f008 fa2d 	bl	801dd24 <nema_cl_get_space>
 80158ca:	2800      	cmp	r0, #0
 80158cc:	f43f af21 	beq.w	8015712 <stroke_path+0x1092>
 80158d0:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 80158d4:	f44f 7149 	mov.w	r1, #804	@ 0x324
 80158d8:	f44f 724c 	mov.w	r2, #816	@ 0x330
 80158dc:	f44f 734d 	mov.w	r3, #820	@ 0x334
 80158e0:	f045 050a 	orr.w	r5, r5, #10
 80158e4:	6245      	str	r5, [r0, #36]	@ 0x24
 80158e6:	4d0a      	ldr	r5, [pc, #40]	@ (8015910 <stroke_path+0x1290>)
 80158e8:	edc0 9a01 	vstr	s19, [r0, #4]
 80158ec:	ed80 aa03 	vstr	s20, [r0, #12]
 80158f0:	edc0 8a05 	vstr	s17, [r0, #20]
 80158f4:	ed80 9a07 	vstr	s18, [r0, #28]
 80158f8:	6205      	str	r5, [r0, #32]
 80158fa:	f8c0 c000 	str.w	ip, [r0]
 80158fe:	6081      	str	r1, [r0, #8]
 8015900:	6102      	str	r2, [r0, #16]
 8015902:	6183      	str	r3, [r0, #24]
 8015904:	e705      	b.n	8015712 <stroke_path+0x1092>
 8015906:	4d03      	ldr	r5, [pc, #12]	@ (8015914 <stroke_path+0x1294>)
 8015908:	e7ab      	b.n	8015862 <stroke_path+0x11e2>
 801590a:	bf00      	nop
 801590c:	20000064 	.word	0x20000064
 8015910:	ff000100 	.word	0xff000100
 8015914:	20082fac 	.word	0x20082fac

08015918 <fill_path_even_odd>:
 8015918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801591c:	ed2d 8b06 	vpush	{d8-d10}
 8015920:	edd0 6a17 	vldr	s13, [r0, #92]	@ 0x5c
 8015924:	edd0 7a15 	vldr	s15, [r0, #84]	@ 0x54
 8015928:	ed90 7a14 	vldr	s14, [r0, #80]	@ 0x50
 801592c:	ed90 6a16 	vldr	s12, [r0, #88]	@ 0x58
 8015930:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015934:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8015938:	ee37 7a06 	vadd.f32	s14, s14, s12
 801593c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8015940:	ee27 7a26 	vmul.f32	s14, s14, s13
 8015944:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015948:	ee17 4a90 	vmov	r4, s15
 801594c:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8015950:	ee17 5a90 	vmov	r5, s15
 8015954:	4b93      	ldr	r3, [pc, #588]	@ (8015ba4 <fill_path_even_odd+0x28c>)
 8015956:	0424      	lsls	r4, r4, #16
 8015958:	601c      	str	r4, [r3, #0]
 801595a:	4b93      	ldr	r3, [pc, #588]	@ (8015ba8 <fill_path_even_odd+0x290>)
 801595c:	b099      	sub	sp, #100	@ 0x64
 801595e:	4682      	mov	sl, r0
 8015960:	042d      	lsls	r5, r5, #16
 8015962:	2002      	movs	r0, #2
 8015964:	601d      	str	r5, [r3, #0]
 8015966:	f008 f9dd 	bl	801dd24 <nema_cl_get_space>
 801596a:	b138      	cbz	r0, 801597c <fill_path_even_odd+0x64>
 801596c:	f44f 7286 	mov.w	r2, #268	@ 0x10c
 8015970:	f44f 7394 	mov.w	r3, #296	@ 0x128
 8015974:	6045      	str	r5, [r0, #4]
 8015976:	60c4      	str	r4, [r0, #12]
 8015978:	6002      	str	r2, [r0, #0]
 801597a:	6083      	str	r3, [r0, #8]
 801597c:	2246      	movs	r2, #70	@ 0x46
 801597e:	2100      	movs	r1, #0
 8015980:	f10d 001a 	add.w	r0, sp, #26
 8015984:	f01c ffbf 	bl	8032906 <memset>
 8015988:	f240 1201 	movw	r2, #257	@ 0x101
 801598c:	2400      	movs	r4, #0
 801598e:	2301      	movs	r3, #1
 8015990:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015994:	f8da 2000 	ldr.w	r2, [sl]
 8015998:	f88d 301a 	strb.w	r3, [sp, #26]
 801599c:	42a2      	cmp	r2, r4
 801599e:	f8df b218 	ldr.w	fp, [pc, #536]	@ 8015bb8 <fill_path_even_odd+0x2a0>
 80159a2:	ed9f 9a82 	vldr	s18, [pc, #520]	@ 8015bac <fill_path_even_odd+0x294>
 80159a6:	f240 80f1 	bls.w	8015b8c <fill_path_even_odd+0x274>
 80159aa:	f8da 3008 	ldr.w	r3, [sl, #8]
 80159ae:	f10d 082c 	add.w	r8, sp, #44	@ 0x2c
 80159b2:	5d1d      	ldrb	r5, [r3, r4]
 80159b4:	af09      	add	r7, sp, #36	@ 0x24
 80159b6:	f005 066f 	and.w	r6, r5, #111	@ 0x6f
 80159ba:	f005 0310 	and.w	r3, r5, #16
 80159be:	2e01      	cmp	r6, #1
 80159c0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80159c4:	f104 0901 	add.w	r9, r4, #1
 80159c8:	9301      	str	r3, [sp, #4]
 80159ca:	e887 0003 	stmia.w	r7, {r0, r1}
 80159ce:	f000 815f 	beq.w	8015c90 <fill_path_even_odd+0x378>
 80159d2:	0669      	lsls	r1, r5, #25
 80159d4:	f000 80f2 	beq.w	8015bbc <fill_path_even_odd+0x2a4>
 80159d8:	9907      	ldr	r1, [sp, #28]
 80159da:	f89d c05c 	ldrb.w	ip, [sp, #92]	@ 0x5c
 80159de:	b911      	cbnz	r1, 80159e6 <fill_path_even_odd+0xce>
 80159e0:	2301      	movs	r3, #1
 80159e2:	f88d 3018 	strb.w	r3, [sp, #24]
 80159e6:	2200      	movs	r2, #0
 80159e8:	f8da 300c 	ldr.w	r3, [sl, #12]
 80159ec:	0088      	lsls	r0, r1, #2
 80159ee:	181c      	adds	r4, r3, r0
 80159f0:	9003      	str	r0, [sp, #12]
 80159f2:	2e06      	cmp	r6, #6
 80159f4:	f101 0001 	add.w	r0, r1, #1
 80159f8:	46a6      	mov	lr, r4
 80159fa:	f88d 201a 	strb.w	r2, [sp, #26]
 80159fe:	9004      	str	r0, [sp, #16]
 8015a00:	f000 8232 	beq.w	8015e68 <fill_path_even_odd+0x550>
 8015a04:	2e05      	cmp	r6, #5
 8015a06:	f000 837d 	beq.w	8016104 <fill_path_even_odd+0x7ec>
 8015a0a:	2e07      	cmp	r6, #7
 8015a0c:	f00c 0c6f 	and.w	ip, ip, #111	@ 0x6f
 8015a10:	f000 841e 	beq.w	8016250 <fill_path_even_odd+0x938>
 8015a14:	2e08      	cmp	r6, #8
 8015a16:	f000 828c 	beq.w	8015f32 <fill_path_even_odd+0x61a>
 8015a1a:	f005 020f 	and.w	r2, r5, #15
 8015a1e:	2a09      	cmp	r2, #9
 8015a20:	9202      	str	r2, [sp, #8]
 8015a22:	f000 84cf 	beq.w	80163c4 <fill_path_even_odd+0xaac>
 8015a26:	2e04      	cmp	r6, #4
 8015a28:	f040 82ac 	bne.w	8015f84 <fill_path_even_odd+0x66c>
 8015a2c:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 8015a30:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015a34:	9b01      	ldr	r3, [sp, #4]
 8015a36:	9007      	str	r0, [sp, #28]
 8015a38:	edde 7a00 	vldr	s15, [lr]
 8015a3c:	2b00      	cmp	r3, #0
 8015a3e:	f000 834c 	beq.w	80160da <fill_path_even_odd+0x7c2>
 8015a42:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8015a46:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015a4a:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015a4e:	f8db 3000 	ldr.w	r3, [fp]
 8015a52:	7f1b      	ldrb	r3, [r3, #28]
 8015a54:	2b00      	cmp	r3, #0
 8015a56:	f000 8249 	beq.w	8015eec <fill_path_even_odd+0x5d4>
 8015a5a:	ed9d 7a15 	vldr	s14, [sp, #84]	@ 0x54
 8015a5e:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8015a62:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8015a66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015a6a:	d109      	bne.n	8015a80 <fill_path_even_odd+0x168>
 8015a6c:	ed9d 7a16 	vldr	s14, [sp, #88]	@ 0x58
 8015a70:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8015a74:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8015a78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015a7c:	f000 840e 	beq.w	801629c <fill_path_even_odd+0x984>
 8015a80:	2301      	movs	r3, #1
 8015a82:	f88d 3019 	strb.w	r3, [sp, #25]
 8015a86:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8015a8a:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015a8e:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015a92:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015a96:	2b00      	cmp	r3, #0
 8015a98:	f040 80f6 	bne.w	8015c88 <fill_path_even_odd+0x370>
 8015a9c:	2e06      	cmp	r6, #6
 8015a9e:	f040 80a7 	bne.w	8015bf0 <fill_path_even_odd+0x2d8>
 8015aa2:	f8db 2000 	ldr.w	r2, [fp]
 8015aa6:	4b42      	ldr	r3, [pc, #264]	@ (8015bb0 <fill_path_even_odd+0x298>)
 8015aa8:	6a94      	ldr	r4, [r2, #40]	@ 0x28
 8015aaa:	4a3f      	ldr	r2, [pc, #252]	@ (8015ba8 <fill_path_even_odd+0x290>)
 8015aac:	781b      	ldrb	r3, [r3, #0]
 8015aae:	2c00      	cmp	r4, #0
 8015ab0:	6816      	ldr	r6, [r2, #0]
 8015ab2:	4a3c      	ldr	r2, [pc, #240]	@ (8015ba4 <fill_path_even_odd+0x28c>)
 8015ab4:	bf18      	it	ne
 8015ab6:	f04f 64f0 	movne.w	r4, #125829120	@ 0x7800000
 8015aba:	2b01      	cmp	r3, #1
 8015abc:	6815      	ldr	r5, [r2, #0]
 8015abe:	d104      	bne.n	8015aca <fill_path_even_odd+0x1b2>
 8015ac0:	4b3b      	ldr	r3, [pc, #236]	@ (8015bb0 <fill_path_even_odd+0x298>)
 8015ac2:	685b      	ldr	r3, [r3, #4]
 8015ac4:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015ac8:	431c      	orrs	r4, r3
 8015aca:	2010      	movs	r0, #16
 8015acc:	f008 f92a 	bl	801dd24 <nema_cl_get_space>
 8015ad0:	2800      	cmp	r0, #0
 8015ad2:	f000 80d9 	beq.w	8015c88 <fill_path_even_odd+0x370>
 8015ad6:	f44f 714a 	mov.w	r1, #808	@ 0x328
 8015ada:	6001      	str	r1, [r0, #0]
 8015adc:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 8015ae0:	f44f 784b 	mov.w	r8, #812	@ 0x32c
 8015ae4:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8015ae8:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 8015aec:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8015af0:	f8c0 8008 	str.w	r8, [r0, #8]
 8015af4:	edc0 7a01 	vstr	s15, [r0, #4]
 8015af8:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8015afc:	f8c0 e010 	str.w	lr, [r0, #16]
 8015b00:	f8c0 800c 	str.w	r8, [r0, #12]
 8015b04:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8015b08:	f8c0 c018 	str.w	ip, [r0, #24]
 8015b0c:	f8c0 e014 	str.w	lr, [r0, #20]
 8015b10:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 8015b14:	6202      	str	r2, [r0, #32]
 8015b16:	f8c0 e01c 	str.w	lr, [r0, #28]
 8015b1a:	6482      	str	r2, [r0, #72]	@ 0x48
 8015b1c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015b1e:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8015b22:	64c2      	str	r2, [r0, #76]	@ 0x4c
 8015b24:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015b26:	f44f 77a0 	mov.w	r7, #320	@ 0x140
 8015b2a:	6542      	str	r2, [r0, #84]	@ 0x54
 8015b2c:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015b30:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8015b34:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8015b38:	6346      	str	r6, [r0, #52]	@ 0x34
 8015b3a:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
 8015b3e:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 8015b40:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8015b42:	6283      	str	r3, [r0, #40]	@ 0x28
 8015b44:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015b46:	6503      	str	r3, [r0, #80]	@ 0x50
 8015b48:	4b1a      	ldr	r3, [pc, #104]	@ (8015bb4 <fill_path_even_odd+0x29c>)
 8015b4a:	6382      	str	r2, [r0, #56]	@ 0x38
 8015b4c:	f044 0204 	orr.w	r2, r4, #4
 8015b50:	6307      	str	r7, [r0, #48]	@ 0x30
 8015b52:	6581      	str	r1, [r0, #88]	@ 0x58
 8015b54:	e9c0 3210 	strd	r3, r2, [r0, #64]	@ 0x40
 8015b58:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8015b5a:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8015b5e:	65c6      	str	r6, [r0, #92]	@ 0x5c
 8015b60:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8015b64:	f44f 7651 	mov.w	r6, #836	@ 0x344
 8015b68:	f044 0407 	orr.w	r4, r4, #7
 8015b6c:	e9c0 341e 	strd	r3, r4, [r0, #120]	@ 0x78
 8015b70:	464c      	mov	r4, r9
 8015b72:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8015b74:	f8c0 c06c 	str.w	ip, [r0, #108]	@ 0x6c
 8015b78:	6745      	str	r5, [r0, #116]	@ 0x74
 8015b7a:	6647      	str	r7, [r0, #100]	@ 0x64
 8015b7c:	6606      	str	r6, [r0, #96]	@ 0x60
 8015b7e:	6681      	str	r1, [r0, #104]	@ 0x68
 8015b80:	6702      	str	r2, [r0, #112]	@ 0x70
 8015b82:	f8da 2000 	ldr.w	r2, [sl]
 8015b86:	42a2      	cmp	r2, r4
 8015b88:	f63f af0f 	bhi.w	80159aa <fill_path_even_odd+0x92>
 8015b8c:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8015b90:	2b01      	cmp	r3, #1
 8015b92:	f000 8395 	beq.w	80162c0 <fill_path_even_odd+0x9a8>
 8015b96:	2500      	movs	r5, #0
 8015b98:	4628      	mov	r0, r5
 8015b9a:	b019      	add	sp, #100	@ 0x64
 8015b9c:	ecbd 8b06 	vpop	{d8-d10}
 8015ba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ba4:	20082fbc 	.word	0x20082fbc
 8015ba8:	20082fb8 	.word	0x20082fb8
 8015bac:	00000000 	.word	0x00000000
 8015bb0:	20000064 	.word	0x20000064
 8015bb4:	ff000100 	.word	0xff000100
 8015bb8:	20082fac 	.word	0x20082fac
 8015bbc:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8015bc0:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015bc4:	2b01      	cmp	r3, #1
 8015bc6:	bf04      	itt	eq
 8015bc8:	ee19 2a10 	vmoveq	r2, s18
 8015bcc:	ee19 1a10 	vmoveq	r1, s18
 8015bd0:	f04f 0300 	mov.w	r3, #0
 8015bd4:	bf1c      	itt	ne
 8015bd6:	9915      	ldrne	r1, [sp, #84]	@ 0x54
 8015bd8:	9a16      	ldrne	r2, [sp, #88]	@ 0x58
 8015bda:	2e06      	cmp	r6, #6
 8015bdc:	920c      	str	r2, [sp, #48]	@ 0x30
 8015bde:	910b      	str	r1, [sp, #44]	@ 0x2c
 8015be0:	9111      	str	r1, [sp, #68]	@ 0x44
 8015be2:	9212      	str	r2, [sp, #72]	@ 0x48
 8015be4:	f88d 301a 	strb.w	r3, [sp, #26]
 8015be8:	f88d 3019 	strb.w	r3, [sp, #25]
 8015bec:	f43f af59 	beq.w	8015aa2 <fill_path_even_odd+0x18a>
 8015bf0:	2e08      	cmp	r6, #8
 8015bf2:	f43f af56 	beq.w	8015aa2 <fill_path_even_odd+0x18a>
 8015bf6:	2e02      	cmp	r6, #2
 8015bf8:	d00e      	beq.n	8015c18 <fill_path_even_odd+0x300>
 8015bfa:	f005 036d 	and.w	r3, r5, #109	@ 0x6d
 8015bfe:	2b05      	cmp	r3, #5
 8015c00:	f000 80d0 	beq.w	8015da4 <fill_path_even_odd+0x48c>
 8015c04:	f005 030f 	and.w	r3, r5, #15
 8015c08:	9302      	str	r3, [sp, #8]
 8015c0a:	9b02      	ldr	r3, [sp, #8]
 8015c0c:	2b09      	cmp	r3, #9
 8015c0e:	f000 8295 	beq.w	801613c <fill_path_even_odd+0x824>
 8015c12:	3e0a      	subs	r6, #10
 8015c14:	2e01      	cmp	r6, #1
 8015c16:	d937      	bls.n	8015c88 <fill_path_even_odd+0x370>
 8015c18:	4bb7      	ldr	r3, [pc, #732]	@ (8015ef8 <fill_path_even_odd+0x5e0>)
 8015c1a:	2007      	movs	r0, #7
 8015c1c:	681d      	ldr	r5, [r3, #0]
 8015c1e:	4bb7      	ldr	r3, [pc, #732]	@ (8015efc <fill_path_even_odd+0x5e4>)
 8015c20:	681c      	ldr	r4, [r3, #0]
 8015c22:	f008 f87f 	bl	801dd24 <nema_cl_get_space>
 8015c26:	2800      	cmp	r0, #0
 8015c28:	d02e      	beq.n	8015c88 <fill_path_even_odd+0x370>
 8015c2a:	4ab5      	ldr	r2, [pc, #724]	@ (8015f00 <fill_path_even_odd+0x5e8>)
 8015c2c:	f8db 3000 	ldr.w	r3, [fp]
 8015c30:	7812      	ldrb	r2, [r2, #0]
 8015c32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015c34:	2a01      	cmp	r2, #1
 8015c36:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 8015c3a:	d104      	bne.n	8015c46 <fill_path_even_odd+0x32e>
 8015c3c:	4ab0      	ldr	r2, [pc, #704]	@ (8015f00 <fill_path_even_odd+0x5e8>)
 8015c3e:	6852      	ldr	r2, [r2, #4]
 8015c40:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8015c44:	4313      	orrs	r3, r2
 8015c46:	f44f 7148 	mov.w	r1, #800	@ 0x320
 8015c4a:	f44f 7749 	mov.w	r7, #804	@ 0x324
 8015c4e:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8015c52:	f44f 764c 	mov.w	r6, #816	@ 0x330
 8015c56:	6001      	str	r1, [r0, #0]
 8015c58:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015c5a:	6087      	str	r7, [r0, #8]
 8015c5c:	6041      	str	r1, [r0, #4]
 8015c5e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8015c60:	6106      	str	r6, [r0, #16]
 8015c62:	60c1      	str	r1, [r0, #12]
 8015c64:	6182      	str	r2, [r0, #24]
 8015c66:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015c68:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8015c6c:	6142      	str	r2, [r0, #20]
 8015c6e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8015c70:	f043 0304 	orr.w	r3, r3, #4
 8015c74:	61c2      	str	r2, [r0, #28]
 8015c76:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8015c7a:	6343      	str	r3, [r0, #52]	@ 0x34
 8015c7c:	4ba1      	ldr	r3, [pc, #644]	@ (8015f04 <fill_path_even_odd+0x5ec>)
 8015c7e:	6245      	str	r5, [r0, #36]	@ 0x24
 8015c80:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8015c82:	6201      	str	r1, [r0, #32]
 8015c84:	6282      	str	r2, [r0, #40]	@ 0x28
 8015c86:	6303      	str	r3, [r0, #48]	@ 0x30
 8015c88:	f8da 2000 	ldr.w	r2, [sl]
 8015c8c:	464c      	mov	r4, r9
 8015c8e:	e77a      	b.n	8015b86 <fill_path_even_odd+0x26e>
 8015c90:	f89d 1019 	ldrb.w	r1, [sp, #25]
 8015c94:	9b07      	ldr	r3, [sp, #28]
 8015c96:	2901      	cmp	r1, #1
 8015c98:	d038      	beq.n	8015d0c <fill_path_even_odd+0x3f4>
 8015c9a:	2401      	movs	r4, #1
 8015c9c:	2600      	movs	r6, #0
 8015c9e:	0098      	lsls	r0, r3, #2
 8015ca0:	f8da 100c 	ldr.w	r1, [sl, #12]
 8015ca4:	1d07      	adds	r7, r0, #4
 8015ca6:	440f      	add	r7, r1
 8015ca8:	f88d 401a 	strb.w	r4, [sp, #26]
 8015cac:	4401      	add	r1, r0
 8015cae:	1918      	adds	r0, r3, r4
 8015cb0:	9c01      	ldr	r4, [sp, #4]
 8015cb2:	9308      	str	r3, [sp, #32]
 8015cb4:	f88d 6018 	strb.w	r6, [sp, #24]
 8015cb8:	3302      	adds	r3, #2
 8015cba:	9007      	str	r0, [sp, #28]
 8015cbc:	b1e4      	cbz	r4, 8015cf8 <fill_path_even_odd+0x3e0>
 8015cbe:	edd1 7a00 	vldr	s15, [r1]
 8015cc2:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 8015cc6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8015cca:	9307      	str	r3, [sp, #28]
 8015ccc:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015cd0:	edd7 7a00 	vldr	s15, [r7]
 8015cd4:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 8015cd8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015cdc:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015ce0:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 8015ce4:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 8015ce8:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015cec:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 8015cf0:	f88d 505c 	strb.w	r5, [sp, #92]	@ 0x5c
 8015cf4:	464c      	mov	r4, r9
 8015cf6:	e746      	b.n	8015b86 <fill_path_even_odd+0x26e>
 8015cf8:	edd1 6a00 	vldr	s13, [r1]
 8015cfc:	9307      	str	r3, [sp, #28]
 8015cfe:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015d02:	edd7 7a00 	vldr	s15, [r7]
 8015d06:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015d0a:	e7e9      	b.n	8015ce0 <fill_path_even_odd+0x3c8>
 8015d0c:	2b00      	cmp	r3, #0
 8015d0e:	d0c4      	beq.n	8015c9a <fill_path_even_odd+0x382>
 8015d10:	f8db 1000 	ldr.w	r1, [fp]
 8015d14:	7f09      	ldrb	r1, [r1, #28]
 8015d16:	2900      	cmp	r1, #0
 8015d18:	d0bf      	beq.n	8015c9a <fill_path_even_odd+0x382>
 8015d1a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8015d1e:	2b00      	cmp	r3, #0
 8015d20:	f000 830c 	beq.w	801633c <fill_path_even_odd+0xa24>
 8015d24:	ee19 7a10 	vmov	r7, s18
 8015d28:	ee19 8a10 	vmov	r8, s18
 8015d2c:	4b72      	ldr	r3, [pc, #456]	@ (8015ef8 <fill_path_even_odd+0x5e0>)
 8015d2e:	2007      	movs	r0, #7
 8015d30:	681e      	ldr	r6, [r3, #0]
 8015d32:	4b72      	ldr	r3, [pc, #456]	@ (8015efc <fill_path_even_odd+0x5e4>)
 8015d34:	681c      	ldr	r4, [r3, #0]
 8015d36:	f007 fff5 	bl	801dd24 <nema_cl_get_space>
 8015d3a:	2800      	cmp	r0, #0
 8015d3c:	d02e      	beq.n	8015d9c <fill_path_even_odd+0x484>
 8015d3e:	4a70      	ldr	r2, [pc, #448]	@ (8015f00 <fill_path_even_odd+0x5e8>)
 8015d40:	f8db 3000 	ldr.w	r3, [fp]
 8015d44:	7811      	ldrb	r1, [r2, #0]
 8015d46:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8015d48:	2901      	cmp	r1, #1
 8015d4a:	f002 62f0 	and.w	r2, r2, #125829120	@ 0x7800000
 8015d4e:	d104      	bne.n	8015d5a <fill_path_even_odd+0x442>
 8015d50:	4b6b      	ldr	r3, [pc, #428]	@ (8015f00 <fill_path_even_odd+0x5e8>)
 8015d52:	685b      	ldr	r3, [r3, #4]
 8015d54:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015d58:	431a      	orrs	r2, r3
 8015d5a:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8015d5e:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8015d62:	6003      	str	r3, [r0, #0]
 8015d64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015d66:	6081      	str	r1, [r0, #8]
 8015d68:	6043      	str	r3, [r0, #4]
 8015d6a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015d6c:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8015d70:	61c7      	str	r7, [r0, #28]
 8015d72:	60c3      	str	r3, [r0, #12]
 8015d74:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8015d78:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8015d7c:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8015d80:	f042 0204 	orr.w	r2, r2, #4
 8015d84:	6342      	str	r2, [r0, #52]	@ 0x34
 8015d86:	4a5f      	ldr	r2, [pc, #380]	@ (8015f04 <fill_path_even_odd+0x5ec>)
 8015d88:	f8c0 8014 	str.w	r8, [r0, #20]
 8015d8c:	6246      	str	r6, [r0, #36]	@ 0x24
 8015d8e:	62c4      	str	r4, [r0, #44]	@ 0x2c
 8015d90:	f8c0 c010 	str.w	ip, [r0, #16]
 8015d94:	6187      	str	r7, [r0, #24]
 8015d96:	6201      	str	r1, [r0, #32]
 8015d98:	6283      	str	r3, [r0, #40]	@ 0x28
 8015d9a:	6302      	str	r2, [r0, #48]	@ 0x30
 8015d9c:	9b07      	ldr	r3, [sp, #28]
 8015d9e:	f8da 2000 	ldr.w	r2, [sl]
 8015da2:	e77a      	b.n	8015c9a <fill_path_even_odd+0x382>
 8015da4:	f8db 2000 	ldr.w	r2, [fp]
 8015da8:	4b55      	ldr	r3, [pc, #340]	@ (8015f00 <fill_path_even_odd+0x5e8>)
 8015daa:	6a94      	ldr	r4, [r2, #40]	@ 0x28
 8015dac:	4a52      	ldr	r2, [pc, #328]	@ (8015ef8 <fill_path_even_odd+0x5e0>)
 8015dae:	781b      	ldrb	r3, [r3, #0]
 8015db0:	2c00      	cmp	r4, #0
 8015db2:	6816      	ldr	r6, [r2, #0]
 8015db4:	4a51      	ldr	r2, [pc, #324]	@ (8015efc <fill_path_even_odd+0x5e4>)
 8015db6:	bf18      	it	ne
 8015db8:	f04f 64f0 	movne.w	r4, #125829120	@ 0x7800000
 8015dbc:	2b01      	cmp	r3, #1
 8015dbe:	6815      	ldr	r5, [r2, #0]
 8015dc0:	d104      	bne.n	8015dcc <fill_path_even_odd+0x4b4>
 8015dc2:	4b4f      	ldr	r3, [pc, #316]	@ (8015f00 <fill_path_even_odd+0x5e8>)
 8015dc4:	685b      	ldr	r3, [r3, #4]
 8015dc6:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8015dca:	431c      	orrs	r4, r3
 8015dcc:	200e      	movs	r0, #14
 8015dce:	f007 ffa9 	bl	801dd24 <nema_cl_get_space>
 8015dd2:	2800      	cmp	r0, #0
 8015dd4:	f43f af58 	beq.w	8015c88 <fill_path_even_odd+0x370>
 8015dd8:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8015ddc:	6283      	str	r3, [r0, #40]	@ 0x28
 8015dde:	6503      	str	r3, [r0, #80]	@ 0x50
 8015de0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8015de4:	f44f 714a 	mov.w	r1, #808	@ 0x328
 8015de8:	f44f 7849 	mov.w	r8, #804	@ 0x324
 8015dec:	f44f 7e4b 	mov.w	lr, #812	@ 0x32c
 8015df0:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8015df4:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8015df8:	6303      	str	r3, [r0, #48]	@ 0x30
 8015dfa:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8015dfe:	6001      	str	r1, [r0, #0]
 8015e00:	f8c0 8018 	str.w	r8, [r0, #24]
 8015e04:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8015e08:	f8c0 e008 	str.w	lr, [r0, #8]
 8015e0c:	f8c0 8004 	str.w	r8, [r0, #4]
 8015e10:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 8015e14:	f8c0 c010 	str.w	ip, [r0, #16]
 8015e18:	f8c0 e00c 	str.w	lr, [r0, #12]
 8015e1c:	6346      	str	r6, [r0, #52]	@ 0x34
 8015e1e:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8015e20:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8015e22:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8015e24:	6146      	str	r6, [r0, #20]
 8015e26:	61c5      	str	r5, [r0, #28]
 8015e28:	6202      	str	r2, [r0, #32]
 8015e2a:	6482      	str	r2, [r0, #72]	@ 0x48
 8015e2c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015e2e:	6383      	str	r3, [r0, #56]	@ 0x38
 8015e30:	4b34      	ldr	r3, [pc, #208]	@ (8015f04 <fill_path_even_odd+0x5ec>)
 8015e32:	6542      	str	r2, [r0, #84]	@ 0x54
 8015e34:	f044 0204 	orr.w	r2, r4, #4
 8015e38:	e9c0 3210 	strd	r3, r2, [r0, #64]	@ 0x40
 8015e3c:	f44f 7750 	mov.w	r7, #832	@ 0x340
 8015e40:	f44f 7251 	mov.w	r2, #836	@ 0x344
 8015e44:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8015e46:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8015e48:	6246      	str	r6, [r0, #36]	@ 0x24
 8015e4a:	65c6      	str	r6, [r0, #92]	@ 0x5c
 8015e4c:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 8015e4e:	f044 0406 	orr.w	r4, r4, #6
 8015e52:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8015e54:	64c6      	str	r6, [r0, #76]	@ 0x4c
 8015e56:	6587      	str	r7, [r0, #88]	@ 0x58
 8015e58:	6602      	str	r2, [r0, #96]	@ 0x60
 8015e5a:	e9c0 341a 	strd	r3, r4, [r0, #104]	@ 0x68
 8015e5e:	6645      	str	r5, [r0, #100]	@ 0x64
 8015e60:	f8da 2000 	ldr.w	r2, [sl]
 8015e64:	464c      	mov	r4, r9
 8015e66:	e68e      	b.n	8015b86 <fill_path_even_odd+0x26e>
 8015e68:	9007      	str	r0, [sp, #28]
 8015e6a:	ed94 6a00 	vldr	s12, [r4]
 8015e6e:	ed8d 6a0d 	vstr	s12, [sp, #52]	@ 0x34
 8015e72:	1c8a      	adds	r2, r1, #2
 8015e74:	9207      	str	r2, [sp, #28]
 8015e76:	edd4 6a01 	vldr	s13, [r4, #4]
 8015e7a:	edcd 6a0e 	vstr	s13, [sp, #56]	@ 0x38
 8015e7e:	1cca      	adds	r2, r1, #3
 8015e80:	9207      	str	r2, [sp, #28]
 8015e82:	ed94 7a02 	vldr	s14, [r4, #8]
 8015e86:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015e8a:	3104      	adds	r1, #4
 8015e8c:	9107      	str	r1, [sp, #28]
 8015e8e:	edd4 7a03 	vldr	s15, [r4, #12]
 8015e92:	9a01      	ldr	r2, [sp, #4]
 8015e94:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015e98:	2a00      	cmp	r2, #0
 8015e9a:	d135      	bne.n	8015f08 <fill_path_even_odd+0x5f0>
 8015e9c:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 8015ea0:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 8015ea4:	008a      	lsls	r2, r1, #2
 8015ea6:	1c48      	adds	r0, r1, #1
 8015ea8:	9203      	str	r2, [sp, #12]
 8015eaa:	9c03      	ldr	r4, [sp, #12]
 8015eac:	9007      	str	r0, [sp, #28]
 8015eae:	1d22      	adds	r2, r4, #4
 8015eb0:	441a      	add	r2, r3
 8015eb2:	4423      	add	r3, r4
 8015eb4:	9c01      	ldr	r4, [sp, #4]
 8015eb6:	3102      	adds	r1, #2
 8015eb8:	edd3 6a00 	vldr	s13, [r3]
 8015ebc:	2c00      	cmp	r4, #0
 8015ebe:	f000 8107 	beq.w	80160d0 <fill_path_even_odd+0x7b8>
 8015ec2:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 8015ec6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8015eca:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8015ece:	9107      	str	r1, [sp, #28]
 8015ed0:	ed92 7a00 	vldr	s14, [r2]
 8015ed4:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 8015ed8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015edc:	f8db 3000 	ldr.w	r3, [fp]
 8015ee0:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8015ee4:	7f1b      	ldrb	r3, [r3, #28]
 8015ee6:	2b00      	cmp	r3, #0
 8015ee8:	f47f adb7 	bne.w	8015a5a <fill_path_even_odd+0x142>
 8015eec:	2201      	movs	r2, #1
 8015eee:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8015ef2:	f88d 2019 	strb.w	r2, [sp, #25]
 8015ef6:	e5c8      	b.n	8015a8a <fill_path_even_odd+0x172>
 8015ef8:	20082fb8 	.word	0x20082fb8
 8015efc:	20082fbc 	.word	0x20082fbc
 8015f00:	20000064 	.word	0x20000064
 8015f04:	ff000100 	.word	0xff000100
 8015f08:	ed9d 5a11 	vldr	s10, [sp, #68]	@ 0x44
 8015f0c:	eddd 5a12 	vldr	s11, [sp, #72]	@ 0x48
 8015f10:	ee36 6a05 	vadd.f32	s12, s12, s10
 8015f14:	ee37 7a05 	vadd.f32	s14, s14, s10
 8015f18:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015f1c:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8015f20:	ed8d 6a0d 	vstr	s12, [sp, #52]	@ 0x34
 8015f24:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015f28:	edcd 6a0e 	vstr	s13, [sp, #56]	@ 0x38
 8015f2c:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015f30:	e7b4      	b.n	8015e9c <fill_path_even_odd+0x584>
 8015f32:	f1ac 0c05 	sub.w	ip, ip, #5
 8015f36:	f1bc 0f03 	cmp.w	ip, #3
 8015f3a:	ed9d 5a11 	vldr	s10, [sp, #68]	@ 0x44
 8015f3e:	eddd 5a12 	vldr	s11, [sp, #72]	@ 0x48
 8015f42:	f240 822f 	bls.w	80163a4 <fill_path_even_odd+0xa8c>
 8015f46:	eeb0 7a65 	vmov.f32	s14, s11
 8015f4a:	eef0 7a45 	vmov.f32	s15, s10
 8015f4e:	ed8d 7a0e 	vstr	s14, [sp, #56]	@ 0x38
 8015f52:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 8015f56:	9007      	str	r0, [sp, #28]
 8015f58:	ed94 7a00 	vldr	s14, [r4]
 8015f5c:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015f60:	3102      	adds	r1, #2
 8015f62:	9107      	str	r1, [sp, #28]
 8015f64:	edd4 7a01 	vldr	s15, [r4, #4]
 8015f68:	9a01      	ldr	r2, [sp, #4]
 8015f6a:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015f6e:	2a00      	cmp	r2, #0
 8015f70:	d094      	beq.n	8015e9c <fill_path_even_odd+0x584>
 8015f72:	ee37 7a05 	vadd.f32	s14, s14, s10
 8015f76:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8015f7a:	ed8d 7a0f 	vstr	s14, [sp, #60]	@ 0x3c
 8015f7e:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8015f82:	e78b      	b.n	8015e9c <fill_path_even_odd+0x584>
 8015f84:	2e03      	cmp	r6, #3
 8015f86:	f000 80ab 	beq.w	80160e0 <fill_path_even_odd+0x7c8>
 8015f8a:	2e0a      	cmp	r6, #10
 8015f8c:	f040 8259 	bne.w	8016442 <fill_path_even_odd+0xb2a>
 8015f90:	9007      	str	r0, [sp, #28]
 8015f92:	edde 7a00 	vldr	s15, [lr]
 8015f96:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015f9a:	ee17 1a90 	vmov	r1, s15
 8015f9e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8015fa2:	104a      	asrs	r2, r1, #1
 8015fa4:	2a00      	cmp	r2, #0
 8015fa6:	9203      	str	r2, [sp, #12]
 8015fa8:	f340 80e2 	ble.w	8016170 <fill_path_even_odd+0x858>
 8015fac:	9a04      	ldr	r2, [sp, #16]
 8015fae:	2400      	movs	r4, #0
 8015fb0:	f8cd 9010 	str.w	r9, [sp, #16]
 8015fb4:	46a9      	mov	r9, r5
 8015fb6:	9605      	str	r6, [sp, #20]
 8015fb8:	0091      	lsls	r1, r2, #2
 8015fba:	1d08      	adds	r0, r1, #4
 8015fbc:	4418      	add	r0, r3
 8015fbe:	9d01      	ldr	r5, [sp, #4]
 8015fc0:	440b      	add	r3, r1
 8015fc2:	1c51      	adds	r1, r2, #1
 8015fc4:	9107      	str	r1, [sp, #28]
 8015fc6:	3202      	adds	r2, #2
 8015fc8:	ed93 8a00 	vldr	s16, [r3]
 8015fcc:	b365      	cbz	r5, 8016028 <fill_path_even_odd+0x710>
 8015fce:	ed9d 1a11 	vldr	s2, [sp, #68]	@ 0x44
 8015fd2:	ee38 8a01 	vadd.f32	s16, s16, s2
 8015fd6:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8015fda:	9207      	str	r2, [sp, #28]
 8015fdc:	edd0 8a00 	vldr	s17, [r0]
 8015fe0:	eddd 1a12 	vldr	s3, [sp, #72]	@ 0x48
 8015fe4:	ee78 8aa1 	vadd.f32	s17, s17, s3
 8015fe8:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8015fec:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 8015ff0:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 8015ff4:	f8db 3000 	ldr.w	r3, [fp]
 8015ff8:	f88d 905c 	strb.w	r9, [sp, #92]	@ 0x5c
 8015ffc:	7f1a      	ldrb	r2, [r3, #28]
 8015ffe:	b9da      	cbnz	r2, 8016038 <fill_path_even_odd+0x720>
 8016000:	4aaa      	ldr	r2, [pc, #680]	@ (80162ac <fill_path_even_odd+0x994>)
 8016002:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8016006:	6812      	ldr	r2, [r2, #0]
 8016008:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 801600c:	2a00      	cmp	r2, #0
 801600e:	f000 8199 	beq.w	8016344 <fill_path_even_odd+0xa2c>
 8016012:	eef0 1a68 	vmov.f32	s3, s17
 8016016:	eeb0 1a48 	vmov.f32	s2, s16
 801601a:	eef0 0a4a 	vmov.f32	s1, s20
 801601e:	eeb0 0a69 	vmov.f32	s0, s19
 8016022:	f7fc fc79 	bl	8012918 <raster_stroked_line_>
 8016026:	e047      	b.n	80160b8 <fill_path_even_odd+0x7a0>
 8016028:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 801602c:	9207      	str	r2, [sp, #28]
 801602e:	edd0 8a00 	vldr	s17, [r0]
 8016032:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8016036:	e7d9      	b.n	8015fec <fill_path_even_odd+0x6d4>
 8016038:	4b9d      	ldr	r3, [pc, #628]	@ (80162b0 <fill_path_even_odd+0x998>)
 801603a:	2007      	movs	r0, #7
 801603c:	681e      	ldr	r6, [r3, #0]
 801603e:	4b9d      	ldr	r3, [pc, #628]	@ (80162b4 <fill_path_even_odd+0x99c>)
 8016040:	681d      	ldr	r5, [r3, #0]
 8016042:	f007 fe6f 	bl	801dd24 <nema_cl_get_space>
 8016046:	2800      	cmp	r0, #0
 8016048:	d036      	beq.n	80160b8 <fill_path_even_odd+0x7a0>
 801604a:	4a9b      	ldr	r2, [pc, #620]	@ (80162b8 <fill_path_even_odd+0x9a0>)
 801604c:	f8db 3000 	ldr.w	r3, [fp]
 8016050:	7812      	ldrb	r2, [r2, #0]
 8016052:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016054:	2a01      	cmp	r2, #1
 8016056:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 801605a:	d104      	bne.n	8016066 <fill_path_even_odd+0x74e>
 801605c:	4a96      	ldr	r2, [pc, #600]	@ (80162b8 <fill_path_even_odd+0x9a0>)
 801605e:	6852      	ldr	r2, [r2, #4]
 8016060:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8016064:	4313      	orrs	r3, r2
 8016066:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801606a:	6002      	str	r2, [r0, #0]
 801606c:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 8016070:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8016074:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 8016078:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801607c:	6082      	str	r2, [r0, #8]
 801607e:	edc0 7a01 	vstr	s15, [r0, #4]
 8016082:	f8c0 e018 	str.w	lr, [r0, #24]
 8016086:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 801608a:	f8c0 c010 	str.w	ip, [r0, #16]
 801608e:	f8c0 e00c 	str.w	lr, [r0, #12]
 8016092:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8016096:	f043 0304 	orr.w	r3, r3, #4
 801609a:	f8c0 c014 	str.w	ip, [r0, #20]
 801609e:	6343      	str	r3, [r0, #52]	@ 0x34
 80160a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80160a2:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80160a6:	61c3      	str	r3, [r0, #28]
 80160a8:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 80160ac:	4a83      	ldr	r2, [pc, #524]	@ (80162bc <fill_path_even_odd+0x9a4>)
 80160ae:	6246      	str	r6, [r0, #36]	@ 0x24
 80160b0:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80160b2:	6302      	str	r2, [r0, #48]	@ 0x30
 80160b4:	6201      	str	r1, [r0, #32]
 80160b6:	6283      	str	r3, [r0, #40]	@ 0x28
 80160b8:	9b03      	ldr	r3, [sp, #12]
 80160ba:	3401      	adds	r4, #1
 80160bc:	429c      	cmp	r4, r3
 80160be:	e898 0003 	ldmia.w	r8, {r0, r1}
 80160c2:	e887 0003 	stmia.w	r7, {r0, r1}
 80160c6:	d051      	beq.n	801616c <fill_path_even_odd+0x854>
 80160c8:	f8da 300c 	ldr.w	r3, [sl, #12]
 80160cc:	9a07      	ldr	r2, [sp, #28]
 80160ce:	e773      	b.n	8015fb8 <fill_path_even_odd+0x6a0>
 80160d0:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 80160d4:	9107      	str	r1, [sp, #28]
 80160d6:	edd2 7a00 	vldr	s15, [r2]
 80160da:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 80160de:	e4b6      	b.n	8015a4e <fill_path_even_odd+0x136>
 80160e0:	9b01      	ldr	r3, [sp, #4]
 80160e2:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 80160e6:	9007      	str	r0, [sp, #28]
 80160e8:	2b00      	cmp	r3, #0
 80160ea:	f000 80cf 	beq.w	801628c <fill_path_even_odd+0x974>
 80160ee:	ed9e 7a00 	vldr	s14, [lr]
 80160f2:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 80160f6:	ee76 6a87 	vadd.f32	s13, s13, s14
 80160fa:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 80160fe:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8016102:	e4a4      	b.n	8015a4e <fill_path_even_odd+0x136>
 8016104:	9007      	str	r0, [sp, #28]
 8016106:	ed94 7a00 	vldr	s14, [r4]
 801610a:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 801610e:	3102      	adds	r1, #2
 8016110:	9107      	str	r1, [sp, #28]
 8016112:	edd4 7a01 	vldr	s15, [r4, #4]
 8016116:	9a01      	ldr	r2, [sp, #4]
 8016118:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 801611c:	2a00      	cmp	r2, #0
 801611e:	f43f aebd 	beq.w	8015e9c <fill_path_even_odd+0x584>
 8016122:	ed9d 6a11 	vldr	s12, [sp, #68]	@ 0x44
 8016126:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801612a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801612e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8016132:	ed8d 7a0d 	vstr	s14, [sp, #52]	@ 0x34
 8016136:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 801613a:	e6af      	b.n	8015e9c <fill_path_even_odd+0x584>
 801613c:	2002      	movs	r0, #2
 801613e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8016140:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8016142:	f007 fdef 	bl	801dd24 <nema_cl_get_space>
 8016146:	b138      	cbz	r0, 8016158 <fill_path_even_odd+0x840>
 8016148:	f44f 724a 	mov.w	r2, #808	@ 0x328
 801614c:	f44f 734b 	mov.w	r3, #812	@ 0x32c
 8016150:	6045      	str	r5, [r0, #4]
 8016152:	60c4      	str	r4, [r0, #12]
 8016154:	6002      	str	r2, [r0, #0]
 8016156:	6083      	str	r3, [r0, #8]
 8016158:	a806      	add	r0, sp, #24
 801615a:	f7fd f83d 	bl	80131d8 <fill_arc.isra.7>
 801615e:	4605      	mov	r5, r0
 8016160:	2800      	cmp	r0, #0
 8016162:	f43f ad59 	beq.w	8015c18 <fill_path_even_odd+0x300>
 8016166:	f006 fc85 	bl	801ca74 <nema_vg_set_error>
 801616a:	e515      	b.n	8015b98 <fill_path_even_odd+0x280>
 801616c:	e9dd 9604 	ldrd	r9, r6, [sp, #16]
 8016170:	ed9d 8a15 	vldr	s16, [sp, #84]	@ 0x54
 8016174:	eddd 7a11 	vldr	s15, [sp, #68]	@ 0x44
 8016178:	ee77 7ac8 	vsub.f32	s15, s15, s16
 801617c:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016180:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016184:	eddd 8a16 	vldr	s17, [sp, #88]	@ 0x58
 8016188:	d111      	bne.n	80161ae <fill_path_even_odd+0x896>
 801618a:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801618e:	ee77 7ae8 	vsub.f32	s15, s15, s17
 8016192:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016196:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801619a:	d108      	bne.n	80161ae <fill_path_even_odd+0x896>
 801619c:	2300      	movs	r3, #0
 801619e:	f88d 3019 	strb.w	r3, [sp, #25]
 80161a2:	f89d 301a 	ldrb.w	r3, [sp, #26]
 80161a6:	2b00      	cmp	r3, #0
 80161a8:	f43f ad2f 	beq.w	8015c0a <fill_path_even_odd+0x2f2>
 80161ac:	e56c      	b.n	8015c88 <fill_path_even_odd+0x370>
 80161ae:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 80161b2:	e898 0003 	ldmia.w	r8, {r0, r1}
 80161b6:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 80161ba:	f8db 3000 	ldr.w	r3, [fp]
 80161be:	e887 0003 	stmia.w	r7, {r0, r1}
 80161c2:	7f1a      	ldrb	r2, [r3, #28]
 80161c4:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 80161c8:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 80161cc:	2a00      	cmp	r2, #0
 80161ce:	f000 8124 	beq.w	801641a <fill_path_even_odd+0xb02>
 80161d2:	4b37      	ldr	r3, [pc, #220]	@ (80162b0 <fill_path_even_odd+0x998>)
 80161d4:	2007      	movs	r0, #7
 80161d6:	681c      	ldr	r4, [r3, #0]
 80161d8:	4b36      	ldr	r3, [pc, #216]	@ (80162b4 <fill_path_even_odd+0x99c>)
 80161da:	f8d3 8000 	ldr.w	r8, [r3]
 80161de:	f007 fda1 	bl	801dd24 <nema_cl_get_space>
 80161e2:	2800      	cmp	r0, #0
 80161e4:	d0da      	beq.n	801619c <fill_path_even_odd+0x884>
 80161e6:	4a34      	ldr	r2, [pc, #208]	@ (80162b8 <fill_path_even_odd+0x9a0>)
 80161e8:	f8db 3000 	ldr.w	r3, [fp]
 80161ec:	7812      	ldrb	r2, [r2, #0]
 80161ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80161f0:	2a01      	cmp	r2, #1
 80161f2:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 80161f6:	d104      	bne.n	8016202 <fill_path_even_odd+0x8ea>
 80161f8:	4a2f      	ldr	r2, [pc, #188]	@ (80162b8 <fill_path_even_odd+0x9a0>)
 80161fa:	6852      	ldr	r2, [r2, #4]
 80161fc:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8016200:	4313      	orrs	r3, r2
 8016202:	f44f 7e48 	mov.w	lr, #800	@ 0x320
 8016206:	f44f 7c49 	mov.w	ip, #804	@ 0x324
 801620a:	f44f 774d 	mov.w	r7, #820	@ 0x334
 801620e:	f44f 754c 	mov.w	r5, #816	@ 0x330
 8016212:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8016216:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 801621a:	f8c0 e000 	str.w	lr, [r0]
 801621e:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8016222:	f8c0 c008 	str.w	ip, [r0, #8]
 8016226:	f8c0 e004 	str.w	lr, [r0, #4]
 801622a:	6187      	str	r7, [r0, #24]
 801622c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801622e:	6105      	str	r5, [r0, #16]
 8016230:	60c7      	str	r7, [r0, #12]
 8016232:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8016234:	f043 0304 	orr.w	r3, r3, #4
 8016238:	6145      	str	r5, [r0, #20]
 801623a:	6343      	str	r3, [r0, #52]	@ 0x34
 801623c:	6244      	str	r4, [r0, #36]	@ 0x24
 801623e:	4b1f      	ldr	r3, [pc, #124]	@ (80162bc <fill_path_even_odd+0x9a4>)
 8016240:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8016242:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 8016246:	61c4      	str	r4, [r0, #28]
 8016248:	6201      	str	r1, [r0, #32]
 801624a:	6282      	str	r2, [r0, #40]	@ 0x28
 801624c:	6303      	str	r3, [r0, #48]	@ 0x30
 801624e:	e7a5      	b.n	801619c <fill_path_even_odd+0x884>
 8016250:	f1ac 0c05 	sub.w	ip, ip, #5
 8016254:	f1bc 0f03 	cmp.w	ip, #3
 8016258:	eddd 6a11 	vldr	s13, [sp, #68]	@ 0x44
 801625c:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 8016260:	d80b      	bhi.n	801627a <fill_path_even_odd+0x962>
 8016262:	ee76 6aa6 	vadd.f32	s13, s13, s13
 8016266:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801626a:	ed9d 6a13 	vldr	s12, [sp, #76]	@ 0x4c
 801626e:	ed9d 7a14 	vldr	s14, [sp, #80]	@ 0x50
 8016272:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8016276:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801627a:	edcd 7a0e 	vstr	s15, [sp, #56]	@ 0x38
 801627e:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8016282:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 8016286:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801628a:	e60e      	b.n	8015eaa <fill_path_even_odd+0x592>
 801628c:	edde 6a00 	vldr	s13, [lr]
 8016290:	edcd 7a0c 	vstr	s15, [sp, #48]	@ 0x30
 8016294:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 8016298:	f7ff bbd9 	b.w	8015a4e <fill_path_even_odd+0x136>
 801629c:	2300      	movs	r3, #0
 801629e:	f88d 3019 	strb.w	r3, [sp, #25]
 80162a2:	f89d 301a 	ldrb.w	r3, [sp, #26]
 80162a6:	f7ff bbf0 	b.w	8015a8a <fill_path_even_odd+0x172>
 80162aa:	bf00      	nop
 80162ac:	20082fb4 	.word	0x20082fb4
 80162b0:	20082fb8 	.word	0x20082fb8
 80162b4:	20082fbc 	.word	0x20082fbc
 80162b8:	20000064 	.word	0x20000064
 80162bc:	ff000100 	.word	0xff000100
 80162c0:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80162c4:	2b00      	cmp	r3, #0
 80162c6:	d17a      	bne.n	80163be <fill_path_even_odd+0xaa6>
 80162c8:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 80162ca:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 80162cc:	4b8f      	ldr	r3, [pc, #572]	@ (801650c <fill_path_even_odd+0xbf4>)
 80162ce:	2007      	movs	r0, #7
 80162d0:	681e      	ldr	r6, [r3, #0]
 80162d2:	4b8f      	ldr	r3, [pc, #572]	@ (8016510 <fill_path_even_odd+0xbf8>)
 80162d4:	681d      	ldr	r5, [r3, #0]
 80162d6:	f007 fd25 	bl	801dd24 <nema_cl_get_space>
 80162da:	2800      	cmp	r0, #0
 80162dc:	f43f ac5b 	beq.w	8015b96 <fill_path_even_odd+0x27e>
 80162e0:	4b8c      	ldr	r3, [pc, #560]	@ (8016514 <fill_path_even_odd+0xbfc>)
 80162e2:	4a8d      	ldr	r2, [pc, #564]	@ (8016518 <fill_path_even_odd+0xc00>)
 80162e4:	681b      	ldr	r3, [r3, #0]
 80162e6:	7811      	ldrb	r1, [r2, #0]
 80162e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80162ea:	2901      	cmp	r1, #1
 80162ec:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 80162f0:	d103      	bne.n	80162fa <fill_path_even_odd+0x9e2>
 80162f2:	6852      	ldr	r2, [r2, #4]
 80162f4:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 80162f8:	4313      	orrs	r3, r2
 80162fa:	f44f 7248 	mov.w	r2, #800	@ 0x320
 80162fe:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8016302:	6002      	str	r2, [r0, #0]
 8016304:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8016306:	6081      	str	r1, [r0, #8]
 8016308:	6042      	str	r2, [r0, #4]
 801630a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801630c:	61c4      	str	r4, [r0, #28]
 801630e:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8016312:	60c2      	str	r2, [r0, #12]
 8016314:	f44f 744d 	mov.w	r4, #820	@ 0x334
 8016318:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801631c:	f44f 72a2 	mov.w	r2, #324	@ 0x144
 8016320:	f043 0304 	orr.w	r3, r3, #4
 8016324:	6343      	str	r3, [r0, #52]	@ 0x34
 8016326:	4b7d      	ldr	r3, [pc, #500]	@ (801651c <fill_path_even_odd+0xc04>)
 8016328:	6147      	str	r7, [r0, #20]
 801632a:	6246      	str	r6, [r0, #36]	@ 0x24
 801632c:	62c5      	str	r5, [r0, #44]	@ 0x2c
 801632e:	f8c0 c010 	str.w	ip, [r0, #16]
 8016332:	6184      	str	r4, [r0, #24]
 8016334:	6201      	str	r1, [r0, #32]
 8016336:	6282      	str	r2, [r0, #40]	@ 0x28
 8016338:	6303      	str	r3, [r0, #48]	@ 0x30
 801633a:	e42c      	b.n	8015b96 <fill_path_even_odd+0x27e>
 801633c:	f8dd 8054 	ldr.w	r8, [sp, #84]	@ 0x54
 8016340:	9f16      	ldr	r7, [sp, #88]	@ 0x58
 8016342:	e4f3      	b.n	8015d2c <fill_path_even_odd+0x414>
 8016344:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8016348:	2d00      	cmp	r5, #0
 801634a:	bf18      	it	ne
 801634c:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 8016350:	4b71      	ldr	r3, [pc, #452]	@ (8016518 <fill_path_even_odd+0xc00>)
 8016352:	4015      	ands	r5, r2
 8016354:	781b      	ldrb	r3, [r3, #0]
 8016356:	2b01      	cmp	r3, #1
 8016358:	d104      	bne.n	8016364 <fill_path_even_odd+0xa4c>
 801635a:	4b6f      	ldr	r3, [pc, #444]	@ (8016518 <fill_path_even_odd+0xc00>)
 801635c:	685b      	ldr	r3, [r3, #4]
 801635e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8016362:	431d      	orrs	r5, r3
 8016364:	2005      	movs	r0, #5
 8016366:	f007 fcdd 	bl	801dd24 <nema_cl_get_space>
 801636a:	2800      	cmp	r0, #0
 801636c:	f43f aea4 	beq.w	80160b8 <fill_path_even_odd+0x7a0>
 8016370:	f44f 7648 	mov.w	r6, #800	@ 0x320
 8016374:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8016378:	f44f 724c 	mov.w	r2, #816	@ 0x330
 801637c:	f44f 734d 	mov.w	r3, #820	@ 0x334
 8016380:	f045 050a 	orr.w	r5, r5, #10
 8016384:	6245      	str	r5, [r0, #36]	@ 0x24
 8016386:	4d65      	ldr	r5, [pc, #404]	@ (801651c <fill_path_even_odd+0xc04>)
 8016388:	edc0 9a01 	vstr	s19, [r0, #4]
 801638c:	ed80 aa03 	vstr	s20, [r0, #12]
 8016390:	ed80 8a05 	vstr	s16, [r0, #20]
 8016394:	edc0 8a07 	vstr	s17, [r0, #28]
 8016398:	6205      	str	r5, [r0, #32]
 801639a:	6006      	str	r6, [r0, #0]
 801639c:	6081      	str	r1, [r0, #8]
 801639e:	6102      	str	r2, [r0, #16]
 80163a0:	6183      	str	r3, [r0, #24]
 80163a2:	e689      	b.n	80160b8 <fill_path_even_odd+0x7a0>
 80163a4:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 80163a8:	ee75 7a05 	vadd.f32	s15, s10, s10
 80163ac:	ee35 6aa5 	vadd.f32	s12, s11, s11
 80163b0:	eddd 6a14 	vldr	s13, [sp, #80]	@ 0x50
 80163b4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80163b8:	ee36 7a66 	vsub.f32	s14, s12, s13
 80163bc:	e5c7      	b.n	8015f4e <fill_path_even_odd+0x636>
 80163be:	2400      	movs	r4, #0
 80163c0:	4627      	mov	r7, r4
 80163c2:	e783      	b.n	80162cc <fill_path_even_odd+0x9b4>
 80163c4:	9007      	str	r0, [sp, #28]
 80163c6:	6822      	ldr	r2, [r4, #0]
 80163c8:	1c8b      	adds	r3, r1, #2
 80163ca:	9307      	str	r3, [sp, #28]
 80163cc:	920d      	str	r2, [sp, #52]	@ 0x34
 80163ce:	6863      	ldr	r3, [r4, #4]
 80163d0:	3103      	adds	r1, #3
 80163d2:	930e      	str	r3, [sp, #56]	@ 0x38
 80163d4:	9107      	str	r1, [sp, #28]
 80163d6:	4b52      	ldr	r3, [pc, #328]	@ (8016520 <fill_path_even_odd+0xc08>)
 80163d8:	68a2      	ldr	r2, [r4, #8]
 80163da:	edd3 0a00 	vldr	s1, [r3]
 80163de:	ed93 0a03 	vldr	s0, [r3, #12]
 80163e2:	920f      	str	r2, [sp, #60]	@ 0x3c
 80163e4:	f01a ff02 	bl	80311ec <atan2f>
 80163e8:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 80163ec:	ee77 7a80 	vadd.f32	s15, s15, s0
 80163f0:	9907      	ldr	r1, [sp, #28]
 80163f2:	f8da 300c 	ldr.w	r3, [sl, #12]
 80163f6:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 80163fa:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80163fc:	008a      	lsls	r2, r1, #2
 80163fe:	1c48      	adds	r0, r1, #1
 8016400:	9004      	str	r0, [sp, #16]
 8016402:	9203      	str	r2, [sp, #12]
 8016404:	f88d 501b 	strb.w	r5, [sp, #27]
 8016408:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 801640c:	eb03 0e02 	add.w	lr, r3, r2
 8016410:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
 8016414:	9414      	str	r4, [sp, #80]	@ 0x50
 8016416:	f7ff bb06 	b.w	8015a26 <fill_path_even_odd+0x10e>
 801641a:	4a42      	ldr	r2, [pc, #264]	@ (8016524 <fill_path_even_odd+0xc0c>)
 801641c:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 8016420:	6812      	ldr	r2, [r2, #0]
 8016422:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 8016426:	2a00      	cmp	r2, #0
 8016428:	f000 811b 	beq.w	8016662 <fill_path_even_odd+0xd4a>
 801642c:	eef0 1a68 	vmov.f32	s3, s17
 8016430:	eeb0 1a48 	vmov.f32	s2, s16
 8016434:	eef0 0a4a 	vmov.f32	s1, s20
 8016438:	eeb0 0a69 	vmov.f32	s0, s19
 801643c:	f7fc fa6c 	bl	8012918 <raster_stroked_line_>
 8016440:	e6ac      	b.n	801619c <fill_path_even_odd+0x884>
 8016442:	2e0b      	cmp	r6, #11
 8016444:	f47f ad31 	bne.w	8015eaa <fill_path_even_odd+0x592>
 8016448:	9007      	str	r0, [sp, #28]
 801644a:	edde 7a00 	vldr	s15, [lr]
 801644e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016452:	ee17 1a90 	vmov	r1, s15
 8016456:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801645a:	104c      	asrs	r4, r1, #1
 801645c:	2c00      	cmp	r4, #0
 801645e:	f340 80b0 	ble.w	80165c2 <fill_path_even_odd+0xcaa>
 8016462:	2100      	movs	r1, #0
 8016464:	9a04      	ldr	r2, [sp, #16]
 8016466:	9605      	str	r6, [sp, #20]
 8016468:	f8cd 9010 	str.w	r9, [sp, #16]
 801646c:	4656      	mov	r6, sl
 801646e:	46a9      	mov	r9, r5
 8016470:	46a2      	mov	sl, r4
 8016472:	460c      	mov	r4, r1
 8016474:	e035      	b.n	80164e2 <fill_path_even_odd+0xbca>
 8016476:	ed9d 1a11 	vldr	s2, [sp, #68]	@ 0x44
 801647a:	ee38 8a01 	vadd.f32	s16, s16, s2
 801647e:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 8016482:	9207      	str	r2, [sp, #28]
 8016484:	edd1 8a00 	vldr	s17, [r1]
 8016488:	eddd 1a12 	vldr	s3, [sp, #72]	@ 0x48
 801648c:	ee78 8aa1 	vadd.f32	s17, s17, s3
 8016490:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8016494:	ed8d 8a11 	vstr	s16, [sp, #68]	@ 0x44
 8016498:	edcd 8a12 	vstr	s17, [sp, #72]	@ 0x48
 801649c:	f8db 3000 	ldr.w	r3, [fp]
 80164a0:	f88d 905c 	strb.w	r9, [sp, #92]	@ 0x5c
 80164a4:	7f1a      	ldrb	r2, [r3, #28]
 80164a6:	2a00      	cmp	r2, #0
 80164a8:	d13e      	bne.n	8016528 <fill_path_even_odd+0xc10>
 80164aa:	4a1e      	ldr	r2, [pc, #120]	@ (8016524 <fill_path_even_odd+0xc0c>)
 80164ac:	eddd 9a09 	vldr	s19, [sp, #36]	@ 0x24
 80164b0:	6812      	ldr	r2, [r2, #0]
 80164b2:	ed9d aa0a 	vldr	s20, [sp, #40]	@ 0x28
 80164b6:	2a00      	cmp	r2, #0
 80164b8:	f000 80a2 	beq.w	8016600 <fill_path_even_odd+0xce8>
 80164bc:	eef0 1a68 	vmov.f32	s3, s17
 80164c0:	eeb0 1a48 	vmov.f32	s2, s16
 80164c4:	eef0 0a4a 	vmov.f32	s1, s20
 80164c8:	eeb0 0a69 	vmov.f32	s0, s19
 80164cc:	f7fc fa24 	bl	8012918 <raster_stroked_line_>
 80164d0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80164d4:	3401      	adds	r4, #1
 80164d6:	4554      	cmp	r4, sl
 80164d8:	e887 0003 	stmia.w	r7, {r0, r1}
 80164dc:	d06d      	beq.n	80165ba <fill_path_even_odd+0xca2>
 80164de:	68f3      	ldr	r3, [r6, #12]
 80164e0:	9a07      	ldr	r2, [sp, #28]
 80164e2:	0090      	lsls	r0, r2, #2
 80164e4:	1d01      	adds	r1, r0, #4
 80164e6:	4419      	add	r1, r3
 80164e8:	9d01      	ldr	r5, [sp, #4]
 80164ea:	4403      	add	r3, r0
 80164ec:	1c50      	adds	r0, r2, #1
 80164ee:	9007      	str	r0, [sp, #28]
 80164f0:	3202      	adds	r2, #2
 80164f2:	ed93 8a00 	vldr	s16, [r3]
 80164f6:	2d00      	cmp	r5, #0
 80164f8:	d1bd      	bne.n	8016476 <fill_path_even_odd+0xb5e>
 80164fa:	ed8d 8a0b 	vstr	s16, [sp, #44]	@ 0x2c
 80164fe:	9207      	str	r2, [sp, #28]
 8016500:	edd1 8a00 	vldr	s17, [r1]
 8016504:	edcd 8a0c 	vstr	s17, [sp, #48]	@ 0x30
 8016508:	e7c4      	b.n	8016494 <fill_path_even_odd+0xb7c>
 801650a:	bf00      	nop
 801650c:	20082fb8 	.word	0x20082fb8
 8016510:	20082fbc 	.word	0x20082fbc
 8016514:	20082fac 	.word	0x20082fac
 8016518:	20000064 	.word	0x20000064
 801651c:	ff000100 	.word	0xff000100
 8016520:	20083030 	.word	0x20083030
 8016524:	20082fb4 	.word	0x20082fb4
 8016528:	4b66      	ldr	r3, [pc, #408]	@ (80166c4 <fill_path_even_odd+0xdac>)
 801652a:	2007      	movs	r0, #7
 801652c:	681b      	ldr	r3, [r3, #0]
 801652e:	9303      	str	r3, [sp, #12]
 8016530:	4b65      	ldr	r3, [pc, #404]	@ (80166c8 <fill_path_even_odd+0xdb0>)
 8016532:	681d      	ldr	r5, [r3, #0]
 8016534:	f007 fbf6 	bl	801dd24 <nema_cl_get_space>
 8016538:	2800      	cmp	r0, #0
 801653a:	d0c9      	beq.n	80164d0 <fill_path_even_odd+0xbb8>
 801653c:	4a63      	ldr	r2, [pc, #396]	@ (80166cc <fill_path_even_odd+0xdb4>)
 801653e:	f8db 3000 	ldr.w	r3, [fp]
 8016542:	7812      	ldrb	r2, [r2, #0]
 8016544:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016546:	2a01      	cmp	r2, #1
 8016548:	f003 63f0 	and.w	r3, r3, #125829120	@ 0x7800000
 801654c:	d104      	bne.n	8016558 <fill_path_even_odd+0xc40>
 801654e:	4a5f      	ldr	r2, [pc, #380]	@ (80166cc <fill_path_even_odd+0xdb4>)
 8016550:	6852      	ldr	r2, [r2, #4]
 8016552:	f002 4240 	and.w	r2, r2, #3221225472	@ 0xc0000000
 8016556:	4313      	orrs	r3, r2
 8016558:	f44f 7248 	mov.w	r2, #800	@ 0x320
 801655c:	6002      	str	r2, [r0, #0]
 801655e:	eddd 7a09 	vldr	s15, [sp, #36]	@ 0x24
 8016562:	f44f 7249 	mov.w	r2, #804	@ 0x324
 8016566:	f44f 7e4d 	mov.w	lr, #820	@ 0x334
 801656a:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 801656e:	6082      	str	r2, [r0, #8]
 8016570:	edc0 7a01 	vstr	s15, [r0, #4]
 8016574:	f8c0 e018 	str.w	lr, [r0, #24]
 8016578:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
 801657c:	f8c0 c010 	str.w	ip, [r0, #16]
 8016580:	f8c0 e00c 	str.w	lr, [r0, #12]
 8016584:	f8dd c02c 	ldr.w	ip, [sp, #44]	@ 0x2c
 8016588:	f043 0304 	orr.w	r3, r3, #4
 801658c:	6343      	str	r3, [r0, #52]	@ 0x34
 801658e:	9b03      	ldr	r3, [sp, #12]
 8016590:	f8c0 c014 	str.w	ip, [r0, #20]
 8016594:	6243      	str	r3, [r0, #36]	@ 0x24
 8016596:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016598:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 801659c:	61c3      	str	r3, [r0, #28]
 801659e:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 80165a2:	4a4b      	ldr	r2, [pc, #300]	@ (80166d0 <fill_path_even_odd+0xdb8>)
 80165a4:	3401      	adds	r4, #1
 80165a6:	4554      	cmp	r4, sl
 80165a8:	62c5      	str	r5, [r0, #44]	@ 0x2c
 80165aa:	6302      	str	r2, [r0, #48]	@ 0x30
 80165ac:	6201      	str	r1, [r0, #32]
 80165ae:	6283      	str	r3, [r0, #40]	@ 0x28
 80165b0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80165b4:	e887 0003 	stmia.w	r7, {r0, r1}
 80165b8:	d191      	bne.n	80164de <fill_path_even_odd+0xbc6>
 80165ba:	46b2      	mov	sl, r6
 80165bc:	f8dd 9010 	ldr.w	r9, [sp, #16]
 80165c0:	9e05      	ldr	r6, [sp, #20]
 80165c2:	f8db 3000 	ldr.w	r3, [fp]
 80165c6:	7f1b      	ldrb	r3, [r3, #28]
 80165c8:	b1b3      	cbz	r3, 80165f8 <fill_path_even_odd+0xce0>
 80165ca:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 80165ce:	eddd 7a15 	vldr	s15, [sp, #84]	@ 0x54
 80165d2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80165d6:	eef5 7a40 	vcmp.f32	s15, #0.0
 80165da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80165de:	d10b      	bne.n	80165f8 <fill_path_even_odd+0xce0>
 80165e0:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 80165e4:	eddd 7a16 	vldr	s15, [sp, #88]	@ 0x58
 80165e8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80165ec:	eef5 7a40 	vcmp.f32	s15, #0.0
 80165f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80165f4:	f43f add2 	beq.w	801619c <fill_path_even_odd+0x884>
 80165f8:	2301      	movs	r3, #1
 80165fa:	f88d 3019 	strb.w	r3, [sp, #25]
 80165fe:	e5d0      	b.n	80161a2 <fill_path_even_odd+0x88a>
 8016600:	e9d3 520a 	ldrd	r5, r2, [r3, #40]	@ 0x28
 8016604:	2d00      	cmp	r5, #0
 8016606:	bf18      	it	ne
 8016608:	f04f 65f0 	movne.w	r5, #125829120	@ 0x7800000
 801660c:	4b2f      	ldr	r3, [pc, #188]	@ (80166cc <fill_path_even_odd+0xdb4>)
 801660e:	4015      	ands	r5, r2
 8016610:	781b      	ldrb	r3, [r3, #0]
 8016612:	2b01      	cmp	r3, #1
 8016614:	d104      	bne.n	8016620 <fill_path_even_odd+0xd08>
 8016616:	4b2d      	ldr	r3, [pc, #180]	@ (80166cc <fill_path_even_odd+0xdb4>)
 8016618:	685b      	ldr	r3, [r3, #4]
 801661a:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 801661e:	431d      	orrs	r5, r3
 8016620:	2005      	movs	r0, #5
 8016622:	f007 fb7f 	bl	801dd24 <nema_cl_get_space>
 8016626:	2800      	cmp	r0, #0
 8016628:	f43f af52 	beq.w	80164d0 <fill_path_even_odd+0xbb8>
 801662c:	f44f 7c48 	mov.w	ip, #800	@ 0x320
 8016630:	f44f 7149 	mov.w	r1, #804	@ 0x324
 8016634:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8016638:	f44f 734d 	mov.w	r3, #820	@ 0x334
 801663c:	f045 050a 	orr.w	r5, r5, #10
 8016640:	6245      	str	r5, [r0, #36]	@ 0x24
 8016642:	4d23      	ldr	r5, [pc, #140]	@ (80166d0 <fill_path_even_odd+0xdb8>)
 8016644:	edc0 9a01 	vstr	s19, [r0, #4]
 8016648:	ed80 aa03 	vstr	s20, [r0, #12]
 801664c:	ed80 8a05 	vstr	s16, [r0, #20]
 8016650:	edc0 8a07 	vstr	s17, [r0, #28]
 8016654:	6205      	str	r5, [r0, #32]
 8016656:	f8c0 c000 	str.w	ip, [r0]
 801665a:	6081      	str	r1, [r0, #8]
 801665c:	6102      	str	r2, [r0, #16]
 801665e:	6183      	str	r3, [r0, #24]
 8016660:	e736      	b.n	80164d0 <fill_path_even_odd+0xbb8>
 8016662:	e9d3 240a 	ldrd	r2, r4, [r3, #40]	@ 0x28
 8016666:	2a00      	cmp	r2, #0
 8016668:	bf18      	it	ne
 801666a:	f04f 62f0 	movne.w	r2, #125829120	@ 0x7800000
 801666e:	4b17      	ldr	r3, [pc, #92]	@ (80166cc <fill_path_even_odd+0xdb4>)
 8016670:	4014      	ands	r4, r2
 8016672:	781b      	ldrb	r3, [r3, #0]
 8016674:	2b01      	cmp	r3, #1
 8016676:	d01f      	beq.n	80166b8 <fill_path_even_odd+0xda0>
 8016678:	2005      	movs	r0, #5
 801667a:	f007 fb53 	bl	801dd24 <nema_cl_get_space>
 801667e:	2800      	cmp	r0, #0
 8016680:	f43f ad8c 	beq.w	801619c <fill_path_even_odd+0x884>
 8016684:	f44f 7748 	mov.w	r7, #800	@ 0x320
 8016688:	f44f 7549 	mov.w	r5, #804	@ 0x324
 801668c:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8016690:	f44f 724d 	mov.w	r2, #820	@ 0x334
 8016694:	4b0e      	ldr	r3, [pc, #56]	@ (80166d0 <fill_path_even_odd+0xdb8>)
 8016696:	f044 040a 	orr.w	r4, r4, #10
 801669a:	6244      	str	r4, [r0, #36]	@ 0x24
 801669c:	edc0 9a01 	vstr	s19, [r0, #4]
 80166a0:	ed80 aa03 	vstr	s20, [r0, #12]
 80166a4:	ed80 8a05 	vstr	s16, [r0, #20]
 80166a8:	edc0 8a07 	vstr	s17, [r0, #28]
 80166ac:	6007      	str	r7, [r0, #0]
 80166ae:	6085      	str	r5, [r0, #8]
 80166b0:	6101      	str	r1, [r0, #16]
 80166b2:	6182      	str	r2, [r0, #24]
 80166b4:	6203      	str	r3, [r0, #32]
 80166b6:	e571      	b.n	801619c <fill_path_even_odd+0x884>
 80166b8:	4b04      	ldr	r3, [pc, #16]	@ (80166cc <fill_path_even_odd+0xdb4>)
 80166ba:	685b      	ldr	r3, [r3, #4]
 80166bc:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 80166c0:	431c      	orrs	r4, r3
 80166c2:	e7d9      	b.n	8016678 <fill_path_even_odd+0xd60>
 80166c4:	20082fb8 	.word	0x20082fb8
 80166c8:	20082fbc 	.word	0x20082fbc
 80166cc:	20000064 	.word	0x20000064
 80166d0:	ff000100 	.word	0xff000100

080166d4 <draw_with_stencil>:
 80166d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166d8:	ed2d 8b10 	vpush	{d8-d15}
 80166dc:	f8df 9380 	ldr.w	r9, [pc, #896]	@ 8016a60 <draw_with_stencil+0x38c>
 80166e0:	4604      	mov	r4, r0
 80166e2:	f8d9 0000 	ldr.w	r0, [r9]
 80166e6:	b0ad      	sub	sp, #180	@ 0xb4
 80166e8:	6883      	ldr	r3, [r0, #8]
 80166ea:	9104      	str	r1, [sp, #16]
 80166ec:	2b00      	cmp	r3, #0
 80166ee:	f000 87cf 	beq.w	8017690 <draw_with_stencil+0xfbc>
 80166f2:	e9d0 2304 	ldrd	r2, r3, [r0, #16]
 80166f6:	f04f 0800 	mov.w	r8, #0
 80166fa:	2508      	movs	r5, #8
 80166fc:	4fd6      	ldr	r7, [pc, #856]	@ (8016a58 <draw_with_stencil+0x384>)
 80166fe:	68c1      	ldr	r1, [r0, #12]
 8016700:	e9cd 2801 	strd	r2, r8, [sp, #4]
 8016704:	2003      	movs	r0, #3
 8016706:	9500      	str	r5, [sp, #0]
 8016708:	f7fa fa2c 	bl	8010b64 <nema_bind_tex>
 801670c:	683a      	ldr	r2, [r7, #0]
 801670e:	f8d9 3000 	ldr.w	r3, [r9]
 8016712:	7f12      	ldrb	r2, [r2, #28]
 8016714:	4628      	mov	r0, r5
 8016716:	4542      	cmp	r2, r8
 8016718:	691a      	ldr	r2, [r3, #16]
 801671a:	695e      	ldr	r6, [r3, #20]
 801671c:	bf0c      	ite	eq
 801671e:	46c2      	moveq	sl, r8
 8016720:	f04f 3a80 	movne.w	sl, #2155905152	@ 0x80808080
 8016724:	9205      	str	r2, [sp, #20]
 8016726:	f007 fafd 	bl	801dd24 <nema_cl_get_space>
 801672a:	4603      	mov	r3, r0
 801672c:	2800      	cmp	r0, #0
 801672e:	f000 85ba 	beq.w	80172a6 <draw_with_stencil+0xbd2>
 8016732:	9a05      	ldr	r2, [sp, #20]
 8016734:	0436      	lsls	r6, r6, #16
 8016736:	3203      	adds	r2, #3
 8016738:	0892      	lsrs	r2, r2, #2
 801673a:	f8c0 a024 	str.w	sl, [r0, #36]	@ 0x24
 801673e:	f8c0 802c 	str.w	r8, [r0, #44]	@ 0x2c
 8016742:	ea4f 0a82 	mov.w	sl, r2, lsl #2
 8016746:	4640      	mov	r0, r8
 8016748:	fa1f f882 	uxth.w	r8, r2
 801674c:	4332      	orrs	r2, r6
 801674e:	60da      	str	r2, [r3, #12]
 8016750:	2501      	movs	r5, #1
 8016752:	f44f 72e8 	mov.w	r2, #464	@ 0x1d0
 8016756:	e9c3 2504 	strd	r2, r5, [r3, #16]
 801675a:	f44f 728e 	mov.w	r2, #284	@ 0x11c
 801675e:	619a      	str	r2, [r3, #24]
 8016760:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8016764:	621a      	str	r2, [r3, #32]
 8016766:	f44f 7288 	mov.w	r2, #272	@ 0x110
 801676a:	629a      	str	r2, [r3, #40]	@ 0x28
 801676c:	f44f 728a 	mov.w	r2, #276	@ 0x114
 8016770:	f04f 0e34 	mov.w	lr, #52	@ 0x34
 8016774:	f04f 0c38 	mov.w	ip, #56	@ 0x38
 8016778:	f04f 4110 	mov.w	r1, #2415919104	@ 0x90000000
 801677c:	f44f 7b8c 	mov.w	fp, #280	@ 0x118
 8016780:	631a      	str	r2, [r3, #48]	@ 0x30
 8016782:	fa1f fa8a 	uxth.w	sl, sl
 8016786:	4ab5      	ldr	r2, [pc, #724]	@ (8016a5c <draw_with_stencil+0x388>)
 8016788:	ea48 0806 	orr.w	r8, r8, r6
 801678c:	f04a 7a80 	orr.w	sl, sl, #16777216	@ 0x1000000
 8016790:	f8c3 8034 	str.w	r8, [r3, #52]	@ 0x34
 8016794:	f8c3 a004 	str.w	sl, [r3, #4]
 8016798:	f8c3 e000 	str.w	lr, [r3]
 801679c:	f8c3 c008 	str.w	ip, [r3, #8]
 80167a0:	f8c3 b038 	str.w	fp, [r3, #56]	@ 0x38
 80167a4:	63d9      	str	r1, [r3, #60]	@ 0x3c
 80167a6:	61da      	str	r2, [r3, #28]
 80167a8:	f7fb fc6a 	bl	8012080 <nema_enable_aa_flags>
 80167ac:	f8d9 3000 	ldr.w	r3, [r9]
 80167b0:	4680      	mov	r8, r0
 80167b2:	edd3 7a06 	vldr	s15, [r3, #24]
 80167b6:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 80167ba:	edd3 6a07 	vldr	s13, [r3, #28]
 80167be:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 80167c2:	ed93 6a08 	vldr	s12, [r3, #32]
 80167c6:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
 80167ca:	ed93 7a09 	vldr	s14, [r3, #36]	@ 0x24
 80167ce:	ed8d 7a1f 	vstr	s14, [sp, #124]	@ 0x7c
 80167d2:	ed93 5a0a 	vldr	s10, [r3, #40]	@ 0x28
 80167d6:	ed8d 5a20 	vstr	s10, [sp, #128]	@ 0x80
 80167da:	ed93 4a0b 	vldr	s8, [r3, #44]	@ 0x2c
 80167de:	ed8d 4a21 	vstr	s8, [sp, #132]	@ 0x84
 80167e2:	edd3 5a0c 	vldr	s11, [r3, #48]	@ 0x30
 80167e6:	eef4 7ac6 	vcmpe.f32	s15, s12
 80167ea:	edcd 5a22 	vstr	s11, [sp, #136]	@ 0x88
 80167ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167f2:	edd3 4a0d 	vldr	s9, [r3, #52]	@ 0x34
 80167f6:	edcd 4a23 	vstr	s9, [sp, #140]	@ 0x8c
 80167fa:	dd7a      	ble.n	80168f2 <draw_with_stencil+0x21e>
 80167fc:	aa1e      	add	r2, sp, #120	@ 0x78
 80167fe:	ed92 7a00 	vldr	s14, [r2]
 8016802:	eeb4 5ac7 	vcmpe.f32	s10, s14
 8016806:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801680a:	d432      	bmi.n	8016872 <draw_with_stencil+0x19e>
 801680c:	ee77 7a45 	vsub.f32	s15, s14, s10
 8016810:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016814:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016818:	f100 85f9 	bmi.w	801740e <draw_with_stencil+0xd3a>
 801681c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016820:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016824:	f100 85d4 	bmi.w	80173d0 <draw_with_stencil+0xcfc>
 8016828:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801682c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016830:	eeb0 6a47 	vmov.f32	s12, s14
 8016834:	f100 85d4 	bmi.w	80173e0 <draw_with_stencil+0xd0c>
 8016838:	eeb4 5ac6 	vcmpe.f32	s10, s12
 801683c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016840:	f340 85d6 	ble.w	80173f0 <draw_with_stencil+0xd1c>
 8016844:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016848:	ed9f 6a86 	vldr	s12, [pc, #536]	@ 8016a64 <draw_with_stencil+0x390>
 801684c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016850:	bf54      	ite	pl
 8016852:	ee27 7a06 	vmulpl.f32	s14, s14, s12
 8016856:	ee27 7a46 	vnmulmi.f32	s14, s14, s12
 801685a:	eef4 7ac7 	vcmpe.f32	s15, s14
 801685e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016862:	d808      	bhi.n	8016876 <draw_with_stencil+0x1a2>
 8016864:	edd2 7a01 	vldr	s15, [r2, #4]
 8016868:	eeb4 4ae7 	vcmpe.f32	s8, s15
 801686c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016870:	d501      	bpl.n	8016876 <draw_with_stencil+0x1a2>
 8016872:	2502      	movs	r5, #2
 8016874:	aa20      	add	r2, sp, #128	@ 0x80
 8016876:	edd2 7a00 	vldr	s15, [r2]
 801687a:	eef4 5ae7 	vcmpe.f32	s11, s15
 801687e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016882:	d46a      	bmi.n	801695a <draw_with_stencil+0x286>
 8016884:	ee37 7ae5 	vsub.f32	s14, s15, s11
 8016888:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801688c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016890:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016894:	bf48      	it	mi
 8016896:	eeb1 7a47 	vnegmi.f32	s14, s14
 801689a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801689e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80168a2:	bf4c      	ite	mi
 80168a4:	eeb1 6a67 	vnegmi.f32	s12, s15
 80168a8:	eeb0 6a67 	vmovpl.f32	s12, s15
 80168ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168b0:	f100 8553 	bmi.w	801735a <draw_with_stencil+0xc86>
 80168b4:	eef4 5ac6 	vcmpe.f32	s11, s12
 80168b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168bc:	f340 8555 	ble.w	801736a <draw_with_stencil+0xc96>
 80168c0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80168c4:	ed9f 6a67 	vldr	s12, [pc, #412]	@ 8016a64 <draw_with_stencil+0x390>
 80168c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168cc:	bf4c      	ite	mi
 80168ce:	ee67 7ac6 	vnmulmi.f32	s15, s15, s12
 80168d2:	ee67 7a86 	vmulpl.f32	s15, s15, s12
 80168d6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80168da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168de:	d83d      	bhi.n	801695c <draw_with_stencil+0x288>
 80168e0:	edd2 7a01 	vldr	s15, [r2, #4]
 80168e4:	eef4 4a67 	vcmp.f32	s9, s15
 80168e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168ec:	bf48      	it	mi
 80168ee:	2503      	movmi	r5, #3
 80168f0:	e034      	b.n	801695c <draw_with_stencil+0x288>
 80168f2:	ee77 3ac6 	vsub.f32	s7, s15, s12
 80168f6:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 80168fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168fe:	f100 857d 	bmi.w	80173fc <draw_with_stencil+0xd28>
 8016902:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016906:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801690a:	f100 8589 	bmi.w	8017420 <draw_with_stencil+0xd4c>
 801690e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016912:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016916:	eeb0 3a67 	vmov.f32	s6, s15
 801691a:	f100 8589 	bmi.w	8017430 <draw_with_stencil+0xd5c>
 801691e:	eeb4 6ac3 	vcmpe.f32	s12, s6
 8016922:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016926:	f340 858b 	ble.w	8017440 <draw_with_stencil+0xd6c>
 801692a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801692e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016932:	ed9f 6a4c 	vldr	s12, [pc, #304]	@ 8016a64 <draw_with_stencil+0x390>
 8016936:	f101 8089 	bmi.w	8017a4c <draw_with_stencil+0x1378>
 801693a:	ee66 7a27 	vmul.f32	s15, s12, s15
 801693e:	eef4 3ae7 	vcmpe.f32	s7, s15
 8016942:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016946:	f200 865b 	bhi.w	8017600 <draw_with_stencil+0xf2c>
 801694a:	eef4 6ac7 	vcmpe.f32	s13, s14
 801694e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016952:	f340 8655 	ble.w	8017600 <draw_with_stencil+0xf2c>
 8016956:	2501      	movs	r5, #1
 8016958:	e750      	b.n	80167fc <draw_with_stencil+0x128>
 801695a:	2503      	movs	r5, #3
 801695c:	1cea      	adds	r2, r5, #3
 801695e:	1c69      	adds	r1, r5, #1
 8016960:	a82c      	add	r0, sp, #176	@ 0xb0
 8016962:	f002 0203 	and.w	r2, r2, #3
 8016966:	f001 0103 	and.w	r1, r1, #3
 801696a:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 801696e:	eb00 05c5 	add.w	r5, r0, r5, lsl #3
 8016972:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8016976:	ed55 4a10 	vldr	s9, [r5, #-64]	@ 0xffffffc0
 801697a:	ed15 5a0f 	vldr	s10, [r5, #-60]	@ 0xffffffc4
 801697e:	ed52 7a10 	vldr	s15, [r2, #-64]	@ 0xffffffc0
 8016982:	ed51 5a0f 	vldr	s11, [r1, #-60]	@ 0xffffffc4
 8016986:	ed11 7a10 	vldr	s14, [r1, #-64]	@ 0xffffffc0
 801698a:	ed12 6a0f 	vldr	s12, [r2, #-60]	@ 0xffffffc4
 801698e:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8016992:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8016996:	ee37 7a64 	vsub.f32	s14, s14, s9
 801699a:	ee36 6a45 	vsub.f32	s12, s12, s10
 801699e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80169a2:	ee27 7a06 	vmul.f32	s14, s14, s12
 80169a6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80169aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80169ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169b2:	dd19      	ble.n	80169e8 <draw_with_stencil+0x314>
 80169b4:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 80169b8:	aa1c      	add	r2, sp, #112	@ 0x70
 80169ba:	c903      	ldmia	r1, {r0, r1}
 80169bc:	e882 0003 	stmia.w	r2, {r0, r1}
 80169c0:	f103 0128 	add.w	r1, r3, #40	@ 0x28
 80169c4:	aa1e      	add	r2, sp, #120	@ 0x78
 80169c6:	c903      	ldmia	r1, {r0, r1}
 80169c8:	e882 0003 	stmia.w	r2, {r0, r1}
 80169cc:	f103 0120 	add.w	r1, r3, #32
 80169d0:	aa20      	add	r2, sp, #128	@ 0x80
 80169d2:	c903      	ldmia	r1, {r0, r1}
 80169d4:	e882 0003 	stmia.w	r2, {r0, r1}
 80169d8:	3318      	adds	r3, #24
 80169da:	aa22      	add	r2, sp, #136	@ 0x88
 80169dc:	e893 0003 	ldmia.w	r3, {r0, r1}
 80169e0:	e882 0003 	stmia.w	r2, {r0, r1}
 80169e4:	eddd 6a1d 	vldr	s13, [sp, #116]	@ 0x74
 80169e8:	eddd 7a1f 	vldr	s15, [sp, #124]	@ 0x7c
 80169ec:	eef4 7ae6 	vcmpe.f32	s15, s13
 80169f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169f4:	d438      	bmi.n	8016a68 <draw_with_stencil+0x394>
 80169f6:	ee36 6ae7 	vsub.f32	s12, s13, s15
 80169fa:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80169fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a02:	f100 84dc 	bmi.w	80173be <draw_with_stencil+0xcea>
 8016a06:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016a0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a0e:	f100 84c0 	bmi.w	8017392 <draw_with_stencil+0xcbe>
 8016a12:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016a16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a1a:	eef0 5a66 	vmov.f32	s11, s13
 8016a1e:	f100 84c0 	bmi.w	80173a2 <draw_with_stencil+0xcce>
 8016a22:	eef4 7ae5 	vcmpe.f32	s15, s11
 8016a26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a2a:	f300 86ae 	bgt.w	801778a <draw_with_stencil+0x10b6>
 8016a2e:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8016a64 <draw_with_stencil+0x390>
 8016a32:	ee27 7a87 	vmul.f32	s14, s15, s14
 8016a36:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8016a3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a3e:	db08      	blt.n	8016a52 <draw_with_stencil+0x37e>
 8016a40:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016a44:	ed9d 7a1e 	vldr	s14, [sp, #120]	@ 0x78
 8016a48:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8016a4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a50:	d40a      	bmi.n	8016a68 <draw_with_stencil+0x394>
 8016a52:	2300      	movs	r3, #0
 8016a54:	ad1c      	add	r5, sp, #112	@ 0x70
 8016a56:	e009      	b.n	8016a6c <draw_with_stencil+0x398>
 8016a58:	20082fac 	.word	0x20082fac
 8016a5c:	1c1f0015 	.word	0x1c1f0015
 8016a60:	20083054 	.word	0x20083054
 8016a64:	3727c5ac 	.word	0x3727c5ac
 8016a68:	2301      	movs	r3, #1
 8016a6a:	ad1e      	add	r5, sp, #120	@ 0x78
 8016a6c:	ed95 6a01 	vldr	s12, [r5, #4]
 8016a70:	ed9d 7a21 	vldr	s14, [sp, #132]	@ 0x84
 8016a74:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8016a78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a7c:	dc2d      	bgt.n	8016ada <draw_with_stencil+0x406>
 8016a7e:	ee76 5a47 	vsub.f32	s11, s12, s14
 8016a82:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016a86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a8a:	f100 8432 	bmi.w	80172f2 <draw_with_stencil+0xc1e>
 8016a8e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016a92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a96:	f100 8567 	bmi.w	8017568 <draw_with_stencil+0xe94>
 8016a9a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016a9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016aa2:	eeb0 5a46 	vmov.f32	s10, s12
 8016aa6:	f100 8567 	bmi.w	8017578 <draw_with_stencil+0xea4>
 8016aaa:	eeb4 7ac5 	vcmpe.f32	s14, s10
 8016aae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ab2:	f300 8650 	bgt.w	8017756 <draw_with_stencil+0x1082>
 8016ab6:	ed1f 6a15 	vldr	s12, [pc, #-84]	@ 8016a64 <draw_with_stencil+0x390>
 8016aba:	ee27 6a06 	vmul.f32	s12, s14, s12
 8016abe:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016ac2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ac6:	db0a      	blt.n	8016ade <draw_with_stencil+0x40a>
 8016ac8:	edd5 5a00 	vldr	s11, [r5]
 8016acc:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8016ad0:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016ad4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ad8:	d501      	bpl.n	8016ade <draw_with_stencil+0x40a>
 8016ada:	2302      	movs	r3, #2
 8016adc:	ad20      	add	r5, sp, #128	@ 0x80
 8016ade:	ed95 6a01 	vldr	s12, [r5, #4]
 8016ae2:	ed9d 8a23 	vldr	s16, [sp, #140]	@ 0x8c
 8016ae6:	eeb4 8ac6 	vcmpe.f32	s16, s12
 8016aea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016aee:	d42f      	bmi.n	8016b50 <draw_with_stencil+0x47c>
 8016af0:	ee76 5a48 	vsub.f32	s11, s12, s16
 8016af4:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016af8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016afc:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016b00:	bf48      	it	mi
 8016b02:	eef1 5a65 	vnegmi.f32	s11, s11
 8016b06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b0a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016b0e:	bf4c      	ite	mi
 8016b10:	eeb1 5a46 	vnegmi.f32	s10, s12
 8016b14:	eeb0 5a46 	vmovpl.f32	s10, s12
 8016b18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b1c:	f100 842b 	bmi.w	8017376 <draw_with_stencil+0xca2>
 8016b20:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016b24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b28:	f300 8656 	bgt.w	80177d8 <draw_with_stencil+0x1104>
 8016b2c:	ed1f 6a33 	vldr	s12, [pc, #-204]	@ 8016a64 <draw_with_stencil+0x390>
 8016b30:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016b34:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016b38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b3c:	d80a      	bhi.n	8016b54 <draw_with_stencil+0x480>
 8016b3e:	edd5 5a00 	vldr	s11, [r5]
 8016b42:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016b46:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016b4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b4e:	d501      	bpl.n	8016b54 <draw_with_stencil+0x480>
 8016b50:	2303      	movs	r3, #3
 8016b52:	ad22      	add	r5, sp, #136	@ 0x88
 8016b54:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016b58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b5c:	f100 816c 	bmi.w	8016e38 <draw_with_stencil+0x764>
 8016b60:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016b64:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016b68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b6c:	f100 853f 	bmi.w	80175ee <draw_with_stencil+0xf1a>
 8016b70:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016b74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b78:	f100 8523 	bmi.w	80175c2 <draw_with_stencil+0xeee>
 8016b7c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016b80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b84:	eeb0 5a66 	vmov.f32	s10, s13
 8016b88:	f100 8523 	bmi.w	80175d2 <draw_with_stencil+0xefe>
 8016b8c:	eeb4 5ae7 	vcmpe.f32	s10, s15
 8016b90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b94:	f100 8606 	bmi.w	80177a4 <draw_with_stencil+0x10d0>
 8016b98:	ed1f 6a4e 	vldr	s12, [pc, #-312]	@ 8016a64 <draw_with_stencil+0x390>
 8016b9c:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016ba0:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016ba4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ba8:	d809      	bhi.n	8016bbe <draw_with_stencil+0x4ea>
 8016baa:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016bae:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016bb2:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016bb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bba:	f100 813d 	bmi.w	8016e38 <draw_with_stencil+0x764>
 8016bbe:	eef0 8a66 	vmov.f32	s17, s13
 8016bc2:	eef4 8ac7 	vcmpe.f32	s17, s14
 8016bc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bca:	f10d 0e70 	add.w	lr, sp, #112	@ 0x70
 8016bce:	f340 813d 	ble.w	8016e4c <draw_with_stencil+0x778>
 8016bd2:	eef0 8a47 	vmov.f32	s17, s14
 8016bd6:	f10d 0e80 	add.w	lr, sp, #128	@ 0x80
 8016bda:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8016bde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016be2:	d42f      	bmi.n	8016c44 <draw_with_stencil+0x570>
 8016be4:	ee78 5ac8 	vsub.f32	s11, s17, s16
 8016be8:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016bec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bf0:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8016bf4:	bf48      	it	mi
 8016bf6:	eef1 5a65 	vnegmi.f32	s11, s11
 8016bfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bfe:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016c02:	bf4c      	ite	mi
 8016c04:	eeb1 5a68 	vnegmi.f32	s10, s17
 8016c08:	eeb0 5a68 	vmovpl.f32	s10, s17
 8016c0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c10:	f100 838d 	bmi.w	801732e <draw_with_stencil+0xc5a>
 8016c14:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016c18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c1c:	f300 85cf 	bgt.w	80177be <draw_with_stencil+0x10ea>
 8016c20:	ed1f 6a70 	vldr	s12, [pc, #-448]	@ 8016a64 <draw_with_stencil+0x390>
 8016c24:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016c28:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016c2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c30:	d80c      	bhi.n	8016c4c <draw_with_stencil+0x578>
 8016c32:	edde 5a00 	vldr	s11, [lr]
 8016c36:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016c3a:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016c3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c42:	dd03      	ble.n	8016c4c <draw_with_stencil+0x578>
 8016c44:	eef0 8a48 	vmov.f32	s17, s16
 8016c48:	f10d 0e88 	add.w	lr, sp, #136	@ 0x88
 8016c4c:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016c50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c54:	f300 812b 	bgt.w	8016eae <draw_with_stencil+0x7da>
 8016c58:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016c5c:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016c60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c64:	f100 8477 	bmi.w	8017556 <draw_with_stencil+0xe82>
 8016c68:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016c6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c70:	f100 845b 	bmi.w	801752a <draw_with_stencil+0xe56>
 8016c74:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016c78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c7c:	eeb0 5a66 	vmov.f32	s10, s13
 8016c80:	f100 845b 	bmi.w	801753a <draw_with_stencil+0xe66>
 8016c84:	eef4 7ac5 	vcmpe.f32	s15, s10
 8016c88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c8c:	f300 8522 	bgt.w	80176d4 <draw_with_stencil+0x1000>
 8016c90:	ed1f 6a8c 	vldr	s12, [pc, #-560]	@ 8016a64 <draw_with_stencil+0x390>
 8016c94:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016c98:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016c9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ca0:	db09      	blt.n	8016cb6 <draw_with_stencil+0x5e2>
 8016ca2:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016ca6:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016caa:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016cae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cb2:	f300 80fc 	bgt.w	8016eae <draw_with_stencil+0x7da>
 8016cb6:	a91c      	add	r1, sp, #112	@ 0x70
 8016cb8:	ed91 6a01 	vldr	s12, [r1, #4]
 8016cbc:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8016cc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cc4:	f04f 0000 	mov.w	r0, #0
 8016cc8:	f340 80fc 	ble.w	8016ec4 <draw_with_stencil+0x7f0>
 8016ccc:	2002      	movs	r0, #2
 8016cce:	a920      	add	r1, sp, #128	@ 0x80
 8016cd0:	ed91 6a01 	vldr	s12, [r1, #4]
 8016cd4:	eeb4 6ac8 	vcmpe.f32	s12, s16
 8016cd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cdc:	d42f      	bmi.n	8016d3e <draw_with_stencil+0x66a>
 8016cde:	ee76 5a48 	vsub.f32	s11, s12, s16
 8016ce2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016ce6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cea:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016cee:	bf48      	it	mi
 8016cf0:	eef1 5a65 	vnegmi.f32	s11, s11
 8016cf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cf8:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016cfc:	bf4c      	ite	mi
 8016cfe:	eeb1 5a46 	vnegmi.f32	s10, s12
 8016d02:	eeb0 5a46 	vmovpl.f32	s10, s12
 8016d06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d0a:	f100 8443 	bmi.w	8017594 <draw_with_stencil+0xec0>
 8016d0e:	eeb4 8ac5 	vcmpe.f32	s16, s10
 8016d12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d16:	f300 8504 	bgt.w	8017722 <draw_with_stencil+0x104e>
 8016d1a:	ed1f 6aae 	vldr	s12, [pc, #-696]	@ 8016a64 <draw_with_stencil+0x390>
 8016d1e:	ee28 6a06 	vmul.f32	s12, s16, s12
 8016d22:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016d26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d2a:	d80a      	bhi.n	8016d42 <draw_with_stencil+0x66e>
 8016d2c:	edd1 5a00 	vldr	s11, [r1]
 8016d30:	ed9d 6a22 	vldr	s12, [sp, #136]	@ 0x88
 8016d34:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016d38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d3c:	d501      	bpl.n	8016d42 <draw_with_stencil+0x66e>
 8016d3e:	2003      	movs	r0, #3
 8016d40:	a922      	add	r1, sp, #136	@ 0x88
 8016d42:	eef4 7ae6 	vcmpe.f32	s15, s13
 8016d46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d4a:	f300 80ef 	bgt.w	8016f2c <draw_with_stencil+0x858>
 8016d4e:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8016d52:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016d56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d5a:	f100 83a6 	bmi.w	80174aa <draw_with_stencil+0xdd6>
 8016d5e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016d62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d66:	f100 838b 	bmi.w	8017480 <draw_with_stencil+0xdac>
 8016d6a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016d6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d72:	eeb0 5a66 	vmov.f32	s10, s13
 8016d76:	f100 838b 	bmi.w	8017490 <draw_with_stencil+0xdbc>
 8016d7a:	eef4 7ac5 	vcmpe.f32	s15, s10
 8016d7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d82:	f300 84db 	bgt.w	801773c <draw_with_stencil+0x1068>
 8016d86:	ed1f 6ac9 	vldr	s12, [pc, #-804]	@ 8016a64 <draw_with_stencil+0x390>
 8016d8a:	ee27 6a86 	vmul.f32	s12, s15, s12
 8016d8e:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016d92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d96:	db09      	blt.n	8016dac <draw_with_stencil+0x6d8>
 8016d98:	eddd 5a1e 	vldr	s11, [sp, #120]	@ 0x78
 8016d9c:	ed9d 6a1c 	vldr	s12, [sp, #112]	@ 0x70
 8016da0:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016da4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016da8:	f100 80c0 	bmi.w	8016f2c <draw_with_stencil+0x858>
 8016dac:	eef0 7a66 	vmov.f32	s15, s13
 8016db0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8016db4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016db8:	f10d 0c70 	add.w	ip, sp, #112	@ 0x70
 8016dbc:	f340 80be 	ble.w	8016f3c <draw_with_stencil+0x868>
 8016dc0:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8016dc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dc8:	f10d 0c80 	add.w	ip, sp, #128	@ 0x80
 8016dcc:	f300 80ed 	bgt.w	8016faa <draw_with_stencil+0x8d6>
 8016dd0:	ee77 6a48 	vsub.f32	s13, s14, s16
 8016dd4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8016dd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ddc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016de0:	bf48      	it	mi
 8016de2:	eef1 6a66 	vnegmi.f32	s13, s13
 8016de6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dea:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016dee:	bf4c      	ite	mi
 8016df0:	eeb1 6a47 	vnegmi.f32	s12, s14
 8016df4:	eeb0 6a47 	vmovpl.f32	s12, s14
 8016df8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dfc:	f100 8373 	bmi.w	80174e6 <draw_with_stencil+0xe12>
 8016e00:	eeb4 8ac6 	vcmpe.f32	s16, s12
 8016e04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e08:	f300 847e 	bgt.w	8017708 <draw_with_stencil+0x1034>
 8016e0c:	ed5f 7aeb 	vldr	s15, [pc, #-940]	@ 8016a64 <draw_with_stencil+0x390>
 8016e10:	ee68 7a27 	vmul.f32	s15, s16, s15
 8016e14:	eef4 6ae7 	vcmpe.f32	s13, s15
 8016e18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e1c:	d809      	bhi.n	8016e32 <draw_with_stencil+0x75e>
 8016e1e:	eddc 6a00 	vldr	s13, [ip]
 8016e22:	eddd 7a22 	vldr	s15, [sp, #136]	@ 0x88
 8016e26:	eef4 6ae7 	vcmpe.f32	s13, s15
 8016e2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e2e:	f300 80bc 	bgt.w	8016faa <draw_with_stencil+0x8d6>
 8016e32:	eeb0 8a47 	vmov.f32	s16, s14
 8016e36:	e0ba      	b.n	8016fae <draw_with_stencil+0x8da>
 8016e38:	eef0 8a67 	vmov.f32	s17, s15
 8016e3c:	eef4 8ac7 	vcmpe.f32	s17, s14
 8016e40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e44:	f10d 0e78 	add.w	lr, sp, #120	@ 0x78
 8016e48:	f73f aec3 	bgt.w	8016bd2 <draw_with_stencil+0x4fe>
 8016e4c:	ee78 5ac7 	vsub.f32	s11, s17, s14
 8016e50:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016e54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e58:	f100 8276 	bmi.w	8017348 <draw_with_stencil+0xc74>
 8016e5c:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8016e60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e64:	f100 824e 	bmi.w	8017304 <draw_with_stencil+0xc30>
 8016e68:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016e6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e70:	eeb0 5a68 	vmov.f32	s10, s17
 8016e74:	f100 824e 	bmi.w	8017314 <draw_with_stencil+0xc40>
 8016e78:	eeb4 5ac7 	vcmpe.f32	s10, s14
 8016e7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e80:	f100 8435 	bmi.w	80176ee <draw_with_stencil+0x101a>
 8016e84:	ed9f 6a28 	vldr	s12, [pc, #160]	@ 8016f28 <draw_with_stencil+0x854>
 8016e88:	ee27 6a06 	vmul.f32	s12, s14, s12
 8016e8c:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016e90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e94:	f63f aea1 	bhi.w	8016bda <draw_with_stencil+0x506>
 8016e98:	edde 5a00 	vldr	s11, [lr]
 8016e9c:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8016ea0:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016ea4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ea8:	f73f ae93 	bgt.w	8016bd2 <draw_with_stencil+0x4fe>
 8016eac:	e695      	b.n	8016bda <draw_with_stencil+0x506>
 8016eae:	a91e      	add	r1, sp, #120	@ 0x78
 8016eb0:	ed91 6a01 	vldr	s12, [r1, #4]
 8016eb4:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8016eb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ebc:	f04f 0001 	mov.w	r0, #1
 8016ec0:	f73f af04 	bgt.w	8016ccc <draw_with_stencil+0x5f8>
 8016ec4:	ee76 5a47 	vsub.f32	s11, s12, s14
 8016ec8:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016ecc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ed0:	f100 836e 	bmi.w	80175b0 <draw_with_stencil+0xedc>
 8016ed4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016ed8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016edc:	f100 8310 	bmi.w	8017500 <draw_with_stencil+0xe2c>
 8016ee0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016ee4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ee8:	eeb0 5a46 	vmov.f32	s10, s12
 8016eec:	f100 8310 	bmi.w	8017510 <draw_with_stencil+0xe3c>
 8016ef0:	eeb4 5ac7 	vcmpe.f32	s10, s14
 8016ef4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ef8:	f100 843a 	bmi.w	8017770 <draw_with_stencil+0x109c>
 8016efc:	ed9f 6a0a 	vldr	s12, [pc, #40]	@ 8016f28 <draw_with_stencil+0x854>
 8016f00:	ee27 6a06 	vmul.f32	s12, s14, s12
 8016f04:	eeb4 6ae5 	vcmpe.f32	s12, s11
 8016f08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f0c:	f6ff aee0 	blt.w	8016cd0 <draw_with_stencil+0x5fc>
 8016f10:	ed91 6a00 	vldr	s12, [r1]
 8016f14:	eddd 5a20 	vldr	s11, [sp, #128]	@ 0x80
 8016f18:	eef4 5ac6 	vcmpe.f32	s11, s12
 8016f1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f20:	f73f aed4 	bgt.w	8016ccc <draw_with_stencil+0x5f8>
 8016f24:	e6d4      	b.n	8016cd0 <draw_with_stencil+0x5fc>
 8016f26:	bf00      	nop
 8016f28:	3727c5ac 	.word	0x3727c5ac
 8016f2c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8016f30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f34:	f10d 0c78 	add.w	ip, sp, #120	@ 0x78
 8016f38:	f73f af42 	bgt.w	8016dc0 <draw_with_stencil+0x6ec>
 8016f3c:	ee37 6ac7 	vsub.f32	s12, s15, s14
 8016f40:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8016f44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f48:	f100 827e 	bmi.w	8017448 <draw_with_stencil+0xd74>
 8016f4c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016f50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f54:	f100 82b2 	bmi.w	80174bc <draw_with_stencil+0xde8>
 8016f58:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016f5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f60:	eef0 5a67 	vmov.f32	s11, s15
 8016f64:	f100 82b2 	bmi.w	80174cc <draw_with_stencil+0xdf8>
 8016f68:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8016f6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f70:	f300 843f 	bgt.w	80177f2 <draw_with_stencil+0x111e>
 8016f74:	ed5f 6a14 	vldr	s13, [pc, #-80]	@ 8016f28 <draw_with_stencil+0x854>
 8016f78:	ee67 6a26 	vmul.f32	s13, s14, s13
 8016f7c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8016f80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f84:	db09      	blt.n	8016f9a <draw_with_stencil+0x8c6>
 8016f86:	eddc 6a00 	vldr	s13, [ip]
 8016f8a:	ed9d 6a20 	vldr	s12, [sp, #128]	@ 0x80
 8016f8e:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8016f92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f96:	f53f af13 	bmi.w	8016dc0 <draw_with_stencil+0x6ec>
 8016f9a:	eeb0 7a67 	vmov.f32	s14, s15
 8016f9e:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8016fa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016fa6:	f77f af13 	ble.w	8016dd0 <draw_with_stencil+0x6fc>
 8016faa:	f10d 0c88 	add.w	ip, sp, #136	@ 0x88
 8016fae:	1c5a      	adds	r2, r3, #1
 8016fb0:	f002 0203 	and.w	r2, r2, #3
 8016fb4:	f10d 0ab0 	add.w	sl, sp, #176	@ 0xb0
 8016fb8:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8016fbc:	4575      	cmp	r5, lr
 8016fbe:	ed52 fa10 	vldr	s31, [r2, #-64]	@ 0xffffffc0
 8016fc2:	ed52 da0f 	vldr	s27, [r2, #-60]	@ 0xffffffc4
 8016fc6:	ed9e ba00 	vldr	s22, [lr]
 8016fca:	f000 8349 	beq.w	8017660 <draw_with_stencil+0xf8c>
 8016fce:	1c9a      	adds	r2, r3, #2
 8016fd0:	f002 0203 	and.w	r2, r2, #3
 8016fd4:	ab2c      	add	r3, sp, #176	@ 0xb0
 8016fd6:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 8016fda:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8016fde:	ed12 aa10 	vldr	s20, [r2, #-64]	@ 0xffffffc0
 8016fe2:	ed95 9a00 	vldr	s18, [r5]
 8016fe6:	ee3a aa67 	vsub.f32	s20, s20, s15
 8016fea:	ee39 9a27 	vadd.f32	s18, s18, s15
 8016fee:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8016ff2:	ed12 da0f 	vldr	s26, [r2, #-60]	@ 0xffffffc4
 8016ff6:	ee2a aa27 	vmul.f32	s20, s20, s15
 8016ffa:	ee29 9a27 	vmul.f32	s18, s18, s15
 8016ffe:	ed95 ea01 	vldr	s28, [r5, #4]
 8017002:	1cc3      	adds	r3, r0, #3
 8017004:	f003 0303 	and.w	r3, r3, #3
 8017008:	aa2c      	add	r2, sp, #176	@ 0xb0
 801700a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 801700e:	4561      	cmp	r1, ip
 8017010:	ed13 ca10 	vldr	s24, [r3, #-64]	@ 0xffffffc0
 8017014:	ed53 ca0f 	vldr	s25, [r3, #-60]	@ 0xffffffc4
 8017018:	eddc ba00 	vldr	s23, [ip]
 801701c:	f000 8342 	beq.w	80176a4 <draw_with_stencil+0xfd0>
 8017020:	1c83      	adds	r3, r0, #2
 8017022:	f003 0303 	and.w	r3, r3, #3
 8017026:	aa2c      	add	r2, sp, #176	@ 0xb0
 8017028:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 801702c:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8017030:	ed53 aa10 	vldr	s21, [r3, #-64]	@ 0xffffffc0
 8017034:	edd1 9a00 	vldr	s19, [r1]
 8017038:	ee7a aae7 	vsub.f32	s21, s21, s15
 801703c:	ee79 9aa7 	vadd.f32	s19, s19, s15
 8017040:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8017044:	ed53 ea0f 	vldr	s29, [r3, #-60]	@ 0xffffffc4
 8017048:	ee6a aaa7 	vmul.f32	s21, s21, s15
 801704c:	ee69 9aa7 	vmul.f32	s19, s19, s15
 8017050:	ed91 fa01 	vldr	s30, [r1, #4]
 8017054:	2009      	movs	r0, #9
 8017056:	f006 fe65 	bl	801dd24 <nema_cl_get_space>
 801705a:	2800      	cmp	r0, #0
 801705c:	d040      	beq.n	80170e0 <draw_with_stencil+0xa0c>
 801705e:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 8017062:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8017066:	ee7f fa87 	vadd.f32	s31, s31, s14
 801706a:	ee3b ba47 	vsub.f32	s22, s22, s14
 801706e:	ee6f faa7 	vmul.f32	s31, s31, s15
 8017072:	ee2b ba27 	vmul.f32	s22, s22, s15
 8017076:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 801707a:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 801707e:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 8017082:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8017086:	ed80 9a01 	vstr	s18, [r0, #4]
 801708a:	ed80 ea03 	vstr	s28, [r0, #12]
 801708e:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8017092:	f44f 7550 	mov.w	r5, #832	@ 0x340
 8017096:	f44f 7254 	mov.w	r2, #848	@ 0x350
 801709a:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801709e:	edc0 da07 	vstr	s27, [r0, #28]
 80170a2:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 80170a6:	ed80 da0b 	vstr	s26, [r0, #44]	@ 0x2c
 80170aa:	edc0 8a0f 	vstr	s17, [r0, #60]	@ 0x3c
 80170ae:	edc0 fa05 	vstr	s31, [r0, #20]
 80170b2:	ed80 ba0d 	vstr	s22, [r0, #52]	@ 0x34
 80170b6:	f8c0 e010 	str.w	lr, [r0, #16]
 80170ba:	f8df e3b8 	ldr.w	lr, [pc, #952]	@ 8017474 <draw_with_stencil+0xda0>
 80170be:	f8c0 b000 	str.w	fp, [r0]
 80170c2:	f8c0 a008 	str.w	sl, [r0, #8]
 80170c6:	f8c0 c018 	str.w	ip, [r0, #24]
 80170ca:	f8de c010 	ldr.w	ip, [lr, #16]
 80170ce:	6281      	str	r1, [r0, #40]	@ 0x28
 80170d0:	49e2      	ldr	r1, [pc, #904]	@ (801745c <draw_with_stencil+0xd88>)
 80170d2:	6205      	str	r5, [r0, #32]
 80170d4:	f04c 0505 	orr.w	r5, ip, #5
 80170d8:	6445      	str	r5, [r0, #68]	@ 0x44
 80170da:	6302      	str	r2, [r0, #48]	@ 0x30
 80170dc:	6383      	str	r3, [r0, #56]	@ 0x38
 80170de:	6401      	str	r1, [r0, #64]	@ 0x40
 80170e0:	2009      	movs	r0, #9
 80170e2:	f006 fe1f 	bl	801dd24 <nema_cl_get_space>
 80170e6:	2800      	cmp	r0, #0
 80170e8:	d040      	beq.n	801716c <draw_with_stencil+0xa98>
 80170ea:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 80170ee:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 80170f2:	ee7b bac7 	vsub.f32	s23, s23, s14
 80170f6:	ee3c ca07 	vadd.f32	s24, s24, s14
 80170fa:	ee6b baa7 	vmul.f32	s23, s23, s15
 80170fe:	ee2c ca27 	vmul.f32	s24, s24, s15
 8017102:	f44f 7e4c 	mov.w	lr, #816	@ 0x330
 8017106:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 801710a:	f44f 7a49 	mov.w	sl, #804	@ 0x324
 801710e:	f44f 7c4d 	mov.w	ip, #820	@ 0x334
 8017112:	edc0 9a01 	vstr	s19, [r0, #4]
 8017116:	ed80 fa03 	vstr	s30, [r0, #12]
 801711a:	f44f 7151 	mov.w	r1, #836	@ 0x344
 801711e:	f44f 7550 	mov.w	r5, #832	@ 0x340
 8017122:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8017126:	f44f 7355 	mov.w	r3, #852	@ 0x354
 801712a:	ed80 8a07 	vstr	s16, [r0, #28]
 801712e:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 8017132:	edc0 ea0b 	vstr	s29, [r0, #44]	@ 0x2c
 8017136:	edc0 ca0f 	vstr	s25, [r0, #60]	@ 0x3c
 801713a:	edc0 ba05 	vstr	s23, [r0, #20]
 801713e:	ed80 ca0d 	vstr	s24, [r0, #52]	@ 0x34
 8017142:	f8c0 e010 	str.w	lr, [r0, #16]
 8017146:	f8df e32c 	ldr.w	lr, [pc, #812]	@ 8017474 <draw_with_stencil+0xda0>
 801714a:	f8c0 b000 	str.w	fp, [r0]
 801714e:	f8c0 a008 	str.w	sl, [r0, #8]
 8017152:	f8c0 c018 	str.w	ip, [r0, #24]
 8017156:	f8de c010 	ldr.w	ip, [lr, #16]
 801715a:	6281      	str	r1, [r0, #40]	@ 0x28
 801715c:	49bf      	ldr	r1, [pc, #764]	@ (801745c <draw_with_stencil+0xd88>)
 801715e:	6205      	str	r5, [r0, #32]
 8017160:	f04c 0505 	orr.w	r5, ip, #5
 8017164:	6445      	str	r5, [r0, #68]	@ 0x44
 8017166:	6302      	str	r2, [r0, #48]	@ 0x30
 8017168:	6383      	str	r3, [r0, #56]	@ 0x38
 801716a:	6401      	str	r1, [r0, #64]	@ 0x40
 801716c:	4640      	mov	r0, r8
 801716e:	f7fa ff87 	bl	8012080 <nema_enable_aa_flags>
 8017172:	f7f9 fe13 	bl	8010d9c <nema_set_clip_pop>
 8017176:	9d05      	ldr	r5, [sp, #20]
 8017178:	2034      	movs	r0, #52	@ 0x34
 801717a:	b2a9      	uxth	r1, r5
 801717c:	f041 6110 	orr.w	r1, r1, #150994944	@ 0x9000000
 8017180:	f006 fe2c 	bl	801dddc <nema_cl_add_cmd>
 8017184:	4629      	mov	r1, r5
 8017186:	f8df a2f0 	ldr.w	sl, [pc, #752]	@ 8017478 <draw_with_stencil+0xda4>
 801718a:	4331      	orrs	r1, r6
 801718c:	2038      	movs	r0, #56	@ 0x38
 801718e:	f006 fe25 	bl	801dddc <nema_cl_add_cmd>
 8017192:	4db3      	ldr	r5, [pc, #716]	@ (8017460 <draw_with_stencil+0xd8c>)
 8017194:	f89a 3000 	ldrb.w	r3, [sl]
 8017198:	702b      	strb	r3, [r5, #0]
 801719a:	2b00      	cmp	r3, #0
 801719c:	f040 8234 	bne.w	8017608 <draw_with_stencil+0xf34>
 80171a0:	4bb0      	ldr	r3, [pc, #704]	@ (8017464 <draw_with_stencil+0xd90>)
 80171a2:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8017468 <draw_with_stencil+0xd94>
 80171a6:	edd3 6a00 	vldr	s13, [r3]
 80171aa:	eef4 6ac7 	vcmpe.f32	s13, s14
 80171ae:	4aaf      	ldr	r2, [pc, #700]	@ (801746c <draw_with_stencil+0xd98>)
 80171b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171b4:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80171b8:	edd2 7a00 	vldr	s15, [r2]
 80171bc:	ee67 7a86 	vmul.f32	s15, s15, s12
 80171c0:	bfc8      	it	gt
 80171c2:	eeb7 6a00 	vmovgt.f32	s12, #112	@ 0x3f800000  1.0
 80171c6:	4baa      	ldr	r3, [pc, #680]	@ (8017470 <draw_with_stencil+0xd9c>)
 80171c8:	bfc8      	it	gt
 80171ca:	ee86 7a26 	vdivgt.f32	s14, s12, s13
 80171ce:	ed9f 6aa6 	vldr	s12, [pc, #664]	@ 8017468 <draw_with_stencil+0xd94>
 80171d2:	edd3 6a00 	vldr	s13, [r3]
 80171d6:	eef4 6ac6 	vcmpe.f32	s13, s12
 80171da:	bfd8      	it	le
 80171dc:	eeb7 7a00 	vmovle.f32	s14, #112	@ 0x3f800000  1.0
 80171e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171e4:	bfca      	itet	gt
 80171e6:	eef7 5a00 	vmovgt.f32	s11, #112	@ 0x3f800000  1.0
 80171ea:	eeb7 6a00 	vmovle.f32	s12, #112	@ 0x3f800000  1.0
 80171ee:	ee85 6aa6 	vdivgt.f32	s12, s11, s13
 80171f2:	ee37 7a87 	vadd.f32	s14, s15, s14
 80171f6:	ed94 2a08 	vldr	s4, [r4, #32]
 80171fa:	ee77 7a86 	vadd.f32	s15, s15, s12
 80171fe:	edd4 2a09 	vldr	s5, [r4, #36]	@ 0x24
 8017202:	ed94 6a04 	vldr	s12, [r4, #16]
 8017206:	edd4 6a05 	vldr	s13, [r4, #20]
 801720a:	ee37 3a07 	vadd.f32	s6, s14, s14
 801720e:	ee77 3aa7 	vadd.f32	s7, s15, s15
 8017212:	ee36 5a02 	vadd.f32	s10, s12, s4
 8017216:	ee76 5aa2 	vadd.f32	s11, s13, s5
 801721a:	ed94 4a06 	vldr	s8, [r4, #24]
 801721e:	edd4 4a07 	vldr	s9, [r4, #28]
 8017222:	ee36 6a47 	vsub.f32	s12, s12, s14
 8017226:	ee76 6ae7 	vsub.f32	s13, s13, s15
 801722a:	ee35 5a07 	vadd.f32	s10, s10, s14
 801722e:	ee75 5aa7 	vadd.f32	s11, s11, s15
 8017232:	ee33 3a02 	vadd.f32	s6, s6, s4
 8017236:	ee73 3aa2 	vadd.f32	s7, s7, s5
 801723a:	ee34 7a07 	vadd.f32	s14, s8, s14
 801723e:	ee74 7aa7 	vadd.f32	s15, s9, s15
 8017242:	ed84 3a12 	vstr	s6, [r4, #72]	@ 0x48
 8017246:	edc4 3a13 	vstr	s7, [r4, #76]	@ 0x4c
 801724a:	ed84 5a0c 	vstr	s10, [r4, #48]	@ 0x30
 801724e:	ed84 5a0e 	vstr	s10, [r4, #56]	@ 0x38
 8017252:	ed84 6a0a 	vstr	s12, [r4, #40]	@ 0x28
 8017256:	ed84 6a10 	vstr	s12, [r4, #64]	@ 0x40
 801725a:	ed84 6a14 	vstr	s12, [r4, #80]	@ 0x50
 801725e:	ed84 7a16 	vstr	s14, [r4, #88]	@ 0x58
 8017262:	edc4 5a0f 	vstr	s11, [r4, #60]	@ 0x3c
 8017266:	edc4 5a11 	vstr	s11, [r4, #68]	@ 0x44
 801726a:	edc4 6a0b 	vstr	s13, [r4, #44]	@ 0x2c
 801726e:	edc4 6a0d 	vstr	s13, [r4, #52]	@ 0x34
 8017272:	edc4 6a15 	vstr	s13, [r4, #84]	@ 0x54
 8017276:	edc4 7a17 	vstr	s15, [r4, #92]	@ 0x5c
 801727a:	683b      	ldr	r3, [r7, #0]
 801727c:	7f1b      	ldrb	r3, [r3, #28]
 801727e:	2b01      	cmp	r3, #1
 8017280:	f000 82ec 	beq.w	801785c <draw_with_stencil+0x1188>
 8017284:	f0c0 82c2 	bcc.w	801780c <draw_with_stencil+0x1138>
 8017288:	2b02      	cmp	r3, #2
 801728a:	d018      	beq.n	80172be <draw_with_stencil+0xbea>
 801728c:	2004      	movs	r0, #4
 801728e:	f005 fbf1 	bl	801ca74 <nema_vg_set_error>
 8017292:	2604      	movs	r6, #4
 8017294:	4630      	mov	r0, r6
 8017296:	f005 fbed 	bl	801ca74 <nema_vg_set_error>
 801729a:	4630      	mov	r0, r6
 801729c:	b02d      	add	sp, #180	@ 0xb4
 801729e:	ecbd 8b10 	vpop	{d8-d15}
 80172a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172a6:	f44f 7000 	mov.w	r0, #512	@ 0x200
 80172aa:	f005 fbe3 	bl	801ca74 <nema_vg_set_error>
 80172ae:	f44f 7600 	mov.w	r6, #512	@ 0x200
 80172b2:	4630      	mov	r0, r6
 80172b4:	b02d      	add	sp, #180	@ 0xb4
 80172b6:	ecbd 8b10 	vpop	{d8-d15}
 80172ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172be:	f64b 4116 	movw	r1, #48150	@ 0xbc16
 80172c2:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 80172c6:	f006 fd89 	bl	801dddc <nema_cl_add_cmd>
 80172ca:	f64b 4117 	movw	r1, #48151	@ 0xbc17
 80172ce:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 80172d2:	f006 fd83 	bl	801dddc <nema_cl_add_cmd>
 80172d6:	f04f 1001 	mov.w	r0, #65537	@ 0x10001
 80172da:	f7fa fffd 	bl	80122d8 <nema_set_rop_blend_mode>
 80172de:	4620      	mov	r0, r4
 80172e0:	f7fe fb1a 	bl	8015918 <fill_path_even_odd>
 80172e4:	4606      	mov	r6, r0
 80172e6:	2800      	cmp	r0, #0
 80172e8:	f000 83bb 	beq.w	8017a62 <draw_with_stencil+0x138e>
 80172ec:	f005 fbc2 	bl	801ca74 <nema_vg_set_error>
 80172f0:	e7d0      	b.n	8017294 <draw_with_stencil+0xbc0>
 80172f2:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80172f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172fa:	eef1 5a65 	vneg.f32	s11, s11
 80172fe:	f57f abcc 	bpl.w	8016a9a <draw_with_stencil+0x3c6>
 8017302:	e131      	b.n	8017568 <draw_with_stencil+0xe94>
 8017304:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801730c:	eeb1 5a68 	vneg.f32	s10, s17
 8017310:	f57f adb2 	bpl.w	8016e78 <draw_with_stencil+0x7a4>
 8017314:	eeb1 6a47 	vneg.f32	s12, s14
 8017318:	eeb4 6ac5 	vcmpe.f32	s12, s10
 801731c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017320:	f300 81e5 	bgt.w	80176ee <draw_with_stencil+0x101a>
 8017324:	ed9f 5a55 	vldr	s10, [pc, #340]	@ 801747c <draw_with_stencil+0xda8>
 8017328:	ee26 6a05 	vmul.f32	s12, s12, s10
 801732c:	e5ae      	b.n	8016e8c <draw_with_stencil+0x7b8>
 801732e:	eeb1 6a48 	vneg.f32	s12, s16
 8017332:	eeb4 6ac5 	vcmpe.f32	s12, s10
 8017336:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801733a:	f300 8240 	bgt.w	80177be <draw_with_stencil+0x10ea>
 801733e:	ed9f 5a4f 	vldr	s10, [pc, #316]	@ 801747c <draw_with_stencil+0xda8>
 8017342:	ee26 6a05 	vmul.f32	s12, s12, s10
 8017346:	e46f      	b.n	8016c28 <draw_with_stencil+0x554>
 8017348:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801734c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017350:	eef1 5a65 	vneg.f32	s11, s11
 8017354:	f57f ad88 	bpl.w	8016e68 <draw_with_stencil+0x794>
 8017358:	e7d4      	b.n	8017304 <draw_with_stencil+0xc30>
 801735a:	eef1 5a65 	vneg.f32	s11, s11
 801735e:	eef4 5ac6 	vcmpe.f32	s11, s12
 8017362:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017366:	f73f aaab 	bgt.w	80168c0 <draw_with_stencil+0x1ec>
 801736a:	eddf 7a44 	vldr	s15, [pc, #272]	@ 801747c <draw_with_stencil+0xda8>
 801736e:	ee65 7aa7 	vmul.f32	s15, s11, s15
 8017372:	f7ff bab0 	b.w	80168d6 <draw_with_stencil+0x202>
 8017376:	eef1 4a48 	vneg.f32	s9, s16
 801737a:	eef4 4ac5 	vcmpe.f32	s9, s10
 801737e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017382:	f300 8229 	bgt.w	80177d8 <draw_with_stencil+0x1104>
 8017386:	ed9f 6a3d 	vldr	s12, [pc, #244]	@ 801747c <draw_with_stencil+0xda8>
 801738a:	ee24 6a86 	vmul.f32	s12, s9, s12
 801738e:	f7ff bbd1 	b.w	8016b34 <draw_with_stencil+0x460>
 8017392:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017396:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801739a:	eef1 5a66 	vneg.f32	s11, s13
 801739e:	f57f ab40 	bpl.w	8016a22 <draw_with_stencil+0x34e>
 80173a2:	eeb1 7a67 	vneg.f32	s14, s15
 80173a6:	eef4 5ac7 	vcmpe.f32	s11, s14
 80173aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173ae:	f100 81ec 	bmi.w	801778a <draw_with_stencil+0x10b6>
 80173b2:	eddf 5a32 	vldr	s11, [pc, #200]	@ 801747c <draw_with_stencil+0xda8>
 80173b6:	ee27 7a25 	vmul.f32	s14, s14, s11
 80173ba:	f7ff bb3c 	b.w	8016a36 <draw_with_stencil+0x362>
 80173be:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80173c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173c6:	eeb1 6a46 	vneg.f32	s12, s12
 80173ca:	f57f ab22 	bpl.w	8016a12 <draw_with_stencil+0x33e>
 80173ce:	e7e0      	b.n	8017392 <draw_with_stencil+0xcbe>
 80173d0:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 80173d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173d8:	eeb1 6a47 	vneg.f32	s12, s14
 80173dc:	f57f aa2c 	bpl.w	8016838 <draw_with_stencil+0x164>
 80173e0:	eeb1 5a45 	vneg.f32	s10, s10
 80173e4:	eeb4 6ac5 	vcmpe.f32	s12, s10
 80173e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173ec:	f53f aa2a 	bmi.w	8016844 <draw_with_stencil+0x170>
 80173f0:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 801747c <draw_with_stencil+0xda8>
 80173f4:	ee25 7a07 	vmul.f32	s14, s10, s14
 80173f8:	f7ff ba2f 	b.w	801685a <draw_with_stencil+0x186>
 80173fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017400:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017404:	eef1 3a63 	vneg.f32	s7, s7
 8017408:	f57f aa81 	bpl.w	801690e <draw_with_stencil+0x23a>
 801740c:	e008      	b.n	8017420 <draw_with_stencil+0xd4c>
 801740e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017412:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017416:	eef1 7a67 	vneg.f32	s15, s15
 801741a:	f57f aa05 	bpl.w	8016828 <draw_with_stencil+0x154>
 801741e:	e7d7      	b.n	80173d0 <draw_with_stencil+0xcfc>
 8017420:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017424:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017428:	eeb1 3a67 	vneg.f32	s6, s15
 801742c:	f57f aa77 	bpl.w	801691e <draw_with_stencil+0x24a>
 8017430:	eeb1 6a46 	vneg.f32	s12, s12
 8017434:	eeb4 3ac6 	vcmpe.f32	s6, s12
 8017438:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801743c:	f53f aa75 	bmi.w	801692a <draw_with_stencil+0x256>
 8017440:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 801747c <draw_with_stencil+0xda8>
 8017444:	f7ff ba79 	b.w	801693a <draw_with_stencil+0x266>
 8017448:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801744c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017450:	eeb1 6a46 	vneg.f32	s12, s12
 8017454:	f57f ad80 	bpl.w	8016f58 <draw_with_stencil+0x884>
 8017458:	e030      	b.n	80174bc <draw_with_stencil+0xde8>
 801745a:	bf00      	nop
 801745c:	ff000100 	.word	0xff000100
 8017460:	20082ff8 	.word	0x20082ff8
 8017464:	20082ff0 	.word	0x20082ff0
 8017468:	3a83126f 	.word	0x3a83126f
 801746c:	20000134 	.word	0x20000134
 8017470:	20082ff4 	.word	0x20082ff4
 8017474:	20000064 	.word	0x20000064
 8017478:	20082ff9 	.word	0x20082ff9
 801747c:	3727c5ac 	.word	0x3727c5ac
 8017480:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017484:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017488:	eeb1 5a66 	vneg.f32	s10, s13
 801748c:	f57f ac75 	bpl.w	8016d7a <draw_with_stencil+0x6a6>
 8017490:	eeb1 6a67 	vneg.f32	s12, s15
 8017494:	eeb4 6ac5 	vcmpe.f32	s12, s10
 8017498:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801749c:	f300 814e 	bgt.w	801773c <draw_with_stencil+0x1068>
 80174a0:	ed1f 5a0a 	vldr	s10, [pc, #-40]	@ 801747c <draw_with_stencil+0xda8>
 80174a4:	ee26 6a05 	vmul.f32	s12, s12, s10
 80174a8:	e471      	b.n	8016d8e <draw_with_stencil+0x6ba>
 80174aa:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80174ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174b2:	eef1 5a65 	vneg.f32	s11, s11
 80174b6:	f57f ac58 	bpl.w	8016d6a <draw_with_stencil+0x696>
 80174ba:	e7e1      	b.n	8017480 <draw_with_stencil+0xdac>
 80174bc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80174c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174c4:	eef1 5a67 	vneg.f32	s11, s15
 80174c8:	f57f ad4e 	bpl.w	8016f68 <draw_with_stencil+0x894>
 80174cc:	eef1 6a47 	vneg.f32	s13, s14
 80174d0:	eef4 6ae5 	vcmpe.f32	s13, s11
 80174d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174d8:	f300 818b 	bgt.w	80177f2 <draw_with_stencil+0x111e>
 80174dc:	ed5f 5a19 	vldr	s11, [pc, #-100]	@ 801747c <draw_with_stencil+0xda8>
 80174e0:	ee66 6aa5 	vmul.f32	s13, s13, s11
 80174e4:	e54a      	b.n	8016f7c <draw_with_stencil+0x8a8>
 80174e6:	eef1 7a48 	vneg.f32	s15, s16
 80174ea:	eef4 7ac6 	vcmpe.f32	s15, s12
 80174ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174f2:	f300 8109 	bgt.w	8017708 <draw_with_stencil+0x1034>
 80174f6:	ed1f 6a1f 	vldr	s12, [pc, #-124]	@ 801747c <draw_with_stencil+0xda8>
 80174fa:	ee67 7a86 	vmul.f32	s15, s15, s12
 80174fe:	e489      	b.n	8016e14 <draw_with_stencil+0x740>
 8017500:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8017504:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017508:	eeb1 5a46 	vneg.f32	s10, s12
 801750c:	f57f acf0 	bpl.w	8016ef0 <draw_with_stencil+0x81c>
 8017510:	eef1 4a47 	vneg.f32	s9, s14
 8017514:	eef4 4ac5 	vcmpe.f32	s9, s10
 8017518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801751c:	f300 8128 	bgt.w	8017770 <draw_with_stencil+0x109c>
 8017520:	ed1f 6a2a 	vldr	s12, [pc, #-168]	@ 801747c <draw_with_stencil+0xda8>
 8017524:	ee24 6a86 	vmul.f32	s12, s9, s12
 8017528:	e4ec      	b.n	8016f04 <draw_with_stencil+0x830>
 801752a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801752e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017532:	eeb1 5a66 	vneg.f32	s10, s13
 8017536:	f57f aba5 	bpl.w	8016c84 <draw_with_stencil+0x5b0>
 801753a:	eeb1 6a67 	vneg.f32	s12, s15
 801753e:	eeb4 6ac5 	vcmpe.f32	s12, s10
 8017542:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017546:	f300 80c5 	bgt.w	80176d4 <draw_with_stencil+0x1000>
 801754a:	ed1f 5a34 	vldr	s10, [pc, #-208]	@ 801747c <draw_with_stencil+0xda8>
 801754e:	ee26 6a05 	vmul.f32	s12, s12, s10
 8017552:	f7ff bba1 	b.w	8016c98 <draw_with_stencil+0x5c4>
 8017556:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801755a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801755e:	eef1 5a65 	vneg.f32	s11, s11
 8017562:	f57f ab87 	bpl.w	8016c74 <draw_with_stencil+0x5a0>
 8017566:	e7e0      	b.n	801752a <draw_with_stencil+0xe56>
 8017568:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801756c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017570:	eeb1 5a46 	vneg.f32	s10, s12
 8017574:	f57f aa99 	bpl.w	8016aaa <draw_with_stencil+0x3d6>
 8017578:	eef1 4a47 	vneg.f32	s9, s14
 801757c:	eeb4 5ae4 	vcmpe.f32	s10, s9
 8017580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017584:	f100 80e7 	bmi.w	8017756 <draw_with_stencil+0x1082>
 8017588:	ed1f 6a44 	vldr	s12, [pc, #-272]	@ 801747c <draw_with_stencil+0xda8>
 801758c:	ee24 6a86 	vmul.f32	s12, s9, s12
 8017590:	f7ff ba95 	b.w	8016abe <draw_with_stencil+0x3ea>
 8017594:	eef1 4a48 	vneg.f32	s9, s16
 8017598:	eef4 4ac5 	vcmpe.f32	s9, s10
 801759c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175a0:	f300 80bf 	bgt.w	8017722 <draw_with_stencil+0x104e>
 80175a4:	ed1f 6a4b 	vldr	s12, [pc, #-300]	@ 801747c <draw_with_stencil+0xda8>
 80175a8:	ee24 6a86 	vmul.f32	s12, s9, s12
 80175ac:	f7ff bbb9 	b.w	8016d22 <draw_with_stencil+0x64e>
 80175b0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80175b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175b8:	eef1 5a65 	vneg.f32	s11, s11
 80175bc:	f57f ac90 	bpl.w	8016ee0 <draw_with_stencil+0x80c>
 80175c0:	e79e      	b.n	8017500 <draw_with_stencil+0xe2c>
 80175c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80175c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175ca:	eeb1 5a66 	vneg.f32	s10, s13
 80175ce:	f57f aadd 	bpl.w	8016b8c <draw_with_stencil+0x4b8>
 80175d2:	eeb1 6a67 	vneg.f32	s12, s15
 80175d6:	eeb4 5ac6 	vcmpe.f32	s10, s12
 80175da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175de:	f100 80e1 	bmi.w	80177a4 <draw_with_stencil+0x10d0>
 80175e2:	ed1f 5a5a 	vldr	s10, [pc, #-360]	@ 801747c <draw_with_stencil+0xda8>
 80175e6:	ee26 6a05 	vmul.f32	s12, s12, s10
 80175ea:	f7ff bad9 	b.w	8016ba0 <draw_with_stencil+0x4cc>
 80175ee:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80175f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175f6:	eef1 5a65 	vneg.f32	s11, s11
 80175fa:	f57f aabf 	bpl.w	8016b7c <draw_with_stencil+0x4a8>
 80175fe:	e7e0      	b.n	80175c2 <draw_with_stencil+0xeee>
 8017600:	2500      	movs	r5, #0
 8017602:	aa1c      	add	r2, sp, #112	@ 0x70
 8017604:	f7ff b8fb 	b.w	80167fe <draw_with_stencil+0x12a>
 8017608:	2007      	movs	r0, #7
 801760a:	f006 fb8b 	bl	801dd24 <nema_cl_get_space>
 801760e:	b318      	cbz	r0, 8017658 <draw_with_stencil+0xf84>
 8017610:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8017614:	6002      	str	r2, [r0, #0]
 8017616:	f44f 725a 	mov.w	r2, #872	@ 0x368
 801761a:	4b8c      	ldr	r3, [pc, #560]	@ (801784c <draw_with_stencil+0x1178>)
 801761c:	6959      	ldr	r1, [r3, #20]
 801761e:	6082      	str	r2, [r0, #8]
 8017620:	f44f 7258 	mov.w	r2, #864	@ 0x360
 8017624:	6041      	str	r1, [r0, #4]
 8017626:	6899      	ldr	r1, [r3, #8]
 8017628:	6102      	str	r2, [r0, #16]
 801762a:	f44f 7259 	mov.w	r2, #868	@ 0x364
 801762e:	60c1      	str	r1, [r0, #12]
 8017630:	6819      	ldr	r1, [r3, #0]
 8017632:	6182      	str	r2, [r0, #24]
 8017634:	f44f 725b 	mov.w	r2, #876	@ 0x36c
 8017638:	6141      	str	r1, [r0, #20]
 801763a:	6859      	ldr	r1, [r3, #4]
 801763c:	6202      	str	r2, [r0, #32]
 801763e:	f44f 725c 	mov.w	r2, #880	@ 0x370
 8017642:	61c1      	str	r1, [r0, #28]
 8017644:	68d9      	ldr	r1, [r3, #12]
 8017646:	6282      	str	r2, [r0, #40]	@ 0x28
 8017648:	6241      	str	r1, [r0, #36]	@ 0x24
 801764a:	6919      	ldr	r1, [r3, #16]
 801764c:	f44f 7262 	mov.w	r2, #904	@ 0x388
 8017650:	2300      	movs	r3, #0
 8017652:	e9c0 230c 	strd	r2, r3, [r0, #48]	@ 0x30
 8017656:	62c1      	str	r1, [r0, #44]	@ 0x2c
 8017658:	2300      	movs	r3, #0
 801765a:	f88a 3000 	strb.w	r3, [sl]
 801765e:	e59f      	b.n	80171a0 <draw_with_stencil+0xacc>
 8017660:	3303      	adds	r3, #3
 8017662:	f003 0303 	and.w	r3, r3, #3
 8017666:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 801766a:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 801766e:	ed13 aa10 	vldr	s20, [r3, #-64]	@ 0xffffffc0
 8017672:	eeb5 9a00 	vmov.f32	s18, #80	@ 0x3e800000  0.250
 8017676:	ee3a aa67 	vsub.f32	s20, s20, s15
 801767a:	ee7b 7a27 	vadd.f32	s15, s22, s15
 801767e:	ee2a aa09 	vmul.f32	s20, s20, s18
 8017682:	ed13 da0f 	vldr	s26, [r3, #-60]	@ 0xffffffc4
 8017686:	ee27 9a89 	vmul.f32	s18, s15, s18
 801768a:	eeb0 ea68 	vmov.f32	s28, s17
 801768e:	e4b8      	b.n	8017002 <draw_with_stencil+0x92e>
 8017690:	2602      	movs	r6, #2
 8017692:	2002      	movs	r0, #2
 8017694:	f005 f9ee 	bl	801ca74 <nema_vg_set_error>
 8017698:	4630      	mov	r0, r6
 801769a:	b02d      	add	sp, #180	@ 0xb4
 801769c:	ecbd 8b10 	vpop	{d8-d15}
 80176a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80176a4:	1c43      	adds	r3, r0, #1
 80176a6:	f003 0303 	and.w	r3, r3, #3
 80176aa:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80176ae:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 80176b2:	ed53 aa10 	vldr	s21, [r3, #-64]	@ 0xffffffc0
 80176b6:	eef5 9a00 	vmov.f32	s19, #80	@ 0x3e800000  0.250
 80176ba:	ee7a aae7 	vsub.f32	s21, s21, s15
 80176be:	ee7b 7aa7 	vadd.f32	s15, s23, s15
 80176c2:	ee6a aaa9 	vmul.f32	s21, s21, s19
 80176c6:	ed53 ea0f 	vldr	s29, [r3, #-60]	@ 0xffffffc4
 80176ca:	ee67 9aa9 	vmul.f32	s19, s15, s19
 80176ce:	eeb0 fa48 	vmov.f32	s30, s16
 80176d2:	e4bf      	b.n	8017054 <draw_with_stencil+0x980>
 80176d4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80176d8:	ed9f 6a5d 	vldr	s12, [pc, #372]	@ 8017850 <draw_with_stencil+0x117c>
 80176dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176e0:	bf54      	ite	pl
 80176e2:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 80176e6:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 80176ea:	f7ff bad5 	b.w	8016c98 <draw_with_stencil+0x5c4>
 80176ee:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 80176f2:	ed9f 6a57 	vldr	s12, [pc, #348]	@ 8017850 <draw_with_stencil+0x117c>
 80176f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176fa:	bf54      	ite	pl
 80176fc:	ee28 6a86 	vmulpl.f32	s12, s17, s12
 8017700:	ee28 6ac6 	vnmulmi.f32	s12, s17, s12
 8017704:	f7ff bbc2 	b.w	8016e8c <draw_with_stencil+0x7b8>
 8017708:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801770c:	eddf 7a50 	vldr	s15, [pc, #320]	@ 8017850 <draw_with_stencil+0x117c>
 8017710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017714:	bf4c      	ite	mi
 8017716:	ee67 7a67 	vnmulmi.f32	s15, s14, s15
 801771a:	ee67 7a27 	vmulpl.f32	s15, s14, s15
 801771e:	f7ff bb79 	b.w	8016e14 <draw_with_stencil+0x740>
 8017722:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017726:	ed9f 5a4a 	vldr	s10, [pc, #296]	@ 8017850 <draw_with_stencil+0x117c>
 801772a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801772e:	bf4c      	ite	mi
 8017730:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 8017734:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 8017738:	f7ff baf3 	b.w	8016d22 <draw_with_stencil+0x64e>
 801773c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8017740:	ed9f 6a43 	vldr	s12, [pc, #268]	@ 8017850 <draw_with_stencil+0x117c>
 8017744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017748:	bf54      	ite	pl
 801774a:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 801774e:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 8017752:	f7ff bb1c 	b.w	8016d8e <draw_with_stencil+0x6ba>
 8017756:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801775a:	ed9f 5a3d 	vldr	s10, [pc, #244]	@ 8017850 <draw_with_stencil+0x117c>
 801775e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017762:	bf54      	ite	pl
 8017764:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 8017768:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 801776c:	f7ff b9a7 	b.w	8016abe <draw_with_stencil+0x3ea>
 8017770:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8017774:	ed9f 5a36 	vldr	s10, [pc, #216]	@ 8017850 <draw_with_stencil+0x117c>
 8017778:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801777c:	bf54      	ite	pl
 801777e:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 8017782:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 8017786:	f7ff bbbd 	b.w	8016f04 <draw_with_stencil+0x830>
 801778a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801778e:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8017850 <draw_with_stencil+0x117c>
 8017792:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017796:	bf54      	ite	pl
 8017798:	ee26 7a87 	vmulpl.f32	s14, s13, s14
 801779c:	ee26 7ac7 	vnmulmi.f32	s14, s13, s14
 80177a0:	f7ff b949 	b.w	8016a36 <draw_with_stencil+0x362>
 80177a4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80177a8:	ed9f 6a29 	vldr	s12, [pc, #164]	@ 8017850 <draw_with_stencil+0x117c>
 80177ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177b0:	bf54      	ite	pl
 80177b2:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 80177b6:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 80177ba:	f7ff b9f1 	b.w	8016ba0 <draw_with_stencil+0x4cc>
 80177be:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 80177c2:	ed9f 6a23 	vldr	s12, [pc, #140]	@ 8017850 <draw_with_stencil+0x117c>
 80177c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177ca:	bf4c      	ite	mi
 80177cc:	ee28 6ac6 	vnmulmi.f32	s12, s17, s12
 80177d0:	ee28 6a86 	vmulpl.f32	s12, s17, s12
 80177d4:	f7ff ba28 	b.w	8016c28 <draw_with_stencil+0x554>
 80177d8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80177dc:	ed9f 5a1c 	vldr	s10, [pc, #112]	@ 8017850 <draw_with_stencil+0x117c>
 80177e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177e4:	bf4c      	ite	mi
 80177e6:	ee26 6a45 	vnmulmi.f32	s12, s12, s10
 80177ea:	ee26 6a05 	vmulpl.f32	s12, s12, s10
 80177ee:	f7ff b9a1 	b.w	8016b34 <draw_with_stencil+0x460>
 80177f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80177f6:	eddf 6a16 	vldr	s13, [pc, #88]	@ 8017850 <draw_with_stencil+0x117c>
 80177fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177fe:	bf54      	ite	pl
 8017800:	ee67 6aa6 	vmulpl.f32	s13, s15, s13
 8017804:	ee67 6ae6 	vnmulmi.f32	s13, s15, s13
 8017808:	f7ff bbb8 	b.w	8016f7c <draw_with_stencil+0x8a8>
 801780c:	f04f 33ff 	mov.w	r3, #4294967295
 8017810:	2103      	movs	r1, #3
 8017812:	461a      	mov	r2, r3
 8017814:	480f      	ldr	r0, [pc, #60]	@ (8017854 <draw_with_stencil+0x1180>)
 8017816:	f006 fc03 	bl	801e020 <nema_set_blend>
 801781a:	f04f 30ff 	mov.w	r0, #4294967295
 801781e:	f7fa fdb9 	bl	8012394 <nema_set_raster_color>
 8017822:	4b0d      	ldr	r3, [pc, #52]	@ (8017858 <draw_with_stencil+0x1184>)
 8017824:	4620      	mov	r0, r4
 8017826:	681b      	ldr	r3, [r3, #0]
 8017828:	2b00      	cmp	r3, #0
 801782a:	f000 8113 	beq.w	8017a54 <draw_with_stencil+0x1380>
 801782e:	f7fc ff27 	bl	8014680 <stroke_path>
 8017832:	4606      	mov	r6, r0
 8017834:	2800      	cmp	r0, #0
 8017836:	f47f ad59 	bne.w	80172ec <draw_with_stencil+0xc18>
 801783a:	f8d9 3000 	ldr.w	r3, [r9]
 801783e:	2034      	movs	r0, #52	@ 0x34
 8017840:	8a19      	ldrh	r1, [r3, #16]
 8017842:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8017846:	f006 fac9 	bl	801dddc <nema_cl_add_cmd>
 801784a:	e026      	b.n	801789a <draw_with_stencil+0x11c6>
 801784c:	20083030 	.word	0x20083030
 8017850:	3727c5ac 	.word	0x3727c5ac
 8017854:	01000001 	.word	0x01000001
 8017858:	20082fb4 	.word	0x20082fb4
 801785c:	f64b 4116 	movw	r1, #48150	@ 0xbc16
 8017860:	f44f 708e 	mov.w	r0, #284	@ 0x11c
 8017864:	f006 faba 	bl	801dddc <nema_cl_add_cmd>
 8017868:	f64b 4117 	movw	r1, #48151	@ 0xbc17
 801786c:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
 8017870:	f006 fab4 	bl	801dddc <nema_cl_add_cmd>
 8017874:	f04f 1001 	mov.w	r0, #65537	@ 0x10001
 8017878:	f7fa fd2e 	bl	80122d8 <nema_set_rop_blend_mode>
 801787c:	4620      	mov	r0, r4
 801787e:	f7fe f84b 	bl	8015918 <fill_path_even_odd>
 8017882:	4606      	mov	r6, r0
 8017884:	2800      	cmp	r0, #0
 8017886:	f47f ad31 	bne.w	80172ec <draw_with_stencil+0xc18>
 801788a:	f8d9 3000 	ldr.w	r3, [r9]
 801788e:	2034      	movs	r0, #52	@ 0x34
 8017890:	8a19      	ldrh	r1, [r3, #16]
 8017892:	f041 5138 	orr.w	r1, r1, #771751936	@ 0x2e000000
 8017896:	f006 faa1 	bl	801dddc <nema_cl_add_cmd>
 801789a:	683b      	ldr	r3, [r7, #0]
 801789c:	f893 6048 	ldrb.w	r6, [r3, #72]	@ 0x48
 80178a0:	2e01      	cmp	r6, #1
 80178a2:	f000 8258 	beq.w	8017d56 <draw_with_stencil+0x1682>
 80178a6:	9b04      	ldr	r3, [sp, #16]
 80178a8:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 80178ac:	2b00      	cmp	r3, #0
 80178ae:	f040 8218 	bne.w	8017ce2 <draw_with_stencil+0x160e>
 80178b2:	683a      	ldr	r2, [r7, #0]
 80178b4:	7fd3      	ldrb	r3, [r2, #31]
 80178b6:	f003 0307 	and.w	r3, r3, #7
 80178ba:	2b03      	cmp	r3, #3
 80178bc:	f000 8244 	beq.w	8017d48 <draw_with_stencil+0x1674>
 80178c0:	2b04      	cmp	r3, #4
 80178c2:	f000 8322 	beq.w	8017f0a <draw_with_stencil+0x1836>
 80178c6:	9b04      	ldr	r3, [sp, #16]
 80178c8:	6a56      	ldr	r6, [r2, #36]	@ 0x24
 80178ca:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 80178ce:	b2b2      	uxth	r2, r6
 80178d0:	f240 5101 	movw	r1, #1281	@ 0x501
 80178d4:	2b00      	cmp	r3, #0
 80178d6:	f000 80cd 	beq.w	8017a74 <draw_with_stencil+0x13a0>
 80178da:	428a      	cmp	r2, r1
 80178dc:	f000 8483 	beq.w	80181e6 <draw_with_stencil+0x1b12>
 80178e0:	2b02      	cmp	r3, #2
 80178e2:	f006 020f 	and.w	r2, r6, #15
 80178e6:	f3c6 2c03 	ubfx	ip, r6, #8, #4
 80178ea:	f000 8317 	beq.w	8017f1c <draw_with_stencil+0x1848>
 80178ee:	2000      	movs	r0, #0
 80178f0:	2103      	movs	r1, #3
 80178f2:	2702      	movs	r7, #2
 80178f4:	2301      	movs	r3, #1
 80178f6:	901d      	str	r0, [sp, #116]	@ 0x74
 80178f8:	48bb      	ldr	r0, [pc, #748]	@ (8017be8 <draw_with_stencil+0x1514>)
 80178fa:	901c      	str	r0, [sp, #112]	@ 0x70
 80178fc:	0170      	lsls	r0, r6, #5
 80178fe:	d508      	bpl.n	8017912 <draw_with_stencil+0x123e>
 8017900:	2600      	movs	r6, #0
 8017902:	a82c      	add	r0, sp, #176	@ 0xb0
 8017904:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
 8017908:	463b      	mov	r3, r7
 801790a:	460f      	mov	r7, r1
 801790c:	49b7      	ldr	r1, [pc, #732]	@ (8017bec <draw_with_stencil+0x1518>)
 801790e:	e940 6110 	strd	r6, r1, [r0, #-64]	@ 0x40
 8017912:	1f91      	subs	r1, r2, #6
 8017914:	2903      	cmp	r1, #3
 8017916:	f200 821c 	bhi.w	8017d52 <draw_with_stencil+0x167e>
 801791a:	2100      	movs	r1, #0
 801791c:	ae2c      	add	r6, sp, #176	@ 0xb0
 801791e:	48b4      	ldr	r0, [pc, #720]	@ (8017bf0 <draw_with_stencil+0x151c>)
 8017920:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8017924:	4eb3      	ldr	r6, [pc, #716]	@ (8017bf4 <draw_with_stencil+0x1520>)
 8017926:	e943 0110 	strd	r0, r1, [r3, #-64]	@ 0x40
 801792a:	463b      	mov	r3, r7
 801792c:	3701      	adds	r7, #1
 801792e:	48b2      	ldr	r0, [pc, #712]	@ (8017bf8 <draw_with_stencil+0x1524>)
 8017930:	49b2      	ldr	r1, [pc, #712]	@ (8017bfc <draw_with_stencil+0x1528>)
 8017932:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8017936:	4311      	orrs	r1, r2
 8017938:	aa2c      	add	r2, sp, #176	@ 0xb0
 801793a:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 801793e:	e942 6110 	strd	r6, r1, [r2, #-64]	@ 0x40
 8017942:	f1bc 0f00 	cmp.w	ip, #0
 8017946:	d00a      	beq.n	801795e <draw_with_stencil+0x128a>
 8017948:	2600      	movs	r6, #0
 801794a:	f850 002c 	ldr.w	r0, [r0, ip, lsl #2]
 801794e:	4aac      	ldr	r2, [pc, #688]	@ (8017c00 <draw_with_stencil+0x152c>)
 8017950:	a92c      	add	r1, sp, #176	@ 0xb0
 8017952:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 8017956:	4302      	orrs	r2, r0
 8017958:	e941 6210 	strd	r6, r2, [r1, #-64]	@ 0x40
 801795c:	1c9f      	adds	r7, r3, #2
 801795e:	4ba5      	ldr	r3, [pc, #660]	@ (8017bf4 <draw_with_stencil+0x1520>)
 8017960:	49a8      	ldr	r1, [pc, #672]	@ (8017c04 <draw_with_stencil+0x1530>)
 8017962:	aa2c      	add	r2, sp, #176	@ 0xb0
 8017964:	eb02 02c7 	add.w	r2, r2, r7, lsl #3
 8017968:	f842 3c40 	str.w	r3, [r2, #-64]
 801796c:	f842 1c3c 	str.w	r1, [r2, #-60]
 8017970:	a82c      	add	r0, sp, #176	@ 0xb0
 8017972:	49a5      	ldr	r1, [pc, #660]	@ (8017c08 <draw_with_stencil+0x1534>)
 8017974:	4aa5      	ldr	r2, [pc, #660]	@ (8017c0c <draw_with_stencil+0x1538>)
 8017976:	1c7b      	adds	r3, r7, #1
 8017978:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801797c:	2001      	movs	r0, #1
 801797e:	f843 1c40 	str.w	r1, [r3, #-64]
 8017982:	f843 2c3c 	str.w	r2, [r3, #-60]
 8017986:	f7fa fca7 	bl	80122d8 <nema_set_rop_blend_mode>
 801798a:	a81c      	add	r0, sp, #112	@ 0x70
 801798c:	1cb9      	adds	r1, r7, #2
 801798e:	2200      	movs	r2, #0
 8017990:	f7fa fc82 	bl	8012298 <nema_load_frag_shader>
 8017994:	f44f 401c 	mov.w	r0, #39936	@ 0x9c00
 8017998:	f7fa fc98 	bl	80122cc <nema_set_frag_ptr>
 801799c:	9b04      	ldr	r3, [sp, #16]
 801799e:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 80179a2:	2b04      	cmp	r3, #4
 80179a4:	f000 80a5 	beq.w	8017af2 <draw_with_stencil+0x141e>
 80179a8:	2009      	movs	r0, #9
 80179aa:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 80179ae:	f8d4 802c 	ldr.w	r8, [r4, #44]	@ 0x2c
 80179b2:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 80179b6:	edd4 8a0d 	vldr	s17, [r4, #52]	@ 0x34
 80179ba:	ed94 8a0e 	vldr	s16, [r4, #56]	@ 0x38
 80179be:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
 80179c0:	6c26      	ldr	r6, [r4, #64]	@ 0x40
 80179c2:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 80179c4:	f006 f9ae 	bl	801dd24 <nema_cl_get_space>
 80179c8:	b380      	cbz	r0, 8017a2c <draw_with_stencil+0x1358>
 80179ca:	f44f 734c 	mov.w	r3, #816	@ 0x330
 80179ce:	f8c0 9004 	str.w	r9, [r0, #4]
 80179d2:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 80179d6:	f44f 7949 	mov.w	r9, #804	@ 0x324
 80179da:	f8c0 800c 	str.w	r8, [r0, #12]
 80179de:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 80179e2:	f44f 784d 	mov.w	r8, #820	@ 0x334
 80179e6:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 80179ea:	f44f 7154 	mov.w	r1, #848	@ 0x350
 80179ee:	f44f 7255 	mov.w	r2, #852	@ 0x354
 80179f2:	ed80 9a05 	vstr	s18, [r0, #20]
 80179f6:	edc0 8a07 	vstr	s17, [r0, #28]
 80179fa:	ed80 8a09 	vstr	s16, [r0, #36]	@ 0x24
 80179fe:	6103      	str	r3, [r0, #16]
 8017a00:	4b83      	ldr	r3, [pc, #524]	@ (8017c10 <draw_with_stencil+0x153c>)
 8017a02:	f8c0 b000 	str.w	fp, [r0]
 8017a06:	f8c0 9008 	str.w	r9, [r0, #8]
 8017a0a:	691b      	ldr	r3, [r3, #16]
 8017a0c:	62c7      	str	r7, [r0, #44]	@ 0x2c
 8017a0e:	4f81      	ldr	r7, [pc, #516]	@ (8017c14 <draw_with_stencil+0x1540>)
 8017a10:	f043 0305 	orr.w	r3, r3, #5
 8017a14:	6346      	str	r6, [r0, #52]	@ 0x34
 8017a16:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8017a18:	6443      	str	r3, [r0, #68]	@ 0x44
 8017a1a:	f8c0 8018 	str.w	r8, [r0, #24]
 8017a1e:	f8c0 e020 	str.w	lr, [r0, #32]
 8017a22:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8017a26:	6301      	str	r1, [r0, #48]	@ 0x30
 8017a28:	6382      	str	r2, [r0, #56]	@ 0x38
 8017a2a:	6407      	str	r7, [r0, #64]	@ 0x40
 8017a2c:	782e      	ldrb	r6, [r5, #0]
 8017a2e:	2e00      	cmp	r6, #0
 8017a30:	f43f ac3f 	beq.w	80172b2 <draw_with_stencil+0xbde>
 8017a34:	2101      	movs	r1, #1
 8017a36:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8017a3a:	f006 f9cf 	bl	801dddc <nema_cl_add_cmd>
 8017a3e:	2300      	movs	r3, #0
 8017a40:	782a      	ldrb	r2, [r5, #0]
 8017a42:	461e      	mov	r6, r3
 8017a44:	702b      	strb	r3, [r5, #0]
 8017a46:	f88a 2000 	strb.w	r2, [sl]
 8017a4a:	e432      	b.n	80172b2 <draw_with_stencil+0xbde>
 8017a4c:	ee67 7ac6 	vnmul.f32	s15, s15, s12
 8017a50:	f7fe bf75 	b.w	801693e <draw_with_stencil+0x26a>
 8017a54:	f7fb fe50 	bl	80136f8 <stroke_thin_path>
 8017a58:	4606      	mov	r6, r0
 8017a5a:	2800      	cmp	r0, #0
 8017a5c:	f43f aeed 	beq.w	801783a <draw_with_stencil+0x1166>
 8017a60:	e444      	b.n	80172ec <draw_with_stencil+0xc18>
 8017a62:	f8d9 3000 	ldr.w	r3, [r9]
 8017a66:	2034      	movs	r0, #52	@ 0x34
 8017a68:	8a19      	ldrh	r1, [r3, #16]
 8017a6a:	f041 513c 	orr.w	r1, r1, #788529152	@ 0x2f000000
 8017a6e:	f006 f9b5 	bl	801dddc <nema_cl_add_cmd>
 8017a72:	e712      	b.n	801789a <draw_with_stencil+0x11c6>
 8017a74:	428a      	cmp	r2, r1
 8017a76:	f000 8232 	beq.w	8017ede <draw_with_stencil+0x180a>
 8017a7a:	495f      	ldr	r1, [pc, #380]	@ (8017bf8 <draw_with_stencil+0x1524>)
 8017a7c:	f006 020f 	and.w	r2, r6, #15
 8017a80:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8017a84:	4a5d      	ldr	r2, [pc, #372]	@ (8017bfc <draw_with_stencil+0x1528>)
 8017a86:	4f64      	ldr	r7, [pc, #400]	@ (8017c18 <draw_with_stencil+0x1544>)
 8017a88:	4302      	orrs	r2, r0
 8017a8a:	4864      	ldr	r0, [pc, #400]	@ (8017c1c <draw_with_stencil+0x1548>)
 8017a8c:	f3c6 2603 	ubfx	r6, r6, #8, #4
 8017a90:	e9cd 321e 	strd	r3, r2, [sp, #120]	@ 0x78
 8017a94:	e9cd 701c 	strd	r7, r0, [sp, #112]	@ 0x70
 8017a98:	2e00      	cmp	r6, #0
 8017a9a:	f000 823b 	beq.w	8017f14 <draw_with_stencil+0x1840>
 8017a9e:	f851 1026 	ldr.w	r1, [r1, r6, lsl #2]
 8017aa2:	4a57      	ldr	r2, [pc, #348]	@ (8017c00 <draw_with_stencil+0x152c>)
 8017aa4:	9320      	str	r3, [sp, #128]	@ 0x80
 8017aa6:	430a      	orrs	r2, r1
 8017aa8:	9221      	str	r2, [sp, #132]	@ 0x84
 8017aaa:	2605      	movs	r6, #5
 8017aac:	2304      	movs	r3, #4
 8017aae:	2203      	movs	r2, #3
 8017ab0:	af2c      	add	r7, sp, #176	@ 0xb0
 8017ab2:	4950      	ldr	r1, [pc, #320]	@ (8017bf4 <draw_with_stencil+0x1520>)
 8017ab4:	4853      	ldr	r0, [pc, #332]	@ (8017c04 <draw_with_stencil+0x1530>)
 8017ab6:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 8017aba:	f842 1c40 	str.w	r1, [r2, #-64]
 8017abe:	f842 0c3c 	str.w	r0, [r2, #-60]
 8017ac2:	4951      	ldr	r1, [pc, #324]	@ (8017c08 <draw_with_stencil+0x1534>)
 8017ac4:	4a51      	ldr	r2, [pc, #324]	@ (8017c0c <draw_with_stencil+0x1538>)
 8017ac6:	eb07 03c3 	add.w	r3, r7, r3, lsl #3
 8017aca:	2001      	movs	r0, #1
 8017acc:	e943 1210 	strd	r1, r2, [r3, #-64]	@ 0x40
 8017ad0:	f7fa fc02 	bl	80122d8 <nema_set_rop_blend_mode>
 8017ad4:	4631      	mov	r1, r6
 8017ad6:	2200      	movs	r2, #0
 8017ad8:	a81c      	add	r0, sp, #112	@ 0x70
 8017ada:	f7fa fbdd 	bl	8012298 <nema_load_frag_shader>
 8017ade:	f44f 401c 	mov.w	r0, #39936	@ 0x9c00
 8017ae2:	f7fa fbf3 	bl	80122cc <nema_set_frag_ptr>
 8017ae6:	4b4e      	ldr	r3, [pc, #312]	@ (8017c20 <draw_with_stencil+0x154c>)
 8017ae8:	2002      	movs	r0, #2
 8017aea:	6819      	ldr	r1, [r3, #0]
 8017aec:	f7f9 f8f4 	bl	8010cd8 <nema_set_const_reg>
 8017af0:	e754      	b.n	801799c <draw_with_stencil+0x12c8>
 8017af2:	f7f9 f931 	bl	8010d58 <nema_supports_clip2>
 8017af6:	9b04      	ldr	r3, [sp, #16]
 8017af8:	9a04      	ldr	r2, [sp, #16]
 8017afa:	edd3 9a32 	vldr	s19, [r3, #200]	@ 0xc8
 8017afe:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 8017b02:	f8d9 3000 	ldr.w	r3, [r9]
 8017b06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b0a:	edd3 7a04 	vldr	s15, [r3, #16]
 8017b0e:	bf48      	it	mi
 8017b10:	eddf 9a44 	vldrmi	s19, [pc, #272]	@ 8017c24 <draw_with_stencil+0x1550>
 8017b14:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8017b18:	ed92 9a33 	vldr	s18, [r2, #204]	@ 0xcc
 8017b1c:	eeb4 7a69 	vcmp.f32	s14, s19
 8017b20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b24:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017b28:	bf48      	it	mi
 8017b2a:	eef0 9a47 	vmovmi.f32	s19, s14
 8017b2e:	edd3 7a05 	vldr	s15, [r3, #20]
 8017b32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017b3a:	bf48      	it	mi
 8017b3c:	ed9f 9a39 	vldrmi	s18, [pc, #228]	@ 8017c24 <draw_with_stencil+0x1550>
 8017b40:	eeb6 8a00 	vmov.f32	s16, #96	@ 0x3f000000  0.5
 8017b44:	eef4 7a49 	vcmp.f32	s15, s18
 8017b48:	ee37 7a69 	vsub.f32	s14, s14, s19
 8017b4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b50:	ee77 8a08 	vadd.f32	s17, s14, s16
 8017b54:	bf48      	it	mi
 8017b56:	eeb0 9a67 	vmovmi.f32	s18, s15
 8017b5a:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017b5e:	ee77 7ac9 	vsub.f32	s15, s15, s18
 8017b62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b66:	4606      	mov	r6, r0
 8017b68:	ee37 8a88 	vadd.f32	s16, s15, s16
 8017b6c:	dd05      	ble.n	8017b7a <draw_with_stencil+0x14a6>
 8017b6e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017b72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b76:	f300 82c8 	bgt.w	801810a <draw_with_stencil+0x1a36>
 8017b7a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017b7e:	ee79 8aa7 	vadd.f32	s17, s19, s15
 8017b82:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8017b86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b8a:	f340 81d7 	ble.w	8017f3c <draw_with_stencil+0x1868>
 8017b8e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017b92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b96:	f300 8255 	bgt.w	8018044 <draw_with_stencil+0x1970>
 8017b9a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017b9e:	ee39 9a27 	vadd.f32	s18, s18, s15
 8017ba2:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017ba6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017baa:	f300 81d9 	bgt.w	8017f60 <draw_with_stencil+0x188c>
 8017bae:	f8d9 3000 	ldr.w	r3, [r9]
 8017bb2:	ed93 8a04 	vldr	s16, [r3, #16]
 8017bb6:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 8017bba:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8017bbe:	ee38 8a69 	vsub.f32	s16, s16, s19
 8017bc2:	ee38 8a27 	vadd.f32	s16, s16, s15
 8017bc6:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8017bca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017bce:	dd04      	ble.n	8017bda <draw_with_stencil+0x1506>
 8017bd0:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8017bd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017bd8:	dc26      	bgt.n	8017c28 <draw_with_stencil+0x1554>
 8017bda:	2e00      	cmp	r6, #0
 8017bdc:	f040 815f 	bne.w	8017e9e <draw_with_stencil+0x17ca>
 8017be0:	f7f9 f8dc 	bl	8010d9c <nema_set_clip_pop>
 8017be4:	e722      	b.n	8017a2c <draw_with_stencil+0x1358>
 8017be6:	bf00      	nop
 8017be8:	0a18108b 	.word	0x0a18108b
 8017bec:	01016204 	.word	0x01016204
 8017bf0:	18001001 	.word	0x18001001
 8017bf4:	18001000 	.word	0x18001000
 8017bf8:	08035d48 	.word	0x08035d48
 8017bfc:	0a882206 	.word	0x0a882206
 8017c00:	0a581606 	.word	0x0a581606
 8017c04:	0a912406 	.word	0x0a912406
 8017c08:	10000002 	.word	0x10000002
 8017c0c:	8a5b1686 	.word	0x8a5b1686
 8017c10:	20000064 	.word	0x20000064
 8017c14:	ff000100 	.word	0xff000100
 8017c18:	1a181001 	.word	0x1a181001
 8017c1c:	050481a9 	.word	0x050481a9
 8017c20:	2008302c 	.word	0x2008302c
 8017c24:	00000000 	.word	0x00000000
 8017c28:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 8017c2c:	edcd 7a05 	vstr	s15, [sp, #20]
 8017c30:	9804      	ldr	r0, [sp, #16]
 8017c32:	30a4      	adds	r0, #164	@ 0xa4
 8017c34:	f7fa fa42 	bl	80120bc <nema_set_matrix>
 8017c38:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 8017c3c:	eefd 9ae9 	vcvt.s32.f32	s19, s19
 8017c40:	9b05      	ldr	r3, [sp, #20]
 8017c42:	ee18 2a10 	vmov	r2, s16
 8017c46:	2e00      	cmp	r6, #0
 8017c48:	f040 8110 	bne.w	8017e6c <draw_with_stencil+0x1798>
 8017c4c:	ee19 0a90 	vmov	r0, s19
 8017c50:	4631      	mov	r1, r6
 8017c52:	f7f9 f88b 	bl	8010d6c <nema_set_clip_temp>
 8017c56:	2009      	movs	r0, #9
 8017c58:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 8017c5c:	edd4 9a0b 	vldr	s19, [r4, #44]	@ 0x2c
 8017c60:	f8d4 8030 	ldr.w	r8, [r4, #48]	@ 0x30
 8017c64:	ed94 9a0d 	vldr	s18, [r4, #52]	@ 0x34
 8017c68:	edd4 8a0e 	vldr	s17, [r4, #56]	@ 0x38
 8017c6c:	ed94 8a0f 	vldr	s16, [r4, #60]	@ 0x3c
 8017c70:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 8017c72:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 8017c74:	f006 f856 	bl	801dd24 <nema_cl_get_space>
 8017c78:	2800      	cmp	r0, #0
 8017c7a:	d0b1      	beq.n	8017be0 <draw_with_stencil+0x150c>
 8017c7c:	f8c0 9004 	str.w	r9, [r0, #4]
 8017c80:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8017c84:	f44f 7b48 	mov.w	fp, #800	@ 0x320
 8017c88:	f44f 7949 	mov.w	r9, #804	@ 0x324
 8017c8c:	edc0 9a03 	vstr	s19, [r0, #12]
 8017c90:	f8c0 8014 	str.w	r8, [r0, #20]
 8017c94:	f44f 7e50 	mov.w	lr, #832	@ 0x340
 8017c98:	f44f 784d 	mov.w	r8, #820	@ 0x334
 8017c9c:	f44f 7c51 	mov.w	ip, #836	@ 0x344
 8017ca0:	f44f 7154 	mov.w	r1, #848	@ 0x350
 8017ca4:	f44f 7255 	mov.w	r2, #852	@ 0x354
 8017ca8:	63c4      	str	r4, [r0, #60]	@ 0x3c
 8017caa:	4ca6      	ldr	r4, [pc, #664]	@ (8017f44 <draw_with_stencil+0x1870>)
 8017cac:	f8c0 b000 	str.w	fp, [r0]
 8017cb0:	f8c0 9008 	str.w	r9, [r0, #8]
 8017cb4:	6103      	str	r3, [r0, #16]
 8017cb6:	6923      	ldr	r3, [r4, #16]
 8017cb8:	4ca3      	ldr	r4, [pc, #652]	@ (8017f48 <draw_with_stencil+0x1874>)
 8017cba:	f043 0305 	orr.w	r3, r3, #5
 8017cbe:	ed80 9a07 	vstr	s18, [r0, #28]
 8017cc2:	edc0 8a09 	vstr	s17, [r0, #36]	@ 0x24
 8017cc6:	ed80 8a0b 	vstr	s16, [r0, #44]	@ 0x2c
 8017cca:	6347      	str	r7, [r0, #52]	@ 0x34
 8017ccc:	6443      	str	r3, [r0, #68]	@ 0x44
 8017cce:	f8c0 8018 	str.w	r8, [r0, #24]
 8017cd2:	f8c0 e020 	str.w	lr, [r0, #32]
 8017cd6:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 8017cda:	6301      	str	r1, [r0, #48]	@ 0x30
 8017cdc:	6382      	str	r2, [r0, #56]	@ 0x38
 8017cde:	6404      	str	r4, [r0, #64]	@ 0x40
 8017ce0:	e77b      	b.n	8017bda <draw_with_stencil+0x1506>
 8017ce2:	9e04      	ldr	r6, [sp, #16]
 8017ce4:	4630      	mov	r0, r6
 8017ce6:	f005 fb1d 	bl	801d324 <bind_tex1_according_paint>
 8017cea:	f896 30dd 	ldrb.w	r3, [r6, #221]	@ 0xdd
 8017cee:	2b02      	cmp	r3, #2
 8017cf0:	d017      	beq.n	8017d22 <draw_with_stencil+0x164e>
 8017cf2:	2b03      	cmp	r3, #3
 8017cf4:	d002      	beq.n	8017cfc <draw_with_stencil+0x1628>
 8017cf6:	2b01      	cmp	r3, #1
 8017cf8:	f47f addb 	bne.w	80178b2 <draw_with_stencil+0x11de>
 8017cfc:	9904      	ldr	r1, [sp, #16]
 8017cfe:	683a      	ldr	r2, [r7, #0]
 8017d00:	f891 30dc 	ldrb.w	r3, [r1, #220]	@ 0xdc
 8017d04:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8017d06:	07d8      	lsls	r0, r3, #31
 8017d08:	f140 80d1 	bpl.w	8017eae <draw_with_stencil+0x17da>
 8017d0c:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8017d10:	4313      	orrs	r3, r2
 8017d12:	07db      	lsls	r3, r3, #31
 8017d14:	f100 82bb 	bmi.w	801828e <draw_with_stencil+0x1bba>
 8017d18:	f101 0038 	add.w	r0, r1, #56	@ 0x38
 8017d1c:	f7fa f9ce 	bl	80120bc <nema_set_matrix>
 8017d20:	e5c7      	b.n	80178b2 <draw_with_stencil+0x11de>
 8017d22:	9904      	ldr	r1, [sp, #16]
 8017d24:	683a      	ldr	r2, [r7, #0]
 8017d26:	f891 30dc 	ldrb.w	r3, [r1, #220]	@ 0xdc
 8017d2a:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8017d2c:	07d8      	lsls	r0, r3, #31
 8017d2e:	f140 80c6 	bpl.w	8017ebe <draw_with_stencil+0x17ea>
 8017d32:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8017d36:	4313      	orrs	r3, r2
 8017d38:	07db      	lsls	r3, r3, #31
 8017d3a:	f100 82bf 	bmi.w	80182bc <draw_with_stencil+0x1be8>
 8017d3e:	f101 0008 	add.w	r0, r1, #8
 8017d42:	f7fa f9bb 	bl	80120bc <nema_set_matrix>
 8017d46:	e5b4      	b.n	80178b2 <draw_with_stencil+0x11de>
 8017d48:	2001      	movs	r0, #1
 8017d4a:	f7fa f94f 	bl	8011fec <nema_enable_tiling>
 8017d4e:	683a      	ldr	r2, [r7, #0]
 8017d50:	e5b9      	b.n	80178c6 <draw_with_stencil+0x11f2>
 8017d52:	4e7e      	ldr	r6, [pc, #504]	@ (8017f4c <draw_with_stencil+0x1878>)
 8017d54:	e5eb      	b.n	801792e <draw_with_stencil+0x125a>
 8017d56:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017d58:	2b00      	cmp	r3, #0
 8017d5a:	f000 82c0 	beq.w	80182de <draw_with_stencil+0x1c0a>
 8017d5e:	f04f 0808 	mov.w	r8, #8
 8017d62:	2000      	movs	r0, #0
 8017d64:	f7f8 ffb4 	bl	8010cd0 <nema_set_tex_color>
 8017d68:	683b      	ldr	r3, [r7, #0]
 8017d6a:	2002      	movs	r0, #2
 8017d6c:	f8d3 c03c 	ldr.w	ip, [r3, #60]	@ 0x3c
 8017d70:	f8bc 3012 	ldrh.w	r3, [ip, #18]
 8017d74:	f8bc e010 	ldrh.w	lr, [ip, #16]
 8017d78:	f8dc 100c 	ldr.w	r1, [ip, #12]
 8017d7c:	f8cd 8008 	str.w	r8, [sp, #8]
 8017d80:	f8dc 2014 	ldr.w	r2, [ip, #20]
 8017d84:	9201      	str	r2, [sp, #4]
 8017d86:	f89c c01c 	ldrb.w	ip, [ip, #28]
 8017d8a:	4672      	mov	r2, lr
 8017d8c:	f8cd c000 	str.w	ip, [sp]
 8017d90:	f7f8 fee8 	bl	8010b64 <nema_bind_tex>
 8017d94:	683b      	ldr	r3, [r7, #0]
 8017d96:	7f1b      	ldrb	r3, [r3, #28]
 8017d98:	3b01      	subs	r3, #1
 8017d9a:	2b01      	cmp	r3, #1
 8017d9c:	f240 82ab 	bls.w	80182f6 <draw_with_stencil+0x1c22>
 8017da0:	f04f 33ff 	mov.w	r3, #4294967295
 8017da4:	2202      	movs	r2, #2
 8017da6:	2103      	movs	r1, #3
 8017da8:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8017dac:	f006 f938 	bl	801e020 <nema_set_blend>
 8017db0:	f04f 0800 	mov.w	r8, #0
 8017db4:	683b      	ldr	r3, [r7, #0]
 8017db6:	edd3 0a11 	vldr	s1, [r3, #68]	@ 0x44
 8017dba:	ed93 0a10 	vldr	s0, [r3, #64]	@ 0x40
 8017dbe:	f7fa fa37 	bl	8012230 <nema_set_matrix_translate>
 8017dc2:	2009      	movs	r0, #9
 8017dc4:	ed94 aa0a 	vldr	s20, [r4, #40]	@ 0x28
 8017dc8:	edd4 aa0b 	vldr	s21, [r4, #44]	@ 0x2c
 8017dcc:	f8d4 b030 	ldr.w	fp, [r4, #48]	@ 0x30
 8017dd0:	6b66      	ldr	r6, [r4, #52]	@ 0x34
 8017dd2:	edd4 9a0e 	vldr	s19, [r4, #56]	@ 0x38
 8017dd6:	ed94 9a0f 	vldr	s18, [r4, #60]	@ 0x3c
 8017dda:	edd4 8a10 	vldr	s17, [r4, #64]	@ 0x40
 8017dde:	ed94 8a11 	vldr	s16, [r4, #68]	@ 0x44
 8017de2:	f005 ff9f 	bl	801dd24 <nema_cl_get_space>
 8017de6:	b3a0      	cbz	r0, 8017e52 <draw_with_stencil+0x177e>
 8017de8:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8017dec:	6003      	str	r3, [r0, #0]
 8017dee:	f44f 734c 	mov.w	r3, #816	@ 0x330
 8017df2:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8017df6:	ed80 aa01 	vstr	s20, [r0, #4]
 8017dfa:	edc0 aa03 	vstr	s21, [r0, #12]
 8017dfe:	6103      	str	r3, [r0, #16]
 8017e00:	f8c0 b014 	str.w	fp, [r0, #20]
 8017e04:	61c6      	str	r6, [r0, #28]
 8017e06:	f44f 7b4d 	mov.w	fp, #820	@ 0x334
 8017e0a:	f44f 7650 	mov.w	r6, #832	@ 0x340
 8017e0e:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8017e12:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8017e16:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8017e1a:	edc0 9a09 	vstr	s19, [r0, #36]	@ 0x24
 8017e1e:	ed80 9a0b 	vstr	s18, [r0, #44]	@ 0x2c
 8017e22:	edc0 8a0d 	vstr	s17, [r0, #52]	@ 0x34
 8017e26:	ed80 8a0f 	vstr	s16, [r0, #60]	@ 0x3c
 8017e2a:	f8df c118 	ldr.w	ip, [pc, #280]	@ 8017f44 <draw_with_stencil+0x1870>
 8017e2e:	f8c0 e008 	str.w	lr, [r0, #8]
 8017e32:	f8dc c010 	ldr.w	ip, [ip, #16]
 8017e36:	f8df e110 	ldr.w	lr, [pc, #272]	@ 8017f48 <draw_with_stencil+0x1874>
 8017e3a:	f04c 0c05 	orr.w	ip, ip, #5
 8017e3e:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 8017e42:	f8c0 b018 	str.w	fp, [r0, #24]
 8017e46:	6206      	str	r6, [r0, #32]
 8017e48:	6281      	str	r1, [r0, #40]	@ 0x28
 8017e4a:	6302      	str	r2, [r0, #48]	@ 0x30
 8017e4c:	6383      	str	r3, [r0, #56]	@ 0x38
 8017e4e:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 8017e52:	f1b8 0f00 	cmp.w	r8, #0
 8017e56:	f43f ad26 	beq.w	80178a6 <draw_with_stencil+0x11d2>
 8017e5a:	f8d9 3000 	ldr.w	r3, [r9]
 8017e5e:	2034      	movs	r0, #52	@ 0x34
 8017e60:	8a19      	ldrh	r1, [r3, #16]
 8017e62:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8017e66:	f005 ffb9 	bl	801dddc <nema_cl_add_cmd>
 8017e6a:	e51c      	b.n	80178a6 <draw_with_stencil+0x11d2>
 8017e6c:	ee19 0a90 	vmov	r0, s19
 8017e70:	2100      	movs	r1, #0
 8017e72:	f7f8 ff59 	bl	8010d28 <nema_set_clip2>
 8017e76:	2009      	movs	r0, #9
 8017e78:	f8d4 9028 	ldr.w	r9, [r4, #40]	@ 0x28
 8017e7c:	edd4 9a0b 	vldr	s19, [r4, #44]	@ 0x2c
 8017e80:	f8d4 8030 	ldr.w	r8, [r4, #48]	@ 0x30
 8017e84:	ed94 9a0d 	vldr	s18, [r4, #52]	@ 0x34
 8017e88:	edd4 8a0e 	vldr	s17, [r4, #56]	@ 0x38
 8017e8c:	ed94 8a0f 	vldr	s16, [r4, #60]	@ 0x3c
 8017e90:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 8017e92:	6c64      	ldr	r4, [r4, #68]	@ 0x44
 8017e94:	f005 ff46 	bl	801dd24 <nema_cl_get_space>
 8017e98:	2800      	cmp	r0, #0
 8017e9a:	f47f aeef 	bne.w	8017c7c <draw_with_stencil+0x15a8>
 8017e9e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8017ea2:	2100      	movs	r1, #0
 8017ea4:	461a      	mov	r2, r3
 8017ea6:	4608      	mov	r0, r1
 8017ea8:	f7f8 ff3e 	bl	8010d28 <nema_set_clip2>
 8017eac:	e5be      	b.n	8017a2c <draw_with_stencil+0x1358>
 8017eae:	07d6      	lsls	r6, r2, #31
 8017eb0:	f101 0138 	add.w	r1, r1, #56	@ 0x38
 8017eb4:	d407      	bmi.n	8017ec6 <draw_with_stencil+0x17f2>
 8017eb6:	4608      	mov	r0, r1
 8017eb8:	f7fa f900 	bl	80120bc <nema_set_matrix>
 8017ebc:	e4f9      	b.n	80178b2 <draw_with_stencil+0x11de>
 8017ebe:	07d6      	lsls	r6, r2, #31
 8017ec0:	f101 0108 	add.w	r1, r1, #8
 8017ec4:	d5f7      	bpl.n	8017eb6 <draw_with_stencil+0x17e2>
 8017ec6:	a81c      	add	r0, sp, #112	@ 0x70
 8017ec8:	f7f9 fd30 	bl	801192c <nema_mat3x3_copy>
 8017ecc:	6839      	ldr	r1, [r7, #0]
 8017ece:	a81c      	add	r0, sp, #112	@ 0x70
 8017ed0:	3170      	adds	r1, #112	@ 0x70
 8017ed2:	f7f9 fd77 	bl	80119c4 <nema_mat3x3_mul>
 8017ed6:	a81c      	add	r0, sp, #112	@ 0x70
 8017ed8:	f7fa f8f0 	bl	80120bc <nema_set_matrix>
 8017edc:	e4e9      	b.n	80178b2 <draw_with_stencil+0x11de>
 8017ede:	2003      	movs	r0, #3
 8017ee0:	f005 ff20 	bl	801dd24 <nema_cl_get_space>
 8017ee4:	2800      	cmp	r0, #0
 8017ee6:	f000 825e 	beq.w	80183a6 <draw_with_stencil+0x1cd2>
 8017eea:	f44f 77e8 	mov.w	r7, #464	@ 0x1d0
 8017eee:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 8017ef2:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8017ef6:	4b16      	ldr	r3, [pc, #88]	@ (8017f50 <draw_with_stencil+0x187c>)
 8017ef8:	6046      	str	r6, [r0, #4]
 8017efa:	681b      	ldr	r3, [r3, #0]
 8017efc:	6007      	str	r7, [r0, #0]
 8017efe:	6143      	str	r3, [r0, #20]
 8017f00:	4b14      	ldr	r3, [pc, #80]	@ (8017f54 <draw_with_stencil+0x1880>)
 8017f02:	6081      	str	r1, [r0, #8]
 8017f04:	e9c0 3203 	strd	r3, r2, [r0, #12]
 8017f08:	e548      	b.n	801799c <draw_with_stencil+0x12c8>
 8017f0a:	2001      	movs	r0, #1
 8017f0c:	f7fa f882 	bl	8012014 <nema_enable_tiling_2x2>
 8017f10:	683a      	ldr	r2, [r7, #0]
 8017f12:	e4d8      	b.n	80178c6 <draw_with_stencil+0x11f2>
 8017f14:	2604      	movs	r6, #4
 8017f16:	2303      	movs	r3, #3
 8017f18:	2202      	movs	r2, #2
 8017f1a:	e5c9      	b.n	8017ab0 <draw_with_stencil+0x13dc>
 8017f1c:	9904      	ldr	r1, [sp, #16]
 8017f1e:	f891 102c 	ldrb.w	r1, [r1, #44]	@ 0x2c
 8017f22:	2901      	cmp	r1, #1
 8017f24:	f47f ace3 	bne.w	80178ee <draw_with_stencil+0x121a>
 8017f28:	2100      	movs	r1, #0
 8017f2a:	4f0b      	ldr	r7, [pc, #44]	@ (8017f58 <draw_with_stencil+0x1884>)
 8017f2c:	480b      	ldr	r0, [pc, #44]	@ (8017f5c <draw_with_stencil+0x1888>)
 8017f2e:	911d      	str	r1, [sp, #116]	@ 0x74
 8017f30:	911f      	str	r1, [sp, #124]	@ 0x7c
 8017f32:	971c      	str	r7, [sp, #112]	@ 0x70
 8017f34:	901e      	str	r0, [sp, #120]	@ 0x78
 8017f36:	2104      	movs	r1, #4
 8017f38:	2703      	movs	r7, #3
 8017f3a:	e4df      	b.n	80178fc <draw_with_stencil+0x1228>
 8017f3c:	ee39 9a27 	vadd.f32	s18, s18, s15
 8017f40:	e637      	b.n	8017bb2 <draw_with_stencil+0x14de>
 8017f42:	bf00      	nop
 8017f44:	20000064 	.word	0x20000064
 8017f48:	ff000100 	.word	0xff000100
 8017f4c:	18001001 	.word	0x18001001
 8017f50:	2008302c 	.word	0x2008302c
 8017f54:	941fdc13 	.word	0x941fdc13
 8017f58:	0a18108b 	.word	0x0a18108b
 8017f5c:	0800110b 	.word	0x0800110b
 8017f60:	9b04      	ldr	r3, [sp, #16]
 8017f62:	f103 0080 	add.w	r0, r3, #128	@ 0x80
 8017f66:	f7fa f8a9 	bl	80120bc <nema_set_matrix>
 8017f6a:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 8017f6e:	eefc 8ae8 	vcvt.u32.f32	s17, s17
 8017f72:	edcd 7a05 	vstr	s15, [sp, #20]
 8017f76:	2e00      	cmp	r6, #0
 8017f78:	f040 81d2 	bne.w	8018320 <draw_with_stencil+0x1c4c>
 8017f7c:	ee17 3a90 	vmov	r3, s15
 8017f80:	ee18 2a90 	vmov	r2, s17
 8017f84:	4631      	mov	r1, r6
 8017f86:	4630      	mov	r0, r6
 8017f88:	f7f8 fef0 	bl	8010d6c <nema_set_clip_temp>
 8017f8c:	2009      	movs	r0, #9
 8017f8e:	ed94 ba0a 	vldr	s22, [r4, #40]	@ 0x28
 8017f92:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8017f94:	edd4 aa0c 	vldr	s21, [r4, #48]	@ 0x30
 8017f98:	ed94 aa0d 	vldr	s20, [r4, #52]	@ 0x34
 8017f9c:	ed94 9a0e 	vldr	s18, [r4, #56]	@ 0x38
 8017fa0:	edd4 8a0f 	vldr	s17, [r4, #60]	@ 0x3c
 8017fa4:	ed94 8a10 	vldr	s16, [r4, #64]	@ 0x40
 8017fa8:	f8d4 b044 	ldr.w	fp, [r4, #68]	@ 0x44
 8017fac:	f005 feba 	bl	801dd24 <nema_cl_get_space>
 8017fb0:	b3a8      	cbz	r0, 801801e <draw_with_stencil+0x194a>
 8017fb2:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8017fb6:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 8017fba:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 8017fbe:	f44f 7848 	mov.w	r8, #800	@ 0x320
 8017fc2:	ed80 ba01 	vstr	s22, [r0, #4]
 8017fc6:	60c7      	str	r7, [r0, #12]
 8017fc8:	f44f 7254 	mov.w	r2, #848	@ 0x350
 8017fcc:	f44f 774d 	mov.w	r7, #820	@ 0x334
 8017fd0:	f44f 7355 	mov.w	r3, #852	@ 0x354
 8017fd4:	6201      	str	r1, [r0, #32]
 8017fd6:	f44f 7151 	mov.w	r1, #836	@ 0x344
 8017fda:	edc0 aa05 	vstr	s21, [r0, #20]
 8017fde:	ed80 aa07 	vstr	s20, [r0, #28]
 8017fe2:	ed80 9a09 	vstr	s18, [r0, #36]	@ 0x24
 8017fe6:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 8017fea:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 8017fee:	f8c0 c010 	str.w	ip, [r0, #16]
 8017ff2:	f8df c40c 	ldr.w	ip, [pc, #1036]	@ 8018400 <draw_with_stencil+0x1d2c>
 8017ff6:	f8c0 e008 	str.w	lr, [r0, #8]
 8017ffa:	f8c0 8000 	str.w	r8, [r0]
 8017ffe:	f8dc c010 	ldr.w	ip, [ip, #16]
 8018002:	f8df e400 	ldr.w	lr, [pc, #1024]	@ 8018404 <draw_with_stencil+0x1d30>
 8018006:	f04c 0c05 	orr.w	ip, ip, #5
 801800a:	f8c0 b03c 	str.w	fp, [r0, #60]	@ 0x3c
 801800e:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 8018012:	6187      	str	r7, [r0, #24]
 8018014:	6281      	str	r1, [r0, #40]	@ 0x28
 8018016:	6302      	str	r2, [r0, #48]	@ 0x30
 8018018:	6383      	str	r3, [r0, #56]	@ 0x38
 801801a:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 801801e:	f8d9 3000 	ldr.w	r3, [r9]
 8018022:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8018026:	ed93 8a04 	vldr	s16, [r3, #16]
 801802a:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 801802e:	ee38 8a69 	vsub.f32	s16, s16, s19
 8018032:	ee38 8a27 	vadd.f32	s16, s16, s15
 8018036:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801803a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801803e:	f73f adf7 	bgt.w	8017c30 <draw_with_stencil+0x155c>
 8018042:	e5ca      	b.n	8017bda <draw_with_stencil+0x1506>
 8018044:	9b04      	ldr	r3, [sp, #16]
 8018046:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
 801804a:	f7fa f837 	bl	80120bc <nema_set_matrix>
 801804e:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 8018052:	eefd 7ac9 	vcvt.s32.f32	s15, s18
 8018056:	eebc 7ae8 	vcvt.u32.f32	s14, s17
 801805a:	ee18 3a10 	vmov	r3, s16
 801805e:	ee17 2a10 	vmov	r2, s14
 8018062:	ee17 1a90 	vmov	r1, s15
 8018066:	2e00      	cmp	r6, #0
 8018068:	f040 8163 	bne.w	8018332 <draw_with_stencil+0x1c5e>
 801806c:	4630      	mov	r0, r6
 801806e:	f7f8 fe7d 	bl	8010d6c <nema_set_clip_temp>
 8018072:	2009      	movs	r0, #9
 8018074:	ed94 ca0a 	vldr	s24, [r4, #40]	@ 0x28
 8018078:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 801807a:	edd4 ba0c 	vldr	s23, [r4, #48]	@ 0x30
 801807e:	ed94 ba0d 	vldr	s22, [r4, #52]	@ 0x34
 8018082:	edd4 aa0e 	vldr	s21, [r4, #56]	@ 0x38
 8018086:	ed94 aa0f 	vldr	s20, [r4, #60]	@ 0x3c
 801808a:	ed94 8a10 	vldr	s16, [r4, #64]	@ 0x40
 801808e:	f8d4 b044 	ldr.w	fp, [r4, #68]	@ 0x44
 8018092:	f005 fe47 	bl	801dd24 <nema_cl_get_space>
 8018096:	2800      	cmp	r0, #0
 8018098:	f43f ad7f 	beq.w	8017b9a <draw_with_stencil+0x14c6>
 801809c:	f44f 7150 	mov.w	r1, #832	@ 0x340
 80180a0:	f44f 7c4c 	mov.w	ip, #816	@ 0x330
 80180a4:	f44f 7e49 	mov.w	lr, #804	@ 0x324
 80180a8:	f44f 7848 	mov.w	r8, #800	@ 0x320
 80180ac:	ed80 ca01 	vstr	s24, [r0, #4]
 80180b0:	60c7      	str	r7, [r0, #12]
 80180b2:	f44f 7254 	mov.w	r2, #848	@ 0x350
 80180b6:	f44f 774d 	mov.w	r7, #820	@ 0x334
 80180ba:	f44f 7355 	mov.w	r3, #852	@ 0x354
 80180be:	6201      	str	r1, [r0, #32]
 80180c0:	f44f 7151 	mov.w	r1, #836	@ 0x344
 80180c4:	f8c0 c010 	str.w	ip, [r0, #16]
 80180c8:	f8df c334 	ldr.w	ip, [pc, #820]	@ 8018400 <draw_with_stencil+0x1d2c>
 80180cc:	f8c0 e008 	str.w	lr, [r0, #8]
 80180d0:	f8c0 8000 	str.w	r8, [r0]
 80180d4:	f8dc c010 	ldr.w	ip, [ip, #16]
 80180d8:	f8df e328 	ldr.w	lr, [pc, #808]	@ 8018404 <draw_with_stencil+0x1d30>
 80180dc:	f04c 0c05 	orr.w	ip, ip, #5
 80180e0:	edc0 ba05 	vstr	s23, [r0, #20]
 80180e4:	ed80 ba07 	vstr	s22, [r0, #28]
 80180e8:	edc0 aa09 	vstr	s21, [r0, #36]	@ 0x24
 80180ec:	ed80 aa0b 	vstr	s20, [r0, #44]	@ 0x2c
 80180f0:	ed80 8a0d 	vstr	s16, [r0, #52]	@ 0x34
 80180f4:	f8c0 b03c 	str.w	fp, [r0, #60]	@ 0x3c
 80180f8:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 80180fc:	6187      	str	r7, [r0, #24]
 80180fe:	6281      	str	r1, [r0, #40]	@ 0x28
 8018100:	6302      	str	r2, [r0, #48]	@ 0x30
 8018102:	6383      	str	r3, [r0, #56]	@ 0x38
 8018104:	f8c0 e040 	str.w	lr, [r0, #64]	@ 0x40
 8018108:	e547      	b.n	8017b9a <draw_with_stencil+0x14c6>
 801810a:	9b04      	ldr	r3, [sp, #16]
 801810c:	f103 0038 	add.w	r0, r3, #56	@ 0x38
 8018110:	f7f9 ffd4 	bl	80120bc <nema_set_matrix>
 8018114:	eefc 8ae8 	vcvt.u32.f32	s17, s17
 8018118:	eebc 8ac8 	vcvt.u32.f32	s16, s16
 801811c:	eefd 7ae9 	vcvt.s32.f32	s15, s19
 8018120:	eebd 7ac9 	vcvt.s32.f32	s14, s18
 8018124:	ee18 3a10 	vmov	r3, s16
 8018128:	ee18 2a90 	vmov	r2, s17
 801812c:	ee17 1a10 	vmov	r1, s14
 8018130:	ee17 0a90 	vmov	r0, s15
 8018134:	2e00      	cmp	r6, #0
 8018136:	f040 8100 	bne.w	801833a <draw_with_stencil+0x1c66>
 801813a:	f7f8 fe17 	bl	8010d6c <nema_set_clip_temp>
 801813e:	2009      	movs	r0, #9
 8018140:	f8d4 b028 	ldr.w	fp, [r4, #40]	@ 0x28
 8018144:	edd4 aa0b 	vldr	s21, [r4, #44]	@ 0x2c
 8018148:	ed94 ba0c 	vldr	s22, [r4, #48]	@ 0x30
 801814c:	f8d4 8034 	ldr.w	r8, [r4, #52]	@ 0x34
 8018150:	ed94 aa0e 	vldr	s20, [r4, #56]	@ 0x38
 8018154:	edd4 8a0f 	vldr	s17, [r4, #60]	@ 0x3c
 8018158:	6c27      	ldr	r7, [r4, #64]	@ 0x40
 801815a:	ed94 8a11 	vldr	s16, [r4, #68]	@ 0x44
 801815e:	f005 fde1 	bl	801dd24 <nema_cl_get_space>
 8018162:	2800      	cmp	r0, #0
 8018164:	f000 811c 	beq.w	80183a0 <draw_with_stencil+0x1ccc>
 8018168:	f44f 7148 	mov.w	r1, #800	@ 0x320
 801816c:	f8c0 b004 	str.w	fp, [r0, #4]
 8018170:	f44f 724c 	mov.w	r2, #816	@ 0x330
 8018174:	f44f 7b49 	mov.w	fp, #804	@ 0x324
 8018178:	edc0 aa03 	vstr	s21, [r0, #12]
 801817c:	4ba0      	ldr	r3, [pc, #640]	@ (8018400 <draw_with_stencil+0x1d2c>)
 801817e:	6001      	str	r1, [r0, #0]
 8018180:	f8c0 b008 	str.w	fp, [r0, #8]
 8018184:	6102      	str	r2, [r0, #16]
 8018186:	691a      	ldr	r2, [r3, #16]
 8018188:	f8c0 801c 	str.w	r8, [r0, #28]
 801818c:	f042 0205 	orr.w	r2, r2, #5
 8018190:	f44f 7850 	mov.w	r8, #832	@ 0x340
 8018194:	f44f 7e51 	mov.w	lr, #836	@ 0x344
 8018198:	f44f 7c54 	mov.w	ip, #848	@ 0x350
 801819c:	6347      	str	r7, [r0, #52]	@ 0x34
 801819e:	6442      	str	r2, [r0, #68]	@ 0x44
 80181a0:	f44f 7755 	mov.w	r7, #852	@ 0x354
 80181a4:	f44f 724d 	mov.w	r2, #820	@ 0x334
 80181a8:	ed80 ba05 	vstr	s22, [r0, #20]
 80181ac:	ed80 aa09 	vstr	s20, [r0, #36]	@ 0x24
 80181b0:	edc0 8a0b 	vstr	s17, [r0, #44]	@ 0x2c
 80181b4:	ed80 8a0f 	vstr	s16, [r0, #60]	@ 0x3c
 80181b8:	4992      	ldr	r1, [pc, #584]	@ (8018404 <draw_with_stencil+0x1d30>)
 80181ba:	f8d9 3000 	ldr.w	r3, [r9]
 80181be:	6182      	str	r2, [r0, #24]
 80181c0:	f8c0 8020 	str.w	r8, [r0, #32]
 80181c4:	f8c0 e028 	str.w	lr, [r0, #40]	@ 0x28
 80181c8:	f8c0 c030 	str.w	ip, [r0, #48]	@ 0x30
 80181cc:	6387      	str	r7, [r0, #56]	@ 0x38
 80181ce:	6401      	str	r1, [r0, #64]	@ 0x40
 80181d0:	ed93 7a05 	vldr	s14, [r3, #20]
 80181d4:	eeb8 8ac7 	vcvt.f32.s32	s16, s14
 80181d8:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80181dc:	ee38 8a49 	vsub.f32	s16, s16, s18
 80181e0:	ee38 8a27 	vadd.f32	s16, s16, s15
 80181e4:	e4c9      	b.n	8017b7a <draw_with_stencil+0x14a6>
 80181e6:	4f88      	ldr	r7, [pc, #544]	@ (8018408 <draw_with_stencil+0x1d34>)
 80181e8:	4631      	mov	r1, r6
 80181ea:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 80181ee:	f10d 081c 	add.w	r8, sp, #28
 80181f2:	f005 fdf3 	bl	801dddc <nema_cl_add_cmd>
 80181f6:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80181f8:	e8a8 000f 	stmia.w	r8!, {r0, r1, r2, r3}
 80181fc:	e9d7 0100 	ldrd	r0, r1, [r7]
 8018200:	f107 0e08 	add.w	lr, r7, #8
 8018204:	f10d 0b34 	add.w	fp, sp, #52	@ 0x34
 8018208:	e888 0003 	stmia.w	r8, {r0, r1}
 801820c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8018210:	e8ab 000f 	stmia.w	fp!, {r0, r1, r2, r3}
 8018214:	e89e 0003 	ldmia.w	lr, {r0, r1}
 8018218:	f10d 0c70 	add.w	ip, sp, #112	@ 0x70
 801821c:	f107 0e20 	add.w	lr, r7, #32
 8018220:	9705      	str	r7, [sp, #20]
 8018222:	e88b 0003 	stmia.w	fp, {r0, r1}
 8018226:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801822a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801822e:	e89e 000f 	ldmia.w	lr, {r0, r1, r2, r3}
 8018232:	9f04      	ldr	r7, [sp, #16]
 8018234:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8018238:	ed97 7a36 	vldr	s14, [r7, #216]	@ 0xd8
 801823c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8018240:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018244:	9f05      	ldr	r7, [sp, #20]
 8018246:	f10d 084c 	add.w	r8, sp, #76	@ 0x4c
 801824a:	f107 0740 	add.w	r7, r7, #64	@ 0x40
 801824e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 8018252:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8018254:	e8a8 000f 	stmia.w	r8!, {r0, r1, r2, r3}
 8018258:	e897 0003 	ldmia.w	r7, {r0, r1}
 801825c:	e888 0003 	stmia.w	r8, {r0, r1}
 8018260:	db6e      	blt.n	8018340 <draw_with_stencil+0x1c6c>
 8018262:	9f04      	ldr	r7, [sp, #16]
 8018264:	f897 30dd 	ldrb.w	r3, [r7, #221]	@ 0xdd
 8018268:	2b02      	cmp	r3, #2
 801826a:	f000 80a4 	beq.w	80183b6 <draw_with_stencil+0x1ce2>
 801826e:	2008      	movs	r0, #8
 8018270:	2102      	movs	r1, #2
 8018272:	4f66      	ldr	r7, [pc, #408]	@ (801840c <draw_with_stencil+0x1d38>)
 8018274:	f016 6280 	ands.w	r2, r6, #67108864	@ 0x4000000
 8018278:	f040 808c 	bne.w	8018394 <draw_with_stencil+0x1cc0>
 801827c:	ab0d      	add	r3, sp, #52	@ 0x34
 801827e:	4418      	add	r0, r3
 8018280:	f7fa f80a 	bl	8012298 <nema_load_frag_shader>
 8018284:	4638      	mov	r0, r7
 8018286:	f7fa f821 	bl	80122cc <nema_set_frag_ptr>
 801828a:	f7ff bb87 	b.w	801799c <draw_with_stencil+0x12c8>
 801828e:	a813      	add	r0, sp, #76	@ 0x4c
 8018290:	495f      	ldr	r1, [pc, #380]	@ (8018410 <draw_with_stencil+0x1d3c>)
 8018292:	f7f9 fb4b 	bl	801192c <nema_mat3x3_copy>
 8018296:	a813      	add	r0, sp, #76	@ 0x4c
 8018298:	f7f9 fc8a 	bl	8011bb0 <nema_mat3x3_invert>
 801829c:	b9d8      	cbnz	r0, 80182d6 <draw_with_stencil+0x1c02>
 801829e:	9b04      	ldr	r3, [sp, #16]
 80182a0:	a81c      	add	r0, sp, #112	@ 0x70
 80182a2:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 80182a6:	f7f9 fb41 	bl	801192c <nema_mat3x3_copy>
 80182aa:	a81c      	add	r0, sp, #112	@ 0x70
 80182ac:	a913      	add	r1, sp, #76	@ 0x4c
 80182ae:	f7f9 fb89 	bl	80119c4 <nema_mat3x3_mul>
 80182b2:	a81c      	add	r0, sp, #112	@ 0x70
 80182b4:	f7f9 ff02 	bl	80120bc <nema_set_matrix>
 80182b8:	f7ff bafb 	b.w	80178b2 <draw_with_stencil+0x11de>
 80182bc:	a813      	add	r0, sp, #76	@ 0x4c
 80182be:	4954      	ldr	r1, [pc, #336]	@ (8018410 <draw_with_stencil+0x1d3c>)
 80182c0:	f7f9 fb34 	bl	801192c <nema_mat3x3_copy>
 80182c4:	a813      	add	r0, sp, #76	@ 0x4c
 80182c6:	f7f9 fc73 	bl	8011bb0 <nema_mat3x3_invert>
 80182ca:	b920      	cbnz	r0, 80182d6 <draw_with_stencil+0x1c02>
 80182cc:	9b04      	ldr	r3, [sp, #16]
 80182ce:	a81c      	add	r0, sp, #112	@ 0x70
 80182d0:	f103 0108 	add.w	r1, r3, #8
 80182d4:	e7e7      	b.n	80182a6 <draw_with_stencil+0x1bd2>
 80182d6:	f44f 2680 	mov.w	r6, #262144	@ 0x40000
 80182da:	f7fe bfdb 	b.w	8017294 <draw_with_stencil+0xbc0>
 80182de:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80182e2:	f004 fbc7 	bl	801ca74 <nema_vg_set_error>
 80182e6:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80182ea:	f004 fbc3 	bl	801ca74 <nema_vg_set_error>
 80182ee:	f44f 6600 	mov.w	r6, #2048	@ 0x800
 80182f2:	f7fe bfde 	b.w	80172b2 <draw_with_stencil+0xbde>
 80182f6:	2000      	movs	r0, #0
 80182f8:	f8d9 1000 	ldr.w	r1, [r9]
 80182fc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
 8018300:	68c9      	ldr	r1, [r1, #12]
 8018302:	e9cd 8200 	strd	r8, r2, [sp]
 8018306:	9002      	str	r0, [sp, #8]
 8018308:	4630      	mov	r0, r6
 801830a:	f7f8 fc2b 	bl	8010b64 <nema_bind_tex>
 801830e:	2303      	movs	r3, #3
 8018310:	2202      	movs	r2, #2
 8018312:	4631      	mov	r1, r6
 8018314:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8018318:	46b0      	mov	r8, r6
 801831a:	f005 fe81 	bl	801e020 <nema_set_blend>
 801831e:	e549      	b.n	8017db4 <draw_with_stencil+0x16e0>
 8018320:	2100      	movs	r1, #0
 8018322:	ee17 3a90 	vmov	r3, s15
 8018326:	4608      	mov	r0, r1
 8018328:	ee18 2a90 	vmov	r2, s17
 801832c:	f7f8 fcfc 	bl	8010d28 <nema_set_clip2>
 8018330:	e62c      	b.n	8017f8c <draw_with_stencil+0x18b8>
 8018332:	2000      	movs	r0, #0
 8018334:	f7f8 fcf8 	bl	8010d28 <nema_set_clip2>
 8018338:	e69b      	b.n	8018072 <draw_with_stencil+0x199e>
 801833a:	f7f8 fcf5 	bl	8010d28 <nema_set_clip2>
 801833e:	e6fe      	b.n	801813e <draw_with_stencil+0x1a6a>
 8018340:	9b04      	ldr	r3, [sp, #16]
 8018342:	f893 30dd 	ldrb.w	r3, [r3, #221]	@ 0xdd
 8018346:	2b02      	cmp	r3, #2
 8018348:	d049      	beq.n	80183de <draw_with_stencil+0x1d0a>
 801834a:	2103      	movs	r1, #3
 801834c:	2008      	movs	r0, #8
 801834e:	2302      	movs	r3, #2
 8018350:	4f2e      	ldr	r7, [pc, #184]	@ (801840c <draw_with_stencil+0x1d38>)
 8018352:	f8df c0c8 	ldr.w	ip, [pc, #200]	@ 801841c <draw_with_stencil+0x1d48>
 8018356:	f016 6280 	ands.w	r2, r6, #67108864	@ 0x4000000
 801835a:	d139      	bne.n	80183d0 <draw_with_stencil+0x1cfc>
 801835c:	4619      	mov	r1, r3
 801835e:	ab13      	add	r3, sp, #76	@ 0x4c
 8018360:	4418      	add	r0, r3
 8018362:	f7f9 ff99 	bl	8012298 <nema_load_frag_shader>
 8018366:	4638      	mov	r0, r7
 8018368:	f7f9 ffb0 	bl	80122cc <nema_set_frag_ptr>
 801836c:	9b04      	ldr	r3, [sp, #16]
 801836e:	eddf 6a29 	vldr	s13, [pc, #164]	@ 8018414 <draw_with_stencil+0x1d40>
 8018372:	edd3 7a36 	vldr	s15, [r3, #216]	@ 0xd8
 8018376:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801837a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801837e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8018382:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018386:	ee17 0a90 	vmov	r0, s15
 801838a:	0600      	lsls	r0, r0, #24
 801838c:	f006 fa0e 	bl	801e7ac <nema_set_const_color>
 8018390:	f7ff bb04 	b.w	801799c <draw_with_stencil+0x12c8>
 8018394:	ab07      	add	r3, sp, #28
 8018396:	4418      	add	r0, r3
 8018398:	2200      	movs	r2, #0
 801839a:	f7f9 ff7d 	bl	8012298 <nema_load_frag_shader>
 801839e:	e771      	b.n	8018284 <draw_with_stencil+0x1bb0>
 80183a0:	f8d9 3000 	ldr.w	r3, [r9]
 80183a4:	e714      	b.n	80181d0 <draw_with_stencil+0x1afc>
 80183a6:	f44f 7000 	mov.w	r0, #512	@ 0x200
 80183aa:	f004 fb63 	bl	801ca74 <nema_vg_set_error>
 80183ae:	f44f 7600 	mov.w	r6, #512	@ 0x200
 80183b2:	f7fe bf6f 	b.w	8017294 <draw_with_stencil+0xbc0>
 80183b6:	f897 202c 	ldrb.w	r2, [r7, #44]	@ 0x2c
 80183ba:	4b17      	ldr	r3, [pc, #92]	@ (8018418 <draw_with_stencil+0x1d44>)
 80183bc:	2a01      	cmp	r2, #1
 80183be:	4f13      	ldr	r7, [pc, #76]	@ (801840c <draw_with_stencil+0x1d38>)
 80183c0:	bf13      	iteet	ne
 80183c2:	2008      	movne	r0, #8
 80183c4:	461f      	moveq	r7, r3
 80183c6:	2000      	moveq	r0, #0
 80183c8:	2102      	movne	r1, #2
 80183ca:	bf08      	it	eq
 80183cc:	2103      	moveq	r1, #3
 80183ce:	e751      	b.n	8018274 <draw_with_stencil+0x1ba0>
 80183d0:	ab1c      	add	r3, sp, #112	@ 0x70
 80183d2:	4418      	add	r0, r3
 80183d4:	2200      	movs	r2, #0
 80183d6:	4667      	mov	r7, ip
 80183d8:	f7f9 ff5e 	bl	8012298 <nema_load_frag_shader>
 80183dc:	e7c3      	b.n	8018366 <draw_with_stencil+0x1c92>
 80183de:	9a04      	ldr	r2, [sp, #16]
 80183e0:	f892 202c 	ldrb.w	r2, [r2, #44]	@ 0x2c
 80183e4:	2a01      	cmp	r2, #1
 80183e6:	d005      	beq.n	80183f4 <draw_with_stencil+0x1d20>
 80183e8:	2103      	movs	r1, #3
 80183ea:	2008      	movs	r0, #8
 80183ec:	4f07      	ldr	r7, [pc, #28]	@ (801840c <draw_with_stencil+0x1d38>)
 80183ee:	f8df c02c 	ldr.w	ip, [pc, #44]	@ 801841c <draw_with_stencil+0x1d48>
 80183f2:	e7b0      	b.n	8018356 <draw_with_stencil+0x1c82>
 80183f4:	4f08      	ldr	r7, [pc, #32]	@ (8018418 <draw_with_stencil+0x1d44>)
 80183f6:	2104      	movs	r1, #4
 80183f8:	46bc      	mov	ip, r7
 80183fa:	2000      	movs	r0, #0
 80183fc:	2303      	movs	r3, #3
 80183fe:	e7aa      	b.n	8018356 <draw_with_stencil+0x1c82>
 8018400:	20000064 	.word	0x20000064
 8018404:	ff000100 	.word	0xff000100
 8018408:	080335d8 	.word	0x080335d8
 801840c:	941e8000 	.word	0x941e8000
 8018410:	20083030 	.word	0x20083030
 8018414:	437f0000 	.word	0x437f0000
 8018418:	941da000 	.word	0x941da000
 801841c:	941f8000 	.word	0x941f8000

08018420 <nema_vg_draw_path>:
 8018420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018424:	ed2d 8b04 	vpush	{d8-d9}
 8018428:	b087      	sub	sp, #28
 801842a:	4604      	mov	r4, r0
 801842c:	460d      	mov	r5, r1
 801842e:	f005 fc05 	bl	801dc3c <nema_cl_get_bound>
 8018432:	2800      	cmp	r0, #0
 8018434:	f000 82e9 	beq.w	8018a0a <nema_vg_draw_path+0x5ea>
 8018438:	2c00      	cmp	r4, #0
 801843a:	f000 80ca 	beq.w	80185d2 <nema_vg_draw_path+0x1b2>
 801843e:	2d00      	cmp	r5, #0
 8018440:	f000 80c7 	beq.w	80185d2 <nema_vg_draw_path+0x1b2>
 8018444:	4f76      	ldr	r7, [pc, #472]	@ (8018620 <nema_vg_draw_path+0x200>)
 8018446:	683b      	ldr	r3, [r7, #0]
 8018448:	2b00      	cmp	r3, #0
 801844a:	f000 80c2 	beq.w	80185d2 <nema_vg_draw_path+0x1b2>
 801844e:	6862      	ldr	r2, [r4, #4]
 8018450:	2a00      	cmp	r2, #0
 8018452:	f000 80cc 	beq.w	80185ee <nema_vg_draw_path+0x1ce>
 8018456:	edd4 7a08 	vldr	s15, [r4, #32]
 801845a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801845e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018462:	f100 829a 	bmi.w	801899a <nema_vg_draw_path+0x57a>
 8018466:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 801846a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801846e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018472:	f100 8292 	bmi.w	801899a <nema_vg_draw_path+0x57a>
 8018476:	edd5 7a35 	vldr	s15, [r5, #212]	@ 0xd4
 801847a:	f8df 81b8 	ldr.w	r8, [pc, #440]	@ 8018634 <nema_vg_draw_path+0x214>
 801847e:	7f1a      	ldrb	r2, [r3, #28]
 8018480:	edc8 7a00 	vstr	s15, [r8]
 8018484:	b95a      	cbnz	r2, 801849e <nema_vg_draw_path+0x7e>
 8018486:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801848a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801848e:	d806      	bhi.n	801849e <nema_vg_draw_path+0x7e>
 8018490:	2400      	movs	r4, #0
 8018492:	4620      	mov	r0, r4
 8018494:	b007      	add	sp, #28
 8018496:	ecbd 8b04 	vpop	{d8-d9}
 801849a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801849e:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80184a0:	f8d4 6084 	ldr.w	r6, [r4, #132]	@ 0x84
 80184a4:	7f5a      	ldrb	r2, [r3, #29]
 80184a6:	430e      	orrs	r6, r1
 80184a8:	f8df 918c 	ldr.w	r9, [pc, #396]	@ 8018638 <nema_vg_draw_path+0x218>
 80184ac:	7f99      	ldrb	r1, [r3, #30]
 80184ae:	485d      	ldr	r0, [pc, #372]	@ (8018624 <nema_vg_draw_path+0x204>)
 80184b0:	f006 0601 	and.w	r6, r6, #1
 80184b4:	f002 0301 	and.w	r3, r2, #1
 80184b8:	f889 6000 	strb.w	r6, [r9]
 80184bc:	7003      	strb	r3, [r0, #0]
 80184be:	b111      	cbz	r1, 80184c6 <nema_vg_draw_path+0xa6>
 80184c0:	2300      	movs	r3, #0
 80184c2:	f889 3000 	strb.w	r3, [r9]
 80184c6:	4858      	ldr	r0, [pc, #352]	@ (8018628 <nema_vg_draw_path+0x208>)
 80184c8:	f7f9 fa22 	bl	8011910 <nema_mat3x3_load_identity>
 80184cc:	f899 3000 	ldrb.w	r3, [r9]
 80184d0:	2b00      	cmp	r3, #0
 80184d2:	f000 8088 	beq.w	80185e6 <nema_vg_draw_path+0x1c6>
 80184d6:	6839      	ldr	r1, [r7, #0]
 80184d8:	6b0b      	ldr	r3, [r1, #48]	@ 0x30
 80184da:	07db      	lsls	r3, r3, #31
 80184dc:	f100 8091 	bmi.w	8018602 <nema_vg_draw_path+0x1e2>
 80184e0:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 80184e4:	07d9      	lsls	r1, r3, #31
 80184e6:	f100 8411 	bmi.w	8018d0c <nema_vg_draw_path+0x8ec>
 80184ea:	edd5 7a36 	vldr	s15, [r5, #216]	@ 0xd8
 80184ee:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80184f2:	eef4 7ac7 	vcmpe.f32	s15, s14
 80184f6:	ed98 8a00 	vldr	s16, [r8]
 80184fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80184fe:	4b4b      	ldr	r3, [pc, #300]	@ (801862c <nema_vg_draw_path+0x20c>)
 8018500:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8018502:	ed83 8a00 	vstr	s16, [r3]
 8018506:	f8df b134 	ldr.w	fp, [pc, #308]	@ 801863c <nema_vg_draw_path+0x21c>
 801850a:	4b49      	ldr	r3, [pc, #292]	@ (8018630 <nema_vg_draw_path+0x210>)
 801850c:	f8cb 0000 	str.w	r0, [fp]
 8018510:	ed83 8a00 	vstr	s16, [r3]
 8018514:	f100 824d 	bmi.w	80189b2 <nema_vg_draw_path+0x592>
 8018518:	683b      	ldr	r3, [r7, #0]
 801851a:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 801851e:	f01a 6f80 	tst.w	sl, #67108864	@ 0x4000000
 8018522:	d022      	beq.n	801856a <nema_vg_draw_path+0x14a>
 8018524:	0e01      	lsrs	r1, r0, #24
 8018526:	f3c0 4e07 	ubfx	lr, r0, #16, #8
 801852a:	b2c2      	uxtb	r2, r0
 801852c:	f3c0 2c07 	ubfx	ip, r0, #8, #8
 8018530:	fb01 f202 	mul.w	r2, r1, r2
 8018534:	fb01 fc0c 	mul.w	ip, r1, ip
 8018538:	fb01 f10e 	mul.w	r1, r1, lr
 801853c:	f8df e100 	ldr.w	lr, [pc, #256]	@ 8018640 <nema_vg_draw_path+0x220>
 8018540:	9101      	str	r1, [sp, #4]
 8018542:	fbae 1202 	umull	r1, r2, lr, r2
 8018546:	fbae 1c0c 	umull	r1, ip, lr, ip
 801854a:	9901      	ldr	r1, [sp, #4]
 801854c:	f000 407f 	and.w	r0, r0, #4278190080	@ 0xff000000
 8018550:	fbae e101 	umull	lr, r1, lr, r1
 8018554:	ea40 10d2 	orr.w	r0, r0, r2, lsr #7
 8018558:	ea4f 1cdc 	mov.w	ip, ip, lsr #7
 801855c:	ea40 200c 	orr.w	r0, r0, ip, lsl #8
 8018560:	09c9      	lsrs	r1, r1, #7
 8018562:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8018566:	f8cb 0000 	str.w	r0, [fp]
 801856a:	f893 c01c 	ldrb.w	ip, [r3, #28]
 801856e:	f899 1000 	ldrb.w	r1, [r9]
 8018572:	f1bc 0f00 	cmp.w	ip, #0
 8018576:	f040 81fe 	bne.w	8018976 <nema_vg_draw_path+0x556>
 801857a:	2900      	cmp	r1, #0
 801857c:	f040 82d6 	bne.w	8018b2c <nema_vg_draw_path+0x70c>
 8018580:	2e00      	cmp	r6, #0
 8018582:	f040 833b 	bne.w	8018bfc <nema_vg_draw_path+0x7dc>
 8018586:	eeb0 7a48 	vmov.f32	s14, s16
 801858a:	eef0 7a48 	vmov.f32	s15, s16
 801858e:	ee37 6ac7 	vsub.f32	s12, s15, s14
 8018592:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8018596:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801859a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801859e:	bf48      	it	mi
 80185a0:	eeb1 6a46 	vnegmi.f32	s12, s12
 80185a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185a8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80185ac:	bf4c      	ite	mi
 80185ae:	eef1 5a67 	vnegmi.f32	s11, s15
 80185b2:	eef0 5a67 	vmovpl.f32	s11, s15
 80185b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185ba:	f100 83d5 	bmi.w	8018d68 <nema_vg_draw_path+0x948>
 80185be:	eeb4 7ae5 	vcmpe.f32	s14, s11
 80185c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185c6:	dc3f      	bgt.n	8018648 <nema_vg_draw_path+0x228>
 80185c8:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8018644 <nema_vg_draw_path+0x224>
 80185cc:	ee67 6a26 	vmul.f32	s13, s14, s13
 80185d0:	e045      	b.n	801865e <nema_vg_draw_path+0x23e>
 80185d2:	2001      	movs	r0, #1
 80185d4:	f004 fa4e 	bl	801ca74 <nema_vg_set_error>
 80185d8:	2401      	movs	r4, #1
 80185da:	4620      	mov	r0, r4
 80185dc:	b007      	add	sp, #28
 80185de:	ecbd 8b04 	vpop	{d8-d9}
 80185e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185e6:	2e00      	cmp	r6, #0
 80185e8:	f43f af7f 	beq.w	80184ea <nema_vg_draw_path+0xca>
 80185ec:	e773      	b.n	80184d6 <nema_vg_draw_path+0xb6>
 80185ee:	2410      	movs	r4, #16
 80185f0:	2010      	movs	r0, #16
 80185f2:	f004 fa3f 	bl	801ca74 <nema_vg_set_error>
 80185f6:	4620      	mov	r0, r4
 80185f8:	b007      	add	sp, #28
 80185fa:	ecbd 8b04 	vpop	{d8-d9}
 80185fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018602:	4809      	ldr	r0, [pc, #36]	@ (8018628 <nema_vg_draw_path+0x208>)
 8018604:	314c      	adds	r1, #76	@ 0x4c
 8018606:	f7f9 f991 	bl	801192c <nema_mat3x3_copy>
 801860a:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 801860e:	07d8      	lsls	r0, r3, #31
 8018610:	f57f af6b 	bpl.w	80184ea <nema_vg_draw_path+0xca>
 8018614:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 8018618:	4803      	ldr	r0, [pc, #12]	@ (8018628 <nema_vg_draw_path+0x208>)
 801861a:	f7f9 f9d3 	bl	80119c4 <nema_mat3x3_mul>
 801861e:	e764      	b.n	80184ea <nema_vg_draw_path+0xca>
 8018620:	20082fac 	.word	0x20082fac
 8018624:	20082fc0 	.word	0x20082fc0
 8018628:	20083030 	.word	0x20083030
 801862c:	20000138 	.word	0x20000138
 8018630:	2000013c 	.word	0x2000013c
 8018634:	20000134 	.word	0x20000134
 8018638:	20082ff9 	.word	0x20082ff9
 801863c:	2008302c 	.word	0x2008302c
 8018640:	80808081 	.word	0x80808081
 8018644:	3727c5ac 	.word	0x3727c5ac
 8018648:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801864c:	ed5f 6a03 	vldr	s13, [pc, #-12]	@ 8018644 <nema_vg_draw_path+0x224>
 8018650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018654:	bf4c      	ite	mi
 8018656:	ee67 6ae6 	vnmulmi.f32	s13, s15, s13
 801865a:	ee67 6aa6 	vmulpl.f32	s13, s15, s13
 801865e:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8018662:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018666:	d807      	bhi.n	8018678 <nema_vg_draw_path+0x258>
 8018668:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 801866c:	eef4 7ae5 	vcmpe.f32	s15, s11
 8018670:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018674:	f100 82d1 	bmi.w	8018c1a <nema_vg_draw_path+0x7fa>
 8018678:	2900      	cmp	r1, #0
 801867a:	f000 8182 	beq.w	8018982 <nema_vg_draw_path+0x562>
 801867e:	f1bc 0f00 	cmp.w	ip, #0
 8018682:	f040 828e 	bne.w	8018ba2 <nema_vg_draw_path+0x782>
 8018686:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801868a:	eef4 7ae6 	vcmpe.f32	s15, s13
 801868e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018692:	f340 8342 	ble.w	8018d1a <nema_vg_draw_path+0x8fa>
 8018696:	2201      	movs	r2, #1
 8018698:	f04f 0c00 	mov.w	ip, #0
 801869c:	4edd      	ldr	r6, [pc, #884]	@ (8018a14 <nema_vg_draw_path+0x5f4>)
 801869e:	48de      	ldr	r0, [pc, #888]	@ (8018a18 <nema_vg_draw_path+0x5f8>)
 80186a0:	6032      	str	r2, [r6, #0]
 80186a2:	f895 20dd 	ldrb.w	r2, [r5, #221]	@ 0xdd
 80186a6:	f8c0 c000 	str.w	ip, [r0]
 80186aa:	2a00      	cmp	r2, #0
 80186ac:	f000 838c 	beq.w	8018dc8 <nema_vg_draw_path+0x9a8>
 80186b0:	ed98 6a00 	vldr	s12, [r8]
 80186b4:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 80186b8:	f04f 0800 	mov.w	r8, #0
 80186bc:	ee26 6a26 	vmul.f32	s12, s12, s13
 80186c0:	f04f 0c00 	mov.w	ip, #0
 80186c4:	48d5      	ldr	r0, [pc, #852]	@ (8018a1c <nema_vg_draw_path+0x5fc>)
 80186c6:	4ad6      	ldr	r2, [pc, #856]	@ (8018a20 <nema_vg_draw_path+0x600>)
 80186c8:	f8c0 c000 	str.w	ip, [r0]
 80186cc:	f8c2 c000 	str.w	ip, [r2]
 80186d0:	2900      	cmp	r1, #0
 80186d2:	f040 81d4 	bne.w	8018a7e <nema_vg_draw_path+0x65e>
 80186d6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80186da:	eef1 5a00 	vmov.f32	s11, #16	@ 0x40800000  4.0
 80186de:	edd4 3a04 	vldr	s7, [r4, #16]
 80186e2:	ee75 5a86 	vadd.f32	s11, s11, s12
 80186e6:	ee73 3ae5 	vsub.f32	s7, s7, s11
 80186ea:	4ace      	ldr	r2, [pc, #824]	@ (8018a24 <nema_vg_draw_path+0x604>)
 80186ec:	ee36 6a86 	vadd.f32	s12, s13, s12
 80186f0:	6812      	ldr	r2, [r2, #0]
 80186f2:	edc2 3a06 	vstr	s7, [r2, #24]
 80186f6:	edd4 2a05 	vldr	s5, [r4, #20]
 80186fa:	ee72 2ac6 	vsub.f32	s5, s5, s12
 80186fe:	edc2 2a07 	vstr	s5, [r2, #28]
 8018702:	ed94 7a08 	vldr	s14, [r4, #32]
 8018706:	edd4 7a04 	vldr	s15, [r4, #16]
 801870a:	ee77 7a87 	vadd.f32	s15, s15, s14
 801870e:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8018712:	edc2 7a08 	vstr	s15, [r2, #32]
 8018716:	ed94 2a05 	vldr	s4, [r4, #20]
 801871a:	ee32 2a46 	vsub.f32	s4, s4, s12
 801871e:	ed82 2a09 	vstr	s4, [r2, #36]	@ 0x24
 8018722:	edd4 6a08 	vldr	s13, [r4, #32]
 8018726:	ed94 7a04 	vldr	s14, [r4, #16]
 801872a:	ee37 7a26 	vadd.f32	s14, s14, s13
 801872e:	ee37 7a25 	vadd.f32	s14, s14, s11
 8018732:	ed82 7a0a 	vstr	s14, [r2, #40]	@ 0x28
 8018736:	ed94 5a09 	vldr	s10, [r4, #36]	@ 0x24
 801873a:	edd4 6a05 	vldr	s13, [r4, #20]
 801873e:	ee76 6a85 	vadd.f32	s13, s13, s10
 8018742:	ee36 3a86 	vadd.f32	s6, s13, s12
 8018746:	ed82 3a0b 	vstr	s6, [r2, #44]	@ 0x2c
 801874a:	edd4 6a04 	vldr	s13, [r4, #16]
 801874e:	ee76 5ae5 	vsub.f32	s11, s13, s11
 8018752:	edc2 5a0c 	vstr	s11, [r2, #48]	@ 0x30
 8018756:	edd4 6a05 	vldr	s13, [r4, #20]
 801875a:	ed94 5a09 	vldr	s10, [r4, #36]	@ 0x24
 801875e:	ee76 6a85 	vadd.f32	s13, s13, s10
 8018762:	ee76 6a86 	vadd.f32	s13, s13, s12
 8018766:	edc2 6a0d 	vstr	s13, [r2, #52]	@ 0x34
 801876a:	2900      	cmp	r1, #0
 801876c:	d05e      	beq.n	801882c <nema_vg_draw_path+0x40c>
 801876e:	49ae      	ldr	r1, [pc, #696]	@ (8018a28 <nema_vg_draw_path+0x608>)
 8018770:	ed91 6a00 	vldr	s12, [r1]
 8018774:	edd1 4a01 	vldr	s9, [r1, #4]
 8018778:	ee63 0a86 	vmul.f32	s1, s7, s12
 801877c:	ee22 5aa4 	vmul.f32	s10, s5, s9
 8018780:	ed91 0a02 	vldr	s0, [r1, #8]
 8018784:	ee70 0a85 	vadd.f32	s1, s1, s10
 8018788:	ee70 0a80 	vadd.f32	s1, s1, s0
 801878c:	edc2 0a06 	vstr	s1, [r2, #24]
 8018790:	ed91 4a04 	vldr	s8, [r1, #16]
 8018794:	ed91 5a03 	vldr	s10, [r1, #12]
 8018798:	ee62 8a24 	vmul.f32	s17, s4, s9
 801879c:	ee63 3a85 	vmul.f32	s7, s7, s10
 80187a0:	ee27 1a85 	vmul.f32	s2, s15, s10
 80187a4:	ee67 1a05 	vmul.f32	s3, s14, s10
 80187a8:	ee23 8a04 	vmul.f32	s16, s6, s8
 80187ac:	ee62 2a84 	vmul.f32	s5, s5, s8
 80187b0:	ee23 3a24 	vmul.f32	s6, s6, s9
 80187b4:	ee67 7a86 	vmul.f32	s15, s15, s12
 80187b8:	ee22 9a04 	vmul.f32	s18, s4, s8
 80187bc:	ee25 5a85 	vmul.f32	s10, s11, s10
 80187c0:	ee27 7a06 	vmul.f32	s14, s14, s12
 80187c4:	ee65 5a86 	vmul.f32	s11, s11, s12
 80187c8:	ee26 4a84 	vmul.f32	s8, s13, s8
 80187cc:	ee66 4aa4 	vmul.f32	s9, s13, s9
 80187d0:	ed91 6a05 	vldr	s12, [r1, #20]
 80187d4:	ee73 2aa2 	vadd.f32	s5, s7, s5
 80187d8:	ee71 6a88 	vadd.f32	s13, s3, s16
 80187dc:	ee37 7a03 	vadd.f32	s14, s14, s6
 80187e0:	ee31 2a09 	vadd.f32	s4, s2, s18
 80187e4:	ee77 7aa8 	vadd.f32	s15, s15, s17
 80187e8:	ee35 5a04 	vadd.f32	s10, s10, s8
 80187ec:	ee75 5aa4 	vadd.f32	s11, s11, s9
 80187f0:	ee36 3a86 	vadd.f32	s6, s13, s12
 80187f4:	ee72 2a86 	vadd.f32	s5, s5, s12
 80187f8:	ee32 2a06 	vadd.f32	s4, s4, s12
 80187fc:	ee77 7a80 	vadd.f32	s15, s15, s0
 8018800:	ee37 7a00 	vadd.f32	s14, s14, s0
 8018804:	ee75 6a06 	vadd.f32	s13, s10, s12
 8018808:	ee75 5a80 	vadd.f32	s11, s11, s0
 801880c:	eef0 3a60 	vmov.f32	s7, s1
 8018810:	edc2 2a07 	vstr	s5, [r2, #28]
 8018814:	ed82 2a09 	vstr	s4, [r2, #36]	@ 0x24
 8018818:	edc2 7a08 	vstr	s15, [r2, #32]
 801881c:	ed82 3a0b 	vstr	s6, [r2, #44]	@ 0x2c
 8018820:	ed82 7a0a 	vstr	s14, [r2, #40]	@ 0x28
 8018824:	edc2 6a0d 	vstr	s13, [r2, #52]	@ 0x34
 8018828:	edc2 5a0c 	vstr	s11, [r2, #48]	@ 0x30
 801882c:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 8018830:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018834:	f240 8167 	bls.w	8018b06 <nema_vg_draw_path+0x6e6>
 8018838:	eef5 2ac0 	vcmpe.f32	s5, #0.0
 801883c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018840:	f240 81c6 	bls.w	8018bd0 <nema_vg_draw_path+0x7b0>
 8018844:	ed92 6a04 	vldr	s12, [r2, #16]
 8018848:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801884c:	eeb4 6ae3 	vcmpe.f32	s12, s7
 8018850:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018854:	d80f      	bhi.n	8018876 <nema_vg_draw_path+0x456>
 8018856:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801885a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801885e:	d80a      	bhi.n	8018876 <nema_vg_draw_path+0x456>
 8018860:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8018864:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018868:	d805      	bhi.n	8018876 <nema_vg_draw_path+0x456>
 801886a:	eeb4 6ae5 	vcmpe.f32	s12, s11
 801886e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018872:	f67f ae0d 	bls.w	8018490 <nema_vg_draw_path+0x70>
 8018876:	ed92 6a05 	vldr	s12, [r2, #20]
 801887a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801887e:	eeb4 6ae2 	vcmpe.f32	s12, s5
 8018882:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018886:	d80f      	bhi.n	80188a8 <nema_vg_draw_path+0x488>
 8018888:	eeb4 6ac2 	vcmpe.f32	s12, s4
 801888c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018890:	d80a      	bhi.n	80188a8 <nema_vg_draw_path+0x488>
 8018892:	eeb4 6ac3 	vcmpe.f32	s12, s6
 8018896:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801889a:	d805      	bhi.n	80188a8 <nema_vg_draw_path+0x488>
 801889c:	eeb4 6ae6 	vcmpe.f32	s12, s13
 80188a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188a4:	f67f adf4 	bls.w	8018490 <nema_vg_draw_path+0x70>
 80188a8:	7f9a      	ldrb	r2, [r3, #30]
 80188aa:	2a00      	cmp	r2, #0
 80188ac:	f040 809b 	bne.w	80189e6 <nema_vg_draw_path+0x5c6>
 80188b0:	ed9f 6a5e 	vldr	s12, [pc, #376]	@ 8018a2c <nema_vg_draw_path+0x60c>
 80188b4:	eef4 3ac6 	vcmpe.f32	s7, s12
 80188b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188bc:	dc4c      	bgt.n	8018958 <nema_vg_draw_path+0x538>
 80188be:	eef4 2ac6 	vcmpe.f32	s5, s12
 80188c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188c6:	dc47      	bgt.n	8018958 <nema_vg_draw_path+0x538>
 80188c8:	eef4 7ac6 	vcmpe.f32	s15, s12
 80188cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188d0:	dc42      	bgt.n	8018958 <nema_vg_draw_path+0x538>
 80188d2:	eeb4 2ac6 	vcmpe.f32	s4, s12
 80188d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188da:	dc3d      	bgt.n	8018958 <nema_vg_draw_path+0x538>
 80188dc:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80188e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188e4:	dc38      	bgt.n	8018958 <nema_vg_draw_path+0x538>
 80188e6:	eeb4 3ac6 	vcmpe.f32	s6, s12
 80188ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188ee:	dc33      	bgt.n	8018958 <nema_vg_draw_path+0x538>
 80188f0:	eef4 5ac6 	vcmpe.f32	s11, s12
 80188f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188f8:	dc2e      	bgt.n	8018958 <nema_vg_draw_path+0x538>
 80188fa:	eef4 6ac6 	vcmpe.f32	s13, s12
 80188fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018902:	dc29      	bgt.n	8018958 <nema_vg_draw_path+0x538>
 8018904:	ed9f 6a4a 	vldr	s12, [pc, #296]	@ 8018a30 <nema_vg_draw_path+0x610>
 8018908:	eef4 3ac6 	vcmpe.f32	s7, s12
 801890c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018910:	d422      	bmi.n	8018958 <nema_vg_draw_path+0x538>
 8018912:	eef4 2ac6 	vcmpe.f32	s5, s12
 8018916:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801891a:	d41d      	bmi.n	8018958 <nema_vg_draw_path+0x538>
 801891c:	eef4 7ac6 	vcmpe.f32	s15, s12
 8018920:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018924:	d418      	bmi.n	8018958 <nema_vg_draw_path+0x538>
 8018926:	eeb4 2ac6 	vcmpe.f32	s4, s12
 801892a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801892e:	d413      	bmi.n	8018958 <nema_vg_draw_path+0x538>
 8018930:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8018934:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018938:	d40e      	bmi.n	8018958 <nema_vg_draw_path+0x538>
 801893a:	eeb4 3ac6 	vcmpe.f32	s6, s12
 801893e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018942:	d409      	bmi.n	8018958 <nema_vg_draw_path+0x538>
 8018944:	eef4 5ac6 	vcmpe.f32	s11, s12
 8018948:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801894c:	d404      	bmi.n	8018958 <nema_vg_draw_path+0x538>
 801894e:	eef4 6ac6 	vcmpe.f32	s13, s12
 8018952:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018956:	d546      	bpl.n	80189e6 <nema_vg_draw_path+0x5c6>
 8018958:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801895a:	0759      	lsls	r1, r3, #29
 801895c:	f140 82a9 	bpl.w	8018eb2 <nema_vg_draw_path+0xa92>
 8018960:	4620      	mov	r0, r4
 8018962:	4629      	mov	r1, r5
 8018964:	f003 fe86 	bl	801c674 <draw_clipped_path>
 8018968:	4604      	mov	r4, r0
 801896a:	2800      	cmp	r0, #0
 801896c:	f43f ae35 	beq.w	80185da <nema_vg_draw_path+0x1ba>
 8018970:	f004 f880 	bl	801ca74 <nema_vg_set_error>
 8018974:	e631      	b.n	80185da <nema_vg_draw_path+0x1ba>
 8018976:	2900      	cmp	r1, #0
 8018978:	d162      	bne.n	8018a40 <nema_vg_draw_path+0x620>
 801897a:	eeb0 7a48 	vmov.f32	s14, s16
 801897e:	eef0 7a48 	vmov.f32	s15, s16
 8018982:	2e00      	cmp	r6, #0
 8018984:	f43f ae7b 	beq.w	801867e <nema_vg_draw_path+0x25e>
 8018988:	4a2a      	ldr	r2, [pc, #168]	@ (8018a34 <nema_vg_draw_path+0x614>)
 801898a:	ed88 8a00 	vstr	s16, [r8]
 801898e:	edc2 7a00 	vstr	s15, [r2]
 8018992:	4a29      	ldr	r2, [pc, #164]	@ (8018a38 <nema_vg_draw_path+0x618>)
 8018994:	ed82 7a00 	vstr	s14, [r2]
 8018998:	e671      	b.n	801867e <nema_vg_draw_path+0x25e>
 801899a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 801899e:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 80189a2:	f004 f867 	bl	801ca74 <nema_vg_set_error>
 80189a6:	4620      	mov	r0, r4
 80189a8:	b007      	add	sp, #28
 80189aa:	ecbd 8b04 	vpop	{d8-d9}
 80189ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80189b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80189b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80189ba:	f67f ad69 	bls.w	8018490 <nema_vg_draw_path+0x70>
 80189be:	0e03      	lsrs	r3, r0, #24
 80189c0:	ee07 3a10 	vmov	s14, r3
 80189c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80189c8:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 80189cc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80189d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80189d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80189d8:	ee17 3a90 	vmov	r3, s15
 80189dc:	f363 601f 	bfi	r0, r3, #24, #8
 80189e0:	f8cb 0000 	str.w	r0, [fp]
 80189e4:	e598      	b.n	8018518 <nema_vg_draw_path+0xf8>
 80189e6:	f1b8 0f00 	cmp.w	r8, #0
 80189ea:	f040 8206 	bne.w	8018dfa <nema_vg_draw_path+0x9da>
 80189ee:	4b13      	ldr	r3, [pc, #76]	@ (8018a3c <nema_vg_draw_path+0x61c>)
 80189f0:	781a      	ldrb	r2, [r3, #0]
 80189f2:	2a01      	cmp	r2, #1
 80189f4:	f000 81c5 	beq.w	8018d82 <nema_vg_draw_path+0x962>
 80189f8:	4620      	mov	r0, r4
 80189fa:	4629      	mov	r1, r5
 80189fc:	f7fd fe6a 	bl	80166d4 <draw_with_stencil>
 8018a00:	4604      	mov	r4, r0
 8018a02:	2800      	cmp	r0, #0
 8018a04:	f43f ade9 	beq.w	80185da <nema_vg_draw_path+0x1ba>
 8018a08:	e7b2      	b.n	8018970 <nema_vg_draw_path+0x550>
 8018a0a:	2040      	movs	r0, #64	@ 0x40
 8018a0c:	f004 f832 	bl	801ca74 <nema_vg_set_error>
 8018a10:	2440      	movs	r4, #64	@ 0x40
 8018a12:	e5e2      	b.n	80185da <nema_vg_draw_path+0x1ba>
 8018a14:	20082fb4 	.word	0x20082fb4
 8018a18:	20082fb0 	.word	0x20082fb0
 8018a1c:	20082ff0 	.word	0x20082ff0
 8018a20:	20082ff4 	.word	0x20082ff4
 8018a24:	20083054 	.word	0x20083054
 8018a28:	20083030 	.word	0x20083030
 8018a2c:	44bfe000 	.word	0x44bfe000
 8018a30:	c3ff8000 	.word	0xc3ff8000
 8018a34:	20000138 	.word	0x20000138
 8018a38:	2000013c 	.word	0x2000013c
 8018a3c:	20000064 	.word	0x20000064
 8018a40:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8018a44:	f04f 0c00 	mov.w	ip, #0
 8018a48:	48d6      	ldr	r0, [pc, #856]	@ (8018da4 <nema_vg_draw_path+0x984>)
 8018a4a:	4ed7      	ldr	r6, [pc, #860]	@ (8018da8 <nema_vg_draw_path+0x988>)
 8018a4c:	6002      	str	r2, [r0, #0]
 8018a4e:	6032      	str	r2, [r6, #0]
 8018a50:	f8c8 2000 	str.w	r2, [r8]
 8018a54:	7f5a      	ldrb	r2, [r3, #29]
 8018a56:	48d5      	ldr	r0, [pc, #852]	@ (8018dac <nema_vg_draw_path+0x98c>)
 8018a58:	4ed5      	ldr	r6, [pc, #852]	@ (8018db0 <nema_vg_draw_path+0x990>)
 8018a5a:	0792      	lsls	r2, r2, #30
 8018a5c:	f8c0 c000 	str.w	ip, [r0]
 8018a60:	f8c6 c000 	str.w	ip, [r6]
 8018a64:	f57f ae24 	bpl.w	80186b0 <nema_vg_draw_path+0x290>
 8018a68:	f04f 0e00 	mov.w	lr, #0
 8018a6c:	46e0      	mov	r8, ip
 8018a6e:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8018a72:	48d0      	ldr	r0, [pc, #832]	@ (8018db4 <nema_vg_draw_path+0x994>)
 8018a74:	4ad0      	ldr	r2, [pc, #832]	@ (8018db8 <nema_vg_draw_path+0x998>)
 8018a76:	f8c0 e000 	str.w	lr, [r0]
 8018a7a:	f8c2 e000 	str.w	lr, [r2]
 8018a7e:	f8df a340 	ldr.w	sl, [pc, #832]	@ 8018dc0 <nema_vg_draw_path+0x9a0>
 8018a82:	ed9a 0a00 	vldr	s0, [sl]
 8018a86:	edda 7a01 	vldr	s15, [sl, #4]
 8018a8a:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018a8e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018a92:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018a96:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018a9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a9e:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018aa2:	f100 8254 	bmi.w	8018f4e <nema_vg_draw_path+0xb2e>
 8018aa6:	ed9a 0a03 	vldr	s0, [sl, #12]
 8018aaa:	edda 7a04 	vldr	s15, [sl, #16]
 8018aae:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018ab2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018ab6:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018aba:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018abe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ac2:	eeb1 8ac0 	vsqrt.f32	s16, s0
 8018ac6:	f100 8233 	bmi.w	8018f30 <nema_vg_draw_path+0xb10>
 8018aca:	eddf 7abc 	vldr	s15, [pc, #752]	@ 8018dbc <nema_vg_draw_path+0x99c>
 8018ace:	eef4 8ae7 	vcmpe.f32	s17, s15
 8018ad2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ad6:	bfc4      	itt	gt
 8018ad8:	eef1 7a00 	vmovgt.f32	s15, #16	@ 0x40800000  4.0
 8018adc:	eec7 5aa8 	vdivgt.f32	s11, s15, s17
 8018ae0:	eddf 7ab6 	vldr	s15, [pc, #728]	@ 8018dbc <nema_vg_draw_path+0x99c>
 8018ae4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8018ae8:	bfd8      	it	le
 8018aea:	eef1 5a00 	vmovle.f32	s11, #16	@ 0x40800000  4.0
 8018aee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018af2:	edc0 8a00 	vstr	s17, [r0]
 8018af6:	ed82 8a00 	vstr	s16, [r2]
 8018afa:	dd7c      	ble.n	8018bf6 <nema_vg_draw_path+0x7d6>
 8018afc:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8018b00:	eec7 6a88 	vdiv.f32	s13, s15, s16
 8018b04:	e5eb      	b.n	80186de <nema_vg_draw_path+0x2be>
 8018b06:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018b0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b0e:	f63f ae93 	bhi.w	8018838 <nema_vg_draw_path+0x418>
 8018b12:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8018b16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b1a:	f63f ae8d 	bhi.w	8018838 <nema_vg_draw_path+0x418>
 8018b1e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8018b22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b26:	f63f ae87 	bhi.w	8018838 <nema_vg_draw_path+0x418>
 8018b2a:	e4b1      	b.n	8018490 <nema_vg_draw_path+0x70>
 8018b2c:	f8df a290 	ldr.w	sl, [pc, #656]	@ 8018dc0 <nema_vg_draw_path+0x9a0>
 8018b30:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8018b32:	ed9a 0a00 	vldr	s0, [sl]
 8018b36:	edda 7a01 	vldr	s15, [sl, #4]
 8018b3a:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018b3e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018b42:	0792      	lsls	r2, r2, #30
 8018b44:	ee30 0a27 	vadd.f32	s0, s0, s15
 8018b48:	f100 80ad 	bmi.w	8018ca6 <nema_vg_draw_path+0x886>
 8018b4c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018b50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b54:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018b58:	f100 8211 	bmi.w	8018f7e <nema_vg_draw_path+0xb5e>
 8018b5c:	edda 7a03 	vldr	s15, [sl, #12]
 8018b60:	ed9a 0a04 	vldr	s0, [sl, #16]
 8018b64:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018b68:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018b6c:	ee37 0a80 	vadd.f32	s0, s15, s0
 8018b70:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018b74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b78:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8018b7c:	f100 81f6 	bmi.w	8018f6c <nema_vg_draw_path+0xb4c>
 8018b80:	ee68 7a28 	vmul.f32	s15, s16, s17
 8018b84:	ee28 7a09 	vmul.f32	s14, s16, s18
 8018b88:	eef4 7ac7 	vcmpe.f32	s15, s14
 8018b8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b90:	f340 8163 	ble.w	8018e5a <nema_vg_draw_path+0xa3a>
 8018b94:	eeb0 8a67 	vmov.f32	s16, s15
 8018b98:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018b9c:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018ba0:	e4f5      	b.n	801858e <nema_vg_draw_path+0x16e>
 8018ba2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8018ba6:	2000      	movs	r0, #0
 8018ba8:	4e7e      	ldr	r6, [pc, #504]	@ (8018da4 <nema_vg_draw_path+0x984>)
 8018baa:	f8c8 2000 	str.w	r2, [r8]
 8018bae:	6032      	str	r2, [r6, #0]
 8018bb0:	4e7d      	ldr	r6, [pc, #500]	@ (8018da8 <nema_vg_draw_path+0x988>)
 8018bb2:	f8df c1f8 	ldr.w	ip, [pc, #504]	@ 8018dac <nema_vg_draw_path+0x98c>
 8018bb6:	6032      	str	r2, [r6, #0]
 8018bb8:	7f5a      	ldrb	r2, [r3, #29]
 8018bba:	4e7d      	ldr	r6, [pc, #500]	@ (8018db0 <nema_vg_draw_path+0x990>)
 8018bbc:	0792      	lsls	r2, r2, #30
 8018bbe:	f8cc 0000 	str.w	r0, [ip]
 8018bc2:	6030      	str	r0, [r6, #0]
 8018bc4:	f57f ad74 	bpl.w	80186b0 <nema_vg_draw_path+0x290>
 8018bc8:	4680      	mov	r8, r0
 8018bca:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8018bce:	e577      	b.n	80186c0 <nema_vg_draw_path+0x2a0>
 8018bd0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8018bd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018bd8:	f63f ae34 	bhi.w	8018844 <nema_vg_draw_path+0x424>
 8018bdc:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 8018be0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018be4:	f63f ae2e 	bhi.w	8018844 <nema_vg_draw_path+0x424>
 8018be8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8018bec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018bf0:	f63f ae28 	bhi.w	8018844 <nema_vg_draw_path+0x424>
 8018bf4:	e44c      	b.n	8018490 <nema_vg_draw_path+0x70>
 8018bf6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018bfa:	e570      	b.n	80186de <nema_vg_draw_path+0x2be>
 8018bfc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8018bfe:	0792      	lsls	r2, r2, #30
 8018c00:	f53f acc1 	bmi.w	8018586 <nema_vg_draw_path+0x166>
 8018c04:	f8df a1b8 	ldr.w	sl, [pc, #440]	@ 8018dc0 <nema_vg_draw_path+0x9a0>
 8018c08:	ed9a 0a01 	vldr	s0, [sl, #4]
 8018c0c:	edda 7a00 	vldr	s15, [sl]
 8018c10:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018c14:	ee07 0aa7 	vmla.f32	s0, s15, s15
 8018c18:	e798      	b.n	8018b4c <nema_vg_draw_path+0x72c>
 8018c1a:	b2c2      	uxtb	r2, r0
 8018c1c:	ee05 2a10 	vmov	s10, r2
 8018c20:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8018c24:	ee06 2a10 	vmov	s12, r2
 8018c28:	0e02      	lsrs	r2, r0, #24
 8018c2a:	ee06 2a90 	vmov	s13, r2
 8018c2e:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8018c32:	ee07 2a10 	vmov	s14, r2
 8018c36:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8018c3a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018c3e:	ee25 5a27 	vmul.f32	s10, s10, s15
 8018c42:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8018c46:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018c4a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8018c4e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8018c52:	ee26 6a27 	vmul.f32	s12, s12, s15
 8018c56:	eef0 7a65 	vmov.f32	s15, s11
 8018c5a:	eefc 5ac5 	vcvt.u32.f32	s11, s10
 8018c5e:	eefc 6ae6 	vcvt.u32.f32	s13, s13
 8018c62:	edcd 5a01 	vstr	s11, [sp, #4]
 8018c66:	eebc 6ac6 	vcvt.u32.f32	s12, s12
 8018c6a:	ee16 ea90 	vmov	lr, s13
 8018c6e:	eefc 6ac7 	vcvt.u32.f32	s13, s14
 8018c72:	f89d 2004 	ldrb.w	r2, [sp, #4]
 8018c76:	ee16 0a10 	vmov	r0, s12
 8018c7a:	ea42 6e0e 	orr.w	lr, r2, lr, lsl #24
 8018c7e:	ee16 2a90 	vmov	r2, s13
 8018c82:	0200      	lsls	r0, r0, #8
 8018c84:	b280      	uxth	r0, r0
 8018c86:	0412      	lsls	r2, r2, #16
 8018c88:	ea4e 0000 	orr.w	r0, lr, r0
 8018c8c:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8018c90:	4302      	orrs	r2, r0
 8018c92:	eeb0 7a67 	vmov.f32	s14, s15
 8018c96:	eeb0 8a67 	vmov.f32	s16, s15
 8018c9a:	f8cb 2000 	str.w	r2, [fp]
 8018c9e:	2900      	cmp	r1, #0
 8018ca0:	f47f aced 	bne.w	801867e <nema_vg_draw_path+0x25e>
 8018ca4:	e66d      	b.n	8018982 <nema_vg_draw_path+0x562>
 8018ca6:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018cae:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8018cb2:	f100 8176 	bmi.w	8018fa2 <nema_vg_draw_path+0xb82>
 8018cb6:	edda 7a03 	vldr	s15, [sl, #12]
 8018cba:	ed9a 0a04 	vldr	s0, [sl, #16]
 8018cbe:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8018cc2:	ee20 0a00 	vmul.f32	s0, s0, s0
 8018cc6:	ee37 0a80 	vadd.f32	s0, s15, s0
 8018cca:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8018cce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018cd2:	eef1 8ac0 	vsqrt.f32	s17, s0
 8018cd6:	f100 815b 	bmi.w	8018f90 <nema_vg_draw_path+0xb70>
 8018cda:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018cde:	ee86 7a89 	vdiv.f32	s14, s13, s18
 8018ce2:	eec6 7aa8 	vdiv.f32	s15, s13, s17
 8018ce6:	ee27 7a08 	vmul.f32	s14, s14, s16
 8018cea:	ee67 7a88 	vmul.f32	s15, s15, s16
 8018cee:	4a2d      	ldr	r2, [pc, #180]	@ (8018da4 <nema_vg_draw_path+0x984>)
 8018cf0:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018cf4:	ed82 7a00 	vstr	s14, [r2]
 8018cf8:	4a2b      	ldr	r2, [pc, #172]	@ (8018da8 <nema_vg_draw_path+0x988>)
 8018cfa:	eeb0 7a48 	vmov.f32	s14, s16
 8018cfe:	edc2 7a00 	vstr	s15, [r2]
 8018d02:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018d06:	eef0 7a48 	vmov.f32	s15, s16
 8018d0a:	e440      	b.n	801858e <nema_vg_draw_path+0x16e>
 8018d0c:	f104 0160 	add.w	r1, r4, #96	@ 0x60
 8018d10:	482b      	ldr	r0, [pc, #172]	@ (8018dc0 <nema_vg_draw_path+0x9a0>)
 8018d12:	f7f8 fe0b 	bl	801192c <nema_mat3x3_copy>
 8018d16:	f7ff bbe8 	b.w	80184ea <nema_vg_draw_path+0xca>
 8018d1a:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8018d1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d22:	f73f acb8 	bgt.w	8018696 <nema_vg_draw_path+0x276>
 8018d26:	4a1f      	ldr	r2, [pc, #124]	@ (8018da4 <nema_vg_draw_path+0x984>)
 8018d28:	4e21      	ldr	r6, [pc, #132]	@ (8018db0 <nema_vg_draw_path+0x990>)
 8018d2a:	edc2 6a00 	vstr	s13, [r2]
 8018d2e:	4a1e      	ldr	r2, [pc, #120]	@ (8018da8 <nema_vg_draw_path+0x988>)
 8018d30:	481e      	ldr	r0, [pc, #120]	@ (8018dac <nema_vg_draw_path+0x98c>)
 8018d32:	edc2 6a00 	vstr	s13, [r2]
 8018d36:	f895 20dd 	ldrb.w	r2, [r5, #221]	@ 0xdd
 8018d3a:	edc8 6a00 	vstr	s13, [r8]
 8018d3e:	f8c6 c000 	str.w	ip, [r6]
 8018d42:	f8c0 c000 	str.w	ip, [r0]
 8018d46:	2a00      	cmp	r2, #0
 8018d48:	f47f acb2 	bne.w	80186b0 <nema_vg_draw_path+0x290>
 8018d4c:	f893 2048 	ldrb.w	r2, [r3, #72]	@ 0x48
 8018d50:	2a01      	cmp	r2, #1
 8018d52:	d049      	beq.n	8018de8 <nema_vg_draw_path+0x9c8>
 8018d54:	2201      	movs	r2, #1
 8018d56:	ed98 6a00 	vldr	s12, [r8]
 8018d5a:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8018d5e:	6002      	str	r2, [r0, #0]
 8018d60:	4690      	mov	r8, r2
 8018d62:	ee26 6a26 	vmul.f32	s12, s12, s13
 8018d66:	e4ab      	b.n	80186c0 <nema_vg_draw_path+0x2a0>
 8018d68:	eef1 6a47 	vneg.f32	s13, s14
 8018d6c:	eef4 5ae6 	vcmpe.f32	s11, s13
 8018d70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d74:	f53f ac68 	bmi.w	8018648 <nema_vg_draw_path+0x228>
 8018d78:	eddf 5a12 	vldr	s11, [pc, #72]	@ 8018dc4 <nema_vg_draw_path+0x9a4>
 8018d7c:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8018d80:	e46d      	b.n	801865e <nema_vg_draw_path+0x23e>
 8018d82:	685b      	ldr	r3, [r3, #4]
 8018d84:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8018d88:	f000 80c7 	beq.w	8018f1a <nema_vg_draw_path+0xafa>
 8018d8c:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 8018d90:	f47f ae32 	bne.w	80189f8 <nema_vg_draw_path+0x5d8>
 8018d94:	2000      	movs	r0, #0
 8018d96:	f7f9 f93d 	bl	8012014 <nema_enable_tiling_2x2>
 8018d9a:	2204      	movs	r2, #4
 8018d9c:	683b      	ldr	r3, [r7, #0]
 8018d9e:	77da      	strb	r2, [r3, #31]
 8018da0:	e62a      	b.n	80189f8 <nema_vg_draw_path+0x5d8>
 8018da2:	bf00      	nop
 8018da4:	20000138 	.word	0x20000138
 8018da8:	2000013c 	.word	0x2000013c
 8018dac:	20082fb0 	.word	0x20082fb0
 8018db0:	20082fb4 	.word	0x20082fb4
 8018db4:	20082ff0 	.word	0x20082ff0
 8018db8:	20082ff4 	.word	0x20082ff4
 8018dbc:	3a83126f 	.word	0x3a83126f
 8018dc0:	20083030 	.word	0x20083030
 8018dc4:	3727c5ac 	.word	0x3727c5ac
 8018dc8:	f1ba 0f01 	cmp.w	sl, #1
 8018dcc:	d0be      	beq.n	8018d4c <nema_vg_draw_path+0x92c>
 8018dce:	f240 5201 	movw	r2, #1281	@ 0x501
 8018dd2:	fa1f fa8a 	uxth.w	sl, sl
 8018dd6:	4592      	cmp	sl, r2
 8018dd8:	d106      	bne.n	8018de8 <nema_vg_draw_path+0x9c8>
 8018dda:	f8db 2000 	ldr.w	r2, [fp]
 8018dde:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8018de2:	f1b2 4f7f 	cmp.w	r2, #4278190080	@ 0xff000000
 8018de6:	d0b1      	beq.n	8018d4c <nema_vg_draw_path+0x92c>
 8018de8:	ed98 6a00 	vldr	s12, [r8]
 8018dec:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8018df0:	f04f 0800 	mov.w	r8, #0
 8018df4:	ee26 6a27 	vmul.f32	s12, s12, s15
 8018df8:	e462      	b.n	80186c0 <nema_vg_draw_path+0x2a0>
 8018dfa:	f240 5201 	movw	r2, #1281	@ 0x501
 8018dfe:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8018e00:	b283      	uxth	r3, r0
 8018e02:	4293      	cmp	r3, r2
 8018e04:	d03a      	beq.n	8018e7c <nema_vg_draw_path+0xa5c>
 8018e06:	f04f 33ff 	mov.w	r3, #4294967295
 8018e0a:	f040 7080 	orr.w	r0, r0, #16777216	@ 0x1000000
 8018e0e:	461a      	mov	r2, r3
 8018e10:	2100      	movs	r1, #0
 8018e12:	f005 f905 	bl	801e020 <nema_set_blend>
 8018e16:	f8db 0000 	ldr.w	r0, [fp]
 8018e1a:	f7f9 fabb 	bl	8012394 <nema_set_raster_color>
 8018e1e:	f899 3000 	ldrb.w	r3, [r9]
 8018e22:	4d64      	ldr	r5, [pc, #400]	@ (8018fb4 <nema_vg_draw_path+0xb94>)
 8018e24:	702b      	strb	r3, [r5, #0]
 8018e26:	2b00      	cmp	r3, #0
 8018e28:	d14b      	bne.n	8018ec2 <nema_vg_draw_path+0xaa2>
 8018e2a:	6833      	ldr	r3, [r6, #0]
 8018e2c:	4620      	mov	r0, r4
 8018e2e:	b9e3      	cbnz	r3, 8018e6a <nema_vg_draw_path+0xa4a>
 8018e30:	f7fa fc62 	bl	80136f8 <stroke_thin_path>
 8018e34:	4604      	mov	r4, r0
 8018e36:	b9e8      	cbnz	r0, 8018e74 <nema_vg_draw_path+0xa54>
 8018e38:	782b      	ldrb	r3, [r5, #0]
 8018e3a:	2b00      	cmp	r3, #0
 8018e3c:	f43f ab28 	beq.w	8018490 <nema_vg_draw_path+0x70>
 8018e40:	2101      	movs	r1, #1
 8018e42:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8018e46:	f004 ffc9 	bl	801dddc <nema_cl_add_cmd>
 8018e4a:	2300      	movs	r3, #0
 8018e4c:	782a      	ldrb	r2, [r5, #0]
 8018e4e:	461c      	mov	r4, r3
 8018e50:	702b      	strb	r3, [r5, #0]
 8018e52:	f889 2000 	strb.w	r2, [r9]
 8018e56:	f7ff bbc0 	b.w	80185da <nema_vg_draw_path+0x1ba>
 8018e5a:	eeb0 8a47 	vmov.f32	s16, s14
 8018e5e:	f8d3 a024 	ldr.w	sl, [r3, #36]	@ 0x24
 8018e62:	f893 c01c 	ldrb.w	ip, [r3, #28]
 8018e66:	f7ff bb92 	b.w	801858e <nema_vg_draw_path+0x16e>
 8018e6a:	f7fb fc09 	bl	8014680 <stroke_path>
 8018e6e:	4604      	mov	r4, r0
 8018e70:	2800      	cmp	r0, #0
 8018e72:	d0e1      	beq.n	8018e38 <nema_vg_draw_path+0xa18>
 8018e74:	f003 fdfe 	bl	801ca74 <nema_vg_set_error>
 8018e78:	4620      	mov	r0, r4
 8018e7a:	e579      	b.n	8018970 <nema_vg_draw_path+0x550>
 8018e7c:	2004      	movs	r0, #4
 8018e7e:	f004 ff51 	bl	801dd24 <nema_cl_get_space>
 8018e82:	2800      	cmp	r0, #0
 8018e84:	d050      	beq.n	8018f28 <nema_vg_draw_path+0xb08>
 8018e86:	f44f 7ce8 	mov.w	ip, #464	@ 0x1d0
 8018e8a:	f44f 778e 	mov.w	r7, #284	@ 0x11c
 8018e8e:	f44f 7596 	mov.w	r5, #300	@ 0x12c
 8018e92:	f44f 718c 	mov.w	r1, #280	@ 0x118
 8018e96:	f04f 4210 	mov.w	r2, #2415919104	@ 0x90000000
 8018e9a:	f8db 3000 	ldr.w	r3, [fp]
 8018e9e:	e9c0 c800 	strd	ip, r8, [r0]
 8018ea2:	6143      	str	r3, [r0, #20]
 8018ea4:	4b44      	ldr	r3, [pc, #272]	@ (8018fb8 <nema_vg_draw_path+0xb98>)
 8018ea6:	6087      	str	r7, [r0, #8]
 8018ea8:	6105      	str	r5, [r0, #16]
 8018eaa:	e9c0 1206 	strd	r1, r2, [r0, #24]
 8018eae:	60c3      	str	r3, [r0, #12]
 8018eb0:	e7b5      	b.n	8018e1e <nema_vg_draw_path+0x9fe>
 8018eb2:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 8018eb6:	f003 fddd 	bl	801ca74 <nema_vg_set_error>
 8018eba:	f44f 4480 	mov.w	r4, #16384	@ 0x4000
 8018ebe:	f7ff bb8c 	b.w	80185da <nema_vg_draw_path+0x1ba>
 8018ec2:	2007      	movs	r0, #7
 8018ec4:	f004 ff2e 	bl	801dd24 <nema_cl_get_space>
 8018ec8:	b318      	cbz	r0, 8018f12 <nema_vg_draw_path+0xaf2>
 8018eca:	f44f 725d 	mov.w	r2, #884	@ 0x374
 8018ece:	6002      	str	r2, [r0, #0]
 8018ed0:	f44f 725a 	mov.w	r2, #872	@ 0x368
 8018ed4:	4b39      	ldr	r3, [pc, #228]	@ (8018fbc <nema_vg_draw_path+0xb9c>)
 8018ed6:	6959      	ldr	r1, [r3, #20]
 8018ed8:	6082      	str	r2, [r0, #8]
 8018eda:	f44f 7258 	mov.w	r2, #864	@ 0x360
 8018ede:	6041      	str	r1, [r0, #4]
 8018ee0:	6899      	ldr	r1, [r3, #8]
 8018ee2:	6102      	str	r2, [r0, #16]
 8018ee4:	f44f 7259 	mov.w	r2, #868	@ 0x364
 8018ee8:	60c1      	str	r1, [r0, #12]
 8018eea:	6819      	ldr	r1, [r3, #0]
 8018eec:	6182      	str	r2, [r0, #24]
 8018eee:	f44f 725b 	mov.w	r2, #876	@ 0x36c
 8018ef2:	6141      	str	r1, [r0, #20]
 8018ef4:	6859      	ldr	r1, [r3, #4]
 8018ef6:	6202      	str	r2, [r0, #32]
 8018ef8:	f44f 725c 	mov.w	r2, #880	@ 0x370
 8018efc:	61c1      	str	r1, [r0, #28]
 8018efe:	68d9      	ldr	r1, [r3, #12]
 8018f00:	6282      	str	r2, [r0, #40]	@ 0x28
 8018f02:	6241      	str	r1, [r0, #36]	@ 0x24
 8018f04:	6919      	ldr	r1, [r3, #16]
 8018f06:	f44f 7262 	mov.w	r2, #904	@ 0x388
 8018f0a:	2300      	movs	r3, #0
 8018f0c:	e9c0 230c 	strd	r2, r3, [r0, #48]	@ 0x30
 8018f10:	62c1      	str	r1, [r0, #44]	@ 0x2c
 8018f12:	2300      	movs	r3, #0
 8018f14:	f889 3000 	strb.w	r3, [r9]
 8018f18:	e787      	b.n	8018e2a <nema_vg_draw_path+0xa0a>
 8018f1a:	2000      	movs	r0, #0
 8018f1c:	f7f9 f866 	bl	8011fec <nema_enable_tiling>
 8018f20:	2203      	movs	r2, #3
 8018f22:	683b      	ldr	r3, [r7, #0]
 8018f24:	77da      	strb	r2, [r3, #31]
 8018f26:	e567      	b.n	80189f8 <nema_vg_draw_path+0x5d8>
 8018f28:	f44f 7400 	mov.w	r4, #512	@ 0x200
 8018f2c:	4620      	mov	r0, r4
 8018f2e:	e51f      	b.n	8018970 <nema_vg_draw_path+0x550>
 8018f30:	e9cd 0204 	strd	r0, r2, [sp, #16]
 8018f34:	9103      	str	r1, [sp, #12]
 8018f36:	ed8d 6a02 	vstr	s12, [sp, #8]
 8018f3a:	9301      	str	r3, [sp, #4]
 8018f3c:	f018 f978 	bl	8031230 <sqrtf>
 8018f40:	e9dd 0204 	ldrd	r0, r2, [sp, #16]
 8018f44:	9903      	ldr	r1, [sp, #12]
 8018f46:	ed9d 6a02 	vldr	s12, [sp, #8]
 8018f4a:	9b01      	ldr	r3, [sp, #4]
 8018f4c:	e5bd      	b.n	8018aca <nema_vg_draw_path+0x6aa>
 8018f4e:	e9cd 0204 	strd	r0, r2, [sp, #16]
 8018f52:	9103      	str	r1, [sp, #12]
 8018f54:	ed8d 6a02 	vstr	s12, [sp, #8]
 8018f58:	9301      	str	r3, [sp, #4]
 8018f5a:	f018 f969 	bl	8031230 <sqrtf>
 8018f5e:	e9dd 0204 	ldrd	r0, r2, [sp, #16]
 8018f62:	9903      	ldr	r1, [sp, #12]
 8018f64:	ed9d 6a02 	vldr	s12, [sp, #8]
 8018f68:	9b01      	ldr	r3, [sp, #4]
 8018f6a:	e59c      	b.n	8018aa6 <nema_vg_draw_path+0x686>
 8018f6c:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018f70:	9001      	str	r0, [sp, #4]
 8018f72:	f018 f95d 	bl	8031230 <sqrtf>
 8018f76:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018f7a:	9801      	ldr	r0, [sp, #4]
 8018f7c:	e600      	b.n	8018b80 <nema_vg_draw_path+0x760>
 8018f7e:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018f82:	9001      	str	r0, [sp, #4]
 8018f84:	f018 f954 	bl	8031230 <sqrtf>
 8018f88:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018f8c:	9801      	ldr	r0, [sp, #4]
 8018f8e:	e5e5      	b.n	8018b5c <nema_vg_draw_path+0x73c>
 8018f90:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018f94:	9001      	str	r0, [sp, #4]
 8018f96:	f018 f94b 	bl	8031230 <sqrtf>
 8018f9a:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018f9e:	9801      	ldr	r0, [sp, #4]
 8018fa0:	e69b      	b.n	8018cda <nema_vg_draw_path+0x8ba>
 8018fa2:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018fa6:	9001      	str	r0, [sp, #4]
 8018fa8:	f018 f942 	bl	8031230 <sqrtf>
 8018fac:	e9dd 3102 	ldrd	r3, r1, [sp, #8]
 8018fb0:	9801      	ldr	r0, [sp, #4]
 8018fb2:	e680      	b.n	8018cb6 <nema_vg_draw_path+0x896>
 8018fb4:	20082ff8 	.word	0x20082ff8
 8018fb8:	941fb414 	.word	0x941fb414
 8018fbc:	20083030 	.word	0x20083030

08018fc0 <nema_vg_init_stencil_pool>:
 8018fc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018fc2:	460f      	mov	r7, r1
 8018fc4:	4606      	mov	r6, r0
 8018fc6:	b091      	sub	sp, #68	@ 0x44
 8018fc8:	ac04      	add	r4, sp, #16
 8018fca:	4613      	mov	r3, r2
 8018fcc:	4601      	mov	r1, r0
 8018fce:	463a      	mov	r2, r7
 8018fd0:	4620      	mov	r0, r4
 8018fd2:	f003 fcc1 	bl	801c958 <stencil_buffer_create>
 8018fd6:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8018fda:	ad0c      	add	r5, sp, #48	@ 0x30
 8018fdc:	ac08      	add	r4, sp, #32
 8018fde:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8018fe2:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8018fe6:	f003 fc67 	bl	801c8b8 <context_reset>
 8018fea:	2216      	movs	r2, #22
 8018fec:	2101      	movs	r1, #1
 8018fee:	4821      	ldr	r0, [pc, #132]	@ (8019074 <nema_vg_init_stencil_pool+0xb4>)
 8018ff0:	f7f9 f952 	bl	8012298 <nema_load_frag_shader>
 8018ff4:	2217      	movs	r2, #23
 8018ff6:	2101      	movs	r1, #1
 8018ff8:	481f      	ldr	r0, [pc, #124]	@ (8019078 <nema_vg_init_stencil_pool+0xb8>)
 8018ffa:	f7f9 f94d 	bl	8012298 <nema_load_frag_shader>
 8018ffe:	2101      	movs	r1, #1
 8019000:	f44f 7062 	mov.w	r0, #904	@ 0x388
 8019004:	f004 feea 	bl	801dddc <nema_cl_add_cmd>
 8019008:	2215      	movs	r2, #21
 801900a:	2101      	movs	r1, #1
 801900c:	481b      	ldr	r0, [pc, #108]	@ (801907c <nema_vg_init_stencil_pool+0xbc>)
 801900e:	f7f9 f943 	bl	8012298 <nema_load_frag_shader>
 8019012:	2214      	movs	r2, #20
 8019014:	2101      	movs	r1, #1
 8019016:	481a      	ldr	r0, [pc, #104]	@ (8019080 <nema_vg_init_stencil_pool+0xc0>)
 8019018:	f7f9 f93e 	bl	8012298 <nema_load_frag_shader>
 801901c:	4c19      	ldr	r4, [pc, #100]	@ (8019084 <nema_vg_init_stencil_pool+0xc4>)
 801901e:	4b1a      	ldr	r3, [pc, #104]	@ (8019088 <nema_vg_init_stencil_pool+0xc8>)
 8019020:	a802      	add	r0, sp, #8
 8019022:	2213      	movs	r2, #19
 8019024:	2101      	movs	r1, #1
 8019026:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801902a:	f7f9 f935 	bl	8012298 <nema_load_frag_shader>
 801902e:	ab10      	add	r3, sp, #64	@ 0x40
 8019030:	e913 0003 	ldmdb	r3, {r0, r1}
 8019034:	e895 000c 	ldmia.w	r5, {r2, r3}
 8019038:	e88d 0003 	stmia.w	sp, {r0, r1}
 801903c:	4639      	mov	r1, r7
 801903e:	4630      	mov	r0, r6
 8019040:	f003 fc9e 	bl	801c980 <stencil_buffer_set>
 8019044:	f003 fcd8 	bl	801c9f8 <lut_buffer_create>
 8019048:	f004 fad4 	bl	801d5f4 <tsvg_init>
 801904c:	4639      	mov	r1, r7
 801904e:	4630      	mov	r0, r6
 8019050:	f004 fac6 	bl	801d5e0 <set_tsvg_text_max_size>
 8019054:	f003 fc7c 	bl	801c950 <nema_vg_get_context>
 8019058:	4c0c      	ldr	r4, [pc, #48]	@ (801908c <nema_vg_init_stencil_pool+0xcc>)
 801905a:	6020      	str	r0, [r4, #0]
 801905c:	f003 fcc6 	bl	801c9ec <nema_vg_get_stencil>
 8019060:	6822      	ldr	r2, [r4, #0]
 8019062:	490b      	ldr	r1, [pc, #44]	@ (8019090 <nema_vg_init_stencil_pool+0xd0>)
 8019064:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8019066:	6008      	str	r0, [r1, #0]
 8019068:	f043 0320 	orr.w	r3, r3, #32
 801906c:	6313      	str	r3, [r2, #48]	@ 0x30
 801906e:	b011      	add	sp, #68	@ 0x44
 8019070:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019072:	bf00      	nop
 8019074:	08035d88 	.word	0x08035d88
 8019078:	08035da0 	.word	0x08035da0
 801907c:	08035d98 	.word	0x08035d98
 8019080:	08035d90 	.word	0x08035d90
 8019084:	0a980002 	.word	0x0a980002
 8019088:	8081a046 	.word	0x8081a046
 801908c:	20082fac 	.word	0x20082fac
 8019090:	20083054 	.word	0x20083054

08019094 <points_coincide>:
 8019094:	edd0 7a00 	vldr	s15, [r0]
 8019098:	ed91 7a00 	vldr	s14, [r1]
 801909c:	ee77 6ac7 	vsub.f32	s13, s15, s14
 80190a0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80190a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190a8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80190ac:	bf48      	it	mi
 80190ae:	eef1 6a66 	vnegmi.f32	s13, s13
 80190b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190b6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80190ba:	bf4c      	ite	mi
 80190bc:	eeb1 6a67 	vnegmi.f32	s12, s15
 80190c0:	eeb0 6a67 	vmovpl.f32	s12, s15
 80190c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190c8:	d439      	bmi.n	801913e <points_coincide+0xaa>
 80190ca:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80190ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190d2:	dc3b      	bgt.n	801914c <points_coincide+0xb8>
 80190d4:	eddf 7a2e 	vldr	s15, [pc, #184]	@ 8019190 <points_coincide+0xfc>
 80190d8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80190dc:	eef4 6ae7 	vcmpe.f32	s13, s15
 80190e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190e4:	d840      	bhi.n	8019168 <points_coincide+0xd4>
 80190e6:	edd0 7a01 	vldr	s15, [r0, #4]
 80190ea:	ed91 7a01 	vldr	s14, [r1, #4]
 80190ee:	ee77 6ac7 	vsub.f32	s13, s15, s14
 80190f2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80190f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80190fe:	bf48      	it	mi
 8019100:	eef1 6a66 	vnegmi.f32	s13, s13
 8019104:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019108:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801910c:	bf4c      	ite	mi
 801910e:	eeb1 6a67 	vnegmi.f32	s12, s15
 8019112:	eeb0 6a67 	vmovpl.f32	s12, s15
 8019116:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801911a:	d427      	bmi.n	801916c <points_coincide+0xd8>
 801911c:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8019120:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019124:	dc29      	bgt.n	801917a <points_coincide+0xe6>
 8019126:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8019190 <points_coincide+0xfc>
 801912a:	ee67 7a27 	vmul.f32	s15, s14, s15
 801912e:	eef4 6ae7 	vcmpe.f32	s13, s15
 8019132:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019136:	bf94      	ite	ls
 8019138:	2001      	movls	r0, #1
 801913a:	2000      	movhi	r0, #0
 801913c:	4770      	bx	lr
 801913e:	eeb1 7a47 	vneg.f32	s14, s14
 8019142:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019146:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801914a:	d5c3      	bpl.n	80190d4 <points_coincide+0x40>
 801914c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019150:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019154:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8019190 <points_coincide+0xfc>
 8019158:	d5be      	bpl.n	80190d8 <points_coincide+0x44>
 801915a:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 801915e:	eef4 6ae7 	vcmpe.f32	s13, s15
 8019162:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019166:	d9be      	bls.n	80190e6 <points_coincide+0x52>
 8019168:	2000      	movs	r0, #0
 801916a:	4770      	bx	lr
 801916c:	eeb1 7a47 	vneg.f32	s14, s14
 8019170:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019178:	d5d5      	bpl.n	8019126 <points_coincide+0x92>
 801917a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801917e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019182:	ed9f 7a03 	vldr	s14, [pc, #12]	@ 8019190 <points_coincide+0xfc>
 8019186:	d5d0      	bpl.n	801912a <points_coincide+0x96>
 8019188:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 801918c:	e7cf      	b.n	801912e <points_coincide+0x9a>
 801918e:	bf00      	nop
 8019190:	3727c5ac 	.word	0x3727c5ac

08019194 <add_last_point>:
 8019194:	b4f0      	push	{r4, r5, r6, r7}
 8019196:	4b2b      	ldr	r3, [pc, #172]	@ (8019244 <add_last_point+0xb0>)
 8019198:	b082      	sub	sp, #8
 801919a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801919c:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 80191a0:	d022      	beq.n	80191e8 <add_last_point+0x54>
 80191a2:	f240 11ff 	movw	r1, #511	@ 0x1ff
 80191a6:	428a      	cmp	r2, r1
 80191a8:	d029      	beq.n	80191fe <add_last_point+0x6a>
 80191aa:	4c27      	ldr	r4, [pc, #156]	@ (8019248 <add_last_point+0xb4>)
 80191ac:	695a      	ldr	r2, [r3, #20]
 80191ae:	6919      	ldr	r1, [r3, #16]
 80191b0:	6826      	ldr	r6, [r4, #0]
 80191b2:	1c57      	adds	r7, r2, #1
 80191b4:	1c8d      	adds	r5, r1, #2
 80191b6:	bb46      	cbnz	r6, 801920a <add_last_point+0x76>
 80191b8:	681e      	ldr	r6, [r3, #0]
 80191ba:	4296      	cmp	r6, r2
 80191bc:	d936      	bls.n	801922c <add_last_point+0x98>
 80191be:	685e      	ldr	r6, [r3, #4]
 80191c0:	f040 0002 	orr.w	r0, r0, #2
 80191c4:	615f      	str	r7, [r3, #20]
 80191c6:	689f      	ldr	r7, [r3, #8]
 80191c8:	54b0      	strb	r0, [r6, r2]
 80191ca:	1c4a      	adds	r2, r1, #1
 80191cc:	42ba      	cmp	r2, r7
 80191ce:	d224      	bcs.n	801921a <add_last_point+0x86>
 80191d0:	2000      	movs	r0, #0
 80191d2:	68da      	ldr	r2, [r3, #12]
 80191d4:	611d      	str	r5, [r3, #16]
 80191d6:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 80191da:	ed81 0a00 	vstr	s0, [r1]
 80191de:	edc1 0a01 	vstr	s1, [r1, #4]
 80191e2:	b002      	add	sp, #8
 80191e4:	bcf0      	pop	{r4, r5, r6, r7}
 80191e6:	4770      	bx	lr
 80191e8:	4917      	ldr	r1, [pc, #92]	@ (8019248 <add_last_point+0xb4>)
 80191ea:	695a      	ldr	r2, [r3, #20]
 80191ec:	680d      	ldr	r5, [r1, #0]
 80191ee:	1c54      	adds	r4, r2, #1
 80191f0:	b98d      	cbnz	r5, 8019216 <add_last_point+0x82>
 80191f2:	681d      	ldr	r5, [r3, #0]
 80191f4:	4295      	cmp	r5, r2
 80191f6:	d91f      	bls.n	8019238 <add_last_point+0xa4>
 80191f8:	6859      	ldr	r1, [r3, #4]
 80191fa:	615c      	str	r4, [r3, #20]
 80191fc:	5488      	strb	r0, [r1, r2]
 80191fe:	2200      	movs	r2, #0
 8019200:	2000      	movs	r0, #0
 8019202:	625a      	str	r2, [r3, #36]	@ 0x24
 8019204:	b002      	add	sp, #8
 8019206:	bcf0      	pop	{r4, r5, r6, r7}
 8019208:	4770      	bx	lr
 801920a:	615f      	str	r7, [r3, #20]
 801920c:	2000      	movs	r0, #0
 801920e:	611d      	str	r5, [r3, #16]
 8019210:	b002      	add	sp, #8
 8019212:	bcf0      	pop	{r4, r5, r6, r7}
 8019214:	4770      	bx	lr
 8019216:	615c      	str	r4, [r3, #20]
 8019218:	e7f1      	b.n	80191fe <add_last_point+0x6a>
 801921a:	2102      	movs	r1, #2
 801921c:	2201      	movs	r2, #1
 801921e:	2000      	movs	r0, #0
 8019220:	611d      	str	r5, [r3, #16]
 8019222:	6299      	str	r1, [r3, #40]	@ 0x28
 8019224:	6022      	str	r2, [r4, #0]
 8019226:	b002      	add	sp, #8
 8019228:	bcf0      	pop	{r4, r5, r6, r7}
 801922a:	4770      	bx	lr
 801922c:	2102      	movs	r1, #2
 801922e:	2201      	movs	r2, #1
 8019230:	615f      	str	r7, [r3, #20]
 8019232:	6299      	str	r1, [r3, #40]	@ 0x28
 8019234:	6022      	str	r2, [r4, #0]
 8019236:	e7e9      	b.n	801920c <add_last_point+0x78>
 8019238:	2002      	movs	r0, #2
 801923a:	2201      	movs	r2, #1
 801923c:	615c      	str	r4, [r3, #20]
 801923e:	6298      	str	r0, [r3, #40]	@ 0x28
 8019240:	600a      	str	r2, [r1, #0]
 8019242:	e7dc      	b.n	80191fe <add_last_point+0x6a>
 8019244:	20083154 	.word	0x20083154
 8019248:	2008314c 	.word	0x2008314c

0801924c <calc_move_geometry>:
 801924c:	b4f0      	push	{r4, r5, r6, r7}
 801924e:	4b2b      	ldr	r3, [pc, #172]	@ (80192fc <calc_move_geometry+0xb0>)
 8019250:	482b      	ldr	r0, [pc, #172]	@ (8019300 <calc_move_geometry+0xb4>)
 8019252:	ed93 7a00 	vldr	s14, [r3]
 8019256:	eeb4 0a47 	vcmp.f32	s0, s14
 801925a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801925e:	4b29      	ldr	r3, [pc, #164]	@ (8019304 <calc_move_geometry+0xb8>)
 8019260:	bf48      	it	mi
 8019262:	eeb0 0a47 	vmovmi.f32	s0, s14
 8019266:	edd3 7a00 	vldr	s15, [r3]
 801926a:	eef4 7a40 	vcmp.f32	s15, s0
 801926e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019272:	eef4 0a47 	vcmp.f32	s1, s14
 8019276:	bf48      	it	mi
 8019278:	eeb0 0a67 	vmovmi.f32	s0, s15
 801927c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019280:	bf48      	it	mi
 8019282:	eef0 0a47 	vmovmi.f32	s1, s14
 8019286:	eef4 7a60 	vcmp.f32	s15, s1
 801928a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801928e:	4b1e      	ldr	r3, [pc, #120]	@ (8019308 <calc_move_geometry+0xbc>)
 8019290:	6806      	ldr	r6, [r0, #0]
 8019292:	e9d3 1204 	ldrd	r1, r2, [r3, #16]
 8019296:	b082      	sub	sp, #8
 8019298:	bf48      	it	mi
 801929a:	eef0 0a67 	vmovmi.f32	s1, s15
 801929e:	1c55      	adds	r5, r2, #1
 80192a0:	1c8c      	adds	r4, r1, #2
 80192a2:	b9b6      	cbnz	r6, 80192d2 <calc_move_geometry+0x86>
 80192a4:	681e      	ldr	r6, [r3, #0]
 80192a6:	4296      	cmp	r6, r2
 80192a8:	d921      	bls.n	80192ee <calc_move_geometry+0xa2>
 80192aa:	2601      	movs	r6, #1
 80192ac:	685f      	ldr	r7, [r3, #4]
 80192ae:	615d      	str	r5, [r3, #20]
 80192b0:	689d      	ldr	r5, [r3, #8]
 80192b2:	54be      	strb	r6, [r7, r2]
 80192b4:	198a      	adds	r2, r1, r6
 80192b6:	42aa      	cmp	r2, r5
 80192b8:	d211      	bcs.n	80192de <calc_move_geometry+0x92>
 80192ba:	2000      	movs	r0, #0
 80192bc:	68da      	ldr	r2, [r3, #12]
 80192be:	611c      	str	r4, [r3, #16]
 80192c0:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 80192c4:	ed81 0a00 	vstr	s0, [r1]
 80192c8:	edc1 0a01 	vstr	s1, [r1, #4]
 80192cc:	b002      	add	sp, #8
 80192ce:	bcf0      	pop	{r4, r5, r6, r7}
 80192d0:	4770      	bx	lr
 80192d2:	615d      	str	r5, [r3, #20]
 80192d4:	2000      	movs	r0, #0
 80192d6:	611c      	str	r4, [r3, #16]
 80192d8:	b002      	add	sp, #8
 80192da:	bcf0      	pop	{r4, r5, r6, r7}
 80192dc:	4770      	bx	lr
 80192de:	2202      	movs	r2, #2
 80192e0:	6006      	str	r6, [r0, #0]
 80192e2:	2000      	movs	r0, #0
 80192e4:	611c      	str	r4, [r3, #16]
 80192e6:	629a      	str	r2, [r3, #40]	@ 0x28
 80192e8:	b002      	add	sp, #8
 80192ea:	bcf0      	pop	{r4, r5, r6, r7}
 80192ec:	4770      	bx	lr
 80192ee:	2102      	movs	r1, #2
 80192f0:	2201      	movs	r2, #1
 80192f2:	615d      	str	r5, [r3, #20]
 80192f4:	6299      	str	r1, [r3, #40]	@ 0x28
 80192f6:	6002      	str	r2, [r0, #0]
 80192f8:	e7ec      	b.n	80192d4 <calc_move_geometry+0x88>
 80192fa:	bf00      	nop
 80192fc:	20000144 	.word	0x20000144
 8019300:	2008314c 	.word	0x2008314c
 8019304:	20000140 	.word	0x20000140
 8019308:	20083154 	.word	0x20083154

0801930c <calc_line_geometry>:
 801930c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019310:	ed2d 8b08 	vpush	{d8-d11}
 8019314:	4b6e      	ldr	r3, [pc, #440]	@ (80194d0 <calc_line_geometry+0x1c4>)
 8019316:	b097      	sub	sp, #92	@ 0x5c
 8019318:	ed93 5a00 	vldr	s10, [r3]
 801931c:	eeb4 5ac0 	vcmpe.f32	s10, s0
 8019320:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019324:	4b6b      	ldr	r3, [pc, #428]	@ (80194d4 <calc_line_geometry+0x1c8>)
 8019326:	ed8d 0a02 	vstr	s0, [sp, #8]
 801932a:	edcd 0a03 	vstr	s1, [sp, #12]
 801932e:	ed8d 1a00 	vstr	s2, [sp]
 8019332:	edcd 1a01 	vstr	s3, [sp, #4]
 8019336:	edd3 5a00 	vldr	s11, [r3]
 801933a:	d405      	bmi.n	8019348 <calc_line_geometry+0x3c>
 801933c:	eeb4 5ae0 	vcmpe.f32	s10, s1
 8019340:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019344:	f140 824a 	bpl.w	80197dc <calc_line_geometry+0x4d0>
 8019348:	eeb4 5ac1 	vcmpe.f32	s10, s2
 801934c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019350:	f100 80ca 	bmi.w	80194e8 <calc_line_geometry+0x1dc>
 8019354:	eeb4 5ae1 	vcmpe.f32	s10, s3
 8019358:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801935c:	f100 80c4 	bmi.w	80194e8 <calc_line_geometry+0x1dc>
 8019360:	2201      	movs	r2, #1
 8019362:	eeb4 1ae5 	vcmpe.f32	s2, s11
 8019366:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801936a:	f100 824f 	bmi.w	801980c <calc_line_geometry+0x500>
 801936e:	eef4 1ae5 	vcmpe.f32	s3, s11
 8019372:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019376:	f100 8249 	bmi.w	801980c <calc_line_geometry+0x500>
 801937a:	2400      	movs	r4, #0
 801937c:	ab12      	add	r3, sp, #72	@ 0x48
 801937e:	9412      	str	r4, [sp, #72]	@ 0x48
 8019380:	e9c3 4401 	strd	r4, r4, [r3, #4]
 8019384:	60dc      	str	r4, [r3, #12]
 8019386:	2a00      	cmp	r2, #0
 8019388:	f000 83de 	beq.w	8019b48 <calc_line_geometry+0x83c>
 801938c:	ee31 3ae0 	vsub.f32	s6, s3, s1
 8019390:	ee70 9a65 	vsub.f32	s19, s0, s11
 8019394:	ee71 2a40 	vsub.f32	s5, s2, s0
 8019398:	ee30 8ae5 	vsub.f32	s16, s1, s11
 801939c:	ee35 2a65 	vsub.f32	s4, s10, s11
 80193a0:	eef1 4a43 	vneg.f32	s9, s6
 80193a4:	ee75 5ae5 	vsub.f32	s11, s11, s11
 80193a8:	ee24 baa9 	vmul.f32	s22, s9, s19
 80193ac:	ee62 8a88 	vmul.f32	s17, s5, s16
 80193b0:	ee62 ba43 	vnmul.f32	s23, s4, s6
 80193b4:	ee62 3aa5 	vmul.f32	s7, s5, s11
 80193b8:	ee7b aa28 	vadd.f32	s21, s22, s17
 80193bc:	ee73 3aab 	vadd.f32	s7, s7, s23
 80193c0:	eeca 7aa3 	vdiv.f32	s15, s21, s7
 80193c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80193c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193cc:	aa02      	add	r2, sp, #8
 80193ce:	ad0a      	add	r5, sp, #40	@ 0x28
 80193d0:	e892 0003 	ldmia.w	r2, {r0, r1}
 80193d4:	ed8d 1a0c 	vstr	s2, [sp, #48]	@ 0x30
 80193d8:	edcd 1a0d 	vstr	s3, [sp, #52]	@ 0x34
 80193dc:	e885 0003 	stmia.w	r5, {r0, r1}
 80193e0:	db07      	blt.n	80193f2 <calc_line_geometry+0xe6>
 80193e2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80193e6:	eef4 7ac7 	vcmpe.f32	s15, s14
 80193ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193ee:	f240 85c9 	bls.w	8019f84 <calc_line_geometry+0xc78>
 80193f2:	ed9f 4a3b 	vldr	s8, [pc, #236]	@ 80194e0 <calc_line_geometry+0x1d4>
 80193f6:	4622      	mov	r2, r4
 80193f8:	eeb0 aa44 	vmov.f32	s20, s8
 80193fc:	ee35 9a45 	vsub.f32	s18, s10, s10
 8019400:	ee70 7ac5 	vsub.f32	s15, s1, s10
 8019404:	ee62 6a89 	vmul.f32	s13, s5, s18
 8019408:	ee62 3aa7 	vmul.f32	s7, s5, s15
 801940c:	ee76 6aab 	vadd.f32	s13, s13, s23
 8019410:	ee73 3a8b 	vadd.f32	s7, s7, s22
 8019414:	ee83 7aa6 	vdiv.f32	s14, s7, s13
 8019418:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801941c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019420:	db07      	blt.n	8019432 <calc_line_geometry+0x126>
 8019422:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8019426:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801942a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801942e:	f240 8574 	bls.w	8019f1a <calc_line_geometry+0xc0e>
 8019432:	ee62 3a82 	vmul.f32	s7, s5, s4
 8019436:	ee25 4ac3 	vnmul.f32	s8, s11, s6
 801943a:	ee34 4a23 	vadd.f32	s8, s8, s7
 801943e:	eeca 7a84 	vdiv.f32	s15, s21, s8
 8019442:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019446:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801944a:	db07      	blt.n	801945c <calc_line_geometry+0x150>
 801944c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019450:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019458:	f240 8527 	bls.w	8019eaa <calc_line_geometry+0xb9e>
 801945c:	ee30 5a45 	vsub.f32	s10, s0, s10
 8019460:	ee69 6a43 	vnmul.f32	s13, s18, s6
 8019464:	ee64 4a85 	vmul.f32	s9, s9, s10
 8019468:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801946c:	ee74 4aa8 	vadd.f32	s9, s9, s17
 8019470:	eec4 7aa6 	vdiv.f32	s15, s9, s13
 8019474:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801947c:	db07      	blt.n	801948e <calc_line_geometry+0x182>
 801947e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019482:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019486:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801948a:	f240 84e4 	bls.w	8019e56 <calc_line_geometry+0xb4a>
 801948e:	4d12      	ldr	r5, [pc, #72]	@ (80194d8 <calc_line_geometry+0x1cc>)
 8019490:	4b12      	ldr	r3, [pc, #72]	@ (80194dc <calc_line_geometry+0x1d0>)
 8019492:	6828      	ldr	r0, [r5, #0]
 8019494:	e9d3 4204 	ldrd	r4, r2, [r3, #16]
 8019498:	1c51      	adds	r1, r2, #1
 801949a:	1ca6      	adds	r6, r4, #2
 801949c:	2800      	cmp	r0, #0
 801949e:	f040 8435 	bne.w	8019d0c <calc_line_geometry+0xa00>
 80194a2:	6818      	ldr	r0, [r3, #0]
 80194a4:	4290      	cmp	r0, r2
 80194a6:	f240 848f 	bls.w	8019dc8 <calc_line_geometry+0xabc>
 80194aa:	2082      	movs	r0, #130	@ 0x82
 80194ac:	685f      	ldr	r7, [r3, #4]
 80194ae:	6159      	str	r1, [r3, #20]
 80194b0:	54b8      	strb	r0, [r7, r2]
 80194b2:	689a      	ldr	r2, [r3, #8]
 80194b4:	1c61      	adds	r1, r4, #1
 80194b6:	4291      	cmp	r1, r2
 80194b8:	f080 8480 	bcs.w	8019dbc <calc_line_geometry+0xab0>
 80194bc:	68da      	ldr	r2, [r3, #12]
 80194be:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80194c0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80194c2:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 80194c6:	611e      	str	r6, [r3, #16]
 80194c8:	6010      	str	r0, [r2, #0]
 80194ca:	6051      	str	r1, [r2, #4]
 80194cc:	f000 bc20 	b.w	8019d10 <calc_line_geometry+0xa04>
 80194d0:	20000140 	.word	0x20000140
 80194d4:	20000144 	.word	0x20000144
 80194d8:	2008314c 	.word	0x2008314c
 80194dc:	20083154 	.word	0x20083154
 80194e0:	00000000 	.word	0x00000000
 80194e4:	3727c5ac 	.word	0x3727c5ac
 80194e8:	ee35 2a65 	vsub.f32	s4, s10, s11
 80194ec:	2200      	movs	r2, #0
 80194ee:	eef1 3a42 	vneg.f32	s7, s4
 80194f2:	ee35 3ae5 	vsub.f32	s6, s11, s11
 80194f6:	ab12      	add	r3, sp, #72	@ 0x48
 80194f8:	e9c3 2201 	strd	r2, r2, [r3, #4]
 80194fc:	9212      	str	r2, [sp, #72]	@ 0x48
 80194fe:	60da      	str	r2, [r3, #12]
 8019500:	ee70 2ae1 	vsub.f32	s5, s1, s3
 8019504:	ee70 4a41 	vsub.f32	s9, s0, s2
 8019508:	ee31 aa65 	vsub.f32	s20, s2, s11
 801950c:	eeb1 4a62 	vneg.f32	s8, s5
 8019510:	ee71 8ae5 	vsub.f32	s17, s3, s11
 8019514:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8019518:	ee64 ba0a 	vmul.f32	s23, s8, s20
 801951c:	ee64 9aa8 	vmul.f32	s19, s9, s17
 8019520:	ee64 7a83 	vmul.f32	s15, s9, s6
 8019524:	ee3b baa9 	vadd.f32	s22, s23, s19
 8019528:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801952c:	ee8b 7a27 	vdiv.f32	s14, s22, s15
 8019530:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019534:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019538:	aa02      	add	r2, sp, #8
 801953a:	ac10      	add	r4, sp, #64	@ 0x40
 801953c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8019540:	ed8d 1a0e 	vstr	s2, [sp, #56]	@ 0x38
 8019544:	edcd 1a0f 	vstr	s3, [sp, #60]	@ 0x3c
 8019548:	e884 0003 	stmia.w	r4, {r0, r1}
 801954c:	db07      	blt.n	801955e <calc_line_geometry+0x252>
 801954e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019552:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8019556:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801955a:	f240 824f 	bls.w	80199fc <calc_line_geometry+0x6f0>
 801955e:	ed1f 8a20 	vldr	s16, [pc, #-128]	@ 80194e0 <calc_line_geometry+0x1d4>
 8019562:	2200      	movs	r2, #0
 8019564:	eef0 aa48 	vmov.f32	s21, s16
 8019568:	ee35 9a45 	vsub.f32	s18, s10, s10
 801956c:	ee71 6ac5 	vsub.f32	s13, s3, s10
 8019570:	ee64 7a89 	vmul.f32	s15, s9, s18
 8019574:	ee24 7aa6 	vmul.f32	s14, s9, s13
 8019578:	ee77 3aa3 	vadd.f32	s7, s15, s7
 801957c:	ee77 7a2b 	vadd.f32	s15, s14, s23
 8019580:	ee87 7aa3 	vdiv.f32	s14, s15, s7
 8019584:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019588:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801958c:	db07      	blt.n	801959e <calc_line_geometry+0x292>
 801958e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8019592:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019596:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801959a:	f240 825d 	bls.w	8019a58 <calc_line_geometry+0x74c>
 801959e:	ee64 3a82 	vmul.f32	s7, s9, s4
 80195a2:	ee23 7a62 	vnmul.f32	s14, s6, s5
 80195a6:	ee37 7a23 	vadd.f32	s14, s14, s7
 80195aa:	eecb 7a07 	vdiv.f32	s15, s22, s14
 80195ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80195b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195b6:	db07      	blt.n	80195c8 <calc_line_geometry+0x2bc>
 80195b8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80195bc:	eef4 7ae6 	vcmpe.f32	s15, s13
 80195c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195c4:	f240 81e3 	bls.w	801998e <calc_line_geometry+0x682>
 80195c8:	ee31 7a45 	vsub.f32	s14, s2, s10
 80195cc:	ee69 7a62 	vnmul.f32	s15, s18, s5
 80195d0:	ee24 4a07 	vmul.f32	s8, s8, s14
 80195d4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80195d8:	ee34 4a29 	vadd.f32	s8, s8, s19
 80195dc:	eec4 6a27 	vdiv.f32	s13, s8, s15
 80195e0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80195e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195e8:	db07      	blt.n	80195fa <calc_line_geometry+0x2ee>
 80195ea:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80195ee:	eef4 6ac6 	vcmpe.f32	s13, s12
 80195f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195f6:	f240 826b 	bls.w	8019ad0 <calc_line_geometry+0x7c4>
 80195fa:	eeb4 0ae5 	vcmpe.f32	s0, s11
 80195fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019602:	bf54      	ite	pl
 8019604:	eef0 7a40 	vmovpl.f32	s15, s0
 8019608:	eef0 7a65 	vmovmi.f32	s15, s11
 801960c:	eeb4 5a67 	vcmp.f32	s10, s15
 8019610:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019614:	eef4 0ae5 	vcmpe.f32	s1, s11
 8019618:	bf48      	it	mi
 801961a:	eef0 7a45 	vmovmi.f32	s15, s10
 801961e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019622:	bf54      	ite	pl
 8019624:	eef0 6a60 	vmovpl.f32	s13, s1
 8019628:	eef0 6a65 	vmovmi.f32	s13, s11
 801962c:	eeb4 5a66 	vcmp.f32	s10, s13
 8019630:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019634:	eeb4 1ae5 	vcmpe.f32	s2, s11
 8019638:	bf48      	it	mi
 801963a:	eef0 6a45 	vmovmi.f32	s13, s10
 801963e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019642:	bf54      	ite	pl
 8019644:	eeb0 7a41 	vmovpl.f32	s14, s2
 8019648:	eeb0 7a65 	vmovmi.f32	s14, s11
 801964c:	eeb4 5a47 	vcmp.f32	s10, s14
 8019650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019654:	eef4 1ae5 	vcmpe.f32	s3, s11
 8019658:	bf48      	it	mi
 801965a:	eeb0 7a45 	vmovmi.f32	s14, s10
 801965e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019662:	bf58      	it	pl
 8019664:	eef0 5a61 	vmovpl.f32	s11, s3
 8019668:	eeb4 5a65 	vcmp.f32	s10, s11
 801966c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019670:	bf48      	it	mi
 8019672:	eef0 5a45 	vmovmi.f32	s11, s10
 8019676:	2a02      	cmp	r2, #2
 8019678:	f000 8178 	beq.w	801996c <calc_line_geometry+0x660>
 801967c:	ee37 5ac7 	vsub.f32	s10, s15, s14
 8019680:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019684:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019688:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801968c:	bf48      	it	mi
 801968e:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019692:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019696:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801969a:	bf4c      	ite	mi
 801969c:	eef1 4a67 	vnegmi.f32	s9, s15
 80196a0:	eef0 4a67 	vmovpl.f32	s9, s15
 80196a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196a8:	f100 8261 	bmi.w	8019b6e <calc_line_geometry+0x862>
 80196ac:	eef4 4ac7 	vcmpe.f32	s9, s14
 80196b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196b4:	f140 8243 	bpl.w	8019b3e <calc_line_geometry+0x832>
 80196b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80196bc:	ed1f 6a77 	vldr	s12, [pc, #-476]	@ 80194e4 <calc_line_geometry+0x1d8>
 80196c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196c4:	bf4c      	ite	mi
 80196c6:	ee27 6ac6 	vnmulmi.f32	s12, s15, s12
 80196ca:	ee27 6a86 	vmulpl.f32	s12, s15, s12
 80196ce:	eeb4 5ac6 	vcmpe.f32	s10, s12
 80196d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196d6:	d96e      	bls.n	80197b6 <calc_line_geometry+0x4aa>
 80196d8:	ee36 5ae5 	vsub.f32	s10, s13, s11
 80196dc:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 80196e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196e4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80196e8:	bf48      	it	mi
 80196ea:	eeb1 5a45 	vnegmi.f32	s10, s10
 80196ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196f2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80196f6:	bf4c      	ite	mi
 80196f8:	eef1 4a66 	vnegmi.f32	s9, s13
 80196fc:	eef0 4a66 	vmovpl.f32	s9, s13
 8019700:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019704:	f100 82ee 	bmi.w	8019ce4 <calc_line_geometry+0x9d8>
 8019708:	eef4 4ae5 	vcmpe.f32	s9, s11
 801970c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019710:	f100 82f0 	bmi.w	8019cf4 <calc_line_geometry+0x9e8>
 8019714:	ed1f 6a8d 	vldr	s12, [pc, #-564]	@ 80194e4 <calc_line_geometry+0x1d8>
 8019718:	ee25 6a86 	vmul.f32	s12, s11, s12
 801971c:	eeb4 5ac6 	vcmpe.f32	s10, s12
 8019720:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019724:	d947      	bls.n	80197b6 <calc_line_geometry+0x4aa>
 8019726:	ee71 1ae0 	vsub.f32	s3, s3, s1
 801972a:	ee31 1a40 	vsub.f32	s2, s2, s0
 801972e:	ee37 6ac0 	vsub.f32	s12, s15, s0
 8019732:	ee35 5ae0 	vsub.f32	s10, s11, s1
 8019736:	ee37 0a40 	vsub.f32	s0, s14, s0
 801973a:	ee76 0ae0 	vsub.f32	s1, s13, s1
 801973e:	ee26 6a21 	vmul.f32	s12, s12, s3
 8019742:	ee25 5a01 	vmul.f32	s10, s10, s2
 8019746:	ee60 1a21 	vmul.f32	s3, s0, s3
 801974a:	ee20 1a81 	vmul.f32	s2, s1, s2
 801974e:	4bdc      	ldr	r3, [pc, #880]	@ (8019ac0 <calc_line_geometry+0x7b4>)
 8019750:	48dc      	ldr	r0, [pc, #880]	@ (8019ac4 <calc_line_geometry+0x7b8>)
 8019752:	6959      	ldr	r1, [r3, #20]
 8019754:	6802      	ldr	r2, [r0, #0]
 8019756:	ee36 6a45 	vsub.f32	s12, s12, s10
 801975a:	ee71 1ac1 	vsub.f32	s3, s3, s2
 801975e:	1c4c      	adds	r4, r1, #1
 8019760:	2a00      	cmp	r2, #0
 8019762:	f000 8322 	beq.w	8019daa <calc_line_geometry+0xa9e>
 8019766:	615c      	str	r4, [r3, #20]
 8019768:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801976c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019770:	eef5 1ac0 	vcmpe.f32	s3, #0.0
 8019774:	bf48      	it	mi
 8019776:	eeb1 6a46 	vnegmi.f32	s12, s12
 801977a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801977e:	bf48      	it	mi
 8019780:	eef1 1a61 	vnegmi.f32	s3, s3
 8019784:	eeb4 6ae1 	vcmpe.f32	s12, s3
 8019788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801978c:	6919      	ldr	r1, [r3, #16]
 801978e:	f101 0502 	add.w	r5, r1, #2
 8019792:	f140 8350 	bpl.w	8019e36 <calc_line_geometry+0xb2a>
 8019796:	2a00      	cmp	r2, #0
 8019798:	f040 834b 	bne.w	8019e32 <calc_line_geometry+0xb26>
 801979c:	689a      	ldr	r2, [r3, #8]
 801979e:	1c4c      	adds	r4, r1, #1
 80197a0:	4294      	cmp	r4, r2
 80197a2:	f080 8516 	bcs.w	801a1d2 <calc_line_geometry+0xec6>
 80197a6:	68da      	ldr	r2, [r3, #12]
 80197a8:	611d      	str	r5, [r3, #16]
 80197aa:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 80197ae:	edc1 7a00 	vstr	s15, [r1]
 80197b2:	edc1 5a01 	vstr	s11, [r1, #4]
 80197b6:	eeb0 0a47 	vmov.f32	s0, s14
 80197ba:	eef0 0a65 	vmov.f32	s1, s11
 80197be:	2080      	movs	r0, #128	@ 0x80
 80197c0:	f7ff fce8 	bl	8019194 <add_last_point>
 80197c4:	4604      	mov	r4, r0
 80197c6:	2800      	cmp	r0, #0
 80197c8:	f000 81c9 	beq.w	8019b5e <calc_line_geometry+0x852>
 80197cc:	f003 f952 	bl	801ca74 <nema_vg_set_error>
 80197d0:	4620      	mov	r0, r4
 80197d2:	b017      	add	sp, #92	@ 0x5c
 80197d4:	ecbd 8b08 	vpop	{d8-d11}
 80197d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80197dc:	eeb4 0ae5 	vcmpe.f32	s0, s11
 80197e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197e4:	f53f adb0 	bmi.w	8019348 <calc_line_geometry+0x3c>
 80197e8:	eef4 0ae5 	vcmpe.f32	s1, s11
 80197ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197f0:	eeb4 5ac1 	vcmpe.f32	s10, s2
 80197f4:	bf4c      	ite	mi
 80197f6:	2201      	movmi	r2, #1
 80197f8:	2200      	movpl	r2, #0
 80197fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197fe:	d405      	bmi.n	801980c <calc_line_geometry+0x500>
 8019800:	eeb4 5ae1 	vcmpe.f32	s10, s3
 8019804:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019808:	f57f adab 	bpl.w	8019362 <calc_line_geometry+0x56>
 801980c:	2100      	movs	r1, #0
 801980e:	ee35 2a65 	vsub.f32	s4, s10, s11
 8019812:	ab12      	add	r3, sp, #72	@ 0x48
 8019814:	9112      	str	r1, [sp, #72]	@ 0x48
 8019816:	e9c3 1101 	strd	r1, r1, [r3, #4]
 801981a:	60d9      	str	r1, [r3, #12]
 801981c:	eef1 3a42 	vneg.f32	s7, s4
 8019820:	ee35 3ae5 	vsub.f32	s6, s11, s11
 8019824:	2a00      	cmp	r2, #0
 8019826:	f47f ae6b 	bne.w	8019500 <calc_line_geometry+0x1f4>
 801982a:	ee71 2ae0 	vsub.f32	s5, s3, s1
 801982e:	ee31 4a40 	vsub.f32	s8, s2, s0
 8019832:	ee70 9a65 	vsub.f32	s19, s0, s11
 8019836:	eef1 4a62 	vneg.f32	s9, s5
 801983a:	ee30 8ae5 	vsub.f32	s16, s1, s11
 801983e:	ee62 3aa3 	vmul.f32	s7, s5, s7
 8019842:	ee64 baa9 	vmul.f32	s23, s9, s19
 8019846:	ee64 8a08 	vmul.f32	s17, s8, s16
 801984a:	ee24 7a03 	vmul.f32	s14, s8, s6
 801984e:	ee3b baa8 	vadd.f32	s22, s23, s17
 8019852:	ee37 7a23 	vadd.f32	s14, s14, s7
 8019856:	eecb 7a07 	vdiv.f32	s15, s22, s14
 801985a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801985e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019862:	a902      	add	r1, sp, #8
 8019864:	ac06      	add	r4, sp, #24
 8019866:	c903      	ldmia	r1, {r0, r1}
 8019868:	ed8d 1a08 	vstr	s2, [sp, #32]
 801986c:	edcd 1a09 	vstr	s3, [sp, #36]	@ 0x24
 8019870:	e884 0003 	stmia.w	r4, {r0, r1}
 8019874:	db07      	blt.n	8019886 <calc_line_geometry+0x57a>
 8019876:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801987a:	eef4 7ae6 	vcmpe.f32	s15, s13
 801987e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019882:	f240 8444 	bls.w	801a10e <calc_line_geometry+0xe02>
 8019886:	ed9f 9a90 	vldr	s18, [pc, #576]	@ 8019ac8 <calc_line_geometry+0x7bc>
 801988a:	eef0 aa49 	vmov.f32	s21, s18
 801988e:	ee35 aa45 	vsub.f32	s20, s10, s10
 8019892:	ee70 7ac5 	vsub.f32	s15, s1, s10
 8019896:	ee24 7a0a 	vmul.f32	s14, s8, s20
 801989a:	ee64 6a27 	vmul.f32	s13, s8, s15
 801989e:	ee77 3a23 	vadd.f32	s7, s14, s7
 80198a2:	ee36 7aab 	vadd.f32	s14, s13, s23
 80198a6:	eec7 6a23 	vdiv.f32	s13, s14, s7
 80198aa:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80198ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198b2:	db07      	blt.n	80198c4 <calc_line_geometry+0x5b8>
 80198b4:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80198b8:	eef4 6ac6 	vcmpe.f32	s13, s12
 80198bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198c0:	f240 83f0 	bls.w	801a0a4 <calc_line_geometry+0xd98>
 80198c4:	ee24 9a02 	vmul.f32	s18, s8, s4
 80198c8:	ee63 6a62 	vnmul.f32	s13, s6, s5
 80198cc:	ee76 6a89 	vadd.f32	s13, s13, s18
 80198d0:	eecb 7a26 	vdiv.f32	s15, s22, s13
 80198d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80198d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198dc:	db07      	blt.n	80198ee <calc_line_geometry+0x5e2>
 80198de:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 80198e2:	eef4 7ae3 	vcmpe.f32	s15, s7
 80198e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198ea:	f240 83a4 	bls.w	801a036 <calc_line_geometry+0xd2a>
 80198ee:	ee70 7a45 	vsub.f32	s15, s0, s10
 80198f2:	ee2a 7a62 	vnmul.f32	s14, s20, s5
 80198f6:	ee64 4aa7 	vmul.f32	s9, s9, s15
 80198fa:	ee37 7a09 	vadd.f32	s14, s14, s18
 80198fe:	ee74 4aa8 	vadd.f32	s9, s9, s17
 8019902:	eec4 6a87 	vdiv.f32	s13, s9, s14
 8019906:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801990a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801990e:	db07      	blt.n	8019920 <calc_line_geometry+0x614>
 8019910:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8019914:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019918:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801991c:	f240 8362 	bls.w	8019fe4 <calc_line_geometry+0xcd8>
 8019920:	f240 10ff 	movw	r0, #511	@ 0x1ff
 8019924:	4b66      	ldr	r3, [pc, #408]	@ (8019ac0 <calc_line_geometry+0x7b4>)
 8019926:	4e67      	ldr	r6, [pc, #412]	@ (8019ac4 <calc_line_geometry+0x7b8>)
 8019928:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801992a:	6834      	ldr	r4, [r6, #0]
 801992c:	e9d3 5104 	ldrd	r5, r1, [r3, #16]
 8019930:	4282      	cmp	r2, r0
 8019932:	bf0c      	ite	eq
 8019934:	2282      	moveq	r2, #130	@ 0x82
 8019936:	2202      	movne	r2, #2
 8019938:	1caf      	adds	r7, r5, #2
 801993a:	1c48      	adds	r0, r1, #1
 801993c:	2c00      	cmp	r4, #0
 801993e:	f040 8201 	bne.w	8019d44 <calc_line_geometry+0xa38>
 8019942:	681c      	ldr	r4, [r3, #0]
 8019944:	428c      	cmp	r4, r1
 8019946:	f240 825f 	bls.w	8019e08 <calc_line_geometry+0xafc>
 801994a:	685c      	ldr	r4, [r3, #4]
 801994c:	6158      	str	r0, [r3, #20]
 801994e:	6898      	ldr	r0, [r3, #8]
 8019950:	5462      	strb	r2, [r4, r1]
 8019952:	1c69      	adds	r1, r5, #1
 8019954:	4281      	cmp	r1, r0
 8019956:	f080 8251 	bcs.w	8019dfc <calc_line_geometry+0xaf0>
 801995a:	68da      	ldr	r2, [r3, #12]
 801995c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801995e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8019960:	eb02 0285 	add.w	r2, r2, r5, lsl #2
 8019964:	611f      	str	r7, [r3, #16]
 8019966:	6010      	str	r0, [r2, #0]
 8019968:	6051      	str	r1, [r2, #4]
 801996a:	e1ed      	b.n	8019d48 <calc_line_geometry+0xa3c>
 801996c:	4b54      	ldr	r3, [pc, #336]	@ (8019ac0 <calc_line_geometry+0x7b4>)
 801996e:	4855      	ldr	r0, [pc, #340]	@ (8019ac4 <calc_line_geometry+0x7b8>)
 8019970:	695d      	ldr	r5, [r3, #20]
 8019972:	6801      	ldr	r1, [r0, #0]
 8019974:	1c6e      	adds	r6, r5, #1
 8019976:	2900      	cmp	r1, #0
 8019978:	f040 8106 	bne.w	8019b88 <calc_line_geometry+0x87c>
 801997c:	681c      	ldr	r4, [r3, #0]
 801997e:	42ac      	cmp	r4, r5
 8019980:	f240 820e 	bls.w	8019da0 <calc_line_geometry+0xa94>
 8019984:	2482      	movs	r4, #130	@ 0x82
 8019986:	685a      	ldr	r2, [r3, #4]
 8019988:	615e      	str	r6, [r3, #20]
 801998a:	5554      	strb	r4, [r2, r5]
 801998c:	e0fd      	b.n	8019b8a <calc_line_geometry+0x87e>
 801998e:	ee28 3a83 	vmul.f32	s6, s17, s6
 8019992:	ee2a aa02 	vmul.f32	s20, s20, s4
 8019996:	ee33 aa4a 	vsub.f32	s20, s6, s20
 801999a:	eeca 7a07 	vdiv.f32	s15, s20, s14
 801999e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80199a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199a6:	f6ff ae0f 	blt.w	80195c8 <calc_line_geometry+0x2bc>
 80199aa:	eef4 7ae6 	vcmpe.f32	s15, s13
 80199ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199b2:	f63f ae09 	bhi.w	80195c8 <calc_line_geometry+0x2bc>
 80199b6:	2a02      	cmp	r2, #2
 80199b8:	f43f ae06 	beq.w	80195c8 <calc_line_geometry+0x2bc>
 80199bc:	ee24 7aa7 	vmul.f32	s14, s9, s15
 80199c0:	ee62 7aa7 	vmul.f32	s15, s5, s15
 80199c4:	2a01      	cmp	r2, #1
 80199c6:	ee37 7a01 	vadd.f32	s14, s14, s2
 80199ca:	ee77 7aa1 	vadd.f32	s15, s15, s3
 80199ce:	f000 846b 	beq.w	801a2a8 <calc_line_geometry+0xf9c>
 80199d2:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 80199d6:	4619      	mov	r1, r3
 80199d8:	a80e      	add	r0, sp, #56	@ 0x38
 80199da:	ed85 7a00 	vstr	s14, [r5]
 80199de:	edc5 7a01 	vstr	s15, [r5, #4]
 80199e2:	f7ff fb57 	bl	8019094 <points_coincide>
 80199e6:	2800      	cmp	r0, #0
 80199e8:	f47f adee 	bne.w	80195c8 <calc_line_geometry+0x2bc>
 80199ec:	4620      	mov	r0, r4
 80199ee:	f7ff fb51 	bl	8019094 <points_coincide>
 80199f2:	2800      	cmp	r0, #0
 80199f4:	f47f ade8 	bne.w	80195c8 <calc_line_geometry+0x2bc>
 80199f8:	3201      	adds	r2, #1
 80199fa:	e5e5      	b.n	80195c8 <calc_line_geometry+0x2bc>
 80199fc:	ee28 7a82 	vmul.f32	s14, s17, s4
 8019a00:	ee2a 6a03 	vmul.f32	s12, s20, s6
 8019a04:	ee37 7a46 	vsub.f32	s14, s14, s12
 8019a08:	ee87 8a27 	vdiv.f32	s16, s14, s15
 8019a0c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8019a10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a14:	f6ff ada3 	blt.w	801955e <calc_line_geometry+0x252>
 8019a18:	eeb4 8ae6 	vcmpe.f32	s16, s13
 8019a1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a20:	f63f ad9d 	bhi.w	801955e <calc_line_geometry+0x252>
 8019a24:	ee64 aa88 	vmul.f32	s21, s9, s16
 8019a28:	ee22 8a88 	vmul.f32	s16, s5, s16
 8019a2c:	ee7a aa81 	vadd.f32	s21, s21, s2
 8019a30:	ee38 8a21 	vadd.f32	s16, s16, s3
 8019a34:	4619      	mov	r1, r3
 8019a36:	a80e      	add	r0, sp, #56	@ 0x38
 8019a38:	edcd aa12 	vstr	s21, [sp, #72]	@ 0x48
 8019a3c:	ed8d 8a13 	vstr	s16, [sp, #76]	@ 0x4c
 8019a40:	f7ff fb28 	bl	8019094 <points_coincide>
 8019a44:	2800      	cmp	r0, #0
 8019a46:	f040 8090 	bne.w	8019b6a <calc_line_geometry+0x85e>
 8019a4a:	4620      	mov	r0, r4
 8019a4c:	f7ff fb22 	bl	8019094 <points_coincide>
 8019a50:	fab0 f280 	clz	r2, r0
 8019a54:	0952      	lsrs	r2, r2, #5
 8019a56:	e587      	b.n	8019568 <calc_line_geometry+0x25c>
 8019a58:	ee2a 7a09 	vmul.f32	s14, s20, s18
 8019a5c:	ee62 6a26 	vmul.f32	s13, s4, s13
 8019a60:	ee76 6ac7 	vsub.f32	s13, s13, s14
 8019a64:	ee86 7aa3 	vdiv.f32	s14, s13, s7
 8019a68:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019a6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a70:	f6ff ad95 	blt.w	801959e <calc_line_geometry+0x292>
 8019a74:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019a78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a7c:	f63f ad8f 	bhi.w	801959e <calc_line_geometry+0x292>
 8019a80:	ee62 7a87 	vmul.f32	s15, s5, s14
 8019a84:	ee64 6a87 	vmul.f32	s13, s9, s14
 8019a88:	2a01      	cmp	r2, #1
 8019a8a:	ee36 7a81 	vadd.f32	s14, s13, s2
 8019a8e:	ee77 7aa1 	vadd.f32	s15, s15, s3
 8019a92:	f000 845f 	beq.w	801a354 <calc_line_geometry+0x1048>
 8019a96:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 8019a9a:	4619      	mov	r1, r3
 8019a9c:	a80e      	add	r0, sp, #56	@ 0x38
 8019a9e:	ed85 7a00 	vstr	s14, [r5]
 8019aa2:	edc5 7a01 	vstr	s15, [r5, #4]
 8019aa6:	f7ff faf5 	bl	8019094 <points_coincide>
 8019aaa:	2800      	cmp	r0, #0
 8019aac:	f47f ad77 	bne.w	801959e <calc_line_geometry+0x292>
 8019ab0:	4620      	mov	r0, r4
 8019ab2:	f7ff faef 	bl	8019094 <points_coincide>
 8019ab6:	2800      	cmp	r0, #0
 8019ab8:	f47f ad71 	bne.w	801959e <calc_line_geometry+0x292>
 8019abc:	3201      	adds	r2, #1
 8019abe:	e56e      	b.n	801959e <calc_line_geometry+0x292>
 8019ac0:	20083154 	.word	0x20083154
 8019ac4:	2008314c 	.word	0x2008314c
 8019ac8:	00000000 	.word	0x00000000
 8019acc:	3727c5ac 	.word	0x3727c5ac
 8019ad0:	ee22 2a07 	vmul.f32	s4, s4, s14
 8019ad4:	ee68 8a89 	vmul.f32	s17, s17, s18
 8019ad8:	ee38 2ac2 	vsub.f32	s4, s17, s4
 8019adc:	ee82 7a27 	vdiv.f32	s14, s4, s15
 8019ae0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019ae4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ae8:	f6ff ad87 	blt.w	80195fa <calc_line_geometry+0x2ee>
 8019aec:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8019af0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019af4:	f63f ad81 	bhi.w	80195fa <calc_line_geometry+0x2ee>
 8019af8:	2a02      	cmp	r2, #2
 8019afa:	f43f ad7e 	beq.w	80195fa <calc_line_geometry+0x2ee>
 8019afe:	ee64 7a87 	vmul.f32	s15, s9, s14
 8019b02:	ee22 7a87 	vmul.f32	s14, s5, s14
 8019b06:	2a01      	cmp	r2, #1
 8019b08:	ee77 7a81 	vadd.f32	s15, s15, s2
 8019b0c:	ee37 7a21 	vadd.f32	s14, s14, s3
 8019b10:	f000 8374 	beq.w	801a1fc <calc_line_geometry+0xef0>
 8019b14:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 8019b18:	4619      	mov	r1, r3
 8019b1a:	a80e      	add	r0, sp, #56	@ 0x38
 8019b1c:	edc5 7a00 	vstr	s15, [r5]
 8019b20:	ed85 7a01 	vstr	s14, [r5, #4]
 8019b24:	f7ff fab6 	bl	8019094 <points_coincide>
 8019b28:	2800      	cmp	r0, #0
 8019b2a:	f47f ad66 	bne.w	80195fa <calc_line_geometry+0x2ee>
 8019b2e:	4620      	mov	r0, r4
 8019b30:	f7ff fab0 	bl	8019094 <points_coincide>
 8019b34:	2800      	cmp	r0, #0
 8019b36:	f47f ad60 	bne.w	80195fa <calc_line_geometry+0x2ee>
 8019b3a:	3201      	adds	r2, #1
 8019b3c:	e55d      	b.n	80195fa <calc_line_geometry+0x2ee>
 8019b3e:	ed1f 6a1d 	vldr	s12, [pc, #-116]	@ 8019acc <calc_line_geometry+0x7c0>
 8019b42:	ee27 6a06 	vmul.f32	s12, s14, s12
 8019b46:	e5c2      	b.n	80196ce <calc_line_geometry+0x3c2>
 8019b48:	4610      	mov	r0, r2
 8019b4a:	ed9d 0a00 	vldr	s0, [sp]
 8019b4e:	eddd 0a01 	vldr	s1, [sp, #4]
 8019b52:	f7ff fb1f 	bl	8019194 <add_last_point>
 8019b56:	4604      	mov	r4, r0
 8019b58:	2800      	cmp	r0, #0
 8019b5a:	f47f ae37 	bne.w	80197cc <calc_line_geometry+0x4c0>
 8019b5e:	4620      	mov	r0, r4
 8019b60:	b017      	add	sp, #92	@ 0x5c
 8019b62:	ecbd 8b08 	vpop	{d8-d11}
 8019b66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019b6a:	2200      	movs	r2, #0
 8019b6c:	e4fc      	b.n	8019568 <calc_line_geometry+0x25c>
 8019b6e:	eeb1 6a47 	vneg.f32	s12, s14
 8019b72:	eef4 4ac6 	vcmpe.f32	s9, s12
 8019b76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b7a:	f53f ad9d 	bmi.w	80196b8 <calc_line_geometry+0x3ac>
 8019b7e:	ed5f 4a2d 	vldr	s9, [pc, #-180]	@ 8019acc <calc_line_geometry+0x7c0>
 8019b82:	ee26 6a24 	vmul.f32	s12, s12, s9
 8019b86:	e5a2      	b.n	80196ce <calc_line_geometry+0x3c2>
 8019b88:	615e      	str	r6, [r3, #20]
 8019b8a:	ed9d 6a12 	vldr	s12, [sp, #72]	@ 0x48
 8019b8e:	ee37 5ac6 	vsub.f32	s10, s15, s12
 8019b92:	f240 12ff 	movw	r2, #511	@ 0x1ff
 8019b96:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019b9a:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 8019b9c:	4294      	cmp	r4, r2
 8019b9e:	bf0c      	ite	eq
 8019ba0:	2482      	moveq	r4, #130	@ 0x82
 8019ba2:	2402      	movne	r4, #2
 8019ba4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ba8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019bac:	bf48      	it	mi
 8019bae:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019bb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bb6:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8019bba:	bf4c      	ite	mi
 8019bbc:	eef1 4a67 	vnegmi.f32	s9, s15
 8019bc0:	eef0 4a67 	vmovpl.f32	s9, s15
 8019bc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bc8:	d478      	bmi.n	8019cbc <calc_line_geometry+0x9b0>
 8019bca:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8019bce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bd2:	dc7b      	bgt.n	8019ccc <calc_line_geometry+0x9c0>
 8019bd4:	ed5f 7a43 	vldr	s15, [pc, #-268]	@ 8019acc <calc_line_geometry+0x7c0>
 8019bd8:	ee66 7a27 	vmul.f32	s15, s12, s15
 8019bdc:	eeb4 5ae7 	vcmpe.f32	s10, s15
 8019be0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019be4:	691a      	ldr	r2, [r3, #16]
 8019be6:	f102 0e02 	add.w	lr, r2, #2
 8019bea:	d93f      	bls.n	8019c6c <calc_line_geometry+0x960>
 8019bec:	eddd 7a13 	vldr	s15, [sp, #76]	@ 0x4c
 8019bf0:	ee36 5ae7 	vsub.f32	s10, s13, s15
 8019bf4:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8019bf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bfc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019c00:	bf48      	it	mi
 8019c02:	eeb1 5a45 	vnegmi.f32	s10, s10
 8019c06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c0a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019c0e:	bf4c      	ite	mi
 8019c10:	eef1 4a66 	vnegmi.f32	s9, s13
 8019c14:	eef0 4a66 	vmovpl.f32	s9, s13
 8019c18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c1c:	f100 82a6 	bmi.w	801a16c <calc_line_geometry+0xe60>
 8019c20:	eef4 7ae4 	vcmpe.f32	s15, s9
 8019c24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c28:	f340 80fe 	ble.w	8019e28 <calc_line_geometry+0xb1c>
 8019c2c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019c30:	ed5f 4a5a 	vldr	s9, [pc, #-360]	@ 8019acc <calc_line_geometry+0x7c0>
 8019c34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c38:	bf4c      	ite	mi
 8019c3a:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 8019c3e:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 8019c42:	eeb4 5ae6 	vcmpe.f32	s10, s13
 8019c46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019c4a:	d90f      	bls.n	8019c6c <calc_line_geometry+0x960>
 8019c4c:	3502      	adds	r5, #2
 8019c4e:	1d17      	adds	r7, r2, #4
 8019c50:	b949      	cbnz	r1, 8019c66 <calc_line_geometry+0x95a>
 8019c52:	f8d3 8008 	ldr.w	r8, [r3, #8]
 8019c56:	1c51      	adds	r1, r2, #1
 8019c58:	4541      	cmp	r1, r8
 8019c5a:	f0c0 8294 	bcc.w	801a186 <calc_line_geometry+0xe7a>
 8019c5e:	2102      	movs	r1, #2
 8019c60:	2201      	movs	r2, #1
 8019c62:	6299      	str	r1, [r3, #40]	@ 0x28
 8019c64:	6002      	str	r2, [r0, #0]
 8019c66:	615d      	str	r5, [r3, #20]
 8019c68:	611f      	str	r7, [r3, #16]
 8019c6a:	e5a4      	b.n	80197b6 <calc_line_geometry+0x4aa>
 8019c6c:	2900      	cmp	r1, #0
 8019c6e:	d160      	bne.n	8019d32 <calc_line_geometry+0xa26>
 8019c70:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8019c74:	1c51      	adds	r1, r2, #1
 8019c76:	4561      	cmp	r1, ip
 8019c78:	f080 80b2 	bcs.w	8019de0 <calc_line_geometry+0xad4>
 8019c7c:	68df      	ldr	r7, [r3, #12]
 8019c7e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8019c80:	eb07 0882 	add.w	r8, r7, r2, lsl #2
 8019c84:	1caf      	adds	r7, r5, #2
 8019c86:	681d      	ldr	r5, [r3, #0]
 8019c88:	f8c8 1004 	str.w	r1, [r8, #4]
 8019c8c:	42b5      	cmp	r5, r6
 8019c8e:	f8c3 e010 	str.w	lr, [r3, #16]
 8019c92:	ed88 6a00 	vstr	s12, [r8]
 8019c96:	f102 0104 	add.w	r1, r2, #4
 8019c9a:	f240 809b 	bls.w	8019dd4 <calc_line_geometry+0xac8>
 8019c9e:	1cd5      	adds	r5, r2, #3
 8019ca0:	685a      	ldr	r2, [r3, #4]
 8019ca2:	45ac      	cmp	ip, r5
 8019ca4:	615f      	str	r7, [r3, #20]
 8019ca6:	5594      	strb	r4, [r2, r6]
 8019ca8:	f240 80a2 	bls.w	8019df0 <calc_line_geometry+0xae4>
 8019cac:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8019cae:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8019cb0:	6119      	str	r1, [r3, #16]
 8019cb2:	f8c8 0008 	str.w	r0, [r8, #8]
 8019cb6:	f8c8 200c 	str.w	r2, [r8, #12]
 8019cba:	e57c      	b.n	80197b6 <calc_line_geometry+0x4aa>
 8019cbc:	eeb1 4a46 	vneg.f32	s8, s12
 8019cc0:	eef4 4ac4 	vcmpe.f32	s9, s8
 8019cc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019cc8:	f140 80a4 	bpl.w	8019e14 <calc_line_geometry+0xb08>
 8019ccc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019cd0:	ed5f 4a82 	vldr	s9, [pc, #-520]	@ 8019acc <calc_line_geometry+0x7c0>
 8019cd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019cd8:	bf4c      	ite	mi
 8019cda:	ee67 7ae4 	vnmulmi.f32	s15, s15, s9
 8019cde:	ee67 7aa4 	vmulpl.f32	s15, s15, s9
 8019ce2:	e77b      	b.n	8019bdc <calc_line_geometry+0x8d0>
 8019ce4:	eeb1 6a65 	vneg.f32	s12, s11
 8019ce8:	eef4 4ac6 	vcmpe.f32	s9, s12
 8019cec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019cf0:	f140 8095 	bpl.w	8019e1e <calc_line_geometry+0xb12>
 8019cf4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019cf8:	ed1f 6a8c 	vldr	s12, [pc, #-560]	@ 8019acc <calc_line_geometry+0x7c0>
 8019cfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d00:	bf4c      	ite	mi
 8019d02:	ee26 6ac6 	vnmulmi.f32	s12, s13, s12
 8019d06:	ee26 6a86 	vmulpl.f32	s12, s13, s12
 8019d0a:	e507      	b.n	801971c <calc_line_geometry+0x410>
 8019d0c:	6159      	str	r1, [r3, #20]
 8019d0e:	611e      	str	r6, [r3, #16]
 8019d10:	eeb0 0a41 	vmov.f32	s0, s2
 8019d14:	eef0 0a61 	vmov.f32	s1, s3
 8019d18:	2000      	movs	r0, #0
 8019d1a:	f7ff fa3b 	bl	8019194 <add_last_point>
 8019d1e:	4604      	mov	r4, r0
 8019d20:	2800      	cmp	r0, #0
 8019d22:	f47f ad53 	bne.w	80197cc <calc_line_geometry+0x4c0>
 8019d26:	4620      	mov	r0, r4
 8019d28:	b017      	add	sp, #92	@ 0x5c
 8019d2a:	ecbd 8b08 	vpop	{d8-d11}
 8019d2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019d32:	4671      	mov	r1, lr
 8019d34:	f8c3 e010 	str.w	lr, [r3, #16]
 8019d38:	695a      	ldr	r2, [r3, #20]
 8019d3a:	3102      	adds	r1, #2
 8019d3c:	3201      	adds	r2, #1
 8019d3e:	615a      	str	r2, [r3, #20]
 8019d40:	6119      	str	r1, [r3, #16]
 8019d42:	e538      	b.n	80197b6 <calc_line_geometry+0x4aa>
 8019d44:	6158      	str	r0, [r3, #20]
 8019d46:	611f      	str	r7, [r3, #16]
 8019d48:	eeb4 1a65 	vcmp.f32	s2, s11
 8019d4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d50:	bf48      	it	mi
 8019d52:	eeb0 1a65 	vmovmi.f32	s2, s11
 8019d56:	eeb4 5a41 	vcmp.f32	s10, s2
 8019d5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d5e:	eef4 1a65 	vcmp.f32	s3, s11
 8019d62:	bf48      	it	mi
 8019d64:	eeb0 1a45 	vmovmi.f32	s2, s10
 8019d68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d6c:	bf48      	it	mi
 8019d6e:	eef0 1a65 	vmovmi.f32	s3, s11
 8019d72:	eeb4 5a61 	vcmp.f32	s10, s3
 8019d76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d7a:	bf48      	it	mi
 8019d7c:	eef0 1a45 	vmovmi.f32	s3, s10
 8019d80:	eeb0 0a41 	vmov.f32	s0, s2
 8019d84:	eef0 0a61 	vmov.f32	s1, s3
 8019d88:	2080      	movs	r0, #128	@ 0x80
 8019d8a:	ed8d 1a10 	vstr	s2, [sp, #64]	@ 0x40
 8019d8e:	edcd 1a11 	vstr	s3, [sp, #68]	@ 0x44
 8019d92:	f7ff f9ff 	bl	8019194 <add_last_point>
 8019d96:	4604      	mov	r4, r0
 8019d98:	2800      	cmp	r0, #0
 8019d9a:	f43f aee0 	beq.w	8019b5e <calc_line_geometry+0x852>
 8019d9e:	e515      	b.n	80197cc <calc_line_geometry+0x4c0>
 8019da0:	2101      	movs	r1, #1
 8019da2:	629a      	str	r2, [r3, #40]	@ 0x28
 8019da4:	615e      	str	r6, [r3, #20]
 8019da6:	6001      	str	r1, [r0, #0]
 8019da8:	e6ef      	b.n	8019b8a <calc_line_geometry+0x87e>
 8019daa:	681d      	ldr	r5, [r3, #0]
 8019dac:	428d      	cmp	r5, r1
 8019dae:	f240 8217 	bls.w	801a1e0 <calc_line_geometry+0xed4>
 8019db2:	2682      	movs	r6, #130	@ 0x82
 8019db4:	685d      	ldr	r5, [r3, #4]
 8019db6:	615c      	str	r4, [r3, #20]
 8019db8:	546e      	strb	r6, [r5, r1]
 8019dba:	e4d5      	b.n	8019768 <calc_line_geometry+0x45c>
 8019dbc:	2102      	movs	r1, #2
 8019dbe:	2201      	movs	r2, #1
 8019dc0:	611e      	str	r6, [r3, #16]
 8019dc2:	6299      	str	r1, [r3, #40]	@ 0x28
 8019dc4:	602a      	str	r2, [r5, #0]
 8019dc6:	e7a3      	b.n	8019d10 <calc_line_geometry+0xa04>
 8019dc8:	2002      	movs	r0, #2
 8019dca:	2201      	movs	r2, #1
 8019dcc:	6159      	str	r1, [r3, #20]
 8019dce:	6298      	str	r0, [r3, #40]	@ 0x28
 8019dd0:	602a      	str	r2, [r5, #0]
 8019dd2:	e79c      	b.n	8019d0e <calc_line_geometry+0xa02>
 8019dd4:	2402      	movs	r4, #2
 8019dd6:	2201      	movs	r2, #1
 8019dd8:	615f      	str	r7, [r3, #20]
 8019dda:	629c      	str	r4, [r3, #40]	@ 0x28
 8019ddc:	6002      	str	r2, [r0, #0]
 8019dde:	e7af      	b.n	8019d40 <calc_line_geometry+0xa34>
 8019de0:	2102      	movs	r1, #2
 8019de2:	2201      	movs	r2, #1
 8019de4:	6299      	str	r1, [r3, #40]	@ 0x28
 8019de6:	f8c3 e010 	str.w	lr, [r3, #16]
 8019dea:	6002      	str	r2, [r0, #0]
 8019dec:	4671      	mov	r1, lr
 8019dee:	e7a3      	b.n	8019d38 <calc_line_geometry+0xa2c>
 8019df0:	2402      	movs	r4, #2
 8019df2:	2201      	movs	r2, #1
 8019df4:	6119      	str	r1, [r3, #16]
 8019df6:	629c      	str	r4, [r3, #40]	@ 0x28
 8019df8:	6002      	str	r2, [r0, #0]
 8019dfa:	e4dc      	b.n	80197b6 <calc_line_geometry+0x4aa>
 8019dfc:	2102      	movs	r1, #2
 8019dfe:	2201      	movs	r2, #1
 8019e00:	611f      	str	r7, [r3, #16]
 8019e02:	6299      	str	r1, [r3, #40]	@ 0x28
 8019e04:	6032      	str	r2, [r6, #0]
 8019e06:	e79f      	b.n	8019d48 <calc_line_geometry+0xa3c>
 8019e08:	2102      	movs	r1, #2
 8019e0a:	2201      	movs	r2, #1
 8019e0c:	6158      	str	r0, [r3, #20]
 8019e0e:	6299      	str	r1, [r3, #40]	@ 0x28
 8019e10:	6032      	str	r2, [r6, #0]
 8019e12:	e798      	b.n	8019d46 <calc_line_geometry+0xa3a>
 8019e14:	eddf 7ae7 	vldr	s15, [pc, #924]	@ 801a1b4 <calc_line_geometry+0xea8>
 8019e18:	ee64 7a27 	vmul.f32	s15, s8, s15
 8019e1c:	e6de      	b.n	8019bdc <calc_line_geometry+0x8d0>
 8019e1e:	eddf 4ae5 	vldr	s9, [pc, #916]	@ 801a1b4 <calc_line_geometry+0xea8>
 8019e22:	ee26 6a24 	vmul.f32	s12, s12, s9
 8019e26:	e479      	b.n	801971c <calc_line_geometry+0x410>
 8019e28:	eddf 6ae2 	vldr	s13, [pc, #904]	@ 801a1b4 <calc_line_geometry+0xea8>
 8019e2c:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8019e30:	e707      	b.n	8019c42 <calc_line_geometry+0x936>
 8019e32:	611d      	str	r5, [r3, #16]
 8019e34:	e4bf      	b.n	80197b6 <calc_line_geometry+0x4aa>
 8019e36:	2a00      	cmp	r2, #0
 8019e38:	d1fb      	bne.n	8019e32 <calc_line_geometry+0xb26>
 8019e3a:	689a      	ldr	r2, [r3, #8]
 8019e3c:	1c4c      	adds	r4, r1, #1
 8019e3e:	4294      	cmp	r4, r2
 8019e40:	f080 81c7 	bcs.w	801a1d2 <calc_line_geometry+0xec6>
 8019e44:	68da      	ldr	r2, [r3, #12]
 8019e46:	611d      	str	r5, [r3, #16]
 8019e48:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 8019e4c:	ed81 7a00 	vstr	s14, [r1]
 8019e50:	edc1 6a01 	vstr	s13, [r1, #4]
 8019e54:	e4af      	b.n	80197b6 <calc_line_geometry+0x4aa>
 8019e56:	ee28 6a09 	vmul.f32	s12, s16, s18
 8019e5a:	ee22 5a05 	vmul.f32	s10, s4, s10
 8019e5e:	ee36 5a45 	vsub.f32	s10, s12, s10
 8019e62:	eec5 7a26 	vdiv.f32	s15, s10, s13
 8019e66:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019e6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e6e:	f6ff ab0e 	blt.w	801948e <calc_line_geometry+0x182>
 8019e72:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019e76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e7a:	f63f ab08 	bhi.w	801948e <calc_line_geometry+0x182>
 8019e7e:	2a02      	cmp	r2, #2
 8019e80:	f43f ab05 	beq.w	801948e <calc_line_geometry+0x182>
 8019e84:	ee22 7aa7 	vmul.f32	s14, s5, s15
 8019e88:	2a01      	cmp	r2, #1
 8019e8a:	ee37 0a00 	vadd.f32	s0, s14, s0
 8019e8e:	f000 82f9 	beq.w	801a484 <calc_line_geometry+0x1178>
 8019e92:	ee63 7a27 	vmul.f32	s15, s6, s15
 8019e96:	ee77 0aa0 	vadd.f32	s1, s15, s1
 8019e9a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8019e9e:	ed83 0a00 	vstr	s0, [r3]
 8019ea2:	edc3 0a01 	vstr	s1, [r3, #4]
 8019ea6:	f7ff baf2 	b.w	801948e <calc_line_geometry+0x182>
 8019eaa:	ee62 7a29 	vmul.f32	s15, s4, s19
 8019eae:	ee25 6a88 	vmul.f32	s12, s11, s16
 8019eb2:	ee36 6a67 	vsub.f32	s12, s12, s15
 8019eb6:	eec6 7a04 	vdiv.f32	s15, s12, s8
 8019eba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019ebe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ec2:	f6ff aacb 	blt.w	801945c <calc_line_geometry+0x150>
 8019ec6:	eef4 7ac7 	vcmpe.f32	s15, s14
 8019eca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ece:	f63f aac5 	bhi.w	801945c <calc_line_geometry+0x150>
 8019ed2:	2a02      	cmp	r2, #2
 8019ed4:	f43f aac2 	beq.w	801945c <calc_line_geometry+0x150>
 8019ed8:	ee22 7aa7 	vmul.f32	s14, s5, s15
 8019edc:	2a01      	cmp	r2, #1
 8019ede:	ee37 7a00 	vadd.f32	s14, s14, s0
 8019ee2:	f000 8329 	beq.w	801a538 <calc_line_geometry+0x122c>
 8019ee6:	ee63 7a27 	vmul.f32	s15, s6, s15
 8019eea:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8019eee:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 8019ef2:	4628      	mov	r0, r5
 8019ef4:	4619      	mov	r1, r3
 8019ef6:	edc4 7a01 	vstr	s15, [r4, #4]
 8019efa:	ed84 7a00 	vstr	s14, [r4]
 8019efe:	f7ff f8c9 	bl	8019094 <points_coincide>
 8019f02:	2800      	cmp	r0, #0
 8019f04:	f47f aaaa 	bne.w	801945c <calc_line_geometry+0x150>
 8019f08:	a80c      	add	r0, sp, #48	@ 0x30
 8019f0a:	f7ff f8c3 	bl	8019094 <points_coincide>
 8019f0e:	2800      	cmp	r0, #0
 8019f10:	f47f aaa4 	bne.w	801945c <calc_line_geometry+0x150>
 8019f14:	3201      	adds	r2, #1
 8019f16:	f7ff baa1 	b.w	801945c <calc_line_geometry+0x150>
 8019f1a:	ee29 7a89 	vmul.f32	s14, s19, s18
 8019f1e:	ee62 7a27 	vmul.f32	s15, s4, s15
 8019f22:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8019f26:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019f2a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8019f2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f32:	f6ff aa7e 	blt.w	8019432 <calc_line_geometry+0x126>
 8019f36:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8019f3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f3e:	f63f aa78 	bhi.w	8019432 <calc_line_geometry+0x126>
 8019f42:	ee62 6a87 	vmul.f32	s13, s5, s14
 8019f46:	2a01      	cmp	r2, #1
 8019f48:	ee76 6a80 	vadd.f32	s13, s13, s0
 8019f4c:	f000 834e 	beq.w	801a5ec <calc_line_geometry+0x12e0>
 8019f50:	ee63 7a07 	vmul.f32	s15, s6, s14
 8019f54:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8019f58:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 8019f5c:	4619      	mov	r1, r3
 8019f5e:	4628      	mov	r0, r5
 8019f60:	edc4 7a01 	vstr	s15, [r4, #4]
 8019f64:	edc4 6a00 	vstr	s13, [r4]
 8019f68:	f7ff f894 	bl	8019094 <points_coincide>
 8019f6c:	2800      	cmp	r0, #0
 8019f6e:	f47f aa60 	bne.w	8019432 <calc_line_geometry+0x126>
 8019f72:	a80c      	add	r0, sp, #48	@ 0x30
 8019f74:	f7ff f88e 	bl	8019094 <points_coincide>
 8019f78:	2800      	cmp	r0, #0
 8019f7a:	f47f aa5a 	bne.w	8019432 <calc_line_geometry+0x126>
 8019f7e:	3201      	adds	r2, #1
 8019f80:	f7ff ba57 	b.w	8019432 <calc_line_geometry+0x126>
 8019f84:	ee62 7a08 	vmul.f32	s15, s4, s16
 8019f88:	ee65 6aa9 	vmul.f32	s13, s11, s19
 8019f8c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8019f90:	ee87 4aa3 	vdiv.f32	s8, s15, s7
 8019f94:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 8019f98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f9c:	f6ff aa29 	blt.w	80193f2 <calc_line_geometry+0xe6>
 8019fa0:	eeb4 4ac7 	vcmpe.f32	s8, s14
 8019fa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019fa8:	f63f aa23 	bhi.w	80193f2 <calc_line_geometry+0xe6>
 8019fac:	ee22 aa84 	vmul.f32	s20, s5, s8
 8019fb0:	ee23 4a04 	vmul.f32	s8, s6, s8
 8019fb4:	ee3a aa00 	vadd.f32	s20, s20, s0
 8019fb8:	ee34 4a20 	vadd.f32	s8, s8, s1
 8019fbc:	4619      	mov	r1, r3
 8019fbe:	4628      	mov	r0, r5
 8019fc0:	ed8d aa12 	vstr	s20, [sp, #72]	@ 0x48
 8019fc4:	ed8d 4a13 	vstr	s8, [sp, #76]	@ 0x4c
 8019fc8:	f7ff f864 	bl	8019094 <points_coincide>
 8019fcc:	b938      	cbnz	r0, 8019fde <calc_line_geometry+0xcd2>
 8019fce:	a80c      	add	r0, sp, #48	@ 0x30
 8019fd0:	f7ff f860 	bl	8019094 <points_coincide>
 8019fd4:	fab0 f280 	clz	r2, r0
 8019fd8:	0952      	lsrs	r2, r2, #5
 8019fda:	f7ff ba0f 	b.w	80193fc <calc_line_geometry+0xf0>
 8019fde:	4622      	mov	r2, r4
 8019fe0:	f7ff ba0c 	b.w	80193fc <calc_line_geometry+0xf0>
 8019fe4:	ee28 8a0a 	vmul.f32	s16, s16, s20
 8019fe8:	ee27 2a82 	vmul.f32	s4, s15, s4
 8019fec:	ee38 2a42 	vsub.f32	s4, s16, s4
 8019ff0:	eec2 6a07 	vdiv.f32	s13, s4, s14
 8019ff4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8019ff8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ffc:	f6ff ac90 	blt.w	8019920 <calc_line_geometry+0x614>
 801a000:	eef4 6ac6 	vcmpe.f32	s13, s12
 801a004:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a008:	f63f ac8a 	bhi.w	8019920 <calc_line_geometry+0x614>
 801a00c:	2a02      	cmp	r2, #2
 801a00e:	f43f ac87 	beq.w	8019920 <calc_line_geometry+0x614>
 801a012:	ee64 7a26 	vmul.f32	s15, s8, s13
 801a016:	2a01      	cmp	r2, #1
 801a018:	ee37 0a80 	vadd.f32	s0, s15, s0
 801a01c:	f000 833c 	beq.w	801a698 <calc_line_geometry+0x138c>
 801a020:	ee62 7aa6 	vmul.f32	s15, s5, s13
 801a024:	ee77 0aa0 	vadd.f32	s1, s15, s1
 801a028:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801a02c:	ed83 0a00 	vstr	s0, [r3]
 801a030:	edc3 0a01 	vstr	s1, [r3, #4]
 801a034:	e474      	b.n	8019920 <calc_line_geometry+0x614>
 801a036:	ee28 3a03 	vmul.f32	s6, s16, s6
 801a03a:	ee69 7a82 	vmul.f32	s15, s19, s4
 801a03e:	ee73 7a67 	vsub.f32	s15, s6, s15
 801a042:	ee87 6aa6 	vdiv.f32	s12, s15, s13
 801a046:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a04a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a04e:	f6ff ac4e 	blt.w	80198ee <calc_line_geometry+0x5e2>
 801a052:	eeb4 6ae3 	vcmpe.f32	s12, s7
 801a056:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a05a:	f63f ac48 	bhi.w	80198ee <calc_line_geometry+0x5e2>
 801a05e:	2a02      	cmp	r2, #2
 801a060:	f43f ac45 	beq.w	80198ee <calc_line_geometry+0x5e2>
 801a064:	ee64 3a06 	vmul.f32	s7, s8, s12
 801a068:	2a01      	cmp	r2, #1
 801a06a:	ee73 3a80 	vadd.f32	s7, s7, s0
 801a06e:	f000 8373 	beq.w	801a758 <calc_line_geometry+0x144c>
 801a072:	ee62 7a86 	vmul.f32	s15, s5, s12
 801a076:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801a07a:	4620      	mov	r0, r4
 801a07c:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 801a080:	4619      	mov	r1, r3
 801a082:	edc4 7a01 	vstr	s15, [r4, #4]
 801a086:	edc4 3a00 	vstr	s7, [r4]
 801a08a:	f7ff f803 	bl	8019094 <points_coincide>
 801a08e:	2800      	cmp	r0, #0
 801a090:	f47f ac2d 	bne.w	80198ee <calc_line_geometry+0x5e2>
 801a094:	a808      	add	r0, sp, #32
 801a096:	f7fe fffd 	bl	8019094 <points_coincide>
 801a09a:	2800      	cmp	r0, #0
 801a09c:	f47f ac27 	bne.w	80198ee <calc_line_geometry+0x5e2>
 801a0a0:	3201      	adds	r2, #1
 801a0a2:	e424      	b.n	80198ee <calc_line_geometry+0x5e2>
 801a0a4:	ee29 7a8a 	vmul.f32	s14, s19, s20
 801a0a8:	ee67 7a82 	vmul.f32	s15, s15, s4
 801a0ac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801a0b0:	ee87 7aa3 	vdiv.f32	s14, s15, s7
 801a0b4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a0b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a0bc:	f6ff ac02 	blt.w	80198c4 <calc_line_geometry+0x5b8>
 801a0c0:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801a0c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a0c8:	f63f abfc 	bhi.w	80198c4 <calc_line_geometry+0x5b8>
 801a0cc:	ee64 6a07 	vmul.f32	s13, s8, s14
 801a0d0:	2a01      	cmp	r2, #1
 801a0d2:	ee76 6a80 	vadd.f32	s13, s13, s0
 801a0d6:	f000 83b7 	beq.w	801a848 <calc_line_geometry+0x153c>
 801a0da:	ee62 7a87 	vmul.f32	s15, s5, s14
 801a0de:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801a0e2:	eb03 05c2 	add.w	r5, r3, r2, lsl #3
 801a0e6:	4619      	mov	r1, r3
 801a0e8:	4620      	mov	r0, r4
 801a0ea:	edc5 7a01 	vstr	s15, [r5, #4]
 801a0ee:	edc5 6a00 	vstr	s13, [r5]
 801a0f2:	f7fe ffcf 	bl	8019094 <points_coincide>
 801a0f6:	2800      	cmp	r0, #0
 801a0f8:	f47f abe4 	bne.w	80198c4 <calc_line_geometry+0x5b8>
 801a0fc:	a808      	add	r0, sp, #32
 801a0fe:	f7fe ffc9 	bl	8019094 <points_coincide>
 801a102:	2800      	cmp	r0, #0
 801a104:	f47f abde 	bne.w	80198c4 <calc_line_geometry+0x5b8>
 801a108:	3201      	adds	r2, #1
 801a10a:	f7ff bbdb 	b.w	80198c4 <calc_line_geometry+0x5b8>
 801a10e:	ee68 7a02 	vmul.f32	s15, s16, s4
 801a112:	ee29 6a83 	vmul.f32	s12, s19, s6
 801a116:	ee77 7ac6 	vsub.f32	s15, s15, s12
 801a11a:	ee87 9a87 	vdiv.f32	s18, s15, s14
 801a11e:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801a122:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a126:	f6ff abae 	blt.w	8019886 <calc_line_geometry+0x57a>
 801a12a:	eeb4 9ae6 	vcmpe.f32	s18, s13
 801a12e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a132:	f63f aba8 	bhi.w	8019886 <calc_line_geometry+0x57a>
 801a136:	ee64 aa09 	vmul.f32	s21, s8, s18
 801a13a:	ee22 9a89 	vmul.f32	s18, s5, s18
 801a13e:	ee7a aa80 	vadd.f32	s21, s21, s0
 801a142:	ee39 9a20 	vadd.f32	s18, s18, s1
 801a146:	4619      	mov	r1, r3
 801a148:	4620      	mov	r0, r4
 801a14a:	edcd aa12 	vstr	s21, [sp, #72]	@ 0x48
 801a14e:	ed8d 9a13 	vstr	s18, [sp, #76]	@ 0x4c
 801a152:	f7fe ff9f 	bl	8019094 <points_coincide>
 801a156:	2800      	cmp	r0, #0
 801a158:	f47f ab99 	bne.w	801988e <calc_line_geometry+0x582>
 801a15c:	a808      	add	r0, sp, #32
 801a15e:	f7fe ff99 	bl	8019094 <points_coincide>
 801a162:	fab0 f280 	clz	r2, r0
 801a166:	0952      	lsrs	r2, r2, #5
 801a168:	f7ff bb91 	b.w	801988e <calc_line_geometry+0x582>
 801a16c:	eeb1 4a67 	vneg.f32	s8, s15
 801a170:	eef4 4ac4 	vcmpe.f32	s9, s8
 801a174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a178:	f53f ad58 	bmi.w	8019c2c <calc_line_geometry+0x920>
 801a17c:	eddf 6a0d 	vldr	s13, [pc, #52]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a180:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a184:	e55d      	b.n	8019c42 <calc_line_geometry+0x936>
 801a186:	68d9      	ldr	r1, [r3, #12]
 801a188:	f8dd c050 	ldr.w	ip, [sp, #80]	@ 0x50
 801a18c:	eb01 0982 	add.w	r9, r1, r2, lsl #2
 801a190:	6819      	ldr	r1, [r3, #0]
 801a192:	f8c3 e010 	str.w	lr, [r3, #16]
 801a196:	f8dd e054 	ldr.w	lr, [sp, #84]	@ 0x54
 801a19a:	42b1      	cmp	r1, r6
 801a19c:	f8c9 c000 	str.w	ip, [r9]
 801a1a0:	f8c9 e004 	str.w	lr, [r9, #4]
 801a1a4:	d808      	bhi.n	801a1b8 <calc_line_geometry+0xeac>
 801a1a6:	2102      	movs	r1, #2
 801a1a8:	2201      	movs	r2, #1
 801a1aa:	615d      	str	r5, [r3, #20]
 801a1ac:	6299      	str	r1, [r3, #40]	@ 0x28
 801a1ae:	6002      	str	r2, [r0, #0]
 801a1b0:	e55a      	b.n	8019c68 <calc_line_geometry+0x95c>
 801a1b2:	bf00      	nop
 801a1b4:	3727c5ac 	.word	0x3727c5ac
 801a1b8:	3203      	adds	r2, #3
 801a1ba:	6859      	ldr	r1, [r3, #4]
 801a1bc:	4590      	cmp	r8, r2
 801a1be:	615d      	str	r5, [r3, #20]
 801a1c0:	558c      	strb	r4, [r1, r6]
 801a1c2:	d914      	bls.n	801a1ee <calc_line_geometry+0xee2>
 801a1c4:	ed89 6a02 	vstr	s12, [r9, #8]
 801a1c8:	611f      	str	r7, [r3, #16]
 801a1ca:	edc9 7a03 	vstr	s15, [r9, #12]
 801a1ce:	f7ff baf2 	b.w	80197b6 <calc_line_geometry+0x4aa>
 801a1d2:	2102      	movs	r1, #2
 801a1d4:	2201      	movs	r2, #1
 801a1d6:	611d      	str	r5, [r3, #16]
 801a1d8:	6299      	str	r1, [r3, #40]	@ 0x28
 801a1da:	6002      	str	r2, [r0, #0]
 801a1dc:	f7ff baeb 	b.w	80197b6 <calc_line_geometry+0x4aa>
 801a1e0:	2102      	movs	r1, #2
 801a1e2:	2201      	movs	r2, #1
 801a1e4:	615c      	str	r4, [r3, #20]
 801a1e6:	6299      	str	r1, [r3, #40]	@ 0x28
 801a1e8:	6002      	str	r2, [r0, #0]
 801a1ea:	f7ff babd 	b.w	8019768 <calc_line_geometry+0x45c>
 801a1ee:	2102      	movs	r1, #2
 801a1f0:	2201      	movs	r2, #1
 801a1f2:	611f      	str	r7, [r3, #16]
 801a1f4:	6299      	str	r1, [r3, #40]	@ 0x28
 801a1f6:	6002      	str	r2, [r0, #0]
 801a1f8:	f7ff badd 	b.w	80197b6 <calc_line_geometry+0x4aa>
 801a1fc:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a200:	ee36 6ae7 	vsub.f32	s12, s13, s15
 801a204:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a208:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a20c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a210:	bf48      	it	mi
 801a212:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a216:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a21a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a21e:	bf4c      	ite	mi
 801a220:	eef1 4a66 	vnegmi.f32	s9, s13
 801a224:	eef0 4a66 	vmovpl.f32	s9, s13
 801a228:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a22c:	f100 8112 	bmi.w	801a454 <calc_line_geometry+0x1148>
 801a230:	eef4 7ae4 	vcmpe.f32	s15, s9
 801a234:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a238:	f300 80dc 	bgt.w	801a3f4 <calc_line_geometry+0x10e8>
 801a23c:	ed5f 6a23 	vldr	s13, [pc, #-140]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a240:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801a244:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a248:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a24c:	f63f ac62 	bhi.w	8019b14 <calc_line_geometry+0x808>
 801a250:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a254:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a258:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a25c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a260:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a264:	bf48      	it	mi
 801a266:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a26a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a26e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a272:	bf4c      	ite	mi
 801a274:	eef1 4a66 	vnegmi.f32	s9, s13
 801a278:	eef0 4a66 	vmovpl.f32	s9, s13
 801a27c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a280:	f100 834a 	bmi.w	801a918 <calc_line_geometry+0x160c>
 801a284:	eeb4 7ae4 	vcmpe.f32	s14, s9
 801a288:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a28c:	f300 82d0 	bgt.w	801a830 <calc_line_geometry+0x1524>
 801a290:	ed5f 6a38 	vldr	s13, [pc, #-224]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a294:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a298:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a29c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2a0:	f63f ac38 	bhi.w	8019b14 <calc_line_geometry+0x808>
 801a2a4:	f7ff b9a9 	b.w	80195fa <calc_line_geometry+0x2ee>
 801a2a8:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a2ac:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a2b0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a2b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2b8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a2bc:	bf48      	it	mi
 801a2be:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a2c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2c6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a2ca:	bf4c      	ite	mi
 801a2cc:	eeb1 3a66 	vnegmi.f32	s6, s13
 801a2d0:	eeb0 3a66 	vmovpl.f32	s6, s13
 801a2d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2d8:	f100 80c8 	bmi.w	801a46c <calc_line_geometry+0x1160>
 801a2dc:	eeb4 7ac3 	vcmpe.f32	s14, s6
 801a2e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2e4:	f300 8092 	bgt.w	801a40c <calc_line_geometry+0x1100>
 801a2e8:	ed5f 6a4e 	vldr	s13, [pc, #-312]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a2ec:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a2f0:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a2f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2f8:	f63f ab6b 	bhi.w	80199d2 <calc_line_geometry+0x6c6>
 801a2fc:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a300:	ee36 6ae7 	vsub.f32	s12, s13, s15
 801a304:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a30c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a310:	bf48      	it	mi
 801a312:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a316:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a31a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a31e:	bf4c      	ite	mi
 801a320:	eeb1 3a66 	vnegmi.f32	s6, s13
 801a324:	eeb0 3a66 	vmovpl.f32	s6, s13
 801a328:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a32c:	f100 8312 	bmi.w	801a954 <calc_line_geometry+0x1648>
 801a330:	eef4 7ac3 	vcmpe.f32	s15, s6
 801a334:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a338:	f300 82e2 	bgt.w	801a900 <calc_line_geometry+0x15f4>
 801a33c:	ed5f 6a63 	vldr	s13, [pc, #-396]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a340:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801a344:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a348:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a34c:	f63f ab41 	bhi.w	80199d2 <calc_line_geometry+0x6c6>
 801a350:	f7ff b93a 	b.w	80195c8 <calc_line_geometry+0x2bc>
 801a354:	ee7a 6ac7 	vsub.f32	s13, s21, s14
 801a358:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a35c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a360:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a364:	bf48      	it	mi
 801a366:	eef1 6a66 	vnegmi.f32	s13, s13
 801a36a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a36e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a372:	bf4c      	ite	mi
 801a374:	eeb1 6a6a 	vnegmi.f32	s12, s21
 801a378:	eeb0 6a6a 	vmovpl.f32	s12, s21
 801a37c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a380:	d45c      	bmi.n	801a43c <calc_line_geometry+0x1130>
 801a382:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801a386:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a38a:	dc4b      	bgt.n	801a424 <calc_line_geometry+0x1118>
 801a38c:	ed5f aa77 	vldr	s21, [pc, #-476]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a390:	ee67 aa2a 	vmul.f32	s21, s14, s21
 801a394:	eef4 6aea 	vcmpe.f32	s13, s21
 801a398:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a39c:	f63f ab7b 	bhi.w	8019a96 <calc_line_geometry+0x78a>
 801a3a0:	ee78 6a67 	vsub.f32	s13, s16, s15
 801a3a4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a3a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3ac:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801a3b0:	bf48      	it	mi
 801a3b2:	eef1 6a66 	vnegmi.f32	s13, s13
 801a3b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a3be:	bf4c      	ite	mi
 801a3c0:	eeb1 6a48 	vnegmi.f32	s12, s16
 801a3c4:	eeb0 6a48 	vmovpl.f32	s12, s16
 801a3c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3cc:	f100 82b0 	bmi.w	801a930 <calc_line_geometry+0x1624>
 801a3d0:	eef4 7ac6 	vcmpe.f32	s15, s12
 801a3d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3d8:	f300 821e 	bgt.w	801a818 <calc_line_geometry+0x150c>
 801a3dc:	ed1f 8a8b 	vldr	s16, [pc, #-556]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a3e0:	ee27 8a88 	vmul.f32	s16, s15, s16
 801a3e4:	eef4 6ac8 	vcmpe.f32	s13, s16
 801a3e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3ec:	f63f ab53 	bhi.w	8019a96 <calc_line_geometry+0x78a>
 801a3f0:	f7ff b8d5 	b.w	801959e <calc_line_geometry+0x292>
 801a3f4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a3f8:	ed5f 4a92 	vldr	s9, [pc, #-584]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a3fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a400:	bf4c      	ite	mi
 801a402:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 801a406:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 801a40a:	e71b      	b.n	801a244 <calc_line_geometry+0xf38>
 801a40c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a410:	ed1f 3a98 	vldr	s6, [pc, #-608]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a418:	bf4c      	ite	mi
 801a41a:	ee66 6ac3 	vnmulmi.f32	s13, s13, s6
 801a41e:	ee66 6a83 	vmulpl.f32	s13, s13, s6
 801a422:	e765      	b.n	801a2f0 <calc_line_geometry+0xfe4>
 801a424:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a428:	ed1f 6a9e 	vldr	s12, [pc, #-632]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a42c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a430:	bf4c      	ite	mi
 801a432:	ee6a aac6 	vnmulmi.f32	s21, s21, s12
 801a436:	ee6a aa86 	vmulpl.f32	s21, s21, s12
 801a43a:	e7ab      	b.n	801a394 <calc_line_geometry+0x1088>
 801a43c:	eef1 3a47 	vneg.f32	s7, s14
 801a440:	eef4 3ac6 	vcmpe.f32	s7, s12
 801a444:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a448:	dcec      	bgt.n	801a424 <calc_line_geometry+0x1118>
 801a44a:	ed5f aaa6 	vldr	s21, [pc, #-664]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a44e:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801a452:	e79f      	b.n	801a394 <calc_line_geometry+0x1088>
 801a454:	eeb1 4a67 	vneg.f32	s8, s15
 801a458:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801a45c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a460:	dcc8      	bgt.n	801a3f4 <calc_line_geometry+0x10e8>
 801a462:	ed5f 6aac 	vldr	s13, [pc, #-688]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a466:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a46a:	e6eb      	b.n	801a244 <calc_line_geometry+0xf38>
 801a46c:	eeb1 8a47 	vneg.f32	s16, s14
 801a470:	eeb4 8ac3 	vcmpe.f32	s16, s6
 801a474:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a478:	dcc8      	bgt.n	801a40c <calc_line_geometry+0x1100>
 801a47a:	ed5f 6ab2 	vldr	s13, [pc, #-712]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a47e:	ee68 6a26 	vmul.f32	s13, s16, s13
 801a482:	e735      	b.n	801a2f0 <calc_line_geometry+0xfe4>
 801a484:	ed9d 7a12 	vldr	s14, [sp, #72]	@ 0x48
 801a488:	ee77 6a40 	vsub.f32	s13, s14, s0
 801a48c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a494:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a498:	bf48      	it	mi
 801a49a:	eef1 6a66 	vnegmi.f32	s13, s13
 801a49e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4a2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801a4a6:	bf4c      	ite	mi
 801a4a8:	eeb1 6a47 	vnegmi.f32	s12, s14
 801a4ac:	eeb0 6a47 	vmovpl.f32	s12, s14
 801a4b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4b4:	f100 82ba 	bmi.w	801aa2c <calc_line_geometry+0x1720>
 801a4b8:	eeb4 0ac6 	vcmpe.f32	s0, s12
 801a4bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4c0:	f300 826c 	bgt.w	801a99c <calc_line_geometry+0x1690>
 801a4c4:	ed1f 7ac5 	vldr	s14, [pc, #-788]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a4c8:	ee20 7a07 	vmul.f32	s14, s0, s14
 801a4cc:	eef4 6ac7 	vcmpe.f32	s13, s14
 801a4d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4d4:	ee63 7a27 	vmul.f32	s15, s6, s15
 801a4d8:	f63f acdd 	bhi.w	8019e96 <calc_line_geometry+0xb8a>
 801a4dc:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a4e0:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a4e4:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a4e8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a4ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4f0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a4f4:	bf48      	it	mi
 801a4f6:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a4fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4fe:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a502:	bf4c      	ite	mi
 801a504:	eef1 5a47 	vnegmi.f32	s11, s14
 801a508:	eef0 5a47 	vmovpl.f32	s11, s14
 801a50c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a510:	f100 82e3 	bmi.w	801aada <calc_line_geometry+0x17ce>
 801a514:	eef4 6ae5 	vcmpe.f32	s13, s11
 801a518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a51c:	f300 82e5 	bgt.w	801aaea <calc_line_geometry+0x17de>
 801a520:	ed1f 7adc 	vldr	s14, [pc, #-880]	@ 801a1b4 <calc_line_geometry+0xea8>
 801a524:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a528:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a52c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a530:	f63f acb1 	bhi.w	8019e96 <calc_line_geometry+0xb8a>
 801a534:	f7fe bfab 	b.w	801948e <calc_line_geometry+0x182>
 801a538:	eddd 6a12 	vldr	s13, [sp, #72]	@ 0x48
 801a53c:	ee36 6ac7 	vsub.f32	s12, s13, s14
 801a540:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a544:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a548:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a54c:	bf48      	it	mi
 801a54e:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a552:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a556:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a55a:	bf4c      	ite	mi
 801a55c:	eef1 5a66 	vnegmi.f32	s11, s13
 801a560:	eef0 5a66 	vmovpl.f32	s11, s13
 801a564:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a568:	f100 8254 	bmi.w	801aa14 <calc_line_geometry+0x1708>
 801a56c:	eeb4 7ae5 	vcmpe.f32	s14, s11
 801a570:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a574:	f300 8206 	bgt.w	801a984 <calc_line_geometry+0x1678>
 801a578:	eddf 6af4 	vldr	s13, [pc, #976]	@ 801a94c <calc_line_geometry+0x1640>
 801a57c:	ee67 6a26 	vmul.f32	s13, s14, s13
 801a580:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a584:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a588:	ee63 7a27 	vmul.f32	s15, s6, s15
 801a58c:	f63f acad 	bhi.w	8019eea <calc_line_geometry+0xbde>
 801a590:	eddd 6a13 	vldr	s13, [sp, #76]	@ 0x4c
 801a594:	ee37 6aa0 	vadd.f32	s12, s15, s1
 801a598:	ee76 5ac6 	vsub.f32	s11, s13, s12
 801a59c:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801a5a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5a4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a5a8:	bf48      	it	mi
 801a5aa:	eef1 5a65 	vnegmi.f32	s11, s11
 801a5ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5b2:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a5b6:	bf4c      	ite	mi
 801a5b8:	eeb1 4a66 	vnegmi.f32	s8, s13
 801a5bc:	eeb0 4a66 	vmovpl.f32	s8, s13
 801a5c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5c4:	f100 8276 	bmi.w	801aab4 <calc_line_geometry+0x17a8>
 801a5c8:	eeb4 4ac6 	vcmpe.f32	s8, s12
 801a5cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5d0:	f100 8278 	bmi.w	801aac4 <calc_line_geometry+0x17b8>
 801a5d4:	eddf 6add 	vldr	s13, [pc, #884]	@ 801a94c <calc_line_geometry+0x1640>
 801a5d8:	ee66 6a26 	vmul.f32	s13, s12, s13
 801a5dc:	eef4 5ae6 	vcmpe.f32	s11, s13
 801a5e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5e4:	f63f ac81 	bhi.w	8019eea <calc_line_geometry+0xbde>
 801a5e8:	f7fe bf38 	b.w	801945c <calc_line_geometry+0x150>
 801a5ec:	ee7a 7a66 	vsub.f32	s15, s20, s13
 801a5f0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a5f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5f8:	eeb5 aac0 	vcmpe.f32	s20, #0.0
 801a5fc:	bf48      	it	mi
 801a5fe:	eef1 7a67 	vnegmi.f32	s15, s15
 801a602:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a606:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a60a:	bf4c      	ite	mi
 801a60c:	eeb1 6a4a 	vnegmi.f32	s12, s20
 801a610:	eeb0 6a4a 	vmovpl.f32	s12, s20
 801a614:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a618:	f100 822c 	bmi.w	801aa74 <calc_line_geometry+0x1768>
 801a61c:	eef4 6ac6 	vcmpe.f32	s13, s12
 801a620:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a624:	f300 81a2 	bgt.w	801a96c <calc_line_geometry+0x1660>
 801a628:	ed9f aac8 	vldr	s20, [pc, #800]	@ 801a94c <calc_line_geometry+0x1640>
 801a62c:	ee26 aa8a 	vmul.f32	s20, s13, s20
 801a630:	eef4 7aca 	vcmpe.f32	s15, s20
 801a634:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a638:	ee63 7a07 	vmul.f32	s15, s6, s14
 801a63c:	f63f ac8a 	bhi.w	8019f54 <calc_line_geometry+0xc48>
 801a640:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801a644:	ee34 6a47 	vsub.f32	s12, s8, s14
 801a648:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a64c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a650:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 801a654:	bf48      	it	mi
 801a656:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a65a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a65e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a662:	bf4c      	ite	mi
 801a664:	eef1 3a44 	vnegmi.f32	s7, s8
 801a668:	eef0 3a44 	vmovpl.f32	s7, s8
 801a66c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a670:	f100 820d 	bmi.w	801aa8e <calc_line_geometry+0x1782>
 801a674:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801a678:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a67c:	f300 820f 	bgt.w	801aa9e <calc_line_geometry+0x1792>
 801a680:	ed9f 4ab2 	vldr	s8, [pc, #712]	@ 801a94c <calc_line_geometry+0x1640>
 801a684:	ee27 4a04 	vmul.f32	s8, s14, s8
 801a688:	eeb4 6ac4 	vcmpe.f32	s12, s8
 801a68c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a690:	f63f ac60 	bhi.w	8019f54 <calc_line_geometry+0xc48>
 801a694:	f7fe becd 	b.w	8019432 <calc_line_geometry+0x126>
 801a698:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801a69c:	ee37 7ac0 	vsub.f32	s14, s15, s0
 801a6a0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a6a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6a8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a6ac:	bf48      	it	mi
 801a6ae:	eeb1 7a47 	vnegmi.f32	s14, s14
 801a6b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6b6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801a6ba:	bf4c      	ite	mi
 801a6bc:	eeb1 6a67 	vnegmi.f32	s12, s15
 801a6c0:	eeb0 6a67 	vmovpl.f32	s12, s15
 801a6c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6c8:	f100 81bc 	bmi.w	801aa44 <calc_line_geometry+0x1738>
 801a6cc:	eeb4 6ac0 	vcmpe.f32	s12, s0
 801a6d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6d4:	f100 816e 	bmi.w	801a9b4 <calc_line_geometry+0x16a8>
 801a6d8:	eddf 7a9c 	vldr	s15, [pc, #624]	@ 801a94c <calc_line_geometry+0x1640>
 801a6dc:	ee60 7a27 	vmul.f32	s15, s0, s15
 801a6e0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801a6e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6e8:	ee62 7aa6 	vmul.f32	s15, s5, s13
 801a6ec:	f63f ac9a 	bhi.w	801a024 <calc_line_geometry+0xd18>
 801a6f0:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a6f4:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a6f8:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a6fc:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a700:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a704:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a708:	bf48      	it	mi
 801a70a:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a70e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a712:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a716:	bf4c      	ite	mi
 801a718:	eef1 4a47 	vnegmi.f32	s9, s14
 801a71c:	eef0 4a47 	vmovpl.f32	s9, s14
 801a720:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a724:	f100 81f7 	bmi.w	801ab16 <calc_line_geometry+0x180a>
 801a728:	eef4 4ae6 	vcmpe.f32	s9, s13
 801a72c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a730:	f140 81f9 	bpl.w	801ab26 <calc_line_geometry+0x181a>
 801a734:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a738:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a73c:	eddf 6a83 	vldr	s13, [pc, #524]	@ 801a94c <calc_line_geometry+0x1640>
 801a740:	f100 8202 	bmi.w	801ab48 <calc_line_geometry+0x183c>
 801a744:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a748:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a74c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a750:	f63f ac68 	bhi.w	801a024 <calc_line_geometry+0xd18>
 801a754:	f7ff b8e4 	b.w	8019920 <calc_line_geometry+0x614>
 801a758:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801a75c:	ee37 7ae3 	vsub.f32	s14, s15, s7
 801a760:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a764:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a768:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a76c:	bf48      	it	mi
 801a76e:	eeb1 7a47 	vnegmi.f32	s14, s14
 801a772:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a776:	eef5 3ac0 	vcmpe.f32	s7, #0.0
 801a77a:	bf4c      	ite	mi
 801a77c:	eef1 6a67 	vnegmi.f32	s13, s15
 801a780:	eef0 6a67 	vmovpl.f32	s13, s15
 801a784:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a788:	f100 8168 	bmi.w	801aa5c <calc_line_geometry+0x1750>
 801a78c:	eef4 6ae3 	vcmpe.f32	s13, s7
 801a790:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a794:	f100 811a 	bmi.w	801a9cc <calc_line_geometry+0x16c0>
 801a798:	eddf 7a6c 	vldr	s15, [pc, #432]	@ 801a94c <calc_line_geometry+0x1640>
 801a79c:	ee63 7aa7 	vmul.f32	s15, s7, s15
 801a7a0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801a7a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7a8:	ee62 7a86 	vmul.f32	s15, s5, s12
 801a7ac:	f63f ac63 	bhi.w	801a076 <calc_line_geometry+0xd6a>
 801a7b0:	ed9d 7a13 	vldr	s14, [sp, #76]	@ 0x4c
 801a7b4:	ee77 6aa0 	vadd.f32	s13, s15, s1
 801a7b8:	ee37 6a66 	vsub.f32	s12, s14, s13
 801a7bc:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a7c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7c4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a7c8:	bf48      	it	mi
 801a7ca:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a7ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7d2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a7d6:	bf4c      	ite	mi
 801a7d8:	eeb1 3a47 	vnegmi.f32	s6, s14
 801a7dc:	eeb0 3a47 	vmovpl.f32	s6, s14
 801a7e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7e4:	f100 818c 	bmi.w	801ab00 <calc_line_geometry+0x17f4>
 801a7e8:	eeb4 3ae6 	vcmpe.f32	s6, s13
 801a7ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7f0:	f140 818e 	bpl.w	801ab10 <calc_line_geometry+0x1804>
 801a7f4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a7f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7fc:	eddf 6a53 	vldr	s13, [pc, #332]	@ 801a94c <calc_line_geometry+0x1640>
 801a800:	f100 81a5 	bmi.w	801ab4e <calc_line_geometry+0x1842>
 801a804:	ee26 7a87 	vmul.f32	s14, s13, s14
 801a808:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a80c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a810:	f63f ac31 	bhi.w	801a076 <calc_line_geometry+0xd6a>
 801a814:	f7ff b86b 	b.w	80198ee <calc_line_geometry+0x5e2>
 801a818:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801a81c:	ed9f 6a4b 	vldr	s12, [pc, #300]	@ 801a94c <calc_line_geometry+0x1640>
 801a820:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a824:	bf4c      	ite	mi
 801a826:	ee28 8a46 	vnmulmi.f32	s16, s16, s12
 801a82a:	ee28 8a06 	vmulpl.f32	s16, s16, s12
 801a82e:	e5d9      	b.n	801a3e4 <calc_line_geometry+0x10d8>
 801a830:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a834:	eddf 4a45 	vldr	s9, [pc, #276]	@ 801a94c <calc_line_geometry+0x1640>
 801a838:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a83c:	bf4c      	ite	mi
 801a83e:	ee66 6ae4 	vnmulmi.f32	s13, s13, s9
 801a842:	ee66 6aa4 	vmulpl.f32	s13, s13, s9
 801a846:	e527      	b.n	801a298 <calc_line_geometry+0xf8c>
 801a848:	ee7a 7ae6 	vsub.f32	s15, s21, s13
 801a84c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a850:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a854:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a858:	bf48      	it	mi
 801a85a:	eef1 7a67 	vnegmi.f32	s15, s15
 801a85e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a862:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a866:	bf4c      	ite	mi
 801a868:	eeb1 6a6a 	vnegmi.f32	s12, s21
 801a86c:	eeb0 6a6a 	vmovpl.f32	s12, s21
 801a870:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a874:	f100 80c2 	bmi.w	801a9fc <calc_line_geometry+0x16f0>
 801a878:	eeb4 6ae6 	vcmpe.f32	s12, s13
 801a87c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a880:	f100 80b0 	bmi.w	801a9e4 <calc_line_geometry+0x16d8>
 801a884:	eddf aa31 	vldr	s21, [pc, #196]	@ 801a94c <calc_line_geometry+0x1640>
 801a888:	ee66 aaaa 	vmul.f32	s21, s13, s21
 801a88c:	eef4 7aea 	vcmpe.f32	s15, s21
 801a890:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a894:	ee62 7a87 	vmul.f32	s15, s5, s14
 801a898:	f63f ac21 	bhi.w	801a0de <calc_line_geometry+0xdd2>
 801a89c:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801a8a0:	ee39 6a47 	vsub.f32	s12, s18, s14
 801a8a4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 801a8a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8ac:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801a8b0:	bf48      	it	mi
 801a8b2:	eeb1 6a46 	vnegmi.f32	s12, s12
 801a8b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8ba:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a8be:	bf4c      	ite	mi
 801a8c0:	eef1 3a49 	vnegmi.f32	s7, s18
 801a8c4:	eef0 3a49 	vmovpl.f32	s7, s18
 801a8c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8cc:	f100 812e 	bmi.w	801ab2c <calc_line_geometry+0x1820>
 801a8d0:	eef4 3ac7 	vcmpe.f32	s7, s14
 801a8d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8d8:	f140 8130 	bpl.w	801ab3c <calc_line_geometry+0x1830>
 801a8dc:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801a8e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8e4:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 801a94c <calc_line_geometry+0x1640>
 801a8e8:	f100 812b 	bmi.w	801ab42 <calc_line_geometry+0x1836>
 801a8ec:	ee27 9a09 	vmul.f32	s18, s14, s18
 801a8f0:	eeb4 6ac9 	vcmpe.f32	s12, s18
 801a8f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a8f8:	f63f abf1 	bhi.w	801a0de <calc_line_geometry+0xdd2>
 801a8fc:	f7fe bfe2 	b.w	80198c4 <calc_line_geometry+0x5b8>
 801a900:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a904:	ed9f 3a11 	vldr	s6, [pc, #68]	@ 801a94c <calc_line_geometry+0x1640>
 801a908:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a90c:	bf4c      	ite	mi
 801a90e:	ee66 6ac3 	vnmulmi.f32	s13, s13, s6
 801a912:	ee66 6a83 	vmulpl.f32	s13, s13, s6
 801a916:	e515      	b.n	801a344 <calc_line_geometry+0x1038>
 801a918:	eeb1 4a47 	vneg.f32	s8, s14
 801a91c:	eeb4 4ae4 	vcmpe.f32	s8, s9
 801a920:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a924:	dc84      	bgt.n	801a830 <calc_line_geometry+0x1524>
 801a926:	eddf 6a09 	vldr	s13, [pc, #36]	@ 801a94c <calc_line_geometry+0x1640>
 801a92a:	ee64 6a26 	vmul.f32	s13, s8, s13
 801a92e:	e4b3      	b.n	801a298 <calc_line_geometry+0xf8c>
 801a930:	eef1 3a67 	vneg.f32	s7, s15
 801a934:	eef4 3ac6 	vcmpe.f32	s7, s12
 801a938:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a93c:	f73f af6c 	bgt.w	801a818 <calc_line_geometry+0x150c>
 801a940:	ed9f 8a02 	vldr	s16, [pc, #8]	@ 801a94c <calc_line_geometry+0x1640>
 801a944:	ee23 8a88 	vmul.f32	s16, s7, s16
 801a948:	e54c      	b.n	801a3e4 <calc_line_geometry+0x10d8>
 801a94a:	bf00      	nop
 801a94c:	3727c5ac 	.word	0x3727c5ac
 801a950:	3727c5ac 	.word	0x3727c5ac
 801a954:	eeb1 8a67 	vneg.f32	s16, s15
 801a958:	eeb4 8ac3 	vcmpe.f32	s16, s6
 801a95c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a960:	dcce      	bgt.n	801a900 <calc_line_geometry+0x15f4>
 801a962:	ed5f 6a05 	vldr	s13, [pc, #-20]	@ 801a950 <calc_line_geometry+0x1644>
 801a966:	ee68 6a26 	vmul.f32	s13, s16, s13
 801a96a:	e4eb      	b.n	801a344 <calc_line_geometry+0x1038>
 801a96c:	eeb5 aac0 	vcmpe.f32	s20, #0.0
 801a970:	ed1f 6a09 	vldr	s12, [pc, #-36]	@ 801a950 <calc_line_geometry+0x1644>
 801a974:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a978:	bf4c      	ite	mi
 801a97a:	ee2a aa46 	vnmulmi.f32	s20, s20, s12
 801a97e:	ee2a aa06 	vmulpl.f32	s20, s20, s12
 801a982:	e655      	b.n	801a630 <calc_line_geometry+0x1324>
 801a984:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801a988:	ed5f 5a0f 	vldr	s11, [pc, #-60]	@ 801a950 <calc_line_geometry+0x1644>
 801a98c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a990:	bf4c      	ite	mi
 801a992:	ee66 6ae5 	vnmulmi.f32	s13, s13, s11
 801a996:	ee66 6aa5 	vmulpl.f32	s13, s13, s11
 801a99a:	e5f1      	b.n	801a580 <calc_line_geometry+0x1274>
 801a99c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801a9a0:	ed1f 6a15 	vldr	s12, [pc, #-84]	@ 801a950 <calc_line_geometry+0x1644>
 801a9a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9a8:	bf4c      	ite	mi
 801a9aa:	ee27 7a46 	vnmulmi.f32	s14, s14, s12
 801a9ae:	ee27 7a06 	vmulpl.f32	s14, s14, s12
 801a9b2:	e58b      	b.n	801a4cc <calc_line_geometry+0x11c0>
 801a9b4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a9b8:	ed1f 6a1b 	vldr	s12, [pc, #-108]	@ 801a950 <calc_line_geometry+0x1644>
 801a9bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9c0:	bf4c      	ite	mi
 801a9c2:	ee67 7ac6 	vnmulmi.f32	s15, s15, s12
 801a9c6:	ee67 7a86 	vmulpl.f32	s15, s15, s12
 801a9ca:	e689      	b.n	801a6e0 <calc_line_geometry+0x13d4>
 801a9cc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a9d0:	ed5f 6a21 	vldr	s13, [pc, #-132]	@ 801a950 <calc_line_geometry+0x1644>
 801a9d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9d8:	bf4c      	ite	mi
 801a9da:	ee67 7ae6 	vnmulmi.f32	s15, s15, s13
 801a9de:	ee67 7aa6 	vmulpl.f32	s15, s15, s13
 801a9e2:	e6dd      	b.n	801a7a0 <calc_line_geometry+0x1494>
 801a9e4:	eef5 aac0 	vcmpe.f32	s21, #0.0
 801a9e8:	ed1f 6a27 	vldr	s12, [pc, #-156]	@ 801a950 <calc_line_geometry+0x1644>
 801a9ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a9f0:	bf4c      	ite	mi
 801a9f2:	ee6a aac6 	vnmulmi.f32	s21, s21, s12
 801a9f6:	ee6a aa86 	vmulpl.f32	s21, s21, s12
 801a9fa:	e747      	b.n	801a88c <calc_line_geometry+0x1580>
 801a9fc:	eef1 3a66 	vneg.f32	s7, s13
 801aa00:	eef4 3ac6 	vcmpe.f32	s7, s12
 801aa04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa08:	dcec      	bgt.n	801a9e4 <calc_line_geometry+0x16d8>
 801aa0a:	ed5f aa2f 	vldr	s21, [pc, #-188]	@ 801a950 <calc_line_geometry+0x1644>
 801aa0e:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801aa12:	e73b      	b.n	801a88c <calc_line_geometry+0x1580>
 801aa14:	eeb1 4a47 	vneg.f32	s8, s14
 801aa18:	eeb4 4ae5 	vcmpe.f32	s8, s11
 801aa1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa20:	dcb0      	bgt.n	801a984 <calc_line_geometry+0x1678>
 801aa22:	ed5f 6a35 	vldr	s13, [pc, #-212]	@ 801a950 <calc_line_geometry+0x1644>
 801aa26:	ee64 6a26 	vmul.f32	s13, s8, s13
 801aa2a:	e5a9      	b.n	801a580 <calc_line_geometry+0x1274>
 801aa2c:	eef1 5a40 	vneg.f32	s11, s0
 801aa30:	eef4 5ac6 	vcmpe.f32	s11, s12
 801aa34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa38:	dcb0      	bgt.n	801a99c <calc_line_geometry+0x1690>
 801aa3a:	ed1f 7a3b 	vldr	s14, [pc, #-236]	@ 801a950 <calc_line_geometry+0x1644>
 801aa3e:	ee25 7a87 	vmul.f32	s14, s11, s14
 801aa42:	e543      	b.n	801a4cc <calc_line_geometry+0x11c0>
 801aa44:	eef1 4a40 	vneg.f32	s9, s0
 801aa48:	eef4 4ac6 	vcmpe.f32	s9, s12
 801aa4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa50:	dcb0      	bgt.n	801a9b4 <calc_line_geometry+0x16a8>
 801aa52:	ed5f 7a41 	vldr	s15, [pc, #-260]	@ 801a950 <calc_line_geometry+0x1644>
 801aa56:	ee64 7aa7 	vmul.f32	s15, s9, s15
 801aa5a:	e641      	b.n	801a6e0 <calc_line_geometry+0x13d4>
 801aa5c:	eeb1 3a63 	vneg.f32	s6, s7
 801aa60:	eeb4 3ae6 	vcmpe.f32	s6, s13
 801aa64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa68:	dcb0      	bgt.n	801a9cc <calc_line_geometry+0x16c0>
 801aa6a:	ed5f 7a47 	vldr	s15, [pc, #-284]	@ 801a950 <calc_line_geometry+0x1644>
 801aa6e:	ee63 7a27 	vmul.f32	s15, s6, s15
 801aa72:	e695      	b.n	801a7a0 <calc_line_geometry+0x1494>
 801aa74:	eef1 3a66 	vneg.f32	s7, s13
 801aa78:	eef4 3ac6 	vcmpe.f32	s7, s12
 801aa7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa80:	f73f af74 	bgt.w	801a96c <calc_line_geometry+0x1660>
 801aa84:	ed1f aa4e 	vldr	s20, [pc, #-312]	@ 801a950 <calc_line_geometry+0x1644>
 801aa88:	ee23 aa8a 	vmul.f32	s20, s7, s20
 801aa8c:	e5d0      	b.n	801a630 <calc_line_geometry+0x1324>
 801aa8e:	eeb1 7a47 	vneg.f32	s14, s14
 801aa92:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801aa96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aa9a:	f77f adf1 	ble.w	801a680 <calc_line_geometry+0x1374>
 801aa9e:	eeb5 4ac0 	vcmpe.f32	s8, #0.0
 801aaa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aaa6:	ed1f 7a56 	vldr	s14, [pc, #-344]	@ 801a950 <calc_line_geometry+0x1644>
 801aaaa:	f57f adeb 	bpl.w	801a684 <calc_line_geometry+0x1378>
 801aaae:	ee24 4a47 	vnmul.f32	s8, s8, s14
 801aab2:	e5e9      	b.n	801a688 <calc_line_geometry+0x137c>
 801aab4:	eeb1 6a46 	vneg.f32	s12, s12
 801aab8:	eeb4 6ac4 	vcmpe.f32	s12, s8
 801aabc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aac0:	f77f ad88 	ble.w	801a5d4 <calc_line_geometry+0x12c8>
 801aac4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801aac8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aacc:	ed1f 6a60 	vldr	s12, [pc, #-384]	@ 801a950 <calc_line_geometry+0x1644>
 801aad0:	f57f ad82 	bpl.w	801a5d8 <calc_line_geometry+0x12cc>
 801aad4:	ee66 6ac6 	vnmul.f32	s13, s13, s12
 801aad8:	e580      	b.n	801a5dc <calc_line_geometry+0x12d0>
 801aada:	eef1 6a66 	vneg.f32	s13, s13
 801aade:	eef4 6ae5 	vcmpe.f32	s13, s11
 801aae2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aae6:	f77f ad1b 	ble.w	801a520 <calc_line_geometry+0x1214>
 801aaea:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801aaee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aaf2:	ed5f 6a69 	vldr	s13, [pc, #-420]	@ 801a950 <calc_line_geometry+0x1644>
 801aaf6:	f57f ad15 	bpl.w	801a524 <calc_line_geometry+0x1218>
 801aafa:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801aafe:	e513      	b.n	801a528 <calc_line_geometry+0x121c>
 801ab00:	eef1 6a66 	vneg.f32	s13, s13
 801ab04:	eef4 6ac3 	vcmpe.f32	s13, s6
 801ab08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab0c:	f73f ae72 	bgt.w	801a7f4 <calc_line_geometry+0x14e8>
 801ab10:	ed1f 7a71 	vldr	s14, [pc, #-452]	@ 801a950 <calc_line_geometry+0x1644>
 801ab14:	e676      	b.n	801a804 <calc_line_geometry+0x14f8>
 801ab16:	eef1 6a66 	vneg.f32	s13, s13
 801ab1a:	eef4 6ae4 	vcmpe.f32	s13, s9
 801ab1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab22:	f73f ae07 	bgt.w	801a734 <calc_line_geometry+0x1428>
 801ab26:	ed1f 7a76 	vldr	s14, [pc, #-472]	@ 801a950 <calc_line_geometry+0x1644>
 801ab2a:	e60b      	b.n	801a744 <calc_line_geometry+0x1438>
 801ab2c:	eeb1 7a47 	vneg.f32	s14, s14
 801ab30:	eeb4 7ae3 	vcmpe.f32	s14, s7
 801ab34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab38:	f73f aed0 	bgt.w	801a8dc <calc_line_geometry+0x15d0>
 801ab3c:	ed1f 9a7c 	vldr	s18, [pc, #-496]	@ 801a950 <calc_line_geometry+0x1644>
 801ab40:	e6d4      	b.n	801a8ec <calc_line_geometry+0x15e0>
 801ab42:	ee29 9a47 	vnmul.f32	s18, s18, s14
 801ab46:	e6d3      	b.n	801a8f0 <calc_line_geometry+0x15e4>
 801ab48:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801ab4c:	e5fc      	b.n	801a748 <calc_line_geometry+0x143c>
 801ab4e:	ee27 7a66 	vnmul.f32	s14, s14, s13
 801ab52:	e659      	b.n	801a808 <calc_line_geometry+0x14fc>

0801ab54 <cubic_decasteljau>:
 801ab54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab58:	ed2d 8b0a 	vpush	{d8-d12}
 801ab5c:	4fd5      	ldr	r7, [pc, #852]	@ (801aeb4 <cubic_decasteljau+0x360>)
 801ab5e:	4bd6      	ldr	r3, [pc, #856]	@ (801aeb8 <cubic_decasteljau+0x364>)
 801ab60:	eeb0 8a40 	vmov.f32	s16, s0
 801ab64:	eef0 8a60 	vmov.f32	s17, s1
 801ab68:	eef0 ba43 	vmov.f32	s23, s6
 801ab6c:	eeb0 ca63 	vmov.f32	s24, s7
 801ab70:	eeb0 aa41 	vmov.f32	s20, s2
 801ab74:	eeb0 9a61 	vmov.f32	s18, s3
 801ab78:	eef0 aa42 	vmov.f32	s21, s4
 801ab7c:	eef0 9a62 	vmov.f32	s19, s5
 801ab80:	edd7 6a00 	vldr	s13, [r7]
 801ab84:	ed93 6a00 	vldr	s12, [r3]
 801ab88:	2401      	movs	r4, #1
 801ab8a:	ed9f bacc 	vldr	s22, [pc, #816]	@ 801aebc <cubic_decasteljau+0x368>
 801ab8e:	4dcc      	ldr	r5, [pc, #816]	@ (801aec0 <cubic_decasteljau+0x36c>)
 801ab90:	f8df a334 	ldr.w	sl, [pc, #820]	@ 801aec8 <cubic_decasteljau+0x374>
 801ab94:	b089      	sub	sp, #36	@ 0x24
 801ab96:	eeb4 8ae6 	vcmpe.f32	s16, s13
 801ab9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab9e:	dc14      	bgt.n	801abca <cubic_decasteljau+0x76>
 801aba0:	eef4 8ae6 	vcmpe.f32	s17, s13
 801aba4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801aba8:	dc0f      	bgt.n	801abca <cubic_decasteljau+0x76>
 801abaa:	eeb4 8ac6 	vcmpe.f32	s16, s12
 801abae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abb2:	d40a      	bmi.n	801abca <cubic_decasteljau+0x76>
 801abb4:	eef4 8ac6 	vcmpe.f32	s17, s12
 801abb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abbc:	d405      	bmi.n	801abca <cubic_decasteljau+0x76>
 801abbe:	eeb4 aae6 	vcmpe.f32	s20, s13
 801abc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abc6:	f340 8129 	ble.w	801ae1c <cubic_decasteljau+0x2c8>
 801abca:	2300      	movs	r3, #0
 801abcc:	ee76 7a0b 	vadd.f32	s15, s12, s22
 801abd0:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801abd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abd8:	ee36 7acb 	vsub.f32	s14, s13, s22
 801abdc:	d50f      	bpl.n	801abfe <cubic_decasteljau+0xaa>
 801abde:	eeb4 aae7 	vcmpe.f32	s20, s15
 801abe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abe6:	d50a      	bpl.n	801abfe <cubic_decasteljau+0xaa>
 801abe8:	eef4 aae7 	vcmpe.f32	s21, s15
 801abec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abf0:	d505      	bpl.n	801abfe <cubic_decasteljau+0xaa>
 801abf2:	eef4 bae7 	vcmpe.f32	s23, s15
 801abf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801abfa:	f100 80a7 	bmi.w	801ad4c <cubic_decasteljau+0x1f8>
 801abfe:	eeb4 8ac7 	vcmpe.f32	s16, s14
 801ac02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac06:	dd0f      	ble.n	801ac28 <cubic_decasteljau+0xd4>
 801ac08:	eeb4 aac7 	vcmpe.f32	s20, s14
 801ac0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac10:	dd0a      	ble.n	801ac28 <cubic_decasteljau+0xd4>
 801ac12:	eef4 aac7 	vcmpe.f32	s21, s14
 801ac16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac1a:	dd05      	ble.n	801ac28 <cubic_decasteljau+0xd4>
 801ac1c:	eef4 bac7 	vcmpe.f32	s23, s14
 801ac20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac24:	f300 8092 	bgt.w	801ad4c <cubic_decasteljau+0x1f8>
 801ac28:	eef4 8ae7 	vcmpe.f32	s17, s15
 801ac2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac30:	d50e      	bpl.n	801ac50 <cubic_decasteljau+0xfc>
 801ac32:	eeb4 9ae7 	vcmpe.f32	s18, s15
 801ac36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac3a:	d509      	bpl.n	801ac50 <cubic_decasteljau+0xfc>
 801ac3c:	eef4 9ae7 	vcmpe.f32	s19, s15
 801ac40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac44:	d504      	bpl.n	801ac50 <cubic_decasteljau+0xfc>
 801ac46:	eeb4 cae7 	vcmpe.f32	s24, s15
 801ac4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac4e:	d47d      	bmi.n	801ad4c <cubic_decasteljau+0x1f8>
 801ac50:	eef4 8ac7 	vcmpe.f32	s17, s14
 801ac54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac58:	dd0e      	ble.n	801ac78 <cubic_decasteljau+0x124>
 801ac5a:	eeb4 9ac7 	vcmpe.f32	s18, s14
 801ac5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac62:	dd09      	ble.n	801ac78 <cubic_decasteljau+0x124>
 801ac64:	eef4 9ac7 	vcmpe.f32	s19, s14
 801ac68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac6c:	dd04      	ble.n	801ac78 <cubic_decasteljau+0x124>
 801ac6e:	eeb4 cac7 	vcmpe.f32	s24, s14
 801ac72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac76:	dc69      	bgt.n	801ad4c <cubic_decasteljau+0x1f8>
 801ac78:	682a      	ldr	r2, [r5, #0]
 801ac7a:	2b00      	cmp	r3, #0
 801ac7c:	d077      	beq.n	801ad6e <cubic_decasteljau+0x21a>
 801ac7e:	f8df e24c 	ldr.w	lr, [pc, #588]	@ 801aecc <cubic_decasteljau+0x378>
 801ac82:	4b90      	ldr	r3, [pc, #576]	@ (801aec4 <cubic_decasteljau+0x370>)
 801ac84:	f8de 6000 	ldr.w	r6, [lr]
 801ac88:	e9d3 1004 	ldrd	r1, r0, [r3, #16]
 801ac8c:	3c01      	subs	r4, #1
 801ac8e:	f100 0901 	add.w	r9, r0, #1
 801ac92:	f101 0806 	add.w	r8, r1, #6
 801ac96:	2e00      	cmp	r6, #0
 801ac98:	d155      	bne.n	801ad46 <cubic_decasteljau+0x1f2>
 801ac9a:	681e      	ldr	r6, [r3, #0]
 801ac9c:	4286      	cmp	r6, r0
 801ac9e:	d828      	bhi.n	801acf2 <cubic_decasteljau+0x19e>
 801aca0:	2002      	movs	r0, #2
 801aca2:	2101      	movs	r1, #1
 801aca4:	f8c3 9014 	str.w	r9, [r3, #20]
 801aca8:	6298      	str	r0, [r3, #40]	@ 0x28
 801acaa:	f8ce 1000 	str.w	r1, [lr]
 801acae:	f8c3 8010 	str.w	r8, [r3, #16]
 801acb2:	b1aa      	cbz	r2, 801ace0 <cubic_decasteljau+0x18c>
 801acb4:	3a01      	subs	r2, #1
 801acb6:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801acba:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 801acbe:	eef0 8a4c 	vmov.f32	s17, s24
 801acc2:	eeb0 8a6b 	vmov.f32	s16, s23
 801acc6:	ed93 aa00 	vldr	s20, [r3]
 801acca:	ed93 9a01 	vldr	s18, [r3, #4]
 801acce:	edd3 aa02 	vldr	s21, [r3, #8]
 801acd2:	edd3 9a03 	vldr	s19, [r3, #12]
 801acd6:	ed93 ca05 	vldr	s24, [r3, #20]
 801acda:	edd3 ba04 	vldr	s23, [r3, #16]
 801acde:	602a      	str	r2, [r5, #0]
 801ace0:	2c00      	cmp	r4, #0
 801ace2:	f000 8094 	beq.w	801ae0e <cubic_decasteljau+0x2ba>
 801ace6:	4b74      	ldr	r3, [pc, #464]	@ (801aeb8 <cubic_decasteljau+0x364>)
 801ace8:	edd7 6a00 	vldr	s13, [r7]
 801acec:	ed93 6a00 	vldr	s12, [r3]
 801acf0:	e751      	b.n	801ab96 <cubic_decasteljau+0x42>
 801acf2:	f04f 0b06 	mov.w	fp, #6
 801acf6:	f8c3 9014 	str.w	r9, [r3, #20]
 801acfa:	e9d3 6901 	ldrd	r6, r9, [r3, #4]
 801acfe:	f806 b000 	strb.w	fp, [r6, r0]
 801ad02:	1c48      	adds	r0, r1, #1
 801ad04:	4548      	cmp	r0, r9
 801ad06:	d218      	bcs.n	801ad3a <cubic_decasteljau+0x1e6>
 801ad08:	68d8      	ldr	r0, [r3, #12]
 801ad0a:	f101 0c03 	add.w	ip, r1, #3
 801ad0e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801ad12:	45e1      	cmp	r9, ip
 801ad14:	ed80 aa00 	vstr	s20, [r0]
 801ad18:	ed80 9a01 	vstr	s18, [r0, #4]
 801ad1c:	d90d      	bls.n	801ad3a <cubic_decasteljau+0x1e6>
 801ad1e:	3105      	adds	r1, #5
 801ad20:	4589      	cmp	r9, r1
 801ad22:	edc0 aa02 	vstr	s21, [r0, #8]
 801ad26:	edc0 9a03 	vstr	s19, [r0, #12]
 801ad2a:	d968      	bls.n	801adfe <cubic_decasteljau+0x2aa>
 801ad2c:	edc0 ba04 	vstr	s23, [r0, #16]
 801ad30:	f8c3 8010 	str.w	r8, [r3, #16]
 801ad34:	ed80 ca05 	vstr	s24, [r0, #20]
 801ad38:	e7bb      	b.n	801acb2 <cubic_decasteljau+0x15e>
 801ad3a:	2002      	movs	r0, #2
 801ad3c:	2101      	movs	r1, #1
 801ad3e:	6298      	str	r0, [r3, #40]	@ 0x28
 801ad40:	f8ce 1000 	str.w	r1, [lr]
 801ad44:	e7b3      	b.n	801acae <cubic_decasteljau+0x15a>
 801ad46:	f8c3 9014 	str.w	r9, [r3, #20]
 801ad4a:	e7b0      	b.n	801acae <cubic_decasteljau+0x15a>
 801ad4c:	eeb0 1a6b 	vmov.f32	s2, s23
 801ad50:	eef0 1a4c 	vmov.f32	s3, s24
 801ad54:	eeb0 0a48 	vmov.f32	s0, s16
 801ad58:	eef0 0a68 	vmov.f32	s1, s17
 801ad5c:	f7fe fad6 	bl	801930c <calc_line_geometry>
 801ad60:	3c01      	subs	r4, #1
 801ad62:	4680      	mov	r8, r0
 801ad64:	2800      	cmp	r0, #0
 801ad66:	f040 809d 	bne.w	801aea4 <cubic_decasteljau+0x350>
 801ad6a:	682a      	ldr	r2, [r5, #0]
 801ad6c:	e7a1      	b.n	801acb2 <cubic_decasteljau+0x15e>
 801ad6e:	2a09      	cmp	r2, #9
 801ad70:	dc85      	bgt.n	801ac7e <cubic_decasteljau+0x12a>
 801ad72:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801ad76:	ee3a 7a8a 	vadd.f32	s14, s21, s20
 801ad7a:	ee39 5a8c 	vadd.f32	s10, s19, s24
 801ad7e:	ee7a aaab 	vadd.f32	s21, s21, s23
 801ad82:	ee78 5a0a 	vadd.f32	s11, s16, s20
 801ad86:	ee79 9a29 	vadd.f32	s19, s18, s19
 801ad8a:	ee39 9a28 	vadd.f32	s18, s18, s17
 801ad8e:	ee2a 2aa7 	vmul.f32	s4, s21, s15
 801ad92:	ee25 aaa7 	vmul.f32	s20, s11, s15
 801ad96:	ee27 7a27 	vmul.f32	s14, s14, s15
 801ad9a:	ee25 5a27 	vmul.f32	s10, s10, s15
 801ad9e:	ee69 9aa7 	vmul.f32	s19, s19, s15
 801ada2:	ee29 9a27 	vmul.f32	s18, s18, s15
 801ada6:	ee7a aa07 	vadd.f32	s21, s20, s14
 801adaa:	ee79 5a85 	vadd.f32	s11, s19, s10
 801adae:	ee37 7a02 	vadd.f32	s14, s14, s4
 801adb2:	ee79 9a29 	vadd.f32	s19, s18, s19
 801adb6:	ee27 7a27 	vmul.f32	s14, s14, s15
 801adba:	ee65 5aa7 	vmul.f32	s11, s11, s15
 801adbe:	ee6a aaa7 	vmul.f32	s21, s21, s15
 801adc2:	ee69 9aa7 	vmul.f32	s19, s19, s15
 801adc6:	ee3a 4a87 	vadd.f32	s8, s21, s14
 801adca:	ee79 4aa5 	vadd.f32	s9, s19, s11
 801adce:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 801add2:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 801add6:	3201      	adds	r2, #1
 801add8:	edc3 ba04 	vstr	s23, [r3, #16]
 801addc:	ed83 ca05 	vstr	s24, [r3, #20]
 801ade0:	3401      	adds	r4, #1
 801ade2:	ed83 2a02 	vstr	s4, [r3, #8]
 801ade6:	ed83 7a00 	vstr	s14, [r3]
 801adea:	ee64 ba27 	vmul.f32	s23, s8, s15
 801adee:	ed83 5a03 	vstr	s10, [r3, #12]
 801adf2:	edc3 5a01 	vstr	s11, [r3, #4]
 801adf6:	ee24 caa7 	vmul.f32	s24, s9, s15
 801adfa:	602a      	str	r2, [r5, #0]
 801adfc:	e6cb      	b.n	801ab96 <cubic_decasteljau+0x42>
 801adfe:	2002      	movs	r0, #2
 801ae00:	2101      	movs	r1, #1
 801ae02:	f8c3 8010 	str.w	r8, [r3, #16]
 801ae06:	6298      	str	r0, [r3, #40]	@ 0x28
 801ae08:	f8ce 1000 	str.w	r1, [lr]
 801ae0c:	e751      	b.n	801acb2 <cubic_decasteljau+0x15e>
 801ae0e:	46a0      	mov	r8, r4
 801ae10:	4640      	mov	r0, r8
 801ae12:	b009      	add	sp, #36	@ 0x24
 801ae14:	ecbd 8b0a 	vpop	{d8-d12}
 801ae18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae1c:	eeb4 9ae6 	vcmpe.f32	s18, s13
 801ae20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae24:	f73f aed1 	bgt.w	801abca <cubic_decasteljau+0x76>
 801ae28:	eeb4 aac6 	vcmpe.f32	s20, s12
 801ae2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae30:	f53f aecb 	bmi.w	801abca <cubic_decasteljau+0x76>
 801ae34:	eeb4 9ac6 	vcmpe.f32	s18, s12
 801ae38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae3c:	f53f aec5 	bmi.w	801abca <cubic_decasteljau+0x76>
 801ae40:	eef4 aae6 	vcmpe.f32	s21, s13
 801ae44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae48:	f73f aebf 	bgt.w	801abca <cubic_decasteljau+0x76>
 801ae4c:	eef4 9ae6 	vcmpe.f32	s19, s13
 801ae50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae54:	f73f aeb9 	bgt.w	801abca <cubic_decasteljau+0x76>
 801ae58:	eef4 aac6 	vcmpe.f32	s21, s12
 801ae5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae60:	f53f aeb3 	bmi.w	801abca <cubic_decasteljau+0x76>
 801ae64:	eef4 9ac6 	vcmpe.f32	s19, s12
 801ae68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae6c:	f53f aead 	bmi.w	801abca <cubic_decasteljau+0x76>
 801ae70:	eef4 bae6 	vcmpe.f32	s23, s13
 801ae74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae78:	f73f aea7 	bgt.w	801abca <cubic_decasteljau+0x76>
 801ae7c:	eeb4 cae6 	vcmpe.f32	s24, s13
 801ae80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae84:	f73f aea1 	bgt.w	801abca <cubic_decasteljau+0x76>
 801ae88:	eef4 bac6 	vcmpe.f32	s23, s12
 801ae8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae90:	f53f ae9b 	bmi.w	801abca <cubic_decasteljau+0x76>
 801ae94:	eeb4 cac6 	vcmpe.f32	s24, s12
 801ae98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae9c:	bf54      	ite	pl
 801ae9e:	2301      	movpl	r3, #1
 801aea0:	2300      	movmi	r3, #0
 801aea2:	e693      	b.n	801abcc <cubic_decasteljau+0x78>
 801aea4:	f001 fde6 	bl	801ca74 <nema_vg_set_error>
 801aea8:	4640      	mov	r0, r8
 801aeaa:	b009      	add	sp, #36	@ 0x24
 801aeac:	ecbd 8b0a 	vpop	{d8-d12}
 801aeb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aeb4:	20000140 	.word	0x20000140
 801aeb8:	20000144 	.word	0x20000144
 801aebc:	42480000 	.word	0x42480000
 801aec0:	20083298 	.word	0x20083298
 801aec4:	20083154 	.word	0x20083154
 801aec8:	200831a8 	.word	0x200831a8
 801aecc:	2008314c 	.word	0x2008314c

0801aed0 <arc_to_cubic>:
 801aed0:	b530      	push	{r4, r5, lr}
 801aed2:	ed2d 8b0e 	vpush	{d8-d14}
 801aed6:	eddf 8ab7 	vldr	s17, [pc, #732]	@ 801b1b4 <arc_to_cubic+0x2e4>
 801aeda:	ee60 9a28 	vmul.f32	s19, s0, s17
 801aede:	ee60 8aa8 	vmul.f32	s17, s1, s17
 801aee2:	eeb5 0a00 	vmov.f32	s0, #80	@ 0x3e800000  0.250
 801aee6:	ee78 8ae9 	vsub.f32	s17, s17, s19
 801aeea:	b093      	sub	sp, #76	@ 0x4c
 801aeec:	ee28 0a80 	vmul.f32	s0, s17, s0
 801aef0:	4604      	mov	r4, r0
 801aef2:	460d      	mov	r5, r1
 801aef4:	eef0 ba41 	vmov.f32	s23, s2
 801aef8:	eeb0 ca61 	vmov.f32	s24, s3
 801aefc:	eef0 ca42 	vmov.f32	s25, s4
 801af00:	eeb0 da62 	vmov.f32	s26, s5
 801af04:	ed9f 8aac 	vldr	s16, [pc, #688]	@ 801b1b8 <arc_to_cubic+0x2e8>
 801af08:	f016 fb16 	bl	8031538 <tanf>
 801af0c:	ee20 8a08 	vmul.f32	s16, s0, s16
 801af10:	eeb0 0a68 	vmov.f32	s0, s17
 801af14:	f016 fa7e 	bl	8031414 <cosf>
 801af18:	eeb0 9a40 	vmov.f32	s18, s0
 801af1c:	eeb0 0a68 	vmov.f32	s0, s17
 801af20:	f016 fac4 	bl	80314ac <sinf>
 801af24:	ed94 7a09 	vldr	s14, [r4, #36]	@ 0x24
 801af28:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 801b1bc <arc_to_cubic+0x2ec>
 801af2c:	ee87 ea27 	vdiv.f32	s28, s14, s15
 801af30:	eddf 7aa3 	vldr	s15, [pc, #652]	@ 801b1c0 <arc_to_cubic+0x2f0>
 801af34:	eeb0 ba40 	vmov.f32	s22, s0
 801af38:	ee68 8a00 	vmul.f32	s17, s16, s0
 801af3c:	eeb0 0a69 	vmov.f32	s0, s19
 801af40:	ee2e ea27 	vmul.f32	s28, s28, s15
 801af44:	f016 fa66 	bl	8031414 <cosf>
 801af48:	eef0 aa40 	vmov.f32	s21, s0
 801af4c:	eeb0 0a69 	vmov.f32	s0, s19
 801af50:	f016 faac 	bl	80314ac <sinf>
 801af54:	eeb0 aa40 	vmov.f32	s20, s0
 801af58:	eeb0 0a4e 	vmov.f32	s0, s28
 801af5c:	f016 fa5a 	bl	8031414 <cosf>
 801af60:	ee68 da09 	vmul.f32	s27, s16, s18
 801af64:	eef0 9a40 	vmov.f32	s19, s0
 801af68:	eeb0 0a4e 	vmov.f32	s0, s28
 801af6c:	f016 fa9e 	bl	80314ac <sinf>
 801af70:	4b94      	ldr	r3, [pc, #592]	@ (801b1c4 <arc_to_cubic+0x2f4>)
 801af72:	07e9      	lsls	r1, r5, #31
 801af74:	ee78 8a89 	vadd.f32	s17, s17, s18
 801af78:	ee7b da6d 	vsub.f32	s27, s22, s27
 801af7c:	781b      	ldrb	r3, [r3, #0]
 801af7e:	f140 80a8 	bpl.w	801b0d2 <arc_to_cubic+0x202>
 801af82:	ed94 7a03 	vldr	s14, [r4, #12]
 801af86:	edd4 0a04 	vldr	s1, [r4, #16]
 801af8a:	ee6d 6a8a 	vmul.f32	s13, s27, s20
 801af8e:	ee68 1a0a 	vmul.f32	s3, s16, s20
 801af92:	ee68 7aaa 	vmul.f32	s15, s17, s21
 801af96:	ee28 8a2a 	vmul.f32	s16, s16, s21
 801af9a:	ee68 8a8a 	vmul.f32	s17, s17, s20
 801af9e:	ee6d daaa 	vmul.f32	s27, s27, s21
 801afa2:	eddf 2a89 	vldr	s5, [pc, #548]	@ 801b1c8 <arc_to_cubic+0x2f8>
 801afa6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801afaa:	ee7a 1ae1 	vsub.f32	s3, s21, s3
 801afae:	ee38 8a0a 	vadd.f32	s16, s16, s20
 801afb2:	ee78 8aad 	vadd.f32	s17, s17, s27
 801afb6:	ee71 1aa2 	vadd.f32	s3, s3, s5
 801afba:	ee38 8a22 	vadd.f32	s16, s16, s5
 801afbe:	ee77 7aa2 	vadd.f32	s15, s15, s5
 801afc2:	ee78 8aa2 	vadd.f32	s17, s17, s5
 801afc6:	ee61 1aac 	vmul.f32	s3, s3, s25
 801afca:	ee28 8a0d 	vmul.f32	s16, s16, s26
 801afce:	ee67 7aac 	vmul.f32	s15, s15, s25
 801afd2:	ee68 8a8d 	vmul.f32	s17, s17, s26
 801afd6:	ee29 1aa1 	vmul.f32	s2, s19, s3
 801afda:	ee20 6a08 	vmul.f32	s12, s0, s16
 801afde:	ee29 2aa7 	vmul.f32	s4, s19, s15
 801afe2:	ee60 6a28 	vmul.f32	s13, s0, s17
 801afe6:	ee60 1a21 	vmul.f32	s3, s0, s3
 801afea:	ee29 8a88 	vmul.f32	s16, s19, s16
 801afee:	ee60 7a27 	vmul.f32	s15, s0, s15
 801aff2:	ee69 8aa8 	vmul.f32	s17, s19, s17
 801aff6:	ee31 1a46 	vsub.f32	s2, s2, s12
 801affa:	ee31 8a88 	vadd.f32	s16, s3, s16
 801affe:	ee32 2a66 	vsub.f32	s4, s4, s13
 801b002:	ee77 8aa8 	vadd.f32	s17, s15, s17
 801b006:	07aa      	lsls	r2, r5, #30
 801b008:	ee31 1a2b 	vadd.f32	s2, s2, s23
 801b00c:	ee38 8a0c 	vadd.f32	s16, s16, s24
 801b010:	ee32 2a2b 	vadd.f32	s4, s4, s23
 801b014:	ee78 8a8c 	vadd.f32	s17, s17, s24
 801b018:	d517      	bpl.n	801b04a <arc_to_cubic+0x17a>
 801b01a:	ed94 3a05 	vldr	s6, [r4, #20]
 801b01e:	edd4 3a06 	vldr	s7, [r4, #24]
 801b022:	2b00      	cmp	r3, #0
 801b024:	f040 8098 	bne.w	801b158 <arc_to_cubic+0x288>
 801b028:	eef0 2a68 	vmov.f32	s5, s17
 801b02c:	eef0 1a48 	vmov.f32	s3, s16
 801b030:	eeb0 0a47 	vmov.f32	s0, s14
 801b034:	f7ff fd8e 	bl	801ab54 <cubic_decasteljau>
 801b038:	4604      	mov	r4, r0
 801b03a:	b108      	cbz	r0, 801b040 <arc_to_cubic+0x170>
 801b03c:	f001 fd1a 	bl	801ca74 <nema_vg_set_error>
 801b040:	4620      	mov	r0, r4
 801b042:	b013      	add	sp, #76	@ 0x4c
 801b044:	ecbd 8b0e 	vpop	{d8-d14}
 801b048:	bd30      	pop	{r4, r5, pc}
 801b04a:	ee69 6a2a 	vmul.f32	s13, s18, s21
 801b04e:	ee29 9a0a 	vmul.f32	s18, s18, s20
 801b052:	ee6b aa2a 	vmul.f32	s21, s22, s21
 801b056:	ee2b aa0a 	vmul.f32	s20, s22, s20
 801b05a:	ee79 aa2a 	vadd.f32	s21, s18, s21
 801b05e:	ee36 aaca 	vsub.f32	s20, s13, s20
 801b062:	ee3a aa22 	vadd.f32	s20, s20, s5
 801b066:	ee7a 2aa2 	vadd.f32	s5, s21, s5
 801b06a:	ee6a ca2c 	vmul.f32	s25, s20, s25
 801b06e:	ee22 da8d 	vmul.f32	s26, s5, s26
 801b072:	ee29 3aac 	vmul.f32	s6, s19, s25
 801b076:	ee69 3a8d 	vmul.f32	s7, s19, s26
 801b07a:	ee60 ca2c 	vmul.f32	s25, s0, s25
 801b07e:	ee20 0a0d 	vmul.f32	s0, s0, s26
 801b082:	ee7c 3aa3 	vadd.f32	s7, s25, s7
 801b086:	ee33 0a40 	vsub.f32	s0, s6, s0
 801b08a:	ee73 3a8c 	vadd.f32	s7, s7, s24
 801b08e:	ee30 3a2b 	vadd.f32	s6, s0, s23
 801b092:	2b00      	cmp	r3, #0
 801b094:	d0c8      	beq.n	801b028 <arc_to_cubic+0x158>
 801b096:	4b4d      	ldr	r3, [pc, #308]	@ (801b1cc <arc_to_cubic+0x2fc>)
 801b098:	ed93 6a00 	vldr	s12, [r3]
 801b09c:	edd3 5a01 	vldr	s11, [r3, #4]
 801b0a0:	edd3 6a03 	vldr	s13, [r3, #12]
 801b0a4:	edd3 2a04 	vldr	s5, [r3, #16]
 801b0a8:	ee23 5aa5 	vmul.f32	s10, s7, s11
 801b0ac:	ee63 ba26 	vmul.f32	s23, s6, s13
 801b0b0:	ee23 0a06 	vmul.f32	s0, s6, s12
 801b0b4:	ee63 3aa2 	vmul.f32	s7, s7, s5
 801b0b8:	ee30 3a05 	vadd.f32	s6, s0, s10
 801b0bc:	ed93 4a02 	vldr	s8, [r3, #8]
 801b0c0:	ee7b 3aa3 	vadd.f32	s7, s23, s7
 801b0c4:	edd3 4a05 	vldr	s9, [r3, #20]
 801b0c8:	ee33 3a04 	vadd.f32	s6, s6, s8
 801b0cc:	ee73 3aa4 	vadd.f32	s7, s7, s9
 801b0d0:	e04f      	b.n	801b172 <arc_to_cubic+0x2a2>
 801b0d2:	eddf 0a3d 	vldr	s1, [pc, #244]	@ 801b1c8 <arc_to_cubic+0x2f8>
 801b0d6:	ee6a 7a20 	vmul.f32	s15, s20, s1
 801b0da:	ee6a 6aa0 	vmul.f32	s13, s21, s1
 801b0de:	ee7a 7ae7 	vsub.f32	s15, s21, s15
 801b0e2:	ee76 6a8a 	vadd.f32	s13, s13, s20
 801b0e6:	ee77 7aa0 	vadd.f32	s15, s15, s1
 801b0ea:	ee76 6aa0 	vadd.f32	s13, s13, s1
 801b0ee:	ee67 7aac 	vmul.f32	s15, s15, s25
 801b0f2:	ee66 6a8d 	vmul.f32	s13, s13, s26
 801b0f6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b0fa:	ee60 0a27 	vmul.f32	s1, s0, s15
 801b0fe:	ee60 7a26 	vmul.f32	s15, s0, s13
 801b102:	ee69 6aa6 	vmul.f32	s13, s19, s13
 801b106:	ee37 7a67 	vsub.f32	s14, s14, s15
 801b10a:	ee70 0aa6 	vadd.f32	s1, s1, s13
 801b10e:	ee37 7a2b 	vadd.f32	s14, s14, s23
 801b112:	ee70 0a8c 	vadd.f32	s1, s1, s24
 801b116:	2b00      	cmp	r3, #0
 801b118:	f43f af37 	beq.w	801af8a <arc_to_cubic+0xba>
 801b11c:	4a2b      	ldr	r2, [pc, #172]	@ (801b1cc <arc_to_cubic+0x2fc>)
 801b11e:	edd2 6a00 	vldr	s13, [r2]
 801b122:	edd2 5a01 	vldr	s11, [r2, #4]
 801b126:	edd2 7a03 	vldr	s15, [r2, #12]
 801b12a:	ed92 6a04 	vldr	s12, [r2, #16]
 801b12e:	ee67 7a27 	vmul.f32	s15, s14, s15
 801b132:	ee67 6a26 	vmul.f32	s13, s14, s13
 801b136:	ee60 5aa5 	vmul.f32	s11, s1, s11
 801b13a:	ee60 0a86 	vmul.f32	s1, s1, s12
 801b13e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801b142:	ee77 0aa0 	vadd.f32	s1, s15, s1
 801b146:	ed92 7a02 	vldr	s14, [r2, #8]
 801b14a:	edd2 7a05 	vldr	s15, [r2, #20]
 801b14e:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b152:	ee70 0aa7 	vadd.f32	s1, s1, s15
 801b156:	e718      	b.n	801af8a <arc_to_cubic+0xba>
 801b158:	4b1c      	ldr	r3, [pc, #112]	@ (801b1cc <arc_to_cubic+0x2fc>)
 801b15a:	ed93 6a00 	vldr	s12, [r3]
 801b15e:	edd3 5a01 	vldr	s11, [r3, #4]
 801b162:	ed93 4a02 	vldr	s8, [r3, #8]
 801b166:	edd3 6a03 	vldr	s13, [r3, #12]
 801b16a:	edd3 2a04 	vldr	s5, [r3, #16]
 801b16e:	edd3 4a05 	vldr	s9, [r3, #20]
 801b172:	ee21 5a06 	vmul.f32	s10, s2, s12
 801b176:	ee65 1a88 	vmul.f32	s3, s11, s16
 801b17a:	ee21 1a26 	vmul.f32	s2, s2, s13
 801b17e:	ee22 6a06 	vmul.f32	s12, s4, s12
 801b182:	ee62 6a26 	vmul.f32	s13, s4, s13
 801b186:	ee68 7aa2 	vmul.f32	s15, s17, s5
 801b18a:	ee25 2aa8 	vmul.f32	s4, s11, s17
 801b18e:	ee28 8a22 	vmul.f32	s16, s16, s5
 801b192:	ee75 5a21 	vadd.f32	s11, s10, s3
 801b196:	ee31 8a08 	vadd.f32	s16, s2, s16
 801b19a:	ee36 2a02 	vadd.f32	s4, s12, s4
 801b19e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801b1a2:	ee35 1a84 	vadd.f32	s2, s11, s8
 801b1a6:	ee38 8a24 	vadd.f32	s16, s16, s9
 801b1aa:	ee32 2a04 	vadd.f32	s4, s4, s8
 801b1ae:	ee77 8aa4 	vadd.f32	s17, s15, s9
 801b1b2:	e739      	b.n	801b028 <arc_to_cubic+0x158>
 801b1b4:	3c8efa35 	.word	0x3c8efa35
 801b1b8:	3faaaaab 	.word	0x3faaaaab
 801b1bc:	43340000 	.word	0x43340000
 801b1c0:	40490fdb 	.word	0x40490fdb
 801b1c4:	20083180 	.word	0x20083180
 801b1c8:	00000000 	.word	0x00000000
 801b1cc:	20083184 	.word	0x20083184

0801b1d0 <calc_new_geometry>:
 801b1d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1d4:	ed2d 8b10 	vpush	{d8-d15}
 801b1d8:	b0a1      	sub	sp, #132	@ 0x84
 801b1da:	4682      	mov	sl, r0
 801b1dc:	2248      	movs	r2, #72	@ 0x48
 801b1de:	a80e      	add	r0, sp, #56	@ 0x38
 801b1e0:	2100      	movs	r1, #0
 801b1e2:	f017 fb90 	bl	8032906 <memset>
 801b1e6:	2201      	movs	r2, #1
 801b1e8:	2300      	movs	r3, #0
 801b1ea:	f88d 2038 	strb.w	r2, [sp, #56]	@ 0x38
 801b1ee:	f88d 203a 	strb.w	r2, [sp, #58]	@ 0x3a
 801b1f2:	f8da 2000 	ldr.w	r2, [sl]
 801b1f6:	ed9f ba80 	vldr	s22, [pc, #512]	@ 801b3f8 <calc_new_geometry+0x228>
 801b1fa:	429a      	cmp	r2, r3
 801b1fc:	ed9f aa7f 	vldr	s20, [pc, #508]	@ 801b3fc <calc_new_geometry+0x22c>
 801b200:	eddf aa7f 	vldr	s21, [pc, #508]	@ 801b400 <calc_new_geometry+0x230>
 801b204:	eddf 9a7f 	vldr	s19, [pc, #508]	@ 801b404 <calc_new_geometry+0x234>
 801b208:	ed9f 9a7f 	vldr	s18, [pc, #508]	@ 801b408 <calc_new_geometry+0x238>
 801b20c:	f240 80e7 	bls.w	801b3de <calc_new_geometry+0x20e>
 801b210:	2200      	movs	r2, #0
 801b212:	f8da 1008 	ldr.w	r1, [sl, #8]
 801b216:	f8df b1f8 	ldr.w	fp, [pc, #504]	@ 801b410 <calc_new_geometry+0x240>
 801b21a:	5ccc      	ldrb	r4, [r1, r3]
 801b21c:	af13      	add	r7, sp, #76	@ 0x4c
 801b21e:	f004 066f 	and.w	r6, r4, #111	@ 0x6f
 801b222:	ad11      	add	r5, sp, #68	@ 0x44
 801b224:	3301      	adds	r3, #1
 801b226:	2e01      	cmp	r6, #1
 801b228:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b22c:	9301      	str	r3, [sp, #4]
 801b22e:	f004 0910 	and.w	r9, r4, #16
 801b232:	f8cb 2024 	str.w	r2, [fp, #36]	@ 0x24
 801b236:	e885 0003 	stmia.w	r5, {r0, r1}
 801b23a:	f000 8244 	beq.w	801b6c6 <calc_new_geometry+0x4f6>
 801b23e:	0663      	lsls	r3, r4, #25
 801b240:	f000 8229 	beq.w	801b696 <calc_new_geometry+0x4c6>
 801b244:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b246:	f89d e07c 	ldrb.w	lr, [sp, #124]	@ 0x7c
 801b24a:	bb63      	cbnz	r3, 801b2a6 <calc_new_geometry+0xd6>
 801b24c:	2201      	movs	r2, #1
 801b24e:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801b414 <calc_new_geometry+0x244>
 801b252:	f88d 2038 	strb.w	r2, [sp, #56]	@ 0x38
 801b256:	f898 2000 	ldrb.w	r2, [r8]
 801b25a:	b322      	cbz	r2, 801b2a6 <calc_new_geometry+0xd6>
 801b25c:	4a6b      	ldr	r2, [pc, #428]	@ (801b40c <calc_new_geometry+0x23c>)
 801b25e:	ed9d 7a11 	vldr	s14, [sp, #68]	@ 0x44
 801b262:	eddd 7a12 	vldr	s15, [sp, #72]	@ 0x48
 801b266:	ed92 6a03 	vldr	s12, [r2, #12]
 801b26a:	edd2 6a04 	vldr	s13, [r2, #16]
 801b26e:	ed92 5a00 	vldr	s10, [r2]
 801b272:	edd2 5a01 	vldr	s11, [r2, #4]
 801b276:	ee27 5a05 	vmul.f32	s10, s14, s10
 801b27a:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801b27e:	ee27 7a06 	vmul.f32	s14, s14, s12
 801b282:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b286:	ee35 6a25 	vadd.f32	s12, s10, s11
 801b28a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801b28e:	edd2 6a02 	vldr	s13, [r2, #8]
 801b292:	edd2 7a05 	vldr	s15, [r2, #20]
 801b296:	ee76 6a26 	vadd.f32	s13, s12, s13
 801b29a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b29e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801b2a2:	edcd 7a12 	vstr	s15, [sp, #72]	@ 0x48
 801b2a6:	f04f 0800 	mov.w	r8, #0
 801b2aa:	f8da 200c 	ldr.w	r2, [sl, #12]
 801b2ae:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801b2b2:	eb02 010c 	add.w	r1, r2, ip
 801b2b6:	1c58      	adds	r0, r3, #1
 801b2b8:	2e06      	cmp	r6, #6
 801b2ba:	f88d 803a 	strb.w	r8, [sp, #58]	@ 0x3a
 801b2be:	9103      	str	r1, [sp, #12]
 801b2c0:	4680      	mov	r8, r0
 801b2c2:	f000 833c 	beq.w	801b93e <calc_new_geometry+0x76e>
 801b2c6:	2e05      	cmp	r6, #5
 801b2c8:	f000 84a7 	beq.w	801bc1a <calc_new_geometry+0xa4a>
 801b2cc:	2e07      	cmp	r6, #7
 801b2ce:	f00e 0e6f 	and.w	lr, lr, #111	@ 0x6f
 801b2d2:	f000 84f2 	beq.w	801bcba <calc_new_geometry+0xaea>
 801b2d6:	2e08      	cmp	r6, #8
 801b2d8:	f000 8727 	beq.w	801c12a <calc_new_geometry+0xf5a>
 801b2dc:	f004 000f 	and.w	r0, r4, #15
 801b2e0:	2809      	cmp	r0, #9
 801b2e2:	9002      	str	r0, [sp, #8]
 801b2e4:	f000 86d7 	beq.w	801c096 <calc_new_geometry+0xec6>
 801b2e8:	2e04      	cmp	r6, #4
 801b2ea:	f040 83bc 	bne.w	801ba66 <calc_new_geometry+0x896>
 801b2ee:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801b2f2:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b2f6:	9b03      	ldr	r3, [sp, #12]
 801b2f8:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801b2fc:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801b300:	ed93 7a00 	vldr	s14, [r3]
 801b304:	f1b9 0f00 	cmp.w	r9, #0
 801b308:	f000 84d1 	beq.w	801bcae <calc_new_geometry+0xade>
 801b30c:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b310:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b314:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b318:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 801b414 <calc_new_geometry+0x244>
 801b31c:	f898 3000 	ldrb.w	r3, [r8]
 801b320:	edcd 7a19 	vstr	s15, [sp, #100]	@ 0x64
 801b324:	ed8d 7a1a 	vstr	s14, [sp, #104]	@ 0x68
 801b328:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801b32c:	b303      	cbz	r3, 801b370 <calc_new_geometry+0x1a0>
 801b32e:	4b37      	ldr	r3, [pc, #220]	@ (801b40c <calc_new_geometry+0x23c>)
 801b330:	ed93 6a03 	vldr	s12, [r3, #12]
 801b334:	edd3 6a04 	vldr	s13, [r3, #16]
 801b338:	ed93 5a00 	vldr	s10, [r3]
 801b33c:	edd3 5a01 	vldr	s11, [r3, #4]
 801b340:	ee27 5a85 	vmul.f32	s10, s15, s10
 801b344:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b348:	ee67 7a86 	vmul.f32	s15, s15, s12
 801b34c:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b350:	ee75 5a25 	vadd.f32	s11, s10, s11
 801b354:	ee77 7a87 	vadd.f32	s15, s15, s14
 801b358:	ed93 6a02 	vldr	s12, [r3, #8]
 801b35c:	edd3 6a05 	vldr	s13, [r3, #20]
 801b360:	ee35 7a86 	vadd.f32	s14, s11, s12
 801b364:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801b368:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801b36c:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801b370:	2a01      	cmp	r2, #1
 801b372:	f000 826c 	beq.w	801b84e <calc_new_geometry+0x67e>
 801b376:	f004 036d 	and.w	r3, r4, #109	@ 0x6d
 801b37a:	2b05      	cmp	r3, #5
 801b37c:	d04c      	beq.n	801b418 <calc_new_geometry+0x248>
 801b37e:	2e06      	cmp	r6, #6
 801b380:	f000 81d7 	beq.w	801b732 <calc_new_geometry+0x562>
 801b384:	2e08      	cmp	r6, #8
 801b386:	f000 81d4 	beq.w	801b732 <calc_new_geometry+0x562>
 801b38a:	f004 030f 	and.w	r3, r4, #15
 801b38e:	9302      	str	r3, [sp, #8]
 801b390:	9b02      	ldr	r3, [sp, #8]
 801b392:	2b09      	cmp	r3, #9
 801b394:	f000 83fd 	beq.w	801bb92 <calc_new_geometry+0x9c2>
 801b398:	f1a6 030a 	sub.w	r3, r6, #10
 801b39c:	2b01      	cmp	r3, #1
 801b39e:	d918      	bls.n	801b3d2 <calc_new_geometry+0x202>
 801b3a0:	1eb3      	subs	r3, r6, #2
 801b3a2:	2b02      	cmp	r3, #2
 801b3a4:	f240 82bc 	bls.w	801b920 <calc_new_geometry+0x750>
 801b3a8:	2e01      	cmp	r6, #1
 801b3aa:	f000 86f4 	beq.w	801c196 <calc_new_geometry+0xfc6>
 801b3ae:	f44f 7380 	mov.w	r3, #256	@ 0x100
 801b3b2:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801b3b6:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801b3ba:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b3be:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b3c2:	f8cb 3024 	str.w	r3, [fp, #36]	@ 0x24
 801b3c6:	f7fd ffa1 	bl	801930c <calc_line_geometry>
 801b3ca:	4601      	mov	r1, r0
 801b3cc:	2800      	cmp	r0, #0
 801b3ce:	f040 81c6 	bne.w	801b75e <calc_new_geometry+0x58e>
 801b3d2:	9b01      	ldr	r3, [sp, #4]
 801b3d4:	f8da 2000 	ldr.w	r2, [sl]
 801b3d8:	429a      	cmp	r2, r3
 801b3da:	f63f af19 	bhi.w	801b210 <calc_new_geometry+0x40>
 801b3de:	f89d 3039 	ldrb.w	r3, [sp, #57]	@ 0x39
 801b3e2:	2b01      	cmp	r3, #1
 801b3e4:	f000 8720 	beq.w	801c228 <calc_new_geometry+0x1058>
 801b3e8:	2100      	movs	r1, #0
 801b3ea:	4608      	mov	r0, r1
 801b3ec:	b021      	add	sp, #132	@ 0x84
 801b3ee:	ecbd 8b10 	vpop	{d8-d15}
 801b3f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3f6:	bf00      	nop
 801b3f8:	3c8efa35 	.word	0x3c8efa35
 801b3fc:	42652ee1 	.word	0x42652ee1
 801b400:	43340000 	.word	0x43340000
 801b404:	42b40000 	.word	0x42b40000
 801b408:	00000000 	.word	0x00000000
 801b40c:	20083184 	.word	0x20083184
 801b410:	20083154 	.word	0x20083154
 801b414:	20083180 	.word	0x20083180
 801b418:	f8df 836c 	ldr.w	r8, [pc, #876]	@ 801b788 <calc_new_geometry+0x5b8>
 801b41c:	4ed5      	ldr	r6, [pc, #852]	@ (801b774 <calc_new_geometry+0x5a4>)
 801b41e:	edd8 6a00 	vldr	s13, [r8]
 801b422:	e895 0003 	ldmia.w	r5, {r0, r1}
 801b426:	ed96 6a00 	vldr	s12, [r6]
 801b42a:	ed9d 8a11 	vldr	s16, [sp, #68]	@ 0x44
 801b42e:	eddd 8a12 	vldr	s17, [sp, #72]	@ 0x48
 801b432:	eddd ba15 	vldr	s23, [sp, #84]	@ 0x54
 801b436:	ed9d ca16 	vldr	s24, [sp, #88]	@ 0x58
 801b43a:	eddd ca13 	vldr	s25, [sp, #76]	@ 0x4c
 801b43e:	ed9d da14 	vldr	s26, [sp, #80]	@ 0x50
 801b442:	2401      	movs	r4, #1
 801b444:	eddf dacc 	vldr	s27, [pc, #816]	@ 801b778 <calc_new_geometry+0x5a8>
 801b448:	aa0a      	add	r2, sp, #40	@ 0x28
 801b44a:	ab0c      	add	r3, sp, #48	@ 0x30
 801b44c:	e882 0003 	stmia.w	r2, {r0, r1}
 801b450:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b454:	e883 0003 	stmia.w	r3, {r0, r1}
 801b458:	4dc8      	ldr	r5, [pc, #800]	@ (801b77c <calc_new_geometry+0x5ac>)
 801b45a:	eeb4 8ae6 	vcmpe.f32	s16, s13
 801b45e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b462:	dc23      	bgt.n	801b4ac <calc_new_geometry+0x2dc>
 801b464:	eef4 8ae6 	vcmpe.f32	s17, s13
 801b468:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b46c:	dc1e      	bgt.n	801b4ac <calc_new_geometry+0x2dc>
 801b46e:	eeb4 8ac6 	vcmpe.f32	s16, s12
 801b472:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b476:	d419      	bmi.n	801b4ac <calc_new_geometry+0x2dc>
 801b478:	eef4 8ac6 	vcmpe.f32	s17, s12
 801b47c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b480:	d414      	bmi.n	801b4ac <calc_new_geometry+0x2dc>
 801b482:	eef4 bae6 	vcmpe.f32	s23, s13
 801b486:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b48a:	dc0f      	bgt.n	801b4ac <calc_new_geometry+0x2dc>
 801b48c:	eeb4 cae6 	vcmpe.f32	s24, s13
 801b490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b494:	dc0a      	bgt.n	801b4ac <calc_new_geometry+0x2dc>
 801b496:	eef4 bac6 	vcmpe.f32	s23, s12
 801b49a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b49e:	d405      	bmi.n	801b4ac <calc_new_geometry+0x2dc>
 801b4a0:	eeb4 cac6 	vcmpe.f32	s24, s12
 801b4a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4a8:	f140 845c 	bpl.w	801bd64 <calc_new_geometry+0xb94>
 801b4ac:	2200      	movs	r2, #0
 801b4ae:	ee76 7a2d 	vadd.f32	s15, s12, s27
 801b4b2:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801b4b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4ba:	ee36 7aed 	vsub.f32	s14, s13, s27
 801b4be:	d509      	bpl.n	801b4d4 <calc_new_geometry+0x304>
 801b4c0:	eef4 bae7 	vcmpe.f32	s23, s15
 801b4c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4c8:	d504      	bpl.n	801b4d4 <calc_new_geometry+0x304>
 801b4ca:	eef4 cae7 	vcmpe.f32	s25, s15
 801b4ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4d2:	d463      	bmi.n	801b59c <calc_new_geometry+0x3cc>
 801b4d4:	eeb4 8ac7 	vcmpe.f32	s16, s14
 801b4d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4dc:	dd09      	ble.n	801b4f2 <calc_new_geometry+0x322>
 801b4de:	eef4 bac7 	vcmpe.f32	s23, s14
 801b4e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4e6:	dd04      	ble.n	801b4f2 <calc_new_geometry+0x322>
 801b4e8:	eef4 cac7 	vcmpe.f32	s25, s14
 801b4ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4f0:	dc54      	bgt.n	801b59c <calc_new_geometry+0x3cc>
 801b4f2:	eef4 8ae7 	vcmpe.f32	s17, s15
 801b4f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4fa:	d509      	bpl.n	801b510 <calc_new_geometry+0x340>
 801b4fc:	eeb4 cae7 	vcmpe.f32	s24, s15
 801b500:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b504:	d504      	bpl.n	801b510 <calc_new_geometry+0x340>
 801b506:	eeb4 dae7 	vcmpe.f32	s26, s15
 801b50a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b50e:	d445      	bmi.n	801b59c <calc_new_geometry+0x3cc>
 801b510:	eef4 8ac7 	vcmpe.f32	s17, s14
 801b514:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b518:	dd09      	ble.n	801b52e <calc_new_geometry+0x35e>
 801b51a:	eeb4 cac7 	vcmpe.f32	s24, s14
 801b51e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b522:	dd04      	ble.n	801b52e <calc_new_geometry+0x35e>
 801b524:	eeb4 dac7 	vcmpe.f32	s26, s14
 801b528:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b52c:	dc36      	bgt.n	801b59c <calc_new_geometry+0x3cc>
 801b52e:	682b      	ldr	r3, [r5, #0]
 801b530:	2a00      	cmp	r2, #0
 801b532:	d073      	beq.n	801b61c <calc_new_geometry+0x44c>
 801b534:	e9db 2104 	ldrd	r2, r1, [fp, #16]
 801b538:	4891      	ldr	r0, [pc, #580]	@ (801b780 <calc_new_geometry+0x5b0>)
 801b53a:	3c01      	subs	r4, #1
 801b53c:	6807      	ldr	r7, [r0, #0]
 801b53e:	f101 0c01 	add.w	ip, r1, #1
 801b542:	f102 0904 	add.w	r9, r2, #4
 801b546:	2f00      	cmp	r7, #0
 801b548:	d152      	bne.n	801b5f0 <calc_new_geometry+0x420>
 801b54a:	f8db 7000 	ldr.w	r7, [fp]
 801b54e:	428f      	cmp	r7, r1
 801b550:	d83d      	bhi.n	801b5ce <calc_new_geometry+0x3fe>
 801b552:	2102      	movs	r1, #2
 801b554:	2201      	movs	r2, #1
 801b556:	f8cb c014 	str.w	ip, [fp, #20]
 801b55a:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b55e:	6002      	str	r2, [r0, #0]
 801b560:	f8cb 9010 	str.w	r9, [fp, #16]
 801b564:	b193      	cbz	r3, 801b58c <calc_new_geometry+0x3bc>
 801b566:	3b01      	subs	r3, #1
 801b568:	4986      	ldr	r1, [pc, #536]	@ (801b784 <calc_new_geometry+0x5b4>)
 801b56a:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801b56e:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 801b572:	ed92 8a00 	vldr	s16, [r2]
 801b576:	edd2 8a01 	vldr	s17, [r2, #4]
 801b57a:	edd2 ba02 	vldr	s23, [r2, #8]
 801b57e:	ed92 ca03 	vldr	s24, [r2, #12]
 801b582:	edd2 ca04 	vldr	s25, [r2, #16]
 801b586:	ed92 da05 	vldr	s26, [r2, #20]
 801b58a:	602b      	str	r3, [r5, #0]
 801b58c:	2c00      	cmp	r4, #0
 801b58e:	f43f af20 	beq.w	801b3d2 <calc_new_geometry+0x202>
 801b592:	edd8 6a00 	vldr	s13, [r8]
 801b596:	ed96 6a00 	vldr	s12, [r6]
 801b59a:	e75e      	b.n	801b45a <calc_new_geometry+0x28a>
 801b59c:	eeb0 1a6c 	vmov.f32	s2, s25
 801b5a0:	eef0 1a4d 	vmov.f32	s3, s26
 801b5a4:	eeb0 0a48 	vmov.f32	s0, s16
 801b5a8:	eef0 0a68 	vmov.f32	s1, s17
 801b5ac:	ed8d 8a0a 	vstr	s16, [sp, #40]	@ 0x28
 801b5b0:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
 801b5b4:	edcd ca0c 	vstr	s25, [sp, #48]	@ 0x30
 801b5b8:	ed8d da0d 	vstr	s26, [sp, #52]	@ 0x34
 801b5bc:	f7fd fea6 	bl	801930c <calc_line_geometry>
 801b5c0:	4601      	mov	r1, r0
 801b5c2:	2800      	cmp	r0, #0
 801b5c4:	f040 819e 	bne.w	801b904 <calc_new_geometry+0x734>
 801b5c8:	3c01      	subs	r4, #1
 801b5ca:	682b      	ldr	r3, [r5, #0]
 801b5cc:	e7ca      	b.n	801b564 <calc_new_geometry+0x394>
 801b5ce:	f04f 0e05 	mov.w	lr, #5
 801b5d2:	f8cb c014 	str.w	ip, [fp, #20]
 801b5d6:	e9db 7c01 	ldrd	r7, ip, [fp, #4]
 801b5da:	f807 e001 	strb.w	lr, [r7, r1]
 801b5de:	1c51      	adds	r1, r2, #1
 801b5e0:	4561      	cmp	r1, ip
 801b5e2:	d308      	bcc.n	801b5f6 <calc_new_geometry+0x426>
 801b5e4:	2102      	movs	r1, #2
 801b5e6:	2201      	movs	r2, #1
 801b5e8:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b5ec:	6002      	str	r2, [r0, #0]
 801b5ee:	e7b7      	b.n	801b560 <calc_new_geometry+0x390>
 801b5f0:	f8cb c014 	str.w	ip, [fp, #20]
 801b5f4:	e7b4      	b.n	801b560 <calc_new_geometry+0x390>
 801b5f6:	f8db 100c 	ldr.w	r1, [fp, #12]
 801b5fa:	f102 0e03 	add.w	lr, r2, #3
 801b5fe:	45f4      	cmp	ip, lr
 801b600:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801b604:	edc2 ba00 	vstr	s23, [r2]
 801b608:	ed82 ca01 	vstr	s24, [r2, #4]
 801b60c:	d93b      	bls.n	801b686 <calc_new_geometry+0x4b6>
 801b60e:	edc2 ca02 	vstr	s25, [r2, #8]
 801b612:	f8cb 9010 	str.w	r9, [fp, #16]
 801b616:	ed82 da03 	vstr	s26, [r2, #12]
 801b61a:	e7a3      	b.n	801b564 <calc_new_geometry+0x394>
 801b61c:	2b09      	cmp	r3, #9
 801b61e:	dc89      	bgt.n	801b534 <calc_new_geometry+0x364>
 801b620:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801b624:	ee7b 7aac 	vadd.f32	s15, s23, s25
 801b628:	ee3c 5a0d 	vadd.f32	s10, s24, s26
 801b62c:	ee38 7a2b 	vadd.f32	s14, s16, s23
 801b630:	ee38 ca8c 	vadd.f32	s24, s17, s24
 801b634:	ee67 ba25 	vmul.f32	s23, s14, s11
 801b638:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801b63c:	ee25 5a25 	vmul.f32	s10, s10, s11
 801b640:	ee2c ca25 	vmul.f32	s24, s24, s11
 801b644:	ee7b 4aa7 	vadd.f32	s9, s23, s15
 801b648:	ee3c 7a05 	vadd.f32	s14, s24, s10
 801b64c:	ee64 4aa5 	vmul.f32	s9, s9, s11
 801b650:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b654:	494b      	ldr	r1, [pc, #300]	@ (801b784 <calc_new_geometry+0x5b4>)
 801b656:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801b65a:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 801b65e:	3301      	adds	r3, #1
 801b660:	edc2 ca04 	vstr	s25, [r2, #16]
 801b664:	ed82 da05 	vstr	s26, [r2, #20]
 801b668:	3401      	adds	r4, #1
 801b66a:	edc2 7a02 	vstr	s15, [r2, #8]
 801b66e:	edc2 4a00 	vstr	s9, [r2]
 801b672:	eef0 ca64 	vmov.f32	s25, s9
 801b676:	ed82 5a03 	vstr	s10, [r2, #12]
 801b67a:	edc2 5a01 	vstr	s11, [r2, #4]
 801b67e:	eeb0 da65 	vmov.f32	s26, s11
 801b682:	602b      	str	r3, [r5, #0]
 801b684:	e6e9      	b.n	801b45a <calc_new_geometry+0x28a>
 801b686:	2102      	movs	r1, #2
 801b688:	2201      	movs	r2, #1
 801b68a:	f8cb 9010 	str.w	r9, [fp, #16]
 801b68e:	f8cb 1028 	str.w	r1, [fp, #40]	@ 0x28
 801b692:	6002      	str	r2, [r0, #0]
 801b694:	e766      	b.n	801b564 <calc_new_geometry+0x394>
 801b696:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801b69a:	2300      	movs	r3, #0
 801b69c:	2a01      	cmp	r2, #1
 801b69e:	bf19      	ittee	ne
 801b6a0:	eddd 7a1d 	vldrne	s15, [sp, #116]	@ 0x74
 801b6a4:	ed9d 7a1e 	vldrne	s14, [sp, #120]	@ 0x78
 801b6a8:	eeb0 7a49 	vmoveq.f32	s14, s18
 801b6ac:	eef0 7a49 	vmoveq.f32	s15, s18
 801b6b0:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b6b4:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b6b8:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 801b6bc:	f88d 3039 	strb.w	r3, [sp, #57]	@ 0x39
 801b6c0:	f8df 80c8 	ldr.w	r8, [pc, #200]	@ 801b78c <calc_new_geometry+0x5bc>
 801b6c4:	e62a      	b.n	801b31c <calc_new_geometry+0x14c>
 801b6c6:	f89d 2039 	ldrb.w	r2, [sp, #57]	@ 0x39
 801b6ca:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b6cc:	2a01      	cmp	r2, #1
 801b6ce:	f000 80d3 	beq.w	801b878 <calc_new_geometry+0x6a8>
 801b6d2:	f8df 80b8 	ldr.w	r8, [pc, #184]	@ 801b78c <calc_new_geometry+0x5bc>
 801b6d6:	f04f 0c01 	mov.w	ip, #1
 801b6da:	f04f 0e00 	mov.w	lr, #0
 801b6de:	009a      	lsls	r2, r3, #2
 801b6e0:	f8da 000c 	ldr.w	r0, [sl, #12]
 801b6e4:	1d11      	adds	r1, r2, #4
 801b6e6:	4401      	add	r1, r0
 801b6e8:	4402      	add	r2, r0
 801b6ea:	eb03 000c 	add.w	r0, r3, ip
 801b6ee:	9310      	str	r3, [sp, #64]	@ 0x40
 801b6f0:	f88d e038 	strb.w	lr, [sp, #56]	@ 0x38
 801b6f4:	f88d c03a 	strb.w	ip, [sp, #58]	@ 0x3a
 801b6f8:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b6fa:	3302      	adds	r3, #2
 801b6fc:	edd2 7a00 	vldr	s15, [r2]
 801b700:	f1b9 0f00 	cmp.w	r9, #0
 801b704:	f000 80b0 	beq.w	801b868 <calc_new_geometry+0x698>
 801b708:	ed9d 7a19 	vldr	s14, [sp, #100]	@ 0x64
 801b70c:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b710:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b714:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b716:	ed91 7a00 	vldr	s14, [r1]
 801b71a:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b71e:	ee36 7a87 	vadd.f32	s14, s13, s14
 801b722:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b726:	edcd 7a1d 	vstr	s15, [sp, #116]	@ 0x74
 801b72a:	ed8d 7a1e 	vstr	s14, [sp, #120]	@ 0x78
 801b72e:	2200      	movs	r2, #0
 801b730:	e5f4      	b.n	801b31c <calc_new_geometry+0x14c>
 801b732:	ed9d 3a13 	vldr	s6, [sp, #76]	@ 0x4c
 801b736:	eddd 3a14 	vldr	s7, [sp, #80]	@ 0x50
 801b73a:	ed9d 2a17 	vldr	s4, [sp, #92]	@ 0x5c
 801b73e:	eddd 2a18 	vldr	s5, [sp, #96]	@ 0x60
 801b742:	ed9d 1a15 	vldr	s2, [sp, #84]	@ 0x54
 801b746:	eddd 1a16 	vldr	s3, [sp, #88]	@ 0x58
 801b74a:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b74e:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b752:	f7ff f9ff 	bl	801ab54 <cubic_decasteljau>
 801b756:	4601      	mov	r1, r0
 801b758:	2800      	cmp	r0, #0
 801b75a:	f43f ae3a 	beq.w	801b3d2 <calc_new_geometry+0x202>
 801b75e:	9101      	str	r1, [sp, #4]
 801b760:	f001 f988 	bl	801ca74 <nema_vg_set_error>
 801b764:	9901      	ldr	r1, [sp, #4]
 801b766:	4608      	mov	r0, r1
 801b768:	b021      	add	sp, #132	@ 0x84
 801b76a:	ecbd 8b10 	vpop	{d8-d15}
 801b76e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b772:	bf00      	nop
 801b774:	20000144 	.word	0x20000144
 801b778:	42480000 	.word	0x42480000
 801b77c:	20083298 	.word	0x20083298
 801b780:	2008314c 	.word	0x2008314c
 801b784:	200831a8 	.word	0x200831a8
 801b788:	20000140 	.word	0x20000140
 801b78c:	20083180 	.word	0x20083180
 801b790:	9e05      	ldr	r6, [sp, #20]
 801b792:	eddd 7a1d 	vldr	s15, [sp, #116]	@ 0x74
 801b796:	eddd 6a19 	vldr	s13, [sp, #100]	@ 0x64
 801b79a:	ee76 6ae7 	vsub.f32	s13, s13, s15
 801b79e:	eef5 6a40 	vcmp.f32	s13, #0.0
 801b7a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b7a6:	ed9d 7a1e 	vldr	s14, [sp, #120]	@ 0x78
 801b7aa:	d108      	bne.n	801b7be <calc_new_geometry+0x5ee>
 801b7ac:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b7b0:	ee76 6ac7 	vsub.f32	s13, s13, s14
 801b7b4:	eef5 6a40 	vcmp.f32	s13, #0.0
 801b7b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b7bc:	d03f      	beq.n	801b83e <calc_new_geometry+0x66e>
 801b7be:	e897 0003 	ldmia.w	r7, {r0, r1}
 801b7c2:	f8df 82ec 	ldr.w	r8, [pc, #748]	@ 801bab0 <calc_new_geometry+0x8e0>
 801b7c6:	edcd 7a19 	vstr	s15, [sp, #100]	@ 0x64
 801b7ca:	f898 3000 	ldrb.w	r3, [r8]
 801b7ce:	ed8d 7a1a 	vstr	s14, [sp, #104]	@ 0x68
 801b7d2:	e885 0003 	stmia.w	r5, {r0, r1}
 801b7d6:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b7da:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b7de:	b303      	cbz	r3, 801b822 <calc_new_geometry+0x652>
 801b7e0:	4bb2      	ldr	r3, [pc, #712]	@ (801baac <calc_new_geometry+0x8dc>)
 801b7e2:	ed93 6a03 	vldr	s12, [r3, #12]
 801b7e6:	edd3 6a04 	vldr	s13, [r3, #16]
 801b7ea:	ed93 5a00 	vldr	s10, [r3]
 801b7ee:	edd3 5a01 	vldr	s11, [r3, #4]
 801b7f2:	ee27 5a85 	vmul.f32	s10, s15, s10
 801b7f6:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b7fa:	ee67 7a86 	vmul.f32	s15, s15, s12
 801b7fe:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b802:	ee35 6a25 	vadd.f32	s12, s10, s11
 801b806:	ee37 7a87 	vadd.f32	s14, s15, s14
 801b80a:	edd3 6a02 	vldr	s13, [r3, #8]
 801b80e:	edd3 7a05 	vldr	s15, [r3, #20]
 801b812:	ee76 6a26 	vadd.f32	s13, s12, s13
 801b816:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b81a:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 801b81e:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801b822:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801b826:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801b82a:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b82e:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b832:	f7fd fd6b 	bl	801930c <calc_line_geometry>
 801b836:	4601      	mov	r1, r0
 801b838:	2800      	cmp	r0, #0
 801b83a:	f040 8425 	bne.w	801c088 <calc_new_geometry+0xeb8>
 801b83e:	2300      	movs	r3, #0
 801b840:	f88d 3039 	strb.w	r3, [sp, #57]	@ 0x39
 801b844:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801b848:	2b01      	cmp	r3, #1
 801b84a:	f47f ada1 	bne.w	801b390 <calc_new_geometry+0x1c0>
 801b84e:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b852:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b856:	f7fd fcf9 	bl	801924c <calc_move_geometry>
 801b85a:	4601      	mov	r1, r0
 801b85c:	2800      	cmp	r0, #0
 801b85e:	f47f af7e 	bne.w	801b75e <calc_new_geometry+0x58e>
 801b862:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801b866:	e586      	b.n	801b376 <calc_new_geometry+0x1a6>
 801b868:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801b86c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b86e:	ed91 7a00 	vldr	s14, [r1]
 801b872:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801b876:	e756      	b.n	801b726 <calc_new_geometry+0x556>
 801b878:	2b00      	cmp	r3, #0
 801b87a:	f43f af2a 	beq.w	801b6d2 <calc_new_geometry+0x502>
 801b87e:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801b882:	2b00      	cmp	r3, #0
 801b884:	f000 8269 	beq.w	801bd5a <calc_new_geometry+0xb8a>
 801b888:	eef0 7a49 	vmov.f32	s15, s18
 801b88c:	eeb0 7a49 	vmov.f32	s14, s18
 801b890:	f8df 821c 	ldr.w	r8, [pc, #540]	@ 801bab0 <calc_new_geometry+0x8e0>
 801b894:	f898 3000 	ldrb.w	r3, [r8]
 801b898:	b1e3      	cbz	r3, 801b8d4 <calc_new_geometry+0x704>
 801b89a:	4b84      	ldr	r3, [pc, #528]	@ (801baac <calc_new_geometry+0x8dc>)
 801b89c:	edd3 5a00 	vldr	s11, [r3]
 801b8a0:	ed93 6a01 	vldr	s12, [r3, #4]
 801b8a4:	edd3 6a03 	vldr	s13, [r3, #12]
 801b8a8:	ed93 5a04 	vldr	s10, [r3, #16]
 801b8ac:	ee27 6a86 	vmul.f32	s12, s15, s12
 801b8b0:	ee67 6a26 	vmul.f32	s13, s14, s13
 801b8b4:	ee67 7a85 	vmul.f32	s15, s15, s10
 801b8b8:	ee67 5a25 	vmul.f32	s11, s14, s11
 801b8bc:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801b8c0:	ee35 7a86 	vadd.f32	s14, s11, s12
 801b8c4:	edd3 7a05 	vldr	s15, [r3, #20]
 801b8c8:	ed93 6a02 	vldr	s12, [r3, #8]
 801b8cc:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801b8d0:	ee37 7a06 	vadd.f32	s14, s14, s12
 801b8d4:	f240 13ff 	movw	r3, #511	@ 0x1ff
 801b8d8:	eeb0 1a47 	vmov.f32	s2, s14
 801b8dc:	eef0 1a67 	vmov.f32	s3, s15
 801b8e0:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801b8e4:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801b8e8:	ed8d 7a08 	vstr	s14, [sp, #32]
 801b8ec:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 801b8f0:	f8cb 3024 	str.w	r3, [fp, #36]	@ 0x24
 801b8f4:	f7fd fd0a 	bl	801930c <calc_line_geometry>
 801b8f8:	4601      	mov	r1, r0
 801b8fa:	2800      	cmp	r0, #0
 801b8fc:	f040 83c4 	bne.w	801c088 <calc_new_geometry+0xeb8>
 801b900:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b902:	e6e8      	b.n	801b6d6 <calc_new_geometry+0x506>
 801b904:	9101      	str	r1, [sp, #4]
 801b906:	f001 f8b5 	bl	801ca74 <nema_vg_set_error>
 801b90a:	9901      	ldr	r1, [sp, #4]
 801b90c:	4608      	mov	r0, r1
 801b90e:	f001 f8b1 	bl	801ca74 <nema_vg_set_error>
 801b912:	9901      	ldr	r1, [sp, #4]
 801b914:	4608      	mov	r0, r1
 801b916:	b021      	add	sp, #132	@ 0x84
 801b918:	ecbd 8b10 	vpop	{d8-d15}
 801b91c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b920:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801b924:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801b928:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801b92c:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801b930:	f7fd fcec 	bl	801930c <calc_line_geometry>
 801b934:	4601      	mov	r1, r0
 801b936:	2800      	cmp	r0, #0
 801b938:	f43f ad4b 	beq.w	801b3d2 <calc_new_geometry+0x202>
 801b93c:	e70f      	b.n	801b75e <calc_new_geometry+0x58e>
 801b93e:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b940:	ed91 5a00 	vldr	s10, [r1]
 801b944:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801b948:	1c98      	adds	r0, r3, #2
 801b94a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b94c:	edd1 5a01 	vldr	s11, [r1, #4]
 801b950:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801b954:	1cd8      	adds	r0, r3, #3
 801b956:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b958:	ed91 7a02 	vldr	s14, [r1, #8]
 801b95c:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801b960:	3304      	adds	r3, #4
 801b962:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b964:	edd1 7a03 	vldr	s15, [r1, #12]
 801b968:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801b96c:	f1b9 0f00 	cmp.w	r9, #0
 801b970:	d013      	beq.n	801b99a <calc_new_geometry+0x7ca>
 801b972:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801b976:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801b97a:	ee35 5a06 	vadd.f32	s10, s10, s12
 801b97e:	ee37 7a06 	vadd.f32	s14, s14, s12
 801b982:	ee75 5aa6 	vadd.f32	s11, s11, s13
 801b986:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801b98a:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801b98e:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801b992:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801b996:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801b99a:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 801bab0 <calc_new_geometry+0x8e0>
 801b99e:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801b9a2:	f898 1000 	ldrb.w	r1, [r8]
 801b9a6:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801b9aa:	2900      	cmp	r1, #0
 801b9ac:	d057      	beq.n	801ba5e <calc_new_geometry+0x88e>
 801b9ae:	493f      	ldr	r1, [pc, #252]	@ (801baac <calc_new_geometry+0x8dc>)
 801b9b0:	1c58      	adds	r0, r3, #1
 801b9b2:	ed91 6a03 	vldr	s12, [r1, #12]
 801b9b6:	edd1 6a04 	vldr	s13, [r1, #16]
 801b9ba:	ed91 4a00 	vldr	s8, [r1]
 801b9be:	edd1 4a01 	vldr	s9, [r1, #4]
 801b9c2:	ee24 3a05 	vmul.f32	s6, s8, s10
 801b9c6:	ee65 3aa4 	vmul.f32	s7, s11, s9
 801b9ca:	ee24 4a07 	vmul.f32	s8, s8, s14
 801b9ce:	ee64 4aa7 	vmul.f32	s9, s9, s15
 801b9d2:	ee26 5a05 	vmul.f32	s10, s12, s10
 801b9d6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 801b9da:	ee26 7a07 	vmul.f32	s14, s12, s14
 801b9de:	ee65 5aa6 	vmul.f32	s11, s11, s13
 801b9e2:	ed91 6a02 	vldr	s12, [r1, #8]
 801b9e6:	ee75 6a25 	vadd.f32	s13, s10, s11
 801b9ea:	ee37 7a27 	vadd.f32	s14, s14, s15
 801b9ee:	ee73 3a23 	vadd.f32	s7, s6, s7
 801b9f2:	edd1 7a05 	vldr	s15, [r1, #20]
 801b9f6:	ee74 4a24 	vadd.f32	s9, s8, s9
 801b9fa:	ee73 5a86 	vadd.f32	s11, s7, s12
 801b9fe:	ee76 6aa7 	vadd.f32	s13, s13, s15
 801ba02:	ee34 6a86 	vadd.f32	s12, s9, s12
 801ba06:	ee77 7a27 	vadd.f32	s15, s14, s15
 801ba0a:	edcd 5a15 	vstr	s11, [sp, #84]	@ 0x54
 801ba0e:	ed8d 6a17 	vstr	s12, [sp, #92]	@ 0x5c
 801ba12:	edcd 6a16 	vstr	s13, [sp, #88]	@ 0x58
 801ba16:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801ba1a:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801ba1e:	f10c 0104 	add.w	r1, ip, #4
 801ba22:	4411      	add	r1, r2
 801ba24:	3302      	adds	r3, #2
 801ba26:	4462      	add	r2, ip
 801ba28:	900f      	str	r0, [sp, #60]	@ 0x3c
 801ba2a:	f1b9 0f00 	cmp.w	r9, #0
 801ba2e:	f000 8187 	beq.w	801bd40 <calc_new_geometry+0xb70>
 801ba32:	ed92 7a00 	vldr	s14, [r2]
 801ba36:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801ba3a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801ba3e:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801ba42:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ba44:	edd1 6a00 	vldr	s13, [r1]
 801ba48:	ed9d 7a1a 	vldr	s14, [sp, #104]	@ 0x68
 801ba4c:	ee36 7a87 	vadd.f32	s14, s13, s14
 801ba50:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801ba54:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801ba58:	e460      	b.n	801b31c <calc_new_geometry+0x14c>
 801ba5a:	f8df 8054 	ldr.w	r8, [pc, #84]	@ 801bab0 <calc_new_geometry+0x8e0>
 801ba5e:	1c58      	adds	r0, r3, #1
 801ba60:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801ba64:	e7db      	b.n	801ba1e <calc_new_geometry+0x84e>
 801ba66:	2e03      	cmp	r6, #3
 801ba68:	f000 80be 	beq.w	801bbe8 <calc_new_geometry+0xa18>
 801ba6c:	2e0a      	cmp	r6, #10
 801ba6e:	f040 8478 	bne.w	801c362 <calc_new_geometry+0x1192>
 801ba72:	9b03      	ldr	r3, [sp, #12]
 801ba74:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801ba78:	edd3 7a00 	vldr	s15, [r3]
 801ba7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801ba80:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801ba84:	ee17 8a90 	vmov	r8, s15
 801ba88:	2b01      	cmp	r3, #1
 801ba8a:	f000 839a 	beq.w	801c1c2 <calc_new_geometry+0xff2>
 801ba8e:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801ba92:	ea4f 0368 	mov.w	r3, r8, asr #1
 801ba96:	2b00      	cmp	r3, #0
 801ba98:	9304      	str	r3, [sp, #16]
 801ba9a:	f77f ae7a 	ble.w	801b792 <calc_new_geometry+0x5c2>
 801ba9e:	2200      	movs	r2, #0
 801baa0:	9605      	str	r6, [sp, #20]
 801baa2:	f8df 800c 	ldr.w	r8, [pc, #12]	@ 801bab0 <calc_new_geometry+0x8e0>
 801baa6:	4b01      	ldr	r3, [pc, #4]	@ (801baac <calc_new_geometry+0x8dc>)
 801baa8:	4616      	mov	r6, r2
 801baaa:	e056      	b.n	801bb5a <calc_new_geometry+0x98a>
 801baac:	20083184 	.word	0x20083184
 801bab0:	20083180 	.word	0x20083180
 801bab4:	3727c5ac 	.word	0x3727c5ac
 801bab8:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801babc:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bac0:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801bac4:	910f      	str	r1, [sp, #60]	@ 0x3c
 801bac6:	eddc 6a00 	vldr	s13, [ip]
 801baca:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801bace:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801bad2:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801bad6:	f898 1000 	ldrb.w	r1, [r8]
 801bada:	3601      	adds	r6, #1
 801badc:	ed8d 7a19 	vstr	s14, [sp, #100]	@ 0x64
 801bae0:	edcd 7a1a 	vstr	s15, [sp, #104]	@ 0x68
 801bae4:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801bae8:	b1f9      	cbz	r1, 801bb2a <calc_new_geometry+0x95a>
 801baea:	ed93 6a03 	vldr	s12, [r3, #12]
 801baee:	edd3 6a04 	vldr	s13, [r3, #16]
 801baf2:	ed93 5a00 	vldr	s10, [r3]
 801baf6:	edd3 5a01 	vldr	s11, [r3, #4]
 801bafa:	ee27 5a05 	vmul.f32	s10, s14, s10
 801bafe:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bb02:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bb06:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bb0a:	ee75 5a25 	vadd.f32	s11, s10, s11
 801bb0e:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bb12:	ed93 6a02 	vldr	s12, [r3, #8]
 801bb16:	edd3 6a05 	vldr	s13, [r3, #20]
 801bb1a:	ee35 7a86 	vadd.f32	s14, s11, s12
 801bb1e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801bb22:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801bb26:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801bb2a:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801bb2e:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801bb32:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801bb36:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801bb3a:	9303      	str	r3, [sp, #12]
 801bb3c:	f7fd fbe6 	bl	801930c <calc_line_geometry>
 801bb40:	9b03      	ldr	r3, [sp, #12]
 801bb42:	4601      	mov	r1, r0
 801bb44:	2800      	cmp	r0, #0
 801bb46:	f040 829f 	bne.w	801c088 <calc_new_geometry+0xeb8>
 801bb4a:	e897 0003 	ldmia.w	r7, {r0, r1}
 801bb4e:	9a04      	ldr	r2, [sp, #16]
 801bb50:	e885 0003 	stmia.w	r5, {r0, r1}
 801bb54:	4296      	cmp	r6, r2
 801bb56:	f43f ae1b 	beq.w	801b790 <calc_new_geometry+0x5c0>
 801bb5a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801bb5c:	f8da 200c 	ldr.w	r2, [sl, #12]
 801bb60:	0088      	lsls	r0, r1, #2
 801bb62:	f100 0c04 	add.w	ip, r0, #4
 801bb66:	4494      	add	ip, r2
 801bb68:	4410      	add	r0, r2
 801bb6a:	1c4a      	adds	r2, r1, #1
 801bb6c:	920f      	str	r2, [sp, #60]	@ 0x3c
 801bb6e:	3102      	adds	r1, #2
 801bb70:	ed90 7a00 	vldr	s14, [r0]
 801bb74:	f1b9 0f00 	cmp.w	r9, #0
 801bb78:	d19e      	bne.n	801bab8 <calc_new_geometry+0x8e8>
 801bb7a:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801bb7e:	910f      	str	r1, [sp, #60]	@ 0x3c
 801bb80:	eddc 7a00 	vldr	s15, [ip]
 801bb84:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801bb88:	e7a5      	b.n	801bad6 <calc_new_geometry+0x906>
 801bb8a:	9b02      	ldr	r3, [sp, #8]
 801bb8c:	2b09      	cmp	r3, #9
 801bb8e:	f47f ac20 	bne.w	801b3d2 <calc_new_geometry+0x202>
 801bb92:	ed9d 8a1b 	vldr	s16, [sp, #108]	@ 0x6c
 801bb96:	eddd ba19 	vldr	s23, [sp, #100]	@ 0x64
 801bb9a:	ee78 6a6b 	vsub.f32	s13, s16, s23
 801bb9e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801bba2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bba6:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801bbaa:	bf48      	it	mi
 801bbac:	eef1 6a66 	vnegmi.f32	s13, s13
 801bbb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bbb4:	eef5 bac0 	vcmpe.f32	s23, #0.0
 801bbb8:	bf4c      	ite	mi
 801bbba:	eeb1 7a48 	vnegmi.f32	s14, s16
 801bbbe:	eeb0 7a48 	vmovpl.f32	s14, s16
 801bbc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bbc6:	eddd 8a1c 	vldr	s17, [sp, #112]	@ 0x70
 801bbca:	ed9d ca1a 	vldr	s24, [sp, #104]	@ 0x68
 801bbce:	f100 80e4 	bmi.w	801bd9a <calc_new_geometry+0xbca>
 801bbd2:	eef4 bac7 	vcmpe.f32	s23, s14
 801bbd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bbda:	f300 80e6 	bgt.w	801bdaa <calc_new_geometry+0xbda>
 801bbde:	ed5f 7a4b 	vldr	s15, [pc, #-300]	@ 801bab4 <calc_new_geometry+0x8e4>
 801bbe2:	ee6b 7aa7 	vmul.f32	s15, s23, s15
 801bbe6:	e0eb      	b.n	801bdc0 <calc_new_geometry+0xbf0>
 801bbe8:	9b03      	ldr	r3, [sp, #12]
 801bbea:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801bbee:	ed9d 7a1a 	vldr	s14, [sp, #104]	@ 0x68
 801bbf2:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801bbf6:	edd3 7a00 	vldr	s15, [r3]
 801bbfa:	f1b9 0f00 	cmp.w	r9, #0
 801bbfe:	f000 8097 	beq.w	801bd30 <calc_new_geometry+0xb60>
 801bc02:	eddd 6a19 	vldr	s13, [sp, #100]	@ 0x64
 801bc06:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801bc0a:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bc0e:	f8df 841c 	ldr.w	r8, [pc, #1052]	@ 801c02c <calc_new_geometry+0xe5c>
 801bc12:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bc16:	f7ff bb81 	b.w	801b31c <calc_new_geometry+0x14c>
 801bc1a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801bc1c:	ed91 7a00 	vldr	s14, [r1]
 801bc20:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bc24:	3302      	adds	r3, #2
 801bc26:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bc28:	edd1 7a01 	vldr	s15, [r1, #4]
 801bc2c:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bc30:	f1b9 0f00 	cmp.w	r9, #0
 801bc34:	d00b      	beq.n	801bc4e <calc_new_geometry+0xa7e>
 801bc36:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801bc3a:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801bc3e:	ee37 7a06 	vadd.f32	s14, s14, s12
 801bc42:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801bc46:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bc4a:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bc4e:	f8df 83dc 	ldr.w	r8, [pc, #988]	@ 801c02c <calc_new_geometry+0xe5c>
 801bc52:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801bc56:	f898 1000 	ldrb.w	r1, [r8]
 801bc5a:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801bc5e:	2900      	cmp	r1, #0
 801bc60:	f43f aefd 	beq.w	801ba5e <calc_new_geometry+0x88e>
 801bc64:	49ef      	ldr	r1, [pc, #956]	@ (801c024 <calc_new_geometry+0xe54>)
 801bc66:	1c58      	adds	r0, r3, #1
 801bc68:	ed91 6a03 	vldr	s12, [r1, #12]
 801bc6c:	edd1 6a04 	vldr	s13, [r1, #16]
 801bc70:	ed91 5a00 	vldr	s10, [r1]
 801bc74:	edd1 5a01 	vldr	s11, [r1, #4]
 801bc78:	ee27 5a05 	vmul.f32	s10, s14, s10
 801bc7c:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bc80:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bc84:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bc88:	ee35 6a25 	vadd.f32	s12, s10, s11
 801bc8c:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bc90:	edd1 6a02 	vldr	s13, [r1, #8]
 801bc94:	edd1 7a05 	vldr	s15, [r1, #20]
 801bc98:	ee76 6a26 	vadd.f32	s13, s12, s13
 801bc9c:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bca0:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 801bca4:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bca8:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 801bcac:	e6b7      	b.n	801ba1e <calc_new_geometry+0x84e>
 801bcae:	f8df 837c 	ldr.w	r8, [pc, #892]	@ 801c02c <calc_new_geometry+0xe5c>
 801bcb2:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bcb6:	f7ff bb31 	b.w	801b31c <calc_new_geometry+0x14c>
 801bcba:	f1ae 0e05 	sub.w	lr, lr, #5
 801bcbe:	f1be 0f03 	cmp.w	lr, #3
 801bcc2:	ed9d 7a19 	vldr	s14, [sp, #100]	@ 0x64
 801bcc6:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801bcca:	f240 8206 	bls.w	801c0da <calc_new_geometry+0xf0a>
 801bcce:	f8df 835c 	ldr.w	r8, [pc, #860]	@ 801c02c <calc_new_geometry+0xe5c>
 801bcd2:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bcd6:	f898 1000 	ldrb.w	r1, [r8]
 801bcda:	ed8d 7a15 	vstr	s14, [sp, #84]	@ 0x54
 801bcde:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
 801bce2:	edcd 7a1c 	vstr	s15, [sp, #112]	@ 0x70
 801bce6:	2900      	cmp	r1, #0
 801bce8:	f43f ae99 	beq.w	801ba1e <calc_new_geometry+0x84e>
 801bcec:	49cd      	ldr	r1, [pc, #820]	@ (801c024 <calc_new_geometry+0xe54>)
 801bcee:	ed91 6a03 	vldr	s12, [r1, #12]
 801bcf2:	edd1 6a04 	vldr	s13, [r1, #16]
 801bcf6:	ed91 5a00 	vldr	s10, [r1]
 801bcfa:	edd1 5a01 	vldr	s11, [r1, #4]
 801bcfe:	ee27 5a05 	vmul.f32	s10, s14, s10
 801bd02:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801bd06:	ee27 7a06 	vmul.f32	s14, s14, s12
 801bd0a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bd0e:	ee35 6a25 	vadd.f32	s12, s10, s11
 801bd12:	ee37 7a27 	vadd.f32	s14, s14, s15
 801bd16:	edd1 6a02 	vldr	s13, [r1, #8]
 801bd1a:	edd1 7a05 	vldr	s15, [r1, #20]
 801bd1e:	ee76 6a26 	vadd.f32	s13, s12, s13
 801bd22:	ee77 7a27 	vadd.f32	s15, s14, s15
 801bd26:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 801bd2a:	edcd 7a16 	vstr	s15, [sp, #88]	@ 0x58
 801bd2e:	e676      	b.n	801ba1e <calc_new_geometry+0x84e>
 801bd30:	f8df 82f8 	ldr.w	r8, [pc, #760]	@ 801c02c <calc_new_geometry+0xe5c>
 801bd34:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bd38:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bd3c:	f7ff baee 	b.w	801b31c <calc_new_geometry+0x14c>
 801bd40:	edd2 7a00 	vldr	s15, [r2]
 801bd44:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 801bd48:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bd4a:	ed91 7a00 	vldr	s14, [r1]
 801bd4e:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801bd52:	ed8d 7a14 	vstr	s14, [sp, #80]	@ 0x50
 801bd56:	f7ff bae1 	b.w	801b31c <calc_new_geometry+0x14c>
 801bd5a:	ed9d 7a1d 	vldr	s14, [sp, #116]	@ 0x74
 801bd5e:	eddd 7a1e 	vldr	s15, [sp, #120]	@ 0x78
 801bd62:	e595      	b.n	801b890 <calc_new_geometry+0x6c0>
 801bd64:	eef4 cae6 	vcmpe.f32	s25, s13
 801bd68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd6c:	f73f ab9e 	bgt.w	801b4ac <calc_new_geometry+0x2dc>
 801bd70:	eeb4 dae6 	vcmpe.f32	s26, s13
 801bd74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd78:	f73f ab98 	bgt.w	801b4ac <calc_new_geometry+0x2dc>
 801bd7c:	eef4 cac6 	vcmpe.f32	s25, s12
 801bd80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd84:	f53f ab92 	bmi.w	801b4ac <calc_new_geometry+0x2dc>
 801bd88:	eeb4 dac6 	vcmpe.f32	s26, s12
 801bd8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd90:	bf54      	ite	pl
 801bd92:	2201      	movpl	r2, #1
 801bd94:	2200      	movmi	r2, #0
 801bd96:	f7ff bb8a 	b.w	801b4ae <calc_new_geometry+0x2de>
 801bd9a:	eef1 7a6b 	vneg.f32	s15, s23
 801bd9e:	eef4 7ac7 	vcmpe.f32	s15, s14
 801bda2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bda6:	f340 8202 	ble.w	801c1ae <calc_new_geometry+0xfde>
 801bdaa:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801bdae:	eddf 7aa0 	vldr	s15, [pc, #640]	@ 801c030 <calc_new_geometry+0xe60>
 801bdb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdb6:	bf4c      	ite	mi
 801bdb8:	ee68 7a67 	vnmulmi.f32	s15, s16, s15
 801bdbc:	ee68 7a27 	vmulpl.f32	s15, s16, s15
 801bdc0:	eef4 6ae7 	vcmpe.f32	s13, s15
 801bdc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdc8:	d82e      	bhi.n	801be28 <calc_new_geometry+0xc58>
 801bdca:	ee78 6acc 	vsub.f32	s13, s17, s24
 801bdce:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801bdd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdd6:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801bdda:	bf48      	it	mi
 801bddc:	eef1 6a66 	vnegmi.f32	s13, s13
 801bde0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bde4:	eeb5 cac0 	vcmpe.f32	s24, #0.0
 801bde8:	bf4c      	ite	mi
 801bdea:	eeb1 7a68 	vnegmi.f32	s14, s17
 801bdee:	eeb0 7a68 	vmovpl.f32	s14, s17
 801bdf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdf6:	f100 81f1 	bmi.w	801c1dc <calc_new_geometry+0x100c>
 801bdfa:	eeb4 cac7 	vcmpe.f32	s24, s14
 801bdfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be02:	f340 81d9 	ble.w	801c1b8 <calc_new_geometry+0xfe8>
 801be06:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801be0a:	eddf 7a89 	vldr	s15, [pc, #548]	@ 801c030 <calc_new_geometry+0xe60>
 801be0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be12:	bf4c      	ite	mi
 801be14:	ee68 7ae7 	vnmulmi.f32	s15, s17, s15
 801be18:	ee68 7aa7 	vmulpl.f32	s15, s17, s15
 801be1c:	eef4 6ae7 	vcmpe.f32	s13, s15
 801be20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be24:	f67f aad5 	bls.w	801b3d2 <calc_new_geometry+0x202>
 801be28:	eddd ca15 	vldr	s25, [sp, #84]	@ 0x54
 801be2c:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801be30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be34:	f100 815e 	bmi.w	801c0f4 <calc_new_geometry+0xf24>
 801be38:	eddf 7a7d 	vldr	s15, [pc, #500]	@ 801c030 <calc_new_geometry+0xe60>
 801be3c:	eef4 cae7 	vcmpe.f32	s25, s15
 801be40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be44:	f240 815e 	bls.w	801c104 <calc_new_geometry+0xf34>
 801be48:	eddd da16 	vldr	s27, [sp, #88]	@ 0x58
 801be4c:	eef5 dac0 	vcmpe.f32	s27, #0.0
 801be50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be54:	f100 81cf 	bmi.w	801c1f6 <calc_new_geometry+0x1026>
 801be58:	eddf 7a75 	vldr	s15, [pc, #468]	@ 801c030 <calc_new_geometry+0xe60>
 801be5c:	eef4 dae7 	vcmpe.f32	s27, s15
 801be60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be64:	f240 814e 	bls.w	801c104 <calc_new_geometry+0xf34>
 801be68:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801be6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be70:	f89d 403b 	ldrb.w	r4, [sp, #59]	@ 0x3b
 801be74:	f3c4 1580 	ubfx	r5, r4, #6, #1
 801be78:	f3c4 1440 	ubfx	r4, r4, #5, #1
 801be7c:	f100 81d1 	bmi.w	801c222 <calc_new_geometry+0x1052>
 801be80:	eef5 dac0 	vcmpe.f32	s27, #0.0
 801be84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be88:	f100 81c8 	bmi.w	801c21c <calc_new_geometry+0x104c>
 801be8c:	ed9d ea17 	vldr	s28, [sp, #92]	@ 0x5c
 801be90:	ee2e ea0b 	vmul.f32	s28, s28, s22
 801be94:	eeb0 0a4e 	vmov.f32	s0, s28
 801be98:	f015 fabc 	bl	8031414 <cosf>
 801be9c:	eeb0 da40 	vmov.f32	s26, s0
 801bea0:	eeb0 0a4e 	vmov.f32	s0, s28
 801bea4:	f015 fb02 	bl	80314ac <sinf>
 801bea8:	ee28 5a0d 	vmul.f32	s10, s16, s26
 801beac:	ee68 5a80 	vmul.f32	s11, s17, s0
 801beb0:	ee2b 7ac0 	vnmul.f32	s14, s23, s0
 801beb4:	ee6c 6a00 	vmul.f32	s13, s24, s0
 801beb8:	ee6c 7a0d 	vmul.f32	s15, s24, s26
 801bebc:	ee28 8a40 	vnmul.f32	s16, s16, s0
 801bec0:	ee68 8a8d 	vmul.f32	s17, s17, s26
 801bec4:	ee2b 6a8d 	vmul.f32	s12, s23, s26
 801bec8:	ee35 ca25 	vadd.f32	s24, s10, s11
 801becc:	ee38 fa28 	vadd.f32	s30, s16, s17
 801bed0:	ee76 ba26 	vadd.f32	s23, s12, s13
 801bed4:	ee37 8a27 	vadd.f32	s16, s14, s15
 801bed8:	ee8c 6a2c 	vdiv.f32	s12, s24, s25
 801bedc:	eecb 5aac 	vdiv.f32	s11, s23, s25
 801bee0:	eecf 6a2d 	vdiv.f32	s13, s30, s27
 801bee4:	ee88 5a2d 	vdiv.f32	s10, s16, s27
 801bee8:	ee76 8a65 	vsub.f32	s17, s12, s11
 801beec:	ee76 eac5 	vsub.f32	s29, s13, s10
 801bef0:	ee28 7aa8 	vmul.f32	s14, s17, s17
 801bef4:	ee6e 7aae 	vmul.f32	s15, s29, s29
 801bef8:	ee77 7a27 	vadd.f32	s15, s14, s15
 801befc:	eef5 7a40 	vcmp.f32	s15, #0.0
 801bf00:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801bf04:	ee76 4a25 	vadd.f32	s9, s12, s11
 801bf08:	ee76 fa85 	vadd.f32	s31, s13, s10
 801bf0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf10:	eeb0 ea40 	vmov.f32	s28, s0
 801bf14:	ee64 4a87 	vmul.f32	s9, s9, s14
 801bf18:	ee6f fa87 	vmul.f32	s31, s31, s14
 801bf1c:	f000 821c 	beq.w	801c358 <calc_new_geometry+0x1188>
 801bf20:	eeb7 4a00 	vmov.f32	s8, #112	@ 0x3f800000  1.0
 801bf24:	eeb5 7a00 	vmov.f32	s14, #80	@ 0x3e800000  0.250
 801bf28:	ee84 0a27 	vdiv.f32	s0, s8, s15
 801bf2c:	ee30 0a47 	vsub.f32	s0, s0, s14
 801bf30:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801bf34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf38:	f100 82c7 	bmi.w	801c4ca <calc_new_geometry+0x12fa>
 801bf3c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801bf40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf44:	eeb1 8ac0 	vsqrt.f32	s16, s0
 801bf48:	f100 82e8 	bmi.w	801c51c <calc_new_geometry+0x134c>
 801bf4c:	ee28 fa28 	vmul.f32	s30, s16, s17
 801bf50:	ee68 ea2e 	vmul.f32	s29, s16, s29
 801bf54:	ee3f cacf 	vsub.f32	s24, s31, s30
 801bf58:	ee7e baa4 	vadd.f32	s23, s29, s9
 801bf5c:	ee36 0acc 	vsub.f32	s0, s13, s24
 801bf60:	ee76 0a6b 	vsub.f32	s1, s12, s23
 801bf64:	edcd 4a06 	vstr	s9, [sp, #24]
 801bf68:	edcd 6a05 	vstr	s13, [sp, #20]
 801bf6c:	ed8d 6a04 	vstr	s12, [sp, #16]
 801bf70:	ed8d 5a07 	vstr	s10, [sp, #28]
 801bf74:	edcd 5a02 	vstr	s11, [sp, #8]
 801bf78:	f015 f938 	bl	80311ec <atan2f>
 801bf7c:	eddd 5a02 	vldr	s11, [sp, #8]
 801bf80:	ed9d 5a07 	vldr	s10, [sp, #28]
 801bf84:	eeb0 8a40 	vmov.f32	s16, s0
 801bf88:	ee75 0aeb 	vsub.f32	s1, s11, s23
 801bf8c:	ee35 0a4c 	vsub.f32	s0, s10, s24
 801bf90:	edcd 5a03 	vstr	s11, [sp, #12]
 801bf94:	ed8d 5a02 	vstr	s10, [sp, #8]
 801bf98:	f015 f928 	bl	80311ec <atan2f>
 801bf9c:	ee28 8a0a 	vmul.f32	s16, s16, s20
 801bfa0:	ee60 8a0a 	vmul.f32	s17, s0, s20
 801bfa4:	ee78 7ac8 	vsub.f32	s15, s17, s16
 801bfa8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801bfac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfb0:	bf44      	itt	mi
 801bfb2:	ed9f 7a1d 	vldrmi	s14, [pc, #116]	@ 801c028 <calc_new_geometry+0xe58>
 801bfb6:	ee77 7a87 	vaddmi.f32	s15, s15, s14
 801bfba:	eef4 7aea 	vcmpe.f32	s15, s21
 801bfbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfc2:	ed9d 5a02 	vldr	s10, [sp, #8]
 801bfc6:	eddd 5a03 	vldr	s11, [sp, #12]
 801bfca:	ed9d 6a04 	vldr	s12, [sp, #16]
 801bfce:	eddd 6a05 	vldr	s13, [sp, #20]
 801bfd2:	eddd 4a06 	vldr	s9, [sp, #24]
 801bfd6:	f140 819e 	bpl.w	801c316 <calc_new_geometry+0x1146>
 801bfda:	42a5      	cmp	r5, r4
 801bfdc:	f000 8252 	beq.w	801c484 <calc_new_geometry+0x12b4>
 801bfe0:	ee6c 7a2d 	vmul.f32	s15, s24, s27
 801bfe4:	ee6b baac 	vmul.f32	s23, s23, s25
 801bfe8:	ee2d 7a2b 	vmul.f32	s14, s26, s23
 801bfec:	ee6e ba2b 	vmul.f32	s23, s28, s23
 801bff0:	ee2e ea27 	vmul.f32	s28, s28, s15
 801bff4:	ee6d 7a27 	vmul.f32	s15, s26, s15
 801bff8:	ee37 ea4e 	vsub.f32	s28, s14, s28
 801bffc:	ee3b caa7 	vadd.f32	s24, s23, s15
 801c000:	eeb4 8ae8 	vcmpe.f32	s16, s17
 801c004:	2d00      	cmp	r5, #0
 801c006:	f000 8148 	beq.w	801c29a <calc_new_geometry+0x10ca>
 801c00a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c00e:	f300 8236 	bgt.w	801c47e <calc_new_geometry+0x12ae>
 801c012:	eeb4 8ae8 	vcmpe.f32	s16, s17
 801c016:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c01a:	bf48      	it	mi
 801c01c:	2101      	movmi	r1, #1
 801c01e:	d415      	bmi.n	801c04c <calc_new_geometry+0xe7c>
 801c020:	f7ff b9d7 	b.w	801b3d2 <calc_new_geometry+0x202>
 801c024:	20083184 	.word	0x20083184
 801c028:	43b40000 	.word	0x43b40000
 801c02c:	20083180 	.word	0x20083180
 801c030:	3727c5ac 	.word	0x3727c5ac
 801c034:	b727c5ac 	.word	0xb727c5ac
 801c038:	00000000 	.word	0x00000000
 801c03c:	eef4 bae8 	vcmpe.f32	s23, s17
 801c040:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c044:	eeb0 8a6b 	vmov.f32	s16, s23
 801c048:	f57f a9c3 	bpl.w	801b3d2 <calc_new_geometry+0x202>
 801c04c:	ee78 ba29 	vadd.f32	s23, s16, s19
 801c050:	eef4 bae8 	vcmpe.f32	s23, s17
 801c054:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c058:	bfa4      	itt	ge
 801c05a:	3102      	addge	r1, #2
 801c05c:	b2c9      	uxtbge	r1, r1
 801c05e:	eeb0 0a48 	vmov.f32	s0, s16
 801c062:	eef0 2a6d 	vmov.f32	s5, s27
 801c066:	eeb0 2a6c 	vmov.f32	s4, s25
 801c06a:	eef0 1a4c 	vmov.f32	s3, s24
 801c06e:	eeb0 1a4e 	vmov.f32	s2, s28
 801c072:	a80e      	add	r0, sp, #56	@ 0x38
 801c074:	bf54      	ite	pl
 801c076:	eef0 0a68 	vmovpl.f32	s1, s17
 801c07a:	eef0 0a6b 	vmovmi.f32	s1, s23
 801c07e:	f7fe ff27 	bl	801aed0 <arc_to_cubic>
 801c082:	4601      	mov	r1, r0
 801c084:	2800      	cmp	r0, #0
 801c086:	d0d9      	beq.n	801c03c <calc_new_geometry+0xe6c>
 801c088:	9101      	str	r1, [sp, #4]
 801c08a:	f000 fcf3 	bl	801ca74 <nema_vg_set_error>
 801c08e:	9901      	ldr	r1, [sp, #4]
 801c090:	4608      	mov	r0, r1
 801c092:	f7ff bb64 	b.w	801b75e <calc_new_geometry+0x58e>
 801c096:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801c09a:	f8d1 e000 	ldr.w	lr, [r1]
 801c09e:	1c98      	adds	r0, r3, #2
 801c0a0:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c0a2:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 801c0a6:	f8d1 e004 	ldr.w	lr, [r1, #4]
 801c0aa:	1cd8      	adds	r0, r3, #3
 801c0ac:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c0ae:	f8cd e058 	str.w	lr, [sp, #88]	@ 0x58
 801c0b2:	f10c 0c0c 	add.w	ip, ip, #12
 801c0b6:	f8d1 e008 	ldr.w	lr, [r1, #8]
 801c0ba:	eb02 010c 	add.w	r1, r2, ip
 801c0be:	f103 0804 	add.w	r8, r3, #4
 801c0c2:	9103      	str	r1, [sp, #12]
 801c0c4:	4603      	mov	r3, r0
 801c0c6:	991a      	ldr	r1, [sp, #104]	@ 0x68
 801c0c8:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801c0ca:	f8cd e05c 	str.w	lr, [sp, #92]	@ 0x5c
 801c0ce:	f88d 403b 	strb.w	r4, [sp, #59]	@ 0x3b
 801c0d2:	901b      	str	r0, [sp, #108]	@ 0x6c
 801c0d4:	911c      	str	r1, [sp, #112]	@ 0x70
 801c0d6:	f7ff b907 	b.w	801b2e8 <calc_new_geometry+0x118>
 801c0da:	ee37 7a07 	vadd.f32	s14, s14, s14
 801c0de:	ee77 7aa7 	vadd.f32	s15, s15, s15
 801c0e2:	ed9d 6a1b 	vldr	s12, [sp, #108]	@ 0x6c
 801c0e6:	eddd 6a1c 	vldr	s13, [sp, #112]	@ 0x70
 801c0ea:	ee37 7a46 	vsub.f32	s14, s14, s12
 801c0ee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801c0f2:	e5ec      	b.n	801bcce <calc_new_geometry+0xafe>
 801c0f4:	ed5f 7a31 	vldr	s15, [pc, #-196]	@ 801c034 <calc_new_geometry+0xe64>
 801c0f8:	eef4 cae7 	vcmpe.f32	s25, s15
 801c0fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c100:	f6ff aea2 	blt.w	801be48 <calc_new_geometry+0xc78>
 801c104:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801c108:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801c10c:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c110:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c114:	f7fd f8fa 	bl	801930c <calc_line_geometry>
 801c118:	4601      	mov	r1, r0
 801c11a:	2800      	cmp	r0, #0
 801c11c:	f43f a959 	beq.w	801b3d2 <calc_new_geometry+0x202>
 801c120:	9101      	str	r1, [sp, #4]
 801c122:	f000 fca7 	bl	801ca74 <nema_vg_set_error>
 801c126:	9901      	ldr	r1, [sp, #4]
 801c128:	e7b2      	b.n	801c090 <calc_new_geometry+0xec0>
 801c12a:	f1ae 0e05 	sub.w	lr, lr, #5
 801c12e:	f1be 0f03 	cmp.w	lr, #3
 801c132:	ed9d 6a19 	vldr	s12, [sp, #100]	@ 0x64
 801c136:	eddd 6a1a 	vldr	s13, [sp, #104]	@ 0x68
 801c13a:	d91f      	bls.n	801c17c <calc_new_geometry+0xfac>
 801c13c:	eef0 5a66 	vmov.f32	s11, s13
 801c140:	eeb0 5a46 	vmov.f32	s10, s12
 801c144:	edcd 5a16 	vstr	s11, [sp, #88]	@ 0x58
 801c148:	ed8d 5a15 	vstr	s10, [sp, #84]	@ 0x54
 801c14c:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c14e:	ed91 7a00 	vldr	s14, [r1]
 801c152:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801c156:	3302      	adds	r3, #2
 801c158:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c15a:	edd1 7a01 	vldr	s15, [r1, #4]
 801c15e:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801c162:	f1b9 0f00 	cmp.w	r9, #0
 801c166:	f43f ac18 	beq.w	801b99a <calc_new_geometry+0x7ca>
 801c16a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801c16e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801c172:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
 801c176:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
 801c17a:	e40e      	b.n	801b99a <calc_new_geometry+0x7ca>
 801c17c:	ee36 5a06 	vadd.f32	s10, s12, s12
 801c180:	ee76 5aa6 	vadd.f32	s11, s13, s13
 801c184:	ed9d 7a1b 	vldr	s14, [sp, #108]	@ 0x6c
 801c188:	eddd 7a1c 	vldr	s15, [sp, #112]	@ 0x70
 801c18c:	ee35 5a47 	vsub.f32	s10, s10, s14
 801c190:	ee75 5ae7 	vsub.f32	s11, s11, s15
 801c194:	e7d6      	b.n	801c144 <calc_new_geometry+0xf74>
 801c196:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801c19a:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801c19e:	f7fd f855 	bl	801924c <calc_move_geometry>
 801c1a2:	4601      	mov	r1, r0
 801c1a4:	2800      	cmp	r0, #0
 801c1a6:	f43f a914 	beq.w	801b3d2 <calc_new_geometry+0x202>
 801c1aa:	f7ff bad8 	b.w	801b75e <calc_new_geometry+0x58e>
 801c1ae:	ed1f 7a60 	vldr	s14, [pc, #-384]	@ 801c030 <calc_new_geometry+0xe60>
 801c1b2:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c1b6:	e603      	b.n	801bdc0 <calc_new_geometry+0xbf0>
 801c1b8:	ed5f 7a63 	vldr	s15, [pc, #-396]	@ 801c030 <calc_new_geometry+0xe60>
 801c1bc:	ee6c 7a27 	vmul.f32	s15, s24, s15
 801c1c0:	e62c      	b.n	801be1c <calc_new_geometry+0xc4c>
 801c1c2:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c1c6:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c1ca:	f7fd f83f 	bl	801924c <calc_move_geometry>
 801c1ce:	4601      	mov	r1, r0
 801c1d0:	2800      	cmp	r0, #0
 801c1d2:	f47f af59 	bne.w	801c088 <calc_new_geometry+0xeb8>
 801c1d6:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801c1da:	e458      	b.n	801ba8e <calc_new_geometry+0x8be>
 801c1dc:	eef1 7a4c 	vneg.f32	s15, s24
 801c1e0:	eef4 7ac7 	vcmpe.f32	s15, s14
 801c1e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1e8:	f73f ae0d 	bgt.w	801be06 <calc_new_geometry+0xc36>
 801c1ec:	ed1f 7a70 	vldr	s14, [pc, #-448]	@ 801c030 <calc_new_geometry+0xe60>
 801c1f0:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c1f4:	e612      	b.n	801be1c <calc_new_geometry+0xc4c>
 801c1f6:	ed5f 7a71 	vldr	s15, [pc, #-452]	@ 801c034 <calc_new_geometry+0xe64>
 801c1fa:	eef4 dae7 	vcmpe.f32	s27, s15
 801c1fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c202:	f6bf af7f 	bge.w	801c104 <calc_new_geometry+0xf34>
 801c206:	eef5 cac0 	vcmpe.f32	s25, #0.0
 801c20a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c20e:	f89d 403b 	ldrb.w	r4, [sp, #59]	@ 0x3b
 801c212:	f3c4 1580 	ubfx	r5, r4, #6, #1
 801c216:	f3c4 1440 	ubfx	r4, r4, #5, #1
 801c21a:	d402      	bmi.n	801c222 <calc_new_geometry+0x1052>
 801c21c:	eef1 da6d 	vneg.f32	s27, s27
 801c220:	e634      	b.n	801be8c <calc_new_geometry+0xcbc>
 801c222:	eef1 ca6c 	vneg.f32	s25, s25
 801c226:	e62b      	b.n	801be80 <calc_new_geometry+0xcb0>
 801c228:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c22c:	2b00      	cmp	r3, #0
 801c22e:	f000 8121 	beq.w	801c474 <calc_new_geometry+0x12a4>
 801c232:	ed5f 1a7f 	vldr	s3, [pc, #-508]	@ 801c038 <calc_new_geometry+0xe68>
 801c236:	eeb0 1a61 	vmov.f32	s2, s3
 801c23a:	4bc4      	ldr	r3, [pc, #784]	@ (801c54c <calc_new_geometry+0x137c>)
 801c23c:	781b      	ldrb	r3, [r3, #0]
 801c23e:	b1e3      	cbz	r3, 801c27a <calc_new_geometry+0x10aa>
 801c240:	4bc3      	ldr	r3, [pc, #780]	@ (801c550 <calc_new_geometry+0x1380>)
 801c242:	edd3 6a04 	vldr	s13, [r3, #16]
 801c246:	edd3 7a00 	vldr	s15, [r3]
 801c24a:	ed93 7a01 	vldr	s14, [r3, #4]
 801c24e:	ed93 6a03 	vldr	s12, [r3, #12]
 801c252:	ee21 7a87 	vmul.f32	s14, s3, s14
 801c256:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c25a:	ee61 1aa6 	vmul.f32	s3, s3, s13
 801c25e:	ee21 1a06 	vmul.f32	s2, s2, s12
 801c262:	ee77 7a87 	vadd.f32	s15, s15, s14
 801c266:	ee71 1a21 	vadd.f32	s3, s2, s3
 801c26a:	edd3 6a02 	vldr	s13, [r3, #8]
 801c26e:	ed93 7a05 	vldr	s14, [r3, #20]
 801c272:	ee37 1aa6 	vadd.f32	s2, s15, s13
 801c276:	ee71 1a87 	vadd.f32	s3, s3, s14
 801c27a:	f240 12ff 	movw	r2, #511	@ 0x1ff
 801c27e:	4bb5      	ldr	r3, [pc, #724]	@ (801c554 <calc_new_geometry+0x1384>)
 801c280:	ed9d 0a13 	vldr	s0, [sp, #76]	@ 0x4c
 801c284:	eddd 0a14 	vldr	s1, [sp, #80]	@ 0x50
 801c288:	625a      	str	r2, [r3, #36]	@ 0x24
 801c28a:	f7fd f83f 	bl	801930c <calc_line_geometry>
 801c28e:	4601      	mov	r1, r0
 801c290:	2800      	cmp	r0, #0
 801c292:	f43f aa68 	beq.w	801b766 <calc_new_geometry+0x596>
 801c296:	f7ff ba62 	b.w	801b75e <calc_new_geometry+0x58e>
 801c29a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c29e:	eef0 ba68 	vmov.f32	s23, s17
 801c2a2:	d50b      	bpl.n	801c2bc <calc_new_geometry+0x10ec>
 801c2a4:	eef0 8a48 	vmov.f32	s17, s16
 801c2a8:	ed9f 8aab 	vldr	s16, [pc, #684]	@ 801c558 <calc_new_geometry+0x1388>
 801c2ac:	ee38 8a88 	vadd.f32	s16, s17, s16
 801c2b0:	b125      	cbz	r5, 801c2bc <calc_new_geometry+0x10ec>
 801c2b2:	eef0 8a48 	vmov.f32	s17, s16
 801c2b6:	eeb0 8a6b 	vmov.f32	s16, s23
 801c2ba:	e6aa      	b.n	801c012 <calc_new_geometry+0xe42>
 801c2bc:	eeb4 8aeb 	vcmpe.f32	s16, s23
 801c2c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c2c4:	bfc8      	it	gt
 801c2c6:	2101      	movgt	r1, #1
 801c2c8:	dc09      	bgt.n	801c2de <calc_new_geometry+0x110e>
 801c2ca:	f7ff b882 	b.w	801b3d2 <calc_new_geometry+0x202>
 801c2ce:	eef4 8aeb 	vcmpe.f32	s17, s23
 801c2d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c2d6:	eeb0 8a68 	vmov.f32	s16, s17
 801c2da:	f77f a87a 	ble.w	801b3d2 <calc_new_geometry+0x202>
 801c2de:	ee78 8a69 	vsub.f32	s17, s16, s19
 801c2e2:	eef4 8aeb 	vcmpe.f32	s17, s23
 801c2e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c2ea:	bf9c      	itt	ls
 801c2ec:	3102      	addls	r1, #2
 801c2ee:	b2c9      	uxtbls	r1, r1
 801c2f0:	eeb0 0a48 	vmov.f32	s0, s16
 801c2f4:	eef0 2a6d 	vmov.f32	s5, s27
 801c2f8:	eeb0 2a6c 	vmov.f32	s4, s25
 801c2fc:	eef0 1a4c 	vmov.f32	s3, s24
 801c300:	eeb0 1a4e 	vmov.f32	s2, s28
 801c304:	a80e      	add	r0, sp, #56	@ 0x38
 801c306:	fe78 0aab 	vselgt.f32	s1, s17, s23
 801c30a:	f7fe fde1 	bl	801aed0 <arc_to_cubic>
 801c30e:	4601      	mov	r1, r0
 801c310:	2800      	cmp	r0, #0
 801c312:	d0dc      	beq.n	801c2ce <calc_new_geometry+0x10fe>
 801c314:	e6b8      	b.n	801c088 <calc_new_geometry+0xeb8>
 801c316:	db02      	blt.n	801c31e <calc_new_geometry+0x114e>
 801c318:	42a5      	cmp	r5, r4
 801c31a:	f43f ae61 	beq.w	801bfe0 <calc_new_geometry+0xe10>
 801c31e:	ee74 baee 	vsub.f32	s23, s9, s29
 801c322:	ee3f ca2f 	vadd.f32	s24, s30, s31
 801c326:	ee76 0a6b 	vsub.f32	s1, s12, s23
 801c32a:	ee36 0acc 	vsub.f32	s0, s13, s24
 801c32e:	ed8d 5a03 	vstr	s10, [sp, #12]
 801c332:	edcd 5a02 	vstr	s11, [sp, #8]
 801c336:	f014 ff59 	bl	80311ec <atan2f>
 801c33a:	eddd 5a02 	vldr	s11, [sp, #8]
 801c33e:	ed9d 5a03 	vldr	s10, [sp, #12]
 801c342:	ee75 0aeb 	vsub.f32	s1, s11, s23
 801c346:	ee20 8a0a 	vmul.f32	s16, s0, s20
 801c34a:	ee35 0a4c 	vsub.f32	s0, s10, s24
 801c34e:	f014 ff4d 	bl	80311ec <atan2f>
 801c352:	ee60 8a0a 	vmul.f32	s17, s0, s20
 801c356:	e643      	b.n	801bfe0 <calc_new_geometry+0xe10>
 801c358:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801c35c:	4608      	mov	r0, r1
 801c35e:	f7ff b9fe 	b.w	801b75e <calc_new_geometry+0x58e>
 801c362:	2e0b      	cmp	r6, #11
 801c364:	f47f ab79 	bne.w	801ba5a <calc_new_geometry+0x88a>
 801c368:	9b03      	ldr	r3, [sp, #12]
 801c36a:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
 801c36e:	edd3 7a00 	vldr	s15, [r3]
 801c372:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c376:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c37a:	ee17 8a90 	vmov	r8, s15
 801c37e:	2b01      	cmp	r3, #1
 801c380:	f000 808c 	beq.w	801c49c <calc_new_geometry+0x12cc>
 801c384:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801c388:	ea4f 0368 	mov.w	r3, r8, asr #1
 801c38c:	2b00      	cmp	r3, #0
 801c38e:	9304      	str	r3, [sp, #16]
 801c390:	f77e affe 	ble.w	801b390 <calc_new_geometry+0x1c0>
 801c394:	2100      	movs	r1, #0
 801c396:	9605      	str	r6, [sp, #20]
 801c398:	f8df 81b0 	ldr.w	r8, [pc, #432]	@ 801c54c <calc_new_geometry+0x137c>
 801c39c:	464e      	mov	r6, r9
 801c39e:	4b6c      	ldr	r3, [pc, #432]	@ (801c550 <calc_new_geometry+0x1380>)
 801c3a0:	4689      	mov	r9, r1
 801c3a2:	e052      	b.n	801c44a <calc_new_geometry+0x127a>
 801c3a4:	eddd 7a19 	vldr	s15, [sp, #100]	@ 0x64
 801c3a8:	ee37 7a27 	vadd.f32	s14, s14, s15
 801c3ac:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801c3b0:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c3b2:	eddc 6a00 	vldr	s13, [ip]
 801c3b6:	eddd 7a1a 	vldr	s15, [sp, #104]	@ 0x68
 801c3ba:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801c3be:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c3c2:	f898 1000 	ldrb.w	r1, [r8]
 801c3c6:	f109 0901 	add.w	r9, r9, #1
 801c3ca:	ed8d 7a19 	vstr	s14, [sp, #100]	@ 0x64
 801c3ce:	edcd 7a1a 	vstr	s15, [sp, #104]	@ 0x68
 801c3d2:	f88d 407c 	strb.w	r4, [sp, #124]	@ 0x7c
 801c3d6:	b1f9      	cbz	r1, 801c418 <calc_new_geometry+0x1248>
 801c3d8:	ed93 6a03 	vldr	s12, [r3, #12]
 801c3dc:	edd3 6a04 	vldr	s13, [r3, #16]
 801c3e0:	ed93 5a00 	vldr	s10, [r3]
 801c3e4:	edd3 5a01 	vldr	s11, [r3, #4]
 801c3e8:	ee27 5a05 	vmul.f32	s10, s14, s10
 801c3ec:	ee67 5aa5 	vmul.f32	s11, s15, s11
 801c3f0:	ee27 7a06 	vmul.f32	s14, s14, s12
 801c3f4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801c3f8:	ee35 6a25 	vadd.f32	s12, s10, s11
 801c3fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 801c400:	edd3 6a02 	vldr	s13, [r3, #8]
 801c404:	edd3 7a05 	vldr	s15, [r3, #20]
 801c408:	ee76 6a26 	vadd.f32	s13, s12, s13
 801c40c:	ee77 7a27 	vadd.f32	s15, s14, s15
 801c410:	edcd 6a13 	vstr	s13, [sp, #76]	@ 0x4c
 801c414:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c418:	ed9d 1a13 	vldr	s2, [sp, #76]	@ 0x4c
 801c41c:	eddd 1a14 	vldr	s3, [sp, #80]	@ 0x50
 801c420:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c424:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c428:	9303      	str	r3, [sp, #12]
 801c42a:	f7fc ff6f 	bl	801930c <calc_line_geometry>
 801c42e:	9b03      	ldr	r3, [sp, #12]
 801c430:	4601      	mov	r1, r0
 801c432:	2800      	cmp	r0, #0
 801c434:	f47f ae28 	bne.w	801c088 <calc_new_geometry+0xeb8>
 801c438:	e897 0003 	ldmia.w	r7, {r0, r1}
 801c43c:	9a04      	ldr	r2, [sp, #16]
 801c43e:	e885 0003 	stmia.w	r5, {r0, r1}
 801c442:	4591      	cmp	r9, r2
 801c444:	d025      	beq.n	801c492 <calc_new_geometry+0x12c2>
 801c446:	f8da 200c 	ldr.w	r2, [sl, #12]
 801c44a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801c44c:	0088      	lsls	r0, r1, #2
 801c44e:	f100 0c04 	add.w	ip, r0, #4
 801c452:	4494      	add	ip, r2
 801c454:	4410      	add	r0, r2
 801c456:	1c4a      	adds	r2, r1, #1
 801c458:	920f      	str	r2, [sp, #60]	@ 0x3c
 801c45a:	3102      	adds	r1, #2
 801c45c:	ed90 7a00 	vldr	s14, [r0]
 801c460:	2e00      	cmp	r6, #0
 801c462:	d19f      	bne.n	801c3a4 <calc_new_geometry+0x11d4>
 801c464:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
 801c468:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c46a:	eddc 7a00 	vldr	s15, [ip]
 801c46e:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
 801c472:	e7a6      	b.n	801c3c2 <calc_new_geometry+0x11f2>
 801c474:	ed9d 1a1d 	vldr	s2, [sp, #116]	@ 0x74
 801c478:	eddd 1a1e 	vldr	s3, [sp, #120]	@ 0x78
 801c47c:	e6dd      	b.n	801c23a <calc_new_geometry+0x106a>
 801c47e:	eef0 ba48 	vmov.f32	s23, s16
 801c482:	e711      	b.n	801c2a8 <calc_new_geometry+0x10d8>
 801c484:	eef4 7aea 	vcmpe.f32	s15, s21
 801c488:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c48c:	f6bf ada8 	bge.w	801bfe0 <calc_new_geometry+0xe10>
 801c490:	e745      	b.n	801c31e <calc_new_geometry+0x114e>
 801c492:	9e05      	ldr	r6, [sp, #20]
 801c494:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 801c498:	f7ff b9d6 	b.w	801b848 <calc_new_geometry+0x678>
 801c49c:	ed9d 0a11 	vldr	s0, [sp, #68]	@ 0x44
 801c4a0:	eddd 0a12 	vldr	s1, [sp, #72]	@ 0x48
 801c4a4:	f7fc fed2 	bl	801924c <calc_move_geometry>
 801c4a8:	4601      	mov	r1, r0
 801c4aa:	2800      	cmp	r0, #0
 801c4ac:	f47f adec 	bne.w	801c088 <calc_new_geometry+0xeb8>
 801c4b0:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
 801c4b4:	ea4f 0368 	mov.w	r3, r8, asr #1
 801c4b8:	2b00      	cmp	r3, #0
 801c4ba:	9304      	str	r3, [sp, #16]
 801c4bc:	f88d 0038 	strb.w	r0, [sp, #56]	@ 0x38
 801c4c0:	f77f ab63 	ble.w	801bb8a <calc_new_geometry+0x9ba>
 801c4c4:	f8da 200c 	ldr.w	r2, [sl, #12]
 801c4c8:	e764      	b.n	801c394 <calc_new_geometry+0x11c4>
 801c4ca:	ee27 0a87 	vmul.f32	s0, s15, s14
 801c4ce:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801c4d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c4d6:	eef1 8ac0 	vsqrt.f32	s17, s0
 801c4da:	d41c      	bmi.n	801c516 <calc_new_geometry+0x1346>
 801c4dc:	ee6c caa8 	vmul.f32	s25, s25, s17
 801c4e0:	ee6d daa8 	vmul.f32	s27, s27, s17
 801c4e4:	ee8c 6a2c 	vdiv.f32	s12, s24, s25
 801c4e8:	ee88 5a2d 	vdiv.f32	s10, s16, s27
 801c4ec:	eecb 5aac 	vdiv.f32	s11, s23, s25
 801c4f0:	eecf 6a2d 	vdiv.f32	s13, s30, s27
 801c4f4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801c4f8:	ee76 4a25 	vadd.f32	s9, s12, s11
 801c4fc:	ee36 7a85 	vadd.f32	s14, s13, s10
 801c500:	ee64 4aa7 	vmul.f32	s9, s9, s15
 801c504:	ee67 fa27 	vmul.f32	s31, s14, s15
 801c508:	ee76 8a65 	vsub.f32	s17, s12, s11
 801c50c:	ee76 eac5 	vsub.f32	s29, s13, s10
 801c510:	eeb0 8a49 	vmov.f32	s16, s18
 801c514:	e51a      	b.n	801bf4c <calc_new_geometry+0xd7c>
 801c516:	f014 fe8b 	bl	8031230 <sqrtf>
 801c51a:	e7df      	b.n	801c4dc <calc_new_geometry+0x130c>
 801c51c:	edcd 4a06 	vstr	s9, [sp, #24]
 801c520:	ed8d 5a05 	vstr	s10, [sp, #20]
 801c524:	edcd 5a04 	vstr	s11, [sp, #16]
 801c528:	ed8d 6a03 	vstr	s12, [sp, #12]
 801c52c:	edcd 6a02 	vstr	s13, [sp, #8]
 801c530:	f014 fe7e 	bl	8031230 <sqrtf>
 801c534:	eddd 4a06 	vldr	s9, [sp, #24]
 801c538:	ed9d 5a05 	vldr	s10, [sp, #20]
 801c53c:	eddd 5a04 	vldr	s11, [sp, #16]
 801c540:	ed9d 6a03 	vldr	s12, [sp, #12]
 801c544:	eddd 6a02 	vldr	s13, [sp, #8]
 801c548:	e500      	b.n	801bf4c <calc_new_geometry+0xd7c>
 801c54a:	bf00      	nop
 801c54c:	20083180 	.word	0x20083180
 801c550:	20083184 	.word	0x20083184
 801c554:	20083154 	.word	0x20083154
 801c558:	43b40000 	.word	0x43b40000

0801c55c <calc_clipped_path>:
 801c55c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c560:	2600      	movs	r6, #0
 801c562:	4c3b      	ldr	r4, [pc, #236]	@ (801c650 <calc_clipped_path+0xf4>)
 801c564:	4605      	mov	r5, r0
 801c566:	6026      	str	r6, [r4, #0]
 801c568:	4617      	mov	r7, r2
 801c56a:	e9dd 6808 	ldrd	r6, r8, [sp, #32]
 801c56e:	469a      	mov	sl, r3
 801c570:	2b00      	cmp	r3, #0
 801c572:	d04f      	beq.n	801c614 <calc_clipped_path+0xb8>
 801c574:	f1b8 0f00 	cmp.w	r8, #0
 801c578:	bf14      	ite	ne
 801c57a:	f04f 0900 	movne.w	r9, #0
 801c57e:	f04f 0902 	moveq.w	r9, #2
 801c582:	edd1 7a35 	vldr	s15, [r1, #212]	@ 0xd4
 801c586:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801c58a:	eddf 6a32 	vldr	s13, [pc, #200]	@ 801c654 <calc_clipped_path+0xf8>
 801c58e:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c592:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 801c658 <calc_clipped_path+0xfc>
 801c596:	ee77 6ae6 	vsub.f32	s13, s15, s13
 801c59a:	ee77 7a67 	vsub.f32	s15, s14, s15
 801c59e:	4a2f      	ldr	r2, [pc, #188]	@ (801c65c <calc_clipped_path+0x100>)
 801c5a0:	4b2f      	ldr	r3, [pc, #188]	@ (801c660 <calc_clipped_path+0x104>)
 801c5a2:	edc2 6a00 	vstr	s13, [r2]
 801c5a6:	edc3 7a00 	vstr	s15, [r3]
 801c5aa:	f000 f9d1 	bl	801c950 <nema_vg_get_context>
 801c5ae:	f8d5 1084 	ldr.w	r1, [r5, #132]	@ 0x84
 801c5b2:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801c5b4:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 801c670 <calc_clipped_path+0x114>
 801c5b8:	ea41 0203 	orr.w	r2, r1, r3
 801c5bc:	4c29      	ldr	r4, [pc, #164]	@ (801c664 <calc_clipped_path+0x108>)
 801c5be:	f002 0201 	and.w	r2, r2, #1
 801c5c2:	f8cc 0000 	str.w	r0, [ip]
 801c5c6:	7022      	strb	r2, [r4, #0]
 801c5c8:	b132      	cbz	r2, 801c5d8 <calc_clipped_path+0x7c>
 801c5ca:	07dc      	lsls	r4, r3, #31
 801c5cc:	d42b      	bmi.n	801c626 <calc_clipped_path+0xca>
 801c5ce:	07cb      	lsls	r3, r1, #31
 801c5d0:	d438      	bmi.n	801c644 <calc_clipped_path+0xe8>
 801c5d2:	4825      	ldr	r0, [pc, #148]	@ (801c668 <calc_clipped_path+0x10c>)
 801c5d4:	f7f5 f99c 	bl	8011910 <nema_mat3x3_load_identity>
 801c5d8:	2200      	movs	r2, #0
 801c5da:	2100      	movs	r1, #0
 801c5dc:	4c23      	ldr	r4, [pc, #140]	@ (801c66c <calc_clipped_path+0x110>)
 801c5de:	683b      	ldr	r3, [r7, #0]
 801c5e0:	e9c4 2204 	strd	r2, r2, [r4, #16]
 801c5e4:	f884 2020 	strb.w	r2, [r4, #32]
 801c5e8:	6262      	str	r2, [r4, #36]	@ 0x24
 801c5ea:	6832      	ldr	r2, [r6, #0]
 801c5ec:	4628      	mov	r0, r5
 801c5ee:	f8c4 a004 	str.w	sl, [r4, #4]
 801c5f2:	f8c4 800c 	str.w	r8, [r4, #12]
 801c5f6:	6023      	str	r3, [r4, #0]
 801c5f8:	60a2      	str	r2, [r4, #8]
 801c5fa:	61a1      	str	r1, [r4, #24]
 801c5fc:	61e1      	str	r1, [r4, #28]
 801c5fe:	f7fe fde7 	bl	801b1d0 <calc_new_geometry>
 801c602:	4605      	mov	r5, r0
 801c604:	b948      	cbnz	r0, 801c61a <calc_clipped_path+0xbe>
 801c606:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 801c60a:	603a      	str	r2, [r7, #0]
 801c60c:	6033      	str	r3, [r6, #0]
 801c60e:	4648      	mov	r0, r9
 801c610:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c614:	f04f 0902 	mov.w	r9, #2
 801c618:	e7b3      	b.n	801c582 <calc_clipped_path+0x26>
 801c61a:	46a9      	mov	r9, r5
 801c61c:	f000 fa2a 	bl	801ca74 <nema_vg_set_error>
 801c620:	4648      	mov	r0, r9
 801c622:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c626:	f100 014c 	add.w	r1, r0, #76	@ 0x4c
 801c62a:	480f      	ldr	r0, [pc, #60]	@ (801c668 <calc_clipped_path+0x10c>)
 801c62c:	f7f5 f97e 	bl	801192c <nema_mat3x3_copy>
 801c630:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 801c634:	07da      	lsls	r2, r3, #31
 801c636:	d5cf      	bpl.n	801c5d8 <calc_clipped_path+0x7c>
 801c638:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c63c:	480a      	ldr	r0, [pc, #40]	@ (801c668 <calc_clipped_path+0x10c>)
 801c63e:	f7f5 f9c1 	bl	80119c4 <nema_mat3x3_mul>
 801c642:	e7c9      	b.n	801c5d8 <calc_clipped_path+0x7c>
 801c644:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c648:	4807      	ldr	r0, [pc, #28]	@ (801c668 <calc_clipped_path+0x10c>)
 801c64a:	f7f5 f96f 	bl	801192c <nema_mat3x3_copy>
 801c64e:	e7c3      	b.n	801c5d8 <calc_clipped_path+0x7c>
 801c650:	2008314c 	.word	0x2008314c
 801c654:	43fd8000 	.word	0x43fd8000
 801c658:	44bf6000 	.word	0x44bf6000
 801c65c:	20000144 	.word	0x20000144
 801c660:	20000140 	.word	0x20000140
 801c664:	20083180 	.word	0x20083180
 801c668:	20083184 	.word	0x20083184
 801c66c:	20083154 	.word	0x20083154
 801c670:	20083150 	.word	0x20083150

0801c674 <draw_clipped_path>:
 801c674:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c678:	b0b2      	sub	sp, #200	@ 0xc8
 801c67a:	460e      	mov	r6, r1
 801c67c:	4605      	mov	r5, r0
 801c67e:	f000 f967 	bl	801c950 <nema_vg_get_context>
 801c682:	4f84      	ldr	r7, [pc, #528]	@ (801c894 <draw_clipped_path+0x220>)
 801c684:	6842      	ldr	r2, [r0, #4]
 801c686:	e9d0 130d 	ldrd	r1, r3, [r0, #52]	@ 0x34
 801c68a:	089b      	lsrs	r3, r3, #2
 801c68c:	9307      	str	r3, [sp, #28]
 801c68e:	9106      	str	r1, [sp, #24]
 801c690:	6038      	str	r0, [r7, #0]
 801c692:	2a00      	cmp	r2, #0
 801c694:	d056      	beq.n	801c744 <draw_clipped_path+0xd0>
 801c696:	6881      	ldr	r1, [r0, #8]
 801c698:	2900      	cmp	r1, #0
 801c69a:	d053      	beq.n	801c744 <draw_clipped_path+0xd0>
 801c69c:	6889      	ldr	r1, [r1, #8]
 801c69e:	6893      	ldr	r3, [r2, #8]
 801c6a0:	aa07      	add	r2, sp, #28
 801c6a2:	e9cd 2100 	strd	r2, r1, [sp]
 801c6a6:	4628      	mov	r0, r5
 801c6a8:	aa06      	add	r2, sp, #24
 801c6aa:	4631      	mov	r1, r6
 801c6ac:	f7ff ff56 	bl	801c55c <calc_clipped_path>
 801c6b0:	4b79      	ldr	r3, [pc, #484]	@ (801c898 <draw_clipped_path+0x224>)
 801c6b2:	4680      	mov	r8, r0
 801c6b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c6b6:	683c      	ldr	r4, [r7, #0]
 801c6b8:	2b02      	cmp	r3, #2
 801c6ba:	d002      	beq.n	801c6c2 <draw_clipped_path+0x4e>
 801c6bc:	2800      	cmp	r0, #0
 801c6be:	f000 80b4 	beq.w	801c82a <draw_clipped_path+0x1b6>
 801c6c2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801c6c4:	06db      	lsls	r3, r3, #27
 801c6c6:	f140 8087 	bpl.w	801c7d8 <draw_clipped_path+0x164>
 801c6ca:	e9dd 2a06 	ldrd	r2, sl, [sp, #24]
 801c6ce:	ac02      	add	r4, sp, #8
 801c6d0:	4620      	mov	r0, r4
 801c6d2:	2100      	movs	r1, #0
 801c6d4:	f10d 0920 	add.w	r9, sp, #32
 801c6d8:	f7e6 fbc2 	bl	8002e60 <nema_buffer_create_pool>
 801c6dc:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801c6e0:	e889 000f 	stmia.w	r9, {r0, r1, r2, r3}
 801c6e4:	4648      	mov	r0, r9
 801c6e6:	f7e6 fbdd 	bl	8002ea4 <nema_buffer_map>
 801c6ea:	f10d 0830 	add.w	r8, sp, #48	@ 0x30
 801c6ee:	ea4f 028a 	mov.w	r2, sl, lsl #2
 801c6f2:	4620      	mov	r0, r4
 801c6f4:	2100      	movs	r1, #0
 801c6f6:	f7e6 fbb3 	bl	8002e60 <nema_buffer_create_pool>
 801c6fa:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801c6fe:	e888 000f 	stmia.w	r8, {r0, r1, r2, r3}
 801c702:	4640      	mov	r0, r8
 801c704:	f7e6 fbce 	bl	8002ea4 <nema_buffer_map>
 801c708:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c70a:	2b00      	cmp	r3, #0
 801c70c:	d076      	beq.n	801c7fc <draw_clipped_path+0x188>
 801c70e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801c710:	2a00      	cmp	r2, #0
 801c712:	d070      	beq.n	801c7f6 <draw_clipped_path+0x182>
 801c714:	a907      	add	r1, sp, #28
 801c716:	e9cd 1200 	strd	r1, r2, [sp]
 801c71a:	4628      	mov	r0, r5
 801c71c:	aa06      	add	r2, sp, #24
 801c71e:	4631      	mov	r1, r6
 801c720:	f7ff ff1c 	bl	801c55c <calc_clipped_path>
 801c724:	4604      	mov	r4, r0
 801c726:	2800      	cmp	r0, #0
 801c728:	f000 809a 	beq.w	801c860 <draw_clipped_path+0x1ec>
 801c72c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c72e:	b113      	cbz	r3, 801c736 <draw_clipped_path+0xc2>
 801c730:	4648      	mov	r0, r9
 801c732:	f7e6 fbb9 	bl	8002ea8 <nema_buffer_destroy>
 801c736:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c738:	2b00      	cmp	r3, #0
 801c73a:	d04e      	beq.n	801c7da <draw_clipped_path+0x166>
 801c73c:	4640      	mov	r0, r8
 801c73e:	f7e6 fbb3 	bl	8002ea8 <nema_buffer_destroy>
 801c742:	e04a      	b.n	801c7da <draw_clipped_path+0x166>
 801c744:	edd6 7a35 	vldr	s15, [r6, #212]	@ 0xd4
 801c748:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801c74c:	eddf 6a53 	vldr	s13, [pc, #332]	@ 801c89c <draw_clipped_path+0x228>
 801c750:	ee67 7a87 	vmul.f32	s15, s15, s14
 801c754:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 801c8a0 <draw_clipped_path+0x22c>
 801c758:	ee77 6ae6 	vsub.f32	s13, s15, s13
 801c75c:	2201      	movs	r2, #1
 801c75e:	ee77 7a67 	vsub.f32	s15, s14, s15
 801c762:	4950      	ldr	r1, [pc, #320]	@ (801c8a4 <draw_clipped_path+0x230>)
 801c764:	4b50      	ldr	r3, [pc, #320]	@ (801c8a8 <draw_clipped_path+0x234>)
 801c766:	4851      	ldr	r0, [pc, #324]	@ (801c8ac <draw_clipped_path+0x238>)
 801c768:	601a      	str	r2, [r3, #0]
 801c76a:	edc1 7a00 	vstr	s15, [r1]
 801c76e:	edc0 6a00 	vstr	s13, [r0]
 801c772:	f000 f8ed 	bl	801c950 <nema_vg_get_context>
 801c776:	f8d5 1084 	ldr.w	r1, [r5, #132]	@ 0x84
 801c77a:	6b02      	ldr	r2, [r0, #48]	@ 0x30
 801c77c:	4c4c      	ldr	r4, [pc, #304]	@ (801c8b0 <draw_clipped_path+0x23c>)
 801c77e:	ea41 0302 	orr.w	r3, r1, r2
 801c782:	f003 0301 	and.w	r3, r3, #1
 801c786:	6038      	str	r0, [r7, #0]
 801c788:	7023      	strb	r3, [r4, #0]
 801c78a:	b133      	cbz	r3, 801c79a <draw_clipped_path+0x126>
 801c78c:	07d4      	lsls	r4, r2, #31
 801c78e:	d43d      	bmi.n	801c80c <draw_clipped_path+0x198>
 801c790:	07ca      	lsls	r2, r1, #31
 801c792:	d42a      	bmi.n	801c7ea <draw_clipped_path+0x176>
 801c794:	4847      	ldr	r0, [pc, #284]	@ (801c8b4 <draw_clipped_path+0x240>)
 801c796:	f7f5 f8bb 	bl	8011910 <nema_mat3x3_load_identity>
 801c79a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c79e:	2300      	movs	r3, #0
 801c7a0:	2200      	movs	r2, #0
 801c7a2:	4c3d      	ldr	r4, [pc, #244]	@ (801c898 <draw_clipped_path+0x224>)
 801c7a4:	9306      	str	r3, [sp, #24]
 801c7a6:	6020      	str	r0, [r4, #0]
 801c7a8:	4628      	mov	r0, r5
 801c7aa:	6063      	str	r3, [r4, #4]
 801c7ac:	e9c4 3303 	strd	r3, r3, [r4, #12]
 801c7b0:	6163      	str	r3, [r4, #20]
 801c7b2:	f884 3020 	strb.w	r3, [r4, #32]
 801c7b6:	6263      	str	r3, [r4, #36]	@ 0x24
 801c7b8:	60a1      	str	r1, [r4, #8]
 801c7ba:	9307      	str	r3, [sp, #28]
 801c7bc:	61a2      	str	r2, [r4, #24]
 801c7be:	61e2      	str	r2, [r4, #28]
 801c7c0:	f7fe fd06 	bl	801b1d0 <calc_new_geometry>
 801c7c4:	b968      	cbnz	r0, 801c7e2 <draw_clipped_path+0x16e>
 801c7c6:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
 801c7ca:	683c      	ldr	r4, [r7, #0]
 801c7cc:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801c7d0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801c7d2:	06db      	lsls	r3, r3, #27
 801c7d4:	f53f af79 	bmi.w	801c6ca <draw_clipped_path+0x56>
 801c7d8:	2402      	movs	r4, #2
 801c7da:	4620      	mov	r0, r4
 801c7dc:	b032      	add	sp, #200	@ 0xc8
 801c7de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c7e2:	f000 f947 	bl	801ca74 <nema_vg_set_error>
 801c7e6:	683c      	ldr	r4, [r7, #0]
 801c7e8:	e76b      	b.n	801c6c2 <draw_clipped_path+0x4e>
 801c7ea:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c7ee:	4831      	ldr	r0, [pc, #196]	@ (801c8b4 <draw_clipped_path+0x240>)
 801c7f0:	f7f5 f89c 	bl	801192c <nema_mat3x3_copy>
 801c7f4:	e7d1      	b.n	801c79a <draw_clipped_path+0x126>
 801c7f6:	4648      	mov	r0, r9
 801c7f8:	f7e6 fb56 	bl	8002ea8 <nema_buffer_destroy>
 801c7fc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c7fe:	2b00      	cmp	r3, #0
 801c800:	d0ea      	beq.n	801c7d8 <draw_clipped_path+0x164>
 801c802:	4640      	mov	r0, r8
 801c804:	f7e6 fb50 	bl	8002ea8 <nema_buffer_destroy>
 801c808:	2402      	movs	r4, #2
 801c80a:	e7e6      	b.n	801c7da <draw_clipped_path+0x166>
 801c80c:	f100 014c 	add.w	r1, r0, #76	@ 0x4c
 801c810:	4828      	ldr	r0, [pc, #160]	@ (801c8b4 <draw_clipped_path+0x240>)
 801c812:	f7f5 f88b 	bl	801192c <nema_mat3x3_copy>
 801c816:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 801c81a:	07d9      	lsls	r1, r3, #31
 801c81c:	d5bd      	bpl.n	801c79a <draw_clipped_path+0x126>
 801c81e:	f105 0160 	add.w	r1, r5, #96	@ 0x60
 801c822:	4824      	ldr	r0, [pc, #144]	@ (801c8b4 <draw_clipped_path+0x240>)
 801c824:	f7f5 f8ce 	bl	80119c4 <nema_mat3x3_mul>
 801c828:	e7b7      	b.n	801c79a <draw_clipped_path+0x126>
 801c82a:	4629      	mov	r1, r5
 801c82c:	2288      	movs	r2, #136	@ 0x88
 801c82e:	a810      	add	r0, sp, #64	@ 0x40
 801c830:	f016 f94b 	bl	8032aca <memcpy>
 801c834:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 801c838:	6898      	ldr	r0, [r3, #8]
 801c83a:	6892      	ldr	r2, [r2, #8]
 801c83c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801c840:	9000      	str	r0, [sp, #0]
 801c842:	a810      	add	r0, sp, #64	@ 0x40
 801c844:	f000 fe54 	bl	801d4f0 <nema_vg_path_set_shape>
 801c848:	2201      	movs	r2, #1
 801c84a:	683b      	ldr	r3, [r7, #0]
 801c84c:	a810      	add	r0, sp, #64	@ 0x40
 801c84e:	779a      	strb	r2, [r3, #30]
 801c850:	4631      	mov	r1, r6
 801c852:	f7fb fde5 	bl	8018420 <nema_vg_draw_path>
 801c856:	683b      	ldr	r3, [r7, #0]
 801c858:	4604      	mov	r4, r0
 801c85a:	f883 801e 	strb.w	r8, [r3, #30]
 801c85e:	e7bc      	b.n	801c7da <draw_clipped_path+0x166>
 801c860:	4629      	mov	r1, r5
 801c862:	2288      	movs	r2, #136	@ 0x88
 801c864:	a810      	add	r0, sp, #64	@ 0x40
 801c866:	f016 f930 	bl	8032aca <memcpy>
 801c86a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c86c:	9b07      	ldr	r3, [sp, #28]
 801c86e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c870:	9906      	ldr	r1, [sp, #24]
 801c872:	a810      	add	r0, sp, #64	@ 0x40
 801c874:	9400      	str	r4, [sp, #0]
 801c876:	f000 fe3b 	bl	801d4f0 <nema_vg_path_set_shape>
 801c87a:	2201      	movs	r2, #1
 801c87c:	683b      	ldr	r3, [r7, #0]
 801c87e:	a810      	add	r0, sp, #64	@ 0x40
 801c880:	779a      	strb	r2, [r3, #30]
 801c882:	4631      	mov	r1, r6
 801c884:	f7fb fdcc 	bl	8018420 <nema_vg_draw_path>
 801c888:	2200      	movs	r2, #0
 801c88a:	683b      	ldr	r3, [r7, #0]
 801c88c:	4604      	mov	r4, r0
 801c88e:	779a      	strb	r2, [r3, #30]
 801c890:	e74c      	b.n	801c72c <draw_clipped_path+0xb8>
 801c892:	bf00      	nop
 801c894:	20083150 	.word	0x20083150
 801c898:	20083154 	.word	0x20083154
 801c89c:	43fd8000 	.word	0x43fd8000
 801c8a0:	44bf6000 	.word	0x44bf6000
 801c8a4:	20000140 	.word	0x20000140
 801c8a8:	2008314c 	.word	0x2008314c
 801c8ac:	20000144 	.word	0x20000144
 801c8b0:	20083180 	.word	0x20083180
 801c8b4:	20083184 	.word	0x20083184

0801c8b8 <context_reset>:
 801c8b8:	b570      	push	{r4, r5, r6, lr}
 801c8ba:	4c23      	ldr	r4, [pc, #140]	@ (801c948 <context_reset+0x90>)
 801c8bc:	6820      	ldr	r0, [r4, #0]
 801c8be:	b110      	cbz	r0, 801c8c6 <context_reset+0xe>
 801c8c0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801c8c2:	069b      	lsls	r3, r3, #26
 801c8c4:	d43a      	bmi.n	801c93c <context_reset+0x84>
 801c8c6:	2300      	movs	r3, #0
 801c8c8:	6962      	ldr	r2, [r4, #20]
 801c8ca:	e9c4 3300 	strd	r3, r3, [r4]
 801c8ce:	60a3      	str	r3, [r4, #8]
 801c8d0:	b112      	cbz	r2, 801c8d8 <context_reset+0x20>
 801c8d2:	481e      	ldr	r0, [pc, #120]	@ (801c94c <context_reset+0x94>)
 801c8d4:	f7e6 fae8 	bl	8002ea8 <nema_buffer_destroy>
 801c8d8:	2300      	movs	r3, #0
 801c8da:	2200      	movs	r2, #0
 801c8dc:	2602      	movs	r6, #2
 801c8de:	f240 5501 	movw	r5, #1281	@ 0x501
 801c8e2:	f04f 7000 	mov.w	r0, #33554432	@ 0x2000000
 801c8e6:	f04f 61f0 	mov.w	r1, #125829120	@ 0x7800000
 801c8ea:	e9c4 2203 	strd	r2, r2, [r4, #12]
 801c8ee:	e9c4 2205 	strd	r2, r2, [r4, #20]
 801c8f2:	6222      	str	r2, [r4, #32]
 801c8f4:	e9c4 220c 	strd	r2, r2, [r4, #48]	@ 0x30
 801c8f8:	e9c4 220e 	strd	r2, r2, [r4, #56]	@ 0x38
 801c8fc:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
 801c900:	61e6      	str	r6, [r4, #28]
 801c902:	e9c4 5009 	strd	r5, r0, [r4, #36]	@ 0x24
 801c906:	62e1      	str	r1, [r4, #44]	@ 0x2c
 801c908:	6423      	str	r3, [r4, #64]	@ 0x40
 801c90a:	6463      	str	r3, [r4, #68]	@ 0x44
 801c90c:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801c90e:	6723      	str	r3, [r4, #112]	@ 0x70
 801c910:	6523      	str	r3, [r4, #80]	@ 0x50
 801c912:	6763      	str	r3, [r4, #116]	@ 0x74
 801c914:	6563      	str	r3, [r4, #84]	@ 0x54
 801c916:	67a3      	str	r3, [r4, #120]	@ 0x78
 801c918:	65a3      	str	r3, [r4, #88]	@ 0x58
 801c91a:	67e3      	str	r3, [r4, #124]	@ 0x7c
 801c91c:	65e3      	str	r3, [r4, #92]	@ 0x5c
 801c91e:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
 801c922:	6623      	str	r3, [r4, #96]	@ 0x60
 801c924:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 801c928:	6663      	str	r3, [r4, #100]	@ 0x64
 801c92a:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 801c92e:	66a3      	str	r3, [r4, #104]	@ 0x68
 801c930:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 801c934:	66e3      	str	r3, [r4, #108]	@ 0x6c
 801c936:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 801c93a:	bd70      	pop	{r4, r5, r6, pc}
 801c93c:	6883      	ldr	r3, [r0, #8]
 801c93e:	2b00      	cmp	r3, #0
 801c940:	d0c1      	beq.n	801c8c6 <context_reset+0xe>
 801c942:	f7e6 fab1 	bl	8002ea8 <nema_buffer_destroy>
 801c946:	e7be      	b.n	801c8c6 <context_reset+0xe>
 801c948:	20000148 	.word	0x20000148
 801c94c:	20000154 	.word	0x20000154

0801c950 <nema_vg_get_context>:
 801c950:	4800      	ldr	r0, [pc, #0]	@ (801c954 <nema_vg_get_context+0x4>)
 801c952:	4770      	bx	lr
 801c954:	20000148 	.word	0x20000148

0801c958 <stencil_buffer_create>:
 801c958:	b538      	push	{r3, r4, r5, lr}
 801c95a:	4605      	mov	r5, r0
 801c95c:	1cc8      	adds	r0, r1, #3
 801c95e:	bf48      	it	mi
 801c960:	1d88      	addmi	r0, r1, #6
 801c962:	1cd4      	adds	r4, r2, #3
 801c964:	bf48      	it	mi
 801c966:	1d94      	addmi	r4, r2, #6
 801c968:	1080      	asrs	r0, r0, #2
 801c96a:	0080      	lsls	r0, r0, #2
 801c96c:	f024 0203 	bic.w	r2, r4, #3
 801c970:	fb02 f200 	mul.w	r2, r2, r0
 801c974:	4619      	mov	r1, r3
 801c976:	4628      	mov	r0, r5
 801c978:	f7e6 fa72 	bl	8002e60 <nema_buffer_create_pool>
 801c97c:	4628      	mov	r0, r5
 801c97e:	bd38      	pop	{r3, r4, r5, pc}

0801c980 <stencil_buffer_set>:
 801c980:	b082      	sub	sp, #8
 801c982:	b470      	push	{r4, r5, r6}
 801c984:	4606      	mov	r6, r0
 801c986:	460d      	mov	r5, r1
 801c988:	a803      	add	r0, sp, #12
 801c98a:	e880 000c 	stmia.w	r0, {r2, r3}
 801c98e:	4c15      	ldr	r4, [pc, #84]	@ (801c9e4 <stencil_buffer_set+0x64>)
 801c990:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 801c992:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801c996:	1cf3      	adds	r3, r6, #3
 801c998:	bf48      	it	mi
 801c99a:	1db3      	addmi	r3, r6, #6
 801c99c:	1cea      	adds	r2, r5, #3
 801c99e:	bf48      	it	mi
 801c9a0:	1daa      	addmi	r2, r5, #6
 801c9a2:	f022 0203 	bic.w	r2, r2, #3
 801c9a6:	ee07 2a90 	vmov	s15, r2
 801c9aa:	f023 0303 	bic.w	r3, r3, #3
 801c9ae:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801c9b2:	ee07 3a90 	vmov	s15, r3
 801c9b6:	2100      	movs	r1, #0
 801c9b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c9bc:	61a1      	str	r1, [r4, #24]
 801c9be:	61e1      	str	r1, [r4, #28]
 801c9c0:	6261      	str	r1, [r4, #36]	@ 0x24
 801c9c2:	6321      	str	r1, [r4, #48]	@ 0x30
 801c9c4:	4908      	ldr	r1, [pc, #32]	@ (801c9e8 <stencil_buffer_set+0x68>)
 801c9c6:	ed84 7a0b 	vstr	s14, [r4, #44]	@ 0x2c
 801c9ca:	600c      	str	r4, [r1, #0]
 801c9cc:	ed84 7a0d 	vstr	s14, [r4, #52]	@ 0x34
 801c9d0:	edc4 7a08 	vstr	s15, [r4, #32]
 801c9d4:	edc4 7a0a 	vstr	s15, [r4, #40]	@ 0x28
 801c9d8:	e9c4 3204 	strd	r3, r2, [r4, #16]
 801c9dc:	bc70      	pop	{r4, r5, r6}
 801c9de:	b002      	add	sp, #8
 801c9e0:	4770      	bx	lr
 801c9e2:	bf00      	nop
 801c9e4:	2008329c 	.word	0x2008329c
 801c9e8:	20000148 	.word	0x20000148

0801c9ec <nema_vg_get_stencil>:
 801c9ec:	4b01      	ldr	r3, [pc, #4]	@ (801c9f4 <nema_vg_get_stencil+0x8>)
 801c9ee:	6818      	ldr	r0, [r3, #0]
 801c9f0:	4770      	bx	lr
 801c9f2:	bf00      	nop
 801c9f4:	20000148 	.word	0x20000148

0801c9f8 <lut_buffer_create>:
 801c9f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c9fa:	4d1a      	ldr	r5, [pc, #104]	@ (801ca64 <lut_buffer_create+0x6c>)
 801c9fc:	b085      	sub	sp, #20
 801c9fe:	69ac      	ldr	r4, [r5, #24]
 801ca00:	b10c      	cbz	r4, 801ca06 <lut_buffer_create+0xe>
 801ca02:	b005      	add	sp, #20
 801ca04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ca06:	466e      	mov	r6, sp
 801ca08:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801ca0c:	4630      	mov	r0, r6
 801ca0e:	4621      	mov	r1, r4
 801ca10:	f7e6 fa26 	bl	8002e60 <nema_buffer_create_pool>
 801ca14:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 801ca18:	f105 060c 	add.w	r6, r5, #12
 801ca1c:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 801ca20:	4627      	mov	r7, r4
 801ca22:	4623      	mov	r3, r4
 801ca24:	696d      	ldr	r5, [r5, #20]
 801ca26:	26ff      	movs	r6, #255	@ 0xff
 801ca28:	e008      	b.n	801ca3c <lut_buffer_create+0x44>
 801ca2a:	2880      	cmp	r0, #128	@ 0x80
 801ca2c:	f1c4 0100 	rsb	r1, r4, #0
 801ca30:	d016      	beq.n	801ca60 <lut_buffer_create+0x68>
 801ca32:	bfcc      	ite	gt
 801ca34:	b2e1      	uxtbgt	r1, r4
 801ca36:	b2c9      	uxtble	r1, r1
 801ca38:	54a9      	strb	r1, [r5, r2]
 801ca3a:	3410      	adds	r4, #16
 801ca3c:	ea44 1213 	orr.w	r2, r4, r3, lsr #4
 801ca40:	3301      	adds	r3, #1
 801ca42:	f1a3 0172 	sub.w	r1, r3, #114	@ 0x72
 801ca46:	291e      	cmp	r1, #30
 801ca48:	f103 30ff 	add.w	r0, r3, #4294967295
 801ca4c:	b2d2      	uxtb	r2, r2
 801ca4e:	d9ec      	bls.n	801ca2a <lut_buffer_create+0x32>
 801ca50:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 801ca54:	54ae      	strb	r6, [r5, r2]
 801ca56:	d1f0      	bne.n	801ca3a <lut_buffer_create+0x42>
 801ca58:	f885 60ff 	strb.w	r6, [r5, #255]	@ 0xff
 801ca5c:	b005      	add	sp, #20
 801ca5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ca60:	54af      	strb	r7, [r5, r2]
 801ca62:	e7ea      	b.n	801ca3a <lut_buffer_create+0x42>
 801ca64:	20000148 	.word	0x20000148

0801ca68 <nema_vg_set_fill_rule>:
 801ca68:	4b01      	ldr	r3, [pc, #4]	@ (801ca70 <nema_vg_set_fill_rule+0x8>)
 801ca6a:	7718      	strb	r0, [r3, #28]
 801ca6c:	4770      	bx	lr
 801ca6e:	bf00      	nop
 801ca70:	20000148 	.word	0x20000148

0801ca74 <nema_vg_set_error>:
 801ca74:	4a02      	ldr	r2, [pc, #8]	@ (801ca80 <nema_vg_set_error+0xc>)
 801ca76:	6a13      	ldr	r3, [r2, #32]
 801ca78:	4318      	orrs	r0, r3
 801ca7a:	6210      	str	r0, [r2, #32]
 801ca7c:	4770      	bx	lr
 801ca7e:	bf00      	nop
 801ca80:	20000148 	.word	0x20000148

0801ca84 <nema_vg_set_blend>:
 801ca84:	4b01      	ldr	r3, [pc, #4]	@ (801ca8c <nema_vg_set_blend+0x8>)
 801ca86:	6258      	str	r0, [r3, #36]	@ 0x24
 801ca88:	4770      	bx	lr
 801ca8a:	bf00      	nop
 801ca8c:	20000148 	.word	0x20000148

0801ca90 <nema_vg_set_quality>:
 801ca90:	06c2      	lsls	r2, r0, #27
 801ca92:	bf4d      	iteet	mi
 801ca94:	2200      	movmi	r2, #0
 801ca96:	f04f 62f0 	movpl.w	r2, #125829120	@ 0x7800000
 801ca9a:	f04f 7100 	movpl.w	r1, #33554432	@ 0x2000000
 801ca9e:	4611      	movmi	r1, r2
 801caa0:	4b02      	ldr	r3, [pc, #8]	@ (801caac <nema_vg_set_quality+0x1c>)
 801caa2:	7758      	strb	r0, [r3, #29]
 801caa4:	e9c3 120a 	strd	r1, r2, [r3, #40]	@ 0x28
 801caa8:	4770      	bx	lr
 801caaa:	bf00      	nop
 801caac:	20000148 	.word	0x20000148

0801cab0 <nema_vg_set_global_matrix>:
 801cab0:	2800      	cmp	r0, #0
 801cab2:	d034      	beq.n	801cb1e <nema_vg_set_global_matrix+0x6e>
 801cab4:	b510      	push	{r4, lr}
 801cab6:	4c1e      	ldr	r4, [pc, #120]	@ (801cb30 <nema_vg_set_global_matrix+0x80>)
 801cab8:	6803      	ldr	r3, [r0, #0]
 801caba:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801cabc:	6803      	ldr	r3, [r0, #0]
 801cabe:	6723      	str	r3, [r4, #112]	@ 0x70
 801cac0:	6843      	ldr	r3, [r0, #4]
 801cac2:	6523      	str	r3, [r4, #80]	@ 0x50
 801cac4:	6843      	ldr	r3, [r0, #4]
 801cac6:	6763      	str	r3, [r4, #116]	@ 0x74
 801cac8:	6883      	ldr	r3, [r0, #8]
 801caca:	6563      	str	r3, [r4, #84]	@ 0x54
 801cacc:	6883      	ldr	r3, [r0, #8]
 801cace:	67a3      	str	r3, [r4, #120]	@ 0x78
 801cad0:	68c3      	ldr	r3, [r0, #12]
 801cad2:	65a3      	str	r3, [r4, #88]	@ 0x58
 801cad4:	68c3      	ldr	r3, [r0, #12]
 801cad6:	67e3      	str	r3, [r4, #124]	@ 0x7c
 801cad8:	6903      	ldr	r3, [r0, #16]
 801cada:	65e3      	str	r3, [r4, #92]	@ 0x5c
 801cadc:	6903      	ldr	r3, [r0, #16]
 801cade:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
 801cae2:	6943      	ldr	r3, [r0, #20]
 801cae4:	6623      	str	r3, [r4, #96]	@ 0x60
 801cae6:	6943      	ldr	r3, [r0, #20]
 801cae8:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 801caec:	6983      	ldr	r3, [r0, #24]
 801caee:	6663      	str	r3, [r4, #100]	@ 0x64
 801caf0:	6983      	ldr	r3, [r0, #24]
 801caf2:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 801caf6:	69c3      	ldr	r3, [r0, #28]
 801caf8:	66a3      	str	r3, [r4, #104]	@ 0x68
 801cafa:	69c3      	ldr	r3, [r0, #28]
 801cafc:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 801cb00:	6a03      	ldr	r3, [r0, #32]
 801cb02:	66e3      	str	r3, [r4, #108]	@ 0x6c
 801cb04:	6a03      	ldr	r3, [r0, #32]
 801cb06:	f104 0070 	add.w	r0, r4, #112	@ 0x70
 801cb0a:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 801cb0e:	f7f5 f84f 	bl	8011bb0 <nema_mat3x3_invert>
 801cb12:	b950      	cbnz	r0, 801cb2a <nema_vg_set_global_matrix+0x7a>
 801cb14:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801cb16:	f043 0301 	orr.w	r3, r3, #1
 801cb1a:	6323      	str	r3, [r4, #48]	@ 0x30
 801cb1c:	bd10      	pop	{r4, pc}
 801cb1e:	4a04      	ldr	r2, [pc, #16]	@ (801cb30 <nema_vg_set_global_matrix+0x80>)
 801cb20:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 801cb22:	f023 0301 	bic.w	r3, r3, #1
 801cb26:	6313      	str	r3, [r2, #48]	@ 0x30
 801cb28:	4770      	bx	lr
 801cb2a:	f44f 2080 	mov.w	r0, #262144	@ 0x40000
 801cb2e:	bd10      	pop	{r4, pc}
 801cb30:	20000148 	.word	0x20000148

0801cb34 <nema_vg_handle_large_coords>:
 801cb34:	4a08      	ldr	r2, [pc, #32]	@ (801cb58 <nema_vg_handle_large_coords+0x24>)
 801cb36:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 801cb38:	b130      	cbz	r0, 801cb48 <nema_vg_handle_large_coords+0x14>
 801cb3a:	f043 0304 	orr.w	r3, r3, #4
 801cb3e:	b939      	cbnz	r1, 801cb50 <nema_vg_handle_large_coords+0x1c>
 801cb40:	f023 0310 	bic.w	r3, r3, #16
 801cb44:	6313      	str	r3, [r2, #48]	@ 0x30
 801cb46:	4770      	bx	lr
 801cb48:	f023 0304 	bic.w	r3, r3, #4
 801cb4c:	2900      	cmp	r1, #0
 801cb4e:	d0f7      	beq.n	801cb40 <nema_vg_handle_large_coords+0xc>
 801cb50:	f043 0310 	orr.w	r3, r3, #16
 801cb54:	6313      	str	r3, [r2, #48]	@ 0x30
 801cb56:	4770      	bx	lr
 801cb58:	20000148 	.word	0x20000148

0801cb5c <nema_vg_paint_create>:
 801cb5c:	b538      	push	{r3, r4, r5, lr}
 801cb5e:	20e0      	movs	r0, #224	@ 0xe0
 801cb60:	f7e6 f8fc 	bl	8002d5c <nema_host_malloc>
 801cb64:	4604      	mov	r4, r0
 801cb66:	b1e8      	cbz	r0, 801cba4 <nema_vg_paint_create+0x48>
 801cb68:	2500      	movs	r5, #0
 801cb6a:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 801cb6e:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 801cb72:	f8c0 30d4 	str.w	r3, [r0, #212]	@ 0xd4
 801cb76:	f8c0 30d8 	str.w	r3, [r0, #216]	@ 0xd8
 801cb7a:	f880 502c 	strb.w	r5, [r0, #44]	@ 0x2c
 801cb7e:	f880 50dd 	strb.w	r5, [r0, #221]	@ 0xdd
 801cb82:	f880 50d0 	strb.w	r5, [r0, #208]	@ 0xd0
 801cb86:	e9c0 250c 	strd	r2, r5, [r0, #48]	@ 0x30
 801cb8a:	e9c0 5500 	strd	r5, r5, [r0]
 801cb8e:	3038      	adds	r0, #56	@ 0x38
 801cb90:	f7f4 febe 	bl	8011910 <nema_mat3x3_load_identity>
 801cb94:	f104 0008 	add.w	r0, r4, #8
 801cb98:	f7f4 feba 	bl	8011910 <nema_mat3x3_load_identity>
 801cb9c:	f884 50dc 	strb.w	r5, [r4, #220]	@ 0xdc
 801cba0:	4620      	mov	r0, r4
 801cba2:	bd38      	pop	{r3, r4, r5, pc}
 801cba4:	2001      	movs	r0, #1
 801cba6:	f7ff ff65 	bl	801ca74 <nema_vg_set_error>
 801cbaa:	4620      	mov	r0, r4
 801cbac:	bd38      	pop	{r3, r4, r5, pc}
 801cbae:	bf00      	nop

0801cbb0 <nema_vg_paint_set_type>:
 801cbb0:	b138      	cbz	r0, 801cbc2 <nema_vg_paint_set_type+0x12>
 801cbb2:	2904      	cmp	r1, #4
 801cbb4:	d802      	bhi.n	801cbbc <nema_vg_paint_set_type+0xc>
 801cbb6:	f880 10dd 	strb.w	r1, [r0, #221]	@ 0xdd
 801cbba:	4770      	bx	lr
 801cbbc:	2008      	movs	r0, #8
 801cbbe:	f7ff bf59 	b.w	801ca74 <nema_vg_set_error>
 801cbc2:	2001      	movs	r0, #1
 801cbc4:	f7ff bf56 	b.w	801ca74 <nema_vg_set_error>

0801cbc8 <nema_vg_paint_lock_tran_to_path>:
 801cbc8:	b160      	cbz	r0, 801cbe4 <nema_vg_paint_lock_tran_to_path+0x1c>
 801cbca:	f890 30dc 	ldrb.w	r3, [r0, #220]	@ 0xdc
 801cbce:	b121      	cbz	r1, 801cbda <nema_vg_paint_lock_tran_to_path+0x12>
 801cbd0:	f043 0301 	orr.w	r3, r3, #1
 801cbd4:	f880 30dc 	strb.w	r3, [r0, #220]	@ 0xdc
 801cbd8:	4770      	bx	lr
 801cbda:	f023 0301 	bic.w	r3, r3, #1
 801cbde:	f880 30dc 	strb.w	r3, [r0, #220]	@ 0xdc
 801cbe2:	4770      	bx	lr
 801cbe4:	2001      	movs	r0, #1
 801cbe6:	f7ff bf45 	b.w	801ca74 <nema_vg_set_error>
 801cbea:	bf00      	nop

0801cbec <nema_vg_grad_create>:
 801cbec:	b530      	push	{r4, r5, lr}
 801cbee:	2010      	movs	r0, #16
 801cbf0:	b085      	sub	sp, #20
 801cbf2:	f7e6 f8b3 	bl	8002d5c <nema_host_malloc>
 801cbf6:	466d      	mov	r5, sp
 801cbf8:	4604      	mov	r4, r0
 801cbfa:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801cbfe:	4628      	mov	r0, r5
 801cc00:	2100      	movs	r1, #0
 801cc02:	f7e6 f92d 	bl	8002e60 <nema_buffer_create_pool>
 801cc06:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801cc0a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801cc0e:	4620      	mov	r0, r4
 801cc10:	b005      	add	sp, #20
 801cc12:	bd30      	pop	{r4, r5, pc}

0801cc14 <nema_vg_grad_destroy>:
 801cc14:	b140      	cbz	r0, 801cc28 <nema_vg_grad_destroy+0x14>
 801cc16:	b510      	push	{r4, lr}
 801cc18:	4604      	mov	r4, r0
 801cc1a:	f7e6 f945 	bl	8002ea8 <nema_buffer_destroy>
 801cc1e:	4620      	mov	r0, r4
 801cc20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cc24:	f7e6 b898 	b.w	8002d58 <nema_host_free>
 801cc28:	4770      	bx	lr
 801cc2a:	bf00      	nop

0801cc2c <nema_vg_grad_set>:
 801cc2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc30:	ed2d 8b10 	vpush	{d8-d15}
 801cc34:	291f      	cmp	r1, #31
 801cc36:	b091      	sub	sp, #68	@ 0x44
 801cc38:	4680      	mov	r8, r0
 801cc3a:	4615      	mov	r5, r2
 801cc3c:	9304      	str	r3, [sp, #16]
 801cc3e:	f300 8293 	bgt.w	801d168 <nema_vg_grad_set+0x53c>
 801cc42:	460f      	mov	r7, r1
 801cc44:	2100      	movs	r1, #0
 801cc46:	2601      	movs	r6, #1
 801cc48:	460c      	mov	r4, r1
 801cc4a:	4608      	mov	r0, r1
 801cc4c:	4633      	mov	r3, r6
 801cc4e:	2240      	movs	r2, #64	@ 0x40
 801cc50:	f7f4 f88c 	bl	8010d6c <nema_set_clip_temp>
 801cc54:	f8d8 100c 	ldr.w	r1, [r8, #12]
 801cc58:	4633      	mov	r3, r6
 801cc5a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 801cc5e:	4630      	mov	r0, r6
 801cc60:	2240      	movs	r2, #64	@ 0x40
 801cc62:	9600      	str	r6, [sp, #0]
 801cc64:	f7f3 ff7e 	bl	8010b64 <nema_bind_tex>
 801cc68:	f04f 33ff 	mov.w	r3, #4294967295
 801cc6c:	4631      	mov	r1, r6
 801cc6e:	461a      	mov	r2, r3
 801cc70:	4630      	mov	r0, r6
 801cc72:	f001 f9d5 	bl	801e020 <nema_set_blend>
 801cc76:	4630      	mov	r0, r6
 801cc78:	f7f4 f8ae 	bl	8010dd8 <nema_enable_gradient>
 801cc7c:	ed9f 6a80 	vldr	s12, [pc, #512]	@ 801ce80 <nema_vg_grad_set+0x254>
 801cc80:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801cc84:	4622      	mov	r2, r4
 801cc86:	4620      	mov	r0, r4
 801cc88:	eb05 0487 	add.w	r4, r5, r7, lsl #2
 801cc8c:	b912      	cbnz	r2, 801cc94 <nema_vg_grad_set+0x68>
 801cc8e:	2801      	cmp	r0, #1
 801cc90:	f340 80c3 	ble.w	801ce1a <nema_vg_grad_set+0x1ee>
 801cc94:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 801cc98:	3201      	adds	r2, #1
 801cc9a:	4297      	cmp	r7, r2
 801cc9c:	ed93 7a00 	vldr	s14, [r3]
 801cca0:	f340 80c0 	ble.w	801ce24 <nema_vg_grad_set+0x1f8>
 801cca4:	0093      	lsls	r3, r2, #2
 801cca6:	18e9      	adds	r1, r5, r3
 801cca8:	edd1 7a00 	vldr	s15, [r1]
 801ccac:	eef4 7ac7 	vcmpe.f32	s15, s14
 801ccb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ccb4:	f100 80bc 	bmi.w	801ce30 <nema_vg_grad_set+0x204>
 801ccb8:	3304      	adds	r3, #4
 801ccba:	442b      	add	r3, r5
 801ccbc:	4601      	mov	r1, r0
 801ccbe:	e00d      	b.n	801ccdc <nema_vg_grad_set+0xb0>
 801ccc0:	42a3      	cmp	r3, r4
 801ccc2:	f102 0201 	add.w	r2, r2, #1
 801ccc6:	d022      	beq.n	801cd0e <nema_vg_grad_set+0xe2>
 801ccc8:	ecb3 7a01 	vldmia	r3!, {s14}
 801cccc:	eef4 7ac7 	vcmpe.f32	s15, s14
 801ccd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ccd4:	f300 80ac 	bgt.w	801ce30 <nema_vg_grad_set+0x204>
 801ccd8:	eef0 7a47 	vmov.f32	s15, s14
 801ccdc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cce0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cce4:	dbec      	blt.n	801ccc0 <nema_vg_grad_set+0x94>
 801cce6:	eef4 7ae6 	vcmpe.f32	s15, s13
 801ccea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ccee:	d8e7      	bhi.n	801ccc0 <nema_vg_grad_set+0x94>
 801ccf0:	2900      	cmp	r1, #0
 801ccf2:	f040 8082 	bne.w	801cdfa <nema_vg_grad_set+0x1ce>
 801ccf6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801ccfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ccfe:	f300 8239 	bgt.w	801d174 <nema_vg_grad_set+0x548>
 801cd02:	42a3      	cmp	r3, r4
 801cd04:	f04f 0101 	mov.w	r1, #1
 801cd08:	f102 0201 	add.w	r2, r2, #1
 801cd0c:	d1dc      	bne.n	801ccc8 <nema_vg_grad_set+0x9c>
 801cd0e:	2900      	cmp	r1, #0
 801cd10:	f340 808c 	ble.w	801ce2c <nema_vg_grad_set+0x200>
 801cd14:	eddf ca5e 	vldr	s25, [pc, #376]	@ 801ce90 <nema_vg_grad_set+0x264>
 801cd18:	2600      	movs	r6, #0
 801cd1a:	f04f 0b01 	mov.w	fp, #1
 801cd1e:	eeb0 da6c 	vmov.f32	s26, s25
 801cd22:	eef0 da6c 	vmov.f32	s27, s25
 801cd26:	eeb0 ea6c 	vmov.f32	s28, s25
 801cd2a:	eeb0 aa6c 	vmov.f32	s20, s25
 801cd2e:	eef0 8a6c 	vmov.f32	s17, s25
 801cd32:	eeb0 9a6c 	vmov.f32	s18, s25
 801cd36:	eef0 9a6c 	vmov.f32	s19, s25
 801cd3a:	46b1      	mov	r9, r6
 801cd3c:	46b0      	mov	r8, r6
 801cd3e:	46da      	mov	sl, fp
 801cd40:	eddf aa4f 	vldr	s21, [pc, #316]	@ 801ce80 <nema_vg_grad_set+0x254>
 801cd44:	eef7 ba00 	vmov.f32	s23, #112	@ 0x3f800000  1.0
 801cd48:	ed9f ca4e 	vldr	s24, [pc, #312]	@ 801ce84 <nema_vg_grad_set+0x258>
 801cd4c:	ed9f 8a50 	vldr	s16, [pc, #320]	@ 801ce90 <nema_vg_grad_set+0x264>
 801cd50:	f8cd b014 	str.w	fp, [sp, #20]
 801cd54:	b91e      	cbnz	r6, 801cd5e <nema_vg_grad_set+0x132>
 801cd56:	f1b8 0f01 	cmp.w	r8, #1
 801cd5a:	f340 8201 	ble.w	801d160 <nema_vg_grad_set+0x534>
 801cd5e:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801cd62:	ed93 7a00 	vldr	s14, [r3]
 801cd66:	1c72      	adds	r2, r6, #1
 801cd68:	4297      	cmp	r7, r2
 801cd6a:	f340 817d 	ble.w	801d068 <nema_vg_grad_set+0x43c>
 801cd6e:	0093      	lsls	r3, r2, #2
 801cd70:	18e9      	adds	r1, r5, r3
 801cd72:	edd1 7a00 	vldr	s15, [r1]
 801cd76:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801cd7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd7e:	f300 812d 	bgt.w	801cfdc <nema_vg_grad_set+0x3b0>
 801cd82:	3304      	adds	r3, #4
 801cd84:	442b      	add	r3, r5
 801cd86:	4641      	mov	r1, r8
 801cd88:	e00c      	b.n	801cda4 <nema_vg_grad_set+0x178>
 801cd8a:	429c      	cmp	r4, r3
 801cd8c:	f102 0201 	add.w	r2, r2, #1
 801cd90:	d01f      	beq.n	801cdd2 <nema_vg_grad_set+0x1a6>
 801cd92:	ecb3 7a01 	vldmia	r3!, {s14}
 801cd96:	eef4 7ac7 	vcmpe.f32	s15, s14
 801cd9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cd9e:	dc7b      	bgt.n	801ce98 <nema_vg_grad_set+0x26c>
 801cda0:	eef0 7a47 	vmov.f32	s15, s14
 801cda4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cda8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cdac:	dbed      	blt.n	801cd8a <nema_vg_grad_set+0x15e>
 801cdae:	eef4 7aeb 	vcmpe.f32	s15, s23
 801cdb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cdb6:	d8e8      	bhi.n	801cd8a <nema_vg_grad_set+0x15e>
 801cdb8:	bb39      	cbnz	r1, 801ce0a <nema_vg_grad_set+0x1de>
 801cdba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801cdbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cdc2:	f300 819c 	bgt.w	801d0fe <nema_vg_grad_set+0x4d2>
 801cdc6:	429c      	cmp	r4, r3
 801cdc8:	f04f 0101 	mov.w	r1, #1
 801cdcc:	f102 0201 	add.w	r2, r2, #1
 801cdd0:	d1df      	bne.n	801cd92 <nema_vg_grad_set+0x166>
 801cdd2:	9b05      	ldr	r3, [sp, #20]
 801cdd4:	2b00      	cmp	r3, #0
 801cdd6:	f000 818d 	beq.w	801d0f4 <nema_vg_grad_set+0x4c8>
 801cdda:	2900      	cmp	r1, #0
 801cddc:	f340 81cc 	ble.w	801d178 <nema_vg_grad_set+0x54c>
 801cde0:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801cde4:	edd3 6a00 	vldr	s13, [r3]
 801cde8:	eef4 6aeb 	vcmpe.f32	s13, s23
 801cdec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cdf0:	f100 814a 	bmi.w	801d088 <nema_vg_grad_set+0x45c>
 801cdf4:	f8dd b014 	ldr.w	fp, [sp, #20]
 801cdf8:	e052      	b.n	801cea0 <nema_vg_grad_set+0x274>
 801cdfa:	3101      	adds	r1, #1
 801cdfc:	2901      	cmp	r1, #1
 801cdfe:	f77f af5f 	ble.w	801ccc0 <nema_vg_grad_set+0x94>
 801ce02:	4281      	cmp	r1, r0
 801ce04:	d086      	beq.n	801cd14 <nema_vg_grad_set+0xe8>
 801ce06:	4608      	mov	r0, r1
 801ce08:	e740      	b.n	801cc8c <nema_vg_grad_set+0x60>
 801ce0a:	3101      	adds	r1, #1
 801ce0c:	2901      	cmp	r1, #1
 801ce0e:	ddbc      	ble.n	801cd8a <nema_vg_grad_set+0x15e>
 801ce10:	46b1      	mov	r9, r6
 801ce12:	f04f 0b00 	mov.w	fp, #0
 801ce16:	4616      	mov	r6, r2
 801ce18:	e042      	b.n	801cea0 <nema_vg_grad_set+0x274>
 801ce1a:	4297      	cmp	r7, r2
 801ce1c:	eeb0 7a46 	vmov.f32	s14, s12
 801ce20:	f73f af40 	bgt.w	801cca4 <nema_vg_grad_set+0x78>
 801ce24:	4601      	mov	r1, r0
 801ce26:	2900      	cmp	r1, #0
 801ce28:	f73f af74 	bgt.w	801cd14 <nema_vg_grad_set+0xe8>
 801ce2c:	f47f af72 	bne.w	801cd14 <nema_vg_grad_set+0xe8>
 801ce30:	4b15      	ldr	r3, [pc, #84]	@ (801ce88 <nema_vg_grad_set+0x25c>)
 801ce32:	ac0c      	add	r4, sp, #48	@ 0x30
 801ce34:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801ce36:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801ce3a:	2100      	movs	r1, #0
 801ce3c:	2500      	movs	r5, #0
 801ce3e:	ab08      	add	r3, sp, #32
 801ce40:	4e12      	ldr	r6, [pc, #72]	@ (801ce8c <nema_vg_grad_set+0x260>)
 801ce42:	4608      	mov	r0, r1
 801ce44:	9300      	str	r3, [sp, #0]
 801ce46:	2240      	movs	r2, #64	@ 0x40
 801ce48:	2301      	movs	r3, #1
 801ce4a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 801ce4e:	9508      	str	r5, [sp, #32]
 801ce50:	9509      	str	r5, [sp, #36]	@ 0x24
 801ce52:	950a      	str	r5, [sp, #40]	@ 0x28
 801ce54:	960b      	str	r6, [sp, #44]	@ 0x2c
 801ce56:	f7f4 fc5f 	bl	8011718 <nema_interpolate_rect_colors>
 801ce5a:	f04f 33ff 	mov.w	r3, #4294967295
 801ce5e:	2100      	movs	r1, #0
 801ce60:	9300      	str	r3, [sp, #0]
 801ce62:	4608      	mov	r0, r1
 801ce64:	2301      	movs	r3, #1
 801ce66:	2240      	movs	r2, #64	@ 0x40
 801ce68:	f7f4 fa6c 	bl	8011344 <nema_fill_rect>
 801ce6c:	2000      	movs	r0, #0
 801ce6e:	f7f3 ffb3 	bl	8010dd8 <nema_enable_gradient>
 801ce72:	f7f3 ff93 	bl	8010d9c <nema_set_clip_pop>
 801ce76:	b011      	add	sp, #68	@ 0x44
 801ce78:	ecbd 8b10 	vpop	{d8-d15}
 801ce7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce80:	c77fff00 	.word	0xc77fff00
 801ce84:	427c0000 	.word	0x427c0000
 801ce88:	08033648 	.word	0x08033648
 801ce8c:	437f0000 	.word	0x437f0000
 801ce90:	00000000 	.word	0x00000000
 801ce94:	427e0000 	.word	0x427e0000
 801ce98:	2300      	movs	r3, #0
 801ce9a:	f04f 0b01 	mov.w	fp, #1
 801ce9e:	9305      	str	r3, [sp, #20]
 801cea0:	4588      	cmp	r8, r1
 801cea2:	f000 809b 	beq.w	801cfdc <nema_vg_grad_set+0x3b0>
 801cea6:	eb05 0389 	add.w	r3, r5, r9, lsl #2
 801ceaa:	edd3 6a00 	vldr	s13, [r3]
 801ceae:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801ceb2:	ee26 7a8c 	vmul.f32	s14, s13, s24
 801ceb6:	ee37 7a27 	vadd.f32	s14, s14, s15
 801ceba:	eef0 7a66 	vmov.f32	s15, s13
 801cebe:	eefe 7acd 	vcvt.s32.f32	s15, s15, #6
 801cec2:	9b04      	ldr	r3, [sp, #16]
 801cec4:	45b1      	cmp	r9, r6
 801cec6:	eb03 1309 	add.w	r3, r3, r9, lsl #4
 801ceca:	ee17 0a90 	vmov	r0, s15
 801cece:	edd3 2a00 	vldr	s5, [r3]
 801ced2:	edd3 3a01 	vldr	s7, [r3, #4]
 801ced6:	ed93 6a03 	vldr	s12, [r3, #12]
 801ceda:	edd3 4a02 	vldr	s9, [r3, #8]
 801cede:	f000 80f1 	beq.w	801d0c4 <nema_vg_grad_set+0x498>
 801cee2:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801cee6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801ceea:	4688      	mov	r8, r1
 801ceec:	ee77 5a67 	vsub.f32	s11, s14, s15
 801cef0:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801cef4:	ed93 5a00 	vldr	s10, [r3]
 801cef8:	ee65 6a0c 	vmul.f32	s13, s10, s24
 801cefc:	eebe 5acd 	vcvt.s32.f32	s10, s10, #6
 801cf00:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801cf04:	9b04      	ldr	r3, [sp, #16]
 801cf06:	ee76 7aa7 	vadd.f32	s15, s13, s15
 801cf0a:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 801cf0e:	ed93 ea00 	vldr	s28, [r3]
 801cf12:	edd3 da01 	vldr	s27, [r3, #4]
 801cf16:	ed93 da02 	vldr	s26, [r3, #8]
 801cf1a:	edd3 ca03 	vldr	s25, [r3, #12]
 801cf1e:	ee15 3a10 	vmov	r3, s10
 801cf22:	1a1a      	subs	r2, r3, r0
 801cf24:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801cf28:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801cf2c:	eef4 5ac7 	vcmpe.f32	s11, s14
 801cf30:	ee3e 3a62 	vsub.f32	s6, s28, s5
 801cf34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cf38:	ee3d 4ae3 	vsub.f32	s8, s27, s7
 801cf3c:	ee3d 5a64 	vsub.f32	s10, s26, s9
 801cf40:	ee7c 6ac6 	vsub.f32	s13, s25, s12
 801cf44:	ee83 2a27 	vdiv.f32	s4, s6, s15
 801cf48:	ee84 3a27 	vdiv.f32	s6, s8, s15
 801cf4c:	ee85 4a27 	vdiv.f32	s8, s10, s15
 801cf50:	ee86 5aa7 	vdiv.f32	s10, s13, s15
 801cf54:	bfca      	itet	gt
 801cf56:	eef7 7a08 	vmovgt.f32	s15, #120	@ 0x3fc00000  1.5
 801cf5a:	ee77 7a65 	vsuble.f32	s15, s14, s11
 801cf5e:	ee77 7ae5 	vsubgt.f32	s15, s15, s11
 801cf62:	ee62 fa27 	vmul.f32	s31, s4, s15
 801cf66:	ee23 7a27 	vmul.f32	s14, s6, s15
 801cf6a:	ee24 fa27 	vmul.f32	s30, s8, s15
 801cf6e:	ee65 7a27 	vmul.f32	s15, s10, s15
 801cf72:	ee37 ba23 	vadd.f32	s22, s14, s7
 801cf76:	ee77 ea86 	vadd.f32	s29, s15, s12
 801cf7a:	ee7f faa2 	vadd.f32	s31, s31, s5
 801cf7e:	ee3f fa24 	vadd.f32	s30, s30, s9
 801cf82:	ed5f 4a3d 	vldr	s9, [pc, #-244]	@ 801ce90 <nema_vg_grad_set+0x264>
 801cf86:	eeb0 0a6f 	vmov.f32	s0, s31
 801cf8a:	eef0 0a4b 	vmov.f32	s1, s22
 801cf8e:	eef0 1a6e 	vmov.f32	s3, s29
 801cf92:	eeb0 1a4f 	vmov.f32	s2, s30
 801cf96:	eef0 3a64 	vmov.f32	s7, s9
 801cf9a:	eef0 2a64 	vmov.f32	s5, s9
 801cf9e:	eef0 5a48 	vmov.f32	s11, s16
 801cfa2:	e9cd 2006 	strd	r2, r0, [sp, #24]
 801cfa6:	f7f4 f961 	bl	801126c <nema_set_gradient>
 801cfaa:	e9dd 2006 	ldrd	r2, r0, [sp, #24]
 801cfae:	f04f 33ff 	mov.w	r3, #4294967295
 801cfb2:	2100      	movs	r1, #0
 801cfb4:	9300      	str	r3, [sp, #0]
 801cfb6:	2301      	movs	r3, #1
 801cfb8:	f7f4 f9c4 	bl	8011344 <nema_fill_rect>
 801cfbc:	f1ba 0f01 	cmp.w	sl, #1
 801cfc0:	d107      	bne.n	801cfd2 <nema_vg_grad_set+0x3a6>
 801cfc2:	eeb0 aa6e 	vmov.f32	s20, s29
 801cfc6:	eef0 8a4f 	vmov.f32	s17, s30
 801cfca:	eeb0 9a4b 	vmov.f32	s18, s22
 801cfce:	eef0 9a6f 	vmov.f32	s19, s31
 801cfd2:	f1bb 0f01 	cmp.w	fp, #1
 801cfd6:	46da      	mov	sl, fp
 801cfd8:	f47f aebc 	bne.w	801cd54 <nema_vg_grad_set+0x128>
 801cfdc:	2000      	movs	r0, #0
 801cfde:	f7f3 fefb 	bl	8010dd8 <nema_enable_gradient>
 801cfe2:	eefc 7aca 	vcvt.u32.f32	s15, s20
 801cfe6:	edcd 7a04 	vstr	s15, [sp, #16]
 801cfea:	eefc 7ae8 	vcvt.u32.f32	s15, s17
 801cfee:	edcd 7a05 	vstr	s15, [sp, #20]
 801cff2:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 801cff6:	edcd 7a06 	vstr	s15, [sp, #24]
 801cffa:	eefc 7ae9 	vcvt.u32.f32	s15, s19
 801cffe:	edcd 7a07 	vstr	s15, [sp, #28]
 801d002:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801d006:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801d00a:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801d00e:	f89d 001c 	ldrb.w	r0, [sp, #28]
 801d012:	f7f3 ff47 	bl	8010ea4 <nema_rgba>
 801d016:	2301      	movs	r3, #1
 801d018:	2100      	movs	r1, #0
 801d01a:	9000      	str	r0, [sp, #0]
 801d01c:	461a      	mov	r2, r3
 801d01e:	4608      	mov	r0, r1
 801d020:	f7f4 f990 	bl	8011344 <nema_fill_rect>
 801d024:	eefc 7aec 	vcvt.u32.f32	s15, s25
 801d028:	edcd 7a04 	vstr	s15, [sp, #16]
 801d02c:	eefc 7acd 	vcvt.u32.f32	s15, s26
 801d030:	edcd 7a05 	vstr	s15, [sp, #20]
 801d034:	eefc 7aed 	vcvt.u32.f32	s15, s27
 801d038:	edcd 7a06 	vstr	s15, [sp, #24]
 801d03c:	eefc 7ace 	vcvt.u32.f32	s15, s28
 801d040:	edcd 7a07 	vstr	s15, [sp, #28]
 801d044:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801d048:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801d04c:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801d050:	f89d 001c 	ldrb.w	r0, [sp, #28]
 801d054:	f7f3 ff26 	bl	8010ea4 <nema_rgba>
 801d058:	2301      	movs	r3, #1
 801d05a:	9000      	str	r0, [sp, #0]
 801d05c:	461a      	mov	r2, r3
 801d05e:	2100      	movs	r1, #0
 801d060:	203f      	movs	r0, #63	@ 0x3f
 801d062:	f7f4 f96f 	bl	8011344 <nema_fill_rect>
 801d066:	e701      	b.n	801ce6c <nema_vg_grad_set+0x240>
 801d068:	9b05      	ldr	r3, [sp, #20]
 801d06a:	2b00      	cmp	r3, #0
 801d06c:	d0b6      	beq.n	801cfdc <nema_vg_grad_set+0x3b0>
 801d06e:	f1b8 0f00 	cmp.w	r8, #0
 801d072:	ddb3      	ble.n	801cfdc <nema_vg_grad_set+0x3b0>
 801d074:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801d078:	edd3 6a00 	vldr	s13, [r3]
 801d07c:	eef4 6aeb 	vcmpe.f32	s13, s23
 801d080:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d084:	d5aa      	bpl.n	801cfdc <nema_vg_grad_set+0x3b0>
 801d086:	4641      	mov	r1, r8
 801d088:	3101      	adds	r1, #1
 801d08a:	4541      	cmp	r1, r8
 801d08c:	d0a6      	beq.n	801cfdc <nema_vg_grad_set+0x3b0>
 801d08e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801d092:	ee26 7a8c 	vmul.f32	s14, s13, s24
 801d096:	ee37 7a27 	vadd.f32	s14, s14, s15
 801d09a:	eef0 7a66 	vmov.f32	s15, s13
 801d09e:	eefe 7acd 	vcvt.s32.f32	s15, s15, #6
 801d0a2:	9b04      	ldr	r3, [sp, #16]
 801d0a4:	f04f 0b01 	mov.w	fp, #1
 801d0a8:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 801d0ac:	ed93 6a03 	vldr	s12, [r3, #12]
 801d0b0:	edd3 2a00 	vldr	s5, [r3]
 801d0b4:	edd3 3a01 	vldr	s7, [r3, #4]
 801d0b8:	edd3 4a02 	vldr	s9, [r3, #8]
 801d0bc:	ee17 0a90 	vmov	r0, s15
 801d0c0:	f8cd b014 	str.w	fp, [sp, #20]
 801d0c4:	2902      	cmp	r1, #2
 801d0c6:	d037      	beq.n	801d138 <nema_vg_grad_set+0x50c>
 801d0c8:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801d0cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d0d0:	4688      	mov	r8, r1
 801d0d2:	ee77 5a67 	vsub.f32	s11, s14, s15
 801d0d6:	dd10      	ble.n	801d0fa <nema_vg_grad_set+0x4ce>
 801d0d8:	f1c0 0240 	rsb	r2, r0, #64	@ 0x40
 801d0dc:	46b1      	mov	r9, r6
 801d0de:	eef0 ca46 	vmov.f32	s25, s12
 801d0e2:	eeb0 da64 	vmov.f32	s26, s9
 801d0e6:	eef0 da63 	vmov.f32	s27, s7
 801d0ea:	eeb0 ea62 	vmov.f32	s28, s5
 801d0ee:	ed5f 7a97 	vldr	s15, [pc, #-604]	@ 801ce94 <nema_vg_grad_set+0x268>
 801d0f2:	e717      	b.n	801cf24 <nema_vg_grad_set+0x2f8>
 801d0f4:	f04f 0b01 	mov.w	fp, #1
 801d0f8:	e6d2      	b.n	801cea0 <nema_vg_grad_set+0x274>
 801d0fa:	46b1      	mov	r9, r6
 801d0fc:	e6f8      	b.n	801cef0 <nema_vg_grad_set+0x2c4>
 801d0fe:	f1b8 0f02 	cmp.w	r8, #2
 801d102:	f43f af6b 	beq.w	801cfdc <nema_vg_grad_set+0x3b0>
 801d106:	ee67 6a8c 	vmul.f32	s13, s15, s24
 801d10a:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801d10e:	ee36 7a87 	vadd.f32	s14, s13, s14
 801d112:	eef0 6a67 	vmov.f32	s13, s15
 801d116:	eefe 6acd 	vcvt.s32.f32	s13, s13, #6
 801d11a:	9b04      	ldr	r3, [sp, #16]
 801d11c:	468b      	mov	fp, r1
 801d11e:	eb03 1302 	add.w	r3, r3, r2, lsl #4
 801d122:	4616      	mov	r6, r2
 801d124:	edd3 3a01 	vldr	s7, [r3, #4]
 801d128:	edd3 2a00 	vldr	s5, [r3]
 801d12c:	ed93 6a03 	vldr	s12, [r3, #12]
 801d130:	edd3 4a02 	vldr	s9, [r3, #8]
 801d134:	ee16 0a90 	vmov	r0, s13
 801d138:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801d13c:	4602      	mov	r2, r0
 801d13e:	eef0 7a47 	vmov.f32	s15, s14
 801d142:	46b1      	mov	r9, r6
 801d144:	eeb0 7a65 	vmov.f32	s14, s11
 801d148:	eef0 ca46 	vmov.f32	s25, s12
 801d14c:	eeb0 da64 	vmov.f32	s26, s9
 801d150:	eef0 da63 	vmov.f32	s27, s7
 801d154:	eeb0 ea62 	vmov.f32	s28, s5
 801d158:	2000      	movs	r0, #0
 801d15a:	f04f 0802 	mov.w	r8, #2
 801d15e:	e6e1      	b.n	801cf24 <nema_vg_grad_set+0x2f8>
 801d160:	4632      	mov	r2, r6
 801d162:	eeb0 7a6a 	vmov.f32	s14, s21
 801d166:	e5ff      	b.n	801cd68 <nema_vg_grad_set+0x13c>
 801d168:	f44f 2000 	mov.w	r0, #524288	@ 0x80000
 801d16c:	f7ff fc82 	bl	801ca74 <nema_vg_set_error>
 801d170:	2720      	movs	r7, #32
 801d172:	e567      	b.n	801cc44 <nema_vg_grad_set+0x18>
 801d174:	2102      	movs	r1, #2
 801d176:	e644      	b.n	801ce02 <nema_vg_grad_set+0x1d6>
 801d178:	469b      	mov	fp, r3
 801d17a:	e691      	b.n	801cea0 <nema_vg_grad_set+0x274>

0801d17c <nema_vg_paint_set_grad_linear>:
 801d17c:	2800      	cmp	r0, #0
 801d17e:	d065      	beq.n	801d24c <nema_vg_paint_set_grad_linear+0xd0>
 801d180:	b510      	push	{r4, lr}
 801d182:	ed2d 8b06 	vpush	{d8-d10}
 801d186:	ee31 8ae0 	vsub.f32	s16, s3, s1
 801d18a:	ee71 8a40 	vsub.f32	s17, s2, s0
 801d18e:	ee68 7a08 	vmul.f32	s15, s16, s16
 801d192:	eeb0 9a40 	vmov.f32	s18, s0
 801d196:	ee28 0aa8 	vmul.f32	s0, s17, s17
 801d19a:	f002 030c 	and.w	r3, r2, #12
 801d19e:	2b08      	cmp	r3, #8
 801d1a0:	bf08      	it	eq
 801d1a2:	f002 0201 	andeq.w	r2, r2, #1
 801d1a6:	f002 020f 	and.w	r2, r2, #15
 801d1aa:	f880 20d0 	strb.w	r2, [r0, #208]	@ 0xd0
 801d1ae:	6341      	str	r1, [r0, #52]	@ 0x34
 801d1b0:	ee30 0a27 	vadd.f32	s0, s0, s15
 801d1b4:	eef0 9a60 	vmov.f32	s19, s1
 801d1b8:	4604      	mov	r4, r0
 801d1ba:	f7f4 fb7f 	bl	80118bc <nema_sqrt>
 801d1be:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801d1c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d1c6:	f04f 0300 	mov.w	r3, #0
 801d1ca:	d10e      	bne.n	801d1ea <nema_vg_paint_set_grad_linear+0x6e>
 801d1cc:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d1d0:	4920      	ldr	r1, [pc, #128]	@ (801d254 <nema_vg_paint_set_grad_linear+0xd8>)
 801d1d2:	63a3      	str	r3, [r4, #56]	@ 0x38
 801d1d4:	63e3      	str	r3, [r4, #60]	@ 0x3c
 801d1d6:	6463      	str	r3, [r4, #68]	@ 0x44
 801d1d8:	64a3      	str	r3, [r4, #72]	@ 0x48
 801d1da:	64e3      	str	r3, [r4, #76]	@ 0x4c
 801d1dc:	6523      	str	r3, [r4, #80]	@ 0x50
 801d1de:	6563      	str	r3, [r4, #84]	@ 0x54
 801d1e0:	6421      	str	r1, [r4, #64]	@ 0x40
 801d1e2:	65a2      	str	r2, [r4, #88]	@ 0x58
 801d1e4:	ecbd 8b06 	vpop	{d8-d10}
 801d1e8:	bd10      	pop	{r4, pc}
 801d1ea:	ee88 aa80 	vdiv.f32	s20, s17, s0
 801d1ee:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 801d258 <nema_vg_paint_set_grad_linear+0xdc>
 801d1f2:	eec8 8a00 	vdiv.f32	s17, s16, s0
 801d1f6:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 801d1fa:	ee87 8a80 	vdiv.f32	s16, s15, s0
 801d1fe:	f7f4 fb87 	bl	8011910 <nema_mat3x3_load_identity>
 801d202:	ee29 7aa8 	vmul.f32	s14, s19, s17
 801d206:	ee69 7a4a 	vnmul.f32	s15, s18, s20
 801d20a:	ee69 9a8a 	vmul.f32	s19, s19, s20
 801d20e:	ee29 9a28 	vmul.f32	s18, s18, s17
 801d212:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801d216:	ee39 9a69 	vsub.f32	s18, s18, s19
 801d21a:	ee28 aa0a 	vmul.f32	s20, s16, s20
 801d21e:	ee28 7a28 	vmul.f32	s14, s16, s17
 801d222:	ee67 7a88 	vmul.f32	s15, s15, s16
 801d226:	ee29 9a08 	vmul.f32	s18, s18, s16
 801d22a:	ee68 8ac8 	vnmul.f32	s17, s17, s16
 801d22e:	edc4 7a10 	vstr	s15, [r4, #64]	@ 0x40
 801d232:	ed84 9a13 	vstr	s18, [r4, #76]	@ 0x4c
 801d236:	ed84 aa0e 	vstr	s20, [r4, #56]	@ 0x38
 801d23a:	ed84 aa12 	vstr	s20, [r4, #72]	@ 0x48
 801d23e:	ed84 7a0f 	vstr	s14, [r4, #60]	@ 0x3c
 801d242:	edc4 8a11 	vstr	s17, [r4, #68]	@ 0x44
 801d246:	ecbd 8b06 	vpop	{d8-d10}
 801d24a:	bd10      	pop	{r4, pc}
 801d24c:	2001      	movs	r0, #1
 801d24e:	f7ff bc11 	b.w	801ca74 <nema_vg_set_error>
 801d252:	bf00      	nop
 801d254:	427e0000 	.word	0x427e0000
 801d258:	42800000 	.word	0x42800000

0801d25c <nema_vg_paint_set_grad_radial>:
 801d25c:	2800      	cmp	r0, #0
 801d25e:	d03f      	beq.n	801d2e0 <nema_vg_paint_set_grad_radial+0x84>
 801d260:	eeb5 1ac0 	vcmpe.f32	s2, #0.0
 801d264:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d268:	6341      	str	r1, [r0, #52]	@ 0x34
 801d26a:	f880 20d0 	strb.w	r2, [r0, #208]	@ 0xd0
 801d26e:	d421      	bmi.n	801d2b4 <nema_vg_paint_set_grad_radial+0x58>
 801d270:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 801d2e8 <nema_vg_paint_set_grad_radial+0x8c>
 801d274:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801d278:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d27c:	d922      	bls.n	801d2c4 <nema_vg_paint_set_grad_radial+0x68>
 801d27e:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 801d2ec <nema_vg_paint_set_grad_radial+0x90>
 801d282:	eec7 7a01 	vdiv.f32	s15, s14, s2
 801d286:	2300      	movs	r3, #0
 801d288:	ee20 0a27 	vmul.f32	s0, s0, s15
 801d28c:	ee60 0aa7 	vmul.f32	s1, s1, s15
 801d290:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d294:	eef1 7a67 	vneg.f32	s15, s15
 801d298:	ed80 0a10 	vstr	s0, [r0, #64]	@ 0x40
 801d29c:	edc0 0a13 	vstr	s1, [r0, #76]	@ 0x4c
 801d2a0:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801d2a4:	edc0 7a12 	vstr	s15, [r0, #72]	@ 0x48
 801d2a8:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801d2aa:	6443      	str	r3, [r0, #68]	@ 0x44
 801d2ac:	6503      	str	r3, [r0, #80]	@ 0x50
 801d2ae:	6543      	str	r3, [r0, #84]	@ 0x54
 801d2b0:	6582      	str	r2, [r0, #88]	@ 0x58
 801d2b2:	4770      	bx	lr
 801d2b4:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 801d2f0 <nema_vg_paint_set_grad_radial+0x94>
 801d2b8:	eeb4 1ae7 	vcmpe.f32	s2, s15
 801d2bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d2c0:	da00      	bge.n	801d2c4 <nema_vg_paint_set_grad_radial+0x68>
 801d2c2:	dbdc      	blt.n	801d27e <nema_vg_paint_set_grad_radial+0x22>
 801d2c4:	2300      	movs	r3, #0
 801d2c6:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801d2ca:	490a      	ldr	r1, [pc, #40]	@ (801d2f4 <nema_vg_paint_set_grad_radial+0x98>)
 801d2cc:	6383      	str	r3, [r0, #56]	@ 0x38
 801d2ce:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801d2d0:	6443      	str	r3, [r0, #68]	@ 0x44
 801d2d2:	6483      	str	r3, [r0, #72]	@ 0x48
 801d2d4:	64c3      	str	r3, [r0, #76]	@ 0x4c
 801d2d6:	6503      	str	r3, [r0, #80]	@ 0x50
 801d2d8:	6543      	str	r3, [r0, #84]	@ 0x54
 801d2da:	6401      	str	r1, [r0, #64]	@ 0x40
 801d2dc:	6582      	str	r2, [r0, #88]	@ 0x58
 801d2de:	4770      	bx	lr
 801d2e0:	2001      	movs	r0, #1
 801d2e2:	f7ff bbc7 	b.w	801ca74 <nema_vg_set_error>
 801d2e6:	bf00      	nop
 801d2e8:	3727c5ac 	.word	0x3727c5ac
 801d2ec:	42800000 	.word	0x42800000
 801d2f0:	b727c5ac 	.word	0xb727c5ac
 801d2f4:	427e0000 	.word	0x427e0000

0801d2f8 <nema_vg_paint_set_paint_color>:
 801d2f8:	b108      	cbz	r0, 801d2fe <nema_vg_paint_set_paint_color+0x6>
 801d2fa:	6301      	str	r1, [r0, #48]	@ 0x30
 801d2fc:	4770      	bx	lr
 801d2fe:	2001      	movs	r0, #1
 801d300:	f7ff bbb8 	b.w	801ca74 <nema_vg_set_error>

0801d304 <nema_vg_paint_set_opacity>:
 801d304:	b110      	cbz	r0, 801d30c <nema_vg_paint_set_opacity+0x8>
 801d306:	ed80 0a36 	vstr	s0, [r0, #216]	@ 0xd8
 801d30a:	4770      	bx	lr
 801d30c:	2001      	movs	r0, #1
 801d30e:	f7ff bbb1 	b.w	801ca74 <nema_vg_set_error>
 801d312:	bf00      	nop

0801d314 <nema_vg_paint_set_stroke_width>:
 801d314:	b110      	cbz	r0, 801d31c <nema_vg_paint_set_stroke_width+0x8>
 801d316:	ed80 0a35 	vstr	s0, [r0, #212]	@ 0xd4
 801d31a:	4770      	bx	lr
 801d31c:	2001      	movs	r0, #1
 801d31e:	f7ff bba9 	b.w	801ca74 <nema_vg_set_error>
 801d322:	bf00      	nop

0801d324 <bind_tex1_according_paint>:
 801d324:	b570      	push	{r4, r5, r6, lr}
 801d326:	f890 30dd 	ldrb.w	r3, [r0, #221]	@ 0xdd
 801d32a:	b084      	sub	sp, #16
 801d32c:	3b01      	subs	r3, #1
 801d32e:	4604      	mov	r4, r0
 801d330:	2b03      	cmp	r3, #3
 801d332:	d81b      	bhi.n	801d36c <bind_tex1_according_paint+0x48>
 801d334:	e8df f003 	tbb	[pc, r3]
 801d338:	281c0228 	.word	0x281c0228
 801d33c:	6805      	ldr	r5, [r0, #0]
 801d33e:	2d00      	cmp	r5, #0
 801d340:	d050      	beq.n	801d3e4 <bind_tex1_according_paint+0xc0>
 801d342:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 801d346:	2b00      	cmp	r3, #0
 801d348:	d03f      	beq.n	801d3ca <bind_tex1_according_paint+0xa6>
 801d34a:	6844      	ldr	r4, [r0, #4]
 801d34c:	2c00      	cmp	r4, #0
 801d34e:	d049      	beq.n	801d3e4 <bind_tex1_according_paint+0xc0>
 801d350:	7f26      	ldrb	r6, [r4, #28]
 801d352:	7f2b      	ldrb	r3, [r5, #28]
 801d354:	8a6a      	ldrh	r2, [r5, #18]
 801d356:	8a29      	ldrh	r1, [r5, #16]
 801d358:	68e8      	ldr	r0, [r5, #12]
 801d35a:	9603      	str	r6, [sp, #12]
 801d35c:	68e4      	ldr	r4, [r4, #12]
 801d35e:	9402      	str	r4, [sp, #8]
 801d360:	7f6c      	ldrb	r4, [r5, #29]
 801d362:	9401      	str	r4, [sp, #4]
 801d364:	696c      	ldr	r4, [r5, #20]
 801d366:	9400      	str	r4, [sp, #0]
 801d368:	f7f3 ff1e 	bl	80111a8 <nema_bind_lut_tex>
 801d36c:	b004      	add	sp, #16
 801d36e:	bd70      	pop	{r4, r5, r6, pc}
 801d370:	f7f4 fe38 	bl	8011fe4 <nema_readHwConfigH>
 801d374:	f410 7580 	ands.w	r5, r0, #256	@ 0x100
 801d378:	d116      	bne.n	801d3a8 <bind_tex1_according_paint+0x84>
 801d37a:	2020      	movs	r0, #32
 801d37c:	f7ff fb7a 	bl	801ca74 <nema_vg_set_error>
 801d380:	f884 50dd 	strb.w	r5, [r4, #221]	@ 0xdd
 801d384:	b004      	add	sp, #16
 801d386:	bd70      	pop	{r4, r5, r6, pc}
 801d388:	2301      	movs	r3, #1
 801d38a:	2000      	movs	r0, #0
 801d38c:	f894 20d0 	ldrb.w	r2, [r4, #208]	@ 0xd0
 801d390:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801d392:	431a      	orrs	r2, r3
 801d394:	68c9      	ldr	r1, [r1, #12]
 801d396:	e9cd 0201 	strd	r0, r2, [sp, #4]
 801d39a:	9300      	str	r3, [sp, #0]
 801d39c:	4618      	mov	r0, r3
 801d39e:	2240      	movs	r2, #64	@ 0x40
 801d3a0:	f7f3 fbe0 	bl	8010b64 <nema_bind_tex>
 801d3a4:	b004      	add	sp, #16
 801d3a6:	bd70      	pop	{r4, r5, r6, pc}
 801d3a8:	2201      	movs	r2, #1
 801d3aa:	2004      	movs	r0, #4
 801d3ac:	f894 30d0 	ldrb.w	r3, [r4, #208]	@ 0xd0
 801d3b0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801d3b2:	f043 0381 	orr.w	r3, r3, #129	@ 0x81
 801d3b6:	68c9      	ldr	r1, [r1, #12]
 801d3b8:	e9cd 0301 	strd	r0, r3, [sp, #4]
 801d3bc:	9200      	str	r2, [sp, #0]
 801d3be:	4610      	mov	r0, r2
 801d3c0:	2340      	movs	r3, #64	@ 0x40
 801d3c2:	f7f3 fbcf 	bl	8010b64 <nema_bind_tex>
 801d3c6:	b004      	add	sp, #16
 801d3c8:	bd70      	pop	{r4, r5, r6, pc}
 801d3ca:	7f68      	ldrb	r0, [r5, #29]
 801d3cc:	8a6b      	ldrh	r3, [r5, #18]
 801d3ce:	8a2a      	ldrh	r2, [r5, #16]
 801d3d0:	68e9      	ldr	r1, [r5, #12]
 801d3d2:	9002      	str	r0, [sp, #8]
 801d3d4:	6968      	ldr	r0, [r5, #20]
 801d3d6:	9001      	str	r0, [sp, #4]
 801d3d8:	7f28      	ldrb	r0, [r5, #28]
 801d3da:	9000      	str	r0, [sp, #0]
 801d3dc:	2001      	movs	r0, #1
 801d3de:	f7f3 fbc1 	bl	8010b64 <nema_bind_tex>
 801d3e2:	e7c3      	b.n	801d36c <bind_tex1_according_paint+0x48>
 801d3e4:	2002      	movs	r0, #2
 801d3e6:	b004      	add	sp, #16
 801d3e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d3ec:	f7ff bb42 	b.w	801ca74 <nema_vg_set_error>

0801d3f0 <nema_vg_path_clear>:
 801d3f0:	b118      	cbz	r0, 801d3fa <nema_vg_path_clear+0xa>
 801d3f2:	2300      	movs	r3, #0
 801d3f4:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d3f8:	4770      	bx	lr
 801d3fa:	2001      	movs	r0, #1
 801d3fc:	f7ff bb3a 	b.w	801ca74 <nema_vg_set_error>

0801d400 <nema_vg_path_create>:
 801d400:	b508      	push	{r3, lr}
 801d402:	2088      	movs	r0, #136	@ 0x88
 801d404:	f7e5 fcaa 	bl	8002d5c <nema_host_malloc>
 801d408:	2200      	movs	r2, #0
 801d40a:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 801d40e:	bd08      	pop	{r3, pc}

0801d410 <nema_vg_path_set_shape_and_bbox>:
 801d410:	b430      	push	{r4, r5}
 801d412:	e9dd 5402 	ldrd	r5, r4, [sp, #8]
 801d416:	2800      	cmp	r0, #0
 801d418:	d065      	beq.n	801d4e6 <nema_vg_path_set_shape_and_bbox+0xd6>
 801d41a:	e9c0 1300 	strd	r1, r3, [r0]
 801d41e:	e9c0 2502 	strd	r2, r5, [r0, #8]
 801d422:	edd4 7a00 	vldr	s15, [r4]
 801d426:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801d42a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801d42e:	eef4 7ae6 	vcmpe.f32	s15, s13
 801d432:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d436:	ee17 2a10 	vmov	r2, s14
 801d43a:	bf4c      	ite	mi
 801d43c:	2301      	movmi	r3, #1
 801d43e:	2300      	movpl	r3, #0
 801d440:	1ad3      	subs	r3, r2, r3
 801d442:	ee07 3a10 	vmov	s14, r3
 801d446:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801d44a:	edc0 6a04 	vstr	s13, [r0, #16]
 801d44e:	ed94 7a01 	vldr	s14, [r4, #4]
 801d452:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801d456:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801d45a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801d45e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d462:	ee17 2a90 	vmov	r2, s15
 801d466:	bf4c      	ite	mi
 801d468:	2301      	movmi	r3, #1
 801d46a:	2300      	movpl	r3, #0
 801d46c:	1ad3      	subs	r3, r2, r3
 801d46e:	ee07 3a90 	vmov	s15, r3
 801d472:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d476:	edc0 7a05 	vstr	s15, [r0, #20]
 801d47a:	ed94 6a02 	vldr	s12, [r4, #8]
 801d47e:	eebd 7ac6 	vcvt.s32.f32	s14, s12
 801d482:	eef8 5ac7 	vcvt.f32.s32	s11, s14
 801d486:	eeb4 6ae5 	vcmpe.f32	s12, s11
 801d48a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d48e:	ee17 2a10 	vmov	r2, s14
 801d492:	bfcc      	ite	gt
 801d494:	2301      	movgt	r3, #1
 801d496:	2300      	movle	r3, #0
 801d498:	4413      	add	r3, r2
 801d49a:	ee07 3a10 	vmov	s14, r3
 801d49e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801d4a2:	ed80 7a06 	vstr	s14, [r0, #24]
 801d4a6:	edd4 5a03 	vldr	s11, [r4, #12]
 801d4aa:	eebd 6ae5 	vcvt.s32.f32	s12, s11
 801d4ae:	eeb8 5ac6 	vcvt.f32.s32	s10, s12
 801d4b2:	eef4 5ac5 	vcmpe.f32	s11, s10
 801d4b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d4ba:	ee16 2a10 	vmov	r2, s12
 801d4be:	bfcc      	ite	gt
 801d4c0:	2301      	movgt	r3, #1
 801d4c2:	2300      	movle	r3, #0
 801d4c4:	4413      	add	r3, r2
 801d4c6:	ee06 3a10 	vmov	s12, r3
 801d4ca:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801d4ce:	ee37 7a66 	vsub.f32	s14, s14, s13
 801d4d2:	ee76 7a67 	vsub.f32	s15, s12, s15
 801d4d6:	ed80 7a08 	vstr	s14, [r0, #32]
 801d4da:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 801d4de:	ed80 6a07 	vstr	s12, [r0, #28]
 801d4e2:	bc30      	pop	{r4, r5}
 801d4e4:	4770      	bx	lr
 801d4e6:	2001      	movs	r0, #1
 801d4e8:	bc30      	pop	{r4, r5}
 801d4ea:	f7ff bac3 	b.w	801ca74 <nema_vg_set_error>
 801d4ee:	bf00      	nop

0801d4f0 <nema_vg_path_set_shape>:
 801d4f0:	b430      	push	{r4, r5}
 801d4f2:	9d02      	ldr	r5, [sp, #8]
 801d4f4:	b130      	cbz	r0, 801d504 <nema_vg_path_set_shape+0x14>
 801d4f6:	e9c0 2502 	strd	r2, r5, [r0, #8]
 801d4fa:	e9c0 1300 	strd	r1, r3, [r0]
 801d4fe:	bc30      	pop	{r4, r5}
 801d500:	f001 b966 	b.w	801e7d0 <calculate_aabb_per_shape>
 801d504:	2001      	movs	r0, #1
 801d506:	bc30      	pop	{r4, r5}
 801d508:	f7ff bab4 	b.w	801ca74 <nema_vg_set_error>

0801d50c <nema_vg_path_set_matrix>:
 801d50c:	2800      	cmp	r0, #0
 801d50e:	d063      	beq.n	801d5d8 <nema_vg_path_set_matrix+0xcc>
 801d510:	f8d0 3084 	ldr.w	r3, [r0, #132]	@ 0x84
 801d514:	2900      	cmp	r1, #0
 801d516:	d055      	beq.n	801d5c4 <nema_vg_path_set_matrix+0xb8>
 801d518:	edd1 7a00 	vldr	s15, [r1]
 801d51c:	edc0 7a18 	vstr	s15, [r0, #96]	@ 0x60
 801d520:	edd1 3a01 	vldr	s7, [r1, #4]
 801d524:	edc0 3a19 	vstr	s7, [r0, #100]	@ 0x64
 801d528:	ed91 7a02 	vldr	s14, [r1, #8]
 801d52c:	ed80 7a1a 	vstr	s14, [r0, #104]	@ 0x68
 801d530:	edd1 6a03 	vldr	s13, [r1, #12]
 801d534:	edc0 6a1b 	vstr	s13, [r0, #108]	@ 0x6c
 801d538:	ed91 4a04 	vldr	s8, [r1, #16]
 801d53c:	ed80 4a1c 	vstr	s8, [r0, #112]	@ 0x70
 801d540:	ed91 5a05 	vldr	s10, [r1, #20]
 801d544:	ed80 5a1d 	vstr	s10, [r0, #116]	@ 0x74
 801d548:	ed91 6a06 	vldr	s12, [r1, #24]
 801d54c:	ed80 6a1e 	vstr	s12, [r0, #120]	@ 0x78
 801d550:	eef7 4a00 	vmov.f32	s9, #112	@ 0x3f800000  1.0
 801d554:	edd1 5a07 	vldr	s11, [r1, #28]
 801d558:	eef4 7a64 	vcmp.f32	s15, s9
 801d55c:	edc0 5a1f 	vstr	s11, [r0, #124]	@ 0x7c
 801d560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d564:	6a0a      	ldr	r2, [r1, #32]
 801d566:	f8c0 2080 	str.w	r2, [r0, #128]	@ 0x80
 801d56a:	d130      	bne.n	801d5ce <nema_vg_path_set_matrix+0xc2>
 801d56c:	eef5 3a40 	vcmp.f32	s7, #0.0
 801d570:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d574:	d12b      	bne.n	801d5ce <nema_vg_path_set_matrix+0xc2>
 801d576:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801d57a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d57e:	d126      	bne.n	801d5ce <nema_vg_path_set_matrix+0xc2>
 801d580:	eef5 6a40 	vcmp.f32	s13, #0.0
 801d584:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d588:	d121      	bne.n	801d5ce <nema_vg_path_set_matrix+0xc2>
 801d58a:	eeb4 4a64 	vcmp.f32	s8, s9
 801d58e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d592:	d11c      	bne.n	801d5ce <nema_vg_path_set_matrix+0xc2>
 801d594:	eeb5 5a40 	vcmp.f32	s10, #0.0
 801d598:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d59c:	d117      	bne.n	801d5ce <nema_vg_path_set_matrix+0xc2>
 801d59e:	eeb5 6a40 	vcmp.f32	s12, #0.0
 801d5a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d5a6:	d112      	bne.n	801d5ce <nema_vg_path_set_matrix+0xc2>
 801d5a8:	eef5 5a40 	vcmp.f32	s11, #0.0
 801d5ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d5b0:	d10d      	bne.n	801d5ce <nema_vg_path_set_matrix+0xc2>
 801d5b2:	ed90 7a20 	vldr	s14, [r0, #128]	@ 0x80
 801d5b6:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 801d5ba:	eeb4 7a67 	vcmp.f32	s14, s15
 801d5be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d5c2:	d104      	bne.n	801d5ce <nema_vg_path_set_matrix+0xc2>
 801d5c4:	f023 0301 	bic.w	r3, r3, #1
 801d5c8:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d5cc:	4770      	bx	lr
 801d5ce:	f043 0301 	orr.w	r3, r3, #1
 801d5d2:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 801d5d6:	4770      	bx	lr
 801d5d8:	2001      	movs	r0, #1
 801d5da:	f7ff ba4b 	b.w	801ca74 <nema_vg_set_error>
 801d5de:	bf00      	nop

0801d5e0 <set_tsvg_text_max_size>:
 801d5e0:	4a02      	ldr	r2, [pc, #8]	@ (801d5ec <set_tsvg_text_max_size+0xc>)
 801d5e2:	4b03      	ldr	r3, [pc, #12]	@ (801d5f0 <set_tsvg_text_max_size+0x10>)
 801d5e4:	6010      	str	r0, [r2, #0]
 801d5e6:	6019      	str	r1, [r3, #0]
 801d5e8:	4770      	bx	lr
 801d5ea:	bf00      	nop
 801d5ec:	200001dc 	.word	0x200001dc
 801d5f0:	200001e0 	.word	0x200001e0

0801d5f4 <tsvg_init>:
 801d5f4:	b508      	push	{r3, lr}
 801d5f6:	f7ff fab1 	bl	801cb5c <nema_vg_paint_create>
 801d5fa:	4b05      	ldr	r3, [pc, #20]	@ (801d610 <tsvg_init+0x1c>)
 801d5fc:	6018      	str	r0, [r3, #0]
 801d5fe:	f7ff feff 	bl	801d400 <nema_vg_path_create>
 801d602:	4b04      	ldr	r3, [pc, #16]	@ (801d614 <tsvg_init+0x20>)
 801d604:	6018      	str	r0, [r3, #0]
 801d606:	f7ff faf1 	bl	801cbec <nema_vg_grad_create>
 801d60a:	4b03      	ldr	r3, [pc, #12]	@ (801d618 <tsvg_init+0x24>)
 801d60c:	6018      	str	r0, [r3, #0]
 801d60e:	bd08      	pop	{r3, pc}
 801d610:	200832d8 	.word	0x200832d8
 801d614:	200832dc 	.word	0x200832dc
 801d618:	200832d4 	.word	0x200832d4

0801d61c <tsi_malloc_init_pool_aligned>:
 801d61c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d620:	2807      	cmp	r0, #7
 801d622:	e9dd e706 	ldrd	lr, r7, [sp, #24]
 801d626:	d845      	bhi.n	801d6b4 <tsi_malloc_init_pool_aligned+0x98>
 801d628:	2f0f      	cmp	r7, #15
 801d62a:	dd36      	ble.n	801d69a <tsi_malloc_init_pool_aligned+0x7e>
 801d62c:	07bc      	lsls	r4, r7, #30
 801d62e:	463e      	mov	r6, r7
 801d630:	d043      	beq.n	801d6ba <tsi_malloc_init_pool_aligned+0x9e>
 801d632:	f027 0703 	bic.w	r7, r7, #3
 801d636:	3704      	adds	r7, #4
 801d638:	f107 0c0b 	add.w	ip, r7, #11
 801d63c:	fb9c fcf7 	sdiv	ip, ip, r7
 801d640:	463e      	mov	r6, r7
 801d642:	fb07 fc0c 	mul.w	ip, r7, ip
 801d646:	fbb1 f4f6 	udiv	r4, r1, r6
 801d64a:	fb06 1514 	mls	r5, r6, r4, r1
 801d64e:	f8df 8080 	ldr.w	r8, [pc, #128]	@ 801d6d0 <tsi_malloc_init_pool_aligned+0xb4>
 801d652:	f8c8 c000 	str.w	ip, [r8]
 801d656:	b32d      	cbz	r5, 801d6a4 <tsi_malloc_init_pool_aligned+0x88>
 801d658:	fb04 6406 	mla	r4, r4, r6, r6
 801d65c:	eb00 0540 	add.w	r5, r0, r0, lsl #1
 801d660:	4819      	ldr	r0, [pc, #100]	@ (801d6c8 <tsi_malloc_init_pool_aligned+0xac>)
 801d662:	00ed      	lsls	r5, r5, #3
 801d664:	1946      	adds	r6, r0, r5
 801d666:	5142      	str	r2, [r0, r5]
 801d668:	18ca      	adds	r2, r1, r3
 801d66a:	60f4      	str	r4, [r6, #12]
 801d66c:	6071      	str	r1, [r6, #4]
 801d66e:	e9c6 3704 	strd	r3, r7, [r6, #16]
 801d672:	60b2      	str	r2, [r6, #8]
 801d674:	f1be 0f00 	cmp.w	lr, #0
 801d678:	d016      	beq.n	801d6a8 <tsi_malloc_init_pool_aligned+0x8c>
 801d67a:	b1c4      	cbz	r4, 801d6ae <tsi_malloc_init_pool_aligned+0x92>
 801d67c:	2200      	movs	r2, #0
 801d67e:	4610      	mov	r0, r2
 801d680:	4d12      	ldr	r5, [pc, #72]	@ (801d6cc <tsi_malloc_init_pool_aligned+0xb0>)
 801d682:	eba3 034c 	sub.w	r3, r3, ip, lsl #1
 801d686:	eb0c 0104 	add.w	r1, ip, r4
 801d68a:	e884 1024 	stmia.w	r4, {r2, r5, ip}
 801d68e:	f84c 3004 	str.w	r3, [ip, r4]
 801d692:	e9c1 5201 	strd	r5, r2, [r1, #4]
 801d696:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d69a:	f04f 0c10 	mov.w	ip, #16
 801d69e:	4666      	mov	r6, ip
 801d6a0:	4667      	mov	r7, ip
 801d6a2:	e7d0      	b.n	801d646 <tsi_malloc_init_pool_aligned+0x2a>
 801d6a4:	460c      	mov	r4, r1
 801d6a6:	e7d9      	b.n	801d65c <tsi_malloc_init_pool_aligned+0x40>
 801d6a8:	4670      	mov	r0, lr
 801d6aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d6ae:	4620      	mov	r0, r4
 801d6b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d6b4:	f04f 30ff 	mov.w	r0, #4294967295
 801d6b8:	e7ed      	b.n	801d696 <tsi_malloc_init_pool_aligned+0x7a>
 801d6ba:	f107 0c0b 	add.w	ip, r7, #11
 801d6be:	fb9c fcf7 	sdiv	ip, ip, r7
 801d6c2:	fb07 fc0c 	mul.w	ip, r7, ip
 801d6c6:	e7be      	b.n	801d646 <tsi_malloc_init_pool_aligned+0x2a>
 801d6c8:	200832e0 	.word	0x200832e0
 801d6cc:	000f1fa1 	.word	0x000f1fa1
 801d6d0:	200001e4 	.word	0x200001e4

0801d6d4 <tsi_malloc_pool>:
 801d6d4:	2807      	cmp	r0, #7
 801d6d6:	d850      	bhi.n	801d77a <tsi_malloc_pool+0xa6>
 801d6d8:	b4f0      	push	{r4, r5, r6, r7}
 801d6da:	4b29      	ldr	r3, [pc, #164]	@ (801d780 <tsi_malloc_pool+0xac>)
 801d6dc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d6e0:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 801d6e4:	68c4      	ldr	r4, [r0, #12]
 801d6e6:	2c00      	cmp	r4, #0
 801d6e8:	d03e      	beq.n	801d768 <tsi_malloc_pool+0x94>
 801d6ea:	6947      	ldr	r7, [r0, #20]
 801d6ec:	4b25      	ldr	r3, [pc, #148]	@ (801d784 <tsi_malloc_pool+0xb0>)
 801d6ee:	f107 000b 	add.w	r0, r7, #11
 801d6f2:	fb90 f0f7 	sdiv	r0, r0, r7
 801d6f6:	fb07 f000 	mul.w	r0, r7, r0
 801d6fa:	1e7d      	subs	r5, r7, #1
 801d6fc:	4281      	cmp	r1, r0
 801d6fe:	bfac      	ite	ge
 801d700:	186d      	addge	r5, r5, r1
 801d702:	182d      	addlt	r5, r5, r0
 801d704:	fb95 f5f7 	sdiv	r5, r5, r7
 801d708:	fb07 f505 	mul.w	r5, r7, r5
 801d70c:	6821      	ldr	r1, [r4, #0]
 801d70e:	6018      	str	r0, [r3, #0]
 801d710:	428d      	cmp	r5, r1
 801d712:	dd2f      	ble.n	801d774 <tsi_malloc_pool+0xa0>
 801d714:	68a3      	ldr	r3, [r4, #8]
 801d716:	b33b      	cbz	r3, 801d768 <tsi_malloc_pool+0x94>
 801d718:	4626      	mov	r6, r4
 801d71a:	e002      	b.n	801d722 <tsi_malloc_pool+0x4e>
 801d71c:	6893      	ldr	r3, [r2, #8]
 801d71e:	4616      	mov	r6, r2
 801d720:	b313      	cbz	r3, 801d768 <tsi_malloc_pool+0x94>
 801d722:	58e1      	ldr	r1, [r4, r3]
 801d724:	18e2      	adds	r2, r4, r3
 801d726:	42a9      	cmp	r1, r5
 801d728:	dbf8      	blt.n	801d71c <tsi_malloc_pool+0x48>
 801d72a:	1943      	adds	r3, r0, r5
 801d72c:	428b      	cmp	r3, r1
 801d72e:	da1e      	bge.n	801d76e <tsi_malloc_pool+0x9a>
 801d730:	1ac9      	subs	r1, r1, r3
 801d732:	f8df c058 	ldr.w	ip, [pc, #88]	@ 801d78c <tsi_malloc_pool+0xb8>
 801d736:	5099      	str	r1, [r3, r2]
 801d738:	4413      	add	r3, r2
 801d73a:	f8c3 c004 	str.w	ip, [r3, #4]
 801d73e:	6891      	ldr	r1, [r2, #8]
 801d740:	2f00      	cmp	r7, #0
 801d742:	6099      	str	r1, [r3, #8]
 801d744:	dd08      	ble.n	801d758 <tsi_malloc_pool+0x84>
 801d746:	fbb3 f1f7 	udiv	r1, r3, r7
 801d74a:	fb07 3c11 	mls	ip, r7, r1, r3
 801d74e:	f1bc 0f00 	cmp.w	ip, #0
 801d752:	d001      	beq.n	801d758 <tsi_malloc_pool+0x84>
 801d754:	fb01 7307 	mla	r3, r1, r7, r7
 801d758:	1b1b      	subs	r3, r3, r4
 801d75a:	60b3      	str	r3, [r6, #8]
 801d75c:	6015      	str	r5, [r2, #0]
 801d75e:	4b0a      	ldr	r3, [pc, #40]	@ (801d788 <tsi_malloc_pool+0xb4>)
 801d760:	4410      	add	r0, r2
 801d762:	6053      	str	r3, [r2, #4]
 801d764:	bcf0      	pop	{r4, r5, r6, r7}
 801d766:	4770      	bx	lr
 801d768:	2000      	movs	r0, #0
 801d76a:	bcf0      	pop	{r4, r5, r6, r7}
 801d76c:	4770      	bx	lr
 801d76e:	6893      	ldr	r3, [r2, #8]
 801d770:	60b3      	str	r3, [r6, #8]
 801d772:	e7f4      	b.n	801d75e <tsi_malloc_pool+0x8a>
 801d774:	4626      	mov	r6, r4
 801d776:	4622      	mov	r2, r4
 801d778:	e7d7      	b.n	801d72a <tsi_malloc_pool+0x56>
 801d77a:	2000      	movs	r0, #0
 801d77c:	4770      	bx	lr
 801d77e:	bf00      	nop
 801d780:	200832e0 	.word	0x200832e0
 801d784:	200001e4 	.word	0x200001e4
 801d788:	000f1fa2 	.word	0x000f1fa2
 801d78c:	000f1fa1 	.word	0x000f1fa1

0801d790 <tsi_free>:
 801d790:	2800      	cmp	r0, #0
 801d792:	d044      	beq.n	801d81e <tsi_free+0x8e>
 801d794:	4b6f      	ldr	r3, [pc, #444]	@ (801d954 <tsi_free+0x1c4>)
 801d796:	68da      	ldr	r2, [r3, #12]
 801d798:	b12a      	cbz	r2, 801d7a6 <tsi_free+0x16>
 801d79a:	6859      	ldr	r1, [r3, #4]
 801d79c:	4288      	cmp	r0, r1
 801d79e:	d302      	bcc.n	801d7a6 <tsi_free+0x16>
 801d7a0:	6899      	ldr	r1, [r3, #8]
 801d7a2:	4288      	cmp	r0, r1
 801d7a4:	d342      	bcc.n	801d82c <tsi_free+0x9c>
 801d7a6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801d7a8:	b12a      	cbz	r2, 801d7b6 <tsi_free+0x26>
 801d7aa:	69d9      	ldr	r1, [r3, #28]
 801d7ac:	4288      	cmp	r0, r1
 801d7ae:	d302      	bcc.n	801d7b6 <tsi_free+0x26>
 801d7b0:	6a19      	ldr	r1, [r3, #32]
 801d7b2:	4288      	cmp	r0, r1
 801d7b4:	d352      	bcc.n	801d85c <tsi_free+0xcc>
 801d7b6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 801d7b8:	b12a      	cbz	r2, 801d7c6 <tsi_free+0x36>
 801d7ba:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 801d7bc:	4288      	cmp	r0, r1
 801d7be:	d302      	bcc.n	801d7c6 <tsi_free+0x36>
 801d7c0:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 801d7c2:	4288      	cmp	r0, r1
 801d7c4:	d34c      	bcc.n	801d860 <tsi_free+0xd0>
 801d7c6:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 801d7c8:	b12a      	cbz	r2, 801d7d6 <tsi_free+0x46>
 801d7ca:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 801d7cc:	4281      	cmp	r1, r0
 801d7ce:	d802      	bhi.n	801d7d6 <tsi_free+0x46>
 801d7d0:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 801d7d2:	4281      	cmp	r1, r0
 801d7d4:	d846      	bhi.n	801d864 <tsi_free+0xd4>
 801d7d6:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
 801d7d8:	b12a      	cbz	r2, 801d7e6 <tsi_free+0x56>
 801d7da:	6e59      	ldr	r1, [r3, #100]	@ 0x64
 801d7dc:	4288      	cmp	r0, r1
 801d7de:	d302      	bcc.n	801d7e6 <tsi_free+0x56>
 801d7e0:	6e99      	ldr	r1, [r3, #104]	@ 0x68
 801d7e2:	4281      	cmp	r1, r0
 801d7e4:	d840      	bhi.n	801d868 <tsi_free+0xd8>
 801d7e6:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
 801d7ea:	b132      	cbz	r2, 801d7fa <tsi_free+0x6a>
 801d7ec:	6fd9      	ldr	r1, [r3, #124]	@ 0x7c
 801d7ee:	4281      	cmp	r1, r0
 801d7f0:	d803      	bhi.n	801d7fa <tsi_free+0x6a>
 801d7f2:	f8d3 1080 	ldr.w	r1, [r3, #128]	@ 0x80
 801d7f6:	4288      	cmp	r0, r1
 801d7f8:	d338      	bcc.n	801d86c <tsi_free+0xdc>
 801d7fa:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
 801d7fe:	b13a      	cbz	r2, 801d810 <tsi_free+0x80>
 801d800:	f8d3 1094 	ldr.w	r1, [r3, #148]	@ 0x94
 801d804:	4288      	cmp	r0, r1
 801d806:	d303      	bcc.n	801d810 <tsi_free+0x80>
 801d808:	f8d3 1098 	ldr.w	r1, [r3, #152]	@ 0x98
 801d80c:	4288      	cmp	r0, r1
 801d80e:	d32f      	bcc.n	801d870 <tsi_free+0xe0>
 801d810:	f8d3 20b4 	ldr.w	r2, [r3, #180]	@ 0xb4
 801d814:	b11a      	cbz	r2, 801d81e <tsi_free+0x8e>
 801d816:	f8d3 10ac 	ldr.w	r1, [r3, #172]	@ 0xac
 801d81a:	4281      	cmp	r1, r0
 801d81c:	d900      	bls.n	801d820 <tsi_free+0x90>
 801d81e:	4770      	bx	lr
 801d820:	f8d3 10b0 	ldr.w	r1, [r3, #176]	@ 0xb0
 801d824:	4281      	cmp	r1, r0
 801d826:	d9fa      	bls.n	801d81e <tsi_free+0x8e>
 801d828:	2107      	movs	r1, #7
 801d82a:	e000      	b.n	801d82e <tsi_free+0x9e>
 801d82c:	2100      	movs	r1, #0
 801d82e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d832:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d836:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 801d83a:	695e      	ldr	r6, [r3, #20]
 801d83c:	4b46      	ldr	r3, [pc, #280]	@ (801d958 <tsi_free+0x1c8>)
 801d83e:	f106 010b 	add.w	r1, r6, #11
 801d842:	fb91 f1f6 	sdiv	r1, r1, r6
 801d846:	fb06 f101 	mul.w	r1, r6, r1
 801d84a:	1a45      	subs	r5, r0, r1
 801d84c:	686c      	ldr	r4, [r5, #4]
 801d84e:	4f43      	ldr	r7, [pc, #268]	@ (801d95c <tsi_free+0x1cc>)
 801d850:	429c      	cmp	r4, r3
 801d852:	6039      	str	r1, [r7, #0]
 801d854:	46a8      	mov	r8, r5
 801d856:	d00d      	beq.n	801d874 <tsi_free+0xe4>
 801d858:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d85c:	2101      	movs	r1, #1
 801d85e:	e7e6      	b.n	801d82e <tsi_free+0x9e>
 801d860:	2102      	movs	r1, #2
 801d862:	e7e4      	b.n	801d82e <tsi_free+0x9e>
 801d864:	2103      	movs	r1, #3
 801d866:	e7e2      	b.n	801d82e <tsi_free+0x9e>
 801d868:	2104      	movs	r1, #4
 801d86a:	e7e0      	b.n	801d82e <tsi_free+0x9e>
 801d86c:	2105      	movs	r1, #5
 801d86e:	e7de      	b.n	801d82e <tsi_free+0x9e>
 801d870:	2106      	movs	r1, #6
 801d872:	e7dc      	b.n	801d82e <tsi_free+0x9e>
 801d874:	4b3a      	ldr	r3, [pc, #232]	@ (801d960 <tsi_free+0x1d0>)
 801d876:	606b      	str	r3, [r5, #4]
 801d878:	6894      	ldr	r4, [r2, #8]
 801d87a:	18a3      	adds	r3, r4, r2
 801d87c:	429d      	cmp	r5, r3
 801d87e:	d95e      	bls.n	801d93e <tsi_free+0x1ae>
 801d880:	b90c      	cbnz	r4, 801d886 <tsi_free+0xf6>
 801d882:	e05c      	b.n	801d93e <tsi_free+0x1ae>
 801d884:	b12c      	cbz	r4, 801d892 <tsi_free+0x102>
 801d886:	689c      	ldr	r4, [r3, #8]
 801d888:	469c      	mov	ip, r3
 801d88a:	469e      	mov	lr, r3
 801d88c:	1913      	adds	r3, r2, r4
 801d88e:	429d      	cmp	r5, r3
 801d890:	d8f8      	bhi.n	801d884 <tsi_free+0xf4>
 801d892:	682f      	ldr	r7, [r5, #0]
 801d894:	4594      	cmp	ip, r2
 801d896:	4438      	add	r0, r7
 801d898:	d04d      	beq.n	801d936 <tsi_free+0x1a6>
 801d89a:	f8dc 7000 	ldr.w	r7, [ip]
 801d89e:	eb01 040c 	add.w	r4, r1, ip
 801d8a2:	443c      	add	r4, r7
 801d8a4:	1b64      	subs	r4, r4, r5
 801d8a6:	fab4 f484 	clz	r4, r4
 801d8aa:	0964      	lsrs	r4, r4, #5
 801d8ac:	2e00      	cmp	r6, #0
 801d8ae:	dd32      	ble.n	801d916 <tsi_free+0x186>
 801d8b0:	fbb5 f7f6 	udiv	r7, r5, r6
 801d8b4:	fb06 5c17 	mls	ip, r6, r7, r5
 801d8b8:	f1bc 0f00 	cmp.w	ip, #0
 801d8bc:	d001      	beq.n	801d8c2 <tsi_free+0x132>
 801d8be:	fb07 6506 	mla	r5, r7, r6, r6
 801d8c2:	fbb3 f7f6 	udiv	r7, r3, r6
 801d8c6:	fb06 3c17 	mls	ip, r6, r7, r3
 801d8ca:	1aad      	subs	r5, r5, r2
 801d8cc:	f8ce 5008 	str.w	r5, [lr, #8]
 801d8d0:	f1bc 0f00 	cmp.w	ip, #0
 801d8d4:	d01d      	beq.n	801d912 <tsi_free+0x182>
 801d8d6:	fb07 6606 	mla	r6, r7, r6, r6
 801d8da:	1ab2      	subs	r2, r6, r2
 801d8dc:	f8c8 2008 	str.w	r2, [r8, #8]
 801d8e0:	b154      	cbz	r4, 801d8f8 <tsi_free+0x168>
 801d8e2:	f8d8 5000 	ldr.w	r5, [r8]
 801d8e6:	46f0      	mov	r8, lr
 801d8e8:	f8de 4000 	ldr.w	r4, [lr]
 801d8ec:	440d      	add	r5, r1
 801d8ee:	442c      	add	r4, r5
 801d8f0:	f8ce 4000 	str.w	r4, [lr]
 801d8f4:	f8ce 2008 	str.w	r2, [lr, #8]
 801d8f8:	4283      	cmp	r3, r0
 801d8fa:	d1ad      	bne.n	801d858 <tsi_free+0xc8>
 801d8fc:	6818      	ldr	r0, [r3, #0]
 801d8fe:	f8d8 2000 	ldr.w	r2, [r8]
 801d902:	4401      	add	r1, r0
 801d904:	440a      	add	r2, r1
 801d906:	f8c8 2000 	str.w	r2, [r8]
 801d90a:	689b      	ldr	r3, [r3, #8]
 801d90c:	f8c8 3008 	str.w	r3, [r8, #8]
 801d910:	e7a2      	b.n	801d858 <tsi_free+0xc8>
 801d912:	461e      	mov	r6, r3
 801d914:	e7e1      	b.n	801d8da <tsi_free+0x14a>
 801d916:	1aae      	subs	r6, r5, r2
 801d918:	1a9a      	subs	r2, r3, r2
 801d91a:	f8ce 6008 	str.w	r6, [lr, #8]
 801d91e:	60aa      	str	r2, [r5, #8]
 801d920:	2c00      	cmp	r4, #0
 801d922:	d0e9      	beq.n	801d8f8 <tsi_free+0x168>
 801d924:	682d      	ldr	r5, [r5, #0]
 801d926:	f8de 4000 	ldr.w	r4, [lr]
 801d92a:	440d      	add	r5, r1
 801d92c:	442c      	add	r4, r5
 801d92e:	f8ce 4000 	str.w	r4, [lr]
 801d932:	46f0      	mov	r8, lr
 801d934:	e7de      	b.n	801d8f4 <tsi_free+0x164>
 801d936:	2e00      	cmp	r6, #0
 801d938:	dd06      	ble.n	801d948 <tsi_free+0x1b8>
 801d93a:	2400      	movs	r4, #0
 801d93c:	e7b8      	b.n	801d8b0 <tsi_free+0x120>
 801d93e:	682c      	ldr	r4, [r5, #0]
 801d940:	4696      	mov	lr, r2
 801d942:	4420      	add	r0, r4
 801d944:	2400      	movs	r4, #0
 801d946:	e7b1      	b.n	801d8ac <tsi_free+0x11c>
 801d948:	eba5 020c 	sub.w	r2, r5, ip
 801d94c:	f8cc 2008 	str.w	r2, [ip, #8]
 801d950:	60ac      	str	r4, [r5, #8]
 801d952:	e7d1      	b.n	801d8f8 <tsi_free+0x168>
 801d954:	200832e0 	.word	0x200832e0
 801d958:	000f1fa2 	.word	0x000f1fa2
 801d95c:	200001e4 	.word	0x200001e4
 801d960:	000f1fa1 	.word	0x000f1fa1

0801d964 <nema_cl_create_sized>:
 801d964:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d966:	b093      	sub	sp, #76	@ 0x4c
 801d968:	466d      	mov	r5, sp
 801d96a:	4606      	mov	r6, r0
 801d96c:	460a      	mov	r2, r1
 801d96e:	4628      	mov	r0, r5
 801d970:	2100      	movs	r1, #0
 801d972:	f7e5 fa75 	bl	8002e60 <nema_buffer_create_pool>
 801d976:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801d97a:	2500      	movs	r5, #0
 801d97c:	ac04      	add	r4, sp, #16
 801d97e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801d982:	4620      	mov	r0, r4
 801d984:	f7e5 fa8e 	bl	8002ea4 <nema_buffer_map>
 801d988:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 801d98c:	ac08      	add	r4, sp, #32
 801d98e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801d992:	2110      	movs	r1, #16
 801d994:	f04f 32ff 	mov.w	r2, #4294967295
 801d998:	9b04      	ldr	r3, [sp, #16]
 801d99a:	950d      	str	r5, [sp, #52]	@ 0x34
 801d99c:	e9cd 5510 	strd	r5, r5, [sp, #64]	@ 0x40
 801d9a0:	42ab      	cmp	r3, r5
 801d9a2:	4635      	mov	r5, r6
 801d9a4:	bfb8      	it	lt
 801d9a6:	3307      	addlt	r3, #7
 801d9a8:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 801d9ac:	10db      	asrs	r3, r3, #3
 801d9ae:	005b      	lsls	r3, r3, #1
 801d9b0:	930c      	str	r3, [sp, #48]	@ 0x30
 801d9b2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801d9b4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801d9b6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801d9b8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801d9ba:	e894 0003 	ldmia.w	r4, {r0, r1}
 801d9be:	2700      	movs	r7, #0
 801d9c0:	e885 0003 	stmia.w	r5, {r0, r1}
 801d9c4:	4630      	mov	r0, r6
 801d9c6:	61b7      	str	r7, [r6, #24]
 801d9c8:	b013      	add	sp, #76	@ 0x4c
 801d9ca:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801d9cc <nema_extend_bound_cl>:
 801d9cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d9ce:	4d6e      	ldr	r5, [pc, #440]	@ (801db88 <nema_extend_bound_cl+0x1bc>)
 801d9d0:	b09f      	sub	sp, #124	@ 0x7c
 801d9d2:	682b      	ldr	r3, [r5, #0]
 801d9d4:	2b00      	cmp	r3, #0
 801d9d6:	f000 80c1 	beq.w	801db5c <nema_extend_bound_cl+0x190>
 801d9da:	4606      	mov	r6, r0
 801d9dc:	6998      	ldr	r0, [r3, #24]
 801d9de:	0784      	lsls	r4, r0, #30
 801d9e0:	f140 80b6 	bpl.w	801db50 <nema_extend_bound_cl+0x184>
 801d9e4:	e9d3 1204 	ldrd	r1, r2, [r3, #16]
 801d9e8:	0680      	lsls	r0, r0, #26
 801d9ea:	d44e      	bmi.n	801da8a <nema_extend_bound_cl+0xbe>
 801d9ec:	1a89      	subs	r1, r1, r2
 801d9ee:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801d9f2:	1049      	asrs	r1, r1, #1
 801d9f4:	2902      	cmp	r1, #2
 801d9f6:	dd13      	ble.n	801da20 <nema_extend_bound_cl+0x54>
 801d9f8:	f44f 3c80 	mov.w	ip, #65536	@ 0x10000
 801d9fc:	2700      	movs	r7, #0
 801d9fe:	1e94      	subs	r4, r2, #2
 801da00:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801da04:	1c91      	adds	r1, r2, #2
 801da06:	0092      	lsls	r2, r2, #2
 801da08:	6898      	ldr	r0, [r3, #8]
 801da0a:	f840 c002 	str.w	ip, [r0, r2]
 801da0e:	6898      	ldr	r0, [r3, #8]
 801da10:	4410      	add	r0, r2
 801da12:	6047      	str	r7, [r0, #4]
 801da14:	6159      	str	r1, [r3, #20]
 801da16:	3102      	adds	r1, #2
 801da18:	428c      	cmp	r4, r1
 801da1a:	f102 0208 	add.w	r2, r2, #8
 801da1e:	d1f3      	bne.n	801da08 <nema_extend_bound_cl+0x3c>
 801da20:	6a1c      	ldr	r4, [r3, #32]
 801da22:	2c00      	cmp	r4, #0
 801da24:	d050      	beq.n	801dac8 <nema_extend_bound_cl+0xfc>
 801da26:	e9d3 2105 	ldrd	r2, r1, [r3, #20]
 801da2a:	26f0      	movs	r6, #240	@ 0xf0
 801da2c:	27f4      	movs	r7, #244	@ 0xf4
 801da2e:	6898      	ldr	r0, [r3, #8]
 801da30:	f041 0104 	orr.w	r1, r1, #4
 801da34:	6199      	str	r1, [r3, #24]
 801da36:	f840 6022 	str.w	r6, [r0, r2, lsl #2]
 801da3a:	6899      	ldr	r1, [r3, #8]
 801da3c:	68e6      	ldr	r6, [r4, #12]
 801da3e:	0090      	lsls	r0, r2, #2
 801da40:	4401      	add	r1, r0
 801da42:	604e      	str	r6, [r1, #4]
 801da44:	6899      	ldr	r1, [r3, #8]
 801da46:	1c96      	adds	r6, r2, #2
 801da48:	4401      	add	r1, r0
 801da4a:	615e      	str	r6, [r3, #20]
 801da4c:	608f      	str	r7, [r1, #8]
 801da4e:	6899      	ldr	r1, [r3, #8]
 801da50:	6926      	ldr	r6, [r4, #16]
 801da52:	4401      	add	r1, r0
 801da54:	1d17      	adds	r7, r2, #4
 801da56:	60ce      	str	r6, [r1, #12]
 801da58:	621c      	str	r4, [r3, #32]
 801da5a:	615f      	str	r7, [r3, #20]
 801da5c:	68e1      	ldr	r1, [r4, #12]
 801da5e:	f011 0107 	ands.w	r1, r1, #7
 801da62:	d120      	bne.n	801daa6 <nema_extend_bound_cl+0xda>
 801da64:	691e      	ldr	r6, [r3, #16]
 801da66:	3205      	adds	r2, #5
 801da68:	42b2      	cmp	r2, r6
 801da6a:	db23      	blt.n	801dab4 <nema_extend_bound_cl+0xe8>
 801da6c:	699a      	ldr	r2, [r3, #24]
 801da6e:	f022 0220 	bic.w	r2, r2, #32
 801da72:	619a      	str	r2, [r3, #24]
 801da74:	69a3      	ldr	r3, [r4, #24]
 801da76:	075a      	lsls	r2, r3, #29
 801da78:	d503      	bpl.n	801da82 <nema_extend_bound_cl+0xb6>
 801da7a:	6a24      	ldr	r4, [r4, #32]
 801da7c:	69a3      	ldr	r3, [r4, #24]
 801da7e:	075b      	lsls	r3, r3, #29
 801da80:	d4fb      	bmi.n	801da7a <nema_extend_bound_cl+0xae>
 801da82:	2000      	movs	r0, #0
 801da84:	602c      	str	r4, [r5, #0]
 801da86:	b01f      	add	sp, #124	@ 0x7c
 801da88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801da8a:	2900      	cmp	r1, #0
 801da8c:	bfb8      	it	lt
 801da8e:	3103      	addlt	r1, #3
 801da90:	1089      	asrs	r1, r1, #2
 801da92:	0049      	lsls	r1, r1, #1
 801da94:	4291      	cmp	r1, r2
 801da96:	bfcc      	ite	gt
 801da98:	4610      	movgt	r0, r2
 801da9a:	1a50      	suble	r0, r2, r1
 801da9c:	1a09      	subs	r1, r1, r0
 801da9e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 801daa2:	1049      	asrs	r1, r1, #1
 801daa4:	e7a6      	b.n	801d9f4 <nema_extend_bound_cl+0x28>
 801daa6:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 801daaa:	f7f3 f853 	bl	8010b54 <nema_set_error>
 801daae:	2000      	movs	r0, #0
 801dab0:	b01f      	add	sp, #124	@ 0x7c
 801dab2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801dab4:	f44f 26a0 	mov.w	r6, #327680	@ 0x50000
 801dab8:	689a      	ldr	r2, [r3, #8]
 801daba:	4410      	add	r0, r2
 801dabc:	e9c0 6104 	strd	r6, r1, [r0, #16]
 801dac0:	699a      	ldr	r2, [r3, #24]
 801dac2:	f022 0208 	bic.w	r2, r2, #8
 801dac6:	e7d2      	b.n	801da6e <nema_extend_bound_cl+0xa2>
 801dac8:	2028      	movs	r0, #40	@ 0x28
 801daca:	f7e5 f947 	bl	8002d5c <nema_host_malloc>
 801dace:	4604      	mov	r4, r0
 801dad0:	2800      	cmp	r0, #0
 801dad2:	d052      	beq.n	801db7a <nema_extend_bound_cl+0x1ae>
 801dad4:	1cb1      	adds	r1, r6, #2
 801dad6:	00c9      	lsls	r1, r1, #3
 801dad8:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 801dadc:	dd1a      	ble.n	801db14 <nema_extend_bound_cl+0x148>
 801dade:	466e      	mov	r6, sp
 801dae0:	4627      	mov	r7, r4
 801dae2:	4668      	mov	r0, sp
 801dae4:	f7ff ff3e 	bl	801d964 <nema_cl_create_sized>
 801dae8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801daea:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801daec:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801daee:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801daf0:	e896 0003 	ldmia.w	r6, {r0, r1}
 801daf4:	e887 0003 	stmia.w	r7, {r0, r1}
 801daf8:	68a3      	ldr	r3, [r4, #8]
 801dafa:	2b00      	cmp	r3, #0
 801dafc:	d034      	beq.n	801db68 <nema_extend_bound_cl+0x19c>
 801dafe:	682b      	ldr	r3, [r5, #0]
 801db00:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801db02:	2a00      	cmp	r2, #0
 801db04:	bf08      	it	eq
 801db06:	461a      	moveq	r2, r3
 801db08:	6262      	str	r2, [r4, #36]	@ 0x24
 801db0a:	699a      	ldr	r2, [r3, #24]
 801db0c:	f022 020c 	bic.w	r2, r2, #12
 801db10:	61a2      	str	r2, [r4, #24]
 801db12:	e788      	b.n	801da26 <nema_extend_bound_cl+0x5a>
 801db14:	a80a      	add	r0, sp, #40	@ 0x28
 801db16:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 801db1a:	f7ff ff23 	bl	801d964 <nema_cl_create_sized>
 801db1e:	2302      	movs	r3, #2
 801db20:	46a4      	mov	ip, r4
 801db22:	9310      	str	r3, [sp, #64]	@ 0x40
 801db24:	ae0a      	add	r6, sp, #40	@ 0x28
 801db26:	af14      	add	r7, sp, #80	@ 0x50
 801db28:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801db2a:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801db2c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801db2e:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801db30:	e896 0003 	ldmia.w	r6, {r0, r1}
 801db34:	ae14      	add	r6, sp, #80	@ 0x50
 801db36:	e887 0003 	stmia.w	r7, {r0, r1}
 801db3a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801db3c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801db40:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801db42:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801db46:	e897 0003 	ldmia.w	r7, {r0, r1}
 801db4a:	e88c 0003 	stmia.w	ip, {r0, r1}
 801db4e:	e7d3      	b.n	801daf8 <nema_extend_bound_cl+0x12c>
 801db50:	2008      	movs	r0, #8
 801db52:	f7f2 ffff 	bl	8010b54 <nema_set_error>
 801db56:	f04f 30ff 	mov.w	r0, #4294967295
 801db5a:	e7a9      	b.n	801dab0 <nema_extend_bound_cl+0xe4>
 801db5c:	2080      	movs	r0, #128	@ 0x80
 801db5e:	f7f2 fff9 	bl	8010b54 <nema_set_error>
 801db62:	f04f 30ff 	mov.w	r0, #4294967295
 801db66:	e7a3      	b.n	801dab0 <nema_extend_bound_cl+0xe4>
 801db68:	2010      	movs	r0, #16
 801db6a:	f7f2 fff3 	bl	8010b54 <nema_set_error>
 801db6e:	4620      	mov	r0, r4
 801db70:	f7e5 f8f2 	bl	8002d58 <nema_host_free>
 801db74:	f04f 30ff 	mov.w	r0, #4294967295
 801db78:	e79a      	b.n	801dab0 <nema_extend_bound_cl+0xe4>
 801db7a:	2010      	movs	r0, #16
 801db7c:	f7f2 ffea 	bl	8010b54 <nema_set_error>
 801db80:	f04f 30ff 	mov.w	r0, #4294967295
 801db84:	e794      	b.n	801dab0 <nema_extend_bound_cl+0xe4>
 801db86:	bf00      	nop
 801db88:	200833a0 	.word	0x200833a0

0801db8c <nema_cl_bind_circular>:
 801db8c:	b358      	cbz	r0, 801dbe6 <nema_cl_bind_circular+0x5a>
 801db8e:	68c3      	ldr	r3, [r0, #12]
 801db90:	f013 0207 	ands.w	r2, r3, #7
 801db94:	d117      	bne.n	801dbc6 <nema_cl_bind_circular+0x3a>
 801db96:	b4f0      	push	{r4, r5, r6, r7}
 801db98:	4c15      	ldr	r4, [pc, #84]	@ (801dbf0 <nema_cl_bind_circular+0x64>)
 801db9a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801db9c:	6821      	ldr	r1, [r4, #0]
 801db9e:	2b00      	cmp	r3, #0
 801dba0:	bf08      	it	eq
 801dba2:	4603      	moveq	r3, r0
 801dba4:	b141      	cbz	r1, 801dbb8 <nema_cl_bind_circular+0x2c>
 801dba6:	e9d1 5004 	ldrd	r5, r0, [r1, #16]
 801dbaa:	1c46      	adds	r6, r0, #1
 801dbac:	42ae      	cmp	r6, r5
 801dbae:	db0e      	blt.n	801dbce <nema_cl_bind_circular+0x42>
 801dbb0:	698a      	ldr	r2, [r1, #24]
 801dbb2:	f022 0220 	bic.w	r2, r2, #32
 801dbb6:	618a      	str	r2, [r1, #24]
 801dbb8:	699a      	ldr	r2, [r3, #24]
 801dbba:	6023      	str	r3, [r4, #0]
 801dbbc:	f042 0220 	orr.w	r2, r2, #32
 801dbc0:	619a      	str	r2, [r3, #24]
 801dbc2:	bcf0      	pop	{r4, r5, r6, r7}
 801dbc4:	4770      	bx	lr
 801dbc6:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 801dbca:	f7f2 bfc3 	b.w	8010b54 <nema_set_error>
 801dbce:	f44f 27a0 	mov.w	r7, #327680	@ 0x50000
 801dbd2:	688d      	ldr	r5, [r1, #8]
 801dbd4:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 801dbd8:	f845 7020 	str.w	r7, [r5, r0, lsl #2]
 801dbdc:	6072      	str	r2, [r6, #4]
 801dbde:	698a      	ldr	r2, [r1, #24]
 801dbe0:	f022 0208 	bic.w	r2, r2, #8
 801dbe4:	e7e5      	b.n	801dbb2 <nema_cl_bind_circular+0x26>
 801dbe6:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801dbea:	f7f2 bfb3 	b.w	8010b54 <nema_set_error>
 801dbee:	bf00      	nop
 801dbf0:	200833a0 	.word	0x200833a0

0801dbf4 <nema_cl_unbind>:
 801dbf4:	4910      	ldr	r1, [pc, #64]	@ (801dc38 <nema_cl_unbind+0x44>)
 801dbf6:	680b      	ldr	r3, [r1, #0]
 801dbf8:	b1d3      	cbz	r3, 801dc30 <nema_cl_unbind+0x3c>
 801dbfa:	b430      	push	{r4, r5}
 801dbfc:	e9d3 0204 	ldrd	r0, r2, [r3, #16]
 801dc00:	1c54      	adds	r4, r2, #1
 801dc02:	4284      	cmp	r4, r0
 801dc04:	db07      	blt.n	801dc16 <nema_cl_unbind+0x22>
 801dc06:	699a      	ldr	r2, [r3, #24]
 801dc08:	f022 0220 	bic.w	r2, r2, #32
 801dc0c:	619a      	str	r2, [r3, #24]
 801dc0e:	2300      	movs	r3, #0
 801dc10:	600b      	str	r3, [r1, #0]
 801dc12:	bc30      	pop	{r4, r5}
 801dc14:	4770      	bx	lr
 801dc16:	f44f 25a0 	mov.w	r5, #327680	@ 0x50000
 801dc1a:	2400      	movs	r4, #0
 801dc1c:	6898      	ldr	r0, [r3, #8]
 801dc1e:	f840 5022 	str.w	r5, [r0, r2, lsl #2]
 801dc22:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 801dc26:	6054      	str	r4, [r2, #4]
 801dc28:	699a      	ldr	r2, [r3, #24]
 801dc2a:	f022 0208 	bic.w	r2, r2, #8
 801dc2e:	e7eb      	b.n	801dc08 <nema_cl_unbind+0x14>
 801dc30:	2300      	movs	r3, #0
 801dc32:	600b      	str	r3, [r1, #0]
 801dc34:	4770      	bx	lr
 801dc36:	bf00      	nop
 801dc38:	200833a0 	.word	0x200833a0

0801dc3c <nema_cl_get_bound>:
 801dc3c:	4b01      	ldr	r3, [pc, #4]	@ (801dc44 <nema_cl_get_bound+0x8>)
 801dc3e:	6818      	ldr	r0, [r3, #0]
 801dc40:	4770      	bx	lr
 801dc42:	bf00      	nop
 801dc44:	200833a0 	.word	0x200833a0

0801dc48 <nema_cl_submit_no_irq>:
 801dc48:	2800      	cmp	r0, #0
 801dc4a:	d052      	beq.n	801dcf2 <nema_cl_submit_no_irq+0xaa>
 801dc4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dc4e:	6944      	ldr	r4, [r0, #20]
 801dc50:	b1f4      	cbz	r4, 801dc90 <nema_cl_submit_no_irq+0x48>
 801dc52:	6983      	ldr	r3, [r0, #24]
 801dc54:	4605      	mov	r5, r0
 801dc56:	069a      	lsls	r2, r3, #26
 801dc58:	d51b      	bpl.n	801dc92 <nema_cl_submit_no_irq+0x4a>
 801dc5a:	6902      	ldr	r2, [r0, #16]
 801dc5c:	2a00      	cmp	r2, #0
 801dc5e:	bfb8      	it	lt
 801dc60:	3203      	addlt	r2, #3
 801dc62:	1092      	asrs	r2, r2, #2
 801dc64:	0056      	lsls	r6, r2, #1
 801dc66:	42b4      	cmp	r4, r6
 801dc68:	da3d      	bge.n	801dce6 <nema_cl_submit_no_irq+0x9e>
 801dc6a:	68c7      	ldr	r7, [r0, #12]
 801dc6c:	071b      	lsls	r3, r3, #28
 801dc6e:	d549      	bpl.n	801dd04 <nema_cl_submit_no_irq+0xbc>
 801dc70:	69e8      	ldr	r0, [r5, #28]
 801dc72:	2800      	cmp	r0, #0
 801dc74:	da41      	bge.n	801dcfa <nema_cl_submit_no_irq+0xb2>
 801dc76:	f04f 33ff 	mov.w	r3, #4294967295
 801dc7a:	61eb      	str	r3, [r5, #28]
 801dc7c:	4621      	mov	r1, r4
 801dc7e:	4638      	mov	r0, r7
 801dc80:	f7f2 fd54 	bl	801072c <nema_rb_submit_cmdlist2>
 801dc84:	696b      	ldr	r3, [r5, #20]
 801dc86:	61e8      	str	r0, [r5, #28]
 801dc88:	42b3      	cmp	r3, r6
 801dc8a:	bfa8      	it	ge
 801dc8c:	2600      	movge	r6, #0
 801dc8e:	616e      	str	r6, [r5, #20]
 801dc90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dc92:	4604      	mov	r4, r0
 801dc94:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 801dc98:	e012      	b.n	801dcc0 <nema_cl_submit_no_irq+0x78>
 801dc9a:	6923      	ldr	r3, [r4, #16]
 801dc9c:	6949      	ldr	r1, [r1, #20]
 801dc9e:	4433      	add	r3, r6
 801dca0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 801dca4:	69a3      	ldr	r3, [r4, #24]
 801dca6:	4620      	mov	r0, r4
 801dca8:	f023 0308 	bic.w	r3, r3, #8
 801dcac:	61a3      	str	r3, [r4, #24]
 801dcae:	f7e5 f90b 	bl	8002ec8 <nema_buffer_flush>
 801dcb2:	69a3      	ldr	r3, [r4, #24]
 801dcb4:	f043 0308 	orr.w	r3, r3, #8
 801dcb8:	61a3      	str	r3, [r4, #24]
 801dcba:	6a24      	ldr	r4, [r4, #32]
 801dcbc:	b134      	cbz	r4, 801dccc <nema_cl_submit_no_irq+0x84>
 801dcbe:	69a3      	ldr	r3, [r4, #24]
 801dcc0:	0758      	lsls	r0, r3, #29
 801dcc2:	68a2      	ldr	r2, [r4, #8]
 801dcc4:	6a21      	ldr	r1, [r4, #32]
 801dcc6:	d4e8      	bmi.n	801dc9a <nema_cl_submit_no_irq+0x52>
 801dcc8:	071b      	lsls	r3, r3, #28
 801dcca:	d523      	bpl.n	801dd14 <nema_cl_submit_no_irq+0xcc>
 801dccc:	2000      	movs	r0, #0
 801dcce:	f7e5 f8fc 	bl	8002eca <nema_mutex_lock>
 801dcd2:	6969      	ldr	r1, [r5, #20]
 801dcd4:	4628      	mov	r0, r5
 801dcd6:	f7f2 fdad 	bl	8010834 <nema_rb_submit_cmdlist>
 801dcda:	61e8      	str	r0, [r5, #28]
 801dcdc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801dce0:	2000      	movs	r0, #0
 801dce2:	f7e5 b8f4 	b.w	8002ece <nema_mutex_unlock>
 801dce6:	d0d3      	beq.n	801dc90 <nema_cl_submit_no_irq+0x48>
 801dce8:	68c7      	ldr	r7, [r0, #12]
 801dcea:	1ba4      	subs	r4, r4, r6
 801dcec:	eb07 07c2 	add.w	r7, r7, r2, lsl #3
 801dcf0:	e7bc      	b.n	801dc6c <nema_cl_submit_no_irq+0x24>
 801dcf2:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801dcf6:	f7f2 bf2d 	b.w	8010b54 <nema_set_error>
 801dcfa:	f7e5 f81f 	bl	8002d3c <nema_wait_irq_cl>
 801dcfe:	2800      	cmp	r0, #0
 801dd00:	dab9      	bge.n	801dc76 <nema_cl_submit_no_irq+0x2e>
 801dd02:	e7bb      	b.n	801dc7c <nema_cl_submit_no_irq+0x34>
 801dd04:	4628      	mov	r0, r5
 801dd06:	f7e5 f8df 	bl	8002ec8 <nema_buffer_flush>
 801dd0a:	69ab      	ldr	r3, [r5, #24]
 801dd0c:	f043 0308 	orr.w	r3, r3, #8
 801dd10:	61ab      	str	r3, [r5, #24]
 801dd12:	e7ad      	b.n	801dc70 <nema_cl_submit_no_irq+0x28>
 801dd14:	4620      	mov	r0, r4
 801dd16:	f7e5 f8d7 	bl	8002ec8 <nema_buffer_flush>
 801dd1a:	69a3      	ldr	r3, [r4, #24]
 801dd1c:	f043 0308 	orr.w	r3, r3, #8
 801dd20:	61a3      	str	r3, [r4, #24]
 801dd22:	e7d3      	b.n	801dccc <nema_cl_submit_no_irq+0x84>

0801dd24 <nema_cl_get_space>:
 801dd24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dd26:	4e2c      	ldr	r6, [pc, #176]	@ (801ddd8 <nema_cl_get_space+0xb4>)
 801dd28:	6834      	ldr	r4, [r6, #0]
 801dd2a:	2c00      	cmp	r4, #0
 801dd2c:	d04d      	beq.n	801ddca <nema_cl_get_space+0xa6>
 801dd2e:	69a7      	ldr	r7, [r4, #24]
 801dd30:	4605      	mov	r5, r0
 801dd32:	f027 0108 	bic.w	r1, r7, #8
 801dd36:	f017 0720 	ands.w	r7, r7, #32
 801dd3a:	61a1      	str	r1, [r4, #24]
 801dd3c:	6923      	ldr	r3, [r4, #16]
 801dd3e:	6961      	ldr	r1, [r4, #20]
 801dd40:	d016      	beq.n	801dd70 <nema_cl_get_space+0x4c>
 801dd42:	2b00      	cmp	r3, #0
 801dd44:	bfb8      	it	lt
 801dd46:	3303      	addlt	r3, #3
 801dd48:	109b      	asrs	r3, r3, #2
 801dd4a:	005b      	lsls	r3, r3, #1
 801dd4c:	4299      	cmp	r1, r3
 801dd4e:	bfb4      	ite	lt
 801dd50:	460a      	movlt	r2, r1
 801dd52:	1aca      	subge	r2, r1, r3
 801dd54:	1a9a      	subs	r2, r3, r2
 801dd56:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 801dd5a:	3001      	adds	r0, #1
 801dd5c:	ebb0 0f62 	cmp.w	r0, r2, asr #1
 801dd60:	da1a      	bge.n	801dd98 <nema_cl_get_space+0x74>
 801dd62:	68a0      	ldr	r0, [r4, #8]
 801dd64:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801dd68:	6165      	str	r5, [r4, #20]
 801dd6a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801dd6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dd70:	1a5b      	subs	r3, r3, r1
 801dd72:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801dd76:	105b      	asrs	r3, r3, #1
 801dd78:	3b01      	subs	r3, #1
 801dd7a:	4283      	cmp	r3, r0
 801dd7c:	dcf1      	bgt.n	801dd62 <nema_cl_get_space+0x3e>
 801dd7e:	f7ff fe25 	bl	801d9cc <nema_extend_bound_cl>
 801dd82:	2800      	cmp	r0, #0
 801dd84:	db26      	blt.n	801ddd4 <nema_cl_get_space+0xb0>
 801dd86:	6834      	ldr	r4, [r6, #0]
 801dd88:	6961      	ldr	r1, [r4, #20]
 801dd8a:	68a0      	ldr	r0, [r4, #8]
 801dd8c:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801dd90:	6165      	str	r5, [r4, #20]
 801dd92:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801dd96:	e7ea      	b.n	801dd6e <nema_cl_get_space+0x4a>
 801dd98:	2900      	cmp	r1, #0
 801dd9a:	d0e2      	beq.n	801dd62 <nema_cl_get_space+0x3e>
 801dd9c:	4299      	cmp	r1, r3
 801dd9e:	d0e0      	beq.n	801dd62 <nema_cl_get_space+0x3e>
 801dda0:	4620      	mov	r0, r4
 801dda2:	f7ff ff51 	bl	801dc48 <nema_cl_submit_no_irq>
 801dda6:	69e0      	ldr	r0, [r4, #28]
 801dda8:	f7f2 fe10 	bl	80109cc <nema_rb_submit_cl_id>
 801ddac:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801ddb0:	69e0      	ldr	r0, [r4, #28]
 801ddb2:	4298      	cmp	r0, r3
 801ddb4:	d1e7      	bne.n	801dd86 <nema_cl_get_space+0x62>
 801ddb6:	f7e4 ffc1 	bl	8002d3c <nema_wait_irq_cl>
 801ddba:	2800      	cmp	r0, #0
 801ddbc:	dbe3      	blt.n	801dd86 <nema_cl_get_space+0x62>
 801ddbe:	f04f 33ff 	mov.w	r3, #4294967295
 801ddc2:	61e3      	str	r3, [r4, #28]
 801ddc4:	6834      	ldr	r4, [r6, #0]
 801ddc6:	6961      	ldr	r1, [r4, #20]
 801ddc8:	e7cb      	b.n	801dd62 <nema_cl_get_space+0x3e>
 801ddca:	2080      	movs	r0, #128	@ 0x80
 801ddcc:	f7f2 fec2 	bl	8010b54 <nema_set_error>
 801ddd0:	4620      	mov	r0, r4
 801ddd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ddd4:	4638      	mov	r0, r7
 801ddd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ddd8:	200833a0 	.word	0x200833a0

0801dddc <nema_cl_add_cmd>:
 801dddc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801dde0:	4e2e      	ldr	r6, [pc, #184]	@ (801de9c <nema_cl_add_cmd+0xc0>)
 801dde2:	4680      	mov	r8, r0
 801dde4:	6834      	ldr	r4, [r6, #0]
 801dde6:	460f      	mov	r7, r1
 801dde8:	b35c      	cbz	r4, 801de42 <nema_cl_add_cmd+0x66>
 801ddea:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
 801ddee:	f025 0308 	bic.w	r3, r5, #8
 801ddf2:	f015 0020 	ands.w	r0, r5, #32
 801ddf6:	61a3      	str	r3, [r4, #24]
 801ddf8:	6923      	ldr	r3, [r4, #16]
 801ddfa:	d016      	beq.n	801de2a <nema_cl_add_cmd+0x4e>
 801ddfc:	2b00      	cmp	r3, #0
 801ddfe:	bfb8      	it	lt
 801de00:	3303      	addlt	r3, #3
 801de02:	109b      	asrs	r3, r3, #2
 801de04:	005b      	lsls	r3, r3, #1
 801de06:	429a      	cmp	r2, r3
 801de08:	bfb4      	ite	lt
 801de0a:	4611      	movlt	r1, r2
 801de0c:	1ad1      	subge	r1, r2, r3
 801de0e:	1a59      	subs	r1, r3, r1
 801de10:	2903      	cmp	r1, #3
 801de12:	dd2a      	ble.n	801de6a <nema_cl_add_cmd+0x8e>
 801de14:	1c51      	adds	r1, r2, #1
 801de16:	68a0      	ldr	r0, [r4, #8]
 801de18:	1c93      	adds	r3, r2, #2
 801de1a:	f840 8022 	str.w	r8, [r0, r2, lsl #2]
 801de1e:	68a2      	ldr	r2, [r4, #8]
 801de20:	f842 7021 	str.w	r7, [r2, r1, lsl #2]
 801de24:	6163      	str	r3, [r4, #20]
 801de26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801de2a:	07a9      	lsls	r1, r5, #30
 801de2c:	d515      	bpl.n	801de5a <nema_cl_add_cmd+0x7e>
 801de2e:	1d11      	adds	r1, r2, #4
 801de30:	4299      	cmp	r1, r3
 801de32:	dbef      	blt.n	801de14 <nema_cl_add_cmd+0x38>
 801de34:	f7ff fdca 	bl	801d9cc <nema_extend_bound_cl>
 801de38:	2800      	cmp	r0, #0
 801de3a:	dbf4      	blt.n	801de26 <nema_cl_add_cmd+0x4a>
 801de3c:	6834      	ldr	r4, [r6, #0]
 801de3e:	6962      	ldr	r2, [r4, #20]
 801de40:	e7e8      	b.n	801de14 <nema_cl_add_cmd+0x38>
 801de42:	4620      	mov	r0, r4
 801de44:	f7e5 f841 	bl	8002eca <nema_mutex_lock>
 801de48:	4640      	mov	r0, r8
 801de4a:	4639      	mov	r1, r7
 801de4c:	f7f2 fcf6 	bl	801083c <nema_rb_inline_cmd>
 801de50:	4620      	mov	r0, r4
 801de52:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801de56:	f7e5 b83a 	b.w	8002ece <nema_mutex_unlock>
 801de5a:	1c51      	adds	r1, r2, #1
 801de5c:	4299      	cmp	r1, r3
 801de5e:	dbda      	blt.n	801de16 <nema_cl_add_cmd+0x3a>
 801de60:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801de64:	2008      	movs	r0, #8
 801de66:	f7f2 be75 	b.w	8010b54 <nema_set_error>
 801de6a:	b1a2      	cbz	r2, 801de96 <nema_cl_add_cmd+0xba>
 801de6c:	429a      	cmp	r2, r3
 801de6e:	d0d1      	beq.n	801de14 <nema_cl_add_cmd+0x38>
 801de70:	4620      	mov	r0, r4
 801de72:	f7ff fee9 	bl	801dc48 <nema_cl_submit_no_irq>
 801de76:	69e0      	ldr	r0, [r4, #28]
 801de78:	f7f2 fda8 	bl	80109cc <nema_rb_submit_cl_id>
 801de7c:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801de80:	69e0      	ldr	r0, [r4, #28]
 801de82:	4298      	cmp	r0, r3
 801de84:	d1da      	bne.n	801de3c <nema_cl_add_cmd+0x60>
 801de86:	f7e4 ff59 	bl	8002d3c <nema_wait_irq_cl>
 801de8a:	2800      	cmp	r0, #0
 801de8c:	bfa4      	itt	ge
 801de8e:	f04f 33ff 	movge.w	r3, #4294967295
 801de92:	61e3      	strge	r3, [r4, #28]
 801de94:	e7d2      	b.n	801de3c <nema_cl_add_cmd+0x60>
 801de96:	2101      	movs	r1, #1
 801de98:	e7bd      	b.n	801de16 <nema_cl_add_cmd+0x3a>
 801de9a:	bf00      	nop
 801de9c:	200833a0 	.word	0x200833a0

0801dea0 <nema_cl_submit>:
 801dea0:	2800      	cmp	r0, #0
 801dea2:	d066      	beq.n	801df72 <nema_cl_submit+0xd2>
 801dea4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dea6:	6944      	ldr	r4, [r0, #20]
 801dea8:	2c00      	cmp	r4, #0
 801deaa:	d061      	beq.n	801df70 <nema_cl_submit+0xd0>
 801deac:	6983      	ldr	r3, [r0, #24]
 801deae:	4605      	mov	r5, r0
 801deb0:	069a      	lsls	r2, r3, #26
 801deb2:	d51f      	bpl.n	801def4 <nema_cl_submit+0x54>
 801deb4:	6902      	ldr	r2, [r0, #16]
 801deb6:	2a00      	cmp	r2, #0
 801deb8:	bfb8      	it	lt
 801deba:	3203      	addlt	r2, #3
 801debc:	1092      	asrs	r2, r2, #2
 801debe:	0056      	lsls	r6, r2, #1
 801dec0:	42b4      	cmp	r4, r6
 801dec2:	d055      	beq.n	801df70 <nema_cl_submit+0xd0>
 801dec4:	68c7      	ldr	r7, [r0, #12]
 801dec6:	bfa4      	itt	ge
 801dec8:	1ba4      	subge	r4, r4, r6
 801deca:	eb07 07c2 	addge.w	r7, r7, r2, lsl #3
 801dece:	071b      	lsls	r3, r3, #28
 801ded0:	d553      	bpl.n	801df7a <nema_cl_submit+0xda>
 801ded2:	69e8      	ldr	r0, [r5, #28]
 801ded4:	2800      	cmp	r0, #0
 801ded6:	da57      	bge.n	801df88 <nema_cl_submit+0xe8>
 801ded8:	f04f 33ff 	mov.w	r3, #4294967295
 801dedc:	61eb      	str	r3, [r5, #28]
 801dede:	4621      	mov	r1, r4
 801dee0:	4638      	mov	r0, r7
 801dee2:	f7f2 fc23 	bl	801072c <nema_rb_submit_cmdlist2>
 801dee6:	696b      	ldr	r3, [r5, #20]
 801dee8:	61e8      	str	r0, [r5, #28]
 801deea:	429e      	cmp	r6, r3
 801deec:	bfd8      	it	le
 801deee:	2600      	movle	r6, #0
 801def0:	616e      	str	r6, [r5, #20]
 801def2:	e02f      	b.n	801df54 <nema_cl_submit+0xb4>
 801def4:	4604      	mov	r4, r0
 801def6:	f06f 4640 	mvn.w	r6, #3221225472	@ 0xc0000000
 801defa:	e012      	b.n	801df22 <nema_cl_submit+0x82>
 801defc:	6923      	ldr	r3, [r4, #16]
 801defe:	6949      	ldr	r1, [r1, #20]
 801df00:	4433      	add	r3, r6
 801df02:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 801df06:	69a3      	ldr	r3, [r4, #24]
 801df08:	4620      	mov	r0, r4
 801df0a:	f023 0308 	bic.w	r3, r3, #8
 801df0e:	61a3      	str	r3, [r4, #24]
 801df10:	f7e4 ffda 	bl	8002ec8 <nema_buffer_flush>
 801df14:	69a3      	ldr	r3, [r4, #24]
 801df16:	f043 0308 	orr.w	r3, r3, #8
 801df1a:	61a3      	str	r3, [r4, #24]
 801df1c:	6a24      	ldr	r4, [r4, #32]
 801df1e:	b16c      	cbz	r4, 801df3c <nema_cl_submit+0x9c>
 801df20:	69a3      	ldr	r3, [r4, #24]
 801df22:	0758      	lsls	r0, r3, #29
 801df24:	68a2      	ldr	r2, [r4, #8]
 801df26:	6a21      	ldr	r1, [r4, #32]
 801df28:	d4e8      	bmi.n	801defc <nema_cl_submit+0x5c>
 801df2a:	071b      	lsls	r3, r3, #28
 801df2c:	d406      	bmi.n	801df3c <nema_cl_submit+0x9c>
 801df2e:	4620      	mov	r0, r4
 801df30:	f7e4 ffca 	bl	8002ec8 <nema_buffer_flush>
 801df34:	69a3      	ldr	r3, [r4, #24]
 801df36:	f043 0308 	orr.w	r3, r3, #8
 801df3a:	61a3      	str	r3, [r4, #24]
 801df3c:	2000      	movs	r0, #0
 801df3e:	f7e4 ffc4 	bl	8002eca <nema_mutex_lock>
 801df42:	6969      	ldr	r1, [r5, #20]
 801df44:	4628      	mov	r0, r5
 801df46:	f7f2 fc75 	bl	8010834 <nema_rb_submit_cmdlist>
 801df4a:	61e8      	str	r0, [r5, #28]
 801df4c:	2000      	movs	r0, #0
 801df4e:	f7e4 ffbe 	bl	8002ece <nema_mutex_unlock>
 801df52:	69e8      	ldr	r0, [r5, #28]
 801df54:	f7f2 fd3a 	bl	80109cc <nema_rb_submit_cl_id>
 801df58:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 801df5c:	69e8      	ldr	r0, [r5, #28]
 801df5e:	4298      	cmp	r0, r3
 801df60:	d106      	bne.n	801df70 <nema_cl_submit+0xd0>
 801df62:	f7e4 feeb 	bl	8002d3c <nema_wait_irq_cl>
 801df66:	2800      	cmp	r0, #0
 801df68:	db02      	blt.n	801df70 <nema_cl_submit+0xd0>
 801df6a:	f04f 33ff 	mov.w	r3, #4294967295
 801df6e:	61eb      	str	r3, [r5, #28]
 801df70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801df72:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801df76:	f7f2 bded 	b.w	8010b54 <nema_set_error>
 801df7a:	f7e4 ffa5 	bl	8002ec8 <nema_buffer_flush>
 801df7e:	69ab      	ldr	r3, [r5, #24]
 801df80:	f043 0308 	orr.w	r3, r3, #8
 801df84:	61ab      	str	r3, [r5, #24]
 801df86:	e7a4      	b.n	801ded2 <nema_cl_submit+0x32>
 801df88:	f7e4 fed8 	bl	8002d3c <nema_wait_irq_cl>
 801df8c:	2800      	cmp	r0, #0
 801df8e:	daa3      	bge.n	801ded8 <nema_cl_submit+0x38>
 801df90:	e7a5      	b.n	801dede <nema_cl_submit+0x3e>
 801df92:	bf00      	nop

0801df94 <nema_cl_wait>:
 801df94:	b510      	push	{r4, lr}
 801df96:	b170      	cbz	r0, 801dfb6 <nema_cl_wait+0x22>
 801df98:	4604      	mov	r4, r0
 801df9a:	69c0      	ldr	r0, [r0, #28]
 801df9c:	2800      	cmp	r0, #0
 801df9e:	da04      	bge.n	801dfaa <nema_cl_wait+0x16>
 801dfa0:	f04f 33ff 	mov.w	r3, #4294967295
 801dfa4:	61e3      	str	r3, [r4, #28]
 801dfa6:	2000      	movs	r0, #0
 801dfa8:	bd10      	pop	{r4, pc}
 801dfaa:	f7e4 fec7 	bl	8002d3c <nema_wait_irq_cl>
 801dfae:	2800      	cmp	r0, #0
 801dfb0:	daf6      	bge.n	801dfa0 <nema_cl_wait+0xc>
 801dfb2:	2000      	movs	r0, #0
 801dfb4:	bd10      	pop	{r4, pc}
 801dfb6:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 801dfba:	f7f2 fdcb 	bl	8010b54 <nema_set_error>
 801dfbe:	f04f 30ff 	mov.w	r0, #4294967295
 801dfc2:	bd10      	pop	{r4, pc}

0801dfc4 <nema_blender_init>:
 801dfc4:	b530      	push	{r4, r5, lr}
 801dfc6:	b085      	sub	sp, #20
 801dfc8:	466d      	mov	r5, sp
 801dfca:	2418      	movs	r4, #24
 801dfcc:	4b11      	ldr	r3, [pc, #68]	@ (801e014 <nema_blender_init+0x50>)
 801dfce:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801dfd0:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 801dfd4:	2101      	movs	r1, #1
 801dfd6:	4622      	mov	r2, r4
 801dfd8:	4628      	mov	r0, r5
 801dfda:	440c      	add	r4, r1
 801dfdc:	f7f4 f95c 	bl	8012298 <nema_load_frag_shader>
 801dfe0:	2c1f      	cmp	r4, #31
 801dfe2:	d1f7      	bne.n	801dfd4 <nema_blender_init+0x10>
 801dfe4:	4622      	mov	r2, r4
 801dfe6:	2101      	movs	r1, #1
 801dfe8:	a802      	add	r0, sp, #8
 801dfea:	f7f4 f955 	bl	8012298 <nema_load_frag_shader>
 801dfee:	f7f3 ffeb 	bl	8011fc8 <nema_readHwConfig>
 801dff2:	f000 5080 	and.w	r0, r0, #268435456	@ 0x10000000
 801dff6:	2800      	cmp	r0, #0
 801dff8:	bf14      	ite	ne
 801dffa:	2201      	movne	r2, #1
 801dffc:	2200      	moveq	r2, #0
 801dffe:	4b06      	ldr	r3, [pc, #24]	@ (801e018 <nema_blender_init+0x54>)
 801e000:	701a      	strb	r2, [r3, #0]
 801e002:	d005      	beq.n	801e010 <nema_blender_init+0x4c>
 801e004:	2200      	movs	r2, #0
 801e006:	4b05      	ldr	r3, [pc, #20]	@ (801e01c <nema_blender_init+0x58>)
 801e008:	2001      	movs	r0, #1
 801e00a:	601a      	str	r2, [r3, #0]
 801e00c:	f7f4 f964 	bl	80122d8 <nema_set_rop_blend_mode>
 801e010:	b005      	add	sp, #20
 801e012:	bd30      	pop	{r4, r5, pc}
 801e014:	08033658 	.word	0x08033658
 801e018:	200833a5 	.word	0x200833a5
 801e01c:	200001e8 	.word	0x200001e8

0801e020 <nema_set_blend>:
 801e020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e024:	4ca5      	ldr	r4, [pc, #660]	@ (801e2bc <nema_set_blend+0x29c>)
 801e026:	4683      	mov	fp, r0
 801e028:	7820      	ldrb	r0, [r4, #0]
 801e02a:	b0a7      	sub	sp, #156	@ 0x9c
 801e02c:	9102      	str	r1, [sp, #8]
 801e02e:	9200      	str	r2, [sp, #0]
 801e030:	2800      	cmp	r0, #0
 801e032:	f040 8233 	bne.w	801e49c <nema_set_blend+0x47c>
 801e036:	469a      	mov	sl, r3
 801e038:	465c      	mov	r4, fp
 801e03a:	ea4f 535b 	mov.w	r3, fp, lsr #21
 801e03e:	055b      	lsls	r3, r3, #21
 801e040:	930e      	str	r3, [sp, #56]	@ 0x38
 801e042:	f40b 0300 	and.w	r3, fp, #8388608	@ 0x800000
 801e046:	930c      	str	r3, [sp, #48]	@ 0x30
 801e048:	f40b 0380 	and.w	r3, fp, #4194304	@ 0x400000
 801e04c:	f00b 010f 	and.w	r1, fp, #15
 801e050:	930d      	str	r3, [sp, #52]	@ 0x34
 801e052:	f40b 1300 	and.w	r3, fp, #2097152	@ 0x200000
 801e056:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e058:	9101      	str	r1, [sp, #4]
 801e05a:	b2d2      	uxtb	r2, r2
 801e05c:	fa5f f38a 	uxtb.w	r3, sl
 801e060:	f3cb 2903 	ubfx	r9, fp, #8, #4
 801e064:	f00b 7100 	and.w	r1, fp, #33554432	@ 0x2000000
 801e068:	f3cb 6840 	ubfx	r8, fp, #25, #1
 801e06c:	9d02      	ldr	r5, [sp, #8]
 801e06e:	b2e8      	uxtb	r0, r5
 801e070:	2804      	cmp	r0, #4
 801e072:	4628      	mov	r0, r5
 801e074:	bf28      	it	cs
 801e076:	2000      	movcs	r0, #0
 801e078:	2a04      	cmp	r2, #4
 801e07a:	9a00      	ldr	r2, [sp, #0]
 801e07c:	bf28      	it	cs
 801e07e:	f04f 32ff 	movcs.w	r2, #4294967295
 801e082:	2b04      	cmp	r3, #4
 801e084:	9002      	str	r0, [sp, #8]
 801e086:	9200      	str	r2, [sp, #0]
 801e088:	bf28      	it	cs
 801e08a:	4682      	movcs	sl, r0
 801e08c:	4602      	mov	r2, r0
 801e08e:	bf34      	ite	cc
 801e090:	4650      	movcc	r0, sl
 801e092:	2002      	movcs	r0, #2
 801e094:	4b8a      	ldr	r3, [pc, #552]	@ (801e2c0 <nema_set_blend+0x2a0>)
 801e096:	9010      	str	r0, [sp, #64]	@ 0x40
 801e098:	781b      	ldrb	r3, [r3, #0]
 801e09a:	b14b      	cbz	r3, 801e0b0 <nema_set_blend+0x90>
 801e09c:	f01b 7380 	ands.w	r3, fp, #16777216	@ 0x1000000
 801e0a0:	9303      	str	r3, [sp, #12]
 801e0a2:	d102      	bne.n	801e0aa <nema_set_blend+0x8a>
 801e0a4:	4552      	cmp	r2, sl
 801e0a6:	f000 830c 	beq.w	801e6c2 <nema_set_blend+0x6a2>
 801e0aa:	2001      	movs	r0, #1
 801e0ac:	f7f4 f914 	bl	80122d8 <nema_set_rop_blend_mode>
 801e0b0:	2c00      	cmp	r4, #0
 801e0b2:	bfac      	ite	ge
 801e0b4:	4642      	movge	r2, r8
 801e0b6:	2201      	movlt	r2, #1
 801e0b8:	4b82      	ldr	r3, [pc, #520]	@ (801e2c4 <nema_set_blend+0x2a4>)
 801e0ba:	f1bb 0f01 	cmp.w	fp, #1
 801e0be:	789b      	ldrb	r3, [r3, #2]
 801e0c0:	9207      	str	r2, [sp, #28]
 801e0c2:	9305      	str	r3, [sp, #20]
 801e0c4:	f000 80e0 	beq.w	801e288 <nema_set_blend+0x268>
 801e0c8:	f00b 4380 	and.w	r3, fp, #1073741824	@ 0x40000000
 801e0cc:	9315      	str	r3, [sp, #84]	@ 0x54
 801e0ce:	f3cb 7380 	ubfx	r3, fp, #30, #1
 801e0d2:	9306      	str	r3, [sp, #24]
 801e0d4:	f00b 5300 	and.w	r3, fp, #536870912	@ 0x20000000
 801e0d8:	9309      	str	r3, [sp, #36]	@ 0x24
 801e0da:	9b01      	ldr	r3, [sp, #4]
 801e0dc:	f00b 5280 	and.w	r2, fp, #268435456	@ 0x10000000
 801e0e0:	2b05      	cmp	r3, #5
 801e0e2:	f240 80df 	bls.w	801e2a4 <nema_set_blend+0x284>
 801e0e6:	2301      	movs	r3, #1
 801e0e8:	930a      	str	r3, [sp, #40]	@ 0x28
 801e0ea:	9304      	str	r3, [sp, #16]
 801e0ec:	2303      	movs	r3, #3
 801e0ee:	4976      	ldr	r1, [pc, #472]	@ (801e2c8 <nema_set_blend+0x2a8>)
 801e0f0:	9303      	str	r3, [sp, #12]
 801e0f2:	9108      	str	r1, [sp, #32]
 801e0f4:	4d75      	ldr	r5, [pc, #468]	@ (801e2cc <nema_set_blend+0x2ac>)
 801e0f6:	2a00      	cmp	r2, #0
 801e0f8:	4b75      	ldr	r3, [pc, #468]	@ (801e2d0 <nema_set_blend+0x2b0>)
 801e0fa:	bf18      	it	ne
 801e0fc:	462b      	movne	r3, r5
 801e0fe:	f105 4500 	add.w	r5, r5, #2147483648	@ 0x80000000
 801e102:	f105 0502 	add.w	r5, r5, #2
 801e106:	9312      	str	r3, [sp, #72]	@ 0x48
 801e108:	4b72      	ldr	r3, [pc, #456]	@ (801e2d4 <nema_set_blend+0x2b4>)
 801e10a:	bf08      	it	eq
 801e10c:	462b      	moveq	r3, r5
 801e10e:	f8df e20c 	ldr.w	lr, [pc, #524]	@ 801e31c <nema_set_blend+0x2fc>
 801e112:	f8df c20c 	ldr.w	ip, [pc, #524]	@ 801e320 <nema_set_blend+0x300>
 801e116:	9311      	str	r3, [sp, #68]	@ 0x44
 801e118:	bf14      	ite	ne
 801e11a:	4673      	movne	r3, lr
 801e11c:	4663      	moveq	r3, ip
 801e11e:	4f6e      	ldr	r7, [pc, #440]	@ (801e2d8 <nema_set_blend+0x2b8>)
 801e120:	9314      	str	r3, [sp, #80]	@ 0x50
 801e122:	4b6e      	ldr	r3, [pc, #440]	@ (801e2dc <nema_set_blend+0x2bc>)
 801e124:	bf18      	it	ne
 801e126:	463b      	movne	r3, r7
 801e128:	f5a5 25c8 	sub.w	r5, r5, #409600	@ 0x64000
 801e12c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e12e:	4b6c      	ldr	r3, [pc, #432]	@ (801e2e0 <nema_set_blend+0x2c0>)
 801e130:	f1a5 0542 	sub.w	r5, r5, #66	@ 0x42
 801e134:	496b      	ldr	r1, [pc, #428]	@ (801e2e4 <nema_set_blend+0x2c4>)
 801e136:	bf18      	it	ne
 801e138:	4619      	movne	r1, r3
 801e13a:	f1a3 033e 	sub.w	r3, r3, #62	@ 0x3e
 801e13e:	bf18      	it	ne
 801e140:	462b      	movne	r3, r5
 801e142:	4e69      	ldr	r6, [pc, #420]	@ (801e2e8 <nema_set_blend+0x2c8>)
 801e144:	4f69      	ldr	r7, [pc, #420]	@ (801e2ec <nema_set_blend+0x2cc>)
 801e146:	461d      	mov	r5, r3
 801e148:	4b69      	ldr	r3, [pc, #420]	@ (801e2f0 <nema_set_blend+0x2d0>)
 801e14a:	486a      	ldr	r0, [pc, #424]	@ (801e2f4 <nema_set_blend+0x2d4>)
 801e14c:	bf18      	it	ne
 801e14e:	4630      	movne	r0, r6
 801e150:	f106 4600 	add.w	r6, r6, #2147483648	@ 0x80000000
 801e154:	f8df c1cc 	ldr.w	ip, [pc, #460]	@ 801e324 <nema_set_blend+0x304>
 801e158:	f506 3650 	add.w	r6, r6, #212992	@ 0x34000
 801e15c:	bf04      	itt	eq
 801e15e:	46bc      	moveq	ip, r7
 801e160:	461e      	moveq	r6, r3
 801e162:	f107 4700 	add.w	r7, r7, #2147483648	@ 0x80000000
 801e166:	f1a3 0340 	sub.w	r3, r3, #64	@ 0x40
 801e16a:	f1a7 0742 	sub.w	r7, r7, #66	@ 0x42
 801e16e:	bf08      	it	eq
 801e170:	461f      	moveq	r7, r3
 801e172:	4c61      	ldr	r4, [pc, #388]	@ (801e2f8 <nema_set_blend+0x2d8>)
 801e174:	f8df e1b0 	ldr.w	lr, [pc, #432]	@ 801e328 <nema_set_blend+0x308>
 801e178:	4a60      	ldr	r2, [pc, #384]	@ (801e2fc <nema_set_blend+0x2dc>)
 801e17a:	bf18      	it	ne
 801e17c:	4622      	movne	r2, r4
 801e17e:	f504 3450 	add.w	r4, r4, #212992	@ 0x34000
 801e182:	bf08      	it	eq
 801e184:	4674      	moveq	r4, lr
 801e186:	f8dd e018 	ldr.w	lr, [sp, #24]
 801e18a:	f1b8 0f00 	cmp.w	r8, #0
 801e18e:	f040 8109 	bne.w	801e3a4 <nema_set_blend+0x384>
 801e192:	9b07      	ldr	r3, [sp, #28]
 801e194:	2b00      	cmp	r3, #0
 801e196:	bf0c      	ite	eq
 801e198:	2300      	moveq	r3, #0
 801e19a:	f44f 1300 	movne.w	r3, #2097152	@ 0x200000
 801e19e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e1a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e1a2:	2b00      	cmp	r3, #0
 801e1a4:	f040 8105 	bne.w	801e3b2 <nema_set_blend+0x392>
 801e1a8:	f01b 6f80 	tst.w	fp, #67108864	@ 0x4000000
 801e1ac:	f000 81b4 	beq.w	801e518 <nema_set_blend+0x4f8>
 801e1b0:	4684      	mov	ip, r0
 801e1b2:	460e      	mov	r6, r1
 801e1b4:	4614      	mov	r4, r2
 801e1b6:	462f      	mov	r7, r5
 801e1b8:	f04f 0804 	mov.w	r8, #4
 801e1bc:	2200      	movs	r2, #0
 801e1be:	4850      	ldr	r0, [pc, #320]	@ (801e300 <nema_set_blend+0x2e0>)
 801e1c0:	f00b 53c0 	and.w	r3, fp, #402653184	@ 0x18000000
 801e1c4:	4293      	cmp	r3, r2
 801e1c6:	f850 302a 	ldr.w	r3, [r0, sl, lsl #2]
 801e1ca:	bf18      	it	ne
 801e1cc:	463e      	movne	r6, r7
 801e1ce:	9309      	str	r3, [sp, #36]	@ 0x24
 801e1d0:	9b05      	ldr	r3, [sp, #20]
 801e1d2:	bf16      	itet	ne
 801e1d4:	46a4      	movne	ip, r4
 801e1d6:	270e      	moveq	r7, #14
 801e1d8:	270c      	movne	r7, #12
 801e1da:	9216      	str	r2, [sp, #88]	@ 0x58
 801e1dc:	2b00      	cmp	r3, #0
 801e1de:	f000 80eb 	beq.w	801e3b8 <nema_set_blend+0x398>
 801e1e2:	4b48      	ldr	r3, [pc, #288]	@ (801e304 <nema_set_blend+0x2e4>)
 801e1e4:	4948      	ldr	r1, [pc, #288]	@ (801e308 <nema_set_blend+0x2e8>)
 801e1e6:	9800      	ldr	r0, [sp, #0]
 801e1e8:	e9cd 1316 	strd	r1, r3, [sp, #88]	@ 0x58
 801e1ec:	1c43      	adds	r3, r0, #1
 801e1ee:	f000 8257 	beq.w	801e6a0 <nema_set_blend+0x680>
 801e1f2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 801e1f6:	4b45      	ldr	r3, [pc, #276]	@ (801e30c <nema_set_blend+0x2ec>)
 801e1f8:	9204      	str	r2, [sp, #16]
 801e1fa:	ea43 13c0 	orr.w	r3, r3, r0, lsl #7
 801e1fe:	e9cd 3118 	strd	r3, r1, [sp, #96]	@ 0x60
 801e202:	2203      	movs	r2, #3
 801e204:	2102      	movs	r1, #2
 801e206:	4c42      	ldr	r4, [pc, #264]	@ (801e310 <nema_set_blend+0x2f0>)
 801e208:	f1b9 0f01 	cmp.w	r9, #1
 801e20c:	f240 8110 	bls.w	801e430 <nema_set_blend+0x410>
 801e210:	9b01      	ldr	r3, [sp, #4]
 801e212:	2b05      	cmp	r3, #5
 801e214:	d803      	bhi.n	801e21e <nema_set_blend+0x1fe>
 801e216:	f01b 5f70 	tst.w	fp, #1006632960	@ 0x3c000000
 801e21a:	f000 8087 	beq.w	801e32c <nema_set_blend+0x30c>
 801e21e:	9b03      	ldr	r3, [sp, #12]
 801e220:	b933      	cbnz	r3, 801e230 <nema_set_blend+0x210>
 801e222:	f1b9 0f00 	cmp.w	r9, #0
 801e226:	d103      	bne.n	801e230 <nema_set_blend+0x210>
 801e228:	9b07      	ldr	r3, [sp, #28]
 801e22a:	2b00      	cmp	r3, #0
 801e22c:	f000 81ca 	beq.w	801e5c4 <nema_set_blend+0x5a4>
 801e230:	f1b8 0f1d 	cmp.w	r8, #29
 801e234:	f000 8150 	beq.w	801e4d8 <nema_set_blend+0x4b8>
 801e238:	4b36      	ldr	r3, [pc, #216]	@ (801e314 <nema_set_blend+0x2f4>)
 801e23a:	a826      	add	r0, sp, #152	@ 0x98
 801e23c:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801e240:	ea43 13ca 	orr.w	r3, r3, sl, lsl #7
 801e244:	9803      	ldr	r0, [sp, #12]
 801e246:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
 801e24a:	4303      	orrs	r3, r0
 801e24c:	e941 3c10 	strd	r3, ip, [r1, #-64]	@ 0x40
 801e250:	1c55      	adds	r5, r2, #1
 801e252:	f1b9 0f00 	cmp.w	r9, #0
 801e256:	f040 8150 	bne.w	801e4fa <nema_set_blend+0x4da>
 801e25a:	46ce      	mov	lr, r9
 801e25c:	4b2d      	ldr	r3, [pc, #180]	@ (801e314 <nema_set_blend+0x2f4>)
 801e25e:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e262:	f8cd 9018 	str.w	r9, [sp, #24]
 801e266:	9308      	str	r3, [sp, #32]
 801e268:	9b07      	ldr	r3, [sp, #28]
 801e26a:	2b00      	cmp	r3, #0
 801e26c:	d163      	bne.n	801e336 <nema_set_blend+0x316>
 801e26e:	4b2a      	ldr	r3, [pc, #168]	@ (801e318 <nema_set_blend+0x2f8>)
 801e270:	f8dd a008 	ldr.w	sl, [sp, #8]
 801e274:	9308      	str	r3, [sp, #32]
 801e276:	f04f 4600 	mov.w	r6, #2147483648	@ 0x80000000
 801e27a:	9f01      	ldr	r7, [sp, #4]
 801e27c:	e061      	b.n	801e342 <nema_set_blend+0x322>
 801e27e:	f04f 0900 	mov.w	r9, #0
 801e282:	46c8      	mov	r8, r9
 801e284:	f8cd 901c 	str.w	r9, [sp, #28]
 801e288:	2b00      	cmp	r3, #0
 801e28a:	f000 8153 	beq.w	801e534 <nema_set_blend+0x514>
 801e28e:	9b01      	ldr	r3, [sp, #4]
 801e290:	2b05      	cmp	r3, #5
 801e292:	f200 8169 	bhi.w	801e568 <nema_set_blend+0x548>
 801e296:	2300      	movs	r3, #0
 801e298:	f04f 0b01 	mov.w	fp, #1
 801e29c:	461a      	mov	r2, r3
 801e29e:	9306      	str	r3, [sp, #24]
 801e2a0:	9309      	str	r3, [sp, #36]	@ 0x24
 801e2a2:	9315      	str	r3, [sp, #84]	@ 0x54
 801e2a4:	9b07      	ldr	r3, [sp, #28]
 801e2a6:	2b00      	cmp	r3, #0
 801e2a8:	f000 8200 	beq.w	801e6ac <nema_set_blend+0x68c>
 801e2ac:	930a      	str	r3, [sp, #40]	@ 0x28
 801e2ae:	4b06      	ldr	r3, [pc, #24]	@ (801e2c8 <nema_set_blend+0x2a8>)
 801e2b0:	2001      	movs	r0, #1
 801e2b2:	9308      	str	r3, [sp, #32]
 801e2b4:	2303      	movs	r3, #3
 801e2b6:	e9cd 3003 	strd	r3, r0, [sp, #12]
 801e2ba:	e71b      	b.n	801e0f4 <nema_set_blend+0xd4>
 801e2bc:	200833a4 	.word	0x200833a4
 801e2c0:	200833a5 	.word	0x200833a5
 801e2c4:	20000064 	.word	0x20000064
 801e2c8:	080c0003 	.word	0x080c0003
 801e2cc:	000761c5 	.word	0x000761c5
 801e2d0:	000761c7 	.word	0x000761c7
 801e2d4:	800761c5 	.word	0x800761c5
 801e2d8:	80076185 	.word	0x80076185
 801e2dc:	80076187 	.word	0x80076187
 801e2e0:	800121c5 	.word	0x800121c5
 801e2e4:	800121c7 	.word	0x800121c7
 801e2e8:	000121c5 	.word	0x000121c5
 801e2ec:	000461c7 	.word	0x000461c7
 801e2f0:	800461c7 	.word	0x800461c7
 801e2f4:	000121c7 	.word	0x000121c7
 801e2f8:	00012185 	.word	0x00012185
 801e2fc:	00012187 	.word	0x00012187
 801e300:	08035da8 	.word	0x08035da8
 801e304:	02009408 	.word	0x02009408
 801e308:	00f40182 	.word	0x00f40182
 801e30c:	000c100b 	.word	0x000c100b
 801e310:	1000fc00 	.word	0x1000fc00
 801e314:	080c0000 	.word	0x080c0000
 801e318:	080c0002 	.word	0x080c0002
 801e31c:	00076185 	.word	0x00076185
 801e320:	00076187 	.word	0x00076187
 801e324:	000461c5 	.word	0x000461c5
 801e328:	00046187 	.word	0x00046187
 801e32c:	4615      	mov	r5, r2
 801e32e:	460a      	mov	r2, r1
 801e330:	f1b9 0f00 	cmp.w	r9, #0
 801e334:	d098      	beq.n	801e268 <nema_set_blend+0x248>
 801e336:	9b06      	ldr	r3, [sp, #24]
 801e338:	2b00      	cmp	r3, #0
 801e33a:	f000 8202 	beq.w	801e742 <nema_set_blend+0x722>
 801e33e:	2600      	movs	r6, #0
 801e340:	9f01      	ldr	r7, [sp, #4]
 801e342:	48c1      	ldr	r0, [pc, #772]	@ (801e648 <nema_set_blend+0x628>)
 801e344:	49c1      	ldr	r1, [pc, #772]	@ (801e64c <nema_set_blend+0x62c>)
 801e346:	f850 3027 	ldr.w	r3, [r0, r7, lsl #2]
 801e34a:	f851 7027 	ldr.w	r7, [r1, r7, lsl #2]
 801e34e:	015b      	lsls	r3, r3, #5
 801e350:	ea43 3387 	orr.w	r3, r3, r7, lsl #14
 801e354:	9f08      	ldr	r7, [sp, #32]
 801e356:	ea47 5e0e 	orr.w	lr, r7, lr, lsl #20
 801e35a:	4fbd      	ldr	r7, [pc, #756]	@ (801e650 <nema_set_blend+0x630>)
 801e35c:	ea4e 1eca 	orr.w	lr, lr, sl, lsl #7
 801e360:	431f      	orrs	r7, r3
 801e362:	ab26      	add	r3, sp, #152	@ 0x98
 801e364:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801e368:	4337      	orrs	r7, r6
 801e36a:	e942 e710 	strd	lr, r7, [r2, #-64]	@ 0x40
 801e36e:	2e00      	cmp	r6, #0
 801e370:	f000 813f 	beq.w	801e5f2 <nema_set_blend+0x5d2>
 801e374:	9804      	ldr	r0, [sp, #16]
 801e376:	f7f3 fe95 	bl	80120a4 <nema_matmul_bypass>
 801e37a:	4629      	mov	r1, r5
 801e37c:	2200      	movs	r2, #0
 801e37e:	a816      	add	r0, sp, #88	@ 0x58
 801e380:	f7f3 ff8a 	bl	8012298 <nema_load_frag_shader>
 801e384:	4bb3      	ldr	r3, [pc, #716]	@ (801e654 <nema_set_blend+0x634>)
 801e386:	f1c5 0520 	rsb	r5, r5, #32
 801e38a:	6818      	ldr	r0, [r3, #0]
 801e38c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e38e:	ea43 0800 	orr.w	r8, r3, r0
 801e392:	ea48 0005 	orr.w	r0, r8, r5
 801e396:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
 801e39a:	f7f3 ff97 	bl	80122cc <nema_set_frag_ptr>
 801e39e:	b027      	add	sp, #156	@ 0x9c
 801e3a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e3a4:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 801e3a8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e3aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e3ac:	2b00      	cmp	r3, #0
 801e3ae:	f43f aefb 	beq.w	801e1a8 <nema_set_blend+0x188>
 801e3b2:	f04f 0811 	mov.w	r8, #17
 801e3b6:	e701      	b.n	801e1bc <nema_set_blend+0x19c>
 801e3b8:	9b00      	ldr	r3, [sp, #0]
 801e3ba:	1c5a      	adds	r2, r3, #1
 801e3bc:	f000 8136 	beq.w	801e62c <nema_set_blend+0x60c>
 801e3c0:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801e3c4:	9a05      	ldr	r2, [sp, #20]
 801e3c6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 801e3ca:	9204      	str	r2, [sp, #16]
 801e3cc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e3ce:	2a00      	cmp	r2, #0
 801e3d0:	f000 80a9 	beq.w	801e526 <nema_set_blend+0x506>
 801e3d4:	f44f 2440 	mov.w	r4, #786432	@ 0xc0000
 801e3d8:	499f      	ldr	r1, [pc, #636]	@ (801e658 <nema_set_blend+0x638>)
 801e3da:	4aa0      	ldr	r2, [pc, #640]	@ (801e65c <nema_set_blend+0x63c>)
 801e3dc:	f44f 5500 	mov.w	r5, #8192	@ 0x2000
 801e3e0:	9219      	str	r2, [sp, #100]	@ 0x64
 801e3e2:	2204      	movs	r2, #4
 801e3e4:	9116      	str	r1, [sp, #88]	@ 0x58
 801e3e6:	9205      	str	r2, [sp, #20]
 801e3e8:	2102      	movs	r1, #2
 801e3ea:	2203      	movs	r2, #3
 801e3ec:	e9cd 5417 	strd	r5, r4, [sp, #92]	@ 0x5c
 801e3f0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e3f2:	2c00      	cmp	r4, #0
 801e3f4:	d04f      	beq.n	801e496 <nema_set_blend+0x476>
 801e3f6:	9c00      	ldr	r4, [sp, #0]
 801e3f8:	f1b4 3fff 	cmp.w	r4, #4294967295
 801e3fc:	d04b      	beq.n	801e496 <nema_set_blend+0x476>
 801e3fe:	f241 050b 	movw	r5, #4107	@ 0x100b
 801e402:	2300      	movs	r3, #0
 801e404:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 801e408:	a826      	add	r0, sp, #152	@ 0x98
 801e40a:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 801e40e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801e410:	f044 5480 	orr.w	r4, r4, #268435456	@ 0x10000000
 801e414:	ea45 11c1 	orr.w	r1, r5, r1, lsl #7
 801e418:	f1b9 0f01 	cmp.w	r9, #1
 801e41c:	f840 1c40 	str.w	r1, [r0, #-64]
 801e420:	f444 4420 	orr.w	r4, r4, #40960	@ 0xa000
 801e424:	4611      	mov	r1, r2
 801e426:	f840 3c3c 	str.w	r3, [r0, #-60]
 801e42a:	9a05      	ldr	r2, [sp, #20]
 801e42c:	f63f aef0 	bhi.w	801e210 <nema_set_blend+0x1f0>
 801e430:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e432:	2b00      	cmp	r3, #0
 801e434:	f47f aeec 	bne.w	801e210 <nema_set_blend+0x1f0>
 801e438:	9b00      	ldr	r3, [sp, #0]
 801e43a:	3301      	adds	r3, #1
 801e43c:	f47f aee8 	bne.w	801e210 <nema_set_blend+0x1f0>
 801e440:	9b02      	ldr	r3, [sp, #8]
 801e442:	4553      	cmp	r3, sl
 801e444:	f47f aee4 	bne.w	801e210 <nema_set_blend+0x1f0>
 801e448:	f1b9 0f00 	cmp.w	r9, #0
 801e44c:	bf15      	itete	ne
 801e44e:	f44f 6600 	movne.w	r6, #2048	@ 0x800
 801e452:	f44f 5600 	moveq.w	r6, #8192	@ 0x2000
 801e456:	f44f 1500 	movne.w	r5, #2097152	@ 0x200000
 801e45a:	f44f 0500 	moveq.w	r5, #8388608	@ 0x800000
 801e45e:	9f01      	ldr	r7, [sp, #4]
 801e460:	f8df c1e4 	ldr.w	ip, [pc, #484]	@ 801e648 <nema_set_blend+0x628>
 801e464:	4879      	ldr	r0, [pc, #484]	@ (801e64c <nema_set_blend+0x62c>)
 801e466:	f85c 3027 	ldr.w	r3, [ip, r7, lsl #2]
 801e46a:	f850 0027 	ldr.w	r0, [r0, r7, lsl #2]
 801e46e:	015b      	lsls	r3, r3, #5
 801e470:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 801e474:	f043 430a 	orr.w	r3, r3, #2315255808	@ 0x8a000000
 801e478:	f043 0306 	orr.w	r3, r3, #6
 801e47c:	4333      	orrs	r3, r6
 801e47e:	432b      	orrs	r3, r5
 801e480:	4877      	ldr	r0, [pc, #476]	@ (801e660 <nema_set_blend+0x640>)
 801e482:	9d02      	ldr	r5, [sp, #8]
 801e484:	ae26      	add	r6, sp, #152	@ 0x98
 801e486:	ea40 10c5 	orr.w	r0, r0, r5, lsl #7
 801e48a:	eb06 01c1 	add.w	r1, r6, r1, lsl #3
 801e48e:	4615      	mov	r5, r2
 801e490:	e941 0310 	strd	r0, r3, [r1, #-64]	@ 0x40
 801e494:	e76e      	b.n	801e374 <nema_set_blend+0x354>
 801e496:	f043 5480 	orr.w	r4, r3, #268435456	@ 0x10000000
 801e49a:	e6b5      	b.n	801e208 <nema_set_blend+0x1e8>
 801e49c:	f04f 3020 	mov.w	r0, #538976288	@ 0x20202020
 801e4a0:	f7f3 ff78 	bl	8012394 <nema_set_raster_color>
 801e4a4:	2000      	movs	r0, #0
 801e4a6:	f7f2 fc97 	bl	8010dd8 <nema_enable_gradient>
 801e4aa:	f04f 0800 	mov.w	r8, #0
 801e4ae:	f04f 0901 	mov.w	r9, #1
 801e4b2:	23ff      	movs	r3, #255	@ 0xff
 801e4b4:	f240 1401 	movw	r4, #257	@ 0x101
 801e4b8:	f04f 3aff 	mov.w	sl, #4294967295
 801e4bc:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801e4c0:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801e4c4:	e9cd 880c 	strd	r8, r8, [sp, #48]	@ 0x30
 801e4c8:	4641      	mov	r1, r8
 801e4ca:	f8cd 9004 	str.w	r9, [sp, #4]
 801e4ce:	461a      	mov	r2, r3
 801e4d0:	46a3      	mov	fp, r4
 801e4d2:	f8cd a000 	str.w	sl, [sp]
 801e4d6:	e5c9      	b.n	801e06c <nema_set_blend+0x4c>
 801e4d8:	2f0e      	cmp	r7, #14
 801e4da:	f47f aead 	bne.w	801e238 <nema_set_blend+0x218>
 801e4de:	9b03      	ldr	r3, [sp, #12]
 801e4e0:	2b00      	cmp	r3, #0
 801e4e2:	f47f aea9 	bne.w	801e238 <nema_set_blend+0x218>
 801e4e6:	9b06      	ldr	r3, [sp, #24]
 801e4e8:	2b00      	cmp	r3, #0
 801e4ea:	f47f aea5 	bne.w	801e238 <nema_set_blend+0x218>
 801e4ee:	4615      	mov	r5, r2
 801e4f0:	460a      	mov	r2, r1
 801e4f2:	f1b9 0f00 	cmp.w	r9, #0
 801e4f6:	f43f aeb0 	beq.w	801e25a <nema_set_blend+0x23a>
 801e4fa:	f04f 0e00 	mov.w	lr, #0
 801e4fe:	4b59      	ldr	r3, [pc, #356]	@ (801e664 <nema_set_blend+0x644>)
 801e500:	9308      	str	r3, [sp, #32]
 801e502:	9b01      	ldr	r3, [sp, #4]
 801e504:	2b00      	cmp	r3, #0
 801e506:	f000 8123 	beq.w	801e750 <nema_set_blend+0x730>
 801e50a:	2b01      	cmp	r3, #1
 801e50c:	f04f 0600 	mov.w	r6, #0
 801e510:	f000 8137 	beq.w	801e782 <nema_set_blend+0x762>
 801e514:	461f      	mov	r7, r3
 801e516:	e714      	b.n	801e342 <nema_set_blend+0x322>
 801e518:	e9dd 6c11 	ldrd	r6, ip, [sp, #68]	@ 0x44
 801e51c:	e9dd 7413 	ldrd	r7, r4, [sp, #76]	@ 0x4c
 801e520:	f04f 081d 	mov.w	r8, #29
 801e524:	e64a      	b.n	801e1bc <nema_set_blend+0x19c>
 801e526:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e528:	2a00      	cmp	r2, #0
 801e52a:	d046      	beq.n	801e5ba <nema_set_blend+0x59a>
 801e52c:	f44f 2440 	mov.w	r4, #786432	@ 0xc0000
 801e530:	494d      	ldr	r1, [pc, #308]	@ (801e668 <nema_set_blend+0x648>)
 801e532:	e752      	b.n	801e3da <nema_set_blend+0x3ba>
 801e534:	9b02      	ldr	r3, [sp, #8]
 801e536:	2b00      	cmp	r3, #0
 801e538:	f47f aea9 	bne.w	801e28e <nema_set_blend+0x26e>
 801e53c:	9b00      	ldr	r3, [sp, #0]
 801e53e:	3301      	adds	r3, #1
 801e540:	f000 8114 	beq.w	801e76c <nema_set_blend+0x74c>
 801e544:	9802      	ldr	r0, [sp, #8]
 801e546:	f7f3 fdad 	bl	80120a4 <nema_matmul_bypass>
 801e54a:	4b42      	ldr	r3, [pc, #264]	@ (801e654 <nema_set_blend+0x634>)
 801e54c:	4947      	ldr	r1, [pc, #284]	@ (801e66c <nema_set_blend+0x64c>)
 801e54e:	9800      	ldr	r0, [sp, #0]
 801e550:	681a      	ldr	r2, [r3, #0]
 801e552:	4b47      	ldr	r3, [pc, #284]	@ (801e670 <nema_set_blend+0x650>)
 801e554:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 801e558:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e55c:	4318      	orrs	r0, r3
 801e55e:	f7f3 feb5 	bl	80122cc <nema_set_frag_ptr>
 801e562:	b027      	add	sp, #156	@ 0x9c
 801e564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e568:	2301      	movs	r3, #1
 801e56a:	930a      	str	r3, [sp, #40]	@ 0x28
 801e56c:	9304      	str	r3, [sp, #16]
 801e56e:	469b      	mov	fp, r3
 801e570:	2303      	movs	r3, #3
 801e572:	f04f 0e00 	mov.w	lr, #0
 801e576:	9303      	str	r3, [sp, #12]
 801e578:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
 801e57c:	f503 2340 	add.w	r3, r3, #786432	@ 0xc0000
 801e580:	9308      	str	r3, [sp, #32]
 801e582:	4b3c      	ldr	r3, [pc, #240]	@ (801e674 <nema_set_blend+0x654>)
 801e584:	f8cd e018 	str.w	lr, [sp, #24]
 801e588:	9312      	str	r3, [sp, #72]	@ 0x48
 801e58a:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e58e:	9311      	str	r3, [sp, #68]	@ 0x44
 801e590:	4b39      	ldr	r3, [pc, #228]	@ (801e678 <nema_set_blend+0x658>)
 801e592:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 801e596:	9314      	str	r3, [sp, #80]	@ 0x50
 801e598:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e59c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e59e:	f5a3 23c8 	sub.w	r3, r3, #409600	@ 0x64000
 801e5a2:	f8cd e054 	str.w	lr, [sp, #84]	@ 0x54
 801e5a6:	4835      	ldr	r0, [pc, #212]	@ (801e67c <nema_set_blend+0x65c>)
 801e5a8:	4935      	ldr	r1, [pc, #212]	@ (801e680 <nema_set_blend+0x660>)
 801e5aa:	4a36      	ldr	r2, [pc, #216]	@ (801e684 <nema_set_blend+0x664>)
 801e5ac:	461d      	mov	r5, r3
 801e5ae:	f8df c0ec 	ldr.w	ip, [pc, #236]	@ 801e69c <nema_set_blend+0x67c>
 801e5b2:	4e35      	ldr	r6, [pc, #212]	@ (801e688 <nema_set_blend+0x668>)
 801e5b4:	4c35      	ldr	r4, [pc, #212]	@ (801e68c <nema_set_blend+0x66c>)
 801e5b6:	4f36      	ldr	r7, [pc, #216]	@ (801e690 <nema_set_blend+0x670>)
 801e5b8:	e5e7      	b.n	801e18a <nema_set_blend+0x16a>
 801e5ba:	4611      	mov	r1, r2
 801e5bc:	2202      	movs	r2, #2
 801e5be:	9205      	str	r2, [sp, #20]
 801e5c0:	2201      	movs	r2, #1
 801e5c2:	e715      	b.n	801e3f0 <nema_set_blend+0x3d0>
 801e5c4:	9b01      	ldr	r3, [sp, #4]
 801e5c6:	2b01      	cmp	r3, #1
 801e5c8:	f47f ae32 	bne.w	801e230 <nema_set_blend+0x210>
 801e5cc:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801e5ce:	2b00      	cmp	r3, #0
 801e5d0:	f47f ae2e 	bne.w	801e230 <nema_set_blend+0x210>
 801e5d4:	a826      	add	r0, sp, #152	@ 0x98
 801e5d6:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801e5da:	4b21      	ldr	r3, [pc, #132]	@ (801e660 <nema_set_blend+0x640>)
 801e5dc:	9802      	ldr	r0, [sp, #8]
 801e5de:	f841 6c3c 	str.w	r6, [r1, #-60]
 801e5e2:	ea43 13c0 	orr.w	r3, r3, r0, lsl #7
 801e5e6:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
 801e5ea:	4615      	mov	r5, r2
 801e5ec:	f841 3c40 	str.w	r3, [r1, #-64]
 801e5f0:	e6c0      	b.n	801e374 <nema_set_blend+0x354>
 801e5f2:	f44f 0680 	mov.w	r6, #4194304	@ 0x400000
 801e5f6:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
 801e5fa:	462a      	mov	r2, r5
 801e5fc:	3501      	adds	r5, #1
 801e5fe:	f850 0029 	ldr.w	r0, [r0, r9, lsl #2]
 801e602:	f851 1029 	ldr.w	r1, [r1, r9, lsl #2]
 801e606:	0140      	lsls	r0, r0, #5
 801e608:	4b22      	ldr	r3, [pc, #136]	@ (801e694 <nema_set_blend+0x674>)
 801e60a:	ea40 3081 	orr.w	r0, r0, r1, lsl #14
 801e60e:	4303      	orrs	r3, r0
 801e610:	4921      	ldr	r1, [pc, #132]	@ (801e698 <nema_set_blend+0x678>)
 801e612:	9802      	ldr	r0, [sp, #8]
 801e614:	433b      	orrs	r3, r7
 801e616:	ea41 11c0 	orr.w	r1, r1, r0, lsl #7
 801e61a:	a826      	add	r0, sp, #152	@ 0x98
 801e61c:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 801e620:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e622:	4333      	orrs	r3, r6
 801e624:	4301      	orrs	r1, r0
 801e626:	e942 1310 	strd	r1, r3, [r2, #-64]	@ 0x40
 801e62a:	e6a3      	b.n	801e374 <nema_set_blend+0x354>
 801e62c:	9b04      	ldr	r3, [sp, #16]
 801e62e:	2b00      	cmp	r3, #0
 801e630:	f000 8082 	beq.w	801e738 <nema_set_blend+0x718>
 801e634:	9a05      	ldr	r2, [sp, #20]
 801e636:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e638:	9203      	str	r2, [sp, #12]
 801e63a:	920a      	str	r2, [sp, #40]	@ 0x28
 801e63c:	4a09      	ldr	r2, [pc, #36]	@ (801e664 <nema_set_blend+0x644>)
 801e63e:	f443 4330 	orr.w	r3, r3, #45056	@ 0xb000
 801e642:	9208      	str	r2, [sp, #32]
 801e644:	e6c2      	b.n	801e3cc <nema_set_blend+0x3ac>
 801e646:	bf00      	nop
 801e648:	08035db8 	.word	0x08035db8
 801e64c:	08035de8 	.word	0x08035de8
 801e650:	0a002007 	.word	0x0a002007
 801e654:	200001e8 	.word	0x200001e8
 801e658:	100c118b 	.word	0x100c118b
 801e65c:	0081a042 	.word	0x0081a042
 801e660:	080c0002 	.word	0x080c0002
 801e664:	080c0000 	.word	0x080c0000
 801e668:	100c1183 	.word	0x100c1183
 801e66c:	08035da8 	.word	0x08035da8
 801e670:	141f801f 	.word	0x141f801f
 801e674:	000761c7 	.word	0x000761c7
 801e678:	00076187 	.word	0x00076187
 801e67c:	000121c7 	.word	0x000121c7
 801e680:	800121c7 	.word	0x800121c7
 801e684:	00012187 	.word	0x00012187
 801e688:	800461c7 	.word	0x800461c7
 801e68c:	00046187 	.word	0x00046187
 801e690:	80046187 	.word	0x80046187
 801e694:	80080206 	.word	0x80080206
 801e698:	004e0002 	.word	0x004e0002
 801e69c:	000461c7 	.word	0x000461c7
 801e6a0:	2301      	movs	r3, #1
 801e6a2:	2202      	movs	r2, #2
 801e6a4:	9304      	str	r3, [sp, #16]
 801e6a6:	4619      	mov	r1, r3
 801e6a8:	4c38      	ldr	r4, [pc, #224]	@ (801e78c <nema_set_blend+0x76c>)
 801e6aa:	e5ad      	b.n	801e208 <nema_set_blend+0x1e8>
 801e6ac:	f1b9 0f00 	cmp.w	r9, #0
 801e6b0:	d055      	beq.n	801e75e <nema_set_blend+0x73e>
 801e6b2:	2301      	movs	r3, #1
 801e6b4:	2103      	movs	r1, #3
 801e6b6:	930a      	str	r3, [sp, #40]	@ 0x28
 801e6b8:	e9cd 1303 	strd	r1, r3, [sp, #12]
 801e6bc:	4b34      	ldr	r3, [pc, #208]	@ (801e790 <nema_set_blend+0x770>)
 801e6be:	9308      	str	r3, [sp, #32]
 801e6c0:	e518      	b.n	801e0f4 <nema_set_blend+0xd4>
 801e6c2:	2c00      	cmp	r4, #0
 801e6c4:	bfbd      	ittte	lt
 801e6c6:	f02b 4b00 	biclt.w	fp, fp, #2147483648	@ 0x80000000
 801e6ca:	f04f 4202 	movlt.w	r2, #2181038080	@ 0x82000000
 801e6ce:	f04f 4300 	movlt.w	r3, #2147483648	@ 0x80000000
 801e6d2:	f04f 7200 	movge.w	r2, #33554432	@ 0x2000000
 801e6d6:	b111      	cbz	r1, 801e6de <nema_set_blend+0x6be>
 801e6d8:	4613      	mov	r3, r2
 801e6da:	f02b 7b00 	bic.w	fp, fp, #33554432	@ 0x2000000
 801e6de:	9a01      	ldr	r2, [sp, #4]
 801e6e0:	ea42 2009 	orr.w	r0, r2, r9, lsl #8
 801e6e4:	4318      	orrs	r0, r3
 801e6e6:	f7f3 fdf7 	bl	80122d8 <nema_set_rop_blend_mode>
 801e6ea:	ea4f 505b 	mov.w	r0, fp, lsr #21
 801e6ee:	4b29      	ldr	r3, [pc, #164]	@ (801e794 <nema_set_blend+0x774>)
 801e6f0:	0540      	lsls	r0, r0, #21
 801e6f2:	f040 0201 	orr.w	r2, r0, #1
 801e6f6:	789b      	ldrb	r3, [r3, #2]
 801e6f8:	2a01      	cmp	r2, #1
 801e6fa:	9201      	str	r2, [sp, #4]
 801e6fc:	9305      	str	r3, [sp, #20]
 801e6fe:	f43f adbe 	beq.w	801e27e <nema_set_blend+0x25e>
 801e702:	f00b 4380 	and.w	r3, fp, #1073741824	@ 0x40000000
 801e706:	9315      	str	r3, [sp, #84]	@ 0x54
 801e708:	f3cb 7380 	ubfx	r3, fp, #30, #1
 801e70c:	9306      	str	r3, [sp, #24]
 801e70e:	f00b 5300 	and.w	r3, fp, #536870912	@ 0x20000000
 801e712:	9309      	str	r3, [sp, #36]	@ 0x24
 801e714:	2301      	movs	r3, #1
 801e716:	f04f 0900 	mov.w	r9, #0
 801e71a:	f00b 5280 	and.w	r2, fp, #268435456	@ 0x10000000
 801e71e:	f8dd b004 	ldr.w	fp, [sp, #4]
 801e722:	9301      	str	r3, [sp, #4]
 801e724:	4b1c      	ldr	r3, [pc, #112]	@ (801e798 <nema_set_blend+0x778>)
 801e726:	46c8      	mov	r8, r9
 801e728:	f8cd 901c 	str.w	r9, [sp, #28]
 801e72c:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e730:	f8cd 9010 	str.w	r9, [sp, #16]
 801e734:	9308      	str	r3, [sp, #32]
 801e736:	e4dd      	b.n	801e0f4 <nema_set_blend+0xd4>
 801e738:	2201      	movs	r2, #1
 801e73a:	9b05      	ldr	r3, [sp, #20]
 801e73c:	9204      	str	r2, [sp, #16]
 801e73e:	930a      	str	r3, [sp, #40]	@ 0x28
 801e740:	e644      	b.n	801e3cc <nema_set_blend+0x3ac>
 801e742:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e744:	2b00      	cmp	r3, #0
 801e746:	f43f aedc 	beq.w	801e502 <nema_set_blend+0x4e2>
 801e74a:	9e06      	ldr	r6, [sp, #24]
 801e74c:	9f01      	ldr	r7, [sp, #4]
 801e74e:	e5f8      	b.n	801e342 <nema_set_blend+0x322>
 801e750:	f44f 0600 	mov.w	r6, #8388608	@ 0x800000
 801e754:	f44f 5700 	mov.w	r7, #8192	@ 0x2000
 801e758:	4910      	ldr	r1, [pc, #64]	@ (801e79c <nema_set_blend+0x77c>)
 801e75a:	4811      	ldr	r0, [pc, #68]	@ (801e7a0 <nema_set_blend+0x780>)
 801e75c:	e74f      	b.n	801e5fe <nema_set_blend+0x5de>
 801e75e:	4b0e      	ldr	r3, [pc, #56]	@ (801e798 <nema_set_blend+0x778>)
 801e760:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e764:	9308      	str	r3, [sp, #32]
 801e766:	e9cd 9903 	strd	r9, r9, [sp, #12]
 801e76a:	e4c3      	b.n	801e0f4 <nema_set_blend+0xd4>
 801e76c:	2001      	movs	r0, #1
 801e76e:	f7f3 fc99 	bl	80120a4 <nema_matmul_bypass>
 801e772:	4a0c      	ldr	r2, [pc, #48]	@ (801e7a4 <nema_set_blend+0x784>)
 801e774:	4b0c      	ldr	r3, [pc, #48]	@ (801e7a8 <nema_set_blend+0x788>)
 801e776:	6810      	ldr	r0, [r2, #0]
 801e778:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 801e77c:	f7f3 fda6 	bl	80122cc <nema_set_frag_ptr>
 801e780:	e6ef      	b.n	801e562 <nema_set_blend+0x542>
 801e782:	4637      	mov	r7, r6
 801e784:	4905      	ldr	r1, [pc, #20]	@ (801e79c <nema_set_blend+0x77c>)
 801e786:	4806      	ldr	r0, [pc, #24]	@ (801e7a0 <nema_set_blend+0x780>)
 801e788:	e739      	b.n	801e5fe <nema_set_blend+0x5de>
 801e78a:	bf00      	nop
 801e78c:	1000fc00 	.word	0x1000fc00
 801e790:	080c0003 	.word	0x080c0003
 801e794:	20000064 	.word	0x20000064
 801e798:	080c0000 	.word	0x080c0000
 801e79c:	08035de8 	.word	0x08035de8
 801e7a0:	08035db8 	.word	0x08035db8
 801e7a4:	200001e8 	.word	0x200001e8
 801e7a8:	141f001f 	.word	0x141f001f

0801e7ac <nema_set_const_color>:
 801e7ac:	b510      	push	{r4, lr}
 801e7ae:	4604      	mov	r4, r0
 801e7b0:	2001      	movs	r0, #1
 801e7b2:	4621      	mov	r1, r4
 801e7b4:	f7f2 fa90 	bl	8010cd8 <nema_set_const_reg>
 801e7b8:	4b04      	ldr	r3, [pc, #16]	@ (801e7cc <nema_set_const_color+0x20>)
 801e7ba:	781b      	ldrb	r3, [r3, #0]
 801e7bc:	b903      	cbnz	r3, 801e7c0 <nema_set_const_color+0x14>
 801e7be:	bd10      	pop	{r4, pc}
 801e7c0:	4620      	mov	r0, r4
 801e7c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e7c6:	f7f3 bd8d 	b.w	80122e4 <nema_set_rop_const_color>
 801e7ca:	bf00      	nop
 801e7cc:	200833a5 	.word	0x200833a5

0801e7d0 <calculate_aabb_per_shape>:
 801e7d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7d4:	ed2d 8b10 	vpush	{d8-d15}
 801e7d8:	2300      	movs	r3, #0
 801e7da:	eddf 7af0 	vldr	s15, [pc, #960]	@ 801eb9c <calculate_aabb_per_shape+0x3cc>
 801e7de:	ed9f 7af0 	vldr	s14, [pc, #960]	@ 801eba0 <calculate_aabb_per_shape+0x3d0>
 801e7e2:	f8d0 8000 	ldr.w	r8, [r0]
 801e7e6:	b091      	sub	sp, #68	@ 0x44
 801e7e8:	4604      	mov	r4, r0
 801e7ea:	edc0 7a04 	vstr	s15, [r0, #16]
 801e7ee:	edc0 7a05 	vstr	s15, [r0, #20]
 801e7f2:	ed80 7a06 	vstr	s14, [r0, #24]
 801e7f6:	ed80 7a07 	vstr	s14, [r0, #28]
 801e7fa:	62c3      	str	r3, [r0, #44]	@ 0x2c
 801e7fc:	6283      	str	r3, [r0, #40]	@ 0x28
 801e7fe:	6343      	str	r3, [r0, #52]	@ 0x34
 801e800:	6303      	str	r3, [r0, #48]	@ 0x30
 801e802:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801e804:	6383      	str	r3, [r0, #56]	@ 0x38
 801e806:	6443      	str	r3, [r0, #68]	@ 0x44
 801e808:	6403      	str	r3, [r0, #64]	@ 0x40
 801e80a:	6483      	str	r3, [r0, #72]	@ 0x48
 801e80c:	64c3      	str	r3, [r0, #76]	@ 0x4c
 801e80e:	6503      	str	r3, [r0, #80]	@ 0x50
 801e810:	6543      	str	r3, [r0, #84]	@ 0x54
 801e812:	6583      	str	r3, [r0, #88]	@ 0x58
 801e814:	65c3      	str	r3, [r0, #92]	@ 0x5c
 801e816:	f1b8 0f00 	cmp.w	r8, #0
 801e81a:	f000 86c7 	beq.w	801f5ac <calculate_aabb_per_shape+0xddc>
 801e81e:	6882      	ldr	r2, [r0, #8]
 801e820:	7811      	ldrb	r1, [r2, #0]
 801e822:	f021 0190 	bic.w	r1, r1, #144	@ 0x90
 801e826:	2901      	cmp	r1, #1
 801e828:	d003      	beq.n	801e832 <calculate_aabb_per_shape+0x62>
 801e82a:	6103      	str	r3, [r0, #16]
 801e82c:	6143      	str	r3, [r0, #20]
 801e82e:	6183      	str	r3, [r0, #24]
 801e830:	61c3      	str	r3, [r0, #28]
 801e832:	ed9f dadc 	vldr	s26, [pc, #880]	@ 801eba4 <calculate_aabb_per_shape+0x3d4>
 801e836:	f04f 0c00 	mov.w	ip, #0
 801e83a:	eeb0 6a4d 	vmov.f32	s12, s26
 801e83e:	4667      	mov	r7, ip
 801e840:	46e1      	mov	r9, ip
 801e842:	4666      	mov	r6, ip
 801e844:	eef0 5a4d 	vmov.f32	s11, s26
 801e848:	eef0 4a4d 	vmov.f32	s9, s26
 801e84c:	eef0 6a4d 	vmov.f32	s13, s26
 801e850:	eeb0 ea4d 	vmov.f32	s28, s26
 801e854:	eeb0 9a4d 	vmov.f32	s18, s26
 801e858:	eef0 8a4d 	vmov.f32	s17, s26
 801e85c:	eeb0 fa4d 	vmov.f32	s30, s26
 801e860:	eddf ead1 	vldr	s29, [pc, #836]	@ 801eba8 <calculate_aabb_per_shape+0x3d8>
 801e864:	eddf dad1 	vldr	s27, [pc, #836]	@ 801ebac <calculate_aabb_per_shape+0x3dc>
 801e868:	eddf fad1 	vldr	s31, [pc, #836]	@ 801ebb0 <calculate_aabb_per_shape+0x3e0>
 801e86c:	eef0 ca4d 	vmov.f32	s25, s26
 801e870:	eeb0 5a4d 	vmov.f32	s10, s26
 801e874:	4640      	mov	r0, r8
 801e876:	f8cd c000 	str.w	ip, [sp]
 801e87a:	5d95      	ldrb	r5, [r2, r6]
 801e87c:	4432      	add	r2, r6
 801e87e:	f005 036f 	and.w	r3, r5, #111	@ 0x6f
 801e882:	2b01      	cmp	r3, #1
 801e884:	f005 0810 	and.w	r8, r5, #16
 801e888:	f000 853e 	beq.w	801f308 <calculate_aabb_per_shape+0xb38>
 801e88c:	f015 0f7f 	tst.w	r5, #127	@ 0x7f
 801e890:	f000 83bf 	beq.w	801f012 <calculate_aabb_per_shape+0x842>
 801e894:	68e1      	ldr	r1, [r4, #12]
 801e896:	2f00      	cmp	r7, #0
 801e898:	eb01 0e87 	add.w	lr, r1, r7, lsl #2
 801e89c:	bf08      	it	eq
 801e89e:	f04f 0901 	moveq.w	r9, #1
 801e8a2:	2b06      	cmp	r3, #6
 801e8a4:	edde 7a00 	vldr	s15, [lr]
 801e8a8:	f107 0b01 	add.w	fp, r7, #1
 801e8ac:	f000 8782 	beq.w	801f7b4 <calculate_aabb_per_shape+0xfe4>
 801e8b0:	2b05      	cmp	r3, #5
 801e8b2:	f001 8034 	beq.w	801f91e <calculate_aabb_per_shape+0x114e>
 801e8b6:	2b07      	cmp	r3, #7
 801e8b8:	f00c 0a6f 	and.w	sl, ip, #111	@ 0x6f
 801e8bc:	f000 86ae 	beq.w	801f61c <calculate_aabb_per_shape+0xe4c>
 801e8c0:	2b08      	cmp	r3, #8
 801e8c2:	f001 806c 	beq.w	801f99e <calculate_aabb_per_shape+0x11ce>
 801e8c6:	f005 0a0f 	and.w	sl, r5, #15
 801e8ca:	f1ba 0f09 	cmp.w	sl, #9
 801e8ce:	f001 8047 	beq.w	801f960 <calculate_aabb_per_shape+0x1190>
 801e8d2:	46ba      	mov	sl, r7
 801e8d4:	465f      	mov	r7, fp
 801e8d6:	2b04      	cmp	r3, #4
 801e8d8:	f041 8501 	bne.w	80202de <calculate_aabb_per_shape+0x1b0e>
 801e8dc:	f1b8 0f00 	cmp.w	r8, #0
 801e8e0:	f001 8059 	beq.w	801f996 <calculate_aabb_per_shape+0x11c6>
 801e8e4:	ee77 7a89 	vadd.f32	s15, s15, s18
 801e8e8:	eeb0 7a68 	vmov.f32	s14, s17
 801e8ec:	462a      	mov	r2, r5
 801e8ee:	2b06      	cmp	r3, #6
 801e8f0:	f000 839b 	beq.w	801f02a <calculate_aabb_per_shape+0x85a>
 801e8f4:	2b08      	cmp	r3, #8
 801e8f6:	f000 8398 	beq.w	801f02a <calculate_aabb_per_shape+0x85a>
 801e8fa:	2b01      	cmp	r3, #1
 801e8fc:	f000 847f 	beq.w	801f1fe <calculate_aabb_per_shape+0xa2e>
 801e900:	2b02      	cmp	r3, #2
 801e902:	f000 847c 	beq.w	801f1fe <calculate_aabb_per_shape+0xa2e>
 801e906:	2b04      	cmp	r3, #4
 801e908:	f000 8479 	beq.w	801f1fe <calculate_aabb_per_shape+0xa2e>
 801e90c:	2b03      	cmp	r3, #3
 801e90e:	f000 8476 	beq.w	801f1fe <calculate_aabb_per_shape+0xa2e>
 801e912:	f002 036d 	and.w	r3, r2, #109	@ 0x6d
 801e916:	2b05      	cmp	r3, #5
 801e918:	f000 8690 	beq.w	801f63c <calculate_aabb_per_shape+0xe6c>
 801e91c:	f002 020f 	and.w	r2, r2, #15
 801e920:	2a09      	cmp	r2, #9
 801e922:	f040 8459 	bne.w	801f1d8 <calculate_aabb_per_shape+0xa08>
 801e926:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801e92a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e92e:	f100 845e 	bmi.w	801f1ee <calculate_aabb_per_shape+0xa1e>
 801e932:	ed9f 3aa0 	vldr	s6, [pc, #640]	@ 801ebb4 <calculate_aabb_per_shape+0x3e4>
 801e936:	eeb4 5ac3 	vcmpe.f32	s10, s6
 801e93a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e93e:	f240 845e 	bls.w	801f1fe <calculate_aabb_per_shape+0xa2e>
 801e942:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801e946:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e94a:	f101 8078 	bmi.w	801fa3e <calculate_aabb_per_shape+0x126e>
 801e94e:	ed9f 3a99 	vldr	s6, [pc, #612]	@ 801ebb4 <calculate_aabb_per_shape+0x3e4>
 801e952:	eef4 6ac3 	vcmpe.f32	s13, s6
 801e956:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e95a:	f240 8450 	bls.w	801f1fe <calculate_aabb_per_shape+0xa2e>
 801e95e:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801e962:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e966:	f101 80bb 	bmi.w	801fae0 <calculate_aabb_per_shape+0x1310>
 801e96a:	eeb0 8a45 	vmov.f32	s16, s10
 801e96e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801e972:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e976:	f101 8071 	bmi.w	801fa5c <calculate_aabb_per_shape+0x128c>
 801e97a:	eeb0 9a66 	vmov.f32	s18, s13
 801e97e:	edcd 7a03 	vstr	s15, [sp, #12]
 801e982:	eddf 7a8d 	vldr	s15, [pc, #564]	@ 801ebb8 <calculate_aabb_per_shape+0x3e8>
 801e986:	ee24 aaa7 	vmul.f32	s20, s9, s15
 801e98a:	eeb0 0a4a 	vmov.f32	s0, s20
 801e98e:	9009      	str	r0, [sp, #36]	@ 0x24
 801e990:	edcd 6a08 	vstr	s13, [sp, #32]
 801e994:	ed8d 6a04 	vstr	s12, [sp, #16]
 801e998:	edcd 5a07 	vstr	s11, [sp, #28]
 801e99c:	ed8d 5a06 	vstr	s10, [sp, #24]
 801e9a0:	ed8d 7a02 	vstr	s14, [sp, #8]
 801e9a4:	edcd 4a05 	vstr	s9, [sp, #20]
 801e9a8:	f012 fd34 	bl	8031414 <cosf>
 801e9ac:	eef0 8a40 	vmov.f32	s17, s0
 801e9b0:	ed8d 0a01 	vstr	s0, [sp, #4]
 801e9b4:	eeb0 0a4a 	vmov.f32	s0, s20
 801e9b8:	f012 fd78 	bl	80314ac <sinf>
 801e9bc:	eef0 6a68 	vmov.f32	s13, s17
 801e9c0:	eeb0 ca40 	vmov.f32	s24, s0
 801e9c4:	ed9d 6a04 	vldr	s12, [sp, #16]
 801e9c8:	ed9d 7a02 	vldr	s14, [sp, #8]
 801e9cc:	eddd 7a03 	vldr	s15, [sp, #12]
 801e9d0:	ee6d 9a28 	vmul.f32	s19, s26, s17
 801e9d4:	ee26 3aa7 	vmul.f32	s6, s13, s15
 801e9d8:	ee60 1a06 	vmul.f32	s3, s0, s12
 801e9dc:	ee68 8a87 	vmul.f32	s17, s17, s14
 801e9e0:	ee26 1a86 	vmul.f32	s2, s13, s12
 801e9e4:	ee27 2a4c 	vnmul.f32	s4, s14, s24
 801e9e8:	ee20 0a27 	vmul.f32	s0, s0, s15
 801e9ec:	ee6d 0a4c 	vnmul.f32	s1, s26, s24
 801e9f0:	ee32 5a03 	vadd.f32	s10, s4, s6
 801e9f4:	ee78 6a80 	vadd.f32	s13, s17, s0
 801e9f8:	ee70 5a81 	vadd.f32	s11, s1, s2
 801e9fc:	ee79 1aa1 	vadd.f32	s3, s19, s3
 801ea00:	eec6 ba88 	vdiv.f32	s23, s13, s16
 801ea04:	eec5 2a89 	vdiv.f32	s5, s11, s18
 801ea08:	ee85 ba09 	vdiv.f32	s22, s10, s18
 801ea0c:	eec1 3a88 	vdiv.f32	s7, s3, s16
 801ea10:	ee32 4acb 	vsub.f32	s8, s5, s22
 801ea14:	ee73 aaeb 	vsub.f32	s21, s7, s23
 801ea18:	ee24 3a04 	vmul.f32	s6, s8, s8
 801ea1c:	ee2a 2aaa 	vmul.f32	s4, s21, s21
 801ea20:	ee32 3a03 	vadd.f32	s6, s4, s6
 801ea24:	eeb5 3a40 	vcmp.f32	s6, #0.0
 801ea28:	eeb6 2a00 	vmov.f32	s4, #96	@ 0x3f000000  0.5
 801ea2c:	ee73 8aab 	vadd.f32	s17, s7, s23
 801ea30:	ee72 9a8b 	vadd.f32	s19, s5, s22
 801ea34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ea38:	edcd 6a03 	vstr	s13, [sp, #12]
 801ea3c:	edcd 5a02 	vstr	s11, [sp, #8]
 801ea40:	ed8d 5a04 	vstr	s10, [sp, #16]
 801ea44:	ee68 8a82 	vmul.f32	s17, s17, s4
 801ea48:	ee69 9a82 	vmul.f32	s19, s19, s4
 801ea4c:	eddd 4a05 	vldr	s9, [sp, #20]
 801ea50:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ea54:	eddd 5a07 	vldr	s11, [sp, #28]
 801ea58:	eddd 6a08 	vldr	s13, [sp, #32]
 801ea5c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801ea5e:	f000 83bb 	beq.w	801f1d8 <calculate_aabb_per_shape+0xa08>
 801ea62:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 801ea66:	eeb5 1a00 	vmov.f32	s2, #80	@ 0x3e800000  0.250
 801ea6a:	ee80 2a83 	vdiv.f32	s4, s1, s6
 801ea6e:	ee32 0a41 	vsub.f32	s0, s4, s2
 801ea72:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801ea76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ea7a:	f101 8159 	bmi.w	801fd30 <calculate_aabb_per_shape+0x1560>
 801ea7e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ea82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ea86:	eef1 1ac0 	vsqrt.f32	s3, s0
 801ea8a:	f101 83f8 	bmi.w	802027e <calculate_aabb_per_shape+0x1aae>
 801ea8e:	ee21 2aaa 	vmul.f32	s4, s3, s21
 801ea92:	ee61 1a84 	vmul.f32	s3, s3, s8
 801ea96:	ee79 aac2 	vsub.f32	s21, s19, s4
 801ea9a:	ee31 4aa8 	vadd.f32	s8, s3, s17
 801ea9e:	ee32 0aea 	vsub.f32	s0, s5, s21
 801eaa2:	ee73 0ac4 	vsub.f32	s1, s7, s8
 801eaa6:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801eaaa:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801eaae:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801eab2:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801eab6:	ed8d 5a08 	vstr	s10, [sp, #32]
 801eaba:	edcd 7a07 	vstr	s15, [sp, #28]
 801eabe:	ed8d 7a06 	vstr	s14, [sp, #24]
 801eac2:	ed8d 2a05 	vstr	s4, [sp, #20]
 801eac6:	edcd 1a04 	vstr	s3, [sp, #16]
 801eaca:	ed8d 4a02 	vstr	s8, [sp, #8]
 801eace:	f012 fb8d 	bl	80311ec <atan2f>
 801ead2:	ed9d 4a02 	vldr	s8, [sp, #8]
 801ead6:	ed8d 0a03 	vstr	s0, [sp, #12]
 801eada:	ee7b 0ac4 	vsub.f32	s1, s23, s8
 801eade:	ee3b 0a6a 	vsub.f32	s0, s22, s21
 801eae2:	f012 fb83 	bl	80311ec <atan2f>
 801eae6:	eddf 7a35 	vldr	s15, [pc, #212]	@ 801ebbc <calculate_aabb_per_shape+0x3ec>
 801eaea:	eddd 3a03 	vldr	s7, [sp, #12]
 801eaee:	ee20 3a27 	vmul.f32	s6, s0, s15
 801eaf2:	ee63 3aa7 	vmul.f32	s7, s7, s15
 801eaf6:	ee33 3a63 	vsub.f32	s6, s6, s7
 801eafa:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801eafe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb02:	bf44      	itt	mi
 801eb04:	ed9f 1a2e 	vldrmi	s2, [pc, #184]	@ 801ebc0 <calculate_aabb_per_shape+0x3f0>
 801eb08:	ee33 3a01 	vaddmi.f32	s6, s6, s2
 801eb0c:	ed9f 1a2d 	vldr	s2, [pc, #180]	@ 801ebc4 <calculate_aabb_per_shape+0x3f4>
 801eb10:	eeb4 3ac1 	vcmpe.f32	s6, s2
 801eb14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb18:	9b00      	ldr	r3, [sp, #0]
 801eb1a:	ed9d 4a02 	vldr	s8, [sp, #8]
 801eb1e:	f003 0840 	and.w	r8, r3, #64	@ 0x40
 801eb22:	f3c3 1280 	ubfx	r2, r3, #6, #1
 801eb26:	eddd 1a04 	vldr	s3, [sp, #16]
 801eb2a:	ed9d 2a05 	vldr	s4, [sp, #20]
 801eb2e:	ed9d 7a06 	vldr	s14, [sp, #24]
 801eb32:	eddd 7a07 	vldr	s15, [sp, #28]
 801eb36:	ed9d 5a08 	vldr	s10, [sp, #32]
 801eb3a:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801eb3e:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801eb42:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801eb46:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801eb4a:	f3c3 1340 	ubfx	r3, r3, #5, #1
 801eb4e:	f141 80e5 	bpl.w	801fd1c <calculate_aabb_per_shape+0x154c>
 801eb52:	429a      	cmp	r2, r3
 801eb54:	f001 8346 	beq.w	80201e4 <calculate_aabb_per_shape+0x1a14>
 801eb58:	ee24 4a08 	vmul.f32	s8, s8, s16
 801eb5c:	ee6a aa89 	vmul.f32	s21, s21, s18
 801eb60:	eddd 3a01 	vldr	s7, [sp, #4]
 801eb64:	eef5 4a40 	vcmp.f32	s9, #0.0
 801eb68:	ee63 9a84 	vmul.f32	s19, s7, s8
 801eb6c:	ee2c 3a2a 	vmul.f32	s6, s24, s21
 801eb70:	ee2c 4a04 	vmul.f32	s8, s24, s8
 801eb74:	ee63 aaaa 	vmul.f32	s21, s7, s21
 801eb78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb7c:	ee79 9ac3 	vsub.f32	s19, s19, s6
 801eb80:	ee74 8a2a 	vadd.f32	s17, s8, s21
 801eb84:	f000 87b0 	beq.w	801fae8 <calculate_aabb_per_shape+0x1318>
 801eb88:	ed9f 3a0e 	vldr	s6, [pc, #56]	@ 801ebc4 <calculate_aabb_per_shape+0x3f4>
 801eb8c:	eef4 4a43 	vcmp.f32	s9, s6
 801eb90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eb94:	f000 87a8 	beq.w	801fae8 <calculate_aabb_per_shape+0x1318>
 801eb98:	e01c      	b.n	801ebd4 <calculate_aabb_per_shape+0x404>
 801eb9a:	bf00      	nop
 801eb9c:	477fff00 	.word	0x477fff00
 801eba0:	c77fff00 	.word	0xc77fff00
 801eba4:	00000000 	.word	0x00000000
 801eba8:	b3d6bf95 	.word	0xb3d6bf95
 801ebac:	33d6bf95 	.word	0x33d6bf95
 801ebb0:	3f7ffffe 	.word	0x3f7ffffe
 801ebb4:	3727c5ac 	.word	0x3727c5ac
 801ebb8:	3c8efa35 	.word	0x3c8efa35
 801ebbc:	42652ee1 	.word	0x42652ee1
 801ebc0:	43b40000 	.word	0x43b40000
 801ebc4:	43340000 	.word	0x43340000
 801ebc8:	42b40000 	.word	0x42b40000
 801ebcc:	43870000 	.word	0x43870000
 801ebd0:	40c90fdb 	.word	0x40c90fdb
 801ebd4:	ed1f 3a04 	vldr	s6, [pc, #-16]	@ 801ebc8 <calculate_aabb_per_shape+0x3f8>
 801ebd8:	eef4 4a43 	vcmp.f32	s9, s6
 801ebdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ebe0:	d007      	beq.n	801ebf2 <calculate_aabb_per_shape+0x422>
 801ebe2:	ed1f 3a06 	vldr	s6, [pc, #-24]	@ 801ebcc <calculate_aabb_per_shape+0x3fc>
 801ebe6:	eef4 4a43 	vcmp.f32	s9, s6
 801ebea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ebee:	f041 80d3 	bne.w	801fd98 <calculate_aabb_per_shape+0x15c8>
 801ebf2:	ee29 aa09 	vmul.f32	s20, s18, s18
 801ebf6:	ee3a aa0f 	vadd.f32	s20, s20, s30
 801ebfa:	eeb5 aa40 	vcmp.f32	s20, #0.0
 801ebfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ec02:	ee79 bac9 	vsub.f32	s23, s19, s18
 801ec06:	eef1 aaca 	vsqrt.f32	s21, s20
 801ec0a:	eeb1 ba49 	vneg.f32	s22, s18
 801ec0e:	edcd 6a08 	vstr	s13, [sp, #32]
 801ec12:	edcd 4a07 	vstr	s9, [sp, #28]
 801ec16:	ed8d 6a06 	vstr	s12, [sp, #24]
 801ec1a:	edcd 5a05 	vstr	s11, [sp, #20]
 801ec1e:	ed8d 5a04 	vstr	s10, [sp, #16]
 801ec22:	edcd 7a03 	vstr	s15, [sp, #12]
 801ec26:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ec2a:	f101 866c 	bmi.w	8020906 <calculate_aabb_per_shape+0x2136>
 801ec2e:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 801ec32:	f012 faaf 	bl	8031194 <acosf>
 801ec36:	ed5f 0a1a 	vldr	s1, [pc, #-104]	@ 801ebd0 <calculate_aabb_per_shape+0x400>
 801ec3a:	ee30 0ac0 	vsub.f32	s0, s1, s0
 801ec3e:	f012 fad7 	bl	80311f0 <fmodf>
 801ec42:	ee39 aa89 	vadd.f32	s20, s19, s18
 801ec46:	ed8d 0a02 	vstr	s0, [sp, #8]
 801ec4a:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ec4e:	eddd 7a03 	vldr	s15, [sp, #12]
 801ec52:	ed9d 5a04 	vldr	s10, [sp, #16]
 801ec56:	eddd 5a05 	vldr	s11, [sp, #20]
 801ec5a:	ed9d 6a06 	vldr	s12, [sp, #24]
 801ec5e:	eddd 4a07 	vldr	s9, [sp, #28]
 801ec62:	eddd 6a08 	vldr	s13, [sp, #32]
 801ec66:	ee89 0a2a 	vdiv.f32	s0, s18, s21
 801ec6a:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 801ec6e:	edcd 4a08 	vstr	s9, [sp, #32]
 801ec72:	ed8d 6a07 	vstr	s12, [sp, #28]
 801ec76:	edcd 5a06 	vstr	s11, [sp, #24]
 801ec7a:	ed8d 5a05 	vstr	s10, [sp, #20]
 801ec7e:	edcd 7a03 	vstr	s15, [sp, #12]
 801ec82:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ec86:	ed1f ca2e 	vldr	s24, [pc, #-184]	@ 801ebd0 <calculate_aabb_per_shape+0x400>
 801ec8a:	f012 fa83 	bl	8031194 <acosf>
 801ec8e:	eef0 0a4c 	vmov.f32	s1, s24
 801ec92:	ee3c 0a40 	vsub.f32	s0, s24, s0
 801ec96:	f012 faab 	bl	80311f0 <fmodf>
 801ec9a:	ee28 2a08 	vmul.f32	s4, s16, s16
 801ec9e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801eca2:	ee32 2a0f 	vadd.f32	s4, s4, s30
 801eca6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ecaa:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 801ecae:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801ecb2:	eeb5 2a40 	vcmp.f32	s4, #0.0
 801ecb6:	bf54      	ite	pl
 801ecb8:	eef0 aa61 	vmovpl.f32	s21, s3
 801ecbc:	eef0 aa43 	vmovmi.f32	s21, s6
 801ecc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ecc4:	ed8d 0a04 	vstr	s0, [sp, #16]
 801ecc8:	eeb1 4ac2 	vsqrt.f32	s8, s4
 801eccc:	ee38 bac8 	vsub.f32	s22, s17, s16
 801ecd0:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ecd4:	eddd 7a03 	vldr	s15, [sp, #12]
 801ecd8:	ed9d 5a05 	vldr	s10, [sp, #20]
 801ecdc:	eddd 5a06 	vldr	s11, [sp, #24]
 801ece0:	ed9d 6a07 	vldr	s12, [sp, #28]
 801ece4:	eddd 4a08 	vldr	s9, [sp, #32]
 801ece8:	eddd 6a09 	vldr	s13, [sp, #36]	@ 0x24
 801ecec:	f101 859e 	bmi.w	802082c <calculate_aabb_per_shape+0x205c>
 801ecf0:	ee8f 9a04 	vdiv.f32	s18, s30, s8
 801ecf4:	eeb0 0a49 	vmov.f32	s0, s18
 801ecf8:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801ecfc:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801ed00:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801ed04:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801ed08:	ed8d 5a08 	vstr	s10, [sp, #32]
 801ed0c:	edcd 1a07 	vstr	s3, [sp, #28]
 801ed10:	ed8d 3a06 	vstr	s6, [sp, #24]
 801ed14:	edcd 7a05 	vstr	s15, [sp, #20]
 801ed18:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ed1c:	f012 fa3a 	bl	8031194 <acosf>
 801ed20:	ee2a 0a80 	vmul.f32	s0, s21, s0
 801ed24:	eef0 0a4c 	vmov.f32	s1, s24
 801ed28:	ee30 0a0c 	vadd.f32	s0, s0, s24
 801ed2c:	f012 fa60 	bl	80311f0 <fmodf>
 801ed30:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801ed34:	ed9d 3a06 	vldr	s6, [sp, #24]
 801ed38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ed3c:	eddd 1a07 	vldr	s3, [sp, #28]
 801ed40:	ed8d 0a03 	vstr	s0, [sp, #12]
 801ed44:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ed48:	eddd 7a05 	vldr	s15, [sp, #20]
 801ed4c:	ed9d 5a08 	vldr	s10, [sp, #32]
 801ed50:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801ed54:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801ed58:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801ed5c:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801ed60:	ee78 aa88 	vadd.f32	s21, s17, s16
 801ed64:	fe33 8a21 	vselgt.f32	s16, s6, s3
 801ed68:	eeb0 0a49 	vmov.f32	s0, s18
 801ed6c:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801ed70:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801ed74:	ed8d 6a08 	vstr	s12, [sp, #32]
 801ed78:	edcd 5a07 	vstr	s11, [sp, #28]
 801ed7c:	ed8d 5a06 	vstr	s10, [sp, #24]
 801ed80:	edcd 7a05 	vstr	s15, [sp, #20]
 801ed84:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ed88:	f012 fa04 	bl	8031194 <acosf>
 801ed8c:	ee20 0a08 	vmul.f32	s0, s0, s16
 801ed90:	ed5f 0a71 	vldr	s1, [pc, #-452]	@ 801ebd0 <calculate_aabb_per_shape+0x400>
 801ed94:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ed98:	f012 fa2a 	bl	80311f0 <fmodf>
 801ed9c:	ed9d 7a01 	vldr	s14, [sp, #4]
 801eda0:	eeb0 8a40 	vmov.f32	s16, s0
 801eda4:	eddd 7a05 	vldr	s15, [sp, #20]
 801eda8:	ed9d 5a06 	vldr	s10, [sp, #24]
 801edac:	eddd 5a07 	vldr	s11, [sp, #28]
 801edb0:	ed9d 6a08 	vldr	s12, [sp, #32]
 801edb4:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801edb8:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801edbc:	ee36 3a68 	vsub.f32	s6, s12, s17
 801edc0:	ee3d ca69 	vsub.f32	s24, s26, s19
 801edc4:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801edc8:	ee2c 2a0c 	vmul.f32	s4, s24, s24
 801edcc:	ee23 3a03 	vmul.f32	s6, s6, s6
 801edd0:	ee32 0a03 	vadd.f32	s0, s4, s6
 801edd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801edd8:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 801eddc:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 801ede0:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ede4:	fe39 9a02 	vselgt.f32	s18, s18, s4
 801ede8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801edec:	eeb1 2ac0 	vsqrt.f32	s4, s0
 801edf0:	f101 845c 	bmi.w	80206ac <calculate_aabb_per_shape+0x1edc>
 801edf4:	ee8c 0a02 	vdiv.f32	s0, s24, s4
 801edf8:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801edfc:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801ee00:	ed8d 6a08 	vstr	s12, [sp, #32]
 801ee04:	edcd 5a07 	vstr	s11, [sp, #28]
 801ee08:	ed8d 5a06 	vstr	s10, [sp, #24]
 801ee0c:	edcd 7a05 	vstr	s15, [sp, #20]
 801ee10:	ed8d 7a01 	vstr	s14, [sp, #4]
 801ee14:	f012 f9be 	bl	8031194 <acosf>
 801ee18:	ed5f 0a93 	vldr	s1, [pc, #-588]	@ 801ebd0 <calculate_aabb_per_shape+0x400>
 801ee1c:	ee20 0a09 	vmul.f32	s0, s0, s18
 801ee20:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ee24:	f012 f9e4 	bl	80311f0 <fmodf>
 801ee28:	ed9d 7a01 	vldr	s14, [sp, #4]
 801ee2c:	eddd 7a05 	vldr	s15, [sp, #20]
 801ee30:	ee77 9a69 	vsub.f32	s19, s14, s19
 801ee34:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801ee38:	eeb0 9a40 	vmov.f32	s18, s0
 801ee3c:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801ee40:	ee29 0aa9 	vmul.f32	s0, s19, s19
 801ee44:	ee68 8aa8 	vmul.f32	s17, s17, s17
 801ee48:	ee30 0a28 	vadd.f32	s0, s0, s17
 801ee4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee50:	eeb7 2a00 	vmov.f32	s4, #112	@ 0x3f800000  1.0
 801ee54:	eebf 3a00 	vmov.f32	s6, #240	@ 0xbf800000 -1.0
 801ee58:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ee5c:	fe72 8a03 	vselgt.f32	s17, s4, s6
 801ee60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ee64:	eeb1 cac0 	vsqrt.f32	s24, s0
 801ee68:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ee6c:	eddd 5a07 	vldr	s11, [sp, #28]
 801ee70:	ed9d 6a08 	vldr	s12, [sp, #32]
 801ee74:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801ee78:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801ee7c:	f101 8404 	bmi.w	8020688 <calculate_aabb_per_shape+0x1eb8>
 801ee80:	ee89 0a8c 	vdiv.f32	s0, s19, s24
 801ee84:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801ee88:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801ee8c:	ed8d 6a08 	vstr	s12, [sp, #32]
 801ee90:	edcd 5a07 	vstr	s11, [sp, #28]
 801ee94:	ed8d 5a06 	vstr	s10, [sp, #24]
 801ee98:	edcd 7a05 	vstr	s15, [sp, #20]
 801ee9c:	ed8d 7a01 	vstr	s14, [sp, #4]
 801eea0:	f012 f978 	bl	8031194 <acosf>
 801eea4:	ed5f 0ab6 	vldr	s1, [pc, #-728]	@ 801ebd0 <calculate_aabb_per_shape+0x400>
 801eea8:	ee20 0a28 	vmul.f32	s0, s0, s17
 801eeac:	ee30 0a20 	vadd.f32	s0, s0, s1
 801eeb0:	f012 f99e 	bl	80311f0 <fmodf>
 801eeb4:	ed9d 7a01 	vldr	s14, [sp, #4]
 801eeb8:	eddd 7a05 	vldr	s15, [sp, #20]
 801eebc:	ed9d 5a06 	vldr	s10, [sp, #24]
 801eec0:	eddd 5a07 	vldr	s11, [sp, #28]
 801eec4:	ed9d 6a08 	vldr	s12, [sp, #32]
 801eec8:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801eecc:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801eed0:	f1b8 0f00 	cmp.w	r8, #0
 801eed4:	d105      	bne.n	801eee2 <calculate_aabb_per_shape+0x712>
 801eed6:	eeb0 3a49 	vmov.f32	s6, s18
 801eeda:	eeb0 9a40 	vmov.f32	s18, s0
 801eede:	eeb0 0a43 	vmov.f32	s0, s6
 801eee2:	eeb4 9ac0 	vcmpe.f32	s18, s0
 801eee6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eeea:	ed9d 4a02 	vldr	s8, [sp, #8]
 801eeee:	f340 86cc 	ble.w	801fc8a <calculate_aabb_per_shape+0x14ba>
 801eef2:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801eef6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801eefa:	dc0d      	bgt.n	801ef18 <calculate_aabb_per_shape+0x748>
 801eefc:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801ef00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef04:	d408      	bmi.n	801ef18 <calculate_aabb_per_shape+0x748>
 801ef06:	eeb4 dac7 	vcmpe.f32	s26, s14
 801ef0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef0e:	bf54      	ite	pl
 801ef10:	eef0 ba47 	vmovpl.f32	s23, s14
 801ef14:	eef0 ba4d 	vmovmi.f32	s23, s26
 801ef18:	ed9d 4a04 	vldr	s8, [sp, #16]
 801ef1c:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801ef20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef24:	dc0a      	bgt.n	801ef3c <calculate_aabb_per_shape+0x76c>
 801ef26:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801ef2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef2e:	d405      	bmi.n	801ef3c <calculate_aabb_per_shape+0x76c>
 801ef30:	eeb4 dac7 	vcmpe.f32	s26, s14
 801ef34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef38:	fe3d aa07 	vselgt.f32	s20, s26, s14
 801ef3c:	ed9d 4a03 	vldr	s8, [sp, #12]
 801ef40:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801ef44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef48:	dc0d      	bgt.n	801ef66 <calculate_aabb_per_shape+0x796>
 801ef4a:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801ef4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef52:	d408      	bmi.n	801ef66 <calculate_aabb_per_shape+0x796>
 801ef54:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801ef58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef5c:	bf54      	ite	pl
 801ef5e:	eeb0 ba67 	vmovpl.f32	s22, s15
 801ef62:	eeb0 ba46 	vmovmi.f32	s22, s12
 801ef66:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801ef6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef6e:	dc0a      	bgt.n	801ef86 <calculate_aabb_per_shape+0x7b6>
 801ef70:	eeb4 9ac8 	vcmpe.f32	s18, s16
 801ef74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef78:	d405      	bmi.n	801ef86 <calculate_aabb_per_shape+0x7b6>
 801ef7a:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801ef7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef82:	fe76 aa27 	vselgt.f32	s21, s12, s15
 801ef86:	ed94 1a04 	vldr	s2, [r4, #16]
 801ef8a:	edd4 1a05 	vldr	s3, [r4, #20]
 801ef8e:	eeb4 1a6b 	vcmp.f32	s2, s23
 801ef92:	ed94 2a06 	vldr	s4, [r4, #24]
 801ef96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ef9a:	eef4 1a4b 	vcmp.f32	s3, s22
 801ef9e:	fe3b 1a81 	vselgt.f32	s2, s23, s2
 801efa2:	ed94 3a07 	vldr	s6, [r4, #28]
 801efa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efaa:	eeb4 2a6b 	vcmp.f32	s4, s23
 801efae:	fe7b 1a21 	vselgt.f32	s3, s22, s3
 801efb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efb6:	eeb4 3a4b 	vcmp.f32	s6, s22
 801efba:	bf48      	it	mi
 801efbc:	eeb0 2a6b 	vmovmi.f32	s4, s23
 801efc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efc4:	eeb4 1a4a 	vcmp.f32	s2, s20
 801efc8:	bf48      	it	mi
 801efca:	eeb0 3a4b 	vmovmi.f32	s6, s22
 801efce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efd2:	eef4 aa61 	vcmp.f32	s21, s3
 801efd6:	fe3a 1a01 	vselgt.f32	s2, s20, s2
 801efda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efde:	eeb4 2a4a 	vcmp.f32	s4, s20
 801efe2:	bf48      	it	mi
 801efe4:	eef0 1a6a 	vmovmi.f32	s3, s21
 801efe8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801efec:	eef4 aa43 	vcmp.f32	s21, s6
 801eff0:	bf48      	it	mi
 801eff2:	eeb0 2a4a 	vmovmi.f32	s4, s20
 801eff6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801effa:	fe3a 3a83 	vselgt.f32	s6, s21, s6
 801effe:	ed84 1a04 	vstr	s2, [r4, #16]
 801f002:	edc4 1a05 	vstr	s3, [r4, #20]
 801f006:	ed84 2a06 	vstr	s4, [r4, #24]
 801f00a:	ed84 3a07 	vstr	s6, [r4, #28]
 801f00e:	6820      	ldr	r0, [r4, #0]
 801f010:	e0e2      	b.n	801f1d8 <calculate_aabb_per_shape+0xa08>
 801f012:	f1b9 0f01 	cmp.w	r9, #1
 801f016:	bf0d      	iteet	eq
 801f018:	eddf 7ac7 	vldreq	s15, [pc, #796]	@ 801f338 <calculate_aabb_per_shape+0xb68>
 801f01c:	eef0 7a6c 	vmovne.f32	s15, s25
 801f020:	eeb0 7a4e 	vmovne.f32	s14, s28
 801f024:	eeb0 7a67 	vmoveq.f32	s14, s15
 801f028:	e460      	b.n	801e8ec <calculate_aabb_per_shape+0x11c>
 801f02a:	edd4 9a04 	vldr	s19, [r4, #16]
 801f02e:	edd4 aa05 	vldr	s21, [r4, #20]
 801f032:	eef4 9ac7 	vcmpe.f32	s19, s14
 801f036:	ed94 aa06 	vldr	s20, [r4, #24]
 801f03a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f03e:	eef4 aae7 	vcmpe.f32	s21, s15
 801f042:	bf58      	it	pl
 801f044:	eef0 9a47 	vmovpl.f32	s19, s14
 801f048:	ed94 ba07 	vldr	s22, [r4, #28]
 801f04c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f050:	eeb4 aac7 	vcmpe.f32	s20, s14
 801f054:	bf58      	it	pl
 801f056:	eef0 aa67 	vmovpl.f32	s21, s15
 801f05a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f05e:	eeb4 bae7 	vcmpe.f32	s22, s15
 801f062:	fe3a aa07 	vselgt.f32	s20, s20, s14
 801f066:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f06a:	eef4 9ac5 	vcmpe.f32	s19, s10
 801f06e:	fe3b ba27 	vselgt.f32	s22, s22, s15
 801f072:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f076:	ed8d fa0e 	vstr	s30, [sp, #56]	@ 0x38
 801f07a:	ed8d fa0f 	vstr	s30, [sp, #60]	@ 0x3c
 801f07e:	edc4 9a04 	vstr	s19, [r4, #16]
 801f082:	edc4 aa05 	vstr	s21, [r4, #20]
 801f086:	ed84 aa06 	vstr	s20, [r4, #24]
 801f08a:	ed84 ba07 	vstr	s22, [r4, #28]
 801f08e:	d80a      	bhi.n	801f0a6 <calculate_aabb_per_shape+0x8d6>
 801f090:	eeb4 aac5 	vcmpe.f32	s20, s10
 801f094:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f098:	db05      	blt.n	801f0a6 <calculate_aabb_per_shape+0x8d6>
 801f09a:	eef4 aae6 	vcmpe.f32	s21, s13
 801f09e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f0a2:	f240 829c 	bls.w	801f5de <calculate_aabb_per_shape+0xe0e>
 801f0a6:	eeb2 3a02 	vmov.f32	s6, #34	@ 0x41100000  9.0
 801f0aa:	eeb8 8a08 	vmov.f32	s16, #136	@ 0xc0400000 -3.0
 801f0ae:	ee25 2a03 	vmul.f32	s4, s10, s6
 801f0b2:	ee28 8a88 	vmul.f32	s16, s17, s16
 801f0b6:	ee64 1a83 	vmul.f32	s3, s9, s6
 801f0ba:	ee38 8a02 	vadd.f32	s16, s16, s4
 801f0be:	eeb0 2a08 	vmov.f32	s4, #8	@ 0x40400000  3.0
 801f0c2:	ee38 8a61 	vsub.f32	s16, s16, s3
 801f0c6:	ee67 1a02 	vmul.f32	s3, s14, s4
 801f0ca:	eeb1 3a08 	vmov.f32	s6, #24	@ 0x40c00000  6.0
 801f0ce:	eef2 ba08 	vmov.f32	s23, #40	@ 0x41400000  12.0
 801f0d2:	ee38 8a21 	vadd.f32	s16, s16, s3
 801f0d6:	ee25 1a2b 	vmul.f32	s2, s10, s23
 801f0da:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801f0de:	ee68 ba83 	vmul.f32	s23, s17, s6
 801f0e2:	ee64 1a83 	vmul.f32	s3, s9, s6
 801f0e6:	ee7b bac1 	vsub.f32	s23, s23, s2
 801f0ea:	ee25 3a02 	vmul.f32	s6, s10, s4
 801f0ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f0f2:	ee28 2a82 	vmul.f32	s4, s17, s4
 801f0f6:	ee7b baa1 	vadd.f32	s23, s23, s3
 801f0fa:	ee33 3a42 	vsub.f32	s6, s6, s4
 801f0fe:	f100 8235 	bmi.w	801f56c <calculate_aabb_per_shape+0xd9c>
 801f102:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f106:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f10a:	bf4c      	ite	mi
 801f10c:	2301      	movmi	r3, #1
 801f10e:	2300      	movpl	r3, #0
 801f110:	2b00      	cmp	r3, #0
 801f112:	f040 8117 	bne.w	801f344 <calculate_aabb_per_shape+0xb74>
 801f116:	eeb1 0a00 	vmov.f32	s0, #16	@ 0x40800000  4.0
 801f11a:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f11e:	ee2b 0aab 	vmul.f32	s0, s23, s23
 801f122:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f126:	ee30 0a43 	vsub.f32	s0, s0, s6
 801f12a:	eeb4 0aed 	vcmpe.f32	s0, s27
 801f12e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f132:	f300 836a 	bgt.w	801f80a <calculate_aabb_per_shape+0x103a>
 801f136:	eeb2 3a02 	vmov.f32	s6, #34	@ 0x41100000  9.0
 801f13a:	eeb8 8a08 	vmov.f32	s16, #136	@ 0xc0400000 -3.0
 801f13e:	ee26 2a83 	vmul.f32	s4, s13, s6
 801f142:	ee29 8a08 	vmul.f32	s16, s18, s16
 801f146:	ee65 1a83 	vmul.f32	s3, s11, s6
 801f14a:	ee38 8a02 	vadd.f32	s16, s16, s4
 801f14e:	eeb0 2a08 	vmov.f32	s4, #8	@ 0x40400000  3.0
 801f152:	ee38 8a61 	vsub.f32	s16, s16, s3
 801f156:	ee67 1a82 	vmul.f32	s3, s15, s4
 801f15a:	eeb1 3a08 	vmov.f32	s6, #24	@ 0x40c00000  6.0
 801f15e:	ee38 8a21 	vadd.f32	s16, s16, s3
 801f162:	eeb2 1a08 	vmov.f32	s2, #40	@ 0x41400000  12.0
 801f166:	ee69 8a03 	vmul.f32	s17, s18, s6
 801f16a:	ee26 1a81 	vmul.f32	s2, s13, s2
 801f16e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 801f172:	ee65 1a83 	vmul.f32	s3, s11, s6
 801f176:	ee78 8ac1 	vsub.f32	s17, s17, s2
 801f17a:	ee26 3a82 	vmul.f32	s6, s13, s4
 801f17e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f182:	ee29 2a02 	vmul.f32	s4, s18, s4
 801f186:	ee78 8aa1 	vadd.f32	s17, s17, s3
 801f18a:	ee33 3a42 	vsub.f32	s6, s6, s4
 801f18e:	f100 81f5 	bmi.w	801f57c <calculate_aabb_per_shape+0xdac>
 801f192:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f196:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f19a:	bf4c      	ite	mi
 801f19c:	2301      	movmi	r3, #1
 801f19e:	2300      	movpl	r3, #0
 801f1a0:	2b00      	cmp	r3, #0
 801f1a2:	f040 815a 	bne.w	801f45a <calculate_aabb_per_shape+0xc8a>
 801f1a6:	eeb1 0a00 	vmov.f32	s0, #16	@ 0x40800000  4.0
 801f1aa:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f1ae:	ee28 0aa8 	vmul.f32	s0, s17, s17
 801f1b2:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f1b6:	ee30 0a43 	vsub.f32	s0, s0, s6
 801f1ba:	eeb4 0aed 	vcmpe.f32	s0, s27
 801f1be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1c2:	f300 8367 	bgt.w	801f894 <calculate_aabb_per_shape+0x10c4>
 801f1c6:	edc4 9a04 	vstr	s19, [r4, #16]
 801f1ca:	edc4 aa05 	vstr	s21, [r4, #20]
 801f1ce:	ed84 aa06 	vstr	s20, [r4, #24]
 801f1d2:	ed84 ba07 	vstr	s22, [r4, #28]
 801f1d6:	6820      	ldr	r0, [r4, #0]
 801f1d8:	3601      	adds	r6, #1
 801f1da:	42b0      	cmp	r0, r6
 801f1dc:	d93c      	bls.n	801f258 <calculate_aabb_per_shape+0xa88>
 801f1de:	46ac      	mov	ip, r5
 801f1e0:	eeb0 9a67 	vmov.f32	s18, s15
 801f1e4:	eef0 8a47 	vmov.f32	s17, s14
 801f1e8:	68a2      	ldr	r2, [r4, #8]
 801f1ea:	f7ff bb46 	b.w	801e87a <calculate_aabb_per_shape+0xaa>
 801f1ee:	ed9f 3a53 	vldr	s6, [pc, #332]	@ 801f33c <calculate_aabb_per_shape+0xb6c>
 801f1f2:	eeb4 5ac3 	vcmpe.f32	s10, s6
 801f1f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f1fa:	f6ff aba2 	blt.w	801e942 <calculate_aabb_per_shape+0x172>
 801f1fe:	ed94 1a04 	vldr	s2, [r4, #16]
 801f202:	edd4 1a05 	vldr	s3, [r4, #20]
 801f206:	eeb4 1a47 	vcmp.f32	s2, s14
 801f20a:	ed94 2a06 	vldr	s4, [r4, #24]
 801f20e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f212:	eef4 1a67 	vcmp.f32	s3, s15
 801f216:	ed94 3a07 	vldr	s6, [r4, #28]
 801f21a:	fe37 1a01 	vselgt.f32	s2, s14, s2
 801f21e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f222:	eeb4 2a47 	vcmp.f32	s4, s14
 801f226:	fe77 1aa1 	vselgt.f32	s3, s15, s3
 801f22a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f22e:	eeb4 3a67 	vcmp.f32	s6, s15
 801f232:	bf48      	it	mi
 801f234:	eeb0 2a47 	vmovmi.f32	s4, s14
 801f238:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f23c:	bf48      	it	mi
 801f23e:	eeb0 3a67 	vmovmi.f32	s6, s15
 801f242:	3601      	adds	r6, #1
 801f244:	42b0      	cmp	r0, r6
 801f246:	ed84 1a04 	vstr	s2, [r4, #16]
 801f24a:	edc4 1a05 	vstr	s3, [r4, #20]
 801f24e:	ed84 2a06 	vstr	s4, [r4, #24]
 801f252:	ed84 3a07 	vstr	s6, [r4, #28]
 801f256:	d8c2      	bhi.n	801f1de <calculate_aabb_per_shape+0xa0e>
 801f258:	ed94 6a04 	vldr	s12, [r4, #16]
 801f25c:	eefd 6ac6 	vcvt.s32.f32	s13, s12
 801f260:	ed94 7a05 	vldr	s14, [r4, #20]
 801f264:	eef8 5ae6 	vcvt.f32.s32	s11, s13
 801f268:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 801f26c:	ed94 5a06 	vldr	s10, [r4, #24]
 801f270:	eeb4 6ae5 	vcmpe.f32	s12, s11
 801f274:	eef8 4ae7 	vcvt.f32.s32	s9, s15
 801f278:	eebd 6ac5 	vcvt.s32.f32	s12, s10
 801f27c:	edd4 5a07 	vldr	s11, [r4, #28]
 801f280:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f284:	eeb4 7ae4 	vcmpe.f32	s14, s9
 801f288:	eeb8 4ac6 	vcvt.f32.s32	s8, s12
 801f28c:	eebd 7ae5 	vcvt.s32.f32	s14, s11
 801f290:	bf4c      	ite	mi
 801f292:	2001      	movmi	r0, #1
 801f294:	2000      	movpl	r0, #0
 801f296:	ee16 5a90 	vmov	r5, s13
 801f29a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f29e:	eef8 4ac7 	vcvt.f32.s32	s9, s14
 801f2a2:	eeb4 5ac4 	vcmpe.f32	s10, s8
 801f2a6:	eba5 0000 	sub.w	r0, r5, r0
 801f2aa:	bf4c      	ite	mi
 801f2ac:	2101      	movmi	r1, #1
 801f2ae:	2100      	movpl	r1, #0
 801f2b0:	ee06 0a90 	vmov	s13, r0
 801f2b4:	ee17 0a90 	vmov	r0, s15
 801f2b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2bc:	eef4 5ae4 	vcmpe.f32	s11, s9
 801f2c0:	eba0 0101 	sub.w	r1, r0, r1
 801f2c4:	bfcc      	ite	gt
 801f2c6:	2201      	movgt	r2, #1
 801f2c8:	2200      	movle	r2, #0
 801f2ca:	ee07 1a90 	vmov	s15, r1
 801f2ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f2d2:	ee16 1a10 	vmov	r1, s12
 801f2d6:	bfc8      	it	gt
 801f2d8:	2301      	movgt	r3, #1
 801f2da:	440a      	add	r2, r1
 801f2dc:	bfd8      	it	le
 801f2de:	2300      	movle	r3, #0
 801f2e0:	ee17 1a10 	vmov	r1, s14
 801f2e4:	4419      	add	r1, r3
 801f2e6:	ee07 1a10 	vmov	s14, r1
 801f2ea:	ee06 2a10 	vmov	s12, r2
 801f2ee:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801f2f2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801f2f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801f2fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801f2fe:	ee36 5a66 	vsub.f32	s10, s12, s13
 801f302:	ee77 5a67 	vsub.f32	s11, s14, s15
 801f306:	e159      	b.n	801f5bc <calculate_aabb_per_shape+0xdec>
 801f308:	68e2      	ldr	r2, [r4, #12]
 801f30a:	00b9      	lsls	r1, r7, #2
 801f30c:	440a      	add	r2, r1
 801f30e:	3702      	adds	r7, #2
 801f310:	ed92 7a00 	vldr	s14, [r2]
 801f314:	edd2 7a01 	vldr	s15, [r2, #4]
 801f318:	f1b8 0f00 	cmp.w	r8, #0
 801f31c:	d003      	beq.n	801f326 <calculate_aabb_per_shape+0xb56>
 801f31e:	ee37 7a28 	vadd.f32	s14, s14, s17
 801f322:	ee77 7a89 	vadd.f32	s15, s15, s18
 801f326:	eef0 ca67 	vmov.f32	s25, s15
 801f32a:	eeb0 ea47 	vmov.f32	s28, s14
 801f32e:	f04f 0900 	mov.w	r9, #0
 801f332:	f7ff badb 	b.w	801e8ec <calculate_aabb_per_shape+0x11c>
 801f336:	bf00      	nop
 801f338:	00000000 	.word	0x00000000
 801f33c:	b727c5ac 	.word	0xb727c5ac
 801f340:	c7ffff00 	.word	0xc7ffff00
 801f344:	eef5 bac0 	vcmpe.f32	s23, #0.0
 801f348:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f34c:	f100 8126 	bmi.w	801f59c <calculate_aabb_per_shape+0xdcc>
 801f350:	eef4 baed 	vcmpe.f32	s23, s27
 801f354:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f358:	bfcc      	ite	gt
 801f35a:	2301      	movgt	r3, #1
 801f35c:	2300      	movle	r3, #0
 801f35e:	2b00      	cmp	r3, #0
 801f360:	f43f aee9 	beq.w	801f136 <calculate_aabb_per_shape+0x966>
 801f364:	eeb1 3a43 	vneg.f32	s6, s6
 801f368:	eec3 1a2b 	vdiv.f32	s3, s6, s23
 801f36c:	eef4 1aed 	vcmpe.f32	s3, s27
 801f370:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f374:	f77f aedf 	ble.w	801f136 <calculate_aabb_per_shape+0x966>
 801f378:	eef4 1aef 	vcmpe.f32	s3, s31
 801f37c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f380:	f57f aed9 	bpl.w	801f136 <calculate_aabb_per_shape+0x966>
 801f384:	edcd 1a0e 	vstr	s3, [sp, #56]	@ 0x38
 801f388:	2301      	movs	r3, #1
 801f38a:	eef7 0a00 	vmov.f32	s1, #112	@ 0x3f800000  1.0
 801f38e:	eeb0 1a08 	vmov.f32	s2, #8	@ 0x40400000  3.0
 801f392:	ee30 0ae1 	vsub.f32	s0, s1, s3
 801f396:	ee20 2a01 	vmul.f32	s4, s0, s2
 801f39a:	ee20 3a00 	vmul.f32	s6, s0, s0
 801f39e:	ee20 8a02 	vmul.f32	s16, s0, s4
 801f3a2:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f3a6:	ee22 2a21 	vmul.f32	s4, s4, s3
 801f3aa:	ee28 8a21 	vmul.f32	s16, s16, s3
 801f3ae:	ee22 2a21 	vmul.f32	s4, s4, s3
 801f3b2:	ee28 8a05 	vmul.f32	s16, s16, s10
 801f3b6:	ee23 3a28 	vmul.f32	s6, s6, s17
 801f3ba:	ee21 0aa1 	vmul.f32	s0, s3, s3
 801f3be:	ee22 2a24 	vmul.f32	s4, s4, s9
 801f3c2:	ee33 3a08 	vadd.f32	s6, s6, s16
 801f3c6:	ee60 1a21 	vmul.f32	s3, s0, s3
 801f3ca:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f3ce:	ee61 1a87 	vmul.f32	s3, s3, s14
 801f3d2:	ee33 3a21 	vadd.f32	s6, s6, s3
 801f3d6:	eef4 9ac3 	vcmpe.f32	s19, s6
 801f3da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f3de:	eeb4 aac3 	vcmpe.f32	s20, s6
 801f3e2:	bf58      	it	pl
 801f3e4:	eef0 9a43 	vmovpl.f32	s19, s6
 801f3e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f3ec:	fe3a aa03 	vselgt.f32	s20, s20, s6
 801f3f0:	2b02      	cmp	r3, #2
 801f3f2:	f47f aea0 	bne.w	801f136 <calculate_aabb_per_shape+0x966>
 801f3f6:	ed9d 2a0f 	vldr	s4, [sp, #60]	@ 0x3c
 801f3fa:	ee70 0ac2 	vsub.f32	s1, s1, s4
 801f3fe:	ee20 1a81 	vmul.f32	s2, s1, s2
 801f402:	ee20 3aa0 	vmul.f32	s6, s1, s1
 801f406:	ee60 1a81 	vmul.f32	s3, s1, s2
 801f40a:	ee23 3a20 	vmul.f32	s6, s6, s1
 801f40e:	ee61 1a82 	vmul.f32	s3, s3, s4
 801f412:	ee22 1a01 	vmul.f32	s2, s4, s2
 801f416:	ee61 0a85 	vmul.f32	s1, s3, s10
 801f41a:	ee21 1a02 	vmul.f32	s2, s2, s4
 801f41e:	ee63 8a28 	vmul.f32	s17, s6, s17
 801f422:	ee62 1a02 	vmul.f32	s3, s4, s4
 801f426:	ee21 1a24 	vmul.f32	s2, s2, s9
 801f42a:	ee38 3aa0 	vadd.f32	s6, s17, s1
 801f42e:	ee21 2a82 	vmul.f32	s4, s3, s4
 801f432:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f436:	ee22 2a07 	vmul.f32	s4, s4, s14
 801f43a:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f43e:	eef4 9ac3 	vcmpe.f32	s19, s6
 801f442:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f446:	eeb4 aac3 	vcmpe.f32	s20, s6
 801f44a:	bf58      	it	pl
 801f44c:	eef0 9a43 	vmovpl.f32	s19, s6
 801f450:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f454:	fe3a aa03 	vselgt.f32	s20, s20, s6
 801f458:	e66d      	b.n	801f136 <calculate_aabb_per_shape+0x966>
 801f45a:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 801f45e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f462:	f100 8093 	bmi.w	801f58c <calculate_aabb_per_shape+0xdbc>
 801f466:	eef4 8aed 	vcmpe.f32	s17, s27
 801f46a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f46e:	bfcc      	ite	gt
 801f470:	2301      	movgt	r3, #1
 801f472:	2300      	movle	r3, #0
 801f474:	2b00      	cmp	r3, #0
 801f476:	f43f aea6 	beq.w	801f1c6 <calculate_aabb_per_shape+0x9f6>
 801f47a:	eeb1 3a43 	vneg.f32	s6, s6
 801f47e:	ee83 1a28 	vdiv.f32	s2, s6, s17
 801f482:	eeb4 1aed 	vcmpe.f32	s2, s27
 801f486:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f48a:	f77f ae9c 	ble.w	801f1c6 <calculate_aabb_per_shape+0x9f6>
 801f48e:	eeb4 1aef 	vcmpe.f32	s2, s31
 801f492:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f496:	f57f ae96 	bpl.w	801f1c6 <calculate_aabb_per_shape+0x9f6>
 801f49a:	2301      	movs	r3, #1
 801f49c:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801f4a0:	eef0 0a08 	vmov.f32	s1, #8	@ 0x40400000  3.0
 801f4a4:	ee31 0ac1 	vsub.f32	s0, s3, s2
 801f4a8:	ee20 2a20 	vmul.f32	s4, s0, s1
 801f4ac:	ee20 3a00 	vmul.f32	s6, s0, s0
 801f4b0:	ee20 8a02 	vmul.f32	s16, s0, s4
 801f4b4:	ee23 3a00 	vmul.f32	s6, s6, s0
 801f4b8:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f4bc:	ee28 8a01 	vmul.f32	s16, s16, s2
 801f4c0:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f4c4:	ee28 8a26 	vmul.f32	s16, s16, s13
 801f4c8:	ee23 3a09 	vmul.f32	s6, s6, s18
 801f4cc:	ee21 0a01 	vmul.f32	s0, s2, s2
 801f4d0:	ee22 2a25 	vmul.f32	s4, s4, s11
 801f4d4:	ee33 3a08 	vadd.f32	s6, s6, s16
 801f4d8:	ee20 1a01 	vmul.f32	s2, s0, s2
 801f4dc:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f4e0:	ee21 1a27 	vmul.f32	s2, s2, s15
 801f4e4:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f4e8:	eef4 aac3 	vcmpe.f32	s21, s6
 801f4ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4f0:	eeb4 bac3 	vcmpe.f32	s22, s6
 801f4f4:	bf58      	it	pl
 801f4f6:	eef0 aa43 	vmovpl.f32	s21, s6
 801f4fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f4fe:	fe3b ba03 	vselgt.f32	s22, s22, s6
 801f502:	2b02      	cmp	r3, #2
 801f504:	f47f ae5f 	bne.w	801f1c6 <calculate_aabb_per_shape+0x9f6>
 801f508:	ed9d 1a0f 	vldr	s2, [sp, #60]	@ 0x3c
 801f50c:	ee71 1ac1 	vsub.f32	s3, s3, s2
 801f510:	ee21 2aa0 	vmul.f32	s4, s3, s1
 801f514:	ee21 3aa1 	vmul.f32	s6, s3, s3
 801f518:	ee61 0a82 	vmul.f32	s1, s3, s4
 801f51c:	ee23 3a21 	vmul.f32	s6, s6, s3
 801f520:	ee21 2a02 	vmul.f32	s4, s2, s4
 801f524:	ee60 0a81 	vmul.f32	s1, s1, s2
 801f528:	ee22 2a01 	vmul.f32	s4, s4, s2
 801f52c:	ee60 0aa6 	vmul.f32	s1, s1, s13
 801f530:	ee23 9a09 	vmul.f32	s18, s6, s18
 801f534:	ee61 1a01 	vmul.f32	s3, s2, s2
 801f538:	ee22 2a25 	vmul.f32	s4, s4, s11
 801f53c:	ee39 3a20 	vadd.f32	s6, s18, s1
 801f540:	ee21 1a81 	vmul.f32	s2, s3, s2
 801f544:	ee33 3a02 	vadd.f32	s6, s6, s4
 801f548:	ee21 1a27 	vmul.f32	s2, s2, s15
 801f54c:	ee33 3a01 	vadd.f32	s6, s6, s2
 801f550:	eef4 aac3 	vcmpe.f32	s21, s6
 801f554:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f558:	eeb4 bac3 	vcmpe.f32	s22, s6
 801f55c:	bf58      	it	pl
 801f55e:	eef0 aa43 	vmovpl.f32	s21, s6
 801f562:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f566:	fe3b ba03 	vselgt.f32	s22, s22, s6
 801f56a:	e62c      	b.n	801f1c6 <calculate_aabb_per_shape+0x9f6>
 801f56c:	eeb4 8aee 	vcmpe.f32	s16, s29
 801f570:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f574:	bfcc      	ite	gt
 801f576:	2301      	movgt	r3, #1
 801f578:	2300      	movle	r3, #0
 801f57a:	e5c9      	b.n	801f110 <calculate_aabb_per_shape+0x940>
 801f57c:	eeb4 8aee 	vcmpe.f32	s16, s29
 801f580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f584:	bfcc      	ite	gt
 801f586:	2301      	movgt	r3, #1
 801f588:	2300      	movle	r3, #0
 801f58a:	e609      	b.n	801f1a0 <calculate_aabb_per_shape+0x9d0>
 801f58c:	eef4 8aee 	vcmpe.f32	s17, s29
 801f590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f594:	bf4c      	ite	mi
 801f596:	2301      	movmi	r3, #1
 801f598:	2300      	movpl	r3, #0
 801f59a:	e76b      	b.n	801f474 <calculate_aabb_per_shape+0xca4>
 801f59c:	eef4 baee 	vcmpe.f32	s23, s29
 801f5a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5a4:	bf4c      	ite	mi
 801f5a6:	2301      	movmi	r3, #1
 801f5a8:	2300      	movpl	r3, #0
 801f5aa:	e6d8      	b.n	801f35e <calculate_aabb_per_shape+0xb8e>
 801f5ac:	ed5f 5a9c 	vldr	s11, [pc, #-624]	@ 801f340 <calculate_aabb_per_shape+0xb70>
 801f5b0:	eeb0 6a47 	vmov.f32	s12, s14
 801f5b4:	eef0 6a67 	vmov.f32	s13, s15
 801f5b8:	eeb0 5a65 	vmov.f32	s10, s11
 801f5bc:	edc4 6a04 	vstr	s13, [r4, #16]
 801f5c0:	edc4 7a05 	vstr	s15, [r4, #20]
 801f5c4:	ed84 6a06 	vstr	s12, [r4, #24]
 801f5c8:	ed84 7a07 	vstr	s14, [r4, #28]
 801f5cc:	ed84 5a08 	vstr	s10, [r4, #32]
 801f5d0:	edc4 5a09 	vstr	s11, [r4, #36]	@ 0x24
 801f5d4:	b011      	add	sp, #68	@ 0x44
 801f5d6:	ecbd 8b10 	vpop	{d8-d15}
 801f5da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f5de:	eeb4 bae6 	vcmpe.f32	s22, s13
 801f5e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5e6:	f6ff ad5e 	blt.w	801f0a6 <calculate_aabb_per_shape+0x8d6>
 801f5ea:	eef4 9ae4 	vcmpe.f32	s19, s9
 801f5ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5f2:	f63f ad58 	bhi.w	801f0a6 <calculate_aabb_per_shape+0x8d6>
 801f5f6:	eeb4 aae4 	vcmpe.f32	s20, s9
 801f5fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f5fe:	f6ff ad52 	blt.w	801f0a6 <calculate_aabb_per_shape+0x8d6>
 801f602:	eef4 aae5 	vcmpe.f32	s21, s11
 801f606:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f60a:	f63f ad4c 	bhi.w	801f0a6 <calculate_aabb_per_shape+0x8d6>
 801f60e:	eeb4 bae5 	vcmpe.f32	s22, s11
 801f612:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f616:	f6ff ad46 	blt.w	801f0a6 <calculate_aabb_per_shape+0x8d6>
 801f61a:	e5dd      	b.n	801f1d8 <calculate_aabb_per_shape+0xa08>
 801f61c:	f1aa 0a05 	sub.w	sl, sl, #5
 801f620:	f1ba 0f03 	cmp.w	sl, #3
 801f624:	f240 81ae 	bls.w	801f984 <calculate_aabb_per_shape+0x11b4>
 801f628:	eef0 6a49 	vmov.f32	s13, s18
 801f62c:	eeb0 5a68 	vmov.f32	s10, s17
 801f630:	46ba      	mov	sl, r7
 801f632:	eeb0 6a66 	vmov.f32	s12, s13
 801f636:	eeb0 da45 	vmov.f32	s26, s10
 801f63a:	e17d      	b.n	801f938 <calculate_aabb_per_shape+0x1168>
 801f63c:	ed94 2a04 	vldr	s4, [r4, #16]
 801f640:	edd4 0a05 	vldr	s1, [r4, #20]
 801f644:	eeb4 2ac7 	vcmpe.f32	s4, s14
 801f648:	ed94 1a06 	vldr	s2, [r4, #24]
 801f64c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f650:	eef4 0ae7 	vcmpe.f32	s1, s15
 801f654:	bf58      	it	pl
 801f656:	eeb0 2a47 	vmovpl.f32	s4, s14
 801f65a:	ed94 0a07 	vldr	s0, [r4, #28]
 801f65e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f662:	eeb4 1ac7 	vcmpe.f32	s2, s14
 801f666:	bf58      	it	pl
 801f668:	eef0 0a67 	vmovpl.f32	s1, s15
 801f66c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f670:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801f674:	fe31 1a07 	vselgt.f32	s2, s2, s14
 801f678:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f67c:	eeb4 2ac5 	vcmpe.f32	s4, s10
 801f680:	fe30 0a27 	vselgt.f32	s0, s0, s15
 801f684:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f688:	ed84 2a04 	vstr	s4, [r4, #16]
 801f68c:	edc4 0a05 	vstr	s1, [r4, #20]
 801f690:	ed84 1a06 	vstr	s2, [r4, #24]
 801f694:	ed84 0a07 	vstr	s0, [r4, #28]
 801f698:	d80f      	bhi.n	801f6ba <calculate_aabb_per_shape+0xeea>
 801f69a:	eeb4 1ac5 	vcmpe.f32	s2, s10
 801f69e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6a2:	db0a      	blt.n	801f6ba <calculate_aabb_per_shape+0xeea>
 801f6a4:	eef4 0ae6 	vcmpe.f32	s1, s13
 801f6a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6ac:	d805      	bhi.n	801f6ba <calculate_aabb_per_shape+0xeea>
 801f6ae:	eeb4 0ae6 	vcmpe.f32	s0, s13
 801f6b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6b6:	f6bf ad8f 	bge.w	801f1d8 <calculate_aabb_per_shape+0xa08>
 801f6ba:	ee35 8a05 	vadd.f32	s16, s10, s10
 801f6be:	ee78 1aa8 	vadd.f32	s3, s17, s17
 801f6c2:	ee37 3a07 	vadd.f32	s6, s14, s14
 801f6c6:	ee78 1a61 	vsub.f32	s3, s16, s3
 801f6ca:	ee33 3a48 	vsub.f32	s6, s6, s16
 801f6ce:	ee33 3a61 	vsub.f32	s6, s6, s3
 801f6d2:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801f6d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6da:	f100 8139 	bmi.w	801f950 <calculate_aabb_per_shape+0x1180>
 801f6de:	eeb4 3aed 	vcmpe.f32	s6, s27
 801f6e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6e6:	bfcc      	ite	gt
 801f6e8:	2301      	movgt	r3, #1
 801f6ea:	2300      	movle	r3, #0
 801f6ec:	b173      	cbz	r3, 801f70c <calculate_aabb_per_shape+0xf3c>
 801f6ee:	eef1 1a61 	vneg.f32	s3, s3
 801f6f2:	ee81 8a83 	vdiv.f32	s16, s3, s6
 801f6f6:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f6fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f6fe:	dd05      	ble.n	801f70c <calculate_aabb_per_shape+0xf3c>
 801f700:	eeb4 8aef 	vcmpe.f32	s16, s31
 801f704:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f708:	f100 8175 	bmi.w	801f9f6 <calculate_aabb_per_shape+0x1226>
 801f70c:	ee36 8aa6 	vadd.f32	s16, s13, s13
 801f710:	ee79 1a09 	vadd.f32	s3, s18, s18
 801f714:	ee37 3aa7 	vadd.f32	s6, s15, s15
 801f718:	ee78 1a61 	vsub.f32	s3, s16, s3
 801f71c:	ee33 3a48 	vsub.f32	s6, s6, s16
 801f720:	ee33 3a61 	vsub.f32	s6, s6, s3
 801f724:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801f728:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f72c:	f100 815b 	bmi.w	801f9e6 <calculate_aabb_per_shape+0x1216>
 801f730:	eeb4 3aed 	vcmpe.f32	s6, s27
 801f734:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f738:	bfcc      	ite	gt
 801f73a:	2301      	movgt	r3, #1
 801f73c:	2300      	movle	r3, #0
 801f73e:	b383      	cbz	r3, 801f7a2 <calculate_aabb_per_shape+0xfd2>
 801f740:	eef1 1a61 	vneg.f32	s3, s3
 801f744:	ee81 8a83 	vdiv.f32	s16, s3, s6
 801f748:	eeb4 8aed 	vcmpe.f32	s16, s27
 801f74c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f750:	dd27      	ble.n	801f7a2 <calculate_aabb_per_shape+0xfd2>
 801f752:	eeb4 8aef 	vcmpe.f32	s16, s31
 801f756:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f75a:	d522      	bpl.n	801f7a2 <calculate_aabb_per_shape+0xfd2>
 801f75c:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801f760:	ee71 1ac8 	vsub.f32	s3, s3, s16
 801f764:	ee31 3aa1 	vadd.f32	s6, s3, s3
 801f768:	ee61 1aa1 	vmul.f32	s3, s3, s3
 801f76c:	ee23 3a08 	vmul.f32	s6, s6, s16
 801f770:	ee61 1a89 	vmul.f32	s3, s3, s18
 801f774:	ee23 3a26 	vmul.f32	s6, s6, s13
 801f778:	ee28 8a08 	vmul.f32	s16, s16, s16
 801f77c:	ee73 1a21 	vadd.f32	s3, s6, s3
 801f780:	ee28 3a27 	vmul.f32	s6, s16, s15
 801f784:	ee31 3a83 	vadd.f32	s6, s3, s6
 801f788:	eef4 0ac3 	vcmpe.f32	s1, s6
 801f78c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f790:	eeb4 0ac3 	vcmpe.f32	s0, s6
 801f794:	bf58      	it	pl
 801f796:	eef0 0a43 	vmovpl.f32	s1, s6
 801f79a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f79e:	fe30 0a03 	vselgt.f32	s0, s0, s6
 801f7a2:	ed84 2a04 	vstr	s4, [r4, #16]
 801f7a6:	edc4 0a05 	vstr	s1, [r4, #20]
 801f7aa:	ed84 1a06 	vstr	s2, [r4, #24]
 801f7ae:	ed84 0a07 	vstr	s0, [r4, #28]
 801f7b2:	e511      	b.n	801f1d8 <calculate_aabb_per_shape+0xa08>
 801f7b4:	f107 0a04 	add.w	sl, r7, #4
 801f7b8:	edde 6a01 	vldr	s13, [lr, #4]
 801f7bc:	ed9e da02 	vldr	s26, [lr, #8]
 801f7c0:	edde 5a03 	vldr	s11, [lr, #12]
 801f7c4:	f1b8 0f00 	cmp.w	r8, #0
 801f7c8:	d007      	beq.n	801f7da <calculate_aabb_per_shape+0x100a>
 801f7ca:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801f7ce:	ee76 6a89 	vadd.f32	s13, s13, s18
 801f7d2:	ee3d da28 	vadd.f32	s26, s26, s17
 801f7d6:	ee75 5a89 	vadd.f32	s11, s11, s18
 801f7da:	eef0 4a4d 	vmov.f32	s9, s26
 801f7de:	eeb0 6a65 	vmov.f32	s12, s11
 801f7e2:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 801f7e6:	f10a 0702 	add.w	r7, sl, #2
 801f7ea:	ed91 7a00 	vldr	s14, [r1]
 801f7ee:	ed91 3a01 	vldr	s6, [r1, #4]
 801f7f2:	eeb0 5a67 	vmov.f32	s10, s15
 801f7f6:	f1b8 0f00 	cmp.w	r8, #0
 801f7fa:	f000 80a5 	beq.w	801f948 <calculate_aabb_per_shape+0x1178>
 801f7fe:	ee37 7a28 	vadd.f32	s14, s14, s17
 801f802:	ee79 7a03 	vadd.f32	s15, s18, s6
 801f806:	f7ff b871 	b.w	801e8ec <calculate_aabb_per_shape+0x11c>
 801f80a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801f80e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f812:	eeb1 cac0 	vsqrt.f32	s24, s0
 801f816:	f100 8144 	bmi.w	801faa2 <calculate_aabb_per_shape+0x12d2>
 801f81a:	ee38 8a08 	vadd.f32	s16, s16, s16
 801f81e:	eeb1 3a6b 	vneg.f32	s6, s23
 801f822:	ee7c ba6b 	vsub.f32	s23, s24, s23
 801f826:	eecb 1a88 	vdiv.f32	s3, s23, s16
 801f82a:	eef4 1aed 	vcmpe.f32	s3, s27
 801f82e:	ee33 3a4c 	vsub.f32	s6, s6, s24
 801f832:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f836:	ee83 2a08 	vdiv.f32	s4, s6, s16
 801f83a:	dd15      	ble.n	801f868 <calculate_aabb_per_shape+0x1098>
 801f83c:	eef4 1aef 	vcmpe.f32	s3, s31
 801f840:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f844:	d510      	bpl.n	801f868 <calculate_aabb_per_shape+0x1098>
 801f846:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f84a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f84e:	edcd 1a0e 	vstr	s3, [sp, #56]	@ 0x38
 801f852:	f77f ad99 	ble.w	801f388 <calculate_aabb_per_shape+0xbb8>
 801f856:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f85a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f85e:	f57f ad93 	bpl.w	801f388 <calculate_aabb_per_shape+0xbb8>
 801f862:	2302      	movs	r3, #2
 801f864:	2201      	movs	r2, #1
 801f866:	e00d      	b.n	801f884 <calculate_aabb_per_shape+0x10b4>
 801f868:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f86c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f870:	f77f ac61 	ble.w	801f136 <calculate_aabb_per_shape+0x966>
 801f874:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f878:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f87c:	f57f ac5b 	bpl.w	801f136 <calculate_aabb_per_shape+0x966>
 801f880:	2301      	movs	r3, #1
 801f882:	2200      	movs	r2, #0
 801f884:	a910      	add	r1, sp, #64	@ 0x40
 801f886:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801f88a:	ed02 2a02 	vstr	s4, [r2, #-8]
 801f88e:	eddd 1a0e 	vldr	s3, [sp, #56]	@ 0x38
 801f892:	e57a      	b.n	801f38a <calculate_aabb_per_shape+0xbba>
 801f894:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801f898:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f89c:	eef1 bac0 	vsqrt.f32	s23, s0
 801f8a0:	f100 80e0 	bmi.w	801fa64 <calculate_aabb_per_shape+0x1294>
 801f8a4:	ee38 8a08 	vadd.f32	s16, s16, s16
 801f8a8:	eeb1 3a68 	vneg.f32	s6, s17
 801f8ac:	ee7b 8ae8 	vsub.f32	s17, s23, s17
 801f8b0:	ee88 1a88 	vdiv.f32	s2, s17, s16
 801f8b4:	eeb4 1aed 	vcmpe.f32	s2, s27
 801f8b8:	ee33 3a6b 	vsub.f32	s6, s6, s23
 801f8bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8c0:	ee83 2a08 	vdiv.f32	s4, s6, s16
 801f8c4:	dd15      	ble.n	801f8f2 <calculate_aabb_per_shape+0x1122>
 801f8c6:	eeb4 1aef 	vcmpe.f32	s2, s31
 801f8ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8ce:	d510      	bpl.n	801f8f2 <calculate_aabb_per_shape+0x1122>
 801f8d0:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f8d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8d8:	ed8d 1a0e 	vstr	s2, [sp, #56]	@ 0x38
 801f8dc:	f77f addd 	ble.w	801f49a <calculate_aabb_per_shape+0xcca>
 801f8e0:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f8e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8e8:	f57f add7 	bpl.w	801f49a <calculate_aabb_per_shape+0xcca>
 801f8ec:	2302      	movs	r3, #2
 801f8ee:	2201      	movs	r2, #1
 801f8f0:	e00d      	b.n	801f90e <calculate_aabb_per_shape+0x113e>
 801f8f2:	eeb4 2aed 	vcmpe.f32	s4, s27
 801f8f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8fa:	f77f ac64 	ble.w	801f1c6 <calculate_aabb_per_shape+0x9f6>
 801f8fe:	eeb4 2aef 	vcmpe.f32	s4, s31
 801f902:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f906:	f57f ac5e 	bpl.w	801f1c6 <calculate_aabb_per_shape+0x9f6>
 801f90a:	2301      	movs	r3, #1
 801f90c:	2200      	movs	r2, #0
 801f90e:	a910      	add	r1, sp, #64	@ 0x40
 801f910:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 801f914:	ed02 2a02 	vstr	s4, [r2, #-8]
 801f918:	ed9d 1a0e 	vldr	s2, [sp, #56]	@ 0x38
 801f91c:	e5be      	b.n	801f49c <calculate_aabb_per_shape+0xccc>
 801f91e:	f107 0a02 	add.w	sl, r7, #2
 801f922:	edde 6a01 	vldr	s13, [lr, #4]
 801f926:	f1b8 0f00 	cmp.w	r8, #0
 801f92a:	d108      	bne.n	801f93e <calculate_aabb_per_shape+0x116e>
 801f92c:	eeb0 da67 	vmov.f32	s26, s15
 801f930:	eeb0 6a66 	vmov.f32	s12, s13
 801f934:	eeb0 5a67 	vmov.f32	s10, s15
 801f938:	eef0 7a45 	vmov.f32	s15, s10
 801f93c:	e751      	b.n	801f7e2 <calculate_aabb_per_shape+0x1012>
 801f93e:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801f942:	ee76 6a89 	vadd.f32	s13, s13, s18
 801f946:	e7f1      	b.n	801f92c <calculate_aabb_per_shape+0x115c>
 801f948:	eef0 7a43 	vmov.f32	s15, s6
 801f94c:	f7fe bfce 	b.w	801e8ec <calculate_aabb_per_shape+0x11c>
 801f950:	eeb4 3aee 	vcmpe.f32	s6, s29
 801f954:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f958:	bf4c      	ite	mi
 801f95a:	2301      	movmi	r3, #1
 801f95c:	2300      	movpl	r3, #0
 801f95e:	e6c5      	b.n	801f6ec <calculate_aabb_per_shape+0xf1c>
 801f960:	eeb0 5a67 	vmov.f32	s10, s15
 801f964:	f107 0a03 	add.w	sl, r7, #3
 801f968:	edde 6a01 	vldr	s13, [lr, #4]
 801f96c:	3704      	adds	r7, #4
 801f96e:	edde 4a02 	vldr	s9, [lr, #8]
 801f972:	eeb0 6a49 	vmov.f32	s12, s18
 801f976:	eeb0 da68 	vmov.f32	s26, s17
 801f97a:	edde 7a03 	vldr	s15, [lr, #12]
 801f97e:	9500      	str	r5, [sp, #0]
 801f980:	f7fe bfa9 	b.w	801e8d6 <calculate_aabb_per_shape+0x106>
 801f984:	ee38 5aa8 	vadd.f32	s10, s17, s17
 801f988:	ee79 6a09 	vadd.f32	s13, s18, s18
 801f98c:	ee35 5a4d 	vsub.f32	s10, s10, s26
 801f990:	ee76 6ac6 	vsub.f32	s13, s13, s12
 801f994:	e64c      	b.n	801f630 <calculate_aabb_per_shape+0xe60>
 801f996:	eeb0 7a68 	vmov.f32	s14, s17
 801f99a:	f7fe bfa7 	b.w	801e8ec <calculate_aabb_per_shape+0x11c>
 801f99e:	f1aa 0a05 	sub.w	sl, sl, #5
 801f9a2:	f1ba 0f03 	cmp.w	sl, #3
 801f9a6:	d915      	bls.n	801f9d4 <calculate_aabb_per_shape+0x1204>
 801f9a8:	eef0 6a49 	vmov.f32	s13, s18
 801f9ac:	eeb0 5a68 	vmov.f32	s10, s17
 801f9b0:	f107 0a02 	add.w	sl, r7, #2
 801f9b4:	edde 5a01 	vldr	s11, [lr, #4]
 801f9b8:	f1b8 0f00 	cmp.w	r8, #0
 801f9bc:	d003      	beq.n	801f9c6 <calculate_aabb_per_shape+0x11f6>
 801f9be:	ee77 7aa8 	vadd.f32	s15, s15, s17
 801f9c2:	ee75 5a89 	vadd.f32	s11, s11, s18
 801f9c6:	eeb0 da67 	vmov.f32	s26, s15
 801f9ca:	eeb0 6a65 	vmov.f32	s12, s11
 801f9ce:	eef0 4a67 	vmov.f32	s9, s15
 801f9d2:	e7b1      	b.n	801f938 <calculate_aabb_per_shape+0x1168>
 801f9d4:	ee38 5aa8 	vadd.f32	s10, s17, s17
 801f9d8:	ee79 6a09 	vadd.f32	s13, s18, s18
 801f9dc:	ee35 5a4d 	vsub.f32	s10, s10, s26
 801f9e0:	ee76 6ac6 	vsub.f32	s13, s13, s12
 801f9e4:	e7e4      	b.n	801f9b0 <calculate_aabb_per_shape+0x11e0>
 801f9e6:	eeb4 3aee 	vcmpe.f32	s6, s29
 801f9ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f9ee:	bf4c      	ite	mi
 801f9f0:	2301      	movmi	r3, #1
 801f9f2:	2300      	movpl	r3, #0
 801f9f4:	e6a3      	b.n	801f73e <calculate_aabb_per_shape+0xf6e>
 801f9f6:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 801f9fa:	ee71 1ac8 	vsub.f32	s3, s3, s16
 801f9fe:	ee31 3aa1 	vadd.f32	s6, s3, s3
 801fa02:	ee61 1aa1 	vmul.f32	s3, s3, s3
 801fa06:	ee23 3a08 	vmul.f32	s6, s6, s16
 801fa0a:	ee61 1aa8 	vmul.f32	s3, s3, s17
 801fa0e:	ee23 3a05 	vmul.f32	s6, s6, s10
 801fa12:	ee28 8a08 	vmul.f32	s16, s16, s16
 801fa16:	ee73 1a21 	vadd.f32	s3, s6, s3
 801fa1a:	ee28 3a07 	vmul.f32	s6, s16, s14
 801fa1e:	ee31 3a83 	vadd.f32	s6, s3, s6
 801fa22:	eeb4 2ac3 	vcmpe.f32	s4, s6
 801fa26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa2a:	eeb4 1ac3 	vcmpe.f32	s2, s6
 801fa2e:	bf58      	it	pl
 801fa30:	eeb0 2a43 	vmovpl.f32	s4, s6
 801fa34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa38:	fe31 1a03 	vselgt.f32	s2, s2, s6
 801fa3c:	e666      	b.n	801f70c <calculate_aabb_per_shape+0xf3c>
 801fa3e:	ed9f 3ad3 	vldr	s6, [pc, #844]	@ 801fd8c <calculate_aabb_per_shape+0x15bc>
 801fa42:	eef4 6ac3 	vcmpe.f32	s13, s6
 801fa46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa4a:	f6bf abd8 	bge.w	801f1fe <calculate_aabb_per_shape+0xa2e>
 801fa4e:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 801fa52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa56:	d443      	bmi.n	801fae0 <calculate_aabb_per_shape+0x1310>
 801fa58:	eeb0 8a45 	vmov.f32	s16, s10
 801fa5c:	eeb1 9a66 	vneg.f32	s18, s13
 801fa60:	f7fe bf8d 	b.w	801e97e <calculate_aabb_per_shape+0x1ae>
 801fa64:	edcd 6a07 	vstr	s13, [sp, #28]
 801fa68:	edcd 4a06 	vstr	s9, [sp, #24]
 801fa6c:	ed8d 6a05 	vstr	s12, [sp, #20]
 801fa70:	edcd 5a04 	vstr	s11, [sp, #16]
 801fa74:	ed8d 5a03 	vstr	s10, [sp, #12]
 801fa78:	edcd 7a02 	vstr	s15, [sp, #8]
 801fa7c:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fa80:	f011 fbd6 	bl	8031230 <sqrtf>
 801fa84:	eddd 6a07 	vldr	s13, [sp, #28]
 801fa88:	eddd 4a06 	vldr	s9, [sp, #24]
 801fa8c:	ed9d 6a05 	vldr	s12, [sp, #20]
 801fa90:	eddd 5a04 	vldr	s11, [sp, #16]
 801fa94:	ed9d 5a03 	vldr	s10, [sp, #12]
 801fa98:	eddd 7a02 	vldr	s15, [sp, #8]
 801fa9c:	ed9d 7a01 	vldr	s14, [sp, #4]
 801faa0:	e700      	b.n	801f8a4 <calculate_aabb_per_shape+0x10d4>
 801faa2:	edcd 6a07 	vstr	s13, [sp, #28]
 801faa6:	edcd 4a06 	vstr	s9, [sp, #24]
 801faaa:	ed8d 6a05 	vstr	s12, [sp, #20]
 801faae:	edcd 5a04 	vstr	s11, [sp, #16]
 801fab2:	ed8d 5a03 	vstr	s10, [sp, #12]
 801fab6:	edcd 7a02 	vstr	s15, [sp, #8]
 801faba:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fabe:	f011 fbb7 	bl	8031230 <sqrtf>
 801fac2:	eddd 6a07 	vldr	s13, [sp, #28]
 801fac6:	eddd 4a06 	vldr	s9, [sp, #24]
 801faca:	ed9d 6a05 	vldr	s12, [sp, #20]
 801face:	eddd 5a04 	vldr	s11, [sp, #16]
 801fad2:	ed9d 5a03 	vldr	s10, [sp, #12]
 801fad6:	eddd 7a02 	vldr	s15, [sp, #8]
 801fada:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fade:	e69c      	b.n	801f81a <calculate_aabb_per_shape+0x104a>
 801fae0:	eeb1 8a45 	vneg.f32	s16, s10
 801fae4:	f7fe bf43 	b.w	801e96e <calculate_aabb_per_shape+0x19e>
 801fae8:	ee28 aa08 	vmul.f32	s20, s16, s16
 801faec:	ee3a aa0f 	vadd.f32	s20, s20, s30
 801faf0:	eeb5 aa40 	vcmp.f32	s20, #0.0
 801faf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801faf8:	ee79 bac8 	vsub.f32	s23, s19, s16
 801fafc:	eef1 aaca 	vsqrt.f32	s21, s20
 801fb00:	eeb1 ba48 	vneg.f32	s22, s16
 801fb04:	edcd 6a08 	vstr	s13, [sp, #32]
 801fb08:	edcd 4a07 	vstr	s9, [sp, #28]
 801fb0c:	ed8d 6a06 	vstr	s12, [sp, #24]
 801fb10:	edcd 5a05 	vstr	s11, [sp, #20]
 801fb14:	ed8d 5a04 	vstr	s10, [sp, #16]
 801fb18:	edcd 7a03 	vstr	s15, [sp, #12]
 801fb1c:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fb20:	f100 8655 	bmi.w	80207ce <calculate_aabb_per_shape+0x1ffe>
 801fb24:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 801fb28:	f011 fb34 	bl	8031194 <acosf>
 801fb2c:	eddf 0a99 	vldr	s1, [pc, #612]	@ 801fd94 <calculate_aabb_per_shape+0x15c4>
 801fb30:	ee30 0ac0 	vsub.f32	s0, s1, s0
 801fb34:	f011 fb5c 	bl	80311f0 <fmodf>
 801fb38:	ee39 aa88 	vadd.f32	s20, s19, s16
 801fb3c:	ed8d 0a02 	vstr	s0, [sp, #8]
 801fb40:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fb44:	eddd 7a03 	vldr	s15, [sp, #12]
 801fb48:	ed9d 5a04 	vldr	s10, [sp, #16]
 801fb4c:	eddd 5a05 	vldr	s11, [sp, #20]
 801fb50:	ed9d 6a06 	vldr	s12, [sp, #24]
 801fb54:	eddd 4a07 	vldr	s9, [sp, #28]
 801fb58:	eddd 6a08 	vldr	s13, [sp, #32]
 801fb5c:	ee88 0a2a 	vdiv.f32	s0, s16, s21
 801fb60:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 801fb64:	edcd 4a08 	vstr	s9, [sp, #32]
 801fb68:	ed8d 6a07 	vstr	s12, [sp, #28]
 801fb6c:	edcd 5a06 	vstr	s11, [sp, #24]
 801fb70:	ed8d 5a05 	vstr	s10, [sp, #20]
 801fb74:	edcd 7a03 	vstr	s15, [sp, #12]
 801fb78:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fb7c:	ed9f ca85 	vldr	s24, [pc, #532]	@ 801fd94 <calculate_aabb_per_shape+0x15c4>
 801fb80:	f011 fb08 	bl	8031194 <acosf>
 801fb84:	eef0 0a4c 	vmov.f32	s1, s24
 801fb88:	ee3c 0a40 	vsub.f32	s0, s24, s0
 801fb8c:	f011 fb30 	bl	80311f0 <fmodf>
 801fb90:	ee29 2a09 	vmul.f32	s4, s18, s18
 801fb94:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801fb98:	ee32 2a0f 	vadd.f32	s4, s4, s30
 801fb9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fba0:	eeb7 3a00 	vmov.f32	s6, #112	@ 0x3f800000  1.0
 801fba4:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801fba8:	eeb5 2a40 	vcmp.f32	s4, #0.0
 801fbac:	bf54      	ite	pl
 801fbae:	eef0 aa61 	vmovpl.f32	s21, s3
 801fbb2:	eef0 aa43 	vmovmi.f32	s21, s6
 801fbb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fbba:	ed8d 0a04 	vstr	s0, [sp, #16]
 801fbbe:	eeb1 4ac2 	vsqrt.f32	s8, s4
 801fbc2:	ee38 bac9 	vsub.f32	s22, s17, s18
 801fbc6:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fbca:	eddd 7a03 	vldr	s15, [sp, #12]
 801fbce:	ed9d 5a05 	vldr	s10, [sp, #20]
 801fbd2:	eddd 5a06 	vldr	s11, [sp, #24]
 801fbd6:	ed9d 6a07 	vldr	s12, [sp, #28]
 801fbda:	eddd 4a08 	vldr	s9, [sp, #32]
 801fbde:	eddd 6a09 	vldr	s13, [sp, #36]	@ 0x24
 801fbe2:	f100 8587 	bmi.w	80206f4 <calculate_aabb_per_shape+0x1f24>
 801fbe6:	ee8f 8a04 	vdiv.f32	s16, s30, s8
 801fbea:	eeb0 0a48 	vmov.f32	s0, s16
 801fbee:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 801fbf2:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 801fbf6:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 801fbfa:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 801fbfe:	ed8d 5a08 	vstr	s10, [sp, #32]
 801fc02:	edcd 1a07 	vstr	s3, [sp, #28]
 801fc06:	ed8d 3a06 	vstr	s6, [sp, #24]
 801fc0a:	edcd 7a05 	vstr	s15, [sp, #20]
 801fc0e:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fc12:	f011 fabf 	bl	8031194 <acosf>
 801fc16:	ee2a 0a80 	vmul.f32	s0, s21, s0
 801fc1a:	eef0 0a4c 	vmov.f32	s1, s24
 801fc1e:	ee30 0a0c 	vadd.f32	s0, s0, s24
 801fc22:	f011 fae5 	bl	80311f0 <fmodf>
 801fc26:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 801fc2a:	ed9d 3a06 	vldr	s6, [sp, #24]
 801fc2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc32:	eddd 1a07 	vldr	s3, [sp, #28]
 801fc36:	ed8d 0a03 	vstr	s0, [sp, #12]
 801fc3a:	ed9d 7a01 	vldr	s14, [sp, #4]
 801fc3e:	eddd 7a05 	vldr	s15, [sp, #20]
 801fc42:	ed9d 5a08 	vldr	s10, [sp, #32]
 801fc46:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 801fc4a:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 801fc4e:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 801fc52:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 801fc56:	ee78 aa89 	vadd.f32	s21, s17, s18
 801fc5a:	fe33 9a21 	vselgt.f32	s18, s6, s3
 801fc5e:	eeb0 0a48 	vmov.f32	s0, s16
 801fc62:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801fc66:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801fc6a:	ed8d 6a08 	vstr	s12, [sp, #32]
 801fc6e:	edcd 5a07 	vstr	s11, [sp, #28]
 801fc72:	ed8d 5a06 	vstr	s10, [sp, #24]
 801fc76:	edcd 7a05 	vstr	s15, [sp, #20]
 801fc7a:	ed8d 7a01 	vstr	s14, [sp, #4]
 801fc7e:	f011 fa89 	bl	8031194 <acosf>
 801fc82:	ee20 0a09 	vmul.f32	s0, s0, s18
 801fc86:	f7ff b883 	b.w	801ed90 <calculate_aabb_per_shape+0x5c0>
 801fc8a:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801fc8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc92:	dc39      	bgt.n	801fd08 <calculate_aabb_per_shape+0x1538>
 801fc94:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801fc98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fc9c:	d434      	bmi.n	801fd08 <calculate_aabb_per_shape+0x1538>
 801fc9e:	ed9d 4a04 	vldr	s8, [sp, #16]
 801fca2:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801fca6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcaa:	dc04      	bgt.n	801fcb6 <calculate_aabb_per_shape+0x14e6>
 801fcac:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801fcb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcb4:	d505      	bpl.n	801fcc2 <calculate_aabb_per_shape+0x14f2>
 801fcb6:	eeb4 dac7 	vcmpe.f32	s26, s14
 801fcba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcbe:	fe3d aa07 	vselgt.f32	s20, s26, s14
 801fcc2:	ed9d 4a03 	vldr	s8, [sp, #12]
 801fcc6:	eeb4 9ac4 	vcmpe.f32	s18, s8
 801fcca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcce:	dc04      	bgt.n	801fcda <calculate_aabb_per_shape+0x150a>
 801fcd0:	eeb4 0ac4 	vcmpe.f32	s0, s8
 801fcd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcd8:	d508      	bpl.n	801fcec <calculate_aabb_per_shape+0x151c>
 801fcda:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801fcde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fce2:	bf54      	ite	pl
 801fce4:	eeb0 ba67 	vmovpl.f32	s22, s15
 801fce8:	eeb0 ba46 	vmovmi.f32	s22, s12
 801fcec:	eeb4 9ac8 	vcmpe.f32	s18, s16
 801fcf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fcf4:	f73f a941 	bgt.w	801ef7a <calculate_aabb_per_shape+0x7aa>
 801fcf8:	eeb4 0ac8 	vcmpe.f32	s0, s16
 801fcfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fd00:	f53f a93b 	bmi.w	801ef7a <calculate_aabb_per_shape+0x7aa>
 801fd04:	f7ff b93f 	b.w	801ef86 <calculate_aabb_per_shape+0x7b6>
 801fd08:	eeb4 dac7 	vcmpe.f32	s26, s14
 801fd0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fd10:	bf54      	ite	pl
 801fd12:	eef0 ba47 	vmovpl.f32	s23, s14
 801fd16:	eef0 ba4d 	vmovmi.f32	s23, s26
 801fd1a:	e7c0      	b.n	801fc9e <calculate_aabb_per_shape+0x14ce>
 801fd1c:	db02      	blt.n	801fd24 <calculate_aabb_per_shape+0x1554>
 801fd1e:	429a      	cmp	r2, r3
 801fd20:	f43e af1a 	beq.w	801eb58 <calculate_aabb_per_shape+0x388>
 801fd24:	ee38 4ae1 	vsub.f32	s8, s17, s3
 801fd28:	ee72 aa29 	vadd.f32	s21, s4, s19
 801fd2c:	f7fe bf14 	b.w	801eb58 <calculate_aabb_per_shape+0x388>
 801fd30:	ee23 0a01 	vmul.f32	s0, s6, s2
 801fd34:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801fd38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fd3c:	eef1 8ac0 	vsqrt.f32	s17, s0
 801fd40:	f100 83c5 	bmi.w	80204ce <calculate_aabb_per_shape+0x1cfe>
 801fd44:	ee28 8a28 	vmul.f32	s16, s16, s17
 801fd48:	ed9d 4a03 	vldr	s8, [sp, #12]
 801fd4c:	ee29 9a28 	vmul.f32	s18, s18, s17
 801fd50:	eec4 ba08 	vdiv.f32	s23, s8, s16
 801fd54:	ed9d 4a02 	vldr	s8, [sp, #8]
 801fd58:	eec4 2a09 	vdiv.f32	s5, s8, s18
 801fd5c:	ed9d 4a04 	vldr	s8, [sp, #16]
 801fd60:	eec1 3a88 	vdiv.f32	s7, s3, s16
 801fd64:	ee84 ba09 	vdiv.f32	s22, s8, s18
 801fd68:	eeb6 3a00 	vmov.f32	s6, #96	@ 0x3f000000  0.5
 801fd6c:	ee73 8aab 	vadd.f32	s17, s7, s23
 801fd70:	ee72 9a8b 	vadd.f32	s19, s5, s22
 801fd74:	ee68 8a83 	vmul.f32	s17, s17, s6
 801fd78:	ee69 9a83 	vmul.f32	s19, s19, s6
 801fd7c:	ee73 aaeb 	vsub.f32	s21, s7, s23
 801fd80:	ee32 4acb 	vsub.f32	s8, s5, s22
 801fd84:	eef0 1a4f 	vmov.f32	s3, s30
 801fd88:	f7fe be81 	b.w	801ea8e <calculate_aabb_per_shape+0x2be>
 801fd8c:	b727c5ac 	.word	0xb727c5ac
 801fd90:	40490fdb 	.word	0x40490fdb
 801fd94:	40c90fdb 	.word	0x40c90fdb
 801fd98:	eeb0 0a4a 	vmov.f32	s0, s20
 801fd9c:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801fda0:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 801fda4:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 801fda8:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 801fdac:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 801fdb0:	ed8d 7a07 	vstr	s14, [sp, #28]
 801fdb4:	edcd 7a08 	vstr	s15, [sp, #32]
 801fdb8:	f011 fbbe 	bl	8031538 <tanf>
 801fdbc:	ed8d 0a03 	vstr	s0, [sp, #12]
 801fdc0:	ee20 0a09 	vmul.f32	s0, s0, s18
 801fdc4:	ee80 0a08 	vdiv.f32	s0, s0, s16
 801fdc8:	f011 fa50 	bl	803126c <atanf>
 801fdcc:	ed5f ba10 	vldr	s23, [pc, #-64]	@ 801fd90 <calculate_aabb_per_shape+0x15c0>
 801fdd0:	eef0 aa40 	vmov.f32	s21, s0
 801fdd4:	ee7b bac0 	vsub.f32	s23, s23, s0
 801fdd8:	f011 fb1c 	bl	8031414 <cosf>
 801fddc:	ee20 aa08 	vmul.f32	s20, s0, s16
 801fde0:	eeb1 0a6a 	vneg.f32	s0, s21
 801fde4:	f011 fb62 	bl	80314ac <sinf>
 801fde8:	eddd 7a01 	vldr	s15, [sp, #4]
 801fdec:	ee20 ba09 	vmul.f32	s22, s0, s18
 801fdf0:	ee27 aa8a 	vmul.f32	s20, s15, s20
 801fdf4:	ee2c 3a0b 	vmul.f32	s6, s24, s22
 801fdf8:	ee3a aa29 	vadd.f32	s20, s20, s19
 801fdfc:	eeb0 0a6b 	vmov.f32	s0, s23
 801fe00:	ee3a aa43 	vsub.f32	s20, s20, s6
 801fe04:	f011 fb06 	bl	8031414 <cosf>
 801fe08:	ed8d 0a02 	vstr	s0, [sp, #8]
 801fe0c:	eeb0 0a6b 	vmov.f32	s0, s23
 801fe10:	f011 fb4c 	bl	80314ac <sinf>
 801fe14:	ed9d 7a02 	vldr	s14, [sp, #8]
 801fe18:	eddd 7a01 	vldr	s15, [sp, #4]
 801fe1c:	ee27 4a08 	vmul.f32	s8, s14, s16
 801fe20:	ee20 2a09 	vmul.f32	s4, s0, s18
 801fe24:	ee67 ba84 	vmul.f32	s23, s15, s8
 801fe28:	ee6c 1a02 	vmul.f32	s3, s24, s4
 801fe2c:	ee7b baa9 	vadd.f32	s23, s23, s19
 801fe30:	ee7b bae1 	vsub.f32	s23, s23, s3
 801fe34:	ed8d 0a06 	vstr	s0, [sp, #24]
 801fe38:	eeb0 0a6a 	vmov.f32	s0, s21
 801fe3c:	ed8d 4a05 	vstr	s8, [sp, #20]
 801fe40:	ed8d 2a04 	vstr	s4, [sp, #16]
 801fe44:	f011 fae6 	bl	8031414 <cosf>
 801fe48:	eeb4 aaeb 	vcmpe.f32	s20, s23
 801fe4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fe50:	eef0 aa40 	vmov.f32	s21, s0
 801fe54:	ed9d 2a04 	vldr	s4, [sp, #16]
 801fe58:	ed9d 4a05 	vldr	s8, [sp, #20]
 801fe5c:	ed9d 7a07 	vldr	s14, [sp, #28]
 801fe60:	eddd 7a08 	vldr	s15, [sp, #32]
 801fe64:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 801fe68:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 801fe6c:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 801fe70:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 801fe74:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 801fe78:	dc0f      	bgt.n	801fe9a <calculate_aabb_per_shape+0x16ca>
 801fe7a:	eef0 1a6b 	vmov.f32	s3, s23
 801fe7e:	ed9d 3a06 	vldr	s6, [sp, #24]
 801fe82:	eeb0 2a4b 	vmov.f32	s4, s22
 801fe86:	eef0 ba4a 	vmov.f32	s23, s20
 801fe8a:	ee20 4a08 	vmul.f32	s8, s0, s16
 801fe8e:	eddd aa02 	vldr	s21, [sp, #8]
 801fe92:	eeb0 aa61 	vmov.f32	s20, s3
 801fe96:	ee23 ba09 	vmul.f32	s22, s6, s18
 801fe9a:	ee2c 3a04 	vmul.f32	s6, s24, s8
 801fe9e:	ed9d 4a01 	vldr	s8, [sp, #4]
 801fea2:	ee33 3a28 	vadd.f32	s6, s6, s17
 801fea6:	ee24 2a02 	vmul.f32	s4, s8, s4
 801feaa:	ee33 3a02 	vadd.f32	s6, s6, s4
 801feae:	ee3b 4ae9 	vsub.f32	s8, s23, s19
 801feb2:	ee33 3a68 	vsub.f32	s6, s6, s17
 801feb6:	ee24 2a04 	vmul.f32	s4, s8, s8
 801feba:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801febe:	ee23 3a03 	vmul.f32	s6, s6, s6
 801fec2:	ee32 0a03 	vadd.f32	s0, s4, s6
 801fec6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801feca:	eef7 3a00 	vmov.f32	s7, #112	@ 0x3f800000  1.0
 801fece:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801fed2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801fed6:	fe73 3aa1 	vselgt.f32	s7, s7, s3
 801feda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fede:	edcd 3a02 	vstr	s7, [sp, #8]
 801fee2:	eeb1 2ac0 	vsqrt.f32	s4, s0
 801fee6:	f100 81a3 	bmi.w	8020230 <calculate_aabb_per_shape+0x1a60>
 801feea:	ee84 0a02 	vdiv.f32	s0, s8, s4
 801feee:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 801fef2:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 801fef6:	ed8d 6a08 	vstr	s12, [sp, #32]
 801fefa:	edcd 5a07 	vstr	s11, [sp, #28]
 801fefe:	ed8d 5a06 	vstr	s10, [sp, #24]
 801ff02:	ed8d 7a04 	vstr	s14, [sp, #16]
 801ff06:	edcd 7a05 	vstr	s15, [sp, #20]
 801ff0a:	f011 f943 	bl	8031194 <acosf>
 801ff0e:	eddd 7a02 	vldr	s15, [sp, #8]
 801ff12:	ed5f 0a60 	vldr	s1, [pc, #-384]	@ 801fd94 <calculate_aabb_per_shape+0x15c4>
 801ff16:	ee20 0a27 	vmul.f32	s0, s0, s15
 801ff1a:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ff1e:	f011 f967 	bl	80311f0 <fmodf>
 801ff22:	ee28 3a2a 	vmul.f32	s6, s16, s21
 801ff26:	eddd 7a01 	vldr	s15, [sp, #4]
 801ff2a:	ee2c 3a03 	vmul.f32	s6, s24, s6
 801ff2e:	ee27 ba8b 	vmul.f32	s22, s15, s22
 801ff32:	ee33 3a28 	vadd.f32	s6, s6, s17
 801ff36:	ee33 3a0b 	vadd.f32	s6, s6, s22
 801ff3a:	ee3a 4a69 	vsub.f32	s8, s20, s19
 801ff3e:	ee33 3a68 	vsub.f32	s6, s6, s17
 801ff42:	ee24 2a04 	vmul.f32	s4, s8, s8
 801ff46:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 801ff4a:	ee23 3a03 	vmul.f32	s6, s6, s6
 801ff4e:	ed8d 0a02 	vstr	s0, [sp, #8]
 801ff52:	ee32 0a03 	vadd.f32	s0, s4, s6
 801ff56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff5a:	eeb7 ba00 	vmov.f32	s22, #112	@ 0x3f800000  1.0
 801ff5e:	eeff 1a00 	vmov.f32	s3, #240	@ 0xbf800000 -1.0
 801ff62:	eeb5 0a40 	vcmp.f32	s0, #0.0
 801ff66:	fe3b ba21 	vselgt.f32	s22, s22, s3
 801ff6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff6e:	eef1 aac0 	vsqrt.f32	s21, s0
 801ff72:	ed9d 7a04 	vldr	s14, [sp, #16]
 801ff76:	eddd 7a05 	vldr	s15, [sp, #20]
 801ff7a:	ed9d 5a06 	vldr	s10, [sp, #24]
 801ff7e:	eddd 5a07 	vldr	s11, [sp, #28]
 801ff82:	ed9d 6a08 	vldr	s12, [sp, #32]
 801ff86:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 801ff8a:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 801ff8e:	f100 8130 	bmi.w	80201f2 <calculate_aabb_per_shape+0x1a22>
 801ff92:	ee84 0a2a 	vdiv.f32	s0, s8, s21
 801ff96:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 801ff9a:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 801ff9e:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 801ffa2:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 801ffa6:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 801ffaa:	ed8d 7a07 	vstr	s14, [sp, #28]
 801ffae:	edcd 7a08 	vstr	s15, [sp, #32]
 801ffb2:	f011 f8ef 	bl	8031194 <acosf>
 801ffb6:	ed5f 0a89 	vldr	s1, [pc, #-548]	@ 801fd94 <calculate_aabb_per_shape+0x15c4>
 801ffba:	ee20 0a0b 	vmul.f32	s0, s0, s22
 801ffbe:	ee30 0a20 	vadd.f32	s0, s0, s1
 801ffc2:	f011 f915 	bl	80311f0 <fmodf>
 801ffc6:	eddd 7a03 	vldr	s15, [sp, #12]
 801ffca:	ed8d 0a04 	vstr	s0, [sp, #16]
 801ffce:	ee27 0a88 	vmul.f32	s0, s15, s16
 801ffd2:	ee89 0a00 	vdiv.f32	s0, s18, s0
 801ffd6:	f011 f949 	bl	803126c <atanf>
 801ffda:	ed1f ba93 	vldr	s22, [pc, #-588]	@ 801fd90 <calculate_aabb_per_shape+0x15c0>
 801ffde:	eef0 aa40 	vmov.f32	s21, s0
 801ffe2:	ee30 ba0b 	vadd.f32	s22, s0, s22
 801ffe6:	f011 fa15 	bl	8031414 <cosf>
 801ffea:	ee60 7a08 	vmul.f32	s15, s0, s16
 801ffee:	eeb0 0a6a 	vmov.f32	s0, s21
 801fff2:	edcd 7a05 	vstr	s15, [sp, #20]
 801fff6:	f011 fa59 	bl	80314ac <sinf>
 801fffa:	eddd 7a05 	vldr	s15, [sp, #20]
 801fffe:	ee20 7a09 	vmul.f32	s14, s0, s18
 8020002:	ee6c aa27 	vmul.f32	s21, s24, s15
 8020006:	eddd 6a01 	vldr	s13, [sp, #4]
 802000a:	ee7a aaa8 	vadd.f32	s21, s21, s17
 802000e:	ee26 3a87 	vmul.f32	s6, s13, s14
 8020012:	eeb0 0a4b 	vmov.f32	s0, s22
 8020016:	ee7a aa83 	vadd.f32	s21, s21, s6
 802001a:	ed8d 7a06 	vstr	s14, [sp, #24]
 802001e:	f011 f9f9 	bl	8031414 <cosf>
 8020022:	ed8d 0a03 	vstr	s0, [sp, #12]
 8020026:	eeb0 0a4b 	vmov.f32	s0, s22
 802002a:	f011 fa3f 	bl	80314ac <sinf>
 802002e:	ed9d 4a03 	vldr	s8, [sp, #12]
 8020032:	ee24 3a08 	vmul.f32	s6, s8, s16
 8020036:	eddd 6a01 	vldr	s13, [sp, #4]
 802003a:	ee20 2a09 	vmul.f32	s4, s0, s18
 802003e:	ee2c ba03 	vmul.f32	s22, s24, s6
 8020042:	ee66 1a82 	vmul.f32	s3, s13, s4
 8020046:	ee3b ba28 	vadd.f32	s22, s22, s17
 802004a:	ee3b ba21 	vadd.f32	s22, s22, s3
 802004e:	eef4 aacb 	vcmpe.f32	s21, s22
 8020052:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020056:	ed9d 7a07 	vldr	s14, [sp, #28]
 802005a:	eddd 7a08 	vldr	s15, [sp, #32]
 802005e:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 8020062:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 8020066:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 802006a:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 802006e:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020072:	dc11      	bgt.n	8020098 <calculate_aabb_per_shape+0x18c8>
 8020074:	ee24 4a08 	vmul.f32	s8, s8, s16
 8020078:	eef0 1a4b 	vmov.f32	s3, s22
 802007c:	ed9d 3a05 	vldr	s6, [sp, #20]
 8020080:	ed8d 4a05 	vstr	s8, [sp, #20]
 8020084:	ee20 4a09 	vmul.f32	s8, s0, s18
 8020088:	ed9d 2a06 	vldr	s4, [sp, #24]
 802008c:	eeb0 ba6a 	vmov.f32	s22, s21
 8020090:	ed8d 4a06 	vstr	s8, [sp, #24]
 8020094:	eef0 aa61 	vmov.f32	s21, s3
 8020098:	ed9d 4a01 	vldr	s8, [sp, #4]
 802009c:	ee24 9a03 	vmul.f32	s18, s8, s6
 80200a0:	ee2c 2a02 	vmul.f32	s4, s24, s4
 80200a4:	ee39 9a29 	vadd.f32	s18, s18, s19
 80200a8:	ee39 9a42 	vsub.f32	s18, s18, s4
 80200ac:	ee3b 3a68 	vsub.f32	s6, s22, s17
 80200b0:	ee39 9a69 	vsub.f32	s18, s18, s19
 80200b4:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 80200b8:	ee29 2a09 	vmul.f32	s4, s18, s18
 80200bc:	ee23 3a03 	vmul.f32	s6, s6, s6
 80200c0:	ee32 0a03 	vadd.f32	s0, s4, s6
 80200c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80200c8:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 80200cc:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 80200d0:	eeb5 0a40 	vcmp.f32	s0, #0.0
 80200d4:	fe38 8a02 	vselgt.f32	s16, s16, s4
 80200d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80200dc:	eeb1 4ac0 	vsqrt.f32	s8, s0
 80200e0:	f100 8460 	bmi.w	80209a4 <calculate_aabb_per_shape+0x21d4>
 80200e4:	ee89 0a04 	vdiv.f32	s0, s18, s8
 80200e8:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80200ec:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 80200f0:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 80200f4:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 80200f8:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 80200fc:	edcd 7a08 	vstr	s15, [sp, #32]
 8020100:	ed8d 7a07 	vstr	s14, [sp, #28]
 8020104:	f011 f846 	bl	8031194 <acosf>
 8020108:	ed5f 0ade 	vldr	s1, [pc, #-888]	@ 801fd94 <calculate_aabb_per_shape+0x15c4>
 802010c:	ee20 0a08 	vmul.f32	s0, s0, s16
 8020110:	ee30 0a20 	vadd.f32	s0, s0, s1
 8020114:	f011 f86c 	bl	80311f0 <fmodf>
 8020118:	eddd 7a01 	vldr	s15, [sp, #4]
 802011c:	ed9d 7a05 	vldr	s14, [sp, #20]
 8020120:	ee27 9a87 	vmul.f32	s18, s15, s14
 8020124:	eddd 7a06 	vldr	s15, [sp, #24]
 8020128:	ee39 9a29 	vadd.f32	s18, s18, s19
 802012c:	ee2c ca27 	vmul.f32	s24, s24, s15
 8020130:	ee39 9a4c 	vsub.f32	s18, s18, s24
 8020134:	ee3a 3ae8 	vsub.f32	s6, s21, s17
 8020138:	ee39 9a69 	vsub.f32	s18, s18, s19
 802013c:	eeb5 3ac0 	vcmpe.f32	s6, #0.0
 8020140:	ee29 2a09 	vmul.f32	s4, s18, s18
 8020144:	ee23 3a03 	vmul.f32	s6, s6, s6
 8020148:	ed8d 0a03 	vstr	s0, [sp, #12]
 802014c:	ee32 0a03 	vadd.f32	s0, s4, s6
 8020150:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020154:	eeb7 8a00 	vmov.f32	s16, #112	@ 0x3f800000  1.0
 8020158:	eebf 2a00 	vmov.f32	s4, #240	@ 0xbf800000 -1.0
 802015c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8020160:	fe38 8a02 	vselgt.f32	s16, s16, s4
 8020164:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020168:	eeb1 cac0 	vsqrt.f32	s24, s0
 802016c:	ed9d 7a07 	vldr	s14, [sp, #28]
 8020170:	eddd 7a08 	vldr	s15, [sp, #32]
 8020174:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 8020178:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 802017c:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 8020180:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020184:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020188:	f100 83ec 	bmi.w	8020964 <calculate_aabb_per_shape+0x2194>
 802018c:	ee89 0a0c 	vdiv.f32	s0, s18, s24
 8020190:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020194:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 8020198:	ed8d 6a08 	vstr	s12, [sp, #32]
 802019c:	edcd 5a07 	vstr	s11, [sp, #28]
 80201a0:	ed8d 5a06 	vstr	s10, [sp, #24]
 80201a4:	edcd 7a05 	vstr	s15, [sp, #20]
 80201a8:	ed8d 7a01 	vstr	s14, [sp, #4]
 80201ac:	f010 fff2 	bl	8031194 <acosf>
 80201b0:	eddf 0ad8 	vldr	s1, [pc, #864]	@ 8020514 <calculate_aabb_per_shape+0x1d44>
 80201b4:	ee20 0a08 	vmul.f32	s0, s0, s16
 80201b8:	ee30 0a20 	vadd.f32	s0, s0, s1
 80201bc:	f011 f818 	bl	80311f0 <fmodf>
 80201c0:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 80201c4:	eeb0 8a40 	vmov.f32	s16, s0
 80201c8:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 80201cc:	ed9d 6a08 	vldr	s12, [sp, #32]
 80201d0:	eddd 5a07 	vldr	s11, [sp, #28]
 80201d4:	ed9d 5a06 	vldr	s10, [sp, #24]
 80201d8:	eddd 7a05 	vldr	s15, [sp, #20]
 80201dc:	ed9d 7a01 	vldr	s14, [sp, #4]
 80201e0:	f7fe bdec 	b.w	801edbc <calculate_aabb_per_shape+0x5ec>
 80201e4:	eeb4 3ac1 	vcmpe.f32	s6, s2
 80201e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80201ec:	f6be acb4 	bge.w	801eb58 <calculate_aabb_per_shape+0x388>
 80201f0:	e598      	b.n	801fd24 <calculate_aabb_per_shape+0x1554>
 80201f2:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 80201f6:	edcd 4a0a 	vstr	s9, [sp, #40]	@ 0x28
 80201fa:	ed8d 6a09 	vstr	s12, [sp, #36]	@ 0x24
 80201fe:	edcd 5a08 	vstr	s11, [sp, #32]
 8020202:	ed8d 5a07 	vstr	s10, [sp, #28]
 8020206:	ed8d 4a06 	vstr	s8, [sp, #24]
 802020a:	f011 f811 	bl	8031230 <sqrtf>
 802020e:	eddd 6a0b 	vldr	s13, [sp, #44]	@ 0x2c
 8020212:	eddd 4a0a 	vldr	s9, [sp, #40]	@ 0x28
 8020216:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 802021a:	eddd 5a08 	vldr	s11, [sp, #32]
 802021e:	ed9d 5a07 	vldr	s10, [sp, #28]
 8020222:	ed9d 4a06 	vldr	s8, [sp, #24]
 8020226:	eddd 7a05 	vldr	s15, [sp, #20]
 802022a:	ed9d 7a04 	vldr	s14, [sp, #16]
 802022e:	e6b0      	b.n	801ff92 <calculate_aabb_per_shape+0x17c2>
 8020230:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8020234:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 8020238:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 802023c:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 8020240:	ed8d 5a08 	vstr	s10, [sp, #32]
 8020244:	ed8d 2a07 	vstr	s4, [sp, #28]
 8020248:	ed8d 4a06 	vstr	s8, [sp, #24]
 802024c:	edcd 7a05 	vstr	s15, [sp, #20]
 8020250:	ed8d 7a04 	vstr	s14, [sp, #16]
 8020254:	f010 ffec 	bl	8031230 <sqrtf>
 8020258:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 802025c:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 8020260:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 8020264:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 8020268:	ed9d 5a08 	vldr	s10, [sp, #32]
 802026c:	ed9d 2a07 	vldr	s4, [sp, #28]
 8020270:	ed9d 4a06 	vldr	s8, [sp, #24]
 8020274:	eddd 7a05 	vldr	s15, [sp, #20]
 8020278:	ed9d 7a04 	vldr	s14, [sp, #16]
 802027c:	e635      	b.n	801feea <calculate_aabb_per_shape+0x171a>
 802027e:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 8020282:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 8020286:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 802028a:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 802028e:	ed8d 5a08 	vstr	s10, [sp, #32]
 8020292:	edcd 1a07 	vstr	s3, [sp, #28]
 8020296:	ed8d 4a06 	vstr	s8, [sp, #24]
 802029a:	edcd 2a05 	vstr	s5, [sp, #20]
 802029e:	edcd 3a04 	vstr	s7, [sp, #16]
 80202a2:	edcd 7a03 	vstr	s15, [sp, #12]
 80202a6:	ed8d 7a02 	vstr	s14, [sp, #8]
 80202aa:	f010 ffc1 	bl	8031230 <sqrtf>
 80202ae:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 80202b2:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 80202b6:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 80202ba:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 80202be:	ed9d 5a08 	vldr	s10, [sp, #32]
 80202c2:	eddd 1a07 	vldr	s3, [sp, #28]
 80202c6:	ed9d 4a06 	vldr	s8, [sp, #24]
 80202ca:	eddd 2a05 	vldr	s5, [sp, #20]
 80202ce:	eddd 3a04 	vldr	s7, [sp, #16]
 80202d2:	eddd 7a03 	vldr	s15, [sp, #12]
 80202d6:	ed9d 7a02 	vldr	s14, [sp, #8]
 80202da:	f7fe bbd8 	b.w	801ea8e <calculate_aabb_per_shape+0x2be>
 80202de:	2b03      	cmp	r3, #3
 80202e0:	eeb0 7a67 	vmov.f32	s14, s15
 80202e4:	f000 80d7 	beq.w	8020496 <calculate_aabb_per_shape+0x1cc6>
 80202e8:	2b0a      	cmp	r3, #10
 80202ea:	f040 8115 	bne.w	8020518 <calculate_aabb_per_shape+0x1d48>
 80202ee:	ed94 2a04 	vldr	s4, [r4, #16]
 80202f2:	ed94 3a05 	vldr	s6, [r4, #20]
 80202f6:	eeb4 2a68 	vcmp.f32	s4, s17
 80202fa:	ed94 7a06 	vldr	s14, [r4, #24]
 80202fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020302:	eeb4 3a49 	vcmp.f32	s6, s18
 8020306:	edd4 1a07 	vldr	s3, [r4, #28]
 802030a:	fe38 2a82 	vselgt.f32	s4, s17, s4
 802030e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020312:	eeb4 7a68 	vcmp.f32	s14, s17
 8020316:	fe39 3a03 	vselgt.f32	s6, s18, s6
 802031a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802031e:	eef4 1a49 	vcmp.f32	s3, s18
 8020322:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8020326:	bf48      	it	mi
 8020328:	eeb0 7a68 	vmovmi.f32	s14, s17
 802032c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020330:	ee17 3a90 	vmov	r3, s15
 8020334:	bf48      	it	mi
 8020336:	eef0 1a49 	vmovmi.f32	s3, s18
 802033a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802033e:	105b      	asrs	r3, r3, #1
 8020340:	2b00      	cmp	r3, #0
 8020342:	ed84 2a04 	vstr	s4, [r4, #16]
 8020346:	ed84 3a05 	vstr	s6, [r4, #20]
 802034a:	ed84 7a06 	vstr	s14, [r4, #24]
 802034e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020352:	f340 80ba 	ble.w	80204ca <calculate_aabb_per_shape+0x1cfa>
 8020356:	005b      	lsls	r3, r3, #1
 8020358:	eb03 0c07 	add.w	ip, r3, r7
 802035c:	eb01 0c8c 	add.w	ip, r1, ip, lsl #2
 8020360:	eb01 0187 	add.w	r1, r1, r7, lsl #2
 8020364:	f1b8 0f00 	cmp.w	r8, #0
 8020368:	d167      	bne.n	802043a <calculate_aabb_per_shape+0x1c6a>
 802036a:	edd1 8a00 	vldr	s17, [r1]
 802036e:	ed91 9a01 	vldr	s18, [r1, #4]
 8020372:	eeb4 2a68 	vcmp.f32	s4, s17
 8020376:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802037a:	eeb4 3a49 	vcmp.f32	s6, s18
 802037e:	fe38 2a82 	vselgt.f32	s4, s17, s4
 8020382:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020386:	eeb4 7a68 	vcmp.f32	s14, s17
 802038a:	fe39 3a03 	vselgt.f32	s6, s18, s6
 802038e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020392:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020396:	bf48      	it	mi
 8020398:	eeb0 7a68 	vmovmi.f32	s14, s17
 802039c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203a0:	ed84 2a04 	vstr	s4, [r4, #16]
 80203a4:	ed84 3a05 	vstr	s6, [r4, #20]
 80203a8:	ed84 7a06 	vstr	s14, [r4, #24]
 80203ac:	f101 0108 	add.w	r1, r1, #8
 80203b0:	dc7a      	bgt.n	80204a8 <calculate_aabb_per_shape+0x1cd8>
 80203b2:	4561      	cmp	r1, ip
 80203b4:	edc4 1a07 	vstr	s3, [r4, #28]
 80203b8:	d1d7      	bne.n	802036a <calculate_aabb_per_shape+0x1b9a>
 80203ba:	441f      	add	r7, r3
 80203bc:	ee78 7ace 	vsub.f32	s15, s17, s28
 80203c0:	eef5 7a40 	vcmp.f32	s15, #0.0
 80203c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203c8:	d106      	bne.n	80203d8 <calculate_aabb_per_shape+0x1c08>
 80203ca:	ee79 7a6c 	vsub.f32	s15, s18, s25
 80203ce:	eef5 7a40 	vcmp.f32	s15, #0.0
 80203d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203d6:	d073      	beq.n	80204c0 <calculate_aabb_per_shape+0x1cf0>
 80203d8:	eeb4 ea42 	vcmp.f32	s28, s4
 80203dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203e0:	eef4 ca43 	vcmp.f32	s25, s6
 80203e4:	bf48      	it	mi
 80203e6:	eeb0 2a4e 	vmovmi.f32	s4, s28
 80203ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203ee:	eeb4 ea47 	vcmp.f32	s28, s14
 80203f2:	bf48      	it	mi
 80203f4:	eeb0 3a6c 	vmovmi.f32	s6, s25
 80203f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80203fc:	eef4 ca61 	vcmp.f32	s25, s3
 8020400:	fe3e 7a07 	vselgt.f32	s14, s28, s14
 8020404:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020408:	fe7c 1aa1 	vselgt.f32	s3, s25, s3
 802040c:	ed84 7a06 	vstr	s14, [r4, #24]
 8020410:	ed84 2a04 	vstr	s4, [r4, #16]
 8020414:	ed84 3a05 	vstr	s6, [r4, #20]
 8020418:	edc4 1a07 	vstr	s3, [r4, #28]
 802041c:	eef0 7a6c 	vmov.f32	s15, s25
 8020420:	eeb0 7a4e 	vmov.f32	s14, s28
 8020424:	7812      	ldrb	r2, [r2, #0]
 8020426:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 802042a:	f7fe ba60 	b.w	801e8ee <calculate_aabb_per_shape+0x11e>
 802042e:	4561      	cmp	r1, ip
 8020430:	ed84 9a07 	vstr	s18, [r4, #28]
 8020434:	eef0 1a49 	vmov.f32	s3, s18
 8020438:	d0bf      	beq.n	80203ba <calculate_aabb_per_shape+0x1bea>
 802043a:	edd1 7a00 	vldr	s15, [r1]
 802043e:	ee78 8aa7 	vadd.f32	s17, s17, s15
 8020442:	edd1 7a01 	vldr	s15, [r1, #4]
 8020446:	eef4 8a42 	vcmp.f32	s17, s4
 802044a:	ee39 9a27 	vadd.f32	s18, s18, s15
 802044e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020452:	eeb4 9a43 	vcmp.f32	s18, s6
 8020456:	bf48      	it	mi
 8020458:	eeb0 2a68 	vmovmi.f32	s4, s17
 802045c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020460:	eef4 8a47 	vcmp.f32	s17, s14
 8020464:	bf48      	it	mi
 8020466:	eeb0 3a49 	vmovmi.f32	s6, s18
 802046a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802046e:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020472:	fe38 7a87 	vselgt.f32	s14, s17, s14
 8020476:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802047a:	ed84 2a04 	vstr	s4, [r4, #16]
 802047e:	ed84 3a05 	vstr	s6, [r4, #20]
 8020482:	ed84 7a06 	vstr	s14, [r4, #24]
 8020486:	f101 0108 	add.w	r1, r1, #8
 802048a:	dcd0      	bgt.n	802042e <calculate_aabb_per_shape+0x1c5e>
 802048c:	4561      	cmp	r1, ip
 802048e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020492:	d1d2      	bne.n	802043a <calculate_aabb_per_shape+0x1c6a>
 8020494:	e791      	b.n	80203ba <calculate_aabb_per_shape+0x1bea>
 8020496:	f1b8 0f00 	cmp.w	r8, #0
 802049a:	d00d      	beq.n	80204b8 <calculate_aabb_per_shape+0x1ce8>
 802049c:	ee37 7aa8 	vadd.f32	s14, s15, s17
 80204a0:	eef0 7a49 	vmov.f32	s15, s18
 80204a4:	f7fe ba22 	b.w	801e8ec <calculate_aabb_per_shape+0x11c>
 80204a8:	4561      	cmp	r1, ip
 80204aa:	ed84 9a07 	vstr	s18, [r4, #28]
 80204ae:	eef0 1a49 	vmov.f32	s3, s18
 80204b2:	f47f af5a 	bne.w	802036a <calculate_aabb_per_shape+0x1b9a>
 80204b6:	e780      	b.n	80203ba <calculate_aabb_per_shape+0x1bea>
 80204b8:	eef0 7a49 	vmov.f32	s15, s18
 80204bc:	f7fe ba16 	b.w	801e8ec <calculate_aabb_per_shape+0x11c>
 80204c0:	eef0 7a49 	vmov.f32	s15, s18
 80204c4:	eeb0 7a68 	vmov.f32	s14, s17
 80204c8:	e7ac      	b.n	8020424 <calculate_aabb_per_shape+0x1c54>
 80204ca:	4665      	mov	r5, ip
 80204cc:	e776      	b.n	80203bc <calculate_aabb_per_shape+0x1bec>
 80204ce:	edcd 6a0c 	vstr	s13, [sp, #48]	@ 0x30
 80204d2:	edcd 4a0b 	vstr	s9, [sp, #44]	@ 0x2c
 80204d6:	ed8d 6a0a 	vstr	s12, [sp, #40]	@ 0x28
 80204da:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
 80204de:	ed8d 5a08 	vstr	s10, [sp, #32]
 80204e2:	edcd 1a07 	vstr	s3, [sp, #28]
 80204e6:	edcd 7a06 	vstr	s15, [sp, #24]
 80204ea:	ed8d 7a05 	vstr	s14, [sp, #20]
 80204ee:	f010 fe9f 	bl	8031230 <sqrtf>
 80204f2:	eddd 6a0c 	vldr	s13, [sp, #48]	@ 0x30
 80204f6:	eddd 4a0b 	vldr	s9, [sp, #44]	@ 0x2c
 80204fa:	ed9d 6a0a 	vldr	s12, [sp, #40]	@ 0x28
 80204fe:	eddd 5a09 	vldr	s11, [sp, #36]	@ 0x24
 8020502:	ed9d 5a08 	vldr	s10, [sp, #32]
 8020506:	eddd 1a07 	vldr	s3, [sp, #28]
 802050a:	eddd 7a06 	vldr	s15, [sp, #24]
 802050e:	ed9d 7a05 	vldr	s14, [sp, #20]
 8020512:	e417      	b.n	801fd44 <calculate_aabb_per_shape+0x1574>
 8020514:	40c90fdb 	.word	0x40c90fdb
 8020518:	2b0b      	cmp	r3, #11
 802051a:	f47f aa0d 	bne.w	801f938 <calculate_aabb_per_shape+0x1168>
 802051e:	ed94 7a04 	vldr	s14, [r4, #16]
 8020522:	ed94 3a05 	vldr	s6, [r4, #20]
 8020526:	eeb4 7a68 	vcmp.f32	s14, s17
 802052a:	ed94 2a06 	vldr	s4, [r4, #24]
 802052e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020532:	eeb4 3a49 	vcmp.f32	s6, s18
 8020536:	edd4 1a07 	vldr	s3, [r4, #28]
 802053a:	fe38 7a87 	vselgt.f32	s14, s17, s14
 802053e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020542:	eeb4 2a68 	vcmp.f32	s4, s17
 8020546:	fe39 3a03 	vselgt.f32	s6, s18, s6
 802054a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802054e:	eef4 1a49 	vcmp.f32	s3, s18
 8020552:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8020556:	bf48      	it	mi
 8020558:	eeb0 2a68 	vmovmi.f32	s4, s17
 802055c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020560:	ee17 3a90 	vmov	r3, s15
 8020564:	bf48      	it	mi
 8020566:	eef0 1a49 	vmovmi.f32	s3, s18
 802056a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802056e:	105b      	asrs	r3, r3, #1
 8020570:	2b00      	cmp	r3, #0
 8020572:	ed84 7a04 	vstr	s14, [r4, #16]
 8020576:	ed84 3a05 	vstr	s6, [r4, #20]
 802057a:	ed84 2a06 	vstr	s4, [r4, #24]
 802057e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020582:	dd77      	ble.n	8020674 <calculate_aabb_per_shape+0x1ea4>
 8020584:	005b      	lsls	r3, r3, #1
 8020586:	eb03 0c07 	add.w	ip, r3, r7
 802058a:	eb01 0c8c 	add.w	ip, r1, ip, lsl #2
 802058e:	eb01 0187 	add.w	r1, r1, r7, lsl #2
 8020592:	f1b8 0f00 	cmp.w	r8, #0
 8020596:	d138      	bne.n	802060a <calculate_aabb_per_shape+0x1e3a>
 8020598:	edd1 8a00 	vldr	s17, [r1]
 802059c:	ed91 9a01 	vldr	s18, [r1, #4]
 80205a0:	eef4 8a47 	vcmp.f32	s17, s14
 80205a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205a8:	eeb4 9a43 	vcmp.f32	s18, s6
 80205ac:	bf48      	it	mi
 80205ae:	eeb0 7a68 	vmovmi.f32	s14, s17
 80205b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205b6:	eef4 8a42 	vcmp.f32	s17, s4
 80205ba:	bf48      	it	mi
 80205bc:	eeb0 3a49 	vmovmi.f32	s6, s18
 80205c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205c4:	eeb4 9ae1 	vcmpe.f32	s18, s3
 80205c8:	fe38 2a82 	vselgt.f32	s4, s17, s4
 80205cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205d0:	ed84 7a04 	vstr	s14, [r4, #16]
 80205d4:	ed84 3a05 	vstr	s6, [r4, #20]
 80205d8:	ed84 2a06 	vstr	s4, [r4, #24]
 80205dc:	f101 0108 	add.w	r1, r1, #8
 80205e0:	dc41      	bgt.n	8020666 <calculate_aabb_per_shape+0x1e96>
 80205e2:	458c      	cmp	ip, r1
 80205e4:	edc4 1a07 	vstr	s3, [r4, #28]
 80205e8:	d1d6      	bne.n	8020598 <calculate_aabb_per_shape+0x1dc8>
 80205ea:	7812      	ldrb	r2, [r2, #0]
 80205ec:	441f      	add	r7, r3
 80205ee:	eef0 7a49 	vmov.f32	s15, s18
 80205f2:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 80205f6:	eeb0 7a68 	vmov.f32	s14, s17
 80205fa:	f7fe b978 	b.w	801e8ee <calculate_aabb_per_shape+0x11e>
 80205fe:	4561      	cmp	r1, ip
 8020600:	ed84 9a07 	vstr	s18, [r4, #28]
 8020604:	d0f1      	beq.n	80205ea <calculate_aabb_per_shape+0x1e1a>
 8020606:	eef0 1a49 	vmov.f32	s3, s18
 802060a:	edd1 7a00 	vldr	s15, [r1]
 802060e:	ee78 8aa7 	vadd.f32	s17, s17, s15
 8020612:	edd1 7a01 	vldr	s15, [r1, #4]
 8020616:	eef4 8a47 	vcmp.f32	s17, s14
 802061a:	ee39 9a27 	vadd.f32	s18, s18, s15
 802061e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020622:	eeb4 9a43 	vcmp.f32	s18, s6
 8020626:	bf48      	it	mi
 8020628:	eeb0 7a68 	vmovmi.f32	s14, s17
 802062c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020630:	eef4 8a42 	vcmp.f32	s17, s4
 8020634:	bf48      	it	mi
 8020636:	eeb0 3a49 	vmovmi.f32	s6, s18
 802063a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802063e:	eeb4 9ae1 	vcmpe.f32	s18, s3
 8020642:	fe38 2a82 	vselgt.f32	s4, s17, s4
 8020646:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802064a:	ed84 7a04 	vstr	s14, [r4, #16]
 802064e:	ed84 3a05 	vstr	s6, [r4, #20]
 8020652:	ed84 2a06 	vstr	s4, [r4, #24]
 8020656:	f101 0108 	add.w	r1, r1, #8
 802065a:	dcd0      	bgt.n	80205fe <calculate_aabb_per_shape+0x1e2e>
 802065c:	4561      	cmp	r1, ip
 802065e:	edc4 1a07 	vstr	s3, [r4, #28]
 8020662:	d1d2      	bne.n	802060a <calculate_aabb_per_shape+0x1e3a>
 8020664:	e7c1      	b.n	80205ea <calculate_aabb_per_shape+0x1e1a>
 8020666:	4561      	cmp	r1, ip
 8020668:	ed84 9a07 	vstr	s18, [r4, #28]
 802066c:	d0bd      	beq.n	80205ea <calculate_aabb_per_shape+0x1e1a>
 802066e:	eef0 1a49 	vmov.f32	s3, s18
 8020672:	e791      	b.n	8020598 <calculate_aabb_per_shape+0x1dc8>
 8020674:	7812      	ldrb	r2, [r2, #0]
 8020676:	4665      	mov	r5, ip
 8020678:	f002 036f 	and.w	r3, r2, #111	@ 0x6f
 802067c:	eef0 7a49 	vmov.f32	s15, s18
 8020680:	eeb0 7a68 	vmov.f32	s14, s17
 8020684:	f7fe b933 	b.w	801e8ee <calculate_aabb_per_shape+0x11e>
 8020688:	f010 fdd2 	bl	8031230 <sqrtf>
 802068c:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020690:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 8020694:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020698:	eddd 5a07 	vldr	s11, [sp, #28]
 802069c:	ed9d 5a06 	vldr	s10, [sp, #24]
 80206a0:	eddd 7a05 	vldr	s15, [sp, #20]
 80206a4:	ed9d 7a01 	vldr	s14, [sp, #4]
 80206a8:	f7fe bbea 	b.w	801ee80 <calculate_aabb_per_shape+0x6b0>
 80206ac:	edcd 6a0b 	vstr	s13, [sp, #44]	@ 0x2c
 80206b0:	edcd 4a0a 	vstr	s9, [sp, #40]	@ 0x28
 80206b4:	ed8d 6a09 	vstr	s12, [sp, #36]	@ 0x24
 80206b8:	edcd 5a08 	vstr	s11, [sp, #32]
 80206bc:	ed8d 5a07 	vstr	s10, [sp, #28]
 80206c0:	ed8d 2a06 	vstr	s4, [sp, #24]
 80206c4:	edcd 7a05 	vstr	s15, [sp, #20]
 80206c8:	ed8d 7a01 	vstr	s14, [sp, #4]
 80206cc:	f010 fdb0 	bl	8031230 <sqrtf>
 80206d0:	eddd 6a0b 	vldr	s13, [sp, #44]	@ 0x2c
 80206d4:	eddd 4a0a 	vldr	s9, [sp, #40]	@ 0x28
 80206d8:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 80206dc:	eddd 5a08 	vldr	s11, [sp, #32]
 80206e0:	ed9d 5a07 	vldr	s10, [sp, #28]
 80206e4:	ed9d 2a06 	vldr	s4, [sp, #24]
 80206e8:	eddd 7a05 	vldr	s15, [sp, #20]
 80206ec:	ed9d 7a01 	vldr	s14, [sp, #4]
 80206f0:	f7fe bb80 	b.w	801edf4 <calculate_aabb_per_shape+0x624>
 80206f4:	eeb0 0a42 	vmov.f32	s0, s4
 80206f8:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80206fc:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 8020700:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 8020704:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020708:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 802070c:	edcd 1a08 	vstr	s3, [sp, #32]
 8020710:	ed8d 3a07 	vstr	s6, [sp, #28]
 8020714:	ed8d 7a05 	vstr	s14, [sp, #20]
 8020718:	ed8d 2a01 	vstr	s4, [sp, #4]
 802071c:	edcd 7a06 	vstr	s15, [sp, #24]
 8020720:	ed8d 4a03 	vstr	s8, [sp, #12]
 8020724:	f010 fd84 	bl	8031230 <sqrtf>
 8020728:	ed9d 4a03 	vldr	s8, [sp, #12]
 802072c:	ee8f 8a04 	vdiv.f32	s16, s30, s8
 8020730:	eeb0 0a48 	vmov.f32	s0, s16
 8020734:	f010 fd2e 	bl	8031194 <acosf>
 8020738:	eef0 7a4c 	vmov.f32	s15, s24
 802073c:	ee4a 7a80 	vmla.f32	s15, s21, s0
 8020740:	eef0 0a4c 	vmov.f32	s1, s24
 8020744:	eeb0 0a67 	vmov.f32	s0, s15
 8020748:	f010 fd52 	bl	80311f0 <fmodf>
 802074c:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 8020750:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020754:	ed8d 0a03 	vstr	s0, [sp, #12]
 8020758:	ee78 aa89 	vadd.f32	s21, s17, s18
 802075c:	ed9d 2a01 	vldr	s4, [sp, #4]
 8020760:	ed9d 7a05 	vldr	s14, [sp, #20]
 8020764:	eddd 7a06 	vldr	s15, [sp, #24]
 8020768:	ed9d 3a07 	vldr	s6, [sp, #28]
 802076c:	eddd 1a08 	vldr	s3, [sp, #32]
 8020770:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 8020774:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 8020778:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 802077c:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 8020780:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 8020784:	dd49      	ble.n	802081a <calculate_aabb_per_shape+0x204a>
 8020786:	eeb0 9a43 	vmov.f32	s18, s6
 802078a:	eeb0 0a42 	vmov.f32	s0, s4
 802078e:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020792:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 8020796:	ed8d 6a08 	vstr	s12, [sp, #32]
 802079a:	edcd 5a07 	vstr	s11, [sp, #28]
 802079e:	ed8d 5a06 	vstr	s10, [sp, #24]
 80207a2:	edcd 7a05 	vstr	s15, [sp, #20]
 80207a6:	ed8d 7a01 	vstr	s14, [sp, #4]
 80207aa:	f010 fd41 	bl	8031230 <sqrtf>
 80207ae:	ed9d 7a01 	vldr	s14, [sp, #4]
 80207b2:	eddd 7a05 	vldr	s15, [sp, #20]
 80207b6:	ed9d 5a06 	vldr	s10, [sp, #24]
 80207ba:	eddd 5a07 	vldr	s11, [sp, #28]
 80207be:	ed9d 6a08 	vldr	s12, [sp, #32]
 80207c2:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 80207c6:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 80207ca:	f7ff ba48 	b.w	801fc5e <calculate_aabb_per_shape+0x148e>
 80207ce:	eeb0 0a4a 	vmov.f32	s0, s20
 80207d2:	f010 fd2d 	bl	8031230 <sqrtf>
 80207d6:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 80207da:	f010 fcdb 	bl	8031194 <acosf>
 80207de:	ed5f 0ab3 	vldr	s1, [pc, #-716]	@ 8020514 <calculate_aabb_per_shape+0x1d44>
 80207e2:	ee30 0ac0 	vsub.f32	s0, s1, s0
 80207e6:	f010 fd03 	bl	80311f0 <fmodf>
 80207ea:	ed8d 0a02 	vstr	s0, [sp, #8]
 80207ee:	eeb0 0a4a 	vmov.f32	s0, s20
 80207f2:	f010 fd1d 	bl	8031230 <sqrtf>
 80207f6:	ee39 aa88 	vadd.f32	s20, s19, s16
 80207fa:	eddd 6a08 	vldr	s13, [sp, #32]
 80207fe:	eddd 4a07 	vldr	s9, [sp, #28]
 8020802:	ed9d 6a06 	vldr	s12, [sp, #24]
 8020806:	eddd 5a05 	vldr	s11, [sp, #20]
 802080a:	ed9d 5a04 	vldr	s10, [sp, #16]
 802080e:	eddd 7a03 	vldr	s15, [sp, #12]
 8020812:	ed9d 7a01 	vldr	s14, [sp, #4]
 8020816:	f7ff b9a1 	b.w	801fb5c <calculate_aabb_per_shape+0x138c>
 802081a:	eeb5 2a40 	vcmp.f32	s4, #0.0
 802081e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020822:	eeb0 9a61 	vmov.f32	s18, s3
 8020826:	d4b0      	bmi.n	802078a <calculate_aabb_per_shape+0x1fba>
 8020828:	f7ff ba19 	b.w	801fc5e <calculate_aabb_per_shape+0x148e>
 802082c:	eeb0 0a42 	vmov.f32	s0, s4
 8020830:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 8020834:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 8020838:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 802083c:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 8020840:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 8020844:	edcd 1a08 	vstr	s3, [sp, #32]
 8020848:	ed8d 3a07 	vstr	s6, [sp, #28]
 802084c:	ed8d 7a05 	vstr	s14, [sp, #20]
 8020850:	ed8d 2a01 	vstr	s4, [sp, #4]
 8020854:	edcd 7a06 	vstr	s15, [sp, #24]
 8020858:	ed8d 4a03 	vstr	s8, [sp, #12]
 802085c:	f010 fce8 	bl	8031230 <sqrtf>
 8020860:	ed9d 4a03 	vldr	s8, [sp, #12]
 8020864:	ee8f 9a04 	vdiv.f32	s18, s30, s8
 8020868:	eeb0 0a49 	vmov.f32	s0, s18
 802086c:	f010 fc92 	bl	8031194 <acosf>
 8020870:	eef0 7a4c 	vmov.f32	s15, s24
 8020874:	ee4a 7a80 	vmla.f32	s15, s21, s0
 8020878:	eef0 0a4c 	vmov.f32	s1, s24
 802087c:	eeb0 0a67 	vmov.f32	s0, s15
 8020880:	f010 fcb6 	bl	80311f0 <fmodf>
 8020884:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8020888:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802088c:	ed8d 0a03 	vstr	s0, [sp, #12]
 8020890:	ee78 aa88 	vadd.f32	s21, s17, s16
 8020894:	ed9d 2a01 	vldr	s4, [sp, #4]
 8020898:	ed9d 7a05 	vldr	s14, [sp, #20]
 802089c:	eddd 7a06 	vldr	s15, [sp, #24]
 80208a0:	ed9d 3a07 	vldr	s6, [sp, #28]
 80208a4:	eddd 1a08 	vldr	s3, [sp, #32]
 80208a8:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 80208ac:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 80208b0:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 80208b4:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 80208b8:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 80208bc:	dd49      	ble.n	8020952 <calculate_aabb_per_shape+0x2182>
 80208be:	eeb0 8a43 	vmov.f32	s16, s6
 80208c2:	eeb0 0a42 	vmov.f32	s0, s4
 80208c6:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 80208ca:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 80208ce:	ed8d 6a08 	vstr	s12, [sp, #32]
 80208d2:	edcd 5a07 	vstr	s11, [sp, #28]
 80208d6:	ed8d 5a06 	vstr	s10, [sp, #24]
 80208da:	edcd 7a05 	vstr	s15, [sp, #20]
 80208de:	ed8d 7a01 	vstr	s14, [sp, #4]
 80208e2:	f010 fca5 	bl	8031230 <sqrtf>
 80208e6:	ed9d 7a01 	vldr	s14, [sp, #4]
 80208ea:	eddd 7a05 	vldr	s15, [sp, #20]
 80208ee:	ed9d 5a06 	vldr	s10, [sp, #24]
 80208f2:	eddd 5a07 	vldr	s11, [sp, #28]
 80208f6:	ed9d 6a08 	vldr	s12, [sp, #32]
 80208fa:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 80208fe:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020902:	f7fe ba31 	b.w	801ed68 <calculate_aabb_per_shape+0x598>
 8020906:	eeb0 0a4a 	vmov.f32	s0, s20
 802090a:	f010 fc91 	bl	8031230 <sqrtf>
 802090e:	ee8b 0a2a 	vdiv.f32	s0, s22, s21
 8020912:	f010 fc3f 	bl	8031194 <acosf>
 8020916:	eddf 0a35 	vldr	s1, [pc, #212]	@ 80209ec <calculate_aabb_per_shape+0x221c>
 802091a:	ee30 0ac0 	vsub.f32	s0, s1, s0
 802091e:	f010 fc67 	bl	80311f0 <fmodf>
 8020922:	ed8d 0a02 	vstr	s0, [sp, #8]
 8020926:	eeb0 0a4a 	vmov.f32	s0, s20
 802092a:	f010 fc81 	bl	8031230 <sqrtf>
 802092e:	ee39 aa89 	vadd.f32	s20, s19, s18
 8020932:	eddd 6a08 	vldr	s13, [sp, #32]
 8020936:	eddd 4a07 	vldr	s9, [sp, #28]
 802093a:	ed9d 6a06 	vldr	s12, [sp, #24]
 802093e:	eddd 5a05 	vldr	s11, [sp, #20]
 8020942:	ed9d 5a04 	vldr	s10, [sp, #16]
 8020946:	eddd 7a03 	vldr	s15, [sp, #12]
 802094a:	ed9d 7a01 	vldr	s14, [sp, #4]
 802094e:	f7fe b98a 	b.w	801ec66 <calculate_aabb_per_shape+0x496>
 8020952:	eeb5 2a40 	vcmp.f32	s4, #0.0
 8020956:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802095a:	eeb0 8a61 	vmov.f32	s16, s3
 802095e:	f57e aa03 	bpl.w	801ed68 <calculate_aabb_per_shape+0x598>
 8020962:	e7ae      	b.n	80208c2 <calculate_aabb_per_shape+0x20f2>
 8020964:	edcd 6a0a 	vstr	s13, [sp, #40]	@ 0x28
 8020968:	edcd 4a09 	vstr	s9, [sp, #36]	@ 0x24
 802096c:	ed8d 6a08 	vstr	s12, [sp, #32]
 8020970:	edcd 5a07 	vstr	s11, [sp, #28]
 8020974:	ed8d 5a06 	vstr	s10, [sp, #24]
 8020978:	edcd 7a05 	vstr	s15, [sp, #20]
 802097c:	ed8d 7a01 	vstr	s14, [sp, #4]
 8020980:	f010 fc56 	bl	8031230 <sqrtf>
 8020984:	eddd 6a0a 	vldr	s13, [sp, #40]	@ 0x28
 8020988:	eddd 4a09 	vldr	s9, [sp, #36]	@ 0x24
 802098c:	ed9d 6a08 	vldr	s12, [sp, #32]
 8020990:	eddd 5a07 	vldr	s11, [sp, #28]
 8020994:	ed9d 5a06 	vldr	s10, [sp, #24]
 8020998:	eddd 7a05 	vldr	s15, [sp, #20]
 802099c:	ed9d 7a01 	vldr	s14, [sp, #4]
 80209a0:	f7ff bbf4 	b.w	802018c <calculate_aabb_per_shape+0x19bc>
 80209a4:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 80209a8:	edcd 4a0c 	vstr	s9, [sp, #48]	@ 0x30
 80209ac:	ed8d 6a0b 	vstr	s12, [sp, #44]	@ 0x2c
 80209b0:	edcd 5a0a 	vstr	s11, [sp, #40]	@ 0x28
 80209b4:	ed8d 5a09 	vstr	s10, [sp, #36]	@ 0x24
 80209b8:	ed8d 4a08 	vstr	s8, [sp, #32]
 80209bc:	edcd 7a07 	vstr	s15, [sp, #28]
 80209c0:	ed8d 7a03 	vstr	s14, [sp, #12]
 80209c4:	f010 fc34 	bl	8031230 <sqrtf>
 80209c8:	eddd 6a0d 	vldr	s13, [sp, #52]	@ 0x34
 80209cc:	eddd 4a0c 	vldr	s9, [sp, #48]	@ 0x30
 80209d0:	ed9d 6a0b 	vldr	s12, [sp, #44]	@ 0x2c
 80209d4:	eddd 5a0a 	vldr	s11, [sp, #40]	@ 0x28
 80209d8:	ed9d 5a09 	vldr	s10, [sp, #36]	@ 0x24
 80209dc:	ed9d 4a08 	vldr	s8, [sp, #32]
 80209e0:	eddd 7a07 	vldr	s15, [sp, #28]
 80209e4:	ed9d 7a03 	vldr	s14, [sp, #12]
 80209e8:	f7ff bb7c 	b.w	80200e4 <calculate_aabb_per_shape+0x1914>
 80209ec:	40c90fdb 	.word	0x40c90fdb

080209f0 <_ZN8touchgfx8HALGPU2D17unlockFrameBufferEv>:
 80209f0:	f7ea bb86 	b.w	800b100 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

080209f4 <_ZN8touchgfx8HALGPU2D10beginFrameEv>:
 80209f4:	2200      	movs	r2, #0
 80209f6:	f880 20a5 	strb.w	r2, [r0, #165]	@ 0xa5
 80209fa:	f7ea ba85 	b.w	800af08 <_ZN8touchgfx3HAL10beginFrameEv>
 80209fe:	bf00      	nop

08020a00 <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv>:
 8020a00:	b538      	push	{r3, r4, r5, lr}
 8020a02:	f890 30a5 	ldrb.w	r3, [r0, #165]	@ 0xa5
 8020a06:	4604      	mov	r4, r0
 8020a08:	f100 057c 	add.w	r5, r0, #124	@ 0x7c
 8020a0c:	b12b      	cbz	r3, 8020a1a <_ZN8touchgfx8HALGPU2D15lockFrameBufferEv+0x1a>
 8020a0e:	2300      	movs	r3, #0
 8020a10:	4628      	mov	r0, r5
 8020a12:	f884 30a5 	strb.w	r3, [r4, #165]	@ 0xa5
 8020a16:	f7fd fa43 	bl	801dea0 <nema_cl_submit>
 8020a1a:	4628      	mov	r0, r5
 8020a1c:	f7fd faba 	bl	801df94 <nema_cl_wait>
 8020a20:	4620      	mov	r0, r4
 8020a22:	f7eb f827 	bl	800ba74 <_ZN8touchgfx3HAL15lockFrameBufferEv>
 8020a26:	2300      	movs	r3, #0
 8020a28:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8020a2c:	bd38      	pop	{r3, r4, r5, pc}
 8020a2e:	bf00      	nop

08020a30 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>:
 8020a30:	b508      	push	{r3, lr}
 8020a32:	4a03      	ldr	r2, [pc, #12]	@ (8020a40 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x10>)
 8020a34:	4b03      	ldr	r3, [pc, #12]	@ (8020a44 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x14>)
 8020a36:	2118      	movs	r1, #24
 8020a38:	4803      	ldr	r0, [pc, #12]	@ (8020a48 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2+0x18>)
 8020a3a:	f011 fd5d 	bl	80324f8 <__assert_func>
 8020a3e:	bf00      	nop
 8020a40:	08035f6c 	.word	0x08035f6c
 8020a44:	08035e18 	.word	0x08035e18
 8020a48:	08035e70 	.word	0x08035e70

08020a4c <_ZN8touchgfx8HALGPU2D8endFrameEv>:
 8020a4c:	b538      	push	{r3, r4, r5, lr}
 8020a4e:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 8020a52:	4604      	mov	r4, r0
 8020a54:	b97b      	cbnz	r3, 8020a76 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x2a>
 8020a56:	f894 30a5 	ldrb.w	r3, [r4, #165]	@ 0xa5
 8020a5a:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
 8020a5e:	b113      	cbz	r3, 8020a66 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x1a>
 8020a60:	4628      	mov	r0, r5
 8020a62:	f7fd fa1d 	bl	801dea0 <nema_cl_submit>
 8020a66:	4628      	mov	r0, r5
 8020a68:	f7fd fa94 	bl	801df94 <nema_cl_wait>
 8020a6c:	4620      	mov	r0, r4
 8020a6e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020a72:	f7ea ba55 	b.w	800af20 <_ZN8touchgfx3HAL8endFrameEv>
 8020a76:	6840      	ldr	r0, [r0, #4]
 8020a78:	4906      	ldr	r1, [pc, #24]	@ (8020a94 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x48>)
 8020a7a:	6803      	ldr	r3, [r0, #0]
 8020a7c:	689a      	ldr	r2, [r3, #8]
 8020a7e:	428a      	cmp	r2, r1
 8020a80:	d105      	bne.n	8020a8e <_ZN8touchgfx8HALGPU2D8endFrameEv+0x42>
 8020a82:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8020a84:	4798      	blx	r3
 8020a86:	2300      	movs	r3, #0
 8020a88:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8020a8c:	e7e3      	b.n	8020a56 <_ZN8touchgfx8HALGPU2D8endFrameEv+0xa>
 8020a8e:	4790      	blx	r2
 8020a90:	e7f9      	b.n	8020a86 <_ZN8touchgfx8HALGPU2D8endFrameEv+0x3a>
 8020a92:	bf00      	nop
 8020a94:	0800204d 	.word	0x0800204d

08020a98 <_ZN8touchgfx8HALGPU2D10initializeEv>:
 8020a98:	b570      	push	{r4, r5, r6, lr}
 8020a9a:	4606      	mov	r6, r0
 8020a9c:	b08a      	sub	sp, #40	@ 0x28
 8020a9e:	466c      	mov	r4, sp
 8020aa0:	f7ea fa4b 	bl	800af3a <_ZN8touchgfx3HAL10initializeEv>
 8020aa4:	f106 057c 	add.w	r5, r6, #124	@ 0x7c
 8020aa8:	4668      	mov	r0, sp
 8020aaa:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8020aae:	f7fc ff59 	bl	801d964 <nema_cl_create_sized>
 8020ab2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020ab4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020ab6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020ab8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020aba:	e894 0003 	ldmia.w	r4, {r0, r1}
 8020abe:	e885 0003 	stmia.w	r5, {r0, r1}
 8020ac2:	f8d6 3088 	ldr.w	r3, [r6, #136]	@ 0x88
 8020ac6:	b10b      	cbz	r3, 8020acc <_ZN8touchgfx8HALGPU2D10initializeEv+0x34>
 8020ac8:	b00a      	add	sp, #40	@ 0x28
 8020aca:	bd70      	pop	{r4, r5, r6, pc}
 8020acc:	f7ff ffb0 	bl	8020a30 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>

08020ad0 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
 8020ad0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020ad2:	f04f 0c01 	mov.w	ip, #1
 8020ad6:	2500      	movs	r5, #0
 8020ad8:	f8bd 7014 	ldrh.w	r7, [sp, #20]
 8020adc:	f8bd 6018 	ldrh.w	r6, [sp, #24]
 8020ae0:	60c3      	str	r3, [r0, #12]
 8020ae2:	42b7      	cmp	r7, r6
 8020ae4:	bf2c      	ite	cs
 8020ae6:	f04f 0e00 	movcs.w	lr, #0
 8020aea:	f04f 0e01 	movcc.w	lr, #1
 8020aee:	4b23      	ldr	r3, [pc, #140]	@ (8020b7c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xac>)
 8020af0:	e9c0 1201 	strd	r1, r2, [r0, #4]
 8020af4:	6683      	str	r3, [r0, #104]	@ 0x68
 8020af6:	4b22      	ldr	r3, [pc, #136]	@ (8020b80 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb0>)
 8020af8:	6105      	str	r5, [r0, #16]
 8020afa:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8020afe:	61c5      	str	r5, [r0, #28]
 8020b00:	6205      	str	r5, [r0, #32]
 8020b02:	8485      	strh	r5, [r0, #36]	@ 0x24
 8020b04:	f8c0 5026 	str.w	r5, [r0, #38]	@ 0x26
 8020b08:	f880 502a 	strb.w	r5, [r0, #42]	@ 0x2a
 8020b0c:	62c5      	str	r5, [r0, #44]	@ 0x2c
 8020b0e:	8605      	strh	r5, [r0, #48]	@ 0x30
 8020b10:	e9c0 550e 	strd	r5, r5, [r0, #56]	@ 0x38
 8020b14:	e9c0 5510 	strd	r5, r5, [r0, #64]	@ 0x40
 8020b18:	f880 5048 	strb.w	r5, [r0, #72]	@ 0x48
 8020b1c:	f880 504a 	strb.w	r5, [r0, #74]	@ 0x4a
 8020b20:	f880 504b 	strb.w	r5, [r0, #75]	@ 0x4b
 8020b24:	64c5      	str	r5, [r0, #76]	@ 0x4c
 8020b26:	6505      	str	r5, [r0, #80]	@ 0x50
 8020b28:	6545      	str	r5, [r0, #84]	@ 0x54
 8020b2a:	f880 5058 	strb.w	r5, [r0, #88]	@ 0x58
 8020b2e:	e9c0 5517 	strd	r5, r5, [r0, #92]	@ 0x5c
 8020b32:	6645      	str	r5, [r0, #100]	@ 0x64
 8020b34:	66c5      	str	r5, [r0, #108]	@ 0x6c
 8020b36:	4a13      	ldr	r2, [pc, #76]	@ (8020b84 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb4>)
 8020b38:	f880 c049 	strb.w	ip, [r0, #73]	@ 0x49
 8020b3c:	6018      	str	r0, [r3, #0]
 8020b3e:	4b12      	ldr	r3, [pc, #72]	@ (8020b88 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xb8>)
 8020b40:	8017      	strh	r7, [r2, #0]
 8020b42:	801f      	strh	r7, [r3, #0]
 8020b44:	4a11      	ldr	r2, [pc, #68]	@ (8020b8c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xbc>)
 8020b46:	4b12      	ldr	r3, [pc, #72]	@ (8020b90 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc0>)
 8020b48:	8016      	strh	r6, [r2, #0]
 8020b4a:	801e      	strh	r6, [r3, #0]
 8020b4c:	4911      	ldr	r1, [pc, #68]	@ (8020b94 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc4>)
 8020b4e:	4a12      	ldr	r2, [pc, #72]	@ (8020b98 <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xc8>)
 8020b50:	4b12      	ldr	r3, [pc, #72]	@ (8020b9c <_ZN8touchgfx8HALGPU2DC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xcc>)
 8020b52:	700d      	strb	r5, [r1, #0]
 8020b54:	6002      	str	r2, [r0, #0]
 8020b56:	6018      	str	r0, [r3, #0]
 8020b58:	f880 5070 	strb.w	r5, [r0, #112]	@ 0x70
 8020b5c:	6745      	str	r5, [r0, #116]	@ 0x74
 8020b5e:	f880 5078 	strb.w	r5, [r0, #120]	@ 0x78
 8020b62:	f880 5079 	strb.w	r5, [r0, #121]	@ 0x79
 8020b66:	f880 c07a 	strb.w	ip, [r0, #122]	@ 0x7a
 8020b6a:	f880 c07b 	strb.w	ip, [r0, #123]	@ 0x7b
 8020b6e:	f880 50a4 	strb.w	r5, [r0, #164]	@ 0xa4
 8020b72:	f880 50a5 	strb.w	r5, [r0, #165]	@ 0xa5
 8020b76:	f880 e034 	strb.w	lr, [r0, #52]	@ 0x34
 8020b7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020b7c:	01000001 	.word	0x01000001
 8020b80:	20082f08 	.word	0x20082f08
 8020b84:	20082efc 	.word	0x20082efc
 8020b88:	20082f02 	.word	0x20082f02
 8020b8c:	20082efe 	.word	0x20082efe
 8020b90:	20082f04 	.word	0x20082f04
 8020b94:	20082f00 	.word	0x20082f00
 8020b98:	08035e9c 	.word	0x08035e9c
 8020b9c:	200833a8 	.word	0x200833a8

08020ba0 <_ZN8touchgfx8HALGPU2D10initializeEi>:
 8020ba0:	b570      	push	{r4, r5, r6, lr}
 8020ba2:	460c      	mov	r4, r1
 8020ba4:	b08a      	sub	sp, #40	@ 0x28
 8020ba6:	4606      	mov	r6, r0
 8020ba8:	f7ea f9c7 	bl	800af3a <_ZN8touchgfx3HAL10initializeEv>
 8020bac:	4621      	mov	r1, r4
 8020bae:	466c      	mov	r4, sp
 8020bb0:	4668      	mov	r0, sp
 8020bb2:	f106 057c 	add.w	r5, r6, #124	@ 0x7c
 8020bb6:	f7fc fed5 	bl	801d964 <nema_cl_create_sized>
 8020bba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020bbc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020bbe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8020bc0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8020bc2:	e894 0003 	ldmia.w	r4, {r0, r1}
 8020bc6:	e885 0003 	stmia.w	r5, {r0, r1}
 8020bca:	f8d6 3088 	ldr.w	r3, [r6, #136]	@ 0x88
 8020bce:	b10b      	cbz	r3, 8020bd4 <_ZN8touchgfx8HALGPU2D10initializeEi+0x34>
 8020bd0:	b00a      	add	sp, #40	@ 0x28
 8020bd2:	bd70      	pop	{r4, r5, r6, pc}
 8020bd4:	f7ff ff2c 	bl	8020a30 <_ZN8touchgfx8HALGPU2D10initializeEi.part.2>

08020bd8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>:
 8020bd8:	b510      	push	{r4, lr}
 8020bda:	f890 30a4 	ldrb.w	r3, [r0, #164]	@ 0xa4
 8020bde:	4604      	mov	r4, r0
 8020be0:	b94b      	cbnz	r3, 8020bf6 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x1e>
 8020be2:	4620      	mov	r0, r4
 8020be4:	2101      	movs	r1, #1
 8020be6:	f7ea ff33 	bl	800ba50 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8020bea:	f104 007c 	add.w	r0, r4, #124	@ 0x7c
 8020bee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020bf2:	f7fc bfcb 	b.w	801db8c <nema_cl_bind_circular>
 8020bf6:	6840      	ldr	r0, [r0, #4]
 8020bf8:	4906      	ldr	r1, [pc, #24]	@ (8020c14 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x3c>)
 8020bfa:	6803      	ldr	r3, [r0, #0]
 8020bfc:	689a      	ldr	r2, [r3, #8]
 8020bfe:	428a      	cmp	r2, r1
 8020c00:	d105      	bne.n	8020c0e <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x36>
 8020c02:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8020c04:	4798      	blx	r3
 8020c06:	2300      	movs	r3, #0
 8020c08:	f884 30a4 	strb.w	r3, [r4, #164]	@ 0xa4
 8020c0c:	e7e9      	b.n	8020be2 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0xa>
 8020c0e:	4790      	blx	r2
 8020c10:	e7f9      	b.n	8020c06 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv+0x2e>
 8020c12:	bf00      	nop
 8020c14:	0800204d 	.word	0x0800204d

08020c18 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>:
 8020c18:	4603      	mov	r3, r0
 8020c1a:	2200      	movs	r2, #0
 8020c1c:	307c      	adds	r0, #124	@ 0x7c
 8020c1e:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8020c22:	f7fd b93d 	b.w	801dea0 <nema_cl_submit>
 8020c26:	bf00      	nop

08020c28 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 8020c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c2c:	b091      	sub	sp, #68	@ 0x44
 8020c2e:	4604      	mov	r4, r0
 8020c30:	461d      	mov	r5, r3
 8020c32:	f8bd 3080 	ldrh.w	r3, [sp, #128]	@ 0x80
 8020c36:	e9cd 210e 	strd	r2, r1, [sp, #56]	@ 0x38
 8020c3a:	930d      	str	r3, [sp, #52]	@ 0x34
 8020c3c:	f89d 2088 	ldrb.w	r2, [sp, #136]	@ 0x88
 8020c40:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
 8020c44:	307c      	adds	r0, #124	@ 0x7c
 8020c46:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 8020c4a:	f8bd 706c 	ldrh.w	r7, [sp, #108]	@ 0x6c
 8020c4e:	f8bd 8070 	ldrh.w	r8, [sp, #112]	@ 0x70
 8020c52:	f8bd 9074 	ldrh.w	r9, [sp, #116]	@ 0x74
 8020c56:	f89d a078 	ldrb.w	sl, [sp, #120]	@ 0x78
 8020c5a:	f89d b07c 	ldrb.w	fp, [sp, #124]	@ 0x7c
 8020c5e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020c60:	920c      	str	r2, [sp, #48]	@ 0x30
 8020c62:	f7fd f997 	bl	801df94 <nema_cl_wait>
 8020c66:	f04f 0e01 	mov.w	lr, #1
 8020c6a:	2000      	movs	r0, #0
 8020c6c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020c6e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020c70:	9208      	str	r2, [sp, #32]
 8020c72:	f8d4 c000 	ldr.w	ip, [r4]
 8020c76:	9307      	str	r3, [sp, #28]
 8020c78:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020c7a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8020c7e:	e9dd 210e 	ldrd	r2, r1, [sp, #56]	@ 0x38
 8020c82:	e9cd b305 	strd	fp, r3, [sp, #20]
 8020c86:	e9cd 7801 	strd	r7, r8, [sp, #4]
 8020c8a:	9600      	str	r6, [sp, #0]
 8020c8c:	f884 e0a4 	strb.w	lr, [r4, #164]	@ 0xa4
 8020c90:	9009      	str	r0, [sp, #36]	@ 0x24
 8020c92:	462b      	mov	r3, r5
 8020c94:	4620      	mov	r0, r4
 8020c96:	f8dc 403c 	ldr.w	r4, [ip, #60]	@ 0x3c
 8020c9a:	47a0      	blx	r4
 8020c9c:	b011      	add	sp, #68	@ 0x44
 8020c9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ca2:	bf00      	nop

08020ca4 <_ZN8touchgfx8LCDGPU2DD1Ev>:
 8020ca4:	4770      	bx	lr
 8020ca6:	bf00      	nop

08020ca8 <_ZNK8touchgfx8LCDGPU2D8bitDepthEv>:
 8020ca8:	7b03      	ldrb	r3, [r0, #12]
 8020caa:	2b02      	cmp	r3, #2
 8020cac:	d004      	beq.n	8020cb8 <_ZNK8touchgfx8LCDGPU2D8bitDepthEv+0x10>
 8020cae:	2b01      	cmp	r3, #1
 8020cb0:	bf0c      	ite	eq
 8020cb2:	2018      	moveq	r0, #24
 8020cb4:	2010      	movne	r0, #16
 8020cb6:	4770      	bx	lr
 8020cb8:	2020      	movs	r0, #32
 8020cba:	4770      	bx	lr

08020cbc <_ZNK8touchgfx8LCDGPU2D17framebufferFormatEv>:
 8020cbc:	7b00      	ldrb	r0, [r0, #12]
 8020cbe:	4770      	bx	lr

08020cc0 <_ZN8touchgfx8LCDGPU2D4initEv>:
 8020cc0:	4770      	bx	lr
 8020cc2:	bf00      	nop

08020cc4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020cc8:	b087      	sub	sp, #28
 8020cca:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 8020cce:	9102      	str	r1, [sp, #8]
 8020cd0:	ea6f 0c05 	mvn.w	ip, r5
 8020cd4:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8020cd8:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8020cda:	9203      	str	r2, [sp, #12]
 8020cdc:	e9dd 4215 	ldrd	r4, r2, [sp, #84]	@ 0x54
 8020ce0:	6860      	ldr	r0, [r4, #4]
 8020ce2:	fa5f fc8c 	uxtb.w	ip, ip
 8020ce6:	fb00 2e01 	mla	lr, r0, r1, r2
 8020cea:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8020cec:	6820      	ldr	r0, [r4, #0]
 8020cee:	e9d2 2400 	ldrd	r2, r4, [r2]
 8020cf2:	3404      	adds	r4, #4
 8020cf4:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 8020cf8:	fa1f fb85 	uxth.w	fp, r5
 8020cfc:	9405      	str	r4, [sp, #20]
 8020cfe:	9200      	str	r2, [sp, #0]
 8020d00:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8020d04:	9c02      	ldr	r4, [sp, #8]
 8020d06:	2c00      	cmp	r4, #0
 8020d08:	dc03      	bgt.n	8020d12 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020d0a:	9c03      	ldr	r4, [sp, #12]
 8020d0c:	2c00      	cmp	r4, #0
 8020d0e:	f340 80c2 	ble.w	8020e96 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020d12:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020d14:	2b00      	cmp	r3, #0
 8020d16:	e9d4 ea02 	ldrd	lr, sl, [r4, #8]
 8020d1a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8020d1e:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8020d22:	fa0f f48e 	sxth.w	r4, lr
 8020d26:	fa0f f88a 	sxth.w	r8, sl
 8020d2a:	f340 80b7 	ble.w	8020e9c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8020d2e:	1415      	asrs	r5, r2, #16
 8020d30:	d406      	bmi.n	8020d40 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020d32:	42a5      	cmp	r5, r4
 8020d34:	da04      	bge.n	8020d40 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020d36:	ea5f 4921 	movs.w	r9, r1, asr #16
 8020d3a:	d401      	bmi.n	8020d40 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020d3c:	45c1      	cmp	r9, r8
 8020d3e:	db3e      	blt.n	8020dbe <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8020d40:	3b01      	subs	r3, #1
 8020d42:	4432      	add	r2, r6
 8020d44:	4439      	add	r1, r7
 8020d46:	f100 0002 	add.w	r0, r0, #2
 8020d4a:	d1f0      	bne.n	8020d2e <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8020d4c:	9b02      	ldr	r3, [sp, #8]
 8020d4e:	2b00      	cmp	r3, #0
 8020d50:	f340 80a1 	ble.w	8020e96 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020d54:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020d58:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020d5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020d60:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020d64:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020d68:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8020d6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020d70:	ee76 6a62 	vsub.f32	s13, s12, s5
 8020d74:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8020d78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d7c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020d80:	ee16 2a90 	vmov	r2, s13
 8020d84:	3b01      	subs	r3, #1
 8020d86:	9302      	str	r3, [sp, #8]
 8020d88:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020d8a:	9c03      	ldr	r4, [sp, #12]
 8020d8c:	fb92 f6f3 	sdiv	r6, r2, r3
 8020d90:	ee17 2a10 	vmov	r2, s14
 8020d94:	eeb0 7a43 	vmov.f32	s14, s6
 8020d98:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020d9c:	ee17 1a10 	vmov	r1, s14
 8020da0:	eeb0 7a62 	vmov.f32	s14, s5
 8020da4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8020da8:	fb92 f7f3 	sdiv	r7, r2, r3
 8020dac:	eeb0 3a67 	vmov.f32	s6, s15
 8020db0:	ee17 2a10 	vmov	r2, s14
 8020db4:	eef0 2a46 	vmov.f32	s5, s12
 8020db8:	bf08      	it	eq
 8020dba:	4623      	moveq	r3, r4
 8020dbc:	e7a2      	b.n	8020d04 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020dbe:	9501      	str	r5, [sp, #4]
 8020dc0:	1e5d      	subs	r5, r3, #1
 8020dc2:	fb05 2906 	mla	r9, r5, r6, r2
 8020dc6:	ea5f 4929 	movs.w	r9, r9, asr #16
 8020dca:	9504      	str	r5, [sp, #16]
 8020dcc:	d570      	bpl.n	8020eb0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8020dce:	4680      	mov	r8, r0
 8020dd0:	9d01      	ldr	r5, [sp, #4]
 8020dd2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020dd6:	4654      	mov	r4, sl
 8020dd8:	4673      	mov	r3, lr
 8020dda:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8020dde:	e002      	b.n	8020de6 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8020de0:	1415      	asrs	r5, r2, #16
 8020de2:	e9d9 3402 	ldrd	r3, r4, [r9, #8]
 8020de6:	2d00      	cmp	r5, #0
 8020de8:	4432      	add	r2, r6
 8020dea:	db4b      	blt.n	8020e84 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020dec:	429d      	cmp	r5, r3
 8020dee:	da49      	bge.n	8020e84 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020df0:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8020df4:	d446      	bmi.n	8020e84 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020df6:	45a6      	cmp	lr, r4
 8020df8:	da44      	bge.n	8020e84 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020dfa:	9c00      	ldr	r4, [sp, #0]
 8020dfc:	b21b      	sxth	r3, r3
 8020dfe:	fb0e 4303 	mla	r3, lr, r3, r4
 8020e02:	5d5b      	ldrb	r3, [r3, r5]
 8020e04:	9d05      	ldr	r5, [sp, #20]
 8020e06:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8020e0a:	441d      	add	r5, r3
 8020e0c:	f895 a002 	ldrb.w	sl, [r5, #2]
 8020e10:	786d      	ldrb	r5, [r5, #1]
 8020e12:	f8b8 4000 	ldrh.w	r4, [r8]
 8020e16:	fb15 f50b 	smulbb	r5, r5, fp
 8020e1a:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 8020e1e:	fa5f fe8e 	uxtb.w	lr, lr
 8020e22:	9501      	str	r5, [sp, #4]
 8020e24:	fb1e fe0c 	smulbb	lr, lr, ip
 8020e28:	9d05      	ldr	r5, [sp, #20]
 8020e2a:	fb1a fa0b 	smulbb	sl, sl, fp
 8020e2e:	5ced      	ldrb	r5, [r5, r3]
 8020e30:	1223      	asrs	r3, r4, #8
 8020e32:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020e36:	fb05 ee0b 	mla	lr, r5, fp, lr
 8020e3a:	fb03 aa0c 	mla	sl, r3, ip, sl
 8020e3e:	9d01      	ldr	r5, [sp, #4]
 8020e40:	10e4      	asrs	r4, r4, #3
 8020e42:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8020e46:	fb04 540c 	mla	r4, r4, ip, r5
 8020e4a:	fa1f fe8e 	uxth.w	lr, lr
 8020e4e:	fa1f fa8a 	uxth.w	sl, sl
 8020e52:	f10e 0301 	add.w	r3, lr, #1
 8020e56:	f10a 0501 	add.w	r5, sl, #1
 8020e5a:	9301      	str	r3, [sp, #4]
 8020e5c:	b2a4      	uxth	r4, r4
 8020e5e:	eb05 2a1a 	add.w	sl, r5, sl, lsr #8
 8020e62:	9d01      	ldr	r5, [sp, #4]
 8020e64:	1c63      	adds	r3, r4, #1
 8020e66:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020e6a:	eb05 251e 	add.w	r5, r5, lr, lsr #8
 8020e6e:	f40a 4378 	and.w	r3, sl, #63488	@ 0xf800
 8020e72:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8020e76:	0964      	lsrs	r4, r4, #5
 8020e78:	432b      	orrs	r3, r5
 8020e7a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020e7e:	4323      	orrs	r3, r4
 8020e80:	f8a8 3000 	strh.w	r3, [r8]
 8020e84:	f108 0802 	add.w	r8, r8, #2
 8020e88:	4580      	cmp	r8, r0
 8020e8a:	4439      	add	r1, r7
 8020e8c:	d1a8      	bne.n	8020de0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8020e8e:	9b02      	ldr	r3, [sp, #8]
 8020e90:	2b00      	cmp	r3, #0
 8020e92:	f73f af5f 	bgt.w	8020d54 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020e96:	b007      	add	sp, #28
 8020e98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020e9c:	f43f af56 	beq.w	8020d4c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020ea0:	1e5d      	subs	r5, r3, #1
 8020ea2:	fb05 2906 	mla	r9, r5, r6, r2
 8020ea6:	ea5f 4929 	movs.w	r9, r9, asr #16
 8020eaa:	9504      	str	r5, [sp, #16]
 8020eac:	f53f af4e 	bmi.w	8020d4c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020eb0:	454c      	cmp	r4, r9
 8020eb2:	dd5b      	ble.n	8020f6c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020eb4:	9d04      	ldr	r5, [sp, #16]
 8020eb6:	fb05 1507 	mla	r5, r5, r7, r1
 8020eba:	142d      	asrs	r5, r5, #16
 8020ebc:	d456      	bmi.n	8020f6c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020ebe:	4545      	cmp	r5, r8
 8020ec0:	da54      	bge.n	8020f6c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020ec2:	2b00      	cmp	r3, #0
 8020ec4:	f77f af42 	ble.w	8020d4c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020ec8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020ecc:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8020ed0:	9301      	str	r3, [sp, #4]
 8020ed2:	e002      	b.n	8020eda <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020ed4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020ed6:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 8020eda:	9d00      	ldr	r5, [sp, #0]
 8020edc:	140b      	asrs	r3, r1, #16
 8020ede:	fb04 5303 	mla	r3, r4, r3, r5
 8020ee2:	1414      	asrs	r4, r2, #16
 8020ee4:	5d1b      	ldrb	r3, [r3, r4]
 8020ee6:	8804      	ldrh	r4, [r0, #0]
 8020ee8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8020eec:	eb08 0503 	add.w	r5, r8, r3
 8020ef0:	f895 a002 	ldrb.w	sl, [r5, #2]
 8020ef4:	f895 9001 	ldrb.w	r9, [r5, #1]
 8020ef8:	ea4f 0ec4 	mov.w	lr, r4, lsl #3
 8020efc:	fa5f fe8e 	uxtb.w	lr, lr
 8020f00:	fb1e fe0c 	smulbb	lr, lr, ip
 8020f04:	fb19 f90b 	smulbb	r9, r9, fp
 8020f08:	fb1a fa0b 	smulbb	sl, sl, fp
 8020f0c:	f818 5003 	ldrb.w	r5, [r8, r3]
 8020f10:	1223      	asrs	r3, r4, #8
 8020f12:	10e4      	asrs	r4, r4, #3
 8020f14:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020f18:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8020f1c:	fb05 e50b 	mla	r5, r5, fp, lr
 8020f20:	fb03 aa0c 	mla	sl, r3, ip, sl
 8020f24:	fb04 940c 	mla	r4, r4, ip, r9
 8020f28:	b2ad      	uxth	r5, r5
 8020f2a:	fa1f fa8a 	uxth.w	sl, sl
 8020f2e:	b2a4      	uxth	r4, r4
 8020f30:	f10a 0301 	add.w	r3, sl, #1
 8020f34:	f105 0e01 	add.w	lr, r5, #1
 8020f38:	f104 0901 	add.w	r9, r4, #1
 8020f3c:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8020f40:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 8020f44:	eb09 2414 	add.w	r4, r9, r4, lsr #8
 8020f48:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8020f4c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020f50:	0964      	lsrs	r4, r4, #5
 8020f52:	ea43 030e 	orr.w	r3, r3, lr
 8020f56:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020f5a:	4323      	orrs	r3, r4
 8020f5c:	f820 3b02 	strh.w	r3, [r0], #2
 8020f60:	9b01      	ldr	r3, [sp, #4]
 8020f62:	4439      	add	r1, r7
 8020f64:	4298      	cmp	r0, r3
 8020f66:	4432      	add	r2, r6
 8020f68:	d1b4      	bne.n	8020ed4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8020f6a:	e6ef      	b.n	8020d4c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020f6c:	2b00      	cmp	r3, #0
 8020f6e:	f77f aeed 	ble.w	8020d4c <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020f72:	1414      	asrs	r4, r2, #16
 8020f74:	4680      	mov	r8, r0
 8020f76:	9401      	str	r4, [sp, #4]
 8020f78:	4625      	mov	r5, r4
 8020f7a:	e72a      	b.n	8020dd2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>

08020f7c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f80:	4689      	mov	r9, r1
 8020f82:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8020f86:	46ca      	mov	sl, r9
 8020f88:	b087      	sub	sp, #28
 8020f8a:	9203      	str	r2, [sp, #12]
 8020f8c:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8020f90:	6854      	ldr	r4, [r2, #4]
 8020f92:	e9dd 0c17 	ldrd	r0, ip, [sp, #92]	@ 0x5c
 8020f96:	fb04 1000 	mla	r0, r4, r0, r1
 8020f9a:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8020f9e:	6815      	ldr	r5, [r2, #0]
 8020fa0:	e9dc 2400 	ldrd	r2, r4, [ip]
 8020fa4:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8020fa8:	f104 0b04 	add.w	fp, r4, #4
 8020fac:	9205      	str	r2, [sp, #20]
 8020fae:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8020fb2:	f1ba 0f00 	cmp.w	sl, #0
 8020fb6:	dc03      	bgt.n	8020fc0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8020fb8:	9c03      	ldr	r4, [sp, #12]
 8020fba:	2c00      	cmp	r4, #0
 8020fbc:	f340 8095 	ble.w	80210ea <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8020fc0:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 8020fc4:	2b00      	cmp	r3, #0
 8020fc6:	fa0f f588 	sxth.w	r5, r8
 8020fca:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8020fce:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8020fd2:	fa0f f48e 	sxth.w	r4, lr
 8020fd6:	9502      	str	r5, [sp, #8]
 8020fd8:	f340 808a 	ble.w	80210f0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8020fdc:	46f1      	mov	r9, lr
 8020fde:	9401      	str	r4, [sp, #4]
 8020fe0:	1415      	asrs	r5, r2, #16
 8020fe2:	d408      	bmi.n	8020ff6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020fe4:	9c01      	ldr	r4, [sp, #4]
 8020fe6:	42a5      	cmp	r5, r4
 8020fe8:	da05      	bge.n	8020ff6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020fea:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8020fee:	d402      	bmi.n	8020ff6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020ff0:	9c02      	ldr	r4, [sp, #8]
 8020ff2:	45a6      	cmp	lr, r4
 8020ff4:	db3b      	blt.n	802106e <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf2>
 8020ff6:	3b01      	subs	r3, #1
 8020ff8:	4432      	add	r2, r6
 8020ffa:	4439      	add	r1, r7
 8020ffc:	f100 0002 	add.w	r0, r0, #2
 8021000:	d1ee      	bne.n	8020fe0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8021002:	f1ba 0f00 	cmp.w	sl, #0
 8021006:	dd70      	ble.n	80210ea <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8021008:	ee30 0a04 	vadd.f32	s0, s0, s8
 802100c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021010:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021014:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021018:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802101c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021020:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021024:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021028:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802102c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021030:	ee16 2a90 	vmov	r2, s13
 8021034:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021036:	9c03      	ldr	r4, [sp, #12]
 8021038:	fb92 f6f3 	sdiv	r6, r2, r3
 802103c:	ee17 2a10 	vmov	r2, s14
 8021040:	eeb0 7a43 	vmov.f32	s14, s6
 8021044:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021048:	ee17 1a10 	vmov	r1, s14
 802104c:	eeb0 7a62 	vmov.f32	s14, s5
 8021050:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021054:	f1ba 0a01 	subs.w	sl, sl, #1
 8021058:	fb92 f7f3 	sdiv	r7, r2, r3
 802105c:	eeb0 3a67 	vmov.f32	s6, s15
 8021060:	ee17 2a10 	vmov	r2, s14
 8021064:	eef0 2a46 	vmov.f32	s5, s12
 8021068:	bf08      	it	eq
 802106a:	4623      	moveq	r3, r4
 802106c:	e7a1      	b.n	8020fb2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 802106e:	9c01      	ldr	r4, [sp, #4]
 8021070:	9501      	str	r5, [sp, #4]
 8021072:	1e5d      	subs	r5, r3, #1
 8021074:	46ce      	mov	lr, r9
 8021076:	fb05 2906 	mla	r9, r5, r6, r2
 802107a:	ea5f 4929 	movs.w	r9, r9, asr #16
 802107e:	9504      	str	r5, [sp, #16]
 8021080:	d53e      	bpl.n	8021100 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8021082:	4604      	mov	r4, r0
 8021084:	9d01      	ldr	r5, [sp, #4]
 8021086:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802108a:	4673      	mov	r3, lr
 802108c:	46b6      	mov	lr, r6
 802108e:	4646      	mov	r6, r8
 8021090:	e002      	b.n	8021098 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8021092:	1415      	asrs	r5, r2, #16
 8021094:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021098:	2d00      	cmp	r5, #0
 802109a:	4472      	add	r2, lr
 802109c:	db1e      	blt.n	80210dc <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 802109e:	429d      	cmp	r5, r3
 80210a0:	da1c      	bge.n	80210dc <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 80210a2:	ea5f 4821 	movs.w	r8, r1, asr #16
 80210a6:	d419      	bmi.n	80210dc <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 80210a8:	45b0      	cmp	r8, r6
 80210aa:	da17      	bge.n	80210dc <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 80210ac:	9e05      	ldr	r6, [sp, #20]
 80210ae:	b21b      	sxth	r3, r3
 80210b0:	fb08 6303 	mla	r3, r8, r3, r6
 80210b4:	5d5e      	ldrb	r6, [r3, r5]
 80210b6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80210ba:	eb0b 0306 	add.w	r3, fp, r6
 80210be:	785d      	ldrb	r5, [r3, #1]
 80210c0:	789b      	ldrb	r3, [r3, #2]
 80210c2:	00ed      	lsls	r5, r5, #3
 80210c4:	f405 68fc 	and.w	r8, r5, #2016	@ 0x7e0
 80210c8:	4d2d      	ldr	r5, [pc, #180]	@ (8021180 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 80210ca:	f81b 6006 	ldrb.w	r6, [fp, r6]
 80210ce:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 80210d2:	ea43 0308 	orr.w	r3, r3, r8
 80210d6:	ea43 03d6 	orr.w	r3, r3, r6, lsr #3
 80210da:	8023      	strh	r3, [r4, #0]
 80210dc:	3402      	adds	r4, #2
 80210de:	4284      	cmp	r4, r0
 80210e0:	4439      	add	r1, r7
 80210e2:	d1d6      	bne.n	8021092 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80210e4:	f1ba 0f00 	cmp.w	sl, #0
 80210e8:	dc8e      	bgt.n	8021008 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80210ea:	b007      	add	sp, #28
 80210ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80210f0:	d087      	beq.n	8021002 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80210f2:	1e5d      	subs	r5, r3, #1
 80210f4:	fb05 2906 	mla	r9, r5, r6, r2
 80210f8:	ea5f 4929 	movs.w	r9, r9, asr #16
 80210fc:	9504      	str	r5, [sp, #16]
 80210fe:	d480      	bmi.n	8021002 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021100:	454c      	cmp	r4, r9
 8021102:	dd35      	ble.n	8021170 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8021104:	9d04      	ldr	r5, [sp, #16]
 8021106:	fb05 1507 	mla	r5, r5, r7, r1
 802110a:	ea5f 4925 	movs.w	r9, r5, asr #16
 802110e:	d42f      	bmi.n	8021170 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8021110:	9d02      	ldr	r5, [sp, #8]
 8021112:	45a9      	cmp	r9, r5
 8021114:	da2c      	bge.n	8021170 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f4>
 8021116:	2b00      	cmp	r3, #0
 8021118:	f77f af73 	ble.w	8021002 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802111c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021120:	9d05      	ldr	r5, [sp, #20]
 8021122:	4699      	mov	r9, r3
 8021124:	46a6      	mov	lr, r4
 8021126:	e001      	b.n	802112c <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 8021128:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 802112c:	140c      	asrs	r4, r1, #16
 802112e:	fb0e 5404 	mla	r4, lr, r4, r5
 8021132:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8021136:	f814 e00e 	ldrb.w	lr, [r4, lr]
 802113a:	4b11      	ldr	r3, [pc, #68]	@ (8021180 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>)
 802113c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8021140:	eb0b 040e 	add.w	r4, fp, lr
 8021144:	f894 8001 	ldrb.w	r8, [r4, #1]
 8021148:	78a4      	ldrb	r4, [r4, #2]
 802114a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 802114e:	f81b e00e 	ldrb.w	lr, [fp, lr]
 8021152:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8021156:	ea03 2404 	and.w	r4, r3, r4, lsl #8
 802115a:	ea44 0408 	orr.w	r4, r4, r8
 802115e:	ea44 04de 	orr.w	r4, r4, lr, lsr #3
 8021162:	f820 4b02 	strh.w	r4, [r0], #2
 8021166:	4548      	cmp	r0, r9
 8021168:	4439      	add	r1, r7
 802116a:	4432      	add	r2, r6
 802116c:	d1dc      	bne.n	8021128 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 802116e:	e748      	b.n	8021002 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021170:	2b00      	cmp	r3, #0
 8021172:	f77f af46 	ble.w	8021002 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021176:	1415      	asrs	r5, r2, #16
 8021178:	4604      	mov	r4, r0
 802117a:	9501      	str	r5, [sp, #4]
 802117c:	e783      	b.n	8021086 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 802117e:	bf00      	nop
 8021180:	fffff800 	.word	0xfffff800

08021184 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021184:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802118c:	b087      	sub	sp, #28
 802118e:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8021192:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8021196:	e9dd 0b17 	ldrd	r0, fp, [sp, #92]	@ 0x5c
 802119a:	6854      	ldr	r4, [r2, #4]
 802119c:	f89d 5064 	ldrb.w	r5, [sp, #100]	@ 0x64
 80211a0:	fb04 1100 	mla	r1, r4, r0, r1
 80211a4:	e9dd 9a13 	ldrd	r9, sl, [sp, #76]	@ 0x4c
 80211a8:	6810      	ldr	r0, [r2, #0]
 80211aa:	e9db 2400 	ldrd	r2, r4, [fp]
 80211ae:	eb00 0e41 	add.w	lr, r0, r1, lsl #1
 80211b2:	1d21      	adds	r1, r4, #4
 80211b4:	9505      	str	r5, [sp, #20]
 80211b6:	9102      	str	r1, [sp, #8]
 80211b8:	9201      	str	r2, [sp, #4]
 80211ba:	e9dd 7211 	ldrd	r7, r2, [sp, #68]	@ 0x44
 80211be:	9903      	ldr	r1, [sp, #12]
 80211c0:	2900      	cmp	r1, #0
 80211c2:	dc03      	bgt.n	80211cc <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80211c4:	9904      	ldr	r1, [sp, #16]
 80211c6:	2900      	cmp	r1, #0
 80211c8:	f340 80b6 	ble.w	8021338 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80211cc:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 80211d0:	2b00      	cmp	r3, #0
 80211d2:	f507 4700 	add.w	r7, r7, #32768	@ 0x8000
 80211d6:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80211da:	b221      	sxth	r1, r4
 80211dc:	b235      	sxth	r5, r6
 80211de:	f340 80ae 	ble.w	802133e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80211e2:	1438      	asrs	r0, r7, #16
 80211e4:	d406      	bmi.n	80211f4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80211e6:	4288      	cmp	r0, r1
 80211e8:	da04      	bge.n	80211f4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80211ea:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80211ee:	d401      	bmi.n	80211f4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80211f0:	45ac      	cmp	ip, r5
 80211f2:	db3c      	blt.n	802126e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80211f4:	3b01      	subs	r3, #1
 80211f6:	444f      	add	r7, r9
 80211f8:	4452      	add	r2, sl
 80211fa:	f10e 0e02 	add.w	lr, lr, #2
 80211fe:	d1f0      	bne.n	80211e2 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8021200:	9b03      	ldr	r3, [sp, #12]
 8021202:	2b00      	cmp	r3, #0
 8021204:	f340 8098 	ble.w	8021338 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021208:	ee30 0a04 	vadd.f32	s0, s0, s8
 802120c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021210:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021214:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021218:	ee20 6aa7 	vmul.f32	s12, s1, s15
 802121c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021220:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021224:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021228:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802122c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021230:	ee16 2a90 	vmov	r2, s13
 8021234:	3b01      	subs	r3, #1
 8021236:	9303      	str	r3, [sp, #12]
 8021238:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802123a:	9904      	ldr	r1, [sp, #16]
 802123c:	fb92 f9f3 	sdiv	r9, r2, r3
 8021240:	ee17 2a10 	vmov	r2, s14
 8021244:	eeb0 7a43 	vmov.f32	s14, s6
 8021248:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802124c:	fb92 faf3 	sdiv	sl, r2, r3
 8021250:	ee17 2a10 	vmov	r2, s14
 8021254:	eeb0 7a62 	vmov.f32	s14, s5
 8021258:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802125c:	eeb0 3a67 	vmov.f32	s6, s15
 8021260:	ee17 7a10 	vmov	r7, s14
 8021264:	eef0 2a46 	vmov.f32	s5, s12
 8021268:	bf08      	it	eq
 802126a:	460b      	moveq	r3, r1
 802126c:	e7a7      	b.n	80211be <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802126e:	f103 38ff 	add.w	r8, r3, #4294967295
 8021272:	fb08 7c09 	mla	ip, r8, r9, r7
 8021276:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 802127a:	d56a      	bpl.n	8021352 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ce>
 802127c:	4675      	mov	r5, lr
 802127e:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8021282:	e002      	b.n	802128a <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021284:	1438      	asrs	r0, r7, #16
 8021286:	e9db 4602 	ldrd	r4, r6, [fp, #8]
 802128a:	2800      	cmp	r0, #0
 802128c:	444f      	add	r7, r9
 802128e:	db4b      	blt.n	8021328 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021290:	42a0      	cmp	r0, r4
 8021292:	da49      	bge.n	8021328 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021294:	1413      	asrs	r3, r2, #16
 8021296:	d447      	bmi.n	8021328 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021298:	42b3      	cmp	r3, r6
 802129a:	b224      	sxth	r4, r4
 802129c:	da44      	bge.n	8021328 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802129e:	9901      	ldr	r1, [sp, #4]
 80212a0:	fb03 1404 	mla	r4, r3, r4, r1
 80212a4:	9902      	ldr	r1, [sp, #8]
 80212a6:	5c23      	ldrb	r3, [r4, r0]
 80212a8:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80212ac:	0e0b      	lsrs	r3, r1, #24
 80212ae:	d03b      	beq.n	8021328 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80212b0:	9805      	ldr	r0, [sp, #20]
 80212b2:	f3c1 4807 	ubfx	r8, r1, #16, #8
 80212b6:	fb00 f003 	mul.w	r0, r0, r3
 80212ba:	1c43      	adds	r3, r0, #1
 80212bc:	eb03 2320 	add.w	r3, r3, r0, asr #8
 80212c0:	121b      	asrs	r3, r3, #8
 80212c2:	43d8      	mvns	r0, r3
 80212c4:	f3c1 2c07 	ubfx	ip, r1, #8, #8
 80212c8:	b29b      	uxth	r3, r3
 80212ca:	b2c9      	uxtb	r1, r1
 80212cc:	882e      	ldrh	r6, [r5, #0]
 80212ce:	fb1c fc03 	smulbb	ip, ip, r3
 80212d2:	fb18 f803 	smulbb	r8, r8, r3
 80212d6:	fb11 f303 	smulbb	r3, r1, r3
 80212da:	10f4      	asrs	r4, r6, #3
 80212dc:	1231      	asrs	r1, r6, #8
 80212de:	00f6      	lsls	r6, r6, #3
 80212e0:	b2c0      	uxtb	r0, r0
 80212e2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80212e6:	b2f6      	uxtb	r6, r6
 80212e8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80212ec:	fb01 8800 	mla	r8, r1, r0, r8
 80212f0:	fb04 c400 	mla	r4, r4, r0, ip
 80212f4:	fb06 3100 	mla	r1, r6, r0, r3
 80212f8:	fa1f fc88 	uxth.w	ip, r8
 80212fc:	b289      	uxth	r1, r1
 80212fe:	b2a4      	uxth	r4, r4
 8021300:	1c4e      	adds	r6, r1, #1
 8021302:	1c60      	adds	r0, r4, #1
 8021304:	f10c 0301 	add.w	r3, ip, #1
 8021308:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 802130c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021310:	eb00 2114 	add.w	r1, r0, r4, lsr #8
 8021314:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8021318:	f3c6 20c4 	ubfx	r0, r6, #11, #5
 802131c:	0949      	lsrs	r1, r1, #5
 802131e:	4303      	orrs	r3, r0
 8021320:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021324:	430b      	orrs	r3, r1
 8021326:	802b      	strh	r3, [r5, #0]
 8021328:	3502      	adds	r5, #2
 802132a:	4575      	cmp	r5, lr
 802132c:	4452      	add	r2, sl
 802132e:	d1a9      	bne.n	8021284 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8021330:	9b03      	ldr	r3, [sp, #12]
 8021332:	2b00      	cmp	r3, #0
 8021334:	f73f af68 	bgt.w	8021208 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021338:	b007      	add	sp, #28
 802133a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802133e:	f43f af5f 	beq.w	8021200 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021342:	f103 38ff 	add.w	r8, r3, #4294967295
 8021346:	fb08 7c09 	mla	ip, r8, r9, r7
 802134a:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 802134e:	f53f af57 	bmi.w	8021200 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021352:	4561      	cmp	r1, ip
 8021354:	dd5c      	ble.n	8021410 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021356:	fb08 280a 	mla	r8, r8, sl, r2
 802135a:	ea5f 4828 	movs.w	r8, r8, asr #16
 802135e:	d457      	bmi.n	8021410 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021360:	45a8      	cmp	r8, r5
 8021362:	da55      	bge.n	8021410 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021364:	2b00      	cmp	r3, #0
 8021366:	f77f af4b 	ble.w	8021200 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802136a:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 802136e:	e001      	b.n	8021374 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8021370:	f9bb 1008 	ldrsh.w	r1, [fp, #8]
 8021374:	9801      	ldr	r0, [sp, #4]
 8021376:	1413      	asrs	r3, r2, #16
 8021378:	fb01 0303 	mla	r3, r1, r3, r0
 802137c:	1439      	asrs	r1, r7, #16
 802137e:	5c5b      	ldrb	r3, [r3, r1]
 8021380:	9902      	ldr	r1, [sp, #8]
 8021382:	444f      	add	r7, r9
 8021384:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8021388:	4452      	add	r2, sl
 802138a:	0e18      	lsrs	r0, r3, #24
 802138c:	d03b      	beq.n	8021406 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802138e:	9905      	ldr	r1, [sp, #20]
 8021390:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 8021394:	fb01 f100 	mul.w	r1, r1, r0
 8021398:	1c48      	adds	r0, r1, #1
 802139a:	eb00 2021 	add.w	r0, r0, r1, asr #8
 802139e:	1200      	asrs	r0, r0, #8
 80213a0:	43c1      	mvns	r1, r0
 80213a2:	f3c3 2607 	ubfx	r6, r3, #8, #8
 80213a6:	b280      	uxth	r0, r0
 80213a8:	b2db      	uxtb	r3, r3
 80213aa:	f8be 5000 	ldrh.w	r5, [lr]
 80213ae:	fb16 f600 	smulbb	r6, r6, r0
 80213b2:	fb1c fc00 	smulbb	ip, ip, r0
 80213b6:	fb13 f300 	smulbb	r3, r3, r0
 80213ba:	122c      	asrs	r4, r5, #8
 80213bc:	10e8      	asrs	r0, r5, #3
 80213be:	00ed      	lsls	r5, r5, #3
 80213c0:	b2c9      	uxtb	r1, r1
 80213c2:	b2ed      	uxtb	r5, r5
 80213c4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80213c8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80213cc:	fb00 6001 	mla	r0, r0, r1, r6
 80213d0:	fb05 3301 	mla	r3, r5, r1, r3
 80213d4:	fb04 c401 	mla	r4, r4, r1, ip
 80213d8:	b280      	uxth	r0, r0
 80213da:	b2a4      	uxth	r4, r4
 80213dc:	b29b      	uxth	r3, r3
 80213de:	1c65      	adds	r5, r4, #1
 80213e0:	1c5e      	adds	r6, r3, #1
 80213e2:	1c41      	adds	r1, r0, #1
 80213e4:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 80213e8:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80213ec:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80213f0:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80213f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80213f8:	0949      	lsrs	r1, r1, #5
 80213fa:	431c      	orrs	r4, r3
 80213fc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021400:	430c      	orrs	r4, r1
 8021402:	f8ae 4000 	strh.w	r4, [lr]
 8021406:	f10e 0e02 	add.w	lr, lr, #2
 802140a:	45c6      	cmp	lr, r8
 802140c:	d1b0      	bne.n	8021370 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 802140e:	e6f7      	b.n	8021200 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021410:	2b00      	cmp	r3, #0
 8021412:	f77f aef5 	ble.w	8021200 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021416:	4675      	mov	r5, lr
 8021418:	1438      	asrs	r0, r7, #16
 802141a:	e730      	b.n	802127e <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>

0802141c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802141c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021424:	b085      	sub	sp, #20
 8021426:	e9cd 1202 	strd	r1, r2, [sp, #8]
 802142a:	e9dd 2113 	ldrd	r2, r1, [sp, #76]	@ 0x4c
 802142e:	e9dd 0b15 	ldrd	r0, fp, [sp, #84]	@ 0x54
 8021432:	6854      	ldr	r4, [r2, #4]
 8021434:	e9dd 9a11 	ldrd	r9, sl, [sp, #68]	@ 0x44
 8021438:	fb04 1000 	mla	r0, r4, r0, r1
 802143c:	6814      	ldr	r4, [r2, #0]
 802143e:	e9db 2500 	ldrd	r2, r5, [fp]
 8021442:	eb04 0e40 	add.w	lr, r4, r0, lsl #1
 8021446:	1d28      	adds	r0, r5, #4
 8021448:	9001      	str	r0, [sp, #4]
 802144a:	9200      	str	r2, [sp, #0]
 802144c:	e9dd 120f 	ldrd	r1, r2, [sp, #60]	@ 0x3c
 8021450:	9802      	ldr	r0, [sp, #8]
 8021452:	2800      	cmp	r0, #0
 8021454:	dc03      	bgt.n	802145e <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021456:	9803      	ldr	r0, [sp, #12]
 8021458:	2800      	cmp	r0, #0
 802145a:	f340 80b8 	ble.w	80215ce <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 802145e:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 8021462:	2b00      	cmp	r3, #0
 8021464:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021468:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802146c:	b228      	sxth	r0, r5
 802146e:	b237      	sxth	r7, r6
 8021470:	f340 80b0 	ble.w	80215d4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021474:	140c      	asrs	r4, r1, #16
 8021476:	d406      	bmi.n	8021486 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021478:	4284      	cmp	r4, r0
 802147a:	da04      	bge.n	8021486 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 802147c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8021480:	d401      	bmi.n	8021486 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021482:	45bc      	cmp	ip, r7
 8021484:	db3c      	blt.n	8021500 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xe4>
 8021486:	3b01      	subs	r3, #1
 8021488:	4449      	add	r1, r9
 802148a:	4452      	add	r2, sl
 802148c:	f10e 0e02 	add.w	lr, lr, #2
 8021490:	d1f0      	bne.n	8021474 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021492:	9b02      	ldr	r3, [sp, #8]
 8021494:	2b00      	cmp	r3, #0
 8021496:	f340 809a 	ble.w	80215ce <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 802149a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802149e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80214a2:	eec5 7a80 	vdiv.f32	s15, s11, s0
 80214a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80214aa:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80214ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80214b2:	ee76 6a62 	vsub.f32	s13, s12, s5
 80214b6:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80214ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80214be:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80214c2:	ee16 2a90 	vmov	r2, s13
 80214c6:	3b01      	subs	r3, #1
 80214c8:	9302      	str	r3, [sp, #8]
 80214ca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80214cc:	9803      	ldr	r0, [sp, #12]
 80214ce:	fb92 f9f3 	sdiv	r9, r2, r3
 80214d2:	ee17 2a10 	vmov	r2, s14
 80214d6:	eeb0 7a43 	vmov.f32	s14, s6
 80214da:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80214de:	fb92 faf3 	sdiv	sl, r2, r3
 80214e2:	ee17 2a10 	vmov	r2, s14
 80214e6:	eeb0 7a62 	vmov.f32	s14, s5
 80214ea:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80214ee:	eeb0 3a67 	vmov.f32	s6, s15
 80214f2:	ee17 1a10 	vmov	r1, s14
 80214f6:	eef0 2a46 	vmov.f32	s5, s12
 80214fa:	bf08      	it	eq
 80214fc:	4603      	moveq	r3, r0
 80214fe:	e7a7      	b.n	8021450 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021500:	f103 38ff 	add.w	r8, r3, #4294967295
 8021504:	fb08 1c09 	mla	ip, r8, r9, r1
 8021508:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 802150c:	d56c      	bpl.n	80215e8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1cc>
 802150e:	4677      	mov	r7, lr
 8021510:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8021514:	e002      	b.n	802151c <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8021516:	140c      	asrs	r4, r1, #16
 8021518:	e9db 5602 	ldrd	r5, r6, [fp, #8]
 802151c:	2c00      	cmp	r4, #0
 802151e:	db4d      	blt.n	80215bc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8021520:	42ac      	cmp	r4, r5
 8021522:	da4b      	bge.n	80215bc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8021524:	1413      	asrs	r3, r2, #16
 8021526:	d449      	bmi.n	80215bc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8021528:	42b3      	cmp	r3, r6
 802152a:	b22d      	sxth	r5, r5
 802152c:	da46      	bge.n	80215bc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 802152e:	9800      	ldr	r0, [sp, #0]
 8021530:	fb03 0505 	mla	r5, r3, r5, r0
 8021534:	9801      	ldr	r0, [sp, #4]
 8021536:	5d2b      	ldrb	r3, [r5, r4]
 8021538:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 802153c:	0e18      	lsrs	r0, r3, #24
 802153e:	28ff      	cmp	r0, #255	@ 0xff
 8021540:	f000 80c0 	beq.w	80216c4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021544:	b2c4      	uxtb	r4, r0
 8021546:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 802154a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802154e:	b2a5      	uxth	r5, r4
 8021550:	b2db      	uxtb	r3, r3
 8021552:	b398      	cbz	r0, 80215bc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 8021554:	43e4      	mvns	r4, r4
 8021556:	f8b7 8000 	ldrh.w	r8, [r7]
 802155a:	fb16 f605 	smulbb	r6, r6, r5
 802155e:	fb1c fc05 	smulbb	ip, ip, r5
 8021562:	fb13 f505 	smulbb	r5, r3, r5
 8021566:	ea4f 2028 	mov.w	r0, r8, asr #8
 802156a:	b2e3      	uxtb	r3, r4
 802156c:	ea4f 04e8 	mov.w	r4, r8, asr #3
 8021570:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8021574:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021578:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802157c:	fa5f f888 	uxtb.w	r8, r8
 8021580:	fb04 6403 	mla	r4, r4, r3, r6
 8021584:	fb00 cc03 	mla	ip, r0, r3, ip
 8021588:	fb08 5303 	mla	r3, r8, r3, r5
 802158c:	fa1f fc8c 	uxth.w	ip, ip
 8021590:	b298      	uxth	r0, r3
 8021592:	b2a5      	uxth	r5, r4
 8021594:	f10c 0301 	add.w	r3, ip, #1
 8021598:	1c44      	adds	r4, r0, #1
 802159a:	1c6e      	adds	r6, r5, #1
 802159c:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 80215a0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80215a4:	eb06 2015 	add.w	r0, r6, r5, lsr #8
 80215a8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80215ac:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80215b0:	0940      	lsrs	r0, r0, #5
 80215b2:	4323      	orrs	r3, r4
 80215b4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80215b8:	4303      	orrs	r3, r0
 80215ba:	803b      	strh	r3, [r7, #0]
 80215bc:	3702      	adds	r7, #2
 80215be:	4577      	cmp	r7, lr
 80215c0:	4449      	add	r1, r9
 80215c2:	4452      	add	r2, sl
 80215c4:	d1a7      	bne.n	8021516 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80215c6:	9b02      	ldr	r3, [sp, #8]
 80215c8:	2b00      	cmp	r3, #0
 80215ca:	f73f af66 	bgt.w	802149a <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80215ce:	b005      	add	sp, #20
 80215d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80215d4:	f43f af5d 	beq.w	8021492 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80215d8:	f103 38ff 	add.w	r8, r3, #4294967295
 80215dc:	fb08 1c09 	mla	ip, r8, r9, r1
 80215e0:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 80215e4:	f53f af55 	bmi.w	8021492 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80215e8:	4560      	cmp	r0, ip
 80215ea:	dd65      	ble.n	80216b8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80215ec:	fb08 280a 	mla	r8, r8, sl, r2
 80215f0:	ea5f 4828 	movs.w	r8, r8, asr #16
 80215f4:	d460      	bmi.n	80216b8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80215f6:	45b8      	cmp	r8, r7
 80215f8:	da5e      	bge.n	80216b8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80215fa:	2b00      	cmp	r3, #0
 80215fc:	f77f af49 	ble.w	8021492 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021600:	eb0e 0843 	add.w	r8, lr, r3, lsl #1
 8021604:	e03f      	b.n	8021686 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8021606:	b2f0      	uxtb	r0, r6
 8021608:	f3c3 4c07 	ubfx	ip, r3, #16, #8
 802160c:	f3c3 2707 	ubfx	r7, r3, #8, #8
 8021610:	b284      	uxth	r4, r0
 8021612:	b2db      	uxtb	r3, r3
 8021614:	b376      	cbz	r6, 8021674 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8021616:	43c0      	mvns	r0, r0
 8021618:	f8be 6000 	ldrh.w	r6, [lr]
 802161c:	fb17 f704 	smulbb	r7, r7, r4
 8021620:	fb1c fc04 	smulbb	ip, ip, r4
 8021624:	fb13 f304 	smulbb	r3, r3, r4
 8021628:	1235      	asrs	r5, r6, #8
 802162a:	10f4      	asrs	r4, r6, #3
 802162c:	00f6      	lsls	r6, r6, #3
 802162e:	b2c0      	uxtb	r0, r0
 8021630:	b2f6      	uxtb	r6, r6
 8021632:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021636:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802163a:	fb04 7400 	mla	r4, r4, r0, r7
 802163e:	fb06 3300 	mla	r3, r6, r0, r3
 8021642:	fb05 c500 	mla	r5, r5, r0, ip
 8021646:	b2a4      	uxth	r4, r4
 8021648:	b2ad      	uxth	r5, r5
 802164a:	b29b      	uxth	r3, r3
 802164c:	1c6e      	adds	r6, r5, #1
 802164e:	1c5f      	adds	r7, r3, #1
 8021650:	1c60      	adds	r0, r4, #1
 8021652:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8021656:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 802165a:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 802165e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021662:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021666:	0940      	lsrs	r0, r0, #5
 8021668:	432b      	orrs	r3, r5
 802166a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802166e:	4303      	orrs	r3, r0
 8021670:	f8ae 3000 	strh.w	r3, [lr]
 8021674:	f10e 0e02 	add.w	lr, lr, #2
 8021678:	45c6      	cmp	lr, r8
 802167a:	4449      	add	r1, r9
 802167c:	4452      	add	r2, sl
 802167e:	f43f af08 	beq.w	8021492 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021682:	f9bb 0008 	ldrsh.w	r0, [fp, #8]
 8021686:	9c00      	ldr	r4, [sp, #0]
 8021688:	1413      	asrs	r3, r2, #16
 802168a:	fb00 4303 	mla	r3, r0, r3, r4
 802168e:	1408      	asrs	r0, r1, #16
 8021690:	5c1b      	ldrb	r3, [r3, r0]
 8021692:	9801      	ldr	r0, [sp, #4]
 8021694:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8021698:	0e1e      	lsrs	r6, r3, #24
 802169a:	2eff      	cmp	r6, #255	@ 0xff
 802169c:	d1b3      	bne.n	8021606 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802169e:	0958      	lsrs	r0, r3, #5
 80216a0:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 80216a4:	480d      	ldr	r0, [pc, #52]	@ (80216dc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 80216a6:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 80216aa:	4320      	orrs	r0, r4
 80216ac:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80216b0:	4303      	orrs	r3, r0
 80216b2:	f8ae 3000 	strh.w	r3, [lr]
 80216b6:	e7dd      	b.n	8021674 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80216b8:	2b00      	cmp	r3, #0
 80216ba:	f77f aeea 	ble.w	8021492 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80216be:	4677      	mov	r7, lr
 80216c0:	140c      	asrs	r4, r1, #16
 80216c2:	e725      	b.n	8021510 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf4>
 80216c4:	0958      	lsrs	r0, r3, #5
 80216c6:	f400 64fc 	and.w	r4, r0, #2016	@ 0x7e0
 80216ca:	4804      	ldr	r0, [pc, #16]	@ (80216dc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 80216cc:	ea00 2013 	and.w	r0, r0, r3, lsr #8
 80216d0:	4320      	orrs	r0, r4
 80216d2:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80216d6:	4303      	orrs	r3, r0
 80216d8:	803b      	strh	r3, [r7, #0]
 80216da:	e76f      	b.n	80215bc <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a0>
 80216dc:	fffff800 	.word	0xfffff800

080216e0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80216e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80216e4:	b089      	sub	sp, #36	@ 0x24
 80216e6:	f89d 506c 	ldrb.w	r5, [sp, #108]	@ 0x6c
 80216ea:	9104      	str	r1, [sp, #16]
 80216ec:	ea6f 0c05 	mvn.w	ip, r5
 80216f0:	e9dd 4117 	ldrd	r4, r1, [sp, #92]	@ 0x5c
 80216f4:	e9dd 6715 	ldrd	r6, r7, [sp, #84]	@ 0x54
 80216f8:	6860      	ldr	r0, [r4, #4]
 80216fa:	9205      	str	r2, [sp, #20]
 80216fc:	e9dd 2b19 	ldrd	r2, fp, [sp, #100]	@ 0x64
 8021700:	fb00 1102 	mla	r1, r0, r2, r1
 8021704:	6824      	ldr	r4, [r4, #0]
 8021706:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802170a:	4421      	add	r1, r4
 802170c:	f8db 4004 	ldr.w	r4, [fp, #4]
 8021710:	f8db 2000 	ldr.w	r2, [fp]
 8021714:	3404      	adds	r4, #4
 8021716:	fa5f fc8c 	uxtb.w	ip, ip
 802171a:	fa1f f985 	uxth.w	r9, r5
 802171e:	9407      	str	r4, [sp, #28]
 8021720:	9202      	str	r2, [sp, #8]
 8021722:	e9dd 2013 	ldrd	r2, r0, [sp, #76]	@ 0x4c
 8021726:	9c04      	ldr	r4, [sp, #16]
 8021728:	2c00      	cmp	r4, #0
 802172a:	dc03      	bgt.n	8021734 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802172c:	9c05      	ldr	r4, [sp, #20]
 802172e:	2c00      	cmp	r4, #0
 8021730:	f340 80b1 	ble.w	8021896 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021734:	e9db e802 	ldrd	lr, r8, [fp, #8]
 8021738:	2b00      	cmp	r3, #0
 802173a:	fa0f f588 	sxth.w	r5, r8
 802173e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021742:	f500 4000 	add.w	r0, r0, #32768	@ 0x8000
 8021746:	fa0f f48e 	sxth.w	r4, lr
 802174a:	9503      	str	r5, [sp, #12]
 802174c:	f340 80a6 	ble.w	802189c <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021750:	46f2      	mov	sl, lr
 8021752:	9401      	str	r4, [sp, #4]
 8021754:	1415      	asrs	r5, r2, #16
 8021756:	d408      	bmi.n	802176a <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021758:	9c01      	ldr	r4, [sp, #4]
 802175a:	42a5      	cmp	r5, r4
 802175c:	da05      	bge.n	802176a <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802175e:	ea5f 4e20 	movs.w	lr, r0, asr #16
 8021762:	d402      	bmi.n	802176a <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021764:	9c03      	ldr	r4, [sp, #12]
 8021766:	45a6      	cmp	lr, r4
 8021768:	db3e      	blt.n	80217e8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x108>
 802176a:	3b01      	subs	r3, #1
 802176c:	4432      	add	r2, r6
 802176e:	4438      	add	r0, r7
 8021770:	f101 0103 	add.w	r1, r1, #3
 8021774:	d1ee      	bne.n	8021754 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021776:	9b04      	ldr	r3, [sp, #16]
 8021778:	2b00      	cmp	r3, #0
 802177a:	f340 808c 	ble.w	8021896 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 802177e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021782:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021786:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802178a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802178e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021792:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021796:	ee61 7a27 	vmul.f32	s15, s2, s15
 802179a:	ee76 6a62 	vsub.f32	s13, s12, s5
 802179e:	ee37 7ac3 	vsub.f32	s14, s15, s6
 80217a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80217a6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80217aa:	ee16 2a90 	vmov	r2, s13
 80217ae:	3b01      	subs	r3, #1
 80217b0:	9304      	str	r3, [sp, #16]
 80217b2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80217b4:	9c05      	ldr	r4, [sp, #20]
 80217b6:	fb92 f6f3 	sdiv	r6, r2, r3
 80217ba:	ee17 2a10 	vmov	r2, s14
 80217be:	eeb0 7a43 	vmov.f32	s14, s6
 80217c2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80217c6:	ee17 0a10 	vmov	r0, s14
 80217ca:	eeb0 7a62 	vmov.f32	s14, s5
 80217ce:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80217d2:	fb92 f7f3 	sdiv	r7, r2, r3
 80217d6:	eeb0 3a67 	vmov.f32	s6, s15
 80217da:	ee17 2a10 	vmov	r2, s14
 80217de:	eef0 2a46 	vmov.f32	s5, s12
 80217e2:	bf08      	it	eq
 80217e4:	4623      	moveq	r3, r4
 80217e6:	e79e      	b.n	8021726 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80217e8:	9506      	str	r5, [sp, #24]
 80217ea:	1e5d      	subs	r5, r3, #1
 80217ec:	46d6      	mov	lr, sl
 80217ee:	fb05 2a06 	mla	sl, r5, r6, r2
 80217f2:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 80217f6:	9c01      	ldr	r4, [sp, #4]
 80217f8:	9501      	str	r5, [sp, #4]
 80217fa:	d559      	bpl.n	80218b0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 80217fc:	460c      	mov	r4, r1
 80217fe:	9d06      	ldr	r5, [sp, #24]
 8021800:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021804:	4419      	add	r1, r3
 8021806:	4673      	mov	r3, lr
 8021808:	46b6      	mov	lr, r6
 802180a:	4646      	mov	r6, r8
 802180c:	e002      	b.n	8021814 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802180e:	1415      	asrs	r5, r2, #16
 8021810:	e9db 3602 	ldrd	r3, r6, [fp, #8]
 8021814:	2d00      	cmp	r5, #0
 8021816:	4472      	add	r2, lr
 8021818:	db35      	blt.n	8021886 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802181a:	429d      	cmp	r5, r3
 802181c:	da33      	bge.n	8021886 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802181e:	ea5f 4820 	movs.w	r8, r0, asr #16
 8021822:	d430      	bmi.n	8021886 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8021824:	45b0      	cmp	r8, r6
 8021826:	b21b      	sxth	r3, r3
 8021828:	da2d      	bge.n	8021886 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802182a:	9e02      	ldr	r6, [sp, #8]
 802182c:	fb08 6303 	mla	r3, r8, r3, r6
 8021830:	7826      	ldrb	r6, [r4, #0]
 8021832:	5d5b      	ldrb	r3, [r3, r5]
 8021834:	fb16 f80c 	smulbb	r8, r6, ip
 8021838:	9d07      	ldr	r5, [sp, #28]
 802183a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802183e:	5cee      	ldrb	r6, [r5, r3]
 8021840:	442b      	add	r3, r5
 8021842:	fb06 8609 	mla	r6, r6, r9, r8
 8021846:	b2b6      	uxth	r6, r6
 8021848:	7865      	ldrb	r5, [r4, #1]
 802184a:	f106 0801 	add.w	r8, r6, #1
 802184e:	eb08 2616 	add.w	r6, r8, r6, lsr #8
 8021852:	1236      	asrs	r6, r6, #8
 8021854:	fb15 f80c 	smulbb	r8, r5, ip
 8021858:	7026      	strb	r6, [r4, #0]
 802185a:	785d      	ldrb	r5, [r3, #1]
 802185c:	78a6      	ldrb	r6, [r4, #2]
 802185e:	fb05 8509 	mla	r5, r5, r9, r8
 8021862:	b2ad      	uxth	r5, r5
 8021864:	f105 0801 	add.w	r8, r5, #1
 8021868:	eb08 2515 	add.w	r5, r8, r5, lsr #8
 802186c:	122d      	asrs	r5, r5, #8
 802186e:	fb16 f60c 	smulbb	r6, r6, ip
 8021872:	7065      	strb	r5, [r4, #1]
 8021874:	789b      	ldrb	r3, [r3, #2]
 8021876:	fb03 6309 	mla	r3, r3, r9, r6
 802187a:	b29b      	uxth	r3, r3
 802187c:	1c5d      	adds	r5, r3, #1
 802187e:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8021882:	121b      	asrs	r3, r3, #8
 8021884:	70a3      	strb	r3, [r4, #2]
 8021886:	3403      	adds	r4, #3
 8021888:	428c      	cmp	r4, r1
 802188a:	4438      	add	r0, r7
 802188c:	d1bf      	bne.n	802180e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802188e:	9b04      	ldr	r3, [sp, #16]
 8021890:	2b00      	cmp	r3, #0
 8021892:	f73f af74 	bgt.w	802177e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8021896:	b009      	add	sp, #36	@ 0x24
 8021898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802189c:	f43f af6b 	beq.w	8021776 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80218a0:	1e5d      	subs	r5, r3, #1
 80218a2:	fb05 2a06 	mla	sl, r5, r6, r2
 80218a6:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 80218aa:	9501      	str	r5, [sp, #4]
 80218ac:	f53f af63 	bmi.w	8021776 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80218b0:	4554      	cmp	r4, sl
 80218b2:	dd54      	ble.n	802195e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80218b4:	9d01      	ldr	r5, [sp, #4]
 80218b6:	fb05 0507 	mla	r5, r5, r7, r0
 80218ba:	ea5f 4a25 	movs.w	sl, r5, asr #16
 80218be:	d44e      	bmi.n	802195e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80218c0:	9d03      	ldr	r5, [sp, #12]
 80218c2:	45aa      	cmp	sl, r5
 80218c4:	da4b      	bge.n	802195e <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80218c6:	2b00      	cmp	r3, #0
 80218c8:	f77f af55 	ble.w	8021776 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80218cc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80218d0:	eb01 0e03 	add.w	lr, r1, r3
 80218d4:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80218d8:	3103      	adds	r1, #3
 80218da:	e002      	b.n	80218e2 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80218dc:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 80218e0:	3103      	adds	r1, #3
 80218e2:	9d02      	ldr	r5, [sp, #8]
 80218e4:	1403      	asrs	r3, r0, #16
 80218e6:	fb04 5303 	mla	r3, r4, r3, r5
 80218ea:	1415      	asrs	r5, r2, #16
 80218ec:	f811 4c03 	ldrb.w	r4, [r1, #-3]
 80218f0:	5d5b      	ldrb	r3, [r3, r5]
 80218f2:	fb14 f40c 	smulbb	r4, r4, ip
 80218f6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80218fa:	f818 5003 	ldrb.w	r5, [r8, r3]
 80218fe:	4443      	add	r3, r8
 8021900:	fb05 4509 	mla	r5, r5, r9, r4
 8021904:	b2ad      	uxth	r5, r5
 8021906:	f105 0a01 	add.w	sl, r5, #1
 802190a:	f811 4c02 	ldrb.w	r4, [r1, #-2]
 802190e:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021912:	122d      	asrs	r5, r5, #8
 8021914:	fb14 f40c 	smulbb	r4, r4, ip
 8021918:	f801 5c03 	strb.w	r5, [r1, #-3]
 802191c:	785d      	ldrb	r5, [r3, #1]
 802191e:	f811 ac01 	ldrb.w	sl, [r1, #-1]
 8021922:	fb05 4409 	mla	r4, r5, r9, r4
 8021926:	b2a4      	uxth	r4, r4
 8021928:	1c65      	adds	r5, r4, #1
 802192a:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 802192e:	1224      	asrs	r4, r4, #8
 8021930:	fb1a fa0c 	smulbb	sl, sl, ip
 8021934:	f801 4c02 	strb.w	r4, [r1, #-2]
 8021938:	789b      	ldrb	r3, [r3, #2]
 802193a:	458e      	cmp	lr, r1
 802193c:	fb03 aa09 	mla	sl, r3, r9, sl
 8021940:	fa1f fa8a 	uxth.w	sl, sl
 8021944:	f10a 0301 	add.w	r3, sl, #1
 8021948:	eb03 2a1a 	add.w	sl, r3, sl, lsr #8
 802194c:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8021950:	4438      	add	r0, r7
 8021952:	4432      	add	r2, r6
 8021954:	f801 ac01 	strb.w	sl, [r1, #-1]
 8021958:	d1c0      	bne.n	80218dc <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 802195a:	4671      	mov	r1, lr
 802195c:	e70b      	b.n	8021776 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802195e:	2b00      	cmp	r3, #0
 8021960:	f77f af09 	ble.w	8021776 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021964:	1415      	asrs	r5, r2, #16
 8021966:	460c      	mov	r4, r1
 8021968:	9506      	str	r5, [sp, #24]
 802196a:	e749      	b.n	8021800 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>

0802196c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802196c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021970:	4689      	mov	r9, r1
 8021972:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021976:	46c8      	mov	r8, r9
 8021978:	b087      	sub	sp, #28
 802197a:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 802197e:	684c      	ldr	r4, [r1, #4]
 8021980:	9203      	str	r2, [sp, #12]
 8021982:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 8021986:	fb04 0202 	mla	r2, r4, r2, r0
 802198a:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 802198e:	680d      	ldr	r5, [r1, #0]
 8021990:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8021994:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8021998:	f8dc 2000 	ldr.w	r2, [ip]
 802199c:	4428      	add	r0, r5
 802199e:	f104 0b04 	add.w	fp, r4, #4
 80219a2:	9205      	str	r2, [sp, #20]
 80219a4:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 80219a8:	f1b8 0f00 	cmp.w	r8, #0
 80219ac:	dc03      	bgt.n	80219b6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80219ae:	9c03      	ldr	r4, [sp, #12]
 80219b0:	2c00      	cmp	r4, #0
 80219b2:	f340 808d 	ble.w	8021ad0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80219b6:	e9dc ea02 	ldrd	lr, sl, [ip, #8]
 80219ba:	2b00      	cmp	r3, #0
 80219bc:	fa0f f58a 	sxth.w	r5, sl
 80219c0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80219c4:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 80219c8:	fa0f f48e 	sxth.w	r4, lr
 80219cc:	9502      	str	r5, [sp, #8]
 80219ce:	f340 8082 	ble.w	8021ad6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80219d2:	46f1      	mov	r9, lr
 80219d4:	9401      	str	r4, [sp, #4]
 80219d6:	1415      	asrs	r5, r2, #16
 80219d8:	d408      	bmi.n	80219ec <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80219da:	9c01      	ldr	r4, [sp, #4]
 80219dc:	42a5      	cmp	r5, r4
 80219de:	da05      	bge.n	80219ec <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80219e0:	ea5f 4e21 	movs.w	lr, r1, asr #16
 80219e4:	d402      	bmi.n	80219ec <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80219e6:	9c02      	ldr	r4, [sp, #8]
 80219e8:	45a6      	cmp	lr, r4
 80219ea:	db3b      	blt.n	8021a64 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 80219ec:	3b01      	subs	r3, #1
 80219ee:	4432      	add	r2, r6
 80219f0:	4439      	add	r1, r7
 80219f2:	f100 0003 	add.w	r0, r0, #3
 80219f6:	d1ee      	bne.n	80219d6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80219f8:	f1b8 0f00 	cmp.w	r8, #0
 80219fc:	dd68      	ble.n	8021ad0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80219fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021a02:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021a06:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021a0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021a0e:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021a12:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021a16:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021a1a:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021a1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021a22:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021a26:	ee16 2a90 	vmov	r2, s13
 8021a2a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021a2c:	9c03      	ldr	r4, [sp, #12]
 8021a2e:	fb92 f6f3 	sdiv	r6, r2, r3
 8021a32:	ee17 2a10 	vmov	r2, s14
 8021a36:	eeb0 7a43 	vmov.f32	s14, s6
 8021a3a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021a3e:	ee17 1a10 	vmov	r1, s14
 8021a42:	eeb0 7a62 	vmov.f32	s14, s5
 8021a46:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021a4a:	f1b8 0801 	subs.w	r8, r8, #1
 8021a4e:	fb92 f7f3 	sdiv	r7, r2, r3
 8021a52:	eeb0 3a67 	vmov.f32	s6, s15
 8021a56:	ee17 2a10 	vmov	r2, s14
 8021a5a:	eef0 2a46 	vmov.f32	s5, s12
 8021a5e:	bf08      	it	eq
 8021a60:	4623      	moveq	r3, r4
 8021a62:	e7a1      	b.n	80219a8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021a64:	9c01      	ldr	r4, [sp, #4]
 8021a66:	9501      	str	r5, [sp, #4]
 8021a68:	1e5d      	subs	r5, r3, #1
 8021a6a:	46ce      	mov	lr, r9
 8021a6c:	fb06 2905 	mla	r9, r6, r5, r2
 8021a70:	ea5f 4929 	movs.w	r9, r9, asr #16
 8021a74:	9504      	str	r5, [sp, #16]
 8021a76:	d536      	bpl.n	8021ae6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 8021a78:	4604      	mov	r4, r0
 8021a7a:	9d01      	ldr	r5, [sp, #4]
 8021a7c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021a80:	4418      	add	r0, r3
 8021a82:	4673      	mov	r3, lr
 8021a84:	46b6      	mov	lr, r6
 8021a86:	4656      	mov	r6, sl
 8021a88:	e002      	b.n	8021a90 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8021a8a:	1415      	asrs	r5, r2, #16
 8021a8c:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021a90:	2d00      	cmp	r5, #0
 8021a92:	4472      	add	r2, lr
 8021a94:	db15      	blt.n	8021ac2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021a96:	429d      	cmp	r5, r3
 8021a98:	da13      	bge.n	8021ac2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021a9a:	ea5f 4921 	movs.w	r9, r1, asr #16
 8021a9e:	d410      	bmi.n	8021ac2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021aa0:	45b1      	cmp	r9, r6
 8021aa2:	da0e      	bge.n	8021ac2 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8021aa4:	9e05      	ldr	r6, [sp, #20]
 8021aa6:	b21b      	sxth	r3, r3
 8021aa8:	fb09 6303 	mla	r3, r9, r3, r6
 8021aac:	5d5b      	ldrb	r3, [r3, r5]
 8021aae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021ab2:	f81b 5003 	ldrb.w	r5, [fp, r3]
 8021ab6:	445b      	add	r3, fp
 8021ab8:	7025      	strb	r5, [r4, #0]
 8021aba:	785d      	ldrb	r5, [r3, #1]
 8021abc:	7065      	strb	r5, [r4, #1]
 8021abe:	789b      	ldrb	r3, [r3, #2]
 8021ac0:	70a3      	strb	r3, [r4, #2]
 8021ac2:	3403      	adds	r4, #3
 8021ac4:	4284      	cmp	r4, r0
 8021ac6:	4439      	add	r1, r7
 8021ac8:	d1df      	bne.n	8021a8a <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8021aca:	f1b8 0f00 	cmp.w	r8, #0
 8021ace:	dc96      	bgt.n	80219fe <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021ad0:	b007      	add	sp, #28
 8021ad2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ad6:	d08f      	beq.n	80219f8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021ad8:	1e5d      	subs	r5, r3, #1
 8021ada:	fb06 2905 	mla	r9, r6, r5, r2
 8021ade:	ea5f 4929 	movs.w	r9, r9, asr #16
 8021ae2:	9504      	str	r5, [sp, #16]
 8021ae4:	d488      	bmi.n	80219f8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021ae6:	45a1      	cmp	r9, r4
 8021ae8:	da2d      	bge.n	8021b46 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021aea:	9d04      	ldr	r5, [sp, #16]
 8021aec:	fb07 1505 	mla	r5, r7, r5, r1
 8021af0:	ea5f 4925 	movs.w	r9, r5, asr #16
 8021af4:	d427      	bmi.n	8021b46 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021af6:	9d02      	ldr	r5, [sp, #8]
 8021af8:	454d      	cmp	r5, r9
 8021afa:	dd24      	ble.n	8021b46 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8021afc:	2b00      	cmp	r3, #0
 8021afe:	f77f af7b 	ble.w	80219f8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021b02:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021b06:	18c5      	adds	r5, r0, r3
 8021b08:	f8dd e014 	ldr.w	lr, [sp, #20]
 8021b0c:	3003      	adds	r0, #3
 8021b0e:	e002      	b.n	8021b16 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8021b10:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 8021b14:	3003      	adds	r0, #3
 8021b16:	140b      	asrs	r3, r1, #16
 8021b18:	fb04 e303 	mla	r3, r4, r3, lr
 8021b1c:	1414      	asrs	r4, r2, #16
 8021b1e:	5d1b      	ldrb	r3, [r3, r4]
 8021b20:	4285      	cmp	r5, r0
 8021b22:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021b26:	f81b 4003 	ldrb.w	r4, [fp, r3]
 8021b2a:	445b      	add	r3, fp
 8021b2c:	f800 4c03 	strb.w	r4, [r0, #-3]
 8021b30:	785c      	ldrb	r4, [r3, #1]
 8021b32:	4439      	add	r1, r7
 8021b34:	f800 4c02 	strb.w	r4, [r0, #-2]
 8021b38:	789b      	ldrb	r3, [r3, #2]
 8021b3a:	4432      	add	r2, r6
 8021b3c:	f800 3c01 	strb.w	r3, [r0, #-1]
 8021b40:	d1e6      	bne.n	8021b10 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021b42:	4628      	mov	r0, r5
 8021b44:	e758      	b.n	80219f8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021b46:	2b00      	cmp	r3, #0
 8021b48:	f77f af56 	ble.w	80219f8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021b4c:	1415      	asrs	r5, r2, #16
 8021b4e:	4604      	mov	r4, r0
 8021b50:	9501      	str	r5, [sp, #4]
 8021b52:	e793      	b.n	8021a7c <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>

08021b54 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b58:	b087      	sub	sp, #28
 8021b5a:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8021b5e:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 8021b62:	e9dd 2c17 	ldrd	r2, ip, [sp, #92]	@ 0x5c
 8021b66:	684c      	ldr	r4, [r1, #4]
 8021b68:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021b6c:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 8021b70:	fb04 0202 	mla	r2, r4, r2, r0
 8021b74:	eb02 0542 	add.w	r5, r2, r2, lsl #1
 8021b78:	f8dc 2000 	ldr.w	r2, [ip]
 8021b7c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8021b80:	9201      	str	r2, [sp, #4]
 8021b82:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8021b86:	6808      	ldr	r0, [r1, #0]
 8021b88:	9204      	str	r2, [sp, #16]
 8021b8a:	1d22      	adds	r2, r4, #4
 8021b8c:	e9dd e111 	ldrd	lr, r1, [sp, #68]	@ 0x44
 8021b90:	9205      	str	r2, [sp, #20]
 8021b92:	4672      	mov	r2, lr
 8021b94:	4428      	add	r0, r5
 8021b96:	9c02      	ldr	r4, [sp, #8]
 8021b98:	2c00      	cmp	r4, #0
 8021b9a:	dc03      	bgt.n	8021ba4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8021b9c:	9c03      	ldr	r4, [sp, #12]
 8021b9e:	2c00      	cmp	r4, #0
 8021ba0:	f340 80ba 	ble.w	8021d18 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021ba4:	e9dc e802 	ldrd	lr, r8, [ip, #8]
 8021ba8:	2b00      	cmp	r3, #0
 8021baa:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021bae:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021bb2:	fa0f f48e 	sxth.w	r4, lr
 8021bb6:	fa0f f988 	sxth.w	r9, r8
 8021bba:	f340 80b0 	ble.w	8021d1e <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8021bbe:	1415      	asrs	r5, r2, #16
 8021bc0:	d406      	bmi.n	8021bd0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021bc2:	42a5      	cmp	r5, r4
 8021bc4:	da04      	bge.n	8021bd0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021bc6:	ea5f 4a21 	movs.w	sl, r1, asr #16
 8021bca:	d401      	bmi.n	8021bd0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021bcc:	45ca      	cmp	sl, r9
 8021bce:	db3c      	blt.n	8021c4a <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf6>
 8021bd0:	3b01      	subs	r3, #1
 8021bd2:	4432      	add	r2, r6
 8021bd4:	4439      	add	r1, r7
 8021bd6:	f100 0003 	add.w	r0, r0, #3
 8021bda:	d1f0      	bne.n	8021bbe <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8021bdc:	9b02      	ldr	r3, [sp, #8]
 8021bde:	2b00      	cmp	r3, #0
 8021be0:	f340 809a 	ble.w	8021d18 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021be4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021be8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021bec:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021bf0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021bf4:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021bf8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021bfc:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021c00:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021c04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021c08:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021c0c:	ee16 2a90 	vmov	r2, s13
 8021c10:	3b01      	subs	r3, #1
 8021c12:	9302      	str	r3, [sp, #8]
 8021c14:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021c16:	9c03      	ldr	r4, [sp, #12]
 8021c18:	fb92 f6f3 	sdiv	r6, r2, r3
 8021c1c:	ee17 2a10 	vmov	r2, s14
 8021c20:	eeb0 7a43 	vmov.f32	s14, s6
 8021c24:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021c28:	ee17 1a10 	vmov	r1, s14
 8021c2c:	eeb0 7a62 	vmov.f32	s14, s5
 8021c30:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021c34:	fb92 f7f3 	sdiv	r7, r2, r3
 8021c38:	eeb0 3a67 	vmov.f32	s6, s15
 8021c3c:	ee17 2a10 	vmov	r2, s14
 8021c40:	eef0 2a46 	vmov.f32	s5, s12
 8021c44:	bf08      	it	eq
 8021c46:	4623      	moveq	r3, r4
 8021c48:	e7a5      	b.n	8021b96 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021c4a:	f103 3bff 	add.w	fp, r3, #4294967295
 8021c4e:	fb0b 2a06 	mla	sl, fp, r6, r2
 8021c52:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021c56:	d56c      	bpl.n	8021d32 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8021c58:	4604      	mov	r4, r0
 8021c5a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021c5e:	4418      	add	r0, r3
 8021c60:	4673      	mov	r3, lr
 8021c62:	46b6      	mov	lr, r6
 8021c64:	4646      	mov	r6, r8
 8021c66:	e002      	b.n	8021c6e <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021c68:	1415      	asrs	r5, r2, #16
 8021c6a:	e9dc 3602 	ldrd	r3, r6, [ip, #8]
 8021c6e:	2d00      	cmp	r5, #0
 8021c70:	4472      	add	r2, lr
 8021c72:	db49      	blt.n	8021d08 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c74:	429d      	cmp	r5, r3
 8021c76:	da47      	bge.n	8021d08 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c78:	ea5f 4821 	movs.w	r8, r1, asr #16
 8021c7c:	d444      	bmi.n	8021d08 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c7e:	45b0      	cmp	r8, r6
 8021c80:	b21b      	sxth	r3, r3
 8021c82:	da41      	bge.n	8021d08 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c84:	9e01      	ldr	r6, [sp, #4]
 8021c86:	fb08 6303 	mla	r3, r8, r3, r6
 8021c8a:	5d5b      	ldrb	r3, [r3, r5]
 8021c8c:	9d05      	ldr	r5, [sp, #20]
 8021c8e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021c92:	0e1d      	lsrs	r5, r3, #24
 8021c94:	d038      	beq.n	8021d08 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021c96:	9e04      	ldr	r6, [sp, #16]
 8021c98:	fa5f f983 	uxtb.w	r9, r3
 8021c9c:	fb06 f605 	mul.w	r6, r6, r5
 8021ca0:	1c75      	adds	r5, r6, #1
 8021ca2:	eb05 2526 	add.w	r5, r5, r6, asr #8
 8021ca6:	122d      	asrs	r5, r5, #8
 8021ca8:	43ee      	mvns	r6, r5
 8021caa:	b2ad      	uxth	r5, r5
 8021cac:	fb19 f905 	smulbb	r9, r9, r5
 8021cb0:	f3c3 2807 	ubfx	r8, r3, #8, #8
 8021cb4:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021cb8:	f894 a000 	ldrb.w	sl, [r4]
 8021cbc:	fb18 f805 	smulbb	r8, r8, r5
 8021cc0:	fb13 f305 	smulbb	r3, r3, r5
 8021cc4:	b2f5      	uxtb	r5, r6
 8021cc6:	fb0a 9605 	mla	r6, sl, r5, r9
 8021cca:	f894 b001 	ldrb.w	fp, [r4, #1]
 8021cce:	f894 9002 	ldrb.w	r9, [r4, #2]
 8021cd2:	fb0b 8805 	mla	r8, fp, r5, r8
 8021cd6:	fb09 3305 	mla	r3, r9, r5, r3
 8021cda:	fa1f fa86 	uxth.w	sl, r6
 8021cde:	fa1f f888 	uxth.w	r8, r8
 8021ce2:	b29b      	uxth	r3, r3
 8021ce4:	f10a 0601 	add.w	r6, sl, #1
 8021ce8:	f108 0501 	add.w	r5, r8, #1
 8021cec:	f103 0901 	add.w	r9, r3, #1
 8021cf0:	eb06 261a 	add.w	r6, r6, sl, lsr #8
 8021cf4:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 8021cf8:	eb09 2313 	add.w	r3, r9, r3, lsr #8
 8021cfc:	1236      	asrs	r6, r6, #8
 8021cfe:	122d      	asrs	r5, r5, #8
 8021d00:	121b      	asrs	r3, r3, #8
 8021d02:	7026      	strb	r6, [r4, #0]
 8021d04:	7065      	strb	r5, [r4, #1]
 8021d06:	70a3      	strb	r3, [r4, #2]
 8021d08:	3403      	adds	r4, #3
 8021d0a:	4284      	cmp	r4, r0
 8021d0c:	4439      	add	r1, r7
 8021d0e:	d1ab      	bne.n	8021c68 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8021d10:	9b02      	ldr	r3, [sp, #8]
 8021d12:	2b00      	cmp	r3, #0
 8021d14:	f73f af66 	bgt.w	8021be4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021d18:	b007      	add	sp, #28
 8021d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021d1e:	f43f af5d 	beq.w	8021bdc <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d22:	f103 3bff 	add.w	fp, r3, #4294967295
 8021d26:	fb0b 2a06 	mla	sl, fp, r6, r2
 8021d2a:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021d2e:	f53f af55 	bmi.w	8021bdc <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d32:	4554      	cmp	r4, sl
 8021d34:	dd64      	ble.n	8021e00 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021d36:	fb0b 1b07 	mla	fp, fp, r7, r1
 8021d3a:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 8021d3e:	d45f      	bmi.n	8021e00 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021d40:	45cb      	cmp	fp, r9
 8021d42:	da5d      	bge.n	8021e00 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8021d44:	2b00      	cmp	r3, #0
 8021d46:	f77f af49 	ble.w	8021bdc <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d4a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021d4e:	eb00 0e03 	add.w	lr, r0, r3
 8021d52:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8021d56:	3003      	adds	r0, #3
 8021d58:	e002      	b.n	8021d60 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8021d5a:	f9bc 4008 	ldrsh.w	r4, [ip, #8]
 8021d5e:	3003      	adds	r0, #3
 8021d60:	9d01      	ldr	r5, [sp, #4]
 8021d62:	140b      	asrs	r3, r1, #16
 8021d64:	fb04 5303 	mla	r3, r4, r3, r5
 8021d68:	1414      	asrs	r4, r2, #16
 8021d6a:	5d1b      	ldrb	r3, [r3, r4]
 8021d6c:	4432      	add	r2, r6
 8021d6e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8021d72:	4439      	add	r1, r7
 8021d74:	ea5f 6a13 	movs.w	sl, r3, lsr #24
 8021d78:	d03e      	beq.n	8021df8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8021d7a:	9c04      	ldr	r4, [sp, #16]
 8021d7c:	fa5f f983 	uxtb.w	r9, r3
 8021d80:	fb04 f40a 	mul.w	r4, r4, sl
 8021d84:	f104 0a01 	add.w	sl, r4, #1
 8021d88:	eb0a 2a24 	add.w	sl, sl, r4, asr #8
 8021d8c:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8021d90:	ea6f 040a 	mvn.w	r4, sl
 8021d94:	fa1f fa8a 	uxth.w	sl, sl
 8021d98:	fb19 f90a 	smulbb	r9, r9, sl
 8021d9c:	f3c3 2507 	ubfx	r5, r3, #8, #8
 8021da0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021da4:	fb15 fb0a 	smulbb	fp, r5, sl
 8021da8:	fb13 f30a 	smulbb	r3, r3, sl
 8021dac:	f810 ac03 	ldrb.w	sl, [r0, #-3]
 8021db0:	b2e4      	uxtb	r4, r4
 8021db2:	fb0a 9904 	mla	r9, sl, r4, r9
 8021db6:	f810 5c02 	ldrb.w	r5, [r0, #-2]
 8021dba:	f810 ac01 	ldrb.w	sl, [r0, #-1]
 8021dbe:	fb05 b504 	mla	r5, r5, r4, fp
 8021dc2:	fb0a 3304 	mla	r3, sl, r4, r3
 8021dc6:	fa1f f989 	uxth.w	r9, r9
 8021dca:	b2ad      	uxth	r5, r5
 8021dcc:	b29b      	uxth	r3, r3
 8021dce:	f109 0b01 	add.w	fp, r9, #1
 8021dd2:	f105 0a01 	add.w	sl, r5, #1
 8021dd6:	1c5c      	adds	r4, r3, #1
 8021dd8:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8021ddc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021de0:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8021de4:	ea4f 2929 	mov.w	r9, r9, asr #8
 8021de8:	122d      	asrs	r5, r5, #8
 8021dea:	121b      	asrs	r3, r3, #8
 8021dec:	f800 9c03 	strb.w	r9, [r0, #-3]
 8021df0:	f800 5c02 	strb.w	r5, [r0, #-2]
 8021df4:	f800 3c01 	strb.w	r3, [r0, #-1]
 8021df8:	4586      	cmp	lr, r0
 8021dfa:	d1ae      	bne.n	8021d5a <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8021dfc:	4670      	mov	r0, lr
 8021dfe:	e6ed      	b.n	8021bdc <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021e00:	2b00      	cmp	r3, #0
 8021e02:	f77f aeeb 	ble.w	8021bdc <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021e06:	4604      	mov	r4, r0
 8021e08:	1415      	asrs	r5, r2, #16
 8021e0a:	e726      	b.n	8021c5a <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>

08021e0c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021e0c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 8021e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e14:	b087      	sub	sp, #28
 8021e16:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8021e1a:	e9dd 1015 	ldrd	r1, r0, [sp, #84]	@ 0x54
 8021e1e:	e9dd 2b17 	ldrd	r2, fp, [sp, #92]	@ 0x5c
 8021e22:	684c      	ldr	r4, [r1, #4]
 8021e24:	680d      	ldr	r5, [r1, #0]
 8021e26:	fb04 0202 	mla	r2, r4, r2, r0
 8021e2a:	e9dd 8913 	ldrd	r8, r9, [sp, #76]	@ 0x4c
 8021e2e:	f8db 4004 	ldr.w	r4, [fp, #4]
 8021e32:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8021e36:	3404      	adds	r4, #4
 8021e38:	f8db 2000 	ldr.w	r2, [fp]
 8021e3c:	4428      	add	r0, r5
 8021e3e:	9402      	str	r4, [sp, #8]
 8021e40:	9201      	str	r2, [sp, #4]
 8021e42:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 8021e46:	9c03      	ldr	r4, [sp, #12]
 8021e48:	2c00      	cmp	r4, #0
 8021e4a:	dc03      	bgt.n	8021e54 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021e4c:	9c04      	ldr	r4, [sp, #16]
 8021e4e:	2c00      	cmp	r4, #0
 8021e50:	f340 80b7 	ble.w	8021fc2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021e54:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 8021e58:	2b00      	cmp	r3, #0
 8021e5a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8021e5e:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 8021e62:	b234      	sxth	r4, r6
 8021e64:	fa0f fc87 	sxth.w	ip, r7
 8021e68:	f340 80ae 	ble.w	8021fc8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021e6c:	1415      	asrs	r5, r2, #16
 8021e6e:	d406      	bmi.n	8021e7e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e70:	42a5      	cmp	r5, r4
 8021e72:	da04      	bge.n	8021e7e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e74:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8021e78:	d401      	bmi.n	8021e7e <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e7a:	45e6      	cmp	lr, ip
 8021e7c:	db3c      	blt.n	8021ef8 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xec>
 8021e7e:	3b01      	subs	r3, #1
 8021e80:	4442      	add	r2, r8
 8021e82:	4449      	add	r1, r9
 8021e84:	f100 0003 	add.w	r0, r0, #3
 8021e88:	d1f0      	bne.n	8021e6c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8021e8a:	9b03      	ldr	r3, [sp, #12]
 8021e8c:	2b00      	cmp	r3, #0
 8021e8e:	f340 8098 	ble.w	8021fc2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021e92:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021e96:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021e9a:	eec5 7a80 	vdiv.f32	s15, s11, s0
 8021e9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021ea2:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8021ea6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021eaa:	ee76 6a62 	vsub.f32	s13, s12, s5
 8021eae:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8021eb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021eb6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021eba:	ee16 2a90 	vmov	r2, s13
 8021ebe:	3b01      	subs	r3, #1
 8021ec0:	9303      	str	r3, [sp, #12]
 8021ec2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021ec4:	9c04      	ldr	r4, [sp, #16]
 8021ec6:	fb92 f8f3 	sdiv	r8, r2, r3
 8021eca:	ee17 2a10 	vmov	r2, s14
 8021ece:	eeb0 7a43 	vmov.f32	s14, s6
 8021ed2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021ed6:	ee17 1a10 	vmov	r1, s14
 8021eda:	eeb0 7a62 	vmov.f32	s14, s5
 8021ede:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8021ee2:	fb92 f9f3 	sdiv	r9, r2, r3
 8021ee6:	eeb0 3a67 	vmov.f32	s6, s15
 8021eea:	ee17 2a10 	vmov	r2, s14
 8021eee:	eef0 2a46 	vmov.f32	s5, s12
 8021ef2:	bf08      	it	eq
 8021ef4:	4623      	moveq	r3, r4
 8021ef6:	e7a6      	b.n	8021e46 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021ef8:	f103 3aff 	add.w	sl, r3, #4294967295
 8021efc:	fb0a 2e08 	mla	lr, sl, r8, r2
 8021f00:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8021f04:	d56a      	bpl.n	8021fdc <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8021f06:	4604      	mov	r4, r0
 8021f08:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021f0c:	4418      	add	r0, r3
 8021f0e:	e002      	b.n	8021f16 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10a>
 8021f10:	1415      	asrs	r5, r2, #16
 8021f12:	e9db 6702 	ldrd	r6, r7, [fp, #8]
 8021f16:	2d00      	cmp	r5, #0
 8021f18:	db4a      	blt.n	8021fb0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021f1a:	42b5      	cmp	r5, r6
 8021f1c:	da48      	bge.n	8021fb0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021f1e:	140b      	asrs	r3, r1, #16
 8021f20:	d446      	bmi.n	8021fb0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021f22:	42bb      	cmp	r3, r7
 8021f24:	b236      	sxth	r6, r6
 8021f26:	da43      	bge.n	8021fb0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021f28:	9f01      	ldr	r7, [sp, #4]
 8021f2a:	fb03 7606 	mla	r6, r3, r6, r7
 8021f2e:	5d73      	ldrb	r3, [r6, r5]
 8021f30:	9d02      	ldr	r5, [sp, #8]
 8021f32:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021f36:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021f3a:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8021f3e:	f000 80be 	beq.w	80220be <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8021f42:	b2df      	uxtb	r7, r3
 8021f44:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8021f48:	f3c3 4a07 	ubfx	sl, r3, #16, #8
 8021f4c:	fa5f f38c 	uxtb.w	r3, ip
 8021f50:	b29d      	uxth	r5, r3
 8021f52:	f1bc 0f00 	cmp.w	ip, #0
 8021f56:	d02b      	beq.n	8021fb0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021f58:	43db      	mvns	r3, r3
 8021f5a:	b2db      	uxtb	r3, r3
 8021f5c:	9305      	str	r3, [sp, #20]
 8021f5e:	f894 e001 	ldrb.w	lr, [r4, #1]
 8021f62:	fb17 f305 	smulbb	r3, r7, r5
 8021f66:	9f05      	ldr	r7, [sp, #20]
 8021f68:	f894 c002 	ldrb.w	ip, [r4, #2]
 8021f6c:	fb1e fe07 	smulbb	lr, lr, r7
 8021f70:	fb1c fc07 	smulbb	ip, ip, r7
 8021f74:	fb06 ee05 	mla	lr, r6, r5, lr
 8021f78:	7827      	ldrb	r7, [r4, #0]
 8021f7a:	9e05      	ldr	r6, [sp, #20]
 8021f7c:	fb0a c505 	mla	r5, sl, r5, ip
 8021f80:	fb07 3706 	mla	r7, r7, r6, r3
 8021f84:	b2ab      	uxth	r3, r5
 8021f86:	b2bf      	uxth	r7, r7
 8021f88:	fa1f f68e 	uxth.w	r6, lr
 8021f8c:	1c7d      	adds	r5, r7, #1
 8021f8e:	f106 0e01 	add.w	lr, r6, #1
 8021f92:	f103 0c01 	add.w	ip, r3, #1
 8021f96:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8021f9a:	eb0c 2613 	add.w	r6, ip, r3, lsr #8
 8021f9e:	eb05 2317 	add.w	r3, r5, r7, lsr #8
 8021fa2:	121b      	asrs	r3, r3, #8
 8021fa4:	ea4f 272e 	mov.w	r7, lr, asr #8
 8021fa8:	1235      	asrs	r5, r6, #8
 8021faa:	7067      	strb	r7, [r4, #1]
 8021fac:	70a5      	strb	r5, [r4, #2]
 8021fae:	7023      	strb	r3, [r4, #0]
 8021fb0:	3403      	adds	r4, #3
 8021fb2:	4284      	cmp	r4, r0
 8021fb4:	4442      	add	r2, r8
 8021fb6:	4449      	add	r1, r9
 8021fb8:	d1aa      	bne.n	8021f10 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 8021fba:	9b03      	ldr	r3, [sp, #12]
 8021fbc:	2b00      	cmp	r3, #0
 8021fbe:	f73f af68 	bgt.w	8021e92 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021fc2:	b007      	add	sp, #28
 8021fc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021fc8:	f43f af5f 	beq.w	8021e8a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8021fcc:	f103 3aff 	add.w	sl, r3, #4294967295
 8021fd0:	fb0a 2e08 	mla	lr, sl, r8, r2
 8021fd4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8021fd8:	f53f af57 	bmi.w	8021e8a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8021fdc:	4574      	cmp	r4, lr
 8021fde:	dd68      	ble.n	80220b2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021fe0:	fb0a 1a09 	mla	sl, sl, r9, r1
 8021fe4:	ea5f 4a2a 	movs.w	sl, sl, asr #16
 8021fe8:	d463      	bmi.n	80220b2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021fea:	45e2      	cmp	sl, ip
 8021fec:	da61      	bge.n	80220b2 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021fee:	2b00      	cmp	r3, #0
 8021ff0:	f77f af4b 	ble.w	8021e8a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8021ff4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8021ff8:	eb00 0e03 	add.w	lr, r0, r3
 8021ffc:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
 8022000:	3003      	adds	r0, #3
 8022002:	e03b      	b.n	802207c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8022004:	b2fc      	uxtb	r4, r7
 8022006:	fa5f fc83 	uxtb.w	ip, r3
 802200a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802200e:	b2a5      	uxth	r5, r4
 8022010:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8022014:	b357      	cbz	r7, 802206c <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8022016:	43e4      	mvns	r4, r4
 8022018:	f810 ac02 	ldrb.w	sl, [r0, #-2]
 802201c:	f810 8c01 	ldrb.w	r8, [r0, #-1]
 8022020:	b2e4      	uxtb	r4, r4
 8022022:	fb1c fc05 	smulbb	ip, ip, r5
 8022026:	fb18 f804 	smulbb	r8, r8, r4
 802202a:	fb1a fa04 	smulbb	sl, sl, r4
 802202e:	f810 7c03 	ldrb.w	r7, [r0, #-3]
 8022032:	fb03 8305 	mla	r3, r3, r5, r8
 8022036:	fb06 a605 	mla	r6, r6, r5, sl
 802203a:	fb07 c404 	mla	r4, r7, r4, ip
 802203e:	b2b6      	uxth	r6, r6
 8022040:	b2a4      	uxth	r4, r4
 8022042:	b29b      	uxth	r3, r3
 8022044:	f106 0c01 	add.w	ip, r6, #1
 8022048:	f103 0801 	add.w	r8, r3, #1
 802204c:	1c65      	adds	r5, r4, #1
 802204e:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8022052:	eb08 2313 	add.w	r3, r8, r3, lsr #8
 8022056:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 802205a:	1236      	asrs	r6, r6, #8
 802205c:	121b      	asrs	r3, r3, #8
 802205e:	122d      	asrs	r5, r5, #8
 8022060:	f800 6c02 	strb.w	r6, [r0, #-2]
 8022064:	f800 3c01 	strb.w	r3, [r0, #-1]
 8022068:	f800 5c03 	strb.w	r5, [r0, #-3]
 802206c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 802206e:	4586      	cmp	lr, r0
 8022070:	441a      	add	r2, r3
 8022072:	4449      	add	r1, r9
 8022074:	d01b      	beq.n	80220ae <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8022076:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 802207a:	3003      	adds	r0, #3
 802207c:	9d01      	ldr	r5, [sp, #4]
 802207e:	140b      	asrs	r3, r1, #16
 8022080:	fb04 5303 	mla	r3, r4, r3, r5
 8022084:	1414      	asrs	r4, r2, #16
 8022086:	5d1b      	ldrb	r3, [r3, r4]
 8022088:	9c02      	ldr	r4, [sp, #8]
 802208a:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 802208e:	0e1f      	lsrs	r7, r3, #24
 8022090:	2fff      	cmp	r7, #255	@ 0xff
 8022092:	d1b7      	bne.n	8022004 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8022094:	0a1d      	lsrs	r5, r3, #8
 8022096:	0c1c      	lsrs	r4, r3, #16
 8022098:	f800 3c03 	strb.w	r3, [r0, #-3]
 802209c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 802209e:	4586      	cmp	lr, r0
 80220a0:	f800 5c02 	strb.w	r5, [r0, #-2]
 80220a4:	f800 4c01 	strb.w	r4, [r0, #-1]
 80220a8:	441a      	add	r2, r3
 80220aa:	4449      	add	r1, r9
 80220ac:	d1e3      	bne.n	8022076 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80220ae:	4670      	mov	r0, lr
 80220b0:	e6eb      	b.n	8021e8a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80220b2:	2b00      	cmp	r3, #0
 80220b4:	f77f aee9 	ble.w	8021e8a <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80220b8:	4604      	mov	r4, r0
 80220ba:	1415      	asrs	r5, r2, #16
 80220bc:	e724      	b.n	8021f08 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80220be:	0a1e      	lsrs	r6, r3, #8
 80220c0:	0c1d      	lsrs	r5, r3, #16
 80220c2:	7023      	strb	r3, [r4, #0]
 80220c4:	7066      	strb	r6, [r4, #1]
 80220c6:	70a5      	strb	r5, [r4, #2]
 80220c8:	e772      	b.n	8021fb0 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80220ca:	bf00      	nop

080220cc <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80220cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80220d0:	b089      	sub	sp, #36	@ 0x24
 80220d2:	f89d 006c 	ldrb.w	r0, [sp, #108]	@ 0x6c
 80220d6:	9101      	str	r1, [sp, #4]
 80220d8:	ea6f 0a00 	mvn.w	sl, r0
 80220dc:	e9dd e815 	ldrd	lr, r8, [sp, #84]	@ 0x54
 80220e0:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80220e2:	9202      	str	r2, [sp, #8]
 80220e4:	e9dd 5217 	ldrd	r5, r2, [sp, #92]	@ 0x5c
 80220e8:	686c      	ldr	r4, [r5, #4]
 80220ea:	682f      	ldr	r7, [r5, #0]
 80220ec:	fb04 2401 	mla	r4, r4, r1, r2
 80220f0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80220f2:	b280      	uxth	r0, r0
 80220f4:	e9d2 2100 	ldrd	r2, r1, [r2]
 80220f8:	3104      	adds	r1, #4
 80220fa:	eb07 0784 	add.w	r7, r7, r4, lsl #2
 80220fe:	fa5f fa8a 	uxtb.w	sl, sl
 8022102:	9007      	str	r0, [sp, #28]
 8022104:	9105      	str	r1, [sp, #20]
 8022106:	9200      	str	r2, [sp, #0]
 8022108:	e9dd 2513 	ldrd	r2, r5, [sp, #76]	@ 0x4c
 802210c:	9901      	ldr	r1, [sp, #4]
 802210e:	2900      	cmp	r1, #0
 8022110:	dc03      	bgt.n	802211a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8022112:	9902      	ldr	r1, [sp, #8]
 8022114:	2900      	cmp	r1, #0
 8022116:	f340 80b6 	ble.w	8022286 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802211a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 802211c:	2b00      	cmp	r3, #0
 802211e:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 8022122:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8022126:	f505 4500 	add.w	r5, r5, #32768	@ 0x8000
 802212a:	b221      	sxth	r1, r4
 802212c:	fa0f fc86 	sxth.w	ip, r6
 8022130:	f340 80ac 	ble.w	802228c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022134:	1410      	asrs	r0, r2, #16
 8022136:	d406      	bmi.n	8022146 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022138:	4288      	cmp	r0, r1
 802213a:	da04      	bge.n	8022146 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802213c:	ea5f 4925 	movs.w	r9, r5, asr #16
 8022140:	d401      	bmi.n	8022146 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022142:	45e1      	cmp	r9, ip
 8022144:	db3e      	blt.n	80221c4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf8>
 8022146:	3b01      	subs	r3, #1
 8022148:	4472      	add	r2, lr
 802214a:	4445      	add	r5, r8
 802214c:	f107 0704 	add.w	r7, r7, #4
 8022150:	d1f0      	bne.n	8022134 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022152:	9b01      	ldr	r3, [sp, #4]
 8022154:	2b00      	cmp	r3, #0
 8022156:	f340 8096 	ble.w	8022286 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802215a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802215e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022162:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022166:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802216a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802216e:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8022172:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022176:	ee76 6a62 	vsub.f32	s13, s12, s5
 802217a:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802217e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022182:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022186:	ee16 2a90 	vmov	r2, s13
 802218a:	3b01      	subs	r3, #1
 802218c:	9301      	str	r3, [sp, #4]
 802218e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8022190:	9902      	ldr	r1, [sp, #8]
 8022192:	fb92 fef3 	sdiv	lr, r2, r3
 8022196:	ee17 2a10 	vmov	r2, s14
 802219a:	eeb0 7a43 	vmov.f32	s14, s6
 802219e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80221a2:	ee17 5a10 	vmov	r5, s14
 80221a6:	eeb0 7a62 	vmov.f32	s14, s5
 80221aa:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80221ae:	fb92 f8f3 	sdiv	r8, r2, r3
 80221b2:	eeb0 3a67 	vmov.f32	s6, s15
 80221b6:	ee17 2a10 	vmov	r2, s14
 80221ba:	eef0 2a46 	vmov.f32	s5, s12
 80221be:	bf08      	it	eq
 80221c0:	460b      	moveq	r3, r1
 80221c2:	e7a3      	b.n	802210c <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80221c4:	f103 39ff 	add.w	r9, r3, #4294967295
 80221c8:	fb09 2b0e 	mla	fp, r9, lr, r2
 80221cc:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 80221d0:	d566      	bpl.n	80222a0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80221d2:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80221d6:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80221d8:	e002      	b.n	80221e0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80221da:	1410      	asrs	r0, r2, #16
 80221dc:	e9d1 4602 	ldrd	r4, r6, [r1, #8]
 80221e0:	2800      	cmp	r0, #0
 80221e2:	f109 39ff 	add.w	r9, r9, #4294967295
 80221e6:	4472      	add	r2, lr
 80221e8:	db3f      	blt.n	802226a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 80221ea:	42a0      	cmp	r0, r4
 80221ec:	da3d      	bge.n	802226a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 80221ee:	ea5f 4c25 	movs.w	ip, r5, asr #16
 80221f2:	d43a      	bmi.n	802226a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 80221f4:	45b4      	cmp	ip, r6
 80221f6:	da38      	bge.n	802226a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 80221f8:	9e00      	ldr	r6, [sp, #0]
 80221fa:	b224      	sxth	r4, r4
 80221fc:	fb0c 6404 	mla	r4, ip, r4, r6
 8022200:	f814 b000 	ldrb.w	fp, [r4, r0]
 8022204:	7838      	ldrb	r0, [r7, #0]
 8022206:	9c05      	ldr	r4, [sp, #20]
 8022208:	fb10 f30a 	smulbb	r3, r0, sl
 802220c:	9306      	str	r3, [sp, #24]
 802220e:	9b07      	ldr	r3, [sp, #28]
 8022210:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 8022214:	4618      	mov	r0, r3
 8022216:	eb04 060b 	add.w	r6, r4, fp
 802221a:	78b4      	ldrb	r4, [r6, #2]
 802221c:	7876      	ldrb	r6, [r6, #1]
 802221e:	fb14 fc03 	smulbb	ip, r4, r3
 8022222:	9c05      	ldr	r4, [sp, #20]
 8022224:	fb16 f603 	smulbb	r6, r6, r3
 8022228:	f814 400b 	ldrb.w	r4, [r4, fp]
 802222c:	9b06      	ldr	r3, [sp, #24]
 802222e:	f897 b001 	ldrb.w	fp, [r7, #1]
 8022232:	fb04 3000 	mla	r0, r4, r0, r3
 8022236:	78bc      	ldrb	r4, [r7, #2]
 8022238:	fb0b 660a 	mla	r6, fp, sl, r6
 802223c:	fb04 c40a 	mla	r4, r4, sl, ip
 8022240:	b2b6      	uxth	r6, r6
 8022242:	b280      	uxth	r0, r0
 8022244:	b2a4      	uxth	r4, r4
 8022246:	f106 0c01 	add.w	ip, r6, #1
 802224a:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 802224e:	f104 0b01 	add.w	fp, r4, #1
 8022252:	f100 0c01 	add.w	ip, r0, #1
 8022256:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 802225a:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802225e:	1236      	asrs	r6, r6, #8
 8022260:	1224      	asrs	r4, r4, #8
 8022262:	1200      	asrs	r0, r0, #8
 8022264:	707e      	strb	r6, [r7, #1]
 8022266:	70bc      	strb	r4, [r7, #2]
 8022268:	7038      	strb	r0, [r7, #0]
 802226a:	f1b9 3fff 	cmp.w	r9, #4294967295
 802226e:	f107 0704 	add.w	r7, r7, #4
 8022272:	4445      	add	r5, r8
 8022274:	d1b1      	bne.n	80221da <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8022276:	e9dd b303 	ldrd	fp, r3, [sp, #12]
 802227a:	eb0b 0783 	add.w	r7, fp, r3, lsl #2
 802227e:	9b01      	ldr	r3, [sp, #4]
 8022280:	2b00      	cmp	r3, #0
 8022282:	f73f af6a 	bgt.w	802215a <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022286:	b009      	add	sp, #36	@ 0x24
 8022288:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802228c:	f43f af61 	beq.w	8022152 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022290:	f103 39ff 	add.w	r9, r3, #4294967295
 8022294:	fb09 2b0e 	mla	fp, r9, lr, r2
 8022298:	ea5f 4b2b 	movs.w	fp, fp, asr #16
 802229c:	f53f af59 	bmi.w	8022152 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80222a0:	4559      	cmp	r1, fp
 80222a2:	dd57      	ble.n	8022354 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80222a4:	fb09 5008 	mla	r0, r9, r8, r5
 80222a8:	1400      	asrs	r0, r0, #16
 80222aa:	d453      	bmi.n	8022354 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80222ac:	4560      	cmp	r0, ip
 80222ae:	da51      	bge.n	8022354 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80222b0:	2b00      	cmp	r3, #0
 80222b2:	f77f af4e 	ble.w	8022152 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80222b6:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80222ba:	f107 0c04 	add.w	ip, r7, #4
 80222be:	f8dd b014 	ldr.w	fp, [sp, #20]
 80222c2:	460b      	mov	r3, r1
 80222c4:	9f07      	ldr	r7, [sp, #28]
 80222c6:	e002      	b.n	80222ce <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80222c8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80222ca:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80222ce:	9800      	ldr	r0, [sp, #0]
 80222d0:	1429      	asrs	r1, r5, #16
 80222d2:	fb03 0301 	mla	r3, r3, r1, r0
 80222d6:	1411      	asrs	r1, r2, #16
 80222d8:	5c5e      	ldrb	r6, [r3, r1]
 80222da:	f81c 3c04 	ldrb.w	r3, [ip, #-4]
 80222de:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80222e2:	eb0b 0006 	add.w	r0, fp, r6
 80222e6:	7881      	ldrb	r1, [r0, #2]
 80222e8:	7840      	ldrb	r0, [r0, #1]
 80222ea:	fb13 f30a 	smulbb	r3, r3, sl
 80222ee:	fb10 f007 	smulbb	r0, r0, r7
 80222f2:	fb11 f407 	smulbb	r4, r1, r7
 80222f6:	f81b 1006 	ldrb.w	r1, [fp, r6]
 80222fa:	f81c 6c03 	ldrb.w	r6, [ip, #-3]
 80222fe:	fb01 3307 	mla	r3, r1, r7, r3
 8022302:	f81c 1c02 	ldrb.w	r1, [ip, #-2]
 8022306:	fb06 000a 	mla	r0, r6, sl, r0
 802230a:	fb01 410a 	mla	r1, r1, sl, r4
 802230e:	b280      	uxth	r0, r0
 8022310:	b29b      	uxth	r3, r3
 8022312:	b289      	uxth	r1, r1
 8022314:	1c44      	adds	r4, r0, #1
 8022316:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 802231a:	1c4e      	adds	r6, r1, #1
 802231c:	1c5c      	adds	r4, r3, #1
 802231e:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 8022322:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8022326:	f109 39ff 	add.w	r9, r9, #4294967295
 802232a:	1200      	asrs	r0, r0, #8
 802232c:	1209      	asrs	r1, r1, #8
 802232e:	121b      	asrs	r3, r3, #8
 8022330:	f1b9 3fff 	cmp.w	r9, #4294967295
 8022334:	f80c 0c03 	strb.w	r0, [ip, #-3]
 8022338:	f80c 1c02 	strb.w	r1, [ip, #-2]
 802233c:	f80c 3c04 	strb.w	r3, [ip, #-4]
 8022340:	4445      	add	r5, r8
 8022342:	4472      	add	r2, lr
 8022344:	f10c 0c04 	add.w	ip, ip, #4
 8022348:	d1be      	bne.n	80222c8 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 802234a:	e9dd 7303 	ldrd	r7, r3, [sp, #12]
 802234e:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 8022352:	e6fe      	b.n	8022152 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022354:	2b00      	cmp	r3, #0
 8022356:	f77f aefc 	ble.w	8022152 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802235a:	1410      	asrs	r0, r2, #16
 802235c:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8022360:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8022362:	e73d      	b.n	80221e0 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>

08022364 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022368:	468a      	mov	sl, r1
 802236a:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 802236e:	46d1      	mov	r9, sl
 8022370:	b087      	sub	sp, #28
 8022372:	e9dd 1415 	ldrd	r1, r4, [sp, #84]	@ 0x54
 8022376:	684d      	ldr	r5, [r1, #4]
 8022378:	9203      	str	r2, [sp, #12]
 802237a:	e9dd 2e17 	ldrd	r2, lr, [sp, #92]	@ 0x5c
 802237e:	fb05 4402 	mla	r4, r5, r2, r4
 8022382:	e9de 2000 	ldrd	r2, r0, [lr]
 8022386:	e9dd 6713 	ldrd	r6, r7, [sp, #76]	@ 0x4c
 802238a:	680d      	ldr	r5, [r1, #0]
 802238c:	f100 0b04 	add.w	fp, r0, #4
 8022390:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 8022394:	9205      	str	r2, [sp, #20]
 8022396:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	@ 0x44
 802239a:	f1b9 0f00 	cmp.w	r9, #0
 802239e:	dc03      	bgt.n	80223a8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80223a0:	9803      	ldr	r0, [sp, #12]
 80223a2:	2800      	cmp	r0, #0
 80223a4:	f340 8091 	ble.w	80224ca <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 80223a8:	e9de 8a02 	ldrd	r8, sl, [lr, #8]
 80223ac:	2b00      	cmp	r3, #0
 80223ae:	fa0f f088 	sxth.w	r0, r8
 80223b2:	fa0f f48a 	sxth.w	r4, sl
 80223b6:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80223ba:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 80223be:	9001      	str	r0, [sp, #4]
 80223c0:	9402      	str	r4, [sp, #8]
 80223c2:	f340 8085 	ble.w	80224d0 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80223c6:	1414      	asrs	r4, r2, #16
 80223c8:	d408      	bmi.n	80223dc <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80223ca:	9801      	ldr	r0, [sp, #4]
 80223cc:	4284      	cmp	r4, r0
 80223ce:	da05      	bge.n	80223dc <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80223d0:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80223d4:	d402      	bmi.n	80223dc <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80223d6:	9802      	ldr	r0, [sp, #8]
 80223d8:	4584      	cmp	ip, r0
 80223da:	db3b      	blt.n	8022454 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf0>
 80223dc:	3b01      	subs	r3, #1
 80223de:	4432      	add	r2, r6
 80223e0:	4439      	add	r1, r7
 80223e2:	f105 0504 	add.w	r5, r5, #4
 80223e6:	d1ee      	bne.n	80223c6 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80223e8:	f1b9 0f00 	cmp.w	r9, #0
 80223ec:	dd6d      	ble.n	80224ca <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 80223ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 80223f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80223f6:	eec5 7a80 	vdiv.f32	s15, s11, s0
 80223fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80223fe:	ee20 6aa7 	vmul.f32	s12, s1, s15
 8022402:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022406:	ee76 6a62 	vsub.f32	s13, s12, s5
 802240a:	ee37 7ac3 	vsub.f32	s14, s15, s6
 802240e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022412:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022416:	ee16 2a90 	vmov	r2, s13
 802241a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802241c:	9803      	ldr	r0, [sp, #12]
 802241e:	fb92 f6f3 	sdiv	r6, r2, r3
 8022422:	ee17 2a10 	vmov	r2, s14
 8022426:	eeb0 7a43 	vmov.f32	s14, s6
 802242a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802242e:	ee17 1a10 	vmov	r1, s14
 8022432:	eeb0 7a62 	vmov.f32	s14, s5
 8022436:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802243a:	f1b9 0901 	subs.w	r9, r9, #1
 802243e:	fb92 f7f3 	sdiv	r7, r2, r3
 8022442:	eeb0 3a67 	vmov.f32	s6, s15
 8022446:	ee17 2a10 	vmov	r2, s14
 802244a:	eef0 2a46 	vmov.f32	s5, s12
 802244e:	bf08      	it	eq
 8022450:	4603      	moveq	r3, r0
 8022452:	e7a2      	b.n	802239a <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8022454:	f103 3cff 	add.w	ip, r3, #4294967295
 8022458:	9404      	str	r4, [sp, #16]
 802245a:	fb06 240c 	mla	r4, r6, ip, r2
 802245e:	1424      	asrs	r4, r4, #16
 8022460:	d578      	bpl.n	8022554 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022462:	9613      	str	r6, [sp, #76]	@ 0x4c
 8022464:	2000      	movs	r0, #0
 8022466:	4646      	mov	r6, r8
 8022468:	46d4      	mov	ip, sl
 802246a:	9c04      	ldr	r4, [sp, #16]
 802246c:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
 8022470:	e002      	b.n	8022478 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8022472:	1414      	asrs	r4, r2, #16
 8022474:	e9de 6c02 	ldrd	r6, ip, [lr, #8]
 8022478:	2c00      	cmp	r4, #0
 802247a:	4442      	add	r2, r8
 802247c:	db1c      	blt.n	80224b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802247e:	42b4      	cmp	r4, r6
 8022480:	da1a      	bge.n	80224b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8022482:	ea5f 4a21 	movs.w	sl, r1, asr #16
 8022486:	d417      	bmi.n	80224b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8022488:	45e2      	cmp	sl, ip
 802248a:	da15      	bge.n	80224b8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802248c:	fa0f fc86 	sxth.w	ip, r6
 8022490:	9e05      	ldr	r6, [sp, #20]
 8022492:	fb0a 6c0c 	mla	ip, sl, ip, r6
 8022496:	f81c 4004 	ldrb.w	r4, [ip, r4]
 802249a:	eb05 0680 	add.w	r6, r5, r0, lsl #2
 802249e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80224a2:	f81b c004 	ldrb.w	ip, [fp, r4]
 80224a6:	445c      	add	r4, fp
 80224a8:	f805 c020 	strb.w	ip, [r5, r0, lsl #2]
 80224ac:	f894 c001 	ldrb.w	ip, [r4, #1]
 80224b0:	f886 c001 	strb.w	ip, [r6, #1]
 80224b4:	78a4      	ldrb	r4, [r4, #2]
 80224b6:	70b4      	strb	r4, [r6, #2]
 80224b8:	3001      	adds	r0, #1
 80224ba:	4283      	cmp	r3, r0
 80224bc:	4439      	add	r1, r7
 80224be:	d1d8      	bne.n	8022472 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80224c0:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 80224c4:	f1b9 0f00 	cmp.w	r9, #0
 80224c8:	dc91      	bgt.n	80223ee <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80224ca:	b007      	add	sp, #28
 80224cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80224d0:	d08a      	beq.n	80223e8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80224d2:	f103 3cff 	add.w	ip, r3, #4294967295
 80224d6:	fb0c 2406 	mla	r4, ip, r6, r2
 80224da:	1424      	asrs	r4, r4, #16
 80224dc:	d484      	bmi.n	80223e8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80224de:	42a0      	cmp	r0, r4
 80224e0:	dd32      	ble.n	8022548 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80224e2:	fb07 140c 	mla	r4, r7, ip, r1
 80224e6:	1420      	asrs	r0, r4, #16
 80224e8:	d42e      	bmi.n	8022548 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80224ea:	9c02      	ldr	r4, [sp, #8]
 80224ec:	4284      	cmp	r4, r0
 80224ee:	dd2b      	ble.n	8022548 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80224f0:	2b00      	cmp	r3, #0
 80224f2:	f77f af79 	ble.w	80223e8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80224f6:	1d2c      	adds	r4, r5, #4
 80224f8:	f8dd a014 	ldr.w	sl, [sp, #20]
 80224fc:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8022500:	e001      	b.n	8022506 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022502:	f9be 8008 	ldrsh.w	r8, [lr, #8]
 8022506:	1408      	asrs	r0, r1, #16
 8022508:	fb08 a000 	mla	r0, r8, r0, sl
 802250c:	ea4f 4822 	mov.w	r8, r2, asr #16
 8022510:	f810 0008 	ldrb.w	r0, [r0, r8]
 8022514:	f10c 3cff 	add.w	ip, ip, #4294967295
 8022518:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802251c:	f81b 8000 	ldrb.w	r8, [fp, r0]
 8022520:	4458      	add	r0, fp
 8022522:	f804 8c04 	strb.w	r8, [r4, #-4]
 8022526:	f890 8001 	ldrb.w	r8, [r0, #1]
 802252a:	f1bc 3fff 	cmp.w	ip, #4294967295
 802252e:	f804 8c03 	strb.w	r8, [r4, #-3]
 8022532:	7880      	ldrb	r0, [r0, #2]
 8022534:	4439      	add	r1, r7
 8022536:	f804 0c02 	strb.w	r0, [r4, #-2]
 802253a:	4432      	add	r2, r6
 802253c:	f104 0404 	add.w	r4, r4, #4
 8022540:	d1df      	bne.n	8022502 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 8022542:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8022546:	e7bd      	b.n	80224c4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 8022548:	2b00      	cmp	r3, #0
 802254a:	f77f af4d 	ble.w	80223e8 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802254e:	1410      	asrs	r0, r2, #16
 8022550:	9004      	str	r0, [sp, #16]
 8022552:	e786      	b.n	8022462 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>
 8022554:	9801      	ldr	r0, [sp, #4]
 8022556:	e7c2      	b.n	80224de <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>

08022558 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022558:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 802255c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022560:	b08b      	sub	sp, #44	@ 0x2c
 8022562:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8022566:	e9dd 2119 	ldrd	r2, r1, [sp, #100]	@ 0x64
 802256a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802256c:	6854      	ldr	r4, [r2, #4]
 802256e:	6816      	ldr	r6, [r2, #0]
 8022570:	fb04 1000 	mla	r0, r4, r0, r1
 8022574:	e9dd 4b17 	ldrd	r4, fp, [sp, #92]	@ 0x5c
 8022578:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 802257a:	f89d 7074 	ldrb.w	r7, [sp, #116]	@ 0x74
 802257e:	e9d2 2500 	ldrd	r2, r5, [r2]
 8022582:	3504      	adds	r5, #4
 8022584:	9703      	str	r7, [sp, #12]
 8022586:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 802258a:	9507      	str	r5, [sp, #28]
 802258c:	9206      	str	r2, [sp, #24]
 802258e:	e9dd 2115 	ldrd	r2, r1, [sp, #84]	@ 0x54
 8022592:	9d01      	ldr	r5, [sp, #4]
 8022594:	2d00      	cmp	r5, #0
 8022596:	dc03      	bgt.n	80225a0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022598:	9d02      	ldr	r5, [sp, #8]
 802259a:	2d00      	cmp	r5, #0
 802259c:	f340 80d5 	ble.w	802274a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80225a0:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
 80225a2:	2b00      	cmp	r3, #0
 80225a4:	e9d5 7c02 	ldrd	r7, ip, [r5, #8]
 80225a8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80225ac:	f501 4100 	add.w	r1, r1, #32768	@ 0x8000
 80225b0:	b23d      	sxth	r5, r7
 80225b2:	fa0f fe8c 	sxth.w	lr, ip
 80225b6:	f340 80cb 	ble.w	8022750 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 80225ba:	1416      	asrs	r6, r2, #16
 80225bc:	d406      	bmi.n	80225cc <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80225be:	42ae      	cmp	r6, r5
 80225c0:	da04      	bge.n	80225cc <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80225c2:	ea5f 4821 	movs.w	r8, r1, asr #16
 80225c6:	d401      	bmi.n	80225cc <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80225c8:	45f0      	cmp	r8, lr
 80225ca:	db3c      	blt.n	8022646 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xee>
 80225cc:	3b01      	subs	r3, #1
 80225ce:	4422      	add	r2, r4
 80225d0:	4459      	add	r1, fp
 80225d2:	f100 0004 	add.w	r0, r0, #4
 80225d6:	d1f0      	bne.n	80225ba <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80225d8:	9b01      	ldr	r3, [sp, #4]
 80225da:	2b00      	cmp	r3, #0
 80225dc:	f340 80b5 	ble.w	802274a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80225e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225e8:	eec5 7a80 	vdiv.f32	s15, s11, s0
 80225ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225f0:	ee20 6aa7 	vmul.f32	s12, s1, s15
 80225f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80225f8:	ee76 6a62 	vsub.f32	s13, s12, s5
 80225fc:	ee37 7ac3 	vsub.f32	s14, s15, s6
 8022600:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022604:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022608:	ee16 2a90 	vmov	r2, s13
 802260c:	3b01      	subs	r3, #1
 802260e:	9301      	str	r3, [sp, #4]
 8022610:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8022612:	9d02      	ldr	r5, [sp, #8]
 8022614:	fb92 f4f3 	sdiv	r4, r2, r3
 8022618:	ee17 2a10 	vmov	r2, s14
 802261c:	eeb0 7a43 	vmov.f32	s14, s6
 8022620:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022624:	ee17 1a10 	vmov	r1, s14
 8022628:	eeb0 7a62 	vmov.f32	s14, s5
 802262c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8022630:	fb92 fbf3 	sdiv	fp, r2, r3
 8022634:	eeb0 3a67 	vmov.f32	s6, s15
 8022638:	ee17 2a10 	vmov	r2, s14
 802263c:	eef0 2a46 	vmov.f32	s5, s12
 8022640:	bf08      	it	eq
 8022642:	462b      	moveq	r3, r5
 8022644:	e7a5      	b.n	8022592 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022646:	f103 38ff 	add.w	r8, r3, #4294967295
 802264a:	fb08 2904 	mla	r9, r8, r4, r2
 802264e:	ea5f 4929 	movs.w	r9, r9, asr #16
 8022652:	f140 8087 	bpl.w	8022764 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8022656:	f1c3 0900 	rsb	r9, r3, #0
 802265a:	4698      	mov	r8, r3
 802265c:	2500      	movs	r5, #0
 802265e:	9004      	str	r0, [sp, #16]
 8022660:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022662:	e002      	b.n	802266a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x112>
 8022664:	1416      	asrs	r6, r2, #16
 8022666:	e9d3 7c02 	ldrd	r7, ip, [r3, #8]
 802266a:	2e00      	cmp	r6, #0
 802266c:	4422      	add	r2, r4
 802266e:	db61      	blt.n	8022734 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022670:	42be      	cmp	r6, r7
 8022672:	da5f      	bge.n	8022734 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022674:	ea5f 4e21 	movs.w	lr, r1, asr #16
 8022678:	d45c      	bmi.n	8022734 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 802267a:	45e6      	cmp	lr, ip
 802267c:	b23f      	sxth	r7, r7
 802267e:	da59      	bge.n	8022734 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8022680:	9806      	ldr	r0, [sp, #24]
 8022682:	fb0e 0707 	mla	r7, lr, r7, r0
 8022686:	9807      	ldr	r0, [sp, #28]
 8022688:	5dbe      	ldrb	r6, [r7, r6]
 802268a:	ebc5 7785 	rsb	r7, r5, r5, lsl #30
 802268e:	f850 6026 	ldr.w	r6, [r0, r6, lsl #2]
 8022692:	9804      	ldr	r0, [sp, #16]
 8022694:	9705      	str	r7, [sp, #20]
 8022696:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 802269a:	0e37      	lsrs	r7, r6, #24
 802269c:	9008      	str	r0, [sp, #32]
 802269e:	d049      	beq.n	8022734 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80226a0:	9803      	ldr	r0, [sp, #12]
 80226a2:	fa5f fa86 	uxtb.w	sl, r6
 80226a6:	fb00 f707 	mul.w	r7, r0, r7
 80226aa:	9805      	ldr	r0, [sp, #20]
 80226ac:	f107 0c01 	add.w	ip, r7, #1
 80226b0:	eb0c 2c27 	add.w	ip, ip, r7, asr #8
 80226b4:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 80226b8:	4686      	mov	lr, r0
 80226ba:	ea6f 070c 	mvn.w	r7, ip
 80226be:	fa1f fc8c 	uxth.w	ip, ip
 80226c2:	fb1a fa0c 	smulbb	sl, sl, ip
 80226c6:	9804      	ldr	r0, [sp, #16]
 80226c8:	b2ff      	uxtb	r7, r7
 80226ca:	f810 e02e 	ldrb.w	lr, [r0, lr, lsl #2]
 80226ce:	9805      	ldr	r0, [sp, #20]
 80226d0:	fb0e ae07 	mla	lr, lr, r7, sl
 80226d4:	fa1f fe8e 	uxth.w	lr, lr
 80226d8:	f10e 0a01 	add.w	sl, lr, #1
 80226dc:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 80226e0:	f3c6 2a07 	ubfx	sl, r6, #8, #8
 80226e4:	f3c6 4607 	ubfx	r6, r6, #16, #8
 80226e8:	fb16 f60c 	smulbb	r6, r6, ip
 80226ec:	9609      	str	r6, [sp, #36]	@ 0x24
 80226ee:	4606      	mov	r6, r0
 80226f0:	9804      	ldr	r0, [sp, #16]
 80226f2:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 80226f6:	f800 e026 	strb.w	lr, [r0, r6, lsl #2]
 80226fa:	fb1a fa0c 	smulbb	sl, sl, ip
 80226fe:	9808      	ldr	r0, [sp, #32]
 8022700:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8022702:	f890 e002 	ldrb.w	lr, [r0, #2]
 8022706:	f890 c001 	ldrb.w	ip, [r0, #1]
 802270a:	fb0e 6607 	mla	r6, lr, r7, r6
 802270e:	fb0c ac07 	mla	ip, ip, r7, sl
 8022712:	b2b6      	uxth	r6, r6
 8022714:	fa1f fe8c 	uxth.w	lr, ip
 8022718:	1c77      	adds	r7, r6, #1
 802271a:	f10e 0c01 	add.w	ip, lr, #1
 802271e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022722:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8022726:	ea4f 272c 	mov.w	r7, ip, asr #8
 802272a:	ea4f 2c26 	mov.w	ip, r6, asr #8
 802272e:	7047      	strb	r7, [r0, #1]
 8022730:	f880 c002 	strb.w	ip, [r0, #2]
 8022734:	3d01      	subs	r5, #1
 8022736:	45a9      	cmp	r9, r5
 8022738:	4459      	add	r1, fp
 802273a:	d193      	bne.n	8022664 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802273c:	9b01      	ldr	r3, [sp, #4]
 802273e:	9804      	ldr	r0, [sp, #16]
 8022740:	2b00      	cmp	r3, #0
 8022742:	eb00 0088 	add.w	r0, r0, r8, lsl #2
 8022746:	f73f af4b 	bgt.w	80225e0 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802274a:	b00b      	add	sp, #44	@ 0x2c
 802274c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022750:	f43f af42 	beq.w	80225d8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022754:	f103 38ff 	add.w	r8, r3, #4294967295
 8022758:	fb08 2904 	mla	r9, r8, r4, r2
 802275c:	ea5f 4929 	movs.w	r9, r9, asr #16
 8022760:	f53f af3a 	bmi.w	80225d8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022764:	454d      	cmp	r5, r9
 8022766:	dd68      	ble.n	802283a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022768:	fb08 160b 	mla	r6, r8, fp, r1
 802276c:	1436      	asrs	r6, r6, #16
 802276e:	d464      	bmi.n	802283a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022770:	4576      	cmp	r6, lr
 8022772:	da62      	bge.n	802283a <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022774:	2b00      	cmp	r3, #0
 8022776:	f77f af2f 	ble.w	80225d8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802277a:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
 802277e:	f100 0e04 	add.w	lr, r0, #4
 8022782:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8022786:	e002      	b.n	802278e <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8022788:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802278a:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802278e:	140b      	asrs	r3, r1, #16
 8022790:	fb05 6303 	mla	r3, r5, r3, r6
 8022794:	1410      	asrs	r0, r2, #16
 8022796:	5c1b      	ldrb	r3, [r3, r0]
 8022798:	f108 38ff 	add.w	r8, r8, #4294967295
 802279c:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 80227a0:	4422      	add	r2, r4
 80227a2:	0e18      	lsrs	r0, r3, #24
 80227a4:	4459      	add	r1, fp
 80227a6:	d03e      	beq.n	8022826 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 80227a8:	9d03      	ldr	r5, [sp, #12]
 80227aa:	fa5f fc83 	uxtb.w	ip, r3
 80227ae:	fb05 f000 	mul.w	r0, r5, r0
 80227b2:	f100 0901 	add.w	r9, r0, #1
 80227b6:	eb09 2920 	add.w	r9, r9, r0, asr #8
 80227ba:	ea4f 2929 	mov.w	r9, r9, asr #8
 80227be:	ea6f 0009 	mvn.w	r0, r9
 80227c2:	fa1f f989 	uxth.w	r9, r9
 80227c6:	fb1c fc09 	smulbb	ip, ip, r9
 80227ca:	f3c3 2507 	ubfx	r5, r3, #8, #8
 80227ce:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80227d2:	fb15 fa09 	smulbb	sl, r5, r9
 80227d6:	fb13 f309 	smulbb	r3, r3, r9
 80227da:	f81e 9c04 	ldrb.w	r9, [lr, #-4]
 80227de:	b2c0      	uxtb	r0, r0
 80227e0:	fb09 cc00 	mla	ip, r9, r0, ip
 80227e4:	f81e 5c03 	ldrb.w	r5, [lr, #-3]
 80227e8:	f81e 9c02 	ldrb.w	r9, [lr, #-2]
 80227ec:	fb05 a500 	mla	r5, r5, r0, sl
 80227f0:	fb09 3300 	mla	r3, r9, r0, r3
 80227f4:	fa1f fc8c 	uxth.w	ip, ip
 80227f8:	b2ad      	uxth	r5, r5
 80227fa:	b29b      	uxth	r3, r3
 80227fc:	f10c 0a01 	add.w	sl, ip, #1
 8022800:	f105 0901 	add.w	r9, r5, #1
 8022804:	1c58      	adds	r0, r3, #1
 8022806:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 802280a:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 802280e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022812:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8022816:	122d      	asrs	r5, r5, #8
 8022818:	121b      	asrs	r3, r3, #8
 802281a:	f80e cc04 	strb.w	ip, [lr, #-4]
 802281e:	f80e 5c03 	strb.w	r5, [lr, #-3]
 8022822:	f80e 3c02 	strb.w	r3, [lr, #-2]
 8022826:	f1b8 3fff 	cmp.w	r8, #4294967295
 802282a:	f10e 0e04 	add.w	lr, lr, #4
 802282e:	d1ab      	bne.n	8022788 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8022830:	e9dd 0304 	ldrd	r0, r3, [sp, #16]
 8022834:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8022838:	e6ce      	b.n	80225d8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802283a:	2b00      	cmp	r3, #0
 802283c:	f77f aecc 	ble.w	80225d8 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022840:	1416      	asrs	r6, r2, #16
 8022842:	e708      	b.n	8022656 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfe>

08022844 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8022844:	4770      	bx	lr
 8022846:	bf00      	nop

08022848 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8022848:	4770      	bx	lr
 802284a:	bf00      	nop

0802284c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802284c:	4770      	bx	lr
 802284e:	bf00      	nop

08022850 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8022850:	4770      	bx	lr
 8022852:	bf00      	nop

08022854 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8022854:	4770      	bx	lr
 8022856:	bf00      	nop

08022858 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8022858:	4770      	bx	lr
 802285a:	bf00      	nop

0802285c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 802285c:	4770      	bx	lr
 802285e:	bf00      	nop

08022860 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8022860:	4770      	bx	lr
 8022862:	bf00      	nop

08022864 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8022864:	4770      	bx	lr
 8022866:	bf00      	nop

08022868 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8022868:	4770      	bx	lr
 802286a:	bf00      	nop

0802286c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802286c:	4770      	bx	lr
 802286e:	bf00      	nop

08022870 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8022870:	4770      	bx	lr
 8022872:	bf00      	nop

08022874 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8022874:	4770      	bx	lr
 8022876:	bf00      	nop

08022878 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8022878:	4770      	bx	lr
 802287a:	bf00      	nop

0802287c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 802287c:	4770      	bx	lr
 802287e:	bf00      	nop

08022880 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8022880:	4770      	bx	lr
 8022882:	bf00      	nop

08022884 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8022884:	4770      	bx	lr
 8022886:	bf00      	nop

08022888 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8022888:	4770      	bx	lr
 802288a:	bf00      	nop

0802288c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802288c:	4770      	bx	lr
 802288e:	bf00      	nop

08022890 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8022890:	4770      	bx	lr
 8022892:	bf00      	nop

08022894 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8022894:	4770      	bx	lr
 8022896:	bf00      	nop

08022898 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8022898:	4770      	bx	lr
 802289a:	bf00      	nop

0802289c <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv>:
 802289c:	b508      	push	{r3, lr}
 802289e:	4b0d      	ldr	r3, [pc, #52]	@ (80228d4 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x38>)
 80228a0:	881b      	ldrh	r3, [r3, #0]
 80228a2:	b17b      	cbz	r3, 80228c4 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x28>
 80228a4:	7b02      	ldrb	r2, [r0, #12]
 80228a6:	2a02      	cmp	r2, #2
 80228a8:	d007      	beq.n	80228ba <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x1e>
 80228aa:	2a01      	cmp	r2, #1
 80228ac:	bf0c      	ite	eq
 80228ae:	2003      	moveq	r0, #3
 80228b0:	2002      	movne	r0, #2
 80228b2:	fb13 f000 	smulbb	r0, r3, r0
 80228b6:	b280      	uxth	r0, r0
 80228b8:	bd08      	pop	{r3, pc}
 80228ba:	2004      	movs	r0, #4
 80228bc:	fb13 f000 	smulbb	r0, r3, r0
 80228c0:	b280      	uxth	r0, r0
 80228c2:	bd08      	pop	{r3, pc}
 80228c4:	4b04      	ldr	r3, [pc, #16]	@ (80228d8 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x3c>)
 80228c6:	4a05      	ldr	r2, [pc, #20]	@ (80228dc <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x40>)
 80228c8:	f240 110f 	movw	r1, #271	@ 0x10f
 80228cc:	4804      	ldr	r0, [pc, #16]	@ (80228e0 <_ZNK8touchgfx8LCDGPU2D17framebufferStrideEv+0x44>)
 80228ce:	f00f fe13 	bl	80324f8 <__assert_func>
 80228d2:	bf00      	nop
 80228d4:	20082f02 	.word	0x20082f02
 80228d8:	08036818 	.word	0x08036818
 80228dc:	08037fdc 	.word	0x08037fdc
 80228e0:	0803685c 	.word	0x0803685c

080228e4 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv>:
 80228e4:	b530      	push	{r4, r5, lr}
 80228e6:	4b26      	ldr	r3, [pc, #152]	@ (8022980 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x9c>)
 80228e8:	b083      	sub	sp, #12
 80228ea:	681c      	ldr	r4, [r3, #0]
 80228ec:	2c00      	cmp	r4, #0
 80228ee:	d040      	beq.n	8022972 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x8e>
 80228f0:	4b24      	ldr	r3, [pc, #144]	@ (8022984 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa0>)
 80228f2:	4605      	mov	r5, r0
 80228f4:	781b      	ldrb	r3, [r3, #0]
 80228f6:	b9f3      	cbnz	r3, 8022936 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x52>
 80228f8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80228fa:	7b2a      	ldrb	r2, [r5, #12]
 80228fc:	2a01      	cmp	r2, #1
 80228fe:	d025      	beq.n	802294c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x68>
 8022900:	d30d      	bcc.n	802291e <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x3a>
 8022902:	2a02      	cmp	r2, #2
 8022904:	d12f      	bne.n	8022966 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x82>
 8022906:	4920      	ldr	r1, [pc, #128]	@ (8022988 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 8022908:	4a20      	ldr	r2, [pc, #128]	@ (802298c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 802290a:	8809      	ldrh	r1, [r1, #0]
 802290c:	8812      	ldrh	r2, [r2, #0]
 802290e:	008c      	lsls	r4, r1, #2
 8022910:	4618      	mov	r0, r3
 8022912:	9400      	str	r4, [sp, #0]
 8022914:	2310      	movs	r3, #16
 8022916:	f7ee fb51 	bl	8010fbc <nema_bind_dst_tex>
 802291a:	b003      	add	sp, #12
 802291c:	bd30      	pop	{r4, r5, pc}
 802291e:	491a      	ldr	r1, [pc, #104]	@ (8022988 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 8022920:	4a1a      	ldr	r2, [pc, #104]	@ (802298c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 8022922:	8809      	ldrh	r1, [r1, #0]
 8022924:	8812      	ldrh	r2, [r2, #0]
 8022926:	004c      	lsls	r4, r1, #1
 8022928:	4618      	mov	r0, r3
 802292a:	9400      	str	r4, [sp, #0]
 802292c:	2304      	movs	r3, #4
 802292e:	f7ee fb45 	bl	8010fbc <nema_bind_dst_tex>
 8022932:	b003      	add	sp, #12
 8022934:	bd30      	pop	{r4, r5, pc}
 8022936:	6823      	ldr	r3, [r4, #0]
 8022938:	4620      	mov	r0, r4
 802293a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802293c:	4798      	blx	r3
 802293e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8022940:	4283      	cmp	r3, r0
 8022942:	d1da      	bne.n	80228fa <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x16>
 8022944:	7b2a      	ldrb	r2, [r5, #12]
 8022946:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8022948:	2a01      	cmp	r2, #1
 802294a:	d1d9      	bne.n	8022900 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0x1c>
 802294c:	490e      	ldr	r1, [pc, #56]	@ (8022988 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa4>)
 802294e:	4a0f      	ldr	r2, [pc, #60]	@ (802298c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xa8>)
 8022950:	8809      	ldrh	r1, [r1, #0]
 8022952:	8812      	ldrh	r2, [r2, #0]
 8022954:	eb01 0441 	add.w	r4, r1, r1, lsl #1
 8022958:	4618      	mov	r0, r3
 802295a:	9400      	str	r4, [sp, #0]
 802295c:	2339      	movs	r3, #57	@ 0x39
 802295e:	f7ee fb2d 	bl	8010fbc <nema_bind_dst_tex>
 8022962:	b003      	add	sp, #12
 8022964:	bd30      	pop	{r4, r5, pc}
 8022966:	4b0a      	ldr	r3, [pc, #40]	@ (8022990 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xac>)
 8022968:	4a0a      	ldr	r2, [pc, #40]	@ (8022994 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb0>)
 802296a:	2141      	movs	r1, #65	@ 0x41
 802296c:	480a      	ldr	r0, [pc, #40]	@ (8022998 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb4>)
 802296e:	f00f fdc3 	bl	80324f8 <__assert_func>
 8022972:	4b0a      	ldr	r3, [pc, #40]	@ (802299c <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xb8>)
 8022974:	4a0a      	ldr	r2, [pc, #40]	@ (80229a0 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xbc>)
 8022976:	217c      	movs	r1, #124	@ 0x7c
 8022978:	480a      	ldr	r0, [pc, #40]	@ (80229a4 <_ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv+0xc0>)
 802297a:	f00f fdbd 	bl	80324f8 <__assert_func>
 802297e:	bf00      	nop
 8022980:	200833a8 	.word	0x200833a8
 8022984:	20082f06 	.word	0x20082f06
 8022988:	20082f02 	.word	0x20082f02
 802298c:	20082f04 	.word	0x20082f04
 8022990:	08036298 	.word	0x08036298
 8022994:	08036e10 	.word	0x08036e10
 8022998:	080362e0 	.word	0x080362e0
 802299c:	0803623c 	.word	0x0803623c
 80229a0:	08036aa8 	.word	0x08036aa8
 80229a4:	08036264 	.word	0x08036264

080229a8 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh>:
 80229a8:	2b00      	cmp	r3, #0
 80229aa:	d05b      	beq.n	8022a64 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbc>
 80229ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80229b0:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 80229b4:	b085      	sub	sp, #20
 80229b6:	2c00      	cmp	r4, #0
 80229b8:	dd51      	ble.n	8022a5e <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb6>
 80229ba:	f9b1 4006 	ldrsh.w	r4, [r1, #6]
 80229be:	2c00      	cmp	r4, #0
 80229c0:	dd4d      	ble.n	8022a5e <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xb6>
 80229c2:	4616      	mov	r6, r2
 80229c4:	4605      	mov	r5, r0
 80229c6:	6808      	ldr	r0, [r1, #0]
 80229c8:	6849      	ldr	r1, [r1, #4]
 80229ca:	461c      	mov	r4, r3
 80229cc:	4f29      	ldr	r7, [pc, #164]	@ (8022a74 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xcc>)
 80229ce:	ab02      	add	r3, sp, #8
 80229d0:	c303      	stmia	r3!, {r0, r1}
 80229d2:	a802      	add	r0, sp, #8
 80229d4:	f7ea f9b4 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80229d8:	6838      	ldr	r0, [r7, #0]
 80229da:	f3c6 4807 	ubfx	r8, r6, #16, #8
 80229de:	f3c6 2907 	ubfx	r9, r6, #8, #8
 80229e2:	b2f6      	uxtb	r6, r6
 80229e4:	2800      	cmp	r0, #0
 80229e6:	d03e      	beq.n	8022a66 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbe>
 80229e8:	f7fe f8f6 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80229ec:	682b      	ldr	r3, [r5, #0]
 80229ee:	4628      	mov	r0, r5
 80229f0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80229f2:	4798      	blx	r3
 80229f4:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 80229f8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80229fc:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8022a00:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8022a04:	f7ee f970 	bl	8010ce8 <nema_set_clip>
 8022a08:	f04f 33ff 	mov.w	r3, #4294967295
 8022a0c:	2cff      	cmp	r4, #255	@ 0xff
 8022a0e:	bf0c      	ite	eq
 8022a10:	2001      	moveq	r0, #1
 8022a12:	4819      	ldrne	r0, [pc, #100]	@ (8022a78 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd0>)
 8022a14:	461a      	mov	r2, r3
 8022a16:	2100      	movs	r1, #0
 8022a18:	f7fb fb02 	bl	801e020 <nema_set_blend>
 8022a1c:	2200      	movs	r2, #0
 8022a1e:	4623      	mov	r3, r4
 8022a20:	4611      	mov	r1, r2
 8022a22:	4610      	mov	r0, r2
 8022a24:	f7ee fa3e 	bl	8010ea4 <nema_rgba>
 8022a28:	f7fb fec0 	bl	801e7ac <nema_set_const_color>
 8022a2c:	4632      	mov	r2, r6
 8022a2e:	4649      	mov	r1, r9
 8022a30:	4640      	mov	r0, r8
 8022a32:	23ff      	movs	r3, #255	@ 0xff
 8022a34:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8022a38:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 8022a3c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8022a40:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8022a44:	f7ee fa2e 	bl	8010ea4 <nema_rgba>
 8022a48:	4643      	mov	r3, r8
 8022a4a:	9000      	str	r0, [sp, #0]
 8022a4c:	4632      	mov	r2, r6
 8022a4e:	4620      	mov	r0, r4
 8022a50:	4629      	mov	r1, r5
 8022a52:	f7ee fc77 	bl	8011344 <nema_fill_rect>
 8022a56:	6838      	ldr	r0, [r7, #0]
 8022a58:	b128      	cbz	r0, 8022a66 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xbe>
 8022a5a:	f7fe f8dd 	bl	8020c18 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8022a5e:	b005      	add	sp, #20
 8022a60:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022a64:	4770      	bx	lr
 8022a66:	4b05      	ldr	r3, [pc, #20]	@ (8022a7c <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd4>)
 8022a68:	4a05      	ldr	r2, [pc, #20]	@ (8022a80 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xd8>)
 8022a6a:	217c      	movs	r1, #124	@ 0x7c
 8022a6c:	4805      	ldr	r0, [pc, #20]	@ (8022a84 <_ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh+0xdc>)
 8022a6e:	f00f fd43 	bl	80324f8 <__assert_func>
 8022a72:	bf00      	nop
 8022a74:	200833a8 	.word	0x200833a8
 8022a78:	08000504 	.word	0x08000504
 8022a7c:	0803623c 	.word	0x0803623c
 8022a80:	08036aa8 	.word	0x08036aa8
 8022a84:	08036264 	.word	0x08036264

08022a88 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8022a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a8c:	b085      	sub	sp, #20
 8022a8e:	f89d 403c 	ldrb.w	r4, [sp, #60]	@ 0x3c
 8022a92:	2c00      	cmp	r4, #0
 8022a94:	d063      	beq.n	8022b5e <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022a96:	f9b3 5004 	ldrsh.w	r5, [r3, #4]
 8022a9a:	2d00      	cmp	r5, #0
 8022a9c:	dd5f      	ble.n	8022b5e <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022a9e:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8022aa2:	2d00      	cmp	r5, #0
 8022aa4:	dd5b      	ble.n	8022b5e <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd6>
 8022aa6:	460f      	mov	r7, r1
 8022aa8:	4606      	mov	r6, r0
 8022aaa:	6859      	ldr	r1, [r3, #4]
 8022aac:	6818      	ldr	r0, [r3, #0]
 8022aae:	f8df 9124 	ldr.w	r9, [pc, #292]	@ 8022bd4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14c>
 8022ab2:	ab02      	add	r3, sp, #8
 8022ab4:	c303      	stmia	r3!, {r0, r1}
 8022ab6:	a802      	add	r0, sp, #8
 8022ab8:	4690      	mov	r8, r2
 8022aba:	f7ea f941 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022abe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022ac0:	f8d9 0000 	ldr.w	r0, [r9]
 8022ac4:	f3c3 4a07 	ubfx	sl, r3, #16, #8
 8022ac8:	f3c3 2b07 	ubfx	fp, r3, #8, #8
 8022acc:	b2dd      	uxtb	r5, r3
 8022ace:	2800      	cmp	r0, #0
 8022ad0:	d060      	beq.n	8022b94 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10c>
 8022ad2:	f7fe f881 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022ad6:	7b33      	ldrb	r3, [r6, #12]
 8022ad8:	2b01      	cmp	r3, #1
 8022ada:	d043      	beq.n	8022b64 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xdc>
 8022adc:	d34e      	bcc.n	8022b7c <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xf4>
 8022ade:	2b02      	cmp	r3, #2
 8022ae0:	d15e      	bne.n	8022ba0 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 8022ae2:	4b33      	ldr	r3, [pc, #204]	@ (8022bb0 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022ae4:	4a33      	ldr	r2, [pc, #204]	@ (8022bb4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022ae6:	8819      	ldrh	r1, [r3, #0]
 8022ae8:	ea4f 0388 	mov.w	r3, r8, lsl #2
 8022aec:	8812      	ldrh	r2, [r2, #0]
 8022aee:	4638      	mov	r0, r7
 8022af0:	9300      	str	r3, [sp, #0]
 8022af2:	2310      	movs	r3, #16
 8022af4:	f7ee fa62 	bl	8010fbc <nema_bind_dst_tex>
 8022af8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8022afc:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8022b00:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8022b04:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 8022b08:	f7ee f8ee 	bl	8010ce8 <nema_set_clip>
 8022b0c:	f04f 33ff 	mov.w	r3, #4294967295
 8022b10:	2100      	movs	r1, #0
 8022b12:	461a      	mov	r2, r3
 8022b14:	4828      	ldr	r0, [pc, #160]	@ (8022bb8 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x130>)
 8022b16:	f7fb fa83 	bl	801e020 <nema_set_blend>
 8022b1a:	2200      	movs	r2, #0
 8022b1c:	4623      	mov	r3, r4
 8022b1e:	4611      	mov	r1, r2
 8022b20:	4610      	mov	r0, r2
 8022b22:	f7ee f9bf 	bl	8010ea4 <nema_rgba>
 8022b26:	f7fb fe41 	bl	801e7ac <nema_set_const_color>
 8022b2a:	462a      	mov	r2, r5
 8022b2c:	4659      	mov	r1, fp
 8022b2e:	23ff      	movs	r3, #255	@ 0xff
 8022b30:	4650      	mov	r0, sl
 8022b32:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8022b36:	f9bd 500a 	ldrsh.w	r5, [sp, #10]
 8022b3a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8022b3e:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8022b42:	f7ee f9af 	bl	8010ea4 <nema_rgba>
 8022b46:	463b      	mov	r3, r7
 8022b48:	9000      	str	r0, [sp, #0]
 8022b4a:	4632      	mov	r2, r6
 8022b4c:	4620      	mov	r0, r4
 8022b4e:	4629      	mov	r1, r5
 8022b50:	f7ee fbf8 	bl	8011344 <nema_fill_rect>
 8022b54:	f8d9 0000 	ldr.w	r0, [r9]
 8022b58:	b1e0      	cbz	r0, 8022b94 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10c>
 8022b5a:	f7fe f85d 	bl	8020c18 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8022b5e:	b005      	add	sp, #20
 8022b60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022b64:	4b12      	ldr	r3, [pc, #72]	@ (8022bb0 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022b66:	4a13      	ldr	r2, [pc, #76]	@ (8022bb4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022b68:	8819      	ldrh	r1, [r3, #0]
 8022b6a:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 8022b6e:	8812      	ldrh	r2, [r2, #0]
 8022b70:	4638      	mov	r0, r7
 8022b72:	9300      	str	r3, [sp, #0]
 8022b74:	2339      	movs	r3, #57	@ 0x39
 8022b76:	f7ee fa21 	bl	8010fbc <nema_bind_dst_tex>
 8022b7a:	e7bd      	b.n	8022af8 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8022b7c:	4b0c      	ldr	r3, [pc, #48]	@ (8022bb0 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>)
 8022b7e:	4a0d      	ldr	r2, [pc, #52]	@ (8022bb4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>)
 8022b80:	8819      	ldrh	r1, [r3, #0]
 8022b82:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8022b86:	8812      	ldrh	r2, [r2, #0]
 8022b88:	4638      	mov	r0, r7
 8022b8a:	9300      	str	r3, [sp, #0]
 8022b8c:	2304      	movs	r3, #4
 8022b8e:	f7ee fa15 	bl	8010fbc <nema_bind_dst_tex>
 8022b92:	e7b1      	b.n	8022af8 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8022b94:	4b09      	ldr	r3, [pc, #36]	@ (8022bbc <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x134>)
 8022b96:	4a0a      	ldr	r2, [pc, #40]	@ (8022bc0 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x138>)
 8022b98:	217c      	movs	r1, #124	@ 0x7c
 8022b9a:	480a      	ldr	r0, [pc, #40]	@ (8022bc4 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>)
 8022b9c:	f00f fcac 	bl	80324f8 <__assert_func>
 8022ba0:	4b09      	ldr	r3, [pc, #36]	@ (8022bc8 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x140>)
 8022ba2:	4a0a      	ldr	r2, [pc, #40]	@ (8022bcc <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>)
 8022ba4:	f240 11a5 	movw	r1, #421	@ 0x1a5
 8022ba8:	4809      	ldr	r0, [pc, #36]	@ (8022bd0 <_ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>)
 8022baa:	f00f fca5 	bl	80324f8 <__assert_func>
 8022bae:	bf00      	nop
 8022bb0:	20082f02 	.word	0x20082f02
 8022bb4:	20082f04 	.word	0x20082f04
 8022bb8:	08000504 	.word	0x08000504
 8022bbc:	0803623c 	.word	0x0803623c
 8022bc0:	08036aa8 	.word	0x08036aa8
 8022bc4:	08036264 	.word	0x08036264
 8022bc8:	08036298 	.word	0x08036298
 8022bcc:	08036b64 	.word	0x08036b64
 8022bd0:	080362e0 	.word	0x080362e0
 8022bd4:	200833a8 	.word	0x200833a8

08022bd8 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8022bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022bdc:	b091      	sub	sp, #68	@ 0x44
 8022bde:	f89d 108c 	ldrb.w	r1, [sp, #140]	@ 0x8c
 8022be2:	ac0a      	add	r4, sp, #40	@ 0x28
 8022be4:	e884 000c 	stmia.w	r4, {r2, r3}
 8022be8:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8022bec:	1e4f      	subs	r7, r1, #1
 8022bee:	fa5f fc87 	uxtb.w	ip, r7
 8022bf2:	4682      	mov	sl, r0
 8022bf4:	9303      	str	r3, [sp, #12]
 8022bf6:	f89d 0090 	ldrb.w	r0, [sp, #144]	@ 0x90
 8022bfa:	f8bd 3074 	ldrh.w	r3, [sp, #116]	@ 0x74
 8022bfe:	f1bc 0f01 	cmp.w	ip, #1
 8022c02:	9304      	str	r3, [sp, #16]
 8022c04:	f9bd 8068 	ldrsh.w	r8, [sp, #104]	@ 0x68
 8022c08:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	@ 0x6c
 8022c0c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8022c0e:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
 8022c12:	9005      	str	r0, [sp, #20]
 8022c14:	f89d 6094 	ldrb.w	r6, [sp, #148]	@ 0x94
 8022c18:	d905      	bls.n	8022c26 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4e>
 8022c1a:	2904      	cmp	r1, #4
 8022c1c:	f000 80d0 	beq.w	8022dc0 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 8022c20:	2908      	cmp	r1, #8
 8022c22:	f040 816f 	bne.w	8022f04 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32c>
 8022c26:	7b53      	ldrb	r3, [r2, #13]
 8022c28:	7990      	ldrb	r0, [r2, #6]
 8022c2a:	0159      	lsls	r1, r3, #5
 8022c2c:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8022c30:	ea50 0901 	orrs.w	r9, r0, r1
 8022c34:	f000 80c1 	beq.w	8022dba <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 8022c38:	011b      	lsls	r3, r3, #4
 8022c3a:	79d0      	ldrb	r0, [r2, #7]
 8022c3c:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8022c40:	ea50 0301 	orrs.w	r3, r0, r1
 8022c44:	9306      	str	r3, [sp, #24]
 8022c46:	f000 80b8 	beq.w	8022dba <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e2>
 8022c4a:	f992 3009 	ldrsb.w	r3, [r2, #9]
 8022c4e:	9a03      	ldr	r2, [sp, #12]
 8022c50:	b29b      	uxth	r3, r3
 8022c52:	2a00      	cmp	r2, #0
 8022c54:	f040 80be 	bne.w	8022dd4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fc>
 8022c58:	4498      	add	r8, r3
 8022c5a:	fa0f f888 	sxth.w	r8, r8
 8022c5e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022c60:	f9b3 3000 	ldrsh.w	r3, [r3]
 8022c64:	4543      	cmp	r3, r8
 8022c66:	dd06      	ble.n	8022c76 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x9e>
 8022c68:	9a03      	ldr	r2, [sp, #12]
 8022c6a:	441a      	add	r2, r3
 8022c6c:	eba2 0508 	sub.w	r5, r2, r8
 8022c70:	4698      	mov	r8, r3
 8022c72:	b2ab      	uxth	r3, r5
 8022c74:	9303      	str	r3, [sp, #12]
 8022c76:	f8df c30c 	ldr.w	ip, [pc, #780]	@ 8022f84 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8022c7a:	465a      	mov	r2, fp
 8022c7c:	f89c 5000 	ldrb.w	r5, [ip]
 8022c80:	4641      	mov	r1, r8
 8022c82:	4633      	mov	r3, r6
 8022c84:	4620      	mov	r0, r4
 8022c86:	9507      	str	r5, [sp, #28]
 8022c88:	f7e9 fece 	bl	800ca28 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8022c8c:	465a      	mov	r2, fp
 8022c8e:	4641      	mov	r1, r8
 8022c90:	4633      	mov	r3, r6
 8022c92:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8022c96:	4620      	mov	r0, r4
 8022c98:	f7e9 fee3 	bl	800ca62 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8022c9c:	a910      	add	r1, sp, #64	@ 0x40
 8022c9e:	f821 0d0a 	strh.w	r0, [r1, #-10]!
 8022ca2:	a80d      	add	r0, sp, #52	@ 0x34
 8022ca4:	f7ea f80a 	bl	800ccbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8022ca8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022caa:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8022cae:	9308      	str	r3, [sp, #32]
 8022cb0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022cb2:	f3c3 2b07 	ubfx	fp, r3, #8, #8
 8022cb6:	fa5f f883 	uxtb.w	r8, r3
 8022cba:	2f07      	cmp	r7, #7
 8022cbc:	f200 811f 	bhi.w	8022efe <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x326>
 8022cc0:	e8df f017 	tbh	[pc, r7, lsl #1]
 8022cc4:	009b00a1 	.word	0x009b00a1
 8022cc8:	0095011d 	.word	0x0095011d
 8022ccc:	011d011d 	.word	0x011d011d
 8022cd0:	0008011d 	.word	0x0008011d
 8022cd4:	2708      	movs	r7, #8
 8022cd6:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
 8022cda:	4ca1      	ldr	r4, [pc, #644]	@ (8022f60 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8022cdc:	6820      	ldr	r0, [r4, #0]
 8022cde:	2800      	cmp	r0, #0
 8022ce0:	f000 8137 	beq.w	8022f52 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8022ce4:	f7fd ff78 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8022ce8:	f8da 3000 	ldr.w	r3, [sl]
 8022cec:	4650      	mov	r0, sl
 8022cee:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8022cf0:	4798      	blx	r3
 8022cf2:	2e02      	cmp	r6, #2
 8022cf4:	f000 80e6 	beq.w	8022ec4 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 8022cf8:	2e03      	cmp	r6, #3
 8022cfa:	f000 80c7 	beq.w	8022e8c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b4>
 8022cfe:	2e01      	cmp	r6, #1
 8022d00:	f000 80a8 	beq.w	8022e54 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27c>
 8022d04:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022d06:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8022d0a:	8819      	ldrh	r1, [r3, #0]
 8022d0c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022d10:	440a      	add	r2, r1
 8022d12:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022d14:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8022d18:	8848      	ldrh	r0, [r1, #2]
 8022d1a:	6849      	ldr	r1, [r1, #4]
 8022d1c:	4403      	add	r3, r0
 8022d1e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8022d22:	910f      	str	r1, [sp, #60]	@ 0x3c
 8022d24:	a80e      	add	r0, sp, #56	@ 0x38
 8022d26:	f7ea f80b 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022d2a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8022d2e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8022d32:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8022d36:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8022d3a:	f7ed ffd5 	bl	8010ce8 <nema_set_clip>
 8022d3e:	2200      	movs	r2, #0
 8022d40:	9d05      	ldr	r5, [sp, #20]
 8022d42:	4611      	mov	r1, r2
 8022d44:	462b      	mov	r3, r5
 8022d46:	4610      	mov	r0, r2
 8022d48:	f7ee f8ac 	bl	8010ea4 <nema_rgba>
 8022d4c:	f7fb fd2e 	bl	801e7ac <nema_set_const_color>
 8022d50:	462b      	mov	r3, r5
 8022d52:	4642      	mov	r2, r8
 8022d54:	4659      	mov	r1, fp
 8022d56:	9808      	ldr	r0, [sp, #32]
 8022d58:	f7ee f8a4 	bl	8010ea4 <nema_rgba>
 8022d5c:	f7ed ffb8 	bl	8010cd0 <nema_set_tex_color>
 8022d60:	f04f 33ff 	mov.w	r3, #4294967295
 8022d64:	2201      	movs	r2, #1
 8022d66:	2100      	movs	r1, #0
 8022d68:	487e      	ldr	r0, [pc, #504]	@ (8022f64 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
 8022d6a:	f7fb f959 	bl	801e020 <nema_set_blend>
 8022d6e:	2200      	movs	r2, #0
 8022d70:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022d72:	9201      	str	r2, [sp, #4]
 8022d74:	9300      	str	r3, [sp, #0]
 8022d76:	4649      	mov	r1, r9
 8022d78:	463b      	mov	r3, r7
 8022d7a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8022d7c:	9a06      	ldr	r2, [sp, #24]
 8022d7e:	f7ee f899 	bl	8010eb4 <nema_bind_src_tex>
 8022d82:	9b07      	ldr	r3, [sp, #28]
 8022d84:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8022d88:	2b01      	cmp	r3, #1
 8022d8a:	f9bd 1036 	ldrsh.w	r1, [sp, #54]	@ 0x36
 8022d8e:	d040      	beq.n	8022e12 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x23a>
 8022d90:	2e02      	cmp	r6, #2
 8022d92:	d051      	beq.n	8022e38 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8022d94:	2e03      	cmp	r6, #3
 8022d96:	f000 80c7 	beq.w	8022f28 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x350>
 8022d9a:	2e01      	cmp	r6, #1
 8022d9c:	9b04      	ldr	r3, [sp, #16]
 8022d9e:	f000 80b8 	beq.w	8022f12 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33a>
 8022da2:	1ac9      	subs	r1, r1, r3
 8022da4:	9b03      	ldr	r3, [sp, #12]
 8022da6:	1ac0      	subs	r0, r0, r3
 8022da8:	f7ee fade 	bl	8011368 <nema_blit>
 8022dac:	6823      	ldr	r3, [r4, #0]
 8022dae:	2b00      	cmp	r3, #0
 8022db0:	f000 80cf 	beq.w	8022f52 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8022db4:	2201      	movs	r2, #1
 8022db6:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8022dba:	b011      	add	sp, #68	@ 0x44
 8022dbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022dc0:	2b00      	cmp	r3, #0
 8022dc2:	f47f af30 	bne.w	8022c26 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4e>
 8022dc6:	4b68      	ldr	r3, [pc, #416]	@ (8022f68 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>)
 8022dc8:	4a68      	ldr	r2, [pc, #416]	@ (8022f6c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8022dca:	f240 11bb 	movw	r1, #443	@ 0x1bb
 8022dce:	4868      	ldr	r0, [pc, #416]	@ (8022f70 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8022dd0:	f00f fb92 	bl	80324f8 <__assert_func>
 8022dd4:	1ad5      	subs	r5, r2, r3
 8022dd6:	b2ab      	uxth	r3, r5
 8022dd8:	041a      	lsls	r2, r3, #16
 8022dda:	9303      	str	r3, [sp, #12]
 8022ddc:	f57f af3f 	bpl.w	8022c5e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 8022de0:	eba8 0803 	sub.w	r8, r8, r3
 8022de4:	2300      	movs	r3, #0
 8022de6:	fa0f f888 	sxth.w	r8, r8
 8022dea:	9303      	str	r3, [sp, #12]
 8022dec:	e737      	b.n	8022c5e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x86>
 8022dee:	f109 0301 	add.w	r3, r9, #1
 8022df2:	105b      	asrs	r3, r3, #1
 8022df4:	9309      	str	r3, [sp, #36]	@ 0x24
 8022df6:	2729      	movs	r7, #41	@ 0x29
 8022df8:	e76f      	b.n	8022cda <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022dfa:	f109 0303 	add.w	r3, r9, #3
 8022dfe:	109b      	asrs	r3, r3, #2
 8022e00:	9309      	str	r3, [sp, #36]	@ 0x24
 8022e02:	2728      	movs	r7, #40	@ 0x28
 8022e04:	e769      	b.n	8022cda <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022e06:	f109 0307 	add.w	r3, r9, #7
 8022e0a:	10db      	asrs	r3, r3, #3
 8022e0c:	9309      	str	r3, [sp, #36]	@ 0x24
 8022e0e:	2727      	movs	r7, #39	@ 0x27
 8022e10:	e763      	b.n	8022cda <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022e12:	2e02      	cmp	r6, #2
 8022e14:	f000 8093 	beq.w	8022f3e <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x366>
 8022e18:	2e03      	cmp	r6, #3
 8022e1a:	d00d      	beq.n	8022e38 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8022e1c:	2e01      	cmp	r6, #1
 8022e1e:	f000 8091 	beq.w	8022f44 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x36c>
 8022e22:	461a      	mov	r2, r3
 8022e24:	9b03      	ldr	r3, [sp, #12]
 8022e26:	4419      	add	r1, r3
 8022e28:	9b04      	ldr	r3, [sp, #16]
 8022e2a:	eba1 0109 	sub.w	r1, r1, r9
 8022e2e:	3101      	adds	r1, #1
 8022e30:	1ac0      	subs	r0, r0, r3
 8022e32:	f7ee fab3 	bl	801139c <nema_blit_rotate>
 8022e36:	e7b9      	b.n	8022dac <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022e38:	9b04      	ldr	r3, [sp, #16]
 8022e3a:	2202      	movs	r2, #2
 8022e3c:	4419      	add	r1, r3
 8022e3e:	9b03      	ldr	r3, [sp, #12]
 8022e40:	4418      	add	r0, r3
 8022e42:	9b06      	ldr	r3, [sp, #24]
 8022e44:	eba0 0009 	sub.w	r0, r0, r9
 8022e48:	1ac9      	subs	r1, r1, r3
 8022e4a:	3101      	adds	r1, #1
 8022e4c:	3001      	adds	r0, #1
 8022e4e:	f7ee faa5 	bl	801139c <nema_blit_rotate>
 8022e52:	e7ab      	b.n	8022dac <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022e54:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8022e58:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8022e5c:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022e5e:	440b      	add	r3, r1
 8022e60:	8852      	ldrh	r2, [r2, #2]
 8022e62:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022e64:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022e66:	1a9b      	subs	r3, r3, r2
 8022e68:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 8022e6c:	f8b0 c000 	ldrh.w	ip, [r0]
 8022e70:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8022e74:	8880      	ldrh	r0, [r0, #4]
 8022e76:	1a5b      	subs	r3, r3, r1
 8022e78:	4462      	add	r2, ip
 8022e7a:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8022e7e:	f8ad 103c 	strh.w	r1, [sp, #60]	@ 0x3c
 8022e82:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8022e86:	f8ad 003e 	strh.w	r0, [sp, #62]	@ 0x3e
 8022e8a:	e74b      	b.n	8022d24 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8022e8c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8022e90:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022e94:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022e96:	440b      	add	r3, r1
 8022e98:	8812      	ldrh	r2, [r2, #0]
 8022e9a:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022e9c:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022e9e:	1a9b      	subs	r3, r3, r2
 8022ea0:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 8022ea4:	f8b0 c002 	ldrh.w	ip, [r0, #2]
 8022ea8:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8022eac:	88c0      	ldrh	r0, [r0, #6]
 8022eae:	1a5b      	subs	r3, r3, r1
 8022eb0:	4462      	add	r2, ip
 8022eb2:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8022eb6:	f8ad 103e 	strh.w	r1, [sp, #62]	@ 0x3e
 8022eba:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8022ebe:	f8ad 003c 	strh.w	r0, [sp, #60]	@ 0x3c
 8022ec2:	e72f      	b.n	8022d24 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8022ec4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8022ec8:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8022ecc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022ed0:	440a      	add	r2, r1
 8022ed2:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022ed4:	8808      	ldrh	r0, [r1, #0]
 8022ed6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8022eda:	1a12      	subs	r2, r2, r0
 8022edc:	440b      	add	r3, r1
 8022ede:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022ee0:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022ee2:	8849      	ldrh	r1, [r1, #2]
 8022ee4:	8880      	ldrh	r0, [r0, #4]
 8022ee6:	1a5b      	subs	r3, r3, r1
 8022ee8:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8022eea:	1a12      	subs	r2, r2, r0
 8022eec:	88c8      	ldrh	r0, [r1, #6]
 8022eee:	6849      	ldr	r1, [r1, #4]
 8022ef0:	1a1b      	subs	r3, r3, r0
 8022ef2:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8022ef6:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8022efa:	910f      	str	r1, [sp, #60]	@ 0x3c
 8022efc:	e712      	b.n	8022d24 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x14c>
 8022efe:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8022f02:	e6ea      	b.n	8022cda <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8022f04:	4b1b      	ldr	r3, [pc, #108]	@ (8022f74 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8022f06:	4a19      	ldr	r2, [pc, #100]	@ (8022f6c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8022f08:	f44f 71dd 	mov.w	r1, #442	@ 0x1ba
 8022f0c:	4818      	ldr	r0, [pc, #96]	@ (8022f70 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8022f0e:	f00f faf3 	bl	80324f8 <__assert_func>
 8022f12:	4403      	add	r3, r0
 8022f14:	4618      	mov	r0, r3
 8022f16:	9b06      	ldr	r3, [sp, #24]
 8022f18:	2203      	movs	r2, #3
 8022f1a:	1ac0      	subs	r0, r0, r3
 8022f1c:	9b03      	ldr	r3, [sp, #12]
 8022f1e:	3001      	adds	r0, #1
 8022f20:	1ac9      	subs	r1, r1, r3
 8022f22:	f7ee fa3b 	bl	801139c <nema_blit_rotate>
 8022f26:	e741      	b.n	8022dac <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022f28:	9b03      	ldr	r3, [sp, #12]
 8022f2a:	2201      	movs	r2, #1
 8022f2c:	4419      	add	r1, r3
 8022f2e:	9b04      	ldr	r3, [sp, #16]
 8022f30:	eba1 0109 	sub.w	r1, r1, r9
 8022f34:	3101      	adds	r1, #1
 8022f36:	1ac0      	subs	r0, r0, r3
 8022f38:	f7ee fa30 	bl	801139c <nema_blit_rotate>
 8022f3c:	e736      	b.n	8022dac <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022f3e:	9b04      	ldr	r3, [sp, #16]
 8022f40:	4418      	add	r0, r3
 8022f42:	e7e8      	b.n	8022f16 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33e>
 8022f44:	9b04      	ldr	r3, [sp, #16]
 8022f46:	1ac9      	subs	r1, r1, r3
 8022f48:	9b03      	ldr	r3, [sp, #12]
 8022f4a:	1ac0      	subs	r0, r0, r3
 8022f4c:	f7ee fa0c 	bl	8011368 <nema_blit>
 8022f50:	e72c      	b.n	8022dac <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d4>
 8022f52:	4b09      	ldr	r3, [pc, #36]	@ (8022f78 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8022f54:	4a09      	ldr	r2, [pc, #36]	@ (8022f7c <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8022f56:	217c      	movs	r1, #124	@ 0x7c
 8022f58:	4809      	ldr	r0, [pc, #36]	@ (8022f80 <_ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8022f5a:	f00f facd 	bl	80324f8 <__assert_func>
 8022f5e:	bf00      	nop
 8022f60:	200833a8 	.word	0x200833a8
 8022f64:	08000504 	.word	0x08000504
 8022f68:	080367b0 	.word	0x080367b0
 8022f6c:	08037ee4 	.word	0x08037ee4
 8022f70:	080362e0 	.word	0x080362e0
 8022f74:	08036720 	.word	0x08036720
 8022f78:	0803623c 	.word	0x0803623c
 8022f7c:	08036aa8 	.word	0x08036aa8
 8022f80:	08036264 	.word	0x08036264
 8022f84:	20082f00 	.word	0x20082f00

08022f88 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8022f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f8c:	ed2d 8b08 	vpush	{d8-d11}
 8022f90:	b08b      	sub	sp, #44	@ 0x2c
 8022f92:	f89d 707c 	ldrb.w	r7, [sp, #124]	@ 0x7c
 8022f96:	e9dd 951c 	ldrd	r9, r5, [sp, #112]	@ 0x70
 8022f9a:	f8bd 8078 	ldrh.w	r8, [sp, #120]	@ 0x78
 8022f9e:	f8bd e080 	ldrh.w	lr, [sp, #128]	@ 0x80
 8022fa2:	2f00      	cmp	r7, #0
 8022fa4:	d067      	beq.n	8023076 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8022fa6:	f9b5 a004 	ldrsh.w	sl, [r5, #4]
 8022faa:	f1ba 0f00 	cmp.w	sl, #0
 8022fae:	dd62      	ble.n	8023076 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8022fb0:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8022fb4:	f1ba 0f00 	cmp.w	sl, #0
 8022fb8:	dd5d      	ble.n	8023076 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8022fba:	f3c8 0a87 	ubfx	sl, r8, #2, #8
 8022fbe:	f1ba 0f0b 	cmp.w	sl, #11
 8022fc2:	d05d      	beq.n	8023080 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xf8>
 8022fc4:	461c      	mov	r4, r3
 8022fc6:	4bcd      	ldr	r3, [pc, #820]	@ (80232fc <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x374>)
 8022fc8:	4616      	mov	r6, r2
 8022fca:	781b      	ldrb	r3, [r3, #0]
 8022fcc:	6862      	ldr	r2, [r4, #4]
 8022fce:	2b01      	cmp	r3, #1
 8022fd0:	9205      	str	r2, [sp, #20]
 8022fd2:	4684      	mov	ip, r0
 8022fd4:	e9d4 b202 	ldrd	fp, r2, [r4, #8]
 8022fd8:	9202      	str	r2, [sp, #8]
 8022fda:	d102      	bne.n	8022fe2 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5a>
 8022fdc:	f8cd b008 	str.w	fp, [sp, #8]
 8022fe0:	4693      	mov	fp, r2
 8022fe2:	f1ba 0f0d 	cmp.w	sl, #13
 8022fe6:	d03d      	beq.n	8023064 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xdc>
 8022fe8:	4623      	mov	r3, r4
 8022fea:	4cc5      	ldr	r4, [pc, #788]	@ (8023300 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x378>)
 8022fec:	6820      	ldr	r0, [r4, #0]
 8022fee:	2800      	cmp	r0, #0
 8022ff0:	f000 8243 	beq.w	802347a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 8022ff4:	681b      	ldr	r3, [r3, #0]
 8022ff6:	f8cd c010 	str.w	ip, [sp, #16]
 8022ffa:	9303      	str	r3, [sp, #12]
 8022ffc:	f7fd fdec 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8023000:	9a04      	ldr	r2, [sp, #16]
 8023002:	6813      	ldr	r3, [r2, #0]
 8023004:	4610      	mov	r0, r2
 8023006:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8023008:	4798      	blx	r3
 802300a:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 802300e:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8023012:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8023016:	f9b5 0000 	ldrsh.w	r0, [r5]
 802301a:	f7ed fe65 	bl	8010ce8 <nema_set_clip>
 802301e:	2200      	movs	r2, #0
 8023020:	463b      	mov	r3, r7
 8023022:	4611      	mov	r1, r2
 8023024:	4610      	mov	r0, r2
 8023026:	f7ed ff3d 	bl	8010ea4 <nema_rgba>
 802302a:	f7fb fbbf 	bl	801e7ac <nema_set_const_color>
 802302e:	f04f 33ff 	mov.w	r3, #4294967295
 8023032:	2201      	movs	r2, #1
 8023034:	2100      	movs	r1, #0
 8023036:	48b3      	ldr	r0, [pc, #716]	@ (8023304 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x37c>)
 8023038:	f7fa fff2 	bl	801e020 <nema_set_blend>
 802303c:	f1ba 0f0d 	cmp.w	sl, #13
 8023040:	f200 8221 	bhi.w	8023486 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4fe>
 8023044:	e8df f01a 	tbh	[pc, sl, lsl #1]
 8023048:	01720027 	.word	0x01720027
 802304c:	021f0170 	.word	0x021f0170
 8023050:	021f021f 	.word	0x021f021f
 8023054:	021f021f 	.word	0x021f021f
 8023058:	021f021f 	.word	0x021f021f
 802305c:	021f021f 	.word	0x021f021f
 8023060:	01570162 	.word	0x01570162
 8023064:	9b05      	ldr	r3, [sp, #20]
 8023066:	b133      	cbz	r3, 8023076 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xee>
 8023068:	781b      	ldrb	r3, [r3, #0]
 802306a:	f1a3 0216 	sub.w	r2, r3, #22
 802306e:	2a01      	cmp	r2, #1
 8023070:	d9ba      	bls.n	8022fe8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x60>
 8023072:	2b12      	cmp	r3, #18
 8023074:	d0b8      	beq.n	8022fe8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x60>
 8023076:	b00b      	add	sp, #44	@ 0x2c
 8023078:	ecbd 8b08 	vpop	{d8-d11}
 802307c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023080:	e9cd 7e1f 	strd	r7, lr, [sp, #124]	@ 0x7c
 8023084:	f8cd 8078 	str.w	r8, [sp, #120]	@ 0x78
 8023088:	b00b      	add	sp, #44	@ 0x2c
 802308a:	ecbd 8b08 	vpop	{d8-d11}
 802308e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023092:	f7e8 bfc5 	b.w	800c020 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 8023096:	2304      	movs	r3, #4
 8023098:	f04f 31ff 	mov.w	r1, #4294967295
 802309c:	f008 0201 	and.w	r2, r8, #1
 80230a0:	9201      	str	r2, [sp, #4]
 80230a2:	9803      	ldr	r0, [sp, #12]
 80230a4:	9a02      	ldr	r2, [sp, #8]
 80230a6:	9100      	str	r1, [sp, #0]
 80230a8:	4659      	mov	r1, fp
 80230aa:	f7ed ff03 	bl	8010eb4 <nema_bind_src_tex>
 80230ae:	2001      	movs	r0, #1
 80230b0:	f7ee ff9c 	bl	8011fec <nema_enable_tiling>
 80230b4:	2301      	movs	r3, #1
 80230b6:	461a      	mov	r2, r3
 80230b8:	4619      	mov	r1, r3
 80230ba:	4618      	mov	r0, r3
 80230bc:	f7ee ffbe 	bl	801203c <nema_enable_aa>
 80230c0:	edd6 7a03 	vldr	s15, [r6, #12]
 80230c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80230c8:	ed96 7a04 	vldr	s14, [r6, #16]
 80230cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80230d0:	4607      	mov	r7, r0
 80230d2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80230d6:	f240 81aa 	bls.w	802342e <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a6>
 80230da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80230de:	bf94      	ite	ls
 80230e0:	2301      	movls	r3, #1
 80230e2:	2302      	movhi	r3, #2
 80230e4:	edd6 7a08 	vldr	s15, [r6, #32]
 80230e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80230ec:	2200      	movs	r2, #0
 80230ee:	ed96 7a09 	vldr	s14, [r6, #36]	@ 0x24
 80230f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80230f6:	a90a      	add	r1, sp, #40	@ 0x28
 80230f8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80230fc:	f843 2c10 	str.w	r2, [r3, #-16]
 8023100:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8023104:	f240 818d 	bls.w	8023422 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x49a>
 8023108:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802310c:	bf94      	ite	ls
 802310e:	2301      	movls	r3, #1
 8023110:	2302      	movhi	r3, #2
 8023112:	edd6 7a0d 	vldr	s15, [r6, #52]	@ 0x34
 8023116:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802311a:	2201      	movs	r2, #1
 802311c:	ed96 7a0e 	vldr	s14, [r6, #56]	@ 0x38
 8023120:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023124:	a90a      	add	r1, sp, #40	@ 0x28
 8023126:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802312a:	f843 2c10 	str.w	r2, [r3, #-16]
 802312e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8023132:	f240 8188 	bls.w	8023446 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4be>
 8023136:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802313a:	bf94      	ite	ls
 802313c:	2301      	movls	r3, #1
 802313e:	2302      	movhi	r3, #2
 8023140:	edd6 7a12 	vldr	s15, [r6, #72]	@ 0x48
 8023144:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8023148:	2202      	movs	r2, #2
 802314a:	ed96 7a13 	vldr	s14, [r6, #76]	@ 0x4c
 802314e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023152:	a90a      	add	r1, sp, #40	@ 0x28
 8023154:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8023158:	f843 2c10 	str.w	r2, [r3, #-16]
 802315c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8023160:	f240 816b 	bls.w	802343a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4b2>
 8023164:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023168:	bf94      	ite	ls
 802316a:	2301      	movls	r3, #1
 802316c:	2302      	movhi	r3, #2
 802316e:	2203      	movs	r2, #3
 8023170:	a90a      	add	r1, sp, #40	@ 0x28
 8023172:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8023176:	f843 2c10 	str.w	r2, [r3, #-16]
 802317a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 802317e:	9907      	ldr	r1, [sp, #28]
 8023180:	f340 80d6 	ble.w	8023330 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8023184:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023186:	9808      	ldr	r0, [sp, #32]
 8023188:	9a06      	ldr	r2, [sp, #24]
 802318a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 802318e:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 8023192:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8023196:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802319a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 802319e:	ea4f 0c82 	mov.w	ip, r2, lsl #2
 80231a2:	eb06 080e 	add.w	r8, r6, lr
 80231a6:	0089      	lsls	r1, r1, #2
 80231a8:	0080      	lsls	r0, r0, #2
 80231aa:	1872      	adds	r2, r6, r1
 80231ac:	eb06 0a00 	add.w	sl, r6, r0
 80231b0:	eb06 030c 	add.w	r3, r6, ip
 80231b4:	5871      	ldr	r1, [r6, r1]
 80231b6:	5830      	ldr	r0, [r6, r0]
 80231b8:	f856 c00c 	ldr.w	ip, [r6, ip]
 80231bc:	edd8 4a01 	vldr	s9, [r8, #4]
 80231c0:	f856 800e 	ldr.w	r8, [r6, lr]
 80231c4:	9e02      	ldr	r6, [sp, #8]
 80231c6:	6852      	ldr	r2, [r2, #4]
 80231c8:	2eff      	cmp	r6, #255	@ 0xff
 80231ca:	ed9a 5a01 	vldr	s10, [sl, #4]
 80231ce:	685b      	ldr	r3, [r3, #4]
 80231d0:	f340 80d2 	ble.w	8023378 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f0>
 80231d4:	429a      	cmp	r2, r3
 80231d6:	f000 815d 	beq.w	8023494 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x50c>
 80231da:	f9b9 6000 	ldrsh.w	r6, [r9]
 80231de:	ee07 ca90 	vmov	s15, ip
 80231e2:	ee08 6a90 	vmov	s17, r6
 80231e6:	f9b9 6002 	ldrsh.w	r6, [r9, #2]
 80231ea:	ee04 3a10 	vmov	s8, r3
 80231ee:	ee08 6a10 	vmov	s16, r6
 80231f2:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 80231f6:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 80231fa:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 80231fe:	eef8 3ac4 	vcvt.f32.s32	s7, s8
 8023202:	ee07 1a90 	vmov	s15, r1
 8023206:	ee07 0a10 	vmov	s14, r0
 802320a:	ee06 8a10 	vmov	s12, r8
 802320e:	ee04 2a10 	vmov	s8, r2
 8023212:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8023308 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8023216:	eef0 ba68 	vmov.f32	s23, s17
 802321a:	eeb0 ba68 	vmov.f32	s22, s17
 802321e:	eef0 aa68 	vmov.f32	s21, s17
 8023222:	eeb0 aa48 	vmov.f32	s20, s16
 8023226:	eef0 9a48 	vmov.f32	s19, s16
 802322a:	eeb0 9a48 	vmov.f32	s18, s16
 802322e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8023232:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8023236:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 802323a:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 802323e:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8023242:	eef8 4ae4 	vcvt.f32.s32	s9, s9
 8023246:	f9b5 b006 	ldrsh.w	fp, [r5, #6]
 802324a:	eee5 baa6 	vfma.f32	s23, s11, s13
 802324e:	f1bb 0f00 	cmp.w	fp, #0
 8023252:	eea7 baa6 	vfma.f32	s22, s15, s13
 8023256:	eee7 aa26 	vfma.f32	s21, s14, s13
 802325a:	eee6 8a26 	vfma.f32	s17, s12, s13
 802325e:	eea3 aaa6 	vfma.f32	s20, s7, s13
 8023262:	eee4 9a26 	vfma.f32	s19, s8, s13
 8023266:	eea5 9a26 	vfma.f32	s18, s10, s13
 802326a:	eea4 8aa6 	vfma.f32	s16, s9, s13
 802326e:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 8023272:	dd38      	ble.n	80232e6 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35e>
 8023274:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 8023278:	f1bb 0f80 	cmp.w	fp, #128	@ 0x80
 802327c:	46da      	mov	sl, fp
 802327e:	bfa8      	it	ge
 8023280:	f04f 0a80 	movge.w	sl, #128	@ 0x80
 8023284:	2e00      	cmp	r6, #0
 8023286:	f9b5 8000 	ldrsh.w	r8, [r5]
 802328a:	dd25      	ble.n	80232d8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x350>
 802328c:	2e80      	cmp	r6, #128	@ 0x80
 802328e:	4632      	mov	r2, r6
 8023290:	4640      	mov	r0, r8
 8023292:	4653      	mov	r3, sl
 8023294:	bfa8      	it	ge
 8023296:	2280      	movge	r2, #128	@ 0x80
 8023298:	4649      	mov	r1, r9
 802329a:	f7ed fd25 	bl	8010ce8 <nema_set_clip>
 802329e:	eef0 3a48 	vmov.f32	s7, s16
 80232a2:	eeb0 3a68 	vmov.f32	s6, s17
 80232a6:	eef0 2a49 	vmov.f32	s5, s18
 80232aa:	eeb0 2a6a 	vmov.f32	s4, s21
 80232ae:	eef0 1a69 	vmov.f32	s3, s19
 80232b2:	eeb0 1a4b 	vmov.f32	s2, s22
 80232b6:	eef0 0a4a 	vmov.f32	s1, s20
 80232ba:	eeb0 0a6b 	vmov.f32	s0, s23
 80232be:	f7ee f9cd 	bl	801165c <nema_blit_quad_fit>
 80232c2:	6820      	ldr	r0, [r4, #0]
 80232c4:	2800      	cmp	r0, #0
 80232c6:	f000 80d8 	beq.w	802347a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 80232ca:	3e80      	subs	r6, #128	@ 0x80
 80232cc:	f7fd fca4 	bl	8020c18 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80232d0:	2e00      	cmp	r6, #0
 80232d2:	f108 0880 	add.w	r8, r8, #128	@ 0x80
 80232d6:	dcd9      	bgt.n	802328c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x304>
 80232d8:	f1ab 0b80 	sub.w	fp, fp, #128	@ 0x80
 80232dc:	f1bb 0f00 	cmp.w	fp, #0
 80232e0:	f109 0980 	add.w	r9, r9, #128	@ 0x80
 80232e4:	dcc6      	bgt.n	8023274 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2ec>
 80232e6:	4638      	mov	r0, r7
 80232e8:	b00b      	add	sp, #44	@ 0x2c
 80232ea:	ecbd 8b08 	vpop	{d8-d11}
 80232ee:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232f2:	f7ee bec5 	b.w	8012080 <nema_enable_aa_flags>
 80232f6:	9b05      	ldr	r3, [sp, #20]
 80232f8:	781b      	ldrb	r3, [r3, #0]
 80232fa:	e6cd      	b.n	8023098 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 80232fc:	20082f00 	.word	0x20082f00
 8023300:	200833a8 	.word	0x200833a8
 8023304:	08000504 	.word	0x08000504
 8023308:	3d800000 	.word	0x3d800000
 802330c:	4a65      	ldr	r2, [pc, #404]	@ (80234a4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x51c>)
 802330e:	23ff      	movs	r3, #255	@ 0xff
 8023310:	6810      	ldr	r0, [r2, #0]
 8023312:	b2c2      	uxtb	r2, r0
 8023314:	f3c0 2107 	ubfx	r1, r0, #8, #8
 8023318:	f3c0 4007 	ubfx	r0, r0, #16, #8
 802331c:	f7ed fdc2 	bl	8010ea4 <nema_rgba>
 8023320:	f7ed fcd6 	bl	8010cd0 <nema_set_tex_color>
 8023324:	2329      	movs	r3, #41	@ 0x29
 8023326:	e6b7      	b.n	8023098 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 8023328:	2310      	movs	r3, #16
 802332a:	e6b5      	b.n	8023098 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 802332c:	2339      	movs	r3, #57	@ 0x39
 802332e:	e6b3      	b.n	8023098 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x110>
 8023330:	9b08      	ldr	r3, [sp, #32]
 8023332:	9806      	ldr	r0, [sp, #24]
 8023334:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023336:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 802333a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 802333e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8023342:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8023346:	009b      	lsls	r3, r3, #2
 8023348:	ea4f 0c80 	mov.w	ip, r0, lsl #2
 802334c:	ea4f 0e82 	mov.w	lr, r2, lsl #2
 8023350:	0089      	lsls	r1, r1, #2
 8023352:	18f0      	adds	r0, r6, r3
 8023354:	1872      	adds	r2, r6, r1
 8023356:	eb06 0a0c 	add.w	sl, r6, ip
 802335a:	eb06 080e 	add.w	r8, r6, lr
 802335e:	ed90 5a01 	vldr	s10, [r0, #4]
 8023362:	edd8 4a01 	vldr	s9, [r8, #4]
 8023366:	58f0      	ldr	r0, [r6, r3]
 8023368:	6852      	ldr	r2, [r2, #4]
 802336a:	5871      	ldr	r1, [r6, r1]
 802336c:	f8da 3004 	ldr.w	r3, [sl, #4]
 8023370:	f856 c00c 	ldr.w	ip, [r6, ip]
 8023374:	f856 800e 	ldr.w	r8, [r6, lr]
 8023378:	429a      	cmp	r2, r3
 802337a:	d06a      	beq.n	8023452 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ca>
 802337c:	ee07 8a90 	vmov	s15, r8
 8023380:	f9b9 5000 	ldrsh.w	r5, [r9]
 8023384:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8023388:	ee00 5a10 	vmov	s0, r5
 802338c:	ee07 0a90 	vmov	s15, r0
 8023390:	f9b9 5002 	ldrsh.w	r5, [r9, #2]
 8023394:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8023398:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802339c:	ee00 5a90 	vmov	s1, r5
 80233a0:	ee07 1a90 	vmov	s15, r1
 80233a4:	eddf 6a40 	vldr	s13, [pc, #256]	@ 80234a8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x520>
 80233a8:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 80233ac:	ee04 2a10 	vmov	s8, r2
 80233b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80233b4:	eeb0 1a40 	vmov.f32	s2, s0
 80233b8:	eef8 1ac4 	vcvt.f32.s32	s3, s8
 80233bc:	ee05 ca90 	vmov	s11, ip
 80233c0:	ee04 3a10 	vmov	s8, r3
 80233c4:	eea7 1aa6 	vfma.f32	s2, s15, s13
 80233c8:	eef0 7a60 	vmov.f32	s15, s1
 80233cc:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80233d0:	eef8 4ae4 	vcvt.f32.s32	s9, s9
 80233d4:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 80233d8:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 80233dc:	eeb0 3a40 	vmov.f32	s6, s0
 80233e0:	eeb0 2a40 	vmov.f32	s4, s0
 80233e4:	eef0 3a60 	vmov.f32	s7, s1
 80233e8:	eef0 2a60 	vmov.f32	s5, s1
 80233ec:	eee1 7aa6 	vfma.f32	s15, s3, s13
 80233f0:	eea6 3a26 	vfma.f32	s6, s12, s13
 80233f4:	eea7 2a26 	vfma.f32	s4, s14, s13
 80233f8:	eea5 0aa6 	vfma.f32	s0, s11, s13
 80233fc:	eee4 3aa6 	vfma.f32	s7, s9, s13
 8023400:	eee5 2a26 	vfma.f32	s5, s10, s13
 8023404:	eef0 1a67 	vmov.f32	s3, s15
 8023408:	eee4 0a26 	vfma.f32	s1, s8, s13
 802340c:	f7ee f926 	bl	801165c <nema_blit_quad_fit>
 8023410:	6820      	ldr	r0, [r4, #0]
 8023412:	b390      	cbz	r0, 802347a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4f2>
 8023414:	b00b      	add	sp, #44	@ 0x2c
 8023416:	ecbd 8b08 	vpop	{d8-d11}
 802341a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802341e:	f7fd bbfb 	b.w	8020c18 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8023422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023426:	bf94      	ite	ls
 8023428:	4613      	movls	r3, r2
 802342a:	2303      	movhi	r3, #3
 802342c:	e671      	b.n	8023112 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x18a>
 802342e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023432:	bf94      	ite	ls
 8023434:	2300      	movls	r3, #0
 8023436:	2303      	movhi	r3, #3
 8023438:	e654      	b.n	80230e4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x15c>
 802343a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802343e:	bf94      	ite	ls
 8023440:	2300      	movls	r3, #0
 8023442:	2303      	movhi	r3, #3
 8023444:	e693      	b.n	802316e <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e6>
 8023446:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802344a:	bf94      	ite	ls
 802344c:	2300      	movls	r3, #0
 802344e:	2303      	movhi	r3, #3
 8023450:	e676      	b.n	8023140 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1b8>
 8023452:	4281      	cmp	r1, r0
 8023454:	d192      	bne.n	802337c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 8023456:	2200      	movs	r2, #0
 8023458:	ee15 6a10 	vmov	r6, s10
 802345c:	ee14 ea90 	vmov	lr, s9
 8023460:	4576      	cmp	r6, lr
 8023462:	d002      	beq.n	802346a <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4e2>
 8023464:	b1da      	cbz	r2, 802349e <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x516>
 8023466:	461a      	mov	r2, r3
 8023468:	e6b7      	b.n	80231da <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x252>
 802346a:	45c4      	cmp	ip, r8
 802346c:	d1fa      	bne.n	8023464 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4dc>
 802346e:	460d      	mov	r5, r1
 8023470:	46e0      	mov	r8, ip
 8023472:	4601      	mov	r1, r0
 8023474:	461a      	mov	r2, r3
 8023476:	4628      	mov	r0, r5
 8023478:	e780      	b.n	802337c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 802347a:	4b0c      	ldr	r3, [pc, #48]	@ (80234ac <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x524>)
 802347c:	4a0c      	ldr	r2, [pc, #48]	@ (80234b0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x528>)
 802347e:	217c      	movs	r1, #124	@ 0x7c
 8023480:	480c      	ldr	r0, [pc, #48]	@ (80234b4 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x52c>)
 8023482:	f00f f839 	bl	80324f8 <__assert_func>
 8023486:	4b0c      	ldr	r3, [pc, #48]	@ (80234b8 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x530>)
 8023488:	4a0c      	ldr	r2, [pc, #48]	@ (80234bc <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x534>)
 802348a:	f44f 7157 	mov.w	r1, #860	@ 0x35c
 802348e:	480c      	ldr	r0, [pc, #48]	@ (80234c0 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x538>)
 8023490:	f00f f832 	bl	80324f8 <__assert_func>
 8023494:	4281      	cmp	r1, r0
 8023496:	f47f aea0 	bne.w	80231da <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x252>
 802349a:	2201      	movs	r2, #1
 802349c:	e7dc      	b.n	8023458 <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d0>
 802349e:	461a      	mov	r2, r3
 80234a0:	e76c      	b.n	802337c <_ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3f4>
 80234a2:	bf00      	nop
 80234a4:	20082f10 	.word	0x20082f10
 80234a8:	3d800000 	.word	0x3d800000
 80234ac:	0803623c 	.word	0x0803623c
 80234b0:	08036aa8 	.word	0x08036aa8
 80234b4:	08036264 	.word	0x08036264
 80234b8:	08036134 	.word	0x08036134
 80234bc:	08036c60 	.word	0x08036c60
 80234c0:	080362e0 	.word	0x080362e0

080234c4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80234c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80234c8:	4680      	mov	r8, r0
 80234ca:	460f      	mov	r7, r1
 80234cc:	4614      	mov	r4, r2
 80234ce:	461e      	mov	r6, r3
 80234d0:	4db2      	ldr	r5, [pc, #712]	@ (802379c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2d8>)
 80234d2:	e8d5 3f8f 	ldab	r3, [r5]
 80234d6:	07da      	lsls	r2, r3, #31
 80234d8:	f140 823a 	bpl.w	8023950 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48c>
 80234dc:	4db0      	ldr	r5, [pc, #704]	@ (80237a0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2dc>)
 80234de:	e8d5 3f8f 	ldab	r3, [r5]
 80234e2:	07db      	lsls	r3, r3, #31
 80234e4:	f140 8225 	bpl.w	8023932 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x46e>
 80234e8:	4dae      	ldr	r5, [pc, #696]	@ (80237a4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e0>)
 80234ea:	e8d5 3f8f 	ldab	r3, [r5]
 80234ee:	07d8      	lsls	r0, r3, #31
 80234f0:	f140 8210 	bpl.w	8023914 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x450>
 80234f4:	4dac      	ldr	r5, [pc, #688]	@ (80237a8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e4>)
 80234f6:	e8d5 3f8f 	ldab	r3, [r5]
 80234fa:	07d9      	lsls	r1, r3, #31
 80234fc:	f140 81fb 	bpl.w	80238f6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x432>
 8023500:	4daa      	ldr	r5, [pc, #680]	@ (80237ac <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2e8>)
 8023502:	e8d5 3f8f 	ldab	r3, [r5]
 8023506:	07da      	lsls	r2, r3, #31
 8023508:	f140 81e6 	bpl.w	80238d8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x414>
 802350c:	4da8      	ldr	r5, [pc, #672]	@ (80237b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2ec>)
 802350e:	e8d5 3f8f 	ldab	r3, [r5]
 8023512:	07db      	lsls	r3, r3, #31
 8023514:	f140 81d1 	bpl.w	80238ba <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3f6>
 8023518:	4da6      	ldr	r5, [pc, #664]	@ (80237b4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f0>)
 802351a:	e8d5 3f8f 	ldab	r3, [r5]
 802351e:	07d8      	lsls	r0, r3, #31
 8023520:	f140 81bc 	bpl.w	802389c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3d8>
 8023524:	4da4      	ldr	r5, [pc, #656]	@ (80237b8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f4>)
 8023526:	e8d5 3f8f 	ldab	r3, [r5]
 802352a:	07d9      	lsls	r1, r3, #31
 802352c:	f140 81a7 	bpl.w	802387e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3ba>
 8023530:	4da2      	ldr	r5, [pc, #648]	@ (80237bc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2f8>)
 8023532:	e8d5 3f8f 	ldab	r3, [r5]
 8023536:	07da      	lsls	r2, r3, #31
 8023538:	f140 8192 	bpl.w	8023860 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x39c>
 802353c:	4da0      	ldr	r5, [pc, #640]	@ (80237c0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2fc>)
 802353e:	e8d5 3f8f 	ldab	r3, [r5]
 8023542:	07db      	lsls	r3, r3, #31
 8023544:	f140 811a 	bpl.w	802377c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2b8>
 8023548:	4d9e      	ldr	r5, [pc, #632]	@ (80237c4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x300>)
 802354a:	e8d5 3f8f 	ldab	r3, [r5]
 802354e:	07d8      	lsls	r0, r3, #31
 8023550:	f140 8105 	bpl.w	802375e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x29a>
 8023554:	4d9c      	ldr	r5, [pc, #624]	@ (80237c8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x304>)
 8023556:	e8d5 3f8f 	ldab	r3, [r5]
 802355a:	07d9      	lsls	r1, r3, #31
 802355c:	f140 80f0 	bpl.w	8023740 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x27c>
 8023560:	4d9a      	ldr	r5, [pc, #616]	@ (80237cc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x308>)
 8023562:	e8d5 3f8f 	ldab	r3, [r5]
 8023566:	07da      	lsls	r2, r3, #31
 8023568:	f140 80db 	bpl.w	8023722 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x25e>
 802356c:	4d98      	ldr	r5, [pc, #608]	@ (80237d0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30c>)
 802356e:	e8d5 3f8f 	ldab	r3, [r5]
 8023572:	07db      	lsls	r3, r3, #31
 8023574:	f140 80c6 	bpl.w	8023704 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x240>
 8023578:	4d96      	ldr	r5, [pc, #600]	@ (80237d4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x310>)
 802357a:	e8d5 3f8f 	ldab	r3, [r5]
 802357e:	07d8      	lsls	r0, r3, #31
 8023580:	f140 80b1 	bpl.w	80236e6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x222>
 8023584:	4d94      	ldr	r5, [pc, #592]	@ (80237d8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x314>)
 8023586:	e8d5 3f8f 	ldab	r3, [r5]
 802358a:	07d9      	lsls	r1, r3, #31
 802358c:	f140 809c 	bpl.w	80236c8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x204>
 8023590:	4d92      	ldr	r5, [pc, #584]	@ (80237dc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x318>)
 8023592:	e8d5 3f8f 	ldab	r3, [r5]
 8023596:	07da      	lsls	r2, r3, #31
 8023598:	f140 8087 	bpl.w	80236aa <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1e6>
 802359c:	4d90      	ldr	r5, [pc, #576]	@ (80237e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x31c>)
 802359e:	e8d5 3f8f 	ldab	r3, [r5]
 80235a2:	07db      	lsls	r3, r3, #31
 80235a4:	d573      	bpl.n	802368e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ca>
 80235a6:	4d8f      	ldr	r5, [pc, #572]	@ (80237e4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x320>)
 80235a8:	e8d5 3f8f 	ldab	r3, [r5]
 80235ac:	07d8      	lsls	r0, r3, #31
 80235ae:	d560      	bpl.n	8023672 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1ae>
 80235b0:	4d8d      	ldr	r5, [pc, #564]	@ (80237e8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x324>)
 80235b2:	e8d5 3f8f 	ldab	r3, [r5]
 80235b6:	07d9      	lsls	r1, r3, #31
 80235b8:	d54d      	bpl.n	8023656 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x192>
 80235ba:	4d8c      	ldr	r5, [pc, #560]	@ (80237ec <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x328>)
 80235bc:	e8d5 3f8f 	ldab	r3, [r5]
 80235c0:	07da      	lsls	r2, r3, #31
 80235c2:	d53a      	bpl.n	802363a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 80235c4:	4d8a      	ldr	r5, [pc, #552]	@ (80237f0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x32c>)
 80235c6:	e8d5 3f8f 	ldab	r3, [r5]
 80235ca:	07db      	lsls	r3, r3, #31
 80235cc:	d517      	bpl.n	80235fe <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80235ce:	f898 300c 	ldrb.w	r3, [r8, #12]
 80235d2:	2b01      	cmp	r3, #1
 80235d4:	d024      	beq.n	8023620 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15c>
 80235d6:	f0c0 81ca 	bcc.w	802396e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4aa>
 80235da:	2b02      	cmp	r3, #2
 80235dc:	d002      	beq.n	80235e4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80235de:	2000      	movs	r0, #0
 80235e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80235e4:	2eff      	cmp	r6, #255	@ 0xff
 80235e6:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 80235ea:	f000 81cb 	beq.w	8023984 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4c0>
 80235ee:	2c03      	cmp	r4, #3
 80235f0:	d8f5      	bhi.n	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 80235f2:	e8df f014 	tbh	[pc, r4, lsl #1]
 80235f6:	01ff      	.short	0x01ff
 80235f8:	01e701ee 	.word	0x01e701ee
 80235fc:	01e0      	.short	0x01e0
 80235fe:	4628      	mov	r0, r5
 8023600:	f00d fda3 	bl	803114a <__cxa_guard_acquire>
 8023604:	2800      	cmp	r0, #0
 8023606:	d0e2      	beq.n	80235ce <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10a>
 8023608:	4628      	mov	r0, r5
 802360a:	f00d fdaa 	bl	8031162 <__cxa_guard_release>
 802360e:	4a79      	ldr	r2, [pc, #484]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023610:	4979      	ldr	r1, [pc, #484]	@ (80237f8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x334>)
 8023612:	487a      	ldr	r0, [pc, #488]	@ (80237fc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x338>)
 8023614:	f00d fd92 	bl	803113c <__aeabi_atexit>
 8023618:	f898 300c 	ldrb.w	r3, [r8, #12]
 802361c:	2b01      	cmp	r3, #1
 802361e:	d1da      	bne.n	80235d6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x112>
 8023620:	2eff      	cmp	r6, #255	@ 0xff
 8023622:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 8023626:	f000 81b6 	beq.w	8023996 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4d2>
 802362a:	2c03      	cmp	r4, #3
 802362c:	d8d7      	bhi.n	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802362e:	e8df f014 	tbh	[pc, r4, lsl #1]
 8023632:	0233      	.short	0x0233
 8023634:	021b0222 	.word	0x021b0222
 8023638:	0214      	.short	0x0214
 802363a:	4628      	mov	r0, r5
 802363c:	f00d fd85 	bl	803114a <__cxa_guard_acquire>
 8023640:	2800      	cmp	r0, #0
 8023642:	d0bf      	beq.n	80235c4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 8023644:	4628      	mov	r0, r5
 8023646:	f00d fd8c 	bl	8031162 <__cxa_guard_release>
 802364a:	4a6a      	ldr	r2, [pc, #424]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 802364c:	496c      	ldr	r1, [pc, #432]	@ (8023800 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x33c>)
 802364e:	486d      	ldr	r0, [pc, #436]	@ (8023804 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x340>)
 8023650:	f00d fd74 	bl	803113c <__aeabi_atexit>
 8023654:	e7b6      	b.n	80235c4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x100>
 8023656:	4628      	mov	r0, r5
 8023658:	f00d fd77 	bl	803114a <__cxa_guard_acquire>
 802365c:	2800      	cmp	r0, #0
 802365e:	d0ac      	beq.n	80235ba <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 8023660:	4628      	mov	r0, r5
 8023662:	f00d fd7e 	bl	8031162 <__cxa_guard_release>
 8023666:	4a63      	ldr	r2, [pc, #396]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023668:	4967      	ldr	r1, [pc, #412]	@ (8023808 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x344>)
 802366a:	4868      	ldr	r0, [pc, #416]	@ (802380c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x348>)
 802366c:	f00d fd66 	bl	803113c <__aeabi_atexit>
 8023670:	e7a3      	b.n	80235ba <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf6>
 8023672:	4628      	mov	r0, r5
 8023674:	f00d fd69 	bl	803114a <__cxa_guard_acquire>
 8023678:	2800      	cmp	r0, #0
 802367a:	d099      	beq.n	80235b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 802367c:	4628      	mov	r0, r5
 802367e:	f00d fd70 	bl	8031162 <__cxa_guard_release>
 8023682:	4a5c      	ldr	r2, [pc, #368]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023684:	4962      	ldr	r1, [pc, #392]	@ (8023810 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x34c>)
 8023686:	4863      	ldr	r0, [pc, #396]	@ (8023814 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x350>)
 8023688:	f00d fd58 	bl	803113c <__aeabi_atexit>
 802368c:	e790      	b.n	80235b0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 802368e:	4628      	mov	r0, r5
 8023690:	f00d fd5b 	bl	803114a <__cxa_guard_acquire>
 8023694:	2800      	cmp	r0, #0
 8023696:	d086      	beq.n	80235a6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8023698:	4628      	mov	r0, r5
 802369a:	f00d fd62 	bl	8031162 <__cxa_guard_release>
 802369e:	4a55      	ldr	r2, [pc, #340]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80236a0:	495d      	ldr	r1, [pc, #372]	@ (8023818 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x354>)
 80236a2:	485e      	ldr	r0, [pc, #376]	@ (802381c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x358>)
 80236a4:	f00d fd4a 	bl	803113c <__aeabi_atexit>
 80236a8:	e77d      	b.n	80235a6 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 80236aa:	4628      	mov	r0, r5
 80236ac:	f00d fd4d 	bl	803114a <__cxa_guard_acquire>
 80236b0:	2800      	cmp	r0, #0
 80236b2:	f43f af73 	beq.w	802359c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 80236b6:	4628      	mov	r0, r5
 80236b8:	f00d fd53 	bl	8031162 <__cxa_guard_release>
 80236bc:	4a4d      	ldr	r2, [pc, #308]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80236be:	4958      	ldr	r1, [pc, #352]	@ (8023820 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x35c>)
 80236c0:	4858      	ldr	r0, [pc, #352]	@ (8023824 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x360>)
 80236c2:	f00d fd3b 	bl	803113c <__aeabi_atexit>
 80236c6:	e769      	b.n	802359c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 80236c8:	4628      	mov	r0, r5
 80236ca:	f00d fd3e 	bl	803114a <__cxa_guard_acquire>
 80236ce:	2800      	cmp	r0, #0
 80236d0:	f43f af5e 	beq.w	8023590 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 80236d4:	4628      	mov	r0, r5
 80236d6:	f00d fd44 	bl	8031162 <__cxa_guard_release>
 80236da:	4a46      	ldr	r2, [pc, #280]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80236dc:	4952      	ldr	r1, [pc, #328]	@ (8023828 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x364>)
 80236de:	4853      	ldr	r0, [pc, #332]	@ (802382c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x368>)
 80236e0:	f00d fd2c 	bl	803113c <__aeabi_atexit>
 80236e4:	e754      	b.n	8023590 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 80236e6:	4628      	mov	r0, r5
 80236e8:	f00d fd2f 	bl	803114a <__cxa_guard_acquire>
 80236ec:	2800      	cmp	r0, #0
 80236ee:	f43f af49 	beq.w	8023584 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 80236f2:	4628      	mov	r0, r5
 80236f4:	f00d fd35 	bl	8031162 <__cxa_guard_release>
 80236f8:	4a3e      	ldr	r2, [pc, #248]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 80236fa:	494d      	ldr	r1, [pc, #308]	@ (8023830 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x36c>)
 80236fc:	484d      	ldr	r0, [pc, #308]	@ (8023834 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x370>)
 80236fe:	f00d fd1d 	bl	803113c <__aeabi_atexit>
 8023702:	e73f      	b.n	8023584 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc0>
 8023704:	4628      	mov	r0, r5
 8023706:	f00d fd20 	bl	803114a <__cxa_guard_acquire>
 802370a:	2800      	cmp	r0, #0
 802370c:	f43f af34 	beq.w	8023578 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 8023710:	4628      	mov	r0, r5
 8023712:	f00d fd26 	bl	8031162 <__cxa_guard_release>
 8023716:	4a37      	ldr	r2, [pc, #220]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023718:	4947      	ldr	r1, [pc, #284]	@ (8023838 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x374>)
 802371a:	4848      	ldr	r0, [pc, #288]	@ (802383c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x378>)
 802371c:	f00d fd0e 	bl	803113c <__aeabi_atexit>
 8023720:	e72a      	b.n	8023578 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb4>
 8023722:	4628      	mov	r0, r5
 8023724:	f00d fd11 	bl	803114a <__cxa_guard_acquire>
 8023728:	2800      	cmp	r0, #0
 802372a:	f43f af1f 	beq.w	802356c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 802372e:	4628      	mov	r0, r5
 8023730:	f00d fd17 	bl	8031162 <__cxa_guard_release>
 8023734:	4a2f      	ldr	r2, [pc, #188]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023736:	4942      	ldr	r1, [pc, #264]	@ (8023840 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x37c>)
 8023738:	4842      	ldr	r0, [pc, #264]	@ (8023844 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x380>)
 802373a:	f00d fcff 	bl	803113c <__aeabi_atexit>
 802373e:	e715      	b.n	802356c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa8>
 8023740:	4628      	mov	r0, r5
 8023742:	f00d fd02 	bl	803114a <__cxa_guard_acquire>
 8023746:	2800      	cmp	r0, #0
 8023748:	f43f af0a 	beq.w	8023560 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 802374c:	4628      	mov	r0, r5
 802374e:	f00d fd08 	bl	8031162 <__cxa_guard_release>
 8023752:	4a28      	ldr	r2, [pc, #160]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023754:	493c      	ldr	r1, [pc, #240]	@ (8023848 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x384>)
 8023756:	483d      	ldr	r0, [pc, #244]	@ (802384c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x388>)
 8023758:	f00d fcf0 	bl	803113c <__aeabi_atexit>
 802375c:	e700      	b.n	8023560 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9c>
 802375e:	4628      	mov	r0, r5
 8023760:	f00d fcf3 	bl	803114a <__cxa_guard_acquire>
 8023764:	2800      	cmp	r0, #0
 8023766:	f43f aef5 	beq.w	8023554 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 802376a:	4628      	mov	r0, r5
 802376c:	f00d fcf9 	bl	8031162 <__cxa_guard_release>
 8023770:	4a20      	ldr	r2, [pc, #128]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023772:	4937      	ldr	r1, [pc, #220]	@ (8023850 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x38c>)
 8023774:	4837      	ldr	r0, [pc, #220]	@ (8023854 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x390>)
 8023776:	f00d fce1 	bl	803113c <__aeabi_atexit>
 802377a:	e6eb      	b.n	8023554 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x90>
 802377c:	4628      	mov	r0, r5
 802377e:	f00d fce4 	bl	803114a <__cxa_guard_acquire>
 8023782:	2800      	cmp	r0, #0
 8023784:	f43f aee0 	beq.w	8023548 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 8023788:	4628      	mov	r0, r5
 802378a:	f00d fcea 	bl	8031162 <__cxa_guard_release>
 802378e:	4a19      	ldr	r2, [pc, #100]	@ (80237f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x330>)
 8023790:	4931      	ldr	r1, [pc, #196]	@ (8023858 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x394>)
 8023792:	4832      	ldr	r0, [pc, #200]	@ (802385c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x398>)
 8023794:	f00d fcd2 	bl	803113c <__aeabi_atexit>
 8023798:	e6d6      	b.n	8023548 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x84>
 802379a:	bf00      	nop
 802379c:	200833d0 	.word	0x200833d0
 80237a0:	200833e4 	.word	0x200833e4
 80237a4:	200833ac 	.word	0x200833ac
 80237a8:	200833b8 	.word	0x200833b8
 80237ac:	200833f0 	.word	0x200833f0
 80237b0:	200833fc 	.word	0x200833fc
 80237b4:	200833c4 	.word	0x200833c4
 80237b8:	200833dc 	.word	0x200833dc
 80237bc:	200833d4 	.word	0x200833d4
 80237c0:	200833e8 	.word	0x200833e8
 80237c4:	200833b0 	.word	0x200833b0
 80237c8:	200833bc 	.word	0x200833bc
 80237cc:	200833f4 	.word	0x200833f4
 80237d0:	20083400 	.word	0x20083400
 80237d4:	200833c8 	.word	0x200833c8
 80237d8:	200833e0 	.word	0x200833e0
 80237dc:	200833d8 	.word	0x200833d8
 80237e0:	200833ec 	.word	0x200833ec
 80237e4:	200833b4 	.word	0x200833b4
 80237e8:	200833c0 	.word	0x200833c0
 80237ec:	200833f8 	.word	0x200833f8
 80237f0:	200833cc 	.word	0x200833cc
 80237f4:	20000000 	.word	0x20000000
 80237f8:	08022849 	.word	0x08022849
 80237fc:	2000020c 	.word	0x2000020c
 8023800:	08022845 	.word	0x08022845
 8023804:	20000238 	.word	0x20000238
 8023808:	08022855 	.word	0x08022855
 802380c:	20000200 	.word	0x20000200
 8023810:	08022859 	.word	0x08022859
 8023814:	200001f4 	.word	0x200001f4
 8023818:	0802284d 	.word	0x0802284d
 802381c:	2000022c 	.word	0x2000022c
 8023820:	08022851 	.word	0x08022851
 8023824:	20000218 	.word	0x20000218
 8023828:	08022865 	.word	0x08022865
 802382c:	20000220 	.word	0x20000220
 8023830:	08022869 	.word	0x08022869
 8023834:	20000208 	.word	0x20000208
 8023838:	0802285d 	.word	0x0802285d
 802383c:	20000240 	.word	0x20000240
 8023840:	08022861 	.word	0x08022861
 8023844:	20000234 	.word	0x20000234
 8023848:	08022875 	.word	0x08022875
 802384c:	200001fc 	.word	0x200001fc
 8023850:	08022879 	.word	0x08022879
 8023854:	200001f0 	.word	0x200001f0
 8023858:	0802286d 	.word	0x0802286d
 802385c:	20000228 	.word	0x20000228
 8023860:	4628      	mov	r0, r5
 8023862:	f00d fc72 	bl	803114a <__cxa_guard_acquire>
 8023866:	2800      	cmp	r0, #0
 8023868:	f43f ae68 	beq.w	802353c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 802386c:	4628      	mov	r0, r5
 802386e:	f00d fc78 	bl	8031162 <__cxa_guard_release>
 8023872:	4aa6      	ldr	r2, [pc, #664]	@ (8023b0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023874:	49a6      	ldr	r1, [pc, #664]	@ (8023b10 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64c>)
 8023876:	48a7      	ldr	r0, [pc, #668]	@ (8023b14 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x650>)
 8023878:	f00d fc60 	bl	803113c <__aeabi_atexit>
 802387c:	e65e      	b.n	802353c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78>
 802387e:	4628      	mov	r0, r5
 8023880:	f00d fc63 	bl	803114a <__cxa_guard_acquire>
 8023884:	2800      	cmp	r0, #0
 8023886:	f43f ae53 	beq.w	8023530 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 802388a:	4628      	mov	r0, r5
 802388c:	f00d fc69 	bl	8031162 <__cxa_guard_release>
 8023890:	4a9e      	ldr	r2, [pc, #632]	@ (8023b0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023892:	49a1      	ldr	r1, [pc, #644]	@ (8023b18 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x654>)
 8023894:	48a1      	ldr	r0, [pc, #644]	@ (8023b1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 8023896:	f00d fc51 	bl	803113c <__aeabi_atexit>
 802389a:	e649      	b.n	8023530 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 802389c:	4628      	mov	r0, r5
 802389e:	f00d fc54 	bl	803114a <__cxa_guard_acquire>
 80238a2:	2800      	cmp	r0, #0
 80238a4:	f43f ae3e 	beq.w	8023524 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 80238a8:	4628      	mov	r0, r5
 80238aa:	f00d fc5a 	bl	8031162 <__cxa_guard_release>
 80238ae:	4a97      	ldr	r2, [pc, #604]	@ (8023b0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80238b0:	499b      	ldr	r1, [pc, #620]	@ (8023b20 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x65c>)
 80238b2:	489c      	ldr	r0, [pc, #624]	@ (8023b24 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 80238b4:	f00d fc42 	bl	803113c <__aeabi_atexit>
 80238b8:	e634      	b.n	8023524 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 80238ba:	4628      	mov	r0, r5
 80238bc:	f00d fc45 	bl	803114a <__cxa_guard_acquire>
 80238c0:	2800      	cmp	r0, #0
 80238c2:	f43f ae29 	beq.w	8023518 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 80238c6:	4628      	mov	r0, r5
 80238c8:	f00d fc4b 	bl	8031162 <__cxa_guard_release>
 80238cc:	4a8f      	ldr	r2, [pc, #572]	@ (8023b0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80238ce:	4996      	ldr	r1, [pc, #600]	@ (8023b28 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x664>)
 80238d0:	4896      	ldr	r0, [pc, #600]	@ (8023b2c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 80238d2:	f00d fc33 	bl	803113c <__aeabi_atexit>
 80238d6:	e61f      	b.n	8023518 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x54>
 80238d8:	4628      	mov	r0, r5
 80238da:	f00d fc36 	bl	803114a <__cxa_guard_acquire>
 80238de:	2800      	cmp	r0, #0
 80238e0:	f43f ae14 	beq.w	802350c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 80238e4:	4628      	mov	r0, r5
 80238e6:	f00d fc3c 	bl	8031162 <__cxa_guard_release>
 80238ea:	4a88      	ldr	r2, [pc, #544]	@ (8023b0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 80238ec:	4990      	ldr	r1, [pc, #576]	@ (8023b30 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x66c>)
 80238ee:	4891      	ldr	r0, [pc, #580]	@ (8023b34 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 80238f0:	f00d fc24 	bl	803113c <__aeabi_atexit>
 80238f4:	e60a      	b.n	802350c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x48>
 80238f6:	4628      	mov	r0, r5
 80238f8:	f00d fc27 	bl	803114a <__cxa_guard_acquire>
 80238fc:	2800      	cmp	r0, #0
 80238fe:	f43f adff 	beq.w	8023500 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 8023902:	4628      	mov	r0, r5
 8023904:	f00d fc2d 	bl	8031162 <__cxa_guard_release>
 8023908:	4a80      	ldr	r2, [pc, #512]	@ (8023b0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 802390a:	498b      	ldr	r1, [pc, #556]	@ (8023b38 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x674>)
 802390c:	488b      	ldr	r0, [pc, #556]	@ (8023b3c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x678>)
 802390e:	f00d fc15 	bl	803113c <__aeabi_atexit>
 8023912:	e5f5      	b.n	8023500 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x3c>
 8023914:	4628      	mov	r0, r5
 8023916:	f00d fc18 	bl	803114a <__cxa_guard_acquire>
 802391a:	2800      	cmp	r0, #0
 802391c:	f43f adea 	beq.w	80234f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 8023920:	4628      	mov	r0, r5
 8023922:	f00d fc1e 	bl	8031162 <__cxa_guard_release>
 8023926:	4a79      	ldr	r2, [pc, #484]	@ (8023b0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023928:	4985      	ldr	r1, [pc, #532]	@ (8023b40 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x67c>)
 802392a:	4886      	ldr	r0, [pc, #536]	@ (8023b44 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x680>)
 802392c:	f00d fc06 	bl	803113c <__aeabi_atexit>
 8023930:	e5e0      	b.n	80234f4 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x30>
 8023932:	4628      	mov	r0, r5
 8023934:	f00d fc09 	bl	803114a <__cxa_guard_acquire>
 8023938:	2800      	cmp	r0, #0
 802393a:	f43f add5 	beq.w	80234e8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 802393e:	4628      	mov	r0, r5
 8023940:	f00d fc0f 	bl	8031162 <__cxa_guard_release>
 8023944:	4a71      	ldr	r2, [pc, #452]	@ (8023b0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023946:	4980      	ldr	r1, [pc, #512]	@ (8023b48 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x684>)
 8023948:	4880      	ldr	r0, [pc, #512]	@ (8023b4c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x688>)
 802394a:	f00d fbf7 	bl	803113c <__aeabi_atexit>
 802394e:	e5cb      	b.n	80234e8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8023950:	4628      	mov	r0, r5
 8023952:	f00d fbfa 	bl	803114a <__cxa_guard_acquire>
 8023956:	2800      	cmp	r0, #0
 8023958:	f43f adc0 	beq.w	80234dc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 802395c:	4628      	mov	r0, r5
 802395e:	f00d fc00 	bl	8031162 <__cxa_guard_release>
 8023962:	4a6a      	ldr	r2, [pc, #424]	@ (8023b0c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x648>)
 8023964:	497a      	ldr	r1, [pc, #488]	@ (8023b50 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x68c>)
 8023966:	487b      	ldr	r0, [pc, #492]	@ (8023b54 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x690>)
 8023968:	f00d fbe8 	bl	803113c <__aeabi_atexit>
 802396c:	e5b6      	b.n	80234dc <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x18>
 802396e:	2eff      	cmp	r6, #255	@ 0xff
 8023970:	f1a4 042c 	sub.w	r4, r4, #44	@ 0x2c
 8023974:	d018      	beq.n	80239a8 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4e4>
 8023976:	2c03      	cmp	r4, #3
 8023978:	f63f ae31 	bhi.w	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802397c:	e8df f004 	tbb	[pc, r4]
 8023980:	4b525963 	.word	0x4b525963
 8023984:	2c03      	cmp	r4, #3
 8023986:	f63f ae2a 	bhi.w	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802398a:	e8df f014 	tbh	[pc, r4, lsl #1]
 802398e:	012d      	.short	0x012d
 8023990:	001b011e 	.word	0x001b011e
 8023994:	0014      	.short	0x0014
 8023996:	2c03      	cmp	r4, #3
 8023998:	f63f ae21 	bhi.w	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 802399c:	e8df f014 	tbh	[pc, r4, lsl #1]
 80239a0:	00f000ff 	.word	0x00f000ff
 80239a4:	00af010e 	.word	0x00af010e
 80239a8:	2c03      	cmp	r4, #3
 80239aa:	f63f ae18 	bhi.w	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 80239ae:	e8df f004 	tbb	[pc, r4]
 80239b2:	929c      	.short	0x929c
 80239b4:	848b      	.short	0x848b
 80239b6:	687b      	ldr	r3, [r7, #4]
 80239b8:	4867      	ldr	r0, [pc, #412]	@ (8023b58 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x694>)
 80239ba:	781b      	ldrb	r3, [r3, #0]
 80239bc:	2b00      	cmp	r3, #0
 80239be:	bf18      	it	ne
 80239c0:	2000      	movne	r0, #0
 80239c2:	e60d      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 80239c4:	687b      	ldr	r3, [r7, #4]
 80239c6:	4865      	ldr	r0, [pc, #404]	@ (8023b5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x698>)
 80239c8:	781b      	ldrb	r3, [r3, #0]
 80239ca:	2b00      	cmp	r3, #0
 80239cc:	bf18      	it	ne
 80239ce:	2000      	movne	r0, #0
 80239d0:	e606      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 80239d2:	687b      	ldr	r3, [r7, #4]
 80239d4:	781b      	ldrb	r3, [r3, #0]
 80239d6:	2b01      	cmp	r3, #1
 80239d8:	f000 811b 	beq.w	8023c12 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x74e>
 80239dc:	f0c0 8113 	bcc.w	8023c06 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x742>
 80239e0:	2b02      	cmp	r3, #2
 80239e2:	f47f adfc 	bne.w	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 80239e6:	4b5e      	ldr	r3, [pc, #376]	@ (8023b60 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x69c>)
 80239e8:	4a5e      	ldr	r2, [pc, #376]	@ (8023b64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 80239ea:	f241 3133 	movw	r1, #4915	@ 0x1333
 80239ee:	485e      	ldr	r0, [pc, #376]	@ (8023b68 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 80239f0:	f00e fd82 	bl	80324f8 <__assert_func>
 80239f4:	687b      	ldr	r3, [r7, #4]
 80239f6:	781b      	ldrb	r3, [r3, #0]
 80239f8:	2b01      	cmp	r3, #1
 80239fa:	f000 8108 	beq.w	8023c0e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x74a>
 80239fe:	f0c0 8104 	bcc.w	8023c0a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x746>
 8023a02:	2b02      	cmp	r3, #2
 8023a04:	f47f adeb 	bne.w	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023a08:	4b55      	ldr	r3, [pc, #340]	@ (8023b60 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x69c>)
 8023a0a:	4a56      	ldr	r2, [pc, #344]	@ (8023b64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023a0c:	f241 313f 	movw	r1, #4927	@ 0x133f
 8023a10:	4855      	ldr	r0, [pc, #340]	@ (8023b68 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023a12:	f00e fd71 	bl	80324f8 <__assert_func>
 8023a16:	687b      	ldr	r3, [r7, #4]
 8023a18:	4846      	ldr	r0, [pc, #280]	@ (8023b34 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x670>)
 8023a1a:	781b      	ldrb	r3, [r3, #0]
 8023a1c:	2b00      	cmp	r3, #0
 8023a1e:	bf18      	it	ne
 8023a20:	2000      	movne	r0, #0
 8023a22:	e5dd      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a24:	687b      	ldr	r3, [r7, #4]
 8023a26:	483f      	ldr	r0, [pc, #252]	@ (8023b24 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x660>)
 8023a28:	781b      	ldrb	r3, [r3, #0]
 8023a2a:	2b00      	cmp	r3, #0
 8023a2c:	bf18      	it	ne
 8023a2e:	2000      	movne	r0, #0
 8023a30:	e5d6      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a32:	687b      	ldr	r3, [r7, #4]
 8023a34:	781b      	ldrb	r3, [r3, #0]
 8023a36:	2b00      	cmp	r3, #0
 8023a38:	f000 80ed 	beq.w	8023c16 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x752>
 8023a3c:	2b01      	cmp	r3, #1
 8023a3e:	4845      	ldr	r0, [pc, #276]	@ (8023b54 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x690>)
 8023a40:	bf18      	it	ne
 8023a42:	2000      	movne	r0, #0
 8023a44:	e5cc      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a46:	687b      	ldr	r3, [r7, #4]
 8023a48:	781b      	ldrb	r3, [r3, #0]
 8023a4a:	2b00      	cmp	r3, #0
 8023a4c:	f000 80e5 	beq.w	8023c1a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x756>
 8023a50:	2b01      	cmp	r3, #1
 8023a52:	483c      	ldr	r0, [pc, #240]	@ (8023b44 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x680>)
 8023a54:	bf18      	it	ne
 8023a56:	2000      	movne	r0, #0
 8023a58:	e5c2      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a5a:	687b      	ldr	r3, [r7, #4]
 8023a5c:	4843      	ldr	r0, [pc, #268]	@ (8023b6c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a8>)
 8023a5e:	781b      	ldrb	r3, [r3, #0]
 8023a60:	2b00      	cmp	r3, #0
 8023a62:	bf18      	it	ne
 8023a64:	2000      	movne	r0, #0
 8023a66:	e5bb      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a68:	687b      	ldr	r3, [r7, #4]
 8023a6a:	4841      	ldr	r0, [pc, #260]	@ (8023b70 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6ac>)
 8023a6c:	781b      	ldrb	r3, [r3, #0]
 8023a6e:	2b00      	cmp	r3, #0
 8023a70:	bf18      	it	ne
 8023a72:	2000      	movne	r0, #0
 8023a74:	e5b4      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023a76:	687b      	ldr	r3, [r7, #4]
 8023a78:	781b      	ldrb	r3, [r3, #0]
 8023a7a:	2b01      	cmp	r3, #1
 8023a7c:	f000 80d5 	beq.w	8023c2a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x766>
 8023a80:	f0c0 80d1 	bcc.w	8023c26 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x762>
 8023a84:	2b02      	cmp	r3, #2
 8023a86:	f47f adaa 	bne.w	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023a8a:	4b3a      	ldr	r3, [pc, #232]	@ (8023b74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b0>)
 8023a8c:	4a35      	ldr	r2, [pc, #212]	@ (8023b64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023a8e:	f241 21d8 	movw	r1, #4824	@ 0x12d8
 8023a92:	4835      	ldr	r0, [pc, #212]	@ (8023b68 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023a94:	f00e fd30 	bl	80324f8 <__assert_func>
 8023a98:	687b      	ldr	r3, [r7, #4]
 8023a9a:	781b      	ldrb	r3, [r3, #0]
 8023a9c:	2b01      	cmp	r3, #1
 8023a9e:	f000 80c0 	beq.w	8023c22 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x75e>
 8023aa2:	f0c0 80bc 	bcc.w	8023c1e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x75a>
 8023aa6:	2b02      	cmp	r3, #2
 8023aa8:	f47f ad99 	bne.w	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023aac:	4b32      	ldr	r3, [pc, #200]	@ (8023b78 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b4>)
 8023aae:	4a2d      	ldr	r2, [pc, #180]	@ (8023b64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a0>)
 8023ab0:	f241 21e4 	movw	r1, #4836	@ 0x12e4
 8023ab4:	482c      	ldr	r0, [pc, #176]	@ (8023b68 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6a4>)
 8023ab6:	f00e fd1f 	bl	80324f8 <__assert_func>
 8023aba:	687b      	ldr	r3, [r7, #4]
 8023abc:	481b      	ldr	r0, [pc, #108]	@ (8023b2c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x668>)
 8023abe:	781b      	ldrb	r3, [r3, #0]
 8023ac0:	2b00      	cmp	r3, #0
 8023ac2:	bf18      	it	ne
 8023ac4:	2000      	movne	r0, #0
 8023ac6:	e58b      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ac8:	687b      	ldr	r3, [r7, #4]
 8023aca:	4814      	ldr	r0, [pc, #80]	@ (8023b1c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x658>)
 8023acc:	781b      	ldrb	r3, [r3, #0]
 8023ace:	2b00      	cmp	r3, #0
 8023ad0:	bf18      	it	ne
 8023ad2:	2000      	movne	r0, #0
 8023ad4:	e584      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023ad6:	687b      	ldr	r3, [r7, #4]
 8023ad8:	781b      	ldrb	r3, [r3, #0]
 8023ada:	2b00      	cmp	r3, #0
 8023adc:	f000 80af 	beq.w	8023c3e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x77a>
 8023ae0:	2b01      	cmp	r3, #1
 8023ae2:	481a      	ldr	r0, [pc, #104]	@ (8023b4c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x688>)
 8023ae4:	bf18      	it	ne
 8023ae6:	2000      	movne	r0, #0
 8023ae8:	e57a      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023aea:	687b      	ldr	r3, [r7, #4]
 8023aec:	781b      	ldrb	r3, [r3, #0]
 8023aee:	2b00      	cmp	r3, #0
 8023af0:	f000 80a7 	beq.w	8023c42 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x77e>
 8023af4:	2b01      	cmp	r3, #1
 8023af6:	4811      	ldr	r0, [pc, #68]	@ (8023b3c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x678>)
 8023af8:	bf18      	it	ne
 8023afa:	2000      	movne	r0, #0
 8023afc:	e570      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023afe:	687b      	ldr	r3, [r7, #4]
 8023b00:	481e      	ldr	r0, [pc, #120]	@ (8023b7c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6b8>)
 8023b02:	781b      	ldrb	r3, [r3, #0]
 8023b04:	2b00      	cmp	r3, #0
 8023b06:	bf18      	it	ne
 8023b08:	2000      	movne	r0, #0
 8023b0a:	e569      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023b0c:	20000000 	.word	0x20000000
 8023b10:	08022871 	.word	0x08022871
 8023b14:	20000214 	.word	0x20000214
 8023b18:	08022885 	.word	0x08022885
 8023b1c:	2000021c 	.word	0x2000021c
 8023b20:	08022889 	.word	0x08022889
 8023b24:	20000204 	.word	0x20000204
 8023b28:	0802287d 	.word	0x0802287d
 8023b2c:	2000023c 	.word	0x2000023c
 8023b30:	08022881 	.word	0x08022881
 8023b34:	20000230 	.word	0x20000230
 8023b38:	08022895 	.word	0x08022895
 8023b3c:	200001f8 	.word	0x200001f8
 8023b40:	08022899 	.word	0x08022899
 8023b44:	200001ec 	.word	0x200001ec
 8023b48:	0802288d 	.word	0x0802288d
 8023b4c:	20000224 	.word	0x20000224
 8023b50:	08022891 	.word	0x08022891
 8023b54:	20000210 	.word	0x20000210
 8023b58:	20000238 	.word	0x20000238
 8023b5c:	2000020c 	.word	0x2000020c
 8023b60:	08036498 	.word	0x08036498
 8023b64:	08037924 	.word	0x08037924
 8023b68:	080362e0 	.word	0x080362e0
 8023b6c:	20000234 	.word	0x20000234
 8023b70:	20000208 	.word	0x20000208
 8023b74:	08036404 	.word	0x08036404
 8023b78:	0803644c 	.word	0x0803644c
 8023b7c:	20000240 	.word	0x20000240
 8023b80:	687b      	ldr	r3, [r7, #4]
 8023b82:	781b      	ldrb	r3, [r3, #0]
 8023b84:	2b01      	cmp	r3, #1
 8023b86:	d060      	beq.n	8023c4a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x786>
 8023b88:	d35d      	bcc.n	8023c46 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x782>
 8023b8a:	2b02      	cmp	r3, #2
 8023b8c:	f47f ad27 	bne.w	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023b90:	4b2f      	ldr	r3, [pc, #188]	@ (8023c50 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023b92:	4a30      	ldr	r2, [pc, #192]	@ (8023c54 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023b94:	f241 3103 	movw	r1, #4867	@ 0x1303
 8023b98:	482f      	ldr	r0, [pc, #188]	@ (8023c58 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023b9a:	f00e fcad 	bl	80324f8 <__assert_func>
 8023b9e:	687b      	ldr	r3, [r7, #4]
 8023ba0:	781b      	ldrb	r3, [r3, #0]
 8023ba2:	2b01      	cmp	r3, #1
 8023ba4:	d049      	beq.n	8023c3a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x776>
 8023ba6:	d346      	bcc.n	8023c36 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x772>
 8023ba8:	2b02      	cmp	r3, #2
 8023baa:	f47f ad18 	bne.w	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023bae:	4b28      	ldr	r3, [pc, #160]	@ (8023c50 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023bb0:	4a28      	ldr	r2, [pc, #160]	@ (8023c54 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023bb2:	f241 310f 	movw	r1, #4879	@ 0x130f
 8023bb6:	4828      	ldr	r0, [pc, #160]	@ (8023c58 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023bb8:	f00e fc9e 	bl	80324f8 <__assert_func>
 8023bbc:	687b      	ldr	r3, [r7, #4]
 8023bbe:	4827      	ldr	r0, [pc, #156]	@ (8023c5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x798>)
 8023bc0:	781b      	ldrb	r3, [r3, #0]
 8023bc2:	2b00      	cmp	r3, #0
 8023bc4:	bf18      	it	ne
 8023bc6:	2000      	movne	r0, #0
 8023bc8:	e50a      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023bca:	687b      	ldr	r3, [r7, #4]
 8023bcc:	781b      	ldrb	r3, [r3, #0]
 8023bce:	2b01      	cmp	r3, #1
 8023bd0:	d02d      	beq.n	8023c2e <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76a>
 8023bd2:	d318      	bcc.n	8023c06 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x742>
 8023bd4:	2b02      	cmp	r3, #2
 8023bd6:	f47f ad02 	bne.w	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023bda:	4b1d      	ldr	r3, [pc, #116]	@ (8023c50 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023bdc:	4a1d      	ldr	r2, [pc, #116]	@ (8023c54 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023bde:	f44f 519b 	mov.w	r1, #4960	@ 0x1360
 8023be2:	481d      	ldr	r0, [pc, #116]	@ (8023c58 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023be4:	f00e fc88 	bl	80324f8 <__assert_func>
 8023be8:	687b      	ldr	r3, [r7, #4]
 8023bea:	781b      	ldrb	r3, [r3, #0]
 8023bec:	2b01      	cmp	r3, #1
 8023bee:	d020      	beq.n	8023c32 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76e>
 8023bf0:	d30b      	bcc.n	8023c0a <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x746>
 8023bf2:	2b02      	cmp	r3, #2
 8023bf4:	f47f acf3 	bne.w	80235de <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11a>
 8023bf8:	4b15      	ldr	r3, [pc, #84]	@ (8023c50 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x78c>)
 8023bfa:	4a16      	ldr	r2, [pc, #88]	@ (8023c54 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x790>)
 8023bfc:	f241 316c 	movw	r1, #4972	@ 0x136c
 8023c00:	4815      	ldr	r0, [pc, #84]	@ (8023c58 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x794>)
 8023c02:	f00e fc79 	bl	80324f8 <__assert_func>
 8023c06:	4816      	ldr	r0, [pc, #88]	@ (8023c60 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x79c>)
 8023c08:	e4ea      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c0a:	4816      	ldr	r0, [pc, #88]	@ (8023c64 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a0>)
 8023c0c:	e4e8      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c0e:	4816      	ldr	r0, [pc, #88]	@ (8023c68 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a4>)
 8023c10:	e4e6      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c12:	4816      	ldr	r0, [pc, #88]	@ (8023c6c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7a8>)
 8023c14:	e4e4      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c16:	4816      	ldr	r0, [pc, #88]	@ (8023c70 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7ac>)
 8023c18:	e4e2      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c1a:	4816      	ldr	r0, [pc, #88]	@ (8023c74 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b0>)
 8023c1c:	e4e0      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c1e:	4816      	ldr	r0, [pc, #88]	@ (8023c78 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b4>)
 8023c20:	e4de      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c22:	4816      	ldr	r0, [pc, #88]	@ (8023c7c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7b8>)
 8023c24:	e4dc      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c26:	4816      	ldr	r0, [pc, #88]	@ (8023c80 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7bc>)
 8023c28:	e4da      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c2a:	4816      	ldr	r0, [pc, #88]	@ (8023c84 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c0>)
 8023c2c:	e4d8      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c2e:	4816      	ldr	r0, [pc, #88]	@ (8023c88 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c4>)
 8023c30:	e4d6      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c32:	4816      	ldr	r0, [pc, #88]	@ (8023c8c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c8>)
 8023c34:	e4d4      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c36:	4809      	ldr	r0, [pc, #36]	@ (8023c5c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x798>)
 8023c38:	e4d2      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c3a:	4815      	ldr	r0, [pc, #84]	@ (8023c90 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7cc>)
 8023c3c:	e4d0      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c3e:	4815      	ldr	r0, [pc, #84]	@ (8023c94 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d0>)
 8023c40:	e4ce      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c42:	4815      	ldr	r0, [pc, #84]	@ (8023c98 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d4>)
 8023c44:	e4cc      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c46:	4815      	ldr	r0, [pc, #84]	@ (8023c9c <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7d8>)
 8023c48:	e4ca      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c4a:	4815      	ldr	r0, [pc, #84]	@ (8023ca0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7dc>)
 8023c4c:	e4c8      	b.n	80235e0 <_ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11c>
 8023c4e:	bf00      	nop
 8023c50:	0803644c 	.word	0x0803644c
 8023c54:	08037924 	.word	0x08037924
 8023c58:	080362e0 	.word	0x080362e0
 8023c5c:	20000220 	.word	0x20000220
 8023c60:	20000238 	.word	0x20000238
 8023c64:	2000020c 	.word	0x2000020c
 8023c68:	200001f4 	.word	0x200001f4
 8023c6c:	20000218 	.word	0x20000218
 8023c70:	20000230 	.word	0x20000230
 8023c74:	20000204 	.word	0x20000204
 8023c78:	20000208 	.word	0x20000208
 8023c7c:	200001f0 	.word	0x200001f0
 8023c80:	20000234 	.word	0x20000234
 8023c84:	20000214 	.word	0x20000214
 8023c88:	2000022c 	.word	0x2000022c
 8023c8c:	20000200 	.word	0x20000200
 8023c90:	200001fc 	.word	0x200001fc
 8023c94:	2000023c 	.word	0x2000023c
 8023c98:	2000021c 	.word	0x2000021c
 8023c9c:	20000240 	.word	0x20000240
 8023ca0:	20000228 	.word	0x20000228

08023ca4 <_ZN8touchgfx8LCDGPU2DD0Ev>:
 8023ca4:	b510      	push	{r4, lr}
 8023ca6:	4604      	mov	r4, r0
 8023ca8:	f44f 6105 	mov.w	r1, #2128	@ 0x850
 8023cac:	f00d fa4b 	bl	8031146 <_ZdlPvj>
 8023cb0:	4620      	mov	r0, r4
 8023cb2:	bd10      	pop	{r4, pc}

08023cb4 <_ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8023cb4:	b510      	push	{r4, lr}
 8023cb6:	4604      	mov	r4, r0
 8023cb8:	2104      	movs	r1, #4
 8023cba:	f00d fa44 	bl	8031146 <_ZdlPvj>
 8023cbe:	4620      	mov	r0, r4
 8023cc0:	bd10      	pop	{r4, pc}
 8023cc2:	bf00      	nop

08023cc4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023cc4:	b510      	push	{r4, lr}
 8023cc6:	4604      	mov	r4, r0
 8023cc8:	2104      	movs	r1, #4
 8023cca:	f00d fa3c 	bl	8031146 <_ZdlPvj>
 8023cce:	4620      	mov	r0, r4
 8023cd0:	bd10      	pop	{r4, pc}
 8023cd2:	bf00      	nop

08023cd4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8023cd4:	b510      	push	{r4, lr}
 8023cd6:	4604      	mov	r4, r0
 8023cd8:	2104      	movs	r1, #4
 8023cda:	f00d fa34 	bl	8031146 <_ZdlPvj>
 8023cde:	4620      	mov	r0, r4
 8023ce0:	bd10      	pop	{r4, pc}
 8023ce2:	bf00      	nop

08023ce4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023ce4:	b510      	push	{r4, lr}
 8023ce6:	4604      	mov	r4, r0
 8023ce8:	2104      	movs	r1, #4
 8023cea:	f00d fa2c 	bl	8031146 <_ZdlPvj>
 8023cee:	4620      	mov	r0, r4
 8023cf0:	bd10      	pop	{r4, pc}
 8023cf2:	bf00      	nop

08023cf4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023cf4:	b510      	push	{r4, lr}
 8023cf6:	4604      	mov	r4, r0
 8023cf8:	2104      	movs	r1, #4
 8023cfa:	f00d fa24 	bl	8031146 <_ZdlPvj>
 8023cfe:	4620      	mov	r0, r4
 8023d00:	bd10      	pop	{r4, pc}
 8023d02:	bf00      	nop

08023d04 <_ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8023d04:	b510      	push	{r4, lr}
 8023d06:	4604      	mov	r4, r0
 8023d08:	2104      	movs	r1, #4
 8023d0a:	f00d fa1c 	bl	8031146 <_ZdlPvj>
 8023d0e:	4620      	mov	r0, r4
 8023d10:	bd10      	pop	{r4, pc}
 8023d12:	bf00      	nop

08023d14 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8023d14:	b510      	push	{r4, lr}
 8023d16:	4604      	mov	r4, r0
 8023d18:	2104      	movs	r1, #4
 8023d1a:	f00d fa14 	bl	8031146 <_ZdlPvj>
 8023d1e:	4620      	mov	r0, r4
 8023d20:	bd10      	pop	{r4, pc}
 8023d22:	bf00      	nop

08023d24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8023d24:	b510      	push	{r4, lr}
 8023d26:	4604      	mov	r4, r0
 8023d28:	2104      	movs	r1, #4
 8023d2a:	f00d fa0c 	bl	8031146 <_ZdlPvj>
 8023d2e:	4620      	mov	r0, r4
 8023d30:	bd10      	pop	{r4, pc}
 8023d32:	bf00      	nop

08023d34 <_ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8023d34:	b510      	push	{r4, lr}
 8023d36:	4604      	mov	r4, r0
 8023d38:	2104      	movs	r1, #4
 8023d3a:	f00d fa04 	bl	8031146 <_ZdlPvj>
 8023d3e:	4620      	mov	r0, r4
 8023d40:	bd10      	pop	{r4, pc}
 8023d42:	bf00      	nop

08023d44 <_ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023d44:	b510      	push	{r4, lr}
 8023d46:	4604      	mov	r4, r0
 8023d48:	2104      	movs	r1, #4
 8023d4a:	f00d f9fc 	bl	8031146 <_ZdlPvj>
 8023d4e:	4620      	mov	r0, r4
 8023d50:	bd10      	pop	{r4, pc}
 8023d52:	bf00      	nop

08023d54 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8023d54:	b510      	push	{r4, lr}
 8023d56:	4604      	mov	r4, r0
 8023d58:	2104      	movs	r1, #4
 8023d5a:	f00d f9f4 	bl	8031146 <_ZdlPvj>
 8023d5e:	4620      	mov	r0, r4
 8023d60:	bd10      	pop	{r4, pc}
 8023d62:	bf00      	nop

08023d64 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023d64:	b510      	push	{r4, lr}
 8023d66:	4604      	mov	r4, r0
 8023d68:	2104      	movs	r1, #4
 8023d6a:	f00d f9ec 	bl	8031146 <_ZdlPvj>
 8023d6e:	4620      	mov	r0, r4
 8023d70:	bd10      	pop	{r4, pc}
 8023d72:	bf00      	nop

08023d74 <_ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023d74:	b510      	push	{r4, lr}
 8023d76:	4604      	mov	r4, r0
 8023d78:	2104      	movs	r1, #4
 8023d7a:	f00d f9e4 	bl	8031146 <_ZdlPvj>
 8023d7e:	4620      	mov	r0, r4
 8023d80:	bd10      	pop	{r4, pc}
 8023d82:	bf00      	nop

08023d84 <_ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8023d84:	b510      	push	{r4, lr}
 8023d86:	4604      	mov	r4, r0
 8023d88:	2104      	movs	r1, #4
 8023d8a:	f00d f9dc 	bl	8031146 <_ZdlPvj>
 8023d8e:	4620      	mov	r0, r4
 8023d90:	bd10      	pop	{r4, pc}
 8023d92:	bf00      	nop

08023d94 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8023d94:	b510      	push	{r4, lr}
 8023d96:	4604      	mov	r4, r0
 8023d98:	2104      	movs	r1, #4
 8023d9a:	f00d f9d4 	bl	8031146 <_ZdlPvj>
 8023d9e:	4620      	mov	r0, r4
 8023da0:	bd10      	pop	{r4, pc}
 8023da2:	bf00      	nop

08023da4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8023da4:	b510      	push	{r4, lr}
 8023da6:	4604      	mov	r4, r0
 8023da8:	2104      	movs	r1, #4
 8023daa:	f00d f9cc 	bl	8031146 <_ZdlPvj>
 8023dae:	4620      	mov	r0, r4
 8023db0:	bd10      	pop	{r4, pc}
 8023db2:	bf00      	nop

08023db4 <_ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8023db4:	b510      	push	{r4, lr}
 8023db6:	4604      	mov	r4, r0
 8023db8:	2104      	movs	r1, #4
 8023dba:	f00d f9c4 	bl	8031146 <_ZdlPvj>
 8023dbe:	4620      	mov	r0, r4
 8023dc0:	bd10      	pop	{r4, pc}
 8023dc2:	bf00      	nop

08023dc4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8023dc4:	b510      	push	{r4, lr}
 8023dc6:	4604      	mov	r4, r0
 8023dc8:	2104      	movs	r1, #4
 8023dca:	f00d f9bc 	bl	8031146 <_ZdlPvj>
 8023dce:	4620      	mov	r0, r4
 8023dd0:	bd10      	pop	{r4, pc}
 8023dd2:	bf00      	nop

08023dd4 <_ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8023dd4:	b510      	push	{r4, lr}
 8023dd6:	4604      	mov	r4, r0
 8023dd8:	2104      	movs	r1, #4
 8023dda:	f00d f9b4 	bl	8031146 <_ZdlPvj>
 8023dde:	4620      	mov	r0, r4
 8023de0:	bd10      	pop	{r4, pc}
 8023de2:	bf00      	nop

08023de4 <_ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8023de4:	b510      	push	{r4, lr}
 8023de6:	4604      	mov	r4, r0
 8023de8:	2104      	movs	r1, #4
 8023dea:	f00d f9ac 	bl	8031146 <_ZdlPvj>
 8023dee:	4620      	mov	r0, r4
 8023df0:	bd10      	pop	{r4, pc}
 8023df2:	bf00      	nop

08023df4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8023df4:	b510      	push	{r4, lr}
 8023df6:	4604      	mov	r4, r0
 8023df8:	2104      	movs	r1, #4
 8023dfa:	f00d f9a4 	bl	8031146 <_ZdlPvj>
 8023dfe:	4620      	mov	r0, r4
 8023e00:	bd10      	pop	{r4, pc}
 8023e02:	bf00      	nop

08023e04 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8023e04:	b510      	push	{r4, lr}
 8023e06:	4604      	mov	r4, r0
 8023e08:	2104      	movs	r1, #4
 8023e0a:	f00d f99c 	bl	8031146 <_ZdlPvj>
 8023e0e:	4620      	mov	r0, r4
 8023e10:	bd10      	pop	{r4, pc}
 8023e12:	bf00      	nop

08023e14 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>:
 8023e14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023e18:	461c      	mov	r4, r3
 8023e1a:	4617      	mov	r7, r2
 8023e1c:	b086      	sub	sp, #24
 8023e1e:	4606      	mov	r6, r0
 8023e20:	4688      	mov	r8, r1
 8023e22:	6818      	ldr	r0, [r3, #0]
 8023e24:	6859      	ldr	r1, [r3, #4]
 8023e26:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8023e28:	ad02      	add	r5, sp, #8
 8023e2a:	c503      	stmia	r5!, {r0, r1}
 8023e2c:	6818      	ldr	r0, [r3, #0]
 8023e2e:	6859      	ldr	r1, [r3, #4]
 8023e30:	ad04      	add	r5, sp, #16
 8023e32:	c503      	stmia	r5!, {r0, r1}
 8023e34:	a802      	add	r0, sp, #8
 8023e36:	f89d a03c 	ldrb.w	sl, [sp, #60]	@ 0x3c
 8023e3a:	f7e8 ff81 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023e3e:	4621      	mov	r1, r4
 8023e40:	a804      	add	r0, sp, #16
 8023e42:	f7e8 ffa5 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023e46:	2f01      	cmp	r7, #1
 8023e48:	d05c      	beq.n	8023f04 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf0>
 8023e4a:	d357      	bcc.n	8023efc <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xe8>
 8023e4c:	2f02      	cmp	r7, #2
 8023e4e:	d163      	bne.n	8023f18 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x104>
 8023e50:	f04f 0910 	mov.w	r9, #16
 8023e54:	2504      	movs	r5, #4
 8023e56:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8023e5a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8023e5e:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8023e62:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8023e66:	fb14 2403 	smlabb	r4, r4, r3, r2
 8023e6a:	4f2e      	ldr	r7, [pc, #184]	@ (8023f24 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x110>)
 8023e6c:	440a      	add	r2, r1
 8023e6e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8023e72:	6838      	ldr	r0, [r7, #0]
 8023e74:	440b      	add	r3, r1
 8023e76:	fb05 8404 	mla	r4, r5, r4, r8
 8023e7a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8023e7e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8023e82:	2800      	cmp	r0, #0
 8023e84:	d042      	beq.n	8023f0c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf8>
 8023e86:	f7fc fea7 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8023e8a:	6833      	ldr	r3, [r6, #0]
 8023e8c:	4630      	mov	r0, r6
 8023e8e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8023e90:	4798      	blx	r3
 8023e92:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8023e96:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8023e9a:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8023e9e:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8023ea2:	f7ec ff21 	bl	8010ce8 <nema_set_clip>
 8023ea6:	2200      	movs	r2, #0
 8023ea8:	2600      	movs	r6, #0
 8023eaa:	4611      	mov	r1, r2
 8023eac:	4653      	mov	r3, sl
 8023eae:	4610      	mov	r0, r2
 8023eb0:	f7ec fff8 	bl	8010ea4 <nema_rgba>
 8023eb4:	f7fa fc7a 	bl	801e7ac <nema_set_const_color>
 8023eb8:	f04f 33ff 	mov.w	r3, #4294967295
 8023ebc:	2201      	movs	r2, #1
 8023ebe:	2100      	movs	r1, #0
 8023ec0:	4819      	ldr	r0, [pc, #100]	@ (8023f28 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x114>)
 8023ec2:	f7fa f8ad 	bl	801e020 <nema_set_blend>
 8023ec6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8023eca:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 8023ece:	fb05 f503 	mul.w	r5, r5, r3
 8023ed2:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 8023ed6:	464b      	mov	r3, r9
 8023ed8:	4620      	mov	r0, r4
 8023eda:	e9cd 5600 	strd	r5, r6, [sp]
 8023ede:	f7ec ffe9 	bl	8010eb4 <nema_bind_src_tex>
 8023ee2:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8023ee6:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8023eea:	f7ed fa3d 	bl	8011368 <nema_blit>
 8023eee:	6838      	ldr	r0, [r7, #0]
 8023ef0:	b160      	cbz	r0, 8023f0c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0xf8>
 8023ef2:	f7fc fe91 	bl	8020c18 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8023ef6:	b006      	add	sp, #24
 8023ef8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023efc:	f04f 0904 	mov.w	r9, #4
 8023f00:	2502      	movs	r5, #2
 8023f02:	e7a8      	b.n	8023e56 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x42>
 8023f04:	f04f 0939 	mov.w	r9, #57	@ 0x39
 8023f08:	2503      	movs	r5, #3
 8023f0a:	e7a4      	b.n	8023e56 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x42>
 8023f0c:	4b07      	ldr	r3, [pc, #28]	@ (8023f2c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x118>)
 8023f0e:	4a08      	ldr	r2, [pc, #32]	@ (8023f30 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x11c>)
 8023f10:	217c      	movs	r1, #124	@ 0x7c
 8023f12:	4808      	ldr	r0, [pc, #32]	@ (8023f34 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x120>)
 8023f14:	f00e faf0 	bl	80324f8 <__assert_func>
 8023f18:	4b07      	ldr	r3, [pc, #28]	@ (8023f38 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x124>)
 8023f1a:	4a08      	ldr	r2, [pc, #32]	@ (8023f3c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x128>)
 8023f1c:	21c9      	movs	r1, #201	@ 0xc9
 8023f1e:	4808      	ldr	r0, [pc, #32]	@ (8023f40 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6+0x12c>)
 8023f20:	f00e faea 	bl	80324f8 <__assert_func>
 8023f24:	200833a8 	.word	0x200833a8
 8023f28:	08000504 	.word	0x08000504
 8023f2c:	0803623c 	.word	0x0803623c
 8023f30:	08036aa8 	.word	0x08036aa8
 8023f34:	08036264 	.word	0x08036264
 8023f38:	080366e8 	.word	0x080366e8
 8023f3c:	08037e4c 	.word	0x08037e4c
 8023f40:	080362e0 	.word	0x080362e0

08023f44 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>:
 8023f44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023f46:	680c      	ldr	r4, [r1, #0]
 8023f48:	7805      	ldrb	r5, [r0, #0]
 8023f4a:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8023f4e:	7847      	ldrb	r7, [r0, #1]
 8023f50:	7883      	ldrb	r3, [r0, #2]
 8023f52:	d02e      	beq.n	8023fb2 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19+0x6e>
 8023f54:	fb02 f60c 	mul.w	r6, r2, ip
 8023f58:	fb12 f303 	smulbb	r3, r2, r3
 8023f5c:	1c70      	adds	r0, r6, #1
 8023f5e:	fb15 f502 	smulbb	r5, r5, r2
 8023f62:	eb00 2026 	add.w	r0, r0, r6, asr #8
 8023f66:	1200      	asrs	r0, r0, #8
 8023f68:	fb12 f707 	smulbb	r7, r2, r7
 8023f6c:	ebac 0600 	sub.w	r6, ip, r0
 8023f70:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8023f74:	fb06 330e 	mla	r3, r6, lr, r3
 8023f78:	fa5f fe84 	uxtb.w	lr, r4
 8023f7c:	fb06 550e 	mla	r5, r6, lr, r5
 8023f80:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8023f84:	fb06 7404 	mla	r4, r6, r4, r7
 8023f88:	4462      	add	r2, ip
 8023f8a:	1a12      	subs	r2, r2, r0
 8023f8c:	b2d0      	uxtb	r0, r2
 8023f8e:	fbb3 f2f0 	udiv	r2, r3, r0
 8023f92:	fbb5 f5f0 	udiv	r5, r5, r0
 8023f96:	fbb4 f3f0 	udiv	r3, r4, r0
 8023f9a:	0412      	lsls	r2, r2, #16
 8023f9c:	b2ec      	uxtb	r4, r5
 8023f9e:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8023fa2:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 8023fa6:	021b      	lsls	r3, r3, #8
 8023fa8:	4302      	orrs	r2, r0
 8023faa:	b29b      	uxth	r3, r3
 8023fac:	431a      	orrs	r2, r3
 8023fae:	600a      	str	r2, [r1, #0]
 8023fb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023fb2:	041b      	lsls	r3, r3, #16
 8023fb4:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8023fb8:	432a      	orrs	r2, r5
 8023fba:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 8023fbe:	600a      	str	r2, [r1, #0]
 8023fc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023fc2:	bf00      	nop

08023fc4 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb>:
 8023fc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023fc8:	4c1e      	ldr	r4, [pc, #120]	@ (8024044 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x80>)
 8023fca:	6806      	ldr	r6, [r0, #0]
 8023fcc:	6824      	ldr	r4, [r4, #0]
 8023fce:	4605      	mov	r5, r0
 8023fd0:	f894 0058 	ldrb.w	r0, [r4, #88]	@ 0x58
 8023fd4:	b087      	sub	sp, #28
 8023fd6:	6937      	ldr	r7, [r6, #16]
 8023fd8:	4690      	mov	r8, r2
 8023fda:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8023fde:	f89d 903c 	ldrb.w	r9, [sp, #60]	@ 0x3c
 8023fe2:	b170      	cbz	r0, 8024002 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8023fe4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8023fe6:	b160      	cbz	r0, 8024002 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x3e>
 8023fe8:	6804      	ldr	r4, [r0, #0]
 8023fea:	4a17      	ldr	r2, [pc, #92]	@ (8024048 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 8023fec:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 8023fee:	4294      	cmp	r4, r2
 8023ff0:	d10d      	bne.n	802400e <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x4a>
 8023ff2:	4c16      	ldr	r4, [pc, #88]	@ (802404c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 8023ff4:	7b02      	ldrb	r2, [r0, #12]
 8023ff6:	42a7      	cmp	r7, r4
 8023ff8:	d112      	bne.n	8024020 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x5c>
 8023ffa:	b9d6      	cbnz	r6, 8024032 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x6e>
 8023ffc:	b007      	add	sp, #28
 8023ffe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024002:	68a0      	ldr	r0, [r4, #8]
 8024004:	4a10      	ldr	r2, [pc, #64]	@ (8024048 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x84>)
 8024006:	6804      	ldr	r4, [r0, #0]
 8024008:	6ae4      	ldr	r4, [r4, #44]	@ 0x2c
 802400a:	4294      	cmp	r4, r2
 802400c:	d0f1      	beq.n	8023ff2 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x2e>
 802400e:	e9cd 1304 	strd	r1, r3, [sp, #16]
 8024012:	47a0      	blx	r4
 8024014:	e9dd 1304 	ldrd	r1, r3, [sp, #16]
 8024018:	4c0c      	ldr	r4, [pc, #48]	@ (802404c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x88>)
 802401a:	4602      	mov	r2, r0
 802401c:	42a7      	cmp	r7, r4
 802401e:	d0ec      	beq.n	8023ffa <_ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb+0x36>
 8024020:	9300      	str	r3, [sp, #0]
 8024022:	e9cd 6901 	strd	r6, r9, [sp, #4]
 8024026:	4643      	mov	r3, r8
 8024028:	4628      	mov	r0, r5
 802402a:	47b8      	blx	r7
 802402c:	b007      	add	sp, #28
 802402e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024032:	e9cd 360e 	strd	r3, r6, [sp, #56]	@ 0x38
 8024036:	4628      	mov	r0, r5
 8024038:	4643      	mov	r3, r8
 802403a:	b007      	add	sp, #28
 802403c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024040:	f7ff bee8 	b.w	8023e14 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>
 8024044:	20082f08 	.word	0x20082f08
 8024048:	08020cbd 	.word	0x08020cbd
 802404c:	08024051 	.word	0x08024051

08024050 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8024050:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024054:	b087      	sub	sp, #28
 8024056:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 802405a:	b915      	cbnz	r5, 8024062 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x12>
 802405c:	b007      	add	sp, #28
 802405e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024062:	461c      	mov	r4, r3
 8024064:	4617      	mov	r7, r2
 8024066:	4688      	mov	r8, r1
 8024068:	4606      	mov	r6, r0
 802406a:	6859      	ldr	r1, [r3, #4]
 802406c:	6818      	ldr	r0, [r3, #0]
 802406e:	ab02      	add	r3, sp, #8
 8024070:	c303      	stmia	r3!, {r0, r1}
 8024072:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8024074:	6818      	ldr	r0, [r3, #0]
 8024076:	6859      	ldr	r1, [r3, #4]
 8024078:	ab04      	add	r3, sp, #16
 802407a:	c303      	stmia	r3!, {r0, r1}
 802407c:	a802      	add	r0, sp, #8
 802407e:	f7e8 fe5f 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024082:	4621      	mov	r1, r4
 8024084:	a804      	add	r0, sp, #16
 8024086:	f7e8 fe83 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802408a:	2f01      	cmp	r7, #1
 802408c:	d05c      	beq.n	8024148 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xf8>
 802408e:	d357      	bcc.n	8024140 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0xf0>
 8024090:	2f02      	cmp	r7, #2
 8024092:	d163      	bne.n	802415c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x10c>
 8024094:	f04f 0910 	mov.w	r9, #16
 8024098:	2404      	movs	r4, #4
 802409a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802409e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80240a2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80240a6:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 80240aa:	fb11 2103 	smlabb	r1, r1, r3, r2
 80240ae:	4f2e      	ldr	r7, [pc, #184]	@ (8024168 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x118>)
 80240b0:	fb04 8801 	mla	r8, r4, r1, r8
 80240b4:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80240b8:	4402      	add	r2, r0
 80240ba:	6838      	ldr	r0, [r7, #0]
 80240bc:	440b      	add	r3, r1
 80240be:	f8ad 2010 	strh.w	r2, [sp, #16]
 80240c2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80240c6:	2800      	cmp	r0, #0
 80240c8:	d042      	beq.n	8024150 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x100>
 80240ca:	f7fc fd85 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 80240ce:	6833      	ldr	r3, [r6, #0]
 80240d0:	4630      	mov	r0, r6
 80240d2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80240d4:	4798      	blx	r3
 80240d6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80240da:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80240de:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80240e2:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 80240e6:	f7ec fdff 	bl	8010ce8 <nema_set_clip>
 80240ea:	2200      	movs	r2, #0
 80240ec:	462b      	mov	r3, r5
 80240ee:	2500      	movs	r5, #0
 80240f0:	4611      	mov	r1, r2
 80240f2:	4610      	mov	r0, r2
 80240f4:	f7ec fed6 	bl	8010ea4 <nema_rgba>
 80240f8:	f7fa fb58 	bl	801e7ac <nema_set_const_color>
 80240fc:	f04f 33ff 	mov.w	r3, #4294967295
 8024100:	2201      	movs	r2, #1
 8024102:	2100      	movs	r1, #0
 8024104:	4819      	ldr	r0, [pc, #100]	@ (802416c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x11c>)
 8024106:	f7f9 ff8b 	bl	801e020 <nema_set_blend>
 802410a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 802410e:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 8024112:	fb04 f403 	mul.w	r4, r4, r3
 8024116:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 802411a:	464b      	mov	r3, r9
 802411c:	4640      	mov	r0, r8
 802411e:	e9cd 4500 	strd	r4, r5, [sp]
 8024122:	f7ec fec7 	bl	8010eb4 <nema_bind_src_tex>
 8024126:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 802412a:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 802412e:	f7ed f91b 	bl	8011368 <nema_blit>
 8024132:	6838      	ldr	r0, [r7, #0]
 8024134:	b160      	cbz	r0, 8024150 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x100>
 8024136:	f7fc fd6f 	bl	8020c18 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 802413a:	b007      	add	sp, #28
 802413c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024140:	f04f 0904 	mov.w	r9, #4
 8024144:	2402      	movs	r4, #2
 8024146:	e7a8      	b.n	802409a <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x4a>
 8024148:	f04f 0939 	mov.w	r9, #57	@ 0x39
 802414c:	2403      	movs	r4, #3
 802414e:	e7a4      	b.n	802409a <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x4a>
 8024150:	4b07      	ldr	r3, [pc, #28]	@ (8024170 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x120>)
 8024152:	4a08      	ldr	r2, [pc, #32]	@ (8024174 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x124>)
 8024154:	217c      	movs	r1, #124	@ 0x7c
 8024156:	4808      	ldr	r0, [pc, #32]	@ (8024178 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x128>)
 8024158:	f00e f9ce 	bl	80324f8 <__assert_func>
 802415c:	4b07      	ldr	r3, [pc, #28]	@ (802417c <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x12c>)
 802415e:	4a08      	ldr	r2, [pc, #32]	@ (8024180 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x130>)
 8024160:	21c9      	movs	r1, #201	@ 0xc9
 8024162:	4808      	ldr	r0, [pc, #32]	@ (8024184 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x134>)
 8024164:	f00e f9c8 	bl	80324f8 <__assert_func>
 8024168:	200833a8 	.word	0x200833a8
 802416c:	08000504 	.word	0x08000504
 8024170:	0803623c 	.word	0x0803623c
 8024174:	08036aa8 	.word	0x08036aa8
 8024178:	08036264 	.word	0x08036264
 802417c:	080366e8 	.word	0x080366e8
 8024180:	08037e4c 	.word	0x08037e4c
 8024184:	080362e0 	.word	0x080362e0

08024188 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8024188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802418c:	4682      	mov	sl, r0
 802418e:	4851      	ldr	r0, [pc, #324]	@ (80242d4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x14c>)
 8024190:	b08f      	sub	sp, #60	@ 0x3c
 8024192:	6800      	ldr	r0, [r0, #0]
 8024194:	9104      	str	r1, [sp, #16]
 8024196:	f890 1048 	ldrb.w	r1, [r0, #72]	@ 0x48
 802419a:	f9bd 0064 	ldrsh.w	r0, [sp, #100]	@ 0x64
 802419e:	2902      	cmp	r1, #2
 80241a0:	9003      	str	r0, [sp, #12]
 80241a2:	f9bd 0068 	ldrsh.w	r0, [sp, #104]	@ 0x68
 80241a6:	9006      	str	r0, [sp, #24]
 80241a8:	f000 81cd 	beq.w	8024546 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3be>
 80241ac:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80241ae:	2900      	cmp	r1, #0
 80241b0:	f000 81c3 	beq.w	802453a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3b2>
 80241b4:	f9b3 5000 	ldrsh.w	r5, [r3]
 80241b8:	8899      	ldrh	r1, [r3, #4]
 80241ba:	b2ae      	uxth	r6, r5
 80241bc:	4431      	add	r1, r6
 80241be:	b289      	uxth	r1, r1
 80241c0:	fa0f fc81 	sxth.w	ip, r1
 80241c4:	4565      	cmp	r5, ip
 80241c6:	f9b3 4002 	ldrsh.w	r4, [r3, #2]
 80241ca:	da28      	bge.n	802421e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 80241cc:	9803      	ldr	r0, [sp, #12]
 80241ce:	1830      	adds	r0, r6, r0
 80241d0:	b280      	uxth	r0, r0
 80241d2:	9005      	str	r0, [sp, #20]
 80241d4:	f9bd e014 	ldrsh.w	lr, [sp, #20]
 80241d8:	4575      	cmp	r5, lr
 80241da:	da20      	bge.n	802421e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 80241dc:	f8b3 8006 	ldrh.w	r8, [r3, #6]
 80241e0:	b2a7      	uxth	r7, r4
 80241e2:	4638      	mov	r0, r7
 80241e4:	4447      	add	r7, r8
 80241e6:	b2bf      	uxth	r7, r7
 80241e8:	fa0f f987 	sxth.w	r9, r7
 80241ec:	454c      	cmp	r4, r9
 80241ee:	da16      	bge.n	802421e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 80241f0:	4680      	mov	r8, r0
 80241f2:	9007      	str	r0, [sp, #28]
 80241f4:	9806      	ldr	r0, [sp, #24]
 80241f6:	4480      	add	r8, r0
 80241f8:	fa1f f888 	uxth.w	r8, r8
 80241fc:	fa0f fb88 	sxth.w	fp, r8
 8024200:	455c      	cmp	r4, fp
 8024202:	da0c      	bge.n	802421e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x96>
 8024204:	9805      	ldr	r0, [sp, #20]
 8024206:	45d9      	cmp	r9, fp
 8024208:	bfc8      	it	gt
 802420a:	4647      	movgt	r7, r8
 802420c:	45f4      	cmp	ip, lr
 802420e:	bfc8      	it	gt
 8024210:	4601      	movgt	r1, r0
 8024212:	9807      	ldr	r0, [sp, #28]
 8024214:	1b89      	subs	r1, r1, r6
 8024216:	1a3f      	subs	r7, r7, r0
 8024218:	b209      	sxth	r1, r1
 802421a:	b23f      	sxth	r7, r7
 802421c:	e005      	b.n	802422a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xa2>
 802421e:	2700      	movs	r7, #0
 8024220:	463c      	mov	r4, r7
 8024222:	4639      	mov	r1, r7
 8024224:	463e      	mov	r6, r7
 8024226:	463d      	mov	r5, r7
 8024228:	9707      	str	r7, [sp, #28]
 802422a:	f9b2 b000 	ldrsh.w	fp, [r2]
 802422e:	8890      	ldrh	r0, [r2, #4]
 8024230:	4458      	add	r0, fp
 8024232:	b280      	uxth	r0, r0
 8024234:	fa0f fc80 	sxth.w	ip, r0
 8024238:	45ac      	cmp	ip, r5
 802423a:	dd51      	ble.n	80242e0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 802423c:	4431      	add	r1, r6
 802423e:	b289      	uxth	r1, r1
 8024240:	fa0f fe81 	sxth.w	lr, r1
 8024244:	45f3      	cmp	fp, lr
 8024246:	da4b      	bge.n	80242e0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 8024248:	f9b2 8002 	ldrsh.w	r8, [r2, #2]
 802424c:	88d6      	ldrh	r6, [r2, #6]
 802424e:	4446      	add	r6, r8
 8024250:	b2b6      	uxth	r6, r6
 8024252:	fa0f f986 	sxth.w	r9, r6
 8024256:	454c      	cmp	r4, r9
 8024258:	da42      	bge.n	80242e0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 802425a:	9a07      	ldr	r2, [sp, #28]
 802425c:	443a      	add	r2, r7
 802425e:	b297      	uxth	r7, r2
 8024260:	b23a      	sxth	r2, r7
 8024262:	4590      	cmp	r8, r2
 8024264:	9205      	str	r2, [sp, #20]
 8024266:	da3b      	bge.n	80242e0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x158>
 8024268:	45ab      	cmp	fp, r5
 802426a:	bfb8      	it	lt
 802426c:	46ab      	movlt	fp, r5
 802426e:	4544      	cmp	r4, r8
 8024270:	bfb8      	it	lt
 8024272:	4644      	movlt	r4, r8
 8024274:	45f4      	cmp	ip, lr
 8024276:	bfc8      	it	gt
 8024278:	4608      	movgt	r0, r1
 802427a:	9905      	ldr	r1, [sp, #20]
 802427c:	465a      	mov	r2, fp
 802427e:	4589      	cmp	r9, r1
 8024280:	bfc8      	it	gt
 8024282:	463e      	movgt	r6, r7
 8024284:	f8df c054 	ldr.w	ip, [pc, #84]	@ 80242dc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x154>
 8024288:	4f13      	ldr	r7, [pc, #76]	@ (80242d8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x150>)
 802428a:	fa1f f58b 	uxth.w	r5, fp
 802428e:	1b36      	subs	r6, r6, r4
 8024290:	1b41      	subs	r1, r0, r5
 8024292:	f8bc c000 	ldrh.w	ip, [ip]
 8024296:	883f      	ldrh	r7, [r7, #0]
 8024298:	fa0f fb86 	sxth.w	fp, r6
 802429c:	fa0f f981 	sxth.w	r9, r1
 80242a0:	2a00      	cmp	r2, #0
 80242a2:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 80242a6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80242aa:	f8ad 4022 	strh.w	r4, [sp, #34]	@ 0x22
 80242ae:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 80242b2:	fa0f f68c 	sxth.w	r6, ip
 80242b6:	b239      	sxth	r1, r7
 80242b8:	f280 812b 	bge.w	8024512 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x38a>
 80242bc:	f04f 0e00 	mov.w	lr, #0
 80242c0:	fa0f f980 	sxth.w	r9, r0
 80242c4:	4675      	mov	r5, lr
 80242c6:	4672      	mov	r2, lr
 80242c8:	4648      	mov	r0, r9
 80242ca:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 80242ce:	f8ad e020 	strh.w	lr, [sp, #32]
 80242d2:	e015      	b.n	8024300 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x178>
 80242d4:	20082f08 	.word	0x20082f08
 80242d8:	20082efe 	.word	0x20082efe
 80242dc:	20082efc 	.word	0x20082efc
 80242e0:	2200      	movs	r2, #0
 80242e2:	48a3      	ldr	r0, [pc, #652]	@ (8024570 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e8>)
 80242e4:	4615      	mov	r5, r2
 80242e6:	f8b0 c000 	ldrh.w	ip, [r0]
 80242ea:	4693      	mov	fp, r2
 80242ec:	4614      	mov	r4, r2
 80242ee:	4610      	mov	r0, r2
 80242f0:	4691      	mov	r9, r2
 80242f2:	49a0      	ldr	r1, [pc, #640]	@ (8024574 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3ec>)
 80242f4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80242f8:	880f      	ldrh	r7, [r1, #0]
 80242fa:	fa0f f68c 	sxth.w	r6, ip
 80242fe:	b239      	sxth	r1, r7
 8024300:	1ab2      	subs	r2, r6, r2
 8024302:	4282      	cmp	r2, r0
 8024304:	da05      	bge.n	8024312 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x18a>
 8024306:	ebac 0c05 	sub.w	ip, ip, r5
 802430a:	fa0f f98c 	sxth.w	r9, ip
 802430e:	f8ad 9024 	strh.w	r9, [sp, #36]	@ 0x24
 8024312:	2c00      	cmp	r4, #0
 8024314:	f2c0 80e8 	blt.w	80244e8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x360>
 8024318:	4622      	mov	r2, r4
 802431a:	1a89      	subs	r1, r1, r2
 802431c:	458b      	cmp	fp, r1
 802431e:	dd04      	ble.n	802432a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a2>
 8024320:	1b3f      	subs	r7, r7, r4
 8024322:	fa0f fb87 	sxth.w	fp, r7
 8024326:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 802432a:	f1b9 0f00 	cmp.w	r9, #0
 802432e:	f340 80d2 	ble.w	80244d6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34e>
 8024332:	f1bb 0f00 	cmp.w	fp, #0
 8024336:	f340 80ce 	ble.w	80244d6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34e>
 802433a:	2200      	movs	r2, #0
 802433c:	8819      	ldrh	r1, [r3, #0]
 802433e:	f8b3 8002 	ldrh.w	r8, [r3, #2]
 8024342:	9b03      	ldr	r3, [sp, #12]
 8024344:	1a6d      	subs	r5, r5, r1
 8024346:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 802434a:	eba4 0408 	sub.w	r4, r4, r8
 802434e:	9b06      	ldr	r3, [sp, #24]
 8024350:	a90c      	add	r1, sp, #48	@ 0x30
 8024352:	a80a      	add	r0, sp, #40	@ 0x28
 8024354:	b22d      	sxth	r5, r5
 8024356:	b224      	sxth	r4, r4
 8024358:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 802435c:	920c      	str	r2, [sp, #48]	@ 0x30
 802435e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8024362:	f8ad b02e 	strh.w	fp, [sp, #46]	@ 0x2e
 8024366:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 802436a:	f8ad 402a 	strh.w	r4, [sp, #42]	@ 0x2a
 802436e:	f7e8 fd0f 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024372:	a808      	add	r0, sp, #32
 8024374:	f7e8 fce4 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024378:	a80c      	add	r0, sp, #48	@ 0x30
 802437a:	f7e8 fce1 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802437e:	4b7e      	ldr	r3, [pc, #504]	@ (8024578 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f0>)
 8024380:	681b      	ldr	r3, [r3, #0]
 8024382:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8024386:	2a00      	cmp	r2, #0
 8024388:	f040 80ba 	bne.w	8024500 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x378>
 802438c:	6898      	ldr	r0, [r3, #8]
 802438e:	6803      	ldr	r3, [r0, #0]
 8024390:	4a7a      	ldr	r2, [pc, #488]	@ (802457c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f4>)
 8024392:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024394:	4293      	cmp	r3, r2
 8024396:	f040 80c4 	bne.w	8024522 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x39a>
 802439a:	7b00      	ldrb	r0, [r0, #12]
 802439c:	2801      	cmp	r0, #1
 802439e:	f000 80ba 	beq.w	8024516 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x38e>
 80243a2:	f0c0 80b2 	bcc.w	802450a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x382>
 80243a6:	2802      	cmp	r0, #2
 80243a8:	f040 80da 	bne.w	8024560 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3d8>
 80243ac:	2310      	movs	r3, #16
 80243ae:	2604      	movs	r6, #4
 80243b0:	9305      	str	r3, [sp, #20]
 80243b2:	9b04      	ldr	r3, [sp, #16]
 80243b4:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	@ 0x34
 80243b8:	681b      	ldr	r3, [r3, #0]
 80243ba:	fb06 f101 	mul.w	r1, r6, r1
 80243be:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80243c0:	4a6f      	ldr	r2, [pc, #444]	@ (8024580 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f8>)
 80243c2:	9103      	str	r1, [sp, #12]
 80243c4:	4293      	cmp	r3, r2
 80243c6:	f040 80ae 	bne.w	8024526 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x39e>
 80243ca:	4b6e      	ldr	r3, [pc, #440]	@ (8024584 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3fc>)
 80243cc:	881f      	ldrh	r7, [r3, #0]
 80243ce:	2f00      	cmp	r7, #0
 80243d0:	f000 80bf 	beq.w	8024552 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3ca>
 80243d4:	9b04      	ldr	r3, [sp, #16]
 80243d6:	7b1b      	ldrb	r3, [r3, #12]
 80243d8:	2b02      	cmp	r3, #2
 80243da:	f000 80a0 	beq.w	802451e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x396>
 80243de:	2b01      	cmp	r3, #1
 80243e0:	bf14      	ite	ne
 80243e2:	2302      	movne	r3, #2
 80243e4:	2303      	moveq	r3, #3
 80243e6:	fb17 f703 	smulbb	r7, r7, r3
 80243ea:	b2bf      	uxth	r7, r7
 80243ec:	4a62      	ldr	r2, [pc, #392]	@ (8024578 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3f0>)
 80243ee:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80243f2:	6810      	ldr	r0, [r2, #0]
 80243f4:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 80243f8:	9a03      	ldr	r2, [sp, #12]
 80243fa:	fb02 3808 	mla	r8, r2, r8, r3
 80243fe:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8024400:	6803      	ldr	r3, [r0, #0]
 8024402:	4442      	add	r2, r8
 8024404:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024406:	9204      	str	r2, [sp, #16]
 8024408:	4798      	blx	r3
 802440a:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 802440e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8024412:	fb07 f202 	mul.w	r2, r7, r2
 8024416:	fb06 2303 	mla	r3, r6, r3, r2
 802441a:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 80245b4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x42c>
 802441e:	18c3      	adds	r3, r0, r3
 8024420:	f8d8 2000 	ldr.w	r2, [r8]
 8024424:	9306      	str	r3, [sp, #24]
 8024426:	2a00      	cmp	r2, #0
 8024428:	f000 8081 	beq.w	802452e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 802442c:	2600      	movs	r6, #0
 802442e:	4610      	mov	r0, r2
 8024430:	f7fc fbd2 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8024434:	9b03      	ldr	r3, [sp, #12]
 8024436:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 802443a:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 802443e:	9300      	str	r3, [sp, #0]
 8024440:	e9dd 0304 	ldrd	r0, r3, [sp, #16]
 8024444:	f7ec fdba 	bl	8010fbc <nema_bind_dst_tex>
 8024448:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 802444c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8024450:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8024454:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8024458:	f7ec fc46 	bl	8010ce8 <nema_set_clip>
 802445c:	f04f 33ff 	mov.w	r3, #4294967295
 8024460:	2201      	movs	r2, #1
 8024462:	4631      	mov	r1, r6
 8024464:	f240 5004 	movw	r0, #1284	@ 0x504
 8024468:	f7f9 fdda 	bl	801e020 <nema_set_blend>
 802446c:	e9dd 3005 	ldrd	r3, r0, [sp, #20]
 8024470:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	@ 0x26
 8024474:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	@ 0x24
 8024478:	9700      	str	r7, [sp, #0]
 802447a:	9601      	str	r6, [sp, #4]
 802447c:	f7ec fd1a 	bl	8010eb4 <nema_bind_src_tex>
 8024480:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8024484:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8024488:	f7ec ff6e 	bl	8011368 <nema_blit>
 802448c:	f8d8 0000 	ldr.w	r0, [r8]
 8024490:	2800      	cmp	r0, #0
 8024492:	d04c      	beq.n	802452e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 8024494:	f7fc fbc0 	bl	8020c18 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8024498:	f8d8 0000 	ldr.w	r0, [r8]
 802449c:	2800      	cmp	r0, #0
 802449e:	d046      	beq.n	802452e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 80244a0:	6803      	ldr	r3, [r0, #0]
 80244a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80244a4:	4798      	blx	r3
 80244a6:	f8d8 0000 	ldr.w	r0, [r8]
 80244aa:	2800      	cmp	r0, #0
 80244ac:	d03f      	beq.n	802452e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3a6>
 80244ae:	6803      	ldr	r3, [r0, #0]
 80244b0:	4637      	mov	r7, r6
 80244b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80244b4:	4798      	blx	r3
 80244b6:	4650      	mov	r0, sl
 80244b8:	f365 060f 	bfi	r6, r5, #0, #16
 80244bc:	f369 070f 	bfi	r7, r9, #0, #16
 80244c0:	f364 461f 	bfi	r6, r4, #16, #16
 80244c4:	f36b 471f 	bfi	r7, fp, #16, #16
 80244c8:	f8ca 6000 	str.w	r6, [sl]
 80244cc:	f8ca 7004 	str.w	r7, [sl, #4]
 80244d0:	b00f      	add	sp, #60	@ 0x3c
 80244d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80244d6:	2300      	movs	r3, #0
 80244d8:	4650      	mov	r0, sl
 80244da:	f8ca 3000 	str.w	r3, [sl]
 80244de:	f8ca 3004 	str.w	r3, [sl, #4]
 80244e2:	b00f      	add	sp, #60	@ 0x3c
 80244e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80244e8:	2000      	movs	r0, #0
 80244ea:	eb0b 0604 	add.w	r6, fp, r4
 80244ee:	fa0f fb86 	sxth.w	fp, r6
 80244f2:	4604      	mov	r4, r0
 80244f4:	4602      	mov	r2, r0
 80244f6:	f8ad b026 	strh.w	fp, [sp, #38]	@ 0x26
 80244fa:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 80244fe:	e70c      	b.n	802431a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x192>
 8024500:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8024502:	2800      	cmp	r0, #0
 8024504:	f47f af43 	bne.w	802438e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x206>
 8024508:	e740      	b.n	802438c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x204>
 802450a:	2304      	movs	r3, #4
 802450c:	2602      	movs	r6, #2
 802450e:	9305      	str	r3, [sp, #20]
 8024510:	e74f      	b.n	80243b2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22a>
 8024512:	4648      	mov	r0, r9
 8024514:	e6f4      	b.n	8024300 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x178>
 8024516:	2339      	movs	r3, #57	@ 0x39
 8024518:	2603      	movs	r6, #3
 802451a:	9305      	str	r3, [sp, #20]
 802451c:	e749      	b.n	80243b2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x22a>
 802451e:	2304      	movs	r3, #4
 8024520:	e761      	b.n	80243e6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25e>
 8024522:	4798      	blx	r3
 8024524:	e73a      	b.n	802439c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>
 8024526:	9804      	ldr	r0, [sp, #16]
 8024528:	4798      	blx	r3
 802452a:	4607      	mov	r7, r0
 802452c:	e75e      	b.n	80243ec <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x264>
 802452e:	4b16      	ldr	r3, [pc, #88]	@ (8024588 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x400>)
 8024530:	4a16      	ldr	r2, [pc, #88]	@ (802458c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x404>)
 8024532:	217c      	movs	r1, #124	@ 0x7c
 8024534:	4816      	ldr	r0, [pc, #88]	@ (8024590 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x408>)
 8024536:	f00d ffdf 	bl	80324f8 <__assert_func>
 802453a:	4b16      	ldr	r3, [pc, #88]	@ (8024594 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x40c>)
 802453c:	4a16      	ldr	r2, [pc, #88]	@ (8024598 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 802453e:	21f9      	movs	r1, #249	@ 0xf9
 8024540:	4816      	ldr	r0, [pc, #88]	@ (802459c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 8024542:	f00d ffd9 	bl	80324f8 <__assert_func>
 8024546:	4b16      	ldr	r3, [pc, #88]	@ (80245a0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x418>)
 8024548:	4a13      	ldr	r2, [pc, #76]	@ (8024598 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 802454a:	21f8      	movs	r1, #248	@ 0xf8
 802454c:	4813      	ldr	r0, [pc, #76]	@ (802459c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 802454e:	f00d ffd3 	bl	80324f8 <__assert_func>
 8024552:	4b14      	ldr	r3, [pc, #80]	@ (80245a4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x41c>)
 8024554:	4a14      	ldr	r2, [pc, #80]	@ (80245a8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x420>)
 8024556:	f240 110f 	movw	r1, #271	@ 0x10f
 802455a:	4814      	ldr	r0, [pc, #80]	@ (80245ac <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x424>)
 802455c:	f00d ffcc 	bl	80324f8 <__assert_func>
 8024560:	4b13      	ldr	r3, [pc, #76]	@ (80245b0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x428>)
 8024562:	4a0d      	ldr	r2, [pc, #52]	@ (8024598 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x410>)
 8024564:	f44f 7191 	mov.w	r1, #290	@ 0x122
 8024568:	480c      	ldr	r0, [pc, #48]	@ (802459c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x414>)
 802456a:	f00d ffc5 	bl	80324f8 <__assert_func>
 802456e:	bf00      	nop
 8024570:	20082efc 	.word	0x20082efc
 8024574:	20082efe 	.word	0x20082efe
 8024578:	20082f08 	.word	0x20082f08
 802457c:	08020cbd 	.word	0x08020cbd
 8024580:	0802289d 	.word	0x0802289d
 8024584:	20082f02 	.word	0x20082f02
 8024588:	0803623c 	.word	0x0803623c
 802458c:	08036aa8 	.word	0x08036aa8
 8024590:	08036264 	.word	0x08036264
 8024594:	08036598 	.word	0x08036598
 8024598:	08037b80 	.word	0x08037b80
 802459c:	080362e0 	.word	0x080362e0
 80245a0:	080364e4 	.word	0x080364e4
 80245a4:	08036818 	.word	0x08036818
 80245a8:	08037fdc 	.word	0x08037fdc
 80245ac:	0803685c 	.word	0x0803685c
 80245b0:	080365e8 	.word	0x080365e8
 80245b4:	200833a8 	.word	0x200833a8

080245b8 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80245b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80245bc:	b085      	sub	sp, #20
 80245be:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80245c2:	e9dd 950e 	ldrd	r9, r5, [sp, #56]	@ 0x38
 80245c6:	f8bd 8040 	ldrh.w	r8, [sp, #64]	@ 0x40
 80245ca:	f8bd a048 	ldrh.w	sl, [sp, #72]	@ 0x48
 80245ce:	2e00      	cmp	r6, #0
 80245d0:	d05b      	beq.n	802468a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 80245d2:	f9b5 e004 	ldrsh.w	lr, [r5, #4]
 80245d6:	f1be 0f00 	cmp.w	lr, #0
 80245da:	dd56      	ble.n	802468a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 80245dc:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80245e0:	f1be 0f00 	cmp.w	lr, #0
 80245e4:	dd51      	ble.n	802468a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 80245e6:	f3c8 0b87 	ubfx	fp, r8, #2, #8
 80245ea:	f1bb 0f0b 	cmp.w	fp, #11
 80245ee:	f000 815f 	beq.w	80248b0 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2f8>
 80245f2:	f1bb 0f0d 	cmp.w	fp, #13
 80245f6:	4684      	mov	ip, r0
 80245f8:	4614      	mov	r4, r2
 80245fa:	461f      	mov	r7, r3
 80245fc:	d03c      	beq.n	8024678 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xc0>
 80245fe:	f8df a35c 	ldr.w	sl, [pc, #860]	@ 802495c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a4>
 8024602:	f8da 0000 	ldr.w	r0, [sl]
 8024606:	2800      	cmp	r0, #0
 8024608:	f000 8187 	beq.w	802491a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x362>
 802460c:	f8cd c00c 	str.w	ip, [sp, #12]
 8024610:	f7fc fae2 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8024614:	9b03      	ldr	r3, [sp, #12]
 8024616:	681a      	ldr	r2, [r3, #0]
 8024618:	4618      	mov	r0, r3
 802461a:	6d53      	ldr	r3, [r2, #84]	@ 0x54
 802461c:	4798      	blx	r3
 802461e:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8024622:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8024626:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 802462a:	f9b5 0000 	ldrsh.w	r0, [r5]
 802462e:	f7ec fb5b 	bl	8010ce8 <nema_set_clip>
 8024632:	2200      	movs	r2, #0
 8024634:	4633      	mov	r3, r6
 8024636:	4611      	mov	r1, r2
 8024638:	4610      	mov	r0, r2
 802463a:	f7ec fc33 	bl	8010ea4 <nema_rgba>
 802463e:	f7fa f8b5 	bl	801e7ac <nema_set_const_color>
 8024642:	f04f 33ff 	mov.w	r3, #4294967295
 8024646:	2201      	movs	r2, #1
 8024648:	2100      	movs	r1, #0
 802464a:	48ba      	ldr	r0, [pc, #744]	@ (8024934 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x37c>)
 802464c:	f7f9 fce8 	bl	801e020 <nema_set_blend>
 8024650:	f1bb 0f0d 	cmp.w	fp, #13
 8024654:	f200 8167 	bhi.w	8024926 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8024658:	e8df f01b 	tbh	[pc, fp, lsl #1]
 802465c:	00c100cd 	.word	0x00c100cd
 8024660:	016500d6 	.word	0x016500d6
 8024664:	01650165 	.word	0x01650165
 8024668:	01650165 	.word	0x01650165
 802466c:	01650165 	.word	0x01650165
 8024670:	01650165 	.word	0x01650165
 8024674:	001a00ac 	.word	0x001a00ac
 8024678:	685b      	ldr	r3, [r3, #4]
 802467a:	b133      	cbz	r3, 802468a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xd2>
 802467c:	781b      	ldrb	r3, [r3, #0]
 802467e:	f1a3 0216 	sub.w	r2, r3, #22
 8024682:	2a01      	cmp	r2, #1
 8024684:	d9bb      	bls.n	80245fe <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46>
 8024686:	2b12      	cmp	r3, #18
 8024688:	d0b9      	beq.n	80245fe <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x46>
 802468a:	b005      	add	sp, #20
 802468c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024690:	f04f 36ff 	mov.w	r6, #4294967295
 8024694:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024698:	687b      	ldr	r3, [r7, #4]
 802469a:	6838      	ldr	r0, [r7, #0]
 802469c:	781b      	ldrb	r3, [r3, #0]
 802469e:	f008 0501 	and.w	r5, r8, #1
 80246a2:	e9cd 6500 	strd	r6, r5, [sp]
 80246a6:	f7ec fc05 	bl	8010eb4 <nema_bind_src_tex>
 80246aa:	2001      	movs	r0, #1
 80246ac:	f7ed fc9e 	bl	8011fec <nema_enable_tiling>
 80246b0:	f9b9 3000 	ldrsh.w	r3, [r9]
 80246b4:	edd4 7a00 	vldr	s15, [r4]
 80246b8:	ee02 3a10 	vmov	s4, r3
 80246bc:	f9b9 3002 	ldrsh.w	r3, [r9, #2]
 80246c0:	eeb8 2ac2 	vcvt.f32.s32	s4, s4
 80246c4:	ee02 3a90 	vmov	s5, r3
 80246c8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80246cc:	eddf 6a9a 	vldr	s13, [pc, #616]	@ 8024938 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 80246d0:	eef8 2ae2 	vcvt.f32.s32	s5, s5
 80246d4:	edd4 7a01 	vldr	s15, [r4, #4]
 80246d8:	eeb0 0a42 	vmov.f32	s0, s4
 80246dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80246e0:	eea7 0a26 	vfma.f32	s0, s14, s13
 80246e4:	eef0 0a62 	vmov.f32	s1, s5
 80246e8:	ed94 7a03 	vldr	s14, [r4, #12]
 80246ec:	4b93      	ldr	r3, [pc, #588]	@ (802493c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x384>)
 80246ee:	eee7 0aa6 	vfma.f32	s1, s15, s13
 80246f2:	781b      	ldrb	r3, [r3, #0]
 80246f4:	edd4 7a04 	vldr	s15, [r4, #16]
 80246f8:	2b01      	cmp	r3, #1
 80246fa:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80246fe:	f000 808c 	beq.w	802481a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x262>
 8024702:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024706:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802470a:	f240 80ea 	bls.w	80248e2 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32a>
 802470e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024712:	bf94      	ite	ls
 8024714:	2001      	movls	r0, #1
 8024716:	2002      	movhi	r0, #2
 8024718:	edd4 7a05 	vldr	s15, [r4, #20]
 802471c:	ed94 6a08 	vldr	s12, [r4, #32]
 8024720:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8024724:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8024728:	edd4 7a06 	vldr	s15, [r4, #24]
 802472c:	eddf 6a82 	vldr	s13, [pc, #520]	@ 8024938 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024730:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024734:	eeb0 1a42 	vmov.f32	s2, s4
 8024738:	eef0 1a62 	vmov.f32	s3, s5
 802473c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024740:	eee7 1aa6 	vfma.f32	s3, s15, s13
 8024744:	eea7 1a26 	vfma.f32	s2, s14, s13
 8024748:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 802474c:	f240 80c1 	bls.w	80248d2 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x31a>
 8024750:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024754:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024758:	bf94      	ite	ls
 802475a:	2101      	movls	r1, #1
 802475c:	2102      	movhi	r1, #2
 802475e:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 8024762:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 8024766:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802476a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 802476e:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8024772:	eddf 6a71 	vldr	s13, [pc, #452]	@ 8024938 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024776:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802477a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802477e:	eee7 2aa6 	vfma.f32	s5, s15, s13
 8024782:	eea7 2a26 	vfma.f32	s4, s14, s13
 8024786:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 802478a:	f240 809a 	bls.w	80248c2 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30a>
 802478e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024792:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024796:	bf94      	ite	ls
 8024798:	2201      	movls	r2, #1
 802479a:	2202      	movhi	r2, #2
 802479c:	f7ec feda 	bl	8011554 <nema_blit_tri_fit>
 80247a0:	f8da 0000 	ldr.w	r0, [sl]
 80247a4:	2800      	cmp	r0, #0
 80247a6:	f000 80b8 	beq.w	802491a <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x362>
 80247aa:	b005      	add	sp, #20
 80247ac:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80247b0:	f7fc ba32 	b.w	8020c18 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 80247b4:	4a62      	ldr	r2, [pc, #392]	@ (8024940 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x388>)
 80247b6:	23ff      	movs	r3, #255	@ 0xff
 80247b8:	6810      	ldr	r0, [r2, #0]
 80247ba:	f008 0501 	and.w	r5, r8, #1
 80247be:	b2c2      	uxtb	r2, r0
 80247c0:	f3c0 2107 	ubfx	r1, r0, #8, #8
 80247c4:	f3c0 4007 	ubfx	r0, r0, #16, #8
 80247c8:	f7ec fb6c 	bl	8010ea4 <nema_rgba>
 80247cc:	f7ec fa80 	bl	8010cd0 <nema_set_tex_color>
 80247d0:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80247d4:	6838      	ldr	r0, [r7, #0]
 80247d6:	2329      	movs	r3, #41	@ 0x29
 80247d8:	f04f 36ff 	mov.w	r6, #4294967295
 80247dc:	e761      	b.n	80246a2 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 80247de:	2339      	movs	r3, #57	@ 0x39
 80247e0:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80247e4:	f04f 0c03 	mov.w	ip, #3
 80247e8:	6838      	ldr	r0, [r7, #0]
 80247ea:	f008 0501 	and.w	r5, r8, #1
 80247ee:	693e      	ldr	r6, [r7, #16]
 80247f0:	fb06 f60c 	mul.w	r6, r6, ip
 80247f4:	e755      	b.n	80246a2 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 80247f6:	f008 0501 	and.w	r5, r8, #1
 80247fa:	6838      	ldr	r0, [r7, #0]
 80247fc:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8024800:	2304      	movs	r3, #4
 8024802:	f04f 0c02 	mov.w	ip, #2
 8024806:	e7f2      	b.n	80247ee <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x236>
 8024808:	2310      	movs	r3, #16
 802480a:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 802480e:	f04f 0c04 	mov.w	ip, #4
 8024812:	6838      	ldr	r0, [r7, #0]
 8024814:	f008 0501 	and.w	r5, r8, #1
 8024818:	e7e9      	b.n	80247ee <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x236>
 802481a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802481e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024822:	d974      	bls.n	802490e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x356>
 8024824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024828:	bf94      	ite	ls
 802482a:	2002      	movls	r0, #2
 802482c:	2003      	movhi	r0, #3
 802482e:	edd4 7a05 	vldr	s15, [r4, #20]
 8024832:	ed94 6a08 	vldr	s12, [r4, #32]
 8024836:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802483a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 802483e:	edd4 7a06 	vldr	s15, [r4, #24]
 8024842:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8024938 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 8024846:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802484a:	eeb0 1a42 	vmov.f32	s2, s4
 802484e:	eef0 1a62 	vmov.f32	s3, s5
 8024852:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024856:	eee7 1aa6 	vfma.f32	s3, s15, s13
 802485a:	eea7 1a26 	vfma.f32	s2, s14, s13
 802485e:	edd4 7a09 	vldr	s15, [r4, #36]	@ 0x24
 8024862:	d94c      	bls.n	80248fe <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x346>
 8024864:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024868:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802486c:	bf94      	ite	ls
 802486e:	2102      	movls	r1, #2
 8024870:	2103      	movhi	r1, #3
 8024872:	edd4 7a0a 	vldr	s15, [r4, #40]	@ 0x28
 8024876:	ed94 6a0d 	vldr	s12, [r4, #52]	@ 0x34
 802487a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802487e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8024882:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8024886:	eddf 6a2c 	vldr	s13, [pc, #176]	@ 8024938 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x380>
 802488a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802488e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024892:	eee7 2aa6 	vfma.f32	s5, s15, s13
 8024896:	eea7 2a26 	vfma.f32	s4, s14, s13
 802489a:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 802489e:	d926      	bls.n	80248ee <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80248a0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80248a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248a8:	bf94      	ite	ls
 80248aa:	2202      	movls	r2, #2
 80248ac:	2203      	movhi	r2, #3
 80248ae:	e775      	b.n	802479c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 80248b0:	e9cd 6a11 	strd	r6, sl, [sp, #68]	@ 0x44
 80248b4:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 80248b8:	b005      	add	sp, #20
 80248ba:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80248be:	f7e7 bcef 	b.w	800c2a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 80248c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80248c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248ca:	bf94      	ite	ls
 80248cc:	2200      	movls	r2, #0
 80248ce:	2203      	movhi	r2, #3
 80248d0:	e764      	b.n	802479c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 80248d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80248d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248da:	bf94      	ite	ls
 80248dc:	2100      	movls	r1, #0
 80248de:	2103      	movhi	r1, #3
 80248e0:	e73d      	b.n	802475e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a6>
 80248e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248e6:	bf94      	ite	ls
 80248e8:	2000      	movls	r0, #0
 80248ea:	2003      	movhi	r0, #3
 80248ec:	e714      	b.n	8024718 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x160>
 80248ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80248f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80248f6:	bf94      	ite	ls
 80248f8:	2201      	movls	r2, #1
 80248fa:	2200      	movhi	r2, #0
 80248fc:	e74e      	b.n	802479c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 80248fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8024902:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024906:	bf94      	ite	ls
 8024908:	2101      	movls	r1, #1
 802490a:	2100      	movhi	r1, #0
 802490c:	e7b1      	b.n	8024872 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2ba>
 802490e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024912:	bf94      	ite	ls
 8024914:	2001      	movls	r0, #1
 8024916:	2000      	movhi	r0, #0
 8024918:	e789      	b.n	802482e <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x276>
 802491a:	4b0a      	ldr	r3, [pc, #40]	@ (8024944 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x38c>)
 802491c:	4a0a      	ldr	r2, [pc, #40]	@ (8024948 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x390>)
 802491e:	217c      	movs	r1, #124	@ 0x7c
 8024920:	480a      	ldr	r0, [pc, #40]	@ (802494c <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x394>)
 8024922:	f00d fde9 	bl	80324f8 <__assert_func>
 8024926:	4b0a      	ldr	r3, [pc, #40]	@ (8024950 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x398>)
 8024928:	4a0a      	ldr	r2, [pc, #40]	@ (8024954 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x39c>)
 802492a:	f240 21e2 	movw	r1, #738	@ 0x2e2
 802492e:	480a      	ldr	r0, [pc, #40]	@ (8024958 <_ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a0>)
 8024930:	f00d fde2 	bl	80324f8 <__assert_func>
 8024934:	08000504 	.word	0x08000504
 8024938:	3d800000 	.word	0x3d800000
 802493c:	20082f00 	.word	0x20082f00
 8024940:	20082f10 	.word	0x20082f10
 8024944:	0803623c 	.word	0x0803623c
 8024948:	08036aa8 	.word	0x08036aa8
 802494c:	08036264 	.word	0x08036264
 8024950:	08036134 	.word	0x08036134
 8024954:	08036e4c 	.word	0x08036e4c
 8024958:	080362e0 	.word	0x080362e0
 802495c:	200833a8 	.word	0x200833a8

08024960 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8024960:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 8024964:	2700      	movs	r7, #0
 8024966:	4a2b      	ldr	r2, [pc, #172]	@ (8024a14 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb4>)
 8024968:	4b2b      	ldr	r3, [pc, #172]	@ (8024a18 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xb8>)
 802496a:	4d2c      	ldr	r5, [pc, #176]	@ (8024a1c <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xbc>)
 802496c:	8812      	ldrh	r2, [r2, #0]
 802496e:	881b      	ldrh	r3, [r3, #0]
 8024970:	b088      	sub	sp, #32
 8024972:	4604      	mov	r4, r0
 8024974:	6828      	ldr	r0, [r5, #0]
 8024976:	f8ad 201c 	strh.w	r2, [sp, #28]
 802497a:	f8ad 301e 	strh.w	r3, [sp, #30]
 802497e:	9706      	str	r7, [sp, #24]
 8024980:	6803      	ldr	r3, [r0, #0]
 8024982:	4689      	mov	r9, r1
 8024984:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024986:	4798      	blx	r3
 8024988:	6823      	ldr	r3, [r4, #0]
 802498a:	4a25      	ldr	r2, [pc, #148]	@ (8024a20 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc0>)
 802498c:	68de      	ldr	r6, [r3, #12]
 802498e:	4601      	mov	r1, r0
 8024990:	4296      	cmp	r6, r2
 8024992:	d134      	bne.n	80249fe <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x9e>
 8024994:	682a      	ldr	r2, [r5, #0]
 8024996:	691d      	ldr	r5, [r3, #16]
 8024998:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 802499c:	b9a3      	cbnz	r3, 80249c8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x68>
 802499e:	6890      	ldr	r0, [r2, #8]
 80249a0:	4a20      	ldr	r2, [pc, #128]	@ (8024a24 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 80249a2:	6803      	ldr	r3, [r0, #0]
 80249a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80249a6:	4293      	cmp	r3, r2
 80249a8:	d116      	bne.n	80249d8 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x78>
 80249aa:	4b1f      	ldr	r3, [pc, #124]	@ (8024a28 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 80249ac:	7b02      	ldrb	r2, [r0, #12]
 80249ae:	429d      	cmp	r5, r3
 80249b0:	d119      	bne.n	80249e6 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x86>
 80249b2:	23ff      	movs	r3, #255	@ 0xff
 80249b4:	f8cd 9000 	str.w	r9, [sp]
 80249b8:	9301      	str	r3, [sp, #4]
 80249ba:	4620      	mov	r0, r4
 80249bc:	ab06      	add	r3, sp, #24
 80249be:	f7ff fa29 	bl	8023e14 <_ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb.part.6>
 80249c2:	b008      	add	sp, #32
 80249c4:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 80249c8:	6cd0      	ldr	r0, [r2, #76]	@ 0x4c
 80249ca:	2800      	cmp	r0, #0
 80249cc:	d0e7      	beq.n	802499e <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x3e>
 80249ce:	6803      	ldr	r3, [r0, #0]
 80249d0:	4a14      	ldr	r2, [pc, #80]	@ (8024a24 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc4>)
 80249d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80249d4:	4293      	cmp	r3, r2
 80249d6:	d0e8      	beq.n	80249aa <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x4a>
 80249d8:	9105      	str	r1, [sp, #20]
 80249da:	4798      	blx	r3
 80249dc:	4b12      	ldr	r3, [pc, #72]	@ (8024a28 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0xc8>)
 80249de:	4602      	mov	r2, r0
 80249e0:	429d      	cmp	r5, r3
 80249e2:	9905      	ldr	r1, [sp, #20]
 80249e4:	d0e5      	beq.n	80249b2 <_ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE+0x52>
 80249e6:	2600      	movs	r6, #0
 80249e8:	23ff      	movs	r3, #255	@ 0xff
 80249ea:	f8cd 9000 	str.w	r9, [sp]
 80249ee:	e9cd 3601 	strd	r3, r6, [sp, #4]
 80249f2:	4620      	mov	r0, r4
 80249f4:	ab06      	add	r3, sp, #24
 80249f6:	47a8      	blx	r5
 80249f8:	b008      	add	sp, #32
 80249fa:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 80249fe:	22ff      	movs	r2, #255	@ 0xff
 8024a00:	9701      	str	r7, [sp, #4]
 8024a02:	9200      	str	r2, [sp, #0]
 8024a04:	464b      	mov	r3, r9
 8024a06:	4620      	mov	r0, r4
 8024a08:	aa06      	add	r2, sp, #24
 8024a0a:	47b0      	blx	r6
 8024a0c:	b008      	add	sp, #32
 8024a0e:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 8024a12:	bf00      	nop
 8024a14:	20082f02 	.word	0x20082f02
 8024a18:	20082f04 	.word	0x20082f04
 8024a1c:	20082f08 	.word	0x20082f08
 8024a20:	08023fc5 	.word	0x08023fc5
 8024a24:	08020cbd 	.word	0x08020cbd
 8024a28:	08024051 	.word	0x08024051

08024a2c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8024a2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024a30:	4604      	mov	r4, r0
 8024a32:	4865      	ldr	r0, [pc, #404]	@ (8024bc8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x19c>)
 8024a34:	460f      	mov	r7, r1
 8024a36:	6800      	ldr	r0, [r0, #0]
 8024a38:	b093      	sub	sp, #76	@ 0x4c
 8024a3a:	f890 1048 	ldrb.w	r1, [r0, #72]	@ 0x48
 8024a3e:	2902      	cmp	r1, #2
 8024a40:	f000 81f2 	beq.w	8024e28 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3fc>
 8024a44:	f10d 0948 	add.w	r9, sp, #72	@ 0x48
 8024a48:	f829 3d1c 	strh.w	r3, [r9, #-28]!
 8024a4c:	4648      	mov	r0, r9
 8024a4e:	4615      	mov	r5, r2
 8024a50:	f7eb fbee 	bl	8010230 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8024a54:	6823      	ldr	r3, [r4, #0]
 8024a56:	4a5d      	ldr	r2, [pc, #372]	@ (8024bcc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a0>)
 8024a58:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024a5a:	4680      	mov	r8, r0
 8024a5c:	4293      	cmp	r3, r2
 8024a5e:	f040 81b5 	bne.w	8024dcc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3a0>
 8024a62:	7b20      	ldrb	r0, [r4, #12]
 8024a64:	4580      	cmp	r8, r0
 8024a66:	f040 81d9 	bne.w	8024e1c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3f0>
 8024a6a:	4648      	mov	r0, r9
 8024a6c:	f7eb fb5c 	bl	8010128 <_ZNK8touchgfx6Bitmap7getDataEv>
 8024a70:	4683      	mov	fp, r0
 8024a72:	2800      	cmp	r0, #0
 8024a74:	f000 81cc 	beq.w	8024e10 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3e4>
 8024a78:	6823      	ldr	r3, [r4, #0]
 8024a7a:	4648      	mov	r0, r9
 8024a7c:	f8d3 8018 	ldr.w	r8, [r3, #24]
 8024a80:	f7eb fa98 	bl	800ffb4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8024a84:	9005      	str	r0, [sp, #20]
 8024a86:	4648      	mov	r0, r9
 8024a88:	f7eb fac8 	bl	801001c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8024a8c:	4b50      	ldr	r3, [pc, #320]	@ (8024bd0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a4>)
 8024a8e:	9006      	str	r0, [sp, #24]
 8024a90:	4598      	cmp	r8, r3
 8024a92:	f040 818e 	bne.w	8024db2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x386>
 8024a96:	4b4c      	ldr	r3, [pc, #304]	@ (8024bc8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x19c>)
 8024a98:	681b      	ldr	r3, [r3, #0]
 8024a9a:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8024a9e:	2b02      	cmp	r3, #2
 8024aa0:	f000 81c8 	beq.w	8024e34 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x408>
 8024aa4:	f9b5 8000 	ldrsh.w	r8, [r5]
 8024aa8:	88ab      	ldrh	r3, [r5, #4]
 8024aaa:	fa1f fe88 	uxth.w	lr, r8
 8024aae:	4473      	add	r3, lr
 8024ab0:	b29b      	uxth	r3, r3
 8024ab2:	b218      	sxth	r0, r3
 8024ab4:	4580      	cmp	r8, r0
 8024ab6:	f9b5 a002 	ldrsh.w	sl, [r5, #2]
 8024aba:	da2a      	bge.n	8024b12 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024abc:	9a05      	ldr	r2, [sp, #20]
 8024abe:	eb0e 0102 	add.w	r1, lr, r2
 8024ac2:	b28a      	uxth	r2, r1
 8024ac4:	9207      	str	r2, [sp, #28]
 8024ac6:	f9bd c01c 	ldrsh.w	ip, [sp, #28]
 8024aca:	45e0      	cmp	r8, ip
 8024acc:	da21      	bge.n	8024b12 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024ace:	88ea      	ldrh	r2, [r5, #6]
 8024ad0:	fa1f f68a 	uxth.w	r6, sl
 8024ad4:	4432      	add	r2, r6
 8024ad6:	b292      	uxth	r2, r2
 8024ad8:	b211      	sxth	r1, r2
 8024ada:	458a      	cmp	sl, r1
 8024adc:	9108      	str	r1, [sp, #32]
 8024ade:	da18      	bge.n	8024b12 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024ae0:	9906      	ldr	r1, [sp, #24]
 8024ae2:	eb06 0901 	add.w	r9, r6, r1
 8024ae6:	fa1f f989 	uxth.w	r9, r9
 8024aea:	fa0f f189 	sxth.w	r1, r9
 8024aee:	458a      	cmp	sl, r1
 8024af0:	9109      	str	r1, [sp, #36]	@ 0x24
 8024af2:	da0e      	bge.n	8024b12 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xe6>
 8024af4:	9907      	ldr	r1, [sp, #28]
 8024af6:	4560      	cmp	r0, ip
 8024af8:	bfc8      	it	gt
 8024afa:	460b      	movgt	r3, r1
 8024afc:	e9dd 1008 	ldrd	r1, r0, [sp, #32]
 8024b00:	4281      	cmp	r1, r0
 8024b02:	bfc8      	it	gt
 8024b04:	464a      	movgt	r2, r9
 8024b06:	eba3 030e 	sub.w	r3, r3, lr
 8024b0a:	1b92      	subs	r2, r2, r6
 8024b0c:	b21b      	sxth	r3, r3
 8024b0e:	b212      	sxth	r2, r2
 8024b10:	e005      	b.n	8024b1e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xf2>
 8024b12:	2200      	movs	r2, #0
 8024b14:	4616      	mov	r6, r2
 8024b16:	4692      	mov	sl, r2
 8024b18:	4613      	mov	r3, r2
 8024b1a:	4696      	mov	lr, r2
 8024b1c:	4690      	mov	r8, r2
 8024b1e:	f9b7 0000 	ldrsh.w	r0, [r7]
 8024b22:	88b9      	ldrh	r1, [r7, #4]
 8024b24:	4401      	add	r1, r0
 8024b26:	b289      	uxth	r1, r1
 8024b28:	fa0f f981 	sxth.w	r9, r1
 8024b2c:	45c8      	cmp	r8, r9
 8024b2e:	da55      	bge.n	8024bdc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024b30:	449e      	add	lr, r3
 8024b32:	fa1f fe8e 	uxth.w	lr, lr
 8024b36:	fa0f f38e 	sxth.w	r3, lr
 8024b3a:	4298      	cmp	r0, r3
 8024b3c:	9307      	str	r3, [sp, #28]
 8024b3e:	da4d      	bge.n	8024bdc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024b40:	f9b7 c002 	ldrsh.w	ip, [r7, #2]
 8024b44:	88fb      	ldrh	r3, [r7, #6]
 8024b46:	4463      	add	r3, ip
 8024b48:	b29b      	uxth	r3, r3
 8024b4a:	b21f      	sxth	r7, r3
 8024b4c:	45ba      	cmp	sl, r7
 8024b4e:	da45      	bge.n	8024bdc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024b50:	4416      	add	r6, r2
 8024b52:	b2b2      	uxth	r2, r6
 8024b54:	b216      	sxth	r6, r2
 8024b56:	45b4      	cmp	ip, r6
 8024b58:	9608      	str	r6, [sp, #32]
 8024b5a:	da3f      	bge.n	8024bdc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1b0>
 8024b5c:	4540      	cmp	r0, r8
 8024b5e:	9e07      	ldr	r6, [sp, #28]
 8024b60:	bfb8      	it	lt
 8024b62:	4640      	movlt	r0, r8
 8024b64:	45d4      	cmp	ip, sl
 8024b66:	bfb8      	it	lt
 8024b68:	46d4      	movlt	ip, sl
 8024b6a:	45b1      	cmp	r9, r6
 8024b6c:	bfc8      	it	gt
 8024b6e:	4671      	movgt	r1, lr
 8024b70:	9e08      	ldr	r6, [sp, #32]
 8024b72:	f8df 8060 	ldr.w	r8, [pc, #96]	@ 8024bd4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1a8>
 8024b76:	42b7      	cmp	r7, r6
 8024b78:	bfc8      	it	gt
 8024b7a:	4613      	movgt	r3, r2
 8024b7c:	f8df e058 	ldr.w	lr, [pc, #88]	@ 8024bd8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ac>
 8024b80:	b282      	uxth	r2, r0
 8024b82:	eba3 030c 	sub.w	r3, r3, ip
 8024b86:	1a8f      	subs	r7, r1, r2
 8024b88:	f8b8 a000 	ldrh.w	sl, [r8]
 8024b8c:	f8be 9000 	ldrh.w	r9, [lr]
 8024b90:	b21b      	sxth	r3, r3
 8024b92:	b23f      	sxth	r7, r7
 8024b94:	2800      	cmp	r0, #0
 8024b96:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024b9a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8024b9e:	f8ad c032 	strh.w	ip, [sp, #50]	@ 0x32
 8024ba2:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024ba6:	fa0f f88a 	sxth.w	r8, sl
 8024baa:	fa0f fe89 	sxth.w	lr, r9
 8024bae:	f280 8115 	bge.w	8024ddc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3b0>
 8024bb2:	2200      	movs	r2, #0
 8024bb4:	f04f 0600 	mov.w	r6, #0
 8024bb8:	b20f      	sxth	r7, r1
 8024bba:	4610      	mov	r0, r2
 8024bbc:	4639      	mov	r1, r7
 8024bbe:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024bc2:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 8024bc6:	e01b      	b.n	8024c00 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1d4>
 8024bc8:	20082f08 	.word	0x20082f08
 8024bcc:	08020cbd 	.word	0x08020cbd
 8024bd0:	08024189 	.word	0x08024189
 8024bd4:	20082efc 	.word	0x20082efc
 8024bd8:	20082efe 	.word	0x20082efe
 8024bdc:	2300      	movs	r3, #0
 8024bde:	489f      	ldr	r0, [pc, #636]	@ (8024e5c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x430>)
 8024be0:	499f      	ldr	r1, [pc, #636]	@ (8024e60 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x434>)
 8024be2:	f8b0 a000 	ldrh.w	sl, [r0]
 8024be6:	f8b1 9000 	ldrh.w	r9, [r1]
 8024bea:	461a      	mov	r2, r3
 8024bec:	469c      	mov	ip, r3
 8024bee:	4618      	mov	r0, r3
 8024bf0:	4619      	mov	r1, r3
 8024bf2:	461f      	mov	r7, r3
 8024bf4:	e9cd 330c 	strd	r3, r3, [sp, #48]	@ 0x30
 8024bf8:	fa0f f88a 	sxth.w	r8, sl
 8024bfc:	fa0f fe89 	sxth.w	lr, r9
 8024c00:	eba8 0000 	sub.w	r0, r8, r0
 8024c04:	4288      	cmp	r0, r1
 8024c06:	da04      	bge.n	8024c12 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1e6>
 8024c08:	ebaa 0702 	sub.w	r7, sl, r2
 8024c0c:	b23f      	sxth	r7, r7
 8024c0e:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8024c12:	f1bc 0f00 	cmp.w	ip, #0
 8024c16:	f2c0 80c2 	blt.w	8024d9e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x372>
 8024c1a:	4661      	mov	r1, ip
 8024c1c:	ebae 0e01 	sub.w	lr, lr, r1
 8024c20:	4573      	cmp	r3, lr
 8024c22:	dd04      	ble.n	8024c2e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x202>
 8024c24:	eba9 030c 	sub.w	r3, r9, ip
 8024c28:	b21b      	sxth	r3, r3
 8024c2a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024c2e:	2f00      	cmp	r7, #0
 8024c30:	f340 80b1 	ble.w	8024d96 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x36a>
 8024c34:	2b00      	cmp	r3, #0
 8024c36:	f340 80ae 	ble.w	8024d96 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x36a>
 8024c3a:	f04f 0e00 	mov.w	lr, #0
 8024c3e:	f8ad 303e 	strh.w	r3, [sp, #62]	@ 0x3e
 8024c42:	9b05      	ldr	r3, [sp, #20]
 8024c44:	8868      	ldrh	r0, [r5, #2]
 8024c46:	8829      	ldrh	r1, [r5, #0]
 8024c48:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8024c4c:	9b06      	ldr	r3, [sp, #24]
 8024c4e:	1a52      	subs	r2, r2, r1
 8024c50:	ebac 0c00 	sub.w	ip, ip, r0
 8024c54:	a910      	add	r1, sp, #64	@ 0x40
 8024c56:	a80e      	add	r0, sp, #56	@ 0x38
 8024c58:	f8ad 3046 	strh.w	r3, [sp, #70]	@ 0x46
 8024c5c:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8024c60:	f8ad c03a 	strh.w	ip, [sp, #58]	@ 0x3a
 8024c64:	f8cd e040 	str.w	lr, [sp, #64]	@ 0x40
 8024c68:	f8ad 703c 	strh.w	r7, [sp, #60]	@ 0x3c
 8024c6c:	f7e8 f890 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024c70:	a80c      	add	r0, sp, #48	@ 0x30
 8024c72:	f7e8 f865 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024c76:	a810      	add	r0, sp, #64	@ 0x40
 8024c78:	f7e8 f862 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024c7c:	4b79      	ldr	r3, [pc, #484]	@ (8024e64 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x438>)
 8024c7e:	681b      	ldr	r3, [r3, #0]
 8024c80:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8024c84:	2a00      	cmp	r2, #0
 8024c86:	f040 80a4 	bne.w	8024dd2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3a6>
 8024c8a:	6898      	ldr	r0, [r3, #8]
 8024c8c:	6803      	ldr	r3, [r0, #0]
 8024c8e:	4a76      	ldr	r2, [pc, #472]	@ (8024e68 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x43c>)
 8024c90:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024c92:	4293      	cmp	r3, r2
 8024c94:	f040 80b0 	bne.w	8024df8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3cc>
 8024c98:	7b00      	ldrb	r0, [r0, #12]
 8024c9a:	2801      	cmp	r0, #1
 8024c9c:	f000 80a5 	beq.w	8024dea <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3be>
 8024ca0:	f0c0 809e 	bcc.w	8024de0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3b4>
 8024ca4:	2802      	cmp	r0, #2
 8024ca6:	f040 80d2 	bne.w	8024e4e <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x422>
 8024caa:	f04f 0810 	mov.w	r8, #16
 8024cae:	f04f 0a04 	mov.w	sl, #4
 8024cb2:	6823      	ldr	r3, [r4, #0]
 8024cb4:	4a6d      	ldr	r2, [pc, #436]	@ (8024e6c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x440>)
 8024cb6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024cb8:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	@ 0x44
 8024cbc:	4293      	cmp	r3, r2
 8024cbe:	fb0a f707 	mul.w	r7, sl, r7
 8024cc2:	f040 809b 	bne.w	8024dfc <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d0>
 8024cc6:	4b6a      	ldr	r3, [pc, #424]	@ (8024e70 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x444>)
 8024cc8:	881b      	ldrh	r3, [r3, #0]
 8024cca:	2b00      	cmp	r3, #0
 8024ccc:	f000 80b8 	beq.w	8024e40 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x414>
 8024cd0:	7b22      	ldrb	r2, [r4, #12]
 8024cd2:	2a02      	cmp	r2, #2
 8024cd4:	f000 808e 	beq.w	8024df4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3c8>
 8024cd8:	2a01      	cmp	r2, #1
 8024cda:	bf14      	ite	ne
 8024cdc:	2402      	movne	r4, #2
 8024cde:	2403      	moveq	r4, #3
 8024ce0:	fb13 f404 	smulbb	r4, r3, r4
 8024ce4:	b2a4      	uxth	r4, r4
 8024ce6:	4a5f      	ldr	r2, [pc, #380]	@ (8024e64 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x438>)
 8024ce8:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8024cec:	f9bd 903a 	ldrsh.w	r9, [sp, #58]	@ 0x3a
 8024cf0:	6810      	ldr	r0, [r2, #0]
 8024cf2:	fb07 3909 	mla	r9, r7, r9, r3
 8024cf6:	6803      	ldr	r3, [r0, #0]
 8024cf8:	4e5e      	ldr	r6, [pc, #376]	@ (8024e74 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x448>)
 8024cfa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024cfc:	4798      	blx	r3
 8024cfe:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8024d02:	f9bd 5030 	ldrsh.w	r5, [sp, #48]	@ 0x30
 8024d06:	fb04 f303 	mul.w	r3, r4, r3
 8024d0a:	fb0a 3505 	mla	r5, sl, r5, r3
 8024d0e:	4405      	add	r5, r0
 8024d10:	6830      	ldr	r0, [r6, #0]
 8024d12:	44d9      	add	r9, fp
 8024d14:	2800      	cmp	r0, #0
 8024d16:	d075      	beq.n	8024e04 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024d18:	f7fb ff5e 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8024d1c:	9700      	str	r7, [sp, #0]
 8024d1e:	2700      	movs	r7, #0
 8024d20:	f9bd 203e 	ldrsh.w	r2, [sp, #62]	@ 0x3e
 8024d24:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8024d28:	4648      	mov	r0, r9
 8024d2a:	4643      	mov	r3, r8
 8024d2c:	f7ec f946 	bl	8010fbc <nema_bind_dst_tex>
 8024d30:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8024d34:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8024d38:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8024d3c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8024d40:	f7eb ffd2 	bl	8010ce8 <nema_set_clip>
 8024d44:	f04f 33ff 	mov.w	r3, #4294967295
 8024d48:	2201      	movs	r2, #1
 8024d4a:	2100      	movs	r1, #0
 8024d4c:	f240 5004 	movw	r0, #1284	@ 0x504
 8024d50:	f7f9 f966 	bl	801e020 <nema_set_blend>
 8024d54:	f9bd 2036 	ldrsh.w	r2, [sp, #54]	@ 0x36
 8024d58:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	@ 0x34
 8024d5c:	4643      	mov	r3, r8
 8024d5e:	4628      	mov	r0, r5
 8024d60:	9400      	str	r4, [sp, #0]
 8024d62:	9701      	str	r7, [sp, #4]
 8024d64:	f7ec f8a6 	bl	8010eb4 <nema_bind_src_tex>
 8024d68:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8024d6c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8024d70:	f7ec fafa 	bl	8011368 <nema_blit>
 8024d74:	6830      	ldr	r0, [r6, #0]
 8024d76:	2800      	cmp	r0, #0
 8024d78:	d044      	beq.n	8024e04 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024d7a:	f7fb ff4d 	bl	8020c18 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 8024d7e:	6830      	ldr	r0, [r6, #0]
 8024d80:	2800      	cmp	r0, #0
 8024d82:	d03f      	beq.n	8024e04 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024d84:	6803      	ldr	r3, [r0, #0]
 8024d86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8024d88:	4798      	blx	r3
 8024d8a:	6830      	ldr	r0, [r6, #0]
 8024d8c:	2800      	cmp	r0, #0
 8024d8e:	d039      	beq.n	8024e04 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x3d8>
 8024d90:	6803      	ldr	r3, [r0, #0]
 8024d92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024d94:	4798      	blx	r3
 8024d96:	4658      	mov	r0, fp
 8024d98:	b013      	add	sp, #76	@ 0x4c
 8024d9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024d9e:	2000      	movs	r0, #0
 8024da0:	4463      	add	r3, ip
 8024da2:	b21b      	sxth	r3, r3
 8024da4:	4684      	mov	ip, r0
 8024da6:	4601      	mov	r1, r0
 8024da8:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8024dac:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8024db0:	e734      	b.n	8024c1c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f0>
 8024db2:	9b05      	ldr	r3, [sp, #20]
 8024db4:	9002      	str	r0, [sp, #8]
 8024db6:	e9cd b300 	strd	fp, r3, [sp]
 8024dba:	a810      	add	r0, sp, #64	@ 0x40
 8024dbc:	462b      	mov	r3, r5
 8024dbe:	463a      	mov	r2, r7
 8024dc0:	4621      	mov	r1, r4
 8024dc2:	47c0      	blx	r8
 8024dc4:	4658      	mov	r0, fp
 8024dc6:	b013      	add	sp, #76	@ 0x4c
 8024dc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024dcc:	4620      	mov	r0, r4
 8024dce:	4798      	blx	r3
 8024dd0:	e648      	b.n	8024a64 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x38>
 8024dd2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8024dd4:	2800      	cmp	r0, #0
 8024dd6:	f47f af59 	bne.w	8024c8c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8024dda:	e756      	b.n	8024c8a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x25e>
 8024ddc:	4639      	mov	r1, r7
 8024dde:	e70f      	b.n	8024c00 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1d4>
 8024de0:	f04f 0804 	mov.w	r8, #4
 8024de4:	f04f 0a02 	mov.w	sl, #2
 8024de8:	e763      	b.n	8024cb2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x286>
 8024dea:	f04f 0839 	mov.w	r8, #57	@ 0x39
 8024dee:	f04f 0a03 	mov.w	sl, #3
 8024df2:	e75e      	b.n	8024cb2 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x286>
 8024df4:	2404      	movs	r4, #4
 8024df6:	e773      	b.n	8024ce0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x2b4>
 8024df8:	4798      	blx	r3
 8024dfa:	e74e      	b.n	8024c9a <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26e>
 8024dfc:	4620      	mov	r0, r4
 8024dfe:	4798      	blx	r3
 8024e00:	4604      	mov	r4, r0
 8024e02:	e770      	b.n	8024ce6 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x2ba>
 8024e04:	4b1c      	ldr	r3, [pc, #112]	@ (8024e78 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x44c>)
 8024e06:	4a1d      	ldr	r2, [pc, #116]	@ (8024e7c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x450>)
 8024e08:	217c      	movs	r1, #124	@ 0x7c
 8024e0a:	481d      	ldr	r0, [pc, #116]	@ (8024e80 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x454>)
 8024e0c:	f00d fb74 	bl	80324f8 <__assert_func>
 8024e10:	4b1c      	ldr	r3, [pc, #112]	@ (8024e84 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x458>)
 8024e12:	4a1d      	ldr	r2, [pc, #116]	@ (8024e88 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8024e14:	21f1      	movs	r1, #241	@ 0xf1
 8024e16:	481d      	ldr	r0, [pc, #116]	@ (8024e8c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024e18:	f00d fb6e 	bl	80324f8 <__assert_func>
 8024e1c:	4b1c      	ldr	r3, [pc, #112]	@ (8024e90 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x464>)
 8024e1e:	4a1a      	ldr	r2, [pc, #104]	@ (8024e88 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8024e20:	21ef      	movs	r1, #239	@ 0xef
 8024e22:	481a      	ldr	r0, [pc, #104]	@ (8024e8c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024e24:	f00d fb68 	bl	80324f8 <__assert_func>
 8024e28:	4b1a      	ldr	r3, [pc, #104]	@ (8024e94 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x468>)
 8024e2a:	4a17      	ldr	r2, [pc, #92]	@ (8024e88 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x45c>)
 8024e2c:	21ed      	movs	r1, #237	@ 0xed
 8024e2e:	4817      	ldr	r0, [pc, #92]	@ (8024e8c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024e30:	f00d fb62 	bl	80324f8 <__assert_func>
 8024e34:	4b17      	ldr	r3, [pc, #92]	@ (8024e94 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x468>)
 8024e36:	4a18      	ldr	r2, [pc, #96]	@ (8024e98 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x46c>)
 8024e38:	21f8      	movs	r1, #248	@ 0xf8
 8024e3a:	4814      	ldr	r0, [pc, #80]	@ (8024e8c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024e3c:	f00d fb5c 	bl	80324f8 <__assert_func>
 8024e40:	4b16      	ldr	r3, [pc, #88]	@ (8024e9c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x470>)
 8024e42:	4a17      	ldr	r2, [pc, #92]	@ (8024ea0 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x474>)
 8024e44:	f240 110f 	movw	r1, #271	@ 0x10f
 8024e48:	4816      	ldr	r0, [pc, #88]	@ (8024ea4 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x478>)
 8024e4a:	f00d fb55 	bl	80324f8 <__assert_func>
 8024e4e:	4b16      	ldr	r3, [pc, #88]	@ (8024ea8 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x47c>)
 8024e50:	4a11      	ldr	r2, [pc, #68]	@ (8024e98 <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x46c>)
 8024e52:	f44f 7191 	mov.w	r1, #290	@ 0x122
 8024e56:	480d      	ldr	r0, [pc, #52]	@ (8024e8c <_ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x460>)
 8024e58:	f00d fb4e 	bl	80324f8 <__assert_func>
 8024e5c:	20082efc 	.word	0x20082efc
 8024e60:	20082efe 	.word	0x20082efe
 8024e64:	20082f08 	.word	0x20082f08
 8024e68:	08020cbd 	.word	0x08020cbd
 8024e6c:	0802289d 	.word	0x0802289d
 8024e70:	20082f02 	.word	0x20082f02
 8024e74:	200833a8 	.word	0x200833a8
 8024e78:	0803623c 	.word	0x0803623c
 8024e7c:	08036aa8 	.word	0x08036aa8
 8024e80:	08036264 	.word	0x08036264
 8024e84:	08036694 	.word	0x08036694
 8024e88:	08037c14 	.word	0x08037c14
 8024e8c:	080362e0 	.word	0x080362e0
 8024e90:	0803663c 	.word	0x0803663c
 8024e94:	080364e4 	.word	0x080364e4
 8024e98:	08037b80 	.word	0x08037b80
 8024e9c:	08036818 	.word	0x08036818
 8024ea0:	08037fdc 	.word	0x08037fdc
 8024ea4:	0803685c 	.word	0x0803685c
 8024ea8:	080365e8 	.word	0x080365e8

08024eac <_ZN8touchgfx8LCDGPU2DC1Ev>:
 8024eac:	b410      	push	{r4}
 8024eae:	240d      	movs	r4, #13
 8024eb0:	2200      	movs	r2, #0
 8024eb2:	4904      	ldr	r1, [pc, #16]	@ (8024ec4 <_ZN8touchgfx8LCDGPU2DC1Ev+0x18>)
 8024eb4:	7304      	strb	r4, [r0, #12]
 8024eb6:	e9c0 1200 	strd	r1, r2, [r0]
 8024eba:	6082      	str	r2, [r0, #8]
 8024ebc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024ec0:	4770      	bx	lr
 8024ec2:	bf00      	nop
 8024ec4:	08036a50 	.word	0x08036a50

08024ec8 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE>:
 8024ec8:	2902      	cmp	r1, #2
 8024eca:	d906      	bls.n	8024eda <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x12>
 8024ecc:	b508      	push	{r3, lr}
 8024ece:	4a04      	ldr	r2, [pc, #16]	@ (8024ee0 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x18>)
 8024ed0:	4b04      	ldr	r3, [pc, #16]	@ (8024ee4 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x1c>)
 8024ed2:	212b      	movs	r1, #43	@ 0x2b
 8024ed4:	4804      	ldr	r0, [pc, #16]	@ (8024ee8 <_ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE+0x20>)
 8024ed6:	f00d fb0f 	bl	80324f8 <__assert_func>
 8024eda:	7301      	strb	r1, [r0, #12]
 8024edc:	4770      	bx	lr
 8024ede:	bf00      	nop
 8024ee0:	08036dc0 	.word	0x08036dc0
 8024ee4:	08036174 	.word	0x08036174
 8024ee8:	080362e0 	.word	0x080362e0

08024eec <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8024eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024ef0:	b093      	sub	sp, #76	@ 0x4c
 8024ef2:	4691      	mov	r9, r2
 8024ef4:	468a      	mov	sl, r1
 8024ef6:	8812      	ldrh	r2, [r2, #0]
 8024ef8:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 8024efc:	461c      	mov	r4, r3
 8024efe:	910a      	str	r1, [sp, #40]	@ 0x28
 8024f00:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024f02:	2a00      	cmp	r2, #0
 8024f04:	f040 8109 	bne.w	802511a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x22e>
 8024f08:	6820      	ldr	r0, [r4, #0]
 8024f0a:	6861      	ldr	r1, [r4, #4]
 8024f0c:	aa0e      	add	r2, sp, #56	@ 0x38
 8024f0e:	c203      	stmia	r2!, {r0, r1}
 8024f10:	6818      	ldr	r0, [r3, #0]
 8024f12:	6859      	ldr	r1, [r3, #4]
 8024f14:	aa10      	add	r2, sp, #64	@ 0x40
 8024f16:	c203      	stmia	r2!, {r0, r1}
 8024f18:	a80e      	add	r0, sp, #56	@ 0x38
 8024f1a:	f7e7 ff11 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024f1e:	4621      	mov	r1, r4
 8024f20:	a810      	add	r0, sp, #64	@ 0x40
 8024f22:	f7e7 ff35 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024f26:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 8024f2a:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 8024f2e:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8024f32:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8024f36:	487c      	ldr	r0, [pc, #496]	@ (8025128 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8024f38:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8024f3c:	4422      	add	r2, r4
 8024f3e:	442b      	add	r3, r5
 8024f40:	6800      	ldr	r0, [r0, #0]
 8024f42:	fb11 4105 	smlabb	r1, r1, r5, r4
 8024f46:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8024f4a:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8024f4e:	6802      	ldr	r2, [r0, #0]
 8024f50:	4d76      	ldr	r5, [pc, #472]	@ (802512c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8024f52:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8024f56:	448a      	add	sl, r1
 8024f58:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8024f5c:	42ab      	cmp	r3, r5
 8024f5e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8024f60:	f9bd 4046 	ldrsh.w	r4, [sp, #70]	@ 0x46
 8024f64:	f040 80a6 	bne.w	80250b4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c8>
 8024f68:	6841      	ldr	r1, [r0, #4]
 8024f6a:	4d71      	ldr	r5, [pc, #452]	@ (8025130 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8024f6c:	680b      	ldr	r3, [r1, #0]
 8024f6e:	699b      	ldr	r3, [r3, #24]
 8024f70:	42ab      	cmp	r3, r5
 8024f72:	f040 80c4 	bne.w	80250fe <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8024f76:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8024f78:	4798      	blx	r3
 8024f7a:	4b6e      	ldr	r3, [pc, #440]	@ (8025134 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8024f7c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8024f80:	881b      	ldrh	r3, [r3, #0]
 8024f82:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8024f86:	fb03 f404 	mul.w	r4, r3, r4
 8024f8a:	fb03 1202 	mla	r2, r3, r2, r1
 8024f8e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8024f92:	eb00 0244 	add.w	r2, r0, r4, lsl #1
 8024f96:	4290      	cmp	r0, r2
 8024f98:	920c      	str	r2, [sp, #48]	@ 0x30
 8024f9a:	f080 8083 	bcs.w	80250a4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 8024f9e:	f04f 0b04 	mov.w	fp, #4
 8024fa2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024fa4:	0052      	lsls	r2, r2, #1
 8024fa6:	920d      	str	r2, [sp, #52]	@ 0x34
 8024fa8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8024faa:	eb00 0802 	add.w	r8, r0, r2
 8024fae:	4580      	cmp	r8, r0
 8024fb0:	d96d      	bls.n	802508e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 8024fb2:	4684      	mov	ip, r0
 8024fb4:	f10a 3eff 	add.w	lr, sl, #4294967295
 8024fb8:	e03e      	b.n	8025038 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x14c>
 8024fba:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024fbc:	f3c5 4707 	ubfx	r7, r5, #16, #8
 8024fc0:	fb02 f303 	mul.w	r3, r2, r3
 8024fc4:	1c59      	adds	r1, r3, #1
 8024fc6:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8024fca:	121b      	asrs	r3, r3, #8
 8024fcc:	43da      	mvns	r2, r3
 8024fce:	b299      	uxth	r1, r3
 8024fd0:	b2f6      	uxtb	r6, r6
 8024fd2:	b2eb      	uxtb	r3, r5
 8024fd4:	fb17 f701 	smulbb	r7, r7, r1
 8024fd8:	f8bc 5000 	ldrh.w	r5, [ip]
 8024fdc:	fb13 f301 	smulbb	r3, r3, r1
 8024fe0:	fb16 f601 	smulbb	r6, r6, r1
 8024fe4:	122c      	asrs	r4, r5, #8
 8024fe6:	10e9      	asrs	r1, r5, #3
 8024fe8:	00ed      	lsls	r5, r5, #3
 8024fea:	b2d2      	uxtb	r2, r2
 8024fec:	b2ed      	uxtb	r5, r5
 8024fee:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8024ff2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8024ff6:	fb04 7402 	mla	r4, r4, r2, r7
 8024ffa:	fb01 6102 	mla	r1, r1, r2, r6
 8024ffe:	fb05 3202 	mla	r2, r5, r2, r3
 8025002:	b2a4      	uxth	r4, r4
 8025004:	b292      	uxth	r2, r2
 8025006:	b289      	uxth	r1, r1
 8025008:	1c55      	adds	r5, r2, #1
 802500a:	1c67      	adds	r7, r4, #1
 802500c:	1c4b      	adds	r3, r1, #1
 802500e:	eb05 2512 	add.w	r5, r5, r2, lsr #8
 8025012:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8025016:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802501a:	f404 4278 	and.w	r2, r4, #63488	@ 0xf800
 802501e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8025022:	095b      	lsrs	r3, r3, #5
 8025024:	432a      	orrs	r2, r5
 8025026:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802502a:	431a      	orrs	r2, r3
 802502c:	f8ac 2000 	strh.w	r2, [ip]
 8025030:	f10c 0c02 	add.w	ip, ip, #2
 8025034:	45e0      	cmp	r8, ip
 8025036:	d91f      	bls.n	8025078 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8025038:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 802503c:	fb1b b303 	smlabb	r3, fp, r3, fp
 8025040:	f859 5003 	ldr.w	r5, [r9, r3]
 8025044:	0e2b      	lsrs	r3, r5, #24
 8025046:	d0f3      	beq.n	8025030 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x144>
 8025048:	2bff      	cmp	r3, #255	@ 0xff
 802504a:	ea4f 2615 	mov.w	r6, r5, lsr #8
 802504e:	d1b4      	bne.n	8024fba <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8025050:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8025052:	2aff      	cmp	r2, #255	@ 0xff
 8025054:	d1b1      	bne.n	8024fba <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8025056:	096b      	lsrs	r3, r5, #5
 8025058:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 802505c:	f026 0607 	bic.w	r6, r6, #7
 8025060:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025064:	431e      	orrs	r6, r3
 8025066:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 802506a:	4335      	orrs	r5, r6
 802506c:	f8ac 5000 	strh.w	r5, [ip]
 8025070:	f10c 0c02 	add.w	ip, ip, #2
 8025074:	45e0      	cmp	r8, ip
 8025076:	d8df      	bhi.n	8025038 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x14c>
 8025078:	43c3      	mvns	r3, r0
 802507a:	4498      	add	r8, r3
 802507c:	4b2d      	ldr	r3, [pc, #180]	@ (8025134 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 802507e:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8025082:	f108 0801 	add.w	r8, r8, #1
 8025086:	881b      	ldrh	r3, [r3, #0]
 8025088:	eb00 0048 	add.w	r0, r0, r8, lsl #1
 802508c:	44c2      	add	sl, r8
 802508e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8025090:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8025094:	1b19      	subs	r1, r3, r4
 8025096:	1b12      	subs	r2, r2, r4
 8025098:	4492      	add	sl, r2
 802509a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802509c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80250a0:	4282      	cmp	r2, r0
 80250a2:	d881      	bhi.n	8024fa8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 80250a4:	4b20      	ldr	r3, [pc, #128]	@ (8025128 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 80250a6:	6818      	ldr	r0, [r3, #0]
 80250a8:	6803      	ldr	r3, [r0, #0]
 80250aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80250ac:	4798      	blx	r3
 80250ae:	b013      	add	sp, #76	@ 0x4c
 80250b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80250b4:	4798      	blx	r3
 80250b6:	4603      	mov	r3, r0
 80250b8:	2b01      	cmp	r3, #1
 80250ba:	d124      	bne.n	8025106 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 80250bc:	4a1e      	ldr	r2, [pc, #120]	@ (8025138 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 80250be:	6810      	ldr	r0, [r2, #0]
 80250c0:	b328      	cbz	r0, 802510e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x222>
 80250c2:	2700      	movs	r7, #0
 80250c4:	260b      	movs	r6, #11
 80250c6:	4a1b      	ldr	r2, [pc, #108]	@ (8025134 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 80250c8:	b2a1      	uxth	r1, r4
 80250ca:	8814      	ldrh	r4, [r2, #0]
 80250cc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80250d0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 80250d4:	e9cd 2101 	strd	r2, r1, [sp, #4]
 80250d8:	9406      	str	r4, [sp, #24]
 80250da:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80250dc:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 80250e0:	9305      	str	r3, [sp, #20]
 80250e2:	9204      	str	r2, [sp, #16]
 80250e4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80250e8:	464a      	mov	r2, r9
 80250ea:	4651      	mov	r1, sl
 80250ec:	e9cd 6707 	strd	r6, r7, [sp, #28]
 80250f0:	9503      	str	r5, [sp, #12]
 80250f2:	9400      	str	r4, [sp, #0]
 80250f4:	f7fb fd98 	bl	8020c28 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80250f8:	b013      	add	sp, #76	@ 0x4c
 80250fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80250fe:	4608      	mov	r0, r1
 8025100:	4798      	blx	r3
 8025102:	4603      	mov	r3, r0
 8025104:	e7d8      	b.n	80250b8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1cc>
 8025106:	4b08      	ldr	r3, [pc, #32]	@ (8025128 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8025108:	6818      	ldr	r0, [r3, #0]
 802510a:	6802      	ldr	r2, [r0, #0]
 802510c:	e733      	b.n	8024f76 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 802510e:	4b0b      	ldr	r3, [pc, #44]	@ (802513c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8025110:	4a0b      	ldr	r2, [pc, #44]	@ (8025140 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 8025112:	217c      	movs	r1, #124	@ 0x7c
 8025114:	480b      	ldr	r0, [pc, #44]	@ (8025144 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8025116:	f00d f9ef 	bl	80324f8 <__assert_func>
 802511a:	4b0b      	ldr	r3, [pc, #44]	@ (8025148 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 802511c:	4a0b      	ldr	r2, [pc, #44]	@ (802514c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x260>)
 802511e:	f240 4182 	movw	r1, #1154	@ 0x482
 8025122:	480b      	ldr	r0, [pc, #44]	@ (8025150 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 8025124:	f00d f9e8 	bl	80324f8 <__assert_func>
 8025128:	20082f08 	.word	0x20082f08
 802512c:	0800121d 	.word	0x0800121d
 8025130:	0800bae5 	.word	0x0800bae5
 8025134:	20082f02 	.word	0x20082f02
 8025138:	200833a8 	.word	0x200833a8
 802513c:	0803623c 	.word	0x0803623c
 8025140:	08036aa8 	.word	0x08036aa8
 8025144:	08036264 	.word	0x08036264
 8025148:	08036354 	.word	0x08036354
 802514c:	080370d8 	.word	0x080370d8
 8025150:	080362e0 	.word	0x080362e0

08025154 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>:
 8025154:	b4f0      	push	{r4, r5, r6, r7}
 8025156:	7b05      	ldrb	r5, [r0, #12]
 8025158:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802515c:	3d01      	subs	r5, #1
 802515e:	2eff      	cmp	r6, #255	@ 0xff
 8025160:	fa5f fc81 	uxtb.w	ip, r1
 8025164:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025168:	b2ed      	uxtb	r5, r5
 802516a:	ea4f 4111 	mov.w	r1, r1, lsr #16
 802516e:	d041      	beq.n	80251f4 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xa0>
 8025170:	fb16 f603 	smulbb	r6, r6, r3
 8025174:	b2b6      	uxth	r6, r6
 8025176:	1c74      	adds	r4, r6, #1
 8025178:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 802517c:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8025180:	43e6      	mvns	r6, r4
 8025182:	b2a4      	uxth	r4, r4
 8025184:	fb1c fc04 	smulbb	ip, ip, r4
 8025188:	b2ff      	uxtb	r7, r7
 802518a:	fb17 f704 	smulbb	r7, r7, r4
 802518e:	00d0      	lsls	r0, r2, #3
 8025190:	b2c0      	uxtb	r0, r0
 8025192:	10d3      	asrs	r3, r2, #3
 8025194:	b2f6      	uxtb	r6, r6
 8025196:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 802519a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802519e:	fb00 c006 	mla	r0, r0, r6, ip
 80251a2:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 80251a6:	fb03 7306 	mla	r3, r3, r6, r7
 80251aa:	b280      	uxth	r0, r0
 80251ac:	b29b      	uxth	r3, r3
 80251ae:	1c47      	adds	r7, r0, #1
 80251b0:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80251b4:	f103 0c01 	add.w	ip, r3, #1
 80251b8:	2d01      	cmp	r5, #1
 80251ba:	f3c0 2707 	ubfx	r7, r0, #8, #8
 80251be:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80251c2:	d926      	bls.n	8025212 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xbe>
 80251c4:	b2c9      	uxtb	r1, r1
 80251c6:	fb11 f404 	smulbb	r4, r1, r4
 80251ca:	1212      	asrs	r2, r2, #8
 80251cc:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80251d0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80251d4:	fb02 4206 	mla	r2, r2, r6, r4
 80251d8:	b292      	uxth	r2, r2
 80251da:	1c50      	adds	r0, r2, #1
 80251dc:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80251e0:	095b      	lsrs	r3, r3, #5
 80251e2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80251e6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80251ea:	ea40 00d7 	orr.w	r0, r0, r7, lsr #3
 80251ee:	4318      	orrs	r0, r3
 80251f0:	bcf0      	pop	{r4, r5, r6, r7}
 80251f2:	4770      	bx	lr
 80251f4:	2bff      	cmp	r3, #255	@ 0xff
 80251f6:	d1bb      	bne.n	8025170 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x1c>
 80251f8:	2d01      	cmp	r5, #1
 80251fa:	d910      	bls.n	802521e <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xca>
 80251fc:	4a0a      	ldr	r2, [pc, #40]	@ (8025228 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0xd4>)
 80251fe:	00f8      	lsls	r0, r7, #3
 8025200:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8025204:	f400 67fc 	and.w	r7, r0, #2016	@ 0x7e0
 8025208:	ea41 00dc 	orr.w	r0, r1, ip, lsr #3
 802520c:	4338      	orrs	r0, r7
 802520e:	b280      	uxth	r0, r0
 8025210:	e7ee      	b.n	80251f0 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 8025212:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8025216:	ea43 0007 	orr.w	r0, r3, r7
 802521a:	bcf0      	pop	{r4, r5, r6, r7}
 802521c:	4770      	bx	lr
 802521e:	ea4c 2007 	orr.w	r0, ip, r7, lsl #8
 8025222:	b280      	uxth	r0, r0
 8025224:	e7e4      	b.n	80251f0 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih+0x9c>
 8025226:	bf00      	nop
 8025228:	fffff800 	.word	0xfffff800

0802522c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 802522c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025230:	b093      	sub	sp, #76	@ 0x4c
 8025232:	4614      	mov	r4, r2
 8025234:	460d      	mov	r5, r1
 8025236:	7812      	ldrb	r2, [r2, #0]
 8025238:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 802523c:	461e      	mov	r6, r3
 802523e:	9002      	str	r0, [sp, #8]
 8025240:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025242:	9109      	str	r1, [sp, #36]	@ 0x24
 8025244:	2a00      	cmp	r2, #0
 8025246:	f040 81c9 	bne.w	80255dc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3b0>
 802524a:	6830      	ldr	r0, [r6, #0]
 802524c:	6871      	ldr	r1, [r6, #4]
 802524e:	aa0e      	add	r2, sp, #56	@ 0x38
 8025250:	c203      	stmia	r2!, {r0, r1}
 8025252:	6818      	ldr	r0, [r3, #0]
 8025254:	6859      	ldr	r1, [r3, #4]
 8025256:	aa10      	add	r2, sp, #64	@ 0x40
 8025258:	c203      	stmia	r2!, {r0, r1}
 802525a:	a80e      	add	r0, sp, #56	@ 0x38
 802525c:	f7e7 fd70 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025260:	4631      	mov	r1, r6
 8025262:	a810      	add	r0, sp, #64	@ 0x40
 8025264:	f7e7 fd94 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025268:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 802526c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8025270:	f003 0201 	and.w	r2, r3, #1
 8025274:	4617      	mov	r7, r2
 8025276:	920a      	str	r2, [sp, #40]	@ 0x28
 8025278:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 802527c:	f8bd 003a 	ldrh.w	r0, [sp, #58]	@ 0x3a
 8025280:	443b      	add	r3, r7
 8025282:	fb02 1303 	mla	r3, r2, r3, r1
 8025286:	f8bd 6038 	ldrh.w	r6, [sp, #56]	@ 0x38
 802528a:	4402      	add	r2, r0
 802528c:	48d0      	ldr	r0, [pc, #832]	@ (80255d0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a4>)
 802528e:	440e      	add	r6, r1
 8025290:	6800      	ldr	r0, [r0, #0]
 8025292:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 8025296:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 802529a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802529e:	eb05 0363 	add.w	r3, r5, r3, asr #1
 80252a2:	6802      	ldr	r2, [r0, #0]
 80252a4:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	@ 0x44
 80252a8:	9304      	str	r3, [sp, #16]
 80252aa:	f001 0301 	and.w	r3, r1, #1
 80252ae:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 80252b0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80252b2:	9608      	str	r6, [sp, #32]
 80252b4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 80252b8:	4790      	blx	r2
 80252ba:	4ac6      	ldr	r2, [pc, #792]	@ (80255d4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a8>)
 80252bc:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80252c0:	8812      	ldrh	r2, [r2, #0]
 80252c2:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 80252c6:	fb05 f502 	mul.w	r5, r5, r2
 80252ca:	fb02 1303 	mla	r3, r2, r3, r1
 80252ce:	eb00 0843 	add.w	r8, r0, r3, lsl #1
 80252d2:	eb08 0345 	add.w	r3, r8, r5, lsl #1
 80252d6:	4598      	cmp	r8, r3
 80252d8:	930c      	str	r3, [sp, #48]	@ 0x30
 80252da:	f104 0404 	add.w	r4, r4, #4
 80252de:	f080 8144 	bcs.w	802556a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x33e>
 80252e2:	1e73      	subs	r3, r6, #1
 80252e4:	930d      	str	r3, [sp, #52]	@ 0x34
 80252e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80252e8:	2b00      	cmp	r3, #0
 80252ea:	f000 8164 	beq.w	80255b6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x38a>
 80252ee:	9a04      	ldr	r2, [sp, #16]
 80252f0:	7813      	ldrb	r3, [r2, #0]
 80252f2:	3201      	adds	r2, #1
 80252f4:	f003 030f 	and.w	r3, r3, #15
 80252f8:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 80252fc:	9203      	str	r2, [sp, #12]
 80252fe:	0e0b      	lsrs	r3, r1, #24
 8025300:	d008      	beq.n	8025314 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xe8>
 8025302:	f8b8 2000 	ldrh.w	r2, [r8]
 8025306:	9802      	ldr	r0, [sp, #8]
 8025308:	9300      	str	r3, [sp, #0]
 802530a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802530c:	f7ff ff22 	bl	8025154 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 8025310:	f8a8 0000 	strh.w	r0, [r8]
 8025314:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025316:	f108 0802 	add.w	r8, r8, #2
 802531a:	2b01      	cmp	r3, #1
 802531c:	f340 80fd 	ble.w	802551a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ee>
 8025320:	3b02      	subs	r3, #2
 8025322:	9a03      	ldr	r2, [sp, #12]
 8025324:	9306      	str	r3, [sp, #24]
 8025326:	085b      	lsrs	r3, r3, #1
 8025328:	9305      	str	r3, [sp, #20]
 802532a:	eb02 0e03 	add.w	lr, r2, r3
 802532e:	f108 0704 	add.w	r7, r8, #4
 8025332:	f102 3cff 	add.w	ip, r2, #4294967295
 8025336:	f8cd 801c 	str.w	r8, [sp, #28]
 802533a:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802533e:	e0b2      	b.n	80254a6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x27a>
 8025340:	fb05 f50a 	mul.w	r5, r5, sl
 8025344:	1c6a      	adds	r2, r5, #1
 8025346:	eb02 2525 	add.w	r5, r2, r5, asr #8
 802534a:	122d      	asrs	r5, r5, #8
 802534c:	43ee      	mvns	r6, r5
 802534e:	b2ad      	uxth	r5, r5
 8025350:	fa5f fb8b 	uxtb.w	fp, fp
 8025354:	fb13 f305 	smulbb	r3, r3, r5
 8025358:	fb1b fb05 	smulbb	fp, fp, r5
 802535c:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 8025360:	b2c0      	uxtb	r0, r0
 8025362:	ea4f 02e8 	mov.w	r2, r8, asr #3
 8025366:	b2f6      	uxtb	r6, r6
 8025368:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 802536c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025370:	fb00 3306 	mla	r3, r0, r6, r3
 8025374:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8025378:	fb02 bb06 	mla	fp, r2, r6, fp
 802537c:	b29b      	uxth	r3, r3
 802537e:	fa1f fb8b 	uxth.w	fp, fp
 8025382:	1c58      	adds	r0, r3, #1
 8025384:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8025388:	f10b 0201 	add.w	r2, fp, #1
 802538c:	f1b9 0f01 	cmp.w	r9, #1
 8025390:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025394:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8025398:	f240 8108 	bls.w	80255ac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x380>
 802539c:	b2c9      	uxtb	r1, r1
 802539e:	fb11 f505 	smulbb	r5, r1, r5
 80253a2:	ea4f 2828 	mov.w	r8, r8, asr #8
 80253a6:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80253aa:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80253ae:	fb08 5806 	mla	r8, r8, r6, r5
 80253b2:	fa1f f888 	uxth.w	r8, r8
 80253b6:	f108 0101 	add.w	r1, r8, #1
 80253ba:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 80253be:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80253c2:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80253c6:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80253ca:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80253ce:	ea43 030b 	orr.w	r3, r3, fp
 80253d2:	f827 3c04 	strh.w	r3, [r7, #-4]
 80253d6:	f89c 2000 	ldrb.w	r2, [ip]
 80253da:	f002 020f 	and.w	r2, r2, #15
 80253de:	f854 3022 	ldr.w	r3, [r4, r2, lsl #2]
 80253e2:	0e1d      	lsrs	r5, r3, #24
 80253e4:	d05b      	beq.n	802549e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x272>
 80253e6:	9a02      	ldr	r2, [sp, #8]
 80253e8:	2dff      	cmp	r5, #255	@ 0xff
 80253ea:	f892 900c 	ldrb.w	r9, [r2, #12]
 80253ee:	ea4f 4113 	mov.w	r1, r3, lsr #16
 80253f2:	f109 39ff 	add.w	r9, r9, #4294967295
 80253f6:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 80253fa:	f837 8c02 	ldrh.w	r8, [r7, #-2]
 80253fe:	fa5f f989 	uxtb.w	r9, r9
 8025402:	b2db      	uxtb	r3, r3
 8025404:	f000 80b9 	beq.w	802557a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x34e>
 8025408:	fb05 f50a 	mul.w	r5, r5, sl
 802540c:	1c6a      	adds	r2, r5, #1
 802540e:	eb02 2525 	add.w	r5, r2, r5, asr #8
 8025412:	122d      	asrs	r5, r5, #8
 8025414:	43ee      	mvns	r6, r5
 8025416:	b2ad      	uxth	r5, r5
 8025418:	fa5f fb8b 	uxtb.w	fp, fp
 802541c:	fb13 f305 	smulbb	r3, r3, r5
 8025420:	fb1b fb05 	smulbb	fp, fp, r5
 8025424:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 8025428:	b2c0      	uxtb	r0, r0
 802542a:	ea4f 02e8 	mov.w	r2, r8, asr #3
 802542e:	b2f6      	uxtb	r6, r6
 8025430:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8025434:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025438:	fb00 3306 	mla	r3, r0, r6, r3
 802543c:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8025440:	fb02 bb06 	mla	fp, r2, r6, fp
 8025444:	b29b      	uxth	r3, r3
 8025446:	fa1f fb8b 	uxth.w	fp, fp
 802544a:	1c58      	adds	r0, r3, #1
 802544c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8025450:	f10b 0201 	add.w	r2, fp, #1
 8025454:	f1b9 0f01 	cmp.w	r9, #1
 8025458:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802545c:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8025460:	f240 809f 	bls.w	80255a2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x376>
 8025464:	b2c9      	uxtb	r1, r1
 8025466:	fb11 f505 	smulbb	r5, r1, r5
 802546a:	ea4f 2828 	mov.w	r8, r8, asr #8
 802546e:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8025472:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8025476:	fb08 5806 	mla	r8, r8, r6, r5
 802547a:	fa1f f888 	uxth.w	r8, r8
 802547e:	f108 0101 	add.w	r1, r8, #1
 8025482:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 8025486:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 802548a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802548e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8025492:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025496:	ea43 030b 	orr.w	r3, r3, fp
 802549a:	f827 3c02 	strh.w	r3, [r7, #-2]
 802549e:	45e6      	cmp	lr, ip
 80254a0:	f107 0704 	add.w	r7, r7, #4
 80254a4:	d02b      	beq.n	80254fe <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 80254a6:	f81c 2f01 	ldrb.w	r2, [ip, #1]!
 80254aa:	0913      	lsrs	r3, r2, #4
 80254ac:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 80254b0:	0e1d      	lsrs	r5, r3, #24
 80254b2:	d092      	beq.n	80253da <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ae>
 80254b4:	9a02      	ldr	r2, [sp, #8]
 80254b6:	2dff      	cmp	r5, #255	@ 0xff
 80254b8:	f892 900c 	ldrb.w	r9, [r2, #12]
 80254bc:	ea4f 4113 	mov.w	r1, r3, lsr #16
 80254c0:	f109 39ff 	add.w	r9, r9, #4294967295
 80254c4:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 80254c8:	f837 8c04 	ldrh.w	r8, [r7, #-4]
 80254cc:	fa5f f989 	uxtb.w	r9, r9
 80254d0:	b2db      	uxtb	r3, r3
 80254d2:	f47f af35 	bne.w	8025340 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80254d6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80254da:	f47f af31 	bne.w	8025340 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x114>
 80254de:	f1b9 0f01 	cmp.w	r9, #1
 80254e2:	d970      	bls.n	80255c6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x39a>
 80254e4:	4a3c      	ldr	r2, [pc, #240]	@ (80255d8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>)
 80254e6:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80254ea:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80254ee:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80254f2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80254f6:	ea43 030b 	orr.w	r3, r3, fp
 80254fa:	b29b      	uxth	r3, r3
 80254fc:	e769      	b.n	80253d2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 80254fe:	9b05      	ldr	r3, [sp, #20]
 8025500:	9903      	ldr	r1, [sp, #12]
 8025502:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8025506:	1c5a      	adds	r2, r3, #1
 8025508:	4411      	add	r1, r2
 802550a:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 802550e:	9a06      	ldr	r2, [sp, #24]
 8025510:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 8025514:	9103      	str	r1, [sp, #12]
 8025516:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802551a:	2b01      	cmp	r3, #1
 802551c:	d111      	bne.n	8025542 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x316>
 802551e:	9b03      	ldr	r3, [sp, #12]
 8025520:	781b      	ldrb	r3, [r3, #0]
 8025522:	091b      	lsrs	r3, r3, #4
 8025524:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 8025528:	0e0b      	lsrs	r3, r1, #24
 802552a:	d008      	beq.n	802553e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x312>
 802552c:	f8b8 2000 	ldrh.w	r2, [r8]
 8025530:	9802      	ldr	r0, [sp, #8]
 8025532:	9300      	str	r3, [sp, #0]
 8025534:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025536:	f7ff fe0d 	bl	8025154 <_ZN8touchgfx8LCDGPU2D24blendPixelARGB8888_16BPPEmtih>
 802553a:	f8a8 0000 	strh.w	r0, [r8]
 802553e:	f108 0802 	add.w	r8, r8, #2
 8025542:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8025544:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8025548:	4a22      	ldr	r2, [pc, #136]	@ (80255d4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a8>)
 802554a:	440b      	add	r3, r1
 802554c:	8812      	ldrh	r2, [r2, #0]
 802554e:	9908      	ldr	r1, [sp, #32]
 8025550:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8025554:	1a52      	subs	r2, r2, r1
 8025556:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 802555a:	9a04      	ldr	r2, [sp, #16]
 802555c:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8025560:	9304      	str	r3, [sp, #16]
 8025562:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025564:	4543      	cmp	r3, r8
 8025566:	f63f aebe 	bhi.w	80252e6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xba>
 802556a:	4b19      	ldr	r3, [pc, #100]	@ (80255d0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3a4>)
 802556c:	6818      	ldr	r0, [r3, #0]
 802556e:	6803      	ldr	r3, [r0, #0]
 8025570:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025572:	4798      	blx	r3
 8025574:	b013      	add	sp, #76	@ 0x4c
 8025576:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802557a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802557e:	f47f af43 	bne.w	8025408 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1dc>
 8025582:	f1b9 0f01 	cmp.w	r9, #1
 8025586:	d91a      	bls.n	80255be <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x392>
 8025588:	4a13      	ldr	r2, [pc, #76]	@ (80255d8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>)
 802558a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 802558e:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8025592:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025596:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 802559a:	ea43 030b 	orr.w	r3, r3, fp
 802559e:	b29b      	uxth	r3, r3
 80255a0:	e77b      	b.n	802549a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 80255a2:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 80255a6:	ea4b 0303 	orr.w	r3, fp, r3
 80255aa:	e776      	b.n	802549a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 80255ac:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 80255b0:	ea4b 0303 	orr.w	r3, fp, r3
 80255b4:	e70d      	b.n	80253d2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 80255b6:	9b04      	ldr	r3, [sp, #16]
 80255b8:	9303      	str	r3, [sp, #12]
 80255ba:	9b08      	ldr	r3, [sp, #32]
 80255bc:	e6ad      	b.n	802531a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xee>
 80255be:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 80255c2:	b29b      	uxth	r3, r3
 80255c4:	e769      	b.n	802549a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 80255c6:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 80255ca:	b29b      	uxth	r3, r3
 80255cc:	e701      	b.n	80253d2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 80255ce:	bf00      	nop
 80255d0:	20082f08 	.word	0x20082f08
 80255d4:	20082f02 	.word	0x20082f02
 80255d8:	fffff800 	.word	0xfffff800
 80255dc:	4b03      	ldr	r3, [pc, #12]	@ (80255ec <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c0>)
 80255de:	4a04      	ldr	r2, [pc, #16]	@ (80255f0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c4>)
 80255e0:	f240 41f5 	movw	r1, #1269	@ 0x4f5
 80255e4:	4803      	ldr	r0, [pc, #12]	@ (80255f4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c8>)
 80255e6:	f00c ff87 	bl	80324f8 <__assert_func>
 80255ea:	bf00      	nop
 80255ec:	080363d4 	.word	0x080363d4
 80255f0:	080375c4 	.word	0x080375c4
 80255f4:	080362e0 	.word	0x080362e0

080255f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80255f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80255fc:	b08f      	sub	sp, #60	@ 0x3c
 80255fe:	9206      	str	r2, [sp, #24]
 8025600:	461c      	mov	r4, r3
 8025602:	7812      	ldrb	r2, [r2, #0]
 8025604:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8025608:	e9cd 1000 	strd	r1, r0, [sp]
 802560c:	9305      	str	r3, [sp, #20]
 802560e:	2a00      	cmp	r2, #0
 8025610:	f040 81ad 	bne.w	802596e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x376>
 8025614:	b913      	cbnz	r3, 802561c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x24>
 8025616:	b00f      	add	sp, #60	@ 0x3c
 8025618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802561c:	6820      	ldr	r0, [r4, #0]
 802561e:	6861      	ldr	r1, [r4, #4]
 8025620:	ab0a      	add	r3, sp, #40	@ 0x28
 8025622:	c303      	stmia	r3!, {r0, r1}
 8025624:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8025626:	6818      	ldr	r0, [r3, #0]
 8025628:	6859      	ldr	r1, [r3, #4]
 802562a:	ab0c      	add	r3, sp, #48	@ 0x30
 802562c:	c303      	stmia	r3!, {r0, r1}
 802562e:	a80a      	add	r0, sp, #40	@ 0x28
 8025630:	f7e7 fb86 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025634:	4621      	mov	r1, r4
 8025636:	a80c      	add	r0, sp, #48	@ 0x30
 8025638:	f7e7 fbaa 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802563c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8025640:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8025644:	dd71      	ble.n	802572a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x132>
 8025646:	2201      	movs	r2, #1
 8025648:	b299      	uxth	r1, r3
 802564a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 802564e:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8025652:	fb93 f6f2 	sdiv	r6, r3, r2
 8025656:	b2b5      	uxth	r5, r6
 8025658:	fb02 3415 	mls	r4, r2, r5, r3
 802565c:	fb14 0101 	smlabb	r1, r4, r1, r0
 8025660:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 8025664:	fa1f fb81 	uxth.w	fp, r1
 8025668:	4414      	add	r4, r2
 802566a:	3c01      	subs	r4, #1
 802566c:	fb94 f4f2 	sdiv	r4, r4, r2
 8025670:	b135      	cbz	r5, 8025680 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x88>
 8025672:	9a06      	ldr	r2, [sp, #24]
 8025674:	9900      	ldr	r1, [sp, #0]
 8025676:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 802567a:	ba12      	rev	r2, r2
 802567c:	4411      	add	r1, r2
 802567e:	9100      	str	r1, [sp, #0]
 8025680:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8025684:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 8025688:	4402      	add	r2, r0
 802568a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 802568e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8025692:	440b      	add	r3, r1
 8025694:	4616      	mov	r6, r2
 8025696:	49b9      	ldr	r1, [pc, #740]	@ (802597c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x384>)
 8025698:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 802569c:	6808      	ldr	r0, [r1, #0]
 802569e:	9209      	str	r2, [sp, #36]	@ 0x24
 80256a0:	6803      	ldr	r3, [r0, #0]
 80256a2:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 80256a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80256a8:	4798      	blx	r3
 80256aa:	f1bb 0f00 	cmp.w	fp, #0
 80256ae:	bf0c      	ite	eq
 80256b0:	4633      	moveq	r3, r6
 80256b2:	2300      	movne	r3, #0
 80256b4:	49b2      	ldr	r1, [pc, #712]	@ (8025980 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x388>)
 80256b6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80256ba:	8809      	ldrh	r1, [r1, #0]
 80256bc:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 80256c0:	fb01 f505 	mul.w	r5, r1, r5
 80256c4:	fb01 6202 	mla	r2, r1, r2, r6
 80256c8:	b2a4      	uxth	r4, r4
 80256ca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80256ce:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80256d2:	00a4      	lsls	r4, r4, #2
 80256d4:	1d21      	adds	r1, r4, #4
 80256d6:	4290      	cmp	r0, r2
 80256d8:	9202      	str	r2, [sp, #8]
 80256da:	9108      	str	r1, [sp, #32]
 80256dc:	fa1f fa83 	uxth.w	sl, r3
 80256e0:	d21b      	bcs.n	802571a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x122>
 80256e2:	2300      	movs	r3, #0
 80256e4:	465e      	mov	r6, fp
 80256e6:	461d      	mov	r5, r3
 80256e8:	9303      	str	r3, [sp, #12]
 80256ea:	b965      	cbnz	r5, 8025706 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 80256ec:	9900      	ldr	r1, [sp, #0]
 80256ee:	780b      	ldrb	r3, [r1, #0]
 80256f0:	099d      	lsrs	r5, r3, #6
 80256f2:	1e6a      	subs	r2, r5, #1
 80256f4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80256f8:	2a02      	cmp	r2, #2
 80256fa:	9303      	str	r3, [sp, #12]
 80256fc:	f200 80ce 	bhi.w	802589c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 8025700:	3101      	adds	r1, #1
 8025702:	9100      	str	r1, [sp, #0]
 8025704:	b2ad      	uxth	r5, r5
 8025706:	b1b6      	cbz	r6, 8025736 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x13e>
 8025708:	42b5      	cmp	r5, r6
 802570a:	f080 80c1 	bcs.w	8025890 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 802570e:	1b75      	subs	r5, r6, r5
 8025710:	b2ae      	uxth	r6, r5
 8025712:	2500      	movs	r5, #0
 8025714:	9b02      	ldr	r3, [sp, #8]
 8025716:	4283      	cmp	r3, r0
 8025718:	d8e7      	bhi.n	80256ea <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xf2>
 802571a:	4b98      	ldr	r3, [pc, #608]	@ (802597c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x384>)
 802571c:	6818      	ldr	r0, [r3, #0]
 802571e:	6803      	ldr	r3, [r0, #0]
 8025720:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025722:	4798      	blx	r3
 8025724:	b00f      	add	sp, #60	@ 0x3c
 8025726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802572a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 802572e:	b299      	uxth	r1, r3
 8025730:	fb94 f2f1 	sdiv	r2, r4, r1
 8025734:	e789      	b.n	802564a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x52>
 8025736:	2304      	movs	r3, #4
 8025738:	4619      	mov	r1, r3
 802573a:	9a08      	ldr	r2, [sp, #32]
 802573c:	9b03      	ldr	r3, [sp, #12]
 802573e:	4555      	cmp	r5, sl
 8025740:	fb11 2303 	smlabb	r3, r1, r3, r2
 8025744:	9a06      	ldr	r2, [sp, #24]
 8025746:	58d1      	ldr	r1, [r2, r3]
 8025748:	ea4f 6211 	mov.w	r2, r1, lsr #24
 802574c:	f0c0 8099 	bcc.w	8025882 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x28a>
 8025750:	eba5 030a 	sub.w	r3, r5, sl
 8025754:	b29b      	uxth	r3, r3
 8025756:	9304      	str	r3, [sp, #16]
 8025758:	4653      	mov	r3, sl
 802575a:	9607      	str	r6, [sp, #28]
 802575c:	2a00      	cmp	r2, #0
 802575e:	f000 808d 	beq.w	802587c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x284>
 8025762:	2aff      	cmp	r2, #255	@ 0xff
 8025764:	ea4f 4b11 	mov.w	fp, r1, lsr #16
 8025768:	ea4f 2911 	mov.w	r9, r1, lsr #8
 802576c:	fa5f f881 	uxtb.w	r8, r1
 8025770:	d103      	bne.n	802577a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x182>
 8025772:	9905      	ldr	r1, [sp, #20]
 8025774:	29ff      	cmp	r1, #255	@ 0xff
 8025776:	f000 8096 	beq.w	80258a6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 802577a:	9905      	ldr	r1, [sp, #20]
 802577c:	fa5f fb8b 	uxtb.w	fp, fp
 8025780:	fb01 f202 	mul.w	r2, r1, r2
 8025784:	1c51      	adds	r1, r2, #1
 8025786:	eb01 2222 	add.w	r2, r1, r2, asr #8
 802578a:	1212      	asrs	r2, r2, #8
 802578c:	ea6f 0c02 	mvn.w	ip, r2
 8025790:	fa5f f989 	uxtb.w	r9, r9
 8025794:	fa5f fc8c 	uxtb.w	ip, ip
 8025798:	2b00      	cmp	r3, #0
 802579a:	d04d      	beq.n	8025838 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 802579c:	b292      	uxth	r2, r2
 802579e:	fb1b fb02 	smulbb	fp, fp, r2
 80257a2:	fb19 f902 	smulbb	r9, r9, r2
 80257a6:	fb18 f802 	smulbb	r8, r8, r2
 80257aa:	f103 3eff 	add.w	lr, r3, #4294967295
 80257ae:	fa1f fe8e 	uxth.w	lr, lr
 80257b2:	f10e 0e01 	add.w	lr, lr, #1
 80257b6:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 80257ba:	fa1f fb8b 	uxth.w	fp, fp
 80257be:	fa1f f989 	uxth.w	r9, r9
 80257c2:	fa1f f888 	uxth.w	r8, r8
 80257c6:	fa1f fc8c 	uxth.w	ip, ip
 80257ca:	f830 1b02 	ldrh.w	r1, [r0], #2
 80257ce:	9b01      	ldr	r3, [sp, #4]
 80257d0:	00ca      	lsls	r2, r1, #3
 80257d2:	7b1f      	ldrb	r7, [r3, #12]
 80257d4:	b2d2      	uxtb	r2, r2
 80257d6:	10cb      	asrs	r3, r1, #3
 80257d8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80257dc:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80257e0:	fb02 820c 	mla	r2, r2, ip, r8
 80257e4:	ea43 1393 	orr.w	r3, r3, r3, lsr #6
 80257e8:	fb03 930c 	mla	r3, r3, ip, r9
 80257ec:	b292      	uxth	r2, r2
 80257ee:	1c54      	adds	r4, r2, #1
 80257f0:	b29b      	uxth	r3, r3
 80257f2:	3f01      	subs	r7, #1
 80257f4:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 80257f8:	2f01      	cmp	r7, #1
 80257fa:	f103 0401 	add.w	r4, r3, #1
 80257fe:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025802:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8025806:	d92d      	bls.n	8025864 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 8025808:	1209      	asrs	r1, r1, #8
 802580a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802580e:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8025812:	fb01 b10c 	mla	r1, r1, ip, fp
 8025816:	b289      	uxth	r1, r1
 8025818:	1c4c      	adds	r4, r1, #1
 802581a:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802581e:	095b      	lsrs	r3, r3, #5
 8025820:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025824:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025828:	ea41 02d2 	orr.w	r2, r1, r2, lsr #3
 802582c:	431a      	orrs	r2, r3
 802582e:	4586      	cmp	lr, r0
 8025830:	f820 2c02 	strh.w	r2, [r0, #-2]
 8025834:	d1c9      	bne.n	80257ca <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8025836:	4670      	mov	r0, lr
 8025838:	4555      	cmp	r5, sl
 802583a:	d31b      	bcc.n	8025874 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x27c>
 802583c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802583e:	f8bd 602c 	ldrh.w	r6, [sp, #44]	@ 0x2c
 8025842:	4b4f      	ldr	r3, [pc, #316]	@ (8025980 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x388>)
 8025844:	fa1f fa82 	uxth.w	sl, r2
 8025848:	eba6 060a 	sub.w	r6, r6, sl
 802584c:	881b      	ldrh	r3, [r3, #0]
 802584e:	b2b6      	uxth	r6, r6
 8025850:	2e00      	cmp	r6, #0
 8025852:	eba3 0302 	sub.w	r3, r3, r2
 8025856:	9d04      	ldr	r5, [sp, #16]
 8025858:	bf18      	it	ne
 802585a:	f04f 0a00 	movne.w	sl, #0
 802585e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8025862:	e757      	b.n	8025714 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 8025864:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8025868:	431a      	orrs	r2, r3
 802586a:	4586      	cmp	lr, r0
 802586c:	f820 2c02 	strh.w	r2, [r0, #-2]
 8025870:	d1ab      	bne.n	80257ca <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8025872:	e7e0      	b.n	8025836 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x23e>
 8025874:	9d04      	ldr	r5, [sp, #16]
 8025876:	f8dd a01c 	ldr.w	sl, [sp, #28]
 802587a:	e74b      	b.n	8025714 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 802587c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8025880:	e7da      	b.n	8025838 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 8025882:	ebaa 0405 	sub.w	r4, sl, r5
 8025886:	b2a4      	uxth	r4, r4
 8025888:	462b      	mov	r3, r5
 802588a:	9604      	str	r6, [sp, #16]
 802588c:	9407      	str	r4, [sp, #28]
 802588e:	e765      	b.n	802575c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x164>
 8025890:	1bad      	subs	r5, r5, r6
 8025892:	b2ad      	uxth	r5, r5
 8025894:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 8025898:	2600      	movs	r6, #0
 802589a:	e73b      	b.n	8025714 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x11c>
 802589c:	460b      	mov	r3, r1
 802589e:	3302      	adds	r3, #2
 80258a0:	784d      	ldrb	r5, [r1, #1]
 80258a2:	9300      	str	r3, [sp, #0]
 80258a4:	e72f      	b.n	8025706 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 80258a6:	9a01      	ldr	r2, [sp, #4]
 80258a8:	7b12      	ldrb	r2, [r2, #12]
 80258aa:	3a01      	subs	r2, #1
 80258ac:	2a01      	cmp	r2, #1
 80258ae:	d954      	bls.n	802595a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x362>
 80258b0:	4a34      	ldr	r2, [pc, #208]	@ (8025984 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x38c>)
 80258b2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80258b6:	ea02 2b0b 	and.w	fp, r2, fp, lsl #8
 80258ba:	ea4b 08d8 	orr.w	r8, fp, r8, lsr #3
 80258be:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80258c2:	ea48 0809 	orr.w	r8, r8, r9
 80258c6:	fa1f fe88 	uxth.w	lr, r8
 80258ca:	2b00      	cmp	r3, #0
 80258cc:	d0b4      	beq.n	8025838 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 80258ce:	1e5a      	subs	r2, r3, #1
 80258d0:	fa1f fb82 	uxth.w	fp, r2
 80258d4:	f1bb 0f04 	cmp.w	fp, #4
 80258d8:	f3c0 0140 	ubfx	r1, r0, #1, #1
 80258dc:	d945      	bls.n	802596a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x372>
 80258de:	2900      	cmp	r1, #0
 80258e0:	d040      	beq.n	8025964 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 80258e2:	46d8      	mov	r8, fp
 80258e4:	f8a0 e000 	strh.w	lr, [r0]
 80258e8:	f100 0902 	add.w	r9, r0, #2
 80258ec:	2700      	movs	r7, #0
 80258ee:	1a5b      	subs	r3, r3, r1
 80258f0:	463a      	mov	r2, r7
 80258f2:	fa1f fc83 	uxth.w	ip, r3
 80258f6:	f36e 070f 	bfi	r7, lr, #0, #16
 80258fa:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80258fe:	ea4f 035c 	mov.w	r3, ip, lsr #1
 8025902:	f36e 471f 	bfi	r7, lr, #16, #16
 8025906:	3201      	adds	r2, #1
 8025908:	b294      	uxth	r4, r2
 802590a:	42a3      	cmp	r3, r4
 802590c:	f841 7b04 	str.w	r7, [r1], #4
 8025910:	d8f9      	bhi.n	8025906 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x30e>
 8025912:	f02c 0201 	bic.w	r2, ip, #1
 8025916:	b292      	uxth	r2, r2
 8025918:	eba8 0302 	sub.w	r3, r8, r2
 802591c:	4562      	cmp	r2, ip
 802591e:	b29b      	uxth	r3, r3
 8025920:	eb09 0142 	add.w	r1, r9, r2, lsl #1
 8025924:	d014      	beq.n	8025950 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8025926:	1e5a      	subs	r2, r3, #1
 8025928:	b292      	uxth	r2, r2
 802592a:	f8a1 e000 	strh.w	lr, [r1]
 802592e:	b17a      	cbz	r2, 8025950 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8025930:	1e9a      	subs	r2, r3, #2
 8025932:	b292      	uxth	r2, r2
 8025934:	f8a1 e002 	strh.w	lr, [r1, #2]
 8025938:	b152      	cbz	r2, 8025950 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 802593a:	1eda      	subs	r2, r3, #3
 802593c:	b292      	uxth	r2, r2
 802593e:	f8a1 e004 	strh.w	lr, [r1, #4]
 8025942:	b12a      	cbz	r2, 8025950 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 8025944:	2b04      	cmp	r3, #4
 8025946:	f8a1 e006 	strh.w	lr, [r1, #6]
 802594a:	d001      	beq.n	8025950 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 802594c:	f8a1 e008 	strh.w	lr, [r1, #8]
 8025950:	f10b 0b01 	add.w	fp, fp, #1
 8025954:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 8025958:	e76e      	b.n	8025838 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 802595a:	ea48 2809 	orr.w	r8, r8, r9, lsl #8
 802595e:	fa1f fe88 	uxth.w	lr, r8
 8025962:	e7b2      	b.n	80258ca <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8025964:	4681      	mov	r9, r0
 8025966:	4698      	mov	r8, r3
 8025968:	e7c0      	b.n	80258ec <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f4>
 802596a:	4601      	mov	r1, r0
 802596c:	e7dc      	b.n	8025928 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x330>
 802596e:	4b06      	ldr	r3, [pc, #24]	@ (8025988 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x390>)
 8025970:	4a06      	ldr	r2, [pc, #24]	@ (802598c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 8025972:	f44f 61aa 	mov.w	r1, #1360	@ 0x550
 8025976:	4806      	ldr	r0, [pc, #24]	@ (8025990 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 8025978:	f00c fdbe 	bl	80324f8 <__assert_func>
 802597c:	20082f08 	.word	0x20082f08
 8025980:	20082f02 	.word	0x20082f02
 8025984:	fffff800 	.word	0xfffff800
 8025988:	080363d4 	.word	0x080363d4
 802598c:	080379d0 	.word	0x080379d0
 8025990:	080362e0 	.word	0x080362e0

08025994 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8025994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025998:	b09f      	sub	sp, #124	@ 0x7c
 802599a:	9201      	str	r2, [sp, #4]
 802599c:	461c      	mov	r4, r3
 802599e:	7812      	ldrb	r2, [r2, #0]
 80259a0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80259a4:	9116      	str	r1, [sp, #88]	@ 0x58
 80259a6:	9305      	str	r3, [sp, #20]
 80259a8:	2a00      	cmp	r2, #0
 80259aa:	f040 823c 	bne.w	8025e26 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x492>
 80259ae:	b913      	cbnz	r3, 80259b6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 80259b0:	b01f      	add	sp, #124	@ 0x7c
 80259b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80259b6:	6861      	ldr	r1, [r4, #4]
 80259b8:	4683      	mov	fp, r0
 80259ba:	6820      	ldr	r0, [r4, #0]
 80259bc:	ab1a      	add	r3, sp, #104	@ 0x68
 80259be:	c303      	stmia	r3!, {r0, r1}
 80259c0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80259c2:	6818      	ldr	r0, [r3, #0]
 80259c4:	6859      	ldr	r1, [r3, #4]
 80259c6:	ab1c      	add	r3, sp, #112	@ 0x70
 80259c8:	c303      	stmia	r3!, {r0, r1}
 80259ca:	a81a      	add	r0, sp, #104	@ 0x68
 80259cc:	f7e7 f9b8 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80259d0:	4621      	mov	r1, r4
 80259d2:	a81c      	add	r0, sp, #112	@ 0x70
 80259d4:	f7e7 f9dc 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80259d8:	f9bd 106c 	ldrsh.w	r1, [sp, #108]	@ 0x6c
 80259dc:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80259e0:	f340 8152 	ble.w	8025c88 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f4>
 80259e4:	2301      	movs	r3, #1
 80259e6:	b289      	uxth	r1, r1
 80259e8:	9318      	str	r3, [sp, #96]	@ 0x60
 80259ea:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 80259ee:	f9bd 206e 	ldrsh.w	r2, [sp, #110]	@ 0x6e
 80259f2:	fb90 f4f3 	sdiv	r4, r0, r3
 80259f6:	441a      	add	r2, r3
 80259f8:	3a01      	subs	r2, #1
 80259fa:	fb92 f2f3 	sdiv	r2, r2, r3
 80259fe:	b2a4      	uxth	r4, r4
 8025a00:	fb03 0314 	mls	r3, r3, r4, r0
 8025a04:	9417      	str	r4, [sp, #92]	@ 0x5c
 8025a06:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8025a0a:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 8025a0e:	fb13 4101 	smlabb	r1, r3, r1, r4
 8025a12:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 8025a16:	4bbb      	ldr	r3, [pc, #748]	@ (8025d04 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 8025a18:	4434      	add	r4, r6
 8025a1a:	4405      	add	r5, r0
 8025a1c:	6818      	ldr	r0, [r3, #0]
 8025a1e:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 8025a22:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 8025a26:	f9bd 6074 	ldrsh.w	r6, [sp, #116]	@ 0x74
 8025a2a:	6803      	ldr	r3, [r0, #0]
 8025a2c:	3201      	adds	r2, #1
 8025a2e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025a30:	960b      	str	r6, [sp, #44]	@ 0x2c
 8025a32:	fa1f fa81 	uxth.w	sl, r1
 8025a36:	b294      	uxth	r4, r2
 8025a38:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 8025a3c:	4798      	blx	r3
 8025a3e:	2300      	movs	r3, #0
 8025a40:	f1ba 0f00 	cmp.w	sl, #0
 8025a44:	bf0c      	ite	eq
 8025a46:	4632      	moveq	r2, r6
 8025a48:	2200      	movne	r2, #0
 8025a4a:	49af      	ldr	r1, [pc, #700]	@ (8025d08 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 8025a4c:	9315      	str	r3, [sp, #84]	@ 0x54
 8025a4e:	8809      	ldrh	r1, [r1, #0]
 8025a50:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 8025a54:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 8025a58:	fb01 f505 	mul.w	r5, r1, r5
 8025a5c:	fb01 6303 	mla	r3, r1, r3, r6
 8025a60:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8025a64:	9300      	str	r3, [sp, #0]
 8025a66:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025a6a:	9307      	str	r3, [sp, #28]
 8025a6c:	b293      	uxth	r3, r2
 8025a6e:	9302      	str	r3, [sp, #8]
 8025a70:	f10b 030e 	add.w	r3, fp, #14
 8025a74:	9319      	str	r3, [sp, #100]	@ 0x64
 8025a76:	465b      	mov	r3, fp
 8025a78:	46d3      	mov	fp, sl
 8025a7a:	469a      	mov	sl, r3
 8025a7c:	00a4      	lsls	r4, r4, #2
 8025a7e:	1d21      	adds	r1, r4, #4
 8025a80:	9113      	str	r1, [sp, #76]	@ 0x4c
 8025a82:	9b07      	ldr	r3, [sp, #28]
 8025a84:	9a00      	ldr	r2, [sp, #0]
 8025a86:	4293      	cmp	r3, r2
 8025a88:	f240 8134 	bls.w	8025cf4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025a8c:	2601      	movs	r6, #1
 8025a8e:	2700      	movs	r7, #0
 8025a90:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8025a92:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8025a94:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8025a98:	fa11 f482 	uxtah	r4, r1, r2
 8025a9c:	00a4      	lsls	r4, r4, #2
 8025a9e:	9a01      	ldr	r2, [sp, #4]
 8025aa0:	3404      	adds	r4, #4
 8025aa2:	1911      	adds	r1, r2, r4
 8025aa4:	788a      	ldrb	r2, [r1, #2]
 8025aa6:	784d      	ldrb	r5, [r1, #1]
 8025aa8:	0212      	lsls	r2, r2, #8
 8025aaa:	78c9      	ldrb	r1, [r1, #3]
 8025aac:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 8025ab0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8025ab2:	4308      	orrs	r0, r1
 8025ab4:	4629      	mov	r1, r5
 8025ab6:	fbbb f3f3 	udiv	r3, fp, r3
 8025aba:	46bc      	mov	ip, r7
 8025abc:	46b1      	mov	r9, r6
 8025abe:	4401      	add	r1, r0
 8025ac0:	784a      	ldrb	r2, [r1, #1]
 8025ac2:	5c28      	ldrb	r0, [r5, r0]
 8025ac4:	0212      	lsls	r2, r2, #8
 8025ac6:	9d01      	ldr	r5, [sp, #4]
 8025ac8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8025acc:	4302      	orrs	r2, r0
 8025ace:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8025ad0:	5d2c      	ldrb	r4, [r5, r4]
 8025ad2:	f88a 200d 	strb.w	r2, [sl, #13]
 8025ad6:	b292      	uxth	r2, r2
 8025ad8:	1ac3      	subs	r3, r0, r3
 8025ada:	9209      	str	r2, [sp, #36]	@ 0x24
 8025adc:	198a      	adds	r2, r1, r6
 8025ade:	9203      	str	r2, [sp, #12]
 8025ae0:	b29b      	uxth	r3, r3
 8025ae2:	19a2      	adds	r2, r4, r6
 8025ae4:	9712      	str	r7, [sp, #72]	@ 0x48
 8025ae6:	960a      	str	r6, [sp, #40]	@ 0x28
 8025ae8:	940e      	str	r4, [sp, #56]	@ 0x38
 8025aea:	9206      	str	r2, [sp, #24]
 8025aec:	9314      	str	r3, [sp, #80]	@ 0x50
 8025aee:	9604      	str	r6, [sp, #16]
 8025af0:	f1bb 0f00 	cmp.w	fp, #0
 8025af4:	d037      	beq.n	8025b66 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 8025af6:	45d9      	cmp	r9, fp
 8025af8:	f080 80ce 	bcs.w	8025c98 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8025afc:	ebab 0b09 	sub.w	fp, fp, r9
 8025b00:	fa1f fb8b 	uxth.w	fp, fp
 8025b04:	9b07      	ldr	r3, [sp, #28]
 8025b06:	9a00      	ldr	r2, [sp, #0]
 8025b08:	4293      	cmp	r3, r2
 8025b0a:	f240 80f3 	bls.w	8025cf4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025b0e:	9803      	ldr	r0, [sp, #12]
 8025b10:	9c04      	ldr	r4, [sp, #16]
 8025b12:	7842      	ldrb	r2, [r0, #1]
 8025b14:	f1c4 0107 	rsb	r1, r4, #7
 8025b18:	7803      	ldrb	r3, [r0, #0]
 8025b1a:	408a      	lsls	r2, r1
 8025b1c:	0052      	lsls	r2, r2, #1
 8025b1e:	4123      	asrs	r3, r4
 8025b20:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8025b24:	1c61      	adds	r1, r4, #1
 8025b26:	b2db      	uxtb	r3, r3
 8025b28:	4313      	orrs	r3, r2
 8025b2a:	b2ca      	uxtb	r2, r1
 8025b2c:	4611      	mov	r1, r2
 8025b2e:	2908      	cmp	r1, #8
 8025b30:	9204      	str	r2, [sp, #16]
 8025b32:	b29a      	uxth	r2, r3
 8025b34:	f000 811a 	beq.w	8025d6c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 8025b38:	3001      	adds	r0, #1
 8025b3a:	9003      	str	r0, [sp, #12]
 8025b3c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8025b3e:	4291      	cmp	r1, r2
 8025b40:	f0c0 80e6 	bcc.w	8025d10 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x37c>
 8025b44:	f04f 0901 	mov.w	r9, #1
 8025b48:	b2db      	uxtb	r3, r3
 8025b4a:	f88a 300d 	strb.w	r3, [sl, #13]
 8025b4e:	9906      	ldr	r1, [sp, #24]
 8025b50:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8025b54:	f0c0 8132 	bcc.w	8025dbc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x428>
 8025b58:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 8025b5c:	f04f 0c00 	mov.w	ip, #0
 8025b60:	f1bb 0f00 	cmp.w	fp, #0
 8025b64:	d1c7      	bne.n	8025af6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x162>
 8025b66:	9b02      	ldr	r3, [sp, #8]
 8025b68:	4599      	cmp	r9, r3
 8025b6a:	461a      	mov	r2, r3
 8025b6c:	f0c0 80f0 	bcc.w	8025d50 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3bc>
 8025b70:	eba9 0303 	sub.w	r3, r9, r3
 8025b74:	b29b      	uxth	r3, r3
 8025b76:	930c      	str	r3, [sp, #48]	@ 0x30
 8025b78:	2a00      	cmp	r2, #0
 8025b7a:	f000 80fd 	beq.w	8025d78 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3e4>
 8025b7e:	4613      	mov	r3, r2
 8025b80:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
 8025b84:	9208      	str	r2, [sp, #32]
 8025b86:	4463      	add	r3, ip
 8025b88:	b29b      	uxth	r3, r3
 8025b8a:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 8025b8e:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 8025b92:	f8dd e000 	ldr.w	lr, [sp]
 8025b96:	930d      	str	r3, [sp, #52]	@ 0x34
 8025b98:	f8dd 904c 	ldr.w	r9, [sp, #76]	@ 0x4c
 8025b9c:	469b      	mov	fp, r3
 8025b9e:	e048      	b.n	8025c32 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 8025ba0:	9905      	ldr	r1, [sp, #20]
 8025ba2:	f8be 5000 	ldrh.w	r5, [lr]
 8025ba6:	fb01 f202 	mul.w	r2, r1, r2
 8025baa:	1c50      	adds	r0, r2, #1
 8025bac:	eb00 2022 	add.w	r0, r0, r2, asr #8
 8025bb0:	1200      	asrs	r0, r0, #8
 8025bb2:	43c4      	mvns	r4, r0
 8025bb4:	b280      	uxth	r0, r0
 8025bb6:	b2ff      	uxtb	r7, r7
 8025bb8:	fb13 f300 	smulbb	r3, r3, r0
 8025bbc:	fb17 f700 	smulbb	r7, r7, r0
 8025bc0:	00e9      	lsls	r1, r5, #3
 8025bc2:	b2c9      	uxtb	r1, r1
 8025bc4:	10ea      	asrs	r2, r5, #3
 8025bc6:	b2e4      	uxtb	r4, r4
 8025bc8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8025bcc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025bd0:	fb01 3304 	mla	r3, r1, r4, r3
 8025bd4:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8025bd8:	fb02 7704 	mla	r7, r2, r4, r7
 8025bdc:	b29b      	uxth	r3, r3
 8025bde:	b2bf      	uxth	r7, r7
 8025be0:	1c59      	adds	r1, r3, #1
 8025be2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025be6:	1c7a      	adds	r2, r7, #1
 8025be8:	2e01      	cmp	r6, #1
 8025bea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025bee:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8025bf2:	d966      	bls.n	8025cc2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x32e>
 8025bf4:	fa5f f888 	uxtb.w	r8, r8
 8025bf8:	fb18 f800 	smulbb	r8, r8, r0
 8025bfc:	122d      	asrs	r5, r5, #8
 8025bfe:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8025c02:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8025c06:	fb05 8804 	mla	r8, r5, r4, r8
 8025c0a:	fa1f f888 	uxth.w	r8, r8
 8025c0e:	f108 0101 	add.w	r1, r8, #1
 8025c12:	eb01 2118 	add.w	r1, r1, r8, lsr #8
 8025c16:	097f      	lsrs	r7, r7, #5
 8025c18:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025c1c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025c20:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8025c24:	433b      	orrs	r3, r7
 8025c26:	f8ae 3000 	strh.w	r3, [lr]
 8025c2a:	45dc      	cmp	ip, fp
 8025c2c:	f10e 0e02 	add.w	lr, lr, #2
 8025c30:	d04b      	beq.n	8025cca <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x336>
 8025c32:	2204      	movs	r2, #4
 8025c34:	eb0a 030c 	add.w	r3, sl, ip
 8025c38:	7b5b      	ldrb	r3, [r3, #13]
 8025c3a:	f10c 0c01 	add.w	ip, ip, #1
 8025c3e:	fb12 9303 	smlabb	r3, r2, r3, r9
 8025c42:	9a01      	ldr	r2, [sp, #4]
 8025c44:	fa1f fc8c 	uxth.w	ip, ip
 8025c48:	58d3      	ldr	r3, [r2, r3]
 8025c4a:	0e1a      	lsrs	r2, r3, #24
 8025c4c:	d0ed      	beq.n	8025c2a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x296>
 8025c4e:	f89a 600c 	ldrb.w	r6, [sl, #12]
 8025c52:	2aff      	cmp	r2, #255	@ 0xff
 8025c54:	f106 36ff 	add.w	r6, r6, #4294967295
 8025c58:	ea4f 4813 	mov.w	r8, r3, lsr #16
 8025c5c:	ea4f 2713 	mov.w	r7, r3, lsr #8
 8025c60:	b2f6      	uxtb	r6, r6
 8025c62:	b2db      	uxtb	r3, r3
 8025c64:	d19c      	bne.n	8025ba0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8025c66:	9905      	ldr	r1, [sp, #20]
 8025c68:	29ff      	cmp	r1, #255	@ 0xff
 8025c6a:	d199      	bne.n	8025ba0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 8025c6c:	2e01      	cmp	r6, #1
 8025c6e:	f240 80c4 	bls.w	8025dfa <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x466>
 8025c72:	4a26      	ldr	r2, [pc, #152]	@ (8025d0c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 8025c74:	00ff      	lsls	r7, r7, #3
 8025c76:	ea02 2808 	and.w	r8, r2, r8, lsl #8
 8025c7a:	ea48 03d3 	orr.w	r3, r8, r3, lsr #3
 8025c7e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025c82:	433b      	orrs	r3, r7
 8025c84:	b29b      	uxth	r3, r3
 8025c86:	e7ce      	b.n	8025c26 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025c88:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8025c8c:	b289      	uxth	r1, r1
 8025c8e:	fb93 f3f1 	sdiv	r3, r3, r1
 8025c92:	b29a      	uxth	r2, r3
 8025c94:	9218      	str	r2, [sp, #96]	@ 0x60
 8025c96:	e6a8      	b.n	80259ea <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x56>
 8025c98:	eba9 090b 	sub.w	r9, r9, fp
 8025c9c:	44dc      	add	ip, fp
 8025c9e:	f04f 0b00 	mov.w	fp, #0
 8025ca2:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8025ca6:	fa1f f989 	uxth.w	r9, r9
 8025caa:	fa1f fc8c 	uxth.w	ip, ip
 8025cae:	9302      	str	r3, [sp, #8]
 8025cb0:	9b07      	ldr	r3, [sp, #28]
 8025cb2:	9a00      	ldr	r2, [sp, #0]
 8025cb4:	4293      	cmp	r3, r2
 8025cb6:	d91d      	bls.n	8025cf4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8025cb8:	f1b9 0f00 	cmp.w	r9, #0
 8025cbc:	f47f af18 	bne.w	8025af0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8025cc0:	e725      	b.n	8025b0e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8025cc2:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8025cc6:	433b      	orrs	r3, r7
 8025cc8:	e7ad      	b.n	8025c26 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025cca:	9b08      	ldr	r3, [sp, #32]
 8025ccc:	9a00      	ldr	r2, [sp, #0]
 8025cce:	3b01      	subs	r3, #1
 8025cd0:	b29b      	uxth	r3, r3
 8025cd2:	3301      	adds	r3, #1
 8025cd4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025cd8:	9300      	str	r3, [sp, #0]
 8025cda:	9b02      	ldr	r3, [sp, #8]
 8025cdc:	e9dd 9b0f 	ldrd	r9, fp, [sp, #60]	@ 0x3c
 8025ce0:	4599      	cmp	r9, r3
 8025ce2:	d24b      	bcs.n	8025d7c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x3e8>
 8025ce4:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 8025ce8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8025cea:	9a00      	ldr	r2, [sp, #0]
 8025cec:	9302      	str	r3, [sp, #8]
 8025cee:	9b07      	ldr	r3, [sp, #28]
 8025cf0:	4293      	cmp	r3, r2
 8025cf2:	d8e1      	bhi.n	8025cb8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x324>
 8025cf4:	4b03      	ldr	r3, [pc, #12]	@ (8025d04 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 8025cf6:	6818      	ldr	r0, [r3, #0]
 8025cf8:	6803      	ldr	r3, [r0, #0]
 8025cfa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025cfc:	4798      	blx	r3
 8025cfe:	b01f      	add	sp, #124	@ 0x7c
 8025d00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d04:	20082f08 	.word	0x20082f08
 8025d08:	20082f02 	.word	0x20082f02
 8025d0c:	fffff800 	.word	0xfffff800
 8025d10:	9b06      	ldr	r3, [sp, #24]
 8025d12:	429a      	cmp	r2, r3
 8025d14:	d355      	bcc.n	8025dc2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x42e>
 8025d16:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8025d18:	f89a 100d 	ldrb.w	r1, [sl, #13]
 8025d1c:	eb0a 0300 	add.w	r3, sl, r0
 8025d20:	7359      	strb	r1, [r3, #13]
 8025d22:	f89a 300d 	ldrb.w	r3, [sl, #13]
 8025d26:	1c41      	adds	r1, r0, #1
 8025d28:	fa1f f981 	uxth.w	r9, r1
 8025d2c:	9c06      	ldr	r4, [sp, #24]
 8025d2e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025d30:	eb0a 0084 	add.w	r0, sl, r4, lsl #2
 8025d34:	3401      	adds	r4, #1
 8025d36:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8025d3a:	b2a3      	uxth	r3, r4
 8025d3c:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8025d40:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8025d44:	9306      	str	r3, [sp, #24]
 8025d46:	e9cd 2909 	strd	r2, r9, [sp, #36]	@ 0x24
 8025d4a:	f04f 0c00 	mov.w	ip, #0
 8025d4e:	e6cf      	b.n	8025af0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8025d50:	eba3 0309 	sub.w	r3, r3, r9
 8025d54:	b29b      	uxth	r3, r3
 8025d56:	9311      	str	r3, [sp, #68]	@ 0x44
 8025d58:	f1b9 0f00 	cmp.w	r9, #0
 8025d5c:	f43f aed2 	beq.w	8025b04 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8025d60:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8025d64:	f8cd 9020 	str.w	r9, [sp, #32]
 8025d68:	464b      	mov	r3, r9
 8025d6a:	e70c      	b.n	8025b86 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8025d6c:	2100      	movs	r1, #0
 8025d6e:	9104      	str	r1, [sp, #16]
 8025d70:	9903      	ldr	r1, [sp, #12]
 8025d72:	3102      	adds	r1, #2
 8025d74:	9103      	str	r1, [sp, #12]
 8025d76:	e6e1      	b.n	8025b3c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8025d78:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 8025d7c:	4b2d      	ldr	r3, [pc, #180]	@ (8025e34 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a0>)
 8025d7e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8025d80:	881b      	ldrh	r3, [r3, #0]
 8025d82:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8025d84:	1a5b      	subs	r3, r3, r1
 8025d86:	9900      	ldr	r1, [sp, #0]
 8025d88:	3201      	adds	r2, #1
 8025d8a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8025d8e:	9300      	str	r3, [sp, #0]
 8025d90:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8025d92:	9212      	str	r2, [sp, #72]	@ 0x48
 8025d94:	429a      	cmp	r2, r3
 8025d96:	d034      	beq.n	8025e02 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x46e>
 8025d98:	e9dd 9c0c 	ldrd	r9, ip, [sp, #48]	@ 0x30
 8025d9c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8025da0:	f8bd b06c 	ldrh.w	fp, [sp, #108]	@ 0x6c
 8025da4:	ebab 0b03 	sub.w	fp, fp, r3
 8025da8:	fa1f fb8b 	uxth.w	fp, fp
 8025dac:	f1bb 0f00 	cmp.w	fp, #0
 8025db0:	bf14      	ite	ne
 8025db2:	2300      	movne	r3, #0
 8025db4:	f04f 0b00 	moveq.w	fp, #0
 8025db8:	9302      	str	r3, [sp, #8]
 8025dba:	e779      	b.n	8025cb0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8025dbc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8025dbe:	3101      	adds	r1, #1
 8025dc0:	e7b4      	b.n	8025d2c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x398>
 8025dc2:	eb0a 0382 	add.w	r3, sl, r2, lsl #2
 8025dc6:	f893 904f 	ldrb.w	r9, [r3, #79]	@ 0x4f
 8025dca:	4613      	mov	r3, r2
 8025dcc:	f1b9 0f01 	cmp.w	r9, #1
 8025dd0:	d90d      	bls.n	8025dee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x45a>
 8025dd2:	f109 010d 	add.w	r1, r9, #13
 8025dd6:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8025dd8:	4451      	add	r1, sl
 8025dda:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8025dde:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8025de2:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8025de6:	428c      	cmp	r4, r1
 8025de8:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8025dec:	d1f5      	bne.n	8025dda <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x446>
 8025dee:	b2db      	uxtb	r3, r3
 8025df0:	f88a 300d 	strb.w	r3, [sl, #13]
 8025df4:	fa1f f989 	uxth.w	r9, r9
 8025df8:	e6a9      	b.n	8025b4e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8025dfa:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
 8025dfe:	b29b      	uxth	r3, r3
 8025e00:	e711      	b.n	8025c26 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x292>
 8025e02:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8025e06:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 8025e0a:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8025e0c:	1a9b      	subs	r3, r3, r2
 8025e0e:	fa1f fb83 	uxth.w	fp, r3
 8025e12:	f1bb 0f00 	cmp.w	fp, #0
 8025e16:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025e18:	bf18      	it	ne
 8025e1a:	2300      	movne	r3, #0
 8025e1c:	3101      	adds	r1, #1
 8025e1e:	b29b      	uxth	r3, r3
 8025e20:	9115      	str	r1, [sp, #84]	@ 0x54
 8025e22:	9302      	str	r3, [sp, #8]
 8025e24:	e62d      	b.n	8025a82 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0xee>
 8025e26:	4b04      	ldr	r3, [pc, #16]	@ (8025e38 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a4>)
 8025e28:	4a04      	ldr	r2, [pc, #16]	@ (8025e3c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4a8>)
 8025e2a:	f240 51f3 	movw	r1, #1523	@ 0x5f3
 8025e2e:	4804      	ldr	r0, [pc, #16]	@ (8025e40 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h+0x4ac>)
 8025e30:	f00c fb62 	bl	80324f8 <__assert_func>
 8025e34:	20082f02 	.word	0x20082f02
 8025e38:	080363d4 	.word	0x080363d4
 8025e3c:	08037c9c 	.word	0x08037c9c
 8025e40:	080362e0 	.word	0x080362e0

08025e44 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8025e44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e48:	4691      	mov	r9, r2
 8025e4a:	8812      	ldrh	r2, [r2, #0]
 8025e4c:	b093      	sub	sp, #76	@ 0x4c
 8025e4e:	2a01      	cmp	r2, #1
 8025e50:	f89d 4074 	ldrb.w	r4, [sp, #116]	@ 0x74
 8025e54:	f040 8129 	bne.w	80260aa <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x266>
 8025e58:	b914      	cbnz	r4, 8025e60 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c>
 8025e5a:	b013      	add	sp, #76	@ 0x4c
 8025e5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025e60:	461d      	mov	r5, r3
 8025e62:	468a      	mov	sl, r1
 8025e64:	6818      	ldr	r0, [r3, #0]
 8025e66:	6859      	ldr	r1, [r3, #4]
 8025e68:	ab0e      	add	r3, sp, #56	@ 0x38
 8025e6a:	c303      	stmia	r3!, {r0, r1}
 8025e6c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025e6e:	6818      	ldr	r0, [r3, #0]
 8025e70:	6859      	ldr	r1, [r3, #4]
 8025e72:	ab10      	add	r3, sp, #64	@ 0x40
 8025e74:	c303      	stmia	r3!, {r0, r1}
 8025e76:	a80e      	add	r0, sp, #56	@ 0x38
 8025e78:	f7e6 ff62 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025e7c:	4629      	mov	r1, r5
 8025e7e:	a810      	add	r0, sp, #64	@ 0x40
 8025e80:	f7e6 ff86 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025e84:	f9bd 5040 	ldrsh.w	r5, [sp, #64]	@ 0x40
 8025e88:	f9bd 6042 	ldrsh.w	r6, [sp, #66]	@ 0x42
 8025e8c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8025e90:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8025e94:	488b      	ldr	r0, [pc, #556]	@ (80260c4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 8025e96:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8025e9a:	442a      	add	r2, r5
 8025e9c:	4433      	add	r3, r6
 8025e9e:	6800      	ldr	r0, [r0, #0]
 8025ea0:	fb11 5106 	smlabb	r1, r1, r6, r5
 8025ea4:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8025ea8:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8025eac:	6802      	ldr	r2, [r0, #0]
 8025eae:	4e86      	ldr	r6, [pc, #536]	@ (80260c8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x284>)
 8025eb0:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8025eb4:	448a      	add	sl, r1
 8025eb6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8025eba:	42b3      	cmp	r3, r6
 8025ebc:	910b      	str	r1, [sp, #44]	@ 0x2c
 8025ebe:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8025ec2:	f040 80c8 	bne.w	8026056 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8025ec6:	6841      	ldr	r1, [r0, #4]
 8025ec8:	4e80      	ldr	r6, [pc, #512]	@ (80260cc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x288>)
 8025eca:	680b      	ldr	r3, [r1, #0]
 8025ecc:	699b      	ldr	r3, [r3, #24]
 8025ece:	42b3      	cmp	r3, r6
 8025ed0:	f040 80e4 	bne.w	802609c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x258>
 8025ed4:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8025ed6:	4798      	blx	r3
 8025ed8:	4b7d      	ldr	r3, [pc, #500]	@ (80260d0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8025eda:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8025ede:	881b      	ldrh	r3, [r3, #0]
 8025ee0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8025ee4:	2cff      	cmp	r4, #255	@ 0xff
 8025ee6:	fb03 1202 	mla	r2, r3, r2, r1
 8025eea:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8025eee:	d06f      	beq.n	8025fd0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8025ef0:	43e2      	mvns	r2, r4
 8025ef2:	fb05 f503 	mul.w	r5, r5, r3
 8025ef6:	eb00 0145 	add.w	r1, r0, r5, lsl #1
 8025efa:	4288      	cmp	r0, r1
 8025efc:	910c      	str	r1, [sp, #48]	@ 0x30
 8025efe:	b2d2      	uxtb	r2, r2
 8025f00:	d25e      	bcs.n	8025fc0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 8025f02:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8025f04:	fa1f f884 	uxth.w	r8, r4
 8025f08:	0049      	lsls	r1, r1, #1
 8025f0a:	b292      	uxth	r2, r2
 8025f0c:	910d      	str	r1, [sp, #52]	@ 0x34
 8025f0e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8025f10:	eb00 0b01 	add.w	fp, r0, r1
 8025f14:	4583      	cmp	fp, r0
 8025f16:	d948      	bls.n	8025faa <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x166>
 8025f18:	4684      	mov	ip, r0
 8025f1a:	f10a 3eff 	add.w	lr, sl, #4294967295
 8025f1e:	2103      	movs	r1, #3
 8025f20:	2404      	movs	r4, #4
 8025f22:	f81e 6f01 	ldrb.w	r6, [lr, #1]!
 8025f26:	f8bc 3000 	ldrh.w	r3, [ip]
 8025f2a:	fb11 4606 	smlabb	r6, r1, r6, r4
 8025f2e:	eb09 0106 	add.w	r1, r9, r6
 8025f32:	788d      	ldrb	r5, [r1, #2]
 8025f34:	784f      	ldrb	r7, [r1, #1]
 8025f36:	00dc      	lsls	r4, r3, #3
 8025f38:	b2e4      	uxtb	r4, r4
 8025f3a:	fb14 f402 	smulbb	r4, r4, r2
 8025f3e:	fb15 f508 	smulbb	r5, r5, r8
 8025f42:	fb17 f708 	smulbb	r7, r7, r8
 8025f46:	f819 6006 	ldrb.w	r6, [r9, r6]
 8025f4a:	1219      	asrs	r1, r3, #8
 8025f4c:	10db      	asrs	r3, r3, #3
 8025f4e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025f52:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8025f56:	fb06 4608 	mla	r6, r6, r8, r4
 8025f5a:	fb01 5102 	mla	r1, r1, r2, r5
 8025f5e:	fb03 7302 	mla	r3, r3, r2, r7
 8025f62:	b2b6      	uxth	r6, r6
 8025f64:	b29b      	uxth	r3, r3
 8025f66:	b28d      	uxth	r5, r1
 8025f68:	1c5c      	adds	r4, r3, #1
 8025f6a:	1c69      	adds	r1, r5, #1
 8025f6c:	1c77      	adds	r7, r6, #1
 8025f6e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8025f72:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 8025f76:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8025f7a:	f401 4378 	and.w	r3, r1, #63488	@ 0xf800
 8025f7e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8025f82:	0961      	lsrs	r1, r4, #5
 8025f84:	4333      	orrs	r3, r6
 8025f86:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025f8a:	430b      	orrs	r3, r1
 8025f8c:	f82c 3b02 	strh.w	r3, [ip], #2
 8025f90:	45e3      	cmp	fp, ip
 8025f92:	d8c4      	bhi.n	8025f1e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8025f94:	43c3      	mvns	r3, r0
 8025f96:	449b      	add	fp, r3
 8025f98:	4b4d      	ldr	r3, [pc, #308]	@ (80260d0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8025f9a:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
 8025f9e:	f10b 0b01 	add.w	fp, fp, #1
 8025fa2:	881b      	ldrh	r3, [r3, #0]
 8025fa4:	eb00 004b 	add.w	r0, r0, fp, lsl #1
 8025fa8:	44da      	add	sl, fp
 8025faa:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8025fac:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8025fb0:	1b5c      	subs	r4, r3, r5
 8025fb2:	1b49      	subs	r1, r1, r5
 8025fb4:	448a      	add	sl, r1
 8025fb6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8025fb8:	eb00 0044 	add.w	r0, r0, r4, lsl #1
 8025fbc:	4281      	cmp	r1, r0
 8025fbe:	d8a6      	bhi.n	8025f0e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xca>
 8025fc0:	4b40      	ldr	r3, [pc, #256]	@ (80260c4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 8025fc2:	6818      	ldr	r0, [r3, #0]
 8025fc4:	6803      	ldr	r3, [r0, #0]
 8025fc6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025fc8:	4798      	blx	r3
 8025fca:	b013      	add	sp, #76	@ 0x4c
 8025fcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025fd0:	fb05 f503 	mul.w	r5, r5, r3
 8025fd4:	eb00 0e45 	add.w	lr, r0, r5, lsl #1
 8025fd8:	4570      	cmp	r0, lr
 8025fda:	d2f1      	bcs.n	8025fc0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 8025fdc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025fde:	f04f 0c03 	mov.w	ip, #3
 8025fe2:	2704      	movs	r7, #4
 8025fe4:	4693      	mov	fp, r2
 8025fe6:	0051      	lsls	r1, r2, #1
 8025fe8:	4e3a      	ldr	r6, [pc, #232]	@ (80260d4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 8025fea:	910b      	str	r1, [sp, #44]	@ 0x2c
 8025fec:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025fee:	eb00 0802 	add.w	r8, r0, r2
 8025ff2:	4580      	cmp	r8, r0
 8025ff4:	d923      	bls.n	802603e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1fa>
 8025ff6:	4604      	mov	r4, r0
 8025ff8:	f10a 35ff 	add.w	r5, sl, #4294967295
 8025ffc:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 8026000:	fb1c 7202 	smlabb	r2, ip, r2, r7
 8026004:	eb09 0302 	add.w	r3, r9, r2
 8026008:	7859      	ldrb	r1, [r3, #1]
 802600a:	789b      	ldrb	r3, [r3, #2]
 802600c:	00c9      	lsls	r1, r1, #3
 802600e:	f819 2002 	ldrb.w	r2, [r9, r2]
 8026012:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8026016:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 802601a:	430b      	orrs	r3, r1
 802601c:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8026020:	f824 3b02 	strh.w	r3, [r4], #2
 8026024:	45a0      	cmp	r8, r4
 8026026:	d8e9      	bhi.n	8025ffc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 8026028:	43c3      	mvns	r3, r0
 802602a:	4498      	add	r8, r3
 802602c:	4b28      	ldr	r3, [pc, #160]	@ (80260d0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 802602e:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8026032:	f108 0801 	add.w	r8, r8, #1
 8026036:	881b      	ldrh	r3, [r3, #0]
 8026038:	eb00 0048 	add.w	r0, r0, r8, lsl #1
 802603c:	44c2      	add	sl, r8
 802603e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8026042:	eba3 010b 	sub.w	r1, r3, fp
 8026046:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 802604a:	eba2 020b 	sub.w	r2, r2, fp
 802604e:	4586      	cmp	lr, r0
 8026050:	4492      	add	sl, r2
 8026052:	d8cb      	bhi.n	8025fec <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8026054:	e7b4      	b.n	8025fc0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17c>
 8026056:	4798      	blx	r3
 8026058:	2801      	cmp	r0, #1
 802605a:	d122      	bne.n	80260a2 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x25e>
 802605c:	4b1e      	ldr	r3, [pc, #120]	@ (80260d8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x294>)
 802605e:	6818      	ldr	r0, [r3, #0]
 8026060:	b350      	cbz	r0, 80260b8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8026062:	2600      	movs	r6, #0
 8026064:	270b      	movs	r7, #11
 8026066:	4b1a      	ldr	r3, [pc, #104]	@ (80260d0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8026068:	b2aa      	uxth	r2, r5
 802606a:	881d      	ldrh	r5, [r3, #0]
 802606c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8026070:	9404      	str	r4, [sp, #16]
 8026072:	9506      	str	r5, [sp, #24]
 8026074:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 8026078:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 802607c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8026080:	4651      	mov	r1, sl
 8026082:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8026086:	464a      	mov	r2, r9
 8026088:	9608      	str	r6, [sp, #32]
 802608a:	9605      	str	r6, [sp, #20]
 802608c:	9707      	str	r7, [sp, #28]
 802608e:	9503      	str	r5, [sp, #12]
 8026090:	9400      	str	r4, [sp, #0]
 8026092:	f7fa fdc9 	bl	8020c28 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8026096:	b013      	add	sp, #76	@ 0x4c
 8026098:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802609c:	4608      	mov	r0, r1
 802609e:	4798      	blx	r3
 80260a0:	e7da      	b.n	8026058 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x214>
 80260a2:	4b08      	ldr	r3, [pc, #32]	@ (80260c4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x280>)
 80260a4:	6818      	ldr	r0, [r3, #0]
 80260a6:	6802      	ldr	r2, [r0, #0]
 80260a8:	e714      	b.n	8025ed4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x90>
 80260aa:	4b0c      	ldr	r3, [pc, #48]	@ (80260dc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>)
 80260ac:	4a0c      	ldr	r2, [pc, #48]	@ (80260e0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x29c>)
 80260ae:	f240 61d9 	movw	r1, #1753	@ 0x6d9
 80260b2:	480c      	ldr	r0, [pc, #48]	@ (80260e4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a0>)
 80260b4:	f00c fa20 	bl	80324f8 <__assert_func>
 80260b8:	4b0b      	ldr	r3, [pc, #44]	@ (80260e8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a4>)
 80260ba:	4a0c      	ldr	r2, [pc, #48]	@ (80260ec <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2a8>)
 80260bc:	217c      	movs	r1, #124	@ 0x7c
 80260be:	480c      	ldr	r0, [pc, #48]	@ (80260f0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 80260c0:	f00c fa1a 	bl	80324f8 <__assert_func>
 80260c4:	20082f08 	.word	0x20082f08
 80260c8:	0800121d 	.word	0x0800121d
 80260cc:	0800bae5 	.word	0x0800bae5
 80260d0:	20082f02 	.word	0x20082f02
 80260d4:	fffff800 	.word	0xfffff800
 80260d8:	200833a8 	.word	0x200833a8
 80260dc:	08036304 	.word	0x08036304
 80260e0:	08036f40 	.word	0x08036f40
 80260e4:	080362e0 	.word	0x080362e0
 80260e8:	0803623c 	.word	0x0803623c
 80260ec:	08036aa8 	.word	0x08036aa8
 80260f0:	08036264 	.word	0x08036264

080260f4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80260f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80260f8:	4693      	mov	fp, r2
 80260fa:	7812      	ldrb	r2, [r2, #0]
 80260fc:	b08d      	sub	sp, #52	@ 0x34
 80260fe:	2a01      	cmp	r2, #1
 8026100:	f89d 705c 	ldrb.w	r7, [sp, #92]	@ 0x5c
 8026104:	f040 8252 	bne.w	80265ac <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4b8>
 8026108:	b917      	cbnz	r7, 8026110 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1c>
 802610a:	b00d      	add	sp, #52	@ 0x34
 802610c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026110:	461e      	mov	r6, r3
 8026112:	6818      	ldr	r0, [r3, #0]
 8026114:	460c      	mov	r4, r1
 8026116:	6859      	ldr	r1, [r3, #4]
 8026118:	ab08      	add	r3, sp, #32
 802611a:	c303      	stmia	r3!, {r0, r1}
 802611c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802611e:	f10b 0b04 	add.w	fp, fp, #4
 8026122:	6818      	ldr	r0, [r3, #0]
 8026124:	6859      	ldr	r1, [r3, #4]
 8026126:	ab0a      	add	r3, sp, #40	@ 0x28
 8026128:	c303      	stmia	r3!, {r0, r1}
 802612a:	a808      	add	r0, sp, #32
 802612c:	f7e6 fe08 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026130:	4631      	mov	r1, r6
 8026132:	a80a      	add	r0, sp, #40	@ 0x28
 8026134:	f7e6 fe2c 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026138:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802613c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8026140:	f003 0201 	and.w	r2, r3, #1
 8026144:	4615      	mov	r5, r2
 8026146:	9204      	str	r2, [sp, #16]
 8026148:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 802614c:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 8026150:	442b      	add	r3, r5
 8026152:	fb02 1303 	mla	r3, r2, r3, r1
 8026156:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 802615a:	4402      	add	r2, r0
 802615c:	48b9      	ldr	r0, [pc, #740]	@ (8026444 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x350>)
 802615e:	440e      	add	r6, r1
 8026160:	6800      	ldr	r0, [r0, #0]
 8026162:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8026166:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 802616a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802616e:	eb04 0363 	add.w	r3, r4, r3, asr #1
 8026172:	6802      	ldr	r2, [r0, #0]
 8026174:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	@ 0x2c
 8026178:	9301      	str	r3, [sp, #4]
 802617a:	f001 0301 	and.w	r3, r1, #1
 802617e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8026180:	9303      	str	r3, [sp, #12]
 8026182:	9502      	str	r5, [sp, #8]
 8026184:	f9bd 402e 	ldrsh.w	r4, [sp, #46]	@ 0x2e
 8026188:	4790      	blx	r2
 802618a:	4baf      	ldr	r3, [pc, #700]	@ (8026448 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 802618c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8026190:	881b      	ldrh	r3, [r3, #0]
 8026192:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8026196:	2fff      	cmp	r7, #255	@ 0xff
 8026198:	fb03 1202 	mla	r2, r3, r2, r1
 802619c:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 80261a0:	f000 8154 	beq.w	802644c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x358>
 80261a4:	ea6f 0c07 	mvn.w	ip, r7
 80261a8:	fb03 f404 	mul.w	r4, r3, r4
 80261ac:	eb0a 0344 	add.w	r3, sl, r4, lsl #1
 80261b0:	459a      	cmp	sl, r3
 80261b2:	9306      	str	r3, [sp, #24]
 80261b4:	fa5f fc8c 	uxtb.w	ip, ip
 80261b8:	f080 80b6 	bcs.w	8026328 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 80261bc:	1e6b      	subs	r3, r5, #1
 80261be:	b2bf      	uxth	r7, r7
 80261c0:	fa1f fc8c 	uxth.w	ip, ip
 80261c4:	9307      	str	r3, [sp, #28]
 80261c6:	9b03      	ldr	r3, [sp, #12]
 80261c8:	2b00      	cmp	r3, #0
 80261ca:	f040 80fc 	bne.w	80263c6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 80261ce:	9b01      	ldr	r3, [sp, #4]
 80261d0:	f8dd 9008 	ldr.w	r9, [sp, #8]
 80261d4:	9300      	str	r3, [sp, #0]
 80261d6:	f1b9 0f01 	cmp.w	r9, #1
 80261da:	f340 808e 	ble.w	80262fa <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x206>
 80261de:	f1a9 0302 	sub.w	r3, r9, #2
 80261e2:	ea4f 0953 	mov.w	r9, r3, lsr #1
 80261e6:	9305      	str	r3, [sp, #20]
 80261e8:	9b00      	ldr	r3, [sp, #0]
 80261ea:	f10a 0808 	add.w	r8, sl, #8
 80261ee:	eb08 0889 	add.w	r8, r8, r9, lsl #2
 80261f2:	f10a 0604 	add.w	r6, sl, #4
 80261f6:	f103 3eff 	add.w	lr, r3, #4294967295
 80261fa:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
 80261fe:	f836 3c04 	ldrh.w	r3, [r6, #-4]
 8026202:	0909      	lsrs	r1, r1, #4
 8026204:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026208:	eb0b 0001 	add.w	r0, fp, r1
 802620c:	7882      	ldrb	r2, [r0, #2]
 802620e:	7844      	ldrb	r4, [r0, #1]
 8026210:	00dd      	lsls	r5, r3, #3
 8026212:	b2ed      	uxtb	r5, r5
 8026214:	fb12 f207 	smulbb	r2, r2, r7
 8026218:	fb15 f50c 	smulbb	r5, r5, ip
 802621c:	fb14 f407 	smulbb	r4, r4, r7
 8026220:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8026224:	1218      	asrs	r0, r3, #8
 8026226:	10db      	asrs	r3, r3, #3
 8026228:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802622c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8026230:	fb00 200c 	mla	r0, r0, ip, r2
 8026234:	fb01 5507 	mla	r5, r1, r7, r5
 8026238:	fb03 440c 	mla	r4, r3, ip, r4
 802623c:	b281      	uxth	r1, r0
 802623e:	b2ad      	uxth	r5, r5
 8026240:	b2a4      	uxth	r4, r4
 8026242:	1c68      	adds	r0, r5, #1
 8026244:	1c4b      	adds	r3, r1, #1
 8026246:	1c62      	adds	r2, r4, #1
 8026248:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802624c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8026250:	eb00 2115 	add.w	r1, r0, r5, lsr #8
 8026254:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026258:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802625c:	0952      	lsrs	r2, r2, #5
 802625e:	430b      	orrs	r3, r1
 8026260:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026264:	4313      	orrs	r3, r2
 8026266:	f826 3c04 	strh.w	r3, [r6, #-4]
 802626a:	f89e 1000 	ldrb.w	r1, [lr]
 802626e:	f836 3c02 	ldrh.w	r3, [r6, #-2]
 8026272:	f001 010f 	and.w	r1, r1, #15
 8026276:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802627a:	eb0b 0001 	add.w	r0, fp, r1
 802627e:	7882      	ldrb	r2, [r0, #2]
 8026280:	00dd      	lsls	r5, r3, #3
 8026282:	7840      	ldrb	r0, [r0, #1]
 8026284:	b2ed      	uxtb	r5, r5
 8026286:	fb12 f207 	smulbb	r2, r2, r7
 802628a:	fb10 f007 	smulbb	r0, r0, r7
 802628e:	fb15 f50c 	smulbb	r5, r5, ip
 8026292:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8026296:	121c      	asrs	r4, r3, #8
 8026298:	10db      	asrs	r3, r3, #3
 802629a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802629e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80262a2:	fb04 240c 	mla	r4, r4, ip, r2
 80262a6:	fb01 5507 	mla	r5, r1, r7, r5
 80262aa:	fb03 020c 	mla	r2, r3, ip, r0
 80262ae:	b2a1      	uxth	r1, r4
 80262b0:	b2ad      	uxth	r5, r5
 80262b2:	b290      	uxth	r0, r2
 80262b4:	1c4b      	adds	r3, r1, #1
 80262b6:	1c6c      	adds	r4, r5, #1
 80262b8:	1c42      	adds	r2, r0, #1
 80262ba:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80262be:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80262c2:	eb04 2115 	add.w	r1, r4, r5, lsr #8
 80262c6:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80262ca:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80262ce:	0952      	lsrs	r2, r2, #5
 80262d0:	430b      	orrs	r3, r1
 80262d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80262d6:	4313      	orrs	r3, r2
 80262d8:	f826 3c02 	strh.w	r3, [r6, #-2]
 80262dc:	3604      	adds	r6, #4
 80262de:	45b0      	cmp	r8, r6
 80262e0:	d18b      	bne.n	80261fa <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x106>
 80262e2:	9a00      	ldr	r2, [sp, #0]
 80262e4:	f109 0301 	add.w	r3, r9, #1
 80262e8:	441a      	add	r2, r3
 80262ea:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 80262ee:	9b05      	ldr	r3, [sp, #20]
 80262f0:	ebc9 79c9 	rsb	r9, r9, r9, lsl #31
 80262f4:	9200      	str	r2, [sp, #0]
 80262f6:	eb03 0949 	add.w	r9, r3, r9, lsl #1
 80262fa:	f1b9 0f01 	cmp.w	r9, #1
 80262fe:	d01b      	beq.n	8026338 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8026300:	9904      	ldr	r1, [sp, #16]
 8026302:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8026306:	4a50      	ldr	r2, [pc, #320]	@ (8026448 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 8026308:	440b      	add	r3, r1
 802630a:	8812      	ldrh	r2, [r2, #0]
 802630c:	9902      	ldr	r1, [sp, #8]
 802630e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026312:	1a52      	subs	r2, r2, r1
 8026314:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8026318:	9a01      	ldr	r2, [sp, #4]
 802631a:	eb02 0363 	add.w	r3, r2, r3, asr #1
 802631e:	9301      	str	r3, [sp, #4]
 8026320:	9b06      	ldr	r3, [sp, #24]
 8026322:	4553      	cmp	r3, sl
 8026324:	f63f af4f 	bhi.w	80261c6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xd2>
 8026328:	4b46      	ldr	r3, [pc, #280]	@ (8026444 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x350>)
 802632a:	6818      	ldr	r0, [r3, #0]
 802632c:	6803      	ldr	r3, [r0, #0]
 802632e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026330:	4798      	blx	r3
 8026332:	b00d      	add	sp, #52	@ 0x34
 8026334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026338:	9b00      	ldr	r3, [sp, #0]
 802633a:	781e      	ldrb	r6, [r3, #0]
 802633c:	f8ba 3000 	ldrh.w	r3, [sl]
 8026340:	0936      	lsrs	r6, r6, #4
 8026342:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8026346:	eb0b 0006 	add.w	r0, fp, r6
 802634a:	7881      	ldrb	r1, [r0, #2]
 802634c:	7845      	ldrb	r5, [r0, #1]
 802634e:	00dc      	lsls	r4, r3, #3
 8026350:	b2e4      	uxtb	r4, r4
 8026352:	fb14 f40c 	smulbb	r4, r4, ip
 8026356:	fb11 f107 	smulbb	r1, r1, r7
 802635a:	fb15 f507 	smulbb	r5, r5, r7
 802635e:	f81b 0006 	ldrb.w	r0, [fp, r6]
 8026362:	121a      	asrs	r2, r3, #8
 8026364:	10db      	asrs	r3, r3, #3
 8026366:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802636a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802636e:	fb00 4007 	mla	r0, r0, r7, r4
 8026372:	fb02 120c 	mla	r2, r2, ip, r1
 8026376:	fb03 530c 	mla	r3, r3, ip, r5
 802637a:	b291      	uxth	r1, r2
 802637c:	b29b      	uxth	r3, r3
 802637e:	b280      	uxth	r0, r0
 8026380:	1c4a      	adds	r2, r1, #1
 8026382:	1c5d      	adds	r5, r3, #1
 8026384:	1c44      	adds	r4, r0, #1
 8026386:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802638a:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 802638e:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 8026392:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026396:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 802639a:	094a      	lsrs	r2, r1, #5
 802639c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80263a0:	4303      	orrs	r3, r0
 80263a2:	4313      	orrs	r3, r2
 80263a4:	f8aa 3000 	strh.w	r3, [sl]
 80263a8:	4b27      	ldr	r3, [pc, #156]	@ (8026448 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x354>)
 80263aa:	9902      	ldr	r1, [sp, #8]
 80263ac:	881a      	ldrh	r2, [r3, #0]
 80263ae:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80263b2:	1a52      	subs	r2, r2, r1
 80263b4:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 80263b8:	9a04      	ldr	r2, [sp, #16]
 80263ba:	f10a 0a02 	add.w	sl, sl, #2
 80263be:	4413      	add	r3, r2
 80263c0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80263c4:	e7a8      	b.n	8026318 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x224>
 80263c6:	9b01      	ldr	r3, [sp, #4]
 80263c8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80263cc:	781e      	ldrb	r6, [r3, #0]
 80263ce:	f8ba 3000 	ldrh.w	r3, [sl]
 80263d2:	f006 060f 	and.w	r6, r6, #15
 80263d6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80263da:	eb0b 0006 	add.w	r0, fp, r6
 80263de:	7881      	ldrb	r1, [r0, #2]
 80263e0:	7845      	ldrb	r5, [r0, #1]
 80263e2:	00dc      	lsls	r4, r3, #3
 80263e4:	b2e4      	uxtb	r4, r4
 80263e6:	fb14 f40c 	smulbb	r4, r4, ip
 80263ea:	fb11 f107 	smulbb	r1, r1, r7
 80263ee:	fb15 f507 	smulbb	r5, r5, r7
 80263f2:	f81b 0006 	ldrb.w	r0, [fp, r6]
 80263f6:	121a      	asrs	r2, r3, #8
 80263f8:	10db      	asrs	r3, r3, #3
 80263fa:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80263fe:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8026402:	fb00 4007 	mla	r0, r0, r7, r4
 8026406:	fb02 120c 	mla	r2, r2, ip, r1
 802640a:	fb03 530c 	mla	r3, r3, ip, r5
 802640e:	b291      	uxth	r1, r2
 8026410:	b29b      	uxth	r3, r3
 8026412:	b280      	uxth	r0, r0
 8026414:	1c4a      	adds	r2, r1, #1
 8026416:	1c5d      	adds	r5, r3, #1
 8026418:	1c44      	adds	r4, r0, #1
 802641a:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802641e:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 8026422:	eb05 2113 	add.w	r1, r5, r3, lsr #8
 8026426:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802642a:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 802642e:	094a      	lsrs	r2, r1, #5
 8026430:	4303      	orrs	r3, r0
 8026432:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026436:	4313      	orrs	r3, r2
 8026438:	f82a 3b02 	strh.w	r3, [sl], #2
 802643c:	9b01      	ldr	r3, [sp, #4]
 802643e:	3301      	adds	r3, #1
 8026440:	9300      	str	r3, [sp, #0]
 8026442:	e6c8      	b.n	80261d6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xe2>
 8026444:	20082f08 	.word	0x20082f08
 8026448:	20082f02 	.word	0x20082f02
 802644c:	fb03 f304 	mul.w	r3, r3, r4
 8026450:	eb0a 0843 	add.w	r8, sl, r3, lsl #1
 8026454:	45c2      	cmp	sl, r8
 8026456:	f4bf af67 	bcs.w	8026328 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 802645a:	9b02      	ldr	r3, [sp, #8]
 802645c:	4f57      	ldr	r7, [pc, #348]	@ (80265bc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4c8>)
 802645e:	3b01      	subs	r3, #1
 8026460:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8026464:	9300      	str	r3, [sp, #0]
 8026466:	9b03      	ldr	r3, [sp, #12]
 8026468:	2b00      	cmp	r3, #0
 802646a:	f000 808a 	beq.w	8026582 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x48e>
 802646e:	f899 2000 	ldrb.w	r2, [r9]
 8026472:	9e00      	ldr	r6, [sp, #0]
 8026474:	f002 020f 	and.w	r2, r2, #15
 8026478:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802647c:	eb0b 0302 	add.w	r3, fp, r2
 8026480:	7859      	ldrb	r1, [r3, #1]
 8026482:	789b      	ldrb	r3, [r3, #2]
 8026484:	00c9      	lsls	r1, r1, #3
 8026486:	f81b 0002 	ldrb.w	r0, [fp, r2]
 802648a:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 802648e:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 8026492:	4313      	orrs	r3, r2
 8026494:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 8026498:	f109 0e01 	add.w	lr, r9, #1
 802649c:	f82a 3b02 	strh.w	r3, [sl], #2
 80264a0:	2e01      	cmp	r6, #1
 80264a2:	dd40      	ble.n	8026526 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x432>
 80264a4:	3e02      	subs	r6, #2
 80264a6:	ea4f 0c56 	mov.w	ip, r6, lsr #1
 80264aa:	f10a 0508 	add.w	r5, sl, #8
 80264ae:	eb05 058c 	add.w	r5, r5, ip, lsl #2
 80264b2:	f10a 0004 	add.w	r0, sl, #4
 80264b6:	f10e 34ff 	add.w	r4, lr, #4294967295
 80264ba:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 80264be:	3004      	adds	r0, #4
 80264c0:	0912      	lsrs	r2, r2, #4
 80264c2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80264c6:	eb0b 0302 	add.w	r3, fp, r2
 80264ca:	7859      	ldrb	r1, [r3, #1]
 80264cc:	789b      	ldrb	r3, [r3, #2]
 80264ce:	00c9      	lsls	r1, r1, #3
 80264d0:	f81b 2002 	ldrb.w	r2, [fp, r2]
 80264d4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80264d8:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 80264dc:	430b      	orrs	r3, r1
 80264de:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 80264e2:	f820 3c08 	strh.w	r3, [r0, #-8]
 80264e6:	7822      	ldrb	r2, [r4, #0]
 80264e8:	f002 020f 	and.w	r2, r2, #15
 80264ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80264f0:	eb0b 0302 	add.w	r3, fp, r2
 80264f4:	7859      	ldrb	r1, [r3, #1]
 80264f6:	789b      	ldrb	r3, [r3, #2]
 80264f8:	00c9      	lsls	r1, r1, #3
 80264fa:	f81b 2002 	ldrb.w	r2, [fp, r2]
 80264fe:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8026502:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 8026506:	430b      	orrs	r3, r1
 8026508:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 802650c:	f820 3c06 	strh.w	r3, [r0, #-6]
 8026510:	4285      	cmp	r5, r0
 8026512:	d1d2      	bne.n	80264ba <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c6>
 8026514:	f10c 0301 	add.w	r3, ip, #1
 8026518:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 802651c:	449e      	add	lr, r3
 802651e:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 8026522:	eb06 064c 	add.w	r6, r6, ip, lsl #1
 8026526:	2e01      	cmp	r6, #1
 8026528:	d12e      	bne.n	8026588 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x494>
 802652a:	f89e 2000 	ldrb.w	r2, [lr]
 802652e:	0912      	lsrs	r2, r2, #4
 8026530:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026534:	eb0b 0302 	add.w	r3, fp, r2
 8026538:	7859      	ldrb	r1, [r3, #1]
 802653a:	789b      	ldrb	r3, [r3, #2]
 802653c:	00c9      	lsls	r1, r1, #3
 802653e:	f81b 0002 	ldrb.w	r0, [fp, r2]
 8026542:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 8026546:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 802654a:	4313      	orrs	r3, r2
 802654c:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 8026550:	f8aa 3000 	strh.w	r3, [sl]
 8026554:	4b1a      	ldr	r3, [pc, #104]	@ (80265c0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4cc>)
 8026556:	9902      	ldr	r1, [sp, #8]
 8026558:	881a      	ldrh	r2, [r3, #0]
 802655a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802655e:	1a52      	subs	r2, r2, r1
 8026560:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 8026564:	9a04      	ldr	r2, [sp, #16]
 8026566:	f10a 0a02 	add.w	sl, sl, #2
 802656a:	4413      	add	r3, r2
 802656c:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026570:	45d0      	cmp	r8, sl
 8026572:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8026576:	f67f aed7 	bls.w	8026328 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 802657a:	9b03      	ldr	r3, [sp, #12]
 802657c:	2b00      	cmp	r3, #0
 802657e:	f47f af76 	bne.w	802646e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x37a>
 8026582:	46ce      	mov	lr, r9
 8026584:	9e02      	ldr	r6, [sp, #8]
 8026586:	e78b      	b.n	80264a0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ac>
 8026588:	9904      	ldr	r1, [sp, #16]
 802658a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802658e:	4a0c      	ldr	r2, [pc, #48]	@ (80265c0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4cc>)
 8026590:	440b      	add	r3, r1
 8026592:	8812      	ldrh	r2, [r2, #0]
 8026594:	9902      	ldr	r1, [sp, #8]
 8026596:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 802659a:	1a52      	subs	r2, r2, r1
 802659c:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 80265a0:	45d0      	cmp	r8, sl
 80265a2:	eb09 0963 	add.w	r9, r9, r3, asr #1
 80265a6:	f63f af5e 	bhi.w	8026466 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x372>
 80265aa:	e6bd      	b.n	8026328 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x234>
 80265ac:	4b05      	ldr	r3, [pc, #20]	@ (80265c4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d0>)
 80265ae:	4a06      	ldr	r2, [pc, #24]	@ (80265c8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d4>)
 80265b0:	f44f 61e9 	mov.w	r1, #1864	@ 0x748
 80265b4:	4805      	ldr	r0, [pc, #20]	@ (80265cc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x4d8>)
 80265b6:	f00b ff9f 	bl	80324f8 <__assert_func>
 80265ba:	bf00      	nop
 80265bc:	fffff800 	.word	0xfffff800
 80265c0:	20082f02 	.word	0x20082f02
 80265c4:	080363a4 	.word	0x080363a4
 80265c8:	0803727c 	.word	0x0803727c
 80265cc:	080362e0 	.word	0x080362e0

080265d0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 80265d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80265d4:	b08f      	sub	sp, #60	@ 0x3c
 80265d6:	7814      	ldrb	r4, [r2, #0]
 80265d8:	461d      	mov	r5, r3
 80265da:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 80265de:	2c01      	cmp	r4, #1
 80265e0:	9206      	str	r2, [sp, #24]
 80265e2:	9101      	str	r1, [sp, #4]
 80265e4:	9304      	str	r3, [sp, #16]
 80265e6:	f040 8142 	bne.w	802686e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 80265ea:	b913      	cbnz	r3, 80265f2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 80265ec:	b00f      	add	sp, #60	@ 0x3c
 80265ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80265f2:	6828      	ldr	r0, [r5, #0]
 80265f4:	6869      	ldr	r1, [r5, #4]
 80265f6:	ab0a      	add	r3, sp, #40	@ 0x28
 80265f8:	c303      	stmia	r3!, {r0, r1}
 80265fa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80265fc:	6818      	ldr	r0, [r3, #0]
 80265fe:	6859      	ldr	r1, [r3, #4]
 8026600:	ab0c      	add	r3, sp, #48	@ 0x30
 8026602:	c303      	stmia	r3!, {r0, r1}
 8026604:	a80a      	add	r0, sp, #40	@ 0x28
 8026606:	f7e6 fb9b 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802660a:	4629      	mov	r1, r5
 802660c:	a80c      	add	r0, sp, #48	@ 0x30
 802660e:	f7e6 fbbf 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026612:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8026616:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 802661a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 802661e:	bfdd      	ittte	le
 8026620:	f44f 6480 	movle.w	r4, #1024	@ 0x400
 8026624:	b29a      	uxthle	r2, r3
 8026626:	fb94 f4f2 	sdivle	r4, r4, r2
 802662a:	b29a      	uxthgt	r2, r3
 802662c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8026630:	fb93 f0f4 	sdiv	r0, r3, r4
 8026634:	b285      	uxth	r5, r0
 8026636:	fb04 3c15 	mls	ip, r4, r5, r3
 802663a:	fb1c 1c02 	smlabb	ip, ip, r2, r1
 802663e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8026642:	fa1f fb8c 	uxth.w	fp, ip
 8026646:	4422      	add	r2, r4
 8026648:	3a01      	subs	r2, #1
 802664a:	fb92 f4f4 	sdiv	r4, r2, r4
 802664e:	2d00      	cmp	r5, #0
 8026650:	f040 8105 	bne.w	802685e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x28e>
 8026654:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8026658:	f8bd 0028 	ldrh.w	r0, [sp, #40]	@ 0x28
 802665c:	4413      	add	r3, r2
 802665e:	4a87      	ldr	r2, [pc, #540]	@ (802687c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 8026660:	4401      	add	r1, r0
 8026662:	6810      	ldr	r0, [r2, #0]
 8026664:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8026668:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 802666c:	4616      	mov	r6, r2
 802666e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8026672:	6803      	ldr	r3, [r0, #0]
 8026674:	9209      	str	r2, [sp, #36]	@ 0x24
 8026676:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8026678:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 802667c:	4798      	blx	r3
 802667e:	9f04      	ldr	r7, [sp, #16]
 8026680:	f1bb 0f00 	cmp.w	fp, #0
 8026684:	bf0c      	ite	eq
 8026686:	4633      	moveq	r3, r6
 8026688:	2300      	movne	r3, #0
 802668a:	ea6f 0807 	mvn.w	r8, r7
 802668e:	497c      	ldr	r1, [pc, #496]	@ (8026880 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b0>)
 8026690:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8026694:	8809      	ldrh	r1, [r1, #0]
 8026696:	f9bd 6030 	ldrsh.w	r6, [sp, #48]	@ 0x30
 802669a:	fb01 f505 	mul.w	r5, r1, r5
 802669e:	fb01 6202 	mla	r2, r1, r2, r6
 80266a2:	b2a4      	uxth	r4, r4
 80266a4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80266a8:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80266ac:	00a4      	lsls	r4, r4, #2
 80266ae:	1d21      	adds	r1, r4, #4
 80266b0:	4290      	cmp	r0, r2
 80266b2:	9202      	str	r2, [sp, #8]
 80266b4:	9108      	str	r1, [sp, #32]
 80266b6:	fa1f fa83 	uxth.w	sl, r3
 80266ba:	fa5f f888 	uxtb.w	r8, r8
 80266be:	d228      	bcs.n	8026712 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x142>
 80266c0:	2300      	movs	r3, #0
 80266c2:	469c      	mov	ip, r3
 80266c4:	9303      	str	r3, [sp, #12]
 80266c6:	fa1f f888 	uxth.w	r8, r8
 80266ca:	fa1f f987 	uxth.w	r9, r7
 80266ce:	f1bc 0f00 	cmp.w	ip, #0
 80266d2:	d10f      	bne.n	80266f4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x124>
 80266d4:	9901      	ldr	r1, [sp, #4]
 80266d6:	780a      	ldrb	r2, [r1, #0]
 80266d8:	ea4f 1c92 	mov.w	ip, r2, lsr #6
 80266dc:	f10c 33ff 	add.w	r3, ip, #4294967295
 80266e0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80266e4:	2b02      	cmp	r3, #2
 80266e6:	9203      	str	r2, [sp, #12]
 80266e8:	f200 80b3 	bhi.w	8026852 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x282>
 80266ec:	3101      	adds	r1, #1
 80266ee:	9101      	str	r1, [sp, #4]
 80266f0:	fa1f fc8c 	uxth.w	ip, ip
 80266f4:	f1bb 0f00 	cmp.w	fp, #0
 80266f8:	d013      	beq.n	8026722 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x152>
 80266fa:	45dc      	cmp	ip, fp
 80266fc:	f080 80a0 	bcs.w	8026840 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x270>
 8026700:	ebab 0c0c 	sub.w	ip, fp, ip
 8026704:	fa1f fb8c 	uxth.w	fp, ip
 8026708:	f04f 0c00 	mov.w	ip, #0
 802670c:	9b02      	ldr	r3, [sp, #8]
 802670e:	4283      	cmp	r3, r0
 8026710:	d8dd      	bhi.n	80266ce <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0xfe>
 8026712:	4b5a      	ldr	r3, [pc, #360]	@ (802687c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2ac>)
 8026714:	6818      	ldr	r0, [r3, #0]
 8026716:	6803      	ldr	r3, [r0, #0]
 8026718:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802671a:	4798      	blx	r3
 802671c:	b00f      	add	sp, #60	@ 0x3c
 802671e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026722:	2303      	movs	r3, #3
 8026724:	4619      	mov	r1, r3
 8026726:	9a08      	ldr	r2, [sp, #32]
 8026728:	9b03      	ldr	r3, [sp, #12]
 802672a:	45d4      	cmp	ip, sl
 802672c:	fb11 2703 	smlabb	r7, r1, r3, r2
 8026730:	9b06      	ldr	r3, [sp, #24]
 8026732:	441f      	add	r7, r3
 8026734:	d362      	bcc.n	80267fc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 8026736:	ebac 030a 	sub.w	r3, ip, sl
 802673a:	b29b      	uxth	r3, r3
 802673c:	9305      	str	r3, [sp, #20]
 802673e:	9b04      	ldr	r3, [sp, #16]
 8026740:	4654      	mov	r4, sl
 8026742:	2bff      	cmp	r3, #255	@ 0xff
 8026744:	f8cd b01c 	str.w	fp, [sp, #28]
 8026748:	d062      	beq.n	8026810 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x240>
 802674a:	2c00      	cmp	r4, #0
 802674c:	d038      	beq.n	80267c0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 802674e:	f104 3eff 	add.w	lr, r4, #4294967295
 8026752:	fa1f fe8e 	uxth.w	lr, lr
 8026756:	f10e 0e01 	add.w	lr, lr, #1
 802675a:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 802675e:	8802      	ldrh	r2, [r0, #0]
 8026760:	78bd      	ldrb	r5, [r7, #2]
 8026762:	00d4      	lsls	r4, r2, #3
 8026764:	7879      	ldrb	r1, [r7, #1]
 8026766:	b2e4      	uxtb	r4, r4
 8026768:	fb14 f408 	smulbb	r4, r4, r8
 802676c:	fb15 f509 	smulbb	r5, r5, r9
 8026770:	fb11 f109 	smulbb	r1, r1, r9
 8026774:	783e      	ldrb	r6, [r7, #0]
 8026776:	1213      	asrs	r3, r2, #8
 8026778:	10d2      	asrs	r2, r2, #3
 802677a:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802677e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8026782:	fb06 4409 	mla	r4, r6, r9, r4
 8026786:	fb03 5308 	mla	r3, r3, r8, r5
 802678a:	fb02 1208 	mla	r2, r2, r8, r1
 802678e:	b2a4      	uxth	r4, r4
 8026790:	b291      	uxth	r1, r2
 8026792:	b29d      	uxth	r5, r3
 8026794:	1c62      	adds	r2, r4, #1
 8026796:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802679a:	1c6b      	adds	r3, r5, #1
 802679c:	1c4a      	adds	r2, r1, #1
 802679e:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80267a2:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80267a6:	f3c4 21c4 	ubfx	r1, r4, #11, #5
 80267aa:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80267ae:	0952      	lsrs	r2, r2, #5
 80267b0:	430b      	orrs	r3, r1
 80267b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80267b6:	4313      	orrs	r3, r2
 80267b8:	f820 3b02 	strh.w	r3, [r0], #2
 80267bc:	4570      	cmp	r0, lr
 80267be:	d1ce      	bne.n	802675e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18e>
 80267c0:	45d4      	cmp	ip, sl
 80267c2:	d316      	bcc.n	80267f2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x222>
 80267c4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80267c6:	f8bd b02c 	ldrh.w	fp, [sp, #44]	@ 0x2c
 80267ca:	4b2d      	ldr	r3, [pc, #180]	@ (8026880 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b0>)
 80267cc:	fa1f fa82 	uxth.w	sl, r2
 80267d0:	ebab 0b0a 	sub.w	fp, fp, sl
 80267d4:	881b      	ldrh	r3, [r3, #0]
 80267d6:	fa1f fb8b 	uxth.w	fp, fp
 80267da:	f1bb 0f00 	cmp.w	fp, #0
 80267de:	eba3 0302 	sub.w	r3, r3, r2
 80267e2:	f8dd c014 	ldr.w	ip, [sp, #20]
 80267e6:	bf18      	it	ne
 80267e8:	f04f 0a00 	movne.w	sl, #0
 80267ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80267f0:	e78c      	b.n	802670c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 80267f2:	f8dd c014 	ldr.w	ip, [sp, #20]
 80267f6:	f8dd a01c 	ldr.w	sl, [sp, #28]
 80267fa:	e787      	b.n	802670c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 80267fc:	ebaa 020c 	sub.w	r2, sl, ip
 8026800:	b293      	uxth	r3, r2
 8026802:	9307      	str	r3, [sp, #28]
 8026804:	9b04      	ldr	r3, [sp, #16]
 8026806:	4664      	mov	r4, ip
 8026808:	2bff      	cmp	r3, #255	@ 0xff
 802680a:	f8cd b014 	str.w	fp, [sp, #20]
 802680e:	d19c      	bne.n	802674a <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8026810:	2c00      	cmp	r4, #0
 8026812:	d0d5      	beq.n	80267c0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 8026814:	3c01      	subs	r4, #1
 8026816:	b2a4      	uxth	r4, r4
 8026818:	3401      	adds	r4, #1
 802681a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802681e:	787a      	ldrb	r2, [r7, #1]
 8026820:	78bb      	ldrb	r3, [r7, #2]
 8026822:	4918      	ldr	r1, [pc, #96]	@ (8026884 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b4>)
 8026824:	00d2      	lsls	r2, r2, #3
 8026826:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 802682a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802682e:	7839      	ldrb	r1, [r7, #0]
 8026830:	4313      	orrs	r3, r2
 8026832:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8026836:	f820 3b02 	strh.w	r3, [r0], #2
 802683a:	42a0      	cmp	r0, r4
 802683c:	d1ef      	bne.n	802681e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x24e>
 802683e:	e7bf      	b.n	80267c0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1f0>
 8026840:	ebac 0c0b 	sub.w	ip, ip, fp
 8026844:	fa1f fc8c 	uxth.w	ip, ip
 8026848:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 802684c:	f04f 0b00 	mov.w	fp, #0
 8026850:	e75c      	b.n	802670c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026852:	460b      	mov	r3, r1
 8026854:	3302      	adds	r3, #2
 8026856:	f891 c001 	ldrb.w	ip, [r1, #1]
 802685a:	9301      	str	r3, [sp, #4]
 802685c:	e74a      	b.n	80266f4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x124>
 802685e:	9a06      	ldr	r2, [sp, #24]
 8026860:	9801      	ldr	r0, [sp, #4]
 8026862:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 8026866:	ba12      	rev	r2, r2
 8026868:	4410      	add	r0, r2
 802686a:	9001      	str	r0, [sp, #4]
 802686c:	e6f2      	b.n	8026654 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x84>
 802686e:	4b06      	ldr	r3, [pc, #24]	@ (8026888 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2b8>)
 8026870:	4a06      	ldr	r2, [pc, #24]	@ (802688c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2bc>)
 8026872:	f240 71c2 	movw	r1, #1986	@ 0x7c2
 8026876:	4806      	ldr	r0, [pc, #24]	@ (8026890 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 8026878:	f00b fe3e 	bl	80324f8 <__assert_func>
 802687c:	20082f08 	.word	0x20082f08
 8026880:	20082f02 	.word	0x20082f02
 8026884:	fffff800 	.word	0xfffff800
 8026888:	080363a4 	.word	0x080363a4
 802688c:	08037420 	.word	0x08037420
 8026890:	080362e0 	.word	0x080362e0

08026894 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>:
 8026894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026898:	b09d      	sub	sp, #116	@ 0x74
 802689a:	7814      	ldrb	r4, [r2, #0]
 802689c:	461d      	mov	r5, r3
 802689e:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 80268a2:	2c01      	cmp	r4, #1
 80268a4:	9211      	str	r2, [sp, #68]	@ 0x44
 80268a6:	9113      	str	r1, [sp, #76]	@ 0x4c
 80268a8:	930f      	str	r3, [sp, #60]	@ 0x3c
 80268aa:	f040 820a 	bne.w	8026cc2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x42e>
 80268ae:	b913      	cbnz	r3, 80268b6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x22>
 80268b0:	b01d      	add	sp, #116	@ 0x74
 80268b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80268b6:	6869      	ldr	r1, [r5, #4]
 80268b8:	4683      	mov	fp, r0
 80268ba:	6828      	ldr	r0, [r5, #0]
 80268bc:	ab18      	add	r3, sp, #96	@ 0x60
 80268be:	c303      	stmia	r3!, {r0, r1}
 80268c0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80268c2:	6818      	ldr	r0, [r3, #0]
 80268c4:	6859      	ldr	r1, [r3, #4]
 80268c6:	ab1a      	add	r3, sp, #104	@ 0x68
 80268c8:	c303      	stmia	r3!, {r0, r1}
 80268ca:	a818      	add	r0, sp, #96	@ 0x60
 80268cc:	f7e6 fa38 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80268d0:	4629      	mov	r1, r5
 80268d2:	a81a      	add	r0, sp, #104	@ 0x68
 80268d4:	f7e6 fa5c 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80268d8:	f9bd 6064 	ldrsh.w	r6, [sp, #100]	@ 0x64
 80268dc:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80268e0:	f340 814b 	ble.w	8026b7a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2e6>
 80268e4:	b2b0      	uxth	r0, r6
 80268e6:	9416      	str	r4, [sp, #88]	@ 0x58
 80268e8:	f9bd 306a 	ldrsh.w	r3, [sp, #106]	@ 0x6a
 80268ec:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 80268f0:	fb93 f1f4 	sdiv	r1, r3, r4
 80268f4:	4422      	add	r2, r4
 80268f6:	3a01      	subs	r2, #1
 80268f8:	fb92 f2f4 	sdiv	r2, r2, r4
 80268fc:	b289      	uxth	r1, r1
 80268fe:	fb04 3411 	mls	r4, r4, r1, r3
 8026902:	9114      	str	r1, [sp, #80]	@ 0x50
 8026904:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8026908:	f8bd 7060 	ldrh.w	r7, [sp, #96]	@ 0x60
 802690c:	fb14 1600 	smlabb	r6, r4, r0, r1
 8026910:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 8026914:	48a4      	ldr	r0, [pc, #656]	@ (8026ba8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x314>)
 8026916:	4439      	add	r1, r7
 8026918:	442b      	add	r3, r5
 802691a:	6800      	ldr	r0, [r0, #0]
 802691c:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8026920:	f8ad 306a 	strh.w	r3, [sp, #106]	@ 0x6a
 8026924:	f9bd 706c 	ldrsh.w	r7, [sp, #108]	@ 0x6c
 8026928:	6803      	ldr	r3, [r0, #0]
 802692a:	b2b5      	uxth	r5, r6
 802692c:	3201      	adds	r2, #1
 802692e:	9501      	str	r5, [sp, #4]
 8026930:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8026932:	970b      	str	r7, [sp, #44]	@ 0x2c
 8026934:	b294      	uxth	r4, r2
 8026936:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 802693a:	4798      	blx	r3
 802693c:	2100      	movs	r1, #0
 802693e:	2d00      	cmp	r5, #0
 8026940:	4d9a      	ldr	r5, [pc, #616]	@ (8026bac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x318>)
 8026942:	bf08      	it	eq
 8026944:	463a      	moveq	r2, r7
 8026946:	882d      	ldrh	r5, [r5, #0]
 8026948:	9112      	str	r1, [sp, #72]	@ 0x48
 802694a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 802694e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8026952:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026954:	fb05 7101 	mla	r1, r5, r1, r7
 8026958:	ea6f 0c03 	mvn.w	ip, r3
 802695c:	fb05 f306 	mul.w	r3, r5, r6
 8026960:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8026964:	9100      	str	r1, [sp, #0]
 8026966:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 802696a:	f10b 030e 	add.w	r3, fp, #14
 802696e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8026970:	465b      	mov	r3, fp
 8026972:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026974:	bf18      	it	ne
 8026976:	2200      	movne	r2, #0
 8026978:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 802697c:	f104 0904 	add.w	r9, r4, #4
 8026980:	46cb      	mov	fp, r9
 8026982:	4699      	mov	r9, r3
 8026984:	460b      	mov	r3, r1
 8026986:	b292      	uxth	r2, r2
 8026988:	9202      	str	r2, [sp, #8]
 802698a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 802698e:	fa5f f28c 	uxtb.w	r2, ip
 8026992:	9107      	str	r1, [sp, #28]
 8026994:	9215      	str	r2, [sp, #84]	@ 0x54
 8026996:	9a00      	ldr	r2, [sp, #0]
 8026998:	4293      	cmp	r3, r2
 802699a:	f240 80fd 	bls.w	8026b98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 802699e:	9a01      	ldr	r2, [sp, #4]
 80269a0:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 80269a4:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80269a6:	fbb2 f3f3 	udiv	r3, r2, r3
 80269aa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80269ac:	2701      	movs	r7, #1
 80269ae:	fa11 f482 	uxtah	r4, r1, r2
 80269b2:	00a4      	lsls	r4, r4, #2
 80269b4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80269b6:	3404      	adds	r4, #4
 80269b8:	1911      	adds	r1, r2, r4
 80269ba:	788a      	ldrb	r2, [r1, #2]
 80269bc:	784d      	ldrb	r5, [r1, #1]
 80269be:	0212      	lsls	r2, r2, #8
 80269c0:	78c9      	ldrb	r1, [r1, #3]
 80269c2:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 80269c6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80269c8:	4308      	orrs	r0, r1
 80269ca:	4629      	mov	r1, r5
 80269cc:	2600      	movs	r6, #0
 80269ce:	4401      	add	r1, r0
 80269d0:	784a      	ldrb	r2, [r1, #1]
 80269d2:	5c28      	ldrb	r0, [r5, r0]
 80269d4:	0212      	lsls	r2, r2, #8
 80269d6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80269d8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80269dc:	4302      	orrs	r2, r0
 80269de:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80269e0:	5d2c      	ldrb	r4, [r5, r4]
 80269e2:	f889 200d 	strb.w	r2, [r9, #13]
 80269e6:	b292      	uxth	r2, r2
 80269e8:	1ac3      	subs	r3, r0, r3
 80269ea:	9209      	str	r2, [sp, #36]	@ 0x24
 80269ec:	19ca      	adds	r2, r1, r7
 80269ee:	9205      	str	r2, [sp, #20]
 80269f0:	b29b      	uxth	r3, r3
 80269f2:	19e2      	adds	r2, r4, r7
 80269f4:	f8bd e054 	ldrh.w	lr, [sp, #84]	@ 0x54
 80269f8:	960e      	str	r6, [sp, #56]	@ 0x38
 80269fa:	970a      	str	r7, [sp, #40]	@ 0x28
 80269fc:	940d      	str	r4, [sp, #52]	@ 0x34
 80269fe:	9206      	str	r2, [sp, #24]
 8026a00:	9310      	str	r3, [sp, #64]	@ 0x40
 8026a02:	9704      	str	r7, [sp, #16]
 8026a04:	9b01      	ldr	r3, [sp, #4]
 8026a06:	2b00      	cmp	r3, #0
 8026a08:	d034      	beq.n	8026a74 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1e0>
 8026a0a:	42bb      	cmp	r3, r7
 8026a0c:	f240 811a 	bls.w	8026c44 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3b0>
 8026a10:	1bdf      	subs	r7, r3, r7
 8026a12:	b2bb      	uxth	r3, r7
 8026a14:	9301      	str	r3, [sp, #4]
 8026a16:	9a00      	ldr	r2, [sp, #0]
 8026a18:	9b07      	ldr	r3, [sp, #28]
 8026a1a:	4293      	cmp	r3, r2
 8026a1c:	f240 80bc 	bls.w	8026b98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8026a20:	9805      	ldr	r0, [sp, #20]
 8026a22:	9c04      	ldr	r4, [sp, #16]
 8026a24:	7842      	ldrb	r2, [r0, #1]
 8026a26:	f1c4 0107 	rsb	r1, r4, #7
 8026a2a:	7803      	ldrb	r3, [r0, #0]
 8026a2c:	408a      	lsls	r2, r1
 8026a2e:	0052      	lsls	r2, r2, #1
 8026a30:	4123      	asrs	r3, r4
 8026a32:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8026a36:	1c61      	adds	r1, r4, #1
 8026a38:	b2db      	uxtb	r3, r3
 8026a3a:	4313      	orrs	r3, r2
 8026a3c:	b2ca      	uxtb	r2, r1
 8026a3e:	4611      	mov	r1, r2
 8026a40:	2908      	cmp	r1, #8
 8026a42:	9204      	str	r2, [sp, #16]
 8026a44:	b29a      	uxth	r2, r3
 8026a46:	f000 8107 	beq.w	8026c58 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 8026a4a:	3001      	adds	r0, #1
 8026a4c:	9005      	str	r0, [sp, #20]
 8026a4e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8026a50:	4291      	cmp	r1, r2
 8026a52:	f0c0 80d9 	bcc.w	8026c08 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x374>
 8026a56:	2701      	movs	r7, #1
 8026a58:	b2db      	uxtb	r3, r3
 8026a5a:	f889 300d 	strb.w	r3, [r9, #13]
 8026a5e:	9906      	ldr	r1, [sp, #24]
 8026a60:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8026a64:	f0c0 80fe 	bcc.w	8026c64 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d0>
 8026a68:	9b01      	ldr	r3, [sp, #4]
 8026a6a:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 8026a6e:	2600      	movs	r6, #0
 8026a70:	2b00      	cmp	r3, #0
 8026a72:	d1ca      	bne.n	8026a0a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x176>
 8026a74:	9b02      	ldr	r3, [sp, #8]
 8026a76:	429f      	cmp	r7, r3
 8026a78:	461a      	mov	r2, r3
 8026a7a:	f0c0 8099 	bcc.w	8026bb0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8026a7e:	1afb      	subs	r3, r7, r3
 8026a80:	b29b      	uxth	r3, r3
 8026a82:	9308      	str	r3, [sp, #32]
 8026a84:	9b01      	ldr	r3, [sp, #4]
 8026a86:	9203      	str	r2, [sp, #12]
 8026a88:	930c      	str	r3, [sp, #48]	@ 0x30
 8026a8a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026a8c:	2bff      	cmp	r3, #255	@ 0xff
 8026a8e:	9b03      	ldr	r3, [sp, #12]
 8026a90:	f000 809a 	beq.w	8026bc8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x334>
 8026a94:	2b00      	cmp	r3, #0
 8026a96:	d049      	beq.n	8026b2c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026a98:	eb06 0803 	add.w	r8, r6, r3
 8026a9c:	f8dd c000 	ldr.w	ip, [sp]
 8026aa0:	fa1f f888 	uxth.w	r8, r8
 8026aa4:	eb09 0306 	add.w	r3, r9, r6
 8026aa8:	7b5c      	ldrb	r4, [r3, #13]
 8026aaa:	f8bc 3000 	ldrh.w	r3, [ip]
 8026aae:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8026ab2:	eb0b 0204 	add.w	r2, fp, r4
 8026ab6:	7890      	ldrb	r0, [r2, #2]
 8026ab8:	7855      	ldrb	r5, [r2, #1]
 8026aba:	00d9      	lsls	r1, r3, #3
 8026abc:	b2c9      	uxtb	r1, r1
 8026abe:	fb11 f10e 	smulbb	r1, r1, lr
 8026ac2:	fb10 f00a 	smulbb	r0, r0, sl
 8026ac6:	fb15 f50a 	smulbb	r5, r5, sl
 8026aca:	f81b 4004 	ldrb.w	r4, [fp, r4]
 8026ace:	121a      	asrs	r2, r3, #8
 8026ad0:	10db      	asrs	r3, r3, #3
 8026ad2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8026ad6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8026ada:	fb04 140a 	mla	r4, r4, sl, r1
 8026ade:	fb02 020e 	mla	r2, r2, lr, r0
 8026ae2:	fb03 530e 	mla	r3, r3, lr, r5
 8026ae6:	b2a4      	uxth	r4, r4
 8026ae8:	b29b      	uxth	r3, r3
 8026aea:	b290      	uxth	r0, r2
 8026aec:	1c59      	adds	r1, r3, #1
 8026aee:	1c42      	adds	r2, r0, #1
 8026af0:	1c65      	adds	r5, r4, #1
 8026af2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8026af6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026afa:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8026afe:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 8026b02:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8026b06:	094a      	lsrs	r2, r1, #5
 8026b08:	3601      	adds	r6, #1
 8026b0a:	4323      	orrs	r3, r4
 8026b0c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026b10:	b2b6      	uxth	r6, r6
 8026b12:	4313      	orrs	r3, r2
 8026b14:	4546      	cmp	r6, r8
 8026b16:	f82c 3b02 	strh.w	r3, [ip], #2
 8026b1a:	d1c3      	bne.n	8026aa4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x210>
 8026b1c:	9b03      	ldr	r3, [sp, #12]
 8026b1e:	9a00      	ldr	r2, [sp, #0]
 8026b20:	3b01      	subs	r3, #1
 8026b22:	b29b      	uxth	r3, r3
 8026b24:	3301      	adds	r3, #1
 8026b26:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026b2a:	9300      	str	r3, [sp, #0]
 8026b2c:	9b02      	ldr	r3, [sp, #8]
 8026b2e:	429f      	cmp	r7, r3
 8026b30:	d32b      	bcc.n	8026b8a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2f6>
 8026b32:	4b1e      	ldr	r3, [pc, #120]	@ (8026bac <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x318>)
 8026b34:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8026b36:	881b      	ldrh	r3, [r3, #0]
 8026b38:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8026b3a:	1a5b      	subs	r3, r3, r1
 8026b3c:	9900      	ldr	r1, [sp, #0]
 8026b3e:	3201      	adds	r2, #1
 8026b40:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8026b44:	9300      	str	r3, [sp, #0]
 8026b46:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8026b48:	920e      	str	r2, [sp, #56]	@ 0x38
 8026b4a:	429a      	cmp	r2, r3
 8026b4c:	f000 80a7 	beq.w	8026c9e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x40a>
 8026b50:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8026b54:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8026b58:	9f08      	ldr	r7, [sp, #32]
 8026b5a:	1a9b      	subs	r3, r3, r2
 8026b5c:	b29b      	uxth	r3, r3
 8026b5e:	2b00      	cmp	r3, #0
 8026b60:	bf14      	ite	ne
 8026b62:	2200      	movne	r2, #0
 8026b64:	2300      	moveq	r3, #0
 8026b66:	9202      	str	r2, [sp, #8]
 8026b68:	9301      	str	r3, [sp, #4]
 8026b6a:	9b07      	ldr	r3, [sp, #28]
 8026b6c:	9a00      	ldr	r2, [sp, #0]
 8026b6e:	4293      	cmp	r3, r2
 8026b70:	d912      	bls.n	8026b98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x304>
 8026b72:	2f00      	cmp	r7, #0
 8026b74:	f47f af46 	bne.w	8026a04 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8026b78:	e752      	b.n	8026a20 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x18c>
 8026b7a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8026b7e:	b2b0      	uxth	r0, r6
 8026b80:	fb94 f4f0 	sdiv	r4, r4, r0
 8026b84:	b2a3      	uxth	r3, r4
 8026b86:	9316      	str	r3, [sp, #88]	@ 0x58
 8026b88:	e6ae      	b.n	80268e8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x54>
 8026b8a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026b8c:	9a00      	ldr	r2, [sp, #0]
 8026b8e:	9302      	str	r3, [sp, #8]
 8026b90:	9b07      	ldr	r3, [sp, #28]
 8026b92:	9f08      	ldr	r7, [sp, #32]
 8026b94:	4293      	cmp	r3, r2
 8026b96:	d8ec      	bhi.n	8026b72 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2de>
 8026b98:	4b03      	ldr	r3, [pc, #12]	@ (8026ba8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x314>)
 8026b9a:	6818      	ldr	r0, [r3, #0]
 8026b9c:	6803      	ldr	r3, [r0, #0]
 8026b9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026ba0:	4798      	blx	r3
 8026ba2:	b01d      	add	sp, #116	@ 0x74
 8026ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026ba8:	20082f08 	.word	0x20082f08
 8026bac:	20082f02 	.word	0x20082f02
 8026bb0:	9b01      	ldr	r3, [sp, #4]
 8026bb2:	9703      	str	r7, [sp, #12]
 8026bb4:	9308      	str	r3, [sp, #32]
 8026bb6:	9b02      	ldr	r3, [sp, #8]
 8026bb8:	1bdb      	subs	r3, r3, r7
 8026bba:	b29b      	uxth	r3, r3
 8026bbc:	930c      	str	r3, [sp, #48]	@ 0x30
 8026bbe:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026bc0:	2bff      	cmp	r3, #255	@ 0xff
 8026bc2:	9b03      	ldr	r3, [sp, #12]
 8026bc4:	f47f af66 	bne.w	8026a94 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x200>
 8026bc8:	2b00      	cmp	r3, #0
 8026bca:	d0af      	beq.n	8026b2c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026bcc:	18f4      	adds	r4, r6, r3
 8026bce:	9800      	ldr	r0, [sp, #0]
 8026bd0:	b2a4      	uxth	r4, r4
 8026bd2:	eb09 0306 	add.w	r3, r9, r6
 8026bd6:	7b59      	ldrb	r1, [r3, #13]
 8026bd8:	4d3d      	ldr	r5, [pc, #244]	@ (8026cd0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x43c>)
 8026bda:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026bde:	eb0b 0301 	add.w	r3, fp, r1
 8026be2:	785a      	ldrb	r2, [r3, #1]
 8026be4:	789b      	ldrb	r3, [r3, #2]
 8026be6:	00d2      	lsls	r2, r2, #3
 8026be8:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8026bec:	3601      	adds	r6, #1
 8026bee:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026bf2:	ea05 2303 	and.w	r3, r5, r3, lsl #8
 8026bf6:	4313      	orrs	r3, r2
 8026bf8:	b2b6      	uxth	r6, r6
 8026bfa:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8026bfe:	42a6      	cmp	r6, r4
 8026c00:	f820 3b02 	strh.w	r3, [r0], #2
 8026c04:	d1e5      	bne.n	8026bd2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x33e>
 8026c06:	e789      	b.n	8026b1c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x288>
 8026c08:	9b06      	ldr	r3, [sp, #24]
 8026c0a:	429a      	cmp	r2, r3
 8026c0c:	d32d      	bcc.n	8026c6a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3d6>
 8026c0e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8026c10:	f899 100d 	ldrb.w	r1, [r9, #13]
 8026c14:	eb09 0300 	add.w	r3, r9, r0
 8026c18:	7359      	strb	r1, [r3, #13]
 8026c1a:	f899 300d 	ldrb.w	r3, [r9, #13]
 8026c1e:	1c41      	adds	r1, r0, #1
 8026c20:	b28f      	uxth	r7, r1
 8026c22:	9c06      	ldr	r4, [sp, #24]
 8026c24:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8026c26:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 8026c2a:	3401      	adds	r4, #1
 8026c2c:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8026c30:	b2a3      	uxth	r3, r4
 8026c32:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8026c36:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8026c3a:	9306      	str	r3, [sp, #24]
 8026c3c:	e9cd 2709 	strd	r2, r7, [sp, #36]	@ 0x24
 8026c40:	2600      	movs	r6, #0
 8026c42:	e6df      	b.n	8026a04 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x170>
 8026c44:	1aff      	subs	r7, r7, r3
 8026c46:	441e      	add	r6, r3
 8026c48:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8026c4c:	b2bf      	uxth	r7, r7
 8026c4e:	9302      	str	r3, [sp, #8]
 8026c50:	2300      	movs	r3, #0
 8026c52:	b2b6      	uxth	r6, r6
 8026c54:	9301      	str	r3, [sp, #4]
 8026c56:	e788      	b.n	8026b6a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x2d6>
 8026c58:	2100      	movs	r1, #0
 8026c5a:	9104      	str	r1, [sp, #16]
 8026c5c:	9905      	ldr	r1, [sp, #20]
 8026c5e:	3102      	adds	r1, #2
 8026c60:	9105      	str	r1, [sp, #20]
 8026c62:	e6f4      	b.n	8026a4e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8026c64:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8026c66:	3101      	adds	r1, #1
 8026c68:	e7db      	b.n	8026c22 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x38e>
 8026c6a:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 8026c6e:	f893 704f 	ldrb.w	r7, [r3, #79]	@ 0x4f
 8026c72:	4613      	mov	r3, r2
 8026c74:	2f01      	cmp	r7, #1
 8026c76:	d90d      	bls.n	8026c94 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x400>
 8026c78:	f107 010d 	add.w	r1, r7, #13
 8026c7c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8026c7e:	4449      	add	r1, r9
 8026c80:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8026c84:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8026c88:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8026c8c:	428c      	cmp	r4, r1
 8026c8e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8026c92:	d1f5      	bne.n	8026c80 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x3ec>
 8026c94:	b2db      	uxtb	r3, r3
 8026c96:	f889 300d 	strb.w	r3, [r9, #13]
 8026c9a:	b2bf      	uxth	r7, r7
 8026c9c:	e6df      	b.n	8026a5e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 8026c9e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8026ca2:	f8bd 2060 	ldrh.w	r2, [sp, #96]	@ 0x60
 8026ca6:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8026ca8:	1a9b      	subs	r3, r3, r2
 8026caa:	b29b      	uxth	r3, r3
 8026cac:	2b00      	cmp	r3, #0
 8026cae:	9301      	str	r3, [sp, #4]
 8026cb0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026cb2:	bf18      	it	ne
 8026cb4:	2300      	movne	r3, #0
 8026cb6:	3101      	adds	r1, #1
 8026cb8:	b29b      	uxth	r3, r3
 8026cba:	9302      	str	r3, [sp, #8]
 8026cbc:	9112      	str	r1, [sp, #72]	@ 0x48
 8026cbe:	9b07      	ldr	r3, [sp, #28]
 8026cc0:	e669      	b.n	8026996 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x102>
 8026cc2:	4b04      	ldr	r3, [pc, #16]	@ (8026cd4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 8026cc4:	4a04      	ldr	r2, [pc, #16]	@ (8026cd8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x444>)
 8026cc6:	f640 0167 	movw	r1, #2151	@ 0x867
 8026cca:	4804      	ldr	r0, [pc, #16]	@ (8026cdc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h+0x448>)
 8026ccc:	f00b fc14 	bl	80324f8 <__assert_func>
 8026cd0:	fffff800 	.word	0xfffff800
 8026cd4:	080363a4 	.word	0x080363a4
 8026cd8:	08037774 	.word	0x08037774
 8026cdc:	080362e0 	.word	0x080362e0

08026ce0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8026ce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ce4:	4690      	mov	r8, r2
 8026ce6:	8812      	ldrh	r2, [r2, #0]
 8026ce8:	b093      	sub	sp, #76	@ 0x4c
 8026cea:	461c      	mov	r4, r3
 8026cec:	f89d a074 	ldrb.w	sl, [sp, #116]	@ 0x74
 8026cf0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026cf2:	2a00      	cmp	r2, #0
 8026cf4:	f040 80fb 	bne.w	8026eee <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8026cf8:	4689      	mov	r9, r1
 8026cfa:	6820      	ldr	r0, [r4, #0]
 8026cfc:	6861      	ldr	r1, [r4, #4]
 8026cfe:	aa0e      	add	r2, sp, #56	@ 0x38
 8026d00:	c203      	stmia	r2!, {r0, r1}
 8026d02:	6818      	ldr	r0, [r3, #0]
 8026d04:	6859      	ldr	r1, [r3, #4]
 8026d06:	aa10      	add	r2, sp, #64	@ 0x40
 8026d08:	c203      	stmia	r2!, {r0, r1}
 8026d0a:	a80e      	add	r0, sp, #56	@ 0x38
 8026d0c:	f7e6 f818 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026d10:	4621      	mov	r1, r4
 8026d12:	a810      	add	r0, sp, #64	@ 0x40
 8026d14:	f7e6 f83c 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026d18:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	@ 0x40
 8026d1c:	f9bd 5042 	ldrsh.w	r5, [sp, #66]	@ 0x42
 8026d20:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8026d24:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8026d28:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8026d2c:	4873      	ldr	r0, [pc, #460]	@ (8026efc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8026d2e:	fb11 4105 	smlabb	r1, r1, r5, r4
 8026d32:	4422      	add	r2, r4
 8026d34:	442b      	add	r3, r5
 8026d36:	6800      	ldr	r0, [r0, #0]
 8026d38:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8026d3c:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8026d40:	6802      	ldr	r2, [r0, #0]
 8026d42:	4489      	add	r9, r1
 8026d44:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8026d48:	4c6d      	ldr	r4, [pc, #436]	@ (8026f00 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x220>)
 8026d4a:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8026d4e:	910a      	str	r1, [sp, #40]	@ 0x28
 8026d50:	f9bd 1046 	ldrsh.w	r1, [sp, #70]	@ 0x46
 8026d54:	42a3      	cmp	r3, r4
 8026d56:	910c      	str	r1, [sp, #48]	@ 0x30
 8026d58:	f040 8096 	bne.w	8026e88 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 8026d5c:	6841      	ldr	r1, [r0, #4]
 8026d5e:	4c69      	ldr	r4, [pc, #420]	@ (8026f04 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x224>)
 8026d60:	680b      	ldr	r3, [r1, #0]
 8026d62:	699b      	ldr	r3, [r3, #24]
 8026d64:	42a3      	cmp	r3, r4
 8026d66:	f040 80b4 	bne.w	8026ed2 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8026d6a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8026d6c:	4798      	blx	r3
 8026d6e:	4b66      	ldr	r3, [pc, #408]	@ (8026f08 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8026d70:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8026d74:	881b      	ldrh	r3, [r3, #0]
 8026d76:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8026d7a:	fb01 2303 	mla	r3, r1, r3, r2
 8026d7e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026d82:	4418      	add	r0, r3
 8026d84:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026d86:	2b00      	cmp	r3, #0
 8026d88:	dd76      	ble.n	8026e78 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x198>
 8026d8a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026d8c:	2b00      	cmp	r3, #0
 8026d8e:	dd73      	ble.n	8026e78 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x198>
 8026d90:	2200      	movs	r2, #0
 8026d92:	2104      	movs	r1, #4
 8026d94:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026d98:	920b      	str	r2, [sp, #44]	@ 0x2c
 8026d9a:	930d      	str	r3, [sp, #52]	@ 0x34
 8026d9c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026d9e:	464e      	mov	r6, r9
 8026da0:	1cc5      	adds	r5, r0, #3
 8026da2:	eb09 0c03 	add.w	ip, r9, r3
 8026da6:	e039      	b.n	8026e1c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026da8:	fb0a f303 	mul.w	r3, sl, r3
 8026dac:	1c5a      	adds	r2, r3, #1
 8026dae:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026db2:	121b      	asrs	r3, r3, #8
 8026db4:	43df      	mvns	r7, r3
 8026db6:	b29b      	uxth	r3, r3
 8026db8:	fb1e f203 	smulbb	r2, lr, r3
 8026dbc:	f815 ec03 	ldrb.w	lr, [r5, #-3]
 8026dc0:	b2ff      	uxtb	r7, r7
 8026dc2:	fb0e 2e07 	mla	lr, lr, r7, r2
 8026dc6:	fa1f fe8e 	uxth.w	lr, lr
 8026dca:	f815 2c02 	ldrb.w	r2, [r5, #-2]
 8026dce:	f10e 0b01 	add.w	fp, lr, #1
 8026dd2:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 8026dd6:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8026dda:	fb12 fb07 	smulbb	fp, r2, r7
 8026dde:	f805 ec03 	strb.w	lr, [r5, #-3]
 8026de2:	7862      	ldrb	r2, [r4, #1]
 8026de4:	f815 ec01 	ldrb.w	lr, [r5, #-1]
 8026de8:	fb02 b203 	mla	r2, r2, r3, fp
 8026dec:	b292      	uxth	r2, r2
 8026dee:	f102 0b01 	add.w	fp, r2, #1
 8026df2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026df6:	1212      	asrs	r2, r2, #8
 8026df8:	fb1e f707 	smulbb	r7, lr, r7
 8026dfc:	f805 2c02 	strb.w	r2, [r5, #-2]
 8026e00:	78a2      	ldrb	r2, [r4, #2]
 8026e02:	fb02 7303 	mla	r3, r2, r3, r7
 8026e06:	b29b      	uxth	r3, r3
 8026e08:	1c5a      	adds	r2, r3, #1
 8026e0a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026e0e:	121b      	asrs	r3, r3, #8
 8026e10:	f805 3c01 	strb.w	r3, [r5, #-1]
 8026e14:	45b4      	cmp	ip, r6
 8026e16:	f105 0503 	add.w	r5, r5, #3
 8026e1a:	d01b      	beq.n	8026e54 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x174>
 8026e1c:	f816 2b01 	ldrb.w	r2, [r6], #1
 8026e20:	fb11 1202 	smlabb	r2, r1, r2, r1
 8026e24:	eb08 0402 	add.w	r4, r8, r2
 8026e28:	78e3      	ldrb	r3, [r4, #3]
 8026e2a:	2b00      	cmp	r3, #0
 8026e2c:	d0f2      	beq.n	8026e14 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x134>
 8026e2e:	2bff      	cmp	r3, #255	@ 0xff
 8026e30:	f818 e002 	ldrb.w	lr, [r8, r2]
 8026e34:	d1b8      	bne.n	8026da8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 8026e36:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8026e3a:	d1b5      	bne.n	8026da8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 8026e3c:	f805 ec03 	strb.w	lr, [r5, #-3]
 8026e40:	7863      	ldrb	r3, [r4, #1]
 8026e42:	45b4      	cmp	ip, r6
 8026e44:	f805 3c02 	strb.w	r3, [r5, #-2]
 8026e48:	78a3      	ldrb	r3, [r4, #2]
 8026e4a:	f105 0503 	add.w	r5, r5, #3
 8026e4e:	f805 3c04 	strb.w	r3, [r5, #-4]
 8026e52:	d1e3      	bne.n	8026e1c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 8026e54:	4b2c      	ldr	r3, [pc, #176]	@ (8026f08 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8026e56:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8026e58:	881b      	ldrh	r3, [r3, #0]
 8026e5a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8026e5c:	1a9b      	subs	r3, r3, r2
 8026e5e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026e62:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8026e64:	442b      	add	r3, r5
 8026e66:	4418      	add	r0, r3
 8026e68:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026e6a:	3401      	adds	r4, #1
 8026e6c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8026e70:	42a3      	cmp	r3, r4
 8026e72:	940b      	str	r4, [sp, #44]	@ 0x2c
 8026e74:	4491      	add	r9, r2
 8026e76:	d191      	bne.n	8026d9c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8026e78:	4b20      	ldr	r3, [pc, #128]	@ (8026efc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8026e7a:	6818      	ldr	r0, [r3, #0]
 8026e7c:	6803      	ldr	r3, [r0, #0]
 8026e7e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026e80:	4798      	blx	r3
 8026e82:	b013      	add	sp, #76	@ 0x4c
 8026e84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e88:	4798      	blx	r3
 8026e8a:	4602      	mov	r2, r0
 8026e8c:	2a01      	cmp	r2, #1
 8026e8e:	d124      	bne.n	8026eda <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1fa>
 8026e90:	4b1e      	ldr	r3, [pc, #120]	@ (8026f0c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x22c>)
 8026e92:	6818      	ldr	r0, [r3, #0]
 8026e94:	b328      	cbz	r0, 8026ee2 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8026e96:	260b      	movs	r6, #11
 8026e98:	4b1b      	ldr	r3, [pc, #108]	@ (8026f08 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x228>)
 8026e9a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8026e9e:	881f      	ldrh	r7, [r3, #0]
 8026ea0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8026ea4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8026ea8:	f8bd 4042 	ldrh.w	r4, [sp, #66]	@ 0x42
 8026eac:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8026eb0:	9208      	str	r2, [sp, #32]
 8026eb2:	9205      	str	r2, [sp, #20]
 8026eb4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8026eb8:	f8cd a010 	str.w	sl, [sp, #16]
 8026ebc:	4642      	mov	r2, r8
 8026ebe:	4649      	mov	r1, r9
 8026ec0:	e9cd 7606 	strd	r7, r6, [sp, #24]
 8026ec4:	9503      	str	r5, [sp, #12]
 8026ec6:	9400      	str	r4, [sp, #0]
 8026ec8:	f7f9 feae 	bl	8020c28 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8026ecc:	b013      	add	sp, #76	@ 0x4c
 8026ece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026ed2:	4608      	mov	r0, r1
 8026ed4:	4798      	blx	r3
 8026ed6:	4602      	mov	r2, r0
 8026ed8:	e7d8      	b.n	8026e8c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 8026eda:	4b08      	ldr	r3, [pc, #32]	@ (8026efc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>)
 8026edc:	6818      	ldr	r0, [r3, #0]
 8026ede:	6802      	ldr	r2, [r0, #0]
 8026ee0:	e743      	b.n	8026d6a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8026ee2:	4b0b      	ldr	r3, [pc, #44]	@ (8026f10 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x230>)
 8026ee4:	4a0b      	ldr	r2, [pc, #44]	@ (8026f14 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8026ee6:	217c      	movs	r1, #124	@ 0x7c
 8026ee8:	480b      	ldr	r0, [pc, #44]	@ (8026f18 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 8026eea:	f00b fb05 	bl	80324f8 <__assert_func>
 8026eee:	4b0b      	ldr	r3, [pc, #44]	@ (8026f1c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8026ef0:	4a0b      	ldr	r2, [pc, #44]	@ (8026f20 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8026ef2:	f640 1155 	movw	r1, #2389	@ 0x955
 8026ef6:	480b      	ldr	r0, [pc, #44]	@ (8026f24 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8026ef8:	f00b fafe 	bl	80324f8 <__assert_func>
 8026efc:	20082f08 	.word	0x20082f08
 8026f00:	0800121d 	.word	0x0800121d
 8026f04:	0800bae5 	.word	0x0800bae5
 8026f08:	20082f02 	.word	0x20082f02
 8026f0c:	200833a8 	.word	0x200833a8
 8026f10:	0803623c 	.word	0x0803623c
 8026f14:	08036aa8 	.word	0x08036aa8
 8026f18:	08036264 	.word	0x08036264
 8026f1c:	08036354 	.word	0x08036354
 8026f20:	08037164 	.word	0x08037164
 8026f24:	080362e0 	.word	0x080362e0

08026f28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8026f28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f2c:	4614      	mov	r4, r2
 8026f2e:	7812      	ldrb	r2, [r2, #0]
 8026f30:	b08d      	sub	sp, #52	@ 0x34
 8026f32:	461e      	mov	r6, r3
 8026f34:	f89d 805c 	ldrb.w	r8, [sp, #92]	@ 0x5c
 8026f38:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8026f3a:	2a00      	cmp	r2, #0
 8026f3c:	f040 81e0 	bne.w	8027300 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 8026f40:	6830      	ldr	r0, [r6, #0]
 8026f42:	460d      	mov	r5, r1
 8026f44:	6871      	ldr	r1, [r6, #4]
 8026f46:	aa08      	add	r2, sp, #32
 8026f48:	c203      	stmia	r2!, {r0, r1}
 8026f4a:	6818      	ldr	r0, [r3, #0]
 8026f4c:	6859      	ldr	r1, [r3, #4]
 8026f4e:	aa0a      	add	r2, sp, #40	@ 0x28
 8026f50:	c203      	stmia	r2!, {r0, r1}
 8026f52:	a808      	add	r0, sp, #32
 8026f54:	f7e5 fef4 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026f58:	4631      	mov	r1, r6
 8026f5a:	a80a      	add	r0, sp, #40	@ 0x28
 8026f5c:	f7e5 ff18 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026f60:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8026f64:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8026f68:	f003 0201 	and.w	r2, r3, #1
 8026f6c:	4617      	mov	r7, r2
 8026f6e:	9204      	str	r2, [sp, #16]
 8026f70:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8026f74:	f8bd 0022 	ldrh.w	r0, [sp, #34]	@ 0x22
 8026f78:	443b      	add	r3, r7
 8026f7a:	fb02 1303 	mla	r3, r2, r3, r1
 8026f7e:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 8026f82:	4402      	add	r2, r0
 8026f84:	48d6      	ldr	r0, [pc, #856]	@ (80272e0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b8>)
 8026f86:	440e      	add	r6, r1
 8026f88:	6800      	ldr	r0, [r0, #0]
 8026f8a:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 8026f8e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8026f92:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8026f96:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8026f9a:	6802      	ldr	r2, [r0, #0]
 8026f9c:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	@ 0x2c
 8026fa0:	9301      	str	r3, [sp, #4]
 8026fa2:	f001 0301 	and.w	r3, r1, #1
 8026fa6:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8026fa8:	9305      	str	r3, [sp, #20]
 8026faa:	9703      	str	r7, [sp, #12]
 8026fac:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8026fb0:	4790      	blx	r2
 8026fb2:	4acc      	ldr	r2, [pc, #816]	@ (80272e4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3bc>)
 8026fb4:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8026fb8:	8811      	ldrh	r1, [r2, #0]
 8026fba:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8026fbe:	fb05 f201 	mul.w	r2, r5, r1
 8026fc2:	fb01 6303 	mla	r3, r1, r3, r6
 8026fc6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8026fca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026fce:	4418      	add	r0, r3
 8026fd0:	1883      	adds	r3, r0, r2
 8026fd2:	4298      	cmp	r0, r3
 8026fd4:	9306      	str	r3, [sp, #24]
 8026fd6:	f104 0204 	add.w	r2, r4, #4
 8026fda:	f080 80f1 	bcs.w	80271c0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8026fde:	1e7b      	subs	r3, r7, #1
 8026fe0:	4647      	mov	r7, r8
 8026fe2:	9307      	str	r3, [sp, #28]
 8026fe4:	9b05      	ldr	r3, [sp, #20]
 8026fe6:	2b00      	cmp	r3, #0
 8026fe8:	f000 8106 	beq.w	80271f8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2d0>
 8026fec:	9901      	ldr	r1, [sp, #4]
 8026fee:	780b      	ldrb	r3, [r1, #0]
 8026ff0:	1c4d      	adds	r5, r1, #1
 8026ff2:	f003 030f 	and.w	r3, r3, #15
 8026ff6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8026ffa:	0e19      	lsrs	r1, r3, #24
 8026ffc:	f040 8136 	bne.w	802726c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x344>
 8027000:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8027004:	3003      	adds	r0, #3
 8027006:	f1bc 0f01 	cmp.w	ip, #1
 802700a:	f340 80ba 	ble.w	8027182 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x25a>
 802700e:	f1ac 0302 	sub.w	r3, ip, #2
 8027012:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027016:	f10c 0e01 	add.w	lr, ip, #1
 802701a:	9302      	str	r3, [sp, #8]
 802701c:	eb05 060e 	add.w	r6, r5, lr
 8027020:	1d84      	adds	r4, r0, #6
 8027022:	e00b      	b.n	802703c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8027024:	f003 030f 	and.w	r3, r3, #15
 8027028:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 802702c:	3501      	adds	r5, #1
 802702e:	0e19      	lsrs	r1, r3, #24
 8027030:	d155      	bne.n	80270de <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 8027032:	42b5      	cmp	r5, r6
 8027034:	f104 0406 	add.w	r4, r4, #6
 8027038:	f000 809a 	beq.w	8027170 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x248>
 802703c:	782b      	ldrb	r3, [r5, #0]
 802703e:	0919      	lsrs	r1, r3, #4
 8027040:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8027044:	ea5f 6811 	movs.w	r8, r1, lsr #24
 8027048:	d0ec      	beq.n	8027024 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 802704a:	f3c1 2a07 	ubfx	sl, r1, #8, #8
 802704e:	f3c1 4907 	ubfx	r9, r1, #16, #8
 8027052:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8027056:	fa5f f38a 	uxtb.w	r3, sl
 802705a:	b2c9      	uxtb	r1, r1
 802705c:	fa5f fb89 	uxtb.w	fp, r9
 8027060:	f000 80bf 	beq.w	80271e2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ba>
 8027064:	fb08 f807 	mul.w	r8, r8, r7
 8027068:	f108 0901 	add.w	r9, r8, #1
 802706c:	eb09 2828 	add.w	r8, r9, r8, asr #8
 8027070:	ea4f 2828 	mov.w	r8, r8, asr #8
 8027074:	ea6f 0908 	mvn.w	r9, r8
 8027078:	fa1f f888 	uxth.w	r8, r8
 802707c:	fb11 f108 	smulbb	r1, r1, r8
 8027080:	fb13 f308 	smulbb	r3, r3, r8
 8027084:	fb1b f808 	smulbb	r8, fp, r8
 8027088:	f814 bc06 	ldrb.w	fp, [r4, #-6]
 802708c:	fa5f f989 	uxtb.w	r9, r9
 8027090:	f814 ac05 	ldrb.w	sl, [r4, #-5]
 8027094:	fb0b 1109 	mla	r1, fp, r9, r1
 8027098:	f814 bc04 	ldrb.w	fp, [r4, #-4]
 802709c:	fb0a 3309 	mla	r3, sl, r9, r3
 80270a0:	fb0b 8809 	mla	r8, fp, r9, r8
 80270a4:	b289      	uxth	r1, r1
 80270a6:	fa1f fa83 	uxth.w	sl, r3
 80270aa:	fa1f f888 	uxth.w	r8, r8
 80270ae:	f101 0b01 	add.w	fp, r1, #1
 80270b2:	f10a 0301 	add.w	r3, sl, #1
 80270b6:	f108 0901 	add.w	r9, r8, #1
 80270ba:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 80270be:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80270c2:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 80270c6:	121b      	asrs	r3, r3, #8
 80270c8:	1209      	asrs	r1, r1, #8
 80270ca:	ea4f 2828 	mov.w	r8, r8, asr #8
 80270ce:	f804 1c06 	strb.w	r1, [r4, #-6]
 80270d2:	f804 3c05 	strb.w	r3, [r4, #-5]
 80270d6:	f804 8c04 	strb.w	r8, [r4, #-4]
 80270da:	782b      	ldrb	r3, [r5, #0]
 80270dc:	e7a2      	b.n	8027024 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 80270de:	f3c3 2a07 	ubfx	sl, r3, #8, #8
 80270e2:	f3c3 4907 	ubfx	r9, r3, #16, #8
 80270e6:	29ff      	cmp	r1, #255	@ 0xff
 80270e8:	fa5f f88a 	uxtb.w	r8, sl
 80270ec:	b2db      	uxtb	r3, r3
 80270ee:	fa5f fb89 	uxtb.w	fp, r9
 80270f2:	d06d      	beq.n	80271d0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2a8>
 80270f4:	fb01 f107 	mul.w	r1, r1, r7
 80270f8:	f101 0901 	add.w	r9, r1, #1
 80270fc:	eb09 2121 	add.w	r1, r9, r1, asr #8
 8027100:	1209      	asrs	r1, r1, #8
 8027102:	ea6f 0901 	mvn.w	r9, r1
 8027106:	b289      	uxth	r1, r1
 8027108:	fb13 f301 	smulbb	r3, r3, r1
 802710c:	fb18 f801 	smulbb	r8, r8, r1
 8027110:	fb1b f101 	smulbb	r1, fp, r1
 8027114:	f814 bc03 	ldrb.w	fp, [r4, #-3]
 8027118:	fa5f f989 	uxtb.w	r9, r9
 802711c:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 8027120:	fb0b 3309 	mla	r3, fp, r9, r3
 8027124:	f814 bc01 	ldrb.w	fp, [r4, #-1]
 8027128:	fb0a 8809 	mla	r8, sl, r9, r8
 802712c:	fb0b 1109 	mla	r1, fp, r9, r1
 8027130:	fa1f fa88 	uxth.w	sl, r8
 8027134:	fa1f fb83 	uxth.w	fp, r3
 8027138:	b289      	uxth	r1, r1
 802713a:	f10b 0801 	add.w	r8, fp, #1
 802713e:	f10a 0301 	add.w	r3, sl, #1
 8027142:	f101 0901 	add.w	r9, r1, #1
 8027146:	eb08 2b1b 	add.w	fp, r8, fp, lsr #8
 802714a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 802714e:	eb09 2111 	add.w	r1, r9, r1, lsr #8
 8027152:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 8027156:	121b      	asrs	r3, r3, #8
 8027158:	1209      	asrs	r1, r1, #8
 802715a:	42b5      	cmp	r5, r6
 802715c:	f804 bc03 	strb.w	fp, [r4, #-3]
 8027160:	f804 3c02 	strb.w	r3, [r4, #-2]
 8027164:	f804 1c01 	strb.w	r1, [r4, #-1]
 8027168:	f104 0406 	add.w	r4, r4, #6
 802716c:	f47f af66 	bne.w	802703c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8027170:	9b02      	ldr	r3, [sp, #8]
 8027172:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8027176:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 802717a:	eb00 004e 	add.w	r0, r0, lr, lsl #1
 802717e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8027182:	f1bc 0f01 	cmp.w	ip, #1
 8027186:	d106      	bne.n	8027196 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26e>
 8027188:	782b      	ldrb	r3, [r5, #0]
 802718a:	091b      	lsrs	r3, r3, #4
 802718c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8027190:	0e19      	lsrs	r1, r3, #24
 8027192:	d135      	bne.n	8027200 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2d8>
 8027194:	3003      	adds	r0, #3
 8027196:	4b53      	ldr	r3, [pc, #332]	@ (80272e4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3bc>)
 8027198:	9c03      	ldr	r4, [sp, #12]
 802719a:	8819      	ldrh	r1, [r3, #0]
 802719c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80271a0:	1b09      	subs	r1, r1, r4
 80271a2:	9c04      	ldr	r4, [sp, #16]
 80271a4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80271a8:	4408      	add	r0, r1
 80271aa:	4423      	add	r3, r4
 80271ac:	9901      	ldr	r1, [sp, #4]
 80271ae:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80271b2:	eb01 0363 	add.w	r3, r1, r3, asr #1
 80271b6:	9301      	str	r3, [sp, #4]
 80271b8:	9b06      	ldr	r3, [sp, #24]
 80271ba:	4283      	cmp	r3, r0
 80271bc:	f63f af12 	bhi.w	8026fe4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 80271c0:	4b47      	ldr	r3, [pc, #284]	@ (80272e0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b8>)
 80271c2:	6818      	ldr	r0, [r3, #0]
 80271c4:	6803      	ldr	r3, [r0, #0]
 80271c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80271c8:	4798      	blx	r3
 80271ca:	b00d      	add	sp, #52	@ 0x34
 80271cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80271d0:	2fff      	cmp	r7, #255	@ 0xff
 80271d2:	d18f      	bne.n	80270f4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1cc>
 80271d4:	f804 3c03 	strb.w	r3, [r4, #-3]
 80271d8:	f804 ac02 	strb.w	sl, [r4, #-2]
 80271dc:	f804 9c01 	strb.w	r9, [r4, #-1]
 80271e0:	e727      	b.n	8027032 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 80271e2:	2fff      	cmp	r7, #255	@ 0xff
 80271e4:	f47f af3e 	bne.w	8027064 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x13c>
 80271e8:	f804 1c06 	strb.w	r1, [r4, #-6]
 80271ec:	f804 ac05 	strb.w	sl, [r4, #-5]
 80271f0:	f804 9c04 	strb.w	r9, [r4, #-4]
 80271f4:	782b      	ldrb	r3, [r5, #0]
 80271f6:	e715      	b.n	8027024 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xfc>
 80271f8:	9d01      	ldr	r5, [sp, #4]
 80271fa:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80271fe:	e702      	b.n	8027006 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xde>
 8027200:	f3c3 2507 	ubfx	r5, r3, #8, #8
 8027204:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8027208:	29ff      	cmp	r1, #255	@ 0xff
 802720a:	fa5f fc85 	uxtb.w	ip, r5
 802720e:	b2db      	uxtb	r3, r3
 8027210:	b2e6      	uxtb	r6, r4
 8027212:	d069      	beq.n	80272e8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 8027214:	fb01 f107 	mul.w	r1, r1, r7
 8027218:	1c4c      	adds	r4, r1, #1
 802721a:	eb04 2121 	add.w	r1, r4, r1, asr #8
 802721e:	120c      	asrs	r4, r1, #8
 8027220:	43e1      	mvns	r1, r4
 8027222:	b2a4      	uxth	r4, r4
 8027224:	fb13 f304 	smulbb	r3, r3, r4
 8027228:	fb1c fc04 	smulbb	ip, ip, r4
 802722c:	fb16 f404 	smulbb	r4, r6, r4
 8027230:	7806      	ldrb	r6, [r0, #0]
 8027232:	b2c9      	uxtb	r1, r1
 8027234:	fb06 3301 	mla	r3, r6, r1, r3
 8027238:	7845      	ldrb	r5, [r0, #1]
 802723a:	7886      	ldrb	r6, [r0, #2]
 802723c:	fb05 c501 	mla	r5, r5, r1, ip
 8027240:	fb06 4401 	mla	r4, r6, r1, r4
 8027244:	b29b      	uxth	r3, r3
 8027246:	b2ad      	uxth	r5, r5
 8027248:	b2a4      	uxth	r4, r4
 802724a:	1c5e      	adds	r6, r3, #1
 802724c:	f105 0c01 	add.w	ip, r5, #1
 8027250:	1c61      	adds	r1, r4, #1
 8027252:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8027256:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802725a:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 802725e:	121b      	asrs	r3, r3, #8
 8027260:	122d      	asrs	r5, r5, #8
 8027262:	1209      	asrs	r1, r1, #8
 8027264:	7003      	strb	r3, [r0, #0]
 8027266:	7045      	strb	r5, [r0, #1]
 8027268:	7081      	strb	r1, [r0, #2]
 802726a:	e793      	b.n	8027194 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 802726c:	f3c3 2607 	ubfx	r6, r3, #8, #8
 8027270:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8027274:	29ff      	cmp	r1, #255	@ 0xff
 8027276:	fa5f fe86 	uxtb.w	lr, r6
 802727a:	b2db      	uxtb	r3, r3
 802727c:	fa5f fc84 	uxtb.w	ip, r4
 8027280:	d038      	beq.n	80272f4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3cc>
 8027282:	fb01 f107 	mul.w	r1, r1, r7
 8027286:	1c4c      	adds	r4, r1, #1
 8027288:	eb04 2421 	add.w	r4, r4, r1, asr #8
 802728c:	1224      	asrs	r4, r4, #8
 802728e:	43e1      	mvns	r1, r4
 8027290:	b2a4      	uxth	r4, r4
 8027292:	fb13 f304 	smulbb	r3, r3, r4
 8027296:	fb1e fe04 	smulbb	lr, lr, r4
 802729a:	fb1c f404 	smulbb	r4, ip, r4
 802729e:	f890 c000 	ldrb.w	ip, [r0]
 80272a2:	b2c9      	uxtb	r1, r1
 80272a4:	fb0c 3301 	mla	r3, ip, r1, r3
 80272a8:	7846      	ldrb	r6, [r0, #1]
 80272aa:	f890 c002 	ldrb.w	ip, [r0, #2]
 80272ae:	fb06 e601 	mla	r6, r6, r1, lr
 80272b2:	fb0c 4401 	mla	r4, ip, r1, r4
 80272b6:	b29b      	uxth	r3, r3
 80272b8:	b2b6      	uxth	r6, r6
 80272ba:	b2a4      	uxth	r4, r4
 80272bc:	f103 0c01 	add.w	ip, r3, #1
 80272c0:	f106 0e01 	add.w	lr, r6, #1
 80272c4:	1c61      	adds	r1, r4, #1
 80272c6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80272ca:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80272ce:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 80272d2:	121b      	asrs	r3, r3, #8
 80272d4:	1236      	asrs	r6, r6, #8
 80272d6:	1209      	asrs	r1, r1, #8
 80272d8:	7003      	strb	r3, [r0, #0]
 80272da:	7046      	strb	r6, [r0, #1]
 80272dc:	7081      	strb	r1, [r0, #2]
 80272de:	e68f      	b.n	8027000 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xd8>
 80272e0:	20082f08 	.word	0x20082f08
 80272e4:	20082f02 	.word	0x20082f02
 80272e8:	2fff      	cmp	r7, #255	@ 0xff
 80272ea:	d193      	bne.n	8027214 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ec>
 80272ec:	7003      	strb	r3, [r0, #0]
 80272ee:	7045      	strb	r5, [r0, #1]
 80272f0:	7084      	strb	r4, [r0, #2]
 80272f2:	e74f      	b.n	8027194 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x26c>
 80272f4:	2fff      	cmp	r7, #255	@ 0xff
 80272f6:	d1c4      	bne.n	8027282 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x35a>
 80272f8:	7003      	strb	r3, [r0, #0]
 80272fa:	7046      	strb	r6, [r0, #1]
 80272fc:	7084      	strb	r4, [r0, #2]
 80272fe:	e67f      	b.n	8027000 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xd8>
 8027300:	4b03      	ldr	r3, [pc, #12]	@ (8027310 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3e8>)
 8027302:	4a04      	ldr	r2, [pc, #16]	@ (8027314 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ec>)
 8027304:	f640 11b5 	movw	r1, #2485	@ 0x9b5
 8027308:	4803      	ldr	r0, [pc, #12]	@ (8027318 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3f0>)
 802730a:	f00b f8f5 	bl	80324f8 <__assert_func>
 802730e:	bf00      	nop
 8027310:	080363d4 	.word	0x080363d4
 8027314:	08037654 	.word	0x08037654
 8027318:	080362e0 	.word	0x080362e0

0802731c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 802731c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027320:	b091      	sub	sp, #68	@ 0x44
 8027322:	9208      	str	r2, [sp, #32]
 8027324:	9100      	str	r1, [sp, #0]
 8027326:	7812      	ldrb	r2, [r2, #0]
 8027328:	f89d 106c 	ldrb.w	r1, [sp, #108]	@ 0x6c
 802732c:	461c      	mov	r4, r3
 802732e:	9106      	str	r1, [sp, #24]
 8027330:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8027332:	2a00      	cmp	r2, #0
 8027334:	f040 8211 	bne.w	802775a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x43e>
 8027338:	6820      	ldr	r0, [r4, #0]
 802733a:	6861      	ldr	r1, [r4, #4]
 802733c:	aa0c      	add	r2, sp, #48	@ 0x30
 802733e:	c203      	stmia	r2!, {r0, r1}
 8027340:	6818      	ldr	r0, [r3, #0]
 8027342:	6859      	ldr	r1, [r3, #4]
 8027344:	aa0e      	add	r2, sp, #56	@ 0x38
 8027346:	c203      	stmia	r2!, {r0, r1}
 8027348:	a80c      	add	r0, sp, #48	@ 0x30
 802734a:	f7e5 fcf9 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802734e:	4621      	mov	r1, r4
 8027350:	a80e      	add	r0, sp, #56	@ 0x38
 8027352:	f7e5 fd1d 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027356:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802735a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 802735e:	f340 815b 	ble.w	8027618 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fc>
 8027362:	2201      	movs	r2, #1
 8027364:	b299      	uxth	r1, r3
 8027366:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 802736a:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 802736e:	fb93 f5f2 	sdiv	r5, r3, r2
 8027372:	b2ae      	uxth	r6, r5
 8027374:	fb02 3416 	mls	r4, r2, r6, r3
 8027378:	fb14 0101 	smlabb	r1, r4, r1, r0
 802737c:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	@ 0x36
 8027380:	fa1f f881 	uxth.w	r8, r1
 8027384:	4414      	add	r4, r2
 8027386:	3c01      	subs	r4, #1
 8027388:	fb94 f4f2 	sdiv	r4, r4, r2
 802738c:	b136      	cbz	r6, 802739c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x80>
 802738e:	9a08      	ldr	r2, [sp, #32]
 8027390:	9900      	ldr	r1, [sp, #0]
 8027392:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8027396:	ba12      	rev	r2, r2
 8027398:	4411      	add	r1, r2
 802739a:	9100      	str	r1, [sp, #0]
 802739c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 80273a0:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 80273a4:	4402      	add	r2, r0
 80273a6:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 80273aa:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80273ae:	440b      	add	r3, r1
 80273b0:	4616      	mov	r6, r2
 80273b2:	499c      	ldr	r1, [pc, #624]	@ (8027624 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 80273b4:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 80273b8:	6808      	ldr	r0, [r1, #0]
 80273ba:	9205      	str	r2, [sp, #20]
 80273bc:	6803      	ldr	r3, [r0, #0]
 80273be:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80273c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80273c4:	4798      	blx	r3
 80273c6:	f1b8 0f00 	cmp.w	r8, #0
 80273ca:	bf0c      	ite	eq
 80273cc:	4633      	moveq	r3, r6
 80273ce:	2300      	movne	r3, #0
 80273d0:	4995      	ldr	r1, [pc, #596]	@ (8027628 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 80273d2:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 80273d6:	8809      	ldrh	r1, [r1, #0]
 80273d8:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 80273dc:	fb05 f501 	mul.w	r5, r5, r1
 80273e0:	fb01 6202 	mla	r2, r1, r2, r6
 80273e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80273e8:	4410      	add	r0, r2
 80273ea:	b2a4      	uxth	r4, r4
 80273ec:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80273f0:	1942      	adds	r2, r0, r5
 80273f2:	00a4      	lsls	r4, r4, #2
 80273f4:	1d21      	adds	r1, r4, #4
 80273f6:	4290      	cmp	r0, r2
 80273f8:	9201      	str	r2, [sp, #4]
 80273fa:	9109      	str	r1, [sp, #36]	@ 0x24
 80273fc:	b29f      	uxth	r7, r3
 80273fe:	d21a      	bcs.n	8027436 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x11a>
 8027400:	2300      	movs	r3, #0
 8027402:	4641      	mov	r1, r8
 8027404:	9302      	str	r3, [sp, #8]
 8027406:	b963      	cbnz	r3, 8027422 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 8027408:	9d00      	ldr	r5, [sp, #0]
 802740a:	782a      	ldrb	r2, [r5, #0]
 802740c:	0993      	lsrs	r3, r2, #6
 802740e:	1e5c      	subs	r4, r3, #1
 8027410:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8027414:	2c02      	cmp	r4, #2
 8027416:	9202      	str	r2, [sp, #8]
 8027418:	f200 8099 	bhi.w	802754e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x232>
 802741c:	3501      	adds	r5, #1
 802741e:	9500      	str	r5, [sp, #0]
 8027420:	b29b      	uxth	r3, r3
 8027422:	b181      	cbz	r1, 8027446 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x12a>
 8027424:	428b      	cmp	r3, r1
 8027426:	f080 808c 	bcs.w	8027542 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x226>
 802742a:	1acb      	subs	r3, r1, r3
 802742c:	b299      	uxth	r1, r3
 802742e:	2300      	movs	r3, #0
 8027430:	9a01      	ldr	r2, [sp, #4]
 8027432:	4290      	cmp	r0, r2
 8027434:	d3e7      	bcc.n	8027406 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xea>
 8027436:	4b7b      	ldr	r3, [pc, #492]	@ (8027624 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8027438:	6818      	ldr	r0, [r3, #0]
 802743a:	6803      	ldr	r3, [r0, #0]
 802743c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802743e:	4798      	blx	r3
 8027440:	b011      	add	sp, #68	@ 0x44
 8027442:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027446:	2204      	movs	r2, #4
 8027448:	4615      	mov	r5, r2
 802744a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802744c:	9a02      	ldr	r2, [sp, #8]
 802744e:	42bb      	cmp	r3, r7
 8027450:	fb15 4202 	smlabb	r2, r5, r2, r4
 8027454:	9c08      	ldr	r4, [sp, #32]
 8027456:	58a5      	ldr	r5, [r4, r2]
 8027458:	ea4f 6815 	mov.w	r8, r5, lsr #24
 802745c:	f0c0 808d 	bcc.w	802757a <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x25e>
 8027460:	1bda      	subs	r2, r3, r7
 8027462:	b292      	uxth	r2, r2
 8027464:	9203      	str	r2, [sp, #12]
 8027466:	2f00      	cmp	r7, #0
 8027468:	d076      	beq.n	8027558 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 802746a:	9704      	str	r7, [sp, #16]
 802746c:	9107      	str	r1, [sp, #28]
 802746e:	9a06      	ldr	r2, [sp, #24]
 8027470:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8027474:	fb02 f408 	mul.w	r4, r2, r8
 8027478:	1c62      	adds	r2, r4, #1
 802747a:	eb02 2224 	add.w	r2, r2, r4, asr #8
 802747e:	1212      	asrs	r2, r2, #8
 8027480:	43d4      	mvns	r4, r2
 8027482:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 8027486:	b292      	uxth	r2, r2
 8027488:	b2ed      	uxtb	r5, r5
 802748a:	fa5f f98b 	uxtb.w	r9, fp
 802748e:	fa5f fa86 	uxtb.w	sl, r6
 8027492:	fb15 fc02 	smulbb	ip, r5, r2
 8027496:	fb19 fe02 	smulbb	lr, r9, r2
 802749a:	fb1a f202 	smulbb	r2, sl, r2
 802749e:	f88d 602b 	strb.w	r6, [sp, #43]	@ 0x2b
 80274a2:	b2e4      	uxtb	r4, r4
 80274a4:	fa1f fc8c 	uxth.w	ip, ip
 80274a8:	fa1f fe8e 	uxth.w	lr, lr
 80274ac:	b292      	uxth	r2, r2
 80274ae:	f1b8 0f00 	cmp.w	r8, #0
 80274b2:	d06b      	beq.n	802758c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x270>
 80274b4:	9e06      	ldr	r6, [sp, #24]
 80274b6:	2eff      	cmp	r6, #255	@ 0xff
 80274b8:	d070      	beq.n	802759c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x280>
 80274ba:	9d04      	ldr	r5, [sp, #16]
 80274bc:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80274c0:	f105 36ff 	add.w	r6, r5, #4294967295
 80274c4:	b2b5      	uxth	r5, r6
 80274c6:	9504      	str	r5, [sp, #16]
 80274c8:	f000 810e 	beq.w	80276e8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3cc>
 80274cc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80274d0:	f100 0a06 	add.w	sl, r0, #6
 80274d4:	44aa      	add	sl, r5
 80274d6:	f100 0903 	add.w	r9, r0, #3
 80274da:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 80274de:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 80274e2:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 80274e6:	fb08 c804 	mla	r8, r8, r4, ip
 80274ea:	fb06 e604 	mla	r6, r6, r4, lr
 80274ee:	fb05 2504 	mla	r5, r5, r4, r2
 80274f2:	fa1f f888 	uxth.w	r8, r8
 80274f6:	b2b6      	uxth	r6, r6
 80274f8:	f108 0b01 	add.w	fp, r8, #1
 80274fc:	b2ad      	uxth	r5, r5
 80274fe:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8027502:	f106 0b01 	add.w	fp, r6, #1
 8027506:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 802750a:	f105 0b01 	add.w	fp, r5, #1
 802750e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027512:	ea4f 2828 	mov.w	r8, r8, asr #8
 8027516:	1236      	asrs	r6, r6, #8
 8027518:	122d      	asrs	r5, r5, #8
 802751a:	f809 8c03 	strb.w	r8, [r9, #-3]
 802751e:	f809 6c02 	strb.w	r6, [r9, #-2]
 8027522:	f809 5c01 	strb.w	r5, [r9, #-1]
 8027526:	f109 0903 	add.w	r9, r9, #3
 802752a:	45ca      	cmp	sl, r9
 802752c:	d1d5      	bne.n	80274da <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 802752e:	9e04      	ldr	r6, [sp, #16]
 8027530:	3601      	adds	r6, #1
 8027532:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8027536:	4430      	add	r0, r6
 8027538:	42bb      	cmp	r3, r7
 802753a:	d20d      	bcs.n	8027558 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 802753c:	9b03      	ldr	r3, [sp, #12]
 802753e:	9f07      	ldr	r7, [sp, #28]
 8027540:	e776      	b.n	8027430 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 8027542:	1a5b      	subs	r3, r3, r1
 8027544:	b29b      	uxth	r3, r3
 8027546:	f8bd 7014 	ldrh.w	r7, [sp, #20]
 802754a:	2100      	movs	r1, #0
 802754c:	e770      	b.n	8027430 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 802754e:	462a      	mov	r2, r5
 8027550:	3202      	adds	r2, #2
 8027552:	786b      	ldrb	r3, [r5, #1]
 8027554:	9200      	str	r2, [sp, #0]
 8027556:	e764      	b.n	8027422 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x106>
 8027558:	9c05      	ldr	r4, [sp, #20]
 802755a:	4b33      	ldr	r3, [pc, #204]	@ (8027628 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 802755c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8027560:	b2a7      	uxth	r7, r4
 8027562:	881a      	ldrh	r2, [r3, #0]
 8027564:	1bc9      	subs	r1, r1, r7
 8027566:	b289      	uxth	r1, r1
 8027568:	1b12      	subs	r2, r2, r4
 802756a:	2900      	cmp	r1, #0
 802756c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027570:	9b03      	ldr	r3, [sp, #12]
 8027572:	bf18      	it	ne
 8027574:	2700      	movne	r7, #0
 8027576:	4410      	add	r0, r2
 8027578:	e75a      	b.n	8027430 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 802757a:	1afa      	subs	r2, r7, r3
 802757c:	b292      	uxth	r2, r2
 802757e:	9207      	str	r2, [sp, #28]
 8027580:	2b00      	cmp	r3, #0
 8027582:	f000 80f1 	beq.w	8027768 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>
 8027586:	e9cd 1303 	strd	r1, r3, [sp, #12]
 802758a:	e770      	b.n	802746e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x152>
 802758c:	9a04      	ldr	r2, [sp, #16]
 802758e:	3a01      	subs	r2, #1
 8027590:	b292      	uxth	r2, r2
 8027592:	3201      	adds	r2, #1
 8027594:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027598:	4410      	add	r0, r2
 802759a:	e7cd      	b.n	8027538 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 802759c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80275a0:	d044      	beq.n	802762c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x310>
 80275a2:	9d04      	ldr	r5, [sp, #16]
 80275a4:	f100 0a06 	add.w	sl, r0, #6
 80275a8:	1e6e      	subs	r6, r5, #1
 80275aa:	b2b5      	uxth	r5, r6
 80275ac:	9504      	str	r5, [sp, #16]
 80275ae:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80275b2:	44aa      	add	sl, r5
 80275b4:	f100 0903 	add.w	r9, r0, #3
 80275b8:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 80275bc:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 80275c0:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 80275c4:	fb08 c804 	mla	r8, r8, r4, ip
 80275c8:	fb06 e604 	mla	r6, r6, r4, lr
 80275cc:	fb05 2504 	mla	r5, r5, r4, r2
 80275d0:	fa1f f888 	uxth.w	r8, r8
 80275d4:	b2b6      	uxth	r6, r6
 80275d6:	f108 0b01 	add.w	fp, r8, #1
 80275da:	b2ad      	uxth	r5, r5
 80275dc:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80275e0:	f106 0b01 	add.w	fp, r6, #1
 80275e4:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 80275e8:	f105 0b01 	add.w	fp, r5, #1
 80275ec:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80275f0:	ea4f 2828 	mov.w	r8, r8, asr #8
 80275f4:	1236      	asrs	r6, r6, #8
 80275f6:	122d      	asrs	r5, r5, #8
 80275f8:	f809 8c03 	strb.w	r8, [r9, #-3]
 80275fc:	f809 6c02 	strb.w	r6, [r9, #-2]
 8027600:	f809 5c01 	strb.w	r5, [r9, #-1]
 8027604:	f109 0903 	add.w	r9, r9, #3
 8027608:	45ca      	cmp	sl, r9
 802760a:	d1d5      	bne.n	80275b8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x29c>
 802760c:	9a04      	ldr	r2, [sp, #16]
 802760e:	3201      	adds	r2, #1
 8027610:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027614:	4410      	add	r0, r2
 8027616:	e78f      	b.n	8027538 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 8027618:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 802761c:	b299      	uxth	r1, r3
 802761e:	fb94 f2f1 	sdiv	r2, r4, r1
 8027622:	e6a0      	b.n	8027366 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x4a>
 8027624:	20082f08 	.word	0x20082f08
 8027628:	20082f02 	.word	0x20082f02
 802762c:	9e04      	ldr	r6, [sp, #16]
 802762e:	1e72      	subs	r2, r6, #1
 8027630:	b292      	uxth	r2, r2
 8027632:	2a02      	cmp	r2, #2
 8027634:	920b      	str	r2, [sp, #44]	@ 0x2c
 8027636:	f240 808d 	bls.w	8027754 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>
 802763a:	f04f 0800 	mov.w	r8, #0
 802763e:	46c6      	mov	lr, r8
 8027640:	46c4      	mov	ip, r8
 8027642:	4602      	mov	r2, r0
 8027644:	4644      	mov	r4, r8
 8027646:	f369 0e07 	bfi	lr, r9, #0, #8
 802764a:	f36a 0807 	bfi	r8, sl, #0, #8
 802764e:	f365 0c07 	bfi	ip, r5, #0, #8
 8027652:	f36a 2e0f 	bfi	lr, sl, #8, #8
 8027656:	f365 280f 	bfi	r8, r5, #8, #8
 802765a:	f369 2c0f 	bfi	ip, r9, #8, #8
 802765e:	f36a 4c17 	bfi	ip, sl, #16, #8
 8027662:	f369 4817 	bfi	r8, r9, #16, #8
 8027666:	f365 4e17 	bfi	lr, r5, #16, #8
 802766a:	f36a 681f 	bfi	r8, sl, #24, #8
 802766e:	9004      	str	r0, [sp, #16]
 8027670:	f369 6e1f 	bfi	lr, r9, #24, #8
 8027674:	f365 6c1f 	bfi	ip, r5, #24, #8
 8027678:	f3c6 0a8f 	ubfx	sl, r6, #2, #16
 802767c:	3401      	adds	r4, #1
 802767e:	fa1f f984 	uxth.w	r9, r4
 8027682:	45d1      	cmp	r9, sl
 8027684:	f8c2 c000 	str.w	ip, [r2]
 8027688:	f8c2 e004 	str.w	lr, [r2, #4]
 802768c:	f8c2 8008 	str.w	r8, [r2, #8]
 8027690:	f102 020c 	add.w	r2, r2, #12
 8027694:	d3f2      	bcc.n	802767c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x360>
 8027696:	f026 0403 	bic.w	r4, r6, #3
 802769a:	b2a4      	uxth	r4, r4
 802769c:	eb04 0e44 	add.w	lr, r4, r4, lsl #1
 80276a0:	eba6 0c04 	sub.w	ip, r6, r4
 80276a4:	42a6      	cmp	r6, r4
 80276a6:	9604      	str	r6, [sp, #16]
 80276a8:	eb0e 0200 	add.w	r2, lr, r0
 80276ac:	fa1f fc8c 	uxth.w	ip, ip
 80276b0:	d014      	beq.n	80276dc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 80276b2:	f10c 34ff 	add.w	r4, ip, #4294967295
 80276b6:	f89d 602b 	ldrb.w	r6, [sp, #43]	@ 0x2b
 80276ba:	b2a4      	uxth	r4, r4
 80276bc:	7015      	strb	r5, [r2, #0]
 80276be:	f882 b001 	strb.w	fp, [r2, #1]
 80276c2:	7096      	strb	r6, [r2, #2]
 80276c4:	b154      	cbz	r4, 80276dc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 80276c6:	f1bc 0f02 	cmp.w	ip, #2
 80276ca:	70d5      	strb	r5, [r2, #3]
 80276cc:	f882 b004 	strb.w	fp, [r2, #4]
 80276d0:	7156      	strb	r6, [r2, #5]
 80276d2:	d003      	beq.n	80276dc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c0>
 80276d4:	7195      	strb	r5, [r2, #6]
 80276d6:	f882 b007 	strb.w	fp, [r2, #7]
 80276da:	7216      	strb	r6, [r2, #8]
 80276dc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80276de:	3201      	adds	r2, #1
 80276e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80276e4:	4410      	add	r0, r2
 80276e6:	e727      	b.n	8027538 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 80276e8:	eb05 0a45 	add.w	sl, r5, r5, lsl #1
 80276ec:	1d85      	adds	r5, r0, #6
 80276ee:	44aa      	add	sl, r5
 80276f0:	f100 0903 	add.w	r9, r0, #3
 80276f4:	f819 8c03 	ldrb.w	r8, [r9, #-3]
 80276f8:	f819 6c02 	ldrb.w	r6, [r9, #-2]
 80276fc:	f819 5c01 	ldrb.w	r5, [r9, #-1]
 8027700:	fb08 c804 	mla	r8, r8, r4, ip
 8027704:	fb06 e604 	mla	r6, r6, r4, lr
 8027708:	fb05 2504 	mla	r5, r5, r4, r2
 802770c:	fa1f f888 	uxth.w	r8, r8
 8027710:	b2b6      	uxth	r6, r6
 8027712:	f108 0b01 	add.w	fp, r8, #1
 8027716:	b2ad      	uxth	r5, r5
 8027718:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 802771c:	f106 0b01 	add.w	fp, r6, #1
 8027720:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8027724:	f105 0b01 	add.w	fp, r5, #1
 8027728:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802772c:	ea4f 2828 	mov.w	r8, r8, asr #8
 8027730:	1236      	asrs	r6, r6, #8
 8027732:	122d      	asrs	r5, r5, #8
 8027734:	f809 8c03 	strb.w	r8, [r9, #-3]
 8027738:	f809 6c02 	strb.w	r6, [r9, #-2]
 802773c:	f809 5c01 	strb.w	r5, [r9, #-1]
 8027740:	f109 0903 	add.w	r9, r9, #3
 8027744:	45d1      	cmp	r9, sl
 8027746:	d1d5      	bne.n	80276f4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3d8>
 8027748:	9a04      	ldr	r2, [sp, #16]
 802774a:	3201      	adds	r2, #1
 802774c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027750:	4410      	add	r0, r2
 8027752:	e6f1      	b.n	8027538 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 8027754:	46b4      	mov	ip, r6
 8027756:	4602      	mov	r2, r0
 8027758:	e7ab      	b.n	80276b2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x396>
 802775a:	4b05      	ldr	r3, [pc, #20]	@ (8027770 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x454>)
 802775c:	4a05      	ldr	r2, [pc, #20]	@ (8027774 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x458>)
 802775e:	f640 2118 	movw	r1, #2584	@ 0xa18
 8027762:	4805      	ldr	r0, [pc, #20]	@ (8027778 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x45c>)
 8027764:	f00a fec8 	bl	80324f8 <__assert_func>
 8027768:	9f07      	ldr	r7, [sp, #28]
 802776a:	4619      	mov	r1, r3
 802776c:	e660      	b.n	8027430 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x114>
 802776e:	bf00      	nop
 8027770:	080363d4 	.word	0x080363d4
 8027774:	08037a60 	.word	0x08037a60
 8027778:	080362e0 	.word	0x080362e0

0802777c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>:
 802777c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027780:	b09d      	sub	sp, #116	@ 0x74
 8027782:	920e      	str	r2, [sp, #56]	@ 0x38
 8027784:	461c      	mov	r4, r3
 8027786:	7812      	ldrb	r2, [r2, #0]
 8027788:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 802778c:	9114      	str	r1, [sp, #80]	@ 0x50
 802778e:	9304      	str	r3, [sp, #16]
 8027790:	2a00      	cmp	r2, #0
 8027792:	f040 8207 	bne.w	8027ba4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x428>
 8027796:	b913      	cbnz	r3, 802779e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x22>
 8027798:	b01d      	add	sp, #116	@ 0x74
 802779a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802779e:	6861      	ldr	r1, [r4, #4]
 80277a0:	4681      	mov	r9, r0
 80277a2:	6820      	ldr	r0, [r4, #0]
 80277a4:	ab18      	add	r3, sp, #96	@ 0x60
 80277a6:	c303      	stmia	r3!, {r0, r1}
 80277a8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80277aa:	6818      	ldr	r0, [r3, #0]
 80277ac:	6859      	ldr	r1, [r3, #4]
 80277ae:	ab1a      	add	r3, sp, #104	@ 0x68
 80277b0:	c303      	stmia	r3!, {r0, r1}
 80277b2:	a818      	add	r0, sp, #96	@ 0x60
 80277b4:	f7e5 fac4 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80277b8:	4621      	mov	r1, r4
 80277ba:	a81a      	add	r0, sp, #104	@ 0x68
 80277bc:	f7e5 fae8 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80277c0:	f9bd 1064 	ldrsh.w	r1, [sp, #100]	@ 0x64
 80277c4:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80277c8:	f340 8151 	ble.w	8027a6e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2f2>
 80277cc:	2301      	movs	r3, #1
 80277ce:	b289      	uxth	r1, r1
 80277d0:	9316      	str	r3, [sp, #88]	@ 0x58
 80277d2:	f9bd 006a 	ldrsh.w	r0, [sp, #106]	@ 0x6a
 80277d6:	f9bd 2066 	ldrsh.w	r2, [sp, #102]	@ 0x66
 80277da:	fb90 f4f3 	sdiv	r4, r0, r3
 80277de:	441a      	add	r2, r3
 80277e0:	3a01      	subs	r2, #1
 80277e2:	fb92 f2f3 	sdiv	r2, r2, r3
 80277e6:	b2a4      	uxth	r4, r4
 80277e8:	fb03 0314 	mls	r3, r3, r4, r0
 80277ec:	9415      	str	r4, [sp, #84]	@ 0x54
 80277ee:	f8bd 4068 	ldrh.w	r4, [sp, #104]	@ 0x68
 80277f2:	f8bd 6060 	ldrh.w	r6, [sp, #96]	@ 0x60
 80277f6:	fb13 4101 	smlabb	r1, r3, r1, r4
 80277fa:	f8bd 5062 	ldrh.w	r5, [sp, #98]	@ 0x62
 80277fe:	4bba      	ldr	r3, [pc, #744]	@ (8027ae8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>)
 8027800:	4434      	add	r4, r6
 8027802:	4405      	add	r5, r0
 8027804:	6818      	ldr	r0, [r3, #0]
 8027806:	f8ad 4068 	strh.w	r4, [sp, #104]	@ 0x68
 802780a:	f8ad 506a 	strh.w	r5, [sp, #106]	@ 0x6a
 802780e:	f9bd 606c 	ldrsh.w	r6, [sp, #108]	@ 0x6c
 8027812:	6803      	ldr	r3, [r0, #0]
 8027814:	3201      	adds	r2, #1
 8027816:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8027818:	9609      	str	r6, [sp, #36]	@ 0x24
 802781a:	fa1f f881 	uxth.w	r8, r1
 802781e:	b294      	uxth	r4, r2
 8027820:	f9bd 506e 	ldrsh.w	r5, [sp, #110]	@ 0x6e
 8027824:	4798      	blx	r3
 8027826:	2200      	movs	r2, #0
 8027828:	f1b8 0f00 	cmp.w	r8, #0
 802782c:	bf0c      	ite	eq
 802782e:	4633      	moveq	r3, r6
 8027830:	2300      	movne	r3, #0
 8027832:	49ae      	ldr	r1, [pc, #696]	@ (8027aec <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x370>)
 8027834:	9213      	str	r2, [sp, #76]	@ 0x4c
 8027836:	8809      	ldrh	r1, [r1, #0]
 8027838:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 802783c:	f9bd 6068 	ldrsh.w	r6, [sp, #104]	@ 0x68
 8027840:	fb01 f505 	mul.w	r5, r1, r5
 8027844:	fb01 6202 	mla	r2, r1, r2, r6
 8027848:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802784c:	1882      	adds	r2, r0, r2
 802784e:	b29b      	uxth	r3, r3
 8027850:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027854:	9200      	str	r2, [sp, #0]
 8027856:	9302      	str	r3, [sp, #8]
 8027858:	442a      	add	r2, r5
 802785a:	f109 030e 	add.w	r3, r9, #14
 802785e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8027860:	4647      	mov	r7, r8
 8027862:	4613      	mov	r3, r2
 8027864:	00a4      	lsls	r4, r4, #2
 8027866:	1d21      	adds	r1, r4, #4
 8027868:	9111      	str	r1, [sp, #68]	@ 0x44
 802786a:	9206      	str	r2, [sp, #24]
 802786c:	9a00      	ldr	r2, [sp, #0]
 802786e:	4293      	cmp	r3, r2
 8027870:	f240 80f5 	bls.w	8027a5e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8027874:	2301      	movs	r3, #1
 8027876:	2600      	movs	r6, #0
 8027878:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802787a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802787c:	9307      	str	r3, [sp, #28]
 802787e:	fa10 f282 	uxtah	r2, r0, r2
 8027882:	0092      	lsls	r2, r2, #2
 8027884:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8027886:	3204      	adds	r2, #4
 8027888:	4410      	add	r0, r2
 802788a:	7883      	ldrb	r3, [r0, #2]
 802788c:	7845      	ldrb	r5, [r0, #1]
 802788e:	021b      	lsls	r3, r3, #8
 8027890:	78c0      	ldrb	r0, [r0, #3]
 8027892:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8027896:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8027898:	4304      	orrs	r4, r0
 802789a:	1928      	adds	r0, r5, r4
 802789c:	7843      	ldrb	r3, [r0, #1]
 802789e:	3001      	adds	r0, #1
 80278a0:	9610      	str	r6, [sp, #64]	@ 0x40
 80278a2:	9003      	str	r0, [sp, #12]
 80278a4:	4630      	mov	r0, r6
 80278a6:	2601      	movs	r6, #1
 80278a8:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 80278ac:	46b0      	mov	r8, r6
 80278ae:	fbb7 f1f1 	udiv	r1, r7, r1
 80278b2:	5d2c      	ldrb	r4, [r5, r4]
 80278b4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80278b6:	021b      	lsls	r3, r3, #8
 80278b8:	5caa      	ldrb	r2, [r5, r2]
 80278ba:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80278bc:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 80278c0:	431c      	orrs	r4, r3
 80278c2:	920b      	str	r2, [sp, #44]	@ 0x2c
 80278c4:	1a69      	subs	r1, r5, r1
 80278c6:	3201      	adds	r2, #1
 80278c8:	f889 400d 	strb.w	r4, [r9, #13]
 80278cc:	9205      	str	r2, [sp, #20]
 80278ce:	b2a4      	uxth	r4, r4
 80278d0:	b28a      	uxth	r2, r1
 80278d2:	9408      	str	r4, [sp, #32]
 80278d4:	9212      	str	r2, [sp, #72]	@ 0x48
 80278d6:	2f00      	cmp	r7, #0
 80278d8:	d034      	beq.n	8027944 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1c8>
 80278da:	42be      	cmp	r6, r7
 80278dc:	f080 80cf 	bcs.w	8027a7e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x302>
 80278e0:	1bbf      	subs	r7, r7, r6
 80278e2:	b2bf      	uxth	r7, r7
 80278e4:	9b06      	ldr	r3, [sp, #24]
 80278e6:	9a00      	ldr	r2, [sp, #0]
 80278e8:	4293      	cmp	r3, r2
 80278ea:	f240 80b8 	bls.w	8027a5e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 80278ee:	9803      	ldr	r0, [sp, #12]
 80278f0:	f1c8 0107 	rsb	r1, r8, #7
 80278f4:	7842      	ldrb	r2, [r0, #1]
 80278f6:	7803      	ldrb	r3, [r0, #0]
 80278f8:	408a      	lsls	r2, r1
 80278fa:	fa43 f308 	asr.w	r3, r3, r8
 80278fe:	0052      	lsls	r2, r2, #1
 8027900:	f108 0801 	add.w	r8, r8, #1
 8027904:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8027908:	b2db      	uxtb	r3, r3
 802790a:	fa5f f888 	uxtb.w	r8, r8
 802790e:	4313      	orrs	r3, r2
 8027910:	f1b8 0f08 	cmp.w	r8, #8
 8027914:	b29a      	uxth	r2, r3
 8027916:	f000 80e0 	beq.w	8027ada <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x35e>
 802791a:	3001      	adds	r0, #1
 802791c:	9003      	str	r0, [sp, #12]
 802791e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8027920:	4291      	cmp	r1, r2
 8027922:	f0c0 80bc 	bcc.w	8027a9e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x322>
 8027926:	9905      	ldr	r1, [sp, #20]
 8027928:	b2db      	uxtb	r3, r3
 802792a:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 802792e:	f889 300d 	strb.w	r3, [r9, #13]
 8027932:	f04f 0601 	mov.w	r6, #1
 8027936:	f0c0 8121 	bcc.w	8027b7c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x400>
 802793a:	e9cd 6207 	strd	r6, r2, [sp, #28]
 802793e:	2000      	movs	r0, #0
 8027940:	2f00      	cmp	r7, #0
 8027942:	d1ca      	bne.n	80278da <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 8027944:	9b02      	ldr	r3, [sp, #8]
 8027946:	429e      	cmp	r6, r3
 8027948:	461a      	mov	r2, r3
 802794a:	f0c0 80f0 	bcc.w	8027b2e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3b2>
 802794e:	1af3      	subs	r3, r6, r3
 8027950:	b29b      	uxth	r3, r3
 8027952:	930a      	str	r3, [sp, #40]	@ 0x28
 8027954:	2a00      	cmp	r2, #0
 8027956:	f000 80cb 	beq.w	8027af0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>
 802795a:	4694      	mov	ip, r2
 802795c:	970f      	str	r7, [sp, #60]	@ 0x3c
 802795e:	9b00      	ldr	r3, [sp, #0]
 8027960:	eb00 0e0c 	add.w	lr, r0, ip
 8027964:	960c      	str	r6, [sp, #48]	@ 0x30
 8027966:	970d      	str	r7, [sp, #52]	@ 0x34
 8027968:	fa1f fe8e 	uxth.w	lr, lr
 802796c:	1cdd      	adds	r5, r3, #3
 802796e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8027970:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8027972:	e037      	b.n	80279e4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x268>
 8027974:	9a04      	ldr	r2, [sp, #16]
 8027976:	9b01      	ldr	r3, [sp, #4]
 8027978:	fb02 f101 	mul.w	r1, r2, r1
 802797c:	1c4a      	adds	r2, r1, #1
 802797e:	eb02 2121 	add.w	r1, r2, r1, asr #8
 8027982:	1209      	asrs	r1, r1, #8
 8027984:	43ca      	mvns	r2, r1
 8027986:	b289      	uxth	r1, r1
 8027988:	fb13 f301 	smulbb	r3, r3, r1
 802798c:	fb1b fb01 	smulbb	fp, fp, r1
 8027990:	fb1a f101 	smulbb	r1, sl, r1
 8027994:	f815 ac03 	ldrb.w	sl, [r5, #-3]
 8027998:	b2d2      	uxtb	r2, r2
 802799a:	fb0a 3302 	mla	r3, sl, r2, r3
 802799e:	f815 4c02 	ldrb.w	r4, [r5, #-2]
 80279a2:	f815 ac01 	ldrb.w	sl, [r5, #-1]
 80279a6:	fb04 b402 	mla	r4, r4, r2, fp
 80279aa:	fb0a 1102 	mla	r1, sl, r2, r1
 80279ae:	b29b      	uxth	r3, r3
 80279b0:	b2a4      	uxth	r4, r4
 80279b2:	b289      	uxth	r1, r1
 80279b4:	f103 0a01 	add.w	sl, r3, #1
 80279b8:	f104 0b01 	add.w	fp, r4, #1
 80279bc:	1c4a      	adds	r2, r1, #1
 80279be:	eb0a 2313 	add.w	r3, sl, r3, lsr #8
 80279c2:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 80279c6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80279ca:	121b      	asrs	r3, r3, #8
 80279cc:	1224      	asrs	r4, r4, #8
 80279ce:	1209      	asrs	r1, r1, #8
 80279d0:	f805 3c03 	strb.w	r3, [r5, #-3]
 80279d4:	f805 4c02 	strb.w	r4, [r5, #-2]
 80279d8:	f805 1c01 	strb.w	r1, [r5, #-1]
 80279dc:	4570      	cmp	r0, lr
 80279de:	f105 0503 	add.w	r5, r5, #3
 80279e2:	d024      	beq.n	8027a2e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 80279e4:	2204      	movs	r2, #4
 80279e6:	eb09 0300 	add.w	r3, r9, r0
 80279ea:	7b5b      	ldrb	r3, [r3, #13]
 80279ec:	3001      	adds	r0, #1
 80279ee:	fb12 6303 	smlabb	r3, r2, r3, r6
 80279f2:	58fb      	ldr	r3, [r7, r3]
 80279f4:	b280      	uxth	r0, r0
 80279f6:	0e19      	lsrs	r1, r3, #24
 80279f8:	d0f0      	beq.n	80279dc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x260>
 80279fa:	f3c3 2407 	ubfx	r4, r3, #8, #8
 80279fe:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8027a02:	29ff      	cmp	r1, #255	@ 0xff
 8027a04:	b2db      	uxtb	r3, r3
 8027a06:	fa5f fb84 	uxtb.w	fp, r4
 8027a0a:	9301      	str	r3, [sp, #4]
 8027a0c:	fa5f fa82 	uxtb.w	sl, r2
 8027a10:	d1b0      	bne.n	8027974 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 8027a12:	9b04      	ldr	r3, [sp, #16]
 8027a14:	2bff      	cmp	r3, #255	@ 0xff
 8027a16:	d1ad      	bne.n	8027974 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 8027a18:	9b01      	ldr	r3, [sp, #4]
 8027a1a:	4570      	cmp	r0, lr
 8027a1c:	f805 3c03 	strb.w	r3, [r5, #-3]
 8027a20:	f805 4c02 	strb.w	r4, [r5, #-2]
 8027a24:	f805 2c01 	strb.w	r2, [r5, #-1]
 8027a28:	f105 0503 	add.w	r5, r5, #3
 8027a2c:	d1da      	bne.n	80279e4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x268>
 8027a2e:	e9dd 670c 	ldrd	r6, r7, [sp, #48]	@ 0x30
 8027a32:	f10c 3cff 	add.w	ip, ip, #4294967295
 8027a36:	fa1f fc8c 	uxth.w	ip, ip
 8027a3a:	9b00      	ldr	r3, [sp, #0]
 8027a3c:	f10c 0c01 	add.w	ip, ip, #1
 8027a40:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8027a44:	4463      	add	r3, ip
 8027a46:	9300      	str	r3, [sp, #0]
 8027a48:	9b02      	ldr	r3, [sp, #8]
 8027a4a:	429e      	cmp	r6, r3
 8027a4c:	d251      	bcs.n	8027af2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x376>
 8027a4e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027a50:	9a00      	ldr	r2, [sp, #0]
 8027a52:	9302      	str	r3, [sp, #8]
 8027a54:	9b06      	ldr	r3, [sp, #24]
 8027a56:	4670      	mov	r0, lr
 8027a58:	4293      	cmp	r3, r2
 8027a5a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8027a5c:	d81b      	bhi.n	8027a96 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x31a>
 8027a5e:	4b22      	ldr	r3, [pc, #136]	@ (8027ae8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>)
 8027a60:	6818      	ldr	r0, [r3, #0]
 8027a62:	6803      	ldr	r3, [r0, #0]
 8027a64:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027a66:	4798      	blx	r3
 8027a68:	b01d      	add	sp, #116	@ 0x74
 8027a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027a6e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8027a72:	b289      	uxth	r1, r1
 8027a74:	fb93 f3f1 	sdiv	r3, r3, r1
 8027a78:	b29a      	uxth	r2, r3
 8027a7a:	9216      	str	r2, [sp, #88]	@ 0x58
 8027a7c:	e6a9      	b.n	80277d2 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x56>
 8027a7e:	1bf6      	subs	r6, r6, r7
 8027a80:	4438      	add	r0, r7
 8027a82:	2700      	movs	r7, #0
 8027a84:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8027a88:	b2b6      	uxth	r6, r6
 8027a8a:	b280      	uxth	r0, r0
 8027a8c:	9302      	str	r3, [sp, #8]
 8027a8e:	9b06      	ldr	r3, [sp, #24]
 8027a90:	9a00      	ldr	r2, [sp, #0]
 8027a92:	4293      	cmp	r3, r2
 8027a94:	d9e3      	bls.n	8027a5e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8027a96:	2e00      	cmp	r6, #0
 8027a98:	f47f af1d 	bne.w	80278d6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15a>
 8027a9c:	e727      	b.n	80278ee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x172>
 8027a9e:	9b05      	ldr	r3, [sp, #20]
 8027aa0:	429a      	cmp	r2, r3
 8027aa2:	d34d      	bcc.n	8027b40 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 8027aa4:	9807      	ldr	r0, [sp, #28]
 8027aa6:	f899 100d 	ldrb.w	r1, [r9, #13]
 8027aaa:	eb09 0300 	add.w	r3, r9, r0
 8027aae:	7359      	strb	r1, [r3, #13]
 8027ab0:	f899 300d 	ldrb.w	r3, [r9, #13]
 8027ab4:	1c41      	adds	r1, r0, #1
 8027ab6:	b28e      	uxth	r6, r1
 8027ab8:	9c05      	ldr	r4, [sp, #20]
 8027aba:	9d08      	ldr	r5, [sp, #32]
 8027abc:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 8027ac0:	3401      	adds	r4, #1
 8027ac2:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 8027ac6:	b2a3      	uxth	r3, r4
 8027ac8:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 8027acc:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 8027ad0:	9305      	str	r3, [sp, #20]
 8027ad2:	e9cd 6207 	strd	r6, r2, [sp, #28]
 8027ad6:	2000      	movs	r0, #0
 8027ad8:	e6fd      	b.n	80278d6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x15a>
 8027ada:	4601      	mov	r1, r0
 8027adc:	3102      	adds	r1, #2
 8027ade:	f04f 0800 	mov.w	r8, #0
 8027ae2:	9103      	str	r1, [sp, #12]
 8027ae4:	e71b      	b.n	802791e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 8027ae6:	bf00      	nop
 8027ae8:	20082f08 	.word	0x20082f08
 8027aec:	20082f02 	.word	0x20082f02
 8027af0:	4686      	mov	lr, r0
 8027af2:	4b30      	ldr	r3, [pc, #192]	@ (8027bb4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 8027af4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8027af6:	881b      	ldrh	r3, [r3, #0]
 8027af8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8027afa:	1a5b      	subs	r3, r3, r1
 8027afc:	9900      	ldr	r1, [sp, #0]
 8027afe:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027b02:	4419      	add	r1, r3
 8027b04:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8027b06:	3201      	adds	r2, #1
 8027b08:	429a      	cmp	r2, r3
 8027b0a:	9210      	str	r2, [sp, #64]	@ 0x40
 8027b0c:	9100      	str	r1, [sp, #0]
 8027b0e:	d038      	beq.n	8027b82 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x406>
 8027b10:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8027b14:	f8bd 7064 	ldrh.w	r7, [sp, #100]	@ 0x64
 8027b18:	4670      	mov	r0, lr
 8027b1a:	1aff      	subs	r7, r7, r3
 8027b1c:	b2bf      	uxth	r7, r7
 8027b1e:	2f00      	cmp	r7, #0
 8027b20:	bf18      	it	ne
 8027b22:	2300      	movne	r3, #0
 8027b24:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8027b26:	9302      	str	r3, [sp, #8]
 8027b28:	bf08      	it	eq
 8027b2a:	2700      	moveq	r7, #0
 8027b2c:	e7af      	b.n	8027a8e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x312>
 8027b2e:	1b9b      	subs	r3, r3, r6
 8027b30:	b29b      	uxth	r3, r3
 8027b32:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027b34:	2e00      	cmp	r6, #0
 8027b36:	f43f aed5 	beq.w	80278e4 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x168>
 8027b3a:	970a      	str	r7, [sp, #40]	@ 0x28
 8027b3c:	46b4      	mov	ip, r6
 8027b3e:	e70e      	b.n	802795e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8027b40:	eb09 0382 	add.w	r3, r9, r2, lsl #2
 8027b44:	f893 604f 	ldrb.w	r6, [r3, #79]	@ 0x4f
 8027b48:	4613      	mov	r3, r2
 8027b4a:	2e01      	cmp	r6, #1
 8027b4c:	d90d      	bls.n	8027b6a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ee>
 8027b4e:	f106 010d 	add.w	r1, r6, #13
 8027b52:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8027b54:	4449      	add	r1, r9
 8027b56:	eb09 0383 	add.w	r3, r9, r3, lsl #2
 8027b5a:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8027b5e:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8027b62:	428c      	cmp	r4, r1
 8027b64:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8027b68:	d1f5      	bne.n	8027b56 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x3da>
 8027b6a:	9905      	ldr	r1, [sp, #20]
 8027b6c:	b2db      	uxtb	r3, r3
 8027b6e:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8027b72:	f889 300d 	strb.w	r3, [r9, #13]
 8027b76:	b2b6      	uxth	r6, r6
 8027b78:	f4bf aedf 	bcs.w	802793a <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 8027b7c:	9907      	ldr	r1, [sp, #28]
 8027b7e:	3101      	adds	r1, #1
 8027b80:	e79a      	b.n	8027ab8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x33c>
 8027b82:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8027b86:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8027b8a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8027b8c:	1aff      	subs	r7, r7, r3
 8027b8e:	b2bf      	uxth	r7, r7
 8027b90:	2f00      	cmp	r7, #0
 8027b92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027b94:	bf18      	it	ne
 8027b96:	2300      	movne	r3, #0
 8027b98:	3201      	adds	r2, #1
 8027b9a:	b29b      	uxth	r3, r3
 8027b9c:	9302      	str	r3, [sp, #8]
 8027b9e:	9213      	str	r2, [sp, #76]	@ 0x4c
 8027ba0:	9b06      	ldr	r3, [sp, #24]
 8027ba2:	e663      	b.n	802786c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0xf0>
 8027ba4:	4b04      	ldr	r3, [pc, #16]	@ (8027bb8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x43c>)
 8027ba6:	4a05      	ldr	r2, [pc, #20]	@ (8027bbc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x440>)
 8027ba8:	f640 21ae 	movw	r1, #2734	@ 0xaae
 8027bac:	4804      	ldr	r0, [pc, #16]	@ (8027bc0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h+0x444>)
 8027bae:	f00a fca3 	bl	80324f8 <__assert_func>
 8027bb2:	bf00      	nop
 8027bb4:	20082f02 	.word	0x20082f02
 8027bb8:	080363d4 	.word	0x080363d4
 8027bbc:	08037d2c 	.word	0x08037d2c
 8027bc0:	080362e0 	.word	0x080362e0

08027bc4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8027bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027bc8:	4617      	mov	r7, r2
 8027bca:	b095      	sub	sp, #84	@ 0x54
 8027bcc:	8812      	ldrh	r2, [r2, #0]
 8027bce:	4688      	mov	r8, r1
 8027bd0:	f89d 107c 	ldrb.w	r1, [sp, #124]	@ 0x7c
 8027bd4:	2a01      	cmp	r2, #1
 8027bd6:	461c      	mov	r4, r3
 8027bd8:	910d      	str	r1, [sp, #52]	@ 0x34
 8027bda:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8027bdc:	f040 8105 	bne.w	8027dea <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x226>
 8027be0:	6820      	ldr	r0, [r4, #0]
 8027be2:	6861      	ldr	r1, [r4, #4]
 8027be4:	aa10      	add	r2, sp, #64	@ 0x40
 8027be6:	c203      	stmia	r2!, {r0, r1}
 8027be8:	6818      	ldr	r0, [r3, #0]
 8027bea:	6859      	ldr	r1, [r3, #4]
 8027bec:	aa12      	add	r2, sp, #72	@ 0x48
 8027bee:	c203      	stmia	r2!, {r0, r1}
 8027bf0:	a810      	add	r0, sp, #64	@ 0x40
 8027bf2:	f7e5 f8a5 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027bf6:	4621      	mov	r1, r4
 8027bf8:	a812      	add	r0, sp, #72	@ 0x48
 8027bfa:	f7e5 f8c9 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027bfe:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 8027c02:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 8027c06:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8027c0a:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 8027c0e:	487a      	ldr	r0, [pc, #488]	@ (8027df8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027c10:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 8027c14:	4422      	add	r2, r4
 8027c16:	442b      	add	r3, r5
 8027c18:	6800      	ldr	r0, [r0, #0]
 8027c1a:	fb11 4105 	smlabb	r1, r1, r5, r4
 8027c1e:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8027c22:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 8027c26:	6802      	ldr	r2, [r0, #0]
 8027c28:	4c74      	ldr	r4, [pc, #464]	@ (8027dfc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 8027c2a:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 8027c2e:	4488      	add	r8, r1
 8027c30:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 8027c34:	42a3      	cmp	r3, r4
 8027c36:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	@ 0x4c
 8027c3a:	910c      	str	r1, [sp, #48]	@ 0x30
 8027c3c:	f040 809f 	bne.w	8027d7e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8027c40:	6841      	ldr	r1, [r0, #4]
 8027c42:	4c6f      	ldr	r4, [pc, #444]	@ (8027e00 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 8027c44:	680b      	ldr	r3, [r1, #0]
 8027c46:	699b      	ldr	r3, [r3, #24]
 8027c48:	42a3      	cmp	r3, r4
 8027c4a:	f040 80c0 	bne.w	8027dce <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20a>
 8027c4e:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8027c50:	4798      	blx	r3
 8027c52:	4a6c      	ldr	r2, [pc, #432]	@ (8027e04 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027c54:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 8027c58:	8814      	ldrh	r4, [r2, #0]
 8027c5a:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 8027c5e:	fb04 2303 	mla	r3, r4, r3, r2
 8027c62:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027c66:	4418      	add	r0, r3
 8027c68:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027c6a:	2b00      	cmp	r3, #0
 8027c6c:	dd67      	ble.n	8027d3e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x17a>
 8027c6e:	2300      	movs	r3, #0
 8027c70:	f04f 0903 	mov.w	r9, #3
 8027c74:	2104      	movs	r1, #4
 8027c76:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8027c78:	930b      	str	r3, [sp, #44]	@ 0x2c
 8027c7a:	eb0a 034a 	add.w	r3, sl, sl, lsl #1
 8027c7e:	930e      	str	r3, [sp, #56]	@ 0x38
 8027c80:	f1c5 02ff 	rsb	r2, r5, #255	@ 0xff
 8027c84:	444b      	add	r3, r9
 8027c86:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027c88:	b292      	uxth	r2, r2
 8027c8a:	fa1f fc85 	uxth.w	ip, r5
 8027c8e:	f8cd a028 	str.w	sl, [sp, #40]	@ 0x28
 8027c92:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027c94:	2b00      	cmp	r3, #0
 8027c96:	dd43      	ble.n	8027d20 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x15c>
 8027c98:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8027c9a:	2bff      	cmp	r3, #255	@ 0xff
 8027c9c:	d057      	beq.n	8027d4e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x18a>
 8027c9e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027ca0:	1cc5      	adds	r5, r0, #3
 8027ca2:	f108 3eff 	add.w	lr, r8, #4294967295
 8027ca6:	eb00 0a03 	add.w	sl, r0, r3
 8027caa:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 8027cae:	f815 6c03 	ldrb.w	r6, [r5, #-3]
 8027cb2:	fb19 1303 	smlabb	r3, r9, r3, r1
 8027cb6:	fb16 f402 	smulbb	r4, r6, r2
 8027cba:	5cfe      	ldrb	r6, [r7, r3]
 8027cbc:	443b      	add	r3, r7
 8027cbe:	fb06 460c 	mla	r6, r6, ip, r4
 8027cc2:	b2b6      	uxth	r6, r6
 8027cc4:	f815 4c02 	ldrb.w	r4, [r5, #-2]
 8027cc8:	f106 0b01 	add.w	fp, r6, #1
 8027ccc:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8027cd0:	1236      	asrs	r6, r6, #8
 8027cd2:	fb14 fb02 	smulbb	fp, r4, r2
 8027cd6:	f805 6c03 	strb.w	r6, [r5, #-3]
 8027cda:	785c      	ldrb	r4, [r3, #1]
 8027cdc:	f815 6c01 	ldrb.w	r6, [r5, #-1]
 8027ce0:	fb04 b40c 	mla	r4, r4, ip, fp
 8027ce4:	b2a4      	uxth	r4, r4
 8027ce6:	f104 0b01 	add.w	fp, r4, #1
 8027cea:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8027cee:	1224      	asrs	r4, r4, #8
 8027cf0:	fb16 f602 	smulbb	r6, r6, r2
 8027cf4:	f805 4c02 	strb.w	r4, [r5, #-2]
 8027cf8:	789b      	ldrb	r3, [r3, #2]
 8027cfa:	3503      	adds	r5, #3
 8027cfc:	fb03 630c 	mla	r3, r3, ip, r6
 8027d00:	b29b      	uxth	r3, r3
 8027d02:	1c5c      	adds	r4, r3, #1
 8027d04:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8027d08:	121b      	asrs	r3, r3, #8
 8027d0a:	f805 3c04 	strb.w	r3, [r5, #-4]
 8027d0e:	45aa      	cmp	sl, r5
 8027d10:	d1cb      	bne.n	8027caa <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xe6>
 8027d12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027d14:	4418      	add	r0, r3
 8027d16:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027d18:	4498      	add	r8, r3
 8027d1a:	4b3a      	ldr	r3, [pc, #232]	@ (8027e04 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027d1c:	881c      	ldrh	r4, [r3, #0]
 8027d1e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027d20:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	@ 0x44
 8027d24:	eba4 0e03 	sub.w	lr, r4, r3
 8027d28:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8027d2a:	1aed      	subs	r5, r5, r3
 8027d2c:	eb0e 034e 	add.w	r3, lr, lr, lsl #1
 8027d30:	4418      	add	r0, r3
 8027d32:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027d34:	3601      	adds	r6, #1
 8027d36:	42b3      	cmp	r3, r6
 8027d38:	960b      	str	r6, [sp, #44]	@ 0x2c
 8027d3a:	44a8      	add	r8, r5
 8027d3c:	d1a9      	bne.n	8027c92 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xce>
 8027d3e:	4b2e      	ldr	r3, [pc, #184]	@ (8027df8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027d40:	6818      	ldr	r0, [r3, #0]
 8027d42:	6803      	ldr	r3, [r0, #0]
 8027d44:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027d46:	4798      	blx	r3
 8027d48:	b015      	add	sp, #84	@ 0x54
 8027d4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027d4e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027d50:	1cc4      	adds	r4, r0, #3
 8027d52:	f108 35ff 	add.w	r5, r8, #4294967295
 8027d56:	eb00 0e03 	add.w	lr, r0, r3
 8027d5a:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 8027d5e:	3403      	adds	r4, #3
 8027d60:	fb19 1303 	smlabb	r3, r9, r3, r1
 8027d64:	5cfe      	ldrb	r6, [r7, r3]
 8027d66:	443b      	add	r3, r7
 8027d68:	f804 6c06 	strb.w	r6, [r4, #-6]
 8027d6c:	785e      	ldrb	r6, [r3, #1]
 8027d6e:	f804 6c05 	strb.w	r6, [r4, #-5]
 8027d72:	789b      	ldrb	r3, [r3, #2]
 8027d74:	f804 3c04 	strb.w	r3, [r4, #-4]
 8027d78:	45a6      	cmp	lr, r4
 8027d7a:	d1ee      	bne.n	8027d5a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x196>
 8027d7c:	e7c9      	b.n	8027d12 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x14e>
 8027d7e:	4798      	blx	r3
 8027d80:	4603      	mov	r3, r0
 8027d82:	2b01      	cmp	r3, #1
 8027d84:	d127      	bne.n	8027dd6 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8027d86:	4a20      	ldr	r2, [pc, #128]	@ (8027e08 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8027d88:	6810      	ldr	r0, [r2, #0]
 8027d8a:	b340      	cbz	r0, 8027dde <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 8027d8c:	f04f 0c0b 	mov.w	ip, #11
 8027d90:	2600      	movs	r6, #0
 8027d92:	4a1c      	ldr	r2, [pc, #112]	@ (8027e04 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8027d94:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8027d98:	8814      	ldrh	r4, [r2, #0]
 8027d9a:	fa1f f28a 	uxth.w	r2, sl
 8027d9e:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8027da2:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 8027da6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8027da8:	9406      	str	r4, [sp, #24]
 8027daa:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8027dae:	9308      	str	r3, [sp, #32]
 8027db0:	9204      	str	r2, [sp, #16]
 8027db2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8027db6:	463a      	mov	r2, r7
 8027db8:	4641      	mov	r1, r8
 8027dba:	f8cd c01c 	str.w	ip, [sp, #28]
 8027dbe:	9605      	str	r6, [sp, #20]
 8027dc0:	9503      	str	r5, [sp, #12]
 8027dc2:	9400      	str	r4, [sp, #0]
 8027dc4:	f7f8 ff30 	bl	8020c28 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8027dc8:	b015      	add	sp, #84	@ 0x54
 8027dca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027dce:	4608      	mov	r0, r1
 8027dd0:	4798      	blx	r3
 8027dd2:	4603      	mov	r3, r0
 8027dd4:	e7d5      	b.n	8027d82 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 8027dd6:	4b08      	ldr	r3, [pc, #32]	@ (8027df8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8027dd8:	6818      	ldr	r0, [r3, #0]
 8027dda:	6802      	ldr	r2, [r0, #0]
 8027ddc:	e737      	b.n	8027c4e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8027dde:	4b0b      	ldr	r3, [pc, #44]	@ (8027e0c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8027de0:	4a0b      	ldr	r2, [pc, #44]	@ (8027e10 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8027de2:	217c      	movs	r1, #124	@ 0x7c
 8027de4:	480b      	ldr	r0, [pc, #44]	@ (8027e14 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8027de6:	f00a fb87 	bl	80324f8 <__assert_func>
 8027dea:	4b0b      	ldr	r3, [pc, #44]	@ (8027e18 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 8027dec:	4a0b      	ldr	r2, [pc, #44]	@ (8027e1c <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8027dee:	f640 3191 	movw	r1, #2961	@ 0xb91
 8027df2:	480b      	ldr	r0, [pc, #44]	@ (8027e20 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8027df4:	f00a fb80 	bl	80324f8 <__assert_func>
 8027df8:	20082f08 	.word	0x20082f08
 8027dfc:	0800121d 	.word	0x0800121d
 8027e00:	0800bae5 	.word	0x0800bae5
 8027e04:	20082f02 	.word	0x20082f02
 8027e08:	200833a8 	.word	0x200833a8
 8027e0c:	0803623c 	.word	0x0803623c
 8027e10:	08036aa8 	.word	0x08036aa8
 8027e14:	08036264 	.word	0x08036264
 8027e18:	08036304 	.word	0x08036304
 8027e1c:	08036fc8 	.word	0x08036fc8
 8027e20:	080362e0 	.word	0x080362e0

08027e24 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8027e24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027e28:	4615      	mov	r5, r2
 8027e2a:	7812      	ldrb	r2, [r2, #0]
 8027e2c:	b08b      	sub	sp, #44	@ 0x2c
 8027e2e:	2a01      	cmp	r2, #1
 8027e30:	461f      	mov	r7, r3
 8027e32:	f89d 6054 	ldrb.w	r6, [sp, #84]	@ 0x54
 8027e36:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8027e38:	f040 8213 	bne.w	8028262 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x43e>
 8027e3c:	6838      	ldr	r0, [r7, #0]
 8027e3e:	468a      	mov	sl, r1
 8027e40:	6879      	ldr	r1, [r7, #4]
 8027e42:	aa06      	add	r2, sp, #24
 8027e44:	c203      	stmia	r2!, {r0, r1}
 8027e46:	6818      	ldr	r0, [r3, #0]
 8027e48:	6859      	ldr	r1, [r3, #4]
 8027e4a:	aa08      	add	r2, sp, #32
 8027e4c:	c203      	stmia	r2!, {r0, r1}
 8027e4e:	a806      	add	r0, sp, #24
 8027e50:	f7e4 ff76 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027e54:	4639      	mov	r1, r7
 8027e56:	a808      	add	r0, sp, #32
 8027e58:	f7e4 ff9a 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027e5c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8027e60:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8027e64:	f003 0201 	and.w	r2, r3, #1
 8027e68:	4614      	mov	r4, r2
 8027e6a:	9202      	str	r2, [sp, #8]
 8027e6c:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	@ 0x22
 8027e70:	4423      	add	r3, r4
 8027e72:	fb02 1303 	mla	r3, r2, r3, r1
 8027e76:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8027e7a:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 8027e7e:	4402      	add	r2, r0
 8027e80:	48a9      	ldr	r0, [pc, #676]	@ (8028128 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8027e82:	440f      	add	r7, r1
 8027e84:	6800      	ldr	r0, [r0, #0]
 8027e86:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8027e8a:	f8ad 7020 	strh.w	r7, [sp, #32]
 8027e8e:	f8ad 2022 	strh.w	r2, [sp, #34]	@ 0x22
 8027e92:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 8027e96:	f001 0301 	and.w	r3, r1, #1
 8027e9a:	6802      	ldr	r2, [r0, #0]
 8027e9c:	9301      	str	r3, [sp, #4]
 8027e9e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8027ea2:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8027ea4:	9300      	str	r3, [sp, #0]
 8027ea6:	f9bd 4026 	ldrsh.w	r4, [sp, #38]	@ 0x26
 8027eaa:	4790      	blx	r2
 8027eac:	4a9f      	ldr	r2, [pc, #636]	@ (802812c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8027eae:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8027eb2:	8811      	ldrh	r1, [r2, #0]
 8027eb4:	f9bd 7020 	ldrsh.w	r7, [sp, #32]
 8027eb8:	2eff      	cmp	r6, #255	@ 0xff
 8027eba:	fb01 7303 	mla	r3, r1, r3, r7
 8027ebe:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027ec2:	f105 0204 	add.w	r2, r5, #4
 8027ec6:	4418      	add	r0, r3
 8027ec8:	f000 8132 	beq.w	8028130 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 8027ecc:	fb04 f401 	mul.w	r4, r4, r1
 8027ed0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8027ed4:	1901      	adds	r1, r0, r4
 8027ed6:	4288      	cmp	r0, r1
 8027ed8:	9104      	str	r1, [sp, #16]
 8027eda:	f080 80aa 	bcs.w	8028032 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8027ede:	9b00      	ldr	r3, [sp, #0]
 8027ee0:	f1c6 07ff 	rsb	r7, r6, #255	@ 0xff
 8027ee4:	3b01      	subs	r3, #1
 8027ee6:	b2bf      	uxth	r7, r7
 8027ee8:	b2b6      	uxth	r6, r6
 8027eea:	9305      	str	r3, [sp, #20]
 8027eec:	9b01      	ldr	r3, [sp, #4]
 8027eee:	2b00      	cmp	r3, #0
 8027ef0:	f040 80e8 	bne.w	80280c4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 8027ef4:	46d1      	mov	r9, sl
 8027ef6:	f8dd 8000 	ldr.w	r8, [sp]
 8027efa:	f1b8 0f01 	cmp.w	r8, #1
 8027efe:	f340 8082 	ble.w	8028006 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8027f02:	f1a8 0302 	sub.w	r3, r8, #2
 8027f06:	ea4f 0853 	mov.w	r8, r3, lsr #1
 8027f0a:	9303      	str	r3, [sp, #12]
 8027f0c:	f100 0e0c 	add.w	lr, r0, #12
 8027f10:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 8027f14:	eb0e 0e43 	add.w	lr, lr, r3, lsl #1
 8027f18:	1d84      	adds	r4, r0, #6
 8027f1a:	f109 3cff 	add.w	ip, r9, #4294967295
 8027f1e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 8027f22:	f814 5c06 	ldrb.w	r5, [r4, #-6]
 8027f26:	091b      	lsrs	r3, r3, #4
 8027f28:	fb15 f507 	smulbb	r5, r5, r7
 8027f2c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027f30:	5cd1      	ldrb	r1, [r2, r3]
 8027f32:	4413      	add	r3, r2
 8027f34:	fb01 5506 	mla	r5, r1, r6, r5
 8027f38:	b2ad      	uxth	r5, r5
 8027f3a:	f814 1c05 	ldrb.w	r1, [r4, #-5]
 8027f3e:	f105 0b01 	add.w	fp, r5, #1
 8027f42:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027f46:	122d      	asrs	r5, r5, #8
 8027f48:	fb11 fb07 	smulbb	fp, r1, r7
 8027f4c:	f804 5c06 	strb.w	r5, [r4, #-6]
 8027f50:	7859      	ldrb	r1, [r3, #1]
 8027f52:	f814 5c04 	ldrb.w	r5, [r4, #-4]
 8027f56:	fb01 b106 	mla	r1, r1, r6, fp
 8027f5a:	b289      	uxth	r1, r1
 8027f5c:	f101 0b01 	add.w	fp, r1, #1
 8027f60:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8027f64:	1209      	asrs	r1, r1, #8
 8027f66:	fb15 f507 	smulbb	r5, r5, r7
 8027f6a:	f804 1c05 	strb.w	r1, [r4, #-5]
 8027f6e:	789b      	ldrb	r3, [r3, #2]
 8027f70:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8027f74:	fb03 5306 	mla	r3, r3, r6, r5
 8027f78:	b29b      	uxth	r3, r3
 8027f7a:	1c5d      	adds	r5, r3, #1
 8027f7c:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8027f80:	121b      	asrs	r3, r3, #8
 8027f82:	f804 3c04 	strb.w	r3, [r4, #-4]
 8027f86:	f89c 3000 	ldrb.w	r3, [ip]
 8027f8a:	fb11 f107 	smulbb	r1, r1, r7
 8027f8e:	f003 030f 	and.w	r3, r3, #15
 8027f92:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8027f96:	5cd5      	ldrb	r5, [r2, r3]
 8027f98:	4413      	add	r3, r2
 8027f9a:	fb05 1106 	mla	r1, r5, r6, r1
 8027f9e:	b28d      	uxth	r5, r1
 8027fa0:	f105 0b01 	add.w	fp, r5, #1
 8027fa4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8027fa8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027fac:	122d      	asrs	r5, r5, #8
 8027fae:	fb11 fb07 	smulbb	fp, r1, r7
 8027fb2:	f804 5c03 	strb.w	r5, [r4, #-3]
 8027fb6:	7859      	ldrb	r1, [r3, #1]
 8027fb8:	f814 5c01 	ldrb.w	r5, [r4, #-1]
 8027fbc:	fb01 b106 	mla	r1, r1, r6, fp
 8027fc0:	b289      	uxth	r1, r1
 8027fc2:	f101 0b01 	add.w	fp, r1, #1
 8027fc6:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8027fca:	1209      	asrs	r1, r1, #8
 8027fcc:	fb15 f507 	smulbb	r5, r5, r7
 8027fd0:	f804 1c02 	strb.w	r1, [r4, #-2]
 8027fd4:	789b      	ldrb	r3, [r3, #2]
 8027fd6:	3406      	adds	r4, #6
 8027fd8:	fb03 5306 	mla	r3, r3, r6, r5
 8027fdc:	b29b      	uxth	r3, r3
 8027fde:	1c59      	adds	r1, r3, #1
 8027fe0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8027fe4:	121b      	asrs	r3, r3, #8
 8027fe6:	f804 3c07 	strb.w	r3, [r4, #-7]
 8027fea:	45a6      	cmp	lr, r4
 8027fec:	d197      	bne.n	8027f1e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 8027fee:	f108 0301 	add.w	r3, r8, #1
 8027ff2:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 8027ff6:	4499      	add	r9, r3
 8027ff8:	9b03      	ldr	r3, [sp, #12]
 8027ffa:	ebc8 78c8 	rsb	r8, r8, r8, lsl #31
 8027ffe:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8028002:	eb03 0848 	add.w	r8, r3, r8, lsl #1
 8028006:	f1b8 0f01 	cmp.w	r8, #1
 802800a:	d01a      	beq.n	8028042 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21e>
 802800c:	4b47      	ldr	r3, [pc, #284]	@ (802812c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 802800e:	9c00      	ldr	r4, [sp, #0]
 8028010:	8819      	ldrh	r1, [r3, #0]
 8028012:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8028016:	1b09      	subs	r1, r1, r4
 8028018:	9c02      	ldr	r4, [sp, #8]
 802801a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802801e:	4423      	add	r3, r4
 8028020:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028024:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 8028028:	9b04      	ldr	r3, [sp, #16]
 802802a:	4408      	add	r0, r1
 802802c:	4283      	cmp	r3, r0
 802802e:	f63f af5d 	bhi.w	8027eec <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xc8>
 8028032:	4b3d      	ldr	r3, [pc, #244]	@ (8028128 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8028034:	6818      	ldr	r0, [r3, #0]
 8028036:	6803      	ldr	r3, [r0, #0]
 8028038:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802803a:	4798      	blx	r3
 802803c:	b00b      	add	sp, #44	@ 0x2c
 802803e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028042:	f899 3000 	ldrb.w	r3, [r9]
 8028046:	7801      	ldrb	r1, [r0, #0]
 8028048:	091b      	lsrs	r3, r3, #4
 802804a:	fb11 f407 	smulbb	r4, r1, r7
 802804e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028052:	5cd1      	ldrb	r1, [r2, r3]
 8028054:	4413      	add	r3, r2
 8028056:	fb01 4106 	mla	r1, r1, r6, r4
 802805a:	b289      	uxth	r1, r1
 802805c:	7844      	ldrb	r4, [r0, #1]
 802805e:	1c4d      	adds	r5, r1, #1
 8028060:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8028064:	1209      	asrs	r1, r1, #8
 8028066:	fb14 f507 	smulbb	r5, r4, r7
 802806a:	7001      	strb	r1, [r0, #0]
 802806c:	785c      	ldrb	r4, [r3, #1]
 802806e:	7881      	ldrb	r1, [r0, #2]
 8028070:	fb04 5406 	mla	r4, r4, r6, r5
 8028074:	b2a4      	uxth	r4, r4
 8028076:	1c65      	adds	r5, r4, #1
 8028078:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 802807c:	1224      	asrs	r4, r4, #8
 802807e:	fb11 f507 	smulbb	r5, r1, r7
 8028082:	7044      	strb	r4, [r0, #1]
 8028084:	7899      	ldrb	r1, [r3, #2]
 8028086:	4b29      	ldr	r3, [pc, #164]	@ (802812c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8028088:	fb01 5106 	mla	r1, r1, r6, r5
 802808c:	b289      	uxth	r1, r1
 802808e:	1c4c      	adds	r4, r1, #1
 8028090:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 8028094:	881b      	ldrh	r3, [r3, #0]
 8028096:	9c00      	ldr	r4, [sp, #0]
 8028098:	1209      	asrs	r1, r1, #8
 802809a:	1b1b      	subs	r3, r3, r4
 802809c:	7081      	strb	r1, [r0, #2]
 802809e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80280a2:	3303      	adds	r3, #3
 80280a4:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 80280a8:	9c02      	ldr	r4, [sp, #8]
 80280aa:	4418      	add	r0, r3
 80280ac:	9b04      	ldr	r3, [sp, #16]
 80280ae:	4421      	add	r1, r4
 80280b0:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80280b4:	4283      	cmp	r3, r0
 80280b6:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 80280ba:	d9ba      	bls.n	8028032 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 80280bc:	9b01      	ldr	r3, [sp, #4]
 80280be:	2b00      	cmp	r3, #0
 80280c0:	f43f af18 	beq.w	8027ef4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xd0>
 80280c4:	f89a 3000 	ldrb.w	r3, [sl]
 80280c8:	7804      	ldrb	r4, [r0, #0]
 80280ca:	f003 030f 	and.w	r3, r3, #15
 80280ce:	fb14 f107 	smulbb	r1, r4, r7
 80280d2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80280d6:	5cd4      	ldrb	r4, [r2, r3]
 80280d8:	4413      	add	r3, r2
 80280da:	fb04 1406 	mla	r4, r4, r6, r1
 80280de:	b2a4      	uxth	r4, r4
 80280e0:	7841      	ldrb	r1, [r0, #1]
 80280e2:	1c65      	adds	r5, r4, #1
 80280e4:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 80280e8:	1224      	asrs	r4, r4, #8
 80280ea:	fb11 fc07 	smulbb	ip, r1, r7
 80280ee:	7004      	strb	r4, [r0, #0]
 80280f0:	7859      	ldrb	r1, [r3, #1]
 80280f2:	7885      	ldrb	r5, [r0, #2]
 80280f4:	fb01 c106 	mla	r1, r1, r6, ip
 80280f8:	b289      	uxth	r1, r1
 80280fa:	1c4c      	adds	r4, r1, #1
 80280fc:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 8028100:	1209      	asrs	r1, r1, #8
 8028102:	fb15 f407 	smulbb	r4, r5, r7
 8028106:	7041      	strb	r1, [r0, #1]
 8028108:	789b      	ldrb	r3, [r3, #2]
 802810a:	f10a 0901 	add.w	r9, sl, #1
 802810e:	fb03 4306 	mla	r3, r3, r6, r4
 8028112:	b29b      	uxth	r3, r3
 8028114:	1c59      	adds	r1, r3, #1
 8028116:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802811a:	121b      	asrs	r3, r3, #8
 802811c:	7083      	strb	r3, [r0, #2]
 802811e:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8028122:	3003      	adds	r0, #3
 8028124:	e6e9      	b.n	8027efa <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xd6>
 8028126:	bf00      	nop
 8028128:	20082f08 	.word	0x20082f08
 802812c:	20082f02 	.word	0x20082f02
 8028130:	fb04 f101 	mul.w	r1, r4, r1
 8028134:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8028138:	eb00 0e01 	add.w	lr, r0, r1
 802813c:	4570      	cmp	r0, lr
 802813e:	f4bf af78 	bcs.w	8028032 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8028142:	9b00      	ldr	r3, [sp, #0]
 8028144:	4698      	mov	r8, r3
 8028146:	f103 39ff 	add.w	r9, r3, #4294967295
 802814a:	9b01      	ldr	r3, [sp, #4]
 802814c:	2b00      	cmp	r3, #0
 802814e:	d072      	beq.n	8028236 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x412>
 8028150:	464e      	mov	r6, r9
 8028152:	f89a 3000 	ldrb.w	r3, [sl]
 8028156:	f10a 0c01 	add.w	ip, sl, #1
 802815a:	f003 030f 	and.w	r3, r3, #15
 802815e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028162:	5cd1      	ldrb	r1, [r2, r3]
 8028164:	4413      	add	r3, r2
 8028166:	7001      	strb	r1, [r0, #0]
 8028168:	7859      	ldrb	r1, [r3, #1]
 802816a:	3003      	adds	r0, #3
 802816c:	f800 1c02 	strb.w	r1, [r0, #-2]
 8028170:	789b      	ldrb	r3, [r3, #2]
 8028172:	f800 3c01 	strb.w	r3, [r0, #-1]
 8028176:	2e01      	cmp	r6, #1
 8028178:	dd39      	ble.n	80281ee <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ca>
 802817a:	3e02      	subs	r6, #2
 802817c:	0877      	lsrs	r7, r6, #1
 802817e:	eb07 0347 	add.w	r3, r7, r7, lsl #1
 8028182:	f100 050c 	add.w	r5, r0, #12
 8028186:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 802818a:	1d81      	adds	r1, r0, #6
 802818c:	f10c 34ff 	add.w	r4, ip, #4294967295
 8028190:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8028194:	3106      	adds	r1, #6
 8028196:	091b      	lsrs	r3, r3, #4
 8028198:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802819c:	f812 b003 	ldrb.w	fp, [r2, r3]
 80281a0:	4413      	add	r3, r2
 80281a2:	f801 bc0c 	strb.w	fp, [r1, #-12]
 80281a6:	f893 b001 	ldrb.w	fp, [r3, #1]
 80281aa:	f801 bc0b 	strb.w	fp, [r1, #-11]
 80281ae:	789b      	ldrb	r3, [r3, #2]
 80281b0:	f801 3c0a 	strb.w	r3, [r1, #-10]
 80281b4:	7823      	ldrb	r3, [r4, #0]
 80281b6:	f003 030f 	and.w	r3, r3, #15
 80281ba:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80281be:	f812 b003 	ldrb.w	fp, [r2, r3]
 80281c2:	4413      	add	r3, r2
 80281c4:	f801 bc09 	strb.w	fp, [r1, #-9]
 80281c8:	f893 b001 	ldrb.w	fp, [r3, #1]
 80281cc:	f801 bc08 	strb.w	fp, [r1, #-8]
 80281d0:	789b      	ldrb	r3, [r3, #2]
 80281d2:	f801 3c07 	strb.w	r3, [r1, #-7]
 80281d6:	428d      	cmp	r5, r1
 80281d8:	d1da      	bne.n	8028190 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x36c>
 80281da:	1c7b      	adds	r3, r7, #1
 80281dc:	eb03 0143 	add.w	r1, r3, r3, lsl #1
 80281e0:	ebc7 77c7 	rsb	r7, r7, r7, lsl #31
 80281e4:	449c      	add	ip, r3
 80281e6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80281ea:	eb06 0647 	add.w	r6, r6, r7, lsl #1
 80281ee:	2e01      	cmp	r6, #1
 80281f0:	d124      	bne.n	802823c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x418>
 80281f2:	f89c 3000 	ldrb.w	r3, [ip]
 80281f6:	9c02      	ldr	r4, [sp, #8]
 80281f8:	091b      	lsrs	r3, r3, #4
 80281fa:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80281fe:	5cd1      	ldrb	r1, [r2, r3]
 8028200:	4413      	add	r3, r2
 8028202:	7001      	strb	r1, [r0, #0]
 8028204:	7859      	ldrb	r1, [r3, #1]
 8028206:	7041      	strb	r1, [r0, #1]
 8028208:	7899      	ldrb	r1, [r3, #2]
 802820a:	4b19      	ldr	r3, [pc, #100]	@ (8028270 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 802820c:	7081      	strb	r1, [r0, #2]
 802820e:	881b      	ldrh	r3, [r3, #0]
 8028210:	f9bd 101c 	ldrsh.w	r1, [sp, #28]
 8028214:	eba3 0308 	sub.w	r3, r3, r8
 8028218:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802821c:	3303      	adds	r3, #3
 802821e:	4421      	add	r1, r4
 8028220:	4418      	add	r0, r3
 8028222:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8028226:	4586      	cmp	lr, r0
 8028228:	eb0a 0a61 	add.w	sl, sl, r1, asr #1
 802822c:	f67f af01 	bls.w	8028032 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8028230:	9b01      	ldr	r3, [sp, #4]
 8028232:	2b00      	cmp	r3, #0
 8028234:	d18c      	bne.n	8028150 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x32c>
 8028236:	46d4      	mov	ip, sl
 8028238:	4646      	mov	r6, r8
 802823a:	e79c      	b.n	8028176 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x352>
 802823c:	4b0c      	ldr	r3, [pc, #48]	@ (8028270 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 802823e:	9c02      	ldr	r4, [sp, #8]
 8028240:	8819      	ldrh	r1, [r3, #0]
 8028242:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8028246:	eba1 0108 	sub.w	r1, r1, r8
 802824a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802824e:	4423      	add	r3, r4
 8028250:	4408      	add	r0, r1
 8028252:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028256:	4586      	cmp	lr, r0
 8028258:	eb0a 0a63 	add.w	sl, sl, r3, asr #1
 802825c:	f63f af75 	bhi.w	802814a <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x326>
 8028260:	e6e7      	b.n	8028032 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20e>
 8028262:	4b04      	ldr	r3, [pc, #16]	@ (8028274 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x450>)
 8028264:	4a04      	ldr	r2, [pc, #16]	@ (8028278 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x454>)
 8028266:	f640 31da 	movw	r1, #3034	@ 0xbda
 802826a:	4804      	ldr	r0, [pc, #16]	@ (802827c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x458>)
 802826c:	f00a f944 	bl	80324f8 <__assert_func>
 8028270:	20082f02 	.word	0x20082f02
 8028274:	080363a4 	.word	0x080363a4
 8028278:	08037308 	.word	0x08037308
 802827c:	080362e0 	.word	0x080362e0

08028280 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8028280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028284:	b08d      	sub	sp, #52	@ 0x34
 8028286:	7814      	ldrb	r4, [r2, #0]
 8028288:	461d      	mov	r5, r3
 802828a:	f89d 305c 	ldrb.w	r3, [sp, #92]	@ 0x5c
 802828e:	2c01      	cmp	r4, #1
 8028290:	9204      	str	r2, [sp, #16]
 8028292:	9302      	str	r3, [sp, #8]
 8028294:	f040 8133 	bne.w	80284fe <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x27e>
 8028298:	b913      	cbnz	r3, 80282a0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x20>
 802829a:	b00d      	add	sp, #52	@ 0x34
 802829c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80282a0:	6828      	ldr	r0, [r5, #0]
 80282a2:	4689      	mov	r9, r1
 80282a4:	6869      	ldr	r1, [r5, #4]
 80282a6:	ab08      	add	r3, sp, #32
 80282a8:	c303      	stmia	r3!, {r0, r1}
 80282aa:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80282ac:	6818      	ldr	r0, [r3, #0]
 80282ae:	6859      	ldr	r1, [r3, #4]
 80282b0:	ab0a      	add	r3, sp, #40	@ 0x28
 80282b2:	c303      	stmia	r3!, {r0, r1}
 80282b4:	a808      	add	r0, sp, #32
 80282b6:	f7e4 fd43 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80282ba:	4629      	mov	r1, r5
 80282bc:	a80a      	add	r0, sp, #40	@ 0x28
 80282be:	f7e4 fd67 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80282c2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80282c6:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 80282ca:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80282ce:	bfdd      	ittte	le
 80282d0:	f44f 6480 	movle.w	r4, #1024	@ 0x400
 80282d4:	b29a      	uxthle	r2, r3
 80282d6:	fb94 f4f2 	sdivle	r4, r4, r2
 80282da:	b29a      	uxthgt	r2, r3
 80282dc:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 80282e0:	fb93 f0f4 	sdiv	r0, r3, r4
 80282e4:	b286      	uxth	r6, r0
 80282e6:	fb04 3816 	mls	r8, r4, r6, r3
 80282ea:	fb18 1802 	smlabb	r8, r8, r2, r1
 80282ee:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	@ 0x26
 80282f2:	fa1f f888 	uxth.w	r8, r8
 80282f6:	4422      	add	r2, r4
 80282f8:	3a01      	subs	r2, #1
 80282fa:	fb92 f4f4 	sdiv	r4, r2, r4
 80282fe:	2e00      	cmp	r6, #0
 8028300:	f040 80f7 	bne.w	80284f2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x272>
 8028304:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8028308:	f8bd 0020 	ldrh.w	r0, [sp, #32]
 802830c:	4413      	add	r3, r2
 802830e:	4a7f      	ldr	r2, [pc, #508]	@ (802850c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 8028310:	4401      	add	r1, r0
 8028312:	6810      	ldr	r0, [r2, #0]
 8028314:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8028318:	f8ad 1028 	strh.w	r1, [sp, #40]	@ 0x28
 802831c:	4616      	mov	r6, r2
 802831e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8028322:	6803      	ldr	r3, [r0, #0]
 8028324:	9207      	str	r2, [sp, #28]
 8028326:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8028328:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 802832c:	4798      	blx	r3
 802832e:	f1b8 0f00 	cmp.w	r8, #0
 8028332:	bf0c      	ite	eq
 8028334:	4633      	moveq	r3, r6
 8028336:	2300      	movne	r3, #0
 8028338:	4975      	ldr	r1, [pc, #468]	@ (8028510 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 802833a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 802833e:	8809      	ldrh	r1, [r1, #0]
 8028340:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8028344:	fb01 f505 	mul.w	r5, r1, r5
 8028348:	fb01 6202 	mla	r2, r1, r2, r6
 802834c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028350:	4410      	add	r0, r2
 8028352:	b2a4      	uxth	r4, r4
 8028354:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8028358:	1942      	adds	r2, r0, r5
 802835a:	00a4      	lsls	r4, r4, #2
 802835c:	1d21      	adds	r1, r4, #4
 802835e:	4290      	cmp	r0, r2
 8028360:	9200      	str	r2, [sp, #0]
 8028362:	9106      	str	r1, [sp, #24]
 8028364:	fa1f fa83 	uxth.w	sl, r3
 8028368:	d225      	bcs.n	80283b6 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x136>
 802836a:	2500      	movs	r5, #0
 802836c:	4686      	mov	lr, r0
 802836e:	4640      	mov	r0, r8
 8028370:	9b02      	ldr	r3, [sp, #8]
 8028372:	9501      	str	r5, [sp, #4]
 8028374:	f1c3 07ff 	rsb	r7, r3, #255	@ 0xff
 8028378:	b2bf      	uxth	r7, r7
 802837a:	fa1f fc83 	uxth.w	ip, r3
 802837e:	b985      	cbnz	r5, 80283a2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x122>
 8028380:	f899 2000 	ldrb.w	r2, [r9]
 8028384:	0995      	lsrs	r5, r2, #6
 8028386:	1e6b      	subs	r3, r5, #1
 8028388:	2b02      	cmp	r3, #2
 802838a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802838e:	bf88      	it	hi
 8028390:	f899 5001 	ldrbhi.w	r5, [r9, #1]
 8028394:	9201      	str	r2, [sp, #4]
 8028396:	bf9a      	itte	ls
 8028398:	f109 0901 	addls.w	r9, r9, #1
 802839c:	b2ad      	uxthls	r5, r5
 802839e:	f109 0902 	addhi.w	r9, r9, #2
 80283a2:	b180      	cbz	r0, 80283c6 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x146>
 80283a4:	4285      	cmp	r5, r0
 80283a6:	f080 809e 	bcs.w	80284e6 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x266>
 80283aa:	1b40      	subs	r0, r0, r5
 80283ac:	2500      	movs	r5, #0
 80283ae:	b280      	uxth	r0, r0
 80283b0:	9b00      	ldr	r3, [sp, #0]
 80283b2:	4573      	cmp	r3, lr
 80283b4:	d8e3      	bhi.n	802837e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0xfe>
 80283b6:	4b55      	ldr	r3, [pc, #340]	@ (802850c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x28c>)
 80283b8:	6818      	ldr	r0, [r3, #0]
 80283ba:	6803      	ldr	r3, [r0, #0]
 80283bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80283be:	4798      	blx	r3
 80283c0:	b00d      	add	sp, #52	@ 0x34
 80283c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80283c6:	2303      	movs	r3, #3
 80283c8:	4619      	mov	r1, r3
 80283ca:	9a06      	ldr	r2, [sp, #24]
 80283cc:	9b01      	ldr	r3, [sp, #4]
 80283ce:	4555      	cmp	r5, sl
 80283d0:	fb11 2403 	smlabb	r4, r1, r3, r2
 80283d4:	9b04      	ldr	r3, [sp, #16]
 80283d6:	441c      	add	r4, r3
 80283d8:	d360      	bcc.n	802849c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x21c>
 80283da:	eba5 030a 	sub.w	r3, r5, sl
 80283de:	b29b      	uxth	r3, r3
 80283e0:	9303      	str	r3, [sp, #12]
 80283e2:	9b02      	ldr	r3, [sp, #8]
 80283e4:	4656      	mov	r6, sl
 80283e6:	2bff      	cmp	r3, #255	@ 0xff
 80283e8:	9005      	str	r0, [sp, #20]
 80283ea:	d060      	beq.n	80284ae <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x22e>
 80283ec:	2e00      	cmp	r6, #0
 80283ee:	d03b      	beq.n	8028468 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 80283f0:	3e01      	subs	r6, #1
 80283f2:	b2b6      	uxth	r6, r6
 80283f4:	eb06 0346 	add.w	r3, r6, r6, lsl #1
 80283f8:	f10e 0806 	add.w	r8, lr, #6
 80283fc:	4498      	add	r8, r3
 80283fe:	f10e 0103 	add.w	r1, lr, #3
 8028402:	f811 2c03 	ldrb.w	r2, [r1, #-3]
 8028406:	7823      	ldrb	r3, [r4, #0]
 8028408:	fb12 f207 	smulbb	r2, r2, r7
 802840c:	fb03 230c 	mla	r3, r3, ip, r2
 8028410:	b29b      	uxth	r3, r3
 8028412:	f811 2c02 	ldrb.w	r2, [r1, #-2]
 8028416:	f103 0b01 	add.w	fp, r3, #1
 802841a:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 802841e:	121b      	asrs	r3, r3, #8
 8028420:	fb12 fb07 	smulbb	fp, r2, r7
 8028424:	f801 3c03 	strb.w	r3, [r1, #-3]
 8028428:	7862      	ldrb	r2, [r4, #1]
 802842a:	f811 3c01 	ldrb.w	r3, [r1, #-1]
 802842e:	fb02 b20c 	mla	r2, r2, ip, fp
 8028432:	b292      	uxth	r2, r2
 8028434:	f102 0b01 	add.w	fp, r2, #1
 8028438:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802843c:	1212      	asrs	r2, r2, #8
 802843e:	fb13 fb07 	smulbb	fp, r3, r7
 8028442:	f801 2c02 	strb.w	r2, [r1, #-2]
 8028446:	78a3      	ldrb	r3, [r4, #2]
 8028448:	3103      	adds	r1, #3
 802844a:	fb03 b30c 	mla	r3, r3, ip, fp
 802844e:	b29b      	uxth	r3, r3
 8028450:	1c5a      	adds	r2, r3, #1
 8028452:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028456:	121b      	asrs	r3, r3, #8
 8028458:	f801 3c04 	strb.w	r3, [r1, #-4]
 802845c:	4541      	cmp	r1, r8
 802845e:	d1d0      	bne.n	8028402 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x182>
 8028460:	3601      	adds	r6, #1
 8028462:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8028466:	44b6      	add	lr, r6
 8028468:	4555      	cmp	r5, sl
 802846a:	d313      	bcc.n	8028494 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x214>
 802846c:	9a07      	ldr	r2, [sp, #28]
 802846e:	4b28      	ldr	r3, [pc, #160]	@ (8028510 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x290>)
 8028470:	f8bd 0024 	ldrh.w	r0, [sp, #36]	@ 0x24
 8028474:	fa1f fa82 	uxth.w	sl, r2
 8028478:	881b      	ldrh	r3, [r3, #0]
 802847a:	eba0 000a 	sub.w	r0, r0, sl
 802847e:	b280      	uxth	r0, r0
 8028480:	1a9b      	subs	r3, r3, r2
 8028482:	2800      	cmp	r0, #0
 8028484:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028488:	9d03      	ldr	r5, [sp, #12]
 802848a:	bf18      	it	ne
 802848c:	f04f 0a00 	movne.w	sl, #0
 8028490:	449e      	add	lr, r3
 8028492:	e78d      	b.n	80283b0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 8028494:	9d03      	ldr	r5, [sp, #12]
 8028496:	f8dd a014 	ldr.w	sl, [sp, #20]
 802849a:	e789      	b.n	80283b0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 802849c:	ebaa 0305 	sub.w	r3, sl, r5
 80284a0:	b29b      	uxth	r3, r3
 80284a2:	9305      	str	r3, [sp, #20]
 80284a4:	9b02      	ldr	r3, [sp, #8]
 80284a6:	462e      	mov	r6, r5
 80284a8:	2bff      	cmp	r3, #255	@ 0xff
 80284aa:	9003      	str	r0, [sp, #12]
 80284ac:	d19e      	bne.n	80283ec <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x16c>
 80284ae:	2e00      	cmp	r6, #0
 80284b0:	d0da      	beq.n	8028468 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 80284b2:	3e01      	subs	r6, #1
 80284b4:	b2b2      	uxth	r2, r6
 80284b6:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80284ba:	f10e 0606 	add.w	r6, lr, #6
 80284be:	441e      	add	r6, r3
 80284c0:	f10e 0303 	add.w	r3, lr, #3
 80284c4:	7821      	ldrb	r1, [r4, #0]
 80284c6:	3303      	adds	r3, #3
 80284c8:	f803 1c06 	strb.w	r1, [r3, #-6]
 80284cc:	7861      	ldrb	r1, [r4, #1]
 80284ce:	f803 1c05 	strb.w	r1, [r3, #-5]
 80284d2:	78a1      	ldrb	r1, [r4, #2]
 80284d4:	f803 1c04 	strb.w	r1, [r3, #-4]
 80284d8:	429e      	cmp	r6, r3
 80284da:	d1f3      	bne.n	80284c4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x244>
 80284dc:	3201      	adds	r2, #1
 80284de:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80284e2:	4496      	add	lr, r2
 80284e4:	e7c0      	b.n	8028468 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e8>
 80284e6:	1a2d      	subs	r5, r5, r0
 80284e8:	b2ad      	uxth	r5, r5
 80284ea:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 80284ee:	2000      	movs	r0, #0
 80284f0:	e75e      	b.n	80283b0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x130>
 80284f2:	9a04      	ldr	r2, [sp, #16]
 80284f4:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 80284f8:	ba12      	rev	r2, r2
 80284fa:	4491      	add	r9, r2
 80284fc:	e702      	b.n	8028304 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x84>
 80284fe:	4b05      	ldr	r3, [pc, #20]	@ (8028514 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x294>)
 8028500:	4a05      	ldr	r2, [pc, #20]	@ (8028518 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>)
 8028502:	f44f 6146 	mov.w	r1, #3168	@ 0xc60
 8028506:	4805      	ldr	r0, [pc, #20]	@ (802851c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x29c>)
 8028508:	f009 fff6 	bl	80324f8 <__assert_func>
 802850c:	20082f08 	.word	0x20082f08
 8028510:	20082f02 	.word	0x20082f02
 8028514:	080363a4 	.word	0x080363a4
 8028518:	080374ac 	.word	0x080374ac
 802851c:	080362e0 	.word	0x080362e0

08028520 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>:
 8028520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028524:	b09b      	sub	sp, #108	@ 0x6c
 8028526:	7814      	ldrb	r4, [r2, #0]
 8028528:	461d      	mov	r5, r3
 802852a:	f89d 3094 	ldrb.w	r3, [sp, #148]	@ 0x94
 802852e:	2c01      	cmp	r4, #1
 8028530:	9210      	str	r2, [sp, #64]	@ 0x40
 8028532:	9112      	str	r1, [sp, #72]	@ 0x48
 8028534:	930d      	str	r3, [sp, #52]	@ 0x34
 8028536:	f040 820f 	bne.w	8028958 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x438>
 802853a:	b913      	cbnz	r3, 8028542 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x22>
 802853c:	b01b      	add	sp, #108	@ 0x6c
 802853e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028542:	6869      	ldr	r1, [r5, #4]
 8028544:	4681      	mov	r9, r0
 8028546:	6828      	ldr	r0, [r5, #0]
 8028548:	ab16      	add	r3, sp, #88	@ 0x58
 802854a:	c303      	stmia	r3!, {r0, r1}
 802854c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802854e:	6818      	ldr	r0, [r3, #0]
 8028550:	6859      	ldr	r1, [r3, #4]
 8028552:	ab18      	add	r3, sp, #96	@ 0x60
 8028554:	c303      	stmia	r3!, {r0, r1}
 8028556:	a816      	add	r0, sp, #88	@ 0x58
 8028558:	f7e4 fbf2 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802855c:	4629      	mov	r1, r5
 802855e:	a818      	add	r0, sp, #96	@ 0x60
 8028560:	f7e4 fc16 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028564:	f9bd a05c 	ldrsh.w	sl, [sp, #92]	@ 0x5c
 8028568:	f5ba 6f80 	cmp.w	sl, #1024	@ 0x400
 802856c:	f340 814e 	ble.w	802880c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2ec>
 8028570:	fa1f f08a 	uxth.w	r0, sl
 8028574:	9414      	str	r4, [sp, #80]	@ 0x50
 8028576:	f9bd 3062 	ldrsh.w	r3, [sp, #98]	@ 0x62
 802857a:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 802857e:	fb93 f1f4 	sdiv	r1, r3, r4
 8028582:	4422      	add	r2, r4
 8028584:	3a01      	subs	r2, #1
 8028586:	fb92 f2f4 	sdiv	r2, r2, r4
 802858a:	b289      	uxth	r1, r1
 802858c:	fb04 3411 	mls	r4, r4, r1, r3
 8028590:	9113      	str	r1, [sp, #76]	@ 0x4c
 8028592:	f8bd 1060 	ldrh.w	r1, [sp, #96]	@ 0x60
 8028596:	f8bd 6058 	ldrh.w	r6, [sp, #88]	@ 0x58
 802859a:	fb14 1a00 	smlabb	sl, r4, r0, r1
 802859e:	f8bd 505a 	ldrh.w	r5, [sp, #90]	@ 0x5a
 80285a2:	48bc      	ldr	r0, [pc, #752]	@ (8028894 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 80285a4:	4431      	add	r1, r6
 80285a6:	442b      	add	r3, r5
 80285a8:	6800      	ldr	r0, [r0, #0]
 80285aa:	f8ad 1060 	strh.w	r1, [sp, #96]	@ 0x60
 80285ae:	f8ad 3062 	strh.w	r3, [sp, #98]	@ 0x62
 80285b2:	f9bd 7064 	ldrsh.w	r7, [sp, #100]	@ 0x64
 80285b6:	6803      	ldr	r3, [r0, #0]
 80285b8:	3201      	adds	r2, #1
 80285ba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80285bc:	970a      	str	r7, [sp, #40]	@ 0x28
 80285be:	b294      	uxth	r4, r2
 80285c0:	f9bd 5066 	ldrsh.w	r5, [sp, #102]	@ 0x66
 80285c4:	4798      	blx	r3
 80285c6:	2200      	movs	r2, #0
 80285c8:	fa1f f68a 	uxth.w	r6, sl
 80285cc:	2e00      	cmp	r6, #0
 80285ce:	bf0c      	ite	eq
 80285d0:	463b      	moveq	r3, r7
 80285d2:	2300      	movne	r3, #0
 80285d4:	49b0      	ldr	r1, [pc, #704]	@ (8028898 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 80285d6:	9602      	str	r6, [sp, #8]
 80285d8:	8809      	ldrh	r1, [r1, #0]
 80285da:	9211      	str	r2, [sp, #68]	@ 0x44
 80285dc:	f9bd 6060 	ldrsh.w	r6, [sp, #96]	@ 0x60
 80285e0:	f9bd 2062 	ldrsh.w	r2, [sp, #98]	@ 0x62
 80285e4:	fb01 f505 	mul.w	r5, r1, r5
 80285e8:	fb01 6202 	mla	r2, r1, r2, r6
 80285ec:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80285ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80285f2:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80285f6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80285fa:	1881      	adds	r1, r0, r2
 80285fc:	9101      	str	r1, [sp, #4]
 80285fe:	fa1f fe83 	uxth.w	lr, r3
 8028602:	4429      	add	r1, r5
 8028604:	f109 030e 	add.w	r3, r9, #14
 8028608:	9315      	str	r3, [sp, #84]	@ 0x54
 802860a:	460b      	mov	r3, r1
 802860c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802860e:	464f      	mov	r7, r9
 8028610:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8028614:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8028618:	f104 0c04 	add.w	ip, r4, #4
 802861c:	9106      	str	r1, [sp, #24]
 802861e:	fa1f f882 	uxth.w	r8, r2
 8028622:	9a01      	ldr	r2, [sp, #4]
 8028624:	4293      	cmp	r3, r2
 8028626:	f240 8101 	bls.w	802882c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 802862a:	2200      	movs	r2, #0
 802862c:	2601      	movs	r6, #1
 802862e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8028630:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8028632:	920c      	str	r2, [sp, #48]	@ 0x30
 8028634:	fa10 f481 	uxtah	r4, r0, r1
 8028638:	00a4      	lsls	r4, r4, #2
 802863a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802863c:	3404      	adds	r4, #4
 802863e:	4421      	add	r1, r4
 8028640:	788a      	ldrb	r2, [r1, #2]
 8028642:	784d      	ldrb	r5, [r1, #1]
 8028644:	0212      	lsls	r2, r2, #8
 8028646:	78c9      	ldrb	r1, [r1, #3]
 8028648:	ea42 4005 	orr.w	r0, r2, r5, lsl #16
 802864c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802864e:	4308      	orrs	r0, r1
 8028650:	f8bd 305c 	ldrh.w	r3, [sp, #92]	@ 0x5c
 8028654:	1829      	adds	r1, r5, r0
 8028656:	5c28      	ldrb	r0, [r5, r0]
 8028658:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802865a:	fbb9 f3f3 	udiv	r3, r9, r3
 802865e:	5d2c      	ldrb	r4, [r5, r4]
 8028660:	784a      	ldrb	r2, [r1, #1]
 8028662:	4431      	add	r1, r6
 8028664:	940e      	str	r4, [sp, #56]	@ 0x38
 8028666:	9104      	str	r1, [sp, #16]
 8028668:	f04f 0a00 	mov.w	sl, #0
 802866c:	19a1      	adds	r1, r4, r6
 802866e:	4634      	mov	r4, r6
 8028670:	0212      	lsls	r2, r2, #8
 8028672:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8028676:	4302      	orrs	r2, r0
 8028678:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802867a:	f8bd 5034 	ldrh.w	r5, [sp, #52]	@ 0x34
 802867e:	1ac3      	subs	r3, r0, r3
 8028680:	b29b      	uxth	r3, r3
 8028682:	b290      	uxth	r0, r2
 8028684:	9609      	str	r6, [sp, #36]	@ 0x24
 8028686:	737a      	strb	r2, [r7, #13]
 8028688:	9008      	str	r0, [sp, #32]
 802868a:	9105      	str	r1, [sp, #20]
 802868c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802868e:	9603      	str	r6, [sp, #12]
 8028690:	f1b9 0f00 	cmp.w	r9, #0
 8028694:	d035      	beq.n	8028702 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1e2>
 8028696:	45a1      	cmp	r9, r4
 8028698:	f240 8100 	bls.w	802889c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x37c>
 802869c:	9b06      	ldr	r3, [sp, #24]
 802869e:	9a01      	ldr	r2, [sp, #4]
 80286a0:	eba9 0904 	sub.w	r9, r9, r4
 80286a4:	4293      	cmp	r3, r2
 80286a6:	fa1f f989 	uxth.w	r9, r9
 80286aa:	f240 80bf 	bls.w	802882c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 80286ae:	9804      	ldr	r0, [sp, #16]
 80286b0:	9c03      	ldr	r4, [sp, #12]
 80286b2:	7842      	ldrb	r2, [r0, #1]
 80286b4:	f1c4 0107 	rsb	r1, r4, #7
 80286b8:	7803      	ldrb	r3, [r0, #0]
 80286ba:	408a      	lsls	r2, r1
 80286bc:	0052      	lsls	r2, r2, #1
 80286be:	4123      	asrs	r3, r4
 80286c0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80286c4:	1c61      	adds	r1, r4, #1
 80286c6:	b2db      	uxtb	r3, r3
 80286c8:	4313      	orrs	r3, r2
 80286ca:	b2ca      	uxtb	r2, r1
 80286cc:	4611      	mov	r1, r2
 80286ce:	2908      	cmp	r1, #8
 80286d0:	9203      	str	r2, [sp, #12]
 80286d2:	b29a      	uxth	r2, r3
 80286d4:	f000 810b 	beq.w	80288ee <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3ce>
 80286d8:	3001      	adds	r0, #1
 80286da:	9004      	str	r0, [sp, #16]
 80286dc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80286de:	4291      	cmp	r1, r2
 80286e0:	f0c0 80e7 	bcc.w	80288b2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x392>
 80286e4:	2401      	movs	r4, #1
 80286e6:	b2db      	uxtb	r3, r3
 80286e8:	737b      	strb	r3, [r7, #13]
 80286ea:	9905      	ldr	r1, [sp, #20]
 80286ec:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80286f0:	f0c0 8103 	bcc.w	80288fa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3da>
 80286f4:	e9cd 2408 	strd	r2, r4, [sp, #32]
 80286f8:	f04f 0a00 	mov.w	sl, #0
 80286fc:	f1b9 0f00 	cmp.w	r9, #0
 8028700:	d1c9      	bne.n	8028696 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x176>
 8028702:	4574      	cmp	r4, lr
 8028704:	f0c0 809a 	bcc.w	802883c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x31c>
 8028708:	eba4 030e 	sub.w	r3, r4, lr
 802870c:	b29b      	uxth	r3, r3
 802870e:	9307      	str	r3, [sp, #28]
 8028710:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8028712:	f8cd e008 	str.w	lr, [sp, #8]
 8028716:	2bff      	cmp	r3, #255	@ 0xff
 8028718:	f8cd 902c 	str.w	r9, [sp, #44]	@ 0x2c
 802871c:	9b02      	ldr	r3, [sp, #8]
 802871e:	f000 8099 	beq.w	8028854 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x334>
 8028722:	2b00      	cmp	r3, #0
 8028724:	d048      	beq.n	80287b8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8028726:	eb0a 0603 	add.w	r6, sl, r3
 802872a:	9b01      	ldr	r3, [sp, #4]
 802872c:	b2b6      	uxth	r6, r6
 802872e:	1cd8      	adds	r0, r3, #3
 8028730:	f810 1c03 	ldrb.w	r1, [r0, #-3]
 8028734:	eb07 030a 	add.w	r3, r7, sl
 8028738:	7b5b      	ldrb	r3, [r3, #13]
 802873a:	fb11 f208 	smulbb	r2, r1, r8
 802873e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028742:	f81c 1003 	ldrb.w	r1, [ip, r3]
 8028746:	4463      	add	r3, ip
 8028748:	fb01 2105 	mla	r1, r1, r5, r2
 802874c:	b289      	uxth	r1, r1
 802874e:	f810 2c02 	ldrb.w	r2, [r0, #-2]
 8028752:	f101 0b01 	add.w	fp, r1, #1
 8028756:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 802875a:	1209      	asrs	r1, r1, #8
 802875c:	fb12 fb08 	smulbb	fp, r2, r8
 8028760:	f800 1c03 	strb.w	r1, [r0, #-3]
 8028764:	785a      	ldrb	r2, [r3, #1]
 8028766:	f810 1c01 	ldrb.w	r1, [r0, #-1]
 802876a:	fb02 b205 	mla	r2, r2, r5, fp
 802876e:	b292      	uxth	r2, r2
 8028770:	f102 0b01 	add.w	fp, r2, #1
 8028774:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028778:	1212      	asrs	r2, r2, #8
 802877a:	fb11 f108 	smulbb	r1, r1, r8
 802877e:	f800 2c02 	strb.w	r2, [r0, #-2]
 8028782:	789b      	ldrb	r3, [r3, #2]
 8028784:	f10a 0a01 	add.w	sl, sl, #1
 8028788:	fb03 1305 	mla	r3, r3, r5, r1
 802878c:	b29b      	uxth	r3, r3
 802878e:	1c5a      	adds	r2, r3, #1
 8028790:	fa1f fa8a 	uxth.w	sl, sl
 8028794:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028798:	121b      	asrs	r3, r3, #8
 802879a:	45b2      	cmp	sl, r6
 802879c:	f800 3c01 	strb.w	r3, [r0, #-1]
 80287a0:	f100 0003 	add.w	r0, r0, #3
 80287a4:	d1c4      	bne.n	8028730 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x210>
 80287a6:	9b02      	ldr	r3, [sp, #8]
 80287a8:	9a01      	ldr	r2, [sp, #4]
 80287aa:	3b01      	subs	r3, #1
 80287ac:	b29b      	uxth	r3, r3
 80287ae:	3301      	adds	r3, #1
 80287b0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80287b4:	441a      	add	r2, r3
 80287b6:	9201      	str	r2, [sp, #4]
 80287b8:	4574      	cmp	r4, lr
 80287ba:	d330      	bcc.n	802881e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 80287bc:	4b36      	ldr	r3, [pc, #216]	@ (8028898 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x378>)
 80287be:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80287c0:	881b      	ldrh	r3, [r3, #0]
 80287c2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80287c4:	1a5b      	subs	r3, r3, r1
 80287c6:	9901      	ldr	r1, [sp, #4]
 80287c8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80287cc:	4419      	add	r1, r3
 80287ce:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80287d0:	3201      	adds	r2, #1
 80287d2:	429a      	cmp	r2, r3
 80287d4:	920c      	str	r2, [sp, #48]	@ 0x30
 80287d6:	9101      	str	r1, [sp, #4]
 80287d8:	f000 80ab 	beq.w	8028932 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x412>
 80287dc:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 80287e0:	f8bd 905c 	ldrh.w	r9, [sp, #92]	@ 0x5c
 80287e4:	9c07      	ldr	r4, [sp, #28]
 80287e6:	eba9 090e 	sub.w	r9, r9, lr
 80287ea:	fa1f f989 	uxth.w	r9, r9
 80287ee:	f1b9 0f00 	cmp.w	r9, #0
 80287f2:	bf14      	ite	ne
 80287f4:	f04f 0e00 	movne.w	lr, #0
 80287f8:	f04f 0900 	moveq.w	r9, #0
 80287fc:	9b06      	ldr	r3, [sp, #24]
 80287fe:	9a01      	ldr	r2, [sp, #4]
 8028800:	4293      	cmp	r3, r2
 8028802:	d913      	bls.n	802882c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x30c>
 8028804:	2c00      	cmp	r4, #0
 8028806:	f47f af43 	bne.w	8028690 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x170>
 802880a:	e750      	b.n	80286ae <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x18e>
 802880c:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8028810:	fa1f f08a 	uxth.w	r0, sl
 8028814:	fb94 f4f0 	sdiv	r4, r4, r0
 8028818:	b2a3      	uxth	r3, r4
 802881a:	9314      	str	r3, [sp, #80]	@ 0x50
 802881c:	e6ab      	b.n	8028576 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x56>
 802881e:	9b06      	ldr	r3, [sp, #24]
 8028820:	9a01      	ldr	r2, [sp, #4]
 8028822:	9c07      	ldr	r4, [sp, #28]
 8028824:	4293      	cmp	r3, r2
 8028826:	f8dd e02c 	ldr.w	lr, [sp, #44]	@ 0x2c
 802882a:	d8eb      	bhi.n	8028804 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2e4>
 802882c:	4b19      	ldr	r3, [pc, #100]	@ (8028894 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x374>)
 802882e:	6818      	ldr	r0, [r3, #0]
 8028830:	6803      	ldr	r3, [r0, #0]
 8028832:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028834:	4798      	blx	r3
 8028836:	b01b      	add	sp, #108	@ 0x6c
 8028838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802883c:	ebae 0304 	sub.w	r3, lr, r4
 8028840:	b29b      	uxth	r3, r3
 8028842:	930b      	str	r3, [sp, #44]	@ 0x2c
 8028844:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8028846:	9402      	str	r4, [sp, #8]
 8028848:	2bff      	cmp	r3, #255	@ 0xff
 802884a:	f8cd 901c 	str.w	r9, [sp, #28]
 802884e:	9b02      	ldr	r3, [sp, #8]
 8028850:	f47f af67 	bne.w	8028722 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8028854:	2b00      	cmp	r3, #0
 8028856:	d0af      	beq.n	80287b8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8028858:	eb0a 0003 	add.w	r0, sl, r3
 802885c:	9b01      	ldr	r3, [sp, #4]
 802885e:	b280      	uxth	r0, r0
 8028860:	1cda      	adds	r2, r3, #3
 8028862:	eb07 030a 	add.w	r3, r7, sl
 8028866:	7b5b      	ldrb	r3, [r3, #13]
 8028868:	f10a 0a01 	add.w	sl, sl, #1
 802886c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028870:	f81c 1003 	ldrb.w	r1, [ip, r3]
 8028874:	4463      	add	r3, ip
 8028876:	f802 1c03 	strb.w	r1, [r2, #-3]
 802887a:	7859      	ldrb	r1, [r3, #1]
 802887c:	fa1f fa8a 	uxth.w	sl, sl
 8028880:	f802 1c02 	strb.w	r1, [r2, #-2]
 8028884:	789b      	ldrb	r3, [r3, #2]
 8028886:	4582      	cmp	sl, r0
 8028888:	f802 3c01 	strb.w	r3, [r2, #-1]
 802888c:	f102 0203 	add.w	r2, r2, #3
 8028890:	d1e7      	bne.n	8028862 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x342>
 8028892:	e788      	b.n	80287a6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x286>
 8028894:	20082f08 	.word	0x20082f08
 8028898:	20082f02 	.word	0x20082f02
 802889c:	eba4 0409 	sub.w	r4, r4, r9
 80288a0:	44ca      	add	sl, r9
 80288a2:	b2a4      	uxth	r4, r4
 80288a4:	fa1f fa8a 	uxth.w	sl, sl
 80288a8:	f8bd e028 	ldrh.w	lr, [sp, #40]	@ 0x28
 80288ac:	f04f 0900 	mov.w	r9, #0
 80288b0:	e7a4      	b.n	80287fc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x2dc>
 80288b2:	9b05      	ldr	r3, [sp, #20]
 80288b4:	429a      	cmp	r2, r3
 80288b6:	d323      	bcc.n	8028900 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3e0>
 80288b8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80288ba:	7b79      	ldrb	r1, [r7, #13]
 80288bc:	183b      	adds	r3, r7, r0
 80288be:	7359      	strb	r1, [r3, #13]
 80288c0:	7b7b      	ldrb	r3, [r7, #13]
 80288c2:	1c41      	adds	r1, r0, #1
 80288c4:	b28c      	uxth	r4, r1
 80288c6:	9e05      	ldr	r6, [sp, #20]
 80288c8:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 80288cc:	f106 0a01 	add.w	sl, r6, #1
 80288d0:	9e08      	ldr	r6, [sp, #32]
 80288d2:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 80288d6:	fa1f f38a 	uxth.w	r3, sl
 80288da:	f8a0 6050 	strh.w	r6, [r0, #80]	@ 0x50
 80288de:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 80288e2:	9305      	str	r3, [sp, #20]
 80288e4:	e9cd 2408 	strd	r2, r4, [sp, #32]
 80288e8:	f04f 0a00 	mov.w	sl, #0
 80288ec:	e6d0      	b.n	8028690 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x170>
 80288ee:	2100      	movs	r1, #0
 80288f0:	9103      	str	r1, [sp, #12]
 80288f2:	9904      	ldr	r1, [sp, #16]
 80288f4:	3102      	adds	r1, #2
 80288f6:	9104      	str	r1, [sp, #16]
 80288f8:	e6f0      	b.n	80286dc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1bc>
 80288fa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80288fc:	3101      	adds	r1, #1
 80288fe:	e7e2      	b.n	80288c6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3a6>
 8028900:	eb07 0382 	add.w	r3, r7, r2, lsl #2
 8028904:	f893 404f 	ldrb.w	r4, [r3, #79]	@ 0x4f
 8028908:	4613      	mov	r3, r2
 802890a:	2c01      	cmp	r4, #1
 802890c:	d90d      	bls.n	802892a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x40a>
 802890e:	f104 010d 	add.w	r1, r4, #13
 8028912:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8028914:	4439      	add	r1, r7
 8028916:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 802891a:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 802891e:	f801 0d01 	strb.w	r0, [r1, #-1]!
 8028922:	428e      	cmp	r6, r1
 8028924:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8028928:	d1f5      	bne.n	8028916 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x3f6>
 802892a:	b2db      	uxtb	r3, r3
 802892c:	737b      	strb	r3, [r7, #13]
 802892e:	b2a4      	uxth	r4, r4
 8028930:	e6db      	b.n	80286ea <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x1ca>
 8028932:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8028936:	f8bd 2058 	ldrh.w	r2, [sp, #88]	@ 0x58
 802893a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802893c:	1a9b      	subs	r3, r3, r2
 802893e:	fa1f f983 	uxth.w	r9, r3
 8028942:	f1b9 0f00 	cmp.w	r9, #0
 8028946:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8028948:	bf18      	it	ne
 802894a:	2300      	movne	r3, #0
 802894c:	3101      	adds	r1, #1
 802894e:	fa1f fe83 	uxth.w	lr, r3
 8028952:	9111      	str	r1, [sp, #68]	@ 0x44
 8028954:	9b06      	ldr	r3, [sp, #24]
 8028956:	e664      	b.n	8028622 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x102>
 8028958:	4b03      	ldr	r3, [pc, #12]	@ (8028968 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x448>)
 802895a:	4a04      	ldr	r2, [pc, #16]	@ (802896c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x44c>)
 802895c:	f640 41f6 	movw	r1, #3318	@ 0xcf6
 8028960:	4803      	ldr	r0, [pc, #12]	@ (8028970 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h+0x450>)
 8028962:	f009 fdc9 	bl	80324f8 <__assert_func>
 8028966:	bf00      	nop
 8028968:	080363a4 	.word	0x080363a4
 802896c:	08037804 	.word	0x08037804
 8028970:	080362e0 	.word	0x080362e0

08028974 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8028974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028978:	4690      	mov	r8, r2
 802897a:	8812      	ldrh	r2, [r2, #0]
 802897c:	b095      	sub	sp, #84	@ 0x54
 802897e:	2a01      	cmp	r2, #1
 8028980:	461c      	mov	r4, r3
 8028982:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 8028986:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8028988:	f040 8107 	bne.w	8028b9a <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x226>
 802898c:	468a      	mov	sl, r1
 802898e:	6820      	ldr	r0, [r4, #0]
 8028990:	6861      	ldr	r1, [r4, #4]
 8028992:	aa10      	add	r2, sp, #64	@ 0x40
 8028994:	c203      	stmia	r2!, {r0, r1}
 8028996:	6818      	ldr	r0, [r3, #0]
 8028998:	6859      	ldr	r1, [r3, #4]
 802899a:	aa12      	add	r2, sp, #72	@ 0x48
 802899c:	c203      	stmia	r2!, {r0, r1}
 802899e:	a810      	add	r0, sp, #64	@ 0x40
 80289a0:	f7e4 f9ce 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80289a4:	4621      	mov	r1, r4
 80289a6:	a812      	add	r0, sp, #72	@ 0x48
 80289a8:	f7e4 f9f2 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80289ac:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 80289b0:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 80289b4:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 80289b8:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 80289bc:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 80289c0:	4879      	ldr	r0, [pc, #484]	@ (8028ba8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 80289c2:	fb11 4105 	smlabb	r1, r1, r5, r4
 80289c6:	4422      	add	r2, r4
 80289c8:	442b      	add	r3, r5
 80289ca:	6800      	ldr	r0, [r0, #0]
 80289cc:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 80289d0:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 80289d4:	6802      	ldr	r2, [r0, #0]
 80289d6:	448a      	add	sl, r1
 80289d8:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 80289dc:	4c73      	ldr	r4, [pc, #460]	@ (8028bac <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x238>)
 80289de:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 80289e2:	910c      	str	r1, [sp, #48]	@ 0x30
 80289e4:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 80289e8:	42a3      	cmp	r3, r4
 80289ea:	910e      	str	r1, [sp, #56]	@ 0x38
 80289ec:	f040 80a2 	bne.w	8028b34 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c0>
 80289f0:	6841      	ldr	r1, [r0, #4]
 80289f2:	4c6f      	ldr	r4, [pc, #444]	@ (8028bb0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>)
 80289f4:	680b      	ldr	r3, [r1, #0]
 80289f6:	699b      	ldr	r3, [r3, #24]
 80289f8:	42a3      	cmp	r3, r4
 80289fa:	f040 80c1 	bne.w	8028b80 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 80289fe:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8028a00:	4798      	blx	r3
 8028a02:	4b6c      	ldr	r3, [pc, #432]	@ (8028bb4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028a04:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 8028a08:	881b      	ldrh	r3, [r3, #0]
 8028a0a:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 8028a0e:	fb01 2303 	mla	r3, r1, r3, r2
 8028a12:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8028a16:	930b      	str	r3, [sp, #44]	@ 0x2c
 8028a18:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028a1a:	2b00      	cmp	r3, #0
 8028a1c:	f340 8082 	ble.w	8028b24 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 8028a20:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028a22:	2b00      	cmp	r3, #0
 8028a24:	dd7e      	ble.n	8028b24 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b0>
 8028a26:	2200      	movs	r2, #0
 8028a28:	f04f 0e03 	mov.w	lr, #3
 8028a2c:	f04f 0c04 	mov.w	ip, #4
 8028a30:	f1c9 07ff 	rsb	r7, r9, #255	@ 0xff
 8028a34:	009b      	lsls	r3, r3, #2
 8028a36:	920d      	str	r2, [sp, #52]	@ 0x34
 8028a38:	b2bf      	uxth	r7, r7
 8028a3a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8028a3c:	fa1f f289 	uxth.w	r2, r9
 8028a40:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8028a42:	4655      	mov	r5, sl
 8028a44:	1d18      	adds	r0, r3, #4
 8028a46:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028a48:	eb0a 0603 	add.w	r6, sl, r3
 8028a4c:	e03e      	b.n	8028acc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 8028a4e:	f810 3c04 	ldrb.w	r3, [r0, #-4]
 8028a52:	f810 4c03 	ldrb.w	r4, [r0, #-3]
 8028a56:	fb13 f307 	smulbb	r3, r3, r7
 8028a5a:	fb0b 3302 	mla	r3, fp, r2, r3
 8028a5e:	b29b      	uxth	r3, r3
 8028a60:	f103 0b01 	add.w	fp, r3, #1
 8028a64:	eb0b 2313 	add.w	r3, fp, r3, lsr #8
 8028a68:	121b      	asrs	r3, r3, #8
 8028a6a:	fb14 f407 	smulbb	r4, r4, r7
 8028a6e:	f800 3c04 	strb.w	r3, [r0, #-4]
 8028a72:	784b      	ldrb	r3, [r1, #1]
 8028a74:	f810 bc02 	ldrb.w	fp, [r0, #-2]
 8028a78:	fb03 4302 	mla	r3, r3, r2, r4
 8028a7c:	b29b      	uxth	r3, r3
 8028a7e:	1c5c      	adds	r4, r3, #1
 8028a80:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8028a84:	121b      	asrs	r3, r3, #8
 8028a86:	fb1b fb07 	smulbb	fp, fp, r7
 8028a8a:	f800 3c03 	strb.w	r3, [r0, #-3]
 8028a8e:	788c      	ldrb	r4, [r1, #2]
 8028a90:	f810 3c01 	ldrb.w	r3, [r0, #-1]
 8028a94:	fb04 b402 	mla	r4, r4, r2, fp
 8028a98:	b2a4      	uxth	r4, r4
 8028a9a:	f104 0b01 	add.w	fp, r4, #1
 8028a9e:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8028aa2:	1224      	asrs	r4, r4, #8
 8028aa4:	fb13 fb07 	smulbb	fp, r3, r7
 8028aa8:	f800 4c02 	strb.w	r4, [r0, #-2]
 8028aac:	78cb      	ldrb	r3, [r1, #3]
 8028aae:	42ae      	cmp	r6, r5
 8028ab0:	fb03 b302 	mla	r3, r3, r2, fp
 8028ab4:	b29b      	uxth	r3, r3
 8028ab6:	f103 0101 	add.w	r1, r3, #1
 8028aba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8028abe:	ea4f 2323 	mov.w	r3, r3, asr #8
 8028ac2:	f800 3c01 	strb.w	r3, [r0, #-1]
 8028ac6:	f100 0004 	add.w	r0, r0, #4
 8028aca:	d018      	beq.n	8028afe <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x18a>
 8028acc:	f815 3b01 	ldrb.w	r3, [r5], #1
 8028ad0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8028ad4:	fb1e c303 	smlabb	r3, lr, r3, ip
 8028ad8:	eb08 0103 	add.w	r1, r8, r3
 8028adc:	f818 b003 	ldrb.w	fp, [r8, r3]
 8028ae0:	d1b5      	bne.n	8028a4e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8028ae2:	f800 bc04 	strb.w	fp, [r0, #-4]
 8028ae6:	784b      	ldrb	r3, [r1, #1]
 8028ae8:	42ae      	cmp	r6, r5
 8028aea:	f800 3c03 	strb.w	r3, [r0, #-3]
 8028aee:	788b      	ldrb	r3, [r1, #2]
 8028af0:	f100 0004 	add.w	r0, r0, #4
 8028af4:	f800 9c05 	strb.w	r9, [r0, #-5]
 8028af8:	f800 3c06 	strb.w	r3, [r0, #-6]
 8028afc:	d1e6      	bne.n	8028acc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 8028afe:	4b2d      	ldr	r3, [pc, #180]	@ (8028bb4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028b00:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8028b02:	881b      	ldrh	r3, [r3, #0]
 8028b04:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8028b06:	1a1b      	subs	r3, r3, r0
 8028b08:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8028b0c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8028b0e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8028b10:	441c      	add	r4, r3
 8028b12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028b14:	3001      	adds	r0, #1
 8028b16:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8028b1a:	4283      	cmp	r3, r0
 8028b1c:	900d      	str	r0, [sp, #52]	@ 0x34
 8028b1e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8028b20:	448a      	add	sl, r1
 8028b22:	d18d      	bne.n	8028a40 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xcc>
 8028b24:	4b20      	ldr	r3, [pc, #128]	@ (8028ba8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028b26:	6818      	ldr	r0, [r3, #0]
 8028b28:	6803      	ldr	r3, [r0, #0]
 8028b2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028b2c:	4798      	blx	r3
 8028b2e:	b015      	add	sp, #84	@ 0x54
 8028b30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028b34:	4798      	blx	r3
 8028b36:	2801      	cmp	r0, #1
 8028b38:	d125      	bne.n	8028b86 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x212>
 8028b3a:	4b1f      	ldr	r3, [pc, #124]	@ (8028bb8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>)
 8028b3c:	6818      	ldr	r0, [r3, #0]
 8028b3e:	b330      	cbz	r0, 8028b8e <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x21a>
 8028b40:	2502      	movs	r5, #2
 8028b42:	240b      	movs	r4, #11
 8028b44:	2600      	movs	r6, #0
 8028b46:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8028b4a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8028b4e:	9302      	str	r3, [sp, #8]
 8028b50:	4b18      	ldr	r3, [pc, #96]	@ (8028bb4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x240>)
 8028b52:	9201      	str	r2, [sp, #4]
 8028b54:	881b      	ldrh	r3, [r3, #0]
 8028b56:	9508      	str	r5, [sp, #32]
 8028b58:	9407      	str	r4, [sp, #28]
 8028b5a:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 8028b5e:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8028b62:	9306      	str	r3, [sp, #24]
 8028b64:	f8cd 9010 	str.w	r9, [sp, #16]
 8028b68:	4642      	mov	r2, r8
 8028b6a:	4651      	mov	r1, sl
 8028b6c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8028b70:	9605      	str	r6, [sp, #20]
 8028b72:	9503      	str	r5, [sp, #12]
 8028b74:	9400      	str	r4, [sp, #0]
 8028b76:	f7f8 f857 	bl	8020c28 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8028b7a:	b015      	add	sp, #84	@ 0x54
 8028b7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028b80:	4608      	mov	r0, r1
 8028b82:	4798      	blx	r3
 8028b84:	e7d7      	b.n	8028b36 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 8028b86:	4b08      	ldr	r3, [pc, #32]	@ (8028ba8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>)
 8028b88:	6818      	ldr	r0, [r3, #0]
 8028b8a:	6802      	ldr	r2, [r0, #0]
 8028b8c:	e737      	b.n	80289fe <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 8028b8e:	4b0b      	ldr	r3, [pc, #44]	@ (8028bbc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x248>)
 8028b90:	4a0b      	ldr	r2, [pc, #44]	@ (8028bc0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8028b92:	217c      	movs	r1, #124	@ 0x7c
 8028b94:	480b      	ldr	r0, [pc, #44]	@ (8028bc4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 8028b96:	f009 fcaf 	bl	80324f8 <__assert_func>
 8028b9a:	4b0b      	ldr	r3, [pc, #44]	@ (8028bc8 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 8028b9c:	4a0b      	ldr	r2, [pc, #44]	@ (8028bcc <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8028b9e:	f640 51d3 	movw	r1, #3539	@ 0xdd3
 8028ba2:	480b      	ldr	r0, [pc, #44]	@ (8028bd0 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8028ba4:	f009 fca8 	bl	80324f8 <__assert_func>
 8028ba8:	20082f08 	.word	0x20082f08
 8028bac:	0800121d 	.word	0x0800121d
 8028bb0:	0800bae5 	.word	0x0800bae5
 8028bb4:	20082f02 	.word	0x20082f02
 8028bb8:	200833a8 	.word	0x200833a8
 8028bbc:	0803623c 	.word	0x0803623c
 8028bc0:	08036aa8 	.word	0x08036aa8
 8028bc4:	08036264 	.word	0x08036264
 8028bc8:	08036304 	.word	0x08036304
 8028bcc:	08037050 	.word	0x08037050
 8028bd0:	080362e0 	.word	0x080362e0

08028bd4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8028bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028bd8:	4617      	mov	r7, r2
 8028bda:	7812      	ldrb	r2, [r2, #0]
 8028bdc:	b08f      	sub	sp, #60	@ 0x3c
 8028bde:	2a01      	cmp	r2, #1
 8028be0:	461e      	mov	r6, r3
 8028be2:	f89d 8064 	ldrb.w	r8, [sp, #100]	@ 0x64
 8028be6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8028be8:	f040 8203 	bne.w	8028ff2 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x41e>
 8028bec:	6830      	ldr	r0, [r6, #0]
 8028bee:	460d      	mov	r5, r1
 8028bf0:	6871      	ldr	r1, [r6, #4]
 8028bf2:	aa0a      	add	r2, sp, #40	@ 0x28
 8028bf4:	c203      	stmia	r2!, {r0, r1}
 8028bf6:	6818      	ldr	r0, [r3, #0]
 8028bf8:	6859      	ldr	r1, [r3, #4]
 8028bfa:	aa0c      	add	r2, sp, #48	@ 0x30
 8028bfc:	c203      	stmia	r2!, {r0, r1}
 8028bfe:	a80a      	add	r0, sp, #40	@ 0x28
 8028c00:	f7e4 f89e 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028c04:	4631      	mov	r1, r6
 8028c06:	a80c      	add	r0, sp, #48	@ 0x30
 8028c08:	f7e4 f8c2 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028c0c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028c10:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8028c14:	f003 0201 	and.w	r2, r3, #1
 8028c18:	4614      	mov	r4, r2
 8028c1a:	9206      	str	r2, [sp, #24]
 8028c1c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8028c20:	4423      	add	r3, r4
 8028c22:	fb02 1303 	mla	r3, r2, r3, r1
 8028c26:	f8bd 002a 	ldrh.w	r0, [sp, #42]	@ 0x2a
 8028c2a:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8028c2e:	4402      	add	r2, r0
 8028c30:	489d      	ldr	r0, [pc, #628]	@ (8028ea8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>)
 8028c32:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028c36:	440e      	add	r6, r1
 8028c38:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8028c3c:	6800      	ldr	r0, [r0, #0]
 8028c3e:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8028c42:	f8ad 6030 	strh.w	r6, [sp, #48]	@ 0x30
 8028c46:	9302      	str	r3, [sp, #8]
 8028c48:	f001 0301 	and.w	r3, r1, #1
 8028c4c:	6802      	ldr	r2, [r0, #0]
 8028c4e:	9305      	str	r3, [sp, #20]
 8028c50:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8028c54:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8028c56:	9303      	str	r3, [sp, #12]
 8028c58:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8028c5c:	4790      	blx	r2
 8028c5e:	4a93      	ldr	r2, [pc, #588]	@ (8028eac <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8028c60:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8028c64:	8812      	ldrh	r2, [r2, #0]
 8028c66:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8028c6a:	fb05 f502 	mul.w	r5, r5, r2
 8028c6e:	fb02 1303 	mla	r3, r2, r3, r1
 8028c72:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8028c76:	461a      	mov	r2, r3
 8028c78:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8028c7c:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8028c80:	f107 0704 	add.w	r7, r7, #4
 8028c84:	9304      	str	r3, [sp, #16]
 8028c86:	f000 8113 	beq.w	8028eb0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2dc>
 8028c8a:	4614      	mov	r4, r2
 8028c8c:	9a04      	ldr	r2, [sp, #16]
 8028c8e:	4294      	cmp	r4, r2
 8028c90:	f080 80c2 	bcs.w	8028e18 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028c94:	ea4f 6308 	mov.w	r3, r8, lsl #24
 8028c98:	9300      	str	r3, [sp, #0]
 8028c9a:	9b03      	ldr	r3, [sp, #12]
 8028c9c:	3b01      	subs	r3, #1
 8028c9e:	9309      	str	r3, [sp, #36]	@ 0x24
 8028ca0:	9b05      	ldr	r3, [sp, #20]
 8028ca2:	2b00      	cmp	r3, #0
 8028ca4:	f040 80ef 	bne.w	8028e86 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 8028ca8:	9b02      	ldr	r3, [sp, #8]
 8028caa:	9301      	str	r3, [sp, #4]
 8028cac:	9b03      	ldr	r3, [sp, #12]
 8028cae:	2b01      	cmp	r3, #1
 8028cb0:	f340 809c 	ble.w	8028dec <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x218>
 8028cb4:	3b02      	subs	r3, #2
 8028cb6:	9308      	str	r3, [sp, #32]
 8028cb8:	f104 0e10 	add.w	lr, r4, #16
 8028cbc:	085b      	lsrs	r3, r3, #1
 8028cbe:	9307      	str	r3, [sp, #28]
 8028cc0:	eb0e 0ec3 	add.w	lr, lr, r3, lsl #3
 8028cc4:	9b01      	ldr	r3, [sp, #4]
 8028cc6:	f104 0608 	add.w	r6, r4, #8
 8028cca:	f103 3cff 	add.w	ip, r3, #4294967295
 8028cce:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 8028cd2:	f856 1c08 	ldr.w	r1, [r6, #-8]
 8028cd6:	091b      	lsrs	r3, r3, #4
 8028cd8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028cdc:	18f8      	adds	r0, r7, r3
 8028cde:	5cfa      	ldrb	r2, [r7, r3]
 8028ce0:	f890 9001 	ldrb.w	r9, [r0, #1]
 8028ce4:	7883      	ldrb	r3, [r0, #2]
 8028ce6:	0e08      	lsrs	r0, r1, #24
 8028ce8:	f000 80ae 	beq.w	8028e48 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8028cec:	fb08 f500 	mul.w	r5, r8, r0
 8028cf0:	fb18 fb03 	smulbb	fp, r8, r3
 8028cf4:	1c6b      	adds	r3, r5, #1
 8028cf6:	eb03 2525 	add.w	r5, r3, r5, asr #8
 8028cfa:	fb18 f202 	smulbb	r2, r8, r2
 8028cfe:	122d      	asrs	r5, r5, #8
 8028d00:	fb18 f909 	smulbb	r9, r8, r9
 8028d04:	eba0 0a05 	sub.w	sl, r0, r5
 8028d08:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8028d0c:	fb0a b303 	mla	r3, sl, r3, fp
 8028d10:	fa5f fb81 	uxtb.w	fp, r1
 8028d14:	fb0a 220b 	mla	r2, sl, fp, r2
 8028d18:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8028d1c:	4440      	add	r0, r8
 8028d1e:	fb0a 9101 	mla	r1, sl, r1, r9
 8028d22:	1b40      	subs	r0, r0, r5
 8028d24:	b2c0      	uxtb	r0, r0
 8028d26:	fbb3 f3f0 	udiv	r3, r3, r0
 8028d2a:	fbb2 f2f0 	udiv	r2, r2, r0
 8028d2e:	fbb1 f1f0 	udiv	r1, r1, r0
 8028d32:	041b      	lsls	r3, r3, #16
 8028d34:	b2d2      	uxtb	r2, r2
 8028d36:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8028d3a:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
 8028d3e:	0209      	lsls	r1, r1, #8
 8028d40:	4303      	orrs	r3, r0
 8028d42:	b289      	uxth	r1, r1
 8028d44:	430b      	orrs	r3, r1
 8028d46:	f846 3c08 	str.w	r3, [r6, #-8]
 8028d4a:	f89c 2000 	ldrb.w	r2, [ip]
 8028d4e:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8028d52:	f002 020f 	and.w	r2, r2, #15
 8028d56:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8028d5a:	0e18      	lsrs	r0, r3, #24
 8028d5c:	eb07 0102 	add.w	r1, r7, r2
 8028d60:	d062      	beq.n	8028e28 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>
 8028d62:	fb08 f500 	mul.w	r5, r8, r0
 8028d66:	f105 0901 	add.w	r9, r5, #1
 8028d6a:	eb09 2925 	add.w	r9, r9, r5, asr #8
 8028d6e:	ea4f 2929 	mov.w	r9, r9, asr #8
 8028d72:	eba0 0b09 	sub.w	fp, r0, r9
 8028d76:	788d      	ldrb	r5, [r1, #2]
 8028d78:	f891 a001 	ldrb.w	sl, [r1, #1]
 8028d7c:	b2d9      	uxtb	r1, r3
 8028d7e:	fb0b f101 	mul.w	r1, fp, r1
 8028d82:	fb15 f508 	smulbb	r5, r5, r8
 8028d86:	5cba      	ldrb	r2, [r7, r2]
 8028d88:	fb1a fa08 	smulbb	sl, sl, r8
 8028d8c:	fb02 1108 	mla	r1, r2, r8, r1
 8028d90:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8028d94:	fb0b 5502 	mla	r5, fp, r2, r5
 8028d98:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8028d9c:	4440      	add	r0, r8
 8028d9e:	fb0b a202 	mla	r2, fp, r2, sl
 8028da2:	eba0 0009 	sub.w	r0, r0, r9
 8028da6:	b2c0      	uxtb	r0, r0
 8028da8:	fbb1 f3f0 	udiv	r3, r1, r0
 8028dac:	fbb5 f5f0 	udiv	r5, r5, r0
 8028db0:	fbb2 f2f0 	udiv	r2, r2, r0
 8028db4:	b2db      	uxtb	r3, r3
 8028db6:	042d      	lsls	r5, r5, #16
 8028db8:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8028dbc:	f405 057f 	and.w	r5, r5, #16711680	@ 0xff0000
 8028dc0:	0212      	lsls	r2, r2, #8
 8028dc2:	432b      	orrs	r3, r5
 8028dc4:	b292      	uxth	r2, r2
 8028dc6:	4313      	orrs	r3, r2
 8028dc8:	f846 3c04 	str.w	r3, [r6, #-4]
 8028dcc:	3608      	adds	r6, #8
 8028dce:	4576      	cmp	r6, lr
 8028dd0:	f47f af7d 	bne.w	8028cce <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 8028dd4:	9b07      	ldr	r3, [sp, #28]
 8028dd6:	9901      	ldr	r1, [sp, #4]
 8028dd8:	1c5a      	adds	r2, r3, #1
 8028dda:	4411      	add	r1, r2
 8028ddc:	eb04 04c2 	add.w	r4, r4, r2, lsl #3
 8028de0:	9a08      	ldr	r2, [sp, #32]
 8028de2:	ebc3 73c3 	rsb	r3, r3, r3, lsl #31
 8028de6:	9101      	str	r1, [sp, #4]
 8028de8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8028dec:	2b01      	cmp	r3, #1
 8028dee:	d032      	beq.n	8028e56 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x282>
 8028df0:	9906      	ldr	r1, [sp, #24]
 8028df2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028df6:	4a2d      	ldr	r2, [pc, #180]	@ (8028eac <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8028df8:	440b      	add	r3, r1
 8028dfa:	8812      	ldrh	r2, [r2, #0]
 8028dfc:	9903      	ldr	r1, [sp, #12]
 8028dfe:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028e02:	1a52      	subs	r2, r2, r1
 8028e04:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8028e08:	9a02      	ldr	r2, [sp, #8]
 8028e0a:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8028e0e:	9302      	str	r3, [sp, #8]
 8028e10:	9b04      	ldr	r3, [sp, #16]
 8028e12:	42a3      	cmp	r3, r4
 8028e14:	f63f af44 	bhi.w	8028ca0 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xcc>
 8028e18:	4b23      	ldr	r3, [pc, #140]	@ (8028ea8 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>)
 8028e1a:	6818      	ldr	r0, [r3, #0]
 8028e1c:	6803      	ldr	r3, [r0, #0]
 8028e1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028e20:	4798      	blx	r3
 8028e22:	b00f      	add	sp, #60	@ 0x3c
 8028e24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028e28:	5cbb      	ldrb	r3, [r7, r2]
 8028e2a:	9a00      	ldr	r2, [sp, #0]
 8028e2c:	7888      	ldrb	r0, [r1, #2]
 8028e2e:	4313      	orrs	r3, r2
 8028e30:	784a      	ldrb	r2, [r1, #1]
 8028e32:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8028e36:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8028e3a:	f846 3c04 	str.w	r3, [r6, #-4]
 8028e3e:	3608      	adds	r6, #8
 8028e40:	45b6      	cmp	lr, r6
 8028e42:	f47f af44 	bne.w	8028cce <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xfa>
 8028e46:	e7c5      	b.n	8028dd4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x200>
 8028e48:	9900      	ldr	r1, [sp, #0]
 8028e4a:	430a      	orrs	r2, r1
 8028e4c:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8028e50:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
 8028e54:	e777      	b.n	8028d46 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x172>
 8028e56:	9b01      	ldr	r3, [sp, #4]
 8028e58:	4621      	mov	r1, r4
 8028e5a:	7818      	ldrb	r0, [r3, #0]
 8028e5c:	4642      	mov	r2, r8
 8028e5e:	0900      	lsrs	r0, r0, #4
 8028e60:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8028e64:	4438      	add	r0, r7
 8028e66:	f7fb f86d 	bl	8023f44 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>
 8028e6a:	4b10      	ldr	r3, [pc, #64]	@ (8028eac <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d8>)
 8028e6c:	9903      	ldr	r1, [sp, #12]
 8028e6e:	881a      	ldrh	r2, [r3, #0]
 8028e70:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028e74:	1a52      	subs	r2, r2, r1
 8028e76:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8028e7a:	9a06      	ldr	r2, [sp, #24]
 8028e7c:	3404      	adds	r4, #4
 8028e7e:	4413      	add	r3, r2
 8028e80:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028e84:	e7c0      	b.n	8028e08 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x234>
 8028e86:	9d02      	ldr	r5, [sp, #8]
 8028e88:	4621      	mov	r1, r4
 8028e8a:	7828      	ldrb	r0, [r5, #0]
 8028e8c:	4642      	mov	r2, r8
 8028e8e:	f000 000f 	and.w	r0, r0, #15
 8028e92:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8028e96:	4438      	add	r0, r7
 8028e98:	f7fb f854 	bl	8023f44 <_ZNK8touchgfx8LCDGPU2D22blendPixelRGB888_32BPPEPKhPmh.constprop.19>
 8028e9c:	1c6b      	adds	r3, r5, #1
 8028e9e:	9301      	str	r3, [sp, #4]
 8028ea0:	3404      	adds	r4, #4
 8028ea2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028ea4:	e703      	b.n	8028cae <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8028ea6:	bf00      	nop
 8028ea8:	20082f08 	.word	0x20082f08
 8028eac:	20082f02 	.word	0x20082f02
 8028eb0:	4615      	mov	r5, r2
 8028eb2:	9a04      	ldr	r2, [sp, #16]
 8028eb4:	4295      	cmp	r5, r2
 8028eb6:	d2af      	bcs.n	8028e18 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028eb8:	9b03      	ldr	r3, [sp, #12]
 8028eba:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8028ebe:	469a      	mov	sl, r3
 8028ec0:	f103 38ff 	add.w	r8, r3, #4294967295
 8028ec4:	9b05      	ldr	r3, [sp, #20]
 8028ec6:	2b00      	cmp	r3, #0
 8028ec8:	d07d      	beq.n	8028fc6 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f2>
 8028eca:	4646      	mov	r6, r8
 8028ecc:	f899 3000 	ldrb.w	r3, [r9]
 8028ed0:	f109 0e01 	add.w	lr, r9, #1
 8028ed4:	f003 030f 	and.w	r3, r3, #15
 8028ed8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028edc:	18fa      	adds	r2, r7, r3
 8028ede:	5cfb      	ldrb	r3, [r7, r3]
 8028ee0:	7891      	ldrb	r1, [r2, #2]
 8028ee2:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8028ee6:	7852      	ldrb	r2, [r2, #1]
 8028ee8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8028eec:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8028ef0:	f845 3b04 	str.w	r3, [r5], #4
 8028ef4:	2e01      	cmp	r6, #1
 8028ef6:	dd3e      	ble.n	8028f76 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3a2>
 8028ef8:	3e02      	subs	r6, #2
 8028efa:	ea4f 0c56 	mov.w	ip, r6, lsr #1
 8028efe:	f105 0410 	add.w	r4, r5, #16
 8028f02:	eb04 04cc 	add.w	r4, r4, ip, lsl #3
 8028f06:	f105 0108 	add.w	r1, r5, #8
 8028f0a:	f10e 30ff 	add.w	r0, lr, #4294967295
 8028f0e:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8028f12:	3108      	adds	r1, #8
 8028f14:	091b      	lsrs	r3, r3, #4
 8028f16:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028f1a:	5cfa      	ldrb	r2, [r7, r3]
 8028f1c:	eb07 0b03 	add.w	fp, r7, r3
 8028f20:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8028f24:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8028f28:	f89b b001 	ldrb.w	fp, [fp, #1]
 8028f2c:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8028f30:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8028f34:	f841 3c10 	str.w	r3, [r1, #-16]
 8028f38:	7803      	ldrb	r3, [r0, #0]
 8028f3a:	f003 030f 	and.w	r3, r3, #15
 8028f3e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028f42:	5cfa      	ldrb	r2, [r7, r3]
 8028f44:	eb07 0b03 	add.w	fp, r7, r3
 8028f48:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8028f4c:	f042 427f 	orr.w	r2, r2, #4278190080	@ 0xff000000
 8028f50:	f89b b001 	ldrb.w	fp, [fp, #1]
 8028f54:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
 8028f58:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
 8028f5c:	f841 3c0c 	str.w	r3, [r1, #-12]
 8028f60:	428c      	cmp	r4, r1
 8028f62:	d1d4      	bne.n	8028f0e <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x33a>
 8028f64:	f10c 0301 	add.w	r3, ip, #1
 8028f68:	ebcc 7ccc 	rsb	ip, ip, ip, lsl #31
 8028f6c:	449e      	add	lr, r3
 8028f6e:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8028f72:	eb06 064c 	add.w	r6, r6, ip, lsl #1
 8028f76:	2e01      	cmp	r6, #1
 8028f78:	d128      	bne.n	8028fcc <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f8>
 8028f7a:	f89e 3000 	ldrb.w	r3, [lr]
 8028f7e:	091b      	lsrs	r3, r3, #4
 8028f80:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8028f84:	18fa      	adds	r2, r7, r3
 8028f86:	5cfb      	ldrb	r3, [r7, r3]
 8028f88:	7891      	ldrb	r1, [r2, #2]
 8028f8a:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8028f8e:	7852      	ldrb	r2, [r2, #1]
 8028f90:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8028f94:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8028f98:	602b      	str	r3, [r5, #0]
 8028f9a:	4b19      	ldr	r3, [pc, #100]	@ (8029000 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>)
 8028f9c:	881a      	ldrh	r2, [r3, #0]
 8028f9e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028fa2:	eba2 020a 	sub.w	r2, r2, sl
 8028fa6:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8028faa:	9a06      	ldr	r2, [sp, #24]
 8028fac:	3504      	adds	r5, #4
 8028fae:	4413      	add	r3, r2
 8028fb0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028fb4:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8028fb8:	9b04      	ldr	r3, [sp, #16]
 8028fba:	42ab      	cmp	r3, r5
 8028fbc:	f67f af2c 	bls.w	8028e18 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028fc0:	9b05      	ldr	r3, [sp, #20]
 8028fc2:	2b00      	cmp	r3, #0
 8028fc4:	d181      	bne.n	8028eca <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f6>
 8028fc6:	46ce      	mov	lr, r9
 8028fc8:	4656      	mov	r6, sl
 8028fca:	e793      	b.n	8028ef4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x320>
 8028fcc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028fd0:	4a0b      	ldr	r2, [pc, #44]	@ (8029000 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>)
 8028fd2:	9906      	ldr	r1, [sp, #24]
 8028fd4:	8812      	ldrh	r2, [r2, #0]
 8028fd6:	440b      	add	r3, r1
 8028fd8:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8028fdc:	eba2 020a 	sub.w	r2, r2, sl
 8028fe0:	eb09 0963 	add.w	r9, r9, r3, asr #1
 8028fe4:	9b04      	ldr	r3, [sp, #16]
 8028fe6:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8028fea:	42ab      	cmp	r3, r5
 8028fec:	f63f af6a 	bhi.w	8028ec4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>
 8028ff0:	e712      	b.n	8028e18 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x244>
 8028ff2:	4b04      	ldr	r3, [pc, #16]	@ (8029004 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x430>)
 8028ff4:	4a04      	ldr	r2, [pc, #16]	@ (8029008 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x434>)
 8028ff6:	f640 612c 	movw	r1, #3628	@ 0xe2c
 8028ffa:	4804      	ldr	r0, [pc, #16]	@ (802900c <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x438>)
 8028ffc:	f009 fa7c 	bl	80324f8 <__assert_func>
 8029000:	20082f02 	.word	0x20082f02
 8029004:	080363a4 	.word	0x080363a4
 8029008:	08037394 	.word	0x08037394
 802900c:	080362e0 	.word	0x080362e0

08029010 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029014:	7814      	ldrb	r4, [r2, #0]
 8029016:	b091      	sub	sp, #68	@ 0x44
 8029018:	2c01      	cmp	r4, #1
 802901a:	461d      	mov	r5, r3
 802901c:	9208      	str	r2, [sp, #32]
 802901e:	9102      	str	r1, [sp, #8]
 8029020:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8029022:	f89d a06c 	ldrb.w	sl, [sp, #108]	@ 0x6c
 8029026:	f040 814b 	bne.w	80292c0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b0>
 802902a:	6828      	ldr	r0, [r5, #0]
 802902c:	6869      	ldr	r1, [r5, #4]
 802902e:	aa0c      	add	r2, sp, #48	@ 0x30
 8029030:	c203      	stmia	r2!, {r0, r1}
 8029032:	6818      	ldr	r0, [r3, #0]
 8029034:	6859      	ldr	r1, [r3, #4]
 8029036:	aa0e      	add	r2, sp, #56	@ 0x38
 8029038:	c203      	stmia	r2!, {r0, r1}
 802903a:	a80c      	add	r0, sp, #48	@ 0x30
 802903c:	f7e3 fe80 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029040:	4629      	mov	r1, r5
 8029042:	a80e      	add	r0, sp, #56	@ 0x38
 8029044:	f7e3 fea4 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029048:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 802904c:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8029050:	f340 8130 	ble.w	80292b4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a4>
 8029054:	4623      	mov	r3, r4
 8029056:	b291      	uxth	r1, r2
 8029058:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 802905c:	f8bd 0038 	ldrh.w	r0, [sp, #56]	@ 0x38
 8029060:	fb92 f5f3 	sdiv	r5, r2, r3
 8029064:	b2ae      	uxth	r6, r5
 8029066:	fb03 2416 	mls	r4, r3, r6, r2
 802906a:	fb14 0101 	smlabb	r1, r4, r1, r0
 802906e:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	@ 0x36
 8029072:	b289      	uxth	r1, r1
 8029074:	441c      	add	r4, r3
 8029076:	3c01      	subs	r4, #1
 8029078:	9100      	str	r1, [sp, #0]
 802907a:	fb94 f4f3 	sdiv	r4, r4, r3
 802907e:	b136      	cbz	r6, 802908e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x7e>
 8029080:	9b08      	ldr	r3, [sp, #32]
 8029082:	9902      	ldr	r1, [sp, #8]
 8029084:	f853 3026 	ldr.w	r3, [r3, r6, lsl #2]
 8029088:	ba1b      	rev	r3, r3
 802908a:	4419      	add	r1, r3
 802908c:	9102      	str	r1, [sp, #8]
 802908e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8029092:	f8bd 3030 	ldrh.w	r3, [sp, #48]	@ 0x30
 8029096:	440a      	add	r2, r1
 8029098:	498d      	ldr	r1, [pc, #564]	@ (80292d0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 802909a:	4403      	add	r3, r0
 802909c:	6808      	ldr	r0, [r1, #0]
 802909e:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 80290a2:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80290a6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80290aa:	6803      	ldr	r3, [r0, #0]
 80290ac:	960a      	str	r6, [sp, #40]	@ 0x28
 80290ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80290b0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80290b4:	4798      	blx	r3
 80290b6:	9b00      	ldr	r3, [sp, #0]
 80290b8:	4986      	ldr	r1, [pc, #536]	@ (80292d4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 80290ba:	2b00      	cmp	r3, #0
 80290bc:	bf0c      	ite	eq
 80290be:	4633      	moveq	r3, r6
 80290c0:	2300      	movne	r3, #0
 80290c2:	8809      	ldrh	r1, [r1, #0]
 80290c4:	f9bd 203a 	ldrsh.w	r2, [sp, #58]	@ 0x3a
 80290c8:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 80290cc:	fb05 f501 	mul.w	r5, r5, r1
 80290d0:	fb01 6202 	mla	r2, r1, r2, r6
 80290d4:	b2a4      	uxth	r4, r4
 80290d6:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 80290da:	eb08 0285 	add.w	r2, r8, r5, lsl #2
 80290de:	00a4      	lsls	r4, r4, #2
 80290e0:	1d21      	adds	r1, r4, #4
 80290e2:	4590      	cmp	r8, r2
 80290e4:	9203      	str	r2, [sp, #12]
 80290e6:	9109      	str	r1, [sp, #36]	@ 0x24
 80290e8:	fa1f f983 	uxth.w	r9, r3
 80290ec:	d227      	bcs.n	802913e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x12e>
 80290ee:	2300      	movs	r3, #0
 80290f0:	469b      	mov	fp, r3
 80290f2:	ea4f 620a 	mov.w	r2, sl, lsl #24
 80290f6:	9304      	str	r3, [sp, #16]
 80290f8:	9205      	str	r2, [sp, #20]
 80290fa:	f1bb 0f00 	cmp.w	fp, #0
 80290fe:	d10f      	bne.n	8029120 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x110>
 8029100:	9902      	ldr	r1, [sp, #8]
 8029102:	780b      	ldrb	r3, [r1, #0]
 8029104:	ea4f 1b93 	mov.w	fp, r3, lsr #6
 8029108:	f10b 32ff 	add.w	r2, fp, #4294967295
 802910c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8029110:	2a02      	cmp	r2, #2
 8029112:	9304      	str	r3, [sp, #16]
 8029114:	f200 80c8 	bhi.w	80292a8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x298>
 8029118:	3101      	adds	r1, #1
 802911a:	9102      	str	r1, [sp, #8]
 802911c:	fa1f fb8b 	uxth.w	fp, fp
 8029120:	9b00      	ldr	r3, [sp, #0]
 8029122:	b1a3      	cbz	r3, 802914e <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x13e>
 8029124:	459b      	cmp	fp, r3
 8029126:	f080 80b6 	bcs.w	8029296 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x286>
 802912a:	eba3 0b0b 	sub.w	fp, r3, fp
 802912e:	fa1f f38b 	uxth.w	r3, fp
 8029132:	f04f 0b00 	mov.w	fp, #0
 8029136:	9300      	str	r3, [sp, #0]
 8029138:	9b03      	ldr	r3, [sp, #12]
 802913a:	4543      	cmp	r3, r8
 802913c:	d8dd      	bhi.n	80290fa <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xea>
 802913e:	4b64      	ldr	r3, [pc, #400]	@ (80292d0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>)
 8029140:	6818      	ldr	r0, [r3, #0]
 8029142:	6803      	ldr	r3, [r0, #0]
 8029144:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029146:	4798      	blx	r3
 8029148:	b011      	add	sp, #68	@ 0x44
 802914a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802914e:	2303      	movs	r3, #3
 8029150:	4619      	mov	r1, r3
 8029152:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8029154:	9b04      	ldr	r3, [sp, #16]
 8029156:	45cb      	cmp	fp, r9
 8029158:	fb11 2c03 	smlabb	ip, r1, r3, r2
 802915c:	9b08      	ldr	r3, [sp, #32]
 802915e:	449c      	add	ip, r3
 8029160:	d377      	bcc.n	8029252 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x242>
 8029162:	ebab 0309 	sub.w	r3, fp, r9
 8029166:	9a00      	ldr	r2, [sp, #0]
 8029168:	b29b      	uxth	r3, r3
 802916a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802916e:	9306      	str	r3, [sp, #24]
 8029170:	9207      	str	r2, [sp, #28]
 8029172:	464b      	mov	r3, r9
 8029174:	d077      	beq.n	8029266 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x256>
 8029176:	b303      	cbz	r3, 80291ba <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 8029178:	3b01      	subs	r3, #1
 802917a:	b29b      	uxth	r3, r3
 802917c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802917e:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8029182:	9301      	str	r3, [sp, #4]
 8029184:	f1a8 0e04 	sub.w	lr, r8, #4
 8029188:	f85e 3f04 	ldr.w	r3, [lr, #4]!
 802918c:	f89c 4000 	ldrb.w	r4, [ip]
 8029190:	0e18      	lsrs	r0, r3, #24
 8029192:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8029196:	f89c 1002 	ldrb.w	r1, [ip, #2]
 802919a:	d126      	bne.n	80291ea <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1da>
 802919c:	9b05      	ldr	r3, [sp, #20]
 802919e:	431c      	orrs	r4, r3
 80291a0:	9b01      	ldr	r3, [sp, #4]
 80291a2:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80291a6:	ea44 2606 	orr.w	r6, r4, r6, lsl #8
 80291aa:	459e      	cmp	lr, r3
 80291ac:	f8ce 6000 	str.w	r6, [lr]
 80291b0:	d1ea      	bne.n	8029188 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 80291b2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80291b4:	3301      	adds	r3, #1
 80291b6:	eb08 0883 	add.w	r8, r8, r3, lsl #2
 80291ba:	45cb      	cmp	fp, r9
 80291bc:	d346      	bcc.n	802924c <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 80291be:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80291c0:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 80291c4:	4b43      	ldr	r3, [pc, #268]	@ (80292d4 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c4>)
 80291c6:	fa1f f981 	uxth.w	r9, r1
 80291ca:	eba2 0209 	sub.w	r2, r2, r9
 80291ce:	881b      	ldrh	r3, [r3, #0]
 80291d0:	b292      	uxth	r2, r2
 80291d2:	2a00      	cmp	r2, #0
 80291d4:	eba3 0301 	sub.w	r3, r3, r1
 80291d8:	f8dd b018 	ldr.w	fp, [sp, #24]
 80291dc:	bf18      	it	ne
 80291de:	f04f 0900 	movne.w	r9, #0
 80291e2:	9200      	str	r2, [sp, #0]
 80291e4:	eb08 0883 	add.w	r8, r8, r3, lsl #2
 80291e8:	e7a6      	b.n	8029138 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 80291ea:	fb0a f200 	mul.w	r2, sl, r0
 80291ee:	fb1a f101 	smulbb	r1, sl, r1
 80291f2:	1c55      	adds	r5, r2, #1
 80291f4:	eb05 2522 	add.w	r5, r5, r2, asr #8
 80291f8:	fb1a f404 	smulbb	r4, sl, r4
 80291fc:	122d      	asrs	r5, r5, #8
 80291fe:	fb1a f606 	smulbb	r6, sl, r6
 8029202:	1b47      	subs	r7, r0, r5
 8029204:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8029208:	fb07 1102 	mla	r1, r7, r2, r1
 802920c:	b2da      	uxtb	r2, r3
 802920e:	fb07 4402 	mla	r4, r7, r2, r4
 8029212:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8029216:	4450      	add	r0, sl
 8029218:	fb07 6202 	mla	r2, r7, r2, r6
 802921c:	1b45      	subs	r5, r0, r5
 802921e:	b2ed      	uxtb	r5, r5
 8029220:	fbb1 f3f5 	udiv	r3, r1, r5
 8029224:	fbb4 f4f5 	udiv	r4, r4, r5
 8029228:	fbb2 f2f5 	udiv	r2, r2, r5
 802922c:	041b      	lsls	r3, r3, #16
 802922e:	b2e4      	uxtb	r4, r4
 8029230:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8029234:	ea44 6505 	orr.w	r5, r4, r5, lsl #24
 8029238:	0212      	lsls	r2, r2, #8
 802923a:	432b      	orrs	r3, r5
 802923c:	b292      	uxth	r2, r2
 802923e:	4313      	orrs	r3, r2
 8029240:	f8ce 3000 	str.w	r3, [lr]
 8029244:	9b01      	ldr	r3, [sp, #4]
 8029246:	459e      	cmp	lr, r3
 8029248:	d19e      	bne.n	8029188 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 802924a:	e7b2      	b.n	80291b2 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a2>
 802924c:	e9dd b906 	ldrd	fp, r9, [sp, #24]
 8029250:	e772      	b.n	8029138 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 8029252:	9a00      	ldr	r2, [sp, #0]
 8029254:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8029258:	9206      	str	r2, [sp, #24]
 802925a:	eba9 020b 	sub.w	r2, r9, fp
 802925e:	b292      	uxth	r2, r2
 8029260:	465b      	mov	r3, fp
 8029262:	9207      	str	r2, [sp, #28]
 8029264:	d187      	bne.n	8029176 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x166>
 8029266:	2b00      	cmp	r3, #0
 8029268:	d0a7      	beq.n	80291ba <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 802926a:	1e58      	subs	r0, r3, #1
 802926c:	b280      	uxth	r0, r0
 802926e:	3001      	adds	r0, #1
 8029270:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 8029274:	f89c 3000 	ldrb.w	r3, [ip]
 8029278:	f89c 1002 	ldrb.w	r1, [ip, #2]
 802927c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8029280:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8029284:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8029288:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 802928c:	f848 3b04 	str.w	r3, [r8], #4
 8029290:	4540      	cmp	r0, r8
 8029292:	d1ef      	bne.n	8029274 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x264>
 8029294:	e791      	b.n	80291ba <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1aa>
 8029296:	ebab 0b03 	sub.w	fp, fp, r3
 802929a:	2300      	movs	r3, #0
 802929c:	fa1f fb8b 	uxth.w	fp, fp
 80292a0:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 80292a4:	9300      	str	r3, [sp, #0]
 80292a6:	e747      	b.n	8029138 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x128>
 80292a8:	460b      	mov	r3, r1
 80292aa:	3302      	adds	r3, #2
 80292ac:	f891 b001 	ldrb.w	fp, [r1, #1]
 80292b0:	9302      	str	r3, [sp, #8]
 80292b2:	e735      	b.n	8029120 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x110>
 80292b4:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80292b8:	b291      	uxth	r1, r2
 80292ba:	fb94 f3f1 	sdiv	r3, r4, r1
 80292be:	e6cb      	b.n	8029058 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x48>
 80292c0:	4b05      	ldr	r3, [pc, #20]	@ (80292d8 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c8>)
 80292c2:	4a06      	ldr	r2, [pc, #24]	@ (80292dc <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>)
 80292c4:	f640 61a3 	movw	r1, #3747	@ 0xea3
 80292c8:	4805      	ldr	r0, [pc, #20]	@ (80292e0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d0>)
 80292ca:	f009 f915 	bl	80324f8 <__assert_func>
 80292ce:	bf00      	nop
 80292d0:	20082f08 	.word	0x20082f08
 80292d4:	20082f02 	.word	0x20082f02
 80292d8:	080363a4 	.word	0x080363a4
 80292dc:	08037538 	.word	0x08037538
 80292e0:	080362e0 	.word	0x080362e0

080292e4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>:
 80292e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80292e8:	7814      	ldrb	r4, [r2, #0]
 80292ea:	b09f      	sub	sp, #124	@ 0x7c
 80292ec:	2c01      	cmp	r4, #1
 80292ee:	461d      	mov	r5, r3
 80292f0:	9214      	str	r2, [sp, #80]	@ 0x50
 80292f2:	9117      	str	r1, [sp, #92]	@ 0x5c
 80292f4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80292f6:	f89d a0a4 	ldrb.w	sl, [sp, #164]	@ 0xa4
 80292fa:	f040 8232 	bne.w	8029762 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x47e>
 80292fe:	6869      	ldr	r1, [r5, #4]
 8029300:	4683      	mov	fp, r0
 8029302:	6828      	ldr	r0, [r5, #0]
 8029304:	aa1a      	add	r2, sp, #104	@ 0x68
 8029306:	c203      	stmia	r2!, {r0, r1}
 8029308:	6818      	ldr	r0, [r3, #0]
 802930a:	6859      	ldr	r1, [r3, #4]
 802930c:	aa1c      	add	r2, sp, #112	@ 0x70
 802930e:	c203      	stmia	r2!, {r0, r1}
 8029310:	a81a      	add	r0, sp, #104	@ 0x68
 8029312:	f7e3 fd15 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029316:	4629      	mov	r1, r5
 8029318:	a81c      	add	r0, sp, #112	@ 0x70
 802931a:	f7e3 fd39 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802931e:	f9bd 206c 	ldrsh.w	r2, [sp, #108]	@ 0x6c
 8029322:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8029326:	f340 8214 	ble.w	8029752 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x46e>
 802932a:	4623      	mov	r3, r4
 802932c:	b292      	uxth	r2, r2
 802932e:	9418      	str	r4, [sp, #96]	@ 0x60
 8029330:	f9bd 0072 	ldrsh.w	r0, [sp, #114]	@ 0x72
 8029334:	f9bd 106e 	ldrsh.w	r1, [sp, #110]	@ 0x6e
 8029338:	fb90 f4f3 	sdiv	r4, r0, r3
 802933c:	4419      	add	r1, r3
 802933e:	3901      	subs	r1, #1
 8029340:	fb91 f1f3 	sdiv	r1, r1, r3
 8029344:	b2a4      	uxth	r4, r4
 8029346:	fb03 0314 	mls	r3, r3, r4, r0
 802934a:	9416      	str	r4, [sp, #88]	@ 0x58
 802934c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8029350:	f8bd 6068 	ldrh.w	r6, [sp, #104]	@ 0x68
 8029354:	fb13 4202 	smlabb	r2, r3, r2, r4
 8029358:	f8bd 506a 	ldrh.w	r5, [sp, #106]	@ 0x6a
 802935c:	4bae      	ldr	r3, [pc, #696]	@ (8029618 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x334>)
 802935e:	4434      	add	r4, r6
 8029360:	4405      	add	r5, r0
 8029362:	6818      	ldr	r0, [r3, #0]
 8029364:	f8ad 4070 	strh.w	r4, [sp, #112]	@ 0x70
 8029368:	f8ad 5072 	strh.w	r5, [sp, #114]	@ 0x72
 802936c:	f9bd 7074 	ldrsh.w	r7, [sp, #116]	@ 0x74
 8029370:	6803      	ldr	r3, [r0, #0]
 8029372:	b296      	uxth	r6, r2
 8029374:	3101      	adds	r1, #1
 8029376:	9602      	str	r6, [sp, #8]
 8029378:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802937a:	970d      	str	r7, [sp, #52]	@ 0x34
 802937c:	b28c      	uxth	r4, r1
 802937e:	f9bd 5076 	ldrsh.w	r5, [sp, #118]	@ 0x76
 8029382:	4798      	blx	r3
 8029384:	2300      	movs	r3, #0
 8029386:	2e00      	cmp	r6, #0
 8029388:	bf0c      	ite	eq
 802938a:	463a      	moveq	r2, r7
 802938c:	2200      	movne	r2, #0
 802938e:	49a3      	ldr	r1, [pc, #652]	@ (802961c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x338>)
 8029390:	9315      	str	r3, [sp, #84]	@ 0x54
 8029392:	8809      	ldrh	r1, [r1, #0]
 8029394:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	@ 0x72
 8029398:	f9bd 6070 	ldrsh.w	r6, [sp, #112]	@ 0x70
 802939c:	fb05 f501 	mul.w	r5, r5, r1
 80293a0:	fb01 6303 	mla	r3, r1, r3, r6
 80293a4:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80293a8:	9301      	str	r3, [sp, #4]
 80293aa:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 80293ae:	9308      	str	r3, [sp, #32]
 80293b0:	b293      	uxth	r3, r2
 80293b2:	9303      	str	r3, [sp, #12]
 80293b4:	ea4f 630a 	mov.w	r3, sl, lsl #24
 80293b8:	930a      	str	r3, [sp, #40]	@ 0x28
 80293ba:	f10b 030e 	add.w	r3, fp, #14
 80293be:	9319      	str	r3, [sp, #100]	@ 0x64
 80293c0:	4653      	mov	r3, sl
 80293c2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80293c4:	46da      	mov	sl, fp
 80293c6:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80293ca:	f104 0904 	add.w	r9, r4, #4
 80293ce:	46cb      	mov	fp, r9
 80293d0:	4699      	mov	r9, r3
 80293d2:	9b01      	ldr	r3, [sp, #4]
 80293d4:	9a08      	ldr	r2, [sp, #32]
 80293d6:	4293      	cmp	r3, r2
 80293d8:	f080 8116 	bcs.w	8029608 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 80293dc:	2601      	movs	r6, #1
 80293de:	2700      	movs	r7, #0
 80293e0:	9b02      	ldr	r3, [sp, #8]
 80293e2:	f8bd 106c 	ldrh.w	r1, [sp, #108]	@ 0x6c
 80293e6:	46bc      	mov	ip, r7
 80293e8:	fbb3 f1f1 	udiv	r1, r3, r1
 80293ec:	e9dd 3215 	ldrd	r3, r2, [sp, #84]	@ 0x54
 80293f0:	fa12 f283 	uxtah	r2, r2, r3
 80293f4:	0092      	lsls	r2, r2, #2
 80293f6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80293f8:	3204      	adds	r2, #4
 80293fa:	1898      	adds	r0, r3, r2
 80293fc:	7883      	ldrb	r3, [r0, #2]
 80293fe:	7845      	ldrb	r5, [r0, #1]
 8029400:	021b      	lsls	r3, r3, #8
 8029402:	78c0      	ldrb	r0, [r0, #3]
 8029404:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8029408:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 802940a:	4304      	orrs	r4, r0
 802940c:	4628      	mov	r0, r5
 802940e:	46b0      	mov	r8, r6
 8029410:	4420      	add	r0, r4
 8029412:	7843      	ldrb	r3, [r0, #1]
 8029414:	5d2c      	ldrb	r4, [r5, r4]
 8029416:	021b      	lsls	r3, r3, #8
 8029418:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 802941c:	431c      	orrs	r4, r3
 802941e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8029420:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8029422:	5caa      	ldrb	r2, [r5, r2]
 8029424:	1a59      	subs	r1, r3, r1
 8029426:	b2a3      	uxth	r3, r4
 8029428:	930b      	str	r3, [sp, #44]	@ 0x2c
 802942a:	1983      	adds	r3, r0, r6
 802942c:	9306      	str	r3, [sp, #24]
 802942e:	1993      	adds	r3, r2, r6
 8029430:	9307      	str	r3, [sp, #28]
 8029432:	b28b      	uxth	r3, r1
 8029434:	9710      	str	r7, [sp, #64]	@ 0x40
 8029436:	960c      	str	r6, [sp, #48]	@ 0x30
 8029438:	920f      	str	r2, [sp, #60]	@ 0x3c
 802943a:	f88a 400d 	strb.w	r4, [sl, #13]
 802943e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8029440:	9605      	str	r6, [sp, #20]
 8029442:	9b02      	ldr	r3, [sp, #8]
 8029444:	2b00      	cmp	r3, #0
 8029446:	d038      	beq.n	80294ba <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d6>
 8029448:	4598      	cmp	r8, r3
 802944a:	f080 813f 	bcs.w	80296cc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3e8>
 802944e:	eba3 0808 	sub.w	r8, r3, r8
 8029452:	fa1f f388 	uxth.w	r3, r8
 8029456:	9302      	str	r3, [sp, #8]
 8029458:	9a08      	ldr	r2, [sp, #32]
 802945a:	9b01      	ldr	r3, [sp, #4]
 802945c:	4293      	cmp	r3, r2
 802945e:	f080 80d3 	bcs.w	8029608 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 8029462:	9806      	ldr	r0, [sp, #24]
 8029464:	9c05      	ldr	r4, [sp, #20]
 8029466:	7842      	ldrb	r2, [r0, #1]
 8029468:	f1c4 0107 	rsb	r1, r4, #7
 802946c:	7803      	ldrb	r3, [r0, #0]
 802946e:	408a      	lsls	r2, r1
 8029470:	0052      	lsls	r2, r2, #1
 8029472:	4123      	asrs	r3, r4
 8029474:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8029478:	1c61      	adds	r1, r4, #1
 802947a:	b2db      	uxtb	r3, r3
 802947c:	4313      	orrs	r3, r2
 802947e:	b2ca      	uxtb	r2, r1
 8029480:	4611      	mov	r1, r2
 8029482:	2908      	cmp	r1, #8
 8029484:	9205      	str	r2, [sp, #20]
 8029486:	b29a      	uxth	r2, r3
 8029488:	f000 812d 	beq.w	80296e6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x402>
 802948c:	3001      	adds	r0, #1
 802948e:	9006      	str	r0, [sp, #24]
 8029490:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8029492:	4291      	cmp	r1, r2
 8029494:	f0c0 80fa 	bcc.w	802968c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3a8>
 8029498:	f04f 0801 	mov.w	r8, #1
 802949c:	b2db      	uxtb	r3, r3
 802949e:	f88a 300d 	strb.w	r3, [sl, #13]
 80294a2:	9907      	ldr	r1, [sp, #28]
 80294a4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80294a8:	f0c0 8123 	bcc.w	80296f2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x40e>
 80294ac:	9b02      	ldr	r3, [sp, #8]
 80294ae:	e9cd 280b 	strd	r2, r8, [sp, #44]	@ 0x2c
 80294b2:	f04f 0c00 	mov.w	ip, #0
 80294b6:	2b00      	cmp	r3, #0
 80294b8:	d1c6      	bne.n	8029448 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x164>
 80294ba:	9b03      	ldr	r3, [sp, #12]
 80294bc:	4598      	cmp	r8, r3
 80294be:	461a      	mov	r2, r3
 80294c0:	f0c0 80ae 	bcc.w	8029620 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x33c>
 80294c4:	eba8 0303 	sub.w	r3, r8, r3
 80294c8:	b29b      	uxth	r3, r3
 80294ca:	9309      	str	r3, [sp, #36]	@ 0x24
 80294cc:	9b02      	ldr	r3, [sp, #8]
 80294ce:	9204      	str	r2, [sp, #16]
 80294d0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80294d4:	930e      	str	r3, [sp, #56]	@ 0x38
 80294d6:	9b04      	ldr	r3, [sp, #16]
 80294d8:	f000 80b0 	beq.w	802963c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x358>
 80294dc:	b393      	cbz	r3, 8029544 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 80294de:	4463      	add	r3, ip
 80294e0:	b29b      	uxth	r3, r3
 80294e2:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 80294e6:	4698      	mov	r8, r3
 80294e8:	9a01      	ldr	r2, [sp, #4]
 80294ea:	9311      	str	r3, [sp, #68]	@ 0x44
 80294ec:	f1a2 0e04 	sub.w	lr, r2, #4
 80294f0:	eb0a 030c 	add.w	r3, sl, ip
 80294f4:	7b5a      	ldrb	r2, [r3, #13]
 80294f6:	f85e 3f04 	ldr.w	r3, [lr, #4]!
 80294fa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80294fe:	eb0b 0102 	add.w	r1, fp, r2
 8029502:	f10c 0c01 	add.w	ip, ip, #1
 8029506:	f81b 0002 	ldrb.w	r0, [fp, r2]
 802950a:	784d      	ldrb	r5, [r1, #1]
 802950c:	788a      	ldrb	r2, [r1, #2]
 802950e:	0e19      	lsrs	r1, r3, #24
 8029510:	fa1f fc8c 	uxth.w	ip, ip
 8029514:	d13f      	bne.n	8029596 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b2>
 8029516:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029518:	45c4      	cmp	ip, r8
 802951a:	ea40 0003 	orr.w	r0, r0, r3
 802951e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8029522:	ea40 2505 	orr.w	r5, r0, r5, lsl #8
 8029526:	f8ce 5000 	str.w	r5, [lr]
 802952a:	d1e1      	bne.n	80294f0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 802952c:	9b04      	ldr	r3, [sp, #16]
 802952e:	9a01      	ldr	r2, [sp, #4]
 8029530:	3b01      	subs	r3, #1
 8029532:	b29b      	uxth	r3, r3
 8029534:	3301      	adds	r3, #1
 8029536:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802953a:	f8dd 8048 	ldr.w	r8, [sp, #72]	@ 0x48
 802953e:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8029542:	9301      	str	r3, [sp, #4]
 8029544:	9b03      	ldr	r3, [sp, #12]
 8029546:	4598      	cmp	r8, r3
 8029548:	d356      	bcc.n	80295f8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x314>
 802954a:	4b34      	ldr	r3, [pc, #208]	@ (802961c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x338>)
 802954c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802954e:	881b      	ldrh	r3, [r3, #0]
 8029550:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8029552:	1a5b      	subs	r3, r3, r1
 8029554:	9901      	ldr	r1, [sp, #4]
 8029556:	3201      	adds	r2, #1
 8029558:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802955c:	9301      	str	r3, [sp, #4]
 802955e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8029560:	9210      	str	r2, [sp, #64]	@ 0x40
 8029562:	4293      	cmp	r3, r2
 8029564:	f000 80e4 	beq.w	8029730 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x44c>
 8029568:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 802956c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8029570:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8029574:	1a9b      	subs	r3, r3, r2
 8029576:	b29b      	uxth	r3, r3
 8029578:	2b00      	cmp	r3, #0
 802957a:	bf14      	ite	ne
 802957c:	2200      	movne	r2, #0
 802957e:	2300      	moveq	r3, #0
 8029580:	9203      	str	r2, [sp, #12]
 8029582:	9302      	str	r3, [sp, #8]
 8029584:	9b01      	ldr	r3, [sp, #4]
 8029586:	9a08      	ldr	r2, [sp, #32]
 8029588:	4293      	cmp	r3, r2
 802958a:	d23d      	bcs.n	8029608 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x324>
 802958c:	f1b8 0f00 	cmp.w	r8, #0
 8029590:	f47f af57 	bne.w	8029442 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 8029594:	e765      	b.n	8029462 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x17e>
 8029596:	fb09 f601 	mul.w	r6, r9, r1
 802959a:	fb19 f702 	smulbb	r7, r9, r2
 802959e:	1c74      	adds	r4, r6, #1
 80295a0:	eb04 2426 	add.w	r4, r4, r6, asr #8
 80295a4:	fb19 f000 	smulbb	r0, r9, r0
 80295a8:	1224      	asrs	r4, r4, #8
 80295aa:	fb19 f505 	smulbb	r5, r9, r5
 80295ae:	1b0e      	subs	r6, r1, r4
 80295b0:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80295b4:	fb06 7202 	mla	r2, r6, r2, r7
 80295b8:	b2df      	uxtb	r7, r3
 80295ba:	fb06 0007 	mla	r0, r6, r7, r0
 80295be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80295c2:	fb06 5503 	mla	r5, r6, r3, r5
 80295c6:	4449      	add	r1, r9
 80295c8:	1b09      	subs	r1, r1, r4
 80295ca:	b2c9      	uxtb	r1, r1
 80295cc:	fbb2 f2f1 	udiv	r2, r2, r1
 80295d0:	fbb0 f0f1 	udiv	r0, r0, r1
 80295d4:	fbb5 f5f1 	udiv	r5, r5, r1
 80295d8:	0413      	lsls	r3, r2, #16
 80295da:	b2c0      	uxtb	r0, r0
 80295dc:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80295e0:	ea40 6101 	orr.w	r1, r0, r1, lsl #24
 80295e4:	022d      	lsls	r5, r5, #8
 80295e6:	430b      	orrs	r3, r1
 80295e8:	b2ad      	uxth	r5, r5
 80295ea:	432b      	orrs	r3, r5
 80295ec:	45c4      	cmp	ip, r8
 80295ee:	f8ce 3000 	str.w	r3, [lr]
 80295f2:	f47f af7d 	bne.w	80294f0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x20c>
 80295f6:	e799      	b.n	802952c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x248>
 80295f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80295fa:	9a08      	ldr	r2, [sp, #32]
 80295fc:	9303      	str	r3, [sp, #12]
 80295fe:	9b01      	ldr	r3, [sp, #4]
 8029600:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8029604:	4293      	cmp	r3, r2
 8029606:	d3c1      	bcc.n	802958c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a8>
 8029608:	4b03      	ldr	r3, [pc, #12]	@ (8029618 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x334>)
 802960a:	6818      	ldr	r0, [r3, #0]
 802960c:	6803      	ldr	r3, [r0, #0]
 802960e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029610:	4798      	blx	r3
 8029612:	b01f      	add	sp, #124	@ 0x7c
 8029614:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029618:	20082f08 	.word	0x20082f08
 802961c:	20082f02 	.word	0x20082f02
 8029620:	9b02      	ldr	r3, [sp, #8]
 8029622:	f8cd 8010 	str.w	r8, [sp, #16]
 8029626:	9309      	str	r3, [sp, #36]	@ 0x24
 8029628:	9b03      	ldr	r3, [sp, #12]
 802962a:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 802962e:	eba3 0308 	sub.w	r3, r3, r8
 8029632:	b29b      	uxth	r3, r3
 8029634:	930e      	str	r3, [sp, #56]	@ 0x38
 8029636:	9b04      	ldr	r3, [sp, #16]
 8029638:	f47f af50 	bne.w	80294dc <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1f8>
 802963c:	2b00      	cmp	r3, #0
 802963e:	d081      	beq.n	8029544 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 8029640:	eb0c 0003 	add.w	r0, ip, r3
 8029644:	9901      	ldr	r1, [sp, #4]
 8029646:	b280      	uxth	r0, r0
 8029648:	eb0a 030c 	add.w	r3, sl, ip
 802964c:	7b5b      	ldrb	r3, [r3, #13]
 802964e:	f10c 0c01 	add.w	ip, ip, #1
 8029652:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8029656:	eb0b 0203 	add.w	r2, fp, r3
 802965a:	f81b 3003 	ldrb.w	r3, [fp, r3]
 802965e:	7894      	ldrb	r4, [r2, #2]
 8029660:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8029664:	7852      	ldrb	r2, [r2, #1]
 8029666:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 802966a:	fa1f fc8c 	uxth.w	ip, ip
 802966e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8029672:	4584      	cmp	ip, r0
 8029674:	f841 3b04 	str.w	r3, [r1], #4
 8029678:	d1e6      	bne.n	8029648 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x364>
 802967a:	9b04      	ldr	r3, [sp, #16]
 802967c:	9a01      	ldr	r2, [sp, #4]
 802967e:	3b01      	subs	r3, #1
 8029680:	b29b      	uxth	r3, r3
 8029682:	3301      	adds	r3, #1
 8029684:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8029688:	9301      	str	r3, [sp, #4]
 802968a:	e75b      	b.n	8029544 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>
 802968c:	9b07      	ldr	r3, [sp, #28]
 802968e:	4293      	cmp	r3, r2
 8029690:	d832      	bhi.n	80296f8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x414>
 8029692:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8029694:	f89a 100d 	ldrb.w	r1, [sl, #13]
 8029698:	eb0a 0300 	add.w	r3, sl, r0
 802969c:	7359      	strb	r1, [r3, #13]
 802969e:	f89a 300d 	ldrb.w	r3, [sl, #13]
 80296a2:	1c41      	adds	r1, r0, #1
 80296a4:	fa1f f881 	uxth.w	r8, r1
 80296a8:	9c07      	ldr	r4, [sp, #28]
 80296aa:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80296ac:	eb0a 0084 	add.w	r0, sl, r4, lsl #2
 80296b0:	3401      	adds	r4, #1
 80296b2:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 80296b6:	b2a3      	uxth	r3, r4
 80296b8:	f8a0 5050 	strh.w	r5, [r0, #80]	@ 0x50
 80296bc:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 80296c0:	9307      	str	r3, [sp, #28]
 80296c2:	e9cd 280b 	strd	r2, r8, [sp, #44]	@ 0x2c
 80296c6:	f04f 0c00 	mov.w	ip, #0
 80296ca:	e6ba      	b.n	8029442 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x15e>
 80296cc:	eba8 0803 	sub.w	r8, r8, r3
 80296d0:	449c      	add	ip, r3
 80296d2:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 80296d6:	fa1f f888 	uxth.w	r8, r8
 80296da:	9303      	str	r3, [sp, #12]
 80296dc:	2300      	movs	r3, #0
 80296de:	fa1f fc8c 	uxth.w	ip, ip
 80296e2:	9302      	str	r3, [sp, #8]
 80296e4:	e74e      	b.n	8029584 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a0>
 80296e6:	2100      	movs	r1, #0
 80296e8:	9105      	str	r1, [sp, #20]
 80296ea:	9906      	ldr	r1, [sp, #24]
 80296ec:	3102      	adds	r1, #2
 80296ee:	9106      	str	r1, [sp, #24]
 80296f0:	e6ce      	b.n	8029490 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ac>
 80296f2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80296f4:	3101      	adds	r1, #1
 80296f6:	e7d7      	b.n	80296a8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x3c4>
 80296f8:	eb0a 0382 	add.w	r3, sl, r2, lsl #2
 80296fc:	f893 804f 	ldrb.w	r8, [r3, #79]	@ 0x4f
 8029700:	4613      	mov	r3, r2
 8029702:	f1b8 0f01 	cmp.w	r8, #1
 8029706:	d90d      	bls.n	8029724 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x440>
 8029708:	f108 010d 	add.w	r1, r8, #13
 802970c:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 802970e:	4451      	add	r1, sl
 8029710:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8029714:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 8029718:	f801 0d01 	strb.w	r0, [r1, #-1]!
 802971c:	428c      	cmp	r4, r1
 802971e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8029722:	d1f5      	bne.n	8029710 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x42c>
 8029724:	b2db      	uxtb	r3, r3
 8029726:	f88a 300d 	strb.w	r3, [sl, #13]
 802972a:	fa1f f888 	uxth.w	r8, r8
 802972e:	e6b8      	b.n	80294a2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x1be>
 8029730:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8029734:	f8bd 2068 	ldrh.w	r2, [sp, #104]	@ 0x68
 8029738:	9915      	ldr	r1, [sp, #84]	@ 0x54
 802973a:	1a9b      	subs	r3, r3, r2
 802973c:	b29b      	uxth	r3, r3
 802973e:	2b00      	cmp	r3, #0
 8029740:	9302      	str	r3, [sp, #8]
 8029742:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8029744:	bf18      	it	ne
 8029746:	2300      	movne	r3, #0
 8029748:	3101      	adds	r1, #1
 802974a:	b29b      	uxth	r3, r3
 802974c:	9115      	str	r1, [sp, #84]	@ 0x54
 802974e:	9303      	str	r3, [sp, #12]
 8029750:	e63f      	b.n	80293d2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0xee>
 8029752:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8029756:	b292      	uxth	r2, r2
 8029758:	fb93 f3f2 	sdiv	r3, r3, r2
 802975c:	b299      	uxth	r1, r3
 802975e:	9118      	str	r1, [sp, #96]	@ 0x60
 8029760:	e5e6      	b.n	8029330 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x4c>
 8029762:	4b03      	ldr	r3, [pc, #12]	@ (8029770 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x48c>)
 8029764:	4a03      	ldr	r2, [pc, #12]	@ (8029774 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x490>)
 8029766:	f640 7142 	movw	r1, #3906	@ 0xf42
 802976a:	4803      	ldr	r0, [pc, #12]	@ (8029778 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h+0x494>)
 802976c:	f008 fec4 	bl	80324f8 <__assert_func>
 8029770:	080363a4 	.word	0x080363a4
 8029774:	08037894 	.word	0x08037894
 8029778:	080362e0 	.word	0x080362e0

0802977c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 802977c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029780:	4617      	mov	r7, r2
 8029782:	8812      	ldrh	r2, [r2, #0]
 8029784:	b095      	sub	sp, #84	@ 0x54
 8029786:	461c      	mov	r4, r3
 8029788:	f89d 907c 	ldrb.w	r9, [sp, #124]	@ 0x7c
 802978c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802978e:	2a00      	cmp	r2, #0
 8029790:	f040 8112 	bne.w	80299b8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x23c>
 8029794:	4688      	mov	r8, r1
 8029796:	6820      	ldr	r0, [r4, #0]
 8029798:	6861      	ldr	r1, [r4, #4]
 802979a:	aa10      	add	r2, sp, #64	@ 0x40
 802979c:	c203      	stmia	r2!, {r0, r1}
 802979e:	6818      	ldr	r0, [r3, #0]
 80297a0:	6859      	ldr	r1, [r3, #4]
 80297a2:	aa12      	add	r2, sp, #72	@ 0x48
 80297a4:	c203      	stmia	r2!, {r0, r1}
 80297a6:	a810      	add	r0, sp, #64	@ 0x40
 80297a8:	f7e3 faca 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80297ac:	4621      	mov	r1, r4
 80297ae:	a812      	add	r0, sp, #72	@ 0x48
 80297b0:	f7e3 faee 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80297b4:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 80297b8:	f9bd 504a 	ldrsh.w	r5, [sp, #74]	@ 0x4a
 80297bc:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 80297c0:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 80297c4:	f8bd 3042 	ldrh.w	r3, [sp, #66]	@ 0x42
 80297c8:	487f      	ldr	r0, [pc, #508]	@ (80299c8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 80297ca:	fb11 4105 	smlabb	r1, r1, r5, r4
 80297ce:	4422      	add	r2, r4
 80297d0:	442b      	add	r3, r5
 80297d2:	6800      	ldr	r0, [r0, #0]
 80297d4:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 80297d8:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 80297dc:	6802      	ldr	r2, [r0, #0]
 80297de:	4488      	add	r8, r1
 80297e0:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	@ 0x4c
 80297e4:	4c79      	ldr	r4, [pc, #484]	@ (80299cc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x250>)
 80297e6:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
 80297ea:	910c      	str	r1, [sp, #48]	@ 0x30
 80297ec:	f9bd 104e 	ldrsh.w	r1, [sp, #78]	@ 0x4e
 80297f0:	42a3      	cmp	r3, r4
 80297f2:	910e      	str	r1, [sp, #56]	@ 0x38
 80297f4:	f040 80ab 	bne.w	802994e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d2>
 80297f8:	6841      	ldr	r1, [r0, #4]
 80297fa:	4c75      	ldr	r4, [pc, #468]	@ (80299d0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x254>)
 80297fc:	680b      	ldr	r3, [r1, #0]
 80297fe:	699b      	ldr	r3, [r3, #24]
 8029800:	42a3      	cmp	r3, r4
 8029802:	f040 80cb 	bne.w	802999c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x220>
 8029806:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 8029808:	4798      	blx	r3
 802980a:	4b72      	ldr	r3, [pc, #456]	@ (80299d4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 802980c:	f9bd 104a 	ldrsh.w	r1, [sp, #74]	@ 0x4a
 8029810:	881b      	ldrh	r3, [r3, #0]
 8029812:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	@ 0x48
 8029816:	fb01 2303 	mla	r3, r1, r3, r2
 802981a:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 802981e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8029820:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8029822:	2b00      	cmp	r3, #0
 8029824:	f340 808b 	ble.w	802993e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 8029828:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802982a:	2b00      	cmp	r3, #0
 802982c:	f340 8087 	ble.w	802993e <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c2>
 8029830:	2200      	movs	r2, #0
 8029832:	f04f 0c04 	mov.w	ip, #4
 8029836:	009b      	lsls	r3, r3, #2
 8029838:	920d      	str	r2, [sp, #52]	@ 0x34
 802983a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802983c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802983e:	4645      	mov	r5, r8
 8029840:	1d1c      	adds	r4, r3, #4
 8029842:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029844:	eb08 0e03 	add.w	lr, r8, r3
 8029848:	e048      	b.n	80298dc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 802984a:	fb09 f303 	mul.w	r3, r9, r3
 802984e:	1c5a      	adds	r2, r3, #1
 8029850:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8029854:	121b      	asrs	r3, r3, #8
 8029856:	b2d8      	uxtb	r0, r3
 8029858:	43c1      	mvns	r1, r0
 802985a:	b29b      	uxth	r3, r3
 802985c:	fb1a f203 	smulbb	r2, sl, r3
 8029860:	f814 ac04 	ldrb.w	sl, [r4, #-4]
 8029864:	b2c9      	uxtb	r1, r1
 8029866:	fb0a 2a01 	mla	sl, sl, r1, r2
 802986a:	fa1f fa8a 	uxth.w	sl, sl
 802986e:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 8029872:	f10a 0b01 	add.w	fp, sl, #1
 8029876:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 802987a:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 802987e:	fb12 fb01 	smulbb	fp, r2, r1
 8029882:	f804 ac04 	strb.w	sl, [r4, #-4]
 8029886:	7872      	ldrb	r2, [r6, #1]
 8029888:	f814 ac02 	ldrb.w	sl, [r4, #-2]
 802988c:	fb02 b203 	mla	r2, r2, r3, fp
 8029890:	b292      	uxth	r2, r2
 8029892:	f102 0b01 	add.w	fp, r2, #1
 8029896:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802989a:	fb1a fa01 	smulbb	sl, sl, r1
 802989e:	1212      	asrs	r2, r2, #8
 80298a0:	f804 2c03 	strb.w	r2, [r4, #-3]
 80298a4:	78b1      	ldrb	r1, [r6, #2]
 80298a6:	f814 2c01 	ldrb.w	r2, [r4, #-1]
 80298aa:	fb01 a103 	mla	r1, r1, r3, sl
 80298ae:	fb12 f303 	smulbb	r3, r2, r3
 80298b2:	b289      	uxth	r1, r1
 80298b4:	b29b      	uxth	r3, r3
 80298b6:	f101 0a01 	add.w	sl, r1, #1
 80298ba:	1c5e      	adds	r6, r3, #1
 80298bc:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 80298c0:	4402      	add	r2, r0
 80298c2:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80298c6:	1209      	asrs	r1, r1, #8
 80298c8:	eba2 2313 	sub.w	r3, r2, r3, lsr #8
 80298cc:	f804 1c02 	strb.w	r1, [r4, #-2]
 80298d0:	f804 3c01 	strb.w	r3, [r4, #-1]
 80298d4:	45ae      	cmp	lr, r5
 80298d6:	f104 0404 	add.w	r4, r4, #4
 80298da:	d01c      	beq.n	8029916 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x19a>
 80298dc:	f815 2b01 	ldrb.w	r2, [r5], #1
 80298e0:	fb1c c202 	smlabb	r2, ip, r2, ip
 80298e4:	18be      	adds	r6, r7, r2
 80298e6:	78f3      	ldrb	r3, [r6, #3]
 80298e8:	2b00      	cmp	r3, #0
 80298ea:	d0f3      	beq.n	80298d4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x158>
 80298ec:	2bff      	cmp	r3, #255	@ 0xff
 80298ee:	f817 a002 	ldrb.w	sl, [r7, r2]
 80298f2:	d1aa      	bne.n	802984a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xce>
 80298f4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80298f8:	d1a7      	bne.n	802984a <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xce>
 80298fa:	f804 ac04 	strb.w	sl, [r4, #-4]
 80298fe:	7873      	ldrb	r3, [r6, #1]
 8029900:	45ae      	cmp	lr, r5
 8029902:	f804 3c03 	strb.w	r3, [r4, #-3]
 8029906:	78b3      	ldrb	r3, [r6, #2]
 8029908:	f104 0404 	add.w	r4, r4, #4
 802990c:	f804 9c05 	strb.w	r9, [r4, #-5]
 8029910:	f804 3c06 	strb.w	r3, [r4, #-6]
 8029914:	d1e2      	bne.n	80298dc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 8029916:	4b2f      	ldr	r3, [pc, #188]	@ (80299d4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8029918:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802991a:	881b      	ldrh	r3, [r3, #0]
 802991c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802991e:	1a5b      	subs	r3, r3, r1
 8029920:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8029924:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8029926:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8029928:	4418      	add	r0, r3
 802992a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802992c:	3101      	adds	r1, #1
 802992e:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 8029932:	428b      	cmp	r3, r1
 8029934:	910d      	str	r1, [sp, #52]	@ 0x34
 8029936:	900b      	str	r0, [sp, #44]	@ 0x2c
 8029938:	4490      	add	r8, r2
 802993a:	f47f af7f 	bne.w	802983c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xc0>
 802993e:	4b22      	ldr	r3, [pc, #136]	@ (80299c8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 8029940:	6818      	ldr	r0, [r3, #0]
 8029942:	6803      	ldr	r3, [r0, #0]
 8029944:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029946:	4798      	blx	r3
 8029948:	b015      	add	sp, #84	@ 0x54
 802994a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802994e:	4798      	blx	r3
 8029950:	4603      	mov	r3, r0
 8029952:	2b01      	cmp	r3, #1
 8029954:	d126      	bne.n	80299a4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x228>
 8029956:	4a20      	ldr	r2, [pc, #128]	@ (80299d8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x25c>)
 8029958:	6810      	ldr	r0, [r2, #0]
 802995a:	b338      	cbz	r0, 80299ac <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x230>
 802995c:	f04f 0c02 	mov.w	ip, #2
 8029960:	260b      	movs	r6, #11
 8029962:	4a1c      	ldr	r2, [pc, #112]	@ (80299d4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x258>)
 8029964:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8029968:	8814      	ldrh	r4, [r2, #0]
 802996a:	f8bd 5044 	ldrh.w	r5, [sp, #68]	@ 0x44
 802996e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8029972:	9406      	str	r4, [sp, #24]
 8029974:	f8bd 404a 	ldrh.w	r4, [sp, #74]	@ 0x4a
 8029978:	e9cd 2101 	strd	r2, r1, [sp, #4]
 802997c:	9305      	str	r3, [sp, #20]
 802997e:	f8cd 9010 	str.w	r9, [sp, #16]
 8029982:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8029986:	463a      	mov	r2, r7
 8029988:	4641      	mov	r1, r8
 802998a:	e9cd 6c07 	strd	r6, ip, [sp, #28]
 802998e:	9503      	str	r5, [sp, #12]
 8029990:	9400      	str	r4, [sp, #0]
 8029992:	f7f7 f949 	bl	8020c28 <_ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8029996:	b015      	add	sp, #84	@ 0x54
 8029998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802999c:	4608      	mov	r0, r1
 802999e:	4798      	blx	r3
 80299a0:	4603      	mov	r3, r0
 80299a2:	e7d6      	b.n	8029952 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d6>
 80299a4:	4b08      	ldr	r3, [pc, #32]	@ (80299c8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24c>)
 80299a6:	6818      	ldr	r0, [r3, #0]
 80299a8:	6802      	ldr	r2, [r0, #0]
 80299aa:	e72c      	b.n	8029806 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x8a>
 80299ac:	4b0b      	ldr	r3, [pc, #44]	@ (80299dc <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x260>)
 80299ae:	4a0c      	ldr	r2, [pc, #48]	@ (80299e0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x264>)
 80299b0:	217c      	movs	r1, #124	@ 0x7c
 80299b2:	480c      	ldr	r0, [pc, #48]	@ (80299e4 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x268>)
 80299b4:	f008 fda0 	bl	80324f8 <__assert_func>
 80299b8:	4b0b      	ldr	r3, [pc, #44]	@ (80299e8 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x26c>)
 80299ba:	4a0c      	ldr	r2, [pc, #48]	@ (80299ec <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x270>)
 80299bc:	f241 012a 	movw	r1, #4138	@ 0x102a
 80299c0:	480b      	ldr	r0, [pc, #44]	@ (80299f0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>)
 80299c2:	f008 fd99 	bl	80324f8 <__assert_func>
 80299c6:	bf00      	nop
 80299c8:	20082f08 	.word	0x20082f08
 80299cc:	0800121d 	.word	0x0800121d
 80299d0:	0800bae5 	.word	0x0800bae5
 80299d4:	20082f02 	.word	0x20082f02
 80299d8:	200833a8 	.word	0x200833a8
 80299dc:	0803623c 	.word	0x0803623c
 80299e0:	08036aa8 	.word	0x08036aa8
 80299e4:	08036264 	.word	0x08036264
 80299e8:	08036354 	.word	0x08036354
 80299ec:	080371f0 	.word	0x080371f0
 80299f0:	080362e0 	.word	0x080362e0

080299f4 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>:
 80299f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80299f8:	f89d 0018 	ldrb.w	r0, [sp, #24]
 80299fc:	fb03 f300 	mul.w	r3, r3, r0
 8029a00:	1c58      	adds	r0, r3, #1
 8029a02:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8029a06:	121b      	asrs	r3, r3, #8
 8029a08:	2bff      	cmp	r3, #255	@ 0xff
 8029a0a:	d039      	beq.n	8029a80 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 8029a0c:	6810      	ldr	r0, [r2, #0]
 8029a0e:	0e07      	lsrs	r7, r0, #24
 8029a10:	d036      	beq.n	8029a80 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0x8c>
 8029a12:	b2dc      	uxtb	r4, r3
 8029a14:	2b00      	cmp	r3, #0
 8029a16:	d03d      	beq.n	8029a94 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh+0xa0>
 8029a18:	fb04 f507 	mul.w	r5, r4, r7
 8029a1c:	1c6e      	adds	r6, r5, #1
 8029a1e:	eb06 2625 	add.w	r6, r6, r5, asr #8
 8029a22:	1236      	asrs	r6, r6, #8
 8029a24:	f891 8002 	ldrb.w	r8, [r1, #2]
 8029a28:	eba7 0e06 	sub.w	lr, r7, r6
 8029a2c:	b2c5      	uxtb	r5, r0
 8029a2e:	f891 c001 	ldrb.w	ip, [r1, #1]
 8029a32:	fb0e f505 	mul.w	r5, lr, r5
 8029a36:	fb03 f808 	mul.w	r8, r3, r8
 8029a3a:	7809      	ldrb	r1, [r1, #0]
 8029a3c:	fb03 fc0c 	mul.w	ip, r3, ip
 8029a40:	fb03 5501 	mla	r5, r3, r1, r5
 8029a44:	f3c0 4107 	ubfx	r1, r0, #16, #8
 8029a48:	f3c0 2307 	ubfx	r3, r0, #8, #8
 8029a4c:	fb0e 8101 	mla	r1, lr, r1, r8
 8029a50:	19e0      	adds	r0, r4, r7
 8029a52:	fb0e c303 	mla	r3, lr, r3, ip
 8029a56:	1b80      	subs	r0, r0, r6
 8029a58:	b2c0      	uxtb	r0, r0
 8029a5a:	fbb1 f1f0 	udiv	r1, r1, r0
 8029a5e:	fbb5 f4f0 	udiv	r4, r5, r0
 8029a62:	fbb3 f3f0 	udiv	r3, r3, r0
 8029a66:	0409      	lsls	r1, r1, #16
 8029a68:	b2e4      	uxtb	r4, r4
 8029a6a:	f401 017f 	and.w	r1, r1, #16711680	@ 0xff0000
 8029a6e:	ea44 6000 	orr.w	r0, r4, r0, lsl #24
 8029a72:	021b      	lsls	r3, r3, #8
 8029a74:	4301      	orrs	r1, r0
 8029a76:	b29b      	uxth	r3, r3
 8029a78:	430b      	orrs	r3, r1
 8029a7a:	6013      	str	r3, [r2, #0]
 8029a7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029a80:	7848      	ldrb	r0, [r1, #1]
 8029a82:	788d      	ldrb	r5, [r1, #2]
 8029a84:	780c      	ldrb	r4, [r1, #0]
 8029a86:	0200      	lsls	r0, r0, #8
 8029a88:	ea40 4105 	orr.w	r1, r0, r5, lsl #16
 8029a8c:	4321      	orrs	r1, r4
 8029a8e:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8029a92:	6013      	str	r3, [r2, #0]
 8029a94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08029a98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029a98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029a9c:	4692      	mov	sl, r2
 8029a9e:	7812      	ldrb	r2, [r2, #0]
 8029aa0:	b095      	sub	sp, #84	@ 0x54
 8029aa2:	460d      	mov	r5, r1
 8029aa4:	461e      	mov	r6, r3
 8029aa6:	900d      	str	r0, [sp, #52]	@ 0x34
 8029aa8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8029aaa:	f89d 107c 	ldrb.w	r1, [sp, #124]	@ 0x7c
 8029aae:	2a00      	cmp	r2, #0
 8029ab0:	f040 816b 	bne.w	8029d8a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f2>
 8029ab4:	6830      	ldr	r0, [r6, #0]
 8029ab6:	460f      	mov	r7, r1
 8029ab8:	6871      	ldr	r1, [r6, #4]
 8029aba:	aa10      	add	r2, sp, #64	@ 0x40
 8029abc:	c203      	stmia	r2!, {r0, r1}
 8029abe:	6818      	ldr	r0, [r3, #0]
 8029ac0:	6859      	ldr	r1, [r3, #4]
 8029ac2:	aa12      	add	r2, sp, #72	@ 0x48
 8029ac4:	c203      	stmia	r2!, {r0, r1}
 8029ac6:	a810      	add	r0, sp, #64	@ 0x40
 8029ac8:	f7e3 f93a 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029acc:	4631      	mov	r1, r6
 8029ace:	a812      	add	r0, sp, #72	@ 0x48
 8029ad0:	f7e3 f95e 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029ad4:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8029ad8:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 8029adc:	f003 0201 	and.w	r2, r3, #1
 8029ae0:	4614      	mov	r4, r2
 8029ae2:	9208      	str	r2, [sp, #32]
 8029ae4:	f9bd 204a 	ldrsh.w	r2, [sp, #74]	@ 0x4a
 8029ae8:	f8bd 0042 	ldrh.w	r0, [sp, #66]	@ 0x42
 8029aec:	4423      	add	r3, r4
 8029aee:	fb02 1303 	mla	r3, r2, r3, r1
 8029af2:	f8bd 6040 	ldrh.w	r6, [sp, #64]	@ 0x40
 8029af6:	4402      	add	r2, r0
 8029af8:	48a7      	ldr	r0, [pc, #668]	@ (8029d98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 8029afa:	440e      	add	r6, r1
 8029afc:	6800      	ldr	r0, [r0, #0]
 8029afe:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 8029b02:	f8ad 204a 	strh.w	r2, [sp, #74]	@ 0x4a
 8029b06:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8029b0a:	eb05 0363 	add.w	r3, r5, r3, asr #1
 8029b0e:	6802      	ldr	r2, [r0, #0]
 8029b10:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 8029b14:	9302      	str	r3, [sp, #8]
 8029b16:	f001 0301 	and.w	r3, r1, #1
 8029b1a:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8029b1c:	9309      	str	r3, [sp, #36]	@ 0x24
 8029b1e:	9607      	str	r6, [sp, #28]
 8029b20:	f9bd 404e 	ldrsh.w	r4, [sp, #78]	@ 0x4e
 8029b24:	4790      	blx	r2
 8029b26:	4a9d      	ldr	r2, [pc, #628]	@ (8029d9c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8029b28:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	@ 0x4a
 8029b2c:	8812      	ldrh	r2, [r2, #0]
 8029b2e:	f9bd 1048 	ldrsh.w	r1, [sp, #72]	@ 0x48
 8029b32:	fb04 f402 	mul.w	r4, r4, r2
 8029b36:	fb02 1303 	mla	r3, r2, r3, r1
 8029b3a:	eb00 0583 	add.w	r5, r0, r3, lsl #2
 8029b3e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8029b42:	429d      	cmp	r5, r3
 8029b44:	930a      	str	r3, [sp, #40]	@ 0x28
 8029b46:	f10a 0a04 	add.w	sl, sl, #4
 8029b4a:	f080 80f4 	bcs.w	8029d36 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x29e>
 8029b4e:	46bb      	mov	fp, r7
 8029b50:	1e73      	subs	r3, r6, #1
 8029b52:	930c      	str	r3, [sp, #48]	@ 0x30
 8029b54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8029b56:	2b00      	cmp	r3, #0
 8029b58:	f000 8104 	beq.w	8029d64 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2cc>
 8029b5c:	9a02      	ldr	r2, [sp, #8]
 8029b5e:	7813      	ldrb	r3, [r2, #0]
 8029b60:	1c54      	adds	r4, r2, #1
 8029b62:	f003 030f 	and.w	r3, r3, #15
 8029b66:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029b6a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029b6c:	0e1b      	lsrs	r3, r3, #24
 8029b6e:	f040 8104 	bne.w	8029d7a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e2>
 8029b72:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029b74:	3504      	adds	r5, #4
 8029b76:	2b01      	cmp	r3, #1
 8029b78:	f340 80bf 	ble.w	8029cfa <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x262>
 8029b7c:	3b02      	subs	r3, #2
 8029b7e:	ea4f 0e53 	mov.w	lr, r3, lsr #1
 8029b82:	9304      	str	r3, [sp, #16]
 8029b84:	f10e 0301 	add.w	r3, lr, #1
 8029b88:	e9cd 5e05 	strd	r5, lr, [sp, #20]
 8029b8c:	9303      	str	r3, [sp, #12]
 8029b8e:	18e7      	adds	r7, r4, r3
 8029b90:	f105 0808 	add.w	r8, r5, #8
 8029b94:	46de      	mov	lr, fp
 8029b96:	e00b      	b.n	8029bb0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x118>
 8029b98:	f005 050f 	and.w	r5, r5, #15
 8029b9c:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
 8029ba0:	3401      	adds	r4, #1
 8029ba2:	0e1a      	lsrs	r2, r3, #24
 8029ba4:	d153      	bne.n	8029c4e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b6>
 8029ba6:	42bc      	cmp	r4, r7
 8029ba8:	f108 0808 	add.w	r8, r8, #8
 8029bac:	f000 8099 	beq.w	8029ce2 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x24a>
 8029bb0:	7825      	ldrb	r5, [r4, #0]
 8029bb2:	092b      	lsrs	r3, r5, #4
 8029bb4:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029bb8:	0e1a      	lsrs	r2, r3, #24
 8029bba:	d0ed      	beq.n	8029b98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029bbc:	fb0e f202 	mul.w	r2, lr, r2
 8029bc0:	1c51      	adds	r1, r2, #1
 8029bc2:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8029bc6:	1212      	asrs	r2, r2, #8
 8029bc8:	2aff      	cmp	r2, #255	@ 0xff
 8029bca:	f000 80bc 	beq.w	8029d46 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 8029bce:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8029bd2:	0e0e      	lsrs	r6, r1, #24
 8029bd4:	f000 80b7 	beq.w	8029d46 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ae>
 8029bd8:	b2d0      	uxtb	r0, r2
 8029bda:	2a00      	cmp	r2, #0
 8029bdc:	d0dc      	beq.n	8029b98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029bde:	fb00 fc06 	mul.w	ip, r0, r6
 8029be2:	f10c 0501 	add.w	r5, ip, #1
 8029be6:	eb05 252c 	add.w	r5, r5, ip, asr #8
 8029bea:	122d      	asrs	r5, r5, #8
 8029bec:	950b      	str	r5, [sp, #44]	@ 0x2c
 8029bee:	fa5f fb81 	uxtb.w	fp, r1
 8029bf2:	1b75      	subs	r5, r6, r5
 8029bf4:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8029bf8:	fb05 fb0b 	mul.w	fp, r5, fp
 8029bfc:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 8029c00:	fb02 f909 	mul.w	r9, r2, r9
 8029c04:	fb02 fc0c 	mul.w	ip, r2, ip
 8029c08:	b2db      	uxtb	r3, r3
 8029c0a:	fb02 b303 	mla	r3, r2, r3, fp
 8029c0e:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8029c12:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8029c16:	fb05 9902 	mla	r9, r5, r2, r9
 8029c1a:	fb05 c101 	mla	r1, r5, r1, ip
 8029c1e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8029c20:	4430      	add	r0, r6
 8029c22:	1b45      	subs	r5, r0, r5
 8029c24:	b2ed      	uxtb	r5, r5
 8029c26:	fbb9 f2f5 	udiv	r2, r9, r5
 8029c2a:	fbb3 f3f5 	udiv	r3, r3, r5
 8029c2e:	fbb1 f1f5 	udiv	r1, r1, r5
 8029c32:	0412      	lsls	r2, r2, #16
 8029c34:	b2db      	uxtb	r3, r3
 8029c36:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8029c3a:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8029c3e:	0209      	lsls	r1, r1, #8
 8029c40:	4313      	orrs	r3, r2
 8029c42:	b289      	uxth	r1, r1
 8029c44:	430b      	orrs	r3, r1
 8029c46:	f848 3c08 	str.w	r3, [r8, #-8]
 8029c4a:	7825      	ldrb	r5, [r4, #0]
 8029c4c:	e7a4      	b.n	8029b98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029c4e:	fb0e f202 	mul.w	r2, lr, r2
 8029c52:	1c51      	adds	r1, r2, #1
 8029c54:	eb01 2222 	add.w	r2, r1, r2, asr #8
 8029c58:	1212      	asrs	r2, r2, #8
 8029c5a:	2aff      	cmp	r2, #255	@ 0xff
 8029c5c:	d07b      	beq.n	8029d56 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2be>
 8029c5e:	f858 1c04 	ldr.w	r1, [r8, #-4]
 8029c62:	0e0e      	lsrs	r6, r1, #24
 8029c64:	d077      	beq.n	8029d56 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2be>
 8029c66:	b2d0      	uxtb	r0, r2
 8029c68:	2a00      	cmp	r2, #0
 8029c6a:	d09c      	beq.n	8029ba6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8029c6c:	fb00 fc06 	mul.w	ip, r0, r6
 8029c70:	f10c 0501 	add.w	r5, ip, #1
 8029c74:	eb05 252c 	add.w	r5, r5, ip, asr #8
 8029c78:	122d      	asrs	r5, r5, #8
 8029c7a:	950b      	str	r5, [sp, #44]	@ 0x2c
 8029c7c:	fa5f fb81 	uxtb.w	fp, r1
 8029c80:	1b75      	subs	r5, r6, r5
 8029c82:	f3c3 4907 	ubfx	r9, r3, #16, #8
 8029c86:	fb05 fb0b 	mul.w	fp, r5, fp
 8029c8a:	f3c3 2c07 	ubfx	ip, r3, #8, #8
 8029c8e:	fb02 f909 	mul.w	r9, r2, r9
 8029c92:	fb02 fc0c 	mul.w	ip, r2, ip
 8029c96:	b2db      	uxtb	r3, r3
 8029c98:	fb02 b303 	mla	r3, r2, r3, fp
 8029c9c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8029ca0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8029ca4:	fb05 9902 	mla	r9, r5, r2, r9
 8029ca8:	fb05 c101 	mla	r1, r5, r1, ip
 8029cac:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8029cae:	4430      	add	r0, r6
 8029cb0:	1b45      	subs	r5, r0, r5
 8029cb2:	b2ed      	uxtb	r5, r5
 8029cb4:	fbb9 f2f5 	udiv	r2, r9, r5
 8029cb8:	fbb3 f3f5 	udiv	r3, r3, r5
 8029cbc:	fbb1 f1f5 	udiv	r1, r1, r5
 8029cc0:	0412      	lsls	r2, r2, #16
 8029cc2:	b2db      	uxtb	r3, r3
 8029cc4:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 8029cc8:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8029ccc:	0209      	lsls	r1, r1, #8
 8029cce:	4313      	orrs	r3, r2
 8029cd0:	b289      	uxth	r1, r1
 8029cd2:	430b      	orrs	r3, r1
 8029cd4:	42bc      	cmp	r4, r7
 8029cd6:	f848 3c04 	str.w	r3, [r8, #-4]
 8029cda:	f108 0808 	add.w	r8, r8, #8
 8029cde:	f47f af67 	bne.w	8029bb0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x118>
 8029ce2:	46f3      	mov	fp, lr
 8029ce4:	f8dd e018 	ldr.w	lr, [sp, #24]
 8029ce8:	9a04      	ldr	r2, [sp, #16]
 8029cea:	ebce 73ce 	rsb	r3, lr, lr, lsl #31
 8029cee:	9d05      	ldr	r5, [sp, #20]
 8029cf0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8029cf4:	9a03      	ldr	r2, [sp, #12]
 8029cf6:	eb05 05c2 	add.w	r5, r5, r2, lsl #3
 8029cfa:	2b01      	cmp	r3, #1
 8029cfc:	d107      	bne.n	8029d0e <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x276>
 8029cfe:	7823      	ldrb	r3, [r4, #0]
 8029d00:	091b      	lsrs	r3, r3, #4
 8029d02:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8029d06:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029d08:	0e1b      	lsrs	r3, r3, #24
 8029d0a:	d12e      	bne.n	8029d6a <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d2>
 8029d0c:	3504      	adds	r5, #4
 8029d0e:	9908      	ldr	r1, [sp, #32]
 8029d10:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8029d14:	4a21      	ldr	r2, [pc, #132]	@ (8029d9c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x304>)
 8029d16:	440b      	add	r3, r1
 8029d18:	8812      	ldrh	r2, [r2, #0]
 8029d1a:	9907      	ldr	r1, [sp, #28]
 8029d1c:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8029d20:	1a52      	subs	r2, r2, r1
 8029d22:	eb05 0582 	add.w	r5, r5, r2, lsl #2
 8029d26:	9a02      	ldr	r2, [sp, #8]
 8029d28:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8029d2c:	9302      	str	r3, [sp, #8]
 8029d2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029d30:	42ab      	cmp	r3, r5
 8029d32:	f63f af0f 	bhi.w	8029b54 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xbc>
 8029d36:	4b18      	ldr	r3, [pc, #96]	@ (8029d98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x300>)
 8029d38:	6818      	ldr	r0, [r3, #0]
 8029d3a:	6803      	ldr	r3, [r0, #0]
 8029d3c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029d3e:	4798      	blx	r3
 8029d40:	b015      	add	sp, #84	@ 0x54
 8029d42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029d46:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8029d4a:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8029d4e:	f848 2c08 	str.w	r2, [r8, #-8]
 8029d52:	7825      	ldrb	r5, [r4, #0]
 8029d54:	e720      	b.n	8029b98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x100>
 8029d56:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8029d5a:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 8029d5e:	f848 2c04 	str.w	r2, [r8, #-4]
 8029d62:	e720      	b.n	8029ba6 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10e>
 8029d64:	9c02      	ldr	r4, [sp, #8]
 8029d66:	9b07      	ldr	r3, [sp, #28]
 8029d68:	e705      	b.n	8029b76 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xde>
 8029d6a:	9300      	str	r3, [sp, #0]
 8029d6c:	462a      	mov	r2, r5
 8029d6e:	465b      	mov	r3, fp
 8029d70:	a90f      	add	r1, sp, #60	@ 0x3c
 8029d72:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8029d74:	f7ff fe3e 	bl	80299f4 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 8029d78:	e7c8      	b.n	8029d0c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x274>
 8029d7a:	9300      	str	r3, [sp, #0]
 8029d7c:	462a      	mov	r2, r5
 8029d7e:	465b      	mov	r3, fp
 8029d80:	a90f      	add	r1, sp, #60	@ 0x3c
 8029d82:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8029d84:	f7ff fe36 	bl	80299f4 <_ZNK8touchgfx8LCDGPU2D24blendPixelARGB8888_32BPPEPKhPmhh>
 8029d88:	e6f3      	b.n	8029b72 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xda>
 8029d8a:	4b05      	ldr	r3, [pc, #20]	@ (8029da0 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x308>)
 8029d8c:	4a05      	ldr	r2, [pc, #20]	@ (8029da4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x30c>)
 8029d8e:	f241 018c 	movw	r1, #4236	@ 0x108c
 8029d92:	4805      	ldr	r0, [pc, #20]	@ (8029da8 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x310>)
 8029d94:	f008 fbb0 	bl	80324f8 <__assert_func>
 8029d98:	20082f08 	.word	0x20082f08
 8029d9c:	20082f02 	.word	0x20082f02
 8029da0:	080363d4 	.word	0x080363d4
 8029da4:	080376e4 	.word	0x080376e4
 8029da8:	080362e0 	.word	0x080362e0

08029dac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 8029dac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029db0:	b093      	sub	sp, #76	@ 0x4c
 8029db2:	9206      	str	r2, [sp, #24]
 8029db4:	468b      	mov	fp, r1
 8029db6:	7812      	ldrb	r2, [r2, #0]
 8029db8:	f89d 1074 	ldrb.w	r1, [sp, #116]	@ 0x74
 8029dbc:	461c      	mov	r4, r3
 8029dbe:	9108      	str	r1, [sp, #32]
 8029dc0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029dc2:	2a00      	cmp	r2, #0
 8029dc4:	f040 815f 	bne.w	802a086 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2da>
 8029dc8:	6820      	ldr	r0, [r4, #0]
 8029dca:	6861      	ldr	r1, [r4, #4]
 8029dcc:	aa0e      	add	r2, sp, #56	@ 0x38
 8029dce:	c203      	stmia	r2!, {r0, r1}
 8029dd0:	6818      	ldr	r0, [r3, #0]
 8029dd2:	6859      	ldr	r1, [r3, #4]
 8029dd4:	aa10      	add	r2, sp, #64	@ 0x40
 8029dd6:	c203      	stmia	r2!, {r0, r1}
 8029dd8:	a80e      	add	r0, sp, #56	@ 0x38
 8029dda:	f7e2 ffb1 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029dde:	4621      	mov	r1, r4
 8029de0:	a810      	add	r0, sp, #64	@ 0x40
 8029de2:	f7e2 ffd5 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029de6:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8029dea:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8029dee:	f340 8137 	ble.w	802a060 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2b4>
 8029df2:	2201      	movs	r2, #1
 8029df4:	b299      	uxth	r1, r3
 8029df6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8029dfa:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8029dfe:	fb93 f5f2 	sdiv	r5, r3, r2
 8029e02:	b2ae      	uxth	r6, r5
 8029e04:	fb02 3416 	mls	r4, r2, r6, r3
 8029e08:	fb14 0101 	smlabb	r1, r4, r1, r0
 8029e0c:	f9bd 403e 	ldrsh.w	r4, [sp, #62]	@ 0x3e
 8029e10:	fa1f fa81 	uxth.w	sl, r1
 8029e14:	4414      	add	r4, r2
 8029e16:	3c01      	subs	r4, #1
 8029e18:	fb94 f4f2 	sdiv	r4, r4, r2
 8029e1c:	b126      	cbz	r6, 8029e28 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x7c>
 8029e1e:	9a06      	ldr	r2, [sp, #24]
 8029e20:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8029e24:	ba12      	rev	r2, r2
 8029e26:	4493      	add	fp, r2
 8029e28:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8029e2c:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8029e30:	4402      	add	r2, r0
 8029e32:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8029e36:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 8029e3a:	440b      	add	r3, r1
 8029e3c:	4616      	mov	r6, r2
 8029e3e:	4995      	ldr	r1, [pc, #596]	@ (802a094 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 8029e40:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8029e44:	6808      	ldr	r0, [r1, #0]
 8029e46:	9203      	str	r2, [sp, #12]
 8029e48:	6803      	ldr	r3, [r0, #0]
 8029e4a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8029e4e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8029e50:	4798      	blx	r3
 8029e52:	f1ba 0f00 	cmp.w	sl, #0
 8029e56:	bf0c      	ite	eq
 8029e58:	4633      	moveq	r3, r6
 8029e5a:	2300      	movne	r3, #0
 8029e5c:	498e      	ldr	r1, [pc, #568]	@ (802a098 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 8029e5e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8029e62:	8809      	ldrh	r1, [r1, #0]
 8029e64:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 8029e68:	fb05 f501 	mul.w	r5, r5, r1
 8029e6c:	fb01 6202 	mla	r2, r1, r2, r6
 8029e70:	b2a4      	uxth	r4, r4
 8029e72:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 8029e76:	00a2      	lsls	r2, r4, #2
 8029e78:	eb08 0485 	add.w	r4, r8, r5, lsl #2
 8029e7c:	3204      	adds	r2, #4
 8029e7e:	45a0      	cmp	r8, r4
 8029e80:	9207      	str	r2, [sp, #28]
 8029e82:	fa1f f983 	uxth.w	r9, r3
 8029e86:	d21e      	bcs.n	8029ec6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x11a>
 8029e88:	2300      	movs	r3, #0
 8029e8a:	4648      	mov	r0, r9
 8029e8c:	9301      	str	r3, [sp, #4]
 8029e8e:	461d      	mov	r5, r3
 8029e90:	4653      	mov	r3, sl
 8029e92:	b985      	cbnz	r5, 8029eb6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x10a>
 8029e94:	f89b 2000 	ldrb.w	r2, [fp]
 8029e98:	0995      	lsrs	r5, r2, #6
 8029e9a:	1e69      	subs	r1, r5, #1
 8029e9c:	2902      	cmp	r1, #2
 8029e9e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8029ea2:	bf88      	it	hi
 8029ea4:	f89b 5001 	ldrbhi.w	r5, [fp, #1]
 8029ea8:	9201      	str	r2, [sp, #4]
 8029eaa:	bf9a      	itte	ls
 8029eac:	f10b 0b01 	addls.w	fp, fp, #1
 8029eb0:	b2ad      	uxthls	r5, r5
 8029eb2:	f10b 0b02 	addhi.w	fp, fp, #2
 8029eb6:	b173      	cbz	r3, 8029ed6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x12a>
 8029eb8:	429d      	cmp	r5, r3
 8029eba:	d259      	bcs.n	8029f70 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1c4>
 8029ebc:	1b5b      	subs	r3, r3, r5
 8029ebe:	2500      	movs	r5, #0
 8029ec0:	b29b      	uxth	r3, r3
 8029ec2:	45a0      	cmp	r8, r4
 8029ec4:	d3e5      	bcc.n	8029e92 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xe6>
 8029ec6:	4b73      	ldr	r3, [pc, #460]	@ (802a094 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2e8>)
 8029ec8:	6818      	ldr	r0, [r3, #0]
 8029eca:	6803      	ldr	r3, [r0, #0]
 8029ecc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029ece:	4798      	blx	r3
 8029ed0:	b013      	add	sp, #76	@ 0x4c
 8029ed2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029ed6:	2204      	movs	r2, #4
 8029ed8:	4616      	mov	r6, r2
 8029eda:	9907      	ldr	r1, [sp, #28]
 8029edc:	9a01      	ldr	r2, [sp, #4]
 8029ede:	4285      	cmp	r5, r0
 8029ee0:	fb16 1202 	smlabb	r2, r6, r2, r1
 8029ee4:	9906      	ldr	r1, [sp, #24]
 8029ee6:	588e      	ldr	r6, [r1, r2]
 8029ee8:	ea4f 6c16 	mov.w	ip, r6, lsr #24
 8029eec:	d357      	bcc.n	8029f9e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1f2>
 8029eee:	1a2a      	subs	r2, r5, r0
 8029ef0:	b292      	uxth	r2, r2
 8029ef2:	9202      	str	r2, [sp, #8]
 8029ef4:	2800      	cmp	r0, #0
 8029ef6:	d041      	beq.n	8029f7c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d0>
 8029ef8:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8029efc:	9a08      	ldr	r2, [sp, #32]
 8029efe:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8029f02:	fb02 f20c 	mul.w	r2, r2, ip
 8029f06:	f102 0a01 	add.w	sl, r2, #1
 8029f0a:	eb0a 2222 	add.w	r2, sl, r2, asr #8
 8029f0e:	1212      	asrs	r2, r2, #8
 8029f10:	b2d1      	uxtb	r1, r2
 8029f12:	910a      	str	r1, [sp, #40]	@ 0x28
 8029f14:	b291      	uxth	r1, r2
 8029f16:	9109      	str	r1, [sp, #36]	@ 0x24
 8029f18:	fb02 f109 	mul.w	r1, r2, r9
 8029f1c:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8029f20:	ea4f 2709 	mov.w	r7, r9, lsl #8
 8029f24:	b2f6      	uxtb	r6, r6
 8029f26:	ea47 470e 	orr.w	r7, r7, lr, lsl #16
 8029f2a:	4337      	orrs	r7, r6
 8029f2c:	910b      	str	r1, [sp, #44]	@ 0x2c
 8029f2e:	fb06 f602 	mul.w	r6, r6, r2
 8029f32:	fb02 fe0e 	mul.w	lr, r2, lr
 8029f36:	ea47 6702 	orr.w	r7, r7, r2, lsl #24
 8029f3a:	f1bc 0f00 	cmp.w	ip, #0
 8029f3e:	d036      	beq.n	8029fae <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x202>
 8029f40:	2a00      	cmp	r2, #0
 8029f42:	d13b      	bne.n	8029fbc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x210>
 8029f44:	9a04      	ldr	r2, [sp, #16]
 8029f46:	1e51      	subs	r1, r2, #1
 8029f48:	b289      	uxth	r1, r1
 8029f4a:	eb08 0c81 	add.w	ip, r8, r1, lsl #2
 8029f4e:	f1a8 0204 	sub.w	r2, r8, #4
 8029f52:	f852 6f04 	ldr.w	r6, [r2, #4]!
 8029f56:	0e36      	lsrs	r6, r6, #24
 8029f58:	bf08      	it	eq
 8029f5a:	6017      	streq	r7, [r2, #0]
 8029f5c:	4594      	cmp	ip, r2
 8029f5e:	d1f8      	bne.n	8029f52 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a6>
 8029f60:	3101      	adds	r1, #1
 8029f62:	eb08 0881 	add.w	r8, r8, r1, lsl #2
 8029f66:	4285      	cmp	r5, r0
 8029f68:	d208      	bcs.n	8029f7c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1d0>
 8029f6a:	9d02      	ldr	r5, [sp, #8]
 8029f6c:	9805      	ldr	r0, [sp, #20]
 8029f6e:	e7a8      	b.n	8029ec2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 8029f70:	1aed      	subs	r5, r5, r3
 8029f72:	b2ad      	uxth	r5, r5
 8029f74:	f8bd 000c 	ldrh.w	r0, [sp, #12]
 8029f78:	2300      	movs	r3, #0
 8029f7a:	e7a2      	b.n	8029ec2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 8029f7c:	9903      	ldr	r1, [sp, #12]
 8029f7e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8029f82:	4a45      	ldr	r2, [pc, #276]	@ (802a098 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ec>)
 8029f84:	b288      	uxth	r0, r1
 8029f86:	1a1b      	subs	r3, r3, r0
 8029f88:	8812      	ldrh	r2, [r2, #0]
 8029f8a:	b29b      	uxth	r3, r3
 8029f8c:	2b00      	cmp	r3, #0
 8029f8e:	eba2 0201 	sub.w	r2, r2, r1
 8029f92:	9d02      	ldr	r5, [sp, #8]
 8029f94:	bf18      	it	ne
 8029f96:	2000      	movne	r0, #0
 8029f98:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 8029f9c:	e791      	b.n	8029ec2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 8029f9e:	1b42      	subs	r2, r0, r5
 8029fa0:	b292      	uxth	r2, r2
 8029fa2:	9205      	str	r2, [sp, #20]
 8029fa4:	2d00      	cmp	r5, #0
 8029fa6:	d06b      	beq.n	802a080 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d4>
 8029fa8:	9504      	str	r5, [sp, #16]
 8029faa:	9302      	str	r3, [sp, #8]
 8029fac:	e7a6      	b.n	8029efc <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x150>
 8029fae:	9a04      	ldr	r2, [sp, #16]
 8029fb0:	3a01      	subs	r2, #1
 8029fb2:	b292      	uxth	r2, r2
 8029fb4:	3201      	adds	r2, #1
 8029fb6:	eb08 0882 	add.w	r8, r8, r2, lsl #2
 8029fba:	e7d4      	b.n	8029f66 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 8029fbc:	2aff      	cmp	r2, #255	@ 0xff
 8029fbe:	9a04      	ldr	r2, [sp, #16]
 8029fc0:	d054      	beq.n	802a06c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2c0>
 8029fc2:	f102 3aff 	add.w	sl, r2, #4294967295
 8029fc6:	fa1f fa8a 	uxth.w	sl, sl
 8029fca:	e9cd 6e0c 	strd	r6, lr, [sp, #48]	@ 0x30
 8029fce:	f10a 0a01 	add.w	sl, sl, #1
 8029fd2:	eb08 0a8a 	add.w	sl, r8, sl, lsl #2
 8029fd6:	9304      	str	r3, [sp, #16]
 8029fd8:	f8d8 2000 	ldr.w	r2, [r8]
 8029fdc:	0e11      	lsrs	r1, r2, #24
 8029fde:	d038      	beq.n	802a052 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a6>
 8029fe0:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8029fe2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029fe4:	fb11 f606 	smulbb	r6, r1, r6
 8029fe8:	b2b6      	uxth	r6, r6
 8029fea:	f106 0e01 	add.w	lr, r6, #1
 8029fee:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8029ff2:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8029ff6:	eba1 090e 	sub.w	r9, r1, lr
 8029ffa:	b2d6      	uxtb	r6, r2
 8029ffc:	fb09 3606 	mla	r6, r9, r6, r3
 802a000:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802a002:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 802a006:	fb09 3c0c 	mla	ip, r9, ip, r3
 802a00a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802a00c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802a010:	4419      	add	r1, r3
 802a012:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802a014:	eba1 010e 	sub.w	r1, r1, lr
 802a018:	fb09 3202 	mla	r2, r9, r2, r3
 802a01c:	b2c9      	uxtb	r1, r1
 802a01e:	fbb6 f6f1 	udiv	r6, r6, r1
 802a022:	fbbc fcf1 	udiv	ip, ip, r1
 802a026:	fbb2 f9f1 	udiv	r9, r2, r1
 802a02a:	b2f6      	uxtb	r6, r6
 802a02c:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 802a030:	ea46 6601 	orr.w	r6, r6, r1, lsl #24
 802a034:	f40c 027f 	and.w	r2, ip, #16711680	@ 0xff0000
 802a038:	ea4f 2109 	mov.w	r1, r9, lsl #8
 802a03c:	4332      	orrs	r2, r6
 802a03e:	b289      	uxth	r1, r1
 802a040:	430a      	orrs	r2, r1
 802a042:	f8c8 2000 	str.w	r2, [r8]
 802a046:	f108 0804 	add.w	r8, r8, #4
 802a04a:	45d0      	cmp	r8, sl
 802a04c:	d1c4      	bne.n	8029fd8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 802a04e:	9b04      	ldr	r3, [sp, #16]
 802a050:	e789      	b.n	8029f66 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 802a052:	f8c8 7000 	str.w	r7, [r8]
 802a056:	f108 0804 	add.w	r8, r8, #4
 802a05a:	45d0      	cmp	r8, sl
 802a05c:	d1bc      	bne.n	8029fd8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x22c>
 802a05e:	e7f6      	b.n	802a04e <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2a2>
 802a060:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 802a064:	b299      	uxth	r1, r3
 802a066:	fb94 f2f1 	sdiv	r2, r4, r1
 802a06a:	e6c4      	b.n	8029df6 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x4a>
 802a06c:	3a01      	subs	r2, #1
 802a06e:	b292      	uxth	r2, r2
 802a070:	3201      	adds	r2, #1
 802a072:	eb08 0282 	add.w	r2, r8, r2, lsl #2
 802a076:	f848 7b04 	str.w	r7, [r8], #4
 802a07a:	4590      	cmp	r8, r2
 802a07c:	d1fb      	bne.n	802a076 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2ca>
 802a07e:	e772      	b.n	8029f66 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ba>
 802a080:	9805      	ldr	r0, [sp, #20]
 802a082:	462b      	mov	r3, r5
 802a084:	e71d      	b.n	8029ec2 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x116>
 802a086:	4b05      	ldr	r3, [pc, #20]	@ (802a09c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f0>)
 802a088:	4a05      	ldr	r2, [pc, #20]	@ (802a0a0 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f4>)
 802a08a:	f241 01eb 	movw	r1, #4331	@ 0x10eb
 802a08e:	4805      	ldr	r0, [pc, #20]	@ (802a0a4 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2f8>)
 802a090:	f008 fa32 	bl	80324f8 <__assert_func>
 802a094:	20082f08 	.word	0x20082f08
 802a098:	20082f02 	.word	0x20082f02
 802a09c:	080363d4 	.word	0x080363d4
 802a0a0:	08037af0 	.word	0x08037af0
 802a0a4:	080362e0 	.word	0x080362e0

0802a0a8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>:
 802a0a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a0ac:	b0a1      	sub	sp, #132	@ 0x84
 802a0ae:	9210      	str	r2, [sp, #64]	@ 0x40
 802a0b0:	9119      	str	r1, [sp, #100]	@ 0x64
 802a0b2:	7812      	ldrb	r2, [r2, #0]
 802a0b4:	f89d 10ac 	ldrb.w	r1, [sp, #172]	@ 0xac
 802a0b8:	461c      	mov	r4, r3
 802a0ba:	9104      	str	r1, [sp, #16]
 802a0bc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802a0be:	2a00      	cmp	r2, #0
 802a0c0:	f040 8215 	bne.w	802a4ee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x446>
 802a0c4:	6861      	ldr	r1, [r4, #4]
 802a0c6:	4683      	mov	fp, r0
 802a0c8:	6820      	ldr	r0, [r4, #0]
 802a0ca:	aa1c      	add	r2, sp, #112	@ 0x70
 802a0cc:	c203      	stmia	r2!, {r0, r1}
 802a0ce:	6818      	ldr	r0, [r3, #0]
 802a0d0:	6859      	ldr	r1, [r3, #4]
 802a0d2:	aa1e      	add	r2, sp, #120	@ 0x78
 802a0d4:	c203      	stmia	r2!, {r0, r1}
 802a0d6:	a81c      	add	r0, sp, #112	@ 0x70
 802a0d8:	f7e2 fe32 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a0dc:	4621      	mov	r1, r4
 802a0de:	a81e      	add	r0, sp, #120	@ 0x78
 802a0e0:	f7e2 fe56 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a0e4:	f9bd 1074 	ldrsh.w	r1, [sp, #116]	@ 0x74
 802a0e8:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 802a0ec:	f340 81f7 	ble.w	802a4de <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x436>
 802a0f0:	2301      	movs	r3, #1
 802a0f2:	b289      	uxth	r1, r1
 802a0f4:	931a      	str	r3, [sp, #104]	@ 0x68
 802a0f6:	f9bd 007a 	ldrsh.w	r0, [sp, #122]	@ 0x7a
 802a0fa:	f9bd 2076 	ldrsh.w	r2, [sp, #118]	@ 0x76
 802a0fe:	fb90 f4f3 	sdiv	r4, r0, r3
 802a102:	441a      	add	r2, r3
 802a104:	3a01      	subs	r2, #1
 802a106:	fb92 f2f3 	sdiv	r2, r2, r3
 802a10a:	b2a4      	uxth	r4, r4
 802a10c:	fb03 0314 	mls	r3, r3, r4, r0
 802a110:	9418      	str	r4, [sp, #96]	@ 0x60
 802a112:	f8bd 4078 	ldrh.w	r4, [sp, #120]	@ 0x78
 802a116:	f8bd 6070 	ldrh.w	r6, [sp, #112]	@ 0x70
 802a11a:	fb13 4101 	smlabb	r1, r3, r1, r4
 802a11e:	f8bd 5072 	ldrh.w	r5, [sp, #114]	@ 0x72
 802a122:	4bc6      	ldr	r3, [pc, #792]	@ (802a43c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 802a124:	4434      	add	r4, r6
 802a126:	4405      	add	r5, r0
 802a128:	6818      	ldr	r0, [r3, #0]
 802a12a:	f8ad 4078 	strh.w	r4, [sp, #120]	@ 0x78
 802a12e:	f8ad 507a 	strh.w	r5, [sp, #122]	@ 0x7a
 802a132:	f9bd 607c 	ldrsh.w	r6, [sp, #124]	@ 0x7c
 802a136:	6803      	ldr	r3, [r0, #0]
 802a138:	3201      	adds	r2, #1
 802a13a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802a13c:	9608      	str	r6, [sp, #32]
 802a13e:	fa1f f881 	uxth.w	r8, r1
 802a142:	b294      	uxth	r4, r2
 802a144:	f9bd 507e 	ldrsh.w	r5, [sp, #126]	@ 0x7e
 802a148:	4798      	blx	r3
 802a14a:	2300      	movs	r3, #0
 802a14c:	49bc      	ldr	r1, [pc, #752]	@ (802a440 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x398>)
 802a14e:	f1b8 0f00 	cmp.w	r8, #0
 802a152:	bf08      	it	eq
 802a154:	4632      	moveq	r2, r6
 802a156:	8809      	ldrh	r1, [r1, #0]
 802a158:	f9bd 6078 	ldrsh.w	r6, [sp, #120]	@ 0x78
 802a15c:	9317      	str	r3, [sp, #92]	@ 0x5c
 802a15e:	f9bd 307a 	ldrsh.w	r3, [sp, #122]	@ 0x7a
 802a162:	fb05 f501 	mul.w	r5, r5, r1
 802a166:	fb01 6303 	mla	r3, r1, r3, r6
 802a16a:	ea4f 0484 	mov.w	r4, r4, lsl #2
 802a16e:	eb00 0683 	add.w	r6, r0, r3, lsl #2
 802a172:	f104 0304 	add.w	r3, r4, #4
 802a176:	9315      	str	r3, [sp, #84]	@ 0x54
 802a178:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 802a17c:	bf18      	it	ne
 802a17e:	2200      	movne	r2, #0
 802a180:	9303      	str	r3, [sp, #12]
 802a182:	f10b 030e 	add.w	r3, fp, #14
 802a186:	931b      	str	r3, [sp, #108]	@ 0x6c
 802a188:	465b      	mov	r3, fp
 802a18a:	fa1f f982 	uxth.w	r9, r2
 802a18e:	46cb      	mov	fp, r9
 802a190:	46b4      	mov	ip, r6
 802a192:	4647      	mov	r7, r8
 802a194:	4699      	mov	r9, r3
 802a196:	9b03      	ldr	r3, [sp, #12]
 802a198:	459c      	cmp	ip, r3
 802a19a:	f080 8104 	bcs.w	802a3a6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a19e:	e9dd 2017 	ldrd	r2, r0, [sp, #92]	@ 0x5c
 802a1a2:	2301      	movs	r3, #1
 802a1a4:	f8bd 1074 	ldrh.w	r1, [sp, #116]	@ 0x74
 802a1a8:	2500      	movs	r5, #0
 802a1aa:	fbb7 f1f1 	udiv	r1, r7, r1
 802a1ae:	f04f 0a01 	mov.w	sl, #1
 802a1b2:	fa10 f282 	uxtah	r2, r0, r2
 802a1b6:	0092      	lsls	r2, r2, #2
 802a1b8:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802a1ba:	3204      	adds	r2, #4
 802a1bc:	4410      	add	r0, r2
 802a1be:	9305      	str	r3, [sp, #20]
 802a1c0:	7883      	ldrb	r3, [r0, #2]
 802a1c2:	7844      	ldrb	r4, [r0, #1]
 802a1c4:	021b      	lsls	r3, r3, #8
 802a1c6:	78c0      	ldrb	r0, [r0, #3]
 802a1c8:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 802a1ca:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 802a1ce:	4304      	orrs	r4, r0
 802a1d0:	1930      	adds	r0, r6, r4
 802a1d2:	7843      	ldrb	r3, [r0, #1]
 802a1d4:	5d34      	ldrb	r4, [r6, r4]
 802a1d6:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802a1d8:	021b      	lsls	r3, r3, #8
 802a1da:	5cb2      	ldrb	r2, [r6, r2]
 802a1dc:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 802a1de:	f403 73ff 	and.w	r3, r3, #510	@ 0x1fe
 802a1e2:	1a71      	subs	r1, r6, r1
 802a1e4:	431c      	orrs	r4, r3
 802a1e6:	920a      	str	r2, [sp, #40]	@ 0x28
 802a1e8:	3201      	adds	r2, #1
 802a1ea:	f889 400d 	strb.w	r4, [r9, #13]
 802a1ee:	9512      	str	r5, [sp, #72]	@ 0x48
 802a1f0:	9202      	str	r2, [sp, #8]
 802a1f2:	4666      	mov	r6, ip
 802a1f4:	b28a      	uxth	r2, r1
 802a1f6:	46d6      	mov	lr, sl
 802a1f8:	4629      	mov	r1, r5
 802a1fa:	464d      	mov	r5, r9
 802a1fc:	46d9      	mov	r9, fp
 802a1fe:	b2a4      	uxth	r4, r4
 802a200:	3001      	adds	r0, #1
 802a202:	9407      	str	r4, [sp, #28]
 802a204:	9001      	str	r0, [sp, #4]
 802a206:	9216      	str	r2, [sp, #88]	@ 0x58
 802a208:	2f00      	cmp	r7, #0
 802a20a:	d034      	beq.n	802a276 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ce>
 802a20c:	45ba      	cmp	sl, r7
 802a20e:	f080 80d2 	bcs.w	802a3b6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x30e>
 802a212:	9b03      	ldr	r3, [sp, #12]
 802a214:	eba7 070a 	sub.w	r7, r7, sl
 802a218:	429e      	cmp	r6, r3
 802a21a:	b2bf      	uxth	r7, r7
 802a21c:	f080 80c3 	bcs.w	802a3a6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a220:	9801      	ldr	r0, [sp, #4]
 802a222:	f1ce 0107 	rsb	r1, lr, #7
 802a226:	7842      	ldrb	r2, [r0, #1]
 802a228:	7803      	ldrb	r3, [r0, #0]
 802a22a:	408a      	lsls	r2, r1
 802a22c:	fa43 f30e 	asr.w	r3, r3, lr
 802a230:	0052      	lsls	r2, r2, #1
 802a232:	f10e 0101 	add.w	r1, lr, #1
 802a236:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 802a23a:	b2db      	uxtb	r3, r3
 802a23c:	fa5f fe81 	uxtb.w	lr, r1
 802a240:	4313      	orrs	r3, r2
 802a242:	f1be 0f08 	cmp.w	lr, #8
 802a246:	b29a      	uxth	r2, r3
 802a248:	f000 80f1 	beq.w	802a42e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x386>
 802a24c:	3001      	adds	r0, #1
 802a24e:	9001      	str	r0, [sp, #4]
 802a250:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802a252:	4291      	cmp	r1, r2
 802a254:	f0c0 80c0 	bcc.w	802a3d8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x330>
 802a258:	f04f 0a01 	mov.w	sl, #1
 802a25c:	b2db      	uxtb	r3, r3
 802a25e:	736b      	strb	r3, [r5, #13]
 802a260:	9902      	ldr	r1, [sp, #8]
 802a262:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 802a266:	f0c0 810a 	bcc.w	802a47e <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3d6>
 802a26a:	9207      	str	r2, [sp, #28]
 802a26c:	f8cd a014 	str.w	sl, [sp, #20]
 802a270:	2100      	movs	r1, #0
 802a272:	2f00      	cmp	r7, #0
 802a274:	d1ca      	bne.n	802a20c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x164>
 802a276:	45ca      	cmp	sl, r9
 802a278:	f0c0 80cd 	bcc.w	802a416 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x36e>
 802a27c:	ebaa 0309 	sub.w	r3, sl, r9
 802a280:	b29b      	uxth	r3, r3
 802a282:	9309      	str	r3, [sp, #36]	@ 0x24
 802a284:	f1b9 0f00 	cmp.w	r9, #0
 802a288:	f000 80dc 	beq.w	802a444 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x39c>
 802a28c:	464b      	mov	r3, r9
 802a28e:	f8cd 9018 	str.w	r9, [sp, #24]
 802a292:	9711      	str	r7, [sp, #68]	@ 0x44
 802a294:	18cb      	adds	r3, r1, r3
 802a296:	e9cd ea0d 	strd	lr, sl, [sp, #52]	@ 0x34
 802a29a:	46b3      	mov	fp, r6
 802a29c:	fa1f fc83 	uxth.w	ip, r3
 802a2a0:	e9cd 690b 	strd	r6, r9, [sp, #44]	@ 0x2c
 802a2a4:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 802a2a8:	970f      	str	r7, [sp, #60]	@ 0x3c
 802a2aa:	f8dd 8040 	ldr.w	r8, [sp, #64]	@ 0x40
 802a2ae:	e045      	b.n	802a33c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x294>
 802a2b0:	f8db 0000 	ldr.w	r0, [fp]
 802a2b4:	0e07      	lsrs	r7, r0, #24
 802a2b6:	d055      	beq.n	802a364 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2bc>
 802a2b8:	b2d4      	uxtb	r4, r2
 802a2ba:	2a00      	cmp	r2, #0
 802a2bc:	d03a      	beq.n	802a334 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x28c>
 802a2be:	fb04 fe07 	mul.w	lr, r4, r7
 802a2c2:	f10e 0601 	add.w	r6, lr, #1
 802a2c6:	eb06 262e 	add.w	r6, r6, lr, asr #8
 802a2ca:	1236      	asrs	r6, r6, #8
 802a2cc:	fa5f fe80 	uxtb.w	lr, r0
 802a2d0:	9614      	str	r6, [sp, #80]	@ 0x50
 802a2d2:	1bbe      	subs	r6, r7, r6
 802a2d4:	9413      	str	r4, [sp, #76]	@ 0x4c
 802a2d6:	f3c3 4907 	ubfx	r9, r3, #16, #8
 802a2da:	fb06 f40e 	mul.w	r4, r6, lr
 802a2de:	fb02 f909 	mul.w	r9, r2, r9
 802a2e2:	f3c3 2e07 	ubfx	lr, r3, #8, #8
 802a2e6:	fb02 fe0e 	mul.w	lr, r2, lr
 802a2ea:	b2db      	uxtb	r3, r3
 802a2ec:	fb02 4303 	mla	r3, r2, r3, r4
 802a2f0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802a2f4:	fb06 9902 	mla	r9, r6, r2, r9
 802a2f8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802a2fc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802a2fe:	fb06 e000 	mla	r0, r6, r0, lr
 802a302:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 802a304:	443a      	add	r2, r7
 802a306:	1b94      	subs	r4, r2, r6
 802a308:	b2e4      	uxtb	r4, r4
 802a30a:	fbb9 f9f4 	udiv	r9, r9, r4
 802a30e:	fbb3 f3f4 	udiv	r3, r3, r4
 802a312:	fbb0 f0f4 	udiv	r0, r0, r4
 802a316:	ea4f 4909 	mov.w	r9, r9, lsl #16
 802a31a:	b2db      	uxtb	r3, r3
 802a31c:	f409 097f 	and.w	r9, r9, #16711680	@ 0xff0000
 802a320:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
 802a324:	0200      	lsls	r0, r0, #8
 802a326:	ea43 0909 	orr.w	r9, r3, r9
 802a32a:	b280      	uxth	r0, r0
 802a32c:	ea49 0000 	orr.w	r0, r9, r0
 802a330:	f8cb 0000 	str.w	r0, [fp]
 802a334:	4561      	cmp	r1, ip
 802a336:	f10b 0b04 	add.w	fp, fp, #4
 802a33a:	d01d      	beq.n	802a378 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2d0>
 802a33c:	2204      	movs	r2, #4
 802a33e:	186b      	adds	r3, r5, r1
 802a340:	7b5b      	ldrb	r3, [r3, #13]
 802a342:	3101      	adds	r1, #1
 802a344:	fb12 a303 	smlabb	r3, r2, r3, sl
 802a348:	f858 3003 	ldr.w	r3, [r8, r3]
 802a34c:	b289      	uxth	r1, r1
 802a34e:	0e1a      	lsrs	r2, r3, #24
 802a350:	d0f0      	beq.n	802a334 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x28c>
 802a352:	9804      	ldr	r0, [sp, #16]
 802a354:	fb00 f202 	mul.w	r2, r0, r2
 802a358:	1c50      	adds	r0, r2, #1
 802a35a:	eb00 2222 	add.w	r2, r0, r2, asr #8
 802a35e:	1212      	asrs	r2, r2, #8
 802a360:	2aff      	cmp	r2, #255	@ 0xff
 802a362:	d1a5      	bne.n	802a2b0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x208>
 802a364:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 802a368:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
 802a36c:	4561      	cmp	r1, ip
 802a36e:	f8cb 2000 	str.w	r2, [fp]
 802a372:	f10b 0b04 	add.w	fp, fp, #4
 802a376:	d1e1      	bne.n	802a33c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x294>
 802a378:	e9dd 690b 	ldrd	r6, r9, [sp, #44]	@ 0x2c
 802a37c:	e9dd ea0d 	ldrd	lr, sl, [sp, #52]	@ 0x34
 802a380:	9b06      	ldr	r3, [sp, #24]
 802a382:	45ca      	cmp	sl, r9
 802a384:	f103 33ff 	add.w	r3, r3, #4294967295
 802a388:	b29b      	uxth	r3, r3
 802a38a:	f103 0301 	add.w	r3, r3, #1
 802a38e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 802a390:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 802a394:	d257      	bcs.n	802a446 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x39e>
 802a396:	9b03      	ldr	r3, [sp, #12]
 802a398:	4661      	mov	r1, ip
 802a39a:	429e      	cmp	r6, r3
 802a39c:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802a3a0:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
 802a3a4:	d313      	bcc.n	802a3ce <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x326>
 802a3a6:	4b25      	ldr	r3, [pc, #148]	@ (802a43c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x394>)
 802a3a8:	6818      	ldr	r0, [r3, #0]
 802a3aa:	6803      	ldr	r3, [r0, #0]
 802a3ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802a3ae:	4798      	blx	r3
 802a3b0:	b021      	add	sp, #132	@ 0x84
 802a3b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a3b6:	ebaa 0a07 	sub.w	sl, sl, r7
 802a3ba:	4439      	add	r1, r7
 802a3bc:	2700      	movs	r7, #0
 802a3be:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 802a3c2:	fa1f fa8a 	uxth.w	sl, sl
 802a3c6:	b289      	uxth	r1, r1
 802a3c8:	9b03      	ldr	r3, [sp, #12]
 802a3ca:	429e      	cmp	r6, r3
 802a3cc:	d2eb      	bcs.n	802a3a6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a3ce:	f1ba 0f00 	cmp.w	sl, #0
 802a3d2:	f47f af19 	bne.w	802a208 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 802a3d6:	e723      	b.n	802a220 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 802a3d8:	9b02      	ldr	r3, [sp, #8]
 802a3da:	4293      	cmp	r3, r2
 802a3dc:	d852      	bhi.n	802a484 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3dc>
 802a3de:	9805      	ldr	r0, [sp, #20]
 802a3e0:	7b69      	ldrb	r1, [r5, #13]
 802a3e2:	182b      	adds	r3, r5, r0
 802a3e4:	7359      	strb	r1, [r3, #13]
 802a3e6:	7b6b      	ldrb	r3, [r5, #13]
 802a3e8:	1c41      	adds	r1, r0, #1
 802a3ea:	fa1f fa81 	uxth.w	sl, r1
 802a3ee:	9c02      	ldr	r4, [sp, #8]
 802a3f0:	f8cd a014 	str.w	sl, [sp, #20]
 802a3f4:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 802a3f8:	f104 0c01 	add.w	ip, r4, #1
 802a3fc:	9c07      	ldr	r4, [sp, #28]
 802a3fe:	f880 304e 	strb.w	r3, [r0, #78]	@ 0x4e
 802a402:	fa1f f38c 	uxth.w	r3, ip
 802a406:	f880 104f 	strb.w	r1, [r0, #79]	@ 0x4f
 802a40a:	f8a0 4050 	strh.w	r4, [r0, #80]	@ 0x50
 802a40e:	9302      	str	r3, [sp, #8]
 802a410:	9207      	str	r2, [sp, #28]
 802a412:	2100      	movs	r1, #0
 802a414:	e6f8      	b.n	802a208 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x160>
 802a416:	eba9 030a 	sub.w	r3, r9, sl
 802a41a:	b29b      	uxth	r3, r3
 802a41c:	9311      	str	r3, [sp, #68]	@ 0x44
 802a41e:	f1ba 0f00 	cmp.w	sl, #0
 802a422:	d06b      	beq.n	802a4fc <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x454>
 802a424:	f8cd a018 	str.w	sl, [sp, #24]
 802a428:	9709      	str	r7, [sp, #36]	@ 0x24
 802a42a:	4653      	mov	r3, sl
 802a42c:	e732      	b.n	802a294 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1ec>
 802a42e:	4601      	mov	r1, r0
 802a430:	3102      	adds	r1, #2
 802a432:	f04f 0e00 	mov.w	lr, #0
 802a436:	9101      	str	r1, [sp, #4]
 802a438:	e70a      	b.n	802a250 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1a8>
 802a43a:	bf00      	nop
 802a43c:	20082f08 	.word	0x20082f08
 802a440:	20082f02 	.word	0x20082f02
 802a444:	468c      	mov	ip, r1
 802a446:	4b31      	ldr	r3, [pc, #196]	@ (802a50c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x464>)
 802a448:	9908      	ldr	r1, [sp, #32]
 802a44a:	881b      	ldrh	r3, [r3, #0]
 802a44c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802a44e:	1a5b      	subs	r3, r3, r1
 802a450:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 802a454:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802a456:	3201      	adds	r2, #1
 802a458:	4293      	cmp	r3, r2
 802a45a:	9212      	str	r2, [sp, #72]	@ 0x48
 802a45c:	d02d      	beq.n	802a4ba <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x412>
 802a45e:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 802a462:	f8bd 7074 	ldrh.w	r7, [sp, #116]	@ 0x74
 802a466:	4661      	mov	r1, ip
 802a468:	eba7 0709 	sub.w	r7, r7, r9
 802a46c:	b2bf      	uxth	r7, r7
 802a46e:	2f00      	cmp	r7, #0
 802a470:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802a474:	bf14      	ite	ne
 802a476:	f04f 0900 	movne.w	r9, #0
 802a47a:	2700      	moveq	r7, #0
 802a47c:	e7a4      	b.n	802a3c8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x320>
 802a47e:	9905      	ldr	r1, [sp, #20]
 802a480:	3101      	adds	r1, #1
 802a482:	e7b4      	b.n	802a3ee <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x346>
 802a484:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 802a488:	f893 a04f 	ldrb.w	sl, [r3, #79]	@ 0x4f
 802a48c:	4613      	mov	r3, r2
 802a48e:	f1ba 0f01 	cmp.w	sl, #1
 802a492:	d90d      	bls.n	802a4b0 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x408>
 802a494:	f10a 010d 	add.w	r1, sl, #13
 802a498:	9c1b      	ldr	r4, [sp, #108]	@ 0x6c
 802a49a:	4429      	add	r1, r5
 802a49c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 802a4a0:	f893 004e 	ldrb.w	r0, [r3, #78]	@ 0x4e
 802a4a4:	f801 0d01 	strb.w	r0, [r1, #-1]!
 802a4a8:	428c      	cmp	r4, r1
 802a4aa:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 802a4ae:	d1f5      	bne.n	802a49c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x3f4>
 802a4b0:	b2db      	uxtb	r3, r3
 802a4b2:	736b      	strb	r3, [r5, #13]
 802a4b4:	fa1f fa8a 	uxth.w	sl, sl
 802a4b8:	e6d2      	b.n	802a260 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x1b8>
 802a4ba:	f8bd 3078 	ldrh.w	r3, [sp, #120]	@ 0x78
 802a4be:	f8bd 2070 	ldrh.w	r2, [sp, #112]	@ 0x70
 802a4c2:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802a4c4:	1a9b      	subs	r3, r3, r2
 802a4c6:	b29f      	uxth	r7, r3
 802a4c8:	2f00      	cmp	r7, #0
 802a4ca:	9b08      	ldr	r3, [sp, #32]
 802a4cc:	bf18      	it	ne
 802a4ce:	2300      	movne	r3, #0
 802a4d0:	3101      	adds	r1, #1
 802a4d2:	46b4      	mov	ip, r6
 802a4d4:	46a9      	mov	r9, r5
 802a4d6:	9117      	str	r1, [sp, #92]	@ 0x5c
 802a4d8:	fa1f fb83 	uxth.w	fp, r3
 802a4dc:	e65b      	b.n	802a196 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0xee>
 802a4de:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802a4e2:	b289      	uxth	r1, r1
 802a4e4:	fb93 f3f1 	sdiv	r3, r3, r1
 802a4e8:	b29a      	uxth	r2, r3
 802a4ea:	921a      	str	r2, [sp, #104]	@ 0x68
 802a4ec:	e603      	b.n	802a0f6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x4e>
 802a4ee:	4b08      	ldr	r3, [pc, #32]	@ (802a510 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x468>)
 802a4f0:	4a08      	ldr	r2, [pc, #32]	@ (802a514 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x46c>)
 802a4f2:	f241 1181 	movw	r1, #4481	@ 0x1181
 802a4f6:	4808      	ldr	r0, [pc, #32]	@ (802a518 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x470>)
 802a4f8:	f007 fffe 	bl	80324f8 <__assert_func>
 802a4fc:	9b03      	ldr	r3, [sp, #12]
 802a4fe:	429e      	cmp	r6, r3
 802a500:	f4bf af51 	bcs.w	802a3a6 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x2fe>
 802a504:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
 802a508:	e68a      	b.n	802a220 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h+0x178>
 802a50a:	bf00      	nop
 802a50c:	20082f02 	.word	0x20082f02
 802a510:	080363d4 	.word	0x080363d4
 802a514:	08037dbc 	.word	0x08037dbc
 802a518:	080362e0 	.word	0x080362e0

0802a51c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 802a51c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a520:	7814      	ldrb	r4, [r2, #0]
 802a522:	7855      	ldrb	r5, [r2, #1]
 802a524:	2c01      	cmp	r4, #1
 802a526:	9e06      	ldr	r6, [sp, #24]
 802a528:	f89d 701c 	ldrb.w	r7, [sp, #28]
 802a52c:	d013      	beq.n	802a556 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x3a>
 802a52e:	d304      	bcc.n	802a53a <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e>
 802a530:	2c02      	cmp	r4, #2
 802a532:	f000 80ca 	beq.w	802a6ca <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1ae>
 802a536:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a53a:	7b04      	ldrb	r4, [r0, #12]
 802a53c:	2c01      	cmp	r4, #1
 802a53e:	d02d      	beq.n	802a59c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x80>
 802a540:	d317      	bcc.n	802a572 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 802a542:	2c02      	cmp	r4, #2
 802a544:	f040 80cf 	bne.w	802a6e6 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1ca>
 802a548:	2d03      	cmp	r5, #3
 802a54a:	f200 80da 	bhi.w	802a702 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e6>
 802a54e:	e8df f005 	tbb	[pc, r5]
 802a552:	989e      	.short	0x989e
 802a554:	8c92      	.short	0x8c92
 802a556:	7b04      	ldrb	r4, [r0, #12]
 802a558:	2c01      	cmp	r4, #1
 802a55a:	d018      	beq.n	802a58e <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x72>
 802a55c:	d310      	bcc.n	802a580 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x64>
 802a55e:	2c02      	cmp	r4, #2
 802a560:	f040 80ba 	bne.w	802a6d8 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1bc>
 802a564:	2d03      	cmp	r5, #3
 802a566:	f200 80c5 	bhi.w	802a6f4 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1d8>
 802a56a:	e8df f005 	tbb	[pc, r5]
 802a56e:	a2a8      	.short	0xa2a8
 802a570:	969c      	.short	0x969c
 802a572:	2d03      	cmp	r5, #3
 802a574:	f200 80d3 	bhi.w	802a71e <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x202>
 802a578:	e8df f005 	tbb	[pc, r5]
 802a57c:	5f656b71 	.word	0x5f656b71
 802a580:	2d03      	cmp	r5, #3
 802a582:	f200 80c5 	bhi.w	802a710 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1f4>
 802a586:	e8df f005 	tbb	[pc, r5]
 802a58a:	4c52      	.short	0x4c52
 802a58c:	4046      	.short	0x4046
 802a58e:	2d03      	cmp	r5, #3
 802a590:	f200 80d3 	bhi.w	802a73a <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x21e>
 802a594:	e8df f005 	tbb	[pc, r5]
 802a598:	21272d33 	.word	0x21272d33
 802a59c:	2d03      	cmp	r5, #3
 802a59e:	f200 80c5 	bhi.w	802a72c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x210>
 802a5a2:	e8df f005 	tbb	[pc, r5]
 802a5a6:	0e14      	.short	0x0e14
 802a5a8:	0208      	.short	0x0208
 802a5aa:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5b2:	f7fd b8e3 	b.w	802777c <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5b6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5be:	f7fc bead 	b.w	802731c <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5c2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5ca:	f7fc bcad 	b.w	8026f28 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5ce:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5d6:	f7fc bb83 	b.w	8026ce0 <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5da:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5de:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5e2:	f7fd bf9d 	b.w	8028520 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5e6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5ea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5ee:	f7fd be47 	b.w	8028280 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5f2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a5f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5fa:	f7fd bc13 	b.w	8027e24 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a5fe:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a602:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a606:	f7fd badd 	b.w	8027bc4 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h>
 802a60a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a60e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a612:	f7fc b93f 	b.w	8026894 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a616:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a61a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a61e:	f7fb bfd7 	b.w	80265d0 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a622:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a626:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a62a:	f7fb bd63 	b.w	80260f4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a62e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a632:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a636:	f7fb bc05 	b.w	8025e44 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a63a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a63e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a642:	f7fb b9a7 	b.w	8025994 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a646:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a64a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a64e:	f7fa bfd3 	b.w	80255f8 <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a652:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a656:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a65a:	f7fa bde7 	b.w	802522c <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a65e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a662:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a666:	f7fa bc41 	b.w	8024eec <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h>
 802a66a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a66e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a672:	f7ff bd19 	b.w	802a0a8 <_ZN8touchgfx8LCDGPU2D30blitCopyL8_LZW9_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a676:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a67a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a67e:	f7ff bb95 	b.w	8029dac <_ZN8touchgfx8LCDGPU2D29blitCopyL8_RLE_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a682:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a686:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a68a:	f7ff ba05 	b.w	8029a98 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_L4_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a68e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a692:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a696:	f7ff b871 	b.w	802977c <_ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a69a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a69e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a6a2:	f7fe be1f 	b.w	80292e4 <_ZN8touchgfx8LCDGPU2D28blitCopyL8_LZW9_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a6a6:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a6aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a6ae:	f7fe bcaf 	b.w	8029010 <_ZN8touchgfx8LCDGPU2D27blitCopyL8_RLE_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a6b2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a6b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a6ba:	f7fe ba8b 	b.w	8028bd4 <_ZN8touchgfx8LCDGPU2D26blitCopyL8_L4_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a6be:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802a6c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a6c6:	f7fe b955 	b.w	8028974 <_ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h>
 802a6ca:	4b1f      	ldr	r3, [pc, #124]	@ (802a748 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22c>)
 802a6cc:	4a1f      	ldr	r2, [pc, #124]	@ (802a74c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6ce:	f240 31f3 	movw	r1, #1011	@ 0x3f3
 802a6d2:	481f      	ldr	r0, [pc, #124]	@ (802a750 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6d4:	f007 ff10 	bl	80324f8 <__assert_func>
 802a6d8:	4b1e      	ldr	r3, [pc, #120]	@ (802a754 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x238>)
 802a6da:	4a1c      	ldr	r2, [pc, #112]	@ (802a74c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6dc:	f240 4179 	movw	r1, #1145	@ 0x479
 802a6e0:	481b      	ldr	r0, [pc, #108]	@ (802a750 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6e2:	f007 ff09 	bl	80324f8 <__assert_func>
 802a6e6:	4b1b      	ldr	r3, [pc, #108]	@ (802a754 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x238>)
 802a6e8:	4a18      	ldr	r2, [pc, #96]	@ (802a74c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6ea:	f240 4135 	movw	r1, #1077	@ 0x435
 802a6ee:	4818      	ldr	r0, [pc, #96]	@ (802a750 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6f0:	f007 ff02 	bl	80324f8 <__assert_func>
 802a6f4:	4b18      	ldr	r3, [pc, #96]	@ (802a758 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x23c>)
 802a6f6:	4a15      	ldr	r2, [pc, #84]	@ (802a74c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a6f8:	f240 4174 	movw	r1, #1140	@ 0x474
 802a6fc:	4814      	ldr	r0, [pc, #80]	@ (802a750 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a6fe:	f007 fefb 	bl	80324f8 <__assert_func>
 802a702:	4b15      	ldr	r3, [pc, #84]	@ (802a758 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x23c>)
 802a704:	4a11      	ldr	r2, [pc, #68]	@ (802a74c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a706:	f44f 6186 	mov.w	r1, #1072	@ 0x430
 802a70a:	4811      	ldr	r0, [pc, #68]	@ (802a750 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a70c:	f007 fef4 	bl	80324f8 <__assert_func>
 802a710:	4b12      	ldr	r3, [pc, #72]	@ (802a75c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x240>)
 802a712:	4a0e      	ldr	r2, [pc, #56]	@ (802a74c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a714:	f240 414c 	movw	r1, #1100	@ 0x44c
 802a718:	480d      	ldr	r0, [pc, #52]	@ (802a750 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a71a:	f007 feed 	bl	80324f8 <__assert_func>
 802a71e:	4b0f      	ldr	r3, [pc, #60]	@ (802a75c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x240>)
 802a720:	4a0a      	ldr	r2, [pc, #40]	@ (802a74c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a722:	f44f 6181 	mov.w	r1, #1032	@ 0x408
 802a726:	480a      	ldr	r0, [pc, #40]	@ (802a750 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a728:	f007 fee6 	bl	80324f8 <__assert_func>
 802a72c:	4b0c      	ldr	r3, [pc, #48]	@ (802a760 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x244>)
 802a72e:	4a07      	ldr	r2, [pc, #28]	@ (802a74c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a730:	f240 411c 	movw	r1, #1052	@ 0x41c
 802a734:	4806      	ldr	r0, [pc, #24]	@ (802a750 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a736:	f007 fedf 	bl	80324f8 <__assert_func>
 802a73a:	4b09      	ldr	r3, [pc, #36]	@ (802a760 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x244>)
 802a73c:	4a03      	ldr	r2, [pc, #12]	@ (802a74c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x230>)
 802a73e:	f44f 618c 	mov.w	r1, #1120	@ 0x460
 802a742:	4803      	ldr	r0, [pc, #12]	@ (802a750 <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x234>)
 802a744:	f007 fed8 	bl	80324f8 <__assert_func>
 802a748:	08035f98 	.word	0x08035f98
 802a74c:	08036ae8 	.word	0x08036ae8
 802a750:	080362e0 	.word	0x080362e0
 802a754:	080360f8 	.word	0x080360f8
 802a758:	08036094 	.word	0x08036094
 802a75c:	08035fd4 	.word	0x08035fd4
 802a760:	08036034 	.word	0x08036034

0802a764 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 802a764:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802a768:	b089      	sub	sp, #36	@ 0x24
 802a76a:	f89d 4044 	ldrb.w	r4, [sp, #68]	@ 0x44
 802a76e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802a770:	b13c      	cbz	r4, 802a782 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a772:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 802a776:	2e00      	cmp	r6, #0
 802a778:	dd03      	ble.n	802a782 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a77a:	f9b5 6006 	ldrsh.w	r6, [r5, #6]
 802a77e:	2e00      	cmp	r6, #0
 802a780:	dc02      	bgt.n	802a788 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x24>
 802a782:	b009      	add	sp, #36	@ 0x24
 802a784:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802a788:	f04f 0800 	mov.w	r8, #0
 802a78c:	4606      	mov	r6, r0
 802a78e:	f362 080f 	bfi	r8, r2, #0, #16
 802a792:	4608      	mov	r0, r1
 802a794:	460f      	mov	r7, r1
 802a796:	f363 481f 	bfi	r8, r3, #16, #16
 802a79a:	f7e5 fc0b 	bl	800ffb4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802a79e:	4681      	mov	r9, r0
 802a7a0:	4638      	mov	r0, r7
 802a7a2:	f7e5 fc3b 	bl	801001c <_ZNK8touchgfx6Bitmap9getHeightEv>
 802a7a6:	2300      	movs	r3, #0
 802a7a8:	f369 030f 	bfi	r3, r9, #0, #16
 802a7ac:	f360 431f 	bfi	r3, r0, #16, #16
 802a7b0:	4638      	mov	r0, r7
 802a7b2:	e9cd 8302 	strd	r8, r3, [sp, #8]
 802a7b6:	f7e5 fd3b 	bl	8010230 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a7ba:	280b      	cmp	r0, #11
 802a7bc:	d024      	beq.n	802a808 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa4>
 802a7be:	aa04      	add	r2, sp, #16
 802a7c0:	f10d 0808 	add.w	r8, sp, #8
 802a7c4:	e898 0003 	ldmia.w	r8, {r0, r1}
 802a7c8:	e882 0003 	stmia.w	r2, {r0, r1}
 802a7cc:	6828      	ldr	r0, [r5, #0]
 802a7ce:	6869      	ldr	r1, [r5, #4]
 802a7d0:	ab06      	add	r3, sp, #24
 802a7d2:	c303      	stmia	r3!, {r0, r1}
 802a7d4:	4610      	mov	r0, r2
 802a7d6:	f7e2 fab3 	bl	800cd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a7da:	4641      	mov	r1, r8
 802a7dc:	a806      	add	r0, sp, #24
 802a7de:	f7e2 fad7 	bl	800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a7e2:	4638      	mov	r0, r7
 802a7e4:	f7e5 fca0 	bl	8010128 <_ZNK8touchgfx6Bitmap7getDataEv>
 802a7e8:	4680      	mov	r8, r0
 802a7ea:	4638      	mov	r0, r7
 802a7ec:	f7e5 fd20 	bl	8010230 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a7f0:	280d      	cmp	r0, #13
 802a7f2:	f200 8083 	bhi.w	802a8fc <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x198>
 802a7f6:	e8df f000 	tbb	[pc, r0]
 802a7fa:	6467      	.short	0x6467
 802a7fc:	81818117 	.word	0x81818117
 802a800:	81818181 	.word	0x81818181
 802a804:	6a818181 	.word	0x6a818181
 802a808:	4638      	mov	r0, r7
 802a80a:	f7e5 fc8d 	bl	8010128 <_ZNK8touchgfx6Bitmap7getDataEv>
 802a80e:	4680      	mov	r8, r0
 802a810:	4638      	mov	r0, r7
 802a812:	f7e5 fcb9 	bl	8010188 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802a816:	4641      	mov	r1, r8
 802a818:	4602      	mov	r2, r0
 802a81a:	e9cd 5400 	strd	r5, r4, [sp]
 802a81e:	4630      	mov	r0, r6
 802a820:	ab02      	add	r3, sp, #8
 802a822:	f7ff fe7b 	bl	802a51c <_ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 802a826:	e7ac      	b.n	802a782 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a828:	f04f 0910 	mov.w	r9, #16
 802a82c:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 802a830:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 802a834:	4d37      	ldr	r5, [pc, #220]	@ (802a914 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b0>)
 802a836:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 802a83a:	440a      	add	r2, r1
 802a83c:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 802a840:	6828      	ldr	r0, [r5, #0]
 802a842:	440b      	add	r3, r1
 802a844:	f8ad 2018 	strh.w	r2, [sp, #24]
 802a848:	f8ad 301a 	strh.w	r3, [sp, #26]
 802a84c:	2800      	cmp	r0, #0
 802a84e:	d05b      	beq.n	802a908 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a4>
 802a850:	f7f6 f9c2 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 802a854:	6833      	ldr	r3, [r6, #0]
 802a856:	4630      	mov	r0, r6
 802a858:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 802a85a:	4798      	blx	r3
 802a85c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 802a860:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 802a864:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 802a868:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 802a86c:	f7e6 fa3c 	bl	8010ce8 <nema_set_clip>
 802a870:	2200      	movs	r2, #0
 802a872:	4623      	mov	r3, r4
 802a874:	4611      	mov	r1, r2
 802a876:	4610      	mov	r0, r2
 802a878:	f7e6 fb14 	bl	8010ea4 <nema_rgba>
 802a87c:	f7f3 ff96 	bl	801e7ac <nema_set_const_color>
 802a880:	2cff      	cmp	r4, #255	@ 0xff
 802a882:	d02a      	beq.n	802a8da <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x176>
 802a884:	f04f 33ff 	mov.w	r3, #4294967295
 802a888:	2201      	movs	r2, #1
 802a88a:	2100      	movs	r1, #0
 802a88c:	4822      	ldr	r0, [pc, #136]	@ (802a918 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b4>)
 802a88e:	f7f3 fbc7 	bl	801e020 <nema_set_blend>
 802a892:	2100      	movs	r1, #0
 802a894:	f04f 34ff 	mov.w	r4, #4294967295
 802a898:	f9bd 2016 	ldrsh.w	r2, [sp, #22]
 802a89c:	464b      	mov	r3, r9
 802a89e:	4640      	mov	r0, r8
 802a8a0:	9101      	str	r1, [sp, #4]
 802a8a2:	9400      	str	r4, [sp, #0]
 802a8a4:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 802a8a8:	f7e6 fb04 	bl	8010eb4 <nema_bind_src_tex>
 802a8ac:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 802a8b0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 802a8b4:	f7e6 fd58 	bl	8011368 <nema_blit>
 802a8b8:	6828      	ldr	r0, [r5, #0]
 802a8ba:	b328      	cbz	r0, 802a908 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a4>
 802a8bc:	f7f6 f9ac 	bl	8020c18 <_ZN8touchgfx8HALGPU2D16submitExecBufferEv>
 802a8c0:	e75f      	b.n	802a782 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e>
 802a8c2:	f04f 0939 	mov.w	r9, #57	@ 0x39
 802a8c6:	e7b1      	b.n	802a82c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802a8c8:	f04f 0904 	mov.w	r9, #4
 802a8cc:	e7ae      	b.n	802a82c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802a8ce:	4638      	mov	r0, r7
 802a8d0:	f7e5 fc5a 	bl	8010188 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802a8d4:	f890 9000 	ldrb.w	r9, [r0]
 802a8d8:	e7a8      	b.n	802a82c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc8>
 802a8da:	4638      	mov	r0, r7
 802a8dc:	f7e5 fca8 	bl	8010230 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a8e0:	b120      	cbz	r0, 802a8ec <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x188>
 802a8e2:	4638      	mov	r0, r7
 802a8e4:	f7e5 fca4 	bl	8010230 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802a8e8:	2801      	cmp	r0, #1
 802a8ea:	d1cb      	bne.n	802a884 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x120>
 802a8ec:	2201      	movs	r2, #1
 802a8ee:	f04f 33ff 	mov.w	r3, #4294967295
 802a8f2:	4610      	mov	r0, r2
 802a8f4:	2100      	movs	r1, #0
 802a8f6:	f7f3 fb93 	bl	801e020 <nema_set_blend>
 802a8fa:	e7ca      	b.n	802a892 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x12e>
 802a8fc:	4b07      	ldr	r3, [pc, #28]	@ (802a91c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>)
 802a8fe:	4a08      	ldr	r2, [pc, #32]	@ (802a920 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1bc>)
 802a900:	2175      	movs	r1, #117	@ 0x75
 802a902:	4808      	ldr	r0, [pc, #32]	@ (802a924 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c0>)
 802a904:	f007 fdf8 	bl	80324f8 <__assert_func>
 802a908:	4b07      	ldr	r3, [pc, #28]	@ (802a928 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c4>)
 802a90a:	4a08      	ldr	r2, [pc, #32]	@ (802a92c <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1c8>)
 802a90c:	217c      	movs	r1, #124	@ 0x7c
 802a90e:	4808      	ldr	r0, [pc, #32]	@ (802a930 <_ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1cc>)
 802a910:	f007 fdf2 	bl	80324f8 <__assert_func>
 802a914:	200833a8 	.word	0x200833a8
 802a918:	08000504 	.word	0x08000504
 802a91c:	08036134 	.word	0x08036134
 802a920:	08036bdc 	.word	0x08036bdc
 802a924:	080362e0 	.word	0x080362e0
 802a928:	0803623c 	.word	0x0803623c
 802a92c:	08036aa8 	.word	0x08036aa8
 802a930:	08036264 	.word	0x08036264

0802a934 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 802a934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a938:	b089      	sub	sp, #36	@ 0x24
 802a93a:	9f15      	ldr	r7, [sp, #84]	@ 0x54
 802a93c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 802a93e:	f9bd 4048 	ldrsh.w	r4, [sp, #72]	@ 0x48
 802a942:	9104      	str	r1, [sp, #16]
 802a944:	8809      	ldrh	r1, [r1, #0]
 802a946:	fb07 6c04 	mla	ip, r7, r4, r6
 802a94a:	10c8      	asrs	r0, r1, #3
 802a94c:	120d      	asrs	r5, r1, #8
 802a94e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802a952:	f005 0af8 	and.w	sl, r5, #248	@ 0xf8
 802a956:	9002      	str	r0, [sp, #8]
 802a958:	00c9      	lsls	r1, r1, #3
 802a95a:	0200      	lsls	r0, r0, #8
 802a95c:	b2c9      	uxtb	r1, r1
 802a95e:	4690      	mov	r8, r2
 802a960:	ea40 400a 	orr.w	r0, r0, sl, lsl #16
 802a964:	469e      	mov	lr, r3
 802a966:	eb02 030c 	add.w	r3, r2, ip
 802a96a:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 802a96e:	4308      	orrs	r0, r1
 802a970:	2f00      	cmp	r7, #0
 802a972:	9103      	str	r1, [sp, #12]
 802a974:	9305      	str	r3, [sp, #20]
 802a976:	9007      	str	r0, [sp, #28]
 802a978:	f107 0501 	add.w	r5, r7, #1
 802a97c:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 802a980:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 802a984:	f89d 105c 	ldrb.w	r1, [sp, #92]	@ 0x5c
 802a988:	9200      	str	r2, [sp, #0]
 802a98a:	db02      	blt.n	802a992 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x5e>
 802a98c:	42be      	cmp	r6, r7
 802a98e:	f300 80a3 	bgt.w	802aad8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1a4>
 802a992:	fa5f fb80 	uxtb.w	fp, r0
 802a996:	af07      	add	r7, sp, #28
 802a998:	465a      	mov	r2, fp
 802a99a:	46b8      	mov	r8, r7
 802a99c:	2d00      	cmp	r5, #0
 802a99e:	db01      	blt.n	802a9a4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x70>
 802a9a0:	42ae      	cmp	r6, r5
 802a9a2:	dc79      	bgt.n	802aa98 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x164>
 802a9a4:	f10d 0e1c 	add.w	lr, sp, #28
 802a9a8:	46f1      	mov	r9, lr
 802a9aa:	b2c0      	uxtb	r0, r0
 802a9ac:	9001      	str	r0, [sp, #4]
 802a9ae:	2b0f      	cmp	r3, #15
 802a9b0:	f200 80ce 	bhi.w	802ab50 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802a9b4:	290f      	cmp	r1, #15
 802a9b6:	f200 80cb 	bhi.w	802ab50 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802a9ba:	9c00      	ldr	r4, [sp, #0]
 802a9bc:	b29b      	uxth	r3, r3
 802a9be:	43e4      	mvns	r4, r4
 802a9c0:	b289      	uxth	r1, r1
 802a9c2:	fb03 f501 	mul.w	r5, r3, r1
 802a9c6:	011b      	lsls	r3, r3, #4
 802a9c8:	1b5e      	subs	r6, r3, r5
 802a9ca:	b2b6      	uxth	r6, r6
 802a9cc:	f897 c002 	ldrb.w	ip, [r7, #2]
 802a9d0:	ebc5 1101 	rsb	r1, r5, r1, lsl #4
 802a9d4:	787f      	ldrb	r7, [r7, #1]
 802a9d6:	fb06 f202 	mul.w	r2, r6, r2
 802a9da:	b289      	uxth	r1, r1
 802a9dc:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802a9e0:	fb06 fc0c 	mul.w	ip, r6, ip
 802a9e4:	1a5b      	subs	r3, r3, r1
 802a9e6:	fb06 f607 	mul.w	r6, r6, r7
 802a9ea:	b29b      	uxth	r3, r3
 802a9ec:	f898 7001 	ldrb.w	r7, [r8, #1]
 802a9f0:	fb03 220b 	mla	r2, r3, fp, r2
 802a9f4:	f898 b002 	ldrb.w	fp, [r8, #2]
 802a9f8:	fb03 6607 	mla	r6, r3, r7, r6
 802a9fc:	fb03 cc0b 	mla	ip, r3, fp, ip
 802aa00:	f899 8002 	ldrb.w	r8, [r9, #2]
 802aa04:	f899 7001 	ldrb.w	r7, [r9, #1]
 802aa08:	9b01      	ldr	r3, [sp, #4]
 802aa0a:	fb01 cc08 	mla	ip, r1, r8, ip
 802aa0e:	fb01 2203 	mla	r2, r1, r3, r2
 802aa12:	fb01 6607 	mla	r6, r1, r7, r6
 802aa16:	f89e 8002 	ldrb.w	r8, [lr, #2]
 802aa1a:	f89e 7001 	ldrb.w	r7, [lr, #1]
 802aa1e:	9b03      	ldr	r3, [sp, #12]
 802aa20:	9902      	ldr	r1, [sp, #8]
 802aa22:	fb05 2200 	mla	r2, r5, r0, r2
 802aa26:	b2e4      	uxtb	r4, r4
 802aa28:	fb05 cc08 	mla	ip, r5, r8, ip
 802aa2c:	fb05 6607 	mla	r6, r5, r7, r6
 802aa30:	fb13 f004 	smulbb	r0, r3, r4
 802aa34:	fb1a f304 	smulbb	r3, sl, r4
 802aa38:	fb11 f404 	smulbb	r4, r1, r4
 802aa3c:	f8bd e000 	ldrh.w	lr, [sp]
 802aa40:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802aa44:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802aa48:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802aa4c:	fb02 020e 	mla	r2, r2, lr, r0
 802aa50:	fb0c 330e 	mla	r3, ip, lr, r3
 802aa54:	fb06 4e0e 	mla	lr, r6, lr, r4
 802aa58:	fa1f fc83 	uxth.w	ip, r3
 802aa5c:	b292      	uxth	r2, r2
 802aa5e:	fa1f fe8e 	uxth.w	lr, lr
 802aa62:	f10c 0301 	add.w	r3, ip, #1
 802aa66:	1c50      	adds	r0, r2, #1
 802aa68:	f10e 0101 	add.w	r1, lr, #1
 802aa6c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802aa70:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802aa74:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802aa78:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802aa7c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802aa80:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802aa84:	4313      	orrs	r3, r2
 802aa86:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802aa8a:	9a04      	ldr	r2, [sp, #16]
 802aa8c:	ea43 030e 	orr.w	r3, r3, lr
 802aa90:	8013      	strh	r3, [r2, #0]
 802aa92:	b009      	add	sp, #36	@ 0x24
 802aa94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802aa98:	2900      	cmp	r1, #0
 802aa9a:	d036      	beq.n	802ab0a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d6>
 802aa9c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802aa9e:	2d00      	cmp	r5, #0
 802aaa0:	db45      	blt.n	802ab2e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1fa>
 802aaa2:	42ac      	cmp	r4, r5
 802aaa4:	dd43      	ble.n	802ab2e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1fa>
 802aaa6:	9d05      	ldr	r5, [sp, #20]
 802aaa8:	f815 9004 	ldrb.w	r9, [r5, r4]
 802aaac:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802aab0:	44f1      	add	r9, lr
 802aab2:	f899 5000 	ldrb.w	r5, [r9]
 802aab6:	9501      	str	r5, [sp, #4]
 802aab8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802aaba:	3501      	adds	r5, #1
 802aabc:	d433      	bmi.n	802ab26 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1f2>
 802aabe:	42ac      	cmp	r4, r5
 802aac0:	dd31      	ble.n	802ab26 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1f2>
 802aac2:	2b00      	cmp	r3, #0
 802aac4:	d040      	beq.n	802ab48 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x214>
 802aac6:	9805      	ldr	r0, [sp, #20]
 802aac8:	4420      	add	r0, r4
 802aaca:	7840      	ldrb	r0, [r0, #1]
 802aacc:	eb00 0440 	add.w	r4, r0, r0, lsl #1
 802aad0:	f81e 0004 	ldrb.w	r0, [lr, r4]
 802aad4:	44a6      	add	lr, r4
 802aad6:	e76a      	b.n	802a9ae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x7a>
 802aad8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802aada:	2a00      	cmp	r2, #0
 802aadc:	db01      	blt.n	802aae2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ae>
 802aade:	4294      	cmp	r4, r2
 802aae0:	dc1b      	bgt.n	802ab1a <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1e6>
 802aae2:	f10d 081c 	add.w	r8, sp, #28
 802aae6:	3201      	adds	r2, #1
 802aae8:	f898 b000 	ldrb.w	fp, [r8]
 802aaec:	d40a      	bmi.n	802ab04 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>
 802aaee:	4294      	cmp	r4, r2
 802aaf0:	dd08      	ble.n	802ab04 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>
 802aaf2:	b1fb      	cbz	r3, 802ab34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x200>
 802aaf4:	9a05      	ldr	r2, [sp, #20]
 802aaf6:	7857      	ldrb	r7, [r2, #1]
 802aaf8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802aafc:	f81e 2007 	ldrb.w	r2, [lr, r7]
 802ab00:	4477      	add	r7, lr
 802ab02:	e74b      	b.n	802a99c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x68>
 802ab04:	b2c2      	uxtb	r2, r0
 802ab06:	af07      	add	r7, sp, #28
 802ab08:	e748      	b.n	802a99c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x68>
 802ab0a:	b2c0      	uxtb	r0, r0
 802ab0c:	2b0f      	cmp	r3, #15
 802ab0e:	9001      	str	r0, [sp, #4]
 802ab10:	d81e      	bhi.n	802ab50 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x21c>
 802ab12:	f10d 0e1c 	add.w	lr, sp, #28
 802ab16:	46f1      	mov	r9, lr
 802ab18:	e74f      	b.n	802a9ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x86>
 802ab1a:	f818 800c 	ldrb.w	r8, [r8, ip]
 802ab1e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802ab22:	44f0      	add	r8, lr
 802ab24:	e7df      	b.n	802aae6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1b2>
 802ab26:	b2c0      	uxtb	r0, r0
 802ab28:	f10d 0e1c 	add.w	lr, sp, #28
 802ab2c:	e73f      	b.n	802a9ae <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x7a>
 802ab2e:	f10d 091c 	add.w	r9, sp, #28
 802ab32:	e7be      	b.n	802aab2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x17e>
 802ab34:	2d00      	cmp	r5, #0
 802ab36:	b2c2      	uxtb	r2, r0
 802ab38:	af07      	add	r7, sp, #28
 802ab3a:	f6bf af31 	bge.w	802a9a0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6c>
 802ab3e:	46be      	mov	lr, r7
 802ab40:	46b9      	mov	r9, r7
 802ab42:	4610      	mov	r0, r2
 802ab44:	9201      	str	r2, [sp, #4]
 802ab46:	e735      	b.n	802a9b4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802ab48:	b2c0      	uxtb	r0, r0
 802ab4a:	f10d 0e1c 	add.w	lr, sp, #28
 802ab4e:	e731      	b.n	802a9b4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802ab50:	4b03      	ldr	r3, [pc, #12]	@ (802ab60 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x22c>)
 802ab52:	4a04      	ldr	r2, [pc, #16]	@ (802ab64 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x230>)
 802ab54:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802ab58:	4803      	ldr	r0, [pc, #12]	@ (802ab68 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x234>)
 802ab5a:	f007 fccd 	bl	80324f8 <__assert_func>
 802ab5e:	bf00      	nop
 802ab60:	080366d4 	.word	0x080366d4
 802ab64:	08036d50 	.word	0x08036d50
 802ab68:	0803685c 	.word	0x0803685c

0802ab6c <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802ab6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ab70:	ed2d 8b08 	vpush	{d8-d11}
 802ab74:	b095      	sub	sp, #84	@ 0x54
 802ab76:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802ab7a:	e9dd 512b 	ldrd	r5, r1, [sp, #172]	@ 0xac
 802ab7e:	e9dd b827 	ldrd	fp, r8, [sp, #156]	@ 0x9c
 802ab82:	686c      	ldr	r4, [r5, #4]
 802ab84:	461a      	mov	r2, r3
 802ab86:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802ab88:	f89d 60bc 	ldrb.w	r6, [sp, #188]	@ 0xbc
 802ab8c:	fb04 1303 	mla	r3, r4, r3, r1
 802ab90:	682c      	ldr	r4, [r5, #0]
 802ab92:	e9cd 0612 	strd	r0, r6, [sp, #72]	@ 0x48
 802ab96:	43f0      	mvns	r0, r6
 802ab98:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802ab9c:	eeb0 aa40 	vmov.f32	s20, s0
 802aba0:	eef0 9a60 	vmov.f32	s19, s1
 802aba4:	eeb0 9a41 	vmov.f32	s18, s2
 802aba8:	eef0 8a62 	vmov.f32	s17, s5
 802abac:	eeb0 8a43 	vmov.f32	s16, s6
 802abb0:	eef0 ba44 	vmov.f32	s23, s8
 802abb4:	eeb0 ba64 	vmov.f32	s22, s9
 802abb8:	eef0 aa45 	vmov.f32	s21, s10
 802abbc:	469a      	mov	sl, r3
 802abbe:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 802abc0:	9d2e      	ldr	r5, [sp, #184]	@ 0xb8
 802abc2:	6849      	ldr	r1, [r1, #4]
 802abc4:	682d      	ldr	r5, [r5, #0]
 802abc6:	3104      	adds	r1, #4
 802abc8:	b2c0      	uxtb	r0, r0
 802abca:	9108      	str	r1, [sp, #32]
 802abcc:	b2b1      	uxth	r1, r6
 802abce:	950b      	str	r5, [sp, #44]	@ 0x2c
 802abd0:	900c      	str	r0, [sp, #48]	@ 0x30
 802abd2:	910d      	str	r1, [sp, #52]	@ 0x34
 802abd4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802abd6:	2b00      	cmp	r3, #0
 802abd8:	dc02      	bgt.n	802abe0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802abda:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802abdc:	2b00      	cmp	r3, #0
 802abde:	dd65      	ble.n	802acac <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802abe0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802abe2:	2a00      	cmp	r2, #0
 802abe4:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802abe8:	b225      	sxth	r5, r4
 802abea:	fa0f f78e 	sxth.w	r7, lr
 802abee:	f340 8233 	ble.w	802b058 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ec>
 802abf2:	1e6e      	subs	r6, r5, #1
 802abf4:	f107 3cff 	add.w	ip, r7, #4294967295
 802abf8:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 802abfc:	e9dd e929 	ldrd	lr, r9, [sp, #164]	@ 0xa4
 802ac00:	ea5f 432b 	movs.w	r3, fp, asr #16
 802ac04:	ea4f 4128 	mov.w	r1, r8, asr #16
 802ac08:	d405      	bmi.n	802ac16 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802ac0a:	42b3      	cmp	r3, r6
 802ac0c:	da03      	bge.n	802ac16 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802ac0e:	2900      	cmp	r1, #0
 802ac10:	db01      	blt.n	802ac16 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802ac12:	4561      	cmp	r1, ip
 802ac14:	db4f      	blt.n	802acb6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802ac16:	1c58      	adds	r0, r3, #1
 802ac18:	d406      	bmi.n	802ac28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802ac1a:	42a8      	cmp	r0, r5
 802ac1c:	dc04      	bgt.n	802ac28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802ac1e:	1c48      	adds	r0, r1, #1
 802ac20:	d402      	bmi.n	802ac28 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 802ac22:	42b8      	cmp	r0, r7
 802ac24:	f340 817e 	ble.w	802af24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b8>
 802ac28:	3a01      	subs	r2, #1
 802ac2a:	44f3      	add	fp, lr
 802ac2c:	44c8      	add	r8, r9
 802ac2e:	f10a 0a02 	add.w	sl, sl, #2
 802ac32:	d1e5      	bne.n	802ac00 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802ac34:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802ac36:	2b00      	cmp	r3, #0
 802ac38:	dd38      	ble.n	802acac <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802ac3a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802ac3e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802ac42:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802ac46:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802ac4a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802ac4e:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802ac52:	ee69 7a27 	vmul.f32	s15, s18, s15
 802ac56:	ee76 6a68 	vsub.f32	s13, s12, s17
 802ac5a:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802ac5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ac62:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ac66:	ee16 2a90 	vmov	r2, s13
 802ac6a:	3b01      	subs	r3, #1
 802ac6c:	930e      	str	r3, [sp, #56]	@ 0x38
 802ac6e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802ac70:	fb92 f3f3 	sdiv	r3, r2, r3
 802ac74:	ee17 2a10 	vmov	r2, s14
 802ac78:	eeb0 7a48 	vmov.f32	s14, s16
 802ac7c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ac80:	ee17 8a10 	vmov	r8, s14
 802ac84:	eeb0 7a68 	vmov.f32	s14, s17
 802ac88:	9329      	str	r3, [sp, #164]	@ 0xa4
 802ac8a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802ac8c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ac90:	fb92 f3f3 	sdiv	r3, r2, r3
 802ac94:	932a      	str	r3, [sp, #168]	@ 0xa8
 802ac96:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802ac98:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802ac9a:	ee17 ba10 	vmov	fp, s14
 802ac9e:	eeb0 8a67 	vmov.f32	s16, s15
 802aca2:	eef0 8a46 	vmov.f32	s17, s12
 802aca6:	bf18      	it	ne
 802aca8:	461a      	movne	r2, r3
 802acaa:	e793      	b.n	802abd4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802acac:	b015      	add	sp, #84	@ 0x54
 802acae:	ecbd 8b08 	vpop	{d8-d11}
 802acb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802acb6:	46d4      	mov	ip, sl
 802acb8:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802acbc:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802acbe:	1e51      	subs	r1, r2, #1
 802acc0:	fb00 b301 	mla	r3, r0, r1, fp
 802acc4:	141b      	asrs	r3, r3, #16
 802acc6:	910a      	str	r1, [sp, #40]	@ 0x28
 802acc8:	f100 80cc 	bmi.w	802ae64 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802accc:	42b3      	cmp	r3, r6
 802acce:	f280 80c9 	bge.w	802ae64 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802acd2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802acd4:	fb03 8301 	mla	r3, r3, r1, r8
 802acd8:	141b      	asrs	r3, r3, #16
 802acda:	f100 80c3 	bmi.w	802ae64 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802acde:	3f01      	subs	r7, #1
 802ace0:	42bb      	cmp	r3, r7
 802ace2:	f280 80bf 	bge.w	802ae64 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 802ace6:	2a00      	cmp	r2, #0
 802ace8:	dda4      	ble.n	802ac34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802acea:	eb0a 0a42 	add.w	sl, sl, r2, lsl #1
 802acee:	e9cd ca09 	strd	ip, sl, [sp, #36]	@ 0x24
 802acf2:	e08e      	b.n	802ae12 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 802acf4:	f891 c001 	ldrb.w	ip, [r1, #1]
 802acf8:	194c      	adds	r4, r1, r5
 802acfa:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802acfe:	44bc      	add	ip, r7
 802ad00:	2a00      	cmp	r2, #0
 802ad02:	f000 80a6 	beq.w	802ae52 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 802ad06:	5d48      	ldrb	r0, [r1, r5]
 802ad08:	7865      	ldrb	r5, [r4, #1]
 802ad0a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802ad0e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802ad12:	4438      	add	r0, r7
 802ad14:	443d      	add	r5, r7
 802ad16:	b29b      	uxth	r3, r3
 802ad18:	b292      	uxth	r2, r2
 802ad1a:	fb03 f402 	mul.w	r4, r3, r2
 802ad1e:	011b      	lsls	r3, r3, #4
 802ad20:	1b19      	subs	r1, r3, r4
 802ad22:	f89c 9000 	ldrb.w	r9, [ip]
 802ad26:	f89c e002 	ldrb.w	lr, [ip, #2]
 802ad2a:	b289      	uxth	r1, r1
 802ad2c:	f89c c001 	ldrb.w	ip, [ip, #1]
 802ad30:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802ad34:	fb01 f909 	mul.w	r9, r1, r9
 802ad38:	b292      	uxth	r2, r2
 802ad3a:	fb01 fe0e 	mul.w	lr, r1, lr
 802ad3e:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802ad42:	fb01 f10c 	mul.w	r1, r1, ip
 802ad46:	f817 a00a 	ldrb.w	sl, [r7, sl]
 802ad4a:	1a9b      	subs	r3, r3, r2
 802ad4c:	f896 c002 	ldrb.w	ip, [r6, #2]
 802ad50:	b29b      	uxth	r3, r3
 802ad52:	7876      	ldrb	r6, [r6, #1]
 802ad54:	fb03 990a 	mla	r9, r3, sl, r9
 802ad58:	fb03 ec0c 	mla	ip, r3, ip, lr
 802ad5c:	fb03 1306 	mla	r3, r3, r6, r1
 802ad60:	7801      	ldrb	r1, [r0, #0]
 802ad62:	f890 e002 	ldrb.w	lr, [r0, #2]
 802ad66:	fb02 9901 	mla	r9, r2, r1, r9
 802ad6a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802ad6c:	fb02 ce0e 	mla	lr, r2, lr, ip
 802ad70:	7829      	ldrb	r1, [r5, #0]
 802ad72:	f8b7 c000 	ldrh.w	ip, [r7]
 802ad76:	7840      	ldrb	r0, [r0, #1]
 802ad78:	78ae      	ldrb	r6, [r5, #2]
 802ad7a:	fb02 3200 	mla	r2, r2, r0, r3
 802ad7e:	fb04 9901 	mla	r9, r4, r1, r9
 802ad82:	7868      	ldrb	r0, [r5, #1]
 802ad84:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802ad86:	ea4f 252c 	mov.w	r5, ip, asr #8
 802ad8a:	fb04 ee06 	mla	lr, r4, r6, lr
 802ad8e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802ad92:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802ad96:	fb15 f501 	smulbb	r5, r5, r1
 802ad9a:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802ad9e:	b2db      	uxtb	r3, r3
 802ada0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 802ada4:	fb13 f301 	smulbb	r3, r3, r1
 802ada8:	fb1c fc01 	smulbb	ip, ip, r1
 802adac:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802adae:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 802adb2:	fb04 2200 	mla	r2, r4, r0, r2
 802adb6:	fb0e 5501 	mla	r5, lr, r1, r5
 802adba:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802adbe:	b2ad      	uxth	r5, r5
 802adc0:	fb02 cc01 	mla	ip, r2, r1, ip
 802adc4:	1c6a      	adds	r2, r5, #1
 802adc6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 802adca:	463a      	mov	r2, r7
 802adcc:	f3c9 2907 	ubfx	r9, r9, #8, #8
 802add0:	fb09 3301 	mla	r3, r9, r1, r3
 802add4:	fa1f f18c 	uxth.w	r1, ip
 802add8:	b29b      	uxth	r3, r3
 802adda:	1c5c      	adds	r4, r3, #1
 802addc:	1c48      	adds	r0, r1, #1
 802adde:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 802ade2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802ade6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802adea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802adee:	0949      	lsrs	r1, r1, #5
 802adf0:	432b      	orrs	r3, r5
 802adf2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802adf6:	430b      	orrs	r3, r1
 802adf8:	f822 3b02 	strh.w	r3, [r2], #2
 802adfc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802adfe:	9209      	str	r2, [sp, #36]	@ 0x24
 802ae00:	449b      	add	fp, r3
 802ae02:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802ae04:	4498      	add	r8, r3
 802ae06:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802ae08:	429a      	cmp	r2, r3
 802ae0a:	d029      	beq.n	802ae60 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802ae0c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802ae0e:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802ae12:	ea4f 432b 	mov.w	r3, fp, asr #16
 802ae16:	ea4f 4128 	mov.w	r1, r8, asr #16
 802ae1a:	fb05 3101 	mla	r1, r5, r1, r3
 802ae1e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802ae20:	9f08      	ldr	r7, [sp, #32]
 802ae22:	f812 a001 	ldrb.w	sl, [r2, r1]
 802ae26:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802ae2a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802ae2e:	4411      	add	r1, r2
 802ae30:	eb07 060a 	add.w	r6, r7, sl
 802ae34:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802ae38:	2b00      	cmp	r3, #0
 802ae3a:	f47f af5b 	bne.w	802acf4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802ae3e:	b15a      	cbz	r2, 802ae58 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>
 802ae40:	5d48      	ldrb	r0, [r1, r5]
 802ae42:	9908      	ldr	r1, [sp, #32]
 802ae44:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802ae48:	4635      	mov	r5, r6
 802ae4a:	4408      	add	r0, r1
 802ae4c:	46b4      	mov	ip, r6
 802ae4e:	460f      	mov	r7, r1
 802ae50:	e761      	b.n	802ad16 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802ae52:	4635      	mov	r5, r6
 802ae54:	4630      	mov	r0, r6
 802ae56:	e75e      	b.n	802ad16 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802ae58:	4635      	mov	r5, r6
 802ae5a:	4630      	mov	r0, r6
 802ae5c:	46b4      	mov	ip, r6
 802ae5e:	e75a      	b.n	802ad16 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802ae60:	469a      	mov	sl, r3
 802ae62:	e6e7      	b.n	802ac34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802ae64:	2a00      	cmp	r2, #0
 802ae66:	f77f aee5 	ble.w	802ac34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802ae6a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802ae6c:	ea4f 432b 	mov.w	r3, fp, asr #16
 802ae70:	ea4f 4128 	mov.w	r1, r8, asr #16
 802ae74:	4675      	mov	r5, lr
 802ae76:	46d1      	mov	r9, sl
 802ae78:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 802ae7c:	f8dd a0b8 	ldr.w	sl, [sp, #184]	@ 0xb8
 802ae80:	9609      	str	r6, [sp, #36]	@ 0x24
 802ae82:	2b00      	cmp	r3, #0
 802ae84:	f3cb 3703 	ubfx	r7, fp, #12, #4
 802ae88:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802ae8c:	db27      	blt.n	802aede <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802ae8e:	1e60      	subs	r0, r4, #1
 802ae90:	4283      	cmp	r3, r0
 802ae92:	da24      	bge.n	802aede <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802ae94:	2900      	cmp	r1, #0
 802ae96:	db22      	blt.n	802aede <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802ae98:	1e68      	subs	r0, r5, #1
 802ae9a:	4281      	cmp	r1, r0
 802ae9c:	da1f      	bge.n	802aede <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802ae9e:	b220      	sxth	r0, r4
 802aea0:	fb01 3300 	mla	r3, r1, r0, r3
 802aea4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802aea6:	5ccd      	ldrb	r5, [r1, r3]
 802aea8:	440b      	add	r3, r1
 802aeaa:	9908      	ldr	r1, [sp, #32]
 802aeac:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802aeb0:	460e      	mov	r6, r1
 802aeb2:	eb01 0c05 	add.w	ip, r1, r5
 802aeb6:	2f00      	cmp	r7, #0
 802aeb8:	d04b      	beq.n	802af52 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802aeba:	785c      	ldrb	r4, [r3, #1]
 802aebc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802aec0:	440c      	add	r4, r1
 802aec2:	2a00      	cmp	r2, #0
 802aec4:	f000 80c4 	beq.w	802b050 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802aec8:	1819      	adds	r1, r3, r0
 802aeca:	7849      	ldrb	r1, [r1, #1]
 802aecc:	5c18      	ldrb	r0, [r3, r0]
 802aece:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802aed2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802aed6:	1873      	adds	r3, r6, r1
 802aed8:	9311      	str	r3, [sp, #68]	@ 0x44
 802aeda:	4430      	add	r0, r6
 802aedc:	e03f      	b.n	802af5e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802aede:	1c58      	adds	r0, r3, #1
 802aee0:	d405      	bmi.n	802aeee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802aee2:	42a0      	cmp	r0, r4
 802aee4:	dc03      	bgt.n	802aeee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802aee6:	1c48      	adds	r0, r1, #1
 802aee8:	d401      	bmi.n	802aeee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802aeea:	42a8      	cmp	r0, r5
 802aeec:	dd20      	ble.n	802af30 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c4>
 802aeee:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802aef0:	f109 0902 	add.w	r9, r9, #2
 802aef4:	449b      	add	fp, r3
 802aef6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802aef8:	4498      	add	r8, r3
 802aefa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802aefc:	2b00      	cmp	r3, #0
 802aefe:	dd08      	ble.n	802af12 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802af00:	e9da 4502 	ldrd	r4, r5, [sl, #8]
 802af04:	3b01      	subs	r3, #1
 802af06:	9309      	str	r3, [sp, #36]	@ 0x24
 802af08:	ea4f 4128 	mov.w	r1, r8, asr #16
 802af0c:	ea4f 432b 	mov.w	r3, fp, asr #16
 802af10:	e7b7      	b.n	802ae82 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802af12:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802af14:	f8dd a040 	ldr.w	sl, [sp, #64]	@ 0x40
 802af18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802af1c:	3301      	adds	r3, #1
 802af1e:	eb0a 0a43 	add.w	sl, sl, r3, lsl #1
 802af22:	e687      	b.n	802ac34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802af24:	3a01      	subs	r2, #1
 802af26:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802af2a:	920a      	str	r2, [sp, #40]	@ 0x28
 802af2c:	4616      	mov	r6, r2
 802af2e:	e7a1      	b.n	802ae74 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 802af30:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802af32:	b22d      	sxth	r5, r5
 802af34:	b224      	sxth	r4, r4
 802af36:	e9cd 2005 	strd	r2, r0, [sp, #20]
 802af3a:	e9cd 1703 	strd	r1, r7, [sp, #12]
 802af3e:	9302      	str	r3, [sp, #8]
 802af40:	e9cd 4500 	strd	r4, r5, [sp]
 802af44:	9b08      	ldr	r3, [sp, #32]
 802af46:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802af48:	4649      	mov	r1, r9
 802af4a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802af4c:	f7ff fcf2 	bl	802a934 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 802af50:	e7cd      	b.n	802aeee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802af52:	2a00      	cmp	r2, #0
 802af54:	d173      	bne.n	802b03e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d2>
 802af56:	4660      	mov	r0, ip
 802af58:	4664      	mov	r4, ip
 802af5a:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802af5e:	b2bb      	uxth	r3, r7
 802af60:	b292      	uxth	r2, r2
 802af62:	fb03 f702 	mul.w	r7, r3, r2
 802af66:	011b      	lsls	r3, r3, #4
 802af68:	1bd9      	subs	r1, r3, r7
 802af6a:	7826      	ldrb	r6, [r4, #0]
 802af6c:	f894 e002 	ldrb.w	lr, [r4, #2]
 802af70:	7864      	ldrb	r4, [r4, #1]
 802af72:	b289      	uxth	r1, r1
 802af74:	fb01 f606 	mul.w	r6, r1, r6
 802af78:	fb01 fe0e 	mul.w	lr, r1, lr
 802af7c:	ebc7 1202 	rsb	r2, r7, r2, lsl #4
 802af80:	fb01 f104 	mul.w	r1, r1, r4
 802af84:	9c08      	ldr	r4, [sp, #32]
 802af86:	b292      	uxth	r2, r2
 802af88:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802af8c:	5d65      	ldrb	r5, [r4, r5]
 802af8e:	1a9b      	subs	r3, r3, r2
 802af90:	f89c 4002 	ldrb.w	r4, [ip, #2]
 802af94:	f89c c001 	ldrb.w	ip, [ip, #1]
 802af98:	b29b      	uxth	r3, r3
 802af9a:	fb03 e404 	mla	r4, r3, r4, lr
 802af9e:	fb03 6505 	mla	r5, r3, r5, r6
 802afa2:	fb03 130c 	mla	r3, r3, ip, r1
 802afa6:	f890 c001 	ldrb.w	ip, [r0, #1]
 802afaa:	7801      	ldrb	r1, [r0, #0]
 802afac:	f890 e002 	ldrb.w	lr, [r0, #2]
 802afb0:	fb02 3c0c 	mla	ip, r2, ip, r3
 802afb4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802afb6:	fb02 5601 	mla	r6, r2, r1, r5
 802afba:	fb02 4e0e 	mla	lr, r2, lr, r4
 802afbe:	7899      	ldrb	r1, [r3, #2]
 802afc0:	781a      	ldrb	r2, [r3, #0]
 802afc2:	785b      	ldrb	r3, [r3, #1]
 802afc4:	f8b9 0000 	ldrh.w	r0, [r9]
 802afc8:	fb07 c303 	mla	r3, r7, r3, ip
 802afcc:	fb07 6202 	mla	r2, r7, r2, r6
 802afd0:	00c5      	lsls	r5, r0, #3
 802afd2:	1204      	asrs	r4, r0, #8
 802afd4:	fb07 e101 	mla	r1, r7, r1, lr
 802afd8:	10c0      	asrs	r0, r0, #3
 802afda:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 802afdc:	b2ed      	uxtb	r5, r5
 802afde:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802afe2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802afe6:	fb15 f507 	smulbb	r5, r5, r7
 802afea:	fb14 f407 	smulbb	r4, r4, r7
 802afee:	fb10 f007 	smulbb	r0, r0, r7
 802aff2:	f3c3 2707 	ubfx	r7, r3, #8, #8
 802aff6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802aff8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802affc:	461e      	mov	r6, r3
 802affe:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802b002:	fb02 5203 	mla	r2, r2, r3, r5
 802b006:	fb07 0006 	mla	r0, r7, r6, r0
 802b00a:	fb01 4303 	mla	r3, r1, r3, r4
 802b00e:	b281      	uxth	r1, r0
 802b010:	b294      	uxth	r4, r2
 802b012:	b29b      	uxth	r3, r3
 802b014:	1c4a      	adds	r2, r1, #1
 802b016:	1c5d      	adds	r5, r3, #1
 802b018:	1c60      	adds	r0, r4, #1
 802b01a:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802b01e:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802b022:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 802b026:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802b02a:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 802b02e:	0952      	lsrs	r2, r2, #5
 802b030:	430b      	orrs	r3, r1
 802b032:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b036:	4313      	orrs	r3, r2
 802b038:	f8a9 3000 	strh.w	r3, [r9]
 802b03c:	e757      	b.n	802aeee <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802b03e:	5c18      	ldrb	r0, [r3, r0]
 802b040:	9b08      	ldr	r3, [sp, #32]
 802b042:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b046:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802b04a:	4418      	add	r0, r3
 802b04c:	4664      	mov	r4, ip
 802b04e:	e786      	b.n	802af5e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802b050:	f8cd c044 	str.w	ip, [sp, #68]	@ 0x44
 802b054:	4660      	mov	r0, ip
 802b056:	e782      	b.n	802af5e <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802b058:	f43f adec 	beq.w	802ac34 <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 802b05c:	1e6e      	subs	r6, r5, #1
 802b05e:	46d4      	mov	ip, sl
 802b060:	e62c      	b.n	802acbc <_ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 802b062:	bf00      	nop

0802b064 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 802b064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b068:	4692      	mov	sl, r2
 802b06a:	b083      	sub	sp, #12
 802b06c:	880a      	ldrh	r2, [r1, #0]
 802b06e:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 802b072:	e9dd 740e 	ldrd	r7, r4, [sp, #56]	@ 0x38
 802b076:	0215      	lsls	r5, r2, #8
 802b078:	0150      	lsls	r0, r2, #5
 802b07a:	fb04 7e0c 	mla	lr, r4, ip, r7
 802b07e:	f400 407c 	and.w	r0, r0, #64512	@ 0xfc00
 802b082:	f405 0578 	and.w	r5, r5, #16252928	@ 0xf80000
 802b086:	00d2      	lsls	r2, r2, #3
 802b088:	4305      	orrs	r5, r0
 802b08a:	b2d2      	uxtb	r2, r2
 802b08c:	4315      	orrs	r5, r2
 802b08e:	2c00      	cmp	r4, #0
 802b090:	9501      	str	r5, [sp, #4]
 802b092:	eb0a 020e 	add.w	r2, sl, lr
 802b096:	f104 0801 	add.w	r8, r4, #1
 802b09a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802b09e:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 802b0a2:	f89d 0044 	ldrb.w	r0, [sp, #68]	@ 0x44
 802b0a6:	db01      	blt.n	802b0ac <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x48>
 802b0a8:	45a1      	cmp	r9, r4
 802b0aa:	dc71      	bgt.n	802b190 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x12c>
 802b0ac:	fa5f fa85 	uxtb.w	sl, r5
 802b0b0:	f10d 0b04 	add.w	fp, sp, #4
 802b0b4:	4654      	mov	r4, sl
 802b0b6:	46de      	mov	lr, fp
 802b0b8:	f1b8 0f00 	cmp.w	r8, #0
 802b0bc:	db01      	blt.n	802b0c2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5e>
 802b0be:	45c1      	cmp	r9, r8
 802b0c0:	dc4c      	bgt.n	802b15c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xf8>
 802b0c2:	fa5f f985 	uxtb.w	r9, r5
 802b0c6:	ab01      	add	r3, sp, #4
 802b0c8:	464d      	mov	r5, r9
 802b0ca:	4698      	mov	r8, r3
 802b0cc:	2e0f      	cmp	r6, #15
 802b0ce:	f200 809b 	bhi.w	802b208 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b0d2:	280f      	cmp	r0, #15
 802b0d4:	f200 8098 	bhi.w	802b208 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b0d8:	b2b2      	uxth	r2, r6
 802b0da:	b280      	uxth	r0, r0
 802b0dc:	fb02 f700 	mul.w	r7, r2, r0
 802b0e0:	0112      	lsls	r2, r2, #4
 802b0e2:	f89b c002 	ldrb.w	ip, [fp, #2]
 802b0e6:	1bd6      	subs	r6, r2, r7
 802b0e8:	f89b b001 	ldrb.w	fp, [fp, #1]
 802b0ec:	b2b6      	uxth	r6, r6
 802b0ee:	ebc7 1000 	rsb	r0, r7, r0, lsl #4
 802b0f2:	fb06 f404 	mul.w	r4, r6, r4
 802b0f6:	fb06 fc0c 	mul.w	ip, r6, ip
 802b0fa:	fb06 f60b 	mul.w	r6, r6, fp
 802b0fe:	b280      	uxth	r0, r0
 802b100:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802b104:	f89e b002 	ldrb.w	fp, [lr, #2]
 802b108:	1a12      	subs	r2, r2, r0
 802b10a:	f89e e001 	ldrb.w	lr, [lr, #1]
 802b10e:	b292      	uxth	r2, r2
 802b110:	fb02 440a 	mla	r4, r2, sl, r4
 802b114:	fb02 660e 	mla	r6, r2, lr, r6
 802b118:	fb02 cc0b 	mla	ip, r2, fp, ip
 802b11c:	f898 a002 	ldrb.w	sl, [r8, #2]
 802b120:	f898 8001 	ldrb.w	r8, [r8, #1]
 802b124:	fb00 4909 	mla	r9, r0, r9, r4
 802b128:	fb00 cc0a 	mla	ip, r0, sl, ip
 802b12c:	fb00 6008 	mla	r0, r0, r8, r6
 802b130:	789e      	ldrb	r6, [r3, #2]
 802b132:	785b      	ldrb	r3, [r3, #1]
 802b134:	fb07 9905 	mla	r9, r7, r5, r9
 802b138:	fb07 c506 	mla	r5, r7, r6, ip
 802b13c:	fb07 0703 	mla	r7, r7, r3, r0
 802b140:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 802b144:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802b148:	097f      	lsrs	r7, r7, #5
 802b14a:	ea45 0509 	orr.w	r5, r5, r9
 802b14e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802b152:	433d      	orrs	r5, r7
 802b154:	800d      	strh	r5, [r1, #0]
 802b156:	b003      	add	sp, #12
 802b158:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b15c:	b388      	cbz	r0, 802b1c2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x15e>
 802b15e:	2f00      	cmp	r7, #0
 802b160:	db40      	blt.n	802b1e4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x180>
 802b162:	45bc      	cmp	ip, r7
 802b164:	dd3e      	ble.n	802b1e4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x180>
 802b166:	f812 800c 	ldrb.w	r8, [r2, ip]
 802b16a:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802b16e:	4498      	add	r8, r3
 802b170:	3701      	adds	r7, #1
 802b172:	f898 9000 	ldrb.w	r9, [r8]
 802b176:	d432      	bmi.n	802b1de <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x17a>
 802b178:	45bc      	cmp	ip, r7
 802b17a:	dd30      	ble.n	802b1de <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x17a>
 802b17c:	2e00      	cmp	r6, #0
 802b17e:	d040      	beq.n	802b202 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x19e>
 802b180:	4494      	add	ip, r2
 802b182:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802b186:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802b18a:	5c9d      	ldrb	r5, [r3, r2]
 802b18c:	4413      	add	r3, r2
 802b18e:	e79d      	b.n	802b0cc <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x68>
 802b190:	2f00      	cmp	r7, #0
 802b192:	db01      	blt.n	802b198 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x134>
 802b194:	45bc      	cmp	ip, r7
 802b196:	dc1c      	bgt.n	802b1d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16e>
 802b198:	f10d 0e04 	add.w	lr, sp, #4
 802b19c:	1c7c      	adds	r4, r7, #1
 802b19e:	f89e a000 	ldrb.w	sl, [lr]
 802b1a2:	d40a      	bmi.n	802b1ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x156>
 802b1a4:	45a4      	cmp	ip, r4
 802b1a6:	dd08      	ble.n	802b1ba <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x156>
 802b1a8:	b1fe      	cbz	r6, 802b1ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x186>
 802b1aa:	f892 b001 	ldrb.w	fp, [r2, #1]
 802b1ae:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802b1b2:	f813 400b 	ldrb.w	r4, [r3, fp]
 802b1b6:	449b      	add	fp, r3
 802b1b8:	e77e      	b.n	802b0b8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x54>
 802b1ba:	b2ec      	uxtb	r4, r5
 802b1bc:	f10d 0b04 	add.w	fp, sp, #4
 802b1c0:	e77a      	b.n	802b0b8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x54>
 802b1c2:	2e0f      	cmp	r6, #15
 802b1c4:	fa5f f985 	uxtb.w	r9, r5
 802b1c8:	d81e      	bhi.n	802b208 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1a4>
 802b1ca:	ab01      	add	r3, sp, #4
 802b1cc:	4698      	mov	r8, r3
 802b1ce:	464d      	mov	r5, r9
 802b1d0:	e782      	b.n	802b0d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x74>
 802b1d2:	f81a e00e 	ldrb.w	lr, [sl, lr]
 802b1d6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802b1da:	449e      	add	lr, r3
 802b1dc:	e7de      	b.n	802b19c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802b1de:	b2ed      	uxtb	r5, r5
 802b1e0:	ab01      	add	r3, sp, #4
 802b1e2:	e773      	b.n	802b0cc <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x68>
 802b1e4:	f10d 0804 	add.w	r8, sp, #4
 802b1e8:	e7c2      	b.n	802b170 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x10c>
 802b1ea:	f1b8 0f00 	cmp.w	r8, #0
 802b1ee:	b2ec      	uxtb	r4, r5
 802b1f0:	f10d 0b04 	add.w	fp, sp, #4
 802b1f4:	f6bf af63 	bge.w	802b0be <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 802b1f8:	465b      	mov	r3, fp
 802b1fa:	46d8      	mov	r8, fp
 802b1fc:	4625      	mov	r5, r4
 802b1fe:	46a1      	mov	r9, r4
 802b200:	e767      	b.n	802b0d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802b202:	b2ed      	uxtb	r5, r5
 802b204:	ab01      	add	r3, sp, #4
 802b206:	e764      	b.n	802b0d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802b208:	4b03      	ldr	r3, [pc, #12]	@ (802b218 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1b4>)
 802b20a:	4a04      	ldr	r2, [pc, #16]	@ (802b21c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1b8>)
 802b20c:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802b210:	4803      	ldr	r0, [pc, #12]	@ (802b220 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x1bc>)
 802b212:	f007 f971 	bl	80324f8 <__assert_func>
 802b216:	bf00      	nop
 802b218:	080366d4 	.word	0x080366d4
 802b21c:	08036d50 	.word	0x08036d50
 802b220:	0803685c 	.word	0x0803685c

0802b224 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b228:	ed2d 8b0a 	vpush	{d8-d12}
 802b22c:	eeb0 aa40 	vmov.f32	s20, s0
 802b230:	eef0 9a60 	vmov.f32	s19, s1
 802b234:	eeb0 9a41 	vmov.f32	s18, s2
 802b238:	eef0 8a62 	vmov.f32	s17, s5
 802b23c:	eeb0 8a43 	vmov.f32	s16, s6
 802b240:	eeb0 ca44 	vmov.f32	s24, s8
 802b244:	eef0 ba64 	vmov.f32	s23, s9
 802b248:	eeb0 ba45 	vmov.f32	s22, s10
 802b24c:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802b250:	b093      	sub	sp, #76	@ 0x4c
 802b252:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802b256:	e9dd 412b 	ldrd	r4, r1, [sp, #172]	@ 0xac
 802b25a:	e9dd 9827 	ldrd	r9, r8, [sp, #156]	@ 0x9c
 802b25e:	9011      	str	r0, [sp, #68]	@ 0x44
 802b260:	461a      	mov	r2, r3
 802b262:	6860      	ldr	r0, [r4, #4]
 802b264:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802b266:	f8dd a0a4 	ldr.w	sl, [sp, #164]	@ 0xa4
 802b26a:	fb00 1303 	mla	r3, r0, r3, r1
 802b26e:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 802b270:	6820      	ldr	r0, [r4, #0]
 802b272:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802b274:	6849      	ldr	r1, [r1, #4]
 802b276:	6824      	ldr	r4, [r4, #0]
 802b278:	eb00 0b43 	add.w	fp, r0, r3, lsl #1
 802b27c:	1d0b      	adds	r3, r1, #4
 802b27e:	9409      	str	r4, [sp, #36]	@ 0x24
 802b280:	930c      	str	r3, [sp, #48]	@ 0x30
 802b282:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b284:	2b00      	cmp	r3, #0
 802b286:	dc02      	bgt.n	802b28e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 802b288:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802b28a:	2b00      	cmp	r3, #0
 802b28c:	dd61      	ble.n	802b352 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802b28e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802b290:	2a00      	cmp	r2, #0
 802b292:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802b296:	b225      	sxth	r5, r4
 802b298:	fa0f f78e 	sxth.w	r7, lr
 802b29c:	f340 81d9 	ble.w	802b652 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 802b2a0:	f8cd e01c 	str.w	lr, [sp, #28]
 802b2a4:	f8dd e0a8 	ldr.w	lr, [sp, #168]	@ 0xa8
 802b2a8:	1e6e      	subs	r6, r5, #1
 802b2aa:	f107 3cff 	add.w	ip, r7, #4294967295
 802b2ae:	ea5f 4329 	movs.w	r3, r9, asr #16
 802b2b2:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b2b6:	d405      	bmi.n	802b2c4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b2b8:	42b3      	cmp	r3, r6
 802b2ba:	da03      	bge.n	802b2c4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b2bc:	2900      	cmp	r1, #0
 802b2be:	db01      	blt.n	802b2c4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802b2c0:	4561      	cmp	r1, ip
 802b2c2:	db4b      	blt.n	802b35c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802b2c4:	1c58      	adds	r0, r3, #1
 802b2c6:	d406      	bmi.n	802b2d6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b2c8:	42a8      	cmp	r0, r5
 802b2ca:	dc04      	bgt.n	802b2d6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b2cc:	1c48      	adds	r0, r1, #1
 802b2ce:	d402      	bmi.n	802b2d6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802b2d0:	42b8      	cmp	r0, r7
 802b2d2:	f340 8149 	ble.w	802b568 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802b2d6:	3a01      	subs	r2, #1
 802b2d8:	44d1      	add	r9, sl
 802b2da:	44f0      	add	r8, lr
 802b2dc:	f10b 0b02 	add.w	fp, fp, #2
 802b2e0:	d1e5      	bne.n	802b2ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802b2e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b2e4:	2b00      	cmp	r3, #0
 802b2e6:	dd34      	ble.n	802b352 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 802b2e8:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802b2ec:	ee79 9aab 	vadd.f32	s19, s19, s23
 802b2f0:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802b2f4:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802b2f8:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802b2fc:	ee69 7a27 	vmul.f32	s15, s18, s15
 802b300:	ee76 6a68 	vsub.f32	s13, s12, s17
 802b304:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802b308:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b30c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b310:	ee16 2a90 	vmov	r2, s13
 802b314:	3b01      	subs	r3, #1
 802b316:	930a      	str	r3, [sp, #40]	@ 0x28
 802b318:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802b31a:	fb92 faf3 	sdiv	sl, r2, r3
 802b31e:	ee17 2a10 	vmov	r2, s14
 802b322:	eeb0 7a48 	vmov.f32	s14, s16
 802b326:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b32a:	ee17 8a10 	vmov	r8, s14
 802b32e:	eeb0 7a68 	vmov.f32	s14, s17
 802b332:	fb92 f3f3 	sdiv	r3, r2, r3
 802b336:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802b33a:	932a      	str	r3, [sp, #168]	@ 0xa8
 802b33c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802b33e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802b340:	ee17 9a10 	vmov	r9, s14
 802b344:	eeb0 8a67 	vmov.f32	s16, s15
 802b348:	eef0 8a46 	vmov.f32	s17, s12
 802b34c:	bf18      	it	ne
 802b34e:	461a      	movne	r2, r3
 802b350:	e797      	b.n	802b282 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 802b352:	b013      	add	sp, #76	@ 0x4c
 802b354:	ecbd 8b0a 	vpop	{d8-d12}
 802b358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b35c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802b360:	f8cd b01c 	str.w	fp, [sp, #28]
 802b364:	1e51      	subs	r1, r2, #1
 802b366:	fb0a 9301 	mla	r3, sl, r1, r9
 802b36a:	141b      	asrs	r3, r3, #16
 802b36c:	9108      	str	r1, [sp, #32]
 802b36e:	f100 809e 	bmi.w	802b4ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b372:	42b3      	cmp	r3, r6
 802b374:	f280 809b 	bge.w	802b4ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b378:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802b37a:	fb03 8301 	mla	r3, r3, r1, r8
 802b37e:	141b      	asrs	r3, r3, #16
 802b380:	f100 8095 	bmi.w	802b4ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b384:	3f01      	subs	r7, #1
 802b386:	42bb      	cmp	r3, r7
 802b388:	f280 8091 	bge.w	802b4ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 802b38c:	2a00      	cmp	r2, #0
 802b38e:	dda8      	ble.n	802b2e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b390:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 802b394:	f8cd a0a4 	str.w	sl, [sp, #164]	@ 0xa4
 802b398:	f8cd b020 	str.w	fp, [sp, #32]
 802b39c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802b3a0:	e060      	b.n	802b464 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802b3a2:	784f      	ldrb	r7, [r1, #1]
 802b3a4:	194c      	adds	r4, r1, r5
 802b3a6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802b3aa:	4457      	add	r7, sl
 802b3ac:	2a00      	cmp	r2, #0
 802b3ae:	d075      	beq.n	802b49c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802b3b0:	5d48      	ldrb	r0, [r1, r5]
 802b3b2:	7865      	ldrb	r5, [r4, #1]
 802b3b4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b3b8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802b3bc:	4450      	add	r0, sl
 802b3be:	4455      	add	r5, sl
 802b3c0:	b29b      	uxth	r3, r3
 802b3c2:	b292      	uxth	r2, r2
 802b3c4:	fb03 f402 	mul.w	r4, r3, r2
 802b3c8:	011b      	lsls	r3, r3, #4
 802b3ca:	f897 e000 	ldrb.w	lr, [r7]
 802b3ce:	f897 c002 	ldrb.w	ip, [r7, #2]
 802b3d2:	1b19      	subs	r1, r3, r4
 802b3d4:	787f      	ldrb	r7, [r7, #1]
 802b3d6:	b289      	uxth	r1, r1
 802b3d8:	fb01 fc0c 	mul.w	ip, r1, ip
 802b3dc:	fb01 fe0e 	mul.w	lr, r1, lr
 802b3e0:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802b3e4:	fb01 f107 	mul.w	r1, r1, r7
 802b3e8:	b292      	uxth	r2, r2
 802b3ea:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802b3ee:	f81a b00b 	ldrb.w	fp, [sl, fp]
 802b3f2:	78b7      	ldrb	r7, [r6, #2]
 802b3f4:	1a9b      	subs	r3, r3, r2
 802b3f6:	7876      	ldrb	r6, [r6, #1]
 802b3f8:	b29b      	uxth	r3, r3
 802b3fa:	fb03 ee0b 	mla	lr, r3, fp, lr
 802b3fe:	fb03 c707 	mla	r7, r3, r7, ip
 802b402:	fb03 1306 	mla	r3, r3, r6, r1
 802b406:	f890 b000 	ldrb.w	fp, [r0]
 802b40a:	f890 c002 	ldrb.w	ip, [r0, #2]
 802b40e:	7841      	ldrb	r1, [r0, #1]
 802b410:	fb02 ee0b 	mla	lr, r2, fp, lr
 802b414:	fb02 3301 	mla	r3, r2, r1, r3
 802b418:	fb02 770c 	mla	r7, r2, ip, r7
 802b41c:	f895 b000 	ldrb.w	fp, [r5]
 802b420:	f895 c002 	ldrb.w	ip, [r5, #2]
 802b424:	7869      	ldrb	r1, [r5, #1]
 802b426:	fb04 ee0b 	mla	lr, r4, fp, lr
 802b42a:	fb04 3101 	mla	r1, r4, r1, r3
 802b42e:	fb04 7c0c 	mla	ip, r4, ip, r7
 802b432:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802b434:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 802b438:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 802b43c:	0949      	lsrs	r1, r1, #5
 802b43e:	4491      	add	r9, r2
 802b440:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 802b442:	9b07      	ldr	r3, [sp, #28]
 802b444:	ea4c 0e0e 	orr.w	lr, ip, lr
 802b448:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802b44c:	ea4e 0e01 	orr.w	lr, lr, r1
 802b450:	4490      	add	r8, r2
 802b452:	9a08      	ldr	r2, [sp, #32]
 802b454:	f823 eb02 	strh.w	lr, [r3], #2
 802b458:	4293      	cmp	r3, r2
 802b45a:	9307      	str	r3, [sp, #28]
 802b45c:	d025      	beq.n	802b4aa <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 802b45e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802b460:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802b464:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b468:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b46c:	fb05 3101 	mla	r1, r5, r1, r3
 802b470:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b472:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802b476:	f812 b001 	ldrb.w	fp, [r2, r1]
 802b47a:	4411      	add	r1, r2
 802b47c:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802b480:	eb0a 060b 	add.w	r6, sl, fp
 802b484:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802b488:	2b00      	cmp	r3, #0
 802b48a:	d18a      	bne.n	802b3a2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 802b48c:	b14a      	cbz	r2, 802b4a2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 802b48e:	5d48      	ldrb	r0, [r1, r5]
 802b490:	4637      	mov	r7, r6
 802b492:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802b496:	4635      	mov	r5, r6
 802b498:	4450      	add	r0, sl
 802b49a:	e791      	b.n	802b3c0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b49c:	4635      	mov	r5, r6
 802b49e:	4630      	mov	r0, r6
 802b4a0:	e78e      	b.n	802b3c0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b4a2:	4635      	mov	r5, r6
 802b4a4:	4630      	mov	r0, r6
 802b4a6:	4637      	mov	r7, r6
 802b4a8:	e78a      	b.n	802b3c0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19c>
 802b4aa:	4693      	mov	fp, r2
 802b4ac:	e719      	b.n	802b2e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b4ae:	2a00      	cmp	r2, #0
 802b4b0:	f77f af17 	ble.w	802b2e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b4b4:	9e08      	ldr	r6, [sp, #32]
 802b4b6:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b4ba:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b4be:	465f      	mov	r7, fp
 802b4c0:	f8cd b01c 	str.w	fp, [sp, #28]
 802b4c4:	f8dd b0b8 	ldr.w	fp, [sp, #184]	@ 0xb8
 802b4c8:	2b00      	cmp	r3, #0
 802b4ca:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802b4ce:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802b4d2:	db2a      	blt.n	802b52a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b4d4:	1e65      	subs	r5, r4, #1
 802b4d6:	42ab      	cmp	r3, r5
 802b4d8:	da27      	bge.n	802b52a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b4da:	2900      	cmp	r1, #0
 802b4dc:	db25      	blt.n	802b52a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b4de:	f10e 35ff 	add.w	r5, lr, #4294967295
 802b4e2:	42a9      	cmp	r1, r5
 802b4e4:	da21      	bge.n	802b52a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802b4e6:	b224      	sxth	r4, r4
 802b4e8:	fb01 3304 	mla	r3, r1, r4, r3
 802b4ec:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802b4ee:	f811 c003 	ldrb.w	ip, [r1, r3]
 802b4f2:	440b      	add	r3, r1
 802b4f4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802b4f6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802b4fa:	eb01 0e0c 	add.w	lr, r1, ip
 802b4fe:	2800      	cmp	r0, #0
 802b500:	d048      	beq.n	802b594 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802b502:	785d      	ldrb	r5, [r3, #1]
 802b504:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802b508:	440d      	add	r5, r1
 802b50a:	2a00      	cmp	r2, #0
 802b50c:	f000 809e 	beq.w	802b64c <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 802b510:	1919      	adds	r1, r3, r4
 802b512:	7849      	ldrb	r1, [r1, #1]
 802b514:	5d1c      	ldrb	r4, [r3, r4]
 802b516:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b518:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802b51c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802b520:	1859      	adds	r1, r3, r1
 802b522:	18e3      	adds	r3, r4, r3
 802b524:	910f      	str	r1, [sp, #60]	@ 0x3c
 802b526:	9310      	str	r3, [sp, #64]	@ 0x40
 802b528:	e039      	b.n	802b59e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b52a:	1c5d      	adds	r5, r3, #1
 802b52c:	d405      	bmi.n	802b53a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b52e:	42a5      	cmp	r5, r4
 802b530:	dc03      	bgt.n	802b53a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b532:	1c4d      	adds	r5, r1, #1
 802b534:	d401      	bmi.n	802b53a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b536:	4575      	cmp	r5, lr
 802b538:	dd1c      	ble.n	802b574 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802b53a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802b53c:	2e00      	cmp	r6, #0
 802b53e:	f107 0702 	add.w	r7, r7, #2
 802b542:	44d1      	add	r9, sl
 802b544:	4498      	add	r8, r3
 802b546:	dd07      	ble.n	802b558 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
 802b548:	e9db 4e02 	ldrd	r4, lr, [fp, #8]
 802b54c:	3e01      	subs	r6, #1
 802b54e:	ea4f 4329 	mov.w	r3, r9, asr #16
 802b552:	ea4f 4128 	mov.w	r1, r8, asr #16
 802b556:	e7b7      	b.n	802b4c8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802b558:	e9dd b307 	ldrd	fp, r3, [sp, #28]
 802b55c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802b560:	3301      	adds	r3, #1
 802b562:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802b566:	e6bc      	b.n	802b2e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b568:	3a01      	subs	r2, #1
 802b56a:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802b56e:	9208      	str	r2, [sp, #32]
 802b570:	4616      	mov	r6, r2
 802b572:	e7a4      	b.n	802b4be <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 802b574:	fa0f f58e 	sxth.w	r5, lr
 802b578:	b224      	sxth	r4, r4
 802b57a:	e9cd 0204 	strd	r0, r2, [sp, #16]
 802b57e:	e9cd 3102 	strd	r3, r1, [sp, #8]
 802b582:	e9cd 4500 	strd	r4, r5, [sp]
 802b586:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b588:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b58a:	4639      	mov	r1, r7
 802b58c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802b58e:	f7ff fd69 	bl	802b064 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 802b592:	e7d2      	b.n	802b53a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b594:	2a00      	cmp	r2, #0
 802b596:	d14f      	bne.n	802b638 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x414>
 802b598:	4675      	mov	r5, lr
 802b59a:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 802b59e:	b283      	uxth	r3, r0
 802b5a0:	b292      	uxth	r2, r2
 802b5a2:	fb03 f002 	mul.w	r0, r3, r2
 802b5a6:	782c      	ldrb	r4, [r5, #0]
 802b5a8:	011b      	lsls	r3, r3, #4
 802b5aa:	940e      	str	r4, [sp, #56]	@ 0x38
 802b5ac:	78ac      	ldrb	r4, [r5, #2]
 802b5ae:	1a19      	subs	r1, r3, r0
 802b5b0:	940d      	str	r4, [sp, #52]	@ 0x34
 802b5b2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802b5b4:	b289      	uxth	r1, r1
 802b5b6:	fb01 f404 	mul.w	r4, r1, r4
 802b5ba:	940e      	str	r4, [sp, #56]	@ 0x38
 802b5bc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802b5be:	786d      	ldrb	r5, [r5, #1]
 802b5c0:	fb01 f404 	mul.w	r4, r1, r4
 802b5c4:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802b5c8:	fb01 f105 	mul.w	r1, r1, r5
 802b5cc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802b5ce:	b292      	uxth	r2, r2
 802b5d0:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802b5d4:	f815 c00c 	ldrb.w	ip, [r5, ip]
 802b5d8:	940d      	str	r4, [sp, #52]	@ 0x34
 802b5da:	1a9b      	subs	r3, r3, r2
 802b5dc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802b5de:	b29b      	uxth	r3, r3
 802b5e0:	f89e 5002 	ldrb.w	r5, [lr, #2]
 802b5e4:	fb03 4c0c 	mla	ip, r3, ip, r4
 802b5e8:	f89e e001 	ldrb.w	lr, [lr, #1]
 802b5ec:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802b5ee:	fb03 4505 	mla	r5, r3, r5, r4
 802b5f2:	fb03 130e 	mla	r3, r3, lr, r1
 802b5f6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802b5f8:	78a1      	ldrb	r1, [r4, #2]
 802b5fa:	f894 e000 	ldrb.w	lr, [r4]
 802b5fe:	7864      	ldrb	r4, [r4, #1]
 802b600:	fb02 5501 	mla	r5, r2, r1, r5
 802b604:	fb02 cc0e 	mla	ip, r2, lr, ip
 802b608:	fb02 3104 	mla	r1, r2, r4, r3
 802b60c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802b60e:	7822      	ldrb	r2, [r4, #0]
 802b610:	78a3      	ldrb	r3, [r4, #2]
 802b612:	7864      	ldrb	r4, [r4, #1]
 802b614:	fb00 cc02 	mla	ip, r0, r2, ip
 802b618:	fb00 5303 	mla	r3, r0, r3, r5
 802b61c:	fb00 1204 	mla	r2, r0, r4, r1
 802b620:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802b624:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802b628:	0952      	lsrs	r2, r2, #5
 802b62a:	ea43 030c 	orr.w	r3, r3, ip
 802b62e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b632:	4313      	orrs	r3, r2
 802b634:	803b      	strh	r3, [r7, #0]
 802b636:	e780      	b.n	802b53a <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802b638:	5d1c      	ldrb	r4, [r3, r4]
 802b63a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b63c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802b640:	18e3      	adds	r3, r4, r3
 802b642:	f8cd e03c 	str.w	lr, [sp, #60]	@ 0x3c
 802b646:	9310      	str	r3, [sp, #64]	@ 0x40
 802b648:	4675      	mov	r5, lr
 802b64a:	e7a8      	b.n	802b59e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b64c:	e9cd ee0f 	strd	lr, lr, [sp, #60]	@ 0x3c
 802b650:	e7a5      	b.n	802b59e <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b652:	f43f ae46 	beq.w	802b2e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802b656:	1e6e      	subs	r6, r5, #1
 802b658:	f8cd b01c 	str.w	fp, [sp, #28]
 802b65c:	e682      	b.n	802b364 <_ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802b65e:	bf00      	nop

0802b660 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 802b660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b664:	b08b      	sub	sp, #44	@ 0x2c
 802b666:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	@ 0x50
 802b66a:	f8b1 c000 	ldrh.w	ip, [r1]
 802b66e:	e9dd 6416 	ldrd	r6, r4, [sp, #88]	@ 0x58
 802b672:	fb04 6507 	mla	r5, r4, r7, r6
 802b676:	9107      	str	r1, [sp, #28]
 802b678:	ea4f 01ec 	mov.w	r1, ip, asr #3
 802b67c:	ea4f 202c 	mov.w	r0, ip, asr #8
 802b680:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802b684:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802b688:	469a      	mov	sl, r3
 802b68a:	f89d 3068 	ldrb.w	r3, [sp, #104]	@ 0x68
 802b68e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802b692:	9105      	str	r1, [sp, #20]
 802b694:	2c00      	cmp	r4, #0
 802b696:	fa5f f18c 	uxtb.w	r1, ip
 802b69a:	9004      	str	r0, [sp, #16]
 802b69c:	9106      	str	r1, [sp, #24]
 802b69e:	eb02 0e05 	add.w	lr, r2, r5
 802b6a2:	f104 0801 	add.w	r8, r4, #1
 802b6a6:	f9bd 9054 	ldrsh.w	r9, [sp, #84]	@ 0x54
 802b6aa:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 802b6ae:	f89d 0064 	ldrb.w	r0, [sp, #100]	@ 0x64
 802b6b2:	9308      	str	r3, [sp, #32]
 802b6b4:	db02      	blt.n	802b6bc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802b6b6:	45a1      	cmp	r9, r4
 802b6b8:	f300 8119 	bgt.w	802b8ee <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28e>
 802b6bc:	f04f 0c00 	mov.w	ip, #0
 802b6c0:	4665      	mov	r5, ip
 802b6c2:	4662      	mov	r2, ip
 802b6c4:	4664      	mov	r4, ip
 802b6c6:	f1b8 0f00 	cmp.w	r8, #0
 802b6ca:	db02      	blt.n	802b6d2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x72>
 802b6cc:	45c1      	cmp	r9, r8
 802b6ce:	f300 8127 	bgt.w	802b920 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>
 802b6d2:	f04f 0e00 	mov.w	lr, #0
 802b6d6:	46f0      	mov	r8, lr
 802b6d8:	4676      	mov	r6, lr
 802b6da:	46f1      	mov	r9, lr
 802b6dc:	290f      	cmp	r1, #15
 802b6de:	f200 815e 	bhi.w	802b99e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b6e2:	280f      	cmp	r0, #15
 802b6e4:	f200 815b 	bhi.w	802b99e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b6e8:	b280      	uxth	r0, r0
 802b6ea:	b289      	uxth	r1, r1
 802b6ec:	fb00 fa01 	mul.w	sl, r0, r1
 802b6f0:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 802b6f4:	b280      	uxth	r0, r0
 802b6f6:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 802b6fa:	fb00 fb08 	mul.w	fp, r0, r8
 802b6fe:	fb0a f70e 	mul.w	r7, sl, lr
 802b702:	9301      	str	r3, [sp, #4]
 802b704:	f009 13ff 	and.w	r3, r9, #16711935	@ 0xff00ff
 802b708:	9302      	str	r3, [sp, #8]
 802b70a:	f409 437f 	and.w	r3, r9, #65280	@ 0xff00
 802b70e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b712:	9303      	str	r3, [sp, #12]
 802b714:	0109      	lsls	r1, r1, #4
 802b716:	eba1 090a 	sub.w	r9, r1, sl
 802b71a:	fa1f f989 	uxth.w	r9, r9
 802b71e:	fb09 f30c 	mul.w	r3, r9, ip
 802b722:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802b726:	1a09      	subs	r1, r1, r0
 802b728:	b289      	uxth	r1, r1
 802b72a:	fb01 3305 	mla	r3, r1, r5, r3
 802b72e:	445b      	add	r3, fp
 802b730:	443b      	add	r3, r7
 802b732:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b736:	2dff      	cmp	r5, #255	@ 0xff
 802b738:	9309      	str	r3, [sp, #36]	@ 0x24
 802b73a:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 802b73e:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b742:	d019      	beq.n	802b778 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x118>
 802b744:	fb03 f305 	mul.w	r3, r3, r5
 802b748:	fb04 f405 	mul.w	r4, r4, r5
 802b74c:	ea4f 2b13 	mov.w	fp, r3, lsr #8
 802b750:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802b754:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802b758:	f504 7780 	add.w	r7, r4, #256	@ 0x100
 802b75c:	445b      	add	r3, fp
 802b75e:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 802b762:	0a1b      	lsrs	r3, r3, #8
 802b764:	0a24      	lsrs	r4, r4, #8
 802b766:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802b76a:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b76e:	431c      	orrs	r4, r3
 802b770:	f004 13ff 	and.w	r3, r4, #16711935	@ 0xff00ff
 802b774:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802b778:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802b77c:	f002 15ff 	and.w	r5, r2, #16711935	@ 0xff00ff
 802b780:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b784:	d018      	beq.n	802b7b8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x158>
 802b786:	fb05 f50c 	mul.w	r5, r5, ip
 802b78a:	fb02 f20c 	mul.w	r2, r2, ip
 802b78e:	0a2f      	lsrs	r7, r5, #8
 802b790:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802b794:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 802b798:	f502 7c80 	add.w	ip, r2, #256	@ 0x100
 802b79c:	443d      	add	r5, r7
 802b79e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802b7a2:	0a2d      	lsrs	r5, r5, #8
 802b7a4:	0a12      	lsrs	r2, r2, #8
 802b7a6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802b7aa:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b7ae:	432a      	orrs	r2, r5
 802b7b0:	f002 15ff 	and.w	r5, r2, #16711935	@ 0xff00ff
 802b7b4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b7b8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802b7bc:	d01f      	beq.n	802b7fe <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x19e>
 802b7be:	9f02      	ldr	r7, [sp, #8]
 802b7c0:	fb07 fb08 	mul.w	fp, r7, r8
 802b7c4:	9f03      	ldr	r7, [sp, #12]
 802b7c6:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 802b7ca:	fb07 f808 	mul.w	r8, r7, r8
 802b7ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b7d2:	f508 7780 	add.w	r7, r8, #256	@ 0x100
 802b7d6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802b7da:	eb07 2718 	add.w	r7, r7, r8, lsr #8
 802b7de:	44dc      	add	ip, fp
 802b7e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b7e4:	0a3f      	lsrs	r7, r7, #8
 802b7e6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802b7ea:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b7ee:	ea4c 0807 	orr.w	r8, ip, r7
 802b7f2:	f008 17ff 	and.w	r7, r8, #16711935	@ 0xff00ff
 802b7f6:	9702      	str	r7, [sp, #8]
 802b7f8:	f408 477f 	and.w	r7, r8, #65280	@ 0xff00
 802b7fc:	9703      	str	r7, [sp, #12]
 802b7fe:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802b802:	d01d      	beq.n	802b840 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1e0>
 802b804:	9f01      	ldr	r7, [sp, #4]
 802b806:	fb06 f60e 	mul.w	r6, r6, lr
 802b80a:	fb07 f80e 	mul.w	r8, r7, lr
 802b80e:	ea4f 2c18 	mov.w	ip, r8, lsr #8
 802b812:	f506 7780 	add.w	r7, r6, #256	@ 0x100
 802b816:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b81a:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 802b81e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 802b822:	44e0      	add	r8, ip
 802b824:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802b828:	0a36      	lsrs	r6, r6, #8
 802b82a:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802b82e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b832:	ea48 0606 	orr.w	r6, r8, r6
 802b836:	f006 17ff 	and.w	r7, r6, #16711935	@ 0xff00ff
 802b83a:	9701      	str	r7, [sp, #4]
 802b83c:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802b840:	f8bd e020 	ldrh.w	lr, [sp, #32]
 802b844:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802b846:	fb05 f509 	mul.w	r5, r5, r9
 802b84a:	fb07 f70e 	mul.w	r7, r7, lr
 802b84e:	f107 0c01 	add.w	ip, r7, #1
 802b852:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 802b856:	ea6f 2c1c 	mvn.w	ip, ip, lsr #8
 802b85a:	fb02 f209 	mul.w	r2, r2, r9
 802b85e:	fb03 5501 	mla	r5, r3, r1, r5
 802b862:	fb04 2201 	mla	r2, r4, r1, r2
 802b866:	9b02      	ldr	r3, [sp, #8]
 802b868:	fa5f fc8c 	uxtb.w	ip, ip
 802b86c:	fb03 5500 	mla	r5, r3, r0, r5
 802b870:	9b03      	ldr	r3, [sp, #12]
 802b872:	fb03 2200 	mla	r2, r3, r0, r2
 802b876:	9b01      	ldr	r3, [sp, #4]
 802b878:	fb03 550a 	mla	r5, r3, sl, r5
 802b87c:	fb06 2a0a 	mla	sl, r6, sl, r2
 802b880:	9a05      	ldr	r2, [sp, #20]
 802b882:	9b04      	ldr	r3, [sp, #16]
 802b884:	fb12 f10c 	smulbb	r1, r2, ip
 802b888:	9a06      	ldr	r2, [sp, #24]
 802b88a:	0a2e      	lsrs	r6, r5, #8
 802b88c:	fb13 f30c 	smulbb	r3, r3, ip
 802b890:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b894:	fb12 fc0c 	smulbb	ip, r2, ip
 802b898:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b89c:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802b8a0:	ea46 060a 	orr.w	r6, r6, sl
 802b8a4:	0c30      	lsrs	r0, r6, #16
 802b8a6:	f3c6 2207 	ubfx	r2, r6, #8, #8
 802b8aa:	b2f6      	uxtb	r6, r6
 802b8ac:	fb00 330e 	mla	r3, r0, lr, r3
 802b8b0:	fb02 120e 	mla	r2, r2, lr, r1
 802b8b4:	fb06 c60e 	mla	r6, r6, lr, ip
 802b8b8:	b298      	uxth	r0, r3
 802b8ba:	b291      	uxth	r1, r2
 802b8bc:	b2b6      	uxth	r6, r6
 802b8be:	1c43      	adds	r3, r0, #1
 802b8c0:	f106 0e01 	add.w	lr, r6, #1
 802b8c4:	1c4a      	adds	r2, r1, #1
 802b8c6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802b8ca:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802b8ce:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802b8d2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 802b8d6:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802b8da:	0952      	lsrs	r2, r2, #5
 802b8dc:	4333      	orrs	r3, r6
 802b8de:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b8e2:	4313      	orrs	r3, r2
 802b8e4:	9a07      	ldr	r2, [sp, #28]
 802b8e6:	8013      	strh	r3, [r2, #0]
 802b8e8:	b00b      	add	sp, #44	@ 0x2c
 802b8ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b8ee:	2e00      	cmp	r6, #0
 802b8f0:	db01      	blt.n	802b8f6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x296>
 802b8f2:	42b7      	cmp	r7, r6
 802b8f4:	dc3c      	bgt.n	802b970 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x310>
 802b8f6:	2500      	movs	r5, #0
 802b8f8:	462c      	mov	r4, r5
 802b8fa:	1c72      	adds	r2, r6, #1
 802b8fc:	d427      	bmi.n	802b94e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2ee>
 802b8fe:	4297      	cmp	r7, r2
 802b900:	dd25      	ble.n	802b94e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2ee>
 802b902:	b131      	cbz	r1, 802b912 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2b2>
 802b904:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802b908:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 802b90c:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 802b910:	e6d9      	b.n	802b6c6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 802b912:	f1b8 0f00 	cmp.w	r8, #0
 802b916:	db3b      	blt.n	802b990 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x330>
 802b918:	45c1      	cmp	r9, r8
 802b91a:	dd39      	ble.n	802b990 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x330>
 802b91c:	468c      	mov	ip, r1
 802b91e:	460a      	mov	r2, r1
 802b920:	b1c8      	cbz	r0, 802b956 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2f6>
 802b922:	2e00      	cmp	r6, #0
 802b924:	db2d      	blt.n	802b982 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x322>
 802b926:	42b7      	cmp	r7, r6
 802b928:	dd2b      	ble.n	802b982 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x322>
 802b92a:	f81e 8007 	ldrb.w	r8, [lr, r7]
 802b92e:	f85a 9028 	ldr.w	r9, [sl, r8, lsl #2]
 802b932:	ea4f 6819 	mov.w	r8, r9, lsr #24
 802b936:	3601      	adds	r6, #1
 802b938:	d41f      	bmi.n	802b97a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31a>
 802b93a:	42b7      	cmp	r7, r6
 802b93c:	dd1d      	ble.n	802b97a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x31a>
 802b93e:	b321      	cbz	r1, 802b98a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x32a>
 802b940:	4477      	add	r7, lr
 802b942:	787e      	ldrb	r6, [r7, #1]
 802b944:	f85a 6026 	ldr.w	r6, [sl, r6, lsl #2]
 802b948:	ea4f 6e16 	mov.w	lr, r6, lsr #24
 802b94c:	e6c6      	b.n	802b6dc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x7c>
 802b94e:	f04f 0c00 	mov.w	ip, #0
 802b952:	4662      	mov	r2, ip
 802b954:	e6b7      	b.n	802b6c6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 802b956:	290f      	cmp	r1, #15
 802b958:	d821      	bhi.n	802b99e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x33e>
 802b95a:	b289      	uxth	r1, r1
 802b95c:	4682      	mov	sl, r0
 802b95e:	4607      	mov	r7, r0
 802b960:	4683      	mov	fp, r0
 802b962:	e9cd 0002 	strd	r0, r0, [sp, #8]
 802b966:	4606      	mov	r6, r0
 802b968:	9001      	str	r0, [sp, #4]
 802b96a:	4686      	mov	lr, r0
 802b96c:	4680      	mov	r8, r0
 802b96e:	e6d1      	b.n	802b714 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb4>
 802b970:	5d52      	ldrb	r2, [r2, r5]
 802b972:	f85a 4022 	ldr.w	r4, [sl, r2, lsl #2]
 802b976:	0e25      	lsrs	r5, r4, #24
 802b978:	e7bf      	b.n	802b8fa <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x29a>
 802b97a:	f04f 0e00 	mov.w	lr, #0
 802b97e:	4676      	mov	r6, lr
 802b980:	e6ac      	b.n	802b6dc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x7c>
 802b982:	f04f 0800 	mov.w	r8, #0
 802b986:	46c1      	mov	r9, r8
 802b988:	e7d5      	b.n	802b936 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2d6>
 802b98a:	460e      	mov	r6, r1
 802b98c:	468e      	mov	lr, r1
 802b98e:	e6a8      	b.n	802b6e2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802b990:	460a      	mov	r2, r1
 802b992:	460e      	mov	r6, r1
 802b994:	4689      	mov	r9, r1
 802b996:	468e      	mov	lr, r1
 802b998:	4688      	mov	r8, r1
 802b99a:	468c      	mov	ip, r1
 802b99c:	e6a1      	b.n	802b6e2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802b99e:	4b03      	ldr	r3, [pc, #12]	@ (802b9ac <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x34c>)
 802b9a0:	4a03      	ldr	r2, [pc, #12]	@ (802b9b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x350>)
 802b9a2:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802b9a6:	4803      	ldr	r0, [pc, #12]	@ (802b9b4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x354>)
 802b9a8:	f006 fda6 	bl	80324f8 <__assert_func>
 802b9ac:	080366d4 	.word	0x080366d4
 802b9b0:	08036d50 	.word	0x08036d50
 802b9b4:	0803685c 	.word	0x0803685c

0802b9b8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b9b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b9bc:	ed2d 8b08 	vpush	{d8-d11}
 802b9c0:	b0a9      	sub	sp, #164	@ 0xa4
 802b9c2:	9c3f      	ldr	r4, [sp, #252]	@ 0xfc
 802b9c4:	9022      	str	r0, [sp, #136]	@ 0x88
 802b9c6:	9115      	str	r1, [sp, #84]	@ 0x54
 802b9c8:	6860      	ldr	r0, [r4, #4]
 802b9ca:	9940      	ldr	r1, [sp, #256]	@ 0x100
 802b9cc:	9219      	str	r2, [sp, #100]	@ 0x64
 802b9ce:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 802b9d0:	e9dd ba3b 	ldrd	fp, sl, [sp, #236]	@ 0xec
 802b9d4:	fb00 1202 	mla	r2, r0, r2, r1
 802b9d8:	6820      	ldr	r0, [r4, #0]
 802b9da:	46d1      	mov	r9, sl
 802b9dc:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802b9e0:	46da      	mov	sl, fp
 802b9e2:	eeb0 aa40 	vmov.f32	s20, s0
 802b9e6:	eef0 9a60 	vmov.f32	s19, s1
 802b9ea:	eeb0 9a41 	vmov.f32	s18, s2
 802b9ee:	eef0 8a62 	vmov.f32	s17, s5
 802b9f2:	eeb0 8a43 	vmov.f32	s16, s6
 802b9f6:	eef0 ba44 	vmov.f32	s23, s8
 802b9fa:	eeb0 ba64 	vmov.f32	s22, s9
 802b9fe:	eef0 aa45 	vmov.f32	s21, s10
 802ba02:	4693      	mov	fp, r2
 802ba04:	9942      	ldr	r1, [sp, #264]	@ 0x108
 802ba06:	9d42      	ldr	r5, [sp, #264]	@ 0x108
 802ba08:	6849      	ldr	r1, [r1, #4]
 802ba0a:	f89d 410c 	ldrb.w	r4, [sp, #268]	@ 0x10c
 802ba0e:	3104      	adds	r1, #4
 802ba10:	682d      	ldr	r5, [r5, #0]
 802ba12:	910e      	str	r1, [sp, #56]	@ 0x38
 802ba14:	b2a1      	uxth	r1, r4
 802ba16:	9423      	str	r4, [sp, #140]	@ 0x8c
 802ba18:	9511      	str	r5, [sp, #68]	@ 0x44
 802ba1a:	9112      	str	r1, [sp, #72]	@ 0x48
 802ba1c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802ba1e:	2a00      	cmp	r2, #0
 802ba20:	dc02      	bgt.n	802ba28 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802ba22:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802ba24:	2a00      	cmp	r2, #0
 802ba26:	dd65      	ble.n	802baf4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802ba28:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802ba2a:	2b00      	cmp	r3, #0
 802ba2c:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802ba30:	b234      	sxth	r4, r6
 802ba32:	fa0f f78c 	sxth.w	r7, ip
 802ba36:	f340 8396 	ble.w	802c166 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ae>
 802ba3a:	1e65      	subs	r5, r4, #1
 802ba3c:	f107 3eff 	add.w	lr, r7, #4294967295
 802ba40:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802ba44:	e9dd c83d 	ldrd	ip, r8, [sp, #244]	@ 0xf4
 802ba48:	ea5f 422a 	movs.w	r2, sl, asr #16
 802ba4c:	ea4f 4129 	mov.w	r1, r9, asr #16
 802ba50:	d405      	bmi.n	802ba5e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802ba52:	42aa      	cmp	r2, r5
 802ba54:	da03      	bge.n	802ba5e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802ba56:	2900      	cmp	r1, #0
 802ba58:	db01      	blt.n	802ba5e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802ba5a:	4571      	cmp	r1, lr
 802ba5c:	db4f      	blt.n	802bafe <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 802ba5e:	1c50      	adds	r0, r2, #1
 802ba60:	d406      	bmi.n	802ba70 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802ba62:	42a0      	cmp	r0, r4
 802ba64:	dc04      	bgt.n	802ba70 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802ba66:	1c48      	adds	r0, r1, #1
 802ba68:	d402      	bmi.n	802ba70 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802ba6a:	42b8      	cmp	r0, r7
 802ba6c:	f340 834f 	ble.w	802c10e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x756>
 802ba70:	3b01      	subs	r3, #1
 802ba72:	44e2      	add	sl, ip
 802ba74:	44c1      	add	r9, r8
 802ba76:	f10b 0b02 	add.w	fp, fp, #2
 802ba7a:	d1e5      	bne.n	802ba48 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802ba7c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802ba7e:	2b00      	cmp	r3, #0
 802ba80:	dd38      	ble.n	802baf4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802ba82:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802ba86:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802ba8a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802ba8e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802ba92:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802ba96:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802ba9a:	ee69 7a27 	vmul.f32	s15, s18, s15
 802ba9e:	ee76 6a68 	vsub.f32	s13, s12, s17
 802baa2:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802baa6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802baaa:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802baae:	ee16 2a90 	vmov	r2, s13
 802bab2:	3b01      	subs	r3, #1
 802bab4:	9315      	str	r3, [sp, #84]	@ 0x54
 802bab6:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802bab8:	fb92 f3f3 	sdiv	r3, r2, r3
 802babc:	ee17 2a10 	vmov	r2, s14
 802bac0:	eeb0 7a48 	vmov.f32	s14, s16
 802bac4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802bac8:	ee17 9a10 	vmov	r9, s14
 802bacc:	eeb0 7a68 	vmov.f32	s14, s17
 802bad0:	933d      	str	r3, [sp, #244]	@ 0xf4
 802bad2:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802bad4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802bad8:	fb92 f3f3 	sdiv	r3, r2, r3
 802badc:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802bade:	933e      	str	r3, [sp, #248]	@ 0xf8
 802bae0:	ee17 aa10 	vmov	sl, s14
 802bae4:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802bae6:	eeb0 8a67 	vmov.f32	s16, s15
 802baea:	eef0 8a46 	vmov.f32	s17, s12
 802baee:	bf08      	it	eq
 802baf0:	4613      	moveq	r3, r2
 802baf2:	e793      	b.n	802ba1c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 802baf4:	b029      	add	sp, #164	@ 0xa4
 802baf6:	ecbd 8b08 	vpop	{d8-d11}
 802bafa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bafe:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802bb02:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802bb06:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 802bb08:	1e59      	subs	r1, r3, #1
 802bb0a:	fb00 a201 	mla	r2, r0, r1, sl
 802bb0e:	1412      	asrs	r2, r2, #16
 802bb10:	910d      	str	r1, [sp, #52]	@ 0x34
 802bb12:	f100 8161 	bmi.w	802bdd8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bb16:	42aa      	cmp	r2, r5
 802bb18:	f280 815e 	bge.w	802bdd8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bb1c:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802bb1e:	fb02 9201 	mla	r2, r2, r1, r9
 802bb22:	1412      	asrs	r2, r2, #16
 802bb24:	f100 8158 	bmi.w	802bdd8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bb28:	3f01      	subs	r7, #1
 802bb2a:	42ba      	cmp	r2, r7
 802bb2c:	f280 8154 	bge.w	802bdd8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802bb30:	2b00      	cmp	r3, #0
 802bb32:	dda3      	ble.n	802ba7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802bb34:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802bb38:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802bb3c:	46d0      	mov	r8, sl
 802bb3e:	4621      	mov	r1, r4
 802bb40:	e129      	b.n	802bd96 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 802bb42:	f893 c001 	ldrb.w	ip, [r3, #1]
 802bb46:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 802bb4a:	9513      	str	r5, [sp, #76]	@ 0x4c
 802bb4c:	0e2d      	lsrs	r5, r5, #24
 802bb4e:	950a      	str	r5, [sp, #40]	@ 0x28
 802bb50:	b162      	cbz	r2, 802bb6c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802bb52:	185d      	adds	r5, r3, r1
 802bb54:	786d      	ldrb	r5, [r5, #1]
 802bb56:	5c5b      	ldrb	r3, [r3, r1]
 802bb58:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802bb5c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802bb60:	9116      	str	r1, [sp, #88]	@ 0x58
 802bb62:	9314      	str	r3, [sp, #80]	@ 0x50
 802bb64:	0e09      	lsrs	r1, r1, #24
 802bb66:	0e1b      	lsrs	r3, r3, #24
 802bb68:	910c      	str	r1, [sp, #48]	@ 0x30
 802bb6a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802bb6c:	b2a4      	uxth	r4, r4
 802bb6e:	b292      	uxth	r2, r2
 802bb70:	fb04 f502 	mul.w	r5, r4, r2
 802bb74:	0124      	lsls	r4, r4, #4
 802bb76:	1b66      	subs	r6, r4, r5
 802bb78:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802bb7a:	b2b6      	uxth	r6, r6
 802bb7c:	fb06 f103 	mul.w	r1, r6, r3
 802bb80:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802bb84:	b292      	uxth	r2, r2
 802bb86:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802bb8a:	1a9b      	subs	r3, r3, r2
 802bb8c:	b29b      	uxth	r3, r3
 802bb8e:	fb03 1100 	mla	r1, r3, r0, r1
 802bb92:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802bb94:	fb02 1104 	mla	r1, r2, r4, r1
 802bb98:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802bb9a:	fb05 1104 	mla	r1, r5, r4, r1
 802bb9e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802bba2:	2900      	cmp	r1, #0
 802bba4:	f000 80ea 	beq.w	802bd7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c4>
 802bba8:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802bbac:	28ff      	cmp	r0, #255	@ 0xff
 802bbae:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802bbb2:	940f      	str	r4, [sp, #60]	@ 0x3c
 802bbb4:	970d      	str	r7, [sp, #52]	@ 0x34
 802bbb6:	d01c      	beq.n	802bbf2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802bbb8:	fb04 f400 	mul.w	r4, r4, r0
 802bbbc:	4627      	mov	r7, r4
 802bbbe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802bbc0:	fb04 fe00 	mul.w	lr, r4, r0
 802bbc4:	0a3c      	lsrs	r4, r7, #8
 802bbc6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bbca:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802bbce:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802bbd2:	4427      	add	r7, r4
 802bbd4:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 802bbd8:	0a3f      	lsrs	r7, r7, #8
 802bbda:	0a00      	lsrs	r0, r0, #8
 802bbdc:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802bbe0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802bbe4:	4307      	orrs	r7, r0
 802bbe6:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 802bbea:	900f      	str	r0, [sp, #60]	@ 0x3c
 802bbec:	f407 407f 	and.w	r0, r7, #65280	@ 0xff00
 802bbf0:	900d      	str	r0, [sp, #52]	@ 0x34
 802bbf2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802bbf4:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 802bbf8:	f400 4e7f 	and.w	lr, r0, #65280	@ 0xff00
 802bbfc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802bbfe:	28ff      	cmp	r0, #255	@ 0xff
 802bc00:	d01c      	beq.n	802bc3c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 802bc02:	fb0c fc00 	mul.w	ip, ip, r0
 802bc06:	fb0e fe00 	mul.w	lr, lr, r0
 802bc0a:	ea4f 241c 	mov.w	r4, ip, lsr #8
 802bc0e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bc12:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802bc16:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802bc1a:	44a4      	add	ip, r4
 802bc1c:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802bc20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bc24:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802bc28:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802bc2c:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802bc30:	ea4c 0e0e 	orr.w	lr, ip, lr
 802bc34:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 802bc38:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802bc3c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802bc3e:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 802bc42:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802bc46:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802bc48:	28ff      	cmp	r0, #255	@ 0xff
 802bc4a:	d01a      	beq.n	802bc82 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 802bc4c:	fb07 f700 	mul.w	r7, r7, r0
 802bc50:	fb0a fa00 	mul.w	sl, sl, r0
 802bc54:	0a3c      	lsrs	r4, r7, #8
 802bc56:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bc5a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802bc5e:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802bc62:	4427      	add	r7, r4
 802bc64:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802bc68:	0a3f      	lsrs	r7, r7, #8
 802bc6a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802bc6e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802bc72:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802bc76:	ea47 0a0a 	orr.w	sl, r7, sl
 802bc7a:	f00a 17ff 	and.w	r7, sl, #16711935	@ 0xff00ff
 802bc7e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802bc82:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802bc84:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802bc88:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802bc8c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802bc8e:	2cff      	cmp	r4, #255	@ 0xff
 802bc90:	d01d      	beq.n	802bcce <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802bc92:	fb00 f004 	mul.w	r0, r0, r4
 802bc96:	fb0b fb04 	mul.w	fp, fp, r4
 802bc9a:	0a04      	lsrs	r4, r0, #8
 802bc9c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802bca0:	9418      	str	r4, [sp, #96]	@ 0x60
 802bca2:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802bca6:	9417      	str	r4, [sp, #92]	@ 0x5c
 802bca8:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802bcaa:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802bcae:	4420      	add	r0, r4
 802bcb0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 802bcb2:	0a00      	lsrs	r0, r0, #8
 802bcb4:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802bcb8:	0a24      	lsrs	r4, r4, #8
 802bcba:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802bcbe:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802bcc2:	ea40 0b0b 	orr.w	fp, r0, fp
 802bcc6:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802bcca:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802bcce:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802bcd0:	fb0c fc06 	mul.w	ip, ip, r6
 802bcd4:	fb01 f104 	mul.w	r1, r1, r4
 802bcd8:	1c4c      	adds	r4, r1, #1
 802bcda:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802bcde:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802bce2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802bce4:	fb0e f606 	mul.w	r6, lr, r6
 802bce8:	fb04 cc03 	mla	ip, r4, r3, ip
 802bcec:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802bcee:	fb07 cc02 	mla	ip, r7, r2, ip
 802bcf2:	fb04 6603 	mla	r6, r4, r3, r6
 802bcf6:	fb0a 6602 	mla	r6, sl, r2, r6
 802bcfa:	fb00 cc05 	mla	ip, r0, r5, ip
 802bcfe:	fb0b 6605 	mla	r6, fp, r5, r6
 802bd02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bd06:	0a36      	lsrs	r6, r6, #8
 802bd08:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802bd0c:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 802bd10:	ea4c 0303 	orr.w	r3, ip, r3
 802bd14:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802bd16:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802bd18:	0c1f      	lsrs	r7, r3, #16
 802bd1a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802bd1e:	b2db      	uxtb	r3, r3
 802bd20:	8805      	ldrh	r5, [r0, #0]
 802bd22:	fb13 f302 	smulbb	r3, r3, r2
 802bd26:	fb17 f702 	smulbb	r7, r7, r2
 802bd2a:	fb16 f602 	smulbb	r6, r6, r2
 802bd2e:	1228      	asrs	r0, r5, #8
 802bd30:	10ea      	asrs	r2, r5, #3
 802bd32:	00ed      	lsls	r5, r5, #3
 802bd34:	b2c9      	uxtb	r1, r1
 802bd36:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802bd3a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802bd3e:	b2ed      	uxtb	r5, r5
 802bd40:	fb00 7001 	mla	r0, r0, r1, r7
 802bd44:	fb02 6201 	mla	r2, r2, r1, r6
 802bd48:	fb05 3101 	mla	r1, r5, r1, r3
 802bd4c:	b280      	uxth	r0, r0
 802bd4e:	b292      	uxth	r2, r2
 802bd50:	b289      	uxth	r1, r1
 802bd52:	1c43      	adds	r3, r0, #1
 802bd54:	1c4c      	adds	r4, r1, #1
 802bd56:	f102 0c01 	add.w	ip, r2, #1
 802bd5a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802bd5e:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 802bd62:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802bd66:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802bd6a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802bd6e:	0952      	lsrs	r2, r2, #5
 802bd70:	4308      	orrs	r0, r1
 802bd72:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802bd76:	4302      	orrs	r2, r0
 802bd78:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802bd7a:	8002      	strh	r2, [r0, #0]
 802bd7c:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 802bd7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802bd80:	4490      	add	r8, r2
 802bd82:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802bd84:	3302      	adds	r3, #2
 802bd86:	4491      	add	r9, r2
 802bd88:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802bd8a:	9309      	str	r3, [sp, #36]	@ 0x24
 802bd8c:	4293      	cmp	r3, r2
 802bd8e:	d021      	beq.n	802bdd4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 802bd90:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802bd92:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802bd96:	ea4f 4228 	mov.w	r2, r8, asr #16
 802bd9a:	ea4f 4329 	mov.w	r3, r9, asr #16
 802bd9e:	fb01 2303 	mla	r3, r1, r3, r2
 802bda2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802bda4:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802bda6:	5cc2      	ldrb	r2, [r0, r3]
 802bda8:	f3c8 3403 	ubfx	r4, r8, #12, #4
 802bdac:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802bdb0:	4403      	add	r3, r0
 802bdb2:	f3c9 3203 	ubfx	r2, r9, #12, #4
 802bdb6:	0e38      	lsrs	r0, r7, #24
 802bdb8:	2c00      	cmp	r4, #0
 802bdba:	f47f aec2 	bne.w	802bb42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802bdbe:	2a00      	cmp	r2, #0
 802bdc0:	f43f aed4 	beq.w	802bb6c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802bdc4:	5c5b      	ldrb	r3, [r3, r1]
 802bdc6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802bdc8:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802bdcc:	9314      	str	r3, [sp, #80]	@ 0x50
 802bdce:	0e1b      	lsrs	r3, r3, #24
 802bdd0:	930b      	str	r3, [sp, #44]	@ 0x2c
 802bdd2:	e6cb      	b.n	802bb6c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802bdd4:	4693      	mov	fp, r2
 802bdd6:	e651      	b.n	802ba7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802bdd8:	2b00      	cmp	r3, #0
 802bdda:	f77f ae4f 	ble.w	802ba7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802bdde:	f8dd 8034 	ldr.w	r8, [sp, #52]	@ 0x34
 802bde2:	ea4f 422a 	mov.w	r2, sl, asr #16
 802bde6:	ea4f 4129 	mov.w	r1, r9, asr #16
 802bdea:	2a00      	cmp	r2, #0
 802bdec:	465f      	mov	r7, fp
 802bdee:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802bdf2:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 802bdf4:	e9dd 5b3d 	ldrd	r5, fp, [sp, #244]	@ 0xf4
 802bdf8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802bdfc:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 802be00:	f2c0 815c 	blt.w	802c0bc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802be04:	1e73      	subs	r3, r6, #1
 802be06:	429a      	cmp	r2, r3
 802be08:	f280 8158 	bge.w	802c0bc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802be0c:	2900      	cmp	r1, #0
 802be0e:	f2c0 8155 	blt.w	802c0bc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802be12:	f10c 33ff 	add.w	r3, ip, #4294967295
 802be16:	4299      	cmp	r1, r3
 802be18:	f280 8150 	bge.w	802c0bc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802be1c:	b233      	sxth	r3, r6
 802be1e:	fb01 2203 	mla	r2, r1, r3, r2
 802be22:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802be24:	930f      	str	r3, [sp, #60]	@ 0x3c
 802be26:	5c8b      	ldrb	r3, [r1, r2]
 802be28:	440a      	add	r2, r1
 802be2a:	4616      	mov	r6, r2
 802be2c:	9210      	str	r2, [sp, #64]	@ 0x40
 802be2e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802be30:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 802be34:	0e0b      	lsrs	r3, r1, #24
 802be36:	2800      	cmp	r0, #0
 802be38:	f000 816f 	beq.w	802c11a <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x762>
 802be3c:	f896 c001 	ldrb.w	ip, [r6, #1]
 802be40:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802be44:	9224      	str	r2, [sp, #144]	@ 0x90
 802be46:	0e12      	lsrs	r2, r2, #24
 802be48:	921a      	str	r2, [sp, #104]	@ 0x68
 802be4a:	f1be 0f00 	cmp.w	lr, #0
 802be4e:	f040 8172 	bne.w	802c136 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 802be52:	b280      	uxth	r0, r0
 802be54:	fa1f fc8e 	uxth.w	ip, lr
 802be58:	fb00 f20c 	mul.w	r2, r0, ip
 802be5c:	0106      	lsls	r6, r0, #4
 802be5e:	1ab0      	subs	r0, r6, r2
 802be60:	b280      	uxth	r0, r0
 802be62:	4686      	mov	lr, r0
 802be64:	900f      	str	r0, [sp, #60]	@ 0x3c
 802be66:	981a      	ldr	r0, [sp, #104]	@ 0x68
 802be68:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 802be6c:	fb0e f000 	mul.w	r0, lr, r0
 802be70:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802be74:	fa1f fe8c 	uxth.w	lr, ip
 802be78:	eba6 060e 	sub.w	r6, r6, lr
 802be7c:	b2b6      	uxth	r6, r6
 802be7e:	fb06 0003 	mla	r0, r6, r3, r0
 802be82:	9610      	str	r6, [sp, #64]	@ 0x40
 802be84:	9e1b      	ldr	r6, [sp, #108]	@ 0x6c
 802be86:	fb0e 0006 	mla	r0, lr, r6, r0
 802be8a:	9e1c      	ldr	r6, [sp, #112]	@ 0x70
 802be8c:	fb02 0006 	mla	r0, r2, r6, r0
 802be90:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802be94:	9017      	str	r0, [sp, #92]	@ 0x5c
 802be96:	2800      	cmp	r0, #0
 802be98:	f000 80fa 	beq.w	802c090 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802be9c:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 802bea0:	2bff      	cmp	r3, #255	@ 0xff
 802bea2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802bea6:	9018      	str	r0, [sp, #96]	@ 0x60
 802bea8:	911d      	str	r1, [sp, #116]	@ 0x74
 802beaa:	d01b      	beq.n	802bee4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52c>
 802beac:	fb01 f103 	mul.w	r1, r1, r3
 802beb0:	fb00 f003 	mul.w	r0, r0, r3
 802beb4:	460b      	mov	r3, r1
 802beb6:	0a01      	lsrs	r1, r0, #8
 802beb8:	f100 1601 	add.w	r6, r0, #65537	@ 0x10001
 802bebc:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bec0:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 802bec4:	4431      	add	r1, r6
 802bec6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802beca:	0a09      	lsrs	r1, r1, #8
 802becc:	0a1b      	lsrs	r3, r3, #8
 802bece:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bed2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802bed6:	430b      	orrs	r3, r1
 802bed8:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802bedc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802bee0:	9118      	str	r1, [sp, #96]	@ 0x60
 802bee2:	931d      	str	r3, [sp, #116]	@ 0x74
 802bee4:	9924      	ldr	r1, [sp, #144]	@ 0x90
 802bee6:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 802bee8:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802beec:	2eff      	cmp	r6, #255	@ 0xff
 802beee:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802bef2:	931e      	str	r3, [sp, #120]	@ 0x78
 802bef4:	911f      	str	r1, [sp, #124]	@ 0x7c
 802bef6:	d01b      	beq.n	802bf30 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x578>
 802bef8:	fb01 f106 	mul.w	r1, r1, r6
 802befc:	fb03 f306 	mul.w	r3, r3, r6
 802bf00:	460e      	mov	r6, r1
 802bf02:	0a19      	lsrs	r1, r3, #8
 802bf04:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802bf08:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bf0c:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 802bf10:	4401      	add	r1, r0
 802bf12:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802bf16:	0a09      	lsrs	r1, r1, #8
 802bf18:	0a1b      	lsrs	r3, r3, #8
 802bf1a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802bf1e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bf22:	4319      	orrs	r1, r3
 802bf24:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802bf28:	931e      	str	r3, [sp, #120]	@ 0x78
 802bf2a:	f401 437f 	and.w	r3, r1, #65280	@ 0xff00
 802bf2e:	931f      	str	r3, [sp, #124]	@ 0x7c
 802bf30:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802bf32:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802bf36:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 802bf3a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802bf3c:	9120      	str	r1, [sp, #128]	@ 0x80
 802bf3e:	2bff      	cmp	r3, #255	@ 0xff
 802bf40:	d01c      	beq.n	802bf7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 802bf42:	fb01 f103 	mul.w	r1, r1, r3
 802bf46:	4608      	mov	r0, r1
 802bf48:	fb0c fc03 	mul.w	ip, ip, r3
 802bf4c:	0a09      	lsrs	r1, r1, #8
 802bf4e:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 802bf52:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bf56:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802bf5a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802bf5e:	4408      	add	r0, r1
 802bf60:	0a00      	lsrs	r0, r0, #8
 802bf62:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bf66:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802bf6a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802bf6e:	ea40 0c0c 	orr.w	ip, r0, ip
 802bf72:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 802bf76:	9320      	str	r3, [sp, #128]	@ 0x80
 802bf78:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802bf7c:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 802bf7e:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802bf82:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802bf86:	991c      	ldr	r1, [sp, #112]	@ 0x70
 802bf88:	9321      	str	r3, [sp, #132]	@ 0x84
 802bf8a:	29ff      	cmp	r1, #255	@ 0xff
 802bf8c:	d019      	beq.n	802bfc2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60a>
 802bf8e:	fb03 f301 	mul.w	r3, r3, r1
 802bf92:	fb06 f601 	mul.w	r6, r6, r1
 802bf96:	0a19      	lsrs	r1, r3, #8
 802bf98:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bf9c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802bfa0:	f506 7080 	add.w	r0, r6, #256	@ 0x100
 802bfa4:	4419      	add	r1, r3
 802bfa6:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 802bfaa:	0a09      	lsrs	r1, r1, #8
 802bfac:	0a36      	lsrs	r6, r6, #8
 802bfae:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802bfb2:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802bfb6:	430e      	orrs	r6, r1
 802bfb8:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 802bfbc:	9321      	str	r3, [sp, #132]	@ 0x84
 802bfbe:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802bfc2:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 802bfc4:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802bfc6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802bfc8:	fb00 f001 	mul.w	r0, r0, r1
 802bfcc:	4601      	mov	r1, r0
 802bfce:	3001      	adds	r0, #1
 802bfd0:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802bfd4:	ea6f 2011 	mvn.w	r0, r1, lsr #8
 802bfd8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802bfda:	9025      	str	r0, [sp, #148]	@ 0x94
 802bfdc:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802bfde:	fb00 f001 	mul.w	r0, r0, r1
 802bfe2:	900f      	str	r0, [sp, #60]	@ 0x3c
 802bfe4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802bfe6:	fb00 f001 	mul.w	r0, r0, r1
 802bfea:	9017      	str	r0, [sp, #92]	@ 0x5c
 802bfec:	9818      	ldr	r0, [sp, #96]	@ 0x60
 802bfee:	4601      	mov	r1, r0
 802bff0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802bff2:	fb01 0003 	mla	r0, r1, r3, r0
 802bff6:	900f      	str	r0, [sp, #60]	@ 0x3c
 802bff8:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802bffa:	4601      	mov	r1, r0
 802bffc:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 802bffe:	fb01 0103 	mla	r1, r1, r3, r0
 802c002:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802c004:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802c006:	fb0c 110e 	mla	r1, ip, lr, r1
 802c00a:	fb03 000e 	mla	r0, r3, lr, r0
 802c00e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802c010:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 802c014:	fb03 0002 	mla	r0, r3, r2, r0
 802c018:	fb06 1302 	mla	r3, r6, r2, r1
 802c01c:	0a02      	lsrs	r2, r0, #8
 802c01e:	0a1b      	lsrs	r3, r3, #8
 802c020:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c024:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c028:	4313      	orrs	r3, r2
 802c02a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802c02c:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 802c030:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802c034:	b2db      	uxtb	r3, r3
 802c036:	8838      	ldrh	r0, [r7, #0]
 802c038:	fb16 f602 	smulbb	r6, r6, r2
 802c03c:	fb1c fc02 	smulbb	ip, ip, r2
 802c040:	fb13 f302 	smulbb	r3, r3, r2
 802c044:	1201      	asrs	r1, r0, #8
 802c046:	10c2      	asrs	r2, r0, #3
 802c048:	00c0      	lsls	r0, r0, #3
 802c04a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802c04e:	b2c0      	uxtb	r0, r0
 802c050:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802c054:	fb01 cc0e 	mla	ip, r1, lr, ip
 802c058:	fb02 620e 	mla	r2, r2, lr, r6
 802c05c:	fb00 330e 	mla	r3, r0, lr, r3
 802c060:	b296      	uxth	r6, r2
 802c062:	b29b      	uxth	r3, r3
 802c064:	fa1f fc8c 	uxth.w	ip, ip
 802c068:	1c58      	adds	r0, r3, #1
 802c06a:	f10c 0201 	add.w	r2, ip, #1
 802c06e:	1c71      	adds	r1, r6, #1
 802c070:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 802c074:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802c078:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802c07c:	f402 4378 	and.w	r3, r2, #63488	@ 0xf800
 802c080:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802c084:	094a      	lsrs	r2, r1, #5
 802c086:	4303      	orrs	r3, r0
 802c088:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802c08c:	4313      	orrs	r3, r2
 802c08e:	803b      	strh	r3, [r7, #0]
 802c090:	f1b8 0f00 	cmp.w	r8, #0
 802c094:	f107 0702 	add.w	r7, r7, #2
 802c098:	44aa      	add	sl, r5
 802c09a:	44d9      	add	r9, fp
 802c09c:	dd2e      	ble.n	802c0fc <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 802c09e:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802c0a2:	ea4f 422a 	mov.w	r2, sl, asr #16
 802c0a6:	2a00      	cmp	r2, #0
 802c0a8:	f108 38ff 	add.w	r8, r8, #4294967295
 802c0ac:	ea4f 4129 	mov.w	r1, r9, asr #16
 802c0b0:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802c0b4:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 802c0b8:	f6bf aea4 	bge.w	802be04 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 802c0bc:	1c53      	adds	r3, r2, #1
 802c0be:	d4e7      	bmi.n	802c090 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c0c0:	42b3      	cmp	r3, r6
 802c0c2:	dce5      	bgt.n	802c090 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c0c4:	1c4b      	adds	r3, r1, #1
 802c0c6:	d4e3      	bmi.n	802c090 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c0c8:	4563      	cmp	r3, ip
 802c0ca:	dce1      	bgt.n	802c090 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d8>
 802c0cc:	fa0f f38c 	sxth.w	r3, ip
 802c0d0:	b236      	sxth	r6, r6
 802c0d2:	e9cd 6300 	strd	r6, r3, [sp]
 802c0d6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802c0d8:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802c0dc:	e9cd e305 	strd	lr, r3, [sp, #20]
 802c0e0:	9202      	str	r2, [sp, #8]
 802c0e2:	4639      	mov	r1, r7
 802c0e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802c0e6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802c0e8:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802c0ea:	f7ff fab9 	bl	802b660 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802c0ee:	f1b8 0f00 	cmp.w	r8, #0
 802c0f2:	f107 0702 	add.w	r7, r7, #2
 802c0f6:	44aa      	add	sl, r5
 802c0f8:	44d9      	add	r9, fp
 802c0fa:	dcd0      	bgt.n	802c09e <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e6>
 802c0fc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802c0fe:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 802c102:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802c106:	3301      	adds	r3, #1
 802c108:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802c10c:	e4b6      	b.n	802ba7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802c10e:	3b01      	subs	r3, #1
 802c110:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802c114:	930d      	str	r3, [sp, #52]	@ 0x34
 802c116:	4698      	mov	r8, r3
 802c118:	e667      	b.n	802bdea <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802c11a:	f1be 0f00 	cmp.w	lr, #0
 802c11e:	f43f ae98 	beq.w	802be52 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c122:	4632      	mov	r2, r6
 802c124:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 802c126:	5d92      	ldrb	r2, [r2, r6]
 802c128:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802c12a:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 802c12e:	9226      	str	r2, [sp, #152]	@ 0x98
 802c130:	0e12      	lsrs	r2, r2, #24
 802c132:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c134:	e68d      	b.n	802be52 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c136:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802c138:	eb06 0c02 	add.w	ip, r6, r2
 802c13c:	4632      	mov	r2, r6
 802c13e:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 802c140:	f89c c001 	ldrb.w	ip, [ip, #1]
 802c144:	5d92      	ldrb	r2, [r2, r6]
 802c146:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802c148:	9210      	str	r2, [sp, #64]	@ 0x40
 802c14a:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 802c14e:	920f      	str	r2, [sp, #60]	@ 0x3c
 802c150:	9227      	str	r2, [sp, #156]	@ 0x9c
 802c152:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802c154:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 802c158:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802c15a:	9626      	str	r6, [sp, #152]	@ 0x98
 802c15c:	0e12      	lsrs	r2, r2, #24
 802c15e:	921c      	str	r2, [sp, #112]	@ 0x70
 802c160:	0e32      	lsrs	r2, r6, #24
 802c162:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c164:	e675      	b.n	802be52 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802c166:	f43f ac89 	beq.w	802ba7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 802c16a:	1e65      	subs	r5, r4, #1
 802c16c:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 802c170:	e4c9      	b.n	802bb06 <_ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 802c172:	bf00      	nop

0802c174 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802c174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c178:	b089      	sub	sp, #36	@ 0x24
 802c17a:	f9bd 8048 	ldrsh.w	r8, [sp, #72]	@ 0x48
 802c17e:	880f      	ldrh	r7, [r1, #0]
 802c180:	e9dd 5014 	ldrd	r5, r0, [sp, #80]	@ 0x50
 802c184:	fb00 5408 	mla	r4, r0, r8, r5
 802c188:	9106      	str	r1, [sp, #24]
 802c18a:	10f9      	asrs	r1, r7, #3
 802c18c:	123e      	asrs	r6, r7, #8
 802c18e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802c192:	00ff      	lsls	r7, r7, #3
 802c194:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 802c198:	9104      	str	r1, [sp, #16]
 802c19a:	2800      	cmp	r0, #0
 802c19c:	b2f9      	uxtb	r1, r7
 802c19e:	9105      	str	r1, [sp, #20]
 802c1a0:	9603      	str	r6, [sp, #12]
 802c1a2:	eb02 0704 	add.w	r7, r2, r4
 802c1a6:	f100 0c01 	add.w	ip, r0, #1
 802c1aa:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	@ 0x4c
 802c1ae:	f89d e058 	ldrb.w	lr, [sp, #88]	@ 0x58
 802c1b2:	f89d 105c 	ldrb.w	r1, [sp, #92]	@ 0x5c
 802c1b6:	db02      	blt.n	802c1be <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x4a>
 802c1b8:	4582      	cmp	sl, r0
 802c1ba:	f300 8113 	bgt.w	802c3e4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802c1be:	2600      	movs	r6, #0
 802c1c0:	46b1      	mov	r9, r6
 802c1c2:	4630      	mov	r0, r6
 802c1c4:	4634      	mov	r4, r6
 802c1c6:	f1bc 0f00 	cmp.w	ip, #0
 802c1ca:	db02      	blt.n	802c1d2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5e>
 802c1cc:	45e2      	cmp	sl, ip
 802c1ce:	f300 8123 	bgt.w	802c418 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>
 802c1d2:	2700      	movs	r7, #0
 802c1d4:	46bc      	mov	ip, r7
 802c1d6:	463d      	mov	r5, r7
 802c1d8:	9702      	str	r7, [sp, #8]
 802c1da:	f1be 0f0f 	cmp.w	lr, #15
 802c1de:	f200 8160 	bhi.w	802c4a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c1e2:	290f      	cmp	r1, #15
 802c1e4:	f200 815d 	bhi.w	802c4a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c1e8:	b289      	uxth	r1, r1
 802c1ea:	fa1f f38e 	uxth.w	r3, lr
 802c1ee:	fb01 f803 	mul.w	r8, r1, r3
 802c1f2:	f005 12ff 	and.w	r2, r5, #16711935	@ 0xff00ff
 802c1f6:	9200      	str	r2, [sp, #0]
 802c1f8:	9a02      	ldr	r2, [sp, #8]
 802c1fa:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 802c1fe:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c202:	b289      	uxth	r1, r1
 802c204:	9201      	str	r2, [sp, #4]
 802c206:	fb01 fa0c 	mul.w	sl, r1, ip
 802c20a:	9a02      	ldr	r2, [sp, #8]
 802c20c:	fb08 fb07 	mul.w	fp, r8, r7
 802c210:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802c214:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c218:	9202      	str	r2, [sp, #8]
 802c21a:	011b      	lsls	r3, r3, #4
 802c21c:	eba3 0e08 	sub.w	lr, r3, r8
 802c220:	fa1f fe8e 	uxth.w	lr, lr
 802c224:	fb0e f206 	mul.w	r2, lr, r6
 802c228:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802c22c:	1a5b      	subs	r3, r3, r1
 802c22e:	b29b      	uxth	r3, r3
 802c230:	fb03 2209 	mla	r2, r3, r9, r2
 802c234:	4452      	add	r2, sl
 802c236:	445a      	add	r2, fp
 802c238:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802c23c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 802c240:	9207      	str	r2, [sp, #28]
 802c242:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802c246:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c24a:	d019      	beq.n	802c280 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x10c>
 802c24c:	fb02 f209 	mul.w	r2, r2, r9
 802c250:	fb04 f409 	mul.w	r4, r4, r9
 802c254:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 802c258:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c25c:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802c260:	f504 7a80 	add.w	sl, r4, #256	@ 0x100
 802c264:	445a      	add	r2, fp
 802c266:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 802c26a:	0a12      	lsrs	r2, r2, #8
 802c26c:	0a24      	lsrs	r4, r4, #8
 802c26e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c272:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c276:	4314      	orrs	r4, r2
 802c278:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802c27c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802c280:	2eff      	cmp	r6, #255	@ 0xff
 802c282:	f000 1aff 	and.w	sl, r0, #16711935	@ 0xff00ff
 802c286:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c28a:	d01b      	beq.n	802c2c4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 802c28c:	fb0a fa06 	mul.w	sl, sl, r6
 802c290:	fb00 f006 	mul.w	r0, r0, r6
 802c294:	ea4f 2b1a 	mov.w	fp, sl, lsr #8
 802c298:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c29c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802c2a0:	f500 7980 	add.w	r9, r0, #256	@ 0x100
 802c2a4:	44da      	add	sl, fp
 802c2a6:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 802c2aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c2ae:	0a00      	lsrs	r0, r0, #8
 802c2b0:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802c2b4:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c2b8:	ea4a 0000 	orr.w	r0, sl, r0
 802c2bc:	f000 1aff 	and.w	sl, r0, #16711935	@ 0xff00ff
 802c2c0:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c2c4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802c2c8:	d020      	beq.n	802c30c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x198>
 802c2ca:	9e01      	ldr	r6, [sp, #4]
 802c2cc:	fb06 fb0c 	mul.w	fp, r6, ip
 802c2d0:	9e02      	ldr	r6, [sp, #8]
 802c2d2:	ea4f 291b 	mov.w	r9, fp, lsr #8
 802c2d6:	fb06 fc0c 	mul.w	ip, r6, ip
 802c2da:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802c2de:	f50c 7680 	add.w	r6, ip, #256	@ 0x100
 802c2e2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802c2e6:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 802c2ea:	44cb      	add	fp, r9
 802c2ec:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802c2f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c2f4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c2f8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c2fc:	ea4b 0c0c 	orr.w	ip, fp, ip
 802c300:	f00c 16ff 	and.w	r6, ip, #16711935	@ 0xff00ff
 802c304:	9601      	str	r6, [sp, #4]
 802c306:	f40c 467f 	and.w	r6, ip, #65280	@ 0xff00
 802c30a:	9602      	str	r6, [sp, #8]
 802c30c:	2fff      	cmp	r7, #255	@ 0xff
 802c30e:	d01d      	beq.n	802c34c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1d8>
 802c310:	9e00      	ldr	r6, [sp, #0]
 802c312:	fb05 f507 	mul.w	r5, r5, r7
 802c316:	fb06 fb07 	mul.w	fp, r6, r7
 802c31a:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 802c31e:	f505 7680 	add.w	r6, r5, #256	@ 0x100
 802c322:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802c326:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802c32a:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 802c32e:	44e3      	add	fp, ip
 802c330:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802c334:	0a2d      	lsrs	r5, r5, #8
 802c336:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802c33a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c33e:	ea4b 0505 	orr.w	r5, fp, r5
 802c342:	f005 16ff 	and.w	r6, r5, #16711935	@ 0xff00ff
 802c346:	9600      	str	r6, [sp, #0]
 802c348:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802c34c:	9e07      	ldr	r6, [sp, #28]
 802c34e:	fb0a fa0e 	mul.w	sl, sl, lr
 802c352:	43f7      	mvns	r7, r6
 802c354:	fb00 f00e 	mul.w	r0, r0, lr
 802c358:	fb02 aa03 	mla	sl, r2, r3, sl
 802c35c:	fb04 0003 	mla	r0, r4, r3, r0
 802c360:	9b01      	ldr	r3, [sp, #4]
 802c362:	b2ff      	uxtb	r7, r7
 802c364:	fb03 aa01 	mla	sl, r3, r1, sl
 802c368:	9b02      	ldr	r3, [sp, #8]
 802c36a:	fb03 0c01 	mla	ip, r3, r1, r0
 802c36e:	9b00      	ldr	r3, [sp, #0]
 802c370:	9803      	ldr	r0, [sp, #12]
 802c372:	fb03 aa08 	mla	sl, r3, r8, sl
 802c376:	9b05      	ldr	r3, [sp, #20]
 802c378:	9904      	ldr	r1, [sp, #16]
 802c37a:	fb03 f307 	mul.w	r3, r3, r7
 802c37e:	fb00 f007 	mul.w	r0, r0, r7
 802c382:	fb01 f107 	mul.w	r1, r1, r7
 802c386:	461f      	mov	r7, r3
 802c388:	fb05 c808 	mla	r8, r5, r8, ip
 802c38c:	ea4f 251a 	mov.w	r5, sl, lsr #8
 802c390:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802c394:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802c398:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802c39c:	ea45 0508 	orr.w	r5, r5, r8
 802c3a0:	f100 0c01 	add.w	ip, r0, #1
 802c3a4:	1c4e      	adds	r6, r1, #1
 802c3a6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802c3aa:	0c2c      	lsrs	r4, r5, #16
 802c3ac:	f3c5 2207 	ubfx	r2, r5, #8, #8
 802c3b0:	1c78      	adds	r0, r7, #1
 802c3b2:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 802c3b6:	4b3e      	ldr	r3, [pc, #248]	@ (802c4b0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x33c>)
 802c3b8:	eb04 241c 	add.w	r4, r4, ip, lsr #8
 802c3bc:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 802c3c0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802c3c4:	b2ed      	uxtb	r5, r5
 802c3c6:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 802c3ca:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 802c3ce:	00d2      	lsls	r2, r2, #3
 802c3d0:	ea43 05d5 	orr.w	r5, r3, r5, lsr #3
 802c3d4:	f402 63fc 	and.w	r3, r2, #2016	@ 0x7e0
 802c3d8:	431d      	orrs	r5, r3
 802c3da:	9b06      	ldr	r3, [sp, #24]
 802c3dc:	801d      	strh	r5, [r3, #0]
 802c3de:	b009      	add	sp, #36	@ 0x24
 802c3e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c3e4:	2d00      	cmp	r5, #0
 802c3e6:	db01      	blt.n	802c3ec <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x278>
 802c3e8:	45a8      	cmp	r8, r5
 802c3ea:	dc41      	bgt.n	802c470 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2fc>
 802c3ec:	f04f 0900 	mov.w	r9, #0
 802c3f0:	464c      	mov	r4, r9
 802c3f2:	1c6a      	adds	r2, r5, #1
 802c3f4:	d42a      	bmi.n	802c44c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d8>
 802c3f6:	4590      	cmp	r8, r2
 802c3f8:	dd28      	ble.n	802c44c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2d8>
 802c3fa:	f1be 0f00 	cmp.w	lr, #0
 802c3fe:	d004      	beq.n	802c40a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x296>
 802c400:	787a      	ldrb	r2, [r7, #1]
 802c402:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802c406:	0e06      	lsrs	r6, r0, #24
 802c408:	e6dd      	b.n	802c1c6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x52>
 802c40a:	f1bc 0f00 	cmp.w	ip, #0
 802c40e:	db40      	blt.n	802c492 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x31e>
 802c410:	45e2      	cmp	sl, ip
 802c412:	dd3e      	ble.n	802c492 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x31e>
 802c414:	4676      	mov	r6, lr
 802c416:	4670      	mov	r0, lr
 802c418:	b1d9      	cbz	r1, 802c452 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2de>
 802c41a:	2d00      	cmp	r5, #0
 802c41c:	db31      	blt.n	802c482 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x30e>
 802c41e:	45a8      	cmp	r8, r5
 802c420:	dd2f      	ble.n	802c482 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x30e>
 802c422:	f817 2008 	ldrb.w	r2, [r7, r8]
 802c426:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802c42a:	9202      	str	r2, [sp, #8]
 802c42c:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 802c430:	3501      	adds	r5, #1
 802c432:	d423      	bmi.n	802c47c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x308>
 802c434:	45a8      	cmp	r8, r5
 802c436:	dd21      	ble.n	802c47c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x308>
 802c438:	f1be 0f00 	cmp.w	lr, #0
 802c43c:	d026      	beq.n	802c48c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x318>
 802c43e:	44b8      	add	r8, r7
 802c440:	f898 5001 	ldrb.w	r5, [r8, #1]
 802c444:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
 802c448:	0e2f      	lsrs	r7, r5, #24
 802c44a:	e6c6      	b.n	802c1da <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 802c44c:	2600      	movs	r6, #0
 802c44e:	4630      	mov	r0, r6
 802c450:	e6b9      	b.n	802c1c6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x52>
 802c452:	f1be 0f0f 	cmp.w	lr, #15
 802c456:	d824      	bhi.n	802c4a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x32e>
 802c458:	fa1f f38e 	uxth.w	r3, lr
 802c45c:	4688      	mov	r8, r1
 802c45e:	468b      	mov	fp, r1
 802c460:	468a      	mov	sl, r1
 802c462:	e9cd 1101 	strd	r1, r1, [sp, #4]
 802c466:	460d      	mov	r5, r1
 802c468:	9100      	str	r1, [sp, #0]
 802c46a:	460f      	mov	r7, r1
 802c46c:	468c      	mov	ip, r1
 802c46e:	e6d4      	b.n	802c21a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 802c470:	5d12      	ldrb	r2, [r2, r4]
 802c472:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802c476:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802c47a:	e7ba      	b.n	802c3f2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27e>
 802c47c:	2700      	movs	r7, #0
 802c47e:	463d      	mov	r5, r7
 802c480:	e6ab      	b.n	802c1da <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 802c482:	f04f 0c00 	mov.w	ip, #0
 802c486:	f8cd c008 	str.w	ip, [sp, #8]
 802c48a:	e7d1      	b.n	802c430 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2bc>
 802c48c:	4675      	mov	r5, lr
 802c48e:	4677      	mov	r7, lr
 802c490:	e6a7      	b.n	802c1e2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6e>
 802c492:	4670      	mov	r0, lr
 802c494:	4675      	mov	r5, lr
 802c496:	f8cd e008 	str.w	lr, [sp, #8]
 802c49a:	4677      	mov	r7, lr
 802c49c:	46f4      	mov	ip, lr
 802c49e:	4676      	mov	r6, lr
 802c4a0:	e69f      	b.n	802c1e2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6e>
 802c4a2:	4b04      	ldr	r3, [pc, #16]	@ (802c4b4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x340>)
 802c4a4:	4a04      	ldr	r2, [pc, #16]	@ (802c4b8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x344>)
 802c4a6:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802c4aa:	4804      	ldr	r0, [pc, #16]	@ (802c4bc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x348>)
 802c4ac:	f006 f824 	bl	80324f8 <__assert_func>
 802c4b0:	fffff800 	.word	0xfffff800
 802c4b4:	080366d4 	.word	0x080366d4
 802c4b8:	08036d50 	.word	0x08036d50
 802c4bc:	0803685c 	.word	0x0803685c

0802c4c0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802c4c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c4c4:	ed2d 8b08 	vpush	{d8-d11}
 802c4c8:	b0a3      	sub	sp, #140	@ 0x8c
 802c4ca:	901e      	str	r0, [sp, #120]	@ 0x78
 802c4cc:	9111      	str	r1, [sp, #68]	@ 0x44
 802c4ce:	9215      	str	r2, [sp, #84]	@ 0x54
 802c4d0:	e9dd 4139 	ldrd	r4, r1, [sp, #228]	@ 0xe4
 802c4d4:	9a3b      	ldr	r2, [sp, #236]	@ 0xec
 802c4d6:	6860      	ldr	r0, [r4, #4]
 802c4d8:	e9dd 8b35 	ldrd	r8, fp, [sp, #212]	@ 0xd4
 802c4dc:	fb00 1202 	mla	r2, r0, r2, r1
 802c4e0:	6820      	ldr	r0, [r4, #0]
 802c4e2:	46c1      	mov	r9, r8
 802c4e4:	eb00 0a42 	add.w	sl, r0, r2, lsl #1
 802c4e8:	46d8      	mov	r8, fp
 802c4ea:	eeb0 aa40 	vmov.f32	s20, s0
 802c4ee:	eef0 9a60 	vmov.f32	s19, s1
 802c4f2:	eeb0 9a41 	vmov.f32	s18, s2
 802c4f6:	eef0 8a62 	vmov.f32	s17, s5
 802c4fa:	eeb0 8a43 	vmov.f32	s16, s6
 802c4fe:	eef0 ba44 	vmov.f32	s23, s8
 802c502:	eeb0 ba64 	vmov.f32	s22, s9
 802c506:	eef0 aa45 	vmov.f32	s21, s10
 802c50a:	46d3      	mov	fp, sl
 802c50c:	993c      	ldr	r1, [sp, #240]	@ 0xf0
 802c50e:	9c3c      	ldr	r4, [sp, #240]	@ 0xf0
 802c510:	6849      	ldr	r1, [r1, #4]
 802c512:	6824      	ldr	r4, [r4, #0]
 802c514:	1d0a      	adds	r2, r1, #4
 802c516:	940e      	str	r4, [sp, #56]	@ 0x38
 802c518:	920b      	str	r2, [sp, #44]	@ 0x2c
 802c51a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802c51c:	2a00      	cmp	r2, #0
 802c51e:	dc02      	bgt.n	802c526 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802c520:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802c522:	2a00      	cmp	r2, #0
 802c524:	dd65      	ble.n	802c5f2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802c526:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 802c528:	2b00      	cmp	r3, #0
 802c52a:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802c52e:	b234      	sxth	r4, r6
 802c530:	fa0f f78c 	sxth.w	r7, ip
 802c534:	f340 836d 	ble.w	802cc12 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x752>
 802c538:	1e65      	subs	r5, r4, #1
 802c53a:	f107 3eff 	add.w	lr, r7, #4294967295
 802c53e:	f8cd c01c 	str.w	ip, [sp, #28]
 802c542:	e9dd ca37 	ldrd	ip, sl, [sp, #220]	@ 0xdc
 802c546:	ea5f 4229 	movs.w	r2, r9, asr #16
 802c54a:	ea4f 4128 	mov.w	r1, r8, asr #16
 802c54e:	d405      	bmi.n	802c55c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c550:	42aa      	cmp	r2, r5
 802c552:	da03      	bge.n	802c55c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c554:	2900      	cmp	r1, #0
 802c556:	db01      	blt.n	802c55c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802c558:	4571      	cmp	r1, lr
 802c55a:	db4f      	blt.n	802c5fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802c55c:	1c50      	adds	r0, r2, #1
 802c55e:	d406      	bmi.n	802c56e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c560:	42a0      	cmp	r0, r4
 802c562:	dc04      	bgt.n	802c56e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c564:	1c48      	adds	r0, r1, #1
 802c566:	d402      	bmi.n	802c56e <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802c568:	42b8      	cmp	r0, r7
 802c56a:	f340 832f 	ble.w	802cbcc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802c56e:	3b01      	subs	r3, #1
 802c570:	44e1      	add	r9, ip
 802c572:	44d0      	add	r8, sl
 802c574:	f10b 0b02 	add.w	fp, fp, #2
 802c578:	d1e5      	bne.n	802c546 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802c57a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802c57c:	2b00      	cmp	r3, #0
 802c57e:	dd38      	ble.n	802c5f2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802c580:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802c584:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802c588:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802c58c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802c590:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802c594:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802c598:	ee69 7a27 	vmul.f32	s15, s18, s15
 802c59c:	ee76 6a68 	vsub.f32	s13, s12, s17
 802c5a0:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802c5a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802c5a8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c5ac:	ee16 2a90 	vmov	r2, s13
 802c5b0:	3b01      	subs	r3, #1
 802c5b2:	9311      	str	r3, [sp, #68]	@ 0x44
 802c5b4:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c5b6:	fb92 f3f3 	sdiv	r3, r2, r3
 802c5ba:	ee17 2a10 	vmov	r2, s14
 802c5be:	eeb0 7a48 	vmov.f32	s14, s16
 802c5c2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c5c6:	ee17 8a10 	vmov	r8, s14
 802c5ca:	eeb0 7a68 	vmov.f32	s14, s17
 802c5ce:	9337      	str	r3, [sp, #220]	@ 0xdc
 802c5d0:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c5d2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802c5d6:	fb92 f3f3 	sdiv	r3, r2, r3
 802c5da:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802c5dc:	9338      	str	r3, [sp, #224]	@ 0xe0
 802c5de:	ee17 9a10 	vmov	r9, s14
 802c5e2:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
 802c5e4:	eeb0 8a67 	vmov.f32	s16, s15
 802c5e8:	eef0 8a46 	vmov.f32	s17, s12
 802c5ec:	bf08      	it	eq
 802c5ee:	4613      	moveq	r3, r2
 802c5f0:	e793      	b.n	802c51a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 802c5f2:	b023      	add	sp, #140	@ 0x8c
 802c5f4:	ecbd 8b08 	vpop	{d8-d11}
 802c5f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c5fc:	f8dd c01c 	ldr.w	ip, [sp, #28]
 802c600:	f8cd b01c 	str.w	fp, [sp, #28]
 802c604:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 802c606:	1e59      	subs	r1, r3, #1
 802c608:	fb00 9201 	mla	r2, r0, r1, r9
 802c60c:	1412      	asrs	r2, r2, #16
 802c60e:	910c      	str	r1, [sp, #48]	@ 0x30
 802c610:	f100 815e 	bmi.w	802c8d0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c614:	42aa      	cmp	r2, r5
 802c616:	f280 815b 	bge.w	802c8d0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c61a:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802c61c:	fb02 8201 	mla	r2, r2, r1, r8
 802c620:	1412      	asrs	r2, r2, #16
 802c622:	f100 8155 	bmi.w	802c8d0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c626:	3f01      	subs	r7, #1
 802c628:	42ba      	cmp	r2, r7
 802c62a:	f280 8151 	bge.w	802c8d0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 802c62e:	2b00      	cmp	r3, #0
 802c630:	dda3      	ble.n	802c57a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802c632:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802c636:	4621      	mov	r1, r4
 802c638:	f8cd b034 	str.w	fp, [sp, #52]	@ 0x34
 802c63c:	f8cd 90d4 	str.w	r9, [sp, #212]	@ 0xd4
 802c640:	464a      	mov	r2, r9
 802c642:	464c      	mov	r4, r9
 802c644:	e122      	b.n	802c88c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802c646:	f893 c001 	ldrb.w	ip, [r3, #1]
 802c64a:	f856 502c 	ldr.w	r5, [r6, ip, lsl #2]
 802c64e:	950f      	str	r5, [sp, #60]	@ 0x3c
 802c650:	0e2d      	lsrs	r5, r5, #24
 802c652:	9508      	str	r5, [sp, #32]
 802c654:	b162      	cbz	r2, 802c670 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802c656:	185d      	adds	r5, r3, r1
 802c658:	786d      	ldrb	r5, [r5, #1]
 802c65a:	5c5b      	ldrb	r3, [r3, r1]
 802c65c:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802c660:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802c664:	9112      	str	r1, [sp, #72]	@ 0x48
 802c666:	9310      	str	r3, [sp, #64]	@ 0x40
 802c668:	0e09      	lsrs	r1, r1, #24
 802c66a:	0e1b      	lsrs	r3, r3, #24
 802c66c:	910a      	str	r1, [sp, #40]	@ 0x28
 802c66e:	9309      	str	r3, [sp, #36]	@ 0x24
 802c670:	b2a4      	uxth	r4, r4
 802c672:	b292      	uxth	r2, r2
 802c674:	fb04 f502 	mul.w	r5, r4, r2
 802c678:	0124      	lsls	r4, r4, #4
 802c67a:	1b66      	subs	r6, r4, r5
 802c67c:	9b08      	ldr	r3, [sp, #32]
 802c67e:	b2b6      	uxth	r6, r6
 802c680:	fb06 f103 	mul.w	r1, r6, r3
 802c684:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802c688:	b292      	uxth	r2, r2
 802c68a:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802c68e:	1a9b      	subs	r3, r3, r2
 802c690:	b29b      	uxth	r3, r3
 802c692:	fb03 1100 	mla	r1, r3, r0, r1
 802c696:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802c698:	fb02 1104 	mla	r1, r2, r4, r1
 802c69c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802c69e:	fb05 1104 	mla	r1, r5, r4, r1
 802c6a2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802c6a6:	2900      	cmp	r1, #0
 802c6a8:	f000 80df 	beq.w	802c86a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802c6ac:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802c6b0:	28ff      	cmp	r0, #255	@ 0xff
 802c6b2:	940c      	str	r4, [sp, #48]	@ 0x30
 802c6b4:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 802c6b8:	d01a      	beq.n	802c6f0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 802c6ba:	fb04 f400 	mul.w	r4, r4, r0
 802c6be:	4627      	mov	r7, r4
 802c6c0:	fb09 fc00 	mul.w	ip, r9, r0
 802c6c4:	0a24      	lsrs	r4, r4, #8
 802c6c6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c6ca:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802c6ce:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 802c6d2:	4427      	add	r7, r4
 802c6d4:	eb00 201c 	add.w	r0, r0, ip, lsr #8
 802c6d8:	0a3f      	lsrs	r7, r7, #8
 802c6da:	0a00      	lsrs	r0, r0, #8
 802c6dc:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802c6e0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802c6e4:	4307      	orrs	r7, r0
 802c6e6:	f007 10ff 	and.w	r0, r7, #16711935	@ 0xff00ff
 802c6ea:	900c      	str	r0, [sp, #48]	@ 0x30
 802c6ec:	f407 497f 	and.w	r9, r7, #65280	@ 0xff00
 802c6f0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802c6f2:	f000 17ff 	and.w	r7, r0, #16711935	@ 0xff00ff
 802c6f6:	f400 4c7f 	and.w	ip, r0, #65280	@ 0xff00
 802c6fa:	9808      	ldr	r0, [sp, #32]
 802c6fc:	28ff      	cmp	r0, #255	@ 0xff
 802c6fe:	d01a      	beq.n	802c736 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802c700:	fb07 f700 	mul.w	r7, r7, r0
 802c704:	fb0c fc00 	mul.w	ip, ip, r0
 802c708:	0a3c      	lsrs	r4, r7, #8
 802c70a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c70e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802c712:	f50c 7080 	add.w	r0, ip, #256	@ 0x100
 802c716:	4427      	add	r7, r4
 802c718:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 802c71c:	0a3f      	lsrs	r7, r7, #8
 802c71e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c722:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802c726:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c72a:	ea47 0c0c 	orr.w	ip, r7, ip
 802c72e:	f00c 17ff 	and.w	r7, ip, #16711935	@ 0xff00ff
 802c732:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802c736:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802c738:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 802c73c:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802c740:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802c742:	28ff      	cmp	r0, #255	@ 0xff
 802c744:	d01c      	beq.n	802c780 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 802c746:	fb0e fe00 	mul.w	lr, lr, r0
 802c74a:	fb0a fa00 	mul.w	sl, sl, r0
 802c74e:	ea4f 241e 	mov.w	r4, lr, lsr #8
 802c752:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c756:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802c75a:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802c75e:	44a6      	add	lr, r4
 802c760:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802c764:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802c768:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c76c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802c770:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802c774:	ea4e 0a0a 	orr.w	sl, lr, sl
 802c778:	f00a 1eff 	and.w	lr, sl, #16711935	@ 0xff00ff
 802c77c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802c780:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802c782:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802c786:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802c78a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802c78c:	2cff      	cmp	r4, #255	@ 0xff
 802c78e:	d01d      	beq.n	802c7cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802c790:	fb00 f004 	mul.w	r0, r0, r4
 802c794:	fb0b fb04 	mul.w	fp, fp, r4
 802c798:	0a04      	lsrs	r4, r0, #8
 802c79a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802c79e:	9414      	str	r4, [sp, #80]	@ 0x50
 802c7a0:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802c7a4:	9413      	str	r4, [sp, #76]	@ 0x4c
 802c7a6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802c7a8:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802c7ac:	4420      	add	r0, r4
 802c7ae:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802c7b0:	0a00      	lsrs	r0, r0, #8
 802c7b2:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802c7b6:	0a24      	lsrs	r4, r4, #8
 802c7b8:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802c7bc:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802c7c0:	ea40 0b0b 	orr.w	fp, r0, fp
 802c7c4:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802c7c8:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802c7cc:	43c9      	mvns	r1, r1
 802c7ce:	fb07 f706 	mul.w	r7, r7, r6
 802c7d2:	fb0c f606 	mul.w	r6, ip, r6
 802c7d6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802c7d8:	fb09 6603 	mla	r6, r9, r3, r6
 802c7dc:	fb04 7703 	mla	r7, r4, r3, r7
 802c7e0:	9b07      	ldr	r3, [sp, #28]
 802c7e2:	fb0e 7702 	mla	r7, lr, r2, r7
 802c7e6:	fb0a 6602 	mla	r6, sl, r2, r6
 802c7ea:	f8b3 e000 	ldrh.w	lr, [r3]
 802c7ee:	b2c9      	uxtb	r1, r1
 802c7f0:	ea4f 242e 	mov.w	r4, lr, asr #8
 802c7f4:	fb00 7005 	mla	r0, r0, r5, r7
 802c7f8:	fb0b 6605 	mla	r6, fp, r5, r6
 802c7fc:	ea4f 09ee 	mov.w	r9, lr, asr #3
 802c800:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802c804:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802c808:	fb04 f401 	mul.w	r4, r4, r1
 802c80c:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 802c810:	fa5f fe8e 	uxtb.w	lr, lr
 802c814:	fb09 f901 	mul.w	r9, r9, r1
 802c818:	fb0e f101 	mul.w	r1, lr, r1
 802c81c:	0a00      	lsrs	r0, r0, #8
 802c81e:	0a36      	lsrs	r6, r6, #8
 802c820:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802c824:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802c828:	1c62      	adds	r2, r4, #1
 802c82a:	ea40 0306 	orr.w	r3, r0, r6
 802c82e:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802c832:	f109 0001 	add.w	r0, r9, #1
 802c836:	1c4a      	adds	r2, r1, #1
 802c838:	0c1e      	lsrs	r6, r3, #16
 802c83a:	f3c3 2507 	ubfx	r5, r3, #8, #8
 802c83e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802c842:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 802c846:	4a21      	ldr	r2, [pc, #132]	@ (802c8cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40c>)
 802c848:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 802c84c:	b2db      	uxtb	r3, r3
 802c84e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802c852:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802c856:	ea02 2404 	and.w	r4, r2, r4, lsl #8
 802c85a:	00c0      	lsls	r0, r0, #3
 802c85c:	ea44 04d3 	orr.w	r4, r4, r3, lsr #3
 802c860:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802c864:	9b07      	ldr	r3, [sp, #28]
 802c866:	4320      	orrs	r0, r4
 802c868:	8018      	strh	r0, [r3, #0]
 802c86a:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 802c86c:	9937      	ldr	r1, [sp, #220]	@ 0xdc
 802c86e:	9b07      	ldr	r3, [sp, #28]
 802c870:	440a      	add	r2, r1
 802c872:	9235      	str	r2, [sp, #212]	@ 0xd4
 802c874:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802c876:	3302      	adds	r3, #2
 802c878:	4490      	add	r8, r2
 802c87a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802c87c:	9307      	str	r3, [sp, #28]
 802c87e:	4293      	cmp	r3, r2
 802c880:	d022      	beq.n	802c8c8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x408>
 802c882:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802c884:	9a35      	ldr	r2, [sp, #212]	@ 0xd4
 802c886:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802c88a:	9c35      	ldr	r4, [sp, #212]	@ 0xd4
 802c88c:	1412      	asrs	r2, r2, #16
 802c88e:	ea4f 4328 	mov.w	r3, r8, asr #16
 802c892:	fb01 2303 	mla	r3, r1, r3, r2
 802c896:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802c898:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802c89a:	5cc2      	ldrb	r2, [r0, r3]
 802c89c:	f3c4 3403 	ubfx	r4, r4, #12, #4
 802c8a0:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802c8a4:	4403      	add	r3, r0
 802c8a6:	f3c8 3203 	ubfx	r2, r8, #12, #4
 802c8aa:	0e38      	lsrs	r0, r7, #24
 802c8ac:	2c00      	cmp	r4, #0
 802c8ae:	f47f aeca 	bne.w	802c646 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802c8b2:	2a00      	cmp	r2, #0
 802c8b4:	f43f aedc 	beq.w	802c670 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802c8b8:	5c5b      	ldrb	r3, [r3, r1]
 802c8ba:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802c8bc:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802c8c0:	9310      	str	r3, [sp, #64]	@ 0x40
 802c8c2:	0e1b      	lsrs	r3, r3, #24
 802c8c4:	9309      	str	r3, [sp, #36]	@ 0x24
 802c8c6:	e6d3      	b.n	802c670 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 802c8c8:	4693      	mov	fp, r2
 802c8ca:	e656      	b.n	802c57a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802c8cc:	fffff800 	.word	0xfffff800
 802c8d0:	2b00      	cmp	r3, #0
 802c8d2:	f77f ae52 	ble.w	802c57a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802c8d6:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802c8da:	ea4f 4229 	mov.w	r2, r9, asr #16
 802c8de:	ea4f 4128 	mov.w	r1, r8, asr #16
 802c8e2:	2a00      	cmp	r2, #0
 802c8e4:	465f      	mov	r7, fp
 802c8e6:	f8cd b01c 	str.w	fp, [sp, #28]
 802c8ea:	9c3c      	ldr	r4, [sp, #240]	@ 0xf0
 802c8ec:	e9dd b337 	ldrd	fp, r3, [sp, #220]	@ 0xdc
 802c8f0:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802c8f4:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 802c8f8:	f2c0 8147 	blt.w	802cb8a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c8fc:	1e73      	subs	r3, r6, #1
 802c8fe:	429a      	cmp	r2, r3
 802c900:	f280 8143 	bge.w	802cb8a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c904:	2900      	cmp	r1, #0
 802c906:	f2c0 8140 	blt.w	802cb8a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c90a:	f10c 33ff 	add.w	r3, ip, #4294967295
 802c90e:	4299      	cmp	r1, r3
 802c910:	f280 813b 	bge.w	802cb8a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802c914:	b236      	sxth	r6, r6
 802c916:	fb01 2106 	mla	r1, r1, r6, r2
 802c91a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802c91c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802c91e:	5c53      	ldrb	r3, [r2, r1]
 802c920:	4411      	add	r1, r2
 802c922:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
 802c926:	910d      	str	r1, [sp, #52]	@ 0x34
 802c928:	0e13      	lsrs	r3, r2, #24
 802c92a:	2800      	cmp	r0, #0
 802c92c:	f000 8154 	beq.w	802cbd8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 802c930:	f891 c001 	ldrb.w	ip, [r1, #1]
 802c934:	9513      	str	r5, [sp, #76]	@ 0x4c
 802c936:	f855 102c 	ldr.w	r1, [r5, ip, lsl #2]
 802c93a:	911f      	str	r1, [sp, #124]	@ 0x7c
 802c93c:	0e09      	lsrs	r1, r1, #24
 802c93e:	9116      	str	r1, [sp, #88]	@ 0x58
 802c940:	f1be 0f00 	cmp.w	lr, #0
 802c944:	f040 8153 	bne.w	802cbee <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 802c948:	b286      	uxth	r6, r0
 802c94a:	fa1f fc8e 	uxth.w	ip, lr
 802c94e:	fb06 f00c 	mul.w	r0, r6, ip
 802c952:	0136      	lsls	r6, r6, #4
 802c954:	1a31      	subs	r1, r6, r0
 802c956:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802c958:	b289      	uxth	r1, r1
 802c95a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802c95e:	9113      	str	r1, [sp, #76]	@ 0x4c
 802c960:	fb01 f105 	mul.w	r1, r1, r5
 802c964:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802c968:	fa1f f58c 	uxth.w	r5, ip
 802c96c:	1b76      	subs	r6, r6, r5
 802c96e:	b2b6      	uxth	r6, r6
 802c970:	fb06 1c03 	mla	ip, r6, r3, r1
 802c974:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802c976:	9514      	str	r5, [sp, #80]	@ 0x50
 802c978:	fb05 cc01 	mla	ip, r5, r1, ip
 802c97c:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802c97e:	9619      	str	r6, [sp, #100]	@ 0x64
 802c980:	fb00 cc01 	mla	ip, r0, r1, ip
 802c984:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802c988:	f1bc 0f00 	cmp.w	ip, #0
 802c98c:	f000 80e6 	beq.w	802cb5c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802c990:	f002 11ff 	and.w	r1, r2, #16711935	@ 0xff00ff
 802c994:	2bff      	cmp	r3, #255	@ 0xff
 802c996:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802c99a:	911a      	str	r1, [sp, #104]	@ 0x68
 802c99c:	921b      	str	r2, [sp, #108]	@ 0x6c
 802c99e:	d01b      	beq.n	802c9d8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 802c9a0:	fb02 f203 	mul.w	r2, r2, r3
 802c9a4:	fb01 f103 	mul.w	r1, r1, r3
 802c9a8:	4613      	mov	r3, r2
 802c9aa:	0a0a      	lsrs	r2, r1, #8
 802c9ac:	f101 1601 	add.w	r6, r1, #65537	@ 0x10001
 802c9b0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c9b4:	f503 7180 	add.w	r1, r3, #256	@ 0x100
 802c9b8:	4432      	add	r2, r6
 802c9ba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802c9be:	0a12      	lsrs	r2, r2, #8
 802c9c0:	0a1b      	lsrs	r3, r3, #8
 802c9c2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c9c6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c9ca:	4313      	orrs	r3, r2
 802c9cc:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802c9d0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c9d4:	921a      	str	r2, [sp, #104]	@ 0x68
 802c9d6:	931b      	str	r3, [sp, #108]	@ 0x6c
 802c9d8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802c9da:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802c9dc:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802c9e0:	2aff      	cmp	r2, #255	@ 0xff
 802c9e2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802c9e6:	931c      	str	r3, [sp, #112]	@ 0x70
 802c9e8:	d01b      	beq.n	802ca22 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x562>
 802c9ea:	fb03 f302 	mul.w	r3, r3, r2
 802c9ee:	461e      	mov	r6, r3
 802c9f0:	fb01 f102 	mul.w	r1, r1, r2
 802c9f4:	0a0a      	lsrs	r2, r1, #8
 802c9f6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802c9fa:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 802c9fe:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 802ca02:	440a      	add	r2, r1
 802ca04:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802ca08:	0a12      	lsrs	r2, r2, #8
 802ca0a:	0a1b      	lsrs	r3, r3, #8
 802ca0c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ca10:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802ca14:	ea42 0603 	orr.w	r6, r2, r3
 802ca18:	f406 437f 	and.w	r3, r6, #65280	@ 0xff00
 802ca1c:	f006 11ff 	and.w	r1, r6, #16711935	@ 0xff00ff
 802ca20:	931c      	str	r3, [sp, #112]	@ 0x70
 802ca22:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802ca24:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802ca26:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802ca2a:	2aff      	cmp	r2, #255	@ 0xff
 802ca2c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ca30:	931d      	str	r3, [sp, #116]	@ 0x74
 802ca32:	d01b      	beq.n	802ca6c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ac>
 802ca34:	fb03 f302 	mul.w	r3, r3, r2
 802ca38:	fb06 f602 	mul.w	r6, r6, r2
 802ca3c:	461a      	mov	r2, r3
 802ca3e:	0a33      	lsrs	r3, r6, #8
 802ca40:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802ca44:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802ca48:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 802ca4c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802ca50:	4476      	add	r6, lr
 802ca52:	0a36      	lsrs	r6, r6, #8
 802ca54:	0a1b      	lsrs	r3, r3, #8
 802ca56:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802ca5a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ca5e:	ea46 0203 	orr.w	r2, r6, r3
 802ca62:	f402 437f 	and.w	r3, r2, #65280	@ 0xff00
 802ca66:	f002 16ff 	and.w	r6, r2, #16711935	@ 0xff00ff
 802ca6a:	931d      	str	r3, [sp, #116]	@ 0x74
 802ca6c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802ca6e:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802ca72:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 802ca76:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802ca78:	930d      	str	r3, [sp, #52]	@ 0x34
 802ca7a:	2aff      	cmp	r2, #255	@ 0xff
 802ca7c:	d01b      	beq.n	802cab6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f6>
 802ca7e:	fb03 f302 	mul.w	r3, r3, r2
 802ca82:	fb0e fe02 	mul.w	lr, lr, r2
 802ca86:	0a1a      	lsrs	r2, r3, #8
 802ca88:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802ca8c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802ca90:	f50e 7580 	add.w	r5, lr, #256	@ 0x100
 802ca94:	441a      	add	r2, r3
 802ca96:	eb05 2e1e 	add.w	lr, r5, lr, lsr #8
 802ca9a:	0a12      	lsrs	r2, r2, #8
 802ca9c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802caa0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802caa4:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802caa8:	ea42 0e0e 	orr.w	lr, r2, lr
 802caac:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 802cab0:	930d      	str	r3, [sp, #52]	@ 0x34
 802cab2:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802cab6:	ea6f 0c0c 	mvn.w	ip, ip
 802caba:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802cabc:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802cabe:	fb01 f305 	mul.w	r3, r1, r5
 802cac2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 802cac4:	fa5f fc8c 	uxtb.w	ip, ip
 802cac8:	fb01 f105 	mul.w	r1, r1, r5
 802cacc:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 802cace:	fb02 3305 	mla	r3, r2, r5, r3
 802cad2:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 802cad4:	fb02 1105 	mla	r1, r2, r5, r1
 802cad8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802cada:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 802cadc:	fb06 3605 	mla	r6, r6, r5, r3
 802cae0:	fb02 1205 	mla	r2, r2, r5, r1
 802cae4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802cae6:	8839      	ldrh	r1, [r7, #0]
 802cae8:	fb03 6300 	mla	r3, r3, r0, r6
 802caec:	fb0e 2e00 	mla	lr, lr, r0, r2
 802caf0:	10c8      	asrs	r0, r1, #3
 802caf2:	120a      	asrs	r2, r1, #8
 802caf4:	f000 06fc 	and.w	r6, r0, #252	@ 0xfc
 802caf8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802cafc:	00c9      	lsls	r1, r1, #3
 802cafe:	fb02 f20c 	mul.w	r2, r2, ip
 802cb02:	fb06 f60c 	mul.w	r6, r6, ip
 802cb06:	b2c9      	uxtb	r1, r1
 802cb08:	fb01 f00c 	mul.w	r0, r1, ip
 802cb0c:	0a1b      	lsrs	r3, r3, #8
 802cb0e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802cb12:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802cb16:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 802cb1a:	430b      	orrs	r3, r1
 802cb1c:	f106 0e01 	add.w	lr, r6, #1
 802cb20:	1c51      	adds	r1, r2, #1
 802cb22:	0c1d      	lsrs	r5, r3, #16
 802cb24:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802cb28:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 802cb2c:	f3c3 2107 	ubfx	r1, r3, #8, #8
 802cb30:	fa5f fe83 	uxtb.w	lr, r3
 802cb34:	f100 0c01 	add.w	ip, r0, #1
 802cb38:	4b39      	ldr	r3, [pc, #228]	@ (802cc20 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>)
 802cb3a:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 802cb3e:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802cb42:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802cb46:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 802cb4a:	00c9      	lsls	r1, r1, #3
 802cb4c:	eb0e 2310 	add.w	r3, lr, r0, lsr #8
 802cb50:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 802cb54:	f401 62fc 	and.w	r2, r1, #2016	@ 0x7e0
 802cb58:	4313      	orrs	r3, r2
 802cb5a:	803b      	strh	r3, [r7, #0]
 802cb5c:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802cb5e:	f1ba 0f00 	cmp.w	sl, #0
 802cb62:	f107 0702 	add.w	r7, r7, #2
 802cb66:	44d9      	add	r9, fp
 802cb68:	4498      	add	r8, r3
 802cb6a:	dd26      	ble.n	802cbba <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802cb6c:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802cb70:	ea4f 4229 	mov.w	r2, r9, asr #16
 802cb74:	2a00      	cmp	r2, #0
 802cb76:	f10a 3aff 	add.w	sl, sl, #4294967295
 802cb7a:	ea4f 4128 	mov.w	r1, r8, asr #16
 802cb7e:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802cb82:	f3c8 3e03 	ubfx	lr, r8, #12, #4
 802cb86:	f6bf aeb9 	bge.w	802c8fc <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 802cb8a:	1c53      	adds	r3, r2, #1
 802cb8c:	d4e6      	bmi.n	802cb5c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb8e:	42b3      	cmp	r3, r6
 802cb90:	dce4      	bgt.n	802cb5c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb92:	1c4b      	adds	r3, r1, #1
 802cb94:	d4e2      	bmi.n	802cb5c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb96:	4563      	cmp	r3, ip
 802cb98:	dce0      	bgt.n	802cb5c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cb9a:	fa0f f38c 	sxth.w	r3, ip
 802cb9e:	b236      	sxth	r6, r6
 802cba0:	e9cd 2102 	strd	r2, r1, [sp, #8]
 802cba4:	e9cd 6300 	strd	r6, r3, [sp]
 802cba8:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802cbac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802cbae:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802cbb0:	4639      	mov	r1, r7
 802cbb2:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802cbb4:	f7ff fade 	bl	802c174 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802cbb8:	e7d0      	b.n	802cb5c <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x69c>
 802cbba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802cbbc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802cbc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802cbc4:	3301      	adds	r3, #1
 802cbc6:	eb0b 0b43 	add.w	fp, fp, r3, lsl #1
 802cbca:	e4d6      	b.n	802c57a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802cbcc:	3b01      	subs	r3, #1
 802cbce:	f8dd c01c 	ldr.w	ip, [sp, #28]
 802cbd2:	930c      	str	r3, [sp, #48]	@ 0x30
 802cbd4:	469a      	mov	sl, r3
 802cbd6:	e684      	b.n	802c8e2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x422>
 802cbd8:	f1be 0f00 	cmp.w	lr, #0
 802cbdc:	f43f aeb4 	beq.w	802c948 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802cbe0:	5d89      	ldrb	r1, [r1, r6]
 802cbe2:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 802cbe6:	9120      	str	r1, [sp, #128]	@ 0x80
 802cbe8:	0e09      	lsrs	r1, r1, #24
 802cbea:	9117      	str	r1, [sp, #92]	@ 0x5c
 802cbec:	e6ac      	b.n	802c948 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802cbee:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802cbf0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802cbf2:	eb01 0c06 	add.w	ip, r1, r6
 802cbf6:	f89c c001 	ldrb.w	ip, [ip, #1]
 802cbfa:	5d89      	ldrb	r1, [r1, r6]
 802cbfc:	f855 602c 	ldr.w	r6, [r5, ip, lsl #2]
 802cc00:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 802cc04:	0e35      	lsrs	r5, r6, #24
 802cc06:	9120      	str	r1, [sp, #128]	@ 0x80
 802cc08:	0e09      	lsrs	r1, r1, #24
 802cc0a:	9621      	str	r6, [sp, #132]	@ 0x84
 802cc0c:	9518      	str	r5, [sp, #96]	@ 0x60
 802cc0e:	9117      	str	r1, [sp, #92]	@ 0x5c
 802cc10:	e69a      	b.n	802c948 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802cc12:	f43f acb2 	beq.w	802c57a <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802cc16:	1e65      	subs	r5, r4, #1
 802cc18:	f8cd b01c 	str.w	fp, [sp, #28]
 802cc1c:	e4f2      	b.n	802c604 <_ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802cc1e:	bf00      	nop
 802cc20:	fffff800 	.word	0xfffff800

0802cc24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>:
 802cc24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802cc28:	b08b      	sub	sp, #44	@ 0x2c
 802cc2a:	f89d 0068 	ldrb.w	r0, [sp, #104]	@ 0x68
 802cc2e:	f8dd c05c 	ldr.w	ip, [sp, #92]	@ 0x5c
 802cc32:	ea6f 0b00 	mvn.w	fp, r0
 802cc36:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802cc38:	f9bd 5050 	ldrsh.w	r5, [sp, #80]	@ 0x50
 802cc3c:	9005      	str	r0, [sp, #20]
 802cc3e:	fb0c 4805 	mla	r8, ip, r5, r4
 802cc42:	7848      	ldrb	r0, [r1, #1]
 802cc44:	788e      	ldrb	r6, [r1, #2]
 802cc46:	0204      	lsls	r4, r0, #8
 802cc48:	780f      	ldrb	r7, [r1, #0]
 802cc4a:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 802cc4e:	9306      	str	r3, [sp, #24]
 802cc50:	fa5f f38b 	uxtb.w	r3, fp
 802cc54:	433c      	orrs	r4, r7
 802cc56:	9304      	str	r3, [sp, #16]
 802cc58:	f1bc 0f00 	cmp.w	ip, #0
 802cc5c:	eb02 0308 	add.w	r3, r2, r8
 802cc60:	9003      	str	r0, [sp, #12]
 802cc62:	9602      	str	r6, [sp, #8]
 802cc64:	9307      	str	r3, [sp, #28]
 802cc66:	9409      	str	r4, [sp, #36]	@ 0x24
 802cc68:	f10c 0601 	add.w	r6, ip, #1
 802cc6c:	f9bd e054 	ldrsh.w	lr, [sp, #84]	@ 0x54
 802cc70:	f89d 3060 	ldrb.w	r3, [sp, #96]	@ 0x60
 802cc74:	f89d 0064 	ldrb.w	r0, [sp, #100]	@ 0x64
 802cc78:	db02      	blt.n	802cc80 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x5c>
 802cc7a:	45e6      	cmp	lr, ip
 802cc7c:	f300 80a0 	bgt.w	802cdc0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x19c>
 802cc80:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802cc84:	46e0      	mov	r8, ip
 802cc86:	fa5f fb84 	uxtb.w	fp, r4
 802cc8a:	f8cd b004 	str.w	fp, [sp, #4]
 802cc8e:	2e00      	cmp	r6, #0
 802cc90:	db01      	blt.n	802cc96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x72>
 802cc92:	45b6      	cmp	lr, r6
 802cc94:	dc73      	bgt.n	802cd7e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x15a>
 802cc96:	fa5f fa84 	uxtb.w	sl, r4
 802cc9a:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802cc9e:	4654      	mov	r4, sl
 802cca0:	46f1      	mov	r9, lr
 802cca2:	2b0f      	cmp	r3, #15
 802cca4:	f200 80cb 	bhi.w	802ce3e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x21a>
 802cca8:	280f      	cmp	r0, #15
 802ccaa:	f200 80c8 	bhi.w	802ce3e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x21a>
 802ccae:	b29b      	uxth	r3, r3
 802ccb0:	b280      	uxth	r0, r0
 802ccb2:	fb03 f600 	mul.w	r6, r3, r0
 802ccb6:	011b      	lsls	r3, r3, #4
 802ccb8:	1b9d      	subs	r5, r3, r6
 802ccba:	9a01      	ldr	r2, [sp, #4]
 802ccbc:	b2ad      	uxth	r5, r5
 802ccbe:	ebc6 1000 	rsb	r0, r6, r0, lsl #4
 802ccc2:	fb05 f202 	mul.w	r2, r5, r2
 802ccc6:	b280      	uxth	r0, r0
 802ccc8:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802cccc:	1a1b      	subs	r3, r3, r0
 802ccce:	b29b      	uxth	r3, r3
 802ccd0:	fb03 220b 	mla	r2, r3, fp, r2
 802ccd4:	fb00 2a0a 	mla	sl, r0, sl, r2
 802ccd8:	f8bd b010 	ldrh.w	fp, [sp, #16]
 802ccdc:	fb06 a404 	mla	r4, r6, r4, sl
 802cce0:	fb17 f70b 	smulbb	r7, r7, fp
 802cce4:	f8bd a014 	ldrh.w	sl, [sp, #20]
 802cce8:	f3c4 2407 	ubfx	r4, r4, #8, #8
 802ccec:	fb04 770a 	mla	r7, r4, sl, r7
 802ccf0:	b2bf      	uxth	r7, r7
 802ccf2:	1c7a      	adds	r2, r7, #1
 802ccf4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 802ccf8:	123f      	asrs	r7, r7, #8
 802ccfa:	700f      	strb	r7, [r1, #0]
 802ccfc:	f89c 4001 	ldrb.w	r4, [ip, #1]
 802cd00:	f898 7001 	ldrb.w	r7, [r8, #1]
 802cd04:	fb05 f204 	mul.w	r2, r5, r4
 802cd08:	fb03 2407 	mla	r4, r3, r7, r2
 802cd0c:	f899 2001 	ldrb.w	r2, [r9, #1]
 802cd10:	f89e 7001 	ldrb.w	r7, [lr, #1]
 802cd14:	fb00 4202 	mla	r2, r0, r2, r4
 802cd18:	9c03      	ldr	r4, [sp, #12]
 802cd1a:	fb06 2207 	mla	r2, r6, r7, r2
 802cd1e:	fb14 f40b 	smulbb	r4, r4, fp
 802cd22:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802cd26:	fb02 420a 	mla	r2, r2, sl, r4
 802cd2a:	b292      	uxth	r2, r2
 802cd2c:	1c54      	adds	r4, r2, #1
 802cd2e:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802cd32:	1212      	asrs	r2, r2, #8
 802cd34:	704a      	strb	r2, [r1, #1]
 802cd36:	f89c 4002 	ldrb.w	r4, [ip, #2]
 802cd3a:	f898 2002 	ldrb.w	r2, [r8, #2]
 802cd3e:	fb05 f504 	mul.w	r5, r5, r4
 802cd42:	fb03 5502 	mla	r5, r3, r2, r5
 802cd46:	f899 4002 	ldrb.w	r4, [r9, #2]
 802cd4a:	f89e 2002 	ldrb.w	r2, [lr, #2]
 802cd4e:	fb00 5004 	mla	r0, r0, r4, r5
 802cd52:	9b02      	ldr	r3, [sp, #8]
 802cd54:	fb06 0602 	mla	r6, r6, r2, r0
 802cd58:	fb13 fb0b 	smulbb	fp, r3, fp
 802cd5c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802cd60:	fb06 ba0a 	mla	sl, r6, sl, fp
 802cd64:	fa1f fa8a 	uxth.w	sl, sl
 802cd68:	f10a 0b01 	add.w	fp, sl, #1
 802cd6c:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 802cd70:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 802cd74:	f881 a002 	strb.w	sl, [r1, #2]
 802cd78:	b00b      	add	sp, #44	@ 0x2c
 802cd7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cd7e:	2800      	cmp	r0, #0
 802cd80:	d089      	beq.n	802cc96 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x72>
 802cd82:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 802cd84:	2e00      	cmp	r6, #0
 802cd86:	db47      	blt.n	802ce18 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1f4>
 802cd88:	42b5      	cmp	r5, r6
 802cd8a:	dd45      	ble.n	802ce18 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1f4>
 802cd8c:	9a07      	ldr	r2, [sp, #28]
 802cd8e:	f812 9005 	ldrb.w	r9, [r2, r5]
 802cd92:	9a06      	ldr	r2, [sp, #24]
 802cd94:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802cd98:	4491      	add	r9, r2
 802cd9a:	3601      	adds	r6, #1
 802cd9c:	f899 a000 	ldrb.w	sl, [r9]
 802cda0:	d436      	bmi.n	802ce10 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ec>
 802cda2:	42b5      	cmp	r5, r6
 802cda4:	dd34      	ble.n	802ce10 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ec>
 802cda6:	2b00      	cmp	r3, #0
 802cda8:	d045      	beq.n	802ce36 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x212>
 802cdaa:	9a07      	ldr	r2, [sp, #28]
 802cdac:	442a      	add	r2, r5
 802cdae:	f892 e001 	ldrb.w	lr, [r2, #1]
 802cdb2:	9a06      	ldr	r2, [sp, #24]
 802cdb4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802cdb8:	f812 400e 	ldrb.w	r4, [r2, lr]
 802cdbc:	4496      	add	lr, r2
 802cdbe:	e770      	b.n	802cca2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7e>
 802cdc0:	4691      	mov	r9, r2
 802cdc2:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802cdc4:	2a00      	cmp	r2, #0
 802cdc6:	db01      	blt.n	802cdcc <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1a8>
 802cdc8:	4295      	cmp	r5, r2
 802cdca:	dc19      	bgt.n	802ce00 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1dc>
 802cdcc:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 802cdd0:	3201      	adds	r2, #1
 802cdd2:	f898 b000 	ldrb.w	fp, [r8]
 802cdd6:	d40e      	bmi.n	802cdf6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d2>
 802cdd8:	4295      	cmp	r5, r2
 802cdda:	dd0c      	ble.n	802cdf6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d2>
 802cddc:	b1fb      	cbz	r3, 802ce1e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1fa>
 802cdde:	9a07      	ldr	r2, [sp, #28]
 802cde0:	f892 c001 	ldrb.w	ip, [r2, #1]
 802cde4:	9a06      	ldr	r2, [sp, #24]
 802cde6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802cdea:	f812 200c 	ldrb.w	r2, [r2, ip]
 802cdee:	9201      	str	r2, [sp, #4]
 802cdf0:	9a06      	ldr	r2, [sp, #24]
 802cdf2:	4494      	add	ip, r2
 802cdf4:	e74b      	b.n	802cc8e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6a>
 802cdf6:	b2e2      	uxtb	r2, r4
 802cdf8:	9201      	str	r2, [sp, #4]
 802cdfa:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802cdfe:	e746      	b.n	802cc8e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6a>
 802ce00:	f819 8008 	ldrb.w	r8, [r9, r8]
 802ce04:	9a06      	ldr	r2, [sp, #24]
 802ce06:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802ce0a:	4490      	add	r8, r2
 802ce0c:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802ce0e:	e7df      	b.n	802cdd0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1ac>
 802ce10:	b2e4      	uxtb	r4, r4
 802ce12:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802ce16:	e744      	b.n	802cca2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7e>
 802ce18:	f10d 0924 	add.w	r9, sp, #36	@ 0x24
 802ce1c:	e7bd      	b.n	802cd9a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x176>
 802ce1e:	b2e2      	uxtb	r2, r4
 802ce20:	2e00      	cmp	r6, #0
 802ce22:	9201      	str	r2, [sp, #4]
 802ce24:	f10d 0c24 	add.w	ip, sp, #36	@ 0x24
 802ce28:	f6bf af33 	bge.w	802cc92 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x6e>
 802ce2c:	46e6      	mov	lr, ip
 802ce2e:	46e1      	mov	r9, ip
 802ce30:	4692      	mov	sl, r2
 802ce32:	4614      	mov	r4, r2
 802ce34:	e738      	b.n	802cca8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x84>
 802ce36:	b2e4      	uxtb	r4, r4
 802ce38:	f10d 0e24 	add.w	lr, sp, #36	@ 0x24
 802ce3c:	e734      	b.n	802cca8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x84>
 802ce3e:	4b03      	ldr	r3, [pc, #12]	@ (802ce4c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x228>)
 802ce40:	4a03      	ldr	r2, [pc, #12]	@ (802ce50 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x22c>)
 802ce42:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802ce46:	4803      	ldr	r0, [pc, #12]	@ (802ce54 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x230>)
 802ce48:	f005 fb56 	bl	80324f8 <__assert_func>
 802ce4c:	080366d4 	.word	0x080366d4
 802ce50:	08036d50 	.word	0x08036d50
 802ce54:	0803685c 	.word	0x0803685c

0802ce58 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802ce58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ce5c:	ed2d 8b08 	vpush	{d8-d11}
 802ce60:	b097      	sub	sp, #92	@ 0x5c
 802ce62:	f89d 60c4 	ldrb.w	r6, [sp, #196]	@ 0xc4
 802ce66:	eeb0 aa40 	vmov.f32	s20, s0
 802ce6a:	e9dd b729 	ldrd	fp, r7, [sp, #164]	@ 0xa4
 802ce6e:	e9cd 0614 	strd	r0, r6, [sp, #80]	@ 0x50
 802ce72:	43f0      	mvns	r0, r6
 802ce74:	eef0 9a60 	vmov.f32	s19, s1
 802ce78:	eeb0 9a41 	vmov.f32	s18, s2
 802ce7c:	eef0 8a62 	vmov.f32	s17, s5
 802ce80:	eeb0 8a43 	vmov.f32	s16, s6
 802ce84:	eef0 ba44 	vmov.f32	s23, s8
 802ce88:	eeb0 ba64 	vmov.f32	s22, s9
 802ce8c:	eef0 aa45 	vmov.f32	s21, s10
 802ce90:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802ce94:	e9dd 512d 	ldrd	r5, r1, [sp, #180]	@ 0xb4
 802ce98:	461a      	mov	r2, r3
 802ce9a:	686c      	ldr	r4, [r5, #4]
 802ce9c:	9b2f      	ldr	r3, [sp, #188]	@ 0xbc
 802ce9e:	f8dd 90ac 	ldr.w	r9, [sp, #172]	@ 0xac
 802cea2:	fb04 1303 	mla	r3, r4, r3, r1
 802cea6:	9c30      	ldr	r4, [sp, #192]	@ 0xc0
 802cea8:	6829      	ldr	r1, [r5, #0]
 802ceaa:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802ceae:	6865      	ldr	r5, [r4, #4]
 802ceb0:	eb01 0a03 	add.w	sl, r1, r3
 802ceb4:	b2c3      	uxtb	r3, r0
 802ceb6:	6824      	ldr	r4, [r4, #0]
 802ceb8:	9309      	str	r3, [sp, #36]	@ 0x24
 802ceba:	1d2b      	adds	r3, r5, #4
 802cebc:	930a      	str	r3, [sp, #40]	@ 0x28
 802cebe:	b2b3      	uxth	r3, r6
 802cec0:	940d      	str	r4, [sp, #52]	@ 0x34
 802cec2:	930b      	str	r3, [sp, #44]	@ 0x2c
 802cec4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802cec6:	2b00      	cmp	r3, #0
 802cec8:	dc02      	bgt.n	802ced0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802ceca:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802cecc:	2b00      	cmp	r3, #0
 802cece:	dd63      	ble.n	802cf98 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802ced0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802ced2:	2a00      	cmp	r2, #0
 802ced4:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 802ced8:	b234      	sxth	r4, r6
 802ceda:	fa0f fc8e 	sxth.w	ip, lr
 802cede:	f340 825b 	ble.w	802d398 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 802cee2:	f8cd e020 	str.w	lr, [sp, #32]
 802cee6:	f8dd e0b0 	ldr.w	lr, [sp, #176]	@ 0xb0
 802ceea:	1e65      	subs	r5, r4, #1
 802ceec:	f10c 38ff 	add.w	r8, ip, #4294967295
 802cef0:	ea5f 432b 	movs.w	r3, fp, asr #16
 802cef4:	ea4f 4127 	mov.w	r1, r7, asr #16
 802cef8:	d405      	bmi.n	802cf06 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802cefa:	42ab      	cmp	r3, r5
 802cefc:	da03      	bge.n	802cf06 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802cefe:	2900      	cmp	r1, #0
 802cf00:	db01      	blt.n	802cf06 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802cf02:	4541      	cmp	r1, r8
 802cf04:	db4d      	blt.n	802cfa2 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802cf06:	1c58      	adds	r0, r3, #1
 802cf08:	d406      	bmi.n	802cf18 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802cf0a:	42a0      	cmp	r0, r4
 802cf0c:	dc04      	bgt.n	802cf18 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802cf0e:	1c48      	adds	r0, r1, #1
 802cf10:	d402      	bmi.n	802cf18 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802cf12:	4560      	cmp	r0, ip
 802cf14:	f340 819b 	ble.w	802d24e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802cf18:	3a01      	subs	r2, #1
 802cf1a:	44cb      	add	fp, r9
 802cf1c:	4477      	add	r7, lr
 802cf1e:	f10a 0a03 	add.w	sl, sl, #3
 802cf22:	d1e5      	bne.n	802cef0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802cf24:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802cf26:	2b00      	cmp	r3, #0
 802cf28:	dd36      	ble.n	802cf98 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802cf2a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802cf2e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802cf32:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802cf36:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802cf3a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802cf3e:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802cf42:	ee69 7a27 	vmul.f32	s15, s18, s15
 802cf46:	ee76 6a68 	vsub.f32	s13, s12, s17
 802cf4a:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802cf4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802cf52:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802cf56:	ee16 2a90 	vmov	r2, s13
 802cf5a:	3b01      	subs	r3, #1
 802cf5c:	930e      	str	r3, [sp, #56]	@ 0x38
 802cf5e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802cf60:	fb92 f9f3 	sdiv	r9, r2, r3
 802cf64:	ee17 2a10 	vmov	r2, s14
 802cf68:	eeb0 7a48 	vmov.f32	s14, s16
 802cf6c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802cf70:	ee17 7a10 	vmov	r7, s14
 802cf74:	eeb0 7a68 	vmov.f32	s14, s17
 802cf78:	fb92 f3f3 	sdiv	r3, r2, r3
 802cf7c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802cf80:	932c      	str	r3, [sp, #176]	@ 0xb0
 802cf82:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802cf84:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802cf86:	ee17 ba10 	vmov	fp, s14
 802cf8a:	eeb0 8a67 	vmov.f32	s16, s15
 802cf8e:	eef0 8a46 	vmov.f32	s17, s12
 802cf92:	bf18      	it	ne
 802cf94:	461a      	movne	r2, r3
 802cf96:	e795      	b.n	802cec4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802cf98:	b017      	add	sp, #92	@ 0x5c
 802cf9a:	ecbd 8b08 	vpop	{d8-d11}
 802cf9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cfa2:	f8dd e020 	ldr.w	lr, [sp, #32]
 802cfa6:	1e51      	subs	r1, r2, #1
 802cfa8:	fb09 b301 	mla	r3, r9, r1, fp
 802cfac:	141b      	asrs	r3, r3, #16
 802cfae:	9108      	str	r1, [sp, #32]
 802cfb0:	f100 80e7 	bmi.w	802d182 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cfb4:	42ab      	cmp	r3, r5
 802cfb6:	f280 80e4 	bge.w	802d182 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cfba:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802cfbc:	fb03 7301 	mla	r3, r3, r1, r7
 802cfc0:	141b      	asrs	r3, r3, #16
 802cfc2:	f100 80de 	bmi.w	802d182 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cfc6:	f10c 3cff 	add.w	ip, ip, #4294967295
 802cfca:	4563      	cmp	r3, ip
 802cfcc:	f280 80d9 	bge.w	802d182 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802cfd0:	2a00      	cmp	r2, #0
 802cfd2:	dda7      	ble.n	802cf24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802cfd4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802cfd8:	eb0a 0302 	add.w	r3, sl, r2
 802cfdc:	930c      	str	r3, [sp, #48]	@ 0x30
 802cfde:	f10a 0c03 	add.w	ip, sl, #3
 802cfe2:	e9cd 792a 	strd	r7, r9, [sp, #168]	@ 0xa8
 802cfe6:	463b      	mov	r3, r7
 802cfe8:	e09a      	b.n	802d120 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 802cfea:	784d      	ldrb	r5, [r1, #1]
 802cfec:	1908      	adds	r0, r1, r4
 802cfee:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802cff2:	4435      	add	r5, r6
 802cff4:	2a00      	cmp	r2, #0
 802cff6:	f000 80b5 	beq.w	802d164 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802cffa:	5d0c      	ldrb	r4, [r1, r4]
 802cffc:	f890 e001 	ldrb.w	lr, [r0, #1]
 802d000:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d004:	19a1      	adds	r1, r4, r6
 802d006:	9108      	str	r1, [sp, #32]
 802d008:	4631      	mov	r1, r6
 802d00a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d00e:	9f08      	ldr	r7, [sp, #32]
 802d010:	44b6      	add	lr, r6
 802d012:	b29b      	uxth	r3, r3
 802d014:	b292      	uxth	r2, r2
 802d016:	fb03 f602 	mul.w	r6, r3, r2
 802d01a:	011b      	lsls	r3, r3, #4
 802d01c:	f895 9000 	ldrb.w	r9, [r5]
 802d020:	1b98      	subs	r0, r3, r6
 802d022:	b280      	uxth	r0, r0
 802d024:	fb00 f909 	mul.w	r9, r0, r9
 802d028:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802d02c:	b292      	uxth	r2, r2
 802d02e:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d032:	f811 100a 	ldrb.w	r1, [r1, sl]
 802d036:	1a9b      	subs	r3, r3, r2
 802d038:	b29b      	uxth	r3, r3
 802d03a:	fb03 9101 	mla	r1, r3, r1, r9
 802d03e:	f897 9000 	ldrb.w	r9, [r7]
 802d042:	9c2b      	ldr	r4, [sp, #172]	@ 0xac
 802d044:	fb02 1109 	mla	r1, r2, r9, r1
 802d048:	f89e a000 	ldrb.w	sl, [lr]
 802d04c:	f81c 9c03 	ldrb.w	r9, [ip, #-3]
 802d050:	44a3      	add	fp, r4
 802d052:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d054:	fb06 110a 	mla	r1, r6, sl, r1
 802d058:	fb19 f904 	smulbb	r9, r9, r4
 802d05c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802d05e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d062:	fb01 9904 	mla	r9, r1, r4, r9
 802d066:	fa1f f989 	uxth.w	r9, r9
 802d06a:	f109 0101 	add.w	r1, r9, #1
 802d06e:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802d072:	ea4f 2929 	mov.w	r9, r9, asr #8
 802d076:	f80c 9c03 	strb.w	r9, [ip, #-3]
 802d07a:	7869      	ldrb	r1, [r5, #1]
 802d07c:	f898 9001 	ldrb.w	r9, [r8, #1]
 802d080:	fb00 f101 	mul.w	r1, r0, r1
 802d084:	9c08      	ldr	r4, [sp, #32]
 802d086:	fb03 1109 	mla	r1, r3, r9, r1
 802d08a:	f894 9001 	ldrb.w	r9, [r4, #1]
 802d08e:	9f2c      	ldr	r7, [sp, #176]	@ 0xb0
 802d090:	9c2a      	ldr	r4, [sp, #168]	@ 0xa8
 802d092:	fb02 1109 	mla	r1, r2, r9, r1
 802d096:	f89e a001 	ldrb.w	sl, [lr, #1]
 802d09a:	443c      	add	r4, r7
 802d09c:	f81c 9c02 	ldrb.w	r9, [ip, #-2]
 802d0a0:	942a      	str	r4, [sp, #168]	@ 0xa8
 802d0a2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d0a4:	fb06 110a 	mla	r1, r6, sl, r1
 802d0a8:	fb19 f904 	smulbb	r9, r9, r4
 802d0ac:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 802d0ae:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d0b2:	fb01 9907 	mla	r9, r1, r7, r9
 802d0b6:	fa1f f989 	uxth.w	r9, r9
 802d0ba:	f109 0101 	add.w	r1, r9, #1
 802d0be:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802d0c2:	ea4f 2929 	mov.w	r9, r9, asr #8
 802d0c6:	f80c 9c02 	strb.w	r9, [ip, #-2]
 802d0ca:	78a9      	ldrb	r1, [r5, #2]
 802d0cc:	f898 5002 	ldrb.w	r5, [r8, #2]
 802d0d0:	fb00 f001 	mul.w	r0, r0, r1
 802d0d4:	fb03 0005 	mla	r0, r3, r5, r0
 802d0d8:	9b08      	ldr	r3, [sp, #32]
 802d0da:	f89e 4002 	ldrb.w	r4, [lr, #2]
 802d0de:	789b      	ldrb	r3, [r3, #2]
 802d0e0:	f81c ec01 	ldrb.w	lr, [ip, #-1]
 802d0e4:	fb02 0003 	mla	r0, r2, r3, r0
 802d0e8:	fb06 0004 	mla	r0, r6, r4, r0
 802d0ec:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802d0ee:	fb1e f404 	smulbb	r4, lr, r4
 802d0f2:	f3c0 2e07 	ubfx	lr, r0, #8, #8
 802d0f6:	fb0e 4e07 	mla	lr, lr, r7, r4
 802d0fa:	fa1f fe8e 	uxth.w	lr, lr
 802d0fe:	f10e 0301 	add.w	r3, lr, #1
 802d102:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 802d106:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802d108:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802d10c:	4563      	cmp	r3, ip
 802d10e:	f80c ec01 	strb.w	lr, [ip, #-1]
 802d112:	d034      	beq.n	802d17e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 802d114:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802d116:	f10c 0c03 	add.w	ip, ip, #3
 802d11a:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 802d11e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802d120:	1419      	asrs	r1, r3, #16
 802d122:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d126:	fb04 3101 	mla	r1, r4, r1, r3
 802d12a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802d12c:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802d12e:	f812 a001 	ldrb.w	sl, [r2, r1]
 802d132:	4411      	add	r1, r2
 802d134:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 802d136:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802d13a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802d13e:	eb06 080a 	add.w	r8, r6, sl
 802d142:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802d146:	2b00      	cmp	r3, #0
 802d148:	f47f af4f 	bne.w	802cfea <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 802d14c:	b182      	cbz	r2, 802d170 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802d14e:	5d0c      	ldrb	r4, [r1, r4]
 802d150:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802d152:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d156:	1861      	adds	r1, r4, r1
 802d158:	9108      	str	r1, [sp, #32]
 802d15a:	46c6      	mov	lr, r8
 802d15c:	4645      	mov	r5, r8
 802d15e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802d160:	9f08      	ldr	r7, [sp, #32]
 802d162:	e756      	b.n	802d012 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d164:	46c6      	mov	lr, r8
 802d166:	f8cd 8020 	str.w	r8, [sp, #32]
 802d16a:	4631      	mov	r1, r6
 802d16c:	4647      	mov	r7, r8
 802d16e:	e750      	b.n	802d012 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d170:	46c6      	mov	lr, r8
 802d172:	f8cd 8020 	str.w	r8, [sp, #32]
 802d176:	4645      	mov	r5, r8
 802d178:	4631      	mov	r1, r6
 802d17a:	4647      	mov	r7, r8
 802d17c:	e749      	b.n	802d012 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802d17e:	469a      	mov	sl, r3
 802d180:	e6d0      	b.n	802cf24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d182:	2a00      	cmp	r2, #0
 802d184:	f77f aece 	ble.w	802cf24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d188:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802d18c:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d190:	1439      	asrs	r1, r7, #16
 802d192:	4654      	mov	r4, sl
 802d194:	9d30      	ldr	r5, [sp, #192]	@ 0xc0
 802d196:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
 802d19a:	2b00      	cmp	r3, #0
 802d19c:	f3cb 3003 	ubfx	r0, fp, #12, #4
 802d1a0:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802d1a4:	db2f      	blt.n	802d206 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d1a6:	f106 3cff 	add.w	ip, r6, #4294967295
 802d1aa:	4563      	cmp	r3, ip
 802d1ac:	da2b      	bge.n	802d206 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d1ae:	2900      	cmp	r1, #0
 802d1b0:	db29      	blt.n	802d206 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d1b2:	f10e 3cff 	add.w	ip, lr, #4294967295
 802d1b6:	4561      	cmp	r1, ip
 802d1b8:	da25      	bge.n	802d206 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802d1ba:	fa0f fa86 	sxth.w	sl, r6
 802d1be:	fb01 330a 	mla	r3, r1, sl, r3
 802d1c2:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802d1c4:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802d1c6:	f811 e003 	ldrb.w	lr, [r1, r3]
 802d1ca:	440b      	add	r3, r1
 802d1cc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d1d0:	eb06 0c0e 	add.w	ip, r6, lr
 802d1d4:	2800      	cmp	r0, #0
 802d1d6:	d052      	beq.n	802d27e <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x426>
 802d1d8:	7859      	ldrb	r1, [r3, #1]
 802d1da:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d1de:	1871      	adds	r1, r6, r1
 802d1e0:	910c      	str	r1, [sp, #48]	@ 0x30
 802d1e2:	2a00      	cmp	r2, #0
 802d1e4:	f000 80d5 	beq.w	802d392 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53a>
 802d1e8:	eb03 010a 	add.w	r1, r3, sl
 802d1ec:	7849      	ldrb	r1, [r1, #1]
 802d1ee:	f813 300a 	ldrb.w	r3, [r3, sl]
 802d1f2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d1f6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d1fa:	1871      	adds	r1, r6, r1
 802d1fc:	18f3      	adds	r3, r6, r3
 802d1fe:	9110      	str	r1, [sp, #64]	@ 0x40
 802d200:	9311      	str	r3, [sp, #68]	@ 0x44
 802d202:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d204:	e042      	b.n	802d28c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d206:	f113 0c01 	adds.w	ip, r3, #1
 802d20a:	d406      	bmi.n	802d21a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d20c:	45b4      	cmp	ip, r6
 802d20e:	dc04      	bgt.n	802d21a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d210:	f111 0c01 	adds.w	ip, r1, #1
 802d214:	d401      	bmi.n	802d21a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d216:	45f4      	cmp	ip, lr
 802d218:	dd1f      	ble.n	802d25a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x402>
 802d21a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802d21c:	f1b8 0f00 	cmp.w	r8, #0
 802d220:	f104 0403 	add.w	r4, r4, #3
 802d224:	44cb      	add	fp, r9
 802d226:	441f      	add	r7, r3
 802d228:	dd07      	ble.n	802d23a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802d22a:	e9d5 6e02 	ldrd	r6, lr, [r5, #8]
 802d22e:	f108 38ff 	add.w	r8, r8, #4294967295
 802d232:	ea4f 432b 	mov.w	r3, fp, asr #16
 802d236:	1439      	asrs	r1, r7, #16
 802d238:	e7af      	b.n	802d19a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d23a:	9b08      	ldr	r3, [sp, #32]
 802d23c:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 802d240:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802d244:	3301      	adds	r3, #1
 802d246:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d24a:	449a      	add	sl, r3
 802d24c:	e66a      	b.n	802cf24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d24e:	3a01      	subs	r2, #1
 802d250:	f8dd e020 	ldr.w	lr, [sp, #32]
 802d254:	4690      	mov	r8, r2
 802d256:	9208      	str	r2, [sp, #32]
 802d258:	e79b      	b.n	802d192 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802d25a:	fa0f fe8e 	sxth.w	lr, lr
 802d25e:	b236      	sxth	r6, r6
 802d260:	e9cd 6e00 	strd	r6, lr, [sp]
 802d264:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 802d266:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802d26a:	e9cd 2605 	strd	r2, r6, [sp, #20]
 802d26e:	9302      	str	r3, [sp, #8]
 802d270:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802d272:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d274:	4621      	mov	r1, r4
 802d276:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802d278:	f7ff fcd4 	bl	802cc24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>
 802d27c:	e7cd      	b.n	802d21a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d27e:	2a00      	cmp	r2, #0
 802d280:	d17b      	bne.n	802d37a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x522>
 802d282:	4661      	mov	r1, ip
 802d284:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 802d288:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802d28c:	b283      	uxth	r3, r0
 802d28e:	b292      	uxth	r2, r2
 802d290:	fb03 f602 	mul.w	r6, r3, r2
 802d294:	011b      	lsls	r3, r3, #4
 802d296:	7809      	ldrb	r1, [r1, #0]
 802d298:	1b98      	subs	r0, r3, r6
 802d29a:	b280      	uxth	r0, r0
 802d29c:	9012      	str	r0, [sp, #72]	@ 0x48
 802d29e:	fb00 f101 	mul.w	r1, r0, r1
 802d2a2:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802d2a6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802d2a8:	b292      	uxth	r2, r2
 802d2aa:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d2ae:	f810 e00e 	ldrb.w	lr, [r0, lr]
 802d2b2:	1a9b      	subs	r3, r3, r2
 802d2b4:	b29b      	uxth	r3, r3
 802d2b6:	fb03 110e 	mla	r1, r3, lr, r1
 802d2ba:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d2bc:	f890 a000 	ldrb.w	sl, [r0]
 802d2c0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802d2c2:	fb02 110a 	mla	r1, r2, sl, r1
 802d2c6:	f890 e000 	ldrb.w	lr, [r0]
 802d2ca:	f894 a000 	ldrb.w	sl, [r4]
 802d2ce:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d2d0:	fb06 110e 	mla	r1, r6, lr, r1
 802d2d4:	fb1a fa00 	smulbb	sl, sl, r0
 802d2d8:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d2da:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d2de:	fb01 a100 	mla	r1, r1, r0, sl
 802d2e2:	b289      	uxth	r1, r1
 802d2e4:	f101 0e01 	add.w	lr, r1, #1
 802d2e8:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802d2ec:	1209      	asrs	r1, r1, #8
 802d2ee:	7021      	strb	r1, [r4, #0]
 802d2f0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d2f2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802d2f4:	7849      	ldrb	r1, [r1, #1]
 802d2f6:	f89c e001 	ldrb.w	lr, [ip, #1]
 802d2fa:	fb00 f101 	mul.w	r1, r0, r1
 802d2fe:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d300:	fb03 110e 	mla	r1, r3, lr, r1
 802d304:	f890 a001 	ldrb.w	sl, [r0, #1]
 802d308:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802d30a:	fb02 110a 	mla	r1, r2, sl, r1
 802d30e:	f890 e001 	ldrb.w	lr, [r0, #1]
 802d312:	f894 a001 	ldrb.w	sl, [r4, #1]
 802d316:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d318:	fb06 110e 	mla	r1, r6, lr, r1
 802d31c:	fb1a fa00 	smulbb	sl, sl, r0
 802d320:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d322:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802d326:	fb01 a100 	mla	r1, r1, r0, sl
 802d32a:	b289      	uxth	r1, r1
 802d32c:	f101 0e01 	add.w	lr, r1, #1
 802d330:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802d334:	1209      	asrs	r1, r1, #8
 802d336:	7061      	strb	r1, [r4, #1]
 802d338:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802d33a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802d33c:	7889      	ldrb	r1, [r1, #2]
 802d33e:	f89c c002 	ldrb.w	ip, [ip, #2]
 802d342:	fb00 f001 	mul.w	r0, r0, r1
 802d346:	fb03 010c 	mla	r1, r3, ip, r0
 802d34a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d34c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802d34e:	7880      	ldrb	r0, [r0, #2]
 802d350:	789b      	ldrb	r3, [r3, #2]
 802d352:	fb02 1100 	mla	r1, r2, r0, r1
 802d356:	78a2      	ldrb	r2, [r4, #2]
 802d358:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802d35a:	fb06 1303 	mla	r3, r6, r3, r1
 802d35e:	fb12 f200 	smulbb	r2, r2, r0
 802d362:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802d364:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802d368:	fb03 2300 	mla	r3, r3, r0, r2
 802d36c:	b29b      	uxth	r3, r3
 802d36e:	1c5a      	adds	r2, r3, #1
 802d370:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802d374:	121b      	asrs	r3, r3, #8
 802d376:	70a3      	strb	r3, [r4, #2]
 802d378:	e74f      	b.n	802d21a <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802d37a:	f813 300a 	ldrb.w	r3, [r3, sl]
 802d37e:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802d382:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d386:	18f3      	adds	r3, r6, r3
 802d388:	9311      	str	r3, [sp, #68]	@ 0x44
 802d38a:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802d38e:	4661      	mov	r1, ip
 802d390:	e77c      	b.n	802d28c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d392:	e9cd cc10 	strd	ip, ip, [sp, #64]	@ 0x40
 802d396:	e779      	b.n	802d28c <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 802d398:	f43f adc4 	beq.w	802cf24 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xcc>
 802d39c:	1e65      	subs	r5, r4, #1
 802d39e:	e602      	b.n	802cfa6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>

0802d3a0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>:
 802d3a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d3a4:	b083      	sub	sp, #12
 802d3a6:	f9bd 8030 	ldrsh.w	r8, [sp, #48]	@ 0x30
 802d3aa:	f891 9001 	ldrb.w	r9, [r1, #1]
 802d3ae:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	@ 0x38
 802d3b2:	7888      	ldrb	r0, [r1, #2]
 802d3b4:	fb07 6c08 	mla	ip, r7, r8, r6
 802d3b8:	ea4f 2909 	mov.w	r9, r9, lsl #8
 802d3bc:	780c      	ldrb	r4, [r1, #0]
 802d3be:	ea49 4900 	orr.w	r9, r9, r0, lsl #16
 802d3c2:	ea49 0404 	orr.w	r4, r9, r4
 802d3c6:	2f00      	cmp	r7, #0
 802d3c8:	9401      	str	r4, [sp, #4]
 802d3ca:	eb02 090c 	add.w	r9, r2, ip
 802d3ce:	f107 0e01 	add.w	lr, r7, #1
 802d3d2:	f9bd a034 	ldrsh.w	sl, [sp, #52]	@ 0x34
 802d3d6:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 802d3da:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 802d3de:	db01      	blt.n	802d3e4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x44>
 802d3e0:	45ba      	cmp	sl, r7
 802d3e2:	dc6e      	bgt.n	802d4c2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x122>
 802d3e4:	fa5f fb84 	uxtb.w	fp, r4
 802d3e8:	af01      	add	r7, sp, #4
 802d3ea:	465a      	mov	r2, fp
 802d3ec:	46bc      	mov	ip, r7
 802d3ee:	f1be 0f00 	cmp.w	lr, #0
 802d3f2:	db01      	blt.n	802d3f8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x58>
 802d3f4:	45f2      	cmp	sl, lr
 802d3f6:	dc49      	bgt.n	802d48c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xec>
 802d3f8:	fa5f fa84 	uxtb.w	sl, r4
 802d3fc:	ab01      	add	r3, sp, #4
 802d3fe:	46d1      	mov	r9, sl
 802d400:	469e      	mov	lr, r3
 802d402:	280f      	cmp	r0, #15
 802d404:	f200 8098 	bhi.w	802d538 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d408:	2d0f      	cmp	r5, #15
 802d40a:	f200 8095 	bhi.w	802d538 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d40e:	b280      	uxth	r0, r0
 802d410:	b2ad      	uxth	r5, r5
 802d412:	fb00 f805 	mul.w	r8, r0, r5
 802d416:	0104      	lsls	r4, r0, #4
 802d418:	eba4 0608 	sub.w	r6, r4, r8
 802d41c:	b2b6      	uxth	r6, r6
 802d41e:	fb06 f002 	mul.w	r0, r6, r2
 802d422:	ebc8 1505 	rsb	r5, r8, r5, lsl #4
 802d426:	b2ad      	uxth	r5, r5
 802d428:	f5c4 7280 	rsb	r2, r4, #256	@ 0x100
 802d42c:	1b52      	subs	r2, r2, r5
 802d42e:	b292      	uxth	r2, r2
 802d430:	fb02 000b 	mla	r0, r2, fp, r0
 802d434:	fb05 000a 	mla	r0, r5, sl, r0
 802d438:	fb08 0009 	mla	r0, r8, r9, r0
 802d43c:	1200      	asrs	r0, r0, #8
 802d43e:	7008      	strb	r0, [r1, #0]
 802d440:	f897 9001 	ldrb.w	r9, [r7, #1]
 802d444:	f89c 4001 	ldrb.w	r4, [ip, #1]
 802d448:	fb06 f909 	mul.w	r9, r6, r9
 802d44c:	fb02 9904 	mla	r9, r2, r4, r9
 802d450:	f89e 4001 	ldrb.w	r4, [lr, #1]
 802d454:	7858      	ldrb	r0, [r3, #1]
 802d456:	fb05 9404 	mla	r4, r5, r4, r9
 802d45a:	fb08 4000 	mla	r0, r8, r0, r4
 802d45e:	1200      	asrs	r0, r0, #8
 802d460:	7048      	strb	r0, [r1, #1]
 802d462:	78bc      	ldrb	r4, [r7, #2]
 802d464:	f89c 0002 	ldrb.w	r0, [ip, #2]
 802d468:	fb06 f604 	mul.w	r6, r6, r4
 802d46c:	fb02 6600 	mla	r6, r2, r0, r6
 802d470:	f89e 0002 	ldrb.w	r0, [lr, #2]
 802d474:	789b      	ldrb	r3, [r3, #2]
 802d476:	fb05 6500 	mla	r5, r5, r0, r6
 802d47a:	fb08 5803 	mla	r8, r8, r3, r5
 802d47e:	ea4f 2828 	mov.w	r8, r8, asr #8
 802d482:	f881 8002 	strb.w	r8, [r1, #2]
 802d486:	b003      	add	sp, #12
 802d488:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d48c:	b385      	cbz	r5, 802d4f0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x150>
 802d48e:	2e00      	cmp	r6, #0
 802d490:	db40      	blt.n	802d514 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x174>
 802d492:	45b0      	cmp	r8, r6
 802d494:	dd3e      	ble.n	802d514 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x174>
 802d496:	f819 e008 	ldrb.w	lr, [r9, r8]
 802d49a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d49e:	449e      	add	lr, r3
 802d4a0:	3601      	adds	r6, #1
 802d4a2:	f89e a000 	ldrb.w	sl, [lr]
 802d4a6:	d431      	bmi.n	802d50c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x16c>
 802d4a8:	45b0      	cmp	r8, r6
 802d4aa:	dd2f      	ble.n	802d50c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x16c>
 802d4ac:	2800      	cmp	r0, #0
 802d4ae:	d03f      	beq.n	802d530 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x190>
 802d4b0:	44c8      	add	r8, r9
 802d4b2:	f898 4001 	ldrb.w	r4, [r8, #1]
 802d4b6:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d4ba:	f813 9004 	ldrb.w	r9, [r3, r4]
 802d4be:	4423      	add	r3, r4
 802d4c0:	e79f      	b.n	802d402 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x62>
 802d4c2:	2e00      	cmp	r6, #0
 802d4c4:	db01      	blt.n	802d4ca <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12a>
 802d4c6:	45b0      	cmp	r8, r6
 802d4c8:	dc1a      	bgt.n	802d500 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x160>
 802d4ca:	f10d 0c04 	add.w	ip, sp, #4
 802d4ce:	1c72      	adds	r2, r6, #1
 802d4d0:	f89c b000 	ldrb.w	fp, [ip]
 802d4d4:	d409      	bmi.n	802d4ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x14a>
 802d4d6:	4590      	cmp	r8, r2
 802d4d8:	dd07      	ble.n	802d4ea <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x14a>
 802d4da:	b1f0      	cbz	r0, 802d51a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x17a>
 802d4dc:	f899 7001 	ldrb.w	r7, [r9, #1]
 802d4e0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802d4e4:	5dda      	ldrb	r2, [r3, r7]
 802d4e6:	441f      	add	r7, r3
 802d4e8:	e781      	b.n	802d3ee <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 802d4ea:	b2e2      	uxtb	r2, r4
 802d4ec:	af01      	add	r7, sp, #4
 802d4ee:	e77e      	b.n	802d3ee <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 802d4f0:	280f      	cmp	r0, #15
 802d4f2:	fa5f fa84 	uxtb.w	sl, r4
 802d4f6:	d81f      	bhi.n	802d538 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x198>
 802d4f8:	ab01      	add	r3, sp, #4
 802d4fa:	469e      	mov	lr, r3
 802d4fc:	46d1      	mov	r9, sl
 802d4fe:	e786      	b.n	802d40e <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x6e>
 802d500:	f812 c00c 	ldrb.w	ip, [r2, ip]
 802d504:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802d508:	449c      	add	ip, r3
 802d50a:	e7e0      	b.n	802d4ce <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x12e>
 802d50c:	fa5f f984 	uxtb.w	r9, r4
 802d510:	ab01      	add	r3, sp, #4
 802d512:	e776      	b.n	802d402 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x62>
 802d514:	f10d 0e04 	add.w	lr, sp, #4
 802d518:	e7c2      	b.n	802d4a0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x100>
 802d51a:	f1be 0f00 	cmp.w	lr, #0
 802d51e:	b2e2      	uxtb	r2, r4
 802d520:	af01      	add	r7, sp, #4
 802d522:	f6bf af67 	bge.w	802d3f4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x54>
 802d526:	463b      	mov	r3, r7
 802d528:	46be      	mov	lr, r7
 802d52a:	4691      	mov	r9, r2
 802d52c:	4692      	mov	sl, r2
 802d52e:	e76b      	b.n	802d408 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 802d530:	fa5f f984 	uxtb.w	r9, r4
 802d534:	ab01      	add	r3, sp, #4
 802d536:	e767      	b.n	802d408 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x68>
 802d538:	4b03      	ldr	r3, [pc, #12]	@ (802d548 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1a8>)
 802d53a:	4a04      	ldr	r2, [pc, #16]	@ (802d54c <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1ac>)
 802d53c:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802d540:	4803      	ldr	r0, [pc, #12]	@ (802d550 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x1b0>)
 802d542:	f004 ffd9 	bl	80324f8 <__assert_func>
 802d546:	bf00      	nop
 802d548:	080366d4 	.word	0x080366d4
 802d54c:	08036d50 	.word	0x08036d50
 802d550:	0803685c 	.word	0x0803685c

0802d554 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802d554:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d558:	ed2d 8b0a 	vpush	{d8-d12}
 802d55c:	eeb0 aa40 	vmov.f32	s20, s0
 802d560:	eef0 9a60 	vmov.f32	s19, s1
 802d564:	eeb0 9a41 	vmov.f32	s18, s2
 802d568:	eef0 8a62 	vmov.f32	s17, s5
 802d56c:	eeb0 8a43 	vmov.f32	s16, s6
 802d570:	eeb0 ca44 	vmov.f32	s24, s8
 802d574:	eef0 ba64 	vmov.f32	s23, s9
 802d578:	eeb0 ba45 	vmov.f32	s22, s10
 802d57c:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802d580:	b093      	sub	sp, #76	@ 0x4c
 802d582:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802d586:	e9dd 412b 	ldrd	r4, r1, [sp, #172]	@ 0xac
 802d58a:	e9dd 9b27 	ldrd	r9, fp, [sp, #156]	@ 0x9c
 802d58e:	9011      	str	r0, [sp, #68]	@ 0x44
 802d590:	461a      	mov	r2, r3
 802d592:	6860      	ldr	r0, [r4, #4]
 802d594:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802d596:	fb00 1803 	mla	r8, r0, r3, r1
 802d59a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d59c:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 802d59e:	6821      	ldr	r1, [r4, #0]
 802d5a0:	685b      	ldr	r3, [r3, #4]
 802d5a2:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802d5a6:	6800      	ldr	r0, [r0, #0]
 802d5a8:	eb01 0a08 	add.w	sl, r1, r8
 802d5ac:	3304      	adds	r3, #4
 802d5ae:	f8dd 80a4 	ldr.w	r8, [sp, #164]	@ 0xa4
 802d5b2:	9009      	str	r0, [sp, #36]	@ 0x24
 802d5b4:	9307      	str	r3, [sp, #28]
 802d5b6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d5b8:	2b00      	cmp	r3, #0
 802d5ba:	dc02      	bgt.n	802d5c2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802d5bc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802d5be:	2b00      	cmp	r3, #0
 802d5c0:	dd61      	ble.n	802d686 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802d5c2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d5c4:	2a00      	cmp	r2, #0
 802d5c6:	e9d3 6e02 	ldrd	r6, lr, [r3, #8]
 802d5ca:	b230      	sxth	r0, r6
 802d5cc:	fa0f f78e 	sxth.w	r7, lr
 802d5d0:	f340 81fe 	ble.w	802d9d0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 802d5d4:	f8cd e018 	str.w	lr, [sp, #24]
 802d5d8:	f8dd e0a8 	ldr.w	lr, [sp, #168]	@ 0xa8
 802d5dc:	1e45      	subs	r5, r0, #1
 802d5de:	f107 3cff 	add.w	ip, r7, #4294967295
 802d5e2:	ea5f 4329 	movs.w	r3, r9, asr #16
 802d5e6:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d5ea:	d405      	bmi.n	802d5f8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d5ec:	42ab      	cmp	r3, r5
 802d5ee:	da03      	bge.n	802d5f8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d5f0:	2900      	cmp	r1, #0
 802d5f2:	db01      	blt.n	802d5f8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802d5f4:	4561      	cmp	r1, ip
 802d5f6:	db4b      	blt.n	802d690 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 802d5f8:	1c5c      	adds	r4, r3, #1
 802d5fa:	d406      	bmi.n	802d60a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d5fc:	4284      	cmp	r4, r0
 802d5fe:	dc04      	bgt.n	802d60a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d600:	1c4c      	adds	r4, r1, #1
 802d602:	d402      	bmi.n	802d60a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802d604:	42bc      	cmp	r4, r7
 802d606:	f340 815e 	ble.w	802d8c6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 802d60a:	3a01      	subs	r2, #1
 802d60c:	44c1      	add	r9, r8
 802d60e:	44f3      	add	fp, lr
 802d610:	f10a 0a03 	add.w	sl, sl, #3
 802d614:	d1e5      	bne.n	802d5e2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802d616:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802d618:	2b00      	cmp	r3, #0
 802d61a:	dd34      	ble.n	802d686 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802d61c:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802d620:	ee79 9aab 	vadd.f32	s19, s19, s23
 802d624:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802d628:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802d62c:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802d630:	ee69 7a27 	vmul.f32	s15, s18, s15
 802d634:	ee76 6a68 	vsub.f32	s13, s12, s17
 802d638:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802d63c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802d640:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d644:	ee16 2a90 	vmov	r2, s13
 802d648:	3b01      	subs	r3, #1
 802d64a:	930a      	str	r3, [sp, #40]	@ 0x28
 802d64c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802d64e:	fb92 f8f3 	sdiv	r8, r2, r3
 802d652:	ee17 2a10 	vmov	r2, s14
 802d656:	eeb0 7a48 	vmov.f32	s14, s16
 802d65a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d65e:	ee17 ba10 	vmov	fp, s14
 802d662:	eeb0 7a68 	vmov.f32	s14, s17
 802d666:	fb92 f3f3 	sdiv	r3, r2, r3
 802d66a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802d66e:	932a      	str	r3, [sp, #168]	@ 0xa8
 802d670:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802d672:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802d674:	ee17 9a10 	vmov	r9, s14
 802d678:	eeb0 8a67 	vmov.f32	s16, s15
 802d67c:	eef0 8a46 	vmov.f32	s17, s12
 802d680:	bf18      	it	ne
 802d682:	461a      	movne	r2, r3
 802d684:	e797      	b.n	802d5b6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 802d686:	b013      	add	sp, #76	@ 0x4c
 802d688:	ecbd 8b0a 	vpop	{d8-d12}
 802d68c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d690:	f8dd e018 	ldr.w	lr, [sp, #24]
 802d694:	1e51      	subs	r1, r2, #1
 802d696:	fb08 9301 	mla	r3, r8, r1, r9
 802d69a:	141b      	asrs	r3, r3, #16
 802d69c:	9106      	str	r1, [sp, #24]
 802d69e:	f100 80aa 	bmi.w	802d7f6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d6a2:	42ab      	cmp	r3, r5
 802d6a4:	f280 80a7 	bge.w	802d7f6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d6a8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802d6aa:	fb03 b301 	mla	r3, r3, r1, fp
 802d6ae:	141b      	asrs	r3, r3, #16
 802d6b0:	f100 80a1 	bmi.w	802d7f6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d6b4:	3f01      	subs	r7, #1
 802d6b6:	42bb      	cmp	r3, r7
 802d6b8:	f280 809d 	bge.w	802d7f6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802d6bc:	2a00      	cmp	r2, #0
 802d6be:	ddaa      	ble.n	802d616 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d6c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802d6c4:	eb0a 0302 	add.w	r3, sl, r2
 802d6c8:	9308      	str	r3, [sp, #32]
 802d6ca:	f10a 0a03 	add.w	sl, sl, #3
 802d6ce:	f8cd 80a4 	str.w	r8, [sp, #164]	@ 0xa4
 802d6d2:	e062      	b.n	802d79a <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 802d6d4:	784c      	ldrb	r4, [r1, #1]
 802d6d6:	180d      	adds	r5, r1, r0
 802d6d8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802d6dc:	4434      	add	r4, r6
 802d6de:	2a00      	cmp	r2, #0
 802d6e0:	d07c      	beq.n	802d7dc <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802d6e2:	5c08      	ldrb	r0, [r1, r0]
 802d6e4:	786f      	ldrb	r7, [r5, #1]
 802d6e6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802d6ea:	1981      	adds	r1, r0, r6
 802d6ec:	4608      	mov	r0, r1
 802d6ee:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802d6f2:	9106      	str	r1, [sp, #24]
 802d6f4:	4437      	add	r7, r6
 802d6f6:	b29b      	uxth	r3, r3
 802d6f8:	b292      	uxth	r2, r2
 802d6fa:	fb03 f502 	mul.w	r5, r3, r2
 802d6fe:	011b      	lsls	r3, r3, #4
 802d700:	f894 e000 	ldrb.w	lr, [r4]
 802d704:	1b59      	subs	r1, r3, r5
 802d706:	b289      	uxth	r1, r1
 802d708:	fb01 fe0e 	mul.w	lr, r1, lr
 802d70c:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802d710:	b292      	uxth	r2, r2
 802d712:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d716:	f816 6008 	ldrb.w	r6, [r6, r8]
 802d71a:	1a9b      	subs	r3, r3, r2
 802d71c:	b29b      	uxth	r3, r3
 802d71e:	fb03 e606 	mla	r6, r3, r6, lr
 802d722:	f890 e000 	ldrb.w	lr, [r0]
 802d726:	f897 8000 	ldrb.w	r8, [r7]
 802d72a:	fb02 660e 	mla	r6, r2, lr, r6
 802d72e:	fb05 6808 	mla	r8, r5, r8, r6
 802d732:	ea4f 2828 	mov.w	r8, r8, asr #8
 802d736:	f80a 8c03 	strb.w	r8, [sl, #-3]
 802d73a:	f894 8001 	ldrb.w	r8, [r4, #1]
 802d73e:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802d740:	fb01 f608 	mul.w	r6, r1, r8
 802d744:	f89c e001 	ldrb.w	lr, [ip, #1]
 802d748:	4481      	add	r9, r0
 802d74a:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 802d74c:	fb03 680e 	mla	r8, r3, lr, r6
 802d750:	4483      	add	fp, r0
 802d752:	9806      	ldr	r0, [sp, #24]
 802d754:	787e      	ldrb	r6, [r7, #1]
 802d756:	f890 e001 	ldrb.w	lr, [r0, #1]
 802d75a:	fb02 8e0e 	mla	lr, r2, lr, r8
 802d75e:	fb05 ee06 	mla	lr, r5, r6, lr
 802d762:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 802d766:	f80a ec02 	strb.w	lr, [sl, #-2]
 802d76a:	78a4      	ldrb	r4, [r4, #2]
 802d76c:	f89c 6002 	ldrb.w	r6, [ip, #2]
 802d770:	fb01 f104 	mul.w	r1, r1, r4
 802d774:	fb03 1106 	mla	r1, r3, r6, r1
 802d778:	7883      	ldrb	r3, [r0, #2]
 802d77a:	78b8      	ldrb	r0, [r7, #2]
 802d77c:	fb02 1103 	mla	r1, r2, r3, r1
 802d780:	fb05 1500 	mla	r5, r5, r0, r1
 802d784:	9b08      	ldr	r3, [sp, #32]
 802d786:	122d      	asrs	r5, r5, #8
 802d788:	4553      	cmp	r3, sl
 802d78a:	f80a 5c01 	strb.w	r5, [sl, #-1]
 802d78e:	d030      	beq.n	802d7f2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 802d790:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802d792:	f10a 0a03 	add.w	sl, sl, #3
 802d796:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802d79a:	ea4f 4329 	mov.w	r3, r9, asr #16
 802d79e:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d7a2:	fb00 3101 	mla	r1, r0, r1, r3
 802d7a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802d7a8:	9e07      	ldr	r6, [sp, #28]
 802d7aa:	f812 8001 	ldrb.w	r8, [r2, r1]
 802d7ae:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802d7b2:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802d7b6:	4411      	add	r1, r2
 802d7b8:	eb06 0c08 	add.w	ip, r6, r8
 802d7bc:	f3cb 3203 	ubfx	r2, fp, #12, #4
 802d7c0:	2b00      	cmp	r3, #0
 802d7c2:	d187      	bne.n	802d6d4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x180>
 802d7c4:	b17a      	cbz	r2, 802d7e6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 802d7c6:	5c08      	ldrb	r0, [r1, r0]
 802d7c8:	9907      	ldr	r1, [sp, #28]
 802d7ca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802d7ce:	1841      	adds	r1, r0, r1
 802d7d0:	4667      	mov	r7, ip
 802d7d2:	9106      	str	r1, [sp, #24]
 802d7d4:	4664      	mov	r4, ip
 802d7d6:	9e07      	ldr	r6, [sp, #28]
 802d7d8:	4608      	mov	r0, r1
 802d7da:	e78c      	b.n	802d6f6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802d7dc:	4667      	mov	r7, ip
 802d7de:	f8cd c018 	str.w	ip, [sp, #24]
 802d7e2:	4660      	mov	r0, ip
 802d7e4:	e787      	b.n	802d6f6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802d7e6:	4667      	mov	r7, ip
 802d7e8:	f8cd c018 	str.w	ip, [sp, #24]
 802d7ec:	4664      	mov	r4, ip
 802d7ee:	4660      	mov	r0, ip
 802d7f0:	e781      	b.n	802d6f6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802d7f2:	469a      	mov	sl, r3
 802d7f4:	e70f      	b.n	802d616 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d7f6:	2a00      	cmp	r2, #0
 802d7f8:	f77f af0d 	ble.w	802d616 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d7fc:	9d06      	ldr	r5, [sp, #24]
 802d7fe:	ea4f 4329 	mov.w	r3, r9, asr #16
 802d802:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d806:	4657      	mov	r7, sl
 802d808:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
 802d80c:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802d80e:	f8dd a0a8 	ldr.w	sl, [sp, #168]	@ 0xa8
 802d812:	2b00      	cmp	r3, #0
 802d814:	f3c9 3003 	ubfx	r0, r9, #12, #4
 802d818:	f3cb 3203 	ubfx	r2, fp, #12, #4
 802d81c:	db31      	blt.n	802d882 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d81e:	f106 3cff 	add.w	ip, r6, #4294967295
 802d822:	4563      	cmp	r3, ip
 802d824:	da2d      	bge.n	802d882 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d826:	2900      	cmp	r1, #0
 802d828:	db2b      	blt.n	802d882 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d82a:	f10e 3cff 	add.w	ip, lr, #4294967295
 802d82e:	4561      	cmp	r1, ip
 802d830:	da27      	bge.n	802d882 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802d832:	fa0f fc86 	sxth.w	ip, r6
 802d836:	fb01 330c 	mla	r3, r1, ip, r3
 802d83a:	9e07      	ldr	r6, [sp, #28]
 802d83c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802d83e:	f811 e003 	ldrb.w	lr, [r1, r3]
 802d842:	440b      	add	r3, r1
 802d844:	4631      	mov	r1, r6
 802d846:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802d84a:	4471      	add	r1, lr
 802d84c:	910e      	str	r1, [sp, #56]	@ 0x38
 802d84e:	2800      	cmp	r0, #0
 802d850:	d04f      	beq.n	802d8f2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802d852:	7859      	ldrb	r1, [r3, #1]
 802d854:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d858:	1871      	adds	r1, r6, r1
 802d85a:	9108      	str	r1, [sp, #32]
 802d85c:	2a00      	cmp	r2, #0
 802d85e:	f000 80b2 	beq.w	802d9c6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 802d862:	eb03 010c 	add.w	r1, r3, ip
 802d866:	f813 600c 	ldrb.w	r6, [r3, ip]
 802d86a:	7849      	ldrb	r1, [r1, #1]
 802d86c:	9b07      	ldr	r3, [sp, #28]
 802d86e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802d872:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802d876:	1859      	adds	r1, r3, r1
 802d878:	18f3      	adds	r3, r6, r3
 802d87a:	910c      	str	r1, [sp, #48]	@ 0x30
 802d87c:	930d      	str	r3, [sp, #52]	@ 0x34
 802d87e:	9e08      	ldr	r6, [sp, #32]
 802d880:	e03d      	b.n	802d8fe <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802d882:	f113 0c01 	adds.w	ip, r3, #1
 802d886:	d406      	bmi.n	802d896 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d888:	45b4      	cmp	ip, r6
 802d88a:	dc04      	bgt.n	802d896 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d88c:	f111 0c01 	adds.w	ip, r1, #1
 802d890:	d401      	bmi.n	802d896 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d892:	45f4      	cmp	ip, lr
 802d894:	dd1d      	ble.n	802d8d2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802d896:	2d00      	cmp	r5, #0
 802d898:	f107 0703 	add.w	r7, r7, #3
 802d89c:	44c1      	add	r9, r8
 802d89e:	44d3      	add	fp, sl
 802d8a0:	dd07      	ble.n	802d8b2 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802d8a2:	e9d4 6e02 	ldrd	r6, lr, [r4, #8]
 802d8a6:	3d01      	subs	r5, #1
 802d8a8:	ea4f 4329 	mov.w	r3, r9, asr #16
 802d8ac:	ea4f 412b 	mov.w	r1, fp, asr #16
 802d8b0:	e7af      	b.n	802d812 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802d8b2:	9b06      	ldr	r3, [sp, #24]
 802d8b4:	f8dd a03c 	ldr.w	sl, [sp, #60]	@ 0x3c
 802d8b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802d8bc:	3301      	adds	r3, #1
 802d8be:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802d8c2:	449a      	add	sl, r3
 802d8c4:	e6a7      	b.n	802d616 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d8c6:	3a01      	subs	r2, #1
 802d8c8:	f8dd e018 	ldr.w	lr, [sp, #24]
 802d8cc:	4615      	mov	r5, r2
 802d8ce:	9206      	str	r2, [sp, #24]
 802d8d0:	e799      	b.n	802d806 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802d8d2:	fa0f fe8e 	sxth.w	lr, lr
 802d8d6:	b236      	sxth	r6, r6
 802d8d8:	e9cd 0204 	strd	r0, r2, [sp, #16]
 802d8dc:	e9cd 3102 	strd	r3, r1, [sp, #8]
 802d8e0:	e9cd 6e00 	strd	r6, lr, [sp]
 802d8e4:	9b07      	ldr	r3, [sp, #28]
 802d8e6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802d8e8:	4639      	mov	r1, r7
 802d8ea:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802d8ec:	f7ff fd58 	bl	802d3a0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>
 802d8f0:	e7d1      	b.n	802d896 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d8f2:	2a00      	cmp	r2, #0
 802d8f4:	d15b      	bne.n	802d9ae <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45a>
 802d8f6:	460e      	mov	r6, r1
 802d8f8:	e9cd 110c 	strd	r1, r1, [sp, #48]	@ 0x30
 802d8fc:	9108      	str	r1, [sp, #32]
 802d8fe:	b283      	uxth	r3, r0
 802d900:	b292      	uxth	r2, r2
 802d902:	fb03 f002 	mul.w	r0, r3, r2
 802d906:	011b      	lsls	r3, r3, #4
 802d908:	f896 c000 	ldrb.w	ip, [r6]
 802d90c:	1a19      	subs	r1, r3, r0
 802d90e:	b289      	uxth	r1, r1
 802d910:	fb01 fc0c 	mul.w	ip, r1, ip
 802d914:	9e07      	ldr	r6, [sp, #28]
 802d916:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802d91a:	b292      	uxth	r2, r2
 802d91c:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802d920:	f816 e00e 	ldrb.w	lr, [r6, lr]
 802d924:	1a9b      	subs	r3, r3, r2
 802d926:	b29b      	uxth	r3, r3
 802d928:	fb03 cc0e 	mla	ip, r3, lr, ip
 802d92c:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 802d92e:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802d932:	f896 e000 	ldrb.w	lr, [r6]
 802d936:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802d938:	f896 c000 	ldrb.w	ip, [r6]
 802d93c:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802d93e:	fb02 6e0e 	mla	lr, r2, lr, r6
 802d942:	fb00 ec0c 	mla	ip, r0, ip, lr
 802d946:	9e08      	ldr	r6, [sp, #32]
 802d948:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 802d94c:	f887 c000 	strb.w	ip, [r7]
 802d950:	f896 c001 	ldrb.w	ip, [r6, #1]
 802d954:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802d956:	fb01 fc0c 	mul.w	ip, r1, ip
 802d95a:	f896 e001 	ldrb.w	lr, [r6, #1]
 802d95e:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 802d960:	fb03 ce0e 	mla	lr, r3, lr, ip
 802d964:	f896 c001 	ldrb.w	ip, [r6, #1]
 802d968:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802d96a:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802d96e:	f896 c001 	ldrb.w	ip, [r6, #1]
 802d972:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 802d974:	fb02 ee06 	mla	lr, r2, r6, lr
 802d978:	fb00 ec0c 	mla	ip, r0, ip, lr
 802d97c:	9e08      	ldr	r6, [sp, #32]
 802d97e:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 802d982:	f887 c001 	strb.w	ip, [r7, #1]
 802d986:	f896 c002 	ldrb.w	ip, [r6, #2]
 802d98a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802d98c:	fb01 f10c 	mul.w	r1, r1, ip
 802d990:	f896 e002 	ldrb.w	lr, [r6, #2]
 802d994:	fb03 110e 	mla	r1, r3, lr, r1
 802d998:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802d99a:	789e      	ldrb	r6, [r3, #2]
 802d99c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802d99e:	fb02 1206 	mla	r2, r2, r6, r1
 802d9a2:	789b      	ldrb	r3, [r3, #2]
 802d9a4:	fb00 2303 	mla	r3, r0, r3, r2
 802d9a8:	121b      	asrs	r3, r3, #8
 802d9aa:	70bb      	strb	r3, [r7, #2]
 802d9ac:	e773      	b.n	802d896 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802d9ae:	4631      	mov	r1, r6
 802d9b0:	f813 600c 	ldrb.w	r6, [r3, ip]
 802d9b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802d9b6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802d9ba:	1871      	adds	r1, r6, r1
 802d9bc:	930c      	str	r3, [sp, #48]	@ 0x30
 802d9be:	910d      	str	r1, [sp, #52]	@ 0x34
 802d9c0:	9308      	str	r3, [sp, #32]
 802d9c2:	461e      	mov	r6, r3
 802d9c4:	e79b      	b.n	802d8fe <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802d9c6:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802d9c8:	e9cd 660c 	strd	r6, r6, [sp, #48]	@ 0x30
 802d9cc:	460e      	mov	r6, r1
 802d9ce:	e796      	b.n	802d8fe <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802d9d0:	f43f ae21 	beq.w	802d616 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802d9d4:	1e45      	subs	r5, r0, #1
 802d9d6:	e65d      	b.n	802d694 <_ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>

0802d9d8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>:
 802d9d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d9dc:	b087      	sub	sp, #28
 802d9de:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 802d9e2:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 802d9e6:	fb06 080c 	mla	r8, r6, ip, r0
 802d9ea:	2e00      	cmp	r6, #0
 802d9ec:	4696      	mov	lr, r2
 802d9ee:	eb02 0a08 	add.w	sl, r2, r8
 802d9f2:	f106 0b01 	add.w	fp, r6, #1
 802d9f6:	f9bd 2044 	ldrsh.w	r2, [sp, #68]	@ 0x44
 802d9fa:	f89d 7050 	ldrb.w	r7, [sp, #80]	@ 0x50
 802d9fe:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 802da02:	f89d 4058 	ldrb.w	r4, [sp, #88]	@ 0x58
 802da06:	db02      	blt.n	802da0e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x36>
 802da08:	42b2      	cmp	r2, r6
 802da0a:	f300 80f1 	bgt.w	802dbf0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x218>
 802da0e:	2600      	movs	r6, #0
 802da10:	46b1      	mov	r9, r6
 802da12:	46b0      	mov	r8, r6
 802da14:	46b6      	mov	lr, r6
 802da16:	f1bb 0f00 	cmp.w	fp, #0
 802da1a:	db02      	blt.n	802da22 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x4a>
 802da1c:	455a      	cmp	r2, fp
 802da1e:	f300 8101 	bgt.w	802dc24 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x24c>
 802da22:	f04f 0c00 	mov.w	ip, #0
 802da26:	e9cd cc02 	strd	ip, ip, [sp, #8]
 802da2a:	f8cd c004 	str.w	ip, [sp, #4]
 802da2e:	2f0f      	cmp	r7, #15
 802da30:	f200 813a 	bhi.w	802dca8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802da34:	2d0f      	cmp	r5, #15
 802da36:	f200 8137 	bhi.w	802dca8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802da3a:	b2a8      	uxth	r0, r5
 802da3c:	b2bb      	uxth	r3, r7
 802da3e:	fb00 f503 	mul.w	r5, r0, r3
 802da42:	9a01      	ldr	r2, [sp, #4]
 802da44:	ebc5 1000 	rsb	r0, r5, r0, lsl #4
 802da48:	b280      	uxth	r0, r0
 802da4a:	fb00 fa02 	mul.w	sl, r0, r2
 802da4e:	fb05 fb0c 	mul.w	fp, r5, ip
 802da52:	011b      	lsls	r3, r3, #4
 802da54:	1b5f      	subs	r7, r3, r5
 802da56:	b2bf      	uxth	r7, r7
 802da58:	fb07 f206 	mul.w	r2, r7, r6
 802da5c:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802da60:	1a1b      	subs	r3, r3, r0
 802da62:	b29b      	uxth	r3, r3
 802da64:	fb03 2209 	mla	r2, r3, r9, r2
 802da68:	4452      	add	r2, sl
 802da6a:	445a      	add	r2, fp
 802da6c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802da70:	2a00      	cmp	r2, #0
 802da72:	f000 80ba 	beq.w	802dbea <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x212>
 802da76:	b2a4      	uxth	r4, r4
 802da78:	fb02 f204 	mul.w	r2, r2, r4
 802da7c:	f102 0a01 	add.w	sl, r2, #1
 802da80:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 802da84:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 802da88:	9205      	str	r2, [sp, #20]
 802da8a:	f008 12ff 	and.w	r2, r8, #16711935	@ 0xff00ff
 802da8e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802da92:	fb06 f202 	mul.w	r2, r6, r2
 802da96:	fb06 f608 	mul.w	r6, r6, r8
 802da9a:	f00e 1bff 	and.w	fp, lr, #16711935	@ 0xff00ff
 802da9e:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802daa2:	fb09 fb0b 	mul.w	fp, r9, fp
 802daa6:	fb09 fe0e 	mul.w	lr, r9, lr
 802daaa:	f506 7980 	add.w	r9, r6, #256	@ 0x100
 802daae:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 802dab2:	0a36      	lsrs	r6, r6, #8
 802dab4:	ea4f 2812 	mov.w	r8, r2, lsr #8
 802dab8:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802dabc:	fb07 f606 	mul.w	r6, r7, r6
 802dac0:	9404      	str	r4, [sp, #16]
 802dac2:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802dac6:	9c03      	ldr	r4, [sp, #12]
 802dac8:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802dacc:	4490      	add	r8, r2
 802dace:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802dad2:	f004 12ff 	and.w	r2, r4, #16711935	@ 0xff00ff
 802dad6:	fb0c f202 	mul.w	r2, ip, r2
 802dada:	f404 497f 	and.w	r9, r4, #65280	@ 0xff00
 802dade:	ea4f 2a1b 	mov.w	sl, fp, lsr #8
 802dae2:	9c02      	ldr	r4, [sp, #8]
 802dae4:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802dae8:	fb0c fc09 	mul.w	ip, ip, r9
 802daec:	fb08 f807 	mul.w	r8, r8, r7
 802daf0:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802daf4:	9603      	str	r6, [sp, #12]
 802daf6:	f50e 7980 	add.w	r9, lr, #256	@ 0x100
 802dafa:	9e01      	ldr	r6, [sp, #4]
 802dafc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802db00:	44d3      	add	fp, sl
 802db02:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 802db06:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802db0a:	f404 497f 	and.w	r9, r4, #65280	@ 0xff00
 802db0e:	fb06 f707 	mul.w	r7, r6, r7
 802db12:	fb06 f909 	mul.w	r9, r6, r9
 802db16:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802db1a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802db1e:	9e03      	ldr	r6, [sp, #12]
 802db20:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802db24:	ea4f 2a12 	mov.w	sl, r2, lsr #8
 802db28:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802db2c:	fb0b 8803 	mla	r8, fp, r3, r8
 802db30:	fb03 660e 	mla	r6, r3, lr, r6
 802db34:	f102 1201 	add.w	r2, r2, #65537	@ 0x10001
 802db38:	f50c 7e80 	add.w	lr, ip, #256	@ 0x100
 802db3c:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802db40:	4492      	add	sl, r2
 802db42:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 802db46:	ea4f 2b1a 	mov.w	fp, sl, lsr #8
 802db4a:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 802db4e:	0a3a      	lsrs	r2, r7, #8
 802db50:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802db54:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802db58:	fb0b 8b05 	mla	fp, fp, r5, r8
 802db5c:	fb05 660e 	mla	r6, r5, lr, r6
 802db60:	f002 18ff 	and.w	r8, r2, #16711935	@ 0xff00ff
 802db64:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802db68:	f509 7580 	add.w	r5, r9, #256	@ 0x100
 802db6c:	44b8      	add	r8, r7
 802db6e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 802db72:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802db76:	0a2d      	lsrs	r5, r5, #8
 802db78:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802db7c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802db80:	fb00 6505 	mla	r5, r0, r5, r6
 802db84:	fb08 b800 	mla	r8, r8, r0, fp
 802db88:	0a2d      	lsrs	r5, r5, #8
 802db8a:	ea4f 2018 	mov.w	r0, r8, lsr #8
 802db8e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802db92:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802db96:	4328      	orrs	r0, r5
 802db98:	784b      	ldrb	r3, [r1, #1]
 802db9a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 802db9e:	9c04      	ldr	r4, [sp, #16]
 802dba0:	788d      	ldrb	r5, [r1, #2]
 802dba2:	fa5f fa80 	uxtb.w	sl, r0
 802dba6:	fb13 f602 	smulbb	r6, r3, r2
 802dbaa:	fb15 f502 	smulbb	r5, r5, r2
 802dbae:	fb1a fa04 	smulbb	sl, sl, r4
 802dbb2:	780f      	ldrb	r7, [r1, #0]
 802dbb4:	f3c0 2c07 	ubfx	ip, r0, #8, #8
 802dbb8:	0c00      	lsrs	r0, r0, #16
 802dbba:	fb0c 6304 	mla	r3, ip, r4, r6
 802dbbe:	fb07 a202 	mla	r2, r7, r2, sl
 802dbc2:	fb00 5404 	mla	r4, r0, r4, r5
 802dbc6:	b29b      	uxth	r3, r3
 802dbc8:	b292      	uxth	r2, r2
 802dbca:	b2a4      	uxth	r4, r4
 802dbcc:	1c56      	adds	r6, r2, #1
 802dbce:	1c5d      	adds	r5, r3, #1
 802dbd0:	1c60      	adds	r0, r4, #1
 802dbd2:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 802dbd6:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802dbda:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802dbde:	1212      	asrs	r2, r2, #8
 802dbe0:	121b      	asrs	r3, r3, #8
 802dbe2:	1224      	asrs	r4, r4, #8
 802dbe4:	700a      	strb	r2, [r1, #0]
 802dbe6:	704b      	strb	r3, [r1, #1]
 802dbe8:	708c      	strb	r4, [r1, #2]
 802dbea:	b007      	add	sp, #28
 802dbec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802dbf0:	2800      	cmp	r0, #0
 802dbf2:	db01      	blt.n	802dbf8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x220>
 802dbf4:	4584      	cmp	ip, r0
 802dbf6:	dc3d      	bgt.n	802dc74 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x29c>
 802dbf8:	f04f 0900 	mov.w	r9, #0
 802dbfc:	46ce      	mov	lr, r9
 802dbfe:	1c46      	adds	r6, r0, #1
 802dc00:	d42a      	bmi.n	802dc58 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 802dc02:	45b4      	cmp	ip, r6
 802dc04:	dd28      	ble.n	802dc58 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x280>
 802dc06:	b137      	cbz	r7, 802dc16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x23e>
 802dc08:	f89a 6001 	ldrb.w	r6, [sl, #1]
 802dc0c:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
 802dc10:	ea4f 6618 	mov.w	r6, r8, lsr #24
 802dc14:	e6ff      	b.n	802da16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 802dc16:	f1bb 0f00 	cmp.w	fp, #0
 802dc1a:	db3e      	blt.n	802dc9a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2c2>
 802dc1c:	455a      	cmp	r2, fp
 802dc1e:	dd3c      	ble.n	802dc9a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2c2>
 802dc20:	463e      	mov	r6, r7
 802dc22:	46b8      	mov	r8, r7
 802dc24:	b1dd      	cbz	r5, 802dc5e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x286>
 802dc26:	2800      	cmp	r0, #0
 802dc28:	db30      	blt.n	802dc8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2b4>
 802dc2a:	4584      	cmp	ip, r0
 802dc2c:	dd2e      	ble.n	802dc8c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2b4>
 802dc2e:	f81a 200c 	ldrb.w	r2, [sl, ip]
 802dc32:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802dc36:	9202      	str	r2, [sp, #8]
 802dc38:	0e12      	lsrs	r2, r2, #24
 802dc3a:	9201      	str	r2, [sp, #4]
 802dc3c:	3001      	adds	r0, #1
 802dc3e:	d420      	bmi.n	802dc82 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2aa>
 802dc40:	4584      	cmp	ip, r0
 802dc42:	dd1e      	ble.n	802dc82 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2aa>
 802dc44:	b337      	cbz	r7, 802dc94 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2bc>
 802dc46:	44d4      	add	ip, sl
 802dc48:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802dc4c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802dc50:	9303      	str	r3, [sp, #12]
 802dc52:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802dc56:	e6ea      	b.n	802da2e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x56>
 802dc58:	2600      	movs	r6, #0
 802dc5a:	46b0      	mov	r8, r6
 802dc5c:	e6db      	b.n	802da16 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x3e>
 802dc5e:	2f0f      	cmp	r7, #15
 802dc60:	d822      	bhi.n	802dca8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2d0>
 802dc62:	b2bb      	uxth	r3, r7
 802dc64:	4628      	mov	r0, r5
 802dc66:	46ab      	mov	fp, r5
 802dc68:	46aa      	mov	sl, r5
 802dc6a:	e9cd 5502 	strd	r5, r5, [sp, #8]
 802dc6e:	46ac      	mov	ip, r5
 802dc70:	9501      	str	r5, [sp, #4]
 802dc72:	e6ee      	b.n	802da52 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 802dc74:	f81e 6008 	ldrb.w	r6, [lr, r8]
 802dc78:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
 802dc7c:	ea4f 691e 	mov.w	r9, lr, lsr #24
 802dc80:	e7bd      	b.n	802dbfe <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x226>
 802dc82:	f04f 0c00 	mov.w	ip, #0
 802dc86:	f8cd c00c 	str.w	ip, [sp, #12]
 802dc8a:	e6d0      	b.n	802da2e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x56>
 802dc8c:	2200      	movs	r2, #0
 802dc8e:	e9cd 2201 	strd	r2, r2, [sp, #4]
 802dc92:	e7d3      	b.n	802dc3c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x264>
 802dc94:	9703      	str	r7, [sp, #12]
 802dc96:	46bc      	mov	ip, r7
 802dc98:	e6cc      	b.n	802da34 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x5c>
 802dc9a:	46b8      	mov	r8, r7
 802dc9c:	e9cd 7702 	strd	r7, r7, [sp, #8]
 802dca0:	46bc      	mov	ip, r7
 802dca2:	9701      	str	r7, [sp, #4]
 802dca4:	463e      	mov	r6, r7
 802dca6:	e6c5      	b.n	802da34 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x5c>
 802dca8:	4b03      	ldr	r3, [pc, #12]	@ (802dcb8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e0>)
 802dcaa:	4a04      	ldr	r2, [pc, #16]	@ (802dcbc <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e4>)
 802dcac:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802dcb0:	4803      	ldr	r0, [pc, #12]	@ (802dcc0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x2e8>)
 802dcb2:	f004 fc21 	bl	80324f8 <__assert_func>
 802dcb6:	bf00      	nop
 802dcb8:	080366d4 	.word	0x080366d4
 802dcbc:	08036d50 	.word	0x08036d50
 802dcc0:	0803685c 	.word	0x0803685c

0802dcc4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802dcc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802dcc8:	ed2d 8b08 	vpush	{d8-d11}
 802dccc:	b0a9      	sub	sp, #164	@ 0xa4
 802dcce:	9c3f      	ldr	r4, [sp, #252]	@ 0xfc
 802dcd0:	9022      	str	r0, [sp, #136]	@ 0x88
 802dcd2:	9114      	str	r1, [sp, #80]	@ 0x50
 802dcd4:	6860      	ldr	r0, [r4, #4]
 802dcd6:	9940      	ldr	r1, [sp, #256]	@ 0x100
 802dcd8:	9217      	str	r2, [sp, #92]	@ 0x5c
 802dcda:	9a41      	ldr	r2, [sp, #260]	@ 0x104
 802dcdc:	eeb0 aa40 	vmov.f32	s20, s0
 802dce0:	fb00 1b02 	mla	fp, r0, r2, r1
 802dce4:	6821      	ldr	r1, [r4, #0]
 802dce6:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 802dcea:	eb01 0800 	add.w	r8, r1, r0
 802dcee:	e9dd ab3b 	ldrd	sl, fp, [sp, #236]	@ 0xec
 802dcf2:	eef0 9a60 	vmov.f32	s19, s1
 802dcf6:	eeb0 9a41 	vmov.f32	s18, s2
 802dcfa:	eef0 8a62 	vmov.f32	s17, s5
 802dcfe:	eeb0 8a43 	vmov.f32	s16, s6
 802dd02:	eef0 ba44 	vmov.f32	s23, s8
 802dd06:	eeb0 ba64 	vmov.f32	s22, s9
 802dd0a:	eef0 aa45 	vmov.f32	s21, s10
 802dd0e:	46c1      	mov	r9, r8
 802dd10:	465f      	mov	r7, fp
 802dd12:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802dd14:	9d42      	ldr	r5, [sp, #264]	@ 0x108
 802dd16:	6852      	ldr	r2, [r2, #4]
 802dd18:	f89d 410c 	ldrb.w	r4, [sp, #268]	@ 0x10c
 802dd1c:	3204      	adds	r2, #4
 802dd1e:	682d      	ldr	r5, [r5, #0]
 802dd20:	920a      	str	r2, [sp, #40]	@ 0x28
 802dd22:	b2a2      	uxth	r2, r4
 802dd24:	9423      	str	r4, [sp, #140]	@ 0x8c
 802dd26:	9511      	str	r5, [sp, #68]	@ 0x44
 802dd28:	9216      	str	r2, [sp, #88]	@ 0x58
 802dd2a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802dd2c:	2a00      	cmp	r2, #0
 802dd2e:	dc02      	bgt.n	802dd36 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802dd30:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802dd32:	2a00      	cmp	r2, #0
 802dd34:	dd65      	ble.n	802de02 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802dd36:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802dd38:	2b00      	cmp	r3, #0
 802dd3a:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802dd3e:	b235      	sxth	r5, r6
 802dd40:	fa0f f88c 	sxth.w	r8, ip
 802dd44:	f340 838b 	ble.w	802e45e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79a>
 802dd48:	1e6c      	subs	r4, r5, #1
 802dd4a:	f108 3eff 	add.w	lr, r8, #4294967295
 802dd4e:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802dd52:	e9dd cb3d 	ldrd	ip, fp, [sp, #244]	@ 0xf4
 802dd56:	ea5f 422a 	movs.w	r2, sl, asr #16
 802dd5a:	ea4f 4127 	mov.w	r1, r7, asr #16
 802dd5e:	d405      	bmi.n	802dd6c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dd60:	42a2      	cmp	r2, r4
 802dd62:	da03      	bge.n	802dd6c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dd64:	2900      	cmp	r1, #0
 802dd66:	db01      	blt.n	802dd6c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802dd68:	4571      	cmp	r1, lr
 802dd6a:	db4f      	blt.n	802de0c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 802dd6c:	1c50      	adds	r0, r2, #1
 802dd6e:	d406      	bmi.n	802dd7e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dd70:	42a8      	cmp	r0, r5
 802dd72:	dc04      	bgt.n	802dd7e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dd74:	1c48      	adds	r0, r1, #1
 802dd76:	d402      	bmi.n	802dd7e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802dd78:	4540      	cmp	r0, r8
 802dd7a:	f340 834c 	ble.w	802e416 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x752>
 802dd7e:	3b01      	subs	r3, #1
 802dd80:	44e2      	add	sl, ip
 802dd82:	445f      	add	r7, fp
 802dd84:	f109 0903 	add.w	r9, r9, #3
 802dd88:	d1e5      	bne.n	802dd56 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802dd8a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802dd8c:	2b00      	cmp	r3, #0
 802dd8e:	dd38      	ble.n	802de02 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802dd90:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802dd94:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802dd98:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802dd9c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802dda0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802dda4:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802dda8:	ee69 7a27 	vmul.f32	s15, s18, s15
 802ddac:	ee76 6a68 	vsub.f32	s13, s12, s17
 802ddb0:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802ddb4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ddb8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ddbc:	ee16 2a90 	vmov	r2, s13
 802ddc0:	3b01      	subs	r3, #1
 802ddc2:	9314      	str	r3, [sp, #80]	@ 0x50
 802ddc4:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ddc6:	fb92 f3f3 	sdiv	r3, r2, r3
 802ddca:	ee17 2a10 	vmov	r2, s14
 802ddce:	eeb0 7a48 	vmov.f32	s14, s16
 802ddd2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802ddd6:	ee17 7a10 	vmov	r7, s14
 802ddda:	eeb0 7a68 	vmov.f32	s14, s17
 802ddde:	933d      	str	r3, [sp, #244]	@ 0xf4
 802dde0:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802dde2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802dde6:	fb92 f3f3 	sdiv	r3, r2, r3
 802ddea:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802ddec:	933e      	str	r3, [sp, #248]	@ 0xf8
 802ddee:	ee17 aa10 	vmov	sl, s14
 802ddf2:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 802ddf4:	eeb0 8a67 	vmov.f32	s16, s15
 802ddf8:	eef0 8a46 	vmov.f32	s17, s12
 802ddfc:	bf08      	it	eq
 802ddfe:	4613      	moveq	r3, r2
 802de00:	e793      	b.n	802dd2a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802de02:	b029      	add	sp, #164	@ 0xa4
 802de04:	ecbd 8b08 	vpop	{d8-d11}
 802de08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802de0c:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802de10:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 802de12:	1e59      	subs	r1, r3, #1
 802de14:	fb00 a201 	mla	r2, r0, r1, sl
 802de18:	1412      	asrs	r2, r2, #16
 802de1a:	9109      	str	r1, [sp, #36]	@ 0x24
 802de1c:	f100 8168 	bmi.w	802e0f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802de20:	42a2      	cmp	r2, r4
 802de22:	f280 8165 	bge.w	802e0f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802de26:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802de28:	fb02 7201 	mla	r2, r2, r1, r7
 802de2c:	1412      	asrs	r2, r2, #16
 802de2e:	f100 815f 	bmi.w	802e0f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802de32:	f108 31ff 	add.w	r1, r8, #4294967295
 802de36:	428a      	cmp	r2, r1
 802de38:	f280 815a 	bge.w	802e0f0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42c>
 802de3c:	2b00      	cmp	r3, #0
 802de3e:	dda4      	ble.n	802dd8a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802de40:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802de44:	444b      	add	r3, r9
 802de46:	9310      	str	r3, [sp, #64]	@ 0x40
 802de48:	f109 0303 	add.w	r3, r9, #3
 802de4c:	9309      	str	r3, [sp, #36]	@ 0x24
 802de4e:	46d1      	mov	r9, sl
 802de50:	973c      	str	r7, [sp, #240]	@ 0xf0
 802de52:	462e      	mov	r6, r5
 802de54:	463b      	mov	r3, r7
 802de56:	e12b      	b.n	802e0b0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802de58:	785f      	ldrb	r7, [r3, #1]
 802de5a:	f854 7027 	ldr.w	r7, [r4, r7, lsl #2]
 802de5e:	9712      	str	r7, [sp, #72]	@ 0x48
 802de60:	0e3f      	lsrs	r7, r7, #24
 802de62:	970b      	str	r7, [sp, #44]	@ 0x2c
 802de64:	b16a      	cbz	r2, 802de82 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802de66:	199f      	adds	r7, r3, r6
 802de68:	5d9b      	ldrb	r3, [r3, r6]
 802de6a:	4626      	mov	r6, r4
 802de6c:	787f      	ldrb	r7, [r7, #1]
 802de6e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802de72:	f854 4027 	ldr.w	r4, [r4, r7, lsl #2]
 802de76:	9313      	str	r3, [sp, #76]	@ 0x4c
 802de78:	9415      	str	r4, [sp, #84]	@ 0x54
 802de7a:	0e1b      	lsrs	r3, r3, #24
 802de7c:	0e24      	lsrs	r4, r4, #24
 802de7e:	940d      	str	r4, [sp, #52]	@ 0x34
 802de80:	930c      	str	r3, [sp, #48]	@ 0x30
 802de82:	fa1f fc81 	uxth.w	ip, r1
 802de86:	b292      	uxth	r2, r2
 802de88:	fb0c f602 	mul.w	r6, ip, r2
 802de8c:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802de90:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802de92:	ebac 0706 	sub.w	r7, ip, r6
 802de96:	b2bf      	uxth	r7, r7
 802de98:	fb07 f103 	mul.w	r1, r7, r3
 802de9c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802dea0:	b292      	uxth	r2, r2
 802dea2:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 802dea6:	1a9b      	subs	r3, r3, r2
 802dea8:	b29b      	uxth	r3, r3
 802deaa:	fb03 1100 	mla	r1, r3, r0, r1
 802deae:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802deb0:	fb02 1104 	mla	r1, r2, r4, r1
 802deb4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802deb6:	fb06 1104 	mla	r1, r6, r4, r1
 802deba:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802debe:	2900      	cmp	r1, #0
 802dec0:	f000 80e5 	beq.w	802e08e <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 802dec4:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 802dec8:	28ff      	cmp	r0, #255	@ 0xff
 802deca:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802dece:	940e      	str	r4, [sp, #56]	@ 0x38
 802ded0:	950f      	str	r5, [sp, #60]	@ 0x3c
 802ded2:	d01d      	beq.n	802df10 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 802ded4:	fb04 fe00 	mul.w	lr, r4, r0
 802ded8:	fb05 f800 	mul.w	r8, r5, r0
 802dedc:	ea4f 251e 	mov.w	r5, lr, lsr #8
 802dee0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802dee4:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802dee8:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 802deec:	44ae      	add	lr, r5
 802deee:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802def2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802def6:	0a00      	lsrs	r0, r0, #8
 802def8:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802defc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802df00:	ea4e 0e00 	orr.w	lr, lr, r0
 802df04:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802df08:	900e      	str	r0, [sp, #56]	@ 0x38
 802df0a:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 802df0e:	900f      	str	r0, [sp, #60]	@ 0x3c
 802df10:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802df12:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 802df16:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 802df1a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802df1c:	28ff      	cmp	r0, #255	@ 0xff
 802df1e:	d01c      	beq.n	802df5a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802df20:	fb0e fe00 	mul.w	lr, lr, r0
 802df24:	fb08 f800 	mul.w	r8, r8, r0
 802df28:	ea4f 251e 	mov.w	r5, lr, lsr #8
 802df2c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802df30:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802df34:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 802df38:	44ae      	add	lr, r5
 802df3a:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 802df3e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802df42:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802df46:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802df4a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802df4e:	ea4e 0808 	orr.w	r8, lr, r8
 802df52:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 802df56:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802df5a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802df5c:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 802df60:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 802df64:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802df66:	28ff      	cmp	r0, #255	@ 0xff
 802df68:	d01c      	beq.n	802dfa4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802df6a:	fb0c fc00 	mul.w	ip, ip, r0
 802df6e:	fb0a fa00 	mul.w	sl, sl, r0
 802df72:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802df76:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802df7a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802df7e:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 802df82:	44ac      	add	ip, r5
 802df84:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802df88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802df8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802df90:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802df94:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802df98:	ea4c 0a0a 	orr.w	sl, ip, sl
 802df9c:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 802dfa0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802dfa4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802dfa6:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 802dfaa:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802dfae:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802dfb0:	2cff      	cmp	r4, #255	@ 0xff
 802dfb2:	d019      	beq.n	802dfe8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 802dfb4:	fb00 f004 	mul.w	r0, r0, r4
 802dfb8:	fb0b fb04 	mul.w	fp, fp, r4
 802dfbc:	0a05      	lsrs	r5, r0, #8
 802dfbe:	f005 14ff 	and.w	r4, r5, #16711935	@ 0xff00ff
 802dfc2:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802dfc6:	f50b 7580 	add.w	r5, fp, #256	@ 0x100
 802dfca:	eb05 251b 	add.w	r5, r5, fp, lsr #8
 802dfce:	4420      	add	r0, r4
 802dfd0:	0a00      	lsrs	r0, r0, #8
 802dfd2:	0a2d      	lsrs	r5, r5, #8
 802dfd4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802dfd8:	f405 4b7f 	and.w	fp, r5, #65280	@ 0xff00
 802dfdc:	ea40 0b0b 	orr.w	fp, r0, fp
 802dfe0:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 802dfe4:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802dfe8:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802dfea:	fb0e fe07 	mul.w	lr, lr, r7
 802dfee:	fb01 f104 	mul.w	r1, r1, r4
 802dff2:	1c4d      	adds	r5, r1, #1
 802dff4:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802dff8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802dffc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802dffe:	fb08 f707 	mul.w	r7, r8, r7
 802e002:	fb05 ee03 	mla	lr, r5, r3, lr
 802e006:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802e008:	fb0c ee02 	mla	lr, ip, r2, lr
 802e00c:	fb05 7703 	mla	r7, r5, r3, r7
 802e010:	fb0a 7702 	mla	r7, sl, r2, r7
 802e014:	fb00 ee06 	mla	lr, r0, r6, lr
 802e018:	fb0b 7706 	mla	r7, fp, r6, r7
 802e01c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802e01e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802e022:	0a3f      	lsrs	r7, r7, #8
 802e024:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802e028:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802e02c:	ea4e 0307 	orr.w	r3, lr, r7
 802e030:	f810 6c01 	ldrb.w	r6, [r0, #-1]
 802e034:	f810 7c02 	ldrb.w	r7, [r0, #-2]
 802e038:	b2c9      	uxtb	r1, r1
 802e03a:	fa5f fc83 	uxtb.w	ip, r3
 802e03e:	fb16 f601 	smulbb	r6, r6, r1
 802e042:	fb17 f701 	smulbb	r7, r7, r1
 802e046:	fb1c fc04 	smulbb	ip, ip, r4
 802e04a:	f810 0c03 	ldrb.w	r0, [r0, #-3]
 802e04e:	f3c3 2207 	ubfx	r2, r3, #8, #8
 802e052:	0c1b      	lsrs	r3, r3, #16
 802e054:	fb00 c101 	mla	r1, r0, r1, ip
 802e058:	fb03 6304 	mla	r3, r3, r4, r6
 802e05c:	fb02 7204 	mla	r2, r2, r4, r7
 802e060:	b289      	uxth	r1, r1
 802e062:	b292      	uxth	r2, r2
 802e064:	b29b      	uxth	r3, r3
 802e066:	f101 0e01 	add.w	lr, r1, #1
 802e06a:	1c56      	adds	r6, r2, #1
 802e06c:	1c5d      	adds	r5, r3, #1
 802e06e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802e070:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 802e074:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 802e078:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 802e07c:	1209      	asrs	r1, r1, #8
 802e07e:	1212      	asrs	r2, r2, #8
 802e080:	121b      	asrs	r3, r3, #8
 802e082:	f800 1c03 	strb.w	r1, [r0, #-3]
 802e086:	f800 2c02 	strb.w	r2, [r0, #-2]
 802e08a:	f800 3c01 	strb.w	r3, [r0, #-1]
 802e08e:	9b3d      	ldr	r3, [sp, #244]	@ 0xf4
 802e090:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e092:	4499      	add	r9, r3
 802e094:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802e096:	4413      	add	r3, r2
 802e098:	933c      	str	r3, [sp, #240]	@ 0xf0
 802e09a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802e09c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802e09e:	4293      	cmp	r3, r2
 802e0a0:	d024      	beq.n	802e0ec <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 802e0a2:	4613      	mov	r3, r2
 802e0a4:	3303      	adds	r3, #3
 802e0a6:	9309      	str	r3, [sp, #36]	@ 0x24
 802e0a8:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802e0aa:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 802e0ae:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 802e0b0:	ea4f 4229 	mov.w	r2, r9, asr #16
 802e0b4:	141b      	asrs	r3, r3, #16
 802e0b6:	fb06 2303 	mla	r3, r6, r3, r2
 802e0ba:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802e0bc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802e0be:	5cc2      	ldrb	r2, [r0, r3]
 802e0c0:	f3c9 3103 	ubfx	r1, r9, #12, #4
 802e0c4:	f854 5022 	ldr.w	r5, [r4, r2, lsl #2]
 802e0c8:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 802e0ca:	4403      	add	r3, r0
 802e0cc:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802e0d0:	0e28      	lsrs	r0, r5, #24
 802e0d2:	2900      	cmp	r1, #0
 802e0d4:	f47f aec0 	bne.w	802de58 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x194>
 802e0d8:	2a00      	cmp	r2, #0
 802e0da:	f43f aed2 	beq.w	802de82 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802e0de:	5d9b      	ldrb	r3, [r3, r6]
 802e0e0:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 802e0e4:	9313      	str	r3, [sp, #76]	@ 0x4c
 802e0e6:	0e1b      	lsrs	r3, r3, #24
 802e0e8:	930c      	str	r3, [sp, #48]	@ 0x30
 802e0ea:	e6ca      	b.n	802de82 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802e0ec:	4699      	mov	r9, r3
 802e0ee:	e64c      	b.n	802dd8a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e0f0:	2b00      	cmp	r3, #0
 802e0f2:	f77f ae4a 	ble.w	802dd8a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e0f6:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 802e0fa:	ea4f 422a 	mov.w	r2, sl, asr #16
 802e0fe:	1439      	asrs	r1, r7, #16
 802e100:	2a00      	cmp	r2, #0
 802e102:	46cb      	mov	fp, r9
 802e104:	f8cd 903c 	str.w	r9, [sp, #60]	@ 0x3c
 802e108:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 802e10a:	e9dd 953d 	ldrd	r9, r5, [sp, #244]	@ 0xf4
 802e10e:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802e112:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802e116:	f2c0 8154 	blt.w	802e3c2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e11a:	1e73      	subs	r3, r6, #1
 802e11c:	429a      	cmp	r2, r3
 802e11e:	f280 8150 	bge.w	802e3c2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e122:	2900      	cmp	r1, #0
 802e124:	f2c0 814d 	blt.w	802e3c2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e128:	f10c 33ff 	add.w	r3, ip, #4294967295
 802e12c:	4299      	cmp	r1, r3
 802e12e:	f280 8148 	bge.w	802e3c2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802e132:	b236      	sxth	r6, r6
 802e134:	fb01 2206 	mla	r2, r1, r6, r2
 802e138:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802e13a:	5c8b      	ldrb	r3, [r1, r2]
 802e13c:	440a      	add	r2, r1
 802e13e:	9210      	str	r2, [sp, #64]	@ 0x40
 802e140:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802e142:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 802e146:	930e      	str	r3, [sp, #56]	@ 0x38
 802e148:	0e1b      	lsrs	r3, r3, #24
 802e14a:	2800      	cmp	r0, #0
 802e14c:	f000 8169 	beq.w	802e422 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75e>
 802e150:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802e152:	f891 c001 	ldrb.w	ip, [r1, #1]
 802e156:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802e15a:	9224      	str	r2, [sp, #144]	@ 0x90
 802e15c:	0e12      	lsrs	r2, r2, #24
 802e15e:	9218      	str	r2, [sp, #96]	@ 0x60
 802e160:	f1be 0f00 	cmp.w	lr, #0
 802e164:	f040 816a 	bne.w	802e43c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x778>
 802e168:	b280      	uxth	r0, r0
 802e16a:	fa1f fc8e 	uxth.w	ip, lr
 802e16e:	fb00 f20c 	mul.w	r2, r0, ip
 802e172:	4611      	mov	r1, r2
 802e174:	0106      	lsls	r6, r0, #4
 802e176:	1ab0      	subs	r0, r6, r2
 802e178:	9210      	str	r2, [sp, #64]	@ 0x40
 802e17a:	b282      	uxth	r2, r0
 802e17c:	9818      	ldr	r0, [sp, #96]	@ 0x60
 802e17e:	ebc1 1c0c 	rsb	ip, r1, ip, lsl #4
 802e182:	fb02 f000 	mul.w	r0, r2, r0
 802e186:	921b      	str	r2, [sp, #108]	@ 0x6c
 802e188:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802e18c:	fa1f f28c 	uxth.w	r2, ip
 802e190:	1ab6      	subs	r6, r6, r2
 802e192:	b2b6      	uxth	r6, r6
 802e194:	fb06 0c03 	mla	ip, r6, r3, r0
 802e198:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802e19a:	921c      	str	r2, [sp, #112]	@ 0x70
 802e19c:	fb02 cc00 	mla	ip, r2, r0, ip
 802e1a0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802e1a2:	961d      	str	r6, [sp, #116]	@ 0x74
 802e1a4:	fb01 cc02 	mla	ip, r1, r2, ip
 802e1a8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802e1ac:	f1bc 0f00 	cmp.w	ip, #0
 802e1b0:	f000 80f1 	beq.w	802e396 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e1b4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802e1b6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802e1b8:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802e1bc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802e1c0:	2bff      	cmp	r3, #255	@ 0xff
 802e1c2:	921e      	str	r2, [sp, #120]	@ 0x78
 802e1c4:	910e      	str	r1, [sp, #56]	@ 0x38
 802e1c6:	d01b      	beq.n	802e200 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x53c>
 802e1c8:	fb01 f103 	mul.w	r1, r1, r3
 802e1cc:	fb02 f203 	mul.w	r2, r2, r3
 802e1d0:	460b      	mov	r3, r1
 802e1d2:	0a11      	lsrs	r1, r2, #8
 802e1d4:	f102 1601 	add.w	r6, r2, #65537	@ 0x10001
 802e1d8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e1dc:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 802e1e0:	4431      	add	r1, r6
 802e1e2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802e1e6:	0a09      	lsrs	r1, r1, #8
 802e1e8:	0a1b      	lsrs	r3, r3, #8
 802e1ea:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e1ee:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e1f2:	430b      	orrs	r3, r1
 802e1f4:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802e1f8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e1fc:	921e      	str	r2, [sp, #120]	@ 0x78
 802e1fe:	930e      	str	r3, [sp, #56]	@ 0x38
 802e200:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 802e202:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802e204:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802e208:	29ff      	cmp	r1, #255	@ 0xff
 802e20a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802e20e:	931f      	str	r3, [sp, #124]	@ 0x7c
 802e210:	9220      	str	r2, [sp, #128]	@ 0x80
 802e212:	d01b      	beq.n	802e24c <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x588>
 802e214:	fb03 f301 	mul.w	r3, r3, r1
 802e218:	fb02 f201 	mul.w	r2, r2, r1
 802e21c:	0a19      	lsrs	r1, r3, #8
 802e21e:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802e222:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e226:	f502 7380 	add.w	r3, r2, #256	@ 0x100
 802e22a:	4401      	add	r1, r0
 802e22c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802e230:	0a09      	lsrs	r1, r1, #8
 802e232:	0a1b      	lsrs	r3, r3, #8
 802e234:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e238:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e23c:	ea41 0003 	orr.w	r0, r1, r3
 802e240:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 802e244:	931f      	str	r3, [sp, #124]	@ 0x7c
 802e246:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 802e24a:	9320      	str	r3, [sp, #128]	@ 0x80
 802e24c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802e24e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802e250:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802e254:	2aff      	cmp	r2, #255	@ 0xff
 802e256:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e25a:	9321      	str	r3, [sp, #132]	@ 0x84
 802e25c:	d01a      	beq.n	802e294 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d0>
 802e25e:	fb03 f302 	mul.w	r3, r3, r2
 802e262:	4618      	mov	r0, r3
 802e264:	fb06 f602 	mul.w	r6, r6, r2
 802e268:	0a31      	lsrs	r1, r6, #8
 802e26a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e26e:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802e272:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 802e276:	440e      	add	r6, r1
 802e278:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802e27c:	0a36      	lsrs	r6, r6, #8
 802e27e:	0a1b      	lsrs	r3, r3, #8
 802e280:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802e284:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e288:	4333      	orrs	r3, r6
 802e28a:	f003 16ff 	and.w	r6, r3, #16711935	@ 0xff00ff
 802e28e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e292:	9321      	str	r3, [sp, #132]	@ 0x84
 802e294:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 802e296:	f002 13ff 	and.w	r3, r2, #16711935	@ 0xff00ff
 802e29a:	f402 4e7f 	and.w	lr, r2, #65280	@ 0xff00
 802e29e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802e2a0:	2aff      	cmp	r2, #255	@ 0xff
 802e2a2:	d01a      	beq.n	802e2da <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x616>
 802e2a4:	fb03 f302 	mul.w	r3, r3, r2
 802e2a8:	fb0e fe02 	mul.w	lr, lr, r2
 802e2ac:	0a19      	lsrs	r1, r3, #8
 802e2ae:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802e2b2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e2b6:	f50e 7380 	add.w	r3, lr, #256	@ 0x100
 802e2ba:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 802e2be:	4401      	add	r1, r0
 802e2c0:	0a09      	lsrs	r1, r1, #8
 802e2c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802e2c6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802e2ca:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e2ce:	ea41 0e0e 	orr.w	lr, r1, lr
 802e2d2:	f00e 13ff 	and.w	r3, lr, #16711935	@ 0xff00ff
 802e2d6:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e2da:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802e2dc:	fb0c f102 	mul.w	r1, ip, r2
 802e2e0:	1c48      	adds	r0, r1, #1
 802e2e2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802e2e6:	ea6f 2211 	mvn.w	r2, r1, lsr #8
 802e2ea:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802e2ec:	9225      	str	r2, [sp, #148]	@ 0x94
 802e2ee:	4684      	mov	ip, r0
 802e2f0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 802e2f2:	9820      	ldr	r0, [sp, #128]	@ 0x80
 802e2f4:	fb0c fc02 	mul.w	ip, ip, r2
 802e2f8:	fb00 f002 	mul.w	r0, r0, r2
 802e2fc:	4601      	mov	r1, r0
 802e2fe:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 802e300:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802e302:	fb00 cc02 	mla	ip, r0, r2, ip
 802e306:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802e308:	fb00 1102 	mla	r1, r0, r2, r1
 802e30c:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 802e30e:	9821      	ldr	r0, [sp, #132]	@ 0x84
 802e310:	fb06 c602 	mla	r6, r6, r2, ip
 802e314:	fb00 1002 	mla	r0, r0, r2, r1
 802e318:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802e31a:	f89d 1094 	ldrb.w	r1, [sp, #148]	@ 0x94
 802e31e:	fb03 6602 	mla	r6, r3, r2, r6
 802e322:	fb0e 0302 	mla	r3, lr, r2, r0
 802e326:	0a32      	lsrs	r2, r6, #8
 802e328:	0a1b      	lsrs	r3, r3, #8
 802e32a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 802e32e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802e332:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802e336:	4313      	orrs	r3, r2
 802e338:	fb16 f001 	smulbb	r0, r6, r1
 802e33c:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802e33e:	fa5f fe83 	uxtb.w	lr, r3
 802e342:	fb1e fe02 	smulbb	lr, lr, r2
 802e346:	f89b c001 	ldrb.w	ip, [fp, #1]
 802e34a:	900e      	str	r0, [sp, #56]	@ 0x38
 802e34c:	f89b 0000 	ldrb.w	r0, [fp]
 802e350:	fb1c fc01 	smulbb	ip, ip, r1
 802e354:	fb00 e001 	mla	r0, r0, r1, lr
 802e358:	4611      	mov	r1, r2
 802e35a:	f3c3 2607 	ubfx	r6, r3, #8, #8
 802e35e:	fb06 c202 	mla	r2, r6, r2, ip
 802e362:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 802e364:	0c1b      	lsrs	r3, r3, #16
 802e366:	fb03 6301 	mla	r3, r3, r1, r6
 802e36a:	b280      	uxth	r0, r0
 802e36c:	b296      	uxth	r6, r2
 802e36e:	b29b      	uxth	r3, r3
 802e370:	1c5a      	adds	r2, r3, #1
 802e372:	f100 0c01 	add.w	ip, r0, #1
 802e376:	1c71      	adds	r1, r6, #1
 802e378:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802e37c:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802e380:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802e384:	1200      	asrs	r0, r0, #8
 802e386:	120a      	asrs	r2, r1, #8
 802e388:	121b      	asrs	r3, r3, #8
 802e38a:	f88b 0000 	strb.w	r0, [fp]
 802e38e:	f88b 2001 	strb.w	r2, [fp, #1]
 802e392:	f88b 3002 	strb.w	r3, [fp, #2]
 802e396:	f1b8 0f00 	cmp.w	r8, #0
 802e39a:	f10b 0b03 	add.w	fp, fp, #3
 802e39e:	44ca      	add	sl, r9
 802e3a0:	442f      	add	r7, r5
 802e3a2:	dd2e      	ble.n	802e402 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73e>
 802e3a4:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802e3a8:	ea4f 422a 	mov.w	r2, sl, asr #16
 802e3ac:	2a00      	cmp	r2, #0
 802e3ae:	f108 38ff 	add.w	r8, r8, #4294967295
 802e3b2:	ea4f 4127 	mov.w	r1, r7, asr #16
 802e3b6:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802e3ba:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802e3be:	f6bf aeac 	bge.w	802e11a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802e3c2:	1c53      	adds	r3, r2, #1
 802e3c4:	d4e7      	bmi.n	802e396 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e3c6:	42b3      	cmp	r3, r6
 802e3c8:	dce5      	bgt.n	802e396 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e3ca:	1c4b      	adds	r3, r1, #1
 802e3cc:	d4e3      	bmi.n	802e396 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e3ce:	4563      	cmp	r3, ip
 802e3d0:	dce1      	bgt.n	802e396 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d2>
 802e3d2:	fa0f f38c 	sxth.w	r3, ip
 802e3d6:	b236      	sxth	r6, r6
 802e3d8:	e9cd 6300 	strd	r6, r3, [sp]
 802e3dc:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802e3de:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802e3e2:	e9cd e305 	strd	lr, r3, [sp, #20]
 802e3e6:	9202      	str	r2, [sp, #8]
 802e3e8:	4659      	mov	r1, fp
 802e3ea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802e3ec:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802e3ee:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802e3f0:	f7ff faf2 	bl	802d9d8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>
 802e3f4:	f1b8 0f00 	cmp.w	r8, #0
 802e3f8:	f10b 0b03 	add.w	fp, fp, #3
 802e3fc:	44ca      	add	sl, r9
 802e3fe:	442f      	add	r7, r5
 802e400:	dcd0      	bgt.n	802e3a4 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802e402:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802e404:	f8dd 903c 	ldr.w	r9, [sp, #60]	@ 0x3c
 802e408:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802e40c:	3301      	adds	r3, #1
 802e40e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802e412:	4499      	add	r9, r3
 802e414:	e4b9      	b.n	802dd8a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e416:	3b01      	subs	r3, #1
 802e418:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802e41c:	4698      	mov	r8, r3
 802e41e:	9309      	str	r3, [sp, #36]	@ 0x24
 802e420:	e66e      	b.n	802e100 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 802e422:	f1be 0f00 	cmp.w	lr, #0
 802e426:	f43f ae9f 	beq.w	802e168 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e42a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802e42c:	5d92      	ldrb	r2, [r2, r6]
 802e42e:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802e430:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 802e434:	9226      	str	r2, [sp, #152]	@ 0x98
 802e436:	0e12      	lsrs	r2, r2, #24
 802e438:	9219      	str	r2, [sp, #100]	@ 0x64
 802e43a:	e695      	b.n	802e168 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e43c:	eb01 0c06 	add.w	ip, r1, r6
 802e440:	f89c c001 	ldrb.w	ip, [ip, #1]
 802e444:	5d89      	ldrb	r1, [r1, r6]
 802e446:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802e448:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 802e44c:	f856 6021 	ldr.w	r6, [r6, r1, lsl #2]
 802e450:	9227      	str	r2, [sp, #156]	@ 0x9c
 802e452:	0e12      	lsrs	r2, r2, #24
 802e454:	921a      	str	r2, [sp, #104]	@ 0x68
 802e456:	0e32      	lsrs	r2, r6, #24
 802e458:	9626      	str	r6, [sp, #152]	@ 0x98
 802e45a:	9219      	str	r2, [sp, #100]	@ 0x64
 802e45c:	e684      	b.n	802e168 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802e45e:	f43f ac94 	beq.w	802dd8a <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc6>
 802e462:	1e6c      	subs	r4, r5, #1
 802e464:	e4d4      	b.n	802de10 <_ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 802e466:	bf00      	nop

0802e468 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>:
 802e468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e46c:	b089      	sub	sp, #36	@ 0x24
 802e46e:	f9bd b048 	ldrsh.w	fp, [sp, #72]	@ 0x48
 802e472:	e9dd 4014 	ldrd	r4, r0, [sp, #80]	@ 0x50
 802e476:	fb00 450b 	mla	r5, r0, fp, r4
 802e47a:	2800      	cmp	r0, #0
 802e47c:	4694      	mov	ip, r2
 802e47e:	f100 0601 	add.w	r6, r0, #1
 802e482:	442a      	add	r2, r5
 802e484:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 802e488:	f89d a058 	ldrb.w	sl, [sp, #88]	@ 0x58
 802e48c:	f89d 705c 	ldrb.w	r7, [sp, #92]	@ 0x5c
 802e490:	db02      	blt.n	802e498 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x30>
 802e492:	4580      	cmp	r8, r0
 802e494:	f300 810a 	bgt.w	802e6ac <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x244>
 802e498:	f04f 0c00 	mov.w	ip, #0
 802e49c:	46e6      	mov	lr, ip
 802e49e:	4665      	mov	r5, ip
 802e4a0:	46e1      	mov	r9, ip
 802e4a2:	2e00      	cmp	r6, #0
 802e4a4:	db02      	blt.n	802e4ac <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x44>
 802e4a6:	45b0      	cmp	r8, r6
 802e4a8:	f300 811a 	bgt.w	802e6e0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x278>
 802e4ac:	2400      	movs	r4, #0
 802e4ae:	46a0      	mov	r8, r4
 802e4b0:	e9cd 4403 	strd	r4, r4, [sp, #12]
 802e4b4:	f1ba 0f0f 	cmp.w	sl, #15
 802e4b8:	f200 8158 	bhi.w	802e76c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e4bc:	2f0f      	cmp	r7, #15
 802e4be:	f200 8155 	bhi.w	802e76c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e4c2:	b2ba      	uxth	r2, r7
 802e4c4:	fa1f f38a 	uxth.w	r3, sl
 802e4c8:	fb02 f703 	mul.w	r7, r2, r3
 802e4cc:	ebc7 1202 	rsb	r2, r7, r2, lsl #4
 802e4d0:	b292      	uxth	r2, r2
 802e4d2:	fb02 fa08 	mul.w	sl, r2, r8
 802e4d6:	fb07 fb04 	mul.w	fp, r7, r4
 802e4da:	011b      	lsls	r3, r3, #4
 802e4dc:	1bd8      	subs	r0, r3, r7
 802e4de:	b280      	uxth	r0, r0
 802e4e0:	9001      	str	r0, [sp, #4]
 802e4e2:	fb00 f00c 	mul.w	r0, r0, ip
 802e4e6:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802e4ea:	1a9b      	subs	r3, r3, r2
 802e4ec:	b29b      	uxth	r3, r3
 802e4ee:	fb03 000e 	mla	r0, r3, lr, r0
 802e4f2:	4450      	add	r0, sl
 802e4f4:	4458      	add	r0, fp
 802e4f6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802e4fa:	9002      	str	r0, [sp, #8]
 802e4fc:	2800      	cmp	r0, #0
 802e4fe:	f000 80d2 	beq.w	802e6a6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x23e>
 802e502:	f009 10ff 	and.w	r0, r9, #16711935	@ 0xff00ff
 802e506:	f409 467f 	and.w	r6, r9, #65280	@ 0xff00
 802e50a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802e50e:	9005      	str	r0, [sp, #20]
 802e510:	9606      	str	r6, [sp, #24]
 802e512:	d01e      	beq.n	802e552 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xea>
 802e514:	fb00 fb0e 	mul.w	fp, r0, lr
 802e518:	fb06 fe0e 	mul.w	lr, r6, lr
 802e51c:	ea4f 201b 	mov.w	r0, fp, lsr #8
 802e520:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e524:	f50e 7a80 	add.w	sl, lr, #256	@ 0x100
 802e528:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802e52c:	4483      	add	fp, r0
 802e52e:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 802e532:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802e536:	ea4f 2a1e 	mov.w	sl, lr, lsr #8
 802e53a:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802e53e:	f40a 4e7f 	and.w	lr, sl, #65280	@ 0xff00
 802e542:	ea4b 0e0e 	orr.w	lr, fp, lr
 802e546:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802e54a:	9005      	str	r0, [sp, #20]
 802e54c:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 802e550:	9006      	str	r0, [sp, #24]
 802e552:	f405 407f 	and.w	r0, r5, #65280	@ 0xff00
 802e556:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802e55a:	f005 1aff 	and.w	sl, r5, #16711935	@ 0xff00ff
 802e55e:	9007      	str	r0, [sp, #28]
 802e560:	d01d      	beq.n	802e59e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x136>
 802e562:	fb0a fa0c 	mul.w	sl, sl, ip
 802e566:	fb00 f50c 	mul.w	r5, r0, ip
 802e56a:	ea4f 201a 	mov.w	r0, sl, lsr #8
 802e56e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e572:	f505 7b80 	add.w	fp, r5, #256	@ 0x100
 802e576:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802e57a:	4482      	add	sl, r0
 802e57c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802e580:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802e584:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802e588:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802e58c:	f40b 457f 	and.w	r5, fp, #65280	@ 0xff00
 802e590:	ea4a 0505 	orr.w	r5, sl, r5
 802e594:	f405 407f 	and.w	r0, r5, #65280	@ 0xff00
 802e598:	f005 1aff 	and.w	sl, r5, #16711935	@ 0xff00ff
 802e59c:	9007      	str	r0, [sp, #28]
 802e59e:	9803      	ldr	r0, [sp, #12]
 802e5a0:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802e5a4:	f000 19ff 	and.w	r9, r0, #16711935	@ 0xff00ff
 802e5a8:	f400 467f 	and.w	r6, r0, #65280	@ 0xff00
 802e5ac:	d01b      	beq.n	802e5e6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x17e>
 802e5ae:	fb09 f908 	mul.w	r9, r9, r8
 802e5b2:	fb06 f608 	mul.w	r6, r6, r8
 802e5b6:	ea4f 2c19 	mov.w	ip, r9, lsr #8
 802e5ba:	f506 7080 	add.w	r0, r6, #256	@ 0x100
 802e5be:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802e5c2:	f109 1901 	add.w	r9, r9, #65537	@ 0x10001
 802e5c6:	eb00 2616 	add.w	r6, r0, r6, lsr #8
 802e5ca:	44e1      	add	r9, ip
 802e5cc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802e5d0:	0a30      	lsrs	r0, r6, #8
 802e5d2:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802e5d6:	f400 467f 	and.w	r6, r0, #65280	@ 0xff00
 802e5da:	ea49 0606 	orr.w	r6, r9, r6
 802e5de:	f006 19ff 	and.w	r9, r6, #16711935	@ 0xff00ff
 802e5e2:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802e5e6:	9d04      	ldr	r5, [sp, #16]
 802e5e8:	2cff      	cmp	r4, #255	@ 0xff
 802e5ea:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802e5ee:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802e5f2:	d01a      	beq.n	802e62a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x1c2>
 802e5f4:	fb00 f004 	mul.w	r0, r0, r4
 802e5f8:	fb0e f404 	mul.w	r4, lr, r4
 802e5fc:	ea4f 2c10 	mov.w	ip, r0, lsr #8
 802e600:	f504 7e80 	add.w	lr, r4, #256	@ 0x100
 802e604:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802e608:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802e60c:	eb0e 2414 	add.w	r4, lr, r4, lsr #8
 802e610:	4460      	add	r0, ip
 802e612:	0a00      	lsrs	r0, r0, #8
 802e614:	0a24      	lsrs	r4, r4, #8
 802e616:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e61a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 802e61e:	ea40 0e0e 	orr.w	lr, r0, lr
 802e622:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 802e626:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e62a:	9c02      	ldr	r4, [sp, #8]
 802e62c:	9d07      	ldr	r5, [sp, #28]
 802e62e:	ea6f 0c04 	mvn.w	ip, r4
 802e632:	9c01      	ldr	r4, [sp, #4]
 802e634:	fa5f fc8c 	uxtb.w	ip, ip
 802e638:	fb0a fb04 	mul.w	fp, sl, r4
 802e63c:	fb05 f504 	mul.w	r5, r5, r4
 802e640:	9c05      	ldr	r4, [sp, #20]
 802e642:	fb04 bb03 	mla	fp, r4, r3, fp
 802e646:	9c06      	ldr	r4, [sp, #24]
 802e648:	fb09 b902 	mla	r9, r9, r2, fp
 802e64c:	fb04 5303 	mla	r3, r4, r3, r5
 802e650:	fb06 3602 	mla	r6, r6, r2, r3
 802e654:	780c      	ldrb	r4, [r1, #0]
 802e656:	fb00 9007 	mla	r0, r0, r7, r9
 802e65a:	784a      	ldrb	r2, [r1, #1]
 802e65c:	fb0e 6707 	mla	r7, lr, r7, r6
 802e660:	788b      	ldrb	r3, [r1, #2]
 802e662:	fb02 f20c 	mul.w	r2, r2, ip
 802e666:	fb03 f30c 	mul.w	r3, r3, ip
 802e66a:	fb04 fc0c 	mul.w	ip, r4, ip
 802e66e:	0a00      	lsrs	r0, r0, #8
 802e670:	0a3f      	lsrs	r7, r7, #8
 802e672:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802e676:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802e67a:	4338      	orrs	r0, r7
 802e67c:	1c54      	adds	r4, r2, #1
 802e67e:	1c5f      	adds	r7, r3, #1
 802e680:	f10c 0601 	add.w	r6, ip, #1
 802e684:	0a05      	lsrs	r5, r0, #8
 802e686:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802e68a:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 802e68e:	0c04      	lsrs	r4, r0, #16
 802e690:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 802e694:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 802e698:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 802e69c:	eb00 201c 	add.w	r0, r0, ip, lsr #8
 802e6a0:	704a      	strb	r2, [r1, #1]
 802e6a2:	708b      	strb	r3, [r1, #2]
 802e6a4:	7008      	strb	r0, [r1, #0]
 802e6a6:	b009      	add	sp, #36	@ 0x24
 802e6a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e6ac:	2c00      	cmp	r4, #0
 802e6ae:	db01      	blt.n	802e6b4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x24c>
 802e6b0:	45a3      	cmp	fp, r4
 802e6b2:	dc41      	bgt.n	802e738 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2d0>
 802e6b4:	f04f 0e00 	mov.w	lr, #0
 802e6b8:	46f1      	mov	r9, lr
 802e6ba:	1c60      	adds	r0, r4, #1
 802e6bc:	d42b      	bmi.n	802e716 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ae>
 802e6be:	4583      	cmp	fp, r0
 802e6c0:	dd29      	ble.n	802e716 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ae>
 802e6c2:	f1ba 0f00 	cmp.w	sl, #0
 802e6c6:	d005      	beq.n	802e6d4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x26c>
 802e6c8:	7850      	ldrb	r0, [r2, #1]
 802e6ca:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 802e6ce:	ea4f 6c15 	mov.w	ip, r5, lsr #24
 802e6d2:	e6e6      	b.n	802e4a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3a>
 802e6d4:	2e00      	cmp	r6, #0
 802e6d6:	db42      	blt.n	802e75e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2f6>
 802e6d8:	45b0      	cmp	r8, r6
 802e6da:	dd40      	ble.n	802e75e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2f6>
 802e6dc:	46d4      	mov	ip, sl
 802e6de:	4655      	mov	r5, sl
 802e6e0:	b1ef      	cbz	r7, 802e71e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2b6>
 802e6e2:	2c00      	cmp	r4, #0
 802e6e4:	db32      	blt.n	802e74c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2e4>
 802e6e6:	45a3      	cmp	fp, r4
 802e6e8:	dd30      	ble.n	802e74c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2e4>
 802e6ea:	f812 000b 	ldrb.w	r0, [r2, fp]
 802e6ee:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 802e6f2:	9003      	str	r0, [sp, #12]
 802e6f4:	ea4f 6810 	mov.w	r8, r0, lsr #24
 802e6f8:	3401      	adds	r4, #1
 802e6fa:	d424      	bmi.n	802e746 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2de>
 802e6fc:	45a3      	cmp	fp, r4
 802e6fe:	dd22      	ble.n	802e746 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2de>
 802e700:	f1ba 0f00 	cmp.w	sl, #0
 802e704:	d027      	beq.n	802e756 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x2ee>
 802e706:	4493      	add	fp, r2
 802e708:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802e70c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802e710:	9304      	str	r3, [sp, #16]
 802e712:	0e1c      	lsrs	r4, r3, #24
 802e714:	e6ce      	b.n	802e4b4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x4c>
 802e716:	f04f 0c00 	mov.w	ip, #0
 802e71a:	4665      	mov	r5, ip
 802e71c:	e6c1      	b.n	802e4a2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x3a>
 802e71e:	f1ba 0f0f 	cmp.w	sl, #15
 802e722:	d823      	bhi.n	802e76c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x304>
 802e724:	fa1f f38a 	uxth.w	r3, sl
 802e728:	463a      	mov	r2, r7
 802e72a:	46bb      	mov	fp, r7
 802e72c:	46ba      	mov	sl, r7
 802e72e:	e9cd 7703 	strd	r7, r7, [sp, #12]
 802e732:	463c      	mov	r4, r7
 802e734:	46b8      	mov	r8, r7
 802e736:	e6d0      	b.n	802e4da <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x72>
 802e738:	f81c 0005 	ldrb.w	r0, [ip, r5]
 802e73c:	f853 9020 	ldr.w	r9, [r3, r0, lsl #2]
 802e740:	ea4f 6e19 	mov.w	lr, r9, lsr #24
 802e744:	e7b9      	b.n	802e6ba <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x252>
 802e746:	2400      	movs	r4, #0
 802e748:	9404      	str	r4, [sp, #16]
 802e74a:	e6b3      	b.n	802e4b4 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x4c>
 802e74c:	f04f 0800 	mov.w	r8, #0
 802e750:	f8cd 800c 	str.w	r8, [sp, #12]
 802e754:	e7d0      	b.n	802e6f8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x290>
 802e756:	f8cd a010 	str.w	sl, [sp, #16]
 802e75a:	4654      	mov	r4, sl
 802e75c:	e6ae      	b.n	802e4bc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x54>
 802e75e:	4655      	mov	r5, sl
 802e760:	e9cd aa03 	strd	sl, sl, [sp, #12]
 802e764:	4654      	mov	r4, sl
 802e766:	46d0      	mov	r8, sl
 802e768:	46d4      	mov	ip, sl
 802e76a:	e6a7      	b.n	802e4bc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x54>
 802e76c:	4b03      	ldr	r3, [pc, #12]	@ (802e77c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x314>)
 802e76e:	4a04      	ldr	r2, [pc, #16]	@ (802e780 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x318>)
 802e770:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802e774:	4803      	ldr	r0, [pc, #12]	@ (802e784 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x31c>)
 802e776:	f003 febf 	bl	80324f8 <__assert_func>
 802e77a:	bf00      	nop
 802e77c:	080366d4 	.word	0x080366d4
 802e780:	08036d50 	.word	0x08036d50
 802e784:	0803685c 	.word	0x0803685c

0802e788 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802e788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e78c:	ed2d 8b0a 	vpush	{d8-d12}
 802e790:	eeb0 aa40 	vmov.f32	s20, s0
 802e794:	eef0 9a60 	vmov.f32	s19, s1
 802e798:	eeb0 9a41 	vmov.f32	s18, s2
 802e79c:	eef0 8a62 	vmov.f32	s17, s5
 802e7a0:	eeb0 8a43 	vmov.f32	s16, s6
 802e7a4:	eeb0 ca44 	vmov.f32	s24, s8
 802e7a8:	eef0 ba64 	vmov.f32	s23, s9
 802e7ac:	eeb0 ba45 	vmov.f32	s22, s10
 802e7b0:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802e7b4:	b0a3      	sub	sp, #140	@ 0x8c
 802e7b6:	901e      	str	r0, [sp, #120]	@ 0x78
 802e7b8:	9111      	str	r1, [sp, #68]	@ 0x44
 802e7ba:	9213      	str	r2, [sp, #76]	@ 0x4c
 802e7bc:	e9dd 413b 	ldrd	r4, r1, [sp, #236]	@ 0xec
 802e7c0:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 802e7c2:	6860      	ldr	r0, [r4, #4]
 802e7c4:	fb00 1b02 	mla	fp, r0, r2, r1
 802e7c8:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e7ca:	6821      	ldr	r1, [r4, #0]
 802e7cc:	9c3e      	ldr	r4, [sp, #248]	@ 0xf8
 802e7ce:	eb0b 004b 	add.w	r0, fp, fp, lsl #1
 802e7d2:	6852      	ldr	r2, [r2, #4]
 802e7d4:	eb01 0800 	add.w	r8, r1, r0
 802e7d8:	6824      	ldr	r4, [r4, #0]
 802e7da:	e9dd 7b37 	ldrd	r7, fp, [sp, #220]	@ 0xdc
 802e7de:	3204      	adds	r2, #4
 802e7e0:	46c3      	mov	fp, r8
 802e7e2:	46b8      	mov	r8, r7
 802e7e4:	9f38      	ldr	r7, [sp, #224]	@ 0xe0
 802e7e6:	940e      	str	r4, [sp, #56]	@ 0x38
 802e7e8:	920a      	str	r2, [sp, #40]	@ 0x28
 802e7ea:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802e7ec:	2a00      	cmp	r2, #0
 802e7ee:	dc02      	bgt.n	802e7f6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802e7f0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802e7f2:	2a00      	cmp	r2, #0
 802e7f4:	dd63      	ble.n	802e8be <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 802e7f6:	9a3e      	ldr	r2, [sp, #248]	@ 0xf8
 802e7f8:	2b00      	cmp	r3, #0
 802e7fa:	e9d2 6c02 	ldrd	r6, ip, [r2, #8]
 802e7fe:	b234      	sxth	r4, r6
 802e800:	fa0f f98c 	sxth.w	r9, ip
 802e804:	f340 835f 	ble.w	802eec6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73e>
 802e808:	1e65      	subs	r5, r4, #1
 802e80a:	f109 3eff 	add.w	lr, r9, #4294967295
 802e80e:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
 802e812:	e9dd ca39 	ldrd	ip, sl, [sp, #228]	@ 0xe4
 802e816:	ea5f 4228 	movs.w	r2, r8, asr #16
 802e81a:	ea4f 4127 	mov.w	r1, r7, asr #16
 802e81e:	d405      	bmi.n	802e82c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802e820:	42aa      	cmp	r2, r5
 802e822:	da03      	bge.n	802e82c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802e824:	2900      	cmp	r1, #0
 802e826:	db01      	blt.n	802e82c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802e828:	4571      	cmp	r1, lr
 802e82a:	db4d      	blt.n	802e8c8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802e82c:	1c50      	adds	r0, r2, #1
 802e82e:	d406      	bmi.n	802e83e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802e830:	42a0      	cmp	r0, r4
 802e832:	dc04      	bgt.n	802e83e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802e834:	1c48      	adds	r0, r1, #1
 802e836:	d402      	bmi.n	802e83e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802e838:	4548      	cmp	r0, r9
 802e83a:	f340 831e 	ble.w	802ee7a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f2>
 802e83e:	3b01      	subs	r3, #1
 802e840:	44e0      	add	r8, ip
 802e842:	4457      	add	r7, sl
 802e844:	f10b 0b03 	add.w	fp, fp, #3
 802e848:	d1e5      	bne.n	802e816 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802e84a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802e84c:	2b00      	cmp	r3, #0
 802e84e:	dd36      	ble.n	802e8be <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 802e850:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802e854:	ee79 9aab 	vadd.f32	s19, s19, s23
 802e858:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802e85c:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802e860:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802e864:	ee69 7a27 	vmul.f32	s15, s18, s15
 802e868:	ee76 6a68 	vsub.f32	s13, s12, s17
 802e86c:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802e870:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802e874:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e878:	ee16 2a90 	vmov	r2, s13
 802e87c:	3b01      	subs	r3, #1
 802e87e:	9311      	str	r3, [sp, #68]	@ 0x44
 802e880:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802e882:	fb92 f3f3 	sdiv	r3, r2, r3
 802e886:	ee17 2a10 	vmov	r2, s14
 802e88a:	eeb0 7a48 	vmov.f32	s14, s16
 802e88e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e892:	ee17 7a10 	vmov	r7, s14
 802e896:	eeb0 7a68 	vmov.f32	s14, s17
 802e89a:	9339      	str	r3, [sp, #228]	@ 0xe4
 802e89c:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802e89e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802e8a2:	fb92 f3f3 	sdiv	r3, r2, r3
 802e8a6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802e8a8:	933a      	str	r3, [sp, #232]	@ 0xe8
 802e8aa:	ee17 8a10 	vmov	r8, s14
 802e8ae:	9b36      	ldr	r3, [sp, #216]	@ 0xd8
 802e8b0:	eeb0 8a67 	vmov.f32	s16, s15
 802e8b4:	eef0 8a46 	vmov.f32	s17, s12
 802e8b8:	bf08      	it	eq
 802e8ba:	4613      	moveq	r3, r2
 802e8bc:	e795      	b.n	802e7ea <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 802e8be:	b023      	add	sp, #140	@ 0x8c
 802e8c0:	ecbd 8b0a 	vpop	{d8-d12}
 802e8c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e8c8:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802e8cc:	9839      	ldr	r0, [sp, #228]	@ 0xe4
 802e8ce:	1e59      	subs	r1, r3, #1
 802e8d0:	fb00 8201 	mla	r2, r0, r1, r8
 802e8d4:	1412      	asrs	r2, r2, #16
 802e8d6:	9109      	str	r1, [sp, #36]	@ 0x24
 802e8d8:	f100 8151 	bmi.w	802eb7e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e8dc:	42aa      	cmp	r2, r5
 802e8de:	f280 814e 	bge.w	802eb7e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e8e2:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 802e8e4:	fb02 7201 	mla	r2, r2, r1, r7
 802e8e8:	1412      	asrs	r2, r2, #16
 802e8ea:	f100 8148 	bmi.w	802eb7e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e8ee:	f109 31ff 	add.w	r1, r9, #4294967295
 802e8f2:	428a      	cmp	r2, r1
 802e8f4:	f280 8143 	bge.w	802eb7e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 802e8f8:	2b00      	cmp	r3, #0
 802e8fa:	dda6      	ble.n	802e84a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802e8fc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802e900:	445b      	add	r3, fp
 802e902:	930d      	str	r3, [sp, #52]	@ 0x34
 802e904:	f10b 0c03 	add.w	ip, fp, #3
 802e908:	46c1      	mov	r9, r8
 802e90a:	9738      	str	r7, [sp, #224]	@ 0xe0
 802e90c:	4621      	mov	r1, r4
 802e90e:	463b      	mov	r3, r7
 802e910:	e114      	b.n	802eb3c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802e912:	f893 e001 	ldrb.w	lr, [r3, #1]
 802e916:	f856 502e 	ldr.w	r5, [r6, lr, lsl #2]
 802e91a:	950f      	str	r5, [sp, #60]	@ 0x3c
 802e91c:	0e2d      	lsrs	r5, r5, #24
 802e91e:	9506      	str	r5, [sp, #24]
 802e920:	b162      	cbz	r2, 802e93c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802e922:	185d      	adds	r5, r3, r1
 802e924:	786d      	ldrb	r5, [r5, #1]
 802e926:	5c5b      	ldrb	r3, [r3, r1]
 802e928:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 802e92c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802e930:	9112      	str	r1, [sp, #72]	@ 0x48
 802e932:	9310      	str	r3, [sp, #64]	@ 0x40
 802e934:	0e09      	lsrs	r1, r1, #24
 802e936:	0e1b      	lsrs	r3, r3, #24
 802e938:	9108      	str	r1, [sp, #32]
 802e93a:	9307      	str	r3, [sp, #28]
 802e93c:	b2a4      	uxth	r4, r4
 802e93e:	b292      	uxth	r2, r2
 802e940:	fb04 f502 	mul.w	r5, r4, r2
 802e944:	0124      	lsls	r4, r4, #4
 802e946:	1b66      	subs	r6, r4, r5
 802e948:	9b06      	ldr	r3, [sp, #24]
 802e94a:	b2b6      	uxth	r6, r6
 802e94c:	fb06 f103 	mul.w	r1, r6, r3
 802e950:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 802e954:	b292      	uxth	r2, r2
 802e956:	f5c4 7380 	rsb	r3, r4, #256	@ 0x100
 802e95a:	1a9b      	subs	r3, r3, r2
 802e95c:	b29b      	uxth	r3, r3
 802e95e:	fb03 1100 	mla	r1, r3, r0, r1
 802e962:	9c07      	ldr	r4, [sp, #28]
 802e964:	fb02 1104 	mla	r1, r2, r4, r1
 802e968:	9c08      	ldr	r4, [sp, #32]
 802e96a:	fb05 1104 	mla	r1, r5, r4, r1
 802e96e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802e972:	9109      	str	r1, [sp, #36]	@ 0x24
 802e974:	2900      	cmp	r1, #0
 802e976:	f000 80d2 	beq.w	802eb1e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x396>
 802e97a:	f007 14ff 	and.w	r4, r7, #16711935	@ 0xff00ff
 802e97e:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 802e982:	28ff      	cmp	r0, #255	@ 0xff
 802e984:	940b      	str	r4, [sp, #44]	@ 0x2c
 802e986:	910c      	str	r1, [sp, #48]	@ 0x30
 802e988:	d01b      	beq.n	802e9c2 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802e98a:	fb04 f400 	mul.w	r4, r4, r0
 802e98e:	4627      	mov	r7, r4
 802e990:	fb01 fe00 	mul.w	lr, r1, r0
 802e994:	0a24      	lsrs	r4, r4, #8
 802e996:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802e99a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802e99e:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802e9a2:	4427      	add	r7, r4
 802e9a4:	eb00 201e 	add.w	r0, r0, lr, lsr #8
 802e9a8:	0a3f      	lsrs	r7, r7, #8
 802e9aa:	0a00      	lsrs	r0, r0, #8
 802e9ac:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802e9b0:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802e9b4:	4307      	orrs	r7, r0
 802e9b6:	f007 11ff 	and.w	r1, r7, #16711935	@ 0xff00ff
 802e9ba:	910b      	str	r1, [sp, #44]	@ 0x2c
 802e9bc:	f407 417f 	and.w	r1, r7, #65280	@ 0xff00
 802e9c0:	910c      	str	r1, [sp, #48]	@ 0x30
 802e9c2:	9806      	ldr	r0, [sp, #24]
 802e9c4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802e9c6:	28ff      	cmp	r0, #255	@ 0xff
 802e9c8:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 802e9cc:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 802e9d0:	d01a      	beq.n	802ea08 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 802e9d2:	fb07 f700 	mul.w	r7, r7, r0
 802e9d6:	fb0e fe00 	mul.w	lr, lr, r0
 802e9da:	0a3c      	lsrs	r4, r7, #8
 802e9dc:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802e9e0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802e9e4:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802e9e8:	4427      	add	r7, r4
 802e9ea:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802e9ee:	0a3f      	lsrs	r7, r7, #8
 802e9f0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802e9f4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802e9f8:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802e9fc:	ea47 0e0e 	orr.w	lr, r7, lr
 802ea00:	f00e 17ff 	and.w	r7, lr, #16711935	@ 0xff00ff
 802ea04:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ea08:	9c07      	ldr	r4, [sp, #28]
 802ea0a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802ea0c:	2cff      	cmp	r4, #255	@ 0xff
 802ea0e:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 802ea12:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802ea16:	d01b      	beq.n	802ea50 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 802ea18:	fb00 f004 	mul.w	r0, r0, r4
 802ea1c:	fb0a fa04 	mul.w	sl, sl, r4
 802ea20:	ea4f 2810 	mov.w	r8, r0, lsr #8
 802ea24:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802ea28:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802ea2c:	f50a 7480 	add.w	r4, sl, #256	@ 0x100
 802ea30:	4440      	add	r0, r8
 802ea32:	eb04 2a1a 	add.w	sl, r4, sl, lsr #8
 802ea36:	0a00      	lsrs	r0, r0, #8
 802ea38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802ea3c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802ea40:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ea44:	ea40 0a0a 	orr.w	sl, r0, sl
 802ea48:	f00a 10ff 	and.w	r0, sl, #16711935	@ 0xff00ff
 802ea4c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ea50:	9c08      	ldr	r4, [sp, #32]
 802ea52:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802ea54:	2cff      	cmp	r4, #255	@ 0xff
 802ea56:	f001 18ff 	and.w	r8, r1, #16711935	@ 0xff00ff
 802ea5a:	f401 4b7f 	and.w	fp, r1, #65280	@ 0xff00
 802ea5e:	d01b      	beq.n	802ea98 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 802ea60:	fb08 f804 	mul.w	r8, r8, r4
 802ea64:	fb0b fb04 	mul.w	fp, fp, r4
 802ea68:	ea4f 2418 	mov.w	r4, r8, lsr #8
 802ea6c:	f004 11ff 	and.w	r1, r4, #16711935	@ 0xff00ff
 802ea70:	f108 1801 	add.w	r8, r8, #65537	@ 0x10001
 802ea74:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 802ea78:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 802ea7c:	4488      	add	r8, r1
 802ea7e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802ea82:	0a24      	lsrs	r4, r4, #8
 802ea84:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802ea88:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 802ea8c:	ea48 0b0b 	orr.w	fp, r8, fp
 802ea90:	f00b 18ff 	and.w	r8, fp, #16711935	@ 0xff00ff
 802ea94:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802ea98:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802ea9a:	fb07 f706 	mul.w	r7, r7, r6
 802ea9e:	43c9      	mvns	r1, r1
 802eaa0:	fb0e f606 	mul.w	r6, lr, r6
 802eaa4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802eaa6:	f81c ec02 	ldrb.w	lr, [ip, #-2]
 802eaaa:	fb04 7703 	mla	r7, r4, r3, r7
 802eaae:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802eab0:	fb00 7702 	mla	r7, r0, r2, r7
 802eab4:	fb04 6603 	mla	r6, r4, r3, r6
 802eab8:	fb0a 6602 	mla	r6, sl, r2, r6
 802eabc:	f81c 3c03 	ldrb.w	r3, [ip, #-3]
 802eac0:	fb0b 6b05 	mla	fp, fp, r5, r6
 802eac4:	fb08 7805 	mla	r8, r8, r5, r7
 802eac8:	f81c 4c01 	ldrb.w	r4, [ip, #-1]
 802eacc:	b2c9      	uxtb	r1, r1
 802eace:	fb0e fe01 	mul.w	lr, lr, r1
 802ead2:	fb04 f401 	mul.w	r4, r4, r1
 802ead6:	fb03 f101 	mul.w	r1, r3, r1
 802eada:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802eade:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802eae2:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802eae6:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 802eaea:	ea48 030b 	orr.w	r3, r8, fp
 802eaee:	f10e 0201 	add.w	r2, lr, #1
 802eaf2:	1c66      	adds	r6, r4, #1
 802eaf4:	1c4d      	adds	r5, r1, #1
 802eaf6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 802eafa:	0a18      	lsrs	r0, r3, #8
 802eafc:	0c1a      	lsrs	r2, r3, #16
 802eafe:	eb06 2414 	add.w	r4, r6, r4, lsr #8
 802eb02:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802eb06:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802eb0a:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802eb0e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802eb12:	f80c ec02 	strb.w	lr, [ip, #-2]
 802eb16:	f80c 4c01 	strb.w	r4, [ip, #-1]
 802eb1a:	f80c 1c03 	strb.w	r1, [ip, #-3]
 802eb1e:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 802eb20:	9a3a      	ldr	r2, [sp, #232]	@ 0xe8
 802eb22:	4499      	add	r9, r3
 802eb24:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802eb26:	4413      	add	r3, r2
 802eb28:	9338      	str	r3, [sp, #224]	@ 0xe0
 802eb2a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802eb2c:	4563      	cmp	r3, ip
 802eb2e:	d024      	beq.n	802eb7a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802eb30:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 802eb32:	f10c 0c03 	add.w	ip, ip, #3
 802eb36:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802eb3a:	9b38      	ldr	r3, [sp, #224]	@ 0xe0
 802eb3c:	ea4f 4229 	mov.w	r2, r9, asr #16
 802eb40:	141b      	asrs	r3, r3, #16
 802eb42:	fb01 2303 	mla	r3, r1, r3, r2
 802eb46:	980e      	ldr	r0, [sp, #56]	@ 0x38
 802eb48:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 802eb4a:	5cc2      	ldrb	r2, [r0, r3]
 802eb4c:	f3c9 3403 	ubfx	r4, r9, #12, #4
 802eb50:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 802eb54:	9a38      	ldr	r2, [sp, #224]	@ 0xe0
 802eb56:	4403      	add	r3, r0
 802eb58:	f3c2 3203 	ubfx	r2, r2, #12, #4
 802eb5c:	0e38      	lsrs	r0, r7, #24
 802eb5e:	2c00      	cmp	r4, #0
 802eb60:	f47f aed7 	bne.w	802e912 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802eb64:	2a00      	cmp	r2, #0
 802eb66:	f43f aee9 	beq.w	802e93c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802eb6a:	5c5b      	ldrb	r3, [r3, r1]
 802eb6c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802eb6e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802eb72:	9310      	str	r3, [sp, #64]	@ 0x40
 802eb74:	0e1b      	lsrs	r3, r3, #24
 802eb76:	9307      	str	r3, [sp, #28]
 802eb78:	e6e0      	b.n	802e93c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802eb7a:	469b      	mov	fp, r3
 802eb7c:	e665      	b.n	802e84a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802eb7e:	2b00      	cmp	r3, #0
 802eb80:	f77f ae63 	ble.w	802e84a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802eb84:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 802eb88:	ea4f 4228 	mov.w	r2, r8, asr #16
 802eb8c:	1439      	asrs	r1, r7, #16
 802eb8e:	2a00      	cmp	r2, #0
 802eb90:	46d9      	mov	r9, fp
 802eb92:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
 802eb96:	9c3e      	ldr	r4, [sp, #248]	@ 0xf8
 802eb98:	e9dd b539 	ldrd	fp, r5, [sp, #228]	@ 0xe4
 802eb9c:	f3c8 3003 	ubfx	r0, r8, #12, #4
 802eba0:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802eba4:	f2c0 8141 	blt.w	802ee2a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802eba8:	1e73      	subs	r3, r6, #1
 802ebaa:	429a      	cmp	r2, r3
 802ebac:	f280 813d 	bge.w	802ee2a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802ebb0:	2900      	cmp	r1, #0
 802ebb2:	f2c0 813a 	blt.w	802ee2a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802ebb6:	f10c 33ff 	add.w	r3, ip, #4294967295
 802ebba:	4299      	cmp	r1, r3
 802ebbc:	f280 8135 	bge.w	802ee2a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a2>
 802ebc0:	b233      	sxth	r3, r6
 802ebc2:	fb01 2203 	mla	r2, r1, r3, r2
 802ebc6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802ebc8:	930c      	str	r3, [sp, #48]	@ 0x30
 802ebca:	5c8b      	ldrb	r3, [r1, r2]
 802ebcc:	440a      	add	r2, r1
 802ebce:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802ebd0:	4616      	mov	r6, r2
 802ebd2:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802ebd6:	930d      	str	r3, [sp, #52]	@ 0x34
 802ebd8:	0e1b      	lsrs	r3, r3, #24
 802ebda:	2800      	cmp	r0, #0
 802ebdc:	f000 8153 	beq.w	802ee86 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802ebe0:	f896 c001 	ldrb.w	ip, [r6, #1]
 802ebe4:	f851 202c 	ldr.w	r2, [r1, ip, lsl #2]
 802ebe8:	921f      	str	r2, [sp, #124]	@ 0x7c
 802ebea:	0e12      	lsrs	r2, r2, #24
 802ebec:	9214      	str	r2, [sp, #80]	@ 0x50
 802ebee:	f1be 0f00 	cmp.w	lr, #0
 802ebf2:	f040 8155 	bne.w	802eea0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 802ebf6:	b280      	uxth	r0, r0
 802ebf8:	fa1f fc8e 	uxth.w	ip, lr
 802ebfc:	fb00 f20c 	mul.w	r2, r0, ip
 802ec00:	0106      	lsls	r6, r0, #4
 802ec02:	1ab0      	subs	r0, r6, r2
 802ec04:	b281      	uxth	r1, r0
 802ec06:	9814      	ldr	r0, [sp, #80]	@ 0x50
 802ec08:	ebc2 1c0c 	rsb	ip, r2, ip, lsl #4
 802ec0c:	fb01 f000 	mul.w	r0, r1, r0
 802ec10:	9117      	str	r1, [sp, #92]	@ 0x5c
 802ec12:	f5c6 7680 	rsb	r6, r6, #256	@ 0x100
 802ec16:	fa1f f18c 	uxth.w	r1, ip
 802ec1a:	1a76      	subs	r6, r6, r1
 802ec1c:	b2b6      	uxth	r6, r6
 802ec1e:	9619      	str	r6, [sp, #100]	@ 0x64
 802ec20:	fb06 0603 	mla	r6, r6, r3, r0
 802ec24:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802ec26:	9118      	str	r1, [sp, #96]	@ 0x60
 802ec28:	fb01 6600 	mla	r6, r1, r0, r6
 802ec2c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 802ec2e:	fb02 6601 	mla	r6, r2, r1, r6
 802ec32:	f3c6 2107 	ubfx	r1, r6, #8, #8
 802ec36:	911a      	str	r1, [sp, #104]	@ 0x68
 802ec38:	2900      	cmp	r1, #0
 802ec3a:	f000 80e0 	beq.w	802edfe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802ec3e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802ec40:	2bff      	cmp	r3, #255	@ 0xff
 802ec42:	f000 11ff 	and.w	r1, r0, #16711935	@ 0xff00ff
 802ec46:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 802ec4a:	910d      	str	r1, [sp, #52]	@ 0x34
 802ec4c:	901b      	str	r0, [sp, #108]	@ 0x6c
 802ec4e:	d01c      	beq.n	802ec8a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 802ec50:	fb01 f103 	mul.w	r1, r1, r3
 802ec54:	fb00 f003 	mul.w	r0, r0, r3
 802ec58:	460e      	mov	r6, r1
 802ec5a:	4603      	mov	r3, r0
 802ec5c:	0a09      	lsrs	r1, r1, #8
 802ec5e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ec62:	f106 1601 	add.w	r6, r6, #65537	@ 0x10001
 802ec66:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 802ec6a:	4431      	add	r1, r6
 802ec6c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802ec70:	0a09      	lsrs	r1, r1, #8
 802ec72:	0a1b      	lsrs	r3, r3, #8
 802ec74:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ec78:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ec7c:	430b      	orrs	r3, r1
 802ec7e:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 802ec82:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ec86:	910d      	str	r1, [sp, #52]	@ 0x34
 802ec88:	931b      	str	r3, [sp, #108]	@ 0x6c
 802ec8a:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 802ec8c:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ec90:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802ec94:	9914      	ldr	r1, [sp, #80]	@ 0x50
 802ec96:	931c      	str	r3, [sp, #112]	@ 0x70
 802ec98:	29ff      	cmp	r1, #255	@ 0xff
 802ec9a:	d019      	beq.n	802ecd0 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802ec9c:	fb03 f301 	mul.w	r3, r3, r1
 802eca0:	fb06 f601 	mul.w	r6, r6, r1
 802eca4:	0a19      	lsrs	r1, r3, #8
 802eca6:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802ecaa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ecae:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 802ecb2:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802ecb6:	4401      	add	r1, r0
 802ecb8:	0a09      	lsrs	r1, r1, #8
 802ecba:	0a1b      	lsrs	r3, r3, #8
 802ecbc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ecc0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ecc4:	4319      	orrs	r1, r3
 802ecc6:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ecca:	931c      	str	r3, [sp, #112]	@ 0x70
 802eccc:	f401 467f 	and.w	r6, r1, #65280	@ 0xff00
 802ecd0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802ecd2:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ecd6:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 802ecda:	9915      	ldr	r1, [sp, #84]	@ 0x54
 802ecdc:	930c      	str	r3, [sp, #48]	@ 0x30
 802ecde:	29ff      	cmp	r1, #255	@ 0xff
 802ece0:	901d      	str	r0, [sp, #116]	@ 0x74
 802ece2:	d01a      	beq.n	802ed1a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x592>
 802ece4:	fb03 f301 	mul.w	r3, r3, r1
 802ece8:	fb00 fc01 	mul.w	ip, r0, r1
 802ecec:	0a19      	lsrs	r1, r3, #8
 802ecee:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 802ecf2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ecf6:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 802ecfa:	4401      	add	r1, r0
 802ecfc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802ed00:	0a09      	lsrs	r1, r1, #8
 802ed02:	0a1b      	lsrs	r3, r3, #8
 802ed04:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ed08:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ed0c:	4319      	orrs	r1, r3
 802ed0e:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 802ed12:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802ed16:	930c      	str	r3, [sp, #48]	@ 0x30
 802ed18:	911d      	str	r1, [sp, #116]	@ 0x74
 802ed1a:	9921      	ldr	r1, [sp, #132]	@ 0x84
 802ed1c:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802ed20:	f401 4e7f 	and.w	lr, r1, #65280	@ 0xff00
 802ed24:	9916      	ldr	r1, [sp, #88]	@ 0x58
 802ed26:	29ff      	cmp	r1, #255	@ 0xff
 802ed28:	d01c      	beq.n	802ed64 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 802ed2a:	fb0c fc01 	mul.w	ip, ip, r1
 802ed2e:	fb0e fe01 	mul.w	lr, lr, r1
 802ed32:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802ed36:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802ed3a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802ed3e:	f50e 7180 	add.w	r1, lr, #256	@ 0x100
 802ed42:	4484      	add	ip, r0
 802ed44:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802ed48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802ed4c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802ed50:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ed54:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ed58:	ea4c 0e0e 	orr.w	lr, ip, lr
 802ed5c:	f00e 1cff 	and.w	ip, lr, #16711935	@ 0xff00ff
 802ed60:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802ed64:	991a      	ldr	r1, [sp, #104]	@ 0x68
 802ed66:	981c      	ldr	r0, [sp, #112]	@ 0x70
 802ed68:	43c9      	mvns	r1, r1
 802ed6a:	911a      	str	r1, [sp, #104]	@ 0x68
 802ed6c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802ed6e:	fb00 f001 	mul.w	r0, r0, r1
 802ed72:	fb06 f301 	mul.w	r3, r6, r1
 802ed76:	9e19      	ldr	r6, [sp, #100]	@ 0x64
 802ed78:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802ed7a:	fb01 0006 	mla	r0, r1, r6, r0
 802ed7e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 802ed80:	fb01 3106 	mla	r1, r1, r6, r3
 802ed84:	9e18      	ldr	r6, [sp, #96]	@ 0x60
 802ed86:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802ed88:	910d      	str	r1, [sp, #52]	@ 0x34
 802ed8a:	fb03 0306 	mla	r3, r3, r6, r0
 802ed8e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802ed90:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802ed92:	fb0c 3302 	mla	r3, ip, r2, r3
 802ed96:	fb00 1106 	mla	r1, r0, r6, r1
 802ed9a:	f89d 6068 	ldrb.w	r6, [sp, #104]	@ 0x68
 802ed9e:	f899 0002 	ldrb.w	r0, [r9, #2]
 802eda2:	fb0e 1e02 	mla	lr, lr, r2, r1
 802eda6:	f899 2001 	ldrb.w	r2, [r9, #1]
 802edaa:	f899 1000 	ldrb.w	r1, [r9]
 802edae:	fb00 f006 	mul.w	r0, r0, r6
 802edb2:	fb02 fc06 	mul.w	ip, r2, r6
 802edb6:	fb01 f106 	mul.w	r1, r1, r6
 802edba:	0a1b      	lsrs	r3, r3, #8
 802edbc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802edc0:	f003 12ff 	and.w	r2, r3, #16711935	@ 0xff00ff
 802edc4:	1c46      	adds	r6, r0, #1
 802edc6:	f40e 437f 	and.w	r3, lr, #65280	@ 0xff00
 802edca:	4313      	orrs	r3, r2
 802edcc:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 802edd0:	f10c 0201 	add.w	r2, ip, #1
 802edd4:	1c4e      	adds	r6, r1, #1
 802edd6:	ea4f 2e13 	mov.w	lr, r3, lsr #8
 802edda:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 802edde:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 802ede2:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 802ede6:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 802edea:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 802edee:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802edf2:	f889 2001 	strb.w	r2, [r9, #1]
 802edf6:	f889 0002 	strb.w	r0, [r9, #2]
 802edfa:	f889 3000 	strb.w	r3, [r9]
 802edfe:	f1ba 0f00 	cmp.w	sl, #0
 802ee02:	f109 0903 	add.w	r9, r9, #3
 802ee06:	44d8      	add	r8, fp
 802ee08:	442f      	add	r7, r5
 802ee0a:	dd2c      	ble.n	802ee66 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6de>
 802ee0c:	e9d4 6c02 	ldrd	r6, ip, [r4, #8]
 802ee10:	ea4f 4228 	mov.w	r2, r8, asr #16
 802ee14:	2a00      	cmp	r2, #0
 802ee16:	f10a 3aff 	add.w	sl, sl, #4294967295
 802ee1a:	ea4f 4127 	mov.w	r1, r7, asr #16
 802ee1e:	f3c8 3003 	ubfx	r0, r8, #12, #4
 802ee22:	f3c7 3e03 	ubfx	lr, r7, #12, #4
 802ee26:	f6bf aebf 	bge.w	802eba8 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802ee2a:	1c53      	adds	r3, r2, #1
 802ee2c:	d4e7      	bmi.n	802edfe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802ee2e:	42b3      	cmp	r3, r6
 802ee30:	dce5      	bgt.n	802edfe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802ee32:	1c4b      	adds	r3, r1, #1
 802ee34:	d4e3      	bmi.n	802edfe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802ee36:	4563      	cmp	r3, ip
 802ee38:	dce1      	bgt.n	802edfe <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 802ee3a:	fa0f f38c 	sxth.w	r3, ip
 802ee3e:	b236      	sxth	r6, r6
 802ee40:	e9cd 2102 	strd	r2, r1, [sp, #8]
 802ee44:	e9cd 6300 	strd	r6, r3, [sp]
 802ee48:	e9cd 0e04 	strd	r0, lr, [sp, #16]
 802ee4c:	4649      	mov	r1, r9
 802ee4e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802ee50:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802ee52:	981e      	ldr	r0, [sp, #120]	@ 0x78
 802ee54:	f7ff fb08 	bl	802e468 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>
 802ee58:	f1ba 0f00 	cmp.w	sl, #0
 802ee5c:	f109 0903 	add.w	r9, r9, #3
 802ee60:	44d8      	add	r8, fp
 802ee62:	442f      	add	r7, r5
 802ee64:	dcd2      	bgt.n	802ee0c <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x684>
 802ee66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802ee68:	f8dd b02c 	ldr.w	fp, [sp, #44]	@ 0x2c
 802ee6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802ee70:	3301      	adds	r3, #1
 802ee72:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802ee76:	449b      	add	fp, r3
 802ee78:	e4e7      	b.n	802e84a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802ee7a:	3b01      	subs	r3, #1
 802ee7c:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
 802ee80:	469a      	mov	sl, r3
 802ee82:	9309      	str	r3, [sp, #36]	@ 0x24
 802ee84:	e683      	b.n	802eb8e <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 802ee86:	f1be 0f00 	cmp.w	lr, #0
 802ee8a:	f43f aeb4 	beq.w	802ebf6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802ee8e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802ee90:	5c72      	ldrb	r2, [r6, r1]
 802ee92:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802ee94:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 802ee98:	9220      	str	r2, [sp, #128]	@ 0x80
 802ee9a:	0e12      	lsrs	r2, r2, #24
 802ee9c:	9215      	str	r2, [sp, #84]	@ 0x54
 802ee9e:	e6aa      	b.n	802ebf6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802eea0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802eea2:	eb06 0c02 	add.w	ip, r6, r2
 802eea6:	4632      	mov	r2, r6
 802eea8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802eeaa:	f89c c001 	ldrb.w	ip, [ip, #1]
 802eeae:	5d92      	ldrb	r2, [r2, r6]
 802eeb0:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802eeb4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 802eeb8:	0e31      	lsrs	r1, r6, #24
 802eeba:	9220      	str	r2, [sp, #128]	@ 0x80
 802eebc:	0e12      	lsrs	r2, r2, #24
 802eebe:	9621      	str	r6, [sp, #132]	@ 0x84
 802eec0:	9116      	str	r1, [sp, #88]	@ 0x58
 802eec2:	9215      	str	r2, [sp, #84]	@ 0x54
 802eec4:	e697      	b.n	802ebf6 <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46e>
 802eec6:	f43f acc0 	beq.w	802e84a <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 802eeca:	1e65      	subs	r5, r4, #1
 802eecc:	e4fe      	b.n	802e8cc <_ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802eece:	bf00      	nop

0802eed0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>:
 802eed0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802eed4:	b087      	sub	sp, #28
 802eed6:	f89d b058 	ldrb.w	fp, [sp, #88]	@ 0x58
 802eeda:	f9bd 6040 	ldrsh.w	r6, [sp, #64]	@ 0x40
 802eede:	ea6f 000b 	mvn.w	r0, fp
 802eee2:	e9dd 4712 	ldrd	r4, r7, [sp, #72]	@ 0x48
 802eee6:	fb07 4c06 	mla	ip, r7, r6, r4
 802eeea:	b2c0      	uxtb	r0, r0
 802eeec:	2f00      	cmp	r7, #0
 802eeee:	9002      	str	r0, [sp, #8]
 802eef0:	eb02 0e0c 	add.w	lr, r2, ip
 802eef4:	f107 0801 	add.w	r8, r7, #1
 802eef8:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	@ 0x44
 802eefc:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 802ef00:	f89d 0054 	ldrb.w	r0, [sp, #84]	@ 0x54
 802ef04:	db02      	blt.n	802ef0c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x3c>
 802ef06:	45b9      	cmp	r9, r7
 802ef08:	f300 80a0 	bgt.w	802f04c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x17c>
 802ef0c:	468c      	mov	ip, r1
 802ef0e:	460f      	mov	r7, r1
 802ef10:	780a      	ldrb	r2, [r1, #0]
 802ef12:	9203      	str	r2, [sp, #12]
 802ef14:	9201      	str	r2, [sp, #4]
 802ef16:	f1b8 0f00 	cmp.w	r8, #0
 802ef1a:	db01      	blt.n	802ef20 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x50>
 802ef1c:	45c1      	cmp	r9, r8
 802ef1e:	dc7b      	bgt.n	802f018 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x148>
 802ef20:	460b      	mov	r3, r1
 802ef22:	4689      	mov	r9, r1
 802ef24:	f891 a000 	ldrb.w	sl, [r1]
 802ef28:	f8cd a014 	str.w	sl, [sp, #20]
 802ef2c:	2d0f      	cmp	r5, #15
 802ef2e:	f200 80cd 	bhi.w	802f0cc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802ef32:	280f      	cmp	r0, #15
 802ef34:	f200 80ca 	bhi.w	802f0cc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802ef38:	780a      	ldrb	r2, [r1, #0]
 802ef3a:	9204      	str	r2, [sp, #16]
 802ef3c:	b2aa      	uxth	r2, r5
 802ef3e:	b280      	uxth	r0, r0
 802ef40:	fb02 f500 	mul.w	r5, r2, r0
 802ef44:	0112      	lsls	r2, r2, #4
 802ef46:	f89c 8001 	ldrb.w	r8, [ip, #1]
 802ef4a:	f89c e002 	ldrb.w	lr, [ip, #2]
 802ef4e:	1b54      	subs	r4, r2, r5
 802ef50:	b2a4      	uxth	r4, r4
 802ef52:	fb04 f808 	mul.w	r8, r4, r8
 802ef56:	fb04 fe0e 	mul.w	lr, r4, lr
 802ef5a:	ebc5 1000 	rsb	r0, r5, r0, lsl #4
 802ef5e:	b280      	uxth	r0, r0
 802ef60:	9e01      	ldr	r6, [sp, #4]
 802ef62:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802ef66:	f897 c001 	ldrb.w	ip, [r7, #1]
 802ef6a:	1a12      	subs	r2, r2, r0
 802ef6c:	78bf      	ldrb	r7, [r7, #2]
 802ef6e:	b292      	uxth	r2, r2
 802ef70:	fb04 f406 	mul.w	r4, r4, r6
 802ef74:	fb02 8c0c 	mla	ip, r2, ip, r8
 802ef78:	fb02 e707 	mla	r7, r2, r7, lr
 802ef7c:	9e03      	ldr	r6, [sp, #12]
 802ef7e:	f899 8001 	ldrb.w	r8, [r9, #1]
 802ef82:	f899 e002 	ldrb.w	lr, [r9, #2]
 802ef86:	fb02 4206 	mla	r2, r2, r6, r4
 802ef8a:	fb00 cc08 	mla	ip, r0, r8, ip
 802ef8e:	fb00 770e 	mla	r7, r0, lr, r7
 802ef92:	f893 8001 	ldrb.w	r8, [r3, #1]
 802ef96:	f893 e002 	ldrb.w	lr, [r3, #2]
 802ef9a:	fb00 220a 	mla	r2, r0, sl, r2
 802ef9e:	fb05 c808 	mla	r8, r5, r8, ip
 802efa2:	fb05 7e0e 	mla	lr, r5, lr, r7
 802efa6:	9805      	ldr	r0, [sp, #20]
 802efa8:	f8bd 9008 	ldrh.w	r9, [sp, #8]
 802efac:	fb05 2500 	mla	r5, r5, r0, r2
 802efb0:	9a04      	ldr	r2, [sp, #16]
 802efb2:	fa1f f38b 	uxth.w	r3, fp
 802efb6:	f3c8 2807 	ubfx	r8, r8, #8, #8
 802efba:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 802efbe:	fb12 f609 	smulbb	r6, r2, r9
 802efc2:	fb1e fe03 	smulbb	lr, lr, r3
 802efc6:	fb18 f803 	smulbb	r8, r8, r3
 802efca:	784a      	ldrb	r2, [r1, #1]
 802efcc:	7888      	ldrb	r0, [r1, #2]
 802efce:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802efd2:	fb05 6503 	mla	r5, r5, r3, r6
 802efd6:	fb02 8809 	mla	r8, r2, r9, r8
 802efda:	fb00 e909 	mla	r9, r0, r9, lr
 802efde:	b2ad      	uxth	r5, r5
 802efe0:	fa1f f888 	uxth.w	r8, r8
 802efe4:	fa1f f989 	uxth.w	r9, r9
 802efe8:	f108 0001 	add.w	r0, r8, #1
 802efec:	f109 0201 	add.w	r2, r9, #1
 802eff0:	1c6b      	adds	r3, r5, #1
 802eff2:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 802eff6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802effa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802effe:	ea4f 2828 	mov.w	r8, r8, asr #8
 802f002:	ea4f 2929 	mov.w	r9, r9, asr #8
 802f006:	122d      	asrs	r5, r5, #8
 802f008:	f881 8001 	strb.w	r8, [r1, #1]
 802f00c:	f881 9002 	strb.w	r9, [r1, #2]
 802f010:	700d      	strb	r5, [r1, #0]
 802f012:	b007      	add	sp, #28
 802f014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f018:	b388      	cbz	r0, 802f07e <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1ae>
 802f01a:	2c00      	cmp	r4, #0
 802f01c:	db44      	blt.n	802f0a8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d8>
 802f01e:	42a6      	cmp	r6, r4
 802f020:	dd42      	ble.n	802f0a8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d8>
 802f022:	f81e 9006 	ldrb.w	r9, [lr, r6]
 802f026:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802f02a:	4499      	add	r9, r3
 802f02c:	3401      	adds	r4, #1
 802f02e:	f899 a000 	ldrb.w	sl, [r9]
 802f032:	d435      	bmi.n	802f0a0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d0>
 802f034:	42a6      	cmp	r6, r4
 802f036:	dd33      	ble.n	802f0a0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1d0>
 802f038:	2d00      	cmp	r5, #0
 802f03a:	d043      	beq.n	802f0c4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1f4>
 802f03c:	4476      	add	r6, lr
 802f03e:	7872      	ldrb	r2, [r6, #1]
 802f040:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802f044:	5c9c      	ldrb	r4, [r3, r2]
 802f046:	4413      	add	r3, r2
 802f048:	9405      	str	r4, [sp, #20]
 802f04a:	e76f      	b.n	802ef2c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x5c>
 802f04c:	2c00      	cmp	r4, #0
 802f04e:	db01      	blt.n	802f054 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x184>
 802f050:	42a6      	cmp	r6, r4
 802f052:	dc1f      	bgt.n	802f094 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1c4>
 802f054:	460f      	mov	r7, r1
 802f056:	783a      	ldrb	r2, [r7, #0]
 802f058:	9203      	str	r2, [sp, #12]
 802f05a:	1c62      	adds	r2, r4, #1
 802f05c:	d40b      	bmi.n	802f076 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1a6>
 802f05e:	4296      	cmp	r6, r2
 802f060:	dd09      	ble.n	802f076 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1a6>
 802f062:	b31d      	cbz	r5, 802f0ac <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1dc>
 802f064:	f89e c001 	ldrb.w	ip, [lr, #1]
 802f068:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802f06c:	f813 200c 	ldrb.w	r2, [r3, ip]
 802f070:	449c      	add	ip, r3
 802f072:	9201      	str	r2, [sp, #4]
 802f074:	e74f      	b.n	802ef16 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x46>
 802f076:	780a      	ldrb	r2, [r1, #0]
 802f078:	468c      	mov	ip, r1
 802f07a:	9201      	str	r2, [sp, #4]
 802f07c:	e74b      	b.n	802ef16 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x46>
 802f07e:	2d0f      	cmp	r5, #15
 802f080:	f891 a000 	ldrb.w	sl, [r1]
 802f084:	d822      	bhi.n	802f0cc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x1fc>
 802f086:	f8cd a010 	str.w	sl, [sp, #16]
 802f08a:	460b      	mov	r3, r1
 802f08c:	4689      	mov	r9, r1
 802f08e:	f8cd a014 	str.w	sl, [sp, #20]
 802f092:	e753      	b.n	802ef3c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x6c>
 802f094:	f812 700c 	ldrb.w	r7, [r2, ip]
 802f098:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802f09c:	441f      	add	r7, r3
 802f09e:	e7da      	b.n	802f056 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x186>
 802f0a0:	780b      	ldrb	r3, [r1, #0]
 802f0a2:	9305      	str	r3, [sp, #20]
 802f0a4:	460b      	mov	r3, r1
 802f0a6:	e741      	b.n	802ef2c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x5c>
 802f0a8:	4689      	mov	r9, r1
 802f0aa:	e7bf      	b.n	802f02c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x15c>
 802f0ac:	780a      	ldrb	r2, [r1, #0]
 802f0ae:	f1b8 0f00 	cmp.w	r8, #0
 802f0b2:	9201      	str	r2, [sp, #4]
 802f0b4:	468c      	mov	ip, r1
 802f0b6:	f6bf af31 	bge.w	802ef1c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x4c>
 802f0ba:	460b      	mov	r3, r1
 802f0bc:	4689      	mov	r9, r1
 802f0be:	9205      	str	r2, [sp, #20]
 802f0c0:	4692      	mov	sl, r2
 802f0c2:	e736      	b.n	802ef32 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x62>
 802f0c4:	780b      	ldrb	r3, [r1, #0]
 802f0c6:	9305      	str	r3, [sp, #20]
 802f0c8:	460b      	mov	r3, r1
 802f0ca:	e732      	b.n	802ef32 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x62>
 802f0cc:	4b03      	ldr	r3, [pc, #12]	@ (802f0dc <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x20c>)
 802f0ce:	4a04      	ldr	r2, [pc, #16]	@ (802f0e0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x210>)
 802f0d0:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802f0d4:	4803      	ldr	r0, [pc, #12]	@ (802f0e4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh+0x214>)
 802f0d6:	f003 fa0f 	bl	80324f8 <__assert_func>
 802f0da:	bf00      	nop
 802f0dc:	080366d4 	.word	0x080366d4
 802f0e0:	08036d50 	.word	0x08036d50
 802f0e4:	0803685c 	.word	0x0803685c

0802f0e8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802f0e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f0ec:	ed2d 8b08 	vpush	{d8-d11}
 802f0f0:	b095      	sub	sp, #84	@ 0x54
 802f0f2:	f89d 40bc 	ldrb.w	r4, [sp, #188]	@ 0xbc
 802f0f6:	9013      	str	r0, [sp, #76]	@ 0x4c
 802f0f8:	43e0      	mvns	r0, r4
 802f0fa:	e9dd a727 	ldrd	sl, r7, [sp, #156]	@ 0x9c
 802f0fe:	eeb0 aa40 	vmov.f32	s20, s0
 802f102:	eef0 9a60 	vmov.f32	s19, s1
 802f106:	eeb0 9a41 	vmov.f32	s18, s2
 802f10a:	eef0 8a62 	vmov.f32	s17, s5
 802f10e:	eeb0 8a43 	vmov.f32	s16, s6
 802f112:	eef0 ba44 	vmov.f32	s23, s8
 802f116:	eeb0 ba64 	vmov.f32	s22, s9
 802f11a:	eef0 aa45 	vmov.f32	s21, s10
 802f11e:	e9cd 120e 	strd	r1, r2, [sp, #56]	@ 0x38
 802f122:	9411      	str	r4, [sp, #68]	@ 0x44
 802f124:	469b      	mov	fp, r3
 802f126:	e9dd 422b 	ldrd	r4, r2, [sp, #172]	@ 0xac
 802f12a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 802f12c:	6861      	ldr	r1, [r4, #4]
 802f12e:	fb01 2303 	mla	r3, r1, r3, r2
 802f132:	6821      	ldr	r1, [r4, #0]
 802f134:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 802f136:	9c2e      	ldr	r4, [sp, #184]	@ 0xb8
 802f138:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802f13c:	6852      	ldr	r2, [r2, #4]
 802f13e:	6824      	ldr	r4, [r4, #0]
 802f140:	930d      	str	r3, [sp, #52]	@ 0x34
 802f142:	b2c3      	uxtb	r3, r0
 802f144:	930b      	str	r3, [sp, #44]	@ 0x2c
 802f146:	1d13      	adds	r3, r2, #4
 802f148:	940a      	str	r4, [sp, #40]	@ 0x28
 802f14a:	9308      	str	r3, [sp, #32]
 802f14c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802f14e:	2b00      	cmp	r3, #0
 802f150:	dc02      	bgt.n	802f158 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802f152:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802f154:	2b00      	cmp	r3, #0
 802f156:	dd6c      	ble.n	802f232 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802f158:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802f15a:	f1bb 0f00 	cmp.w	fp, #0
 802f15e:	e9d3 5e02 	ldrd	r5, lr, [r3, #8]
 802f162:	b228      	sxth	r0, r5
 802f164:	fa0f f68e 	sxth.w	r6, lr
 802f168:	f340 8245 	ble.w	802f5f6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 802f16c:	e9dd 8929 	ldrd	r8, r9, [sp, #164]	@ 0xa4
 802f170:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802f172:	1e44      	subs	r4, r0, #1
 802f174:	f106 3cff 	add.w	ip, r6, #4294967295
 802f178:	f8cd e024 	str.w	lr, [sp, #36]	@ 0x24
 802f17c:	ea5f 432a 	movs.w	r3, sl, asr #16
 802f180:	ea4f 4127 	mov.w	r1, r7, asr #16
 802f184:	d405      	bmi.n	802f192 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f186:	42a3      	cmp	r3, r4
 802f188:	da03      	bge.n	802f192 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f18a:	2900      	cmp	r1, #0
 802f18c:	db01      	blt.n	802f192 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802f18e:	4561      	cmp	r1, ip
 802f190:	db54      	blt.n	802f23c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802f192:	f113 0e01 	adds.w	lr, r3, #1
 802f196:	d407      	bmi.n	802f1a8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f198:	4586      	cmp	lr, r0
 802f19a:	dc05      	bgt.n	802f1a8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f19c:	f111 0e01 	adds.w	lr, r1, #1
 802f1a0:	d402      	bmi.n	802f1a8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 802f1a2:	45b6      	cmp	lr, r6
 802f1a4:	f340 8189 	ble.w	802f4ba <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 802f1a8:	f1bb 0b01 	subs.w	fp, fp, #1
 802f1ac:	44c2      	add	sl, r8
 802f1ae:	444f      	add	r7, r9
 802f1b0:	f102 0204 	add.w	r2, r2, #4
 802f1b4:	d1e2      	bne.n	802f17c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802f1b6:	920d      	str	r2, [sp, #52]	@ 0x34
 802f1b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802f1ba:	2b00      	cmp	r3, #0
 802f1bc:	dd39      	ble.n	802f232 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802f1be:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802f1c2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802f1c6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802f1ca:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802f1ce:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802f1d2:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802f1d6:	ee69 7a27 	vmul.f32	s15, s18, s15
 802f1da:	ee76 6a68 	vsub.f32	s13, s12, s17
 802f1de:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802f1e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802f1e6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f1ea:	ee16 2a90 	vmov	r2, s13
 802f1ee:	3b01      	subs	r3, #1
 802f1f0:	930e      	str	r3, [sp, #56]	@ 0x38
 802f1f2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f1f4:	fb92 f3f3 	sdiv	r3, r2, r3
 802f1f8:	ee17 2a10 	vmov	r2, s14
 802f1fc:	eeb0 7a48 	vmov.f32	s14, s16
 802f200:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f204:	ee17 7a10 	vmov	r7, s14
 802f208:	eeb0 7a68 	vmov.f32	s14, s17
 802f20c:	9329      	str	r3, [sp, #164]	@ 0xa4
 802f20e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f210:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f214:	fb92 f3f3 	sdiv	r3, r2, r3
 802f218:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802f21a:	932a      	str	r3, [sp, #168]	@ 0xa8
 802f21c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802f21e:	ee17 aa10 	vmov	sl, s14
 802f222:	eeb0 8a67 	vmov.f32	s16, s15
 802f226:	eef0 8a46 	vmov.f32	s17, s12
 802f22a:	bf14      	ite	ne
 802f22c:	469b      	movne	fp, r3
 802f22e:	4693      	moveq	fp, r2
 802f230:	e78c      	b.n	802f14c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 802f232:	b015      	add	sp, #84	@ 0x54
 802f234:	ecbd 8b08 	vpop	{d8-d11}
 802f238:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f23c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802f240:	920d      	str	r2, [sp, #52]	@ 0x34
 802f242:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 802f244:	f10b 32ff 	add.w	r2, fp, #4294967295
 802f248:	fb01 a302 	mla	r3, r1, r2, sl
 802f24c:	141b      	asrs	r3, r3, #16
 802f24e:	9209      	str	r2, [sp, #36]	@ 0x24
 802f250:	f100 80d3 	bmi.w	802f3fa <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f254:	42a3      	cmp	r3, r4
 802f256:	f280 80d0 	bge.w	802f3fa <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f25a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802f25c:	fb03 7302 	mla	r3, r3, r2, r7
 802f260:	141b      	asrs	r3, r3, #16
 802f262:	f100 80ca 	bmi.w	802f3fa <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f266:	3e01      	subs	r6, #1
 802f268:	42b3      	cmp	r3, r6
 802f26a:	f280 80c6 	bge.w	802f3fa <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x312>
 802f26e:	f1bb 0f00 	cmp.w	fp, #0
 802f272:	dda1      	ble.n	802f1b8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f274:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 802f278:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
 802f27c:	930c      	str	r3, [sp, #48]	@ 0x30
 802f27e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802f280:	f103 0804 	add.w	r8, r3, #4
 802f284:	e08f      	b.n	802f3a6 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802f286:	7861      	ldrb	r1, [r4, #1]
 802f288:	eb04 0c00 	add.w	ip, r4, r0
 802f28c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f290:	4431      	add	r1, r6
 802f292:	2a00      	cmp	r2, #0
 802f294:	f000 80a3 	beq.w	802f3de <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 802f298:	5c20      	ldrb	r0, [r4, r0]
 802f29a:	f89c c001 	ldrb.w	ip, [ip, #1]
 802f29e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f2a2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802f2a6:	4430      	add	r0, r6
 802f2a8:	44b4      	add	ip, r6
 802f2aa:	b29b      	uxth	r3, r3
 802f2ac:	b292      	uxth	r2, r2
 802f2ae:	fb03 f402 	mul.w	r4, r3, r2
 802f2b2:	011b      	lsls	r3, r3, #4
 802f2b4:	f891 b001 	ldrb.w	fp, [r1, #1]
 802f2b8:	1b1e      	subs	r6, r3, r4
 802f2ba:	f891 9002 	ldrb.w	r9, [r1, #2]
 802f2be:	b2b6      	uxth	r6, r6
 802f2c0:	7809      	ldrb	r1, [r1, #0]
 802f2c2:	fb06 fb0b 	mul.w	fp, r6, fp
 802f2c6:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802f2ca:	b292      	uxth	r2, r2
 802f2cc:	fb06 f909 	mul.w	r9, r6, r9
 802f2d0:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f2d4:	fb06 f601 	mul.w	r6, r6, r1
 802f2d8:	1a9b      	subs	r3, r3, r2
 802f2da:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802f2de:	b29b      	uxth	r3, r3
 802f2e0:	f89e e002 	ldrb.w	lr, [lr, #2]
 802f2e4:	fb03 bb01 	mla	fp, r3, r1, fp
 802f2e8:	9908      	ldr	r1, [sp, #32]
 802f2ea:	fb03 990e 	mla	r9, r3, lr, r9
 802f2ee:	5d49      	ldrb	r1, [r1, r5]
 802f2f0:	7885      	ldrb	r5, [r0, #2]
 802f2f2:	fb03 6301 	mla	r3, r3, r1, r6
 802f2f6:	f890 e001 	ldrb.w	lr, [r0, #1]
 802f2fa:	fb02 9905 	mla	r9, r2, r5, r9
 802f2fe:	7801      	ldrb	r1, [r0, #0]
 802f300:	fb02 bb0e 	mla	fp, r2, lr, fp
 802f304:	f89c 0002 	ldrb.w	r0, [ip, #2]
 802f308:	fb02 3301 	mla	r3, r2, r1, r3
 802f30c:	f89c e001 	ldrb.w	lr, [ip, #1]
 802f310:	fb04 9900 	mla	r9, r4, r0, r9
 802f314:	f89c 1000 	ldrb.w	r1, [ip]
 802f318:	fb04 bb0e 	mla	fp, r4, lr, fp
 802f31c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802f31e:	f818 cc04 	ldrb.w	ip, [r8, #-4]
 802f322:	fb04 3301 	mla	r3, r4, r1, r3
 802f326:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802f328:	f3c9 2907 	ubfx	r9, r9, #8, #8
 802f32c:	fb19 f902 	smulbb	r9, r9, r2
 802f330:	fb1c fc01 	smulbb	ip, ip, r1
 802f334:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 802f338:	f818 5c02 	ldrb.w	r5, [r8, #-2]
 802f33c:	fb1b fb02 	smulbb	fp, fp, r2
 802f340:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802f344:	f818 6c03 	ldrb.w	r6, [r8, #-3]
 802f348:	fb05 9901 	mla	r9, r5, r1, r9
 802f34c:	fb03 c302 	mla	r3, r3, r2, ip
 802f350:	fb06 bb01 	mla	fp, r6, r1, fp
 802f354:	fa1f f989 	uxth.w	r9, r9
 802f358:	b29b      	uxth	r3, r3
 802f35a:	f109 0101 	add.w	r1, r9, #1
 802f35e:	1c5a      	adds	r2, r3, #1
 802f360:	fa1f fb8b 	uxth.w	fp, fp
 802f364:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 802f368:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802f36c:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 802f36e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802f370:	f10b 0001 	add.w	r0, fp, #1
 802f374:	3a01      	subs	r2, #1
 802f376:	eb00 2b1b 	add.w	fp, r0, fp, lsr #8
 802f37a:	448a      	add	sl, r1
 802f37c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 802f37e:	9209      	str	r2, [sp, #36]	@ 0x24
 802f380:	ea4f 2b2b 	mov.w	fp, fp, asr #8
 802f384:	ea4f 2929 	mov.w	r9, r9, asr #8
 802f388:	121b      	asrs	r3, r3, #8
 802f38a:	3201      	adds	r2, #1
 802f38c:	f808 bc03 	strb.w	fp, [r8, #-3]
 802f390:	f808 9c02 	strb.w	r9, [r8, #-2]
 802f394:	f808 3c04 	strb.w	r3, [r8, #-4]
 802f398:	440f      	add	r7, r1
 802f39a:	f108 0804 	add.w	r8, r8, #4
 802f39e:	d025      	beq.n	802f3ec <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802f3a0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802f3a2:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802f3a6:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f3aa:	143c      	asrs	r4, r7, #16
 802f3ac:	fb00 3404 	mla	r4, r0, r4, r3
 802f3b0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802f3b2:	9e08      	ldr	r6, [sp, #32]
 802f3b4:	5d15      	ldrb	r5, [r2, r4]
 802f3b6:	f3ca 3303 	ubfx	r3, sl, #12, #4
 802f3ba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802f3be:	4414      	add	r4, r2
 802f3c0:	eb06 0e05 	add.w	lr, r6, r5
 802f3c4:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802f3c8:	2b00      	cmp	r3, #0
 802f3ca:	f47f af5c 	bne.w	802f286 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19e>
 802f3ce:	b14a      	cbz	r2, 802f3e4 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 802f3d0:	5c20      	ldrb	r0, [r4, r0]
 802f3d2:	46f4      	mov	ip, lr
 802f3d4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f3d8:	4430      	add	r0, r6
 802f3da:	4671      	mov	r1, lr
 802f3dc:	e765      	b.n	802f2aa <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f3de:	46f4      	mov	ip, lr
 802f3e0:	4670      	mov	r0, lr
 802f3e2:	e762      	b.n	802f2aa <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f3e4:	46f4      	mov	ip, lr
 802f3e6:	4670      	mov	r0, lr
 802f3e8:	4671      	mov	r1, lr
 802f3ea:	e75e      	b.n	802f2aa <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802f3ec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802f3ee:	f8dd b040 	ldr.w	fp, [sp, #64]	@ 0x40
 802f3f2:	eb03 038b 	add.w	r3, r3, fp, lsl #2
 802f3f6:	930d      	str	r3, [sp, #52]	@ 0x34
 802f3f8:	e6de      	b.n	802f1b8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f3fa:	f1bb 0f00 	cmp.w	fp, #0
 802f3fe:	f77f aedb 	ble.w	802f1b8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f402:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
 802f406:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f40a:	1439      	asrs	r1, r7, #16
 802f40c:	4676      	mov	r6, lr
 802f40e:	f8dd b034 	ldr.w	fp, [sp, #52]	@ 0x34
 802f412:	f8dd 80b8 	ldr.w	r8, [sp, #184]	@ 0xb8
 802f416:	2b00      	cmp	r3, #0
 802f418:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802f41c:	f3c7 3203 	ubfx	r2, r7, #12, #4
 802f420:	db29      	blt.n	802f476 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f422:	1e6c      	subs	r4, r5, #1
 802f424:	42a3      	cmp	r3, r4
 802f426:	da26      	bge.n	802f476 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f428:	2900      	cmp	r1, #0
 802f42a:	db24      	blt.n	802f476 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f42c:	1e74      	subs	r4, r6, #1
 802f42e:	42a1      	cmp	r1, r4
 802f430:	da21      	bge.n	802f476 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 802f432:	b22c      	sxth	r4, r5
 802f434:	fb01 3304 	mla	r3, r1, r4, r3
 802f438:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802f43a:	5ce9      	ldrb	r1, [r5, r3]
 802f43c:	442b      	add	r3, r5
 802f43e:	9d08      	ldr	r5, [sp, #32]
 802f440:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f444:	9112      	str	r1, [sp, #72]	@ 0x48
 802f446:	eb05 0c01 	add.w	ip, r5, r1
 802f44a:	2800      	cmp	r0, #0
 802f44c:	d04e      	beq.n	802f4ec <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 802f44e:	f893 e001 	ldrb.w	lr, [r3, #1]
 802f452:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802f456:	44ae      	add	lr, r5
 802f458:	2a00      	cmp	r2, #0
 802f45a:	f000 80c7 	beq.w	802f5ec <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 802f45e:	1919      	adds	r1, r3, r4
 802f460:	7849      	ldrb	r1, [r1, #1]
 802f462:	5d1c      	ldrb	r4, [r3, r4]
 802f464:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802f468:	186b      	adds	r3, r5, r1
 802f46a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802f46e:	930c      	str	r3, [sp, #48]	@ 0x30
 802f470:	1963      	adds	r3, r4, r5
 802f472:	9310      	str	r3, [sp, #64]	@ 0x40
 802f474:	e041      	b.n	802f4fa <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f476:	1c5c      	adds	r4, r3, #1
 802f478:	d405      	bmi.n	802f486 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f47a:	42ac      	cmp	r4, r5
 802f47c:	dc03      	bgt.n	802f486 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f47e:	1c4c      	adds	r4, r1, #1
 802f480:	d401      	bmi.n	802f486 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f482:	42b4      	cmp	r4, r6
 802f484:	dd21      	ble.n	802f4ca <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802f486:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802f488:	f1b9 0f00 	cmp.w	r9, #0
 802f48c:	449a      	add	sl, r3
 802f48e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802f490:	f10b 0b04 	add.w	fp, fp, #4
 802f494:	441f      	add	r7, r3
 802f496:	dd07      	ble.n	802f4a8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802f498:	e9d8 5602 	ldrd	r5, r6, [r8, #8]
 802f49c:	f109 39ff 	add.w	r9, r9, #4294967295
 802f4a0:	ea4f 432a 	mov.w	r3, sl, asr #16
 802f4a4:	1439      	asrs	r1, r7, #16
 802f4a6:	e7b6      	b.n	802f416 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802f4a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802f4aa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802f4ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802f4b0:	3301      	adds	r3, #1
 802f4b2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802f4b6:	930d      	str	r3, [sp, #52]	@ 0x34
 802f4b8:	e67e      	b.n	802f1b8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f4ba:	920d      	str	r2, [sp, #52]	@ 0x34
 802f4bc:	f10b 32ff 	add.w	r2, fp, #4294967295
 802f4c0:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802f4c4:	4691      	mov	r9, r2
 802f4c6:	9209      	str	r2, [sp, #36]	@ 0x24
 802f4c8:	e7a0      	b.n	802f40c <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 802f4ca:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802f4cc:	b236      	sxth	r6, r6
 802f4ce:	b22d      	sxth	r5, r5
 802f4d0:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802f4d4:	e9cd 2405 	strd	r2, r4, [sp, #20]
 802f4d8:	9302      	str	r3, [sp, #8]
 802f4da:	e9cd 5600 	strd	r5, r6, [sp]
 802f4de:	9b08      	ldr	r3, [sp, #32]
 802f4e0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802f4e2:	4659      	mov	r1, fp
 802f4e4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802f4e6:	f7ff fcf3 	bl	802eed0 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhS4_ssiihhh>
 802f4ea:	e7cc      	b.n	802f486 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f4ec:	2a00      	cmp	r2, #0
 802f4ee:	d173      	bne.n	802f5d8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802f4f0:	46e6      	mov	lr, ip
 802f4f2:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f4f6:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802f4fa:	b283      	uxth	r3, r0
 802f4fc:	b292      	uxth	r2, r2
 802f4fe:	fb03 f002 	mul.w	r0, r3, r2
 802f502:	011b      	lsls	r3, r3, #4
 802f504:	f89e 6001 	ldrb.w	r6, [lr, #1]
 802f508:	f89e 5002 	ldrb.w	r5, [lr, #2]
 802f50c:	1a19      	subs	r1, r3, r0
 802f50e:	b289      	uxth	r1, r1
 802f510:	f89e e000 	ldrb.w	lr, [lr]
 802f514:	fb01 f505 	mul.w	r5, r1, r5
 802f518:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802f51c:	fb01 f606 	mul.w	r6, r1, r6
 802f520:	b292      	uxth	r2, r2
 802f522:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f526:	fb01 f40e 	mul.w	r4, r1, lr
 802f52a:	1a9b      	subs	r3, r3, r2
 802f52c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 802f530:	f89c e002 	ldrb.w	lr, [ip, #2]
 802f534:	b29b      	uxth	r3, r3
 802f536:	fb03 6601 	mla	r6, r3, r1, r6
 802f53a:	fb03 5e0e 	mla	lr, r3, lr, r5
 802f53e:	9908      	ldr	r1, [sp, #32]
 802f540:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802f542:	5d49      	ldrb	r1, [r1, r5]
 802f544:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802f546:	fb03 4301 	mla	r3, r3, r1, r4
 802f54a:	f895 c001 	ldrb.w	ip, [r5, #1]
 802f54e:	78ad      	ldrb	r5, [r5, #2]
 802f550:	fb02 6c0c 	mla	ip, r2, ip, r6
 802f554:	fb02 e505 	mla	r5, r2, r5, lr
 802f558:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802f55a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802f55c:	784e      	ldrb	r6, [r1, #1]
 802f55e:	7824      	ldrb	r4, [r4, #0]
 802f560:	7889      	ldrb	r1, [r1, #2]
 802f562:	fb02 3204 	mla	r2, r2, r4, r3
 802f566:	fb00 cc06 	mla	ip, r0, r6, ip
 802f56a:	fb00 5501 	mla	r5, r0, r1, r5
 802f56e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802f570:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 802f572:	780b      	ldrb	r3, [r1, #0]
 802f574:	f89b 4000 	ldrb.w	r4, [fp]
 802f578:	f8bd 1044 	ldrh.w	r1, [sp, #68]	@ 0x44
 802f57c:	fb00 2003 	mla	r0, r0, r3, r2
 802f580:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802f584:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802f588:	fb15 f501 	smulbb	r5, r5, r1
 802f58c:	fb14 f406 	smulbb	r4, r4, r6
 802f590:	fb1c fc01 	smulbb	ip, ip, r1
 802f594:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802f598:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802f59c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802f5a0:	fb00 4001 	mla	r0, r0, r1, r4
 802f5a4:	fb03 5306 	mla	r3, r3, r6, r5
 802f5a8:	fb02 c106 	mla	r1, r2, r6, ip
 802f5ac:	b29b      	uxth	r3, r3
 802f5ae:	b280      	uxth	r0, r0
 802f5b0:	b289      	uxth	r1, r1
 802f5b2:	1c5a      	adds	r2, r3, #1
 802f5b4:	1c4d      	adds	r5, r1, #1
 802f5b6:	1c44      	adds	r4, r0, #1
 802f5b8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802f5bc:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802f5c0:	eb04 2310 	add.w	r3, r4, r0, lsr #8
 802f5c4:	1209      	asrs	r1, r1, #8
 802f5c6:	1212      	asrs	r2, r2, #8
 802f5c8:	121b      	asrs	r3, r3, #8
 802f5ca:	f88b 1001 	strb.w	r1, [fp, #1]
 802f5ce:	f88b 2002 	strb.w	r2, [fp, #2]
 802f5d2:	f88b 3000 	strb.w	r3, [fp]
 802f5d6:	e756      	b.n	802f486 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802f5d8:	5d1c      	ldrb	r4, [r3, r4]
 802f5da:	9b08      	ldr	r3, [sp, #32]
 802f5dc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802f5e0:	18e3      	adds	r3, r4, r3
 802f5e2:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f5e6:	9310      	str	r3, [sp, #64]	@ 0x40
 802f5e8:	46e6      	mov	lr, ip
 802f5ea:	e786      	b.n	802f4fa <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f5ec:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
 802f5f0:	f8cd c040 	str.w	ip, [sp, #64]	@ 0x40
 802f5f4:	e781      	b.n	802f4fa <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 802f5f6:	f43f addf 	beq.w	802f1b8 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 802f5fa:	1e44      	subs	r4, r0, #1
 802f5fc:	e621      	b.n	802f242 <_ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 802f5fe:	bf00      	nop

0802f600 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>:
 802f600:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f604:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802f608:	e9dd 640c 	ldrd	r6, r4, [sp, #48]	@ 0x30
 802f60c:	fb04 6e0c 	mla	lr, r4, ip, r6
 802f610:	2c00      	cmp	r4, #0
 802f612:	461f      	mov	r7, r3
 802f614:	eb02 0a0e 	add.w	sl, r2, lr
 802f618:	f104 0801 	add.w	r8, r4, #1
 802f61c:	f9bd 902c 	ldrsh.w	r9, [sp, #44]	@ 0x2c
 802f620:	f89d 5038 	ldrb.w	r5, [sp, #56]	@ 0x38
 802f624:	f89d 003c 	ldrb.w	r0, [sp, #60]	@ 0x3c
 802f628:	db01      	blt.n	802f62e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x2e>
 802f62a:	45a1      	cmp	r9, r4
 802f62c:	dc6f      	bgt.n	802f70e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x10e>
 802f62e:	f891 b000 	ldrb.w	fp, [r1]
 802f632:	460b      	mov	r3, r1
 802f634:	465c      	mov	r4, fp
 802f636:	468e      	mov	lr, r1
 802f638:	f1b8 0f00 	cmp.w	r8, #0
 802f63c:	db01      	blt.n	802f642 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x42>
 802f63e:	45c1      	cmp	r9, r8
 802f640:	dc4a      	bgt.n	802f6d8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xd8>
 802f642:	f891 9000 	ldrb.w	r9, [r1]
 802f646:	460f      	mov	r7, r1
 802f648:	46ca      	mov	sl, r9
 802f64a:	4688      	mov	r8, r1
 802f64c:	2d0f      	cmp	r5, #15
 802f64e:	f200 8097 	bhi.w	802f780 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f652:	280f      	cmp	r0, #15
 802f654:	f200 8094 	bhi.w	802f780 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f658:	b2aa      	uxth	r2, r5
 802f65a:	b280      	uxth	r0, r0
 802f65c:	fb02 f600 	mul.w	r6, r2, r0
 802f660:	0112      	lsls	r2, r2, #4
 802f662:	1b95      	subs	r5, r2, r6
 802f664:	f893 c001 	ldrb.w	ip, [r3, #1]
 802f668:	789b      	ldrb	r3, [r3, #2]
 802f66a:	b2ad      	uxth	r5, r5
 802f66c:	ebc6 1000 	rsb	r0, r6, r0, lsl #4
 802f670:	fb05 f404 	mul.w	r4, r5, r4
 802f674:	fb05 fc0c 	mul.w	ip, r5, ip
 802f678:	fb05 f503 	mul.w	r5, r5, r3
 802f67c:	b280      	uxth	r0, r0
 802f67e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802f682:	f89e 3001 	ldrb.w	r3, [lr, #1]
 802f686:	1a12      	subs	r2, r2, r0
 802f688:	f89e e002 	ldrb.w	lr, [lr, #2]
 802f68c:	b292      	uxth	r2, r2
 802f68e:	fb02 cc03 	mla	ip, r2, r3, ip
 802f692:	fb02 440b 	mla	r4, r2, fp, r4
 802f696:	fb02 520e 	mla	r2, r2, lr, r5
 802f69a:	f898 3001 	ldrb.w	r3, [r8, #1]
 802f69e:	f898 8002 	ldrb.w	r8, [r8, #2]
 802f6a2:	fb00 cc03 	mla	ip, r0, r3, ip
 802f6a6:	fb00 4909 	mla	r9, r0, r9, r4
 802f6aa:	fb00 2008 	mla	r0, r0, r8, r2
 802f6ae:	787b      	ldrb	r3, [r7, #1]
 802f6b0:	78ba      	ldrb	r2, [r7, #2]
 802f6b2:	fb06 9a0a 	mla	sl, r6, sl, r9
 802f6b6:	fb06 c303 	mla	r3, r6, r3, ip
 802f6ba:	fb06 0602 	mla	r6, r6, r2, r0
 802f6be:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 802f6c2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802f6c6:	0236      	lsls	r6, r6, #8
 802f6c8:	ea43 030a 	orr.w	r3, r3, sl
 802f6cc:	f406 067f 	and.w	r6, r6, #16711680	@ 0xff0000
 802f6d0:	4333      	orrs	r3, r6
 802f6d2:	600b      	str	r3, [r1, #0]
 802f6d4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f6d8:	b378      	cbz	r0, 802f73a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x13a>
 802f6da:	2e00      	cmp	r6, #0
 802f6dc:	db3f      	blt.n	802f75e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x15e>
 802f6de:	45b4      	cmp	ip, r6
 802f6e0:	dd3d      	ble.n	802f75e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x15e>
 802f6e2:	f81a 800c 	ldrb.w	r8, [sl, ip]
 802f6e6:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802f6ea:	44b8      	add	r8, r7
 802f6ec:	3601      	adds	r6, #1
 802f6ee:	f898 9000 	ldrb.w	r9, [r8]
 802f6f2:	d430      	bmi.n	802f756 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x156>
 802f6f4:	45b4      	cmp	ip, r6
 802f6f6:	dd2e      	ble.n	802f756 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x156>
 802f6f8:	2d00      	cmp	r5, #0
 802f6fa:	d03d      	beq.n	802f778 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x178>
 802f6fc:	44d4      	add	ip, sl
 802f6fe:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802f702:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802f706:	f817 a002 	ldrb.w	sl, [r7, r2]
 802f70a:	4417      	add	r7, r2
 802f70c:	e79e      	b.n	802f64c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x4c>
 802f70e:	2e00      	cmp	r6, #0
 802f710:	db01      	blt.n	802f716 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x116>
 802f712:	45b4      	cmp	ip, r6
 802f714:	dc19      	bgt.n	802f74a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x14a>
 802f716:	468e      	mov	lr, r1
 802f718:	1c73      	adds	r3, r6, #1
 802f71a:	f89e b000 	ldrb.w	fp, [lr]
 802f71e:	d409      	bmi.n	802f734 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x134>
 802f720:	459c      	cmp	ip, r3
 802f722:	dd07      	ble.n	802f734 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x134>
 802f724:	b1ed      	cbz	r5, 802f762 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x162>
 802f726:	f89a 3001 	ldrb.w	r3, [sl, #1]
 802f72a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802f72e:	5cfc      	ldrb	r4, [r7, r3]
 802f730:	443b      	add	r3, r7
 802f732:	e781      	b.n	802f638 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x38>
 802f734:	780c      	ldrb	r4, [r1, #0]
 802f736:	460b      	mov	r3, r1
 802f738:	e77e      	b.n	802f638 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x38>
 802f73a:	2d0f      	cmp	r5, #15
 802f73c:	f891 9000 	ldrb.w	r9, [r1]
 802f740:	d81e      	bhi.n	802f780 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x180>
 802f742:	460f      	mov	r7, r1
 802f744:	4688      	mov	r8, r1
 802f746:	46ca      	mov	sl, r9
 802f748:	e786      	b.n	802f658 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x58>
 802f74a:	f812 e00e 	ldrb.w	lr, [r2, lr]
 802f74e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802f752:	449e      	add	lr, r3
 802f754:	e7e0      	b.n	802f718 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x118>
 802f756:	f891 a000 	ldrb.w	sl, [r1]
 802f75a:	460f      	mov	r7, r1
 802f75c:	e776      	b.n	802f64c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x4c>
 802f75e:	4688      	mov	r8, r1
 802f760:	e7c4      	b.n	802f6ec <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0xec>
 802f762:	f1b8 0f00 	cmp.w	r8, #0
 802f766:	780c      	ldrb	r4, [r1, #0]
 802f768:	460b      	mov	r3, r1
 802f76a:	f6bf af68 	bge.w	802f63e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x3e>
 802f76e:	460f      	mov	r7, r1
 802f770:	4688      	mov	r8, r1
 802f772:	46a2      	mov	sl, r4
 802f774:	46a1      	mov	r9, r4
 802f776:	e76c      	b.n	802f652 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x52>
 802f778:	f891 a000 	ldrb.w	sl, [r1]
 802f77c:	460f      	mov	r7, r1
 802f77e:	e768      	b.n	802f652 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x52>
 802f780:	4b03      	ldr	r3, [pc, #12]	@ (802f790 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x190>)
 802f782:	4a04      	ldr	r2, [pc, #16]	@ (802f794 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x194>)
 802f784:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802f788:	4803      	ldr	r0, [pc, #12]	@ (802f798 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh+0x198>)
 802f78a:	f002 feb5 	bl	80324f8 <__assert_func>
 802f78e:	bf00      	nop
 802f790:	080366d4 	.word	0x080366d4
 802f794:	08036d50 	.word	0x08036d50
 802f798:	0803685c 	.word	0x0803685c

0802f79c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802f79c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f7a0:	ed2d 8b0a 	vpush	{d8-d12}
 802f7a4:	eeb0 aa40 	vmov.f32	s20, s0
 802f7a8:	eef0 9a60 	vmov.f32	s19, s1
 802f7ac:	eeb0 9a41 	vmov.f32	s18, s2
 802f7b0:	eef0 8a62 	vmov.f32	s17, s5
 802f7b4:	eeb0 8a43 	vmov.f32	s16, s6
 802f7b8:	eeb0 ca44 	vmov.f32	s24, s8
 802f7bc:	eef0 ba64 	vmov.f32	s23, s9
 802f7c0:	eeb0 ba45 	vmov.f32	s22, s10
 802f7c4:	eef7 aa00 	vmov.f32	s21, #112	@ 0x3f800000  1.0
 802f7c8:	b091      	sub	sp, #68	@ 0x44
 802f7ca:	e9cd 120a 	strd	r1, r2, [sp, #40]	@ 0x28
 802f7ce:	e9dd 9525 	ldrd	r9, r5, [sp, #148]	@ 0x94
 802f7d2:	900f      	str	r0, [sp, #60]	@ 0x3c
 802f7d4:	4698      	mov	r8, r3
 802f7d6:	e9dd 0229 	ldrd	r0, r2, [sp, #164]	@ 0xa4
 802f7da:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802f7dc:	6841      	ldr	r1, [r0, #4]
 802f7de:	fb01 2303 	mla	r3, r1, r3, r2
 802f7e2:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 802f7e4:	6801      	ldr	r1, [r0, #0]
 802f7e6:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 802f7e8:	6852      	ldr	r2, [r2, #4]
 802f7ea:	6800      	ldr	r0, [r0, #0]
 802f7ec:	eb01 0a83 	add.w	sl, r1, r3, lsl #2
 802f7f0:	1d13      	adds	r3, r2, #4
 802f7f2:	9009      	str	r0, [sp, #36]	@ 0x24
 802f7f4:	930c      	str	r3, [sp, #48]	@ 0x30
 802f7f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802f7f8:	2b00      	cmp	r3, #0
 802f7fa:	dc02      	bgt.n	802f802 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802f7fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802f7fe:	2b00      	cmp	r3, #0
 802f800:	dd66      	ble.n	802f8d0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802f802:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802f804:	f1b8 0f00 	cmp.w	r8, #0
 802f808:	e9d3 4e02 	ldrd	r4, lr, [r3, #8]
 802f80c:	b221      	sxth	r1, r4
 802f80e:	fa0f f78e 	sxth.w	r7, lr
 802f812:	f340 81df 	ble.w	802fbd4 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 802f816:	1e4e      	subs	r6, r1, #1
 802f818:	f107 3cff 	add.w	ip, r7, #4294967295
 802f81c:	f8cd e01c 	str.w	lr, [sp, #28]
 802f820:	e9dd eb27 	ldrd	lr, fp, [sp, #156]	@ 0x9c
 802f824:	ea5f 4329 	movs.w	r3, r9, asr #16
 802f828:	ea4f 4025 	mov.w	r0, r5, asr #16
 802f82c:	d405      	bmi.n	802f83a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802f82e:	42b3      	cmp	r3, r6
 802f830:	da03      	bge.n	802f83a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802f832:	2800      	cmp	r0, #0
 802f834:	db01      	blt.n	802f83a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802f836:	4560      	cmp	r0, ip
 802f838:	db4f      	blt.n	802f8da <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802f83a:	1c5a      	adds	r2, r3, #1
 802f83c:	d406      	bmi.n	802f84c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802f83e:	428a      	cmp	r2, r1
 802f840:	dc04      	bgt.n	802f84c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802f842:	1c42      	adds	r2, r0, #1
 802f844:	d402      	bmi.n	802f84c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802f846:	42ba      	cmp	r2, r7
 802f848:	f340 8157 	ble.w	802fafa <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802f84c:	f1b8 0801 	subs.w	r8, r8, #1
 802f850:	44f1      	add	r9, lr
 802f852:	445d      	add	r5, fp
 802f854:	f10a 0a04 	add.w	sl, sl, #4
 802f858:	d1e4      	bne.n	802f824 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802f85a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802f85c:	2b00      	cmp	r3, #0
 802f85e:	dd37      	ble.n	802f8d0 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802f860:	ee3a aa0c 	vadd.f32	s20, s20, s24
 802f864:	ee79 9aab 	vadd.f32	s19, s19, s23
 802f868:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 802f86c:	ee39 9a0b 	vadd.f32	s18, s18, s22
 802f870:	ee29 6aa7 	vmul.f32	s12, s19, s15
 802f874:	ee69 7a27 	vmul.f32	s15, s18, s15
 802f878:	ee76 6a68 	vsub.f32	s13, s12, s17
 802f87c:	ee37 7ac8 	vsub.f32	s14, s15, s16
 802f880:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802f884:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f888:	ee16 2a90 	vmov	r2, s13
 802f88c:	3b01      	subs	r3, #1
 802f88e:	930a      	str	r3, [sp, #40]	@ 0x28
 802f890:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802f892:	fb92 f3f3 	sdiv	r3, r2, r3
 802f896:	ee17 2a10 	vmov	r2, s14
 802f89a:	eeb0 7a48 	vmov.f32	s14, s16
 802f89e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f8a2:	ee17 5a10 	vmov	r5, s14
 802f8a6:	eeb0 7a68 	vmov.f32	s14, s17
 802f8aa:	9327      	str	r3, [sp, #156]	@ 0x9c
 802f8ac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802f8ae:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 802f8b2:	fb92 f3f3 	sdiv	r3, r2, r3
 802f8b6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802f8b8:	9328      	str	r3, [sp, #160]	@ 0xa0
 802f8ba:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802f8bc:	ee17 9a10 	vmov	r9, s14
 802f8c0:	eeb0 8a67 	vmov.f32	s16, s15
 802f8c4:	eef0 8a46 	vmov.f32	s17, s12
 802f8c8:	bf14      	ite	ne
 802f8ca:	4698      	movne	r8, r3
 802f8cc:	4690      	moveq	r8, r2
 802f8ce:	e792      	b.n	802f7f6 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 802f8d0:	b011      	add	sp, #68	@ 0x44
 802f8d2:	ecbd 8b0a 	vpop	{d8-d12}
 802f8d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f8da:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802f8de:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 802f8e0:	f108 32ff 	add.w	r2, r8, #4294967295
 802f8e4:	fb00 9302 	mla	r3, r0, r2, r9
 802f8e8:	141b      	asrs	r3, r3, #16
 802f8ea:	9207      	str	r2, [sp, #28]
 802f8ec:	f100 80a6 	bmi.w	802fa3c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f8f0:	42b3      	cmp	r3, r6
 802f8f2:	f280 80a3 	bge.w	802fa3c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f8f6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802f8f8:	fb03 5302 	mla	r3, r3, r2, r5
 802f8fc:	141b      	asrs	r3, r3, #16
 802f8fe:	f100 809d 	bmi.w	802fa3c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f902:	3f01      	subs	r7, #1
 802f904:	42bb      	cmp	r3, r7
 802f906:	f280 8099 	bge.w	802fa3c <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 802f90a:	f1b8 0f00 	cmp.w	r8, #0
 802f90e:	dda4      	ble.n	802f85a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802f910:	f8cd a020 	str.w	sl, [sp, #32]
 802f914:	f8cd a034 	str.w	sl, [sp, #52]	@ 0x34
 802f918:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 802f91c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 802f920:	e065      	b.n	802f9ee <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802f922:	f890 c001 	ldrb.w	ip, [r0, #1]
 802f926:	1844      	adds	r4, r0, r1
 802f928:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802f92c:	44d4      	add	ip, sl
 802f92e:	2a00      	cmp	r2, #0
 802f930:	d078      	beq.n	802fa24 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802f932:	5c40      	ldrb	r0, [r0, r1]
 802f934:	7866      	ldrb	r6, [r4, #1]
 802f936:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802f93a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802f93e:	4450      	add	r0, sl
 802f940:	4456      	add	r6, sl
 802f942:	b29b      	uxth	r3, r3
 802f944:	b292      	uxth	r2, r2
 802f946:	fb03 f402 	mul.w	r4, r3, r2
 802f94a:	011b      	lsls	r3, r3, #4
 802f94c:	f89c 8000 	ldrb.w	r8, [ip]
 802f950:	f89c e001 	ldrb.w	lr, [ip, #1]
 802f954:	1b19      	subs	r1, r3, r4
 802f956:	f89c c002 	ldrb.w	ip, [ip, #2]
 802f95a:	b289      	uxth	r1, r1
 802f95c:	fb01 fe0e 	mul.w	lr, r1, lr
 802f960:	fb01 f808 	mul.w	r8, r1, r8
 802f964:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 802f968:	fb01 f10c 	mul.w	r1, r1, ip
 802f96c:	b292      	uxth	r2, r2
 802f96e:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802f972:	f81a b00b 	ldrb.w	fp, [sl, fp]
 802f976:	f897 c001 	ldrb.w	ip, [r7, #1]
 802f97a:	1a9b      	subs	r3, r3, r2
 802f97c:	78bf      	ldrb	r7, [r7, #2]
 802f97e:	b29b      	uxth	r3, r3
 802f980:	fb03 880b 	mla	r8, r3, fp, r8
 802f984:	fb03 ec0c 	mla	ip, r3, ip, lr
 802f988:	fb03 1307 	mla	r3, r3, r7, r1
 802f98c:	7881      	ldrb	r1, [r0, #2]
 802f98e:	f890 b000 	ldrb.w	fp, [r0]
 802f992:	fb02 3301 	mla	r3, r2, r1, r3
 802f996:	f890 e001 	ldrb.w	lr, [r0, #1]
 802f99a:	78b1      	ldrb	r1, [r6, #2]
 802f99c:	fb02 880b 	mla	r8, r2, fp, r8
 802f9a0:	fb02 cc0e 	mla	ip, r2, lr, ip
 802f9a4:	fb04 3301 	mla	r3, r4, r1, r3
 802f9a8:	f896 b000 	ldrb.w	fp, [r6]
 802f9ac:	f896 e001 	ldrb.w	lr, [r6, #1]
 802f9b0:	0219      	lsls	r1, r3, #8
 802f9b2:	fb04 880b 	mla	r8, r4, fp, r8
 802f9b6:	fb04 cc0e 	mla	ip, r4, lr, ip
 802f9ba:	f401 037f 	and.w	r3, r1, #16711680	@ 0xff0000
 802f9be:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 802f9c0:	9a07      	ldr	r2, [sp, #28]
 802f9c2:	4489      	add	r9, r1
 802f9c4:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802f9c6:	f3c8 2807 	ubfx	r8, r8, #8, #8
 802f9ca:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802f9ce:	ea48 080c 	orr.w	r8, r8, ip
 802f9d2:	440d      	add	r5, r1
 802f9d4:	9908      	ldr	r1, [sp, #32]
 802f9d6:	3a01      	subs	r2, #1
 802f9d8:	ea48 0303 	orr.w	r3, r8, r3
 802f9dc:	9207      	str	r2, [sp, #28]
 802f9de:	f841 3b04 	str.w	r3, [r1], #4
 802f9e2:	3201      	adds	r2, #1
 802f9e4:	9108      	str	r1, [sp, #32]
 802f9e6:	d024      	beq.n	802fa32 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802f9e8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802f9ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802f9ee:	ea4f 4329 	mov.w	r3, r9, asr #16
 802f9f2:	1428      	asrs	r0, r5, #16
 802f9f4:	fb01 3000 	mla	r0, r1, r0, r3
 802f9f8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802f9fa:	f3c9 3303 	ubfx	r3, r9, #12, #4
 802f9fe:	f812 b000 	ldrb.w	fp, [r2, r0]
 802fa02:	4410      	add	r0, r2
 802fa04:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 802fa08:	eb0a 070b 	add.w	r7, sl, fp
 802fa0c:	f3c5 3203 	ubfx	r2, r5, #12, #4
 802fa10:	2b00      	cmp	r3, #0
 802fa12:	d186      	bne.n	802f922 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802fa14:	b14a      	cbz	r2, 802fa2a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 802fa16:	5c40      	ldrb	r0, [r0, r1]
 802fa18:	463e      	mov	r6, r7
 802fa1a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802fa1e:	4450      	add	r0, sl
 802fa20:	46bc      	mov	ip, r7
 802fa22:	e78e      	b.n	802f942 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802fa24:	463e      	mov	r6, r7
 802fa26:	4638      	mov	r0, r7
 802fa28:	e78b      	b.n	802f942 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802fa2a:	463e      	mov	r6, r7
 802fa2c:	4638      	mov	r0, r7
 802fa2e:	46bc      	mov	ip, r7
 802fa30:	e787      	b.n	802f942 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 802fa32:	e9dd a80d 	ldrd	sl, r8, [sp, #52]	@ 0x34
 802fa36:	eb0a 0a88 	add.w	sl, sl, r8, lsl #2
 802fa3a:	e70e      	b.n	802f85a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fa3c:	f1b8 0f00 	cmp.w	r8, #0
 802fa40:	f77f af0b 	ble.w	802f85a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fa44:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802fa48:	ea4f 4329 	mov.w	r3, r9, asr #16
 802fa4c:	1428      	asrs	r0, r5, #16
 802fa4e:	4677      	mov	r7, lr
 802fa50:	46d0      	mov	r8, sl
 802fa52:	f8cd a020 	str.w	sl, [sp, #32]
 802fa56:	f8dd a0b0 	ldr.w	sl, [sp, #176]	@ 0xb0
 802fa5a:	2b00      	cmp	r3, #0
 802fa5c:	f3c9 3103 	ubfx	r1, r9, #12, #4
 802fa60:	f3c5 3203 	ubfx	r2, r5, #12, #4
 802fa64:	db28      	blt.n	802fab8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa66:	1e66      	subs	r6, r4, #1
 802fa68:	42b3      	cmp	r3, r6
 802fa6a:	da25      	bge.n	802fab8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa6c:	2800      	cmp	r0, #0
 802fa6e:	db23      	blt.n	802fab8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa70:	1e7e      	subs	r6, r7, #1
 802fa72:	42b0      	cmp	r0, r6
 802fa74:	da20      	bge.n	802fab8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802fa76:	b224      	sxth	r4, r4
 802fa78:	fb00 3304 	mla	r3, r0, r4, r3
 802fa7c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802fa7e:	5cc7      	ldrb	r7, [r0, r3]
 802fa80:	4403      	add	r3, r0
 802fa82:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802fa84:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802fa88:	eb00 0c07 	add.w	ip, r0, r7
 802fa8c:	2900      	cmp	r1, #0
 802fa8e:	d04a      	beq.n	802fb26 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802fa90:	785e      	ldrb	r6, [r3, #1]
 802fa92:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802fa96:	4406      	add	r6, r0
 802fa98:	2a00      	cmp	r2, #0
 802fa9a:	f000 8098 	beq.w	802fbce <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802fa9e:	1918      	adds	r0, r3, r4
 802faa0:	7840      	ldrb	r0, [r0, #1]
 802faa2:	5d1c      	ldrb	r4, [r3, r4]
 802faa4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802faa6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802faaa:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802faae:	1818      	adds	r0, r3, r0
 802fab0:	18e3      	adds	r3, r4, r3
 802fab2:	900d      	str	r0, [sp, #52]	@ 0x34
 802fab4:	930e      	str	r3, [sp, #56]	@ 0x38
 802fab6:	e03b      	b.n	802fb30 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fab8:	1c5e      	adds	r6, r3, #1
 802faba:	d405      	bmi.n	802fac8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fabc:	42a6      	cmp	r6, r4
 802fabe:	dc03      	bgt.n	802fac8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fac0:	1c46      	adds	r6, r0, #1
 802fac2:	d401      	bmi.n	802fac8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fac4:	42be      	cmp	r6, r7
 802fac6:	dd1f      	ble.n	802fb08 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802fac8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802faca:	f1bb 0f00 	cmp.w	fp, #0
 802face:	4499      	add	r9, r3
 802fad0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802fad2:	f108 0804 	add.w	r8, r8, #4
 802fad6:	441d      	add	r5, r3
 802fad8:	dd07      	ble.n	802faea <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 802fada:	e9da 4702 	ldrd	r4, r7, [sl, #8]
 802fade:	f10b 3bff 	add.w	fp, fp, #4294967295
 802fae2:	ea4f 4329 	mov.w	r3, r9, asr #16
 802fae6:	1428      	asrs	r0, r5, #16
 802fae8:	e7b7      	b.n	802fa5a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 802faea:	e9dd 3a07 	ldrd	r3, sl, [sp, #28]
 802faee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802faf2:	3301      	adds	r3, #1
 802faf4:	eb0a 0a83 	add.w	sl, sl, r3, lsl #2
 802faf8:	e6af      	b.n	802f85a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fafa:	f108 32ff 	add.w	r2, r8, #4294967295
 802fafe:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802fb02:	4693      	mov	fp, r2
 802fb04:	9207      	str	r2, [sp, #28]
 802fb06:	e7a2      	b.n	802fa4e <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802fb08:	b23f      	sxth	r7, r7
 802fb0a:	b224      	sxth	r4, r4
 802fb0c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 802fb10:	e9cd 3002 	strd	r3, r0, [sp, #8]
 802fb14:	e9cd 4700 	strd	r4, r7, [sp]
 802fb18:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802fb1a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802fb1c:	4641      	mov	r1, r8
 802fb1e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802fb20:	f7ff fd6e 	bl	802f600 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPmPKhS4_ssiihh>
 802fb24:	e7d0      	b.n	802fac8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fb26:	2a00      	cmp	r2, #0
 802fb28:	d147      	bne.n	802fbba <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 802fb2a:	4666      	mov	r6, ip
 802fb2c:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 802fb30:	b28b      	uxth	r3, r1
 802fb32:	b292      	uxth	r2, r2
 802fb34:	fb03 f002 	mul.w	r0, r3, r2
 802fb38:	011b      	lsls	r3, r3, #4
 802fb3a:	f896 e000 	ldrb.w	lr, [r6]
 802fb3e:	7874      	ldrb	r4, [r6, #1]
 802fb40:	1a19      	subs	r1, r3, r0
 802fb42:	78b6      	ldrb	r6, [r6, #2]
 802fb44:	b289      	uxth	r1, r1
 802fb46:	fb01 f404 	mul.w	r4, r1, r4
 802fb4a:	fb01 fe0e 	mul.w	lr, r1, lr
 802fb4e:	ebc0 1202 	rsb	r2, r0, r2, lsl #4
 802fb52:	fb01 f106 	mul.w	r1, r1, r6
 802fb56:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802fb58:	b292      	uxth	r2, r2
 802fb5a:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802fb5e:	5df7      	ldrb	r7, [r6, r7]
 802fb60:	1a9b      	subs	r3, r3, r2
 802fb62:	f89c 6001 	ldrb.w	r6, [ip, #1]
 802fb66:	f89c c002 	ldrb.w	ip, [ip, #2]
 802fb6a:	b29b      	uxth	r3, r3
 802fb6c:	fb03 4606 	mla	r6, r3, r6, r4
 802fb70:	fb03 e707 	mla	r7, r3, r7, lr
 802fb74:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802fb76:	fb03 130c 	mla	r3, r3, ip, r1
 802fb7a:	7861      	ldrb	r1, [r4, #1]
 802fb7c:	f894 c000 	ldrb.w	ip, [r4]
 802fb80:	78a4      	ldrb	r4, [r4, #2]
 802fb82:	fb02 6601 	mla	r6, r2, r1, r6
 802fb86:	fb02 770c 	mla	r7, r2, ip, r7
 802fb8a:	fb02 3104 	mla	r1, r2, r4, r3
 802fb8e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802fb90:	7862      	ldrb	r2, [r4, #1]
 802fb92:	7823      	ldrb	r3, [r4, #0]
 802fb94:	78a4      	ldrb	r4, [r4, #2]
 802fb96:	fb00 6602 	mla	r6, r0, r2, r6
 802fb9a:	fb00 7303 	mla	r3, r0, r3, r7
 802fb9e:	fb00 1204 	mla	r2, r0, r4, r1
 802fba2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802fba6:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802fbaa:	0212      	lsls	r2, r2, #8
 802fbac:	4333      	orrs	r3, r6
 802fbae:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 802fbb2:	4313      	orrs	r3, r2
 802fbb4:	f8c8 3000 	str.w	r3, [r8]
 802fbb8:	e786      	b.n	802fac8 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802fbba:	5d1c      	ldrb	r4, [r3, r4]
 802fbbc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802fbbe:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802fbc2:	18e3      	adds	r3, r4, r3
 802fbc4:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 802fbc8:	930e      	str	r3, [sp, #56]	@ 0x38
 802fbca:	4666      	mov	r6, ip
 802fbcc:	e7b0      	b.n	802fb30 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fbce:	e9cd cc0d 	strd	ip, ip, [sp, #52]	@ 0x34
 802fbd2:	e7ad      	b.n	802fb30 <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802fbd4:	f43f ae41 	beq.w	802f85a <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802fbd8:	1e4e      	subs	r6, r1, #1
 802fbda:	e680      	b.n	802f8de <_ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>

0802fbdc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>:
 802fbdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802fbe0:	b087      	sub	sp, #28
 802fbe2:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 802fbe6:	e9dd 0412 	ldrd	r0, r4, [sp, #72]	@ 0x48
 802fbea:	fb04 070c 	mla	r7, r4, ip, r0
 802fbee:	9100      	str	r1, [sp, #0]
 802fbf0:	f89d 1058 	ldrb.w	r1, [sp, #88]	@ 0x58
 802fbf4:	2c00      	cmp	r4, #0
 802fbf6:	eb02 0b07 	add.w	fp, r2, r7
 802fbfa:	f104 0501 	add.w	r5, r4, #1
 802fbfe:	f9bd 8044 	ldrsh.w	r8, [sp, #68]	@ 0x44
 802fc02:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 802fc06:	f89d 6054 	ldrb.w	r6, [sp, #84]	@ 0x54
 802fc0a:	9101      	str	r1, [sp, #4]
 802fc0c:	db02      	blt.n	802fc14 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x38>
 802fc0e:	45a0      	cmp	r8, r4
 802fc10:	f300 811a 	bgt.w	802fe48 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x26c>
 802fc14:	2700      	movs	r7, #0
 802fc16:	46be      	mov	lr, r7
 802fc18:	46b9      	mov	r9, r7
 802fc1a:	463c      	mov	r4, r7
 802fc1c:	2d00      	cmp	r5, #0
 802fc1e:	db02      	blt.n	802fc26 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x4a>
 802fc20:	45a8      	cmp	r8, r5
 802fc22:	f300 812b 	bgt.w	802fe7c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2a0>
 802fc26:	f04f 0c00 	mov.w	ip, #0
 802fc2a:	46e0      	mov	r8, ip
 802fc2c:	4665      	mov	r5, ip
 802fc2e:	f8cd c010 	str.w	ip, [sp, #16]
 802fc32:	f1ba 0f0f 	cmp.w	sl, #15
 802fc36:	f200 8167 	bhi.w	802ff08 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802fc3a:	2e0f      	cmp	r6, #15
 802fc3c:	f200 8164 	bhi.w	802ff08 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802fc40:	b2b2      	uxth	r2, r6
 802fc42:	fa1f f38a 	uxth.w	r3, sl
 802fc46:	fb02 f603 	mul.w	r6, r2, r3
 802fc4a:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802fc4e:	b292      	uxth	r2, r2
 802fc50:	fb02 fa08 	mul.w	sl, r2, r8
 802fc54:	fb06 fb0c 	mul.w	fp, r6, ip
 802fc58:	011b      	lsls	r3, r3, #4
 802fc5a:	1b98      	subs	r0, r3, r6
 802fc5c:	b280      	uxth	r0, r0
 802fc5e:	9002      	str	r0, [sp, #8]
 802fc60:	fb00 f007 	mul.w	r0, r0, r7
 802fc64:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 802fc68:	1a9b      	subs	r3, r3, r2
 802fc6a:	b29b      	uxth	r3, r3
 802fc6c:	fb03 000e 	mla	r0, r3, lr, r0
 802fc70:	4450      	add	r0, sl
 802fc72:	4458      	add	r0, fp
 802fc74:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802fc78:	9003      	str	r0, [sp, #12]
 802fc7a:	2800      	cmp	r0, #0
 802fc7c:	f000 80e1 	beq.w	802fe42 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x266>
 802fc80:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802fc84:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802fc88:	f009 1bff 	and.w	fp, r9, #16711935	@ 0xff00ff
 802fc8c:	9105      	str	r1, [sp, #20]
 802fc8e:	d01d      	beq.n	802fccc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0xf0>
 802fc90:	fb0b fb0e 	mul.w	fp, fp, lr
 802fc94:	fb01 fe0e 	mul.w	lr, r1, lr
 802fc98:	ea4f 2a1b 	mov.w	sl, fp, lsr #8
 802fc9c:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802fca0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802fca4:	f50e 7080 	add.w	r0, lr, #256	@ 0x100
 802fca8:	44d3      	add	fp, sl
 802fcaa:	eb00 2e1e 	add.w	lr, r0, lr, lsr #8
 802fcae:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 802fcb2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802fcb6:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802fcba:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
 802fcbe:	ea4b 0e0e 	orr.w	lr, fp, lr
 802fcc2:	f40e 417f 	and.w	r1, lr, #65280	@ 0xff00
 802fcc6:	f00e 1bff 	and.w	fp, lr, #16711935	@ 0xff00ff
 802fcca:	9105      	str	r1, [sp, #20]
 802fccc:	2fff      	cmp	r7, #255	@ 0xff
 802fcce:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 802fcd2:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802fcd6:	d01b      	beq.n	802fd10 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x134>
 802fcd8:	fb0e fe07 	mul.w	lr, lr, r7
 802fcdc:	fb04 f407 	mul.w	r4, r4, r7
 802fce0:	ea4f 2a1e 	mov.w	sl, lr, lsr #8
 802fce4:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802fce8:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 802fcec:	f504 7080 	add.w	r0, r4, #256	@ 0x100
 802fcf0:	44d6      	add	lr, sl
 802fcf2:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802fcf6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802fcfa:	0a24      	lsrs	r4, r4, #8
 802fcfc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802fd00:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802fd04:	ea4e 0404 	orr.w	r4, lr, r4
 802fd08:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 802fd0c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802fd10:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802fd14:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802fd18:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802fd1c:	d019      	beq.n	802fd52 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x176>
 802fd1e:	fb00 f008 	mul.w	r0, r0, r8
 802fd22:	fb05 f508 	mul.w	r5, r5, r8
 802fd26:	ea4f 2910 	mov.w	r9, r0, lsr #8
 802fd2a:	f009 19ff 	and.w	r9, r9, #16711935	@ 0xff00ff
 802fd2e:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 802fd32:	f505 7780 	add.w	r7, r5, #256	@ 0x100
 802fd36:	4448      	add	r0, r9
 802fd38:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 802fd3c:	0a00      	lsrs	r0, r0, #8
 802fd3e:	0a2d      	lsrs	r5, r5, #8
 802fd40:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802fd44:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802fd48:	4305      	orrs	r5, r0
 802fd4a:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802fd4e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802fd52:	9904      	ldr	r1, [sp, #16]
 802fd54:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802fd58:	f001 1aff 	and.w	sl, r1, #16711935	@ 0xff00ff
 802fd5c:	f401 497f 	and.w	r9, r1, #65280	@ 0xff00
 802fd60:	d01c      	beq.n	802fd9c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x1c0>
 802fd62:	fb0a fa0c 	mul.w	sl, sl, ip
 802fd66:	fb09 fc0c 	mul.w	ip, r9, ip
 802fd6a:	ea4f 281a 	mov.w	r8, sl, lsr #8
 802fd6e:	f008 18ff 	and.w	r8, r8, #16711935	@ 0xff00ff
 802fd72:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802fd76:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802fd7a:	44c2      	add	sl, r8
 802fd7c:	eb07 2c1c 	add.w	ip, r7, ip, lsr #8
 802fd80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802fd84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802fd88:	f00a 1aff 	and.w	sl, sl, #16711935	@ 0xff00ff
 802fd8c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802fd90:	ea4a 090c 	orr.w	r9, sl, ip
 802fd94:	f009 1aff 	and.w	sl, r9, #16711935	@ 0xff00ff
 802fd98:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802fd9c:	f8bd 8004 	ldrh.w	r8, [sp, #4]
 802fda0:	9903      	ldr	r1, [sp, #12]
 802fda2:	fb01 fc08 	mul.w	ip, r1, r8
 802fda6:	f10c 0701 	add.w	r7, ip, #1
 802fdaa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802fdae:	ea6f 2c17 	mvn.w	ip, r7, lsr #8
 802fdb2:	9902      	ldr	r1, [sp, #8]
 802fdb4:	fa5f f78c 	uxtb.w	r7, ip
 802fdb8:	fb04 f401 	mul.w	r4, r4, r1
 802fdbc:	fb0e fe01 	mul.w	lr, lr, r1
 802fdc0:	9905      	ldr	r1, [sp, #20]
 802fdc2:	fb0b ee03 	mla	lr, fp, r3, lr
 802fdc6:	fb01 4303 	mla	r3, r1, r3, r4
 802fdca:	fb00 e002 	mla	r0, r0, r2, lr
 802fdce:	fb05 3502 	mla	r5, r5, r2, r3
 802fdd2:	fb0a 0a06 	mla	sl, sl, r6, r0
 802fdd6:	fb09 5906 	mla	r9, r9, r6, r5
 802fdda:	ea4f 261a 	mov.w	r6, sl, lsr #8
 802fdde:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802fde2:	f006 16ff 	and.w	r6, r6, #16711935	@ 0xff00ff
 802fde6:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802fdea:	ea46 0609 	orr.w	r6, r6, r9
 802fdee:	b2f2      	uxtb	r2, r6
 802fdf0:	f3c6 2307 	ubfx	r3, r6, #8, #8
 802fdf4:	0c36      	lsrs	r6, r6, #16
 802fdf6:	9900      	ldr	r1, [sp, #0]
 802fdf8:	fb12 f408 	smulbb	r4, r2, r8
 802fdfc:	fb13 f008 	smulbb	r0, r3, r8
 802fe00:	fb16 f808 	smulbb	r8, r6, r8
 802fe04:	780a      	ldrb	r2, [r1, #0]
 802fe06:	784b      	ldrb	r3, [r1, #1]
 802fe08:	788e      	ldrb	r6, [r1, #2]
 802fe0a:	fb02 4207 	mla	r2, r2, r7, r4
 802fe0e:	fb03 0307 	mla	r3, r3, r7, r0
 802fe12:	fb06 8807 	mla	r8, r6, r7, r8
 802fe16:	b292      	uxth	r2, r2
 802fe18:	b29b      	uxth	r3, r3
 802fe1a:	fa1f f888 	uxth.w	r8, r8
 802fe1e:	1c54      	adds	r4, r2, #1
 802fe20:	1c58      	adds	r0, r3, #1
 802fe22:	f108 0701 	add.w	r7, r8, #1
 802fe26:	eb04 2212 	add.w	r2, r4, r2, lsr #8
 802fe2a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802fe2e:	eb07 2818 	add.w	r8, r7, r8, lsr #8
 802fe32:	1212      	asrs	r2, r2, #8
 802fe34:	121b      	asrs	r3, r3, #8
 802fe36:	ea4f 2828 	mov.w	r8, r8, asr #8
 802fe3a:	700a      	strb	r2, [r1, #0]
 802fe3c:	704b      	strb	r3, [r1, #1]
 802fe3e:	f881 8002 	strb.w	r8, [r1, #2]
 802fe42:	b007      	add	sp, #28
 802fe44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802fe48:	2800      	cmp	r0, #0
 802fe4a:	db01      	blt.n	802fe50 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x274>
 802fe4c:	4584      	cmp	ip, r0
 802fe4e:	dc40      	bgt.n	802fed2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2f6>
 802fe50:	f04f 0e00 	mov.w	lr, #0
 802fe54:	46f1      	mov	r9, lr
 802fe56:	1c42      	adds	r2, r0, #1
 802fe58:	d42b      	bmi.n	802feb2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2d6>
 802fe5a:	4594      	cmp	ip, r2
 802fe5c:	dd29      	ble.n	802feb2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2d6>
 802fe5e:	f1ba 0f00 	cmp.w	sl, #0
 802fe62:	d005      	beq.n	802fe70 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x294>
 802fe64:	f89b 2001 	ldrb.w	r2, [fp, #1]
 802fe68:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802fe6c:	0e27      	lsrs	r7, r4, #24
 802fe6e:	e6d5      	b.n	802fc1c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x40>
 802fe70:	2d00      	cmp	r5, #0
 802fe72:	db41      	blt.n	802fef8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x31c>
 802fe74:	45a8      	cmp	r8, r5
 802fe76:	dd3f      	ble.n	802fef8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x31c>
 802fe78:	4657      	mov	r7, sl
 802fe7a:	4654      	mov	r4, sl
 802fe7c:	b1e6      	cbz	r6, 802feb8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2dc>
 802fe7e:	2800      	cmp	r0, #0
 802fe80:	db32      	blt.n	802fee8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x30c>
 802fe82:	4584      	cmp	ip, r0
 802fe84:	dd30      	ble.n	802fee8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x30c>
 802fe86:	f81b 200c 	ldrb.w	r2, [fp, ip]
 802fe8a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 802fe8e:	ea4f 6815 	mov.w	r8, r5, lsr #24
 802fe92:	3001      	adds	r0, #1
 802fe94:	d423      	bmi.n	802fede <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x302>
 802fe96:	4584      	cmp	ip, r0
 802fe98:	dd21      	ble.n	802fede <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x302>
 802fe9a:	f1ba 0f00 	cmp.w	sl, #0
 802fe9e:	d027      	beq.n	802fef0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x314>
 802fea0:	44dc      	add	ip, fp
 802fea2:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802fea6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 802feaa:	9304      	str	r3, [sp, #16]
 802feac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802feb0:	e6bf      	b.n	802fc32 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x56>
 802feb2:	2700      	movs	r7, #0
 802feb4:	463c      	mov	r4, r7
 802feb6:	e6b1      	b.n	802fc1c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x40>
 802feb8:	f1ba 0f0f 	cmp.w	sl, #15
 802febc:	d824      	bhi.n	802ff08 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x32c>
 802febe:	fa1f f38a 	uxth.w	r3, sl
 802fec2:	4632      	mov	r2, r6
 802fec4:	46b3      	mov	fp, r6
 802fec6:	46b2      	mov	sl, r6
 802fec8:	9604      	str	r6, [sp, #16]
 802feca:	4635      	mov	r5, r6
 802fecc:	46b4      	mov	ip, r6
 802fece:	46b0      	mov	r8, r6
 802fed0:	e6c2      	b.n	802fc58 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x7c>
 802fed2:	5dd2      	ldrb	r2, [r2, r7]
 802fed4:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
 802fed8:	ea4f 6e19 	mov.w	lr, r9, lsr #24
 802fedc:	e7bb      	b.n	802fe56 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x27a>
 802fede:	f04f 0c00 	mov.w	ip, #0
 802fee2:	f8cd c010 	str.w	ip, [sp, #16]
 802fee6:	e6a4      	b.n	802fc32 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x56>
 802fee8:	f04f 0800 	mov.w	r8, #0
 802feec:	4645      	mov	r5, r8
 802feee:	e7d0      	b.n	802fe92 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x2b6>
 802fef0:	f8cd a010 	str.w	sl, [sp, #16]
 802fef4:	46d4      	mov	ip, sl
 802fef6:	e6a0      	b.n	802fc3a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x5e>
 802fef8:	4654      	mov	r4, sl
 802fefa:	f8cd a010 	str.w	sl, [sp, #16]
 802fefe:	4655      	mov	r5, sl
 802ff00:	46d4      	mov	ip, sl
 802ff02:	46d0      	mov	r8, sl
 802ff04:	4657      	mov	r7, sl
 802ff06:	e698      	b.n	802fc3a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x5e>
 802ff08:	4b03      	ldr	r3, [pc, #12]	@ (802ff18 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x33c>)
 802ff0a:	4a04      	ldr	r2, [pc, #16]	@ (802ff1c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x340>)
 802ff0c:	f240 31ca 	movw	r1, #970	@ 0x3ca
 802ff10:	4803      	ldr	r0, [pc, #12]	@ (802ff20 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh+0x344>)
 802ff12:	f002 faf1 	bl	80324f8 <__assert_func>
 802ff16:	bf00      	nop
 802ff18:	080366d4 	.word	0x080366d4
 802ff1c:	08036d50 	.word	0x08036d50
 802ff20:	0803685c 	.word	0x0803685c

0802ff24 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802ff24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ff28:	ed2d 8b08 	vpush	{d8-d11}
 802ff2c:	b0a9      	sub	sp, #164	@ 0xa4
 802ff2e:	e9dd ba3b 	ldrd	fp, sl, [sp, #236]	@ 0xec
 802ff32:	eeb0 aa40 	vmov.f32	s20, s0
 802ff36:	46d9      	mov	r9, fp
 802ff38:	eef0 9a60 	vmov.f32	s19, s1
 802ff3c:	eeb0 9a41 	vmov.f32	s18, s2
 802ff40:	eef0 8a62 	vmov.f32	s17, s5
 802ff44:	eeb0 8a43 	vmov.f32	s16, s6
 802ff48:	eef0 ba44 	vmov.f32	s23, s8
 802ff4c:	eeb0 ba64 	vmov.f32	s22, s9
 802ff50:	eef0 aa45 	vmov.f32	s21, s10
 802ff54:	46d3      	mov	fp, sl
 802ff56:	9022      	str	r0, [sp, #136]	@ 0x88
 802ff58:	983f      	ldr	r0, [sp, #252]	@ 0xfc
 802ff5a:	9115      	str	r1, [sp, #84]	@ 0x54
 802ff5c:	9218      	str	r2, [sp, #96]	@ 0x60
 802ff5e:	6841      	ldr	r1, [r0, #4]
 802ff60:	9a40      	ldr	r2, [sp, #256]	@ 0x100
 802ff62:	469e      	mov	lr, r3
 802ff64:	9b41      	ldr	r3, [sp, #260]	@ 0x104
 802ff66:	6807      	ldr	r7, [r0, #0]
 802ff68:	fb01 2303 	mla	r3, r1, r3, r2
 802ff6c:	9a42      	ldr	r2, [sp, #264]	@ 0x108
 802ff6e:	9842      	ldr	r0, [sp, #264]	@ 0x108
 802ff70:	6852      	ldr	r2, [r2, #4]
 802ff72:	f89d 110c 	ldrb.w	r1, [sp, #268]	@ 0x10c
 802ff76:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 802ff7a:	6800      	ldr	r0, [r0, #0]
 802ff7c:	1d13      	adds	r3, r2, #4
 802ff7e:	930b      	str	r3, [sp, #44]	@ 0x2c
 802ff80:	b28b      	uxth	r3, r1
 802ff82:	9123      	str	r1, [sp, #140]	@ 0x8c
 802ff84:	9011      	str	r0, [sp, #68]	@ 0x44
 802ff86:	9317      	str	r3, [sp, #92]	@ 0x5c
 802ff88:	9712      	str	r7, [sp, #72]	@ 0x48
 802ff8a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802ff8c:	2b00      	cmp	r3, #0
 802ff8e:	dc02      	bgt.n	802ff96 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802ff90:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802ff92:	2b00      	cmp	r3, #0
 802ff94:	dd68      	ble.n	8030068 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802ff96:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 802ff98:	f1be 0f00 	cmp.w	lr, #0
 802ff9c:	e9d3 5702 	ldrd	r5, r7, [r3, #8]
 802ffa0:	b228      	sxth	r0, r5
 802ffa2:	b23e      	sxth	r6, r7
 802ffa4:	f340 83a0 	ble.w	80306e8 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c4>
 802ffa8:	e9dd 8a3d 	ldrd	r8, sl, [sp, #244]	@ 0xf4
 802ffac:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802ffae:	1e44      	subs	r4, r0, #1
 802ffb0:	f106 3cff 	add.w	ip, r6, #4294967295
 802ffb4:	9709      	str	r7, [sp, #36]	@ 0x24
 802ffb6:	ea5f 4329 	movs.w	r3, r9, asr #16
 802ffba:	ea4f 422b 	mov.w	r2, fp, asr #16
 802ffbe:	d405      	bmi.n	802ffcc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802ffc0:	42a3      	cmp	r3, r4
 802ffc2:	da03      	bge.n	802ffcc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802ffc4:	2a00      	cmp	r2, #0
 802ffc6:	db01      	blt.n	802ffcc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802ffc8:	4562      	cmp	r2, ip
 802ffca:	db52      	blt.n	8030072 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 802ffcc:	1c5f      	adds	r7, r3, #1
 802ffce:	d406      	bmi.n	802ffde <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ffd0:	4287      	cmp	r7, r0
 802ffd2:	dc04      	bgt.n	802ffde <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ffd4:	1c57      	adds	r7, r2, #1
 802ffd6:	d402      	bmi.n	802ffde <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802ffd8:	42b7      	cmp	r7, r6
 802ffda:	f340 835f 	ble.w	803069c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x778>
 802ffde:	f1be 0e01 	subs.w	lr, lr, #1
 802ffe2:	44c1      	add	r9, r8
 802ffe4:	44d3      	add	fp, sl
 802ffe6:	f101 0104 	add.w	r1, r1, #4
 802ffea:	d1e4      	bne.n	802ffb6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802ffec:	9112      	str	r1, [sp, #72]	@ 0x48
 802ffee:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 802fff0:	2b00      	cmp	r3, #0
 802fff2:	dd39      	ble.n	8030068 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802fff4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802fff8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802fffc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8030000:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8030004:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8030008:	ee29 6aa7 	vmul.f32	s12, s19, s15
 803000c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8030010:	ee76 6a68 	vsub.f32	s13, s12, s17
 8030014:	ee37 7ac8 	vsub.f32	s14, s15, s16
 8030018:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 803001c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8030020:	ee16 2a90 	vmov	r2, s13
 8030024:	3b01      	subs	r3, #1
 8030026:	9315      	str	r3, [sp, #84]	@ 0x54
 8030028:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 803002a:	fb92 f3f3 	sdiv	r3, r2, r3
 803002e:	ee17 2a10 	vmov	r2, s14
 8030032:	eeb0 7a48 	vmov.f32	s14, s16
 8030036:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 803003a:	ee17 ba10 	vmov	fp, s14
 803003e:	eeb0 7a68 	vmov.f32	s14, s17
 8030042:	933d      	str	r3, [sp, #244]	@ 0xf4
 8030044:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 8030046:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 803004a:	fb92 f3f3 	sdiv	r3, r2, r3
 803004e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8030050:	933e      	str	r3, [sp, #248]	@ 0xf8
 8030052:	9b3a      	ldr	r3, [sp, #232]	@ 0xe8
 8030054:	ee17 9a10 	vmov	r9, s14
 8030058:	eeb0 8a67 	vmov.f32	s16, s15
 803005c:	eef0 8a46 	vmov.f32	s17, s12
 8030060:	bf14      	ite	ne
 8030062:	469e      	movne	lr, r3
 8030064:	4696      	moveq	lr, r2
 8030066:	e790      	b.n	802ff8a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8030068:	b029      	add	sp, #164	@ 0xa4
 803006a:	ecbd 8b08 	vpop	{d8-d11}
 803006e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8030072:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8030074:	9112      	str	r1, [sp, #72]	@ 0x48
 8030076:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 8030078:	f10e 32ff 	add.w	r2, lr, #4294967295
 803007c:	fb01 9302 	mla	r3, r1, r2, r9
 8030080:	141b      	asrs	r3, r3, #16
 8030082:	920a      	str	r2, [sp, #40]	@ 0x28
 8030084:	f100 816a 	bmi.w	803035c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8030088:	42a3      	cmp	r3, r4
 803008a:	f280 8167 	bge.w	803035c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 803008e:	9b3e      	ldr	r3, [sp, #248]	@ 0xf8
 8030090:	fb03 b302 	mla	r3, r3, r2, fp
 8030094:	141b      	asrs	r3, r3, #16
 8030096:	f100 8161 	bmi.w	803035c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 803009a:	3e01      	subs	r6, #1
 803009c:	42b3      	cmp	r3, r6
 803009e:	f280 815d 	bge.w	803035c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 80300a2:	f1be 0f00 	cmp.w	lr, #0
 80300a6:	dda2      	ble.n	802ffee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 80300a8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80300aa:	f8cd e064 	str.w	lr, [sp, #100]	@ 0x64
 80300ae:	3304      	adds	r3, #4
 80300b0:	9309      	str	r3, [sp, #36]	@ 0x24
 80300b2:	f8cd b0f0 	str.w	fp, [sp, #240]	@ 0xf0
 80300b6:	4606      	mov	r6, r0
 80300b8:	465b      	mov	r3, fp
 80300ba:	e12a      	b.n	8030312 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 80300bc:	785f      	ldrb	r7, [r3, #1]
 80300be:	f855 7027 	ldr.w	r7, [r5, r7, lsl #2]
 80300c2:	9713      	str	r7, [sp, #76]	@ 0x4c
 80300c4:	0e3f      	lsrs	r7, r7, #24
 80300c6:	970c      	str	r7, [sp, #48]	@ 0x30
 80300c8:	b16a      	cbz	r2, 80300e6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80300ca:	199f      	adds	r7, r3, r6
 80300cc:	5d9b      	ldrb	r3, [r3, r6]
 80300ce:	462e      	mov	r6, r5
 80300d0:	787f      	ldrb	r7, [r7, #1]
 80300d2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80300d6:	f855 5027 	ldr.w	r5, [r5, r7, lsl #2]
 80300da:	9314      	str	r3, [sp, #80]	@ 0x50
 80300dc:	9516      	str	r5, [sp, #88]	@ 0x58
 80300de:	0e1b      	lsrs	r3, r3, #24
 80300e0:	0e2d      	lsrs	r5, r5, #24
 80300e2:	950e      	str	r5, [sp, #56]	@ 0x38
 80300e4:	930d      	str	r3, [sp, #52]	@ 0x34
 80300e6:	fa1f fc81 	uxth.w	ip, r1
 80300ea:	b292      	uxth	r2, r2
 80300ec:	fb0c f602 	mul.w	r6, ip, r2
 80300f0:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 80300f4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80300f6:	ebac 0706 	sub.w	r7, ip, r6
 80300fa:	b2bf      	uxth	r7, r7
 80300fc:	fb07 f103 	mul.w	r1, r7, r3
 8030100:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8030104:	b292      	uxth	r2, r2
 8030106:	f5cc 7380 	rsb	r3, ip, #256	@ 0x100
 803010a:	1a9b      	subs	r3, r3, r2
 803010c:	b29b      	uxth	r3, r3
 803010e:	fb03 1104 	mla	r1, r3, r4, r1
 8030112:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8030114:	fb02 1105 	mla	r1, r2, r5, r1
 8030118:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 803011a:	fb06 1105 	mla	r1, r6, r5, r1
 803011e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8030122:	2900      	cmp	r1, #0
 8030124:	f000 80e3 	beq.w	80302ee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8030128:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 803012c:	2cff      	cmp	r4, #255	@ 0xff
 803012e:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8030132:	950f      	str	r5, [sp, #60]	@ 0x3c
 8030134:	9010      	str	r0, [sp, #64]	@ 0x40
 8030136:	d01e      	beq.n	8030176 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8030138:	fb00 f004 	mul.w	r0, r0, r4
 803013c:	fb05 fe04 	mul.w	lr, r5, r4
 8030140:	4604      	mov	r4, r0
 8030142:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8030146:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 803014a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 803014e:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 8030152:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8030156:	44e6      	add	lr, ip
 8030158:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 803015c:	0a24      	lsrs	r4, r4, #8
 803015e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8030162:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8030166:	ea4e 0e04 	orr.w	lr, lr, r4
 803016a:	f00e 10ff 	and.w	r0, lr, #16711935	@ 0xff00ff
 803016e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8030170:	f40e 407f 	and.w	r0, lr, #65280	@ 0xff00
 8030174:	9010      	str	r0, [sp, #64]	@ 0x40
 8030176:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8030178:	f000 1eff 	and.w	lr, r0, #16711935	@ 0xff00ff
 803017c:	f400 487f 	and.w	r8, r0, #65280	@ 0xff00
 8030180:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8030182:	28ff      	cmp	r0, #255	@ 0xff
 8030184:	d01c      	beq.n	80301c0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8030186:	fb0e fe00 	mul.w	lr, lr, r0
 803018a:	fb08 f800 	mul.w	r8, r8, r0
 803018e:	ea4f 241e 	mov.w	r4, lr, lsr #8
 8030192:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8030196:	f10e 1e01 	add.w	lr, lr, #65537	@ 0x10001
 803019a:	f508 7080 	add.w	r0, r8, #256	@ 0x100
 803019e:	44a6      	add	lr, r4
 80301a0:	eb00 2818 	add.w	r8, r0, r8, lsr #8
 80301a4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80301a8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80301ac:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80301b0:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80301b4:	ea4e 0808 	orr.w	r8, lr, r8
 80301b8:	f008 1eff 	and.w	lr, r8, #16711935	@ 0xff00ff
 80301bc:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80301c0:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80301c2:	f000 1cff 	and.w	ip, r0, #16711935	@ 0xff00ff
 80301c6:	f400 4a7f 	and.w	sl, r0, #65280	@ 0xff00
 80301ca:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80301cc:	28ff      	cmp	r0, #255	@ 0xff
 80301ce:	d01c      	beq.n	803020a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80301d0:	fb0c fc00 	mul.w	ip, ip, r0
 80301d4:	fb0a fa00 	mul.w	sl, sl, r0
 80301d8:	ea4f 241c 	mov.w	r4, ip, lsr #8
 80301dc:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80301e0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80301e4:	f50a 7080 	add.w	r0, sl, #256	@ 0x100
 80301e8:	44a4      	add	ip, r4
 80301ea:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 80301ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80301f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80301f6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80301fa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80301fe:	ea4c 0a0a 	orr.w	sl, ip, sl
 8030202:	f00a 1cff 	and.w	ip, sl, #16711935	@ 0xff00ff
 8030206:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 803020a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 803020c:	f004 10ff 	and.w	r0, r4, #16711935	@ 0xff00ff
 8030210:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 8030214:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8030216:	2cff      	cmp	r4, #255	@ 0xff
 8030218:	d019      	beq.n	803024e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 803021a:	fb00 f004 	mul.w	r0, r0, r4
 803021e:	fb0b fb04 	mul.w	fp, fp, r4
 8030222:	0a04      	lsrs	r4, r0, #8
 8030224:	f004 15ff 	and.w	r5, r4, #16711935	@ 0xff00ff
 8030228:	f100 1001 	add.w	r0, r0, #65537	@ 0x10001
 803022c:	f50b 7480 	add.w	r4, fp, #256	@ 0x100
 8030230:	eb04 241b 	add.w	r4, r4, fp, lsr #8
 8030234:	4428      	add	r0, r5
 8030236:	0a00      	lsrs	r0, r0, #8
 8030238:	0a24      	lsrs	r4, r4, #8
 803023a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 803023e:	f404 4b7f 	and.w	fp, r4, #65280	@ 0xff00
 8030242:	ea40 0b0b 	orr.w	fp, r0, fp
 8030246:	f00b 10ff 	and.w	r0, fp, #16711935	@ 0xff00ff
 803024a:	f40b 4b7f 	and.w	fp, fp, #65280	@ 0xff00
 803024e:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 8030250:	fb0e fe07 	mul.w	lr, lr, r7
 8030254:	fb01 f105 	mul.w	r1, r1, r5
 8030258:	1c4c      	adds	r4, r1, #1
 803025a:	eb04 2111 	add.w	r1, r4, r1, lsr #8
 803025e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8030262:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8030264:	fb08 f707 	mul.w	r7, r8, r7
 8030268:	fb04 ee03 	mla	lr, r4, r3, lr
 803026c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 803026e:	fb0c ee02 	mla	lr, ip, r2, lr
 8030272:	fb04 7703 	mla	r7, r4, r3, r7
 8030276:	fb0a 7702 	mla	r7, sl, r2, r7
 803027a:	fb00 ee06 	mla	lr, r0, r6, lr
 803027e:	fb0b 7706 	mla	r7, fp, r6, r7
 8030282:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8030286:	0a3f      	lsrs	r7, r7, #8
 8030288:	f407 437f 	and.w	r3, r7, #65280	@ 0xff00
 803028c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8030290:	ea4e 0303 	orr.w	r3, lr, r3
 8030294:	b2df      	uxtb	r7, r3
 8030296:	f3c3 2607 	ubfx	r6, r3, #8, #8
 803029a:	0c1b      	lsrs	r3, r3, #16
 803029c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 803029e:	fb17 f705 	smulbb	r7, r7, r5
 80302a2:	fb16 f605 	smulbb	r6, r6, r5
 80302a6:	fb13 f305 	smulbb	r3, r3, r5
 80302aa:	f814 0c04 	ldrb.w	r0, [r4, #-4]
 80302ae:	f814 2c03 	ldrb.w	r2, [r4, #-3]
 80302b2:	f814 cc02 	ldrb.w	ip, [r4, #-2]
 80302b6:	b2c9      	uxtb	r1, r1
 80302b8:	fb00 7001 	mla	r0, r0, r1, r7
 80302bc:	fb02 6201 	mla	r2, r2, r1, r6
 80302c0:	fb0c 3101 	mla	r1, ip, r1, r3
 80302c4:	b280      	uxth	r0, r0
 80302c6:	b292      	uxth	r2, r2
 80302c8:	b289      	uxth	r1, r1
 80302ca:	1c47      	adds	r7, r0, #1
 80302cc:	1c56      	adds	r6, r2, #1
 80302ce:	1c4b      	adds	r3, r1, #1
 80302d0:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80302d4:	eb06 2212 	add.w	r2, r6, r2, lsr #8
 80302d8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80302dc:	1200      	asrs	r0, r0, #8
 80302de:	1212      	asrs	r2, r2, #8
 80302e0:	1209      	asrs	r1, r1, #8
 80302e2:	f804 0c04 	strb.w	r0, [r4, #-4]
 80302e6:	f804 2c03 	strb.w	r2, [r4, #-3]
 80302ea:	f804 1c02 	strb.w	r1, [r4, #-2]
 80302ee:	9a3d      	ldr	r2, [sp, #244]	@ 0xf4
 80302f0:	993e      	ldr	r1, [sp, #248]	@ 0xf8
 80302f2:	4491      	add	r9, r2
 80302f4:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 80302f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80302f8:	440a      	add	r2, r1
 80302fa:	923c      	str	r2, [sp, #240]	@ 0xf0
 80302fc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80302fe:	3b01      	subs	r3, #1
 8030300:	930a      	str	r3, [sp, #40]	@ 0x28
 8030302:	3204      	adds	r2, #4
 8030304:	3301      	adds	r3, #1
 8030306:	9209      	str	r2, [sp, #36]	@ 0x24
 8030308:	d021      	beq.n	803034e <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 803030a:	9b42      	ldr	r3, [sp, #264]	@ 0x108
 803030c:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 8030310:	9b3c      	ldr	r3, [sp, #240]	@ 0xf0
 8030312:	ea4f 4229 	mov.w	r2, r9, asr #16
 8030316:	141b      	asrs	r3, r3, #16
 8030318:	fb06 2303 	mla	r3, r6, r3, r2
 803031c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 803031e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8030320:	5ce2      	ldrb	r2, [r4, r3]
 8030322:	f3c9 3103 	ubfx	r1, r9, #12, #4
 8030326:	f855 0022 	ldr.w	r0, [r5, r2, lsl #2]
 803032a:	9a3c      	ldr	r2, [sp, #240]	@ 0xf0
 803032c:	4423      	add	r3, r4
 803032e:	f3c2 3203 	ubfx	r2, r2, #12, #4
 8030332:	0e04      	lsrs	r4, r0, #24
 8030334:	2900      	cmp	r1, #0
 8030336:	f47f aec1 	bne.w	80300bc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 803033a:	2a00      	cmp	r2, #0
 803033c:	f43f aed3 	beq.w	80300e6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8030340:	5d9b      	ldrb	r3, [r3, r6]
 8030342:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8030346:	9314      	str	r3, [sp, #80]	@ 0x50
 8030348:	0e1b      	lsrs	r3, r3, #24
 803034a:	930d      	str	r3, [sp, #52]	@ 0x34
 803034c:	e6cb      	b.n	80300e6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 803034e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8030350:	f8dd e064 	ldr.w	lr, [sp, #100]	@ 0x64
 8030354:	eb03 038e 	add.w	r3, r3, lr, lsl #2
 8030358:	9312      	str	r3, [sp, #72]	@ 0x48
 803035a:	e648      	b.n	802ffee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 803035c:	f1be 0f00 	cmp.w	lr, #0
 8030360:	f77f ae45 	ble.w	802ffee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8030364:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8030368:	ea4f 4329 	mov.w	r3, r9, asr #16
 803036c:	ea4f 422b 	mov.w	r2, fp, asr #16
 8030370:	2b00      	cmp	r3, #0
 8030372:	46be      	mov	lr, r7
 8030374:	4629      	mov	r1, r5
 8030376:	e9dd 653d 	ldrd	r6, r5, [sp, #244]	@ 0xf4
 803037a:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
 803037e:	9c42      	ldr	r4, [sp, #264]	@ 0x108
 8030380:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8030384:	f3cb 3703 	ubfx	r7, fp, #12, #4
 8030388:	f2c0 815d 	blt.w	8030646 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 803038c:	f101 3cff 	add.w	ip, r1, #4294967295
 8030390:	4563      	cmp	r3, ip
 8030392:	f280 8158 	bge.w	8030646 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 8030396:	2a00      	cmp	r2, #0
 8030398:	f2c0 8155 	blt.w	8030646 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 803039c:	f10e 3cff 	add.w	ip, lr, #4294967295
 80303a0:	4562      	cmp	r2, ip
 80303a2:	f280 8150 	bge.w	8030646 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x722>
 80303a6:	fa0f fc81 	sxth.w	ip, r1
 80303aa:	fb02 330c 	mla	r3, r2, ip, r3
 80303ae:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80303b0:	5cd1      	ldrb	r1, [r2, r3]
 80303b2:	18d3      	adds	r3, r2, r3
 80303b4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80303b6:	469e      	mov	lr, r3
 80303b8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80303bc:	0e19      	lsrs	r1, r3, #24
 80303be:	9309      	str	r3, [sp, #36]	@ 0x24
 80303c0:	910f      	str	r1, [sp, #60]	@ 0x3c
 80303c2:	2800      	cmp	r0, #0
 80303c4:	f000 8171 	beq.w	80306aa <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x786>
 80303c8:	4671      	mov	r1, lr
 80303ca:	f89e e001 	ldrb.w	lr, [lr, #1]
 80303ce:	4613      	mov	r3, r2
 80303d0:	f852 202e 	ldr.w	r2, [r2, lr, lsl #2]
 80303d4:	9224      	str	r2, [sp, #144]	@ 0x90
 80303d6:	0e12      	lsrs	r2, r2, #24
 80303d8:	921a      	str	r2, [sp, #104]	@ 0x68
 80303da:	2f00      	cmp	r7, #0
 80303dc:	f040 8171 	bne.w	80306c2 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79e>
 80303e0:	b280      	uxth	r0, r0
 80303e2:	b2bf      	uxth	r7, r7
 80303e4:	fb00 f207 	mul.w	r2, r0, r7
 80303e8:	ea4f 1c00 	mov.w	ip, r0, lsl #4
 80303ec:	ebac 0002 	sub.w	r0, ip, r2
 80303f0:	b280      	uxth	r0, r0
 80303f2:	4603      	mov	r3, r0
 80303f4:	9010      	str	r0, [sp, #64]	@ 0x40
 80303f6:	981a      	ldr	r0, [sp, #104]	@ 0x68
 80303f8:	ebc2 1707 	rsb	r7, r2, r7, lsl #4
 80303fc:	fb03 f000 	mul.w	r0, r3, r0
 8030400:	fa1f fe87 	uxth.w	lr, r7
 8030404:	f5cc 7780 	rsb	r7, ip, #256	@ 0x100
 8030408:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 803040a:	eba7 070e 	sub.w	r7, r7, lr
 803040e:	b2bf      	uxth	r7, r7
 8030410:	fb07 0003 	mla	r0, r7, r3, r0
 8030414:	9719      	str	r7, [sp, #100]	@ 0x64
 8030416:	9f1b      	ldr	r7, [sp, #108]	@ 0x6c
 8030418:	fb0e 0007 	mla	r0, lr, r7, r0
 803041c:	9f1c      	ldr	r7, [sp, #112]	@ 0x70
 803041e:	fb02 0007 	mla	r0, r2, r7, r0
 8030422:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8030426:	900f      	str	r0, [sp, #60]	@ 0x3c
 8030428:	2800      	cmp	r0, #0
 803042a:	f000 80f6 	beq.w	803061a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 803042e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8030430:	2bff      	cmp	r3, #255	@ 0xff
 8030432:	f001 10ff 	and.w	r0, r1, #16711935	@ 0xff00ff
 8030436:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 803043a:	901d      	str	r0, [sp, #116]	@ 0x74
 803043c:	9109      	str	r1, [sp, #36]	@ 0x24
 803043e:	d01b      	beq.n	8030478 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x554>
 8030440:	fb01 f103 	mul.w	r1, r1, r3
 8030444:	fb00 f003 	mul.w	r0, r0, r3
 8030448:	460b      	mov	r3, r1
 803044a:	0a01      	lsrs	r1, r0, #8
 803044c:	f100 1701 	add.w	r7, r0, #65537	@ 0x10001
 8030450:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8030454:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8030458:	4439      	add	r1, r7
 803045a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 803045e:	0a09      	lsrs	r1, r1, #8
 8030460:	0a1b      	lsrs	r3, r3, #8
 8030462:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8030466:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 803046a:	430b      	orrs	r3, r1
 803046c:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 8030470:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8030474:	911d      	str	r1, [sp, #116]	@ 0x74
 8030476:	9309      	str	r3, [sp, #36]	@ 0x24
 8030478:	9924      	ldr	r1, [sp, #144]	@ 0x90
 803047a:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 803047c:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 8030480:	2fff      	cmp	r7, #255	@ 0xff
 8030482:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8030486:	931e      	str	r3, [sp, #120]	@ 0x78
 8030488:	911f      	str	r1, [sp, #124]	@ 0x7c
 803048a:	d01c      	beq.n	80304c6 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a2>
 803048c:	fb01 f107 	mul.w	r1, r1, r7
 8030490:	fb03 f307 	mul.w	r3, r3, r7
 8030494:	460f      	mov	r7, r1
 8030496:	0a19      	lsrs	r1, r3, #8
 8030498:	f103 1001 	add.w	r0, r3, #65537	@ 0x10001
 803049c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80304a0:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 80304a4:	4401      	add	r1, r0
 80304a6:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80304aa:	0a09      	lsrs	r1, r1, #8
 80304ac:	0a1b      	lsrs	r3, r3, #8
 80304ae:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80304b2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80304b6:	ea41 0003 	orr.w	r0, r1, r3
 80304ba:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 80304be:	931e      	str	r3, [sp, #120]	@ 0x78
 80304c0:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 80304c4:	931f      	str	r3, [sp, #124]	@ 0x7c
 80304c6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80304c8:	f003 11ff 	and.w	r1, r3, #16711935	@ 0xff00ff
 80304cc:	f403 4c7f 	and.w	ip, r3, #65280	@ 0xff00
 80304d0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80304d2:	9120      	str	r1, [sp, #128]	@ 0x80
 80304d4:	2bff      	cmp	r3, #255	@ 0xff
 80304d6:	d01b      	beq.n	8030510 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80304d8:	fb01 f103 	mul.w	r1, r1, r3
 80304dc:	fb0c fc03 	mul.w	ip, ip, r3
 80304e0:	0a08      	lsrs	r0, r1, #8
 80304e2:	f50c 7380 	add.w	r3, ip, #256	@ 0x100
 80304e6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80304ea:	f101 1101 	add.w	r1, r1, #65537	@ 0x10001
 80304ee:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80304f2:	4401      	add	r1, r0
 80304f4:	0a09      	lsrs	r1, r1, #8
 80304f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80304fa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80304fe:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8030502:	ea41 0c0c 	orr.w	ip, r1, ip
 8030506:	f00c 13ff 	and.w	r3, ip, #16711935	@ 0xff00ff
 803050a:	9320      	str	r3, [sp, #128]	@ 0x80
 803050c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8030510:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8030512:	f000 13ff 	and.w	r3, r0, #16711935	@ 0xff00ff
 8030516:	f400 477f 	and.w	r7, r0, #65280	@ 0xff00
 803051a:	981c      	ldr	r0, [sp, #112]	@ 0x70
 803051c:	9321      	str	r3, [sp, #132]	@ 0x84
 803051e:	28ff      	cmp	r0, #255	@ 0xff
 8030520:	d019      	beq.n	8030556 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x632>
 8030522:	fb03 f300 	mul.w	r3, r3, r0
 8030526:	fb07 f700 	mul.w	r7, r7, r0
 803052a:	0a18      	lsrs	r0, r3, #8
 803052c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8030530:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8030534:	f507 7180 	add.w	r1, r7, #256	@ 0x100
 8030538:	4418      	add	r0, r3
 803053a:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 803053e:	0a00      	lsrs	r0, r0, #8
 8030540:	0a3f      	lsrs	r7, r7, #8
 8030542:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8030546:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 803054a:	4307      	orrs	r7, r0
 803054c:	f007 13ff 	and.w	r3, r7, #16711935	@ 0xff00ff
 8030550:	9321      	str	r3, [sp, #132]	@ 0x84
 8030552:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8030556:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8030558:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 803055a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 803055c:	fb01 f100 	mul.w	r1, r1, r0
 8030560:	4608      	mov	r0, r1
 8030562:	3101      	adds	r1, #1
 8030564:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8030568:	ea6f 2110 	mvn.w	r1, r0, lsr #8
 803056c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 803056e:	9125      	str	r1, [sp, #148]	@ 0x94
 8030570:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8030572:	fb01 f100 	mul.w	r1, r1, r0
 8030576:	910f      	str	r1, [sp, #60]	@ 0x3c
 8030578:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 803057a:	fb01 f100 	mul.w	r1, r1, r0
 803057e:	9110      	str	r1, [sp, #64]	@ 0x40
 8030580:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8030582:	4608      	mov	r0, r1
 8030584:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8030586:	fb00 1103 	mla	r1, r0, r3, r1
 803058a:	910f      	str	r1, [sp, #60]	@ 0x3c
 803058c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 803058e:	4608      	mov	r0, r1
 8030590:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8030592:	fb00 1003 	mla	r0, r0, r3, r1
 8030596:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8030598:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 803059a:	fb0c 000e 	mla	r0, ip, lr, r0
 803059e:	fb03 110e 	mla	r1, r3, lr, r1
 80305a2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80305a4:	f89a c002 	ldrb.w	ip, [sl, #2]
 80305a8:	fb03 1102 	mla	r1, r3, r2, r1
 80305ac:	fb07 0302 	mla	r3, r7, r2, r0
 80305b0:	0a0a      	lsrs	r2, r1, #8
 80305b2:	0a1b      	lsrs	r3, r3, #8
 80305b4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80305b8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80305bc:	4313      	orrs	r3, r2
 80305be:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80305c0:	b2df      	uxtb	r7, r3
 80305c2:	f3c3 2007 	ubfx	r0, r3, #8, #8
 80305c6:	0c1b      	lsrs	r3, r3, #16
 80305c8:	fb17 f702 	smulbb	r7, r7, r2
 80305cc:	fb10 f002 	smulbb	r0, r0, r2
 80305d0:	fb13 f302 	smulbb	r3, r3, r2
 80305d4:	f89d e094 	ldrb.w	lr, [sp, #148]	@ 0x94
 80305d8:	f89a 1000 	ldrb.w	r1, [sl]
 80305dc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80305e0:	fb01 710e 	mla	r1, r1, lr, r7
 80305e4:	fb02 020e 	mla	r2, r2, lr, r0
 80305e8:	fb0c 330e 	mla	r3, ip, lr, r3
 80305ec:	b297      	uxth	r7, r2
 80305ee:	fa1f fc81 	uxth.w	ip, r1
 80305f2:	b298      	uxth	r0, r3
 80305f4:	f10c 0101 	add.w	r1, ip, #1
 80305f8:	1c7a      	adds	r2, r7, #1
 80305fa:	1c43      	adds	r3, r0, #1
 80305fc:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8030600:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8030604:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8030608:	1209      	asrs	r1, r1, #8
 803060a:	1212      	asrs	r2, r2, #8
 803060c:	121b      	asrs	r3, r3, #8
 803060e:	f88a 1000 	strb.w	r1, [sl]
 8030612:	f88a 2001 	strb.w	r2, [sl, #1]
 8030616:	f88a 3002 	strb.w	r3, [sl, #2]
 803061a:	f1b8 0f00 	cmp.w	r8, #0
 803061e:	f10a 0a04 	add.w	sl, sl, #4
 8030622:	44b1      	add	r9, r6
 8030624:	44ab      	add	fp, r5
 8030626:	dd30      	ble.n	803068a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x766>
 8030628:	e9d4 1e02 	ldrd	r1, lr, [r4, #8]
 803062c:	ea4f 4329 	mov.w	r3, r9, asr #16
 8030630:	2b00      	cmp	r3, #0
 8030632:	f108 38ff 	add.w	r8, r8, #4294967295
 8030636:	ea4f 422b 	mov.w	r2, fp, asr #16
 803063a:	f3c9 3003 	ubfx	r0, r9, #12, #4
 803063e:	f3cb 3703 	ubfx	r7, fp, #12, #4
 8030642:	f6bf aea3 	bge.w	803038c <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8030646:	f113 0c01 	adds.w	ip, r3, #1
 803064a:	d4e6      	bmi.n	803061a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 803064c:	458c      	cmp	ip, r1
 803064e:	dce4      	bgt.n	803061a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 8030650:	f112 0c01 	adds.w	ip, r2, #1
 8030654:	d4e1      	bmi.n	803061a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 8030656:	45f4      	cmp	ip, lr
 8030658:	dcdf      	bgt.n	803061a <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f6>
 803065a:	fa0f fe8e 	sxth.w	lr, lr
 803065e:	b209      	sxth	r1, r1
 8030660:	e9cd 1e00 	strd	r1, lr, [sp]
 8030664:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 8030666:	e9cd 2003 	strd	r2, r0, [sp, #12]
 803066a:	e9cd 7105 	strd	r7, r1, [sp, #20]
 803066e:	9302      	str	r3, [sp, #8]
 8030670:	4651      	mov	r1, sl
 8030672:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8030674:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8030676:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8030678:	f7ff fab0 	bl	802fbdc <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPmPKhPKmssiihhh>
 803067c:	f1b8 0f00 	cmp.w	r8, #0
 8030680:	f10a 0a04 	add.w	sl, sl, #4
 8030684:	44b1      	add	r9, r6
 8030686:	44ab      	add	fp, r5
 8030688:	dcce      	bgt.n	8030628 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 803068a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 803068c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 803068e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8030692:	3301      	adds	r3, #1
 8030694:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8030698:	9312      	str	r3, [sp, #72]	@ 0x48
 803069a:	e4a8      	b.n	802ffee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 803069c:	9112      	str	r1, [sp, #72]	@ 0x48
 803069e:	f10e 31ff 	add.w	r1, lr, #4294967295
 80306a2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80306a4:	910a      	str	r1, [sp, #40]	@ 0x28
 80306a6:	4688      	mov	r8, r1
 80306a8:	e662      	b.n	8030370 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 80306aa:	2f00      	cmp	r7, #0
 80306ac:	f43f ae98 	beq.w	80303e0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 80306b0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80306b2:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80306b6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80306ba:	0e13      	lsrs	r3, r2, #24
 80306bc:	9226      	str	r2, [sp, #152]	@ 0x98
 80306be:	931b      	str	r3, [sp, #108]	@ 0x6c
 80306c0:	e68e      	b.n	80303e0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 80306c2:	eb01 0e0c 	add.w	lr, r1, ip
 80306c6:	f89e e001 	ldrb.w	lr, [lr, #1]
 80306ca:	f811 c00c 	ldrb.w	ip, [r1, ip]
 80306ce:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 80306d2:	4611      	mov	r1, r2
 80306d4:	9227      	str	r2, [sp, #156]	@ 0x9c
 80306d6:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
 80306da:	4613      	mov	r3, r2
 80306dc:	9226      	str	r2, [sp, #152]	@ 0x98
 80306de:	0e0a      	lsrs	r2, r1, #24
 80306e0:	921c      	str	r2, [sp, #112]	@ 0x70
 80306e2:	0e1a      	lsrs	r2, r3, #24
 80306e4:	921b      	str	r2, [sp, #108]	@ 0x6c
 80306e6:	e67b      	b.n	80303e0 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 80306e8:	f43f ac81 	beq.w	802ffee <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 80306ec:	1e44      	subs	r4, r0, #1
 80306ee:	e4c2      	b.n	8030076 <_ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>

080306f0 <_ZN8touchgfx19GPU2DVectorRenderer19setStrokeMiterLimitEf>:
 80306f0:	4770      	bx	lr
 80306f2:	bf00      	nop

080306f4 <_ZN8touchgfx19GPU2DVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:
 80306f4:	4770      	bx	lr
 80306f6:	bf00      	nop

080306f8 <_ZN8touchgfx19GPU2DVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:
 80306f8:	4770      	bx	lr
 80306fa:	bf00      	nop

080306fc <_ZN8touchgfx19GPU2DVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 80306fc:	680a      	ldr	r2, [r1, #0]
 80306fe:	4b09      	ldr	r3, [pc, #36]	@ (8030724 <_ZN8touchgfx19GPU2DVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E+0x28>)
 8030700:	601a      	str	r2, [r3, #0]
 8030702:	684a      	ldr	r2, [r1, #4]
 8030704:	605a      	str	r2, [r3, #4]
 8030706:	688a      	ldr	r2, [r1, #8]
 8030708:	609a      	str	r2, [r3, #8]
 803070a:	68ca      	ldr	r2, [r1, #12]
 803070c:	60da      	str	r2, [r3, #12]
 803070e:	690a      	ldr	r2, [r1, #16]
 8030710:	611a      	str	r2, [r3, #16]
 8030712:	694a      	ldr	r2, [r1, #20]
 8030714:	615a      	str	r2, [r3, #20]
 8030716:	698a      	ldr	r2, [r1, #24]
 8030718:	619a      	str	r2, [r3, #24]
 803071a:	69ca      	ldr	r2, [r1, #28]
 803071c:	61da      	str	r2, [r3, #28]
 803071e:	6a0a      	ldr	r2, [r1, #32]
 8030720:	621a      	str	r2, [r3, #32]
 8030722:	4770      	bx	lr
 8030724:	20083404 	.word	0x20083404

08030728 <_ZN8touchgfx19GPU2DVectorRendererD1Ev>:
 8030728:	4770      	bx	lr
 803072a:	bf00      	nop

0803072c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_>:
 803072c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8030730:	4f58      	ldr	r7, [pc, #352]	@ (8030894 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x168>)
 8030732:	b08c      	sub	sp, #48	@ 0x30
 8030734:	6838      	ldr	r0, [r7, #0]
 8030736:	2800      	cmp	r0, #0
 8030738:	f000 8093 	beq.w	8030862 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x136>
 803073c:	460e      	mov	r6, r1
 803073e:	4615      	mov	r5, r2
 8030740:	f7f0 fa4a 	bl	8020bd8 <_ZN8touchgfx8HALGPU2D14bindExecBufferEv>
 8030744:	683c      	ldr	r4, [r7, #0]
 8030746:	2c00      	cmp	r4, #0
 8030748:	f000 808b 	beq.w	8030862 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x136>
 803074c:	4b52      	ldr	r3, [pc, #328]	@ (8030898 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x16c>)
 803074e:	781b      	ldrb	r3, [r3, #0]
 8030750:	2b00      	cmp	r3, #0
 8030752:	d178      	bne.n	8030846 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x11a>
 8030754:	f8d4 803c 	ldr.w	r8, [r4, #60]	@ 0x3c
 8030758:	4b50      	ldr	r3, [pc, #320]	@ (803089c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x170>)
 803075a:	681b      	ldr	r3, [r3, #0]
 803075c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8030760:	2a00      	cmp	r2, #0
 8030762:	d151      	bne.n	8030808 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xdc>
 8030764:	6898      	ldr	r0, [r3, #8]
 8030766:	6803      	ldr	r3, [r0, #0]
 8030768:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 803076a:	4798      	blx	r3
 803076c:	2801      	cmp	r0, #1
 803076e:	d053      	beq.n	8030818 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xec>
 8030770:	d35e      	bcc.n	8030830 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x104>
 8030772:	2802      	cmp	r0, #2
 8030774:	f040 8087 	bne.w	8030886 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x15a>
 8030778:	4a49      	ldr	r2, [pc, #292]	@ (80308a0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 803077a:	4b4a      	ldr	r3, [pc, #296]	@ (80308a4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 803077c:	8811      	ldrh	r1, [r2, #0]
 803077e:	881a      	ldrh	r2, [r3, #0]
 8030780:	008b      	lsls	r3, r1, #2
 8030782:	9300      	str	r3, [sp, #0]
 8030784:	4640      	mov	r0, r8
 8030786:	2310      	movs	r3, #16
 8030788:	f7e0 fc18 	bl	8010fbc <nema_bind_dst_tex>
 803078c:	4c46      	ldr	r4, [pc, #280]	@ (80308a8 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x17c>)
 803078e:	4847      	ldr	r0, [pc, #284]	@ (80308ac <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x180>)
 8030790:	f7e1 f8be 	bl	8011910 <nema_mat3x3_load_identity>
 8030794:	6823      	ldr	r3, [r4, #0]
 8030796:	2b00      	cmp	r3, #0
 8030798:	d069      	beq.n	803086e <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x142>
 803079a:	882a      	ldrh	r2, [r5, #0]
 803079c:	886b      	ldrh	r3, [r5, #2]
 803079e:	8831      	ldrh	r1, [r6, #0]
 80307a0:	8874      	ldrh	r4, [r6, #2]
 80307a2:	4f43      	ldr	r7, [pc, #268]	@ (80308b0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x184>)
 80307a4:	4411      	add	r1, r2
 80307a6:	441c      	add	r4, r3
 80307a8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80307ac:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80307b0:	686d      	ldr	r5, [r5, #4]
 80307b2:	b209      	sxth	r1, r1
 80307b4:	b224      	sxth	r4, r4
 80307b6:	4608      	mov	r0, r1
 80307b8:	8039      	strh	r1, [r7, #0]
 80307ba:	607d      	str	r5, [r7, #4]
 80307bc:	4621      	mov	r1, r4
 80307be:	807c      	strh	r4, [r7, #2]
 80307c0:	f7e0 fa92 	bl	8010ce8 <nema_set_clip>
 80307c4:	483b      	ldr	r0, [pc, #236]	@ (80308b4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x188>)
 80307c6:	f7ec f95d 	bl	801ca84 <nema_vg_set_blend>
 80307ca:	2002      	movs	r0, #2
 80307cc:	f7ec f960 	bl	801ca90 <nema_vg_set_quality>
 80307d0:	f7ed fa34 	bl	801dc3c <nema_cl_get_bound>
 80307d4:	4b38      	ldr	r3, [pc, #224]	@ (80308b8 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x18c>)
 80307d6:	6018      	str	r0, [r3, #0]
 80307d8:	a803      	add	r0, sp, #12
 80307da:	f7e1 f899 	bl	8011910 <nema_mat3x3_load_identity>
 80307de:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80307e2:	a803      	add	r0, sp, #12
 80307e4:	ee00 3a90 	vmov	s1, r3
 80307e8:	f9b6 3000 	ldrsh.w	r3, [r6]
 80307ec:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 80307f0:	ee00 3a10 	vmov	s0, r3
 80307f4:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 80307f8:	f7e1 f8ac 	bl	8011954 <nema_mat3x3_translate>
 80307fc:	a803      	add	r0, sp, #12
 80307fe:	f7ec f957 	bl	801cab0 <nema_vg_set_global_matrix>
 8030802:	b00c      	add	sp, #48	@ 0x30
 8030804:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8030808:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 803080a:	2800      	cmp	r0, #0
 803080c:	d0aa      	beq.n	8030764 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x38>
 803080e:	6803      	ldr	r3, [r0, #0]
 8030810:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8030812:	4798      	blx	r3
 8030814:	2801      	cmp	r0, #1
 8030816:	d1ab      	bne.n	8030770 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x44>
 8030818:	4a21      	ldr	r2, [pc, #132]	@ (80308a0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 803081a:	4b22      	ldr	r3, [pc, #136]	@ (80308a4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 803081c:	8811      	ldrh	r1, [r2, #0]
 803081e:	881a      	ldrh	r2, [r3, #0]
 8030820:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 8030824:	9300      	str	r3, [sp, #0]
 8030826:	4640      	mov	r0, r8
 8030828:	2339      	movs	r3, #57	@ 0x39
 803082a:	f7e0 fbc7 	bl	8010fbc <nema_bind_dst_tex>
 803082e:	e7ad      	b.n	803078c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x60>
 8030830:	4a1b      	ldr	r2, [pc, #108]	@ (80308a0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x174>)
 8030832:	4b1c      	ldr	r3, [pc, #112]	@ (80308a4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x178>)
 8030834:	8811      	ldrh	r1, [r2, #0]
 8030836:	881a      	ldrh	r2, [r3, #0]
 8030838:	004b      	lsls	r3, r1, #1
 803083a:	9300      	str	r3, [sp, #0]
 803083c:	4640      	mov	r0, r8
 803083e:	2304      	movs	r3, #4
 8030840:	f7e0 fbbc 	bl	8010fbc <nema_bind_dst_tex>
 8030844:	e7a2      	b.n	803078c <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x60>
 8030846:	6823      	ldr	r3, [r4, #0]
 8030848:	4620      	mov	r0, r4
 803084a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 803084c:	4798      	blx	r3
 803084e:	f8d4 803c 	ldr.w	r8, [r4, #60]	@ 0x3c
 8030852:	683b      	ldr	r3, [r7, #0]
 8030854:	4580      	cmp	r8, r0
 8030856:	bf08      	it	eq
 8030858:	f8d4 8040 	ldreq.w	r8, [r4, #64]	@ 0x40
 803085c:	2b00      	cmp	r3, #0
 803085e:	f47f af7b 	bne.w	8030758 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x2c>
 8030862:	4b16      	ldr	r3, [pc, #88]	@ (80308bc <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x190>)
 8030864:	4a16      	ldr	r2, [pc, #88]	@ (80308c0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x194>)
 8030866:	217c      	movs	r1, #124	@ 0x7c
 8030868:	4816      	ldr	r0, [pc, #88]	@ (80308c4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x198>)
 803086a:	f001 fe45 	bl	80324f8 <__assert_func>
 803086e:	f7ec f975 	bl	801cb5c <nema_vg_paint_create>
 8030872:	6020      	str	r0, [r4, #0]
 8030874:	f7ec fdc4 	bl	801d400 <nema_vg_path_create>
 8030878:	4b13      	ldr	r3, [pc, #76]	@ (80308c8 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x19c>)
 803087a:	2101      	movs	r1, #1
 803087c:	6018      	str	r0, [r3, #0]
 803087e:	6820      	ldr	r0, [r4, #0]
 8030880:	f7ec f9a2 	bl	801cbc8 <nema_vg_paint_lock_tran_to_path>
 8030884:	e789      	b.n	803079a <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x6e>
 8030886:	4b11      	ldr	r3, [pc, #68]	@ (80308cc <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a0>)
 8030888:	4a11      	ldr	r2, [pc, #68]	@ (80308d0 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a4>)
 803088a:	212c      	movs	r1, #44	@ 0x2c
 803088c:	4811      	ldr	r0, [pc, #68]	@ (80308d4 <_ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0x1a8>)
 803088e:	f001 fe33 	bl	80324f8 <__assert_func>
 8030892:	bf00      	nop
 8030894:	200833a8 	.word	0x200833a8
 8030898:	20082f06 	.word	0x20082f06
 803089c:	20082f08 	.word	0x20082f08
 80308a0:	20082f02 	.word	0x20082f02
 80308a4:	20082f04 	.word	0x20082f04
 80308a8:	20083434 	.word	0x20083434
 80308ac:	20083404 	.word	0x20083404
 80308b0:	20083438 	.word	0x20083438
 80308b4:	04000501 	.word	0x04000501
 80308b8:	20083428 	.word	0x20083428
 80308bc:	0803623c 	.word	0x0803623c
 80308c0:	08038234 	.word	0x08038234
 80308c4:	08036264 	.word	0x08036264
 80308c8:	20083430 	.word	0x20083430
 80308cc:	08036298 	.word	0x08036298
 80308d0:	080381d4 	.word	0x080381d4
 80308d4:	08038030 	.word	0x08038030

080308d8 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
 80308d8:	2901      	cmp	r1, #1
 80308da:	d002      	beq.n	80308e2 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0xa>
 80308dc:	d305      	bcc.n	80308ea <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0x12>
 80308de:	2902      	cmp	r1, #2
 80308e0:	d102      	bne.n	80308e8 <_ZN8touchgfx19GPU2DVectorRenderer7setModeENS_14VectorRenderer8DrawModeE+0x10>
 80308e2:	4608      	mov	r0, r1
 80308e4:	f7ec b8c0 	b.w	801ca68 <nema_vg_set_fill_rule>
 80308e8:	4770      	bx	lr
 80308ea:	2000      	movs	r0, #0
 80308ec:	f7ec b8bc 	b.w	801ca68 <nema_vg_set_fill_rule>

080308f0 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv>:
 80308f0:	b510      	push	{r4, lr}
 80308f2:	4b06      	ldr	r3, [pc, #24]	@ (803090c <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x1c>)
 80308f4:	4c06      	ldr	r4, [pc, #24]	@ (8030910 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x20>)
 80308f6:	6818      	ldr	r0, [r3, #0]
 80308f8:	f7ed fad2 	bl	801dea0 <nema_cl_submit>
 80308fc:	6820      	ldr	r0, [r4, #0]
 80308fe:	b118      	cbz	r0, 8030908 <_ZN8touchgfx19GPU2DVectorRenderer8tearDownEv+0x18>
 8030900:	f7ec f988 	bl	801cc14 <nema_vg_grad_destroy>
 8030904:	2300      	movs	r3, #0
 8030906:	6023      	str	r3, [r4, #0]
 8030908:	bd10      	pop	{r4, pc}
 803090a:	bf00      	nop
 803090c:	20083428 	.word	0x20083428
 8030910:	2008342c 	.word	0x2008342c

08030914 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_>:
 8030914:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8030918:	4c13      	ldr	r4, [pc, #76]	@ (8030968 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x54>)
 803091a:	b083      	sub	sp, #12
 803091c:	6820      	ldr	r0, [r4, #0]
 803091e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8030920:	460f      	mov	r7, r1
 8030922:	4616      	mov	r6, r2
 8030924:	4699      	mov	r9, r3
 8030926:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 803092a:	f7ec fd61 	bl	801d3f0 <nema_vg_path_clear>
 803092e:	6820      	ldr	r0, [r4, #0]
 8030930:	490e      	ldr	r1, [pc, #56]	@ (803096c <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x58>)
 8030932:	f7ec fdeb 	bl	801d50c <nema_vg_path_set_matrix>
 8030936:	6820      	ldr	r0, [r4, #0]
 8030938:	b175      	cbz	r5, 8030958 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x44>
 803093a:	e9cd 9500 	strd	r9, r5, [sp]
 803093e:	4643      	mov	r3, r8
 8030940:	463a      	mov	r2, r7
 8030942:	4631      	mov	r1, r6
 8030944:	f7ec fd64 	bl	801d410 <nema_vg_path_set_shape_and_bbox>
 8030948:	4b09      	ldr	r3, [pc, #36]	@ (8030970 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x5c>)
 803094a:	6820      	ldr	r0, [r4, #0]
 803094c:	6819      	ldr	r1, [r3, #0]
 803094e:	b003      	add	sp, #12
 8030950:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8030954:	f7e7 bd64 	b.w	8018420 <nema_vg_draw_path>
 8030958:	f8cd 9000 	str.w	r9, [sp]
 803095c:	4643      	mov	r3, r8
 803095e:	463a      	mov	r2, r7
 8030960:	4631      	mov	r1, r6
 8030962:	f7ec fdc5 	bl	801d4f0 <nema_vg_path_set_shape>
 8030966:	e7ef      	b.n	8030948 <_ZN8touchgfx19GPU2DVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
 8030968:	20083430 	.word	0x20083430
 803096c:	20083404 	.word	0x20083404
 8030970:	20083434 	.word	0x20083434

08030974 <_ZN8touchgfx19GPU2DVectorRenderer14setStrokeWidthEf>:
 8030974:	b510      	push	{r4, lr}
 8030976:	ed2d 8b02 	vpush	{d8}
 803097a:	eeb0 8a40 	vmov.f32	s16, s0
 803097e:	4c07      	ldr	r4, [pc, #28]	@ (803099c <_ZN8touchgfx19GPU2DVectorRenderer14setStrokeWidthEf+0x28>)
 8030980:	2100      	movs	r1, #0
 8030982:	6820      	ldr	r0, [r4, #0]
 8030984:	f7ec f914 	bl	801cbb0 <nema_vg_paint_set_type>
 8030988:	eeb0 0a48 	vmov.f32	s0, s16
 803098c:	ecbd 8b02 	vpop	{d8}
 8030990:	6820      	ldr	r0, [r4, #0]
 8030992:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8030996:	f7ec bcbd 	b.w	801d314 <nema_vg_paint_set_stroke_width>
 803099a:	bf00      	nop
 803099c:	20083434 	.word	0x20083434

080309a0 <_ZN8touchgfx19GPU2DVectorRenderer8setColorENS_9colortypeE>:
 80309a0:	b538      	push	{r3, r4, r5, lr}
 80309a2:	460c      	mov	r4, r1
 80309a4:	4d09      	ldr	r5, [pc, #36]	@ (80309cc <_ZN8touchgfx19GPU2DVectorRenderer8setColorENS_9colortypeE+0x2c>)
 80309a6:	2100      	movs	r1, #0
 80309a8:	6828      	ldr	r0, [r5, #0]
 80309aa:	f7ec f901 	bl	801cbb0 <nema_vg_paint_set_type>
 80309ae:	f3c4 2107 	ubfx	r1, r4, #8, #8
 80309b2:	0e23      	lsrs	r3, r4, #24
 80309b4:	b2e2      	uxtb	r2, r4
 80309b6:	f3c4 4007 	ubfx	r0, r4, #16, #8
 80309ba:	682d      	ldr	r5, [r5, #0]
 80309bc:	f7e0 fa72 	bl	8010ea4 <nema_rgba>
 80309c0:	4601      	mov	r1, r0
 80309c2:	4628      	mov	r0, r5
 80309c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80309c8:	f7ec bc96 	b.w	801d2f8 <nema_vg_paint_set_paint_color>
 80309cc:	20083434 	.word	0x20083434

080309d0 <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh>:
 80309d0:	29ff      	cmp	r1, #255	@ 0xff
 80309d2:	d00b      	beq.n	80309ec <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x1c>
 80309d4:	ee07 1a90 	vmov	s15, r1
 80309d8:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 80309f8 <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x28>
 80309dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80309e0:	4b06      	ldr	r3, [pc, #24]	@ (80309fc <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x2c>)
 80309e2:	ee87 0a87 	vdiv.f32	s0, s15, s14
 80309e6:	6818      	ldr	r0, [r3, #0]
 80309e8:	f7ec bc8c 	b.w	801d304 <nema_vg_paint_set_opacity>
 80309ec:	4b03      	ldr	r3, [pc, #12]	@ (80309fc <_ZN8touchgfx19GPU2DVectorRenderer8setAlphaEh+0x2c>)
 80309ee:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80309f2:	6818      	ldr	r0, [r3, #0]
 80309f4:	f7ec bc86 	b.w	801d304 <nema_vg_paint_set_opacity>
 80309f8:	437f0000 	.word	0x437f0000
 80309fc:	20083434 	.word	0x20083434

08030a00 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 8030a00:	b570      	push	{r4, r5, r6, lr}
 8030a02:	ed2d 8b08 	vpush	{d8-d11}
 8030a06:	290a      	cmp	r1, #10
 8030a08:	b0c4      	sub	sp, #272	@ 0x110
 8030a0a:	f200 8288 	bhi.w	8030f1e <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x51e>
 8030a0e:	4dd8      	ldr	r5, [pc, #864]	@ (8030d70 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x370>)
 8030a10:	4616      	mov	r6, r2
 8030a12:	682a      	ldr	r2, [r5, #0]
 8030a14:	460c      	mov	r4, r1
 8030a16:	eeb0 9a40 	vmov.f32	s18, s0
 8030a1a:	eef0 8a60 	vmov.f32	s17, s1
 8030a1e:	eef0 aa41 	vmov.f32	s21, s2
 8030a22:	eeb0 8a61 	vmov.f32	s16, s3
 8030a26:	eef0 9a42 	vmov.f32	s19, s4
 8030a2a:	eeb0 aa62 	vmov.f32	s20, s5
 8030a2e:	2a00      	cmp	r2, #0
 8030a30:	f000 8197 	beq.w	8030d62 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x362>
 8030a34:	2c00      	cmp	r4, #0
 8030a36:	f000 8157 	beq.w	8030ce8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030a3a:	681a      	ldr	r2, [r3, #0]
 8030a3c:	2c01      	cmp	r4, #1
 8030a3e:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030a42:	ee06 1a10 	vmov	s12, r1
 8030a46:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030a4a:	ee06 1a90 	vmov	s13, r1
 8030a4e:	b2d1      	uxtb	r1, r2
 8030a50:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030a54:	ee07 1a10 	vmov	s14, r1
 8030a58:	ee07 2a90 	vmov	s15, r2
 8030a5c:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030a60:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030a64:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030a68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030a6c:	ed8d 6a1c 	vstr	s12, [sp, #112]	@ 0x70
 8030a70:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8030a74:	ed8d 7a1e 	vstr	s14, [sp, #120]	@ 0x78
 8030a78:	edcd 7a1f 	vstr	s15, [sp, #124]	@ 0x7c
 8030a7c:	f000 8134 	beq.w	8030ce8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030a80:	685a      	ldr	r2, [r3, #4]
 8030a82:	2c02      	cmp	r4, #2
 8030a84:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030a88:	ee06 1a10 	vmov	s12, r1
 8030a8c:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030a90:	ee06 1a90 	vmov	s13, r1
 8030a94:	b2d1      	uxtb	r1, r2
 8030a96:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030a9a:	ee07 1a10 	vmov	s14, r1
 8030a9e:	ee07 2a90 	vmov	s15, r2
 8030aa2:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030aa6:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030aaa:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030aae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030ab2:	ed8d 6a20 	vstr	s12, [sp, #128]	@ 0x80
 8030ab6:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8030aba:	ed8d 7a22 	vstr	s14, [sp, #136]	@ 0x88
 8030abe:	edcd 7a23 	vstr	s15, [sp, #140]	@ 0x8c
 8030ac2:	f000 8111 	beq.w	8030ce8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030ac6:	689a      	ldr	r2, [r3, #8]
 8030ac8:	2c03      	cmp	r4, #3
 8030aca:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030ace:	ee06 1a10 	vmov	s12, r1
 8030ad2:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030ad6:	ee06 1a90 	vmov	s13, r1
 8030ada:	b2d1      	uxtb	r1, r2
 8030adc:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030ae0:	ee07 1a10 	vmov	s14, r1
 8030ae4:	ee07 2a90 	vmov	s15, r2
 8030ae8:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030aec:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030af0:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030af4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030af8:	ed8d 6a24 	vstr	s12, [sp, #144]	@ 0x90
 8030afc:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8030b00:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8030b04:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 8030b08:	f000 80ee 	beq.w	8030ce8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030b0c:	68da      	ldr	r2, [r3, #12]
 8030b0e:	2c04      	cmp	r4, #4
 8030b10:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030b14:	ee06 1a10 	vmov	s12, r1
 8030b18:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030b1c:	ee06 1a90 	vmov	s13, r1
 8030b20:	b2d1      	uxtb	r1, r2
 8030b22:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030b26:	ee07 1a10 	vmov	s14, r1
 8030b2a:	ee07 2a90 	vmov	s15, r2
 8030b2e:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030b32:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030b36:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030b3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030b3e:	ed8d 6a28 	vstr	s12, [sp, #160]	@ 0xa0
 8030b42:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8030b46:	ed8d 7a2a 	vstr	s14, [sp, #168]	@ 0xa8
 8030b4a:	edcd 7a2b 	vstr	s15, [sp, #172]	@ 0xac
 8030b4e:	f000 80cb 	beq.w	8030ce8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030b52:	691a      	ldr	r2, [r3, #16]
 8030b54:	2c05      	cmp	r4, #5
 8030b56:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030b5a:	ee06 1a10 	vmov	s12, r1
 8030b5e:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030b62:	ee06 1a90 	vmov	s13, r1
 8030b66:	b2d1      	uxtb	r1, r2
 8030b68:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030b6c:	ee07 1a10 	vmov	s14, r1
 8030b70:	ee07 2a90 	vmov	s15, r2
 8030b74:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030b78:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030b7c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030b80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030b84:	ed8d 6a2c 	vstr	s12, [sp, #176]	@ 0xb0
 8030b88:	edcd 6a2d 	vstr	s13, [sp, #180]	@ 0xb4
 8030b8c:	ed8d 7a2e 	vstr	s14, [sp, #184]	@ 0xb8
 8030b90:	edcd 7a2f 	vstr	s15, [sp, #188]	@ 0xbc
 8030b94:	f000 80a8 	beq.w	8030ce8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030b98:	695a      	ldr	r2, [r3, #20]
 8030b9a:	2c06      	cmp	r4, #6
 8030b9c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030ba0:	ee06 1a10 	vmov	s12, r1
 8030ba4:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030ba8:	ee06 1a90 	vmov	s13, r1
 8030bac:	b2d1      	uxtb	r1, r2
 8030bae:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030bb2:	ee07 1a10 	vmov	s14, r1
 8030bb6:	ee07 2a90 	vmov	s15, r2
 8030bba:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030bbe:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030bc2:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030bc6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030bca:	ed8d 6a30 	vstr	s12, [sp, #192]	@ 0xc0
 8030bce:	edcd 6a31 	vstr	s13, [sp, #196]	@ 0xc4
 8030bd2:	ed8d 7a32 	vstr	s14, [sp, #200]	@ 0xc8
 8030bd6:	edcd 7a33 	vstr	s15, [sp, #204]	@ 0xcc
 8030bda:	f000 8085 	beq.w	8030ce8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030bde:	699a      	ldr	r2, [r3, #24]
 8030be0:	2c07      	cmp	r4, #7
 8030be2:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030be6:	ee06 1a10 	vmov	s12, r1
 8030bea:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030bee:	ee06 1a90 	vmov	s13, r1
 8030bf2:	b2d1      	uxtb	r1, r2
 8030bf4:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030bf8:	ee07 1a10 	vmov	s14, r1
 8030bfc:	ee07 2a90 	vmov	s15, r2
 8030c00:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030c04:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030c08:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030c0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030c10:	ed8d 6a34 	vstr	s12, [sp, #208]	@ 0xd0
 8030c14:	edcd 6a35 	vstr	s13, [sp, #212]	@ 0xd4
 8030c18:	ed8d 7a36 	vstr	s14, [sp, #216]	@ 0xd8
 8030c1c:	edcd 7a37 	vstr	s15, [sp, #220]	@ 0xdc
 8030c20:	d062      	beq.n	8030ce8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030c22:	69da      	ldr	r2, [r3, #28]
 8030c24:	2c08      	cmp	r4, #8
 8030c26:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030c2a:	ee06 1a10 	vmov	s12, r1
 8030c2e:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030c32:	ee06 1a90 	vmov	s13, r1
 8030c36:	b2d1      	uxtb	r1, r2
 8030c38:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030c3c:	ee07 1a10 	vmov	s14, r1
 8030c40:	ee07 2a90 	vmov	s15, r2
 8030c44:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030c48:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030c4c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030c50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030c54:	ed8d 6a38 	vstr	s12, [sp, #224]	@ 0xe0
 8030c58:	edcd 6a39 	vstr	s13, [sp, #228]	@ 0xe4
 8030c5c:	ed8d 7a3a 	vstr	s14, [sp, #232]	@ 0xe8
 8030c60:	edcd 7a3b 	vstr	s15, [sp, #236]	@ 0xec
 8030c64:	d040      	beq.n	8030ce8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030c66:	6a1a      	ldr	r2, [r3, #32]
 8030c68:	2c09      	cmp	r4, #9
 8030c6a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8030c6e:	ee06 1a10 	vmov	s12, r1
 8030c72:	f3c2 2107 	ubfx	r1, r2, #8, #8
 8030c76:	ee06 1a90 	vmov	s13, r1
 8030c7a:	b2d1      	uxtb	r1, r2
 8030c7c:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8030c80:	ee07 1a10 	vmov	s14, r1
 8030c84:	ee07 2a90 	vmov	s15, r2
 8030c88:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030c8c:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030c90:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030c94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030c98:	ed8d 6a3c 	vstr	s12, [sp, #240]	@ 0xf0
 8030c9c:	edcd 6a3d 	vstr	s13, [sp, #244]	@ 0xf4
 8030ca0:	ed8d 7a3e 	vstr	s14, [sp, #248]	@ 0xf8
 8030ca4:	edcd 7a3f 	vstr	s15, [sp, #252]	@ 0xfc
 8030ca8:	d01e      	beq.n	8030ce8 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2e8>
 8030caa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8030cac:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8030cb0:	ee06 2a10 	vmov	s12, r2
 8030cb4:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8030cb8:	ee06 2a90 	vmov	s13, r2
 8030cbc:	b2da      	uxtb	r2, r3
 8030cbe:	0e1b      	lsrs	r3, r3, #24
 8030cc0:	ee07 2a10 	vmov	s14, r2
 8030cc4:	ee07 3a90 	vmov	s15, r3
 8030cc8:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030ccc:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030cd0:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030cd4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030cd8:	ed8d 6a40 	vstr	s12, [sp, #256]	@ 0x100
 8030cdc:	edcd 6a41 	vstr	s13, [sp, #260]	@ 0x104
 8030ce0:	ed8d 7a42 	vstr	s14, [sp, #264]	@ 0x108
 8030ce4:	edcd 7a43 	vstr	s15, [sp, #268]	@ 0x10c
 8030ce8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8030cec:	2100      	movs	r1, #0
 8030cee:	461a      	mov	r2, r3
 8030cf0:	4608      	mov	r0, r1
 8030cf2:	f7df fff9 	bl	8010ce8 <nema_set_clip>
 8030cf6:	4621      	mov	r1, r4
 8030cf8:	4632      	mov	r2, r6
 8030cfa:	ab1c      	add	r3, sp, #112	@ 0x70
 8030cfc:	6828      	ldr	r0, [r5, #0]
 8030cfe:	f7eb ff95 	bl	801cc2c <nema_vg_grad_set>
 8030d02:	481c      	ldr	r0, [pc, #112]	@ (8030d74 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x374>)
 8030d04:	4c1c      	ldr	r4, [pc, #112]	@ (8030d78 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x378>)
 8030d06:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8030d0a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8030d0e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8030d12:	f9b0 0000 	ldrsh.w	r0, [r0]
 8030d16:	f7df ffe7 	bl	8010ce8 <nema_set_clip>
 8030d1a:	6820      	ldr	r0, [r4, #0]
 8030d1c:	2101      	movs	r1, #1
 8030d1e:	f7eb ff47 	bl	801cbb0 <nema_vg_paint_set_type>
 8030d22:	eef4 9a4a 	vcmp.f32	s19, s20
 8030d26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030d2a:	d009      	beq.n	8030d40 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x340>
 8030d2c:	eef4 8a48 	vcmp.f32	s17, s16
 8030d30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030d34:	d004      	beq.n	8030d40 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x340>
 8030d36:	eeb4 9a6a 	vcmp.f32	s18, s21
 8030d3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030d3e:	d11f      	bne.n	8030d80 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x380>
 8030d40:	eef0 1a48 	vmov.f32	s3, s16
 8030d44:	eeb0 1a6a 	vmov.f32	s2, s21
 8030d48:	eef0 0a68 	vmov.f32	s1, s17
 8030d4c:	eeb0 0a49 	vmov.f32	s0, s18
 8030d50:	6829      	ldr	r1, [r5, #0]
 8030d52:	6820      	ldr	r0, [r4, #0]
 8030d54:	2201      	movs	r2, #1
 8030d56:	f7ec fa11 	bl	801d17c <nema_vg_paint_set_grad_linear>
 8030d5a:	b044      	add	sp, #272	@ 0x110
 8030d5c:	ecbd 8b08 	vpop	{d8-d11}
 8030d60:	bd70      	pop	{r4, r5, r6, pc}
 8030d62:	9301      	str	r3, [sp, #4]
 8030d64:	f7eb ff42 	bl	801cbec <nema_vg_grad_create>
 8030d68:	9b01      	ldr	r3, [sp, #4]
 8030d6a:	6028      	str	r0, [r5, #0]
 8030d6c:	e662      	b.n	8030a34 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x34>
 8030d6e:	bf00      	nop
 8030d70:	2008342c 	.word	0x2008342c
 8030d74:	20083438 	.word	0x20083438
 8030d78:	20083434 	.word	0x20083434
 8030d7c:	42c80000 	.word	0x42c80000
 8030d80:	ed1f ba02 	vldr	s22, [pc, #-8]	@ 8030d7c <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x37c>
 8030d84:	a813      	add	r0, sp, #76	@ 0x4c
 8030d86:	f7dd fcfe 	bl	800e786 <_ZN8touchgfx9Matrix3x3C1Ev>
 8030d8a:	a813      	add	r0, sp, #76	@ 0x4c
 8030d8c:	f7dd fcee 	bl	800e76c <_ZN8touchgfx9Matrix3x35resetEv>
 8030d90:	ee8b 0a29 	vdiv.f32	s0, s22, s19
 8030d94:	eecb 0a0a 	vdiv.f32	s1, s22, s20
 8030d98:	a813      	add	r0, sp, #76	@ 0x4c
 8030d9a:	f7dd fcf8 	bl	800e78e <_ZN8touchgfx9Matrix3x35scaleEff>
 8030d9e:	a813      	add	r0, sp, #76	@ 0x4c
 8030da0:	a903      	add	r1, sp, #12
 8030da2:	edcd aa05 	vstr	s21, [sp, #20]
 8030da6:	ed8d 9a03 	vstr	s18, [sp, #12]
 8030daa:	ed8d 8a06 	vstr	s16, [sp, #24]
 8030dae:	edcd 8a04 	vstr	s17, [sp, #16]
 8030db2:	f7dd fd8a 	bl	800e8ca <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030db6:	a905      	add	r1, sp, #20
 8030db8:	a813      	add	r0, sp, #76	@ 0x4c
 8030dba:	eef0 aa40 	vmov.f32	s21, s0
 8030dbe:	eeb0 9a60 	vmov.f32	s18, s1
 8030dc2:	f7dd fd82 	bl	800e8ca <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030dc6:	ee30 6ac9 	vsub.f32	s12, s1, s18
 8030dca:	ee70 5a6a 	vsub.f32	s11, s0, s21
 8030dce:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8030dd2:	ee86 5a25 	vdiv.f32	s10, s12, s11
 8030dd6:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8030dda:	ee87 7a85 	vdiv.f32	s14, s15, s10
 8030dde:	eea6 9a26 	vfma.f32	s18, s12, s13
 8030de2:	ee77 0a20 	vadd.f32	s1, s14, s1
 8030de6:	ee70 7a27 	vadd.f32	s15, s0, s15
 8030dea:	eee5 aaa6 	vfma.f32	s21, s11, s13
 8030dee:	a813      	add	r0, sp, #76	@ 0x4c
 8030df0:	edcd 7a0d 	vstr	s15, [sp, #52]	@ 0x34
 8030df4:	ed8d 9a0c 	vstr	s18, [sp, #48]	@ 0x30
 8030df8:	edcd 0a0e 	vstr	s1, [sp, #56]	@ 0x38
 8030dfc:	edcd aa0b 	vstr	s21, [sp, #44]	@ 0x2c
 8030e00:	f7dd fcb4 	bl	800e76c <_ZN8touchgfx9Matrix3x35resetEv>
 8030e04:	ee89 0a8b 	vdiv.f32	s0, s19, s22
 8030e08:	eeca 0a0b 	vdiv.f32	s1, s20, s22
 8030e0c:	a813      	add	r0, sp, #76	@ 0x4c
 8030e0e:	f7dd fcbe 	bl	800e78e <_ZN8touchgfx9Matrix3x35scaleEff>
 8030e12:	a813      	add	r0, sp, #76	@ 0x4c
 8030e14:	a90d      	add	r1, sp, #52	@ 0x34
 8030e16:	f7dd fd58 	bl	800e8ca <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030e1a:	a813      	add	r0, sp, #76	@ 0x4c
 8030e1c:	a90b      	add	r1, sp, #44	@ 0x2c
 8030e1e:	ed8d 0a0f 	vstr	s0, [sp, #60]	@ 0x3c
 8030e22:	edcd 0a10 	vstr	s1, [sp, #64]	@ 0x40
 8030e26:	f7dd fd50 	bl	800e8ca <_ZNK8touchgfx9Matrix3x315affineTransformERKNS0_5PointE>
 8030e2a:	eddd 7a04 	vldr	s15, [sp, #16]
 8030e2e:	ed9d 6a06 	vldr	s12, [sp, #24]
 8030e32:	ed9d 7a03 	vldr	s14, [sp, #12]
 8030e36:	ee76 7a67 	vsub.f32	s15, s12, s15
 8030e3a:	eddd 6a05 	vldr	s13, [sp, #20]
 8030e3e:	eef0 9a40 	vmov.f32	s19, s0
 8030e42:	ee27 0aa7 	vmul.f32	s0, s15, s15
 8030e46:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8030e4a:	eea7 0aa7 	vfma.f32	s0, s15, s15
 8030e4e:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8030e52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030e56:	eeb0 aa60 	vmov.f32	s20, s1
 8030e5a:	eeb1 9ac0 	vsqrt.f32	s18, s0
 8030e5e:	d457      	bmi.n	8030f10 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x510>
 8030e60:	ed9d 7a10 	vldr	s14, [sp, #64]	@ 0x40
 8030e64:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 8030e68:	ee37 7a46 	vsub.f32	s14, s14, s12
 8030e6c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8030e70:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8030e74:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8030e78:	eec6 aa26 	vdiv.f32	s21, s12, s13
 8030e7c:	eeb0 0a6a 	vmov.f32	s0, s21
 8030e80:	f000 f9f4 	bl	803126c <atanf>
 8030e84:	eef0 ba40 	vmov.f32	s23, s0
 8030e88:	f000 fac4 	bl	8031414 <cosf>
 8030e8c:	ee29 ba00 	vmul.f32	s22, s18, s0
 8030e90:	eeb0 0a6b 	vmov.f32	s0, s23
 8030e94:	f000 fb0a 	bl	80314ac <sinf>
 8030e98:	eef5 aac0 	vcmpe.f32	s21, #0.0
 8030e9c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8030ea0:	ee29 9a00 	vmul.f32	s18, s18, s0
 8030ea4:	eef0 0a4a 	vmov.f32	s1, s20
 8030ea8:	eeb0 0a69 	vmov.f32	s0, s19
 8030eac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030eb0:	eeab 0a27 	vfma.f32	s0, s22, s15
 8030eb4:	eeeb 9a67 	vfms.f32	s19, s22, s15
 8030eb8:	eee9 0a27 	vfma.f32	s1, s18, s15
 8030ebc:	eea9 aa67 	vfms.f32	s20, s18, s15
 8030ec0:	dc0b      	bgt.n	8030eda <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x4da>
 8030ec2:	eeb0 7a4a 	vmov.f32	s14, s20
 8030ec6:	eef0 7a69 	vmov.f32	s15, s19
 8030eca:	eeb0 aa60 	vmov.f32	s20, s1
 8030ece:	eef0 9a40 	vmov.f32	s19, s0
 8030ed2:	eef0 0a47 	vmov.f32	s1, s14
 8030ed6:	eeb0 0a67 	vmov.f32	s0, s15
 8030eda:	eef4 8ac8 	vcmpe.f32	s17, s16
 8030ede:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030ee2:	6820      	ldr	r0, [r4, #0]
 8030ee4:	6829      	ldr	r1, [r5, #0]
 8030ee6:	d50b      	bpl.n	8030f00 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x500>
 8030ee8:	eef0 1a60 	vmov.f32	s3, s1
 8030eec:	eeb0 1a40 	vmov.f32	s2, s0
 8030ef0:	eef0 0a4a 	vmov.f32	s1, s20
 8030ef4:	eeb0 0a69 	vmov.f32	s0, s19
 8030ef8:	2201      	movs	r2, #1
 8030efa:	f7ec f93f 	bl	801d17c <nema_vg_paint_set_grad_linear>
 8030efe:	e72c      	b.n	8030d5a <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x35a>
 8030f00:	eef0 1a4a 	vmov.f32	s3, s20
 8030f04:	eeb0 1a69 	vmov.f32	s2, s19
 8030f08:	2201      	movs	r2, #1
 8030f0a:	f7ec f937 	bl	801d17c <nema_vg_paint_set_grad_linear>
 8030f0e:	e724      	b.n	8030d5a <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x35a>
 8030f10:	f000 f98e 	bl	8031230 <sqrtf>
 8030f14:	ed9d 6a06 	vldr	s12, [sp, #24]
 8030f18:	eddd 6a05 	vldr	s13, [sp, #20]
 8030f1c:	e7a0      	b.n	8030e60 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x460>
 8030f1e:	4b03      	ldr	r3, [pc, #12]	@ (8030f2c <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x52c>)
 8030f20:	4a03      	ldr	r2, [pc, #12]	@ (8030f30 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x530>)
 8030f22:	2194      	movs	r1, #148	@ 0x94
 8030f24:	4803      	ldr	r0, [pc, #12]	@ (8030f34 <_ZN8touchgfx19GPU2DVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x534>)
 8030f26:	f001 fae7 	bl	80324f8 <__assert_func>
 8030f2a:	bf00      	nop
 8030f2c:	08038018 	.word	0x08038018
 8030f30:	080380a4 	.word	0x080380a4
 8030f34:	08038030 	.word	0x08038030

08030f38 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE>:
 8030f38:	b530      	push	{r4, r5, lr}
 8030f3a:	ed2d 8b04 	vpush	{d8-d9}
 8030f3e:	2905      	cmp	r1, #5
 8030f40:	b099      	sub	sp, #100	@ 0x64
 8030f42:	f200 80db 	bhi.w	80310fc <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1c4>
 8030f46:	4d70      	ldr	r5, [pc, #448]	@ (8031108 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d0>)
 8030f48:	eeb0 8a40 	vmov.f32	s16, s0
 8030f4c:	6828      	ldr	r0, [r5, #0]
 8030f4e:	eef0 8a60 	vmov.f32	s17, s1
 8030f52:	eeb0 9a41 	vmov.f32	s18, s2
 8030f56:	2800      	cmp	r0, #0
 8030f58:	f000 80c6 	beq.w	80310e8 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1b0>
 8030f5c:	2900      	cmp	r1, #0
 8030f5e:	f000 80ac 	beq.w	80310ba <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8030f62:	681c      	ldr	r4, [r3, #0]
 8030f64:	2901      	cmp	r1, #1
 8030f66:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8030f6a:	ee06 ca10 	vmov	s12, ip
 8030f6e:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8030f72:	ee06 ca90 	vmov	s13, ip
 8030f76:	fa5f fc84 	uxtb.w	ip, r4
 8030f7a:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8030f7e:	ee07 ca10 	vmov	s14, ip
 8030f82:	ee07 4a90 	vmov	s15, r4
 8030f86:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030f8a:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030f8e:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030f92:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030f96:	ed8d 6a04 	vstr	s12, [sp, #16]
 8030f9a:	edcd 6a05 	vstr	s13, [sp, #20]
 8030f9e:	ed8d 7a06 	vstr	s14, [sp, #24]
 8030fa2:	edcd 7a07 	vstr	s15, [sp, #28]
 8030fa6:	f000 8088 	beq.w	80310ba <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8030faa:	685c      	ldr	r4, [r3, #4]
 8030fac:	2902      	cmp	r1, #2
 8030fae:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8030fb2:	ee06 ca10 	vmov	s12, ip
 8030fb6:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8030fba:	ee06 ca90 	vmov	s13, ip
 8030fbe:	fa5f fc84 	uxtb.w	ip, r4
 8030fc2:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8030fc6:	ee07 ca10 	vmov	s14, ip
 8030fca:	ee07 4a90 	vmov	s15, r4
 8030fce:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8030fd2:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8030fd6:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030fda:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030fde:	ed8d 6a08 	vstr	s12, [sp, #32]
 8030fe2:	edcd 6a09 	vstr	s13, [sp, #36]	@ 0x24
 8030fe6:	ed8d 7a0a 	vstr	s14, [sp, #40]	@ 0x28
 8030fea:	edcd 7a0b 	vstr	s15, [sp, #44]	@ 0x2c
 8030fee:	d064      	beq.n	80310ba <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8030ff0:	689c      	ldr	r4, [r3, #8]
 8030ff2:	2903      	cmp	r1, #3
 8030ff4:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8030ff8:	ee06 ca10 	vmov	s12, ip
 8030ffc:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8031000:	ee06 ca90 	vmov	s13, ip
 8031004:	fa5f fc84 	uxtb.w	ip, r4
 8031008:	ea4f 6414 	mov.w	r4, r4, lsr #24
 803100c:	ee07 ca10 	vmov	s14, ip
 8031010:	ee07 4a90 	vmov	s15, r4
 8031014:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 8031018:	eef8 6a66 	vcvt.f32.u32	s13, s13
 803101c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8031020:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8031024:	ed8d 6a0c 	vstr	s12, [sp, #48]	@ 0x30
 8031028:	edcd 6a0d 	vstr	s13, [sp, #52]	@ 0x34
 803102c:	ed8d 7a0e 	vstr	s14, [sp, #56]	@ 0x38
 8031030:	edcd 7a0f 	vstr	s15, [sp, #60]	@ 0x3c
 8031034:	d041      	beq.n	80310ba <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 8031036:	68dc      	ldr	r4, [r3, #12]
 8031038:	2904      	cmp	r1, #4
 803103a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 803103e:	ee06 ca10 	vmov	s12, ip
 8031042:	f3c4 2c07 	ubfx	ip, r4, #8, #8
 8031046:	ee06 ca90 	vmov	s13, ip
 803104a:	fa5f fc84 	uxtb.w	ip, r4
 803104e:	ea4f 6414 	mov.w	r4, r4, lsr #24
 8031052:	ee07 ca10 	vmov	s14, ip
 8031056:	ee07 4a90 	vmov	s15, r4
 803105a:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 803105e:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8031062:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8031066:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803106a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 803106e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8031072:	ed8d 7a12 	vstr	s14, [sp, #72]	@ 0x48
 8031076:	edcd 7a13 	vstr	s15, [sp, #76]	@ 0x4c
 803107a:	d01e      	beq.n	80310ba <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x182>
 803107c:	691b      	ldr	r3, [r3, #16]
 803107e:	f3c3 4407 	ubfx	r4, r3, #16, #8
 8031082:	ee06 4a10 	vmov	s12, r4
 8031086:	f3c3 2407 	ubfx	r4, r3, #8, #8
 803108a:	ee06 4a90 	vmov	s13, r4
 803108e:	b2dc      	uxtb	r4, r3
 8031090:	0e1b      	lsrs	r3, r3, #24
 8031092:	ee07 4a10 	vmov	s14, r4
 8031096:	ee07 3a90 	vmov	s15, r3
 803109a:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 803109e:	eef8 6a66 	vcvt.f32.u32	s13, s13
 80310a2:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 80310a6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80310aa:	ed8d 6a14 	vstr	s12, [sp, #80]	@ 0x50
 80310ae:	edcd 6a15 	vstr	s13, [sp, #84]	@ 0x54
 80310b2:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 80310b6:	edcd 7a17 	vstr	s15, [sp, #92]	@ 0x5c
 80310ba:	4c14      	ldr	r4, [pc, #80]	@ (803110c <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d4>)
 80310bc:	ab04      	add	r3, sp, #16
 80310be:	f7eb fdb5 	bl	801cc2c <nema_vg_grad_set>
 80310c2:	6820      	ldr	r0, [r4, #0]
 80310c4:	2103      	movs	r1, #3
 80310c6:	f7eb fd73 	bl	801cbb0 <nema_vg_paint_set_type>
 80310ca:	6820      	ldr	r0, [r4, #0]
 80310cc:	eeb0 1a49 	vmov.f32	s2, s18
 80310d0:	eef0 0a68 	vmov.f32	s1, s17
 80310d4:	eeb0 0a48 	vmov.f32	s0, s16
 80310d8:	6829      	ldr	r1, [r5, #0]
 80310da:	2201      	movs	r2, #1
 80310dc:	f7ec f8be 	bl	801d25c <nema_vg_paint_set_grad_radial>
 80310e0:	b019      	add	sp, #100	@ 0x64
 80310e2:	ecbd 8b04 	vpop	{d8-d9}
 80310e6:	bd30      	pop	{r4, r5, pc}
 80310e8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80310ec:	9101      	str	r1, [sp, #4]
 80310ee:	f7eb fd7d 	bl	801cbec <nema_vg_grad_create>
 80310f2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80310f6:	6028      	str	r0, [r5, #0]
 80310f8:	9901      	ldr	r1, [sp, #4]
 80310fa:	e72f      	b.n	8030f5c <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x24>
 80310fc:	4b04      	ldr	r3, [pc, #16]	@ (8031110 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1d8>)
 80310fe:	4a05      	ldr	r2, [pc, #20]	@ (8031114 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1dc>)
 8031100:	21ed      	movs	r1, #237	@ 0xed
 8031102:	4805      	ldr	r0, [pc, #20]	@ (8031118 <_ZN8touchgfx19GPU2DVectorRenderer17setRadialGradientEfffmPKfPKNS_9colortypeE+0x1e0>)
 8031104:	f001 f9f8 	bl	80324f8 <__assert_func>
 8031108:	2008342c 	.word	0x2008342c
 803110c:	20083434 	.word	0x20083434
 8031110:	08038024 	.word	0x08038024
 8031114:	0803814c 	.word	0x0803814c
 8031118:	08038030 	.word	0x08038030

0803111c <_ZN8touchgfx19GPU2DVectorRendererD0Ev>:
 803111c:	b510      	push	{r4, lr}
 803111e:	4604      	mov	r4, r0
 8031120:	2104      	movs	r1, #4
 8031122:	f000 f810 	bl	8031146 <_ZdlPvj>
 8031126:	4620      	mov	r0, r4
 8031128:	bd10      	pop	{r4, pc}
 803112a:	bf00      	nop

0803112c <_GLOBAL__sub_I__ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_>:
 803112c:	2200      	movs	r2, #0
 803112e:	4b02      	ldr	r3, [pc, #8]	@ (8031138 <_GLOBAL__sub_I__ZN8touchgfx19GPU2DVectorRenderer5setupERKNS_4RectES3_+0xc>)
 8031130:	e9c3 2200 	strd	r2, r2, [r3]
 8031134:	4770      	bx	lr
 8031136:	bf00      	nop
 8031138:	20083438 	.word	0x20083438

0803113c <__aeabi_atexit>:
 803113c:	460b      	mov	r3, r1
 803113e:	4601      	mov	r1, r0
 8031140:	4618      	mov	r0, r3
 8031142:	f001 babb 	b.w	80326bc <__cxa_atexit>

08031146 <_ZdlPvj>:
 8031146:	f000 b812 	b.w	803116e <_ZdlPv>

0803114a <__cxa_guard_acquire>:
 803114a:	6802      	ldr	r2, [r0, #0]
 803114c:	4603      	mov	r3, r0
 803114e:	07d2      	lsls	r2, r2, #31
 8031150:	d405      	bmi.n	803115e <__cxa_guard_acquire+0x14>
 8031152:	7842      	ldrb	r2, [r0, #1]
 8031154:	b102      	cbz	r2, 8031158 <__cxa_guard_acquire+0xe>
 8031156:	deff      	udf	#255	@ 0xff
 8031158:	2001      	movs	r0, #1
 803115a:	7058      	strb	r0, [r3, #1]
 803115c:	4770      	bx	lr
 803115e:	2000      	movs	r0, #0
 8031160:	4770      	bx	lr

08031162 <__cxa_guard_release>:
 8031162:	2301      	movs	r3, #1
 8031164:	6003      	str	r3, [r0, #0]
 8031166:	4770      	bx	lr

08031168 <__cxa_pure_virtual>:
 8031168:	b508      	push	{r3, lr}
 803116a:	f000 f80d 	bl	8031188 <_ZSt9terminatev>

0803116e <_ZdlPv>:
 803116e:	f001 b9ef 	b.w	8032550 <free>

08031172 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8031172:	b508      	push	{r3, lr}
 8031174:	4780      	blx	r0
 8031176:	f001 f9b8 	bl	80324ea <abort>
	...

0803117c <_ZSt13get_terminatev>:
 803117c:	4b01      	ldr	r3, [pc, #4]	@ (8031184 <_ZSt13get_terminatev+0x8>)
 803117e:	e8d3 0faf 	lda	r0, [r3]
 8031182:	4770      	bx	lr
 8031184:	20000244 	.word	0x20000244

08031188 <_ZSt9terminatev>:
 8031188:	b508      	push	{r3, lr}
 803118a:	f7ff fff7 	bl	803117c <_ZSt13get_terminatev>
 803118e:	f7ff fff0 	bl	8031172 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08031194 <acosf>:
 8031194:	b508      	push	{r3, lr}
 8031196:	ed2d 8b02 	vpush	{d8}
 803119a:	eeb0 8a40 	vmov.f32	s16, s0
 803119e:	f000 fb81 	bl	80318a4 <__ieee754_acosf>
 80311a2:	eef0 8a40 	vmov.f32	s17, s0
 80311a6:	eeb4 8a48 	vcmp.f32	s16, s16
 80311aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80311ae:	d615      	bvs.n	80311dc <acosf+0x48>
 80311b0:	eeb0 0a48 	vmov.f32	s0, s16
 80311b4:	f000 f972 	bl	803149c <fabsf>
 80311b8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80311bc:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80311c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80311c4:	dd0a      	ble.n	80311dc <acosf+0x48>
 80311c6:	f001 fc53 	bl	8032a70 <__errno>
 80311ca:	2321      	movs	r3, #33	@ 0x21
 80311cc:	ecbd 8b02 	vpop	{d8}
 80311d0:	6003      	str	r3, [r0, #0]
 80311d2:	4805      	ldr	r0, [pc, #20]	@ (80311e8 <acosf+0x54>)
 80311d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80311d8:	f000 b9da 	b.w	8031590 <nanf>
 80311dc:	eeb0 0a68 	vmov.f32	s0, s17
 80311e0:	ecbd 8b02 	vpop	{d8}
 80311e4:	bd08      	pop	{r3, pc}
 80311e6:	bf00      	nop
 80311e8:	080386bf 	.word	0x080386bf

080311ec <atan2f>:
 80311ec:	f000 bc52 	b.w	8031a94 <__ieee754_atan2f>

080311f0 <fmodf>:
 80311f0:	b508      	push	{r3, lr}
 80311f2:	ed2d 8b02 	vpush	{d8}
 80311f6:	eef0 8a40 	vmov.f32	s17, s0
 80311fa:	eeb0 8a60 	vmov.f32	s16, s1
 80311fe:	f000 fce7 	bl	8031bd0 <__ieee754_fmodf>
 8031202:	eef4 8a48 	vcmp.f32	s17, s16
 8031206:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803120a:	d60c      	bvs.n	8031226 <fmodf+0x36>
 803120c:	eddf 8a07 	vldr	s17, [pc, #28]	@ 803122c <fmodf+0x3c>
 8031210:	eeb4 8a68 	vcmp.f32	s16, s17
 8031214:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031218:	d105      	bne.n	8031226 <fmodf+0x36>
 803121a:	f001 fc29 	bl	8032a70 <__errno>
 803121e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8031222:	2321      	movs	r3, #33	@ 0x21
 8031224:	6003      	str	r3, [r0, #0]
 8031226:	ecbd 8b02 	vpop	{d8}
 803122a:	bd08      	pop	{r3, pc}
 803122c:	00000000 	.word	0x00000000

08031230 <sqrtf>:
 8031230:	b508      	push	{r3, lr}
 8031232:	ed2d 8b02 	vpush	{d8}
 8031236:	eeb0 8a40 	vmov.f32	s16, s0
 803123a:	f000 f9af 	bl	803159c <__ieee754_sqrtf>
 803123e:	eeb4 8a48 	vcmp.f32	s16, s16
 8031242:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031246:	d60c      	bvs.n	8031262 <sqrtf+0x32>
 8031248:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8031268 <sqrtf+0x38>
 803124c:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8031250:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031254:	d505      	bpl.n	8031262 <sqrtf+0x32>
 8031256:	f001 fc0b 	bl	8032a70 <__errno>
 803125a:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 803125e:	2321      	movs	r3, #33	@ 0x21
 8031260:	6003      	str	r3, [r0, #0]
 8031262:	ecbd 8b02 	vpop	{d8}
 8031266:	bd08      	pop	{r3, pc}
 8031268:	00000000 	.word	0x00000000

0803126c <atanf>:
 803126c:	b538      	push	{r3, r4, r5, lr}
 803126e:	ee10 5a10 	vmov	r5, s0
 8031272:	eef0 7a40 	vmov.f32	s15, s0
 8031276:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 803127a:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 803127e:	d30f      	bcc.n	80312a0 <atanf+0x34>
 8031280:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8031284:	d904      	bls.n	8031290 <atanf+0x24>
 8031286:	ee70 7a00 	vadd.f32	s15, s0, s0
 803128a:	eeb0 0a67 	vmov.f32	s0, s15
 803128e:	bd38      	pop	{r3, r4, r5, pc}
 8031290:	2d00      	cmp	r5, #0
 8031292:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 80313c8 <atanf+0x15c>
 8031296:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 80313cc <atanf+0x160>
 803129a:	fe77 7a27 	vselgt.f32	s15, s14, s15
 803129e:	e7f4      	b.n	803128a <atanf+0x1e>
 80312a0:	4b4b      	ldr	r3, [pc, #300]	@ (80313d0 <atanf+0x164>)
 80312a2:	429c      	cmp	r4, r3
 80312a4:	d810      	bhi.n	80312c8 <atanf+0x5c>
 80312a6:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 80312aa:	d20a      	bcs.n	80312c2 <atanf+0x56>
 80312ac:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 80313d4 <atanf+0x168>
 80312b0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80312b4:	ee30 7a07 	vadd.f32	s14, s0, s14
 80312b8:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80312bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80312c0:	dce3      	bgt.n	803128a <atanf+0x1e>
 80312c2:	f04f 33ff 	mov.w	r3, #4294967295
 80312c6:	e013      	b.n	80312f0 <atanf+0x84>
 80312c8:	f000 f8e8 	bl	803149c <fabsf>
 80312cc:	4b42      	ldr	r3, [pc, #264]	@ (80313d8 <atanf+0x16c>)
 80312ce:	429c      	cmp	r4, r3
 80312d0:	d84f      	bhi.n	8031372 <atanf+0x106>
 80312d2:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 80312d6:	429c      	cmp	r4, r3
 80312d8:	d841      	bhi.n	803135e <atanf+0xf2>
 80312da:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 80312de:	2300      	movs	r3, #0
 80312e0:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80312e4:	eea0 7a27 	vfma.f32	s14, s0, s15
 80312e8:	ee30 0a27 	vadd.f32	s0, s0, s15
 80312ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80312f0:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 80313dc <atanf+0x170>
 80312f4:	1c5a      	adds	r2, r3, #1
 80312f6:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 80313e0 <atanf+0x174>
 80312fa:	ed9f 5a3a 	vldr	s10, [pc, #232]	@ 80313e4 <atanf+0x178>
 80312fe:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8031302:	ee66 6a06 	vmul.f32	s13, s12, s12
 8031306:	eee6 5a87 	vfma.f32	s11, s13, s14
 803130a:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 80313e8 <atanf+0x17c>
 803130e:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8031312:	eddf 5a36 	vldr	s11, [pc, #216]	@ 80313ec <atanf+0x180>
 8031316:	eee7 5a26 	vfma.f32	s11, s14, s13
 803131a:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 80313f0 <atanf+0x184>
 803131e:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8031322:	eddf 5a34 	vldr	s11, [pc, #208]	@ 80313f4 <atanf+0x188>
 8031326:	eee7 5a26 	vfma.f32	s11, s14, s13
 803132a:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 80313f8 <atanf+0x18c>
 803132e:	eea6 5a87 	vfma.f32	s10, s13, s14
 8031332:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 80313fc <atanf+0x190>
 8031336:	eea5 7a26 	vfma.f32	s14, s10, s13
 803133a:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 8031400 <atanf+0x194>
 803133e:	eea7 5a26 	vfma.f32	s10, s14, s13
 8031342:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8031404 <atanf+0x198>
 8031346:	eea5 7a26 	vfma.f32	s14, s10, s13
 803134a:	ee27 7a26 	vmul.f32	s14, s14, s13
 803134e:	eea5 7a86 	vfma.f32	s14, s11, s12
 8031352:	ee27 7a87 	vmul.f32	s14, s15, s14
 8031356:	d121      	bne.n	803139c <atanf+0x130>
 8031358:	ee77 7ac7 	vsub.f32	s15, s15, s14
 803135c:	e795      	b.n	803128a <atanf+0x1e>
 803135e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8031362:	2301      	movs	r3, #1
 8031364:	ee30 7a67 	vsub.f32	s14, s0, s15
 8031368:	ee30 0a27 	vadd.f32	s0, s0, s15
 803136c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031370:	e7be      	b.n	80312f0 <atanf+0x84>
 8031372:	4b25      	ldr	r3, [pc, #148]	@ (8031408 <atanf+0x19c>)
 8031374:	429c      	cmp	r4, r3
 8031376:	d80b      	bhi.n	8031390 <atanf+0x124>
 8031378:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 803137c:	2302      	movs	r3, #2
 803137e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031382:	ee70 6a67 	vsub.f32	s13, s0, s15
 8031386:	eea0 7a27 	vfma.f32	s14, s0, s15
 803138a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 803138e:	e7af      	b.n	80312f0 <atanf+0x84>
 8031390:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8031394:	2303      	movs	r3, #3
 8031396:	eec7 7a00 	vdiv.f32	s15, s14, s0
 803139a:	e7a9      	b.n	80312f0 <atanf+0x84>
 803139c:	4a1b      	ldr	r2, [pc, #108]	@ (803140c <atanf+0x1a0>)
 803139e:	2d00      	cmp	r5, #0
 80313a0:	491b      	ldr	r1, [pc, #108]	@ (8031410 <atanf+0x1a4>)
 80313a2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80313a6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80313aa:	edd3 6a00 	vldr	s13, [r3]
 80313ae:	ee37 7a66 	vsub.f32	s14, s14, s13
 80313b2:	ee37 7a67 	vsub.f32	s14, s14, s15
 80313b6:	edd2 7a00 	vldr	s15, [r2]
 80313ba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80313be:	bfb8      	it	lt
 80313c0:	eef1 7a67 	vneglt.f32	s15, s15
 80313c4:	e761      	b.n	803128a <atanf+0x1e>
 80313c6:	bf00      	nop
 80313c8:	bfc90fdb 	.word	0xbfc90fdb
 80313cc:	3fc90fdb 	.word	0x3fc90fdb
 80313d0:	3edfffff 	.word	0x3edfffff
 80313d4:	7149f2ca 	.word	0x7149f2ca
 80313d8:	3f97ffff 	.word	0x3f97ffff
 80313dc:	3c8569d7 	.word	0x3c8569d7
 80313e0:	3d4bda59 	.word	0x3d4bda59
 80313e4:	bd6ef16b 	.word	0xbd6ef16b
 80313e8:	3d886b35 	.word	0x3d886b35
 80313ec:	3dba2e6e 	.word	0x3dba2e6e
 80313f0:	3e124925 	.word	0x3e124925
 80313f4:	3eaaaaab 	.word	0x3eaaaaab
 80313f8:	bd15a221 	.word	0xbd15a221
 80313fc:	bd9d8795 	.word	0xbd9d8795
 8031400:	bde38e38 	.word	0xbde38e38
 8031404:	be4ccccd 	.word	0xbe4ccccd
 8031408:	401bffff 	.word	0x401bffff
 803140c:	08038284 	.word	0x08038284
 8031410:	08038274 	.word	0x08038274

08031414 <cosf>:
 8031414:	ee10 3a10 	vmov	r3, s0
 8031418:	b507      	push	{r0, r1, r2, lr}
 803141a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 803141e:	4a1d      	ldr	r2, [pc, #116]	@ (8031494 <cosf+0x80>)
 8031420:	4293      	cmp	r3, r2
 8031422:	d806      	bhi.n	8031432 <cosf+0x1e>
 8031424:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8031498 <cosf+0x84>
 8031428:	b003      	add	sp, #12
 803142a:	f85d eb04 	ldr.w	lr, [sp], #4
 803142e:	f000 b8b9 	b.w	80315a4 <__kernel_cosf>
 8031432:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031436:	d304      	bcc.n	8031442 <cosf+0x2e>
 8031438:	ee30 0a40 	vsub.f32	s0, s0, s0
 803143c:	b003      	add	sp, #12
 803143e:	f85d fb04 	ldr.w	pc, [sp], #4
 8031442:	4668      	mov	r0, sp
 8031444:	f000 fc48 	bl	8031cd8 <__ieee754_rem_pio2f>
 8031448:	f000 0003 	and.w	r0, r0, #3
 803144c:	2801      	cmp	r0, #1
 803144e:	d009      	beq.n	8031464 <cosf+0x50>
 8031450:	2802      	cmp	r0, #2
 8031452:	d010      	beq.n	8031476 <cosf+0x62>
 8031454:	b9b0      	cbnz	r0, 8031484 <cosf+0x70>
 8031456:	eddd 0a01 	vldr	s1, [sp, #4]
 803145a:	ed9d 0a00 	vldr	s0, [sp]
 803145e:	f000 f8a1 	bl	80315a4 <__kernel_cosf>
 8031462:	e7eb      	b.n	803143c <cosf+0x28>
 8031464:	eddd 0a01 	vldr	s1, [sp, #4]
 8031468:	ed9d 0a00 	vldr	s0, [sp]
 803146c:	f000 f8f2 	bl	8031654 <__kernel_sinf>
 8031470:	eeb1 0a40 	vneg.f32	s0, s0
 8031474:	e7e2      	b.n	803143c <cosf+0x28>
 8031476:	eddd 0a01 	vldr	s1, [sp, #4]
 803147a:	ed9d 0a00 	vldr	s0, [sp]
 803147e:	f000 f891 	bl	80315a4 <__kernel_cosf>
 8031482:	e7f5      	b.n	8031470 <cosf+0x5c>
 8031484:	2001      	movs	r0, #1
 8031486:	eddd 0a01 	vldr	s1, [sp, #4]
 803148a:	ed9d 0a00 	vldr	s0, [sp]
 803148e:	f000 f8e1 	bl	8031654 <__kernel_sinf>
 8031492:	e7d3      	b.n	803143c <cosf+0x28>
 8031494:	3f490fd8 	.word	0x3f490fd8
 8031498:	00000000 	.word	0x00000000

0803149c <fabsf>:
 803149c:	ee10 3a10 	vmov	r3, s0
 80314a0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80314a4:	ee00 3a10 	vmov	s0, r3
 80314a8:	4770      	bx	lr
	...

080314ac <sinf>:
 80314ac:	ee10 3a10 	vmov	r3, s0
 80314b0:	b507      	push	{r0, r1, r2, lr}
 80314b2:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80314b6:	4a1e      	ldr	r2, [pc, #120]	@ (8031530 <sinf+0x84>)
 80314b8:	4293      	cmp	r3, r2
 80314ba:	d807      	bhi.n	80314cc <sinf+0x20>
 80314bc:	2000      	movs	r0, #0
 80314be:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8031534 <sinf+0x88>
 80314c2:	b003      	add	sp, #12
 80314c4:	f85d eb04 	ldr.w	lr, [sp], #4
 80314c8:	f000 b8c4 	b.w	8031654 <__kernel_sinf>
 80314cc:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80314d0:	d304      	bcc.n	80314dc <sinf+0x30>
 80314d2:	ee30 0a40 	vsub.f32	s0, s0, s0
 80314d6:	b003      	add	sp, #12
 80314d8:	f85d fb04 	ldr.w	pc, [sp], #4
 80314dc:	4668      	mov	r0, sp
 80314de:	f000 fbfb 	bl	8031cd8 <__ieee754_rem_pio2f>
 80314e2:	f000 0003 	and.w	r0, r0, #3
 80314e6:	2801      	cmp	r0, #1
 80314e8:	d00a      	beq.n	8031500 <sinf+0x54>
 80314ea:	2802      	cmp	r0, #2
 80314ec:	d00f      	beq.n	803150e <sinf+0x62>
 80314ee:	b9c0      	cbnz	r0, 8031522 <sinf+0x76>
 80314f0:	2001      	movs	r0, #1
 80314f2:	eddd 0a01 	vldr	s1, [sp, #4]
 80314f6:	ed9d 0a00 	vldr	s0, [sp]
 80314fa:	f000 f8ab 	bl	8031654 <__kernel_sinf>
 80314fe:	e7ea      	b.n	80314d6 <sinf+0x2a>
 8031500:	eddd 0a01 	vldr	s1, [sp, #4]
 8031504:	ed9d 0a00 	vldr	s0, [sp]
 8031508:	f000 f84c 	bl	80315a4 <__kernel_cosf>
 803150c:	e7e3      	b.n	80314d6 <sinf+0x2a>
 803150e:	2001      	movs	r0, #1
 8031510:	eddd 0a01 	vldr	s1, [sp, #4]
 8031514:	ed9d 0a00 	vldr	s0, [sp]
 8031518:	f000 f89c 	bl	8031654 <__kernel_sinf>
 803151c:	eeb1 0a40 	vneg.f32	s0, s0
 8031520:	e7d9      	b.n	80314d6 <sinf+0x2a>
 8031522:	eddd 0a01 	vldr	s1, [sp, #4]
 8031526:	ed9d 0a00 	vldr	s0, [sp]
 803152a:	f000 f83b 	bl	80315a4 <__kernel_cosf>
 803152e:	e7f5      	b.n	803151c <sinf+0x70>
 8031530:	3f490fd8 	.word	0x3f490fd8
 8031534:	00000000 	.word	0x00000000

08031538 <tanf>:
 8031538:	ee10 3a10 	vmov	r3, s0
 803153c:	b507      	push	{r0, r1, r2, lr}
 803153e:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8031542:	4a11      	ldr	r2, [pc, #68]	@ (8031588 <tanf+0x50>)
 8031544:	4293      	cmp	r3, r2
 8031546:	d807      	bhi.n	8031558 <tanf+0x20>
 8031548:	2001      	movs	r0, #1
 803154a:	eddf 0a10 	vldr	s1, [pc, #64]	@ 803158c <tanf+0x54>
 803154e:	b003      	add	sp, #12
 8031550:	f85d eb04 	ldr.w	lr, [sp], #4
 8031554:	f000 b8c6 	b.w	80316e4 <__kernel_tanf>
 8031558:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 803155c:	d304      	bcc.n	8031568 <tanf+0x30>
 803155e:	ee30 0a40 	vsub.f32	s0, s0, s0
 8031562:	b003      	add	sp, #12
 8031564:	f85d fb04 	ldr.w	pc, [sp], #4
 8031568:	4668      	mov	r0, sp
 803156a:	f000 fbb5 	bl	8031cd8 <__ieee754_rem_pio2f>
 803156e:	eddd 0a01 	vldr	s1, [sp, #4]
 8031572:	0040      	lsls	r0, r0, #1
 8031574:	ed9d 0a00 	vldr	s0, [sp]
 8031578:	f000 0002 	and.w	r0, r0, #2
 803157c:	f1c0 0001 	rsb	r0, r0, #1
 8031580:	f000 f8b0 	bl	80316e4 <__kernel_tanf>
 8031584:	e7ed      	b.n	8031562 <tanf+0x2a>
 8031586:	bf00      	nop
 8031588:	3f490fda 	.word	0x3f490fda
 803158c:	00000000 	.word	0x00000000

08031590 <nanf>:
 8031590:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8031598 <nanf+0x8>
 8031594:	4770      	bx	lr
 8031596:	bf00      	nop
 8031598:	7fc00000 	.word	0x7fc00000

0803159c <__ieee754_sqrtf>:
 803159c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 80315a0:	4770      	bx	lr
	...

080315a4 <__kernel_cosf>:
 80315a4:	ee10 3a10 	vmov	r3, s0
 80315a8:	eef0 6a40 	vmov.f32	s13, s0
 80315ac:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80315b0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80315b4:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80315b8:	d204      	bcs.n	80315c4 <__kernel_cosf+0x20>
 80315ba:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 80315be:	ee17 2a90 	vmov	r2, s15
 80315c2:	b342      	cbz	r2, 8031616 <__kernel_cosf+0x72>
 80315c4:	ee26 7aa6 	vmul.f32	s14, s13, s13
 80315c8:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8031634 <__kernel_cosf+0x90>
 80315cc:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8031638 <__kernel_cosf+0x94>
 80315d0:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 80315d4:	4a19      	ldr	r2, [pc, #100]	@ (803163c <__kernel_cosf+0x98>)
 80315d6:	eea7 6a27 	vfma.f32	s12, s14, s15
 80315da:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8031640 <__kernel_cosf+0x9c>
 80315de:	4293      	cmp	r3, r2
 80315e0:	eee6 7a07 	vfma.f32	s15, s12, s14
 80315e4:	ed9f 6a17 	vldr	s12, [pc, #92]	@ 8031644 <__kernel_cosf+0xa0>
 80315e8:	eea7 6a87 	vfma.f32	s12, s15, s14
 80315ec:	eddf 7a16 	vldr	s15, [pc, #88]	@ 8031648 <__kernel_cosf+0xa4>
 80315f0:	eee6 7a07 	vfma.f32	s15, s12, s14
 80315f4:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 803164c <__kernel_cosf+0xa8>
 80315f8:	eea7 6a87 	vfma.f32	s12, s15, s14
 80315fc:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031600:	ee67 7a27 	vmul.f32	s15, s14, s15
 8031604:	ee26 6a07 	vmul.f32	s12, s12, s14
 8031608:	eee7 0a06 	vfma.f32	s1, s14, s12
 803160c:	d804      	bhi.n	8031618 <__kernel_cosf+0x74>
 803160e:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8031612:	ee30 0a67 	vsub.f32	s0, s0, s15
 8031616:	4770      	bx	lr
 8031618:	4a0d      	ldr	r2, [pc, #52]	@ (8031650 <__kernel_cosf+0xac>)
 803161a:	4293      	cmp	r3, r2
 803161c:	bf96      	itet	ls
 803161e:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8031622:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8031626:	ee07 3a10 	vmovls	s14, r3
 803162a:	ee30 0a47 	vsub.f32	s0, s0, s14
 803162e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031632:	e7ec      	b.n	803160e <__kernel_cosf+0x6a>
 8031634:	ad47d74e 	.word	0xad47d74e
 8031638:	310f74f6 	.word	0x310f74f6
 803163c:	3e999999 	.word	0x3e999999
 8031640:	b493f27c 	.word	0xb493f27c
 8031644:	37d00d01 	.word	0x37d00d01
 8031648:	bab60b61 	.word	0xbab60b61
 803164c:	3d2aaaab 	.word	0x3d2aaaab
 8031650:	3f480000 	.word	0x3f480000

08031654 <__kernel_sinf>:
 8031654:	ee10 3a10 	vmov	r3, s0
 8031658:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 803165c:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8031660:	d204      	bcs.n	803166c <__kernel_sinf+0x18>
 8031662:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8031666:	ee17 3a90 	vmov	r3, s15
 803166a:	b35b      	cbz	r3, 80316c4 <__kernel_sinf+0x70>
 803166c:	ee20 7a00 	vmul.f32	s14, s0, s0
 8031670:	eddf 7a15 	vldr	s15, [pc, #84]	@ 80316c8 <__kernel_sinf+0x74>
 8031674:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 80316cc <__kernel_sinf+0x78>
 8031678:	eea7 6a27 	vfma.f32	s12, s14, s15
 803167c:	eddf 7a14 	vldr	s15, [pc, #80]	@ 80316d0 <__kernel_sinf+0x7c>
 8031680:	ee60 6a07 	vmul.f32	s13, s0, s14
 8031684:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031688:	ed9f 6a12 	vldr	s12, [pc, #72]	@ 80316d4 <__kernel_sinf+0x80>
 803168c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8031690:	eddf 7a11 	vldr	s15, [pc, #68]	@ 80316d8 <__kernel_sinf+0x84>
 8031694:	eee6 7a07 	vfma.f32	s15, s12, s14
 8031698:	b930      	cbnz	r0, 80316a8 <__kernel_sinf+0x54>
 803169a:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 80316dc <__kernel_sinf+0x88>
 803169e:	eea7 6a27 	vfma.f32	s12, s14, s15
 80316a2:	eea6 0a26 	vfma.f32	s0, s12, s13
 80316a6:	4770      	bx	lr
 80316a8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80316ac:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80316b0:	eee0 7a86 	vfma.f32	s15, s1, s12
 80316b4:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80316b8:	eddf 7a09 	vldr	s15, [pc, #36]	@ 80316e0 <__kernel_sinf+0x8c>
 80316bc:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80316c0:	ee30 0a60 	vsub.f32	s0, s0, s1
 80316c4:	4770      	bx	lr
 80316c6:	bf00      	nop
 80316c8:	2f2ec9d3 	.word	0x2f2ec9d3
 80316cc:	b2d72f34 	.word	0xb2d72f34
 80316d0:	3638ef1b 	.word	0x3638ef1b
 80316d4:	b9500d01 	.word	0xb9500d01
 80316d8:	3c088889 	.word	0x3c088889
 80316dc:	be2aaaab 	.word	0xbe2aaaab
 80316e0:	3e2aaaab 	.word	0x3e2aaaab

080316e4 <__kernel_tanf>:
 80316e4:	b508      	push	{r3, lr}
 80316e6:	ee10 3a10 	vmov	r3, s0
 80316ea:	eef0 7a40 	vmov.f32	s15, s0
 80316ee:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80316f2:	f1b2 5f46 	cmp.w	r2, #830472192	@ 0x31800000
 80316f6:	d217      	bcs.n	8031728 <__kernel_tanf+0x44>
 80316f8:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80316fc:	ee17 1a10 	vmov	r1, s14
 8031700:	bb39      	cbnz	r1, 8031752 <__kernel_tanf+0x6e>
 8031702:	1c43      	adds	r3, r0, #1
 8031704:	4313      	orrs	r3, r2
 8031706:	d108      	bne.n	803171a <__kernel_tanf+0x36>
 8031708:	f7ff fec8 	bl	803149c <fabsf>
 803170c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031710:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031714:	eeb0 0a67 	vmov.f32	s0, s15
 8031718:	bd08      	pop	{r3, pc}
 803171a:	2801      	cmp	r0, #1
 803171c:	d0fa      	beq.n	8031714 <__kernel_tanf+0x30>
 803171e:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8031722:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8031726:	e7f5      	b.n	8031714 <__kernel_tanf+0x30>
 8031728:	494c      	ldr	r1, [pc, #304]	@ (803185c <__kernel_tanf+0x178>)
 803172a:	428a      	cmp	r2, r1
 803172c:	d311      	bcc.n	8031752 <__kernel_tanf+0x6e>
 803172e:	2b00      	cmp	r3, #0
 8031730:	ed9f 7a4b 	vldr	s14, [pc, #300]	@ 8031860 <__kernel_tanf+0x17c>
 8031734:	bfbc      	itt	lt
 8031736:	eef1 7a40 	vneglt.f32	s15, s0
 803173a:	eef1 0a60 	vneglt.f32	s1, s1
 803173e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8031742:	eddf 7a48 	vldr	s15, [pc, #288]	@ 8031864 <__kernel_tanf+0x180>
 8031746:	ee77 7ae0 	vsub.f32	s15, s15, s1
 803174a:	eddf 0a47 	vldr	s1, [pc, #284]	@ 8031868 <__kernel_tanf+0x184>
 803174e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031752:	ee67 6aa7 	vmul.f32	s13, s15, s15
 8031756:	eddf 5a45 	vldr	s11, [pc, #276]	@ 803186c <__kernel_tanf+0x188>
 803175a:	ed9f 6a45 	vldr	s12, [pc, #276]	@ 8031870 <__kernel_tanf+0x18c>
 803175e:	ed9f 5a45 	vldr	s10, [pc, #276]	@ 8031874 <__kernel_tanf+0x190>
 8031762:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8031766:	493d      	ldr	r1, [pc, #244]	@ (803185c <__kernel_tanf+0x178>)
 8031768:	428a      	cmp	r2, r1
 803176a:	eea7 6a25 	vfma.f32	s12, s14, s11
 803176e:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8031878 <__kernel_tanf+0x194>
 8031772:	eee6 5a07 	vfma.f32	s11, s12, s14
 8031776:	ed9f 6a41 	vldr	s12, [pc, #260]	@ 803187c <__kernel_tanf+0x198>
 803177a:	eea5 6a87 	vfma.f32	s12, s11, s14
 803177e:	eddf 5a40 	vldr	s11, [pc, #256]	@ 8031880 <__kernel_tanf+0x19c>
 8031782:	eee6 5a07 	vfma.f32	s11, s12, s14
 8031786:	ed9f 6a3f 	vldr	s12, [pc, #252]	@ 8031884 <__kernel_tanf+0x1a0>
 803178a:	eea5 6a87 	vfma.f32	s12, s11, s14
 803178e:	eddf 5a3e 	vldr	s11, [pc, #248]	@ 8031888 <__kernel_tanf+0x1a4>
 8031792:	eee7 5a05 	vfma.f32	s11, s14, s10
 8031796:	ed9f 5a3d 	vldr	s10, [pc, #244]	@ 803188c <__kernel_tanf+0x1a8>
 803179a:	eea5 5a87 	vfma.f32	s10, s11, s14
 803179e:	eddf 5a3c 	vldr	s11, [pc, #240]	@ 8031890 <__kernel_tanf+0x1ac>
 80317a2:	eee5 5a07 	vfma.f32	s11, s10, s14
 80317a6:	ed9f 5a3b 	vldr	s10, [pc, #236]	@ 8031894 <__kernel_tanf+0x1b0>
 80317aa:	eea5 5a87 	vfma.f32	s10, s11, s14
 80317ae:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8031898 <__kernel_tanf+0x1b4>
 80317b2:	eee5 5a07 	vfma.f32	s11, s10, s14
 80317b6:	eeb0 7a46 	vmov.f32	s14, s12
 80317ba:	ee27 5aa6 	vmul.f32	s10, s15, s13
 80317be:	eeb0 6a60 	vmov.f32	s12, s1
 80317c2:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80317c6:	eea7 6a05 	vfma.f32	s12, s14, s10
 80317ca:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 803189c <__kernel_tanf+0x1b8>
 80317ce:	eee6 0a26 	vfma.f32	s1, s12, s13
 80317d2:	eee5 0a07 	vfma.f32	s1, s10, s14
 80317d6:	ee37 6aa0 	vadd.f32	s12, s15, s1
 80317da:	d31d      	bcc.n	8031818 <__kernel_tanf+0x134>
 80317dc:	ee07 0a10 	vmov	s14, r0
 80317e0:	ee26 5a06 	vmul.f32	s10, s12, s12
 80317e4:	179b      	asrs	r3, r3, #30
 80317e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80317ea:	f003 0302 	and.w	r3, r3, #2
 80317ee:	ee36 6a07 	vadd.f32	s12, s12, s14
 80317f2:	f1c3 0301 	rsb	r3, r3, #1
 80317f6:	ee06 3a90 	vmov	s13, r3
 80317fa:	eec5 5a06 	vdiv.f32	s11, s10, s12
 80317fe:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8031802:	ee35 6ae0 	vsub.f32	s12, s11, s1
 8031806:	ee77 7ac6 	vsub.f32	s15, s15, s12
 803180a:	eeb0 6a00 	vmov.f32	s12, #0	@ 0x40000000  2.0
 803180e:	eea7 7ac6 	vfms.f32	s14, s15, s12
 8031812:	ee66 7a87 	vmul.f32	s15, s13, s14
 8031816:	e77d      	b.n	8031714 <__kernel_tanf+0x30>
 8031818:	2801      	cmp	r0, #1
 803181a:	d01b      	beq.n	8031854 <__kernel_tanf+0x170>
 803181c:	4b20      	ldr	r3, [pc, #128]	@ (80318a0 <__kernel_tanf+0x1bc>)
 803181e:	ee16 2a10 	vmov	r2, s12
 8031822:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8031826:	401a      	ands	r2, r3
 8031828:	ee05 2a90 	vmov	s11, r2
 803182c:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8031830:	ee70 0ae7 	vsub.f32	s1, s1, s15
 8031834:	eeff 7a00 	vmov.f32	s15, #240	@ 0xbf800000 -1.0
 8031838:	eec7 6a86 	vdiv.f32	s13, s15, s12
 803183c:	ee16 2a90 	vmov	r2, s13
 8031840:	4013      	ands	r3, r2
 8031842:	ee07 3a90 	vmov	s15, r3
 8031846:	eea5 7aa7 	vfma.f32	s14, s11, s15
 803184a:	eea0 7aa7 	vfma.f32	s14, s1, s15
 803184e:	eee7 7a26 	vfma.f32	s15, s14, s13
 8031852:	e75f      	b.n	8031714 <__kernel_tanf+0x30>
 8031854:	eef0 7a46 	vmov.f32	s15, s12
 8031858:	e75c      	b.n	8031714 <__kernel_tanf+0x30>
 803185a:	bf00      	nop
 803185c:	3f2ca140 	.word	0x3f2ca140
 8031860:	3f490fda 	.word	0x3f490fda
 8031864:	33222168 	.word	0x33222168
 8031868:	00000000 	.word	0x00000000
 803186c:	b79bae5f 	.word	0xb79bae5f
 8031870:	38a3f445 	.word	0x38a3f445
 8031874:	37d95384 	.word	0x37d95384
 8031878:	3a1a26c8 	.word	0x3a1a26c8
 803187c:	3b6b6916 	.word	0x3b6b6916
 8031880:	3cb327a4 	.word	0x3cb327a4
 8031884:	3e088889 	.word	0x3e088889
 8031888:	3895c07a 	.word	0x3895c07a
 803188c:	398137b9 	.word	0x398137b9
 8031890:	3abede48 	.word	0x3abede48
 8031894:	3c11371f 	.word	0x3c11371f
 8031898:	3d5d0dd1 	.word	0x3d5d0dd1
 803189c:	3eaaaaab 	.word	0x3eaaaaab
 80318a0:	fffff000 	.word	0xfffff000

080318a4 <__ieee754_acosf>:
 80318a4:	b508      	push	{r3, lr}
 80318a6:	ee10 3a10 	vmov	r3, s0
 80318aa:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80318ae:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 80318b2:	ed2d 8b0c 	vpush	{d8-d13}
 80318b6:	d109      	bne.n	80318cc <__ieee754_acosf+0x28>
 80318b8:	2b00      	cmp	r3, #0
 80318ba:	ed9f 0a65 	vldr	s0, [pc, #404]	@ 8031a50 <__ieee754_acosf+0x1ac>
 80318be:	eddf 7a65 	vldr	s15, [pc, #404]	@ 8031a54 <__ieee754_acosf+0x1b0>
 80318c2:	fe37 0a80 	vselgt.f32	s0, s15, s0
 80318c6:	ecbd 8b0c 	vpop	{d8-d13}
 80318ca:	bd08      	pop	{r3, pc}
 80318cc:	d904      	bls.n	80318d8 <__ieee754_acosf+0x34>
 80318ce:	ee30 8a40 	vsub.f32	s16, s0, s0
 80318d2:	ee88 0a08 	vdiv.f32	s0, s16, s16
 80318d6:	e7f6      	b.n	80318c6 <__ieee754_acosf+0x22>
 80318d8:	f1b2 5f7c 	cmp.w	r2, #1056964608	@ 0x3f000000
 80318dc:	d23c      	bcs.n	8031958 <__ieee754_acosf+0xb4>
 80318de:	f1b2 5f0c 	cmp.w	r2, #587202560	@ 0x23000000
 80318e2:	f240 80b1 	bls.w	8031a48 <__ieee754_acosf+0x1a4>
 80318e6:	ee60 7a00 	vmul.f32	s15, s0, s0
 80318ea:	eddf 6a5b 	vldr	s13, [pc, #364]	@ 8031a58 <__ieee754_acosf+0x1b4>
 80318ee:	ed9f 7a5b 	vldr	s14, [pc, #364]	@ 8031a5c <__ieee754_acosf+0x1b8>
 80318f2:	ed9f 6a5b 	vldr	s12, [pc, #364]	@ 8031a60 <__ieee754_acosf+0x1bc>
 80318f6:	eea7 7aa6 	vfma.f32	s14, s15, s13
 80318fa:	eddf 6a5a 	vldr	s13, [pc, #360]	@ 8031a64 <__ieee754_acosf+0x1c0>
 80318fe:	eee7 6a27 	vfma.f32	s13, s14, s15
 8031902:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 8031a68 <__ieee754_acosf+0x1c4>
 8031906:	eea6 7aa7 	vfma.f32	s14, s13, s15
 803190a:	eddf 6a58 	vldr	s13, [pc, #352]	@ 8031a6c <__ieee754_acosf+0x1c8>
 803190e:	eee7 6a27 	vfma.f32	s13, s14, s15
 8031912:	ed9f 7a57 	vldr	s14, [pc, #348]	@ 8031a70 <__ieee754_acosf+0x1cc>
 8031916:	eea6 7aa7 	vfma.f32	s14, s13, s15
 803191a:	eddf 6a56 	vldr	s13, [pc, #344]	@ 8031a74 <__ieee754_acosf+0x1d0>
 803191e:	eea7 6aa6 	vfma.f32	s12, s15, s13
 8031922:	eddf 6a55 	vldr	s13, [pc, #340]	@ 8031a78 <__ieee754_acosf+0x1d4>
 8031926:	ee27 7a27 	vmul.f32	s14, s14, s15
 803192a:	eee6 6a27 	vfma.f32	s13, s12, s15
 803192e:	ed9f 6a53 	vldr	s12, [pc, #332]	@ 8031a7c <__ieee754_acosf+0x1d8>
 8031932:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8031936:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 803193a:	eee6 6a27 	vfma.f32	s13, s12, s15
 803193e:	eddf 7a50 	vldr	s15, [pc, #320]	@ 8031a80 <__ieee754_acosf+0x1dc>
 8031942:	ee87 6a26 	vdiv.f32	s12, s14, s13
 8031946:	eee0 7a46 	vfms.f32	s15, s0, s12
 803194a:	ee70 7a67 	vsub.f32	s15, s0, s15
 803194e:	ed9f 0a4d 	vldr	s0, [pc, #308]	@ 8031a84 <__ieee754_acosf+0x1e0>
 8031952:	ee30 0a67 	vsub.f32	s0, s0, s15
 8031956:	e7b6      	b.n	80318c6 <__ieee754_acosf+0x22>
 8031958:	2b00      	cmp	r3, #0
 803195a:	eeb7 9a00 	vmov.f32	s18, #112	@ 0x3f800000  1.0
 803195e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031962:	eddf da3d 	vldr	s27, [pc, #244]	@ 8031a58 <__ieee754_acosf+0x1b4>
 8031966:	eddf ca3d 	vldr	s25, [pc, #244]	@ 8031a5c <__ieee754_acosf+0x1b8>
 803196a:	ed9f ca3e 	vldr	s24, [pc, #248]	@ 8031a64 <__ieee754_acosf+0x1c0>
 803196e:	eddf ba3e 	vldr	s23, [pc, #248]	@ 8031a68 <__ieee754_acosf+0x1c4>
 8031972:	ed9f ba3e 	vldr	s22, [pc, #248]	@ 8031a6c <__ieee754_acosf+0x1c8>
 8031976:	eddf 8a3e 	vldr	s17, [pc, #248]	@ 8031a70 <__ieee754_acosf+0x1cc>
 803197a:	ed9f da3e 	vldr	s26, [pc, #248]	@ 8031a74 <__ieee754_acosf+0x1d0>
 803197e:	eddf aa38 	vldr	s21, [pc, #224]	@ 8031a60 <__ieee754_acosf+0x1bc>
 8031982:	ed9f aa3d 	vldr	s20, [pc, #244]	@ 8031a78 <__ieee754_acosf+0x1d4>
 8031986:	eddf 9a3d 	vldr	s19, [pc, #244]	@ 8031a7c <__ieee754_acosf+0x1d8>
 803198a:	da28      	bge.n	80319de <__ieee754_acosf+0x13a>
 803198c:	ee30 8a09 	vadd.f32	s16, s0, s18
 8031990:	ee28 0a27 	vmul.f32	s0, s16, s15
 8031994:	eee0 ca2d 	vfma.f32	s25, s0, s27
 8031998:	eee0 aa0d 	vfma.f32	s21, s0, s26
 803199c:	eeac ca80 	vfma.f32	s24, s25, s0
 80319a0:	eeaa aa80 	vfma.f32	s20, s21, s0
 80319a4:	eeec ba00 	vfma.f32	s23, s24, s0
 80319a8:	eeea 9a00 	vfma.f32	s19, s20, s0
 80319ac:	eeab ba80 	vfma.f32	s22, s23, s0
 80319b0:	eea9 9a80 	vfma.f32	s18, s19, s0
 80319b4:	eeeb 8a00 	vfma.f32	s17, s22, s0
 80319b8:	ee68 8a80 	vmul.f32	s17, s17, s0
 80319bc:	f7ff fdee 	bl	803159c <__ieee754_sqrtf>
 80319c0:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8031a88 <__ieee754_acosf+0x1e4>
 80319c4:	ee88 7a89 	vdiv.f32	s14, s17, s18
 80319c8:	eee0 7a07 	vfma.f32	s15, s0, s14
 80319cc:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 80319d0:	ee77 7a80 	vadd.f32	s15, s15, s0
 80319d4:	ed9f 0a2d 	vldr	s0, [pc, #180]	@ 8031a8c <__ieee754_acosf+0x1e8>
 80319d8:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80319dc:	e773      	b.n	80318c6 <__ieee754_acosf+0x22>
 80319de:	ee39 8a40 	vsub.f32	s16, s18, s0
 80319e2:	ee28 8a27 	vmul.f32	s16, s16, s15
 80319e6:	eeb0 0a48 	vmov.f32	s0, s16
 80319ea:	f7ff fdd7 	bl	803159c <__ieee754_sqrtf>
 80319ee:	eee8 ca2d 	vfma.f32	s25, s16, s27
 80319f2:	eee8 aa0d 	vfma.f32	s21, s16, s26
 80319f6:	ee10 3a10 	vmov	r3, s0
 80319fa:	eeb0 6a48 	vmov.f32	s12, s16
 80319fe:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 8031a02:	f023 030f 	bic.w	r3, r3, #15
 8031a06:	eeac ca88 	vfma.f32	s24, s25, s16
 8031a0a:	eeaa aa88 	vfma.f32	s20, s21, s16
 8031a0e:	ee07 3a90 	vmov	s15, r3
 8031a12:	eea7 6ae7 	vfms.f32	s12, s15, s15
 8031a16:	ee70 6a27 	vadd.f32	s13, s0, s15
 8031a1a:	eeec ba08 	vfma.f32	s23, s24, s16
 8031a1e:	eeea 9a08 	vfma.f32	s19, s20, s16
 8031a22:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8031a26:	eeab ba88 	vfma.f32	s22, s23, s16
 8031a2a:	eea9 9a88 	vfma.f32	s18, s19, s16
 8031a2e:	eeeb 8a08 	vfma.f32	s17, s22, s16
 8031a32:	ee68 8a88 	vmul.f32	s17, s17, s16
 8031a36:	eec8 6a89 	vdiv.f32	s13, s17, s18
 8031a3a:	eea0 7a26 	vfma.f32	s14, s0, s13
 8031a3e:	ee37 0a87 	vadd.f32	s0, s15, s14
 8031a42:	ee30 0a00 	vadd.f32	s0, s0, s0
 8031a46:	e73e      	b.n	80318c6 <__ieee754_acosf+0x22>
 8031a48:	ed9f 0a11 	vldr	s0, [pc, #68]	@ 8031a90 <__ieee754_acosf+0x1ec>
 8031a4c:	e73b      	b.n	80318c6 <__ieee754_acosf+0x22>
 8031a4e:	bf00      	nop
 8031a50:	40490fdb 	.word	0x40490fdb
 8031a54:	00000000 	.word	0x00000000
 8031a58:	3811ef08 	.word	0x3811ef08
 8031a5c:	3a4f7f04 	.word	0x3a4f7f04
 8031a60:	bf303361 	.word	0xbf303361
 8031a64:	bd241146 	.word	0xbd241146
 8031a68:	3e4e0aa8 	.word	0x3e4e0aa8
 8031a6c:	bea6b090 	.word	0xbea6b090
 8031a70:	3e2aaaab 	.word	0x3e2aaaab
 8031a74:	3d9dc62e 	.word	0x3d9dc62e
 8031a78:	4001572d 	.word	0x4001572d
 8031a7c:	c019d139 	.word	0xc019d139
 8031a80:	33a22168 	.word	0x33a22168
 8031a84:	3fc90fda 	.word	0x3fc90fda
 8031a88:	b3a22168 	.word	0xb3a22168
 8031a8c:	40490fda 	.word	0x40490fda
 8031a90:	3fc90fdb 	.word	0x3fc90fdb

08031a94 <__ieee754_atan2f>:
 8031a94:	ee10 2a90 	vmov	r2, s1
 8031a98:	eef0 7a40 	vmov.f32	s15, s0
 8031a9c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8031aa0:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8031aa4:	b510      	push	{r4, lr}
 8031aa6:	d806      	bhi.n	8031ab6 <__ieee754_atan2f+0x22>
 8031aa8:	ee10 0a10 	vmov	r0, s0
 8031aac:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8031ab0:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031ab4:	d904      	bls.n	8031ac0 <__ieee754_atan2f+0x2c>
 8031ab6:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8031aba:	eeb0 0a67 	vmov.f32	s0, s15
 8031abe:	bd10      	pop	{r4, pc}
 8031ac0:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8031ac4:	d103      	bne.n	8031ace <__ieee754_atan2f+0x3a>
 8031ac6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8031aca:	f7ff bbcf 	b.w	803126c <atanf>
 8031ace:	1794      	asrs	r4, r2, #30
 8031ad0:	f004 0402 	and.w	r4, r4, #2
 8031ad4:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8031ad8:	b93b      	cbnz	r3, 8031aea <__ieee754_atan2f+0x56>
 8031ada:	2c02      	cmp	r4, #2
 8031adc:	d05c      	beq.n	8031b98 <__ieee754_atan2f+0x104>
 8031ade:	2c03      	cmp	r4, #3
 8031ae0:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8031bac <__ieee754_atan2f+0x118>
 8031ae4:	fe47 7a00 	vseleq.f32	s15, s14, s0
 8031ae8:	e7e7      	b.n	8031aba <__ieee754_atan2f+0x26>
 8031aea:	b939      	cbnz	r1, 8031afc <__ieee754_atan2f+0x68>
 8031aec:	2800      	cmp	r0, #0
 8031aee:	eddf 7a30 	vldr	s15, [pc, #192]	@ 8031bb0 <__ieee754_atan2f+0x11c>
 8031af2:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 8031bb4 <__ieee754_atan2f+0x120>
 8031af6:	fe67 7a87 	vselge.f32	s15, s15, s14
 8031afa:	e7de      	b.n	8031aba <__ieee754_atan2f+0x26>
 8031afc:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8031b00:	d110      	bne.n	8031b24 <__ieee754_atan2f+0x90>
 8031b02:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031b06:	f104 34ff 	add.w	r4, r4, #4294967295
 8031b0a:	d107      	bne.n	8031b1c <__ieee754_atan2f+0x88>
 8031b0c:	2c02      	cmp	r4, #2
 8031b0e:	d846      	bhi.n	8031b9e <__ieee754_atan2f+0x10a>
 8031b10:	4b29      	ldr	r3, [pc, #164]	@ (8031bb8 <__ieee754_atan2f+0x124>)
 8031b12:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8031b16:	edd3 7a00 	vldr	s15, [r3]
 8031b1a:	e7ce      	b.n	8031aba <__ieee754_atan2f+0x26>
 8031b1c:	2c02      	cmp	r4, #2
 8031b1e:	d841      	bhi.n	8031ba4 <__ieee754_atan2f+0x110>
 8031b20:	4b26      	ldr	r3, [pc, #152]	@ (8031bbc <__ieee754_atan2f+0x128>)
 8031b22:	e7f6      	b.n	8031b12 <__ieee754_atan2f+0x7e>
 8031b24:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031b28:	d0e0      	beq.n	8031aec <__ieee754_atan2f+0x58>
 8031b2a:	1a5b      	subs	r3, r3, r1
 8031b2c:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8031b30:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8031b34:	da1a      	bge.n	8031b6c <__ieee754_atan2f+0xd8>
 8031b36:	2a00      	cmp	r2, #0
 8031b38:	da01      	bge.n	8031b3e <__ieee754_atan2f+0xaa>
 8031b3a:	313c      	adds	r1, #60	@ 0x3c
 8031b3c:	db19      	blt.n	8031b72 <__ieee754_atan2f+0xde>
 8031b3e:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8031b42:	f7ff fcab 	bl	803149c <fabsf>
 8031b46:	f7ff fb91 	bl	803126c <atanf>
 8031b4a:	eef0 7a40 	vmov.f32	s15, s0
 8031b4e:	2c01      	cmp	r4, #1
 8031b50:	d012      	beq.n	8031b78 <__ieee754_atan2f+0xe4>
 8031b52:	2c02      	cmp	r4, #2
 8031b54:	d017      	beq.n	8031b86 <__ieee754_atan2f+0xf2>
 8031b56:	2c00      	cmp	r4, #0
 8031b58:	d0af      	beq.n	8031aba <__ieee754_atan2f+0x26>
 8031b5a:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8031bc0 <__ieee754_atan2f+0x12c>
 8031b5e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031b62:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8031bc4 <__ieee754_atan2f+0x130>
 8031b66:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031b6a:	e7a6      	b.n	8031aba <__ieee754_atan2f+0x26>
 8031b6c:	eddf 7a10 	vldr	s15, [pc, #64]	@ 8031bb0 <__ieee754_atan2f+0x11c>
 8031b70:	e7ed      	b.n	8031b4e <__ieee754_atan2f+0xba>
 8031b72:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8031bc8 <__ieee754_atan2f+0x134>
 8031b76:	e7ea      	b.n	8031b4e <__ieee754_atan2f+0xba>
 8031b78:	ee17 3a90 	vmov	r3, s15
 8031b7c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8031b80:	ee07 3a90 	vmov	s15, r3
 8031b84:	e799      	b.n	8031aba <__ieee754_atan2f+0x26>
 8031b86:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8031bc0 <__ieee754_atan2f+0x12c>
 8031b8a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8031b8e:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8031bc4 <__ieee754_atan2f+0x130>
 8031b92:	ee77 7a67 	vsub.f32	s15, s14, s15
 8031b96:	e790      	b.n	8031aba <__ieee754_atan2f+0x26>
 8031b98:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8031bc4 <__ieee754_atan2f+0x130>
 8031b9c:	e78d      	b.n	8031aba <__ieee754_atan2f+0x26>
 8031b9e:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8031bcc <__ieee754_atan2f+0x138>
 8031ba2:	e78a      	b.n	8031aba <__ieee754_atan2f+0x26>
 8031ba4:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8031bc8 <__ieee754_atan2f+0x134>
 8031ba8:	e787      	b.n	8031aba <__ieee754_atan2f+0x26>
 8031baa:	bf00      	nop
 8031bac:	c0490fdb 	.word	0xc0490fdb
 8031bb0:	3fc90fdb 	.word	0x3fc90fdb
 8031bb4:	bfc90fdb 	.word	0xbfc90fdb
 8031bb8:	080382a0 	.word	0x080382a0
 8031bbc:	08038294 	.word	0x08038294
 8031bc0:	33bbbd2e 	.word	0x33bbbd2e
 8031bc4:	40490fdb 	.word	0x40490fdb
 8031bc8:	00000000 	.word	0x00000000
 8031bcc:	3f490fdb 	.word	0x3f490fdb

08031bd0 <__ieee754_fmodf>:
 8031bd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8031bd2:	ee10 5a90 	vmov	r5, s1
 8031bd6:	f025 4000 	bic.w	r0, r5, #2147483648	@ 0x80000000
 8031bda:	1e43      	subs	r3, r0, #1
 8031bdc:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8031be0:	d206      	bcs.n	8031bf0 <__ieee754_fmodf+0x20>
 8031be2:	ee10 3a10 	vmov	r3, s0
 8031be6:	f023 4600 	bic.w	r6, r3, #2147483648	@ 0x80000000
 8031bea:	f1b6 4fff 	cmp.w	r6, #2139095040	@ 0x7f800000
 8031bee:	d304      	bcc.n	8031bfa <__ieee754_fmodf+0x2a>
 8031bf0:	ee60 0a20 	vmul.f32	s1, s0, s1
 8031bf4:	ee80 0aa0 	vdiv.f32	s0, s1, s1
 8031bf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8031bfa:	4286      	cmp	r6, r0
 8031bfc:	dbfc      	blt.n	8031bf8 <__ieee754_fmodf+0x28>
 8031bfe:	f003 4400 	and.w	r4, r3, #2147483648	@ 0x80000000
 8031c02:	d105      	bne.n	8031c10 <__ieee754_fmodf+0x40>
 8031c04:	4b33      	ldr	r3, [pc, #204]	@ (8031cd4 <__ieee754_fmodf+0x104>)
 8031c06:	eb03 7354 	add.w	r3, r3, r4, lsr #29
 8031c0a:	ed93 0a00 	vldr	s0, [r3]
 8031c0e:	e7f3      	b.n	8031bf8 <__ieee754_fmodf+0x28>
 8031c10:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8031c14:	d141      	bne.n	8031c9a <__ieee754_fmodf+0xca>
 8031c16:	0232      	lsls	r2, r6, #8
 8031c18:	f06f 017d 	mvn.w	r1, #125	@ 0x7d
 8031c1c:	2a00      	cmp	r2, #0
 8031c1e:	dc39      	bgt.n	8031c94 <__ieee754_fmodf+0xc4>
 8031c20:	f015 4fff 	tst.w	r5, #2139095040	@ 0x7f800000
 8031c24:	d13f      	bne.n	8031ca6 <__ieee754_fmodf+0xd6>
 8031c26:	0207      	lsls	r7, r0, #8
 8031c28:	f06f 027d 	mvn.w	r2, #125	@ 0x7d
 8031c2c:	2f00      	cmp	r7, #0
 8031c2e:	da37      	bge.n	8031ca0 <__ieee754_fmodf+0xd0>
 8031c30:	f111 0f7e 	cmn.w	r1, #126	@ 0x7e
 8031c34:	bfb5      	itete	lt
 8031c36:	f06f 037d 	mvnlt.w	r3, #125	@ 0x7d
 8031c3a:	f3c3 0316 	ubfxge	r3, r3, #0, #23
 8031c3e:	1a5b      	sublt	r3, r3, r1
 8031c40:	f443 0300 	orrge.w	r3, r3, #8388608	@ 0x800000
 8031c44:	eba1 0102 	sub.w	r1, r1, r2
 8031c48:	bfb8      	it	lt
 8031c4a:	fa06 f303 	lsllt.w	r3, r6, r3
 8031c4e:	f112 0f7e 	cmn.w	r2, #126	@ 0x7e
 8031c52:	bfb5      	itete	lt
 8031c54:	f06f 057d 	mvnlt.w	r5, #125	@ 0x7d
 8031c58:	f3c5 0516 	ubfxge	r5, r5, #0, #23
 8031c5c:	1aad      	sublt	r5, r5, r2
 8031c5e:	f445 0000 	orrge.w	r0, r5, #8388608	@ 0x800000
 8031c62:	bfb8      	it	lt
 8031c64:	40a8      	lsllt	r0, r5
 8031c66:	1a1d      	subs	r5, r3, r0
 8031c68:	bb01      	cbnz	r1, 8031cac <__ieee754_fmodf+0xdc>
 8031c6a:	ea13 0325 	ands.w	r3, r3, r5, asr #32
 8031c6e:	bf38      	it	cc
 8031c70:	462b      	movcc	r3, r5
 8031c72:	2b00      	cmp	r3, #0
 8031c74:	d0c6      	beq.n	8031c04 <__ieee754_fmodf+0x34>
 8031c76:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8031c7a:	db1f      	blt.n	8031cbc <__ieee754_fmodf+0xec>
 8031c7c:	f112 0f7e 	cmn.w	r2, #126	@ 0x7e
 8031c80:	db1f      	blt.n	8031cc2 <__ieee754_fmodf+0xf2>
 8031c82:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8031c86:	327f      	adds	r2, #127	@ 0x7f
 8031c88:	4323      	orrs	r3, r4
 8031c8a:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8031c8e:	ee00 3a10 	vmov	s0, r3
 8031c92:	e7b1      	b.n	8031bf8 <__ieee754_fmodf+0x28>
 8031c94:	3901      	subs	r1, #1
 8031c96:	0052      	lsls	r2, r2, #1
 8031c98:	e7c0      	b.n	8031c1c <__ieee754_fmodf+0x4c>
 8031c9a:	15f1      	asrs	r1, r6, #23
 8031c9c:	397f      	subs	r1, #127	@ 0x7f
 8031c9e:	e7bf      	b.n	8031c20 <__ieee754_fmodf+0x50>
 8031ca0:	3a01      	subs	r2, #1
 8031ca2:	007f      	lsls	r7, r7, #1
 8031ca4:	e7c2      	b.n	8031c2c <__ieee754_fmodf+0x5c>
 8031ca6:	15c2      	asrs	r2, r0, #23
 8031ca8:	3a7f      	subs	r2, #127	@ 0x7f
 8031caa:	e7c1      	b.n	8031c30 <__ieee754_fmodf+0x60>
 8031cac:	2d00      	cmp	r5, #0
 8031cae:	da02      	bge.n	8031cb6 <__ieee754_fmodf+0xe6>
 8031cb0:	005b      	lsls	r3, r3, #1
 8031cb2:	3901      	subs	r1, #1
 8031cb4:	e7d7      	b.n	8031c66 <__ieee754_fmodf+0x96>
 8031cb6:	d0a5      	beq.n	8031c04 <__ieee754_fmodf+0x34>
 8031cb8:	006b      	lsls	r3, r5, #1
 8031cba:	e7fa      	b.n	8031cb2 <__ieee754_fmodf+0xe2>
 8031cbc:	005b      	lsls	r3, r3, #1
 8031cbe:	3a01      	subs	r2, #1
 8031cc0:	e7d9      	b.n	8031c76 <__ieee754_fmodf+0xa6>
 8031cc2:	f1c2 22ff 	rsb	r2, r2, #4278255360	@ 0xff00ff00
 8031cc6:	f502 027f 	add.w	r2, r2, #16711680	@ 0xff0000
 8031cca:	3282      	adds	r2, #130	@ 0x82
 8031ccc:	4113      	asrs	r3, r2
 8031cce:	4323      	orrs	r3, r4
 8031cd0:	e7dd      	b.n	8031c8e <__ieee754_fmodf+0xbe>
 8031cd2:	bf00      	nop
 8031cd4:	080382ac 	.word	0x080382ac

08031cd8 <__ieee754_rem_pio2f>:
 8031cd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8031cda:	ee10 6a10 	vmov	r6, s0
 8031cde:	4b87      	ldr	r3, [pc, #540]	@ (8031efc <__ieee754_rem_pio2f+0x224>)
 8031ce0:	b087      	sub	sp, #28
 8031ce2:	4604      	mov	r4, r0
 8031ce4:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8031ce8:	429d      	cmp	r5, r3
 8031cea:	d805      	bhi.n	8031cf8 <__ieee754_rem_pio2f+0x20>
 8031cec:	2300      	movs	r3, #0
 8031cee:	ed80 0a00 	vstr	s0, [r0]
 8031cf2:	6043      	str	r3, [r0, #4]
 8031cf4:	2000      	movs	r0, #0
 8031cf6:	e022      	b.n	8031d3e <__ieee754_rem_pio2f+0x66>
 8031cf8:	4b81      	ldr	r3, [pc, #516]	@ (8031f00 <__ieee754_rem_pio2f+0x228>)
 8031cfa:	429d      	cmp	r5, r3
 8031cfc:	d83a      	bhi.n	8031d74 <__ieee754_rem_pio2f+0x9c>
 8031cfe:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8031d02:	2e00      	cmp	r6, #0
 8031d04:	ed9f 7a7f 	vldr	s14, [pc, #508]	@ 8031f04 <__ieee754_rem_pio2f+0x22c>
 8031d08:	f023 030f 	bic.w	r3, r3, #15
 8031d0c:	4a7e      	ldr	r2, [pc, #504]	@ (8031f08 <__ieee754_rem_pio2f+0x230>)
 8031d0e:	dd18      	ble.n	8031d42 <__ieee754_rem_pio2f+0x6a>
 8031d10:	4293      	cmp	r3, r2
 8031d12:	ee70 7a47 	vsub.f32	s15, s0, s14
 8031d16:	bf09      	itett	eq
 8031d18:	ed9f 7a7c 	vldreq	s14, [pc, #496]	@ 8031f0c <__ieee754_rem_pio2f+0x234>
 8031d1c:	eddf 6a7c 	vldrne	s13, [pc, #496]	@ 8031f10 <__ieee754_rem_pio2f+0x238>
 8031d20:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8031d24:	eddf 6a7b 	vldreq	s13, [pc, #492]	@ 8031f14 <__ieee754_rem_pio2f+0x23c>
 8031d28:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8031d2c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031d30:	ed80 7a00 	vstr	s14, [r0]
 8031d34:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8031d38:	edc0 7a01 	vstr	s15, [r0, #4]
 8031d3c:	2001      	movs	r0, #1
 8031d3e:	b007      	add	sp, #28
 8031d40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8031d42:	4293      	cmp	r3, r2
 8031d44:	ee70 7a07 	vadd.f32	s15, s0, s14
 8031d48:	bf09      	itett	eq
 8031d4a:	ed9f 7a70 	vldreq	s14, [pc, #448]	@ 8031f0c <__ieee754_rem_pio2f+0x234>
 8031d4e:	eddf 6a70 	vldrne	s13, [pc, #448]	@ 8031f10 <__ieee754_rem_pio2f+0x238>
 8031d52:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8031d56:	eddf 6a6f 	vldreq	s13, [pc, #444]	@ 8031f14 <__ieee754_rem_pio2f+0x23c>
 8031d5a:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8031d5e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031d62:	ed80 7a00 	vstr	s14, [r0]
 8031d66:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8031d6a:	edc0 7a01 	vstr	s15, [r0, #4]
 8031d6e:	f04f 30ff 	mov.w	r0, #4294967295
 8031d72:	e7e4      	b.n	8031d3e <__ieee754_rem_pio2f+0x66>
 8031d74:	4b68      	ldr	r3, [pc, #416]	@ (8031f18 <__ieee754_rem_pio2f+0x240>)
 8031d76:	429d      	cmp	r5, r3
 8031d78:	d872      	bhi.n	8031e60 <__ieee754_rem_pio2f+0x188>
 8031d7a:	f7ff fb8f 	bl	803149c <fabsf>
 8031d7e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8031d82:	ed9f 7a66 	vldr	s14, [pc, #408]	@ 8031f1c <__ieee754_rem_pio2f+0x244>
 8031d86:	eee0 7a07 	vfma.f32	s15, s0, s14
 8031d8a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8031d8e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8031d92:	ee17 0a90 	vmov	r0, s15
 8031d96:	eddf 7a5b 	vldr	s15, [pc, #364]	@ 8031f04 <__ieee754_rem_pio2f+0x22c>
 8031d9a:	281f      	cmp	r0, #31
 8031d9c:	eea7 0a67 	vfms.f32	s0, s14, s15
 8031da0:	eddf 7a5b 	vldr	s15, [pc, #364]	@ 8031f10 <__ieee754_rem_pio2f+0x238>
 8031da4:	eeb1 6a47 	vneg.f32	s12, s14
 8031da8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8031dac:	ee70 6a67 	vsub.f32	s13, s0, s15
 8031db0:	ee16 1a90 	vmov	r1, s13
 8031db4:	dc09      	bgt.n	8031dca <__ieee754_rem_pio2f+0xf2>
 8031db6:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8031dba:	1e47      	subs	r7, r0, #1
 8031dbc:	4a58      	ldr	r2, [pc, #352]	@ (8031f20 <__ieee754_rem_pio2f+0x248>)
 8031dbe:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8031dc2:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8031dc6:	4293      	cmp	r3, r2
 8031dc8:	d106      	bne.n	8031dd8 <__ieee754_rem_pio2f+0x100>
 8031dca:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8031dce:	15eb      	asrs	r3, r5, #23
 8031dd0:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8031dd4:	2a08      	cmp	r2, #8
 8031dd6:	dc14      	bgt.n	8031e02 <__ieee754_rem_pio2f+0x12a>
 8031dd8:	6021      	str	r1, [r4, #0]
 8031dda:	ed94 7a00 	vldr	s14, [r4]
 8031dde:	2e00      	cmp	r6, #0
 8031de0:	ee30 0a47 	vsub.f32	s0, s0, s14
 8031de4:	ee30 0a67 	vsub.f32	s0, s0, s15
 8031de8:	ed84 0a01 	vstr	s0, [r4, #4]
 8031dec:	daa7      	bge.n	8031d3e <__ieee754_rem_pio2f+0x66>
 8031dee:	eeb1 7a47 	vneg.f32	s14, s14
 8031df2:	eeb1 0a40 	vneg.f32	s0, s0
 8031df6:	ed84 7a00 	vstr	s14, [r4]
 8031dfa:	ed84 0a01 	vstr	s0, [r4, #4]
 8031dfe:	4240      	negs	r0, r0
 8031e00:	e79d      	b.n	8031d3e <__ieee754_rem_pio2f+0x66>
 8031e02:	eef0 6a40 	vmov.f32	s13, s0
 8031e06:	eddf 5a41 	vldr	s11, [pc, #260]	@ 8031f0c <__ieee754_rem_pio2f+0x234>
 8031e0a:	eee6 6a25 	vfma.f32	s13, s12, s11
 8031e0e:	ee70 7a66 	vsub.f32	s15, s0, s13
 8031e12:	eee6 7a25 	vfma.f32	s15, s12, s11
 8031e16:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8031f14 <__ieee754_rem_pio2f+0x23c>
 8031e1a:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8031e1e:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8031e22:	ee15 2a90 	vmov	r2, s11
 8031e26:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8031e2a:	1a5b      	subs	r3, r3, r1
 8031e2c:	2b19      	cmp	r3, #25
 8031e2e:	dc04      	bgt.n	8031e3a <__ieee754_rem_pio2f+0x162>
 8031e30:	eeb0 0a66 	vmov.f32	s0, s13
 8031e34:	edc4 5a00 	vstr	s11, [r4]
 8031e38:	e7cf      	b.n	8031dda <__ieee754_rem_pio2f+0x102>
 8031e3a:	eeb0 0a66 	vmov.f32	s0, s13
 8031e3e:	eddf 5a39 	vldr	s11, [pc, #228]	@ 8031f24 <__ieee754_rem_pio2f+0x24c>
 8031e42:	eea6 0a25 	vfma.f32	s0, s12, s11
 8031e46:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8031e4a:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8031f28 <__ieee754_rem_pio2f+0x250>
 8031e4e:	eee6 7a25 	vfma.f32	s15, s12, s11
 8031e52:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8031e56:	ee30 7a67 	vsub.f32	s14, s0, s15
 8031e5a:	ed84 7a00 	vstr	s14, [r4]
 8031e5e:	e7bc      	b.n	8031dda <__ieee754_rem_pio2f+0x102>
 8031e60:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8031e64:	d306      	bcc.n	8031e74 <__ieee754_rem_pio2f+0x19c>
 8031e66:	ee70 7a40 	vsub.f32	s15, s0, s0
 8031e6a:	edc0 7a01 	vstr	s15, [r0, #4]
 8031e6e:	edc0 7a00 	vstr	s15, [r0]
 8031e72:	e73f      	b.n	8031cf4 <__ieee754_rem_pio2f+0x1c>
 8031e74:	15ea      	asrs	r2, r5, #23
 8031e76:	eddf 6a2d 	vldr	s13, [pc, #180]	@ 8031f2c <__ieee754_rem_pio2f+0x254>
 8031e7a:	3a86      	subs	r2, #134	@ 0x86
 8031e7c:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8031e80:	ee07 3a90 	vmov	s15, r3
 8031e84:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8031e88:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8031e8c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031e90:	ed8d 7a03 	vstr	s14, [sp, #12]
 8031e94:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8031e98:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8031e9c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8031ea0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8031ea4:	ed8d 7a04 	vstr	s14, [sp, #16]
 8031ea8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8031eac:	eef5 7a40 	vcmp.f32	s15, #0.0
 8031eb0:	edcd 7a05 	vstr	s15, [sp, #20]
 8031eb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031eb8:	d11e      	bne.n	8031ef8 <__ieee754_rem_pio2f+0x220>
 8031eba:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8031ebe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8031ec2:	bf0c      	ite	eq
 8031ec4:	2301      	moveq	r3, #1
 8031ec6:	2302      	movne	r3, #2
 8031ec8:	4919      	ldr	r1, [pc, #100]	@ (8031f30 <__ieee754_rem_pio2f+0x258>)
 8031eca:	a803      	add	r0, sp, #12
 8031ecc:	9101      	str	r1, [sp, #4]
 8031ece:	2102      	movs	r1, #2
 8031ed0:	9100      	str	r1, [sp, #0]
 8031ed2:	4621      	mov	r1, r4
 8031ed4:	f000 f82e 	bl	8031f34 <__kernel_rem_pio2f>
 8031ed8:	2e00      	cmp	r6, #0
 8031eda:	f6bf af30 	bge.w	8031d3e <__ieee754_rem_pio2f+0x66>
 8031ede:	edd4 7a00 	vldr	s15, [r4]
 8031ee2:	eef1 7a67 	vneg.f32	s15, s15
 8031ee6:	edc4 7a00 	vstr	s15, [r4]
 8031eea:	edd4 7a01 	vldr	s15, [r4, #4]
 8031eee:	eef1 7a67 	vneg.f32	s15, s15
 8031ef2:	edc4 7a01 	vstr	s15, [r4, #4]
 8031ef6:	e782      	b.n	8031dfe <__ieee754_rem_pio2f+0x126>
 8031ef8:	2303      	movs	r3, #3
 8031efa:	e7e5      	b.n	8031ec8 <__ieee754_rem_pio2f+0x1f0>
 8031efc:	3f490fd8 	.word	0x3f490fd8
 8031f00:	4016cbe3 	.word	0x4016cbe3
 8031f04:	3fc90f80 	.word	0x3fc90f80
 8031f08:	3fc90fd0 	.word	0x3fc90fd0
 8031f0c:	37354400 	.word	0x37354400
 8031f10:	37354443 	.word	0x37354443
 8031f14:	2e85a308 	.word	0x2e85a308
 8031f18:	43490f80 	.word	0x43490f80
 8031f1c:	3f22f984 	.word	0x3f22f984
 8031f20:	080382b4 	.word	0x080382b4
 8031f24:	2e85a300 	.word	0x2e85a300
 8031f28:	248d3132 	.word	0x248d3132
 8031f2c:	43800000 	.word	0x43800000
 8031f30:	08038334 	.word	0x08038334

08031f34 <__kernel_rem_pio2f>:
 8031f34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8031f38:	4690      	mov	r8, r2
 8031f3a:	4abc      	ldr	r2, [pc, #752]	@ (803222c <__kernel_rem_pio2f+0x2f8>)
 8031f3c:	460f      	mov	r7, r1
 8031f3e:	f103 3bff 	add.w	fp, r3, #4294967295
 8031f42:	f118 0f04 	cmn.w	r8, #4
 8031f46:	ed2d 8b04 	vpush	{d8-d9}
 8031f4a:	b0d9      	sub	sp, #356	@ 0x164
 8031f4c:	9001      	str	r0, [sp, #4]
 8031f4e:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8031f50:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8031f54:	db27      	blt.n	8031fa6 <__kernel_rem_pio2f+0x72>
 8031f56:	f1b8 0203 	subs.w	r2, r8, #3
 8031f5a:	bf48      	it	mi
 8031f5c:	f108 0204 	addmi.w	r2, r8, #4
 8031f60:	10d2      	asrs	r2, r2, #3
 8031f62:	1c55      	adds	r5, r2, #1
 8031f64:	eba2 060b 	sub.w	r6, r2, fp
 8031f68:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8031f6a:	eb0a 0c0b 	add.w	ip, sl, fp
 8031f6e:	00e8      	lsls	r0, r5, #3
 8031f70:	ac1c      	add	r4, sp, #112	@ 0x70
 8031f72:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8031f76:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 803223c <__kernel_rem_pio2f+0x308>
 8031f7a:	9002      	str	r0, [sp, #8]
 8031f7c:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8031f80:	2000      	movs	r0, #0
 8031f82:	4560      	cmp	r0, ip
 8031f84:	dd11      	ble.n	8031faa <__kernel_rem_pio2f+0x76>
 8031f86:	a91c      	add	r1, sp, #112	@ 0x70
 8031f88:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8031f8c:	f04f 0c00 	mov.w	ip, #0
 8031f90:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8031f94:	45d4      	cmp	ip, sl
 8031f96:	dc29      	bgt.n	8031fec <__kernel_rem_pio2f+0xb8>
 8031f98:	f8dd e004 	ldr.w	lr, [sp, #4]
 8031f9c:	4606      	mov	r6, r0
 8031f9e:	eddf 7aa7 	vldr	s15, [pc, #668]	@ 803223c <__kernel_rem_pio2f+0x308>
 8031fa2:	2400      	movs	r4, #0
 8031fa4:	e018      	b.n	8031fd8 <__kernel_rem_pio2f+0xa4>
 8031fa6:	2200      	movs	r2, #0
 8031fa8:	e7db      	b.n	8031f62 <__kernel_rem_pio2f+0x2e>
 8031faa:	42c6      	cmn	r6, r0
 8031fac:	bf54      	ite	pl
 8031fae:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8031fb2:	eef0 7a47 	vmovmi.f32	s15, s14
 8031fb6:	f100 0001 	add.w	r0, r0, #1
 8031fba:	bf5c      	itt	pl
 8031fbc:	ee07 1a90 	vmovpl	s15, r1
 8031fc0:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8031fc4:	ece4 7a01 	vstmia	r4!, {s15}
 8031fc8:	e7db      	b.n	8031f82 <__kernel_rem_pio2f+0x4e>
 8031fca:	ecfe 6a01 	vldmia	lr!, {s13}
 8031fce:	3401      	adds	r4, #1
 8031fd0:	ed96 7a00 	vldr	s14, [r6]
 8031fd4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8031fd8:	455c      	cmp	r4, fp
 8031fda:	f1a6 0604 	sub.w	r6, r6, #4
 8031fde:	ddf4      	ble.n	8031fca <__kernel_rem_pio2f+0x96>
 8031fe0:	f10c 0c01 	add.w	ip, ip, #1
 8031fe4:	3004      	adds	r0, #4
 8031fe6:	ece9 7a01 	vstmia	r9!, {s15}
 8031fea:	e7d3      	b.n	8031f94 <__kernel_rem_pio2f+0x60>
 8031fec:	a908      	add	r1, sp, #32
 8031fee:	4654      	mov	r4, sl
 8031ff0:	eddf 8a91 	vldr	s17, [pc, #580]	@ 8032238 <__kernel_rem_pio2f+0x304>
 8031ff4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8031ff8:	ed9f 9a8e 	vldr	s18, [pc, #568]	@ 8032234 <__kernel_rem_pio2f+0x300>
 8031ffc:	9104      	str	r1, [sp, #16]
 8031ffe:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8032000:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8032004:	9203      	str	r2, [sp, #12]
 8032006:	00a2      	lsls	r2, r4, #2
 8032008:	a944      	add	r1, sp, #272	@ 0x110
 803200a:	4626      	mov	r6, r4
 803200c:	9205      	str	r2, [sp, #20]
 803200e:	aa58      	add	r2, sp, #352	@ 0x160
 8032010:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8032014:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8032018:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 803201c:	aa08      	add	r2, sp, #32
 803201e:	4694      	mov	ip, r2
 8032020:	2e00      	cmp	r6, #0
 8032022:	f1a0 0004 	sub.w	r0, r0, #4
 8032026:	dc4c      	bgt.n	80320c2 <__kernel_rem_pio2f+0x18e>
 8032028:	4628      	mov	r0, r5
 803202a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 803202e:	f000 f9f5 	bl	803241c <scalbnf>
 8032032:	eeb0 8a40 	vmov.f32	s16, s0
 8032036:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 803203a:	ee28 0a00 	vmul.f32	s0, s16, s0
 803203e:	f000 fa51 	bl	80324e4 <floorf>
 8032042:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8032046:	2d00      	cmp	r5, #0
 8032048:	eea0 8a67 	vfms.f32	s16, s0, s15
 803204c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8032050:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8032054:	ee17 9a90 	vmov	r9, s15
 8032058:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 803205c:	ee38 8a67 	vsub.f32	s16, s16, s15
 8032060:	dd41      	ble.n	80320e6 <__kernel_rem_pio2f+0x1b2>
 8032062:	f104 3cff 	add.w	ip, r4, #4294967295
 8032066:	a908      	add	r1, sp, #32
 8032068:	f1c5 0e08 	rsb	lr, r5, #8
 803206c:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8032070:	fa46 f00e 	asr.w	r0, r6, lr
 8032074:	4481      	add	r9, r0
 8032076:	fa00 f00e 	lsl.w	r0, r0, lr
 803207a:	1a36      	subs	r6, r6, r0
 803207c:	f1c5 0007 	rsb	r0, r5, #7
 8032080:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8032084:	4106      	asrs	r6, r0
 8032086:	2e00      	cmp	r6, #0
 8032088:	dd3c      	ble.n	8032104 <__kernel_rem_pio2f+0x1d0>
 803208a:	f04f 0e00 	mov.w	lr, #0
 803208e:	f109 0901 	add.w	r9, r9, #1
 8032092:	4670      	mov	r0, lr
 8032094:	4574      	cmp	r4, lr
 8032096:	dc68      	bgt.n	803216a <__kernel_rem_pio2f+0x236>
 8032098:	2d00      	cmp	r5, #0
 803209a:	dd03      	ble.n	80320a4 <__kernel_rem_pio2f+0x170>
 803209c:	2d01      	cmp	r5, #1
 803209e:	d074      	beq.n	803218a <__kernel_rem_pio2f+0x256>
 80320a0:	2d02      	cmp	r5, #2
 80320a2:	d07d      	beq.n	80321a0 <__kernel_rem_pio2f+0x26c>
 80320a4:	2e02      	cmp	r6, #2
 80320a6:	d12d      	bne.n	8032104 <__kernel_rem_pio2f+0x1d0>
 80320a8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80320ac:	ee30 8a48 	vsub.f32	s16, s0, s16
 80320b0:	b340      	cbz	r0, 8032104 <__kernel_rem_pio2f+0x1d0>
 80320b2:	4628      	mov	r0, r5
 80320b4:	9306      	str	r3, [sp, #24]
 80320b6:	f000 f9b1 	bl	803241c <scalbnf>
 80320ba:	9b06      	ldr	r3, [sp, #24]
 80320bc:	ee38 8a40 	vsub.f32	s16, s16, s0
 80320c0:	e020      	b.n	8032104 <__kernel_rem_pio2f+0x1d0>
 80320c2:	ee60 7a28 	vmul.f32	s15, s0, s17
 80320c6:	3e01      	subs	r6, #1
 80320c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80320cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80320d0:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80320d4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80320d8:	ecac 0a01 	vstmia	ip!, {s0}
 80320dc:	ed90 0a00 	vldr	s0, [r0]
 80320e0:	ee37 0a80 	vadd.f32	s0, s15, s0
 80320e4:	e79c      	b.n	8032020 <__kernel_rem_pio2f+0xec>
 80320e6:	d105      	bne.n	80320f4 <__kernel_rem_pio2f+0x1c0>
 80320e8:	1e60      	subs	r0, r4, #1
 80320ea:	a908      	add	r1, sp, #32
 80320ec:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 80320f0:	11f6      	asrs	r6, r6, #7
 80320f2:	e7c8      	b.n	8032086 <__kernel_rem_pio2f+0x152>
 80320f4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80320f8:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80320fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8032100:	da31      	bge.n	8032166 <__kernel_rem_pio2f+0x232>
 8032102:	2600      	movs	r6, #0
 8032104:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8032108:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803210c:	f040 8098 	bne.w	8032240 <__kernel_rem_pio2f+0x30c>
 8032110:	1e60      	subs	r0, r4, #1
 8032112:	2200      	movs	r2, #0
 8032114:	4550      	cmp	r0, sl
 8032116:	da4b      	bge.n	80321b0 <__kernel_rem_pio2f+0x27c>
 8032118:	2a00      	cmp	r2, #0
 803211a:	d065      	beq.n	80321e8 <__kernel_rem_pio2f+0x2b4>
 803211c:	3c01      	subs	r4, #1
 803211e:	ab08      	add	r3, sp, #32
 8032120:	3d08      	subs	r5, #8
 8032122:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8032126:	2b00      	cmp	r3, #0
 8032128:	d0f8      	beq.n	803211c <__kernel_rem_pio2f+0x1e8>
 803212a:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 803212e:	4628      	mov	r0, r5
 8032130:	f000 f974 	bl	803241c <scalbnf>
 8032134:	1c63      	adds	r3, r4, #1
 8032136:	aa44      	add	r2, sp, #272	@ 0x110
 8032138:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8032238 <__kernel_rem_pio2f+0x304>
 803213c:	0099      	lsls	r1, r3, #2
 803213e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8032142:	4623      	mov	r3, r4
 8032144:	2b00      	cmp	r3, #0
 8032146:	f280 80a9 	bge.w	803229c <__kernel_rem_pio2f+0x368>
 803214a:	4623      	mov	r3, r4
 803214c:	2b00      	cmp	r3, #0
 803214e:	f2c0 80c7 	blt.w	80322e0 <__kernel_rem_pio2f+0x3ac>
 8032152:	aa44      	add	r2, sp, #272	@ 0x110
 8032154:	f8df c0d8 	ldr.w	ip, [pc, #216]	@ 8032230 <__kernel_rem_pio2f+0x2fc>
 8032158:	eddf 7a38 	vldr	s15, [pc, #224]	@ 803223c <__kernel_rem_pio2f+0x308>
 803215c:	2000      	movs	r0, #0
 803215e:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8032162:	1ae2      	subs	r2, r4, r3
 8032164:	e0b1      	b.n	80322ca <__kernel_rem_pio2f+0x396>
 8032166:	2602      	movs	r6, #2
 8032168:	e78f      	b.n	803208a <__kernel_rem_pio2f+0x156>
 803216a:	f852 1b04 	ldr.w	r1, [r2], #4
 803216e:	b948      	cbnz	r0, 8032184 <__kernel_rem_pio2f+0x250>
 8032170:	b121      	cbz	r1, 803217c <__kernel_rem_pio2f+0x248>
 8032172:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8032176:	f842 1c04 	str.w	r1, [r2, #-4]
 803217a:	2101      	movs	r1, #1
 803217c:	f10e 0e01 	add.w	lr, lr, #1
 8032180:	4608      	mov	r0, r1
 8032182:	e787      	b.n	8032094 <__kernel_rem_pio2f+0x160>
 8032184:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8032188:	e7f5      	b.n	8032176 <__kernel_rem_pio2f+0x242>
 803218a:	f104 3cff 	add.w	ip, r4, #4294967295
 803218e:	aa08      	add	r2, sp, #32
 8032190:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8032194:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8032198:	a908      	add	r1, sp, #32
 803219a:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 803219e:	e781      	b.n	80320a4 <__kernel_rem_pio2f+0x170>
 80321a0:	f104 3cff 	add.w	ip, r4, #4294967295
 80321a4:	aa08      	add	r2, sp, #32
 80321a6:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80321aa:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80321ae:	e7f3      	b.n	8032198 <__kernel_rem_pio2f+0x264>
 80321b0:	a908      	add	r1, sp, #32
 80321b2:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80321b6:	3801      	subs	r0, #1
 80321b8:	430a      	orrs	r2, r1
 80321ba:	e7ab      	b.n	8032114 <__kernel_rem_pio2f+0x1e0>
 80321bc:	3201      	adds	r2, #1
 80321be:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 80321c2:	2e00      	cmp	r6, #0
 80321c4:	d0fa      	beq.n	80321bc <__kernel_rem_pio2f+0x288>
 80321c6:	9905      	ldr	r1, [sp, #20]
 80321c8:	18e6      	adds	r6, r4, r3
 80321ca:	f104 0c01 	add.w	ip, r4, #1
 80321ce:	4422      	add	r2, r4
 80321d0:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 80321d4:	eb0d 0001 	add.w	r0, sp, r1
 80321d8:	a91c      	add	r1, sp, #112	@ 0x70
 80321da:	384c      	subs	r0, #76	@ 0x4c
 80321dc:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 80321e0:	4562      	cmp	r2, ip
 80321e2:	da04      	bge.n	80321ee <__kernel_rem_pio2f+0x2ba>
 80321e4:	4614      	mov	r4, r2
 80321e6:	e70e      	b.n	8032006 <__kernel_rem_pio2f+0xd2>
 80321e8:	9804      	ldr	r0, [sp, #16]
 80321ea:	2201      	movs	r2, #1
 80321ec:	e7e7      	b.n	80321be <__kernel_rem_pio2f+0x28a>
 80321ee:	9903      	ldr	r1, [sp, #12]
 80321f0:	2400      	movs	r4, #0
 80321f2:	f8dd e004 	ldr.w	lr, [sp, #4]
 80321f6:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 80321fa:	ee07 1a90 	vmov	s15, r1
 80321fe:	9105      	str	r1, [sp, #20]
 8032200:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8032204:	ece6 7a01 	vstmia	r6!, {s15}
 8032208:	46b1      	mov	r9, r6
 803220a:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 803223c <__kernel_rem_pio2f+0x308>
 803220e:	455c      	cmp	r4, fp
 8032210:	dd04      	ble.n	803221c <__kernel_rem_pio2f+0x2e8>
 8032212:	f10c 0c01 	add.w	ip, ip, #1
 8032216:	ece0 7a01 	vstmia	r0!, {s15}
 803221a:	e7e1      	b.n	80321e0 <__kernel_rem_pio2f+0x2ac>
 803221c:	ecfe 6a01 	vldmia	lr!, {s13}
 8032220:	3401      	adds	r4, #1
 8032222:	ed39 7a01 	vldmdb	r9!, {s14}
 8032226:	eee6 7a87 	vfma.f32	s15, s13, s14
 803222a:	e7f0      	b.n	803220e <__kernel_rem_pio2f+0x2da>
 803222c:	08038678 	.word	0x08038678
 8032230:	0803864c 	.word	0x0803864c
 8032234:	43800000 	.word	0x43800000
 8032238:	3b800000 	.word	0x3b800000
 803223c:	00000000 	.word	0x00000000
 8032240:	9b02      	ldr	r3, [sp, #8]
 8032242:	eeb0 0a48 	vmov.f32	s0, s16
 8032246:	eba3 0008 	sub.w	r0, r3, r8
 803224a:	f000 f8e7 	bl	803241c <scalbnf>
 803224e:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8032234 <__kernel_rem_pio2f+0x300>
 8032252:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8032256:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803225a:	db19      	blt.n	8032290 <__kernel_rem_pio2f+0x35c>
 803225c:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8032238 <__kernel_rem_pio2f+0x304>
 8032260:	aa08      	add	r2, sp, #32
 8032262:	3508      	adds	r5, #8
 8032264:	ee60 7a27 	vmul.f32	s15, s0, s15
 8032268:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 803226c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8032270:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8032274:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8032278:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 803227c:	ee10 3a10 	vmov	r3, s0
 8032280:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8032284:	3401      	adds	r4, #1
 8032286:	ee17 3a90 	vmov	r3, s15
 803228a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 803228e:	e74c      	b.n	803212a <__kernel_rem_pio2f+0x1f6>
 8032290:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8032294:	aa08      	add	r2, sp, #32
 8032296:	ee10 3a10 	vmov	r3, s0
 803229a:	e7f6      	b.n	803228a <__kernel_rem_pio2f+0x356>
 803229c:	a808      	add	r0, sp, #32
 803229e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80322a2:	3b01      	subs	r3, #1
 80322a4:	ee07 0a90 	vmov	s15, r0
 80322a8:	9001      	str	r0, [sp, #4]
 80322aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80322ae:	ee67 7a80 	vmul.f32	s15, s15, s0
 80322b2:	ee20 0a07 	vmul.f32	s0, s0, s14
 80322b6:	ed62 7a01 	vstmdb	r2!, {s15}
 80322ba:	e743      	b.n	8032144 <__kernel_rem_pio2f+0x210>
 80322bc:	ecfc 6a01 	vldmia	ip!, {s13}
 80322c0:	3001      	adds	r0, #1
 80322c2:	ecb5 7a01 	vldmia	r5!, {s14}
 80322c6:	eee6 7a87 	vfma.f32	s15, s13, s14
 80322ca:	4550      	cmp	r0, sl
 80322cc:	dc01      	bgt.n	80322d2 <__kernel_rem_pio2f+0x39e>
 80322ce:	4282      	cmp	r2, r0
 80322d0:	daf4      	bge.n	80322bc <__kernel_rem_pio2f+0x388>
 80322d2:	a858      	add	r0, sp, #352	@ 0x160
 80322d4:	3b01      	subs	r3, #1
 80322d6:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80322da:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 80322de:	e735      	b.n	803214c <__kernel_rem_pio2f+0x218>
 80322e0:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80322e2:	2b02      	cmp	r3, #2
 80322e4:	dc09      	bgt.n	80322fa <__kernel_rem_pio2f+0x3c6>
 80322e6:	2b00      	cmp	r3, #0
 80322e8:	dc2b      	bgt.n	8032342 <__kernel_rem_pio2f+0x40e>
 80322ea:	d044      	beq.n	8032376 <__kernel_rem_pio2f+0x442>
 80322ec:	f009 0007 	and.w	r0, r9, #7
 80322f0:	b059      	add	sp, #356	@ 0x164
 80322f2:	ecbd 8b04 	vpop	{d8-d9}
 80322f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80322fa:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80322fc:	2b03      	cmp	r3, #3
 80322fe:	d1f5      	bne.n	80322ec <__kernel_rem_pio2f+0x3b8>
 8032300:	aa30      	add	r2, sp, #192	@ 0xc0
 8032302:	1f0b      	subs	r3, r1, #4
 8032304:	4620      	mov	r0, r4
 8032306:	4413      	add	r3, r2
 8032308:	461a      	mov	r2, r3
 803230a:	2800      	cmp	r0, #0
 803230c:	f1a2 0204 	sub.w	r2, r2, #4
 8032310:	dc52      	bgt.n	80323b8 <__kernel_rem_pio2f+0x484>
 8032312:	4622      	mov	r2, r4
 8032314:	2a01      	cmp	r2, #1
 8032316:	f1a3 0304 	sub.w	r3, r3, #4
 803231a:	dc5d      	bgt.n	80323d8 <__kernel_rem_pio2f+0x4a4>
 803231c:	ab30      	add	r3, sp, #192	@ 0xc0
 803231e:	ed5f 7a39 	vldr	s15, [pc, #-228]	@ 803223c <__kernel_rem_pio2f+0x308>
 8032322:	440b      	add	r3, r1
 8032324:	2c01      	cmp	r4, #1
 8032326:	dc67      	bgt.n	80323f8 <__kernel_rem_pio2f+0x4c4>
 8032328:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 803232c:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8032330:	2e00      	cmp	r6, #0
 8032332:	d167      	bne.n	8032404 <__kernel_rem_pio2f+0x4d0>
 8032334:	edc7 6a00 	vstr	s13, [r7]
 8032338:	ed87 7a01 	vstr	s14, [r7, #4]
 803233c:	edc7 7a02 	vstr	s15, [r7, #8]
 8032340:	e7d4      	b.n	80322ec <__kernel_rem_pio2f+0x3b8>
 8032342:	ab30      	add	r3, sp, #192	@ 0xc0
 8032344:	4622      	mov	r2, r4
 8032346:	ed1f 7a43 	vldr	s14, [pc, #-268]	@ 803223c <__kernel_rem_pio2f+0x308>
 803234a:	440b      	add	r3, r1
 803234c:	2a00      	cmp	r2, #0
 803234e:	da24      	bge.n	803239a <__kernel_rem_pio2f+0x466>
 8032350:	b34e      	cbz	r6, 80323a6 <__kernel_rem_pio2f+0x472>
 8032352:	eef1 7a47 	vneg.f32	s15, s14
 8032356:	edc7 7a00 	vstr	s15, [r7]
 803235a:	aa31      	add	r2, sp, #196	@ 0xc4
 803235c:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8032360:	2301      	movs	r3, #1
 8032362:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8032366:	429c      	cmp	r4, r3
 8032368:	da20      	bge.n	80323ac <__kernel_rem_pio2f+0x478>
 803236a:	b10e      	cbz	r6, 8032370 <__kernel_rem_pio2f+0x43c>
 803236c:	eef1 7a67 	vneg.f32	s15, s15
 8032370:	edc7 7a01 	vstr	s15, [r7, #4]
 8032374:	e7ba      	b.n	80322ec <__kernel_rem_pio2f+0x3b8>
 8032376:	ab30      	add	r3, sp, #192	@ 0xc0
 8032378:	ed5f 7a50 	vldr	s15, [pc, #-320]	@ 803223c <__kernel_rem_pio2f+0x308>
 803237c:	440b      	add	r3, r1
 803237e:	2c00      	cmp	r4, #0
 8032380:	da05      	bge.n	803238e <__kernel_rem_pio2f+0x45a>
 8032382:	b10e      	cbz	r6, 8032388 <__kernel_rem_pio2f+0x454>
 8032384:	eef1 7a67 	vneg.f32	s15, s15
 8032388:	edc7 7a00 	vstr	s15, [r7]
 803238c:	e7ae      	b.n	80322ec <__kernel_rem_pio2f+0x3b8>
 803238e:	ed33 7a01 	vldmdb	r3!, {s14}
 8032392:	3c01      	subs	r4, #1
 8032394:	ee77 7a87 	vadd.f32	s15, s15, s14
 8032398:	e7f1      	b.n	803237e <__kernel_rem_pio2f+0x44a>
 803239a:	ed73 7a01 	vldmdb	r3!, {s15}
 803239e:	3a01      	subs	r2, #1
 80323a0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80323a4:	e7d2      	b.n	803234c <__kernel_rem_pio2f+0x418>
 80323a6:	eef0 7a47 	vmov.f32	s15, s14
 80323aa:	e7d4      	b.n	8032356 <__kernel_rem_pio2f+0x422>
 80323ac:	ecb2 7a01 	vldmia	r2!, {s14}
 80323b0:	3301      	adds	r3, #1
 80323b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80323b6:	e7d6      	b.n	8032366 <__kernel_rem_pio2f+0x432>
 80323b8:	edd2 7a00 	vldr	s15, [r2]
 80323bc:	3801      	subs	r0, #1
 80323be:	edd2 6a01 	vldr	s13, [r2, #4]
 80323c2:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80323c6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80323ca:	ed82 7a00 	vstr	s14, [r2]
 80323ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80323d2:	edc2 7a01 	vstr	s15, [r2, #4]
 80323d6:	e798      	b.n	803230a <__kernel_rem_pio2f+0x3d6>
 80323d8:	edd3 7a00 	vldr	s15, [r3]
 80323dc:	3a01      	subs	r2, #1
 80323de:	edd3 6a01 	vldr	s13, [r3, #4]
 80323e2:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80323e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80323ea:	ed83 7a00 	vstr	s14, [r3]
 80323ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80323f2:	edc3 7a01 	vstr	s15, [r3, #4]
 80323f6:	e78d      	b.n	8032314 <__kernel_rem_pio2f+0x3e0>
 80323f8:	ed33 7a01 	vldmdb	r3!, {s14}
 80323fc:	3c01      	subs	r4, #1
 80323fe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8032402:	e78f      	b.n	8032324 <__kernel_rem_pio2f+0x3f0>
 8032404:	eef1 6a66 	vneg.f32	s13, s13
 8032408:	eeb1 7a47 	vneg.f32	s14, s14
 803240c:	eef1 7a67 	vneg.f32	s15, s15
 8032410:	edc7 6a00 	vstr	s13, [r7]
 8032414:	ed87 7a01 	vstr	s14, [r7, #4]
 8032418:	e790      	b.n	803233c <__kernel_rem_pio2f+0x408>
 803241a:	bf00      	nop

0803241c <scalbnf>:
 803241c:	ee10 3a10 	vmov	r3, s0
 8032420:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8032424:	d02a      	beq.n	803247c <scalbnf+0x60>
 8032426:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 803242a:	d302      	bcc.n	8032432 <scalbnf+0x16>
 803242c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8032430:	4770      	bx	lr
 8032432:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8032436:	d122      	bne.n	803247e <scalbnf+0x62>
 8032438:	4b23      	ldr	r3, [pc, #140]	@ (80324c8 <scalbnf+0xac>)
 803243a:	eddf 7a24 	vldr	s15, [pc, #144]	@ 80324cc <scalbnf+0xb0>
 803243e:	4298      	cmp	r0, r3
 8032440:	ee20 0a27 	vmul.f32	s0, s0, s15
 8032444:	db16      	blt.n	8032474 <scalbnf+0x58>
 8032446:	ee10 3a10 	vmov	r3, s0
 803244a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 803244e:	3a19      	subs	r2, #25
 8032450:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8032454:	4288      	cmp	r0, r1
 8032456:	dd14      	ble.n	8032482 <scalbnf+0x66>
 8032458:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 80324d0 <scalbnf+0xb4>
 803245c:	ee10 3a10 	vmov	r3, s0
 8032460:	eddf 6a1c 	vldr	s13, [pc, #112]	@ 80324d4 <scalbnf+0xb8>
 8032464:	eeb0 7a67 	vmov.f32	s14, s15
 8032468:	2b00      	cmp	r3, #0
 803246a:	fe67 7aa6 	vselge.f32	s15, s15, s13
 803246e:	ee27 0a87 	vmul.f32	s0, s15, s14
 8032472:	4770      	bx	lr
 8032474:	eddf 7a18 	vldr	s15, [pc, #96]	@ 80324d8 <scalbnf+0xbc>
 8032478:	ee27 0a80 	vmul.f32	s0, s15, s0
 803247c:	4770      	bx	lr
 803247e:	0dd2      	lsrs	r2, r2, #23
 8032480:	e7e6      	b.n	8032450 <scalbnf+0x34>
 8032482:	4410      	add	r0, r2
 8032484:	28fe      	cmp	r0, #254	@ 0xfe
 8032486:	dce7      	bgt.n	8032458 <scalbnf+0x3c>
 8032488:	2800      	cmp	r0, #0
 803248a:	dd06      	ble.n	803249a <scalbnf+0x7e>
 803248c:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8032490:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8032494:	ee00 3a10 	vmov	s0, r3
 8032498:	4770      	bx	lr
 803249a:	f110 0f16 	cmn.w	r0, #22
 803249e:	da09      	bge.n	80324b4 <scalbnf+0x98>
 80324a0:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 80324d8 <scalbnf+0xbc>
 80324a4:	ee10 3a10 	vmov	r3, s0
 80324a8:	eddf 6a0c 	vldr	s13, [pc, #48]	@ 80324dc <scalbnf+0xc0>
 80324ac:	eeb0 7a67 	vmov.f32	s14, s15
 80324b0:	2b00      	cmp	r3, #0
 80324b2:	e7da      	b.n	803246a <scalbnf+0x4e>
 80324b4:	3019      	adds	r0, #25
 80324b6:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80324ba:	ed9f 0a09 	vldr	s0, [pc, #36]	@ 80324e0 <scalbnf+0xc4>
 80324be:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80324c2:	ee07 3a90 	vmov	s15, r3
 80324c6:	e7d7      	b.n	8032478 <scalbnf+0x5c>
 80324c8:	ffff3cb0 	.word	0xffff3cb0
 80324cc:	4c000000 	.word	0x4c000000
 80324d0:	7149f2ca 	.word	0x7149f2ca
 80324d4:	f149f2ca 	.word	0xf149f2ca
 80324d8:	0da24260 	.word	0x0da24260
 80324dc:	8da24260 	.word	0x8da24260
 80324e0:	33000000 	.word	0x33000000

080324e4 <floorf>:
 80324e4:	febb 0a40 	vrintm.f32	s0, s0
 80324e8:	4770      	bx	lr

080324ea <abort>:
 80324ea:	2006      	movs	r0, #6
 80324ec:	b508      	push	{r3, lr}
 80324ee:	f000 fa4d 	bl	803298c <raise>
 80324f2:	2001      	movs	r0, #1
 80324f4:	f7ce fce2 	bl	8000ebc <_exit>

080324f8 <__assert_func>:
 80324f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80324fa:	4614      	mov	r4, r2
 80324fc:	461a      	mov	r2, r3
 80324fe:	4b09      	ldr	r3, [pc, #36]	@ (8032524 <__assert_func+0x2c>)
 8032500:	4605      	mov	r5, r0
 8032502:	681b      	ldr	r3, [r3, #0]
 8032504:	68d8      	ldr	r0, [r3, #12]
 8032506:	b954      	cbnz	r4, 803251e <__assert_func+0x26>
 8032508:	4b07      	ldr	r3, [pc, #28]	@ (8032528 <__assert_func+0x30>)
 803250a:	461c      	mov	r4, r3
 803250c:	9100      	str	r1, [sp, #0]
 803250e:	4907      	ldr	r1, [pc, #28]	@ (803252c <__assert_func+0x34>)
 8032510:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8032514:	462b      	mov	r3, r5
 8032516:	f000 f983 	bl	8032820 <fiprintf>
 803251a:	f7ff ffe6 	bl	80324ea <abort>
 803251e:	4b04      	ldr	r3, [pc, #16]	@ (8032530 <__assert_func+0x38>)
 8032520:	e7f4      	b.n	803250c <__assert_func+0x14>
 8032522:	bf00      	nop
 8032524:	20000254 	.word	0x20000254
 8032528:	080386bf 	.word	0x080386bf
 803252c:	08038691 	.word	0x08038691
 8032530:	08038684 	.word	0x08038684

08032534 <atexit>:
 8032534:	2300      	movs	r3, #0
 8032536:	4601      	mov	r1, r0
 8032538:	461a      	mov	r2, r3
 803253a:	4618      	mov	r0, r3
 803253c:	f000 bad2 	b.w	8032ae4 <__register_exitproc>

08032540 <malloc>:
 8032540:	4b02      	ldr	r3, [pc, #8]	@ (803254c <malloc+0xc>)
 8032542:	4601      	mov	r1, r0
 8032544:	6818      	ldr	r0, [r3, #0]
 8032546:	f000 b82d 	b.w	80325a4 <_malloc_r>
 803254a:	bf00      	nop
 803254c:	20000254 	.word	0x20000254

08032550 <free>:
 8032550:	4b02      	ldr	r3, [pc, #8]	@ (803255c <free+0xc>)
 8032552:	4601      	mov	r1, r0
 8032554:	6818      	ldr	r0, [r3, #0]
 8032556:	f000 bb23 	b.w	8032ba0 <_free_r>
 803255a:	bf00      	nop
 803255c:	20000254 	.word	0x20000254

08032560 <sbrk_aligned>:
 8032560:	b570      	push	{r4, r5, r6, lr}
 8032562:	4e0f      	ldr	r6, [pc, #60]	@ (80325a0 <sbrk_aligned+0x40>)
 8032564:	460c      	mov	r4, r1
 8032566:	4605      	mov	r5, r0
 8032568:	6831      	ldr	r1, [r6, #0]
 803256a:	b911      	cbnz	r1, 8032572 <sbrk_aligned+0x12>
 803256c:	f000 fa5e 	bl	8032a2c <_sbrk_r>
 8032570:	6030      	str	r0, [r6, #0]
 8032572:	4621      	mov	r1, r4
 8032574:	4628      	mov	r0, r5
 8032576:	f000 fa59 	bl	8032a2c <_sbrk_r>
 803257a:	1c43      	adds	r3, r0, #1
 803257c:	d103      	bne.n	8032586 <sbrk_aligned+0x26>
 803257e:	f04f 34ff 	mov.w	r4, #4294967295
 8032582:	4620      	mov	r0, r4
 8032584:	bd70      	pop	{r4, r5, r6, pc}
 8032586:	1cc4      	adds	r4, r0, #3
 8032588:	f024 0403 	bic.w	r4, r4, #3
 803258c:	42a0      	cmp	r0, r4
 803258e:	d0f8      	beq.n	8032582 <sbrk_aligned+0x22>
 8032590:	1a21      	subs	r1, r4, r0
 8032592:	4628      	mov	r0, r5
 8032594:	f000 fa4a 	bl	8032a2c <_sbrk_r>
 8032598:	3001      	adds	r0, #1
 803259a:	d1f2      	bne.n	8032582 <sbrk_aligned+0x22>
 803259c:	e7ef      	b.n	803257e <sbrk_aligned+0x1e>
 803259e:	bf00      	nop
 80325a0:	20083440 	.word	0x20083440

080325a4 <_malloc_r>:
 80325a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80325a8:	1ccd      	adds	r5, r1, #3
 80325aa:	4606      	mov	r6, r0
 80325ac:	f025 0503 	bic.w	r5, r5, #3
 80325b0:	3508      	adds	r5, #8
 80325b2:	2d0c      	cmp	r5, #12
 80325b4:	bf38      	it	cc
 80325b6:	250c      	movcc	r5, #12
 80325b8:	2d00      	cmp	r5, #0
 80325ba:	db01      	blt.n	80325c0 <_malloc_r+0x1c>
 80325bc:	42a9      	cmp	r1, r5
 80325be:	d904      	bls.n	80325ca <_malloc_r+0x26>
 80325c0:	230c      	movs	r3, #12
 80325c2:	6033      	str	r3, [r6, #0]
 80325c4:	2000      	movs	r0, #0
 80325c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80325ca:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80326a0 <_malloc_r+0xfc>
 80325ce:	f000 f869 	bl	80326a4 <__malloc_lock>
 80325d2:	f8d8 3000 	ldr.w	r3, [r8]
 80325d6:	461c      	mov	r4, r3
 80325d8:	bb44      	cbnz	r4, 803262c <_malloc_r+0x88>
 80325da:	4629      	mov	r1, r5
 80325dc:	4630      	mov	r0, r6
 80325de:	f7ff ffbf 	bl	8032560 <sbrk_aligned>
 80325e2:	1c43      	adds	r3, r0, #1
 80325e4:	4604      	mov	r4, r0
 80325e6:	d158      	bne.n	803269a <_malloc_r+0xf6>
 80325e8:	f8d8 4000 	ldr.w	r4, [r8]
 80325ec:	4627      	mov	r7, r4
 80325ee:	2f00      	cmp	r7, #0
 80325f0:	d143      	bne.n	803267a <_malloc_r+0xd6>
 80325f2:	2c00      	cmp	r4, #0
 80325f4:	d04b      	beq.n	803268e <_malloc_r+0xea>
 80325f6:	6823      	ldr	r3, [r4, #0]
 80325f8:	4639      	mov	r1, r7
 80325fa:	4630      	mov	r0, r6
 80325fc:	eb04 0903 	add.w	r9, r4, r3
 8032600:	f000 fa14 	bl	8032a2c <_sbrk_r>
 8032604:	4581      	cmp	r9, r0
 8032606:	d142      	bne.n	803268e <_malloc_r+0xea>
 8032608:	6821      	ldr	r1, [r4, #0]
 803260a:	4630      	mov	r0, r6
 803260c:	1a6d      	subs	r5, r5, r1
 803260e:	4629      	mov	r1, r5
 8032610:	f7ff ffa6 	bl	8032560 <sbrk_aligned>
 8032614:	3001      	adds	r0, #1
 8032616:	d03a      	beq.n	803268e <_malloc_r+0xea>
 8032618:	6823      	ldr	r3, [r4, #0]
 803261a:	442b      	add	r3, r5
 803261c:	6023      	str	r3, [r4, #0]
 803261e:	f8d8 3000 	ldr.w	r3, [r8]
 8032622:	685a      	ldr	r2, [r3, #4]
 8032624:	bb62      	cbnz	r2, 8032680 <_malloc_r+0xdc>
 8032626:	f8c8 7000 	str.w	r7, [r8]
 803262a:	e00f      	b.n	803264c <_malloc_r+0xa8>
 803262c:	6822      	ldr	r2, [r4, #0]
 803262e:	1b52      	subs	r2, r2, r5
 8032630:	d420      	bmi.n	8032674 <_malloc_r+0xd0>
 8032632:	2a0b      	cmp	r2, #11
 8032634:	d917      	bls.n	8032666 <_malloc_r+0xc2>
 8032636:	1961      	adds	r1, r4, r5
 8032638:	42a3      	cmp	r3, r4
 803263a:	6025      	str	r5, [r4, #0]
 803263c:	bf18      	it	ne
 803263e:	6059      	strne	r1, [r3, #4]
 8032640:	6863      	ldr	r3, [r4, #4]
 8032642:	bf08      	it	eq
 8032644:	f8c8 1000 	streq.w	r1, [r8]
 8032648:	5162      	str	r2, [r4, r5]
 803264a:	604b      	str	r3, [r1, #4]
 803264c:	4630      	mov	r0, r6
 803264e:	f000 f82f 	bl	80326b0 <__malloc_unlock>
 8032652:	f104 000b 	add.w	r0, r4, #11
 8032656:	1d23      	adds	r3, r4, #4
 8032658:	f020 0007 	bic.w	r0, r0, #7
 803265c:	1ac2      	subs	r2, r0, r3
 803265e:	bf1c      	itt	ne
 8032660:	1a1b      	subne	r3, r3, r0
 8032662:	50a3      	strne	r3, [r4, r2]
 8032664:	e7af      	b.n	80325c6 <_malloc_r+0x22>
 8032666:	6862      	ldr	r2, [r4, #4]
 8032668:	42a3      	cmp	r3, r4
 803266a:	bf0c      	ite	eq
 803266c:	f8c8 2000 	streq.w	r2, [r8]
 8032670:	605a      	strne	r2, [r3, #4]
 8032672:	e7eb      	b.n	803264c <_malloc_r+0xa8>
 8032674:	4623      	mov	r3, r4
 8032676:	6864      	ldr	r4, [r4, #4]
 8032678:	e7ae      	b.n	80325d8 <_malloc_r+0x34>
 803267a:	463c      	mov	r4, r7
 803267c:	687f      	ldr	r7, [r7, #4]
 803267e:	e7b6      	b.n	80325ee <_malloc_r+0x4a>
 8032680:	461a      	mov	r2, r3
 8032682:	685b      	ldr	r3, [r3, #4]
 8032684:	42a3      	cmp	r3, r4
 8032686:	d1fb      	bne.n	8032680 <_malloc_r+0xdc>
 8032688:	2300      	movs	r3, #0
 803268a:	6053      	str	r3, [r2, #4]
 803268c:	e7de      	b.n	803264c <_malloc_r+0xa8>
 803268e:	230c      	movs	r3, #12
 8032690:	4630      	mov	r0, r6
 8032692:	6033      	str	r3, [r6, #0]
 8032694:	f000 f80c 	bl	80326b0 <__malloc_unlock>
 8032698:	e794      	b.n	80325c4 <_malloc_r+0x20>
 803269a:	6005      	str	r5, [r0, #0]
 803269c:	e7d6      	b.n	803264c <_malloc_r+0xa8>
 803269e:	bf00      	nop
 80326a0:	20083444 	.word	0x20083444

080326a4 <__malloc_lock>:
 80326a4:	4801      	ldr	r0, [pc, #4]	@ (80326ac <__malloc_lock+0x8>)
 80326a6:	f000 ba0e 	b.w	8032ac6 <__retarget_lock_acquire_recursive>
 80326aa:	bf00      	nop
 80326ac:	20083588 	.word	0x20083588

080326b0 <__malloc_unlock>:
 80326b0:	4801      	ldr	r0, [pc, #4]	@ (80326b8 <__malloc_unlock+0x8>)
 80326b2:	f000 ba09 	b.w	8032ac8 <__retarget_lock_release_recursive>
 80326b6:	bf00      	nop
 80326b8:	20083588 	.word	0x20083588

080326bc <__cxa_atexit>:
 80326bc:	b510      	push	{r4, lr}
 80326be:	4604      	mov	r4, r0
 80326c0:	4804      	ldr	r0, [pc, #16]	@ (80326d4 <__cxa_atexit+0x18>)
 80326c2:	4613      	mov	r3, r2
 80326c4:	b120      	cbz	r0, 80326d0 <__cxa_atexit+0x14>
 80326c6:	460a      	mov	r2, r1
 80326c8:	2002      	movs	r0, #2
 80326ca:	4621      	mov	r1, r4
 80326cc:	f000 fa0a 	bl	8032ae4 <__register_exitproc>
 80326d0:	bd10      	pop	{r4, pc}
 80326d2:	bf00      	nop
 80326d4:	08032ae5 	.word	0x08032ae5

080326d8 <std>:
 80326d8:	2300      	movs	r3, #0
 80326da:	b510      	push	{r4, lr}
 80326dc:	4604      	mov	r4, r0
 80326de:	6083      	str	r3, [r0, #8]
 80326e0:	8181      	strh	r1, [r0, #12]
 80326e2:	4619      	mov	r1, r3
 80326e4:	6643      	str	r3, [r0, #100]	@ 0x64
 80326e6:	81c2      	strh	r2, [r0, #14]
 80326e8:	2208      	movs	r2, #8
 80326ea:	6183      	str	r3, [r0, #24]
 80326ec:	e9c0 3300 	strd	r3, r3, [r0]
 80326f0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80326f4:	305c      	adds	r0, #92	@ 0x5c
 80326f6:	f000 f906 	bl	8032906 <memset>
 80326fa:	4b0d      	ldr	r3, [pc, #52]	@ (8032730 <std+0x58>)
 80326fc:	6224      	str	r4, [r4, #32]
 80326fe:	6263      	str	r3, [r4, #36]	@ 0x24
 8032700:	4b0c      	ldr	r3, [pc, #48]	@ (8032734 <std+0x5c>)
 8032702:	62a3      	str	r3, [r4, #40]	@ 0x28
 8032704:	4b0c      	ldr	r3, [pc, #48]	@ (8032738 <std+0x60>)
 8032706:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8032708:	4b0c      	ldr	r3, [pc, #48]	@ (803273c <std+0x64>)
 803270a:	6323      	str	r3, [r4, #48]	@ 0x30
 803270c:	4b0c      	ldr	r3, [pc, #48]	@ (8032740 <std+0x68>)
 803270e:	429c      	cmp	r4, r3
 8032710:	d006      	beq.n	8032720 <std+0x48>
 8032712:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8032716:	4294      	cmp	r4, r2
 8032718:	d002      	beq.n	8032720 <std+0x48>
 803271a:	33d0      	adds	r3, #208	@ 0xd0
 803271c:	429c      	cmp	r4, r3
 803271e:	d105      	bne.n	803272c <std+0x54>
 8032720:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8032724:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032728:	f000 b9cc 	b.w	8032ac4 <__retarget_lock_init_recursive>
 803272c:	bd10      	pop	{r4, pc}
 803272e:	bf00      	nop
 8032730:	08032881 	.word	0x08032881
 8032734:	080328a3 	.word	0x080328a3
 8032738:	080328db 	.word	0x080328db
 803273c:	080328ff 	.word	0x080328ff
 8032740:	20083448 	.word	0x20083448

08032744 <stdio_exit_handler>:
 8032744:	4a02      	ldr	r2, [pc, #8]	@ (8032750 <stdio_exit_handler+0xc>)
 8032746:	4903      	ldr	r1, [pc, #12]	@ (8032754 <stdio_exit_handler+0x10>)
 8032748:	4803      	ldr	r0, [pc, #12]	@ (8032758 <stdio_exit_handler+0x14>)
 803274a:	f000 b87b 	b.w	8032844 <_fwalk_sglue>
 803274e:	bf00      	nop
 8032750:	20000248 	.word	0x20000248
 8032754:	080332e5 	.word	0x080332e5
 8032758:	20000258 	.word	0x20000258

0803275c <cleanup_stdio>:
 803275c:	6841      	ldr	r1, [r0, #4]
 803275e:	4b0c      	ldr	r3, [pc, #48]	@ (8032790 <cleanup_stdio+0x34>)
 8032760:	4299      	cmp	r1, r3
 8032762:	b510      	push	{r4, lr}
 8032764:	4604      	mov	r4, r0
 8032766:	d001      	beq.n	803276c <cleanup_stdio+0x10>
 8032768:	f000 fdbc 	bl	80332e4 <_fflush_r>
 803276c:	68a1      	ldr	r1, [r4, #8]
 803276e:	4b09      	ldr	r3, [pc, #36]	@ (8032794 <cleanup_stdio+0x38>)
 8032770:	4299      	cmp	r1, r3
 8032772:	d002      	beq.n	803277a <cleanup_stdio+0x1e>
 8032774:	4620      	mov	r0, r4
 8032776:	f000 fdb5 	bl	80332e4 <_fflush_r>
 803277a:	68e1      	ldr	r1, [r4, #12]
 803277c:	4b06      	ldr	r3, [pc, #24]	@ (8032798 <cleanup_stdio+0x3c>)
 803277e:	4299      	cmp	r1, r3
 8032780:	d004      	beq.n	803278c <cleanup_stdio+0x30>
 8032782:	4620      	mov	r0, r4
 8032784:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032788:	f000 bdac 	b.w	80332e4 <_fflush_r>
 803278c:	bd10      	pop	{r4, pc}
 803278e:	bf00      	nop
 8032790:	20083448 	.word	0x20083448
 8032794:	200834b0 	.word	0x200834b0
 8032798:	20083518 	.word	0x20083518

0803279c <global_stdio_init.part.0>:
 803279c:	b510      	push	{r4, lr}
 803279e:	4b0b      	ldr	r3, [pc, #44]	@ (80327cc <global_stdio_init.part.0+0x30>)
 80327a0:	2104      	movs	r1, #4
 80327a2:	4c0b      	ldr	r4, [pc, #44]	@ (80327d0 <global_stdio_init.part.0+0x34>)
 80327a4:	4a0b      	ldr	r2, [pc, #44]	@ (80327d4 <global_stdio_init.part.0+0x38>)
 80327a6:	4620      	mov	r0, r4
 80327a8:	601a      	str	r2, [r3, #0]
 80327aa:	2200      	movs	r2, #0
 80327ac:	f7ff ff94 	bl	80326d8 <std>
 80327b0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80327b4:	2201      	movs	r2, #1
 80327b6:	2109      	movs	r1, #9
 80327b8:	f7ff ff8e 	bl	80326d8 <std>
 80327bc:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80327c0:	2202      	movs	r2, #2
 80327c2:	2112      	movs	r1, #18
 80327c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80327c8:	f7ff bf86 	b.w	80326d8 <std>
 80327cc:	20083580 	.word	0x20083580
 80327d0:	20083448 	.word	0x20083448
 80327d4:	08032745 	.word	0x08032745

080327d8 <__sfp_lock_acquire>:
 80327d8:	4801      	ldr	r0, [pc, #4]	@ (80327e0 <__sfp_lock_acquire+0x8>)
 80327da:	f000 b974 	b.w	8032ac6 <__retarget_lock_acquire_recursive>
 80327de:	bf00      	nop
 80327e0:	2008358a 	.word	0x2008358a

080327e4 <__sfp_lock_release>:
 80327e4:	4801      	ldr	r0, [pc, #4]	@ (80327ec <__sfp_lock_release+0x8>)
 80327e6:	f000 b96f 	b.w	8032ac8 <__retarget_lock_release_recursive>
 80327ea:	bf00      	nop
 80327ec:	2008358a 	.word	0x2008358a

080327f0 <__sinit>:
 80327f0:	b510      	push	{r4, lr}
 80327f2:	4604      	mov	r4, r0
 80327f4:	f7ff fff0 	bl	80327d8 <__sfp_lock_acquire>
 80327f8:	6a23      	ldr	r3, [r4, #32]
 80327fa:	b11b      	cbz	r3, 8032804 <__sinit+0x14>
 80327fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8032800:	f7ff bff0 	b.w	80327e4 <__sfp_lock_release>
 8032804:	4b04      	ldr	r3, [pc, #16]	@ (8032818 <__sinit+0x28>)
 8032806:	6223      	str	r3, [r4, #32]
 8032808:	4b04      	ldr	r3, [pc, #16]	@ (803281c <__sinit+0x2c>)
 803280a:	681b      	ldr	r3, [r3, #0]
 803280c:	2b00      	cmp	r3, #0
 803280e:	d1f5      	bne.n	80327fc <__sinit+0xc>
 8032810:	f7ff ffc4 	bl	803279c <global_stdio_init.part.0>
 8032814:	e7f2      	b.n	80327fc <__sinit+0xc>
 8032816:	bf00      	nop
 8032818:	0803275d 	.word	0x0803275d
 803281c:	20083580 	.word	0x20083580

08032820 <fiprintf>:
 8032820:	b40e      	push	{r1, r2, r3}
 8032822:	b503      	push	{r0, r1, lr}
 8032824:	ab03      	add	r3, sp, #12
 8032826:	4601      	mov	r1, r0
 8032828:	4805      	ldr	r0, [pc, #20]	@ (8032840 <fiprintf+0x20>)
 803282a:	f853 2b04 	ldr.w	r2, [r3], #4
 803282e:	6800      	ldr	r0, [r0, #0]
 8032830:	9301      	str	r3, [sp, #4]
 8032832:	f000 fa29 	bl	8032c88 <_vfiprintf_r>
 8032836:	b002      	add	sp, #8
 8032838:	f85d eb04 	ldr.w	lr, [sp], #4
 803283c:	b003      	add	sp, #12
 803283e:	4770      	bx	lr
 8032840:	20000254 	.word	0x20000254

08032844 <_fwalk_sglue>:
 8032844:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032848:	4607      	mov	r7, r0
 803284a:	4688      	mov	r8, r1
 803284c:	4614      	mov	r4, r2
 803284e:	2600      	movs	r6, #0
 8032850:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8032854:	f1b9 0901 	subs.w	r9, r9, #1
 8032858:	d505      	bpl.n	8032866 <_fwalk_sglue+0x22>
 803285a:	6824      	ldr	r4, [r4, #0]
 803285c:	2c00      	cmp	r4, #0
 803285e:	d1f7      	bne.n	8032850 <_fwalk_sglue+0xc>
 8032860:	4630      	mov	r0, r6
 8032862:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8032866:	89ab      	ldrh	r3, [r5, #12]
 8032868:	2b01      	cmp	r3, #1
 803286a:	d907      	bls.n	803287c <_fwalk_sglue+0x38>
 803286c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8032870:	3301      	adds	r3, #1
 8032872:	d003      	beq.n	803287c <_fwalk_sglue+0x38>
 8032874:	4629      	mov	r1, r5
 8032876:	4638      	mov	r0, r7
 8032878:	47c0      	blx	r8
 803287a:	4306      	orrs	r6, r0
 803287c:	3568      	adds	r5, #104	@ 0x68
 803287e:	e7e9      	b.n	8032854 <_fwalk_sglue+0x10>

08032880 <__sread>:
 8032880:	b510      	push	{r4, lr}
 8032882:	460c      	mov	r4, r1
 8032884:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8032888:	f000 f8aa 	bl	80329e0 <_read_r>
 803288c:	2800      	cmp	r0, #0
 803288e:	bfab      	itete	ge
 8032890:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8032892:	89a3      	ldrhlt	r3, [r4, #12]
 8032894:	181b      	addge	r3, r3, r0
 8032896:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 803289a:	bfac      	ite	ge
 803289c:	6563      	strge	r3, [r4, #84]	@ 0x54
 803289e:	81a3      	strhlt	r3, [r4, #12]
 80328a0:	bd10      	pop	{r4, pc}

080328a2 <__swrite>:
 80328a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80328a6:	461f      	mov	r7, r3
 80328a8:	898b      	ldrh	r3, [r1, #12]
 80328aa:	4605      	mov	r5, r0
 80328ac:	460c      	mov	r4, r1
 80328ae:	05db      	lsls	r3, r3, #23
 80328b0:	4616      	mov	r6, r2
 80328b2:	d505      	bpl.n	80328c0 <__swrite+0x1e>
 80328b4:	2302      	movs	r3, #2
 80328b6:	2200      	movs	r2, #0
 80328b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80328bc:	f000 f87e 	bl	80329bc <_lseek_r>
 80328c0:	89a3      	ldrh	r3, [r4, #12]
 80328c2:	4632      	mov	r2, r6
 80328c4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80328c8:	4628      	mov	r0, r5
 80328ca:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80328ce:	81a3      	strh	r3, [r4, #12]
 80328d0:	463b      	mov	r3, r7
 80328d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80328d6:	f000 b8b9 	b.w	8032a4c <_write_r>

080328da <__sseek>:
 80328da:	b510      	push	{r4, lr}
 80328dc:	460c      	mov	r4, r1
 80328de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80328e2:	f000 f86b 	bl	80329bc <_lseek_r>
 80328e6:	1c43      	adds	r3, r0, #1
 80328e8:	89a3      	ldrh	r3, [r4, #12]
 80328ea:	bf15      	itete	ne
 80328ec:	6560      	strne	r0, [r4, #84]	@ 0x54
 80328ee:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80328f2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80328f6:	81a3      	strheq	r3, [r4, #12]
 80328f8:	bf18      	it	ne
 80328fa:	81a3      	strhne	r3, [r4, #12]
 80328fc:	bd10      	pop	{r4, pc}

080328fe <__sclose>:
 80328fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8032902:	f000 b84b 	b.w	803299c <_close_r>

08032906 <memset>:
 8032906:	4402      	add	r2, r0
 8032908:	4603      	mov	r3, r0
 803290a:	4293      	cmp	r3, r2
 803290c:	d100      	bne.n	8032910 <memset+0xa>
 803290e:	4770      	bx	lr
 8032910:	f803 1b01 	strb.w	r1, [r3], #1
 8032914:	e7f9      	b.n	803290a <memset+0x4>

08032916 <strncmp>:
 8032916:	b510      	push	{r4, lr}
 8032918:	b16a      	cbz	r2, 8032936 <strncmp+0x20>
 803291a:	3901      	subs	r1, #1
 803291c:	1884      	adds	r4, r0, r2
 803291e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8032922:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8032926:	429a      	cmp	r2, r3
 8032928:	d103      	bne.n	8032932 <strncmp+0x1c>
 803292a:	42a0      	cmp	r0, r4
 803292c:	d001      	beq.n	8032932 <strncmp+0x1c>
 803292e:	2a00      	cmp	r2, #0
 8032930:	d1f5      	bne.n	803291e <strncmp+0x8>
 8032932:	1ad0      	subs	r0, r2, r3
 8032934:	bd10      	pop	{r4, pc}
 8032936:	4610      	mov	r0, r2
 8032938:	e7fc      	b.n	8032934 <strncmp+0x1e>

0803293a <_raise_r>:
 803293a:	291f      	cmp	r1, #31
 803293c:	b538      	push	{r3, r4, r5, lr}
 803293e:	4605      	mov	r5, r0
 8032940:	460c      	mov	r4, r1
 8032942:	d904      	bls.n	803294e <_raise_r+0x14>
 8032944:	2316      	movs	r3, #22
 8032946:	6003      	str	r3, [r0, #0]
 8032948:	f04f 30ff 	mov.w	r0, #4294967295
 803294c:	bd38      	pop	{r3, r4, r5, pc}
 803294e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8032950:	b112      	cbz	r2, 8032958 <_raise_r+0x1e>
 8032952:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8032956:	b94b      	cbnz	r3, 803296c <_raise_r+0x32>
 8032958:	4628      	mov	r0, r5
 803295a:	f000 f865 	bl	8032a28 <_getpid_r>
 803295e:	4622      	mov	r2, r4
 8032960:	4601      	mov	r1, r0
 8032962:	4628      	mov	r0, r5
 8032964:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8032968:	f000 b84c 	b.w	8032a04 <_kill_r>
 803296c:	2b01      	cmp	r3, #1
 803296e:	d00a      	beq.n	8032986 <_raise_r+0x4c>
 8032970:	1c59      	adds	r1, r3, #1
 8032972:	d103      	bne.n	803297c <_raise_r+0x42>
 8032974:	2316      	movs	r3, #22
 8032976:	6003      	str	r3, [r0, #0]
 8032978:	2001      	movs	r0, #1
 803297a:	e7e7      	b.n	803294c <_raise_r+0x12>
 803297c:	2100      	movs	r1, #0
 803297e:	4620      	mov	r0, r4
 8032980:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8032984:	4798      	blx	r3
 8032986:	2000      	movs	r0, #0
 8032988:	e7e0      	b.n	803294c <_raise_r+0x12>
	...

0803298c <raise>:
 803298c:	4b02      	ldr	r3, [pc, #8]	@ (8032998 <raise+0xc>)
 803298e:	4601      	mov	r1, r0
 8032990:	6818      	ldr	r0, [r3, #0]
 8032992:	f7ff bfd2 	b.w	803293a <_raise_r>
 8032996:	bf00      	nop
 8032998:	20000254 	.word	0x20000254

0803299c <_close_r>:
 803299c:	b538      	push	{r3, r4, r5, lr}
 803299e:	2300      	movs	r3, #0
 80329a0:	4d05      	ldr	r5, [pc, #20]	@ (80329b8 <_close_r+0x1c>)
 80329a2:	4604      	mov	r4, r0
 80329a4:	4608      	mov	r0, r1
 80329a6:	602b      	str	r3, [r5, #0]
 80329a8:	f7ce faaa 	bl	8000f00 <_close>
 80329ac:	1c43      	adds	r3, r0, #1
 80329ae:	d102      	bne.n	80329b6 <_close_r+0x1a>
 80329b0:	682b      	ldr	r3, [r5, #0]
 80329b2:	b103      	cbz	r3, 80329b6 <_close_r+0x1a>
 80329b4:	6023      	str	r3, [r4, #0]
 80329b6:	bd38      	pop	{r3, r4, r5, pc}
 80329b8:	20083584 	.word	0x20083584

080329bc <_lseek_r>:
 80329bc:	b538      	push	{r3, r4, r5, lr}
 80329be:	4604      	mov	r4, r0
 80329c0:	4d06      	ldr	r5, [pc, #24]	@ (80329dc <_lseek_r+0x20>)
 80329c2:	4608      	mov	r0, r1
 80329c4:	4611      	mov	r1, r2
 80329c6:	2200      	movs	r2, #0
 80329c8:	602a      	str	r2, [r5, #0]
 80329ca:	461a      	mov	r2, r3
 80329cc:	f7ce faa2 	bl	8000f14 <_lseek>
 80329d0:	1c43      	adds	r3, r0, #1
 80329d2:	d102      	bne.n	80329da <_lseek_r+0x1e>
 80329d4:	682b      	ldr	r3, [r5, #0]
 80329d6:	b103      	cbz	r3, 80329da <_lseek_r+0x1e>
 80329d8:	6023      	str	r3, [r4, #0]
 80329da:	bd38      	pop	{r3, r4, r5, pc}
 80329dc:	20083584 	.word	0x20083584

080329e0 <_read_r>:
 80329e0:	b538      	push	{r3, r4, r5, lr}
 80329e2:	4604      	mov	r4, r0
 80329e4:	4d06      	ldr	r5, [pc, #24]	@ (8032a00 <_read_r+0x20>)
 80329e6:	4608      	mov	r0, r1
 80329e8:	4611      	mov	r1, r2
 80329ea:	2200      	movs	r2, #0
 80329ec:	602a      	str	r2, [r5, #0]
 80329ee:	461a      	mov	r2, r3
 80329f0:	f7ce fa6a 	bl	8000ec8 <_read>
 80329f4:	1c43      	adds	r3, r0, #1
 80329f6:	d102      	bne.n	80329fe <_read_r+0x1e>
 80329f8:	682b      	ldr	r3, [r5, #0]
 80329fa:	b103      	cbz	r3, 80329fe <_read_r+0x1e>
 80329fc:	6023      	str	r3, [r4, #0]
 80329fe:	bd38      	pop	{r3, r4, r5, pc}
 8032a00:	20083584 	.word	0x20083584

08032a04 <_kill_r>:
 8032a04:	b538      	push	{r3, r4, r5, lr}
 8032a06:	2300      	movs	r3, #0
 8032a08:	4d06      	ldr	r5, [pc, #24]	@ (8032a24 <_kill_r+0x20>)
 8032a0a:	4604      	mov	r4, r0
 8032a0c:	4608      	mov	r0, r1
 8032a0e:	4611      	mov	r1, r2
 8032a10:	602b      	str	r3, [r5, #0]
 8032a12:	f7ce fa4b 	bl	8000eac <_kill>
 8032a16:	1c43      	adds	r3, r0, #1
 8032a18:	d102      	bne.n	8032a20 <_kill_r+0x1c>
 8032a1a:	682b      	ldr	r3, [r5, #0]
 8032a1c:	b103      	cbz	r3, 8032a20 <_kill_r+0x1c>
 8032a1e:	6023      	str	r3, [r4, #0]
 8032a20:	bd38      	pop	{r3, r4, r5, pc}
 8032a22:	bf00      	nop
 8032a24:	20083584 	.word	0x20083584

08032a28 <_getpid_r>:
 8032a28:	f7ce ba3e 	b.w	8000ea8 <_getpid>

08032a2c <_sbrk_r>:
 8032a2c:	b538      	push	{r3, r4, r5, lr}
 8032a2e:	2300      	movs	r3, #0
 8032a30:	4d05      	ldr	r5, [pc, #20]	@ (8032a48 <_sbrk_r+0x1c>)
 8032a32:	4604      	mov	r4, r0
 8032a34:	4608      	mov	r0, r1
 8032a36:	602b      	str	r3, [r5, #0]
 8032a38:	f7ce fa6e 	bl	8000f18 <_sbrk>
 8032a3c:	1c43      	adds	r3, r0, #1
 8032a3e:	d102      	bne.n	8032a46 <_sbrk_r+0x1a>
 8032a40:	682b      	ldr	r3, [r5, #0]
 8032a42:	b103      	cbz	r3, 8032a46 <_sbrk_r+0x1a>
 8032a44:	6023      	str	r3, [r4, #0]
 8032a46:	bd38      	pop	{r3, r4, r5, pc}
 8032a48:	20083584 	.word	0x20083584

08032a4c <_write_r>:
 8032a4c:	b538      	push	{r3, r4, r5, lr}
 8032a4e:	4604      	mov	r4, r0
 8032a50:	4d06      	ldr	r5, [pc, #24]	@ (8032a6c <_write_r+0x20>)
 8032a52:	4608      	mov	r0, r1
 8032a54:	4611      	mov	r1, r2
 8032a56:	2200      	movs	r2, #0
 8032a58:	602a      	str	r2, [r5, #0]
 8032a5a:	461a      	mov	r2, r3
 8032a5c:	f7ce fa42 	bl	8000ee4 <_write>
 8032a60:	1c43      	adds	r3, r0, #1
 8032a62:	d102      	bne.n	8032a6a <_write_r+0x1e>
 8032a64:	682b      	ldr	r3, [r5, #0]
 8032a66:	b103      	cbz	r3, 8032a6a <_write_r+0x1e>
 8032a68:	6023      	str	r3, [r4, #0]
 8032a6a:	bd38      	pop	{r3, r4, r5, pc}
 8032a6c:	20083584 	.word	0x20083584

08032a70 <__errno>:
 8032a70:	4b01      	ldr	r3, [pc, #4]	@ (8032a78 <__errno+0x8>)
 8032a72:	6818      	ldr	r0, [r3, #0]
 8032a74:	4770      	bx	lr
 8032a76:	bf00      	nop
 8032a78:	20000254 	.word	0x20000254

08032a7c <__libc_init_array>:
 8032a7c:	b570      	push	{r4, r5, r6, lr}
 8032a7e:	4d0d      	ldr	r5, [pc, #52]	@ (8032ab4 <__libc_init_array+0x38>)
 8032a80:	2600      	movs	r6, #0
 8032a82:	4c0d      	ldr	r4, [pc, #52]	@ (8032ab8 <__libc_init_array+0x3c>)
 8032a84:	1b64      	subs	r4, r4, r5
 8032a86:	10a4      	asrs	r4, r4, #2
 8032a88:	42a6      	cmp	r6, r4
 8032a8a:	d109      	bne.n	8032aa0 <__libc_init_array+0x24>
 8032a8c:	4d0b      	ldr	r5, [pc, #44]	@ (8032abc <__libc_init_array+0x40>)
 8032a8e:	2600      	movs	r6, #0
 8032a90:	4c0b      	ldr	r4, [pc, #44]	@ (8032ac0 <__libc_init_array+0x44>)
 8032a92:	f000 fd75 	bl	8033580 <_init>
 8032a96:	1b64      	subs	r4, r4, r5
 8032a98:	10a4      	asrs	r4, r4, #2
 8032a9a:	42a6      	cmp	r6, r4
 8032a9c:	d105      	bne.n	8032aaa <__libc_init_array+0x2e>
 8032a9e:	bd70      	pop	{r4, r5, r6, pc}
 8032aa0:	f855 3b04 	ldr.w	r3, [r5], #4
 8032aa4:	3601      	adds	r6, #1
 8032aa6:	4798      	blx	r3
 8032aa8:	e7ee      	b.n	8032a88 <__libc_init_array+0xc>
 8032aaa:	f855 3b04 	ldr.w	r3, [r5], #4
 8032aae:	3601      	adds	r6, #1
 8032ab0:	4798      	blx	r3
 8032ab2:	e7f2      	b.n	8032a9a <__libc_init_array+0x1e>
 8032ab4:	080388c8 	.word	0x080388c8
 8032ab8:	080388c8 	.word	0x080388c8
 8032abc:	080388c8 	.word	0x080388c8
 8032ac0:	080388e8 	.word	0x080388e8

08032ac4 <__retarget_lock_init_recursive>:
 8032ac4:	4770      	bx	lr

08032ac6 <__retarget_lock_acquire_recursive>:
 8032ac6:	4770      	bx	lr

08032ac8 <__retarget_lock_release_recursive>:
 8032ac8:	4770      	bx	lr

08032aca <memcpy>:
 8032aca:	440a      	add	r2, r1
 8032acc:	1e43      	subs	r3, r0, #1
 8032ace:	4291      	cmp	r1, r2
 8032ad0:	d100      	bne.n	8032ad4 <memcpy+0xa>
 8032ad2:	4770      	bx	lr
 8032ad4:	b510      	push	{r4, lr}
 8032ad6:	f811 4b01 	ldrb.w	r4, [r1], #1
 8032ada:	4291      	cmp	r1, r2
 8032adc:	f803 4f01 	strb.w	r4, [r3, #1]!
 8032ae0:	d1f9      	bne.n	8032ad6 <memcpy+0xc>
 8032ae2:	bd10      	pop	{r4, pc}

08032ae4 <__register_exitproc>:
 8032ae4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8032ae8:	4d28      	ldr	r5, [pc, #160]	@ (8032b8c <__register_exitproc+0xa8>)
 8032aea:	4607      	mov	r7, r0
 8032aec:	4691      	mov	r9, r2
 8032aee:	460e      	mov	r6, r1
 8032af0:	6828      	ldr	r0, [r5, #0]
 8032af2:	4698      	mov	r8, r3
 8032af4:	f7ff ffe7 	bl	8032ac6 <__retarget_lock_acquire_recursive>
 8032af8:	4a25      	ldr	r2, [pc, #148]	@ (8032b90 <__register_exitproc+0xac>)
 8032afa:	6814      	ldr	r4, [r2, #0]
 8032afc:	b93c      	cbnz	r4, 8032b0e <__register_exitproc+0x2a>
 8032afe:	4b25      	ldr	r3, [pc, #148]	@ (8032b94 <__register_exitproc+0xb0>)
 8032b00:	6013      	str	r3, [r2, #0]
 8032b02:	4a25      	ldr	r2, [pc, #148]	@ (8032b98 <__register_exitproc+0xb4>)
 8032b04:	b112      	cbz	r2, 8032b0c <__register_exitproc+0x28>
 8032b06:	6812      	ldr	r2, [r2, #0]
 8032b08:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8032b0c:	4c21      	ldr	r4, [pc, #132]	@ (8032b94 <__register_exitproc+0xb0>)
 8032b0e:	6863      	ldr	r3, [r4, #4]
 8032b10:	2b1f      	cmp	r3, #31
 8032b12:	dd06      	ble.n	8032b22 <__register_exitproc+0x3e>
 8032b14:	6828      	ldr	r0, [r5, #0]
 8032b16:	f7ff ffd7 	bl	8032ac8 <__retarget_lock_release_recursive>
 8032b1a:	f04f 30ff 	mov.w	r0, #4294967295
 8032b1e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8032b22:	b33f      	cbz	r7, 8032b74 <__register_exitproc+0x90>
 8032b24:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8032b28:	b968      	cbnz	r0, 8032b46 <__register_exitproc+0x62>
 8032b2a:	4b1c      	ldr	r3, [pc, #112]	@ (8032b9c <__register_exitproc+0xb8>)
 8032b2c:	2b00      	cmp	r3, #0
 8032b2e:	d0f1      	beq.n	8032b14 <__register_exitproc+0x30>
 8032b30:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8032b34:	f7ff fd04 	bl	8032540 <malloc>
 8032b38:	2800      	cmp	r0, #0
 8032b3a:	d0eb      	beq.n	8032b14 <__register_exitproc+0x30>
 8032b3c:	2300      	movs	r3, #0
 8032b3e:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8032b42:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8032b46:	6863      	ldr	r3, [r4, #4]
 8032b48:	2201      	movs	r2, #1
 8032b4a:	2f02      	cmp	r7, #2
 8032b4c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8032b50:	fa02 f203 	lsl.w	r2, r2, r3
 8032b54:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8032b58:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8032b5c:	ea43 0302 	orr.w	r3, r3, r2
 8032b60:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8032b64:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8032b68:	bf02      	ittt	eq
 8032b6a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8032b6e:	4313      	orreq	r3, r2
 8032b70:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8032b74:	6863      	ldr	r3, [r4, #4]
 8032b76:	6828      	ldr	r0, [r5, #0]
 8032b78:	1c5a      	adds	r2, r3, #1
 8032b7a:	3302      	adds	r3, #2
 8032b7c:	6062      	str	r2, [r4, #4]
 8032b7e:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8032b82:	f7ff ffa1 	bl	8032ac8 <__retarget_lock_release_recursive>
 8032b86:	2000      	movs	r0, #0
 8032b88:	e7c9      	b.n	8032b1e <__register_exitproc+0x3a>
 8032b8a:	bf00      	nop
 8032b8c:	200002a4 	.word	0x200002a4
 8032b90:	20083618 	.word	0x20083618
 8032b94:	2008358c 	.word	0x2008358c
 8032b98:	080386c0 	.word	0x080386c0
 8032b9c:	08032541 	.word	0x08032541

08032ba0 <_free_r>:
 8032ba0:	b538      	push	{r3, r4, r5, lr}
 8032ba2:	4605      	mov	r5, r0
 8032ba4:	2900      	cmp	r1, #0
 8032ba6:	d041      	beq.n	8032c2c <_free_r+0x8c>
 8032ba8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8032bac:	1f0c      	subs	r4, r1, #4
 8032bae:	2b00      	cmp	r3, #0
 8032bb0:	bfb8      	it	lt
 8032bb2:	18e4      	addlt	r4, r4, r3
 8032bb4:	f7ff fd76 	bl	80326a4 <__malloc_lock>
 8032bb8:	4a1d      	ldr	r2, [pc, #116]	@ (8032c30 <_free_r+0x90>)
 8032bba:	6813      	ldr	r3, [r2, #0]
 8032bbc:	b933      	cbnz	r3, 8032bcc <_free_r+0x2c>
 8032bbe:	6063      	str	r3, [r4, #4]
 8032bc0:	6014      	str	r4, [r2, #0]
 8032bc2:	4628      	mov	r0, r5
 8032bc4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8032bc8:	f7ff bd72 	b.w	80326b0 <__malloc_unlock>
 8032bcc:	42a3      	cmp	r3, r4
 8032bce:	d908      	bls.n	8032be2 <_free_r+0x42>
 8032bd0:	6820      	ldr	r0, [r4, #0]
 8032bd2:	1821      	adds	r1, r4, r0
 8032bd4:	428b      	cmp	r3, r1
 8032bd6:	bf01      	itttt	eq
 8032bd8:	6819      	ldreq	r1, [r3, #0]
 8032bda:	685b      	ldreq	r3, [r3, #4]
 8032bdc:	1809      	addeq	r1, r1, r0
 8032bde:	6021      	streq	r1, [r4, #0]
 8032be0:	e7ed      	b.n	8032bbe <_free_r+0x1e>
 8032be2:	461a      	mov	r2, r3
 8032be4:	685b      	ldr	r3, [r3, #4]
 8032be6:	b10b      	cbz	r3, 8032bec <_free_r+0x4c>
 8032be8:	42a3      	cmp	r3, r4
 8032bea:	d9fa      	bls.n	8032be2 <_free_r+0x42>
 8032bec:	6811      	ldr	r1, [r2, #0]
 8032bee:	1850      	adds	r0, r2, r1
 8032bf0:	42a0      	cmp	r0, r4
 8032bf2:	d10b      	bne.n	8032c0c <_free_r+0x6c>
 8032bf4:	6820      	ldr	r0, [r4, #0]
 8032bf6:	4401      	add	r1, r0
 8032bf8:	1850      	adds	r0, r2, r1
 8032bfa:	6011      	str	r1, [r2, #0]
 8032bfc:	4283      	cmp	r3, r0
 8032bfe:	d1e0      	bne.n	8032bc2 <_free_r+0x22>
 8032c00:	6818      	ldr	r0, [r3, #0]
 8032c02:	685b      	ldr	r3, [r3, #4]
 8032c04:	4408      	add	r0, r1
 8032c06:	6053      	str	r3, [r2, #4]
 8032c08:	6010      	str	r0, [r2, #0]
 8032c0a:	e7da      	b.n	8032bc2 <_free_r+0x22>
 8032c0c:	d902      	bls.n	8032c14 <_free_r+0x74>
 8032c0e:	230c      	movs	r3, #12
 8032c10:	602b      	str	r3, [r5, #0]
 8032c12:	e7d6      	b.n	8032bc2 <_free_r+0x22>
 8032c14:	6820      	ldr	r0, [r4, #0]
 8032c16:	1821      	adds	r1, r4, r0
 8032c18:	428b      	cmp	r3, r1
 8032c1a:	bf02      	ittt	eq
 8032c1c:	6819      	ldreq	r1, [r3, #0]
 8032c1e:	685b      	ldreq	r3, [r3, #4]
 8032c20:	1809      	addeq	r1, r1, r0
 8032c22:	6063      	str	r3, [r4, #4]
 8032c24:	bf08      	it	eq
 8032c26:	6021      	streq	r1, [r4, #0]
 8032c28:	6054      	str	r4, [r2, #4]
 8032c2a:	e7ca      	b.n	8032bc2 <_free_r+0x22>
 8032c2c:	bd38      	pop	{r3, r4, r5, pc}
 8032c2e:	bf00      	nop
 8032c30:	20083444 	.word	0x20083444

08032c34 <__sfputc_r>:
 8032c34:	6893      	ldr	r3, [r2, #8]
 8032c36:	3b01      	subs	r3, #1
 8032c38:	2b00      	cmp	r3, #0
 8032c3a:	6093      	str	r3, [r2, #8]
 8032c3c:	b410      	push	{r4}
 8032c3e:	da08      	bge.n	8032c52 <__sfputc_r+0x1e>
 8032c40:	6994      	ldr	r4, [r2, #24]
 8032c42:	42a3      	cmp	r3, r4
 8032c44:	db01      	blt.n	8032c4a <__sfputc_r+0x16>
 8032c46:	290a      	cmp	r1, #10
 8032c48:	d103      	bne.n	8032c52 <__sfputc_r+0x1e>
 8032c4a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8032c4e:	f000 bb71 	b.w	8033334 <__swbuf_r>
 8032c52:	6813      	ldr	r3, [r2, #0]
 8032c54:	1c58      	adds	r0, r3, #1
 8032c56:	6010      	str	r0, [r2, #0]
 8032c58:	4608      	mov	r0, r1
 8032c5a:	7019      	strb	r1, [r3, #0]
 8032c5c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8032c60:	4770      	bx	lr

08032c62 <__sfputs_r>:
 8032c62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8032c64:	4606      	mov	r6, r0
 8032c66:	460f      	mov	r7, r1
 8032c68:	4614      	mov	r4, r2
 8032c6a:	18d5      	adds	r5, r2, r3
 8032c6c:	42ac      	cmp	r4, r5
 8032c6e:	d101      	bne.n	8032c74 <__sfputs_r+0x12>
 8032c70:	2000      	movs	r0, #0
 8032c72:	e007      	b.n	8032c84 <__sfputs_r+0x22>
 8032c74:	463a      	mov	r2, r7
 8032c76:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032c7a:	4630      	mov	r0, r6
 8032c7c:	f7ff ffda 	bl	8032c34 <__sfputc_r>
 8032c80:	1c43      	adds	r3, r0, #1
 8032c82:	d1f3      	bne.n	8032c6c <__sfputs_r+0xa>
 8032c84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08032c88 <_vfiprintf_r>:
 8032c88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8032c8c:	460d      	mov	r5, r1
 8032c8e:	b09d      	sub	sp, #116	@ 0x74
 8032c90:	4614      	mov	r4, r2
 8032c92:	4698      	mov	r8, r3
 8032c94:	4606      	mov	r6, r0
 8032c96:	b118      	cbz	r0, 8032ca0 <_vfiprintf_r+0x18>
 8032c98:	6a03      	ldr	r3, [r0, #32]
 8032c9a:	b90b      	cbnz	r3, 8032ca0 <_vfiprintf_r+0x18>
 8032c9c:	f7ff fda8 	bl	80327f0 <__sinit>
 8032ca0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032ca2:	07d9      	lsls	r1, r3, #31
 8032ca4:	d405      	bmi.n	8032cb2 <_vfiprintf_r+0x2a>
 8032ca6:	89ab      	ldrh	r3, [r5, #12]
 8032ca8:	059a      	lsls	r2, r3, #22
 8032caa:	d402      	bmi.n	8032cb2 <_vfiprintf_r+0x2a>
 8032cac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032cae:	f7ff ff0a 	bl	8032ac6 <__retarget_lock_acquire_recursive>
 8032cb2:	89ab      	ldrh	r3, [r5, #12]
 8032cb4:	071b      	lsls	r3, r3, #28
 8032cb6:	d501      	bpl.n	8032cbc <_vfiprintf_r+0x34>
 8032cb8:	692b      	ldr	r3, [r5, #16]
 8032cba:	b99b      	cbnz	r3, 8032ce4 <_vfiprintf_r+0x5c>
 8032cbc:	4629      	mov	r1, r5
 8032cbe:	4630      	mov	r0, r6
 8032cc0:	f000 fb76 	bl	80333b0 <__swsetup_r>
 8032cc4:	b170      	cbz	r0, 8032ce4 <_vfiprintf_r+0x5c>
 8032cc6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032cc8:	07dc      	lsls	r4, r3, #31
 8032cca:	d504      	bpl.n	8032cd6 <_vfiprintf_r+0x4e>
 8032ccc:	f04f 30ff 	mov.w	r0, #4294967295
 8032cd0:	b01d      	add	sp, #116	@ 0x74
 8032cd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8032cd6:	89ab      	ldrh	r3, [r5, #12]
 8032cd8:	0598      	lsls	r0, r3, #22
 8032cda:	d4f7      	bmi.n	8032ccc <_vfiprintf_r+0x44>
 8032cdc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032cde:	f7ff fef3 	bl	8032ac8 <__retarget_lock_release_recursive>
 8032ce2:	e7f3      	b.n	8032ccc <_vfiprintf_r+0x44>
 8032ce4:	2300      	movs	r3, #0
 8032ce6:	f8cd 800c 	str.w	r8, [sp, #12]
 8032cea:	f04f 0901 	mov.w	r9, #1
 8032cee:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 8032ea4 <_vfiprintf_r+0x21c>
 8032cf2:	9309      	str	r3, [sp, #36]	@ 0x24
 8032cf4:	2320      	movs	r3, #32
 8032cf6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8032cfa:	2330      	movs	r3, #48	@ 0x30
 8032cfc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8032d00:	4623      	mov	r3, r4
 8032d02:	469a      	mov	sl, r3
 8032d04:	f813 2b01 	ldrb.w	r2, [r3], #1
 8032d08:	b10a      	cbz	r2, 8032d0e <_vfiprintf_r+0x86>
 8032d0a:	2a25      	cmp	r2, #37	@ 0x25
 8032d0c:	d1f9      	bne.n	8032d02 <_vfiprintf_r+0x7a>
 8032d0e:	ebba 0b04 	subs.w	fp, sl, r4
 8032d12:	d00b      	beq.n	8032d2c <_vfiprintf_r+0xa4>
 8032d14:	465b      	mov	r3, fp
 8032d16:	4622      	mov	r2, r4
 8032d18:	4629      	mov	r1, r5
 8032d1a:	4630      	mov	r0, r6
 8032d1c:	f7ff ffa1 	bl	8032c62 <__sfputs_r>
 8032d20:	3001      	adds	r0, #1
 8032d22:	f000 80a7 	beq.w	8032e74 <_vfiprintf_r+0x1ec>
 8032d26:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8032d28:	445a      	add	r2, fp
 8032d2a:	9209      	str	r2, [sp, #36]	@ 0x24
 8032d2c:	f89a 3000 	ldrb.w	r3, [sl]
 8032d30:	2b00      	cmp	r3, #0
 8032d32:	f000 809f 	beq.w	8032e74 <_vfiprintf_r+0x1ec>
 8032d36:	2300      	movs	r3, #0
 8032d38:	f04f 32ff 	mov.w	r2, #4294967295
 8032d3c:	f10a 0a01 	add.w	sl, sl, #1
 8032d40:	9304      	str	r3, [sp, #16]
 8032d42:	9307      	str	r3, [sp, #28]
 8032d44:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8032d48:	931a      	str	r3, [sp, #104]	@ 0x68
 8032d4a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8032d4e:	4654      	mov	r4, sl
 8032d50:	2205      	movs	r2, #5
 8032d52:	4854      	ldr	r0, [pc, #336]	@ (8032ea4 <_vfiprintf_r+0x21c>)
 8032d54:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032d58:	f000 fb80 	bl	803345c <memchr>
 8032d5c:	9a04      	ldr	r2, [sp, #16]
 8032d5e:	b9d8      	cbnz	r0, 8032d98 <_vfiprintf_r+0x110>
 8032d60:	06d1      	lsls	r1, r2, #27
 8032d62:	bf44      	itt	mi
 8032d64:	2320      	movmi	r3, #32
 8032d66:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8032d6a:	0713      	lsls	r3, r2, #28
 8032d6c:	bf44      	itt	mi
 8032d6e:	232b      	movmi	r3, #43	@ 0x2b
 8032d70:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8032d74:	f89a 3000 	ldrb.w	r3, [sl]
 8032d78:	2b2a      	cmp	r3, #42	@ 0x2a
 8032d7a:	d015      	beq.n	8032da8 <_vfiprintf_r+0x120>
 8032d7c:	9a07      	ldr	r2, [sp, #28]
 8032d7e:	4654      	mov	r4, sl
 8032d80:	2000      	movs	r0, #0
 8032d82:	f04f 0c0a 	mov.w	ip, #10
 8032d86:	4621      	mov	r1, r4
 8032d88:	f811 3b01 	ldrb.w	r3, [r1], #1
 8032d8c:	3b30      	subs	r3, #48	@ 0x30
 8032d8e:	2b09      	cmp	r3, #9
 8032d90:	d94b      	bls.n	8032e2a <_vfiprintf_r+0x1a2>
 8032d92:	b1b0      	cbz	r0, 8032dc2 <_vfiprintf_r+0x13a>
 8032d94:	9207      	str	r2, [sp, #28]
 8032d96:	e014      	b.n	8032dc2 <_vfiprintf_r+0x13a>
 8032d98:	eba0 0308 	sub.w	r3, r0, r8
 8032d9c:	46a2      	mov	sl, r4
 8032d9e:	fa09 f303 	lsl.w	r3, r9, r3
 8032da2:	4313      	orrs	r3, r2
 8032da4:	9304      	str	r3, [sp, #16]
 8032da6:	e7d2      	b.n	8032d4e <_vfiprintf_r+0xc6>
 8032da8:	9b03      	ldr	r3, [sp, #12]
 8032daa:	1d19      	adds	r1, r3, #4
 8032dac:	681b      	ldr	r3, [r3, #0]
 8032dae:	2b00      	cmp	r3, #0
 8032db0:	9103      	str	r1, [sp, #12]
 8032db2:	bfbb      	ittet	lt
 8032db4:	425b      	neglt	r3, r3
 8032db6:	f042 0202 	orrlt.w	r2, r2, #2
 8032dba:	9307      	strge	r3, [sp, #28]
 8032dbc:	9307      	strlt	r3, [sp, #28]
 8032dbe:	bfb8      	it	lt
 8032dc0:	9204      	strlt	r2, [sp, #16]
 8032dc2:	7823      	ldrb	r3, [r4, #0]
 8032dc4:	2b2e      	cmp	r3, #46	@ 0x2e
 8032dc6:	d10a      	bne.n	8032dde <_vfiprintf_r+0x156>
 8032dc8:	7863      	ldrb	r3, [r4, #1]
 8032dca:	2b2a      	cmp	r3, #42	@ 0x2a
 8032dcc:	d132      	bne.n	8032e34 <_vfiprintf_r+0x1ac>
 8032dce:	9b03      	ldr	r3, [sp, #12]
 8032dd0:	3402      	adds	r4, #2
 8032dd2:	1d1a      	adds	r2, r3, #4
 8032dd4:	681b      	ldr	r3, [r3, #0]
 8032dd6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8032dda:	9203      	str	r2, [sp, #12]
 8032ddc:	9305      	str	r3, [sp, #20]
 8032dde:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8032eb4 <_vfiprintf_r+0x22c>
 8032de2:	2203      	movs	r2, #3
 8032de4:	7821      	ldrb	r1, [r4, #0]
 8032de6:	4650      	mov	r0, sl
 8032de8:	f000 fb38 	bl	803345c <memchr>
 8032dec:	b138      	cbz	r0, 8032dfe <_vfiprintf_r+0x176>
 8032dee:	eba0 000a 	sub.w	r0, r0, sl
 8032df2:	2240      	movs	r2, #64	@ 0x40
 8032df4:	9b04      	ldr	r3, [sp, #16]
 8032df6:	3401      	adds	r4, #1
 8032df8:	4082      	lsls	r2, r0
 8032dfa:	4313      	orrs	r3, r2
 8032dfc:	9304      	str	r3, [sp, #16]
 8032dfe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032e02:	2206      	movs	r2, #6
 8032e04:	4828      	ldr	r0, [pc, #160]	@ (8032ea8 <_vfiprintf_r+0x220>)
 8032e06:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8032e0a:	f000 fb27 	bl	803345c <memchr>
 8032e0e:	2800      	cmp	r0, #0
 8032e10:	d03f      	beq.n	8032e92 <_vfiprintf_r+0x20a>
 8032e12:	4b26      	ldr	r3, [pc, #152]	@ (8032eac <_vfiprintf_r+0x224>)
 8032e14:	bb1b      	cbnz	r3, 8032e5e <_vfiprintf_r+0x1d6>
 8032e16:	9b03      	ldr	r3, [sp, #12]
 8032e18:	3307      	adds	r3, #7
 8032e1a:	f023 0307 	bic.w	r3, r3, #7
 8032e1e:	3308      	adds	r3, #8
 8032e20:	9303      	str	r3, [sp, #12]
 8032e22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8032e24:	443b      	add	r3, r7
 8032e26:	9309      	str	r3, [sp, #36]	@ 0x24
 8032e28:	e76a      	b.n	8032d00 <_vfiprintf_r+0x78>
 8032e2a:	fb0c 3202 	mla	r2, ip, r2, r3
 8032e2e:	460c      	mov	r4, r1
 8032e30:	2001      	movs	r0, #1
 8032e32:	e7a8      	b.n	8032d86 <_vfiprintf_r+0xfe>
 8032e34:	2300      	movs	r3, #0
 8032e36:	3401      	adds	r4, #1
 8032e38:	f04f 0c0a 	mov.w	ip, #10
 8032e3c:	4619      	mov	r1, r3
 8032e3e:	9305      	str	r3, [sp, #20]
 8032e40:	4620      	mov	r0, r4
 8032e42:	f810 2b01 	ldrb.w	r2, [r0], #1
 8032e46:	3a30      	subs	r2, #48	@ 0x30
 8032e48:	2a09      	cmp	r2, #9
 8032e4a:	d903      	bls.n	8032e54 <_vfiprintf_r+0x1cc>
 8032e4c:	2b00      	cmp	r3, #0
 8032e4e:	d0c6      	beq.n	8032dde <_vfiprintf_r+0x156>
 8032e50:	9105      	str	r1, [sp, #20]
 8032e52:	e7c4      	b.n	8032dde <_vfiprintf_r+0x156>
 8032e54:	fb0c 2101 	mla	r1, ip, r1, r2
 8032e58:	4604      	mov	r4, r0
 8032e5a:	2301      	movs	r3, #1
 8032e5c:	e7f0      	b.n	8032e40 <_vfiprintf_r+0x1b8>
 8032e5e:	ab03      	add	r3, sp, #12
 8032e60:	462a      	mov	r2, r5
 8032e62:	a904      	add	r1, sp, #16
 8032e64:	4630      	mov	r0, r6
 8032e66:	9300      	str	r3, [sp, #0]
 8032e68:	4b11      	ldr	r3, [pc, #68]	@ (8032eb0 <_vfiprintf_r+0x228>)
 8032e6a:	f3af 8000 	nop.w
 8032e6e:	4607      	mov	r7, r0
 8032e70:	1c78      	adds	r0, r7, #1
 8032e72:	d1d6      	bne.n	8032e22 <_vfiprintf_r+0x19a>
 8032e74:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8032e76:	07d9      	lsls	r1, r3, #31
 8032e78:	d405      	bmi.n	8032e86 <_vfiprintf_r+0x1fe>
 8032e7a:	89ab      	ldrh	r3, [r5, #12]
 8032e7c:	059a      	lsls	r2, r3, #22
 8032e7e:	d402      	bmi.n	8032e86 <_vfiprintf_r+0x1fe>
 8032e80:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8032e82:	f7ff fe21 	bl	8032ac8 <__retarget_lock_release_recursive>
 8032e86:	89ab      	ldrh	r3, [r5, #12]
 8032e88:	065b      	lsls	r3, r3, #25
 8032e8a:	f53f af1f 	bmi.w	8032ccc <_vfiprintf_r+0x44>
 8032e8e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8032e90:	e71e      	b.n	8032cd0 <_vfiprintf_r+0x48>
 8032e92:	ab03      	add	r3, sp, #12
 8032e94:	462a      	mov	r2, r5
 8032e96:	a904      	add	r1, sp, #16
 8032e98:	4630      	mov	r0, r6
 8032e9a:	9300      	str	r3, [sp, #0]
 8032e9c:	4b04      	ldr	r3, [pc, #16]	@ (8032eb0 <_vfiprintf_r+0x228>)
 8032e9e:	f000 f87d 	bl	8032f9c <_printf_i>
 8032ea2:	e7e4      	b.n	8032e6e <_vfiprintf_r+0x1e6>
 8032ea4:	080386c4 	.word	0x080386c4
 8032ea8:	080386ce 	.word	0x080386ce
 8032eac:	00000000 	.word	0x00000000
 8032eb0:	08032c63 	.word	0x08032c63
 8032eb4:	080386ca 	.word	0x080386ca

08032eb8 <_printf_common>:
 8032eb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8032ebc:	4616      	mov	r6, r2
 8032ebe:	4698      	mov	r8, r3
 8032ec0:	688a      	ldr	r2, [r1, #8]
 8032ec2:	4607      	mov	r7, r0
 8032ec4:	690b      	ldr	r3, [r1, #16]
 8032ec6:	460c      	mov	r4, r1
 8032ec8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8032ecc:	4293      	cmp	r3, r2
 8032ece:	bfb8      	it	lt
 8032ed0:	4613      	movlt	r3, r2
 8032ed2:	6033      	str	r3, [r6, #0]
 8032ed4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8032ed8:	b10a      	cbz	r2, 8032ede <_printf_common+0x26>
 8032eda:	3301      	adds	r3, #1
 8032edc:	6033      	str	r3, [r6, #0]
 8032ede:	6823      	ldr	r3, [r4, #0]
 8032ee0:	0699      	lsls	r1, r3, #26
 8032ee2:	bf42      	ittt	mi
 8032ee4:	6833      	ldrmi	r3, [r6, #0]
 8032ee6:	3302      	addmi	r3, #2
 8032ee8:	6033      	strmi	r3, [r6, #0]
 8032eea:	6825      	ldr	r5, [r4, #0]
 8032eec:	f015 0506 	ands.w	r5, r5, #6
 8032ef0:	d106      	bne.n	8032f00 <_printf_common+0x48>
 8032ef2:	f104 0a19 	add.w	sl, r4, #25
 8032ef6:	68e3      	ldr	r3, [r4, #12]
 8032ef8:	6832      	ldr	r2, [r6, #0]
 8032efa:	1a9b      	subs	r3, r3, r2
 8032efc:	42ab      	cmp	r3, r5
 8032efe:	dc2b      	bgt.n	8032f58 <_printf_common+0xa0>
 8032f00:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8032f04:	6822      	ldr	r2, [r4, #0]
 8032f06:	3b00      	subs	r3, #0
 8032f08:	bf18      	it	ne
 8032f0a:	2301      	movne	r3, #1
 8032f0c:	0692      	lsls	r2, r2, #26
 8032f0e:	d430      	bmi.n	8032f72 <_printf_common+0xba>
 8032f10:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8032f14:	4641      	mov	r1, r8
 8032f16:	4638      	mov	r0, r7
 8032f18:	47c8      	blx	r9
 8032f1a:	3001      	adds	r0, #1
 8032f1c:	d023      	beq.n	8032f66 <_printf_common+0xae>
 8032f1e:	6823      	ldr	r3, [r4, #0]
 8032f20:	341a      	adds	r4, #26
 8032f22:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 8032f26:	f003 0306 	and.w	r3, r3, #6
 8032f2a:	2b04      	cmp	r3, #4
 8032f2c:	bf0a      	itet	eq
 8032f2e:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 8032f32:	2500      	movne	r5, #0
 8032f34:	6833      	ldreq	r3, [r6, #0]
 8032f36:	f04f 0600 	mov.w	r6, #0
 8032f3a:	bf08      	it	eq
 8032f3c:	1aed      	subeq	r5, r5, r3
 8032f3e:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8032f42:	bf08      	it	eq
 8032f44:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8032f48:	4293      	cmp	r3, r2
 8032f4a:	bfc4      	itt	gt
 8032f4c:	1a9b      	subgt	r3, r3, r2
 8032f4e:	18ed      	addgt	r5, r5, r3
 8032f50:	42b5      	cmp	r5, r6
 8032f52:	d11a      	bne.n	8032f8a <_printf_common+0xd2>
 8032f54:	2000      	movs	r0, #0
 8032f56:	e008      	b.n	8032f6a <_printf_common+0xb2>
 8032f58:	2301      	movs	r3, #1
 8032f5a:	4652      	mov	r2, sl
 8032f5c:	4641      	mov	r1, r8
 8032f5e:	4638      	mov	r0, r7
 8032f60:	47c8      	blx	r9
 8032f62:	3001      	adds	r0, #1
 8032f64:	d103      	bne.n	8032f6e <_printf_common+0xb6>
 8032f66:	f04f 30ff 	mov.w	r0, #4294967295
 8032f6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8032f6e:	3501      	adds	r5, #1
 8032f70:	e7c1      	b.n	8032ef6 <_printf_common+0x3e>
 8032f72:	18e1      	adds	r1, r4, r3
 8032f74:	1c5a      	adds	r2, r3, #1
 8032f76:	2030      	movs	r0, #48	@ 0x30
 8032f78:	3302      	adds	r3, #2
 8032f7a:	4422      	add	r2, r4
 8032f7c:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8032f80:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8032f84:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8032f88:	e7c2      	b.n	8032f10 <_printf_common+0x58>
 8032f8a:	2301      	movs	r3, #1
 8032f8c:	4622      	mov	r2, r4
 8032f8e:	4641      	mov	r1, r8
 8032f90:	4638      	mov	r0, r7
 8032f92:	47c8      	blx	r9
 8032f94:	3001      	adds	r0, #1
 8032f96:	d0e6      	beq.n	8032f66 <_printf_common+0xae>
 8032f98:	3601      	adds	r6, #1
 8032f9a:	e7d9      	b.n	8032f50 <_printf_common+0x98>

08032f9c <_printf_i>:
 8032f9c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8032fa0:	7e0f      	ldrb	r7, [r1, #24]
 8032fa2:	4691      	mov	r9, r2
 8032fa4:	4680      	mov	r8, r0
 8032fa6:	460c      	mov	r4, r1
 8032fa8:	2f78      	cmp	r7, #120	@ 0x78
 8032faa:	469a      	mov	sl, r3
 8032fac:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8032fae:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8032fb2:	d807      	bhi.n	8032fc4 <_printf_i+0x28>
 8032fb4:	2f62      	cmp	r7, #98	@ 0x62
 8032fb6:	d80a      	bhi.n	8032fce <_printf_i+0x32>
 8032fb8:	2f00      	cmp	r7, #0
 8032fba:	f000 80d2 	beq.w	8033162 <_printf_i+0x1c6>
 8032fbe:	2f58      	cmp	r7, #88	@ 0x58
 8032fc0:	f000 80b9 	beq.w	8033136 <_printf_i+0x19a>
 8032fc4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8032fc8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8032fcc:	e03a      	b.n	8033044 <_printf_i+0xa8>
 8032fce:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8032fd2:	2b15      	cmp	r3, #21
 8032fd4:	d8f6      	bhi.n	8032fc4 <_printf_i+0x28>
 8032fd6:	a101      	add	r1, pc, #4	@ (adr r1, 8032fdc <_printf_i+0x40>)
 8032fd8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8032fdc:	08033035 	.word	0x08033035
 8032fe0:	08033049 	.word	0x08033049
 8032fe4:	08032fc5 	.word	0x08032fc5
 8032fe8:	08032fc5 	.word	0x08032fc5
 8032fec:	08032fc5 	.word	0x08032fc5
 8032ff0:	08032fc5 	.word	0x08032fc5
 8032ff4:	08033049 	.word	0x08033049
 8032ff8:	08032fc5 	.word	0x08032fc5
 8032ffc:	08032fc5 	.word	0x08032fc5
 8033000:	08032fc5 	.word	0x08032fc5
 8033004:	08032fc5 	.word	0x08032fc5
 8033008:	08033149 	.word	0x08033149
 803300c:	08033073 	.word	0x08033073
 8033010:	08033103 	.word	0x08033103
 8033014:	08032fc5 	.word	0x08032fc5
 8033018:	08032fc5 	.word	0x08032fc5
 803301c:	0803316b 	.word	0x0803316b
 8033020:	08032fc5 	.word	0x08032fc5
 8033024:	08033073 	.word	0x08033073
 8033028:	08032fc5 	.word	0x08032fc5
 803302c:	08032fc5 	.word	0x08032fc5
 8033030:	0803310b 	.word	0x0803310b
 8033034:	6833      	ldr	r3, [r6, #0]
 8033036:	1d1a      	adds	r2, r3, #4
 8033038:	681b      	ldr	r3, [r3, #0]
 803303a:	6032      	str	r2, [r6, #0]
 803303c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8033040:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8033044:	2301      	movs	r3, #1
 8033046:	e09d      	b.n	8033184 <_printf_i+0x1e8>
 8033048:	6833      	ldr	r3, [r6, #0]
 803304a:	6820      	ldr	r0, [r4, #0]
 803304c:	1d19      	adds	r1, r3, #4
 803304e:	6031      	str	r1, [r6, #0]
 8033050:	0606      	lsls	r6, r0, #24
 8033052:	d501      	bpl.n	8033058 <_printf_i+0xbc>
 8033054:	681d      	ldr	r5, [r3, #0]
 8033056:	e003      	b.n	8033060 <_printf_i+0xc4>
 8033058:	0645      	lsls	r5, r0, #25
 803305a:	d5fb      	bpl.n	8033054 <_printf_i+0xb8>
 803305c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8033060:	2d00      	cmp	r5, #0
 8033062:	da03      	bge.n	803306c <_printf_i+0xd0>
 8033064:	232d      	movs	r3, #45	@ 0x2d
 8033066:	426d      	negs	r5, r5
 8033068:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 803306c:	4859      	ldr	r0, [pc, #356]	@ (80331d4 <_printf_i+0x238>)
 803306e:	230a      	movs	r3, #10
 8033070:	e011      	b.n	8033096 <_printf_i+0xfa>
 8033072:	6821      	ldr	r1, [r4, #0]
 8033074:	6833      	ldr	r3, [r6, #0]
 8033076:	0608      	lsls	r0, r1, #24
 8033078:	f853 5b04 	ldr.w	r5, [r3], #4
 803307c:	d402      	bmi.n	8033084 <_printf_i+0xe8>
 803307e:	0649      	lsls	r1, r1, #25
 8033080:	bf48      	it	mi
 8033082:	b2ad      	uxthmi	r5, r5
 8033084:	2f6f      	cmp	r7, #111	@ 0x6f
 8033086:	6033      	str	r3, [r6, #0]
 8033088:	4852      	ldr	r0, [pc, #328]	@ (80331d4 <_printf_i+0x238>)
 803308a:	bf14      	ite	ne
 803308c:	230a      	movne	r3, #10
 803308e:	2308      	moveq	r3, #8
 8033090:	2100      	movs	r1, #0
 8033092:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8033096:	6866      	ldr	r6, [r4, #4]
 8033098:	2e00      	cmp	r6, #0
 803309a:	60a6      	str	r6, [r4, #8]
 803309c:	bfa2      	ittt	ge
 803309e:	6821      	ldrge	r1, [r4, #0]
 80330a0:	f021 0104 	bicge.w	r1, r1, #4
 80330a4:	6021      	strge	r1, [r4, #0]
 80330a6:	b90d      	cbnz	r5, 80330ac <_printf_i+0x110>
 80330a8:	2e00      	cmp	r6, #0
 80330aa:	d04b      	beq.n	8033144 <_printf_i+0x1a8>
 80330ac:	4616      	mov	r6, r2
 80330ae:	fbb5 f1f3 	udiv	r1, r5, r3
 80330b2:	fb03 5711 	mls	r7, r3, r1, r5
 80330b6:	5dc7      	ldrb	r7, [r0, r7]
 80330b8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80330bc:	462f      	mov	r7, r5
 80330be:	460d      	mov	r5, r1
 80330c0:	42bb      	cmp	r3, r7
 80330c2:	d9f4      	bls.n	80330ae <_printf_i+0x112>
 80330c4:	2b08      	cmp	r3, #8
 80330c6:	d10b      	bne.n	80330e0 <_printf_i+0x144>
 80330c8:	6823      	ldr	r3, [r4, #0]
 80330ca:	07df      	lsls	r7, r3, #31
 80330cc:	d508      	bpl.n	80330e0 <_printf_i+0x144>
 80330ce:	6923      	ldr	r3, [r4, #16]
 80330d0:	6861      	ldr	r1, [r4, #4]
 80330d2:	4299      	cmp	r1, r3
 80330d4:	bfde      	ittt	le
 80330d6:	2330      	movle	r3, #48	@ 0x30
 80330d8:	f806 3c01 	strble.w	r3, [r6, #-1]
 80330dc:	f106 36ff 	addle.w	r6, r6, #4294967295
 80330e0:	1b92      	subs	r2, r2, r6
 80330e2:	6122      	str	r2, [r4, #16]
 80330e4:	464b      	mov	r3, r9
 80330e6:	aa03      	add	r2, sp, #12
 80330e8:	4621      	mov	r1, r4
 80330ea:	4640      	mov	r0, r8
 80330ec:	f8cd a000 	str.w	sl, [sp]
 80330f0:	f7ff fee2 	bl	8032eb8 <_printf_common>
 80330f4:	3001      	adds	r0, #1
 80330f6:	d14a      	bne.n	803318e <_printf_i+0x1f2>
 80330f8:	f04f 30ff 	mov.w	r0, #4294967295
 80330fc:	b004      	add	sp, #16
 80330fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8033102:	6823      	ldr	r3, [r4, #0]
 8033104:	f043 0320 	orr.w	r3, r3, #32
 8033108:	6023      	str	r3, [r4, #0]
 803310a:	2778      	movs	r7, #120	@ 0x78
 803310c:	4832      	ldr	r0, [pc, #200]	@ (80331d8 <_printf_i+0x23c>)
 803310e:	6823      	ldr	r3, [r4, #0]
 8033110:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8033114:	061f      	lsls	r7, r3, #24
 8033116:	6831      	ldr	r1, [r6, #0]
 8033118:	f851 5b04 	ldr.w	r5, [r1], #4
 803311c:	d402      	bmi.n	8033124 <_printf_i+0x188>
 803311e:	065f      	lsls	r7, r3, #25
 8033120:	bf48      	it	mi
 8033122:	b2ad      	uxthmi	r5, r5
 8033124:	6031      	str	r1, [r6, #0]
 8033126:	07d9      	lsls	r1, r3, #31
 8033128:	bf44      	itt	mi
 803312a:	f043 0320 	orrmi.w	r3, r3, #32
 803312e:	6023      	strmi	r3, [r4, #0]
 8033130:	b11d      	cbz	r5, 803313a <_printf_i+0x19e>
 8033132:	2310      	movs	r3, #16
 8033134:	e7ac      	b.n	8033090 <_printf_i+0xf4>
 8033136:	4827      	ldr	r0, [pc, #156]	@ (80331d4 <_printf_i+0x238>)
 8033138:	e7e9      	b.n	803310e <_printf_i+0x172>
 803313a:	6823      	ldr	r3, [r4, #0]
 803313c:	f023 0320 	bic.w	r3, r3, #32
 8033140:	6023      	str	r3, [r4, #0]
 8033142:	e7f6      	b.n	8033132 <_printf_i+0x196>
 8033144:	4616      	mov	r6, r2
 8033146:	e7bd      	b.n	80330c4 <_printf_i+0x128>
 8033148:	6833      	ldr	r3, [r6, #0]
 803314a:	6825      	ldr	r5, [r4, #0]
 803314c:	1d18      	adds	r0, r3, #4
 803314e:	6961      	ldr	r1, [r4, #20]
 8033150:	6030      	str	r0, [r6, #0]
 8033152:	062e      	lsls	r6, r5, #24
 8033154:	681b      	ldr	r3, [r3, #0]
 8033156:	d501      	bpl.n	803315c <_printf_i+0x1c0>
 8033158:	6019      	str	r1, [r3, #0]
 803315a:	e002      	b.n	8033162 <_printf_i+0x1c6>
 803315c:	0668      	lsls	r0, r5, #25
 803315e:	d5fb      	bpl.n	8033158 <_printf_i+0x1bc>
 8033160:	8019      	strh	r1, [r3, #0]
 8033162:	2300      	movs	r3, #0
 8033164:	4616      	mov	r6, r2
 8033166:	6123      	str	r3, [r4, #16]
 8033168:	e7bc      	b.n	80330e4 <_printf_i+0x148>
 803316a:	6833      	ldr	r3, [r6, #0]
 803316c:	2100      	movs	r1, #0
 803316e:	1d1a      	adds	r2, r3, #4
 8033170:	6032      	str	r2, [r6, #0]
 8033172:	681e      	ldr	r6, [r3, #0]
 8033174:	6862      	ldr	r2, [r4, #4]
 8033176:	4630      	mov	r0, r6
 8033178:	f000 f970 	bl	803345c <memchr>
 803317c:	b108      	cbz	r0, 8033182 <_printf_i+0x1e6>
 803317e:	1b80      	subs	r0, r0, r6
 8033180:	6060      	str	r0, [r4, #4]
 8033182:	6863      	ldr	r3, [r4, #4]
 8033184:	6123      	str	r3, [r4, #16]
 8033186:	2300      	movs	r3, #0
 8033188:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 803318c:	e7aa      	b.n	80330e4 <_printf_i+0x148>
 803318e:	6923      	ldr	r3, [r4, #16]
 8033190:	4632      	mov	r2, r6
 8033192:	4649      	mov	r1, r9
 8033194:	4640      	mov	r0, r8
 8033196:	47d0      	blx	sl
 8033198:	3001      	adds	r0, #1
 803319a:	d0ad      	beq.n	80330f8 <_printf_i+0x15c>
 803319c:	6823      	ldr	r3, [r4, #0]
 803319e:	079b      	lsls	r3, r3, #30
 80331a0:	d413      	bmi.n	80331ca <_printf_i+0x22e>
 80331a2:	68e0      	ldr	r0, [r4, #12]
 80331a4:	9b03      	ldr	r3, [sp, #12]
 80331a6:	4298      	cmp	r0, r3
 80331a8:	bfb8      	it	lt
 80331aa:	4618      	movlt	r0, r3
 80331ac:	e7a6      	b.n	80330fc <_printf_i+0x160>
 80331ae:	2301      	movs	r3, #1
 80331b0:	4632      	mov	r2, r6
 80331b2:	4649      	mov	r1, r9
 80331b4:	4640      	mov	r0, r8
 80331b6:	47d0      	blx	sl
 80331b8:	3001      	adds	r0, #1
 80331ba:	d09d      	beq.n	80330f8 <_printf_i+0x15c>
 80331bc:	3501      	adds	r5, #1
 80331be:	68e3      	ldr	r3, [r4, #12]
 80331c0:	9903      	ldr	r1, [sp, #12]
 80331c2:	1a5b      	subs	r3, r3, r1
 80331c4:	42ab      	cmp	r3, r5
 80331c6:	dcf2      	bgt.n	80331ae <_printf_i+0x212>
 80331c8:	e7eb      	b.n	80331a2 <_printf_i+0x206>
 80331ca:	2500      	movs	r5, #0
 80331cc:	f104 0619 	add.w	r6, r4, #25
 80331d0:	e7f5      	b.n	80331be <_printf_i+0x222>
 80331d2:	bf00      	nop
 80331d4:	080386d5 	.word	0x080386d5
 80331d8:	080386e6 	.word	0x080386e6

080331dc <__sflush_r>:
 80331dc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80331e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80331e4:	0716      	lsls	r6, r2, #28
 80331e6:	4605      	mov	r5, r0
 80331e8:	460c      	mov	r4, r1
 80331ea:	d454      	bmi.n	8033296 <__sflush_r+0xba>
 80331ec:	684b      	ldr	r3, [r1, #4]
 80331ee:	2b00      	cmp	r3, #0
 80331f0:	dc02      	bgt.n	80331f8 <__sflush_r+0x1c>
 80331f2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80331f4:	2b00      	cmp	r3, #0
 80331f6:	dd48      	ble.n	803328a <__sflush_r+0xae>
 80331f8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80331fa:	2e00      	cmp	r6, #0
 80331fc:	d045      	beq.n	803328a <__sflush_r+0xae>
 80331fe:	2300      	movs	r3, #0
 8033200:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8033204:	682f      	ldr	r7, [r5, #0]
 8033206:	6a21      	ldr	r1, [r4, #32]
 8033208:	602b      	str	r3, [r5, #0]
 803320a:	d030      	beq.n	803326e <__sflush_r+0x92>
 803320c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 803320e:	89a3      	ldrh	r3, [r4, #12]
 8033210:	0759      	lsls	r1, r3, #29
 8033212:	d505      	bpl.n	8033220 <__sflush_r+0x44>
 8033214:	6863      	ldr	r3, [r4, #4]
 8033216:	1ad2      	subs	r2, r2, r3
 8033218:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 803321a:	b10b      	cbz	r3, 8033220 <__sflush_r+0x44>
 803321c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 803321e:	1ad2      	subs	r2, r2, r3
 8033220:	2300      	movs	r3, #0
 8033222:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8033224:	6a21      	ldr	r1, [r4, #32]
 8033226:	4628      	mov	r0, r5
 8033228:	47b0      	blx	r6
 803322a:	1c43      	adds	r3, r0, #1
 803322c:	89a3      	ldrh	r3, [r4, #12]
 803322e:	d106      	bne.n	803323e <__sflush_r+0x62>
 8033230:	6829      	ldr	r1, [r5, #0]
 8033232:	291d      	cmp	r1, #29
 8033234:	d82b      	bhi.n	803328e <__sflush_r+0xb2>
 8033236:	4a2a      	ldr	r2, [pc, #168]	@ (80332e0 <__sflush_r+0x104>)
 8033238:	410a      	asrs	r2, r1
 803323a:	07d6      	lsls	r6, r2, #31
 803323c:	d427      	bmi.n	803328e <__sflush_r+0xb2>
 803323e:	2200      	movs	r2, #0
 8033240:	04d9      	lsls	r1, r3, #19
 8033242:	6062      	str	r2, [r4, #4]
 8033244:	6922      	ldr	r2, [r4, #16]
 8033246:	6022      	str	r2, [r4, #0]
 8033248:	d504      	bpl.n	8033254 <__sflush_r+0x78>
 803324a:	1c42      	adds	r2, r0, #1
 803324c:	d101      	bne.n	8033252 <__sflush_r+0x76>
 803324e:	682b      	ldr	r3, [r5, #0]
 8033250:	b903      	cbnz	r3, 8033254 <__sflush_r+0x78>
 8033252:	6560      	str	r0, [r4, #84]	@ 0x54
 8033254:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8033256:	602f      	str	r7, [r5, #0]
 8033258:	b1b9      	cbz	r1, 803328a <__sflush_r+0xae>
 803325a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 803325e:	4299      	cmp	r1, r3
 8033260:	d002      	beq.n	8033268 <__sflush_r+0x8c>
 8033262:	4628      	mov	r0, r5
 8033264:	f7ff fc9c 	bl	8032ba0 <_free_r>
 8033268:	2300      	movs	r3, #0
 803326a:	6363      	str	r3, [r4, #52]	@ 0x34
 803326c:	e00d      	b.n	803328a <__sflush_r+0xae>
 803326e:	2301      	movs	r3, #1
 8033270:	4628      	mov	r0, r5
 8033272:	47b0      	blx	r6
 8033274:	4602      	mov	r2, r0
 8033276:	1c50      	adds	r0, r2, #1
 8033278:	d1c9      	bne.n	803320e <__sflush_r+0x32>
 803327a:	682b      	ldr	r3, [r5, #0]
 803327c:	2b00      	cmp	r3, #0
 803327e:	d0c6      	beq.n	803320e <__sflush_r+0x32>
 8033280:	2b1d      	cmp	r3, #29
 8033282:	d001      	beq.n	8033288 <__sflush_r+0xac>
 8033284:	2b16      	cmp	r3, #22
 8033286:	d11d      	bne.n	80332c4 <__sflush_r+0xe8>
 8033288:	602f      	str	r7, [r5, #0]
 803328a:	2000      	movs	r0, #0
 803328c:	e021      	b.n	80332d2 <__sflush_r+0xf6>
 803328e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8033292:	b21b      	sxth	r3, r3
 8033294:	e01a      	b.n	80332cc <__sflush_r+0xf0>
 8033296:	690f      	ldr	r7, [r1, #16]
 8033298:	2f00      	cmp	r7, #0
 803329a:	d0f6      	beq.n	803328a <__sflush_r+0xae>
 803329c:	0793      	lsls	r3, r2, #30
 803329e:	680e      	ldr	r6, [r1, #0]
 80332a0:	600f      	str	r7, [r1, #0]
 80332a2:	bf0c      	ite	eq
 80332a4:	694b      	ldreq	r3, [r1, #20]
 80332a6:	2300      	movne	r3, #0
 80332a8:	eba6 0807 	sub.w	r8, r6, r7
 80332ac:	608b      	str	r3, [r1, #8]
 80332ae:	f1b8 0f00 	cmp.w	r8, #0
 80332b2:	ddea      	ble.n	803328a <__sflush_r+0xae>
 80332b4:	4643      	mov	r3, r8
 80332b6:	463a      	mov	r2, r7
 80332b8:	6a21      	ldr	r1, [r4, #32]
 80332ba:	4628      	mov	r0, r5
 80332bc:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80332be:	47b0      	blx	r6
 80332c0:	2800      	cmp	r0, #0
 80332c2:	dc08      	bgt.n	80332d6 <__sflush_r+0xfa>
 80332c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80332c8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80332cc:	f04f 30ff 	mov.w	r0, #4294967295
 80332d0:	81a3      	strh	r3, [r4, #12]
 80332d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80332d6:	4407      	add	r7, r0
 80332d8:	eba8 0800 	sub.w	r8, r8, r0
 80332dc:	e7e7      	b.n	80332ae <__sflush_r+0xd2>
 80332de:	bf00      	nop
 80332e0:	dfbffffe 	.word	0xdfbffffe

080332e4 <_fflush_r>:
 80332e4:	b538      	push	{r3, r4, r5, lr}
 80332e6:	690b      	ldr	r3, [r1, #16]
 80332e8:	4605      	mov	r5, r0
 80332ea:	460c      	mov	r4, r1
 80332ec:	b913      	cbnz	r3, 80332f4 <_fflush_r+0x10>
 80332ee:	2500      	movs	r5, #0
 80332f0:	4628      	mov	r0, r5
 80332f2:	bd38      	pop	{r3, r4, r5, pc}
 80332f4:	b118      	cbz	r0, 80332fe <_fflush_r+0x1a>
 80332f6:	6a03      	ldr	r3, [r0, #32]
 80332f8:	b90b      	cbnz	r3, 80332fe <_fflush_r+0x1a>
 80332fa:	f7ff fa79 	bl	80327f0 <__sinit>
 80332fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8033302:	2b00      	cmp	r3, #0
 8033304:	d0f3      	beq.n	80332ee <_fflush_r+0xa>
 8033306:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8033308:	07d0      	lsls	r0, r2, #31
 803330a:	d404      	bmi.n	8033316 <_fflush_r+0x32>
 803330c:	0599      	lsls	r1, r3, #22
 803330e:	d402      	bmi.n	8033316 <_fflush_r+0x32>
 8033310:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8033312:	f7ff fbd8 	bl	8032ac6 <__retarget_lock_acquire_recursive>
 8033316:	4628      	mov	r0, r5
 8033318:	4621      	mov	r1, r4
 803331a:	f7ff ff5f 	bl	80331dc <__sflush_r>
 803331e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8033320:	4605      	mov	r5, r0
 8033322:	07da      	lsls	r2, r3, #31
 8033324:	d4e4      	bmi.n	80332f0 <_fflush_r+0xc>
 8033326:	89a3      	ldrh	r3, [r4, #12]
 8033328:	059b      	lsls	r3, r3, #22
 803332a:	d4e1      	bmi.n	80332f0 <_fflush_r+0xc>
 803332c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 803332e:	f7ff fbcb 	bl	8032ac8 <__retarget_lock_release_recursive>
 8033332:	e7dd      	b.n	80332f0 <_fflush_r+0xc>

08033334 <__swbuf_r>:
 8033334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8033336:	460e      	mov	r6, r1
 8033338:	4614      	mov	r4, r2
 803333a:	4605      	mov	r5, r0
 803333c:	b118      	cbz	r0, 8033346 <__swbuf_r+0x12>
 803333e:	6a03      	ldr	r3, [r0, #32]
 8033340:	b90b      	cbnz	r3, 8033346 <__swbuf_r+0x12>
 8033342:	f7ff fa55 	bl	80327f0 <__sinit>
 8033346:	69a3      	ldr	r3, [r4, #24]
 8033348:	60a3      	str	r3, [r4, #8]
 803334a:	89a3      	ldrh	r3, [r4, #12]
 803334c:	071a      	lsls	r2, r3, #28
 803334e:	d501      	bpl.n	8033354 <__swbuf_r+0x20>
 8033350:	6923      	ldr	r3, [r4, #16]
 8033352:	b943      	cbnz	r3, 8033366 <__swbuf_r+0x32>
 8033354:	4621      	mov	r1, r4
 8033356:	4628      	mov	r0, r5
 8033358:	f000 f82a 	bl	80333b0 <__swsetup_r>
 803335c:	b118      	cbz	r0, 8033366 <__swbuf_r+0x32>
 803335e:	f04f 37ff 	mov.w	r7, #4294967295
 8033362:	4638      	mov	r0, r7
 8033364:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8033366:	6823      	ldr	r3, [r4, #0]
 8033368:	b2f6      	uxtb	r6, r6
 803336a:	6922      	ldr	r2, [r4, #16]
 803336c:	4637      	mov	r7, r6
 803336e:	1a98      	subs	r0, r3, r2
 8033370:	6963      	ldr	r3, [r4, #20]
 8033372:	4283      	cmp	r3, r0
 8033374:	dc05      	bgt.n	8033382 <__swbuf_r+0x4e>
 8033376:	4621      	mov	r1, r4
 8033378:	4628      	mov	r0, r5
 803337a:	f7ff ffb3 	bl	80332e4 <_fflush_r>
 803337e:	2800      	cmp	r0, #0
 8033380:	d1ed      	bne.n	803335e <__swbuf_r+0x2a>
 8033382:	68a3      	ldr	r3, [r4, #8]
 8033384:	3b01      	subs	r3, #1
 8033386:	60a3      	str	r3, [r4, #8]
 8033388:	6823      	ldr	r3, [r4, #0]
 803338a:	1c5a      	adds	r2, r3, #1
 803338c:	6022      	str	r2, [r4, #0]
 803338e:	701e      	strb	r6, [r3, #0]
 8033390:	1c43      	adds	r3, r0, #1
 8033392:	6962      	ldr	r2, [r4, #20]
 8033394:	429a      	cmp	r2, r3
 8033396:	d004      	beq.n	80333a2 <__swbuf_r+0x6e>
 8033398:	89a3      	ldrh	r3, [r4, #12]
 803339a:	07db      	lsls	r3, r3, #31
 803339c:	d5e1      	bpl.n	8033362 <__swbuf_r+0x2e>
 803339e:	2e0a      	cmp	r6, #10
 80333a0:	d1df      	bne.n	8033362 <__swbuf_r+0x2e>
 80333a2:	4621      	mov	r1, r4
 80333a4:	4628      	mov	r0, r5
 80333a6:	f7ff ff9d 	bl	80332e4 <_fflush_r>
 80333aa:	2800      	cmp	r0, #0
 80333ac:	d0d9      	beq.n	8033362 <__swbuf_r+0x2e>
 80333ae:	e7d6      	b.n	803335e <__swbuf_r+0x2a>

080333b0 <__swsetup_r>:
 80333b0:	b538      	push	{r3, r4, r5, lr}
 80333b2:	4b29      	ldr	r3, [pc, #164]	@ (8033458 <__swsetup_r+0xa8>)
 80333b4:	4605      	mov	r5, r0
 80333b6:	460c      	mov	r4, r1
 80333b8:	6818      	ldr	r0, [r3, #0]
 80333ba:	b118      	cbz	r0, 80333c4 <__swsetup_r+0x14>
 80333bc:	6a03      	ldr	r3, [r0, #32]
 80333be:	b90b      	cbnz	r3, 80333c4 <__swsetup_r+0x14>
 80333c0:	f7ff fa16 	bl	80327f0 <__sinit>
 80333c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80333c8:	0719      	lsls	r1, r3, #28
 80333ca:	d422      	bmi.n	8033412 <__swsetup_r+0x62>
 80333cc:	06da      	lsls	r2, r3, #27
 80333ce:	d407      	bmi.n	80333e0 <__swsetup_r+0x30>
 80333d0:	2209      	movs	r2, #9
 80333d2:	602a      	str	r2, [r5, #0]
 80333d4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80333d8:	f04f 30ff 	mov.w	r0, #4294967295
 80333dc:	81a3      	strh	r3, [r4, #12]
 80333de:	e033      	b.n	8033448 <__swsetup_r+0x98>
 80333e0:	0758      	lsls	r0, r3, #29
 80333e2:	d512      	bpl.n	803340a <__swsetup_r+0x5a>
 80333e4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80333e6:	b141      	cbz	r1, 80333fa <__swsetup_r+0x4a>
 80333e8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80333ec:	4299      	cmp	r1, r3
 80333ee:	d002      	beq.n	80333f6 <__swsetup_r+0x46>
 80333f0:	4628      	mov	r0, r5
 80333f2:	f7ff fbd5 	bl	8032ba0 <_free_r>
 80333f6:	2300      	movs	r3, #0
 80333f8:	6363      	str	r3, [r4, #52]	@ 0x34
 80333fa:	89a3      	ldrh	r3, [r4, #12]
 80333fc:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8033400:	81a3      	strh	r3, [r4, #12]
 8033402:	2300      	movs	r3, #0
 8033404:	6063      	str	r3, [r4, #4]
 8033406:	6923      	ldr	r3, [r4, #16]
 8033408:	6023      	str	r3, [r4, #0]
 803340a:	89a3      	ldrh	r3, [r4, #12]
 803340c:	f043 0308 	orr.w	r3, r3, #8
 8033410:	81a3      	strh	r3, [r4, #12]
 8033412:	6923      	ldr	r3, [r4, #16]
 8033414:	b94b      	cbnz	r3, 803342a <__swsetup_r+0x7a>
 8033416:	89a3      	ldrh	r3, [r4, #12]
 8033418:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 803341c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8033420:	d003      	beq.n	803342a <__swsetup_r+0x7a>
 8033422:	4621      	mov	r1, r4
 8033424:	4628      	mov	r0, r5
 8033426:	f000 f84c 	bl	80334c2 <__smakebuf_r>
 803342a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 803342e:	f013 0201 	ands.w	r2, r3, #1
 8033432:	d00a      	beq.n	803344a <__swsetup_r+0x9a>
 8033434:	2200      	movs	r2, #0
 8033436:	60a2      	str	r2, [r4, #8]
 8033438:	6962      	ldr	r2, [r4, #20]
 803343a:	4252      	negs	r2, r2
 803343c:	61a2      	str	r2, [r4, #24]
 803343e:	6922      	ldr	r2, [r4, #16]
 8033440:	b942      	cbnz	r2, 8033454 <__swsetup_r+0xa4>
 8033442:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8033446:	d1c5      	bne.n	80333d4 <__swsetup_r+0x24>
 8033448:	bd38      	pop	{r3, r4, r5, pc}
 803344a:	0799      	lsls	r1, r3, #30
 803344c:	bf58      	it	pl
 803344e:	6962      	ldrpl	r2, [r4, #20]
 8033450:	60a2      	str	r2, [r4, #8]
 8033452:	e7f4      	b.n	803343e <__swsetup_r+0x8e>
 8033454:	2000      	movs	r0, #0
 8033456:	e7f7      	b.n	8033448 <__swsetup_r+0x98>
 8033458:	20000254 	.word	0x20000254

0803345c <memchr>:
 803345c:	b2c9      	uxtb	r1, r1
 803345e:	4603      	mov	r3, r0
 8033460:	4402      	add	r2, r0
 8033462:	b510      	push	{r4, lr}
 8033464:	4293      	cmp	r3, r2
 8033466:	4618      	mov	r0, r3
 8033468:	d101      	bne.n	803346e <memchr+0x12>
 803346a:	2000      	movs	r0, #0
 803346c:	e003      	b.n	8033476 <memchr+0x1a>
 803346e:	7804      	ldrb	r4, [r0, #0]
 8033470:	3301      	adds	r3, #1
 8033472:	428c      	cmp	r4, r1
 8033474:	d1f6      	bne.n	8033464 <memchr+0x8>
 8033476:	bd10      	pop	{r4, pc}

08033478 <__swhatbuf_r>:
 8033478:	b570      	push	{r4, r5, r6, lr}
 803347a:	460c      	mov	r4, r1
 803347c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8033480:	b096      	sub	sp, #88	@ 0x58
 8033482:	4615      	mov	r5, r2
 8033484:	2900      	cmp	r1, #0
 8033486:	461e      	mov	r6, r3
 8033488:	da0c      	bge.n	80334a4 <__swhatbuf_r+0x2c>
 803348a:	89a3      	ldrh	r3, [r4, #12]
 803348c:	2100      	movs	r1, #0
 803348e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8033492:	bf14      	ite	ne
 8033494:	2340      	movne	r3, #64	@ 0x40
 8033496:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 803349a:	2000      	movs	r0, #0
 803349c:	6031      	str	r1, [r6, #0]
 803349e:	602b      	str	r3, [r5, #0]
 80334a0:	b016      	add	sp, #88	@ 0x58
 80334a2:	bd70      	pop	{r4, r5, r6, pc}
 80334a4:	466a      	mov	r2, sp
 80334a6:	f000 f849 	bl	803353c <_fstat_r>
 80334aa:	2800      	cmp	r0, #0
 80334ac:	dbed      	blt.n	803348a <__swhatbuf_r+0x12>
 80334ae:	9901      	ldr	r1, [sp, #4]
 80334b0:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80334b4:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80334b8:	4259      	negs	r1, r3
 80334ba:	4159      	adcs	r1, r3
 80334bc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80334c0:	e7eb      	b.n	803349a <__swhatbuf_r+0x22>

080334c2 <__smakebuf_r>:
 80334c2:	898b      	ldrh	r3, [r1, #12]
 80334c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80334c6:	079d      	lsls	r5, r3, #30
 80334c8:	4606      	mov	r6, r0
 80334ca:	460c      	mov	r4, r1
 80334cc:	d507      	bpl.n	80334de <__smakebuf_r+0x1c>
 80334ce:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80334d2:	6023      	str	r3, [r4, #0]
 80334d4:	6123      	str	r3, [r4, #16]
 80334d6:	2301      	movs	r3, #1
 80334d8:	6163      	str	r3, [r4, #20]
 80334da:	b003      	add	sp, #12
 80334dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80334de:	ab01      	add	r3, sp, #4
 80334e0:	466a      	mov	r2, sp
 80334e2:	f7ff ffc9 	bl	8033478 <__swhatbuf_r>
 80334e6:	9f00      	ldr	r7, [sp, #0]
 80334e8:	4605      	mov	r5, r0
 80334ea:	4630      	mov	r0, r6
 80334ec:	4639      	mov	r1, r7
 80334ee:	f7ff f859 	bl	80325a4 <_malloc_r>
 80334f2:	b948      	cbnz	r0, 8033508 <__smakebuf_r+0x46>
 80334f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80334f8:	059a      	lsls	r2, r3, #22
 80334fa:	d4ee      	bmi.n	80334da <__smakebuf_r+0x18>
 80334fc:	f023 0303 	bic.w	r3, r3, #3
 8033500:	f043 0302 	orr.w	r3, r3, #2
 8033504:	81a3      	strh	r3, [r4, #12]
 8033506:	e7e2      	b.n	80334ce <__smakebuf_r+0xc>
 8033508:	89a3      	ldrh	r3, [r4, #12]
 803350a:	6020      	str	r0, [r4, #0]
 803350c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8033510:	81a3      	strh	r3, [r4, #12]
 8033512:	9b01      	ldr	r3, [sp, #4]
 8033514:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8033518:	b15b      	cbz	r3, 8033532 <__smakebuf_r+0x70>
 803351a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 803351e:	4630      	mov	r0, r6
 8033520:	f000 f81e 	bl	8033560 <_isatty_r>
 8033524:	b128      	cbz	r0, 8033532 <__smakebuf_r+0x70>
 8033526:	89a3      	ldrh	r3, [r4, #12]
 8033528:	f023 0303 	bic.w	r3, r3, #3
 803352c:	f043 0301 	orr.w	r3, r3, #1
 8033530:	81a3      	strh	r3, [r4, #12]
 8033532:	89a3      	ldrh	r3, [r4, #12]
 8033534:	431d      	orrs	r5, r3
 8033536:	81a5      	strh	r5, [r4, #12]
 8033538:	e7cf      	b.n	80334da <__smakebuf_r+0x18>
	...

0803353c <_fstat_r>:
 803353c:	b538      	push	{r3, r4, r5, lr}
 803353e:	2300      	movs	r3, #0
 8033540:	4d06      	ldr	r5, [pc, #24]	@ (803355c <_fstat_r+0x20>)
 8033542:	4604      	mov	r4, r0
 8033544:	4608      	mov	r0, r1
 8033546:	4611      	mov	r1, r2
 8033548:	602b      	str	r3, [r5, #0]
 803354a:	f7cd fcdc 	bl	8000f06 <_fstat>
 803354e:	1c43      	adds	r3, r0, #1
 8033550:	d102      	bne.n	8033558 <_fstat_r+0x1c>
 8033552:	682b      	ldr	r3, [r5, #0]
 8033554:	b103      	cbz	r3, 8033558 <_fstat_r+0x1c>
 8033556:	6023      	str	r3, [r4, #0]
 8033558:	bd38      	pop	{r3, r4, r5, pc}
 803355a:	bf00      	nop
 803355c:	20083584 	.word	0x20083584

08033560 <_isatty_r>:
 8033560:	b538      	push	{r3, r4, r5, lr}
 8033562:	2300      	movs	r3, #0
 8033564:	4d05      	ldr	r5, [pc, #20]	@ (803357c <_isatty_r+0x1c>)
 8033566:	4604      	mov	r4, r0
 8033568:	4608      	mov	r0, r1
 803356a:	602b      	str	r3, [r5, #0]
 803356c:	f7cd fcd0 	bl	8000f10 <_isatty>
 8033570:	1c43      	adds	r3, r0, #1
 8033572:	d102      	bne.n	803357a <_isatty_r+0x1a>
 8033574:	682b      	ldr	r3, [r5, #0]
 8033576:	b103      	cbz	r3, 803357a <_isatty_r+0x1a>
 8033578:	6023      	str	r3, [r4, #0]
 803357a:	bd38      	pop	{r3, r4, r5, pc}
 803357c:	20083584 	.word	0x20083584

08033580 <_init>:
 8033580:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8033582:	bf00      	nop
 8033584:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8033586:	bc08      	pop	{r3}
 8033588:	469e      	mov	lr, r3
 803358a:	4770      	bx	lr

0803358c <_fini>:
 803358c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803358e:	bf00      	nop
 8033590:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8033592:	bc08      	pop	{r3}
 8033594:	469e      	mov	lr, r3
 8033596:	4770      	bx	lr
